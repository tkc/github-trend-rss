<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Sat, 30 Aug 2025 00:04:25 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[asgeirtj/system_prompts_leaks]]></title>
            <link>https://github.com/asgeirtj/system_prompts_leaks</link>
            <guid>https://github.com/asgeirtj/system_prompts_leaks</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:25 GMT</pubDate>
            <description><![CDATA[Collection of extracted System Prompts from popular chatbots like ChatGPT, Claude & Gemini]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/asgeirtj/system_prompts_leaks">asgeirtj/system_prompts_leaks</a></h1>
            <p>Collection of extracted System Prompts from popular chatbots like ChatGPT, Claude & Gemini</p>
            <p>Language: JavaScript</p>
            <p>Stars: 17,087</p>
            <p>Forks: 2,809</p>
            <p>Stars today: 2,081 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[GoogleChrome/lighthouse]]></title>
            <link>https://github.com/GoogleChrome/lighthouse</link>
            <guid>https://github.com/GoogleChrome/lighthouse</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:24 GMT</pubDate>
            <description><![CDATA[Automated auditing, performance metrics, and best practices for the web.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/GoogleChrome/lighthouse">GoogleChrome/lighthouse</a></h1>
            <p>Automated auditing, performance metrics, and best practices for the web.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 29,315</p>
            <p>Forks: 9,558</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[vercel/next.js]]></title>
            <link>https://github.com/vercel/next.js</link>
            <guid>https://github.com/vercel/next.js</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:23 GMT</pubDate>
            <description><![CDATA[The React Framework]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vercel/next.js">vercel/next.js</a></h1>
            <p>The React Framework</p>
            <p>Language: JavaScript</p>
            <p>Stars: 134,081</p>
            <p>Forks: 29,179</p>
            <p>Stars today: 32 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[upstash/context7]]></title>
            <link>https://github.com/upstash/context7</link>
            <guid>https://github.com/upstash/context7</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:22 GMT</pubDate>
            <description><![CDATA[Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/upstash/context7">upstash/context7</a></h1>
            <p>Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors</p>
            <p>Language: JavaScript</p>
            <p>Stars: 28,056</p>
            <p>Forks: 1,422</p>
            <p>Stars today: 206 stars today</p>
            <h2>README</h2><pre>![Cover](public/cover.png)

# Context7 MCP - Up-to-date Code Docs For Any Prompt

[![Website](https://img.shields.io/badge/Website-context7.com-blue)](https://context7.com) [![smithery badge](https://smithery.ai/badge/@upstash/context7-mcp)](https://smithery.ai/server/@upstash/context7-mcp)

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=context7&amp;config=eyJ1cmwiOiJodHRwczovL21jcC5jb250ZXh0Ny5jb20vbWNwIn0%3D) [&lt;img alt=&quot;Install in VS Code (npx)&quot; src=&quot;https://img.shields.io/badge/Install%20in%20VS%20Code-0098FF?style=for-the-badge&amp;logo=visualstudiocode&amp;logoColor=white&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)

[![ÁπÅÈ´î‰∏≠Êñá](https://img.shields.io/badge/docs-ÁπÅÈ´î‰∏≠Êñá-yellow)](./docs/README.zh-TW.md) [![ÁÆÄ‰Ωì‰∏≠Êñá](https://img.shields.io/badge/docs-ÁÆÄ‰Ωì‰∏≠Êñá-yellow)](./docs/README.zh-CN.md) [![Êó•Êú¨Ë™û](https://img.shields.io/badge/docs-Êó•Êú¨Ë™û-b7003a)](./docs/README.ja.md) [![ÌïúÍµ≠Ïñ¥ Î¨∏ÏÑú](https://img.shields.io/badge/docs-ÌïúÍµ≠Ïñ¥-green)](./docs/README.ko.md) [![Documentaci√≥n en Espa√±ol](https://img.shields.io/badge/docs-Espa√±ol-orange)](./docs/README.es.md) [![Documentation en Fran√ßais](https://img.shields.io/badge/docs-Fran√ßais-blue)](./docs/README.fr.md) [![Documenta√ß√£o em Portugu√™s (Brasil)](&lt;https://img.shields.io/badge/docs-Portugu√™s%20(Brasil)-purple&gt;)](./docs/README.pt-BR.md) [![Documentazione in italiano](https://img.shields.io/badge/docs-Italian-red)](./docs/README.it.md) [![Dokumentasi Bahasa Indonesia](https://img.shields.io/badge/docs-Bahasa%20Indonesia-pink)](./docs/README.id-ID.md) [![Dokumentation auf Deutsch](https://img.shields.io/badge/docs-Deutsch-darkgreen)](./docs/README.de.md) [![–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ](https://img.shields.io/badge/docs-–†—É—Å—Å–∫–∏–π-darkblue)](./docs/README.ru.md) [![–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è](https://img.shields.io/badge/docs-–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞-lightblue)](./docs/README.uk.md) [![T√ºrk√ße Dok√ºman](https://img.shields.io/badge/docs-T√ºrk√ße-blue)](./docs/README.tr.md) [![Arabic Documentation](https://img.shields.io/badge/docs-Arabic-white)](./docs/README.ar.md) [![Ti·∫øng Vi·ªát](https://img.shields.io/badge/docs-Ti·∫øng%20Vi·ªát-red)](./docs/README.vi.md)

## ‚ùå Without Context7

LLMs rely on outdated or generic information about the libraries you use. You get:

- ‚ùå Code examples are outdated and based on year-old training data
- ‚ùå Hallucinated APIs don&#039;t even exist
- ‚ùå Generic answers for old package versions

## ‚úÖ With Context7

Context7 MCP pulls up-to-date, version-specific documentation and code examples straight from the source ‚Äî and places them directly into your prompt.

Add `use context7` to your prompt in Cursor:

```txt
Create a Next.js middleware that checks for a valid JWT in cookies and redirects unauthenticated users to `/login`. use context7
```

```txt
Configure a Cloudflare Worker script to cache JSON API responses for five minutes. use context7
```

Context7 fetches up-to-date code examples and documentation right into your LLM&#039;s context.

- 1Ô∏è‚É£ Write your prompt naturally
- 2Ô∏è‚É£ Tell the LLM to `use context7`
- 3Ô∏è‚É£ Get working code answers

No tab-switching, no hallucinated APIs that don&#039;t exist, no outdated code generations.

## üìö Adding Projects

Check out our [project addition guide](./docs/adding-projects.md) to learn how to add (or update) your favorite libraries to Context7.

## üõ†Ô∏è Installation

### Requirements

- Node.js &gt;= v18.0.0
- Cursor, Claude Code, VSCode, Windsurf or another MCP Client
- Context7 API Key (Optional for higher rate limits) (Get yours by creating an account at [context7.com/dashboard](https://context7.com/dashboard))

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Installing via Smithery&lt;/b&gt;&lt;/summary&gt;

To install Context7 MCP Server for any client automatically via [Smithery](https://smithery.ai/server/@upstash/context7-mcp):

```bash
npx -y @smithery/cli@latest install @upstash/context7-mcp --client &lt;CLIENT_NAME&gt; --key &lt;YOUR_SMITHERY_KEY&gt;
```

You can find your Smithery key in the [Smithery.ai webpage](https://smithery.ai/server/@upstash/context7-mcp).

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Cursor&lt;/b&gt;&lt;/summary&gt;

Go to: `Settings` -&gt; `Cursor Settings` -&gt; `MCP` -&gt; `Add new global MCP server`

Pasting the following configuration into your Cursor `~/.cursor/mcp.json` file is the recommended approach. You may also install in a specific project by creating `.cursor/mcp.json` in your project folder. See [Cursor MCP docs](https://docs.cursor.com/context/model-context-protocol) for more info.

&gt; Since Cursor 1.0, you can click the install button below for instant one-click installation.

#### Cursor Remote Server Connection

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=context7&amp;config=eyJ1cmwiOiJodHRwczovL21jcC5jb250ZXh0Ny5jb20vbWNwIn0%3D)

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
      }
    }
  }
}
```

#### Cursor Local Server Connection

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=context7&amp;config=eyJjb21tYW5kIjoibnB4IC15IEB1cHN0YXNoL2NvbnRleHQ3LW1jcCJ9)

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Claude Code&lt;/b&gt;&lt;/summary&gt;

Run this command. See [Claude Code MCP docs](https://docs.anthropic.com/en/docs/claude-code/mcp) for more info.

#### Claude Code Remote Server Connection

```sh
claude mcp add --transport http context7 https://mcp.context7.com/mcp --header &quot;CONTEXT7_API_KEY: YOUR_API_KEY&quot;
```

Or using SSE transport:

```sh
claude mcp add --transport sse context7 https://mcp.context7.com/sse --header &quot;CONTEXT7_API_KEY: YOUR_API_KEY&quot;
```

#### Claude Code Local Server Connection

```sh
claude mcp add context7 -- npx -y @upstash/context7-mcp --api-key YOUR_API_KEY
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Windsurf&lt;/b&gt;&lt;/summary&gt;

Add this to your Windsurf MCP config file. See [Windsurf MCP docs](https://docs.windsurf.com/windsurf/cascade/mcp) for more info.

#### Windsurf Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;serverUrl&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
      }
    }
  }
}
```

#### Windsurf Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in VS Code&lt;/b&gt;&lt;/summary&gt;

[&lt;img alt=&quot;Install in VS Code (npx)&quot; src=&quot;https://img.shields.io/badge/VS_Code-VS_Code?style=flat-square&amp;label=Install%20Context7%20MCP&amp;color=0098FF&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)
[&lt;img alt=&quot;Install in VS Code Insiders (npx)&quot; src=&quot;https://img.shields.io/badge/VS_Code_Insiders-VS_Code_Insiders?style=flat-square&amp;label=Install%20Context7%20MCP&amp;color=24bfa5&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode-insiders%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)

Add this to your VS Code MCP config file. See [VS Code MCP docs](https://code.visualstudio.com/docs/copilot/chat/mcp-servers) for more info.

#### VS Code Remote Server Connection

```json
&quot;mcp&quot;: {
  &quot;servers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;http&quot;,
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
      }
    }
  }
}
```

#### VS Code Local Server Connection

```json
&quot;mcp&quot;: {
  &quot;servers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;stdio&quot;,
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;
&lt;b&gt;Install in Cline&lt;/b&gt;
&lt;/summary&gt;

You can easily install Context7 through the [Cline MCP Server Marketplace](https://cline.bot/mcp-marketplace) by following these instructions:

1. Open **Cline**.
2. Click the hamburger menu icon (‚ò∞) to enter the **MCP Servers** section.
3. Use the search bar within the **Marketplace** tab to find _Context7_.
4. Click the **Install** button.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Zed&lt;/b&gt;&lt;/summary&gt;

It can be installed via [Zed Extensions](https://zed.dev/extensions?query=Context7) or you can add this to your Zed `settings.json`. See [Zed Context Server docs](https://zed.dev/docs/assistant/context-servers) for more info.

```json
{
  &quot;context_servers&quot;: {
    &quot;Context7&quot;: {
      &quot;command&quot;: {
        &quot;path&quot;: &quot;npx&quot;,
        &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
      },
      &quot;settings&quot;: {}
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Augment Code&lt;/b&gt;&lt;/summary&gt;

To configure Context7 MCP in Augment Code, you can use either the graphical interface or manual configuration.

### **A. Using the Augment Code UI**

1. Click the hamburger menu.
2. Select **Settings**.
3. Navigate to the **Tools** section.
4. Click the **+ Add MCP** button.
5. Enter the following command:

   ```
   npx -y @upstash/context7-mcp@latest
   ```

6. Name the MCP: **Context7**.
7. Click the **Add** button.

Once the MCP server is added, you can start using Context7&#039;s up-to-date code documentation features directly within Augment Code.

---

### **B. Manual Configuration**

1. Press Cmd/Ctrl Shift P or go to the hamburger menu in the Augment panel
2. Select Edit Settings
3. Under Advanced, click Edit in settings.json
4. Add the server configuration to the `mcpServers` array in the `augment.advanced` object

```json
&quot;augment.advanced&quot;: {
  &quot;mcpServers&quot;: [
    {
      &quot;name&quot;: &quot;context7&quot;,
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  ]
}
```

Once the MCP server is added, restart your editor. If you receive any errors, check the syntax to make sure closing brackets or commas are not missing.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Roo Code&lt;/b&gt;&lt;/summary&gt;

Add this to your Roo Code MCP configuration file. See [Roo Code MCP docs](https://docs.roocode.com/features/mcp/using-mcp-in-roo) for more info.

#### Roo Code Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;streamable-http&quot;,
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

#### Roo Code Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Gemini CLI&lt;/b&gt;&lt;/summary&gt;

See [Gemini CLI Configuration](https://google-gemini.github.io/gemini-cli/docs/tools/mcp-server.html) for details.

1.  Open the Gemini CLI settings file. The location is `~/.gemini/settings.json` (where `~` is your home directory).
2.  Add the following to the `mcpServers` object in your `settings.json` file:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;httpUrl&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
      }
    }
  }
}
```

Or, for a local server:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

If the `mcpServers` object does not exist, create it.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Claude Desktop&lt;/b&gt;&lt;/summary&gt;

#### Remote Server Connection

Open Claude Desktop and navigate to Settings &gt; Connectors &gt; Add Custom Connector. Enter the name as `Context7` and the remote MCP server URL as `https://mcp.context7.com/mcp`.

#### Local Server Connection

Open Claude Desktop developer settings and edit your `claude_desktop_config.json` file to add the following configuration. See [Claude Desktop MCP docs](https://modelcontextprotocol.io/quickstart/user) for more info.

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Opencode&lt;/b&gt;&lt;/summary&gt;

Add this to your Opencode configuration file. See [Opencode MCP docs](https://opencode.ai/docs/mcp-servers) docs for more info.

#### Opencode Remote Server Connection

```json
&quot;mcp&quot;: {
  &quot;context7&quot;: {
    &quot;type&quot;: &quot;remote&quot;,
    &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;,
    &quot;headers&quot;: {
      &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
    },
    &quot;enabled&quot;: true
  }
}
```

#### Opencode Local Server Connection

```json
{
  &quot;mcp&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;local&quot;,
      &quot;command&quot;: [&quot;npx&quot;, &quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;],
      &quot;enabled&quot;: true
    }
  }
}
```

&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in OpenAI Codex&lt;/b&gt;&lt;/summary&gt;

See [OpenAI Codex](https://github.com/openai/codex) for more information.

Add the following configuration to your OpenAI Codex MCP server settings:

```toml
[mcp_servers.context7]
args = [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
command = &quot;npx&quot;
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in JetBrains AI Assistant&lt;/b&gt;&lt;/summary&gt;

See [JetBrains AI Assistant Documentation](https://www.jetbrains.com/help/ai-assistant/configure-an-mcp-server.html) for more details.

1. In JetBrains IDEs go to `Settings` -&gt; `Tools` -&gt; `AI Assistant` -&gt; `Model Context Protocol (MCP)`
2. Click `+ Add`.
3. Click on `Command` in the top-left corner of the dialog and select the As JSON option from the list
4. Add this configuration and click `OK`

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

5. Click `Apply` to save changes.
6. The same way context7 could be added for JetBrains Junie in `Settings` -&gt; `Tools` -&gt; `Junie` -&gt; `MCP Settings`

&lt;/details&gt;

&lt;details&gt;
  
&lt;summary&gt;&lt;b&gt;Install in Kiro&lt;/b&gt;&lt;/summary&gt;

See [Kiro Model Context Protocol Documentation](https://kiro.dev/docs/mcp/configuration/) for details.

1. Navigate `Kiro` &gt; `MCP Servers`
2. Add a new MCP server by clicking the `+ Add` button.
3. Paste the configuration given below:

```json
{
  &quot;mcpServers&quot;: {
    &quot;Context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;],
      &quot;env&quot;: {},
      &quot;disabled&quot;: false,
      &quot;autoApprove&quot;: []
    }
  }
}
```

4. Click `Save` to apply the changes.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Trae&lt;/b&gt;&lt;/summary&gt;

Use the Add manually feature and fill in the JSON configuration information for that MCP server.
For more details, visit the [Trae documentation](https://docs.trae.ai/ide/model-context-protocol?_lang=en).

#### Trae Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

#### Trae Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Using Bun or Deno&lt;/b&gt;&lt;/summary&gt;

Use these alternatives to run the local Context7 MCP server with other runtimes. These examples work for any client that supports launching a local MCP server via command + args.

#### Bun

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;bunx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

#### Deno

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;deno&quot;,
      &quot;args&quot;: [
        &quot;run&quot;,
        &quot;--allow-env=NO_DEPRECATION,TRACE_DEPRECATION&quot;,
        &quot;--allow-net&quot;,
        &quot;npm:@upstash/context7-mcp&quot;
      ]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Using Docker&lt;/b&gt;&lt;/summary&gt;

If you prefer to run the MCP server in a Docker container:

1. **Build the Docker Image:**

   First, create a `Dockerfile` in the project root (or anywhere you prefer):

   &lt;details&gt;
   &lt;summary&gt;Click to see Dockerfile content&lt;/summary&gt;

   ```Dockerfile
   FROM node:18-alpine

   WORKDIR /app

   # Install the latest version globally
   RUN npm install -g @upstash/context7-mcp

   # Expose default port if needed (optional, depends on MCP client interaction)
   # EXPOSE 3000

   # Default command to run the server
   CMD [&quot;context7-mcp&quot;]
   ```

   &lt;/details&gt;

   Then, build the image using a tag (e.g., `context7-mcp`). **Make sure Docker Desktop (or the Docker daemon) is running.** Run the following command in the same directory where you saved the `Dockerfile`:

   ```bash
   docker build -t context7-mcp .
   ```

2. **Configure Your MCP Client:**

   Update your MCP client&#039;s configuration to use the Docker command.

   _Example for a cline_mcp_settings.json:_

   ```json
   {
     &quot;mcpServers&quot;: {
       &quot;–°ontext7&quot;: {
         &quot;autoApprove&quot;: [],
         &quot;disabled&quot;: false,
         &quot;timeout&quot;: 60,
         &quot;command&quot;: &quot;docker&quot;,
         &quot;args&quot;: [&quot;run&quot;, &quot;-i&quot;, &quot;--rm&quot;, &quot;context7-mcp&quot;],
         &quot;transportType&quot;: &quot;stdio&quot;
       }
     }
   }
   ```

   _Note: This is an example configuration. Please refer to the specific examples for your MCP client (like Cursor, VS Code, etc.) earlier in this README to adapt the structure (e.g., `mcpServers` vs `servers`). Also, ensure the image name in `args` matches the tag used during the `docker build` command._

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install Using the Desktop Extension&lt;/b&gt;&lt;/summary&gt;

Install the [context7.dxt](dxt/context7.dxt) file under the dxt folder and add it to your client. For more information please check out [the desktop extensions docs](https://github.com/anthropics/dxt#desktop-extensions-dxt).

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Windows&lt;/b&gt;&lt;/summary&gt;

The configuration on Windows is slightly different compared to Linux or macOS (_`Cline` is used in the example_). The same principle applies to other editors; refer to the configuration of `command` and `args`.

```json
{
  &quot;mcpServers&quot;: {
    &quot;github.com/upstash/context7-mcp&quot;: {
      &quot;command&quot;: &quot;cmd&quot;,
      &quot;args&quot;: [&quot;/c&quot;, &quot;npx&quot;, &quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;],
      &quot;disabled&quot;: false,
      &quot;autoApprove&quot;: []
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Amazon Q Developer CLI&lt;/b&gt;&lt;/summary&gt;

Add this to your Amazon Q Developer CLI configuration file. See [Amazon Q Developer CLI docs](https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line-mcp-configuration.html) for more details.

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Warp&lt;/b&gt;&lt;/summary&gt;

See [Warp Model Context Protocol Documentation](https://docs.warp.dev/knowledge-and-collaboration/mcp#adding-an-mcp-server) for details.

1. Navigate `Settings` &gt; `AI` &gt; `Manage MCP servers`.
2. Add a new MCP server by clicking the `+ Add` button.
3. Paste the configuration given below:

```json
{
  &quot;Context7&quot;: {
    &quot;command&quot;: &quot;npx&quot;,
    &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;],
    &quot;env&quot;: {},
    &quot;working_directory&quot;: null,
    &quot;start_on_launch&quot;: true
  }
}
```

4. Click `Save` to apply the changes.

&lt;/details&gt;

&lt;details&gt;

&lt;summary&gt;&lt;b&gt;Install in Copilot Coding Agent&lt;/b&gt;&lt;/summary&gt;

## Using Context7 with Copilot Coding Agent

Add the following configuration to the `mcp` section of your Copilot Coding Agent configuration file Repository-&gt;Settings-&gt;Copilot-&gt;Coding agent-&gt;MCP configuration:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;http&quot;,
      &quot;url&quot;: &quot;https:

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[therealgliz/blooket-hacks]]></title>
            <link>https://github.com/therealgliz/blooket-hacks</link>
            <guid>https://github.com/therealgliz/blooket-hacks</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:21 GMT</pubDate>
            <description><![CDATA[Multiple game hacks to use so the game become easier to play!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/therealgliz/blooket-hacks">therealgliz/blooket-hacks</a></h1>
            <p>Multiple game hacks to use so the game become easier to play!</p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,171</p>
            <p>Forks: 3,779</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre># blooket-hack

Hell i&#039;m actually gliz who created the blooket hacks. I got the repo from the guy who was impersonating me. 

**This repo will not be updated at all. If you have any questions join the discord server below I&#039;ll be answering them.**

**discord server: https://discord.gg/Nj9Zs5VtFp**

Proof thats it me: ![image](https://user-images.githubusercontent.com/108590774/177013795-80b0e338-fa58-4eba-837f-340bab0c4e9a.png)


# Contact

if you want to contact me just dm me on twitter https://twitter.com/glizuwu
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[usebruno/bruno]]></title>
            <link>https://github.com/usebruno/bruno</link>
            <guid>https://github.com/usebruno/bruno</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:20 GMT</pubDate>
            <description><![CDATA[Opensource IDE For Exploring and Testing API's (lightweight alternative to Postman/Insomnia)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/usebruno/bruno">usebruno/bruno</a></h1>
            <p>Opensource IDE For Exploring and Testing API's (lightweight alternative to Postman/Insomnia)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 36,498</p>
            <p>Forks: 1,821</p>
            <p>Stars today: 22 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[UseInterstellar/Interstellar]]></title>
            <link>https://github.com/UseInterstellar/Interstellar</link>
            <guid>https://github.com/UseInterstellar/Interstellar</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:19 GMT</pubDate>
            <description><![CDATA[One of the most popular modern web proxies with blazing fast speeds and a variety of games.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/UseInterstellar/Interstellar">UseInterstellar/Interstellar</a></h1>
            <p>One of the most popular modern web proxies with blazing fast speeds and a variety of games.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,611</p>
            <p>Forks: 19,420</p>
            <p>Stars today: 1 star today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/UseInterstellar/Interstellar/main/.github/branding/in.png&quot;&gt;
    &lt;p&gt;Serving over 15 million users since 2022.&lt;p&gt;
    &lt;p&gt;Interstellar is a web proxy with a Clean and Sleek UI and easy to use menus. Our goal is to provide the best user experience to everyone.&lt;/p&gt;
&lt;/div&gt;

![inpreview](https://github.com/UseInterstellar/Interstellar/assets/89202835/2669efed-5186-4932-83c4-725acae60bd2)

&gt; [!IMPORTANT]
&gt; If you fork this project, consider giving it a star in the original repository!

**Join Our [Discord Community](https://discord.gg/interstellar) for support, more links, and an active community!**

## Features

- About:Blank Cloaking
- Tab Cloaking
- Wide collection of apps &amp; games
- Clean, Easy to use UI
- Inspect Element
- Various Themes
- Password Protection (Optional)
- Built-in Tab System
- Now.gg Support
- Fast Speeds
- Geforce NOW Support

## Deployment

&gt; [!IMPORTANT]
&gt; You **cannot** deploy to static web hosts, including Netlify, Cloudflare Pages, and GitHub Pages.

### Password Protection

1. Go to the `config.js` file and set `challenge` to **true**. Then, set the environment variable as follows:
2. For PNPM: Run either `config=true pnpm start` or `$env:config=true; pnpm start`, depending on your server.
3. For Bun: Run either `config=true bun start` or `$env:config=true; bun start` if you prefer Bun.
4. For NPM: Run either `config=true npm start` or `$env:config=true; npm start` if you prefer NPM.


### Server Deployment

You must run these commands on your server:

```bash
git clone https://github.com/UseInterstellar/Interstellar
cd Interstellar
```

#### Ad-Free Deployment

```bash
git clone --branch Ad-Free https://github.com/UseInterstellar/Interstellar
cd Interstellar
```

Next depending on your package manager, run one of the following commands:

#### Bun

If you are using Bun, run the following commands:

```bash
bun i
bun start
```

#### pnpm

If you are using pnpm, run the following commands:

```bash
pnpm i
pnpm start
```

#### npm

If you are using npm, run the following commands:

```bash
npm i
npm run start
```

### Updating

```bash
cd Interstellar
git pull --force --allow-unrelated-histories # This may overwrite your local changes
```

&lt;a target=&quot;_blank&quot; href=&quot;https://heroku.com/deploy/?template=https://github.com/UseInterstellar/Interstellar&quot;&gt;&lt;img alt=&quot;Deploy to Heroku&quot; src=&quot;https://binbashbanana.github.io/deploy-buttons/buttons/remade/heroku.svg&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://app.koyeb.com/deploy?type=git&amp;repository=github.com/UseInterstellar/Interstellar&quot;&gt;&lt;img alt=&quot;Deploy to Koyeb&quot; src=&quot;https://binbashbanana.github.io/deploy-buttons/buttons/remade/koyeb.svg&quot;&gt;&lt;/a&gt;

### Deployment Alternatives

For more deployment options, join our [Discord Server](https://discord.gg/interstellar) for various ways to deploy Interstellar.
This includes methods of deploying to Render/OnRender.

#### What happened to Replit Deployment?

As of January 1st, 2024, Replit is [no longer free](https://blog.replit.com/hosting-changes). Try GitHub Codespaces instead.

### GitHub Codespaces

&gt; [!NOTE]
&gt; If you&#039;re setting the port below 1023, then you must run `sudo PORT=1023`

1. Create a GitHub account if you haven&#039;t already.
2. Click &quot;Code&quot; (green button) and then &quot;Create Codespace on main.&quot;
3. In the terminal at the bottom, paste `pnpm i &amp;&amp; pnpm start`.
4. Respond to the application popup by clicking &quot;Make public.&quot;
&gt; [!IMPORTANT]
&gt; Make sure you click the &quot;Make public.&quot; button, or the proxy won&#039;t function properly.&lt;br&gt;
&gt; If you get a Range Error, go back and make sure you clicked Make public!
5. Access the deployed website from the ports tab.
6. For subsequent uses in the same codespace, just run `pnpm start`

### Solution for if there is no popup.

1. Run `pnpm i`, and before `pnpm start`, prepend `PORT=8080`, replacing 8080 with another port. For example, `PORT=6969 pnpm start`.
2. If this does not work then you can prepend `$env:PORT=8080;`, replacing 8080 with another port. For example, `$env:PORT=6969; pnpm start`
3. Go to the ports tab, Click Forward A Port, And type the port number.
4. Right-click Visibility and set Port Visibility to Public.

&gt; [!NOTE]
&gt; We are committed to making Interstellar easy and personalized however, as of now we need your support in making it ad-free. Consider keeping ads so Interstellar can run freely or contribute by being a supporter.

## Report Issues

If you encounter problems, open an issue on GitHub, and we&#039;ll address it promptly.

&gt; [!TIP]
&gt; If you&#039;re having trouble, don&#039;t hesitate to reach out to us on [Discord](https://discord.gg/interstellar) for personalized support.

# Credits

A huge thanks goes out to all of the people who have contributed to Interstellar.

[![Contributors](https://contrib.rocks/image?repo=UseInterstellar/Interstellar)](https://github.com/UseInterstellar/Interstellar/graphs/contributors)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[FortAwesome/Font-Awesome]]></title>
            <link>https://github.com/FortAwesome/Font-Awesome</link>
            <guid>https://github.com/FortAwesome/Font-Awesome</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:18 GMT</pubDate>
            <description><![CDATA[The iconic SVG, font, and CSS toolkit]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/FortAwesome/Font-Awesome">FortAwesome/Font-Awesome</a></h1>
            <p>The iconic SVG, font, and CSS toolkit</p>
            <p>Language: JavaScript</p>
            <p>Stars: 75,600</p>
            <p>Forks: 12,207</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>&lt;h1&gt;&lt;img src=&quot;https://img.fortawesome.com/349cfdf6/fa-free-logo.svg&quot; alt=&quot;Font Awesome Free&quot; width=&quot;50%&quot;&gt;&lt;/h1&gt;

&gt; Version 5 ‚Äì the iconic SVG, font, and CSS framework

The internet&#039;s most popular icon toolkit has been redesigned and built from
scratch. On top of this, features like icon font ligatures, an SVG framework,
official NPM packages for popular frontend libraries like React, and access to
a new CDN.

Not familiar with Font Awesome 5? [Learn
more](https://www.kickstarter.com/projects/232193852/font-awesome-5) about our
successful Kickstarter and plan. You can also **[order Font Awesome
Pro](https://fontawesome.com/pro)** which includes tons more icons directly
from [fontawesome.com](https://fontawesome.com).

## Documentation

Learn how to get started with Font Awesome and then dive deeper into other and advanced topics:

### Using Font Awesome on the Web

* [With SVG with JavaScript](https://fontawesome.com/how-to-use/on-the-web/setup/getting-started?using=svg-with-js)
* [With web fonts with CSS](https://fontawesome.com/how-to-use/on-the-web/setup/getting-started?using=web-fonts-with-css)
* [Upgrading from version 4](https://fontawesome.com/how-to-use/on-the-web/setup/upgrading-from-version-4)
* [Installing Font Awesome with a package manager](https://fontawesome.com/how-to-use/on-the-web/setup/using-package-managers)
* [Downloading + hosting Font Awesome yourself](https://fontawesome.com/how-to-use/on-the-web/setup/hosting-font-awesome-yourself)
* [Performance and security](https://fontawesome.com/how-to-use/performance-and-security)
* [Accessibility](https://fontawesome.com/how-to-use/on-the-web/other-topics/accessibility)
* [Troubleshooting](https://fontawesome.com/how-to-use/on-the-web/other-topics/troubleshooting)

#### Advanced Options &amp; Techniques

* [Using CSS pseudo-elements](https://fontawesome.com/how-to-use/on-the-web/advanced/css-pseudo-elements)
* [SVG sprites](https://fontawesome.com/how-to-use/svg-sprites)
* [The Font Awesome API](https://fontawesome.com/how-to-use/font-awesome-api)
* [SVG symbols](https://fontawesome.com/how-to-use/on-the-web/advanced/svg-symbols)
* [SVG JavaScript Core](https://fontawesome.com/how-to-use/on-the-web/advanced/svg-javascript-core)
* [Server side rendering](https://fontawesome.com/how-to-use/server-side-rendering)

### Using Font Awesome on the Desktop

* [Getting started](https://fontawesome.com/how-to-use/on-the-desktop/setup/getting-started)
* [Upgrading from version 4](https://fontawesome.com/how-to-use/on-the-desktop/setup/upgrading-from-version-4)
* [Using ligatures](https://fontawesome.com/how-to-use/on-the-desktop/referencing-icons/using-ligatures)
* [Using glyphs](https://fontawesome.com/how-to-use/on-the-desktop/referencing-icons/using-glyphs)
* [Troubleshooting](https://fontawesome.com/how-to-use/on-the-desktop/other-topics/troubleshooting)

### Where did Font Awesome 4 (or 3) go?

Now that Font Awesome 5 has been released we are marking version 4 as
end-of-life. We don&#039;t plan on releasing any further versions of the 4.x or 3.x.

Documentation is still available but it&#039;s moved to
[https://fontawesome.com/v4.7.0](https://fontawesome.com/v4.7.0) and
[https://fontawesome.com/v3.2.1](https://fontawesome.com/v3.2.1).

The Git repository for
[v4.7.0](https://github.com/FortAwesome/Font-Awesome/releases/tag/v4.7.0) and
[v3.2.1](https://github.com/FortAwesome/Font-Awesome/releases/tag/v3.2.1) can
be found in our GitHub releases.

## Change log

We&#039;ll keep track of each release in the [CHANGELOG.md](./CHANGELOG.md)

Looking for older versions of Font Awesome? Check the [releases](https://github.com/FortAwesome/Font-Awesome/releases).

## Upgrading

From time-to-time we&#039;ll have special upgrading instructions from one version to the next.

Check out the [UPGRADING.md](./UPGRADING.md) guide when you upgrade your dependencies.

## Code of conduct

We will behave ourselves if you behave yourselves. For more details see our
[CODE_OF_CONDUCT.md](./CODE_OF_CONDUCT.md).

## Contributing

Please read through our [contributing guidelines](./CONTRIBUTING.md).  Included
are directions for opening issues.

## Versioning

Font Awesome will be maintained under the Semantic Versioning guidelines as much as possible. Releases will be numbered
with the following format:

`&lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;`

For more information on SemVer, please visit http://semver.org.

**The major version &quot;5&quot; is part of an umbrella release.  It includes many different types of files and technologies. Therefore
we deviate from normal SemVer in the following ways:**

* Any release may update the design, look-and-feel, or branding of an existing
  icon
* We will never intentionally release a `patch` version update that breaks
  backward compatibility
* A `minor` release **may include backward-incompatible changes** but we will
  write clear upgrading instructions in UPGRADING.md
* A `minor` or `patch` release will never remove icons
* Bug fixes will be addressed as `patch` releases unless they include backward
  incompatibility then they will be `minor` releases

## License

Font Awesome Free is free, open source, and GPL friendly. You can use it for
commercial projects, open source projects, or really almost whatever you want.

- Icons ‚Äî CC BY 4.0 License
  - In the Font Awesome Free download, the CC BY 4.0 license applies to all icons packaged as .svg and .js files types.
- Fonts ‚Äî SIL OFL 1.1 License
  - In the Font Awesome Free download, the SIL OLF license applies to all icons packaged as web and desktop font files.
- Code ‚Äî MIT License
  - In the Font Awesome Free download, the MIT license applies to all non-font and non-icon files.

Attribution is required by MIT, SIL OLF, and CC BY licenses. Downloaded Font
Awesome Free files already contain embedded comments with sufficient
attribution, so you shouldn&#039;t need to do anything additional when using these
files normally.

We&#039;ve kept attribution comments terse, so we ask that you do not actively work
to remove them from files, especially code. They&#039;re a great way for folks to
learn about Font Awesome.

## Team
* [Dave Gandy](https://github.com/davegandy)
* [Travis Chase](https://github.com/supercodepoet)
* [Rob Madole](https://github.com/robmadole)
* [Brian Talbot](https://github.com/talbs)
* [Jory Raphael](https://github.com/sensibleworld)
* [Mike Wilkerson](https://github.com/mlwilkerson)
* [Frances Botsford](https://github.com/frrrances)
* [Trevor Chase](https://github.com/trevorchase)
* [Jason Lundien](https://github.com/jasonlundien)
* [Jason Otero](https://github.com/deathnfudge)
* [Edward Emanuel](https://github.com/ej2)
* [Kelsey Jackson](https://github.com/kelseythejackson)
* [Geremia Taglialatela](https://github.com/tagliala)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[vitejs/awesome-vite]]></title>
            <link>https://github.com/vitejs/awesome-vite</link>
            <guid>https://github.com/vitejs/awesome-vite</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:17 GMT</pubDate>
            <description><![CDATA[‚ö°Ô∏è A curated list of awesome things related to Vite.js]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vitejs/awesome-vite">vitejs/awesome-vite</a></h1>
            <p>‚ö°Ô∏è A curated list of awesome things related to Vite.js</p>
            <p>Language: JavaScript</p>
            <p>Stars: 16,166</p>
            <p>Forks: 1,272</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre>&lt;!--lint disable awesome-heading awesome-github awesome-toc double-link --&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;br&gt;
  &lt;img width=&quot;400&quot; src=&quot;./assets/logo.svg&quot; alt=&quot;logo of awesome-vite repository&quot;&gt;
  &lt;br&gt;
  &lt;br&gt;
&lt;/p&gt;

&lt;h2 align=&#039;center&#039;&gt;Awesome Vite.js&lt;/h2&gt;

&lt;p align=&#039;center&#039;&gt;
A curated list of awesome things related to &lt;a href=&#039;https://github.com/vitejs/vite&#039;&gt;Vite.js&lt;/a&gt;
&lt;br&gt;&lt;br&gt;

&lt;a href=&#039;https://github.com/sindresorhus/awesome&#039;&gt;
&lt;img src=&#039;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg&#039; alt=&#039;Awesome&#039;&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;!--lint ignore--&gt;

## Table of Contents

&lt;img src=&quot;https://user-images.githubusercontent.com/11247099/112722104-819b8a80-8f42-11eb-82f5-dfc2dd5d8a77.png&quot; height=&quot;32&quot; /&gt;

Use the &quot;Table of Contents&quot; menu on the top-right corner to explore the list.

## Resources

### Official Resources

- [Documentation](https://vitejs.dev/)
- [GitHub Repo](https://github.com/vitejs/vite)
- [Release Notes](https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md)
- [Vue 3 Docs](https://vuejs.org/)
- [Awesome Vue](https://github.com/vuejs/awesome-vue)
- [Migration from v4](https://vitejs.dev/guide/migration.html)

&lt;!--### Tutorials--&gt;

## Get Started

- [create-vite](https://github.com/vitejs/vite/tree/main/packages/create-vite) - Scaffolding Your First Vite Project.
- [create-vitawind](https://github.com/huibizhang/vitawind/tree/package/create-vitawind) - Scaffolding for TailwindCSS project.
- [create-electron-vite](https://github.com/electron-vite/create-electron-vite) - Scaffolding Your Electron + Vite Project.
- [create-vite-app](https://github.com/ErKeLost/create-vite-app) - Scaffolding Your Out Of The Box Vite Project.
- [create-nx-workspace](https://github.com/nrwl/nx) - Scaffolding a Nx + React + Vite + Vitest.
- [bati](https://github.com/batijs/bati) - Scaffolding a Vike project.
- [create-awesome-node-app](https://github.com/Create-Node-App/create-node-app) - Scaffolding your project choosing between different templates.

### Templates

#### Vanilla

- [vite-vanilla-ts-lib-starter](https://github.com/kbysiec/vite-vanilla-ts-lib-starter) - Starter for library (CJS, ESM, IIFE) with TypeScript, ESLint, Stylelint, Prettier, Jest, Husky + lint-staged.
- [vite-tailwind-nojs-starter](https://github.com/kometolabs/vite-tailwind-nojs-starter) - NoJS Tailwind CSS starter template.
- [vite-tailwind-stimulus-starter](https://github.com/jeremyfrank/vite-tailwind-stimulus-starter) - Starter template for Tailwind CSS and Stimulus controllers.
- [vite-phaser-ts](https://github.com/iwantantra/vite-phaser-ts) - Starter template with Phaser and Typescript.
- [vite-tinybase](https://github.com/tinyplex/vite-tinybase) - Starter template for TinyBase.
- [vite-tinybase-ts](https://github.com/tinyplex/vite-tinybase-ts) - Starter template for TinyBase and TypeScript.
- [vite-vanilla-js-template](https://github.com/Barata-Ribeiro/vite-vanilla-js-template) - Starter template ESlint, Prettier, PostCSS, Nesting, Autoprefixer, CSS Nano, CSS Reset.
- [vite-starter-markup-template](https://github.com/Grinch3214/vite-starter-markup-template) - Starter template for Markup.
- [create-domco](https://github.com/rossrobino/domco/tree/main/packages/create-domco) - Starter template for domco.
- [vite-vanilla-library-template](https://github.com/hywax/vite-vanilla-library-template) - Starter template TypeScript, ESLint, Vitest, Husky, Conventional Commits, GitHub actions.
- [vite-alpine-template](https://github.com/dvd101x/vite-alpine) - Starter template for Alpine.
- [vite-ts-lib-starter](https://github.com/matronator/vite-ts-lib-starter) - Starter template for libraries with TypeScript, Bun, Vitest, Prettier, Renovate and np.
- [vite-swagger-ui](https://github.com/lukefernandez/vite-swagger-ui) - Swagger UI with built-in support for multiple APIs.
- [template-vite](https://github.com/phaserjs/template-vite) - An official quickstart template with Phaser.
- [template-vite-ts](https://github.com/phaserjs/template-vite-ts) - An official quickstart template with Phaser and TypeScript.
- [vite-ts-bulma-sass-template](https://github.com/naoki-00-ito/vite-ts-bulma-sass-template) - Starter template `TypeScript`, `Bulma`, `Sass`, `Stylelint`, `Biome`.

#### Vue 3

- [Vitesse](https://github.com/antfu/vitesse) - Opinionated starter template.
- [vite-ts-tailwind-starter](https://github.com/Uninen/vite-ts-tailwind-starter) - TypeScript, Tailwind CSS, Cypress.io e2e tests + CI.
- [vue-vben-admin](https://github.com/anncwb/vue-vben-admin) - Background management template based on Vue3, Ant-Design-Vue, TypeScript.
- [vue-pure-admin](https://github.com/xiaoxian521/vue-pure-admin) - Background management template based on Vue3, TypeScript, Tailwind CSS, element-plus.
- [fast-crud](https://github.com/fast-crud/fast-crud) - Options-oriented crud framework, developing crud as fast as lightning.
- [vitesse-lite](https://github.com/antfu/vitesse-lite) - Lightweight version of Vitesse.
- [vitesse-webext](https://github.com/antfu/vitesse-webext) - WebExtension Vite Starter Template.
- [naive-ui-dashboard-template](https://github.com/Innei/naive-ui-dashboard-template) - UI friendly, Vue 3 + TSX + TailwindCSS 2 JIT + PostCSS + Naive UI.
- [Vitawind Creator](https://vitawind.vercel.app/scaffolding/creator/) - Create TailwindCSS project rapidly.
- [vue3-tailwind3-website-starter](https://github.com/feitian124/vue3-tailwind3-website-starter.git) - Vue3 / Vite / TailwindCSS website starter template, with guides on each page.
- [boot-vue](https://github.com/kirklin/boot-vue) - Starter template with TypeScript + UnoCSS + DaisyUI + Vue Router + Pinia.
- [Vue Naive](https://github.com/zclzone/vue-naive-admin) - Admin template, base on Vue 3 + Pinia + Naive UI.
- [vue-admin-box](https://github.com/cmdparkour/vue-admin-box) - Admin template, based on Vue 3 + Element-plus.
- [vite-vue-proste](https://github.com/xyhxx/vite-vue-proste) - Pinia + Typescript + Vue-Router4 + Vitest + Vue-Test-Utils + Vue-Query + Sass + ESLint + Stylelint + Prettier + `project presets`.
- [vue-vite-ssr](https://github.com/EverSeenTOTOTO/browser-app-boilerplate/tree/vue-vite-ssr) - Typescript, Eslint, Stylelint, Husky, Lint-staged and Commitlint.
- [vue3-vant-mobile](https://github.com/easy-temps/vue3-vant-mobile) - Vite5 + Vue3 + Vant4 + Pinia + Vue-Router4 + TypeScript Mobile Template.
- [vue-vite-tw-ts](https://github.com/ChronosMasterOfAllTime/vue-vite-tw-ts) - Vue 3 + Vite + Vitest + Cypress E2E + Naive UI + Pinia + Vue Router.
- [vite-vue-js-starter-template](https://github.com/ElanYoung/vite-vue-js-starter-template) - Vite + Vue3 + JavaScript + Vue Router + Pinia + TDesign + ESLint + Stylelint + Prettier Simple Template.
- [vue-xs-admin](https://github.com/jsxiaosi/vue-xs-admin) - Based on Vue3, Vite3 ElementPlus, TypeScript, Pinia, VueRouter.
- [vulcan](https://github.com/pengzhanbo/vulcan) - The template for mobile application. Vite, Vue 3, TypeScript, Sass, i18n, Vitest&amp;Cypress, Pinia, APIs&amp;Mock, ESLint, Prettier, auto-importing.
- [antdv-pro](https://github.com/antdv-pro/antdv-pro) - AntdvPro is a complete set of enterprise-level mid-backend front-end/design solutions based on Vue3, Vite4, ant-design-vue4, Pinia, UnoCSS and Typescript.
- [vue3-quick-start](https://github.com/wforguo/vue3-quick-start) - Building an engineered Vue 3 project, integrated with `Vite` + `Vue3` + `TypeScript` + `ESLint` + `Prettier` + `Commitizen` + `Husky` + `LintStaged` + `CommitLint` + `AutoImport` + `ReleaseIt`.
- [antd-vue3-admin](https://github.com/Zuojiangtao/antd-vue3-admin) - A starter template based on Vue3, Vite4, TS5 and Ant-Design-Vue4.
- [vue-file-upload](https://github.com/canopas/vue-file-upload) - A file management system built with `Vue3` and `TypeScript` that allows for single and multiple file uploading with a preview feature.
- [arco-admin](https://github.com/LIjiAngChen8/arco-admin) - `Vite` + `ArcoDesign` + `TypeScript` follows `ESM` standards, offering an out-of-the-box,standardized, feature-rich template for middle and back-office management systems.
- [materio-free-vuetify-nuxtjs-admin-template](https://github.com/themeselection/materio-vuetify-nuxtjs-admin-template-free) - Vuejs 3, Vite 5, Vuetify 3 &amp; NuxtJS 3.
- [vite-plugin-vue-style-bundler](https://github.com/zhangfisher/vite-plugin-vue-style-bundler) - Auto bundle Vue/sfc styles into JavaScript.
- [celeris-web](https://github.com/kirklin/celeris-web) - Template based on `Vite` + `Vue3` + `TypeScript` + `Vue-Router` + `Pinia` + `Unocss` + `Naive UI` + `pnpm Monorepo`.
- [vite-ts-starter](https://github.com/pdsuwwz/vite-ts-starter) - Vue `I18n` Dynamic Router Localization Template, Internationalized Applications with `UnoCSS` + `Unplugin` + `Element-Plus` + `Vitest` + `TypeScript` + `Vue-Router` + `Vuex` + `Scss` + `ESLint` + `Stylelint` + `Husky` + `lint-staged`.
- [vite-vue3-tailwind4-daisyui5-starter-template](https://github.com/martinille/starter-template-vite-vue3-sass-tailwind4-daisyui5) - Starter template with Vue 3 + Vite + Tailwind CSS 4 + DaisyUI 5 + Sass.

#### Vue 2

- [vite-vue2-windicss-starter](https://github.com/lstoeferle/vite-vue2-windicss-starter) - Vue 2, Vue Router, Composition API, VueUse, Windi CSS and TypeScript.
- [vite-vue2-ts-starter](https://github.com/logue/vite-vue2-ts-starter) - Vue2 TypeScript starter template using vue-property-decorator, vue-router, Vuex.
- [vite-vue2-ts-vuetify-starter](https://github.com/logue/vite-vue2-vuetify-ts-starter) - It is the above vite-vue2-ts-starter with Vuetify and its optimized settings. Includes basic templates.
- [vitify-admin](https://github.com/kingyue737/vitify-admin) - Vuetify admin starter template with full TypeScript support and intellisense of Vuetify components.

#### React

- [Vitamin](https://github.com/wtchnm/Vitamin) - React TypeScript, TailwindCSS, SPA + PWA, Cypress and CI.
- [vite-template-react](https://github.com/SafdarJamal/vite-template-react) - A Create React App-like template.
- [vitejs-template-react-rescript](https://github.com/jihchi/vitejs-template-react-rescript) - React + ReScript.
- [template-vite-react](https://github.com/lzm0x219/template-vite-react) - A minimal React Vite starter template.
- [reactjs-vite-tailwindcss-boilerplate](https://github.com/joaopaulomoraes/reactjs-vite-tailwindcss-boilerplate) - React 18, TypeScript, Vitest, Testing Library, TailwindCSS 3, Eslint and Prettier.
- [vite-react-ts-tailwind-firebase-starter](https://github.com/TeXmeijin/vite-react-ts-tailwind-firebase-starter) - Starter using Vite + React + TypeScript + Tailwind CSS (daisyUI) + Firebase (v9) + Prettier + ESLint.
- [create-react-app-vite](https://github.com/laststance/create-react-app-vite) - React, TypeScript, TailwindCSS, MSW, Vitest, React Testing Library, ESLint, Prettier, GitHub Actions.
- [chrome-extension-boilerplate-react-vite](https://github.com/Jonghakseo/chrome-extension-boilerplate-react-vite) - React + TypeScript + SASS + Prettier + ESLint + GitHub Actions + HMR(Hot Module Reload) + Turborepo + Chrome Extension Manifest v3.
- [vite-rtk-query](https://github.com/laststance/vite-rtk-query) - React, TypeScript, Redux Toolkit, RTK Query, TailwindCSS, MSW, Jest, React Testing Library, ESLint, Prettier.
- [vite-react-proste](https://github.com/xyhxx/vite-react-proste) - React + TypeScript + `react-router-dom` + Recoil + SASS + Testing Library + `react-query` + ESLint + Stylelint + Prettier.
- [React-PWA](https://github.com/suren-atoyan/react-pwa) - React v18, TypeScript, Vite, React Router v6, MUI v5, Recoil, PWA, Eslint, Prettier, Husky, lint-staged, https localhost and more.
- [react-vite-ssr](https://github.com/EverSeenTOTOTO/browser-app-boilerplate/tree/react-vite-ssr) - Mobx, Typescript, Eslint, Stylelint, Husky, Lint-staged and Commitlint.
- [Viterts](https://github.com/erdoganbulut/viterts/) - React + TypeScript + Redux + React Router + Jest + ESLint + Airbnb + Prettier + SASS.
- [ViteRC](https://github.com/potreco/viterc) - React 18 + TypeScript + ESLint (Airbnb) + Prettier + Husky + Jest + Absolute imports + Commit linting.
- [React Starter Kit](https://github.com/kriasoft/react-starter-kit) - Jamstack, React, React Router, Material UI, Firebase Auth, TypeScript, ESLint, Prettier, Jest, GitHub Actions.
- [vite-mern-template](https://github.com/apicgg/vite-mern-template) - React 18 + TypeScript + Vite + Redux Toolkit + ESLint + React Router DOM + Axios + React Icons + React Toastify + Express + Mongoose.
- [Varsarr](https://github.com/altmshfkgudtjr/varsarr) - React, Typescript, Styled-Components, Recoil, React-Query, Axios, Absolute imports.
- [viterjs-template](https://github.com/emre-cil/viterjs-template) - React + JavaScript + Redux + Material UI + Axios + ESLint + Prettier.
- [react-vite-ts-boilerplate](https://github.com/choisohyun/react-vite-ts-boilerplate) - React 18, TypeScript, SCSS, ESLint, Prettier, Vitest.
- [vite-react-universal-template](https://github.com/laoer536/vite3.0-react18-TypeScript-router-dom6-mobx6-Eslint-prettier-template) - React18 + TypeScript + `react-router-dom` + Zustand + ESlint + Prettier + Stylelint + Husky + Docker, and APIs auto importing.
- [react-vite-template](https://github.com/985563349/react-vite-template) - A react project template.
- [react-xs-admin](https://github.com/jsxiaosi/react-xs-admin) - The background management system template developed based on React18 + ReactRouteV6 + Vite + And Design + ReactIntl + ReactRedux + Emulation.
- [vite-mui-ts](https://github.com/emre-cil/vite-mui-ts) - React + TypeScript + Redux + Material UI + RRD + ESLint + Prettier.
- [template-vite-react-ts-tailwind](https://github.com/RoyRao2333/template-vite-react-ts-tailwind) - React + TypeScript + Tailwind CSS + Eslint + Prettier.
- [vite-react-ts-template](https://github.com/bartstc/vite-ts-react-template) - React 18, TypeScript, ESlint, Prettier, Dev Container, Vitest, Storybook, Playwright, MSW, React Router 6, React Query, Chakra UI, Zustand.
- [react-vite-tailwindcss-template](https://github.com/quavedev/react-vite-tailwindcss-template) - React, JavaScript, TailwindCSS, ESlint, Prettier, Pre-commit.
- [vite-tinybase-react](https://github.com/tinyplex/vite-tinybase-react) - Starter template for TinyBase and React.
- [vite-tinybase-ts-react](https://github.com/tinyplex/vite-tinybase-ts-react) - Starter template for TinyBase, TypeScript, and React.
- [vite-react-ssr-boost-template](https://github.com/Lomray-Software/vite-template) - Template for creating `React 18` SSR/SPA apps with `TypeScript`, `Mobx`, `React Router`, `Head Manager`, Suspense, Streaming. Also included CI/CD, `ESLint`, `Prettier`, `Stylelint`, `Husky`, `Semantic Release`.
- [vite-react-ts-shadcn-starter](https://github.com/Quilljou/vite-react-ts-tailwind-starter) - Template for creating `React 18` SPA apps with `TypeScript`, `React Router`, `Tailwind CSS`, `Shadcn UI`, `React Query`, `ESLint`, `Prettier`, `Stylelint`, `Husky`, `React-i18next`, `Transmart`.
- [template-tauri-vite-react-ts-tailwind](https://github.com/RoyRao2333/template-tauri-vite-react-ts-tailwind) - Template for Tauri + React + Typescript + TailwindCSS + Prettier + ESLint build-in.
- [vite-react-chakra-starter](https://github.com/sozonome/vite-react-chakra-starter) - Starter template for creating React App with TypeScript and Chakra UI. Configured with ESLint, Prettier, and Husky.
- [vite-react-tailwind-starter](https://github.com/sozonome/vite-react-tailwind-starter) - Starter template for creating React App with TypeScript and Tailwind CSS with Shadcn UI. Configured with ESLint, Prettier, and Husky.
- [monorepo-template-react](https://github.com/stormkit-io/monorepo-template-react) - React + Typescript template for SSR, SPG, SPA and API provision.
- [vite-react-dapp-template](https://github.com/huseyindeniz/vite-react-dapp-template) - Starter template for decentralized app frontend development with preconfigured Wallet Authentication, i18n and UI features.
- [vite-express-ssr-ts](https://github.com/gihanrangana/vite-express-ssr-ts) - React + Typescript + ExpressJS + Vite SSR template with inbuild api feature.
- [vite-react-flow-template](https://github.com/xyflow/vite-react-flow-template) - React Flow starter template.
- [react-vite-template](https://github.com/Mirazex/react-vite-template) - React, TypeScript, Vite, Mantine, Million, Husky, Prettier, Import Sorter, Lint-staged.
- [gravity-ui-vite-template](https://github.com/gravity-ui/gravity-ui-vite-example) - Template with Gravity UI ecosystem (React, TypeScript, Gravity UI, Vite, Husky, ESLint, Prettier, Lint-staged).
- [vite-react-component-library-starter](https://github.com/rayyamhk/vite-react-component-library-starter) - A starter template for creating React component libraries with `TypeScript`, `Tailwind CSS`, `Storybook`, `Vitest`, `ESLint`, `Prettier`, `Husky`, and `GitHub Action`.
- [vite-template-awesome-soho](https://github.com/comnori/vite-template-awesome-soho) - `DevContainer` Template for creating `React 18`, `Javascript + JSDoc`, `React Router`, `Ant Design`, `ESLint`, `EditorConfig`, `.env`, `SonarLint`, `Vitest`.
- [react-component-library-vite](https://github.com/gsharath/react-component-library-vite) - A library template for with `React`, `Javascript`,`Styled-Components`, `Vitest`, `React Testing Library`, `Storybook`.
- [ReTail](https://github.com/nikolailehbrink/retail) - Starter template for building Full Stack WEB applications with `Remix` using `TypeScript`, `Tailwind CSS`, `Prettier` and `ESLint`.
- [vite-react-redux-saga-typescript](https://github.com/Dulajdeshan/vite-react-redux-saga-typescript) - Starter template with `React`, `TypeScript`, `Redux (Redux Toolkit)`, `Saga`, `React Testing Library`, `ESLint`, `Prettier` and `Husky`.
- [vite-complete-react-app](https://github.com/ChrisUser/vite-complete-react-app) - Starter template for building web applications using `React`, `TypeScript`, `Redux Toolkit`, `React Router`, `Axios`, `Sass`, `Moment`, `ESLint`, `Prettier` and `React Testing Library`.
- [vite-react-framer-starter](https://github.com/matozz/vite-react-framer-starter) - Starter template with `React`, `TypeScript`, `Framer Motion`, `Tailwind CSS`, `ESLint`, and `Prettier`.
- [vite-jsx-remove-attributes](https://github.com/jacobbogers/rollup-plugin-jsx-remove-attributes) - Remove the `data-testid` (configurable) from production builds.
- [React Tanning](https://github.com/padunk/react-tanning) - Starter template with `React + Vite + TypeScript + TanStack + Tailwind`.
- [Reactive](https://github.com/ws-rush/reactive) - `React` starter template with `Remix` file-based routing convention for `react-router`, `UnoCSS`, `LinguiJs`, `zustand`, and ton of features.
- [RVTGB](https://github.com/up2dul/rvtgb) - `React` + `TypeScript` starter template, with file-based routing with `Generouted` and `Biome`.
- [vite-biome-tailwind-template](https://github.com/not-first/vite-biome-tailwind-template) - React, Typescript, Biome, Tailwind CSS.
- [React Dapp Starter](https://github.com/Manta-Network/react-dapp-starter) - Enterprise-ready Web3 DApp starter with `TypeScript`, `TailwindCSS`, `Web3Modal`, `Wagmi`, `Shadcn UI`, `Zustand`, and `TanStack Query` for scalable decentralized applications.
- [vite-template-react-ts-jest](https://github.com/ivanzusko/vite-template-react-ts-jest) - `React` + `TypeScript` + `Jest`.
- [vite-amplify](https://github.com/bebeal/vite-amplify) - Template with SSR + Express APIs + AWS Amplify Hosting.
- [react-component-library-template](https://github.com/xxhls/react-component-library-template) - A library template for with `React`, `TypeScript`, `Vitest`, `React Testing Library`, `Storybook`, `Biome`, `Stylelint`.
- [react-boilerplate](https://github.com/Aubergine-Community/react-basic-template) - Template for bootstrapping with `Eslint` + `Husky` + `Prettier`.
- [react-admin-dashboard](https://github.com/larry-xue/react-admin-dashboard) - Dashboard template with `TypeScript`, `Vite`, `Ant Design`, `React Router`, `Zustand`, `

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[pot-app/pot-desktop]]></title>
            <link>https://github.com/pot-app/pot-desktop</link>
            <guid>https://github.com/pot-app/pot-desktop</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:16 GMT</pubDate>
            <description><![CDATA[üåà‰∏Ä‰∏™Ë∑®Âπ≥Âè∞ÁöÑÂàíËØçÁøªËØëÂíåOCRËΩØ‰ª∂ | A cross-platform software for text translation and recognition.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pot-app/pot-desktop">pot-app/pot-desktop</a></h1>
            <p>üåà‰∏Ä‰∏™Ë∑®Âπ≥Âè∞ÁöÑÂàíËØçÁøªËØëÂíåOCRËΩØ‰ª∂ | A cross-platform software for text translation and recognition.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 15,050</p>
            <p>Forks: 692</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre>&lt;img width=&quot;200px&quot; src=&quot;public/icon.svg&quot; align=&quot;left&quot;/&gt;

# Pot (Ê¥æ‰∫Ü‰∏™ËêåÁöÑÁøªËØëÂô®)

&gt; üåà ‰∏Ä‰∏™Ë∑®Âπ≥Âè∞ÁöÑÂàíËØçÁøªËØëËΩØ‰ª∂ ([QQ È¢ëÈÅì](https://pd.qq.com/s/akns94e1r))

![License](https://img.shields.io/github/license/pot-app/pot-desktop.svg)
![Tauri](https://img.shields.io/badge/Tauri-1.6.8-blue?logo=tauri)
![JavaScript](https://img.shields.io/badge/-JavaScript-yellow?logo=javascript&amp;logoColor=white)
![Rust](https://img.shields.io/badge/-Rust-orange?logo=rust&amp;logoColor=white)
![Windows](https://img.shields.io/badge/-Windows-blue?logo=windows&amp;logoColor=white)
![MacOS](https://img.shields.io/badge/-macOS-black?&amp;logo=apple&amp;logoColor=white)
![Linux](https://img.shields.io/badge/-Linux-yellow?logo=linux&amp;logoColor=white)

&lt;br/&gt;
&lt;hr/&gt;
&lt;div align=&quot;center&quot;&gt;

&lt;h3&gt;‰∏≠Êñá | &lt;a href=&#039;./README_EN.md&#039;&gt;English&lt;/a&gt; | &lt;a href=&#039;./README_KR.md&#039;&gt; ÌïúÍ∏Ä &lt;/a&gt;&lt;/h3&gt;

&lt;table&gt;
&lt;tr&gt;
    &lt;td&gt; &lt;img src=&quot;asset/1.png&quot;&gt;
    &lt;td&gt; &lt;img src=&quot;asset/2.png&quot;&gt;
    &lt;td&gt; &lt;img src=&quot;asset/3.png&quot;&gt;
&lt;/table&gt;

# ÁõÆÂΩï

&lt;/div&gt;

-   [‰ΩøÁî®ËØ¥Êòé](#‰ΩøÁî®ËØ¥Êòé)
-   [ÁâπËâ≤ÂäüËÉΩ](#ÁâπËâ≤ÂäüËÉΩ)
-   [ÊîØÊåÅÊé•Âè£](#ÊîØÊåÅÊé•Âè£)
-   [Êèí‰ª∂Á≥ªÁªü](#Êèí‰ª∂Á≥ªÁªü)
-   [ÂÆâË£ÖÊåáÂçó](#ÂÆâË£ÖÊåáÂçó)
-   [Â§ñÈÉ®Ë∞ÉÁî®](#Â§ñÈÉ®Ë∞ÉÁî®)
-   [Wayland ÊîØÊåÅ](#wayland-ÊîØÊåÅ)
-   [ÂõΩÈôÖÂåñ](#ÂõΩÈôÖÂåñweblate)
-   [Ë¥°ÁåÆËÄÖ](#Ë¥°ÁåÆËÄÖ)
-   [ÊÑüË∞¢](#ÊÑüË∞¢)

&lt;div align=&quot;center&quot;&gt;

# ‰ΩøÁî®ËØ¥Êòé

| ÂàíËØçÁøªËØë                                             | ËæìÂÖ•ÁøªËØë                                                       | Â§ñÈÉ®Ë∞ÉÁî®                                                             |
| ---------------------------------------------------- | -------------------------------------------------------------- | -------------------------------------------------------------------- |
| Èº†Ê†áÈÄâ‰∏≠ÈúÄË¶ÅÁøªËØëÁöÑÊñáÊú¨ÔºåÊåâ‰∏ãËÆæÁΩÆÁöÑÂàíËØçÁøªËØëÂø´Êç∑ÈîÆÂç≥ÂèØ | Êåâ‰∏ãËæìÂÖ•ÁøªËØëÂø´Êç∑ÈîÆÂëºÂá∫ÁøªËØëÁ™óÂè£ÔºåËæìÂÖ•ÂæÖÁøªËØëÊñáÊú¨ÂêéÊåâ‰∏ã ÂõûËΩ¶ ÁøªËØë | ÈÄöËøáË¢´ÂÖ∂‰ªñËΩØ‰ª∂Ë∞ÉÁî®ÂÆûÁé∞Êõ¥Âä†Êñπ‰æøÈ´òÊïàÁöÑÂäüËÉΩ, ËØ¶ËßÅ [Â§ñÈÉ®Ë∞ÉÁî®](#Â§ñÈÉ®Ë∞ÉÁî®) |
| &lt;img src=&quot;asset/eg1.gif&quot;/&gt;                           | &lt;img src=&quot;asset/eg2.gif&quot;/&gt;                                     | &lt;img src=&quot;asset/eg3.gif&quot;/&gt;                                           |

| Ââ™ÂàáÊùøÁõëÂê¨Ê®°Âºè                                                         | Êà™Âõæ OCR                                          | Êà™ÂõæÁøªËØë                                         |
| ---------------------------------------------------------------------- | ------------------------------------------------- | ------------------------------------------------ |
| Âú®‰ªªÊÑèÁøªËØëÈù¢Êùø‰∏äÁÇπÂáªÂ∑¶‰∏äËßíÂõæÊ†áÂêØÂä®Ââ™ÂàáÊùøÁõëÂê¨ÈªòËÆ§ÔºåÂ§çÂà∂ÊñáÂ≠óÂç≥ÂèØÂÆåÊàêÁøªËØë | Êåâ‰∏ãÊà™Âõæ OCR Âø´Êç∑ÈîÆÂêéÊ°ÜÈÄâÈúÄË¶ÅËØÜÂà´Âå∫ÂüüÂç≥ÂèØÂÆåÊàêËØÜÂà´ | Êåâ‰∏ãÊà™ÂõæÁøªËØëÂø´Êç∑ÈîÆÂêéÊ°ÜÈÄâÈúÄË¶ÅËØÜÂà´Âå∫ÂüüÂç≥ÂèØÂÆåÊàêÁøªËØë |
| &lt;img src=&quot;asset/eg4.gif&quot;/&gt;                                             | &lt;img src=&quot;asset/eg5.gif&quot;/&gt;                        | &lt;img src=&quot;asset/eg6.gif&quot;/&gt;                       |

&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;

# ÁâπËâ≤ÂäüËÉΩ

&lt;/div&gt;

-   [x] Â§öÊé•Âè£Âπ∂Ë°åÁøªËØë ([ÊîØÊåÅÊé•Âè£](#ÊîØÊåÅÊé•Âè£))
-   [x] Â§öÊé•Âè£ÊñáÂ≠óËØÜÂà´ ([ÊîØÊåÅÊé•Âè£](#ÊîØÊåÅÊé•Âè£))
-   [x] Â§öÊé•Âè£ËØ≠Èü≥ÂêàÊàê ([ÊîØÊåÅÊé•Âè£](#ÊîØÊåÅÊé•Âè£))
-   [x] ÂØºÂá∫Âà∞ÁîüËØçÊú¨ ([ÊîØÊåÅÊé•Âè£](#ÊîØÊåÅÊé•Âè£))
-   [x] Â§ñÈÉ®Ë∞ÉÁî® ([ËØ¶ÊÉÖ](#Â§ñÈÉ®Ë∞ÉÁî®))
-   [x] ÊîØÊåÅÊèí‰ª∂Á≥ªÁªü ([Êèí‰ª∂Á≥ªÁªü](#Êèí‰ª∂Á≥ªÁªü))
-   [x] ÊîØÊåÅÊâÄÊúâ PC Âπ≥Âè∞ (Windows, macOS, Linux)
-   [x] ÊîØÊåÅ Wayland (Âú® KDE„ÄÅGnome ‰ª•Âèä Hyprland ‰∏äÊµãËØï)
-   [x] Â§öËØ≠Ë®ÄÊîØÊåÅ

&lt;div align=&quot;center&quot;&gt;

# ÊîØÊåÅÊé•Âè£

&lt;/div&gt;

## ÁøªËØë

-   [x] [OpenAI](https://platform.openai.com/)
-   [x] [Êô∫Ë∞± AI](https://www.zhipuai.cn/)
-   [x] [Gemini Pro](https://gemini.google.com/)
-   [x] [Ollama](https://www.ollama.com/) (Á¶ªÁ∫ø)
-   [x] [ÈòøÈáåÁøªËØë](https://www.aliyun.com/product/ai/alimt)
-   [x] [ÁôæÂ∫¶ÁøªËØë](https://fanyi.baidu.com/)
-   [x] [ÂΩ©‰∫ëÂ∞èËØë](https://fanyi.caiyunapp.com/)
-   [x] [ËÖæËÆØÁøªËØëÂêõ](https://fanyi.qq.com/)
-   [x] [ËÖæËÆØ‰∫§‰∫íÁøªËØë](https://transmart.qq.com/)
-   [x] [ÁÅ´Â±±ÁøªËØë](https://translate.volcengine.com/)
-   [x] [Â∞èÁâõÁøªËØë](https://niutrans.com/)
-   [x] [Google](https://translate.google.com)
-   [x] [Bing](https://learn.microsoft.com/zh-cn/azure/cognitive-services/translator/)
-   [x] [Bing ËØçÂÖ∏](https://www.bing.com/dict)
-   [x] [DeepL](https://www.deepl.com/)
-   [x] [ÊúâÈÅìÁøªËØë](https://ai.youdao.com/)
-   [x] [ÂâëÊ°•ËØçÂÖ∏](https://dictionary.cambridge.org/)
-   [x] [Yandex](https://translate.yandex.com/)
-   [x] [Lingva](https://github.com/TheDavidDelta/lingva-translate) ([Êèí‰ª∂](https://github.com/pot-app/pot-app-translate-plugin-template))
-   [x] [Tatoeba](https://tatoeba.org/) ([Êèí‰ª∂](https://github.com/pot-app/pot-app-translate-plugin-tatoeba))
-   [x] [ECDICT](https://github.com/skywind3000/ECDICT) ([Êèí‰ª∂](https://github.com/pot-app/pot-app-translate-plugin-ecdict))

Êõ¥Â§öÊé•Âè£ÊîØÊåÅËßÅ [Êèí‰ª∂Á≥ªÁªü](#Êèí‰ª∂Á≥ªÁªü)

## ÊñáÂ≠óËØÜÂà´

-   [x] Á≥ªÁªü OCR (Á¶ªÁ∫ø)
    -   [x] [Windows.Media.OCR](https://learn.microsoft.com/en-us/uwp/api/windows.media.ocr.ocrengine?view=winrt-22621) on Windows
    -   [x] [Apple Vision Framework](https://developer.apple.com/documentation/vision/recognizing_text_in_images) on MacOS
    -   [x] [Tesseract OCR](https://github.com/tesseract-ocr) on Linux
-   [x] [Tesseract.js](https://tesseract.projectnaptha.com/) (Á¶ªÁ∫ø)
-   [x] [ÁôæÂ∫¶](https://ai.baidu.com/tech/ocr/general)
-   [x] [ËÖæËÆØ](https://cloud.tencent.com/product/ocr-catalog)
-   [x] [ÁÅ´Â±±](https://www.volcengine.com/product/OCR)
-   [x] [ËøÖÈ£û](https://www.xfyun.cn/services/common-ocr)
-   [x] [ËÖæËÆØÂõæÁâáÁøªËØë](https://cloud.tencent.com/document/product/551/17232)
-   [x] [ÁôæÂ∫¶ÂõæÁâáÁøªËØë](https://fanyi-api.baidu.com/product/22)
-   [x] [Simple LaTeX](https://simpletex.cn/)
-   [x] [OCRSpace](https://ocr.space/) ([Êèí‰ª∂](https://github.com/pot-app/pot-app-recognize-plugin-template))
-   [x] [Rapid](https://github.com/RapidAI/RapidOcrOnnx) (Á¶ªÁ∫ø [Êèí‰ª∂](https://github.com/pot-app/pot-app-recognize-plugin-rapid))
-   [x] [Paddle](https://github.com/hiroi-sora/PaddleOCR-json) (Á¶ªÁ∫ø [Êèí‰ª∂](https://github.com/pot-app/pot-app-recognize-plugin-paddle))

Êõ¥Â§öÊé•Âè£ÊîØÊåÅËßÅ [Êèí‰ª∂Á≥ªÁªü](#Êèí‰ª∂Á≥ªÁªü)

## ËØ≠Èü≥ÂêàÊàê

-   [x] [Lingva](https://github.com/thedaviddelta/lingva-translate)

Êõ¥Â§öÊé•Âè£ÊîØÊåÅËßÅ [Êèí‰ª∂Á≥ªÁªü](#Êèí‰ª∂Á≥ªÁªü)

## ÁîüËØçÊú¨

-   [x] [Anki](https://apps.ankiweb.net/)
-   [x] [Ê¨ßË∑ØËØçÂÖ∏](https://dict.eudic.net/)
-   [x] [ÊúâÈÅì](https://www.youdao.com/) ([Êèí‰ª∂](https://github.com/pot-app/pot-app-collection-plugin-youdao))
-   [x] [ÊâáË¥ù](https://web.shanbay.com/web/main) ([Êèí‰ª∂](https://github.com/pot-app/pot-app-collection-plugin-shanbay))

Êõ¥Â§öÊé•Âè£ÊîØÊåÅËßÅ [Êèí‰ª∂Á≥ªÁªü](#Êèí‰ª∂Á≥ªÁªü)

&lt;div align=&quot;center&quot;&gt;

# Êèí‰ª∂Á≥ªÁªü

&lt;/div&gt;

ËΩØ‰ª∂ÂÜÖÁΩÆÊé•Âè£Êï∞ÈáèÊúâÈôêÔºå‰ΩÜÊòØÊÇ®ÂèØ‰ª•ÈÄöËøáÊèí‰ª∂Á≥ªÁªüÊù•Êâ©Â±ïËΩØ‰ª∂ÁöÑÂäüËÉΩ„ÄÇ

## Êèí‰ª∂ÂÆâË£Ö

‰Ω†ÂèØ‰ª•Âú® [Plugin List](https://pot-app.com/plugin.html) Êü•Êâæ‰Ω†ÈúÄË¶ÅÁöÑÊèí‰ª∂ÔºåÁÑ∂ÂêéÂâçÂæÄÊèí‰ª∂‰ªìÂ∫ì‰∏ãËΩΩÊèí‰ª∂„ÄÇ

pot Êèí‰ª∂ÁöÑÊâ©Â±ïÂêç‰∏∫ `.potext`, ‰∏ãËΩΩÂæóÂà∞`.potext`Êñá‰ª∂‰πãÂêéÔºå Âú® ÂÅèÂ•ΩËÆæÁΩÆ-ÊúçÂä°ËÆæÁΩÆ-Ê∑ªÂä†Â§ñÈÉ®Êèí‰ª∂-ÂÆâË£ÖÂ§ñÈÉ®Êèí‰ª∂ ÈÄâÊã©ÂØπÂ∫îÁöÑ `.potext` Âç≥ÂèØÂÆâË£ÖÊàêÂäüÔºåÊ∑ªÂä†Âà∞ÊúçÂä°ÂàóË°®‰∏≠Âç≥ÂèØÂÉèÂÜÖÁΩÆÊúçÂä°‰∏ÄÊ†∑Ê≠£Â∏∏‰ΩøÁî®‰∫Ü„ÄÇ

### ÊïÖÈöúÊéíÈô§

-   Êâæ‰∏çÂà∞ÊåáÂÆöÁöÑÊ®°Âùó (Windows)

    Âá∫Áé∞Á±ª‰ººËøôÊ†∑ÁöÑÊä•ÈîôÊòØÂõ†‰∏∫Á≥ªÁªüÁº∫Â∞ë C++Â∫ìÔºåÂâçÂæÄ[ËøôÈáå](https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist?view=msvc-170#visual-studio-2015-2017-2019-and-2022)ÂÆâË£ÖÂç≥ÂèØËß£ÂÜ≥ÈóÆÈ¢ò„ÄÇ

-   ‰∏çÊòØÊúâÊïàÁöÑ Win32 Â∫îÁî®Á®ãÂ∫è (Windows)

    Âá∫Áé∞Á±ª‰ººËøôÊ†∑ÁöÑÊä•ÈîôËØ¥Êòé‰Ω†Ê≤°Êúâ‰∏ãËΩΩÂØπÂ∫îÁ≥ªÁªüÊàñËÄÖÊû∂ÊûÑÁöÑÊèí‰ª∂ÔºåÂâçÂæÄÊèí‰ª∂‰ªìÂ∫ì‰∏ãËΩΩÊ≠£Á°ÆÁöÑÊèí‰ª∂Âç≥ÂèØËß£ÂÜ≥ÈóÆÈ¢ò„ÄÇ

## Êèí‰ª∂ÂºÄÂèë

Âú® [Plugin List](https://pot-app.com/plugin.html) ‰∏≠ÁöÑ [Ê®°Êùø](https://pot-app.com/plugin.html#%E6%A8%A1%E6%9D%BF) Á´†ËäÇÊèê‰æõ‰∫ÜÂêÑÁßçÊèí‰ª∂ÁöÑÂºÄÂèëÊ®°ÊùøÔºåÂÖ∑‰ΩìÁöÑÂºÄÂèëÊñáÊ°£ËØ∑Êü•ÁúãÂØπÂ∫îÁöÑÊ®°Êùø‰ªìÂ∫ì„ÄÇ

&lt;div align=&quot;center&quot;&gt;

# ÂÆâË£ÖÊåáÂçó

&lt;/div&gt;

## Windows

### ÈÄöËøá Winget ÂÆâË£Ö

```powershell
winget install Pylogmon.pot
```

### ÊâãÂä®ÂÆâË£Ö

1. Âú® [Release](https://github.com/pot-app/pot-desktop/releases/latest) È°µÈù¢‰∏ãËΩΩÊúÄÊñ∞ `exe` ÂÆâË£ÖÂåÖ„ÄÇ

    - 64 ‰ΩçÊú∫Âô®‰∏ãËΩΩ `pot_{version}_x64-setup.exe`
    - 32 ‰ΩçÊú∫Âô®‰∏ãËΩΩ `pot_{version}_x86-setup.exe`
    - arm64 Êú∫Âô®‰∏ãËΩΩ `pot_{version}_arm64-setup.exe`

2. ÂèåÂáªÂÆâË£ÖÂåÖËøõË°åÂÆâË£Ö„ÄÇ

### ÊïÖÈöúÊéíÈô§

-   ÂêØÂä®ÂêéÊ≤°ÊúâÁïåÈù¢ÔºåÁÇπÂáªÊâòÁõòÂõæÊ†áÊ≤°ÊúâÂèçÂ∫î

    Ê£ÄÊü•ÊòØÂê¶Âç∏ËΩΩ/Á¶ÅÁî®‰∫Ü WebView2ÔºåÂ¶ÇÊûúÂç∏ËΩΩ/Á¶ÅÁî®‰∫Ü WebView2ÔºåËØ∑ÊâãÂä®ÂÆâË£Ö WebView2 ÊàñÂ∞ÜÂÖ∂ÊÅ¢Â§ç„ÄÇ

    Â¶ÇÊûúÊòØ‰ºÅ‰∏öÁâàÁ≥ªÁªü‰∏çÊñπ‰æøÂÆâË£ÖÊàñÊó†Ê≥ïÂÆâË£Ö WebView2ÔºåËØ∑Â∞ùËØïÂú® [Release](https://github.com/pot-app/pot-desktop/releases/latest) ‰∏ãËΩΩÂÜÖÁΩÆ WebView2 ÁöÑÁâàÊú¨ `pot_{version}_{arch}_fix_webview2_runtime-setup.exe`

    Ëã•ÈóÆÈ¢ò‰ªçÁÑ∂Â≠òÂú®ËØ∑Â∞ùËØï‰ΩøÁî® Windows7 ÂÖºÂÆπÊ®°ÂºèÂêØÂä®„ÄÇ

## MacOS

### ÈÄöËøá Brew ÂÆâË£Ö

1. Ê∑ªÂä†Êàë‰ª¨ÁöÑ tap:

```bash
brew tap pot-app/homebrew-tap
```

2. ÂÆâË£Ö pot:

```bash
brew install --cask pot
```

3. Êõ¥Êñ∞ pot

```bash
brew upgrade --cask pot
```

### ÊâãÂä®ÂÆâË£Ö

1. ‰ªé [Release](https://github.com/pot-app/pot-desktop/releases/latest) È°µÈù¢‰∏ãËΩΩÊúÄÊñ∞ÁöÑ `dmg` ÂÆâË£ÖÂåÖ„ÄÇÔºàÂ¶ÇÊûúÊÇ®‰ΩøÁî®ÁöÑÊòØ M1 ËäØÁâáÔºåËØ∑‰∏ãËΩΩÂêç‰∏∫`pot_{version}_aarch64.dmg`ÁöÑÂÆâË£ÖÂåÖÔºåÂê¶ÂàôËØ∑‰∏ãËΩΩÂêç‰∏∫`pot_{version}_x64.dmg`ÁöÑÂÆâË£ÖÂåÖÔºâ
2. ÂèåÂáª‰∏ãËΩΩÁöÑÊñá‰ª∂ÂêéÂ∞Ü pot ÊãñÂÖ• Applications Êñá‰ª∂Â§πÂç≥ÂèØÂÆåÊàêÂÆâË£Ö„ÄÇ

### ÊïÖÈöúÊéíÈô§

-   Áî±‰∫éÂºÄÂèëËÄÖÊó†Ê≥ïÈ™åËØÅÔºå‚Äúpot‚ÄùÊó†Ê≥ïÊâìÂºÄ„ÄÇ

    ÁÇπÂáª ÂèñÊ∂à ÊåâÈíÆÔºåÁÑ∂ÂêéÂéª ËÆæÁΩÆ -&gt; ÈöêÁßÅ‰∏éÂÆâÂÖ®ÊÄß È°µÈù¢ÔºåÁÇπÂáª ‰ªçË¶ÅÊâìÂºÄ ÊåâÈíÆÔºåÁÑ∂ÂêéÂú®ÂºπÂá∫Á™óÂè£ÈáåÁÇπÂáª ÊâìÂºÄ ÊåâÈíÆÂç≥ÂèØÔºå‰ª•ÂêéÊâìÂºÄ pot Â∞±ÂÜç‰πü‰∏ç‰ºöÊúâ‰ªª‰ΩïÂºπÁ™óÂëäË≠¶‰∫Ü

    Â¶ÇÊûúÂú® ÈöêÁßÅ‰∏éÂÆâÂÖ®ÊÄß ‰∏≠Êâæ‰∏çÂà∞‰ª•‰∏äÈÄâÈ°πÔºåÊàñÂêØÂä®Êó∂ÊèêÁ§∫Êñá‰ª∂ÊçüÂùè„ÄÇÊâìÂºÄ Terminal.appÔºåÂπ∂ËæìÂÖ•‰ª•‰∏ãÂëΩ‰ª§ÔºåÁÑ∂ÂêéÈáçÂêØ pot Âç≥ÂèØÔºö

    ```bash
    sudo xattr -d com.apple.quarantine /Applications/pot.app
    ```

-   Â¶ÇÊûúÊØèÊ¨°ÊâìÂºÄÊó∂ÈÉΩÈÅáÂà∞ËæÖÂä©ÂäüËÉΩÊùÉÈôêÊèêÁ§∫ÔºåÊàñËÄÖÊó†Ê≥ïËøõË°åÂàíËØçÁøªËØëÔºåËØ∑ÂâçÂæÄËÆæÁΩÆ -&gt; ÈöêÁßÅ‰∏éÂÆâÂÖ® -&gt; ËæÖÂä©ÂäüËÉΩÔºåÁßªÈô§ ‚Äúpot‚ÄùÔºåÂπ∂ÈáçÊñ∞Ê∑ªÂä† ‚Äúpot‚Äù„ÄÇ

## Linux

### Debian/Ubuntu

1. ‰ªé [Release](https://github.com/pot-app/pot-desktop/releases/latest) È°µÈù¢‰∏ãËΩΩÊúÄÊñ∞ÁöÑÂØπÂ∫îÊû∂ÊûÑÁöÑ `deb` ÂÆâË£ÖÂåÖ„ÄÇ

2. ‰ΩøÁî® `apt-get` ËøõË°åÂÆâË£Ö

    ```bash
    sudo apt-get install ./pot_{version}_amd64.deb
    ```

### Arch/Manjaro

&gt; [!WARNING]
&gt; Âú®ÊúÄÊñ∞ÁâàÊú¨ÁöÑ [Webkit2Gtk](https://archlinux.org/packages/extra/x86_64/webkit2gtk) (2.42.0) ‰∏≠ÔºåÁî±‰∫é Nvidia ‰∏ìÊúâÈ©±Âä®Êú™ÂÆåÂÖ®ÂÆûÁé∞ DMABUFÔºåÂ∞ÜÂØºËá¥Êó†Ê≥ïÂêØÂä®ÂíåÂ¥©Ê∫ÉÁöÑÊÉÖÂÜµÂèëÁîü„ÄÇ&lt;br&gt;
&gt; ËØ∑ÈôçÁ∫ßÊàñÂú® `/etc/environment` ÔºàÊàñËÄÖÂÖ∂‰ªñËÆæÁΩÆÁéØÂ¢ÉÂèòÈáèÁöÑÂú∞ÊñπÔºâ‰∏≠Âä†ÂÖ• `WEBKIT_DISABLE_DMABUF_RENDERER=1` ÁéØÂ¢ÉÂèòÈáèÂÖ≥Èó≠ DMABUF ÁöÑ‰ΩøÁî®„ÄÇ

1. Âú® [AUR](https://aur.archlinux.org/packages?O=0&amp;K=pot-translation) Êü•Áúã

‰ΩøÁî® `AUR helper` ÂÆâË£ÖÔºö

```bash
yay -S pot-translation # Êàñ pot-translation-bin

# paru -S pot-translation # Êàñ pot-translation-bin
```

2. Â¶ÇÊûú‰Ω†‰ΩøÁî® `archlinuxcn` Ê∫êÔºåÂèØ‰ª•Áõ¥Êé•‰ΩøÁî® pacman ÂÆâË£Ö

```bash
sudo pacman -S pot-translation
```

### Flatpak

&gt; [!WARNING]
&gt; Flatpak ÁâàÊú¨Áº∫Â§±ÊâòÁõòÂõæÊ†á„ÄÇ

&lt;a href=&#039;https://flathub.org/apps/com.pot_app.pot&#039;&gt;
    &lt;img width=&#039;240&#039; alt=&#039;Download on Flathub&#039; src=&#039;https://flathub.org/api/badge?locale=zh-Hans&#039;/&gt;
&lt;/a&gt;

&lt;div align=&quot;center&quot;&gt;

# Â§ñÈÉ®Ë∞ÉÁî®

&lt;/div&gt;

Pot Êèê‰æõ‰∫ÜÂÆåÊï¥ÁöÑ HTTP Êé•Âè£Ôºå‰ª•‰æøÂèØ‰ª•Ë¢´ÂÖ∂‰ªñËΩØ‰ª∂Ë∞ÉÁî®„ÄÇÊÇ®ÂèØ‰ª•ÈÄöËøáÂêë `127.0.0.1:port` ÂèëÈÄÅ HTTP ËØ∑Ê±ÇÊù•Ë∞ÉÁî® potÔºåÂÖ∂‰∏≠ÁöÑ`port`ÊòØ pot ÁõëÂê¨ÁöÑÁ´ØÂè£Âè∑ÔºåÈªòËÆ§‰∏∫`60828`,ÂèØ‰ª•Âú®ËΩØ‰ª∂ËÆæÁΩÆ‰∏≠ËøõË°åÊõ¥Êîπ„ÄÇ

## API ÊñáÊ°£:

```bash
POST &quot;/&quot; =&gt; ÁøªËØëÊåáÂÆöÊñáÊú¨(body‰∏∫ÈúÄË¶ÅÁøªËØëÁöÑÊñáÊú¨),
GET &quot;/config&quot; =&gt; ÊâìÂºÄËÆæÁΩÆ,
POST &quot;/translate&quot; =&gt; ÁøªËØëÊåáÂÆöÊñáÊú¨(Âêå&quot;/&quot;),
GET &quot;/selection_translate&quot; =&gt; ÂàíËØçÁøªËØë,
GET &quot;/input_translate&quot; =&gt; ËæìÂÖ•ÁøªËØë,
GET &quot;/ocr_recognize&quot; =&gt; Êà™ÂõæOCR,
GET &quot;/ocr_translate&quot; =&gt; Êà™ÂõæÁøªËØë,
GET &quot;/ocr_recognize?screenshot=false&quot; =&gt; Êà™ÂõæOCR(‰∏ç‰ΩøÁî®ËΩØ‰ª∂ÂÜÖÊà™Âõæ),
GET &quot;/ocr_translate?screenshot=false&quot; =&gt; Êà™ÂõæÁøªËØë(‰∏ç‰ΩøÁî®ËΩØ‰ª∂ÂÜÖÊà™Âõæ),
GET &quot;/ocr_recognize?screenshot=true&quot; =&gt; Êà™ÂõæOCR,
GET &quot;/ocr_translate?screenshot=true&quot; =&gt; Êà™ÂõæÁøªËØë,
```

## Á§∫‰æãÔºö

-   Ë∞ÉÁî®ÂàíËØçÁøªËØëÔºö

    Â¶ÇÊûúÊÉ≥Ë¶ÅË∞ÉÁî® pot ÂàíËØçÁøªËØëÔºåÂè™ÈúÄÂêë`127.0.0.1:port`ÂèëÈÄÅËØ∑Ê±ÇÂç≥ÂèØ„ÄÇ

    ‰æãÂ¶ÇÈÄöËøá curl ÂèëÈÄÅËØ∑Ê±ÇÔºö

    ```bash
    curl &quot;127.0.0.1:60828/selection_translate&quot;
    ```

## ‰∏ç‰ΩøÁî®ËΩØ‰ª∂ÂÜÖÊà™Âõæ

Ëøô‰∏ÄÂäüËÉΩÂèØ‰ª•ËÆ©ÊÇ®Âú®‰∏ç‰ΩøÁî®ËΩØ‰ª∂ÂÜÖÊà™ÂõæÁöÑÊÉÖÂÜµ‰∏ãË∞ÉÁî®Êà™Âõæ OCR/Êà™ÂõæÁøªËØëÂäüËÉΩÔºåËøôÊ†∑ÊÇ®Â∞±ÂèØ‰ª•‰ΩøÁî®ÊÇ®ÂñúÊ¨¢ÁöÑÊà™ÂõæÂ∑•ÂÖ∑Êù•Êà™Âõæ‰∫ÜÔºå‰πüÂèØ‰ª•Ëß£ÂÜ≥Âú®Êüê‰∫õÂπ≥Âè∞‰∏ã pot Ëá™Â∏¶ÁöÑÊà™ÂõæÊó†Ê≥ï‰ΩøÁî®ÁöÑÈóÆÈ¢ò„ÄÇ

### Ë∞ÉÁî®ÊµÅÁ®ã

1. ‰ΩøÁî®ÂÖ∂‰ªñÊà™ÂõæÂ∑•ÂÖ∑Êà™Âõæ
2. Â∞ÜÊà™Âõæ‰øùÂ≠òÂú® `$CACHE/com.pot-app.desktop/pot_screenshot_cut.png`
3. Âêë`127.0.0.1:port/ocr_recognize?screenshot=false`ÂèëÈÄÅËØ∑Ê±ÇÂç≥ÂèØË∞ÉÁî®ÊàêÂäü

&gt; `$CACHE`‰∏∫Á≥ªÁªüÁºìÂ≠òÁõÆÂΩïÔºå‰æãÂ¶ÇÂú® Windows ‰∏ä‰∏∫`C:\Users\{Áî®Êà∑Âêç}\AppData\Local\com.pot-app.desktop\pot_screenshot_cut.png`

### Á§∫‰æã

Âú® Linux ‰∏ãË∞ÉÁî® Flameshot ËøõË°åÊà™Âõæ OCR:

```bash
rm ~/.cache/com.pot-app.desktop/pot_screenshot_cut.png &amp;&amp; flameshot gui -s -p ~/.cache/com.pot-app.desktop/pot_screenshot_cut.png &amp;&amp; curl &quot;127.0.0.1:60828/ocr_recognize?screenshot=false&quot;
```

## Áé∞ÊúâÁî®Ê≥ï (Âø´Êç∑ÂàíËØçÁøªËØë)

### SnipDo (Windows)

1. ‰ªé [Microsoft Store](https://apps.microsoft.com/store/detail/snipdo/9NPZ2TVKJVT7) ‰∏ãËΩΩÂÆâË£Ö SnipDo„ÄÇ
2. ‰ªé [Release](https://github.com/pot-app/pot-desktop/releases/latest) ‰∏ãËΩΩ pot ÁöÑ SnipDo Êâ©Â±ï (pot.pbar)
3. ÂèåÂáª‰∏ãËΩΩÁöÑÊâ©Â±ïÊñá‰ª∂ÂÆåÊàêÂÆâË£Ö„ÄÇ
4. ÈÄâ‰∏≠ÊñáÂ≠óÔºåÂèØ‰ª•ÁúãÂà∞ÂºπÂá∫ÁöÑ SnipDo Â∑•ÂÖ∑Êù°ÔºåÁÇπÂáªÁøªËØëÊåâÈíÆÂç≥ÂèØÁøªËØë„ÄÇ

### PopClip (MacOS)

1. ‰ªé [App Store](https://apps.apple.com/us/app/popclip/id445189367?mt=12) ‰∏ãËΩΩÂÆâË£Ö PopClip
2. ‰ªé [Release](https://github.com/pot-app/pot-desktop/releases/latest) ‰∏ãËΩΩ pot ÁöÑ PopClip Êâ©Â±ï (pot.popclipextz)
3. ÂèåÂáª‰∏ãËΩΩÁöÑÊâ©Â±ïÊñá‰ª∂ÂÆåÊàêÂÆâË£Ö„ÄÇ
4. Âú® PopClip ÁöÑÊâ©Â±ï‰∏≠ÂêØÁî® pot Êâ©Â±ïÔºåÈÄâ‰∏≠ÊñáÊú¨Âç≥ÂèØÁÇπÂáªÁøªËØë„ÄÇ

### Starry (Linux)

&gt; Starry ÁõÆÂâç‰ªçÂ§Ñ‰∫éÂºÄÂèëÈò∂ÊÆµÔºåÂõ†Ê≠§ÊÇ®Âè™ËÉΩÊâãÂä®ÁºñËØëÂÆÉ„ÄÇ

Github: [ccslykx/Starry](https://github.com/ccslykx/Starry)

&lt;div align=&quot;center&quot;&gt;

# Wayland ÊîØÊåÅ

&lt;/div&gt;

Áî±‰∫éÂêÑÂ§ßÂèëË°åÁâàÂØπ‰∫é Wayland ÁöÑÊîØÊåÅÁ®ãÂ∫¶‰∏çÂêåÔºåÊâÄ‰ª• pot Êú¨Ë∫´Ê≤°Ê≥ïÂÅöÂà∞ÁâπÂà´ÂÆåÁæéÁöÑÊîØÊåÅÔºåËøôÈáåÂèØ‰ª•Êèê‰æõ‰∏Ä‰∫õÂ∏∏ËßÅÈóÆÈ¢òÁöÑËß£ÂÜ≥ÊñπÊ°àÔºåÈÄöËøáÂêàÁêÜÁöÑËÆæÁΩÆ‰πãÂêéÔºåpot ‰πüÂèØ‰ª•Âú® Wayland ‰∏ãÂÆåÁæéËøêË°å„ÄÇ

## Âø´Êç∑ÈîÆÊó†Ê≥ï‰ΩøÁî®

Áî±‰∫é Tauri ÁöÑÂø´Êç∑ÈîÆÊñπÊ°àÂπ∂Ê≤°ÊúâÊîØÊåÅ WaylandÔºåÊâÄ‰ª• pot Â∫îÁî®ÂÜÖÁöÑÂø´Êç∑ÈîÆËÆæÁΩÆÂú® Wayland ‰∏ãÊó†Ê≥ï‰ΩøÁî®„ÄÇ ÊÇ®ÂèØ‰ª•ËÆæÁΩÆÁ≥ªÁªüÂø´Êç∑Áî® curl ÂèëÈÄÅËØ∑Ê±ÇÊù•Ëß¶Âèë potÔºåËØ¶ËßÅ[Â§ñÈÉ®Ë∞ÉÁî®](#Â§ñÈÉ®Ë∞ÉÁî®)

## Êà™ÂõæÊó†Ê≥ï‰ΩøÁî®

Âú®‰∏Ä‰∫õÁ∫Ø Wayland Ê°åÈù¢ÁéØÂ¢É/Á™óÂè£ÁÆ°ÁêÜÂô®(Â¶Ç Hyprland)‰∏äÔºåpot ÂÜÖÁΩÆÁöÑÊà™ÂõæÊó†Ê≥ï‰ΩøÁî®ÔºåËøôÊó∂ÂèØ‰ª•ÈÄöËøá‰ΩøÁî®ÂÖ∂‰ªñÊà™ÂõæÂ∑•ÂÖ∑‰ª£ÊõøÔºåËØ¶ËßÅ [‰∏ç‰ΩøÁî®ËΩØ‰ª∂ÂÜÖÊà™Âõæ](#‰∏ç‰ΩøÁî®ËΩØ‰ª∂ÂÜÖÊà™Âõæ)

‰∏ãÈù¢ÁªôÂá∫Âú® Hyprland ‰∏ãÁöÑÈÖçÁΩÆÁ§∫‰æã(ÈÄöËøá grim Âíå slurp ÂÆûÁé∞Êà™Âõæ)Ôºö

```conf
bind = ALT, X, exec, grim -g &quot;$(slurp)&quot; ~/.cache/com.pot-app.desktop/pot_screenshot_cut.png &amp;&amp; curl &quot;127.0.0.1:60828/ocr_recognize?screenshot=false&quot;
bind = ALT, C, exec, grim -g &quot;$(slurp)&quot; ~/.cache/com.pot-app.desktop/pot_screenshot_cut.png &amp;&amp; curl &quot;127.0.0.1:60828/ocr_translate?screenshot=false&quot;
```

ÂÖ∂‰ªñÊ°åÈù¢ÁéØÂ¢É/Á™óÂè£ÁÆ°ÁêÜÂô®‰πüÊòØÁ±ª‰ººÁöÑÊìç‰Ωú

## ÂàíËØçÁøªËØëÁ™óÂè£Ë∑üÈöèÈº†Ê†á‰ΩçÁΩÆ

Áî±‰∫éÁõÆÂâç pot Âú® Wayland ‰∏ãËøòÊó†Ê≥ïËé∑ÂèñÂà∞Ê≠£Á°ÆÁöÑÈº†Ê†áÂùêÊ†áÔºåÊâÄ‰ª•ÂÜÖÈÉ®ÁöÑÂÆûÁé∞Êó†Ê≥ïÂ∑•‰Ωú„ÄÇ ÂØπ‰∫éÊüê‰∫õÊ°åÈù¢ÁéØÂ¢É/Á™óÂè£ÁÆ°ÁêÜÂô®ÔºåÂèØ‰ª•ÈÄöËøáËÆæÁΩÆÁ™óÂè£ËßÑÂàôÊù•ÂÆûÁé∞Á™óÂè£Ë∑üÈöèÈº†Ê†á‰ΩçÁΩÆÔºåËøôÈáå‰ª• Hyprland ‰∏∫‰æãÔºö

```conf
windowrulev2 = float, class:(pot), title:(Translator|OCR|PopClip|Screenshot Translate) # Translation window floating
windowrulev2 = move cursor 0 0, class:(pot), title:(Translator|PopClip|Screenshot Translate) # Translation window follows the mouse position.
```

&lt;div align=&quot;center&quot;&gt;

# ÂõΩÈôÖÂåñ([Weblate](https://hosted.weblate.org/engage/pot-app/))

[![](https://hosted.weblate.org/widget/pot-app/pot-desktop/svg-badge.svg)](https://hosted.weblate.org/engage/pot-app/)

[![](https://hosted.weblate.org/widget/pot-app/pot-desktop/zh_Hans/multi-auto.svg)](https://hosted.weblate.org/engage/pot-app/)

&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;

# Ë¥°ÁåÆËÄÖ

&lt;/div&gt;

&lt;img src=&quot;https://github.com/pot-app/.github/blob/master/pot-desktop-contributions.svg?raw=true&quot; width=&quot;100%&quot;/&gt;

## ÊâãÂä®ÁºñËØë

### ÁéØÂ¢ÉË¶ÅÊ±Ç

Node.js &gt;= 18.0.0

pnpm &gt;= 8.5.0

Rust &gt;= 1.80.0

### ÂºÄÂßãÁºñËØë

1. Clone ‰ªìÂ∫ì

    ```bash
    git clone https://github.com/pot-app/pot-desktop.git
    ```

2. ÂÆâË£Ö‰æùËµñ

    ```bash
    cd pot-desktop
    pnpm install
    ```

3. ÂÆâË£Ö‰æùËµñ(‰ªÖ Linux ÈúÄË¶Å)

    ```bash
    sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev patchelf libxdo-dev libxcb1 libxrandr2 libdbus-1-3
    ```

4. ÂºÄÂèëË∞ÉËØï

    ```bash
    pnpm tauri dev # Run the app in development mode
    ```

5. ÊâìÂåÖÊûÑÂª∫
    ```bash
    pnpm tauri build # Build into installation package
    ```

&lt;div align=&quot;center&quot;&gt;

# ÊÑüË∞¢

&lt;/div&gt;

-   [Bob](https://github.com/ripperhe/Bob) ÁÅµÊÑüÊù•Ê∫ê
-   [bob-plugin-openai-translator](https://github.com/yetone/bob-plugin-openai-translator) OpenAI Êé•Âè£ÂèÇËÄÉ
-   [@uiYzzi](https://github.com/uiYzzi) ÂÆûÁé∞ÊÄùË∑Ø
-   [@Lichenkass](https://github.com/Lichenkass) Áª¥Êä§ Deepin Â∫îÁî®ÂïÜÂ∫ó‰∏≠ÁöÑ pot
-   [Tauri](https://github.com/tauri-apps/tauri) Â•ΩÁî®ÁöÑ GUI Ê°ÜÊû∂

&lt;div align=&quot;center&quot;&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[dequelabs/axe-core]]></title>
            <link>https://github.com/dequelabs/axe-core</link>
            <guid>https://github.com/dequelabs/axe-core</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:15 GMT</pubDate>
            <description><![CDATA[Accessibility engine for automated Web UI testing]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/dequelabs/axe-core">dequelabs/axe-core</a></h1>
            <p>Accessibility engine for automated Web UI testing</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,576</p>
            <p>Forks: 837</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre># axe-core

[![License](https://img.shields.io/npm/l/axe-core.svg?color=c41)](LICENSE)
[![Version](https://img.shields.io/npm/v/axe-core.svg)](https://www.npmjs.com/package/axe-core)
[![NPM downloads](https://img.shields.io/npm/dw/axe-core.svg?color=080)![](https://img.shields.io/npm/dy/axe-core.svg?color=080&amp;label=)](https://npm-stat.com/charts.html?package=axe-core&amp;from=2017-01-01)
[![Commits](https://img.shields.io/github/commit-activity/y/dequelabs/axe-core.svg)](https://github.com/dequelabs/axe-core/commits/develop)
[![GitHub contributors](https://img.shields.io/github/contributors/dequelabs/axe-core.svg?color=080)](https://github.com/dequelabs/axe-core/graphs/contributors)
[![Join our Slack chat](https://img.shields.io/badge/slack-chat-purple.svg?logo=slack)](https://accessibility.deque.com/axe-community)
[![Package Quality](https://npm.packagequality.com/shield/axe-core.svg)](https://packagequality.com/#?package=axe-core)

Axe is an accessibility testing engine for websites and other HTML-based user interfaces. It&#039;s fast, secure, lightweight, and was built to seamlessly integrate with any existing test environment so you can automate accessibility testing alongside your regular functional testing.

[Sign up for axe news](https://hubs.ly/H0fsN0b0) to get the latest on axe features, future releases, and events.

## The Accessibility Rules

Axe-core has different types of rules, for WCAG 2.0, 2.1, 2.2 on level A, AA and AAA as well as a number of best practices that help you identify common accessibility practices like ensuring every page has an `h1` heading, and to help you avoid &quot;gotchas&quot; in ARIA like where an ARIA attribute you used will get ignored. The complete list of rules, grouped WCAG level and best practice, can be found in [doc/rule-descriptions.md](./doc/rule-descriptions.md).

With axe-core, you can find **on average 57% of WCAG issues automatically**. Additionally, axe-core will return elements as &quot;incomplete&quot; where axe-core could not be certain, and manual review is needed.

To catch bugs earlier in the development cycle we recommend using the [axe-linter vscode extension](https://marketplace.visualstudio.com/items?itemName=deque-systems.vscode-axe-linter). To improve test coverage even further we recommend the [intelligent guided tests](https://www.youtube.com/watch?v=AtsX0dPCG_4&amp;feature=youtu.be&amp;ab_channel=DequeSystems) in the [axe Extension](https://www.deque.com/axe/browser-extensions/).

## Getting started

First download the package:

```console
npm install axe-core --save-dev
```

Now include the javascript file in each of your iframes in your fixtures or test systems:

```html
&lt;script src=&quot;node_modules/axe-core/axe.min.js&quot;&gt;&lt;/script&gt;
```

Now insert calls at each point in your tests where a new piece of UI becomes visible or exposed:

```js
axe
  .run()
  .then(results =&gt; {
    if (results.violations.length) {
      throw new Error(&#039;Accessibility issues found&#039;);
    }
  })
  .catch(err =&gt; {
    console.error(&#039;Something bad happened:&#039;, err.message);
  });
```

## Philosophy

The web can only become an accessible, inclusive space if developers are empowered to take responsibility for accessibility testing and accessible coding practices.

Automated accessibility testing is a huge timesaver, it doesn&#039;t require special expertise, and it allows teams to focus expert resources on the accessibility issues that really need them. Unfortunately, most accessibility tools are meant to be run on sites and applications that have reached the end of the development process and often don&#039;t give clear or consistent results, causing frustration and delays just when you thought your product was ready to ship.

Axe was built to reflect how web development actually works. It works with all modern browsers, tools, and testing environments a dev team might use. With axe, accessibility testing can be performed as part of your unit testing, integration testing, browser testing, and any other functional testing your team already performs on a day-to-day basis. Building accessibility testing into the early development process saves time, resources, and all kinds of frustration.

## About axe - our Manifesto

- Axe is open source.
- It returns zero false positives (bugs notwithstanding).
- It&#039;s designed to work on all modern browsers and with whatever tools, frameworks, libraries and environments you use today.
- It&#039;s actively supported by [Deque Systems](https://www.deque.com), a major accessibility vendor.
- It integrates with your existing functional/acceptance automated tests.
- It automatically determines which rules to run based on the evaluation context.
- Axe supports in-memory fixtures, static fixtures, integration tests, and iframes of infinite depth.
- Axe is highly configurable.

## Supported Browsers

The [axe-core API](doc/API.md) fully supports the following browsers:

- Microsoft Edge v40 and above
- Google Chrome v42 and above
- Mozilla Firefox v38 and above
- Apple Safari v7 and above
- Internet Explorer v11 (DEPRECATED)

Support means that we will fix bugs and attempt to test each browser regularly. Only Chrome and Firefox are currently tested on every pull request.

There is limited support for JSDOM. We will attempt to make all rules compatible with JSDOM but where this is not possible, we recommend turning those rules off. Currently the `color-contrast` rule is known not to work with JSDOM.

We can only support environments where features are either natively supported or polyfilled correctly. We do not support the deprecated v0 Shadow DOM implementation.

## Contents of the API Package

The [axe-core API](doc/API.md) package consists of:

- `axe.js` - the JavaScript file that should be included in your web site under test (API)
- `axe.min.js` - a minified version of the above file

## Localization

Axe can be built using your local language. To do so, a localization file must be added to the `./locales` directory. This file must be named in the following manner: `&lt;langcode&gt;.json`. To build axe using this locale, instead of the default, run axe with the `--lang` flag, like so:

`grunt build --lang=nl`

or equivalently:

`npm run build -- --lang=nl`

This will create a new build for axe, called `axe.&lt;lang&gt;.js` and `axe.&lt;lang&gt;.min.js`. If you want to build all localized versions, simply pass in `--all-lang` instead. If you want to build multiple localized versions (but not all of them), you can pass in a comma-separated list of languages to the `--lang` flag, like `--lang=nl,ja`.

To create a new translation for axe, start by running `grunt translate --lang=&lt;langcode&gt;`. This will create a json file in the `./locales` directory, with the default English text in it for you to translate. Alternatively, you could copy `./locales/_template.json`. We welcome any localization for axe-core. For details on how to contribute, see the Contributing section below. For details on the message syntax, see [Check Message Template](/doc/check-message-template.md).

To update an existing translation file, re-run `grunt translate --lang=&lt;langcode&gt;`. This will add new messages used in English and remove messages which were not used in English.

Additionally, locale can be applied at runtime by passing a `locale` object to `axe.configure()`. The locale object must be of the same shape as existing locales in the `./locales` directory. For example:

```js
axe.configure({
  locale: {
    lang: &#039;de&#039;,
    rules: {
      accesskeys: {
        help: &#039;Der Wert des accesskey-Attributes muss einzigartig sein.&#039;
      }
      // ...
    },
    checks: {
      abstractrole: {
        fail: &#039;Abstrakte ARIA-Rollen d√ºrfen nicht direkt verwendet werden.&#039;
      },
      &#039;aria-errormessage&#039;: {
        // Note: doT (https://github.com/olado/dot) templates are supported here.
        fail: &#039;Der Wert der aria-errormessage ${data.values}` muss eine Technik verwenden, um die Message anzuk√ºndigen (z. B., aria-live, aria-describedby, role=alert, etc.).&#039;
      }
      // ...
    }
  }
});
```

### Supported Locales

Axe-core supports the following locales. Do note that since locales are contributed by our community, they are not guaranteed to include all translations needed in a release.

- Basque
- Danish
- Dutch
- French
- German
- Hebrew
- Japanese
- Korean
- Norwegian (Bokm√•l)
- Polish
- Portuguese (Brazilian)
- Spanish
- Greek
- Italian
- Simplified Chinese
- Traditional Chinese

## Updates &amp; Security

Axe-core has a new minor release every 3 to 5 months, which usually introduces new rules and features. We recommend scheduling time to upgrade to these versions. Security updates will be made available for minor version lines up to **18 months old**.

- See [release and support](doc/release-and-support.md) for details on the frequency of releases, long-term support and recommendations on upgrading axe-core.
- See [backward compatibility](doc/backwards-compatibility-doc.md) for details on the types of changes different releases may introduce.

## Deque Trademarks Policy

DEQUE, DEQUELABS, AXE¬Æ, and AXE-CORE¬Æ are trademarks of Deque Systems, Inc. Use of the Deque trademarks must be in accordance with [Deque&#039;s trademark policy](https://www.deque.com/legal/trademarks/).

## Supported ARIA Roles and Attributes.

Refer [axe-core ARIA support](./doc/aria-supported.md) for a complete list of ARIA supported roles and attributes by axe.

## Contributing

Read the [Proposing Axe-core Rules guide](./doc/rule-proposal.md)

Read the [documentation on the architecture](./doc/developer-guide.md)

Read the [documentation on contributing](CONTRIBUTING.md)

## Projects using axe-core

[List of projects using axe-core](doc/projects.md)

## Acknowledgements

Thanks to Marat Dulin for his [css-selector-parser](https://www.npmjs.com/package/css-selector-parser) implementation which is included for shadow DOM support. Another thank you to the [Slick Parser](https://github.com/mootools/slick/blob/master/Source/Slick.Parser.js) implementers for their contribution, we have used some of their algorithms in our shadow DOM support code. Thanks to Lea Verou and Chris Lilley for their [colorjs.io](https://colorjs.io/) library which we have used for converting between color formats.

## Licenses

Axe-core is distributed under the [Mozilla Public License, version 2.0](LICENSE). It comes bundled with several dependencies which are distributed under their own terms. (See [LICENSE-3RD-PARTY.txt](LICENSE-3RD-PARTY.txt))
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mediacms-io/mediacms]]></title>
            <link>https://github.com/mediacms-io/mediacms</link>
            <guid>https://github.com/mediacms-io/mediacms</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:14 GMT</pubDate>
            <description><![CDATA[MediaCMS is a modern, fully featured open source video and media CMS, written in Python/Django and React, featuring a REST API.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mediacms-io/mediacms">mediacms-io/mediacms</a></h1>
            <p>MediaCMS is a modern, fully featured open source video and media CMS, written in Python/Django and React, featuring a REST API.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,064</p>
            <p>Forks: 745</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre># MediaCMS

[![GitHub license](https://img.shields.io/badge/License-AGPL%20v3-blue.svg)](https://raw.githubusercontent.com/mediacms-io/mediacms/main/LICENSE.txt)
[![Releases](https://img.shields.io/github/v/release/mediacms-io/mediacms?color=green)](https://github.com/mediacms-io/mediacms/releases/)
[![DockerHub](https://img.shields.io/docker/pulls/mediacms/mediacms)](https://hub.docker.com/r/mediacms/mediacms)



MediaCMS is a modern, fully featured open source video and media CMS. It is developed to meet the needs of modern web platforms for viewing and sharing media. It can be used to build a small to medium video and media portal within minutes.

It is built mostly using the modern stack Django + React and includes a REST API.

A demo is available at https://demo.mediacms.io


## Screenshots

&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/images/index.jpg&quot; width=&quot;340&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/images/video.jpg&quot; width=&quot;340&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/images/embed.jpg&quot; width=&quot;340&quot;&gt;
&lt;/p&gt;

## Features
- **Complete control over your data**: host it yourself!
- **Modern technologies**: Django/Python/Celery, React.
- **Support for multiple publishing workflows**: public, private, unlisted and custom
- **Multiple media types support**: video, audio,  image, pdf
- **Multiple media classification options**: categories, tags and custom
- **Multiple media sharing options**: social media share, videos embed code generation
- **Video Trimmer**: trim video, replace, save as new or create segments
- **Role-Based Access Control (RBAC)**: create RBAC categories and connect users to groups with view/edit access on their media
- **SAML support**: with ability to add mappings to system roles and groups
- **Easy media searching**: enriched with live search functionality
- **Playlists for audio and video content**: create playlists, add and reorder content
- **Responsive design**: including light and dark themes
- **Advanced users management**: allow self registration, invite only, closed.
- **Configurable actions**: allow download, add comments, add likes, dislikes, report media
- **Configuration options**: change logos, fonts, styling, add more pages
- **Enhanced video player**: customized video.js player with multiple resolution and playback speed options
- **Multiple transcoding profiles**: sane defaults for multiple dimensions (144p, 240p, 360p, 480p, 720p, 1080p) and multiple profiles (h264, h265, vp9)
- **Adaptive video streaming**: possible through HLS protocol
- **Subtitles/CC**: support for multilingual subtitle files
- **Scalable transcoding**: transcoding through priorities. Experimental support for remote workers
- **Chunked file uploads**: for pausable/resumable upload of content
- **REST API**: Documented through Swagger
- **Translation**: Most of the CMS is translated to a number of languages

## Example cases

- **Schools, education.** Administrators and editors keep what content will be published, students are not distracted with advertisements and irrelevant content, plus they have the ability to select either to stream or download content.
- **Organization sensitive content.** In cases where content is sensitive and cannot be uploaded to external sites.
- **Build a great community.** MediaCMS can be customized (URLs, logos, fonts, aesthetics) so that you create a highly customized video portal for your community!
- **Personal portal.** Organize, categorize and host your content the way you prefer.


## Philosophy

We believe there&#039;s a need for quality open source web applications that can be used to build community portals and support collaboration.
We have three goals for MediaCMS: a) deliver all functionality one would expect from a modern system, b) allow for easy installation and maintenance, c) allow easy customization and addition of features.


## License

MediaCMS is released under [GNU Affero General Public License v3.0 license](LICENSE.txt).
Copyright Markos Gogoulos.


## Support and paid services

We provide custom installations, development of extra functionality, migration from existing systems, integrations with legacy systems, training and support. Contact us at info@mediacms.io for more information.

### Commercial Hostings
**Elestio**

You can deploy MediaCMS on Elestio using one-click deployment. Elestio supports MediaCMS by providing revenue share so go ahead and click below to deploy and use MediaCMS.

[![Deploy on Elestio](https://elest.io/images/logos/deploy-to-elestio-btn.png)](https://elest.io/open-source/mediacms)

## Hardware considerations

For a small to medium installation, with a few hours of video uploaded daily, and a few hundreds of active daily users viewing content, 4GB Ram / 2-4 CPUs as minimum is ok. For a larger installation with many hours of video uploaded daily, consider adding more CPUs and more Ram.

In terms of disk space, think of what the needs will be. A general rule is to multiply by three the size of the expected uploaded videos (since the system keeps original versions, encoded versions plus HLS), so if you receive 1G of videos daily and maintain all of them, you should consider a 1T disk across a year (1G * 3 * 365).


## Installation / Maintanance

There are two ways to run MediaCMS, through Docker Compose and through installing it on a server via an automation script that installs and configures all needed services. Find the related pages:

- [Single Server](docs/admins_docs.md#2-server-installation) page
- [Docker Compose](docs/admins_docs.md#3-docker-installation) page

  A complete guide can be found on the blog post [How to self-host and share your videos in 2021](https://medium.com/@MediaCMS.io/how-to-self-host-and-share-your-videos-in-2021-14067e3b291b).

## Documentation

* [Users documentation](docs/user_docs.md) page
* [Administrators documentation](docs/admins_docs.md) page
* [Developers documentation](docs/developers_docs.md) page
* [Configuration](docs/admins_docs.md#5-configuration) page
* [Transcoding](docs/transcoding.md) page
* [Developer Experience](docs/dev_exp.md) page
* [Media Permissions](docs/media_permissions.md) page


## Technology

This software uses the following list of awesome technologies: Python, Django, Django Rest Framework, Celery, PostgreSQL, Redis, Nginx, uWSGI, React, Fine Uploader, video.js, FFMPEG, Bento4


## Who is using it

- **Cinemata** non-profit media, technology and culture organization - https://cinemata.org
- **Critical Commons** public media archive and fair use advocacy network - https://criticalcommons.org
- **American Association of Gynecologic Laparoscopists** - https://surgeryu.org/


## How to contribute

If you like the project, here&#039;s a few things you can do
- Hire us, for custom installations, training, support, maintenance work
- Suggest us to others that are interested to hire us
- Write a blog post/article about MediaCMS
- Share on social media about the project
- Open issues, participate on [discussions](https://github.com/mediacms-io/mediacms/discussions), report bugs, suggest ideas
- [Show and tell](https://github.com/mediacms-io/mediacms/discussions/categories/show-and-tell) how you are using the project
- Star the project
- Add functionality, work on a PR, fix an issue!


## Contact

info@mediacms.io
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[wonderwhy-er/DesktopCommanderMCP]]></title>
            <link>https://github.com/wonderwhy-er/DesktopCommanderMCP</link>
            <guid>https://github.com/wonderwhy-er/DesktopCommanderMCP</guid>
            <pubDate>Sat, 30 Aug 2025 00:04:13 GMT</pubDate>
            <description><![CDATA[This is MCP server for Claude that gives it terminal control, file system search and diff file editing capabilities]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/wonderwhy-er/DesktopCommanderMCP">wonderwhy-er/DesktopCommanderMCP</a></h1>
            <p>This is MCP server for Claude that gives it terminal control, file system search and diff file editing capabilities</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,331</p>
            <p>Forks: 480</p>
            <p>Stars today: 19 stars today</p>
            <h2>README</h2><pre># Desktop Commander MCP
### Search, update, manage files and run terminal commands with AI

[![npm downloads](https://img.shields.io/npm/dw/@wonderwhy-er/desktop-commander)](https://www.npmjs.com/package/@wonderwhy-er/desktop-commander)
[![Trust Score](https://archestra.ai/mcp-catalog/api/badge/quality/wonderwhy-er/DesktopCommanderMCP)](https://archestra.ai/mcp-catalog/wonderwhy-er__desktopcommandermcp)
[![smithery badge](https://smithery.ai/badge/@wonderwhy-er/desktop-commander)](https://smithery.ai/server/@wonderwhy-er/desktop-commander)
[![Buy Me A Coffee](https://img.shields.io/badge/Buy%20Me%20A%20Coffee-support-yellow.svg)](https://www.buymeacoffee.com/wonderwhyer)


[![Discord](https://img.shields.io/badge/Join%20Discord-5865F2?style=for-the-badge&amp;logo=discord&amp;logoColor=white)](https://discord.gg/kQ27sNnZr7)


Work with code and text, run processes, and automate tasks, going far beyond other AI editors - without API token costs.


![Desktop Commander MCP](https://raw.githubusercontent.com/wonderwhy-er/ClaudeComputerCommander/main/docs/vertical_video_mobile.mp4)

&lt;a href=&quot;https://glama.ai/mcp/servers/zempur9oh4&quot;&gt;
  &lt;img width=&quot;380&quot; height=&quot;200&quot; src=&quot;https://glama.ai/mcp/servers/zempur9oh4/badge&quot; alt=&quot;Desktop Commander MCP&quot; /&gt;
&lt;/a&gt;

## Table of Contents
- [Features](#features)
- [How to install](#how-to-install)
- [Usage](#usage)
- [Handling Long-Running Commands](#handling-long-running-commands)
- [Work in Progress and TODOs](#roadmap)
- [Sponsors and Supporters](#support-desktop-commander)
- [Website](#website)
- [Media](#media)
- [Testimonials](#testimonials)
- [Frequently Asked Questions](#frequently-asked-questions)
- [Contributing](#contributing)
- [License](#license)

All of your AI development tools in one place.
Desktop Commander puts all dev tools in one chat.
Execute long-running terminal commands on your computer and manage processes through Model Context Protocol (MCP). Built on top of [MCP Filesystem Server](https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem) to provide additional search and replace file editing capabilities.

## Features

- **Enhanced terminal commands with interactive process control**
- **Execute code in memory (Python, Node.js, R) without saving files**
- **Instant data analysis - just ask to analyze CSV/JSON files**
- **Interact with running processes (SSH, databases, development servers)**
- Execute terminal commands with output streaming
- Command timeout and background execution support
- Process management (list and kill processes)
- Session management for long-running commands
- Server configuration management:
  - Get/set configuration values
  - Update multiple settings at once
  - Dynamic configuration changes without server restart
- Full filesystem operations:
  - Read/write files
  - Create/list directories
  - Move files/directories
  - Search files
  - Get file metadata
  - **Negative offset file reading**: Read from end of files using negative offset values (like Unix tail)
- Code editing capabilities:
  - Surgical text replacements for small changes
  - Full file rewrites for major changes
  - Multiple file support
  - Pattern-based replacements
  - vscode-ripgrep based recursive code or text search in folders
- Comprehensive audit logging:
  - All tool calls are automatically logged
  - Log rotation with 10MB size limit
  - Detailed timestamps and arguments

## How to install

Desktop Commander offers multiple installation methods to fit different user needs and technical requirements.

&gt; **üìã Update &amp; Uninstall Information:** Before choosing an installation option, note that **only Options 1, 2, 3, and 6 have automatic updates**. Options 4 and 5 require manual updates. See the sections below for update and uninstall instructions for each option.

### Option 1: Install through npx ‚≠ê **Auto-Updates** **Requires Node.js**
Just run this in terminal:
```
npx @wonderwhy-er/desktop-commander@latest setup
```

For debugging mode (allows Node.js inspector connection):
```
npx @wonderwhy-er/desktop-commander@latest setup --debug
```
Restart Claude if running.

**‚úÖ Auto-Updates:** Yes - automatically updates when you restart Claude  
**üîÑ Manual Update:** Run the setup command again  
**üóëÔ∏è Uninstall:** Run `npx @wonderwhy-er/desktop-commander@latest remove`

### Option 2: Using bash script installer (macOS) ‚≠ê **Auto-Updates** **Installs Node.js if needed**
For macOS users, you can use our automated bash installer which will check your Node.js version, install it if needed, and automatically configure Desktop Commander:
```
curl -fsSL https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install.sh | bash
```
This script handles all dependencies and configuration automatically for a seamless setup experience.

**‚úÖ Auto-Updates:** Yes - requires manual updates  
**üîÑ Manual Update:** Re-run the bash installer command above  
**üóëÔ∏è Uninstall:** Run `npx @wonderwhy-er/desktop-commander@latest remove`

### Option 3: Installing via Smithery ‚≠ê **Auto-Updates** **Requires Node.js**

To install Desktop Commander for Claude Desktop via [Smithery](https://smithery.ai/server/@wonderwhy-er/desktop-commander):

1. **Visit the Smithery page:** https://smithery.ai/server/@wonderwhy-er/desktop-commander
2. **Login to Smithery** if you haven&#039;t already
3. **Select your client** (Claude Desktop) on the right side
4. **Install with the provided key** that appears after selecting your client
5. **Restart Claude Desktop**

The old command-line installation method is no longer supported. Please use the web interface above for the most reliable installation experience.

**‚úÖ Auto-Updates:** Yes - automatically updates when you restart Claude  
**üîÑ Manual Update:** Visit the Smithery page and reinstall  

### Option 4: Add to claude_desktop_config manually ‚≠ê **Auto-Updates** **Requires Node.js**
Add this entry to your claude_desktop_config.json:

- On Mac: `~/Library/Application\ Support/Claude/claude_desktop_config.json`
- On Windows: `%APPDATA%\Claude\claude_desktop_config.json`
- On Linux: `~/.config/Claude/claude_desktop_config.json`

```json
{
  &quot;mcpServers&quot;: {
    &quot;desktop-commander&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;-y&quot;,
        &quot;@wonderwhy-er/desktop-commander@latest&quot;
      ]
    }
  }
}
```
Restart Claude if running.

**‚úÖ Auto-Updates:** Yes - automatically updates when you restart Claude  
**üîÑ Manual Update:** Run the setup command again  
**üóëÔ∏è Uninstall:** Run `npx @wonderwhy-er/desktop-commander@latest remove` or  remove the &quot;desktop-commander&quot; entry from your claude_desktop_config.json file

### ### Option 5: Checkout locally ‚ùå **Manual Updates** **Requires Node.js** ‚ùå **Manual Updates** **Requires Node.js**
1. Clone and build:
```bash
git clone https://github.com/wonderwhy-er/DesktopCommanderMCP.git
cd DesktopCommanderMCP
npm run setup
```
Restart Claude if running.

The setup command will:
- Install dependencies
- Build the server
- Configure Claude&#039;s desktop app
- Add MCP servers to Claude&#039;s config if needed

**‚ùå Auto-Updates:** No - requires manual git updates  
**üîÑ Manual Update:** `cd DesktopCommanderMCP &amp;&amp; git pull &amp;&amp; npm run setup`  
**üóëÔ∏è Uninstall:** Run `npx @wonderwhy-er/desktop-commander@latest remove` or remove the cloned directory and remove MCP server entry from Claude config

### Option 6: Docker Installation üê≥ ‚≠ê **Auto-Updates** **No Node.js Required**

Perfect for users who want complete or partial isolation or don&#039;t have Node.js installed. Desktop Commander runs in a sandboxed Docker container with a persistent work environment.

#### Prerequisites
- [Docker Desktop](https://www.docker.com/products/docker-desktop/) installed **and running**
- Claude Desktop app installed

**Important:** Make sure Docker Desktop is fully started before running the installer.

#### Automated Installation (Recommended)

**macOS/Linux:**
```bash
bash &lt;(curl -fsSL https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.sh)
```

**Windows PowerShell:**
```powershell
# Download and run the installer (one-liner)
iex ((New-Object System.Net.WebClient).DownloadString(&#039;https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.ps1&#039;))
```

The automated installer will:
- Check Docker installation
- Pull the latest Docker image 
- Prompt you to select folders for mounting
- Configure Claude Desktop automatically
- Restart Claude if possible

#### How Docker Persistence Works
Desktop Commander creates a persistent work environment that remembers everything between sessions:
- **Your development tools**: Any software you install (Node.js, Python, databases, etc.) stays installed
- **Your configurations**: Git settings, SSH keys, shell preferences, and other personal configs are preserved  
- **Your work files**: Projects and files in the workspace area persist across restarts
- **Package caches**: Downloaded packages and dependencies are cached for faster future installs

Think of it like having your own dedicated development computer that never loses your setup, but runs safely isolated from your main system.

#### Manual Docker Configuration

If you prefer manual setup, add this to your claude_desktop_config.json:

**Basic setup (no file access):**
```json
{
  &quot;mcpServers&quot;: {
    &quot;desktop-commander-in-docker&quot;: {
      &quot;command&quot;: &quot;docker&quot;,
      &quot;args&quot;: [
        &quot;run&quot;,
        &quot;-i&quot;,
        &quot;--rm&quot;,
        &quot;mcp/desktop-commander:latest&quot;
      ]
    }
  }
}
```

**With folder mounting:**
```json
{
  &quot;mcpServers&quot;: {
    &quot;desktop-commander-in-docker&quot;: {
      &quot;command&quot;: &quot;docker&quot;,
      &quot;args&quot;: [
        &quot;run&quot;,
        &quot;-i&quot;,
        &quot;--rm&quot;,
        &quot;-v&quot;, &quot;/Users/username/Desktop:/mnt/desktop&quot;,
        &quot;-v&quot;, &quot;/Users/username/Documents:/mnt/documents&quot;,
        &quot;mcp/desktop-commander:latest&quot;
      ]
    }
  }
}
```

**Advanced folder mounting:**
```json
{
  &quot;mcpServers&quot;: {
    &quot;desktop-commander-in-docker&quot;: {
      &quot;command&quot;: &quot;docker&quot;,
      &quot;args&quot;: [
        &quot;run&quot;, &quot;-i&quot;, &quot;--rm&quot;,
        &quot;-v&quot;, &quot;dc-system:/usr&quot;,
        &quot;-v&quot;, &quot;dc-home:/root&quot;, 
        &quot;-v&quot;, &quot;dc-workspace:/workspace&quot;,
        &quot;-v&quot;, &quot;dc-packages:/var&quot;,
        &quot;-v&quot;, &quot;/Users/username/Projects:/mnt/Projects&quot;,
        &quot;-v&quot;, &quot;/Users/username/Downloads:/mnt/Downloads&quot;,
        &quot;mcp/desktop-commander:latest&quot;
      ]
    }
  }
}
```

#### Docker Benefits
‚úÖ **Controlled Isolation:** Runs in sandboxed environment with persistent development state
‚úÖ **No Node.js Required:** Everything included in the container
‚úÖ **Cross-Platform:** Same experience on all operating systems
‚úÖ **Persistent Environment:** Your tools, files, configs, and work survives restarts

**‚úÖ Auto-Updates:** Yes - `latest` tag automatically gets newer versions  
**üîÑ Manual Update:** `docker pull mcp/desktop-commander:latest` then restart Claude  

#### Docker Management Commands

**macOS/Linux:**

Check installation status:
```bash
bash &lt;(curl -fsSL https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.sh) --status
```

Reset all persistent data (removes all installed tools and configs):
```bash
bash &lt;(curl -fsSL https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.sh) --reset
```

**Windows PowerShell:**

Check status:
```powershell
$script = (New-Object System.Net.WebClient).DownloadString(&#039;https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.ps1&#039;); &amp; ([ScriptBlock]::Create(&quot;$script&quot;)) -Status
```

Reset all data:
```powershell
$script = (New-Object System.Net.WebClient).DownloadString(&#039;https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.ps1&#039;); &amp; ([ScriptBlock]::Create(&quot;$script&quot;)) -Reset
```

Show help:
```powershell
$script = (New-Object System.Net.WebClient).DownloadString(&#039;https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.ps1&#039;); &amp; ([ScriptBlock]::Create(&quot;$script&quot;)) -Help
```

Verbose output:
```powershell
$script = (New-Object System.Net.WebClient).DownloadString(&#039;https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.ps1&#039;); &amp; ([ScriptBlock]::Create(&quot;$script&quot;)) -VerboseOutput
```  

#### Troubleshooting Docker Installation
If you broke the Docker container or need a fresh start:
```bash
# Reset and reinstall from scratch
bash &lt;(curl -fsSL https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.sh) --reset &amp;&amp; bash &lt;(curl -fsSL https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.sh)
```
This will completely reset your persistent environment and reinstall everything fresh with exception of not touching mounted folders

## Updating &amp; Uninstalling Desktop Commander

### Automatic Updates (Options 1, 2, 3, 4 &amp; 6)
**Options 1 (npx), Option 2 (bash installer), 3 (Smithery), 4 (manual config), and 6 (Docker)** automatically update to the latest version whenever you restart Claude. No manual intervention needed.

### Manual Updates (Option 5)
- **Option 5 (local checkout):** `cd DesktopCommanderMCP &amp;&amp; git pull &amp;&amp; npm run setup`

### Uninstalling Desktop Commander
#### ü§ñ Automatic Uninstallation (Recommended)

The easiest way to completely remove Desktop Commander:

```bash
npx @wonderwhy-er/desktop-commander@latest remove
```

This automatic uninstaller will:
- ‚úÖ Remove Desktop Commander from Claude&#039;s MCP server configuration
- ‚úÖ Create a backup of your Claude config before making changes
- ‚úÖ Provide guidance for complete package removal
- ‚úÖ Restore from backup if anything goes wrong

#### üîß Manual Uninstallation

If the automatic uninstaller doesn&#039;t work or you prefer manual removal:

##### Remove from Claude Configuration

1. **Locate your Claude Desktop config file:**
  - **macOS:** `~/Library/Application Support/Claude/claude_desktop_config.json`
  - **Windows:** `%APPDATA%\Claude\claude_desktop_config.json`
  - **Linux:** `~/.config/Claude/claude_desktop_config.json`

2. **Edit the config file:**
  - Open the file in a text editor
  - Find and remove the `&quot;desktop-commander&quot;` entry from the `&quot;mcpServers&quot;` section
  - Save the file

  **Example - Remove this section:**
  ```json
  {
      &quot;desktop-commander&quot;: {
        &quot;command&quot;: &quot;npx&quot;,
        &quot;args&quot;: [&quot;@wonderwhy-er/desktop-commander@latest&quot;]
      }
  }
  ```

Close and restart Claude Desktop to complete the removal.

#### üÜò Troubleshooting

**If automatic uninstallation fails:**
- Use manual uninstallation as a fallback

**If Claude won&#039;t start after uninstalling:**
- Restore the backup config file created by the uninstaller
- Or manually fix the JSON syntax in your claude_desktop_config.json

**Need help?**
- Join our Discord community: https://discord.com/invite/kQ27sNnZr7

## Usage

The server provides a comprehensive set of tools organized into several categories:

### Available Tools

| Category | Tool | Description |
|----------|------|-------------|
| **Configuration** | `get_config` | Get the complete server configuration as JSON (includes blockedCommands, defaultShell, allowedDirectories, fileReadLineLimit, fileWriteLineLimit, telemetryEnabled) |
| | `set_config_value` | Set a specific configuration value by key. Available settings: &lt;br&gt;‚Ä¢ `blockedCommands`: Array of shell commands that cannot be executed&lt;br&gt;‚Ä¢ `defaultShell`: Shell to use for commands (e.g., bash, zsh, powershell)&lt;br&gt;‚Ä¢ `allowedDirectories`: Array of filesystem paths the server can access for file operations (‚ö†Ô∏è terminal commands can still access files outside these directories)&lt;br&gt;‚Ä¢ `fileReadLineLimit`: Maximum lines to read at once (default: 1000)&lt;br&gt;‚Ä¢ `fileWriteLineLimit`: Maximum lines to write at once (default: 50)&lt;br&gt;‚Ä¢ `telemetryEnabled`: Enable/disable telemetry (boolean) |
| **Terminal** | `start_process` | Start programs with smart detection of when they&#039;re ready for input |
| | `interact_with_process` | Send commands to running programs and get responses |
| | `read_process_output` | Read output from running processes |
| | `force_terminate` | Force terminate a running terminal session |
| | `list_sessions` | List all active terminal sessions |
| | `list_processes` | List all running processes with detailed information |
| | `kill_process` | Terminate a running process by PID |
| **Filesystem** | `read_file` | Read contents from local filesystem or URLs with line-based pagination (supports positive/negative offset and length parameters) |
| | `read_multiple_files` | Read multiple files simultaneously |
| | `write_file` | Write file contents with options for rewrite or append mode (uses configurable line limits) |
| | `create_directory` | Create a new directory or ensure it exists |
| | `list_directory` | Get detailed listing of files and directories |
| | `move_file` | Move or rename files and directories |
| | `search_files` | Find files by name using case-insensitive substring matching |
| | `search_code` | Search for text/code patterns within file contents using ripgrep |
| | `get_file_info` | Retrieve detailed metadata about a file or directory |
| **Text Editing** | `edit_block` | Apply targeted text replacements with enhanced prompting for smaller edits (includes character-level diff feedback) |
| **Analytics** | `get_usage_stats` | Get usage statistics for your own insight |
| | `give_feedback_to_desktop_commander` | Open feedback form in browser to provide feedback to Desktop Commander Team |

### Quick Examples

**Data Analysis:**
```
&quot;Analyze sales.csv and show top customers&quot; ‚Üí Claude runs Python code in memory
```

**Remote Access:**
```
&quot;SSH to my server and check disk space&quot; ‚Üí Claude maintains SSH session
```

**Development:**
```
&quot;Start Node.js and test this API&quot; ‚Üí Claude runs interactive Node session
```

### Tool Usage Examples

Search/Replace Block Format:
```
filepath.ext
&lt;&lt;&lt;&lt;&lt;&lt;&lt; SEARCH
content to find
=======
new content
&gt;&gt;&gt;&gt;&gt;&gt;&gt; REPLACE
```

Example:
```
src/main.js
&lt;&lt;&lt;&lt;&lt;&lt;&lt; SEARCH
console.log(&quot;old message&quot;);
=======
console.log(&quot;new message&quot;);
&gt;&gt;&gt;&gt;&gt;&gt;&gt; REPLACE
```

### Enhanced Edit Block Features

The `edit_block` tool includes several enhancements for better reliability:

1. **Improved Prompting**: Tool descriptions now emphasize making multiple small, focused edits rather than one large change
2. **Fuzzy Search Fallback**: When exact matches fail, it performs fuzzy search and provides detailed feedback
3. **Character-level Diffs**: Shows exactly what&#039;s different using `{-removed-}{+added+}` format
4. **Multiple Occurrence Support**: Can replace multiple instances with `expected_replacements` parameter
5. **Comprehensive Logging**: All fuzzy searches are logged for analysis and debugging

When a search fails, you&#039;ll see detailed information about the closest match found, including similarity percentage, execution time, and character differences. All these details are automatically logged for later analysis using the fuzzy search log tools.

### Docker Support

### üê≥ Isolated Environment Usage

Desktop Commander can be run in Docker containers for **complete isolation from your host system**, providing **zero risk to your computer**. This is perfect for testing, development, or when you want complete sandboxing.

### Installation Instructions

1. **Install Docker for Windows/Mac**
   - Download and install Docker Desktop from [docker.com](https://www.docker.com/products/docker-desktop/)

2. **Get Desktop Commander Docker Configuration**
   - Visit: https://hub.docker.com/mcp/server/desktop-commander/manual
   - **Option A:** Use the provided terminal command for automated setup
   - **Option B:** Click &quot;Standalone&quot; to get the config JSON and add it manually to your Claude Desktop config
 ![docker-config.png](screenshots/docker-config.png)

3. **Mount Your Machine Folders (Coming Soon)**
   - Instructions on how to mount your local directories into the Docker container will be provided soon
   - This will allow 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>