<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Sat, 31 May 2025 00:04:57 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[f/awesome-chatgpt-prompts]]></title>
            <link>https://github.com/f/awesome-chatgpt-prompts</link>
            <guid>https://github.com/f/awesome-chatgpt-prompts</guid>
            <pubDate>Sat, 31 May 2025 00:04:57 GMT</pubDate>
            <description><![CDATA[This repo includes ChatGPT prompt curation to use ChatGPT and other LLM tools better.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/f/awesome-chatgpt-prompts">f/awesome-chatgpt-prompts</a></h1>
            <p>This repo includes ChatGPT prompt curation to use ChatGPT and other LLM tools better.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 127,369</p>
            <p>Forks: 16,919</p>
            <p>Stars today: 182 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
&lt;img width=&quot;395&quot; alt=&quot;prompts.chat&quot; src=&quot;https://github.com/user-attachments/assets/e0d0e32d-d2ce-4459-9f37-e951d9f4f5de&quot; /&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;Sponsors&lt;/h3&gt;

&lt;div align=&quot;center&quot;&gt;

  &lt;a href=&quot;https://clemta.com&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;50&quot; alt=&quot;Clemta logo&quot; src=&quot;https://clemta.com/wp-content/uploads/2023/03/logo-clemta-com-1.png.webp&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;sub&gt;With Clemta, you can run your company from the comfort of your home.&lt;/sub&gt;
&lt;hr&gt;
   &lt;a href=&quot;https://www.warp.dev/awesome-chatgpt-prompts&quot;&gt;
      &lt;img alt=&quot;Warp sponsorship&quot; width=&quot;400&quot; src=&quot;https://github.com/user-attachments/assets/ab8dd143-b0fd-4904-bdc5-dd7ecac94eae&quot;&gt;
   &lt;/a&gt;

#### [Warp, the intelligent terminal for developers](https://www.warp.dev/awesome-chatgpt-prompts)
[Available for MacOS, Linux, &amp; Windows](https://www.warp.dev/awesome-chatgpt-prompts)&lt;br&gt;

&lt;hr&gt;
  &lt;a href=&quot;https://graphite.dev/?utm_source=github&amp;utm_medium=repo&amp;utm_campaign=awesome_chatgpt_prompts&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;100&quot; alt=&quot;Graphite logo&quot; src=&quot;https://github.com/user-attachments/assets/981a244b-4bc8-4884-98f7-dd1d425063ae&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;sub&gt;Graphite is the AI developer productivity platform helping teams on GitHub ship higher quality software, faster.&lt;/sub&gt;
&lt;hr&gt;
  &lt;a href=&quot;https://github.com/f/mcptools&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;60&quot; alt=&quot;Hugging Face logo&quot; src=&quot;https://github.com/f/mcptools/raw/master/.github/resources/logo.png&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;sub&gt;If you&#039;re building MCPs, &lt;a href=&quot;https://github.com/f/mcptools&quot;&gt;MCP Tools&lt;/a&gt; is a Swiss-army knife for MCP Servers.&lt;/sub&gt;
&lt;hr&gt;
  &lt;sub&gt;&lt;a href=&quot;https://github.com/sponsors/f/sponsorships?sponsor=f&amp;amp;tier_id=319423&quot;&gt;Be my sponsor and your logo will be here!&lt;/a&gt;&lt;/sub&gt;
&lt;/div&gt;

---
[![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)

Welcome to the &quot;Awesome ChatGPT Prompts&quot; repository! While this collection was originally created for [ChatGPT](https://chat.openai.com/chat), these prompts work great with other AI models like [Claude](https://claude.ai/new), [Gemini](https://gemini.google.com), [Hugging Face Chat](https://hf.co/chat), [Llama](https://meta.ai), [Mistral](https://chat.mistral.ai), and more.

[ChatGPT](https://chat.openai.com/chat) is a web interface created by [OpenAI](https://openai.com) that provides access to their GPT (Generative Pre-trained Transformer) language models. The underlying models, like GPT-4o and GPT-o1, are large language models trained on vast amounts of text data that can understand and generate human-like text. Like other AI chat interfaces, you can provide prompts and have natural conversations with the AI, which will generate contextual responses based on the conversation history and your inputs.

In this repository, you will find a variety of prompts that can be used with ChatGPT and other AI chat models. We encourage you to [add your own prompts](https://github.com/f/awesome-chatgpt-prompts/edit/main/README.md) to the list, and to use AI to help generate new prompts as well.

To get started, simply clone this repository and use the prompts in the README.md file as input for your preferred AI chat model. You can also use the prompts in this file as inspiration for creating your own.

We hope you find these prompts useful and have fun exploring AI chat models!

**[View on prompts.chat](https://prompts.chat)**

**[View on Hugging Face](https://huggingface.co/datasets/fka/awesome-chatgpt-prompts/)**
---

&gt; ‚ÑπÔ∏è **NOTE:** Sometimes, some of the prompts may not be working as you expected
&gt; or may be rejected by the AI. Please try again, start a new thread, or log out
&gt; and log back in. If these solutions do not work, please try rewriting the
&gt; prompt using your own sentences while keeping the instructions same.

### Want to Write Effective Prompts?

I&#039;ve authored an e-book called **&quot;The Art of ChatGPT Prompting: A Guide to
Crafting Clear and Effective Prompts&quot;**.

üìñ **[Read the e-book](https://fka.gumroad.com/l/art-of-chatgpt-prompting)**

### Want to Learn How to Make Money using ChatGPT Prompts?

I&#039;ve authored an e-book called **&quot;How to Make Money with ChatGPT: Strategies,
Tips, and Tactics&quot;**.

üìñ
**[Buy the e-book](https://fka.gumroad.com/l/how-to-make-money-with-chatgpt)**

### Want to Learn How to write image prompts for Midjourney AI?

I&#039;ve authored an e-book called **&quot;The Art of Midjourney AI: A Guide to Creating
Images from Text&quot;**.

üìñ
**[Read the e-book](https://fka.gumroad.com/l/the-art-of-midjourney-ai-guide-to-creating-images-from-text)**

---

### Using prompts.chat

[prompts.chat](https://prompts.chat) is designed to provide an enhanced UX when
working with prompts. With just a few clicks, you can easily edit and copy the
prompts on the site to fit your specific needs and preferences.

&lt;img width=&quot;1400&quot; alt=&quot;Screenshot 2025-01-05 at 22 17 19&quot; src=&quot;https://github.com/user-attachments/assets/272d2092-b651-452a-a049-f46b31c32889&quot; /&gt;

---

## Unmerged Prompts

There are many Pull Requests to this repository waiting to be merged. There are
many hidden gems there. Take a look!

üìñ
**[View Unmerged Prompts](https://github.com/f/awesome-chatgpt-prompts/pulls)**

---

# Prompts

## Act as an Ethereum Developer

Contributed by: [@ameya-2003](https://github.com/Ameya-2003) Reference:
[The BlockChain Messenger](https://github.com/Ameya-2003/BlockChain/blob/main/Projects/The%20BlockChain%20Messenger.sol)

&gt; Imagine you are an experienced Ethereum developer tasked with creating a smart
&gt; contract for a blockchain messenger. The objective is to save messages on the
&gt; blockchain, making them readable (public) to everyone, writable (private) only
&gt; to the person who deployed the contract, and to count how many times the
&gt; message was updated. Develop a Solidity smart contract for this purpose,
&gt; including the necessary functions and considerations for achieving the
&gt; specified goals. Please provide the code and any relevant explanations to
&gt; ensure a clear understanding of the implementation.

## Act as a Linux Terminal

Contributed by: [@f](https://github.com/f) Reference:
[https://www.engraved.blog/building-a-virtual-machine-inside/](https://www.engraved.blog/building-a-virtual-machine-inside/)

&gt; I want you to act as a linux terminal. I will type commands and you will reply
&gt; with what the terminal should show. I want you to only reply with the terminal
&gt; output inside one unique code block, and nothing else. do not write
&gt; explanations. do not type commands unless I instruct you to do so. When I need
&gt; to tell you something in English, I will do so by putting text inside curly
&gt; brackets {like this}. My first command is pwd

## Act as an English Translator and Improver

Contributed by: [@f](https://github.com/f) **Alternative to**: Grammarly, Google
Translate

&gt; I want you to act as an English translator, spelling corrector and improver. I
&gt; will speak to you in any language and you will detect the language, translate
&gt; it and answer in the corrected and improved version of my text, in English. I
&gt; want you to replace my simplified A0-level words and sentences with more
&gt; beautiful and elegant, upper level English words and sentences. Keep the
&gt; meaning same, but make them more literary. I want you to only reply the
&gt; correction, the improvements and nothing else, do not write explanations. My
&gt; first sentence is &quot;istanbulu cok seviyom burada olmak cok guzel&quot;

## Act as Job Interviewer

Contributed by: [@f](https://github.com/f) &amp;
[@iltekin](https://github.com/iltekin) **Examples**: Node.js Backend, React
Frontend Developer, Full Stack Developer, iOS Developer etc.

&gt; I want you to act as an interviewer. I will be the candidate and you will ask
&gt; me the interview questions for the ${Position:JavaScript Developer} position. I want you to only
&gt; reply as the interviewer. Do not write all the conversation at once. I want
&gt; you to only do the interview with me. Ask me the questions and wait for my
&gt; answers. Do not write explanations. Ask me the questions one by one like an
&gt; interviewer does and wait for my answers. My first sentence is &quot;Hi&quot;

## Act as a JavaScript Console

Contributed by: [@omerimzali](https://github.com/omerimzali)

&gt; I want you to act as a javascript console. I will type commands and you will
&gt; reply with what the javascript console should show. I want you to only reply
&gt; with the terminal output inside one unique code block, and nothing else. do
&gt; not write explanations. do not type commands unless I instruct you to do so.
&gt; when I need to tell you something in english, I will do so by putting text
&gt; inside curly brackets {like this}. My first command is console.log(&quot;Hello
&gt; World&quot;);

## Act as an Excel Sheet

Contributed by: [@f](https://github.com/f)

&gt; I want you to act as a text based excel. You&#039;ll only reply me the text-based
&gt; 10 rows excel sheet with row numbers and cell letters as columns (A to L).
&gt; First column header should be empty to reference row number. I will tell you
&gt; what to write into cells and you&#039;ll reply only the result of excel table as
&gt; text, and nothing else. Do not write explanations. I will write you formulas
&gt; and you&#039;ll execute formulas and you&#039;ll only reply the result of excel table as
&gt; text. First, reply me the empty sheet.

## Act as an English Pronunciation Helper

Contributed by: [@f](https://github.com/f)

&gt; I want you to act as an English pronunciation assistant for Turkish speaking
&gt; people. I will write you sentences and you will only answer their
&gt; pronunciations, and nothing else. The replies must not be translations of my
&gt; sentence but only pronunciations. Pronunciations should use Turkish Latin
&gt; letters for phonetics. Do not write explanations on replies. My first sentence
&gt; is &quot;how the weather is in Istanbul?&quot;

## Act as a Spoken English Teacher and Improver

Contributed by: [@ATX735](https://github.com/ATX735)

&gt; I want you to act as a spoken English teacher and improver. I will speak to
&gt; you in English and you will reply to me in English to practice my spoken
&gt; English. I want you to keep your reply neat, limiting the reply to 100 words.
&gt; I want you to strictly correct my grammar mistakes, typos, and factual errors.
&gt; I want you to ask me a question in your reply. Now let&#039;s start practicing, you
&gt; could ask me a question first. Remember, I want you to strictly correct my
&gt; grammar mistakes, typos, and factual errors.

## Act as a Travel Guide

Contributed by: [@koksalkapucuoglu](https://github.com/koksalkapucuoglu)

&gt; I want you to act as a travel guide. I will write you my location and you will
&gt; suggest a place to visit near my location. In some cases, I will also give you
&gt; the type of places I will visit. You will also suggest me places of similar
&gt; type that are close to my first location. My first suggestion request is &quot;I am
&gt; in Istanbul/Beyoƒülu and I want to visit only museums.&quot;

## Act as a Plagiarism Checker

Contributed by: [@yetk1n](https://github.com/yetk1n)

&gt; I want you to act as a plagiarism checker. I will write you sentences and you
&gt; will only reply undetected in plagiarism checks in the language of the given
&gt; sentence, and nothing else. Do not write explanations on replies. My first
&gt; sentence is &quot;For computers to behave like humans, speech recognition systems
&gt; must be able to process nonverbal information, such as the emotional state of
&gt; the speaker.&quot;

## Act as Character

Contributed by: [@BRTZL](https://github.com/BRTZL)
[@mattsq](https://github.com/mattsq)

&gt; I want you to act like ${Character: Anakin Skywalker} from ${Series: Star Wars}. I want you to respond and
&gt; answer like ${Character: Anakin Skywalker} using the tone, manner and vocabulary ${Character: Anakin Skywalker}
&gt; would use. Do not write any explanations. Only answer like ${Character: Anakin Skywalker}. You
&gt; must know all of the knowledge of ${Character: Anakin Skywalker}. My first sentence is &quot;Hi
&gt; ${Character: Anakin Skywalker}.&quot;

## Act as an Advertiser

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as an advertiser. You will create a campaign to promote a
&gt; product or service of your choice. You will choose a target audience, develop
&gt; key messages and slogans, select the media channels for promotion, and decide
&gt; on any additional activities needed to reach your goals. My first suggestion
&gt; request is &quot;I need help creating an advertising campaign for a new type of
&gt; energy drink targeting young adults aged 18-30.&quot;

## Act as a Storyteller

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a storyteller. You will come up with entertaining stories
&gt; that are engaging, imaginative and captivating for the audience. It can be
&gt; fairy tales, educational stories or any other type of stories which has the
&gt; potential to capture people&#039;s attention and imagination. Depending on the
&gt; target audience, you may choose specific themes or topics for your
&gt; storytelling session e.g., if it‚Äôs children then you can talk about animals;
&gt; If it‚Äôs adults then history-based tales might engage them better etc. My first
&gt; request is &quot;I need an interesting story on perseverance.&quot;

## Act as a Football Commentator

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a football commentator. I will give you descriptions of
&gt; football matches in progress and you will commentate on the match, providing
&gt; your analysis on what has happened thus far and predicting how the game may
&gt; end. You should be knowledgeable of football terminology, tactics,
&gt; players/teams involved in each match, and focus primarily on providing
&gt; intelligent commentary rather than just narrating play-by-play. My first
&gt; request is &quot;I&#039;m watching Manchester United vs Chelsea - provide commentary for
&gt; this match.&quot;

## Act as a Stand-up Comedian

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a stand-up comedian. I will provide you with some topics
&gt; related to current events and you will use your wit, creativity, and
&gt; observational skills to create a routine based on those topics. You should
&gt; also be sure to incorporate personal anecdotes or experiences into the routine
&gt; in order to make it more relatable and engaging for the audience. My first
&gt; request is &quot;I want a humorous take on politics.&quot;

## Act as a Motivational Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a motivational coach. I will provide you with some
&gt; information about someone&#039;s goals and challenges, and it will be your job to
&gt; come up with strategies that can help this person achieve their goals. This
&gt; could involve providing positive affirmations, giving helpful advice or
&gt; suggesting activities they can do to reach their end goal. My first request is
&gt; &quot;I need help motivating myself to stay disciplined while studying for an
&gt; upcoming exam&quot;.

## Act as a Composer

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a composer. I will provide the lyrics to a song and you
&gt; will create music for it. This could include using various instruments or
&gt; tools, such as synthesizers or samplers, in order to create melodies and
&gt; harmonies that bring the lyrics to life. My first request is &quot;I have written a
&gt; poem named ‚ÄúHayalet Sevgilim‚Äù and need music to go with it.&quot;

## Act as a Debater

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a debater. I will provide you with some topics related to
&gt; current events and your task is to research both sides of the debates, present
&gt; valid arguments for each side, refute opposing points of view, and draw
&gt; persuasive conclusions based on evidence. Your goal is to help people come
&gt; away from the discussion with increased knowledge and insight into the topic
&gt; at hand. My first request is &quot;I want an opinion piece about Deno.&quot;

## Act as a Debate Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a debate coach. I will provide you with a team of
&gt; debaters and the motion for their upcoming debate. Your goal is to prepare the
&gt; team for success by organizing practice rounds that focus on persuasive
&gt; speech, effective timing strategies, refuting opposing arguments, and drawing
&gt; in-depth conclusions from evidence provided. My first request is &quot;I want our
&gt; team to be prepared for an upcoming debate on whether front-end development is
&gt; easy.&quot;

## Act as a Screenwriter

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a screenwriter. You will develop an engaging and creative
&gt; script for either a feature length film, or a Web Series that can captivate
&gt; its viewers. Start with coming up with interesting characters, the setting of
&gt; the story, dialogues between the characters etc. Once your character
&gt; development is complete - create an exciting storyline filled with twists and
&gt; turns that keeps the viewers in suspense until the end. My first request is &quot;I
&gt; need to write a romantic drama movie set in Paris.&quot;

## Act as a Novelist

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a novelist. You will come up with creative and
&gt; captivating stories that can engage readers for long periods of time. You may
&gt; choose any genre such as fantasy, romance, historical fiction and so on - but
&gt; the aim is to write something that has an outstanding plotline, engaging
&gt; characters and unexpected climaxes. My first request is &quot;I need to write a
&gt; science-fiction novel set in the future.&quot;

## Act as a Movie Critic

Contributed by: [@nuc](https://github.com/nuc)

&gt; I want you to act as a movie critic. You will develop an engaging and creative
&gt; movie review. You can cover topics like plot, themes and tone, acting and
&gt; characters, direction, score, cinematography, production design, special
&gt; effects, editing, pace, dialog. The most important aspect though is to
&gt; emphasize how the movie has made you feel. What has really resonated with you.
&gt; You can also be critical about the movie. Please avoid spoilers. My first
&gt; request is &quot;I need to write a movie review for the movie Interstellar&quot;

## Act as a Relationship Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a relationship coach. I will provide some details about
&gt; the two people involved in a conflict, and it will be your job to come up with
&gt; suggestions on how they can work through the issues that are separating them.
&gt; This could include advice on communication techniques or different strategies
&gt; for improving their understanding of one another&#039;s perspectives. My first
&gt; request is &quot;I need help solving conflicts between my spouse and myself.&quot;

## Act as a Poet

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a poet. You will create poems that evoke emotions and
&gt; have the power to stir people‚Äôs soul. Write on any topic or theme but make
&gt; sure your words convey the feeling you are trying to express in beautiful yet
&gt; meaningful ways. You can also come up with short verses that are still
&gt; powerful enough to leave an imprint in readers&#039; minds. My first request is &quot;I
&gt; need a poem about love.&quot;

## Act as a Rapper

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a rapper. You will come up with powerful and meaningful
&gt; lyrics, beats and rhythm that can ‚Äòwow‚Äô the audience. Your lyrics should have
&gt; an intriguing meaning and message which people can relate too. When it comes
&gt; to choosing your beat, make sure it is catchy yet relevant to your words, so
&gt; that when combined they make an explosion of sound everytime! My first request
&gt; is &quot;I need a rap song about finding strength within yourself.&quot;

## Act as a Motivational Speaker

Contributed by: [@devisasari](https://git

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WhiskeySockets/Baileys]]></title>
            <link>https://github.com/WhiskeySockets/Baileys</link>
            <guid>https://github.com/WhiskeySockets/Baileys</guid>
            <pubDate>Sat, 31 May 2025 00:04:56 GMT</pubDate>
            <description><![CDATA[Lightweight full-featured typescript/javascript WhatsApp Web API]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WhiskeySockets/Baileys">WhiskeySockets/Baileys</a></h1>
            <p>Lightweight full-featured typescript/javascript WhatsApp Web API</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,668</p>
            <p>Forks: 1,885</p>
            <p>Stars today: 165 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&#039;center&#039;&gt;&lt;img alt=&quot;Baileys logo&quot; src=&quot;https://raw.githubusercontent.com/WhiskeySockets/Baileys/refs/heads/master/Media/logo.png&quot; height=&quot;75&quot;/&gt;&lt;/h1&gt;

&lt;div align=&#039;center&#039;&gt;

![NPM Downloads](https://img.shields.io/npm/dw/%40whiskeysockets%2Fbaileys?label=npm&amp;color=%23CB3837)
![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/whiskeysockets/baileys)
![Discord](https://img.shields.io/discord/725839806084546610?label=discord&amp;color=%235865F2)

&lt;/div&gt;

&lt;div align=&#039;center&#039;&gt;Baileys is a WebSockets-based TypeScript library for interacting with the WhatsApp Web API.&lt;/div&gt;

# Important Note
This is a temporally README, the new guide is at development and will be fully released when it&#039;s finished.

New Guide: https://baileys.wiki

# Sponsor
If you&#039;d like to financially support this project, you can do so by supporting the current maintainer [here](https://purpshell.dev/sponsor).

# Disclaimer
This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates.
The official WhatsApp website can be found at whatsapp.com. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners.

The maintainers of Baileys do not in any way condone the use of this application in practices that violate the Terms of Service of WhatsApp. The maintainers of this application call upon the personal responsibility of its users to use this application in a fair way, as it is intended to be used.
Use at your own discretion. Do not spam people with this. We discourage any stalkerware, bulk or automated messaging usage.

##

- Baileys does not require Selenium or any other browser to be interface with WhatsApp Web, it does so directly using a **WebSocket**. 
- Not running Selenium or Chromimum saves you like **half a gig** of ram :/ 
- Baileys supports interacting with the multi-device &amp; web versions of WhatsApp.
- Thank you to [@pokearaujo](https://github.com/pokearaujo/multidevice) for writing his observations on the workings of WhatsApp Multi-Device. Also, thank you to [@Sigalor](https://github.com/sigalor/whatsapp-web-reveng) for writing his observations on the workings of WhatsApp Web and thanks to [@Rhymen](https://github.com/Rhymen/go-whatsapp/) for the __go__ implementation.

&gt; [!IMPORTANT]
&gt; The original repository had to be removed by the original author - we now continue development in this repository here.
This is the only official repository and is maintained by the community.
&gt; **Join the Discord [here](https://discord.gg/WeJM5FP9GG)**
 
## Example

Do check out &amp; run [example.ts](Example/example.ts) to see an example usage of the library.
The script covers most common use cases.
To run the example script, download or clone the repo and then type the following in a terminal:
1. ``` cd path/to/Baileys ```
2. ``` yarn ```
3. ``` yarn example ```

## Install

Use the stable version:
```
yarn add @whiskeysockets/baileys
```

Use the edge version (no guarantee of stability, but latest fixes + features)
```
yarn add github:WhiskeySockets/Baileys
```

Then import your code using:
```ts 
import makeWASocket from &#039;@whiskeysockets/baileys&#039;
```

# Links

- [Discord](https://discord.gg/WeJM5FP9GG)
- [Docs](https://guide.whiskeysockets.io/)

# Index

- [Connecting Account](#connecting-account)
    - [Connect with QR-CODE](#starting-socket-with-qr-code)
    - [Connect with Pairing Code](#starting-socket-with-pairing-code)
    - [Receive Full History](#receive-full-history)
- [Important Notes About Socket Config](#important-notes-about-socket-config)
    - [Caching Group Metadata (Recommended)](#caching-group-metadata-recommended)
    - [Improve Retry System &amp; Decrypt Poll Votes](#improve-retry-system--decrypt-poll-votes)
    - [Receive Notifications in Whatsapp App](#receive-notifications-in-whatsapp-app)

- [Save Auth Info](#saving--restoring-sessions)
- [Handling Events](#handling-events)
    - [Example to Start](#example-to-start)
    - [Decrypt Poll Votes](#decrypt-poll-votes)
    - [Summary of Events on First Connection](#summary-of-events-on-first-connection)
- [Implementing a Data Store](#implementing-a-data-store)
- [Whatsapp IDs Explain](#whatsapp-ids-explain)
- [Utility Functions](#utility-functions)
- [Sending Messages](#sending-messages)
    - [Non-Media Messages](#non-media-messages)
        - [Text Message](#text-message)
        - [Quote Message](#quote-message-works-with-all-types)
        - [Mention User](#mention-user-works-with-most-types)
        - [Forward Messages](#forward-messages)
        - [Location Message](#location-message)
        - [Contact Message](#contact-message)
        - [Reaction Message](#reaction-message)
        - [Pin Message](#pin-message)
        - [Poll Message](#poll-message)
    - [Sending with Link Preview](#sending-messages-with-link-previews)
    - [Media Messages](#media-messages)
        - [Gif Message](#gif-message)
        - [Video Message](#video-message)
        - [Audio Message](#audio-message)
        - [Image Message](#image-message)
        - [ViewOnce Message](#view-once-message)
- [Modify Messages](#modify-messages)
    - [Delete Messages (for everyone)](#deleting-messages-for-everyone)
    - [Edit Messages](#editing-messages)
- [Manipulating Media Messages](#manipulating-media-messages)
    - [Thumbnail in Media Messages](#thumbnail-in-media-messages)
    - [Downloading Media Messages](#downloading-media-messages)
    - [Re-upload Media Message to Whatsapp](#re-upload-media-message-to-whatsapp)
- [Reject Call](#reject-call)
- [Send States in Chat](#send-states-in-chat)
    - [Reading Messages](#reading-messages)
    - [Update Presence](#update-presence)
- [Modifying Chats](#modifying-chats)
    - [Archive a Chat](#archive-a-chat)
    - [Mute/Unmute a Chat](#muteunmute-a-chat)
    - [Mark a Chat Read/Unread](#mark-a-chat-readunread)
    - [Delete a Message for Me](#delete-a-message-for-me)
    - [Delete a Chat](#delete-a-chat)
    - [Star/Unstar a Message](#starunstar-a-message)
    - [Disappearing Messages](#disappearing-messages)
- [User Querys](#user-querys)
    - [Check If ID Exists in Whatsapp](#check-if-id-exists-in-whatsapp)
    - [Query Chat History (groups too)](#query-chat-history-groups-too)
    - [Fetch Status](#fetch-status)
    - [Fetch Profile Picture (groups too)](#fetch-profile-picture-groups-too)
    - [Fetch Bussines Profile (such as description or category)](#fetch-bussines-profile-such-as-description-or-category)
    - [Fetch Someone&#039;s Presence (if they&#039;re typing or online)](#fetch-someones-presence-if-theyre-typing-or-online)
- [Change Profile](#change-profile)
    - [Change Profile Status](#change-profile-status)
    - [Change Profile Name](#change-profile-name)
    - [Change Display Picture (groups too)](#change-display-picture-groups-too)
    - [Remove display picture (groups too)](#remove-display-picture-groups-too)
- [Groups](#groups)
    - [Create a Group](#create-a-group)
    - [Add/Remove or Demote/Promote](#addremove-or-demotepromote)
    - [Change Subject (name)](#change-subject-name)
    - [Change Description](#change-description)
    - [Change Settings](#change-settings)
    - [Leave a Group](#leave-a-group)
    - [Get Invite Code](#get-invite-code)
    - [Revoke Invite Code](#revoke-invite-code)
    - [Join Using Invitation Code](#join-using-invitation-code)
    - [Get Group Info by Invite Code](#get-group-info-by-invite-code)
    - [Query Metadata (participants, name, description...)](#query-metadata-participants-name-description)
    - [Join using groupInviteMessage](#join-using-groupinvitemessage)
    - [Get Request Join List](#get-request-join-list)
    - [Approve/Reject Request Join](#approvereject-request-join)
    - [Get All Participating Groups Metadata](#get-all-participating-groups-metadata)
    - [Toggle Ephemeral](#toggle-ephemeral)
    - [Change Add Mode](#change-add-mode)
- [Privacy](#privacy)
    - [Block/Unblock User](#blockunblock-user)
    - [Get Privacy Settings](#get-privacy-settings)
    - [Get BlockList](#get-blocklist)
    - [Update LastSeen Privacy](#update-lastseen-privacy)
    - [Update Online Privacy](#update-online-privacy)
    - [Update Profile Picture Privacy](#update-profile-picture-privacy)
    - [Update Status Privacy](#update-status-privacy)
    - [Update Read Receipts Privacy](#update-read-receipts-privacy)
    - [Update Groups Add Privacy](#update-groups-add-privacy)
    - [Update Default Disappearing Mode](#update-default-disappearing-mode)
- [Broadcast Lists &amp; Stories](#broadcast-lists--stories)
    - [Send Broadcast &amp; Stories](#send-broadcast--stories)
    - [Query a Broadcast List&#039;s Recipients &amp; Name](#query-a-broadcast-lists-recipients--name)
- [Writing Custom Functionality](#writing-custom-functionality)
    - [Enabling Debug Level in Baileys Logs](#enabling-debug-level-in-baileys-logs)
    - [How Whatsapp Communicate With Us](#how-whatsapp-communicate-with-us)
    - [Register a Callback for Websocket Events](#register-a-callback-for-websocket-events)

## Connecting Account

WhatsApp provides a multi-device API that allows Baileys to be authenticated as a second WhatsApp client by scanning a **QR code** or **Pairing Code** with WhatsApp on your phone.

&gt; [!NOTE]
&gt; **[Here](#example-to-start) is a simple example of event handling**

&gt; [!TIP]
&gt; **You can see all supported socket configs [here](https://baileys.whiskeysockets.io/types/SocketConfig.html) (Recommended)**

### Starting socket with **QR-CODE**

&gt; [!TIP]
&gt; You can customize browser name if you connect with **QR-CODE**, with `Browser` constant, we have some browsers config, **see [here](https://baileys.whiskeysockets.io/types/BrowsersMap.html)**

```ts
import makeWASocket from &#039;@whiskeysockets/baileys&#039;

const sock = makeWASocket({
    // can provide additional config here
    browser: Browsers.ubuntu(&#039;My App&#039;),
    printQRInTerminal: true
})
```

If the connection is successful, you will see a QR code printed on your terminal screen, scan it with WhatsApp on your phone and you&#039;ll be logged in!

### Starting socket with **Pairing Code**


&gt; [!IMPORTANT]
&gt; Pairing Code isn&#039;t Mobile API, it&#039;s a method to connect Whatsapp Web without QR-CODE, you can connect only with one device, see [here](https://faq.whatsapp.com/1324084875126592/?cms_platform=web)

The phone number can&#039;t have `+` or `()` or `-`, only numbers, you must provide country code

```ts
import makeWASocket from &#039;@whiskeysockets/baileys&#039;

const sock = makeWASocket({
    // can provide additional config here
    printQRInTerminal: false //need to be false
})

if (!sock.authState.creds.registered) {
    const number = &#039;XXXXXXXXXXX&#039;
    const code = await sock.requestPairingCode(number)
    console.log(code)
}
```

### Receive Full History

1. Set `syncFullHistory` as `true`
2. Baileys, by default, use chrome browser config
    - If you&#039;d like to emulate a desktop connection (and receive more message history), this browser setting to your Socket config:

```ts
const sock = makeWASocket({
    ...otherOpts,
    // can use Windows, Ubuntu here too
    browser: Browsers.macOS(&#039;Desktop&#039;),
    syncFullHistory: true
})
```

## Important Notes About Socket Config

### Caching Group Metadata (Recommended)
- If you use baileys for groups, we recommend you to set `cachedGroupMetadata` in socket config, you need to implement a cache like this:

    ```ts
    const groupCache = new NodeCache({stdTTL: 5 * 60, useClones: false})

    const sock = makeWASocket({
        cachedGroupMetadata: async (jid) =&gt; groupCache.get(jid)
    })

    sock.ev.on(&#039;groups.update&#039;, async ([event]) =&gt; {
        const metadata = await sock.groupMetadata(event.id)
        groupCache.set(event.id, metadata)
    })

    sock.ev.on(&#039;group-participants.update&#039;, async (event) =&gt; {
        const metadata = await sock.groupMetadata(event.id)
        groupCache.set(event.id, metadata)
    })
    ```

### Improve Retry System &amp; Decrypt Poll Votes
- If you want to improve sending message, retrying when error occurs and decrypt poll votes, you need to have a store and set `getMessage` config in socket like this:
    ```ts
    const sock = makeWASocket({
        getMessage: async (key) =&gt; await getMessageFromStore(key)
    })
    ```

### Receive Notifications in Whatsapp App
- If you want to receive notifications in whatsapp app, set `markOnlineOnConnect` to `false`
    ```ts
    const sock = makeWASocket({
        markOnlineOnConnect: false
    })
    ```
## Saving &amp; Restoring Sessions

You obviously don&#039;t want to keep scanning the QR code every time you want to connect. 

So, you can load the credentials to log back in:
```ts
import makeWASocket, { useMultiFileAuthState } from &#039;@whiskeysockets/baileys&#039;

const { state, saveCreds } = await useMultiFileAuthState(&#039;auth_info_baileys&#039;)

// will use the given state to connect
// so if valid credentials are available -- it&#039;ll connect without QR
const sock = makeWASocket({ auth: state })

// this will be called as soon as the credentials are updated
sock.ev.on(&#039;creds.update&#039;, saveCreds)
```

&gt; [!IMPORTANT]
&gt; `useMultiFileAuthState` is a utility function to help save the auth state in a single folder, this function serves as a good guide to help write auth &amp; key states for SQL/no-SQL databases, which I would recommend in any production grade system.

&gt; [!NOTE]
&gt; When a message is received/sent, due to signal sessions needing updating, the auth keys (`authState.keys`) will update. Whenever that happens, you must save the updated keys (`authState.keys.set()` is called). Not doing so will prevent your messages from reaching the recipient &amp; cause other unexpected consequences. The `useMultiFileAuthState` function automatically takes care of that, but for any other serious implementation -- you will need to be very careful with the key state management.

## Handling Events

- Baileys uses the EventEmitter syntax for events. 
They&#039;re all nicely typed up, so you shouldn&#039;t have any issues with an Intellisense editor like VS Code.

&gt; [!IMPORTANT]
&gt; **The events are [these](https://baileys.whiskeysockets.io/types/BaileysEventMap.html)**, it&#039;s important you see all events

You can listen to these events like this:
```ts
const sock = makeWASocket()
sock.ev.on(&#039;messages.upsert&#039;, ({ messages }) =&gt; {
    console.log(&#039;got messages&#039;, messages)
})
```

### Example to Start

&gt; [!NOTE]
&gt; This example includes basic auth storage too

```ts
import makeWASocket, { DisconnectReason, useMultiFileAuthState } from &#039;@whiskeysockets/baileys&#039;
import { Boom } from &#039;@hapi/boom&#039;

async function connectToWhatsApp () {
    const { state, saveCreds } = await useMultiFileAuthState(&#039;auth_info_baileys&#039;)
    const sock = makeWASocket({
        // can provide additional config here
        auth: state,
        printQRInTerminal: true
    })
    sock.ev.on(&#039;connection.update&#039;, (update) =&gt; {
        const { connection, lastDisconnect } = update
        if(connection === &#039;close&#039;) {
            const shouldReconnect = (lastDisconnect.error as Boom)?.output?.statusCode !== DisconnectReason.loggedOut
            console.log(&#039;connection closed due to &#039;, lastDisconnect.error, &#039;, reconnecting &#039;, shouldReconnect)
            // reconnect if not logged out
            if(shouldReconnect) {
                connectToWhatsApp()
            }
        } else if(connection === &#039;open&#039;) {
            console.log(&#039;opened connection&#039;)
        }
    })
    sock.ev.on(&#039;messages.upsert&#039;, event =&gt; {
        for (const m of event.messages) {
            console.log(JSON.stringify(m, undefined, 2))

            console.log(&#039;replying to&#039;, m.key.remoteJid)
            await sock.sendMessage(m.key.remoteJid!, { text: &#039;Hello Word&#039; })
        }
    })

    // to storage creds (session info) when it updates
    sock.ev.on(&#039;creds.update&#039;, saveCreds)
}
// run in main file
connectToWhatsApp()
```

&gt; [!IMPORTANT]
&gt; In `messages.upsert` it&#039;s recommended to use a loop like `for (const message of event.messages)` to handle all messages in array

### Decrypt Poll Votes

- By default poll votes are encrypted and handled in `messages.update`
- That&#039;s a simple example
```ts
sock.ev.on(&#039;messages.update&#039;, event =&gt; {
    for(const { key, update } of event) {
        if(update.pollUpdates) {
            const pollCreation = await getMessage(key)
            if(pollCreation) {
                console.log(
                    &#039;got poll update, aggregation: &#039;,
                    getAggregateVotesInPollMessage({
                        message: pollCreation,
                        pollUpdates: update.pollUpdates,
                    })
                )
            }
        }
    }
})
```

- `getMessage` is a [store](#implementing-a-data-store) implementation (in your end)

### Summary of Events on First Connection

1. When you connect first time, `connection.update` will be fired requesting you to restart sock
2. Then, history messages will be received in `messaging.history-set`

## Implementing a Data Store

- Baileys does not come with a defacto storage for chats, contacts, or messages. However, a simple in-memory implementation has been provided. The store listens for chat updates, new messages, message updates, etc., to always have an up-to-date version of the data.

&gt; [!IMPORTANT]
&gt; I highly recommend building your own data store, as storing someone&#039;s entire chat history in memory is a terrible waste of RAM.

It can be used as follows:

```ts
import makeWASocket, { makeInMemoryStore } from &#039;@whiskeysockets/baileys&#039;
// the store maintains the data of the WA connection in memory
// can be written out to a file &amp; read from it
const store = makeInMemoryStore({ })
// can be read from a file
store.readFromFile(&#039;./baileys_store.json&#039;)
// saves the state to a file every 10s
setInterval(() =&gt; {
    store.writeToFile(&#039;./baileys_store.json&#039;)
}, 10_000)

const sock = makeWASocket({ })
// will listen from this socket
// the store can listen from a new socket once the current socket outlives its lifetime
store.bind(sock.ev)

sock.ev.on(&#039;chats.upsert&#039;, () =&gt; {
    // can use &#039;store.chats&#039; however you want, even after the socket dies out
    // &#039;chats&#039; =&gt; a KeyedDB instance
    console.log(&#039;got chats&#039;, store.chats.all())
})

sock.ev.on(&#039;contacts.upsert&#039;, () =&gt; {
    console.log(&#039;got contacts&#039;, Object.values(store.contacts))
})

```

The store also provides some simple functions such as `loadMessages` that utilize the store to speed up data retrieval.

## Whatsapp IDs Explain

- `id` is the WhatsApp ID, called `jid` too, of the person or group you&#039;re sending the message to. 
    - It must be in the format ```[country code][phone number]@s.whatsapp.net```
	    - Example for people: ```+19999999999@s.whatsapp.net```. 
	    - For groups, it must be in the format ``` 123456789-123345@g.us ```. 
    - For broadcast lists, it&#039;s `[timestamp of creation]@broadcast`.
    - For stories, the ID is `status@broadcast`.

## Utility Functions

- `getContentType`, returns the content type for any message
- `getDevice`, returns the device from message
- `makeCacheableSignalKeyStore`, make auth store more fast
- `downloadContentFromMessage`, download content from any message

## Sending Messages

- Send all types of messages with a single function
    - **[Here](https://baileys.whiskeysockets.io/types/AnyMessageContent.html) you can see all message contents supported, like text message**
    - **[Here](https://baileys.whiskeysockets.io/types/MiscMessageGenerationOptions.html) you can see all options supported, like quote message**

    ```ts
    const jid: string
    const content: AnyMessageContent
    const options: MiscMessageGenerationOptions

    sock.sendMessage(jid, content, options)
    ```

### Non-Media Messages

#### Text Message
```ts
await sock.sendMessage(jid, { text: &#039;hello word&#039; })
```

#### Quote Message (works with all types)
```ts
await sock.sendMessage(jid, { text: &#039;hello word&#039; }, { quoted: message })
```

#### Mention User

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[vercel/next.js]]></title>
            <link>https://github.com/vercel/next.js</link>
            <guid>https://github.com/vercel/next.js</guid>
            <pubDate>Sat, 31 May 2025 00:04:55 GMT</pubDate>
            <description><![CDATA[The React Framework]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vercel/next.js">vercel/next.js</a></h1>
            <p>The React Framework</p>
            <p>Language: JavaScript</p>
            <p>Stars: 132,175</p>
            <p>Forks: 28,476</p>
            <p>Stars today: 47 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[open-webui/open-webui]]></title>
            <link>https://github.com/open-webui/open-webui</link>
            <guid>https://github.com/open-webui/open-webui</guid>
            <pubDate>Sat, 31 May 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[User-friendly AI Interface (Supports Ollama, OpenAI API, ...)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/open-webui/open-webui">open-webui/open-webui</a></h1>
            <p>User-friendly AI Interface (Supports Ollama, OpenAI API, ...)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 96,891</p>
            <p>Forks: 12,588</p>
            <p>Stars today: 158 stars today</p>
            <h2>README</h2><pre># Open WebUI üëã

![GitHub stars](https://img.shields.io/github/stars/open-webui/open-webui?style=social)
![GitHub forks](https://img.shields.io/github/forks/open-webui/open-webui?style=social)
![GitHub watchers](https://img.shields.io/github/watchers/open-webui/open-webui?style=social)
![GitHub repo size](https://img.shields.io/github/repo-size/open-webui/open-webui)
![GitHub language count](https://img.shields.io/github/languages/count/open-webui/open-webui)
![GitHub top language](https://img.shields.io/github/languages/top/open-webui/open-webui)
![GitHub last commit](https://img.shields.io/github/last-commit/open-webui/open-webui?color=red)
[![Discord](https://img.shields.io/badge/Discord-Open_WebUI-blue?logo=discord&amp;logoColor=white)](https://discord.gg/5rJgQTnV4s)
[![](https://img.shields.io/static/v1?label=Sponsor&amp;message=%E2%9D%A4&amp;logo=GitHub&amp;color=%23fe8e86)](https://github.com/sponsors/tjbck)

**Open WebUI is an [extensible](https://docs.openwebui.com/features/plugin/), feature-rich, and user-friendly self-hosted AI platform designed to operate entirely offline.** It supports various LLM runners like **Ollama** and **OpenAI-compatible APIs**, with **built-in inference engine** for RAG, making it a **powerful AI deployment solution**.

![Open WebUI Demo](./demo.gif)

&gt; [!TIP]  
&gt; **Looking for an [Enterprise Plan](https://docs.openwebui.com/enterprise)?** ‚Äì **[Speak with Our Sales Team Today!](mailto:sales@openwebui.com)**
&gt;
&gt; Get **enhanced capabilities**, including **custom theming and branding**, **Service Level Agreement (SLA) support**, **Long-Term Support (LTS) versions**, and **more!**

For more information, be sure to check out our [Open WebUI Documentation](https://docs.openwebui.com/).

## Key Features of Open WebUI ‚≠ê

- üöÄ **Effortless Setup**: Install seamlessly using Docker or Kubernetes (kubectl, kustomize or helm) for a hassle-free experience with support for both `:ollama` and `:cuda` tagged images.

- ü§ù **Ollama/OpenAI API Integration**: Effortlessly integrate OpenAI-compatible APIs for versatile conversations alongside Ollama models. Customize the OpenAI API URL to link with **LMStudio, GroqCloud, Mistral, OpenRouter, and more**.

- üõ°Ô∏è **Granular Permissions and User Groups**: By allowing administrators to create detailed user roles and permissions, we ensure a secure user environment. This granularity not only enhances security but also allows for customized user experiences, fostering a sense of ownership and responsibility amongst users.

- üì± **Responsive Design**: Enjoy a seamless experience across Desktop PC, Laptop, and Mobile devices.

- üì± **Progressive Web App (PWA) for Mobile**: Enjoy a native app-like experience on your mobile device with our PWA, providing offline access on localhost and a seamless user interface.

- ‚úíÔ∏èüî¢ **Full Markdown and LaTeX Support**: Elevate your LLM experience with comprehensive Markdown and LaTeX capabilities for enriched interaction.

- üé§üìπ **Hands-Free Voice/Video Call**: Experience seamless communication with integrated hands-free voice and video call features, allowing for a more dynamic and interactive chat environment.

- üõ†Ô∏è **Model Builder**: Easily create Ollama models via the Web UI. Create and add custom characters/agents, customize chat elements, and import models effortlessly through [Open WebUI Community](https://openwebui.com/) integration.

- üêç **Native Python Function Calling Tool**: Enhance your LLMs with built-in code editor support in the tools workspace. Bring Your Own Function (BYOF) by simply adding your pure Python functions, enabling seamless integration with LLMs.

- üìö **Local RAG Integration**: Dive into the future of chat interactions with groundbreaking Retrieval Augmented Generation (RAG) support. This feature seamlessly integrates document interactions into your chat experience. You can load documents directly into the chat or add files to your document library, effortlessly accessing them using the `#` command before a query.

- üîç **Web Search for RAG**: Perform web searches using providers like `SearXNG`, `Google PSE`, `Brave Search`, `serpstack`, `serper`, `Serply`, `DuckDuckGo`, `TavilySearch`, `SearchApi` and `Bing` and inject the results directly into your chat experience.

- üåê **Web Browsing Capability**: Seamlessly integrate websites into your chat experience using the `#` command followed by a URL. This feature allows you to incorporate web content directly into your conversations, enhancing the richness and depth of your interactions.

- üé® **Image Generation Integration**: Seamlessly incorporate image generation capabilities using options such as AUTOMATIC1111 API or ComfyUI (local), and OpenAI&#039;s DALL-E (external), enriching your chat experience with dynamic visual content.

- ‚öôÔ∏è **Many Models Conversations**: Effortlessly engage with various models simultaneously, harnessing their unique strengths for optimal responses. Enhance your experience by leveraging a diverse set of models in parallel.

- üîê **Role-Based Access Control (RBAC)**: Ensure secure access with restricted permissions; only authorized individuals can access your Ollama, and exclusive model creation/pulling rights are reserved for administrators.

- üåêüåç **Multilingual Support**: Experience Open WebUI in your preferred language with our internationalization (i18n) support. Join us in expanding our supported languages! We&#039;re actively seeking contributors!

- üß© **Pipelines, Open WebUI Plugin Support**: Seamlessly integrate custom logic and Python libraries into Open WebUI using [Pipelines Plugin Framework](https://github.com/open-webui/pipelines). Launch your Pipelines instance, set the OpenAI URL to the Pipelines URL, and explore endless possibilities. [Examples](https://github.com/open-webui/pipelines/tree/main/examples) include **Function Calling**, User **Rate Limiting** to control access, **Usage Monitoring** with tools like Langfuse, **Live Translation with LibreTranslate** for multilingual support, **Toxic Message Filtering** and much more.

- üåü **Continuous Updates**: We are committed to improving Open WebUI with regular updates, fixes, and new features.

Want to learn more about Open WebUI&#039;s features? Check out our [Open WebUI documentation](https://docs.openwebui.com/features) for a comprehensive overview!

## Sponsors üôå

#### Emerald

&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://n8n.io/&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/n8n.png&quot; alt=&quot;n8n&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      N8N ‚Ä¢ Does your interface have a backend yet?&lt;br&gt;Try &lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://warp.dev/open-webui&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/warp.png&quot; alt=&quot;n8n&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://warp.dev/open-webui&quot;&gt;Warp&lt;/a&gt; ‚Ä¢ The intelligent terminal for developers
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

---

We are incredibly grateful for the generous support of our sponsors. Their contributions help us to maintain and improve our project, ensuring we can continue to deliver quality work to our community. Thank you!

## How to Install üöÄ

### Installation via Python pip üêç

Open WebUI can be installed using pip, the Python package installer. Before proceeding, ensure you&#039;re using **Python 3.11** to avoid compatibility issues.

1. **Install Open WebUI**:
   Open your terminal and run the following command to install Open WebUI:

   ```bash
   pip install open-webui
   ```

2. **Running Open WebUI**:
   After installation, you can start Open WebUI by executing:

   ```bash
   open-webui serve
   ```

This will start the Open WebUI server, which you can access at [http://localhost:8080](http://localhost:8080)

### Quick Start with Docker üê≥

&gt; [!NOTE]  
&gt; Please note that for certain Docker environments, additional configurations might be needed. If you encounter any connection issues, our detailed guide on [Open WebUI Documentation](https://docs.openwebui.com/) is ready to assist you.

&gt; [!WARNING]
&gt; When using Docker to install Open WebUI, make sure to include the `-v open-webui:/app/backend/data` in your Docker command. This step is crucial as it ensures your database is properly mounted and prevents any loss of data.

&gt; [!TIP]  
&gt; If you wish to utilize Open WebUI with Ollama included or CUDA acceleration, we recommend utilizing our official images tagged with either `:cuda` or `:ollama`. To enable CUDA, you must install the [Nvidia CUDA container toolkit](https://docs.nvidia.com/dgx/nvidia-container-runtime-upgrade/) on your Linux/WSL system.

### Installation with Default Configuration

- **If Ollama is on your computer**, use this command:

  ```bash
  docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **If Ollama is on a Different Server**, use this command:

  To connect to Ollama on another server, change the `OLLAMA_BASE_URL` to the server&#039;s URL:

  ```bash
  docker run -d -p 3000:8080 -e OLLAMA_BASE_URL=https://example.com -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **To run Open WebUI with Nvidia GPU support**, use this command:

  ```bash
  docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda
  ```

### Installation for OpenAI API Usage Only

- **If you&#039;re only using OpenAI API**, use this command:

  ```bash
  docker run -d -p 3000:8080 -e OPENAI_API_KEY=your_secret_key -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

### Installing Open WebUI with Bundled Ollama Support

This installation method uses a single container image that bundles Open WebUI with Ollama, allowing for a streamlined setup via a single command. Choose the appropriate command based on your hardware setup:

- **With GPU Support**:
  Utilize GPU resources by running the following command:

  ```bash
  docker run -d -p 3000:8080 --gpus=all -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

- **For CPU Only**:
  If you&#039;re not using a GPU, use this command instead:

  ```bash
  docker run -d -p 3000:8080 -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

Both commands facilitate a built-in, hassle-free installation of both Open WebUI and Ollama, ensuring that you can get everything up and running swiftly.

After installation, you can access Open WebUI at [http://localhost:3000](http://localhost:3000). Enjoy! üòÑ

### Other Installation Methods

We offer various installation alternatives, including non-Docker native installation methods, Docker Compose, Kustomize, and Helm. Visit our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/) or join our [Discord community](https://discord.gg/5rJgQTnV4s) for comprehensive guidance.

### Troubleshooting

Encountering connection issues? Our [Open WebUI Documentation](https://docs.openwebui.com/troubleshooting/) has got you covered. For further assistance and to join our vibrant community, visit the [Open WebUI Discord](https://discord.gg/5rJgQTnV4s).

#### Open WebUI: Server Connection Error

If you&#039;re experiencing connection issues, it‚Äôs often due to the WebUI docker container not being able to reach the Ollama server at 127.0.0.1:11434 (host.docker.internal:11434) inside the container . Use the `--network=host` flag in your docker command to resolve this. Note that the port changes from 3000 to 8080, resulting in the link: `http://localhost:8080`.

**Example Docker Command**:

```bash
docker run -d --network=host -v open-webui:/app/backend/data -e OLLAMA_BASE_URL=http://127.0.0.1:11434 --name open-webui --restart always ghcr.io/open-webui/open-webui:main
```

### Keeping Your Docker Installation Up-to-Date

In case you want to update your local Docker installation to the latest version, you can do it with [Watchtower](https://containrrr.dev/watchtower/):

```bash
docker run --rm --volume /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --run-once open-webui
```

In the last part of the command, replace `open-webui` with your container name if it is different.

Check our Updating Guide available in our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/updating).

### Using the Dev Branch üåô

&gt; [!WARNING]
&gt; The `:dev` branch contains the latest unstable features and changes. Use it at your own risk as it may have bugs or incomplete features.

If you want to try out the latest bleeding-edge features and are okay with occasional instability, you can use the `:dev` tag like this:

```bash
docker run -d -p 3000:8080 -v open-webui:/app/backend/data --name open-webui --add-host=host.docker.internal:host-gateway --restart always ghcr.io/open-webui/open-webui:dev
```

### Offline Mode

If you are running Open WebUI in an offline environment, you can set the `HF_HUB_OFFLINE` environment variable to `1` to prevent attempts to download models from the internet.

```bash
export HF_HUB_OFFLINE=1
```

## What&#039;s Next? üåü

Discover upcoming features on our roadmap in the [Open WebUI Documentation](https://docs.openwebui.com/roadmap/).

## License üìú

This project is licensed under the [Open WebUI License](LICENSE), a revised BSD-3-Clause license. You receive all the same rights as the classic BSD-3 license: you can use, modify, and distribute the software, including in proprietary and commercial products, with minimal restrictions. The only additional requirement is to preserve the &quot;Open WebUI&quot; branding, as detailed in the LICENSE file. For full terms, see the [LICENSE](LICENSE) document. üìÑ

## Support üí¨

If you have any questions, suggestions, or need assistance, please open an issue or join our
[Open WebUI Discord community](https://discord.gg/5rJgQTnV4s) to connect with us! ü§ù

## Star History

&lt;a href=&quot;https://star-history.com/#open-webui/open-webui&amp;Date&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&amp;theme=dark&quot; /&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
    &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

---

Created by [Timothy Jaeryang Baek](https://github.com/tjbck) - Let&#039;s make Open WebUI even more amazing together! üí™
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[preactjs/preact]]></title>
            <link>https://github.com/preactjs/preact</link>
            <guid>https://github.com/preactjs/preact</guid>
            <pubDate>Sat, 31 May 2025 00:04:53 GMT</pubDate>
            <description><![CDATA[‚öõÔ∏è Fast 3kB React alternative with the same modern API. Components & Virtual DOM.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/preactjs/preact">preactjs/preact</a></h1>
            <p>‚öõÔ∏è Fast 3kB React alternative with the same modern API. Components & Virtual DOM.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 37,550</p>
            <p>Forks: 1,994</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://preactjs.com&quot; target=&quot;_blank&quot;&gt;

![Preact](https://raw.githubusercontent.com/preactjs/preact/8b0bcc927995c188eca83cba30fbc83491cc0b2f/logo.svg?sanitize=true &#039;Preact&#039;)

&lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;Fast &lt;b&gt;3kB&lt;/b&gt; alternative to React with the same modern API.&lt;/p&gt;

**All the power of Virtual DOM components, without the overhead:**

- Familiar React API &amp; patterns: ES6 Class, hooks, and Functional Components
- Extensive React compatibility via a simple [preact/compat] alias
- Everything you need: JSX, &lt;abbr title=&quot;Virtual DOM&quot;&gt;VDOM&lt;/abbr&gt;, [DevTools], &lt;abbr title=&quot;Hot Module Replacement&quot;&gt;HMR&lt;/abbr&gt;, &lt;abbr title=&quot;Server-Side Rendering&quot;&gt;SSR&lt;/abbr&gt;.
- Highly optimized diff algorithm and seamless hydration from Server Side Rendering
- Supports all modern browsers and IE11
- Transparent asynchronous rendering with a pluggable scheduler

### üíÅ More information at the [Preact Website ‚ûû](https://preactjs.com)

&lt;table border=&quot;0&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;

[![npm](https://img.shields.io/npm/v/preact.svg)](https://www.npmjs.com/package/preact)
[![Preact Slack Community](https://img.shields.io/badge/Slack%20Community-preact.slack.com-blue)](https://chat.preactjs.com)
[![OpenCollective Backers](https://opencollective.com/preact/backers/badge.svg)](#backers)
[![OpenCollective Sponsors](https://opencollective.com/preact/sponsors/badge.svg)](#sponsors)

[![coveralls](https://img.shields.io/coveralls/preactjs/preact/main.svg)](https://coveralls.io/github/preactjs/preact)
[![gzip size](https://img.badgesize.io/https://unpkg.com/preact/dist/preact.min.js?compression=gzip&amp;label=gzip)](https://unpkg.com/preact/dist/preact.min.js)
[![brotli size](https://img.badgesize.io/https://unpkg.com/preact/dist/preact.min.js?compression=brotli&amp;label=brotli)](https://unpkg.com/preact/dist/preact.min.js)

&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

You can find some awesome libraries in the [awesome-preact list](https://github.com/preactjs/awesome-preact) :sunglasses:

---

## Getting Started

&gt; üíÅ _**Note:** You [don&#039;t need ES2015 to use Preact](https://github.com/developit/preact-in-es3)... but give it a try!_

#### Tutorial: Building UI with Preact

With Preact, you create user interfaces by assembling trees of components and elements. Components are functions or classes that return a description of what their tree should output. These descriptions are typically written in [JSX](https://facebook.github.io/jsx/) (shown underneath), or [HTM](https://github.com/developit/htm) which leverages standard JavaScript Tagged Templates. Both syntaxes can express trees of elements with &quot;props&quot; (similar to HTML attributes) and children.

To get started using Preact, first look at the render() function. This function accepts a tree description and creates the structure described. Next, it appends this structure to a parent DOM element provided as the second argument. Future calls to render() will reuse the existing tree and update it in-place in the DOM. Internally, render() will calculate the difference from previous outputted structures in an attempt to perform as few DOM operations as possible.

```js
import { h, render } from &#039;preact&#039;;
// Tells babel to use h for JSX. It&#039;s better to configure this globally.
// See https://babeljs.io/docs/en/babel-plugin-transform-react-jsx#usage
// In tsconfig you can specify this with the jsxFactory
/** @jsx h */

// create our tree and append it to document.body:
render(
	&lt;main&gt;
		&lt;h1&gt;Hello&lt;/h1&gt;
	&lt;/main&gt;,
	document.body
);

// update the tree in-place:
render(
	&lt;main&gt;
		&lt;h1&gt;Hello World!&lt;/h1&gt;
	&lt;/main&gt;,
	document.body
);
// ^ this second invocation of render(...) will use a single DOM call to update the text of the &lt;h1&gt;
```

Hooray! render() has taken our structure and output a User Interface! This approach demonstrates a simple case, but would be difficult to use as an application grows in complexity. Each change would be forced to calculate the difference between the current and updated structure for the entire application. Components can help here ‚Äì by dividing the User Interface into nested Components each can calculate their difference from their mounted point. Here&#039;s an example:

```js
import { render, h } from &#039;preact&#039;;
import { useState } from &#039;preact/hooks&#039;;

/** @jsx h */

const App = () =&gt; {
	const [input, setInput] = useState(&#039;&#039;);

	return (
		&lt;div&gt;
			&lt;p&gt;Do you agree to the statement: &quot;Preact is awesome&quot;?&lt;/p&gt;
			&lt;input value={input} onInput={e =&gt; setInput(e.target.value)} /&gt;
		&lt;/div&gt;
	);
};

render(&lt;App /&gt;, document.body);
```

---

## Sponsors

Become a sponsor and get your logo on our README on GitHub with a link to your site. [[Become a sponsor](https://opencollective.com/preact#sponsor)]

&lt;a href=&quot;https://opencollective.com/preact/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/0/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/1/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/2/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/3/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/4/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://snyk.co/preact&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/snyk/image/upload/snyk-marketingui/brand-logos/wordmark-logo-color.svg&quot; width=&quot;192&quot; height=&quot;64&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/5/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/6/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/7/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/8/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/9/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/10/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/10/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/11/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/11/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/12/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/12/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/13/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/13/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/14/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/14/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/15/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/15/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/guardian&quot; target=&quot;_blank&quot;&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;img src=&quot;https://github.com/guardian.png&quot; width=&quot;64&quot; height=&quot;64&quot;&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/16/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/16/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/17/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/17/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/18/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/18/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/19/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/19/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/20/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/20/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/21/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/21/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/22/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/22/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/23/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/23/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/24/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/24/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/25/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/25/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/26/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/26/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/27/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/27/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/28/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/28/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/sponsor/29/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/sponsor/29/avatar.svg&quot;&gt;&lt;/a&gt;

## Backers

Support us with a monthly donation and help us continue our activities. [[Become a backer](https://opencollective.com/preact#backer)]

&lt;a href=&quot;https://opencollective.com/preact/backer/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/0/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/1/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/2/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/3/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/4/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/5/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/6/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/7/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/8/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/9/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/10/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/10/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/11/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/11/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/12/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/12/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/13/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/13/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/14/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/14/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/15/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/15/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/16/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/16/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/17/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/17/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/18/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/18/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/19/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/19/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/20/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/20/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/21/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/21/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/22/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/22/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/23/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/23/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/24/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/24/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/25/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/25/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/26/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/26/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/27/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/27/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/28/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/28/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/preact/backer/29/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/preact/backer/29/avatar.svg&quot;&gt;&lt;/a&gt;

---

## License

MIT

[![Preact](https://i.imgur.com/YqCHvEW.gif)](https://preactjs.com)

[preact/compat]: https://github.com/preactjs/preact/tree/main/compat
[hyperscript]: https://github.com/dominictarr/hyperscript
[DevTools]: https://github.com/preactjs/preact-devtools
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[devcontainers/images]]></title>
            <link>https://github.com/devcontainers/images</link>
            <guid>https://github.com/devcontainers/images</guid>
            <pubDate>Sat, 31 May 2025 00:04:52 GMT</pubDate>
            <description><![CDATA[Repository for pre-built dev container images published under mcr.microsoft.com/devcontainers]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/devcontainers/images">devcontainers/images</a></h1>
            <p>Repository for pre-built dev container images published under mcr.microsoft.com/devcontainers</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,622</p>
            <p>Forks: 643</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre># Development Containers Images

&lt;table style=&quot;width: 100%; border-style: none;&quot;&gt;&lt;tr&gt;
&lt;td style=&quot;width: 140px; text-align: center;&quot;&gt;&lt;a href=&quot;https://github.com/devcontainers&quot;&gt;&lt;img width=&quot;128px&quot; src=&quot;https://raw.githubusercontent.com/microsoft/fluentui-system-icons/78c9587b995299d5bfc007a0077773556ecb0994/assets/Cube/SVG/ic_fluent_cube_32_filled.svg&quot; alt=&quot;devcontainers organization logo&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;strong&gt;Development Container Images&lt;/strong&gt;&lt;br /&gt;
Published docker images for use as development containers
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;


A **development container** is a running [Docker](https://www.docker.com) container with a well-defined tool/runtime stack and its prerequisites. It allows you to use a container as a full-featured development environment which can be used to run an application, to separate tools, libraries, or runtimes needed for working with a codebase, and to aid in continuous integration and testing.

This repository contains a set of **dev container images** which are Docker images built with [dev container features](https://github.com/devcontainers/features).

## Contents
 
- [`src`](src) - Contains reusable dev container images.

## Common Questions
### How does this repo relate to the dev container spec? What is the dev container specification?

The Development Containers Specification seeks to find ways to enrich existing formats with common development specific settings, tools, and configuration while still providing a simplified, un-orchestrated single container option ‚Äì so that they can be used as coding environments or for continuous integration and testing. You may review the spec and learn more about it in the [devcontainers/spec](https://github.com/devcontainers/spec) repo and [containers.dev](https://containers.dev/).

This repository supplies images that may be used in dev container configurations that follow the spec.
### What is the goal of `devcontainer.json`?

A `devcontainer.json` file is similar to `launch.json` for debugging, but designed to launch (or attach to) a development container instead. At its simplest, all you need is a `.devcontainer/devcontainer.json` file in your project that references an image, `Dockerfile`, or `docker-compose.yml`, and a few properties.

### Why do Dockerfiles in this repo use `RUN` statements with commands separated by `&amp;&amp;`?

Each `RUN` statement creates a Docker image &quot;layer&quot;. If one `RUN` statement adds temporary contents, these contents remain in this layer in the image even if they are deleted in a subsequent `RUN`. This means the image takes more storage locally and results in slower image download times if you publish the image to a registry. You can resolve this problem by using a `RUN` statement that includes any clean up steps (separated by `&amp;&amp;`) after a given operation. You can find more tips [here](./docs/TIPS.md/#why-do-dockerfiles-in-this-repository-use-run-statements-with-commands-separated-by).

### How can I contribute?

If you want to create your own image or add functionality on top of the images available in this repository, then see [How to write Dockerfiles](https://docs.docker.com/develop/develop-images/dockerfile_best-practices/) and the [dev container features reference](https://containers.dev/implementors/features/). 

This repository contains a select set of images, and we encourage the community to host and share additional images, and features rather than adding them here. You may learn more about this process in [the guidance](https://containers.dev/implementors/features-distribution/) in our spec repo. You may also check out the [features](https://github.com/devcontainers/features) repo for additional customizations you may adopt or modify for your dev containers.

## Feedback

Issues related to these images can be reported in [an issue](https://github.com/devcontainers/images/issues) in this repository.

# License
Copyright (c) Microsoft Corporation. All rights reserved. &lt;br /&gt;
Licensed under the MIT License. See [LICENSE](LICENSE).

For images generated from this repository, see [LICENSE](https://github.com/microsoft/containerregistry/blob/main/legal/Container-Images-Legal-Notice.md) and [NOTICE.txt](NOTICE.txt).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[openlayers/openlayers]]></title>
            <link>https://github.com/openlayers/openlayers</link>
            <guid>https://github.com/openlayers/openlayers</guid>
            <pubDate>Sat, 31 May 2025 00:04:51 GMT</pubDate>
            <description><![CDATA[OpenLayers]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/openlayers/openlayers">openlayers/openlayers</a></h1>
            <p>OpenLayers</p>
            <p>Language: JavaScript</p>
            <p>Stars: 11,885</p>
            <p>Forks: 3,086</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre># OpenLayers

[OpenLayers](https://openlayers.org/) is a high-performance, feature-packed library for creating interactive maps on the web. It can display map tiles, vector data and markers loaded from any source on any web page. OpenLayers has been developed to further the use of geographic information of all kinds. It is completely free, Open Source JavaScript, released under the [BSD 2-Clause License](https://opensource.org/licenses/BSD-2-Clause).

## Getting Started

Install the [`ol` package](https://www.npmjs.com/package/ol):

```
npm install ol
```

Import just what you need for your application:

```js
import Map from &#039;ol/Map&#039;;
import View from &#039;ol/View&#039;;
import TileLayer from &#039;ol/layer/Tile&#039;;
import XYZ from &#039;ol/source/XYZ&#039;;

new Map({
  target: &#039;map&#039;,
  layers: [
    new TileLayer({
      source: new XYZ({
        url: &#039;https://tile.openstreetmap.org/{z}/{x}/{y}.png&#039;
      })
    })
  ],
  view: new View({
    center: [0, 0],
    zoom: 2
  })
});
```

See the following examples for more detail on bundling OpenLayers with your application:

 * Using [Vite](https://github.com/openlayers/ol-vite)
 * Using [Rollup](https://github.com/openlayers/ol-rollup)
 * Using [webpack](https://github.com/openlayers/ol-webpack)
 * Using [Parcel](https://github.com/openlayers/ol-parcel)

For more detail on quick prototyping without the use of a Node.js based setup, see the [Skypack](https://github.com/openlayers/ol-skypack) example.

## Sponsors

OpenLayers appreciates contributions of all kinds.  We especially want to thank our fiscal sponsors who contribute to ongoing project maintenance.

&lt;br&gt;

[![Pozi logo](./sponsor-logos/pozi.png)](https://pozi.com/)

&gt; Pozi helps connect communities through spatial thinking.
&gt; We love Openlayers and it forms a core part of our platform.
&gt; https://pozi.com/ https://app.pozi.com/

&lt;br&gt;

[![yey&#039;maps logo](./sponsor-logos/yeymaps.png)](https://www.yeymaps.io/)

&gt; yey&#039;maps is a scalable cloud GIS suite that is developed with the
&gt; powerful Openlayers API and the GDAL library.
&gt; https://www.yeymaps.io/

&lt;br&gt;

[![ela-compil logo](./sponsor-logos/ela-compil.png)](https://ela.pl/)

&gt; We develop leading Physical Security Information Management (PSIM) software.
&gt; OpenLayers is the core of our map engine and we love it! 
&gt; https://ela.pl/

&lt;br&gt;

[![Ubigu Oy logo](./sponsor-logos/ubigu-oy.svg)](https://www.ubigu.fi/)

&gt; We advance holistic utilization and availability of spatial information,
&gt; for a better planned, built and managed society.
&gt; https://www.ubigu.fi/

&lt;br&gt;

[![Scribble Maps logo](./sponsor-logos/scribble-maps.png)](https://www.scribblemaps.com/)

&gt; Build custom maps and identify insights across real estate, engineering, research, business, exploration, construction, manufacturing - and so much more.
&gt; https://www.scribblemaps.com/

&lt;br&gt;

See our [GitHub sponsors page](https://github.com/sponsors/openlayers) or [Open Collective](https://opencollective.com/openlayers/contribute/sponsors-214/checkout) if you too are interested in becoming a regular sponsor.

## TypeScript support

The [ol package](https://npmjs.com/package/ol) includes auto-generated TypeScript declarations as `*.d.ts` files.

## Supported Browsers

OpenLayers runs on all modern browsers (with greater than 1% global usage).  This includes Chrome, Firefox, Safari and Edge. For older browsers, polyfills ([Fastly](https://polyfill-fastly.io) or [Cloudflare](https://cdnjs.cloudflare.com/polyfill)) will likely need to be added.

## Documentation

Check out the [hosted examples](https://openlayers.org/en/latest/examples/), the [workshop](https://openlayers.org/workshop/) or the [API documentation](https://openlayers.org/en/latest/apidoc/).

## Bugs

Please use the [GitHub issue tracker](https://github.com/openlayers/openlayers/issues) for all bugs and feature requests. Before creating a new issue, do a quick search to see if the problem has been reported already.

## Contributing

Please see our guide on [contributing](CONTRIBUTING.md) if you&#039;re interested in getting involved.

## Community

- Need help? Find it on [Stack Overflow using the tag &#039;openlayers&#039;](https://stackoverflow.com/questions/tagged/openlayers)
- Follow [@openlayers](https://twitter.com/openlayers) on Twitter

![Test Status](https://github.com/openlayers/openlayers/workflows/Test/badge.svg)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[FortAwesome/Font-Awesome]]></title>
            <link>https://github.com/FortAwesome/Font-Awesome</link>
            <guid>https://github.com/FortAwesome/Font-Awesome</guid>
            <pubDate>Sat, 31 May 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[The iconic SVG, font, and CSS toolkit]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/FortAwesome/Font-Awesome">FortAwesome/Font-Awesome</a></h1>
            <p>The iconic SVG, font, and CSS toolkit</p>
            <p>Language: JavaScript</p>
            <p>Stars: 75,270</p>
            <p>Forks: 12,213</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre>&lt;h1&gt;&lt;img src=&quot;https://img.fortawesome.com/349cfdf6/fa-free-logo.svg&quot; alt=&quot;Font Awesome Free&quot; width=&quot;50%&quot;&gt;&lt;/h1&gt;

&gt; Version 5 ‚Äì the iconic SVG, font, and CSS framework

The internet&#039;s most popular icon toolkit has been redesigned and built from
scratch. On top of this, features like icon font ligatures, an SVG framework,
official NPM packages for popular frontend libraries like React, and access to
a new CDN.

Not familiar with Font Awesome 5? [Learn
more](https://www.kickstarter.com/projects/232193852/font-awesome-5) about our
successful Kickstarter and plan. You can also **[order Font Awesome
Pro](https://fontawesome.com/pro)** which includes tons more icons directly
from [fontawesome.com](https://fontawesome.com).

## Documentation

Learn how to get started with Font Awesome and then dive deeper into other and advanced topics:

### Using Font Awesome on the Web

* [With SVG with JavaScript](https://fontawesome.com/how-to-use/on-the-web/setup/getting-started?using=svg-with-js)
* [With web fonts with CSS](https://fontawesome.com/how-to-use/on-the-web/setup/getting-started?using=web-fonts-with-css)
* [Upgrading from version 4](https://fontawesome.com/how-to-use/on-the-web/setup/upgrading-from-version-4)
* [Installing Font Awesome with a package manager](https://fontawesome.com/how-to-use/on-the-web/setup/using-package-managers)
* [Downloading + hosting Font Awesome yourself](https://fontawesome.com/how-to-use/on-the-web/setup/hosting-font-awesome-yourself)
* [Performance and security](https://fontawesome.com/how-to-use/performance-and-security)
* [Accessibility](https://fontawesome.com/how-to-use/on-the-web/other-topics/accessibility)
* [Troubleshooting](https://fontawesome.com/how-to-use/on-the-web/other-topics/troubleshooting)

#### Advanced Options &amp; Techniques

* [Using CSS pseudo-elements](https://fontawesome.com/how-to-use/on-the-web/advanced/css-pseudo-elements)
* [SVG sprites](https://fontawesome.com/how-to-use/svg-sprites)
* [The Font Awesome API](https://fontawesome.com/how-to-use/font-awesome-api)
* [SVG symbols](https://fontawesome.com/how-to-use/on-the-web/advanced/svg-symbols)
* [SVG JavaScript Core](https://fontawesome.com/how-to-use/on-the-web/advanced/svg-javascript-core)
* [Server side rendering](https://fontawesome.com/how-to-use/server-side-rendering)

### Using Font Awesome on the Desktop

* [Getting started](https://fontawesome.com/how-to-use/on-the-desktop/setup/getting-started)
* [Upgrading from version 4](https://fontawesome.com/how-to-use/on-the-desktop/setup/upgrading-from-version-4)
* [Using ligatures](https://fontawesome.com/how-to-use/on-the-desktop/referencing-icons/using-ligatures)
* [Using glyphs](https://fontawesome.com/how-to-use/on-the-desktop/referencing-icons/using-glyphs)
* [Troubleshooting](https://fontawesome.com/how-to-use/on-the-desktop/other-topics/troubleshooting)

### Where did Font Awesome 4 (or 3) go?

Now that Font Awesome 5 has been released we are marking version 4 as
end-of-life. We don&#039;t plan on releasing any further versions of the 4.x or 3.x.

Documentation is still available but it&#039;s moved to
[https://fontawesome.com/v4.7.0](https://fontawesome.com/v4.7.0) and
[https://fontawesome.com/v3.2.1](https://fontawesome.com/v3.2.1).

The Git repository for
[v4.7.0](https://github.com/FortAwesome/Font-Awesome/releases/tag/v4.7.0) and
[v3.2.1](https://github.com/FortAwesome/Font-Awesome/releases/tag/v3.2.1) can
be found in our GitHub releases.

## Change log

We&#039;ll keep track of each release in the [CHANGELOG.md](./CHANGELOG.md)

Looking for older versions of Font Awesome? Check the [releases](https://github.com/FortAwesome/Font-Awesome/releases).

## Upgrading

From time-to-time we&#039;ll have special upgrading instructions from one version to the next.

Check out the [UPGRADING.md](./UPGRADING.md) guide when you upgrade your dependencies.

## Code of conduct

We will behave ourselves if you behave yourselves. For more details see our
[CODE_OF_CONDUCT.md](./CODE_OF_CONDUCT.md).

## Contributing

Please read through our [contributing guidelines](./CONTRIBUTING.md).  Included
are directions for opening issues.

## Versioning

Font Awesome will be maintained under the Semantic Versioning guidelines as much as possible. Releases will be numbered
with the following format:

`&lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;`

For more information on SemVer, please visit http://semver.org.

**The major version &quot;5&quot; is part of an umbrella release.  It includes many different types of files and technologies. Therefore
we deviate from normal SemVer in the following ways:**

* Any release may update the design, look-and-feel, or branding of an existing
  icon
* We will never intentionally release a `patch` version update that breaks
  backward compatibility
* A `minor` release **may include backward-incompatible changes** but we will
  write clear upgrading instructions in UPGRADING.md
* A `minor` or `patch` release will never remove icons
* Bug fixes will be addressed as `patch` releases unless they include backward
  incompatibility then they will be `minor` releases

## License

Font Awesome Free is free, open source, and GPL friendly. You can use it for
commercial projects, open source projects, or really almost whatever you want.

- Icons ‚Äî CC BY 4.0 License
  - In the Font Awesome Free download, the CC BY 4.0 license applies to all icons packaged as .svg and .js files types.
- Fonts ‚Äî SIL OFL 1.1 License
  - In the Font Awesome Free download, the SIL OLF license applies to all icons packaged as web and desktop font files.
- Code ‚Äî MIT License
  - In the Font Awesome Free download, the MIT license applies to all non-font and non-icon files.

Attribution is required by MIT, SIL OLF, and CC BY licenses. Downloaded Font
Awesome Free files already contain embedded comments with sufficient
attribution, so you shouldn&#039;t need to do anything additional when using these
files normally.

We&#039;ve kept attribution comments terse, so we ask that you do not actively work
to remove them from files, especially code. They&#039;re a great way for folks to
learn about Font Awesome.

## Team
* [Dave Gandy](https://github.com/davegandy)
* [Travis Chase](https://github.com/supercodepoet)
* [Rob Madole](https://github.com/robmadole)
* [Brian Talbot](https://github.com/talbs)
* [Jory Raphael](https://github.com/sensibleworld)
* [Mike Wilkerson](https://github.com/mlwilkerson)
* [Frances Botsford](https://github.com/frrrances)
* [Trevor Chase](https://github.com/trevorchase)
* [Jason Lundien](https://github.com/jasonlundien)
* [Jason Otero](https://github.com/deathnfudge)
* [Edward Emanuel](https://github.com/ej2)
* [Kelsey Jackson](https://github.com/kelseythejackson)
* [Geremia Taglialatela](https://github.com/tagliala)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[exceljs/exceljs]]></title>
            <link>https://github.com/exceljs/exceljs</link>
            <guid>https://github.com/exceljs/exceljs</guid>
            <pubDate>Sat, 31 May 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[Excel Workbook Manager]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/exceljs/exceljs">exceljs/exceljs</a></h1>
            <p>Excel Workbook Manager</p>
            <p>Language: JavaScript</p>
            <p>Stars: 14,432</p>
            <p>Forks: 1,852</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre># ExcelJS

[![Build Status](https://github.com/exceljs/exceljs/actions/workflows/tests.yml/badge.svg?branch=master&amp;event=push)](https://github.com/exceljs/exceljs/actions/workflows/tests.yml)

Read, manipulate and write spreadsheet data and styles to XLSX and JSON.

Reverse engineered from Excel spreadsheet files as a project.

# Translations

* [‰∏≠ÊñáÊñáÊ°£](README_zh.md)

# Installation

```shell
npm install exceljs
```

# New Features!

* Merged [Add pivot table with limitations #2551](https://github.com/exceljs/exceljs/pull/2551). &lt;br/&gt; Many thanks to Protobi and &lt;a href=&quot;https://github.com/mikez&quot;&gt;Michael&lt;/a&gt; for this contribution!
* Merged [fix: styles rendering in case when &quot;numFmt&quot; is present in conditional formatting rules (resolves #1814) #1815](https://github.com/exceljs/exceljs/pull/1815). &lt;br/&gt; Many thanks to [@andreykrupskii](https://github.com/andreykrupskii) for this contribution!
* Merged [inlineStr cell type support #1575 #1576](https://github.com/exceljs/exceljs/pull/1576). &lt;br/&gt; Many thanks to [@drdmitry](https://github.com/drdmitry) for this contribution!
* Merged [Fix parsing of boolean attributes #1849](https://github.com/exceljs/exceljs/pull/1849). &lt;br/&gt; Many thanks to [@bno1](https://github.com/bno1) for this contribution!
* Merged [add optional custom auto-filter to table #1670](https://github.com/exceljs/exceljs/pull/1670). &lt;br/&gt; Many thanks to [@thambley](https://github.com/thambley) for this contribution!
* Merged [Deep copy inherited style #1850](https://github.com/exceljs/exceljs/pull/1850). &lt;br/&gt; Many thanks to [@ikzhr](https://github.com/ikzhr) for this contribution!
* Merged [Upgrade actions/cache and actions/setup-node #1846](https://github.com/exceljs/exceljs/pull/1846). &lt;br/&gt; Many thanks to [@cclauss](https://github.com/cclauss) for this contribution!
* Merged [Check object keys in isEqual #1831](https://github.com/exceljs/exceljs/pull/1831). &lt;br/&gt; Many thanks to [@bno1](https://github.com/bno1) for this contribution!
* Merged [Add v17 to testing workflow #1856](https://github.com/exceljs/exceljs/pull/1856). &lt;br/&gt; Many thanks to [@Siemienik](https://github.com/Siemienik) for this contribution!
* Merged [Upgrade jszip to its latest version to date. This version does not have any vulnerability found by Snyk so far #1895](https://github.com/exceljs/exceljs/pull/1895). &lt;br/&gt; Many thanks to [@ValerioSevilla](https://github.com/ValerioSevilla) for this contribution!
* Merged [Update README.md #1677](https://github.com/exceljs/exceljs/pull/1677). &lt;br/&gt; Many thanks to [@xjrcode](https://github.com/xjrcode) for this contribution!
* Merged [(docs): set prototype of RegExp correctly. #1700](https://github.com/exceljs/exceljs/pull/1700). &lt;br/&gt; Many thanks to [@joeldenning](https://github.com/joeldenning) for this contribution!
* Merged [Added timeouts to github actions #1733](https://github.com/exceljs/exceljs/pull/1733). &lt;br/&gt; Many thanks to [@alexbjorlig](https://github.com/alexbjorlig) for this contribution!
* Merged [fix issue 1676 #1701](https://github.com/exceljs/exceljs/pull/1701). &lt;br/&gt; Many thanks to [@skypesky](https://github.com/skypesky) for this contribution!
* Merged [ExcelJS/ExcelJS#2237 : Update CI Tests, Drop support for Node v8  #2242](https://github.com/exceljs/exceljs/pull/2242). &lt;br/&gt; Many thanks to [@Siemienik](https://github.com/Siemienik) for this contribution!
* Merged [Fix types for getWorksheet() #2223](https://github.com/exceljs/exceljs/pull/2223). &lt;br/&gt; Many thanks to [@hfhchan-plb](https://github.com/hfhchan-plb) for this contribution!
* Merged [add characters cannot be used for worksheet name #2126](https://github.com/exceljs/exceljs/pull/2126). &lt;br/&gt; Many thanks to [@tkm-kj](https://github.com/tkm-kj) for this contribution!
* Merged [Fix issue #1753 Reject promise when workbook reader is writing to temporary file stream and error occurs #1756](https://github.com/exceljs/exceljs/pull/1756). &lt;br/&gt; Many thanks to [@pauliusg](https://github.com/pauliusg) for this contribution!
* Merged [README.md to have correct link for Streaming XLSX #2186](https://github.com/exceljs/exceljs/pull/2186). &lt;br/&gt; Many thanks to [@wulfsolter](https://github.com/wulfsolter) for this contribution!
* Merged [Added a polyfill of promise.finally to support lower versions of Firefox. #1982](https://github.com/exceljs/exceljs/pull/1982). &lt;br/&gt; Many thanks to [@DemoJj](https://github.com/DemoJj) for this contribution!
* Merged [Fix read this.worksheet before assign it #1934](https://github.com/exceljs/exceljs/pull/1934). &lt;br/&gt; Many thanks to [@ZyqGitHub1](https://github.com/ZyqGitHub1) for this contribution!
* Merged [chore: upgrade jszip to ^3.10.1 #2211](https://github.com/exceljs/exceljs/pull/2211). &lt;br/&gt; Many thanks to [@jarrod-cocoon](https://github.com/jarrod-cocoon) for this contribution!
* Merged [fixed spelling error in README.md file #2208](https://github.com/exceljs/exceljs/pull/2208). &lt;br/&gt; Many thanks to [@HugoP27](https://github.com/HugoP27) for this contribution!
* Merged [fix: Fix xlsx.writeFile() not catching error when error occurs #2244](https://github.com/exceljs/exceljs/pull/2244). &lt;br/&gt; Many thanks to [@zurmokeeper](https://github.com/zurmokeeper) for this contribution!
* Merged [Improve worksheets&#039; naming validation logic. #2257](https://github.com/exceljs/exceljs/pull/2257). &lt;br/&gt; Many thanks to [@Siemienik](https://github.com/Siemienik) for this contribution!
* Merged [fix issue 2125 - spliceRows remove last row #2140](https://github.com/exceljs/exceljs/pull/2140). &lt;br/&gt; Many thanks to [@babu-ch](https://github.com/babu-ch) for this contribution!
* Merged [fix: fix the loss of column attributes due to incorrect column order #2222](https://github.com/exceljs/exceljs/pull/2222). &lt;br/&gt; Many thanks to [@cpaiyueyue](https://github.com/cpaiyueyue) for this contribution!
* Merged [Fix: Sheet Properties Types #2327](https://github.com/exceljs/exceljs/pull/2327). &lt;br/&gt; Many thanks to [@albeniraouf](https://github.com/albeniraouf) for this contribution!
* Merged [Use node 18 LTS for tsc, and benchmark. Add node 20. to test matrix. ‚Ä¶ #2354](https://github.com/exceljs/exceljs/pull/2354). &lt;br/&gt; Many thanks to [@Siemienik](https://github.com/Siemienik) for this contribution!
* Merged [Add missing tooltip attribute to CellHyperlinkValue index.d.ts #2350](https://github.com/exceljs/exceljs/pull/2350). &lt;br/&gt; Many thanks to [@NiklasPor](https://github.com/NiklasPor) for this contribution!
* Merged [Increase resilience to generating large workbooks #2320](https://github.com/exceljs/exceljs/pull/2320). &lt;br/&gt; Many thanks to [@hfhchan-plb](https://github.com/hfhchan-plb) for this contribution!
* Merged [repair all &#039;c2fo.io&#039; links (&#039;c2fo.github.io&#039;) #2324](https://github.com/exceljs/exceljs/pull/2324). &lt;br/&gt; Many thanks to [@justintunev7](https://github.com/justintunev7) for this contribution!
* Merged [fix: fix type definitions about last column, formula values and protection #2309](https://github.com/exceljs/exceljs/pull/2309). &lt;br/&gt; Many thanks to [@gltjk](https://github.com/gltjk) for this contribution!
* Merged [fix: add spinCount field for WorksheetProtection type #2284](https://github.com/exceljs/exceljs/pull/2284). &lt;br/&gt; Many thanks to [@damingerdai](https://github.com/damingerdai) for this contribution!
* Merged [Add type definition for WorksheetModel.merges #2281](https://github.com/exceljs/exceljs/pull/2281). &lt;br/&gt; Many thanks to [@ytjmt](https://github.com/ytjmt) for this contribution!

# Contributions

Contributions are very welcome! It helps me know what features are desired or what bugs are causing the most pain.

I have just one request; If you submit a pull request for a bugfix, please add a unit-test or integration-test (in the spec folder) that catches the problem.
 Even a PR that just has a failing test is fine - I can analyse what the test is doing and fix the code from that.

Note: Please try to avoid modifying the package version in a PR.
Versions are updated on release and any change will most likely result in merge collisions.

To be clear, all contributions added to this library will be included in the library&#039;s MIT licence.

### Let&#039;s chat together:

[![SiemaTeam](https://discordapp.com/api/guilds/976854442009825321/widget.png?style=banner2)](https://discord.gg/siema)

# Contents

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#importing&quot;&gt;Importing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;#interface&quot;&gt;Interface&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#create-a-workbook&quot;&gt;Create a Workbook&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#set-workbook-properties&quot;&gt;Set Workbook Properties&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#workbook-views&quot;&gt;Workbook Views&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#add-a-worksheet&quot;&gt;Add a Worksheet&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#remove-a-worksheet&quot;&gt;Remove a Worksheet&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#access-worksheets&quot;&gt;Access Worksheets&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#worksheet-state&quot;&gt;Worksheet State&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#worksheet-properties&quot;&gt;Worksheet Properties&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#page-setup&quot;&gt;Page Setup&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#headers-and-footers&quot;&gt;Headers and Footers&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;
        &lt;a href=&quot;#worksheet-views&quot;&gt;Worksheet Views&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#frozen-views&quot;&gt;Frozen Views&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#split-views&quot;&gt;Split Views&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#auto-filters&quot;&gt;Auto Filters&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#columns&quot;&gt;Columns&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#rows&quot;&gt;Rows&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#add-rows&quot;&gt;Add Rows&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#handling-individual-cells&quot;&gt;Handling Individual Cells&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#merged-cells&quot;&gt;Merged Cells&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#insert-rows&quot;&gt;Insert Rows&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#splice&quot;&gt;Splice&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#duplicate-a-row&quot;&gt;Duplicate Row&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#defined-names&quot;&gt;Defined Names&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#data-validations&quot;&gt;Data Validations&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cell-comments&quot;&gt;Cell Comments&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#tables&quot;&gt;Tables&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#styles&quot;&gt;Styles&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#number-formats&quot;&gt;Number Formats&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#fonts&quot;&gt;Fonts&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#alignment&quot;&gt;Alignment&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#borders&quot;&gt;Borders&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#fills&quot;&gt;Fills&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#rich-text&quot;&gt;Rich Text&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#conditional-formatting&quot;&gt;Conditional Formatting&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#outline-levels&quot;&gt;Outline Levels&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#images&quot;&gt;Images&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sheet-protection&quot;&gt;Sheet Protection&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#file-io&quot;&gt;File I/O&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#xlsx&quot;&gt;XLSX&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#reading-xlsx&quot;&gt;Reading XLSX&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#writing-xlsx&quot;&gt;Writing XLSX&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#csv&quot;&gt;CSV&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#reading-csv&quot;&gt;Reading CSV&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#writing-csv&quot;&gt;Writing CSV&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#streaming-io&quot;&gt;Streaming I/O&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#streaming-xlsx&quot;&gt;Streaming XLSX&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#browser&quot;&gt;Browser&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;#value-types&quot;&gt;Value Types&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#null-value&quot;&gt;Null Value&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#merge-cell&quot;&gt;Merge Cell&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#number-value&quot;&gt;Number Value&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#string-value&quot;&gt;String Value&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#date-value&quot;&gt;Date Value&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#hyperlink-value&quot;&gt;Hyperlink Value&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;
        &lt;a href=&quot;#formula-value&quot;&gt;Formula Value&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#shared-formula&quot;&gt;Shared Formula&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#formula-type&quot;&gt;Formula Type&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#array-formula&quot;&gt;Array Formula&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#rich-text-value&quot;&gt;Rich Text Value&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#boolean-value&quot;&gt;Boolean Value&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#error-value&quot;&gt;Error Value&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#config&quot;&gt;Config&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#known-issues&quot;&gt;Known Issues&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#release-history&quot;&gt;Release History&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

# Importing[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

```javascript
const ExcelJS = require(&#039;exceljs&#039;);
```

## ES5 Imports[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

To use the ES5 transpiled code, for example for node.js versions older than 10, use the dist/es5 path.

```javascript
const ExcelJS = require(&#039;exceljs/dist/es5&#039;);
```

**Note:** The ES5 build has an implicit dependency on a number of polyfills which are no longer
 explicitly added by exceljs.
 You will need to add &quot;core-js&quot; and &quot;regenerator-runtime&quot; to your dependencies and
 include the following requires in your code before the exceljs import:

```javascript
// polyfills required by exceljs
require(&#039;core-js/modules/es.promise&#039;);
require(&#039;core-js/modules/es.string.includes&#039;);
require(&#039;core-js/modules/es.object.assign&#039;);
require(&#039;core-js/modules/es.object.keys&#039;);
require(&#039;core-js/modules/es.symbol&#039;);
require(&#039;core-js/modules/es.symbol.async-iterator&#039;);
require(&#039;regenerator-runtime/runtime&#039;);

const ExcelJS = require(&#039;exceljs/dist/es5&#039;);
```

For IE 11, you&#039;ll also need a polyfill to support unicode regex patterns. For example,

```js
const rewritePattern = require(&#039;regexpu-core&#039;);
const {generateRegexpuOptions} = require(&#039;@babel/helper-create-regexp-features-plugin/lib/util&#039;);

const {RegExp} = global;
try {
  new RegExp(&#039;a&#039;, &#039;u&#039;);
} catch (err) {
  global.RegExp = function(pattern, flags) {
    if (flags &amp;&amp; flags.includes(&#039;u&#039;)) {
      return new RegExp(rewritePattern(pattern, flags, generateRegexpuOptions({flags, pattern})));
    }
    return new RegExp(pattern, flags);
  };
  global.RegExp.prototype = RegExp.prototype;
}
```

## Browserify[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

ExcelJS publishes two browserified bundles inside the dist/ folder:

One with implicit dependencies on core-js polyfills...
```html
&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/babel-polyfill/6.26.0/polyfill.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;exceljs.js&quot;&gt;&lt;/script&gt;
```

And one without...
```html
&lt;script src=&quot;--your-project&#039;s-pollyfills-here--&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;exceljs.bare.js&quot;&gt;&lt;/script&gt;
```


# Interface[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

## Create a Workbook[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

```javascript
const workbook = new ExcelJS.Workbook();
```

## Set Workbook Properties[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

```javascript
workbook.creator = &#039;Me&#039;;
workbook.lastModifiedBy = &#039;Her&#039;;
workbook.created = new Date(1985, 8, 30);
workbook.modified = new Date();
workbook.lastPrinted = new Date(2016, 9, 27);
```

```javascript
// Set workbook dates to 1904 date system
workbook.properties.date1904 = true;
```

## Set Calculation Properties[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

```javascript
// Force workbook calculation on load
workbook.calcProperties.fullCalcOnLoad = true;
```

## Workbook Views[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

The Workbook views controls how many separate windows Excel will open when viewing the workbook.

```javascript
workbook.views = [
  {
    x: 0, y: 0, width: 10000, height: 20000,
    firstSheet: 0, activeTab: 1, visibility: &#039;visible&#039;
  }
]
```

## Add a Worksheet[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

```javascript
const sheet = workbook.addWorksheet(&#039;My Sheet&#039;);
```

Use the second parameter of the addWorksheet function to specify options for the worksheet.

For Example:

```javascript
// create a sheet with red tab colour
const sheet = workbook.addWorksheet(&#039;My Sheet&#039;, {properties:{tabColor:{argb:&#039;FFC0000&#039;}}});

// create a sheet where the grid lines are hidden
const sheet = workbook.addWorksheet(&#039;My Sheet&#039;, {views: [{showGridLines: false}]});

// create a sheet with the first row and column frozen
const sheet = workbook.addWorksheet(&#039;My Sheet&#039;, {views:[{state: &#039;frozen&#039;, xSplit: 1, ySplit:1}]});

// Create worksheets with headers and footers
const sheet = workbook.addWorksheet(&#039;My Sheet&#039;, {
  headerFooter:{firstHeader: &quot;Hello Exceljs&quot;, firstFooter: &quot;Hello World&quot;}
});

// create new sheet with pageSetup settings for A4 - landscape
const worksheet =  workbook.addWorksheet(&#039;My Sheet&#039;, {
  pageSetup:{paperSize: 9, orientation:&#039;landscape&#039;}
});
```

## Remove a Worksheet[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

Use the worksheet `id` to remove the sheet from workbook.

For Example:

```javascript
// Create a worksheet
const sheet = workbook.addWorksheet(&#039;My Sheet&#039;);

// Remove the worksheet using worksheet id
workbook.removeWorksheet(sheet.id)
```

## Access Worksheets[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;
```javascript
// Iterate over all sheets
// Note: workbook.worksheets.forEach will still work but this is better
workbook.eachSheet(function(worksheet, sheetId) {
  // ...
});

// fetch sheet by name
const worksheet = workbook.getWorksheet(&#039;My Sheet&#039;);

// fetch sheet by id
// INFO: Be careful when using it!
// It tries to access to `worksheet.id` field. Sometimes (really very often) workbook has worksheets with id not starting from 1.
// For instance It happens when any worksheet has been deleted.
// It&#039;s much more safety when you assume that ids are random. And stop to use this function.
// If you need to access all worksheets in a loop please look to the next example.
const worksheet = workbook.getWorksheet(1);

// access by `worksheets` array:
workbook.worksheets[0]; //the first one;

```

It&#039;s important to know that `workbook.getWorksheet(1) != Workbook.worksheets[0]` and `workbook.getWorksheet(1) != Workbook.worksheets[1]`,
because `workbook.worksheets[0].id` may have any value.

## Worksheet State[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

```javascript
// make worksheet visible
worksheet.state = &#039;visible&#039;;

// make worksheet hidden
worksheet.state = &#039;hidden&#039;;

// make worksheet hidden from &#039;hide/unhide&#039; dialog
worksheet.state = &#039;veryHidden&#039;;
```

## Worksheet Properties[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

Worksheets support a property bucket to allow control over some features of the worksheet.

```javascript
// create new sheet with properties
const worksheet = workbook.addWorksheet(&#039;sheet&#039;, {properties:{tabColor:{argb:&#039;FF00FF00&#039;}}});

// create a new sheet writer with properties
const worksheetWriter = workbookWriter.addWorksheet(&#039;sheet&#039;, {properties:{outlineLevelCol:1}});

// adjust properties afterwards (not supported by worksheet-writer)
worksheet.properties.outlineLevelCol = 2;
worksheet.properties.defaultRowHeight = 15;
```

**Supported Properties**

| Name             | Default    | Description |
| ---------------- | ---------- | ----------- |
| tabColor         | undefined  | Color of the tabs |
| outlineLevelCol  | 0          | The worksheet column outline level |
| outlineLevelRow  | 0          | The worksheet row outline level |
| defaultRowHeight | 15         | Default row height |
| defaultColWidth  | (optional) | Default column width |
| dyDescent        | 55         | TBD |

### Worksheet Metrics[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

Some new metrics have been added to Worksheet...

| Name              | Description |
| ----------------- | ----------- |
| rowCount          | The total row size of the document. Equal to the row number of the last row that has values. |
| actualRowCount    | A count of the number of rows that have values. If a mid-document row is empty, it will not be included in the count. |
| columnCount       | The total column size of the document. Equal to the maximum cell count f

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[louislam/uptime-kuma]]></title>
            <link>https://github.com/louislam/uptime-kuma</link>
            <guid>https://github.com/louislam/uptime-kuma</guid>
            <pubDate>Sat, 31 May 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[A fancy self-hosted monitoring tool]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/louislam/uptime-kuma">louislam/uptime-kuma</a></h1>
            <p>A fancy self-hosted monitoring tool</p>
            <p>Language: JavaScript</p>
            <p>Stars: 70,128</p>
            <p>Forks: 6,166</p>
            <p>Stars today: 49 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot; width=&quot;100%&quot;&gt;
    &lt;img src=&quot;./public/icon.svg&quot; width=&quot;128&quot; alt=&quot;&quot; /&gt;
&lt;/div&gt;

# Uptime Kuma

Uptime Kuma is an easy-to-use self-hosted monitoring tool.

&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/louislam/uptime-kuma?style=flat&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/louislam/uptime-kuma&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/v/louislam/uptime-kuma/latest?label=docker%20image%20ver.&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/louislam/uptime-kuma&quot; /&gt;&lt;/a&gt;  &lt;a target=&quot;_blank&quot; href=&quot;https://opencollective.com/uptime-kuma&quot;&gt;&lt;img src=&quot;https://opencollective.com/uptime-kuma/total/badge.svg?label=Open%20Collective%20Backers&amp;color=brightgreen&quot; /&gt;&lt;/a&gt;
[![GitHub Sponsors](https://img.shields.io/github/sponsors/louislam?label=GitHub%20Sponsors)](https://github.com/sponsors/louislam) &lt;a href=&quot;https://weblate.kuma.pet/projects/uptime-kuma/uptime-kuma/&quot;&gt;
&lt;img src=&quot;https://weblate.kuma.pet/widgets/uptime-kuma/-/svg-badge.svg&quot; alt=&quot;Translation status&quot; /&gt;
&lt;/a&gt;

&lt;img src=&quot;https://user-images.githubusercontent.com/1336778/212262296-e6205815-ad62-488c-83ec-a5b0d0689f7c.jpg&quot; width=&quot;700&quot; alt=&quot;&quot; /&gt;

## ü•î Live Demo

Try it!

Demo Server (Location: Frankfurt - Germany): https://demo.kuma.pet/start-demo

It is a temporary live demo, all data will be deleted after 10 minutes. Sponsored by [Uptime Kuma Sponsors](https://github.com/louislam/uptime-kuma#%EF%B8%8F-sponsors).

## ‚≠ê Features

- Monitoring uptime for HTTP(s) / TCP / HTTP(s) Keyword / HTTP(s) Json Query / Ping / DNS Record / Push / Steam Game Server / Docker Containers
- Fancy, Reactive, Fast UI/UX
- Notifications via Telegram, Discord, Gotify, Slack, Pushover, Email (SMTP), and [90+ notification services, click here for the full list](https://github.com/louislam/uptime-kuma/tree/master/src/components/notifications)
- 20-second intervals
- [Multi Languages](https://github.com/louislam/uptime-kuma/tree/master/src/lang)
- Multiple status pages
- Map status pages to specific domains
- Ping chart
- Certificate info
- Proxy support
- 2FA support

## üîß How to Install

### üê≥ Docker

```bash
docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
```

Uptime Kuma is now running on &lt;http://0.0.0.0:3001&gt;.

&gt; [!WARNING]
&gt; File Systems like **NFS** (Network File System) are **NOT** supported. Please map to a local directory or volume.

&gt; [!NOTE]
&gt; If you want to limit exposure to localhost (without exposing port for other users or to use a [reverse proxy](https://github.com/louislam/uptime-kuma/wiki/Reverse-Proxy)), you can expose the port like this:
&gt; 
&gt; ```bash
&gt; docker run -d --restart=always -p 127.0.0.1:3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
&gt; ```

### üí™üèª Non-Docker

Requirements:

- Platform
  - ‚úÖ Major Linux distros such as Debian, Ubuntu, CentOS, Fedora and ArchLinux etc.
  - ‚úÖ Windows 10 (x64), Windows Server 2012 R2 (x64) or higher
  - ‚ùå FreeBSD / OpenBSD / NetBSD
  - ‚ùå Replit / Heroku
- [Node.js](https://nodejs.org/en/download/) 18 / 20.4
- [npm](https://docs.npmjs.com/cli/) 9
- [Git](https://git-scm.com/downloads)
- [pm2](https://pm2.keymetrics.io/) - For running Uptime Kuma in the background

```bash
git clone https://github.com/louislam/uptime-kuma.git
cd uptime-kuma
npm run setup

# Option 1. Try it
node server/server.js

# (Recommended) Option 2. Run in the background using PM2
# Install PM2 if you don&#039;t have it:
npm install pm2 -g &amp;&amp; pm2 install pm2-logrotate

# Start Server
pm2 start server/server.js --name uptime-kuma
```

Uptime Kuma is now running on http://localhost:3001

More useful PM2 Commands

```bash
# If you want to see the current console output
pm2 monit

# If you want to add it to startup
pm2 save &amp;&amp; pm2 startup
```

### Advanced Installation

If you need more options or need to browse via a reverse proxy, please read:

https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install

## üÜô How to Update

Please read:

https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update

## üÜï What&#039;s Next?

I will assign requests/issues to the next milestone.

https://github.com/louislam/uptime-kuma/milestones

## ‚ù§Ô∏è Sponsors

Thank you so much! (GitHub Sponsors will be updated manually. OpenCollective sponsors will be updated automatically, the list will be cached by GitHub though. It may need some time to be updated)

&lt;img src=&quot;https://uptime.kuma.pet/sponsors?v=6&quot; alt /&gt;

## üñº More Screenshots

Light Mode:

&lt;img src=&quot;https://uptime.kuma.pet/img/light.jpg&quot; width=&quot;512&quot; alt=&quot;&quot; /&gt;

Status Page:

&lt;img src=&quot;https://user-images.githubusercontent.com/1336778/134628766-a3fe0981-0926-4285-ab46-891a21c3e4cb.png&quot; width=&quot;512&quot; alt=&quot;&quot; /&gt;

Settings Page:

&lt;img src=&quot;https://louislam.net/uptimekuma/2.jpg&quot; width=&quot;400&quot; alt=&quot;&quot; /&gt;

Telegram Notification Sample:

&lt;img src=&quot;https://louislam.net/uptimekuma/3.jpg&quot; width=&quot;400&quot; alt=&quot;&quot; /&gt;

## Motivation

- I was looking for a self-hosted monitoring tool like &quot;Uptime Robot&quot;, but it is hard to find a suitable one. One of the closest ones is statping. Unfortunately, it is not stable and no longer maintained.
- Wanted to build a fancy UI.
- Learn Vue 3 and vite.js.
- Show the power of Bootstrap 5.
- Try to use WebSocket with SPA instead of a REST API.
- Deploy my first Docker image to Docker Hub.

If you love this project, please consider giving it a ‚≠ê.

## üó£Ô∏è Discussion / Ask for Help

‚ö†Ô∏è For any general or technical questions, please don&#039;t send me an email, as I am unable to provide support in that manner. I will not respond if you ask questions there.

I recommend using Google, GitHub Issues, or Uptime Kuma&#039;s subreddit for finding answers to your question. If you cannot find the information you need, feel free to ask:

- [GitHub Issues](https://github.com/louislam/uptime-kuma/issues)
- [Subreddit (r/UptimeKuma)](https://www.reddit.com/r/UptimeKuma/)

My Reddit account: [u/louislamlam](https://reddit.com/u/louislamlam)
You can mention me if you ask a question on the subreddit.

## Contributions

### Create Pull Requests

We DO NOT accept all types of pull requests and do not want to waste your time. Please be sure that you have read and follow pull request rules:
[CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma](https://github.com/louislam/uptime-kuma/blob/master/CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma)

### Test Pull Requests

There are a lot of pull requests right now, but I don&#039;t have time to test them all.

If you want to help, you can check this:
https://github.com/louislam/uptime-kuma/wiki/Test-Pull-Requests

### Test Beta Version

Check out the latest beta release here: https://github.com/louislam/uptime-kuma/releases

### Bug Reports / Feature Requests

If you want to report a bug or request a new feature, feel free to open a [new issue](https://github.com/louislam/uptime-kuma/issues).

### Translations

If you want to translate Uptime Kuma into your language, please visit [Weblate Readme](https://github.com/louislam/uptime-kuma/blob/master/src/lang/README.md).

### Spelling &amp; Grammar

Feel free to correct the grammar in the documentation or code.
My mother language is not English and my grammar is not that great.


</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[chartjs/Chart.js]]></title>
            <link>https://github.com/chartjs/Chart.js</link>
            <guid>https://github.com/chartjs/Chart.js</guid>
            <pubDate>Sat, 31 May 2025 00:04:47 GMT</pubDate>
            <description><![CDATA[Simple HTML5 Charts using the <canvas> tag]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/chartjs/Chart.js">chartjs/Chart.js</a></h1>
            <p>Simple HTML5 Charts using the <canvas> tag</p>
            <p>Language: JavaScript</p>
            <p>Stars: 65,973</p>
            <p>Forks: 11,949</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.chartjs.org/&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://www.chartjs.org/media/logo-title.svg&quot; alt=&quot;https://www.chartjs.org/&quot;&gt;&lt;br/&gt;
  &lt;/a&gt;
    Simple yet flexible JavaScript charting for designers &amp; developers
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://www.chartjs.org/docs/latest/getting-started/installation.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/chartjs/Chart.js.svg?style=flat-square&amp;maxAge=600&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/chartjs/Chart.js/actions?query=workflow%3ACI+branch%3Amaster&quot;&gt;&lt;img alt=&quot;GitHub Workflow Status&quot; src=&quot;https://img.shields.io/github/actions/workflow/status/chartjs/Chart.js/ci.yml?branch=master&amp;style=flat-square&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://coveralls.io/github/chartjs/Chart.js?branch=master&quot;&gt;&lt;img src=&quot;https://img.shields.io/coveralls/chartjs/Chart.js.svg?style=flat-square&amp;maxAge=600&quot; alt=&quot;Coverage&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/chartjs/awesome&quot;&gt;&lt;img src=&quot;https://awesome.re/badge-flat2.svg&quot; alt=&quot;Awesome&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://discord.gg/HxEguTK6av&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/discord-chartjs-blue?style=flat-square&amp;maxAge=3600&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

## Documentation

All the links point to the new version 4 of the lib.

* [Introduction](https://www.chartjs.org/docs/latest/)
* [Getting Started](https://www.chartjs.org/docs/latest/getting-started/index)
* [General](https://www.chartjs.org/docs/latest/general/data-structures)
* [Configuration](https://www.chartjs.org/docs/latest/configuration/index)
* [Charts](https://www.chartjs.org/docs/latest/charts/line)
* [Axes](https://www.chartjs.org/docs/latest/axes/index)
* [Developers](https://www.chartjs.org/docs/latest/developers/index)
* [Popular Extensions](https://github.com/chartjs/awesome)
* [Samples](https://www.chartjs.org/samples/)

In case you are looking for an older version of the docs, you will have to specify the specific version in the url like this: [https://www.chartjs.org/docs/2.9.4/](https://www.chartjs.org/docs/2.9.4/)

## Contributing

Instructions on building and testing Chart.js can be found in [the documentation](https://www.chartjs.org/docs/master/developers/contributing.html#building-and-testing). Before submitting an issue or a pull request, please take a moment to look over the [contributing guidelines](https://www.chartjs.org/docs/master/developers/contributing) first. For support, please post questions on [Stack Overflow](https://stackoverflow.com/questions/tagged/chart.js) with the `chart.js` tag.

## License

Chart.js is available under the [MIT license](LICENSE.md).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[ToolJet/ToolJet]]></title>
            <link>https://github.com/ToolJet/ToolJet</link>
            <guid>https://github.com/ToolJet/ToolJet</guid>
            <pubDate>Sat, 31 May 2025 00:04:46 GMT</pubDate>
            <description><![CDATA[Low-code platform for building business applications. Connect to databases, cloud storages, GraphQL, API endpoints, Airtable, Google sheets, OpenAI, etc and build apps using drag and drop application builder. Built using JavaScript/TypeScript. üöÄ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ToolJet/ToolJet">ToolJet/ToolJet</a></h1>
            <p>Low-code platform for building business applications. Connect to databases, cloud storages, GraphQL, API endpoints, Airtable, Google sheets, OpenAI, etc and build apps using drag and drop application builder. Built using JavaScript/TypeScript. üöÄ</p>
            <p>Language: JavaScript</p>
            <p>Stars: 35,763</p>
            <p>Forks: 4,628</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre>ToolJet is an **open-source low-code framework** to build and deploy internal tools with minimal engineering effort. ToolJet&#039;s drag-and-drop frontend builder allows you to create complex, responsive frontends within minutes. Additionally, you can integrate various data sources, including databases like PostgreSQL, MongoDB, and Elasticsearch; API endpoints with OpenAPI spec and OAuth2 support; SaaS tools such as Stripe, Slack, Google Sheets, Airtable, and Notion; as well as object storage services like S3, GCS, and Minio, to fetch and write data.

 :star: If you find ToolJet useful, please consider giving us a star on GitHub! Your support helps us continue to innovate and deliver exciting features.

![Docker Cloud Build Status](https://img.shields.io/docker/cloud/build/tooljet/tooljet-ce)
![Number of GitHub contributors](https://img.shields.io/github/contributors/tooljet/tooljet)
[![Number of GitHub issues that are open](https://img.shields.io/github/issues/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet/issues)
[![Number of GitHub stars](https://img.shields.io/github/stars/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet/stargazers)
![Number of GitHub closed issues](https://img.shields.io/github/issues-closed/tooljet/tooljet)
![Number of GitHub pull requests that are open](https://img.shields.io/github/issues-pr-raw/tooljet/tooljet)
![GitHub release; latest by date](https://img.shields.io/github/v/release/tooljet/tooljet)
![GitHub commit activity](https://img.shields.io/github/commit-activity/m/tooljet/tooljet)
[![GitHub license which is AGPL license](https://img.shields.io/github/license/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet)
[![Follow us on X, formerly Twitter](https://img.shields.io/twitter/follow/ToolJet?style=social)](https://twitter.com/ToolJet)

&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://user-images.githubusercontent.com/7828962/211444352-4d6d2e4a-13c9-4980-9e16-4aed4af9811b.png&quot; alt=&quot;Tooljet dashboard showing inventory and orders&quot;/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://github.com/ToolJet/ToolJet/assets/25361949/0e711f3a-edb7-496b-8833-107de3826933&quot;/&gt;
&lt;/p&gt;

## All features

- **Visual App Builder:** 45+ built-in responsive components, including Tables, Charts, Lists, Forms, and Progress Bars.
- **ToolJet Database:** Built-in no-code database.
- **Multi-Page:** Build an application with multiple pages.
- **Multiplayer editing:** Allows simultaneous app building by multiple developers.
- **50+ data sources:** Integrate with external databases, cloud storage, and APIs.
- **Desktop &amp; mobile:** Customize layout widths to fit various screen sizes.
- **Self-host:** Supports Docker, Kubernetes, AWS EC2, Google Cloud Run, and more.
- **Collaborate:** Add comments anywhere on the canvas and tag your team members.
- **Extend with plugins:** Use our [command-line tool](https://www.npmjs.com/package/@tooljet/cli) to easily bootstrap new connectors.
- **Version control:** Manage multiple application versions with a structured release cycle.
- **Run JS &amp; Python code:** Execute custom JavaScript and Python snippets.
- **Granular access control:** Set permissions at both group and app levels.
- **Low-code:** Use JS code almost anywhere within the builder, such as setting text color based on status with 
`status === &#039;success&#039; ? &#039;green&#039; : &#039;red&#039;`.
- **No-code query editors:** Query Editors are available for all supported data sources.
- **Join and transform data:** Transform query results using JavaScript or Python code.
- **Secure:** All the credentials are securely encrypted using `aes-256-gcm`.
- **Data Privacy:** ToolJet serves solely as a proxy and does not store data.
- **SSO:** Supports multiple Single Sign-On providers.

&lt;hr&gt;

## Quickstart
The easiest way to get started with ToolJet is by creating a [ToolJet Cloud](https://tooljet.ai) account. ToolJet Cloud offers a hosted solution of ToolJet. If you want to self-host ToolJet, kindly proceed to [deployment documentation](https://docs.tooljet.ai/docs/setup/).

### Try using Docker
Want to give ToolJet a quick spin on your local machine? You can run the following command from your terminal to have ToolJet up and running right away.


```bash
docker run \
  --name tooljet \
  --restart unless-stopped \
  -p 80:80 \
  --platform linux/amd64 \
  -v tooljet_data:/var/lib/postgresql/13/main \
  tooljet/try:ee-lts-latest
```

*For users upgrading their ToolJet version, we recommend choosing the LTS version over the latest version. The LTS version ensures stability with production bug fixes, security patches, and performance enhancements.*

## Tutorials and examples

[Time Tracker Application](https://docs.tooljet.ai/docs/#quickstart-guide)&lt;br&gt;
[Build your own CMS using low-code](https://blog.tooljet.ai/build-cms-using-lowcode-and-mongodb/)&lt;br&gt;
[AWS S3 Browser](https://blog.tooljet.ai/build-an-aws-s3-broswer-with-tooljet/)&lt;br&gt;

## Documentation
Documentation is available at https://docs.tooljet.ai.

- [Getting Started](https://docs.tooljet.ai)&lt;br&gt;
- [Data source Reference](https://docs.tooljet.ai/docs/data-sources/airtable/)&lt;br&gt;
- [Component Reference](https://docs.tooljet.ai/docs/widgets/button)

## Self-hosted
You can use ToolJet Cloud for a fully managed solution. If you want to self-host ToolJet, we have guides on deploying ToolJet on Kubernetes, AWS EC2, Docker, and more.

| Provider  | Documentation |
| :------------- | :------------- |
| Digital Ocean | [Link](https://docs.tooljet.ai/docs/setup/digitalocean)  |
| Docker  | [Link](https://docs.tooljet.ai/docs/setup/docker)   |
| AWS EC2 | [Link](https://docs.tooljet.ai/docs/setup/ec2)  |
| AWS ECS | [Link](https://docs.tooljet.ai/docs/setup/ecs)   |
| OpenShift | [Link](https://docs.tooljet.ai/docs/setup/openshift)   |
| Helm | [Link](https://docs.tooljet.ai/docs/setup/helm)   |
| AWS EKS (Kubernetes) | [Link](https://docs.tooljet.ai/docs/setup/kubernetes)   |
| GCP GKE (Kubernetes) | [Link](https://docs.tooljet.ai/docs/setup/kubernetes-gke)   |
| Azure AKS (Kubernetes) | [Link](https://docs.tooljet.ai/docs/setup/kubernetes-aks)   |
| Azure Container | [Link](https://docs.tooljet.ai/docs/setup/azure-container)   |
| Google Cloud Run  | [Link](https://docs.tooljet.ai/docs/setup/google-cloud-run)   |
| Deploying ToolJet client  | [Link](https://docs.tooljet.ai/docs/setup/client)   |
| Deploying ToolJet on a Subpath  | [Link](https://docs.tooljet.ai/docs/setup/tooljet-subpath/)   |

## Marketplace 
ToolJet can now be found on both AWS and Azure Marketplaces, making it simpler than ever to access and deploy our app-building platform.

Find ToolJet on AWS Marketplace [here](https://aws.amazon.com/marketplace/pp/prodview-fxjto27jkpqfg?sr=0-1&amp;ref_=beagle&amp;applicationId=AWSMPContessa) and explore seamless integration on Azure Marketplace [here](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/tooljetsolutioninc1679496832216.tooljet?tab=Overview).

## Community support
For general help using ToolJet, please refer to the official [documentation](https://docs.tooljet.ai/docs/). For additional help, you can use one of these channels to ask a question:

- [Slack](https://tooljet.ai/slack) - Discussions with the community and the team.
- [GitHub](https://github.com/ToolJet/ToolJet/issues) - For bug reports and feature requests.
- [ùïè (Twitter)](https://twitter.com/ToolJet) - Get the product updates quickly.

## Roadmap
Check out our [roadmap](https://github.com/orgs/ToolJet/projects/15) to stay updated on recently released features and learn about what&#039;s coming next.

## Branching model
We use the git-flow branching model. The base branch is `develop`. If you are looking for a stable version, please use the main branch or tags labeled as v1.x.x.

## Contributing
Kindly read our [Contributing Guide](CONTRIBUTING.md) to familiarize yourself with ToolJet&#039;s development process, how to suggest bug fixes and improvements, and the steps for building and testing your changes. &lt;br&gt;

## Contributors
&lt;a href=&quot;https://github.com/tooljet/tooljet/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=tooljet/tooljet&amp;max=400&amp;columns=20&quot; /&gt;
  &lt;img src=&quot;https://us-central1-tooljet-hub.cloudfunctions.net/github&quot; width=&quot;0&quot; height=&quot;0&quot; /&gt;
&lt;/a&gt;

## License
ToolJet ¬© 2023, ToolJet Solutions Inc - Released under the GNU Affero General Public License v3.0.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[SuperSimpleDev/javascript-course]]></title>
            <link>https://github.com/SuperSimpleDev/javascript-course</link>
            <guid>https://github.com/SuperSimpleDev/javascript-course</guid>
            <pubDate>Sat, 31 May 2025 00:04:45 GMT</pubDate>
            <description><![CDATA[Watch the course: https://youtu.be/EerdGm-ehJQ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/SuperSimpleDev/javascript-course">SuperSimpleDev/javascript-course</a></h1>
            <p>Watch the course: https://youtu.be/EerdGm-ehJQ</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,042</p>
            <p>Forks: 770</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre>## JavaScript Course Materials
üìö Watch the course here: https://youtu.be/EerdGm-ehJQ

1. [Exercise solutions](1-exercise-solutions)
2. [Copy of the code](2-copy-of-code) at the end of each lesson

üéì A certificate of completion is available for this course here: https://courses.supersimple.dev/courses/javascript</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[zeon-studio/hugoplate]]></title>
            <link>https://github.com/zeon-studio/hugoplate</link>
            <guid>https://github.com/zeon-studio/hugoplate</guid>
            <pubDate>Sat, 31 May 2025 00:04:44 GMT</pubDate>
            <description><![CDATA[Hugoplate is a free starter template built with Hugo and Tailwind CSS v4.0 that will save you hours of work.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/zeon-studio/hugoplate">zeon-studio/hugoplate</a></h1>
            <p>Hugoplate is a free starter template built with Hugo and Tailwind CSS v4.0 that will save you hours of work.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,239</p>
            <p>Forks: 340</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WebKit/WebKit]]></title>
            <link>https://github.com/WebKit/WebKit</link>
            <guid>https://github.com/WebKit/WebKit</guid>
            <pubDate>Sat, 31 May 2025 00:04:43 GMT</pubDate>
            <description><![CDATA[Home of the WebKit project, the browser engine used by Safari, Mail, App Store and many other applications on macOS, iOS and Linux.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WebKit/WebKit">WebKit/WebKit</a></h1>
            <p>Home of the WebKit project, the browser engine used by Safari, Mail, App Store and many other applications on macOS, iOS and Linux.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,669</p>
            <p>Forks: 1,560</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[HumanSignal/label-studio]]></title>
            <link>https://github.com/HumanSignal/label-studio</link>
            <guid>https://github.com/HumanSignal/label-studio</guid>
            <pubDate>Sat, 31 May 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[Label Studio is a multi-type data labeling and annotation tool with standardized output format]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/HumanSignal/label-studio">HumanSignal/label-studio</a></h1>
            <p>Label Studio is a multi-type data labeling and annotation tool with standardized output format</p>
            <p>Language: JavaScript</p>
            <p>Stars: 22,305</p>
            <p>Forks: 2,776</p>
            <p>Stars today: 21 stars today</p>
            <h2>README</h2><pre>&lt;img src=&quot;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/ls_github_header.png&quot;/&gt;

![GitHub](https://img.shields.io/github/license/heartexlabs/label-studio?logo=heartex) ![label-studio:build](https://github.com/heartexlabs/label-studio/workflows/label-studio:build/badge.svg) ![GitHub release](https://img.shields.io/github/v/release/heartexlabs/label-studio?include_prereleases)

[Website](https://labelstud.io/) ‚Ä¢ [Docs](https://labelstud.io/guide/) ‚Ä¢ [Twitter](https://twitter.com/heartexlabs) ‚Ä¢ [Join Slack Community &lt;img src=&quot;https://app.heartex.ai/docs/images/slack-mini.png&quot; width=&quot;18px&quot;/&gt;](https://slack.labelstudio.heartex.com/?source=github-1)


## What is Label Studio?

&lt;!-- &lt;a href=&quot;https://labelstud.io/blog/release-130.html&quot;&gt;&lt;img src=&quot;https://github.com/heartexlabs/label-studio/raw/master/docs/themes/htx/source/images/release-130/LS-Hits-v1.3.png&quot; align=&quot;right&quot; /&gt;&lt;/a&gt; --&gt;

Label Studio is an open source data labeling tool. It lets you label data types like audio, text, images, videos, and time series with a simple and straightforward UI and export to various model formats. It can be used to prepare raw data or improve existing training data to get more accurate ML models.

- [Try out Label Studio](#try-out-label-studio)
- [What you get from Label Studio](#what-you-get-from-label-studio)
- [Included templates for labeling data in Label Studio](#included-templates-for-labeling-data-in-label-studio)
- [Set up machine learning models with Label Studio](#set-up-machine-learning-models-with-Label-Studio)
- [Integrate Label Studio with your existing tools](#integrate-label-studio-with-your-existing-tools)

![Gif of Label Studio annotating different types of data](https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/annotation_examples.gif)

Have a custom dataset? You can customize Label Studio to fit your needs. Read an [introductory blog post](https://towardsdatascience.com/introducing-label-studio-a-swiss-army-knife-of-data-labeling-140c1be92881) to learn more. 

## Try out Label Studio

Install Label Studio locally, or deploy it in a cloud instance. Also you can try [Label Studio Teams](https://app.heartex.com).

- [Install locally with Docker](#install-locally-with-docker)
- [Run with Docker Compose (Label Studio + Nginx + PostgreSQL)](#run-with-docker-compose)
- [Install locally with pip](#install-locally-with-pip)
- [Install locally with Anaconda](#install-locally-with-anaconda)
- [Install for local development](#install-for-local-development)
- [Deploy in a cloud instance](#deploy-in-a-cloud-instance)

### Install locally with Docker
Official Label Studio docker image is [here](https://hub.docker.com/r/heartexlabs/label-studio) and it can be downloaded with `docker pull`. 
Run Label Studio in a Docker container and access it at `http://localhost:8080`.


```bash
docker pull heartexlabs/label-studio:latest
docker run -it -p 8080:8080 -v `pwd`/mydata:/label-studio/data heartexlabs/label-studio:latest
```
You can find all the generated assets, including SQLite3 database storage `label_studio.sqlite3` and uploaded files, in the `./mydata` directory.

#### Override default Docker install
You can override the default launch command by appending the new arguments:
```bash
docker run -it -p 8080:8080 -v `pwd`/mydata:/label-studio/data heartexlabs/label-studio:latest label-studio --log-level DEBUG
```

#### Build a local image with Docker
If you want to build a local image, run:
```bash
docker build -t heartexlabs/label-studio:latest .
```

### Run with Docker Compose
Docker Compose script provides production-ready stack consisting of the following components:

- Label Studio
- [Nginx](https://www.nginx.com/) - proxy web server used to load various static data, including uploaded audio, images, etc.
- [PostgreSQL](https://www.postgresql.org/) - production-ready database that replaces less performant SQLite3.

To start using the app from `http://localhost` run this command:
```bash
docker-compose up
```

### Install locally with pip

```bash
# Requires Python &gt;=3.7 &lt;=3.9
pip install label-studio

# Start the server at http://localhost:8080
label-studio
```

### Install locally with Anaconda

```bash
conda create --name label-studio
conda activate label-studio
pip install label-studio
```

### Install for local development

You can run the latest Label Studio version locally without installing the package with pip. 

```bash
# Install all package dependencies
pip install -e .
# Run database migrations
python label_studio/manage.py migrate
# Start the server in development mode at http://localhost:8080
python label_studio/manage.py runserver
```

### Deploy in a cloud instance

You can deploy Label Studio with one click in Heroku, Microsoft Azure, or Google Cloud Platform: 

[&lt;img src=&quot;https://www.herokucdn.com/deploy/button.svg&quot; height=&quot;30px&quot;&gt;](https://heroku.com/deploy?template=https://github.com/heartexlabs/label-studio/tree/heroku-persistent-pg)
[&lt;img src=&quot;https://aka.ms/deploytoazurebutton&quot; height=&quot;30px&quot;&gt;](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2Fheartexlabs%2Flabel-studio%2Fmaster%2Fazuredeploy.json)
[&lt;img src=&quot;https://deploy.cloud.run/button.svg&quot; height=&quot;30px&quot;&gt;](https://deploy.cloud.run)


#### Apply frontend changes

The frontend part of Label Studio app lies in the `frontend/` folder and written in React JSX. In case you&#039;ve made some changes there, the following commands should be run before building / starting the instance:

```
cd label_studio/frontend/
npm ci
npx webpack
cd ../..
python label_studio/manage.py collectstatic --no-input
```

### Troubleshoot installation
If you see any errors during installation, try to rerun the installation

```bash
pip install --ignore-installed label-studio
```

#### Install dependencies on Windows 
To run Label Studio on Windows, download and install the following wheel packages from [Gohlke builds](https://www.lfd.uci.edu/~gohlke/pythonlibs) to ensure you&#039;re using the correct version of Python:
- [lxml](https://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml)

```bash
# Upgrade pip 
pip install -U pip

# If you&#039;re running Win64 with Python 3.8, install the packages downloaded from Gohlke:
pip install lxml‚Äë4.5.0‚Äëcp38‚Äëcp38‚Äëwin_amd64.whl

# Install label studio
pip install label-studio
```

#### Run test suite
```bash
pip install -r deploy/requirements-test.txt
cd label_studio

# postgres (assumes default postgres user,db,pass)
DJANGO_DB=default DJANGO_SETTINGS_MODULE=core.settings.label_studio python -m pytest -vv -n auto

# sqlite3
DJANGO_DB=sqlite DJANGO_SETTINGS_MODULE=core.settings.label_studio python -m pytest -vv -n auto
```


## What you get from Label Studio

![Screenshot of Label Studio data manager grid view with images](https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/labelstudio-ui.gif)

- **Multi-user labeling** sign up and login, when you create an annotation it&#039;s tied to your account.
- **Multiple projects** to work on all your datasets in one instance.
- **Streamlined design** helps you focus on your task, not how to use the software.
- **Configurable label formats** let you customize the visual interface to meet your specific labeling needs.
- **Support for multiple data types** including images, audio, text, HTML, time-series, and video. 
- **Import from files or from cloud storage** in Amazon AWS S3, Google Cloud Storage, or JSON, CSV, TSV, RAR, and ZIP archives. 
- **Integration with machine learning models** so that you can visualize and compare predictions from different models and perform pre-labeling.
- **Embed it in your data pipeline** REST API makes it easy to make it a part of your pipeline

## Included templates for labeling data in Label Studio 

Label Studio includes a variety of templates to help you label your data, or you can create your own using specifically designed configuration language. The most common templates and use cases for labeling include the following cases:

&lt;img src=&quot;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/templates-categories.jpg&quot; /&gt;

## Set up machine learning models with Label Studio

Connect your favorite machine learning model using the Label Studio Machine Learning SDK. Follow these steps:

1. Start your own machine learning backend server. See [more detailed instructions](https://github.com/heartexlabs/label-studio-ml-backend).
2. Connect Label Studio to the server on the model page found in project settings.

This lets you:

- **Pre-label** your data using model predictions. 
- Do **online learning** and retrain your model while new annotations are being created. 
- Do **active learning** by labeling only the most complex examples in your data.

## Integrate Label Studio with your existing tools

You can use Label Studio as an independent part of your machine learning workflow or integrate the frontend or backend into your existing tools.  

* Use the [Label Studio Frontend](https://github.com/heartexlabs/label-studio-frontend) as a separate React library. See more in the [Frontend Library documentation](https://labelstud.io/guide/frontend.html). 

## Ecosystem

| Project | Description |
|-|-|
| label-studio | Server, distributed as a pip package |
| [label-studio-frontend](https://github.com/heartexlabs/label-studio-frontend) | React and JavaScript frontend and can run standalone in a web browser or be embedded into your application. |  
| [data-manager](https://github.com/heartexlabs/dm2) | React and JavaScript frontend for managing data. Includes the Label Studio Frontend. Relies on the label-studio server or a custom backend with the expected API methods. | 
| [label-studio-converter](https://github.com/heartexlabs/label-studio-converter) | Encode labels in the format of your favorite machine learning library | 
| [label-studio-transformers](https://github.com/heartexlabs/label-studio-transformers) | Transformers library connected and configured for use with Label Studio |


## Roadmap

Want to use **The Coolest Feature X** but Label Studio doesn&#039;t support it? Check out [our public roadmap](roadmap.md)!

## Citation

```tex
@misc{Label Studio,
  title={{Label Studio}: Data labeling software},
  url={https://github.com/heartexlabs/label-studio},
  note={Open source software available from https://github.com/heartexlabs/label-studio},
  author={
    Maxim Tkachenko and
    Mikhail Malyuk and
    Andrey Holmanyuk and
    Nikolai Liubimov},
  year={2020-2022},
}
```

## License

This software is licensed under the [Apache 2.0 LICENSE](/LICENSE) ¬© [Heartex](https://www.heartex.ai/). 2020-2021

&lt;img src=&quot;https://github.com/heartexlabs/label-studio/blob/master/images/opossum_looking.png?raw=true&quot; title=&quot;Hey everyone!&quot; height=&quot;140&quot; width=&quot;140&quot; /&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[GoogleChrome/web-vitals]]></title>
            <link>https://github.com/GoogleChrome/web-vitals</link>
            <guid>https://github.com/GoogleChrome/web-vitals</guid>
            <pubDate>Sat, 31 May 2025 00:04:41 GMT</pubDate>
            <description><![CDATA[Essential metrics for a healthy site.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/GoogleChrome/web-vitals">GoogleChrome/web-vitals</a></h1>
            <p>Essential metrics for a healthy site.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,016</p>
            <p>Forks: 460</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre># `web-vitals`

- [Overview](#overview)
- [Install and load the library](#installation)
  - [From npm](#import-web-vitals-from-npm)
  - [From a CDN](#load-web-vitals-from-a-cdn)
- [Usage](#usage)
  - [Basic usage](#basic-usage)
  - [Report the value on every change](#report-the-value-on-every-change)
  - [Report only the delta of changes](#report-only-the-delta-of-changes)
  - [Send the results to an analytics endpoint](#send-the-results-to-an-analytics-endpoint)
  - [Send the results to Google Analytics](#send-the-results-to-google-analytics)
  - [Send the results to Google Tag Manager](#send-the-results-to-google-tag-manager)
  - [Send attribution data](#send-attribution-data)
  - [Batch multiple reports together](#batch-multiple-reports-together)
- [Build options](#build-options)
  - [Which build is right for you?](#which-build-is-right-for-you)
- [API](#api)
  - [Types](#types)
  - [Functions](#functions)
  - [Rating Thresholds](#rating-thresholds)
  - [Attribution](#attribution)
- [Browser Support](#browser-support)
- [Limitations](#limitations)
- [Development](#development)
- [Integrations](#integrations)
- [License](#license)

## Overview

The `web-vitals` library is a tiny (~2K, brotli&#039;d), modular library for measuring all the [Web Vitals](https://web.dev/articles/vitals) metrics on real users, in a way that accurately matches how they&#039;re measured by Chrome and reported to other Google tools (e.g. [Chrome User Experience Report](https://developers.google.com/web/tools/chrome-user-experience-report), [Page Speed Insights](https://developers.google.com/speed/pagespeed/insights/), [Search Console&#039;s Speed Report](https://webmasters.googleblog.com/2019/11/search-console-speed-report.html)).

The library supports all of the [Core Web Vitals](https://web.dev/articles/vitals#core_web_vitals) as well as a number of other metrics that are useful in diagnosing [real-user](https://web.dev/articles/user-centric-performance-metrics) performance issues.

### Core Web Vitals

- [Cumulative Layout Shift (CLS)](https://web.dev/articles/cls)
- [Interaction to Next Paint (INP)](https://web.dev/articles/inp)
- [Largest Contentful Paint (LCP)](https://web.dev/articles/lcp)

### Other metrics

- [First Contentful Paint (FCP)](https://web.dev/articles/fcp)
- [Time to First Byte (TTFB)](https://web.dev/articles/ttfb)

&lt;a name=&quot;installation&quot;&gt;&lt;/a&gt;
&lt;a name=&quot;load-the-library&quot;&gt;&lt;/a&gt;

## Install and load the library

&lt;a name=&quot;import-web-vitals-from-npm&quot;&gt;&lt;/a&gt;

The `web-vitals` library uses the `buffered` flag for [PerformanceObserver](https://developer.mozilla.org/docs/Web/API/PerformanceObserver/observe), allowing it to access performance entries that occurred before the library was loaded.

This means you do not need to load this library early in order to get accurate performance data. In general, this library should be deferred until after other user-impacting code has loaded.

### From npm

You can install this library from npm by running:

```sh
npm install web-vitals
```

&gt; [!NOTE]
&gt; If you&#039;re not using npm, you can still load `web-vitals` via `&lt;script&gt;` tags from a CDN like [unpkg.com](https://unpkg.com). See the [load `web-vitals` from a CDN](#load-web-vitals-from-a-cdn) usage example below for details.

There are a few different builds of the `web-vitals` library, and how you load the library depends on which build you want to use.

For details on the difference between the builds, see &lt;a href=&quot;#which-build-is-right-for-you&quot;&gt;which build is right for you&lt;/a&gt;.

**1. The &quot;standard&quot; build**

To load the &quot;standard&quot; build, import modules from the `web-vitals` package in your application code (as you would with any npm package and node-based build tool):

```js
import {onLCP, onINP, onCLS} from &#039;web-vitals&#039;;
```

&lt;a name=&quot;attribution-build&quot;&gt;&lt;/a&gt;

**2. The &quot;attribution&quot; build**

Measuring the Web Vitals scores for your real users is a great first step toward optimizing the user experience. But if your scores aren&#039;t _good_, the next step is to understand why they&#039;re not good and work to improve them.

The &quot;attribution&quot; build helps you do that by including additional diagnostic information with each metric to help you identify the root cause of poor performance as well as prioritize the most important things to fix.

The &quot;attribution&quot; build is slightly larger than the &quot;standard&quot; build (by about 1.5K, brotli&#039;d), so while the code size is still small, it&#039;s only recommended if you&#039;re actually using these features.

To load the &quot;attribution&quot; build, change any `import` statements that reference `web-vitals` to `web-vitals/attribution`:

```diff
import {onLCP, onINP, onCLS} from &#039;web-vitals&#039;;
import {onLCP, onINP, onCLS} from &#039;web-vitals/attribution&#039;;
```

Usage for each of the imported function is identical to the standard build, but when importing from the attribution build, the [metric](#metric) objects will contain an additional [`attribution`](#attribution) property.

See [Send attribution data](#send-attribution-data) for usage examples, and the [`attribution` reference](#attribution) for details on what values are added for each metric.

&lt;a name=&quot;load-web-vitals-from-a-cdn&quot;&gt;&lt;/a&gt;

### From a CDN

The recommended way to use the `web-vitals` package is to install it from npm and integrate it into your build process. However, if you&#039;re not using npm, it&#039;s still possible to use `web-vitals` by requesting it from a CDN that serves npm package files.

The following examples show how to load `web-vitals` from [unpkg.com](https://unpkg.com/browse/web-vitals/). It is also possible to load this from [jsDelivr](https://www.jsdelivr.com/package/npm/web-vitals), and [cdnjs](https://cdnjs.com/libraries/web-vitals).

_**Important!** The [unpkg.com](https://unpkg.com), [jsDelivr](https://www.jsdelivr.com/), and [cdnjs](https://cdnjs.com) CDNs are shown here for example purposes only. `unpkg.com`, `jsDelivr`, and `cdnjs` are not affiliated with Google, and there are no guarantees that loading the library from those CDNs will continue to work in the future. Self-hosting the built files rather than loading from the CDN is better for security, reliability, and performance reasons._

**Load the &quot;standard&quot; build** _(using a module script)_

```html
&lt;!-- Append the `?module` param to load the module version of `web-vitals` --&gt;
&lt;script type=&quot;module&quot;&gt;
  import {onCLS, onINP, onLCP} from &#039;https://unpkg.com/web-vitals@5?module&#039;;

  onCLS(console.log);
  onINP(console.log);
  onLCP(console.log);
&lt;/script&gt;
```

Note: When the web-vitals code is isolated from the application code in this way, there is less need to depend on dynamic imports so this code uses a regular `import` line.

**Load the &quot;standard&quot; build** _(using a classic script)_

```html
&lt;script&gt;
  (function () {
    var script = document.createElement(&#039;script&#039;);
    script.src = &#039;https://unpkg.com/web-vitals@5/dist/web-vitals.iife.js&#039;;
    script.onload = function () {
      // When loading `web-vitals` using a classic script, all the public
      // methods can be found on the `webVitals` global namespace.
      webVitals.onCLS(console.log);
      webVitals.onINP(console.log);
      webVitals.onLCP(console.log);
    };
    document.head.appendChild(script);
  })();
&lt;/script&gt;
```

**Load the &quot;attribution&quot; build** _(using a module script)_

```html
&lt;!-- Append the `?module` param to load the module version of `web-vitals` --&gt;
&lt;script type=&quot;module&quot;&gt;
  import {
    onCLS,
    onINP,
    onLCP,
  } from &#039;https://unpkg.com/web-vitals@5/dist/web-vitals.attribution.js?module&#039;;

  onCLS(console.log);
  onINP(console.log);
  onLCP(console.log);
&lt;/script&gt;
```

**Load the &quot;attribution&quot; build** _(using a classic script)_

```html
&lt;script&gt;
  (function () {
    var script = document.createElement(&#039;script&#039;);
    script.src =
      &#039;https://unpkg.com/web-vitals@5/dist/web-vitals.attribution.iife.js&#039;;
    script.onload = function () {
      // When loading `web-vitals` using a classic script, all the public
      // methods can be found on the `webVitals` global namespace.
      webVitals.onCLS(console.log);
      webVitals.onINP(console.log);
      webVitals.onLCP(console.log);
    };
    document.head.appendChild(script);
  })();
&lt;/script&gt;
```

## Usage

### Basic usage

Each of the Web Vitals metrics is exposed as a single function that takes a `callback` function that will be called any time the metric value is available and ready to be reported.

The following example measures each of the Core Web Vitals metrics and logs the result to the console once its value is ready to report.

_(The examples below import the &quot;standard&quot; build, but they will work with the &quot;attribution&quot; build as well.)_

```js
import {onCLS, onINP, onLCP} from &#039;web-vitals&#039;;

onCLS(console.log);
onINP(console.log);
onLCP(console.log);
```

Note that some of these metrics will not report until the user has interacted with the page, switched tabs, or the page starts to unload. If you don&#039;t see the values logged to the console immediately, try reloading the page (with [preserve log](https://developer.chrome.com/docs/devtools/console/reference/#persist) enabled) or switching tabs and then switching back.

Also, in some cases a metric callback may never be called:

- INP is not reported if the user never interacts with the page.
- CLS, FCP, and LCP are not reported if the page was loaded in the background.

In other cases, a metric callback may be called more than once:

- CLS and INP should be reported any time the [page&#039;s `visibilityState` changes to hidden](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden).
- All metrics are reported again (with the above exceptions) after a page is restored from the [back/forward cache](https://web.dev/articles/bfcache).

&gt; [!WARNING]
&gt; Do not call any of the Web Vitals functions (e.g. `onCLS()`, `onINP()`, `onLCP()`) more than once per page load. Each of these functions creates a `PerformanceObserver` instance and registers event listeners for the lifetime of the page. While the overhead of calling these functions once is negligible, calling them repeatedly on the same page may eventually result in a memory leak.

### Report the value on every change

In most cases, you only want the `callback` function to be called when the metric is ready to be reported. However, it is possible to report every change (e.g. each larger layout shift as it happens) by setting `reportAllChanges` to `true` in the optional, [configuration object](#reportopts) (second parameter).

&gt; [!IMPORTANT] &gt; `reportAllChanges` only reports when the **metric changes**, not for each **input to the metric**. For example, a new layout shift that does not increase the CLS metric will not be reported even with `reportAllChanges` set to `true` because the CLS metric has not changed. Similarly, for INP, each interaction is not reported even with `reportAllChanges` set to `true`‚Äîjust when an interaction causes an increase to INP.

This can be useful when debugging, but in general using `reportAllChanges` is not needed (or recommended) for measuring these metrics in production.

```js
import {onCLS} from &#039;web-vitals&#039;;

// Logs CLS as the value changes.
onCLS(console.log, {reportAllChanges: true});
```

### Report only the delta of changes

Some analytics providers allow you to update the value of a metric, even after you&#039;ve already sent it to their servers (overwriting the previously-sent value with the same `id`).

Other analytics providers, however, do not allow this, so instead of reporting the new value, you need to report only the delta (the difference between the current value and the last-reported value). You can then compute the total value by summing all metric deltas sent with the same ID.

The following example shows how to use the `id` and `delta` properties:

```js
import {onCLS, onINP, onLCP} from &#039;web-vitals&#039;;

function logDelta({name, id, delta}) {
  console.log(`${name} matching ID ${id} changed by ${delta}`);
}

onCLS(logDelta);
onINP(logDelta);
onLCP(logDelta);
```

&gt; [!NOTE]
&gt; The first time the `callback` function is called, its `value` and `delta` properties will be the same.

In addition to using the `id` field to group multiple deltas for the same metric, it can also be used to differentiate different metrics reported on the same page. For example, after a back/forward cache restore, a new metric object is created with a new `id` (since back/forward cache restores are considered separate page visits).

### Send the results to an analytics endpoint

The following example measures each of the Core Web Vitals metrics and reports them to a hypothetical `/analytics` endpoint, as soon as each is ready to be sent.

The `sendToAnalytics()` function uses the [`navigator.sendBeacon()`](https://developer.mozilla.org/docs/Web/API/Navigator/sendBeacon) method, which is widely available across browsers, and supports sending data as the page is being unloaded.

```js
import {onCLS, onINP, onLCP} from &#039;web-vitals&#039;;

function sendToAnalytics(metric) {
  const body = JSON.stringify({
    name: metric.name,
    value: metric.value,
    id: metric.id,

    // Include additional data as needed...
  });

  // Use `navigator.sendBeacon()` to send the data, which supports
  // sending while the page is unloading.
  navigator.sendBeacon(&#039;/analytics&#039;, body);
}

onCLS(sendToAnalytics);
onINP(sendToAnalytics);
onLCP(sendToAnalytics);
```

### Send the results to Google Analytics

Google Analytics does not support reporting metric distributions in any of its built-in reports; however, if you set a unique event parameter value (in this case, the metric_id, as shown in the example below) on every metric instance that you send to Google Analytics, you can create a report yourself by first getting the data via the [Google Analytics Data API](https://developers.google.com/analytics/devguides/reporting/data/v1) or via [BigQuery export](https://support.google.com/analytics/answer/9358801) and then visualizing it any charting library you choose.

[Google Analytics 4](https://support.google.com/analytics/answer/10089681) introduces a new Event model allowing custom parameters instead of a fixed category, action, and label. It also supports non-integer values, making it easier to measure Web Vitals metrics compared to previous versions.

```js
import {onCLS, onINP, onLCP} from &#039;web-vitals&#039;;

function sendToGoogleAnalytics({name, delta, value, id}) {
  // Assumes the global `gtag()` function exists, see:
  // https://developers.google.com/analytics/devguides/collection/ga4
  gtag(&#039;event&#039;, name, {
    // Built-in params:
    value: delta, // Use `delta` so the value can be summed.
    // Custom params:
    metric_id: id, // Needed to aggregate events.
    metric_value: value, // Optional.
    metric_delta: delta, // Optional.

    // OPTIONAL: any additional params or debug info here.
    // See: https://web.dev/articles/debug-performance-in-the-field
    // metric_rating: &#039;good&#039; | &#039;needs-improvement&#039; | &#039;poor&#039;,
    // debug_info: &#039;...&#039;,
    // ...
  });
}

onCLS(sendToGoogleAnalytics);
onINP(sendToGoogleAnalytics);
onLCP(sendToGoogleAnalytics);
```

For details on how to query this data in [BigQuery](https://cloud.google.com/bigquery), or visualise it in [Looker Studio](https://lookerstudio.google.com/), see [Measure and debug performance with Google Analytics 4 and BigQuery](https://web.dev/articles/vitals-ga4).

### Send the results to Google Tag Manager

While `web-vitals` can be called directly from Google Tag Manager, using a pre-defined custom template makes this considerably easier. Some recommended templates include:

- [Core Web Vitals](https://tagmanager.google.com/gallery/#/owners/gtm-templates-simo-ahava/templates/core-web-vitals) by [Simo Ahava](https://www.simoahava.com/). See [Track Core Web Vitals in GA4 with Google Tag Manager](https://www.simoahava.com/analytics/track-core-web-vitals-in-ga4-with-google-tag-manager/) for usage and installation instructions.
- [Web Vitals Template for Google Tag Manager](https://github.com/google-marketing-solutions/web-vitals-gtm-template) by The Google Marketing Solutions team. See the [README](https://github.com/google-marketing-solutions/web-vitals-gtm-template?tab=readme-ov-file#web-vitals-template-for-google-tag-manager) for usage and installation instructions.

### Send attribution data

When using the [attribution build](#attribution-build), you can send additional data to help you debug _why_ the metric values are they way they are.

This example sends an additional `debug_target` param to Google Analytics, corresponding to the element most associated with each metric.

```js
import {onCLS, onINP, onLCP} from &#039;web-vitals/attribution&#039;;

function sendToGoogleAnalytics({name, delta, value, id, attribution}) {
  const eventParams = {
    // Built-in params:
    value: delta, // Use `delta` so the value can be summed.
    // Custom params:
    metric_id: id, // Needed to aggregate events.
    metric_value: value, // Optional.
    metric_delta: delta, // Optional.
  };

  switch (name) {
    case &#039;CLS&#039;:
      eventParams.debug_target = attribution.largestShiftTarget;
      break;
    case &#039;INP&#039;:
      eventParams.debug_target = attribution.interactionTarget;
      break;
    case &#039;LCP&#039;:
      eventParams.debug_target = attribution.element;
      break;
  }

  // Assumes the global `gtag()` function exists, see:
  // https://developers.google.com/analytics/devguides/collection/ga4
  gtag(&#039;event&#039;, name, eventParams);
}

onCLS(sendToGoogleAnalytics);
onINP(sendToGoogleAnalytics);
onLCP(sendToGoogleAnalytics);
```

&gt; [!NOTE]
&gt; This example relies on custom [event parameters](https://support.google.com/analytics/answer/11396839) in Google Analytics 4.

See [Debug performance in the field](https://web.dev/articles/debug-performance-in-the-field) for more information and examples.

### Batch multiple reports together

Rather than reporting each individual Web Vitals metric separately, you can minimize your network usage by batching multiple metric reports together in a single network request.

However, since not all Web Vitals metrics become available at the same time, and since not all metrics are reported on every page, you cannot simply defer reporting until all metrics are available.

Instead, you should keep a queue of all metrics that were reported and flush the queue whenever the page is backgrounded or unloaded:

```js
import {onCLS, onINP, onLCP} from &#039;web-vitals&#039;;

const queue = new Set();
function addToQueue(metric) {
  queue.add(metric);
}

function flushQueue() {
  if (queue.size &gt; 0) {
    // Replace with whatever serialization method you prefer.
    // Note: JSON.stringify will likely include more data than you need.
    const body = JSON.stringify([...queue]);

    // Use `navigator.sendBeacon()` to send the data, which supports
    // sending while the page is unloading.
    navigator.sendBeacon(&#039;/analytics&#039;, body);

    queue.clear();
  }
}

onCLS(addToQueue);
onINP(addToQueue);
onLCP(addToQueue);

// Report all available metrics whenever the page is backgrounded or unloaded.
addEventListener(&#039;visibilitychange&#039;, () =&gt; {
  if (document.visibilityState === &#039;hidden&#039;) {
    flushQueue();
  }
});
```

&gt; [!NOTE]
&gt; See [the Page Lifecycle guide](https://developers.google.com/web/updates/2018/07/page-lifecycle-api#legacy-lifecycle-apis-to-avoid) for an explanation of why `visibilitychange` is recommended over events like `beforeunload` and `unload`.

&lt;a name=&quot;bundle-versions&quot;&gt;&lt;/a&gt;

## Build options

The `web-vitals` package includes both &quot;standard&quot; and &quot;attribution&quot; builds, as well as different formats of each to allow developers to choose the format that best meets their needs or integrates with their architecture.

The following table lists all the builds distributed with the `web-vitals` package on npm.

&lt;table&gt;
  &lt;tr&gt;
    &lt;td width=&quot;35%&quot;&gt;
      &lt;strong&gt;Filename&lt;/strong&gt; &lt;em&gt;(all within &lt;code&gt;dist/*&lt;/code&gt;)&lt;/em&gt;
    &lt;/td&gt;
    &lt;td&gt;&lt;strong&gt;Export&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/td&gt;


... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>