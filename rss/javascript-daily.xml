<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Sat, 20 Sep 2025 00:04:36 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[WebGoat/WebGoat]]></title>
            <link>https://github.com/WebGoat/WebGoat</link>
            <guid>https://github.com/WebGoat/WebGoat</guid>
            <pubDate>Sat, 20 Sep 2025 00:04:36 GMT</pubDate>
            <description><![CDATA[WebGoat is a deliberately insecure application]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WebGoat/WebGoat">WebGoat/WebGoat</a></h1>
            <p>WebGoat is a deliberately insecure application</p>
            <p>Language: JavaScript</p>
            <p>Stars: 7,884</p>
            <p>Forks: 6,721</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre># WebGoat: A deliberately insecure Web Application

[![Build](https://github.com/WebGoat/WebGoat/actions/workflows/build.yml/badge.svg?branch=develop)](https://github.com/WebGoat/WebGoat/actions/workflows/build.yml)
[![java-jdk](https://img.shields.io/badge/java%20jdk-23-green.svg)](https://jdk.java.net/)
[![OWASP Labs](https://img.shields.io/badge/OWASP-Lab%20project-f7b73c.svg)](https://owasp.org/projects/)
[![GitHub release](https://img.shields.io/github/release/WebGoat/WebGoat.svg)](https://github.com/WebGoat/WebGoat/releases/latest)
[![Gitter](https://badges.gitter.im/OWASPWebGoat/community.svg)](https://gitter.im/OWASPWebGoat/community?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge)
[![Discussions](https://img.shields.io/github/discussions/WebGoat/WebGoat)](https://github.com/WebGoat/WebGoat/discussions)
[![Conventional Commits](https://img.shields.io/badge/Conventional%20Commits-1.0.0-%23FE5196?logo=conventionalcommits&amp;logoColor=white)](https://conventionalcommits.org)

# Introduction

WebGoat is a deliberately insecure web application maintained by [OWASP](http://www.owasp.org/) designed to teach web
application security lessons.

This program is a demonstration of common server-side application flaws. The
exercises are intended to be used by people to learn about application security and
penetration testing techniques.

**WARNING 1:** *While running this program your machine will be extremely
vulnerable to attack. You should disconnect from the Internet while using
this program.*  WebGoat&#039;s default configuration binds to localhost to minimize
the exposure.

**WARNING 2:** *This program is for educational purposes only. If you attempt
these techniques without authorization, you are very likely to get caught. If
you are caught engaging in unauthorized hacking, most companies will fire you.
Claiming that you were doing security research will not work as that is the
first thing that all hackers claim.*

![WebGoat](docs/images/webgoat.png)

# Installation instructions:

For more details check [the Contribution guide](/CONTRIBUTING.md)

## 1. Run using Docker

Already have a browser and ZAP and/or Burp installed on your machine in this case you can run the WebGoat image directly using Docker.

Every release is also published on [DockerHub](https://hub.docker.com/r/webgoat/webgoat).

```shell
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat
```

For some lessons you need the container run in the same timezone. For this you can set the TZ environment variable.
E.g.

```shell
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 -e TZ=America/Boise webgoat/webgoat
```

If you want to use OWASP ZAP or another proxy, you can no longer use 127.0.0.1 or localhost. but
you can use custom host entries. For example:

```shell
127.0.0.1 www.webgoat.local www.webwolf.local
```

Then you can run the container with:

```shell
docker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 -e WEBGOAT_HOST=www.webgoat.local -e WEBWOLF_HOST=www.webwolf.local -e TZ=America/Boise webgoat/webgoat
```

Then visit http://www.webgoat.local:8080/WebGoat/ and http://www.webwolf.local:9090/WebWolf/

## 2. Run using Docker with complete Linux Desktop

Instead of installing tools locally we have a complete Docker image based on running a desktop in your browser. This way you only have to run a Docker image which will give you the best user experience.

```shell
docker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop
```

## 3. Standalone

Download the latest WebGoat release from [https://github.com/WebGoat/WebGoat/releases](https://github.com/WebGoat/WebGoat/releases)

```shell
export TZ=Europe/Amsterdam # or your timezone
java -Dfile.encoding=UTF-8 -jar webgoat-2023.8.jar
```

Click the link in the log to start WebGoat.

### 3.1 Running on a different port

If for some reason you want to run WebGoat on a different port, you can do so by adding the following parameter:

```shell
java -jar webgoat-2023.8.jar --webgoat.port=8001 --webwolf.port=8002
```

For a full overview of all the parameters you can use, please check the [WebGoat properties file](webgoat-container/src/main/resources/application-{webgoat, webwolf}.properties).

## 4. Run from the sources

### Prerequisites:

* Java 23
* Your favorite IDE
* Git, or Git support in your IDE

Open a command shell/window:

```Shell
git clone git@github.com:WebGoat/WebGoat.git
```

Now let&#039;s start by compiling the project.

```Shell
cd WebGoat
git checkout &lt;&lt;branch_name&gt;&gt;
# On Linux/Mac:
./mvnw clean install

# On Windows:
./mvnw.cmd clean install

# Using docker or podman, you can than build the container locally
docker build -f Dockerfile . -t webgoat/webgoat
```

Now we are ready to run the project. WebGoat is using Spring Boot.

```Shell
# On Linux/Mac:
./mvnw spring-boot:run
# On Windows:
./mvnw.cmd spring-boot:run

```

... you should be running WebGoat on http://localhost:8080/WebGoat momentarily.

Note: The above link will redirect you to login page if you are not logged in. LogIn/Create account to proceed.

To change the IP address add the following variable to the `WebGoat/webgoat-container/src/main/resources/application.properties` file:

```
server.address=x.x.x.x
```

## 4. Run with custom menu

For specialist only. There is a way to set up WebGoat with a personalized menu. You can leave out some menu categories or individual lessons by setting certain environment variables.

For instance running as a jar on a Linux/macOS it will look like this:

```Shell
export TZ=Europe/Amsterdam # or your timezone
export EXCLUDE_CATEGORIES=&quot;CLIENT_SIDE,GENERAL,CHALLENGE&quot;
export EXCLUDE_LESSONS=&quot;SqlInjectionAdvanced,SqlInjectionMitigations&quot;
java -jar target/webgoat-2023.8-SNAPSHOT.jar
```

Or in a docker run it would (once this version is pushed into docker hub) look like this:

```Shell
docker run -d -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 -e EXCLUDE_CATEGORIES=&quot;CLIENT_SIDE,GENERAL,CHALLENGE&quot; -e EXCLUDE_LESSONS=&quot;SqlInjectionAdvanced,SqlInjectionMitigations&quot; webgoat/webgoat
```

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[Gar-b-age/CookLikeHOC]]></title>
            <link>https://github.com/Gar-b-age/CookLikeHOC</link>
            <guid>https://github.com/Gar-b-age/CookLikeHOC</guid>
            <pubDate>Sat, 20 Sep 2025 00:04:35 GMT</pubDate>
            <description><![CDATA[🥢像老乡鸡🐔那样做饭。主要部分于2024年完工，非老乡鸡官方仓库。文字来自《老乡鸡菜品溯源报告》，并做归纳、编辑与整理。CookLikeHOC.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Gar-b-age/CookLikeHOC">Gar-b-age/CookLikeHOC</a></h1>
            <p>🥢像老乡鸡🐔那样做饭。主要部分于2024年完工，非老乡鸡官方仓库。文字来自《老乡鸡菜品溯源报告》，并做归纳、编辑与整理。CookLikeHOC.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 7,160</p>
            <p>Forks: 873</p>
            <p>Stars today: 2,905 stars today</p>
            <h2>README</h2><pre>![pic](/banner.png)

# 像老乡鸡那样做饭

[**一些说明**](https://github.com/Gar-b-age/CookLikeHOC/issues/26)

仓库主体部分于2024年完工，和2025年9月份的舆论事件无关。截止提交时，仓库的贡献者们与老乡鸡的唯一关系只有消费者和商家的关系。本仓库不是老乡鸡的官方仓库。如果有任何问题或意见建议，欢迎指出

**新更新**

- 炖菜已上线部分由ai配图的菜品，但更欢迎大家来贡献实拍图

- 现已上线网页端，[点击访问](https://cooklikehoc.soilzhu.su)

[![link](/tg.png)](https://t.me/cooklikehoc)

《老乡鸡菜品溯源报告》中公布的所有菜品已经全部录入完，欢迎大家查阅和补充。

文字超大段copy自[《老乡鸡菜品溯源报告》](https://www.lxjchina.com.cn/display.asp?id=4226)，有编辑与整理

指路隔壁 [How To Cook](https://cook.aiursoft.cn/)

至于为什么仓库名要叫CookLikeHOC，因为直接写Laoxiangji大概不方便阅读，而Home Original Chicken是china daily报道中所使用的老乡鸡的英文名，故简写成HOC。

Contributor

![cr](https://contrib.rocks/image?repo=Gar-b-age/CookLikeHOC)

Logo
![pic](/logo.png) 

Star History

[![Star History Chart](https://api.star-history.com/svg?repos=Gar-b-age/CookLikeHOC&amp;type=Date)](https://star-history.com/#Gar-b-age/CookLikeHOC&amp;Date)

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WebKit/WebKit]]></title>
            <link>https://github.com/WebKit/WebKit</link>
            <guid>https://github.com/WebKit/WebKit</guid>
            <pubDate>Sat, 20 Sep 2025 00:04:34 GMT</pubDate>
            <description><![CDATA[Home of the WebKit project, the browser engine used by Safari, Mail, App Store and many other applications on macOS, iOS and Linux.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WebKit/WebKit">WebKit/WebKit</a></h1>
            <p>Home of the WebKit project, the browser engine used by Safari, Mail, App Store and many other applications on macOS, iOS and Linux.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 9,151</p>
            <p>Forks: 1,689</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[nodejs/node]]></title>
            <link>https://github.com/nodejs/node</link>
            <guid>https://github.com/nodejs/node</guid>
            <pubDate>Sat, 20 Sep 2025 00:04:33 GMT</pubDate>
            <description><![CDATA[Node.js JavaScript runtime ✨🐢🚀✨]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nodejs/node">nodejs/node</a></h1>
            <p>Node.js JavaScript runtime ✨🐢🚀✨</p>
            <p>Language: JavaScript</p>
            <p>Stars: 113,299</p>
            <p>Forks: 33,173</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre># Node.js

Node.js is an open-source, cross-platform JavaScript runtime environment.

For information on using Node.js, see the [Node.js website][].

The Node.js project uses an [open governance model](./GOVERNANCE.md). The
[OpenJS Foundation][] provides support for the project.

Contributors are expected to act in a collaborative manner to move
the project forward. We encourage the constructive exchange of contrary
opinions and compromise. The [TSC](./GOVERNANCE.md#technical-steering-committee)
reserves the right to limit or block contributors who repeatedly act in ways
that discourage, exhaust, or otherwise negatively affect other participants.

**This project has a [Code of Conduct][].**

## Table of contents

* [Support](#support)
* [Release types](#release-types)
  * [Download](#download)
    * [Current and LTS releases](#current-and-lts-releases)
    * [Nightly releases](#nightly-releases)
    * [API documentation](#api-documentation)
  * [Verifying binaries](#verifying-binaries)
* [Building Node.js](#building-nodejs)
* [Security](#security)
* [Contributing to Node.js](#contributing-to-nodejs)
* [Current project team members](#current-project-team-members)
  * [TSC (Technical Steering Committee)](#tsc-technical-steering-committee)
  * [Collaborators](#collaborators)
  * [Triagers](#triagers)
  * [Release keys](#release-keys)
* [License](#license)

## Support

Looking for help? Check out the
[instructions for getting support](.github/SUPPORT.md).

## Release types

* **Current**: Under active development. Code for the Current release is in the
  branch for its major version number (for example,
  [v22.x](https://github.com/nodejs/node/tree/v22.x)). Node.js releases a new
  major version every 6 months, allowing for breaking changes. This happens in
  April and October every year. Releases appearing each October have a support
  life of 8 months. Releases appearing each April convert to LTS (see below)
  each October.
* **LTS**: Releases that receive Long Term Support, with a focus on stability
  and security. Every even-numbered major version will become an LTS release.
  LTS releases receive 12 months of _Active LTS_ support and a further 18 months
  of _Maintenance_. LTS release lines have alphabetically-ordered code names,
  beginning with v4 Argon. There are no breaking changes or feature additions,
  except in some special circumstances.
* **Nightly**: Code from the Current branch built every 24-hours when there are
  changes. Use with caution.

Current and LTS releases follow [semantic versioning](https://semver.org). A
member of the Release Team [signs](#release-keys) each Current and LTS release.
For more information, see the
[Release README](https://github.com/nodejs/Release#readme).

### Download

Binaries, installers, and source tarballs are available at
&lt;https://nodejs.org/en/download/&gt;.

#### Current and LTS releases

&lt;https://nodejs.org/download/release/&gt;

The [latest](https://nodejs.org/download/release/latest/) directory is an
alias for the latest Current release. The latest-_codename_ directory is an
alias for the latest release from an LTS line. For example, the
[latest-hydrogen](https://nodejs.org/download/release/latest-hydrogen/)
directory contains the latest Hydrogen (Node.js 18) release.

#### Nightly releases

&lt;https://nodejs.org/download/nightly/&gt;

Each directory and filename includes the version (e.g., `v22.0.0`),
followed by the UTC date (e.g., `20240424` for April 24, 2024),
and the short commit SHA of the HEAD of the release (e.g., `ddd0a9e494`).
For instance, a full directory name might look like `v22.0.0-nightly20240424ddd0a9e494`.

#### API documentation

Documentation for the latest Current release is at &lt;https://nodejs.org/api/&gt;.
Version-specific documentation is available in each release directory in the
_docs_ subdirectory. Version-specific documentation is also at
&lt;https://nodejs.org/download/docs/&gt;.

### Verifying binaries

Download directories contain a `SHASUMS256.txt.asc` file with SHA checksums for the
files and the releaser PGP signature.

You can get a trusted keyring from nodejs/release-keys, e.g. using `curl`:

```bash
curl -fsLo &quot;/path/to/nodejs-keyring.kbx&quot; &quot;https://github.com/nodejs/release-keys/raw/HEAD/gpg/pubring.kbx&quot;
```

Alternatively, you can import the releaser keys in your default keyring, see
[Release keys](#release-keys) for commands to how to do that.

Then, you can verify the files you&#039;ve downloaded locally
(if you&#039;re using your default keyring, pass `--keyring=&quot;${GNUPGHOME:-~/.gnupg}/pubring.kbx&quot;`):

```bash
curl -fsO &quot;https://nodejs.org/dist/${VERSION}/SHASUMS256.txt.asc&quot; \
&amp;&amp; gpgv --keyring=&quot;/path/to/nodejs-keyring.kbx&quot; --output SHASUMS256.txt &lt; SHASUMS256.txt.asc \
&amp;&amp; shasum --check SHASUMS256.txt --ignore-missing
```

## Building Node.js

See [BUILDING.md](BUILDING.md) for instructions on how to build Node.js from
source and a list of supported platforms.

## Security

For information on reporting security vulnerabilities in Node.js, see
[SECURITY.md](./SECURITY.md).

## Contributing to Node.js

* [Contributing to the project][]
* [Working Groups][]
* [Strategic initiatives][]
* [Technical values and prioritization][]

## Current project team members

For information about the governance of the Node.js project, see
[GOVERNANCE.md](./GOVERNANCE.md).

&lt;!-- node-core-utils and find-inactive-tsc.mjs depend on the format of the TSC
     list. If the format changes, those utilities need to be tested and
     updated. --&gt;

### TSC (Technical Steering Committee)

#### TSC voting members

&lt;!--lint disable prohibited-strings--&gt;

* [aduh95](https://github.com/aduh95) -
  **Antoine du Hamel** &lt;&lt;duhamelantoine1995@gmail.com&gt;&gt; (he/him)
* [anonrig](https://github.com/anonrig) -
  **Yagiz Nizipli** &lt;&lt;yagiz@nizipli.com&gt;&gt; (he/him)
* [benjamingr](https://github.com/benjamingr) -
  **Benjamin Gruenbaum** &lt;&lt;benjamingr@gmail.com&gt;&gt;
* [BridgeAR](https://github.com/BridgeAR) -
  **Ruben Bridgewater** &lt;&lt;ruben@bridgewater.de&gt;&gt; (he/him)
* [gireeshpunathil](https://github.com/gireeshpunathil) -
  **Gireesh Punathil** &lt;&lt;gpunathi@in.ibm.com&gt;&gt; (he/him)
* [jasnell](https://github.com/jasnell) -
  **James M Snell** &lt;&lt;jasnell@gmail.com&gt;&gt; (he/him)
* [joyeecheung](https://github.com/joyeecheung) -
  **Joyee Cheung** &lt;&lt;joyeec9h3@gmail.com&gt;&gt; (she/her)
* [legendecas](https://github.com/legendecas) -
  **Chengzhong Wu** &lt;&lt;legendecas@gmail.com&gt;&gt; (he/him)
* [marco-ippolito](https://github.com/marco-ippolito) -
  **Marco Ippolito** &lt;&lt;marcoippolito54@gmail.com&gt;&gt; (he/him)
* [mcollina](https://github.com/mcollina) -
  **Matteo Collina** &lt;&lt;matteo.collina@gmail.com&gt;&gt; (he/him)
* [mhdawson](https://github.com/mhdawson) -
  **Michael Dawson** &lt;&lt;midawson@redhat.com&gt;&gt; (he/him)
* [panva](https://github.com/panva) -
  **Filip Skokan** &lt;&lt;panva.ip@gmail.com&gt;&gt; (he/him)
* [RafaelGSS](https://github.com/RafaelGSS) -
  **Rafael Gonzaga** &lt;&lt;rafael.nunu@hotmail.com&gt;&gt; (he/him)
* [RaisinTen](https://github.com/RaisinTen) -
  **Darshan Sen** &lt;&lt;raisinten@gmail.com&gt;&gt; (he/him)
* [richardlau](https://github.com/richardlau) -
  **Richard Lau** &lt;&lt;richard.lau@ibm.com&gt;&gt;
* [ronag](https://github.com/ronag) -
  **Robert Nagy** &lt;&lt;ronagy@icloud.com&gt;&gt;
* [ruyadorno](https://github.com/ruyadorno) -
  **Ruy Adorno** &lt;&lt;ruy@vlt.sh&gt;&gt; (he/him)
* [ShogunPanda](https://github.com/ShogunPanda) -
  **Paolo Insogna** &lt;&lt;paolo@cowtech.it&gt;&gt; (he/him)
* [targos](https://github.com/targos) -
  **Michaël Zasso** &lt;&lt;targos@protonmail.com&gt;&gt; (he/him)
* [tniessen](https://github.com/tniessen) -
  **Tobias Nießen** &lt;&lt;tniessen@tnie.de&gt;&gt; (he/him)

#### TSC regular members

* [BethGriggs](https://github.com/BethGriggs) -
  **Beth Griggs** &lt;&lt;bethanyngriggs@gmail.com&gt;&gt; (she/her)
* [bnoordhuis](https://github.com/bnoordhuis) -
  **Ben Noordhuis** &lt;&lt;info@bnoordhuis.nl&gt;&gt;
* [cjihrig](https://github.com/cjihrig) -
  **Colin Ihrig** &lt;&lt;cjihrig@gmail.com&gt;&gt; (he/him)
* [codebytere](https://github.com/codebytere) -
  **Shelley Vohr** &lt;&lt;shelley.vohr@gmail.com&gt;&gt; (she/her)
* [GeoffreyBooth](https://github.com/GeoffreyBooth) -
  **Geoffrey Booth** &lt;&lt;webadmin@geoffreybooth.com&gt;&gt; (he/him)
* [MoLow](https://github.com/MoLow) -
  **Moshe Atlow** &lt;&lt;moshe@atlow.co.il&gt;&gt; (he/him)
* [Trott](https://github.com/Trott) -
  **Rich Trott** &lt;&lt;rtrott@gmail.com&gt;&gt; (he/him)

&lt;details&gt;

&lt;summary&gt;TSC emeriti members&lt;/summary&gt;

#### TSC emeriti members

* [addaleax](https://github.com/addaleax) -
  **Anna Henningsen** &lt;&lt;anna@addaleax.net&gt;&gt; (she/her)
* [apapirovski](https://github.com/apapirovski) -
  **Anatoli Papirovski** &lt;&lt;apapirovski@mac.com&gt;&gt; (he/him)
* [ChALkeR](https://github.com/ChALkeR) -
  **Сковорода Никита Андреевич** &lt;&lt;chalkerx@gmail.com&gt;&gt; (he/him)
* [chrisdickinson](https://github.com/chrisdickinson) -
  **Chris Dickinson** &lt;&lt;christopher.s.dickinson@gmail.com&gt;&gt;
* [danbev](https://github.com/danbev) -
  **Daniel Bevenius** &lt;&lt;daniel.bevenius@gmail.com&gt;&gt; (he/him)
* [danielleadams](https://github.com/danielleadams) -
  **Danielle Adams** &lt;&lt;adamzdanielle@gmail.com&gt;&gt; (she/her)
* [evanlucas](https://github.com/evanlucas) -
  **Evan Lucas** &lt;&lt;evanlucas@me.com&gt;&gt; (he/him)
* [fhinkel](https://github.com/fhinkel) -
  **Franziska Hinkelmann** &lt;&lt;franziska.hinkelmann@gmail.com&gt;&gt; (she/her)
* [Fishrock123](https://github.com/Fishrock123) -
  **Jeremiah Senkpiel** &lt;&lt;fishrock123@rocketmail.com&gt;&gt; (he/they)
* [gabrielschulhof](https://github.com/gabrielschulhof) -
  **Gabriel Schulhof** &lt;&lt;gabrielschulhof@gmail.com&gt;&gt;
* [gibfahn](https://github.com/gibfahn) -
  **Gibson Fahnestock** &lt;&lt;gibfahn@gmail.com&gt;&gt; (he/him)
* [indutny](https://github.com/indutny) -
  **Fedor Indutny** &lt;&lt;fedor@indutny.com&gt;&gt;
* [isaacs](https://github.com/isaacs) -
  **Isaac Z. Schlueter** &lt;&lt;i@izs.me&gt;&gt;
* [joshgav](https://github.com/joshgav) -
  **Josh Gavant** &lt;&lt;josh.gavant@outlook.com&gt;&gt;
* [mmarchini](https://github.com/mmarchini) -
  **Mary Marchini** &lt;&lt;oss@mmarchini.me&gt;&gt; (she/her)
* [mscdex](https://github.com/mscdex) -
  **Brian White** &lt;&lt;mscdex@mscdex.net&gt;&gt;
* [MylesBorins](https://github.com/MylesBorins) -
  **Myles Borins** &lt;&lt;myles.borins@gmail.com&gt;&gt; (he/him)
* [nebrius](https://github.com/nebrius) -
  **Bryan Hughes** &lt;&lt;bryan@nebri.us&gt;&gt;
* [ofrobots](https://github.com/ofrobots) -
  **Ali Ijaz Sheikh** &lt;&lt;ofrobots@google.com&gt;&gt; (he/him)
* [orangemocha](https://github.com/orangemocha) -
  **Alexis Campailla** &lt;&lt;orangemocha@nodejs.org&gt;&gt;
* [piscisaureus](https://github.com/piscisaureus) -
  **Bert Belder** &lt;&lt;bertbelder@gmail.com&gt;&gt;
* [rvagg](https://github.com/rvagg) -
  **Rod Vagg** &lt;&lt;r@va.gg&gt;&gt;
* [sam-github](https://github.com/sam-github) -
  **Sam Roberts** &lt;&lt;vieuxtech@gmail.com&gt;&gt;
* [shigeki](https://github.com/shigeki) -
  **Shigeki Ohtsu** &lt;&lt;ohtsu@ohtsu.org&gt;&gt; (he/him)
* [thefourtheye](https://github.com/thefourtheye) -
  **Sakthipriyan Vairamani** &lt;&lt;thechargingvolcano@gmail.com&gt;&gt; (he/him)
* [TimothyGu](https://github.com/TimothyGu) -
  **Tiancheng &quot;Timothy&quot; Gu** &lt;&lt;timothygu99@gmail.com&gt;&gt; (he/him)
* [trevnorris](https://github.com/trevnorris) -
  **Trevor Norris** &lt;&lt;trev.norris@gmail.com&gt;&gt;

&lt;/details&gt;

&lt;!-- node-core-utils and find-inactive-collaborators.mjs depend on the format
     of the collaborator list. If the format changes, those utilities need to be
     tested and updated. --&gt;

### Collaborators

* [abmusse](https://github.com/abmusse) -
  **Abdirahim Musse** &lt;&lt;abdirahim.musse@ibm.com&gt;&gt;
* [addaleax](https://github.com/addaleax) -
  **Anna Henningsen** &lt;&lt;anna@addaleax.net&gt;&gt; (she/her)
* [Aditi-1400](https://github.com/Aditi-1400) -
  **Aditi Singh** &lt;&lt;aditisingh1400@gmail.com&gt;&gt; (she/her)
* [aduh95](https://github.com/aduh95) -
  **Antoine du Hamel** &lt;&lt;duhamelantoine1995@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/aduh95)
* [anonrig](https://github.com/anonrig) -
  **Yagiz Nizipli** &lt;&lt;yagiz@nizipli.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/anonrig)
* [atlowChemi](https://github.com/atlowChemi) -
  **Chemi Atlow** &lt;&lt;chemi@atlow.co.il&gt;&gt; (he/him)
* [Ayase-252](https://github.com/Ayase-252) -
  **Qingyu Deng** &lt;&lt;i@ayase-lab.com&gt;&gt;
* [bengl](https://github.com/bengl) -
  **Bryan English** &lt;&lt;bryan@bryanenglish.com&gt;&gt; (he/him)
* [benjamingr](https://github.com/benjamingr) -
  **Benjamin Gruenbaum** &lt;&lt;benjamingr@gmail.com&gt;&gt;
* [BethGriggs](https://github.com/BethGriggs) -
  **Beth Griggs** &lt;&lt;bethanyngriggs@gmail.com&gt;&gt; (she/her)
* [bnb](https://github.com/bnb) -
  **Tierney Cyren** &lt;&lt;hello@bnb.im&gt;&gt; (they/them)
* [bnoordhuis](https://github.com/bnoordhuis) -
  **Ben Noordhuis** &lt;&lt;info@bnoordhuis.nl&gt;&gt;
* [BridgeAR](https://github.com/BridgeAR) -
  **Ruben Bridgewater** &lt;&lt;ruben@bridgewater.de&gt;&gt; (he/him)
* [cclauss](https://github.com/cclauss) -
  **Christian Clauss** &lt;&lt;cclauss@me.com&gt;&gt; (he/him)
* [cjihrig](https://github.com/cjihrig) -
  **Colin Ihrig** &lt;&lt;cjihrig@gmail.com&gt;&gt; (he/him)
* [codebytere](https://github.com/codebytere) -
  **Shelley Vohr** &lt;&lt;shelley.vohr@gmail.com&gt;&gt; (she/her)
* [cola119](https://github.com/cola119) -
  **Kohei Ueno** &lt;&lt;kohei.ueno119@gmail.com&gt;&gt; (he/him)
* [daeyeon](https://github.com/daeyeon) -
  **Daeyeon Jeong** &lt;&lt;daeyeon.dev@gmail.com&gt;&gt; (he/him)
* [dario-piotrowicz](https://github.com/dario-piotrowicz) -
  **Dario Piotrowicz** &lt;&lt;dario.piotrowicz@gmail.com&gt;&gt; (he/him)
* [debadree25](https://github.com/debadree25) -
  **Debadree Chatterjee** &lt;&lt;debadree333@gmail.com&gt;&gt; (he/him)
* [deokjinkim](https://github.com/deokjinkim) -
  **Deokjin Kim** &lt;&lt;deokjin81.kim@gmail.com&gt;&gt; (he/him)
* [edsadr](https://github.com/edsadr) -
  **Adrian Estrada** &lt;&lt;edsadr@gmail.com&gt;&gt; (he/him)
* [ErickWendel](https://github.com/ErickWendel) -
  **Erick Wendel** &lt;&lt;erick.workspace@gmail.com&gt;&gt; (he/him)
* [Ethan-Arrowood](https://github.com/Ethan-Arrowood) -
  **Ethan Arrowood** &lt;&lt;ethan@arrowood.dev&gt;&gt; (he/him)
* [F3n67u](https://github.com/F3n67u) -
  **Feng Yu** &lt;&lt;F3n67u@outlook.com&gt;&gt; (he/him)
* [fhinkel](https://github.com/fhinkel) -
  **Franziska Hinkelmann** &lt;&lt;franziska.hinkelmann@gmail.com&gt;&gt; (she/her)
* [Flarna](https://github.com/Flarna) -
  **Gerhard Stöbich** &lt;&lt;deb2001-github@yahoo.de&gt;&gt; (he/they)
* [gabrielschulhof](https://github.com/gabrielschulhof) -
  **Gabriel Schulhof** &lt;&lt;gabrielschulhof@gmail.com&gt;&gt;
* [geeksilva97](https://github.com/geeksilva97) -
  **Edy Silva** &lt;&lt;edigleyssonsilva@gmail.com&gt;&gt; (he/him)
* [gengjiawen](https://github.com/gengjiawen) -
  **Jiawen Geng** &lt;&lt;technicalcute@gmail.com&gt;&gt;
* [GeoffreyBooth](https://github.com/GeoffreyBooth) -
  **Geoffrey Booth** &lt;&lt;webadmin@geoffreybooth.com&gt;&gt; (he/him)
* [gireeshpunathil](https://github.com/gireeshpunathil) -
  **Gireesh Punathil** &lt;&lt;gpunathi@in.ibm.com&gt;&gt; (he/him)
* [guybedford](https://github.com/guybedford) -
  **Guy Bedford** &lt;&lt;guybedford@gmail.com&gt;&gt; (he/him)
* [H4ad](https://github.com/H4ad) -
  **Vinícius Lourenço Claro Cardoso** &lt;&lt;contact@viniciusl.com.br&gt;&gt; (he/him)
* [HarshithaKP](https://github.com/HarshithaKP) -
  **Harshitha K P** &lt;&lt;harshitha014@gmail.com&gt;&gt; (she/her)
* [himself65](https://github.com/himself65) -
  **Zeyu &quot;Alex&quot; Yang** &lt;&lt;himself65@outlook.com&gt;&gt; (he/him)
* [IlyasShabi](https://github.com/IlyasShabi) -
  **Ilyas Shabi** &lt;&lt;ilyasshabi94@gmail.com&gt;&gt; (he/him)
* [islandryu](https://github.com/islandryu) -
  **Ryuhei Shima** &lt;&lt;shimaryuhei@gmail.com&gt;&gt; (he/him)
* [jakecastelli](https://github.com/jakecastelli) -
  **Jake Yuesong Li** &lt;&lt;jake.yuesong@gmail.com&gt;&gt; (he/him)
* [JakobJingleheimer](https://github.com/JakobJingleheimer) -
  **Jacob Smith** &lt;&lt;jacob@frende.me&gt;&gt; (he/him)
* [jasnell](https://github.com/jasnell) -
  **James M Snell** &lt;&lt;jasnell@gmail.com&gt;&gt; (he/him)
* [jazelly](https://github.com/jazelly) -
  **Jason Zhang** &lt;&lt;xzha4350@gmail.com&gt;&gt; (he/him)
* [jkrems](https://github.com/jkrems) -
  **Jan Martin** &lt;&lt;jan.krems@gmail.com&gt;&gt; (he/him)
* [JonasBa](https://github.com/JonasBa) -
  **Jonas Badalic** &lt;&lt;jonas.badalic@gmail.com&gt;&gt; (he/him)
* [joyeecheung](https://github.com/joyeecheung) -
  **Joyee Cheung** &lt;&lt;joyeec9h3@gmail.com&gt;&gt; (she/her)
* [juanarbol](https://github.com/juanarbol) -
  **Juan José Arboleda** &lt;&lt;soyjuanarbol@gmail.com&gt;&gt; (he/him)
* [JungMinu](https://github.com/JungMinu) -
  **Minwoo Jung** &lt;&lt;nodecorelab@gmail.com&gt;&gt; (he/him)
* [KhafraDev](https://github.com/KhafraDev) -
  **Matthew Aitken** &lt;&lt;maitken033380023@gmail.com&gt;&gt; (he/him)
* [legendecas](https://github.com/legendecas) -
  **Chengzhong Wu** &lt;&lt;legendecas@gmail.com&gt;&gt; (he/him)
* [lemire](https://github.com/lemire) -
  **Daniel Lemire** &lt;&lt;daniel@lemire.me&gt;&gt;
* [LiviaMedeiros](https://github.com/LiviaMedeiros) -
  **LiviaMedeiros** &lt;&lt;livia@cirno.name&gt;&gt;
* [ljharb](https://github.com/ljharb) -
  **Jordan Harband** &lt;&lt;ljharb@gmail.com&gt;&gt;
* [lpinca](https://github.com/lpinca) -
  **Luigi Pinca** &lt;&lt;luigipinca@gmail.com&gt;&gt; (he/him)
* [lukekarrys](https://github.com/lukekarrys) -
  **Luke Karrys** &lt;&lt;luke@lukekarrys.com&gt;&gt; (he/him)
* [Lxxyx](https://github.com/Lxxyx) -
  **Zijian Liu** &lt;&lt;lxxyxzj@gmail.com&gt;&gt; (he/him)
* [marco-ippolito](https://github.com/marco-ippolito) -
  **Marco Ippolito** &lt;&lt;marcoippolito54@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/marco-ippolito)
* [marsonya](https://github.com/marsonya) -
  **Akhil Marsonya** &lt;&lt;akhil.marsonya27@gmail.com&gt;&gt; (he/him)
* [MattiasBuelens](https://github.com/MattiasBuelens) -
  **Mattias Buelens** &lt;&lt;mattias@buelens.com&gt;&gt; (he/him)
* [mcollina](https://github.com/mcollina) -
  **Matteo Collina** &lt;&lt;matteo.collina@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/mcollina)
* [meixg](https://github.com/meixg) -
  **Xuguang Mei** &lt;&lt;meixuguang@gmail.com&gt;&gt; (he/him)
* [mhdawson](https://github.com/mhdawson) -
  **Michael Dawson** &lt;&lt;midawson@redhat.com&gt;&gt; (he/him)
* [MoLow](https://github.com/MoLow) -
  **Moshe Atlow** &lt;&lt;moshe@atlow.co.il&gt;&gt; (he/him)
* [MrJithil](https://github.com/MrJithil) -
  **Jithil P Ponnan** &lt;&lt;jithil@outlook.com&gt;&gt; (he/him)
* [ovflowd](https://github.com/ovflowd) -
  **Claudio Wunder** &lt;&lt;cwunder@gnome.org&gt;&gt; (he/they)
* [panva](https://github.com/panva) -
  **Filip Skokan** &lt;&lt;panva.ip@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/panva)
* [pimterry](https://github.com/pimterry) -
  **Tim Perry** &lt;&lt;pimterry@gmail.com&gt;&gt; (he/him)
* [pmarchini](https://github.com/pmarchini) -
  **Pietro Marchini** &lt;&lt;pietro.marchini94@gmail.com&gt;&gt; (he/him)
* [puskin](https://github.com/puskin) -
  **Giovanni Bucci** &lt;&lt;github@puskin.it&gt;&gt; (he/him)
* [Qard](https://github.com/Qard) -
  **Stephen Belanger** &lt;&lt;admin@stephenbelanger.com&gt;&gt; (he/him)
* [RafaelGSS](https://github.com/RafaelGSS) -
  **Rafael Gonzaga** &lt;&lt;rafael.nunu@hotmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/RafaelGSS)
* [RaisinTen](https://github.com/RaisinTen) -
  **Darshan Sen** &lt;&lt;raisinten@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/RaisinTen)
* [richardlau](https://github.com/richardlau) -
  **Richard Lau** &lt;&lt;richard.lau@ibm.com&gt;&gt;
* [rluvaton](https://github.com/rluvaton) -
  **Raz Luvaton** &lt;&lt;rluvaton@gmail.com&gt;&gt; (he/him)
* [ronag](https://github.com/ronag) -
  **Robert Nagy** &lt;&lt;ronagy@icloud.com&gt;&gt;
* [ruyadorno](https://github.com/ruyadorno) -
  **Ruy Adorno** &lt;&lt;ruy@vlt.sh&gt;&gt; (he/him)
* [santigimeno](https://github.com/santigimeno) -
  **Santiago Gimeno** &lt;&lt;santiago.gimeno@gmail.com&gt;&gt;
* [ShogunPanda](https://github.com/ShogunPanda) -
  **Paolo Insogna** &lt;&lt;paolo@cowtech.it&gt;&gt; (he/him)
* [srl295](https://github.com/srl295) -
  **Steven R Loomis** &lt;&lt;srl295@gmail.com&gt;&gt;
* [StefanStojanovic](https://github.com/StefanStojanovic) -
  **Stefan Stojanovic** &lt;&lt;stefan.stojanovic@janeasystems.com&gt;&gt; (he/him)
* [sxa](https://github.com/sxa) -
  **Stewart X Addison** &lt;&lt;sxa@redhat.com&gt;&gt; (he/him)
* [targos](https://github.com/targos) -
  **Michaël Zasso** &lt;&lt;targos@protonmail.com&gt;&gt; (he/him)
* [theanarkh](https://github.com/theanarkh) -
  **theanarkh** &lt;&lt;theratliter@gmail.com&gt;&gt; (he/him)
* [tniessen](https://github.com/tniessen) -
  **Tobias Nießen** &lt;&lt;tniessen@tnie.de&gt;&gt; (he/him)
* [trivikr](https://github.com/trivikr) -
  **Trivikram Kamat** &lt;&lt;trivikr.dev@gmail.com&gt;&gt;
* [Trott](https://github.com/Trott) -
  **Rich Trott** &lt;&lt;rtrott@gmail.com&gt;&gt; (he/him)
* [UlisesGascon](https://github.com/Ulis

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[upstash/context7]]></title>
            <link>https://github.com/upstash/context7</link>
            <guid>https://github.com/upstash/context7</guid>
            <pubDate>Sat, 20 Sep 2025 00:04:32 GMT</pubDate>
            <description><![CDATA[Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/upstash/context7">upstash/context7</a></h1>
            <p>Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors</p>
            <p>Language: JavaScript</p>
            <p>Stars: 30,844</p>
            <p>Forks: 1,540</p>
            <p>Stars today: 143 stars today</p>
            <h2>README</h2><pre>![Cover](public/cover.png)

# Context7 MCP - Up-to-date Code Docs For Any Prompt

[![Website](https://img.shields.io/badge/Website-context7.com-blue)](https://context7.com) [![smithery badge](https://smithery.ai/badge/@upstash/context7-mcp)](https://smithery.ai/server/@upstash/context7-mcp) [![NPM Version](https://img.shields.io/npm/v/%40upstash%2Fcontext7-mcp?color=red)](https://www.npmjs.com/package/@upstash/context7-mcp) [![MIT licensed](https://img.shields.io/npm/l/%40upstash%2Fcontext7-mcp)](./LICENSE)

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=context7&amp;config=eyJ1cmwiOiJodHRwczovL21jcC5jb250ZXh0Ny5jb20vbWNwIn0%3D) [&lt;img alt=&quot;Install in VS Code (npx)&quot; src=&quot;https://img.shields.io/badge/Install%20in%20VS%20Code-0098FF?style=for-the-badge&amp;logo=visualstudiocode&amp;logoColor=white&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)

[![繁體中文](https://img.shields.io/badge/docs-繁體中文-yellow)](./docs/README.zh-TW.md) [![简体中文](https://img.shields.io/badge/docs-简体中文-yellow)](./docs/README.zh-CN.md) [![日本語](https://img.shields.io/badge/docs-日本語-b7003a)](./docs/README.ja.md) [![한국어 문서](https://img.shields.io/badge/docs-한국어-green)](./docs/README.ko.md) [![Documentación en Español](https://img.shields.io/badge/docs-Español-orange)](./docs/README.es.md) [![Documentation en Français](https://img.shields.io/badge/docs-Français-blue)](./docs/README.fr.md) [![Documentação em Português (Brasil)](&lt;https://img.shields.io/badge/docs-Português%20(Brasil)-purple&gt;)](./docs/README.pt-BR.md) [![Documentazione in italiano](https://img.shields.io/badge/docs-Italian-red)](./docs/README.it.md) [![Dokumentasi Bahasa Indonesia](https://img.shields.io/badge/docs-Bahasa%20Indonesia-pink)](./docs/README.id-ID.md) [![Dokumentation auf Deutsch](https://img.shields.io/badge/docs-Deutsch-darkgreen)](./docs/README.de.md) [![Документация на русском языке](https://img.shields.io/badge/docs-Русский-darkblue)](./docs/README.ru.md) [![Українська документація](https://img.shields.io/badge/docs-Українська-lightblue)](./docs/README.uk.md) [![Türkçe Doküman](https://img.shields.io/badge/docs-Türkçe-blue)](./docs/README.tr.md) [![Arabic Documentation](https://img.shields.io/badge/docs-Arabic-white)](./docs/README.ar.md) [![Tiếng Việt](https://img.shields.io/badge/docs-Tiếng%20Việt-red)](./docs/README.vi.md)

## ❌ Without Context7

LLMs rely on outdated or generic information about the libraries you use. You get:

- ❌ Code examples are outdated and based on year-old training data
- ❌ Hallucinated APIs that don&#039;t even exist
- ❌ Generic answers for old package versions

## ✅ With Context7

Context7 MCP pulls up-to-date, version-specific documentation and code examples straight from the source — and places them directly into your prompt.

Add `use context7` to your prompt in Cursor:

```txt
Create a Next.js middleware that checks for a valid JWT in cookies and redirects unauthenticated users to `/login`. use context7
```

```txt
Configure a Cloudflare Worker script to cache JSON API responses for five minutes. use context7
```

Context7 fetches up-to-date code examples and documentation right into your LLM&#039;s context.

- 1️⃣ Write your prompt naturally
- 2️⃣ Tell the LLM to `use context7`
- 3️⃣ Get working code answers

No tab-switching, no hallucinated APIs that don&#039;t exist, no outdated code generation.

## 📚 Adding Projects

Check out our [project addition guide](./docs/adding-projects.md) to learn how to add (or update) your favorite libraries to Context7.

## 🛠️ Installation

### Requirements

- Node.js &gt;= v18.0.0
- Cursor, Claude Code, VSCode, Windsurf or another MCP Client
- Context7 API Key (Optional for higher rate limits) (Get yours by creating an account at [context7.com/dashboard](https://context7.com/dashboard))

&gt; [!WARNING]
&gt; **SSE Protocol Deprecation Notice**
&gt;
&gt; The Server-Sent Events (SSE) transport protocol is deprecated and its endpoint will be removed in upcoming releases. Please use HTTP or stdio transport methods instead.

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Installing via Smithery&lt;/b&gt;&lt;/summary&gt;

To install Context7 MCP Server for any client automatically via [Smithery](https://smithery.ai/server/@upstash/context7-mcp):

```bash
npx -y @smithery/cli@latest install @upstash/context7-mcp --client &lt;CLIENT_NAME&gt; --key &lt;YOUR_SMITHERY_KEY&gt;
```

You can find your Smithery key in the [Smithery.ai webpage](https://smithery.ai/server/@upstash/context7-mcp).

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Cursor&lt;/b&gt;&lt;/summary&gt;

Go to: `Settings` -&gt; `Cursor Settings` -&gt; `MCP` -&gt; `Add new global MCP server`

Pasting the following configuration into your Cursor `~/.cursor/mcp.json` file is the recommended approach. You may also install in a specific project by creating `.cursor/mcp.json` in your project folder. See [Cursor MCP docs](https://docs.cursor.com/context/model-context-protocol) for more info.

&gt; Since Cursor 1.0, you can click the install button below for instant one-click installation.

#### Cursor Remote Server Connection

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=context7&amp;config=eyJ1cmwiOiJodHRwczovL21jcC5jb250ZXh0Ny5jb20vbWNwIn0%3D)

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
      }
    }
  }
}
```

#### Cursor Local Server Connection

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=context7&amp;config=eyJjb21tYW5kIjoibnB4IC15IEB1cHN0YXNoL2NvbnRleHQ3LW1jcCJ9)

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Claude Code&lt;/b&gt;&lt;/summary&gt;

Run this command. See [Claude Code MCP docs](https://docs.anthropic.com/en/docs/claude-code/mcp) for more info.

#### Claude Code Remote Server Connection

```sh
claude mcp add --transport http context7 https://mcp.context7.com/mcp --header &quot;CONTEXT7_API_KEY: YOUR_API_KEY&quot;
```

#### Claude Code Local Server Connection

```sh
claude mcp add context7 -- npx -y @upstash/context7-mcp --api-key YOUR_API_KEY
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Windsurf&lt;/b&gt;&lt;/summary&gt;

Add this to your Windsurf MCP config file. See [Windsurf MCP docs](https://docs.windsurf.com/windsurf/cascade/mcp) for more info.

#### Windsurf Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;serverUrl&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
      }
    }
  }
}
```

#### Windsurf Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in VS Code&lt;/b&gt;&lt;/summary&gt;

[&lt;img alt=&quot;Install in VS Code (npx)&quot; src=&quot;https://img.shields.io/badge/VS_Code-VS_Code?style=flat-square&amp;label=Install%20Context7%20MCP&amp;color=0098FF&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)
[&lt;img alt=&quot;Install in VS Code Insiders (npx)&quot; src=&quot;https://img.shields.io/badge/VS_Code_Insiders-VS_Code_Insiders?style=flat-square&amp;label=Install%20Context7%20MCP&amp;color=24bfa5&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode-insiders%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)

Add this to your VS Code MCP config file. See [VS Code MCP docs](https://code.visualstudio.com/docs/copilot/chat/mcp-servers) for more info.

#### VS Code Remote Server Connection

```json
&quot;mcp&quot;: {
  &quot;servers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;http&quot;,
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
      }
    }
  }
}
```

#### VS Code Local Server Connection

```json
&quot;mcp&quot;: {
  &quot;servers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;stdio&quot;,
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;
&lt;b&gt;Install in Cline&lt;/b&gt;
&lt;/summary&gt;

You can easily install Context7 through the [Cline MCP Server Marketplace](https://cline.bot/mcp-marketplace) by following these instructions:

1. Open **Cline**.
2. Click the hamburger menu icon (☰) to enter the **MCP Servers** section.
3. Use the search bar within the **Marketplace** tab to find _Context7_.
4. Click the **Install** button.

Or you can directly edit MCP servers configuration:

1. Open **Cline**.
2. Click the hamburger menu icon (☰) to enter the **MCP Servers** section.
3. Choose **Remote Servers** tab.
4. Click the **Edit Configuration** button.
5. Add context7 to `mcpServers`:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;type&quot;: &quot;streamableHttp&quot;,
      &quot;headers&quot;: {
        &quot;Authorization&quot;: &quot;Bearer YOUR_API_KEY&quot;
      }
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Zed&lt;/b&gt;&lt;/summary&gt;

It can be installed via [Zed Extensions](https://zed.dev/extensions?query=Context7) or you can add this to your Zed `settings.json`. See [Zed Context Server docs](https://zed.dev/docs/assistant/context-servers) for more info.

```json
{
  &quot;context_servers&quot;: {
    &quot;Context7&quot;: {
      &quot;command&quot;: {
        &quot;path&quot;: &quot;npx&quot;,
        &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
      },
      &quot;settings&quot;: {}
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Augment Code&lt;/b&gt;&lt;/summary&gt;

To configure Context7 MCP in Augment Code, you can use either the graphical interface or manual configuration.

### **A. Using the Augment Code UI**

1. Click the hamburger menu.
2. Select **Settings**.
3. Navigate to the **Tools** section.
4. Click the **+ Add MCP** button.
5. Enter the following command:

   ```
   npx -y @upstash/context7-mcp@latest
   ```

6. Name the MCP: **Context7**.
7. Click the **Add** button.

Once the MCP server is added, you can start using Context7&#039;s up-to-date code documentation features directly within Augment Code.

---

### **B. Manual Configuration**

1. Press Cmd/Ctrl Shift P or go to the hamburger menu in the Augment panel
2. Select Edit Settings
3. Under Advanced, click Edit in settings.json
4. Add the server configuration to the `mcpServers` array in the `augment.advanced` object

```json
&quot;augment.advanced&quot;: {
  &quot;mcpServers&quot;: [
    {
      &quot;name&quot;: &quot;context7&quot;,
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  ]
}
```

Once the MCP server is added, restart your editor. If you receive any errors, check the syntax to make sure closing brackets or commas are not missing.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Roo Code&lt;/b&gt;&lt;/summary&gt;

Add this to your Roo Code MCP configuration file. See [Roo Code MCP docs](https://docs.roocode.com/features/mcp/using-mcp-in-roo) for more info.

#### Roo Code Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;streamable-http&quot;,
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

#### Roo Code Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Gemini CLI&lt;/b&gt;&lt;/summary&gt;

See [Gemini CLI Configuration](https://google-gemini.github.io/gemini-cli/docs/tools/mcp-server.html) for details.

1.  Open the Gemini CLI settings file. The location is `~/.gemini/settings.json` (where `~` is your home directory).
2.  Add the following to the `mcpServers` object in your `settings.json` file:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;httpUrl&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;,
        &quot;Accept&quot;: &quot;application/json, text/event-stream&quot;
      }
    }
  }
}
```

Or, for a local server:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

If the `mcpServers` object does not exist, create it.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Claude Desktop&lt;/b&gt;&lt;/summary&gt;

#### Remote Server Connection

Open Claude Desktop and navigate to Settings &gt; Connectors &gt; Add Custom Connector. Enter the name as `Context7` and the remote MCP server URL as `https://mcp.context7.com/mcp`.

#### Local Server Connection

Open Claude Desktop developer settings and edit your `claude_desktop_config.json` file to add the following configuration. See [Claude Desktop MCP docs](https://modelcontextprotocol.io/quickstart/user) for more info.

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Opencode&lt;/b&gt;&lt;/summary&gt;

Add this to your Opencode configuration file. See [Opencode MCP docs](https://opencode.ai/docs/mcp-servers) for more info.

#### Opencode Remote Server Connection

```json
&quot;mcp&quot;: {
  &quot;context7&quot;: {
    &quot;type&quot;: &quot;remote&quot;,
    &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;,
    &quot;headers&quot;: {
      &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
    },
    &quot;enabled&quot;: true
  }
}
```

#### Opencode Local Server Connection

```json
{
  &quot;mcp&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;local&quot;,
      &quot;command&quot;: [&quot;npx&quot;, &quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;],
      &quot;enabled&quot;: true
    }
  }
}
```

&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in OpenAI Codex&lt;/b&gt;&lt;/summary&gt;

See [OpenAI Codex](https://github.com/openai/codex) for more information.

Add the following configuration to your OpenAI Codex MCP server settings:

```toml
[mcp_servers.context7]
args = [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
command = &quot;npx&quot;
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in JetBrains AI Assistant&lt;/b&gt;&lt;/summary&gt;

See [JetBrains AI Assistant Documentation](https://www.jetbrains.com/help/ai-assistant/configure-an-mcp-server.html) for more details.

1. In JetBrains IDEs, go to `Settings` -&gt; `Tools` -&gt; `AI Assistant` -&gt; `Model Context Protocol (MCP)`
2. Click `+ Add`.
3. Click on `Command` in the top-left corner of the dialog and select the As JSON option from the list
4. Add this configuration and click `OK`

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

5. Click `Apply` to save changes.
6. The same way context7 could be added for JetBrains Junie in `Settings` -&gt; `Tools` -&gt; `Junie` -&gt; `MCP Settings`

&lt;/details&gt;

&lt;details&gt;
  
&lt;summary&gt;&lt;b&gt;Install in Kiro&lt;/b&gt;&lt;/summary&gt;

See [Kiro Model Context Protocol Documentation](https://kiro.dev/docs/mcp/configuration/) for details.

1. Navigate `Kiro` &gt; `MCP Servers`
2. Add a new MCP server by clicking the `+ Add` button.
3. Paste the configuration given below:

```json
{
  &quot;mcpServers&quot;: {
    &quot;Context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;],
      &quot;env&quot;: {},
      &quot;disabled&quot;: false,
      &quot;autoApprove&quot;: []
    }
  }
}
```

4. Click `Save` to apply the changes.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Trae&lt;/b&gt;&lt;/summary&gt;

Use the Add manually feature and fill in the JSON configuration information for that MCP server.
For more details, visit the [Trae documentation](https://docs.trae.ai/ide/model-context-protocol?_lang=en).

#### Trae Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

#### Trae Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Using Bun or Deno&lt;/b&gt;&lt;/summary&gt;

Use these alternatives to run the local Context7 MCP server with other runtimes. These examples work for any client that supports launching a local MCP server via command + args.

#### Bun

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;bunx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

#### Deno

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;deno&quot;,
      &quot;args&quot;: [
        &quot;run&quot;,
        &quot;--allow-env=NO_DEPRECATION,TRACE_DEPRECATION&quot;,
        &quot;--allow-net&quot;,
        &quot;npm:@upstash/context7-mcp&quot;
      ]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Using Docker&lt;/b&gt;&lt;/summary&gt;

If you prefer to run the MCP server in a Docker container:

1. **Build the Docker Image:**

   First, create a `Dockerfile` in the project root (or anywhere you prefer):

   &lt;details&gt;
   &lt;summary&gt;Click to see Dockerfile content&lt;/summary&gt;

   ```Dockerfile
   FROM node:18-alpine

   WORKDIR /app

   # Install the latest version globally
   RUN npm install -g @upstash/context7-mcp

   # Expose default port if needed (optional, depends on MCP client interaction)
   # EXPOSE 3000

   # Default command to run the server
   CMD [&quot;context7-mcp&quot;]
   ```

   &lt;/details&gt;

   Then, build the image using a tag (e.g., `context7-mcp`). **Make sure Docker Desktop (or the Docker daemon) is running.** Run the following command in the same directory where you saved the `Dockerfile`:

   ```bash
   docker build -t context7-mcp .
   ```

2. **Configure Your MCP Client:**

   Update your MCP client&#039;s configuration to use the Docker command.

   _Example for a cline_mcp_settings.json:_

   ```json
   {
     &quot;mcpServers&quot;: {
       &quot;Сontext7&quot;: {
         &quot;autoApprove&quot;: [],
         &quot;disabled&quot;: false,
         &quot;timeout&quot;: 60,
         &quot;command&quot;: &quot;docker&quot;,
         &quot;args&quot;: [&quot;run&quot;, &quot;-i&quot;, &quot;--rm&quot;, &quot;context7-mcp&quot;],
         &quot;transportType&quot;: &quot;stdio&quot;
       }
     }
   }
   ```

   _Note: This is an example configuration. Please refer to the specific examples for your MCP client (like Cursor, VS Code, etc.) earlier in this README to adapt the structure (e.g., `mcpServers` vs `servers`). Also, ensure the image name in `args` matches the tag used during the `docker build` command._

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install Using the Desktop Extension&lt;/b&gt;&lt;/summary&gt;

Install the [context7.mcpb](mcpb/context7.mcpb) file under the mcpb folder and add it to your client. For more information, please check out [MCP bundles docs](https://github.com/anthropics/mcpb#mcp-bundles-mcpb).

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Windows&lt;/b&gt;&lt;/summary&gt;

The configuration on Windows is slightly different compared to Linux or macOS (_`Cline` is used in the example_). The same principle applies to other editors; refer to the configuration of `command` and `args`.

```json
{
  &quot;mcpServers&quot;: {
    &quot;github.com/upstash/context7-mcp&quot;: {
      &quot;command&quot;: &quot;cmd&quot;,
      &quot;args&quot;: [&quot;/c&quot;, &quot;npx&quot;, &quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;],
      &quot;disabled&quot;: false,
      &quot;autoApprove&quot;: []
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Amazon Q Developer CLI&lt;/b&gt;&lt;/summary&gt;

Add this to your Amazon Q Developer CLI configuration file. See [Amazon Q Developer CLI docs](https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line-mcp-configuration.html) for more details.

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Warp&lt;/b&gt;&lt;/summary&gt;

See [Warp Model Context Protocol Documentation](https://docs.warp.dev/knowledge-and-collaboration/

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[anuraghazra/github-readme-stats]]></title>
            <link>https://github.com/anuraghazra/github-readme-stats</link>
            <guid>https://github.com/anuraghazra/github-readme-stats</guid>
            <pubDate>Sat, 20 Sep 2025 00:04:31 GMT</pubDate>
            <description><![CDATA[⚡ Dynamically generated stats for your github readmes]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/anuraghazra/github-readme-stats">anuraghazra/github-readme-stats</a></h1>
            <p>⚡ Dynamically generated stats for your github readmes</p>
            <p>Language: JavaScript</p>
            <p>Stars: 76,030</p>
            <p>Forks: 26,307</p>
            <p>Stars today: 30 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[hakimel/reveal.js]]></title>
            <link>https://github.com/hakimel/reveal.js</link>
            <guid>https://github.com/hakimel/reveal.js</guid>
            <pubDate>Sat, 20 Sep 2025 00:04:30 GMT</pubDate>
            <description><![CDATA[The HTML Presentation Framework]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/hakimel/reveal.js">hakimel/reveal.js</a></h1>
            <p>The HTML Presentation Framework</p>
            <p>Language: JavaScript</p>
            <p>Stars: 69,591</p>
            <p>Forks: 16,742</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://revealjs.com&quot;&gt;
  &lt;img src=&quot;https://hakim-static.s3.amazonaws.com/reveal-js/logo/v1/reveal-black-text-sticker.png&quot; alt=&quot;reveal.js&quot; width=&quot;500&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;&lt;br&gt;
  &lt;a href=&quot;https://github.com/hakimel/reveal.js/actions&quot;&gt;&lt;img src=&quot;https://github.com/hakimel/reveal.js/workflows/tests/badge.svg&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://slides.com/&quot;&gt;&lt;img src=&quot;https://static.slid.es/images/slides-github-banner-320x40.png?1&quot; alt=&quot;Slides&quot; width=&quot;160&quot; height=&quot;20&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

reveal.js is an open source HTML presentation framework. It enables anyone with a web browser to create beautiful presentations for free. Check out the live demo at [revealjs.com](https://revealjs.com/).

The framework comes with a powerful feature set including [nested slides](https://revealjs.com/vertical-slides/), [Markdown support](https://revealjs.com/markdown/), [Auto-Animate](https://revealjs.com/auto-animate/), [PDF export](https://revealjs.com/pdf-export/), [speaker notes](https://revealjs.com/speaker-view/), [LaTeX typesetting](https://revealjs.com/math/), [syntax highlighted code](https://revealjs.com/code/) and an [extensive API](https://revealjs.com/api/).

---

Want to create reveal.js presentation in a graphical editor? Try &lt;https://slides.com&gt;. It&#039;s made by the same people behind reveal.js.

---

### Getting started
- 🚀 [Install reveal.js](https://revealjs.com/installation)
- 👀 [View the demo presentation](https://revealjs.com/demo)
- 📖 [Read the documentation](https://revealjs.com/markup/)
- 🖌 [Try the visual editor for reveal.js at Slides.com](https://slides.com/)
- 🎬 [Watch the reveal.js video course (paid)](https://revealjs.com/course)

--- 
&lt;div align=&quot;center&quot;&gt;
  MIT licensed | Copyright © 2011-2024 Hakim El Hattab, https://hakim.se
&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[parallax/jsPDF]]></title>
            <link>https://github.com/parallax/jsPDF</link>
            <guid>https://github.com/parallax/jsPDF</guid>
            <pubDate>Sat, 20 Sep 2025 00:04:29 GMT</pubDate>
            <description><![CDATA[Client-side JavaScript PDF generation for everyone.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/parallax/jsPDF">parallax/jsPDF</a></h1>
            <p>Client-side JavaScript PDF generation for everyone.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 30,580</p>
            <p>Forks: 4,726</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre># ![jsPDF](https://parall.ax/parallax-2016/img/svg/jspdf-logo.svg)

[![Continous Integration](https://github.com/MrRio/jsPDF/actions/workflows/continuous-integration.yml/badge.svg)](https://github.com/MrRio/jsPDF/actions/workflows/continuous-integration.yml?query=branch%3Amaster)
[![Code Climate](https://codeclimate.com/repos/57f943855cdc43705e00592f/badges/2665cddeba042dc5191f/gpa.svg)](https://codeclimate.com/repos/57f943855cdc43705e00592f/feed)
[![Test Coverage](https://codeclimate.com/repos/57f943855cdc43705e00592f/badges/2665cddeba042dc5191f/coverage.svg)](https://codeclimate.com/repos/57f943855cdc43705e00592f/coverage)
[![GitHub license](https://img.shields.io/github/license/MrRio/jsPDF.svg)](https://github.com/MrRio/jsPDF/blob/master/LICENSE)
[![Total alerts](https://img.shields.io/lgtm/alerts/g/MrRio/jsPDF.svg?logo=lgtm&amp;logoWidth=18)](https://lgtm.com/projects/g/MrRio/jsPDF/alerts/)
[![Language grade: JavaScript](https://img.shields.io/lgtm/grade/javascript/g/MrRio/jsPDF.svg?logo=lgtm&amp;logoWidth=18)](https://lgtm.com/projects/g/MrRio/jsPDF/context:javascript)
[![Gitpod ready-to-code](https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod)](https://gitpod.io/from-referrer/)

**A library to generate PDFs in JavaScript.**

You can [catch me on twitter](http://twitter.com/MrRio): [@MrRio](http://twitter.com/MrRio) or head over to [my company&#039;s website](http://parall.ax) for consultancy.

jsPDF is now co-maintained by [yWorks - the diagramming experts](https://www.yworks.com/).

## [Live Demo](http://raw.githack.com/MrRio/jsPDF/master/) | [Documentation](http://raw.githack.com/MrRio/jsPDF/master/docs/)

## Install

Recommended: get jsPDF from npm:

```sh
npm install jspdf --save
# or
yarn add jspdf
```

Alternatively, load it from a CDN:

```html
&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jspdf/3.0.3/jspdf.umd.min.js&quot;&gt;&lt;/script&gt;
```

Or always get latest version via [unpkg](https://unpkg.com/browse/jspdf/)

```html
&lt;script src=&quot;https://unpkg.com/jspdf@latest/dist/jspdf.umd.min.js&quot;&gt;&lt;/script&gt;
```

The `dist` folder of this package contains different kinds of files:

- **jspdf.es.\*.js**: Modern ES2015 module format.
- **jspdf.node.\*.js**: For running in Node. Uses file operations for loading/saving files instead of browser APIs.
- **jspdf.umd.\*.js**: UMD module format. For AMD or script-tag loading.
- **polyfills\*.js**: Required polyfills for older browsers like Internet Explorer. The es variant simply imports all
  required polyfills from `core-js`, the umd variant is self-contained.

Usually it is not necessary to specify the exact file in the import statement. Build tools or Node automatically figure
out the right file, so importing &quot;jspdf&quot; is enough.

## Usage

Then you&#039;re ready to start making your document:

```javascript
import { jsPDF } from &quot;jspdf&quot;;

// Default export is a4 paper, portrait, using millimeters for units
const doc = new jsPDF();

doc.text(&quot;Hello world!&quot;, 10, 10);
doc.save(&quot;a4.pdf&quot;);
```

If you want to change the paper size, orientation, or units, you can do:

```javascript
// Landscape export, 2×4 inches
const doc = new jsPDF({
  orientation: &quot;landscape&quot;,
  unit: &quot;in&quot;,
  format: [4, 2]
});

doc.text(&quot;Hello world!&quot;, 1, 1);
doc.save(&quot;two-by-four.pdf&quot;);
```

### Running in Node.js

```javascript
const { jsPDF } = require(&quot;jspdf&quot;); // will automatically load the node version

const doc = new jsPDF();
doc.text(&quot;Hello world!&quot;, 10, 10);
doc.save(&quot;a4.pdf&quot;); // will save the file in the current working directory
```

### Other Module Formats

&lt;details&gt;
  &lt;summary&gt;
    &lt;b&gt;AMD&lt;/b&gt;
  &lt;/summary&gt;

```js
require([&quot;jspdf&quot;], ({ jsPDF }) =&gt; {
  const doc = new jsPDF();
  doc.text(&quot;Hello world!&quot;, 10, 10);
  doc.save(&quot;a4.pdf&quot;);
});
```

&lt;/details&gt;

&lt;details&gt;
  &lt;summary&gt;
    &lt;b&gt;Globals&lt;/b&gt;
  &lt;/summary&gt;

```js
const { jsPDF } = window.jspdf;

const doc = new jsPDF();
doc.text(&quot;Hello world!&quot;, 10, 10);
doc.save(&quot;a4.pdf&quot;);
```

&lt;/details&gt;

### Optional dependencies

Some functions of jsPDF require optional dependencies. E.g. the `html` method, which depends on `html2canvas` and,
when supplied with a string HTML document, `dompurify`. JsPDF loads them dynamically when required
(using the respective module format, e.g. dynamic imports). Build tools like Webpack will automatically create separate
chunks for each of the optional dependencies. If your application does not use any of the optional dependencies, you
can prevent Webpack from generating the chunks by defining them as external dependencies:

```js
// webpack.config.js
module.exports = {
  // ...
  externals: {
    // only define the dependencies you are NOT using as externals!
    canvg: &quot;canvg&quot;,
    html2canvas: &quot;html2canvas&quot;,
    dompurify: &quot;dompurify&quot;
  }
};
```

In **Vue CLI** projects, externals can be defined via the [configureWebpack](https://cli.vuejs.org/config/#configurewebpack)
or [chainWebpack](https://cli.vuejs.org/config/#chainwebpack) properties of the `vue.config.js` file
(needs to be created, first, in fresh projects).

In **Angular** projects, externals can be defined using
[custom webpack builders](https://github.com/just-jeb/angular-builders/tree/master/packages/custom-webpack).

In **React** (`create-react-app`) projects, externals can be defined by either using
[react-app-rewired](https://github.com/timarney/react-app-rewired) or ejecting.

### TypeScript/Angular/Webpack/React/etc. Configuration:

jsPDF can be imported just like any other 3rd party library. This works with all major toolkits and frameworks. jsPDF
also offers a typings file for TypeScript projects.

```js
import { jsPDF } from &quot;jspdf&quot;;
```

You can add jsPDF to your meteor-project as follows:

```
meteor add jspdf:core
```

### Polyfills

jsPDF requires modern browser APIs in order to function. To use jsPDF in older browsers like Internet Explorer,
polyfills are required. You can load all required polyfills as follows:

```js
import &quot;jspdf/dist/polyfills.es.js&quot;;
```

Alternatively, you can load the prebundled polyfill file. This is not recommended, since you might end up
loading polyfills multiple times. Might still be nifty for small applications or quick POCs.

```html
&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jspdf/3.0.3/polyfills.umd.js&quot;&gt;&lt;/script&gt;
```

## Use of Unicode Characters / UTF-8:

The 14 standard fonts in PDF are limited to the ASCII-codepage. If you want to use UTF-8 you have to integrate a
custom font, which provides the needed glyphs. jsPDF supports .ttf-files. So if you want to have for example
Chinese text in your pdf, your font has to have the necessary Chinese glyphs. So, check if your font supports
the wanted glyphs or else it will show garbled characters instead of the right text.

To add the font to jsPDF use our fontconverter in
[/fontconverter/fontconverter.html](https://rawgit.com/MrRio/jsPDF/master/fontconverter/fontconverter.html).
The fontconverter will create a js-file with the content of the provided ttf-file as base64 encoded string
and additional code for jsPDF. You just have to add this generated js-File to your project.
You are then ready to go to use setFont-method in your code and write your UTF-8 encoded text.

Alternatively you can just load the content of the \*.ttf file as a binary string using `fetch` or `XMLHttpRequest` and
add the font to the PDF file:

```js
const doc = new jsPDF();

const myFont = ... // load the *.ttf font file as binary string

// add the font to jsPDF
doc.addFileToVFS(&quot;MyFont.ttf&quot;, myFont);
doc.addFont(&quot;MyFont.ttf&quot;, &quot;MyFont&quot;, &quot;normal&quot;);
doc.setFont(&quot;MyFont&quot;);
```

## Advanced Functionality

Since the merge with the [yWorks fork](https://github.com/yWorks/jsPDF) there are a lot of new features. However, some
of them are API breaking, which is why there is an API-switch between two API modes:

- In &quot;compat&quot; API mode, jsPDF has the same API as MrRio&#039;s original version, which means full compatibility with plugins.
  However, some advanced features like transformation matrices and patterns won&#039;t work. This is the default mode.
- In &quot;advanced&quot; API mode, jsPDF has the API you&#039;re used from the yWorks-fork version. This means the availability of
  all advanced features like patterns, FormObjects, and transformation matrices.

You can switch between the two modes by calling

```javascript
doc.advancedAPI(doc =&gt; {
  // your code
});
// or
doc.compatAPI(doc =&gt; {
  // your code
});
```

JsPDF will automatically switch back to the original API mode after the callback has run.

## Support

Please check if your question is already handled at Stackoverflow &lt;https://stackoverflow.com/questions/tagged/jspdf&gt;.
Feel free to ask a question there with the tag `jspdf`.

Feature requests, bug reports, etc. are very welcome as issues. Note that bug reports should follow these guidelines:

- A bug should be reported as an [mcve](https://stackoverflow.com/help/mcve)
- Make sure code is properly indented and [formatted](https://help.github.com/articles/basic-writing-and-formatting-syntax/#quoting-code) (Use ``` around code blocks)
- Provide a runnable example.
- Try to make sure and show in your issue that the issue is actually related to jspdf and not your framework of choice.

## Contributing

jsPDF cannot live without help from the community! If you think a feature is missing or you found a bug, please consider
if you can spare one or two hours and prepare a pull request. If you&#039;re simply interested in this project and want to
help, have a look at the open issues, especially those labeled with &quot;bug&quot;.

You can find information about building and testing jsPDF in the
[contribution guide](https://github.com/MrRio/jsPDF/blob/master/CONTRIBUTING.md#pull-requests)

## Credits

- Big thanks to Daniel Dotsenko from [Willow Systems Corporation](https://github.com/willowsystems) for making huge contributions to the codebase.
- Thanks to Ajaxian.com for [featuring us back in 2009](http://web.archive.org/web/20111011192314/http://ajaxian.com/archives/dynamically-generic-pdfs-with-javascript). (Internet Archive Wayback Machine reference)
- Our special thanks to GH Lee ([sphilee](https://github.com/sphilee)) for programming the ttf-file-support and providing a large and long sought after feature
- Everyone else that&#039;s contributed patches or bug reports. You rock.

## License (MIT)

Copyright
(c) 2010-2025 James Hall, https://github.com/MrRio/jsPDF
(c) 2015-2025 yWorks GmbH, https://www.yworks.com/

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
&quot;Software&quot;), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[actuallymentor/battery]]></title>
            <link>https://github.com/actuallymentor/battery</link>
            <guid>https://github.com/actuallymentor/battery</guid>
            <pubDate>Sat, 20 Sep 2025 00:04:28 GMT</pubDate>
            <description><![CDATA[CLI/GUI for managing the battery charging status for Apple silicon (M1, M32, M3) Macs]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/actuallymentor/battery">actuallymentor/battery</a></h1>
            <p>CLI/GUI for managing the battery charging status for Apple silicon (M1, M32, M3) Macs</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,744</p>
            <p>Forks: 223</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre># Battery charge limiter for Apple Silicon Macbook devices

&lt;img width=&quot;300px&quot; align=&quot;right&quot; src=&quot;./screenshots/tray.png&quot;/&gt;This tool makes it possible to keep a chronically plugged in Apple Silicon Macbook at `80%` battery, since that will prolong the longevity of the battery. It is free and open-source and will remain that way.

&gt; Want to know if this tool does anything or is just a placebo? Read [this excellent article](https://batteryuniversity.com/article/bu-808-how-to-prolong-lithium-based-batteries). TL;DR: keep your battery cool, keep it at 80% when plugged in, and discharge it as shallowly as feasible.

### Requirements

This is an app for Apple Silicon Macs. It will not work on Intel macs. Do you have an older Mac? Consider the free version of the [Al Dente](https://apphousekitchen.com/) software package. It is a good alternative and has a premium version with many more features.

### Installation

- Option 1: install the app through brew with `brew install battery`
- Option 2: [download the app dmg version here](https://github.com/actuallymentor/battery/releases/)
- Option 3: install ONLY the command line interface (see section below)

When installing via brew or dmg, opening the macOS app is required to complete the installation.

The first time you open the app, it will ask for your administator password so it can install the needed components. Please note that the app:

- Discharges your battery until it reaches 80%, **even when plugged in**
- Disables charging when your battery is above 80% charged
- Enables charging when your battery is under 80% charged
- Keeps the limit engaged even after rebooting
- Keeps the limit engaged even after closing the tray app
- Also automatically installs the `battery` command line tool. If you want a custom charging percentage, the CLI is the only way to do that.

Do you have questions, comments, or feature requests? [Open an issue here](https://github.com/actuallymentor/battery/issues) or [Tweet at me](https://twitter.com/actuallymentor).

---

## 🖥 Command-line version

&gt; If you don&#039;t know what a &quot;command line&quot; is, ignore this section. You don&#039;t need it.

The GUI app uses a command line tool under the hood. Installing the GUI automatically installs the CLI as well. You can also separately install the CLI.

The CLI is used for managing the battery charging status for Apple Silicon Macbooks. Can be used to enable/disable the Macbook from charging the battery when plugged into power.

### Installation

One-line installation:

```bash
curl -s https://raw.githubusercontent.com/actuallymentor/battery/main/setup.sh | bash
```

This will:

1. Download the precompiled `smc` tool in this repo (built from the [hholtmann/smcFanControl](https://github.com/hholtmann/smcFanControl.git) repository)
2. Install `smc` to `/usr/local/bin`
3. Install `battery` to `/usr/local/bin`

### Usage

Example usage:

```shell
# This will enable charging when your battery dips under 80, and disable it when it exceeds 80
battery maintain 80
```

After running a command like `battery charging off` you can verify the change visually by looking at the battery icon:

![Battery not charging](./screenshots/not-charging-screenshot.png)

After running `battery charging on` you will see it change to this:

![Battery charging](./screenshots/charging-screenshot.png)

For help, run `battery` without parameters:

```
Battery CLI utility v1.0.1

Usage:

  battery status
    output battery SMC status, % and time remaining

  battery maintain LEVEL[1-100,stop]
    reboot-persistent battery level maintenance: turn off charging above, and on below a certain value
    eg: battery maintain 80
    eg: battery maintain stop

  battery charging SETTING[on/off]
    manually set the battery to (not) charge
    eg: battery charging on

  battery adapter SETTING[on/off]
    manually set the adapter to (not) charge even when plugged in
    eg: battery adapter off

  battery calibrate
    calibrate the battery by discharging it to 15%, then recharging it to 100%, and keeping it there for 1 hour

  battery charge LEVEL[1-100]
    charge the battery to a certain percentage, and disable charging when that percentage is reached
    eg: battery charge 90

  battery discharge LEVEL[1-100]
    block power input from the adapter until battery falls to this level
    eg: battery discharge 90

  battery visudo
    ensure you don&#039;t need to call battery with sudo
    This is already used in the setup script, so you should&#039;t need it.

  battery update
    update the battery utility to the latest version

  battery reinstall
    reinstall the battery utility to the latest version (reruns the installation script)

  battery uninstall
    enable charging, remove the smc tool, and the battery script
```

## FAQ &amp; Troubleshooting

### Why does this exist?

I was looking at the Al Dente software package for battery limiting, but I found the [license too limiting](https://github.com/davidwernhart/AlDente/discussions/558) for a poweruser like myself.

I would actually have preferred using Al Dente, but decided to create a command-line utility to replace it as a side-project on holiday. A colleague mentioned they would like a GUI, so I spend a few evenings setting up an Electron app. And voila, here we are.

### &quot;It&#039;s not working&quot;

If you used one of the earlier versions of the `battery` utility, you may run into [path/permission issues](https://github.com/actuallymentor/battery/issues/8). This is not your fault but mine. To fix it:

```
sudo rm -rf ~/.battery
binfolder=/usr/local/bin
sudo rm -v &quot;$binfolder/smc&quot; &quot;$binfolder/battery&quot;
```

Then reopen the app and things should work. If not, [open an issue](https://github.com/actuallymentor/battery/issues/new/choose) and I&#039;ll try to help you fix it.

### A note to Little Snitch users

This tool calls a number of urls, blocking all of them will only break auto-updates.

1. `unidentifiedanalytics.web.app` is a self-made app that tracks app installations, I use it to see if enough people use the app to justify spending time on it. It tracks only how many unique ip addresses open the app.
1. `icanhazip.com` is used to see if there is an internet connection
1. `github.com` is used both as a liveness check and as the source of updates for the underlying command-line utility
1. `electronjs.org` hosts the update server for the GUI

All urls are called over `https` and so not leak data. Unidentified Analytics keeps track of unique ip addresses that open the app, but nothing else.

### What distinguishes this project from Optimized Charging?

Optimized Charging, a feature that is built into MacOS, aims to ensure the longevity and health of your battery. It does so by &quot;delaying charging the battery past 80% when it predicts that you’ll be plugged in for an extended period of time, and aims to charge the battery before you unplug,&quot; as explained in [Apple&#039;s user guide](https://support.apple.com/en-ca/guide/mac-help/mchlfc3b7879/mac#:~:text=Optimized%20Battery%20Charging%3A%20To%20reduce,the%20battery%20before%20you%20unplug.).

Additionally, Optimized Charging uses machine learning to decide when the battery should be held at 80%, and when it should become fully charged. If your Mac is not plugged in on a regular schedule, optimized charging will not work as intended.

This app is a similar alternative to Optimized Charging, giving the user control over when it is activated, what percentage the battery should be held at, and more.

### How do I support this project?

Do you know how to code? Open a pull-request for a feature with the label [help wanted (PR welcome)](https://github.com/actuallymentor/battery/labels/help%20wanted%20%28PR%20welcome%29).

Do you have an awesome feature idea? [Add a feature request](https://github.com/actuallymentor/battery/issues/new/choose)

Do you just want to keep me motivated to update the app? [Tweet at me](https://twitter.com/actuallymentor)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[facebook/react]]></title>
            <link>https://github.com/facebook/react</link>
            <guid>https://github.com/facebook/react</guid>
            <pubDate>Sat, 20 Sep 2025 00:04:27 GMT</pubDate>
            <description><![CDATA[The library for web and native user interfaces.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/facebook/react">facebook/react</a></h1>
            <p>The library for web and native user interfaces.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 239,038</p>
            <p>Forks: 49,356</p>
            <p>Stars today: 46 stars today</p>
            <h2>README</h2><pre># [React](https://react.dev/) &amp;middot; [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/facebook/react/blob/main/LICENSE) [![npm version](https://img.shields.io/npm/v/react.svg?style=flat)](https://www.npmjs.com/package/react) [![(Runtime) Build and Test](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml/badge.svg)](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml) [![(Compiler) TypeScript](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml/badge.svg?branch=main)](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://legacy.reactjs.org/docs/how-to-contribute.html#your-first-pull-request)

React is a JavaScript library for building user interfaces.

* **Declarative:** React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.
* **Component-Based:** Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep the state out of the DOM.
* **Learn Once, Write Anywhere:** We don&#039;t make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using [Node](https://nodejs.org/en) and power mobile apps using [React Native](https://reactnative.dev/).

[Learn how to use React in your project](https://react.dev/learn).

## Installation

React has been designed for gradual adoption from the start, and **you can use as little or as much React as you need**:

* Use [Quick Start](https://react.dev/learn) to get a taste of React.
* [Add React to an Existing Project](https://react.dev/learn/add-react-to-an-existing-project) to use as little or as much React as you need.
* [Create a New React App](https://react.dev/learn/start-a-new-react-project) if you&#039;re looking for a powerful JavaScript toolchain.

## Documentation

You can find the React documentation [on the website](https://react.dev/).

Check out the [Getting Started](https://react.dev/learn) page for a quick overview.

The documentation is divided into several sections:

* [Quick Start](https://react.dev/learn)
* [Tutorial](https://react.dev/learn/tutorial-tic-tac-toe)
* [Thinking in React](https://react.dev/learn/thinking-in-react)
* [Installation](https://react.dev/learn/installation)
* [Describing the UI](https://react.dev/learn/describing-the-ui)
* [Adding Interactivity](https://react.dev/learn/adding-interactivity)
* [Managing State](https://react.dev/learn/managing-state)
* [Advanced Guides](https://react.dev/learn/escape-hatches)
* [API Reference](https://react.dev/reference/react)
* [Where to Get Support](https://react.dev/community)
* [Contributing Guide](https://legacy.reactjs.org/docs/how-to-contribute.html)

You can improve it by sending pull requests to [this repository](https://github.com/reactjs/react.dev).

## Examples

We have several examples [on the website](https://react.dev/). Here is the first one to get you started:

```jsx
import { createRoot } from &#039;react-dom/client&#039;;

function HelloMessage({ name }) {
  return &lt;div&gt;Hello {name}&lt;/div&gt;;
}

const root = createRoot(document.getElementById(&#039;container&#039;));
root.render(&lt;HelloMessage name=&quot;Taylor&quot; /&gt;);
```

This example will render &quot;Hello Taylor&quot; into a container on the page.

You&#039;ll notice that we used an HTML-like syntax; [we call it JSX](https://react.dev/learn#writing-markup-with-jsx). JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML.

## Contributing

The main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.

### [Code of Conduct](https://code.fb.com/codeofconduct)

Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read [the full text](https://code.fb.com/codeofconduct) so that you can understand what actions will and will not be tolerated.

### [Contributing Guide](https://legacy.reactjs.org/docs/how-to-contribute.html)

Read our [contributing guide](https://legacy.reactjs.org/docs/how-to-contribute.html) to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.

### [Good First Issues](https://github.com/facebook/react/labels/good%20first%20issue)

To help you get your feet wet and get you familiar with our contribution process, we have a list of [good first issues](https://github.com/facebook/react/labels/good%20first%20issue) that contain bugs that have a relatively limited scope. This is a great place to get started.

### License

React is [MIT licensed](./LICENSE).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[open-webui/open-webui]]></title>
            <link>https://github.com/open-webui/open-webui</link>
            <guid>https://github.com/open-webui/open-webui</guid>
            <pubDate>Sat, 20 Sep 2025 00:04:26 GMT</pubDate>
            <description><![CDATA[User-friendly AI Interface (Supports Ollama, OpenAI API, ...)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/open-webui/open-webui">open-webui/open-webui</a></h1>
            <p>User-friendly AI Interface (Supports Ollama, OpenAI API, ...)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 110,394</p>
            <p>Forks: 15,150</p>
            <p>Stars today: 105 stars today</p>
            <h2>README</h2><pre># Open WebUI 👋

![GitHub stars](https://img.shields.io/github/stars/open-webui/open-webui?style=social)
![GitHub forks](https://img.shields.io/github/forks/open-webui/open-webui?style=social)
![GitHub watchers](https://img.shields.io/github/watchers/open-webui/open-webui?style=social)
![GitHub repo size](https://img.shields.io/github/repo-size/open-webui/open-webui)
![GitHub language count](https://img.shields.io/github/languages/count/open-webui/open-webui)
![GitHub top language](https://img.shields.io/github/languages/top/open-webui/open-webui)
![GitHub last commit](https://img.shields.io/github/last-commit/open-webui/open-webui?color=red)
[![Discord](https://img.shields.io/badge/Discord-Open_WebUI-blue?logo=discord&amp;logoColor=white)](https://discord.gg/5rJgQTnV4s)
[![](https://img.shields.io/static/v1?label=Sponsor&amp;message=%E2%9D%A4&amp;logo=GitHub&amp;color=%23fe8e86)](https://github.com/sponsors/tjbck)

**Open WebUI is an [extensible](https://docs.openwebui.com/features/plugin/), feature-rich, and user-friendly self-hosted AI platform designed to operate entirely offline.** It supports various LLM runners like **Ollama** and **OpenAI-compatible APIs**, with **built-in inference engine** for RAG, making it a **powerful AI deployment solution**.

Passionate about open-source AI? [Join our team →](https://careers.openwebui.com/)

![Open WebUI Demo](./demo.gif)

&gt; [!TIP]  
&gt; **Looking for an [Enterprise Plan](https://docs.openwebui.com/enterprise)?** – **[Speak with Our Sales Team Today!](mailto:sales@openwebui.com)**
&gt;
&gt; Get **enhanced capabilities**, including **custom theming and branding**, **Service Level Agreement (SLA) support**, **Long-Term Support (LTS) versions**, and **more!**

For more information, be sure to check out our [Open WebUI Documentation](https://docs.openwebui.com/).

## Key Features of Open WebUI ⭐

- 🚀 **Effortless Setup**: Install seamlessly using Docker or Kubernetes (kubectl, kustomize or helm) for a hassle-free experience with support for both `:ollama` and `:cuda` tagged images.

- 🤝 **Ollama/OpenAI API Integration**: Effortlessly integrate OpenAI-compatible APIs for versatile conversations alongside Ollama models. Customize the OpenAI API URL to link with **LMStudio, GroqCloud, Mistral, OpenRouter, and more**.

- 🛡️ **Granular Permissions and User Groups**: By allowing administrators to create detailed user roles and permissions, we ensure a secure user environment. This granularity not only enhances security but also allows for customized user experiences, fostering a sense of ownership and responsibility amongst users.

- 🔄 **SCIM 2.0 Support**: Enterprise-grade user and group provisioning through SCIM 2.0 protocol, enabling seamless integration with identity providers like Okta, Azure AD, and Google Workspace for automated user lifecycle management.

- 📱 **Responsive Design**: Enjoy a seamless experience across Desktop PC, Laptop, and Mobile devices.

- 📱 **Progressive Web App (PWA) for Mobile**: Enjoy a native app-like experience on your mobile device with our PWA, providing offline access on localhost and a seamless user interface.

- ✒️🔢 **Full Markdown and LaTeX Support**: Elevate your LLM experience with comprehensive Markdown and LaTeX capabilities for enriched interaction.

- 🎤📹 **Hands-Free Voice/Video Call**: Experience seamless communication with integrated hands-free voice and video call features, allowing for a more dynamic and interactive chat environment.

- 🛠️ **Model Builder**: Easily create Ollama models via the Web UI. Create and add custom characters/agents, customize chat elements, and import models effortlessly through [Open WebUI Community](https://openwebui.com/) integration.

- 🐍 **Native Python Function Calling Tool**: Enhance your LLMs with built-in code editor support in the tools workspace. Bring Your Own Function (BYOF) by simply adding your pure Python functions, enabling seamless integration with LLMs.

- 📚 **Local RAG Integration**: Dive into the future of chat interactions with groundbreaking Retrieval Augmented Generation (RAG) support. This feature seamlessly integrates document interactions into your chat experience. You can load documents directly into the chat or add files to your document library, effortlessly accessing them using the `#` command before a query.

- 🔍 **Web Search for RAG**: Perform web searches using providers like `SearXNG`, `Google PSE`, `Brave Search`, `serpstack`, `serper`, `Serply`, `DuckDuckGo`, `TavilySearch`, `SearchApi` and `Bing` and inject the results directly into your chat experience.

- 🌐 **Web Browsing Capability**: Seamlessly integrate websites into your chat experience using the `#` command followed by a URL. This feature allows you to incorporate web content directly into your conversations, enhancing the richness and depth of your interactions.

- 🎨 **Image Generation Integration**: Seamlessly incorporate image generation capabilities using options such as AUTOMATIC1111 API or ComfyUI (local), and OpenAI&#039;s DALL-E (external), enriching your chat experience with dynamic visual content.

- ⚙️ **Many Models Conversations**: Effortlessly engage with various models simultaneously, harnessing their unique strengths for optimal responses. Enhance your experience by leveraging a diverse set of models in parallel.

- 🔐 **Role-Based Access Control (RBAC)**: Ensure secure access with restricted permissions; only authorized individuals can access your Ollama, and exclusive model creation/pulling rights are reserved for administrators.

- 🌐🌍 **Multilingual Support**: Experience Open WebUI in your preferred language with our internationalization (i18n) support. Join us in expanding our supported languages! We&#039;re actively seeking contributors!

- 🧩 **Pipelines, Open WebUI Plugin Support**: Seamlessly integrate custom logic and Python libraries into Open WebUI using [Pipelines Plugin Framework](https://github.com/open-webui/pipelines). Launch your Pipelines instance, set the OpenAI URL to the Pipelines URL, and explore endless possibilities. [Examples](https://github.com/open-webui/pipelines/tree/main/examples) include **Function Calling**, User **Rate Limiting** to control access, **Usage Monitoring** with tools like Langfuse, **Live Translation with LibreTranslate** for multilingual support, **Toxic Message Filtering** and much more.

- 🌟 **Continuous Updates**: We are committed to improving Open WebUI with regular updates, fixes, and new features.

Want to learn more about Open WebUI&#039;s features? Check out our [Open WebUI documentation](https://docs.openwebui.com/features) for a comprehensive overview!

## Sponsors 🙌

#### Emerald

&lt;table&gt;
  &lt;!-- &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://n8n.io/&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/n8n.png&quot; alt=&quot;n8n&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt; • Does your interface have a backend yet?&lt;br&gt;Try &lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt; --&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;utm_medium=paid-ad-placement&amp;utm_campaign=OpenWebUI-Docs&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/tailscale.png&quot; alt=&quot;Tailscale&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;utm_medium=paid-ad-placement&amp;utm_campaign=OpenWebUI-Docs&quot;&gt;Tailscale&lt;/a&gt; • Connect self-hosted AI to any device with Tailscale
    &lt;/td&gt;
  &lt;/tr&gt;
   &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://warp.dev/open-webui&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/warp.png&quot; alt=&quot;Warp&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://warp.dev/open-webui&quot;&gt;Warp&lt;/a&gt; • The intelligent terminal for developers
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

---

We are incredibly grateful for the generous support of our sponsors. Their contributions help us to maintain and improve our project, ensuring we can continue to deliver quality work to our community. Thank you!

## How to Install 🚀

### Installation via Python pip 🐍

Open WebUI can be installed using pip, the Python package installer. Before proceeding, ensure you&#039;re using **Python 3.11** to avoid compatibility issues.

1. **Install Open WebUI**:
   Open your terminal and run the following command to install Open WebUI:

   ```bash
   pip install open-webui
   ```

2. **Running Open WebUI**:
   After installation, you can start Open WebUI by executing:

   ```bash
   open-webui serve
   ```

This will start the Open WebUI server, which you can access at [http://localhost:8080](http://localhost:8080)

### Quick Start with Docker 🐳

&gt; [!NOTE]  
&gt; Please note that for certain Docker environments, additional configurations might be needed. If you encounter any connection issues, our detailed guide on [Open WebUI Documentation](https://docs.openwebui.com/) is ready to assist you.

&gt; [!WARNING]
&gt; When using Docker to install Open WebUI, make sure to include the `-v open-webui:/app/backend/data` in your Docker command. This step is crucial as it ensures your database is properly mounted and prevents any loss of data.

&gt; [!TIP]  
&gt; If you wish to utilize Open WebUI with Ollama included or CUDA acceleration, we recommend utilizing our official images tagged with either `:cuda` or `:ollama`. To enable CUDA, you must install the [Nvidia CUDA container toolkit](https://docs.nvidia.com/dgx/nvidia-container-runtime-upgrade/) on your Linux/WSL system.

### Installation with Default Configuration

- **If Ollama is on your computer**, use this command:

  ```bash
  docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **If Ollama is on a Different Server**, use this command:

  To connect to Ollama on another server, change the `OLLAMA_BASE_URL` to the server&#039;s URL:

  ```bash
  docker run -d -p 3000:8080 -e OLLAMA_BASE_URL=https://example.com -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **To run Open WebUI with Nvidia GPU support**, use this command:

  ```bash
  docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda
  ```

### Installation for OpenAI API Usage Only

- **If you&#039;re only using OpenAI API**, use this command:

  ```bash
  docker run -d -p 3000:8080 -e OPENAI_API_KEY=your_secret_key -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

### Installing Open WebUI with Bundled Ollama Support

This installation method uses a single container image that bundles Open WebUI with Ollama, allowing for a streamlined setup via a single command. Choose the appropriate command based on your hardware setup:

- **With GPU Support**:
  Utilize GPU resources by running the following command:

  ```bash
  docker run -d -p 3000:8080 --gpus=all -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

- **For CPU Only**:
  If you&#039;re not using a GPU, use this command instead:

  ```bash
  docker run -d -p 3000:8080 -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

Both commands facilitate a built-in, hassle-free installation of both Open WebUI and Ollama, ensuring that you can get everything up and running swiftly.

After installation, you can access Open WebUI at [http://localhost:3000](http://localhost:3000). Enjoy! 😄

### Other Installation Methods

We offer various installation alternatives, including non-Docker native installation methods, Docker Compose, Kustomize, and Helm. Visit our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/) or join our [Discord community](https://discord.gg/5rJgQTnV4s) for comprehensive guidance.

Look at the [Local Development Guide](https://docs.openwebui.com/getting-started/advanced-topics/development) for instructions on setting up a local development environment.

### Troubleshooting

Encountering connection issues? Our [Open WebUI Documentation](https://docs.openwebui.com/troubleshooting/) has got you covered. For further assistance and to join our vibrant community, visit the [Open WebUI Discord](https://discord.gg/5rJgQTnV4s).

#### Open WebUI: Server Connection Error

If you&#039;re experiencing connection issues, it’s often due to the WebUI docker container not being able to reach the Ollama server at 127.0.0.1:11434 (host.docker.internal:11434) inside the container . Use the `--network=host` flag in your docker command to resolve this. Note that the port changes from 3000 to 8080, resulting in the link: `http://localhost:8080`.

**Example Docker Command**:

```bash
docker run -d --network=host -v open-webui:/app/backend/data -e OLLAMA_BASE_URL=http://127.0.0.1:11434 --name open-webui --restart always ghcr.io/open-webui/open-webui:main
```

### Keeping Your Docker Installation Up-to-Date

In case you want to update your local Docker installation to the latest version, you can do it with [Watchtower](https://containrrr.dev/watchtower/):

```bash
docker run --rm --volume /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --run-once open-webui
```

In the last part of the command, replace `open-webui` with your container name if it is different.

Check our Updating Guide available in our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/updating).

### Using the Dev Branch 🌙

&gt; [!WARNING]
&gt; The `:dev` branch contains the latest unstable features and changes. Use it at your own risk as it may have bugs or incomplete features.

If you want to try out the latest bleeding-edge features and are okay with occasional instability, you can use the `:dev` tag like this:

```bash
docker run -d -p 3000:8080 -v open-webui:/app/backend/data --name open-webui --add-host=host.docker.internal:host-gateway --restart always ghcr.io/open-webui/open-webui:dev
```

### Offline Mode

If you are running Open WebUI in an offline environment, you can set the `HF_HUB_OFFLINE` environment variable to `1` to prevent attempts to download models from the internet.

```bash
export HF_HUB_OFFLINE=1
```

## What&#039;s Next? 🌟

Discover upcoming features on our roadmap in the [Open WebUI Documentation](https://docs.openwebui.com/roadmap/).

## License 📜

This project is licensed under the [Open WebUI License](LICENSE), a revised BSD-3-Clause license. You receive all the same rights as the classic BSD-3 license: you can use, modify, and distribute the software, including in proprietary and commercial products, with minimal restrictions. The only additional requirement is to preserve the &quot;Open WebUI&quot; branding, as detailed in the LICENSE file. For full terms, see the [LICENSE](LICENSE) document. 📄

## Support 💬

If you have any questions, suggestions, or need assistance, please open an issue or join our
[Open WebUI Discord community](https://discord.gg/5rJgQTnV4s) to connect with us! 🤝

## Star History

&lt;a href=&quot;https://star-history.com/#open-webui/open-webui&amp;Date&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&amp;theme=dark&quot; /&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
    &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

---

Created by [Timothy Jaeryang Baek](https://github.com/tjbck) - Let&#039;s make Open WebUI even more amazing together! 💪
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[zumerlab/snapdom]]></title>
            <link>https://github.com/zumerlab/snapdom</link>
            <guid>https://github.com/zumerlab/snapdom</guid>
            <pubDate>Sat, 20 Sep 2025 00:04:25 GMT</pubDate>
            <description><![CDATA[snapDOM captures HTML elements to images with exceptional speed and accuracy.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/zumerlab/snapdom">zumerlab/snapdom</a></h1>
            <p>snapDOM captures HTML elements to images with exceptional speed and accuracy.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,101</p>
            <p>Forks: 194</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;http://zumerlab.github.io/snapdom&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/zumerlab/snapdom/main/docs/assets/newhero.png&quot; width=&quot;80%&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
 &lt;a href=&quot;https://www.npmjs.com/package/@zumer/snapdom&quot;&gt;
    &lt;img alt=&quot;NPM version&quot; src=&quot;https://img.shields.io/npm/v/@zumer/snapdom?style=flat-square&amp;label=Version&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/zumerlab/snapdom/graphs/contributors&quot;&gt;
    &lt;img alt=&quot;GitHub contributors&quot; src=&quot;https://img.shields.io/github/contributors/zumerlab/snapdom?style=flat-square&amp;label=Contributors&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/zumerlab/snapdom/stargazers&quot;&gt;
    &lt;img alt=&quot;GitHub stars&quot; src=&quot;https://img.shields.io/github/stars/zumerlab/snapdom?style=flat-square&amp;label=Stars&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/zumerlab/snapdom/network/members&quot;&gt;
    &lt;img alt=&quot;GitHub forks&quot; src=&quot;https://img.shields.io/github/forks/zumerlab/snapdom?style=flat-square&amp;label=Forks&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/sponsors/tinchox5&quot;&gt;
    &lt;img alt=&quot;Sponsor tinchox5&quot; src=&quot;https://img.shields.io/github/sponsors/tinchox5?style=flat-square&amp;label=Sponsor&quot;&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/zumerlab/snapdom/blob/main/LICENSE&quot;&gt;
    &lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/github/license/zumerlab/snapdom?style=flat-square&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

# snapDOM

**snapDOM** is a fast and accurate DOM-to-image capture tool built for **Zumly**, a zoom-based view transition framework.

It captures any HTML element as a scalable SVG image, preserving styles, fonts, background images, pseudo-elements, and even shadow DOM. It also supports export to raster image formats and canvas.

* 📸 Full DOM capture
* 🎨 Embedded styles, pseudo-elements, and fonts
* 🖼️ Export to SVG, PNG, JPG, WebP, `canvas`, or Blob
* ⚡ Ultra fast, no dependencies
* 📦 100% based on standard Web APIs

## Demo

[https://zumerlab.github.io/snapdom/](https://zumerlab.github.io/snapdom/)


## Table of Contents

- [Installation](#installation)
  - [NPM / Yarn](#npm--yarn)
  - [CDN](#cdn)
  - [Script tag (local)](#script-tag-local)
  - [ES Module](#es-module)
  - [Module via CDN](#module-via-cdn)
- [Basic usage](#basic-usage)
  - [Reusable capture](#reusable-capture)
  - [One-step shortcuts](#one-step-shortcuts)
- [API](#api)
  - [snapdom(el, options?)](#snapdomel-options)
  - [Shortcut methods](#shortcut-methods)
- [Options](#options)
  - [Fallback image on `&lt;img&gt;` load failure](#fallback-image-on-img-load-failure)
  - [Dimensions (`scale`, `width`, `height`)](#dimensions-scale-width-height)
  - [Cross-Origin Images &amp; Fonts (`useProxy`)](#cross-origin-images--fonts-useproxy)
  - [Fonts](#fonts)
    - [embedFonts](#embedfonts)
    - [localFonts](#localfonts)
    - [iconFonts](#iconfonts)
    - [excludeFonts](#excludefonts)
  - [Filtering nodes: `exclude` vs `filter`](#filtering-nodes-exclude-vs-filter)
  - [preCache() – Optional helper](#precache--optional-helper)
  - [Cache control](#cache-control)
- [Limitations](#limitations)
- [⚡ Performance Benchmarks (Chromium)](#performance-benchmarks)
  - [Simple elements](#simple-elements)
  - [Complex elements](#complex-elements)
  - [Run the benchmarks](#run-the-benchmarks)
- [Roadmap](#roadmap)
- [Development](#development)
- [Contributors 🙌](#contributors)
- [💖 Sponsors](#sponsors)
- [Star History](#star-history)
- [License](#license)


## Installation

### NPM / Yarn

```sh
npm i @zumer/snapdom
```

```sh
yarn add @zumer/snapdom
```

Then import it in your code:

```js
import { snapdom } from &#039;@zumer/snapdom&#039;;
```

### CDN

```html
&lt;script src=&quot;https://cdn.jsdelivr.net/npm/@zumer/snapdom/dist/snapdom.min.js&quot;&gt;&lt;/script&gt;
```

### Script tag (local)

```html
&lt;script src=&quot;snapdom.js&quot;&gt;&lt;/script&gt;
```

### ES Module

```js
import { snapdom } from &#039;./snapdom.mjs&#039;;
```

### Module via CDN

```html
&lt;script type=&quot;module&quot;&gt;
  import { snapdom } from &#039;https://cdn.jsdelivr.net/npm/@zumer/snapdom/dist/snapdom.mjs&#039;;
&lt;/script&gt;
```

## Basic usage

### Reusable capture
```js
const el = document.querySelector(&#039;#target&#039;);
const result = await snapdom(el);

const img = await result.toPng();
document.body.appendChild(img);

await result.download({ format: &#039;jpg&#039;, filename: &#039;my-capture&#039; });
```

### One-step shortcuts
```js
const el = document.querySelector(&#039;#target&#039;);
const png = await snapdom.toPng(el);
document.body.appendChild(png);

const blob = await snapdom.toBlob(el);
```

## API

### `snapdom(el, options?)`

Returns an object with reusable export methods:

```js
{
  url: string;
  toRaw(): string;
  toImg(): Promise&lt;HTMLImageElement&gt;;
  toCanvas(): Promise&lt;HTMLCanvasElement&gt;;
  toBlob(options?): Promise&lt;Blob&gt;;
  toPng(options?): Promise&lt;HTMLImageElement&gt;;
  toJpg(options?): Promise&lt;HTMLImageElement&gt;;
  toWebp(options?): Promise&lt;HTMLImageElement&gt;;
  download(options?): Promise&lt;void&gt;;
}
```

### Shortcut methods

| Method                         | Description                       |
| ------------------------------ | --------------------------------- |
| `snapdom.toImg(el, options?)`  | Returns an `HTMLImageElement`     |
| `snapdom.toCanvas(el, options?)` | Returns a `Canvas`               |
| `snapdom.toBlob(el, options?)` | Returns an SVG or raster `Blob`   |
| `snapdom.toPng(el, options?)`  | Returns a PNG image               |
| `snapdom.toJpg(el, options?)`  | Returns a JPG image               |
| `snapdom.toWebp(el, options?)` | Returns a WebP image              |
| `snapdom.download(el, options?)` | Triggers a download              |

## Options

&gt; ✅ **Note:** Style compression is now always on internally. The `compress` option has been removed.

All capture methods accept an `options` object:

| Option            | Type     | Default  | Description                                     |
| ----------------- | -------- | -------- | ----------------------------------------------- |
| `fast`            | boolean  | `true`   | Skips small idle delays for faster results      |
| `embedFonts`      | boolean  | `false`  | Inlines non-icon fonts (icon fonts always on)   |
| `localFonts`      | array    | `[]`     | Local fonts `{ family, src, weight?, style? }`  |
| `iconFonts`       | string\|RegExp\|Array | `[]` | Extra icon font matchers                      |
| `excludeFonts`    | object  | `{}`     | Exclude font families/domains/subsets during embedding |
| `scale`           | number   | `1`      | Output scale multiplier                         |
| `dpr`             | number   | `devicePixelRatio` | Device pixel ratio                     |
| `width`           | number   | -        | Output width                                    |
| `height`          | number   | -        | Output height                                   |
| `backgroundColor` | string   | `&quot;#fff&quot;` | Fallback color for JPG/WebP                     |
| `quality`         | number   | `1`      | Quality for JPG/WebP (0 to 1)                   |
| `useProxy`        | string   | `&#039;&#039;`     | Proxy base for CORS fallbacks                   |
| `type`            | string   | `svg`    | Default Blob type (`svg`\|`png`\|`jpg`\|`webp`) |
| `exclude`         | string[] | -        | CSS selectors to exclude                        |
| `filter`          | function | -        | Custom predicate `(el) =&gt; boolean`              |
| `cache`           | string   | `&quot;soft&quot;` | Control internal caches: `disabled`, `soft`, `auto`, `full` |
| `defaultImageUrl` | string \| function  | -                  | Fallback image when an `&lt;img&gt;` fails. If a function is provided, it receives `{ width?, height?, src?, element }` and must return a URL (string or Promise&lt;string&gt;). Useful for placeholder services (e.g. `https://placehold.co/{width}x{height}`) |

### Fallback image on `&lt;img&gt;` load failure

Provide a default image for failed `&lt;img&gt;` loads. You can pass a fixed URL or a callback that receives measured dimensions and returns a URL (handy to generate dynamic placeholders).

```js
// 1) Fixed URL fallback
await snapdom.toImg(element, {
  defaultImageUrl: &#039;/images/fallback.png&#039;
});

// 2) Dynamic placeholder via callback
await snapdom.toImg(element, {
  defaultImageUrl: ({ width = 300, height = 150 }) =&gt;
    `https://placehold.co/${Math.round(width)}x${Math.round(height)}`
});

// 3) With proxy (if your fallback host has no CORS)
await snapdom.toImg(element, {
  defaultImageUrl: ({ width = 300, height = 150 }) =&gt;
    `https://dummyimage.com/${Math.round(width)}x${Math.round(height)}/cccccc/666.png&amp;text=img`,
  useProxy: &#039;https://corsproxy.io/?url=&#039;
});
```

Notes:
- If the fallback image also fails to load, snapDOM replaces the `&lt;img&gt;` with a placeholder block preserving width/height.
- Width/height used by the callback are gathered from the original element (dataset, style/attrs, etc.) when available.


### Dimensions (`scale`, `width`, `height`)

* If `scale` is provided, it **takes precedence** over `width`/`height`.
* If only `width` is provided, height scales proportionally (and vice versa).
* Providing both `width` and `height` forces an exact size (may distort).

### Cross-Origin Images &amp; Fonts (`useProxy`)

By default snapDOM tries `crossOrigin=&quot;anonymous&quot;` (or `use-credentials` for same-origin). If an asset is CORS-blocked, you can set `useProxy` to a prefix URL that forwards the actual `src`:

```js
await snapdom.toPng(el, {
  useProxy: &#039;your-proxy&#039; // Example &#039;https://api.allorigins.win/raw?url=&#039;
});
```

**Tips**

* Keep the proxy **fast** and **cache-friendly** (adds big wins on repeated captures).
* The proxy is only used as a **fallback**; same-origin and CORS-enabled assets skip it.

### Fonts

#### `embedFonts`
When `true`, snapDOM embeds **non-icon** `@font-face` rules detected as used within the captured subtree. Icon fonts (Font Awesome, Material Icons, etc.) are embedded **always**.

#### `localFonts`
If you serve fonts yourself or have data URLs, you can declare them here to avoid extra CSS discovery:

```js
await snapdom.toPng(el, {
  embedFonts: true,
  localFonts: [
    { family: &#039;Inter&#039;, src: &#039;/fonts/Inter-Variable.woff2&#039;, weight: 400, style: &#039;normal&#039; },
    { family: &#039;Inter&#039;, src: &#039;/fonts/Inter-Italic.woff2&#039;, style: &#039;italic&#039; }
  ]
});
```

#### `iconFonts`
Add custom icon families (names or regex matchers). Useful for private icon sets:

```js
await snapdom.toPng(el, {
  iconFonts: [&#039;MyIcons&#039;, /^(Remix|Feather) Icons?$/i]
});
```

#### `excludeFonts`
Skip specific non-icon fonts to speed up capture or avoid unnecessary downloads.

```js
await snapdom.toPng(el, {
  embedFonts: true,
  excludeFonts: {
    families: [&#039;Noto Serif&#039;, &#039;SomeHeavyFont&#039;],     // skip by family name
    domains: [&#039;fonts.gstatic.com&#039;, &#039;cdn.example&#039;], // skip by source host
    subsets: [&#039;cyrillic-ext&#039;]                      // skip by unicode-range subset tag
  }
});
```
*Notes*
- `excludeFonts` only applies to **non-icon** fonts. Icon fonts are always embedded.
- Matching is case-insensitive for `families`. Hosts are matched by substring against the resolved URL.


### Filtering nodes: `exclude` vs `filter`

* `exclude`: remove by **selector**.
* `filter`: advanced predicate per element (return `false` to drop).

**Example: filter out elements with `display:none`:**
```js
/**
 * Example filter: skip elements with display:none
 * @param {Element} el
 * @returns {boolean} true = keep, false = exclude
 */
function filterHidden(el) {
  const cs = window.getComputedStyle(el);
  if (cs.display === &#039;none&#039;) return false;
  return true;
}

await snapdom.toPng(document.body, { filter: filterHidden });
```

**Example with `exclude`:** remove banners or tooltips by selector
```js
await snapdom.toPng(el, {
  exclude: [&#039;.cookie-banner&#039;, &#039;.tooltip&#039;, &#039;[data-test=&quot;debug&quot;]&#039;]
});
```
### `preCache()` – Optional helper

Preloads external resources to avoid first-capture stalls (helpful for big/complex trees).

```js
import { preCache } from &#039;@zumer/snapdom&#039;;

await preCache({
  root: document.body,
  embedFonts: true,
  localFonts: [{ family: &#039;Inter&#039;, src: &#039;/fonts/Inter.woff2&#039;, weight: 400 }],
  useProxy: &#039;your-proxy&#039;
});
```

### Cache control

SnapDOM maintains internal caches for images, backgrounds, resources, styles, and fonts.  
You can control how they are cleared between captures using the `cache` option:

| Mode        | Description                                                                 |
| ----------- | --------------------------------------------------------------------------- |
| `&quot;disabled&quot;`| No cache                   |
| `&quot;soft&quot;`    | Clears session caches (`styleMap`, `nodeMap`, `styleCache`) _(default)_      |
| `&quot;auto&quot;`    | Minimal cleanup: only clears transient maps                                 |
| `&quot;full&quot;`    | Keeps all caches (nothing is cleared, maximum performance)                  |

**Examples:**

```js
// Use minimal but fast cache
await snapdom.toPng(el, { cache: &#039;auto&#039; });

// Keep everything in memory between captures
await snapdom.toPng(el, { cache: &#039;full&#039; });

// Force a full cleanup on every capture
await snapdom.toPng(el, { cache: &#039;disabled&#039; });
```

## Limitations

* External images should be CORS-accessible (use `useProxy` option for handling CORS denied)
* When WebP format is used on Safari, it will fallback to PNG rendering.
* `@font-face` CSS rule is well supported, but if need to use JS `FontFace()`, see this workaround [`#43`](https://github.com/zumerlab/snapdom/issues/43)


## Performance Benchmarks

**Setup.** Vitest benchmarks on Chromium, repo tests. Hardware may affect results.
Values are **average capture time (ms)** → lower is better.

### Simple elements

| Scenario                 | SnapDOM current | SnapDOM v1.9.9 | html2canvas | html-to-image |
| ------------------------ | --------------- | -------------- | ----------- | ------------- |
| Small (200×100)          | **0.5 ms**      | 0.8 ms         | 67.7 ms     | 3.1 ms        |
| Modal (400×300)          | **0.5 ms**      | 0.8 ms         | 75.5 ms     | 3.6 ms        |
| Page View (1200×800)     | **0.5 ms**      | 0.8 ms         | 114.2 ms    | 3.3 ms        |
| Large Scroll (2000×1500) | **0.5 ms**      | 0.8 ms         | 186.3 ms    | 3.2 ms        |
| Very Large (4000×2000)   | **0.5 ms**      | 0.9 ms         | 425.9 ms    | 3.3 ms        |

---

### Complex elements

| Scenario                 | SnapDOM current | SnapDOM v1.9.9 | html2canvas | html-to-image |
| ------------------------ | --------------- | -------------- | ----------- | ------------- |
| Small (200×100)          | **1.6 ms**      | 3.3 ms         | 68.0 ms     | 14.3 ms       |
| Modal (400×300)          | **2.9 ms**      | 6.8 ms         | 87.5 ms     | 34.8 ms       |
| Page View (1200×800)     | **17.5 ms**     | 50.2 ms        | 178.0 ms    | 429.0 ms      |
| Large Scroll (2000×1500) | **54.0 ms**     | 201.8 ms       | 735.2 ms    | 984.2 ms      |
| Very Large (4000×2000)   | **171.4 ms**    | 453.7 ms       | 1,800.4 ms  | 2,611.9 ms    |


### Run the benchmarks

```sh
git clone https://github.com/zumerlab/snapdom.git
cd snapdom
npm install
npm run test:benchmark
```


## Roadmap

Planned improvements for future versions of SnapDOM:

* [ ] **Implement plugin system**
  SnapDOM will support external plugins to extend or override internal behavior (e.g. custom node transformers, exporters, or filters).

* [ ] **Refactor to modular architecture**
  Internal logic will be split into smaller, focused modules to improve maintainability and code reuse.

* [X] **Decouple internal logic from global options**
  Functions will be redesigned to avoid relying directly on `options`. A centralized capture context will improve clarity, autonomy, and testability. See [`next` branch](https://github.com/zumerlab/snapdom/tree/main)

* [X] **Expose cache control**
  Users will be able to manually clear image and font caches or configure their own caching strategies.

* [X] **Auto font preloading**
  Required fonts will be automatically detected and preloaded before capture, reducing the need for manual `preCache()` calls.

* [ ] **Document plugin development**
  A full guide will be provided for creating and registering custom SnapDOM plugins.

* [ ] **Make export utilities tree-shakeable**
  Export functions like `toPng`, `toJpg`, `toBlob`, etc. will be restructured into independent modules to support tree shaking and minimal builds.

Have ideas or feature requests?
Feel free to share suggestions or feedback in [GitHub Discussions](https://github.com/zumerlab/snapdom/discussions).


## Development

To contribute or build snapDOM locally:

```sh
# Clone the repository
git clone https://github.com/zumerlab/snapdom.git
cd snapdom

# Switch to dev branch
git checkout dev

# Install dependencies
npm install

# Compile the library (ESM, CJS, and minified versions)
npm run compile

# Install playwright browsers (necessary for running tests)
npx playwright install

# Run tests
npm test

# Run Benchmarks
npm run test:benchmark
```

The main entry point is in `src/`, and output bundles are generated in the `dist/` folder.

For detailed contribution guidelines, please see [CONTRIBUTING](https://github.com/zumerlab/snapdom/blob/main/CONTRIBUTING.md).


## Contributors

&lt;!-- CONTRIBUTORS:START --&gt;
&lt;p&gt;
&lt;a href=&quot;https://github.com/tinchox5&quot; title=&quot;tinchox5&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11557901?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;tinchox5&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/Jarvis2018&quot; title=&quot;Jarvis2018&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/36788851?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;Jarvis2018&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/tarwin&quot; title=&quot;tarwin&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/646149?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;tarwin&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/17biubiu&quot; title=&quot;17biubiu&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13295895?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;17biubiu&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/av01d&quot; title=&quot;av01d&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6247646?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;av01d&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/CHOYSEN&quot; title=&quot;CHOYSEN&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/25995358?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;CHOYSEN&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/pedrocateexte&quot; title=&quot;pedrocateexte&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/207524750?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;pedrocateexte&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/domialex&quot; title=&quot;domialex&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4694217?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;domialex&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/elliots&quot; title=&quot;elliots&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/622455?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;elliots&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/jswhisperer&quot; title=&quot;jswhisperer&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1177690?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;jswhisperer&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/sharuzzaman&quot; title=&quot;sharuzzaman&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7421941?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;sharuzzaman&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/simon1uo&quot; title=&quot;simon1uo&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/60037549?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;simon1uo&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/titoBouzout&quot; title=&quot;titoBouzout&quot;&gt;&lt;img src=&quot;https:

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[sveltejs/svelte]]></title>
            <link>https://github.com/sveltejs/svelte</link>
            <guid>https://github.com/sveltejs/svelte</guid>
            <pubDate>Sat, 20 Sep 2025 00:04:24 GMT</pubDate>
            <description><![CDATA[web development for the rest of us]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/sveltejs/svelte">sveltejs/svelte</a></h1>
            <p>web development for the rest of us</p>
            <p>Language: JavaScript</p>
            <p>Stars: 84,179</p>
            <p>Forks: 4,620</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre>&lt;a href=&quot;https://svelte.dev&quot;&gt;
	&lt;picture&gt;
		&lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;assets/banner_dark.png&quot;&gt;
		&lt;img src=&quot;assets/banner.png&quot; alt=&quot;Svelte - web development for the rest of us&quot; /&gt;
	&lt;/picture&gt;
&lt;/a&gt;

[![License](https://img.shields.io/npm/l/svelte.svg)](LICENSE.md) [![Chat](https://img.shields.io/discord/457912077277855764?label=chat&amp;logo=discord)](https://svelte.dev/chat)

## What is Svelte?

Svelte is a new way to build web applications. It&#039;s a compiler that takes your declarative components and converts them into efficient JavaScript that surgically updates the DOM.

Learn more at the [Svelte website](https://svelte.dev), or stop by the [Discord chatroom](https://svelte.dev/chat).

## Supporting Svelte

Svelte is an MIT-licensed open source project with its ongoing development made possible entirely by fantastic volunteers. If you&#039;d like to support their efforts, please consider:

- [Becoming a backer on Open Collective](https://opencollective.com/svelte).

Funds donated via Open Collective will be used for compensating expenses related to Svelte&#039;s development such as hosting costs. If sufficient donations are received, funds may also be used to support Svelte&#039;s development more directly.

## Roadmap

You may view [our roadmap](https://svelte.dev/roadmap) if you&#039;d like to see what we&#039;re currently working on.

## Contributing

Please see the [Contributing Guide](CONTRIBUTING.md) and the [`svelte`](packages/svelte) package for information on contributing to Svelte.

## Is svelte.dev down?

Probably not, but it&#039;s possible. If you can&#039;t seem to access any `.dev` sites, check out [this SuperUser question and answer](https://superuser.com/q/1413402).

## License

[MIT](LICENSE.md)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[PavelDoGreat/WebGL-Fluid-Simulation]]></title>
            <link>https://github.com/PavelDoGreat/WebGL-Fluid-Simulation</link>
            <guid>https://github.com/PavelDoGreat/WebGL-Fluid-Simulation</guid>
            <pubDate>Sat, 20 Sep 2025 00:04:23 GMT</pubDate>
            <description><![CDATA[Play with fluids in your browser (works even on mobile)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/PavelDoGreat/WebGL-Fluid-Simulation">PavelDoGreat/WebGL-Fluid-Simulation</a></h1>
            <p>Play with fluids in your browser (works even on mobile)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 15,805</p>
            <p>Forks: 1,802</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre># WebGL Fluid Simulation

[Play here](https://paveldogreat.github.io/WebGL-Fluid-Simulation/)

&lt;img src=&quot;/screenshot.jpg?raw=true&quot; width=&quot;880&quot;&gt;

## References

https://developer.nvidia.com/gpugems/gpugems/part-vi-beyond-triangles/chapter-38-fast-fluid-dynamics-simulation-gpu

https://github.com/mharrys/fluids-2d

https://github.com/haxiomic/GPU-Fluid-Experiments

## License

The code is available under the [MIT license](LICENSE)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[modood/Administrative-divisions-of-China]]></title>
            <link>https://github.com/modood/Administrative-divisions-of-China</link>
            <guid>https://github.com/modood/Administrative-divisions-of-China</guid>
            <pubDate>Sat, 20 Sep 2025 00:04:22 GMT</pubDate>
            <description><![CDATA[中华人民共和国行政区划：省级（省份）、 地级（城市）、 县级（区县）、 乡级（乡镇街道）、 村级（村委会居委会） ，中国省市区镇村二级三级四级五级联动地址数据。]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/modood/Administrative-divisions-of-China">modood/Administrative-divisions-of-China</a></h1>
            <p>中华人民共和国行政区划：省级（省份）、 地级（城市）、 县级（区县）、 乡级（乡镇街道）、 村级（村委会居委会） ，中国省市区镇村二级三级四级五级联动地址数据。</p>
            <p>Language: JavaScript</p>
            <p>Stars: 20,007</p>
            <p>Forks: 7,182</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre># Administrative-divisions-of-China

[![code style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)
[![npm](https://img.shields.io/npm/v/china-division.svg)](https://www.npmjs.com/package/china-division)
[![downloads](https://img.shields.io/npm/dt/china-division.svg)](https://www.npmjs.com/package/china-division)
[![license](https://img.shields.io/badge/license-WTFPL%20--%20Do%20What%20the%20Fuck%20You%20Want%20to%20Public%20License-green.svg)](https://raw.githubusercontent.com/modood/Administrative-divisions-of-China/master/LICENSE)

中华人民共和国行政区划（五级）：省级、地级、县级、乡级和村级。

## 数据来源

*   国家统计局：
    * 中华人民共和国国家统计局-统计用区划和城乡划分代码
    * [中华人民共和国国家统计局-统计用区划代码和城乡划分代码编制规则](http://www.stats.gov.cn/sj/tjbz/gjtjbz/202302/t20230213_1902741.html)
*   本项目已更新至：
    * 2023年统计用区划代码和城乡划分代码（截止时间：2023-06-30，发布时间：2023-09-11）

## 数据下载

| 文件列表                     | JSON | CSV |
|:-----------------------------|:-----|:----|
| 省级（省份、直辖市、自治区） | [provinces.json](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/provinces.json) | [provinces.csv](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/provinces.csv) |
| 地级（城市）                 | [cities.json](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/cities.json) | [cities.csv](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/cities.csv) |
| 县级（区县）                 | [areas.json](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/areas.json) | [areas.csv](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/areas.csv) |
| 乡级（乡镇、街道）           | [streets.json](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/streets.json) | [streets.csv](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/streets.csv) |
| 村级（村委会、居委会）       | [villages.json](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/villages.json) | [villages.csv](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/villages.csv) |

| 文件列表                                    | 普通 | 带编码 |
|:--------------------------------------------|:-----|:-------|
| “省份、城市” 二级联动数据                   | [pc.json](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/pc.json) | [pc-code.json](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/pc-code.json) |
| “省份、城市、区县” 三级联动数据             | [pca.json](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/pca.json) | [pca-code.json](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/pca-code.json) |
| “省份、城市、区县、乡镇” 四级联动数据       | [pcas.json](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/pcas.json) | [pcas-code.json](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/pcas-code.json) |
| “省份、城市、区县、乡镇、村庄” 五级联动数据 | - | - |

&gt; 提示：需要打包下载全部文件，请看 [Releases](https://github.com/modood/Administrative-divisions-of-China/releases)。

## 数据库支持

目前本项目数据保存在 sqlite3，数据文件下载：[data.sqlite](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/data.sqlite)。

可以自己将数据迁移到其他数据库管理系统中（MySQL, Oracle, MSSQL 等）。

**省级数据预览**

| code | name           |
|:-----|:---------------|
| 13   | 河北省         |
| 14   | 山西省         |
| 15   | 内蒙古自治区   |
| 45   | 广西壮族自治区 |

**地级数据预览**

| code | name       | provinceCode |
|:-----|:-----------|:-------------|
| 1301 | 石家庄市   | 13           |
| 1401 | 太原市     | 14           |
| 1525 | 锡林郭勒盟 | 15           |
| 4503 | 桂林市     | 45           |

**县级数据预览**

| code   | name     | cityCode | provinceCode |
|:-------|:---------|:---------|:-------------|
| 130111 | 栾城区   | 1301     | 13           |
| 140121 | 清徐县   | 1401     | 14           |
| 152527 | 太仆寺旗 | 1525     | 15           |
| 450305 | 七星区   | 4503     | 45           |

**乡级数据预览**

| code      | name           | areaCode | cityCode | provinceCode |
|:----------|:---------------|:---------|:---------|:-------------|
| 130111200 | 南高乡         | 130111   | 1301     | 13           |
| 140121102 | 东于镇         | 140121   | 1401     | 14           |
| 152527201 | 贡宝拉格苏木   | 152527   | 1525     | 15           |
| 450305004 | 漓东街道办事处 | 450305   | 4503     | 45           |

**村级数据预览**

| code         | name           | streetCode | areaCode | cityCode | provinceCode |
|:-------------|:---------------|:-----------|:---------|:---------|:-------------|
| 130111200201 | 南高村委会     | 130111200  | 130111   | 1301     | 13           |
| 140121102001 | 东于社区居委会 | 140121102  | 140121   | 1401     | 14           |
| 152527201206 | 敦达乌苏嘎查   | 152527201  | 152527   | 1525     | 15           |
| 450305004006 | 横塘社区       | 450305004  | 450305   | 4503     | 45           |

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[advplyr/audiobookshelf]]></title>
            <link>https://github.com/advplyr/audiobookshelf</link>
            <guid>https://github.com/advplyr/audiobookshelf</guid>
            <pubDate>Sat, 20 Sep 2025 00:04:21 GMT</pubDate>
            <description><![CDATA[Self-hosted audiobook and podcast server]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/advplyr/audiobookshelf">advplyr/audiobookshelf</a></h1>
            <p>Self-hosted audiobook and podcast server</p>
            <p>Language: JavaScript</p>
            <p>Stars: 10,112</p>
            <p>Forks: 705</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WiseLibs/better-sqlite3]]></title>
            <link>https://github.com/WiseLibs/better-sqlite3</link>
            <guid>https://github.com/WiseLibs/better-sqlite3</guid>
            <pubDate>Sat, 20 Sep 2025 00:04:20 GMT</pubDate>
            <description><![CDATA[The fastest and simplest library for SQLite3 in Node.js.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WiseLibs/better-sqlite3">WiseLibs/better-sqlite3</a></h1>
            <p>The fastest and simplest library for SQLite3 in Node.js.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,465</p>
            <p>Forks: 426</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre># better-sqlite3 [![Build Status](https://github.com/JoshuaWise/better-sqlite3/actions/workflows/build.yml/badge.svg)](https://github.com/JoshuaWise/better-sqlite3/actions/workflows/build.yml?query=branch%3Amaster)

The fastest and simplest library for SQLite in Node.js.

- Full transaction support
- High performance, efficiency, and safety
- Easy-to-use synchronous API *(better concurrency than an asynchronous API... yes, you read that correctly)*
- Support for user-defined functions, aggregates, virtual tables, and extensions
- 64-bit integers *(invisible until you need them)*
- Worker thread support *(for large/slow queries)*

## Help this project stay strong! &amp;#128170;

`better-sqlite3` is used by thousands of developers and engineers on a daily basis. Long nights and weekends were spent keeping this project strong and dependable, with no ask for compensation or funding, until now. If your company uses `better-sqlite3`, ask your manager to consider supporting the project:

- [Become a GitHub sponsor](https://github.com/sponsors/JoshuaWise)
- [Become a backer on Patreon](https://www.patreon.com/joshuawise)
- [Make a one-time donation on PayPal](https://www.paypal.me/joshuathomaswise)

## How other libraries compare

|   |select 1 row &amp;nbsp;`get()`&amp;nbsp;|select 100 rows &amp;nbsp;&amp;nbsp;`all()`&amp;nbsp;&amp;nbsp;|select 100 rows `iterate()` 1-by-1|insert 1 row `run()`|insert 100 rows in a transaction|
|---|---|---|---|---|---|
|better-sqlite3|1x|1x|1x|1x|1x|
|[sqlite](https://www.npmjs.com/package/sqlite) and [sqlite3](https://www.npmjs.com/package/sqlite3)|11.7x slower|2.9x slower|24.4x slower|2.8x slower|15.6x slower|

&gt; You can verify these results by [running the benchmark yourself](./docs/benchmark.md).

## Installation

```bash
npm install better-sqlite3
```

&gt; Requires Node.js v14.21.1 or later. Prebuilt binaries are available for [LTS versions](https://nodejs.org/en/about/releases/). If you have trouble installing, check the [troubleshooting guide](./docs/troubleshooting.md).

## Usage

```js
const db = require(&#039;better-sqlite3&#039;)(&#039;foobar.db&#039;, options);

const row = db.prepare(&#039;SELECT * FROM users WHERE id = ?&#039;).get(userId);
console.log(row.firstName, row.lastName, row.email);
```

Though not required, [it is generally important to set the WAL pragma for performance reasons](https://github.com/WiseLibs/better-sqlite3/blob/master/docs/performance.md).

```js
db.pragma(&#039;journal_mode = WAL&#039;);
```

##### In ES6 module notation:

```js
import Database from &#039;better-sqlite3&#039;;
const db = new Database(&#039;foobar.db&#039;, options);
db.pragma(&#039;journal_mode = WAL&#039;);
```

## Why should I use this instead of [node-sqlite3](https://github.com/mapbox/node-sqlite3)?

- `node-sqlite3` uses asynchronous APIs for tasks that are either CPU-bound or serialized. That&#039;s not only bad design, but it wastes tons of resources. It also causes [mutex thrashing](https://en.wikipedia.org/wiki/Resource_contention) which has devastating effects on performance.
- `node-sqlite3` exposes low-level (C language) memory management functions. `better-sqlite3` does it the JavaScript way, allowing the garbage collector to worry about memory management.
- `better-sqlite3` is simpler to use, and it provides nice utilities for some operations that are very difficult or impossible in `node-sqlite3`.
- `better-sqlite3` is much faster than `node-sqlite3` in most cases, and just as fast in all other cases.

#### When is this library not appropriate?

In most cases, if you&#039;re attempting something that cannot be reasonably accomplished with `better-sqlite3`, it probably cannot be reasonably accomplished with SQLite in general. For example, if you&#039;re executing queries that take one second to complete, and you expect to have many concurrent users executing those queries, no amount of asynchronicity will save you from SQLite&#039;s serialized nature. Fortunately, SQLite is very *very* fast. With proper indexing, we&#039;ve been able to achieve upward of 2000 queries per second with 5-way-joins in a 60 GB database, where each query was handling 5–50 kilobytes of real data.

If you have a performance problem, the most likely causes are inefficient queries, improper indexing, or a lack of [WAL mode](./docs/performance.md)—not `better-sqlite3` itself. However, there are some cases where `better-sqlite3` could be inappropriate:

- If you expect a high volume of concurrent reads each returning many megabytes of data (i.e., videos)
- If you expect a high volume of concurrent writes (i.e., a social media site)
- If your database&#039;s size is near the terabyte range

For these situations, you should probably use a full-fledged RDBMS such as [PostgreSQL](https://www.postgresql.org/).

## Upgrading

Upgrading your `better-sqlite3` dependency can potentially introduce breaking changes, either in the `better-sqlite3` API (if you upgrade to a new [major version](https://semver.org/)), or between your existing database(s) and the underlying version of SQLite. Before upgrading, review:

* [`better-sqlite3` release notes](https://github.com/WiseLibs/better-sqlite3/releases)
* [SQLite release history](https://www.sqlite.org/changes.html)

# Documentation

- [API documentation](./docs/api.md)
- [Performance](./docs/performance.md) (also see [benchmark results](./docs/benchmark.md))
- [64-bit integer support](./docs/integer.md)
- [Worker thread support](./docs/threads.md)
- [Unsafe mode (advanced)](./docs/unsafe.md)
- [SQLite compilation (advanced)](./docs/compilation.md)
- [Contribution rules](./docs/contribution.md)
- [Code of conduct](./docs/conduct.md)

# License

[MIT](./LICENSE)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[trekhleb/javascript-algorithms]]></title>
            <link>https://github.com/trekhleb/javascript-algorithms</link>
            <guid>https://github.com/trekhleb/javascript-algorithms</guid>
            <pubDate>Sat, 20 Sep 2025 00:04:19 GMT</pubDate>
            <description><![CDATA[📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/trekhleb/javascript-algorithms">trekhleb/javascript-algorithms</a></h1>
            <p>📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings</p>
            <p>Language: JavaScript</p>
            <p>Stars: 193,330</p>
            <p>Forks: 30,887</p>
            <p>Stars today: 25 stars today</p>
            <h2>README</h2><pre># JavaScript Algorithms and Data Structures

&gt; 🇺🇦 UKRAINE [IS BEING ATTACKED](https://war.ukraine.ua/) BY RUSSIAN ARMY. CIVILIANS ARE GETTING KILLED. RESIDENTIAL AREAS ARE GETTING BOMBED.
&gt; - Help Ukraine via:
&gt;   - [Serhiy Prytula Charity Foundation](https://prytulafoundation.org/en/)
&gt;   - [Come Back Alive Charity Foundation](https://savelife.in.ua/en/donate-en/)
&gt;   - [National Bank of Ukraine](https://bank.gov.ua/en/news/all/natsionalniy-bank-vidkriv-spetsrahunok-dlya-zboru-koshtiv-na-potrebi-armiyi)
&gt; - More info on [war.ukraine.ua](https://war.ukraine.ua/) and [MFA of Ukraine](https://twitter.com/MFA_Ukraine)

&lt;hr/&gt;

[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)
[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)
![repo size](https://img.shields.io/github/repo-size/trekhleb/javascript-algorithms.svg)

This repository contains JavaScript based examples of many
popular algorithms and data structures.

Each algorithm and data structure has its own separate README
with related explanations and links for further reading (including ones
to YouTube videos).

_Read this in other languages:_
[_简体中文_](README.zh-CN.md),
[_繁體中文_](README.zh-TW.md),
[_한국어_](README.ko-KR.md),
[_日本語_](README.ja-JP.md),
[_Polski_](README.pl-PL.md),
[_Français_](README.fr-FR.md),
[_Español_](README.es-ES.md),
[_Português_](README.pt-BR.md),
[_Русский_](README.ru-RU.md),
[_Türkçe_](README.tr-TR.md),
[_Italiano_](README.it-IT.md),
[_Bahasa Indonesia_](README.id-ID.md),
[_Українська_](README.uk-UA.md),
[_Arabic_](README.ar-AR.md),
[_Tiếng Việt_](README.vi-VN.md),
[_Deutsch_](README.de-DE.md),
[_Uzbek_](README.uz-UZ.md),
[_עברית_](README.he-IL.md)

*☝ Note that this project is meant to be used for learning and researching purposes
only, and it is **not** meant to be used for production.*

## Data Structures

A data structure is a particular way of organizing and storing data in a computer so that it can
be accessed and modified efficiently. More precisely, a data structure is a collection of data
values, the relationships among them, and the functions or operations that can be applied to
the data.

Remember that each data has its own trade-offs. And you need to pay attention more to why you&#039;re choosing a certain data structure than to how to implement it.

`B` - Beginner, `A` - Advanced

* `B` [Linked List](src/data-structures/linked-list)
* `B` [Doubly Linked List](src/data-structures/doubly-linked-list)
* `B` [Queue](src/data-structures/queue)
* `B` [Stack](src/data-structures/stack)
* `B` [Hash Table](src/data-structures/hash-table)
* `B` [Heap](src/data-structures/heap) - max and min heap versions
* `B` [Priority Queue](src/data-structures/priority-queue)
* `A` [Trie](src/data-structures/trie)
* `A` [Tree](src/data-structures/tree)
  * `A` [Binary Search Tree](src/data-structures/tree/binary-search-tree)
  * `A` [AVL Tree](src/data-structures/tree/avl-tree)
  * `A` [Red-Black Tree](src/data-structures/tree/red-black-tree)
  * `A` [Segment Tree](src/data-structures/tree/segment-tree) - with min/max/sum range queries examples
  * `A` [Fenwick Tree](src/data-structures/tree/fenwick-tree) (Binary Indexed Tree)
* `A` [Graph](src/data-structures/graph) (both directed and undirected)
* `A` [Disjoint Set](src/data-structures/disjoint-set) - a union–find data structure or merge–find set
* `A` [Bloom Filter](src/data-structures/bloom-filter)
* `A` [LRU Cache](src/data-structures/lru-cache/) - Least Recently Used (LRU) cache

## Algorithms

An algorithm is an unambiguous specification of how to solve a class of problems. It is
a set of rules that precisely define a sequence of operations.

`B` - Beginner, `A` - Advanced

### Algorithms by Topic

* **Math**
  * `B` [Bit Manipulation](src/algorithms/math/bits) - set/get/update/clear bits, multiplication/division by two, make negative etc.
  * `B` [Binary Floating Point](src/algorithms/math/binary-floating-point) - binary representation of the floating-point numbers.
  * `B` [Factorial](src/algorithms/math/factorial)
  * `B` [Fibonacci Number](src/algorithms/math/fibonacci) - classic and closed-form versions
  * `B` [Prime Factors](src/algorithms/math/prime-factors) - finding prime factors and counting them using Hardy-Ramanujan&#039;s theorem
  * `B` [Primality Test](src/algorithms/math/primality-test) (trial division method)
  * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)
  * `B` [Least Common Multiple](src/algorithms/math/least-common-multiple) (LCM)
  * `B` [Sieve of Eratosthenes](src/algorithms/math/sieve-of-eratosthenes) - finding all prime numbers up to any given limit
  * `B` [Is Power of Two](src/algorithms/math/is-power-of-two) - check if the number is power of two (naive and bitwise algorithms)
  * `B` [Pascal&#039;s Triangle](src/algorithms/math/pascal-triangle)
  * `B` [Complex Number](src/algorithms/math/complex-number) - complex numbers and basic operations with them
  * `B` [Radian &amp; Degree](src/algorithms/math/radian) - radians to degree and backwards conversion
  * `B` [Fast Powering](src/algorithms/math/fast-powering)
  * `B` [Horner&#039;s method](src/algorithms/math/horner-method) - polynomial evaluation
  * `B` [Matrices](src/algorithms/math/matrix) - matrices and basic matrix operations (multiplication, transposition, etc.)
  * `B` [Euclidean Distance](src/algorithms/math/euclidean-distance) - distance between two points/vectors/matrices
  * `A` [Integer Partition](src/algorithms/math/integer-partition)
  * `A` [Square Root](src/algorithms/math/square-root) - Newton&#039;s method
  * `A` [Liu Hui π Algorithm](src/algorithms/math/liu-hui) - approximate π calculations based on N-gons
  * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - decompose a function of time (a signal) into the frequencies that make it up
* **Sets**
  * `B` [Cartesian Product](src/algorithms/sets/cartesian-product) - product of multiple sets
  * `B` [Fisher–Yates Shuffle](src/algorithms/sets/fisher-yates) - random permutation of a finite sequence
  * `A` [Power Set](src/algorithms/sets/power-set) - all subsets of a set (bitwise, backtracking, and cascading solutions)
  * `A` [Permutations](src/algorithms/sets/permutations) (with and without repetitions)
  * `A` [Combinations](src/algorithms/sets/combinations) (with and without repetitions)
  * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS)
  * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence)
  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence) (SCS)
  * `A` [Knapsack Problem](src/algorithms/sets/knapsack-problem) - &quot;0/1&quot; and &quot;Unbound&quot; ones
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray) - &quot;Brute Force&quot; and &quot;Dynamic Programming&quot; (Kadane&#039;s) versions
  * `A` [Combination Sum](src/algorithms/sets/combination-sum) - find all combinations that form specific sum
* **Strings**
  * `B` [Hamming Distance](src/algorithms/string/hamming-distance) - number of positions at which the symbols are different
  * `B` [Palindrome](src/algorithms/string/palindrome) - check if the string is the same in reverse
  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - minimum edit distance between two sequences
  * `A` [Knuth–Morris–Pratt Algorithm](src/algorithms/string/knuth-morris-pratt) (KMP Algorithm) - substring search (pattern matching)
  * `A` [Z Algorithm](src/algorithms/string/z-algorithm) - substring search (pattern matching)
  * `A` [Rabin Karp Algorithm](src/algorithms/string/rabin-karp) - substring search
  * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring)
  * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching)
* **Searches**
  * `B` [Linear Search](src/algorithms/search/linear-search)
  * `B` [Jump Search](src/algorithms/search/jump-search) (or Block Search) - search in sorted array
  * `B` [Binary Search](src/algorithms/search/binary-search) - search in sorted array
  * `B` [Interpolation Search](src/algorithms/search/interpolation-search) - search in uniformly distributed sorted array
* **Sorting**
  * `B` [Bubble Sort](src/algorithms/sorting/bubble-sort)
  * `B` [Selection Sort](src/algorithms/sorting/selection-sort)
  * `B` [Insertion Sort](src/algorithms/sorting/insertion-sort)
  * `B` [Heap Sort](src/algorithms/sorting/heap-sort)
  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)
  * `B` [Quicksort](src/algorithms/sorting/quick-sort) - in-place and non-in-place implementations
  * `B` [Shellsort](src/algorithms/sorting/shell-sort)
  * `B` [Counting Sort](src/algorithms/sorting/counting-sort)
  * `B` [Radix Sort](src/algorithms/sorting/radix-sort)
  * `B` [Bucket Sort](src/algorithms/sorting/bucket-sort)
* **Linked Lists**
  * `B` [Straight Traversal](src/algorithms/linked-list/traversal)
  * `B` [Reverse Traversal](src/algorithms/linked-list/reverse-traversal)
* **Trees**
  * `B` [Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)
  * `B` [Breadth-First Search](src/algorithms/tree/breadth-first-search) (BFS)
* **Graphs**
  * `B` [Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)
  * `B` [Breadth-First Search](src/algorithms/graph/breadth-first-search) (BFS)
  * `B` [Kruskal’s Algorithm](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - finding the shortest paths to all graph vertices from single vertex
  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - finding the shortest paths to all graph vertices from single vertex
  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - find the shortest paths between all pairs of vertices
  * `A` [Detect Cycle](src/algorithms/graph/detect-cycle) - for both directed and undirected graphs (DFS and Disjoint Set based versions)
  * `A` [Prim’s Algorithm](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Topological Sorting](src/algorithms/graph/topological-sorting) - DFS method
  * `A` [Articulation Points](src/algorithms/graph/articulation-points) - Tarjan&#039;s algorithm (DFS based)
  * `A` [Bridges](src/algorithms/graph/bridges) - DFS based algorithm
  * `A` [Eulerian Path and Eulerian Circuit](src/algorithms/graph/eulerian-path) - Fleury&#039;s algorithm - Visit every edge exactly once
  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once
  * `A` [Strongly Connected Components](src/algorithms/graph/strongly-connected-components) - Kosaraju&#039;s algorithm
  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city
* **Cryptography**
  * `B` [Polynomial Hash](src/algorithms/cryptography/polynomial-hash) - rolling hash function based on polynomial
  * `B` [Rail Fence Cipher](src/algorithms/cryptography/rail-fence-cipher) - a transposition cipher algorithm for encoding messages
  * `B` [Caesar Cipher](src/algorithms/cryptography/caesar-cipher) - simple substitution cipher
  * `B` [Hill Cipher](src/algorithms/cryptography/hill-cipher) - substitution cipher based on linear algebra
* **Machine Learning**
  * `B` [NanoNeuron](https://github.com/trekhleb/nano-neuron) - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)
  * `B` [k-NN](src/algorithms/ml/knn) - k-nearest neighbors classification algorithm
  * `B` [k-Means](src/algorithms/ml/k-means) - k-Means clustering algorithm
* **Image Processing**
  * `B` [Seam Carving](src/algorithms/image-processing/seam-carving) - content-aware image resizing algorithm
* **Statistics**
  * `B` [Weighted Random](src/algorithms/statistics/weighted-random) - select the random item from the list based on items&#039; weights
* **Evolutionary algorithms**
  * `A` [Genetic algorithm](https://github.com/trekhleb/self-parking-car-evolution) - example of how the genetic algorithm may be applied for training the self-parking cars
* **Uncategorized**
  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)
  * `B` [Square Matrix Rotation](src/algorithms/uncategorized/square-matrix-rotation) - in-place algorithm
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game) - backtracking, dynamic programming (top-down + bottom-up) and greedy examples
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths) - backtracking, dynamic programming and Pascal&#039;s Triangle based examples
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem (dynamic programming and brute force versions)
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach to the top (4 solutions)
  * `B` [Best Time To Buy Sell Stocks](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - divide and conquer and one-pass examples
  * `B` [Valid Parentheses](src/algorithms/stack/valid-parentheses) - check if a string has valid parentheses (using stack)
  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)
  * `A` [Knight&#039;s Tour](src/algorithms/uncategorized/knight-tour)

### Algorithms by Paradigm

An algorithmic paradigm is a generic method or approach which underlies the design of a class
of algorithms. It is an abstraction higher than the notion of an algorithm, just as an
algorithm is an abstraction higher than a computer program.

* **Brute Force** - look at all the possibilities and selects the best solution
  * `B` [Linear Search](src/algorithms/search/linear-search)
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach the top
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city
  * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - decompose a function of time (a signal) into the frequencies that make it up
* **Greedy** - choose the best option at the current time, without any consideration for the future
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `A` [Unbound Knapsack Problem](src/algorithms/sets/knapsack-problem)
  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - finding the shortest path to all graph vertices
  * `A` [Prim’s Algorithm](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Kruskal’s Algorithm](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph
* **Divide and Conquer** - divide the problem into smaller parts and then solve those parts
  * `B` [Binary Search](src/algorithms/search/binary-search)
  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)
  * `B` [Pascal&#039;s Triangle](src/algorithms/math/pascal-triangle)
  * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)
  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)
  * `B` [Quicksort](src/algorithms/sorting/quick-sort)
  * `B` [Tree Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)
  * `B` [Graph Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)
  * `B` [Matrices](src/algorithms/math/matrix) - generating and traversing the matrices of different shapes
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Fast Powering](src/algorithms/math/fast-powering)
  * `B` [Best Time To Buy Sell Stocks](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - divide and conquer and one-pass examples
  * `A` [Permutations](src/algorithms/sets/permutations) (with and without repetitions)
  * `A` [Combinations](src/algorithms/sets/combinations) (with and without repetitions)
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
* **Dynamic Programming** - build up a solution using previously found sub-solutions
  * `B` [Fibonacci Number](src/algorithms/math/fibonacci)
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach the top
  * `B` [Seam Carving](src/algorithms/image-processing/seam-carving) - content-aware image resizing algorithm
  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - minimum edit distance between two sequences
  * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS)
  * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring)
  * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence)
  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence)
  * `A` [0/1 Knapsack Problem](src/algorithms/sets/knapsack-problem)
  * `A` [Integer Partition](src/algorithms/math/integer-partition)
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - finding the shortest path to all graph vertices
  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - find the shortest paths between all pairs of vertices
  * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching)
* **Backtracking** - similarly to brute force, try to generate all possible solutions, but each time you generate the next solution, you test
if it satisfies all conditions and only then continue generating subsequent solutions. Otherwise, backtrack and go on a
different path to finding a solution. Normally the DFS traversal of state-space is being used.
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)
  * `B` [Power Set](src/algorithms/sets/power-set) - all subsets of a set
  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once
  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)
  * `A` [Knight&#039;s Tour](src/algorithms/uncategorized/knight-tour)
  * `A` [Combination Sum](src/algorithms/sets/combination-sum) - find all combinations that form specific sum
* **Branch &amp; Bound** - remember the lowest-cost solution found at each stage of the backtracking
search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of
a least-cost solution to the problem in order to discard partial solutions with costs larger than the
lowest-cost solution found so far. Normally, BFS traversal in combination with DFS traversal of state-space
tree is being used.

## How to use this repository

**Install all dependencies**

```
npm install
```

**Run ESLint**

You may want to run it to check code quality.

```
npm run lint
```

**Run all tests**

```
npm test
```

**Run tests by name**

```
npm test -- &#039;LinkedList&#039;
```

**Troubleshooting**

If linting or testing is failing, try to delete the `node_modules` folder and re-install npm packages:

```
rm -rf ./node_modules
npm i
```

Also, make sure that you&#039;re using the correct Node version (`&gt;=16`). If you&#039;re using [nvm](https://github.com/nvm-sh/nvm) for Node version management you may run `nvm use` from the root folde

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mrdoob/three.js]]></title>
            <link>https://github.com/mrdoob/three.js</link>
            <guid>https://github.com/mrdoob/three.js</guid>
            <pubDate>Sat, 20 Sep 2025 00:04:18 GMT</pubDate>
            <description><![CDATA[JavaScript 3D Library.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mrdoob/three.js">mrdoob/three.js</a></h1>
            <p>JavaScript 3D Library.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 108,632</p>
            <p>Forks: 36,010</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre># three.js

[![NPM Package][npm]][npm-url]
[![Build Size][build-size]][build-size-url]
[![NPM Downloads][npm-downloads]][npmtrends-url]
[![Discord][discord]][discord-url]
[![DeepWiki][deepwiki]][deepwiki-url]

#### JavaScript 3D library

The aim of the project is to create an easy-to-use, lightweight, cross-browser, general-purpose 3D library. The current builds only include WebGL and WebGPU renderers but SVG and CSS3D renderers are also available as addons.

[Examples](https://threejs.org/examples/) &amp;mdash;
[Docs](https://threejs.org/docs/) &amp;mdash;
[Manual](https://threejs.org/manual/) &amp;mdash;
[Wiki](https://github.com/mrdoob/three.js/wiki) &amp;mdash;
[Migrating](https://github.com/mrdoob/three.js/wiki/Migration-Guide) &amp;mdash;
[Questions](https://stackoverflow.com/questions/tagged/three.js) &amp;mdash;
[Forum](https://discourse.threejs.org/) &amp;mdash;
[Discord](https://discord.gg/56GBJwAnUS)

### Usage

This code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a `WebGL` renderer for the scene and camera, and it adds that viewport to the `document.body` element. Finally, it animates the cube within the scene for the camera.

```javascript
import * as THREE from &#039;three&#039;;

const width = window.innerWidth, height = window.innerHeight;

// init

const camera = new THREE.PerspectiveCamera( 70, width / height, 0.01, 10 );
camera.position.z = 1;

const scene = new THREE.Scene();

const geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );
const material = new THREE.MeshNormalMaterial();

const mesh = new THREE.Mesh( geometry, material );
scene.add( mesh );

const renderer = new THREE.WebGLRenderer( { antialias: true } );
renderer.setSize( width, height );
renderer.setAnimationLoop( animate );
document.body.appendChild( renderer.domElement );

// animation

function animate( time ) {

	mesh.rotation.x = time / 2000;
	mesh.rotation.y = time / 1000;

	renderer.render( scene, camera );

}
```

If everything goes well, you should see [this](https://jsfiddle.net/w43x5Lgh/).

### Cloning this repository

Cloning the repo with all its history results in a ~2 GB download. If you don&#039;t need the whole history you can use the `depth` parameter to significantly reduce download size.

```sh
git clone --depth=1 https://github.com/mrdoob/three.js.git
```

### Change log

[Releases](https://github.com/mrdoob/three.js/releases)


[npm]: https://img.shields.io/npm/v/three
[npm-url]: https://www.npmjs.com/package/three
[build-size]: https://badgen.net/bundlephobia/minzip/three
[build-size-url]: https://bundlephobia.com/result?p=three
[npm-downloads]: https://img.shields.io/npm/dw/three
[npmtrends-url]: https://www.npmtrends.com/three
[discord]: https://img.shields.io/discord/685241246557667386
[discord-url]: https://discord.gg/56GBJwAnUS
[deepwiki]: https://deepwiki.com/badge.svg
[deepwiki-url]: https://deepwiki.com/mrdoob/three.js

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[facebook/create-react-app]]></title>
            <link>https://github.com/facebook/create-react-app</link>
            <guid>https://github.com/facebook/create-react-app</guid>
            <pubDate>Sat, 20 Sep 2025 00:04:17 GMT</pubDate>
            <description><![CDATA[Set up a modern web app by running one command.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/facebook/create-react-app">facebook/create-react-app</a></h1>
            <p>Set up a modern web app by running one command.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 103,617</p>
            <p>Forks: 27,094</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre>## Create React App [![Build &amp; Test](https://github.com/facebook/create-react-app/actions/workflows/build-and-test.yml/badge.svg?branch=main)](https://github.com/facebook/create-react-app/actions/workflows/build-and-test.yml) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-green.svg)](https://github.com/facebook/create-react-app/blob/main/CONTRIBUTING.md)

&gt; [!CAUTION]
&gt;
&gt; ## Deprecated
&gt;
&gt; Create React App was one of the key tools for getting a React project up-and-running in 2017-2021, it is now in long-term stasis and we recommend that you migrate to one of React frameworks documented on [Start a New React Project](https://react.dev/learn/start-a-new-react-project).
&gt;
&gt; If you are following a tutorial to learn React, there is still value in continuing your tutorial, but we do not recommend starting production apps based on Create React App.

&lt;img alt=&quot;Logo&quot; align=&quot;right&quot; src=&quot;https://create-react-app.dev/img/logo.svg&quot; width=&quot;20%&quot; /&gt;

Create React apps with no build configuration.

- [Creating an App](#creating-an-app) – How to create a new app.
- [User Guide](https://facebook.github.io/create-react-app/) – How to develop apps bootstrapped with Create React App.

Create React App works on macOS, Windows, and Linux.&lt;br&gt;
If something doesn’t work, please [file an issue](https://github.com/facebook/create-react-app/issues/new).&lt;br&gt;
If you have questions or need help, please ask in [GitHub Discussions](https://github.com/facebook/create-react-app/discussions).

## Quick Overview

```sh
npx create-react-app my-app
cd my-app
npm start
```

If you&#039;ve previously installed `create-react-app` globally via `npm install -g create-react-app`, we recommend you uninstall the package using `npm uninstall -g create-react-app` or `yarn global remove create-react-app` to ensure that npx always uses the latest version.

_([npx](https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b) comes with npm 5.2+ and higher, see [instructions for older npm versions](https://gist.github.com/gaearon/4064d3c23a77c74a3614c498a8bb1c5f))_

Then open [http://localhost:3000/](http://localhost:3000/) to see your app.&lt;br&gt;
When you’re ready to deploy to production, create a minified bundle with `npm run build`.

&lt;p align=&#039;center&#039;&gt;
&lt;img src=&#039;https://cdn.jsdelivr.net/gh/facebook/create-react-app@27b42ac7efa018f2541153ab30d63180f5fa39e0/screencast.svg&#039; width=&#039;600&#039; alt=&#039;npm start&#039;&gt;
&lt;/p&gt;

### Get Started Immediately

You **don’t** need to install or configure tools like webpack or Babel.&lt;br&gt;
They are preconfigured and hidden so that you can focus on the code.

Create a project, and you’re good to go.

## Creating an App

**You’ll need to have Node 14.0.0 or later version on your local development machine** (but it’s not required on the server). We recommend using the latest LTS version. You can use [nvm](https://github.com/creationix/nvm#installation) (macOS/Linux) or [nvm-windows](https://github.com/coreybutler/nvm-windows#node-version-manager-nvm-for-windows) to switch Node versions between different projects.

To create a new app, you may choose one of the following methods:

### npx

```sh
npx create-react-app my-app
```

_([npx](https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b) is a package runner tool that comes with npm 5.2+ and higher, see [instructions for older npm versions](https://gist.github.com/gaearon/4064d3c23a77c74a3614c498a8bb1c5f))_

### npm

```sh
npm init react-app my-app
```

_`npm init &lt;initializer&gt;` is available in npm 6+_

### Yarn

```sh
yarn create react-app my-app
```

_[`yarn create &lt;starter-kit-package&gt;`](https://yarnpkg.com/lang/en/docs/cli/create/) is available in Yarn 0.25+_

It will create a directory called `my-app` inside the current folder.&lt;br&gt;
Inside that directory, it will generate the initial project structure and install the transitive dependencies:

```
my-app
├── README.md
├── node_modules
├── package.json
├── .gitignore
├── public
│   ├── favicon.ico
│   ├── index.html
│   └── manifest.json
└── src
    ├── App.css
    ├── App.js
    ├── App.test.js
    ├── index.css
    ├── index.js
    ├── logo.svg
    └── serviceWorker.js
    └── setupTests.js
```

No configuration or complicated folder structures, only the files you need to build your app.&lt;br&gt;
Once the installation is done, you can open your project folder:

```sh
cd my-app
```

Inside the newly created project, you can run some built-in commands:

### `npm start` or `yarn start`

Runs the app in development mode.&lt;br&gt;
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will automatically reload if you make changes to the code.&lt;br&gt;
You will see the build errors and lint warnings in the console.

&lt;p align=&#039;center&#039;&gt;
&lt;img src=&#039;https://cdn.jsdelivr.net/gh/marionebl/create-react-app@9f6282671c54f0874afd37a72f6689727b562498/screencast-error.svg&#039; width=&#039;600&#039; alt=&#039;Build errors&#039;&gt;
&lt;/p&gt;

### `npm test` or `yarn test`

Runs the test watcher in an interactive mode.&lt;br&gt;
By default, runs tests related to files changed since the last commit.

[Read more about testing.](https://facebook.github.io/create-react-app/docs/running-tests)

### `npm run build` or `yarn build`

Builds the app for production to the `build` folder.&lt;br&gt;
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.&lt;br&gt;

Your app is ready to be deployed.

## User Guide

You can find detailed instructions on using Create React App and many tips in [its documentation](https://facebook.github.io/create-react-app/).

## How to Update to New Versions?

Please refer to the [User Guide](https://facebook.github.io/create-react-app/docs/updating-to-new-releases) for this and other information.

## Philosophy

- **One Dependency:** There is only one build dependency. It uses webpack, Babel, ESLint, and other amazing projects, but provides a cohesive curated experience on top of them.

- **No Configuration Required:** You don&#039;t need to configure anything. A reasonably good configuration of both development and production builds is handled for you so you can focus on writing code.

- **No Lock-In:** You can “eject” to a custom setup at any time. Run a single command, and all the configuration and build dependencies will be moved directly into your project, so you can pick up right where you left off.

## What’s Included?

Your environment will have everything you need to build a modern single-page React app:

- React, JSX, ES6, TypeScript and Flow syntax support.
- Language extras beyond ES6 like the object spread operator.
- Autoprefixed CSS, so you don’t need `-webkit-` or other prefixes.
- A fast interactive unit test runner with built-in support for coverage reporting.
- A live development server that warns about common mistakes.
- A build script to bundle JS, CSS, and images for production, with hashes and sourcemaps.
- An offline-first [service worker](https://developers.google.com/web/fundamentals/getting-started/primers/service-workers) and a [web app manifest](https://developers.google.com/web/fundamentals/engage-and-retain/web-app-manifest/), meeting all the [Progressive Web App](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app) criteria. (_Note: Using the service worker is opt-in as of `react-scripts@2.0.0` and higher_)
- Hassle-free updates for the above tools with a single dependency.

Check out [this guide](https://github.com/nitishdayal/cra_closer_look) for an overview of how these tools fit together.

The tradeoff is that **these tools are preconfigured to work in a specific way**. If your project needs more customization, you can [&quot;eject&quot;](https://facebook.github.io/create-react-app/docs/available-scripts#npm-run-eject) and customize it, but then you will need to maintain this configuration.

## Popular Alternatives

Create React App is a great fit for:

- **Learning React** in a comfortable and feature-rich development environment.
- **Starting new single-page React applications.**
- **Creating examples** with React for your libraries and components.

Here are a few common cases where you might want to try something else:

- If you want to **try React** without hundreds of transitive build tool dependencies, consider [using a single HTML file or an online sandbox instead](https://reactjs.org/docs/getting-started.html#try-react).

- If you need to **integrate React code with a server-side template framework** like Rails, Django or Symfony, or if you’re **not building a single-page app**, consider using [nwb](https://github.com/insin/nwb), or [Neutrino](https://neutrino.js.org/) which are more flexible. For Rails specifically, you can use [Rails Webpacker](https://github.com/rails/webpacker). For Symfony, try [Symfony&#039;s webpack Encore](https://symfony.com/doc/current/frontend/encore/reactjs.html).

- If you need to **publish a React component**, [nwb](https://github.com/insin/nwb) can [also do this](https://github.com/insin/nwb#react-components-and-libraries), as well as [Neutrino&#039;s react-components preset](https://neutrino.js.org/packages/react-components/).

- If you want to do **server rendering** with React and Node.js, check out [Next.js](https://nextjs.org/) or [Razzle](https://github.com/jaredpalmer/razzle). Create React App is agnostic of the backend, and only produces static HTML/JS/CSS bundles.

- If your website is **mostly static** (for example, a portfolio or a blog), consider using [Gatsby](https://www.gatsbyjs.org/) or [Next.js](https://nextjs.org/). Unlike Create React App, Gatsby pre-renders the website into HTML at build time. Next.js supports both server rendering and pre-rendering.

- Finally, if you need **more customization**, check out [Neutrino](https://neutrino.js.org/) and its [React preset](https://neutrino.js.org/packages/react/).

All of the above tools can work with little to no configuration.

If you prefer configuring the build yourself, [follow this guide](https://reactjs.org/docs/add-react-to-a-website.html).

## React Native

Looking for something similar, but for React Native?&lt;br&gt;
Check out [Expo CLI](https://github.com/expo/expo-cli).

## Contributing

We&#039;d love to have your helping hand on `create-react-app`! See [CONTRIBUTING.md](CONTRIBUTING.md) for more information on what we&#039;re looking for and how to get started.

## Supporting Create React App

Create React App is a community maintained project and all contributors are volunteers. If you&#039;d like to support the future development of Create React App then please consider donating to our [Open Collective](https://opencollective.com/create-react-app).

## Credits

This project exists thanks to all the people who [contribute](CONTRIBUTING.md).&lt;br&gt;
&lt;a href=&quot;https://github.com/facebook/create-react-app/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/create-react-app/contributors.svg?width=890&amp;button=false&quot; /&gt;&lt;/a&gt;

Thanks to [Netlify](https://www.netlify.com/) for hosting our documentation.

## Acknowledgements

We are grateful to the authors of existing related projects for their ideas and collaboration:

- [@eanplatter](https://github.com/eanplatter)
- [@insin](https://github.com/insin)
- [@mxstbr](https://github.com/mxstbr)

## License

Create React App is open source software [licensed as MIT](https://github.com/facebook/create-react-app/blob/main/LICENSE). The Create React App logo is licensed under a [Creative Commons Attribution 4.0 International license](https://creativecommons.org/licenses/by/4.0/).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>