<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Sun, 24 Aug 2025 00:05:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[open-webui/open-webui]]></title>
            <link>https://github.com/open-webui/open-webui</link>
            <guid>https://github.com/open-webui/open-webui</guid>
            <pubDate>Sun, 24 Aug 2025 00:05:02 GMT</pubDate>
            <description><![CDATA[User-friendly AI Interface (Supports Ollama, OpenAI API, ...)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/open-webui/open-webui">open-webui/open-webui</a></h1>
            <p>User-friendly AI Interface (Supports Ollama, OpenAI API, ...)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 107,661</p>
            <p>Forks: 14,590</p>
            <p>Stars today: 130 stars today</p>
            <h2>README</h2><pre># Open WebUI üëã

![GitHub stars](https://img.shields.io/github/stars/open-webui/open-webui?style=social)
![GitHub forks](https://img.shields.io/github/forks/open-webui/open-webui?style=social)
![GitHub watchers](https://img.shields.io/github/watchers/open-webui/open-webui?style=social)
![GitHub repo size](https://img.shields.io/github/repo-size/open-webui/open-webui)
![GitHub language count](https://img.shields.io/github/languages/count/open-webui/open-webui)
![GitHub top language](https://img.shields.io/github/languages/top/open-webui/open-webui)
![GitHub last commit](https://img.shields.io/github/last-commit/open-webui/open-webui?color=red)
[![Discord](https://img.shields.io/badge/Discord-Open_WebUI-blue?logo=discord&amp;logoColor=white)](https://discord.gg/5rJgQTnV4s)
[![](https://img.shields.io/static/v1?label=Sponsor&amp;message=%E2%9D%A4&amp;logo=GitHub&amp;color=%23fe8e86)](https://github.com/sponsors/tjbck)

**Open WebUI is an [extensible](https://docs.openwebui.com/features/plugin/), feature-rich, and user-friendly self-hosted AI platform designed to operate entirely offline.** It supports various LLM runners like **Ollama** and **OpenAI-compatible APIs**, with **built-in inference engine** for RAG, making it a **powerful AI deployment solution**.

Passionate about open-source AI? [Join our team ‚Üí](https://careers.openwebui.com/)

![Open WebUI Demo](./demo.gif)

&gt; [!TIP]  
&gt; **Looking for an [Enterprise Plan](https://docs.openwebui.com/enterprise)?** ‚Äì **[Speak with Our Sales Team Today!](mailto:sales@openwebui.com)**
&gt;
&gt; Get **enhanced capabilities**, including **custom theming and branding**, **Service Level Agreement (SLA) support**, **Long-Term Support (LTS) versions**, and **more!**

For more information, be sure to check out our [Open WebUI Documentation](https://docs.openwebui.com/).

## Key Features of Open WebUI ‚≠ê

- üöÄ **Effortless Setup**: Install seamlessly using Docker or Kubernetes (kubectl, kustomize or helm) for a hassle-free experience with support for both `:ollama` and `:cuda` tagged images.

- ü§ù **Ollama/OpenAI API Integration**: Effortlessly integrate OpenAI-compatible APIs for versatile conversations alongside Ollama models. Customize the OpenAI API URL to link with **LMStudio, GroqCloud, Mistral, OpenRouter, and more**.

- üõ°Ô∏è **Granular Permissions and User Groups**: By allowing administrators to create detailed user roles and permissions, we ensure a secure user environment. This granularity not only enhances security but also allows for customized user experiences, fostering a sense of ownership and responsibility amongst users.

- üîÑ **SCIM 2.0 Support**: Enterprise-grade user and group provisioning through SCIM 2.0 protocol, enabling seamless integration with identity providers like Okta, Azure AD, and Google Workspace for automated user lifecycle management.

- üì± **Responsive Design**: Enjoy a seamless experience across Desktop PC, Laptop, and Mobile devices.

- üì± **Progressive Web App (PWA) for Mobile**: Enjoy a native app-like experience on your mobile device with our PWA, providing offline access on localhost and a seamless user interface.

- ‚úíÔ∏èüî¢ **Full Markdown and LaTeX Support**: Elevate your LLM experience with comprehensive Markdown and LaTeX capabilities for enriched interaction.

- üé§üìπ **Hands-Free Voice/Video Call**: Experience seamless communication with integrated hands-free voice and video call features, allowing for a more dynamic and interactive chat environment.

- üõ†Ô∏è **Model Builder**: Easily create Ollama models via the Web UI. Create and add custom characters/agents, customize chat elements, and import models effortlessly through [Open WebUI Community](https://openwebui.com/) integration.

- üêç **Native Python Function Calling Tool**: Enhance your LLMs with built-in code editor support in the tools workspace. Bring Your Own Function (BYOF) by simply adding your pure Python functions, enabling seamless integration with LLMs.

- üìö **Local RAG Integration**: Dive into the future of chat interactions with groundbreaking Retrieval Augmented Generation (RAG) support. This feature seamlessly integrates document interactions into your chat experience. You can load documents directly into the chat or add files to your document library, effortlessly accessing them using the `#` command before a query.

- üîç **Web Search for RAG**: Perform web searches using providers like `SearXNG`, `Google PSE`, `Brave Search`, `serpstack`, `serper`, `Serply`, `DuckDuckGo`, `TavilySearch`, `SearchApi` and `Bing` and inject the results directly into your chat experience.

- üåê **Web Browsing Capability**: Seamlessly integrate websites into your chat experience using the `#` command followed by a URL. This feature allows you to incorporate web content directly into your conversations, enhancing the richness and depth of your interactions.

- üé® **Image Generation Integration**: Seamlessly incorporate image generation capabilities using options such as AUTOMATIC1111 API or ComfyUI (local), and OpenAI&#039;s DALL-E (external), enriching your chat experience with dynamic visual content.

- ‚öôÔ∏è **Many Models Conversations**: Effortlessly engage with various models simultaneously, harnessing their unique strengths for optimal responses. Enhance your experience by leveraging a diverse set of models in parallel.

- üîê **Role-Based Access Control (RBAC)**: Ensure secure access with restricted permissions; only authorized individuals can access your Ollama, and exclusive model creation/pulling rights are reserved for administrators.

- üåêüåç **Multilingual Support**: Experience Open WebUI in your preferred language with our internationalization (i18n) support. Join us in expanding our supported languages! We&#039;re actively seeking contributors!

- üß© **Pipelines, Open WebUI Plugin Support**: Seamlessly integrate custom logic and Python libraries into Open WebUI using [Pipelines Plugin Framework](https://github.com/open-webui/pipelines). Launch your Pipelines instance, set the OpenAI URL to the Pipelines URL, and explore endless possibilities. [Examples](https://github.com/open-webui/pipelines/tree/main/examples) include **Function Calling**, User **Rate Limiting** to control access, **Usage Monitoring** with tools like Langfuse, **Live Translation with LibreTranslate** for multilingual support, **Toxic Message Filtering** and much more.

- üåü **Continuous Updates**: We are committed to improving Open WebUI with regular updates, fixes, and new features.

Want to learn more about Open WebUI&#039;s features? Check out our [Open WebUI documentation](https://docs.openwebui.com/features) for a comprehensive overview!

## Sponsors üôå

#### Emerald

&lt;table&gt;
  &lt;!-- &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://n8n.io/&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/n8n.png&quot; alt=&quot;n8n&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt; ‚Ä¢ Does your interface have a backend yet?&lt;br&gt;Try &lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt; --&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;utm_medium=paid-ad-placement&amp;utm_campaign=OpenWebUI-Docs&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/tailscale.png&quot; alt=&quot;Tailscale&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;utm_medium=paid-ad-placement&amp;utm_campaign=OpenWebUI-Docs&quot;&gt;Tailscale&lt;/a&gt; ‚Ä¢ Connect self-hosted AI to any device with Tailscale
    &lt;/td&gt;
  &lt;/tr&gt;
   &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://warp.dev/open-webui&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/warp.png&quot; alt=&quot;Warp&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://warp.dev/open-webui&quot;&gt;Warp&lt;/a&gt; ‚Ä¢ The intelligent terminal for developers
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

---

We are incredibly grateful for the generous support of our sponsors. Their contributions help us to maintain and improve our project, ensuring we can continue to deliver quality work to our community. Thank you!

## How to Install üöÄ

### Installation via Python pip üêç

Open WebUI can be installed using pip, the Python package installer. Before proceeding, ensure you&#039;re using **Python 3.11** to avoid compatibility issues.

1. **Install Open WebUI**:
   Open your terminal and run the following command to install Open WebUI:

   ```bash
   pip install open-webui
   ```

2. **Running Open WebUI**:
   After installation, you can start Open WebUI by executing:

   ```bash
   open-webui serve
   ```

This will start the Open WebUI server, which you can access at [http://localhost:8080](http://localhost:8080)

### Quick Start with Docker üê≥

&gt; [!NOTE]  
&gt; Please note that for certain Docker environments, additional configurations might be needed. If you encounter any connection issues, our detailed guide on [Open WebUI Documentation](https://docs.openwebui.com/) is ready to assist you.

&gt; [!WARNING]
&gt; When using Docker to install Open WebUI, make sure to include the `-v open-webui:/app/backend/data` in your Docker command. This step is crucial as it ensures your database is properly mounted and prevents any loss of data.

&gt; [!TIP]  
&gt; If you wish to utilize Open WebUI with Ollama included or CUDA acceleration, we recommend utilizing our official images tagged with either `:cuda` or `:ollama`. To enable CUDA, you must install the [Nvidia CUDA container toolkit](https://docs.nvidia.com/dgx/nvidia-container-runtime-upgrade/) on your Linux/WSL system.

### Installation with Default Configuration

- **If Ollama is on your computer**, use this command:

  ```bash
  docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **If Ollama is on a Different Server**, use this command:

  To connect to Ollama on another server, change the `OLLAMA_BASE_URL` to the server&#039;s URL:

  ```bash
  docker run -d -p 3000:8080 -e OLLAMA_BASE_URL=https://example.com -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **To run Open WebUI with Nvidia GPU support**, use this command:

  ```bash
  docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda
  ```

### Installation for OpenAI API Usage Only

- **If you&#039;re only using OpenAI API**, use this command:

  ```bash
  docker run -d -p 3000:8080 -e OPENAI_API_KEY=your_secret_key -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

### Installing Open WebUI with Bundled Ollama Support

This installation method uses a single container image that bundles Open WebUI with Ollama, allowing for a streamlined setup via a single command. Choose the appropriate command based on your hardware setup:

- **With GPU Support**:
  Utilize GPU resources by running the following command:

  ```bash
  docker run -d -p 3000:8080 --gpus=all -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

- **For CPU Only**:
  If you&#039;re not using a GPU, use this command instead:

  ```bash
  docker run -d -p 3000:8080 -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

Both commands facilitate a built-in, hassle-free installation of both Open WebUI and Ollama, ensuring that you can get everything up and running swiftly.

After installation, you can access Open WebUI at [http://localhost:3000](http://localhost:3000). Enjoy! üòÑ

### Other Installation Methods

We offer various installation alternatives, including non-Docker native installation methods, Docker Compose, Kustomize, and Helm. Visit our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/) or join our [Discord community](https://discord.gg/5rJgQTnV4s) for comprehensive guidance.

Look at the [Local Development Guide](https://docs.openwebui.com/getting-started/advanced-topics/development) for instructions on setting up a local development environment.

### Troubleshooting

Encountering connection issues? Our [Open WebUI Documentation](https://docs.openwebui.com/troubleshooting/) has got you covered. For further assistance and to join our vibrant community, visit the [Open WebUI Discord](https://discord.gg/5rJgQTnV4s).

#### Open WebUI: Server Connection Error

If you&#039;re experiencing connection issues, it‚Äôs often due to the WebUI docker container not being able to reach the Ollama server at 127.0.0.1:11434 (host.docker.internal:11434) inside the container . Use the `--network=host` flag in your docker command to resolve this. Note that the port changes from 3000 to 8080, resulting in the link: `http://localhost:8080`.

**Example Docker Command**:

```bash
docker run -d --network=host -v open-webui:/app/backend/data -e OLLAMA_BASE_URL=http://127.0.0.1:11434 --name open-webui --restart always ghcr.io/open-webui/open-webui:main
```

### Keeping Your Docker Installation Up-to-Date

In case you want to update your local Docker installation to the latest version, you can do it with [Watchtower](https://containrrr.dev/watchtower/):

```bash
docker run --rm --volume /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --run-once open-webui
```

In the last part of the command, replace `open-webui` with your container name if it is different.

Check our Updating Guide available in our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/updating).

### Using the Dev Branch üåô

&gt; [!WARNING]
&gt; The `:dev` branch contains the latest unstable features and changes. Use it at your own risk as it may have bugs or incomplete features.

If you want to try out the latest bleeding-edge features and are okay with occasional instability, you can use the `:dev` tag like this:

```bash
docker run -d -p 3000:8080 -v open-webui:/app/backend/data --name open-webui --add-host=host.docker.internal:host-gateway --restart always ghcr.io/open-webui/open-webui:dev
```

### Offline Mode

If you are running Open WebUI in an offline environment, you can set the `HF_HUB_OFFLINE` environment variable to `1` to prevent attempts to download models from the internet.

```bash
export HF_HUB_OFFLINE=1
```

## What&#039;s Next? üåü

Discover upcoming features on our roadmap in the [Open WebUI Documentation](https://docs.openwebui.com/roadmap/).

## License üìú

This project is licensed under the [Open WebUI License](LICENSE), a revised BSD-3-Clause license. You receive all the same rights as the classic BSD-3 license: you can use, modify, and distribute the software, including in proprietary and commercial products, with minimal restrictions. The only additional requirement is to preserve the &quot;Open WebUI&quot; branding, as detailed in the LICENSE file. For full terms, see the [LICENSE](LICENSE) document. üìÑ

## Support üí¨

If you have any questions, suggestions, or need assistance, please open an issue or join our
[Open WebUI Discord community](https://discord.gg/5rJgQTnV4s) to connect with us! ü§ù

## Star History

&lt;a href=&quot;https://star-history.com/#open-webui/open-webui&amp;Date&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&amp;theme=dark&quot; /&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
    &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

---

Created by [Timothy Jaeryang Baek](https://github.com/tjbck) - Let&#039;s make Open WebUI even more amazing together! üí™
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[FreeTubeApp/FreeTube]]></title>
            <link>https://github.com/FreeTubeApp/FreeTube</link>
            <guid>https://github.com/FreeTubeApp/FreeTube</guid>
            <pubDate>Sun, 24 Aug 2025 00:05:01 GMT</pubDate>
            <description><![CDATA[An Open Source YouTube app for privacy]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/FreeTubeApp/FreeTube">FreeTubeApp/FreeTube</a></h1>
            <p>An Open Source YouTube app for privacy</p>
            <p>Language: JavaScript</p>
            <p>Stars: 18,664</p>
            <p>Forks: 1,206</p>
            <p>Stars today: 26 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
 &lt;img alt=&quot;&quot; src=&quot;/_icons/logoColor.svg&quot; width=500 align=&quot;center&quot;&gt;
&lt;/p&gt;

FreeTube is an open source desktop YouTube player built with privacy in mind.
Use YouTube without advertisements and prevent Google from tracking you with their cookies and JavaScript.
Available for Windows (10 and later), Mac (macOS 11 and later) &amp; Linux thanks to Electron.

&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/FreeTubeApp/FreeTube/releases&quot;&gt;Download FreeTube&lt;/a&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/FreeTubeApp/FreeTube/actions/workflows/build.yml&quot;&gt;
    &lt;img alt=&#039;Build status&#039; src=&quot;https://github.com/FreeTubeApp/FreeTube/actions/workflows/build.yml/badge.svg?branch=development&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://hosted.weblate.org/engage/free-tube/&quot;&gt;
    &lt;img src=&quot;https://hosted.weblate.org/widgets/free-tube/-/svg-badge.svg&quot; alt=&quot;Translation status&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;hr&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;#screenshots&quot;&gt;Screenshots&lt;/a&gt; &amp;bull; &lt;a href=&quot;#how-does-it-work&quot;&gt;How does it work?&lt;/a&gt; &amp;bull; &lt;a href=&quot;#features&quot;&gt;Features&lt;/a&gt; &amp;bull; &lt;a href=&quot;#download-links&quot;&gt;Download Links&lt;/a&gt; &amp;bull; &lt;a href=&quot;#contributing&quot;&gt;Contributing&lt;/a&gt; &amp;bull; &lt;a href=&quot;#localization&quot;&gt;Localization&lt;/a&gt; &amp;bull; &lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt; &amp;bull; &lt;a href=&quot;#donate&quot;&gt;Donate&lt;/a&gt; &amp;bull; &lt;a href=&quot;#license&quot;&gt;License&lt;/a&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://freetubeapp.io/&quot;&gt;Website&lt;/a&gt; &amp;bull; &lt;a href=&quot;https://blog.freetubeapp.io/&quot;&gt;Blog&lt;/a&gt; &amp;bull; &lt;a href=&quot;https://docs.freetubeapp.io/&quot;&gt;Documentation&lt;/a&gt; &amp;bull; &lt;a href=&quot;https://docs.freetubeapp.io/faq/&quot;&gt;FAQ&lt;/a&gt; &amp;bull; &lt;a href=&quot;https://github.com/FreeTubeApp/FreeTube/discussions&quot;&gt;Discussions&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&gt; [!NOTE] 
&gt; FreeTube is currently in Beta. While it should work well for most users, there are still bugs and missing features that need to be addressed.
&gt;
&gt; If you have an idea or if you found a bug, please submit a [GitHub issue](https://github.com/FreeTubeApp/FreeTube/issues/new/choose) so that we can track it.  Please search [the existing issues](https://github.com/FreeTubeApp/FreeTube/issues) before submitting to prevent duplicates!

## Screenshots
&lt;img src=&quot;https://i.imgur.com/zFgZUUV.png&quot; width=300&gt; &lt;img src=&quot;https://i.imgur.com/9evYHgN.png&quot; width=300&gt; &lt;img src=&quot;https://i.imgur.com/yT2UzPa.png&quot; width=300&gt; &lt;img src=&quot;https://i.imgur.com/47zIEt4.png&quot; width=300&gt; &lt;img src=&quot;https://i.imgur.com/hFB2fKC.png&quot; width=300&gt;

## How does it work?
FreeTube uses a built in extractor to grab and serve data / videos. The [Invidious API](https://github.com/iv-org/invidious) can also optionally be used. FreeTube does not use any official APIs to obtain data. While YouTube can still see your video requests, it can no
longer track you using cookies or JavaScript. Your subscriptions and history are stored locally on your computer and never sent out.

&gt; [!IMPORTANT]  
&gt; Using a VPN or Tor is highly recommended to hide your IP while using FreeTube.

## Features
* Watch videos without ads
* Use YouTube without Google tracking you using cookies and JavaScript
* Two extractor APIs to choose from (Built in or Invidious)
* Subscribe to channels without an account
* Connect to an externally setup proxy such as Tor
* View and search your local subscriptions, history, and saved videos
* Organize your subscriptions into &quot;Profiles&quot; to create a more focused feed
* Export &amp; import subscriptions
* Youtube Trending
* Youtube Chapters
* Most popular videos page based on the set Invidious instance
* SponsorBlock 
* Open videos from your browser directly into FreeTube (with extension)
* Watch videos using an external player
* Full Theme support
* Make a screenshot of a video
* Multiple windows
* Mini Player (Picture-in-Picture)
* Keyboard shortcuts
* Option to show only family friendly content
* Show/hide functionality or elements within the app using the distraction free settings
* View channel community posts

### Browser Extensions
The following extensions open YouTube links directly in FreeTube:

- [LibRedirect](https://libredirect.github.io/)
- [RedirectTube](https://github.com/MStankiewiczOfficial/RedirectTube)

LibRedirect automatically redirect YouTube links to FreeTube.
&gt; [!IMPORTANT]
&gt; To ensure proper functionality, select FreeTube as Frontend in the Services settings of the extension.

RedirectTube, doesn‚Äôt automatically open YouTube links in FreeTube. Instead, it adds buttons to the toolbar and context menu, which you can click to open videos in FreeTube manually.

- Download LibRedirect from [Mozilla Add-ons](https://addons.mozilla.org/firefox/addon/libredirect/) (for Firefox based-browsers) or [developer&#039;s website](https://libredirect.github.io/download_chromium.html) (for Chrome and Chromium-based browsers).

- Download RedirectTube from [Mozilla Add-ons](https://addons.mozilla.org/firefox/addon/redirecttube/) (for Firefox based-browsers).

&gt; [!NOTE]
&gt; These extensions do not work on Linux portable builds!
&gt;
&gt; If you have issues with the extension working with FreeTube, please create an issue in this repository instead of the extension repository.

## Download Links
### Official Downloads

&gt; [!CAUTION]
&gt; FreeTube is only supported on Windows 10 and later, macOS 11 and above, and various Linux distributions. Installing it on unsupported systems may result in unexpected issues.

* [GitHub Releases](https://github.com/FreeTubeApp/FreeTube/releases)

* [FreeTube Website](https://freetubeapp.io/#download)

* Flatpak on Flathub: [Download](https://flathub.org/apps/details/io.freetubeapp.FreeTube) and [Source Code](https://github.com/flathub/io.freetubeapp.FreeTube)

#### Automated Builds (Nightly / Weekly)
&gt; [!WARNING]
&gt; Use these builds at your own risk. These are pre-release versions and are only intended for people that want to test changes early and are willing to accept that things could break from one build to another. 

Builds are automatically created from changes to our development branch via [GitHub Actions](https://github.com/FreeTubeApp/FreeTube/actions?query=workflow%3ABuild).

The first build with a green check mark is the latest build.  

&gt; [!IMPORTANT]
&gt; You will need to have a GitHub account to download these builds.

### Unofficial Downloads
&gt; [!WARNING]
&gt; These builds are maintained by the community. While they should be safe, download at your own risk. There may be issues with using these versus the official builds. Any issues specific with these builds should be sent to their respective maintainer. Make sure u always try an [official download](https://github.com/freetubeapp/freetube/#official-downloads) before reporting your issue to us!

* Arch User Repository (AUR): [Download](https://aur.archlinux.org/packages/freetube-bin/)

* Chocolatey: [Download](https://chocolatey.org/packages/freetube/)

* FreeTubeAndroid (FreeTube port for Android and PWA): [Download](https://github.com/MarmadileManteater/FreeTubeAndroid/releases) and [Source Code](https://github.com/MarmadileManteater/FreeTubeAndroid)

* Homebrew Formulae (Mac only): [Download](https://formulae.brew.sh/cask/freetube)

* makedeb Package Repository (MPR): [Download](https://mpr.makedeb.org/packages/freetube-bin)

* Nix Packages: [Download](https://search.nixos.org/packages?query=freetube)

* PortableApps (Windows Only): [Download](https://github.com/rddim/FreeTubePortable/releases) and [Source Code](https://github.com/rddim/FreeTubePortable)

* Scoop (Windows Only): [Usage](https://github.com/ScoopInstaller/Scoop)

* Snap: [Download](https://snapcraft.io/freetube) and [Source Code](https://git.launchpad.net/freetube)

* WAPT: [Download](https://wapt.tranquil.it/store/tis-freetube)

* Windows Package Manager (winget): [Usage](https://docs.microsoft.com/en-us/windows/package-manager/winget/)

## Contributing
Thank you very much to the [People and Projects](https://docs.freetubeapp.io/credits/) that make FreeTube possible!

If you like to get your hands dirty and want to contribute, we would love to
have your help.  Send a pull request and someone will review your code. 

&gt; [!IMPORTANT]
&gt; Please follow the [Contribution Guidelines](https://github.com/FreeTubeApp/FreeTube/blob/development/CONTRIBUTING.md) before sending your pull request.

## Localization
&lt;a href=&quot;https://hosted.weblate.org/engage/free-tube/&quot;&gt;
&lt;img src=&quot;https://hosted.weblate.org/widgets/free-tube/-/287x66-grey.png&quot; alt=&quot;Translation status&quot; /&gt;
&lt;/a&gt;

We are actively looking for translations!  We use [Weblate](https://hosted.weblate.org/engage/free-tube/) to make it easy for translators to get involved.  Click on the badge above to learn how to get involved.

For the Linux Flatpak, the desktop entry comment string can be translated at our [Flatpak repository](https://github.com/flathub/io.freetubeapp.FreeTube/blob/master/io.freetubeapp.FreeTube.desktop).

## Contact
If you ever have any questions, feel free to ask it on our [Discussions](https://github.com/FreeTubeApp/FreeTube/discussions) page.  Alternatively, you can email us at FreeTubeApp@protonmail.com or you can join our [Matrix Community](https://matrix.to/#/+freetube:matrix.org).  

&gt; [!IMPORTANT]
&gt; Don&#039;t forget to check out the [rules](https://docs.freetubeapp.io/community/matrix/) before joining.

## Donate
If you enjoy using FreeTube, you&#039;re welcome to leave a donation using the following method.  

* Bitcoin Address: `1Lih7Ho5gnxb1CwPD4o59ss78pwo2T91eS`

While your donations are much appreciated, only donate if you really want to.  Donations are used for keeping the website up and running and eventual code signing costs. 

&gt; [!TIP]
&gt; If you are using the Invidious API then we recommend that you donate to the instance that you use. You can also donate to the [Invidious team](https://invidious.io/donate/) or the [Local API developer](https://github.com/sponsors/LuanRT).

## License
[![GNU AGPLv3 Image](https://www.gnu.org/graphics/agplv3-155x51.png)](https://www.gnu.org/licenses/agpl-3.0.html)  

FreeTube is Free Software: You can use, study share and improve it at your
will. Specifically you can redistribute and/or modify it under the terms of the
[GNU Affero General Public License](https://www.gnu.org/licenses/agpl-3.0.html) as
published by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.  
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[ryanmcdermott/clean-code-javascript]]></title>
            <link>https://github.com/ryanmcdermott/clean-code-javascript</link>
            <guid>https://github.com/ryanmcdermott/clean-code-javascript</guid>
            <pubDate>Sun, 24 Aug 2025 00:05:00 GMT</pubDate>
            <description><![CDATA[Clean Code concepts adapted for JavaScript]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ryanmcdermott/clean-code-javascript">ryanmcdermott/clean-code-javascript</a></h1>
            <p>Clean Code concepts adapted for JavaScript</p>
            <p>Language: JavaScript</p>
            <p>Stars: 93,637</p>
            <p>Forks: 12,473</p>
            <p>Stars today: 84 stars today</p>
            <h2>README</h2><pre># clean-code-javascript

## Table of Contents

1. [Introduction](#introduction)
2. [Variables](#variables)
3. [Functions](#functions)
4. [Objects and Data Structures](#objects-and-data-structures)
5. [Classes](#classes)
6. [SOLID](#solid)
7. [Testing](#testing)
8. [Concurrency](#concurrency)
9. [Error Handling](#error-handling)
10. [Formatting](#formatting)
11. [Comments](#comments)
12. [Translation](#translation)

## Introduction

![Humorous image of software quality estimation as a count of how many expletives
you shout when reading code](https://www.osnews.com/images/comics/wtfm.jpg)

Software engineering principles, from Robert C. Martin&#039;s book
[_Clean Code_](https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882),
adapted for JavaScript. This is not a style guide. It&#039;s a guide to producing
[readable, reusable, and refactorable](https://github.com/ryanmcdermott/3rs-of-software-architecture) software in JavaScript.

Not every principle herein has to be strictly followed, and even fewer will be
universally agreed upon. These are guidelines and nothing more, but they are
ones codified over many years of collective experience by the authors of
_Clean Code_.

Our craft of software engineering is just a bit over 50 years old, and we are
still learning a lot. When software architecture is as old as architecture
itself, maybe then we will have harder rules to follow. For now, let these
guidelines serve as a touchstone by which to assess the quality of the
JavaScript code that you and your team produce.

One more thing: knowing these won&#039;t immediately make you a better software
developer, and working with them for many years doesn&#039;t mean you won&#039;t make
mistakes. Every piece of code starts as a first draft, like wet clay getting
shaped into its final form. Finally, we chisel away the imperfections when
we review it with our peers. Don&#039;t beat yourself up for first drafts that need
improvement. Beat up the code instead!

## **Variables**

### Use meaningful and pronounceable variable names

**Bad:**

```javascript
const yyyymmdstr = moment().format(&quot;YYYY/MM/DD&quot;);
```

**Good:**

```javascript
const currentDate = moment().format(&quot;YYYY/MM/DD&quot;);
```

**[‚¨Ü back to top](#table-of-contents)**

### Use the same vocabulary for the same type of variable

**Bad:**

```javascript
getUserInfo();
getClientData();
getCustomerRecord();
```

**Good:**

```javascript
getUser();
```

**[‚¨Ü back to top](#table-of-contents)**

### Use searchable names

We will read more code than we will ever write. It&#039;s important that the code we
do write is readable and searchable. By _not_ naming variables that end up
being meaningful for understanding our program, we hurt our readers.
Make your names searchable. Tools like
[buddy.js](https://github.com/danielstjules/buddy.js) and
[ESLint](https://github.com/eslint/eslint/blob/660e0918933e6e7fede26bc675a0763a6b357c94/docs/rules/no-magic-numbers.md)
can help identify unnamed constants.

**Bad:**

```javascript
// What the heck is 86400000 for?
setTimeout(blastOff, 86400000);
```

**Good:**

```javascript
// Declare them as capitalized named constants.
const MILLISECONDS_PER_DAY = 60 * 60 * 24 * 1000; //86400000;

setTimeout(blastOff, MILLISECONDS_PER_DAY);
```

**[‚¨Ü back to top](#table-of-contents)**

### Use explanatory variables

**Bad:**

```javascript
const address = &quot;One Infinite Loop, Cupertino 95014&quot;;
const cityZipCodeRegex = /^[^,\\]+[,\\\s]+(.+?)\s*(\d{5})?$/;
saveCityZipCode(
  address.match(cityZipCodeRegex)[1],
  address.match(cityZipCodeRegex)[2]
);
```

**Good:**

```javascript
const address = &quot;One Infinite Loop, Cupertino 95014&quot;;
const cityZipCodeRegex = /^[^,\\]+[,\\\s]+(.+?)\s*(\d{5})?$/;
const [_, city, zipCode] = address.match(cityZipCodeRegex) || [];
saveCityZipCode(city, zipCode);
```

**[‚¨Ü back to top](#table-of-contents)**

### Avoid Mental Mapping

Explicit is better than implicit.

**Bad:**

```javascript
const locations = [&quot;Austin&quot;, &quot;New York&quot;, &quot;San Francisco&quot;];
locations.forEach(l =&gt; {
  doStuff();
  doSomeOtherStuff();
  // ...
  // ...
  // ...
  // Wait, what is `l` for again?
  dispatch(l);
});
```

**Good:**

```javascript
const locations = [&quot;Austin&quot;, &quot;New York&quot;, &quot;San Francisco&quot;];
locations.forEach(location =&gt; {
  doStuff();
  doSomeOtherStuff();
  // ...
  // ...
  // ...
  dispatch(location);
});
```

**[‚¨Ü back to top](#table-of-contents)**

### Don&#039;t add unneeded context

If your class/object name tells you something, don&#039;t repeat that in your
variable name.

**Bad:**

```javascript
const Car = {
  carMake: &quot;Honda&quot;,
  carModel: &quot;Accord&quot;,
  carColor: &quot;Blue&quot;
};

function paintCar(car, color) {
  car.carColor = color;
}
```

**Good:**

```javascript
const Car = {
  make: &quot;Honda&quot;,
  model: &quot;Accord&quot;,
  color: &quot;Blue&quot;
};

function paintCar(car, color) {
  car.color = color;
}
```

**[‚¨Ü back to top](#table-of-contents)**

### Use default parameters instead of short circuiting or conditionals

Default parameters are often cleaner than short circuiting. Be aware that if you
use them, your function will only provide default values for `undefined`
arguments. Other &quot;falsy&quot; values such as `&#039;&#039;`, `&quot;&quot;`, `false`, `null`, `0`, and
`NaN`, will not be replaced by a default value.

**Bad:**

```javascript
function createMicrobrewery(name) {
  const breweryName = name || &quot;Hipster Brew Co.&quot;;
  // ...
}
```

**Good:**

```javascript
function createMicrobrewery(name = &quot;Hipster Brew Co.&quot;) {
  // ...
}
```

**[‚¨Ü back to top](#table-of-contents)**

## **Functions**

### Function arguments (2 or fewer ideally)

Limiting the amount of function parameters is incredibly important because it
makes testing your function easier. Having more than three leads to a
combinatorial explosion where you have to test tons of different cases with
each separate argument.

One or two arguments is the ideal case, and three should be avoided if possible.
Anything more than that should be consolidated. Usually, if you have
more than two arguments then your function is trying to do too much. In cases
where it&#039;s not, most of the time a higher-level object will suffice as an
argument.

Since JavaScript allows you to make objects on the fly, without a lot of class
boilerplate, you can use an object if you are finding yourself needing a
lot of arguments.

To make it obvious what properties the function expects, you can use the ES2015/ES6
destructuring syntax. This has a few advantages:

1. When someone looks at the function signature, it&#039;s immediately clear what
   properties are being used.
2. It can be used to simulate named parameters.
3. Destructuring also clones the specified primitive values of the argument
   object passed into the function. This can help prevent side effects. Note:
   objects and arrays that are destructured from the argument object are NOT
   cloned.
4. Linters can warn you about unused properties, which would be impossible
   without destructuring.

**Bad:**

```javascript
function createMenu(title, body, buttonText, cancellable) {
  // ...
}

createMenu(&quot;Foo&quot;, &quot;Bar&quot;, &quot;Baz&quot;, true);

```

**Good:**

```javascript
function createMenu({ title, body, buttonText, cancellable }) {
  // ...
}

createMenu({
  title: &quot;Foo&quot;,
  body: &quot;Bar&quot;,
  buttonText: &quot;Baz&quot;,
  cancellable: true
});
```

**[‚¨Ü back to top](#table-of-contents)**

### Functions should do one thing

This is by far the most important rule in software engineering. When functions
do more than one thing, they are harder to compose, test, and reason about.
When you can isolate a function to just one action, it can be refactored
easily and your code will read much cleaner. If you take nothing else away from
this guide other than this, you&#039;ll be ahead of many developers.

**Bad:**

```javascript
function emailClients(clients) {
  clients.forEach(client =&gt; {
    const clientRecord = database.lookup(client);
    if (clientRecord.isActive()) {
      email(client);
    }
  });
}
```

**Good:**

```javascript
function emailActiveClients(clients) {
  clients.filter(isActiveClient).forEach(email);
}

function isActiveClient(client) {
  const clientRecord = database.lookup(client);
  return clientRecord.isActive();
}
```

**[‚¨Ü back to top](#table-of-contents)**

### Function names should say what they do

**Bad:**

```javascript
function addToDate(date, month) {
  // ...
}

const date = new Date();

// It&#039;s hard to tell from the function name what is added
addToDate(date, 1);
```

**Good:**

```javascript
function addMonthToDate(month, date) {
  // ...
}

const date = new Date();
addMonthToDate(1, date);
```

**[‚¨Ü back to top](#table-of-contents)**

### Functions should only be one level of abstraction

When you have more than one level of abstraction your function is usually
doing too much. Splitting up functions leads to reusability and easier
testing.

**Bad:**

```javascript
function parseBetterJSAlternative(code) {
  const REGEXES = [
    // ...
  ];

  const statements = code.split(&quot; &quot;);
  const tokens = [];
  REGEXES.forEach(REGEX =&gt; {
    statements.forEach(statement =&gt; {
      // ...
    });
  });

  const ast = [];
  tokens.forEach(token =&gt; {
    // lex...
  });

  ast.forEach(node =&gt; {
    // parse...
  });
}
```

**Good:**

```javascript
function parseBetterJSAlternative(code) {
  const tokens = tokenize(code);
  const syntaxTree = parse(tokens);
  syntaxTree.forEach(node =&gt; {
    // parse...
  });
}

function tokenize(code) {
  const REGEXES = [
    // ...
  ];

  const statements = code.split(&quot; &quot;);
  const tokens = [];
  REGEXES.forEach(REGEX =&gt; {
    statements.forEach(statement =&gt; {
      tokens.push(/* ... */);
    });
  });

  return tokens;
}

function parse(tokens) {
  const syntaxTree = [];
  tokens.forEach(token =&gt; {
    syntaxTree.push(/* ... */);
  });

  return syntaxTree;
}
```

**[‚¨Ü back to top](#table-of-contents)**

### Remove duplicate code

Do your absolute best to avoid duplicate code. Duplicate code is bad because it
means that there&#039;s more than one place to alter something if you need to change
some logic.

Imagine if you run a restaurant and you keep track of your inventory: all your
tomatoes, onions, garlic, spices, etc. If you have multiple lists that
you keep this on, then all have to be updated when you serve a dish with
tomatoes in them. If you only have one list, there&#039;s only one place to update!

Oftentimes you have duplicate code because you have two or more slightly
different things, that share a lot in common, but their differences force you
to have two or more separate functions that do much of the same things. Removing
duplicate code means creating an abstraction that can handle this set of
different things with just one function/module/class.

Getting the abstraction right is critical, that&#039;s why you should follow the
SOLID principles laid out in the _Classes_ section. Bad abstractions can be
worse than duplicate code, so be careful! Having said this, if you can make
a good abstraction, do it! Don&#039;t repeat yourself, otherwise you&#039;ll find yourself
updating multiple places anytime you want to change one thing.

**Bad:**

```javascript
function showDeveloperList(developers) {
  developers.forEach(developer =&gt; {
    const expectedSalary = developer.calculateExpectedSalary();
    const experience = developer.getExperience();
    const githubLink = developer.getGithubLink();
    const data = {
      expectedSalary,
      experience,
      githubLink
    };

    render(data);
  });
}

function showManagerList(managers) {
  managers.forEach(manager =&gt; {
    const expectedSalary = manager.calculateExpectedSalary();
    const experience = manager.getExperience();
    const portfolio = manager.getMBAProjects();
    const data = {
      expectedSalary,
      experience,
      portfolio
    };

    render(data);
  });
}
```

**Good:**

```javascript
function showEmployeeList(employees) {
  employees.forEach(employee =&gt; {
    const expectedSalary = employee.calculateExpectedSalary();
    const experience = employee.getExperience();

    const data = {
      expectedSalary,
      experience
    };

    switch (employee.type) {
      case &quot;manager&quot;:
        data.portfolio = employee.getMBAProjects();
        break;
      case &quot;developer&quot;:
        data.githubLink = employee.getGithubLink();
        break;
    }

    render(data);
  });
}
```

**[‚¨Ü back to top](#table-of-contents)**

### Set default objects with Object.assign

**Bad:**

```javascript
const menuConfig = {
  title: null,
  body: &quot;Bar&quot;,
  buttonText: null,
  cancellable: true
};

function createMenu(config) {
  config.title = config.title || &quot;Foo&quot;;
  config.body = config.body || &quot;Bar&quot;;
  config.buttonText = config.buttonText || &quot;Baz&quot;;
  config.cancellable =
    config.cancellable !== undefined ? config.cancellable : true;
}

createMenu(menuConfig);
```

**Good:**

```javascript
const menuConfig = {
  title: &quot;Order&quot;,
  // User did not include &#039;body&#039; key
  buttonText: &quot;Send&quot;,
  cancellable: true
};

function createMenu(config) {
  let finalConfig = Object.assign(
    {
      title: &quot;Foo&quot;,
      body: &quot;Bar&quot;,
      buttonText: &quot;Baz&quot;,
      cancellable: true
    },
    config
  );
  return finalConfig
  // config now equals: {title: &quot;Order&quot;, body: &quot;Bar&quot;, buttonText: &quot;Send&quot;, cancellable: true}
  // ...
}

createMenu(menuConfig);
```

**[‚¨Ü back to top](#table-of-contents)**

### Don&#039;t use flags as function parameters

Flags tell your user that this function does more than one thing. Functions should do one thing. Split out your functions if they are following different code paths based on a boolean.

**Bad:**

```javascript
function createFile(name, temp) {
  if (temp) {
    fs.create(`./temp/${name}`);
  } else {
    fs.create(name);
  }
}
```

**Good:**

```javascript
function createFile(name) {
  fs.create(name);
}

function createTempFile(name) {
  createFile(`./temp/${name}`);
}
```

**[‚¨Ü back to top](#table-of-contents)**

### Avoid Side Effects (part 1)

A function produces a side effect if it does anything other than take a value in
and return another value or values. A side effect could be writing to a file,
modifying some global variable, or accidentally wiring all your money to a
stranger.

Now, you do need to have side effects in a program on occasion. Like the previous
example, you might need to write to a file. What you want to do is to
centralize where you are doing this. Don&#039;t have several functions and classes
that write to a particular file. Have one service that does it. One and only one.

The main point is to avoid common pitfalls like sharing state between objects
without any structure, using mutable data types that can be written to by anything,
and not centralizing where your side effects occur. If you can do this, you will
be happier than the vast majority of other programmers.

**Bad:**

```javascript
// Global variable referenced by following function.
// If we had another function that used this name, now it&#039;d be an array and it could break it.
let name = &quot;Ryan McDermott&quot;;

function splitIntoFirstAndLastName() {
  name = name.split(&quot; &quot;);
}

splitIntoFirstAndLastName();

console.log(name); // [&#039;Ryan&#039;, &#039;McDermott&#039;];
```

**Good:**

```javascript
function splitIntoFirstAndLastName(name) {
  return name.split(&quot; &quot;);
}

const name = &quot;Ryan McDermott&quot;;
const newName = splitIntoFirstAndLastName(name);

console.log(name); // &#039;Ryan McDermott&#039;;
console.log(newName); // [&#039;Ryan&#039;, &#039;McDermott&#039;];
```

**[‚¨Ü back to top](#table-of-contents)**

### Avoid Side Effects (part 2)

In JavaScript, some values are unchangeable (immutable) and some are changeable 
(mutable). Objects and arrays are two kinds of mutable values so it&#039;s important 
to handle them carefully when they&#039;re passed as parameters to a function. A 
JavaScript function can change an object&#039;s properties or alter the contents of 
an array which could easily cause bugs elsewhere.

Suppose there&#039;s a function that accepts an array parameter representing a 
shopping cart. If the function makes a change in that shopping cart array - 
by adding an item to purchase, for example - then any other function that 
uses that same `cart` array will be affected by this addition. That may be 
great, however it could also be bad. Let&#039;s imagine a bad situation:

The user clicks the &quot;Purchase&quot; button which calls a `purchase` function that
spawns a network request and sends the `cart` array to the server. Because
of a bad network connection, the `purchase` function has to keep retrying the
request. Now, what if in the meantime the user accidentally clicks an &quot;Add to Cart&quot;
button on an item they don&#039;t actually want before the network request begins?
If that happens and the network request begins, then that purchase function
will send the accidentally added item because the `cart` array was modified.

A great solution would be for the `addItemToCart` function to always clone the 
`cart`, edit it, and return the clone. This would ensure that functions that are still
using the old shopping cart wouldn&#039;t be affected by the changes.

Two caveats to mention to this approach:

1. There might be cases where you actually want to modify the input object,
   but when you adopt this programming practice you will find that those cases
   are pretty rare. Most things can be refactored to have no side effects!

2. Cloning big objects can be very expensive in terms of performance. Luckily,
   this isn&#039;t a big issue in practice because there are
   [great libraries](https://facebook.github.io/immutable-js/) that allow
   this kind of programming approach to be fast and not as memory intensive as
   it would be for you to manually clone objects and arrays.

**Bad:**

```javascript
const addItemToCart = (cart, item) =&gt; {
  cart.push({ item, date: Date.now() });
};
```

**Good:**

```javascript
const addItemToCart = (cart, item) =&gt; {
  return [...cart, { item, date: Date.now() }];
};
```

**[‚¨Ü back to top](#table-of-contents)**

### Don&#039;t write to global functions

Polluting globals is a bad practice in JavaScript because you could clash with another
library and the user of your API would be none-the-wiser until they get an
exception in production. Let&#039;s think about an example: what if you wanted to
extend JavaScript&#039;s native Array method to have a `diff` method that could
show the difference between two arrays? You could write your new function
to the `Array.prototype`, but it could clash with another library that tried
to do the same thing. What if that other library was just using `diff` to find
the difference between the first and last elements of an array? This is why it
would be much better to just use ES2015/ES6 classes and simply extend the `Array` global.

**Bad:**

```javascript
Array.prototype.diff = function diff(comparisonArray) {
  const hash = new Set(comparisonArray);
  return this.filter(elem =&gt; !hash.has(elem));
};
```

**Good:**

```javascript
class SuperArray extends Array {
  diff(comparisonArray) {
    const hash = new Set(comparisonArray);
    return this.filter(elem =&gt; !hash.has(elem));
  }
}
```

**[‚¨Ü back to top](#table-of-contents)**

### Favor functional programming over imperative programming

JavaScript isn&#039;t a functional language in the way that Haskell is, but it has
a functional flavor to it. Functional languages can be cleaner and easier to test.
Favor this style of programming when you can.

**Bad:**

```javascript
const programmerOutput = [
  {
    name: &quot;Uncle Bobby&quot;,
    linesOfCode: 500
  },
  {
    name: &quot;Suzie Q&quot;,
    linesOfCode: 1500
  },
  {
    name: &quot;Jimmy Gosling&quot;,
    linesOfCode: 150
  },
  {
    name: &quot;Gracie Hopper&quot;,
    linesOfCode: 1000
  }
];

let totalOutput = 0;

for (let i = 0; i &lt; programmerOutput.length; i++) {
  totalOutput += programmerOutput[i].linesOfCode;
}
```

**Good:**

```javascript
const programmerOutput = [
  {
    name: &quot;Uncle Bobby&quot;,
    linesOfCode: 500
  },
  {
    name: &quot;Suzie Q&quot;,
    linesOfCode: 1500
  },
  {
    name: &quot;Jimmy Gosling&quot;,
    linesOfCode: 150
  },
  {
    name: &quot;Gracie Hopper&quot;,
    linesOfCode: 1000
  }
];

const totalOutput = program

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[LeCoupa/awesome-cheatsheets]]></title>
            <link>https://github.com/LeCoupa/awesome-cheatsheets</link>
            <guid>https://github.com/LeCoupa/awesome-cheatsheets</guid>
            <pubDate>Sun, 24 Aug 2025 00:04:59 GMT</pubDate>
            <description><![CDATA[üë©‚Äçüíªüë®‚Äçüíª Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/LeCoupa/awesome-cheatsheets">LeCoupa/awesome-cheatsheets</a></h1>
            <p>üë©‚Äçüíªüë®‚Äçüíª Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 43,823</p>
            <p>Forks: 6,553</p>
            <p>Stars today: 95 stars today</p>
            <h2>README</h2><pre>[![AWESOME CHEATSHEETS LOGO](_design/cover_github@2x.png)](https://lecoupa.github.io/awesome-cheatsheets/)

[![Awesome](https://awesome.re/badge.svg)](https://awesome.re) [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/LeCoupa/awesome-cheatsheets/blob/master/LICENSE)

**WEBSITE DIRECTORY**: [Available here](https://lecoupa.github.io/awesome-cheatsheets/).

&gt; üìö Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.

## ü§î Why Awesome-Cheatsheets?

I usually make a cheat sheet when I want to improve my skills in a programming language, a framework or a development tool. [I started doing these kinds of things a long time ago on Gist](https://gist.github.com/LeCoupa). To better keep track of the history and to let people contribute, I re-organized all of them into this single repository. Most of the content is coming from official documentation and some books I have read.

Feel free to take a look. You might learn new things. They have been designed to provide a quick way to assess your knowledge and to save you time.

## üìö Table of Contents

### üìÉ Languages

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### Command line interface

- [Bash](languages/bash.sh)

#### Imperative

- [C](languages/C.txt)
- [C#](languages/C%23.txt)
- [Go](languages/golang.md)
- [Java](languages/java.md)
- [PHP](languages/php.php)
- [Python](languages/python.md)

#### Functional

- [JavaScript](languages/javascript.js)

&lt;/details&gt;

### üì¶ Backend

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### PHP

- [Laravel](backend/laravel.php)

#### Python

- [Django](backend/django.py)

#### Javascript

- [Adonis.js](backend/adonis.js)
- [Express.js](backend/express.js)
- [Feathers.js](backend/feathers.js)
- [Moleculer](backend/moleculer.js)
- [Node.js](backend/node.js)
- [Sails.js](backend/sails.js)
  &lt;/details&gt;

### üåê Frontend

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### Basics

- [HTML5](frontend/html5.html)
- [CSS3](frontend/css3.css)

#### Frameworks

- [React.js](frontend/react.js)
- [Vue.js](frontend/vue.js)
- [Tailwind.css](frontend/tailwind.css)
- [Ember.js](frontend/ember.js)
- [Angular (2+)](frontend/angular.js)
- [AngularJS](frontend/angularjs.js)
  &lt;/details&gt;

### üóÉÔ∏è Databases

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### SQL

- [MySQL](databases/mysql.sh)

#### NoSQL

- [Redis](databases/redis.sh)
  &lt;/details&gt;

### üîß Tools

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### Development

- [cURL](tools/curl.sh)
- [Drush](tools/drush.sh)
- [Elasticsearch](tools/elasticsearch.js)
- [Emmet](tools/emmet.md)
- [Git](tools/git.sh)
- [Puppeteer](tools/puppeteer.js)
- [Sublime Text](tools/sublime_text.md)
- [VIM](tools/vim.txt)
- [Visual Studio Code](tools/vscode.md)
- [Xcode](tools/xcode.txt)

#### Infrastructure

- [AWS CLI](tools/aws.sh)
- [Docker](tools/docker.sh)
- [Heroku CLI](tools/heroku.sh)
- [Kubernetes](tools/kubernetes.md)
- [Nanobox Boxfile](tools/nanobox_boxfile.yml)
- [Nanobox CLI](tools/nanobox_cli.sh)
- [Nginx](tools/nginx.sh)
- [PM2](tools/pm2.sh)
- [Ubuntu](tools/ubuntu.sh)
- [Firebase CLI](tools/firebase_cli.md)
  &lt;/details&gt;

## üôåüèº How to Contribute?

You are more than welcome to contribute and build your own cheat sheet for your favorite programming language, framework or development tool. Just submit changes via pull request and I will review them before merging.

## üë©‚Äçüíªüë®‚Äçüíª Our valuable Contributors

&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/LeCoupa/awesome-cheatsheets/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contributors-img.web.app/image?repo=LeCoupa/awesome-cheatsheets&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[HeyPuter/puter]]></title>
            <link>https://github.com/HeyPuter/puter</link>
            <guid>https://github.com/HeyPuter/puter</guid>
            <pubDate>Sun, 24 Aug 2025 00:04:58 GMT</pubDate>
            <description><![CDATA[üåê The Internet OS! Free, Open-Source, and Self-Hostable.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/HeyPuter/puter">HeyPuter/puter</a></h1>
            <p>üåê The Internet OS! Free, Open-Source, and Self-Hostable.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 35,631</p>
            <p>Forks: 2,730</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre>&lt;h3 align=&quot;center&quot;&gt;&lt;img width=&quot;80&quot; alt=&quot;Puter.com, The Personal Cloud Computer: All your files, apps, and games in one place accessible from anywhere at any time.&quot; src=&quot;https://assets.puter.site/puter-logo.png&quot;&gt;&lt;/h3&gt;

&lt;h3 align=&quot;center&quot;&gt;The Internet OS! Free, Open-Source, and Self-Hostable.&lt;/h3&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://puter.com/?ref=github.com&quot;&gt;&lt;strong&gt;¬´ LIVE DEMO ¬ª&lt;/strong&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://puter.com/?ref=github.com&quot;&gt;Puter.com&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://puter.com/app/app-center&quot;&gt;App Store&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://developer.puter.com&quot; target=&quot;_blank&quot;&gt;Developers&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://github.com/heyputer/puter-cli&quot; target=&quot;_blank&quot;&gt;CLI&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://discord.com/invite/PQcx7Teh8u&quot;&gt;Discord&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://reddit.com/r/puter&quot;&gt;Reddit&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://twitter.com/HeyPuter&quot;&gt;X&lt;/a&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;&lt;img width=&quot;800&quot; style=&quot;border-radius:5px;&quot; alt=&quot;screenshot&quot; src=&quot;https://assets.puter.site/puter.com-screenshot-3.webp&quot;&gt;&lt;/h3&gt;

&lt;br/&gt;

## Puter

Puter is an advanced, open-source internet operating system designed to be feature-rich, exceptionally fast, and highly extensible. Puter can be used as:

- A privacy-first personal cloud to keep all your files, apps, and games in one secure place, accessible from anywhere at any time.
- A platform for building and publishing websites, web apps, and games.
- An alternative to Dropbox, Google Drive, OneDrive, etc. with a fresh interface and powerful features.
- A remote desktop environment for servers and workstations.
- A friendly, open-source project and community to learn about web development, cloud computing, distributed systems, and much more!

&lt;br/&gt;

## Getting Started

### üíª Local Development

```bash
git clone https://github.com/HeyPuter/puter
cd puter
npm install
npm start
```
**‚Üí** This should launch Puter at 
&lt;font color=&quot;red&quot;&gt; http://puter.localhost:4100 (or the next available port). &lt;/font&gt;



If this does not work, see [First Run Issues](./doc/self-hosters/first-run-issues.md) for
troubleshooting steps.

&lt;br/&gt;

### üê≥ Docker

```bash
mkdir puter &amp;&amp; cd puter &amp;&amp; mkdir -p puter/config puter/data &amp;&amp; sudo chown -R 1000:1000 puter &amp;&amp; docker run --rm -p 4100:4100 -v `pwd`/puter/config:/etc/puter -v `pwd`/puter/data:/var/puter  ghcr.io/heyputer/puter
```
**‚Üí** This should launch Puter at 
&lt;font color=&quot;red&quot;&gt; http://puter.localhost:4100 (or the next available port). &lt;/font&gt;

&lt;br/&gt;

### üêô Docker Compose

#### Linux/macOS

```bash
mkdir -p puter/config puter/data
sudo chown -R 1000:1000 puter
wget https://raw.githubusercontent.com/HeyPuter/puter/main/docker-compose.yml
docker compose up
```
**‚Üí** This should be available at 
&lt;font color=&quot;red&quot;&gt; http://puter.localhost:4100 (or the next available port). &lt;/font&gt;

&lt;br/&gt;

#### Windows

```powershell
mkdir -p puter
cd puter
New-Item -Path &quot;puter\config&quot; -ItemType Directory -Force
New-Item -Path &quot;puter\data&quot; -ItemType Directory -Force
Invoke-WebRequest -Uri &quot;https://raw.githubusercontent.com/HeyPuter/puter/main/docker-compose.yml&quot; -OutFile &quot;docker-compose.yml&quot;
docker compose up
```
**‚Üí** This should launch Puter at 
&lt;font color=&quot;red&quot;&gt; http://puter.localhost:4100 (or the next available port). &lt;/font&gt;

&lt;br/&gt;

### üöÄ Self-Hosting

For detailed guides on self-hosting Puter, including configuration options and best practices, see our [Self-Hosting Documentation](https://github.com/HeyPuter/puter/blob/main/doc/self-hosters/instructions.md).

&lt;br/&gt;

### ‚òÅÔ∏è Puter.com

Puter is available as a hosted service at [**puter.com**](https://puter.com).

&lt;br/&gt;

## System Requirements

- **Operating Systems:** Linux, macOS, Windows
- **RAM:** 2GB minimum (4GB recommended)
- **Disk Space:** 1GB free space
- **Node.js:** Version 16+ (Version 23+ recommended)
- **npm:** Latest stable version

&lt;br/&gt;

## Support

Connect with the maintainers and community through these channels:

- Bug report or feature request? Please [open an issue](https://github.com/HeyPuter/puter/issues/new/choose).
- Discord: [discord.com/invite/PQcx7Teh8u](https://discord.com/invite/PQcx7Teh8u)
- X (Twitter): [x.com/HeyPuter](https://x.com/HeyPuter)
- Reddit: [reddit.com/r/puter/](https://www.reddit.com/r/puter/)
- Mastodon: [mastodon.social/@puter](https://mastodon.social/@puter)
- Security issues? [security@puter.com](mailto:security@puter.com)
- Email maintainers at [hi@puter.com](mailto:hi@puter.com)

We are always happy to help you with any questions you may have. Don&#039;t hesitate to ask!

&lt;br/&gt;

## License

This repository, including all its contents, sub-projects, modules, and components, is licensed under [AGPL-3.0](https://github.com/HeyPuter/puter/blob/main/LICENSE.txt) unless explicitly stated otherwise. Third-party libraries included in this repository may be subject to their own licenses.

&lt;br/&gt;

## Translations

- [Arabic / ÿßŸÑÿπÿ±ÿ®Ÿäÿ©](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ar.md)
- [Armenian / ’Ä’°’µ’•÷Ä’•’∂](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.hy.md)
- [Bengali / ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.bn.md)
- [Chinese / ‰∏≠Êñá](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.zh.md)
- [Danish / Dansk](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.da.md)
- [English](https://github.com/HeyPuter/puter/blob/main/README.md)
- [Farsi / ŸÅÿßÿ±ÿ≥€å](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.fa.md)
- [Finnish / Suomi](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.fi.md)
- [French / Fran√ßais](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.fr.md)
- [German/ Deutsch](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.de.md)
- [Hebrew/ ◊¢◊ë◊®◊ô◊™](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.he.md)
- [Hindi / ‡§π‡§ø‡§Ç‡§¶‡•Ä](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.hi.md)
- [Hungarian / Magyar](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.hu.md)
- [Indonesian / Bahasa Indonesia](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.id.md)
- [Italian / Italiano](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.it.md)
- [Japanese / Êó•Êú¨Ë™û](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.jp.md)
- [Korean / ÌïúÍµ≠Ïñ¥](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ko.md)
- [Malayalam / ‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ml.md)
- [Polish / Polski](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.pl.md)
- [Portuguese / Portugu√™s](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.pt.md)
- [Romanian / Rom√¢nƒÉ](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ro.md)
- [Russian / –†—É—Å—Å–∫–∏–π](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ru.md)
- [Spanish / Espa√±ol](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.es.md)
- [Swedish / Svenska](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.sv.md)
- [Tamil / ‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ta.md)
- [Telugu / ‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.te.md)
- [Thai / ‡πÑ‡∏ó‡∏¢](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.th.md)
- [Turkish / T√ºrk√ße](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.tr.md)
- [Ukrainian / –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ua.md)
- [Urdu / ÿßÿ±ÿØŸà](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ur.md)
- [Vietnamese / Ti·∫øng Vi·ªát](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.vi.md)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[danielmiessler/Fabric]]></title>
            <link>https://github.com/danielmiessler/Fabric</link>
            <guid>https://github.com/danielmiessler/Fabric</guid>
            <pubDate>Sun, 24 Aug 2025 00:04:57 GMT</pubDate>
            <description><![CDATA[Fabric is an open-source framework for augmenting humans using AI. It provides a modular system for solving specific problems using a crowdsourced set of AI prompts that can be used anywhere.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/danielmiessler/Fabric">danielmiessler/Fabric</a></h1>
            <p>Fabric is an open-source framework for augmenting humans using AI. It provides a modular system for solving specific problems using a crowdsourced set of AI prompts that can be used anywhere.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 33,158</p>
            <p>Forks: 3,407</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
Fabric is graciously supported by‚Ä¶

[![Github Repo Tagline](https://github.com/user-attachments/assets/96ab3d81-9b13-4df4-ba09-75dee7a5c3d2)](https://warp.dev/fabric)

&lt;img src=&quot;./docs/images/fabric-logo-gif.gif&quot; alt=&quot;fabriclogo&quot; width=&quot;400&quot; height=&quot;400&quot;/&gt;

# `fabric`

![Static Badge](https://img.shields.io/badge/mission-human_flourishing_via_AI_augmentation-purple)
&lt;br /&gt;
![GitHub top language](https://img.shields.io/github/languages/top/danielmiessler/fabric)
![GitHub last commit](https://img.shields.io/github/last-commit/danielmiessler/fabric)
[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](https://opensource.org/licenses/MIT)
[![Ask DeepWiki](https://deepwiki.com/badge.svg)](https://deepwiki.com/danielmiessler/fabric)

&lt;div align=&quot;center&quot;&gt;
&lt;h4&gt;&lt;code&gt;fabric&lt;/code&gt; is an open-source framework for augmenting humans using AI.&lt;/h4&gt;
&lt;/div&gt;

[Updates](#updates) ‚Ä¢
[What and Why](#what-and-why) ‚Ä¢
[Philosophy](#philosophy) ‚Ä¢
[Installation](#installation) ‚Ä¢
[Usage](#usage) ‚Ä¢
[Examples](#examples) ‚Ä¢
[Just Use the Patterns](#just-use-the-patterns) ‚Ä¢
[Custom Patterns](#custom-patterns) ‚Ä¢
[Helper Apps](#helper-apps) ‚Ä¢
[Meta](#meta)

![Screenshot of fabric](./docs/images/fabric-summarize.png)

&lt;/div&gt;

## What and why

Since the start of modern AI in late 2022 we&#039;ve seen an **_extraordinary_** number of AI applications for accomplishing tasks. There are thousands of websites, chat-bots, mobile apps, and other interfaces for using all the different AI out there.

It&#039;s all really exciting and powerful, but _it&#039;s not easy to integrate this functionality into our lives._

&lt;div class=&quot;align center&quot;&gt;
&lt;h4&gt;In other words, AI doesn&#039;t have a capabilities problem‚Äîit has an &lt;em&gt;integration&lt;/em&gt; problem.&lt;/h4&gt;
&lt;/div&gt;

**Fabric was created to address this by creating and organizing the fundamental units of AI‚Äîthe prompts themselves!**

Fabric organizes prompts by real-world task, allowing people to create, collect, and organize their most important AI solutions in a single place for use in their favorite tools. And if you&#039;re command-line focused, you can use Fabric itself as the interface!

## Updates

Dear Users,

We&#039;ve been doing so many exciting things here at Fabric, I wanted to give a quick summary here to give you a sense of our development velocity!

Below are the **new features and capabilities** we&#039;ve added (newest first):

### Recent Major Features

- [v1.4.294](https://github.com/danielmiessler/fabric/releases/tag/v1.4.294) (Aug 20, 2025) ‚Äî **Venice AI Support**: Added the Venice AI provider. Venice is a Privacy-First, Open-Source AI provider. See their [&quot;About Venice&quot;](https://docs.venice.ai/overview/about-venice) page for details.
- [v1.4.291](https://github.com/danielmiessler/fabric/releases/tag/v1.4.291) (Aug 18, 2025) ‚Äî **Speech To Text**: Add OpenAI speech-to-text support with `--transcribe-file`, `--transcribe-model`, and `--split-media-file` flags.
- [v1.4.287](https://github.com/danielmiessler/fabric/releases/tag/v1.4.287) (Aug 16, 2025) ‚Äî **AI Reasoning**: Add Thinking to Gemini models and introduce `readme_updates` python script
- [v1.4.286](https://github.com/danielmiessler/fabric/releases/tag/v1.4.286) (Aug 14, 2025) ‚Äî **AI Reasoning**: Introduce Thinking Config Across Anthropic and OpenAI Providers
- [v1.4.285](https://github.com/danielmiessler/fabric/releases/tag/v1.4.285) (Aug 13, 2025) ‚Äî **Extended Context**: Enable One Million Token Context Beta Feature for Sonnet-4
- [v1.4.284](https://github.com/danielmiessler/fabric/releases/tag/v1.4.284) (Aug 12, 2025) ‚Äî **Easy Shell Completions Setup**: Introduce One-Liner Curl Install for Completions
- [v1.4.283](https://github.com/danielmiessler/fabric/releases/tag/v1.4.283) (Aug 12, 2025) ‚Äî **Model Management**: Add Vendor Selection Support for Models
- [v1.4.282](https://github.com/danielmiessler/fabric/releases/tag/v1.4.282) (Aug 11, 2025) ‚Äî **Enhanced Shell Completions**: Enhanced Shell Completions for Fabric CLI Binaries
- [v1.4.281](https://github.com/danielmiessler/fabric/releases/tag/v1.4.281) (Aug 11, 2025) ‚Äî **Gemini Search Tool**: Add Web Search Tool Support for Gemini Models
- [v1.4.278](https://github.com/danielmiessler/fabric/releases/tag/v1.4.278) (Aug 9, 2025) ‚Äî **Enhance YouTube Transcripts**: Enhance YouTube Support with Custom yt-dlp Arguments
- [v1.4.277](https://github.com/danielmiessler/fabric/releases/tag/v1.4.277) (Aug 8, 2025) ‚Äî **Desktop Notifications**: Add cross-platform desktop notifications to Fabric CLI
- [v1.4.274](https://github.com/danielmiessler/fabric/releases/tag/v1.4.274) (Aug 7, 2025) ‚Äî **Claude 4.1 Added**: Add Support for Claude Opus 4.1 Model
- [v1.4.271](https://github.com/danielmiessler/fabric/releases/tag/v1.4.271) (Jul 28, 2025) ‚Äî **AI Summarized Release Notes**: Enable AI summary updates for GitHub releases
- [v1.4.268](https://github.com/danielmiessler/fabric/releases/tag/v1.4.268) (Jul 26, 2025) ‚Äî **Gemini TTS Voice Selection**: add Gemini TTS voice selection and listing functionality
- [v1.4.267](https://github.com/danielmiessler/fabric/releases/tag/v1.4.267) (Jul 26, 2025) ‚Äî **Text-to-Speech**: Update Gemini Plugin to New SDK with TTS Support
- [v1.4.258](https://github.com/danielmiessler/fabric/releases/tag/v1.4.258) (Jul 17, 2025) ‚Äî **Onboarding Improved**: Add startup check to initialize config and .env file automatically
- [v1.4.257](https://github.com/danielmiessler/fabric/releases/tag/v1.4.257) (Jul 17, 2025) ‚Äî **OpenAI Routing Control**: Introduce CLI Flag to Disable OpenAI Responses API
- [v1.4.252](https://github.com/danielmiessler/fabric/releases/tag/v1.4.252) (Jul 16, 2025) ‚Äî **Hide Thinking Block**: Optional Hiding of Model Thinking Process with Configurable Tags
- [v1.4.246](https://github.com/danielmiessler/fabric/releases/tag/v1.4.246) (Jul 14, 2025) ‚Äî **Automatic ChangeLog Updates**: Add AI-powered changelog generation with high-performance Go tool and comprehensive caching
- [v1.4.245](https://github.com/danielmiessler/fabric/releases/tag/v1.4.245) (Jul 11, 2025) ‚Äî **Together AI**: Together AI Support with OpenAI Fallback Mechanism Added
- [v1.4.232](https://github.com/danielmiessler/fabric/releases/tag/v1.4.232) (Jul 6, 2025) ‚Äî **Add Custom**: Add Custom Patterns Directory Support
- [v1.4.231](https://github.com/danielmiessler/fabric/releases/tag/v1.4.231) (Jul 5, 2025) ‚Äî **OAuth Auto-Auth**: OAuth Authentication Support for Anthropic (Use your Max Subscription)
- [v1.4.230](https://github.com/danielmiessler/fabric/releases/tag/v1.4.230) (Jul 5, 2025) ‚Äî **Model Management**: Add advanced image generation parameters for OpenAI models with four new CLI flags
- [v1.4.227](https://github.com/danielmiessler/fabric/releases/tag/v1.4.227) (Jul 4, 2025) ‚Äî **Add Image**: Add Image Generation Support to Fabric
- [v1.4.226](https://github.com/danielmiessler/fabric/releases/tag/v1.4.226) (Jul 4, 2025) ‚Äî **Web Search**: OpenAI Plugin Now Supports Web Search Functionality
- [v1.4.225](https://github.com/danielmiessler/fabric/releases/tag/v1.4.225) (Jul 4, 2025) ‚Äî **Web Search**: Runtime Web Search Control via Command-Line `--search` Flag
- [v1.4.224](https://github.com/danielmiessler/fabric/releases/tag/v1.4.224) (Jul 1, 2025) ‚Äî **Add code_review**: Add code_review pattern and updates in Pattern_Descriptions
- [v1.4.222](https://github.com/danielmiessler/fabric/releases/tag/v1.4.222) (Jul 1, 2025) ‚Äî **OpenAI Plugin**: OpenAI Plugin Migrates to New Responses API
- [v1.4.218](https://github.com/danielmiessler/fabric/releases/tag/v1.4.218) (Jun 27, 2025) ‚Äî **Model Management**: Add Support for OpenAI Search and Research Model Variants
- [v1.4.217](https://github.com/danielmiessler/fabric/releases/tag/v1.4.217) (Jun 26, 2025) ‚Äî **New YouTube**: New YouTube Transcript Endpoint Added to REST API
- [v1.4.212](https://github.com/danielmiessler/fabric/releases/tag/v1.4.212) (Jun 23, 2025) ‚Äî **Add Langdock**: Add Langdock AI and enhance generic OpenAI compatible support
- [v1.4.211](https://github.com/danielmiessler/fabric/releases/tag/v1.4.211) (Jun 19, 2025) ‚Äî **REST API**: REST API and Web UI Now Support Dynamic Pattern Variables
- [v1.4.210](https://github.com/danielmiessler/fabric/releases/tag/v1.4.210) (Jun 18, 2025) ‚Äî **Add Citations**: Add Citation Support to Perplexity Response
- [v1.4.208](https://github.com/danielmiessler/fabric/releases/tag/v1.4.208) (Jun 17, 2025) ‚Äî **Add Perplexity**: Add Perplexity AI Provider with Token Limits Support
- [v1.4.203](https://github.com/danielmiessler/fabric/releases/tag/v1.4.203) (Jun 14, 2025) ‚Äî **Add Amazon Bedrock**: Add support for Amazon Bedrock

These features represent our commitment to making Fabric the most powerful and flexible AI augmentation framework available!

## Intro videos

Keep in mind that many of these were recorded when Fabric was Python-based, so remember to use the current [install instructions](#installation) below.

- [Network Chuck](https://www.youtube.com/watch?v=UbDyjIIGaxQ)
- [David Bombal](https://www.youtube.com/watch?v=vF-MQmVxnCs)
- [My Own Intro to the Tool](https://www.youtube.com/watch?v=wPEyyigh10g)
- [More Fabric YouTube Videos](https://www.youtube.com/results?search_query=fabric+ai)

## Navigation

- [`fabric`](#fabric)
  - [What and why](#what-and-why)
  - [Updates](#updates)
    - [Recent Major Features](#recent-major-features)
  - [Intro videos](#intro-videos)
  - [Navigation](#navigation)
  - [Changelog](#changelog)
  - [Philosophy](#philosophy)
    - [Breaking problems into components](#breaking-problems-into-components)
    - [Too many prompts](#too-many-prompts)
  - [Installation](#installation)
    - [Get Latest Release Binaries](#get-latest-release-binaries)
      - [Windows](#windows)
      - [macOS (arm64)](#macos-arm64)
      - [macOS (amd64)](#macos-amd64)
      - [Linux (amd64)](#linux-amd64)
      - [Linux (arm64)](#linux-arm64)
    - [Using package managers](#using-package-managers)
      - [macOS (Homebrew)](#macos-homebrew)
      - [Arch Linux (AUR)](#arch-linux-aur)
    - [From Source](#from-source)
    - [Environment Variables](#environment-variables)
    - [Setup](#setup)
    - [Per-Pattern Model Mapping](#per-pattern-model-mapping)
    - [Add aliases for all patterns](#add-aliases-for-all-patterns)
      - [Save your files in markdown using aliases](#save-your-files-in-markdown-using-aliases)
    - [Migration](#migration)
    - [Upgrading](#upgrading)
    - [Shell Completions](#shell-completions)
      - [Quick install (no clone required)](#quick-install-no-clone-required)
      - [Zsh Completion](#zsh-completion)
      - [Bash Completion](#bash-completion)
      - [Fish Completion](#fish-completion)
  - [Usage](#usage)
    - [Debug Levels](#debug-levels)
  - [Our approach to prompting](#our-approach-to-prompting)
  - [Examples](#examples)
  - [Just use the Patterns](#just-use-the-patterns)
    - [Prompt Strategies](#prompt-strategies)
  - [Custom Patterns](#custom-patterns)
    - [Setting Up Custom Patterns](#setting-up-custom-patterns)
    - [Using Custom Patterns](#using-custom-patterns)
    - [How It Works](#how-it-works)
  - [Helper Apps](#helper-apps)
    - [`to_pdf`](#to_pdf)
    - [`to_pdf` Installation](#to_pdf-installation)
    - [`code_helper`](#code_helper)
  - [pbpaste](#pbpaste)
  - [Web Interface](#web-interface)
    - [Installing](#installing)
    - [Streamlit UI](#streamlit-ui)
      - [Clipboard Support](#clipboard-support)
  - [Meta](#meta)
    - [Primary contributors](#primary-contributors)
    - [Contributors](#contributors)

&lt;br /&gt;

## Changelog

Fabric is evolving rapidly.

Stay current with the latest features by reviewing the [CHANGELOG](./CHANGELOG.md) for all recent changes.

## Philosophy

&gt; AI isn&#039;t a thing; it&#039;s a _magnifier_ of a thing. And that thing is **human creativity**.

We believe the purpose of technology is to help humans flourish, so when we talk about AI we start with the **human** problems we want to solve.

### Breaking problems into components

Our approach is to break problems into individual pieces (see below) and then apply AI to them one at a time. See below for some examples.

&lt;img width=&quot;2078&quot; alt=&quot;augmented_challenges&quot; src=&quot;https://github.com/danielmiessler/fabric/assets/50654/31997394-85a9-40c2-879b-b347e4701f06&quot;&gt;

### Too many prompts

Prompts are good for this, but the biggest challenge I faced in 2023‚Äî‚Äîwhich still exists today‚Äîis **the sheer number of AI prompts out there**. We all have prompts that are useful, but it&#039;s hard to discover new ones, know if they are good or not, _and manage different versions of the ones we like_.

One of `fabric`&#039;s primary features is helping people collect and integrate prompts, which we call _Patterns_, into various parts of their lives.

Fabric has Patterns for all sorts of life and work activities, including:

- Extracting the most interesting parts of YouTube videos and podcasts
- Writing an essay in your own voice with just an idea as an input
- Summarizing opaque academic papers
- Creating perfectly matched AI art prompts for a piece of writing
- Rating the quality of content to see if you want to read/watch the whole thing
- Getting summaries of long, boring content
- Explaining code to you
- Turning bad documentation into usable documentation
- Creating social media posts from any content input
- And a million more‚Ä¶

## Installation

To install Fabric, you can use the latest release binaries or install it from the source.

### Get Latest Release Binaries

#### Windows

`https://github.com/danielmiessler/fabric/releases/latest/download/fabric-windows-amd64.exe`

Or via PowerShell, just copy and paste and run the following snippet to install the binary into `{HOME}\.local\bin`. Please make sure that directory is included in your `PATH`.

```powershell
$ErrorActionPreference = &quot;Stop&quot;
$LATEST=&quot;https://github.com/danielmiessler/fabric/releases/latest/download/fabric-windows-amd64.exe&quot;
$DIR=&quot;${HOME}\.local\bin&quot;
New-Item -Path $DIR -ItemType Directory -Force
Invoke-WebRequest -URI  &quot;${LATEST}&quot; -outfile &quot;${DIR}\fabric.exe&quot;
&amp; &quot;${DIR}\fabric.exe&quot; /version
```

#### macOS (arm64)

`curl -L https://github.com/danielmiessler/fabric/releases/latest/download/fabric-darwin-arm64 &gt; fabric &amp;&amp; chmod +x fabric &amp;&amp; ./fabric --version`

#### macOS (amd64)

`curl -L https://github.com/danielmiessler/fabric/releases/latest/download/fabric-darwin-amd64 &gt; fabric &amp;&amp; chmod +x fabric &amp;&amp; ./fabric --version`

#### Linux (amd64)

`curl -L https://github.com/danielmiessler/fabric/releases/latest/download/fabric-linux-amd64 &gt; fabric &amp;&amp; chmod +x fabric &amp;&amp; ./fabric --version`

#### Linux (arm64)

`curl -L https://github.com/danielmiessler/fabric/releases/latest/download/fabric-linux-arm64 &gt; fabric &amp;&amp; chmod +x fabric &amp;&amp; ./fabric --version`

### Using package managers

**NOTE:** using Homebrew or the Arch Linux package managers makes `fabric` available as `fabric-ai`, so add
the following alias to your shell startup files to account for this:

```bash
alias fabric=&#039;fabric-ai&#039;
```

#### macOS (Homebrew)

`brew install fabric-ai`

#### Arch Linux (AUR)

`yay -S fabric-ai`

### From Source

To install Fabric, [make sure Go is installed](https://go.dev/doc/install), and then run the following command.

```bash
# Install Fabric directly from the repo
go install github.com/danielmiessler/fabric/cmd/fabric@latest
```

### Environment Variables

You may need to set some environment variables in your `~/.bashrc` on linux or `~/.zshrc` file on mac to be able to run the `fabric` command. Here is an example of what you can add:

For Intel based macs or linux

```bash
# Golang environment variables
export GOROOT=/usr/local/go
export GOPATH=$HOME/go

# Update PATH to include GOPATH and GOROOT binaries
export PATH=$GOPATH/bin:$GOROOT/bin:$HOME/.local/bin:$PATH
```

for Apple Silicon based macs

```bash
# Golang environment variables
export GOROOT=$(brew --prefix go)/libexec
export GOPATH=$HOME/go
export PATH=$GOPATH/bin:$GOROOT/bin:$HOME/.local/bin:$PATH
```

### Setup

Now run the following command

```bash
# Run the setup to set up your directories and keys
fabric --setup
```

If everything works you are good to go.

### Per-Pattern Model Mapping

 You can configure specific models for individual patterns using environment variables
 like `FABRIC_MODEL_PATTERN_NAME=vendor|model`

 This makes it easy to maintain these per-pattern model mappings in your shell startup files.

### Add aliases for all patterns

In order to add aliases for all your patterns and use them directly as commands ie. `summarize` instead of `fabric --pattern summarize`
You can add the following to your `.zshrc` or `.bashrc` file.

```bash
# Loop through all files in the ~/.config/fabric/patterns directory
for pattern_file in $HOME/.config/fabric/patterns/*; do
    # Get the base name of the file (i.e., remove the directory path)
    pattern_name=$(basename &quot;$pattern_file&quot;)

    # Create an alias in the form: alias pattern_name=&quot;fabric --pattern pattern_name&quot;
    alias_command=&quot;alias $pattern_name=&#039;fabric --pattern $pattern_name&#039;&quot;

    # Evaluate the alias command to add it to the current shell
    eval &quot;$alias_command&quot;
done

yt() {
    if [ &quot;$#&quot; -eq 0 ] || [ &quot;$#&quot; -gt 2 ]; then
        echo &quot;Usage: yt [-t | --timestamps] youtube-link&quot;
        echo &quot;Use the &#039;-t&#039; flag to get the transcript with timestamps.&quot;
        return 1
    fi

    transcript_flag=&quot;--transcript&quot;
    if [ &quot;$1&quot; = &quot;-t&quot; ] || [ &quot;$1&quot; = &quot;--timestamps&quot; ]; then
        transcript_flag=&quot;--transcript-with-timestamps&quot;
        shift
    fi
    local video_link=&quot;$1&quot;
    fabric -y &quot;$video_link&quot; $transcript_flag
}
```

You can add the below code for the equivalent aliases inside PowerShell by running `notepad $PROFILE` inside a PowerShell window:

```powershell
# Path to the patterns directory
$patternsPath = Join-Path $HOME &quot;.config/fabric/patterns&quot;
foreach ($patternDir in Get-ChildItem -Path $patternsPath -Directory) {
    $patternName = $patternDir.Name

    # Dynamically define a function for each pattern
    $functionDefinition = @&quot;
function $patternName {
    [CmdletBinding()]
    param(
        [Parameter(ValueFromPipeline = `$true)]
        [string] `$InputObject,

        [Parameter(ValueFromRemainingArguments = `$true)]
        [String[]] `$patternArgs
    )

    begin {
        # Initialize an array to collect pipeline input
        `$collector = @()
    }

    process {
        # Collect pipeline input objects
        if (`$InputObject) {
            `$collector += `$InputObject
        }
    }

    end {
        # Join all pipeline input into a single string, separated by newlines
        `$pipelineContent = `$collector -join &quot;`n&quot;

        # If there&#039;s pipeline input, include it in the call to fabric
        if (`$pipelineContent) {
            `$pipelineContent | fabric --pattern $patternName `$patternArgs
        } else {
            # No pipeline input; just call fabric with the additional args
            fabric --pattern $patternName `$patternArgs
        }
    }
}
&quot;@
    # Add the function to the current session
    Invoke-Expression $functionDefinition
}

# Define the &#039;yt&#039; function as well
function yt {
    [CmdletBinding()]
    param(
        [Parameter()]
        [Alias(&quot;timestamps&quot;)]
        [switch]$t,

        [Parameter(Position = 0, ValueFromPipeline = $true)]
        [string]$videoLink
    )

    begin {
        $transcriptFlag = &quot;--transcript&quot;
        if ($t) {
            $transcriptFlag = &quot;--transcript-with-timestamps&quot;
        }
    }

    process {
        if (-not $videoLink) {
            Write-Error &quot;Usage: yt [-t | --timestamps] youtube-link&quot;
            return
        }
    }

    end {
        if ($videoLink) {
            # Execute and allow output to flow through the pipeline
            fabric -y $videoLink $transcriptFlag
        }
    }
}
```

This also creates a `yt` alias that allows you to use `yt https://www.youtube.com/watch?v=4b0iet22VIk` to get transcripts, comments, and metadata.

#### Save your files in markdown using aliases

If in addition to the above aliase

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[usebruno/bruno]]></title>
            <link>https://github.com/usebruno/bruno</link>
            <guid>https://github.com/usebruno/bruno</guid>
            <pubDate>Sun, 24 Aug 2025 00:04:56 GMT</pubDate>
            <description><![CDATA[Opensource IDE For Exploring and Testing API's (lightweight alternative to Postman/Insomnia)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/usebruno/bruno">usebruno/bruno</a></h1>
            <p>Opensource IDE For Exploring and Testing API's (lightweight alternative to Postman/Insomnia)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 36,368</p>
            <p>Forks: 1,812</p>
            <p>Stars today: 21 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[miroslavpejic85/mirotalk]]></title>
            <link>https://github.com/miroslavpejic85/mirotalk</link>
            <guid>https://github.com/miroslavpejic85/mirotalk</guid>
            <pubDate>Sun, 24 Aug 2025 00:04:55 GMT</pubDate>
            <description><![CDATA[üöÄ WebRTC - P2P - Simple, Secure, Fast Real-Time Video Conferences Up to 8k and 60fps, compatible with all browsers and platforms.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/miroslavpejic85/mirotalk">miroslavpejic85/mirotalk</a></h1>
            <p>üöÄ WebRTC - P2P - Simple, Secure, Fast Real-Time Video Conferences Up to 8k and 60fps, compatible with all browsers and platforms.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 3,798</p>
            <p>Forks: 645</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;MiroTalk P2P&lt;/h1&gt;

&lt;br /&gt;

&lt;div align=&quot;center&quot;&gt;

&lt;a href=&quot;https://www.linkedin.com/in/miroslav-pejic-976a07101/&quot;&gt;![Author](https://img.shields.io/badge/Author-Miroslav_Pejic-brightgreen.svg)&lt;/a&gt;
&lt;a href=&quot;https://choosealicense.com/licenses/agpl-3.0/&quot;&gt;![License: AGPLv3](https://img.shields.io/badge/License-AGPLv3_Open_Surce-blue.svg)&lt;/a&gt;
&lt;a href=&quot;https://codecanyon.net/item/mirotalk-p2p-webrtc-realtime-video-conferences/38376661&quot;&gt;![License: Regular](https://img.shields.io/badge/License-Regular_Private_Use-lightblue.svg)&lt;/a&gt;
&lt;a href=&quot;https://codecanyon.net/item/mirotalk-p2p-webrtc-realtime-video-conferences/38376661&quot;&gt;![License: Extended](https://img.shields.io/badge/License-Extended_Commercial_Use-darkgreen.svg)&lt;/a&gt;
&lt;a href=&quot;https://discord.gg/rgGYfeYW3N&quot;&gt;![Community](https://img.shields.io/badge/Community-forum-pink.svg)&lt;/a&gt;

This project is proudly sponsored by

&lt;/div&gt;

&lt;h1 align=center&gt;Recall.ai - API for meeting recording&lt;/h1&gt;
&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://www.recall.ai&quot;&gt;Recall.ai&lt;/a&gt; ‚Äì an API for recording Zoom, Google Meet, Microsoft Teams, and in-person meetings.
&lt;/p&gt;

&lt;hr /&gt;

&lt;br /&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;strong&gt;MiroTalk P2P&lt;/strong&gt; - Free WebRTC, Simple, Secure, Fast Real-Time Video Conferences with support for up to 8k resolution and 60fps. It&#039;s compatible with all major browsers and platforms.
&lt;/p&gt;

&lt;hr/&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;strong&gt;&lt;a href=&quot;https://p2p.mirotalk.com&quot;&gt;Explore MiroTalk P2P&lt;/a&gt;&lt;/strong&gt;
&lt;/p&gt;

&lt;hr /&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://p2p.mirotalk.com&quot;&gt;&lt;img src=&quot;public/images/mirotalk-header.gif&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;hr /&gt;

&lt;strong&gt;
    &lt;p align=&quot;center&quot;&gt;
        Join our Community for questions, help, support, ideas, and discussions on &lt;a href=&#039;https://discord.gg/rgGYfeYW3N&#039;&gt;Discord&lt;/a&gt;
    &lt;/p&gt;
&lt;/strong&gt;

&lt;hr /&gt;

&lt;details&gt;
&lt;summary&gt;Features&lt;/summary&gt;

&lt;br/&gt;

- Is `100% Free` - `Open Source under (AGPLv3)` - `Self Hosted` and [PWA](https://en.wikipedia.org/wiki/Progressive_web_application)!
- No downloads, plugins, or logins required ‚Äì completely browser-based.
- Unlimited conference rooms with no time limitations.
- Translated into 133 languages.
- Support for the OpenID Connect (OIDC) authentication layer.
- Host protection to prevent unauthorized access.
- User auth to prevent unauthorized access.
- Room password protection.
- JWT.io securely manages credentials for host configurations and user authentication, enhancing security and streamlining processes.
- Compatible with desktop and mobile devices.
- Optimized mobile room URL sharing.
- Webcam streaming with front and rear camera support for mobile devices.
- Crystal-clear audio streaming with speaking detection and volume indicators.
- Screen sharing for presentations.
- File sharing with drag-and-drop support.
- Choose your audio input, output, and video source.
- Supports video quality up to 8K and 60 FPS.
- Supports advance Video/Document Picture-in-Picture (PiP) offering a more streamlined and flexible viewing experience.
- Record your screen, audio, and video.
- Snapshot video frames and save them as PNG images.
- Chat with an Emoji Picker for expressing feelings, private messages, Markdown support, and conversation saving.
- ChatGPT (powered by OpenAI) for answering questions, providing information, and connecting users to relevant resources.
- Speech recognition for sending spoken messages.
- Push-to-talk functionality, similar to a walkie-talkie.
- Advanced collaborative whiteboard for teachers.
- Real-time sharing of YouTube embed videos, video files (MP4, WebM, OGG), and audio files (MP3).
- Full-screen mode with one-click video element zooming and pin/unpin.
- Customizable UI themes.
- Right-click options on video elements for additional controls.
- Direct peer-to-peer connections for low-latency communication through WebRTC.
- Supports [REST API](app/api/README.md) (Application Programming Interface).
- Integration with [Mattermost](https://mattermost.com/) for enhanced communication.
- Integration with [Slack](https://api.slack.com/apps/) for enhanced communication.
- Utilizes [Sentry](https://sentry.io/) for error reporting.
- And much more...

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;About&lt;/summary&gt;

&lt;br&gt;

- [Presentation](https://www.canva.com/design/DAE693uLOIU/view)
- [Video Overview](https://www.youtube.com/watch?v=_IVn2aINYww)

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Start videoconference&lt;/summary&gt;

&lt;br/&gt;

1. `Open` [MiroTalk P2P](https://p2p.mirotalk.com/newcall) or [alternative link](https://mirotalk.up.railway.app/newcall).
2. `Choose` a room name and click **Join Room**.
3. `Grant` camera and microphone access.
4. `Share` the room URL and wait for participants to join the video conference.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Direct Join&lt;/summary&gt;

&lt;br/&gt;

- You can `directly join a room` by using links like:
- https://p2p.mirotalk.com/join?room=test&amp;name=mirotalk&amp;avatar=0&amp;audio=0&amp;video=0&amp;screen=0&amp;chat=0&amp;hide=0&amp;notify=0
- https://mirotalk.up.railway.app/join?room=test&amp;name=mirotalk&amp;avatar=0&amp;audio=0&amp;video=0&amp;screen=0&amp;chat=0&amp;hide=0&amp;notify=0

    | Params | Type    | Description     |
    | ------ | ------- | --------------- |
    | room   | string  | Room Id         |
    | name   | string  | User name       |
    | avatar | Mixed   | User avatar     |
    | audio  | boolean | Audio stream    |
    | video  | boolean | Video stream    |
    | screen | boolean | Screen stream   |
    | chat.  | boolean | Chat            |
    | hide   | boolean | Hide myself     |
    | notify | boolean | Welcome message |
    | token  | string  | jwt token       |

&gt; **Note**
&gt;
&gt; The `token` parameter are optional when either `HOST_PROTECTED` or `HOST_USER_AUTH` is set to `true` in the `.env` file. The valid list of users is defined in the `HOST_USERS` configuration.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Host Protection Configuration&lt;/summary&gt;

&lt;br/&gt;

When [host protection](https://docs.mirotalk.com/mirotalk-p2p/host-protection/) or host user auth is enabled, the host/users must provide a valid username and password as specified in the `.env` file.

| Params           | Value                                                                            | Description                                                                            |
| ---------------- | -------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------- |
| `HOST_PROTECTED` | `true` if protection is enabled, `false` if not (default false)                  | Requires the host to provide a valid username and password during room initialization. |
| `HOST_USER_AUTH` | `true` if user authentication is required, `false` if not (default false).       | Determines whether host authentication is required.                                    |
| `HOST_USERS`     | JSON array with user objects: `{&quot;username&quot;: &quot;username&quot;, &quot;password&quot;: &quot;password&quot;}` | List of valid host users with their credentials.                                       |

&lt;/details&gt;

&lt;details open&gt;
&lt;summary&gt;Quick start&lt;/summary&gt;

![nodejs](public/images/nodejs.png)

- Before running MiroTalk P2P, ensure you have `Node.js` [installed](https://nodejs.org/en/download).

```bash
# clone this repo
$ git clone https://github.com/miroslavpejic85/mirotalk.git
# go to mirotalk dir
$ cd mirotalk
# copy .env.template to .env (edit it according to your needs)
$ cp .env.template .env
# Copy app/src/config.template.js in app/src/config.js (edit it according to your needs)
$ cp app/src/config.template.js app/src/config.js
# install dependencies
$ npm install
# start the server
$ npm start
```

- Open [http://localhost:3000](http://localhost:3000) in your browser.

&lt;/details&gt;

&lt;details open&gt;
&lt;summary&gt;Docker&lt;/summary&gt;

&lt;br/&gt;

![docker](public/images/docker.png)

- Repository [docker hub](https://hub.docker.com/r/mirotalk/p2p)
- Install [docker engine](https://docs.docker.com/engine/install/) and [docker compose](https://docs.docker.com/compose/install/)

```bash
# clone this repo
$ git clone https://github.com/miroslavpejic85/mirotalk.git
# go to mirotalk dir
$ cd mirotalk
# copy .env.template to .env (edit it according to your needs)
$ cp .env.template .env
# Copy app/src/config.template.js in app/src/config.js (edit it according to your needs)
$ cp app/src/config.template.js app/src/config.js
# Copy docker-compose.template.yml in docker-compose.yml (edit it according to your needs)
$ cp docker-compose.template.yml docker-compose.yml
# Get official image from Docker Hub
$ docker pull mirotalk/p2p:latest
# create and start containers
$ docker-compose up # -d
# to stop and remove resources
$ docker-compose down
```

- Open [http://localhost:3000](http://localhost:3000) in your browser.

&lt;/details&gt;

&lt;details open&gt;
&lt;summary&gt;Embed a meeting&lt;/summary&gt;

&lt;br/&gt;

![iframe](public/images/iframe.png)

To embed a meeting within `your service or app` using an iframe, you can use the following code:

```html
&lt;iframe
    allow=&quot;camera; microphone; display-capture; fullscreen; clipboard-read; clipboard-write; web-share; autoplay&quot;
    src=&quot;https://p2p.mirotalk.com/newcall&quot;
    style=&quot;height: 100vh; width: 100vw; border: 0px;&quot;
&gt;&lt;/iframe&gt;
```

## WIdget

To quickly add a support [widget](https://codepen.io/Miroslav-Pejic/pen/Byowjvb) to your site, include the script in your `&lt;head&gt;` and place the widget `&lt;div&gt;` at the end of your `&lt;body&gt;`. Your support widget will be ready instantly!

```html
&lt;!doctype html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;script src=&quot;https://p2p.mirotalk.com/js/widget.js&quot;&gt;&lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;div
            id=&quot;support-widget&quot;
            data-mirotalk-auto
            data-domain=&quot;p2p.mirotalk.com&quot;
            data-room=&quot;support-room&quot;
            data-theme=&quot;dark&quot;
            data-widget-type=&quot;support&quot;
            data-widget-state=&quot;normal&quot;
            data-position=&quot;bottom-right&quot;
            data-check-online=&quot;false&quot;
            data-expert-images=&quot;https://i.pravatar.cc/40?img=1,https://i.pravatar.cc/40?img=2,https://i.pravatar.cc/40?img=3&quot;
            data-buttons=&quot;audio,video,screen,chat,join&quot;
            data-heading=&quot;Need Help?&quot;
            data-subheading=&quot;Get instant support from our expert team!&quot;
            data-connect-text=&quot;connect in &amp;lt; 5 seconds&quot;
            data-online-text=&quot;We are online&quot;
            data-offline-text=&quot;We are offline&quot;
            data-powered-by=&quot;Powered by MiroTalk&quot;
        &gt;&lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;
```

**[Explore Integrations ‚Üí](https://docs.mirotalk.com/mirotalk-p2p/integration/)**

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Documentations&lt;/summary&gt;

&lt;br&gt;

- `Ngrok/HTTPS:` You can start a video conference directly from your local PC and make it accessible from any device outside your network by following [these instructions](docs/ngrok.md), or expose it directly on [HTTPS](app/ssl/README.md).

- `Stun/Turn:` Install your own [Stun &amp; Turn](https://docs.mirotalk.com/coturn/stun-turn/) by following [this instructions](./docs/coturn.md).

- `Self-hosting:` For `self-hosting MiroTalk P2P` on your own dedicated server, please refer to [this comprehensive guide](docs/self-hosting.md). It will provide you with all the necessary instructions to get your MiroTalk P2P instance up and running smoothly.

- `Rest API:` The [API documentation](https://docs.mirotalk.com/mirotalk-p2p/api/) uses [swagger](https://swagger.io/) at http://localhost:3000/api/v1/docs. Or check it out on [live](https://p2p.mirotalk.com/api/v1/docs).

### 1. Stats Endpoint (Get server statistics)

```bash
curl -X GET &quot;http://localhost:3000/api/v1/stats&quot; -H &quot;authorization: mirotalkp2p_default_secret&quot; -H &quot;Content-Type: application/json&quot;
curl -X GET &quot;https://p2p.mirotalk.com/api/v1/stats&quot; -H &quot;authorization: mirotalkp2p_default_secret&quot; -H &quot;Content-Type: application/json&quot;
curl -X GET &quot;https://mirotalk.up.railway.app/api/v1/stats&quot; -H &quot;authorization: mirotalkp2p_default_secret&quot; -H &quot;Content-Type: application/json&quot;
```

### 2. Meetings Endpoint (Get active meetings)

```bash
curl -X GET &quot;http://localhost:3000/api/v1/meetings&quot; -H &quot;authorization: mirotalkp2p_default_secret&quot; -H &quot;Content-Type: application/json&quot;
curl -X GET &quot;https://p2p.mirotalk.com/api/v1/meetings&quot; -H &quot;authorization: mirotalkp2p_default_secret&quot; -H &quot;Content-Type: application/json&quot;
curl -X GET &quot;https://mirotalk.up.railway.app/api/v1/meetings&quot; -H &quot;authorization: mirotalkp2p_default_secret&quot; -H &quot;Content-Type: application/json&quot;
```

### 3. Create Meeting

```bash
curl -X POST &quot;http://localhost:3000/api/v1/meeting&quot; -H &quot;authorization: mirotalkp2p_default_secret&quot; -H &quot;Content-Type: application/json&quot;
curl -X POST &quot;https://p2p.mirotalk.com/api/v1/meeting&quot; -H &quot;authorization: mirotalkp2p_default_secret&quot; -H &quot;Content-Type: application/json&quot;
curl -X POST &quot;https://mirotalk.up.railway.app/api/v1/meeting&quot; -H &quot;authorization: mirotalkp2p_default_secret&quot; -H &quot;Content-Type: application/json&quot;
```

### 4. Join Meeting (Basic)

```bash
curl -X POST &quot;http://localhost:3000/api/v1/join&quot; -H &quot;authorization: mirotalkp2p_default_secret&quot; -H &quot;Content-Type: application/json&quot; --data &#039;{&quot;room&quot;:&quot;test&quot;,&quot;name&quot;:&quot;mirotalk&quot;,&quot;avatar&quot;:false,&quot;audio&quot;:true,&quot;video&quot;:true,&quot;screen&quot;:false,&quot;chat&quot;:false,&quot;hide&quot;:false,&quot;notify&quot;:true}&#039;
curl -X POST &quot;https://p2p.mirotalk.com/api/v1/join&quot; -H &quot;authorization: mirotalkp2p_default_secret&quot; -H &quot;Content-Type: application/json&quot; --data &#039;{&quot;room&quot;:&quot;test&quot;,&quot;name&quot;:&quot;mirotalk&quot;,&quot;avatar&quot;:false,&quot;audio&quot;:true,&quot;video&quot;:true,&quot;screen&quot;:false,&quot;chat&quot;:false,&quot;hide&quot;:false,&quot;notify&quot;:true}&#039;
curl -X POST &quot;https://mirotalk.up.railway.app/api/v1/join&quot; -H &quot;authorization: mirotalkp2p_default_secret&quot; -H &quot;Content-Type: application/json&quot; --data &#039;{&quot;room&quot;:&quot;test&quot;,&quot;name&quot;:&quot;mirotalk&quot;,&quot;avatar&quot;:false,&quot;audio&quot;:true,&quot;video&quot;:true,&quot;screen&quot;:false,&quot;chat&quot;:false,&quot;hide&quot;:false,&quot;notify&quot;:true}&#039;
```

### 5. Join Meeting with Token

```bash
curl -X POST &quot;http://localhost:3000/api/v1/join&quot; -H &quot;authorization: mirotalkp2p_default_secret&quot; -H &quot;Content-Type: application/json&quot; --data &#039;{&quot;room&quot;:&quot;test&quot;,&quot;name&quot;:&quot;mirotalk&quot;,&quot;audio&quot;:true,&quot;video&quot;:true,&quot;screen&quot;:false,&quot;chat&quot;:false,&quot;hide&quot;:false,&quot;notify&quot;:true,&quot;token&quot;:{&quot;username&quot;:&quot;username&quot;,&quot;password&quot;:&quot;password&quot;,&quot;presenter&quot;:true,&quot;expire&quot;:&quot;1h&quot;}}&#039;
curl -X POST &quot;https://p2p.mirotalk.com/api/v1/join&quot; -H &quot;authorization: mirotalkp2p_default_secret&quot; -H &quot;Content-Type: application/json&quot; --data &#039;{&quot;room&quot;:&quot;test&quot;,&quot;name&quot;:&quot;mirotalk&quot;,&quot;audio&quot;:true,&quot;video&quot;:true,&quot;screen&quot;:false,&quot;chat&quot;:false,&quot;hide&quot;:false,&quot;notify&quot;:true,&quot;token&quot;:{&quot;username&quot;:&quot;username&quot;,&quot;password&quot;:&quot;password&quot;,&quot;presenter&quot;:true,&quot;expire&quot;:&quot;1h&quot;}}&#039;
curl -X POST &quot;https://mirotalk.up.railway.app/api/v1/join&quot; -H &quot;authorization: mirotalkp2p_default_secret&quot; -H &quot;Content-Type: application/json&quot; --data &#039;{&quot;room&quot;:&quot;test&quot;,&quot;name&quot;:&quot;mirotalk&quot;,&quot;audio&quot;:true,&quot;video&quot;:true,&quot;screen&quot;:false,&quot;chat&quot;:false,&quot;hide&quot;:false,&quot;notify&quot;:true,&quot;token&quot;:{&quot;username&quot;:&quot;username&quot;,&quot;password&quot;:&quot;password&quot;,&quot;presenter&quot;:true,&quot;expire&quot;:&quot;1h&quot;}}&#039;
```

### 6. Generate Token

```bash
curl -X POST &quot;http://localhost:3000/api/v1/token&quot; -H &quot;authorization: mirotalkp2p_default_secret&quot; -H &quot;Content-Type: application/json&quot; --data &#039;{&quot;username&quot;:&quot;username&quot;,&quot;password&quot;:&quot;password&quot;,&quot;presenter&quot;:true,&quot;expire&quot;:&quot;1h&quot;}&#039;
curl -X POST &quot;https://p2p.mirotalk.com/api/v1/token&quot; -H &quot;authorization: mirotalkp2p_default_secret&quot; -H &quot;Content-Type: application/json&quot; --data &#039;{&quot;username&quot;:&quot;username&quot;,&quot;password&quot;:&quot;password&quot;,&quot;presenter&quot;:true,&quot;expire&quot;:&quot;1h&quot;}&#039;
curl -X POST &quot;https://mirotalk.up.railway.app/api/v1/token&quot; -H &quot;authorization: mirotalkp2p_default_secret&quot; -H &quot;Content-Type: application/json&quot; --data &#039;{&quot;username&quot;:&quot;username&quot;,&quot;password&quot;:&quot;password&quot;,&quot;presenter&quot;:true,&quot;expire&quot;:&quot;1h&quot;}&#039;
```

These commands should now work correctly with the MiroTalk P2P

&lt;/details&gt;

&lt;details open&gt;
&lt;summary&gt;Hetzner, Hostinger &amp; Contabo&lt;/summary&gt;

&lt;br/&gt;

[![Hetzner](public/sponsors/Hetzner.png)](https://hetzner.cloud/?ref=XdRifCzCK3bn)

This application is running for `demonstration purposes` on [Hetzner](https://www.hetzner.com/), one of `the best` [cloud providers](https://www.hetzner.com/cloud) and [dedicated root servers](https://www.hetzner.com/dedicated-rootserver).

---

Use [my personal link](https://hetzner.cloud/?ref=XdRifCzCK3bn) to receive `‚Ç¨‚Å†20 IN CLOUD CREDITS`.

---

[![Hostinger](public/advertisers/HostingerLogo.png)](https://hostinger.com/?REFERRALCODE=MIROTALK)

Fast, reliable hosting with 24/7 support and great performance. Start today! [Check out Hostinger now](https://hostinger.com/?REFERRALCODE=MIROTALK)

---

[![Contabo](public/advertisers/ContaboLogo.png)](https://www.dpbolvw.net/click-101027391-14462707)

Experience also top-tier German web hosting ‚Äì dedicated servers, VPS, and web hosting at `unbeatable prices`. [Explore now here](https://www.dpbolvw.net/click-101027391-14462707)

---

To set up your own instance of `MiroTalk P2P` on a dedicated cloud server, please refer to our comprehensive [self-hosting documentation](https://docs.mirotalk.com/mirotalk-p2p/self-hosting/). This guide will walk you through the process step by step, ensuring a smooth and successful deployment.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Live Demos&lt;/summary&gt;

&lt;br/&gt;

&lt;a target=&quot;_blank&quot; href=&quot;https://p2p.mirotalk.com&quot;&gt;&lt;img src=&quot;public/sponsors/Hetzner.png&quot; style=&quot;width: 220px;&quot;&gt;&lt;/a&gt;

https://p2p.mirotalk.com

[![hetzner-qr](public/images/mirotalk-hetzner-qr.png)](https://p2p.mirotalk.com)

&lt;br&gt;

&lt;a target=&quot;_blank&quot; href=&quot;https://railway.app/new/template/mirotalk?referralCode=mirotalk&quot;&gt;&lt;img src=&quot;https://railway.app/button.svg&quot; style=&quot;width: 220px;&quot;&gt;&lt;/a&gt;

https://mirotalk.up.railway.app

[![railway-qr](public/images/mirotalk-railway-qr.png)](https://mirotalk.up.railway.app)

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Security&lt;/summary&gt;

&lt;br/&gt;

For `Security` concerning, please follow [this documentation](./SECURITY.md).

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Credits&lt;/summary&gt;

&lt;br/&gt;

- ianramzy (html [template](https://cruip.com/demos/neon/))
- vasanthv (webrtc-logic)
- fabric.js (whiteboard)

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Contributing&lt;/summary&gt;

&lt;br/&gt;

- Contributions are welcome and greatly appreciated!
- Just run before `npm run lint`

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;License&lt;/summary&gt;

&lt;br/&gt;

[![AGPLv3](public/images/AGPLv3.png)](LICENSE)

MiroTalk P2P is free and open-source under the terms of AGPLv3 (GNU Affero General Public License v3.0). Please `respect the license conditions`, In particular `modifications need to be free as well and made available to the public`. Get a quick overview of the license at [Choose an open source license](https://choosealicense.com/licenses/agpl-3.0/).

To obtain a [MiroTalk P2P license](https://docs.mirotalk.com/license/licensing-options/) with terms different from the AGPLv3, you can conveniently make your [purchase on CodeCanyon](https://codecanyon.net/item/mirotalk-p2p-webrtc-realtime-video-conferences/38376661). This allows you to tailor the licensing conditions to better suit your specific requirements.

&lt;/details&gt;

&lt;details open&gt;
&lt;summary&gt;Support the project&lt;/summary&gt;

&lt;br/&gt;

Do you find MiroTalk P2P indispensable for your needs? Join us in supporting this transformative project by [becoming a backer or sponsor](https://github.com/sponsors/miroslavpejic85). By doing so, not only will your logo prominently feature here, but you&#039;ll also drive the growth and sustainability of MiroTalk P2P. Your support is vital in ensuring that this valuable platform continues to thrive and remain accessible for all. Make an impact ‚Äì back MiroTalk P2P today and be part of this exciting journey!

|                                                                                |                                                                                        |                                                                                                                           |
| ------------------------------------------------------------------------------ | -------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------- |
| [![BroadcastX](public/sponso

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[eoao/cloud-mail]]></title>
            <link>https://github.com/eoao/cloud-mail</link>
            <guid>https://github.com/eoao/cloud-mail</guid>
            <pubDate>Sun, 24 Aug 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[cloudflare email ÈÇÆÁÆ± ‰∏¥Êó∂ÈÇÆÁÆ± ÈÇÆ‰ª∂ÂèëÈÄÅ mail]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/eoao/cloud-mail">eoao/cloud-mail</a></h1>
            <p>cloudflare email ÈÇÆÁÆ± ‰∏¥Êó∂ÈÇÆÁÆ± ÈÇÆ‰ª∂ÂèëÈÄÅ mail</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,962</p>
            <p>Forks: 1,264</p>
            <p>Stars today: 33 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;doc/demo/logo.png&quot; width=&quot;80px&quot; /&gt;
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;h1&gt;Cloud Mail&lt;/h1&gt;
&lt;/div&gt;
&lt;div align=&quot;center&quot;&gt;
    &lt;h4&gt;‰ΩøÁî®Vue3ÂºÄÂèëÁöÑÂìçÂ∫îÂºèÈÇÆÁÆ±ÊúçÂä°ÔºåÊîØÊåÅÈÇÆ‰ª∂ÂèëÈÄÅÔºåÊó†ÈúÄÊúçÂä°Âô®ÂèØÈÉ®ÁΩ≤Âà∞CloudflareÂπ≥Âè∞ üéâ&lt;/h4&gt; 
&lt;/div&gt;
&lt;div align=&quot;center&quot;&gt;
    &lt;span&gt;ÁÆÄ‰Ωì‰∏≠Êñá | &lt;a href=&quot;/README-en.md&quot; style=&quot;margin-left: 5px&quot;&gt;English &lt;/a&gt;&lt;/span&gt;
&lt;/div&gt;

## È°πÁõÆÁÆÄ‰ªã

Âè™ÈúÄË¶Å‰∏Ä‰∏™ÂüüÂêçÔºåÂ∞±ÂèØ‰ª•ÂàõÂª∫Â§ö‰∏™‰∏çÂêåÁöÑÈÇÆÁÆ±ÔºåÁ±ª‰ººÂêÑÂ§ßÈÇÆÁÆ±Âπ≥Âè∞ QQÈÇÆÁÆ±ÔºåË∞∑Ê≠åÈÇÆÁÆ±Á≠âÔºåÊú¨È°πÁõÆ‰ΩøÁî®CloudflareÈÉ®ÁΩ≤ÔºåResendÊé®ÈÄÅÈÇÆ‰ª∂ÔºåÊó†ÈúÄÊúçÂä°Âô®Ë¥πÁî®ÔºåÊê≠Âª∫Ëá™Â∑±ÁöÑÈÇÆÁÆ±ÊúçÂä°

## È°πÁõÆÂ±ïÁ§∫

- [Âú®Á∫øÊºîÁ§∫](https://skymail.ink)&lt;br&gt;
- [ÈÉ®ÁΩ≤ÊñáÊ°£](https://doc.skymail.ink)&lt;br&gt;
- [Â∞èÁôΩ‰øùÂßÜÊïôÁ®ã-ÁïåÈù¢ÈÉ®ÁΩ≤](https://doc.skymail.ink/guide/via-ui.html)

| ![](/doc/demo/demo1.png) | ![](/doc/demo/demo2.png) |
|--------------------------|---------------------|
| ![](/doc/demo/demo3.png)      | ![](/doc/demo/demo4.png) |
| ![](/doc/demo/demo5.png)      | ![](/doc/demo/demo6.png) |
| ![](/doc/demo/demo7.png)      | ![](/doc/demo/demo8.png) |




## ÂäüËÉΩ‰ªãÁªç

- **üí∞ ‰ΩéÊàêÊú¨‰ΩøÁî®**ÔºöÊó†ÈúÄÊúçÂä°Âô®ÔºåÈÉ®ÁΩ≤Âà∞ Cloudflare Workers Èôç‰Ωé‰ΩøÁî®ÊàêÊú¨

- **üíª ÂìçÂ∫îÂºèËÆæËÆ°**ÔºöÂìçÂ∫îÂºèÂ∏ÉÂ±ÄËá™Âä®ÈÄÇÈÖçPCÂíåÂ§ßÈÉ®ÂàÜÊâãÊú∫Á´ØÊµèËßàÂô®

- **üìß ÈÇÆ‰ª∂ÂèëÈÄÅ**ÔºöÈõÜÊàêresendÂèëÈÄÅÈÇÆ‰ª∂ÔºåÊîØÊåÅÁæ§ÂèëÔºåÂÜÖÂµåÂõæÁâáÂíåÈôÑ‰ª∂ÂèëÈÄÅÔºåÂèëÈÄÅÁä∂ÊÄÅÊü•Áúã

- **üõ°Ô∏è ÁÆ°ÁêÜÂëòÂäüËÉΩ**ÔºöÂèØ‰ª•ÂØπÁî®Êà∑ÔºåÈÇÆ‰ª∂ËøõË°åÁÆ°ÁêÜÔºåRABCÊùÉÈôêÊéßÂà∂ÂØπÂäüËÉΩÂèä‰ΩøÁî®ËµÑÊ∫êÈôêÂà∂

- **üîÄ Â§öÂè∑Ê®°Âºè**ÔºöÂºÄÂêØÂêé‰∏Ä‰∏™Áî®Êà∑ÂèØ‰ª•Ê∑ªÂä†Â§ö‰∏™ÈÇÆÁÆ±ÔºåÈªòËÆ§‰∏ÄÁî®Êà∑‰∏ÄÈÇÆÁÆ±ÔºåÁ±ª‰ººÂêÑÂ§ßÈÇÆÁÆ±Âπ≥Âè∞

- **üì¶ ÈôÑ‰ª∂Êî∂Âèë**ÔºöÊîØÊåÅÊî∂ÂèëÈôÑ‰ª∂Ôºå‰ΩøÁî®R2ÂØπË±°Â≠òÂÇ®‰øùÂ≠òÂíå‰∏ãËΩΩÊñá‰ª∂

- **üîî ÈÇÆ‰ª∂Êé®ÈÄÅ**ÔºöÊé•Êî∂ÈÇÆ‰ª∂ÂêéÂèØ‰ª•ËΩ¨ÂèëÂà∞TGÊú∫Âô®‰∫∫ÊàñÂÖ∂‰ªñÊúçÂä°ÂïÜÈÇÆÁÆ±

- **üì° ÂºÄÊîæAPI**ÔºöÊîØÊåÅ‰ΩøÁî®APIÊâπÈáèÁîüÊàêÁî®Êà∑ÔºåÂ§öÊù°‰ª∂Êü•ËØ¢ÈÇÆ‰ª∂ 

- **üìà Êï∞ÊçÆÂèØËßÜÂåñ**Ôºö‰ΩøÁî®echartsÂØπÁ≥ªÁªüÊï∞ÊçÆËØ¶ÊÉÖÔºåÁî®Êà∑ÈÇÆ‰ª∂Â¢ûÈïøÂèØËßÜÂåñÊòæÁ§∫

- **‚≠ê ÊòüÊ†áÈÇÆ‰ª∂**ÔºöÊ†áËÆ∞ÈáçË¶ÅÈÇÆ‰ª∂Ôºå‰ª•‰æøÂø´ÈÄüÊü•ÈòÖ

- **üé® ‰∏™ÊÄßÂåñËÆæÁΩÆ**ÔºöÂèØ‰ª•Ëá™ÂÆö‰πâÁΩëÁ´ôÊ†áÈ¢òÔºåÁôªÂΩïËÉåÊôØÔºåÈÄèÊòéÂ∫¶

- **‚öôÔ∏è ÂäüËÉΩËÆæÁΩÆ**ÔºöÂèØ‰ª•ÂØπÊ≥®ÂÜåÔºåÈÇÆ‰ª∂ÂèëÈÄÅÔºåÊ∑ªÂä†Á≠âÂäüËÉΩÂÖ≥Èó≠ÂíåÂºÄÂêØÔºåËÆæ‰∏∫ÁßÅ‰∫∫Á´ôÁÇπ

- **ü§ñ ‰∫∫Êú∫È™åËØÅ**ÔºöÈõÜÊàêTurnstile‰∫∫Êú∫È™åËØÅÔºåÈò≤Ê≠¢‰∫∫Êú∫ÊâπÈáèÊ≥®ÂÜå

- **üìú Êõ¥Â§öÂäüËÉΩ**ÔºöÊ≠£Âú®ÂºÄÂèë‰∏≠...



## ÊäÄÊúØÊ†à

- **Ê°ÜÊû∂**Ôºö[Vue3](https://vuejs.org/) + [Element Plus](https://element-plus.org/) 

- **WebÊ°ÜÊû∂**Ôºö[Hono](https://hono.dev/)

- **ORMÔºö**[Drizzle](https://orm.drizzle.team/)

- **Âπ≥Âè∞Ôºö** [Cloudflare workers](https://developers.cloudflare.com/workers/)

- **ÈÇÆ‰ª∂Êé®ÈÄÅÔºö** [Resend](https://resend.com/)

- **ÁºìÂ≠ò**Ôºö[Cloudflare KV](https://developers.cloudflare.com/kv/)

- **Êï∞ÊçÆÂ∫ì**Ôºö[Cloudflare D1](https://developers.cloudflare.com/d1/)

- **Êñá‰ª∂Â≠òÂÇ®**Ôºö[Cloudflare R2](https://developers.cloudflare.com/r2/)


## ËµûÂä©


&lt;a href=&quot;https://doc.skymail.ink/support.html&quot; &gt;
&lt;img width=&quot;170px&quot; src=&quot;./doc/images/support.png&quot; alt=&quot;&quot;&gt;
&lt;/a&gt;&lt;br&gt;&lt;br&gt;


**ÁâπÂà´ËµûÂä©ÂïÜ**

[DartNode](https://dartnode.com)ÔºöÊèê‰æõ‰∫ëËÆ°ÁÆóÊúçÂä°ËµÑÊ∫êÊîØÊåÅ

[![Powered by DartNode](https://dartnode.com/branding/DN-Open-Source-sm.png)](https://dartnode.com &quot;Powered by DartNode - Free VPS for Open Source&quot;)

## ËÆ∏ÂèØËØÅ

Êú¨È°πÁõÆÈááÁî® [MIT](LICENSE) ËÆ∏ÂèØËØÅ	


## ‰∫§ÊµÅ

[Telegram](https://t.me/cloud_mail_tg)



</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WhiskeySockets/Baileys]]></title>
            <link>https://github.com/WhiskeySockets/Baileys</link>
            <guid>https://github.com/WhiskeySockets/Baileys</guid>
            <pubDate>Sun, 24 Aug 2025 00:04:53 GMT</pubDate>
            <description><![CDATA[Lightweight full-featured typescript/javascript WhatsApp Web API]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WhiskeySockets/Baileys">WhiskeySockets/Baileys</a></h1>
            <p>Lightweight full-featured typescript/javascript WhatsApp Web API</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,387</p>
            <p>Forks: 2,175</p>
            <p>Stars today: 27 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&#039;center&#039;&gt;&lt;img alt=&quot;Baileys logo&quot; src=&quot;https://raw.githubusercontent.com/WhiskeySockets/Baileys/refs/heads/master/Media/logo.png&quot; height=&quot;75&quot;/&gt;&lt;/h1&gt;

&lt;div align=&#039;center&#039;&gt;

![NPM Downloads](https://img.shields.io/npm/dw/%40whiskeysockets%2Fbaileys?label=npm&amp;color=%23CB3837)
![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/whiskeysockets/baileys)
![Discord](https://img.shields.io/discord/725839806084546610?label=discord&amp;color=%235865F2)

&lt;/div&gt;

&lt;div align=&#039;center&#039;&gt;Baileys is a WebSockets-based TypeScript library for interacting with the WhatsApp Web API.&lt;/div&gt;

# Important Note
This is a temporally README, the new guide is at development and will be fully released when it&#039;s finished.

New Guide: https://baileys.wiki

# Sponsor
If you&#039;d like to financially support this project, you can do so by supporting the current maintainer [here](https://purpshell.dev/sponsor).

# Disclaimer
This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates.
The official WhatsApp website can be found at whatsapp.com. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners.

The maintainers of Baileys do not in any way condone the use of this application in practices that violate the Terms of Service of WhatsApp. The maintainers of this application call upon the personal responsibility of its users to use this application in a fair way, as it is intended to be used.
Use at your own discretion. Do not spam people with this. We discourage any stalkerware, bulk or automated messaging usage.

##

- Baileys does not require Selenium or any other browser to be interface with WhatsApp Web, it does so directly using a **WebSocket**. 
- Not running Selenium or Chromium saves you like **half a gig** of ram :/ 
- Baileys supports interacting with the multi-device &amp; web versions of WhatsApp.
- Thank you to [@pokearaujo](https://github.com/pokearaujo/multidevice) for writing his observations on the workings of WhatsApp Multi-Device. Also, thank you to [@Sigalor](https://github.com/sigalor/whatsapp-web-reveng) for writing his observations on the workings of WhatsApp Web and thanks to [@Rhymen](https://github.com/Rhymen/go-whatsapp/) for the __go__ implementation.

&gt; [!IMPORTANT]
&gt; The original repository had to be removed by the original author - we now continue development in this repository here.
This is the only official repository and is maintained by the community.
&gt; **Join the Discord [here](https://discord.gg/WeJM5FP9GG)**
 
## Example

Do check out &amp; run [example.ts](Example/example.ts) to see an example usage of the library.
The script covers most common use cases.
To run the example script, download or clone the repo and then type the following in a terminal:
1. ``` cd path/to/Baileys ```
2. ``` yarn ```
3. ``` yarn example ```

## Install

Use the stable version:
```
yarn add @whiskeysockets/baileys
```

Use the edge version (no guarantee of stability, but latest fixes + features)
```
yarn add github:WhiskeySockets/Baileys
```

Then import your code using:
```ts 
import makeWASocket from &#039;@whiskeysockets/baileys&#039;
```

# Links

- [Discord](https://discord.gg/WeJM5FP9GG)
- [Docs](https://guide.whiskeysockets.io/)

# Index

- [Connecting Account](#connecting-account)
    - [Connect with QR-CODE](#starting-socket-with-qr-code)
    - [Connect with Pairing Code](#starting-socket-with-pairing-code)
    - [Receive Full History](#receive-full-history)
- [Important Notes About Socket Config](#important-notes-about-socket-config)
    - [Caching Group Metadata (Recommended)](#caching-group-metadata-recommended)
    - [Improve Retry System &amp; Decrypt Poll Votes](#improve-retry-system--decrypt-poll-votes)
    - [Receive Notifications in Whatsapp App](#receive-notifications-in-whatsapp-app)

- [Save Auth Info](#saving--restoring-sessions)
- [Handling Events](#handling-events)
    - [Example to Start](#example-to-start)
    - [Decrypt Poll Votes](#decrypt-poll-votes)
    - [Summary of Events on First Connection](#summary-of-events-on-first-connection)
- [Implementing a Data Store](#implementing-a-data-store)
- [Whatsapp IDs Explain](#whatsapp-ids-explain)
- [Utility Functions](#utility-functions)
- [Sending Messages](#sending-messages)
    - [Non-Media Messages](#non-media-messages)
        - [Text Message](#text-message)
        - [Quote Message](#quote-message-works-with-all-types)
        - [Mention User](#mention-user-works-with-most-types)
        - [Forward Messages](#forward-messages)
        - [Location Message](#location-message)
        - [Contact Message](#contact-message)
        - [Reaction Message](#reaction-message)
        - [Pin Message](#pin-message)
        - [Poll Message](#poll-message)
    - [Sending with Link Preview](#sending-messages-with-link-previews)
    - [Media Messages](#media-messages)
        - [Gif Message](#gif-message)
        - [Video Message](#video-message)
        - [Audio Message](#audio-message)
        - [Image Message](#image-message)
        - [ViewOnce Message](#view-once-message)
- [Modify Messages](#modify-messages)
    - [Delete Messages (for everyone)](#deleting-messages-for-everyone)
    - [Edit Messages](#editing-messages)
- [Manipulating Media Messages](#manipulating-media-messages)
    - [Thumbnail in Media Messages](#thumbnail-in-media-messages)
    - [Downloading Media Messages](#downloading-media-messages)
    - [Re-upload Media Message to Whatsapp](#re-upload-media-message-to-whatsapp)
- [Reject Call](#reject-call)
- [Send States in Chat](#send-states-in-chat)
    - [Reading Messages](#reading-messages)
    - [Update Presence](#update-presence)
- [Modifying Chats](#modifying-chats)
    - [Archive a Chat](#archive-a-chat)
    - [Mute/Unmute a Chat](#muteunmute-a-chat)
    - [Mark a Chat Read/Unread](#mark-a-chat-readunread)
    - [Delete a Message for Me](#delete-a-message-for-me)
    - [Delete a Chat](#delete-a-chat)
    - [Star/Unstar a Message](#starunstar-a-message)
    - [Disappearing Messages](#disappearing-messages)
- [User Querys](#user-querys)
    - [Check If ID Exists in Whatsapp](#check-if-id-exists-in-whatsapp)
    - [Query Chat History (groups too)](#query-chat-history-groups-too)
    - [Fetch Status](#fetch-status)
    - [Fetch Profile Picture (groups too)](#fetch-profile-picture-groups-too)
    - [Fetch Bussines Profile (such as description or category)](#fetch-bussines-profile-such-as-description-or-category)
    - [Fetch Someone&#039;s Presence (if they&#039;re typing or online)](#fetch-someones-presence-if-theyre-typing-or-online)
- [Change Profile](#change-profile)
    - [Change Profile Status](#change-profile-status)
    - [Change Profile Name](#change-profile-name)
    - [Change Display Picture (groups too)](#change-display-picture-groups-too)
    - [Remove display picture (groups too)](#remove-display-picture-groups-too)
- [Groups](#groups)
    - [Create a Group](#create-a-group)
    - [Add/Remove or Demote/Promote](#addremove-or-demotepromote)
    - [Change Subject (name)](#change-subject-name)
    - [Change Description](#change-description)
    - [Change Settings](#change-settings)
    - [Leave a Group](#leave-a-group)
    - [Get Invite Code](#get-invite-code)
    - [Revoke Invite Code](#revoke-invite-code)
    - [Join Using Invitation Code](#join-using-invitation-code)
    - [Get Group Info by Invite Code](#get-group-info-by-invite-code)
    - [Query Metadata (participants, name, description...)](#query-metadata-participants-name-description)
    - [Join using groupInviteMessage](#join-using-groupinvitemessage)
    - [Get Request Join List](#get-request-join-list)
    - [Approve/Reject Request Join](#approvereject-request-join)
    - [Get All Participating Groups Metadata](#get-all-participating-groups-metadata)
    - [Toggle Ephemeral](#toggle-ephemeral)
    - [Change Add Mode](#change-add-mode)
- [Privacy](#privacy)
    - [Block/Unblock User](#blockunblock-user)
    - [Get Privacy Settings](#get-privacy-settings)
    - [Get BlockList](#get-blocklist)
    - [Update LastSeen Privacy](#update-lastseen-privacy)
    - [Update Online Privacy](#update-online-privacy)
    - [Update Profile Picture Privacy](#update-profile-picture-privacy)
    - [Update Status Privacy](#update-status-privacy)
    - [Update Read Receipts Privacy](#update-read-receipts-privacy)
    - [Update Groups Add Privacy](#update-groups-add-privacy)
    - [Update Default Disappearing Mode](#update-default-disappearing-mode)
- [Broadcast Lists &amp; Stories](#broadcast-lists--stories)
    - [Send Broadcast &amp; Stories](#send-broadcast--stories)
    - [Query a Broadcast List&#039;s Recipients &amp; Name](#query-a-broadcast-lists-recipients--name)
- [Writing Custom Functionality](#writing-custom-functionality)
    - [Enabling Debug Level in Baileys Logs](#enabling-debug-level-in-baileys-logs)
    - [How Whatsapp Communicate With Us](#how-whatsapp-communicate-with-us)
    - [Register a Callback for Websocket Events](#register-a-callback-for-websocket-events)

## Connecting Account

WhatsApp provides a multi-device API that allows Baileys to be authenticated as a second WhatsApp client by scanning a **QR code** or **Pairing Code** with WhatsApp on your phone.

&gt; [!NOTE]
&gt; **[Here](#example-to-start) is a simple example of event handling**

&gt; [!TIP]
&gt; **You can see all supported socket configs [here](https://baileys.whiskeysockets.io/types/SocketConfig.html) (Recommended)**

### Starting socket with **QR-CODE**

&gt; [!TIP]
&gt; You can customize browser name if you connect with **QR-CODE**, with `Browser` constant, we have some browsers config, **see [here](https://baileys.whiskeysockets.io/types/BrowsersMap.html)**

```ts
import makeWASocket from &#039;@whiskeysockets/baileys&#039;

const sock = makeWASocket({
    // can provide additional config here
    browser: Browsers.ubuntu(&#039;My App&#039;),
    printQRInTerminal: true
})
```

If the connection is successful, you will see a QR code printed on your terminal screen, scan it with WhatsApp on your phone and you&#039;ll be logged in!

### Starting socket with **Pairing Code**


&gt; [!IMPORTANT]
&gt; Pairing Code isn&#039;t Mobile API, it&#039;s a method to connect Whatsapp Web without QR-CODE, you can connect only with one device, see [here](https://faq.whatsapp.com/1324084875126592/?cms_platform=web)

The phone number can&#039;t have `+` or `()` or `-`, only numbers, you must provide country code

```ts
import makeWASocket from &#039;@whiskeysockets/baileys&#039;

const sock = makeWASocket({
    // can provide additional config here
    printQRInTerminal: false //need to be false
})

if (!sock.authState.creds.registered) {
    const number = &#039;XXXXXXXXXXX&#039;
    const code = await sock.requestPairingCode(number)
    console.log(code)
}
```

### Receive Full History

1. Set `syncFullHistory` as `true`
2. Baileys, by default, use chrome browser config
    - If you&#039;d like to emulate a desktop connection (and receive more message history), this browser setting to your Socket config:

```ts
const sock = makeWASocket({
    ...otherOpts,
    // can use Windows, Ubuntu here too
    browser: Browsers.macOS(&#039;Desktop&#039;),
    syncFullHistory: true
})
```

## Important Notes About Socket Config

### Caching Group Metadata (Recommended)
- If you use baileys for groups, we recommend you to set `cachedGroupMetadata` in socket config, you need to implement a cache like this:

    ```ts
    const groupCache = new NodeCache({stdTTL: 5 * 60, useClones: false})

    const sock = makeWASocket({
        cachedGroupMetadata: async (jid) =&gt; groupCache.get(jid)
    })

    sock.ev.on(&#039;groups.update&#039;, async ([event]) =&gt; {
        const metadata = await sock.groupMetadata(event.id)
        groupCache.set(event.id, metadata)
    })

    sock.ev.on(&#039;group-participants.update&#039;, async (event) =&gt; {
        const metadata = await sock.groupMetadata(event.id)
        groupCache.set(event.id, metadata)
    })
    ```

### Improve Retry System &amp; Decrypt Poll Votes
- If you want to improve sending message, retrying when error occurs and decrypt poll votes, you need to have a store and set `getMessage` config in socket like this:
    ```ts
    const sock = makeWASocket({
        getMessage: async (key) =&gt; await getMessageFromStore(key)
    })
    ```

### Receive Notifications in Whatsapp App
- If you want to receive notifications in whatsapp app, set `markOnlineOnConnect` to `false`
    ```ts
    const sock = makeWASocket({
        markOnlineOnConnect: false
    })
    ```
## Saving &amp; Restoring Sessions

You obviously don&#039;t want to keep scanning the QR code every time you want to connect. 

So, you can load the credentials to log back in:
```ts
import makeWASocket, { useMultiFileAuthState } from &#039;@whiskeysockets/baileys&#039;

const { state, saveCreds } = await useMultiFileAuthState(&#039;auth_info_baileys&#039;)

// will use the given state to connect
// so if valid credentials are available -- it&#039;ll connect without QR
const sock = makeWASocket({ auth: state })

// this will be called as soon as the credentials are updated
sock.ev.on(&#039;creds.update&#039;, saveCreds)
```

&gt; [!IMPORTANT]
&gt; `useMultiFileAuthState` is a utility function to help save the auth state in a single folder, this function serves as a good guide to help write auth &amp; key states for SQL/no-SQL databases, which I would recommend in any production grade system.

&gt; [!NOTE]
&gt; When a message is received/sent, due to signal sessions needing updating, the auth keys (`authState.keys`) will update. Whenever that happens, you must save the updated keys (`authState.keys.set()` is called). Not doing so will prevent your messages from reaching the recipient &amp; cause other unexpected consequences. The `useMultiFileAuthState` function automatically takes care of that, but for any other serious implementation -- you will need to be very careful with the key state management.

## Handling Events

- Baileys uses the EventEmitter syntax for events. 
They&#039;re all nicely typed up, so you shouldn&#039;t have any issues with an Intellisense editor like VS Code.

&gt; [!IMPORTANT]
&gt; **The events are [these](https://baileys.whiskeysockets.io/types/BaileysEventMap.html)**, it&#039;s important you see all events

You can listen to these events like this:
```ts
const sock = makeWASocket()
sock.ev.on(&#039;messages.upsert&#039;, ({ messages }) =&gt; {
    console.log(&#039;got messages&#039;, messages)
})
```

### Example to Start

&gt; [!NOTE]
&gt; This example includes basic auth storage too

```ts
import makeWASocket, { DisconnectReason, useMultiFileAuthState } from &#039;@whiskeysockets/baileys&#039;
import { Boom } from &#039;@hapi/boom&#039;

async function connectToWhatsApp () {
    const { state, saveCreds } = await useMultiFileAuthState(&#039;auth_info_baileys&#039;)
    const sock = makeWASocket({
        // can provide additional config here
        auth: state,
        printQRInTerminal: true
    })
    sock.ev.on(&#039;connection.update&#039;, (update) =&gt; {
        const { connection, lastDisconnect } = update
        if(connection === &#039;close&#039;) {
            const shouldReconnect = (lastDisconnect.error as Boom)?.output?.statusCode !== DisconnectReason.loggedOut
            console.log(&#039;connection closed due to &#039;, lastDisconnect.error, &#039;, reconnecting &#039;, shouldReconnect)
            // reconnect if not logged out
            if(shouldReconnect) {
                connectToWhatsApp()
            }
        } else if(connection === &#039;open&#039;) {
            console.log(&#039;opened connection&#039;)
        }
    })
    sock.ev.on(&#039;messages.upsert&#039;, event =&gt; {
        for (const m of event.messages) {
            console.log(JSON.stringify(m, undefined, 2))

            console.log(&#039;replying to&#039;, m.key.remoteJid)
            await sock.sendMessage(m.key.remoteJid!, { text: &#039;Hello Word&#039; })
        }
    })

    // to storage creds (session info) when it updates
    sock.ev.on(&#039;creds.update&#039;, saveCreds)
}
// run in main file
connectToWhatsApp()
```

&gt; [!IMPORTANT]
&gt; In `messages.upsert` it&#039;s recommended to use a loop like `for (const message of event.messages)` to handle all messages in array

### Decrypt Poll Votes

- By default poll votes are encrypted and handled in `messages.update`
- That&#039;s a simple example
```ts
sock.ev.on(&#039;messages.update&#039;, event =&gt; {
    for(const { key, update } of event) {
        if(update.pollUpdates) {
            const pollCreation = await getMessage(key)
            if(pollCreation) {
                console.log(
                    &#039;got poll update, aggregation: &#039;,
                    getAggregateVotesInPollMessage({
                        message: pollCreation,
                        pollUpdates: update.pollUpdates,
                    })
                )
            }
        }
    }
})
```

- `getMessage` is a [store](#implementing-a-data-store) implementation (in your end)

### Summary of Events on First Connection

1. When you connect first time, `connection.update` will be fired requesting you to restart sock
2. Then, history messages will be received in `messaging.history-set`

## Implementing a Data Store

- Baileys does not come with a defacto storage for chats, contacts, or messages. However, a simple in-memory implementation has been provided. The store listens for chat updates, new messages, message updates, etc., to always have an up-to-date version of the data.

&gt; [!IMPORTANT]
&gt; I highly recommend building your own data store, as storing someone&#039;s entire chat history in memory is a terrible waste of RAM.

It can be used as follows:

```ts
import makeWASocket, { makeInMemoryStore } from &#039;@whiskeysockets/baileys&#039;
// the store maintains the data of the WA connection in memory
// can be written out to a file &amp; read from it
const store = makeInMemoryStore({ })
// can be read from a file
store.readFromFile(&#039;./baileys_store.json&#039;)
// saves the state to a file every 10s
setInterval(() =&gt; {
    store.writeToFile(&#039;./baileys_store.json&#039;)
}, 10_000)

const sock = makeWASocket({ })
// will listen from this socket
// the store can listen from a new socket once the current socket outlives its lifetime
store.bind(sock.ev)

sock.ev.on(&#039;chats.upsert&#039;, () =&gt; {
    // can use &#039;store.chats&#039; however you want, even after the socket dies out
    // &#039;chats&#039; =&gt; a KeyedDB instance
    console.log(&#039;got chats&#039;, store.chats.all())
})

sock.ev.on(&#039;contacts.upsert&#039;, () =&gt; {
    console.log(&#039;got contacts&#039;, Object.values(store.contacts))
})

```

The store also provides some simple functions such as `loadMessages` that utilize the store to speed up data retrieval.

## Whatsapp IDs Explain

- `id` is the WhatsApp ID, called `jid` too, of the person or group you&#039;re sending the message to. 
    - It must be in the format ```[country code][phone number]@s.whatsapp.net```
	    - Example for people: ```+19999999999@s.whatsapp.net```. 
	    - For groups, it must be in the format ``` 123456789-123345@g.us ```. 
    - For broadcast lists, it&#039;s `[timestamp of creation]@broadcast`.
    - For stories, the ID is `status@broadcast`.

## Utility Functions

- `getContentType`, returns the content type for any message
- `getDevice`, returns the device from message
- `makeCacheableSignalKeyStore`, make auth store more fast
- `downloadContentFromMessage`, download content from any message

## Sending Messages

- Send all types of messages with a single function
    - **[Here](https://baileys.whiskeysockets.io/types/AnyMessageContent.html) you can see all message contents supported, like text message**
    - **[Here](https://baileys.whiskeysockets.io/types/MiscMessageGenerationOptions.html) you can see all options supported, like quote message**

    ```ts
    const jid: string
    const content: AnyMessageContent
    const options: MiscMessageGenerationOptions

    sock.sendMessage(jid, content, options)
    ```

### Non-Media Messages

#### Text Message
```ts
await sock.sendMessage(jid, { text: &#039;hello word&#039; })
```

#### Quote Message (works with all types)
```ts
await sock.sendMessage(jid, { text: &#039;hello word&#039; }, { quoted: message })
```

#### Mention User 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[HumanSignal/label-studio]]></title>
            <link>https://github.com/HumanSignal/label-studio</link>
            <guid>https://github.com/HumanSignal/label-studio</guid>
            <pubDate>Sun, 24 Aug 2025 00:04:52 GMT</pubDate>
            <description><![CDATA[Label Studio is a multi-type data labeling and annotation tool with standardized output format]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/HumanSignal/label-studio">HumanSignal/label-studio</a></h1>
            <p>Label Studio is a multi-type data labeling and annotation tool with standardized output format</p>
            <p>Language: JavaScript</p>
            <p>Stars: 24,342</p>
            <p>Forks: 2,988</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre>&lt;img src=&quot;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/ls_github_header.png&quot;/&gt;

![GitHub](https://img.shields.io/github/license/heartexlabs/label-studio?logo=heartex) ![label-studio:build](https://github.com/heartexlabs/label-studio/workflows/label-studio:build/badge.svg) ![GitHub release](https://img.shields.io/github/v/release/heartexlabs/label-studio?include_prereleases)

[Website](https://labelstud.io/) ‚Ä¢ [Docs](https://labelstud.io/guide/) ‚Ä¢ [Twitter](https://twitter.com/heartexlabs) ‚Ä¢ [Join Slack Community &lt;img src=&quot;https://app.heartex.ai/docs/images/slack-mini.png&quot; width=&quot;18px&quot;/&gt;](https://slack.labelstudio.heartex.com/?source=github-1)


## What is Label Studio?

&lt;!-- &lt;a href=&quot;https://labelstud.io/blog/release-130.html&quot;&gt;&lt;img src=&quot;https://github.com/heartexlabs/label-studio/raw/master/docs/themes/htx/source/images/release-130/LS-Hits-v1.3.png&quot; align=&quot;right&quot; /&gt;&lt;/a&gt; --&gt;

Label Studio is an open source data labeling tool. It lets you label data types like audio, text, images, videos, and time series with a simple and straightforward UI and export to various model formats. It can be used to prepare raw data or improve existing training data to get more accurate ML models.

- [Try out Label Studio](#try-out-label-studio)
- [What you get from Label Studio](#what-you-get-from-label-studio)
- [Included templates for labeling data in Label Studio](#included-templates-for-labeling-data-in-label-studio)
- [Set up machine learning models with Label Studio](#set-up-machine-learning-models-with-Label-Studio)
- [Integrate Label Studio with your existing tools](#integrate-label-studio-with-your-existing-tools)

![Gif of Label Studio annotating different types of data](https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/annotation_examples.gif)

Have a custom dataset? You can customize Label Studio to fit your needs. Read an [introductory blog post](https://towardsdatascience.com/introducing-label-studio-a-swiss-army-knife-of-data-labeling-140c1be92881) to learn more. 

## Try out Label Studio

Install Label Studio locally, or deploy it in a cloud instance. Also you can try [Label Studio Teams](https://app.heartex.com).

- [Install locally with Docker](#install-locally-with-docker)
- [Run with Docker Compose (Label Studio + Nginx + PostgreSQL)](#run-with-docker-compose)
- [Install locally with pip](#install-locally-with-pip)
- [Install locally with Anaconda](#install-locally-with-anaconda)
- [Install for local development](#install-for-local-development)
- [Deploy in a cloud instance](#deploy-in-a-cloud-instance)

### Install locally with Docker
Official Label Studio docker image is [here](https://hub.docker.com/r/heartexlabs/label-studio) and it can be downloaded with `docker pull`. 
Run Label Studio in a Docker container and access it at `http://localhost:8080`.


```bash
docker pull heartexlabs/label-studio:latest
docker run -it -p 8080:8080 -v `pwd`/mydata:/label-studio/data heartexlabs/label-studio:latest
```
You can find all the generated assets, including SQLite3 database storage `label_studio.sqlite3` and uploaded files, in the `./mydata` directory.

#### Override default Docker install
You can override the default launch command by appending the new arguments:
```bash
docker run -it -p 8080:8080 -v `pwd`/mydata:/label-studio/data heartexlabs/label-studio:latest label-studio --log-level DEBUG
```

#### Build a local image with Docker
If you want to build a local image, run:
```bash
docker build -t heartexlabs/label-studio:latest .
```

### Run with Docker Compose
Docker Compose script provides production-ready stack consisting of the following components:

- Label Studio
- [Nginx](https://www.nginx.com/) - proxy web server used to load various static data, including uploaded audio, images, etc.
- [PostgreSQL](https://www.postgresql.org/) - production-ready database that replaces less performant SQLite3.

To start using the app from `http://localhost` run this command:
```bash
docker-compose up
```

### Install locally with pip

```bash
# Requires Python &gt;=3.7 &lt;=3.9
pip install label-studio

# Start the server at http://localhost:8080
label-studio
```

### Install locally with Anaconda

```bash
conda create --name label-studio
conda activate label-studio
pip install label-studio
```

### Install for local development

You can run the latest Label Studio version locally without installing the package with pip. 

```bash
# Install all package dependencies
pip install -e .
# Run database migrations
python label_studio/manage.py migrate
# Start the server in development mode at http://localhost:8080
python label_studio/manage.py runserver
```

### Deploy in a cloud instance

You can deploy Label Studio with one click in Heroku, Microsoft Azure, or Google Cloud Platform: 

[&lt;img src=&quot;https://www.herokucdn.com/deploy/button.svg&quot; height=&quot;30px&quot;&gt;](https://heroku.com/deploy?template=https://github.com/heartexlabs/label-studio/tree/heroku-persistent-pg)
[&lt;img src=&quot;https://aka.ms/deploytoazurebutton&quot; height=&quot;30px&quot;&gt;](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2Fheartexlabs%2Flabel-studio%2Fmaster%2Fazuredeploy.json)
[&lt;img src=&quot;https://deploy.cloud.run/button.svg&quot; height=&quot;30px&quot;&gt;](https://deploy.cloud.run)


#### Apply frontend changes

The frontend part of Label Studio app lies in the `frontend/` folder and written in React JSX. In case you&#039;ve made some changes there, the following commands should be run before building / starting the instance:

```
cd label_studio/frontend/
npm ci
npx webpack
cd ../..
python label_studio/manage.py collectstatic --no-input
```

### Troubleshoot installation
If you see any errors during installation, try to rerun the installation

```bash
pip install --ignore-installed label-studio
```

#### Install dependencies on Windows 
To run Label Studio on Windows, download and install the following wheel packages from [Gohlke builds](https://www.lfd.uci.edu/~gohlke/pythonlibs) to ensure you&#039;re using the correct version of Python:
- [lxml](https://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml)

```bash
# Upgrade pip 
pip install -U pip

# If you&#039;re running Win64 with Python 3.8, install the packages downloaded from Gohlke:
pip install lxml‚Äë4.5.0‚Äëcp38‚Äëcp38‚Äëwin_amd64.whl

# Install label studio
pip install label-studio
```

#### Run test suite
```bash
pip install -r deploy/requirements-test.txt
cd label_studio

# postgres (assumes default postgres user,db,pass)
DJANGO_DB=default DJANGO_SETTINGS_MODULE=core.settings.label_studio python -m pytest -vv -n auto

# sqlite3
DJANGO_DB=sqlite DJANGO_SETTINGS_MODULE=core.settings.label_studio python -m pytest -vv -n auto
```


## What you get from Label Studio

![Screenshot of Label Studio data manager grid view with images](https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/labelstudio-ui.gif)

- **Multi-user labeling** sign up and login, when you create an annotation it&#039;s tied to your account.
- **Multiple projects** to work on all your datasets in one instance.
- **Streamlined design** helps you focus on your task, not how to use the software.
- **Configurable label formats** let you customize the visual interface to meet your specific labeling needs.
- **Support for multiple data types** including images, audio, text, HTML, time-series, and video. 
- **Import from files or from cloud storage** in Amazon AWS S3, Google Cloud Storage, or JSON, CSV, TSV, RAR, and ZIP archives. 
- **Integration with machine learning models** so that you can visualize and compare predictions from different models and perform pre-labeling.
- **Embed it in your data pipeline** REST API makes it easy to make it a part of your pipeline

## Included templates for labeling data in Label Studio 

Label Studio includes a variety of templates to help you label your data, or you can create your own using specifically designed configuration language. The most common templates and use cases for labeling include the following cases:

&lt;img src=&quot;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/templates-categories.jpg&quot; /&gt;

## Set up machine learning models with Label Studio

Connect your favorite machine learning model using the Label Studio Machine Learning SDK. Follow these steps:

1. Start your own machine learning backend server. See [more detailed instructions](https://github.com/heartexlabs/label-studio-ml-backend).
2. Connect Label Studio to the server on the model page found in project settings.

This lets you:

- **Pre-label** your data using model predictions. 
- Do **online learning** and retrain your model while new annotations are being created. 
- Do **active learning** by labeling only the most complex examples in your data.

## Integrate Label Studio with your existing tools

You can use Label Studio as an independent part of your machine learning workflow or integrate the frontend or backend into your existing tools.  

* Use the [Label Studio Frontend](https://github.com/heartexlabs/label-studio-frontend) as a separate React library. See more in the [Frontend Library documentation](https://labelstud.io/guide/frontend.html). 

## Ecosystem

| Project | Description |
|-|-|
| label-studio | Server, distributed as a pip package |
| [label-studio-frontend](https://github.com/heartexlabs/label-studio-frontend) | React and JavaScript frontend and can run standalone in a web browser or be embedded into your application. |  
| [data-manager](https://github.com/heartexlabs/dm2) | React and JavaScript frontend for managing data. Includes the Label Studio Frontend. Relies on the label-studio server or a custom backend with the expected API methods. | 
| [label-studio-converter](https://github.com/heartexlabs/label-studio-converter) | Encode labels in the format of your favorite machine learning library | 
| [label-studio-transformers](https://github.com/heartexlabs/label-studio-transformers) | Transformers library connected and configured for use with Label Studio |


## Roadmap

Want to use **The Coolest Feature X** but Label Studio doesn&#039;t support it? Check out [our public roadmap](roadmap.md)!

## Citation

```tex
@misc{Label Studio,
  title={{Label Studio}: Data labeling software},
  url={https://github.com/heartexlabs/label-studio},
  note={Open source software available from https://github.com/heartexlabs/label-studio},
  author={
    Maxim Tkachenko and
    Mikhail Malyuk and
    Andrey Holmanyuk and
    Nikolai Liubimov},
  year={2020-2022},
}
```

## License

This software is licensed under the [Apache 2.0 LICENSE](/LICENSE) ¬© [Heartex](https://www.heartex.ai/). 2020-2021

&lt;img src=&quot;https://github.com/heartexlabs/label-studio/blob/master/images/opossum_looking.png?raw=true&quot; title=&quot;Hey everyone!&quot; height=&quot;140&quot; width=&quot;140&quot; /&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[viarotel-org/escrcpy]]></title>
            <link>https://github.com/viarotel-org/escrcpy</link>
            <guid>https://github.com/viarotel-org/escrcpy</guid>
            <pubDate>Sun, 24 Aug 2025 00:04:51 GMT</pubDate>
            <description><![CDATA[üì± Display and control your Android device graphically with scrcpy.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/viarotel-org/escrcpy">viarotel-org/escrcpy</a></h1>
            <p>üì± Display and control your Android device graphically with scrcpy.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,897</p>
            <p>Forks: 431</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre>&lt;div style=&quot;display:flex;&quot;&gt;
  &lt;img src=&quot;https://cdn.jsdelivr.net/gh/viarotel-org/escrcpy@main/electron/resources/build/logo.png&quot; alt=&quot;viarotel-escrcpy&quot; width=&quot;108px&quot;&gt;
&lt;/div&gt;

# Escrcpy

[![GitCode](https://gitcode.com/viarotel-org/escrcpy/star/badge.svg)](https://gitcode.com/viarotel-org/escrcpy)
[![Gitee](https://gitee.com/viarotel-org/escrcpy/badge/star.svg?theme=dark)](https://gitee.com/viarotel-org/escrcpy)
[![GitHub](https://img.shields.io/github/stars/viarotel-org/escrcpy?label=Github%20Stars)](https://github.com/viarotel-org/escrcpy)
[![Ask DeepWiki](https://deepwiki.com/badge.svg)](https://deepwiki.com/viarotel-org/escrcpy)

üì± Display and control your Android device graphically with scrcpy, powered by Electron. [‰∏≠ÊñáÊñáÊ°£](https://github.com/viarotel-org/escrcpy/blob/main/README-CN.md)

&lt;div style=&quot;display:flex;&quot;&gt;
  &lt;img src=&quot;./screenshots/zh-CN/overview.jpg&quot; alt=&quot;viarotel-escrcpy&quot; width=&quot;100%&quot;&gt;
&lt;/div&gt;

## Features

- üèÉ Synchronization: Faster synchronization with Scrcpy thanks to web technology
- ü§ñ Automation: Auto-connect devices, auto-execute mirroring, custom scripts, scheduled tasks
- üí° Customization: Multi-device management, independent configurations, custom notes, config import/export
- üì° Wireless: Quick connection via QR code scanning
- üîó Reverse Tethering: Gnirehtet reverse tethering
- üé® Themes: Light mode, dark mode, system theme following
- üòé Lightweight: Native support, displays only the device screen
- ‚ö°Ô∏è Performance: 30~120 FPS, depending on the device
- üåü Quality: 1920√ó1080 or higher
- üïí Low Latency: 35~70 ms
- üöÄ Fast Startup: First image displayed in about 1 second
- üôÖ‚Äç‚ôÇÔ∏è Non-intrusive: No installation files left on Android devices
- ü§© User Benefits: No accounts, no ads, no internet connection required
- üóΩ Freedom: Free and open-source software

## Installation

### Manual Installation via Released Packages

Check the [Releases Page](https://github.com/viarotel-org/escrcpy/releases)

### macOS Installation via Homebrew

Refer to [homebrew-escrcpy](https://github.com/viarotel-org/homebrew-escrcpy)

## Documentation

- [Getting Started](https://escrcpy.viarotel.eu.org/guide/started)
- [Shortcuts](https://escrcpy.viarotel.eu.org/reference/scrcpy/shortcuts)
- [Device Operations](https://escrcpy.viarotel.eu.org/guide/operation)
- [Preferences](https://escrcpy.viarotel.eu.org/guide/preferences)
- [Reverse Tethering](https://escrcpy.viarotel.eu.org/reference/gnirehtet/)

## For Developers

If you are a developer and wish to run or help improve this project, refer to the [Development Documentation](https://github.com/viarotel-org/escrcpy/blob/main/develop.md)

## Get Help

As an open-source project powered by passion, support is limited, and updates are irregular.

- [FAQ](https://escrcpy.viarotel.eu.org/help/escrcpy)
- [Report Issues](https://github.com/viarotel-org/escrcpy/issues)
- [Contact Email](viarotel@qq.com)

## What&#039;s Next?

[Milestones](https://escrcpy.viarotel.eu.org/guide/milestones)

## Acknowledgments

This project owes its existence to the following open-source projects:

- [scrcpy](https://github.com/Genymobile/scrcpy)
- [adbkit](https://github.com/DeviceFarmer/adbkit)
- [electron](https://www.electronjs.org/)
- [vue](https://vuejs.org/)
- [gnirehtet](https://github.com/Genymobile/gnirehtet/)

## Donate

If this project has helped you, consider buying me a coffee to keep me motivated for further improvements üòõ

&lt;div style=&quot;display:flex;&quot;&gt;
  &lt;img src=&quot;https://cdn.jsdelivr.net/gh/viarotel-org/escrcpy@main/src/assets/sponsor/viarotel-wepay.png&quot; alt=&quot;viarotel-wepay&quot; width=&quot;30%&quot;&gt;
  &lt;img src=&quot;https://cdn.jsdelivr.net/gh/viarotel-org/escrcpy@main/src/assets/sponsor/viarotel-alipay.png&quot; alt=&quot;viarotel-alipay&quot; width=&quot;30%&quot;&gt;
  &lt;a href=&quot;https://www.paypal.com/paypalme/viarotel&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;
    &lt;img src=&quot;https://cdn.jsdelivr.net/gh/viarotel-org/escrcpy@main/src/assets/sponsor/viarotel-paypal.png&quot; alt=&quot;viarotel-paypal&quot; width=&quot;30%&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;

## Contributors

Thanks to all who contributed!

[Contributors](https://github.com/viarotel/escrcpy/graphs/contributors)

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=viarotel-org/escrcpy&amp;type=Date)](https://star-history.com/#viarotel-org/escrcpy&amp;Date)</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[projectdiscovery/nuclei-templates]]></title>
            <link>https://github.com/projectdiscovery/nuclei-templates</link>
            <guid>https://github.com/projectdiscovery/nuclei-templates</guid>
            <pubDate>Sun, 24 Aug 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[Community curated list of templates for the nuclei engine to find security vulnerabilities.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/projectdiscovery/nuclei-templates">projectdiscovery/nuclei-templates</a></h1>
            <p>Community curated list of templates for the nuclei engine to find security vulnerabilities.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 10,678</p>
            <p>Forks: 2,988</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>

&lt;h1 align=&quot;center&quot;&gt;
Nuclei Templates
&lt;/h1&gt;
&lt;h4 align=&quot;center&quot;&gt;Community curated list of templates for the nuclei engine to find security vulnerabilities in applications.&lt;/h4&gt;


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/projectdiscovery/nuclei-templates&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/pdnuclei&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/pdnuclei.svg?logo=twitter&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://discord.gg/projectdiscovery&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/695645237418131507.svg?logo=discord&quot;&gt;&lt;/a&gt;
&lt;/p&gt;
      
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://nuclei.projectdiscovery.io/templating-guide/&quot;&gt;Documentation&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;#-contributions&quot;&gt;Contributions&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;#-discussion&quot;&gt;Discussion&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;#-community&quot;&gt;Community&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;https://nuclei.projectdiscovery.io/faq/templates/&quot;&gt;FAQs&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;https://discord.gg/projectdiscovery&quot;&gt;Join Discord&lt;/a&gt;
&lt;/p&gt;

----

Templates are the core of the [nuclei scanner](https://github.com/projectdiscovery/nuclei) which powers the actual scanning engine.
This repository stores and houses various templates for the scanner provided by our team, as well as contributed by the community.
We hope that you also contribute by sending templates via **pull requests** or [Github issues](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=submit-template.md&amp;title=%5Bnuclei-template%5D+) to grow the list.


## Nuclei Templates overview


An overview of the nuclei template project, including statistics on unique tags, author, directory, severity, and type of templates. The table below contains the top ten statistics for each matrix; an expanded version of this is [available here](TEMPLATES-STATS.md), and also available in [JSON](TEMPLATES-STATS.json) format for integration.

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt; 

## Nuclei Templates Top 10 statistics

|    TAG    | COUNT |    AUTHOR     | COUNT | DIRECTORY  | COUNT | SEVERITY | COUNT | TYPE | COUNT |
|-----------|-------|---------------|-------|------------|-------|----------|-------|------|-------|
| cve       |  3288 | dhiyaneshdk   |  1882 | http       |  8967 | info     |  4190 | file |   435 |
| panel     |  1342 | daffainfo     |   868 | cloud      |   657 | high     |  2446 | dns  |    26 |
| xss       |  1257 | princechaddha |   854 | file       |   435 | medium   |  2379 |      |       |
| wordpress |  1181 | dwisiswant0   |   806 | dast       |   255 | critical |  1425 |      |       |
| exposure  |  1107 | ritikchaddha  |   649 | workflows  |   202 | low      |   318 |      |       |
| wp-plugin |  1032 | pussycat0x    |   532 | code       |   198 | unknown  |    56 |      |       |
| osint     |   841 | pikpikcu      |   352 | network    |   145 |          |       |      |       |
| tech      |   803 | pdteam        |   310 | javascript |    71 |          |       |      |       |
| rce       |   786 | pdresearch    |   269 | ssl        |    38 |          |       |      |       |
| lfi       |   777 | iamnoooob     |   257 | dns        |    23 |          |       |      |       |

**848 directories, 11344 files**.

&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

üìñ Documentation
-----

Please navigate to https://nuclei.projectdiscovery.io for detailed documentation to **build** new or your own **custom** templates.
We have also added a set of templates to help you understand how things work.

üí™ Contributions
-----

Nuclei-templates is powered by major contributions from the community.
[Template contributions ](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=submit-template.md&amp;title=%5Bnuclei-template%5D+), [Feature Requests](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=feature_request.md&amp;title=%5BFeature%5D+) and [Bug Reports](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=bug_report.md&amp;title=%5BBug%5D+) are more than welcome.

![Alt](https://repobeats.axiom.co/api/embed/55ee65543bb9a0f9c797626c4e66d472a517d17c.svg &quot;Repobeats analytics image&quot;)

üí¨ Discussion
-----

Have questions / doubts / ideas to discuss?
Feel free to open a discussion on [Github discussions](https://github.com/projectdiscovery/nuclei-templates/discussions) board.

üë®‚Äçüíª Community
-----

You are welcome to join the active [Discord Community](https://discord.gg/projectdiscovery) to discuss directly with project maintainers and share things with others around security and automation.
Additionally, you may follow us on [Twitter](https://twitter.com/pdnuclei) to be updated on all the things about Nuclei.


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=projectdiscovery/nuclei-templates&amp;max=300&quot;&gt;
&lt;/a&gt;
&lt;/p&gt;


Thanks again for your contribution and keeping this community vibrant. :heart:
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[academind/react-complete-guide-course-resources]]></title>
            <link>https://github.com/academind/react-complete-guide-course-resources</link>
            <guid>https://github.com/academind/react-complete-guide-course-resources</guid>
            <pubDate>Sun, 24 Aug 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[React - The Complete Guide Course Resources (Code, Attachments, Slides)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/academind/react-complete-guide-course-resources">academind/react-complete-guide-course-resources</a></h1>
            <p>React - The Complete Guide Course Resources (Code, Attachments, Slides)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 3,385</p>
            <p>Forks: 2,628</p>
            <p>Stars today: 1 star today</p>
            <h2>README</h2><pre># React - The Complete Guide Course Resources

This repository provides access to code files, code snapshots, slides &amp; other resources that are used or provided by the [React - The Complete Guide](https://acad.link/reactjs) course.

If you&#039;re facing any issues with the code, please post in the course Q&amp;A section.

# Repository Content

- **Code Snapshots:** All code snapshots (starting snapshots, intermediate snapshots, finished snapshots) for the various course sections can be found in the [/code](/code/) folder.
- **Lecture Attachments:** Any standalone code files or other attachments that are mentioned in course lectures (and attached to those lectures) are stored in the [/attachments](/attachments/) folder.
- **Other Resources:** Other resources (like the course slides) can be found in the [/other](/other/) folder.

The **Code Snapshots** and **Lecture Attachments** folders contain one subfolder per course section - this allows you to easily access the resources for a specific course section.

# How To Use Code Snapshots

Code snapshots are primarily provided to allow you to compare your code to mine. The snapshots are taken directly from the course recordings and therefore reflect my code you see in the videos.

Of course, you can also try running those code snapshots on your machine. You&#039;ll need to run `npm install` in the individual snapshot folders, followed by `npm run dev` to start the development server - just as shown in the course.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[eyaltoledano/claude-task-master]]></title>
            <link>https://github.com/eyaltoledano/claude-task-master</link>
            <guid>https://github.com/eyaltoledano/claude-task-master</guid>
            <pubDate>Sun, 24 Aug 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[An AI-powered task-management system you can drop into Cursor, Lovable, Windsurf, Roo, and others.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/eyaltoledano/claude-task-master">eyaltoledano/claude-task-master</a></h1>
            <p>An AI-powered task-management system you can drop into Cursor, Lovable, Windsurf, Roo, and others.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 20,942</p>
            <p>Forks: 2,044</p>
            <p>Stars today: 39 stars today</p>
            <h2>README</h2><pre>&lt;a name=&quot;readme-top&quot;&gt;&lt;/a&gt;

&lt;div align=&#039;center&#039;&gt;
&lt;a href=&quot;https://trendshift.io/repositories/13971&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/13971&quot; alt=&quot;eyaltoledano%2Fclaude-task-master | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://task-master.dev&quot;&gt;&lt;img src=&quot;./images/logo.png?raw=true&quot; alt=&quot;Taskmaster logo&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;b&gt;Taskmaster&lt;/b&gt;: A task management system for AI-driven development, designed to work seamlessly with any AI chat.
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://discord.gg/taskmasterai&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://dcbadge.limes.pink/api/server/https://discord.gg/taskmasterai?style=flat&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; |
  &lt;a href=&quot;https://docs.task-master.dev&quot; target=&quot;_blank&quot;&gt;Docs&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/eyaltoledano/claude-task-master/actions/workflows/ci.yml&quot;&gt;&lt;img src=&quot;https://github.com/eyaltoledano/claude-task-master/actions/workflows/ci.yml/badge.svg&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/eyaltoledano/claude-task-master/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/eyaltoledano/claude-task-master?style=social&quot; alt=&quot;GitHub stars&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://badge.fury.io/js/task-master-ai&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/task-master-ai.svg&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT%20with%20Commons%20Clause-blue.svg&quot; alt=&quot;License&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/task-master-ai&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/d18m/task-master-ai?style=flat&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/task-master-ai&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/task-master-ai?style=flat&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/task-master-ai&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dw/task-master-ai?style=flat&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

## By [@eyaltoledano](https://x.com/eyaltoledano) &amp; [@RalphEcom](https://x.com/RalphEcom)

[![Twitter Follow](https://img.shields.io/twitter/follow/eyaltoledano)](https://x.com/eyaltoledano)
[![Twitter Follow](https://img.shields.io/twitter/follow/RalphEcom)](https://x.com/RalphEcom)

A task management system for AI-driven development with Claude, designed to work seamlessly with Cursor AI.

## Documentation

üìö **[View Full Documentation](https://docs.task-master.dev)**

For detailed guides, API references, and comprehensive examples, visit our documentation site.

### Quick Reference

The following documentation is also available in the `docs` directory:

- [Configuration Guide](docs/configuration.md) - Set up environment variables and customize Task Master
- [Tutorial](docs/tutorial.md) - Step-by-step guide to getting started with Task Master
- [Command Reference](docs/command-reference.md) - Complete list of all available commands
- [Task Structure](docs/task-structure.md) - Understanding the task format and features
- [Example Interactions](docs/examples.md) - Common Cursor AI interaction examples
- [Migration Guide](docs/migration-guide.md) - Guide to migrating to the new project structure

#### Quick Install for Cursor 1.0+ (One-Click)

[![Add task-master-ai MCP server to Cursor](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=task-master-ai&amp;config=eyJjb21tYW5kIjoibnB4IC15IC0tcGFja2FnZT10YXNrLW1hc3Rlci1haSB0YXNrLW1hc3Rlci1haSIsImVudiI6eyJBTlRIUk9QSUNfQVBJX0tFWSI6IllPVVJfQU5USFJPUElDX0FQSV9LRVlfSEVSRSIsIlBFUlBMRVhJVFlfQVBJX0tFWSI6IllPVVJfUEVSUExFWElUWV9BUElfS0VZX0hFUkUiLCJPUEVOQUlfQVBJX0tFWSI6IllPVVJfT1BFTkFJX0tFWV9IRVJFIiwiR09PR0xFX0FQSV9LRVkiOiJZT1VSX0dPT0dMRV9LRVlfSEVSRSIsIk1JU1RSQUxfQVBJX0tFWSI6IllPVVJfTUlTVFJBTF9LRVlfSEVSRSIsIkdST1FfQVBJX0tFWSI6IllPVVJfR1JPUV9LRVlfSEVSRSIsIk9QRU5ST1VURVJfQVBJX0tFWSI6IllPVVJfT1BFTlJPVVRFUl9LRVlfSEVSRSIsIlhBSV9BUElfS0VZIjoiWU9VUl9YQUlfS0VZX0hFUkUiLCJBWlVSRV9PUEVOQUlfQVBJX0tFWSI6IllPVVJfQVpVUkVfS0VZX0hFUkUiLCJPTExBTUFfQVBJX0tFWSI6IllPVVJfT0xMQU1BX0FQSV9LRVlfSEVSRSJ9fQ%3D%3D)

&gt; **Note:** After clicking the link, you&#039;ll still need to add your API keys to the configuration. The link installs the MCP server with placeholder keys that you&#039;ll need to replace with your actual API keys.

## Requirements

Taskmaster utilizes AI across several commands, and those require a separate API key. You can use a variety of models from different AI providers provided you add your API keys. For example, if you want to use Claude 3.7, you&#039;ll need an Anthropic API key.

You can define 3 types of models to be used: the main model, the research model, and the fallback model (in case either the main or research fail). Whatever model you use, its provider API key must be present in either mcp.json or .env.

At least one (1) of the following is required:

- Anthropic API key (Claude API)
- OpenAI API key
- Google Gemini API key
- Perplexity API key (for research model)
- xAI API Key (for research or main model)
- OpenRouter API Key (for research or main model)
- Claude Code (no API key required - requires Claude Code CLI)

Using the research model is optional but highly recommended. You will need at least ONE API key (unless using Claude Code). Adding all API keys enables you to seamlessly switch between model providers at will.

## Quick Start

### Option 1: MCP (Recommended)

MCP (Model Control Protocol) lets you run Task Master directly from your editor.

#### 1. Add your MCP config at the following path depending on your editor

| Editor       | Scope   | Linux/macOS Path                      | Windows Path                                      | Key          |
| ------------ | ------- | ------------------------------------- | ------------------------------------------------- | ------------ |
| **Cursor**   | Global  | `~/.cursor/mcp.json`                  | `%USERPROFILE%\.cursor\mcp.json`                  | `mcpServers` |
|              | Project | `&lt;project_folder&gt;/.cursor/mcp.json`   | `&lt;project_folder&gt;\.cursor\mcp.json`               | `mcpServers` |
| **Windsurf** | Global  | `~/.codeium/windsurf/mcp_config.json` | `%USERPROFILE%\.codeium\windsurf\mcp_config.json` | `mcpServers` |
| **VS Code**  | Project | `&lt;project_folder&gt;/.vscode/mcp.json`   | `&lt;project_folder&gt;\.vscode\mcp.json`               | `servers`    |

##### Manual Configuration

###### Cursor &amp; Windsurf (`mcpServers`)

```json
{
  &quot;mcpServers&quot;: {
    &quot;task-master-ai&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;--package=task-master-ai&quot;, &quot;task-master-ai&quot;],
      &quot;env&quot;: {
        &quot;ANTHROPIC_API_KEY&quot;: &quot;YOUR_ANTHROPIC_API_KEY_HERE&quot;,
        &quot;PERPLEXITY_API_KEY&quot;: &quot;YOUR_PERPLEXITY_API_KEY_HERE&quot;,
        &quot;OPENAI_API_KEY&quot;: &quot;YOUR_OPENAI_KEY_HERE&quot;,
        &quot;GOOGLE_API_KEY&quot;: &quot;YOUR_GOOGLE_KEY_HERE&quot;,
        &quot;MISTRAL_API_KEY&quot;: &quot;YOUR_MISTRAL_KEY_HERE&quot;,
        &quot;GROQ_API_KEY&quot;: &quot;YOUR_GROQ_KEY_HERE&quot;,
        &quot;OPENROUTER_API_KEY&quot;: &quot;YOUR_OPENROUTER_KEY_HERE&quot;,
        &quot;XAI_API_KEY&quot;: &quot;YOUR_XAI_KEY_HERE&quot;,
        &quot;AZURE_OPENAI_API_KEY&quot;: &quot;YOUR_AZURE_KEY_HERE&quot;,
        &quot;OLLAMA_API_KEY&quot;: &quot;YOUR_OLLAMA_API_KEY_HERE&quot;
      }
    }
  }
}
```

&gt; üîë Replace `YOUR_‚Ä¶_KEY_HERE` with your real API keys. You can remove keys you don&#039;t use.

&gt; **Note**: If you see `0 tools enabled` in the MCP settings, try removing the `--package=task-master-ai` flag from `args`.

###### VS‚ÄØCode (`servers` + `type`)

```json
{
  &quot;servers&quot;: {
    &quot;task-master-ai&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;--package=task-master-ai&quot;, &quot;task-master-ai&quot;],
      &quot;env&quot;: {
        &quot;ANTHROPIC_API_KEY&quot;: &quot;YOUR_ANTHROPIC_API_KEY_HERE&quot;,
        &quot;PERPLEXITY_API_KEY&quot;: &quot;YOUR_PERPLEXITY_API_KEY_HERE&quot;,
        &quot;OPENAI_API_KEY&quot;: &quot;YOUR_OPENAI_KEY_HERE&quot;,
        &quot;GOOGLE_API_KEY&quot;: &quot;YOUR_GOOGLE_KEY_HERE&quot;,
        &quot;MISTRAL_API_KEY&quot;: &quot;YOUR_MISTRAL_KEY_HERE&quot;,
        &quot;GROQ_API_KEY&quot;: &quot;YOUR_GROQ_KEY_HERE&quot;,
        &quot;OPENROUTER_API_KEY&quot;: &quot;YOUR_OPENROUTER_KEY_HERE&quot;,
        &quot;XAI_API_KEY&quot;: &quot;YOUR_XAI_KEY_HERE&quot;,
        &quot;AZURE_OPENAI_API_KEY&quot;: &quot;YOUR_AZURE_KEY_HERE&quot;,
        &quot;OLLAMA_API_KEY&quot;: &quot;YOUR_OLLAMA_API_KEY_HERE&quot;
      },
      &quot;type&quot;: &quot;stdio&quot;
    }
  }
}
```

&gt; üîë Replace `YOUR_‚Ä¶_KEY_HERE` with your real API keys. You can remove keys you don&#039;t use.

#### 2. (Cursor-only) Enable Taskmaster MCP

Open Cursor Settings (Ctrl+Shift+J) ‚û° Click on MCP tab on the left ‚û° Enable task-master-ai with the toggle

#### 3. (Optional) Configure the models you want to use

In your editor&#039;s AI chat pane, say:

```txt
Change the main, research and fallback models to &lt;model_name&gt;, &lt;model_name&gt; and &lt;model_name&gt; respectively.
```

For example, to use Claude Code (no API key required):
```txt
Change the main model to claude-code/sonnet
```

[Table of available models](docs/models.md) | [Claude Code setup](docs/examples/claude-code-usage.md)

#### 4. Initialize Task Master

In your editor&#039;s AI chat pane, say:

```txt
Initialize taskmaster-ai in my project
```

#### 5. Make sure you have a PRD (Recommended)

For **new projects**: Create your PRD at `.taskmaster/docs/prd.txt`  
For **existing projects**: You can use `scripts/prd.txt` or migrate with `task-master migrate`

An example PRD template is available after initialization in `.taskmaster/templates/example_prd.txt`.

&gt; [!NOTE]
&gt; While a PRD is recommended for complex projects, you can always create individual tasks by asking &quot;Can you help me implement [description of what you want to do]?&quot; in chat.

**Always start with a detailed PRD.**

The more detailed your PRD, the better the generated tasks will be.

#### 6. Common Commands

Use your AI assistant to:

- Parse requirements: `Can you parse my PRD at scripts/prd.txt?`
- Plan next step: `What&#039;s the next task I should work on?`
- Implement a task: `Can you help me implement task 3?`
- View multiple tasks: `Can you show me tasks 1, 3, and 5?`
- Expand a task: `Can you help me expand task 4?`
- **Research fresh information**: `Research the latest best practices for implementing JWT authentication with Node.js`
- **Research with context**: `Research React Query v5 migration strategies for our current API implementation in src/api.js`

[More examples on how to use Task Master in chat](docs/examples.md)

### Option 2: Using Command Line

#### Installation

```bash
# Install globally
npm install -g task-master-ai

# OR install locally within your project
npm install task-master-ai
```

#### Initialize a new project

```bash
# If installed globally
task-master init

# If installed locally
npx task-master init

# Initialize project with specific rules
task-master init --rules cursor,windsurf,vscode
```

This will prompt you for project details and set up a new project with the necessary files and structure.

#### Common Commands

```bash
# Initialize a new project
task-master init

# Parse a PRD and generate tasks
task-master parse-prd your-prd.txt

# List all tasks
task-master list

# Show the next task to work on
task-master next

# Show specific task(s) - supports comma-separated IDs
task-master show 1,3,5

# Research fresh information with project context
task-master research &quot;What are the latest best practices for JWT authentication?&quot;

# Move tasks between tags (cross-tag movement)
task-master move --from=5 --from-tag=backlog --to-tag=in-progress
task-master move --from=5,6,7 --from-tag=backlog --to-tag=done --with-dependencies
task-master move --from=5 --from-tag=backlog --to-tag=in-progress --ignore-dependencies

# Generate task files
task-master generate

# Add rules after initialization
task-master rules add windsurf,roo,vscode
```

## Claude Code Support

Task Master now supports Claude models through the Claude Code CLI, which requires no API key:

- **Models**: `claude-code/opus` and `claude-code/sonnet`
- **Requirements**: Claude Code CLI installed
- **Benefits**: No API key needed, uses your local Claude instance

[Learn more about Claude Code setup](docs/examples/claude-code-usage.md)

## Troubleshooting

### If `task-master init` doesn&#039;t respond

Try running it with Node directly:

```bash
node node_modules/claude-task-master/scripts/init.js
```

Or clone the repository and run:

```bash
git clone https://github.com/eyaltoledano/claude-task-master.git
cd claude-task-master
node scripts/init.js
```

## Contributors

&lt;a href=&quot;https://github.com/eyaltoledano/claude-task-master/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=eyaltoledano/claude-task-master&quot; alt=&quot;Task Master project contributors&quot; /&gt;
&lt;/a&gt;

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=eyaltoledano/claude-task-master&amp;type=Timeline)](https://www.star-history.com/#eyaltoledano/claude-task-master&amp;Timeline)

## Licensing

Task Master is licensed under the MIT License with Commons Clause. This means you can:

‚úÖ **Allowed**:

- Use Task Master for any purpose (personal, commercial, academic)
- Modify the code
- Distribute copies
- Create and sell products built using Task Master

‚ùå **Not Allowed**:

- Sell Task Master itself
- Offer Task Master as a hosted service
- Create competing products based on Task Master

See the [LICENSE](LICENSE) file for the complete license text and [licensing details](docs/licensing.md) for more information.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[ToolJet/ToolJet]]></title>
            <link>https://github.com/ToolJet/ToolJet</link>
            <guid>https://github.com/ToolJet/ToolJet</guid>
            <pubDate>Sun, 24 Aug 2025 00:04:47 GMT</pubDate>
            <description><![CDATA[Low-code platform for building business applications. Connect to databases, cloud storages, GraphQL, API endpoints, Airtable, Google sheets, OpenAI, etc and build apps using drag and drop application builder. Built using JavaScript/TypeScript. üöÄ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ToolJet/ToolJet">ToolJet/ToolJet</a></h1>
            <p>Low-code platform for building business applications. Connect to databases, cloud storages, GraphQL, API endpoints, Airtable, Google sheets, OpenAI, etc and build apps using drag and drop application builder. Built using JavaScript/TypeScript. üöÄ</p>
            <p>Language: JavaScript</p>
            <p>Stars: 36,365</p>
            <p>Forks: 4,723</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre>ToolJet is an **open-source low-code framework** to build and deploy internal tools with minimal engineering effort. ToolJet&#039;s drag-and-drop frontend builder allows you to create complex, responsive frontends within minutes. Additionally, you can integrate various data sources, including databases like PostgreSQL, MongoDB, and Elasticsearch; API endpoints with OpenAPI spec and OAuth2 support; SaaS tools such as Stripe, Slack, Google Sheets, Airtable, and Notion; as well as object storage services like S3, GCS, and Minio, to fetch and write data.

 :star: If you find ToolJet useful, please consider giving us a star on GitHub! Your support helps us continue to innovate and deliver exciting features.

![Docker Cloud Build Status](https://img.shields.io/docker/cloud/build/tooljet/tooljet-ce)
![Number of GitHub contributors](https://img.shields.io/github/contributors/tooljet/tooljet)
[![Number of GitHub issues that are open](https://img.shields.io/github/issues/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet/issues)
[![Number of GitHub stars](https://img.shields.io/github/stars/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet/stargazers)
![Number of GitHub closed issues](https://img.shields.io/github/issues-closed/tooljet/tooljet)
![Number of GitHub pull requests that are open](https://img.shields.io/github/issues-pr-raw/tooljet/tooljet)
![GitHub release; latest by date](https://img.shields.io/github/v/release/tooljet/tooljet)
![GitHub commit activity](https://img.shields.io/github/commit-activity/m/tooljet/tooljet)
[![GitHub license which is AGPL license](https://img.shields.io/github/license/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet)
[![Follow us on X, formerly Twitter](https://img.shields.io/twitter/follow/ToolJet?style=social)](https://twitter.com/ToolJet)

&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://user-images.githubusercontent.com/7828962/211444352-4d6d2e4a-13c9-4980-9e16-4aed4af9811b.png&quot; alt=&quot;Tooljet dashboard showing inventory and orders&quot;/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://github.com/ToolJet/ToolJet/assets/25361949/0e711f3a-edb7-496b-8833-107de3826933&quot;/&gt;
&lt;/p&gt;

## All features

- **Visual App Builder:** 45+ built-in responsive components, including Tables, Charts, Lists, Forms, and Progress Bars.
- **ToolJet Database:** Built-in no-code database.
- **Multi-Page:** Build an application with multiple pages.
- **Multiplayer editing:** Allows simultaneous app building by multiple developers.
- **50+ data sources:** Integrate with external databases, cloud storage, and APIs.
- **Desktop &amp; mobile:** Customize layout widths to fit various screen sizes.
- **Self-host:** Supports Docker, Kubernetes, AWS EC2, Google Cloud Run, and more.
- **Collaborate:** Add comments anywhere on the canvas and tag your team members.
- **Extend with plugins:** Use our [command-line tool](https://www.npmjs.com/package/@tooljet/cli) to easily bootstrap new connectors.
- **Version control:** Manage multiple application versions with a structured release cycle.
- **Run JS &amp; Python code:** Execute custom JavaScript and Python snippets.
- **Granular access control:** Set permissions at both group and app levels.
- **Low-code:** Use JS code almost anywhere within the builder, such as setting text color based on status with 
`status === &#039;success&#039; ? &#039;green&#039; : &#039;red&#039;`.
- **No-code query editors:** Query Editors are available for all supported data sources.
- **Join and transform data:** Transform query results using JavaScript or Python code.
- **Secure:** All the credentials are securely encrypted using `aes-256-gcm`.
- **Data Privacy:** ToolJet serves solely as a proxy and does not store data.
- **SSO:** Supports multiple Single Sign-On providers.

&lt;hr&gt;

## Quickstart
The easiest way to get started with ToolJet is by creating a [ToolJet Cloud](https://tooljet.ai) account. ToolJet Cloud offers a hosted solution of ToolJet. If you want to self-host ToolJet, kindly proceed to [deployment documentation](https://docs.tooljet.ai/docs/setup/).

### Try using Docker
Want to give ToolJet a quick spin on your local machine? You can run the following command from your terminal to have ToolJet up and running right away.


```bash
docker run \
  --name tooljet \
  --restart unless-stopped \
  -p 80:80 \
  --platform linux/amd64 \
  -v tooljet_data:/var/lib/postgresql/13/main \
  tooljet/try:ee-lts-latest
```

*For users upgrading their ToolJet version, we recommend choosing the LTS version over the latest version. The LTS version ensures stability with production bug fixes, security patches, and performance enhancements.*

## Tutorials and examples

[Time Tracker Application](https://docs.tooljet.ai/docs/#quickstart-guide)&lt;br&gt;
[Build your own CMS using low-code](https://blog.tooljet.ai/build-cms-using-lowcode-and-mongodb/)&lt;br&gt;
[AWS S3 Browser](https://blog.tooljet.ai/build-an-aws-s3-broswer-with-tooljet/)&lt;br&gt;

## Documentation
Documentation is available at https://docs.tooljet.ai.

- [Getting Started](https://docs.tooljet.ai)&lt;br&gt;
- [Data source Reference](https://docs.tooljet.ai/docs/data-sources/airtable/)&lt;br&gt;
- [Component Reference](https://docs.tooljet.ai/docs/widgets/button)

## Self-hosted
You can use ToolJet Cloud for a fully managed solution. If you want to self-host ToolJet, we have guides on deploying ToolJet on Kubernetes, AWS EC2, Docker, and more.

| Provider  | Documentation |
| :------------- | :------------- |
| Digital Ocean | [Link](https://docs.tooljet.ai/docs/setup/digitalocean)  |
| Docker  | [Link](https://docs.tooljet.ai/docs/setup/docker)   |
| AWS EC2 | [Link](https://docs.tooljet.ai/docs/setup/ec2)  |
| AWS ECS | [Link](https://docs.tooljet.ai/docs/setup/ecs)   |
| OpenShift | [Link](https://docs.tooljet.ai/docs/setup/openshift)   |
| Helm | [Link](https://docs.tooljet.ai/docs/setup/helm)   |
| AWS EKS (Kubernetes) | [Link](https://docs.tooljet.ai/docs/setup/kubernetes)   |
| GCP GKE (Kubernetes) | [Link](https://docs.tooljet.ai/docs/setup/kubernetes-gke)   |
| Azure AKS (Kubernetes) | [Link](https://docs.tooljet.ai/docs/setup/kubernetes-aks)   |
| Azure Container | [Link](https://docs.tooljet.ai/docs/setup/azure-container)   |
| Google Cloud Run  | [Link](https://docs.tooljet.ai/docs/setup/google-cloud-run)   |
| Deploying ToolJet client  | [Link](https://docs.tooljet.ai/docs/setup/client)   |
| Deploying ToolJet on a Subpath  | [Link](https://docs.tooljet.ai/docs/setup/tooljet-subpath/)   |

## Marketplace 
ToolJet can now be found on both AWS and Azure Marketplaces, making it simpler than ever to access and deploy our app-building platform.

Find ToolJet on AWS Marketplace [here](https://aws.amazon.com/marketplace/pp/prodview-fxjto27jkpqfg?sr=0-1&amp;ref_=beagle&amp;applicationId=AWSMPContessa) and explore seamless integration on Azure Marketplace [here](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/tooljetsolutioninc1679496832216.tooljet?tab=Overview).

## Community support
For general help using ToolJet, please refer to the official [documentation](https://docs.tooljet.ai/docs/). For additional help, you can use one of these channels to ask a question:

- [Slack](https://tooljet.ai/slack) - Discussions with the community and the team.
- [GitHub](https://github.com/ToolJet/ToolJet/issues) - For bug reports and feature requests.
- [ùïè (Twitter)](https://twitter.com/ToolJet) - Get the product updates quickly.

## Roadmap
Check out our [roadmap](https://github.com/orgs/ToolJet/projects/15) to stay updated on recently released features and learn about what&#039;s coming next.

## Branching model
We use the git-flow branching model. The base branch is `develop`. If you are looking for a stable version, please use the main branch or tags labeled as v1.x.x.

## Contributing
Kindly read our [Contributing Guide](CONTRIBUTING.md) to familiarize yourself with ToolJet&#039;s development process, how to suggest bug fixes and improvements, and the steps for building and testing your changes. &lt;br&gt;

## Contributors
&lt;a href=&quot;https://github.com/tooljet/tooljet/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=tooljet/tooljet&amp;max=400&amp;columns=20&quot; /&gt;
  &lt;img src=&quot;https://us-central1-tooljet-hub.cloudfunctions.net/github&quot; width=&quot;0&quot; height=&quot;0&quot; /&gt;
&lt;/a&gt;

## License
ToolJet ¬© 2023, ToolJet Solutions Inc - Released under the GNU Affero General Public License v3.0.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[expressjs/express]]></title>
            <link>https://github.com/expressjs/express</link>
            <guid>https://github.com/expressjs/express</guid>
            <pubDate>Sun, 24 Aug 2025 00:04:46 GMT</pubDate>
            <description><![CDATA[Fast, unopinionated, minimalist web framework for node.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/expressjs/express">expressjs/express</a></h1>
            <p>Fast, unopinionated, minimalist web framework for node.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 67,583</p>
            <p>Forks: 20,395</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[swagger-api/swagger-ui]]></title>
            <link>https://github.com/swagger-api/swagger-ui</link>
            <guid>https://github.com/swagger-api/swagger-ui</guid>
            <pubDate>Sun, 24 Aug 2025 00:04:45 GMT</pubDate>
            <description><![CDATA[Swagger UI is a collection of HTML, JavaScript, and CSS assets that dynamically generate beautiful documentation from a Swagger-compliant API.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/swagger-api/swagger-ui">swagger-api/swagger-ui</a></h1>
            <p>Swagger UI is a collection of HTML, JavaScript, and CSS assets that dynamically generate beautiful documentation from a Swagger-compliant API.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 28,067</p>
            <p>Forks: 9,190</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre># &lt;img src=&quot;https://raw.githubusercontent.com/swagger-api/swagger.io/wordpress/images/assets/SWU-logo-clr.png&quot; width=&quot;300&quot;&gt;

[![NPM version](https://badge.fury.io/js/swagger-ui.svg)](http://badge.fury.io/js/swagger-ui)
[![Build Status](https://jenkins.swagger.io/view/OSS%20-%20JavaScript/job/oss-swagger-ui-master/badge/icon?subject=jenkins%20build)](https://jenkins.swagger.io/view/OSS%20-%20JavaScript/job/oss-swagger-ui-master/)
[![npm audit](https://jenkins.swagger.io/buildStatus/icon?job=oss-swagger-ui-security-audit&amp;subject=npm%20audit)](https://jenkins.swagger.io/job/oss-swagger-ui-security-audit/lastBuild/console)
[![total GitHub contributors](https://img.shields.io/github/contributors-anon/swagger-api/swagger-ui.svg)](https://github.com/swagger-api/swagger-ui/graphs/contributors)

[![monthly npm installs](https://img.shields.io/npm/dm/swagger-ui.svg?label=npm%20downloads)](https://www.npmjs.com/package/swagger-ui)
![docker registry](https://img.shields.io/badge/docker-docker.swagger.io%2Fswaggerapi%2Fswagger--ui-blue)
![monthly packagist installs](https://img.shields.io/packagist/dm/swagger-api/swagger-ui.svg?label=packagist%20installs)
[![gzip size](https://img.shields.io/bundlephobia/minzip/swagger-ui.svg?label=gzip%20size)](https://bundlephobia.com/package/swagger-ui)

## Introduction
[Swagger UI](https://swagger.io/tools/swagger-ui/) allows anyone ‚Äî be it your development team or your end consumers ‚Äî to visualize and interact with the API‚Äôs resources without having any of the implementation logic in place. It‚Äôs automatically generated from your OpenAPI (formerly known as Swagger) Specification, with the visual documentation making it easy for back end implementation and client side consumption.

## General
**üëâüèº Want to score an easy open-source contribution?** Check out our [Good first issue](https://github.com/swagger-api/swagger-ui/issues?q=is%3Aissue+is%3Aopen+label%3A%22Good+first+issue%22) label.

**üï∞Ô∏è Looking for the older version of Swagger UI?** Refer to the [*2.x* branch](https://github.com/swagger-api/swagger-ui/tree/2.x).


This repository publishes three different NPM modules:

* [swagger-ui](https://www.npmjs.com/package/swagger-ui) is a traditional npm module intended for use in single-page applications that are capable of resolving dependencies (via Webpack, Browserify, etc.).
* [swagger-ui-dist](https://www.npmjs.com/package/swagger-ui-dist) is a dependency-free module that includes everything you need to serve Swagger UI in a server-side project, or a single-page application that can&#039;t resolve npm module dependencies.
* [swagger-ui-react](https://www.npmjs.com/package/swagger-ui-react) is Swagger UI packaged as a React component for use in React applications.

We strongly suggest that you use `swagger-ui` instead of `swagger-ui-dist` if you&#039;re building a single-page application, since `swagger-ui-dist` is significantly larger.

If you are looking for plain ol&#039; HTML/JS/CSS, [download the latest release](https://github.com/swagger-api/swagger-ui/releases/latest) and copy the contents of the `/dist` folder to your server.


## Compatibility
The OpenAPI Specification has undergone 5 revisions since initial creation in 2010.  Compatibility between Swagger UI and the OpenAPI Specification is as follows:

| Swagger UI Version | Release Date | OpenAPI Spec compatibility                           | Notes                                                                 |
|--------------------|--------------|------------------------------------------------------|-----------------------------------------------------------------------|
| 5.19.0             | 2025-02-17   | 2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.0.4, 3.1.0, 3.1.1 | [tag v5.19.0](https://github.com/swagger-api/swagger-ui/tree/v5.19.0) |
| 5.0.0              | 2023-06-12   | 2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.1.0               | [tag v5.0.0](https://github.com/swagger-api/swagger-ui/tree/v5.0.0)   |
| 4.0.0              | 2021-11-03   | 2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3                      | [tag v4.0.0](https://github.com/swagger-api/swagger-ui/tree/v4.0.0)   |
| 3.18.3             | 2018-08-03   | 2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3                      | [tag v3.18.3](https://github.com/swagger-api/swagger-ui/tree/v3.18.3) |
| 3.0.21             | 2017-07-26   | 2.0                                                  | [tag v3.0.21](https://github.com/swagger-api/swagger-ui/tree/v3.0.21) |
| 2.2.10             | 2017-01-04   | 1.1, 1.2, 2.0                                        | [tag v2.2.10](https://github.com/swagger-api/swagger-ui/tree/v2.2.10) |
| 2.1.5              | 2016-07-20   | 1.1, 1.2, 2.0                                        | [tag v2.1.5](https://github.com/swagger-api/swagger-ui/tree/v2.1.5)   |
| 2.0.24             | 2014-09-12   | 1.1, 1.2                                             | [tag v2.0.24](https://github.com/swagger-api/swagger-ui/tree/v2.0.24) |
| 1.0.13             | 2013-03-08   | 1.1, 1.2                                             | [tag v1.0.13](https://github.com/swagger-api/swagger-ui/tree/v1.0.13) |
| 1.0.1              | 2011-10-11   | 1.0, 1.1                                             | [tag v1.0.1](https://github.com/swagger-api/swagger-ui/tree/v1.0.1)   |

## Anonymized analytics

SwaggerUI uses [Scarf](https://scarf.sh/) to collect [anonymized installation analytics](https://github.com/scarf-sh/scarf-js?tab=readme-ov-file#as-a-user-of-a-package-using-scarf-js-what-information-does-scarf-js-send-about-me). These analytics help support the maintainers of this library and ONLY run during installation. To [opt out](https://github.com/scarf-sh/scarf-js?tab=readme-ov-file#as-a-user-of-a-package-using-scarf-js-how-can-i-opt-out-of-analytics), you can set the `scarfSettings.enabled` field to `false` in your project&#039;s `package.json`:

```
// package.json
{
  // ...
  &quot;scarfSettings&quot;: {
    &quot;enabled&quot;: false
  }
  // ...
}
```

Alternatively, you can set the environment variable `SCARF_ANALYTICS` to `false` as part of the environment that installs your npm packages, e.g., `SCARF_ANALYTICS=false npm install`.

## Documentation

#### Usage
- [Installation](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/installation.md)
- [Configuration](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/configuration.md)
- [CORS](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/cors.md)
- [OAuth2](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/oauth2.md)
- [Deep Linking](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/deep-linking.md)
- [Limitations](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/limitations.md)
- [Version detection](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/version-detection.md)

#### Customization
- [Overview](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/customization/overview.md)
- [Plugin API](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/customization/plugin-api.md)
- [Custom layout](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/customization/custom-layout.md)

#### Development
- [Setting up](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/development/setting-up.md)
- [Scripts](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/development/scripts.md)

#### Contributing
- [Contributing](https://github.com/swagger-api/.github/blob/HEAD/CONTRIBUTING.md)

##### Integration Tests

You will need JDK of version 7 or higher as instructed here
https://nightwatchjs.org/guide/getting-started/installation.html#install-selenium-server

Integration tests can be run locally with `npm run e2e` - be sure you aren&#039;t running a dev server when testing!

### Browser support
Swagger UI works in the latest versions of Chrome, Safari, Firefox, and Edge.

### Known Issues

To help with the migration, here are the currently known issues with 3.X. This list will update regularly, and will not include features that were not implemented in previous versions.

- Only part of the parameters previously supported are available.
- The JSON Form Editor is not implemented.
- Support for `collectionFormat` is partial.
- l10n (translations) is not implemented.
- Relative path support for external files is not implemented.

## Security contact

Please disclose any security-related issues or vulnerabilities by emailing [security@swagger.io](mailto:security@swagger.io), instead of using the public issue tracker.

## License

SwaggerUI is licensed under [Apache 2.0 license](https://github.com/swagger-api/swagger-ui/blob/master/LICENSE).
SwaggerUI comes with an explicit [NOTICE](https://github.com/swagger-api/swagger-ui/blob/master/NOTICE) file
containing additional legal notices and information.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WordPress/gutenberg]]></title>
            <link>https://github.com/WordPress/gutenberg</link>
            <guid>https://github.com/WordPress/gutenberg</guid>
            <pubDate>Sun, 24 Aug 2025 00:04:44 GMT</pubDate>
            <description><![CDATA[The Block Editor project for WordPress and beyond. Plugin is available from the official repository.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WordPress/gutenberg">WordPress/gutenberg</a></h1>
            <p>The Block Editor project for WordPress and beyond. Plugin is available from the official repository.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 11,367</p>
            <p>Forks: 4,523</p>
            <p>Stars today: 1 star today</p>
            <h2>README</h2><pre># Gutenberg

[![End-to-End Tests](https://github.com/WordPress/gutenberg/workflows/End-to-End%20Tests/badge.svg)](https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22End-to-End+Tests%22+branch%3Atrunk)
[![Static Analysis (Linting, License, Type checks...)](&lt;https://github.com/WordPress/gutenberg/workflows/Static%20Analysis%20(Linting,%20License,%20Type%20checks...)/badge.svg&gt;)](https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22Static+Analysis+%28Linting%2C+License%2C+Type+checks...%29%22+branch%3Atrunk)
[![Unit Tests](https://github.com/WordPress/gutenberg/workflows/Unit%20Tests/badge.svg)](https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22Unit+Tests%22+branch%3Atrunk)
[![Create Block](https://github.com/WordPress/gutenberg/workflows/Create%20Block/badge.svg)](https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22Create+Block%22+branch%3Atrunk)
[![React Native E2E Tests (iOS)](&lt;https://github.com/WordPress/gutenberg/workflows/React%20Native%20E2E%20Tests%20(iOS)/badge.svg&gt;)](https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22React+Native+E2E+Tests+%28iOS%29%22+branch%3Atrunk)
[![React Native E2E Tests (Android)](&lt;https://github.com/WordPress/gutenberg/workflows/React%20Native%20E2E%20Tests%20(Android)/badge.svg&gt;)](https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22React+Native+E2E+Tests+%28Android%29%22+branch%3Atrunk)

&lt;a href=&quot;https://wordpress.github.io/gutenberg/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/storybooks/brand/master/badge/badge-storybook.svg&quot; alt=&quot;Storybook Badge&quot; /&gt;&lt;/a&gt;

[![lerna](https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg)](https://lerna.js.org)

![Screenshot of the Gutenberg Editor, editing a post in WordPress](https://user-images.githubusercontent.com/1204802/100067796-fc3e8700-2e36-11eb-993b-6b80b4310b87.png)

Welcome to the development hub for the WordPress Gutenberg project!

&quot;Gutenberg&quot; is a codename for a whole new paradigm in WordPress site building and publishing, that aims to revolutionize the entire publishing experience as much as Gutenberg did the printed word. Right now, the project is in the second phase of a four-phase process that will touch every piece of WordPress -- Editing, Customization, **Collaboration** (which includes [Real-time collaboration](https://make.wordpress.org/core/2023/07/03/real-time-collaboration/), [Asynchronous collaboration](https://make.wordpress.org/core/2023/07/04/workflows/), [Publishing flows](https://make.wordpress.org/core/2023/07/04/workflows/), [Post revisions interface](https://make.wordpress.org/core/2023/07/05/revisions/), [Admin design](https://make.wordpress.org/core/2023/07/12/admin-design/), [Library](https://make.wordpress.org/core/2023/07/10/block-library/)), and Multilingual -- and is focused on a new editing experience, the block editor.

The block editor introduces a modular approach to pages and posts: each piece of content in the editor, from a paragraph to an image gallery to a headline, is its own block. And just like physical blocks, WordPress blocks can be added, arranged, and rearranged, allowing WordPress users to create media-rich pages in a visually intuitive way -- and without work-arounds like shortcodes or custom HTML.

The block editor first became available in December 2018, and we&#039;re still hard at work refining the experience, creating more and better blocks, and laying the groundwork for the next three phases of work. The Gutenberg plugin gives you the latest version of the block editor, so you can join us in testing bleeding-edge features, start playing with blocks, and maybe get inspired to build your own.

Check out the [Keeping up with Gutenberg Index](https://make.wordpress.org/core/handbook/references/keeping-up-with-gutenberg-index/)

## Getting Started

Get hands-on: check out the [block editor live demo](https://wordpress.org/gutenberg/) to play with a test instance of the editor.

### Using Gutenberg

-   **Download:** To use the latest release of the Gutenberg plugin on your WordPress site: install from the plugins page in wp-admin, or [download from the WordPress.org plugins repository](https://wordpress.org/plugins/gutenberg/).

-   **User Documentation:** See the [WordPress Editor documentation](https://wordpress.org/documentation/article/wordpress-block-editor/) for detailed docs on using the editor as an author creating posts and pages.

-   **User Support:** If you have run into an issue, you should check the [Support Forums first](https://wordpress.org/support/forums/). The forums are a great place to get help. If you have a bug to report, please [submit it to the Gutenberg repository](https://github.com/wordpress/gutenberg/issues). Please search prior to creating a new bug to confirm it&#039;s not a duplicate.

### Developing for Gutenberg

Extending and customizing is at the heart of the WordPress platform, this is no different for the Gutenberg project. The editor and future products can be extended by third-party developers using plugins.

Review the [Quick Start Guide](https://developer.wordpress.org/block-editor/getting-started/quick-start-guide/) for the fastest way to get started extending the block editor. See the [Block Editor Handbook](https://developer.wordpress.org/block-editor/) for extensive tutorials, documentation, and API references. Also, check the [WordPress Developer Blog](https://developer.wordpress.org/blog/) for great articles about block development, among other topics.

### Contribute to Gutenberg

Gutenberg is an open-source project and welcomes all contributors from code to design, and from documentation to triage. The project is built by many contributors and volunteers, and we&#039;d love your help building it.

See the [Contributors Handbook](https://developer.wordpress.org/block-editor/contributors/) for all the details on how you can contribute.

To get up and running quickly with **code contribution** see [Getting Started With Code Contribution](/docs/contributors/code/getting-started-with-code-contribution.md). Also check out the other resources available on the [Code Contributions](/docs/contributors/code/README.md) page.

In whichever way you wish to contribute please be sure to read the [Contributing Guidelines](https://github.com/WordPress/gutenberg/blob/HEAD/CONTRIBUTING.md) first.

As with all WordPress projects, we want to ensure a welcoming environment for everyone. With that in mind, all contributors are expected to follow our [Code of Conduct](https://make.wordpress.org/handbook/community-code-of-conduct/).

## Get Involved

You can join us in the `#core-editor` channel in Slack, see the [WordPress Slack page](https://make.wordpress.org/chat/) for signup information; it is free to join.

## License

WordPress is free software, and is released under the terms of the GNU General Public License version 2 or (at your option) any later version. See [LICENSE.md](LICENSE.md) for complete license.

&lt;br/&gt;&lt;br/&gt;&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://s.w.org/style/images/codeispoetry.png?1&quot; alt=&quot;Code is Poetry.&quot; /&gt;&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WebKit/WebKit]]></title>
            <link>https://github.com/WebKit/WebKit</link>
            <guid>https://github.com/WebKit/WebKit</guid>
            <pubDate>Sun, 24 Aug 2025 00:04:43 GMT</pubDate>
            <description><![CDATA[Home of the WebKit project, the browser engine used by Safari, Mail, App Store and many other applications on macOS, iOS and Linux.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WebKit/WebKit">WebKit/WebKit</a></h1>
            <p>Home of the WebKit project, the browser engine used by Safari, Mail, App Store and many other applications on macOS, iOS and Linux.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,917</p>
            <p>Forks: 1,643</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>