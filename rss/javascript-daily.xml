<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Tue, 03 Jun 2025 00:04:58 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[meshery/meshery]]></title>
            <link>https://github.com/meshery/meshery</link>
            <guid>https://github.com/meshery/meshery</guid>
            <pubDate>Tue, 03 Jun 2025 00:04:58 GMT</pubDate>
            <description><![CDATA[Meshery, the cloud native manager]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/meshery/meshery">meshery/meshery</a></h1>
            <p>Meshery, the cloud native manager</p>
            <p>Language: JavaScript</p>
            <p>Stars: 7,164</p>
            <p>Forks: 2,327</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>
&lt;p style=&quot;text-align:center;&quot; align=&quot;center&quot;&gt;&lt;a href=&quot;https://meshery.io&quot;&gt;&lt;picture&gt;
 &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-light-text-side.svg&quot;&gt;
 &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg&quot;&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg&quot;
alt=&quot;Meshery Logo&quot; width=&quot;70%&quot; /&gt;&lt;/picture&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://hub.docker.com/r/meshery/meshery&quot; alt=&quot;Docker pulls&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/docker/pulls/meshery/meshery.svg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/issues?q=is%3Aopen%20is%3Aissue%20archived%3Afalse%20(org%3Alayer5io%20OR%20org%3Ameshery%20OR%20org%3Alayer5labs%20OR%20org%3Aservice-mesh-performance%20OR%20org%3Aservice-mesh-patterns%20OR%20org%3Ameshery-extensions)%20label%3A%22help%20wanted%22%20&quot; alt=&quot;GitHub issues by-label&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/issues/layer5io/meshery/help%20wanted.svg?color=informational&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/meshery/meshery/blob/master/LICENSE&quot; alt=&quot;LICENSE&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/license/meshery/meshery?color=brightgreen&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://artifacthub.io/packages/helm/meshery/meshery&quot; alt=&quot;Artifact Hub Meshery&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/endpoint?color=brightgreen&amp;label=Helm%20Chart&amp;style=plastic&amp;url=https%3A%2F%2Fartifacthub.io%2Fbadge%2Frepository%2Fartifact-hub&quot; /&gt;&lt;/a&gt;  
&lt;a href=&quot;https://goreportcard.com/report/github.com/meshery/meshery&quot; alt=&quot;Go Report Card&quot;&gt;
  &lt;img src=&quot;https://goreportcard.com/badge/github.com/meshery/meshery&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/meshery/meshery/actions&quot; alt=&quot;Build Status&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/meshery/meshery/release-drafter.yml&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://bestpractices.coreinfrastructure.org/projects/3564&quot; alt=&quot;CLI Best Practices&quot;&gt;
  &lt;img src=&quot;https://bestpractices.coreinfrastructure.org/projects/3564/badge&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://meshery.io/community#discussion-forums&quot; alt=&quot;Discuss Users&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/discourse/users?label=discuss&amp;logo=discourse&amp;server=https%3A%2F%2Fdiscuss.layer5.io&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://slack.meshery.io&quot; alt=&quot;Join Slack&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/badge/Slack-@layer5.svg?logo=slack&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/intent/follow?screen_name=mesheryio&quot; alt=&quot;Twitter Follow&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/twitter/follow/mesheryio.svg?label=Follow+Meshery&amp;style=social&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/meshery/meshery/releases&quot; alt=&quot;Meshery Downloads&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/downloads/meshery/meshery/total&quot; /&gt;&lt;/a&gt;  
&lt;a href=&quot;https://gurubase.io/g/meshery&quot; alt=&quot;Meshery Guru&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/badge/Gurubase-Ask%20Meshery%20Guru-006BFF&quot; /&gt;&lt;/a&gt;
&lt;!-- &lt;a href=&quot;https://app.fossa.com/projects/git%2Bgithub.com%2Fmeshery%2Fmeshery?ref=badge_shield&quot; alt=&quot;License Scan Report&quot;&gt;
  &lt;img src=&quot;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fmeshery%2Fmeshery.svg?type=shield&quot;/&gt;&lt;/a&gt;  
  --&gt;
&lt;/p&gt;

&lt;h5&gt;&lt;p align=&quot;center&quot;&gt;&lt;i&gt;If you like Meshery, please &lt;a href=&quot;https://github.com/meshery/meshery/stargazers&quot;&gt;★&lt;/a&gt; this repository to show your support! 🤩&lt;/i&gt;&lt;/p&gt;&lt;/h5&gt;
&lt;p align=&quot;center&quot; &gt;
MESHERY IS A CLOUD NATIVE COMPUTING FOUNDATION PROJECT
&lt;/p&gt;

&lt;div align=&quot;center&quot; width=&quot;100%&quot;&gt;
&lt;img src=&quot;.github/assets/images/readme/cncf-white.svg#gh-dark-mode-only&quot; width=&quot;30%&quot; align=&quot;center&quot; /&gt;
&lt;img src=&quot;.github/assets/images/readme/cncf-black.svg#gh-light-mode-only&quot; width=&quot;30%&quot; align=&quot;center&quot; /&gt;
&lt;/div&gt;
&lt;br /&gt;
&lt;p align=&quot;center&quot;&gt;
A self-service engineering platform, &lt;a href=&quot;https://meshery.io&quot;&gt;Meshery&lt;/a&gt;, is the open source, cloud native manager that enables the design and management of all Kubernetes-based infrastructure and applications (multi-cloud). Among other features,  As an extensible platform, Meshery offers visual and collaborative GitOps, freeing you from the chains of YAML while managing Kubernetes multi-cluster deployments.
&lt;/p&gt;
&lt;br /&gt;

&lt;div align=&quot;center&quot; width=&quot;100%&quot;&gt;
 &lt;a href=&quot;https://youtu.be/Do7htKrRzDA&quot;&gt;&lt;img src=&quot;.github/assets/images/readme/thumbnail.png&quot; width=&quot;800px&quot; /&gt;&lt;/a&gt;
 &lt;p&gt;&lt;i&gt;Example extension. See other &lt;a href=&quot;https://meshery.io/extensions&quot;&gt;Meshery Extensions&lt;/a&gt;.&lt;/i&gt;&lt;/p&gt;
 &lt;br /&gt;Try Meshery in your browser using the &lt;a href=&quot;https://play.meshery.io&quot;&gt;Cloud Native Playground&lt;/a&gt; (&lt;a href=&quot;https://www.youtube.com/watch?v=034nVaQUyME&amp;list=PL3A-A6hPO2IO_yzN83wSJJUNQActzCJvO&amp;index=9&quot;&gt;teaser video&lt;/a&gt;)
&lt;/div&gt;

&lt;br /&gt;
&lt;!--
- [Functionality](#functionality)
  - [Meshery Architecture](#meshery-architecture)
  - [Join the Meshery community!](#join-the-meshery-community)
  - [Contributing](#contributing)
    - [Stargazers](#stargazers)
    - [License](#license)
--&gt;
&lt;!-- &lt;p style=&quot;clear:both;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;a href=&quot;https://meshery.io&quot;&gt;&lt;picture&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-light-text-side.svg&quot;&gt;
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg&quot;&gt;
  &lt;img alt=&quot;Meshery - the Cloud Native Manager&quot; src=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg&quot; align=&quot;left&quot; width=&quot;45%&quot;&gt;
  &lt;/picture&gt;&lt;/a&gt; 
&lt;a href=&quot;https://meshery.io&quot;&gt;
&lt;h3 style=&quot;margin:auto;&quot;&gt;&lt;br /&gt;&lt;br /&gt;
  &lt;a href=&quot;https://docs.google.com/presentation/d/14kxjwYSJ_FyE3K_6CDEd6oq2kqwn0OSE8RDJ4H-KlKU/edit?usp=sharing&quot;&gt;&lt;center&gt;&lt;i&gt;Project Overview Presentation&lt;/i&gt;&lt;/center&gt;&lt;/a&gt;
  &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
&lt;/h3&gt; --&gt;

&lt;p style=&quot;clear:both;&quot;&gt;&amp;nbsp;&lt;/p&gt;

# Functionality

## Infrastructure Lifecycle Management

Meshery manages the configuration, deployment, and operation of your Cloud services and Kubernetes clusters while supporting hundreds of different types of cloud native infrastructure integrations. Meshery supports [300+ integrations](https//meshery.io/integrations).

&lt;!--
&lt;a href=&quot;https://www.youtube.com/watch?v=034nVaQUyME&quot;&gt;&lt;img alt=&quot;Meshery cloud native management&quot; src=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshmap.gif&quot;  style=&quot;margin-left:10px; margin-bottom:10px;&quot; width=&quot;100%&quot; align=&quot;center&quot; /&gt;&lt;/a&gt;
&lt;br /&gt;&lt;br /&gt;--&gt;
&lt;/p&gt;

&lt;a href=&quot;.github/assets/images/readme/cloud-native-integrations.png&quot;&gt;&lt;img alt=&quot;Meshery Integrations&quot; src=&quot;.github/assets/images/readme/cloud-native-integrations.png&quot;  style=&quot;margin-right:10px;margin-bottom:10px;&quot; width=&quot;100%&quot; align=&quot;center&quot;/&gt;&lt;/a&gt;

Find infrastructure configuration patterns in Meshery&#039;s &lt;a href=&quot;https://meshery.io/catalog&quot;&gt;catalog of curated design templates&lt;/a&gt; filled with configuration best practices.

## Multiple Kubernetes Clusters and Multiple Clouds

&lt;img src =&quot;https://meshery.io/assets/images/screens/multi-cluster-management.gif&quot; width=&quot;50%&quot; alt=&quot;Multi-cluster Kubernetes Manager&quot; loading=&quot;lazy&quot; align=&quot;center&quot; /&gt;&lt;br /&gt;

Meshery provides a single pane of glass to manage multiple Kubernetes clusters across any infrastructure, including various cloud providers. Meshery enables consistent configuration, operation, and observability across your entire Kubernetes landscape.

&lt;details&gt;&lt;summary&gt;&lt;h4&gt;Dry-run your deployments&lt;/h4&gt;&lt;/summary&gt;
Meshery leverages Kubernetes&#039; built-in dry-run capabilities to allow you to simulate deployments without actually applying the changes to your cluster. This enables you to:

- Validate configurations: Ensure your deployment specifications (e.g., YAML manifests, Helm charts, Meshery Designs) are syntactically correct and will be accepted by the Kubernetes API server.   
- Identify potential issues: Detect errors in your configurations, such as invalid resource definitions, missing fields, or API version mismatches, before they impact your live environment.
- Preview changes: Understand the objects that Kubernetes would create or modify during a real deployment.
- Integrate with CI/CD: Incorporate dry-run as a step in your continuous integration and continuous delivery pipelines to automate pre-deployment checks and prevent faulty deployments.

By providing this dry-run functionality, Meshery helps you increase the reliability and stability of your Kubernetes deployments by catching potential problems early in the development and deployment process.
&lt;!-- 
Assess your cloud native infrastructure configuration against deployment and operational best practices with Meshery&#039;s configuration validator. Manage your workloads with confidence. Check your Kubernetes configuration for anti-patterns and avoid common pitfalls. --&gt;

&lt;/details&gt;

### Visually and collaboratively manage your infrastructure

Using a GitOps-centric approach, visually and collaboratively design and manage your infrastructure and microservices. Meshery intelligently infers the manner in which each resource [interrelates](https://docs.meshery.io/concepts/logical/relationships) with each other. Meshery supports a broad variety of built-in relationships between components, which you can use to create your own custom relationships.

&lt;img src=&quot;.github/assets/images/readme/edge_mount_relationship_pod_persistent_volume.svg&quot; width=&quot;50%&quot; alt=&quot;Multi-cluster Kubernetes Manager&quot; align=&quot;center&quot; /&gt;

&lt;details&gt;&lt;summary&gt;&lt;img alt=&quot;OPA Logo&quot; src=&quot;.github/assets/images/readme/opa-logo.svg&quot; style=&quot;margin-right:10px;&quot; width=&quot;25px&quot; align=&quot;left&quot; /&gt;&lt;h4&gt;Context-Aware Policies For Applications&lt;/h4&gt;&lt;/summary&gt;
&lt;img alt=&quot;Meshery and Open Policy Agent Integration&quot; src=&quot;.github/assets/images/readme/meshery-policies-2.png&quot; style=&quot;margin:auto;text-align:center&quot; width=&quot;50%&quot; /&gt;
&lt;p&gt;Leverage built-in relationships to enforce configuration best practices consistently from code to Kubernetes. Customize Configure your infrastructure with confidence without needing to know or write Open Policy Agent&#039;s Rego query language.&lt;/p&gt;
&lt;/details&gt;

## Workspaces: Your team&#039;s Google Drive for cloud native projects

&lt;img src=&quot;.github/assets/images/readme/workspace.gif&quot; width=&quot;50%&quot; alt=&quot;Multi-cluster Kubernetes Manager&quot; loading=&quot;lazy&quot; /&gt;

Workspaces let you organize your work and serve as the central point of collaboration for you and your teams and point of access control to Environments and their resources.

&lt;details&gt;&lt;summary&gt;&lt;h4&gt;Manage your connections with Environments&lt;/h4&gt;&lt;/summary&gt;

&lt;img src=&quot;.github/assets/images/readme/environments.gif&quot; width=&quot;50%&quot; alt=&quot;Multi-cluster Kubernetes Manager&quot; loading=&quot;lazy&quot; /&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.meshery.io/concepts/logical/environments&quot;&gt;Environments&lt;/a&gt;  make it easier for you to manage, share, and work with a collection of resources as a group, instead of dealing with all your Connections and Credentials on an individual basis.&lt;/p&gt;
&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;&lt;h4&gt;See changes to your infra before you merge&lt;/h4&gt;&lt;/summary&gt;

&lt;img src=&quot;.github/assets/images/readme/meshery-snapshot.png&quot; width=&quot;50%&quot; alt=&quot;Multi-cluster Kubernetes Manager&quot; loading=&quot;lazy&quot; align=&quot;center&quot; /&gt;

Get snapshots of your infrastructure directly in your PRs. Preview your deployment, view changes pull request-to-pull request and get infrastructure snapshots within your PRs by connecting Kanvas to your GitHub repositories.
&lt;/details&gt;

&lt;!-- &lt;h3&gt;Operate with configuration best practices&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;p&gt;Assess your configurations against deployment and operational best practices with Meshery&#039;s configuration validator.&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;

&lt;h3&gt;Control all of your infrastructure with mesheryctl&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;p&gt;Whether managing multiple Meshery deployments, importing designs, discoverying Kubernetes clusters, do so with ease using Meshery CLI in your terminal.&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt; --&gt;

## Platform Engineering with Meshery&#039;s Extension Points

Extend Meshery as your self-service engineering platform by taking advantage of its [vast set of extensibility features](https://docs.meshery.io/extensibility), including gRPC adapters, hot-loadable Reactjs packages and Golang plugins, subscriptions on NATS topics, consumable _and_ extendable API interfaces via REST and GraphQL.The great number of extension points in Meshery make it ideal as the foundation of your internal developer platform.

&lt;details&gt;&lt;summary&gt;&lt;h4&gt;Access the Cloud Native Patterns for Kubernetes&lt;/h4&gt;&lt;/summary&gt;

&lt;p&gt;Design and manage all of your cloud native infrastructure using the design configurator in Meshery or start from a template using the patterns from the &lt;a href=&quot;https://meshery.io/catalog&quot;&gt;catalog&lt;/a&gt;.
&lt;/details&gt;

Meshery offers robust capabilities for managing multiple tenants within a shared Kubernetes infrastructure. Meshery provides the tools and integrations necessary to create a secure, isolated, and manageable multi-tenant environments, allowing multiple teams or organizations with granular control over their role-based access controls.

Meshery&#039;s &quot;multi-player&quot; functionality refers to its collaborative features that enable multiple users to interact with and manage cloud native infrastructure simultaneously. This is primarily facilitated through Kanvas, a Meshery extension visual designer and management interface.

## Performance Management

Meshery offers load generation and performance characterization to help you assess and optimize the performance of your applications and infrastructure.

&lt;img src=&quot;.github/assets/images/readme/performance-metrics.gif&quot; alt=&quot;Multi-cluster Kubernetes Manager&quot; width=&quot;50%&quot; /&gt;

&lt;p&gt;Create and reuse performance profiles for consistent characterization of the configuration of your infrastructure in context of how it performs.&lt;/p&gt;

&lt;details&gt;
&lt;summary&gt;&lt;h4&gt; Manage the performance of your infrastructure and its workloads&lt;/h4&gt;&lt;/summary&gt;

&lt;img src = &quot;.github/assets/images/readme/service-mesh-performance-example.gif&quot;&gt;

Baseline and track your cloud native performance from release to release.

- Use performance profiles to track the historical performance of your workloads.
- Track your application performance from version to version.
- Understand behavioral differences between cloud native network functions.
- Compare performance across infrastructure deployments.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;h4&gt;Load Generation and Microservice Performance Characteristization&lt;/h4&gt;&lt;/summary&gt;

&lt;picture align=&quot;left&quot;&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/layer5io/layer5/master/src/assets/images/service-mesh-performance/stacked/smp-light-text.svg&quot;  width=&quot;18%&quot; align=&quot;left&quot; style=&quot;margin-left:10px;&quot; /&gt;
  &lt;img alt=&quot;Shows an illustrated light mode meshery logo in light color mode and a dark mode meshery logo dark color mode.&quot; src=&quot;https://raw.githubusercontent.com/layer5io/layer5/master/src/assets/images/service-mesh-performance/stacked/smp-light-text.svg&quot; width=&quot;18%&quot; align=&quot;left&quot; style=&quot;margin-left:10px;&quot; /&gt;
&lt;/picture&gt;

- **Multiple Load Generators:** Meshery supports various load generators, including Fortio, Wrk2, and Nighthawk, allowing users to choose the tool that best suits your needs.
- **Configurable Performance Profiles:** Meshery provides a highly configurable set of load profiles with tunable facets, enabling users to generate TCP, gRPC, and HTTP load. You can customize parameters such as duration, concurrent threads, concurrent generators, and load generator type. 
- **Statistical Analysis:** Meshery performs statistical analysis on the results of performance tests, presenting data in the form of histograms with latency buckets. Understand the distribution of response times and identify potential bottlenecks.
- **Comparison of Test Results:** Meshery enables you to compare the difference in request performance (latency and throughput) between independent performance tests. Save your load test configurations as Performance Profiles, making it easy to rerun tests with the same settings and track performance variations over time.
- **Kubernetes Cluster and Workload Metrics:** - Meshery connects to one or more Prometheus servers to gather both cluster and application metrics. Meshery also integrates with Grafana, allowing you to import your existing dashboards and visualize performance data.

&lt;p&gt;In an effort to produce infrastructure agnostic tooling, Meshery uses the &lt;a href=&quot;https://smp-spec.io&quot;&gt;Cloud Native Performance&lt;/a&gt; specification as a common format to capture and measure your infrastructure&#039;s performance against a universal cloud native performance index. Meshery participates in advancing cloud native infrastructure adoption through the standardization of APIs. Meshery enables you to measure the value provided by Docker, Kubernetes, or other cloud native infrastructure in the context of the overhead incurred.&lt;/p&gt;

&lt;!-- 

SCREENSHOT / GIF NEEDED HERE

--&gt;

&lt;/details&gt;

&lt;h2&gt;&lt;a name=&quot;running&quot;&gt;&lt;/a&gt;Get Started with Meshery&lt;/h2&gt;
&lt;p style=&quot;clear:both;&quot;&gt;&lt;/p&gt;
&lt;!-- &lt;img alt=&quot;Control Kubernetes and your workloads with mesheryctl&quot; src=&quot;.github/assets/images/readme/mesheryctl.png&quot;  style=&quot;margin-left:10px; margin-bottom:10px;&quot; width=&quot;50%&quot; align=&quot;right&quot; /&gt; --&gt;
&lt;h3&gt;Using `mesheryctl`&lt;/h3&gt;
&lt;p&gt;Meshery runs as a set of containers inside or outside of your Kubernetes clusters.&lt;/p&gt;
&lt;pre&gt;curl -L https://meshery.io/install | bash -&lt;/pre&gt;
&lt;p&gt;Use the &lt;a href=&quot;https://docs.meshery.io/installation/quick-start&quot;&gt;quick start&lt;/a&gt; guide.&lt;/p&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;See all supported platforms&lt;/strong&gt;&lt;/summary&gt;

See the [getting started](https://meshery.io/#getting-started) section to quickly deploy Meshery on any of these supported platforms:

| Platform                                                                                                                                                                                                                             | Supported?  |
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :---------: |
| &lt;img src=&quot;https://docs.meshery.io/assets/img/platforms/docker.svg&quot; width=&quot;20&quot; height=&quot;20&quot; vertical-align=&quot;middle&quot; /&gt; [Docker](https://docs.meshery.io/installation/docker)                                                           |      ✔️      |
| &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src=&quot;https://docs.meshery.io/assets/img/platforms/docker.svg&quot; width=&quot;20&quot; height=&quot;20&quot; vertical-align=&quot;middle&quot; /&gt; [Docker - Docker App](https://docs.meshery.io/installation/docker)                           |      ✔️      |
| &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src=&quot;https://docs.meshery.io/assets/img/platforms/docker.svg&quot; width=&quot;20&quot; height=&quot;20&quot; vertical-align=&quot;middle&quot; /&gt; [Docker - Docker Extension](https://docs.meshery.io/installation/docker/docker-extensiongit) |      ✔️      |
| &lt;img src=&quot;https://docs.meshery.io/assets/img/platforms/kubernetes.svg&quot; width=&quot;20&quot; height=&quot;20&quot; vertical-align=&quot;middle&quot; /&gt; [Kubernetes](https://docs.meshery.io/installation/kubernetes)                                               |      ✔️      |
| &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src=&quot;https://docs.meshery.io/assets/img/platforms/aks.svg&quot; width=&quot;20&quot; height=&quot;20&quot; vertical-align=&quot;middle&quot; /&gt; [Kubernetes - AKS](https://docs.meshery.io/installation/kubernetes/aks)                         |      ✔️      |
| &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src=&quot;https://docs.meshery.io/assets/img/platforms/docker.svg&quot; width=&quot;20&quot; height=&quot;20&quot; vertical-align=&quot;middle&quot; /&gt; [Kubernetes - Docker Desktop](https://docs.meshery.io/installation#mac-or-linux)             |      ✔️      |
| &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src=&quot;https://docs.meshery.io/assets/img/platforms/eks.png&quot; width=&quot;20&quot; height=&quot;20&quot; vertical-align=&quot;middle&quot; /&gt; [Kubernetes - EKS](https://docs.meshery.io/installation/kubernetes/eks)                         |      ✔️      |
| &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src=&quot;https://docs.meshery.io/assets/img/platforms/

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[MHSanaei/3x-ui]]></title>
            <link>https://github.com/MHSanaei/3x-ui</link>
            <guid>https://github.com/MHSanaei/3x-ui</guid>
            <pubDate>Tue, 03 Jun 2025 00:04:57 GMT</pubDate>
            <description><![CDATA[Xray panel supporting multi-protocol multi-user expire day & traffic & IP limit (Vmess & Vless & Trojan & ShadowSocks & Wireguard)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/MHSanaei/3x-ui">MHSanaei/3x-ui</a></h1>
            <p>Xray panel supporting multi-protocol multi-user expire day & traffic & IP limit (Vmess & Vless & Trojan & ShadowSocks & Wireguard)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 19,918</p>
            <p>Forks: 4,149</p>
            <p>Stars today: 32 stars today</p>
            <h2>README</h2><pre>[English](/README.md) | [فارسی](/README.fa_IR.md) | [العربية](/README.ar_EG.md) |  [中文](/README.zh_CN.md) | [Español](/README.es_ES.md) | [Русский](/README.ru_RU.md) 

&lt;p align=&quot;center&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./media/3x-ui-dark.png&quot;&gt;
    &lt;img alt=&quot;3x-ui&quot; src=&quot;./media/3x-ui-light.png&quot;&gt;
  &lt;/picture&gt;
&lt;/p&gt;

**An Advanced Web Panel • Built on Xray Core**

[![](https://img.shields.io/github/v/release/mhsanaei/3x-ui.svg)](https://github.com/MHSanaei/3x-ui/releases)
[![](https://img.shields.io/github/actions/workflow/status/mhsanaei/3x-ui/release.yml.svg)](#)
[![GO Version](https://img.shields.io/github/go-mod/go-version/mhsanaei/3x-ui.svg)](#)
[![Downloads](https://img.shields.io/github/downloads/mhsanaei/3x-ui/total.svg)](#)
[![License](https://img.shields.io/badge/license-GPL%20V3-blue.svg?longCache=true)](https://www.gnu.org/licenses/gpl-3.0.en.html)

&gt; **Disclaimer:** This project is only for personal learning and communication, please do not use it for illegal purposes, please do not use it in a production environment

**If this project is helpful to you, you may wish to give it a**:star2:

&lt;p align=&quot;left&quot;&gt;
  &lt;a href=&quot;https://buymeacoffee.com/mhsanaei&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./media/buymeacoffe.png&quot; alt=&quot;Image&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

- USDT (TRC20): `TXncxkvhkDWGts487Pjqq1qT9JmwRUz8CC`
- MATIC (polygon): `0x41C9548675D044c6Bfb425786C765bc37427256A`
- LTC (Litecoin): `ltc1q2ach7x6d2zq0n4l0t4zl7d7xe2s6fs7a3vspwv`

## Install &amp; Upgrade

```
bash &lt;(curl -Ls https://raw.githubusercontent.com/MHSanaei/3x-ui/refs/tags/v2.6.0/install.sh)
```

## Install legacy Version (we don&#039;t recommend)

To install your desired version, use following installation command. e.g., ver `v1.7.9`:

```
VERSION=v1.7.9 &amp;&amp; bash &lt;(curl -Ls &quot;https://raw.githubusercontent.com/mhsanaei/3x-ui/$VERSION/install.sh&quot;) $VERSION
```

## SSL Certificate

&lt;details&gt;
  &lt;summary&gt;Click for SSL Certificate details&lt;/summary&gt;

### ACME

To manage SSL certificates using ACME:

1. Ensure your domain is correctly resolved to the server.
2. Run the `x-ui` command in the terminal, then choose `SSL Certificate Management`.
3. You will be presented with the following options:

   - **Get SSL:** Obtain SSL certificates.
   - **Revoke:** Revoke existing SSL certificates.
   - **Force Renew:** Force renewal of SSL certificates.
   - **Show Existing Domains:** Display all domain certificates available on the server.  
   - **Set Certificate Paths for the Panel:** Specify the certificate for your domain to be used by the panel. 

### Certbot

To install and use Certbot:

```sh
apt-get install certbot -y
certbot certonly --standalone --agree-tos --register-unsafely-without-email -d yourdomain.com
certbot renew --dry-run
```

### Cloudflare

The management script includes a built-in SSL certificate application for Cloudflare. To use this script to apply for a certificate, you need the following:

- Cloudflare registered email
- Cloudflare Global API Key
- The domain name must be resolved to the current server through Cloudflare

**How to get the Cloudflare Global API Key:**

1. Run the `x-ui` command in the terminal, then choose `Cloudflare SSL Certificate`.
2. Visit the link: [Cloudflare API Tokens](https://dash.cloudflare.com/profile/api-tokens).
3. Click on &quot;View Global API Key&quot; (see the screenshot below):
   ![](media/APIKey1.PNG)
4. You may need to re-authenticate your account. After that, the API Key will be shown (see the screenshot below):
   ![](media/APIKey2.png)

When using, just enter your `domain name`, `email`, and `API KEY`. The diagram is as follows:
   ![](media/DetailEnter.png)


&lt;/details&gt;

## Manual Install &amp; Upgrade

&lt;details&gt;
  &lt;summary&gt;Click for manual install details&lt;/summary&gt;

#### Usage

1. To download the latest version of the compressed package directly to your server, run the following command:

```sh
ARCH=$(uname -m)
case &quot;${ARCH}&quot; in
  x86_64 | x64 | amd64) XUI_ARCH=&quot;amd64&quot; ;;
  i*86 | x86) XUI_ARCH=&quot;386&quot; ;;
  armv8* | armv8 | arm64 | aarch64) XUI_ARCH=&quot;arm64&quot; ;;
  armv7* | armv7) XUI_ARCH=&quot;armv7&quot; ;;
  armv6* | armv6) XUI_ARCH=&quot;armv6&quot; ;;
  armv5* | armv5) XUI_ARCH=&quot;armv5&quot; ;;
  s390x) echo &#039;s390x&#039; ;;
  *) XUI_ARCH=&quot;amd64&quot; ;;
esac


wget https://github.com/MHSanaei/3x-ui/releases/latest/download/x-ui-linux-${XUI_ARCH}.tar.gz
```

2. Once the compressed package is downloaded, execute the following commands to install or upgrade x-ui:

```sh
ARCH=$(uname -m)
case &quot;${ARCH}&quot; in
  x86_64 | x64 | amd64) XUI_ARCH=&quot;amd64&quot; ;;
  i*86 | x86) XUI_ARCH=&quot;386&quot; ;;
  armv8* | armv8 | arm64 | aarch64) XUI_ARCH=&quot;arm64&quot; ;;
  armv7* | armv7) XUI_ARCH=&quot;armv7&quot; ;;
  armv6* | armv6) XUI_ARCH=&quot;armv6&quot; ;;
  armv5* | armv5) XUI_ARCH=&quot;armv5&quot; ;;
  s390x) echo &#039;s390x&#039; ;;
  *) XUI_ARCH=&quot;amd64&quot; ;;
esac

cd /root/
rm -rf x-ui/ /usr/local/x-ui/ /usr/bin/x-ui
tar zxvf x-ui-linux-${XUI_ARCH}.tar.gz
chmod +x x-ui/x-ui x-ui/bin/xray-linux-* x-ui/x-ui.sh
cp x-ui/x-ui.sh /usr/bin/x-ui
cp -f x-ui/x-ui.service /etc/systemd/system/
mv x-ui/ /usr/local/
systemctl daemon-reload
systemctl enable x-ui
systemctl restart x-ui
```

&lt;/details&gt;

## Install with Docker

&lt;details&gt;
  &lt;summary&gt;Click for Docker details&lt;/summary&gt;

#### Usage

1. **Install Docker:**

   ```sh
   bash &lt;(curl -sSL https://get.docker.com)
   ```

2. **Clone the Project Repository:**

   ```sh
   git clone https://github.com/MHSanaei/3x-ui.git
   cd 3x-ui
   ```

3. **Start the Service:**

   ```sh
   docker compose up -d
   ```

  Add ```--pull always``` flag to make docker automatically recreate container if a newer image is pulled. See https://docs.docker.com/reference/cli/docker/container/run/#pull for more info.

   **OR**

   ```sh
   docker run -itd \
      -e XRAY_VMESS_AEAD_FORCED=false \
      -v $PWD/db/:/etc/x-ui/ \
      -v $PWD/cert/:/root/cert/ \
      --network=host \
      --restart=unless-stopped \
      --name 3x-ui \
      ghcr.io/mhsanaei/3x-ui:latest
   ```

4. **Update to the Latest Version:**

   ```sh
   cd 3x-ui
   docker compose down
   docker compose pull 3x-ui
   docker compose up -d
   ```

5. **Remove 3x-ui from Docker:**

   ```sh
   docker stop 3x-ui
   docker rm 3x-ui
   cd --
   rm -r 3x-ui
   ```

&lt;/details&gt;

## Nginx Settings
&lt;details&gt;
  &lt;summary&gt;Click for Reverse Proxy Configuration&lt;/summary&gt;

#### Nginx Reverse Proxy
```nginx
location / {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Range $http_range;
    proxy_set_header If-Range $http_if_range; 
    proxy_redirect off;
    proxy_pass http://127.0.0.1:2053;
}
```

#### Nginx sub-path
- Ensure that the &quot;URI Path&quot; in the `/sub` panel settings is the same.
- The `url` in the panel settings needs to end with `/`.   

```nginx
location /sub {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Range $http_range;
    proxy_set_header If-Range $http_if_range; 
    proxy_redirect off;
    proxy_pass http://127.0.0.1:2053;
}
```
&lt;/details&gt;

## Recommended OS

- Ubuntu 22.04+
- Debian 12+
- CentOS 8+
- OpenEuler 22.03+
- Fedora 36+
- Arch Linux
- Parch Linux
- Manjaro
- Armbian
- AlmaLinux 9.5+
- Rocky Linux 9.5+
- Oracle Linux 8+
- OpenSUSE Tubleweed
- Amazon Linux 2023
- Virtuozzo Linux 8+
- Windows x64

## Supported Architectures and Devices

&lt;details&gt;
  &lt;summary&gt;Click for Supported Architectures and devices details&lt;/summary&gt;

Our platform offers compatibility with a diverse range of architectures and devices, ensuring flexibility across various computing environments. The following are key architectures that we support:

- **amd64**: This prevalent architecture is the standard for personal computers and servers, accommodating most modern operating systems seamlessly.

- **x86 / i386**: Widely adopted in desktop and laptop computers, this architecture enjoys broad support from numerous operating systems and applications, including but not limited to Windows, macOS, and Linux systems.

- **armv8 / arm64 / aarch64**: Tailored for contemporary mobile and embedded devices, such as smartphones and tablets, this architecture is exemplified by devices like Raspberry Pi 4, Raspberry Pi 3, Raspberry Pi Zero 2/Zero 2 W, Orange Pi 3 LTS, and more.

- **armv7 / arm / arm32**: Serving as the architecture for older mobile and embedded devices, it remains widely utilized in devices like Orange Pi Zero LTS, Orange Pi PC Plus, Raspberry Pi 2, among others.

- **armv6 / arm / arm32**: Geared towards very old embedded devices, this architecture, while less prevalent, is still in use. Devices such as Raspberry Pi 1, Raspberry Pi Zero/Zero W, rely on this architecture.

- **armv5 / arm / arm32**: An older architecture primarily associated with early embedded systems, it is less common today but may still be found in legacy devices like early Raspberry Pi versions and some older smartphones.

- **s390x**: This architecture is commonly used in IBM mainframe computers and offers high performance and reliability for enterprise workloads.
&lt;/details&gt;

## Languages

- Arabic
- English
- Persian
- Traditional Chinese
- Simplified Chinese
- Japanese
- Russian
- Vietnamese
- Spanish
- Indonesian
- Ukrainian
- Turkish
- Português (Brazil)


## Features

- System Status Monitoring
- Search within all inbounds and clients
- Dark/Light theme
- Supports multi-user and multi-protocol
- Supports protocols, including VMESS, VLESS, Trojan, Shadowsocks, Dokodemo-door, Socks, HTTP, wireguard
- Supports XTLS native Protocols, including RPRX-Direct, Vision, REALITY
- Traffic statistics, traffic limit, expiration time limit
- Customizable Xray configuration templates
- Supports HTTPS access panel (self-provided domain name + SSL certificate)
- Supports One-Click SSL certificate application and automatic renewal
- For more advanced configuration items, please refer to the panel
- Fixes API routes (user setting will be created with API)
- Supports changing configs by different items provided in the panel.
- Supports export/import database from the panel


## Default Panel Settings

&lt;details&gt;
  &lt;summary&gt;Click for default settings details&lt;/summary&gt;

### Username, Password, Port, and Web Base Path

If you choose not to modify these settings, they will be generated randomly (this does not apply to Docker).

**Default Settings for Docker:**
- **Username:** admin
- **Password:** admin
- **Port:** 2053

### Database Management:

  You can conveniently perform database Backups and Restores directly from the panel.

- **Database Path:**
  - `/etc/x-ui/x-ui.db`


### Web Base Path

1. **Reset Web Base Path:**
   - Open your terminal.
   - Run the `x-ui` command.
   - Select the option to `Reset Web Base Path`.

2. **Generate or Customize Path:**
   - The path will be randomly generated, or you can enter a custom path.

3. **View Current Settings:**
   - To view your current settings, use the `x-ui settings` command in the terminal or `View Current Settings` in `x-ui`

### Security Recommendation:
- For enhanced security, use a long, random word in your URL structure.

**Examples:**
- `http://ip:port/*webbasepath*/panel`
- `http://domain:port/*webbasepath*/panel`

&lt;/details&gt;

## WARP Configuration

&lt;details&gt;
  &lt;summary&gt;Click for WARP configuration details&lt;/summary&gt;

#### Usage

**For versions `v2.1.0` and later:**

WARP is built-in, and no additional installation is required. Simply turn on the necessary configuration in the panel.

&lt;/details&gt;

## IP Limit

&lt;details&gt;
  &lt;summary&gt;Click for IP limit details&lt;/summary&gt;

#### Usage

**Note:** IP Limit won&#039;t work correctly when using IP Tunnel.

- **For versions up to `v1.6.1`:**
  - The IP limit is built-in to the panel

**For versions `v1.7.0` and newer:**

To enable the IP Limit functionality, you need to install `fail2ban` and its required files by following these steps:

1. Run the `x-ui` command in the terminal, then choose `IP Limit Management`.
2. You will see the following options:

   - **Change Ban Duration:** Adjust the duration of bans.
   - **Unban Everyone:** Lift all current bans.
   - **Check Logs:** Review the logs.
   - **Fail2ban Status:** Check the status of `fail2ban`.
   - **Restart Fail2ban:** Restart the `fail2ban` service.
   - **Uninstall Fail2ban:** Uninstall Fail2ban with configuration.

3. Add a path for the access log on the panel by setting `Xray Configs/log/Access log` to `./access.log` then save and restart xray.

- **For versions before `v2.1.3`:**
  - You need to set the access log path manually in your Xray configuration:

    ```sh
    &quot;log&quot;: {
      &quot;access&quot;: &quot;./access.log&quot;,
      &quot;dnsLog&quot;: false,
      &quot;loglevel&quot;: &quot;warning&quot;
    },
    ```

- **For versions `v2.1.3` and newer:**
  - There is an option for configuring `access.log` directly from the panel.

&lt;/details&gt;

## Telegram Bot

&lt;details&gt;
  &lt;summary&gt;Click for Telegram bot details&lt;/summary&gt;

#### Usage

The web panel supports daily traffic, panel login, database backup, system status, client info, and other notification and functions through the Telegram Bot. To use the bot, you need to set the bot-related parameters in the panel, including:

- Telegram Token
- Admin Chat ID(s)
- Notification Time (in cron syntax)
- Expiration Date Notification
- Traffic Cap Notification
- Database Backup
- CPU Load Notification


**Reference syntax:**

- `30 \* \* \* \* \*` - Notify at the 30s of each point
- `0 \*/10 \* \* \* \*` - Notify at the first second of each 10 minutes
- `@hourly` - Hourly notification
- `@daily` - Daily notification (00:00 in the morning)
- `@weekly` - weekly notification
- `@every 8h` - Notify every 8 hours

### Telegram Bot Features

- Report periodic
- Login notification
- CPU threshold notification
- Threshold for Expiration time and Traffic to report in advance
- Support client report menu if client&#039;s telegram username added to the user&#039;s configurations
- Support telegram traffic report searched with UUID (VMESS/VLESS) or Password (TROJAN) - anonymously
- Menu-based bot
- Search client by email (only admin)
- Check all inbounds
- Check server status
- Check depleted users
- Receive backup by request and in periodic reports
- Multi-language bot

### Setting up Telegram bot

- Start [Botfather](https://t.me/BotFather) in your Telegram account:
    ![Botfather](./media/botfather.png)

- Create a new Bot using /newbot command: It will ask you 2 questions, A name and a username for your bot. Note that the username has to end with the word &quot;bot&quot;.
    ![Create new bot](./media/newbot.png)

- Start the bot you&#039;ve just created. You can find the link to your bot here.
    ![token](./media/token.png)

- Enter your panel and config Telegram bot settings like below:
![Panel Config](./media/panel-bot-config.png)

Enter your bot token in input field number 3.
Enter the user ID in input field number 4. The Telegram accounts with this id will be the bot admin. (You can enter more than one, Just separate them with ,)

- How to get Telegram user ID? Use this [bot](https://t.me/useridinfobot), Start the bot and it will give you the Telegram user ID.
![User ID](./media/user-id.png)

&lt;/details&gt;

## API Routes

&lt;details&gt;
  &lt;summary&gt;Click for API routes details&lt;/summary&gt;

#### Usage

- [API Documentation](https://www.postman.com/hsanaei/3x-ui/collection/q1l5l0u/3x-ui)
- `/login` with `POST` user data: `{username: &#039;&#039;, password: &#039;&#039;}` for login
- `/panel/api/inbounds` base for following actions:

| Method | Path                               | Action                                      |
| :----: | ---------------------------------- | ------------------------------------------- |
| `GET`  | `&quot;/list&quot;`                          | Get all inbounds                            |
| `GET`  | `&quot;/get/:id&quot;`                       | Get inbound with inbound.id                 |
| `GET`  | `&quot;/getClientTraffics/:email&quot;`      | Get Client Traffics with email              |
| `GET`  | `&quot;/getClientTrafficsById/:id&quot;`     | Get client&#039;s traffic By ID |
| `GET`  | `&quot;/createbackup&quot;`                  | Telegram bot sends backup to admins         |
| `POST` | `&quot;/add&quot;`                           | Add inbound                                 |
| `POST` | `&quot;/del/:id&quot;`                       | Delete Inbound                              |
| `POST` | `&quot;/update/:id&quot;`                    | Update Inbound                              |
| `POST` | `&quot;/clientIps/:email&quot;`              | Client Ip address                           |
| `POST` | `&quot;/clearClientIps/:email&quot;`         | Clear Client Ip address                     |
| `POST` | `&quot;/addClient&quot;`                     | Add Client to inbound                       |
| `POST` | `&quot;/:id/delClient/:clientId&quot;`       | Delete Client by clientId\*                 |
| `POST` | `&quot;/updateClient/:clientId&quot;`        | Update Client by clientId\*                 |
| `POST` | `&quot;/:id/resetClientTraffic/:email&quot;` | Reset Client&#039;s Traffic                      |
| `POST` | `&quot;/resetAllTraffics&quot;`              | Reset traffics of all inbounds              |
| `POST` | `&quot;/resetAllClientTraffics/:id&quot;`    | Reset traffics of all clients in an inbound |
| `POST` | `&quot;/delDepletedClients/:id&quot;`        | Delete inbound depleted clients (-1: all)   |
| `POST` | `&quot;/onlines&quot;`                       | Get Online users ( list of emails )         |

\*- The field `clientId` should be filled by:

- `client.id` for VMESS and VLESS
- `client.password` for TROJAN
- `client.email` for Shadowsocks

- [&lt;img src=&quot;https://run.pstmn.io/button.svg&quot; alt=&quot;Run In Postman&quot; style=&quot;width: 128px; height: 32px;&quot;&gt;](https://app.getpostman.com/run-collection/5146551-dda3cab3-0e33-485f-96f9-d4262f437ac5?action=collection%2Ffork&amp;source=rip_markdown&amp;collection-url=entityId%3D5146551-dda3cab3-0e33-485f-96f9-d4262f437ac5%26entityType%3Dcollection%26workspaceId%3Dd64f609f-485a-4951-9b8f-876b3f917124)
&lt;/details&gt;

## Environment Variables

&lt;details&gt;
  &lt;summary&gt;Click for environment variables details&lt;/summary&gt;

#### Usage

| Variable       |                      Type                      | Default       |
| -------------- | :--------------------------------------------: | :------------ |
| XUI_LOG_LEVEL  | `&quot;debug&quot;` \| `&quot;info&quot;` \| `&quot;warn&quot;` \| `&quot;error&quot;` | `&quot;info&quot;`      |
| XUI_DEBUG      |                   `boolean`                    | `false`       |
| XUI_BIN_FOLDER |                    `string`                    | `&quot;bin&quot;`       |
| XUI_DB_FOLDER  |                    `string`                    | `&quot;/etc/x-ui&quot;` |
| XUI_LOG_FOLDER |                    `string`                    | `&quot;/var/log&quot;`  |

Example:

```sh
XUI_BIN_FOLDER=&quot;bin&quot; XUI_DB_FOLDER=&quot;/etc/x-ui&quot; go build main.go
```

&lt;/details&gt;

## Preview

&lt;picture&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./media/01-overview-dark.png&quot;&gt;
  &lt;img alt=&quot;3x-ui&quot; src=&quot;./media/01-overview-light.png&quot;&gt;
&lt;/picture&gt;
&lt;picture&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./media/02-inbounds-dark.png&quot;&gt;
  &lt;img alt=&quot;3x-ui&quot; src=&quot;./media/02-inbounds-light.png&quot;&gt;
&lt;/picture&gt;
&lt;picture&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./media/03-add-inbound-dark.png&quot;&gt;
  &lt;img alt=&quot;3x-ui&quot; src=&quot;./media/03-add-inbound-light.png&quot;&gt;
&lt;/picture&gt;
&lt;picture&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./media/04-add-client-dark.png&quot;&gt;
  &lt;img alt=&quot;3x-ui&quot; src=&quot;./media/04-add-client-light.png&quot;&gt;
&lt;/picture&gt;
&lt;picture&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./media/05-settings-dark.png&quot;&gt;
  &lt;img alt=&quot;3x-ui&quot; src=&quot;./media/05-settings-light.png&quot;&gt;
&lt;/picture&gt;
&lt;picture&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./media/06-configs-dark.png&quot;&gt;
  &lt;img alt=&quot;3x-ui&quot; src=&quot;./media/06-configs-light.png&quot;&gt;
&lt;/picture&gt;
&lt;picture&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./media/07-bot-dark.png&quot;&gt;
  &lt;img alt=&quot;3x-ui&quot; src=&quot;./media/07-bot-light.png&quot;&gt;
&lt;/picture&gt;

## A Special Thanks to

- [alireza0](

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[netbymatt/ws4kp]]></title>
            <link>https://github.com/netbymatt/ws4kp</link>
            <guid>https://github.com/netbymatt/ws4kp</guid>
            <pubDate>Tue, 03 Jun 2025 00:04:56 GMT</pubDate>
            <description><![CDATA[A web-based WeatherStar 4000]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/netbymatt/ws4kp">netbymatt/ws4kp</a></h1>
            <p>A web-based WeatherStar 4000</p>
            <p>Language: JavaScript</p>
            <p>Stars: 864</p>
            <p>Forks: 107</p>
            <p>Stars today: 65 stars today</p>
            <h2>README</h2><pre># WeatherStar 4000+

A live version of this project is available at https://weatherstar.netbymatt.com

## About

This project aims to bring back the feel of the 90&#039;s with a weather forecast that has the look and feel of The Weather Channel at that time but available in a modern way. This is by no means intended to be a perfect emulation of the WeatherStar 4000, the hardware that produced those wonderful blue and orange graphics you saw during the local forecast on The Weather Channel. If you would like a much more accurate project please see the [WS4000 Simulator](http://www.taiganet.com/). Instead, this project intends to create a simple to use interface with minimal configuration fuss. Some changes have been made to the screens available because either more or less forecast information is available today than was in the 90&#039;s. Most of these changes are captured in sections below.

## Acknowledgements

This project is based on the work of [Mike Battaglia](https://github.com/vbguyny/ws4kp). It was forked from his work in August 2020.

* Mike Battaglia for the original project and all of the code which draws the weather displays. This code remains largely intact and was a huge amount of work to get exactly right. He&#039;s also responsible for all of the background graphics including the maps used in the application.
* The team at [TWCClassics](https://twcclassics.com/) for several resources.
	* A [font](https://twcclassics.com/downloads.html) set used on the original WeatherStar 4000
	* [Icon](https://twcclassics.com/downloads.html) sets
	* Countless photos and videos of WeatherStar 4000 forecasts used as references.

## Does WeatherStar 4000+ work outside of the USA?

This project is tightly coupled to [NOAA&#039;s Weather API](https://www.weather.gov/documentation/services-web-api), which is exclusive to the United States. Using NOAA&#039;s Weather API is a crucial requirement to provide an authentic WeatherStar 4000+ experience.

If you would like to display weather information for international locations (outside of the USA), please checkout a fork of this project created by [@mwood77](https://github.com/mwood77):
- [`ws4kp-international`](https://github.com/mwood77/ws4kp-international)

## Run Your WeatherStar
There are a lot of CORS considerations and issues with api.weather.gov that are easiest to deal with by running a local server to see this in action (or use the live link above). You&#039;ll need Node.js &gt;12.0 to run the local server.

To run via Node locally:
```
git clone https://github.com/netbymatt/ws4kp.git
cd ws4kp
npm i
node index.mjs
```

To run via Docker: 
```
docker run -p 8080:8080 ghcr.io/netbymatt/ws4kp
```
Open your web browser: http://localhost:8080/ 

## Updates in 5.0
The change to 5.0 changes from drawing the weather graphics on canvas elements and instead uses HTML and CSS to style all of the weather graphics. A lot of other changes and fixes were implemented at the same time.

* Replace all canvas elements with HTML and CSS
* City and airport names are better parsed to fit the available space
* Remove the dependency on libgif-js
* Use browser for text wrapping where necessary
* Some new weather icons
* Refresh only on slideshow repeat
* Removed Almanac 30-day outlook
* Fixed startup issue when current conditions are unavailable

## Why the fork?

The fork is a result of wanting a more manageable, modern code base to work with. Part of it is an exercise in my education in JavaScript. There are several technical changes that were made behind the scenes.

* Make use of the new API available at https://api.weather.gov ([documentation](https://www.weather.gov/documentation/services-web-api)). This caused the removal of some of the original WeatherStar 4000 displays, and allowed for new displays to be created.
* Changed code to make extensive use of ES6 functionality including:
	* Arrow functions
	* Promises
	* Async/await and parallel loading of all forecast resources
	* Classes
* Common code base for each display through use of classes
* Separation between weather display code and user interface
* Use of a modern date parsing library [luxon](https://moment.github.io/luxon/)
* Attempt to remove the need for a local server to bypass [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) issues with the various APIs used. This is almost workable but there are still some minor CORS issues with https://api.weather.gov.
	* The necessary CORS pass through URLs have been rewritten so they can be deployed on Node.js using the included server or through S3/Cloudfront in a serverless environment.
* Proper settings for static resource caching
* Build system integration to reduce the number of scripts that need to be loaded

## What&#039;s different

I&#039;ve made several changes to this Weather Star 4000 simulation compared to the original hardware unit and the code that this was forked from.

* Radar displays the timestamp of the image.
* A new hour-by-hour graph of the temperature, cloud cover and precipitation chances for the next 24 hours.
* A new hourly forecast display for the next 24 hours is available, and is shown in the style of the travel cities forecast. (off by default because it duplicates the hourly graph)
* The &quot;Local Forecast&quot; and &quot;Extended Forecast&quot; provide several additional days of information compared to the original format in the 90&#039;s.
* Narration was removed. In the original code narration made use of the computer&#039;s local text-to-speech engine which didn&#039;t sound great.
* Music was removed. I don&#039;t want to deal with copyright issues and hosting MP3s. If you&#039;re looking for the music that played during forecasts please visit [TWCClassics](https://twcclassics.com/audio/).
* Marine forecast (tides) is not available as it is not part of the new API.
* The nearby cities displayed on screens such as &quot;Latest Observations&quot; and &quot;Regional Forecast&quot; are likely not the same as they were in the 90&#039;s. The weather monitoring equipment at these stations move over time for one reason or another, and coming up with a simple formulaic way of finding nearby stations is sufficient to give the same look-and-feel as the original.
* &quot;Flavors&quot; are not present in this simulation. Flavors refer to the order of the weather information that was shown on the original units. Instead, the order of the displays has been fixed and a checkboxes can be used to turn on and off individual displays. The travel forecast has been defaulted to off so only local information shows for new users.

## Sharing a permalink (bookmarking)
Selected displays, the forecast city and widescreen setting are sticky from one session to the next. However if you would like to share your exact configuration or bookmark it click the &quot;Copy Permalink&quot; (or get &quot;Get Parmalink&quot;) near the bottom of the page. A URL will be copied to your clipboard with all of you selected displays and location (or copy it from the page if your browser doesn&#039;t support clipboard transfers directly). You can then share this link or add it to your bookmarks.

Your permalink will be very long. Here is an example for the Orlando Internation Airport:
```
https://weatherstar.netbymatt.com/?hazards-checkbox=false&amp;current-weather-checkbox=true&amp;latest-observations-checkbox=true&amp;hourly-checkbox=false&amp;hourly-graph-checkbox=true&amp;travel-checkbox=false&amp;regional-forecast-checkbox=true&amp;local-forecast-checkbox=true&amp;extended-forecast-checkbox=true&amp;almanac-checkbox=false&amp;spc-outlook-checkbox=true&amp;radar-checkbox=true&amp;settings-wide-checkbox=false&amp;settings-kiosk-checkbox=false&amp;settings-scanLines-checkbox=false&amp;settings-speed-select=1.00&amp;settings-units-select=us&amp;latLonQuery=Orlando+International+Airport%2C+Orlando%2C+FL%2C+USA&amp;latLon=%7B%22lat%22%3A28.431%2C%22lon%22%3A-81.3076%7D
```
You can also build your own permalink. Any omitted settings will be filled with defaults. Here are a few examples:
```
https://weatherstar.netbymatt.com/?latLonQuery=Orlando+International+Airport
https://weatherstar.netbymatt.com/?kiosk=true
https://weatherstar.netbymatt.com/?settings-units-select=metric
```

## Kiosk mode
Kiosk mode can be activated by a checkbox on the page. Note that there is no way out of kiosk mode (except refresh or closing the browser), and the play/pause and other controls will not be available. This is deliberate as a browser&#039;s kiosk mode it intended not to be exited or significantly modified.

It&#039;s also possible to enter kiosk mode using a permalink. First generate a [Permalink](#sharing-a-permalink-bookmarking), then to the end of it add `&amp;kiosk=true`. Opening this link will load all of the selected displays included in the Permalink, enter kiosk mode immediately upon loading and start playing the forecast.

## Default query string paramaters (environment variables)
When serving this via the built-in Express server, it&#039;s possible to define environment variables that direct the user to a default set of paramaters (like the  [Permalink](#sharing-a-permalink-bookmarking) above). If a user requests the root page at `http://localhost:8080/` the query string provided by environment variables will be appended to the url thus providing a default configuration.

Environment variables can be added to the command line as usual, or via a .env file which is parsed with [dotenv](https://github.com/motdotla/dotenv). Both methods have the same effect.

Environment variables that are to be added to the default query string are prefixed with `WSQS_` and then use the same key/value pairs generated by the [Permalink](#sharing-a-permalink-bookmarking) above, with the `- (dash)` character replaced by an `_ (underscore)`. For example, if you wanted to turn the travel forecast on, you would find `travel-checkbox=true` in the permalink, it&#039;s matching environment variable becomes `WSQS_travel_checkbox=true`.

## Serving static files
The app can be served as a static set of files on any web server. Run the provided gulp task to create a set of static distribution files:
```
npm run buildDist
```
The resulting files will be in the /dist folder in the root of the project. These can then be uploaded to a web server for hosting, no server-side scripting is required.

## Music
The WeatherStar had wonderful background music from the smooth jazz and new age genres by artists of the time. Lists of the music that played are available by searching online, but it&#039;s all copyrighted music and would be difficult to provide as part of this repository.

I&#039;ve used AI tools to create WeatherStar-inspired music tracks that are unencumbered by copyright and are included in this repo. Too keep the size down, I&#039;ve only included 4 tracks. Additional tracks are in a companion repository [ws4kp-music](https://github.com/netbymatt/ws4kp-music).

### Customizing the music
Placing .mp3 files in the `/server/music` folder will override the default music included in the repo. Subdirectories will not be scanned. When weatherstar loads in the browser it will load a list if available files and randomize the order when it starts playing. On each loop through the available tracks the order will again be shuffled. If you&#039;re using the static files method to host your WeatherStar music is located in `/music`.

If using docker, you must pass a local accessible folder to the container in the `/app/server/music` directory. 
```
docker run -p 8080:8080 -v /path/to/local/music:/app/server/music ghcr.io/netbymatt/ws4kp
```

### Music doesn&#039;t auto play
Ws4kp is muted by default, but if it was unmuted on the last visit it is coded to try and auto play music on subsequent visits. But, it&#039;s considered bad form to have a web site play music automatically on load, and I fully agree with this. [Chrome](https://developer.chrome.com/blog/autoplay/#media_engagement_index) and [Firefox](https://hacks.mozilla.org/2019/02/firefox-66-to-block-automatically-playing-audible-video-and-audio/) have extensive details on how and when auto play is allowed.

Chrome seems to be more lenient on auto play and will eventually let a site auto-play music if you&#039;re visited it enough recently and manually clicked to start playing music on each visit. It also has a flag you can add to the command line when launching Chrome: `chrome.exe --autoplay-policy=no-user-gesture-required`. This is the best solution when using Kiosk-style setup.

## Community Notes

Thanks to the WeatherStar community for providing these discussions to further extend your retro forecasts!

* [Stream as FFMPEG](https://github.com/netbymatt/ws4kp/issues/37#issuecomment-2008491948)
* [Weather like it&#039;s 1999](https://blog.scottlabs.io/2024/02/weather-like-its-1999/) Raspberry pi, streaming, music and CRT all combined into a complete solution.
* [ws4channels](https://github.com/rice9797/ws4channels) A Dockerized Node.js application to stream WeatherStar 4000 data into Channels DVR using Puppeteer and FFmpeg.

## Customization
A hook is provided as `/server/scripts/custom.js` to allow customizations to your own fork of this project, without accidentally pushing your customizations back upstream to the git repository. An sample file is provided at `/server/scripts/custom.sample.js` and should be renamed to `custom.js` activate it.

## Issue reporting and feature requests

Please do not report issues with api.weather.gov being down. It&#039;s a new service and not considered fully operational yet. Before reporting an issue or requesting a feature please consider that this is not intended to be a perfect recreation of the WeatherStar 4000, it&#039;s a best effort that fits within what&#039;s available from the API and within a web browser.

Note: not all units are converted to metric, if selected. Some text-based products such as warnings are simple text strings provided from the national weather service and thus have baked-in units such as &quot;gusts up to 60 mph.&quot; These values will not be converted.

## Related Projects

Not retro enough? Try the [Weatherstar 3000+](https://github.com/netbymatt/ws3kp)

## Use

Linking directly to the live web site at https://weatherstar.netbymatt.com is encouraged. As is using the live site for digital signage, home dashboards, streaming and public display. Please note the disclaimer below.

## Disclaimer

This web site should NOT be used in life threatening weather situations, or be relied on to inform the public of such situations. The Internet is an unreliable network subject to server and network outages and by nature is not suitable for such mission critical use. If you require such access to NWS data, please consider one of their subscription services. The authors of this web site shall not be held liable in the event of injury, death or property damage that occur as a result of disregarding this warning.

The WeatherSTAR 4000 unit and technology is owned by The Weather Channel. This web site is a free, non-profit work by fans. All of the back ground graphics of this web site were created from scratch.  The icons were created by Charles Abel and Nick Smith (http://twcclassics.com/downloads/icons.html) as well as by Malek Masoud.  The fonts were originally created by Nick Smith (http://twcclassics.com/downloads/fonts.html).

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[agalwood/Motrix]]></title>
            <link>https://github.com/agalwood/Motrix</link>
            <guid>https://github.com/agalwood/Motrix</guid>
            <pubDate>Tue, 03 Jun 2025 00:04:55 GMT</pubDate>
            <description><![CDATA[A full-featured download manager.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/agalwood/Motrix">agalwood/Motrix</a></h1>
            <p>A full-featured download manager.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 47,840</p>
            <p>Forks: 4,655</p>
            <p>Stars today: 41 stars today</p>
            <h2>README</h2><pre># Motrix

&lt;p&gt;
  &lt;a href=&quot;https://motrix.app&quot;&gt;
    &lt;img src=&quot;./static/512x512.png&quot; width=&quot;256&quot; alt=&quot;Motrix App Icon&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

## A full-featured download manager

[![GitHub release](https://img.shields.io/github/v/release/agalwood/Motrix.svg)](https://github.com/agalwood/Motrix/releases) ![Build/release](https://github.com/agalwood/Motrix/workflows/Build/release/badge.svg) ![Total Downloads](https://img.shields.io/github/downloads/agalwood/Motrix/total.svg) ![Support Platforms](https://camo.githubusercontent.com/a50c47295f350646d08f2e1ccd797ceca3840e52/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d6d61634f5325323025374325323057696e646f77732532302537432532304c696e75782d6c69676874677265792e737667)

English | [简体中文](./README-CN.md)

Motrix is a full-featured download manager that supports downloading HTTP, FTP, BitTorrent, Magnet, etc.

Motrix has a clean and easy to use interface. I hope you will like it 👻.

✈️ [Official Website](https://motrix.app) | 📖 [Manual](https://github.com/agalwood/Motrix/wiki)

## 💽 Installation

Download from [GitHub Releases](https://github.com/agalwood/Motrix/releases) and install it.

### Windows

It is recommended to install Motrix using the installation package (Motrix-Setup-x.y.z.exe) to ensure a complete experience, such as associating torrent files, capturing magnet links, etc.

If you use package management tools to manage applications on Windows, such as [Chocolatey](https://chocolatey.org), [scoop](https://github.com/lukesampson/scoop). You can use them to install Motrix.

#### Chocolatey
Thanks to [@Yato](https://github.com/iYato) for continuing to maintain the [Motrix Chocolatey](https://community.chocolatey.org/packages/motrix) package. To install motrix, run the following command from the `command line` or from `PowerShell`:

```bash
# Install
choco install motrix

# Upgrade
choco upgrade motrix
```

#### scoop
If you prefer the portable version, you can use [scoop](https://github.com/lukesampson/scoop) (need Windows 7+) to install Motrix.

```bash
scoop bucket add extras
scoop install motrix
```

### macOS

The macOS users can install Motrix using `brew`, thanks to [PR](https://github.com/Homebrew/homebrew-cask/pull/59494) of [@Mitscherlich](https://github.com/Mitscherlich).

```bash
brew update &amp;&amp; brew install motrix
```

#### Auto Update

Since Motrix v1.8.0 and later versions changed the App BundleID ( `net.agalwood.Motrix` =&gt; `app.motrix.native` ), the automatic update of Motrix v1.6.11 will fail. [Motrix Install Assistant](https://github.com/motrixapp/motrix-install-assistant) will help you install the latest Motrix application.

&lt;p&gt;
  &lt;a href=&quot;https://github.com/motrixapp/motrix-install-assistant&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/motrixapp/motrix-install-assistant/main/build/256x256.png&quot; width=&quot;192&quot; alt=&quot;Motrix Install Assistant Icon&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

### Linux

You can download the `AppImage` (for all Linux distributions) or `snap` to install Motrix, see [GitHub/release](https://github.com/agalwood/Motrix/releases) for more Linux installation package formats.

Motrix may need to run with `sudo` for the first time in Linux because there is no permission to create the download session file (`/var/cache/aria2.session`).

If you want to build from source code, please read the **Build** section.

#### AppImage
The latest version of Motrix AppImage requires you to manually perform desktop integration. Please check the documentation of [AppImageLauncher](https://github.com/TheAssassin/AppImageLauncher) .

&gt; Desktop Integration
&gt; Since electron-builder 21 desktop integration is not a part of produced AppImage file.
&gt; [AppImageLauncher](https://github.com/TheAssassin/AppImageLauncher) is the recommended way to integrate AppImages.

Deepin 20 Beta users failed to install Motrix, please follow the steps below:

Open the `Terminal`, paste and run the following command to install Motrix again.

```bash
sudo apt --fix-broken install
```

#### Snap
Motrix has been listed on [Snapcraft](https://snapcraft.io/motrix) , Ubuntu users recommend downloading from the Snap Store.

Tips for v1.5.10

The tray may not display the indicator normally, which makes it inconvenient to exit the application.

Please unchecked Preferences--Basic Settings--Hide App Menu (Windows &amp; Linux Only), click Save &amp; Apply. Then click &quot;Exit&quot; in the File menu to exit the application.

Please update to v1.5.12 and above, you can use the keyboard shortcut &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;q&lt;/kbd&gt; to quickly exit the application.

#### AUR
For Arch Linux users, Motrix is available in [aur](https://aur.archlinux.org/packages/motrix/), thanks to the maintainer [@weearc](https://github.com/weearc).

Run the following command to install:

```bash
yay -S motrix
```

#### Flatpak
Thanks to the [PR](https://github.com/flathub/flathub/pull/2334) of [@proletarius101](https://github.com/proletarius101), Motrix has been listed [Flathub](https://flathub.org/apps/details/net.agalwood.Motrix), Linux users who like the Flatpak can try it.

```bash
# Install
flatpak install flathub net.agalwood.Motrix

# Run
flatpak run net.agalwood.Motrix
```

## ✨ Features

- 🕹 Simple and clear user interface
- 🦄 Supports BitTorrent &amp; Magnet
- ☑️ BitTorrent selective download
- 📡 Update tracker list every day automatically
- 🔌 UPnP &amp; NAT-PMP Port Mapping
- 🎛 Up to 10 concurrent download tasks
- 🚀 Supports 64 threads in a single task
- 🚥 Supports speed limit
- 🕶 Mock User-Agent
- 🔔 Download completed Notification
- 💻 Ready for Touch Bar (Mac only)
- 🤖 Resident system tray for quick operation
- 📟 Tray speed meter displays real-time speed (Mac only)
- 🌑 Dark mode
- 🗑 Delete related files when removing tasks (optional)
- 🌍 I18n, [View supported languages](#-internationalization).
- 🛠 More features in development

## 🖥 User Interface

![motrix-screenshot-task-en.png](https://cdn.nlark.com/yuque/0/2020/png/129147/1589782238501-e7b39166-da58-4152-ae34-65a061cafa48.png)

## ⌨️ Development

### Clone Code

```bash
git clone git@github.com:agalwood/Motrix.git
```

### Install Dependencies

```bash
cd Motrix
yarn
```

&gt; Error: Electron failed to install correctly, please delete node_modules/electron and try installing again

`Electron` failed to install correctly, please refer to https://github.com/electron/electron/issues/8466#issuecomment-571425574

### Dev Mode

```bash
yarn run dev
```

### Build Release

```bash
yarn run build
```
#### Build for Apple Silicon

```bash
yarn run build:applesilicon
```

After building, the application will be found in the project&#039;s `release` directory.

## 🛠 Technology Stack

- [Electron](https://electronjs.org/)
- [Vue](https://vuejs.org/) + [VueX](https://vuex.vuejs.org/) + [Element](https://element.eleme.io)
- [Aria2](https://aria2.github.io/)

## ☑️ TODO

Development Roadmap see: [Trello](https://trello.com/b/qNUzA0bv/motrix)

## 🤝 Contribute [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat)](http://makeapullrequest.com)

If you are interested in participating in joint development, PR and Forks are welcome!

## 🌍 Internationalization

Translations into versions for other languages are welcome 🧐! Please read the [translation guide](./CONTRIBUTING.md#-translation-guide) before starting translations.

| Key   | Name                | Status       |
|-------|:--------------------|:-------------|
| ar    | Arabic              | ✔️ [@hadialqattan](https://github.com/hadialqattan), [@AhmedElTabarani](https://github.com/AhmedElTabarani) |
| bg    | Българският език    | ✔️ [@null-none](https://github.com/null-none) |
| ca    | Català              | ✔️ [@marcizhu](https://github.com/marcizhu) |
| de    | Deutsch             | ✔️ [@Schloemicher](https://github.com/Schloemicher) |
| el    | Ελληνικά            | ✔️ [@Likecinema](https://github.com/Likecinema) |
| en-US | English             | ✔️           |
| es    | Español             | ✔️ [@Chofito](https://github.com/Chofito)|
| fa    | فارسی               | ✔️ [@Nima-Ra](https://github.com/Nima-Ra) |
| fr    | Français            | ✔️ [@gpatarin](https://github.com/gpatarin) |
| hu    | Hungarian           | ✔️ [@zalnaRs](https://github.com/zalnaRs) |
| id    | Indonesia           | ✔️ [@aarestu](https://github.com/aarestu) |
| it    | Italiano            | ✔️ [@blackcat-917](https://github.com/blackcat-917) |
| ja    | 日本語               | ✔️ [@hbkrkzk](https://github.com/hbkrkzk) |
| ko    | 한국어                | ✔️ [@KOZ39](https://github.com/KOZ39) |
| nb    | Norsk Bokmål        | ✔️ [@rubjo](https://github.com/rubjo) |
| nl    | Nederlands          | ✔️ [@nickbouwhuis](https://github.com/nickbouwhuis) |
| pl    | Polski              | ✔️ [@KanarekLife](https://github.com/KanarekLife) |
| pt-BR | Portuguese (Brazil) | ✔️ [@andrenoberto](https://github.com/andrenoberto) |
| ro    | Română              | ✔️ [@alyn3d](https://github.com/alyn3d) |
| ru    | Русский             | ✔️ [@bladeaweb](https://github.com/bladeaweb) |
| th    | แบบไทย              | ✔️ [@nxanywhere](https://github.com/nxanywhere) |
| tr    | Türkçe              | ✔️ [@abdullah](https://github.com/abdullah) |
| uk    | Українська          | ✔️ [@bladeaweb](https://github.com/bladeaweb) |
| vi    | Tiếng Việt          | ✔️ [@duythanhvn](https://github.com/duythanhvn) |
| zh-CN | 简体中文             | ✔️           |
| zh-TW | 繁體中文             | ✔️ [@Yukaii](https://github.com/Yukaii) [@5idereal](https://github.com/5idereal) |

## 📜 License

[MIT](https://opensource.org/licenses/MIT) Copyright (c) 2018-present Dr_rOot
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[CodeWithHarry/Sigma-Web-Dev-Course]]></title>
            <link>https://github.com/CodeWithHarry/Sigma-Web-Dev-Course</link>
            <guid>https://github.com/CodeWithHarry/Sigma-Web-Dev-Course</guid>
            <pubDate>Tue, 03 Jun 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[Source Code for Sigma Web Development Course]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/CodeWithHarry/Sigma-Web-Dev-Course">CodeWithHarry/Sigma-Web-Dev-Course</a></h1>
            <p>Source Code for Sigma Web Development Course</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,575</p>
            <p>Forks: 2,540</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre># Welcome to Sigma&#039;s Web Development Course - Hindi Web Development Tutorials! 🚀

## What&#039;s Inside:

If you&#039;ve been itching to dive into the world of web development but feel lost in a sea of English tutorials, you&#039;re in the right place! Our course is exclusively in Hindi and is crafted to guide you from being an absolute beginner to a seasoned pro, one step at a time.

## Who Can Benefit?

### This course is a perfect fit for:

1. Beginners eager to start their web development journey
2. Intermediate developers looking to refine their skills
3. Individuals who prefer learning in Hindi

## What You&#039;ll Master:

### During this course, you&#039;ll delve into:

1. The fundamentals of HTML, CSS, and JavaScript
2. Both front-end and back-end development
3. How to seamlessly integrate databases
4. Real-world project implementation
5. And a whole lot more!

## The Schedule:

We&#039;re committed to your growth. Expect fresh source code additions nearly every day. Keep up the pace with our schedule and watch your skills soar! 📅

Get ready to embark on an exciting coding journey! 👨‍💻🌟

Ready to start? [Click here](https://www.youtube.com/playlist?list=PLu0W_9lII9agq5TrH9XLIKQvv0iaF2X3w) to access the complete YouTube playlist.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[vernesong/OpenClash]]></title>
            <link>https://github.com/vernesong/OpenClash</link>
            <guid>https://github.com/vernesong/OpenClash</guid>
            <pubDate>Tue, 03 Jun 2025 00:04:53 GMT</pubDate>
            <description><![CDATA[A Clash Client For OpenWrt]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vernesong/OpenClash">vernesong/OpenClash</a></h1>
            <p>A Clash Client For OpenWrt</p>
            <p>Language: JavaScript</p>
            <p>Stars: 20,093</p>
            <p>Forks: 3,439</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/vernesong/OpenClash/dev/img/logo.png&quot; alt=&quot;Clash&quot; width=&quot;200&quot;&gt;
  &lt;br&gt;OpenClash&lt;br&gt;

&lt;/h1&gt;

  &lt;p align=&quot;center&quot;&gt;
	&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/Dreamacro/clash/releases/tag/v1.13.0&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/Clash-v1.13.0-blue.svg&quot;&gt;
    &lt;/a&gt;
  &lt;/p&gt;
  

&lt;p align=&quot;center&quot;&gt;
本插件是一个可运行在 OpenWrt 上的&lt;a href=&quot;https://github.com/Dreamacro/clash&quot; target=&quot;_blank&quot;&gt; Clash &lt;/a&gt;客户端
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
兼容 Shadowsocks、ShadowsocksR、Vmess、Trojan、Snell 等协议，根据灵活的规则配置实现策略代理
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
- 感谢&lt;a href=&quot;https://github.com/frainzy1477&quot; target=&quot;_blank&quot;&gt; frainzy1477 &lt;/a&gt;，本插件基于&lt;a href=&quot;https://github.com/frainzy1477/luci-app-clash&quot; target=&quot;_blank&quot;&gt; Luci For Clash &lt;/a&gt;进行二次开发 -
&lt;/p&gt;

使用手册
---


* [Wiki](https://github.com/vernesong/OpenClash/wiki)


下载地址
---


* IPK [前往下载](https://github.com/vernesong/OpenClash/releases)


依赖
---

* luci
* luci-base
* dnsmasq-full
* bash
* curl
* ca-bundle
* ipset
* ip-full
* ruby
* ruby-yaml
* unzip
* iptables(iptables)
* kmod-ipt-nat(iptables)
* iptables-mod-tproxy(iptables)
* iptables-mod-extra(iptables)
* kmod-tun(TUN模式)
* luci-compat(Luci &gt;= 19.07)
* ip6tables-mod-nat(iptables-ipv6)
* kmod-inet-diag(PROCESS-NAME)
* kmod-nft-tproxy(Firewall4)


编译
---


从 OpenWrt 的 [SDK](https://archive.openwrt.org/chaos_calmer/15.05.1/ar71xx/generic/OpenWrt-SDK-15.05.1-ar71xx-generic_gcc-4.8-linaro_uClibc-0.9.33.2.Linux-x86_64.tar.bz2) 编译
```bash
# 解压下载好的 SDK
curl -SLk --connect-timeout 30 --retry 2 &quot;https://archive.openwrt.org/chaos_calmer/15.05.1/ar71xx/generic/OpenWrt-SDK-15.05.1-ar71xx-generic_gcc-4.8-linaro_uClibc-0.9.33.2.Linux-x86_64.tar.bz2&quot; -o &quot;/tmp/SDK.tar.bz2&quot;
cd \tmp
tar xjf SDK.tar.bz2
cd OpenWrt-SDK-15.05.1-*

# Clone 项目
mkdir package/luci-app-openclash
cd package/luci-app-openclash
git init
git remote add -f origin https://github.com/vernesong/OpenClash.git
git config core.sparsecheckout true
echo &quot;luci-app-openclash&quot; &gt;&gt; .git/info/sparse-checkout
git pull --depth 1 origin master
git branch --set-upstream-to=origin/master master

# 编译 po2lmo (如果有po2lmo可跳过)
pushd luci-app-openclash/tools/po2lmo
make &amp;&amp; sudo make install
popd

# 开始编译

# 先回退到SDK主目录
cd ../..
make package/luci-app-openclash/luci-app-openclash/compile V=99

# IPK文件位置
./bin/ar71xx/packages/base/luci-app-openclash_*-beta_all.ipk
```

```bash
# 同步源码
cd package/luci-app-openclash/luci-app-openclash
git pull

# 您也可以直接拷贝 `luci-app-openclash` 文件夹至其他 `OpenWrt` 项目的 `Package` 目录下随固件编译

make menuconfig
# 选择要编译的包 LuCI -&gt; Applications -&gt; luci-app-openclash

```


许可
---


* [MIT License](https://github.com/vernesong/OpenClash/blob/master/LICENSE)
* 内核 [clash](https://github.com/Dreamacro/clash) by [Dreamacro](https://github.com/Dreamacro)
* 本项目代码基于 [Luci For Clash](https://github.com/frainzy1477/luci-app-clash) by [frainzy1477](https://github.com/frainzy1477)
* GEOIP数据库 [GeoLite2](https://dev.maxmind.com/geoip/geoip2/geolite2/) by [MaxMind](https://www.maxmind.com)
* IP检查 [MyIP](https://github.com/SukkaW/MyIP) by [SukkaW](https://github.com/SukkaW)
* 控制面板 [clash-dashboard](https://github.com/Dreamacro/clash-dashboard) by [Dreamacro](https://github.com/Dreamacro)
* 控制面板 [yacd](https://github.com/haishanh/yacd) by [haishanh](https://github.com/haishanh)
* lhie1规则 [lhie1-Rules](https://github.com/lhie1/Rules) by [lhie1](https://github.com/lhie1)
* ConnersHua规则 [ConnersHua-Rules](https://github.com/ConnersHua/Profiles/tree/master) by [ConnersHua](https://github.com/ConnersHua)
* 游戏规则 [SSTap-Rule](https://github.com/FQrabbit/SSTap-Rule) by [FQrabbit](https://github.com/FQrabbit)
* 流媒体解锁检测 [RegionRestrictionCheck](https://github.com/lmc999/RegionRestrictionCheck) by [lmc999](https://github.com/lmc999)

请作者喝杯咖啡
---

* PayPal
&lt;p align=&quot;left&quot;&gt;
    &lt;a href=&quot;https://ko-fi.com/vernesong&quot;&gt;&lt;img width=&quot;300&quot; src=&quot;https://www.ko-fi.com/img/githubbutton_sm.svg&quot;&gt; &lt;/a&gt;
&lt;/p&gt;

* USDT-TRC20
&lt;p align=&quot;left&quot;&gt;
    &lt;img width=&quot;300&quot; src=&quot;https://github.com/vernesong/OpenClash/raw/master/img/USDT-Wallet.png&quot;&gt;
&lt;/p&gt;

* 比特币-BTC
&lt;p align=&quot;left&quot;&gt;
    &lt;img width=&quot;300&quot; src=&quot;https://github.com/vernesong/OpenClash/raw/master/img/BTC-Wallet.png&quot;&gt;
&lt;/p&gt;

* 以太币-ETH
&lt;p align=&quot;left&quot;&gt;
    &lt;img width=&quot;300&quot; src=&quot;https://github.com/vernesong/OpenClash/raw/master/img/ETH-Wallet.png&quot;&gt;
&lt;/p&gt;


预览
---


* 运行状态
&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://github.com/vernesong/OpenClash/raw/master/img/state.png&quot;&gt;
&lt;/p&gt;

* 全局设置
&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://github.com/vernesong/OpenClash/raw/master/img/settings.png&quot;&gt;
&lt;/p&gt;

* 服务器&amp;策略组
&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://github.com/vernesong/OpenClash/raw/master/img/servers.png&quot;&gt;
&lt;/p&gt;

* 规则&amp;策略组
&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://github.com/vernesong/OpenClash/raw/master/img/game-settings.png&quot;&gt;
&lt;/p&gt;

* 配置文件订阅
&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://github.com/vernesong/OpenClash/raw/master/img/config-subscribe.png&quot;&gt;
&lt;/p&gt;

* 配置文件管理
&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://github.com/vernesong/OpenClash/raw/master/img/config.png&quot;&gt;
&lt;/p&gt;

* 运行日志
&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://github.com/vernesong/OpenClash/raw/master/img/log.png&quot;&gt;
&lt;/p&gt;

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[XengShi/materialYouNewTab]]></title>
            <link>https://github.com/XengShi/materialYouNewTab</link>
            <guid>https://github.com/XengShi/materialYouNewTab</guid>
            <pubDate>Tue, 03 Jun 2025 00:04:52 GMT</pubDate>
            <description><![CDATA[A Simple New Tab ( browsers's home page ) inspired with Google's 'Material You' design]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/XengShi/materialYouNewTab">XengShi/materialYouNewTab</a></h1>
            <p>A Simple New Tab ( browsers's home page ) inspired with Google's 'Material You' design</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,912</p>
            <p>Forks: 289</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre>&lt;!-- Initialized : Sun 20 Aug 2023 03:41:08 PM IST --&gt;
&lt;h1 align=&quot;center&quot;&gt;

&lt;a href=&quot;https://xengshi.github.io/materialYouNewTab/&quot;&gt;&lt;img src=&quot;https://i.ibb.co/x11pGSs/icon-128.png&quot; width=&quot;50&quot;&gt;&lt;/a&gt;
&lt;br&gt;
Material You NewTab

&lt;/h1&gt;
&lt;div align=&quot;center&quot;&gt;

Material You NewTab is a versatile browser extension that personalizes your New Tab page with customizable themes, a welcoming message, and various handy tools, all while integrating seamlessly with your preferred search engine.

&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;

![License](https://img.shields.io/github/license/XengShi/materialYouNewTab)
![Last Commit](https://img.shields.io/github/last-commit/XengShi/materialYouNewTab)
![GitHub contributors](https://img.shields.io/github/contributors/XengShi/materialYouNewTab)
![GitHub stars](https://img.shields.io/github/stars/XengShi/materialYouNewTab)
![GitHub forks](https://img.shields.io/github/forks/XengShi/materialYouNewTab)

&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;#-features&quot;&gt;Features&lt;/a&gt; •
  &lt;a href=&quot;#-installation-guide&quot;&gt;Installation Guide&lt;/a&gt; •
  &lt;a href=&quot;#download&quot;&gt;Download&lt;/a&gt; •
  &lt;a href=&quot;#-currently-supported-languages-26&quot;&gt;Currently Supported Languages&lt;/a&gt; •
  &lt;a href=&quot;#-usage&quot;&gt;Usage&lt;/a&gt;
&lt;br&gt;
  &lt;a href=&quot;#-contributing&quot;&gt;Contributing&lt;/a&gt; •
  &lt;a href=&quot;#-star-history&quot;&gt;Star History&lt;/a&gt; •
  &lt;a href=&quot;#-issues-and-support&quot;&gt;Issues and Support&lt;/a&gt; •
  &lt;a href=&quot;#-privacy-policy&quot;&gt;Privacy Policy&lt;/a&gt; •
  &lt;a href=&quot;#-license&quot;&gt;License&lt;/a&gt;
&lt;/p&gt;

&lt;img src=&quot;https://i.postimg.cc/CF43Yzj1/material-you-new-Tab-poster.webp&quot; alt=&quot;Screenshot 1&quot; width=&quot;100%&quot;&gt;

#### 🔴 🟡 🟢 Test live: [https://xengshi.github.io/materialYouNewTab/](https://xengshi.github.io/materialYouNewTab/)

## ✨ Features

- **Customizable Themes**: Choose from a selection of themes to match your style.
- **Personalized Greeting**: Add a custom message or your name, so you&#039;re greeted each time you open a new tab.
- **Integrated Search**: Search directly from the New Tab using your preferred search engine — Google, DuckDuckGo, Bing, Brave Search or YouTube.
- **Browser Compatibility**: Supports major browsers like Chrome, Edge, Firefox, Brave, and Opera.

## 📥 Installation Guide

### Download

1. **Development Version** (v3.1.*)

    - **Clone the Repository**:
      Use the following command to clone the repository:

       ```bash
       git clone https://github.com/XengShi/materialYouNewTab.git
       ```

    - Alternatively, download the latest version as a ZIP file by clicking below:

      [![Download ZIP](https://img.shields.io/badge/Download-ZIP-blue.svg)](https://github.com/XengShi/materialYouNewTab/archive/refs/heads/main.zip)

    - You can also download the ZIP file by clicking on the Code button. On the repository page, look for a green button labeled **Code**. Click on the **Code** button, and in the dropdown menu, select **Download ZIP**.

2. **Stable Release** (v3.1)

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/XengShi/materialYouNewTab/archive/refs/tags/v3.zip&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/GitHub-blue?style=for-the-badge&amp;logo=github&amp;logoColor=white&amp;labelColor=grey&amp;color=blue&quot; alt=&quot;Download from GitHub&quot; height=&quot;47&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://chromewebstore.google.com/detail/material-you-newtab/glloabhodjfmeoccmdngmhkpmdlakfbn&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/20a6e44b-fd46-4e6c-8ea6-aad436035753&quot; alt=&quot;Download from Chrome Web Store&quot; height=&quot;48&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/material-you-newtab/&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/c0e99e6b-97cf-4af2-9737-099db7d3538b&quot; alt=&quot;Download from Mozilla Add-ons&quot; height=&quot;48&quot; /&gt;&lt;/a&gt;
    &lt;!-- &lt;a href=&quot;https://microsoftedge.microsoft.com/addons/detail/glloabhodjfmeoccmdngmhkpmdlakfbn&quot;&gt;&lt;img height=&quot;48&quot; src=&quot;https://github.com/user-attachments/assets/204157eb-4cae-4c0e-b2cb-db514419fd9e&quot; alt=&quot;Download from the Edge Add-ons&quot; /&gt;&lt;/a&gt; --&gt;
&lt;/p&gt;

---

### Installation

#### ![Chromium](https://img.icons8.com/?size=20&amp;id=104996&amp;format=png&amp;color=000000) Chromium-Based Browsers

1. **Install from Chrome Web Store**:

   - [Chrome Web Store link](https://chromewebstore.google.com/detail/material-you-newtab/glloabhodjfmeoccmdngmhkpmdlakfbn)

   **Or** follow the manual steps below:

2. **Manual Installation**:

   - **Prepare the Extension Folder**:

     - Ensure you’ve cloned the repository or downloaded the ZIP file and extracted it.

   - **Open Extensions Page**:
     Open your preferred browser and enter the following text in the address bar:

     - ![Chrome](https://img.icons8.com/color/20/000000/chrome--v1.png) Chrome: `chrome://extensions`

     - ![Edge](https://img.icons8.com/?size=20&amp;id=dGm9KIZPpukc&amp;format=png&amp;color=000000) Edge: `edge://extensions`

     - ![Brave](https://img.icons8.com/color/20/000000/brave-web-browser.png) Brave: `brave://extensions`

     - ![Opera](https://img.icons8.com/color/20/000000/opera--v1.png) Opera: `opera://extensions`

   - **Enable Developer Mode**:

     - Turn on **Developer Mode** in the extensions page.

   - **Load Unpacked Extension**:
     - Click on **Load unpacked** and select your extracted extension folder.

3. **Additional Steps ONLY for ![Opera](https://img.icons8.com/color/20/000000/opera--v1.png) Opera (or ![Opera GX](https://img.icons8.com/color/20/000000/opera-gx.png) Opera GX)**:

   - Go to the **Settings** of Opera or Opera GX.
   - Scroll to the **On startup** section.
   - Click on **Open a specific page or set of pages** and then click on **Add a new page**.
   - Add the following to the **Site URL**:

      ```text
      chrome-extension://glloabhodjfmeoccmdngmhkpmdlakfbn/index.html
      ```

Below are screenshots of the process to guide you through each step visually.

&lt;img src=&quot;https://i.postimg.cc/w6JYypvc/chrome.png&quot; alt=&quot;Screenshot 1&quot; width=&quot;569&quot;&gt;
&lt;img src=&quot;https://i.postimg.cc/0ksR7BKg/edge.png&quot; alt=&quot;Screenshot 2&quot; width=&quot;569&quot;&gt;
&lt;img src=&quot;https://i.postimg.cc/MqPSg5NR/brave.png&quot; alt=&quot;Screenshot 3&quot; width=&quot;569&quot;&gt;

---

#### ![Firefox](https://img.icons8.com/color/20/000000/firefox--v1.png) Firefox

1. **Install from Mozilla Extensions Store**:

   - [Mozilla Add-ons link](https://addons.mozilla.org/en-US/firefox/addon/material-you-newtab/)

&lt;img src=&quot;https://i.postimg.cc/bPW2fHX7/FireFox.png&quot; alt=&quot;Screenshot&quot; width=&quot;569&quot;&gt;

2. **Update the Homepage**:

   - Open Firefox and **obtain the UUID**:
      - Hover over the New Tab button (next to the tab close button). A tooltip will display the extension&#039;s unique ID, which looks like this: `0f31e1c1-d63c-4660-b950-8bfbda3bb20a`. Copy or note this ID.
      - Alternatively, type `about:debugging#/runtime/this-firefox` in the address bar and find the extension&#039;s UUID there.
   - Open **Settings** and navigate to **Home**, or type `about:preferences#home` in the address bar.
   - Under the **Homepage and new windows** section, select **Custom URLs...**.
   - Paste the following URL, replacing the ID with your actual UUID:

     ```text
     moz-extension://e31d6701-f699-414f-bb4c-8fde495c432e/index.html
     ```

   - This will update both your homepage and new tab to the extension.

3. **Manual Installation (Temporary)**:

   - Clone the repository or download and extract the ZIP file.
   - **Prepare the Manifest**:

     - Delete the existing `manifest.json` file.
     - Rename `manifest(firefox).json` to `manifest.json`.

   - **Load Temporary Add-on**:
     - Go to `about:debugging#/runtime/this-firefox`, select **&quot;This Firefox&quot;**, then click **Load Temporary Add-on**.
     - Browse and select the updated `manifest.json`.

---

&lt;!-- #### ![Safari](https://img.icons8.com/color/20/000000/safari--v1.png) Safari --&gt;

### Installation Video

For a step-by-step walkthrough, watch this [installation guide video](https://youtu.be/P4ryQPixfw8).

[![Watch the video](https://img.youtube.com/vi/P4ryQPixfw8/0.jpg)](https://youtu.be/P4ryQPixfw8)

## 🌐 Currently Supported Languages (26)

| Language                                                                                     | Code  | Translator(s)                                                                         |
| -------------------------------------------------------------------------------------------- | :---: | ------------------------------------------------------------------------------------- |
| &lt;img src=&#039;https://flagcdn.com/us.svg&#039; width=20&gt; &amp;nbsp; **English**                           |  en   | [XengShi](https://github.com/XengShi/), [Prem](https://github.com/prem-k-r/)          |
| &lt;img src=&#039;https://flagcdn.com/sa.svg&#039; width=20&gt; &amp;nbsp; **Arabic** - العربية                     | ar-SA | [Mazen](https://github.com/Mazen3Alharbi)                                             |
| &lt;img src=&#039;https://flagcdn.com/az.svg&#039; width=20&gt; &amp;nbsp; **Azerbaijani** - Azərbaycanca        |  az   | [Hasan Bakhtiar](https://github.com/hasanbakhtiar/)                                   |
| &lt;img src=&#039;https://flagcdn.com/bd.svg&#039; width=20&gt; &amp;nbsp; **Bangla** - বাংলা                     |  bn   | [It&#039;z RJ](https://github.com/itz-rj-here/), [Prem](https://github.com/prem-k-r/)      |
| &lt;img src=&#039;https://flagcdn.com/cn.svg&#039; width=20&gt; &amp;nbsp; **Chinese** (Simplified) - 简体中文    | zh-CN | [Guy Berryman](https://github.com/Guy-Berryman), [Tianli](https://github.com/TIANLI0) |
| &lt;img src=&#039;https://flagcdn.com/tw.svg&#039; width=20&gt; &amp;nbsp; **Chinese** (Traditional) - 繁體中文   | zh-TW | [C. Y. Tseng](https://github.com/Eddie40802)                                          |
| &lt;img src=&#039;https://flagcdn.com/cz.svg&#039; width=20&gt; &amp;nbsp; **Czech** - Čeština                   |  cz   | [Michal Šmahel](https://github.com/ceskyDJ/)                                          |
| &lt;img src=&#039;https://flagcdn.com/fr.svg&#039; width=20&gt; &amp;nbsp; **French** - Français                 |  fr   | [422.io](https://github.com/iamwinner422)                                             |
| &lt;img src=&#039;https://flagcdn.com/de.svg&#039; width=20&gt; &amp;nbsp; **German** - Deutsch                  |  de   | [Prem](https://github.com/prem-k-r/)(MTL)                                            |
| &lt;img src=&#039;https://flagcdn.com/in.svg&#039; width=20&gt; &amp;nbsp; **Hindi** - हिंदी                       |  hi   | [XengShi](https://github.com/XengShi/), [Prem](https://github.com/prem-k-r/)          |
| &lt;img src=&#039;https://flagcdn.com/hu.svg&#039; width=20&gt; &amp;nbsp; **Hungarian** - Magyar                |  hu   | [Zan1456](https://github.com/Zan1456/)                                                |
| &lt;img src=&#039;https://flagcdn.com/id.svg&#039; width=20&gt; &amp;nbsp; **Indonesian** - Bahasa Indonesia     |  idn  | [Ayyas-RF](https://github.com/Ayyas-RF/)                                              |
| &lt;img src=&#039;https://flagcdn.com/it.svg&#039; width=20&gt; &amp;nbsp; **Italian** - Italiano                |  it   | [Claudio Di Maio](https://github.com/ZiClaud/)                                        |
| &lt;img src=&#039;https://flagcdn.com/jp.svg&#039; width=20&gt; &amp;nbsp; **Japanese** - 日本語                 |  ja   | [XengShi](https://github.com/XengShi/), [S-H-Y-A](https://github.com/S-H-Y-A/)        |
| &lt;img src=&#039;https://flagcdn.com/kr.svg&#039; width=20&gt; &amp;nbsp; **Korean** - 한국어                   |  ko   | [XengShi](https://github.com/XengShi/)                                                |
| &lt;img src=&#039;https://flagcdn.com/in.svg&#039; width=20&gt; &amp;nbsp; **Marathi** - मराठी                   |  mr   | [Prem](https://github.com/prem-k-r/), [Pratik Lokhande](https://github.com/konprtk)   |
| &lt;img src=&#039;https://flagcdn.com/np.svg&#039; width=20&gt; &amp;nbsp; **Nepali** - नेपाली                    |  np   | [Bikash Shresha](https://github.com/sthaB-kash/)                                      |
| &lt;img src=&#039;https://flagcdn.com/ir.svg&#039; width=20&gt; &amp;nbsp; **Persian** - فارسی                    |  fa   | [AMIRHOSSEIN](https://github.com/AMIRHOSSEIN-AHMADI-IR)                               |
| &lt;img src=&#039;https://flagcdn.com/br.svg&#039; width=20&gt; &amp;nbsp; **Portuguese** - Português            | pt-BR | [Maycon Vitor Correa](https://github.com/MestreWalla/)                                |
| &lt;img src=&#039;https://flagcdn.com/ru.svg&#039; width=20&gt; &amp;nbsp; **Russian** - Русский                 |  ru   | [giwi](https://github.com/giwih/)                                                     |
| &lt;img src=&#039;https://flagcdn.com/si.svg&#039; width=20&gt; &amp;nbsp; **Slovenian** - Slovenščina           | sl-SI | [Linux-Alex](https://github.com/Linux-Alex/)                                          |
| &lt;img src=&#039;https://flagcdn.com/es.svg&#039; width=20&gt; &amp;nbsp; **Spanish** - Español                 | es-ES | [XengShi](https://github.com/XengShi/)                                                |
| &lt;img src=&#039;https://flagcdn.com/tr.svg&#039; width=20&gt; &amp;nbsp; **Turkish** - Türkçe                  |  tr   | [Nobody](https://github.com/Nobody9512), [Kerim Ölçer](https://github.com/kerimlcr)   |
| &lt;img src=&#039;https://flagcdn.com/pk.svg&#039; width=20&gt; &amp;nbsp; **Urdu** - اردو                        |  ur   | [Asfandiyar Khan](https://github.com/asfand-dev)                                      |
| &lt;img src=&#039;https://flagcdn.com/uz.svg&#039; width=20&gt; &amp;nbsp; **Uzbek** - O&#039;zbek                    |  uz   | [Firdavs](https://github.com/Firdavs9512/)                                            |
| &lt;img src=&#039;https://flagcdn.com/vn.svg&#039; width=20&gt; &amp;nbsp; **Vietnamese** - Tiếng Việt           |  vn   | [Diep](https://github.com/diepdo1810/), [Tuan](https://github.com/Tuan1-2-3)          |

Check the [Translation Status Page](https://xengshi.github.io/materialYouNewTab/tools/languagesAnalysis.html) for an overview of completed languages and missing strings analysis.

&lt;details&gt;
&lt;summary&gt;&lt;h2&gt;📖 Usage&lt;/h2&gt;&lt;/summary&gt;

1. **Welcome Greeting**:
   - The extension greets you with a personalized message, like &quot;Hello! It’z RJ,&quot; and displays the current date. This feature can be customized in the settings to show your name or preferred text, making your browsing experience feel more personal.

2. **Clock Widget**:
   - Two clock options are available: a modern **analog clock** (default) and a **digital clock**.
   - Users can switch between these clock types in the **menu settings**, providing flexibility to choose their preferred style for displaying the current time.

3. **Weather Information**:
   - Displays real-time weather information for your location, including temperature, weather condition (like &quot;Sunny&quot;), humidity, and &quot;Feels like&quot; temperature.
   - Users can set their location (like &quot;Dhaka&quot;) to get accurate weather data. A visual icon represents the weather, and temperature is displayed in degrees Celsius by default. However, it can be switched to Fahrenheit in the menu settings.

4. **Search Bar**:
   - The search bar allows you to enter queries directly from the new tab page. This makes it quick and easy to start searching without switching to a different page or window.
   - Below the search bar, there are search engine options that allow you to choose your preferred search engine: Google, DuckDuckGo, Bing, Brave, or YouTube.
   - A **voice typing feature** is integrated, enabling hands-free searches for added convenience.

5. **Shortcuts**:
   - At the bottom, there are quick-access icons for popular platforms, including YouTube, Email, Telegram, WhatsApp, Twitter, and more.
   - Clicking on any of these icons will redirect you to the respective platform, allowing for easy access to your frequently used services.
   - Users can also **add their own shortcuts** to the menu settings for more personalized quick access.

6. **AI Tools Button**:
   - On the bottom left, an &quot;AI Tools&quot; button is available, providing access to AI-powered tools directly from the New Tab page. Tools like ChatGPT, Gemini, Copilot, Perplexity, Deepseek, and Meta AI are integrated for quick, AI-driven assistance or tasks.

7. **Wallpaper Management**:
   - Users can upload their own wallpapers via the **new wallpaper management section** in the menu settings.
   - The **Random Image feature** provides users with a new wallpaper every day, updating automatically at the start of each day. Images are sourced from [Lorem Picsum](https://picsum.photos).

8. **Backup System**:
   - The menu settings include a backup system that allows users to save and restore their customized settings.
   - This feature is detailed with screenshots, showing how users can manage backups effectively.

9. **Bookmarks**:
   - The extension allows users to manage their bookmarks directly.
   - Users can delete any bookmarks they no longer need, ensuring a clean and organized space.
   - A **view as selector** lets users toggle between a **grid** and **list layout**, allowing them to display their bookmarks as they prefer.

10. **To-Do List**:
    - The extension features a **to-do list** to help users track and remember important tasks.
    - Users can pin specific tasks using the **pin button**, ensuring those tasks stay at the top for easy access.
    - At the start of each new day, all completed tasks are automatically deleted. However, pinned tasks are not deleted—their status simply resets to **pending**, allowing users to continue tracking them.

11. **Reset Settings**:
    - If users want to completely reset all data and settings, they can use the **Reset Settings** button available in the menu section.
    - This feature clears all customizations and restores the extension to its default state.

12. **Themes and Personalization**:
    - Offers a dynamic theme system inspired by Material You, allowing users to customize colors, and backgrounds.
    - Includes a **pick color button** in the theme selector menu, enabling users to choose their preferred color using **RGB**, **HSL**, or **hex color codes**.
    - Personalization options are accessible in the settings, enabling users to tailor the look and feel to their liking.

13. **Google Apps Integration**:
    - The extension includes a dedicated section for quick access to Google apps such as Drive, Docs, Sheets, Gmail, and more.
    - This ensures seamless productivity for users who rely on Google services.

14. **Language Selector**:
    - A language selector is included in the menu settings, enabling users to choose their preferred language for the extension interface.
    - This feature supports multilingual customization, enhancing accessibility for users worldwide.

&lt;/details&gt;

## 🤝 Contributing

Contributions are welcome! If you’d like to contribute:

1. Follow the guidelines in the [CONTRIBUTING.md](./CONTRIBUTING.md) file.
2. Fork the repository.
3. Create a new branch: `git checkout -b feature/YourFeature`.
4. Commit your changes: `git commit -m &#039;Add Your Feature&#039;`.
5. Push to the branch: `git push origin feature/YourFeature`.
6. Open a pull request.

## ⭐ Star History

Here is the star history chart for the **Material You NewTab** repository. It shows the growth of stars over time, reflecting the increasing interest and support for the project.

&lt;a href=&quot;https://star-history.com/#XengShi/materialYouNewTab&amp;Date&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=XengShi/materialYouNewTab&amp;type=Date&amp;theme=dark&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=XengShi/materialYouNewTab&amp;type=Date&quot; /&gt;
   &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=XengShi/materialYouNewTab&amp;type=Date&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;

## ❓ Issues and Support

- If you encounter any issues or bugs, feel free to open an issue on [GitHub](https://github.com/XengShi/materialYouNewTab/issues).
- For general questions or support, you can contact the repository maintainers through the **Telegram group**: [Join here](https://t.me/+i-ekvlM7yoU1Yjc1).

## 🛡 Privacy Policy

Material You NewTab respects your privacy. For more details, read our [Privacy Policy](https://xengshi.github.io/materialYouNewTab/privacy-policy.html).

## 📜 License

Copyright (C) 2023-2025 XengShi

This project is licensed under the GNU General Public License v3.0 (GPL-3.0). See the [LICENSE](https://github.com/XengShi/materialYouNewTab/blob/main/LICENSE) file for details.

[

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[Superalgos/Superalgos]]></title>
            <link>https://github.com/Superalgos/Superalgos</link>
            <guid>https://github.com/Superalgos/Superalgos</guid>
            <pubDate>Tue, 03 Jun 2025 00:04:51 GMT</pubDate>
            <description><![CDATA[Free, open-source crypto trading bot, automated bitcoin / cryptocurrency trading software, algorithmic trading bots. Visually design your crypto trading bot, leveraging an integrated charting system, data-mining, backtesting, paper trading, and multi-server crypto bot deployments.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Superalgos/Superalgos">Superalgos/Superalgos</a></h1>
            <p>Free, open-source crypto trading bot, automated bitcoin / cryptocurrency trading software, algorithmic trading bots. Visually design your crypto trading bot, leveraging an integrated charting system, data-mining, backtesting, paper trading, and multi-server crypto bot deployments.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,688</p>
            <p>Forks: 5,851</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre># :small_orange_diamond: Superalgos 1.6.1

![contributors](https://img.shields.io/github/contributors-anon/Superalgos/Superalgos?label=Contributors)
![pull-activity](https://img.shields.io/github/issues-pr-closed-raw/Superalgos/Superalgos?color=blueviolet)
![last-commit](https://img.shields.io/github/last-commit/Superalgos/Superalgos/develop?label=last%20commit%20to%20develop)
![bot-friendliness](https://img.shields.io/badge/Bot%20Friendliness%20Level-119%25-yellow)

# :small_orange_diamond: Table of Contents

## Main Topics

- [Introduction](#small_orange_diamond-introduction)
- [Before You Begin](#small_orange_diamond-before-you-begin)
- [Getting Started](#small_orange_diamond-getting-started)
- [Installation Options](#small_orange_diamond-installation-options)
- [Installation for Developers and Contributors](#small_orange_diamond-installation-for-developers-and-contributors)
  - [Prerequisites](#prerequisites)
  - [Superalgos Platform Client Installation](#superalgos-platform-client-installation)
- [Usage](#small_orange_diamond-usage)
- [Uninstall](#small_orange_diamond-uninstall)
- [Get In Touch](#small_orange_diamond-get-in-touch)
- [Other Resources](#small_orange_diamond-other-resources)
- [Contributing](#small_orange_diamond-contributing)
- [License](#small_orange_diamond-license)

## Appendix

- [Prerequisites Notes](#small_orange_diamond-prerequisites-notes)
- [Troubleshooting Dependencies Installation](#small_orange_diamond-troubleshooting-dependencies-installation)
- [WSL2 VSCode IDE Environment Setup](#small_orange_diamond-wsl2-vscode-ide-environment-setup)
- [Running Superalgos on a Headless Linux Server as a Daemon](#small_orange_diamond-running-superalgos-on-a-headless-linux-server-as-a-daemon)


# :small_orange_diamond: Introduction

**[Superalgos](https://superalgos.org/) is a community-owned open-source project with a decentralized and token-incentivized Social Trading Network crowdsourcing superpowers for retail traders.**

We are an open and welcoming community nurtured and incentivized with the project&#039;s native [Superalgos (SA) Token](https://superalgos.org/token-overview.shtml), which is distributed among contributors to accelerate development.

&gt; :white_check_mark: Join the [Telegram Community Group](https://t.me/superalgoscommunity) or the new [Discord Server](https://discord.gg/CGeKC6WQQb) to connect with other users!

Superalgos is a vast project. The focus of this README file is the Superalgos Platform. Please, visit [the platform&#039;s page on the website](https://superalgos.org/crypto-trading-bots-platform.shtml) for an overview of features and functionality.

![superalgos-readme](https://user-images.githubusercontent.com/13994516/106380124-844d8980-63b0-11eb-9bd9-4f977b6c183b.gif)

# :small_orange_diamond: Before You Begin

Worth noting before you start:

* Online Demo | To get a feel of what Superalgos is about without installing anything, take the (limited) [online demo](https://superalgos.org/crypto-trading-bots-platform-demo.shtml) for a spin!

* System requirements | Learn about the [minimum hardware](https://superalgos.org/crypto-trading-bots-system-requirements.shtml) required to run the platform on different settings.

* FAQS:

  * [Before you begin](https://superalgos.org/faqs-crypto-trading-bots-before-you-being.shtml)

  * [Trust and safety](https://superalgos.org/faqs-crypto-trading-bots-trust-and-safety.shtml)

  * [Trading with Superalgos](https://superalgos.org/faqs-crypto-trading-bots-trading-with-superalgos.shtml)

  * [Open-source strategies](https://superalgos.org/faqs-crypto-trading-bots-open-source-crypto-trading-bots-strategies.shtml)

* Documentation | The platform features interactive and searchable documentation counting over 1500 pages. The Docs are available [on the website](https://superalgos.org/Docs/Foundations/Book/user-manual.shtml) and within the app. The in-app version of the Docs interacts with the app itself and is likely more up-to-date than the web version.

# :small_orange_diamond: Getting Started

Superalgos is an ever-growing ecosystem of tools and applications. This guide will walk you through the main ways to install the Superalgos Platform — the flagship application of the ecosystem.

Once you install and launch the app, a series of interactive tutorials take you by the hand and walk you around the system while you learn the basic skills required to use the interface, mine data, backtest strategies, and even run a live trading session. It is highly recommended to do all tutorials, as they are carefully crafted to make your onboarding as easy as possible. 

&gt; :white_check_mark: **NOTE:** Tutorials are the absolute best way to tackle the learning curve. You should do all tutorials before you start exploring other avenues on your own.

![welcome-tutorial-00](https://user-images.githubusercontent.com/13994516/107038771-4a6bf100-67bd-11eb-92e0-353525a972a9.gif)

The tutorial uses Binance or Binance US as the exchange of choice. If you don&#039;t have an account with Binance or Binance US, you will still be able to follow 100% of the tutorial. When you get to the live trading section, keep going even if you don&#039;t intend to run the session. You will learn how to work with other exchanges later on. If both Binance and Binance US are blocked in your region, you will need to set up a different exchange from the get-go. 

# :small_orange_diamond: Installation Options

There are a few methods to install the Superalgos Platform.

We will briefly describe the options available. Click the link to go to the specific README file with further instructions for the installation method of your choice.

1. [Developers and Contributors](#small_orange_diamond-installation-for-developers-and-contributors) | This is the default installation for developers that wish to dive into the codebase and contribute to making Superalgos better. It is also the recommended installation for non-developers who wish to contribute improvements to the Docs, translations, design work, and so on. Instructions are available further down this same file.

2. [Docker deployments](README_Docker.md) | Docker offers the ability to install the platform in a clean and isolated environment. The standard Docker installation is not optimized for development or contributions, but some workarounds are offered.

3. [Raspberry Pi](README_RaspberryPi.md) | Raspberry Pi installations are a great economical option for running live trading sessions. You will need to be comfortable with either options 1 or 2 above to proceed here.

4. [Public Cloud](README_PublicCloud.md) | This is a great option for those who wish to run live trading sessions in the cloud. You will need to be comfortable with option 3 above to proceed here.

&gt; :white_check_mark: **ABOUT REMOTE INSTALLATIONS AND MINIMALIST HARDWARE:** Remote installations and minimalist hardware — both virtual and physical — are better suited for production deployments, where the use of the GUI is minimal. We highly recommend learning Superalgos in a local installation, on a full-size PC. Mastering the system takes time, and the use of the GUI to go through in-app tutorials is crucial during the learning process. Your experience will be orders of magnitude better if you follow this advice: leave remote installations and minimalist hardware for when you are ready to start trading live.

&gt; :white_check_mark: **EXPERIENCING ISSUES INSTALLING SUPERALGOS?** If you&#039;re having trouble installing or running the app for the first time, do not open an issue. Instead, join the [Support Telegram Group](https://t.me/superalgossupport) and follow the instructions on the pinned message to ask for help. You may also join the [new Discord Server](https://discord.gg/CGeKC6WQQb), but bear in mind that the response time tends to be longer. Online support is provided by volunteers — please provide clear information and sufficient context about the issue you are facing, and be mindful of people&#039;s time.

If you opt for the Developers and Contributors Installation (recommended), please keep on reading. Otherwise, click one of the other options above.

# :small_orange_diamond: Installation for Developers and Contributors

This is the purest way of installing Superalgos. It has no limitations to contributing, which is highly appreciated and rewarded with SA tokens, and gives you the most freedom for custom configurations.

All procedures (other than prerequisites) are the same for Windows, Linux, or Mac OS. Raspberry Pi terminal commands have been included for ease of use. Some edge cases are covered separately, further down this README.

## Prerequisites

### :one: Install Node.JS, Git, and Chrome

You will need the latest versions of Node JS and Git installed. You will also need a web browser to access the interface. Google Chrome is recommended because it is the most tested browser being used by the development team and power users.

Follow the installation wizards to install the latest NodeJS and Git. Make sure to follow all the default and recommended settings while installing Git. If desired also install Chrome.

- [Node.js download page](https://nodejs.org/en/download/)

- [Git download page](https://git-scm.com/downloads)

- [Google Chrome download page](https://www.google.com/chrome/)

If you are running headless (i.e. as a server without a monitor attached) then you do not need to install a web browser and you can follow the tutorial for information on connecting remotely to the server.

&gt; :white_check_mark: **ENVIRONMENT-SPECIFIC NOTES**: Additional notes about installing prerequisites on specific environments, distributions and edge cases can be found in the [Prerequisites Notes](#small_orange_diamond-prerequisites-notes) section in the Appendix. We recommend checking these instructions before installing prerequisites manually from the above websites.

&gt; :white_check_mark: **TENSORFLOW NOTE**: If you wish to test the (partial and incomplete) TensorFlow integration, you will also need Python 3.

### :two: Get Your Github.com Personal Access Token

You will need to get an access token from Github.com so that you may authenticate with the service from within the app and the terminal/command line.

If you don&#039;t have a Github.com account, please open one! Once you are logged in, go to the [New Github Personal Access Token Page](https://github.com/settings/tokens/new) and create a new token.

Make sure you give it the repo and workflow scopes. Check the clip below for clarity:

![github-personal-access-token](https://user-images.githubusercontent.com/13994516/161605002-734ddc2a-9cb1-49ec-ac6a-d127850ab64a.gif)

Once you get the token, copy it and save it somewhere on your local machine. You will need it for later steps of the installation process and from time to time also when using Superalgos.

## Superalgos Platform Client Installation

Now that you have all the prerequisites and optional environment configurations set up, we can get to the core installation of Superalgos!

There are four steps required to install Superalgos:

1. Fork the Superalgos Repository

2. Clone Your Fork

3. Install Node Dependencies

4. Install Community Plugins 

Let&#039;s get on with it!

### :one: Fork the Superalgos Repository

Scroll this page to the top. Find and click the **Fork** button to create your fork/copy of this repository. 

&gt; :white_check_mark: **NOTE**: On the page that opens when you click the fork button, Github gives you the option to fork only the master branch by default. You must remove the selection so that you fork all branches instead. Play the following video for clarity.

![fork](https://user-images.githubusercontent.com/83468174/184506791-83a00c44-ddc4-4fa3-9bec-d738532555d7.gif)

To fork Superalgos, you need a Github account. If you don&#039;t have one, go ahead and create it. This was one of the listed pre-requirements.

&gt; :white_check_mark: **NOTE**: A Fork is required so that the setup scripts may build the app from multiple repositories, and also for your contributions to the project. The reason why Superalgos is free and open-source is that the project has set up a collective business in which all users may participate. The way to participate is to [contribute](https://superalgos.org/community-contribute.shtml) to making Superalgos better. The project&#039;s [native SA token](https://superalgos.org/token-overview.shtml) is distributed among contributors as rewards for the value each adds to the project.

### :two: Clone Your Fork

&gt; :white_check_mark: **NOTE**: You will need your Github username and the API token you created earlier.

Once the fork is created, you will land on the page of your fork. Copy the complete URL from your browser&#039;s address bar.

&gt; :white_check_mark: **NOTE**: Notice it is your fork you will be cloning, not the upstream repository.

In your computer/laptop/server, open a command prompt or terminal. Make sure you are in a directory where you have write permissions. 

&gt; :white_check_mark: **NOTE**: On most systems, the terminal will open in your user&#039;s home directory. It&#039;s better to install Superalgos in the root folder of any of your drives, or at least in a path that is not too long. Some systems may experience issues with long paths.

Clone the git repository using the command:

```sh
git clone &lt;URL of your Superalgos fork&gt;
```

For example, if your Github username is John, the command will look like this:

```sh
git clone https://github.com/John/Superalgos
```

This creates the `Superalgos` folder in the current directory, which contains the whole installation.

### :three: Install Node Dependencies

After the Superalgos directory has been installed, you need to set up the necessary node dependencies. In the same command prompt or terminal you just used, type the following:

```sh
cd Superalgos
```

That should take you inside the Superalgos folder created by the `git clone` command earlier. The `node setup` command installs the dependencies (notice there are a few options you may use).

```sh
node setup
```

Available Options:

```sh
node setup &lt;options&gt;
```

| Option | Description |
| --- | --- |
| `shortcuts` | Use this option to create desktop shortcuts. Otherwise, you will launch the app from the command line/terminal. |
| `tensorflow` | Use this option to include the TensorFlow dependencies, only if you intend to test the (partial and incomplete) TensorFlow integration. |

If you experience any issues installing dependencies, check the [Troubleshooting Dependencies Installation](#small_orange_diamond-troubleshooting-dependencies-installation) section in the Appendix below.

### :four: Install Community Plugins 

Before using the software, you will need to install the plugins built by the community. To do so, just run this command from the Superalgos main folder:

```sh
node setupPlugins &lt;Your-Github-Username&gt; &lt;Your-Github-Personal-Access-Token&gt;
```

For example:

```sh
node setupPlugins John ghz_2pBD4Sas0iYtwQGPjTq1Xlm3Ot4KpH3RLcr5
```

&gt; :white_check_mark: **NOTE**: This is the token you created during earlier steps!

This script is going to fork all Community Plugins repositories into your own Github account, and then it will clone each of these repositories into your local `Superalgos/Plugins` folder. The process is designed in a way that if someday a new type of plugin is added, you just need to run this command again and it will fork the new repo and clone it. This script will also find any missing forks needed and clone them too. You are safe running this script whenever you think is good.

&gt; :white_check_mark: **NOTE**: If you ever have issues with your Plugins repos, you can delete individual folders inside `Superalgos/Plugins` and run this script to fix the problems for you. Also, if you have any issues with any of your plugin forks in your Github account, you can delete the offending fork and run this script again to fix the problem. 

**Congratulations! Your setup is complete. Now you may finally run the app for the first time. Please, follow the usage instructions below!**

### **OPTIONAL:** Update Forked Repositories from The Superalgos Upstream Repositories

In case you are re-installing the platform from an older fork, you may want to update your fork&#039;s repositories.

Prerequisites:
`node setup` and `node setupPlugins` commands must be executed beforehand.

```sh
node updateGithubRepos
```

# :small_orange_diamond: Usage

## Run the Client and GUI

### Using the shortcuts

If you ran `node setup shortcuts` while installing dependencies, then you should have a desktop icon that you can double-click to launch the Superalgos application. A terminal window will show the server is running, and a browser window will open with the GUI.

### Using the Command Line

To run Superalgos, go to the Superalgos directory/folder and run this command:

```sh
node platform
```

Options usage:

```sh
node platform &lt;options&gt; &lt;project&gt; &lt;workspace&gt;
```

| Option | Description |
| --- | --- |
| `minMemo` | Run with minimal memory footprint. This is critical for running on platforms with 8GB of RAM or less, like a Raspberry Pi. |
| `noBrowser` | Do not open the GUI in a browser. This is useful on headless servers where a UI is not available. |

To load a specific workspace on launch, add any option you may require, then the project, then the workspace. For example, to load the Blank-Template workspace of the Foundations project with no options:

```sh
node platform Foundations Blank-Template
```

The Client will run on your terminal and the GUI will launch on your default browser. If Chrome/Safari is not your default browser, copy the URL, close the browser, open Chrome/Safari, and paste the URL. Be patient... it takes a few seconds to fully load the GUI.

## Usage Notes

We are testing the UI on Google Chrome and Safari on macOS only. It may work on other browsers as well — or not. If you are running on a different browser and ever need support, make sure you mention that fact upfront, or even better, try on Chrome/Safari first.

&gt; :white_check_mark: **TIP**: If your computer has 8 GB of RAM or less, use `node platform minMemo` to run the system with minimal RAM requirements.

# :small_orange_diamond: Uninstall

Superalgos writes nothing outside of the `Superalgos` folder other than shortcut files. To quickly remove the shortcut files, open a terminal or command prompt, navigate to your main Superalgos directory, and type the following command:

```sh
node uninstall
```

Then simply delete the `Superalgos` folder to completely remove the application.

# :small_orange_diamond: Get In Touch!

&gt; :warning: **BEWARE OF IMPERSONATORS — SCAMMERS ARE LURKING!**
&gt;
&gt; Superalgos Admins, the Founding Team, and Community Mods will never contact you directly unless you contact them first. We will never ask you for API keys, coins, or cash. We will never ask you to trust us in any way. Our [Community Safety Policy](https://superalgos.org/community-safety-policy.shtml) explains why. 
&gt; 
&gt; **In short, we want to make it clear that if someone contacts you directly claiming to work with or for the project, it is a scam.**
&gt;
&gt; Please report scammers in the Community group so that they may be banned and to increase awareness of the problem, but also block them and report them to Telegram if the option is available.

We just opened a brand new [Discord server for Support and the Community](https://discord.gg/CGeKC6WQQb).

That said, support questions tend to get faster responses in the [Support Telegram Group](https://t.me/superalgossupport).

We also meet on other [Telegram groups](https://superalgos.org/community-join.shtml), where it all started!

# :small_orange_diamond: Other Resources

- Web Site

  - For an overview of what Superalgos can do for you, check the [Superalgos Website](https://superalgos.org/).

  - [List of community resources](https://superalgos.org/community-resources.shtml) featuring written, audiovisual, and interactive content.

- Telegram

  - For official

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[google-ai-edge/model-explorer]]></title>
            <link>https://github.com/google-ai-edge/model-explorer</link>
            <guid>https://github.com/google-ai-edge/model-explorer</guid>
            <pubDate>Tue, 03 Jun 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[A modern model graph visualizer and debugger]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/google-ai-edge/model-explorer">google-ai-edge/model-explorer</a></h1>
            <p>A modern model graph visualizer and debugger</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,224</p>
            <p>Forks: 107</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre># Model Explorer [![PyPI version](https://badge.fury.io/py/ai-edge-model-explorer.svg)](https://badge.fury.io/py/ai-edge-model-explorer) [![npm version](https://badge.fury.io/js/ai-edge-model-explorer-visualizer.svg)](https://badge.fury.io/js/ai-edge-model-explorer-visualizer)

Model Explorer offers an intuitive and hierarchical visualization of model
graphs. It organizes model operations into nested layers, enabling users to
dynamically expand or collapse these layers. It also provides a range of
features to facilitate model exploration and debugging, including the ability to
highlight input and output operations, overlay metadata on nodes, display layers
in interactive pop-ups, perform searches, show identical layers, GPU-accelerated
graph rendering, among others. It currently supports TFLite, TF, TFJS, MLIR, and
PyTorch (Exported Program) model format, and provides an extension framework for
developers to easily add support for additional formats.

&lt;img width=&quot;890&quot; alt=&quot;Home page screenshot&quot; src=&quot;screenshots/main_ui.png&quot;&gt;

&lt;br&gt;

To start using Model Explorer, run:

```shell
$ pip install ai-edge-model-explorer
$ model-explorer
```

Or give it a try on [Hugging Face](https://huggingface.co/spaces/google/model-explorer) (only support visualizing uploaded models)

Please check out our [Wiki](https://github.com/google-ai-edge/model-explorer/wiki) for
more details:

- [Installation](https://github.com/google-ai-edge/model-explorer/wiki/1.-Installation)
- [User Guide](https://github.com/google-ai-edge/model-explorer/wiki/2.-User-Guide)
- [Command Line Guide](https://github.com/google-ai-edge/model-explorer/wiki/3.-Command-Line-Guide)
- [API Guide](https://github.com/google-ai-edge/model-explorer/wiki/4.-API-Guide)
- [Run in Colab Notebook](https://github.com/google-ai-edge/model-explorer/wiki/5.-Run-in-Colab-Notebook)
- [Develop Adapter Extension](https://github.com/google-ai-edge/model-explorer/wiki/6.-Develop-Adapter-Extension)
- [Limitations and Known Issues](https://github.com/google-ai-edge/model-explorer/wiki/7.-Limitations-and-Known-Issues)

We invite you to participate in research studies on Model Explorer. Sign up [here](https://docs.google.com/forms/d/e/1FAIpQLScGOkQOIKmIzkt3P0ywhSfwbl-TRb2epEV5J8NTXEesZqc3vw/viewform).

## NPM package

The core visualizer component is available in the
[ai-edge-model-explorer-visualizer](https://www.npmjs.com/package/ai-edge-model-explorer-visualizer)
npm pacakge. See the [README.md](src/ui/custom_element_npm/README.md) for
instructions and check out its [demos](src/custom_element_demos/).

## Community-contributed adapters

- ONNX Adapter: https://github.com/justinchuby/model-explorer-onnx

## Contributions

You are invited to create custom adapters to add support for additional model formats. Please refer to our [Develop Adapter Extension](https://github.com/google-ai-edge/model-explorer/wiki/6.-Develop-Adapter-Extension) guide. We will gladly consider pull requests to add links to your adapter&#039;s GitHub repository and PyPI package to this README.

## Resources

- [Introduction video](https://youtu.be/DgkLKybBVcs?si=eLmNTE66RlKkLQcT) on YouTube
- [Blog post](https://research.google/blog/model-explorer/) on Google Research Blog
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[tidalcycles/strudel]]></title>
            <link>https://github.com/tidalcycles/strudel</link>
            <guid>https://github.com/tidalcycles/strudel</guid>
            <pubDate>Tue, 03 Jun 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[Web-based environment for live coding algorithmic patterns, incorporating a faithful port of TidalCycles to JavaScript]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/tidalcycles/strudel">tidalcycles/strudel</a></h1>
            <p>Web-based environment for live coding algorithmic patterns, incorporating a faithful port of TidalCycles to JavaScript</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,200</p>
            <p>Forks: 168</p>
            <p>Stars today: 19 stars today</p>
            <h2>README</h2><pre># strudel

[![Strudel test status](https://github.com/tidalcycles/strudel/actions/workflows/test.yml/badge.svg)](https://github.com/tidalcycles/strudel/actions) [![DOI](https://zenodo.org/badge/450927247.svg)](https://doi.org/10.5281/zenodo.6659278)

An experiment in making a [Tidal](https://github.com/tidalcycles/tidal/) using web technologies. This software is a bit more stable now, but please continue to tread carefully.

- Try it here: &lt;https://strudel.cc&gt;
- Docs: &lt;https://strudel.cc/learn&gt;
- Technical Blog Post: &lt;https://loophole-letters.vercel.app/strudel&gt;
- 1 Year of Strudel Blog Post: &lt;https://loophole-letters.vercel.app/strudel1year&gt;
- 2 Years of Strudel Blog Post: &lt;https://strudel.cc/blog/#year-2&gt;

## Running Locally

After cloning the project, you can run the REPL locally:

1. Install [Node.js](https://nodejs.org/)
2. Install [pnpm](https://pnpm.io/installation)
3. Install dependencies by running the following command:
   ```bash
   pnpm i
   ```
4. Run the development server:
   ```bash
   pnpm dev
   ```

## Using Strudel In Your Project

This project is organized into many [packages](./packages), which are also available on [npm](https://www.npmjs.com/search?q=%40strudel).

Read more about how to use these in your own project [here](https://strudel.cc/technical-manual/project-start).

You will need to abide by the terms of the [GNU Affero Public Licence v3](LICENSE.md). As such, Strudel code can only be shared within free/open source projects under the same license -- see the license for details.

Licensing info for the default sound banks can be found over on the [dough-samples](https://github.com/felixroos/dough-samples/blob/main/README.md) repository.

## Contributing

There are many ways to contribute to this project! See [contribution guide](./CONTRIBUTING.md).

&lt;a href=&quot;https://github.com/tidalcycles/strudel/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=tidalcycles/strudel&quot; /&gt;
&lt;/a&gt;

Made with [contrib.rocks](https://contrib.rocks).

## Community

There is a #strudel channel on the TidalCycles discord: &lt;https://discord.com/invite/HGEdXmRkzT&gt;

You can also ask questions and find related discussions on the tidal club forum: &lt;https://club.tidalcycles.org/&gt;

The discord and forum is shared with the haskell (tidal) and python (vortex) siblings of this project.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[advplyr/audiobookshelf]]></title>
            <link>https://github.com/advplyr/audiobookshelf</link>
            <guid>https://github.com/advplyr/audiobookshelf</guid>
            <pubDate>Tue, 03 Jun 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[Self-hosted audiobook and podcast server]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/advplyr/audiobookshelf">advplyr/audiobookshelf</a></h1>
            <p>Self-hosted audiobook and podcast server</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,939</p>
            <p>Forks: 605</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[jellyfin/jellyfin-web]]></title>
            <link>https://github.com/jellyfin/jellyfin-web</link>
            <guid>https://github.com/jellyfin/jellyfin-web</guid>
            <pubDate>Tue, 03 Jun 2025 00:04:47 GMT</pubDate>
            <description><![CDATA[The Free Software Media System - Official Web Client]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/jellyfin/jellyfin-web">jellyfin/jellyfin-web</a></h1>
            <p>The Free Software Media System - Official Web Client</p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,812</p>
            <p>Forks: 1,472</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;Jellyfin Web&lt;/h1&gt;
&lt;h3 align=&quot;center&quot;&gt;Part of the &lt;a href=&quot;https://jellyfin.org&quot;&gt;Jellyfin Project&lt;/a&gt;&lt;/h3&gt;

---

&lt;p align=&quot;center&quot;&gt;
&lt;img alt=&quot;Logo Banner&quot; src=&quot;https://raw.githubusercontent.com/jellyfin/jellyfin-ux/master/branding/SVG/banner-logo-solid.svg?sanitize=true&quot;/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://github.com/jellyfin/jellyfin-web&quot;&gt;
&lt;img alt=&quot;GPL 2.0 License&quot; src=&quot;https://img.shields.io/github/license/jellyfin/jellyfin-web.svg&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/jellyfin/jellyfin-web/releases&quot;&gt;
&lt;img alt=&quot;Current Release&quot; src=&quot;https://img.shields.io/github/release/jellyfin/jellyfin-web.svg&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://translate.jellyfin.org/projects/jellyfin/jellyfin-web/?utm_source=widget&quot;&gt;
&lt;img src=&quot;https://translate.jellyfin.org/widgets/jellyfin/-/jellyfin-web/svg-badge.svg&quot; alt=&quot;Translation Status&quot;/&gt;
&lt;/a&gt;
&lt;br/&gt;
&lt;a href=&quot;https://opencollective.com/jellyfin&quot;&gt;
&lt;img alt=&quot;Donate&quot; src=&quot;https://img.shields.io/opencollective/all/jellyfin.svg?label=backers&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://features.jellyfin.org&quot;&gt;
&lt;img alt=&quot;Feature Requests&quot; src=&quot;https://img.shields.io/badge/fider-vote%20on%20features-success.svg&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://matrix.to/#/+jellyfin:matrix.org&quot;&gt;
&lt;img alt=&quot;Chat on Matrix&quot; src=&quot;https://img.shields.io/matrix/jellyfin:matrix.org.svg?logo=matrix&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://www.reddit.com/r/jellyfin&quot;&gt;
&lt;img alt=&quot;Join our Subreddit&quot; src=&quot;https://img.shields.io/badge/reddit-r%2Fjellyfin-%23FF5700.svg&quot;/&gt;
&lt;/a&gt;
&lt;/p&gt;

Jellyfin Web is the frontend used for most of the clients available for end users, such as desktop browsers, Android, and iOS. We welcome all contributions and pull requests! If you have a larger feature in mind please open an issue so we can discuss the implementation before you start. Translations can be improved very easily from our &lt;a href=&quot;https://translate.jellyfin.org/projects/jellyfin/jellyfin-web&quot;&gt;Weblate&lt;/a&gt; instance. Look through the following graphic to see if your native language could use some work!

&lt;a href=&quot;https://translate.jellyfin.org/engage/jellyfin/?utm_source=widget&quot;&gt;
&lt;img src=&quot;https://translate.jellyfin.org/widgets/jellyfin/-/jellyfin-web/multi-auto.svg&quot; alt=&quot;Detailed Translation Status&quot;/&gt;
&lt;/a&gt;

## Build Process

### Dependencies

- [Node.js](https://nodejs.org/en/download)
- npm (included in Node.js)

### Getting Started

1. Clone or download this repository.

   ```sh
   git clone https://github.com/jellyfin/jellyfin-web.git
   cd jellyfin-web
   ```

2. Install build dependencies in the project directory.

   ```sh
   npm install
   ```

3. Run the web client with webpack for local development.

   ```sh
   npm start
   ```

4. Build the client with sourcemaps available.

   ```sh
   npm run build:development
   ```

## Directory Structure

&gt; [!NOTE]
&gt; We are in the process of refactoring to a [new structure](https://forum.jellyfin.org/t-proposed-update-to-the-structure-of-jellyfin-web) based on [Bulletproof React](https://github.com/alan2207/bulletproof-react/blob/master/docs/project-structure.md) architecture guidelines.
&gt; Most new code should be organized under the appropriate app directory unless it is common/shared.

```
.
└── src
    ├── apps
    │   ├── dashboard           # Admin dashboard app
    │   ├── experimental        # New experimental app
    │   ├── stable              # Classic (stable) app
    │   └── wizard              # Startup wizard app
    ├── assets                  # Static assets
    ├── components              # Higher order visual components and React components
    ├── constants               # Common constant values
    ├── controllers             # Legacy page views and controllers 🧹 ❌
    ├── elements                # Basic webcomponents and React equivalents 🧹
    ├── hooks                   # Custom React hooks
    ├── lib                     # Reusable libraries
    │   ├── globalize           # Custom localization library
    │   ├── jellyfin-apiclient  # Supporting code for the deprecated apiclient package
    │   ├── legacy              # Polyfills for legacy browsers
    │   ├── navdrawer           # Navigation drawer library for classic layout
    │   └── scroller            # Content scrolling library
    ├── plugins                 # Client plugins (features dynamically loaded at runtime)
    ├── scripts                 # Random assortment of visual components and utilities 🐉 ❌
    ├── strings                 # Translation files (only commit changes to en-us.json)
    ├── styles                  # Common app Sass stylesheets
    ├── themes                  # Sass and MUI themes
    ├── types                   # Common TypeScript interfaces/types
    └── utils                   # Utility functions
```

- ❌ &amp;mdash; Deprecated, do **not** create new files here
- 🧹 &amp;mdash; Needs cleanup
- 🐉 &amp;mdash; Serious mess (Here be dragons)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[phaserjs/phaser]]></title>
            <link>https://github.com/phaserjs/phaser</link>
            <guid>https://github.com/phaserjs/phaser</guid>
            <pubDate>Tue, 03 Jun 2025 00:04:46 GMT</pubDate>
            <description><![CDATA[Phaser is a fun, free and fast 2D game framework for making HTML5 games for desktop and mobile web browsers, supporting Canvas and WebGL rendering.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/phaserjs/phaser">phaserjs/phaser</a></h1>
            <p>Phaser is a fun, free and fast 2D game framework for making HTML5 games for desktop and mobile web browsers, supporting Canvas and WebGL rendering.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 37,997</p>
            <p>Forks: 7,125</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre># Phaser - HTML5 Game Framework

![Phaser Banner](changelog/assets/phaser-banner.png &quot;Phaser Banner&quot;)

[![Discord](https://img.shields.io/discord/244245946873937922?style=for-the-badge)](https://discord.gg/phaser)
![JSDelivr](https://img.shields.io/jsdelivr/npm/hm/phaser?style=for-the-badge)
![GitHub](https://img.shields.io/github/downloads/phaserjs/phaser/total?style=for-the-badge)

Phaser is a fast, free, and fun open source HTML5 game framework that offers WebGL and Canvas rendering across desktop and mobile web browsers and has been actively developed for over 10 years.

Games can be built for the web, or as YouTube Playables, Discord Activities, Twitch Overlays or compiled to iOS, Android, Steam and native apps using 3rd party tools. You can use JavaScript or TypeScript for development. Phaser supports over 40 different front-end frameworks including React and Vue.

Phaser is commercially developed and maintained by **Phaser Studio Inc** along with our fantastic open source community. As a result of rapid support, and a developer friendly API, Phaser is currently one of the [most starred](https://github.com/collections/javascript-game-engines) game frameworks on GitHub.

Interested in learning more? Click the image below to watch our intro video.

[![YouTube](http://i.ytimg.com/vi/jHTRu4iNTcA/maxresdefault.jpg)](https://www.youtube.com/watch?v=jHTRu4iNTcA)

## Create Phaser Game App

The easiest way to get started quickly with Phaser is our `create-phaser-game` app. This CLI tool presents an interactive selection of official project templates and demo games. Issue the command, answer some questions and the app will download and configure the right package for you.

```bash
npm create @phaserjs/game@latest
npx @phaserjs/create-game@latest
yarn create @phaserjs/game
pnpm create @phaserjs/game@latest
bun create @phaserjs/game@latest
```

We support all of the following frameworks and bundlers:

| Frameworks | Bundlers |
| --------- | ------- |
| Vue.js | Vite |
| React | Rollup |
| Angular | Parcel |
| Next.js | Webpack |
| SolidJS | ESBuild |
| Svelte | Import Map |
| Remix | Bun |

Most come in both JavaScript and TypeScript versions.

[View the create game app tutorial](https://phaser.io/tutorials/create-game-app).

## Installing Phaser from NPM

Install via [npm](https://www.npmjs.com/package/phaser):

```bash
npm install phaser
```

## Using Phaser from a CDN

[Phaser is on jsDelivr](https://www.jsdelivr.com/package/npm/phaser) which is a &quot;super-fast CDN for developers&quot;. Include _either_ of the following in your html:

```html
&lt;script src=&quot;//cdn.jsdelivr.net/npm/phaser@3.88.2/dist/phaser.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;//cdn.jsdelivr.net/npm/phaser@3.88.2/dist/phaser.min.js&quot;&gt;&lt;/script&gt;
```

It is also available from Cloudflare&#039;s [cdnjs](https://cdnjs.com/libraries/phaser):

```html
&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/phaser/3.88.2/phaser.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/phaser/3.88.2/phaser.min.js&quot;&gt;&lt;/script&gt;
```

## Phaser TypeScript Definitions

Full TypeScript definitions can be found inside the [types folder](https://github.com/phaserjs/phaser/tree/master/types). They are also referenced in the `types` entry in `package.json`, meaning modern editors such as VSCode will detect them automatically.

Depending on your project, you may need to add the following to your `tsconfig.json` file:

```json
&quot;lib&quot;: [&quot;es6&quot;, &quot;dom&quot;, &quot;dom.iterable&quot;, &quot;scripthost&quot;],
&quot;typeRoots&quot;: [&quot;./node_modules/phaser/types&quot;],
&quot;types&quot;: [&quot;Phaser&quot;]
```

## API Documentation

Read our full API Documentation at https://docs.phaser.io/. Use the links at the top of the page to navigate the namespaces, classes, events and Game Objects and also to use the search box.

We maintain documentation for the most recent versions of Phaser on this site.

## Getting Started with Phaser

We recommend the following to begin your journey:

* [Getting Started with Phaser 3](https://phaser.io/tutorials/getting-started-phaser3) (useful if you are completely new to Phaser)
* [Making your first Phaser 3 Game](https://phaser.io/tutorials/making-your-first-phaser-3-game)
* Plus, there are [over 700 Phaser tutorials](https://phaser.io/learn) listed on our website.

New tutorials are being published every week, so check our site for more.

## Phaser by Example Book

We have published a brand-new free 500 page book on game development with Phaser. Learn by building shoot-em-ups, puzzle games, rogue-likes and more.

![Phaser by Example](https://cdn.phaser.io/news/2024/04/phaser-by-example-book.jpg)

Written by long-time prolific Phaser enthusiast Pello Xabier Altadill and Richard Davey, creator of Phaser, it features up-to-date content on building games with Phaser v3.85.

Work through the process of creating a variety of games, allowing you to learn from real-life examples. The games start simple, with an infinite runner game, and then progresses to building a shoot-em-up, a platformer, a puzzle game, a rogue-like, a story game and even 3D and multiplayer games.

It also contains a large section on the core concepts of Phaser, covering the terminology and conventions used by the framework, as well as a comprehensive deep dive into Game Objects.

Register for a free Phaser account to [download the book](https://phaser.io/news/2024/04/phaser-by-example-book).

## Source Code Examples

We have created hundreds of examples and they are all available with full source code and assets. 

Browse our brand new [Phaser Examples site](https://phaser.io/examples).

## Phaser 3 Plugins

Super community member RexRainbow has been publishing Phaser content for years, compiling an impressive catalogue of plugins that all Phaser developers should be aware of.

You&#039;ll find [Phaser Plugins](https://rexrainbow.github.io/phaser3-rex-notes/docs/site/index.html#list-of-my-plugins) that extend the framework with features such as UI controls, text input boxes, Firebase support, Finite State Machines and lots more. His set of [Phaser Notes](https://rexrainbow.github.io/phaser3-rex-notes/docs/site/index.html) are also invaluable reading.

## Phaser Sandbox

The Phaser Sandbox is a fully-configured online editor, ready to go direct in your desktop browser. It&#039;s loaded with all the core versions of Phaser and packed full of handy features. [Register for a free Phaser account](https://phaser.io/register) to create and save your own sandbox entries. Or view one [just like this](https://phaser.io/sandbox/XyqPcjNr).

## Phaser Compressor

Use our powerful new web-based tool to crunch your Phaser bundles down by up to 60%, enabling only the features your game requires.

Read more about [Phaser Compressor](https://phaser.io/news/2024/05/phaser-compressor-released)

## Change Log

We meticulously keep track of new features, updates and bug fixes in our change logs. Each version of Phaser has its own change log:

* [v3.88 Change Log](changelog/3.88/CHANGELOG-v3.88.md)
* [v3.0.0 to v3.87 Change Logs](CHANGELOG.md)

## Have fun!

Grab the source and join the fun!

Phaser wouldn&#039;t have been possible without the fantastic support of the community. Thank you to everyone who supports our work, who shares our belief in the future of HTML5 gaming, and Phaser&#039;s role in that.

Happy coding everyone!

Cheers,

[Rich](mailto:rich@phaser.io) and the whole team at Phaser Studio

![boogie](https://www.phaser.io/images/spacedancer.gif)

**Visit** the [Phaser website](https://phaser.io)&lt;br /&gt;
**Play** some [amazing games](https://phaser.io/games)&lt;br /&gt;
**Learn** By browsing our [API Docs](https://docs.phaser.io), [Support Forum](https://phaser.discourse.group/) and [StackOverflow](https://stackoverflow.com/questions/tagged/phaser-framework)&lt;br /&gt;
**Code Examples?** We&#039;ve over 2000 [Examples](https://phaser.io/examples) to learn from&lt;br /&gt;
**Read** the weekly [Phaser World](https://phaser.world) Newsletter&lt;br /&gt;
**Be Social:** Join us on [Discord](https://discord.com/invite/phaser) and [Reddit](https://www.reddit.com/r/phaser/) or follow us on [BlueSky](https://bsky.app/profile/phaser.io)&lt;br /&gt;

Powered by coffee, anime, pixels and love.

The Phaser logo and characters are &amp;copy; 2011 - 2025 Phaser Studio Inc.

All rights reserved.

&quot;Above all, video games are meant to be just one thing: fun. Fun for everyone.&quot; - Satoru Iwata
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[sveltejs/svelte]]></title>
            <link>https://github.com/sveltejs/svelte</link>
            <guid>https://github.com/sveltejs/svelte</guid>
            <pubDate>Tue, 03 Jun 2025 00:04:45 GMT</pubDate>
            <description><![CDATA[web development for the rest of us]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/sveltejs/svelte">sveltejs/svelte</a></h1>
            <p>web development for the rest of us</p>
            <p>Language: JavaScript</p>
            <p>Stars: 82,893</p>
            <p>Forks: 4,535</p>
            <p>Stars today: 25 stars today</p>
            <h2>README</h2><pre>&lt;a href=&quot;https://svelte.dev&quot;&gt;
	&lt;picture&gt;
		&lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;assets/banner_dark.png&quot;&gt;
		&lt;img src=&quot;assets/banner.png&quot; alt=&quot;Svelte - web development for the rest of us&quot; /&gt;
	&lt;/picture&gt;
&lt;/a&gt;

[![License](https://img.shields.io/npm/l/svelte.svg)](LICENSE.md) [![Chat](https://img.shields.io/discord/457912077277855764?label=chat&amp;logo=discord)](https://svelte.dev/chat)

## What is Svelte?

Svelte is a new way to build web applications. It&#039;s a compiler that takes your declarative components and converts them into efficient JavaScript that surgically updates the DOM.

Learn more at the [Svelte website](https://svelte.dev), or stop by the [Discord chatroom](https://svelte.dev/chat).

## Supporting Svelte

Svelte is an MIT-licensed open source project with its ongoing development made possible entirely by fantastic volunteers. If you&#039;d like to support their efforts, please consider:

- [Becoming a backer on Open Collective](https://opencollective.com/svelte).

Funds donated via Open Collective will be used for compensating expenses related to Svelte&#039;s development such as hosting costs. If sufficient donations are received, funds may also be used to support Svelte&#039;s development more directly.

## Roadmap

You may view [our roadmap](https://svelte.dev/roadmap) if you&#039;d like to see what we&#039;re currently working on.

## Contributing

Please see the [Contributing Guide](CONTRIBUTING.md) and the [`svelte`](packages/svelte) package for information on contributing to Svelte.

## Is svelte.dev down?

Probably not, but it&#039;s possible. If you can&#039;t seem to access any `.dev` sites, check out [this SuperUser question and answer](https://superuser.com/q/1413402).

## License

[MIT](LICENSE.md)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[expressjs/express]]></title>
            <link>https://github.com/expressjs/express</link>
            <guid>https://github.com/expressjs/express</guid>
            <pubDate>Tue, 03 Jun 2025 00:04:44 GMT</pubDate>
            <description><![CDATA[Fast, unopinionated, minimalist web framework for node.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/expressjs/express">expressjs/express</a></h1>
            <p>Fast, unopinionated, minimalist web framework for node.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 67,078</p>
            <p>Forks: 18,767</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[is-a-dev/register]]></title>
            <link>https://github.com/is-a-dev/register</link>
            <guid>https://github.com/is-a-dev/register</guid>
            <pubDate>Tue, 03 Jun 2025 00:04:43 GMT</pubDate>
            <description><![CDATA[Grab your own sweet-looking '.is-a.dev' subdomain.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/is-a-dev/register">is-a-dev/register</a></h1>
            <p>Grab your own sweet-looking '.is-a.dev' subdomain.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,554</p>
            <p>Forks: 12,201</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
   &lt;img alt=&quot;is-a.dev Banner&quot; src=&quot;https://raw.githubusercontent.com/is-a-dev/register/main/media/banner.png&quot;&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
   &lt;img alt=&quot;Domains&quot; src=&quot;https://img.shields.io/github/directory-file-count/is-a-dev/register/domains?color=5c46eb&amp;label=domains&amp;style=for-the-badge&quot;&gt;
   &lt;img alt=&quot;Open Pull Requests&quot; src=&quot;https://img.shields.io/github/issues-raw/is-a-dev/register?color=5c46eb&amp;label=issues&amp;style=for-the-badge&quot;&gt;
   &lt;img alt=&quot;Open Issues&quot; src=&quot;https://img.shields.io/github/issues-pr-raw/is-a-dev/register?color=5c46eb&amp;label=pull%20requests&amp;style=for-the-badge&quot;&gt;
   &lt;br&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;is-a.dev&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;&lt;strong&gt;is-a.dev&lt;/strong&gt; is a service that allows developers to get a sweet-looking &lt;code&gt;.is-a.dev&lt;/code&gt; subdomain for their personal websites.&lt;/p&gt;

## Announcements &amp; Status Updates
Please join our [Discord server](https://discord.gg/is-a-dev-830872854677422150) for announcements, updates &amp; upgrades, and downtime notifications regarding the service.
Not all of these will be posted on GitHub[^1], however they will always be posted in our Discord server.

[^1]: We usually only post announcements on GitHub in the case of a serious incident. In that case, you&#039;ll likely see it at the top of this README file.

&lt;a href=&quot;https://discord.gg/is-a-dev-830872854677422150&quot;&gt;&lt;img alt=&quot;Discord Server&quot; src=&quot;https://invidget.wdh.app/is-a-dev-830872854677422150&quot;&gt;&lt;/a&gt;

# Register
&gt; If you want a more visual guide, check out [this blog post](https://wdh.gg/tX3ghge).

- [Fork](https://github.com/is-a-dev/register/fork) this repository.
- Add a new file called `your-domain-name.json` in the `domains` folder to register `your-domain-name.is-a.dev`.
- [Read the documentation](https://docs.is-a.dev).
   - If you are applying for NS records please read [this](#ns-records).
- Your pull request will be reviewed and merged. *Make sure to keep an eye on it in case we need you to make any changes!*
- After the pull request is merged, please allow up to 24 hours for the changes to propagate.
- Enjoy your new `.is-a.dev` subdomain! Please consider leaving us a star ⭐️ to help support us!

### NS Records
When applying for NS records, please be aware we already support a [wide range of DNS records](https://docs.is-a.dev/faq/#which-records-are-supported), so likely do not not need them. 

In your PR, please explain why you need NS records, including examples, to help mitigate potential abuse. Refer to the [FAQ](https://docs.is-a.dev/faq/#who-can-use-ns-records) for guidelines on allowed usage.

***Pull requests adding NS records without sufficient reasoning will be closed.***

&gt; Also see: [Why are you so strict with NS records](https://docs.is-a.dev/faq/#why-are-you-so-strict-with-ns-records)?

## Report Abuse
If you find any subdomains being used for abusive purposes, please report them by [creating an issue](https://github.com/is-a-dev/register/issues/new?assignees=&amp;labels=report-abuse&amp;projects=&amp;template=report-abuse.md&amp;title=Report+abuse) with the relevant evidence.

---

We are proud to announce that we are supported by Cloudflare&#039;s [Project Alexandria](https://www.cloudflare.com/lp/project-alexandria) sponsorship program. We would not be able to operate without their help! 💖

&lt;a href=&quot;https://www.cloudflare.com&quot;&gt;
   &lt;img alt=&quot;Cloudflare Logo&quot; src=&quot;https://raw.githubusercontent.com/is-a-dev/register/main/media/cloudflare.png&quot; height=&quot;96&quot;&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>