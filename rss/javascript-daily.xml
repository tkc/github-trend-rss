<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Sat, 21 Jun 2025 00:04:42 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[automatisch/automatisch]]></title>
            <link>https://github.com/automatisch/automatisch</link>
            <guid>https://github.com/automatisch/automatisch</guid>
            <pubDate>Sat, 21 Jun 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[The open source Zapier alternative. Build workflow automation without spending time and money.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/automatisch/automatisch">automatisch/automatisch</a></h1>
            <p>The open source Zapier alternative. Build workflow automation without spending time and money.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 11,194</p>
            <p>Forks: 816</p>
            <p>Stars today: 291 stars today</p>
            <h2>README</h2><pre># Automatisch - Open Source Zapier Alternative

![Automatisch - Screenshot](https://user-images.githubusercontent.com/2501931/191562539-e42f6c34-03c7-4dc4-bcf9-7f9473a9c64f.png)

üßê Automatisch is a business automation tool that lets you connect different services like Twitter, Slack, and more to automate your business processes.

üí∏ Automating your workflows doesn&#039;t have to be a difficult or expensive process. You also don&#039;t need any programming knowledge to use Automatisch.

## Advantages

There are other existing solutions in the market, like Zapier and Integromat, so you might be wondering why you should use Automatisch.

‚úÖ One of the main benefits of using Automatisch is that it allows you to store your data on your own servers, which is essential for businesses that handle sensitive user information and cannot risk sharing it with external cloud services. This is especially relevant for industries such as healthcare and finance, as well as for European companies that must adhere to the General Data Protection Regulation (GDPR).

ü§ì Your contributions are vital to the development of Automatisch. As an open-source software, anyone can have an impact on how it is being developed.

üíô No vendor lock-in. If you ever decide that Automatisch is no longer helpful for your business, you can switch to any other provider, which will be easier than switching from the one cloud provider to another since you have all data and flexibility.

## Documentation

The official documentation can be found here: [https://automatisch.io/docs](https://automatisch.io/docs)

## Installation

```bash
# Clone the repository
git clone https://github.com/automatisch/automatisch.git

# Go to the repository folder
cd automatisch

# Start
docker compose up
```

You can use `user@automatisch.io` email address and `sample` password to login to Automatisch. Please do not forget to change your email and password from the settings page.

For other installation types, you can check the [installation](https://automatisch.io/docs/guide/installation) guide.

## Community Links

- [Discord](https://discord.gg/dJSah9CVrC)
- [Twitter](https://twitter.com/automatischio)

## Support

If you have any questions or problems, please visit our GitHub issues page, and we&#039;ll try to help you as soon as possible.

[https://github.com/automatisch/automatisch/issues](https://github.com/automatisch/automatisch/issues)

## License

Automatisch Community Edition (Automatisch CE) is an open-source software with the [AGPL-3.0 license](LICENSE.agpl).

Automatisch Enterprise Edition (Automatisch EE) is a commercial offering with the [Enterprise license](LICENSE.enterprise).

The Automatisch repository contains both AGPL-licensed and Enterprise-licensed files. We maintain a single repository to make development easier.

All files that contain &quot;.ee.&quot; in their name fall under the [Enterprise license](LICENSE.enterprise). All other files fall under the [AGPL-3.0 license](LICENSE.agpl).

See the [LICENSE](LICENSE) file for more information.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[modelcontextprotocol/servers]]></title>
            <link>https://github.com/modelcontextprotocol/servers</link>
            <guid>https://github.com/modelcontextprotocol/servers</guid>
            <pubDate>Sat, 21 Jun 2025 00:04:41 GMT</pubDate>
            <description><![CDATA[Model Context Protocol Servers]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/modelcontextprotocol/servers">modelcontextprotocol/servers</a></h1>
            <p>Model Context Protocol Servers</p>
            <p>Language: JavaScript</p>
            <p>Stars: 55,005</p>
            <p>Forks: 6,297</p>
            <p>Stars today: 225 stars today</p>
            <h2>README</h2><pre># Model Context Protocol servers

This repository is a collection of *reference implementations* for the [Model Context Protocol](https://modelcontextprotocol.io/) (MCP), as well as references
to community built servers and additional resources.

The servers in this repository showcase the versatility and extensibility of MCP, demonstrating how it can be used to give Large Language Models (LLMs) secure, controlled access to tools and data sources.
Each MCP server is implemented with either the [Typescript MCP SDK](https://github.com/modelcontextprotocol/typescript-sdk) or [Python MCP SDK](https://github.com/modelcontextprotocol/python-sdk).

&gt; Note: Lists in this README are maintained in alphabetical order to minimize merge conflicts when adding new items.

## üåü Reference Servers

These servers aim to demonstrate MCP features and the TypeScript and Python SDKs.

- **[Everything](src/everything)** - Reference / test server with prompts, resources, and tools
- **[Fetch](src/fetch)** - Web content fetching and conversion for efficient LLM usage
- **[Filesystem](src/filesystem)** - Secure file operations with configurable access controls
- **[Git](src/git)** - Tools to read, search, and manipulate Git repositories
- **[Memory](src/memory)** - Knowledge graph-based persistent memory system
- **[Sequential Thinking](src/sequentialthinking)** - Dynamic and reflective problem-solving through thought sequences
- **[Time](src/time)** - Time and timezone conversion capabilities

### Archived

The following reference servers are now archived and can be found at [servers-archived](https://github.com/modelcontextprotocol/servers-archived).

- **[AWS KB Retrieval](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/aws-kb-retrieval-server)** - Retrieval from AWS Knowledge Base using Bedrock Agent Runtime
- **[Brave Search](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/brave-search)** - Web and local search using Brave&#039;s Search API
- **[EverArt](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/everart)** - AI image generation using various models
- **[GitHub](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/github)** - Repository management, file operations, and GitHub API integration
- **[GitLab](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/gitlab)** - GitLab API, enabling project management
- **[Google Drive](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/gdrive)** - File access and search capabilities for Google Drive
- **[Google Maps](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/google-maps)** - Location services, directions, and place details
- **[PostgreSQL](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/postgres)** - Read-only database access with schema inspection
- **[Puppeteer](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/puppeteer)** - Browser automation and web scraping
- **[Redis](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/redis)** - Interact with Redis key-value stores
- **[Sentry](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/sentry)** - Retrieving and analyzing issues from Sentry.io
- **[Slack](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/slack)** - Channel management and messaging capabilities
- **[Sqlite](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/sqlite)** - Database interaction and business intelligence capabilities

## ü§ù Third-Party Servers

### üéñÔ∏è Official Integrations

Official integrations are maintained by companies building production ready MCP servers for their platforms.

- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.21st.dev/favicon.ico&quot; alt=&quot;21st.dev Logo&quot; /&gt; **[21st.dev Magic](https://github.com/21st-dev/magic-mcp)** - Create crafted UI components inspired by the best 21st.dev design engineers.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://framerusercontent.com/images/LpSK1tSZweomrAHOMAj9Gea96lA.svg&quot; alt=&quot;Paragon Logo&quot; /&gt; **[ActionKit by Paragon](https://github.com/useparagon/paragon-mcp)** - Connect to 130+ SaaS integrations (e.g. Slack, Salesforce, Gmail) with Paragon‚Äôs [ActionKit](https://www.useparagon.com/actionkit) API.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://invoxx-public-bucket.s3.eu-central-1.amazonaws.com/frontend-resources/adfin-logo-small.svg&quot; alt=&quot;Adfin Logo&quot; /&gt; **[Adfin](https://github.com/Adfin-Engineering/mcp-server-adfin)** - The only platform you need to get paid - all payments in one place, invoicing and accounting reconciliations with [Adfin](https://www.adfin.com/).
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.agentql.com/favicon/favicon.png&quot; alt=&quot;AgentQL Logo&quot; /&gt; **[AgentQL](https://github.com/tinyfish-io/agentql-mcp)** - Enable AI agents to get structured data from unstructured web with [AgentQL](https://www.agentql.com/).
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://agentrpc.com/favicon.ico&quot; alt=&quot;AgentRPC Logo&quot; /&gt; **[AgentRPC](https://github.com/agentrpc/agentrpc)** - Connect to any function, any language, across network boundaries using [AgentRPC](https://www.agentrpc.com/).
- **[Agentset](https://github.com/agentset-ai/mcp-server)** - RAG for your knowledge base connected to [Agentset](https://agentset.ai).
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://aiven.io/favicon.ico&quot; alt=&quot;Aiven Logo&quot; /&gt; **[Aiven](https://github.com/Aiven-Open/mcp-aiven)** - Navigate your [Aiven projects](https://go.aiven.io/mcp-server) and interact with the PostgreSQL¬Æ, Apache Kafka¬Æ, ClickHouse¬Æ and OpenSearch¬Æ services
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.alation.com/resource-center/download/7p3vnbbznfiw/34FMtBTex5ppvs2hNYa9Fc/c877c37e88e5339878658697c46d2d58/Alation-Logo-Bug-Primary.svg&quot; alt=&quot;Alation Logo&quot; /&gt; **[Alation](https://github.com/Alation/alation-ai-agent-sdk)** - Unlock the power of the enterprise Data Catalog by harnessing tools provided by the Alation MCP server.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.algolia.com/files/live/sites/algolia-assets/files/icons/algolia-logo-for-favicon.svg&quot; alt=&quot;Algolia Logo&quot; /&gt; **[Algolia MCP](https://github.com/algolia/mcp-node)** Algolia MCP Server exposes a natural language interface to query, inspect, and manage Algolia indices and configs. Useful for monitoring, debugging and optimizing search performance within your agentic workflows. See [demo](https://www.youtube.com/watch?v=UgCOLcDI9Lg).
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://img.alicdn.com/imgextra/i4/O1CN01epkXwH1WLAXkZfV6N_!!6000000002771-2-tps-200-200.png&quot; alt=&quot;Alibaba Cloud AnalyticDB for MySQL Logo&quot; /&gt; **[Alibaba Cloud AnalyticDB for MySQL](https://github.com/aliyun/alibabacloud-adb-mysql-mcp-server)** - Connect to a [AnalyticDB for MySQL](https://www.alibabacloud.com/en/product/analyticdb-for-mysql) cluster for getting database or table metadata, querying and analyzing data.It will be supported to add the openapi for cluster operation in the future.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://github.com/aliyun/alibabacloud-adbpg-mcp-server/blob/master/images/AnalyticDB.png&quot; alt=&quot;Alibaba Cloud AnalyticDB for PostgreSQL Logo&quot; /&gt; **[Alibaba Cloud AnalyticDB for PostgreSQL](https://github.com/aliyun/alibabacloud-adbpg-mcp-server)** - An MCP server to connect to [AnalyticDB for PostgreSQL](https://github.com/aliyun/alibabacloud-adbpg-mcp-server) instances, query and analyze data.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://img.alicdn.com/imgextra/i3/O1CN0101UWWF1UYn3rAe3HU_!!6000000002530-2-tps-32-32.png&quot; alt=&quot;DataWorks Logo&quot; /&gt; **[Alibaba Cloud DataWorks](https://github.com/aliyun/alibabacloud-dataworks-mcp-server)** - A Model Context Protocol (MCP) server that provides tools for AI, allowing it to interact with the [DataWorks](https://www.alibabacloud.com/help/en/dataworks/) Open API through a standardized interface. This implementation is based on the Alibaba Cloud Open API and enables AI agents to perform cloud resources operations seamlessly.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://opensearch-shanghai.oss-cn-shanghai.aliyuncs.com/ouhuang/aliyun-icon.png&quot; alt=&quot;Alibaba Cloud OpenSearch Logo&quot; /&gt; **[Alibaba Cloud OpenSearch](https://github.com/aliyun/alibabacloud-opensearch-mcp-server)** - This MCP server equips AI Agents with tools to interact with [OpenSearch](https://help.aliyun.com/zh/open-search/?spm=5176.7946605.J_5253785160.6.28098651AaYZXC) through a standardized and extensible interface.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://github.com/aliyun/alibaba-cloud-ops-mcp-server/blob/master/image/alibaba-cloud.png&quot; alt=&quot;Alibaba Cloud OPS Logo&quot; /&gt; **[Alibaba Cloud OPS](https://github.com/aliyun/alibaba-cloud-ops-mcp-server)** - Manage the lifecycle of your Alibaba Cloud resources with [CloudOps Orchestration Service](https://www.alibabacloud.com/en/product/oos) and Alibaba Cloud OpenAPI.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://github.com/aliyun/alibabacloud-rds-openapi-mcp-server/blob/main/assets/alibabacloudrds.png&quot; alt=&quot;Alibaba Cloud RDS MySQL Logo&quot; /&gt; **[Alibaba Cloud RDS](https://github.com/aliyun/alibabacloud-rds-openapi-mcp-server)** - An MCP server designed to interact with the Alibaba Cloud RDS OpenAPI, enabling programmatic management of RDS resources via an LLM.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://files.alpaca.markets/webassets/favicon-32x32.png&quot; alt=&quot;Alpaca Logo&quot; /&gt; **[Alpaca](https://github.com/alpacahq/alpaca-mcp-server)** ‚Äì Alpaca&#039;s MCP server lets you trade stocks and options, analyze market data, and build strategies through [Alpaca&#039;s Trading API](https://alpaca.markets/)
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.alphavantage.co/logo.png/&quot; alt=&quot;AlphaVantage Logo&quot; /&gt; **[AlphaVantage](https://github.com/calvernaz/alphavantage)** - Connect to 100+ APIs for financial market data, including stock prices, fundamentals, and more from [AlphaVantage](https://www.alphavantage.co)
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://doris.apache.org/images/favicon.ico&quot; alt=&quot;Apache Doris Logo&quot; /&gt; **[Apache Doris](https://github.com/apache/doris-mcp-server)** - MCP Server For [Apache Doris](https://doris.apache.org/), an MPP-based real-time data warehouse.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://iotdb.apache.org/img/logo.svg&quot; alt=&quot;Apache IoTDB Logo&quot; /&gt; **[Apache IoTDB](https://github.com/apache/iotdb-mcp-server)** - MCP Server for [Apache IoTDB](https://github.com/apache/iotdb) database and its tools
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://apify.com/favicon.ico&quot; alt=&quot;Apify Logo&quot; /&gt; **[Apify](https://github.com/apify/actors-mcp-server)** - [Actors MCP Server](https://apify.com/apify/actors-mcp-server): Use 3,000+ pre-built cloud tools to extract data from websites, e-commerce, social media, search engines, maps, and more
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://2052727.fs1.hubspotusercontent-na1.net/hubfs/2052727/cropped-cropped-apimaticio-favicon-1-32x32.png&quot; alt=&quot;APIMatic Logo&quot; /&gt; **[APIMatic MCP](https://github.com/apimatic/apimatic-validator-mcp)** - APIMatic MCP Server is used to validate OpenAPI specifications using [APIMatic](https://www.apimatic.io/). The server processes OpenAPI files and returns validation summaries by leveraging APIMatic&#039;s API.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://apollo-server-landing-page.cdn.apollographql.com/_latest/assets/favicon.png&quot; alt=&quot;Apollo Graph Logo&quot; /&gt; **[Apollo MCP Server](https://github.com/apollographql/apollo-mcp-server/)** - Connect your GraphQL APIs to AI agents
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://phoenix.arize.com/wp-content/uploads/2023/04/cropped-Favicon-32x32.png&quot; alt=&quot;Arize-Phoenix Logo&quot; /&gt; **[Arize Phoenix](https://github.com/Arize-ai/phoenix/tree/main/js/packages/phoenix-mcp)** - Inspect traces, manage prompts, curate datasets, and run experiments using [Arize Phoenix](https://github.com/Arize-ai/phoenix), an open-source AI and LLM observability tool.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://731523176-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FaVUBXRZbpAgtjYf5HsvO%2Fuploads%2FaRRrVVocXCTr6GkepfCx%2Flogo_color.svg?alt=media&amp;token=3ba24089-0ab2-421f-a9d9-41f2f94f954a&quot; alt=&quot;Armor Logo&quot; /&gt; **[Armor Crypto MCP](https://github.com/armorwallet/armor-crypto-mcp)** - MCP to interface with multiple blockchains, staking, DeFi, swap, bridging, wallet management, DCA, Limit Orders, Coin Lookup, Tracking and more.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://console.asgardeo.io/app/libs/themes/wso2is/assets/images/branding/favicon.ico&quot; alt=&quot;Asgardeo Logo&quot; /&gt; **[Asgardeo](https://github.com/asgardeo/asgardeo-mcp-server)** - MCP server to interact with your [Asgardeo](https://wso2.com/asgardeo) organization through LLM tools.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.datastax.com/favicon-32x32.png&quot; alt=&quot;DataStax logo&quot; /&gt; **[Astra DB](https://github.com/datastax/astra-db-mcp)** - Comprehensive tools for managing collections and documents in a [DataStax Astra DB](https://www.datastax.com/products/datastax-astra) NoSQL database with a full range of operations such as create, update, delete, find, and associated bulk actions.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://assets.atlan.com/assets/atlan-a-logo-blue-background.png&quot; alt=&quot;Atlan Logo&quot; /&gt; **[Atlan](https://github.com/atlanhq/agent-toolkit/tree/main/modelcontextprotocol)** - The Atlan Model Context Protocol server allows you to interact with the [Atlan](https://www.atlan.com/) services through multiple tools.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://resources.audiense.com/hubfs/favicon-1.png&quot; alt=&quot;Audiense Logo&quot; /&gt; **[Audiense Insights](https://github.com/AudienseCo/mcp-audiense-insights)** - Marketing insights and audience analysis from [Audiense](https://www.audiense.com/products/audiense-insights) reports, covering demographic, cultural, influencer, and content engagement analysis.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn.auth0.com/website/website/favicons/auth0-favicon.svg&quot; alt=&quot;Auth0 Logo&quot; /&gt; **[Auth0](https://github.com/auth0/auth0-mcp-server)** - MCP server for interacting with your Auth0 tenant, supporting creating and modifying actions, applications, forms, logs, resource servers, and more.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://firstorder.ai/favicon_auth.ico&quot; alt=&quot;Authenticator App Logo&quot; /&gt; **[Authenticator App ¬∑ 2FA](https://github.com/firstorderai/authenticator_mcp)** - A secure MCP (Model Context Protocol) server that enables AI agents to interact with the Authenticator App.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://a0.awsstatic.com/libra-css/images/site/fav/favicon.ico&quot; alt=&quot;AWS Logo&quot; /&gt; **[AWS](https://github.com/awslabs/mcp)** -  Specialized MCP servers that bring AWS best practices directly to your development workflow.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://axiom.co/favicon.ico&quot; alt=&quot;Axiom Logo&quot; /&gt; **[Axiom](https://github.com/axiomhq/mcp-server-axiom)** - Query and analyze your Axiom logs, traces, and all other event data in natural language
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn-dynmedia-1.microsoft.com/is/content/microsoftcorp/acom_social_icon_azure&quot; alt=&quot;Microsoft Azure Logo&quot; /&gt; **[Azure](https://github.com/Azure/azure-mcp)** - The Azure MCP Server gives MCP Clients access to key Azure services and tools like Azure Storage, Cosmos DB, the Azure CLI, and more.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.bankless.com/favicon.ico&quot; alt=&quot;Bankless Logo&quot; /&gt; **[Bankless Onchain](https://github.com/bankless/onchain-mcp)** - Query Onchain data, like ERC20 tokens, transaction history, smart contract state.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://bicscan.io/favicon.png&quot; alt=&quot;BICScan Logo&quot; /&gt; **[BICScan](https://github.com/ahnlabio/bicscan-mcp)** - Risk score / asset holdings of EVM blockchain address (EOA, CA, ENS) and even domain names.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://web-cdn.bitrise.io/favicon.ico&quot; alt=&quot;Bitrise Logo&quot; /&gt; **[Bitrise](https://github.com/bitrise-io/bitrise-mcp)** - Chat with your builds, CI, and [more](https://bitrise.io/blog/post/chat-with-your-builds-ci-and-more-introducing-the-bitrise-mcp-server).
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://boldsign.com/favicon.ico&quot; alt=&quot;BoldSign Logo&quot; /&gt; **[BoldSign](https://github.com/boldsign/boldsign-mcp)** - Search, request, and manage e-signature contracts effortlessly with [BoldSign](https://boldsign.com/).
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://boost.space/favicon.ico&quot; alt=&quot;Boost.space Logo&quot; /&gt; **[Boost.space](https://github.com/boostspace/boostspace-mcp-server)** - An MCP server integrating with [Boost.space](https://boost.space) for centralized, automated business data from 2000+ sources.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.box.com/favicon.ico&quot; alt=&quot;Box Logo&quot; /&gt; **[Box](https://github.com/box-community/mcp-server-box)** - Interact with the Intelligent Content Management platform through Box AI.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://browserbase.com/favicon.ico&quot; alt=&quot;Browserbase Logo&quot; /&gt; **[Browserbase](https://github.com/browserbase/mcp-server-browserbase)** - Automate browser interactions in the cloud (e.g. web navigation, data extraction, form filling, and more)
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://browserstack.wpenginepowered.com/wp-content/themes/browserstack/img/favicons/favicon.ico&quot; alt=&quot;BrowserStack Logo&quot; /&gt; **[BrowserStack](https://github.com/browserstack/mcp-server)** - Access BrowserStack&#039;s [Test Platform](https://www.browserstack.com/test-platform) to debug, write and fix tests, do accessibility testing and more.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://builtwith.com/favicon.ico&quot; alt=&quot;BuiltWith Logo&quot; /&gt; **[BuiltWith](https://github.com/builtwith/mcp)** - Identify the technology stack behind any website.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://portswigger.net/favicon.ico&quot; alt=&quot;PortSwigger Logo&quot; /&gt; **[Burp Suite](https://github.com/PortSwigger/mcp-server)** - MCP Server extension allowing AI clients to connect to [Burp Suite](https://portswigger.net)
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://campertunity.com/assets/icon/favicon.ico&quot; alt=&quot;Campertunity Logo&quot; /&gt; **[Campertunity](https://github.com/campertunity/mcp-server)** - Search campgrounds around the world on campertunity, check availability, and provide booking links.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://play.cartesia.ai/icon.png&quot; alt=&quot;Cartesia logo&quot; /&gt; **[Cartesia](https://github.com/cartesia-ai/cartesia-mcp)** - Connect to the [Cartesia](https://cartesia.ai/) voice platform to perform text-to-speech, voice cloning etc. 
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.cashfree.com/favicon.ico&quot; alt=&quot;Cashfree logo&quot; /&gt; **[Cashfree](https://github.com/cashfree/cashfree-mcp)** - [Cashfree Payments](https://www.cashfree.com/) official MCP server.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.chargebee.com/static/resources/brand/favicon.png&quot; alt=&quot;Chargebee Logo&quot; /&gt; **[Chargebee](https://github.com/chargebee/agentkit/tree/main/modelcontextprotocol)** - MCP Server that connects AI agents to [Chargebee platform](https://www.chargebee.com).
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cheqd.io/wp-content/uploads/2023/03/logo_cheqd_favicon.png&quot; alt=&quot;Cheqd Logo&quot; /&gt; **[Cheqd](https://github.com/cheqd/mcp-toolkit)** - Enable AI Agents to be trusted, verified, prevent fraud, protect your reputation, and more through [cheqd&#039;s](https://cheqd.io) Trust Registries and Credentials.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn.chiki.studio/brand/logo.png&quot; alt=&quot;Chiki StudIO Logo&quot; /&gt; **[Chiki StudIO](https://chiki.studio/galimybes/mcp/)** - Create your own configurable MCP servers purely via configuration (no code), with instructions, prompts, and tools support.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://trychroma.com/_next/static/media/chroma-logo.ae2d6e4b.svg&quot; alt=&quot;Chroma Logo&quot; /&gt; **[Chroma](https://github.com/chroma-core/chroma-mcp)** - Embeddings, vector search, document storage, and full-text search with the open-source AI application database
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.chronulus.com/favicon/c

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[brave/brave-browser]]></title>
            <link>https://github.com/brave/brave-browser</link>
            <guid>https://github.com/brave/brave-browser</guid>
            <pubDate>Sat, 21 Jun 2025 00:04:40 GMT</pubDate>
            <description><![CDATA[Brave browser for Android, iOS, Linux, macOS, Windows.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/brave/brave-browser">brave/brave-browser</a></h1>
            <p>Brave browser for Android, iOS, Linux, macOS, Windows.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 19,534</p>
            <p>Forks: 2,622</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>![Brave Browser](./docs/source/_static/Brave.svg)

## Overview

This repository holds the build tools needed to build the Brave desktop browser for macOS, Windows, and Linux.  In particular, it fetches and syncs code from the projects defined in `package.json` and `src/brave/DEPS`:

  - [Chromium](https://chromium.googlesource.com/chromium/src.git)
    - Fetches code via `depot_tools`.
    - Sets the branch for Chromium (ex: 65.0.3325.181).
  - [brave-core](https://github.com/brave/brave-core)
    - Mounted at `src/brave`.
    - Maintains patches for 3rd party Chromium code.
  - [adblock-rust](https://github.com/brave/adblock-rust)
    - Implements Brave&#039;s ad-block engine.
    - Linked through [brave/adblock-rust-ffi](https://github.com/brave/brave-core/tree/master/components/adblock_rust_ffi).

## Downloads

You can [visit our website](https://brave.com/download) to get the latest stable release.

## Contributing

Please see the [contributing guidelines](./CONTRIBUTING.md).

Our [Wiki](https://github.com/brave/brave-browser/wiki) also has some useful technical information.

## Community

[Join the Q&amp;A community](https://community.brave.com/) if you&#039;d like to get more involved with Brave. You can [ask for help](https://community.brave.com/c/support-and-troubleshooting),
[discuss features you&#039;d like to see](https://community.brave.com/c/brave-feature-requests), and a lot more. We&#039;d love to have your help so that we can continue improving Brave.

Help us translate Brave to your language by submitting translations at https://explore.transifex.com/brave/brave_en/.

Follow [@brave](https://x.com/brave) on X for important news and announcements.

## Install prerequisites

Follow the instructions for your platform:

- [macOS](https://github.com/brave/brave-browser/wiki/macOS-Development-Environment)
- [iOS](https://github.com/brave/brave-browser/wiki/iOS-Development-Environment)
- [Windows](https://github.com/brave/brave-browser/wiki/Windows-Development-Environment)
- [Linux](https://github.com/brave/brave-browser/wiki/Linux-Development-Environment)
- [Android](https://github.com/brave/brave-browser/wiki/Android-Development-Environment)

## Clone and initialize the repo

Once you have the prerequisites installed, you can get the code and initialize the build environment.

```bash
git clone git@github.com:brave/brave-core.git path-to-your-project-folder/src/brave
cd path-to-your-project-folder/src/brave
npm install

# the Chromium source is downloaded, which has a large history (gigabytes of data)
# this might take really long to finish depending on internet speed

npm run init
```
brave-core based android builds should use `npm run init -- --target_os=android --target_arch=arm` (or whichever CPU type you want to build for)
brave-core based iOS builds should use `npm run init -- --target_os=ios`

You can also set the target_os and target_arch for init and build using:

```
npm config set target_os android
npm config set target_arch arm
```

Additional parameters needed to build are documented at https://github.com/brave/brave-browser/wiki/Build-configuration

Internal developers can find more information at https://github.com/brave/devops/wiki/%60.env%60-config-for-Brave-Developers

## Build Brave
The default build type is component.

```
# start the component build compile
npm run build
```

To do a release build:

```
# start the release compile
npm run build Release
```

brave-core based android builds should use `npm run build -- --target_os=android --target_arch=arm` or set the npm config variables as specified above for `init`

brave-core based iOS builds should use the Xcode project found in `ios/brave-ios/App`. You can open this project directly or run `npm run ios_bootstrap -- --open_xcodeproj` to have it opened in Xcode. See the [iOS Developer Environment](https://github.com/brave/brave-browser/wiki/iOS-Development-Environment#Building) for more information on iOS builds.

### Build Configurations

Running a release build with `npm run build Release` can be very slow and use a lot of RAM, especially on Linux with the Gold LLVM plugin.

To run a statically linked build (takes longer to build, but starts faster):

```bash
npm run build -- Static
```

To run a debug build (Component build with is_debug=true):

```bash
npm run build -- Debug
```
NOTE: the build will take a while to complete. Depending on your processor and memory, it could potentially take a few hours.

## Run Brave
To start the build:

`npm start [Release|Component|Static|Debug]`

# Update Brave

`npm run sync -- [--force] [--init] [--create] [brave_core_ref]`

**This will attempt to stash your local changes in brave-core, but it&#039;s safer to commit local changes before running this**

`npm run sync` will (depending on the below flags):

1. üì• Update sub-projects (chromium, brave-core) to latest commit of a git ref (e.g. tag or branch)
2. ü§ï Apply patches
3. üîÑ Update gclient DEPS dependencies
4. ‚è© Run hooks (e.g. to perform `npm install` on child projects)

| flag | Description |
|---|---|
|`[no flags]`|updates chromium if needed and re-applies patches. If the chromium version did not change, it will only re-apply patches that have changed. Will update child dependencies **only if any project needed updating during this script run**. &lt;br&gt; **Use this if you want the script to manage keeping you up to date instead of pulling or switching branches manually. **|
|`--force`|updates both _Chromium_ and _brave-core_ to the latest remote commit for the current brave-core branch and the _Chromium_ ref specified in brave-browser/package.json (e.g. `master` or `74.0.0.103`). Will re-apply all patches. Will force update all child dependencies. &lt;br&gt; **Use this if you&#039;re having trouble and want to force the branches back to a known state. **|
|`--init`|force update both _Chromium_ and _brave-core_ to the versions specified in brave-browser/package.json and force updates all dependent repos - same as `npm run init`|
|`--sync_chromium (true/false)`|Will force or skip the chromium version update when applicable. Useful if you want to avoid a minor update when not ready for the larger build time a chromium update may result in. A warning will be output about the current code state expecting a different chromium version. Your build may fail as a result.|
|`-D, --delete_unused_deps`|Will delete from the working copy any dependencies that have been removed since the last sync. Mimics `gclient sync -D`.|

Run `npm run sync brave_core_ref` to checkout the specified _brave-core_ ref and update all dependent repos including chromium if needed.

## Scenarios

#### Create a new branch:
```bash
brave-browser&gt; cd src/brave
brave-browser/src/brave&gt; git checkout -b branch_name
```

#### Checkout an existing branch or tag:
```bash
brave-browser/src/brave&gt; git fetch origin
brave-browser/src/brave&gt; git checkout [-b] branch_name
brave-browser/src/brave&gt; npm run sync
...Updating 2 patches...
...Updating child dependencies...
...Running hooks...
```

#### Update the current branch to the latest remote:
```bash
brave-browser/src/brave&gt; git pull
brave-browser/src/brave&gt; npm run sync
...Updating 2 patches...
...Updating child dependencies...
...Running hooks...
```

#### Reset to latest brave-browser master and brave-core master (via `init`, will always result in a longer build and will remove any pending changes in your brave-core working directory):
```bash
brave-browser&gt; git checkout master
brave-browser&gt; git pull
brave-browser&gt; npm run sync -- --init
```

#### When you know that DEPS didn&#039;t change, but .patch files did (quickest attempt to perform a mini-sync before a build):
```bash
brave-browser/src/brave&gt; git checkout featureB
brave-browser/src/brave&gt; git pull
brave-browser/src/brave&gt; cd ../..
brave-browser&gt; npm run apply_patches
...Applying 2 patches...
```

# Enabling third-party APIs:

1. **Google Safe Browsing**: Get an API key with SafeBrowsing API enabled from https://console.developers.google.com/. Update the `GOOGLE_API_KEY` environment variable with your key as per https://www.chromium.org/developers/how-tos/api-keys to enable Google SafeBrowsing.

# Development

- [Security rules from Chromium](https://chromium.googlesource.com/chromium/src/+/refs/heads/main/docs/security/rules.md)
- [IPC review guidelines](https://chromium.googlesource.com/chromium/src/+/HEAD/docs/security/ipc-reviews.md) (in particular [this reference](https://docs.google.com/document/d/1Kw4aTuISF7csHnjOpDJGc7JYIjlvOAKRprCTBVWw_E4/edit#heading=h.84bpc1e9z1bg))
- [Brave&#039;s internal security guidelines](https://github.com/brave/internal/wiki/Pull-request-security-audit-checklist) (for employees only)
- [Rust usage](https://github.com/brave/brave-core/blob/master/docs/rust.md)

# Troubleshooting

See [Troubleshooting](https://github.com/brave/brave-browser/wiki/Troubleshooting) for solutions to common problems.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[h5bp/html5-boilerplate]]></title>
            <link>https://github.com/h5bp/html5-boilerplate</link>
            <guid>https://github.com/h5bp/html5-boilerplate</guid>
            <pubDate>Sat, 21 Jun 2025 00:04:39 GMT</pubDate>
            <description><![CDATA[A professional front-end template for building fast, robust, and adaptable web apps or sites.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/h5bp/html5-boilerplate">h5bp/html5-boilerplate</a></h1>
            <p>A professional front-end template for building fast, robust, and adaptable web apps or sites.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 57,016</p>
            <p>Forks: 12,289</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre># [HTML5 Boilerplate](https://html5boilerplate.com/)

[![Build status](https://github.com/h5bp/html5-boilerplate/workflows/Build%20status/badge.svg)](https://github.com/h5bp/html5-boilerplate/actions?query=workflow%3A%22Build+status%22+branch%3Amain)
[![LICENSE](https://img.shields.io/badge/license-MIT-lightgrey.svg)](https://github.com/h5bp/html5-boilerplate/blob/main/LICENSE.txt)
[![NPM Downloads](https://img.shields.io/npm/dt/html5-boilerplate.svg)](https://www.npmjs.com/package/html5-boilerplate)
[![github-stars-image](https://img.shields.io/github/stars/h5bp/html5-boilerplate.svg?label=github%20stars)](https://github.com/h5bp/html5-boilerplate)

HTML5 Boilerplate is a professional front-end template for building
fast, robust, and adaptable web apps or sites.

This project is the product of over 10 years of iterative development and
community knowledge. It does not impose a specific development
philosophy or framework, so you&#039;re free to architect your code in the
way that you want.

- [Homepage](https://html5boilerplate.com/)
- [Source Code](https://github.com/h5bp/html5-boilerplate)

## About This Repository

This repository is where HTML5-Boilerplate is authored. Some of the tools,
files and processes that you see here are solely for the _production_ of
HTML5 Boilerplate and are not _part_ of HTML5 Boilerplate. For one example, the
[gulpfile.mjs](https://github.com/h5bp/html5-boilerplate/blob/main/gulpfile.mjs)
script is used to _build_ the project. It&#039;s not part of the project itself.

The project we publish is represented by the contents of the `/dist/`
folder. Everything else in this repository is used to author the project.

Think of it this way, in the same way that you don&#039;t clone [vuejs/core](https://github.com/vuejs/core)
to create a Vue.js app, you don&#039;t need to clone this repository to start a new
site or app based on HTML5 Boilerplate.

So, if you&#039;re looking for a quick start template to build a website or
application, look at the options in the
[Quick Start](https://github.com/h5bp/html5-boilerplate#quick-start) section of this document.

If you want to help us _improve_ HTML5 Boilerplate then you can start with the documentation [here](.github/CONTRIBUTING.md), which includes steps to clone this repo in order to get it set up for development.

## Quick Start

Choose one of the following options:

- Using the [create-html5-boilerplate](https://github.com/h5bp/create-html5-boilerplate)
  script, instantly fetch the latest npm published package (or any version
  available on npm) with `npx`, `npm init` or `yarn create` without having to
  install any dependencies. Running the following `npx` command installs the
  latest version into a folder called `new-site`

  ```bash
  npx create-html5-boilerplate new-site
  cd new-site
  npm install
  npm run start
  ```

- Using our new [Template Repository](https://github.com/h5bp/html5-boilerplate-template)
  create a new GitHub repository based on the latest code from the main branch of HTML5
  Boilerplate.

- Install with [npm](https://www.npmjs.com/): `npm install html5-boilerplate`
  or [yarn](https://yarnpkg.com/): `yarn add html5-boilerplate`. The resulting
  `node_modules/html5-boilerplate/dist` folder represents the latest version of
  the project for end users. Depending on what you want to use and how you want
  to use it, you may have to copy and paste the contents of that folder into
  your project directory.

- Download the latest stable release from
  [here](https://github.com/h5bp/html5-boilerplate/releases/download/v9.0.0/html5-boilerplate_v9.0.0.zip). This zip file is a
  snapshot of the `dist` folder. On Windows, Mac and from the file manager on
  Linux unzipping this folder will output to a folder named something like
  `html5-boilerplate_v9.0.0`. From the command-line, you will need to create a
  folder and unzip the contents into that folder.

  ```bash
  mkdir html5-boilerplate
  unzip html5-boilerplate*.zip -d html5-boilerplate
  ```

## Features

- A finely-tuned starter template: Reap the benefits of 10 years of analysis,
  research and experimentation by over 200 contributors.
- Designed with progressive enhancement in mind.
- Includes:
  - Placeholder Open Graph elements and attributes.
  - An example package.json file with [WebPack](https://webpack.js.org/) commands
    built in to jumpstart application development.
  - Placeholder CSS Media Queries.
  - Useful CSS helper classes.
  - Default print styles, performance optimized.
  - &quot;Delete-key friendly.&quot; Easy to strip out parts you don&#039;t need.
  - Extensive documentation.

## Browser Support

HTML5-Boilerplate supports the latest, stable releases of all major browsers.

Check the `default` configuration from [Browserslist](https://browsersl.ist/#q=defaults)
for more details on browsers and versions covered.

## Documentation

Take a look at the [documentation table of contents](docs/TOC.md). This
documentation is bundled with the project which makes it available for offline
reading and provides a useful starting point for any documentation you want to
write about your project.

## Contributing

Hundreds of developers have helped to make the HTML5 Boilerplate. Anyone is
welcome to [contribute](.github/CONTRIBUTING.md). However, if you decide to get
involved, please take a moment to review the [guidelines](.github/CONTRIBUTING.md):

- [Bug reports](.github/CONTRIBUTING.md#bugs)
- [Feature requests](.github/CONTRIBUTING.md#features)
- [Pull requests](.github/CONTRIBUTING.md#pull-requests)

## License

The code is available under the [MIT license](LICENSE.txt).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[Asabeneh/30-Days-Of-JavaScript]]></title>
            <link>https://github.com/Asabeneh/30-Days-Of-JavaScript</link>
            <guid>https://github.com/Asabeneh/30-Days-Of-JavaScript</guid>
            <pubDate>Sat, 21 Jun 2025 00:04:38 GMT</pubDate>
            <description><![CDATA[30 days of JavaScript programming challenge is a step-by-step guide to learn JavaScript programming language in 30 days. This challenge may take more than 100 days, please just follow your own pace. These videos may help too: https://www.youtube.com/channel/UC7PNRuno1rzYPb1xLa4yktw]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Asabeneh/30-Days-Of-JavaScript">Asabeneh/30-Days-Of-JavaScript</a></h1>
            <p>30 days of JavaScript programming challenge is a step-by-step guide to learn JavaScript programming language in 30 days. This challenge may take more than 100 days, please just follow your own pace. These videos may help too: https://www.youtube.com/channel/UC7PNRuno1rzYPb1xLa4yktw</p>
            <p>Language: JavaScript</p>
            <p>Stars: 44,521</p>
            <p>Forks: 10,231</p>
            <p>Stars today: 31 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[songquanpeng/one-api]]></title>
            <link>https://github.com/songquanpeng/one-api</link>
            <guid>https://github.com/songquanpeng/one-api</guid>
            <pubDate>Sat, 21 Jun 2025 00:04:37 GMT</pubDate>
            <description><![CDATA[LLM API ÁÆ°ÁêÜ & ÂàÜÂèëÁ≥ªÁªüÔºåÊîØÊåÅ OpenAI„ÄÅAzure„ÄÅAnthropic Claude„ÄÅGoogle Gemini„ÄÅDeepSeek„ÄÅÂ≠óËäÇË±ÜÂåÖ„ÄÅChatGLM„ÄÅÊñáÂøÉ‰∏ÄË®Ä„ÄÅËÆØÈ£ûÊòüÁÅ´„ÄÅÈÄö‰πâÂçÉÈóÆ„ÄÅ360 Êô∫ËÑë„ÄÅËÖæËÆØÊ∑∑ÂÖÉÁ≠â‰∏ªÊµÅÊ®°ÂûãÔºåÁªü‰∏Ä API ÈÄÇÈÖçÔºåÂèØÁî®‰∫é key ÁÆ°ÁêÜ‰∏é‰∫åÊ¨°ÂàÜÂèë„ÄÇÂçïÂèØÊâßË°åÊñá‰ª∂ÔºåÊèê‰æõ Docker ÈïúÂÉèÔºå‰∏ÄÈîÆÈÉ®ÁΩ≤ÔºåÂºÄÁÆ±Âç≥Áî®„ÄÇLLM API management & key redistribution system, unifying multiple providers under a single API. Single binary, Docker-ready, with an English UI.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/songquanpeng/one-api">songquanpeng/one-api</a></h1>
            <p>LLM API ÁÆ°ÁêÜ & ÂàÜÂèëÁ≥ªÁªüÔºåÊîØÊåÅ OpenAI„ÄÅAzure„ÄÅAnthropic Claude„ÄÅGoogle Gemini„ÄÅDeepSeek„ÄÅÂ≠óËäÇË±ÜÂåÖ„ÄÅChatGLM„ÄÅÊñáÂøÉ‰∏ÄË®Ä„ÄÅËÆØÈ£ûÊòüÁÅ´„ÄÅÈÄö‰πâÂçÉÈóÆ„ÄÅ360 Êô∫ËÑë„ÄÅËÖæËÆØÊ∑∑ÂÖÉÁ≠â‰∏ªÊµÅÊ®°ÂûãÔºåÁªü‰∏Ä API ÈÄÇÈÖçÔºåÂèØÁî®‰∫é key ÁÆ°ÁêÜ‰∏é‰∫åÊ¨°ÂàÜÂèë„ÄÇÂçïÂèØÊâßË°åÊñá‰ª∂ÔºåÊèê‰æõ Docker ÈïúÂÉèÔºå‰∏ÄÈîÆÈÉ®ÁΩ≤ÔºåÂºÄÁÆ±Âç≥Áî®„ÄÇLLM API management & key redistribution system, unifying multiple providers under a single API. Single binary, Docker-ready, with an English UI.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 25,787</p>
            <p>Forks: 5,241</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;right&quot;&gt;
   &lt;strong&gt;‰∏≠Êñá&lt;/strong&gt; | &lt;a href=&quot;./README.en.md&quot;&gt;English&lt;/a&gt; | &lt;a href=&quot;./README.ja.md&quot;&gt;Êó•Êú¨Ë™û&lt;/a&gt;
&lt;/p&gt;


&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/songquanpeng/one-api&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/songquanpeng/one-api/main/web/default/public/logo.png&quot; width=&quot;150&quot; height=&quot;150&quot; alt=&quot;one-api logo&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;

# One API

_‚ú® ÈÄöËøáÊ†áÂáÜÁöÑ OpenAI API Ê†ºÂºèËÆøÈóÆÊâÄÊúâÁöÑÂ§ßÊ®°ÂûãÔºåÂºÄÁÆ±Âç≥Áî® ‚ú®_

&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://raw.githubusercontent.com/songquanpeng/one-api/main/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/license/songquanpeng/one-api?color=brightgreen&quot; alt=&quot;license&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/songquanpeng/one-api/releases/latest&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/v/release/songquanpeng/one-api?color=brightgreen&amp;include_prereleases&quot; alt=&quot;release&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://hub.docker.com/repository/docker/justsong/one-api&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/docker/pulls/justsong/one-api?color=brightgreen&quot; alt=&quot;docker pull&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/songquanpeng/one-api/releases/latest&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/downloads/songquanpeng/one-api/total?color=brightgreen&amp;include_prereleases&quot; alt=&quot;release&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://goreportcard.com/report/github.com/songquanpeng/one-api&quot;&gt;
    &lt;img src=&quot;https://goreportcard.com/badge/github.com/songquanpeng/one-api&quot; alt=&quot;GoReportCard&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#ÈÉ®ÁΩ≤&quot;&gt;ÈÉ®ÁΩ≤ÊïôÁ®ã&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#‰ΩøÁî®ÊñπÊ≥ï&quot;&gt;‰ΩøÁî®ÊñπÊ≥ï&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://github.com/songquanpeng/one-api/issues&quot;&gt;ÊÑèËßÅÂèçÈ¶à&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#Êà™ÂõæÂ±ïÁ§∫&quot;&gt;Êà™ÂõæÂ±ïÁ§∫&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://openai.justsong.cn/&quot;&gt;Âú®Á∫øÊºîÁ§∫&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#Â∏∏ËßÅÈóÆÈ¢ò&quot;&gt;Â∏∏ËßÅÈóÆÈ¢ò&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#Áõ∏ÂÖ≥È°πÁõÆ&quot;&gt;Áõ∏ÂÖ≥È°πÁõÆ&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://iamazing.cn/page/reward&quot;&gt;ËµûËµèÊîØÊåÅ&lt;/a&gt;
&lt;/p&gt;

&gt; [!NOTE]
&gt; Êú¨È°πÁõÆ‰∏∫ÂºÄÊ∫êÈ°πÁõÆÔºå‰ΩøÁî®ËÄÖÂøÖÈ°ªÂú®ÈÅµÂæ™ OpenAI ÁöÑ[‰ΩøÁî®Êù°Ê¨æ](https://openai.com/policies/terms-of-use)‰ª•Âèä**Ê≥ïÂæãÊ≥ïËßÑ**ÁöÑÊÉÖÂÜµ‰∏ã‰ΩøÁî®Ôºå‰∏çÂæóÁî®‰∫éÈùûÊ≥ïÁî®ÈÄî„ÄÇ
&gt;
&gt; Ê†πÊçÆ[„ÄäÁîüÊàêÂºè‰∫∫Â∑•Êô∫ËÉΩÊúçÂä°ÁÆ°ÁêÜÊöÇË°åÂäûÊ≥ï„Äã](http://www.cac.gov.cn/2023-07/13/c_1690898327029107.htm)ÁöÑË¶ÅÊ±ÇÔºåËØ∑ÂãøÂØπ‰∏≠ÂõΩÂú∞Âå∫ÂÖ¨‰ºóÊèê‰æõ‰∏ÄÂàáÊú™ÁªèÂ§áÊ°àÁöÑÁîüÊàêÂºè‰∫∫Â∑•Êô∫ËÉΩÊúçÂä°„ÄÇ

&gt; [!NOTE]
&gt; Á®≥ÂÆöÁâà / È¢ÑËßàÁâàÈïúÂÉèÂú∞ÂùÄÔºö[justsong/one-api](https://hub.docker.com/repository/docker/justsong/one-api)
&gt; ÊàñËÄÖ [ghcr.io/songquanpeng/one-api](https://github.com/songquanpeng/one-api/pkgs/container/one-api)
&gt;
&gt; alpha ÁâàÈïúÂÉèÂú∞ÂùÄÔºö[justsong/one-api-alpha](https://hub.docker.com/repository/docker/justsong/one-api-alpha)
&gt; ÊàñËÄÖ [ghcr.io/songquanpeng/one-api-alpha](https://github.com/songquanpeng/one-api/pkgs/container/one-api-alpha)

&gt; [!WARNING]
&gt; ‰ΩøÁî® root Áî®Êà∑ÂàùÊ¨°ÁôªÂΩïÁ≥ªÁªüÂêéÔºåÂä°ÂøÖ‰øÆÊîπÈªòËÆ§ÂØÜÁ†Å `123456`ÔºÅ

## ÂäüËÉΩ
1. ÊîØÊåÅÂ§öÁßçÂ§ßÊ®°ÂûãÔºö
   + [x] [OpenAI ChatGPT Á≥ªÂàóÊ®°Âûã](https://platform.openai.com/docs/guides/gpt/chat-completions-api)ÔºàÊîØÊåÅ [Azure OpenAI API](https://learn.microsoft.com/en-us/azure/ai-services/openai/reference)Ôºâ
   + [x] [Anthropic Claude Á≥ªÂàóÊ®°Âûã](https://anthropic.com) (ÊîØÊåÅ AWS Claude)
   + [x] [Google PaLM2/Gemini Á≥ªÂàóÊ®°Âûã](https://developers.generativeai.google)
   + [x] [Mistral Á≥ªÂàóÊ®°Âûã](https://mistral.ai/)
   + [x] [Â≠óËäÇË∑≥Âä®Ë±ÜÂåÖÂ§ßÊ®°ÂûãÔºàÁÅ´Â±±ÂºïÊìéÔºâ](https://www.volcengine.com/experience/ark?utm_term=202502dsinvite&amp;ac=DSASUQY5&amp;rc=2QXCA1VI)
   + [x] [ÁôæÂ∫¶ÊñáÂøÉ‰∏ÄË®ÄÁ≥ªÂàóÊ®°Âûã](https://cloud.baidu.com/doc/WENXINWORKSHOP/index.html)
   + [x] [ÈòøÈáåÈÄö‰πâÂçÉÈóÆÁ≥ªÂàóÊ®°Âûã](https://help.aliyun.com/document_detail/2400395.html)
   + [x] [ËÆØÈ£ûÊòüÁÅ´ËÆ§Áü•Â§ßÊ®°Âûã](https://www.xfyun.cn/doc/spark/Web.html)
   + [x] [Êô∫Ë∞± ChatGLM Á≥ªÂàóÊ®°Âûã](https://bigmodel.cn)
   + [x] [360 Êô∫ËÑë](https://ai.360.cn)
   + [x] [ËÖæËÆØÊ∑∑ÂÖÉÂ§ßÊ®°Âûã](https://cloud.tencent.com/document/product/1729)
   + [x] [Moonshot AI](https://platform.moonshot.cn/)
   + [x] [ÁôæÂ∑ùÂ§ßÊ®°Âûã](https://platform.baichuan-ai.com)
   + [x] [MINIMAX](https://api.minimax.chat/)
   + [x] [Groq](https://wow.groq.com/)
   + [x] [Ollama](https://github.com/ollama/ollama)
   + [x] [Èõ∂‰∏Ä‰∏áÁâ©](https://platform.lingyiwanwu.com/)
   + [x] [Èò∂Ë∑ÉÊòüËæ∞](https://platform.stepfun.com/)
   + [x] [Coze](https://www.coze.com/)
   + [x] [Cohere](https://cohere.com/)
   + [x] [DeepSeek](https://www.deepseek.com/)
   + [x] [Cloudflare Workers AI](https://developers.cloudflare.com/workers-ai/)
   + [x] [DeepL](https://www.deepl.com/)
   + [x] [together.ai](https://www.together.ai/)
   + [x] [novita.ai](https://www.novita.ai/)
   + [x] [Á°ÖÂü∫ÊµÅÂä® SiliconCloud](https://cloud.siliconflow.cn/i/rKXmRobW)
   + [x] [xAI](https://x.ai/)
2. ÊîØÊåÅÈÖçÁΩÆÈïúÂÉè‰ª•Âèä‰ºóÂ§ö[Á¨¨‰∏âÊñπ‰ª£ÁêÜÊúçÂä°](https://iamazing.cn/page/openai-api-third-party-services)„ÄÇ
3. ÊîØÊåÅÈÄöËøá**Ë¥üËΩΩÂùáË°°**ÁöÑÊñπÂºèËÆøÈóÆÂ§ö‰∏™Ê∏†ÈÅì„ÄÇ
4. ÊîØÊåÅ **stream Ê®°Âºè**ÔºåÂèØ‰ª•ÈÄöËøáÊµÅÂºè‰º†ËæìÂÆûÁé∞ÊâìÂ≠óÊú∫ÊïàÊûú„ÄÇ
5. ÊîØÊåÅ**Â§öÊú∫ÈÉ®ÁΩ≤**Ôºå[ËØ¶ËßÅÊ≠§Â§Ñ](#Â§öÊú∫ÈÉ®ÁΩ≤)„ÄÇ
6. ÊîØÊåÅ**‰ª§ÁâåÁÆ°ÁêÜ**ÔºåËÆæÁΩÆ‰ª§ÁâåÁöÑËøáÊúüÊó∂Èó¥„ÄÅÈ¢ùÂ∫¶„ÄÅÂÖÅËÆ∏ÁöÑ IP ËåÉÂõ¥‰ª•ÂèäÂÖÅËÆ∏ÁöÑÊ®°ÂûãËÆøÈóÆ„ÄÇ
7. ÊîØÊåÅ**ÂÖëÊç¢Á†ÅÁÆ°ÁêÜ**ÔºåÊîØÊåÅÊâπÈáèÁîüÊàêÂíåÂØºÂá∫ÂÖëÊç¢Á†ÅÔºåÂèØ‰ΩøÁî®ÂÖëÊç¢Á†Å‰∏∫Ë¥¶Êà∑ËøõË°åÂÖÖÂÄº„ÄÇ
8. ÊîØÊåÅ**Ê∏†ÈÅìÁÆ°ÁêÜ**ÔºåÊâπÈáèÂàõÂª∫Ê∏†ÈÅì„ÄÇ
9. ÊîØÊåÅ**Áî®Êà∑ÂàÜÁªÑ**‰ª•Âèä**Ê∏†ÈÅìÂàÜÁªÑ**ÔºåÊîØÊåÅ‰∏∫‰∏çÂêåÂàÜÁªÑËÆæÁΩÆ‰∏çÂêåÁöÑÂÄçÁéá„ÄÇ
10. ÊîØÊåÅÊ∏†ÈÅì**ËÆæÁΩÆÊ®°ÂûãÂàóË°®**„ÄÇ
11. ÊîØÊåÅ**Êü•ÁúãÈ¢ùÂ∫¶ÊòéÁªÜ**„ÄÇ
12. ÊîØÊåÅ**Áî®Êà∑ÈÇÄËØ∑Â•ñÂä±**„ÄÇ
13. ÊîØÊåÅ‰ª•ÁæéÂÖÉ‰∏∫Âçï‰ΩçÊòæÁ§∫È¢ùÂ∫¶„ÄÇ
14. ÊîØÊåÅÂèëÂ∏ÉÂÖ¨ÂëäÔºåËÆæÁΩÆÂÖÖÂÄºÈìæÊé•ÔºåËÆæÁΩÆÊñ∞Áî®Êà∑ÂàùÂßãÈ¢ùÂ∫¶„ÄÇ
15. ÊîØÊåÅÊ®°ÂûãÊò†Â∞ÑÔºåÈáçÂÆöÂêëÁî®Êà∑ÁöÑËØ∑Ê±ÇÊ®°ÂûãÔºåÂ¶ÇÊó†ÂøÖË¶ÅËØ∑‰∏çË¶ÅËÆæÁΩÆÔºåËÆæÁΩÆ‰πãÂêé‰ºöÂØºËá¥ËØ∑Ê±Ç‰ΩìË¢´ÈáçÊñ∞ÊûÑÈÄ†ËÄåÈùûÁõ¥Êé•ÈÄè‰º†Ôºå‰ºöÂØºËá¥ÈÉ®ÂàÜËøòÊú™Ê≠£ÂºèÊîØÊåÅÁöÑÂ≠óÊÆµÊó†Ê≥ï‰º†ÈÄíÊàêÂäü„ÄÇ
16. ÊîØÊåÅÂ§±Ë¥•Ëá™Âä®ÈáçËØï„ÄÇ
17. ÊîØÊåÅÁªòÂõæÊé•Âè£„ÄÇ
18. ÊîØÊåÅ [Cloudflare AI Gateway](https://developers.cloudflare.com/ai-gateway/providers/openai/)ÔºåÊ∏†ÈÅìËÆæÁΩÆÁöÑ‰ª£ÁêÜÈÉ®ÂàÜÂ°´ÂÜô `https://gateway.ai.cloudflare.com/v1/ACCOUNT_TAG/GATEWAY/openai` Âç≥ÂèØ„ÄÇ
19. ÊîØÊåÅ‰∏∞ÂØåÁöÑ**Ëá™ÂÆö‰πâ**ËÆæÁΩÆÔºå
    1. ÊîØÊåÅËá™ÂÆö‰πâÁ≥ªÁªüÂêçÁß∞Ôºålogo ‰ª•ÂèäÈ°µËÑö„ÄÇ
    2. ÊîØÊåÅËá™ÂÆö‰πâÈ¶ñÈ°µÂíåÂÖ≥‰∫éÈ°µÈù¢ÔºåÂèØ‰ª•ÈÄâÊã©‰ΩøÁî® HTML &amp; Markdown ‰ª£Á†ÅËøõË°åËá™ÂÆö‰πâÔºåÊàñËÄÖ‰ΩøÁî®‰∏Ä‰∏™ÂçïÁã¨ÁöÑÁΩëÈ°µÈÄöËøá iframe ÂµåÂÖ•„ÄÇ
20. ÊîØÊåÅÈÄöËøáÁ≥ªÁªüËÆøÈóÆ‰ª§ÁâåË∞ÉÁî®ÁÆ°ÁêÜ APIÔºåËøõËÄå**Âú®Êó†ÈúÄ‰∫åÂºÄÁöÑÊÉÖÂÜµ‰∏ãÊâ©Â±ïÂíåËá™ÂÆö‰πâ** One API ÁöÑÂäüËÉΩÔºåËØ¶ÊÉÖËØ∑ÂèÇËÄÉÊ≠§Â§Ñ [API ÊñáÊ°£](./docs/API.md)„ÄÇ
21. ÊîØÊåÅ Cloudflare Turnstile Áî®Êà∑Ê†°È™å„ÄÇ
22. ÊîØÊåÅÁî®Êà∑ÁÆ°ÁêÜÔºåÊîØÊåÅ**Â§öÁßçÁî®Êà∑ÁôªÂΩïÊ≥®ÂÜåÊñπÂºè**Ôºö
    + ÈÇÆÁÆ±ÁôªÂΩïÊ≥®ÂÜåÔºàÊîØÊåÅÊ≥®ÂÜåÈÇÆÁÆ±ÁôΩÂêçÂçïÔºâ‰ª•ÂèäÈÄöËøáÈÇÆÁÆ±ËøõË°åÂØÜÁ†ÅÈáçÁΩÆ„ÄÇ
    + ÊîØÊåÅ[È£û‰π¶ÊéàÊùÉÁôªÂΩï](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/authen-v1/authorize/get)Ôºà[ËøôÈáåÊúâ One API ÁöÑÂÆûÁé∞ÁªÜËäÇÈòêËø∞‰æõÂèÇËÄÉ](https://iamazing.cn/page/feishu-oauth-login)Ôºâ„ÄÇ
    + ÊîØÊåÅ [GitHub ÊéàÊùÉÁôªÂΩï](https://github.com/settings/applications/new)„ÄÇ
    + ÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ÊéàÊùÉÔºàÈúÄË¶ÅÈ¢ùÂ§ñÈÉ®ÁΩ≤ [WeChat Server](https://github.com/songquanpeng/wechat-server)Ôºâ„ÄÇ
23. ÊîØÊåÅ‰∏ªÈ¢òÂàáÊç¢ÔºåËÆæÁΩÆÁéØÂ¢ÉÂèòÈáè `THEME` Âç≥ÂèØÔºåÈªòËÆ§‰∏∫ `default`ÔºåÊ¨¢Ëøé PR Êõ¥Â§ö‰∏ªÈ¢òÔºåÂÖ∑‰ΩìÂèÇËÄÉ[Ê≠§Â§Ñ](./web/README.md)„ÄÇ
24. ÈÖçÂêà [Message Pusher](https://github.com/songquanpeng/message-pusher) ÂèØÂ∞ÜÊä•Ë≠¶‰ø°ÊÅØÊé®ÈÄÅÂà∞Â§öÁßç App ‰∏ä„ÄÇ

## ÈÉ®ÁΩ≤
### Âü∫‰∫é Docker ËøõË°åÈÉ®ÁΩ≤
```shell
# ‰ΩøÁî® SQLite ÁöÑÈÉ®ÁΩ≤ÂëΩ‰ª§Ôºö
docker run --name one-api -d --restart always -p 3000:3000 -e TZ=Asia/Shanghai -v /home/ubuntu/data/one-api:/data justsong/one-api
# ‰ΩøÁî® MySQL ÁöÑÈÉ®ÁΩ≤ÂëΩ‰ª§ÔºåÂú®‰∏äÈù¢ÁöÑÂü∫Á°Ä‰∏äÊ∑ªÂä† `-e SQL_DSN=&quot;root:123456@tcp(localhost:3306)/oneapi&quot;`ÔºåËØ∑Ëá™Ë°å‰øÆÊîπÊï∞ÊçÆÂ∫ìËøûÊé•ÂèÇÊï∞Ôºå‰∏çÊ∏ÖÊ•öÂ¶Ç‰Ωï‰øÆÊîπËØ∑ÂèÇËßÅ‰∏ãÈù¢ÁéØÂ¢ÉÂèòÈáè‰∏ÄËäÇ„ÄÇ
# ‰æãÂ¶ÇÔºö
docker run --name one-api -d --restart always -p 3000:3000 -e SQL_DSN=&quot;root:123456@tcp(localhost:3306)/oneapi&quot; -e TZ=Asia/Shanghai -v /home/ubuntu/data/one-api:/data justsong/one-api
```

ÂÖ∂‰∏≠Ôºå`-p 3000:3000` ‰∏≠ÁöÑÁ¨¨‰∏Ä‰∏™ `3000` ÊòØÂÆø‰∏ªÊú∫ÁöÑÁ´ØÂè£ÔºåÂèØ‰ª•Ê†πÊçÆÈúÄË¶ÅËøõË°å‰øÆÊîπ„ÄÇ

Êï∞ÊçÆÂíåÊó•ÂøóÂ∞Ü‰ºö‰øùÂ≠òÂú®ÂÆø‰∏ªÊú∫ÁöÑ `/home/ubuntu/data/one-api` ÁõÆÂΩïÔºåËØ∑Á°Æ‰øùËØ•ÁõÆÂΩïÂ≠òÂú®‰∏îÂÖ∑ÊúâÂÜôÂÖ•ÊùÉÈôêÔºåÊàñËÄÖÊõ¥Êîπ‰∏∫ÂêàÈÄÇÁöÑÁõÆÂΩï„ÄÇ

Â¶ÇÊûúÂêØÂä®Â§±Ë¥•ÔºåËØ∑Ê∑ªÂä† `--privileged=true`ÔºåÂÖ∑‰ΩìÂèÇËÄÉ https://github.com/songquanpeng/one-api/issues/482 „ÄÇ

Â¶ÇÊûú‰∏äÈù¢ÁöÑÈïúÂÉèÊó†Ê≥ïÊãâÂèñÔºåÂèØ‰ª•Â∞ùËØï‰ΩøÁî® GitHub ÁöÑ Docker ÈïúÂÉèÔºåÂ∞Ü‰∏äÈù¢ÁöÑ `justsong/one-api` ÊõøÊç¢‰∏∫ `ghcr.io/songquanpeng/one-api` Âç≥ÂèØ„ÄÇ

Â¶ÇÊûú‰Ω†ÁöÑÂπ∂ÂèëÈáèËæÉÂ§ßÔºå**Âä°ÂøÖ**ËÆæÁΩÆ `SQL_DSN`ÔºåËØ¶ËßÅ‰∏ãÈù¢[ÁéØÂ¢ÉÂèòÈáè](#ÁéØÂ¢ÉÂèòÈáè)‰∏ÄËäÇ„ÄÇ

Êõ¥Êñ∞ÂëΩ‰ª§Ôºö`docker run --rm -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower -cR`

Nginx ÁöÑÂèÇËÄÉÈÖçÁΩÆÔºö
```
server{
   server_name openai.justsong.cn;  # ËØ∑Ê†πÊçÆÂÆûÈôÖÊÉÖÂÜµ‰øÆÊîπ‰Ω†ÁöÑÂüüÂêç

   location / {
          client_max_body_size  64m;
          proxy_http_version 1.1;
          proxy_pass http://localhost:3000;  # ËØ∑Ê†πÊçÆÂÆûÈôÖÊÉÖÂÜµ‰øÆÊîπ‰Ω†ÁöÑÁ´ØÂè£
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $remote_addr;
          proxy_cache_bypass $http_upgrade;
          proxy_set_header Accept-Encoding gzip;
          proxy_read_timeout 300s;  # GPT-4 ÈúÄË¶ÅËæÉÈïøÁöÑË∂ÖÊó∂Êó∂Èó¥ÔºåËØ∑Ëá™Ë°åË∞ÉÊï¥
   }
}
```

‰πãÂêé‰ΩøÁî® Let&#039;s Encrypt ÁöÑ certbot ÈÖçÁΩÆ HTTPSÔºö
```bash
# Ubuntu ÂÆâË£Ö certbotÔºö
sudo snap install --classic certbot
sudo ln -s /snap/bin/certbot /usr/bin/certbot
# ÁîüÊàêËØÅ‰π¶ &amp; ‰øÆÊîπ Nginx ÈÖçÁΩÆ
sudo certbot --nginx
# Ê†πÊçÆÊåáÁ§∫ËøõË°åÊìç‰Ωú
# ÈáçÂêØ Nginx
sudo service nginx restart
```

ÂàùÂßãË¥¶Âè∑Áî®Êà∑Âêç‰∏∫ `root`ÔºåÂØÜÁ†Å‰∏∫ `123456`„ÄÇ

### ÈÄöËøáÂÆùÂ°îÈù¢ÊùøËøõË°å‰∏ÄÈîÆÈÉ®ÁΩ≤
1. ÂÆâË£ÖÂÆùÂ°îÈù¢Êùø9.2.0Âèä‰ª•‰∏äÁâàÊú¨ÔºåÂâçÂæÄ [ÂÆùÂ°îÈù¢Êùø](https://www.bt.cn/new/download.html?r=dk_oneapi) ÂÆòÁΩëÔºåÈÄâÊã©Ê≠£ÂºèÁâàÁöÑËÑöÊú¨‰∏ãËΩΩÂÆâË£ÖÔºõ
2. ÂÆâË£ÖÂêéÁôªÂΩïÂÆùÂ°îÈù¢ÊùøÔºåÂú®Â∑¶‰æßËèúÂçïÊ†è‰∏≠ÁÇπÂáª `Docker`ÔºåÈ¶ñÊ¨°ËøõÂÖ•‰ºöÊèêÁ§∫ÂÆâË£Ö `Docker` ÊúçÂä°ÔºåÁÇπÂáªÁ´ãÂç≥ÂÆâË£ÖÔºåÊåâÊèêÁ§∫ÂÆåÊàêÂÆâË£ÖÔºõ
3. ÂÆâË£ÖÂÆåÊàêÂêéÂú®Â∫îÁî®ÂïÜÂ∫ó‰∏≠ÊêúÁ¥¢ `One-API`ÔºåÁÇπÂáªÂÆâË£ÖÔºåÈÖçÁΩÆÂüüÂêçÁ≠âÂü∫Êú¨‰ø°ÊÅØÂç≥ÂèØÂÆåÊàêÂÆâË£ÖÔºõ

### Âü∫‰∫é Docker Compose ËøõË°åÈÉ®ÁΩ≤

&gt; ‰ªÖÂêØÂä®ÊñπÂºè‰∏çÂêåÔºåÂèÇÊï∞ËÆæÁΩÆ‰∏çÂèòÔºåËØ∑ÂèÇËÄÉÂü∫‰∫é Docker ÈÉ®ÁΩ≤ÈÉ®ÂàÜ

```shell
# ÁõÆÂâçÊîØÊåÅ MySQL ÂêØÂä®ÔºåÊï∞ÊçÆÂ≠òÂÇ®Âú® ./data/mysql Êñá‰ª∂Â§πÂÜÖ
docker-compose up -d

# Êü•ÁúãÈÉ®ÁΩ≤Áä∂ÊÄÅ
docker-compose ps
```

### ÊâãÂä®ÈÉ®ÁΩ≤
1. ‰ªé [GitHub Releases](https://github.com/songquanpeng/one-api/releases/latest) ‰∏ãËΩΩÂèØÊâßË°åÊñá‰ª∂ÊàñËÄÖ‰ªéÊ∫êÁ†ÅÁºñËØëÔºö
   ```shell
   git clone https://github.com/songquanpeng/one-api.git

   # ÊûÑÂª∫ÂâçÁ´Ø
   cd one-api/web/default
   npm install
   npm run build

   # ÊûÑÂª∫ÂêéÁ´Ø
   cd ../..
   go mod download
   go build -ldflags &quot;-s -w&quot; -o one-api
   ````
2. ËøêË°åÔºö
   ```shell
   chmod u+x one-api
   ./one-api --port 3000 --log-dir ./logs
   ```
3. ËÆøÈóÆ [http://localhost:3000/](http://localhost:3000/) Âπ∂ÁôªÂΩï„ÄÇÂàùÂßãË¥¶Âè∑Áî®Êà∑Âêç‰∏∫ `root`ÔºåÂØÜÁ†Å‰∏∫ `123456`„ÄÇ

Êõ¥Âä†ËØ¶ÁªÜÁöÑÈÉ®ÁΩ≤ÊïôÁ®ã[ÂèÇËßÅÊ≠§Â§Ñ](https://iamazing.cn/page/how-to-deploy-a-website)„ÄÇ

### Â§öÊú∫ÈÉ®ÁΩ≤
1. ÊâÄÊúâÊúçÂä°Âô® `SESSION_SECRET` ËÆæÁΩÆ‰∏ÄÊ†∑ÁöÑÂÄº„ÄÇ
2. ÂøÖÈ°ªËÆæÁΩÆ `SQL_DSN`Ôºå‰ΩøÁî® MySQL Êï∞ÊçÆÂ∫ìËÄåÈùû SQLiteÔºåÊâÄÊúâÊúçÂä°Âô®ËøûÊé•Âêå‰∏Ä‰∏™Êï∞ÊçÆÂ∫ì„ÄÇ
3. ÊâÄÊúâ‰ªéÊúçÂä°Âô®ÂøÖÈ°ªËÆæÁΩÆ `NODE_TYPE` ‰∏∫ `slave`Ôºå‰∏çËÆæÁΩÆÂàôÈªòËÆ§‰∏∫‰∏ªÊúçÂä°Âô®„ÄÇ
4. ËÆæÁΩÆ `SYNC_FREQUENCY` ÂêéÊúçÂä°Âô®Â∞ÜÂÆöÊúü‰ªéÊï∞ÊçÆÂ∫ìÂêåÊ≠•ÈÖçÁΩÆÔºåÂú®‰ΩøÁî®ËøúÁ®ãÊï∞ÊçÆÂ∫ìÁöÑÊÉÖÂÜµ‰∏ãÔºåÊé®ËçêËÆæÁΩÆËØ•È°πÂπ∂ÂêØÁî® RedisÔºåÊó†ËÆ∫‰∏ª‰ªé„ÄÇ
5. ‰ªéÊúçÂä°Âô®ÂèØ‰ª•ÈÄâÊã©ËÆæÁΩÆ `FRONTEND_BASE_URL`Ôºå‰ª•ÈáçÂÆöÂêëÈ°µÈù¢ËØ∑Ê±ÇÂà∞‰∏ªÊúçÂä°Âô®„ÄÇ
6. ‰ªéÊúçÂä°Âô®‰∏ä**ÂàÜÂà´**Ë£ÖÂ•Ω RedisÔºåËÆæÁΩÆÂ•Ω `REDIS_CONN_STRING`ÔºåËøôÊ†∑ÂèØ‰ª•ÂÅöÂà∞Âú®ÁºìÂ≠òÊú™ËøáÊúüÁöÑÊÉÖÂÜµ‰∏ãÊï∞ÊçÆÂ∫ìÈõ∂ËÆøÈóÆÔºåÂèØ‰ª•ÂáèÂ∞ëÂª∂ËøüÔºàRedis ÈõÜÁæ§ÊàñËÄÖÂì®ÂÖµÊ®°ÂºèÁöÑÊîØÊåÅËØ∑ÂèÇËÄÉÁéØÂ¢ÉÂèòÈáèËØ¥ÊòéÔºâ„ÄÇ
7. Â¶ÇÊûú‰∏ªÊúçÂä°Âô®ËÆøÈóÆÊï∞ÊçÆÂ∫ìÂª∂Ëøü‰πüÊØîËæÉÈ´òÔºåÂàô‰πüÈúÄË¶ÅÂêØÁî® RedisÔºåÂπ∂ËÆæÁΩÆ `SYNC_FREQUENCY`Ôºå‰ª•ÂÆöÊúü‰ªéÊï∞ÊçÆÂ∫ìÂêåÊ≠•ÈÖçÁΩÆ„ÄÇ

ÁéØÂ¢ÉÂèòÈáèÁöÑÂÖ∑‰Ωì‰ΩøÁî®ÊñπÊ≥ïËØ¶ËßÅ[Ê≠§Â§Ñ](#ÁéØÂ¢ÉÂèòÈáè)„ÄÇ

### ÂÆùÂ°îÈÉ®ÁΩ≤ÊïôÁ®ã

ËØ¶ËßÅ [#175](https://github.com/songquanpeng/one-api/issues/175)„ÄÇ

Â¶ÇÊûúÈÉ®ÁΩ≤ÂêéËÆøÈóÆÂá∫Áé∞Á©∫ÁôΩÈ°µÈù¢ÔºåËØ¶ËßÅ [#97](https://github.com/songquanpeng/one-api/issues/97)„ÄÇ

### ÈÉ®ÁΩ≤Á¨¨‰∏âÊñπÊúçÂä°ÈÖçÂêà One API ‰ΩøÁî®
&gt; Ê¨¢Ëøé PR Ê∑ªÂä†Êõ¥Â§öÁ§∫‰æã„ÄÇ

#### ChatGPT Next Web
È°πÁõÆ‰∏ªÈ°µÔºöhttps://github.com/Yidadaa/ChatGPT-Next-Web

```bash
docker run --name chat-next-web -d -p 3001:3000 yidadaa/chatgpt-next-web
```

Ê≥®ÊÑè‰øÆÊîπÁ´ØÂè£Âè∑Ôºå‰πãÂêéÂú®È°µÈù¢‰∏äËÆæÁΩÆÊé•Âè£Âú∞ÂùÄÔºà‰æãÂ¶ÇÔºöhttps://openai.justsong.cn/ ÔºâÂíå API Key Âç≥ÂèØ„ÄÇ

#### ChatGPT Web
È°πÁõÆ‰∏ªÈ°µÔºöhttps://github.com/Chanzhaoyu/chatgpt-web

```bash
docker run --name chatgpt-web -d -p 3002:3002 -e OPENAI_API_BASE_URL=https://openai.justsong.cn -e OPENAI_API_KEY=sk-xxx chenzhaoyu94/chatgpt-web
```

Ê≥®ÊÑè‰øÆÊîπÁ´ØÂè£Âè∑„ÄÅ`OPENAI_API_BASE_URL` Âíå `OPENAI_API_KEY`„ÄÇ

#### QChatGPT - QQÊú∫Âô®‰∫∫
È°πÁõÆ‰∏ªÈ°µÔºöhttps://github.com/RockChinQ/QChatGPT

Ê†πÊçÆ[ÊñáÊ°£](https://qchatgpt.rockchin.top)ÂÆåÊàêÈÉ®ÁΩ≤ÂêéÔºåÂú® `data/provider.json`ËÆæÁΩÆ`requester.openai-chat-completions.base-url`‰∏∫ One API ÂÆû‰æãÂú∞ÂùÄÔºåÂπ∂Â°´ÂÜô API Key Âà∞ `keys.openai` ÁªÑ‰∏≠ÔºåËÆæÁΩÆ `model` ‰∏∫Ë¶Å‰ΩøÁî®ÁöÑÊ®°ÂûãÂêçÁß∞„ÄÇ

ËøêË°åÊúüÈó¥ÂèØ‰ª•ÈÄöËøá`!model`ÂëΩ‰ª§Êü•Áúã„ÄÅÂàáÊç¢ÂèØÁî®Ê®°Âûã„ÄÇ

### ÈÉ®ÁΩ≤Âà∞Á¨¨‰∏âÊñπÂπ≥Âè∞
&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;ÈÉ®ÁΩ≤Âà∞ Sealos &lt;/strong&gt;&lt;/summary&gt;
&lt;div&gt;

&gt; Sealos ÁöÑÊúçÂä°Âô®Âú®ÂõΩÂ§ñÔºå‰∏çÈúÄË¶ÅÈ¢ùÂ§ñÂ§ÑÁêÜÁΩëÁªúÈóÆÈ¢òÔºåÊîØÊåÅÈ´òÂπ∂Âèë &amp; Âä®ÊÄÅ‰º∏Áº©„ÄÇ

ÁÇπÂáª‰ª•‰∏ãÊåâÈíÆ‰∏ÄÈîÆÈÉ®ÁΩ≤ÔºàÈÉ®ÁΩ≤ÂêéËÆøÈóÆÂá∫Áé∞ 404 ËØ∑Á≠âÂæÖ 3~5 ÂàÜÈíüÔºâÔºö

[![Deploy-on-Sealos.svg](https://raw.githubusercontent.com/labring-actions/templates/main/Deploy-on-Sealos.svg)](https://cloud.sealos.io/?openapp=system-fastdeploy?templateName=one-api)

&lt;/div&gt;
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;ÈÉ®ÁΩ≤Âà∞ Zeabur&lt;/strong&gt;&lt;/summary&gt;
&lt;div&gt;

&gt; Zeabur ÁöÑÊúçÂä°Âô®Âú®ÂõΩÂ§ñÔºåËá™Âä®Ëß£ÂÜ≥‰∫ÜÁΩëÁªúÁöÑÈóÆÈ¢òÔºåÂêåÊó∂ÂÖçË¥πÁöÑÈ¢ùÂ∫¶‰πüË∂≥Â§ü‰∏™‰∫∫‰ΩøÁî®

[![Deploy on Zeabur](https://zeabur.com/button.svg)](https://zeabur.com/templates/7Q0KO3)

1. È¶ñÂÖà fork ‰∏Ä‰ªΩ‰ª£Á†Å„ÄÇ
2. ËøõÂÖ• [Zeabur](https://zeabur.com?referralCode=songquanpeng)ÔºåÁôªÂΩïÔºåËøõÂÖ•ÊéßÂà∂Âè∞„ÄÇ
3. Êñ∞Âª∫‰∏Ä‰∏™ ProjectÔºåÂú® Service -&gt; Add Service ÈÄâÊã© MarketplaceÔºåÈÄâÊã© MySQLÔºåÂπ∂ËÆ∞‰∏ãËøûÊé•ÂèÇÊï∞ÔºàÁî®Êà∑Âêç„ÄÅÂØÜÁ†Å„ÄÅÂú∞ÂùÄ„ÄÅÁ´ØÂè£Ôºâ„ÄÇ
4. Â§çÂà∂ÈìæÊé•ÂèÇÊï∞ÔºåËøêË°å ```create database `one-api` ``` ÂàõÂª∫Êï∞ÊçÆÂ∫ì„ÄÇ
5. ÁÑ∂ÂêéÂú® Service -&gt; Add ServiceÔºåÈÄâÊã© GitÔºàÁ¨¨‰∏ÄÊ¨°‰ΩøÁî®ÈúÄË¶ÅÂÖàÊéàÊùÉÔºâÔºåÈÄâÊã©‰Ω† fork ÁöÑ‰ªìÂ∫ì„ÄÇ
6. Deploy ‰ºöËá™Âä®ÂºÄÂßãÔºåÂÖàÂèñÊ∂à„ÄÇËøõÂÖ•‰∏ãÊñπ VariableÔºåÊ∑ªÂä†‰∏Ä‰∏™ `PORT`ÔºåÂÄº‰∏∫ `3000`ÔºåÂÜçÊ∑ªÂä†‰∏Ä‰∏™ `SQL_DSN`ÔºåÂÄº‰∏∫ `&lt;username&gt;:&lt;password&gt;@tcp(&lt;addr&gt;:&lt;port&gt;)/one-api` ÔºåÁÑ∂Âêé‰øùÂ≠ò„ÄÇ Ê≥®ÊÑèÂ¶ÇÊûú‰∏çÂ°´ÂÜô `SQL_DSN`ÔºåÊï∞ÊçÆÂ∞ÜÊó†Ê≥ïÊåÅ‰πÖÂåñÔºåÈáçÊñ∞ÈÉ®ÁΩ≤ÂêéÊï∞ÊçÆ‰ºö‰∏¢Â§±„ÄÇ
7. ÈÄâÊã© Redeploy„ÄÇ
8. ËøõÂÖ•‰∏ãÊñπ DomainsÔºåÈÄâÊã©‰∏Ä‰∏™ÂêàÈÄÇÁöÑÂüüÂêçÂâçÁºÄÔºåÂ¶Ç &quot;my-one-api&quot;ÔºåÊúÄÁªàÂüüÂêç‰∏∫ &quot;my-one-api.zeabur.app&quot;Ôºå‰πüÂèØ‰ª• CNAME Ëá™Â∑±ÁöÑÂüüÂêç„ÄÇ
9. Á≠âÂæÖÈÉ®ÁΩ≤ÂÆåÊàêÔºåÁÇπÂáªÁîüÊàêÁöÑÂüüÂêçËøõÂÖ• One API„ÄÇ

&lt;/div&gt;
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;ÈÉ®ÁΩ≤Âà∞ Render&lt;/strong&gt;&lt;/summary&gt;
&lt;div&gt;

&gt; Render Êèê‰æõÂÖçË¥πÈ¢ùÂ∫¶ÔºåÁªëÂç°ÂêéÂèØ‰ª•Ëøõ‰∏ÄÊ≠•ÊèêÂçáÈ¢ùÂ∫¶

Render ÂèØ‰ª•Áõ¥Êé•ÈÉ®ÁΩ≤ docker ÈïúÂÉèÔºå‰∏çÈúÄË¶Å fork ‰ªìÂ∫ìÔºöhttps://dashboard.render.com

&lt;/div&gt;
&lt;/details&gt;

## ÈÖçÁΩÆ
Á≥ªÁªüÊú¨Ë∫´ÂºÄÁÆ±Âç≥Áî®„ÄÇ

‰Ω†ÂèØ‰ª•ÈÄöËøáËÆæÁΩÆÁéØÂ¢ÉÂèòÈáèÊàñËÄÖÂëΩ‰ª§Ë°åÂèÇÊï∞ËøõË°åÈÖçÁΩÆ„ÄÇ

Á≠âÂà∞Á≥ªÁªüÂêØÂä®ÂêéÔºå‰ΩøÁî® `root` Áî®Êà∑ÁôªÂΩïÁ≥ªÁªüÂπ∂ÂÅöËøõ‰∏ÄÊ≠•ÁöÑÈÖçÁΩÆ„ÄÇ

**Note**ÔºöÂ¶ÇÊûú‰Ω†‰∏çÁü•ÈÅìÊüê‰∏™ÈÖçÁΩÆÈ°πÁöÑÂê´‰πâÔºåÂèØ‰ª•‰∏¥Êó∂Âà†ÊéâÂÄº‰ª•ÁúãÂà∞Ëøõ‰∏ÄÊ≠•ÁöÑÊèêÁ§∫ÊñáÂ≠ó„ÄÇ

## ‰ΩøÁî®ÊñπÊ≥ï
Âú®`Ê∏†ÈÅì`È°µÈù¢‰∏≠Ê∑ªÂä†‰Ω†ÁöÑ API KeyÔºå‰πãÂêéÂú®`‰ª§Áâå`È°µÈù¢‰∏≠Êñ∞Â¢ûËÆøÈóÆ‰ª§Áâå„ÄÇ

‰πãÂêéÂ∞±ÂèØ‰ª•‰ΩøÁî®‰Ω†ÁöÑ‰ª§ÁâåËÆøÈóÆ One API ‰∫ÜÔºå‰ΩøÁî®ÊñπÂºè‰∏é [OpenAI API](https://platform.openai.com/docs/api-reference/introduction) ‰∏ÄËá¥„ÄÇ

‰Ω†ÈúÄË¶ÅÂú®ÂêÑÁßçÁî®Âà∞ OpenAI API ÁöÑÂú∞ÊñπËÆæÁΩÆ API Base ‰∏∫‰Ω†ÁöÑ One API ÁöÑÈÉ®ÁΩ≤Âú∞ÂùÄÔºå‰æãÂ¶ÇÔºö`https://openai.justsong.cn`ÔºåAPI Key Âàô‰∏∫‰Ω†Âú® One API ‰∏≠ÁîüÊàêÁöÑ‰ª§Áâå„ÄÇ

Ê≥®ÊÑèÔºåÂÖ∑‰ΩìÁöÑ API Base ÁöÑÊ†ºÂºèÂèñÂÜ≥‰∫é‰Ω†ÊâÄ‰ΩøÁî®ÁöÑÂÆ¢Êà∑Á´Ø„ÄÇ

‰æãÂ¶ÇÂØπ‰∫é OpenAI ÁöÑÂÆòÊñπÂ∫ìÔºö
```bash
OPENAI_API_KEY=&quot;sk-xxxxxx&quot;
OPENAI_API_BASE=&quot;https://&lt;HOST&gt;:&lt;PORT&gt;/v1&quot;
```

```mermaid
graph LR
    A(Áî®Êà∑)
    A ---&gt;|‰ΩøÁî® One API ÂàÜÂèëÁöÑ key ËøõË°åËØ∑Ê±Ç| B(One API)
    B --&gt;|‰∏≠ÁªßËØ∑Ê±Ç| C(OpenAI)
    B --&gt;|‰∏≠ÁªßËØ∑Ê±Ç| D(Azure)
    B --&gt;|‰∏≠ÁªßËØ∑Ê±Ç| E(ÂÖ∂‰ªñ OpenAI API Ê†ºÂºè‰∏ãÊ∏∏Ê∏†ÈÅì)
    B --&gt;|‰∏≠ÁªßÂπ∂‰øÆÊîπËØ∑Ê±Ç‰ΩìÂíåËøîÂõû‰Ωì| F(Èùû OpenAI API Ê†ºÂºè‰∏ãÊ∏∏Ê∏†ÈÅì)
```

ÂèØ‰ª•ÈÄöËøáÂú®‰ª§ÁâåÂêéÈù¢Ê∑ªÂä†Ê∏†ÈÅì ID ÁöÑÊñπÂºèÊåáÂÆö‰ΩøÁî®Âì™‰∏Ä‰∏™Ê∏†ÈÅìÂ§ÑÁêÜÊú¨Ê¨°ËØ∑Ê±ÇÔºå‰æãÂ¶ÇÔºö`Authorization: Bearer ONE_API_KEY-CHANNEL_ID`„ÄÇ
Ê≥®ÊÑèÔºåÈúÄË¶ÅÊòØÁÆ°ÁêÜÂëòÁî®Êà∑ÂàõÂª∫ÁöÑ‰ª§ÁâåÊâçËÉΩÊåáÂÆöÊ∏†ÈÅì ID„ÄÇ

‰∏çÂä†ÁöÑËØùÂ∞Ü‰ºö‰ΩøÁî®Ë¥üËΩΩÂùáË°°ÁöÑÊñπÂºè‰ΩøÁî®Â§ö‰∏™Ê∏†ÈÅì„ÄÇ

### ÁéØÂ¢ÉÂèòÈáè
&gt; One API ÊîØÊåÅ‰ªé `.env` Êñá‰ª∂‰∏≠ËØªÂèñÁéØÂ¢ÉÂèòÈáèÔºåËØ∑ÂèÇÁÖß `.env.example` Êñá‰ª∂Ôºå‰ΩøÁî®Êó∂ËØ∑Â∞ÜÂÖ∂ÈáçÂëΩÂêç‰∏∫ `.env`„ÄÇ
1. `REDIS_CONN_STRING`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞Ü‰ΩøÁî® Redis ‰Ωú‰∏∫ÁºìÂ≠ò‰ΩøÁî®„ÄÇ
   + ‰æãÂ≠êÔºö`REDIS_CONN_STRING=redis://default:redispw@localhost:49153`
   + Â¶ÇÊûúÊï∞ÊçÆÂ∫ìËÆøÈóÆÂª∂ËøüÂæà‰ΩéÔºåÊ≤°ÊúâÂøÖË¶ÅÂêØÁî® RedisÔºåÂêØÁî®ÂêéÂèçËÄå‰ºöÂá∫Áé∞Êï∞ÊçÆÊªûÂêéÁöÑÈóÆÈ¢ò„ÄÇ
   + Â¶ÇÊûúÈúÄË¶Å‰ΩøÁî®Âì®ÂÖµÊàñËÄÖÈõÜÁæ§Ê®°ÂºèÔºö
     + ÂàôÈúÄË¶ÅÊääËØ•ÁéØÂ¢ÉÂèòÈáèËÆæÁΩÆ‰∏∫ËäÇÁÇπÂàóË°®Ôºå‰æãÂ¶ÇÔºö`localhost:49153,localhost:49154,localhost:49155`„ÄÇ
     + Èô§Ê≠§‰πãÂ§ñËøòÈúÄË¶ÅËÆæÁΩÆ‰ª•‰∏ãÁéØÂ¢ÉÂèòÈáèÔºö
       + `REDIS_PASSWORD`ÔºöRedis ÈõÜÁæ§ÊàñËÄÖÂì®ÂÖµÊ®°Âºè‰∏ãÁöÑÂØÜÁ†ÅËÆæÁΩÆ„ÄÇ
       + `REDIS_MASTER_NAME`ÔºöRedis Âì®ÂÖµÊ®°Âºè‰∏ã‰∏ªËäÇÁÇπÁöÑÂêçÁß∞„ÄÇ
2. `SESSION_SECRET`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞Ü‰ΩøÁî®Âõ∫ÂÆöÁöÑ‰ºöËØùÂØÜÈí•ÔºåËøôÊ†∑Á≥ªÁªüÈáçÊñ∞ÂêØÂä®ÂêéÂ∑≤ÁôªÂΩïÁî®Êà∑ÁöÑ cookie Â∞Ü‰æùÊóßÊúâÊïà„ÄÇ
   + ‰æãÂ≠êÔºö`SESSION_SECRET=random_string`
3. `SQL_DSN`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞Ü‰ΩøÁî®ÊåáÂÆöÊï∞ÊçÆÂ∫ìËÄåÈùû SQLiteÔºåËØ∑‰ΩøÁî® MySQL Êàñ PostgreSQL„ÄÇ
   + ‰æãÂ≠êÔºö
     + MySQLÔºö`SQL_DSN=root:123456@tcp(localhost:3306)/oneapi`
     + PostgreSQLÔºö`SQL_DSN=postgres://postgres:123456@localhost:5432/oneapi`ÔºàÈÄÇÈÖç‰∏≠ÔºåÊ¨¢ËøéÂèçÈ¶àÔºâ
   + Ê≥®ÊÑèÈúÄË¶ÅÊèêÂâçÂª∫Á´ãÊï∞ÊçÆÂ∫ì `oneapi`ÔºåÊó†ÈúÄÊâãÂä®Âª∫Ë°®ÔºåÁ®ãÂ∫èÂ∞ÜËá™Âä®Âª∫Ë°®„ÄÇ
   + Â¶ÇÊûú‰ΩøÁî®Êú¨Âú∞Êï∞ÊçÆÂ∫ìÔºöÈÉ®ÁΩ≤ÂëΩ‰ª§ÂèØÊ∑ªÂä† `--network=&quot;host&quot;` ‰ª•‰ΩøÂæóÂÆπÂô®ÂÜÖÁöÑÁ®ãÂ∫èÂèØ‰ª•ËÆøÈóÆÂà∞ÂÆø‰∏ªÊú∫‰∏äÁöÑ MySQL„ÄÇ
   + Â¶ÇÊûú‰ΩøÁî®‰∫ëÊï∞ÊçÆÂ∫ìÔºöÂ¶ÇÊûú‰∫ëÊúçÂä°Âô®ÈúÄË¶ÅÈ™åËØÅË∫´‰ªΩÔºåÈúÄË¶ÅÂú®ËøûÊé•ÂèÇÊï∞‰∏≠Ê∑ªÂä† `?tls=skip-verify`„ÄÇ
   + ËØ∑Ê†πÊçÆ‰Ω†ÁöÑÊï∞ÊçÆÂ∫ìÈÖçÁΩÆ‰øÆÊîπ‰∏ãÂàóÂèÇÊï∞ÔºàÊàñËÄÖ‰øùÊåÅÈªòËÆ§ÂÄºÔºâÔºö
     + `SQL_MAX_IDLE_CONNS`ÔºöÊúÄÂ§ßÁ©∫Èó≤ËøûÊé•Êï∞ÔºåÈªòËÆ§‰∏∫ `100`„ÄÇ
     + `SQL_MAX_OPEN_CONNS`ÔºöÊúÄÂ§ßÊâìÂºÄËøûÊé•Êï∞ÔºåÈªòËÆ§‰∏∫ `1000`„ÄÇ
       + Â¶ÇÊûúÊä•Èîô `Error 1040: Too many connections`ÔºåËØ∑ÈÄÇÂΩìÂáèÂ∞èËØ•ÂÄº„ÄÇ
     + `SQL_CONN_MAX_LIFETIME`ÔºöËøûÊé•ÁöÑÊúÄÂ§ßÁîüÂëΩÂë®ÊúüÔºåÈªòËÆ§‰∏∫ `60`ÔºåÂçï‰ΩçÂàÜÈíü„ÄÇ
4. `LOG_SQL_DSN`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞Ü‰∏∫ `logs` Ë°®‰ΩøÁî®Áã¨Á´ãÁöÑÊï∞ÊçÆÂ∫ìÔºåËØ∑‰ΩøÁî® MySQL Êàñ PostgreSQL„ÄÇ
5. `FRONTEND_BASE_URL`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞ÜÈáçÂÆöÂêëÈ°µÈù¢ËØ∑Ê±ÇÂà∞ÊåáÂÆöÁöÑÂú∞ÂùÄÔºå‰ªÖÈôê‰ªéÊúçÂä°Âô®ËÆæÁΩÆ„ÄÇ
   + ‰æãÂ≠êÔºö`FRONTEND_BASE_URL=https://openai.justsong.cn`
6. `MEMORY_CACHE_ENABLED`ÔºöÂêØÁî®ÂÜÖÂ≠òÁºìÂ≠òÔºå‰ºöÂØºËá¥Áî®Êà∑È¢ùÂ∫¶ÁöÑÊõ¥Êñ∞Â≠òÂú®‰∏ÄÂÆöÁöÑÂª∂ËøüÔºåÂèØÈÄâÂÄº‰∏∫ `true` Âíå `false`ÔºåÊú™ËÆæÁΩÆÂàôÈªòËÆ§‰∏∫ `false`„ÄÇ
   + ‰æãÂ≠êÔºö`MEMORY_CACHE_ENABLED=true`
7. `SYNC_FREQUENCY`ÔºöÂú®ÂêØÁî®ÁºìÂ≠òÁöÑÊÉÖÂÜµ‰∏ã‰∏éÊï∞ÊçÆÂ∫ìÂêåÊ≠•ÈÖçÁΩÆÁöÑÈ¢ëÁéáÔºåÂçï‰Ωç‰∏∫ÁßíÔºåÈªòËÆ§‰∏∫ `600` Áßí„ÄÇ
   + ‰æãÂ≠êÔºö`SYNC_FREQUENCY=60`
8. `NODE_TYPE`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞ÜÊåáÂÆöËäÇÁÇπÁ±ªÂûãÔºåÂèØÈÄâÂÄº‰∏∫ `master` Âíå `slave`ÔºåÊú™ËÆæÁΩÆÂàôÈªòËÆ§‰∏∫ `master`„ÄÇ
   + ‰æãÂ≠êÔºö`NODE_TYPE=slave`
9. `CHANNEL_UPDATE_FREQUENCY`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞ÜÂÆöÊúüÊõ¥Êñ∞Ê∏†ÈÅì‰ΩôÈ¢ùÔºåÂçï‰Ωç‰∏∫ÂàÜÈíüÔºåÊú™ËÆæÁΩÆÂàô‰∏çËøõË°åÊõ¥Êñ∞„ÄÇ
   + ‰æãÂ≠êÔºö`CHANNEL_UPDATE_FREQUENCY=1440`
10. `CHANNEL_TEST_FREQUENCY`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞ÜÂÆöÊúüÊ£ÄÊü•Ê∏†ÈÅìÔºåÂçï‰Ωç‰∏∫ÂàÜÈíüÔºåÊú™ËÆæÁΩÆÂàô‰∏çËøõË°åÊ£ÄÊü•„ÄÇ 
   +‰æãÂ≠êÔºö`CHANNEL_TEST_FREQUENCY=1440`
11. `POLLING_INTERVAL`ÔºöÊâπÈáèÊõ¥Êñ∞Ê∏†ÈÅì‰ΩôÈ¢ù‰ª•ÂèäÊµãËØïÂèØÁî®ÊÄßÊó∂ÁöÑËØ∑Ê±ÇÈó¥ÈöîÔºåÂçï‰Ωç‰∏∫ÁßíÔºåÈªòËÆ§Êó†Èó¥Èöî„ÄÇ
    + ‰æãÂ≠êÔºö`POLLING_INTERVAL=5`
12. `BATCH_UPDATE_ENABLED`ÔºöÂêØÁî®Êï∞ÊçÆÂ∫ìÊâπÈáèÊõ¥Êñ∞ËÅöÂêàÔºå‰ºöÂØºËá¥Áî®Êà∑È¢ùÂ∫¶ÁöÑÊõ¥Êñ∞Â≠òÂú®‰∏ÄÂÆöÁöÑÂª∂ËøüÂèØÈÄâÂÄº‰∏∫ `true` Âíå `false`ÔºåÊú™ËÆæÁΩÆÂàôÈªòËÆ§‰∏∫ `false`„ÄÇ
    + ‰æãÂ≠êÔºö`BATCH_UPDATE_ENABLED=true`
    + Â¶ÇÊûú‰Ω†ÈÅáÂà∞‰∫ÜÊï∞ÊçÆÂ∫ìËøûÊé•Êï∞ËøáÂ§öÁöÑÈóÆÈ¢òÔºåÂèØ‰ª•Â∞ùËØïÂêØÁî®ËØ•ÈÄâÈ°π„ÄÇ
13. `BATCH_UPDATE_INTERVAL=5`ÔºöÊâπÈáèÊõ¥Êñ∞ËÅöÂêàÁöÑÊó∂Èó¥Èó¥ÈöîÔºåÂçï‰Ωç‰∏∫ÁßíÔºåÈªòËÆ§‰∏∫ `5`„ÄÇ
    + ‰æãÂ≠êÔºö`BATCH_UPDATE_INTERVAL=5`
14. ËØ∑Ê±ÇÈ¢ëÁéáÈôêÂà∂Ôºö
    + `GLOBAL_API_RATE_LIMIT`ÔºöÂÖ®Â±Ä API ÈÄüÁéáÈôêÂà∂ÔºàÈô§‰∏≠ÁªßËØ∑Ê±ÇÂ§ñÔºâÔºåÂçï ip ‰∏âÂàÜÈíüÂÜÖÁöÑÊúÄÂ§ßËØ∑Ê±ÇÊï∞ÔºåÈªòËÆ§‰∏∫ `180`„ÄÇ
    + `GLOBAL_WEB_RATE_LIMIT`ÔºöÂÖ®Â±Ä Web ÈÄüÁéáÈôêÂà∂ÔºåÂçï ip ‰∏âÂàÜÈíüÂÜÖÁöÑÊúÄÂ§ßËØ∑Ê±ÇÊï∞ÔºåÈªòËÆ§‰∏∫ `60`„ÄÇ
15. ÁºñÁ†ÅÂô®ÁºìÂ≠òËÆæÁΩÆÔºö
    + `TIKTOKEN_CACHE_DIR`ÔºöÈªòËÆ§Á®ãÂ∫èÂêØÂä®Êó∂‰ºöËÅîÁΩë‰∏ãËΩΩ‰∏Ä‰∫õÈÄöÁî®ÁöÑËØçÂÖÉÁöÑÁºñÁ†ÅÔºåÂ¶ÇÔºö`gpt-3.5-turbo`ÔºåÂú®‰∏Ä‰∫õÁΩëÁªúÁéØÂ¢É‰∏çÁ®≥ÂÆöÔºåÊàñËÄÖÁ¶ªÁ∫øÊÉÖÂÜµÔºåÂèØËÉΩ‰ºöÂØºËá¥ÂêØÂä®ÊúâÈóÆÈ¢òÔºåÂèØ‰ª•ÈÖçÁΩÆÊ≠§ÁõÆÂΩïÁºìÂ≠òÊï∞ÊçÆÔºåÂèØËøÅÁßªÂà∞Á¶ªÁ∫øÁéØÂ¢É„ÄÇ
    + `DATA_GYM_CACHE_DIR`ÔºöÁõÆÂâçËØ•ÈÖçÁΩÆ‰ΩúÁî®‰∏é `TIKTOKEN_CACHE_DIR` ‰∏ÄËá¥Ôºå‰ΩÜÊòØ‰ºòÂÖàÁ∫ßÊ≤°ÊúâÂÆÉÈ´ò„ÄÇ
16. `RELAY_TIMEOUT`Ôºö‰∏≠ÁªßË∂ÖÊó∂ËÆæÁΩÆÔºåÂçï‰Ωç‰∏∫ÁßíÔºåÈªòËÆ§‰∏çËÆæÁΩÆË∂ÖÊó∂Êó∂Èó¥„ÄÇ
17. `RELAY_PROXY`ÔºöËÆæÁΩÆÂêé‰ΩøÁî®ËØ•‰ª£ÁêÜÊù•ËØ∑Ê±Ç API„ÄÇ
18. `USER_CONTENT_REQUEST_TIMEOUT`ÔºöÁî®Êà∑‰∏ä‰º†ÂÜÖÂÆπ‰∏ãËΩΩË∂ÖÊó∂Êó∂Èó¥ÔºåÂçï‰Ωç‰∏∫Áßí„ÄÇ
19. `USER_CONTENT_REQUEST_PROXY`ÔºöËÆæÁΩÆÂêé‰ΩøÁî®ËØ•‰ª£ÁêÜÊù•ËØ∑Ê±ÇÁî®Êà∑‰∏ä‰º†ÁöÑÂÜÖÂÆπÔºå‰æãÂ¶ÇÂõæÁâá„ÄÇ
20. `SQLITE_BUSY_TIMEOUT`ÔºöSQLite ÈîÅÁ≠âÂæÖË∂ÖÊó∂ËÆæÁΩÆÔºåÂçï‰Ωç‰∏∫ÊØ´ÁßíÔºåÈªòËÆ§ `3000`„ÄÇ
21. `GEMINI_SAFETY_SETTING`ÔºöGemini ÁöÑÂÆâÂÖ®ËÆæÁΩÆÔºåÈªòËÆ§ `BLOCK_NONE`„ÄÇ
22. `GEMINI_VERSION`ÔºöOne API ÊâÄ‰ΩøÁî®ÁöÑ Gemini ÁâàÊú¨ÔºåÈªòËÆ§‰∏∫ `v1`„ÄÇ
23. `THEME`ÔºöÁ≥ªÁªüÁöÑ‰∏ªÈ¢òËÆæÁΩÆÔºåÈªòËÆ§‰∏∫ `default`ÔºåÂÖ∑‰ΩìÂèØÈÄâÂÄºÂèÇËÄÉ[Ê≠§Â§Ñ](./web/README.md)„ÄÇ
24. `ENABLE_METRIC`ÔºöÊòØÂê¶Ê†πÊçÆËØ∑Ê±ÇÊàêÂäüÁéáÁ¶ÅÁî®Ê∏†ÈÅìÔºåÈªòËÆ§‰∏çÂºÄÂêØÔºåÂèØÈÄâÂÄº‰∏∫ `true` Âíå `false`„ÄÇ
25. `METRIC_QUEUE_SIZE`ÔºöËØ∑Ê±ÇÊàêÂäüÁéáÁªüËÆ°ÈòüÂàóÂ§ßÂ∞èÔºåÈªòËÆ§‰∏∫ `10`„ÄÇ
26. `METRIC_SUCCESS_RATE_THRESHOLD`ÔºöËØ∑Ê±ÇÊàêÂäüÁéáÈòàÂÄºÔºåÈªòËÆ§‰∏∫ `0.8`„ÄÇ
27. `INITIAL_ROOT_TOKEN`ÔºöÂ¶ÇÊûúËÆæÁΩÆ‰∫ÜËØ•ÂÄºÔºåÂàôÂú®Á≥ªÁªüÈ¶ñÊ¨°ÂêØÂä®Êó∂‰ºöËá™Âä®ÂàõÂª∫‰∏Ä‰∏™ÂÄº‰∏∫ËØ•ÁéØÂ¢ÉÂèòÈáèÂÄºÁöÑ root Áî®Êà∑‰ª§Áâå„ÄÇ
28. `INITIAL_ROOT_ACCESS_TOKEN`ÔºöÂ¶ÇÊûúËÆæÁΩÆ‰∫ÜËØ•ÂÄºÔºåÂàôÂú®Á≥ªÁªüÈ¶ñÊ¨°ÂêØÂä®Êó∂‰ºöËá™Âä®ÂàõÂª∫‰∏Ä‰∏™ÂÄº‰∏∫ËØ•ÁéØÂ¢ÉÂèòÈáèÁöÑ root Áî®Êà∑ÂàõÂª∫Á≥ªÁªüÁÆ°ÁêÜ‰ª§Áâå„ÄÇ
29. `ENFORCE_INCLUDE_USAGE`ÔºöÊòØÂê¶Âº∫Âà∂Âú® stream Ê®°Âûã‰∏ãËøîÂõû usageÔºåÈªòËÆ§‰∏çÂºÄÂêØÔºåÂèØÈÄâÂÄº‰∏∫ `true` Âíå `false`„ÄÇ
30. `TEST_PROMPT`ÔºöÊµãËØïÊ®°ÂûãÊó∂ÁöÑÁî®Êà∑ promptÔºåÈªòËÆ§‰∏∫ `Print your model name exactly and do not output without any other text.`„ÄÇ

### ÂëΩ‰ª§Ë°åÂèÇÊï∞
1. `--port &lt;port_number&gt;`: ÊåáÂÆöÊúçÂä°Âô®ÁõëÂê¨ÁöÑÁ´ØÂè£Âè∑ÔºåÈªòËÆ§‰∏∫ `3000`„ÄÇ
   + ‰æãÂ≠êÔºö`--port 3000`
2. `--log-dir &lt;log_dir&gt;`: ÊåáÂÆöÊó•ÂøóÊñá‰ª∂Â§πÔºåÂ¶ÇÊûúÊ≤°ÊúâËÆæÁΩÆÔºåÈªòËÆ§‰øùÂ≠òËá≥Â∑•‰ΩúÁõÆÂΩïÁöÑ `logs` Êñá‰ª∂Â§π‰∏ã„ÄÇ
   + ‰æãÂ≠êÔºö`--log-dir ./logs`
3. `--version`: ÊâìÂç∞Á≥ªÁªüÁâàÊú¨Âè∑Âπ∂ÈÄÄÂá∫„ÄÇ
4. `--help`: Êü•ÁúãÂëΩ‰ª§ÁöÑ‰ΩøÁî®Â∏ÆÂä©ÂíåÂèÇÊï∞ËØ¥Êòé„ÄÇ

## ÊºîÁ§∫
### Âú®Á∫øÊºîÁ§∫
Ê≥®ÊÑèÔºåËØ•ÊºîÁ§∫Á´ô‰∏çÊèê‰æõÂØπÂ§ñÊúçÂä°Ôºö
https://openai.justsong.cn

### Êà™ÂõæÂ±ïÁ§∫
![channel](https://user-images.githubusercontent.com/39998050/233837954-ae6683aa-5c4f-429f-a949-6645a83c9490.png)
![token](https://user-images.githubusercontent.com/39998050/233837971-dab488b7-6d96-43af-b640-a168e8d1c9bf.png)

## Â∏∏ËßÅÈóÆÈ¢ò
1. È¢ùÂ∫¶ÊòØ‰ªÄ‰πàÔºüÊÄé‰πàËÆ°ÁÆóÁöÑÔºüOne API ÁöÑÈ¢ùÂ∫¶ËÆ°ÁÆóÊúâÈóÆÈ¢òÔºü
   + È¢ùÂ∫¶ = ÂàÜÁªÑÂÄçÁéá * Ê®°ÂûãÂÄçÁéá * ÔºàÊèêÁ§∫ token Êï∞ + Ë°•ÂÖ® token Êï∞ * Ë°•ÂÖ®ÂÄçÁéáÔºâ
   + ÂÖ∂‰∏≠Ë°•ÂÖ®ÂÄçÁéáÂØπ‰∫é GPT3.5 Âõ∫ÂÆö‰∏∫ 1.33ÔºåGPT4 ‰∏∫ 2Ôºå‰∏éÂÆòÊñπ‰øùÊåÅ‰∏ÄËá¥„ÄÇ
   + Â¶ÇÊûúÊòØÈùûÊµÅÊ®°ÂºèÔºåÂÆòÊñπÊé•Âè£‰ºöËøîÂõûÊ∂àËÄóÁöÑÊÄª tokenÔºå‰ΩÜÊòØ‰Ω†Ë¶ÅÊ≥®ÊÑèÊèêÁ§∫ÂíåË°•ÂÖ®ÁöÑÊ∂àËÄóÂÄçÁéá‰∏ç‰∏ÄÊ†∑„ÄÇ
   + Ê≥®ÊÑèÔºåOne API ÁöÑÈªòËÆ§ÂÄçÁéáÂ∞±ÊòØÂÆòÊñπÂÄçÁéáÔºåÊòØÂ∑≤ÁªèË∞ÉÊï¥ËøáÁöÑ„ÄÇ
2. Ë¥¶Êà∑È¢ùÂ∫¶Ë∂≥Â§ü‰∏∫‰ªÄ‰πàÊèêÁ§∫È¢ùÂ∫¶‰∏çË∂≥Ôºü
   + ËØ∑Ê£ÄÊü•‰Ω†ÁöÑ‰ª§ÁâåÈ¢ùÂ∫¶ÊòØÂê¶Ë∂≥Â§üÔºåËøô‰∏™ÂíåË¥¶Êà∑È¢ùÂ∫¶ÊòØÂàÜÂºÄÁöÑ„ÄÇ
   + ‰ª§ÁâåÈ¢ùÂ∫¶‰ªÖ‰æõÁî®Êà∑ËÆæÁΩÆÊúÄÂ§ß‰ΩøÁî®ÈáèÔºåÁî®Êà∑ÂèØËá™Áî±ËÆæÁΩÆ„ÄÇ
3. ÊèêÁ§∫Êó†ÂèØÁî®Ê∏†ÈÅìÔºü
   + ËØ∑Ê£ÄÊü•ÁöÑÁî®Êà∑ÂàÜÁªÑÂíåÊ∏†ÈÅìÂàÜÁªÑËÆæÁΩÆ„ÄÇ
   + ‰ª•ÂèäÊ∏†ÈÅìÁöÑÊ®°ÂûãËÆæÁΩÆ„ÄÇ
4. Ê∏†ÈÅìÊµãËØïÊä•ÈîôÔºö`invalid character &#039;&lt;&#039; looking for beginning of value`
   + ËøôÊòØÂõ†‰∏∫ËøîÂõûÂÄº‰∏çÊòØÂêàÊ≥ïÁöÑ JSONÔºåËÄåÊòØ‰∏Ä‰∏™ HTML È°µÈù¢„ÄÇ
   + Â§ßÊ¶ÇÁéáÊòØ‰Ω†ÁöÑÈÉ®ÁΩ≤Á´ôÁöÑ IP Êàñ‰ª£ÁêÜÁöÑËäÇÁÇπË¢´ CloudFlare Â∞ÅÁ¶Å‰∫Ü„ÄÇ
5. ChatGPT Next Web Êä•ÈîôÔºö`Failed to fetch`
   + ÈÉ®ÁΩ≤ÁöÑÊó∂ÂÄô‰∏çË¶ÅËÆæÁΩÆ `BASE_URL`„ÄÇ
   + Ê£ÄÊü•‰Ω†ÁöÑÊé•Âè£Âú∞ÂùÄÂíå API Key ÊúâÊ≤°ÊúâÂ°´ÂØπ„ÄÇ
   + Ê£ÄÊü•ÊòØÂê¶ÂêØÁî®‰∫Ü HTTPSÔºåÊµèËßàÂô®‰ºöÊã¶Êà™ HTTPS ÂüüÂêç‰∏ãÁöÑ HTTP ËØ∑Ê±Ç„ÄÇ
6. Êä•ÈîôÔºö`ÂΩìÂâçÂàÜÁªÑË¥üËΩΩÂ∑≤È•±ÂíåÔºåËØ∑Á®çÂêéÂÜçËØï`
   + ‰∏äÊ∏∏Ê∏†ÈÅì 429 ‰∫Ü„ÄÇ
7. ÂçáÁ∫ß‰πãÂêéÊàëÁöÑÊï∞ÊçÆ‰ºö‰∏¢Â§±ÂêóÔºü
   + Â¶ÇÊûú‰ΩøÁî® MySQLÔºå‰∏ç‰ºö„ÄÇ
   + Â¶ÇÊûú‰ΩøÁî® SQLiteÔºåÈúÄË¶ÅÊåâÁÖßÊàëÊâÄÁªôÁöÑÈÉ®ÁΩ≤ÂëΩ‰ª§ÊåÇËΩΩ volume ÊåÅ‰πÖÂåñ one-api.db Êï∞ÊçÆÂ∫ìÊñá‰ª∂ÔºåÂê¶ÂàôÂÆπÂô®ÈáçÂêØÂêéÊï∞ÊçÆ‰ºö‰∏¢Â§±„ÄÇ
8. ÂçáÁ∫ß‰πãÂâçÊï∞ÊçÆÂ∫ìÈúÄË¶ÅÂÅöÂèòÊõ¥ÂêóÔºü
   + ‰∏ÄËà¨ÊÉÖÂÜµ‰∏ã‰∏çÈúÄË¶ÅÔºåÁ≥ªÁªüÂ∞ÜÂú®ÂàùÂßãÂåñÁöÑÊó∂ÂÄôËá™Âä®Ë∞ÉÊï¥„ÄÇ
   + Â¶ÇÊûúÈúÄË¶ÅÁöÑËØùÔºåÊàë‰ºöÂú®Êõ¥Êñ∞Êó•Âøó‰∏≠ËØ¥ÊòéÔºåÂπ∂ÁªôÂá∫ËÑöÊú¨„ÄÇ
9. ÊâãÂä®‰øÆÊîπÊï∞ÊçÆÂ∫ìÂêéÊä•ÈîôÔºö`Êï∞ÊçÆÂ∫ì‰∏ÄËá¥ÊÄßÂ∑≤Ë¢´Á†¥ÂùèÔºåËØ∑ËÅîÁ≥ªÁÆ°ÁêÜÂëò`Ôºü
   + ËøôÊòØÊ£ÄÊµãÂà∞ ability Ë°®ÈáåÊúâ‰∫õËÆ∞ÂΩïÁöÑÊ∏†ÈÅì id ÊòØ‰∏çÂ≠òÂú®ÁöÑÔºåËøôÂ§ßÊ¶ÇÁéáÊòØÂõ†‰∏∫‰Ω†Âà†‰∫Ü channel Ë°®ÈáåÁöÑËÆ∞ÂΩï‰ΩÜÊòØÊ≤°ÊúâÂêåÊ≠•Âú® ability Ë°®ÈáåÊ∏ÖÁêÜÊó†ÊïàÁöÑÊ∏†ÈÅì„ÄÇ
   + ÂØπ‰∫éÊØè‰∏Ä‰∏™Ê∏†ÈÅìÔºåÂÖ∂ÊâÄÊîØÊåÅÁöÑÊ®°ÂûãÈÉΩÈúÄË¶ÅÊúâ‰∏Ä‰∏™‰∏ìÈó®ÁöÑ ability Ë°®ÁöÑËÆ∞ÂΩïÔºåË°®Á§∫ËØ•Ê∏†ÈÅìÊîØÊåÅËØ•Ê®°Âûã„ÄÇ

## Áõ∏ÂÖ≥È°πÁõÆ
* [FastGPT](https://github.com/labring/FastGPT): Âü∫‰∫é LLM Â§ßËØ≠Ë®ÄÊ®°ÂûãÁöÑÁü•ËØÜÂ∫ìÈóÆÁ≠îÁ≥ªÁªü
* [ChatGPT Next Web](https://github.com/Yidadaa/ChatGPT-Next-Web):  ‰∏ÄÈîÆÊã•Êúâ‰Ω†Ëá™Â∑±ÁöÑË∑®Âπ≥Âè∞ ChatGPT Â∫îÁî®
* [VChart](https://github.com/VisActor/VChart):  ‰∏çÂè™ÊòØÂºÄÁÆ±Âç≥Áî®ÁöÑÂ§öÁ´ØÂõæË°®Â∫ìÔºåÊõ¥ÊòØÁîüÂä®ÁÅµÊ¥ªÁöÑÊï∞ÊçÆÊïÖ‰∫ãËÆ≤Ëø∞ËÄÖ„ÄÇ
* [VMind](https://github.com/VisActor/VMind):  ‰∏ç‰ªÖËá™Âä®ÔºåËøòÂæàÊô∫ËÉΩ„ÄÇÂºÄÊ∫êÊô∫ËÉΩÂèØËßÜÂåñËß£ÂÜ≥ÊñπÊ°à„ÄÇ
* [CherryStudio](https://github.com/CherryHQ/cherry-studio):  ÂÖ®Âπ≥Âè∞ÊîØÊåÅÁöÑAIÂÆ¢Êà∑Á´Ø, Â§öÊúçÂä°ÂïÜÈõÜÊàêÁÆ°ÁêÜ„ÄÅÊú¨Âú∞Áü•ËØÜÂ∫ìÊîØÊåÅ„ÄÇ

## Ê≥®ÊÑè

Êú¨È°πÁõÆ‰ΩøÁî® MIT ÂçèËÆÆËøõË°åÂºÄÊ∫êÔºå**Âú®Ê≠§Âü∫Á°Ä‰∏ä**ÔºåÂøÖÈ°ªÂú®È°µÈù¢Â∫ïÈÉ®‰øùÁïôÁΩ≤Âêç‰ª•ÂèäÊåáÂêëÊú¨È°πÁõÆÁöÑÈìæÊé•„ÄÇÂ¶ÇÊûú‰∏çÊÉ≥‰øùÁïôÁΩ≤ÂêçÔºåÂøÖÈ°ªÈ¶ñÂÖàËé∑ÂæóÊéàÊùÉ„ÄÇ

ÂêåÊ†∑ÈÄÇÁî®‰∫éÂü∫‰∫éÊú¨È°πÁõÆÁöÑ‰∫åÂºÄÈ°πÁõÆ„ÄÇ

‰æùÊçÆ MIT ÂçèËÆÆÔºå‰ΩøÁî®ËÄÖÈúÄËá™Ë°åÊâøÊãÖ‰ΩøÁî®Êú¨È°πÁõÆÁöÑÈ£éÈô©‰∏éË¥£‰ªªÔºåÊú¨ÂºÄÊ∫êÈ°πÁõÆÂºÄÂèëËÄÖ‰∏éÊ≠§Êó†ÂÖ≥„ÄÇ
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[volcengine/ai-app-lab]]></title>
            <link>https://github.com/volcengine/ai-app-lab</link>
            <guid>https://github.com/volcengine/ai-app-lab</guid>
            <pubDate>Sat, 21 Jun 2025 00:04:36 GMT</pubDate>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/volcengine/ai-app-lab">volcengine/ai-app-lab</a></h1>
            <p></p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,440</p>
            <p>Forks: 271</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre># AI App Lab

Â∞ÜÂ§ßÊ®°ÂûãËêΩÂú∞ÊàêÁúüÊ≠£ÂèëÊå•‰ª∑ÂÄºÁöÑÂú∫ÊôØÂåñÂ∫îÁî®ÊòØ‰∏Ä‰∏™Â§çÊùÇÂèàÊûÅÂÖ∑ÊåëÊàòÊÄßÁöÑ‰ªªÂä°Ôºå‰∏ç‰ªÖÈúÄË¶ÅÂÖ∑Â§áÊ∑±ÂÖ•ÁöÑË°å‰∏ö‰∏öÂä°ËÉåÊôØÔºåËøòÈúÄË¶ÅËß£ÂÜ≥Ê®°ÂûãÊé•Âè£Ë∞ÉÁî®„ÄÅÂ§öÁßçÊèí‰ª∂ÂçèÂêåÈÄÇÈÖç„ÄÅÂ§öÁßçÊ®°ÊÄÅÔºàÂ¶ÇÂõæÂÉè„ÄÅÊñáÊú¨„ÄÅËØ≠Èü≥Á≠âÔºâÊ∑±Â∫¶ËûçÂêà‰∫§‰∫í„ÄÅÂêÑÁ±ªÂ∑•ÂÖ∑Ë∞ÉÁî®Á≠âÊäÄÊúØÈöæÈ¢ò„ÄÇÁÅ´Â±±ÊñπËàüÊé®Âá∫ÁöÑ AI App Lab ÂåÖÂê´È´ò‰ª£Á†Å SDK Arkitect ÂíåÊµ∑ÈáèÂéüÂûãÂ∫îÁî®‰ª£Á†ÅÔºåÂä©Âäõ‰∏≠Â∞è‰ºÅ‰∏öÂºÄÂèëËÄÖÂø´ÈÄüÊûÑÂª∫Á¨¶ÂêàËá™Ë∫´‰∏öÂä°Âú∫ÊôØÁöÑ AI Â§ßÊ®°ÂûãÂ∫îÁî®ÔºåÊâìÈÄöÂ§ßÊ®°ÂûãÂ∫îÁî®ËêΩÂú∞ÁöÑÊúÄÂêé‰∏ÄÂÖ¨Èáå„ÄÇ  

## Êû∂ÊûÑÂõæ

![img](./docs/assets/architecture.png)
## Arkitect

&gt; https://github.com/volcengine/ai-app-lab/tree/main/arkitect  


ÁÅ´Â±±ÊñπËàüÊèê‰æõÁöÑÁî®‰∫éÂºÄÂèëÈ´ò‰ª£Á†ÅÂ∫îÁî®ÁöÑ Python SDKÔºåÈù¢ÂêëÂÖ∑Êúâ‰∏ì‰∏öÂºÄÂèëËÉΩÂäõÁöÑÂºÄÂèëËÄÖÔºåÊèê‰æõÂºÄÂèëÂ§ßÊ®°ÂûãÂ∫îÁî®ÈúÄË¶ÅÁî®Âà∞ÁöÑÂ∑•ÂÖ∑ÈõÜÂíåÊµÅÁ®ãÈõÜ„ÄÇÊõ¥Â§ö‰ªãÁªçËßÅ [È´ò‰ª£Á†Å SDK Arkitect](./arkitect/README.md)„ÄÇ  

## Demohouse

&gt; https://github.com/volcengine/ai-app-lab/tree/main/demohouse  


‰ªéÂ§ßÊ®°ÂûãÂèØ‰ª•ËêΩÂú∞ÁöÑ‰∏öÂä°ÊèêÊïà„ÄÅ‰ºÅ‰∏öÁªèËê•ÊïàÁéáÊèêÊïà‰∏§Â§ßÂú∫ÊôØÂàáÂÖ•ÔºåÊ≤âÊ∑Ä‰∫ÜÊïôÂ∏àÂàÜË∫´„ÄÅÂÆâÂçìÁªàÁ´Ø„ÄÅÂ§çÊùÇÈóÆÈ¢òÊÄùËÄÉÁ≠âÂ§ö‰∏™ÂûÇÁõ¥È¢ÜÂüüÁöÑ AI ÂéüÂûãÂ∫îÁî®ÔºåÂπ∂ÂºÄÊ∫êÊâÄÊúâ‰ª£Á†Å„ÄÇÂä©Âäõ‰∏≠Â∞è‰ºÅ‰∏ö‚Äú‰∏ÄÈîÆÂ§çÂà∂‚ÄùÔºåÂÆåÊàêÂü∫Á°ÄÂ∫îÁî®Êê≠Âª∫ÔºåÈöèÂêéÂä†ÂÖ•‰∏™ÊÄßÂåñÁöÑË°å‰∏ö Know-How Âíå‰ºÅ‰∏öÂÜÖÈÉ®‰∏öÂä°ÈÄªËæëÔºåÂø´ÈÄüÊ≠•ÂÖ•Â∫îÁî®ËêΩÂú∞ÁöÑÂÆûÂπ≤Èò∂ÊÆµ„ÄÇ  


| Â∫îÁî®                | ÁÆÄ‰ªã                                                                                     |
| ------------------- |----------------------------------------------------------------------------------------|
| [‰∫íÂä®ÂèåËØ≠ËßÜÈ¢ëÁîüÊàêÂô®](./demohouse/chat2cartoon/README.md)  | Âè™ÈúÄËæìÂÖ•‰∏Ä‰∏™‰∏ªÈ¢òÔºåÂ∞±ËÉΩ‰∏∫‰Ω†ÁîüÊàêÂºï‰∫∫ÂÖ•ËÉú‰∏îÂØåÊúâÂê´‰πâÁöÑÂèåËØ≠ËßÜÈ¢ë„ÄÇ                                                         |
| [Ê∑±Â∫¶Êé®ÁêÜ](./demohouse/deep_research/README.md)            | Âà©Áî® DeepSeek-R1 Â§ßÊ®°ÂûãÂØπÂ§çÊùÇÈóÆÈ¢òËøõË°åÂ§öËßíÂ∫¶ÂàÜÊûêÔºåÂπ∂ËæÖÂä©‰∫íËÅîÁΩëËµÑÊñôÔºåÂø´ÈÄüÁîüÊàêÊúÄÂêàÈÄÇÁî®Êà∑ÁöÑËß£ÂÜ≥ÊñπÊ°à„ÄÇ                                |
| [DeepDoubao](./demohouse/deepdoubao/README.md)      | ÁªìÂêà DeepSeek R1 Ê®°ÂûãÁöÑÂº∫Â§ßÊé®ÁêÜËÉΩÂäõ‰∏é Doubao Ê®°ÂûãÁöÑÈ´òÊïàÂØπËØùËÉΩÂäõÔºå‰∏∫Áî®Êà∑Êèê‰æõÊô∫ËÉΩÈóÆÁ≠îÊúçÂä°„ÄÇ                                |
| [ËØ≠Èü≥ÂÆûÊó∂ÈÄöËØù - ÈùíÈùí](./demohouse/live_voice_call/README.md) | Âó®ÔºåÊàëÊòØ‰Ω†ÁöÑÊúãÂèã‰πîÈùíÈùíÔºåÂø´Êù•ÂíåÊàëËØ≠Èü≥ÈÄöËØùÂêßÔºÅ                                                                 |
| [ÈïøËÆ∞ÂøÜÊñπÊ°à](./demohouse/longterm_memory/README.md)          | Âü∫‰∫é DeepSeek-R1 Ê®°ÂûãÁöÑÂº∫Â§ßÊÄùËÄÉËÉΩÂäõÂ∞ÜÂØπËØùÂÜÖÂÆπÊäΩÂèñÊàêËÆ∞ÂøÜÔºåËÆ∞ÂΩïÁî®Êà∑ÂÅèÂ•Ω„ÄÅÊÄßÊ†º„ÄÅÁîüÊó•Á≠âÔºåÂπ∂Âú®ÂØπËØùÂà∞Áõ∏ÂÖ≥ËØùÈ¢òÊó∂Â∏ÆÂä© Doubao ËßíËâ≤Ê®°ÂûãÁîüÊàêÊõ¥Ë¥¥ÂêàËßíËâ≤‰∫∫ËÆæÁöÑÂõûÂ§ç„ÄÇ |
| [ÊâãÊú∫Âä©Êâã](./demohouse/pocket_pal/README.md)            | ÁßªÂä®Á´ØÊâãÊú∫Êô∫ËÉΩÂä©Êâã„ÄÇ                                                                             |
| [Êô∫ËÉΩÂÆ¢ÊúçÂä©Êâã](./demohouse/shop_assist/backend/README.md)        | ‰ª•ËΩ¶ËΩΩÈõ∂ÈÖç‰ª∂ÁΩëÂ∫óÂÆ¢ÊúçÂú∫ÊôØ‰∏∫‰æãËÆæËÆ°ÁöÑÊô∫ËÉΩÂØºË¥≠Êú∫Âô®‰∫∫„ÄÇ                                                              |
| [ÊïôÂ∏àÂàÜË∫´](./demohouse/teacher_avatar/README.md)            | Âü∫‰∫éË±ÜÂåÖËßÜËßâÁêÜËß£‰∏é DeepSeek Ê∑±Â∫¶Êé®ÁêÜÂèåÂºïÊìéÁöÑÊïôËÇ≤Ëß£ÂÜ≥ÊñπÊ°à„ÄÇ                                                     |
| [ËßÜÈ¢ëÂÆûÊó∂ÁêÜËß£](./demohouse/video_analyser/README.md)        | Â§öÊ®°ÊÄÅÊ¥ûÂØüÔºåÂü∫‰∫éË±ÜÂåÖ-ËßÜËßâÁêÜËß£Ê®°ÂûãÂÆûÊó∂ËßÜËßâ‰∏éËØ≠Èü≥ÁêÜËß£„ÄÇ                                                            |
| [ÂÆûÊó∂ÂØπËØùÂºè AI](./demohouse/rtc_conversational_ai/README.md)       | Ë∂Ö‰ΩéÂª∂ËøüÁöÑ AI ÂÆûÊó∂ÂØπËØùÂ∫îÁî®ÔºåÊõ¥ÊµÅÁïÖÔºåÊõ¥Ëá™ÁÑ∂ÔºåÊõ¥ÂÆûÊó∂„ÄÇ                                                           |
| [AI-Media2Doc](https://github.com/hanshuaikang/AI-Media2Doc) | ‰∏ÄÈîÆÂ∞ÜËßÜÈ¢ëÂíåÈü≥È¢ëËΩ¨Âåñ‰∏∫Â∞èÁ∫¢‰π¶/ÂÖ¨‰ºóÂè∑/Áü•ËØÜÁ¨îËÆ∞/ËßÜÈ¢ëÊÄªÁªì/ÊÄùÁª¥ÂØºÂõæÁ≠âÂêÑÁßçÈ£éÊ†ºÁöÑÊñáÊ°£, ÂèØÂü∫‰∫éËßÜÈ¢ëÂÜÖÂÆπËøõË°å AI ‰∫åÊ¨°ÂØπËØù„ÄÇ                          |

## Áõ∏ÂÖ≥ÊåáÂºï

- [Â∫îÁî®ÂÆûÈ™åÂÆ§‰ΩìÈ™åÂπøÂú∫](https://console.volcengine.com/ark/region:ark+cn-beijing/application)ÔºåÂÖçË¥π‰ΩìÈ™åÊµ∑Èáè Demo  

- [ÂàõÂª∫ÁÅ´Â±±ÊñπËàüÈ´ò‰ª£Á†ÅÂ∫îÁî®](https://console.volcengine.com/ark/region:ark+cn-beijing/assistant)ÔºåÂø´ÈÄüÈÉ®ÁΩ≤‰Ω†ÁöÑ‰∫ë‰∏äÊô∫ËÉΩ‰ΩìÂ∫îÁî®  

## License

- `./arkitect` ÁõÆÂΩï‰∏ã‰ª£Á†ÅÈÅµÂæ™ [Apache 2.0](./APACHE_LICENSE) ËÆ∏ÂèØ.  

- `./demohouse` ÁõÆÂΩï‰∏ã‰ª£Á†ÅÈÅµÂæ™[„ÄêÁÅ´Â±±ÊñπËàü„ÄëÂéüÂûãÂ∫îÁî®ËΩØ‰ª∂Ëá™Áî®ËÆ∏ÂèØÂçèËÆÆ](./ARK_LICENSE.md) ËÆ∏ÂèØ„ÄÇ  </pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WhiskeySockets/Baileys]]></title>
            <link>https://github.com/WhiskeySockets/Baileys</link>
            <guid>https://github.com/WhiskeySockets/Baileys</guid>
            <pubDate>Sat, 21 Jun 2025 00:04:35 GMT</pubDate>
            <description><![CDATA[Lightweight full-featured typescript/javascript WhatsApp Web API]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WhiskeySockets/Baileys">WhiskeySockets/Baileys</a></h1>
            <p>Lightweight full-featured typescript/javascript WhatsApp Web API</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,853</p>
            <p>Forks: 1,947</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&#039;center&#039;&gt;&lt;img alt=&quot;Baileys logo&quot; src=&quot;https://raw.githubusercontent.com/WhiskeySockets/Baileys/refs/heads/master/Media/logo.png&quot; height=&quot;75&quot;/&gt;&lt;/h1&gt;

&lt;div align=&#039;center&#039;&gt;

![NPM Downloads](https://img.shields.io/npm/dw/%40whiskeysockets%2Fbaileys?label=npm&amp;color=%23CB3837)
![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/whiskeysockets/baileys)
![Discord](https://img.shields.io/discord/725839806084546610?label=discord&amp;color=%235865F2)

&lt;/div&gt;

&lt;div align=&#039;center&#039;&gt;Baileys is a WebSockets-based TypeScript library for interacting with the WhatsApp Web API.&lt;/div&gt;

# Important Note
This is a temporally README, the new guide is at development and will be fully released when it&#039;s finished.

New Guide: https://baileys.wiki

# Sponsor
If you&#039;d like to financially support this project, you can do so by supporting the current maintainer [here](https://purpshell.dev/sponsor).

# Disclaimer
This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates.
The official WhatsApp website can be found at whatsapp.com. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners.

The maintainers of Baileys do not in any way condone the use of this application in practices that violate the Terms of Service of WhatsApp. The maintainers of this application call upon the personal responsibility of its users to use this application in a fair way, as it is intended to be used.
Use at your own discretion. Do not spam people with this. We discourage any stalkerware, bulk or automated messaging usage.

##

- Baileys does not require Selenium or any other browser to be interface with WhatsApp Web, it does so directly using a **WebSocket**. 
- Not running Selenium or Chromimum saves you like **half a gig** of ram :/ 
- Baileys supports interacting with the multi-device &amp; web versions of WhatsApp.
- Thank you to [@pokearaujo](https://github.com/pokearaujo/multidevice) for writing his observations on the workings of WhatsApp Multi-Device. Also, thank you to [@Sigalor](https://github.com/sigalor/whatsapp-web-reveng) for writing his observations on the workings of WhatsApp Web and thanks to [@Rhymen](https://github.com/Rhymen/go-whatsapp/) for the __go__ implementation.

&gt; [!IMPORTANT]
&gt; The original repository had to be removed by the original author - we now continue development in this repository here.
This is the only official repository and is maintained by the community.
&gt; **Join the Discord [here](https://discord.gg/WeJM5FP9GG)**
 
## Example

Do check out &amp; run [example.ts](Example/example.ts) to see an example usage of the library.
The script covers most common use cases.
To run the example script, download or clone the repo and then type the following in a terminal:
1. ``` cd path/to/Baileys ```
2. ``` yarn ```
3. ``` yarn example ```

## Install

Use the stable version:
```
yarn add @whiskeysockets/baileys
```

Use the edge version (no guarantee of stability, but latest fixes + features)
```
yarn add github:WhiskeySockets/Baileys
```

Then import your code using:
```ts 
import makeWASocket from &#039;@whiskeysockets/baileys&#039;
```

# Links

- [Discord](https://discord.gg/WeJM5FP9GG)
- [Docs](https://guide.whiskeysockets.io/)

# Index

- [Connecting Account](#connecting-account)
    - [Connect with QR-CODE](#starting-socket-with-qr-code)
    - [Connect with Pairing Code](#starting-socket-with-pairing-code)
    - [Receive Full History](#receive-full-history)
- [Important Notes About Socket Config](#important-notes-about-socket-config)
    - [Caching Group Metadata (Recommended)](#caching-group-metadata-recommended)
    - [Improve Retry System &amp; Decrypt Poll Votes](#improve-retry-system--decrypt-poll-votes)
    - [Receive Notifications in Whatsapp App](#receive-notifications-in-whatsapp-app)

- [Save Auth Info](#saving--restoring-sessions)
- [Handling Events](#handling-events)
    - [Example to Start](#example-to-start)
    - [Decrypt Poll Votes](#decrypt-poll-votes)
    - [Summary of Events on First Connection](#summary-of-events-on-first-connection)
- [Implementing a Data Store](#implementing-a-data-store)
- [Whatsapp IDs Explain](#whatsapp-ids-explain)
- [Utility Functions](#utility-functions)
- [Sending Messages](#sending-messages)
    - [Non-Media Messages](#non-media-messages)
        - [Text Message](#text-message)
        - [Quote Message](#quote-message-works-with-all-types)
        - [Mention User](#mention-user-works-with-most-types)
        - [Forward Messages](#forward-messages)
        - [Location Message](#location-message)
        - [Contact Message](#contact-message)
        - [Reaction Message](#reaction-message)
        - [Pin Message](#pin-message)
        - [Poll Message](#poll-message)
    - [Sending with Link Preview](#sending-messages-with-link-previews)
    - [Media Messages](#media-messages)
        - [Gif Message](#gif-message)
        - [Video Message](#video-message)
        - [Audio Message](#audio-message)
        - [Image Message](#image-message)
        - [ViewOnce Message](#view-once-message)
- [Modify Messages](#modify-messages)
    - [Delete Messages (for everyone)](#deleting-messages-for-everyone)
    - [Edit Messages](#editing-messages)
- [Manipulating Media Messages](#manipulating-media-messages)
    - [Thumbnail in Media Messages](#thumbnail-in-media-messages)
    - [Downloading Media Messages](#downloading-media-messages)
    - [Re-upload Media Message to Whatsapp](#re-upload-media-message-to-whatsapp)
- [Reject Call](#reject-call)
- [Send States in Chat](#send-states-in-chat)
    - [Reading Messages](#reading-messages)
    - [Update Presence](#update-presence)
- [Modifying Chats](#modifying-chats)
    - [Archive a Chat](#archive-a-chat)
    - [Mute/Unmute a Chat](#muteunmute-a-chat)
    - [Mark a Chat Read/Unread](#mark-a-chat-readunread)
    - [Delete a Message for Me](#delete-a-message-for-me)
    - [Delete a Chat](#delete-a-chat)
    - [Star/Unstar a Message](#starunstar-a-message)
    - [Disappearing Messages](#disappearing-messages)
- [User Querys](#user-querys)
    - [Check If ID Exists in Whatsapp](#check-if-id-exists-in-whatsapp)
    - [Query Chat History (groups too)](#query-chat-history-groups-too)
    - [Fetch Status](#fetch-status)
    - [Fetch Profile Picture (groups too)](#fetch-profile-picture-groups-too)
    - [Fetch Bussines Profile (such as description or category)](#fetch-bussines-profile-such-as-description-or-category)
    - [Fetch Someone&#039;s Presence (if they&#039;re typing or online)](#fetch-someones-presence-if-theyre-typing-or-online)
- [Change Profile](#change-profile)
    - [Change Profile Status](#change-profile-status)
    - [Change Profile Name](#change-profile-name)
    - [Change Display Picture (groups too)](#change-display-picture-groups-too)
    - [Remove display picture (groups too)](#remove-display-picture-groups-too)
- [Groups](#groups)
    - [Create a Group](#create-a-group)
    - [Add/Remove or Demote/Promote](#addremove-or-demotepromote)
    - [Change Subject (name)](#change-subject-name)
    - [Change Description](#change-description)
    - [Change Settings](#change-settings)
    - [Leave a Group](#leave-a-group)
    - [Get Invite Code](#get-invite-code)
    - [Revoke Invite Code](#revoke-invite-code)
    - [Join Using Invitation Code](#join-using-invitation-code)
    - [Get Group Info by Invite Code](#get-group-info-by-invite-code)
    - [Query Metadata (participants, name, description...)](#query-metadata-participants-name-description)
    - [Join using groupInviteMessage](#join-using-groupinvitemessage)
    - [Get Request Join List](#get-request-join-list)
    - [Approve/Reject Request Join](#approvereject-request-join)
    - [Get All Participating Groups Metadata](#get-all-participating-groups-metadata)
    - [Toggle Ephemeral](#toggle-ephemeral)
    - [Change Add Mode](#change-add-mode)
- [Privacy](#privacy)
    - [Block/Unblock User](#blockunblock-user)
    - [Get Privacy Settings](#get-privacy-settings)
    - [Get BlockList](#get-blocklist)
    - [Update LastSeen Privacy](#update-lastseen-privacy)
    - [Update Online Privacy](#update-online-privacy)
    - [Update Profile Picture Privacy](#update-profile-picture-privacy)
    - [Update Status Privacy](#update-status-privacy)
    - [Update Read Receipts Privacy](#update-read-receipts-privacy)
    - [Update Groups Add Privacy](#update-groups-add-privacy)
    - [Update Default Disappearing Mode](#update-default-disappearing-mode)
- [Broadcast Lists &amp; Stories](#broadcast-lists--stories)
    - [Send Broadcast &amp; Stories](#send-broadcast--stories)
    - [Query a Broadcast List&#039;s Recipients &amp; Name](#query-a-broadcast-lists-recipients--name)
- [Writing Custom Functionality](#writing-custom-functionality)
    - [Enabling Debug Level in Baileys Logs](#enabling-debug-level-in-baileys-logs)
    - [How Whatsapp Communicate With Us](#how-whatsapp-communicate-with-us)
    - [Register a Callback for Websocket Events](#register-a-callback-for-websocket-events)

## Connecting Account

WhatsApp provides a multi-device API that allows Baileys to be authenticated as a second WhatsApp client by scanning a **QR code** or **Pairing Code** with WhatsApp on your phone.

&gt; [!NOTE]
&gt; **[Here](#example-to-start) is a simple example of event handling**

&gt; [!TIP]
&gt; **You can see all supported socket configs [here](https://baileys.whiskeysockets.io/types/SocketConfig.html) (Recommended)**

### Starting socket with **QR-CODE**

&gt; [!TIP]
&gt; You can customize browser name if you connect with **QR-CODE**, with `Browser` constant, we have some browsers config, **see [here](https://baileys.whiskeysockets.io/types/BrowsersMap.html)**

```ts
import makeWASocket from &#039;@whiskeysockets/baileys&#039;

const sock = makeWASocket({
    // can provide additional config here
    browser: Browsers.ubuntu(&#039;My App&#039;),
    printQRInTerminal: true
})
```

If the connection is successful, you will see a QR code printed on your terminal screen, scan it with WhatsApp on your phone and you&#039;ll be logged in!

### Starting socket with **Pairing Code**


&gt; [!IMPORTANT]
&gt; Pairing Code isn&#039;t Mobile API, it&#039;s a method to connect Whatsapp Web without QR-CODE, you can connect only with one device, see [here](https://faq.whatsapp.com/1324084875126592/?cms_platform=web)

The phone number can&#039;t have `+` or `()` or `-`, only numbers, you must provide country code

```ts
import makeWASocket from &#039;@whiskeysockets/baileys&#039;

const sock = makeWASocket({
    // can provide additional config here
    printQRInTerminal: false //need to be false
})

if (!sock.authState.creds.registered) {
    const number = &#039;XXXXXXXXXXX&#039;
    const code = await sock.requestPairingCode(number)
    console.log(code)
}
```

### Receive Full History

1. Set `syncFullHistory` as `true`
2. Baileys, by default, use chrome browser config
    - If you&#039;d like to emulate a desktop connection (and receive more message history), this browser setting to your Socket config:

```ts
const sock = makeWASocket({
    ...otherOpts,
    // can use Windows, Ubuntu here too
    browser: Browsers.macOS(&#039;Desktop&#039;),
    syncFullHistory: true
})
```

## Important Notes About Socket Config

### Caching Group Metadata (Recommended)
- If you use baileys for groups, we recommend you to set `cachedGroupMetadata` in socket config, you need to implement a cache like this:

    ```ts
    const groupCache = new NodeCache({stdTTL: 5 * 60, useClones: false})

    const sock = makeWASocket({
        cachedGroupMetadata: async (jid) =&gt; groupCache.get(jid)
    })

    sock.ev.on(&#039;groups.update&#039;, async ([event]) =&gt; {
        const metadata = await sock.groupMetadata(event.id)
        groupCache.set(event.id, metadata)
    })

    sock.ev.on(&#039;group-participants.update&#039;, async (event) =&gt; {
        const metadata = await sock.groupMetadata(event.id)
        groupCache.set(event.id, metadata)
    })
    ```

### Improve Retry System &amp; Decrypt Poll Votes
- If you want to improve sending message, retrying when error occurs and decrypt poll votes, you need to have a store and set `getMessage` config in socket like this:
    ```ts
    const sock = makeWASocket({
        getMessage: async (key) =&gt; await getMessageFromStore(key)
    })
    ```

### Receive Notifications in Whatsapp App
- If you want to receive notifications in whatsapp app, set `markOnlineOnConnect` to `false`
    ```ts
    const sock = makeWASocket({
        markOnlineOnConnect: false
    })
    ```
## Saving &amp; Restoring Sessions

You obviously don&#039;t want to keep scanning the QR code every time you want to connect. 

So, you can load the credentials to log back in:
```ts
import makeWASocket, { useMultiFileAuthState } from &#039;@whiskeysockets/baileys&#039;

const { state, saveCreds } = await useMultiFileAuthState(&#039;auth_info_baileys&#039;)

// will use the given state to connect
// so if valid credentials are available -- it&#039;ll connect without QR
const sock = makeWASocket({ auth: state })

// this will be called as soon as the credentials are updated
sock.ev.on(&#039;creds.update&#039;, saveCreds)
```

&gt; [!IMPORTANT]
&gt; `useMultiFileAuthState` is a utility function to help save the auth state in a single folder, this function serves as a good guide to help write auth &amp; key states for SQL/no-SQL databases, which I would recommend in any production grade system.

&gt; [!NOTE]
&gt; When a message is received/sent, due to signal sessions needing updating, the auth keys (`authState.keys`) will update. Whenever that happens, you must save the updated keys (`authState.keys.set()` is called). Not doing so will prevent your messages from reaching the recipient &amp; cause other unexpected consequences. The `useMultiFileAuthState` function automatically takes care of that, but for any other serious implementation -- you will need to be very careful with the key state management.

## Handling Events

- Baileys uses the EventEmitter syntax for events. 
They&#039;re all nicely typed up, so you shouldn&#039;t have any issues with an Intellisense editor like VS Code.

&gt; [!IMPORTANT]
&gt; **The events are [these](https://baileys.whiskeysockets.io/types/BaileysEventMap.html)**, it&#039;s important you see all events

You can listen to these events like this:
```ts
const sock = makeWASocket()
sock.ev.on(&#039;messages.upsert&#039;, ({ messages }) =&gt; {
    console.log(&#039;got messages&#039;, messages)
})
```

### Example to Start

&gt; [!NOTE]
&gt; This example includes basic auth storage too

```ts
import makeWASocket, { DisconnectReason, useMultiFileAuthState } from &#039;@whiskeysockets/baileys&#039;
import { Boom } from &#039;@hapi/boom&#039;

async function connectToWhatsApp () {
    const { state, saveCreds } = await useMultiFileAuthState(&#039;auth_info_baileys&#039;)
    const sock = makeWASocket({
        // can provide additional config here
        auth: state,
        printQRInTerminal: true
    })
    sock.ev.on(&#039;connection.update&#039;, (update) =&gt; {
        const { connection, lastDisconnect } = update
        if(connection === &#039;close&#039;) {
            const shouldReconnect = (lastDisconnect.error as Boom)?.output?.statusCode !== DisconnectReason.loggedOut
            console.log(&#039;connection closed due to &#039;, lastDisconnect.error, &#039;, reconnecting &#039;, shouldReconnect)
            // reconnect if not logged out
            if(shouldReconnect) {
                connectToWhatsApp()
            }
        } else if(connection === &#039;open&#039;) {
            console.log(&#039;opened connection&#039;)
        }
    })
    sock.ev.on(&#039;messages.upsert&#039;, event =&gt; {
        for (const m of event.messages) {
            console.log(JSON.stringify(m, undefined, 2))

            console.log(&#039;replying to&#039;, m.key.remoteJid)
            await sock.sendMessage(m.key.remoteJid!, { text: &#039;Hello Word&#039; })
        }
    })

    // to storage creds (session info) when it updates
    sock.ev.on(&#039;creds.update&#039;, saveCreds)
}
// run in main file
connectToWhatsApp()
```

&gt; [!IMPORTANT]
&gt; In `messages.upsert` it&#039;s recommended to use a loop like `for (const message of event.messages)` to handle all messages in array

### Decrypt Poll Votes

- By default poll votes are encrypted and handled in `messages.update`
- That&#039;s a simple example
```ts
sock.ev.on(&#039;messages.update&#039;, event =&gt; {
    for(const { key, update } of event) {
        if(update.pollUpdates) {
            const pollCreation = await getMessage(key)
            if(pollCreation) {
                console.log(
                    &#039;got poll update, aggregation: &#039;,
                    getAggregateVotesInPollMessage({
                        message: pollCreation,
                        pollUpdates: update.pollUpdates,
                    })
                )
            }
        }
    }
})
```

- `getMessage` is a [store](#implementing-a-data-store) implementation (in your end)

### Summary of Events on First Connection

1. When you connect first time, `connection.update` will be fired requesting you to restart sock
2. Then, history messages will be received in `messaging.history-set`

## Implementing a Data Store

- Baileys does not come with a defacto storage for chats, contacts, or messages. However, a simple in-memory implementation has been provided. The store listens for chat updates, new messages, message updates, etc., to always have an up-to-date version of the data.

&gt; [!IMPORTANT]
&gt; I highly recommend building your own data store, as storing someone&#039;s entire chat history in memory is a terrible waste of RAM.

It can be used as follows:

```ts
import makeWASocket, { makeInMemoryStore } from &#039;@whiskeysockets/baileys&#039;
// the store maintains the data of the WA connection in memory
// can be written out to a file &amp; read from it
const store = makeInMemoryStore({ })
// can be read from a file
store.readFromFile(&#039;./baileys_store.json&#039;)
// saves the state to a file every 10s
setInterval(() =&gt; {
    store.writeToFile(&#039;./baileys_store.json&#039;)
}, 10_000)

const sock = makeWASocket({ })
// will listen from this socket
// the store can listen from a new socket once the current socket outlives its lifetime
store.bind(sock.ev)

sock.ev.on(&#039;chats.upsert&#039;, () =&gt; {
    // can use &#039;store.chats&#039; however you want, even after the socket dies out
    // &#039;chats&#039; =&gt; a KeyedDB instance
    console.log(&#039;got chats&#039;, store.chats.all())
})

sock.ev.on(&#039;contacts.upsert&#039;, () =&gt; {
    console.log(&#039;got contacts&#039;, Object.values(store.contacts))
})

```

The store also provides some simple functions such as `loadMessages` that utilize the store to speed up data retrieval.

## Whatsapp IDs Explain

- `id` is the WhatsApp ID, called `jid` too, of the person or group you&#039;re sending the message to. 
    - It must be in the format ```[country code][phone number]@s.whatsapp.net```
	    - Example for people: ```+19999999999@s.whatsapp.net```. 
	    - For groups, it must be in the format ``` 123456789-123345@g.us ```. 
    - For broadcast lists, it&#039;s `[timestamp of creation]@broadcast`.
    - For stories, the ID is `status@broadcast`.

## Utility Functions

- `getContentType`, returns the content type for any message
- `getDevice`, returns the device from message
- `makeCacheableSignalKeyStore`, make auth store more fast
- `downloadContentFromMessage`, download content from any message

## Sending Messages

- Send all types of messages with a single function
    - **[Here](https://baileys.whiskeysockets.io/types/AnyMessageContent.html) you can see all message contents supported, like text message**
    - **[Here](https://baileys.whiskeysockets.io/types/MiscMessageGenerationOptions.html) you can see all options supported, like quote message**

    ```ts
    const jid: string
    const content: AnyMessageContent
    const options: MiscMessageGenerationOptions

    sock.sendMessage(jid, content, options)
    ```

### Non-Media Messages

#### Text Message
```ts
await sock.sendMessage(jid, { text: &#039;hello word&#039; })
```

#### Quote Message (works with all types)
```ts
await sock.sendMessage(jid, { text: &#039;hello word&#039; }, { quoted: message })
```

#### Mention User

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[CodeWithHarry/Sigma-Web-Dev-Course]]></title>
            <link>https://github.com/CodeWithHarry/Sigma-Web-Dev-Course</link>
            <guid>https://github.com/CodeWithHarry/Sigma-Web-Dev-Course</guid>
            <pubDate>Sat, 21 Jun 2025 00:04:34 GMT</pubDate>
            <description><![CDATA[Source Code for Sigma Web Development Course]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/CodeWithHarry/Sigma-Web-Dev-Course">CodeWithHarry/Sigma-Web-Dev-Course</a></h1>
            <p>Source Code for Sigma Web Development Course</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,821</p>
            <p>Forks: 2,601</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre># Welcome to Sigma&#039;s Web Development Course - Hindi Web Development Tutorials! üöÄ

## What&#039;s Inside:

If you&#039;ve been itching to dive into the world of web development but feel lost in a sea of English tutorials, you&#039;re in the right place! Our course is exclusively in Hindi and is crafted to guide you from being an absolute beginner to a seasoned pro, one step at a time.

## Who Can Benefit?

### This course is a perfect fit for:

1. Beginners eager to start their web development journey
2. Intermediate developers looking to refine their skills
3. Individuals who prefer learning in Hindi

## What You&#039;ll Master:

### During this course, you&#039;ll delve into:

1. The fundamentals of HTML, CSS, and JavaScript
2. Both front-end and back-end development
3. How to seamlessly integrate databases
4. Real-world project implementation
5. And a whole lot more!

## The Schedule:

We&#039;re committed to your growth. Expect fresh source code additions nearly every day. Keep up the pace with our schedule and watch your skills soar! üìÖ

Get ready to embark on an exciting coding journey! üë®‚Äçüíªüåü

Ready to start? [Click here](https://www.youtube.com/playlist?list=PLu0W_9lII9agq5TrH9XLIKQvv0iaF2X3w) to access the complete YouTube playlist.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[FortAwesome/Font-Awesome]]></title>
            <link>https://github.com/FortAwesome/Font-Awesome</link>
            <guid>https://github.com/FortAwesome/Font-Awesome</guid>
            <pubDate>Sat, 21 Jun 2025 00:04:33 GMT</pubDate>
            <description><![CDATA[The iconic SVG, font, and CSS toolkit]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/FortAwesome/Font-Awesome">FortAwesome/Font-Awesome</a></h1>
            <p>The iconic SVG, font, and CSS toolkit</p>
            <p>Language: JavaScript</p>
            <p>Stars: 75,370</p>
            <p>Forks: 12,223</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre>&lt;h1&gt;&lt;img src=&quot;https://img.fortawesome.com/349cfdf6/fa-free-logo.svg&quot; alt=&quot;Font Awesome Free&quot; width=&quot;50%&quot;&gt;&lt;/h1&gt;

&gt; Version 5 ‚Äì the iconic SVG, font, and CSS framework

The internet&#039;s most popular icon toolkit has been redesigned and built from
scratch. On top of this, features like icon font ligatures, an SVG framework,
official NPM packages for popular frontend libraries like React, and access to
a new CDN.

Not familiar with Font Awesome 5? [Learn
more](https://www.kickstarter.com/projects/232193852/font-awesome-5) about our
successful Kickstarter and plan. You can also **[order Font Awesome
Pro](https://fontawesome.com/pro)** which includes tons more icons directly
from [fontawesome.com](https://fontawesome.com).

## Documentation

Learn how to get started with Font Awesome and then dive deeper into other and advanced topics:

### Using Font Awesome on the Web

* [With SVG with JavaScript](https://fontawesome.com/how-to-use/on-the-web/setup/getting-started?using=svg-with-js)
* [With web fonts with CSS](https://fontawesome.com/how-to-use/on-the-web/setup/getting-started?using=web-fonts-with-css)
* [Upgrading from version 4](https://fontawesome.com/how-to-use/on-the-web/setup/upgrading-from-version-4)
* [Installing Font Awesome with a package manager](https://fontawesome.com/how-to-use/on-the-web/setup/using-package-managers)
* [Downloading + hosting Font Awesome yourself](https://fontawesome.com/how-to-use/on-the-web/setup/hosting-font-awesome-yourself)
* [Performance and security](https://fontawesome.com/how-to-use/performance-and-security)
* [Accessibility](https://fontawesome.com/how-to-use/on-the-web/other-topics/accessibility)
* [Troubleshooting](https://fontawesome.com/how-to-use/on-the-web/other-topics/troubleshooting)

#### Advanced Options &amp; Techniques

* [Using CSS pseudo-elements](https://fontawesome.com/how-to-use/on-the-web/advanced/css-pseudo-elements)
* [SVG sprites](https://fontawesome.com/how-to-use/svg-sprites)
* [The Font Awesome API](https://fontawesome.com/how-to-use/font-awesome-api)
* [SVG symbols](https://fontawesome.com/how-to-use/on-the-web/advanced/svg-symbols)
* [SVG JavaScript Core](https://fontawesome.com/how-to-use/on-the-web/advanced/svg-javascript-core)
* [Server side rendering](https://fontawesome.com/how-to-use/server-side-rendering)

### Using Font Awesome on the Desktop

* [Getting started](https://fontawesome.com/how-to-use/on-the-desktop/setup/getting-started)
* [Upgrading from version 4](https://fontawesome.com/how-to-use/on-the-desktop/setup/upgrading-from-version-4)
* [Using ligatures](https://fontawesome.com/how-to-use/on-the-desktop/referencing-icons/using-ligatures)
* [Using glyphs](https://fontawesome.com/how-to-use/on-the-desktop/referencing-icons/using-glyphs)
* [Troubleshooting](https://fontawesome.com/how-to-use/on-the-desktop/other-topics/troubleshooting)

### Where did Font Awesome 4 (or 3) go?

Now that Font Awesome 5 has been released we are marking version 4 as
end-of-life. We don&#039;t plan on releasing any further versions of the 4.x or 3.x.

Documentation is still available but it&#039;s moved to
[https://fontawesome.com/v4.7.0](https://fontawesome.com/v4.7.0) and
[https://fontawesome.com/v3.2.1](https://fontawesome.com/v3.2.1).

The Git repository for
[v4.7.0](https://github.com/FortAwesome/Font-Awesome/releases/tag/v4.7.0) and
[v3.2.1](https://github.com/FortAwesome/Font-Awesome/releases/tag/v3.2.1) can
be found in our GitHub releases.

## Change log

We&#039;ll keep track of each release in the [CHANGELOG.md](./CHANGELOG.md)

Looking for older versions of Font Awesome? Check the [releases](https://github.com/FortAwesome/Font-Awesome/releases).

## Upgrading

From time-to-time we&#039;ll have special upgrading instructions from one version to the next.

Check out the [UPGRADING.md](./UPGRADING.md) guide when you upgrade your dependencies.

## Code of conduct

We will behave ourselves if you behave yourselves. For more details see our
[CODE_OF_CONDUCT.md](./CODE_OF_CONDUCT.md).

## Contributing

Please read through our [contributing guidelines](./CONTRIBUTING.md).  Included
are directions for opening issues.

## Versioning

Font Awesome will be maintained under the Semantic Versioning guidelines as much as possible. Releases will be numbered
with the following format:

`&lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;`

For more information on SemVer, please visit http://semver.org.

**The major version &quot;5&quot; is part of an umbrella release.  It includes many different types of files and technologies. Therefore
we deviate from normal SemVer in the following ways:**

* Any release may update the design, look-and-feel, or branding of an existing
  icon
* We will never intentionally release a `patch` version update that breaks
  backward compatibility
* A `minor` release **may include backward-incompatible changes** but we will
  write clear upgrading instructions in UPGRADING.md
* A `minor` or `patch` release will never remove icons
* Bug fixes will be addressed as `patch` releases unless they include backward
  incompatibility then they will be `minor` releases

## License

Font Awesome Free is free, open source, and GPL friendly. You can use it for
commercial projects, open source projects, or really almost whatever you want.

- Icons ‚Äî CC BY 4.0 License
  - In the Font Awesome Free download, the CC BY 4.0 license applies to all icons packaged as .svg and .js files types.
- Fonts ‚Äî SIL OFL 1.1 License
  - In the Font Awesome Free download, the SIL OLF license applies to all icons packaged as web and desktop font files.
- Code ‚Äî MIT License
  - In the Font Awesome Free download, the MIT license applies to all non-font and non-icon files.

Attribution is required by MIT, SIL OLF, and CC BY licenses. Downloaded Font
Awesome Free files already contain embedded comments with sufficient
attribution, so you shouldn&#039;t need to do anything additional when using these
files normally.

We&#039;ve kept attribution comments terse, so we ask that you do not actively work
to remove them from files, especially code. They&#039;re a great way for folks to
learn about Font Awesome.

## Team
* [Dave Gandy](https://github.com/davegandy)
* [Travis Chase](https://github.com/supercodepoet)
* [Rob Madole](https://github.com/robmadole)
* [Brian Talbot](https://github.com/talbs)
* [Jory Raphael](https://github.com/sensibleworld)
* [Mike Wilkerson](https://github.com/mlwilkerson)
* [Frances Botsford](https://github.com/frrrances)
* [Trevor Chase](https://github.com/trevorchase)
* [Jason Lundien](https://github.com/jasonlundien)
* [Jason Otero](https://github.com/deathnfudge)
* [Edward Emanuel](https://github.com/ej2)
* [Kelsey Jackson](https://github.com/kelseythejackson)
* [Geremia Taglialatela](https://github.com/tagliala)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[novnc/noVNC]]></title>
            <link>https://github.com/novnc/noVNC</link>
            <guid>https://github.com/novnc/noVNC</guid>
            <pubDate>Sat, 21 Jun 2025 00:04:32 GMT</pubDate>
            <description><![CDATA[VNC client web application]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/novnc/noVNC">novnc/noVNC</a></h1>
            <p>VNC client web application</p>
            <p>Language: JavaScript</p>
            <p>Stars: 12,583</p>
            <p>Forks: 2,442</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>## noVNC: HTML VNC client library and application

[![Test Status](https://github.com/novnc/noVNC/workflows/Test/badge.svg)](https://github.com/novnc/noVNC/actions?query=workflow%3ATest)
[![Lint Status](https://github.com/novnc/noVNC/workflows/Lint/badge.svg)](https://github.com/novnc/noVNC/actions?query=workflow%3ALint)

### Description

noVNC is both a HTML VNC client JavaScript library and an application built on
top of that library. noVNC runs well in any modern browser including mobile
browsers (iOS and Android).

Many companies, projects and products have integrated noVNC including
[OpenStack](http://www.openstack.org),
[OpenNebula](http://opennebula.org/),
[LibVNCServer](http://libvncserver.sourceforge.net), and
[ThinLinc](https://cendio.com/thinlinc). See
[the Projects and companies wiki page](https://github.com/novnc/noVNC/wiki/Projects-and-companies-using-noVNC)
for a more complete list with additional info and links.

### Table of contents

- [News/help/contact](#newshelpcontact)
- [Features](#features)
- [Screenshots](#screenshots)
- [Browser requirements](#browser-requirements)
- [Server requirements](#server-requirements)
- [Quick start](#quick-start)
- [Installation from snap package](#installation-from-snap-package)
- [Integration and deployment](#integration-and-deployment)
- [Authors/Contributors](#authorscontributors)

### News/help/contact

The project website is found at [novnc.com](http://novnc.com).

If you are a noVNC developer/integrator/user (or want to be) please join the
[noVNC discussion group](https://groups.google.com/forum/?fromgroups#!forum/novnc).

Bugs and feature requests can be submitted via
[github issues](https://github.com/novnc/noVNC/issues). If you have questions
about using noVNC then please first use the
[discussion group](https://groups.google.com/forum/?fromgroups#!forum/novnc).
We also have a [wiki](https://github.com/novnc/noVNC/wiki/) with lots of
helpful information.

If you are looking for a place to start contributing to noVNC, a good place to
start would be the issues that are marked as
[&quot;patchwelcome&quot;](https://github.com/novnc/noVNC/issues?labels=patchwelcome).
Please check our
[contribution guide](https://github.com/novnc/noVNC/wiki/Contributing) though.

If you want to show appreciation for noVNC you could donate to a great non-
profits such as:
[Compassion International](http://www.compassion.com/),
[SIL](http://www.sil.org),
[Habitat for Humanity](http://www.habitat.org),
[Electronic Frontier Foundation](https://www.eff.org/),
[Against Malaria Foundation](http://www.againstmalaria.com/),
[Nothing But Nets](http://www.nothingbutnets.net/), etc.


### Features

* Supports all modern browsers including mobile (iOS, Android)
* Supported authentication methods: none, classical VNC, RealVNC&#039;s
  RSA-AES, Tight, VeNCrypt Plain, XVP, Apple&#039;s Diffie-Hellman,
  UltraVNC&#039;s MSLogonII
* Supported VNC encodings: raw, copyrect, rre, hextile, tight, tightPNG,
  ZRLE, JPEG, Zlib, H.264
* Supports scaling, clipping and resizing the desktop
* Supports back &amp; forward mouse buttons
* Local cursor rendering
* Clipboard copy/paste with full Unicode support
* Translations
* Touch gestures for emulating common mouse actions
* Licensed mainly under the [MPL 2.0](http://www.mozilla.org/MPL/2.0/), see
  [the license document](LICENSE.txt) for details

### Screenshots

Running in Firefox before and after connecting:

&lt;img src=&quot;http://novnc.com/img/noVNC-1-login.png&quot; width=400&gt;&amp;nbsp;
&lt;img src=&quot;http://novnc.com/img/noVNC-3-connected.png&quot; width=400&gt;

See more screenshots
[here](http://novnc.com/screenshots.html).


### Browser requirements

noVNC uses many modern web technologies so a formal requirement list is
not available. However these are the minimum versions we are currently
aware of:

* Chrome 89, Firefox 89, Safari 15, Opera 75, Edge 89


### Server requirements

noVNC follows the standard VNC protocol, but unlike other VNC clients it does
require WebSockets support. Many servers include support (e.g.
[x11vnc/libvncserver](http://libvncserver.sourceforge.net/),
[QEMU](http://www.qemu.org/), and
[MobileVNC](http://www.smartlab.at/mobilevnc/)), but for the others you need to
use a WebSockets to TCP socket proxy. noVNC has a sister project
[websockify](https://github.com/novnc/websockify) that provides a simple such
proxy.


### Quick start

* Use the `novnc_proxy` script to automatically download and start websockify, which
  includes a mini-webserver and the WebSockets proxy. The `--vnc` option is
  used to specify the location of a running VNC server:

    `./utils/novnc_proxy --vnc localhost:5901`
    
* If you don&#039;t need to expose the web server to public internet, you can
  bind to localhost:
  
    `./utils/novnc_proxy --vnc localhost:5901 --listen localhost:6081`

* Point your browser to the cut-and-paste URL that is output by the `novnc_proxy`
  script. Hit the Connect button, enter a password if the VNC server has one
  configured, and enjoy!

### Installation from snap package
Running the command below will install the latest release of noVNC from snap:

`sudo snap install novnc`

#### Running noVNC from snap directly

You can run the snap package installed novnc directly with, for example:

`novnc --listen 6081 --vnc localhost:5901 # /snap/bin/novnc if /snap/bin is not in your PATH`

If you want to use certificate files, due to standard snap confinement restrictions you need to have them in the /home/\&lt;user\&gt;/snap/novnc/current/ directory. If your username is jsmith an example command would be:
  
  `novnc --listen 8443 --cert ~jsmith/snap/novnc/current/self.crt --key ~jsmith/snap/novnc/current/self.key --vnc ubuntu.example.com:5901`

#### Running noVNC from snap as a service (daemon)
The snap package also has the capability to run a &#039;novnc&#039; service which can be
configured to listen on multiple ports connecting to multiple VNC servers 
(effectively a service running multiple instances of novnc).
Instructions (with example values):

List current services (out-of-box this will be blank):

```
sudo snap get novnc services
Key             Value
services.n6080  {...}
services.n6081  {...}
```

Create a new service that listens on port 6082 and connects to the VNC server 
running on port 5902 on localhost:

`sudo snap set novnc services.n6082.listen=6082 services.n6082.vnc=localhost:5902`

(Any services you define with &#039;snap set&#039; will be automatically started)
Note that the name of the service, &#039;n6082&#039; in this example, can be anything 
as long as it doesn&#039;t start with a number or contain spaces/special characters.

View the configuration of the service just created:

```
sudo snap get novnc services.n6082
Key                    Value
services.n6082.listen  6082
services.n6082.vnc     localhost:5902
```

Disable a service (note that because of a limitation in snap it&#039;s currently not
possible to unset config variables, setting them to blank values is the way 
to disable a service):

`sudo snap set novnc services.n6082.listen=&#039;&#039; services.n6082.vnc=&#039;&#039;`

(Any services you set to blank with &#039;snap set&#039; like this will be automatically stopped)

Verify that the service is disabled (blank values):

```
sudo snap get novnc services.n6082
Key                    Value
services.n6082.listen  
services.n6082.vnc
```

### Integration and deployment

Please see our other documents for how to integrate noVNC in your own software,
or deploying the noVNC application in production environments:

* [Embedding](docs/EMBEDDING.md) - For the noVNC application
* [Library](docs/LIBRARY.md) - For the noVNC JavaScript library


### Authors/Contributors

See [AUTHORS](AUTHORS) for a (full-ish) list of authors.  If you&#039;re not on
that list and you think you should be, feel free to send a PR to fix that.

* Core team:
    * [Samuel Mannehed](https://github.com/samhed) (Cendio)
    * [Pierre Ossman](https://github.com/CendioOssman) (Cendio)

* Previous core contributors:
    * [Joel Martin](https://github.com/kanaka) (Project founder)
    * [Solly Ross](https://github.com/DirectXMan12) (Red Hat / OpenStack)

* Notable contributions:
    * UI and icons : Pierre Ossman, Chris Gordon
    * Original logo : Michael Sersen
    * tight encoding : Michael Tinglof (Mercuri.ca)
    * RealVNC RSA AES authentication : USTC Vlab Team

* Included libraries:
    * base64 : Martijn Pieters (Digital Creations 2), Samuel Sieb (sieb.net)
    * DES : Dave Zimmerman (Widget Workshop), Jef Poskanzer (ACME Labs)
    * Pako : Vitaly Puzrin (https://github.com/nodeca/pako)

Do you want to be on this list? Check out our
[contribution guide](https://github.com/novnc/noVNC/wiki/Contributing) and
start hacking!
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[vercel/next.js]]></title>
            <link>https://github.com/vercel/next.js</link>
            <guid>https://github.com/vercel/next.js</guid>
            <pubDate>Sat, 21 Jun 2025 00:04:31 GMT</pubDate>
            <description><![CDATA[The React Framework]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vercel/next.js">vercel/next.js</a></h1>
            <p>The React Framework</p>
            <p>Language: JavaScript</p>
            <p>Stars: 132,570</p>
            <p>Forks: 28,620</p>
            <p>Stars today: 27 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[anuraghazra/github-readme-stats]]></title>
            <link>https://github.com/anuraghazra/github-readme-stats</link>
            <guid>https://github.com/anuraghazra/github-readme-stats</guid>
            <pubDate>Sat, 21 Jun 2025 00:04:30 GMT</pubDate>
            <description><![CDATA[‚ö° Dynamically generated stats for your github readmes]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/anuraghazra/github-readme-stats">anuraghazra/github-readme-stats</a></h1>
            <p>‚ö° Dynamically generated stats for your github readmes</p>
            <p>Language: JavaScript</p>
            <p>Stars: 73,939</p>
            <p>Forks: 25,075</p>
            <p>Stars today: 29 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[bgstaal/multipleWindow3dScene]]></title>
            <link>https://github.com/bgstaal/multipleWindow3dScene</link>
            <guid>https://github.com/bgstaal/multipleWindow3dScene</guid>
            <pubDate>Sat, 21 Jun 2025 00:04:29 GMT</pubDate>
            <description><![CDATA[A quick example of how one can "synchronize" a 3d scene across multiple windows using three.js and localStorage]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/bgstaal/multipleWindow3dScene">bgstaal/multipleWindow3dScene</a></h1>
            <p>A quick example of how one can "synchronize" a 3d scene across multiple windows using three.js and localStorage</p>
            <p>Language: JavaScript</p>
            <p>Stars: 18,212</p>
            <p>Forks: 2,813</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre># Multiple Window 3D Scene using Three.js

## Introduction
This project demonstrates a unique approach to creating and managing a 3D scene across multiple browser windows using Three.js and localStorage. It&#039;s designed for developers interested in advanced web graphics and window management techniques.

## Features
- 3D scene creation and rendering with Three.js.
- Synchronization of 3D scenes across multiple browser windows.
- Dynamic window management and state synchronization using localStorage.

## Installation
Clone the repository and open `index.html` in your browser to start exploring the 3D scene.

```
git clone https://github.com/bgstaal/multipleWindow3dScene
```
## Usage
The main application logic is contained within `main.js` and `WindowManager.js`. The 3D scene is rendered in `index.html`, which serves as the entry point of the application.

## Structure and Components
- `index.html`: Entry point that sets up the HTML structure and includes the Three.js library and the main script.
- `WindowManager.js`: Core class managing window creation, synchronization, and state management across multiple windows.
- `main.js`: Contains the logic for initializing the 3D scene, handling window events, and rendering the scene.
- `three.r124.min.js`: Minified version of the Three.js library used for 3D graphics rendering.

## Detailed Functionality
- `WindowManager.js` handles the lifecycle of multiple browser windows, including creation, synchronization, and removal. It uses localStorage to maintain state across windows.
- `main.js` initializes the 3D scene using Three.js, manages the window&#039;s resize events, and updates the scene based on window interactions.

## Contributing
Contributions to enhance or expand the project are welcome. Feel free to fork the repository, make changes, and submit pull requests.

## License
This project is open-sourced under the MIT License.

## Acknowledgments
- The Three.js team for their comprehensive 3D library.
- x.com/didntdrinkwater for this readme.

## Contact
For more information and updates, follow [@_nonfigurativ_](https://twitter.com/_nonfigurativ_) on Twitter.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[huggingface/transformers.js]]></title>
            <link>https://github.com/huggingface/transformers.js</link>
            <guid>https://github.com/huggingface/transformers.js</guid>
            <pubDate>Sat, 21 Jun 2025 00:04:28 GMT</pubDate>
            <description><![CDATA[State-of-the-art Machine Learning for the web. Run ü§ó Transformers directly in your browser, with no need for a server!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/huggingface/transformers.js">huggingface/transformers.js</a></h1>
            <p>State-of-the-art Machine Learning for the web. Run ü§ó Transformers directly in your browser, with no need for a server!</p>
            <p>Language: JavaScript</p>
            <p>Stars: 13,857</p>
            <p>Forks: 939</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre>

&lt;p align=&quot;center&quot;&gt;
    &lt;br/&gt;
    &lt;picture&gt; 
        &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/transformersjs-dark.svg&quot; width=&quot;500&quot; style=&quot;max-width: 100%;&quot;&gt;
        &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/transformersjs-light.svg&quot; width=&quot;500&quot; style=&quot;max-width: 100%;&quot;&gt;
        &lt;img alt=&quot;transformers.js javascript library logo&quot; src=&quot;https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/transformersjs-light.svg&quot; width=&quot;500&quot; style=&quot;max-width: 100%;&quot;&gt;
    &lt;/picture&gt;
    &lt;br/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://www.npmjs.com/package/@huggingface/transformers&quot;&gt;&lt;img alt=&quot;NPM&quot; src=&quot;https://img.shields.io/npm/v/@huggingface/transformers&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://www.npmjs.com/package/@huggingface/transformers&quot;&gt;&lt;img alt=&quot;NPM Downloads&quot; src=&quot;https://img.shields.io/npm/dw/@huggingface/transformers&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://www.jsdelivr.com/package/npm/@huggingface/transformers&quot;&gt;&lt;img alt=&quot;jsDelivr Hits&quot; src=&quot;https://img.shields.io/jsdelivr/npm/hw/@huggingface/transformers&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/huggingface/transformers.js/blob/main/LICENSE&quot;&gt;&lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/github/license/huggingface/transformers.js?color=blue&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://huggingface.co/docs/transformers.js/index&quot;&gt;&lt;img alt=&quot;Documentation&quot; src=&quot;https://img.shields.io/website/http/huggingface.co/docs/transformers.js/index.svg?down_color=red&amp;down_message=offline&amp;up_message=online&quot;&gt;&lt;/a&gt;
&lt;/p&gt;


&lt;h3 align=&quot;center&quot;&gt;
  &lt;p&gt;State-of-the-art Machine Learning for the Web&lt;/p&gt;
&lt;/h3&gt;

Run ü§ó Transformers directly in your browser, with no need for a server!

Transformers.js is designed to be functionally equivalent to Hugging Face&#039;s [transformers](https://github.com/huggingface/transformers) python library, meaning you can run the same pretrained models using a very similar API. These models support common tasks in different modalities, such as:
  - üìù **Natural Language Processing**: text classification, named entity recognition, question answering, language modeling, summarization, translation, multiple choice, and text generation.
  - üñºÔ∏è **Computer Vision**: image classification, object detection, segmentation, and depth estimation.
  - üó£Ô∏è **Audio**: automatic speech recognition, audio classification, and text-to-speech.
  - üêô **Multimodal**: embeddings, zero-shot audio classification, zero-shot image classification, and zero-shot object detection.

Transformers.js uses [ONNX Runtime](https://onnxruntime.ai/) to run models in the browser. The best part about it, is that you can easily [convert](#convert-your-models-to-onnx) your pretrained PyTorch, TensorFlow, or JAX models to ONNX using [ü§ó Optimum](https://github.com/huggingface/optimum#onnx--onnx-runtime). 

For more information, check out the full [documentation](https://huggingface.co/docs/transformers.js).


## Installation


To install via [NPM](https://www.npmjs.com/package/@huggingface/transformers), run:
```bash
npm i @huggingface/transformers
```

Alternatively, you can use it in vanilla JS, without any bundler, by using a CDN or static hosting. For example, using [ES Modules](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules), you can import the library with:
```html
&lt;script type=&quot;module&quot;&gt;
    import { pipeline } from &#039;https://cdn.jsdelivr.net/npm/@huggingface/transformers@3.5.2&#039;;
&lt;/script&gt;
```


## Quick tour


It&#039;s super simple to translate from existing code! Just like the python library, we support the `pipeline` API. Pipelines group together a pretrained model with preprocessing of inputs and postprocessing of outputs, making it the easiest way to run models with the library.

&lt;table&gt;
&lt;tr&gt;
&lt;th width=&quot;440px&quot; align=&quot;center&quot;&gt;&lt;b&gt;Python (original)&lt;/b&gt;&lt;/th&gt;
&lt;th width=&quot;440px&quot; align=&quot;center&quot;&gt;&lt;b&gt;Javascript (ours)&lt;/b&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;

```python
from transformers import pipeline

# Allocate a pipeline for sentiment-analysis
pipe = pipeline(&#039;sentiment-analysis&#039;)

out = pipe(&#039;I love transformers!&#039;)
# [{&#039;label&#039;: &#039;POSITIVE&#039;, &#039;score&#039;: 0.999806941}]
```

&lt;/td&gt;
&lt;td&gt;

```javascript
import { pipeline } from &#039;@huggingface/transformers&#039;;

// Allocate a pipeline for sentiment-analysis
const pipe = await pipeline(&#039;sentiment-analysis&#039;);

const out = await pipe(&#039;I love transformers!&#039;);
// [{&#039;label&#039;: &#039;POSITIVE&#039;, &#039;score&#039;: 0.999817686}]
```

&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;


You can also use a different model by specifying the model id or path as the second argument to the `pipeline` function. For example:
```javascript
// Use a different model for sentiment-analysis
const pipe = await pipeline(&#039;sentiment-analysis&#039;, &#039;Xenova/bert-base-multilingual-uncased-sentiment&#039;);
```

By default, when running in the browser, the model will be run on your CPU (via WASM). If you would like
to run the model on your GPU (via WebGPU), you can do this by setting `device: &#039;webgpu&#039;`, for example:
```javascript
// Run the model on WebGPU
const pipe = await pipeline(&#039;sentiment-analysis&#039;, &#039;Xenova/distilbert-base-uncased-finetuned-sst-2-english&#039;, {
  device: &#039;webgpu&#039;,
});
```

For more information, check out the [WebGPU guide](https://huggingface.co/docs/transformers.js/guides/webgpu).

&gt; [!WARNING]
&gt; The WebGPU API is still experimental in many browsers, so if you run into any issues,
&gt; please file a [bug report](https://github.com/huggingface/transformers.js/issues/new?title=%5BWebGPU%5D%20Error%20running%20MODEL_ID_GOES_HERE&amp;assignees=&amp;labels=bug,webgpu&amp;projects=&amp;template=1_bug-report.yml).

In resource-constrained environments, such as web browsers, it is advisable to use a quantized version of
the model to lower bandwidth and optimize performance. This can be achieved by adjusting the `dtype` option,
which allows you to select the appropriate data type for your model. While the available options may vary
depending on the specific model, typical choices include `&quot;fp32&quot;` (default for WebGPU), `&quot;fp16&quot;`, `&quot;q8&quot;`
(default for WASM), and `&quot;q4&quot;`. For more information, check out the [quantization guide](https://huggingface.co/docs/transformers.js/guides/dtypes).
```javascript
// Run the model at 4-bit quantization
const pipe = await pipeline(&#039;sentiment-analysis&#039;, &#039;Xenova/distilbert-base-uncased-finetuned-sst-2-english&#039;, {
  dtype: &#039;q4&#039;,
});
```


## Examples

Want to jump straight in? Get started with one of our sample applications/templates, which can be found [here](https://github.com/huggingface/transformers.js-examples).

| Name              | Description                      | Links                   |
|-------------------|----------------------------------|-------------------------------|
| Whisper Web       | Speech recognition w/ Whisper    | [code](https://github.com/xenova/whisper-web), [demo](https://huggingface.co/spaces/Xenova/whisper-web) |
| Doodle Dash       | Real-time sketch-recognition game | [blog](https://huggingface.co/blog/ml-web-games), [code](https://github.com/xenova/doodle-dash), [demo](https://huggingface.co/spaces/Xenova/doodle-dash) |
| Code Playground   | In-browser code completion website | [code](https://github.com/huggingface/transformers.js/tree/main/examples/code-completion/), [demo](https://huggingface.co/spaces/Xenova/ai-code-playground) |
| Semantic Image Search (client-side) | Search for images with text | [code](https://github.com/huggingface/transformers.js/tree/main/examples/semantic-image-search-client/), [demo](https://huggingface.co/spaces/Xenova/semantic-image-search-client) |
| Semantic Image Search (server-side) | Search for images with text (Supabase) | [code](https://github.com/huggingface/transformers.js/tree/main/examples/semantic-image-search/), [demo](https://huggingface.co/spaces/Xenova/semantic-image-search) |
| Vanilla JavaScript | In-browser object detection     | [video](https://scrimba.com/scrim/cKm9bDAg), [code](https://github.com/huggingface/transformers.js/tree/main/examples/vanilla-js/), [demo](https://huggingface.co/spaces/Scrimba/vanilla-js-object-detector) |
| React             | Multilingual translation website | [code](https://github.com/huggingface/transformers.js/tree/main/examples/react-translator/), [demo](https://huggingface.co/spaces/Xenova/react-translator) |
| Text to speech (client-side) | In-browser speech synthesis | [code](https://github.com/huggingface/transformers.js/tree/main/examples/text-to-speech-client/), [demo](https://huggingface.co/spaces/Xenova/text-to-speech-client) |
| Browser extension | Text classification extension    | [code](https://github.com/huggingface/transformers.js/tree/main/examples/extension/) |
| Electron          | Text classification application  | [code](https://github.com/huggingface/transformers.js/tree/main/examples/electron/)  |
| Next.js (client-side) | Sentiment analysis (in-browser inference) | [code](https://github.com/huggingface/transformers.js/tree/main/examples/next-client/), [demo](https://huggingface.co/spaces/Xenova/next-example-app) |
| Next.js (server-side) | Sentiment analysis (Node.js inference) | [code](https://github.com/huggingface/transformers.js/tree/main/examples/next-server/), [demo](https://huggingface.co/spaces/Xenova/next-server-example-app) |
| Node.js           | Sentiment analysis API           | [code](https://github.com/huggingface/transformers.js/tree/main/examples/node/)      |
| Demo site         | A collection of demos | [code](https://github.com/huggingface/transformers.js/tree/main/examples/demo-site/), [demo](https://huggingface.github.io/transformers.js/) |

Check out the Transformers.js [template](https://huggingface.co/new-space?template=static-templates%2Ftransformers.js) on Hugging Face to get started in one click!


## Custom usage



By default, Transformers.js uses [hosted pretrained models](https://huggingface.co/models?library=transformers.js) and [precompiled WASM binaries](https://cdn.jsdelivr.net/npm/@huggingface/transformers@3.5.2/dist/), which should work out-of-the-box. You can customize this as follows:

### Settings

```javascript
import { env } from &#039;@huggingface/transformers&#039;;

// Specify a custom location for models (defaults to &#039;/models/&#039;).
env.localModelPath = &#039;/path/to/models/&#039;;

// Disable the loading of remote models from the Hugging Face Hub:
env.allowRemoteModels = false;

// Set location of .wasm files. Defaults to use a CDN.
env.backends.onnx.wasm.wasmPaths = &#039;/path/to/files/&#039;;
```

For a full list of available settings, check out the [API Reference](https://huggingface.co/docs/transformers.js/api/env).

### Convert your models to ONNX

We recommend using our [conversion script](https://github.com/huggingface/transformers.js/blob/main/scripts/convert.py) to convert your PyTorch, TensorFlow, or JAX models to ONNX in a single command. Behind the scenes, it uses [ü§ó Optimum](https://huggingface.co/docs/optimum) to perform conversion and quantization of your model.

```bash
python -m scripts.convert --quantize --model_id &lt;model_name_or_path&gt;
```

For example, convert and quantize [bert-base-uncased](https://huggingface.co/bert-base-uncased) using:
```bash
python -m scripts.convert --quantize --model_id bert-base-uncased
```

This will save the following files to `./models/`:

```
bert-base-uncased/
‚îú‚îÄ‚îÄ config.json
‚îú‚îÄ‚îÄ tokenizer.json
‚îú‚îÄ‚îÄ tokenizer_config.json
‚îî‚îÄ‚îÄ onnx/
    ‚îú‚îÄ‚îÄ model.onnx
    ‚îî‚îÄ‚îÄ model_quantized.onnx
```

For the full list of supported architectures, see the [Optimum documentation](https://huggingface.co/docs/optimum/main/en/exporters/onnx/overview).


## Supported tasks/models

Here is the list of all tasks and architectures currently supported by Transformers.js.
If you don&#039;t see your task/model listed here or it is not yet supported, feel free
to open up a feature request [here](https://github.com/huggingface/transformers.js/issues/new/choose).

To find compatible models on the Hub, select the &quot;transformers.js&quot; library tag in the filter menu (or visit [this link](https://huggingface.co/models?library=transformers.js)).
You can refine your search by selecting the task you&#039;re interested in (e.g., [text-classification](https://huggingface.co/models?pipeline_tag=text-classification&amp;library=transformers.js)).


### Tasks

#### Natural Language Processing

| Task                     | ID | Description | Supported? |
|--------------------------|----|-------------|------------|
| [Fill-Mask](https://huggingface.co/tasks/fill-mask)                     | `fill-mask`   | Masking some of the words in a sentence and predicting which words should replace those masks. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.FillMaskPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=fill-mask&amp;library=transformers.js) |
| [Question Answering](https://huggingface.co/tasks/question-answering)   | `question-answering`   | Retrieve the answer to a question from a given text. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.QuestionAnsweringPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=question-answering&amp;library=transformers.js) |
| [Sentence Similarity](https://huggingface.co/tasks/sentence-similarity) | `sentence-similarity`  | Determining how similar two texts are. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.FeatureExtractionPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=sentence-similarity&amp;library=transformers.js) |
| [Summarization](https://huggingface.co/tasks/summarization)             |  `summarization`  | Producing a shorter version of a document while preserving its important information. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.SummarizationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=summarization&amp;library=transformers.js) |
| [Table Question Answering](https://huggingface.co/tasks/table-question-answering) |  `table-question-answering`  | Answering a question about information from a given table. | ‚ùå |
| [Text Classification](https://huggingface.co/tasks/text-classification)      | `text-classification` or `sentiment-analysis`  | Assigning a label or class to a given text. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.TextClassificationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=text-classification&amp;library=transformers.js) |
| [Text Generation](https://huggingface.co/tasks/text-generation#completion-generation-models)          | `text-generation`  | Producing new text by predicting the next word in a sequence. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.TextGenerationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=text-generation&amp;library=transformers.js) |
| [Text-to-text Generation](https://huggingface.co/tasks/text-generation#text-to-text-generation-models)  | `text2text-generation`  | Converting one text sequence into another text sequence. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.Text2TextGenerationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=text2text-generation&amp;library=transformers.js) |
| [Token Classification](https://huggingface.co/tasks/token-classification)     | `token-classification` or `ner`  | Assigning a label to each token in a text. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.TokenClassificationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=token-classification&amp;library=transformers.js) |
| [Translation](https://huggingface.co/tasks/translation)              |  `translation`  | Converting text from one language to another. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.TranslationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=translation&amp;library=transformers.js) |
| [Zero-Shot Classification](https://huggingface.co/tasks/zero-shot-classification) | `zero-shot-classification`  | Classifying text into classes that are unseen during training.  | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.ZeroShotClassificationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=zero-shot-classification&amp;library=transformers.js) |
| [Feature Extraction](https://huggingface.co/tasks/feature-extraction)         |  `feature-extraction`  | Transforming raw data into numerical features that can be processed while preserving the information in the original dataset. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.FeatureExtractionPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=feature-extraction&amp;library=transformers.js) |

#### Vision

| Task                     | ID | Description | Supported? |
|--------------------------|----|-------------|------------|
| [Background Removal](https://huggingface.co/tasks/image-segmentation#background-removal)       | `background-removal`   | Isolating the main subject of an image by removing or making the background transparent. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.BackgroundRemovalPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?other=background-removal&amp;library=transformers.js) |
| [Depth Estimation](https://huggingface.co/tasks/depth-estimation)         |  `depth-estimation`  | Predicting the depth of objects present in an image. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.DepthEstimationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=depth-estimation&amp;library=transformers.js) |
| [Image Classification](https://huggingface.co/tasks/image-classification)                | `image-classification`   | Assigning a label or class to an entire image. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.ImageClassificationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=image-classification&amp;library=transformers.js) |
| [Image Segmentation](https://huggingface.co/tasks/image-segmentation)       | `image-segmentation`   | Divides an image into segments where each pixel is mapped to an object. This task has multiple variants such as instance segmentation, panoptic segmentation and semantic segmentation. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.ImageSegmentationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=image-segmentation&amp;library=transformers.js) |
| [Image-to-Image](https://huggingface.co/tasks/image-to-image)      |  `image-to-image` | Transforming a source image to match the characteristics of a target image or a target image domain. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.ImageToImagePipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=image-to-image&amp;library=transformers.js) |
| [Mask Generation](https://huggingface.co/tasks/mask-generation)            |  `mask-generation`  | Generate masks for the objects in an image. | ‚ùå |
| [Object Detection](https://huggingface.co/tasks/object-detection)            | `object-detection`   | Identify objects of certain defined classes within an image. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.ObjectDetectionPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=object-detection&amp;library=transformers.js) |
| [Video Classification](https://huggingface.co/tasks/video-classification) |  n/a  | Assigning a label or class to an entire video. | ‚ùå |
| [Unconditional Image Generation](https://huggingface.co/tasks/unconditional-image-generation)      |  n/a   | Generating images with no condition in any context (like a prompt text or another image). | ‚ùå |
| [

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[wordshub/free-font]]></title>
            <link>https://github.com/wordshub/free-font</link>
            <guid>https://github.com/wordshub/free-font</guid>
            <pubDate>Sat, 21 Jun 2025 00:04:27 GMT</pubDate>
            <description><![CDATA[Â§ßÊ¶ÇÊòØ2020Âπ¥ÊúÄÂÖ®ÁöÑÂÖçË¥πÂèØÂïÜÁî®Â≠ó‰ΩìÔºåËøôÈáåÊî∂ÂΩïÁöÑÂïÜÂÖçÂ≠ó‰ΩìÈÉΩËÉΩÊâæÂà∞ÊòéÁ°ÆÁöÑÊéàÊùÉÂá∫Â§ÑÔºåÂèØ‰ª•ÊîæÂøÉ‰ΩøÁî®ÔºåÊåÅÁª≠Êõ¥Êñ∞‰∏≠...]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/wordshub/free-font">wordshub/free-font</a></h1>
            <p>Â§ßÊ¶ÇÊòØ2020Âπ¥ÊúÄÂÖ®ÁöÑÂÖçË¥πÂèØÂïÜÁî®Â≠ó‰ΩìÔºåËøôÈáåÊî∂ÂΩïÁöÑÂïÜÂÖçÂ≠ó‰ΩìÈÉΩËÉΩÊâæÂà∞ÊòéÁ°ÆÁöÑÊéàÊùÉÂá∫Â§ÑÔºåÂèØ‰ª•ÊîæÂøÉ‰ΩøÁî®ÔºåÊåÅÁª≠Êõ¥Êñ∞‰∏≠...</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,173</p>
            <p>Forks: 377</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre># ÂâçË®Ä

Ê±âÂ≠óÂ≠ó‰ΩìÂà∂‰ΩúÊòØ‰∏Ä‰∏™Â∫ûÂ§ßÁöÑÂ∑•Á®ãÔºå‰∏çÂêå‰∫éË•øÊñáÂ≠óÂ∫ì„ÄÇÊ±âÂ≠óÂ∏∏Áî®Â≠óÂ∫ìË°®Â∞±Êúâ 6763 ‰∏™Ê±âÂ≠óÔºåGBK Ê†áÂáÜ‰∏≠ÂÖ±Êúâ 20902 ‰∏™Ê±âÂ≠óÔºåËÄå 2022 Âπ¥ÂèëÂ∏ÉÁöÑ GB 18030-2022 ÂÖ±Êúâ 87887 ‰∏™Ê±âÂ≠ó„ÄÇËÄå‰∏îÊ±âÂ≠óÁöÑÂ≠óÂΩ¢Áõ∏ÂØπËæÉ‰∏∫Â§çÊùÇÔºå‰∏ÄÂ•ó‰∏≠ÊñáÂ≠ó‰ΩìÁöÑÂÆåÊàêÈúÄË¶ÅËÄóË¥πÂ§ßÈáè‰∏ì‰∏ö‰∫∫Â£´ÁöÑÁ≤æÂäõÂíåÊó∂Èó¥ÔºåÊàë‰ª¨ÂÄ°ÂØºÂ§ßÂÆ∂‰ΩøÁî®Ê≠£ÁâàÂ≠ó‰ΩìÔºå‰∏∫‰∏≠ÊñáÂ≠ó‰ΩìÁöÑÂà∂‰ΩúÂàõÈÄ†‰∏Ä‰∏™ËâØÊÄßÁöÑÁéØÂ¢É„ÄÇ

ÁÑ∂ËÄåÁõÆÂâçÂõΩÂÜÖÂ≠ó‰ΩìÁöÑÊéàÊùÉ‰ΩìÁ≥ªËøò‰∏çÊòØÈÇ£‰πàÂÆåÂñÑÔºå‰∏çÂêåÁöÑÂéÇÂïÜÂØπ‰∏çÂêåÁöÑ‰ΩøÁî®Âú∫ÊôØÈÉΩ‰∏çÂêåÁöÑÊéàÊùÉÔºåËÄåÊéàÊùÉÂçèËÆÆÈáå‰∏çÈÇ£‰πàÂ•ΩÁêÜËß£ÁöÑ‰∏ì‰∏öÊúØËØ≠ÂæÄÂæÄ‰πü‰ΩøÁî®Êà∑ÊúõËÄåÂç¥Ê≠•„ÄÇÂØπ‰∫éÂì™‰∫õÂàöËµ∑Ê≠•ÁöÑÂàõ‰∏öÂÖ¨Âè∏ÊàñËÄÖ‰∏™‰∫∫Êù•ËÆ≤Âä®ËæÑÂá†ÂçÉÁöÑÊéàÊùÉË¥πÁî®‰πüÊòØ‰∏ÄÁ¨î‰∏çÂ∞èÁöÑÂºÄÊîØÔºåËøôÈáåÊî∂ÂΩï‰∫Ü‰∏Ä‰∫õÂú®ÁΩë‰∏äÊî∂ÈõÜÊï¥ÁêÜÁöÑÂèØ‰ª•ÂÖçË¥πÂïÜÁî®ÁöÑ‰∏≠ÊñáÂ≠ó‰Ωì‰æõÂ§ßÂÆ∂‰ΩøÁî®„ÄÇ

&gt; ËøôÈáåÊî∂ÂΩïÁöÑÂ≠ó‰ΩìÈÉΩËÉΩÊâæÂà∞ÂÖ∂ÂºÄÊ∫êÊàñËÄÖÂºÄÊîæÂÖçË¥πÂïÜÁî®ÊéàÊùÉÁöÑÂá∫Â§ÑÔºåÊúâ‰∫õÂú®ÁΩëÁªú‰∏äÂ£∞Áß∞ÂÖçË¥πÂïÜÁî®‰ΩÜÊâæ‰∏çÂà∞ÊéàÊùÉÂá∫Â§ÑÁöÑÂ≠ó‰Ωì‰∏çÂú®Êî∂ÂΩï‰πãÂàó„ÄÇ

# ÁõÆÂΩï



|‰º†Áªü|Ëâ∫ÊúØ|ÊâãÂÜô|
|--|--|--|
| [ÊñπÊ≠£Èªë‰Ωì](#ÊñπÊ≠£Èªë‰Ωì) | [Á´ôÈÖ∑Â∫ÜÁßëÈªÑÊ≤π‰Ωì](#Á´ôÈÖ∑Â∫ÜÁßëÈªÑÊ≤π‰Ωì) | [‰∏ÄÁÇπÈí¢Á¨îÈπ§‰Ωì](#‰∏ÄÁÇπÈí¢Á¨îÈπ§‰Ωì) |
| [ÊñπÊ≠£Ê•∑‰Ωì](#ÊñπÊ≠£Ê•∑‰Ωì)  | [Á´ôÈÖ∑ÊñáËâ∫‰Ωì](#Á´ôÈÖ∑ÊñáËâ∫‰Ωì) | [Ê∏ÖÊùæÊâãÂÜô‰Ωì](#Ê∏ÖÊùæÊâãÂÜô‰Ωì) |
| [ÊñπÊ≠£‰π¶ÂÆã](#ÊñπÊ≠£‰π¶ÂÆã)  |[Á´ôÈÖ∑ÈÖ∑Èªë](#Á´ôÈÖ∑ÈÖ∑Èªë)|[Â∫ûÈó®Ê≠£ÈÅìÁ≤ó‰π¶‰Ωì](#Â∫ûÈó®Ê≠£ÈÅìÁ≤ó‰π¶‰Ωì)|
| [ÊñπÊ≠£‰ªøÂÆã](#ÊñπÊ≠£‰ªøÂÆã) |[Á´ôÈÖ∑Â∞èÂæÆLOGO‰Ωì](#Á´ôÈÖ∑Â∞èÂæÆlogo‰Ωì)|[Ê≤êÁë∂ÈöèÂøÉÊâãÂÜô‰Ωì](#Ê≤êÁë∂ÈöèÂøÉÊâãÂÜô‰Ωì) |
| [ÂÖ®Â≠óÂ∫ìËØ¥ÊñáËß£Â≠ó](#ÂÖ®Â≠óÂ∫ìËØ¥ÊñáËß£Â≠ó) |[Á´ôÈÖ∑È´òÁ´ØÈªë](#Á´ôÈÖ∑È´òÁ´ØÈªë) |[Ê≤êÁë∂ËΩØÁ¨îÊâãÂÜô‰Ωì](#Ê≤êÁë∂ËΩØÁ¨îÊâãÂÜô‰Ωì)|
| [ÊÄùÊ∫êÈªë‰Ωì](#ÊÄùÊ∫êÈªë‰Ωì) |[Â∫ûÈó®Ê≠£ÈÅìÊ†áÈ¢ò‰Ωì](#Â∫ûÈó®Ê≠£ÈÅìÊ†áÈ¢ò‰Ωì) |[ÊºîÁ§∫ÊÇ†ÁÑ∂Â∞èÊ•∑](#ÊºîÁ§∫ÊÇ†ÁÑ∂Â∞èÊ•∑)|
| [ÊÄùÊ∫êÂÆã‰Ωì](#ÊÄùÊ∫êÂÆã‰Ωì) |[Â∫ûÈó®Ê≠£ÈÅìËΩªÊùæ‰Ωì](#Â∫ûÈó®Ê≠£ÈÅìËΩªÊùæ‰Ωì)|[ÊºîÁ§∫Êò•È£éÊ•∑](#ÊºîÁ§∫Êò•È£éÊ•∑)|
| [ÊñáÊ≥âÈ©øÊ≠£Èªë](#ÊñáÊ≥âÈ©øÊ≠£Èªë) |[ËÉ°ÊôìÊ≥¢È™öÂåÖ‰Ωì](#ËÉ°ÊôìÊ≥¢È™öÂåÖ‰Ωì)|[ÊºîÁ§∫Â§èË°åÊ•∑](#ÊºîÁ§∫Â§èË°åÊ•∑)|
| [ÊñáÊ≥âÈ©øÂæÆÁ±≥Èªë](#ÊñáÊ≥âÈ©øÂæÆÁ±≥Èªë) |[ËÉ°ÊôìÊ≥¢ÁúüÂ∏Ö‰Ωì](#ËÉ°ÊôìÊ≥¢ÁúüÂ∏Ö‰Ωì)|[ÊºîÁ§∫ÁßãÈ∏øÊ•∑](#ÊºîÁ§∫ÁßãÈ∏øÊ•∑)|
| [Ê∫ê‰∫ëÊòé‰Ωì](#Ê∫ê‰∫ëÊòé‰Ωì) |[ËÉ°ÊôìÊ≥¢Áî∑Á•û‰Ωì](#ËÉ°ÊôìÊ≥¢Áî∑Á•û‰Ωì)|[ÊºîÁ§∫‰ΩõÁ≥ª‰Ωì](#ÊºîÁ§∫‰ΩõÁ≥ª‰Ωì)|
| [Ê∫êÊµÅÊòé‰Ωì](#Ê∫êÊµÅÊòé‰Ωì) |[Ë£ÖÁî≤ÊòéÊúù](#Ë£ÖÁî≤ÊòéÊúù)|[Êô∫ÂãáÊâã‰π¶‰Ωì](#Êô∫ÂãáÊâã‰π¶‰Ωì)|
| [Ê∫êÊ†∑Êòé‰Ωì](#Ê∫êÊ†∑Êòé‰Ωì) |[ÂåÖÂõæÂ∞èÁôΩ‰Ωì](#ÂåÖÂõæÂ∞èÁôΩ‰Ωì)|[Êâã‰π¶‰Ωì](#Êâã‰π¶‰Ωì)|
| [‰∏ÄÁÇπÊòé‰Ωì](#‰∏ÄÁÇπÊòé‰Ωì) |[‰ºòËÆæÊ†áÈ¢òÈªë](#‰ºòËÆæÊ†áÈ¢òÈªë)|[Êù®‰ªª‰∏úÁ´πÁü≥‰Ωì](#Êù®‰ªª‰∏úÁ´πÁü≥‰Ωì)|
| [OPPO Sans](#oppo-sans)|[ÈîêÂ≠óÁúüË®Ä‰Ωì](#ÈîêÂ≠óÁúüË®Ä‰Ωì)|[Êñ∞Âè∂Âøµ‰Ωì](#Êñ∞Âè∂Âøµ‰Ωì)|
| [‰∏ÄÁÇπÈ¢ú‰Ωì](#‰∏ÄÁÇπÈ¢ú‰Ωì) |[ËÅîÁõüËµ∑Ëâ∫Âç¢Â∏ÖÊ≠£ÈîêÈªë‰Ωì](#ËÅîÁõüËµ∑Ëâ∫Âç¢Â∏ÖÊ≠£ÈîêÈªë‰Ωì)|[Ë¥§‰∫å‰Ωì](#Ë¥§‰∫å‰Ωì)|
| [ÁéãÊ±âÂÆóÁ≥ªÂàó](#ÁéãÊ±âÂÆóÁ≥ªÂàó) |[‰∏≠ÊñáÂÉèÁ¥†‰Ωì](#‰∏≠ÊñáÂÉèÁ¥†‰Ωì)|[ÊâãÂÜôÊùÇÂ≠ó‰Ωì](#ÊâãÂÜôÊùÇÂ≠ó‰Ωì)|
| [cwTeXÂ≠ó‰Ωì](#cwTeXÂ≠ó‰Ωì) |[ÊëÑÂõæÊë©ÁôªÂ∞èÊñπ‰Ωì](#ÊëÑÂõæÊë©ÁôªÂ∞èÊñπ‰Ωì)|[È∫¶ÂÖãÁ¨îÊâãÁªò‰Ωì](#È∫¶ÂÖãÁ¨îÊâãÁªò‰Ωì)|
| [Ëä±Âõ≠ÊòéÊúù](#Ëä±Âõ≠ÊòéÊúù) |[ÂçìÂÅ•Ê©ÑÊ¶ÑÁÆÄ‰Ωì](#ÂçìÂÅ•Ê©ÑÊ¶ÑÁÆÄ‰Ωì)|[ÈíüÈΩêÂøóËéΩË°å‰π¶](#ÈíüÈΩêÂøóËéΩË°å‰π¶)|
| [Ê∫êÁïåÊòéÊúù‰Ωì](#Ê∫êÁïåÊòéÊúù‰Ωì) |[Â≠ó‰ΩìËßÜÁïåÊ≥ïÊ£ç‰Ωì](#Â≠ó‰ΩìËßÜÁïåÊ≥ïÊ£ç‰Ωì)|[Ê±üË•øÊãôÊ•∑](#Ê±üË•øÊãôÊ•∑)|
| [ÂÖ®Â≠óÂ∫ìÊ≠£Ê•∑‰Ωì](#ÂÖ®Â≠óÂ∫ìÊ≠£Ê•∑‰Ωì) |[ÊøëÊà∑‰Ωì](#ÊøëÊà∑‰Ωì)|[ÈóÆËóè‰π¶Êàø](#ÈóÆËóè‰π¶Êàø)|
| [ÂÖ®Â≠óÂ∫ìÊ≠£ÂÆã‰Ωì](#ÂÖ®Â≠óÂ∫ìÊ≠£ÂÆã‰Ωì) |[ÂíåÁî∞Á†îÂ≠ó‰Ωì](#ÂíåÁî∞Á†îÂ≠ó‰Ωì)||
| [ÈòøÈáåÂ∑¥Â∑¥ÊôÆÊÉ†‰Ωì](#ÈòøÈáåÂ∑¥Â∑¥ÊôÆÊÉ†‰Ωì) |[Ë∂ÖÁ∫ßÁªÜ](#Ë∂ÖÁ∫ßÁªÜ)||
| [ÊÄùÊ∫êÁúüÈªë](#ÊÄùÊ∫êÁúüÈªë) |[ÂçÉÂõæÂ∞èÂÖî‰Ωì](#ÂçÉÂõæÂ∞èÂÖî‰Ωì)||
|  |[ÈªÑ‰ª§‰∏úÈΩê‰ºã‰Ωì](#ÈªÑ‰ª§‰∏úÈΩê‰ºã‰Ωì)||
|  |[Smart Font UI](#smart-font-ui)||
|  |[Kanjyuku Gothic](#kanjyuku-gothic)||
# ‰∏≠Êñá

&amp;nbsp;

## ÊñπÊ≠£Á≥ªÂàó

&amp;nbsp;

&lt;a id=&quot;user-content-ÊñπÊ≠£Èªë‰Ωì&quot;  href=&quot;#ÊñπÊ≠£Èªë‰Ωì&quot;&gt;&lt;img src=&quot;assets/image/FangZhengHeiTi.svg&quot; alt=&quot;ÊñπÊ≠£Èªë‰Ωì&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

„ÄåÊñπÊ≠£Èªë‰Ωì„ÄçÁöÑËÆæËÆ°Ê∫ê‰∫éÈìÖÂ≠óÊó∂‰ª£ÁöÑÈªë‰ΩìÂ≠óÁ®øÔºåÊòØ‰∏ÄÊ¨æ‰∏ìÈó®‰∏∫Ê≠£ÊñáÊéíÁâàËÆæËÆ°ÁöÑÈªë‰Ωì„ÄÇÊñπÊ≠£Èªë‰ΩìÁöÑÁ¨îÁîª‰∏§Á´ØÁïôÊúâÂñáÂè≠Âè£ÔºåÊíá„ÄÅÊç∫„ÄÅÈí©Á¨îÁîªÁöÑÁ≤óÁªÜÂèòÂåñËæÉÂ§ßÔºå‰∏≠ÂÆ´ÊØîËæÉÁ¥ßÂáë„ÄÇÂÖ∂Â≠óÈáçÈÄÇ‰∏≠„ÄÅÂ≠óÂΩ¢È£éÊ†º‰∏≠ÊÄßÊú¥ÂÆûÔºå‰∏ç‰ΩÜÈÄÇÁî®‰∫éÂç∞Âà∑Â™í‰ªãÔºåËøòÂèØÁî®‰∫éÂ±èÂπïÈòÖËØªÔºåÊòØ‰∏ÄÊ¨æÈùûÂ∏∏ÁªèÂÖ∏ÁöÑÊ≠£ÊñáÈªë‰Ωì„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.foundertype.com/index.php/About/bookAuth/key/my_sysq.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/ÂÖçË¥πÂïÜÁî®-ÈúÄË¶ÅÊéàÊùÉ-orange?style=flat-square&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

&lt;a id=&quot;user-content-ÊñπÊ≠£‰π¶ÂÆã&quot;  href=&quot;#ÊñπÊ≠£‰π¶ÂÆã&quot;&gt;&lt;img src=&quot;assets/image/FangZhengShuSong.svg&quot; alt=&quot;ÊñπÊ≠£‰π¶ÂÆã&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;


„ÄåÊñπÊ≠£‰π¶ÂÆã„ÄçÊ∫êËá™‰∏äÊµ∑Âç∞Âà∑ÊäÄÊúØÁ†îÁ©∂ÊâÄÁöÑÂÆã‰∫åÔºåÂéüÂ≠óÂΩ¢Ë∑ù‰ªäÂ∑≤ÊúâËøë60Âπ¥„ÄÇÊúÄÂàùÁöÑËÆæËÆ°Â∞±ÊòØ‰∏ìÈó®ÈíàÂØπÊúÄÂ∏∏Áî®ÁöÑÂ∞èÂ≠óÂè∑Ê≠£ÊñáÊéíÁâà„ÄÇÊñπÊ≠£‰π¶ÂÆãÁöÑÂ≠óÂΩ¢Á´ØÊ≠£Ê∏ÖÁßÄÔºå‰∏≠ÂÆ´ÈÄÇÂ∫¶„ÄÇÂá≠ÁùÄÊ∏ÖÊô∞ÁàΩÁõÆ„ÄÅ‰πÖËØª‰∏çÊòìÁñ≤Âä≥„ÄÅÂç∞Âà∑ÈÄÇÊÄßÂ•ΩÁöÑ‰ºòÁÇπÔºåÈïøÊúüË¢´‰Ωú‰∏∫ÊùÇÂøóÂíå‰π¶Á±çÁöÑÊ≠£ÊñáÈ¶ñÈÄâÂ≠ó‰ΩìÔºåÊâÄ‰ª•‰πüÊòØ‰∏ÄÊ¨æÈùûÂ∏∏ÁªèÂÖ∏ÁöÑÊ≠£ÊñáÂÆã‰Ωì„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.foundertype.com/index.php/About/bookAuth/key/my_sysq.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/ÂÖçË¥πÂïÜÁî®-ÈúÄË¶ÅÊéàÊùÉ-orange?style=flat-square&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

&lt;a id=&quot;user-content-ÊñπÊ≠£‰ªøÂÆã&quot;  href=&quot;#ÊñπÊ≠£‰ªøÂÆã&quot;&gt;&lt;img src=&quot;assets/image/FangZhengFangSong.svg&quot; alt=&quot;ÊñπÊ≠£‰ªøÂÆã&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;


„Äå‰ªøÂÆã‰Ωì„Äç‰∫ßÁîü‰∫é20‰∏ñÁ∫™ÂàùÔºåÁî±ÂΩìÊó∂ÁöÑÈìÖÂ≠óÂà∂‰ΩúËÄÖ‰ªøÂÆãÁâà‰π¶‰∏≠ÁöÑÁò¶ÁªÜÂ≠ó‰ΩìËÄåÂà∂Êàê„ÄÇÊñπÊ≠£‰ªøÂÆãÊ∫ê‰∫éÈìÖÂ≠óÊó∂‰ª£ÁöÑÂ≠óÁ®øÔºåÂÖ∂Â≠óË∫´Áï•Á™ÑÔºåÁ¨îÁîªÁò¶Á°¨ÔºåÊ®™Á´ñÁ¨îÁîªÁ≠âÁ≤óÔºåËµ∑Á¨îÂ§ÑÊúâÊñúÂäøÊ£±ËßíÔºåÊäòÁ¨îÂ§ÑÊ£±ËßíÂàÜÊòéÔºåÊï¥‰ΩìÂ≠óÂΩ¢Êå∫Êãî‰øäÁßÄÔºåÁªô‰∫∫‰ª•ÊÇ¶ÁõÆ‰πãÊÑü„ÄÇÂõ†Ê∏ÖÊô∞ÁæéËßÇÔºåÂÆπÊòìËæ®ËÆ§ÔºåÈïøÊúüË¢´Áî®‰∫éÂ∑•Á®ãÂõæÁ∫∏ÊñáÂ≠óÂíå‰π¶Âàä‰∏≠ÁöÑÂºïÊñá„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.foundertype.com/index.php/About/bookAuth/key/my_sysq.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/ÂÖçË¥πÂïÜÁî®-ÈúÄË¶ÅÊéàÊùÉ-orange?style=flat-square&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

&lt;a id=&quot;user-content-ÊñπÊ≠£Ê•∑‰Ωì&quot;  href=&quot;#ÊñπÊ≠£Ê•∑‰Ωì&quot;&gt;&lt;img src=&quot;assets/image/FangZhengKaiTi.svg&quot; alt=&quot;ÊñπÊ≠£Ê•∑‰Ωì&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;


„ÄåÊñπÊ≠£Ê•∑‰Ωì„ÄçÊ∫ê‰∫é‰∏äÊµ∑Âç∞Âà∑ÊäÄÊúØÁ†îÁ©∂ÊâÄ‚ÄúÂçéÊñáÊ•∑‰Ωì‚ÄùÂ≠óÁ®ø„ÄÇÂéü‚ÄúÂçéÊñáÊ•∑‰Ωì‚ÄùËØûÁîü‰∫é20‰∏ñÁ∫™40Âπ¥‰ª£ÔºåÊñ∞‰∏≠ÂõΩÊàêÁ´ãÂêé‰∏ÄÁõ¥ÊòØ‰∏ªË¶Å‰ΩøÁî®ÁöÑÈìÖÂ≠óÊ•∑‰Ωì„ÄÇÂú®Ê≠§ÊúüÈó¥Ôºå‰∏äÊµ∑Â≠óÊ®°‰∏ÄÂéÇ„ÄÅ‰∏äÊµ∑Âç∞Âà∑ÊäÄÊúØÁ†îÁ©∂ÊâÄÁ≠âÂçï‰ΩçËøõË°å‰∫ÜÊï∞Ê¨°ÊîπËâØÔºåÂπ∂Ê∑ªÂä†‰∫ÜÁÆÄ‰ΩìÂ≠ó„ÄÇÊñπÊ≠£Ê•∑‰ΩìÁöÑÁªìÊûÑÁßÄ‰∏ΩÂåÄÁß∞ÔºåÁ¨îÁîªÂúÜÊ∂¶ÊüîÂíåÔºåÊ®™Á´ñÁ¨îÁîªÁöÑÁ≤óÁªÜÂèòÂåñ‰∏çÂ§ß„ÄÇËøôÊ¨æÂ≠ó‰ΩìË¢´Â§ßÈáèÂ∫îÁî®‰∫éÊä•Á∫∏„ÄÅÊùÇÂøóÂíå‰π¶Á±ç‰∏≠ÁöÑÊ≠£ÊñáÔºåÂú®ÊïôÁßë‰π¶‰∏≠ÊúÄ‰∏∫Â∏∏ËßÅ„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.foundertype.com/index.php/About/bookAuth/key/my_sysq.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/ÂÖçË¥πÂïÜÁî®-ÈúÄË¶ÅÊéàÊùÉ-orange?style=flat-square&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

## Â∫ûÈó®Ê≠£ÈÅìÁ≥ªÂàó

&amp;nbsp;

&lt;a id=&quot;user-content-Â∫ûÈó®Ê≠£ÈÅìÊ†áÈ¢ò‰Ωì&quot;  href=&quot;#Â∫ûÈó®Ê≠£ÈÅìÊ†áÈ¢ò‰Ωì&quot;&gt;&lt;img src=&quot;assets/image/PangMenZhengDaoBiaoTiTi.svg&quot; alt=&quot;Â∫ûÈó®Ê≠£ÈÅìÊ†áÈ¢ò‰Ωì&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;


„ÄåÂ∫ûÈó®Ê≠£ÈÅìÊ†áÈ¢ò‰Ωì„ÄçÁî±[Â∫ûÈó®Ê≠£ÈÅì](http://artman.zcool.com.cn/)ËÅîÂêà‰∫Ü13‰ΩçËÆæËÆ°Â∏à‰∫é2016Âπ¥Êé®Âá∫ÁöÑÁ¨¨‰∏ÄÊ¨æÂÖçË¥πÂïÜÁî®Â≠ó‰Ωì„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://mp.weixin.qq.com/s/1ccpLCOrIn81JhV9ulwPIQ&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/ÂÖçË¥πÂïÜÁî®-Êó†ÈúÄÊéàÊùÉ-orange?style=flat-square&amp;color=success&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

&lt;a id=&quot;user-content-Â∫ûÈó®Ê≠£ÈÅìÁ≤ó‰π¶‰Ωì&quot;  href=&quot;#Â∫ûÈó®Ê≠£ÈÅìÁ≤ó‰π¶‰Ωì&quot;&gt;&lt;img src=&quot;assets/image/PangMenZhengDaoCuShuTi.svg&quot; alt=&quot;Â∫ûÈó®Ê≠£ÈÅìÁ≤ó‰π¶‰Ωì&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;


„ÄåÂ∫ûÈó®Ê≠£ÈÅìÁ≤ó‰π¶‰Ωì„ÄçÁî±[Â∫ûÈó®Ê≠£ÈÅì](http://artman.zcool.com.cn/)ÂÖ¨‰ºóÂè∑2018Âπ¥ÂèëÂ∏ÉÁöÑÁ¨¨‰∫åÊ¨æÂÖçË¥πÂïÜÁî®Â≠ó‰ΩìÔºåÁî±ËΩ¶Ê∏ØÊïèËÆæËÆ°ÂÆåÊàê

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://mp.weixin.qq.com/s/LZ_PMNc-3uX-Atmri4OLGQ&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/ÂÖçË¥πÂïÜÁî®-Êó†ÈúÄÊéàÊùÉ-orange?style=flat-square&amp;color=success&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

&lt;a id=&quot;user-content-Â∫ûÈó®Ê≠£ÈÅìËΩªÊùæ‰Ωì&quot;  href=&quot;#Â∫ûÈó®Ê≠£ÈÅìËΩªÊùæ‰Ωì&quot;&gt;&lt;img src=&quot;assets/image/PangMenZhengDaoQingSongTi.svg&quot; alt=&quot;Â∫ûÈó®Ê≠£ÈÅìËΩªÊùæ‰Ωì&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;


„ÄåÂ∫ûÈó®Ê≠£ÈÅìËΩªÊùæ‰Ωì„ÄçÁî±[Â∫ûÈó®Ê≠£ÈÅì](http://artman.zcool.com.cn/)Âú®2019Âπ¥ÂèëÂ∏ÉÁöÑÁ¨¨‰∏âÊ¨æÂÖçË¥πÂ≠ó‰Ωì„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://mp.weixin.qq.com/s/1ccpLCOrIn81JhV9ulwPIQ&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/ÂÖçË¥πÂïÜÁî®-Êó†ÈúÄÊéàÊùÉ-orange?style=flat-square&amp;color=success&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

## Á´ôÈÖ∑Á≥ªÂàó

&amp;nbsp;

&lt;a id=&quot;user-content-Á´ôÈÖ∑È´òÁ´ØÈªë&quot;  href=&quot;#Á´ôÈÖ∑È´òÁ´ØÈªë&quot;&gt;&lt;img src=&quot;assets/image/ZhanKuGaoDuanHei.svg&quot; alt=&quot;Á´ôÈÖ∑È´òÁ´ØÈªë&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;


„ÄåÁ´ôÈÖ∑È´òÁ´ØÈªë„ÄçÁî±Â≠ó‰ΩìËÆæËÆ°Â∏à[ËÉ°ÊôìÊ≥¢](https://huxiaobo.zcool.com.cn/)„ÄÅ[ÂàòÂÖµÂÖã](https://liubingke.zcool.com.cn/)ÂèëËµ∑ÔºåÂèÇ‰∏éÊ±âÂ≠óÁôæ‰∫∫Ëàû100‰ΩçÂ≠ó‰ΩìËÆæËÆ°Â∏àÂÖ±ÂêåÂÆåÊàê„ÄÇÊòØ2014Âπ¥Âú£ËØûÂèëÂ∏ÉÁöÑÁ¨¨‰∏ÄÊ¨æÁî±Á´ôÈÖ∑ÂÜ†ÂêçÁöÑÂÖ¨ÁõäÂ≠ó‰ΩìÔºåÂ≠ó‰ΩìËÆæËÆ°Â∏àËÉ°ÊôìÊ≥¢„ÄÅÂàòÂÖµÂÖãÂú®Á´ôÈÖ∑ÁΩëÂèëËµ∑‚ÄúÊ±âÂ≠óÁôæ‰∫∫Ëàû‚ÄùÁöÑÂæÅÈõÜËÆæËÆ°Â∏àÈõÜ‰ΩìÈÄ†Â≠óÔºåÂâçÂêéÂèÇ‰∏éËÆæËÆ°Â∏àËøëÁôæ‰∫∫„ÄÇ2014Âπ¥12ÊúàÂèëÂ∏ÉÁ¨¨‰∏ÄÁâàÔºå2015Âπ¥11ÊúàÂèëÂ∏ÉÊúÄÊñ∞‰øÆËÆ¢Áâà„ÄÇÂåÖÂê´6763‰∏™Ê±âÂ≠ó„ÄÅÊï∞Â≠óÂíåËã±ÊñáÂ≠óÊØç„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.zcool.com.cn/article/ZMTQyOTUy.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/ÂÖçË¥πÂïÜÁî®-Êó†ÈúÄÊéàÊùÉ-orange?style=flat-square&amp;color=success&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

&lt;a id=&quot;user-content-Á´ôÈÖ∑ÊñáËâ∫‰Ωì&quot;  href=&quot;#Á´ôÈÖ∑ÊñáËâ∫‰Ωì&quot;&gt;&lt;img src=&quot;assets/image/ZhanKuWenYiTi.svg&quot; alt=&quot;Á´ôÈÖ∑ÊñáËâ∫‰Ωì&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;


„ÄåÁ´ôÈÖ∑ÊñáËâ∫‰Ωì„ÄçÁî±Â≠ó‰ΩìËÆæËÆ°Â∏à[ÂàòÂÖµÂÖã](https://liubingke.zcool.com.cn/)Á°ÆÂÆöÂ≠óÂΩ¢ÂíåËßÑËåÉÔºåÁî±ÂàòÂÖµÂÖãÂ∑•‰ΩúÂÆ§‰ª•ÂèäÂàòÂÖµÂÖãÂ≠ó‰ΩìËÆæËÆ°Áõ¥Êí≠ËØæÂ≠¶ÂëòÂÖ±ÂêåÂàõ‰ΩúÂÆåÊàêÔºåËÆæËÆ°Â∏àÈÉëÂ∫ÜÁßëÂÆåÊàê‰∫ÜÊúÄÁªàÁöÑÂ≠óÂ∫ìÁîüÊàêÂ∑•‰Ωú„ÄÇÂ≠óÂΩ¢Êñ∞È¢ñÁã¨ÁâπÔºåÁÆÄÊ¥ÅÊúâÂäõÔºåÊ∏ÖÊñ∞Ê∑°ÈõÖÔºåÊñáËâ∫ËåÉÂçÅË∂≥„ÄÇÂåÖÂê´7155‰∏™Â∏∏Áî®Â≠óÔºå52‰∏™Ëã±ÊñáÂ≠óÊØçÔºå10 ‰∏™ÈòøÊãâ‰ºØÊï∞Â≠óÔºå67‰∏™Â∏∏Áî®Ê†áÁÇπÂèäÁ¨¶Âè∑„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.zcool.com.cn/work/ZMjc2NDA5NDA=.html)&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/ÂÖçË¥πÂïÜÁî®-Êó†ÈúÄÊéàÊùÉ-orange?style=flat-square&amp;color=success&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

&lt;a id=&quot;user-content-Á´ôÈÖ∑Â∞èÂæÆLOGO‰Ωì&quot;  href=&quot;#Á´ôÈÖ∑Â∞èÂæÆLOGO‰Ωì&quot;&gt;&lt;img src=&quot;assets/image/ZhanKuXiaoWeiLOGOTi.svg&quot; alt=&quot;Á´ôÈÖ∑Â∞èÂæÆLOGO‰Ωì&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

„ÄåÁ´ôÈÖ∑Â∞èÂæÆLOGO‰Ωì„ÄçÁî±‰∏äÊµ∑‰ΩêÂÖπÂìÅÁâåËÆæËÆ°Â∑•‰ΩúÂÆ§ËÆæËÆ°ÊÄªÁõëÊùéÂ§ßÂç´ (David Â∞èÈ©¨Âì•ÔºâÂ∏¶È¢ÜÂÖ∂Â∑•‰ΩúÂÆ§Âõ¢ÈòüÂÖ±ÊàêÂÆåÊàê„ÄÇÊòØÊùéÂ§ßÂç´ÈÄÅÁªôËá™Â∑±Â•≥ÂÑøÂá∫Áîü‰∏âÂë®Âπ¥ÁöÑ‰∏Ä‰∏™Á§ºÁâ©„ÄÇÂÖ∂ÁõÆÁöÑÊòØ‰∏∫‰∫ÜÂ°´Ë°•ÂÖçË¥πÂ≠ó‰Ωì‰∏≠ÁöÑLOGO‰ΩìÁ©∫Áº∫„ÄÇÂ≠ó‰ΩìÁ¨îÁîªÊµëÂéöÔºåËØÜÂà´ÊÄßÈ´ò,ÊîæÂ§ßÊîæÂ∞èÁ©∫Èó¥Èó¥ÈöôÈÉΩËÉΩÂ¶ÇÊÑèÁÅµÈÄö„ÄÇ2018Âπ¥1ÊúàÊúÄÊñ∞‰øÆËÆ¢Áâà„ÄÇÈááÁî®GB2312Ê±âÂ≠óÁºñÁ†ÅÔºåÂÖ±Êî∂ÂΩï6763‰∏™Ê±âÂ≠ó„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.zcool.com.cn/special/zcoolfonts/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/ÂÖçË¥πÂïÜÁî®-Êó†ÈúÄÊéàÊùÉ-orange?style=flat-square&amp;color=success&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

&lt;a id=&quot;user-content-Á´ôÈÖ∑Â∫ÜÁßëÈªÑÊ≤π‰Ωì&quot;  href=&quot;#Á´ôÈÖ∑Â∫ÜÁßëÈªÑÊ≤π‰Ωì&quot;&gt;&lt;img src=&quot;assets/image/ZhanKuQingKeHuangYouTi.svg&quot; alt=&quot;Á´ôÈÖ∑Â∫ÜÁßëÈªÑÊ≤π‰Ωì&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

„ÄåÁ´ôÈÖ∑Â∫ÜÁßëÈªÑÊ≤π‰Ωì„ÄçÔºåÁî±Â≠ó‰ΩìËÆæËÆ°Â∏à[ÈÉëÂ∫ÜÁßë](https://www.zcool.com.cn/u/387222)ÂºÄÂèëÔºåÁ∫øÊù°ÂúÜÊ∂¶„ÄÇÂπ∂‰∏îÂ≠ó‰ΩìÊï∞ÈáèÂ§öÔºåËææÂà∞‰∫Ü9ÂçÉ‰∏™Â§ö‰∏™Ê±âÂ≠ó„ÄÇÁ´ôÈÖ∑Â∫ÜÁßëÈªÑÊ≤π‰ΩìÊòØ‰∏ÄÊ¨æÂ≠óÂûãÂàõÊñ∞„ÄÅÁ∫øÊù°ÂúÜÊ∂¶ÁöÑÂ≠ó‰Ωì„ÄÇÁ¨îÂàíÁöÑÊØè‰∏Ä‰∏™Áõ¥ËßíÔºåÈÉΩË¢´Â§ÑÁêÜÊàê‰∫ÜÂçäÂæÑ‰∏∫4ptÁöÑÂúÜËßí„ÄÇÂú®ËÆæËÆ°‰∏≠ÈúÄÈÅµÂæ™Á¨îÂàíÁÆÄÂåñ‰ΩÜ‰∏çÁúÅÁï•ÔºåÁ¨îÂàíËßíÂ∫¶Â∞ΩÈáè‰∏∫ÂûÇÁõ¥ËßíÂ∫¶„ÄÇÂ≠ó‰ΩìÈÉ®È¶ñÁöÑÂè≥‰∏ãËßíÂùá‰∏∫45¬∞Áº∫ËßíÔºåÊèêÈ´ò‰∫ÜÂ≠ó‰ΩìËßÜËßâ‰∏≠ÂøÉÔºåÂπ∂ÊúâÊïàÁöÑËß£ÂÜ≥‰∫Ü‰∏Ä‰∫õÂ≠ó‰ΩìÂõ†Á¨îÂàí‰∫§ÂèâÔºåÂ≠ó‰ΩìÈòÖËØªÂõ∞ÈöæÁöÑÊØõÁóÖ„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.zcool.com.cn/work/ZMTg5MDEyMDQ=.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/ÂÖçË¥πÂïÜÁî®-Êó†ÈúÄÊéàÊùÉ-orange?style=flat-square&amp;color=success&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

&lt;a id=&quot;user-content-Á´ôÈÖ∑ÈÖ∑Èªë&quot;  href=&quot;#Á´ôÈÖ∑ÈÖ∑Èªë&quot;&gt;&lt;img src=&quot;assets/image/ZhanKuKuHei.svg&quot; alt=&quot;Á´ôÈÖ∑ÈÖ∑Èªë&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

„ÄåÁ´ôÈÖ∑ÈÖ∑Èªë„ÄçÁî±[ËÉ°ÊôìÊ≥¢](https://huxiaobo.zcool.com.cn/)ÂèëËµ∑ÔºåÂ≠óÊ∏∏Â∑•‰ΩúÂÆ§ÊàêÂëòËøõË°åÂü∫Á°ÄÂ≠óÂΩ¢ËÆæËÆ°„ÄÇËÉ°ÊôìÊ≥¢ËÆæËÆ°Áè≠ÂçÅÂêçÂ≠¶ÂëòÂÖ±ÂêåËÆæËÆ°ÂÆåÊàê„ÄÇ[Á´ôÈÖ∑ÈÖ∑Èªë‰ΩìÈ™åÁâàÔºΩÂú®Á´ôÈÖ∑ÂçÅÂë®Âπ¥‰πãÈôÖÊ®™Á©∫Âá∫‰∏ñ„ÄÇÂ≠óÂΩ¢Á¨îÁîªÁ≤óÁä∑ÊúâÂäõÔºåÁî®ÂÆΩÊâÅÂûãÁöÑÂ≠óÈù¢ÊûÑÂª∫Âá∫ÂéöÈáçÁöÑÂ≠ó‰ΩìÂΩ¢ÊÄÅÔºåÁ¨îÁîªÁªÜËäÇ‰∏äÁöÑ‰øÆÈ•∞Êó¢Â¢ûÂº∫‰∫ÜÂ≠ó‰ΩìÁöÑËÆæËÆ°ÊÑüÔºåÂèàËÆ©Â≠ó‰ΩìÂ§ö‰∫Ü‰∏Ä‰∫õÂ∞èÂ∞èÁöÑÁ≤æËá¥ÊÑüÔºå‰∏≠ÂÆ´ÁöÑÈ•±Êª°‰ΩøÂæóÊñáÂ≠ó‰πãÈó¥ÁöÑÊéíÁâàÁªÑÂêàÈùûÂ∏∏ÈÜíÁõÆÂ•ΩÁúã„ÄÇ2016Âπ¥7ÊúàÂèëÂ∏É‰ΩìÈ™åÁâà„ÄÇÂåÖÂê´3500‰∏™Â∏∏Áî®Â≠óÔºå52‰∏™Ëã±ÊñáÂ≠óÊØçÔºå10‰∏™ÈòøÊãâ‰ºØÊï∞Â≠ó„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.zcool.com.cn/work/ZMTc2MDM5MTY=.html))&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/ÂÖçË¥πÂïÜÁî®-Êó†ÈúÄÊéàÊùÉ-orange?style=flat-square&amp;color=success&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

&lt;a id=&quot;user-content-Á´ôÈÖ∑Âø´‰πê‰Ωì&quot;  href=&quot;#Á´ôÈÖ∑Âø´‰πê‰Ωì&quot;&gt;&lt;img src=&quot;assets/image/ZhanKuKuaiLeTi.svg&quot; alt=&quot;Á´ôÈÖ∑Âø´‰πê‰Ωì&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

„ÄåÁ´ôÈÖ∑Âø´‰πê‰Ωì„ÄçÁî±[ÂàòÂÖµÂÖã](https://liubingke.zcool.com.cn/)Â≠¶ÂëòÂíåÂ∑•‰ΩúÂÆ§Âõ¢ÈòüËÆæËÆ°„ÄÇÊòØÂú®‚ÄúÁ´ôÈÖ∑Âø´‰πê‰Ωì‚ÄùÂü∫Á°Ä‰∏äËÄóÊó∂7‰∏™ÊúàËøõË°åÁöÑÂ§ßÂπÖ‰øÆÊîπ‰∏éÊèêÂçáÔºåÁªèËøáÂ§öËΩÆÊ†°ÂÆ°‰πãÂêéÂ∑≤Ê≠£ÂºèÂØπÂ§ñÂÖ¨Â∏ÉÂπ∂Êèê‰æõ‰∏ãËΩΩ„ÄÇ2015Âπ¥9ÊúàÂèëÂ∏ÉÁ¨¨‰∏ÄÁâàÔºå2016Âπ¥6ÊúàÂèëÂ∏ÉÊúÄÊñ∞‰øÆËÆ¢Áâà„ÄÇÈááÁî®GB2312Ê±âÂ≠óÁºñÁ†ÅÔºåÂÖ±Êî∂ÂΩï6763‰∏™Ê±âÂ≠ó„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.zcool.com.cn/work/ZMTMzMDQ0Mjg=.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/ÂÖçË¥πÂïÜÁî®-Êó†ÈúÄÊéàÊùÉ-orange?style=flat-square&amp;color=success&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

## ËÉ°ÊôìÊ≥¢Á≥ªÂàó

&amp;nbsp;

&lt;a id=&quot;user-content-ËÉ°ÊôìÊ≥¢Áî∑Á•û‰Ωì&quot;  href=&quot;#ËÉ°ÊôìÊ≥¢Áî∑Á•û‰Ωì&quot;&gt;&lt;img src=&quot;assets/image/HuXiaoBoNanShenTi.svg&quot; alt=&quot;ËÉ°ÊôìÊ≥¢Áî∑Á•û‰Ωì&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

„ÄåËÉ°ÊôìÊ≥¢Áî∑Á•û‰Ωì„ÄçÁî±ËÆæËÆ°Â∏àËÉ°ÊôìÊ≥¢ËÆæËÆ°ÁöÑ‰∏ÄÊ¨æÂÖçË¥πÂ≠ó‰Ωì

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.zcool.com.cn/work/ZNDE3NjcwMTY=.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/ÂÖçË¥πÂïÜÁî®-Êó†ÈúÄÊéàÊùÉ-orange?style=flat-square&amp;color=success&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

&lt;a id=&quot;user-content-ËÉ°ÊôìÊ≥¢È™öÂåÖ‰Ωì&quot;  href=&quot;#ËÉ°ÊôìÊ≥¢È™öÂåÖ‰Ωì&quot;&gt;&lt;img src=&quot;assets/image/HuXiaoBoSaoBaoTi.svg&quot; alt=&quot;ËÉ°ÊôìÊ≥¢È™öÂåÖ‰Ωì&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

„ÄåËÉ°ÊôìÊ≥¢È™öÂåÖ‰Ωì„ÄçÁî±ËÆæËÆ°Â∏à[ËÉ°ÊôìÊ≥¢](https://huxiaobo.zcool.com.cn/)ËÆæËÆ°ÁöÑ‰∏ÄÊ¨æÂÖçË¥πÂ≠ó‰Ωì

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.zcool.com.cn/work/ZNDE3NjcwMTY=.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/ÂÖçË¥πÂïÜÁî®-Êó†ÈúÄÊéàÊùÉ-orange?style=flat-square&amp;color=success&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

&lt;a id=&quot;user-content-ËÉ°ÊôìÊ≥¢ÁúüÂ∏Ö‰Ωì&quot;  href=&quot;#ËÉ°ÊôìÊ≥¢ÁúüÂ∏Ö‰Ωì&quot;&gt;&lt;img src=&quot;assets/image/HuXiaoBoZhenShuaiTi.svg&quot; alt=&quot;ËÉ°ÊôìÊ≥¢ÁúüÂ∏Ö‰Ωì&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

„ÄåËÉ°ÊôìÊ≥¢ÁúüÂ∏Ö‰Ωì„ÄçÊòØÁî±ËÆæËÆ°Â∏à[ËÉ°ÊôìÊ≥¢](https://huxiaobo.zcool.com.cn/)ËÆæËÆ°ÁöÑ‰∏ÄÊ¨æÂÖçË¥πÂ≠ó‰Ωì

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.zcool.com.cn/work/ZNDE3NjcwMTY=.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/ÂÖçË¥πÂïÜÁî®-Êó†ÈúÄÊéàÊùÉ-orange?style=flat-square&amp;color=success&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

## Ê≤êÁë∂Á≥ªÂàó

&amp;nbsp;

&lt;a id=&quot;user-content-Ê≤êÁë∂ËΩØÁ¨îÊâãÂÜô‰Ωì&quot;  href=&quot;#Ê≤êÁë∂ËΩØÁ¨îÊâãÂÜô‰Ωì&quot;&gt;&lt;img src=&quot;assets/image/MuYaoRuanBiShouXieTi.svg&quot; alt=&quot;Ê≤êÁë∂ËΩØÁ¨îÊâãÂÜô‰Ωì&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

„ÄåÊ≤êÁë∂ËΩØÁ¨îÊâãÂÜô‰Ωì„ÄçÔºàMuyao-Softbrush Ôºâ ÊòØ‰∏ÄÊ¨æÊâãÂÜô‰ΩìÔºåËá™Êù•Á´ôÈÖ∑ËÆæËÆ°Â∏à@[Êò•È¢úÁßãËâ≤](https://www.zcool.com.cn/u/402511)ÈÄÅÁªôÂ•≥ÂÑøÁöÑÁ§ºÁâ©„ÄÇ‰πüÊòØ‰ª•Â•≥ÂÑøÂêçÂ≠óÂëΩÂêçÁöÑ‰∏ÄÊ¨æÂèØÂÖçË¥πÂïÜÁî®ÁöÑÊâãÂÜôÂ≠ó‰Ωì„ÄÇÈÅµÂæ™GB2312Ê†áÂáÜÔºåÂÖ±ÂåÖÂê´6763‰∏™Ê±âÂ≠óÂä†Êï∞Â≠óËã±ÊñáÂíåÂ∏∏Áî®Ê†áÁÇπ„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.zcool.com.cn/work/ZMjg5MjAwMDQ=.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/ÂÖçË¥πÂïÜÁî®-Êó†ÈúÄÊéàÊùÉ-orange?style=flat-square&amp;color=success&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

&lt;a id=&quot;user-content-Ê≤êÁë∂ÈöèÂøÉÊâãÂÜô‰Ωì&quot;  href=&quot;#Ê≤êÁë∂ÈöèÂøÉÊâãÂÜô‰Ωì&quot;&gt;&lt;img src=&quot;assets/image/MuYaoSuiXinShouXieTi.svg&quot; alt=&quot;Ê≤êÁë∂ÈöèÂøÉÊâãÂÜô‰Ωì&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

„ÄåÊ≤êÁë∂ÈöèÂøÉÊâãÂÜô‰Ωì„ÄçÁ´ôÈÖ∑ËÆæËÆ°Â∏à@[Êò•È¢úÁßãËâ≤](https://www.zcool.com.cn/u/402511)ÂÖçË¥πÂºÄÂèëÁöÑÁ¨¨‰∫åÊ¨æÂÖ¨ÁõäÂ≠ó‰Ωì„ÄÇÊ≤êÁë∂ÊòØ‰ª•ÂÖ∂Â•≥ÂÑøÁöÑÂêçÂ≠óÂëΩÂêçÁöÑ„ÄÇÂ≠ó‰ΩìÊú¨Ë∫´ÊòØÂü∫‰∫éGB2312-80Ê†áÂáÜÔºåÂÖ±ÂåÖÂê´6763‰∏™Ê±âÂ≠óÂíåÊï∞Áôæ‰∏™Á¨¶Âè∑„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.zcool.com.cn/work/ZMzYwMzk2MjA=.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/ÂÖçË¥πÂïÜÁî®-Êó†ÈúÄÊéàÊùÉ-orange?style=flat-square&amp;color=success&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

## ÊÄùÊ∫êÁ≥ªÂàó

&amp;nbsp;

&lt;a id=&quot;user-content-ÊÄùÊ∫êÈªë‰Ωì&quot;  href=&quot;#ÊÄùÊ∫êÈªë‰Ωì&quot;&gt;&lt;img src=&quot;assets/image/SiYuanHeiTi.svg&quot; alt=&quot;ÊÄùÊ∫êÈªë‰Ωì&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

„ÄåÊÄùÊ∫êÈªë‰Ωì„ÄçÊòØ‰∏ÄÂ•ó OpenType/CFF Ê≥õ‰∏≠Êó•Èü©Â≠ó‰Ωì„ÄÇËøô‰∏™ÂºÄÊ∫êÈ°πÁõÆ‰∏ç‰ªÖÊèê‰æõ‰∫ÜÂèØÁî®ÁöÑ OpenType Â≠ó‰ΩìÔºåËøòÊèê‰æõ‰∫ÜÂà©Áî® AFDKO *makeotf* Âíå *otf2otc* Â∑•ÂÖ∑ÂàõÂª∫Ëøô‰∫õ OpenType Â≠ó‰ΩìÊó∂ÁöÑÊâÄÊúâÊ∫êÊñá‰ª∂„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/adobe-fonts/source-han-sans/blob/master/LICENSE.txt&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/license-OFL--1.1-orange?style=flat-square&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

&lt;a id=&quot;user-content-ÊÄùÊ∫êÂÆã‰Ωì&quot;  href=&quot;#ÊÄùÊ∫êÂÆã‰Ωì&quot;&gt;&lt;img src=&quot;assets/image/SiYuanSongTi.svg&quot; alt=&quot;ÊÄùÊ∫êÂÆã‰Ωì&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

„ÄåÊÄùÊ∫êÂÆã‰Ωì„ÄçÊòØ Adobe Type ÂèëÂ∏ÉÁöÑÊúÄÊñ∞Ê≥õ CJK Â≠ó‰ΩìÔºåÂÆÉÊòØÂØπÂ∫î‰∫é[ÊÄùÊ∫êÈªë‰Ωì](https://blog.typekit.com/alternate/source-han-sans-chs/)ÁöÑÂÆã‰ΩìÂ≠ó‰ΩìÔºõÊàë‰ª¨ÂèëÂ∏ÉËøô‰∏§ÁßçÂ≠ó‰ΩìÊòØ‰∏∫‰∫ÜÂìçÂ∫îÁªü‰∏ÄËÆæËÆ°ÁöÑÈúÄÊ±ÇÔºå‰ª•ÊúçÂä°‰∫é‰∏ú‰∫ö 15 ‰∫ø‰∫∫Âè£„ÄÇ

ÊÄùÊ∫êÂÆã‰ΩìÊîØÊåÅÂõõÁßç‰∏çÂêåÁöÑ‰∏ú‰∫öËØ≠Ë®ÄÔºàÁÆÄ‰Ωì‰∏≠Êñá„ÄÅÁπÅ‰Ωì‰∏≠Êñá„ÄÅÊó•ËØ≠ÂíåÊúùÈ≤úËØ≠ÔºâÔºå7 ÁßçÁ≤óÁªÜÁ±ªÂûã‰∏≠ÁöÑÊØè‰∏ÄÁßçÈÉΩÊúâ 65,535 ‰∏™Â≠óÂΩ¢ÔºåÂèØÂÖ±ÂêåÂëàÁé∞‰∏ÄËá¥ÁöÑËßÜËßâÁæéÊÑü„ÄÇËØ•Â≠ó‰ΩìËøòÂåÖÂê´Â§ö‰∏™Ë•øÊñπÂ≠óÂΩ¢ÔºåÊîØÊåÅÊãâ‰∏ÅËØ≠„ÄÅÂ∏åËÖäËØ≠ÂíåË•øÈáåÂ∞îÊñáËÑöÊú¨ÔºåËøô‰∫õÂ≠óÂΩ¢ÂùáÊù•Ê∫ê‰∫é [Source Serif](https://blog.typekit.com/2017/01/10/introducing-source-serif-2-0/)„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/adobe-fonts/source-han-sans/blob/master/LICENSE.txt&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/license-OFL--1.1-orange?style=flat-square&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

&lt;a id=&quot;user-content-ÊÄùÊ∫êÊüîÈªë&quot;  href=&quot;#ÊÄùÊ∫êÊüîÈªë&quot;&gt;&lt;img src=&quot;assets/image/genjyuu.svg&quot; alt=&quot;ÊÄùÊ∫êÊüîÈªë&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

„ÄåÊÄùÊ∫êÊüîÈªë‰Ωì„ÄçÊòØÂü∫‰∫éÊÄùÊ∫êÈªë‰Ωì‰øÆÊîπËÄåÊàêÁöÑÂúÜ‰ΩìÁâàÊÄùÊ∫êÂ≠ó‰ΩìÔºå‰ΩúËÄÖÊòØÊó•Êú¨ÁöÑËá™ÂÆ∂Ë£Ω„Éï„Ç©„É≥„ÉàÂ∑•Êàø„ÄÇÊÄùÊ∫êÊüîÈªë‰ΩìÊèê‰æõ‰∫Ü‰∏âÁßç‰∏çÂêåÂúÜËßíÁ®ãÂ∫¶ÁöÑÁâàÊú¨Ôºå‰ª•Âèä‰∏ÉÁßç‰∏çÂêåÁ≤óÁªÜÁöÑÁâàÊú¨„ÄÇÊÄùÊ∫êÊüîÈªë‰Ωì‰øùÁïôÊÄùÊ∫êÈªë‰ΩìÂéüÊúâÁöÑ‰ºòÈõÖÂèäÂèØËØªÊÄßÔºåÂú®ÊñáÂ≠óËæπËßí‰ª•ÂúÜËßíËøõË°åÂ§ÑÁêÜÔºåÊï¥‰ΩìÁúãËµ∑Êù•Êõ¥ÊòæÂæóÊ¥ªÊ≥º„ÄÅÂèØÁà±Ôºå‰πüËæÉÊúâÊ¥ªÂäõ„ÄÇÊÄùÊ∫êÊüîÈªë‰Ωì‰∏ÄÂÖ±ÈáäÂá∫‰∏âÁßçÁâàÊú¨ÔºåÂ∑ÆÂºÇÂú®‰∫éÂúÜËßíÁöÑÂúÜÊªëÁ®ãÂ∫¶‰∏çÂêåÔºåL ÂúÜËßíËæÉËΩª„ÄÅX ÂúÜËßíÊúÄÈáçÔºå‰ªã‰∫é‰∏≠Èó¥ÁöÑÊòØÊ†áÂáÜÁâà„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;http://jikasei.me/font/genjyuu/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/license-OFL--1.1-orange?style=flat-square&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

&lt;a id=&quot;user-content-ÊÄùÊ∫êÁúüÈªë&quot;  href=&quot;#ÊÄùÊ∫êÁúüÈªë&quot;&gt;&lt;img src=&quot;assets/image/genshin.svg&quot; alt=&quot;ÊÄùÊ∫êÁúüÈªë&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

„ÄåÊÄùÊ∫êÁúüÈªë‰Ωì„Äç‰πüÊòØÂêåÊ†∑Âá∫Ëá™Êó•Êú¨Ëá™ÂÆ∂Ë£ΩÂ≠óÂûãÂ∑•ÊàøÔºåÂ†™Áß∞ÊòØÊÄùÊ∫êÊüîÈªë‰ΩìÁöÑÂßäÂ¶π‰ΩúÔºå‰ªéÊÄùÊ∫êÈªë‰Ωì‰øÆÊîπËÄåÊù•ÔºåÂú®ÁªÜÈÉ®‰∏äÂÅö‰∫Ü‰∫õËÆ∏ÁöÑË∞ÉÊï¥ÂíåÂèòÂåñÔºå‰ΩøÂÆÉÁúãËµ∑Êù•Êõ¥‰∏∫ÈîêÂà©„ÄÇÊÄùÊ∫êÁúüÈªë‰Ωì‰∏ÄÂÖ±Êúâ‰∏ÉÁßçÂ≠óÈáçÔºå‰ª•ÂèäÁ≠âÂÆΩÂ≠ó‰Ωì„ÄÅÊØî‰æãÂ≠ó‰ΩìÈÄâÊã©„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;http://jikasei.me/font/genshin/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/license-OFL--1.1-orange?style=flat-square&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

## ÊñáÊ≥âÈ©øÁ≥ªÂàó

&amp;nbsp;

&lt;a id=&quot;user-content-ÊñáÊ≥âÈ©øÊ≠£Èªë&quot;  href=&quot;#ÊñáÊ≥âÈ©øÊ≠£Èªë&quot;&gt;&lt;img src=&quot;assets/image/WenQuanYiZhengHei.svg&quot; alt=&quot;ÊñáÊ≥âÈ©øÊ≠£Èªë&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

„ÄåÊñáÊ≥âÈ©øÊ≠£Èªë‰Ωì„ÄçÊòØ‰∏Ä‰∏™&quot;[Ëá™Áî±Â≠ó‰Ωì](http://wenq.org/wqy2/index.cgi?LibreFont)&quot;„ÄÇËØ•Â≠ó‰ΩìÂåÖÂê´‰∫ÜÊâÄÊúâÂ∏∏Áî®ÁÆÄ‰Ωì‰∏≠Êñá„ÄÅÁπÅ‰Ωì‰∏≠ÊñáÊâÄÈúÄË¶ÅÁöÑÊ±âÂ≠ó(ÊúÄÊñ∞ÁâàÊú¨ÂåÖÂê´Ë∂ÖËøá27842‰∏™Ê±âÂ≠óÔºåÂÆåÊï¥Ë¶ÜÁõñGB2312/Big5/GBK‰ª•ÂèäGB18030Ê†áÂáÜÂ≠óÁ¨¶ÈõÜ)„ÄÇËØ•Â≠ó‰ΩìÂêåÊó∂ËøòÂåÖÂê´‰∫ÜÊó•Êñá„ÄÅÈü©ÊñáÂíåÂÖ∂‰ªñÂá†ÂçÅÁßçËØ≠Ë®ÄÁ¨¶Âè∑„ÄÇÈô§Ê≠§‰ª•Â§ñÔºåËØ•Â≠ó‰ΩìËøòÂµåÂÖ•‰∫ÜÊúÄÊñ∞ÁâàÊú¨ÁöÑ[ÊñáÊ≥âÈ©øÁÇπÈòµÂÆã‰Ωì](http://wenq.org/wqy2/index.cgi?BitmapSong)ÁöÑ‰∏≠Ëã±ÊñáÁÇπÈòµÔºå‰ΩøÂæóÂ±èÂπïÊ±âÂ≠óÊòæÁ§∫Ê∏ÖÊô∞ÈîêÂà©ÔºåÊòì‰∫éÈòÖËØª„ÄÇ

‰Ωú‰∏∫Èªë‰Ωì‰∏≠ÊñáÂ≠ó‰ΩìÔºåÊñáÊ≥âÈ©øÊ≠£Èªë‰∏∫ÈùûË°¨Á∫øÂ≠ó‰ΩìÔºåÁ¨îÁîªÂØπÊØîÂ∫¶ÊòéÊòæÔºåÁâπÂà´ÈÄÇÂêàÂ±èÂπïÊ±âÂ≠óÊòæÁ§∫‰ª•ÂèäÊñáÊ°£Ê†áÈ¢òÂ≠ó‰Ωì„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;http://wenq.org/wqy2/index.cgi?ZenHei&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/license-GPL--2.0-orange?style=flat-square&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

&lt;a id=&quot;user-content-ÊñáÊ≥âÈ©øÂæÆÁ±≥Èªë&quot;  href=&quot;#ÊñáÊ≥âÈ©øÂæÆÁ±≥Èªë&quot;&gt;&lt;img src=&quot;assets/image/WenQuanYiWeiMiHei.svg&quot; alt=&quot;ÊñáÊ≥âÈ©øÂæÆÁ±≥Èªë&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

„ÄåÊñáÊ≥âÈ©øÂæÆÁ±≥Èªë„ÄçÊòØ‰∏Ä‰∏™&quot;[Ëá™Áî±Â≠ó‰Ωì](http://wenq.org/wqy2/index.cgi?LibreFont)&quot;„ÄÇËØ•Â≠ó‰ΩìÂåÖÂê´‰∫ÜÊâÄÊúâÂ∏∏Áî®ÁÆÄ‰Ωì‰∏≠Êñá„ÄÅÁπÅ‰Ωì‰∏≠ÊñáÊâÄÈúÄË¶ÅÁöÑÊ±âÂ≠ó(ÊúÄÊñ∞ÁâàÊú¨ÂåÖÂê´Ë∂ÖËøá20932‰∏™Ê±âÂ≠óÔºåÂÆåÊï¥Ë¶ÜÁõñGB2312/Big5‰ª•ÂèäGBKÊ†áÂáÜÂ≠óÁ¨¶ÈõÜ)„ÄÇËØ•Â≠ó‰ΩìÂêåÊó∂ËøòÂåÖÂê´‰∫ÜÊó•Êñá„ÄÅÈü©ÊñáÂíåÂÖ∂‰ªñÂá†ÂçÅÁßçËØ≠Ë®ÄÁ¨¶Âè∑„ÄÇ‰ª•Â§ñÔºåËØ•Â≠ó‰ΩìËøòÂåÖÂê´‰∫ÜÈ´òË¥®ÈáèÁöÑDroid SansÊãâ‰∏ÅÁ¨¶Âè∑ÂíåDroid Sans MonoÁ≠âÂÆΩÂ≠ó‰ΩìÔºåÂπ∂ÂÜÖÁΩÆHintingÂíåKerning‰ø°ÊÅØ„ÄÇÂæÆÁ±≥ÈªëÂ≠ó‰ΩìÊñá‰ª∂ÊûÅÂ∞èÔºåÁâπÂà´‰ΩøÁî®‰∫é‰æøÊê∫ÂºèÁîµËÑëËÆæÂ§á„ÄÇ
ËØ•Â≠ó‰ΩìÁâàÊùÉÂèóÂà∞Ê≥ïÂæã‰øùÊä§ÔºåÂ≠ó‰ΩìÁâàÊùÉ‰∫∫‰∏∫[Google](http://www.google.com/intl/en/contact/)Âíå[ÊñáÊ≥âÈ©ø‰ø°‰ªªÂßîÂëò‰ºö](http://wenq.org/wqy2/index.cgi?CopyrightPolicy)„ÄÇËØ∑ÈÅµÂæ™ÂÆòÊñπÂ≠ó‰ΩìÊéàÊùÉ‰ΩøÁî®Âπ∂Ë°çÁîüÊú¨Â≠ó‰Ωì

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;http://wenq.org/wqy2/index.cgi?MicroHei&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/license-GPL--2.0-orange?style=flat-square&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

## Êòé‰ΩìÁ≥ªÂàó

&amp;nbsp;

Âè∞ÊπæÊúÄÊ¥ªË∑ÉÁöÑÂ≠óÂûãÁ§æÂõ¢„Äå[Â≠óÂó®](https://www.facebook.com/groups/enjoyfonts/)„ÄçÁÆ°ÁêÜÂëò [But Ko](https://www.facebook.com/but.ko.5) ÔºåÈáäÂá∫‰∏âÊ¨æÊîπÈÄ†Ëá™ÊÄùÊ∫êÂÆã‰ΩìÁöÑÁπÅ‰Ωì‰∏≠ÊñáÂ≠ó‰ΩìÔºåÂºÄÊîæÁªôÈúÄË¶ÅÁöÑ‰ΩøÁî®ËÄÖÂÖçË¥π‰∏ãËΩΩÔºÅ‰∏âÊ¨æÂ≠ó‰ΩìÂàÜÂà´‰∏∫ÔºöÊ∫êÊ†∑Êòé‰Ωì„ÄÅÊ∫êÊµÅÊòé‰ΩìÂèäÊ∫ê‰∫ëÊòé‰Ωì„ÄÇ

Ëøô‰∏âÊ¨æÂ≠ó‰ΩìÁöÑÂÖ±ÂêåÁâπËâ≤ÊòØ‰øÆÊîπËá™„ÄåÊÄùÊ∫êÂÆã‰Ωì„ÄçÔºåÊ∫êÊ†∑Êòé‰ΩìÈááÁî®ÊÄùÊ∫êÂÆã‰ΩìÈü©ÊñáÁâàÊú¨ÁöÑÂ≠óÁ¨¶ÔºåÈÖçÂêàÁπÅ‰Ωì‰∏≠Êñá‰π†ÊÉØÁöÑÁΩÆ‰∏≠Ê†áÁÇπÁ¨¶Âè∑ÔºåÂèØËØ¥ÊòØÂÖºÂÖ∑ÊéíÁâàÂèä‰º†ÁªüÂç∞Âà∑‰ΩìÈ£éÊ†ºÁöÑÁπÅ‰Ωì‰∏≠ÊñáÂ≠ó‰ΩìÔºõÊ∫êÊµÅÊòé‰ΩìÂú®Á¨îÁîª‰∏äÊúâÊâÄË∞ÉÊï¥Ôºå‰ΩøÂ≠óÂûãÁúãËµ∑Êù•Êõ¥ÊúâÂäõÈÅìÔºõËá≥‰∫éÊ∫ê‰∫ëÊòé‰ΩìÂú®Ê®™Á¨îÁöÑËµ∑Á¨îÂèäÁ´ñÁ¨îÁöÑËµ∑Á¨î„ÄÅÊî∂Á¨îÂ§ÑÂä†ÂÖ•Á≤óÁªÜÂèòÂåñÔºåÁ¨îÁîª‰∫§ÂèâÂ§ÑÊúâÊú¶ËÉßÂ§ÑÁêÜ„ÄÇ

ÂíåÊÄùÊ∫êÂÆã‰Ωì‰∏ÄÊ†∑ÔºåÊ∫êÊ†∑Êòé‰Ωì„ÄÅÊ∫êÊµÅÊòé‰ΩìÈÉΩÊúâ‰∏ÉÁßçÂ≠óÈáçÔºåÊ∫ê‰∫ëÊòé‰ΩìÂàôÊòØ Light„ÄÅRegular„ÄÅMedium Âíå SemiBold ÂõõÁßçÔºåËÉΩÂπøÊ≥õ‰ΩøÁî®‰∫éÂêÑÁßçÁéØÂ¢É„ÄÇ

&amp;nbsp;

&lt;a id=&quot;user-content-Ê∫ê‰∫ëÊòé‰Ωì&quot;  href=&quot;#Ê∫ê‰∫ëÊòé‰Ωì&quot;&gt;&lt;img src=&quot;assets/image/YuanYunMingTi.svg&quot; alt=&quot;Ê∫ê‰∫ëÊòé‰Ωì&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

„ÄåÊ∫ê‰∫ëÊòé‰Ωì„ÄçÊòØÂü∫‰∫é[ÊÄùÊ∫êÂÆã‰Ωì](https://github.com/adobe-fonts/source-han-serif/)ÁöÑËÄåÊîπÈÄ†ÁöÑÂºÄÊîæÂéüÂßãÁ†Å‰∏≠ÊñáÂ≠óÂûã„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/ButTaiwan/genwan-font&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/license-OFL--1.1-orange?style=flat-square&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

&lt;a id=&quot;user-content-Ê∫êÊµÅÊòé‰Ωì&quot;  href=&quot;#Ê∫êÊµÅÊòé‰Ωì&quot;&gt;&lt;img src=&quot;assets/image/YuanLiuMingTi.svg&quot; alt=&quot;Ê∫êÊµÅÊòé‰Ωì&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

„ÄåÊ∫êÊµÅÊòé‰Ωì„ÄçÊòØÂü∫‰∫é[ÊÄùÊ∫êÂÆã‰Ωì](https://github.com/adobe-fonts/source-han-serif/)ÁöÑËÄåÊîπÈÄ†ÁöÑÂºÄÊîæÂéüÂßãÁ†Å‰∏≠ÊñáÂ≠óÂûã„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/ButTaiwan/genryu-font&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/license-OFL--1.1-orange?style=flat-square&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

&lt;a id=&quot;user-content-Ê∫êÊ†∑Êòé‰Ωì&quot;  href=&quot;#Ê∫êÊ†∑Êòé‰Ωì&quot;&gt;&lt;img src=&quot;assets/image/YuanYangMingTi.svg&quot; alt=&quot;Ê∫êÊ†∑Êòé‰Ωì&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

„ÄåÊ∫êÊ†∑Êòé‰Ωì„ÄçÊòØÂü∫‰∫é[ÊÄùÊ∫êÂÆã‰Ωì](https://github.com/adobe-fonts/source-han-serif)ÁöÑÂºÄÊîæÂéüÂßãÁ†Å‰∏≠ÊñáÂ≠óÂûã„ÄÇ Êé°Áî®ÊÄùÊ∫êÂÆã‰ΩìÈü©ÊñáÔºàKRÔºâÁâàÊú¨ÁöÑÂ≠óÁ¨¶ÔºåÈÖçÂêàÁπÅ‰Ωì‰∏≠ÊñáÊÉØÁî®ÁöÑÁΩÆ‰∏≠Ê†áÁÇπÔºåÂèØÊéíÁâà‰º†ÁªüÂç∞Âà∑‰ΩìÈ£éÊ†ºÁöÑÊñá‰ª∂„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/ButTaiwan/genyo-font&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/license-OFL--1.1-orange?style=flat-square&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

## ÂàªÁü≥ÂΩïÁ≥ªÂàó

&amp;nbsp;

&lt;a id=&quot;user-content-‰∏ÄÁÇπÊòé‰Ωì&quot;  href=&quot;#‰∏ÄÁÇπÊòé‰Ωì&quot;&gt;&lt;img src=&quot;assets/image/YiDianMingTi.svg&quot; alt=&quot;‰∏ÄÁÇπÊòé‰Ωì&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

„Äå‰∏ÄÁÇπÊòé‰Ωì„ÄçÊòØ‰∏ÄÂ•ó‰æùÁÖß‰º†ÊâøÂ≠óÂΩ¢Ê†áÂáÜÂåñÊñá‰ª∂„Ää‰º†ÊâøÂ≠óÂΩ¢ÈÉ®‰ª∂Ê£ÄÊ†°Ë°®„ÄãÁöÑÊé®ËçêÂ≠óÂΩ¢Ê†áÂáÜÔºåÂπ∂‰ª• `TrueType`Ê†ºÂºèÂ∞ÅË£Ö„ÄÅ‰æùÁÖß `Unicode` ÁºñÁ†ÅÁöÑ `OpenType`Â≠óÂûã„ÄÇ`I.Êòé‰Ωì` ÂêçÁß∞ÈáåÁöÑ `I` ÊòØÁΩóÈ©¨Êï∞Â≠ó `‰∏Ä`Ôºå`I.`  Âøµ‰Ωú `‰∏ÄÁÇπ`ÔºåË±°ÂæµÁ¨îÁîªÁöÑÂü∫Êú¨ÔºöÁÇπ‰∏éÁ∫ø„ÄÇÁõÆÂâç`I.Êòé‰Ωì`Â∑≤Áî±ÂºÄÊ∫êÂ≠óÂûãÁªÑÁªá[‰∏ÄÁÇπÂ≠óÂùä](https://github.com/ichitenfont/I.Ming) ÂÖ®ÂäõÁª¥Êä§„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;http://founder.acgvlyric.org/iu/doku.php/ÈÄ†Â≠ó:ÈñãÊ∫êÂ≠óÂûã_i.ÊòéÈ´î&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/license-IPA--1.0-orange?style=flat-square&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

&lt;a id=&quot;user-content-‰∏ÄÁÇπÈí¢Á¨îÈπ§‰Ωì&quot;  href=&quot;#‰∏ÄÁÇπÈí¢Á¨îÈπ§‰Ωì&quot;&gt;&lt;img src=&quot;assets/image/YiDianGangBiHeTi.svg&quot; alt=&quot;‰∏ÄÁÇπÈí¢Á¨îÈπ§‰Ωì&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

„Äå‰∏ÄÁÇπÈí¢Á¨îÈπ§‰Ωì„ÄçÁî±ÁéãÊ±âÂÆóÁ≤óÈí¢‰Ωì‰øÆÊîπËÄåÊù•ÔºåÂàªÁü≥ÈåÑÈáçÊñ∞Âà∂‰ΩúÂíå‰øÆÊï¥ÂéüÂ≠óÂûã‰∏≠Áº∫Â∞ëÁöÑÊàñÊúâÊ¨†ÁæéËßÇÁöÑÈÉ®‰ªΩÔºå‰æãÂ¶ÇÂçäÂΩ¢Ëã±Êï∞„ÄÅÂúàÂúàÂ≠ó„ÄÅÂ∏∏Áî®Á¨¶Âè∑Á≠â„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;http://founder.acgvlyric.org/iu/doku.php/ÈÄ†Â≠ó:ÈñãÊ∫êÂ≠óÂûã_i.ÈãºÁ≠ÜÈ∂¥È´î&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/license-GPL--2.0-orange?style=flat-square&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

&lt;a id=&quot;user-content-‰∏ÄÁÇπÈ¢ú‰Ωì&quot;  href=&quot;#‰∏ÄÁÇπÈ¢ú‰Ωì&quot;&gt;&lt;img src=&quot;assets/image/YiDianYanTi.svg&quot; alt=&quot;‰∏ÄÁÇπÈ¢ú‰Ωì&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

„Äå‰∏ÄÁÇπÈ¢ú‰Ωì„ÄçÊòØÁî±ÁéãÊ±âÂÆóÈ¢ú‰Ωì‰øÆÊîπËÄåÊù•ÔºåÈáçÊñ∞Âà∂‰ΩúÂíå‰øÆÊï¥ÂéüÂ≠óÂûã‰∏≠Áº∫Â∞ëÁöÑÊàñÊúâÊ¨†ÁæéËßÇÁöÑÈÉ®‰ªΩÔºå‰æãÂ¶ÇÂÖ®ÂçäÂΩ¢Ëã±Êï∞„ÄÅÂπ≥ÂÅáÂêç„ÄÅÁâáÂÅáÂêç„ÄÅÊãâ‰∏ÅÂ≠óÊØç„ÄÅ‰øÑÊñáÂ≠óÊØç„ÄÅÈòøÊãâ‰ºØÊï∞Â≠ó„ÄÅÂúàÂúàÂ≠ó„ÄÅÂ∏∏Áî®Á¨¶Âè∑Á≠â„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;http://founder.acgvlyric.org/iu/doku.php/ÈÄ†Â≠ó:ÈñãÊ∫êÂ≠óÂûã_i.È°èÈ´î&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src = &quot;https://img.shields.io/badge/license-GPL--2.0-orange?style=flat-square&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&amp;nbsp;

## ÁéãÊ±âÂÆóÁ≥ªÂàó

&amp;nbsp;

&lt;a id=&quot;user-content-ÁéãÊ±âÂÆóÁ≥ªÂàó&quot;  href=&quot;#ÁéãÊ±âÂÆóÁ≥ªÂàó&quot;&gt;&lt;img src=&quot;assets/image/WangHanZhongChaoHeiQiaoPiDongWuYi.svg&quot; alt=&quot;ÁéãÊ±âÂÆóÁ≥ªÂàó&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;

![](assets/image/WangHanZhongChaoMingTiFan.svg)

![](assets/image/WangHanZhongCuKaiTiJian.svg)

![](assets/image/WangHanZhongCuMingTiFan.svg)

![](assets/image/WangHanZhongGangBiXingKaiFan.svg)

![](assets/image/WangHanZhongKanTingLiuFan.svg)

![](assets/image/WangHanZhongKongDieYuanFan.svg)

![](assets/image/WangHanZhongKuLiHaiBao.svg)

![](assets/image/WangHanZhongKuZhengHaiBao.svg)

![](assets/image/WangHanZhongTeHeiTiFan.svg)

![](assets/image/WangHanZhongTeMingTiFan.svg)

![](assets/image/WangHanZhongTeYuanTiFan.svg)

![](assets/image/WangHanZhongXiHeiTiFan.svg)

![](assets/image/WangHanZhongXiMingTiFan.svg)

![](assets/image/WangHanZhongXiXinSongJian.svg)

![](assets/image/WangHanZhongXiYuanTiFan.svg)

![](assets/image/WangHanZhongYanKaiTiFan.svg)

![](assets/image/WangHanZhongFangSongFan.svg)

![](assets/image/WangHanZhongFangSongJian.svg)

![](assets/image/WangHanZhongLiShuFan.svg)

![](assets/image/WangHanZhongMingTiFan.svg)

![](assets/image/WangHanZhongWeiBeiJian.svg)

![](assets/image/WangHanZhongXingShuFan.svg)

![](assets/image/WangHanZhongZhongYiTiFan.svg)

![](assets/image/WangHanZhongMingTiPoYinYi.svg)

![](assets/image/WangHanZhongMingTiPoYinEr.svg)

![](assets/image/WangHanZhongMingTiPoYinSan.svg)

![](assets/image/WangHanZhongKaiTiPoYinYi.svg)

![](assets/image/WangHanZhongKaiTiPoYinEr.svg)

![](assets/image/WangHanZhongKaiTiPoYinSan.svg)

![](assets/image/WangHanZhongMingTiZhuYin.svg)

![](assets/image/WangHanZhongKaiTiZhuYin.svg)


&lt;div align=&quot;center&quot;&gt;
&lt;strong&gt;ÁÆÄ‰ªã&lt;/strong&gt;
&lt;/div&gt;

ÁéãÊ±âÂÆóËá™Áî±Â≠óÂûãÁî±Á†îÂèëÂ§©ËöïÂ≠óÂ∫ìÁöÑÂè∞Êπæ‰∏≠ÂéüÂ§ßÂ≠¶Êï∞Â≠¶Á≥ªÁéãÊ±âÂÆóÊïôÊéàÂÖàÂàÜÂà´Âú®2000Âπ¥Âíå2004Âπ¥ÂÖàÂêéÊçêÂá∫ÂçÅÂ•óWCLÁ≥ªÂàóÂ≠óÂûãÂíå32Â•óÊñ∞Â≠óÂûãÔºåÂÖ®ÈÉ®‰ª•GNU GPLËÆ∏ÂèØÂàÜÂèë„ÄÇ

&lt;div align=&quot;center&quot;&gt;
&lt;strong&gt;‰∫âËÆÆ&lt;/strong&gt;
&lt;/div&gt;
2005Âπ¥ÔºåÂè∞ÊπæËëóÂêçÂ≠óÂûãÂéÇÂïÜÊñáÈºéÁßëÊäÄËÆ§‰∏∫ÁéãÊ±âÂÆóÂ≠óÂûã‰∏éÊñáÈºéÁöÑÂ≠ó‰ΩìÊûÅÂ∫¶Áõ∏‰ººÔºå‰∏Ä‰∫õËá™Áî±ËΩØ‰ª∂ÁΩëÁ´ôÂÜ≥ÂÆöÂú®ÈóÆÈ¢òÊòé‰∫ÜÂâçÂÖàÁßªÈô§Â≠ó‰Ωì‰∏ãËΩΩ‰ª•ÈÅøÂÖçÊ≥ïÂæãÈóÆÈ¢ò„ÄÇ

ÁÑ∂ËÄå‰∫ëÁ´ØÂ≠ó‰ΩìÊúçÂä°ÂÖ¨Âè∏ justfont Âàô‰∏çËÆ§‰∏∫Â≠òÂú®ÊéàÊùÉÈóÆÈ¢òÔºåÂú®Êèê‰æõÂ≠ó‰ΩìÂàóË°®‰∏≠ÂèØËßÅÂà∞ 17 ‰∏™ÁéãÊ±âÂÆóËá™Áî±Â≠óÂûã„ÄÇÊñáÈºéÂÖ¨Âè∏ËßâÂæóÁéãÊ±âÂÆóÊúâËÆ∏Â§öÂ•óÂ≠ó‰ΩìÊòØ copy Ëá™ÊñáÈºéÂ≠ó‰Ωì„ÄÇ‰ΩÜÊòØÂ¶ÇÊûúËØ¥ÊòØÂÆåÂÖ®ÊäÑË¢≠Ôºå‰πü‰ºöÊúâ‰∫âËÆÆÔºåÂõ†‰∏∫ËôΩÁÑ∂È™®Êû∂Áõ∏ÂêåÔºå‰ΩÜÊèèÁªòÁÇπÂπ∂‰∏ç‰∏ÄÊ†∑ÔºåÊ≥ïÂæã‰∏äÈ°∂Â§öÂè™ËÉΩÁÆóÊòØ„ÄåÁñë‰ºº„ÄçÊäÑË¢≠„ÄÇ

Âè¶Â§ñÂ∞±„ÄåÈö∂‰π¶„Äç„ÄÅ„Äå‰ªøÂÆã„Äç„ÄÅÁ≠âÂ≠ó‰ΩìÊù•ËØ¥ÔºåÊñáÈºéÂÖ¨Âè∏‰πüÂπ∂ÈùûÁã¨ÂàõÔºåÊúâËÆ∏Â§öÂ≠ó‰ΩìÂÖ¨Âè∏ÁöÑÂêåÂêçÂ≠óÂûãÂá†‰πéÈïøÂæóÂÖ∂ÂÆû‰∏ÄÊ®°‰∏ÄÊ†∑„ÄÇËøô‰πà‰∏ÄÊù•ÂÖ∂ÂÆûÂæàÈöæËØ¥Ë∞ÅÊäÑË∞Å„ÄÇ

|            |              |              |          |                  |
| :--------: | :----------: | :----------: | :------: | :--------------: |
|  Â≠ó‰ΩìÊñá‰ª∂  |  Â≠ó‰Ωì‰∏≠ÊñáÂêç  |  Â≠ó‰ΩìËã±ÊñáÂêç  | ÂêçÁß∞Áº©ÂÜô | ÊñáÈºéÁßëÊäÄ‰∏ªÂº†‰æµÊùÉ |
| WCL-01.ttf |    Ê≥¢Êµ™‰Ωì    | HanWangWCL01 |  wcl01   |                  |
| WCL-02.ttf |    ÁâπÊòé‰Ωì    | HanWangWCL02 |  wcl02   |        ÊòØ        |
| WCL-03.ttf |  Ê≥¢Âç°‰ΩìÁ©∫Èò¥  | HanWangWCL03 |  wcl03   |                  |
| WCL-04.ttf | ÁªºËâ∫‰ΩìÂèåÁ©∫Èò¥ | HanWangWCL04 |  wcl04   |        ÊòØ        |
| WCL-05.ttf |  Ê†áÊ•∑‰ΩìÁ©∫ÂøÉ  | HanWangWCL05 |  wcl05   |                  |
| WCL-06.ttf |    ‰ªøÂÆã‰Ωì    | HanWangWCL06 |  wcl06   |                  |
| WCL-07.ttf |    Á≤óÈí¢‰Ωì    | HanWangWCL07 |  wcl07   |                  |
| WCL-08.ttf |  Á≤óÈªë‰ΩìÂÆûÈò¥  | HanWangWCL08 |  wcl08   |                  |
| WCL-09.ttf |  Á≤óÂúÜ‰ΩìÂèåÁ©∫  | HanWangWCL09 |  wcl09   |                  |
| WCL-10.ttf | Êµ∑Êä•‰ΩìÂçäÂ§©Ê∞¥ | HanWangWCL10 |  wcl10   |                  |
| wt001.ttf      | ÁªÜÊòé         | HanWangMingLight        | hwml    |      |
| wt002.ttf 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>