<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Wed, 30 Jul 2025 00:05:15 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[SillyTavern/SillyTavern]]></title>
            <link>https://github.com/SillyTavern/SillyTavern</link>
            <guid>https://github.com/SillyTavern/SillyTavern</guid>
            <pubDate>Wed, 30 Jul 2025 00:05:15 GMT</pubDate>
            <description><![CDATA[LLM Frontend for Power Users.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/SillyTavern/SillyTavern">SillyTavern/SillyTavern</a></h1>
            <p>LLM Frontend for Power Users.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 16,786</p>
            <p>Forks: 3,708</p>
            <p>Stars today: 238 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[zumerlab/snapdom]]></title>
            <link>https://github.com/zumerlab/snapdom</link>
            <guid>https://github.com/zumerlab/snapdom</guid>
            <pubDate>Wed, 30 Jul 2025 00:05:14 GMT</pubDate>
            <description><![CDATA[snapDOM captures HTML elements to images with exceptional speed and accuracy.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/zumerlab/snapdom">zumerlab/snapdom</a></h1>
            <p>snapDOM captures HTML elements to images with exceptional speed and accuracy.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 3,838</p>
            <p>Forks: 121</p>
            <p>Stars today: 122 stars today</p>
            <h2>README</h2><pre># snapDOM

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;http://zumerlab.github.io/snapdom&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/zumerlab/snapdom/main/docs/assets/hero.png&quot; width=&quot;80%&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
 &lt;a href=&quot;https://www.npmjs.com/package/@zumer/snapdom&quot;&gt;
    &lt;img alt=&quot;NPM version&quot; src=&quot;https://img.shields.io/npm/v/@zumer/snapdom?style=flat-square&amp;label=Version&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/zumerlab/snapdom/graphs/contributors&quot;&gt;
    &lt;img alt=&quot;GitHub contributors&quot; src=&quot;https://img.shields.io/github/contributors/zumerlab/snapdom?style=flat-square&amp;label=Contributors&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/zumerlab/snapdom/stargazers&quot;&gt;
    &lt;img alt=&quot;GitHub stars&quot; src=&quot;https://img.shields.io/github/stars/zumerlab/snapdom?style=flat-square&amp;label=Stars&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/zumerlab/snapdom/network/members&quot;&gt;
    &lt;img alt=&quot;GitHub forks&quot; src=&quot;https://img.shields.io/github/forks/zumerlab/snapdom?style=flat-square&amp;label=Forks&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/sponsors/tinchox5&quot;&gt;
    &lt;img alt=&quot;Sponsor tinchox5&quot; src=&quot;https://img.shields.io/github/sponsors/tinchox5?style=flat-square&amp;label=Sponsor&quot;&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/zumerlab/snapdom/blob/main/LICENSE&quot;&gt;
    &lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/github/license/zumerlab/snapdom?style=flat-square&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

**snapDOM** is a fast and accurate DOM-to-image capture tool built for **Zumly**, a zoom-based view transition framework.

It captures any HTML element as a scalable SVG image, preserving styles, fonts, background images, pseudo-elements, and even shadow DOM. It also supports export to raster image formats and canvas.

* üì∏ Full DOM capture
* üé® Embedded styles, pseudo-elements, and fonts
* üñºÔ∏è Export to SVG, PNG, JPG, WebP, or `canvas`
* ‚ö° Ultra fast, no dependencies
* üì¶ 100% based on standard Web APIs

## Demo

[https://zumerlab.github.io/snapdom/](https://zumerlab.github.io/snapdom/)

## Installation

### NPM / Yarn

```sh
npm i @zumer/snapdom
```

```sh
yarn add @zumer/snapdom
```

### CDN

```html
&lt;script src=&quot;https://cdn.jsdelivr.net/npm/@zumer/snapdom/dist/snapdom.min.js&quot;&gt;&lt;/script&gt;
```

### Script tag (local)

```html
&lt;script src=&quot;snapdom.js&quot;&gt;&lt;/script&gt;
```

### ES Module

```js
import { snapdom } from &#039;./snapdom.mjs&#039;;
```

### Module via CDN

```html
&lt;script type=&quot;module&quot;&gt;
  import { snapdom } from &#039;https://cdn.jsdelivr.net/npm/@zumer/snapdom/dist/snapdom.mjs&#039;;
&lt;/script&gt;
```

## Basic usage

### Reusable capture

```js
const el = document.querySelector(&#039;#target&#039;);
const result = await snapdom(el, { scale: 2 });

const img = await result.toPng();
document.body.appendChild(img);

await result.download({ format: &#039;jpg&#039;, filename: &#039;my-capture&#039; });
```

### One-step shortcuts

```js
const el = document.querySelector(&#039;#target&#039;);
const png = await snapdom.toPng(el);
document.body.appendChild(png);

const blob = await snapdom.toBlob(el);
```

## API

### `snapdom(el, options?)`

Returns an object with reusable export methods:

```js
{
  url: string;
  toRaw(): string;
  toImg(): Promise&lt;HTMLImageElement&gt;;
  toCanvas(): Promise&lt;HTMLCanvasElement&gt;;
  toBlob(options?): Promise&lt;Blob&gt;;
  toPng(options?): Promise&lt;HTMLImageElement&gt;;
  toJpg(options?): Promise&lt;HTMLImageElement&gt;;
  toWebp(options?): Promise&lt;HTMLImageElement&gt;;
  download(options?): Promise&lt;void&gt;;
}
```

### Shortcut methods

| Method                         | Description                           |
| ------------------------------ | ------------------------------------- |
| `snapdom.toImg(el, options?)`  | Returns an `HTMLImageElement`         |
| `snapdom.toCanvas(el, options?)     ` | Returns a `Canvas`                    |
| `snapdom.toBlob(el, options?)` | Returns an SVG `Blob`                 |
| `snapdom.toPng(el, options?)`  | Returns a PNG image                   |
| `snapdom.toJpg(el, options?)`  | Returns a JPG image                   |
| `snapdom.toWebp(el, options?)` | Returns a WebP image                  |
| `snapdom.download(el, options?)     ` | Triggers download in specified format |

## Options

All capture methods accept an `options` object:

| Option            | Type     | Default  | Description                                |
| ----------------- | -------- | -------- | ------------------------------------------ |
| `compress`        | boolean  | `true`   | Removes redundant styles                   |
| `fast`            | boolean  | `true`   | Skips idle delay for faster results        |
| `embedFonts`      | boolean  | `false`  | Inlines fonts (icon fonts always embedded) |
| `scale`           | number   | `1`      | Output scale multiplier                    |
| `dpr`             | number   | `devicePixelRatio` | Device pixel ratio                 |
| `width`           | number   | -        | Output specific width size                 |
| `height`          | number   | -        | Output specific height size                |
| `backgroundColor` | string   | `&quot;#fff&quot;` | Fallback color for JPG/WebP                |
| `quality`         | number   | `1`      | Quality for JPG/WebP (0 to 1)              |
| `useProxy`     | string | &#039;&#039;        | Specify a proxy for handling CORS images as fallback|
| `type`     | string | `svg`        | Select `png`, `jpg`, `webp` Blob type|
| `exclude` | string[] | -  | CSS selectors for elements to exclude |
| `filter` | function | -  | Custom filter function ie `(el) =&gt; !el.classList.contains(&#039;hidden&#039;)` |

### Setting custom dimensions with width and height options

Use the `width` and `height` options to generate an image with specific dimensions.

**Examples:**

**1. Fixed width (proportional height)**
Sets a specific width while maintaining the aspect ratio. Height adjusts proportionally.

```js
const result = await snapdom(element, {
  width: 400 // Outputs a 400px-wide image with auto-scaled height
});
```

**2. Fixed height (proportional width)**
Sets a specific height while maintaining the aspect ratio. Width adjusts proportionally.

```js
const result = await snapdom(element, {
  height: 200 // Outputs a 200px-tall image with auto-scaled width
});
```

**3. Fixed width and height (may distort image)**
Forces exact dimensions, potentially distorting the image if the aspect ratio differs.

```js
const result = await snapdom(element, {
  width: 800,  // Outputs an 800px √ó 200px image (may stretch/squish content)
  height: 200
});
```

**Note:** If `scale` is different from  1, it takes priority over width and height.
Example: `{ scale: 3, width: 500 }` ignores width and scales the image 3x instead.


### Cross-Origin Images

By default, snapDOM loads images with `crossOrigin=&quot;anonymous&quot;` or `crossOrigin=&quot;use-credentials&quot;`. In case fails to get the images, `useProxy` can be used to deal with CORS images:

```js
const result = await snapdom(element, {
  useProxy: &#039;your/proxy/&#039; //Example: &#039;https://corsproxy.io/?url=&#039; or &#039;https://api.allorigins.win/raw?url=&#039;
});
```


### Download options

```js
{
  format?: &quot;svg&quot; | &quot;png&quot; | &quot;jpg&quot; | &quot;jpeg&quot; | &quot;webp&quot;; // default: &quot;png&quot;
  filename?: string;         // default: &quot;capture&quot;
  backgroundColor?: string;  // optional override
}
```


### `preCache()` ‚Äì Optional helper

The `preCache()` function can be used to load external resources (like images and fonts) in advance. It is specially useful when the element to capture is big and complex.

```js
import { preCache } from &#039;@zumer/snapdom&#039;;

await preCache(document.body);
```

```js
import { snapdom, preCache } from &#039;./snapdom.mjs&#039;;
    window.addEventListener(&#039;load&#039;, async () =&gt; {
    await preCache();
    console.log(&#039;üì¶ Resources preloaded&#039;);
    });
```

**Options for `preCache()`:**

* `embedFonts` *(boolean, default: true)* ‚Äî Inlines non-icon fonts during preload.
* `useProxy` *(string)* ‚Äî Proxy for handling CORS images as fallback.


## Features

* Captures **shadow DOM** and Web Components
* Supports `::before`, `::after` and `::first-letter` pseudo-elements
* Inlines background images and fonts
* Handles **Font Awesome**, **Material Icons**, and more
* `data-capture=&quot;exclude&quot;` to ignore an element
* `data-capture=&quot;placeholder&quot;` with `data-placeholder-text` for masked replacements

## Limitations

* External images should be CORS-accessible (use `useProxy` option for handling CORS denied)
* Iframes are not supported
* When WebP format is used on Safari, it will fallback to PNG rendering.
* `@font-face` CSS rule is well supported, but if need to use JS `FontFace()`, see this workaround [`#43`](https://github.com/zumerlab/snapdom/issues/43)


## ‚ö° Performance Benchmarks

Snapdom has received **significant performance improvements** since version `v1.8.0`. The following benchmarks compare:

* **Snapdom (current)**
* **Snapdom v1.8.0**
* `html2canvas`
* `html-to-image`


### Simple elements

| Scenario                 | Snapdom (current) | Snapdom v1.8.0 | html2canvas | html-to-image |
| ------------------------ | ----------------- | -------------- | ----------- | ------------- |
| Small (200√ó100)          | **0.4 ms**        | 1.2 ms         | 70.3 ms     | 3.6 ms        |
| Modal (400√ó300)          | **0.4 ms**        | 1.1 ms         | 68.8 ms     | 3.6 ms        |
| Page View (1200√ó800)     | **0.4 ms**        | 1.0 ms         | 100.5 ms    | 3.4 ms        |
| Large Scroll (2000√ó1500) | **0.4 ms**        | 1.0 ms         | 153.1 ms    | 3.4 ms        |
| Very Large (4000√ó2000)   | **0.4 ms**        | 1.0 ms         | 278.9 ms    | 4.3 ms        |



### Complex elements

| Scenario                 | Snapdom (current) | Snapdom v1.8.0 | html2canvas | html-to-image |
| ------------------------ | ----------------- | -------------- | ----------- | ------------- |
| Small (200√ó100)          | **1.1 ms**        | 3.2 ms         | 76.0 ms     | 15.3 ms       |
| Modal (400√ó300)          | **4.5 ms**        | 14.0 ms        | 133.2 ms    | 55.4 ms       |
| Page View (1200√ó800)     | **32.9 ms**       | 113.6 ms       | 303.4 ms    | 369.1 ms      |
| Large Scroll (2000√ó1500) | **133.9 ms**      | 387.4 ms       | 594.4 ms    | 1,163.0 ms    |
| Very Large (4000√ó2000)   | **364.0 ms**      | 1,200.4 ms     | 1,380.8 ms  | 3,023.9 ms    |



### Summary

* Snapdom (current) is **2√ó‚Äì6√ó faster** than `v1.8.0`
* Up to **150√ó faster** than `html2canvas`
* Up to **8√ó faster** than `html-to-image` in large scenarios

&lt;sub&gt;Benchmarks run in Chromium using Vitest.&lt;br&gt;
Hardware: MacBook Air 2018.&lt;br&gt;
‚ö†Ô∏è Performance may vary depending on device.&lt;/sub&gt;



### Run the benchmarks

```sh
git clone https://github.com/zumerlab/snapdom.git
cd snapdom
npm install
npm run test:benchmark
```

## Development

To contribute or build snapDOM locally:

```sh
# Clone the repository
git clone https://github.com/zumerlab/snapdom.git
cd snapdom

# Switch to dev branch
git checkout dev

# Install dependencies
npm install

# Compile the library (ESM, CJS, and minified versions)
npm run compile

# Install playwright browsers (necessary for running tests)
npx playwright install

# Run tests
npm test

# Run Benchmarks
npm run test:benchmark
```

The main entry point is in `src/`, and output bundles are generated in the `dist/` folder.

For detailed contribution guidelines, please see [CONTRIBUTING](https://github.com/zumerlab/snapdom/blob/main/CONTRIBUTING.md).


## Contributors üôå

&lt;!-- CONTRIBUTORS:START --&gt;
&lt;p&gt;
&lt;a href=&quot;https://github.com/tinchox5&quot; title=&quot;tinchox5&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11557901?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;tinchox5&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/tarwin&quot; title=&quot;tarwin&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/646149?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;tarwin&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/17biubiu&quot; title=&quot;17biubiu&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13295895?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;17biubiu&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/av01d&quot; title=&quot;av01d&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6247646?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;av01d&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/pedrocateexte&quot; title=&quot;pedrocateexte&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/207524750?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;pedrocateexte&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/domialex&quot; title=&quot;domialex&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4694217?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;domialex&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/elliots&quot; title=&quot;elliots&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/622455?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;elliots&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/jswhisperer&quot; title=&quot;jswhisperer&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1177690?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;jswhisperer&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/sharuzzaman&quot; title=&quot;sharuzzaman&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7421941?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;sharuzzaman&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/simon1uo&quot; title=&quot;simon1uo&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/60037549?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;simon1uo&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/titoBouzout&quot; title=&quot;titoBouzout&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/64156?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;titoBouzout&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/jhbae200&quot; title=&quot;jhbae200&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/20170610?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;jhbae200&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/miusuncle&quot; title=&quot;miusuncle&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7549857?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;miusuncle&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/rbbydotdev&quot; title=&quot;rbbydotdev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/101137670?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;rbbydotdev&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/kohaiy&quot; title=&quot;kohaiy&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/15622127?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;kohaiy&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;!-- CONTRIBUTORS:END --&gt;

## üíñ Sponsors

Special thanks to [@megaphonecolin](https://github.com/megaphonecolin) for supporting this project!

If you&#039;d like to support this project too, you can [become a sponsor](https://github.com/sponsors/tinchox5).

## License

MIT ¬© Zumerlab
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[airbnb/javascript]]></title>
            <link>https://github.com/airbnb/javascript</link>
            <guid>https://github.com/airbnb/javascript</guid>
            <pubDate>Wed, 30 Jul 2025 00:05:13 GMT</pubDate>
            <description><![CDATA[JavaScript Style Guide]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/airbnb/javascript">airbnb/javascript</a></h1>
            <p>JavaScript Style Guide</p>
            <p>Language: JavaScript</p>
            <p>Stars: 147,173</p>
            <p>Forks: 26,772</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre># Airbnb JavaScript Style Guide() {

*A mostly reasonable approach to JavaScript*

&gt; **Note**: this guide assumes you are using [Babel](https://babeljs.io), and requires that you use [babel-preset-airbnb](https://npmjs.com/babel-preset-airbnb) or the equivalent. It also assumes you are installing shims/polyfills in your app, with [airbnb-browser-shims](https://npmjs.com/airbnb-browser-shims) or the equivalent.

[![Downloads](https://img.shields.io/npm/dm/eslint-config-airbnb.svg)](https://www.npmjs.com/package/eslint-config-airbnb)
[![Downloads](https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg)](https://www.npmjs.com/package/eslint-config-airbnb-base)
[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/airbnb/javascript?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge)

This guide is available in other languages too. See [Translation](#translation)

Other Style Guides

  - [ES5 (Deprecated)](https://github.com/airbnb/javascript/tree/es5-deprecated/es5)
  - [React](react/)
  - [CSS-in-JavaScript](css-in-javascript/)
  - [CSS &amp; Sass](https://github.com/airbnb/css)
  - [Ruby](https://github.com/airbnb/ruby)

## Table of Contents

  1. [Types](#types)
  1. [References](#references)
  1. [Objects](#objects)
  1. [Arrays](#arrays)
  1. [Destructuring](#destructuring)
  1. [Strings](#strings)
  1. [Functions](#functions)
  1. [Arrow Functions](#arrow-functions)
  1. [Classes &amp; Constructors](#classes--constructors)
  1. [Modules](#modules)
  1. [Iterators and Generators](#iterators-and-generators)
  1. [Properties](#properties)
  1. [Variables](#variables)
  1. [Hoisting](#hoisting)
  1. [Comparison Operators &amp; Equality](#comparison-operators--equality)
  1. [Blocks](#blocks)
  1. [Control Statements](#control-statements)
  1. [Comments](#comments)
  1. [Whitespace](#whitespace)
  1. [Commas](#commas)
  1. [Semicolons](#semicolons)
  1. [Type Casting &amp; Coercion](#type-casting--coercion)
  1. [Naming Conventions](#naming-conventions)
  1. [Accessors](#accessors)
  1. [Events](#events)
  1. [jQuery](#jquery)
  1. [ECMAScript 5 Compatibility](#ecmascript-5-compatibility)
  1. [ECMAScript 6+ (ES 2015+) Styles](#ecmascript-6-es-2015-styles)
  1. [Standard Library](#standard-library)
  1. [Testing](#testing)
  1. [Performance](#performance)
  1. [Resources](#resources)
  1. [In the Wild](#in-the-wild)
  1. [Translation](#translation)
  1. [The JavaScript Style Guide Guide](#the-javascript-style-guide-guide)
  1. [Chat With Us About JavaScript](#chat-with-us-about-javascript)
  1. [Contributors](#contributors)
  1. [License](#license)
  1. [Amendments](#amendments)

## Types

  &lt;a name=&quot;types--primitives&quot;&gt;&lt;/a&gt;&lt;a name=&quot;1.1&quot;&gt;&lt;/a&gt;
  - [1.1](#types--primitives) **Primitives**: When you access a primitive type you work directly on its value.

    - `string`
    - `number`
    - `boolean`
    - `null`
    - `undefined`
    - `symbol`
    - `bigint`

    &lt;br /&gt;

    ```javascript
    const foo = 1;
    let bar = foo;

    bar = 9;

    console.log(foo, bar); // =&gt; 1, 9
    ```

    - Symbols and BigInts cannot be faithfully polyfilled, so they should not be used when targeting browsers/environments that don‚Äôt support them natively.

  &lt;a name=&quot;types--complex&quot;&gt;&lt;/a&gt;&lt;a name=&quot;1.2&quot;&gt;&lt;/a&gt;
  - [1.2](#types--complex)  **Complex**: When you access a complex type you work on a reference to its value.

    - `object`
    - `array`
    - `function`

    &lt;br /&gt;

    ```javascript
    const foo = [1, 2];
    const bar = foo;

    bar[0] = 9;

    console.log(foo[0], bar[0]); // =&gt; 9, 9
    ```

**[‚¨Ü back to top](#table-of-contents)**

## References

  &lt;a name=&quot;references--prefer-const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.1&quot;&gt;&lt;/a&gt;
  - [2.1](#references--prefer-const) Use `const` for all of your references; avoid using `var`. eslint: [`prefer-const`](https://eslint.org/docs/rules/prefer-const), [`no-const-assign`](https://eslint.org/docs/rules/no-const-assign)

    &gt; Why? This ensures that you can‚Äôt reassign your references, which can lead to bugs and difficult to comprehend code.

    ```javascript
    // bad
    var a = 1;
    var b = 2;

    // good
    const a = 1;
    const b = 2;
    ```

  &lt;a name=&quot;references--disallow-var&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.2&quot;&gt;&lt;/a&gt;
  - [2.2](#references--disallow-var) If you must reassign references, use `let` instead of `var`. eslint: [`no-var`](https://eslint.org/docs/rules/no-var)

    &gt; Why? `let` is block-scoped rather than function-scoped like `var`.

    ```javascript
    // bad
    var count = 1;
    if (true) {
      count += 1;
    }

    // good, use the let.
    let count = 1;
    if (true) {
      count += 1;
    }
    ```

  &lt;a name=&quot;references--block-scope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.3&quot;&gt;&lt;/a&gt;
  - [2.3](#references--block-scope) Note that both `let` and `const` are block-scoped, whereas `var` is function-scoped.

    ```javascript
    // const and let only exist in the blocks they are defined in.
    {
      let a = 1;
      const b = 1;
      var c = 1;
    }
    console.log(a); // ReferenceError
    console.log(b); // ReferenceError
    console.log(c); // Prints 1
    ```

    In the above code, you can see that referencing `a` and `b` will produce a ReferenceError, while `c` contains the number. This is because `a` and `b` are block scoped, while `c` is scoped to the containing function.

**[‚¨Ü back to top](#table-of-contents)**

## Objects

  &lt;a name=&quot;objects--no-new&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.1&quot;&gt;&lt;/a&gt;
  - [3.1](#objects--no-new) Use the literal syntax for object creation. eslint: [`no-new-object`](https://eslint.org/docs/rules/no-new-object)

    ```javascript
    // bad
    const item = new Object();

    // good
    const item = {};
    ```

  &lt;a name=&quot;es6-computed-properties&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.4&quot;&gt;&lt;/a&gt;
  - [3.2](#es6-computed-properties) Use computed property names when creating objects with dynamic property names.

    &gt; Why? They allow you to define all the properties of an object in one place.

    ```javascript

    function getKey(k) {
      return `a key named ${k}`;
    }

    // bad
    const obj = {
      id: 5,
      name: &#039;San Francisco&#039;,
    };
    obj[getKey(&#039;enabled&#039;)] = true;

    // good
    const obj = {
      id: 5,
      name: &#039;San Francisco&#039;,
      [getKey(&#039;enabled&#039;)]: true,
    };
    ```

  &lt;a name=&quot;es6-object-shorthand&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.5&quot;&gt;&lt;/a&gt;
  - [3.3](#es6-object-shorthand) Use object method shorthand. eslint: [`object-shorthand`](https://eslint.org/docs/rules/object-shorthand)

    ```javascript
    // bad
    const atom = {
      value: 1,

      addValue: function (value) {
        return atom.value + value;
      },
    };

    // good
    const atom = {
      value: 1,

      addValue(value) {
        return atom.value + value;
      },
    };
    ```

  &lt;a name=&quot;es6-object-concise&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.6&quot;&gt;&lt;/a&gt;
  - [3.4](#es6-object-concise) Use property value shorthand. eslint: [`object-shorthand`](https://eslint.org/docs/rules/object-shorthand)

    &gt; Why? It is shorter and descriptive.

    ```javascript
    const lukeSkywalker = &#039;Luke Skywalker&#039;;

    // bad
    const obj = {
      lukeSkywalker: lukeSkywalker,
    };

    // good
    const obj = {
      lukeSkywalker,
    };
    ```

  &lt;a name=&quot;objects--grouped-shorthand&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.7&quot;&gt;&lt;/a&gt;
  - [3.5](#objects--grouped-shorthand) Group your shorthand properties at the beginning of your object declaration.

    &gt; Why? It‚Äôs easier to tell which properties are using the shorthand.

    ```javascript
    const anakinSkywalker = &#039;Anakin Skywalker&#039;;
    const lukeSkywalker = &#039;Luke Skywalker&#039;;

    // bad
    const obj = {
      episodeOne: 1,
      twoJediWalkIntoACantina: 2,
      lukeSkywalker,
      episodeThree: 3,
      mayTheFourth: 4,
      anakinSkywalker,
    };

    // good
    const obj = {
      lukeSkywalker,
      anakinSkywalker,
      episodeOne: 1,
      twoJediWalkIntoACantina: 2,
      episodeThree: 3,
      mayTheFourth: 4,
    };
    ```

  &lt;a name=&quot;objects--quoted-props&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.8&quot;&gt;&lt;/a&gt;
  - [3.6](#objects--quoted-props) Only quote properties that are invalid identifiers. eslint: [`quote-props`](https://eslint.org/docs/rules/quote-props)

    &gt; Why? In general we consider it subjectively easier to read. It improves syntax highlighting, and is also more easily optimized by many JS engines.

    ```javascript
    // bad
    const bad = {
      &#039;foo&#039;: 3,
      &#039;bar&#039;: 4,
      &#039;data-blah&#039;: 5,
    };

    // good
    const good = {
      foo: 3,
      bar: 4,
      &#039;data-blah&#039;: 5,
    };
    ```

  &lt;a name=&quot;objects--prototype-builtins&quot;&gt;&lt;/a&gt;
  - [3.7](#objects--prototype-builtins) Do not call `Object.prototype` methods directly, such as `hasOwnProperty`, `propertyIsEnumerable`, and `isPrototypeOf`. eslint: [`no-prototype-builtins`](https://eslint.org/docs/rules/no-prototype-builtins)

    &gt; Why? These methods may be shadowed by properties on the object in question - consider `{ hasOwnProperty: false }` - or, the object may be a null object (`Object.create(null)`). In modern browsers that support ES2022, or with a polyfill such as &lt;https://npmjs.com/object.hasown&gt;, `Object.hasOwn` can also be used as an alternative to `Object.prototype.hasOwnProperty.call`.

    ```javascript
    // bad
    console.log(object.hasOwnProperty(key));

    // good
    console.log(Object.prototype.hasOwnProperty.call(object, key));

    // better
    const has = Object.prototype.hasOwnProperty; // cache the lookup once, in module scope.
    console.log(has.call(object, key));

    // best
    console.log(Object.hasOwn(object, key)); // only supported in browsers that support ES2022

    /* or */
    import has from &#039;has&#039;; // https://www.npmjs.com/package/has
    console.log(has(object, key));
    /* or */
    console.log(Object.hasOwn(object, key)); // https://www.npmjs.com/package/object.hasown
    ```

  &lt;a name=&quot;objects--rest-spread&quot;&gt;&lt;/a&gt;
  - [3.8](#objects--rest-spread) Prefer the object spread syntax over [`Object.assign`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign) to shallow-copy objects. Use the object rest parameter syntax to get a new object with certain properties omitted. eslint: [`prefer-object-spread`](https://eslint.org/docs/rules/prefer-object-spread)

    ```javascript
    // very bad
    const original = { a: 1, b: 2 };
    const copy = Object.assign(original, { c: 3 }); // this mutates `original` ‡≤†_‡≤†
    delete copy.a; // so does this

    // bad
    const original = { a: 1, b: 2 };
    const copy = Object.assign({}, original, { c: 3 }); // copy =&gt; { a: 1, b: 2, c: 3 }

    // good
    const original = { a: 1, b: 2 };
    const copy = { ...original, c: 3 }; // copy =&gt; { a: 1, b: 2, c: 3 }

    const { a, ...noA } = copy; // noA =&gt; { b: 2, c: 3 }
    ```

**[‚¨Ü back to top](#table-of-contents)**

## Arrays

  &lt;a name=&quot;arrays--literals&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.1&quot;&gt;&lt;/a&gt;
  - [4.1](#arrays--literals) Use the literal syntax for array creation. eslint: [`no-array-constructor`](https://eslint.org/docs/rules/no-array-constructor)

    ```javascript
    // bad
    const items = new Array();

    // good
    const items = [];
    ```

  &lt;a name=&quot;arrays--push&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.2&quot;&gt;&lt;/a&gt;
  - [4.2](#arrays--push) Use [Array#push](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push) instead of direct assignment to add items to an array.

    ```javascript
    const someStack = [];

    // bad
    someStack[someStack.length] = &#039;abracadabra&#039;;

    // good
    someStack.push(&#039;abracadabra&#039;);
    ```

  &lt;a name=&quot;es6-array-spreads&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.3&quot;&gt;&lt;/a&gt;
  - [4.3](#es6-array-spreads) Use array spreads `...` to copy arrays.

    ```javascript
    // bad
    const len = items.length;
    const itemsCopy = [];
    let i;

    for (i = 0; i &lt; len; i += 1) {
      itemsCopy[i] = items[i];
    }

    // good
    const itemsCopy = [...items];
    ```

  &lt;a name=&quot;arrays--from&quot;&gt;&lt;/a&gt;
  &lt;a name=&quot;arrays--from-iterable&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.4&quot;&gt;&lt;/a&gt;
  - [4.4](#arrays--from-iterable) To convert an iterable object to an array, use spreads `...` instead of [`Array.from`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from)

    ```javascript
    const foo = document.querySelectorAll(&#039;.foo&#039;);

    // good
    const nodes = Array.from(foo);

    // best
    const nodes = [...foo];
    ```

  &lt;a name=&quot;arrays--from-array-like&quot;&gt;&lt;/a&gt;
  - [4.5](#arrays--from-array-like) Use [`Array.from`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from) for converting an array-like object to an array.

    ```javascript
    const arrLike = { 0: &#039;foo&#039;, 1: &#039;bar&#039;, 2: &#039;baz&#039;, length: 3 };

    // bad
    const arr = Array.prototype.slice.call(arrLike);

    // good
    const arr = Array.from(arrLike);
    ```

  &lt;a name=&quot;arrays--mapping&quot;&gt;&lt;/a&gt;
  - [4.6](#arrays--mapping) Use [`Array.from`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from) instead of spread `...` for mapping over iterables, because it avoids creating an intermediate array.

    ```javascript
    // bad
    const baz = [...foo].map(bar);

    // good
    const baz = Array.from(foo, bar);
    ```

  &lt;a name=&quot;arrays--callback-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.5&quot;&gt;&lt;/a&gt;
  - [4.7](#arrays--callback-return) Use return statements in array method callbacks. It‚Äôs ok to omit the return if the function body consists of a single statement returning an expression without side effects, following [8.2](#arrows--implicit-return). eslint: [`array-callback-return`](https://eslint.org/docs/rules/array-callback-return)

    ```javascript
    // good
    [1, 2, 3].map((x) =&gt; {
      const y = x + 1;
      return x * y;
    });

    // good
    [1, 2, 3].map((x) =&gt; x + 1);

    // bad - no returned value means `acc` becomes undefined after the first iteration
    [[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&gt; {
      const flatten = acc.concat(item);
    });

    // good
    [[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&gt; {
      const flatten = acc.concat(item);
      return flatten;
    });

    // bad
    inbox.filter((msg) =&gt; {
      const { subject, author } = msg;
      if (subject === &#039;Mockingbird&#039;) {
        return author === &#039;Harper Lee&#039;;
      } else {
        return false;
      }
    });

    // good
    inbox.filter((msg) =&gt; {
      const { subject, author } = msg;
      if (subject === &#039;Mockingbird&#039;) {
        return author === &#039;Harper Lee&#039;;
      }

      return false;
    });
    ```

  &lt;a name=&quot;arrays--bracket-newline&quot;&gt;&lt;/a&gt;
  - [4.8](#arrays--bracket-newline) Use line breaks after opening array brackets and before closing array brackets, if an array has multiple lines

    ```javascript
    // bad
    const arr = [
      [0, 1], [2, 3], [4, 5],
    ];

    const objectInArray = [{
      id: 1,
    }, {
      id: 2,
    }];

    const numberInArray = [
      1, 2,
    ];

    // good
    const arr = [[0, 1], [2, 3], [4, 5]];

    const objectInArray = [
      {
        id: 1,
      },
      {
        id: 2,
      },
    ];

    const numberInArray = [
      1,
      2,
    ];
    ```

**[‚¨Ü back to top](#table-of-contents)**

## Destructuring

  &lt;a name=&quot;destructuring--object&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.1&quot;&gt;&lt;/a&gt;
  - [5.1](#destructuring--object) Use object destructuring when accessing and using multiple properties of an object. eslint: [`prefer-destructuring`](https://eslint.org/docs/rules/prefer-destructuring)

    &gt; Why? Destructuring saves you from creating temporary references for those properties, and from repetitive access of the object. Repeating object access creates more repetitive code, requires more reading, and creates more opportunities for mistakes. Destructuring objects also provides a single site of definition of the object structure that is used in the block, rather than requiring reading the entire block to determine what is used.

    ```javascript
    // bad
    function getFullName(user) {
      const firstName = user.firstName;
      const lastName = user.lastName;

      return `${firstName} ${lastName}`;
    }

    // good
    function getFullName(user) {
      const { firstName, lastName } = user;
      return `${firstName} ${lastName}`;
    }

    // best
    function getFullName({ firstName, lastName }) {
      return `${firstName} ${lastName}`;
    }
    ```

  &lt;a name=&quot;destructuring--array&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.2&quot;&gt;&lt;/a&gt;
  - [5.2](#destructuring--array) Use array destructuring. eslint: [`prefer-destructuring`](https://eslint.org/docs/rules/prefer-destructuring)

    ```javascript
    const arr = [1, 2, 3, 4];

    // bad
    const first = arr[0];
    const second = arr[1];

    // good
    const [first, second] = arr;
    ```

  &lt;a name=&quot;destructuring--object-over-array&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.3&quot;&gt;&lt;/a&gt;
  - [5.3](#destructuring--object-over-array) Use object destructuring for multiple return values, not array destructuring.

    &gt; Why? You can add new properties over time or change the order of things without breaking call sites.

    ```javascript
    // bad
    function processInput(input) {
      // then a miracle occurs
      return [left, right, top, bottom];
    }

    // the caller needs to think about the order of return data
    const [left, __, top] = processInput(input);

    // good
    function processInput(input) {
      // then a miracle occurs
      return { left, right, top, bottom };
    }

    // the caller selects only the data they need
    const { left, top } = processInput(input);
    ```

**[‚¨Ü back to top](#table-of-contents)**

## Strings

  &lt;a name=&quot;strings--quotes&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.1&quot;&gt;&lt;/a&gt;
  - [6.1](#strings--quotes) Use single quotes `&#039;&#039;` for strings. eslint: [`quotes`](https://eslint.org/docs/rules/quotes)

    ```javascript
    // bad
    const name = &quot;Capt. Janeway&quot;;

    // bad - template literals should contain interpolation or newlines
    const name = `Capt. Janeway`;

    // good
    const name = &#039;Capt. Janeway&#039;;
    ```

  &lt;a name=&quot;strings--line-length&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.2&quot;&gt;&lt;/a&gt;
  - [6.2](#strings--line-length) Strings that cause the line to go over 100 characters should not be written across multiple lines using string concatenation.

    &gt; Why? Broken strings are painful to work with and make code less searchable.

    ```javascript
    // bad
    const errorMessage = &#039;This is a super long error that was thrown because \
    of Batman. When you stop to think about how Batman had anything to do \
    with this, you would get nowhere \
    fast.&#039;;

    // bad
    const errorMessage = &#039;This is a super long error that was thrown because &#039; +
      &#039;of Batman. When you stop to think about how Batman had anything to do &#039; +
      &#039;with this, you would get nowhere fast.&#039;;

    // good
    const errorMessage = &#039;This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.&#039;;
    ```

  &lt;a name=&quot;es6-template-literals&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.4&quot;&gt;&lt;/a&gt;
  - [6.3](#es6-template-literals) When programmatically building up strings, use template strings instead of concatenation. eslint: [`prefer-template`](https://eslint.org/docs/rules/prefer-template) [`template-curly-spacing`](https://eslint.org/docs/rules/template-curly-spacing)

    &gt; Why? Template strings give you a readable, concise syntax with proper newlines and string interpolation features.

    ```javascript
    // bad
    function sayHi(name) {
      return &#039;How are you, &#039; + name + &#039;?&#039;;
    }

    // bad
    function sayHi(name) {
      return [&#039;How are you, &#039;, name, &#039;?&#039;].join();
    }

    // bad
    function sayHi(name) {
      return `How are you, ${ name }?`;
    }

    // good
    function sayHi(name) {
      return `How are you, ${name}?`;
    }
    ```

  &lt;a name=&quot;strings--eval&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.5&quot;&gt;&lt;/a&gt;
  - [6.4](#strings--eval) Never use `eval()` on a string; it opens too many vulnerabilities. eslint: [`no-eval`](https://eslint.org/docs/rules/no-eval)

  &lt;a name=&quot;strings--escaping&quot;&gt;&lt;/a&gt;
  - [6.5](#strings--escaping) Do not unnecessarily escape characters in strings. eslint: [`no-useless-esca

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[hotheadhacker/no-as-a-service]]></title>
            <link>https://github.com/hotheadhacker/no-as-a-service</link>
            <guid>https://github.com/hotheadhacker/no-as-a-service</guid>
            <pubDate>Wed, 30 Jul 2025 00:05:12 GMT</pubDate>
            <description><![CDATA[No-as-a-Service (NaaS) is a simple API that returns a random rejection reason. Use it when you need a realistic excuse, a fun ‚Äúno,‚Äù or want to simulate being turned down in style.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/hotheadhacker/no-as-a-service">hotheadhacker/no-as-a-service</a></h1>
            <p>No-as-a-Service (NaaS) is a simple API that returns a random rejection reason. Use it when you need a realistic excuse, a fun ‚Äúno,‚Äù or want to simulate being turned down in style.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,909</p>
            <p>Forks: 178</p>
            <p>Stars today: 32 stars today</p>
            <h2>README</h2><pre># ‚ùå No-as-a-Service

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/hotheadhacker/no-as-a-service/main/assets/imgs/naas-with-no-logo-bunny.png&quot; width=&quot;800&quot; alt=&quot;No-as-a-Service Banner&quot; width=&quot;70%&quot;/&gt;
&lt;/p&gt;


Ever needed a graceful way to say ‚Äúno‚Äù?  
This tiny API returns random, generic, creative, and sometimes hilarious rejection reasons ‚Äî perfectly suited for any scenario: personal, professional, student life, dev life, or just because.

Built for humans, excuses, and humor.

&lt;!-- GitAds Sponsorship Badge --&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://docs.gitads.dev/&quot;&gt;
    &lt;img src=&quot;https://gitads.dev/assets/images/sponsor/camos/camo-3.png&quot; alt=&quot;Sponsored by GitAds&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  This project is &lt;strong&gt;sponsored by &lt;a href=&quot;https://docs.gitads.dev/docs/getting-started/publishers&quot;&gt;GitAds&lt;/a&gt;&lt;/strong&gt;.&lt;br&gt;
  You can get your GitHub repository sponsored too ‚Äî &lt;a href=&quot;https://docs.gitads.dev/docs/getting-started/publishers&quot;&gt;create your account now&lt;/a&gt;.
&lt;/p&gt;

---

## üöÄ API Usage

**Base URL**
```
https://naas.isalman.dev/no
```

**Method:** `GET`  
**Rate Limit:** `120 requests per minute per IP`

### üîÑ Example Request
```http
GET /no
```

### ‚úÖ Example Response
```json
{
  &quot;reason&quot;: &quot;This feels like something Future Me would yell at Present Me for agreeing to.&quot;
}
```

Use it in apps, bots, landing pages, Slack integrations, rejection letters, or wherever you need a polite (or witty) no.

---

## üõ†Ô∏è Self-Hosting

Want to run it yourself? It‚Äôs lightweight and simple.

### 1. Clone this repository
```bash
git clone https://github.com/hotheadhacker/no-as-a-service.git
cd no-as-a-service
```

### 2. Install dependencies
```bash
npm install
```

### 3. Start the server
```bash
npm start
```

The API will be live at:
```
http://localhost:3000/no
```

You can also change the port using an environment variable:
```bash
PORT=5000 npm start
```

---

## üìÅ Project Structure

```
no-as-service/
‚îú‚îÄ‚îÄ index.js            # Express API
‚îú‚îÄ‚îÄ reasons.json        # 1000+ universal rejection reasons
‚îú‚îÄ‚îÄ package.json
‚îú‚îÄ‚îÄ .devcontainer.json  # VS Code / Github devcontainer setup
‚îî‚îÄ‚îÄ README.md
```

---

## üì¶ package.json

For reference, here‚Äôs the package config:

```json
{
  &quot;name&quot;: &quot;no-as-service&quot;,
  &quot;version&quot;: &quot;1.0.0&quot;,
  &quot;description&quot;: &quot;A lightweight API that returns random rejection or no reasons.&quot;,
  &quot;main&quot;: &quot;index.js&quot;,
  &quot;scripts&quot;: {
    &quot;start&quot;: &quot;node index.js&quot;
  },
  &quot;author&quot;: &quot;hotheadhacker&quot;,
  &quot;license&quot;: &quot;MIT&quot;,
  &quot;dependencies&quot;: {
    &quot;express&quot;: &quot;^4.18.2&quot;,
    &quot;express-rate-limit&quot;: &quot;^7.0.0&quot;
  }
}
```

---

## ‚öì Devcontainer

If you open this repo in Github Codespaces, it will automatically use `.devcontainer.json` to set up your environment.  If you open it in VSCode, it will ask you if you want to reopen it in a container.

---
## Projects Using No-as-a-Service

Here are some projects and websites that creatively integrate [no-as-a-service](https://naas.isalman.dev/no) to deliver humorous or programmatic &quot;no&quot; responses:

1. **[no-as-a-service-rust](https://github.com/ZAZPRO/no-as-a-service-rust)**  
   Rust implementation of this project.

2. **[CSG Admins](https://csg-admins.de)**  
   A system administration and gaming service hub using no-as-a-service to provide playful negative responses across some admin panels and commands.

3. **[FunnyAnswers - /no endpoint](https://www.funnyanswers.lol/no)**  
   A humor-focused API playground that includes a mirror or wrapper for no-as-a-service, perfect for developers exploring fun HTTP-based responses.

4. **[Gerador de Frases Aleat√≥rias (pt-BR)](https://github.com/timeuz/frases-aleatorias)**
   Uma reinterpreta√ß√£o em Python com frases em portugu√™s, frontend e novas categorias.

5. **[NoAsAnApp](https://github.com/omar-jarid/NoAsAnApp)**  
   A simple native Android app calling no-as-a-service to provide negative responses.

6. **[Your Project Here?](https://github.com/YOUR_REPO)**  
   If you&#039;re using no-as-a-service in your project, open a pull request to be featured here!

---

&gt; Want to use no-as-a-service in your own project? Check out the usage section in this README and start returning **&quot;no&quot;** like a pro.
---

## üë§ Author

Created with creative stubbornness by [hotheadhacker](https://github.com/hotheadhacker)

---

## üìÑ License

MIT ‚Äî do whatever, just don‚Äôt say yes when you should say no.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mediacms-io/mediacms]]></title>
            <link>https://github.com/mediacms-io/mediacms</link>
            <guid>https://github.com/mediacms-io/mediacms</guid>
            <pubDate>Wed, 30 Jul 2025 00:05:11 GMT</pubDate>
            <description><![CDATA[MediaCMS is a modern, fully featured open source video and media CMS, written in Python/Django and React, featuring a REST API.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mediacms-io/mediacms">mediacms-io/mediacms</a></h1>
            <p>MediaCMS is a modern, fully featured open source video and media CMS, written in Python/Django and React, featuring a REST API.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 3,716</p>
            <p>Forks: 690</p>
            <p>Stars today: 27 stars today</p>
            <h2>README</h2><pre># MediaCMS

[![GitHub license](https://img.shields.io/badge/License-AGPL%20v3-blue.svg)](https://raw.githubusercontent.com/mediacms-io/mediacms/main/LICENSE.txt)
[![Releases](https://img.shields.io/github/v/release/mediacms-io/mediacms?color=green)](https://github.com/mediacms-io/mediacms/releases/)
[![DockerHub](https://img.shields.io/docker/pulls/mediacms/mediacms)](https://hub.docker.com/r/mediacms/mediacms)



MediaCMS is a modern, fully featured open source video and media CMS. It is developed to meet the needs of modern web platforms for viewing and sharing media. It can be used to build a small to medium video and media portal within minutes.

It is built mostly using the modern stack Django + React and includes a REST API.

A demo is available at https://demo.mediacms.io


## Screenshots

&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/images/index.jpg&quot; width=&quot;340&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/images/video.jpg&quot; width=&quot;340&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/images/embed.jpg&quot; width=&quot;340&quot;&gt;
&lt;/p&gt;

## Features
- **Complete control over your data**: host it yourself!
- **Modern technologies**: Django/Python/Celery, React.
- **Support for multiple publishing workflows**: public, private, unlisted and custom
- **Multiple media types support**: video, audio,  image, pdf
- **Multiple media classification options**: categories, tags and custom
- **Multiple media sharing options**: social media share, videos embed code generation
- **Video Trimmer**: trim video, replace, save as new or create segments
- **Role-Based Access Control (RBAC)**: create RBAC categories and connect users to groups with view/edit access on their media
- **SAML support**: with ability to add mappings to system roles and groups
- **Easy media searching**: enriched with live search functionality
- **Playlists for audio and video content**: create playlists, add and reorder content
- **Responsive design**: including light and dark themes
- **Advanced users management**: allow self registration, invite only, closed.
- **Configurable actions**: allow download, add comments, add likes, dislikes, report media
- **Configuration options**: change logos, fonts, styling, add more pages
- **Enhanced video player**: customized video.js player with multiple resolution and playback speed options
- **Multiple transcoding profiles**: sane defaults for multiple dimensions (144p, 240p, 360p, 480p, 720p, 1080p) and multiple profiles (h264, h265, vp9)
- **Adaptive video streaming**: possible through HLS protocol
- **Subtitles/CC**: support for multilingual subtitle files
- **Scalable transcoding**: transcoding through priorities. Experimental support for remote workers
- **Chunked file uploads**: for pausable/resumable upload of content
- **REST API**: Documented through Swagger
- **Translation**: Most of the CMS is translated to a number of languages

## Example cases

- **Schools, education.** Administrators and editors keep what content will be published, students are not distracted with advertisements and irrelevant content, plus they have the ability to select either to stream or download content.
- **Organization sensitive content.** In cases where content is sensitive and cannot be uploaded to external sites.
- **Build a great community.** MediaCMS can be customized (URLs, logos, fonts, aesthetics) so that you create a highly customized video portal for your community!
- **Personal portal.** Organize, categorize and host your content the way you prefer.


## Philosophy

We believe there&#039;s a need for quality open source web applications that can be used to build community portals and support collaboration.
We have three goals for MediaCMS: a) deliver all functionality one would expect from a modern system, b) allow for easy installation and maintenance, c) allow easy customization and addition of features.


## License

MediaCMS is released under [GNU Affero General Public License v3.0 license](LICENSE.txt).
Copyright Markos Gogoulos.


## Support and paid services

We provide custom installations, development of extra functionality, migration from existing systems, integrations with legacy systems, training and support. Contact us at info@mediacms.io for more information.

### Commercial Hostings
**Elestio**

You can deploy MediaCMS on Elestio using one-click deployment. Elestio supports MediaCMS by providing revenue share so go ahead and click below to deploy and use MediaCMS.

[![Deploy on Elestio](https://elest.io/images/logos/deploy-to-elestio-btn.png)](https://elest.io/open-source/mediacms)

## Hardware considerations

For a small to medium installation, with a few hours of video uploaded daily, and a few hundreds of active daily users viewing content, 4GB Ram / 2-4 CPUs as minimum is ok. For a larger installation with many hours of video uploaded daily, consider adding more CPUs and more Ram.

In terms of disk space, think of what the needs will be. A general rule is to multiply by three the size of the expected uploaded videos (since the system keeps original versions, encoded versions plus HLS), so if you receive 1G of videos daily and maintain all of them, you should consider a 1T disk across a year (1G * 3 * 365).


## Installation / Maintanance

There are two ways to run MediaCMS, through Docker Compose and through installing it on a server via an automation script that installs and configures all needed services. Find the related pages:

- [Single Server](docs/admins_docs.md#2-server-installation) page
- [Docker Compose](docs/admins_docs.md#3-docker-installation) page

  A complete guide can be found on the blog post [How to self-host and share your videos in 2021](https://medium.com/@MediaCMS.io/how-to-self-host-and-share-your-videos-in-2021-14067e3b291b).

## Documentation

* [Users documentation](docs/user_docs.md) page
* [Administrators documentation](docs/admins_docs.md) page
* [Developers documentation](docs/developers_docs.md) page
* [Configuration](docs/admins_docs.md#5-configuration) page
* [Transcoding](docs/transcoding.md) page
* [Developer Experience](docs/dev_exp.md) page


## Technology

This software uses the following list of awesome technologies: Python, Django, Django Rest Framework, Celery, PostgreSQL, Redis, Nginx, uWSGI, React, Fine Uploader, video.js, FFMPEG, Bento4


## Who is using it

- **Cinemata** non-profit media, technology and culture organization - https://cinemata.org
- **Critical Commons** public media archive and fair use advocacy network - https://criticalcommons.org
- **American Association of Gynecologic Laparoscopists** - https://surgeryu.org/


## How to contribute

If you like the project, here&#039;s a few things you can do
- Hire us, for custom installations, training, support, maintenance work
- Suggest us to others that are interested to hire us
- Write a blog post/article about MediaCMS
- Share on social media about the project
- Open issues, participate on [discussions](https://github.com/mediacms-io/mediacms/discussions), report bugs, suggest ideas
- [Show and tell](https://github.com/mediacms-io/mediacms/discussions/categories/show-and-tell) how you are using the project
- Star the project
- Add functionality, work on a PR, fix an issue!


## Contact

info@mediacms.io
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[leonardomso/33-js-concepts]]></title>
            <link>https://github.com/leonardomso/33-js-concepts</link>
            <guid>https://github.com/leonardomso/33-js-concepts</guid>
            <pubDate>Wed, 30 Jul 2025 00:05:10 GMT</pubDate>
            <description><![CDATA[üìú 33 JavaScript concepts every developer should know.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/leonardomso/33-js-concepts">leonardomso/33-js-concepts</a></h1>
            <p>üìú 33 JavaScript concepts every developer should know.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 65,410</p>
            <p>Forks: 9,111</p>
            <p>Stars today: 20 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;
&lt;br&gt;
  &lt;a href=&quot;https://github.com/leonardomso/33&quot;&gt;&lt;img src=&quot;github-image.png&quot; alt=&quot;33 Concepts Every JS Developer Should Know&quot;&gt;&lt;/a&gt;
  &lt;br&gt;
    &lt;br&gt;
  &lt;strong&gt;33 Concepts Every JavaScript Developer Should Know&lt;/strong&gt;
  &lt;br&gt;&lt;br&gt;
&lt;/h1&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;p&gt;
    &lt;a href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt; ‚Ä¢
    &lt;a href=&quot;#community&quot;&gt;Community&lt;/a&gt; ‚Ä¢
    &lt;a href=&quot;#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt; ‚Ä¢
    &lt;a href=&quot;#license&quot;&gt;License&lt;/a&gt;
  &lt;/p&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;strong&gt;üöÄ Considered by GitHub as one of the &lt;a href=&quot;https://blog.github.com/2018-12-13-new-open-source-projects/&quot;&gt;top open source projects of 2018!&lt;/a&gt;&lt;/strong&gt;
&lt;/div&gt;

## Introduction 

This repository was created with the intention of helping developers master their concepts in JavaScript. It is not a requirement, but a guide for future studies. It is based on an article written by Stephen Curtis and you can read it [here](https://medium.com/@stephenthecurt/33-fundamentals-every-javascript-developer-should-know-13dd720a90d1).

## Community

Feel free to submit a PR by adding a link to your own recaps or reviews. If you want to translate the repo into your native language, please feel free to do so.

All the translations for this repo will be listed below:

- [ÿßŸéŸÑŸíÿπŸéÿ±Ÿéÿ®ŸêŸäŸéŸëÿ©Ÿè‚Äé (Arabic)](https://github.com/amrsekilly/33-js-concepts) ‚Äî Amr Elsekilly
- [–ë—ä–ª–≥–∞—Ä—Å–∫–∏ (Bulgarian)](https://github.com/thewebmasterp/33-js-concepts) - thewebmasterp
- [Ê±âËØ≠ (Chinese)](https://github.com/stephentian/33-js-concepts) ‚Äî Re Tian
- [Portugu√™s do Brasil (Brazilian Portuguese)](https://github.com/tiagoboeing/33-js-concepts) ‚Äî Tiago Boeing
- [ÌïúÍµ≠Ïñ¥ (Korean)](https://github.com/yjs03057/33-js-concepts.git) ‚Äî Suin Lee
- [Espa√±ol (Spanish)](https://github.com/adonismendozaperez/33-js-conceptos) ‚Äî Adonis Mendoza
- [T√ºrk√ße (Turkish)](https://github.com/ilker0/33-js-concepts) ‚Äî ƒ∞lker Demir
- [—Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ (Russian)](https://github.com/gumennii/33-js-concepts) ‚Äî Mihail Gumennii
- [Ti·∫øng Vi·ªát (Vietnamese)](https://github.com/nguyentranchung/33-js-concepts) ‚Äî Nguy·ªÖn Tr·∫ßn Chung
- [Polski (Polish)](https://github.com/lip3k/33-js-concepts) ‚Äî Dawid Lipinski
- [ŸÅÿßÿ±ÿ≥€å (Persian)](https://github.com/majidalavizadeh/33-js-concepts) ‚Äî Majid Alavizadeh
- [Bahasa Indonesia (Indonesian)](https://github.com/rijdz/33-js-concepts) ‚Äî Rijdzuan Sampoerna
- [Fran√ßais (French)](https://github.com/robinmetral/33-concepts-js) ‚Äî Robin M√©tral
- [‡§π‡§ø‡§®‡•ç‡§¶‡•Ä (Hindi)](https://github.com/vikaschauhan/33-js-concepts) ‚Äî Vikas Chauhan
- [ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨ (Greek)](https://github.com/DimitrisZx/33-js-concepts) ‚Äî Dimitris Zarachanis
- [Êó•Êú¨Ë™û (Japanese)](https://github.com/oimo23/33-js-concepts) ‚Äî oimo23
- [Deutsch (German)](https://github.com/burhannn/33-js-concepts) ‚Äî burhannn
- [—É–∫—Ä–∞—óÃÅ–Ω—Å—å–∫–∞ –º–æÃÅ–≤–∞ (Ukrainian)](https://github.com/AndrewSavetchuk/33-js-concepts-ukrainian-translation) ‚Äî Andrew Savetchuk
- [‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω (Sinhala)](https://github.com/ududsha/33-js-concepts) ‚Äî Udaya Shamendra
- [Italiano (Italian)](https://github.com/Donearm/33-js-concepts) ‚Äî Gianluca Fiore
- [Latvie≈°u (Latvian)](https://github.com/ANormalStick/33-js-concepts) - JƒÅnis ƒ™vƒÅns
- [Afaan Oromoo (Oromo)](https://github.com/Amandagne/33-js-concepts) - Amanuel Dagnachew
- [‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ (Thai)](https://github.com/ninearif/33-js-concepts) ‚Äî Arif Waram
- [Catal√† (Catalan)](https://github.com/marioestradaf/33-js-concepts) ‚Äî Mario Estrada
- [Svenska (Swedish)](https://github.com/FenixHongell/33-js-concepts/) ‚Äî Fenix Hongell
- [·ûÅ·üí·ûò·üÇ·ûö (Khmer)](https://github.com/Chhunneng/33-js-concepts) ‚Äî Chrea Chanchhunneng
- [·ä†·àõ·à≠·äõ (Ethiopian)](https://github.com/hmhard/33-js-concepts) - Miniyahil Kebede(·àù·äï·ã´·àÖ·àç ·ä®·â†·ã∞)
- [–ë–µ–ª–∞—Ä—É—Å–∫–∞—è –º–æ–≤–∞ (Belarussian)](https://github.com/Yafimau/33-js-concepts) ‚Äî Dzianis Yafimau
- [O&#039;zbekcha (Uzbek)](https://github.com/smnv-shokh/33-js-concepts) ‚Äî Shokhrukh Usmonov
- [Urdu (ÿßÿ±ÿØŸà)](https://github.com/sudoyasir/33-js-concepts) ‚Äî Yasir Nawaz
- [‡§π‡§ø‡§®‡•ç‡§¶‡•Ä (Hindi)](https://github.com/milostivyy/33-js-concepts) ‚Äî Mahima Chauhan
- [‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ (Bengali)](https://github.com/Jisan-mia/33-js-concepts) ‚Äî Jisan Mia
- [‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä (Gujarati)](https://github.com/VatsalBhuva11/33-js-concepts) ‚Äî Vatsal Bhuva
- [ÿ≥ŸÜ⁄åŸä (Sindhi)](https://github.com/Sunny-unik/33-js-concepts) ‚Äî Sunny Gandhwani
- [‡§≠‡•ã‡§ú‡§™‡•Å‡§∞‡•Ä (Bhojpuri)](https://github.com/debnath003/33-js-concepts) ‚Äî Pronay Debnath
- [‡®™‡©∞‡®ú‡®æ‡®¨‡©Ä (Punjabi)](https://github.com/Harshdev098/33-js-concepts) ‚Äî Harsh Dev Pathak
- [Latin (Latin)](https://github.com/Harshdev098/33-js-concepts) ‚Äî Harsh Dev Pathak
- [‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç (Malayalam)](https://github.com/Stark-Akshay/33-js-concepts) ‚Äî Akshay Manoj
- [Yor√πb√° (Yoruba)](https://github.com/ayobaj/33-js-concepts) - Ayomide Bajulaye
- [◊¢◊ë◊®◊ô◊™‚Äé (Hebrew)](https://github.com/rafyzg/33-js-concepts) ‚Äî Refael Yzgea

&lt;hr&gt;

## &lt;img align=&quot;center&quot; width=&quot;35&quot; height=&quot;35&quot; src=&quot;https://media4.giphy.com/media/3hoLIVAJYkz6T0Ichp/giphy.gif&quot;&gt; &lt;a id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;

1. [**Call Stack**](#1-call-stack)
2. [**Primitive Types**](#2-primitive-types)
3. [**Value Types and Reference Types**](#3-value-types-and-reference-types)
4. [**Implicit, Explicit, Nominal, Structuring and Duck Typing**](#4-implicit-explicit-nominal-structuring-and-duck-typing)
5. [**== vs === vs typeof**](#5--vs--vs-typeof)
6. [**Function Scope, Block Scope and Lexical Scope**](#6-function-scope-block-scope-and-lexical-scope)
7. [**Expression vs Statement**](#7-expression-vs-statement)
8. [**IIFE, Modules and Namespaces**](#8-iife-modules-and-namespaces)
9. [**Message Queue and Event Loop**](#9-message-queue-and-event-loop)
10. [**setTimeout, setInterval and requestAnimationFrame**](#10-settimeout-setinterval-and-requestanimationframe)
11. [**JavaScript Engines**](#11-javascript-engines)
12. [**Bitwise Operators, Type Arrays and Array Buffers**](#12-bitwise-operators-type-arrays-and-array-buffers)
13. [**DOM and Layout Trees**](#13-dom-and-layout-trees)
14. [**Factories and Classes**](#14-factories-and-classes)
15. [**this, call, apply and bind**](#15-this-call-apply-and-bind)
16. [**new, Constructor, instanceof and Instances**](#16-new-constructor-instanceof-and-instances)
17. [**Prototype Inheritance and Prototype Chain**](#17-prototype-inheritance-and-prototype-chain)
18. [**Object.create and Object.assign**](#18-objectcreate-and-objectassign)
19. [**map, reduce, filter**](#19-map-reduce-filter)
20. [**Pure Functions, Side Effects, State Mutation and Event Propagation**](#20-pure-functions-side-effects-state-mutation-and-event-propagation)
21. [**Closures**](#21-closures)
22. [**High Order Functions**](#22-high-order-functions)
23. [**Recursion**](#23-recursion)
24. [**Collections and Generators**](#24-collections-and-generators)
25. [**Promises**](#25-promises)
26. [**async/await**](#26-asyncawait)
27. [**Data Structures**](#27-data-structures)
28. [**Expensive Operation and Big O Notation**](#28-expensive-operation-and-big-o-notation)
29. [**Algorithms**](#29-algorithms)
30. [**Inheritance, Polymorphism and Code Reuse**](#30-inheritance-polymorphism-and-code-reuse)
31. [**Design Patterns**](#31-design-patterns)
32. [**Partial Applications, Currying, Compose and Pipe**](#32-partial-applications-currying-compose-and-pipe)
33. [**Clean Code**](#33-clean-code)

&lt;hr&gt;

## 1. Call Stack

&lt;p&gt;The call stack is a mechanism that the JavaScript interpreter uses to keep track of function execution within a program. In JavaScript, functions are executed in the order they are called. The call stack follows the Last In, First Out (LIFO) principle, meaning that the last function pushed onto the stack is the first one to be executed.&lt;/p&gt;

&lt;p&gt;According to the ECMAScript specification, the call stack is defined as part of the execution context. Whenever a function is called, a new execution context is created and placed at the top of the stack. Once the function completes, its execution context is removed from the stack, and control returns to the previous context. This helps manage synchronous code execution, as each function call must complete before the next one can begin.&lt;/p&gt;

### Reference

-  [Call Stack ‚Äî MDN](https://developer.mozilla.org/en-US/docs/Glossary/Call_stack)

### &lt;img align=&quot;center&quot; width=&quot;30&quot; height=&quot;30&quot; src=&quot;https://cdn-icons-png.flaticon.com/512/1945/1945940.png&quot;&gt; Articles

-  [Understanding Javascript Call Stack, Event Loops ‚Äî Gaurav Pandvia](https://medium.com/@gaurav.pandvia/understanding-javascript-function-executions-tasks-event-loop-call-stack-more-part-1-5683dea1f5ec)
-  [Understanding the JavaScript Call Stack ‚Äî Charles Freeborn](https://medium.freecodecamp.org/understanding-the-javascript-call-stack-861e41ae61d4)
-  [Javascript: What Is The Execution Context? What Is The Call Stack? ‚Äî Valentino Gagliardi](https://medium.com/@valentinog/javascript-what-is-the-execution-context-what-is-the-call-stack-bd23c78f10d1)
-  [What is the JS Event Loop and Call Stack? ‚Äî Jess Telford](https://gist.github.com/jesstelford/9a35d20a2aa044df8bf241e00d7bc2d0)
-  [Understanding Execution Context and Execution Stack in Javascript ‚Äî Sukhjinder Arora](https://blog.bitsrc.io/understanding-execution-context-and-execution-stack-in-javascript-1c9ea8642dd0)
-  [How JavaScript Works Under The Hood: An Overview of JavaScript Engine, Heap and, Call Stack ‚Äî Bipin Rajbhar](https://dev.to/bipinrajbhar/how-javascript-works-under-the-hood-an-overview-of-javascript-engine-heap-and-call-stack-1j5o)
-  [The JS Call stack Explained in 9 minutes](https://www.youtube.com/watch?v=W8AeMrVtFLY) - Colt Steel (YouTube)

### &lt;img align=&quot;center&quot; width=&quot;30&quot; height=&quot;30&quot; src=&quot;https://img.icons8.com/dusk/64/video.png&quot; alt=&quot;video&quot;/&gt;  Videos

-  [Javascript: the Call Stack explained ‚Äî Coding Blocks India](https://www.youtube.com/watch?v=w6QGEiQceOM)
-  [The JS Call Stack Explained In 9 Minutes ‚Äî Colt Steele](https://www.youtube.com/watch?v=W8AeMrVtFLY)
-  [What is the Call Stack? ‚Äî Eric Traub](https://www.youtube.com/watch?v=w7QWQlkLY_s)
-  [The Call Stack ‚Äî Kevin Drumm](https://www.youtube.com/watch?v=Q2sFmqvpBe0)
-  [Understanding JavaScript Execution ‚Äî Codesmith](https://www.youtube.com/watch?v=Z6a1cLyq7Ac&amp;list=PLWrQZnG8l0E4kd1T_nyuVoxQUaYEWFgcD)
-  [What the heck is the event loop anyway? ‚Äî Philip Roberts](https://www.youtube.com/watch?v=8aGhZQkoFbQ)
-  [How JavaScript Code is executed? ‚ù§Ô∏è&amp; Call Stack ‚Äî Akshay Saini](https://www.youtube.com/watch?v=iLWTnMzWtj4&amp;list=PLlasXeu85E9cQ32gLCvAvr9vNaUccPVNP)
-  [Call Stacks - CS50](https://www.youtube.com/watch?v=aCPkszeKRa4)
-  [Learn the JavaScript Call Stack - codecupdev](https://www.youtube.com/watch?v=HXqXPGS96rw)
-  [JavaScript Functions and the Call Stack | How does the Call stack work - Chidre&#039;sTechTutorials](https://www.youtube.com/watch?v=P6H-T4cUDR4)
    
**[‚¨Ü Back to Top](#table-of-contents)**

---

## 2. Primitive Types

&lt;p&gt;According to the ECMAScript specification, JavaScript has six primitive data types: string, number, bigint, boolean, undefined, and symbol. These types are immutable, meaning their values cannot be altered. There is also a special primitive type called null, which represents the intentional absence of any object value.&lt;/p&gt;

&lt;p&gt;Primitive values are directly assigned to a variable, and when you manipulate a primitive type, you&#039;re working directly on the value. Unlike objects, primitives do not have properties or methods, but JavaScript automatically wraps primitive values with object counterparts when necessary (e.g., when calling methods on strings).&lt;/p&gt;

### Reference

-  [JavaScript data types and data structures ‚Äî MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values)

### &lt;img align=&quot;center&quot; width=&quot;30&quot; height=&quot;30&quot; src=&quot;https://cdn-icons-png.flaticon.com/512/1945/1945940.png&quot;&gt; Articles

-  [Primitive and Non-primitive data-types in JavaScript - GeeksforGeeks](https://www.geeksforgeeks.org/primitive-and-non-primitive-data-types-in-javascript)
-  [How numbers are encoded in JavaScript ‚Äî Dr. Axel Rauschmayer](http://2ality.com/2012/04/number-encoding.html)
-  [What Every JavaScript Developer Should Know About Floating Point Numbers ‚Äî Chewxy](https://blog.chewxy.com/2014/02/24/what-every-javascript-developer-should-know-about-floating-point-numbers/)
-  [The Secret Life of JavaScript Primitives ‚Äî Angus Croll](https://javascriptweblog.wordpress.com/2010/09/27/the-secret-life-of-javascript-primitives/)
-  [Primitive Types ‚Äî Flow](https://flow.org/en/docs/types/primitives/)
-  [(Not) Everything in JavaScript is an Object ‚Äî Daniel Li](https://dev.to/d4nyll/not-everything-in-javascript-is-an-object)
-  [JavaScript data types and data structures ‚Äî MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values)
-  [Diving Deeper in JavaScripts Objects ‚Äî Arfat Salman](https://blog.bitsrc.io/diving-deeper-in-javascripts-objects-318b1e13dc12)
-  [The differences between Object.freeze() vs Const in JavaScript ‚Äî Bolaji Ayodeji](https://medium.com/@bolajiayodeji/the-differences-between-object-freeze-vs-const-in-javascript-4eacea534d7c)
-  [Object to primitive conversion ‚Äî JavaScript.Info](https://javascript.info/object-toprimitive)
- [Methods of primitives - Javascript.info](https://javascript.info/primitives-methods)

### &lt;img align=&quot;center&quot; width=&quot;30&quot; height=&quot;30&quot; src=&quot;https://img.icons8.com/dusk/64/video.png&quot; alt=&quot;video&quot;/&gt;  Videos

- [JavaScript Reference vs Primitive Types ‚Äî Academind](https://www.youtube.com/watch?v=9ooYYRLdg_g)
- [JavaScript Primitive Types ‚Äî Simon Sez IT](https://www.youtube.com/watch?v=HsbWQsSCE5Y)
- [Value Types and Reference Types in JavaScript ‚Äî Programming with Mosh](https://www.youtube.com/watch?v=e-_mDyqm2oU)
- [JavaScript Primitive Data Types ‚Äî Avelx](https://www.youtube.com/watch?v=qw3j0A3DIzQ)
- [Everything you never wanted to know about JavaScript numbers ‚Äî Bartek Szopka](https://www.youtube.com/watch?v=MqHDDtVYJRI)
- [What are variables in Javascript? ‚Äî JS For Everyone](https://www.youtube.com/watch?v=B4Bbmei_thw)
- [TIPOS DE DATOS PRIMITIVOS en JAVASCRIPT - La Cocina del C√≥digo](https://www.youtube.com/watch?v=cC65D2q5f8I)
- [Data Type in JavaScript - ScholarHat](https://www.youtube.com/watch?v=aFDvBjVjCh8)

**[‚¨Ü Back to Top](#table-of-contents)**

---

## 3. Value Types and Reference Types

&lt;p&gt;According to the ECMAScript specification, value types are stored directly in the location that the variable accesses. These include types like number, string, boolean, undefined, bigint, symbol, and null. When you assign a value type to a variable, the value itself is stored.&lt;/p&gt;

&lt;p&gt;Reference types, on the other hand, are objects stored in the heap. Variables assigned to reference types actually store references (pointers) to the objects, not the objects themselves. When you assign a reference type to another variable, both variables reference the same object in memory.&lt;/p&gt;

### &lt;img align=&quot;center&quot; width=&quot;30&quot; height=&quot;30&quot; src=&quot;https://cdn-icons-png.flaticon.com/512/1945/1945940.png&quot;&gt; Articles

-  [Explaining Value vs. Reference in Javascript ‚Äî Arnav Aggarwal](https://codeburst.io/explaining-value-vs-reference-in-javascript-647a975e12a0)
-  [Primitive Types &amp; Reference Types in JavaScript ‚Äî Bran van der Meer](https://gist.github.com/branneman/7fb06d8a74d7e6d4cbcf75c50fec599c)
-  [Value Types, Reference Types and Scope in JavaScript ‚Äî Ben Aston](https://medium.com/@benastontweet/lesson-1b-javascript-fundamentals-380f601ba851)
-  [Back to roots: JavaScript Value vs Reference ‚Äî Miro Koczka](https://medium.com/dailyjs/back-to-roots-javascript-value-vs-reference-8fb69d587a18)
-  [Grasp &quot;By Value&quot; and &quot;By Reference&quot; in JavaScript ‚Äî L√©na Faure](https://hackernoon.com/grasp-by-value-and-by-reference-in-javascript-7ed75efa1293)
-  [JavaScript Reference and Copy Variables ‚Äî V√≠tor Capretz](https://hackernoon.com/javascript-reference-and-copy-variables-b0103074fdf0)
-  [JavaScript Primitive vs Reference Values](http://www.javascripttutorial.net/javascript-primitive-vs-reference-values/)
-  [JavaScript by Reference vs. by Value ‚Äî nrabinowitz](https://stackoverflow.com/questions/6605640/javascript-by-reference-vs-by-value)
-  [JavaScript Interview Prep: Primitive vs. Reference Types ‚Äî Mike Cronin](https://dev.to/mostlyfocusedmike/javascript-interview-prep-primitive-vs-reference-types-3o4f)
-  [JavaScript map vs. forEach: When to Use Each One - Sajal Soni](https://code.tutsplus.com/tutorials/javascript-map-vs-foreach-when-to-use-each-one--cms-38365)

### &lt;img align=&quot;center&quot; width=&quot;30&quot; height=&quot;30&quot; src=&quot;https://img.icons8.com/dusk/64/video.png&quot; alt=&quot;video&quot;/&gt;  Videos

- [Javascript Pass by Value vs Pass by Reference ‚Äî techsith](https://www.youtube.com/watch?v=E-dAnFdq8k8)
- [JavaScript Value vs Reference Types ‚Äî Programming with Mosh](https://www.youtube.com/watch?v=fD0t_DKREbE)
- [VALORES vs REFERENCIAS en JAVASCRIPT - La Cocina del C√≥digo](https://www.youtube.com/watch?v=AvkyOrWkuQc)
- [JavaScript - Reference vs Primitive Values/ Types - Academind](https://www.youtube.com/watch?v=9ooYYRLdg_g)
- [Value Types and Reference Types in JavaScript - Programming with Mosh](https://www.youtube.com/watch?v=e-_mDyqm2oU)

**[‚¨Ü Back to Top](#table-of-contents)**

---

## 4. Implicit, Explicit, Nominal, Structuring and Duck Typing

&lt;p&gt;The ECMAScript specification defines JavaScript as a dynamically typed language, meaning that types are associated with values rather than variables, and type checking occurs at runtime. There are various ways JavaScript manages types:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Implicit Typing (or Type Coercion):&lt;/strong&gt; This occurs when JavaScript automatically converts one data type to another when required. For instance, JavaScript might convert a string to a number during an arithmetic operation. While this can simplify some code, it can also lead to unexpected results if not handled carefully.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Explicit Typing:&lt;/strong&gt; Unlike implicit typing, explicit typing involves manually converting a value from one type to another using functions like Number(), String(), or Boolean().&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nominal Typing:&lt;/strong&gt; JavaScript doesn&#039;t natively support nominal typing, where types are explicitly declared and checked. However, TypeScript, a superset of JavaScript, brings this feature to help catch type errors during development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Structural Typing:&lt;/strong&gt; In this type system, types are based on the structure or properties of the data. JavaScript is a structurally typed language where objects are compatible if they share the same structure (i.e., the same set of properties and methods).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Duck Typing:&lt;/strong&gt; This is a concept where an object&#039;s suitability is determined by the presence of certain properties and methods, rather than by the actual type of the object. JavaScript relies heavily on duck typing, where behavior is inferred from an object&#039;s properties rather than its declared type.&lt;/p&gt;

### &lt;img align=&quot;center&quot; width=&quot;30&quot; height=&quot;30&quot; src=&quot;https://cdn-icons-png.flaticon.com/512/1945/1945940.png&quot;&gt; Articles

-  [What you need to know about Javascript&#039;s Implicit Coercion ‚Äî Promise Tochi](https://dev.to/promhize/what-you-need-to-know-about-javascripts-implicit-coercion-e23)
-  [JavaScript Type Coercion Explained ‚Äî Alexey Samoshkin](https://medium.freecodecamp.org/js-type-coercion-explained-27ba3d9a2839)
-  [Javascript Coercion Explained ‚Äî Ben Garrison](https://hackernoon.com/javascript-coercion-explained-545c895213d3)
-  [What exactly is Type Coercion in Javascript? - Stack Overflow](https://stackoverflow.com/questions/19915688/what-exactly-is-type-coercion-in-javascript)

### &lt;img align=&quot;center&quot; width=&quot;30&quot; height=&quot;30&quot; src=&quot;https://img.icons8.com/dusk/64/video.png&quot; alt=&quot;video&quot;/&gt;  Videos

- [== ? === ??? ...#@^% - Shirmung Bielefeld](https://www.youtube.com/watch?v=qGyqzN0bjhc&amp;t)
- [Coercion in Javascript - Hitesh Choudhary](https://www.youtube.com/watch?v=b04Q_vyqEG8)
- [JavaScript Questions: What is Coercion? - Steven Hancock](https://www.youtube.com/watch?v=z4-8wMSPJyI)
- [Typing: Static vs Dynamic, Weak vs. Strong - Codexpanse](https://www.youtube.com/watch?v=C5fr0LZL

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[zed-industries/zed-fonts]]></title>
            <link>https://github.com/zed-industries/zed-fonts</link>
            <guid>https://github.com/zed-industries/zed-fonts</guid>
            <pubDate>Wed, 30 Jul 2025 00:05:09 GMT</pubDate>
            <description><![CDATA[The Zed Mono and Sans typefaces, custom built from Iosevka]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/zed-industries/zed-fonts">zed-industries/zed-fonts</a></h1>
            <p>The Zed Mono and Sans typefaces, custom built from Iosevka</p>
            <p>Language: JavaScript</p>
            <p>Stars: 894</p>
            <p>Forks: 34</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre># Zed Fonts

* Zed Plex Mono is a fork of IBM Plex with ligatures manually added. It is stored in the `zed-plex` folder.

# Previous Zed Fonts

We used to use Zed Mono and Zed Sans, custom builds of [Iosevka](https://github.com/be5invis/Iosevka) liscensed under the SIL Open Font License, Version 1.1.

They were built for use in [Zed](https://zed.dev/). **Zed Sans** uses a quasi-proportional spacing to allow the font to still feel monospace while not having such wide gaps in a UI setting.

## Zed Mono, Zed Sans

**Zed Mono** &amp; **Zed Sans** are custom builds of [Iosevka](https://github.com/be5invis/Iosevka).

See: [./zed-iosevka](./zed-iosevka)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WhiskeySockets/Baileys]]></title>
            <link>https://github.com/WhiskeySockets/Baileys</link>
            <guid>https://github.com/WhiskeySockets/Baileys</guid>
            <pubDate>Wed, 30 Jul 2025 00:05:08 GMT</pubDate>
            <description><![CDATA[Lightweight full-featured typescript/javascript WhatsApp Web API]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WhiskeySockets/Baileys">WhiskeySockets/Baileys</a></h1>
            <p>Lightweight full-featured typescript/javascript WhatsApp Web API</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,184</p>
            <p>Forks: 2,090</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&#039;center&#039;&gt;&lt;img alt=&quot;Baileys logo&quot; src=&quot;https://raw.githubusercontent.com/WhiskeySockets/Baileys/refs/heads/master/Media/logo.png&quot; height=&quot;75&quot;/&gt;&lt;/h1&gt;

&lt;div align=&#039;center&#039;&gt;

![NPM Downloads](https://img.shields.io/npm/dw/%40whiskeysockets%2Fbaileys?label=npm&amp;color=%23CB3837)
![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/whiskeysockets/baileys)
![Discord](https://img.shields.io/discord/725839806084546610?label=discord&amp;color=%235865F2)

&lt;/div&gt;

&lt;div align=&#039;center&#039;&gt;Baileys is a WebSockets-based TypeScript library for interacting with the WhatsApp Web API.&lt;/div&gt;

# Important Note
This is a temporally README, the new guide is at development and will be fully released when it&#039;s finished.

New Guide: https://baileys.wiki

# Sponsor
If you&#039;d like to financially support this project, you can do so by supporting the current maintainer [here](https://purpshell.dev/sponsor).

# Disclaimer
This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates.
The official WhatsApp website can be found at whatsapp.com. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners.

The maintainers of Baileys do not in any way condone the use of this application in practices that violate the Terms of Service of WhatsApp. The maintainers of this application call upon the personal responsibility of its users to use this application in a fair way, as it is intended to be used.
Use at your own discretion. Do not spam people with this. We discourage any stalkerware, bulk or automated messaging usage.

##

- Baileys does not require Selenium or any other browser to be interface with WhatsApp Web, it does so directly using a **WebSocket**. 
- Not running Selenium or Chromium saves you like **half a gig** of ram :/ 
- Baileys supports interacting with the multi-device &amp; web versions of WhatsApp.
- Thank you to [@pokearaujo](https://github.com/pokearaujo/multidevice) for writing his observations on the workings of WhatsApp Multi-Device. Also, thank you to [@Sigalor](https://github.com/sigalor/whatsapp-web-reveng) for writing his observations on the workings of WhatsApp Web and thanks to [@Rhymen](https://github.com/Rhymen/go-whatsapp/) for the __go__ implementation.

&gt; [!IMPORTANT]
&gt; The original repository had to be removed by the original author - we now continue development in this repository here.
This is the only official repository and is maintained by the community.
&gt; **Join the Discord [here](https://discord.gg/WeJM5FP9GG)**
 
## Example

Do check out &amp; run [example.ts](Example/example.ts) to see an example usage of the library.
The script covers most common use cases.
To run the example script, download or clone the repo and then type the following in a terminal:
1. ``` cd path/to/Baileys ```
2. ``` yarn ```
3. ``` yarn example ```

## Install

Use the stable version:
```
yarn add @whiskeysockets/baileys
```

Use the edge version (no guarantee of stability, but latest fixes + features)
```
yarn add github:WhiskeySockets/Baileys
```

Then import your code using:
```ts 
import makeWASocket from &#039;@whiskeysockets/baileys&#039;
```

# Links

- [Discord](https://discord.gg/WeJM5FP9GG)
- [Docs](https://guide.whiskeysockets.io/)

# Index

- [Connecting Account](#connecting-account)
    - [Connect with QR-CODE](#starting-socket-with-qr-code)
    - [Connect with Pairing Code](#starting-socket-with-pairing-code)
    - [Receive Full History](#receive-full-history)
- [Important Notes About Socket Config](#important-notes-about-socket-config)
    - [Caching Group Metadata (Recommended)](#caching-group-metadata-recommended)
    - [Improve Retry System &amp; Decrypt Poll Votes](#improve-retry-system--decrypt-poll-votes)
    - [Receive Notifications in Whatsapp App](#receive-notifications-in-whatsapp-app)

- [Save Auth Info](#saving--restoring-sessions)
- [Handling Events](#handling-events)
    - [Example to Start](#example-to-start)
    - [Decrypt Poll Votes](#decrypt-poll-votes)
    - [Summary of Events on First Connection](#summary-of-events-on-first-connection)
- [Implementing a Data Store](#implementing-a-data-store)
- [Whatsapp IDs Explain](#whatsapp-ids-explain)
- [Utility Functions](#utility-functions)
- [Sending Messages](#sending-messages)
    - [Non-Media Messages](#non-media-messages)
        - [Text Message](#text-message)
        - [Quote Message](#quote-message-works-with-all-types)
        - [Mention User](#mention-user-works-with-most-types)
        - [Forward Messages](#forward-messages)
        - [Location Message](#location-message)
        - [Contact Message](#contact-message)
        - [Reaction Message](#reaction-message)
        - [Pin Message](#pin-message)
        - [Poll Message](#poll-message)
    - [Sending with Link Preview](#sending-messages-with-link-previews)
    - [Media Messages](#media-messages)
        - [Gif Message](#gif-message)
        - [Video Message](#video-message)
        - [Audio Message](#audio-message)
        - [Image Message](#image-message)
        - [ViewOnce Message](#view-once-message)
- [Modify Messages](#modify-messages)
    - [Delete Messages (for everyone)](#deleting-messages-for-everyone)
    - [Edit Messages](#editing-messages)
- [Manipulating Media Messages](#manipulating-media-messages)
    - [Thumbnail in Media Messages](#thumbnail-in-media-messages)
    - [Downloading Media Messages](#downloading-media-messages)
    - [Re-upload Media Message to Whatsapp](#re-upload-media-message-to-whatsapp)
- [Reject Call](#reject-call)
- [Send States in Chat](#send-states-in-chat)
    - [Reading Messages](#reading-messages)
    - [Update Presence](#update-presence)
- [Modifying Chats](#modifying-chats)
    - [Archive a Chat](#archive-a-chat)
    - [Mute/Unmute a Chat](#muteunmute-a-chat)
    - [Mark a Chat Read/Unread](#mark-a-chat-readunread)
    - [Delete a Message for Me](#delete-a-message-for-me)
    - [Delete a Chat](#delete-a-chat)
    - [Star/Unstar a Message](#starunstar-a-message)
    - [Disappearing Messages](#disappearing-messages)
- [User Querys](#user-querys)
    - [Check If ID Exists in Whatsapp](#check-if-id-exists-in-whatsapp)
    - [Query Chat History (groups too)](#query-chat-history-groups-too)
    - [Fetch Status](#fetch-status)
    - [Fetch Profile Picture (groups too)](#fetch-profile-picture-groups-too)
    - [Fetch Bussines Profile (such as description or category)](#fetch-bussines-profile-such-as-description-or-category)
    - [Fetch Someone&#039;s Presence (if they&#039;re typing or online)](#fetch-someones-presence-if-theyre-typing-or-online)
- [Change Profile](#change-profile)
    - [Change Profile Status](#change-profile-status)
    - [Change Profile Name](#change-profile-name)
    - [Change Display Picture (groups too)](#change-display-picture-groups-too)
    - [Remove display picture (groups too)](#remove-display-picture-groups-too)
- [Groups](#groups)
    - [Create a Group](#create-a-group)
    - [Add/Remove or Demote/Promote](#addremove-or-demotepromote)
    - [Change Subject (name)](#change-subject-name)
    - [Change Description](#change-description)
    - [Change Settings](#change-settings)
    - [Leave a Group](#leave-a-group)
    - [Get Invite Code](#get-invite-code)
    - [Revoke Invite Code](#revoke-invite-code)
    - [Join Using Invitation Code](#join-using-invitation-code)
    - [Get Group Info by Invite Code](#get-group-info-by-invite-code)
    - [Query Metadata (participants, name, description...)](#query-metadata-participants-name-description)
    - [Join using groupInviteMessage](#join-using-groupinvitemessage)
    - [Get Request Join List](#get-request-join-list)
    - [Approve/Reject Request Join](#approvereject-request-join)
    - [Get All Participating Groups Metadata](#get-all-participating-groups-metadata)
    - [Toggle Ephemeral](#toggle-ephemeral)
    - [Change Add Mode](#change-add-mode)
- [Privacy](#privacy)
    - [Block/Unblock User](#blockunblock-user)
    - [Get Privacy Settings](#get-privacy-settings)
    - [Get BlockList](#get-blocklist)
    - [Update LastSeen Privacy](#update-lastseen-privacy)
    - [Update Online Privacy](#update-online-privacy)
    - [Update Profile Picture Privacy](#update-profile-picture-privacy)
    - [Update Status Privacy](#update-status-privacy)
    - [Update Read Receipts Privacy](#update-read-receipts-privacy)
    - [Update Groups Add Privacy](#update-groups-add-privacy)
    - [Update Default Disappearing Mode](#update-default-disappearing-mode)
- [Broadcast Lists &amp; Stories](#broadcast-lists--stories)
    - [Send Broadcast &amp; Stories](#send-broadcast--stories)
    - [Query a Broadcast List&#039;s Recipients &amp; Name](#query-a-broadcast-lists-recipients--name)
- [Writing Custom Functionality](#writing-custom-functionality)
    - [Enabling Debug Level in Baileys Logs](#enabling-debug-level-in-baileys-logs)
    - [How Whatsapp Communicate With Us](#how-whatsapp-communicate-with-us)
    - [Register a Callback for Websocket Events](#register-a-callback-for-websocket-events)

## Connecting Account

WhatsApp provides a multi-device API that allows Baileys to be authenticated as a second WhatsApp client by scanning a **QR code** or **Pairing Code** with WhatsApp on your phone.

&gt; [!NOTE]
&gt; **[Here](#example-to-start) is a simple example of event handling**

&gt; [!TIP]
&gt; **You can see all supported socket configs [here](https://baileys.whiskeysockets.io/types/SocketConfig.html) (Recommended)**

### Starting socket with **QR-CODE**

&gt; [!TIP]
&gt; You can customize browser name if you connect with **QR-CODE**, with `Browser` constant, we have some browsers config, **see [here](https://baileys.whiskeysockets.io/types/BrowsersMap.html)**

```ts
import makeWASocket from &#039;@whiskeysockets/baileys&#039;

const sock = makeWASocket({
    // can provide additional config here
    browser: Browsers.ubuntu(&#039;My App&#039;),
    printQRInTerminal: true
})
```

If the connection is successful, you will see a QR code printed on your terminal screen, scan it with WhatsApp on your phone and you&#039;ll be logged in!

### Starting socket with **Pairing Code**


&gt; [!IMPORTANT]
&gt; Pairing Code isn&#039;t Mobile API, it&#039;s a method to connect Whatsapp Web without QR-CODE, you can connect only with one device, see [here](https://faq.whatsapp.com/1324084875126592/?cms_platform=web)

The phone number can&#039;t have `+` or `()` or `-`, only numbers, you must provide country code

```ts
import makeWASocket from &#039;@whiskeysockets/baileys&#039;

const sock = makeWASocket({
    // can provide additional config here
    printQRInTerminal: false //need to be false
})

if (!sock.authState.creds.registered) {
    const number = &#039;XXXXXXXXXXX&#039;
    const code = await sock.requestPairingCode(number)
    console.log(code)
}
```

### Receive Full History

1. Set `syncFullHistory` as `true`
2. Baileys, by default, use chrome browser config
    - If you&#039;d like to emulate a desktop connection (and receive more message history), this browser setting to your Socket config:

```ts
const sock = makeWASocket({
    ...otherOpts,
    // can use Windows, Ubuntu here too
    browser: Browsers.macOS(&#039;Desktop&#039;),
    syncFullHistory: true
})
```

## Important Notes About Socket Config

### Caching Group Metadata (Recommended)
- If you use baileys for groups, we recommend you to set `cachedGroupMetadata` in socket config, you need to implement a cache like this:

    ```ts
    const groupCache = new NodeCache({stdTTL: 5 * 60, useClones: false})

    const sock = makeWASocket({
        cachedGroupMetadata: async (jid) =&gt; groupCache.get(jid)
    })

    sock.ev.on(&#039;groups.update&#039;, async ([event]) =&gt; {
        const metadata = await sock.groupMetadata(event.id)
        groupCache.set(event.id, metadata)
    })

    sock.ev.on(&#039;group-participants.update&#039;, async (event) =&gt; {
        const metadata = await sock.groupMetadata(event.id)
        groupCache.set(event.id, metadata)
    })
    ```

### Improve Retry System &amp; Decrypt Poll Votes
- If you want to improve sending message, retrying when error occurs and decrypt poll votes, you need to have a store and set `getMessage` config in socket like this:
    ```ts
    const sock = makeWASocket({
        getMessage: async (key) =&gt; await getMessageFromStore(key)
    })
    ```

### Receive Notifications in Whatsapp App
- If you want to receive notifications in whatsapp app, set `markOnlineOnConnect` to `false`
    ```ts
    const sock = makeWASocket({
        markOnlineOnConnect: false
    })
    ```
## Saving &amp; Restoring Sessions

You obviously don&#039;t want to keep scanning the QR code every time you want to connect. 

So, you can load the credentials to log back in:
```ts
import makeWASocket, { useMultiFileAuthState } from &#039;@whiskeysockets/baileys&#039;

const { state, saveCreds } = await useMultiFileAuthState(&#039;auth_info_baileys&#039;)

// will use the given state to connect
// so if valid credentials are available -- it&#039;ll connect without QR
const sock = makeWASocket({ auth: state })

// this will be called as soon as the credentials are updated
sock.ev.on(&#039;creds.update&#039;, saveCreds)
```

&gt; [!IMPORTANT]
&gt; `useMultiFileAuthState` is a utility function to help save the auth state in a single folder, this function serves as a good guide to help write auth &amp; key states for SQL/no-SQL databases, which I would recommend in any production grade system.

&gt; [!NOTE]
&gt; When a message is received/sent, due to signal sessions needing updating, the auth keys (`authState.keys`) will update. Whenever that happens, you must save the updated keys (`authState.keys.set()` is called). Not doing so will prevent your messages from reaching the recipient &amp; cause other unexpected consequences. The `useMultiFileAuthState` function automatically takes care of that, but for any other serious implementation -- you will need to be very careful with the key state management.

## Handling Events

- Baileys uses the EventEmitter syntax for events. 
They&#039;re all nicely typed up, so you shouldn&#039;t have any issues with an Intellisense editor like VS Code.

&gt; [!IMPORTANT]
&gt; **The events are [these](https://baileys.whiskeysockets.io/types/BaileysEventMap.html)**, it&#039;s important you see all events

You can listen to these events like this:
```ts
const sock = makeWASocket()
sock.ev.on(&#039;messages.upsert&#039;, ({ messages }) =&gt; {
    console.log(&#039;got messages&#039;, messages)
})
```

### Example to Start

&gt; [!NOTE]
&gt; This example includes basic auth storage too

```ts
import makeWASocket, { DisconnectReason, useMultiFileAuthState } from &#039;@whiskeysockets/baileys&#039;
import { Boom } from &#039;@hapi/boom&#039;

async function connectToWhatsApp () {
    const { state, saveCreds } = await useMultiFileAuthState(&#039;auth_info_baileys&#039;)
    const sock = makeWASocket({
        // can provide additional config here
        auth: state,
        printQRInTerminal: true
    })
    sock.ev.on(&#039;connection.update&#039;, (update) =&gt; {
        const { connection, lastDisconnect } = update
        if(connection === &#039;close&#039;) {
            const shouldReconnect = (lastDisconnect.error as Boom)?.output?.statusCode !== DisconnectReason.loggedOut
            console.log(&#039;connection closed due to &#039;, lastDisconnect.error, &#039;, reconnecting &#039;, shouldReconnect)
            // reconnect if not logged out
            if(shouldReconnect) {
                connectToWhatsApp()
            }
        } else if(connection === &#039;open&#039;) {
            console.log(&#039;opened connection&#039;)
        }
    })
    sock.ev.on(&#039;messages.upsert&#039;, event =&gt; {
        for (const m of event.messages) {
            console.log(JSON.stringify(m, undefined, 2))

            console.log(&#039;replying to&#039;, m.key.remoteJid)
            await sock.sendMessage(m.key.remoteJid!, { text: &#039;Hello Word&#039; })
        }
    })

    // to storage creds (session info) when it updates
    sock.ev.on(&#039;creds.update&#039;, saveCreds)
}
// run in main file
connectToWhatsApp()
```

&gt; [!IMPORTANT]
&gt; In `messages.upsert` it&#039;s recommended to use a loop like `for (const message of event.messages)` to handle all messages in array

### Decrypt Poll Votes

- By default poll votes are encrypted and handled in `messages.update`
- That&#039;s a simple example
```ts
sock.ev.on(&#039;messages.update&#039;, event =&gt; {
    for(const { key, update } of event) {
        if(update.pollUpdates) {
            const pollCreation = await getMessage(key)
            if(pollCreation) {
                console.log(
                    &#039;got poll update, aggregation: &#039;,
                    getAggregateVotesInPollMessage({
                        message: pollCreation,
                        pollUpdates: update.pollUpdates,
                    })
                )
            }
        }
    }
})
```

- `getMessage` is a [store](#implementing-a-data-store) implementation (in your end)

### Summary of Events on First Connection

1. When you connect first time, `connection.update` will be fired requesting you to restart sock
2. Then, history messages will be received in `messaging.history-set`

## Implementing a Data Store

- Baileys does not come with a defacto storage for chats, contacts, or messages. However, a simple in-memory implementation has been provided. The store listens for chat updates, new messages, message updates, etc., to always have an up-to-date version of the data.

&gt; [!IMPORTANT]
&gt; I highly recommend building your own data store, as storing someone&#039;s entire chat history in memory is a terrible waste of RAM.

It can be used as follows:

```ts
import makeWASocket, { makeInMemoryStore } from &#039;@whiskeysockets/baileys&#039;
// the store maintains the data of the WA connection in memory
// can be written out to a file &amp; read from it
const store = makeInMemoryStore({ })
// can be read from a file
store.readFromFile(&#039;./baileys_store.json&#039;)
// saves the state to a file every 10s
setInterval(() =&gt; {
    store.writeToFile(&#039;./baileys_store.json&#039;)
}, 10_000)

const sock = makeWASocket({ })
// will listen from this socket
// the store can listen from a new socket once the current socket outlives its lifetime
store.bind(sock.ev)

sock.ev.on(&#039;chats.upsert&#039;, () =&gt; {
    // can use &#039;store.chats&#039; however you want, even after the socket dies out
    // &#039;chats&#039; =&gt; a KeyedDB instance
    console.log(&#039;got chats&#039;, store.chats.all())
})

sock.ev.on(&#039;contacts.upsert&#039;, () =&gt; {
    console.log(&#039;got contacts&#039;, Object.values(store.contacts))
})

```

The store also provides some simple functions such as `loadMessages` that utilize the store to speed up data retrieval.

## Whatsapp IDs Explain

- `id` is the WhatsApp ID, called `jid` too, of the person or group you&#039;re sending the message to. 
    - It must be in the format ```[country code][phone number]@s.whatsapp.net```
	    - Example for people: ```+19999999999@s.whatsapp.net```. 
	    - For groups, it must be in the format ``` 123456789-123345@g.us ```. 
    - For broadcast lists, it&#039;s `[timestamp of creation]@broadcast`.
    - For stories, the ID is `status@broadcast`.

## Utility Functions

- `getContentType`, returns the content type for any message
- `getDevice`, returns the device from message
- `makeCacheableSignalKeyStore`, make auth store more fast
- `downloadContentFromMessage`, download content from any message

## Sending Messages

- Send all types of messages with a single function
    - **[Here](https://baileys.whiskeysockets.io/types/AnyMessageContent.html) you can see all message contents supported, like text message**
    - **[Here](https://baileys.whiskeysockets.io/types/MiscMessageGenerationOptions.html) you can see all options supported, like quote message**

    ```ts
    const jid: string
    const content: AnyMessageContent
    const options: MiscMessageGenerationOptions

    sock.sendMessage(jid, content, options)
    ```

### Non-Media Messages

#### Text Message
```ts
await sock.sendMessage(jid, { text: &#039;hello word&#039; })
```

#### Quote Message (works with all types)
```ts
await sock.sendMessage(jid, { text: &#039;hello word&#039; }, { quoted: message })
```

#### Mention User 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mozilla/pdf.js]]></title>
            <link>https://github.com/mozilla/pdf.js</link>
            <guid>https://github.com/mozilla/pdf.js</guid>
            <pubDate>Wed, 30 Jul 2025 00:05:07 GMT</pubDate>
            <description><![CDATA[PDF Reader in JavaScript]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mozilla/pdf.js">mozilla/pdf.js</a></h1>
            <p>PDF Reader in JavaScript</p>
            <p>Language: JavaScript</p>
            <p>Stars: 51,402</p>
            <p>Forks: 10,385</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre># PDF.js [![CI](https://github.com/mozilla/pdf.js/actions/workflows/ci.yml/badge.svg?query=branch%3Amaster)](https://github.com/mozilla/pdf.js/actions/workflows/ci.yml?query=branch%3Amaster)

[PDF.js](https://mozilla.github.io/pdf.js/) is a Portable Document Format (PDF) viewer that is built with HTML5.

PDF.js is community-driven and supported by Mozilla. Our goal is to
create a general-purpose, web standards-based platform for parsing and
rendering PDFs.

## Contributing

PDF.js is an open source project and always looking for more contributors. To
get involved, visit:

+ [Issue Reporting Guide](https://github.com/mozilla/pdf.js/blob/master/.github/CONTRIBUTING.md)
+ [Code Contribution Guide](https://github.com/mozilla/pdf.js/wiki/Contributing)
+ [Frequently Asked Questions](https://github.com/mozilla/pdf.js/wiki/Frequently-Asked-Questions)
+ [Good Beginner Bugs](https://github.com/mozilla/pdf.js/issues?q=is%3Aissue%20state%3Aopen%20label%3Agood-beginner-bug)
+ [Projects](https://github.com/mozilla/pdf.js/projects)

Feel free to stop by our [Matrix room](https://chat.mozilla.org/#/room/#pdfjs:mozilla.org) for questions or guidance.

## Getting Started

### Online demo

Please note that the &quot;Modern browsers&quot; version assumes native support for the
latest JavaScript features; please also see [this wiki page](https://github.com/mozilla/pdf.js/wiki/Frequently-Asked-Questions#faq-support).

+ Modern browsers: https://mozilla.github.io/pdf.js/web/viewer.html

+ Older browsers: https://mozilla.github.io/pdf.js/legacy/web/viewer.html

### Browser Extensions

#### Firefox

PDF.js is built into version 19+ of Firefox.

#### Chrome

+ The official extension for Chrome can be installed from the [Chrome Web Store](https://chrome.google.com/webstore/detail/pdf-viewer/oemmndcbldboiebfnladdacbdfmadadm).
*This extension is maintained by [@Rob--W](https://github.com/Rob--W).*
+ Build Your Own - Get the code as explained below and issue `npx gulp chromium`. Then open
Chrome, go to `Tools &gt; Extension` and load the (unpackaged) extension from the
directory `build/chromium`.

## Getting the Code

To get a local copy of the current code, clone it using git:

    $ git clone https://github.com/mozilla/pdf.js.git
    $ cd pdf.js

Next, install Node.js via the [official package](https://nodejs.org) or via
[nvm](https://github.com/creationix/nvm). If everything worked out, install
all dependencies for PDF.js:

    $ npm install

Finally, you need to start a local web server as some browsers do not allow opening
PDF files using a `file://` URL. Run:

    $ npx gulp server

and then you can open:

+ http://localhost:8888/web/viewer.html

Please keep in mind that this assumes the latest version of Mozilla Firefox; refer to [Building PDF.js](https://github.com/mozilla/pdf.js/blob/master/README.md#building-pdfjs) for non-development usage of the PDF.js library.

It is also possible to view all test PDF files on the right side by opening:

+ http://localhost:8888/test/pdfs/?frame

## Building PDF.js

In order to bundle all `src/` files into two production scripts and build the generic
viewer, run:

    $ npx gulp generic

If you need to support older browsers, run:

    $ npx gulp generic-legacy

This will generate `pdf.js` and `pdf.worker.js` in the `build/generic/build/` directory (respectively `build/generic-legacy/build/`).
Both scripts are needed but only `pdf.js` needs to be included since `pdf.worker.js` will
be loaded by `pdf.js`. The PDF.js files are large and should be minified for production.

## Using PDF.js in a web application

To use PDF.js in a web application you can choose to use a pre-built version of the library
or to build it from source. We supply pre-built versions for usage with NPM under
the `pdfjs-dist` name. For more information and examples please refer to the
[wiki page](https://github.com/mozilla/pdf.js/wiki/Setup-pdf.js-in-a-website) on this subject.

## Including via a CDN

PDF.js is hosted on several free CDNs:
 - https://www.jsdelivr.com/package/npm/pdfjs-dist
 - https://cdnjs.com/libraries/pdf.js
 - https://unpkg.com/pdfjs-dist/

## Learning

You can play with the PDF.js API directly from your browser using the live demos below:

+ [Interactive examples](https://mozilla.github.io/pdf.js/examples/index.html#interactive-examples)

More examples can be found in the [examples folder](https://github.com/mozilla/pdf.js/tree/master/examples/). Some of them are using the pdfjs-dist package, which can be built and installed in this repo directory via `npx gulp dist-install` command.

For an introduction to the PDF.js code, check out the presentation by our
contributor Julian Viereck:

+ https://www.youtube.com/watch?v=Iv15UY-4Fg8

More learning resources can be found at:

+ https://github.com/mozilla/pdf.js/wiki/Additional-Learning-Resources

The API documentation can be found at:

+ https://mozilla.github.io/pdf.js/api/

## Questions

Check out our FAQs and get answers to common questions:

+ https://github.com/mozilla/pdf.js/wiki/Frequently-Asked-Questions

Talk to us on Matrix:

+ https://chat.mozilla.org/#/room/#pdfjs:mozilla.org

File an issue:

+ https://github.com/mozilla/pdf.js/issues/new/choose
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[xszyou/Fay]]></title>
            <link>https://github.com/xszyou/Fay</link>
            <guid>https://github.com/xszyou/Fay</guid>
            <pubDate>Wed, 30 Jul 2025 00:05:06 GMT</pubDate>
            <description><![CDATA[fayÊòØ‰∏Ä‰∏™Â∏ÆÂä©Êï∞Â≠ó‰∫∫Ôºà2.5d„ÄÅ3d„ÄÅÁßªÂä®„ÄÅpc„ÄÅÁΩëÈ°µÔºâÊàñÂ§ßËØ≠Ë®ÄÊ®°ÂûãÔºàopenaiÂÖºÂÆπ„ÄÅdeepseekÔºâËøûÈÄö‰∏öÂä°Á≥ªÁªüÁöÑmcpÊ°ÜÊû∂„ÄÇ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/xszyou/Fay">xszyou/Fay</a></h1>
            <p>fayÊòØ‰∏Ä‰∏™Â∏ÆÂä©Êï∞Â≠ó‰∫∫Ôºà2.5d„ÄÅ3d„ÄÅÁßªÂä®„ÄÅpc„ÄÅÁΩëÈ°µÔºâÊàñÂ§ßËØ≠Ë®ÄÊ®°ÂûãÔºàopenaiÂÖºÂÆπ„ÄÅdeepseekÔºâËøûÈÄö‰∏öÂä°Á≥ªÁªüÁöÑmcpÊ°ÜÊû∂„ÄÇ</p>
            <p>Language: JavaScript</p>
            <p>Stars: 11,599</p>
            <p>Forks: 2,116</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>
&lt;div align=&quot;center&quot;&gt;
    &lt;br&gt;
    &lt;img src=&quot;readme/icon.png&quot; alt=&quot;Fay&quot;&gt;
    &lt;h1&gt;FAY&lt;/h1&gt;
	&lt;h3&gt;FayÊï∞Â≠ó‰∫∫Ê°ÜÊû∂&lt;/h3&gt;
&lt;/div&gt;

ÔºÅÔºÅÈáçË¶ÅÈÄöÁü•ÔºöÊàë‰ª¨Â∑≤ÁªèÊääFayÁöÑ‰∏â‰∏™ÁâàÊú¨ÂêàÂπ∂Êàê1‰∏™ÔºåÂπ∂Ëá¥ÂäõÊèê‰æõÊõ¥Á®≥ÂÆöÊõ¥ÂÖ®Èù¢ÁöÑÂäüËÉΩ„ÄÇ

Êàë‰ª¨Ëá¥Âäõ‰∫éÊÄùËÄÉÈù¢ÂêëÁªàÁ´ØÁöÑÊï∞Â≠ó‰∫∫ËêΩÂú∞Â∫îÁî®ÔºåÂπ∂ÈÄöËøáÂÆåÊï¥‰ª£Á†ÅÊääÊÄùËÄÉÁªìÊûúÂëàÁé∞ÁªôÂ§ßÂÆ∂„ÄÇFayÊï∞Â≠ó‰∫∫Ê°ÜÊû∂ÔºåÂêë‰∏äÈÄÇÈÖçÂêÑÁßçÊï∞Â≠ó‰∫∫Ê®°ÂûãÊäÄÊúØÔºåÂêë‰∏ãÊé•ÂÖ•ÂêÑÂºèÂ§ßËØ≠Ë®ÄÊ®°ÂûãÔºåÂπ∂‰∏î‰æø‰∫éÊõ¥Êç¢ËØ∏Â¶ÇTTS„ÄÅASRÁ≠âÊ®°ÂûãÔºå‰∏∫ÂçïÁâáÊú∫„ÄÅapp„ÄÅÁΩëÁ´ôÊèê‰æõÂÖ®Èù¢ÁöÑÊï∞Â≠ó‰∫∫Â∫îÁî®Êé•Âè£„ÄÇ      
Êõ¥Êñ∞Êó•ÂøóÔºöhttps://qqk9ntwbcit.feishu.cn/wiki/UlbZwfAXgiKSquk52AkcibhHngg
ÊñáÊ°£Ôºöhttps://qqk9ntwbcit.feishu.cn/wiki/JzMJw7AghiO8eHktMwlcxznenIg


## **ÂäüËÉΩÁâπÁÇπ**



- ÂÆåÂÖ®ÂºÄÊ∫êÔºåÂïÜÁî®ÂÖçË¥£
- ÊîØÊåÅÂÖ®Á¶ªÁ∫ø‰ΩøÁî®
- ÂÖ®Êó∂ÊµÅÂºèÁöÑÊîØÊåÅ
- Ëá™Áî±ÂåπÈÖçÊï∞Â≠ó‰∫∫Ê®°Âûã„ÄÅÂ§ßËØ≠Ë®ÄÊ®°Âûã„ÄÅASR„ÄÅTTSÊ®°Âûã
- ÊîØÊåÅÊï∞Â≠ó‰∫∫Ëá™Âä®Êí≠Êä•Ê®°ÂºèÔºàËôöÊãüÊïôÂ∏à„ÄÅËôöÊãü‰∏ªÊí≠„ÄÅÊñ∞ÈóªÊí≠Êä•Ôºâ
- ÊîØÊåÅ‰ªªÊÑèÁªàÁ´Ø‰ΩøÁî®ÔºöÂçïÁâáÊú∫„ÄÅapp„ÄÅÁΩëÁ´ô„ÄÅÂ§ßÂ±è„ÄÅÊàêÁÜüÁ≥ªÁªüÊé•ÂÖ•Á≠â
- ÊîØÊåÅÂ§öÁî®Êà∑Â§öË∑ØÂπ∂Âèë
- Êèê‰æõÊñáÂ≠ó‰∫§‰∫íÊé•Âè£„ÄÅËØ≠Èü≥‰∫§‰∫íÊé•Âè£„ÄÅÊï∞Â≠ó‰∫∫È©±Âä®Êé•Âè£„ÄÅÁÆ°ÁêÜÊéßÂà∂Êé•Âè£„ÄÅËá™Âä®Êí≠Êä•Êé•Âè£„ÄÅÊÑèÂõæÊé•Âè£
- ÊîØÊåÅËØ≠Èü≥Êåá‰ª§ÁÅµÊ¥ªÈÖçÁΩÆÊâßË°å
- ÊîØÊåÅËá™ÂÆö‰πâÁü•ËØÜÂ∫ì„ÄÅËá™ÂÆö‰πâÈóÆÁ≠îÂØπ„ÄÅËá™ÂÆö‰πâ‰∫∫ËÆæ‰ø°ÊÅØ
- ÊîØÊåÅÂî§ÈÜíÂèäÊâìÊñ≠ÂØπËØù
- ÊîØÊåÅÊúçÂä°Âô®ÂèäÂçïÊú∫Ê®°Âºè
- ÊîØÊåÅÊú∫Âô®‰∫∫Ë°®ÊÉÖËæìÂá∫
- ÊîØÊåÅreact agentËá™‰∏ªÂÜ≥Á≠ñÊâßË°å„ÄÅ‰∏ªÂä®ÂØπËØùÔºàÂáÜÂ§áÂçáÁ∫ßÂà∞MCPÂçèËÆÆÔºâ
- ÊîØÊåÅÂêéÂè∞ÈùôÈªòÂêØÂä®
- ÊîØÊåÅdeepseekÁ≠âthinking llm
- ËÆæËÆ°Áã¨ÁâπÁöÑËÆ§Áü•Ê®°Âûã
- ÊîØÊåÅMCP
- Êèê‰æõÈÖçÁΩÆÁÆ°ÁêÜ‰∏≠ÂøÉ

###               

## **FayÊï∞Â≠ó‰∫∫Ê°ÜÊû∂**

![](readme/chat.png)

![](readme/controller.png)

![](readme/mcp.png)






## **Ê∫êÁ†ÅÂêØÂä®**


### **ÁéØÂ¢É** 
- Python 3.12

- Windows„ÄÅmacos„ÄÅubuntu

- Ê≥®ÔºöubuntuÈúÄË¶ÅÂÖàÂÆâË£ÖgccÂèäportaudio

- ````bash
  sudo apt update
  sudo apt install build-essential
  sudo apt install portaudio19-dev
  ````

  

### **ÂÆâË£Ö‰æùËµñ**

```shell
pip install -r requirements.txt
```

### **ÈÖçÁΩÆ**
+ ‰æùÁÖßËØ¥Êòé‰øÆÊîπ `./system.conf` Êñá‰ª∂

### **ÂêØÂä®**
ÂêØÂä®FayÊéßÂà∂Âô®
```shell
python main.py
```



## **ÈïúÂÉèÂø´ÈÄüÂêØÂä®**

https://www.compshare.cn/images/compshareImage-1cft3sk9gvta?ytag=GPU_fay

## **È´òÁ∫ßÁé©Ê≥ï**

![](readme/interface.png)



### ***‰ΩøÁî®Êï∞Â≠ó‰∫∫ÔºàÈùûÂøÖÈ°ªÔºâ***

ue: https://github.com/xszyou/fay-ue5

unityÔºöhttps://qqk9ntwbcit.feishu.cn/wiki/Se9xw04hUiss00kb2Lmci1BVnM9

metahuman-streamÔºà2dÔºâÔºöhttps://qqk9ntwbcit.feishu.cn/wiki/Ik1kwO9X5iilnGkFwRhcnmtvn3e

duixÔºàandroid)Ôºöhttps://qqk9ntwbcit.feishu.cn/wiki/Ik1kwO9X5iilnGkFwRhcnmtvn3e()

aibote(windows cpuÂÖãÈöÜ‰∫∫)Ôºöhttps://qqk9ntwbcit.feishu.cn/wiki/ULaywzVRti0HXWkhCzacoSPAnIg



### ***ÈõÜÊàêÂà∞Ëá™ÂÆ∂‰∫ßÂìÅÔºàÈùûÂøÖÈ°ªÔºâ***
Êé•Âè£Ôºöhttps://qqk9ntwbcit.feishu.cn/wiki/Mcw3wbA3RiNZzwkexz6cnKCsnhh



### **ËÅîÁ≥ª**

**‰∫§ÊµÅÁæ§ÂèäËµÑÊñôÊïôÁ®ã**ÂÖ≥Ê≥®ÂÖ¨‰ºóÂè∑ **fayÊï∞Â≠ó‰∫∫**Ôºà**ËØ∑ÂÖàstarÊú¨‰ªìÂ∫ì**Ôºâ

![](readme/gzh.jpg)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[poteto/hiring-without-whiteboards]]></title>
            <link>https://github.com/poteto/hiring-without-whiteboards</link>
            <guid>https://github.com/poteto/hiring-without-whiteboards</guid>
            <pubDate>Wed, 30 Jul 2025 00:05:05 GMT</pubDate>
            <description><![CDATA[‚≠êÔ∏è Companies that don't have a broken hiring process]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/poteto/hiring-without-whiteboards">poteto/hiring-without-whiteboards</a></h1>
            <p>‚≠êÔ∏è Companies that don't have a broken hiring process</p>
            <p>Language: JavaScript</p>
            <p>Stars: 49,059</p>
            <p>Forks: 3,809</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre># Hiring Without Whiteboards

A list of companies (or teams) that don&#039;t do &quot;whiteboard&quot; interviews. &quot;Whiteboards&quot; is used as a metaphor, and is a _symbol_ for the kinds of CS trivia questions that are associated with bad interview practices. Whiteboards are not bad ‚Äì CS trivia questions are. Using sites like HackerRank/LeetCode _probably_ fall into a similar category.

The companies and teams listed here use interview techniques and questions that resemble day-to-day work. For example, pairing on a real world problem or a paid/unpaid take home exercise. Read (and contribute to) [our recommendations](RECOMMENDATIONS.md) for ways to conduct better interviews.

### tl;dr

- Discussing a real world problem (with or without whiteboard) is üëç
- Solving CS trivia, technical puzzles, riddles, brainteasers (with or without whiteboard) is üëé

Please open a [PR](https://github.com/poteto/hiring-without-whiteboards/pull/new/master) to be added.

### Duds

If you&#039;ve been through an interview with one of these companies recently, and your experience suggests otherwise from their description, please open a [PR](https://github.com/poteto/hiring-without-whiteboards/pull/new/master) to remove them from this list.

### I want to search/sort/filter/group by X!

Check out our [Airtable](https://airtable.com/shr3eGPDm3wGjT2gA)!

Additions to this document that are properly formatted will automatically be pushed and added to Airtable. Keywords from the description will also be extracted. You can see (and contribute!) to the [API here](https://github.com/poteto/hww-api).

Also check out [No Whiteboards](https://www.nowhiteboard.org) to search for jobs at these companies.

### Discussion and other reads

&lt;!--lint disable--&gt;

- Discussion
  - [HackerNews (2017)](https://news.ycombinator.com/item?id=13874026)
  - [HackerNews (2020)](https://news.ycombinator.com/item?id=23981795)
- [Finding a better alternative to the whiteboard interview](https://theoutline.com/post/1256/finding-a-better-alternative-to-the-whiteboard-interview)
- [How to hire engineering talent without the BS](https://jes.al//2023/03/how-to-hire-engineering-talent-without-the-bs/)
- [How I Hire Programmers](http://www.aaronsw.com/weblog/hiring.en) by Aaron Swartz

&lt;!--lint enable--&gt;

---

## 0 - 9

- [1000.software](https://www.1000.software/careers) | Krakow, Poland / Remote | Series of 2 interviews first on soft skills, second on technical skills (how to build things, how to solve specific, real world problem, best practice) and meeting with a team leader. Sometimes a take home, simple project.

## A - C

- [Aalyria](https://www.aalyria.com/jobs) | Remote | Timeboxed design exercise and related coding exercise, followed by a technical/behavioral discussion with the team, and behavioral interview with leadership
- [Able](https://able.co/careers) | Lima, PE / Remote | Coding interview, Technical interview (Backlog Refinement + System Design), Leadership interview (Behavioural)
- [Abstract](https://angel.co/abstract/jobs) | San Francisco, CA
- [Accenture](https://www.accenture.com/us-en/careers) | San Francisco, CA / Los Angeles, CA / New York, NY / Kuala Lumpur, Malaysia | Technical phone discussion with architecture manager, followed by behavioral interview focusing on soft skills
- [Accredible](https://www.accredible.com/careers) | Cambridge, UK / San Francisco, CA / Remote | Take home project, then a pair-programming and discussion onsite / Skype round.
- [Acko](https://www.acko.com/careers) | Mumbai, India | Phone interview, followed by a small take home problem. Finally a F2F or skype pair programming session
- [Acumen](https://www.acumenci.com/careers/) | London, UK | Small take home test, and sit in on some sprint rituals on-site
- [Ad Hoc](https://adhoc.team) | Remote / Washington, DC | Technical take-home assignment, followed by multiple video calls that are discussions of technical background and experience.
- [Adaface](https://www.adaface.com) | Remote/ Singapore, Singapore / Bangalore, India | Conversational on-the-job technical assessment, followed by video calls with technical lead and founders
- [AdCellerant](https://adcellerant.com/career-job-listing/) | Denver, CO | Technical phone screen, 5-day take home code challenge, then on-site interview comprised of cultural and technical discussions
- [Adeva](https://adevait.com) | New York, USA | 4 steps interviewing process that includes online coding assignment + lead engineer call.
- [AdEx Network](https://www.adex.network) | Sofia, Bulgaria / Remote | Email screening process, followed by a take-home assignment
- [Admiral](https://getadmiral.com) | Gainesville, FL / Remote | Intro phone call with hiring manager, take-home assignment, (mostly) non-technical on-site with team/leadership
- [Adnymics](https://adnymics.com) | Munich, DE | Take home project, then work with the team for a day
- [Adthena](https://adthena.com) | London, UK | Takehome project and discussion on-site
- [Adyen](https://www.adyen.com) | Amsterdam, NL | Take-home assignment, design discussion based on take home, culture fit etc. Provides visa sponsorship to the Netherlands.
- [Affinipay](https://www.affinipay.com) | Austin, TX | Short takehome project + video interview about coding with engineering manager
- [Agency Enterprise Studio](https://ae.studio) | Remote / Los Angeles, CA / Florian√≥polis, Brazil | Live coding of a task you&#039;d do daily
- [Ageno](https://ageno.pl) | Bielsko-Biala, Poland | Simple Magento Take-home project and discussion on the real world problems.
- [AgileMD](https://angel.co/agilemd/jobs) | San Francisco, CA | Takehome project
- [AImotive](https://aimotive.com/career/) | Budapest, Hungary | Small take-home project, then in-person interview about technical background
- [Airbase](https://www.airbase.com/careers) | San Francisco, CA; Bangalore, India; Remote | Intro Call with HR or EMs, small take-home project, two tech rounds with Airbase Engineers (based on real world engineering problems), followed by a final values round with the Founder or Director of Engineering.
- [Airtable](https://airtable.com/careers) | San Francisco, CA; Austin, TX; Mountain View, CA; New York, NY; Remote | Take home project that resembles a problem Airtable solves for. Five hour on-site which includes a discussion of the project, UI design, discussing architectural tradeoffs, and code debugging.
- [Aiwip](https://aiwip.com) | London, UK | Skype/phone interview followed by takehome project or worksample (or whiteboard)
- [Albert](https://jobs.lever.co/meetalbert/) | Los Angeles, CA | Discussion with senior engineer, and then practical pair programming related to my experience + the position
- [Algolia](https://www.algolia.com/careers) | Paris, France / San Francisco, CA | Takehome project &amp; Onsite discussions and presentation
- [all about apps GmbH](https://www.allaboutapps.at/jobs) | Vienna, Austria | 2-phase technical discussion &amp; examination with department heads and management.
- [Allegro](https://allegro.pl/praca) | Warsaw, Poland; Poznan, Poland; Torun, Poland; Wroclaw, Poland; Krakow, Poland | Take home, simple project. Series of 2 technical interviews (how to build things, how to solve specific, real world problem) and meeting with a team leader.
- [Alluxi](https://www.alluxi.mx) | Monterrey, Mexico | Initial skype interview, technical interview with Senior engineer and work sample review.
- [Almabase](https://www.almabase.com/careers#believe) | Bengaluru, India | Take-home assignment, design discussion based on take home, low level and high level design rounds based on real life problems, culture fit etc. during onsite.
- [AlphaSights](https://www.alphasights.com/careers/open-roles/) | London, UK / New York, NY / Remote | Initial interview, pair programming then final round with general technical questions
- [AMAGI](https://amagi.io) | Makati, Philippines | 1) Review of your resume, portfolio, and/or GitHub profile; 2) 1 hour discussion (in-person or Skype) about your goals, experience, personal culture, and how to apply technical solutions to real problems;
- [Analytical Flavor Systems](https://gastrograph.com) | Manhattan, New York | Code sample or take-home project, both with discussion.
- [Anderson Merchandisers](https://amerch.com) | Remote / Dallas, TX | Technical discussion about the technologies they are currently using. Going over background and resume.
- [Angaza](https://www.angaza.com/careers/) | San Francisco, CA | Take-home assignment with guaranteed feedback, on-site interviews involving actual day-to-day work
- [Animech](https://careers.animech.com) | Uppsala, Sweden | Multiple interviews with technical staff with real problem discussions.
- [Anyfin](https://career.anyfin.com) | Stockholm, Sweden | Takehome project &amp; Onsite discussions and presentation.
- [Aparkado](https://aparkado.de) | Cologne, Germany / Remote | Intro with Co-Founder, team fit with the team plus a small real-world problem to solve, followed by final round with CEO / Co-Founder.
- [Apollo Agriculture](https://apolloagriculture.com) | Nairobi, Kenya / Remote | Takehome project or Worksample (or whiteboard)
- [Applied](https://www.beapplied.com) | London, UK | Situational judgement tests focusing on real-world soft skills (online then in structured interview)
- [Arachnys](https://angel.co/arachnys/jobs/220465-software-engineer) | London, UK | Take home test, real world pair programming
- [Articulate](https://www.articulate.com/about/careers/) | Remote | Take-home project &amp; pair program on a problem similar to daily work
- [Artsy](https://www.artsy.net/jobs#engineering) | New York, NY / London, UK / Berlin, Germany / Los Angeles, CA / Hong Kong, Hong Kong / Remote | Our process: 1) Informal chat 2) Application 3) Phone screen 4) In-person interview with 1 lead, 2 individual contributors and 1 non-engineer (30-45 mins each), focusing on your work habits and expertise as demonstrated in your previous work 5) ~4 in-depth professional reference calls (30-45 mins each).
- [ASI Data Science](https://www.asidatascience.com/careers) | London, UK | Project to work at home, general technical questions, pair programming with engineers
- [ASOS](https://www.asoscareers.com) | London, UK | Take home or in-person code refactoring exercise, in-person walk-though of solution including software craftsmanship principles and design decisions, in-person freestyle architecture walk-through
- [Ataccama](https://jobs.ataccama.com) | Prague, Czech Republic | Face to face interview (skype or onsite), coding task for 30 min, meeting with team members
- [aTech Media](https://atech.media) | London, UK | Face to face interview, review of existing open source contributions or, if none are available, asked to write a library for something that interests them
- [Atlan](https://atlan.com) | New Delhi, India | A mini project (to be done within 8 days), followed by a discussion with the team you&#039;re applying to. Then as the final step, a call with one of the founders.
- [Aura Frames](https://auraframes.com/jobs?gh_src=2ef5cfa32) | New York, NY / San Francisco, CA | Simplified real-world coding task on Coderpad.io, followed by a few hours onsite writing code in our actual codebase.
- [Auto1](https://www.auto1-group.com/jobs) | Berlin, DE | Series of Skype interviews which covers general technical questions, followed by a take-home assignment
- [Automattic](https://automattic.com/work-with-us/) | Remote | short take-home code test, then a part-time, paid project.
- [AutoScout24](https://github.com/AutoScout24/hiring) | Munich, Germany | Skype interview followed by home assignment from our day-to-day business and then on-site interview including lunch with a team
- [Avant](https://avant.com/jobs) | Chicago, IL | Pair programming interviews.
- [Avarteq GmbH](https://www.avarteq.com/career) | Berlin, Germany / Saarbr√ºcken, Germany | Technical interview with our developers on-site or remote followed by a work sample in a pair programming session or a previous take-home project with a follow-up discussion and detailed feedback.
- [Axelerant](https://www.axelerant.com/careers) | Remote | Take-home project, interviews with hr and engineering team.
- [Axiacore](https://axiacore.com) | Bogota, Colombia | We talk about on how is your process when solving problems.
- [Axios](https://www.axios.com/careers) | Arlington, VA / New York, NY / San Francisco, CA / Remote | Take-home project, with discussion.
- [B12](https://boards.greenhouse.io/b12#.WMlLfRIrJTa) | New York, NY | Take-home exercises and pair-programming with the team.
- [Babylon Health iOS Team](https://github.com/Babylonpartners/iOS-Interview-Demo) | London, UK | Take-home project, on-site presentation and discussion, design and product interview.
- [Backbase](https://workatbackbase.com) | Amsterdam, Netherlands; Cardiff, Wales; London, UK; Atlanta, GA | Takehome project, interviews
- [Badi](https://jobs.badi.com) | Barcelona, Spain | Phone Screen, Take-home project, then a discussion onsite round.
- [Badoo](https://team.badoo.com/jobs) | London, UK | Take-home project, then a discussion onsite round.
- [BAE Systems Digital Intelligence](https://cybercareers.baesystems.com) | London, UK / Manchester, UK / Guildford, UK / Gloucester, UK | Initial interview with experience based technical questions, second interview pair programming on problem similar to daily work
- [Bakken &amp; B√¶ck](https://bakkenbaeck.com/jobs) | Oslo, Norway; Amsterdam, Netherlands; Bonn, Germany | Skype interview followed by take-home assignment and a visit to one of our offices
- [Balabit](https://career.balabit.com) | Budapest, Hungary | Take-home project (medium size, with restrictions, e.g. only stdlib may be used), then discussion on-site
- [Barracuda View Team](https://www.barracuda.com/company/careers) | Chelmsford, MA / Remote | Phone screen, remote pair programming session, technical discussion interview, culture fit interview
- [Basecamp](https://basecamp.com/about/jobs) | Chicago, IL / Remote
- [BCW Group](https://www.bcw.group) | Remote | Behavioral interview with the technical lead and hiring manager, followed by a take-home project, and finally a brief discussion about how the exercise went.
- [Beam Dental](https://jobs.lever.co/beam) | Columbus, OH / Remote | Phone Screen, Take Home Project, In-Person or remote Pairing and Cross-Functional Interview
- [Belka](https://www.belkadigital.com) | Trento, Italy; Munich, Germany | We give you a small task that you can do alone and then we evaluate your work with you
- [Bemind](https://www.bemind.me) | Biella, Italy / Latina, Italy / Remote | Series of interviews, discussion about technical background and past experiences, take-home project &amp; pair programming
- [Bendyworks](https://bendyworks.com/careers) | Madison, WI | Interviews and pair programming on personal projects
- [Benefex](https://hellobenefex.com/about-us/careers) | Southampton, UK / Remote | A short, 3-stages interview process. The first stage is with HR. The second stage is a take-home assignment. The third stage is discussing the take-home assignment solution with two engineers.
- [Benshi.ai](https://www.benshi.ai) | Barcelona, Spain | Initial 15-30 mins interview with HR, followed by 15-30 mins chat with hiring manager to clear out basic concepts, then followed by take-home task for 5 days
- [Betterment](https://www.betterment.com/careers) | New York, NY | Phone interview followed by on-site pair programming to simulate a Betterment feature build.
- [BetterPT](https://www.betterhealthcare.co/careers) | New York, NY | Initial phone interview, project using our tech stack, on-site code review/pair programming and &quot;meet the team&quot;.
- [bevelop](https://bevelop.de) | Aschaffenburg, BY / Remote | Initial introductory call, on-sight or remote trial day with project
- [Big Nerd Ranch](https://bignerdranch.com/careers) | Atlanta, GA &amp; Remote | Interviews and pair programming on an internal project or problem.
- [BigaBid](https://www.bigabid.com/careers) | Tel Aviv, Israel | Design a real time solution to a problem relevant to the business, followed by a take home project implementing a lean version of the solution
- [BigBinary](https://www.bigbinary.com/jobs) | Remote | Phone discussion with a developer and the CEO
- [BioConnect](https://bioconnect.com) | Toronto, Canada | Take-home assignment &amp; discussion
- [Bitchief Technology Services](https://www.bitchief.com) | India, Gurgaon | Screening Round: General comms and aptitude, Technical Round: Questions related to required technology, Home Assignments
- [bitExpert AG](https://www.bitexpert.de/karriere) | Mannheim, Germany | Interview with experience based technical questions
- [Bitpanda](https://www.bitpanda.com/en/career) | Cracow, Poland / Remote | HR talk, take-home task, tech interview, culture fit interview
- [Bits of Love](https://www.bitsoflove.be/careers) | Bruges, Belgium | In-person interview to evaluate experience and motivation, potentially followed by take-home project.
- [Bitso](https://bitso.com/jobs) | Mexico City, Mexico / Remote | Intro phone or hangouts/skype call with People team, take home project followed by walkthrough of your code and some tech questions focused on your experience, founders video call with one of the founders
- [Blackdot Solutions](https://blackdotsolutions.com) | Cambridge, UK | Take-home project followed by on-site face-to-face walkthru of your code focusing on decisions/reasoning/technology used.
- [BlackTech](https://blacktech.com.np) | Pokhara, NP | Take-home project followed by on-site face to face or remote video conference interview.
- [Bleacher Report](https://bleacherreport.com) | San Francisco, CA, USA | Take-home project; on-site discussion about the project and meeting with different teams
- [Blendle](https://blendle.homerun.co/?lang=en) | Utrecht, The Netherlands | Take-home project &amp; pair program on a problem similar to daily work
- [blogfoster](https://github.com/blogfoster/join-the-engineering-team) | Berlin, Germany | Take-home project, discussion on-site
- [Bloom Works](https://bloomworks.digital/jobs) | Remote | Discussion, pair-programming exercise
- [Blue Bottle Coffee](https://www.bluebottlecoffee.com) | Oakland, CA | Technical Phone Screen, Take Home Challenge, Technical in-persons.
- [Bluesoft](http://www.bluesoft.com.br) | S√£o Paulo, Brazil | Takehome project and an interview to evaluate the candidate&#039;s previous experience.
- [Bocoup](https://bocoup.com/careers) | Boston, MA / Remote | Pair programming with personal laptop on typical problem seen at work
- [Bonusly](https://bonus.ly/careers) | Boulder, CO | Values &amp; Tech focused interview - Process: 30 minute with HR, 45 minute Google Meet interview with 2 team members, ~2-4 hour take-home project, on-site interview involving 2 values-alignment interviews and 1 technical interview going over your take home project
- [BookingSync](https://www.bookingsync.com/en/jobs) | Remote | Small takehome project, interviews over skype with team members.
- [BoomTown](https://boomtownroi.com) | Charleston, SC / Atlanta, GA / Remote | Conversational in-person interviews with potential team members and managers that revolve around past experience and how that could be applied to future work
- [Botika](https://botika.ai) | San Marino, RSM | View code, projects, libraries or any other open source story that you have been a part of, take-home project followed by on-site face-to-face walkthru of your code focusing on decisions/reasoning/technology used.
- [Bouvet](https://www.bouvet.no) | Bergen, Norway | Pair programming with senior engineers
- [brainn.co](https://brainn.co) | S√£o Paulo, BR | Zoom/On-site interview, take-home project and interview with a team leader.
- [BrainStation-23](https://brainstation-23.com) | Dhaka, BD | A practical project followed by series of in-person interview sessions
- [Bramble](https://www.brmbl.io) | Remote | Slack interview, take home test, pairing, culture-fit interview.
- [Breather

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[handsontable/handsontable]]></title>
            <link>https://github.com/handsontable/handsontable</link>
            <guid>https://github.com/handsontable/handsontable</guid>
            <pubDate>Wed, 30 Jul 2025 00:05:04 GMT</pubDate>
            <description><![CDATA[JavaScript Data Grid / Data Table with a Spreadsheet Look & Feel. Works with React, Angular, and Vue. Supported by the Handsontable team ‚ö°]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/handsontable/handsontable">handsontable/handsontable</a></h1>
            <p>JavaScript Data Grid / Data Table with a Spreadsheet Look & Feel. Works with React, Angular, and Vue. Supported by the Handsontable team ‚ö°</p>
            <p>Language: JavaScript</p>
            <p>Stars: 21,241</p>
            <p>Forks: 3,166</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;br&gt;&lt;br&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/handsontable/handsontable/blob/develop/resources/handsontable-logo-white.svg?raw=true&quot;/&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/handsontable/handsontable/blob/develop/resources/handsontable-logo-black.svg?raw=true&quot;/&gt;
    &lt;img width=&quot;360&quot; alt=&quot;Logo of Handsontable data grid&quot; src=&quot;https://github.com/handsontable/handsontable/blob/develop/resources/handsontable-logo-black.svg?raw=true&quot;/&gt;
  &lt;/picture&gt;
  &lt;br&gt;&lt;br&gt;
  &lt;h3&gt;Handsontable is a &lt;a href=&quot;https://handsontable.com/docs&quot; target=&quot;_blank&quot;&gt;JavaScript Data Grid&lt;/a&gt; with a spreadsheet-like look and feel.&lt;/h3&gt;
  &lt;p&gt;
    Use it with JavaScript, TypeScript, or frameworks such as 
    &lt;a href=&quot;https://github.com/handsontable/handsontable/tree/master/wrappers/react-wrapper&quot; target=&quot;_blank&quot;&gt;React&lt;/a&gt;, 
    &lt;a href=&quot;https://github.com/handsontable/handsontable/tree/master/wrappers/angular&quot; target=&quot;_blank&quot;&gt;Angular&lt;/a&gt;, and 
    &lt;a href=&quot;https://github.com/handsontable/handsontable/tree/master/wrappers/vue&quot; target=&quot;_blank&quot;&gt;Vue&lt;/a&gt;. With its spreadsheet-like editing features, it‚Äôs perfect for building data-rich internal apps. It allows users to enter, edit, validate, and process data from various sources. Common use cases include resource planning software (ERP), inventory management systems, digital platforms, and data modeling applications.
  &lt;/p&gt;

&lt;a href=&quot;https://handsontable.com&quot;&gt;Website&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚Äî&amp;nbsp;&amp;nbsp; &lt;a href=&quot;https://handsontable.com/docs&quot;&gt;Documentation&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚Äî&amp;nbsp;&amp;nbsp; &lt;a href=&quot;https://handsontable.com/docs/themes&quot;&gt;Themes&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚Äî&amp;nbsp;&amp;nbsp; &lt;a href=&quot;https://handsontable.com/docs/api&quot;&gt;API&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚Äî&amp;nbsp;&amp;nbsp; &lt;a href=&quot;https://github.com/handsontable/handsontable/discussions&quot;&gt;Community&lt;/a&gt;

  &lt;br&gt;

[![NPM version](https://img.shields.io/npm/v/handsontable?style=for-the-badge)](https://npmjs.com/package/handsontable)
[![Total downloads](https://img.shields.io/npm/dt/handsontable.svg?style=for-the-badge)](https://npmjs.com/package/handsontable)
[![Monthly downloads](https://img.shields.io/npm/dm/handsontable.svg?style=for-the-badge)](https://npmjs.com/package/handsontable)
[![Contributors](https://img.shields.io/github/contributors/handsontable/handsontable?style=for-the-badge)](https://github.com/handsontable/handsontable/graphs/contributors)
&lt;br&gt;
[![CI status](https://github.com/handsontable/handsontable/actions/workflows/test.yml/badge.svg?branch=master)](https://github.com/handsontable/handsontable/actions/workflows/test.yml?query=branch%3Amaster)
[![Quality gate status](https://sonarcloud.io/api/project_badges/measure?project=handsontable_handsontable&amp;metric=alert_status)](https://sonarcloud.io/dashboard?id=handsontable_handsontable)
[![FOSSA status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fhandsontable%2Fhandsontable.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2Fhandsontable%2Fhandsontable?ref=badge_shield)

  &lt;br&gt;

  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/handsontable/handsontable/blob/develop/resources/handsontable-preview-dark-theme.png?raw=true&quot;/&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/handsontable/handsontable/blob/develop/resources/handsontable-preview-light-theme.png?raw=true&quot;/&gt;
    &lt;img width=&quot;780&quot; alt=&quot;JavaScript data grid preview&quot; src=&quot;https://github.com/handsontable/handsontable/blob/develop/resources/handsontable-preview-light-theme.png?raw=true&quot;/&gt;
  &lt;/picture&gt;
&lt;/div&gt;

## ‚ú® Key Features

&amp;nbsp;&amp;nbsp;‚úÖ&amp;nbsp; [Built-in themes](https://handsontable.com/docs/themes/) &lt;br&gt;
&amp;nbsp;&amp;nbsp;‚úÖ&amp;nbsp; [Flexible API](https://handsontable.com/docs/api/) &lt;br&gt;
&amp;nbsp;&amp;nbsp;‚úÖ&amp;nbsp; [Virtualization](https://handsontable.com/docs/row-virtualization/) &lt;br&gt;
&amp;nbsp;&amp;nbsp;‚úÖ&amp;nbsp; [IME support](https://handsontable.com/docs/ime-support/) &lt;br&gt;
&amp;nbsp;&amp;nbsp;‚úÖ&amp;nbsp; [Internationalization](https://handsontable.com/docs/language/) &lt;br&gt;
&amp;nbsp;&amp;nbsp;‚úÖ&amp;nbsp; [RTL support](https://handsontable.com/docs/layout-direction/) &lt;br&gt;
&amp;nbsp;&amp;nbsp;‚úÖ&amp;nbsp; [Accessibility](https://handsontable.com/docs/accessibility/) &lt;br&gt;
&amp;nbsp;&amp;nbsp;‚úÖ&amp;nbsp; [Keyboard shortcuts](https://handsontable.com/docs/keyboard-shortcuts/) &lt;br&gt;
&amp;nbsp;&amp;nbsp;‚úÖ&amp;nbsp; [Sorting data](https://handsontable.com/docs/rows-sorting/) &lt;br&gt;
&amp;nbsp;&amp;nbsp;‚úÖ&amp;nbsp; [Filtering data](https://handsontable.com/docs/column-filter/) &lt;br&gt;
&amp;nbsp;&amp;nbsp;‚úÖ&amp;nbsp; [400 built-in formulas](https://handsontable.com/docs/formula-calculation/) &lt;br&gt;
&amp;nbsp;&amp;nbsp;‚úÖ&amp;nbsp; [Configurable selection](https://handsontable.com/docs/selection/) &lt;br&gt;
&amp;nbsp;&amp;nbsp;‚úÖ&amp;nbsp; [Data validation](https://handsontable.com/docs/cell-validator/) &lt;br&gt;
&amp;nbsp;&amp;nbsp;‚úÖ&amp;nbsp; [Conditional formatting](https://handsontable.com/docs/conditional-formatting/) &lt;br&gt;
&amp;nbsp;&amp;nbsp;‚úÖ&amp;nbsp; [Merged cells](https://handsontable.com/docs/merge-cells/) &lt;br&gt;
&amp;nbsp;&amp;nbsp;‚úÖ&amp;nbsp; [Frozen rows and columns](https://handsontable.com/docs/column-freezing/) &lt;br&gt;
&amp;nbsp;&amp;nbsp;‚úÖ&amp;nbsp; [Hiding rows and columns](https://handsontable.com/docs/column-hiding/) &lt;br&gt;
&amp;nbsp;&amp;nbsp;‚úÖ&amp;nbsp; [Right-click context menu](https://handsontable.com/docs/context-menu/) &lt;br&gt;

&lt;br&gt;

&lt;div id=&quot;installation&quot;&gt;

## ü™Ñ Installation
Below, you&#039;ll find the installation guide for the JavaScript component. If you&#039;re using a specific framework, refer to its dedicated wrapper for installation instructions:

- &lt;img src=&quot;https://raw.githubusercontent.com/handsontable/handsontable/develop/resources/icons/react-icon.svg&quot; width=&quot;12&quot; height=&quot;12&quot;&gt;&lt;a href=&quot;https://github.com/handsontable/handsontable/tree/master/wrappers/react-wrapper&quot;&gt; React functional component&lt;/a&gt;
- &lt;img src=&quot;https://raw.githubusercontent.com/handsontable/handsontable/develop/resources/icons/react-icon.svg&quot; width=&quot;12&quot; height=&quot;12&quot; alt=&quot;React&quot;&gt; &lt;a href=&quot;https://github.com/handsontable/handsontable/tree/master/wrappers/react&quot;&gt; React class component&lt;/a&gt;
- &lt;img src=&quot;https://raw.githubusercontent.com/handsontable/handsontable/develop/resources/icons/angular-icon.svg&quot; width=&quot;12&quot; height=&quot;12&quot; alt=&quot;Angular&quot;&gt; &lt;a href=&quot;https://github.com/handsontable/handsontable/tree/master/wrappers/angular&quot;&gt; Angular&lt;/a&gt;
- &lt;img src=&quot;https://raw.githubusercontent.com/handsontable/handsontable/develop/resources/icons/vue-icon.svg&quot; width=&quot;12&quot; height=&quot;12&quot; alt=&quot;Vue&quot;&gt; &lt;a href=&quot;https://github.com/handsontable/handsontable/tree/master/wrappers/vue3&quot;&gt; Vue&lt;/a&gt;

---

### Install with npm

You can also use [Yarn](https://yarnpkg.com/package/handsontable), [NuGet](https://www.nuget.org/packages/Handsontable) or load the package from [CDN](https://jsdelivr.com/package/npm/handsontable).

  ```bash
  npm install handsontable
  ```

### Provide an HTML container

  ```html
  &lt;!-- Set the container&#039;s ID --&gt;
  &lt;div id=&quot;handsontable-grid&quot;&gt;&lt;/div&gt;
  ```

### Setup

  ```js
  import Handsontable from &#039;handsontable&#039;;
  // Base CSS rules
  import &#039;handsontable/styles/handsontable.min.css&#039;;
  // Main theme variables
  import &#039;handsontable/styles/ht-theme-main.min.css&#039;;
  
  const element = document.getElementById(&#039;handsontable-grid&#039;);
  
  new Handsontable(element, {
    // theme name with obligatory ht-theme-* prefix
    themeName: &#039;ht-theme-main-dark-auto&#039;,
    // other options
    data: [
      { company: &#039;Tagcat&#039;, country: &#039;United Kingdom&#039;, rating: 4.4 },
      { company: &#039;Zoomzone&#039;, country: &#039;Japan&#039;, rating: 4.5 },
      { company: &#039;Meeveo&#039;, country: &#039;United States&#039;, rating: 4.6 },
    ],
    columns: [
      { data: &#039;company&#039;, title: &#039;Company&#039;, width: 100 },
      { data: &#039;country&#039;, title: &#039;Country&#039;, width: 170, type: &#039;dropdown&#039;, source: [&#039;United Kingdom&#039;, &#039;Japan&#039;, &#039;United States&#039;] },
      { data: &#039;rating&#039;, title: &#039;Rating&#039;, width: 100, type: &#039;numeric&#039; },
    ],
    rowHeaders: true,
    navigableHeaders: true,
    tabNavigation: true,
    multiColumnSorting: true,
    headerClassName: &#039;htLeft&#039;,
    licenseKey: &#039;non-commercial-and-evaluation&#039;,
  });

  ```

[![Static Badge](https://img.shields.io/badge/Live%20demo%20on%20StackBlitz-1a42e8?style=for-the-badge)](https://stackblitz.com/edit/handsontable-readme-example?file=src%2Fmain.js)

### CDN-based setup

&lt;details close&gt;
  &lt;summary&gt;&amp;nbsp; Show/Hide code&lt;/summary&gt;
  &lt;br&gt;
  If your environment does not support imports, you can use the code below to quickly set up and run a data grid with basic configuration options.
  &lt;br&gt;&lt;br&gt;

  ```html
  &lt;!DOCTYPE html&gt;
  &lt;html lang=&quot;en&quot;&gt;
    &lt;head&gt;
      &lt;meta charset=&quot;UTF-8&quot; /&gt;
      &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;
      &lt;title&gt;Handsontable - JavaScript Data Grid Example&lt;/title&gt;
      &lt;link
        rel=&quot;stylesheet&quot;
        href=&quot;https://cdn.jsdelivr.net/npm/handsontable/styles/handsontable.min.css&quot;
      /&gt;
      &lt;link
        rel=&quot;stylesheet&quot;
        href=&quot;https://cdn.jsdelivr.net/npm/handsontable/styles/ht-theme-main.min.css&quot;
      /&gt;
    &lt;/head&gt;
    &lt;body&gt;
      &lt;div id=&quot;handsontable-grid&quot;&gt;&lt;/div&gt;
      &lt;script src=&quot;https://cdn.jsdelivr.net/npm/handsontable/dist/handsontable.full.min.js&quot;&gt;&lt;/script&gt;
      &lt;script&gt;
        const element = document.getElementById(&quot;handsontable-grid&quot;);
  
        new Handsontable(element, {
          // theme name with obligatory ht-theme-* prefix
          themeName: &#039;ht-theme-main-dark-auto&#039;,
          // other options
          data: [
            { company: &quot;Tagcat&quot;, country: &quot;United Kingdom&quot;, rating: 4.4 },
            { company: &quot;Zoomzone&quot;, country: &quot;Japan&quot;, rating: 4.5 },
            { company: &quot;Meeveo&quot;, country: &quot;United States&quot;, rating: 4.6 },
          ],
          columns: [
            { data: &quot;company&quot;, title: &quot;Company&quot;, width: 100 },
            { data: &quot;country&quot;, title: &quot;Country&quot;, width: 170, type: &quot;dropdown&quot;, source: [&quot;United Kingdom&quot;, &quot;Japan&quot;, &quot;United States&quot;] },
            { data: &quot;rating&quot;, title: &quot;Rating&quot;, width: 100, type: &quot;numeric&quot; },
          ],
          rowHeaders: true,
          navigableHeaders: true,
          tabNavigation: true,
          multiColumnSorting: true,
          headerClassName: &quot;htLeft&quot;,
          licenseKey: &quot;non-commercial-and-evaluation&quot;,
        });
      &lt;/script&gt;
    &lt;/body&gt;
  &lt;/html&gt;
  ```

&lt;/details&gt;

&lt;/div&gt;

&lt;br&gt;

## üöÄ Resources

- [Website](https://handsontable.com)
- [Demo](https://handsontable.com/demo)
- [Documentation](https://handsontable.com/docs)
- [npm](https://www.npmjs.com/package/handsontable)
- [CDN](https://www.jsdelivr.com/package/npm/handsontable)
- [Forum](https://forum.handsontable.com/)
- [Blog](https://handsontable.com/blog)
- [Contact support team](https://handsontable.com/contact?category=technical_support)
- [Get a quote](https://handsontable.com/get-a-quote)

&lt;br&gt;

## ü§î Is Handsontable a Data Grid or a Spreadsheet?

Handsontable is a data grid component written in JavaScript, not a spreadsheet. However, it brings in many features typically found in spreadsheet software. We designed it this way because spreadsheet-like patterns are often the most user-friendly when it comes to data entry and management.

### Spreadsheet-like features in Handsontable:

- Keyboard shortcuts compliant with either Google Sheets or Excel
- 400 spreadsheet formulas via native integration with [HyperFormula](https://github.com/handsontable/hyperformula)
- Keyboard navigation across headers that can be disabled, making only cells navigable
- TAB navigation across cells that can be disabled
- Built-in undo-redo functionality
- Powerful clipboard capabilities for copy-paste operations
- Ability to scroll the grid within the container (`div`) or window
- Data binding in the form of an array of objects or arrays of arrays
- Built-in cell editors like a date picker or dropdown list

At first glance, it might seem that a data table, spreadsheet, and data grid are just different names for the same thing - an interactive table displaying data. In reality, these tools serve different purposes and offer distinct functionalities, designed to meet specific needs. Handsontable sits comfortably in the data grid category while incorporating many of the best aspects of spreadsheet software.

&lt;br&gt;

## üõü Support

**We&#039;re here to help!**

If you&#039;re using Handsontable with a free, non-commercial license, you can:
- Join the conversation on [GitHub Discussions](https://github.com/handsontable/handsontable/discussions) to share ideas, suggest features, or discuss changes.
- Report any bugs you find on our [GitHub Issue Board](https://github.com/handsontable/handsontable/issues).
- Connect with other developers and find answers on our [Developer Forum](https://forum.handsontable.com).

If you have a commercial license, feel free to contact us directly at [support@handsontable.com](mailto:support@handsontable.com) or use our [contact form](https://handsontable.com/contact?category=technical_support).

&lt;br&gt;

## üìñ Licenses

Handsontable is available under two licensing options, allowing you to choose the one that best fits your needs. Each license comes with its own terms and conditions, as outlined below:

### ‚ë† Free license for non-commercial use, and evaluation purposes
This license is available for non-commercial purposes such as teaching, academic research, or evaluation. It allows you to use Handsontable free of charge under the terms specified in the non-commercial license agreement.  
[Learn more here](https://github.com/handsontable/handsontable/blob/master/handsontable-non-commercial-license.pdf).

### ‚ë° Commercial license
For commercial use, a paid license is required. This license includes support and maintenance to ensure you get the most out of Handsontable. The commercial license can be purchased directly from Handsoncode or through an [authorized reseller](https://handsontable.com/resellers). See the [pricing page](https://handsontable.com/pricing) for details.

&lt;br&gt;

## üîë License Key

For projects covered by the free non-commercial license, simply use the phrase `&#039;non-commercial-and-evaluation&#039;` as your license key. 

If you&#039;re using Handsontable in a project that supports commercial activities, you&#039;ll need to purchase a license key at [handsontable.com/pricing](https://handsontable.com/pricing). You can find more details in [our documentation](https://handsontable.com/docs/license-key/).

&lt;br&gt;

## üôå Contributing

Contributions are welcome, but before you make them, please read the [Contributing Guide](https://github.com/handsontable/handsontable/blob/develop/CONTRIBUTING.md) and accept the [Contributor License Agreement](https://goo.gl/forms/yuutGuN0RjsikVpM2).

&lt;br&gt;
&lt;br&gt;

Created and maintained by the [Handsontable Team](https://handsontable.com/team) üëã

---

¬© 2012 - 2025 Handsoncode
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[eoao/cloud-mail]]></title>
            <link>https://github.com/eoao/cloud-mail</link>
            <guid>https://github.com/eoao/cloud-mail</guid>
            <pubDate>Wed, 30 Jul 2025 00:05:03 GMT</pubDate>
            <description><![CDATA[cloudflare email ÈÇÆÁÆ± ‰∏¥Êó∂ÈÇÆÁÆ± ÈÇÆ‰ª∂ÂèëÈÄÅ mail]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/eoao/cloud-mail">eoao/cloud-mail</a></h1>
            <p>cloudflare email ÈÇÆÁÆ± ‰∏¥Êó∂ÈÇÆÁÆ± ÈÇÆ‰ª∂ÂèëÈÄÅ mail</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,499</p>
            <p>Forks: 881</p>
            <p>Stars today: 28 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;doc/demo/logo.png&quot; width=&quot;80px&quot; /&gt;
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;h1&gt;Cloud Mail&lt;/h1&gt;
&lt;/div&gt;
&lt;div align=&quot;center&quot;&gt;
    &lt;h4&gt;‰ΩøÁî®Vue3ÂºÄÂèëÁöÑÂìçÂ∫îÂºèÁÆÄÁ∫¶ÈÇÆÁÆ±ÊúçÂä°ÔºåÊîØÊåÅÈÇÆ‰ª∂ÂèëÈÄÅÈôÑ‰ª∂Êî∂ÂèëÔºåÂèØ‰ª•ÈÉ®ÁΩ≤Âà∞Cloudflare‰∫ëÂπ≥Âè∞ÂÆûÁé∞ÂÖçË¥πÁôΩÂ´ñüéâ&lt;/h4&gt; 
&lt;/div&gt;
&lt;div align=&quot;center&quot;&gt;
    &lt;span&gt;ÁÆÄ‰Ωì‰∏≠Êñá | &lt;a href=&quot;/README-en.md&quot; style=&quot;margin-left: 5px&quot;&gt;English &lt;/a&gt;&lt;/span&gt;
&lt;/div&gt;

## È°πÁõÆÁÆÄ‰ªã

Âè™ÈúÄË¶Å‰∏Ä‰∏™ÂüüÂêçÔºåÂ∞±ÂèØ‰ª•ÂàõÂª∫Â§ö‰∏™‰∏çÂêåÁöÑÈÇÆÁÆ±ÔºåÁ±ª‰ººÂêÑÂ§ßÈÇÆÁÆ±Âπ≥Âè∞ QQÈÇÆÁÆ±ÔºåË∞∑Ê≠åÈÇÆÁÆ±Á≠âÔºåÊú¨È°πÁõÆ‰ΩøÁî®Cloud flareÈÉ®ÁΩ≤ÔºåResendÊé®ÈÄÅÈÇÆ‰ª∂ÔºåÊó†ÈúÄÊúçÂä°Âô®Ë¥πÁî®ÔºåÊê≠Âª∫Â±û‰∫éËá™Â∑±ÁöÑÈÇÆÁÆ±ÊúçÂä°

## È°πÁõÆÂ±ïÁ§∫ 

[**üëâ Âú®Á∫øÊºîÁ§∫**](https://skymail.ink)

[**üëâ Â∞èÁôΩ‰øùÂßÜÊïôÁ®ã-ÁïåÈù¢ÈÉ®ÁΩ≤**](https://doc.skymail.ink)

| ![](/doc/demo/demo1.png) | ![](/doc/demo/demo2.png) |
|--------------------------|---------------------|
| ![](/doc/demo/demo3.png)      | ![](/doc/demo/demo4.png) |
| ![](/doc/demo/demo5.png)      | ![](/doc/demo/demo6.png) |
| ![](/doc/demo/demo7.png)      | ![](/doc/demo/demo8.png) |




## ÂäüËÉΩ‰ªãÁªç

- **üí∞ÂÖçË¥πÁôΩÂ´ñ**ÔºöÊó†ÈúÄÊúçÂä°Âô®ÔºåÈÉ®ÁΩ≤Âà∞Cloudflare Workers ÂÖçË¥π‰ΩøÁî®Ôºå‰∏çË¶ÅÈí±

- **üíªÂìçÂ∫îÂºèËÆæËÆ°**ÔºöÂìçÂ∫îÂºèÂ∏ÉÂ±ÄËá™Âä®ÈÄÇÈÖçPCÂíåÂ§ßÈÉ®ÂàÜÊâãÊú∫Á´ØÊµèËßàÂô®

- **üìßÈÇÆ‰ª∂ÂèëÈÄÅ**ÔºöÈõÜÊàêresendÂèëÈÄÅÈÇÆ‰ª∂ÔºåÊîØÊåÅÁæ§ÂèëÔºåÂÜÖÂµåÂõæÁâáÂíåÈôÑ‰ª∂ÂèëÈÄÅÔºåÂèëÈÄÅÁä∂ÊÄÅÊü•Áúã

- **üõ°Ô∏èÁÆ°ÁêÜÂëòÂäüËÉΩ**ÔºöÂèØ‰ª•ÂØπÁî®Êà∑ÔºåÈÇÆ‰ª∂ËøõË°åÁÆ°ÁêÜÔºåRABCÊùÉÈôêÊéßÂà∂ÂØπÂäüËÉΩÂèä‰ΩøÁî®ËµÑÊ∫êÈôêÂà∂

- **üîÄÂ§öÂè∑Ê®°Âºè**ÔºöÂºÄÂêØÂêé‰∏Ä‰∏™Áî®Êà∑ÂèØ‰ª•Ê∑ªÂä†Â§ö‰∏™ÈÇÆÁÆ±ÔºåÈªòËÆ§‰∏ÄÁî®Êà∑‰∏ÄÈÇÆÁÆ±ÔºåÁ±ª‰ººÂêÑÂ§ßÈÇÆÁÆ±Âπ≥Âè∞

- **üì¶ÈôÑ‰ª∂Êî∂Âèë**ÔºöÊîØÊåÅÊî∂ÂèëÈôÑ‰ª∂Ôºå‰ΩøÁî®R2ÂØπË±°Â≠òÂÇ®‰øùÂ≠òÂíå‰∏ãËΩΩÊñá‰ª∂

- **üîîÈÇÆ‰ª∂Êé®ÈÄÅ**ÔºöÊé•Êî∂ÈÇÆ‰ª∂ÂêéÂèØ‰ª•ËΩ¨ÂèëÂà∞TGÊú∫Âô®‰∫∫ÊàñÂÖ∂‰ªñÊúçÂä°ÂïÜÈÇÆÁÆ±

- **üìàÊï∞ÊçÆÂèØËßÜÂåñ**Ôºö‰ΩøÁî®echartsÂØπÁ≥ªÁªüÊï∞ÊçÆËØ¶ÊÉÖÔºåÁî®Êà∑ÈÇÆ‰ª∂Â¢ûÈïøÂèØËßÜÂåñÊòæÁ§∫

- **‚≠êÊòüÊ†áÈÇÆ‰ª∂**ÔºöÊ†áËÆ∞ÈáçË¶ÅÈÇÆ‰ª∂Ôºå‰ª•‰æøÂø´ÈÄüÊü•ÈòÖ

- **üé®‰∏™ÊÄßÂåñËÆæÁΩÆ**ÔºöÂèØ‰ª•Ëá™ÂÆö‰πâÁΩëÁ´ôÊ†áÈ¢òÔºåÁôªÂΩïËÉåÊôØÔºåÈÄèÊòéÂ∫¶

- **‚öôÔ∏èÂäüËÉΩËÆæÁΩÆ**ÔºöÂèØ‰ª•ÂØπÊ≥®ÂÜåÔºåÈÇÆ‰ª∂ÂèëÈÄÅÔºåÊ∑ªÂä†Á≠âÂäüËÉΩÂÖ≥Èó≠ÂíåÂºÄÂêØÔºåËÆæ‰∏∫ÁßÅ‰∫∫Á´ôÁÇπ

- **ü§ñ‰∫∫Êú∫È™åËØÅ**ÔºöÈõÜÊàêTurnstile‰∫∫Êú∫È™åËØÅÔºåÈò≤Ê≠¢‰∫∫Êú∫ÊâπÈáèÊ≥®ÂÜå

- **üìúÊõ¥Â§öÂäüËÉΩ**ÔºöÊ≠£Âú®ÂºÄÂèë‰∏≠...



## ÊäÄÊúØÊ†à

- **Ê°ÜÊû∂**Ôºö[Vue3](https://vuejs.org/) + [Element Plus](https://element-plus.org/) 

- **WebÊ°ÜÊû∂**Ôºö[Hono](https://hono.dev/)

- **ORMÔºö**[Drizzle](https://orm.drizzle.team/)

- **Âπ≥Âè∞Ôºö** [Cloudflare workers](https://developers.cloudflare.com/workers/)

- **ÈÇÆ‰ª∂Êé®ÈÄÅÔºö** [Resend](https://resend.com/)

- **ÁºìÂ≠ò**Ôºö[Cloudflare KV](https://developers.cloudflare.com/kv/)

- **Êï∞ÊçÆÂ∫ì**Ôºö[Cloudflare D1](https://developers.cloudflare.com/d1/)

- **Êñá‰ª∂Â≠òÂÇ®**Ôºö[Cloudflare R2](https://developers.cloudflare.com/r2/)





## ‰ΩøÁî®ÊïôÁ®ã

### ÁéØÂ¢ÉË¶ÅÊ±Ç

Nodejs v18.20 +

Cloudflare Ë¥¶Âè∑ (ÈúÄË¶ÅÁªëÂÆöÂüüÂêç)


**ÂÖãÈöÜÈ°πÁõÆÂà∞Êú¨Âú∞**
``` shell
git clone https://github.com/eoao/cloud-mail #ÊãâÂèñ‰ª£Á†Å
cd cloud-mail/mail-worker #ËøõÂÖ•workerÁõÆÂΩï
```

**ÂÆâË£Ö‰æùËµñ**
```shell
npm i
```

**È°πÁõÆÈÖçÁΩÆ**

mail-worker/wrangler.toml

```toml
[[d1_databases]]
binding = &quot;db&quot;			#d1Êï∞ÊçÆÂ∫ìÁªëÂÆöÂêçÈªòËÆ§‰∏çÂèØ‰øÆÊîπ
database_name = &quot;&quot;		#d1Êï∞ÊçÆÂ∫ìÂêçÂ≠ó
database_id = &quot;&quot;		#d1Êï∞ÊçÆÂ∫ìid

[[kv_namespaces]]
binding = &quot;kv&quot;			#kvÁªëÂÆöÂêçÈªòËÆ§‰∏çÂèØ‰øÆÊîπ
id = &quot;&quot;			        #kvÊï∞ÊçÆÂ∫ìid


[[r2_buckets]]
binding = &quot;r2&quot;                  #r2ÂØπË±°Â≠òÂÇ®ÁªëÂÆöÂêçÈªòËÆ§‰∏çÂèØ‰øÆÊîπ
bucket_name = &quot;&quot;	        #r2ÂØπË±°Â≠òÂÇ®Ê°∂ÁöÑÂêçÂ≠ó
	

[assets]
binding = &quot;assets&quot;		#ÈùôÊÄÅËµÑÊ∫êÁªëÂÆöÂêçÈªòËÆ§‰∏çÂèØ‰øÆÊîπ
directory = &quot;./dist&quot;	        #ÂâçÁ´ØvueÈ°πÁõÆÊâìÂåÖÁöÑÈùôÊÄÅËµÑÊ∫êÂ≠òÊîæ‰ΩçÁΩÆ,ÈªòËÆ§dist

[vars]
orm_log = false
domain = []			#ÈÇÆ‰ª∂ÂüüÂêçÂèØ‰ª•ÈÖçÁΩÆÂ§ö‰∏™Á§∫‰æã: [&quot;example1.com&quot;,&quot;example2.com&quot;]
admin = &quot;&quot;		        #ÁÆ°ÁêÜÂëòÁöÑÈÇÆÁÆ± Á§∫‰æã: &quot;admin@example.com&quot;
jwt_secret = &quot;&quot;			#ÁôªÂΩïË∫´‰ªΩ‰ª§ÁâåÁöÑÂØÜÈí•,Èöè‰æøÂ°´‰∏Ä‰∏≤Â≠óÁ¨¶‰∏≤

```



**ËøúÁ®ãÈÉ®ÁΩ≤**

1. Âú® Cloudflare ÊéßÂà∂Âè∞ÂàõÂª∫KVÔºåD1Êï∞ÊçÆÂ∫ìÔºåR2ÂØπË±°Â≠òÂÇ®
2. Âú®È°πÁõÆÁõÆÂΩï `mail-worker/wrangler.toml` ÈÖçÁΩÆÊñá‰ª∂‰∏≠ÈÖçÁΩÆÂØπÂ∫îÁéØÂ¢ÉÂèòÈáèÔºå‰ª•ÂèäÂàõÂª∫ÁöÑÊï∞ÊçÆÂ∫ìidÂíåÂêçÁß∞
3. ÊâßË°åËøúÁ®ãÈÉ®ÁΩ≤ÂëΩ‰ª§

    ```shell
    npm run deploy 
    ```

4. Âú®Cloudflare‚ÜíË¥¶Êà∑‰∏ªÈ°µ‚Üí‰Ω†ÁöÑÂüüÂêç‚ÜíÁîµÂ≠êÈÇÆ‰ª∂‚ÜíÁîµÂ≠êÈÇÆ‰ª∂Ë∑ØÁî±‚ÜíË∑ØÁî±ËßÑÂàô‚ÜíCatch-allÂú∞ÂùÄÔºåÁºñËæëÂèëÈÄÅÂà∞worker

5. ÊµèËßàÂô®ËæìÂÖ•  `https://‰Ω†ÁöÑÈ°πÁõÆÂüüÂêç/api/init/‰Ω†ÁöÑjwt_secret`   ÂàùÂßãÂåñÊàñÊõ¥Êñ∞ d1ÂíåkvÊï∞ÊçÆÂ∫ì

6. ÈÉ®ÁΩ≤ÂÆåÊàêÁôªÂΩïÁΩëÁ´ôÔºå‰ΩøÁî®ÁÆ°ÁêÜÂëòË¥¶Âè∑ÂèØ‰ª•Âú®ËÆæÁΩÆÈ°µÈù¢Ê∑ªÂä†ÈÖçÁΩÆ R2ÂüüÂêç TurnstileÂØÜÈí• Á≠â


[üëâ ‰ΩøÁî® Github Action ÈÉ®ÁΩ≤](/doc/github-action.md)

**Êú¨Âú∞ËøêË°å**

1. Êú¨Âú∞ËøêË°åÔºåÊï∞ÊçÆÂ∫ìÔºåÂØπË±°Â≠òÂÇ®‰ºöËá™Âä®ÂÆâË£ÖÔºåÊó†ÈúÄÂàõÂª∫ÔºåÊï∞ÊçÆÂ∫ìÊï∞ÊçÆ‰øùÂ≠òÂú® `mail-worker/.wrangler` Êñá‰ª∂Â§π

    ```shell
    npm run dev 
    ```
2. ÊµèËßàÂô®ËæìÂÖ•   `http://127.0.0.1:8787/api/init/‰Ω†ÁöÑjwt_secret`   ÂàùÂßãÂåñd1ÂíåkvÊï∞ÊçÆÂ∫ì

3. Êú¨Âú∞ËøêË°åÈ°πÁõÆËÆæÁΩÆÈ°µÈù¢r2ÂüüÂêçÂèØËÆæÁΩÆ‰∏∫  `http://127.0.0.1:8787/api/file`

**ÈÇÆ‰ª∂ÂèëÈÄÅ**

1. Âú® resend ÂÆòÁΩëÊ≥®ÂÜåÂêéÔºåÁÇπÂáªÂ∑¶‰æß Domains Ê∑ªÂä†Âπ∂È™åËØÅ‰Ω†ÁöÑÂüüÂêçÔºåÁ≠âÂæÖÈ™åËØÅÂÆåÊàê
2. ÁÇπÂáªÂ∑¶‰æß Api Keys ÂàõÂª∫Á´ãapi keyÔºå Â§çÂà∂tokenÂõûÂà∞È°πÁõÆÁΩëÁ´ôËÆæÁΩÆÈ°µÈù¢Ê∑ªÂä† resend token

3. ÁÇπÂáªÂ∑¶‰æß Webhooks Ê∑ªÂä†ÂõûË∞ÉÂú∞ÂùÄ  `https://‰Ω†ÁöÑÈ°πÁõÆÂüüÂêç/api/webhooks` 

   ÂãæÈÄâ‚úÖ (email.bounced email.complained email.delivered email.delivery_delayed)

**È°πÁõÆÊõ¥Êñ∞**

Êõ¥Êñ∞ÂêéÈúÄË¶ÅÊâßË°å `https://‰Ω†ÁöÑÈ°πÁõÆÂüüÂêç/api/init/‰Ω†ÁöÑjwt_secret` Êù•ÂêåÊ≠•Êï∞ÊçÆÂ∫ìÁªìÊûÑ

## ËµûÂä©


&lt;a href=&quot;https://support.skymail.ink&quot; &gt;
&lt;img width=&quot;170px&quot; src=&quot;./doc/images/support.png&quot; alt=&quot;&quot;&gt;
&lt;/a&gt;&lt;br&gt;&lt;br&gt;


**ÁâπÂà´ËµûÂä©ÂïÜ**

[DartNode](https://dartnode.com)ÔºöÊèê‰æõ‰∫ëËÆ°ÁÆóÊúçÂä°ËµÑÊ∫êÊîØÊåÅ

[![Powered by DartNode](https://dartnode.com/branding/DN-Open-Source-sm.png)](https://dartnode.com &quot;Powered by DartNode - Free VPS for Open Source&quot;)

## ËÆ∏ÂèØËØÅ

Êú¨È°πÁõÆÈááÁî® [MIT](LICENSE) ËÆ∏ÂèØËØÅ	


## ‰∫§ÊµÅ

[Telegram](https://t.me/cloud_mail_tg)



</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[facebook/react]]></title>
            <link>https://github.com/facebook/react</link>
            <guid>https://github.com/facebook/react</guid>
            <pubDate>Wed, 30 Jul 2025 00:05:02 GMT</pubDate>
            <description><![CDATA[The library for web and native user interfaces.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/facebook/react">facebook/react</a></h1>
            <p>The library for web and native user interfaces.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 237,692</p>
            <p>Forks: 49,030</p>
            <p>Stars today: 51 stars today</p>
            <h2>README</h2><pre># [React](https://react.dev/) &amp;middot; [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/facebook/react/blob/main/LICENSE) [![npm version](https://img.shields.io/npm/v/react.svg?style=flat)](https://www.npmjs.com/package/react) [![(Runtime) Build and Test](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml/badge.svg)](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml) [![(Compiler) TypeScript](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml/badge.svg?branch=main)](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://legacy.reactjs.org/docs/how-to-contribute.html#your-first-pull-request)

React is a JavaScript library for building user interfaces.

* **Declarative:** React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.
* **Component-Based:** Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep the state out of the DOM.
* **Learn Once, Write Anywhere:** We don&#039;t make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using [Node](https://nodejs.org/en) and power mobile apps using [React Native](https://reactnative.dev/).

[Learn how to use React in your project](https://react.dev/learn).

## Installation

React has been designed for gradual adoption from the start, and **you can use as little or as much React as you need**:

* Use [Quick Start](https://react.dev/learn) to get a taste of React.
* [Add React to an Existing Project](https://react.dev/learn/add-react-to-an-existing-project) to use as little or as much React as you need.
* [Create a New React App](https://react.dev/learn/start-a-new-react-project) if you&#039;re looking for a powerful JavaScript toolchain.

## Documentation

You can find the React documentation [on the website](https://react.dev/).

Check out the [Getting Started](https://react.dev/learn) page for a quick overview.

The documentation is divided into several sections:

* [Quick Start](https://react.dev/learn)
* [Tutorial](https://react.dev/learn/tutorial-tic-tac-toe)
* [Thinking in React](https://react.dev/learn/thinking-in-react)
* [Installation](https://react.dev/learn/installation)
* [Describing the UI](https://react.dev/learn/describing-the-ui)
* [Adding Interactivity](https://react.dev/learn/adding-interactivity)
* [Managing State](https://react.dev/learn/managing-state)
* [Advanced Guides](https://react.dev/learn/escape-hatches)
* [API Reference](https://react.dev/reference/react)
* [Where to Get Support](https://react.dev/community)
* [Contributing Guide](https://legacy.reactjs.org/docs/how-to-contribute.html)

You can improve it by sending pull requests to [this repository](https://github.com/reactjs/react.dev).

## Examples

We have several examples [on the website](https://react.dev/). Here is the first one to get you started:

```jsx
import { createRoot } from &#039;react-dom/client&#039;;

function HelloMessage({ name }) {
  return &lt;div&gt;Hello {name}&lt;/div&gt;;
}

const root = createRoot(document.getElementById(&#039;container&#039;));
root.render(&lt;HelloMessage name=&quot;Taylor&quot; /&gt;);
```

This example will render &quot;Hello Taylor&quot; into a container on the page.

You&#039;ll notice that we used an HTML-like syntax; [we call it JSX](https://react.dev/learn#writing-markup-with-jsx). JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML.

## Contributing

The main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.

### [Code of Conduct](https://code.fb.com/codeofconduct)

Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read [the full text](https://code.fb.com/codeofconduct) so that you can understand what actions will and will not be tolerated.

### [Contributing Guide](https://legacy.reactjs.org/docs/how-to-contribute.html)

Read our [contributing guide](https://legacy.reactjs.org/docs/how-to-contribute.html) to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.

### [Good First Issues](https://github.com/facebook/react/labels/good%20first%20issue)

To help you get your feet wet and get you familiar with our contribution process, we have a list of [good first issues](https://github.com/facebook/react/labels/good%20first%20issue) that contain bugs that have a relatively limited scope. This is a great place to get started.

### License

React is [MIT licensed](./LICENSE).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[DefiLlama/chainlist]]></title>
            <link>https://github.com/DefiLlama/chainlist</link>
            <guid>https://github.com/DefiLlama/chainlist</guid>
            <pubDate>Wed, 30 Jul 2025 00:05:01 GMT</pubDate>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/DefiLlama/chainlist">DefiLlama/chainlist</a></h1>
            <p></p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,679</p>
            <p>Forks: 2,829</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre># Chainlist

## Add a chain

Submit a PR that adds a new file to the [constants/additionalChainRegistry folder](https://github.com/DefiLlama/chainlist/tree/main/constants/additionalChainRegistry). The new file should be named `chainid-{chainid_number}.js` and the contents should follow this structure:
```
{
  &quot;name&quot;: &quot;Ethereum Mainnet&quot;,
  &quot;chain&quot;: &quot;ETH&quot;,
  &quot;rpc&quot;: [
    &quot;https://eth.llamarpc.com&quot;,
  ],
  &quot;faucets&quot;: [],
  &quot;nativeCurrency&quot;: {
    &quot;name&quot;: &quot;Ether&quot;,
    &quot;symbol&quot;: &quot;ETH&quot;,
    &quot;decimals&quot;: 18
  },
  &quot;features&quot;: [{ &quot;name&quot;: &quot;EIP155&quot; }, { &quot;name&quot;: &quot;EIP1559&quot; }],
  &quot;infoURL&quot;: &quot;https://ethereum.org&quot;,
  &quot;shortName&quot;: &quot;eth&quot;,
  &quot;chainId&quot;: 1,
  &quot;networkId&quot;: 1,
  &quot;icon&quot;: &quot;ethereum&quot;,
  &quot;explorers&quot;: [{
    &quot;name&quot;: &quot;etherscan&quot;,
    &quot;url&quot;: &quot;https://etherscan.io&quot;,
    &quot;icon&quot;: &quot;etherscan&quot;,
    &quot;standard&quot;: &quot;EIP3091&quot;
  }]
}
```

## Add an RPC to a chain that is already listed

If you wish to add your RPC, please submit a PR modifying [constants/extraRpcs.js](https://github.com/DefiLlama/chainlist/blob/main/constants/extraRpcs.js) to add your RPC to the given chains.

## API
The following API returns all the data in our website, including chain data along with all of their RPCs:

https://chainlist.org/rpcs.json
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[OpenDroneMap/WebODM]]></title>
            <link>https://github.com/OpenDroneMap/WebODM</link>
            <guid>https://github.com/OpenDroneMap/WebODM</guid>
            <pubDate>Wed, 30 Jul 2025 00:05:00 GMT</pubDate>
            <description><![CDATA[User-friendly, commercial-grade software for processing aerial imagery. ‚úàÔ∏è]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/OpenDroneMap/WebODM">OpenDroneMap/WebODM</a></h1>
            <p>User-friendly, commercial-grade software for processing aerial imagery. ‚úàÔ∏è</p>
            <p>Language: JavaScript</p>
            <p>Stars: 3,284</p>
            <p>Forks: 1,050</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre>&lt;img alt=&quot;WebODM&quot; src=&quot;https://user-images.githubusercontent.com/1951843/34074943-8f057c3c-e287-11e7-924d-3ccafa60c43a.png&quot; width=&quot;180&quot;&gt;

![Build Status](https://img.shields.io/github/actions/workflow/status/OpenDroneMap/WebODM/build-and-publish.yml?branch=master) ![Version](https://img.shields.io/github/v/release/OpenDroneMap/WebODM) [![Translated](https://hosted.weblate.org/widgets/webodm/-/svg-badge.svg)](https://hosted.weblate.org/engage/webodm/) [![Download](https://img.shields.io/badge/Download-%E2%86%93-pink)](#getting-started) [![Purchase](https://img.shields.io/badge/Purchase-%F0%9F%9B%92-white)](https://opendronemap.org/webodm/download/)

A user-friendly, commercial grade software for drone image processing. Generate georeferenced maps, point clouds, elevation models and textured 3D models from aerial images. It supports multiple engines for processing, currently [ODM](https://github.com/OpenDroneMap/ODM) and [MicMac](https://github.com/OpenDroneMap/NodeMICMAC/).

![image](https://user-images.githubusercontent.com/1951843/174504753-6869e56e-7b65-4775-bb23-6c1dc256575c.png)


- [Getting Started](#getting-started)
   * [Recommended Machine Specs](#recommended-machine-specs)
   * [Manual installation (Docker)](#manual-installation-docker)
      + [Requirements](#requirements)
      + [Installation with Docker](#installation-with-docker)
      + [Manage Processing Nodes](#manage-processing-nodes)
      + [Enable MicMac](#enable-micmac)
      + [Enable SSL](#enable-ssl)
      + [Enable IPv6](#enable-ipv6)
      + [Where Are My Files Stored?](#where-are-my-files-stored)
      + [Common Troubleshooting](#common-troubleshooting)
         - [Images Missing from Lightning Assets](#images-missing-from-lightning-assets)
      + [Backup and Restore](#backup-and-restore)
      + [Reset Password](#reset-password)
      + [Manage Plugins](#manage-plugins)
      + [Update](#update)
   * [Run the docker version as a Linux Service](#run-the-docker-version-as-a-linux-service)
   * [Run it natively](#run-it-natively)
   * [Run it on the cloud (Google Compute, Amazon AWS)](#run-it-on-the-cloud-google-compute-amazon-aws)
- [Customizing and Extending](#customizing-and-extending)
- [API Docs](#api-docs)
- [Roadmap](#roadmap)
- [Getting Help](#getting-help)
- [Support the Project](#support-the-project)
- [Translations](#translations)
- [Become a Contributor](#become-a-contributor)
- [Architecture Overview](#architecture-overview)
- [License](#license)
- [Trademark](#trademark)


![image](https://user-images.githubusercontent.com/1951843/174504771-b0bcfd29-3960-41f7-8d44-103b63050bd5.png)

![image](https://user-images.githubusercontent.com/1951843/174504773-f8d8febb-7a45-4d9c-89b6-7d2404c5b8fd.png)

# Getting Started

Windows and macOS users can purchase an automated [installer](https://www.opendronemap.org/webodm/download#installer), which makes the installation process easier.

There&#039;s also a cloud-hosted version of WebODM available from [webodm.net](https://webodm.net).

## Recommended Machine Specs

To run a standalone installation of WebODM (the user interface), including the processing component (NodeODM), we recommend at a minimum:

* 100 GB free disk space
* 16 GB RAM

Don&#039;t expect to process more than a few hundred images with these specifications. To process larger datasets, add more RAM linearly to the number of images you want to process. A CPU with more cores will speed up processing, but can increase memory usage. GPU acceleration is also supported on Linux and WSL. To make use of your CUDA-compatible graphics card, make sure to pass `--gpu` when starting WebODM. You need the nvidia-docker installed in this case, see https://github.com/NVIDIA/nvidia-docker and https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#docker for information on docker/NVIDIA setup.

WebODM runs best on Linux, but works well on Windows and Mac too. If you are technically inclined, you can get WebODM to run natively on all three platforms.

WebODM by itself is just a user interface (see [below](#odm-nodeodm-webodm-what)) and does not require many resources. WebODM can be loaded on a machine with just 1 or 2 GB of RAM and work fine without NodeODM. You can then use a processing service such as the [lightning network](https://webodm.net) or run NodeODM on a separate, more powerful machine.

## Manual installation (Docker)
To install WebODM manually on your machine with docker:

### Requirements
  - [Git](https://git-scm.com/downloads)
  - [Docker](https://www.docker.com/)

* Windows users should install [Docker Desktop](https://hub.docker.com/editions/community/docker-ce-desktop-windows) and :
    1. make sure Linux containers are enabled (Switch to Linux Containers...)

    2.  give Docker enough CPUs (default 2) and RAM (&gt;4Gb, 16Gb better but leave some for Windows) by going to Settings -- Advanced

    3.  select where on your hard drive you want virtual hard drives to reside (Settings -- Advanced -- Images &amp; Volumes).
    
    4.  If you want to run the processing component (NodeODM) with GPU acceleration, install [WSL](https://learn.microsoft.com/windows/wsl/) and [set up GPU acceleration](https://learn.microsoft.com/windows/wsl/tutorials/gpu-compute). It&#039;s supported on Windows 11 or Windows 10, version 21H2 or higher.

### Installation with Docker
* From the Docker Quickstart Terminal or Git Bash (Windows), or from the command line (Mac / Linux / WSL), type:
```bash
git clone https://github.com/OpenDroneMap/WebODM --config core.autocrlf=input --depth 1
cd WebODM
./webodm.sh start
```
* If you face any issues at the last step on Linux, make sure your user is part of the docker group:
```bash
sudo usermod -aG docker $USER
exit
(restart shell by logging out and then back-in)
./webodm.sh start
```
* Open a Web Browser to `http://localhost:8000` (unless you are on Windows using Docker Toolbox, see below)

Docker Toolbox users need to find the IP of their docker machine by running this command from the Docker Quickstart Terminal:

```bash
docker-machine ip
192.168.1.100 (your output will be different)
```

The address to connect to would then be: `http://192.168.1.100:8000`.

To stop WebODM press CTRL+C or run:

```
./webodm.sh stop
```

To update WebODM to the latest version use:

```bash
./webodm.sh update
```

### Manage Processing Nodes

WebODM can be linked to one or more processing nodes that speak the [NodeODM API](https://github.com/OpenDroneMap/NodeODM/blob/master/docs/index.adoc), such as [NodeODM](https://github.com/OpenDroneMap/NodeODM), [NodeMICMAC](https://github.com/OpenDroneMap/NodeMICMAC/) or [ClusterODM](https://github.com/OpenDroneMap/ClusterODM). The default configuration includes a &quot;node-odm-1&quot; processing node which runs on the same machine as WebODM, just to help you get started. As you become more familiar with WebODM, you might want to install processing nodes on separate machines.

Adding more processing nodes will allow you to run multiple jobs in parallel.

You can also setup a [ClusterODM](https://github.com/OpenDroneMap/ClusterODM) node to run a single task across multiple machines with [distributed split-merge](https://docs.opendronemap.org/large/?highlight=distributed#getting-started-with-distributed-split-merge) and process dozen of thousands of images more quickly, with less memory.

If you don&#039;t need the default &quot;node-odm-1&quot; node, simply pass `--default-nodes 0` flag when starting WebODM:

`./webodm.sh restart --default-nodes 0`.

Then from the web interface simply manually remove the &quot;node-odm-1&quot; node.

## Distributed Installation Using NAS (Qnap)
If you use lightning or another processor node the requirements for WebODM are low enough for it to run on a fairly low power device such as a NAS. Testing has been done on a Qnap-TS264 with 32Gb of RAM (Celeron  N5095 processor)
To install WebODM on a Qnap NAS:-
1) Enable ssh access to the NAS in control panel
2) Install git. This might be easily achieved using the [qgit qkpg](https://www.myqnap.org/product/qgit/)
3) Now follow the ‚ÄúInstallation with Docker‚Äù instructions above.
4) A new &quot;webodm&quot; application should appear in container station along with four individual containers for the app.
5) Webodm should be available at port 8000 of the NAS.
6) Setup a lightning account online and configure it within &quot;processing nodes&quot;. It&#039;s also possible to setup a more powerful computer to run processing tasks instead of lightning.
   
This method of working may be useful if using the WebODM Lightning PAYG model as it offers somewhere to host your models outwith the three day window offered as part of PAYG

### Enable MicMac

WebODM can use [MicMac](https://github.com/OpenDroneMap/micmac) as a processing engine via [NodeMICMAC](https://github.com/OpenDroneMap/NodeMICMAC/). To add MicMac, simply run:

`./webodm.sh restart --with-micmac`

This will create a &quot;node-micmac-1&quot; processing node on the same machine running WebODM. Please note that NodeMICMAC is in active development and is currently experimental. If you find issues, please [report them](https://github.com/OpenDroneMap/NodeMICMAC/issues) on the NodeMICMAC repository.

### Enable SSL

WebODM has the ability to automatically request and install a SSL certificate via [Let‚Äôs Encrypt](https://letsencrypt.org/), or you can manually specify your own key/certificate pair.

 - Setup your DNS record (webodm.myorg.com --&gt; IP of server).
 - Make sure port 80 and 443 are open.
 - Run the following:

```bash
./webodm.sh restart --ssl --hostname webodm.myorg.com
```

That&#039;s it! The certificate will automatically renew when needed.

If you want to specify your own key/certificate pair, simply pass the `--ssl-key` and `--ssl-cert` option to `./webodm.sh`. See `./webodm.sh --help` for more information.

Note! You cannot pass an IP address to the hostname parameter! You need a DNS record setup.

### Enable IPv6

Your installation must first have a public IPv6 address.
To enable IPv6 on your installation, you need to activate IPv6 in Docker by adding the following to a file located at /etc/docker/daemon.json:
```bash
{
  &quot;ipv6&quot;: true,
  &quot;fixed-cidr-v6&quot;: &quot;fdb4:4d19:7eb5::/64&quot;
}
```
Restart Docker:
`systemctl restart docker`

To add IPv6, simply run:

`./webodm.sh restart --ipv6`

Note: When using `--ssl` mode, you cannot pass an IP address to the hostname parameter; you must set up a DNS AAAA record. Without `--ssl` mode enabled, access the site at (e.g., http://[2001:0db8:3c4d:0015::1]:8000). The brackets around the IPv6 address are essential!
You can add a new NodeODM node in WebODM by specifying an IPv6 address. Don‚Äôt forget to include brackets around the address! e.g., [2001:0db8:fd8a:ae80::1]

### Where Are My Files Stored?

When using Docker, all processing results are stored in a docker volume and are not available on the host filesystem. There are two specific docker volumes of interest:
1. Media (called webodm_appmedia): This is where all files related to a project and task are stored.
2. Postgres DB (called webodm_dbdata): This is what Postgres database uses to store its data.

For more information on how these two volumes are used and in which containers, please refer to the [docker-compose.yml](docker-compose.yml) file.

For various reasons such as ease of backup/restore, if you want to store your files on the host filesystem instead of a docker volume, you need to pass a path via the `--media-dir` and/or the `--db-dir` options:

```bash
./webodm.sh restart --media-dir /home/user/webodm_data --db-dir /home/user/webodm_db
```

Note that existing task results will not be available after the change. Refer to the [Migrate Data Volumes](https://docs.docker.com/engine/tutorials/dockervolumes/#backup-restore-or-migrate-data-volumes) section of the Docker documentation for information on migrating existing task results.

### Common Troubleshooting

Symptoms | Possible Solutions
--------- | ------------------
Run out of memory |  Make sure that your Docker environment has enough RAM allocated: [MacOS Instructions](http://stackoverflow.com/a/39720010), [Windows Instructions](https://docs.docker.com/desktop/settings/windows/#advanced)
While starting WebODM you get: `&#039;WaitNamedPipe&#039;,&#039;The system cannot find the file specified.&#039;` | 1. Make sure you have enabled VT-x virtualization in the BIOS.&lt;br/&gt;2. Try to downgrade your version of Python to 2.7
On Windows, docker-compose fails with `Failed to execute the script docker-compose` | Make sure you have enabled VT-x virtualization in the BIOS
Cannot access WebODM using Microsoft Edge on Windows 10 | Try to tweak your internet properties according to [these instructions](http://www.hanselman.com/blog/FixedMicrosoftEdgeCantSeeOrOpenVirtualBoxhostedLocalWebSites.aspx)
Getting a `No space left on device` error, but hard drive has enough space left | Docker on Windows by default will allocate only 20GB of space to the default docker-machine. You need to increase that amount. See [this link](http://support.divio.com/local-development/docker/managing-disk-space-in-your-docker-vm) and [this link](https://www.howtogeek.com/124622/how-to-enlarge-a-virtual-machines-disk-in-virtualbox-or-vmware/)
Cannot start WebODM via `./webodm.sh start`, error messages are different at each retry | You could be running out of memory. Make sure you have enough RAM available. 2GB should be the recommended minimum, unless you know what you are doing
While running WebODM with Docker Toolbox (VirtualBox) you cannot access WebODM from another computer in the same network. | As Administrator, run `cmd.exe` and then type `&quot;C:\Program Files\Oracle\VirtualBox\VBoxManage.exe&quot; controlvm &quot;default&quot; natpf1 &quot;rule-name,tcp,,8000,,8000&quot;`
On Windows, the storage space shown on the WebODM diagnostic page is not the same as what is actually set in Docker&#039;s settings. | From Hyper-V Manager, right-click ‚ÄúDockerDesktopVM‚Äù, go to Edit Disk, then choose to expand the disk and match the maximum size to the settings specified in the docker settings. Upon making the changes, restart docker.
On Linux or WSL, Warning: `GPU use was requested, but no GPU has been found` | Run `nvidia-smi` (natively) or `docker run --rm --gpus all nvidia/cuda:11.2.2-devel-ubuntu20.04 nvidia-smi` (docker) to check with [NVIDIA driver](https://www.nvidia.com/drivers/unix/) and [NVIDIA Container Toolkit](https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html).

#### Images Missing from Lightning Assets

When you use Lightning to process your task, you will need to download all assets to your local instance of WebODM. The all assets zip does *not* contain the images which were used to create the orthomosaic. This means that, although you can visualise the cameras layer in your local WebODM, when you click on a particular camera icon the image will not be shown.

The fix if you are using WebODM with Docker is as follows (instructions are for MacOS host):

1. Ensure that you have a directory which contains all of the images for the task and only the images;
2. Open Docker Desktop and navigate to Containers. Identify your WebODM instance and navigate to the container that is named `worker`. You will need the Container ID. This is a hash which is listed under the container name. Click to copy the Container ID using the copy icon next to it.
3. Open Terminal and enter `docker cp &lt;sourcedirectory&gt;/. &lt;dockercontainerID&gt;:/webodm/app/media/project/&lt;projectID&gt;/task/&lt;taskID&gt;`. Paste the Container ID to replace the location titled `&lt;dockercontainerID&gt;`. Enter the full directory path for your images to replace `&lt;sourcedirectory&gt;`;
4. Go back to Docker Desktop and navigate to Volumes in the side bar. Click on the volume called `webodm_appmedia`, click on `project`, identify the correct project and click on it, click on `task` and identify the correct task.
5. From Docker Desktop substitute the correct `&lt;projectID&gt;` and `&lt;taskID&gt;` into the command in Terminal;
6. Execute the newly edited command in Terminal. You will see a series of progress messages and your images will be copied to Docker;
7. Navigate to your project in your local instance of WebODM;
8. Open the Map and turn on the Cameras layer (top left);
9. Click on a Camera icon and the relevant image will be shown


Have you had other issues? Please [report them](https://github.com/OpenDroneMap/WebODM/issues/new) so that we can include them in this document.

### Backup and Restore

If you want to move WebODM to another system, you just need to transfer the docker volumes (unless you are storing your files on the file system).

On the old system:

```bash
mkdir -v backup
docker run --rm --volume webodm_dbdata:/temp --volume `pwd`/backup:/backup ubuntu tar cvf /backup/dbdata.tar /temp
docker run --rm --volume webodm_appmedia:/temp --volume `pwd`/backup:/backup ubuntu tar cvf /backup/appmedia.tar /temp
```

Your backup files will be stored in the newly created `backup` directory. Transfer the `backup` directory to the new system, then on the new system:

```bash
ls backup # --&gt; appmedia.tar  dbdata.tar
./webodm.sh down # Make sure WebODM is down
docker run --rm --volume webodm_dbdata:/temp --volume `pwd`/backup:/backup ubuntu bash -c &quot;rm -fr /temp/* &amp;&amp; tar xvf /backup/dbdata.tar&quot;
docker run --rm --volume webodm_appmedia:/temp --volume `pwd`/backup:/backup ubuntu bash -c &quot;rm -fr /temp/* &amp;&amp; tar xvf /backup/appmedia.tar&quot;
./webodm.sh start
```
In case when recovery .tar is missed, or corrupted you can conduct [Hard Recovery](/contrib/Hard_Recovery_Guide.md)

### Reset Password

If you forgot the password you picked the first time you logged into WebODM, to reset it just type:

```bash
./webodm.sh start &amp;&amp; ./webodm.sh resetadminpassword newpass
```

The password will be reset to `newpass`. The command will also tell you what username you chose.

### Manage Plugins

Plugins can be enabled and disabled from the user interface. Simply go to Administration -- Plugins.

### Update

If you use docker, updating is as simple as running:

```bash
./webodm.sh update
```

If you are running WebODM [natively](#run-it-natively), these commands should do it:

```bash
cd /webodm
sudo su odm # Only in case you are running WebODM with a different user
git pull origin master
source python3-venv/bin/activate # If you are running a virtualenv
npm install
pip install -r requirements.txt
webpack --mode production
python manage.py collectstatic --noinput
python manage.py migrate
```

## Run it natively

WebODM can run natively on Windows, MacOS and Linux. We don&#039;t recommend nor support running WebODM natively (using docker is easier), but it&#039;s possible.

Ubuntu 16.04 LTS users can refer to [this community script](/contrib/ubuntu_1604_install.sh) to install WebODM natively on a new machine.

To run WebODM, you will need to install:
 * PostgreSQL (&gt;= 9.5)
 * PostGIS 2.3
 * Python 3.6
 * GDAL (&gt;= 3)
 * Node.js (&gt;= 6.0)
 * Nginx (Linux/MacOS) - OR - Apache + mod_wsgi or Waitress (Windows)
 * Redis (&gt;= 2.6)
 * GRASS GIS (&gt;= 7.8)

On Linux, make sure you have:

```bash
apt-get install binutils libproj-dev gdal-bin nginx
```

On Windows use the [OSGeo4W](https://trac.osgeo.org/osgeo4w/) installer to install GDAL. MacOS users can use:

```
brew install postgres postgis
```

Then these steps should be sufficient to get you up and running:

```bash
git clone --depth 1 https://github.com/OpenDroneMap/WebODM
```

Create a `WebODM/webodm/local_settings.py` file containing your database settings:

```python
DATABASES = {
    &#039;default&#039;: {
        &#039;ENGINE&#039;: &#039;django.contrib.gis.db.backends.postgis&#039;,
        &#039;NAME&#039;: &#039;webodm_dev&#039;,
        &#039;USER&#039;: &#039;postgres&#039;,
        &#039;PASSWORD&#039;: &#039;postgres&#039;,
        &#039;HOST&#039;: &#039;localhost&#039;,
        &#039;PORT&#039;: &#039;5432&#039;,
    }
}
```

From psql or [pgadmin](https://www.pgadmin.org), connect to PostgreSQL, create a new database (name it `webodm_dev`), connect to it and set the [postgis.enable_outdb_rasters](http://postgis.net/docs/manual-2.2/postgis_enable_outdb_rasters.html) and [postgis.gdal_

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[openlayers/openlayers]]></title>
            <link>https://github.com/openlayers/openlayers</link>
            <guid>https://github.com/openlayers/openlayers</guid>
            <pubDate>Wed, 30 Jul 2025 00:04:59 GMT</pubDate>
            <description><![CDATA[OpenLayers]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/openlayers/openlayers">openlayers/openlayers</a></h1>
            <p>OpenLayers</p>
            <p>Language: JavaScript</p>
            <p>Stars: 12,010</p>
            <p>Forks: 3,107</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre># OpenLayers

[OpenLayers](https://openlayers.org/) is a high-performance, feature-packed library for creating interactive maps on the web. It can display map tiles, vector data and markers loaded from any source on any web page. OpenLayers has been developed to further the use of geographic information of all kinds. It is completely free, Open Source JavaScript, released under the [BSD 2-Clause License](https://opensource.org/licenses/BSD-2-Clause).

## Getting Started

Install the [`ol` package](https://www.npmjs.com/package/ol):

```
npm install ol
```

Import just what you need for your application:

```js
import Map from &#039;ol/Map&#039;;
import View from &#039;ol/View&#039;;
import TileLayer from &#039;ol/layer/Tile&#039;;
import XYZ from &#039;ol/source/XYZ&#039;;

new Map({
  target: &#039;map&#039;,
  layers: [
    new TileLayer({
      source: new XYZ({
        url: &#039;https://tile.openstreetmap.org/{z}/{x}/{y}.png&#039;
      })
    })
  ],
  view: new View({
    center: [0, 0],
    zoom: 2
  })
});
```

See the following examples for more detail on bundling OpenLayers with your application:

 * Using [Vite](https://github.com/openlayers/ol-vite)
 * Using [Rollup](https://github.com/openlayers/ol-rollup)
 * Using [webpack](https://github.com/openlayers/ol-webpack)
 * Using [Parcel](https://github.com/openlayers/ol-parcel)

For more detail on quick prototyping without the use of a Node.js based setup, see the [Skypack](https://github.com/openlayers/ol-skypack) example.

## Sponsors

OpenLayers appreciates contributions of all kinds.  We especially want to thank our fiscal sponsors who contribute to ongoing project maintenance.

&lt;br&gt;

[![Pozi logo](./sponsor-logos/pozi.png)](https://pozi.com/)

&gt; Pozi helps connect communities through spatial thinking.
&gt; We love Openlayers and it forms a core part of our platform.
&gt; https://pozi.com/ https://app.pozi.com/

&lt;br&gt;

[![yey&#039;maps logo](./sponsor-logos/yeymaps.png)](https://www.yeymaps.io/)

&gt; yey&#039;maps is a scalable cloud GIS suite that is developed with the
&gt; powerful Openlayers API and the GDAL library.
&gt; https://www.yeymaps.io/

&lt;br&gt;

[![ela-compil logo](./sponsor-logos/ela-compil.png)](https://ela.pl/)

&gt; We develop leading Physical Security Information Management (PSIM) software.
&gt; OpenLayers is the core of our map engine and we love it! 
&gt; https://ela.pl/

&lt;br&gt;

[![Ubigu Oy logo](./sponsor-logos/ubigu-oy.svg)](https://www.ubigu.fi/)

&gt; We advance holistic utilization and availability of spatial information,
&gt; for a better planned, built and managed society.
&gt; https://www.ubigu.fi/

&lt;br&gt;

[![Scribble Maps logo](./sponsor-logos/scribble-maps.png)](https://www.scribblemaps.com/)

&gt; Build custom maps and identify insights across real estate, engineering, research, business, exploration, construction, manufacturing - and so much more.
&gt; https://www.scribblemaps.com/

&lt;br&gt;

See our [GitHub sponsors page](https://github.com/sponsors/openlayers) or [Open Collective](https://opencollective.com/openlayers/contribute/sponsors-214/checkout) if you too are interested in becoming a regular sponsor.

## TypeScript support

The [ol package](https://npmjs.com/package/ol) includes auto-generated TypeScript declarations as `*.d.ts` files.

## Supported Browsers

OpenLayers runs on all modern browsers (with greater than 1% global usage).  This includes Chrome, Firefox, Safari and Edge. For older browsers, polyfills ([Fastly](https://polyfill-fastly.io) or [Cloudflare](https://cdnjs.cloudflare.com/polyfill)) will likely need to be added.

## Documentation

Check out the [hosted examples](https://openlayers.org/en/latest/examples/), the [workshop](https://openlayers.org/workshop/) or the [API documentation](https://openlayers.org/en/latest/apidoc/).

## Bugs

Please use the [GitHub issue tracker](https://github.com/openlayers/openlayers/issues) for all bugs and feature requests. Before creating a new issue, do a quick search to see if the problem has been reported already.

## Contributing

Please see our guide on [contributing](CONTRIBUTING.md) if you&#039;re interested in getting involved.

## Community

- Need help? Find it on [Stack Overflow using the tag &#039;openlayers&#039;](https://stackoverflow.com/questions/tagged/openlayers)
- Follow [@openlayers](https://twitter.com/openlayers) on Twitter

![Test Status](https://github.com/openlayers/openlayers/workflows/Test/badge.svg)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[carbon-design-system/carbon]]></title>
            <link>https://github.com/carbon-design-system/carbon</link>
            <guid>https://github.com/carbon-design-system/carbon</guid>
            <pubDate>Wed, 30 Jul 2025 00:04:58 GMT</pubDate>
            <description><![CDATA[A design system built by IBM]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/carbon-design-system/carbon">carbon-design-system/carbon</a></h1>
            <p>A design system built by IBM</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,436</p>
            <p>Forks: 1,962</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.carbondesignsystem.com&quot;&gt;
    &lt;img alt=&quot;Carbon Design System&quot; src=&quot;https://user-images.githubusercontent.com/3901764/57545698-ce5f2380-7320-11e9-8682-903df232d7b0.png&quot; width=&quot;100%&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;
  Carbon Design System
&lt;/h1&gt;

&gt; Carbon is an open-source design system built by IBM. With the IBM Design
&gt; Language as its foundation, the system consists of working code, design tools
&gt; and resources, human interface guidelines, and a vibrant community of
&gt; contributors.

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/carbon-design-system/carbon/blob/master/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/license-Apache--2.0-blue.svg&quot; alt=&quot;Carbon is released under the Apache-2.0 license&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/carbon-design-system/carbon/actions/workflows/ci.yml&quot;&gt;
    &lt;img src=&quot;https://github.com/carbon-design-system/carbon/actions/workflows/ci.yml/badge.svg&quot; alt=&quot;CI workflow status&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://lerna.js.org/&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg&quot; alt=&quot;Maintained with Lerna&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/carbon-design-system/carbon/blob/master/.github/CONTRIBUTING.md&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg&quot; alt=&quot;PRs welcome&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://bestpractices.coreinfrastructure.org/projects/7034&quot;&gt;
    &lt;img src=&quot;https://bestpractices.coreinfrastructure.org/projects/7034/badge&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/J7JEUEkTRX&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/discord/689212587170201628?color=5865F2&quot; alt=&quot;Chat with us on Discord&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

## Getting started

If you&#039;re just getting started, check out [`@carbon/react`](./packages/react) or
[`@carbon/web-components`](./packages/web-components).

We also have community-contributed components for the following technologies:

- [Angular](https://github.com/IBM/carbon-components-angular)
- [Svelte](https://github.com/IBM/carbon-components-svelte)
- [Vue](https://github.com/carbon-design-system/carbon-components-vue)

If you&#039;re trying to find something specific, here&#039;s a full list of packages that
we support!

| Package name                                          | Description                                                                                                                                                                                                                                   |
| ----------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| [`@carbon/react`](./packages/react)                   | React components and styles                                                                                                                                                                                                                   |
| [`@carbon/web-components`](./packages/web-components) | Web Components                                                                                                                                                                                                                                |
| [`@carbon/styles`](./packages/styles)                 | Sass styles for components                                                                                                                                                                                                                    |
| [`@carbon/elements`](./packages/elements)             | IBM Design Language elements like colors, type, iconography, and more                                                                                                                                                                         |
| [`@carbon/colors`](./packages/colors)                 | Work with IBM Design Language colors                                                                                                                                                                                                          |
| [`@carbon/grid`](./packages/grid)                     | Build layouts using the new 16 column grid system                                                                                                                                                                                             |
| [`@carbon/icons`](./packages/icons)                   | Iconography assets. We also offer support in: [React](./packages/icons-react), [Angular](https://github.com/carbon-design-system/carbon-icons-angular), [Vue](./packages/icons-vue), and [Svelte](https://github.com/IBM/carbon-icons-svelte) |
| [`@carbon/pictograms`](./packages/pictograms)         | Pictogram assets. We also offer support in: [React](./packages/pictograms-react) and [Svelte](https://github.com/IBM/carbon-pictograms-svelte)                                                                                                |
| [`@carbon/layout`](./packages/layout)                 | Layout-based units and spacing scale                                                                                                                                                                                                          |
| [`@carbon/motion`](./packages/motion)                 | Productive and expressive motion curves                                                                                                                                                                                                       |
| [`@carbon/themes`](./packages/themes)                 | Color tokens available in the Carbon Design System, like `$interactive-01`                                                                                                                                                                    |
| [`@carbon/type`](./packages/type)                     | New type tokens used alongside IBM Plex                                                                                                                                                                                                       |

&gt; [!NOTE]
&gt;
&gt; The code for https://carbondesignsystem.com/ is in
&gt; https://github.com/carbon-design-system/carbon-website. Any issues or pull
&gt; requests related to the website should be made there.

## :books: Documentation

- See our documentation site
  [here](https://www.carbondesignsystem.com/developing/frameworks/react/) for
  full how-to docs and guidelines
- [Contributing](/.github/CONTRIBUTING.md): Guidelines for making contributions
  to this repo.
- üèÉ‚Äç‚ôÄÔ∏è Migration Guides
  - [v10 to v11](./docs/migration/v11.md)
  - [v9 to v10 (vanilla)](./packages/carbon-components/docs/migration/migrate-to-10.x.md)
  - [v9 to v10 (v6 to v7 React)](./packages/react/docs/migration/migrate-to-7.x.md)

## üôå Contributing

We&#039;re always looking for contributors to help us fix bugs, build new features,
or help us improve the project documentation. If you&#039;re interested, definitely
check out our [Contributing Guide](/.github/CONTRIBUTING.md) and our
[Developer Guide](./docs/developer-handbook.md)! üëÄ

## Contributors

&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt;
&lt;!-- prettier-ignore-start --&gt;
&lt;!-- markdownlint-disable --&gt;
&lt;table&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/tay1orjones&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3360588?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Taylor Jones&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=tay1orjones&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=tay1orjones&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;#a11y-tay1orjones&quot; title=&quot;Accessibility&quot;&gt;Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/tw15egan&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/11928039?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;TJ Egan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=tw15egan&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=tw15egan&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;#infra-tw15egan&quot; title=&quot;Infrastructure (Hosting, Build-Tools, etc)&quot;&gt;üöá&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Atw15egan&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;#a11y-tw15egan&quot; title=&quot;Accessibility&quot;&gt;Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/aledavila&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/12533409?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alessandra Davila&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=aledavila&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=aledavila&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Aaledavila&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;#a11y-aledavila&quot; title=&quot;Accessibility&quot;&gt;Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/andrea-cardona-b647594b/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/32720851?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Andrea N. Cardona&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=andreancardona&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=andreancardona&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Aandreancardona&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;#a11y-andreancardona&quot; title=&quot;Accessibility&quot;&gt;Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/francinelucca&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/40550942?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Francine Lucca&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=francinelucca&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=francinelucca&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Afrancinelucca&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;#a11y-francinelucca&quot; title=&quot;Accessibility&quot;&gt;Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/sstrubberg&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/15822070?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Scott Strubberg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=sstrubberg&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=sstrubberg&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Asstrubberg&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;#a11y-sstrubberg&quot; title=&quot;Accessibility&quot;&gt;Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/alisonjoseph&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2753488?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alison Joseph&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=alisonjoseph&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=alisonjoseph&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Aalisonjoseph&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;#a11y-alisonjoseph&quot; title=&quot;Accessibility&quot;&gt;Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/aagonzales&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/11670886?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Anna Gonzales&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#design-aagonzales&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Aaagonzales&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/laurenmrice&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/43969356?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Lauren Rice&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#design-laurenmrice&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Alaurenmrice&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/joshblack&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/3901764?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Josh Black&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=joshblack&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=joshblack&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;#infra-joshblack&quot; title=&quot;Infrastructure (Hosting, Build-Tools, etc)&quot;&gt;üöá&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Ajoshblack&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;#a11y-joshblack&quot; title=&quot;Accessibility&quot;&gt;Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dakahn.netlify.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/40970507?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;DAK&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=dakahn&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=dakahn&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Adakahn&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;#a11y-dakahn&quot; title=&quot;Accessibility&quot;&gt;Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jnm2377&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/32556167?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Josefina Mancilla&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=jnm2377&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=jnm2377&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Ajnm2377&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;#a11y-jnm2377&quot; title=&quot;Accessibility&quot;&gt;Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/emyarod&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/8265238?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;emyarod&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=emyarod&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=emyarod&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Aemyarod&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;#a11y-emyarod&quot; title=&quot;Accessibility&quot;&gt;Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/preetibansalui&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/146315451?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Preeti Bansal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=preetibansalui&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;#a11y-preetibansalui&quot; title=&quot;Accessibility&quot;&gt;Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/erifsx&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/997572?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Eric Marcoux&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=erifsx&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.vincepic.one/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/4078018?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Vince Picone&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=vpicone&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=vpicone&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Avpicone&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;#a11y-vpicone&quot; title=&quot;Accessibility&quot;&gt;Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jillianhowarth&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/20690344?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;jillianhowarth&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#content-jillianhowarth&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;#design-jillianhowarth&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Ajillianhowarth&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://turpialcreative/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/4718579?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ricardo Henriquez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=rjhenriquez&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=rjhenriquez&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Arjhenriquez&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;#a11y-rjhenriquez&quot; title=&quot;Accessibility&quot;&gt;Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/johnbister&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/70543333?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;johnbister&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#design-johnbister&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Ajohnbister&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dbrugger&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/10086178?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Dominik Brugger&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=dbrugger&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;#maintenance-dbrugger&quot; title=&quot;Maintenance&quot;&gt;üöß&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://janhassel.de/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/28265588?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jan Hassel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=janhassel&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=janhassel&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;#a11y-janhassel&quot; title=&quot;Accessibility&quot;&gt;Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt; &lt;a href=&quot;#design-janhassel&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AlexanderLyon&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/17458641?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alexander Lyon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=AlexanderLyon&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/rzhekova&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/35401262?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rosie Z&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=rzhekova&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://nishithp.live/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/34577844?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Nishith P&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=NishithP2004&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/echarpibm&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/22177887?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Eric Charpentier&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>