<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Mon, 12 May 2025 00:05:12 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[schlagmichdoch/PairDrop]]></title>
            <link>https://github.com/schlagmichdoch/PairDrop</link>
            <guid>https://github.com/schlagmichdoch/PairDrop</guid>
            <pubDate>Mon, 12 May 2025 00:05:12 GMT</pubDate>
            <description><![CDATA[PairDrop: Transfer Files Cross-Platform. No Setup, No Signup.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/schlagmichdoch/PairDrop">schlagmichdoch/PairDrop</a></h1>
            <p>PairDrop: Transfer Files Cross-Platform. No Setup, No Signup.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,849</p>
            <p>Forks: 381</p>
            <p>Stars today: 50 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/schlagmichdoch/PairDrop&quot;&gt;
    &lt;img src=&quot;public/images/android-chrome-512x512.png&quot; alt=&quot;Logo&quot;  width=&quot;150&quot; height=&quot;150&quot;&gt;
  &lt;/a&gt;
 
  # _Send it_, with [PairDrop](https://pairdrop.net)

  &lt;p&gt;
    Local file sharing &lt;a href=&quot;https://pairdrop.net&quot;&gt;&lt;strong&gt;in your web browser&lt;/strong&gt;&lt;/a&gt;. 
    &lt;br&gt;
    Inspired by Apple&#039;s AirDrop.
    &lt;br&gt; 
    Fork of Snapdrop.
    &lt;br&gt;
    &lt;br&gt;
    &lt;a href=&quot;https://github.com/schlagmichdoch/PairDrop/issues&quot;&gt;Report a bug&lt;/a&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://github.com/schlagmichdoch/PairDrop/issues&quot;&gt;Request feature&lt;/a&gt;
  &lt;/p&gt;
&lt;/div&gt;
&lt;br&gt;

## Features
File sharing on your local network that works on all platforms.

- A multi-platform AirDrop-like solution that works.
  - Send images, documents or text via peer-to-peer connection to devices on the same local network.
- Internet transfers
  - Join temporary public rooms to transfer files easily over the Internet.
- Web-app 
  - Works on all devices with a modern web-browser.
 
Send a file from your phone to your laptop?
&lt;br&gt;Share photos in original quality with friends using Android and iOS?
&lt;br&gt;Share private files peer-to-peer between Linux systems?

&lt;img src=&quot;docs/pairdrop_screenshot_mobile.gif&quot; alt=&quot;Screenshot GIF showing PairDrop in use&quot; style=&quot;width: 300px&quot;&gt;

## Differences to the [Snapdrop](https://github.com/RobinLinus/snapdrop) it is based on
&lt;details&gt;&lt;summary&gt;View all differences&lt;/summary&gt;

### Paired Devices and Public Rooms — Internet Transfer
* Transfer files over the Internet between paired devices or by entering temporary public rooms.
* Connect to devices in complex network environments (public Wi-Fi, company network, iCloud Private Relay, VPN, etc.).
* Connect to devices on your mobile hotspot.
* Devices outside of your local network that are behind a NAT are auto-connected via the PairDrop TURN server.
* Devices from the local network, in the same public room, or previously paired are shown.

#### Persistent Device Pairing

Always connect to known devices

* Pair devices via a 6-digit code or a QR-Code.
* Paired devices always find each other via shared secrets independently of their local network. 
* Pairing is persistent. You find your devices even after reopening PairDrop.
* You can edit and unpair devices easily.

#### Temporary Public Rooms

Connect to others in complex network situations, or over the Internet.

* Enter a public room via a 5-letter code or a QR-code.
* Enter a public room to temporarily connect to devices outside your local network.
* All devices in the same public room see each other.
* Public rooms are temporary. Closing PairDrop  leaves all rooms.

### [Improved UI for Sending/Receiving Files](https://github.com/RobinLinus/snapdrop/issues/560)
* Files are transferred after a request is accepted. Files are auto-downloaded upon completing a transfer, if possible.
* Multiple files are downloaded as a ZIP file
* Download, share or save to gallery via the &quot;Share&quot; menu on Android and iOS.
* Multiple files are transferred at once with an overall progress indicator.

### Send Files or Text Directly From Share Menu, Context Menu or CLI
* [Send files directly from context menu on Ubuntu (using Nautilus)](docs/how-to.md#send-multiple-files-and-directories-directly-from-context-menu-on-ubuntu-using-nautilus)
* [Send files directly from the context menu on Windows](docs/how-to.md#send-files-directly-from-context-menu-on-windows)
* [Send directly from the &quot;Share&quot; menu on iOS](docs/how-to.md#send-directly-from-share-menu-on-ios)
* [Send directly from the &quot;Share&quot; menu on Android](docs/how-to.md#send-directly-from-share-menu-on-android)
* [Send directly via the command-line interface](docs/how-to.md#send-directly-via-command-line-interface)

### Other Changes
* Change your display name to easily differentiate your devices.
* [Paste files/text and choose the recipient afterwards ](https://github.com/RobinLinus/snapdrop/pull/534)
* [Prevent devices from sleeping on file transfer](https://github.com/RobinLinus/snapdrop/pull/413)
* Warn user before PairDrop is closed on file transfer
* Open PairDrop on multiple tabs simultaneously (Thanks [@willstott101](https://github.com/willstott101))
* [Video and audio preview](https://github.com/RobinLinus/snapdrop/pull/455) (Thanks [@victorwads](https://github.com/victorwads))
* Switch theme back to auto/system after dark or light mode is on
* Node-only implementation (Thanks [@Bellisario](https://github.com/Bellisario))
* Auto-restart on error (Thanks [@KaKi87](https://github.com/KaKi87))
* Lots of stability fixes (Thanks [@MWY001](https://github.com/MWY001) [@skiby7](https://github.com/skiby7) and [@willstott101](https://github.com/willstott101))
* To host PairDrop on your local network (e.g. on Raspberry Pi): [All peers connected with private IPs are discoverable by each other](https://github.com/RobinLinus/snapdrop/pull/558)
* When hosting PairDrop yourself, you can [set your own STUN/TURN servers](docs/host-your-own.md#specify-stunturn-servers)
* Translations.

&lt;/details&gt;

## Translate PairDrop on [Hosted Weblate](https://hosted.weblate.org/engage/pairdrop/)
&lt;a href=&quot;https://hosted.weblate.org/engage/pairdrop/&quot;&gt;
&lt;img src=&quot;https://hosted.weblate.org/widget/pairdrop/horizontal-blue.svg&quot; alt=&quot;Translation status&quot; style=&quot;width: 300px&quot; /&gt;
&lt;/a&gt;

## Built with the following awesome technologies:
* Vanilla HTML5 / JS ES6 / CSS 3 frontend
* [WebRTC](http://webrtc.org/) / WebSockets
* [Node.js](https://nodejs.org/en/) backend
* [Progressive web app (PWA)](https://en.wikipedia.org/wiki/Progressive_web_app) unified functionality
* [IndexedDB API](https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API) storage handling
* [zip.js](https://gildas-lormeau.github.io/zip.js/) library
* [cyrb53](https://github.com/bryc/code/blob/master/jshash/experimental/cyrb53.js) super-fast hash function
* [NoSleep](https://github.com/richtr/NoSleep.js) display sleep, add wake lock ([MIT](licenses/MIT-NoSleep))
* [heic2any](https://github.com/alexcorvi/heic2any) HEIC/HEIF to PNG/GIF/JPEG ([MIT](licenses/MIT-heic2any))
* [Weblate](https://weblate.org/) web-based localization tool
* [BrowserStack](https://www.browserstack.com/) This project is tested with BrowserStack

[FAQ](docs/faq.md)

[Host your own instance with Docker or Node.js](docs/host-your-own.md).

## Support
&lt;a href=&quot;https://www.buymeacoffee.com/pairdrop&quot; target=&quot;_blank&quot;&gt;
&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/v2/default-blue.png&quot; alt=&quot;Buy me a coffee&quot; style=&quot;height: 60px !important;width: 217px !important;&quot; &gt;
&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;

PairDrop is libre, and always will be. \
If you find it useful and want to support free and open-source software, please consider donating using the button above. \
I footed the bill for the domain and the server, and you can help create and maintain great software by supporting me. \
Thank you very much for your contribution!

## Contributing
Feel free to [open an issue](https://github.com/schlagmichdoch/pairdrop/issues/new/choose) or a
[pull request](https://github.com/schlagmichdoch/pairdrop/pulls), following the
[Contributing Guidelines](CONTRIBUTING.md).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[nodejs/undici]]></title>
            <link>https://github.com/nodejs/undici</link>
            <guid>https://github.com/nodejs/undici</guid>
            <pubDate>Mon, 12 May 2025 00:05:11 GMT</pubDate>
            <description><![CDATA[An HTTP/1.1 client, written from scratch for Node.js]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nodejs/undici">nodejs/undici</a></h1>
            <p>An HTTP/1.1 client, written from scratch for Node.js</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,778</p>
            <p>Forks: 620</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre># undici

[![Node CI](https://github.com/nodejs/undici/actions/workflows/nodejs.yml/badge.svg)](https://github.com/nodejs/undici/actions/workflows/nodejs.yml) [![neostandard javascript style](https://img.shields.io/badge/neo-standard-7fffff?style=flat\&amp;labelColor=ff80ff)](https://github.com/neostandard/neostandard) [![npm version](https://badge.fury.io/js/undici.svg)](https://badge.fury.io/js/undici) [![codecov](https://codecov.io/gh/nodejs/undici/branch/main/graph/badge.svg?token=yZL6LtXkOA)](https://codecov.io/gh/nodejs/undici)

An HTTP/1.1 client, written from scratch for Node.js.

&gt; Undici means eleven in Italian. 1.1 -&gt; 11 -&gt; Eleven -&gt; Undici.
It is also a Stranger Things reference.

## How to get involved

Have a question about using Undici? Open a [Q&amp;A Discussion](https://github.com/nodejs/undici/discussions/new) or join our official OpenJS [Slack](https://openjs-foundation.slack.com/archives/C01QF9Q31QD) channel.

Looking to contribute? Start by reading the [contributing guide](./CONTRIBUTING.md)

## Install

```
npm i undici
```

## Benchmarks

The benchmark is a simple getting data [example](https://github.com/nodejs/undici/blob/main/benchmarks/benchmark.js) using a
50 TCP connections with a pipelining depth of 10 running on Node 22.11.0.

```
┌────────────────────────┬─────────┬────────────────────┬────────────┬─────────────────────────┐
│  Tests                 │ Samples │ Result             │ Tolerance  │ Difference with slowest │
├────────────────────────┼─────────┼────────────────────┼────────────┼─────────────────────────┤
│  &#039;axios&#039;               │ 15      │ &#039;5708.26 req/sec&#039;  │ &#039;± 2.91 %&#039; │ &#039;-&#039;                     │
│  &#039;http - no keepalive&#039; │ 10      │ &#039;5809.80 req/sec&#039;  │ &#039;± 2.30 %&#039; │ &#039;+ 1.78 %&#039;              │
│  &#039;request&#039;             │ 30      │ &#039;5828.80 req/sec&#039;  │ &#039;± 2.91 %&#039; │ &#039;+ 2.11 %&#039;              │
│  &#039;undici - fetch&#039;      │ 40      │ &#039;5903.78 req/sec&#039;  │ &#039;± 2.87 %&#039; │ &#039;+ 3.43 %&#039;              │
│  &#039;node-fetch&#039;          │ 10      │ &#039;5945.40 req/sec&#039;  │ &#039;± 2.13 %&#039; │ &#039;+ 4.15 %&#039;              │
│  &#039;got&#039;                 │ 35      │ &#039;6511.45 req/sec&#039;  │ &#039;± 2.84 %&#039; │ &#039;+ 14.07 %&#039;             │
│  &#039;http - keepalive&#039;    │ 65      │ &#039;9193.24 req/sec&#039;  │ &#039;± 2.92 %&#039; │ &#039;+ 61.05 %&#039;             │
│  &#039;superagent&#039;          │ 35      │ &#039;9339.43 req/sec&#039;  │ &#039;± 2.95 %&#039; │ &#039;+ 63.61 %&#039;             │
│  &#039;undici - pipeline&#039;   │ 50      │ &#039;13364.62 req/sec&#039; │ &#039;± 2.93 %&#039; │ &#039;+ 134.13 %&#039;            │
│  &#039;undici - stream&#039;     │ 95      │ &#039;18245.36 req/sec&#039; │ &#039;± 2.99 %&#039; │ &#039;+ 219.63 %&#039;            │
│  &#039;undici - request&#039;    │ 50      │ &#039;18340.17 req/sec&#039; │ &#039;± 2.84 %&#039; │ &#039;+ 221.29 %&#039;            │
│  &#039;undici - dispatch&#039;   │ 40      │ &#039;22234.42 req/sec&#039; │ &#039;± 2.94 %&#039; │ &#039;+ 289.51 %&#039;            │
└────────────────────────┴─────────┴────────────────────┴────────────┴─────────────────────────┘
```

## Quick Start

```js
import { request } from &#039;undici&#039;

const {
  statusCode,
  headers,
  trailers,
  body
} = await request(&#039;http://localhost:3000/foo&#039;)

console.log(&#039;response received&#039;, statusCode)
console.log(&#039;headers&#039;, headers)

for await (const data of body) { console.log(&#039;data&#039;, data) }

console.log(&#039;trailers&#039;, trailers)
```

## Body Mixins

The `body` mixins are the most common way to format the request/response body. Mixins include:

- [`.arrayBuffer()`](https://fetch.spec.whatwg.org/#dom-body-arraybuffer)
- [`.blob()`](https://fetch.spec.whatwg.org/#dom-body-blob)
- [`.bytes()`](https://fetch.spec.whatwg.org/#dom-body-bytes)
- [`.json()`](https://fetch.spec.whatwg.org/#dom-body-json)
- [`.text()`](https://fetch.spec.whatwg.org/#dom-body-text)

&gt; [!NOTE]
&gt; The body returned from `undici.request` does not implement `.formData()`.

Example usage:

```js
import { request } from &#039;undici&#039;

const {
  statusCode,
  headers,
  trailers,
  body
} = await request(&#039;http://localhost:3000/foo&#039;)

console.log(&#039;response received&#039;, statusCode)
console.log(&#039;headers&#039;, headers)
console.log(&#039;data&#039;, await body.json())
console.log(&#039;trailers&#039;, trailers)
```

_Note: Once a mixin has been called then the body cannot be reused, thus calling additional mixins on `.body`, e.g. `.body.json(); .body.text()` will result in an error `TypeError: unusable` being thrown and returned through the `Promise` rejection._

Should you need to access the `body` in plain-text after using a mixin, the best practice is to use the `.text()` mixin first and then manually parse the text to the desired format.

For more information about their behavior, please reference the body mixin from the [Fetch Standard](https://fetch.spec.whatwg.org/#body-mixin).

## Common API Methods

This section documents our most commonly used API methods. Additional APIs are documented in their own files within the [docs](./docs/) folder and are accessible via the navigation list on the left side of the docs site.

### `undici.request([url, options]): Promise`

Arguments:

* **url** `string | URL | UrlObject`
* **options** [`RequestOptions`](./docs/docs/api/Dispatcher.md#parameter-requestoptions)
  * **dispatcher** `Dispatcher` - Default: [getGlobalDispatcher](#undicigetglobaldispatcher)
  * **method** `String` - Default: `PUT` if `options.body`, otherwise `GET`

Returns a promise with the result of the `Dispatcher.request` method.

Calls `options.dispatcher.request(options)`.

See [Dispatcher.request](./docs/docs/api/Dispatcher.md#dispatcherrequestoptions-callback) for more details, and [request examples](./docs/examples/README.md) for examples.

### `undici.stream([url, options, ]factory): Promise`

Arguments:

* **url** `string | URL | UrlObject`
* **options** [`StreamOptions`](./docs/docs/api/Dispatcher.md#parameter-streamoptions)
  * **dispatcher** `Dispatcher` - Default: [getGlobalDispatcher](#undicigetglobaldispatcher)
  * **method** `String` - Default: `PUT` if `options.body`, otherwise `GET`
* **factory** `Dispatcher.stream.factory`

Returns a promise with the result of the `Dispatcher.stream` method.

Calls `options.dispatcher.stream(options, factory)`.

See [Dispatcher.stream](./docs/docs/api/Dispatcher.md#dispatcherstreamoptions-factory-callback) for more details.

### `undici.pipeline([url, options, ]handler): Duplex`

Arguments:

* **url** `string | URL | UrlObject`
* **options** [`PipelineOptions`](./docs/docs/api/Dispatcher.md#parameter-pipelineoptions)
  * **dispatcher** `Dispatcher` - Default: [getGlobalDispatcher](#undicigetglobaldispatcher)
  * **method** `String` - Default: `PUT` if `options.body`, otherwise `GET`
* **handler** `Dispatcher.pipeline.handler`

Returns: `stream.Duplex`

Calls `options.dispatch.pipeline(options, handler)`.

See [Dispatcher.pipeline](./docs/docs/api/Dispatcher.md#dispatcherpipelineoptions-handler) for more details.

### `undici.connect([url, options]): Promise`

Starts two-way communications with the requested resource using [HTTP CONNECT](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/CONNECT).

Arguments:

* **url** `string | URL | UrlObject`
* **options** [`ConnectOptions`](./docs/docs/api/Dispatcher.md#parameter-connectoptions)
  * **dispatcher** `Dispatcher` - Default: [getGlobalDispatcher](#undicigetglobaldispatcher)
* **callback** `(err: Error | null, data: ConnectData | null) =&gt; void` (optional)

Returns a promise with the result of the `Dispatcher.connect` method.

Calls `options.dispatch.connect(options)`.

See [Dispatcher.connect](./docs/docs/api/Dispatcher.md#dispatcherconnectoptions-callback) for more details.

### `undici.fetch(input[, init]): Promise`

Implements [fetch](https://fetch.spec.whatwg.org/#fetch-method).

* https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch
* https://fetch.spec.whatwg.org/#fetch-method

Basic usage example:

```js
import { fetch } from &#039;undici&#039;


const res = await fetch(&#039;https://example.com&#039;)
const json = await res.json()
console.log(json)
```

You can pass an optional dispatcher to `fetch` as:

```js
import { fetch, Agent } from &#039;undici&#039;

const res = await fetch(&#039;https://example.com&#039;, {
  // Mocks are also supported
  dispatcher: new Agent({
    keepAliveTimeout: 10,
    keepAliveMaxTimeout: 10
  })
})
const json = await res.json()
console.log(json)
```

#### `request.body`

A body can be of the following types:

- ArrayBuffer
- ArrayBufferView
- AsyncIterables
- Blob
- Iterables
- String
- URLSearchParams
- FormData

In this implementation of fetch, ```request.body``` now accepts ```Async Iterables```. It is not present in the [Fetch Standard](https://fetch.spec.whatwg.org).

```js
import { fetch } from &#039;undici&#039;

const data = {
  async *[Symbol.asyncIterator]() {
    yield &#039;hello&#039;
    yield &#039;world&#039;
  },
}

await fetch(&#039;https://example.com&#039;, { body: data, method: &#039;POST&#039;, duplex: &#039;half&#039; })
```

[FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) besides text data and buffers can also utilize streams via [Blob](https://developer.mozilla.org/en-US/docs/Web/API/Blob) objects:

```js
import { openAsBlob } from &#039;node:fs&#039;

const file = await openAsBlob(&#039;./big.csv&#039;)
const body = new FormData()
body.set(&#039;file&#039;, file, &#039;big.csv&#039;)

await fetch(&#039;http://example.com&#039;, { method: &#039;POST&#039;, body })
```

#### `request.duplex`

- `&#039;half&#039;`

In this implementation of fetch, `request.duplex` must be set if `request.body` is `ReadableStream` or `Async Iterables`, however, even though the value must be set to `&#039;half&#039;`, it is actually a _full_ duplex. For more detail refer to the [Fetch Standard](https://fetch.spec.whatwg.org/#dom-requestinit-duplex).

#### `response.body`

Nodejs has two kinds of streams: [web streams](https://nodejs.org/api/webstreams.html), which follow the API of the WHATWG web standard found in browsers, and an older Node-specific [streams API](https://nodejs.org/api/stream.html). `response.body` returns a readable web stream. If you would prefer to work with a Node stream you can convert a web stream using `.fromWeb()`.

```js
import { fetch } from &#039;undici&#039;
import { Readable } from &#039;node:stream&#039;

const response = await fetch(&#039;https://example.com&#039;)
const readableWebStream = response.body
const readableNodeStream = Readable.fromWeb(readableWebStream)
```

## Specification Compliance

This section documents parts of the [HTTP/1.1](https://www.rfc-editor.org/rfc/rfc9110.html) and [Fetch Standard](https://fetch.spec.whatwg.org) that Undici does
not support or does not fully implement.

#### CORS

Unlike browsers, Undici does not implement CORS (Cross-Origin Resource Sharing) checks by default. This means:

- No preflight requests are automatically sent for cross-origin requests
- No validation of `Access-Control-Allow-Origin` headers is performed
- Requests to any origin are allowed regardless of the source

This behavior is intentional for server-side environments where CORS restrictions are typically unnecessary. If your application requires CORS-like protections, you will need to implement these checks manually.

#### Garbage Collection

* https://fetch.spec.whatwg.org/#garbage-collection

The [Fetch Standard](https://fetch.spec.whatwg.org) allows users to skip consuming the response body by relying on
[garbage collection](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Memory_Management#garbage_collection) to release connection resources. Undici does not do the same. Therefore, it is important to always either consume or cancel the response body.

Garbage collection in Node is less aggressive and deterministic
(due to the lack of clear idle periods that browsers have through the rendering refresh rate)
which means that leaving the release of connection resources to the garbage collector can lead
to excessive connection usage, reduced performance (due to less connection re-use), and even
stalls or deadlocks when running out of connections.

```js
// Do
const { body, headers } = await fetch(url);
for await (const chunk of body) {
  // force consumption of body
}

// Do not
const { headers } = await fetch(url);
```

The same applies for `request` too:
```js
// Do
const { body, headers } = await request(url);
await res.body.dump(); // force consumption of body

// Do not
const { headers } = await request(url);
```

However, if you want to get only headers, it might be better to use `HEAD` request method. Usage of this method will obviate the need for consumption or cancelling of the response body. See [MDN - HTTP - HTTP request methods - HEAD](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/HEAD) for more details.

```js
const headers = await fetch(url, { method: &#039;HEAD&#039; })
  .then(res =&gt; res.headers)
```

#### Forbidden and Safelisted Header Names

* https://fetch.spec.whatwg.org/#cors-safelisted-response-header-name
* https://fetch.spec.whatwg.org/#forbidden-header-name
* https://fetch.spec.whatwg.org/#forbidden-response-header-name
* https://github.com/wintercg/fetch/issues/6

The [Fetch Standard](https://fetch.spec.whatwg.org) requires implementations to exclude certain headers from requests and responses. In browser environments, some headers are forbidden so the user agent remains in full control over them. In Undici, these constraints are removed to give more control to the user.

#### `undici.upgrade([url, options]): Promise`

Upgrade to a different protocol. See [MDN - HTTP - Protocol upgrade mechanism](https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism) for more details.

Arguments:

* **url** `string | URL | UrlObject`
* **options** [`UpgradeOptions`](./docs/docs/api/Dispatcher.md#parameter-upgradeoptions)
  * **dispatcher** `Dispatcher` - Default: [getGlobalDispatcher](#undicigetglobaldispatcher)
* **callback** `(error: Error | null, data: UpgradeData) =&gt; void` (optional)

Returns a promise with the result of the `Dispatcher.upgrade` method.

Calls `options.dispatcher.upgrade(options)`.

See [Dispatcher.upgrade](./docs/docs/api/Dispatcher.md#dispatcherupgradeoptions-callback) for more details.

### `undici.setGlobalDispatcher(dispatcher)`

* dispatcher `Dispatcher`

Sets the global dispatcher used by Common API Methods. Global dispatcher is shared among compatible undici modules,
including undici that is bundled internally with node.js.

### `undici.getGlobalDispatcher()`

Gets the global dispatcher used by Common API Methods.

Returns: `Dispatcher`

### `undici.setGlobalOrigin(origin)`

* origin `string | URL | undefined`

Sets the global origin used in `fetch`.

If `undefined` is passed, the global origin will be reset. This will cause `Response.redirect`, `new Request()`, and `fetch` to throw an error when a relative path is passed.

```js
setGlobalOrigin(&#039;http://localhost:3000&#039;)

const response = await fetch(&#039;/api/ping&#039;)

console.log(response.url) // http://localhost:3000/api/ping
```

### `undici.getGlobalOrigin()`

Gets the global origin used in `fetch`.

Returns: `URL`

### `UrlObject`

* **port** `string | number` (optional)
* **path** `string` (optional)
* **pathname** `string` (optional)
* **hostname** `string` (optional)
* **origin** `string` (optional)
* **protocol** `string` (optional)
* **search** `string` (optional)

#### Expect

Undici does not support the `Expect` request header field. The request
body is  always immediately sent and the `100 Continue` response will be
ignored.

Refs: https://tools.ietf.org/html/rfc7231#section-5.1.1

#### Pipelining

Undici will only use pipelining if configured with a `pipelining` factor
greater than `1`. Also it is important to pass `blocking: false` to the
request options to properly pipeline requests.

Undici always assumes that connections are persistent and will immediately
pipeline requests, without checking whether the connection is persistent.
Hence, automatic fallback to HTTP/1.0 or HTTP/1.1 without pipelining is
not supported.

Undici will immediately pipeline when retrying requests after a failed
connection. However, Undici will not retry the first remaining requests in
the prior pipeline and instead error the corresponding callback/promise/stream.

Undici will abort all running requests in the pipeline when any of them are
aborted.

* Refs: https://tools.ietf.org/html/rfc2616#section-8.1.2.2
* Refs: https://tools.ietf.org/html/rfc7230#section-6.3.2

#### Manual Redirect

Since it is not possible to manually follow an HTTP redirect on the server-side,
Undici returns the actual response instead of an `opaqueredirect` filtered one
when invoked with a `manual` redirect. This aligns `fetch()` with the other
implementations in Deno and Cloudflare Workers.

Refs: https://fetch.spec.whatwg.org/#atomic-http-redirect-handling

### Workarounds

#### Network address family autoselection.

If you experience problem when connecting to a remote server that is resolved by your DNS servers to a IPv6 (AAAA record)
first, there are chances that your local router or ISP might have problem connecting to IPv6 networks. In that case
undici will throw an error with code `UND_ERR_CONNECT_TIMEOUT`.

If the target server resolves to both a IPv6 and IPv4 (A records) address and you are using a compatible Node version
(18.3.0 and above), you can fix the problem by providing the `autoSelectFamily` option (support by both `undici.request`
and `undici.Agent`) which will enable the family autoselection algorithm when establishing the connection.

## Collaborators

* [__Daniele Belardi__](https://github.com/dnlup), &lt;https://www.npmjs.com/~dnlup&gt;
* [__Ethan Arrowood__](https://github.com/ethan-arrowood), &lt;https://www.npmjs.com/~ethan_arrowood&gt;
* [__Matteo Collina__](https://github.com/mcollina), &lt;https://www.npmjs.com/~matteo.collina&gt;
* [__Matthew Aitken__](https://github.com/KhafraDev), &lt;https://www.npmjs.com/~khaf&gt;
* [__Robert Nagy__](https://github.com/ronag), &lt;https://www.npmjs.com/~ronag&gt;
* [__Szymon Marczak__](https://github.com/szmarczak), &lt;https://www.npmjs.com/~szmarczak&gt;

## Past Collaborators
* [__Tomas Della Vedova__](https://github.com/delvedor), &lt;https://www.npmjs.com/~delvedor&gt;

### Releasers

* [__Ethan Arrowood__](https://github.com/ethan-arrowood), &lt;https://www.npmjs.com/~ethan_arrowood&gt;
* [__Matteo Collina__](https://github.com/mcollina), &lt;https://www.npmjs.com/~matteo.collina&gt;
* [__Robert Nagy__](https://github.com/ronag), &lt;https://www.npmjs.com/~ronag&gt;
* [__Matthew Aitken__](https://github.com/KhafraDev), &lt;https://www.npmjs.com/~khaf&gt;

## Long Term Support

Undici aligns with the Node.js LTS schedule. The following table shows the supported versions:

| Version | Node.js     | End of Life |
|---------|-------------|-------------|
| 5.x     | v18.x       | 2024-04-30  |
| 6.x     | v20.x v22.x | 2026-04-30  |
| 7.x     | v24.x       | 2027-04-30  |

## License

MIT
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[pot-app/pot-desktop]]></title>
            <link>https://github.com/pot-app/pot-desktop</link>
            <guid>https://github.com/pot-app/pot-desktop</guid>
            <pubDate>Mon, 12 May 2025 00:05:10 GMT</pubDate>
            <description><![CDATA[🌈一个跨平台的划词翻译和OCR软件 | A cross-platform software for text translation and recognition.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pot-app/pot-desktop">pot-app/pot-desktop</a></h1>
            <p>🌈一个跨平台的划词翻译和OCR软件 | A cross-platform software for text translation and recognition.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 12,243</p>
            <p>Forks: 557</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>&lt;img width=&quot;200px&quot; src=&quot;public/icon.svg&quot; align=&quot;left&quot;/&gt;

# Pot (派了个萌的翻译器)

&gt; 🌈 一个跨平台的划词翻译软件 ([QQ 频道](https://pd.qq.com/s/akns94e1r))

![License](https://img.shields.io/github/license/pot-app/pot-desktop.svg)
![Tauri](https://img.shields.io/badge/Tauri-1.6.8-blue?logo=tauri)
![JavaScript](https://img.shields.io/badge/-JavaScript-yellow?logo=javascript&amp;logoColor=white)
![Rust](https://img.shields.io/badge/-Rust-orange?logo=rust&amp;logoColor=white)
![Windows](https://img.shields.io/badge/-Windows-blue?logo=windows&amp;logoColor=white)
![MacOS](https://img.shields.io/badge/-macOS-black?&amp;logo=apple&amp;logoColor=white)
![Linux](https://img.shields.io/badge/-Linux-yellow?logo=linux&amp;logoColor=white)

&lt;br/&gt;
&lt;hr/&gt;
&lt;div align=&quot;center&quot;&gt;

&lt;h3&gt;中文 | &lt;a href=&#039;./README_EN.md&#039;&gt;English&lt;/a&gt; | &lt;a href=&#039;./README_KR.md&#039;&gt; 한글 &lt;/a&gt;&lt;/h3&gt;

&lt;table&gt;
&lt;tr&gt;
    &lt;td&gt; &lt;img src=&quot;asset/1.png&quot;&gt;
    &lt;td&gt; &lt;img src=&quot;asset/2.png&quot;&gt;
    &lt;td&gt; &lt;img src=&quot;asset/3.png&quot;&gt;
&lt;/table&gt;

# 目录

&lt;/div&gt;

-   [使用说明](#使用说明)
-   [特色功能](#特色功能)
-   [支持接口](#支持接口)
-   [插件系统](#插件系统)
-   [安装指南](#安装指南)
-   [外部调用](#外部调用)
-   [Wayland 支持](#wayland-支持)
-   [国际化](#国际化weblate)
-   [贡献者](#贡献者)
-   [感谢](#感谢)

&lt;div align=&quot;center&quot;&gt;

# 使用说明

| 划词翻译                                             | 输入翻译                                                       | 外部调用                                                             |
| ---------------------------------------------------- | -------------------------------------------------------------- | -------------------------------------------------------------------- |
| 鼠标选中需要翻译的文本，按下设置的划词翻译快捷键即可 | 按下输入翻译快捷键呼出翻译窗口，输入待翻译文本后按下 回车 翻译 | 通过被其他软件调用实现更加方便高效的功能, 详见 [外部调用](#外部调用) |
| &lt;img src=&quot;asset/eg1.gif&quot;/&gt;                           | &lt;img src=&quot;asset/eg2.gif&quot;/&gt;                                     | &lt;img src=&quot;asset/eg3.gif&quot;/&gt;                                           |

| 剪切板监听模式                                                         | 截图 OCR                                          | 截图翻译                                         |
| ---------------------------------------------------------------------- | ------------------------------------------------- | ------------------------------------------------ |
| 在任意翻译面板上点击左上角图标启动剪切板监听默认，复制文字即可完成翻译 | 按下截图 OCR 快捷键后框选需要识别区域即可完成识别 | 按下截图翻译快捷键后框选需要识别区域即可完成翻译 |
| &lt;img src=&quot;asset/eg4.gif&quot;/&gt;                                             | &lt;img src=&quot;asset/eg5.gif&quot;/&gt;                        | &lt;img src=&quot;asset/eg6.gif&quot;/&gt;                       |

&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;

# 特色功能

&lt;/div&gt;

-   [x] 多接口并行翻译 ([支持接口](#支持接口))
-   [x] 多接口文字识别 ([支持接口](#支持接口))
-   [x] 多接口语音合成 ([支持接口](#支持接口))
-   [x] 导出到生词本 ([支持接口](#支持接口))
-   [x] 外部调用 ([详情](#外部调用))
-   [x] 支持插件系统 ([插件系统](#插件系统))
-   [x] 支持所有 PC 平台 (Windows, macOS, Linux)
-   [x] 支持 Wayland (在 KDE、Gnome 以及 Hyprland 上测试)
-   [x] 多语言支持

&lt;div align=&quot;center&quot;&gt;

# 支持接口

&lt;/div&gt;

## 翻译

-   [x] [OpenAI](https://platform.openai.com/)
-   [x] [智谱 AI](https://www.zhipuai.cn/)
-   [x] [Gemini Pro](https://gemini.google.com/)
-   [x] [Ollama](https://www.ollama.com/) (离线)
-   [x] [阿里翻译](https://www.aliyun.com/product/ai/alimt)
-   [x] [百度翻译](https://fanyi.baidu.com/)
-   [x] [彩云小译](https://fanyi.caiyunapp.com/)
-   [x] [腾讯翻译君](https://fanyi.qq.com/)
-   [x] [腾讯交互翻译](https://transmart.qq.com/)
-   [x] [火山翻译](https://translate.volcengine.com/)
-   [x] [小牛翻译](https://niutrans.com/)
-   [x] [Google](https://translate.google.com)
-   [x] [Bing](https://learn.microsoft.com/zh-cn/azure/cognitive-services/translator/)
-   [x] [Bing 词典](https://www.bing.com/dict)
-   [x] [DeepL](https://www.deepl.com/)
-   [x] [有道翻译](https://ai.youdao.com/)
-   [x] [剑桥词典](https://dictionary.cambridge.org/)
-   [x] [Yandex](https://translate.yandex.com/)
-   [x] [Lingva](https://github.com/TheDavidDelta/lingva-translate) ([插件](https://github.com/pot-app/pot-app-translate-plugin-template))
-   [x] [Tatoeba](https://tatoeba.org/) ([插件](https://github.com/pot-app/pot-app-translate-plugin-tatoeba))
-   [x] [ECDICT](https://github.com/skywind3000/ECDICT) ([插件](https://github.com/pot-app/pot-app-translate-plugin-ecdict))

更多接口支持见 [插件系统](#插件系统)

## 文字识别

-   [x] 系统 OCR (离线)
    -   [x] [Windows.Media.OCR](https://learn.microsoft.com/en-us/uwp/api/windows.media.ocr.ocrengine?view=winrt-22621) on Windows
    -   [x] [Apple Vision Framework](https://developer.apple.com/documentation/vision/recognizing_text_in_images) on MacOS
    -   [x] [Tesseract OCR](https://github.com/tesseract-ocr) on Linux
-   [x] [Tesseract.js](https://tesseract.projectnaptha.com/) (离线)
-   [x] [百度](https://ai.baidu.com/tech/ocr/general)
-   [x] [腾讯](https://cloud.tencent.com/product/ocr-catalog)
-   [x] [火山](https://www.volcengine.com/product/OCR)
-   [x] [迅飞](https://www.xfyun.cn/services/common-ocr)
-   [x] [腾讯图片翻译](https://cloud.tencent.com/document/product/551/17232)
-   [x] [百度图片翻译](https://fanyi-api.baidu.com/product/22)
-   [x] [Simple LaTeX](https://simpletex.cn/)
-   [x] [OCRSpace](https://ocr.space/) ([插件](https://github.com/pot-app/pot-app-recognize-plugin-template))
-   [x] [Rapid](https://github.com/RapidAI/RapidOcrOnnx) (离线 [插件](https://github.com/pot-app/pot-app-recognize-plugin-rapid))
-   [x] [Paddle](https://github.com/hiroi-sora/PaddleOCR-json) (离线 [插件](https://github.com/pot-app/pot-app-recognize-plugin-paddle))

更多接口支持见 [插件系统](#插件系统)

## 语音合成

-   [x] [Lingva](https://github.com/thedaviddelta/lingva-translate)

更多接口支持见 [插件系统](#插件系统)

## 生词本

-   [x] [Anki](https://apps.ankiweb.net/)
-   [x] [欧路词典](https://dict.eudic.net/)
-   [x] [有道](https://www.youdao.com/) ([插件](https://github.com/pot-app/pot-app-collection-plugin-youdao))
-   [x] [扇贝](https://web.shanbay.com/web/main) ([插件](https://github.com/pot-app/pot-app-collection-plugin-shanbay))

更多接口支持见 [插件系统](#插件系统)

&lt;div align=&quot;center&quot;&gt;

# 插件系统

&lt;/div&gt;

软件内置接口数量有限，但是您可以通过插件系统来扩展软件的功能。

## 插件安装

你可以在 [Plugin List](https://pot-app.com/plugin.html) 查找你需要的插件，然后前往插件仓库下载插件。

pot 插件的扩展名为 `.potext`, 下载得到`.potext`文件之后， 在 偏好设置-服务设置-添加外部插件-安装外部插件 选择对应的 `.potext` 即可安装成功，添加到服务列表中即可像内置服务一样正常使用了。

### 故障排除

-   找不到指定的模块 (Windows)

    出现类似这样的报错是因为系统缺少 C++库，前往[这里](https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist?view=msvc-170#visual-studio-2015-2017-2019-and-2022)安装即可解决问题。

-   不是有效的 Win32 应用程序 (Windows)

    出现类似这样的报错说明你没有下载对应系统或者架构的插件，前往插件仓库下载正确的插件即可解决问题。

## 插件开发

在 [Plugin List](https://pot-app.com/plugin.html) 中的 [模板](https://pot-app.com/plugin.html#%E6%A8%A1%E6%9D%BF) 章节提供了各种插件的开发模板，具体的开发文档请查看对应的模板仓库。

&lt;div align=&quot;center&quot;&gt;

# 安装指南

&lt;/div&gt;

## Windows

### 通过 Winget 安装

```powershell
winget install Pylogmon.pot
```

### 手动安装

1. 在 [Release](https://github.com/pot-app/pot-desktop/releases/latest) 页面下载最新 `exe` 安装包。

    - 64 位机器下载 `pot_{version}_x64-setup.exe`
    - 32 位机器下载 `pot_{version}_x86-setup.exe`
    - arm64 机器下载 `pot_{version}_arm64-setup.exe`

2. 双击安装包进行安装。

### 故障排除

-   启动后没有界面，点击托盘图标没有反应

    检查是否卸载/禁用了 WebView2，如果卸载/禁用了 WebView2，请手动安装 WebView2 或将其恢复。

    如果是企业版系统不方便安装或无法安装 WebView2，请尝试在 [Release](https://github.com/pot-app/pot-desktop/releases/latest) 下载内置 WebView2 的版本 `pot_{version}_{arch}_fix_webview2_runtime-setup.exe`

    若问题仍然存在请尝试使用 Windows7 兼容模式启动。

## MacOS

### 通过 Brew 安装

1. 添加我们的 tap:

```bash
brew tap pot-app/homebrew-tap
```

2. 安装 pot:

```bash
brew install --cask pot
```

3. 更新 pot

```bash
brew upgrade --cask pot
```

### 手动安装

1. 从 [Release](https://github.com/pot-app/pot-desktop/releases/latest) 页面下载最新的 `dmg` 安装包。（如果您使用的是 M1 芯片，请下载名为`pot_{version}_aarch64.dmg`的安装包，否则请下载名为`pot_{version}_x64.dmg`的安装包）
2. 双击下载的文件后将 pot 拖入 Applications 文件夹即可完成安装。

### 故障排除

-   由于开发者无法验证，“pot”无法打开。

    点击 取消 按钮，然后去 设置 -&gt; 隐私与安全性 页面，点击 仍要打开 按钮，然后在弹出窗口里点击 打开 按钮即可，以后打开 pot 就再也不会有任何弹窗告警了

    如果在 隐私与安全性 中找不到以上选项，或启动时提示文件损坏。打开 Terminal.app，并输入以下命令，然后重启 pot 即可：

    ```bash
    sudo xattr -d com.apple.quarantine /Applications/pot.app
    ```

-   如果每次打开时都遇到辅助功能权限提示，或者无法进行划词翻译，请前往设置 -&gt; 隐私与安全 -&gt; 辅助功能，移除 “pot”，并重新添加 “pot”。

## Linux

### Debian/Ubuntu

1. 从 [Release](https://github.com/pot-app/pot-desktop/releases/latest) 页面下载最新的对应架构的 `deb` 安装包。

2. 使用 `apt-get` 进行安装

    ```bash
    sudo apt-get install ./pot_{version}_amd64.deb
    ```

### Arch/Manjaro

&gt; [!WARNING]
&gt; 在最新版本的 [Webkit2Gtk](https://archlinux.org/packages/extra/x86_64/webkit2gtk) (2.42.0) 中，由于 Nvidia 专有驱动未完全实现 DMABUF，将导致无法启动和崩溃的情况发生。&lt;br&gt;
&gt; 请降级或在 `/etc/environment` （或者其他设置环境变量的地方）中加入 `WEBKIT_DISABLE_DMABUF_RENDERER=1` 环境变量关闭 DMABUF 的使用。

1. 在 [AUR](https://aur.archlinux.org/packages?O=0&amp;K=pot-translation) 查看

使用 `AUR helper` 安装：

```bash
yay -S pot-translation # 或 pot-translation-bin

# paru -S pot-translation # 或 pot-translation-bin
```

2. 如果你使用 `archlinuxcn` 源，可以直接使用 pacman 安装

```bash
sudo pacman -S pot-translation
```

### Flatpak

&gt; [!WARNING]
&gt; Flatpak 版本缺失托盘图标。

&lt;a href=&#039;https://flathub.org/apps/com.pot_app.pot&#039;&gt;
    &lt;img width=&#039;240&#039; alt=&#039;Download on Flathub&#039; src=&#039;https://flathub.org/api/badge?locale=zh-Hans&#039;/&gt;
&lt;/a&gt;

&lt;div align=&quot;center&quot;&gt;

# 外部调用

&lt;/div&gt;

Pot 提供了完整的 HTTP 接口，以便可以被其他软件调用。您可以通过向 `127.0.0.1:port` 发送 HTTP 请求来调用 pot，其中的`port`是 pot 监听的端口号，默认为`60828`,可以在软件设置中进行更改。

## API 文档:

```bash
POST &quot;/&quot; =&gt; 翻译指定文本(body为需要翻译的文本),
GET &quot;/config&quot; =&gt; 打开设置,
POST &quot;/translate&quot; =&gt; 翻译指定文本(同&quot;/&quot;),
GET &quot;/selection_translate&quot; =&gt; 划词翻译,
GET &quot;/input_translate&quot; =&gt; 输入翻译,
GET &quot;/ocr_recognize&quot; =&gt; 截图OCR,
GET &quot;/ocr_translate&quot; =&gt; 截图翻译,
GET &quot;/ocr_recognize?screenshot=false&quot; =&gt; 截图OCR(不使用软件内截图),
GET &quot;/ocr_translate?screenshot=false&quot; =&gt; 截图翻译(不使用软件内截图),
GET &quot;/ocr_recognize?screenshot=true&quot; =&gt; 截图OCR,
GET &quot;/ocr_translate?screenshot=true&quot; =&gt; 截图翻译,
```

## 示例：

-   调用划词翻译：

    如果想要调用 pot 划词翻译，只需向`127.0.0.1:port`发送请求即可。

    例如通过 curl 发送请求：

    ```bash
    curl &quot;127.0.0.1:60828/selection_translate&quot;
    ```

## 不使用软件内截图

这一功能可以让您在不使用软件内截图的情况下调用截图 OCR/截图翻译功能，这样您就可以使用您喜欢的截图工具来截图了，也可以解决在某些平台下 pot 自带的截图无法使用的问题。

### 调用流程

1. 使用其他截图工具截图
2. 将截图保存在 `$CACHE/com.pot-app.desktop/pot_screenshot_cut.png`
3. 向`127.0.0.1:port/ocr_recognize?screenshot=false`发送请求即可调用成功

&gt; `$CACHE`为系统缓存目录，例如在 Windows 上为`C:\Users\{用户名}\AppData\Local\com.pot-app.desktop\pot_screenshot_cut.png`

### 示例

在 Linux 下调用 Flameshot 进行截图 OCR:

```bash
rm ~/.cache/com.pot-app.desktop/pot_screenshot_cut.png &amp;&amp; flameshot gui -s -p ~/.cache/com.pot-app.desktop/pot_screenshot_cut.png &amp;&amp; curl &quot;127.0.0.1:60828/ocr_recognize?screenshot=false&quot;
```

## 现有用法 (快捷划词翻译)

### SnipDo (Windows)

1. 从 [Microsoft Store](https://apps.microsoft.com/store/detail/snipdo/9NPZ2TVKJVT7) 下载安装 SnipDo。
2. 从 [Release](https://github.com/pot-app/pot-desktop/releases/latest) 下载 pot 的 SnipDo 扩展 (pot.pbar)
3. 双击下载的扩展文件完成安装。
4. 选中文字，可以看到弹出的 SnipDo 工具条，点击翻译按钮即可翻译。

### PopClip (MacOS)

1. 从 [App Store](https://apps.apple.com/us/app/popclip/id445189367?mt=12) 下载安装 PopClip
2. 从 [Release](https://github.com/pot-app/pot-desktop/releases/latest) 下载 pot 的 PopClip 扩展 (pot.popclipextz)
3. 双击下载的扩展文件完成安装。
4. 在 PopClip 的扩展中启用 pot 扩展，选中文本即可点击翻译。

### Starry (Linux)

&gt; Starry 目前仍处于开发阶段，因此您只能手动编译它。

Github: [ccslykx/Starry](https://github.com/ccslykx/Starry)

&lt;div align=&quot;center&quot;&gt;

# Wayland 支持

&lt;/div&gt;

由于各大发行版对于 Wayland 的支持程度不同，所以 pot 本身没法做到特别完美的支持，这里可以提供一些常见问题的解决方案，通过合理的设置之后，pot 也可以在 Wayland 下完美运行。

## 快捷键无法使用

由于 Tauri 的快捷键方案并没有支持 Wayland，所以 pot 应用内的快捷键设置在 Wayland 下无法使用。 您可以设置系统快捷用 curl 发送请求来触发 pot，详见[外部调用](#外部调用)

## 截图无法使用

在一些纯 Wayland 桌面环境/窗口管理器(如 Hyprland)上，pot 内置的截图无法使用，这时可以通过使用其他截图工具代替，详见 [不使用软件内截图](#不使用软件内截图)

下面给出在 Hyprland 下的配置示例(通过 grim 和 slurp 实现截图)：

```conf
bind = ALT, X, exec, grim -g &quot;$(slurp)&quot; ~/.cache/com.pot-app.desktop/pot_screenshot_cut.png &amp;&amp; curl &quot;127.0.0.1:60828/ocr_recognize?screenshot=false&quot;
bind = ALT, C, exec, grim -g &quot;$(slurp)&quot; ~/.cache/com.pot-app.desktop/pot_screenshot_cut.png &amp;&amp; curl &quot;127.0.0.1:60828/ocr_translate?screenshot=false&quot;
```

其他桌面环境/窗口管理器也是类似的操作

## 划词翻译窗口跟随鼠标位置

由于目前 pot 在 Wayland 下还无法获取到正确的鼠标坐标，所以内部的实现无法工作。 对于某些桌面环境/窗口管理器，可以通过设置窗口规则来实现窗口跟随鼠标位置，这里以 Hyprland 为例：

```conf
windowrulev2 = float, class:(pot), title:(Translator|OCR|PopClip|Screenshot Translate) # Translation window floating
windowrulev2 = move cursor 0 0, class:(pot), title:(Translator|PopClip|Screenshot Translate) # Translation window follows the mouse position.
```

&lt;div align=&quot;center&quot;&gt;

# 国际化([Weblate](https://hosted.weblate.org/engage/pot-app/))

[![](https://hosted.weblate.org/widget/pot-app/pot-desktop/svg-badge.svg)](https://hosted.weblate.org/engage/pot-app/)

[![](https://hosted.weblate.org/widget/pot-app/pot-desktop/zh_Hans/multi-auto.svg)](https://hosted.weblate.org/engage/pot-app/)

&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;

# 贡献者

&lt;/div&gt;

&lt;img src=&quot;https://github.com/pot-app/.github/blob/master/pot-desktop-contributions.svg?raw=true&quot; width=&quot;100%&quot;/&gt;

## 手动编译

### 环境要求

Node.js &gt;= 18.0.0

pnpm &gt;= 8.5.0

Rust &gt;= 1.80.0

### 开始编译

1. Clone 仓库

    ```bash
    git clone https://github.com/pot-app/pot-desktop.git
    ```

2. 安装依赖

    ```bash
    cd pot-desktop
    pnpm install
    ```

3. 安装依赖(仅 Linux 需要)

    ```bash
    sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev patchelf libxdo-dev libxcb1 libxrandr2 libdbus-1-3
    ```

4. 开发调试

    ```bash
    pnpm tauri dev # Run the app in development mode
    ```

5. 打包构建
    ```bash
    pnpm tauri build # Build into installation package
    ```

&lt;div align=&quot;center&quot;&gt;

# 感谢

&lt;/div&gt;

-   [Bob](https://github.com/ripperhe/Bob) 灵感来源
-   [bob-plugin-openai-translator](https://github.com/yetone/bob-plugin-openai-translator) OpenAI 接口参考
-   [@uiYzzi](https://github.com/uiYzzi) 实现思路
-   [@Lichenkass](https://github.com/Lichenkass) 维护 Deepin 应用商店中的 pot
-   [Tauri](https://github.com/tauri-apps/tauri) 好用的 GUI 框架

&lt;div align=&quot;center&quot;&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WhiskeySockets/Baileys]]></title>
            <link>https://github.com/WhiskeySockets/Baileys</link>
            <guid>https://github.com/WhiskeySockets/Baileys</guid>
            <pubDate>Mon, 12 May 2025 00:05:09 GMT</pubDate>
            <description><![CDATA[Lightweight full-featured typescript/javascript WhatsApp Web API]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WhiskeySockets/Baileys">WhiskeySockets/Baileys</a></h1>
            <p>Lightweight full-featured typescript/javascript WhatsApp Web API</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,292</p>
            <p>Forks: 1,793</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>&lt;h1&gt;&lt;img alt=&quot;Baileys logo&quot; src=&quot;https://raw.githubusercontent.com/WhiskeySockets/Baileys/refs/heads/master/Media/logo.png&quot; height=&quot;75&quot;/&gt;&lt;/h1&gt;

![NPM Downloads](https://img.shields.io/npm/dw/%40whiskeysockets%2Fbaileys?label=npm&amp;color=%23CB3837)
![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/whiskeysockets/baileys)
![Discord](https://img.shields.io/discord/725839806084546610?label=discord&amp;color=%235865F2)

Baileys is a WebSockets-based TypeScript library for interacting with the WhatsApp Web API.

# Usage
A new guide has been posted at https://baileys.wiki.

# Sponsor
If you&#039;d like to financially support this project, you can do so by supporting the current maintainer [here](https://purpshell.dev/sponsor).

# Disclaimer
This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates.
The official WhatsApp website can be found at whatsapp.com. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners.

The maintainers of Baileys do not in any way condone the use of this application in practices that violate the Terms of Service of WhatsApp. The maintainers of this application call upon the personal responsibility of its users to use this application in a fair way, as it is intended to be used.
Use at your own discretion. Do not spam people with this. We discourage any stalkerware, bulk or automated messaging usage.

# License
Copyright (c) 2025 Rajeh Taher/WhiskeySockets

Licensed under the MIT License:
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &quot;Software&quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

Thus, the maintainers of the project can&#039;t be held liable for any potential misuse of this project.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[usebruno/bruno]]></title>
            <link>https://github.com/usebruno/bruno</link>
            <guid>https://github.com/usebruno/bruno</guid>
            <pubDate>Mon, 12 May 2025 00:05:08 GMT</pubDate>
            <description><![CDATA[Opensource IDE For Exploring and Testing Api's (lightweight alternative to postman/insomnia)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/usebruno/bruno">usebruno/bruno</a></h1>
            <p>Opensource IDE For Exploring and Testing Api's (lightweight alternative to postman/insomnia)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 33,506</p>
            <p>Forks: 1,589</p>
            <p>Stars today: 44 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[TheOdinProject/javascript-exercises]]></title>
            <link>https://github.com/TheOdinProject/javascript-exercises</link>
            <guid>https://github.com/TheOdinProject/javascript-exercises</guid>
            <pubDate>Mon, 12 May 2025 00:05:07 GMT</pubDate>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/TheOdinProject/javascript-exercises">TheOdinProject/javascript-exercises</a></h1>
            <p></p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,426</p>
            <p>Forks: 38,048</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre># JavaScript Exercises

These JavaScript exercises are intended to complement the JavaScript content on [The Odin Project](https://www.theodinproject.com/) (TOP). They should only be done when instructed during the course of the curriculum.

## Contributing

If you have a suggestion to improve an exercise, an idea for a new exercise, or notice an issue with an exercise, please feel free to open an issue after thoroughly reading our [contributing guide](https://github.com/TheOdinProject/javascript-exercises/blob/main/CONTRIBUTING.md).

## How To Use These Exercises

1. Fork and clone this repository. To learn how to fork a repository, see the GitHub documentation on how to [fork a repo](https://docs.github.com/en/get-started/quickstart/fork-a-repo).
   - Copies of repositories on your machine are called clones. If you need help cloning to your local environment you can learn how from the GitHub documentation on [cloning a repository](https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/cloning-a-repository-from-github/cloning-a-repository).
1. Before you start working on any exercises, you should first ensure you have the following installed:

   - **NPM**. You should have installed NPM already in our [Installing Node.js](https://www.theodinproject.com/paths/foundations/courses/foundations/lessons/installing-node-js) lesson. Just in case you need to check, type `npm --version` in your terminal. If you get back `Command &#039;npm&#039; not found, but can be installed with:`, **do not follow the instructions in the terminal** to install with `apt-get` as this causes permission issues. Instead, go back to the installation lesson and install Node with NVM by following the instructions there.
   - **Jest**. After cloning this repository to your local machine and installing NPM, go into the newly created directory (`cd javascript-exercises`) and run `npm install`. This will install Jest and set up the testing platform based on our preconfigured settings. (Note: if you get warnings that packages are out of date or contain vulnerabilities, you can safely ignore them for these exercises.)

1. Each exercise includes the following:

   - A markdown file with a description of the task, an empty (or mostly empty) JavaScript file, and a set of tests.
   - A `solutions` directory that contains a solution and the same test file with all of the tests unskipped.

   To complete an exercise, you will need to go to the exercise directory with `cd exerciseName` in the terminal and run `npm test exerciseName.spec.js`. This should run the test file and show you the output. When you run a test for the first time, it will fail. This is by design! You must open the exercise file and write the code needed to get the test to pass.

1. Some of the exercises have test conditions defined in their spec file as `test.skip` instead of `test`. This is intentional. Once all `test`s pass, you will change the next `test.skip` to `test` and test your code again. You will do this until all conditions are satisfied. **All tests must pass at the same time**, and you should not have any instances of `test.skip` in the spec file when you are finished with an exercise.
1. Once you successfully finish an exercise, check the `solutions` directory within each exercise to compare it with yours.
   - You should not be checking the solution for an exercise until you finish it!
   - If your solution differs wildly from TOP&#039;s solution (and still passes the exercise&#039;s requirements), that is completely fine. Feel free to ask about it in our Discord if there are parts you do not understand.

&gt; [!IMPORTANT]
&gt; Do not submit your solutions to this repo, as any PRs that do so will be closed without merging.

&gt; [!NOTE]
&gt; Due to the way Jest handles failed tests, it may return an exit code of 1 if any tests fail. NPM will interpret this as an error and you may see some `npm ERR!` messages after Jest runs. You can ignore these, or run your test with `npm test exerciseName.spec.js --silent` to suppress the errors.

The first exercise, `helloWorld`, will walk you through the process in-depth.

## Debugging

To debug functions, you can run the tests in the Visual Studio Code debugger terminal. You can open this by clicking the &quot;Run and Debug&quot; icon on the left or pressing &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;D&lt;/kbd&gt;, then clicking JavaScript Debug Terminal. You will be able to set breakpoints as you would in the Chrome DevTools debugger. You can run `npm test exerciseName.spec.js` to then execute your code up until your breakpoint and step through your code as necessary. **NOTE**: To take advantage of the debugger, you **MUST** run the script in the debugger terminal, not the bash or zsh terminal.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[tj/commander.js]]></title>
            <link>https://github.com/tj/commander.js</link>
            <guid>https://github.com/tj/commander.js</guid>
            <pubDate>Mon, 12 May 2025 00:05:06 GMT</pubDate>
            <description><![CDATA[node.js command-line interfaces made easy]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/tj/commander.js">tj/commander.js</a></h1>
            <p>node.js command-line interfaces made easy</p>
            <p>Language: JavaScript</p>
            <p>Stars: 27,303</p>
            <p>Forks: 1,711</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[nasa/openmct]]></title>
            <link>https://github.com/nasa/openmct</link>
            <guid>https://github.com/nasa/openmct</guid>
            <pubDate>Mon, 12 May 2025 00:05:05 GMT</pubDate>
            <description><![CDATA[A web based mission control framework.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nasa/openmct">nasa/openmct</a></h1>
            <p>A web based mission control framework.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 12,363</p>
            <p>Forks: 1,294</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre># Open MCT [![license](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](http://www.apache.org/licenses/LICENSE-2.0) [![Language grade: JavaScript](https://img.shields.io/lgtm/grade/javascript/g/nasa/openmct.svg?logo=lgtm&amp;logoWidth=18)](https://lgtm.com/projects/g/nasa/openmct/context:javascript) [![codecov](https://codecov.io/gh/nasa/openmct/branch/master/graph/badge.svg?token=7DQIipp3ej)](https://codecov.io/gh/nasa/openmct) [![This project is using Percy.io for visual regression testing.](https://percy.io/static/images/percy-badge.svg)](https://percy.io/b2e34b17/openmct) [![npm version](https://img.shields.io/npm/v/openmct.svg)](https://www.npmjs.com/package/openmct) 

Open MCT (Open Mission Control Technologies) is a next-generation mission control framework for visualization of data on desktop and mobile devices. It is developed at NASA&#039;s Ames Research Center, and is being used by NASA for data analysis of spacecraft missions, as well as planning and operation of experimental rover systems. As a generalizable and open source framework, Open MCT could be used as the basis for building applications for planning, operation, and analysis of any systems producing telemetry data.

Please visit our [Official Site](https://nasa.github.io/openmct/) and [Getting Started Guide](https://nasa.github.io/openmct/getting-started/)

Once you&#039;ve created something amazing with Open MCT, showcase your work in our GitHub Discussions [Show and Tell](https://github.com/nasa/openmct/discussions/categories/show-and-tell) section. We love seeing unique and wonderful implementations of Open MCT!

## See Open MCT in Action

Try Open MCT now with our [live demo](https://openmct-demo.herokuapp.com/).
![Demo](https://nasa.github.io/openmct/static/res/images/Open-MCT.Browse.Layout.Mars-Weather-1.jpg)

## Open MCT v2.0.0
Support for our legacy bundle-based API, and the libraries that it was built on (like Angular 1.x), have now been removed entirely from this repository.

For now if you have an Open MCT application that makes use of the legacy API, [a plugin](https://github.com/nasa/openmct-legacy-plugin) is provided that bootstraps the legacy bundling mechanism and API. This plugin will not be maintained over the long term however, and the legacy support plugin will not be tested for compatibility with future versions of Open MCT. It is provided for convenience only.

### How do I know if I am using legacy API?
You might still be using legacy API if your source code

* Contains files named bundle.js, or bundle.json,
* Makes calls to `openmct.$injector()`, or `openmct.$angular`,
* Makes calls to `openmct.legacyRegistry`, `openmct.legacyExtension`, or `openmct.legacyBundle`.


### What should I do if I am using legacy API?
Please refer to [the modern Open MCT API](https://nasa.github.io/openmct/documentation/). Post any questions to the [Discussions section](https://github.com/nasa/openmct/discussions) of the Open MCT GitHub repository.

## Building and Running Open MCT Locally

Building and running Open MCT in your local dev environment is very easy. Be sure you have [Git](https://git-scm.com/downloads) and [Node.js](https://nodejs.org/) installed, then follow the directions below. Need additional information? Check out the [Getting Started](https://nasa.github.io/openmct/getting-started/) page on our website.
(These instructions assume you are installing as a non-root user; developers have [reported issues](https://github.com/nasa/openmct/issues/1151) running these steps with root privileges.)

1. Clone the source code

 `git clone https://github.com/nasa/openmct.git`

2. Install development dependencies. Note: Check the package.json engine for our tested and supported node versions.

 `npm install`

3. Run a local development server

 `npm start`

Open MCT is now running, and can be accessed by pointing a web browser at [http://localhost:8080/](http://localhost:8080/)

## Documentation

Documentation is available on the [Open MCT website](https://nasa.github.io/openmct/documentation/).

### Examples

The clearest examples for developing Open MCT plugins are in the
[tutorials](https://github.com/nasa/openmct-tutorial) provided in
our documentation.

We want Open MCT to be as easy to use, install, run, and develop for as
possible, and your feedback will help us get there! Feedback can be provided via [GitHub issues](https://github.com/nasa/openmct/issues/new/choose), [Starting a GitHub Discussion](https://github.com/nasa/openmct/discussions), or by emailing us at [arc-dl-openmct@mail.nasa.gov](mailto:arc-dl-openmct@mail.nasa.gov).

## Building Applications With Open MCT

Open MCT is built using [`npm`](http://npmjs.com/) and [`webpack`](https://webpack.js.org/).

See our documentation for a guide on [building Applications with Open MCT](https://github.com/nasa/openmct/blob/master/API.md#starting-an-open-mct-application).

## Compatibility

This is a fast moving project and we do our best to test and support the widest possible range of browsers, operating systems, and nodejs APIs. We have a published list of support available in our package.json&#039;s `browserslist` key.

If you encounter an issue with a particular browser, OS, or nodejs API, please file a [GitHub issue](https://github.com/nasa/openmct/issues/new/choose)

## Plugins

Open MCT can be extended via plugins that make calls to the Open MCT API. A plugin is a group 
of software components (including source code and resources such as images and HTML templates)
that is intended to be added or removed as a single unit.

As well as providing an extension mechanism, most of the core Open MCT codebase is also 
written as plugins.

For information on writing plugins, please see [our API documentation](https://github.com/nasa/openmct/blob/master/API.md#plugins).

## Tests

Tests are written for [Jasmine 3](https://jasmine.github.io/api/3.1/global)
and run by [Karma](http://karma-runner.github.io). To run:

`npm test`

The test suite is configured to load any scripts ending with `Spec.js` found
in the `src` hierarchy. Full configuration details are found in
`karma.conf.js`. By convention, unit test scripts should be located
alongside the units that they test; for example, `src/foo/Bar.js` would be
tested by `src/foo/BarSpec.js`. (For legacy reasons, some existing tests may
be located in separate `test` folders near the units they test, but the
naming convention is otherwise the same.)

### Test Reporting

When `npm test` is run, test results will be written as HTML to
`dist/reports/tests/`. Code coverage information is written to `dist/reports/coverage`.

Code Coverage Reports are available from [codecov.io](https://app.codecov.io/gh/nasa/openmct/)

# Glossary

Certain terms are used throughout Open MCT with consistent meanings
or conventions. Any deviations from the below are issues and should be
addressed (either by updating this glossary or changing code to reflect
correct usage.) Other developer documentation, particularly in-line
documentation, may presume an understanding of these terms.

* _plugin_: A plugin is a removable, reusable grouping of software elements.
  The application is composed of plugins.
* _composition_: In the context of a domain object, this refers to the set of
  other domain objects that compose or are contained by that object. A domain
  object&#039;s composition is the set of domain objects that should appear
  immediately beneath it in a tree hierarchy. A domain object&#039;s composition is
  described in its model as an array of id&#039;s; its composition capability
  provides a means to retrieve the actual domain object instances associated
  with these identifiers asynchronously.
* _description_: When used as an object property, this refers to the human-readable
  description of a thing; usually a single sentence or short paragraph.
  (Most often used in the context of extensions, domain
  object models, or other similar application-specific objects.)
* _domain object_: A meaningful object to the user; a distinct thing in
  the work support by Open MCT. Anything that appears in the left-hand
  tree is a domain object.
* _identifier_: A tuple consisting of a namespace and a key, which together uniquely
  identifies a domain object.
* _model_: The persistent state associated with a domain object. A domain
  object&#039;s model is a JavaScript object which can be converted to JSON
  without losing information (that is, it contains no methods.)
* _name_: When used as an object property, this refers to the human-readable
  name for a thing. (Most often used in the context of extensions, domain
  object models, or other similar application-specific objects.)
* _navigation_: Refers to the current state of the application with respect
  to the user&#039;s expressed interest in a specific domain object; e.g. when
  a user clicks on a domain object in the tree, they are _navigating_ to
  it, and it is thereafter considered the _navigated_ object (until the
  user makes another such choice.)
* _namespace_: A name used to identify a persistence store. A running open MCT 
application could potentially use multiple persistence stores, with the 
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[LeCoupa/awesome-cheatsheets]]></title>
            <link>https://github.com/LeCoupa/awesome-cheatsheets</link>
            <guid>https://github.com/LeCoupa/awesome-cheatsheets</guid>
            <pubDate>Mon, 12 May 2025 00:05:04 GMT</pubDate>
            <description><![CDATA[👩‍💻👨‍💻 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/LeCoupa/awesome-cheatsheets">LeCoupa/awesome-cheatsheets</a></h1>
            <p>👩‍💻👨‍💻 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 42,438</p>
            <p>Forks: 6,443</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre>[![AWESOME CHEATSHEETS LOGO](_design/cover_github@2x.png)](https://lecoupa.github.io/awesome-cheatsheets/)

[![Awesome](https://awesome.re/badge.svg)](https://awesome.re) [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/LeCoupa/awesome-cheatsheets/blob/master/LICENSE)

**WEBSITE DIRECTORY**: [Available here](https://lecoupa.github.io/awesome-cheatsheets/).

&gt; 📚 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.

## 🤔 Why Awesome-Cheatsheets?

I usually make a cheat sheet when I want to improve my skills in a programming language, a framework or a development tool. [I started doing these kinds of things a long time ago on Gist](https://gist.github.com/LeCoupa). To better keep track of the history and to let people contribute, I re-organized all of them into this single repository. Most of the content is coming from official documentation and some books I have read.

Feel free to take a look. You might learn new things. They have been designed to provide a quick way to assess your knowledge and to save you time.

## 📚 Table of Contents

### 📃 Languages

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### Command line interface

- [Bash](languages/bash.sh)

#### Imperative

- [C](languages/C.txt)
- [C#](languages/C%23.txt)
- [Go](languages/golang.md)
- [Java](languages/java.md)
- [PHP](languages/php.php)
- [Python](languages/python.md)

#### Functional

- [JavaScript](languages/javascript.js)

&lt;/details&gt;

### 📦 Backend

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### PHP

- [Laravel](backend/laravel.php)

#### Python

- [Django](backend/django.py)

#### Javascript

- [Adonis.js](backend/adonis.js)
- [Express.js](backend/express.js)
- [Feathers.js](backend/feathers.js)
- [Moleculer](backend/moleculer.js)
- [Node.js](backend/node.js)
- [Sails.js](backend/sails.js)
  &lt;/details&gt;

### 🌐 Frontend

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### Basics

- [HTML5](frontend/html5.html)
- [CSS3](frontend/css3.css)

#### Frameworks

- [React.js](frontend/react.js)
- [Vue.js](frontend/vue.js)
- [Tailwind.css](frontend/tailwind.css)
- [Ember.js](frontend/ember.js)
- [Angular (2+)](frontend/angular.js)
- [AngularJS](frontend/angularjs.js)
  &lt;/details&gt;

### 🗃️ Databases

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### SQL

- [MySQL](databases/mysql.sh)

#### NoSQL

- [Redis](databases/redis.sh)
  &lt;/details&gt;

### 🔧 Tools

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### Development

- [cURL](tools/curl.sh)
- [Drush](tools/drush.sh)
- [Elasticsearch](tools/elasticsearch.js)
- [Emmet](tools/emmet.md)
- [Git](tools/git.sh)
- [Puppeteer](tools/puppeteer.js)
- [Sublime Text](tools/sublime_text.md)
- [VIM](tools/vim.txt)
- [Visual Studio Code](tools/vscode.md)
- [Xcode](tools/xcode.txt)

#### Infrastructure

- [AWS CLI](tools/aws.sh)
- [Docker](tools/docker.sh)
- [Heroku CLI](tools/heroku.sh)
- [Kubernetes](tools/kubernetes.md)
- [Nanobox Boxfile](tools/nanobox_boxfile.yml)
- [Nanobox CLI](tools/nanobox_cli.sh)
- [Nginx](tools/nginx.sh)
- [PM2](tools/pm2.sh)
- [Ubuntu](tools/ubuntu.sh)
- [Firebase CLI](tools/firebase_cli.md)
  &lt;/details&gt;

## 🙌🏼 How to Contribute?

You are more than welcome to contribute and build your own cheat sheet for your favorite programming language, framework or development tool. Just submit changes via pull request and I will review them before merging.

## 👩‍💻👨‍💻 Our valuable Contributors

&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/LeCoupa/awesome-cheatsheets/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contributors-img.web.app/image?repo=LeCoupa/awesome-cheatsheets&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[Clooos/Bubble-Card]]></title>
            <link>https://github.com/Clooos/Bubble-Card</link>
            <guid>https://github.com/Clooos/Bubble-Card</guid>
            <pubDate>Mon, 12 May 2025 00:05:03 GMT</pubDate>
            <description><![CDATA[Bubble Card is a minimalist card collection for Home Assistant with a nice pop-up touch.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Clooos/Bubble-Card">Clooos/Bubble-Card</a></h1>
            <p>Bubble Card is a minimalist card collection for Home Assistant with a nice pop-up touch.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,728</p>
            <p>Forks: 102</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>&gt; [!WARNING]
&gt; May 11 update:
&gt; ### Hi everyone! The latest Home Assistant update (2025.5) breaks some Bubble Card features. If you still want to update, you can install the [latest v3.0.0 beta](https://github.com/Clooos/Bubble-Card/releases/tag/v3.0.0-beta.6). It has a few remaining minor issues but offers full support for HA 2025.5.

&lt;br&gt;

---

# Bubble Card

![readme-images-bubble-card](https://github.com/Clooos/Bubble-Card/assets/36499953/c763bdad-ce71-46b0-aa9e-4ff0017072fe)

Bubble Card is a minimalist and customizable card collection for Home Assistant with a nice pop-up touch.

[![Stars](https://img.shields.io/github/stars/clooos/Bubble-Card)](#) [![Last commit](https://img.shields.io/github/last-commit/clooos/Bubble-Card)](#) [![YouTube](https://img.shields.io/badge/YouTube-My%20channel-red?logo=youtube)](https://www.youtube.com/@cloooos) [![Reddit Page](https://img.shields.io/badge/Reddit-r/BubbleCard-orange?logo=reddit)](https://www.reddit.com/r/BubbleCard/) [![Reddit Profile](https://img.shields.io/badge/Reddit-My%20stuff-orange?logo=reddit)](https://www.reddit.com/user/Clooooos/submitted/) [![Home Assistant Community Forum](https://img.shields.io/badge/Home%20Assistant-Community%20Forum-blue?logo=home-assistant)](https://community.home-assistant.io/t/bubble-card-a-minimalist-card-collection-for-home-assistant-with-a-nice-pop-up-touch/609678) [![Buy me a beer](https://img.shields.io/badge/Donate-Buy%20me%20a%20beer-yellow?logo=buy-me-a-coffee)](https://www.buymeacoffee.com/clooos) [![PayPal](https://img.shields.io/badge/Donate-PayPal-blue?logo=paypal)](https://www.paypal.com/donate/?business=MRVBV9PLT9ZPL&amp;no_recurring=0&amp;item_name=Hi%2C+I%27m+Clooos+the+creator+of+Bubble+Card.+Thank+you+for+supporting+me+and+my+passion.+You+are+awesome%21+%F0%9F%8D%BB&amp;currency_code=EUR) [![Patreon Clooos](https://img.shields.io/badge/Patreon-Clooos-orange?logo=patreon)](https://www.patreon.com/Clooos)


&lt;br&gt;

## Table of contents

**[`Installation`](#installation)**  **[`Configuration`](#configuration)**  **[`Pop-up`](#pop-up)**  **[`Horizontal buttons stack`](#horizontal-buttons-stack)**  **[`Button`](#button)**  **[`Media player`](#media-player)**  **[`Cover`](#cover)**  **[`Select`](#select)**  **[`Climate`](#climate)**  **[`Calendar`](#calendar)**  **[`Separator`](#separator)**  **[`Empty column`](#empty-column)**  **[`Sub-buttons`](#sub-buttons)**  **[`Card layouts`](#card-layouts)**  **[`Actions`](#tap-double-tap-and-hold-actions)**  **[`Styling`](#styling)**  **[`Templates`](#templates)**  **[`Conflicts`](#custom-components-conflicts)**  **[`Help`](#help)**  **[`Donate`](#donate)**

&lt;br&gt;

## Installation

**Home Assistant lowest supported version:** 2023.9.0

&lt;details&gt;

&lt;summary&gt;Without HACS&lt;/summary&gt;

&lt;br&gt;

1. Download these files: [bubble-card.js](https://raw.githubusercontent.com/Clooos/Bubble-Card/main/dist/bubble-card.js) and [bubble-pop-up-fix.js](https://raw.githubusercontent.com/Clooos/Bubble-Card/main/dist/bubble-pop-up-fix.js)
2. Add these files to your `&lt;config&gt;/www` folder
3. On your dashboard click on the icon at the right top corner then on `Edit dashboard`
4. Click again on that icon and then click on `Manage resources`
5. Click on `Add resource`
6. Copy and paste this: `/local/bubble-card.js?v=1`
7. Click on `JavaScript Module` then `Create`
8. Go back and refresh your page
9. You can now click on `Add card` in the bottom right corner and search for `Bubble Card`
10. After any update of the file you will have to edit `/local/bubble-card.js?v=1` and change the version to any higher number

If it&#039;s not working, just try to clear your browser cache.`

&lt;/details&gt;

&lt;details&gt;

&lt;summary&gt;With HACS (Recommended)&lt;/summary&gt;

&lt;br&gt;

This method allows you to get updates directly on the HACS main page

1. If HACS is not installed yet, download it following the instructions on [https://hacs.xyz/docs/setup/download/](https://hacs.xyz/docs/use/download/download/)
2. Proceed to the HACS initial configuration following the instructions on [https://hacs.xyz/docs/configuration/basic](https://hacs.xyz/docs/configuration/basic)
3. On your sidebar go to `HACS` &gt; `Frontend`
4. Click on the `+` button at the bottom right corner
5. Now search for `Bubble Card` and then click on the button at the bottom right corner to download it
6. Go back on your dashboard and click on the icon at the right top corner then on `Edit dashboard`
7. You can now click on `Add card` in the bottom right corner and search for `Bubble Card`

If it&#039;s not working, try to clear your browser cache.

#### Videos

You can also take a look at my YouTube channel for step by step videos.

[![YouTube](https://img.shields.io/badge/YouTube-My%20channel-red?logo=youtube)](https://www.youtube.com/@cloooos)

&lt;/details&gt;

&lt;br&gt;

[![Open Bubble Card on Home Assistant Community Store (HACS).](https://my.home-assistant.io/badges/hacs_repository.svg)](https://my.home-assistant.io/redirect/hacs_repository/?owner=clooos&amp;repository=Bubble-Card&amp;category=frontend)

&lt;br&gt;

## Configuration

All options can be configured in the Home Assistant editor. But you can find more details and the YAML in the documentation below.

&lt;details&gt;

**&lt;summary&gt;Main options (YAML + description)&lt;/summary&gt;**

| Name | Type | Requirement | Supported options | Description |
| --- | --- | --- | --- | --- |
| `type` | string | **Required** | `custom:bubble-card` | Type of the card |
| `card_type` | string | **Required** | `button`, `cover`, `empty-column`, `horizontal-buttons-stack`, `media-player`, `pop-up`, `select` or `separator` | Type of the Bubble Card, see below |
| `styles` | object list | Optional | Any CSS stylesheets | Allows you to customize your Bubble Card CSS, see [styling](#styling) |

&lt;/details&gt;

&lt;details&gt;

**&lt;summary&gt;Global CSS variables (see [Styling](#styling))&lt;/summary&gt;**

| Variable | Expected value | Description |
| --- | --- | --- |
| `--bubble-border-radius` | `px` | Border radius for all supported elements |
| `--bubble-main-background-color` | `color` | Main background color for all supported elements |
| `--bubble-secondary-background-color` | `color` | Secondary background color for all supported elements |
| `--bubble-accent-color` | `color` | Accent color for all supported elements |
| `--bubble-icon-border-radius` | `px` | Icon border radius for all supported elements |
| `--bubble-icon-background-color` | `color` | Icon background color for all supported elements |
| `--bubble-sub-button-border-radius` | `px` | Border radius for all sub-buttons |
| `--bubble-sub-button-background-color` | `color` | Background color for all sub-buttons |
| `--bubble-box-shadow` | see [box shadow](https://developer.mozilla.org/fr/docs/Web/CSS/box-shadow) | Box shadow for all supported elements |

&lt;/details&gt;

&lt;br&gt;

---

&lt;br&gt;

[![Bubble-Card---Youtube-github](https://github.com/user-attachments/assets/643aa16a-3fc9-4770-8269-62ec01db49b3)](https://www.youtube.com/watch?v=0hSQOlBxKKI)

**Check out this [video](https://www.youtube.com/watch?v=0hSQOlBxKKI) to learn about Bubble Card and its capabilities.** My YouTube channel is quite new and focuses on tutorials about Home Assistant and Bubble Card. Don’t hesitate to subscribe to help increase my channel’s visibility. Thank you in advance!

&lt;br&gt;

---

&lt;br&gt;

## Pop-up

![readme-pop-up](https://github.com/Clooos/Bubble-Card/assets/36499953/086bdcc4-62aa-445b-b265-b57c4e38b8a0)

This card allows you to convert any vertical stack into a pop-up. Each pop-up is **hidden by default** and can be opened by targeting its link (e.g. `&#039;#pop-up-name&#039;`), with any card that supports the `navigate` [action](#tap-double-tap-and-hold-actions), or with the [horizontal buttons stack](#horizontal-buttons-stack) that is included.

&gt; [!IMPORTANT]  
&gt; This card must be placed within a [vertical stack](https://www.home-assistant.io/dashboards/vertical-stack/) card at the topmost position to function properly. To avoid misalignment with your view, place vertical stacks/pop-ups after all other dashboard cards. It should be called from the same view to work.
&gt; &lt;details&gt;
&gt;  
&gt; &lt;summary&gt;&lt;b&gt;How to create a pop-up in the editor&lt;/b&gt;&lt;/summary&gt;
&gt;
&gt; &lt;br&gt;
&gt; 
&gt; 1. To add a pop-up you first need to add a `Vertical stack` card to your dashboard.
&gt; 2. This `Vertical stack` must be after all your other cards in your view order and before your horizontal buttons stack if you have one. In a section view type it can be placed anywhere.
&gt; 3. Now add a `Bubble Card` with the `Pop-up` type.
&gt; 4. Just fill in the `Hash` input and the ones you need.
&gt;
&gt; **You can also watch [this step by step video](https://www.youtube.com/watch?v=7mOV7BfWoFc).**
&gt;
&gt; &lt;/details&gt;

&gt; [!TIP]
&gt; ### Pop-up trigger 
&gt; This feature allows you to open a pop-up based on the state of any entity, for example, you can open a &quot;Security&quot; pop-up with a camera when a person is in front of your house. You can also create a toggle helper (input_boolean) and trigger its opening/closing in an automation.
&gt; &lt;details&gt;
&gt; &lt;summary&gt;Opening a pop-up when a &lt;code&gt;binary_sensor&lt;/code&gt; is &lt;code&gt;on&lt;/code&gt;&lt;/summary&gt;
&gt; &lt;br&gt;
&gt;
&gt; ```yaml
&gt; type: custom:bubble-card
&gt; card_type: pop-up
&gt; hash: &#039;#kitchen&#039;
&gt; name: Security
&gt; icon: mdi:video
&gt; trigger_entity: binary_sensor.front_door_motion
&gt; trigger_state: &#039;on&#039;
&gt; trigger_close: true
&gt; ```
&gt; 
&gt; &lt;/details&gt;
&gt;
&gt; ### Different ways to close a pop-up 
&gt; They are many ways to close a pop-up. For instance, you can swipe from the pop-up header to the bottom, by doing a long swipe inside the pop-up to the bottom, by pressing Escape on desktop, by removing the hash in the URL or by simply pressing the close button.
&gt;
&gt; ### Pop-up initialization fix
&gt; If you notice that pop-up content appears upon page load, consider installing this fix as an additional module.
&gt; &lt;details&gt;
&gt; &lt;summary&gt;Installation&lt;/summary&gt;
&gt; &lt;br&gt;
&gt;
&gt; You can do this by adding `bubble-pop-up-fix.js` to your `configuration.yaml` like so:
&gt; ```yaml
&gt; frontend:
&gt;   extra_module_url:
&gt;     - /hacsfiles/Bubble-Card/bubble-pop-up-fix.js
&gt; ```
&gt; If you didn&#039;t install it with HACS, change the path accordingly. Then, clear your browser cache.
&gt; 
&gt; For Android Home Assistant Companion App users, you can close the app, then clear the app cache. If it&#039;s still not working, you can close and restart the app again.
&gt; 
&gt; For iOS Home Assistant Companion App users, you can go to your Home Assistant settings, then navigate to Companion App &gt; Debug &gt; Clear Frontend Cache (or something similar), then refresh the page or restart the app.
&gt; 
&gt; For previous users of the **Optimized mode**, you will need to replace your `type: custom:bubble-pop-up` with this in YAML mode:
&gt; 
&gt; ```yaml
&gt; type: vertical-stack
&gt; cards:
&gt;   - type: custom:bubble-card
&gt;     card_type: pop-up
&gt; ```
&gt; 
&gt; &lt;/details&gt;

### Pop-up options

&lt;details&gt;

**&lt;summary&gt;Options (YAML + descriptions)&lt;/summary&gt;**

| Name | Type | Requirement | Supported options | Description |
| --- | --- | --- | --- | --- |
| `hash` | string | **Required** | Any unique hash (e.g. `&#039;#kitchen&#039;`) with &#039; &#039; | This is how you will open your pop-up |
| `auto_close` | string | Optional | A timeout in milliseconds (e.g. `10000` for 10s) | Auto close the pop-up after a timeout |
| `close_on_click` | boolean | Optional | `true` or `false` (default) | Automatically close the pop-up after any interaction |
| `close_by_clicking_outside` | boolean | Optional | `true` (default) or `false` | Close the pop-up by clicking outside of it |
| `width_desktop` | string | Optional | Any CSS value | Width on desktop (`100%` by default on mobile) |
| `margin` | string | Optional | Any CSS value | Use this **only** if your pop-up is not well centered on mobile (e.g. `13px`) |
| `margin_top_mobile` | string | Optional | Any CSS value | Top margin on mobile (e.g. `-56px` if your header is hidden) |
| `margin_top_desktop` | string | Optional | Any CSS value | Top margin on desktop (e.g. `50vh` for a half-sized pop-up or `calc(100vh - 400px)` for a fixed height of `400px`) |
| `bg_color` | string | Optional | Any hex, rgb or rgba value | The background color of your pop-up (e.g. `#ffffff` for a white background) |
| `bg_opacity` | string | Optional | Any value from `0` to `100` | The background opacity of your pop-up (e.g. `100` for no transparency) |
| `bg_blur` | string | Optional | Any value from `0` to `100` | The background blur effect of your pop-up, **this only work if `bg_opacity` is not set to `100`** (e.g. `0` for no blur)|
| `shadow_opacity` | string | Optional | Any value from `0` to `100` | The shadow opacity of your pop-up (e.g. `0` to hide it) |
| `hide_backdrop` | boolean | Optional | `true` or `false` (default) | Set this to true on the first pop-up of your main dashboard to disable the backdrop on all pop-ups. |
| `background_update` | boolean | Optional | `true` or `false` (default) | Update pop-up content in background (not recommended) |
| `trigger_entity` | string | Optional | Any entity | Open this pop-up based on the state of any entity |
| `trigger_state` | string | Optional (**Required** if `trigger_entity` is defined) | Any entity state | Entity state to open the pop-up |
| `trigger_close` | boolean | Optional | `true` or `false` (default) | Close the pop-up when `trigger_state` is different |
| `open_action` | object | Optional | See [actions](#tap-double-tap-and-hold-actions) | Trigger an action when the pop-up is opening |
| `close_action` | object | Optional | See [actions](#tap-double-tap-and-hold-actions) | Trigger an action when the pop-up is closing |
| `card_layout` | string | Optional | `normal` (default), `large`, `large-2-rows` | Styling layout of the header, see [card layouts](#card-layouts) |
| `show_header` | boolean | Optional | `true` or `false` (default) | Show/Hide the pop-up header fully |
| You also have access to [all the button settings](#button) for the header of the pop-up. | | Optional | | If undefined no header will be shown |

&lt;/details&gt;

&lt;details&gt;

**&lt;summary&gt;CSS variables (see [Styling](#styling))&lt;/summary&gt;**

| Variable | Expected value | Description |
| --- | --- | --- |
| `--bubble-pop-up-border-radius` | `px` | Border radius for the pop-up |
| `--bubble-pop-up-main-background-color` | `color` | Main background color for supported elements of the pop-up |
| `--bubble-pop-up-background-color` | `color` | Background color of the pop-up |
| `--bubble-backdrop-background-color` | `color` | Background color for the backdrop |
| You also have access to [all the button CSS variables](#button-options) for the header of the pop-up. | | |

&lt;/details&gt;


#### Examples

&lt;details&gt;

&lt;summary&gt;A pop-up&lt;/summary&gt;

&lt;br&gt;

```yaml
type: vertical-stack
cards:
  - type: custom:bubble-card
    card_type: pop-up
    hash: &#039;#kitchen&#039;
    name: Kitchen
    icon: mdi:fridge
    entity: light.kitchen
```

&lt;/details&gt;
&lt;details&gt;

&lt;summary&gt;A button to open the pop-up&lt;/summary&gt;

&lt;br&gt;

```yaml
type: custom:bubble-card
card_type: button
button_type: name
name: Kitchen
icon: mdi:fridge
button_action:
  tap_action:
    action: navigate
    navigation_path: &#039;#kitchen&#039;
```

&lt;/details&gt;

&lt;details&gt;

&lt;summary&gt;A pop-up with a fixed height&lt;/summary&gt;

&lt;br&gt;

Replace `400px` with the size you need.

```yaml
type: vertical-stack
cards:
  - type: custom:bubble-card
    card_type: pop-up
    hash: &#039;#kitchen&#039;
    name: Kitchen
    icon: mdi:fridge
    entity: light.kitchen
    margin_top_mobile: calc(100vh - 400px)
    margin_top_desktop: calc(100vh - 400px)
```

&lt;/details&gt;

&lt;br&gt;

---

&lt;br&gt;

## Horizontal buttons stack

![readme-horizontal-buttons-stack](https://github.com/Clooos/Bubble-Card/assets/36499953/8fe89ade-c77a-469b-891f-577e0bb2f46b)

This card is a good companion to the pop-up card, allowing you to open the corresponding pop-ups. It also allows you to open any page of your dashboard. In addition, you can add your motion/occupancy sensors so that the order of the buttons adapts according to the room you just entered. This card is scrollable, remains visible, and acts as a footer.

&gt; [!IMPORTANT]  
&gt; This card has to be the last one in your view (after every card and pop-up). It can&#039;t be inside any stack.

### Horizontal buttons stack options

&lt;details&gt;

**&lt;summary&gt;Options (YAML + descriptions)&lt;/summary&gt;**

| Name | Type | Requirement | Supported options | Description |
| --- | --- | --- | --- | --- |
| `1_link` | string | **Required** | The pop-up hash (e.g. `&#039;#kitchen&#039;`) with &#039; &#039; or any link | A link to open |
| `1_name` | string | Optional | Any string | A name for your button |
| `1_icon` | string | Optional | Any `mdi:` icon | An icon for your button |
| `1_entity` | string | Optional | Any light or light group | Display the color of that light in background |
| `1_pir_sensor` | string | Optional | Any binary sensor | At least one pir sensor or more for `auto_order`, in fact it also works with any entity type, for example you can add light groups and the order will change based on the last changed states. |
| `auto_order` | boolean | Optional | `true` or `false` (default) | Change the order of the buttons according to the `_pir_sensor` last changed time, **it needs to be `false` if you don&#039;t have any `_pir_sensor` in your code** |
| `margin` | string | Optional | Any CSS value | Use this **only** if your `horizontal-buttons-stack` is not well centered on mobile (e.g. `13px`) |
| `width_desktop` | string | Optional | Any CSS value | Width on desktop (`100%` by default on mobile) |
| `is_sidebar_hidden` | boolean | Optional | `true` or `false` (default) | Fix the horizontal buttons stack position if the sidebar is hidden on the desktop (only if you have made a modification to hide it yourself) |
| `rise_animation` | boolean | Optional | `true` (default) or `false` | Set this to `false` to disable the animation that activates once the page has loaded |
| `highlight_current_view` | boolean | Optional | `true` or `false` (default) | Highlight current hash / view with a smooth animation |
| `hide_gradient` | boolean | Optional | `true` or `false` (default) | Set this to `false` to hide the gradient |

&gt; [!IMPORTANT]  
&gt; The variables starting with a number define your buttons, just change this number to add more buttons (see example below).

&lt;/details&gt;

&lt;details&gt;

**&lt;summary&gt;CSS variables (see [Styling](#styling))&lt;/summary&gt;**

| Variable | Expected value | Description |
| --- | --- | --- |
| `--bubble-horizontal-buttons-stack-border-radius` | `px` | Border radius for horizontal button stack buttons |
| `--bubble-horizontal-buttons-stack-background-color` | `color` | Background color for horizontal button stack buttons |

&lt;/details&gt;


#### Example

&lt;details&gt;

&lt;summary&gt;An horizontal buttons stack that reorganize itself based on occupancy sensors&lt;/summary&gt;

&lt;br&gt;

```yaml
type: custom:bubble-card
card_type: horizontal-buttons-stack
auto_order: true
1_name: Living room
1_icon: mdi:sofa
1_link: &#039;#living-room&#039;
1_entity: light.living_room
1_pir_sensor: binary_sensor.living_room_motion
2_name: Kitchen
2_icon: mdi:fridge
2_link: &#039;#kitchen&#039;
2_entity: light.kitchen
2_pir_sensor: binary_sensor.kitchen_motion
3_name: Dining room
3_icon: mdi:silverware-fork-knife
3_link: &#039;#dining-room&#039;
3_entity: light.dining_room
3_pir_sensor: binary_sensor.dining_room_motion
```

&lt;/details&gt;

&lt;br&gt;

---

&lt;br&gt;

## Button

![readme-button-without-sub-buttons](https://github.com/Clooos/Bubble-Card/assets/36499953/790cbe3c-bdcc-4242-81ac-48e6ca2f1d46)

This card allows you to control your entities and can be customized in many ways. To access color / control of an entity, simply tap on the icon.

&gt; [!TIP]
&gt; ### What are the differences between all the button types?
&gt;
&gt; - **The button switch** is the default one. By default, it toggles an entity and its background color changes based on the entity’s state or the color of a light.
&gt;
&gt; - **The button slider** can control the brightness of a light, the volume of a media player, the position of a cover, and it also supports input numbers. Its background color can change based on the color of a light.
&gt;
&gt; - **The button state*

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[devlikeapro/waha]]></title>
            <link>https://github.com/devlikeapro/waha</link>
            <guid>https://github.com/devlikeapro/waha</guid>
            <pubDate>Mon, 12 May 2025 00:05:02 GMT</pubDate>
            <description><![CDATA[WAHA - WhatsApp HTTP API (REST API) that you can configure in a click! 3 engines: WEBJS (browser based), NOWEB (websocket nodejs), GOWS (websocket go)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/devlikeapro/waha">devlikeapro/waha</a></h1>
            <p>WAHA - WhatsApp HTTP API (REST API) that you can configure in a click! 3 engines: WEBJS (browser based), NOWEB (websocket nodejs), GOWS (websocket go)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,461</p>
            <p>Forks: 418</p>
            <p>Stars today: 1 star today</p>
            <h2>README</h2><pre># WAHA

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./logo.png&quot; style=&#039;border-radius: 50%&#039; width=&#039;150&#039;/&gt;
&lt;/p&gt;

**WAHA** - **W**hats**A**pp **H**TTP **A**PI (REST API) that you can install on your own server and run in less than 5 minutes!

[![Docker Pulls](https://img.shields.io/docker/pulls/devlikeapro/waha)](https://hub.docker.com/r/devlikeapro/waha)

- Documentation: [https://waha.devlike.pro/](https://waha.devlike.pro/)
- Dashboard Example: [https://waha.devlike.pro/dashboard](https://waha.devlike.pro/dashboard)
- Swagger Example: [https://waha.devlike.pro/swagger](https://waha.devlike.pro/swagger)

# Tables of Contents

&lt;!-- toc --&gt;

- [Quick start](#quick-start)
  * [Requirements](#requirements)
  * [Send your first message](#send-your-first-message)
    + [1. Download image](#1-download-image)
    + [2. Run WhatsApp HTTP API](#2-run-whatsapp-http-api)
    + [3. Start a new session](#3-start-a-new-session)
    + [4. Get and scan QR](#4-get-and-scan-qr)
    + [5. Get the screenshot](#5-get-the-screenshot)
    + [6. Send a text message](#6-send-a-text-message)
  * [What is next?](#what-is-next)
- [Development](#development)
  * [Start the project](#start-the-project)

&lt;!-- tocstop --&gt;

# Quick start

## Requirements

Only thing that you must have - installed docker. Please follow the original
instruction &lt;a href=&quot;https://docs.docker.com/get-docker/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;how to install docker -&gt;&lt;/a&gt;.

When you are ready - come back and follows the below steps to send the first text message to WhatsApp via HTTP API!

## Send your first message

Let&#039;s go over steps that allow you to send your first text message via WhatsApp HTTP API!

### 1. Download image

Assuming you have installed [Docker](https://docs.docker.com/get-docker/), let&#039;s download the image.


```bash
docker pull devlikeapro/waha
```


```bash
docker login -u devlikeapro -p {KEY}
docker pull devlikeapro/waha-plus
docker logout
```

Read more about how to get `PASSWORD` for [**➕ WAHA Plus**](https://waha.devlike.pro/docs/how-to/waha-plus/)

### 2. Run WhatsApp HTTP API

Run WhatsApp HTTP API:

```bash
docker run -it --rm -p 3000:3000/tcp --name waha devlikeapro/waha

# It prints logs and the last line must be
# WhatsApp HTTP API is running on: http://[::1]:3000
```

Open the link in your browser [http://localhost:3000/](http://localhost:3000/) and you&#039;ll see API documentation
(Swagger).


### 3. Start a new session

To start a new session you should have your mobile phone with installed WhatsApp application close to you.

Please go and read how what we&#039;ll need to a bit
later:
&lt;a href=&quot;https://faq.whatsapp.com/381777293328336/?helpref=hc_fnav&quot; target=&quot;_blank&quot;&gt;
How to log in - the instruction on WhatsApp site
&lt;/a&gt;

When your ready - find `POST /api/sessions`, click on **Try it out**, then **Execute** a bit below.


The example payload:
```json
{
  &quot;name&quot;: &quot;default&quot;
}
```


By using the request with `name` values you can start multiple session (WhatsApp accounts) inside the single docker container in Plus


### 4. Get and scan QR

Find `GET /api/screenshot` and execute it, it shows you QR code.


**Scan the QR with your cell phone&#039;s WhatsApp app.**


### 5. Get the screenshot

Execute `GET /api/screenshot` after a few seconds after scanning the QR - it&#039;ll show you the screenshot of you Whatsapp
instance. If you can get the actual screenshot - then you&#039;re ready to start sending messages!


### 6. Send a text message

Let&#039;s send a text message - find `POST /api/sendText`  in [swagger](http://localhost:3000/) and change `chatId` this
way: use a phone international phone number without `+` symbol and add `@c.us` at the end.

For phone number `12132132131` the `chatId` is  `12132132131@c.us`.

The example payload:
```json
{
  &quot;chatId&quot;: &quot;12132132130@c.us&quot;,
  &quot;text&quot;: &quot;Hi there!&quot;,
  &quot;session&quot;: &quot;default&quot;
}
```

Also, you can use `curl` and send POST request like this:

```bash
# Phone without +
export PHONE=12132132130
curl -d &quot;{\&quot;chatId\&quot;: \&quot;${PHONE}@c.us\&quot;, \&quot;text\&quot;: \&quot;Hello from WhatsApp HTTP API\&quot; }&quot; -H &quot;Content-Type: application/json&quot; -X POST http://localhost:3000/api/sendText
```

## What is next?
[Go and read the full documentation!](https://waha.devlike.pro/docs/overview/introduction/)

# Development

## Start the project
1. Clone the repository
2. Make sure you&#039;re using node&gt;=22
3. Run the following commands:
```bash
# Install dependencies
yarn install
# Fetch and compile proto files
yarn gows:proto
# Run
yarn start
# open http://localhost:3000
```</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[pollinations/pollinations]]></title>
            <link>https://github.com/pollinations/pollinations</link>
            <guid>https://github.com/pollinations/pollinations</guid>
            <pubDate>Mon, 12 May 2025 00:05:01 GMT</pubDate>
            <description><![CDATA[Free Open-Source Image and Text Generation]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pollinations/pollinations">pollinations/pollinations</a></h1>
            <p>Free Open-Source Image and Text Generation</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,880</p>
            <p>Forks: 206</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre># [Pollinations.AI](https://pollinations.ai)

---

## 🆕 Latest News

- **🔍 Special Bee** - New &quot;Special Bee&quot; issue template! Projects can now request referrer verification by submitting a [Domain Verification Request](https://github.com/pollinations/pollinations/issues/new?template=special-bee-request.yml)[More info](https://github.com/pollinations/pollinations/blob/master/APIDOCS.md#special-bee-)
- **📚 API Documentation** - Major API documentation improvements! We&#039;ve completely revamped our API docs with better examples, clearer explanations, and interactive code snippets. [Check it out](https://github.com/pollinations/pollinations/blob/master/APIDOCS.md).
- **🤖 MCP Server** - New Model Context Protocol (MCP) server for AI assistants like Claude to generate images directly! [Learn more](./model-context-protocol/README.md).  
  [![MCP Server Interface](https://github.com/user-attachments/assets/7311a7df-6b6a-4da5-94f8-7d57baca0ba3)](./model-context-protocol/README.md)
- **💲 Support Us** - You can now support us with our new **Tip Us** button. Optionally connect your Discord account to **Ko-Fi** to get premium Discord roles!
- **🎵 Audio Generation** - New text-to-speech and speech-to-text capabilities are now available! Try the `openai-audio` model - see our [API documentation](APIDOCS.md#audio-generation-api) for details.
- **🤖 AI Code Assistant** - We&#039;re excited to announce MentatBot, the autonomous AI coding assistant that implements new features directly from GitHub issues! Simply [create an issue](https://github.com/pollinations/pollinations/issues/new) describing what you&#039;d like to see, and MentatBot will analyze and implement it. [Learn more](https://mentat.ai/).

---

[![Pollinations.AI Logo](https://pollinations.ai/p/3D_wireframe_blueprint_of_the_conceptual_isometric_world_of_Pollinations_AI_a_surreal_hyperrealistic_digital_garden_Elements_emerge_partially_from_all_sides?width=3000&amp;height=1000&amp;seed=-1)](https://pollinations.ai/p/3D_wireframe_blueprint_of_the_conceptual_isometric_world_of_Pollinations_AI_a_surreal_hyperrealistic_digital_garden_Elements_emerge_partially_from_all_sides?width=3000&amp;height=1000&amp;seed=-1)

## 🌟 Introduction

[Pollinations.AI](https://pollinations.ai) is an open-source gen AI startup based in Berlin, providing the most easy-to-use, free text and image generation API available. No signups or API keys required. We prioritize your privacy with zero data storage and completely anonymous usage.

## 🚀 Key Features

- 🔓 **100% Open Source**
- 🆓 **_Free to use_**
- 🔒 **Simplicity and privacy:** No logins, no keys, no data stored
- 🖼️ **Embed like any normal image or text**
- 🎵 **Audio generation:** Text-to-speech and speech-to-text capabilities
- 🌍 Over **50,000 active users** and &gt; **_20 million images generated per month_**
- 🤝 Used by various **open-source LLMs**, **bots**, and **communities**
- 🎣 **_Easy-to-use React hooks_** ([React Hooks Examples](https://react-hooks.pollinations.ai/))
- 🤖 **Autonomous Development:** Features implemented by our MentatBot coding assistant through GitHub issues

&lt;a href=&quot;https://star-history.com/#pollinations/pollinations&amp;Date&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=pollinations/pollinations&amp;type=Date&amp;theme=dark&quot; width=&quot;600&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=pollinations/pollinations&amp;type=Date&quot; width=&quot;600&quot; /&gt;
   &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=pollinations/pollinations&amp;type=Date&quot; width=&quot;600&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;

## 🚀 Getting Started

### Image Generation

1. Visit [https://pollinations.ai](https://pollinations.ai)
2. Type your description in the text box
3. Click &quot;Generate&quot; and watch the magic happen!

### Text Generation

1. Visit [https://text.pollinations.ai](https://text.pollinations.ai)
2. Start chatting with the AI

### Audio Generation

1. Use the `openai-audio` model with our API ([explore voices at OpenAI.fm](https://www.openai.fm/))
2. Generate speech from text or transcribe audio to text

### MCP Server for AI Assistants

Our MCP (Model Context Protocol) server enables AI assistants like Claude to generate images and audio directly. [Learn more](./model-context-protocol/README.md)

```bash
# Run with npx (no installation required)
npx @pollinations/model-context-protocol
```

Community alternatives like [MCPollinations](https://github.com/pinkpixel-dev/MCPollinations) are also available.

AI assistants can:
- Generate images from text descriptions
- Create text-to-speech audio with various voice options
- Play audio responses through the system speakers
- Access all Pollinations.AI models and services
- List available models, voices, and capabilities

For more advanced usage, check out our [API documentation](APIDOCS.md).

## 🖥️ How to Use

### Web Interface

Our web interface is user-friendly and doesn&#039;t require any technical knowledge. Simply visit [https://pollinations.ai](https://pollinations.ai) and start creating!

### API

Use our API directly in your browser or applications:

    https://pollinations.ai/p/conceptual_isometric_world_of_pollinations_ai_surreal_hyperrealistic_digital_garden

Replace the description with your own, and you&#039;ll get a unique image based on your words!

## 🎨 Examples

### Image Generation

Here&#039;s an example of a generated image:

[![Conceptual Isometric World](https://pollinations.ai/p/3d_wireframe_blueprint_for_the_prompt_conceptual%20isometric%20world%20of%20pollinations%20ai%20surreal%20hyperrealistic%20digital%20garden?width=2000&amp;height=500&amp;nologo=true&amp;seed=-1)](https://pollinations.ai/p/3d_wireframe_blueprint_for_the_prompt_conceptual%20isometric%20world%20of%20pollinations%20ai%20surreal%20hyperrealistic%20digital%20garden?width=2000&amp;height=500&amp;nologo=true&amp;seed=-1)

Python code to download the generated image:

    import requests

    def download_image(prompt):
        url = f&quot;https://pollinations.ai/p/{prompt}&quot;
        response = requests.get(url)
        with open(&#039;generated_image.jpg&#039;, &#039;wb&#039;) as file:
            file.write(response.content)
        print(&#039;Image downloaded!&#039;)

    download_image(&quot;conceptual_isometric_world_of_pollinations_ai_surreal_hyperrealistic_digital_garden&quot;)

### Text Generation

To generate text, use this URL:

    https://text.pollinations.ai/What%20is%20artificial%20intelligence?

### Audio Generation

To generate audio from text, use this URL:

    https://text.pollinations.ai/Welcome%20to%20Pollinations?model=openai-audio&amp;voice=nova

## 🛠️ Integration

### React Hooks

We offer React hooks for easy integration. Example usage:

    import React from &#039;react&#039;;
    import { usePollinationsImage, usePollinationsText } from &#039;@pollinations/react&#039;;
    import ReactMarkdown from &#039;react-markdown&#039;;

    const AIGeneratedContent = () =&gt; {
      const imageUrl = usePollinationsImage(&quot;Beautiful landscape of Paris with Eiffel Tower&quot;, { width: 800, height: 600, seed: 42 });
      const markdown = usePollinationsText(&quot;Write a brief travel guide for Paris, including top attractions and local cuisine in markdown&quot;, { seed: 42 });

      return (
        &lt;div&gt;
          &lt;h2&gt;AI-Generated Travel Guide&lt;/h2&gt;
          &lt;img src={imageUrl} alt=&quot;AI Generated&quot; /&gt;
          {markdown ? (
            &lt;ReactMarkdown&gt;{markdown}&lt;/ReactMarkdown&gt;
          ) : (
            &lt;p&gt;Loading markdown content...&lt;/p&gt;
          )}
        &lt;/div&gt;
      );
    };

    export default AIGeneratedContent;

Check out our [Pollinations React Hooks](./pollinations-react/README.md) for more details.

## Architecture
```mermaid
graph LR
    Q[Bots - Discord, Telegram, WhatsApp] --&gt; L1
    
    N[30+ Mobile and Web Apps] --&gt; L1
    N --&gt; L2
    
    A[pollinations.ai Web Frontend] --&gt; L1
    A --&gt; L2
    
    R[AI Agents - Qwen, Sillytavern, ...] --&gt; L1
    
    AI[AI Assistants - Claude] --&gt; MCP[MCP Server]
    MCP --&gt; L1
    
    L1[Image CDN] --&gt; CF[Cloudflare Worker with R2 Cache]
    L2[Text CDN] --&gt; C
    
    CF --&gt; B
    
    B[image-origin.pollinations.ai - AWS EC2 CPU] --&gt; F[Azure OpenAI - Prompt Enhancing]
    B --&gt; S[LlamaGuard - Safety Checker]
    F --&gt; E[Translation Service - 1 GPU VM]
    E --&gt; D[FLUX image generation model - 2-6 GPU VMs on AWS]
    
    C[text.pollinations.ai - AWS EC2 CPU] --&gt; P[karma.yt - Realtime News]
    C --&gt; SC[Scaleway API]
    C --&gt; DS[Deepseek API]
    C --&gt; G[Azure-hosted Serverless LLMs]
    C --&gt; CFM[Cloudflare AI]
    SC --&gt; MI[Mistral Models]
    SC --&gt; QW[Qwen Models]
    SC --&gt; LL[Llama Models]
    DS --&gt; DM[Deepseek Models]
    G --&gt; H[OpenAI]
    G --&gt; K[Claude]
    CFM --&gt; CFL[Llama &amp; Deepseek Models]
```

## Projects Using Pollinations.AI

&gt; **⭐ GitHub Star Counts:** Projects with GitHub repositories include star counts to help you gauge their popularity.
&gt; 
&gt; **🆕 NEW Tag:** Projects are marked with the 🆕 emoji when they are recently added. This tag is automatically removed after 15 days from the submission date or if no date is specified.
&gt; 
&gt; **Note:** Some projects may be temporarily hidden from this list if they are currently broken or undergoing maintenance.

Pollinations.AI is used in various projects, including:

### LLM Integrations

| Project | Description | Creator | Links |
|---------|-------------|---------|-------|
| 🆕 Rizqi O Chatbot 🇮🇩 | Rizqi O Chatbot adalah proyek berbasis Pollinations yang menggabungkan tiga fitur utama: chatbot AI, generator gambar AI, dan generator audio AI. (An AI chatbot, image generator, and audio generator project with support for custom aspect ratios, over 200 art styles &amp; visual effects, and automatic translation from Indonesian to English.) | @ray23-bit | [Website](https://chatbot.rizqioliveira.my.id), [GitHub](https://github.com/ray23-bit/Projectenam) |
| 🆕 Define | An AI-powered REST API designed to generate definitions for words or phrases, constrained to a specified target word count. It allows customization of tone, context, and language, delivering precise, context-aware definitions programmatically—ideal for developers and content creators. | @hasanraiyan | [Website](https://define-i05a.onrender.com/api/docs/) |
| 🆕 CoNavic | A free, open-source browser extension that brings the power of ChatGPT and browser automation directly to your fingertips. Instantly access AI assistance, manage tabs, and organize bookmarks using natural language all securely within your browser. | @mkantwala | [GitHub](https://github.com/mkantwala/CoNavic/) - ⭐ 1 |
| 🆕 imggen.top 🇨🇳 | Create stunning AI-generated images in seconds with our free AI image generator. No login required, unlimited generations, powered by FLUX model. | lipengliang2012@163.com | [Website](https://www.imggen.top/) |
| 🆕 Aura Chat bot | A chat bot integrating Pollinations API for text and image generation | @Py-Phoenix-PJS | [Email](mailto:itznarutotamilan007@gmail.com) |
| 🆕 FoodAnaly | An AI application for food analysis that uses advanced artificial intelligence technology to help users understand food ingredients, nutritional value, and health impacts. | liukang0120@163.com | [Website](https://foodanaly.vercel.app/) |
| 🆕 OkeyAI | An LLM created by Africans to understand and have cultural awareness of African contexts and languages, OkeyAI outperforms many LLM models based on size and intelligence, OkeyMeta uses pollination image generating API to train it&#039;s LLM (OkeyAI) on images in real time. | @okeymeta | [Website](https://chat.okeymeta.com.ng), [GitHub](https://github.com/okeymeta) |
| 🆕 🤖 DesmondBot | A snarky bot based on Llama that is 100% free, powered by the Pollinations text API and OpenWebUI. Other models are available as well. | @mcgdj | [Website](https://swedish-innocent-teeth-majority.trycloudflare.com) |
| 🆕 🤖 Raftar.xyz | A Discord multi-purpose bot with over 100+ commands, including AI image generation, ChatGPT, and SearchGPT powered by Pollinations.AI | @goodgamerhere | [Website](https://raftar.xyz) |
| 🆕 DreamBig - Generative AI Playground | Interactive AI playground with chat, image generation, and voice responses for creative exploration | @opzzxsprinta._999 | [Website](https://dreambiglabs.vercel.app/) |
| 🆕 Goalani | Voice-enabled AI fitness coach that helps with fitness tracking, nutrition logging, and personalized coaching using voice commands | goalani.app@gmail.com | [Website](https://goalani.com) |
| 🆕 IMyself AI 🇨🇳 | 我们提供高质量的AI生成服务，包括图像生成、文本生成、音频生成和语音转文本服务， 让您轻松创建各种创意内容。 (We provide high-quality AI generation services, including image generation, text generation, audio generation, and speech to text services, allowing you to easily create various creative content.) | Shadownc | [Website](https://openai.lmyself.top/) |
| 🆕 AI Chat Assistant | A comprehensive AI Chat Assistant designed to provide users with an interactive chat interface that supports both text and image generation. Features multiple AI models (GPT-4o, Claude, Qwen-Coder, Llama, Mistral, etc.), image generation from text prompts, image-to-image processing, and a responsive UI with desktop and mobile support | @_dr_misterio_ | [Website](https://seed-ashy.vercel.app/) |
| 🆕 FreeAI 🇨🇳 | An AI application platform based on Pollinations.AI API, providing free and unlimited AI chat assistant, image generation, and voice synthesis services | @Azad-sl | [Website](https://freeai.aihub.ren/), [GitHub](https://github.com/Azad-sl/FreeAI) - ⭐ 44 |
| 🆕 AI Unlimited Customizable Feature Module 🇨🇳 | This project provides a free API interface supporting various text and image generation models, including OpenAI&#039;s GPT-4, Gemini 2.0, etc. Users can access these models without an API key to perform text generation, image generation, translation, text polishing, and more | [S_S](https://linux.do/u/s_s/summary) | [Website](https://getquicker.net/Sharedaction?code=9ac738ed-a4b2-4ded-933c-08dd5f710a8b&amp;fromMyShare=true) |
| 🆕 Zelos AI image generator | It uses Pollinations for both prompt enhancing and image generation, it was a easy to make project due to pollinations services being easy to use | [Roblox Profile](https://www.roblox.com/users/4361935306/profile) | [Website](https://websim.ai/@ISWEARIAMNOTADDICTEDTOPILLOW/ai-image-prompt-generator) |
| 🆕 Aiphoto智能绘画 🇨🇳 | AI艺术工坊 - 智能绘画生成器。这是一个基于AI的绘画生成工具，可以根据用户输入的中文描述自动生成相应的图片。(An AI art workshop - intelligent painting generator. This is an AI-based painting generation tool that can automatically generate images based on Chinese descriptions input by users.) | @zhikanyeye | [Website](https://qiyimg.3d.tc/Aiphoto), [GitHub](https://github.com/zhikanyeye/Aiphoto) |
| 🆕 MiReXa AI | A state-of-the-art chatbot integrating multiple LLMs with advanced features including audio generation, image generation, mathematical proficiency, and real-time web search | withthatway | [Website](https://mirexa.vercel.app) |
| gpt4free | The official gpt4free repository - various collection of powerful language models | xtekky | [GitHub](https://github.com/xtekky/gpt4free) - ⭐ 64.1k |
| LobeChat | An open-source, modern-design ChatGPT/LLMs UI/Framework with speech-synthesis, multi-modal, and extensible plugin system | - | [Website](https://lobehub.com/plugins/pollinations-drawing), [GitHub](https://github.com/lobehub/lobe-chat) - ⭐ 59k |
| SillyTavern | An LLM frontend for power users. Pollinations permits it to generate images | - | [Docs](https://docs.sillytavern.app/extensions/stable-diffusion/), [GitHub](https://github.com/SillyTavern/SillyTavern) - ⭐ 13.7k |
| Qwen-Agent | A framework for developing agentic LLM applications | - | [GitHub](https://github.com/QwenLM/Qwen-Agent) - ⭐ 6.6k |
| DynaSpark AI | A versatile AI assistant with advanced image and text generation capabilities | Th3-C0der | [Website](https://dynaspark.onrender.com), [GitHub](https://github.com/Th3-C0der) - ⭐ 20 |
| 🆕 FreeAI 🇨🇳 | An AI application platform based on Pollinations.AI API, providing free and unlimited AI chat assistant, image generation, and voice synthesis services | @Azad-sl | [Website](https://freeai.aihub.ren/), [GitHub](https://github.com/Azad-sl/FreeAI) - ⭐ 44 |
| FlowGPT | Generate images on-demand with ChatGPT | - | [Website](https://flowgpt.com/p/instant-image-generation-with-chatgpt-and-pollinationsai) |
| Unity AI Lab | A specialized uncensored LLM model built on Mistral Large, focused on unrestricted conversations | - | [Website](https://blog.unityailab.com/unity.html) |
| Pollinations Chat | Pollinations&#039; integrated AI for text and images, totally free and unlimited | @adrianoprogramer | [Website](https://websim.ai/@AdrianoDev1/pollinations-ai-assistant/4), [Instagram](https://www.instagram.com/adrianop_761?igshid=MmxwNnRsajVnZmMy) |


### Creative &amp; Interactive Applications

| App | Description | Creator | Links |
|-----|-------------|---------|-------|
| 🆕 Dreamscape AI | A creative studio for generating, enhancing, and transforming images, plus conversational AI capabilities with text and voice interfaces, and a deep research tool. | @sizzlebop | [Website](https://dreamscape.pinkpixel.dev), [GitHub](https://github.com/pinkpixel-dev/dreamscape-ai) |
| 🆕 PollinateAI | An image generation platform that aims to ease the stress of graphic and visual designers in delivering inspirations for their work. Regular consumers are also welcomed. | @Auspicious14 | [Website](https://pollinateai.vercel.app), [GitHub](https://github.com/Auspicious14/image-generator-fe.git) |
| 🆕 WebGeniusAI | AI tool that generates HTML websites with visuals from Pollinations. | @logise | [Website](https://logise.neocities.org/webgeniusai) |
| 🆕 NailsGen | Create beautiful nail art designs with AI. Generate unique nail art designs with different styles and colors. | lipengliang2012@163.com | [Website](https://www.nailsgen.com/) |
| 🆕 ImageGen AI Image | A web application that utilizes Pollinations.AI API to generate images based on user-defined descriptions, with features like prompt enhancement, customizable image settings, and image download. | @narendradwivedi | [Website](https://imagegen.narendradwivedi.org), [LinkedIn](https://www.linkedin.com/in/narendradwivedi) |
| 🆕 RuangRiung AI Image 🇮🇩 | RuangRiung AI Image Generator ideal untuk seniman digital, desainer, atau siapa pun yang ingin mengeksplorasi kreativitas dengan bantuan AI. Tersedia dalam bahasa Inggris dan Indonesia, website ini menggabungkan fungsionalitas lengkap dengan desain yang elegan dan responsif. (RuangRiung AI Image Generator is ideal for digital artists, designers, or anyone who wants to explore creativity with AI assistance. Available in English and Indonesian, this website combines complete functionality with an elegant and responsive design.) | @ruangriung | [Website](https://ruangriung.my.id), [GitHub](https://github.com/ruangriung) |
| 🆕 BlackWave | An AI image generator that creates unique images from text prompts. Fast, easy and free! | @metimol | [Website](https://blackwave.studio/) |
| 🆕 Generator Text AI 🇮🇩 | Generator Teks AI canggih dengan berbagai model AI seperti OpenAI, Llama, Mistral, dan DeepSeek. Hasilkan jawaban instan, dukung mode gelap/fokus, riwayat percakapan, dan contoh pertanyaan acak. Alat sempurna untuk kreativitas dan produktivitas. (Advanced AI Text Generator with various AI models like OpenAI, Llama, Mistral, and DeepSeek. Generate instant answers, support dark/focus mode, conversation history, and random question examples. Perfect tool for creativity and productivity.) | @ayick13 | [Website](https://app.ariftirtana.my.id/), [GitHub](https://github.com/ayick13/app) |
| 🆕 🌱 Strain Navigator | A collection of tools to help Growers, Breeders &amp; Seed Bankers. Free &amp; Open Source powered by Pollinations.ai. | @Tolerable | [Website](https://www.strainnavigator.com/), [GitHub](https://github.com/Tolerable/strainnavigator) |
| 🆕 MalaysiaPrompt 🇲🇾 | A free and fun platform for creating unique AI-generated images. No fancy skills needed – just your ideas and a few click

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[zizifn/edgetunnel]]></title>
            <link>https://github.com/zizifn/edgetunnel</link>
            <guid>https://github.com/zizifn/edgetunnel</guid>
            <pubDate>Mon, 12 May 2025 00:05:00 GMT</pubDate>
            <description><![CDATA[Running V2ray inside edge/serverless runtime]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/zizifn/edgetunnel">zizifn/edgetunnel</a></h1>
            <p>Running V2ray inside edge/serverless runtime</p>
            <p>Language: JavaScript</p>
            <p>Stars: 7,808</p>
            <p>Forks: 34,827</p>
            <p>Stars today: 0 stars today</p>
            <h2>README</h2><pre>------
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[cryptpad/cryptpad]]></title>
            <link>https://github.com/cryptpad/cryptpad</link>
            <guid>https://github.com/cryptpad/cryptpad</guid>
            <pubDate>Mon, 12 May 2025 00:04:59 GMT</pubDate>
            <description><![CDATA[Collaborative office suite, end-to-end encrypted and open-source.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/cryptpad/cryptpad">cryptpad/cryptpad</a></h1>
            <p>Collaborative office suite, end-to-end encrypted and open-source.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,422</p>
            <p>Forks: 704</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>