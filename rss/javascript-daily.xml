<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Sat, 18 Oct 2025 00:04:57 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[vercel/next.js]]></title>
            <link>https://github.com/vercel/next.js</link>
            <guid>https://github.com/vercel/next.js</guid>
            <pubDate>Sat, 18 Oct 2025 00:04:57 GMT</pubDate>
            <description><![CDATA[The React Framework]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vercel/next.js">vercel/next.js</a></h1>
            <p>The React Framework</p>
            <p>Language: JavaScript</p>
            <p>Stars: 135,098</p>
            <p>Forks: 29,591</p>
            <p>Stars today: 38 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[rabbitmq/rabbitmq-server]]></title>
            <link>https://github.com/rabbitmq/rabbitmq-server</link>
            <guid>https://github.com/rabbitmq/rabbitmq-server</guid>
            <pubDate>Sat, 18 Oct 2025 00:04:56 GMT</pubDate>
            <description><![CDATA[Open source RabbitMQ: core server and tier 1 (built-in) plugins]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/rabbitmq/rabbitmq-server">rabbitmq/rabbitmq-server</a></h1>
            <p>Open source RabbitMQ: core server and tier 1 (built-in) plugins</p>
            <p>Language: JavaScript</p>
            <p>Stars: 13,186</p>
            <p>Forks: 3,967</p>
            <p>Stars today: 0 stars today</p>
            <h2>README</h2><pre>[![Test](https://github.com/rabbitmq/rabbitmq-server/actions/workflows/test.yaml/badge.svg)](https://github.com/rabbitmq/rabbitmq-server/actions/workflows/test.yaml)

# RabbitMQ Server

[RabbitMQ](https://rabbitmq.com) is a [feature rich](https://www.rabbitmq.com/docs),
multi-protocol messaging and streaming broker. It supports:

 * AMQP 1.0
 * AMQP 0-9-1
 * [RabbitMQ Stream Protocol](https://www.rabbitmq.com/docs/streams)
 * MQTT 3.1, 3.1.1, and 5.0
 * STOMP 1.0 through 1.2
 * [MQTT over WebSocket](https://www.rabbitmq.com/docs/web-mqtt)
 * [STOMP over WebSocket](https://www.rabbitmq.com/docs/web-stomp)
 * AMQP 1.0 over WebSocket (supported in [VMware Tanzu RabbitMQ](https://www.vmware.com/products/app-platform/tanzu-rabbitmq))


## Installation

 * [Currently supported](https://www.rabbitmq.com/release-information) released series
 * [Installation guides](https://www.rabbitmq.com/docs/download) for various platforms
 * [Kubernetes Cluster Operator](https://www.rabbitmq.com/kubernetes/operator/operator-overview)
 * [Changelog](https://www.rabbitmq.com/release-information)
 * [Releases](https://github.com/rabbitmq/rabbitmq-server/releases) on GitHub
 * [Community Support Eligibility Policy](https://github.com/rabbitmq/rabbitmq-server/blob/main/COMMUNITY_SUPPORT.md)
 * [Supported Erlang versions](https://www.rabbitmq.com/docs/which-erlang)


## Tutorials and Documentation

 * [RabbitMQ tutorials](https://www.rabbitmq.com/tutorials) and their [executable versions on GitHub](https://github.com/rabbitmq/rabbitmq-tutorials)
 * [Documentation guides](https://rabbitmq.com/docs/)
 * [RabbitMQ blog](https://blog.rabbitmq.com/)

Some key doc guides include

 * [CLI tools guide](https://www.rabbitmq.com/docs/cli)
 * [Clustering](https://www.rabbitmq.com/docs/clustering) and [Cluster Formation](https://www.rabbitmq.com/docs/cluster-formation)
 * [Configuration guide](https://www.rabbitmq.com/docs/configure)
 * [Client libraries and tools](https://www.rabbitmq.com/client-libraries/devtools)
 * [Monitoring](https://www.rabbitmq.com/docs/monitoring) and [Prometheus/Grafana](https://www.rabbitmq.com/docs/prometheus)
 * [Upgrading](https://www.rabbitmq.com/docs/upgrade)
 * [Kubernetes Cluster Operator](https://www.rabbitmq.com/kubernetes/operator/operator-overview)
 * [Production checklist](https://www.rabbitmq.com/docs/production-checklist)
 * [Quorum queues](https://www.rabbitmq.com/docs/quorum-queues): a replicated, data safety- and consistency-oriented queue type
 * [Streams](https://www.rabbitmq.com/docs/streams): a persistent and replicated append-only log with non-destructive consumer semantics
 * [Runtime Parameters and Policies](https://www.rabbitmq.com/docs/parameters)
 * [Runnable tutorials](https://github.com/rabbitmq/rabbitmq-tutorials/)

RabbitMQ documentation is also [developed on GitHub](https://github.com/rabbitmq/rabbitmq-website/).

## Commercial Features and Support

 * [Commercial editions of RabbitMQ](https://tanzu.vmware.com/rabbitmq)
 * [Commercial edition for Kubernetes](https://docs.vmware.com/en/VMware-RabbitMQ-for-Kubernetes/1/rmq/installation.html)
 * [Commercial support](https://tanzu.vmware.com/rabbitmq/oss) from [Broadcom](https://vmware.com) for open source RabbitMQ

## Getting Help from the Community

Please read the [Community Support Eligibility Policy](https://github.com/rabbitmq/rabbitmq-server/blob/main/COMMUNITY_SUPPORT.md) document
first.

The recommended community forums are

 * [GitHub Discussions](https://github.com/rabbitmq/rabbitmq-server/discussions/)
 * [Community Discord server](https://rabbitmq.com/discord/)
 * `#rabbitmq` on [Libera Chat](https://libera.chat/)


## Contributing

See [CONTRIBUTING.md](./CONTRIBUTING.md) and our [development process overview](https://www.rabbitmq.com/github).

Questions about contributing, internals and so on are very welcome in [GitHub Discussions](https://github.com/rabbitmq/rabbitmq-server/discussions)
or [community Discord server](https://www.rabbitmq.com/discord/) in the `core-and-plugin-dev` channel.


## Licensing

RabbitMQ server is [licensed under the MPL 2.0](LICENSE-MPL-RabbitMQ).

[Community Support Eligibility Policy](https://github.com/rabbitmq/rabbitmq-server/blob/main/COMMUNITY_SUPPORT.md)
document explains the open source RabbitMQ support policy adopted by the RabbitMQ Core Team.


## Building From Source and Packaging

 * [Contributor resources](https://github.com/rabbitmq/contribute)
 * [Building RabbitMQ from Source](https://www.rabbitmq.com/docs/build-server)
 * [Building RabbitMQ Distribution Packages](https://www.rabbitmq.com/docs/build-server)


## Copyright

(c) 2007-2025 Broadcom. All Rights Reserved. The term “Broadcom” refers to Broadcom Inc. and/or its subsidiaries.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[HumanSignal/label-studio]]></title>
            <link>https://github.com/HumanSignal/label-studio</link>
            <guid>https://github.com/HumanSignal/label-studio</guid>
            <pubDate>Sat, 18 Oct 2025 00:04:55 GMT</pubDate>
            <description><![CDATA[Label Studio is a multi-type data labeling and annotation tool with standardized output format]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/HumanSignal/label-studio">HumanSignal/label-studio</a></h1>
            <p>Label Studio is a multi-type data labeling and annotation tool with standardized output format</p>
            <p>Language: JavaScript</p>
            <p>Stars: 25,079</p>
            <p>Forks: 3,119</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre>&lt;img src=&quot;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/ls_github_header.png&quot;/&gt;

![GitHub](https://img.shields.io/github/license/heartexlabs/label-studio?logo=heartex) ![label-studio:build](https://github.com/heartexlabs/label-studio/workflows/label-studio:build/badge.svg) ![GitHub release](https://img.shields.io/github/v/release/heartexlabs/label-studio?include_prereleases)

[Website](https://labelstud.io/) • [Docs](https://labelstud.io/guide/) • [Twitter](https://twitter.com/heartexlabs) • [Join Slack Community &lt;img src=&quot;https://app.heartex.ai/docs/images/slack-mini.png&quot; width=&quot;18px&quot;/&gt;](https://slack.labelstudio.heartex.com/?source=github-1)


## What is Label Studio?

&lt;!-- &lt;a href=&quot;https://labelstud.io/blog/release-130.html&quot;&gt;&lt;img src=&quot;https://github.com/heartexlabs/label-studio/raw/master/docs/themes/htx/source/images/release-130/LS-Hits-v1.3.png&quot; align=&quot;right&quot; /&gt;&lt;/a&gt; --&gt;

Label Studio is an open source data labeling tool. It lets you label data types like audio, text, images, videos, and time series with a simple and straightforward UI and export to various model formats. It can be used to prepare raw data or improve existing training data to get more accurate ML models.

- [Try out Label Studio](#try-out-label-studio)
- [What you get from Label Studio](#what-you-get-from-label-studio)
- [Included templates for labeling data in Label Studio](#included-templates-for-labeling-data-in-label-studio)
- [Set up machine learning models with Label Studio](#set-up-machine-learning-models-with-Label-Studio)
- [Integrate Label Studio with your existing tools](#integrate-label-studio-with-your-existing-tools)

![Gif of Label Studio annotating different types of data](https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/annotation_examples.gif)

Have a custom dataset? You can customize Label Studio to fit your needs. Read an [introductory blog post](https://towardsdatascience.com/introducing-label-studio-a-swiss-army-knife-of-data-labeling-140c1be92881) to learn more. 

## Try out Label Studio

Install Label Studio locally, or deploy it in a cloud instance. Also you can try [Label Studio Teams](https://app.heartex.com).

- [Install locally with Docker](#install-locally-with-docker)
- [Run with Docker Compose (Label Studio + Nginx + PostgreSQL)](#run-with-docker-compose)
- [Install locally with pip](#install-locally-with-pip)
- [Install locally with Anaconda](#install-locally-with-anaconda)
- [Install for local development](#install-for-local-development)
- [Deploy in a cloud instance](#deploy-in-a-cloud-instance)

### Install locally with Docker
Official Label Studio docker image is [here](https://hub.docker.com/r/heartexlabs/label-studio) and it can be downloaded with `docker pull`. 
Run Label Studio in a Docker container and access it at `http://localhost:8080`.


```bash
docker pull heartexlabs/label-studio:latest
docker run -it -p 8080:8080 -v `pwd`/mydata:/label-studio/data heartexlabs/label-studio:latest
```
You can find all the generated assets, including SQLite3 database storage `label_studio.sqlite3` and uploaded files, in the `./mydata` directory.

#### Override default Docker install
You can override the default launch command by appending the new arguments:
```bash
docker run -it -p 8080:8080 -v `pwd`/mydata:/label-studio/data heartexlabs/label-studio:latest label-studio --log-level DEBUG
```

#### Build a local image with Docker
If you want to build a local image, run:
```bash
docker build -t heartexlabs/label-studio:latest .
```

### Run with Docker Compose
Docker Compose script provides production-ready stack consisting of the following components:

- Label Studio
- [Nginx](https://www.nginx.com/) - proxy web server used to load various static data, including uploaded audio, images, etc.
- [PostgreSQL](https://www.postgresql.org/) - production-ready database that replaces less performant SQLite3.

To start using the app from `http://localhost` run this command:
```bash
docker-compose up
```

### Install locally with pip

```bash
# Requires Python &gt;=3.7 &lt;=3.9
pip install label-studio

# Start the server at http://localhost:8080
label-studio
```

### Install locally with Anaconda

```bash
conda create --name label-studio
conda activate label-studio
pip install label-studio
```

### Install for local development

You can run the latest Label Studio version locally without installing the package with pip. 

```bash
# Install all package dependencies
pip install -e .
# Run database migrations
python label_studio/manage.py migrate
# Start the server in development mode at http://localhost:8080
python label_studio/manage.py runserver
```

### Deploy in a cloud instance

You can deploy Label Studio with one click in Heroku, Microsoft Azure, or Google Cloud Platform: 

[&lt;img src=&quot;https://www.herokucdn.com/deploy/button.svg&quot; height=&quot;30px&quot;&gt;](https://heroku.com/deploy?template=https://github.com/heartexlabs/label-studio/tree/heroku-persistent-pg)
[&lt;img src=&quot;https://aka.ms/deploytoazurebutton&quot; height=&quot;30px&quot;&gt;](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2Fheartexlabs%2Flabel-studio%2Fmaster%2Fazuredeploy.json)
[&lt;img src=&quot;https://deploy.cloud.run/button.svg&quot; height=&quot;30px&quot;&gt;](https://deploy.cloud.run)


#### Apply frontend changes

The frontend part of Label Studio app lies in the `frontend/` folder and written in React JSX. In case you&#039;ve made some changes there, the following commands should be run before building / starting the instance:

```
cd label_studio/frontend/
npm ci
npx webpack
cd ../..
python label_studio/manage.py collectstatic --no-input
```

### Troubleshoot installation
If you see any errors during installation, try to rerun the installation

```bash
pip install --ignore-installed label-studio
```

#### Install dependencies on Windows 
To run Label Studio on Windows, download and install the following wheel packages from [Gohlke builds](https://www.lfd.uci.edu/~gohlke/pythonlibs) to ensure you&#039;re using the correct version of Python:
- [lxml](https://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml)

```bash
# Upgrade pip 
pip install -U pip

# If you&#039;re running Win64 with Python 3.8, install the packages downloaded from Gohlke:
pip install lxml‑4.5.0‑cp38‑cp38‑win_amd64.whl

# Install label studio
pip install label-studio
```

#### Run test suite
```bash
pip install -r deploy/requirements-test.txt
cd label_studio

# postgres (assumes default postgres user,db,pass)
DJANGO_DB=default DJANGO_SETTINGS_MODULE=core.settings.label_studio python -m pytest -vv -n auto

# sqlite3
DJANGO_DB=sqlite DJANGO_SETTINGS_MODULE=core.settings.label_studio python -m pytest -vv -n auto
```


## What you get from Label Studio

![Screenshot of Label Studio data manager grid view with images](https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/labelstudio-ui.gif)

- **Multi-user labeling** sign up and login, when you create an annotation it&#039;s tied to your account.
- **Multiple projects** to work on all your datasets in one instance.
- **Streamlined design** helps you focus on your task, not how to use the software.
- **Configurable label formats** let you customize the visual interface to meet your specific labeling needs.
- **Support for multiple data types** including images, audio, text, HTML, time-series, and video. 
- **Import from files or from cloud storage** in Amazon AWS S3, Google Cloud Storage, or JSON, CSV, TSV, RAR, and ZIP archives. 
- **Integration with machine learning models** so that you can visualize and compare predictions from different models and perform pre-labeling.
- **Embed it in your data pipeline** REST API makes it easy to make it a part of your pipeline

## Included templates for labeling data in Label Studio 

Label Studio includes a variety of templates to help you label your data, or you can create your own using specifically designed configuration language. The most common templates and use cases for labeling include the following cases:

&lt;img src=&quot;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/templates-categories.jpg&quot; /&gt;

## Set up machine learning models with Label Studio

Connect your favorite machine learning model using the Label Studio Machine Learning SDK. Follow these steps:

1. Start your own machine learning backend server. See [more detailed instructions](https://github.com/heartexlabs/label-studio-ml-backend).
2. Connect Label Studio to the server on the model page found in project settings.

This lets you:

- **Pre-label** your data using model predictions. 
- Do **online learning** and retrain your model while new annotations are being created. 
- Do **active learning** by labeling only the most complex examples in your data.

## Integrate Label Studio with your existing tools

You can use Label Studio as an independent part of your machine learning workflow or integrate the frontend or backend into your existing tools.  

* Use the [Label Studio Frontend](https://github.com/heartexlabs/label-studio-frontend) as a separate React library. See more in the [Frontend Library documentation](https://labelstud.io/guide/frontend.html). 

## Ecosystem

| Project | Description |
|-|-|
| label-studio | Server, distributed as a pip package |
| [label-studio-frontend](https://github.com/heartexlabs/label-studio-frontend) | React and JavaScript frontend and can run standalone in a web browser or be embedded into your application. |  
| [data-manager](https://github.com/heartexlabs/dm2) | React and JavaScript frontend for managing data. Includes the Label Studio Frontend. Relies on the label-studio server or a custom backend with the expected API methods. | 
| [label-studio-converter](https://github.com/heartexlabs/label-studio-converter) | Encode labels in the format of your favorite machine learning library | 
| [label-studio-transformers](https://github.com/heartexlabs/label-studio-transformers) | Transformers library connected and configured for use with Label Studio |


## Roadmap

Want to use **The Coolest Feature X** but Label Studio doesn&#039;t support it? Check out [our public roadmap](roadmap.md)!

## Citation

```tex
@misc{Label Studio,
  title={{Label Studio}: Data labeling software},
  url={https://github.com/heartexlabs/label-studio},
  note={Open source software available from https://github.com/heartexlabs/label-studio},
  author={
    Maxim Tkachenko and
    Mikhail Malyuk and
    Andrey Holmanyuk and
    Nikolai Liubimov},
  year={2020-2022},
}
```

## License

This software is licensed under the [Apache 2.0 LICENSE](/LICENSE) © [Heartex](https://www.heartex.ai/). 2020-2021

&lt;img src=&quot;https://github.com/heartexlabs/label-studio/blob/master/images/opossum_looking.png?raw=true&quot; title=&quot;Hey everyone!&quot; height=&quot;140&quot; width=&quot;140&quot; /&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[pedroslopez/whatsapp-web.js]]></title>
            <link>https://github.com/pedroslopez/whatsapp-web.js</link>
            <guid>https://github.com/pedroslopez/whatsapp-web.js</guid>
            <pubDate>Sat, 18 Oct 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[A WhatsApp client library for NodeJS that connects through the WhatsApp Web browser app]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pedroslopez/whatsapp-web.js">pedroslopez/whatsapp-web.js</a></h1>
            <p>A WhatsApp client library for NodeJS that connects through the WhatsApp Web browser app</p>
            <p>Language: JavaScript</p>
            <p>Stars: 19,880</p>
            <p>Forks: 4,595</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
    &lt;br /&gt;
    &lt;p&gt;
        &lt;a href=&quot;https://wwebjs.dev&quot;&gt;&lt;img src=&quot;https://github.com/wwebjs/assets/blob/main/Collection/GitHub/wwebjs.png?raw=true&quot; title=&quot;whatsapp-web.js&quot; alt=&quot;WWebJS Website&quot; width=&quot;500&quot; /&gt;&lt;/a&gt;
    &lt;/p&gt;
    &lt;br /&gt;
    &lt;p&gt;
		&lt;a href=&quot;https://www.npmjs.com/package/whatsapp-web.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/whatsapp-web.js.svg&quot; alt=&quot;npm&quot; /&gt;&lt;/a&gt;
        &lt;a href=&quot;https://depfu.com/github/pedroslopez/whatsapp-web.js?project_id=9765&quot;&gt;&lt;img src=&quot;https://badges.depfu.com/badges/4a65a0de96ece65fdf39e294e0c8dcba/overview.svg&quot; alt=&quot;Depfu&quot; /&gt;&lt;/a&gt;
        &lt;img src=&quot;https://img.shields.io/badge/WhatsApp_Web-2.3000.1017054665-brightgreen.svg&quot; alt=&quot;WhatsApp_Web 2.2346.52&quot; /&gt;
        &lt;a href=&quot;https://discord.gg/H7DqQs4&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/698610475432411196.svg?logo=discord&quot; alt=&quot;Discord server&quot; /&gt;&lt;/a&gt;
	&lt;/p&gt;
    &lt;br /&gt;
&lt;/div&gt;

## About
**A WhatsApp API client that operates via the WhatsApp Web browser.**

The library launches the WhatsApp Web browser app via Puppeteer, accessing its internal functions and creating a managed instance to reduce the risk of being blocked. This gives the API client nearly all WhatsApp Web features for dynamic use in a Node.js application.

&gt; [!IMPORTANT]
&gt; **It is not guaranteed you will not be blocked by using this method. WhatsApp does not allow bots or unofficial clients on their platform, so this shouldn&#039;t be considered totally safe.**

## Links

* [GitHub][gitHub]
* [Guide][guide] ([source][guide-source])
* [Documentation][documentation] ([source][documentation-source])
* [Discord Server][discord]
* [npm][npm]

## Installation

The module is available on [npm][npm] via `npm i whatsapp-web.js`!

&gt; [!NOTE]
&gt; **Node ``v18`` or higher, is required.**  
&gt; See the [Guide][guide] for quick upgrade instructions.

## Example usage

```js
const { Client } = require(&#039;whatsapp-web.js&#039;);

const client = new Client();

client.on(&#039;qr&#039;, (qr) =&gt; {
    // Generate and scan this code with your phone
    console.log(&#039;QR RECEIVED&#039;, qr);
});

client.on(&#039;ready&#039;, () =&gt; {
    console.log(&#039;Client is ready!&#039;);
});

client.on(&#039;message&#039;, msg =&gt; {
    if (msg.body == &#039;!ping&#039;) {
        msg.reply(&#039;pong&#039;);
    }
});

client.initialize();
```

Take a look at [example.js][examples] for another examples with additional use cases.  
For further details on saving and restoring sessions, explore the provided [Authentication Strategies][auth-strategies].


## Supported features

| Feature  | Status |
| ------------- | ------------- |
| Multi Device  | ✅  |
| Send messages  | ✅  |
| Receive messages  | ✅  |
| Send media (images/audio/documents)  | ✅  |
| Send media (video)  | ✅ [(requires Google Chrome)][google-chrome]  |
| Send stickers | ✅ |
| Receive media (images/audio/video/documents)  | ✅  |
| Send contact cards | ✅ |
| Send location | ✅ |
| Send buttons | ❌  [(DEPRECATED)][deprecated-video] |
| Send lists | ❌  [(DEPRECATED)][deprecated-video] |
| Receive location | ✅ | 
| Message replies | ✅ |
| Join groups by invite  | ✅ |
| Get invite for group  | ✅ |
| Modify group info (subject, description)  | ✅  |
| Modify group settings (send messages, edit info)  | ✅  |
| Add group participants  | ✅  |
| Kick group participants  | ✅  |
| Promote/demote group participants | ✅ |
| Mention users | ✅ |
| Mention groups | ✅ |
| Mute/unmute chats | ✅ |
| Block/unblock contacts | ✅ |
| Get contact info | ✅ |
| Get profile pictures | ✅ |
| Set user status message | ✅ |
| React to messages | ✅ |
| Create polls | ✅ |
| Channels | ✅ |
| Vote in polls | 🔜 |
| Communities | 🔜 |

Something missing? Make an issue and let us know!

## Contributing

Feel free to open pull requests; we welcome contributions! However, for significant changes, it&#039;s best to open an issue beforehand. Make sure to review our [contribution guidelines][contributing] before creating a pull request. Before creating your own issue or pull request, always check to see if one already exists!

## Supporting the project

You can support the maintainer of this project through the links below

- [Support via GitHub Sponsors][gitHub-sponsors]
- [Support via PayPal][support-payPal]
- [Sign up for DigitalOcean][digitalocean] and get $200 in credit when you sign up (Referral)

## Disclaimer

This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates. The official WhatsApp website can be found at [whatsapp.com][whatsapp]. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners. Also it is not guaranteed you will not be blocked by using this method. WhatsApp does not allow bots or unofficial clients on their platform, so this shouldn&#039;t be considered totally safe.

## License

Copyright 2019 Pedro S Lopez  

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);  
you may not use this project except in compliance with the License.  
You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.  


[guide]: https://guide.wwebjs.dev/guide
[guide-source]: https://github.com/wwebjs/wwebjs.dev/tree/main
[documentation]: https://docs.wwebjs.dev/
[documentation-source]: https://github.com/pedroslopez/whatsapp-web.js/tree/main/docs
[discord]: https://discord.gg/H7DqQs4
[gitHub]: https://github.com/pedroslopez/whatsapp-web.js
[npm]: https://npmjs.org/package/whatsapp-web.js
[nodejs]: https://nodejs.org/en/download/
[examples]: https://github.com/pedroslopez/whatsapp-web.js/blob/master/example.js
[auth-strategies]: https://wwebjs.dev/guide/creating-your-bot/authentication.html
[google-chrome]: https://wwebjs.dev/guide/creating-your-bot/handling-attachments.html#caveat-for-sending-videos-and-gifs
[deprecated-video]: https://www.youtube.com/watch?v=hv1R1rLeVVE
[gitHub-sponsors]: https://github.com/sponsors/pedroslopez
[support-payPal]: https://www.paypal.me/psla/
[digitalocean]: https://m.do.co/c/73f906a36ed4
[contributing]: https://github.com/pedroslopez/whatsapp-web.js/blob/main/CODE_OF_CONDUCT.md
[whatsapp]: https://whatsapp.com
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[hmjz100/LinkSwift]]></title>
            <link>https://github.com/hmjz100/LinkSwift</link>
            <guid>https://github.com/hmjz100/LinkSwift</guid>
            <pubDate>Sat, 18 Oct 2025 00:04:53 GMT</pubDate>
            <description><![CDATA[一个基于 JavaScript 的网盘文件下载地址获取工具。基于【网盘直链下载助手】修改 ，支持 百度网盘 / 阿里云盘 / 中国移动云盘 / 天翼云盘 / 迅雷云盘 / 夸克网盘 / UC网盘 / 123云盘 八大网盘]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/hmjz100/LinkSwift">hmjz100/LinkSwift</a></h1>
            <p>一个基于 JavaScript 的网盘文件下载地址获取工具。基于【网盘直链下载助手】修改 ，支持 百度网盘 / 阿里云盘 / 中国移动云盘 / 天翼云盘 / 迅雷云盘 / 夸克网盘 / UC网盘 / 123云盘 八大网盘</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,841</p>
            <p>Forks: 283</p>
            <p>Stars today: 44 stars today</p>
            <h2>README</h2><pre>&gt; [!IMPORTANT]
&gt; 如果您是从 GreasyFork 找到这的，建议前往下方的 [安装](#安装) 选择一个合适的源覆盖安装，避免因脚本失效或 GF 刷子导致无法及时更新。

![LinkSwift](https://socialify.git.ci/hmjz100/LinkSwift/image?description=1&amp;descriptionEditable=%E4%B8%80%E4%B8%AA%E5%9F%BA%E4%BA%8E%20JavaScript%20%E7%9A%84%E7%BD%91%E7%9B%98%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80%E8%8E%B7%E5%8F%96%E5%B7%A5%E5%85%B7&amp;language=1&amp;logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxMjggMTI4Ij48cGF0aCBkPSJNMTAzLjYgMTA3LjRjMy41LTIuMiA4LjktNi4xIDEzLjgtMTIuNXM3LjMtMTIuNSA4LjUtMTYuNWMuNS0xLjcgMi4yLTcuNSAyLjItMTQuNyAwLTEwLjEtMy4zLTI1LjEtMTUuNC0zNi44LTE0LjUtMTQtMzIuMS0xNC4zLTM1LjctMTQuMy04IDAtMTUuNyAxLjktMjIuNiA1LjJDNDQgMjMgMzUuNyAzMS40IDMwLjggNDEuN2MtMS4zIDIuOC00IDQuNy03LjEgNS00IC4zLTcuNSA0LjQtOC45IDkuNi0uNSAxLjktMS42IDMuNS0zLjEgNC43QzQuNCA2Ni44IDAgNzUuNyAwIDg1YzAgNi44IDIuMyAxMy4xIDYuMSAxOC4yIDUuNSA3LjQgMTQuMiAxMi4yIDI0IDEyLjJoNDcuMWM0LjQgMCAxMS0uNSAxOC4zLTMuNSAzLjItMS40IDUuOS0zIDguMS00LjV6IiBmaWxsPSIjQTA5OUYwIi8%2BPHBhdGggZD0iTTExOS44IDY0LjNjLjEtMTcuMS0xMC40LTI4LTEyLjUtMzAuMUM5NSAyMi4xIDc5LjkgMjEuOCA3Ni45IDIxLjhjLTE3LjYgMC0zMy4zIDEwLjUtMzkuOSAyNi43LS42IDEuMy0xLjggMi4zLTMuNCAyLjNoLS40Yy01LjggMC0xMC42IDQuOC0xMC42IDEwLjd2LjVjMCAxLjQtLjggMi42LTEuOSAzLjNDMTMuNCA2OSA4LjggNzYuOCA4LjggODVjMCAxMi4yIDkuOSAyMi4zIDIyLjIgMjIuM2g0NS4yYzMuNi0uMSAxNy42LS45IDI5LjYtMTIgMi45LTIuOCAxMy45LTEzLjcgMTQtMzF6IiBmaWxsPSIjNTc0QUI4Ii8%2BPHBhdGggZD0iTTExMC44IDU3LjRsLjIgMy4zYzAgMS4zLTEuMSAyLjQtMi4zIDIuNC0xLjMgMC0yLjMtMS4xLTIuMy0yLjRsLS4xLTIuOHYtLjNjMC0xLjIuOS0yLjIgMi4xLTIuM2guM2MuNyAwIDEuMy4zIDEuNy43LS4yLjEuMy41LjQgMS40em0tMy4zLTEwLjNjMCAxLjItMSAyLjMtMi4yIDIuM2gtLjFjLS44IDAtMS42LS41LTItMS4yLTQuNi04LjMtMTMuMy0xMy41LTIyLjgtMTMuNS0xLjIgMC0yLjMtMS0yLjMtMi4ydi0uMWMwLTEuMiAxLTIuMyAyLjItMi4zaC4xYTMwLjM3IDMwLjM3IDAgMCAxIDE1LjggNC40YzQuNiAyLjggOC40IDYuOCAxMS4xIDExLjUuMS4zLjIuNy4yIDEuMXpNODguMyA3My44TDczLjUgOTMuMmMtMS41IDEuOS0zLjUgMy4xLTUuNyAzLjVoLS4yYy0uNC4xLS44LjEtMS4yLjEtLjYgMC0xLjEtLjEtMS42LS4yLTIuMi0uNC00LjItMS43LTUuNi0zLjVMNDQuMyA3My45Yy0yLTIuNi0yLjUtNS40LTEuNC03LjcuMS0uMS4xLS4yLjItLjIgMS4yLTIgMy41LTMuMiA2LjQtMy4yaDYuNnYtNS43YzAtNi44IDQuNy0xMiAxMC45LTEyIDQuOCAwIDguNSAyLjYgMTAuMyA3LjIuNSAxLjMtLjIgMi43LTEuNSAzLjJzLTIuOC0uMS0zLjMtMS40Yy0xLjEtMi43LTIuOS00LTUuNS00LTMuNSAwLTYgMy02IDd2OC4xYzAgLjUtLjIgMS0uNiAxLjQtLjYuNy0xLjcgMS4xLTIuNiAxLjFoLTguNGMtMS4zIDAtMiAuNC0yLjEuNy0uMi40IDAgMS4zLjkgMi40TDYzLjEgOTBjLjkgMS4yIDIuMSAxLjggMy4zIDEuOHMyLjMtLjYgMy4xLTEuN2wxNC44LTE5LjNjLjktMS4xIDEuMS0yIC45LTIuNC0uMi0uMy0uOS0uNy0yLjEtLjdoLTcuNmMtLjkgMC0xLjctLjUtMi4xLTEuMi0uMy0uNC0uNC0uOC0uNC0xLjMgMC0xLjQgMS4xLTIuNSAyLjUtMi41aDcuNmMzLjEgMCA1LjUgMS4zIDYuNiAzLjVsLjMuN2MuNyAyLjEuMSA0LjYtMS43IDYuOXoiIGZpbGw9IiNmZmYiLz48L3N2Zz4%3D&amp;name=1&amp;owner=1&amp;pattern=Charlie%20Brown&amp;theme=Auto)

&lt;p align=&quot;center&quot;&gt;“出淤泥而不染，濯清涟而不妖”&lt;/p&gt;
&lt;hr&gt;
&lt;p align=&quot;center&quot;&gt;
   搭配使用，效果更佳！👋扩展脚本
   &lt;br/&gt;
   &lt;a href=&quot;https://github.com/hmjz100/123panYouthMember#安装&quot;&gt;123 云盘会员青春版&lt;/a&gt; | &lt;a href=&quot;#安装&quot;&gt;百度网盘会员青春版&lt;/a&gt; | &lt;a href=&quot;https://scriptcat.org/script-show-page/2470&quot; target=&quot;_blank&quot;&gt;阿里云盘会员青春版&lt;/a&gt;
   &lt;br/&gt;
   ↓&amp;nbsp;&amp;nbsp;↓&amp;nbsp;&amp;nbsp;↓&amp;nbsp;&amp;nbsp;↓&amp;nbsp;&amp;nbsp;↓
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
   &lt;img alt=&quot;Github Stargazers&quot; src=&quot;https://img.shields.io/github/stars/hmjz100/LinkSwift.svg?label=%e6%98%9f%e6%a0%87&amp;logo=github&amp;logoColor=white&amp;labelColor=black&amp;color=gold&amp;style=for-the-badge&amp;cacheSeconds=10&quot;&gt;
   &lt;img alt=&quot;Github Forks&quot; src=&quot;https://img.shields.io/github/forks/hmjz100/LinkSwift?label=%e5%a4%8d%e5%88%bb&amp;logo=github&amp;logoColor=white&amp;labelColor=black&amp;color=grey&amp;style=for-the-badge&amp;cacheSeconds=10&quot;&gt;
   &lt;img alt=&quot;Github Licence&quot; src=&quot;https://img.shields.io/github/license/hmjz100/LinkSwift?label=%e8%ae%b8%e5%8f%af&amp;logo=github&amp;logoColor=white&amp;labelColor=black&amp;color=grey&amp;style=for-the-badge&amp;cacheSeconds=10&quot;&gt;
   &lt;br/&gt;
   &lt;a href=&quot;https://trendshift.io/repositories/13630&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/13630&quot; alt=&quot;hmjz100%2FLinkSwift | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
   &lt;br/&gt;
   &lt;img src=&quot;https://img.shields.io/chrome-web-store/v/gcalenpjmijncebpfijmoaglllgpjagf.svg?label=Tampermonkey%20BETA%20%E7%AF%A1%E6%94%B9%E7%8C%B4%E6%B5%8B%E8%AF%95%E7%89%88&amp;logo=tampermonkey&amp;logoColor=red&amp;color=red&amp;style=for-the-badge&quot; alt=&quot;Tampermonkey BETA 篡改猴测试版&quot;&gt;
   &lt;img src=&quot;https://img.shields.io/chrome-web-store/v/dhdgffkkebhmkfjojejmpbldmpobfkfo.svg?label=Tampermonkey%20%E7%AF%A1%E6%94%B9%E7%8C%B4&amp;logo=tampermonkey&amp;logoColor=white&amp;color=brightgreen&amp;style=for-the-badge&quot; alt=&quot;TamperMonkey 篡改猴&quot;&gt;
   &lt;br/&gt;
   &lt;img src=&quot;https://img.shields.io/badge/Google_Chrome-≥76.0-yellow.svg?style=for-the-badge&quot; alt=&quot;Google Chrome-≥76.0&quot;&gt;
   &lt;img src=&quot;https://img.shields.io/badge/Microsoft_Edge-≥88.0-blue.svg?style=for-the-badge&quot; alt=&quot;Microsoft Edge-≥88.0&quot;&gt;
   &lt;img src=&quot;https://img.shields.io/badge/支持平台-Windows_|_Mac_|_Linux_|_Android-blueviolet.svg?style=for-the-badge&quot; alt=&quot;支持平台&quot;&gt;
   &lt;br/&gt;
   &lt;img alt=&quot;Starchart&quot; src=&quot;https://starchart.cc/hmjz100/LinkSwift.svg?variant=adaptive&amp;line=%23574ab8&quot;&gt;
&lt;/p&gt;

## 安装

选择合适的源，点击链接即可安装

- LinkSwift - 直链获取、UI 美化
  - Github 国际: [hmjz100/LinkSwift/（改）网盘直链下载助手.user.js](https://github.com/hmjz100/LinkSwift/raw/main/（改）网盘直链下载助手.user.js)
  - OpenUserJS 国际（更新不及时）: [hmjz100/LinkSwift.user.js](https://openuserjs.org/install/hmjz100/LinkSwift.user.js)
  - Gitee 国内: [hmjz100/LinkSwift/（改）网盘直链下载助手.user.js](https://gitee.com/hmjz100/LinkSwift/raw/main/（改）网盘直链下载助手.user.js)
  - 脚本猫 国内: [hmjz100/1604/LinkSwift.user.js](https://scriptcat.org/scripts/code/1604/LinkSwift.user.js)
- （改）百度网盘会员青春版 - 使用 &quot;netfilter&quot; 进一步优化/修改 UI
  - Github 国际: [hmjz100/LinkSwift/（改）百度网盘会员青春版.user.js](https://github.com/hmjz100/LinkSwift/raw/main/（改）百度网盘会员青春版.user.js)
  - OpenUserJS 国际（更新不及时）: [hmjz100/（改）百度网盘会员青春版.user.js](https://openuserjs.org/install/hmjz100/%EF%BC%88%E6%94%B9%EF%BC%89%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E4%BC%9A%E5%91%98%E9%9D%92%E6%98%A5%E7%89%88.user.js)
  - Gitee 国内: [hmjz100/LinkSwift/（改）百度网盘会员青春版.user.js](https://gitee.com/hmjz100/LinkSwift/raw/main/（改）百度网盘会员青春版.user.js)
  - 脚本猫 国内: [hmjz100/2236/（改）百度网盘会员青春版.user.js](https://scriptcat.org/scripts/code/2236/%EF%BC%88%E6%94%B9%EF%BC%89%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E4%BC%9A%E5%91%98%E9%9D%92%E6%98%A5%E7%89%88.user.js)

## 说明

基于[【网盘直链下载助手】](https://www.baiduyun.wiki/install.html)修改
- 原作者: [油小猴](https://www.youxiaohou.com/)  
- 原仓库: [https://github.com/syhyz1990/baiduyun](https://github.com/syhyz1990/baiduyun)
- 本脚本发布至脚本猫: [https://scriptcat.org/script-show-page/1604](https://scriptcat.org/script-show-page/1604)
  - 还有 OpenUserJS: [https://openuserjs.org/scripts/hmjz100/LinkSwift](https://openuserjs.org/scripts/hmjz100/LinkSwift)

## 简介

支持 百度网盘/阿里云盘/中国移动云盘/天翼云盘/迅雷云盘/夸克网盘/UC网盘/123云盘 八大网盘，相比较原脚本，增加了更多功能~

&gt; [!IMPORTANT]
&gt; 本项目所获取的直链均基于网盘服务商公开的 API 接口实现。  
&gt; 项目并未以任何形式承诺、宣传或实现对网盘限速功能的破解。  
&gt; 若您获得了未受限制的直链，通常是由于平台策略差异或临时开放所致，  
&gt; 请勿将其误解为本项目具备破解限速的功能或提供相应服务。

#### 卑微的小标题

这个脚本只有一个人在修改\~如果喜欢的话还请留个 Star 哦\~   
- 如有 bug 等问题请在这发[议题反馈](https://github.com/hmjz100/LinkSwift/issues)

## 版本号
V. 1.1.1.9（基于 6.2.7 版本）  
本脚本目前仅在 Github、Gitee、脚本猫脚本站 与 OpenUserJS 发布；
如果您是在其他渠道获取到本脚本的，安装后所带来的问题概不负责。

## 更新日志

| 版本号 | 创建日期 | 更新日志 |
| -------- | -------- | -------- |
| 1.1.1.9 | 2025年09月13日 | 1、修复 - 123 云盘下载视频变为缩略图。 |
| 1.1.1.8 | 2025年09月11日 | 1、修复 - 适配新版 123 云盘分享页。 |
| 1.1.1.7 | 2025年08月02日 | 1、修复 - 缺失声明 (at)connect 导致的问题。 |
| 1.1.1.6 | 2025年07月28日 | 1、废弃 - 百度网盘 BDUSS Cookie 相关代码，转向使用更安全的 AccessToken；&lt;br/&gt;2、废弃 - 百度网盘分享页面下载相关代码；&lt;br/&gt;3、优化 - 下载窗口可在设置改变后动态修改界面。 |
| 1.1.1.5 | 2025年07月21日 | 1、增加 AB Download Manager 下载方式；&lt;br/&gt;2、支持从设置页面一键返回下载窗口，无需重复获取链接。 |
| 1.1.1.4 | 2025年07月19日 | 1、适配 123 云盘新版页面。 |
| 1.1.1.3 | 2025年06月19日 | 1、修复夸克网盘无法获取下载链接的 Bug；&lt;br/&gt;2、修复 API 下载无法复制全部链接。 |
| 1.1.1.2 | 2025年06月08日 | 1、修复无法删除第一项远程配置的 Bug。 |
| 1.1.1.1 | 2025年06月02日 | 1、修复推送到 Aria2 时推送成功但报错的 Bug。 |
| 1.1.1   | 2025年06月01日 | 六一儿童节快乐！萌萌哒更新~&lt;br/&gt;1、配置文件格式更新，支持添加、删除、切换多个服务配置；&lt;br/&gt;2、支持比特彗星推送下载，原 RPC 已并入 Aria2 下载；&lt;br/&gt;3、界面增加 Font Awesome 图标！更好看啦；&lt;br/&gt;4、优化脚本代码、界面，运行更轻快；&lt;br/&gt;5、修复上个版本遗存的问题。 |
| 1.1.0.1 | 2025年05月09日 | 1、修复查看 RPC 下载任务的 Bug。 |
| 1.1.0   | 2025年05月08日 | 1、支持 UC 网盘、123 云盘；&lt;br/&gt;2、改进了网盘主题的注入方式；&lt;br/&gt;3、聚合并重构了部分重复函数，对整体脚本逻辑进行了梳理和精简；&lt;br/&gt;4、将脚本执行阶段从 document-body 适配为 document-start。 |
| 1.0.9.7 | 2025年02月13日 | 1、修复移动云盘下载错误；&lt;br/&gt;2、优化代码，更好的错误识别；&lt;br/&gt;3、去除了游小猴云服务。 |
| 1.0.9.6 | 2024年10月28日 | 1、支持在百度网盘中选择文件夹下载；&lt;br/&gt;2、优化部分提示。 |
| 1.0.9.5 | 2024年10月14日 | 1、修复因代码逻辑错误而无法获取链接的 Bug。 |
| 1.0.9.4 | 2024年10月09日 | 1、修复因百度网盘 AccessToken 过期导致无法获取链接的 Bug。 |
| 1.0.9.3 | 2024年08月10日 | 1、若网盘不支持在分享中下载，将仅显示保存网盘按钮；&lt;br/&gt;2、优化下载界面，支持选择 Iframe 或 Blob 的方式来下载文件，增加按钮的提示文本；&lt;br/&gt;3、优化 CSS 样式，统一了 SweetAlert2 按钮样式，同时适配了 Dark Reader 插件，界面更协调；&lt;br/&gt;4、支持修改油小猴网站主题色；&lt;br/&gt;5、原有主题相关设置现已移动至助手美化页面中。 |
| 1.0.9.2 | 2024年08月04日 | 1、修复使用API下载时有可能会导致IDM无限弹窗的Bug。 |
| 1.0.9.1 | 2024年07月30日 | 1、修复在百度网盘旧版下脚本无法删除元素的Bug。 |
| 1.0.9   | 2024年07月29日 | 1、跟进官方V6.2.7，修复因无法进行百度授权而导致获取直链报错 9019 的 Bug。 |
| 1.0.8.9 | 2024年07月22日 | 1、跟进官方V6.2.3，优化保存到网盘提示，修复阿里云盘、移动云盘失效的问题；&lt;br/&gt;2、优化修改网盘主题的代码，减少对页面的破坏。 |
| 1.0.8.8 | 2024年05月09日 | 1、修复下载菜单字体过小的Bug。|
| 1.0.8.7 | 2024年05月06日 | 1、修复在阿里云盘分享页面下点击“未点亮”按钮时没有任何反应的Bug；&lt;br&gt;2、更新并优化网盘界面精简规则；&lt;br/&gt;3、支持更换 百度网盘、阿里云盘、迅雷云盘、夸克网盘、移动云盘 界面的主题颜色。 |
| 1.0.8.6 | 2024年04月08日 | 1、新增移动云盘会员中心页面，可在网盘中点击“会员中心”按钮查看(但无法使用第三方支付)。 |
| 1.0.8.5 | 2024年04月07日 | 1、跟进官方V6.1.6，修复迅雷网盘分享页面无法选中文件，修复移动云盘无法判断页面。 |
| 1.0.8.4 | 2024年04月07日 | 1、修复因重复绑定按钮而导致命令重复执行的Bug；&lt;br&gt;2、优化调试信息界面排版；&lt;br&gt;3、移除对百度网盘手机网页版的支持。 |
| 1.0.8.3 | 2024年02月11日 | 1、适配阿里云盘新域名alipan.com。 |
| 1.0.8.2 | 2023年11月29日 | 1、更换新图标。 |
| 1.0.8.1 | 2023年11月25日 | 1、修复因重复绑定按钮而导致RPC下载会发送多条下载请求的Bug；&lt;br&gt;2、选择不使用油小猴服务器时，“用ghproxy连接Github仓库”更换为“用jsdelivr连接Github仓库”；&lt;br&gt;3、跟进官方V6.1.4版本，修复移动网盘无法获取链接，支持阿里云盘新域名alipan.com。 |
| 1.0.8   | 2023年11月05日 | 1、修复迅雷网盘勾选文件后仍提示未勾选。 |
| 1.0.7.9 | 2023年11月05日 | 1、更新精简网盘元素匹配规则，防止因通知横条而导致不能点到“API下载”以下的按钮。 |
| 1.0.7.8 | 2023年09月10日 | 1、跟进官方V6.1.2，加入V2接口；&lt;br&gt;2、修复百度网盘下载时因为获取不到accessToken而一直转圈。 |
| 1.0.7.7 | 2023年09月03日 | 1、修复百度网盘的按钮会因为主题不同而被改变颜色的Bug；&lt;br&gt;2、更新夸克网盘按钮与界面。 |
| 1.0.7.6 | 2023年09月01日 | 1、修复“注入”功能；&lt;br&gt;2、黑暗模式支持随设置热切换。 |
| 1.0.7.5 | 2023年08月31日 | 1、修复阿里云盘下载逻辑；&lt;br&gt;2、精简代码；&lt;br&gt;3、支持深色模式；&lt;br&gt;4、修改部分提示文本；&lt;br&gt;5、修改部分CSS；&lt;br&gt;6、设置可测试RPC连接。 |
| 1.0.7.4 | 2023年08月27日 | 1、优化下载逻辑；&lt;br&gt;2、修复阿里云盘无法使用API下载。 |
| 1.0.7.3 | 2023年08月24日 | 1、如果出现网络请求错误时支持自动重新请求；&lt;br&gt;2、可选择是否使用油小猴服务器。 |
| 1.0.7.2 | 2023年07月29日 | 1、修复使用RPC下载时会重复发送链接的Bug。 |
| 1.0.7.1 | 2023年07月27日 | 1、\[实验功能，不影响正常使用\]支持百度网盘手机网页版，勾选文件后可在顶栏找到“下载助手”按钮。 |
| 1.0.7   | 2023年07月26日 | 1、重构夸克网盘、阿里云盘按钮。 |
| 1.0.6.9 | 2023年07月25日 | 1、下载窗口加入关闭按钮。 |
| 1.0.6.8 | 2023年07月24日 | 1、修复夸克网盘按钮错位。 |
| 1.0.6.7 | 2023年07月24日 | 1、将百度网盘界面修改为主题色，可在设置选择是否修改；&lt;br&gt;2、增加主题色名称，更改部分内容颜色；&lt;br&gt;3、移动云盘API下载支持批量复制；&lt;br&gt;4、优化控制台输出结果；&lt;br&gt;5、百度网盘API下载不使用IDM时可以显示剩余时间；&lt;br&gt;6、“取消点亮按钮”按钮的位置现已移动到设置页面。&lt;br&gt;7、homo特有的彩蛋又回来力(喜)。 |
| 1.0.6.6 | 2023年06月07日 | 1、修复暗号错误。 |
| 1.0.6.5 | 2023年06月04日 | 1、修复即使输入正确暗号也不能成功点亮按钮的服务器错误。 |
| 1.0.6.4 | 2023年06月02日 | 1、跟进官方V6.1.1版本，修复阿里云盘获取下载链接时的问题。 |
| 1.0.6.3 | 2023年05月19日 | 1、照顾小屏幕用户，将始终显示复制全部链接的按钮；&lt;br&gt;2、增加取消下载时的动画。 |
| 1.0.6.2 | 2023年05月08日 | 1、修复部分界面错位，实现CSS内置；&lt;br&gt;2、百度网盘界面将变得更加简洁。 |
| 1.0.6.1 | 2023年05月06日 | 1、新增百度云盘API下载支持复制链接；&lt;br&gt;2、为了照顾手机浏览器用户，增大项目之间间隙，新增隐藏IDM提示选项，可在助手设置中启用；&lt;br&gt;3、修改CSS，界面会出现更多的主题色；&lt;br&gt;4、支持在游小猴官网查看暗号；&lt;br&gt;5、修复部分语法错误。 |
| 1.0.6   | 2023年04月15日 | 1、修复了打开阿里云盘分享连接时因下载移动端广告导致只能点击API下载；&lt;br&gt;2、跟进官方6.0.4版本，修复夸克网盘获取下载链接失效、支持移动云盘。 |
| 1.0.5.5 | 2023年04月01日 | 1、感谢[Night-stars](https://github.com/Night-stars-1)的帮助，修复因为原作者服务器导致的初始化暗号识别错误；&lt;br&gt;2、修改一些文本以及提供给服务器的信息。 |
| 1.0.5.4 | 2023年03月13日 | 1、小修小改css，让主题色出现在更多地方；&lt;br&gt;2、修改下载链接获取失败的提示；&lt;br&gt;3、增加更多的主题色，可在助手设置查看；&lt;br&gt;4、homo彩蛋被删去力（悲）。 |
| 1.0.5.3 | 2023年03月10日 | 1、阿里云盘可以摸到下载菜单了。 |
| 1.0.5.2 | 2022年10月04日 | 1、增加脚本信息菜单；&lt;br&gt;2、优化阿里云盘显示svg图片；&lt;br&gt;3、修改弹窗按钮颜色。 |
| 1.0.5.1 | 2022年09月30日 | 1、修复在切换按钮主题后夸克网盘不能正常显示按钮。 |
| 1.0.5   | 2022年09月21日 | 1、跟进官方5.9.4版，修复文件名识别。 |
| 1.0.4   | 2022年08月13日 | 1、修复了原作者留下的夸克网盘切换文件夹就多一个“下载助手”按钮的大BUG；&lt;br&gt;2、在下载菜单增加“助手设置”“更新日志”按钮；&lt;br&gt;3、修改阿里云盘和夸克网盘下载助手按钮样式；&lt;br&gt;4、增加“取消点亮按钮”油猴菜单；&lt;br&gt;5、修改部分css，使其与选择的主题更贴切。 |
| 1.0.3   | 2022年08月11日 | 1、增加homo特有的彩蛋 |
| 1.0.2   | 2022年08月10日 | 1、修改并加宽界面，调整部分css，使Sweetalert2界面更美观，更与原版相近；&lt;br&gt;2、修改部分提示文字，使文字更容易复制。 |
| 1.0.1   | 2022年08月10日 | 1、去除更新提示；&lt;br&gt;2、更新Sweetalert2至11版本。 |
| 1.0.0   | 2022年08月10日 | (脚本发布)&lt;br&gt;1、增加“注入”功能（bushi）；&lt;br&gt;2、去除广告。 |

---

&lt;p align=&quot;center&quot;&gt;这是给认真阅读完README文件的人的赞美&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;个人博客: &lt;a target=&quot;_blank&quot; href=&quot;https://hmjz100blog.rf.gd&quot;&gt;https://hmjz100blog.rf.gd&lt;/a&gt;&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[DmytroVasin/DrawPen]]></title>
            <link>https://github.com/DmytroVasin/DrawPen</link>
            <guid>https://github.com/DmytroVasin/DrawPen</guid>
            <pubDate>Sat, 18 Oct 2025 00:04:52 GMT</pubDate>
            <description><![CDATA[DrawPen is a simple screen annotation. Available on macOS, Windows & Linux.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/DmytroVasin/DrawPen">DmytroVasin/DrawPen</a></h1>
            <p>DrawPen is a simple screen annotation. Available on macOS, Windows & Linux.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 448</p>
            <p>Forks: 31</p>
            <p>Stars today: 32 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://github.com/DmytroVasin/DrawPen/blob/main/assets/static/icon.png?raw=true&quot; height=&quot;200&quot;&gt;
  &lt;h3 align=&quot;center&quot;&gt;Draw Pen&lt;/h3&gt;
  &lt;p align=&quot;center&quot;&gt;An open-source screen annotation tool&lt;p&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&#039;https://github.com/DmytroVasin/DrawPen/releases/latest/download/DrawPen-0.0.27.Setup.exe&#039;&gt;
    &lt;img alt=&#039;Get it on Windows&#039; width=&quot;134px&quot; src=&#039;https://github.com/DmytroVasin/DrawPen/blob/main/assets/static/BadgeWindows.png?raw=true&#039;/&gt;
  &lt;/a&gt;
  &lt;a href=&#039;https://github.com/DmytroVasin/DrawPen/releases/latest/download/DrawPen-0.0.27-arm64.dmg&#039;&gt;
    &lt;img alt=&#039;Get it on macOS&#039; width=&quot;134px&quot; src=&#039;https://github.com/DmytroVasin/DrawPen/blob/main/assets/static/BadgeMacOS.png?raw=true&#039;/&gt;
  &lt;/a&gt;
  &lt;a href=&#039;https://github.com/DmytroVasin/DrawPen/releases/latest/download/drawpen_0.0.27_amd64.deb&#039;&gt;
    &lt;img alt=&#039;Get it on Linux&#039; width=&quot;134px&quot; src=&#039;https://github.com/DmytroVasin/DrawPen/blob/main/assets/static/BadgeLinux.png?raw=true&#039;/&gt;
  &lt;/a&gt;
&lt;/p&gt;

---

![DrawPen](https://github.com/DmytroVasin/DrawPen/blob/main/assets/static/main.png?raw=true)

![DrawPen - Usage](https://github.com/DmytroVasin/DrawPen/blob/main/assets/static/main.gif?raw=true)

### Installation

You can download DrawPen for **free** from [releases](https://github.com/DmytroVasin/DrawPen/releases)

Or install via **package managers**:

```bash
# macOS (Homebrew)
brew install --cask drawpen

# Windows (Scoop)
scoop install drawpen
# ⚠️ Scoop PR is pending — may not work until merged
```

### Keybindings

| Command                                 | Keybindings                                                  | Comment |
| --------------------------------------- | ------------------------------------------------------------ | - |
| Show/Hide App                           | &lt;kbd&gt;CMD/CTRL + SHIFT + A&lt;/kbd&gt; | Global shortcut |
| Activate Pen                            | &lt;kbd&gt;1&lt;/kbd&gt; | |
| Activate/Switch Shapes (Arrow/Square/etc.)   | &lt;kbd&gt;2&lt;/kbd&gt; | |
| Activate Text                           | &lt;kbd&gt;3&lt;/kbd&gt; | |
| Activate Highlighter                    | &lt;kbd&gt;4&lt;/kbd&gt; | |
| Activate Laser                          | &lt;kbd&gt;5&lt;/kbd&gt; | |
| Activate Eraser                         | &lt;kbd&gt;6&lt;/kbd&gt; | |
| Switch Color                            | &lt;kbd&gt;7&lt;/kbd&gt; | |
| Switch Thickness (Width)                | &lt;kbd&gt;8&lt;/kbd&gt; | |
| Show/Hide ToolBar                       | &lt;kbd&gt;CMD/CTRL + T&lt;/kbd&gt; | |
| Show/Hide Whiteboard                    | &lt;kbd&gt;CMD/CTRL + W&lt;/kbd&gt; | |
| Clear Desk                              | &lt;kbd&gt;CMD/CTRL + K&lt;/kbd&gt; | |
| Reset to original                       | | Resets all app settings &lt;br /&gt; (chosen colors, toolbar position, etc.)  |

### Contributing

Please read our [Contributing Guidelines](CONTRIBUTING.md) for more information.

### License

DrawPen is licensed under the MIT Open Source license.
For more information, see [LICENSE](LICENSE).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[tjy-gitnub/win12]]></title>
            <link>https://github.com/tjy-gitnub/win12</link>
            <guid>https://github.com/tjy-gitnub/win12</guid>
            <pubDate>Sat, 18 Oct 2025 00:04:51 GMT</pubDate>
            <description><![CDATA[Windows 12 网页版，在线体验 点击下面的链接在线体验]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/tjy-gitnub/win12">tjy-gitnub/win12</a></h1>
            <p>Windows 12 网页版，在线体验 点击下面的链接在线体验</p>
            <p>Language: JavaScript</p>
            <p>Stars: 7,082</p>
            <p>Forks: 888</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre>&gt; [!NOTE]
&gt; 无偿请求帮助我们翻译此项目！目前暂仅需英语。详见[此](lang/readme.md)。

&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;./icon/windows12.svg&quot; width=&quot;100&quot; height=&quot;100&quot;&gt;
&lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;Windows 12 网页版&lt;/h1&gt;
&lt;p align=&quot;center&quot; class=&quot;shields&quot;&gt;
  &lt;span href=&quot;https://github.com/tjy-gitnub/win12/issues&quot; style=&quot;text-decoration:none&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/issues/tjy-gitnub/win12.svg&quot; alt=&quot;GitHub issues&quot;/&gt;
  &lt;/span&gt;
  &lt;span href=&quot;https://github.com/tjy-gitnub/win12/stargazers&quot; style=&quot;text-decoration:none&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/stars/tjy-gitnub/win12.svg&quot; alt=&quot;GitHub stars&quot;/&gt;
  &lt;/span&gt;
  &lt;span href=&quot;https://github.com/tjy-gitnub/win12/network&quot; style=&quot;text-decoration:none&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/forks/tjy-gitnub/win12.svg&quot; alt=&quot;GitHub forks&quot;/&gt;
  &lt;/span&gt;
  &lt;span href=&quot;https://github.com/tjy-gitnub/win12/blob/master/LICENSE&quot; style=&quot;text-decoration:none&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/license/tjy-gitnub/win12&quot; alt=&quot;GitHub License&quot;/&gt;
  &lt;/pan&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot; class=&quot;language&quot; title=&quot;Language selection 语言选择&quot;&gt;
  &lt;a href=&quot;readme/README_en_us.md&quot;&gt;English&lt;/a&gt; | 
  &lt;b&gt;简体中文&lt;/b&gt; | 
  &lt;a href=&quot;readme/README_fr_fr.md&quot;&gt;Français&lt;/a&gt;|
  &lt;a href=&quot;readme/README_zh_tw.md&quot;&gt;繁體中文&lt;/a&gt;
&lt;/p&gt;
&lt;details align=&quot;center&quot;&gt;
  &lt;summary&gt;Star History&lt;/summary&gt;
  &lt;a href=&quot;https://star-history.com/#tjy-gitnub/win12&amp;Date&quot; style=&quot;text-decoration:none&quot;&gt;
    &lt;img src=&quot;https://api.star-history.com/svg?repos=tjy-gitnub/win12&amp;type=Date&quot; alt=&quot;Star History Chart&quot;&gt;
  &lt;/a&gt;
&lt;/details&gt;

## 目录

- [Windows 12 网页版](#windows-12-网页版)
  - [前言](#前言)
  - [在线体验](#在线体验)
  - [效果展示](#效果展示)
  - [前景规划](#前景规划)
  - [开源声明](#开源声明)
  - [贡献须知](#贡献须知)
  - [贡献者](#贡献者)
  - [资助我们](#资助我们)
    

    

## 前言

很久以前tjy-gitnub看到 Windows 12 概念版（Powered by PowerPoint）后深受启发，决定做一个 Windows 12 网页版，就像 [Windows 11 网页版](https://win11.blueedge.me/) 一样。 它拥有精美的 ui 设计，流畅丰富的动画，各种高级的功能。

于是就有了这个项目（是的，这个项目的诞生就是这么突然）

&gt; 目前移动端适配不太完善，开桌面版网站凑合着用吧 `&gt;v-)o`

## 在线体验

点击[此处](tjy-gitnub.github.io/win12/desktop.html)即可体验。


## 效果展示

&gt; 新的版本有很多变化，仅供参考，请以实物为准（你点一下 [这里](https://tjy-gitnub.github.io/win12/desktop.html) 就知道了啊，不麻烦`-_-)o` ）

![image](https://tjy-gitnub.github.io/win12/img/start-menu.png)

*开始菜单*

![image](https://tjy-gitnub.github.io/win12/img/colorful-apps.png)

*丰富的应用*

![image](https://tjy-gitnub.github.io/win12/img/dark-mode.png)

*深色模式*

![image](https://tjy-gitnub.github.io/win12/img/ai-copilot.png)
*AI Copilot([实现方法](./scripts/AI%20Copilot%20service/README.md))*
## 前景规划

关于该项目的路径规划:

- [x] 基本功能与应用
- [x] 外观整体优化
- [x] 加入特效
- [x] 窗口功能
- [x] 应用完善
- [x] 添加更多个性化方面的设置
- [x] 添加 Edge 应用
- [ ] 为更多应用添加标签页
- [x] 完善小组件，添加到桌面等功能
- [x] 动态壁纸
- [ ] 更多任务栏的自定义
- [ ] 丰富应用生态，添加 Microsoft Store
- [ ] 完善设置及 Windows 更新

下面是一些...呃......畅..想 `~o~)/`：

- [x] 建立文件系统
- [ ] 建立自己的可执行文件机制
- [ ] 将 .exe 文件转化并执行
- [ ] 提供更多 api 供应用调用
- [x] 内置浏览器内核，成为应用
- [ ] 将项目更名为 &quot;Windows 12&quot;
- [ ] 封装到 Windows 系统中
- [ ] 将启动程序设为此应用
- [ ] 去除多余系统功能，封装成独立的操作系统
- [ ] 将项目更名为 &quot;Doswin 1.0&quot;
- [ ] 适配量子计算机
- [x] 接入ChatGPT
- [ ] 将项目更名为 &quot;550W&quot;

## 开源声明
&gt;[!TIP]
&gt;无论您以何种方式使用本项目，均代表您已仔细阅读并同意遵守本章节的全部内容。

Windows12 网页版的内容均采用较为宽松的著作权许可协议授权社会公众使用。

### 计算机程序源代码
Wndows12 网页版是自由软件，采用Eclipse基金会发行的Eclipse Public License 2.0许可证（网址:&lt;https://www.eclipse.org/legal/epl-2.0/&gt;）进行许可。在遵守该许可证的前提下，您可以自由使用本项目的源代码。

### 媒体文件

Windows12 网页版的媒体文件内容（图形作品、美术作品、视听作品）依照依照知识共享 署名-相同方式共享 4.0 协议国际版（CC BY-SA 4.0）公开发表（另有声明的部分除外）；在遵守该许可协议的前提下，您可以自由使用本项目内的媒体文件。

相关文件属于合理使用的范畴，应注意使用相关的媒体文件存在法律风险，请在使用前查阅著作权法律法规之规定。

### 附加条款
1. 任何使用、分享或分发本项目者，必须在项目介绍、文档或相关材料中明确附上原作者信息（谭景元，tjy-gitnub）及原项目链接（&lt;https://github.com/tjy-gitnub/win12&gt;）。**您不得故意隐瞒、移除或修改原项目中的署名信息、作者信息或项目链接等；不得限制他人查看这些信息**。
2. 将本项目用于商业用途者，必须标明原作者及项目链接，并以 EPL-2.0 协议开源全部相关源代码。
3. 未经修改的源代码不得用于商业用途。
4. 任何使用或分享本项目者，不得移除、隐藏或限制查看本开源声明。
5. 您在发现他人违反前四款所列各项要求时，请及时向我们报告，并尽可能及时制止相关内容的发布与传输。
6. 若您实施侵权行为，我们将根据法律规定保留记录，且保留在任何时间以一切方式采取法律行动、追究法律责任的权利（包括但不限于依法向执法机关提交报告、向司法机关提出控告、配合执法机关和司法机关调查等）。
## 贡献须知

详情请见 [贡献指南](./CONTRIBUTING.md)。

## 贡献者

核心开发者: tjy-gitnub([Bilibili](https://space.bilibili.com/2010692096/))，NB-group([Bilibili](https://space.bilibili.com/1570243738/))，782([Bilibili](https://space.bilibili.com/1046361194/))（三人均为初中生）

项目贡献者:详见[此处](https://github.com/tjy-gitnub/win12/graphs/contributors)（感谢我们出色的贡献者！）

## 资助我们

可以向我们的[爱发电账户](https://afdian.com/a/qstudio)捐款

特别感谢以下赞助者:
- CursoR_光标（&lt;https://afdian.com/a/cursor&gt;）
- Baymax（&lt;https://afdian.com/u/a131cd504dea11eeb6be5254001e7c00&gt;）
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[prebid/Prebid.js]]></title>
            <link>https://github.com/prebid/Prebid.js</link>
            <guid>https://github.com/prebid/Prebid.js</guid>
            <pubDate>Sat, 18 Oct 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[Setup and manage header bidding advertising partners without writing code or confusing line items. Prebid.js is open source and free.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/prebid/Prebid.js">prebid/Prebid.js</a></h1>
            <p>Setup and manage header bidding advertising partners without writing code or confusing line items. Prebid.js is open source and free.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,502</p>
            <p>Forks: 2,271</p>
            <p>Stars today: 1 star today</p>
            <h2>README</h2><pre>[![Percentage of issues still open](http://isitmaintained.com/badge/open/prebid/Prebid.js.svg)](https://isitmaintained.com/project/prebid/Prebid.js &quot;Percentage of issues still open&quot;)
[![Coverage Status](https://coveralls.io/repos/github/prebid/Prebid.js/badge.svg?branch=master)](https://coveralls.io/github/prebid/Prebid.js?branch=master)

# Prebid.js

&gt; A free and open source library for publishers to quickly implement header bidding.

This README is for developers who want to contribute to Prebid.js.
Additional documentation can be found at [the Prebid.js documentation homepage](https://docs.prebid.org/prebid/prebidjs.html).
Working examples can be found in [the developer docs](https://prebid.org/dev-docs/getting-started.html).

Prebid.js is open source software that is offered for free as a convenience. While it is designed to help companies address legal requirements associated with header bidding, we cannot and do not warrant that your use of Prebid.js will satisfy legal requirements. You are solely responsible for ensuring that your use of Prebid.js complies with all applicable laws.  We strongly encourage you to obtain legal advice when using Prebid.js to ensure your implementation complies with all laws where you operate.

**Table of Contents**

- [Usage](#Usage)
- [Install](#Install)
- [Build](#Build)
- [Run](#Run)
- [Contribute](#Contribute)

&lt;a name=&quot;Usage&quot;&gt;&lt;/a&gt;

## Usage (as a npm dependency)

**Note**: versions prior to v10 required some Babel plugins to be configured when used as an NPM dependency -
refer to [v9 README](https://github.com/prebid/Prebid.js/blob/9.43.0/README.md). See also [customize build options](#customize-options)

```javascript
import pbjs from &#039;prebid.js&#039;;
import &#039;prebid.js/modules/rubiconBidAdapter&#039;; // imported modules will register themselves automatically with prebid
import &#039;prebid.js/modules/appnexusBidAdapter&#039;;
pbjs.processQueue();  // required to process existing pbjs.queue blocks and setup any further pbjs.queue execution

pbjs.requestBids({
  ...
})
```

You can import just type definitions for every module from `types.d.ts`, and for the `pbjs` global from `global.d.ts`:

```typescript
import &#039;prebid.js/types.d.ts&#039;;
import &#039;prebid.js/global.d.ts&#039;;
pbjs.que.push(/* ... */)
```

Or, if your Prebid bundle uses a different global variable name:

```typescript
import type {PrebidJS} from &#039;prebid.js/types.d.ts&#039;;
declare global {
    interface Window {
        myCustomPrebidGlobal: PrebidJS;
    }
}
```

&lt;a id=&quot;customize-options&quot;&gt;&lt;/a&gt;

### Customize build options

If you&#039;re using Webpack, you can use the `prebid.js/customize/webpackLoader` loader to set the following options:

| Name | Type | Description | Default | 
| ---- | ---- | ----------- | ------- |
| globalVarName | String | Prebid global variable name | `&quot;pbjs&quot;` | 
| defineGlobal | Boolean | If false, do not set a global variable | `true` | 
| distUrlBase |  String | Base URL to use for dynamically loaded modules (e.g. debugging-standalone.js) | `&quot;https://cdn.jsdelivr.net/npm/prebid.js/dist/chunks/&quot;` |

For example, to set a custom global variable name:

```javascript
// webpack.conf.js
module.exports = {
  module: {
    rules: [
      {
        loader: &#039;prebid.js/customize/webpackLoader&#039;,
        options: {
          globalVarName: &#039;myCustomGlobal&#039;
        }
      },
    ]
  }
}
```


&lt;a name=&quot;Install&quot;&gt;&lt;/a&gt;

## Install



    $ git clone https://github.com/prebid/Prebid.js.git
    $ cd Prebid.js
    $ npm ci

*Note:* You need to have `NodeJS` 12.16.1 or greater installed.

*Note:* In the 1.24.0 release of Prebid.js we have transitioned to using gulp 4.0 from using gulp 3.9.1.  To comply with gulp&#039;s recommended setup for 4.0, you&#039;ll need to have `gulp-cli` installed globally prior to running the general `npm ci`.  This shouldn&#039;t impact any other projects you may work on that use an earlier version of gulp in its setup.

If you have a previous version of `gulp` installed globally, you&#039;ll need to remove it before installing `gulp-cli`.  You can check if this is installed by running `gulp -v` and seeing the version that&#039;s listed in the `CLI` field of the output.  If you have the `gulp` package installed globally, it&#039;s likely the same version that you&#039;ll see in the `Local` field.  If you already have `gulp-cli` installed, it should be a lower major version (it&#039;s at version `2.0.1` at the time of the transition).

To remove the old package, you can use the command: `npm rm gulp -g`

Once setup, run the following command to globally install the `gulp-cli` package: `npm install gulp-cli -g`


&lt;a name=&quot;Build&quot;&gt;&lt;/a&gt;

## Build for Development

To build the project on your local machine we recommend, running:

    $ gulp serve-and-test --file &lt;spec_file.js&gt;

This will run testing but not linting. A web server will start at `http://localhost:9999` serving from the project root and generates the following files:

+ `./build/dev/prebid.js` - Full source code for dev and debug
+ `./build/dev/prebid.js.map` - Source map for dev and debug
+ `./build/dev/prebid-core.js`
+ `./build/dev/prebid-core.js.map`


Development may be a bit slower but if you prefer linting and additional watch files you can also still run just:

    $ gulp serve


### Build Optimization

The standard build output contains all the available modules from within the `modules` folder.  Note, however that there are bid adapters which support multiple bidders through aliases, so if you don&#039;t see a file in modules for a bid adapter, you may need to grep the repository to find the name of the module you need to include.

You might want to exclude some/most of them from the final bundle.  To make sure the build only includes the modules you want, you can specify the modules to be included with the `--modules` CLI argument.

For example, when running the serve command: `gulp serve --modules=openxBidAdapter,rubiconBidAdapter,sovrnBidAdapter`

Building with just these adapters will result in a smaller bundle which should allow your pages to load faster.

**Build standalone prebid.js**

- Clone the repo, run `npm ci`
- Then run the build:

        $ gulp build --modules=openxBidAdapter,rubiconBidAdapter,sovrnBidAdapter

Alternatively, a `.json` file can be specified that contains a list of modules you would like to include.

    $ gulp build --modules=modules.json

With `modules.json` containing the following
```json modules.json
[
  &quot;openxBidAdapter&quot;,
  &quot;rubiconBidAdapter&quot;,
  &quot;sovrnBidAdapter&quot;
]
```

**Build prebid.js using npm for bundling**

In case you&#039;d like to explicitly show that your project uses `prebid.js` and want a reproducible build, consider adding it as an `npm` dependency.

- Add `prebid.js` as a `npm` dependency of your project: `npm install prebid.js`
- Run the `prebid.js` build under the `node_modules/prebid.js/` folder

        $ gulp build --modules=path/to/your/list-of-modules.json

Most likely your custom `prebid.js` will only change when there&#039;s:

- A change in your list of modules
- A new release of `prebid.js`

Having said that, you are probably safe to check your custom bundle into your project.  You can also generate it in your build process.

**Build once, bundle multiple times**

If you need to generate multiple distinct bundles from the same Prebid version, you can reuse a single build with:

```
gulp build
gulp bundle --tag one --modules=one.json
gulp bundle --tag two --modules=two.json
```

This generates slightly larger files, but has the advantage of being much faster to run (after the initial `gulp build`). It&#039;s also the method used by [the Prebid.org download page](https://docs.prebid.org/download.html).

&lt;a name=&quot;Run&quot;&gt;&lt;/a&gt;

### Excluding particular features from the build

Since version 7.2.0, you may instruct the build to exclude code for some features - for example, if you don&#039;t need support for native ads:

```
gulp build --disable NATIVE --modules=openxBidAdapter,rubiconBidAdapter,sovrnBidAdapter # substitute your module list
```

Features that can be disabled this way are:

 - `VIDEO` - support for video bids;
 - `NATIVE` - support for native bids;
- `UID2_CSTG` - support for UID2 client side token generation (see [Unified ID 2.0](https://docs.prebid.org/dev-docs/modules/userid-submodules/unified2.html))
- `GREEDY` - disables the use blocking, &quot;greedy&quot; promises within Prebid (see [note](#greedy-promise)).
- `LOG_NON_ERROR` - support for non-error console messages. (see [note](#log-features))
- `LOG_ERROR` - support for error console messages (see [note](#log-features))

`GREEDY` is disabled and all other features are enabled when no features are explicitly chosen. Use `--enable GREEDY` on the `gulp build` command or remove it from `disableFeatures` to restore the original behavior. If you disable any feature, you must explicitly also disable `GREEDY` to get the default behavior on promises.

&lt;a id=&quot;greedy-promise&quot;&gt;&lt;/a&gt;

#### Greedy promises

When `GREEDY` is enabled, Prebid attempts to hold control of the main thread when possible, using a [custom implementation of `Promise`](https://github.com/prebid/Prebid.js/blob/master/libraries/greedy/greedyPromise.js) that does not submit callbacks to the scheduler once the promise is resolved (running them immediately instead).
Disabling this behavior instructs Prebid to use the standard `window.Promise` instead; this has the effect of breaking up task execution, making them slower overall but giving the browser more chances to run other tasks in between, which can improve UX.         

You may also override the `Promise` constructor used by Prebid through `pbjs.Promise`, for example:

```javascript
var pbjs = pbjs || {};
pbjs.Promise = myCustomPromiseConstructor;
```

&lt;a id=&quot;log-features&quot;&gt;&lt;/a&gt;

#### Logging

Disabling `LOG_NON_ERROR` and `LOG_ERROR` removes most logging statements from source, which can save on bundle size. Beware, however, that there is no test coverage with either of these disabled. Turn them off at your own risk.

Disabling logging — especially `LOG_ERROR` — also makes debugging more difficult. Consider building a separate version with logging enabled for debugging purposes.

We suggest running the build with logging off only if you are able to confirm a real world metric improvement via a testing framework. Using this build without such a framework may result in unexpectedly worse performance.

## Unminified code

You can get a version of the code that&#039;s unminified for debugging with `build-bundle-dev`:

```bash
gulp build-bundle-dev --modules=bidderA,module1,...
```

The results will be in build/dev/prebid.js.

## ES5 Output Support

For compatibility with older parsers or environments that require ES5 syntax, you can generate ES5-compatible output using the `--ES5` flag:

```bash
gulp build-bundle-dev --modules=bidderA,module1,... --ES5
```

This will:
- Transpile all code to ES5 syntax using CommonJS modules
- Target browsers: IE11+, Chrome 50+, Firefox 50+, Safari 10+
- Ensure compatibility with older JavaScript parsers

**Note:** Without the `--ES5` flag, the build will use modern ES6+ syntax by default for better performance and smaller bundle sizes.

## Test locally

To lint the code:

```bash
gulp lint
```

To lint and only show errors

```bash
gulp lint --no-lint-warnings
```

To run the unit tests:

```bash
gulp test
```

To run the unit tests for a particular file (example for pubmaticBidAdapter_spec.js):
```bash
gulp test --file &quot;test/spec/modules/pubmaticBidAdapter_spec.js&quot; --nolint
```

To generate and view the code coverage reports:

```bash
gulp test-coverage
gulp view-coverage
```

Local end-to-end testing can be done with:

```bash
gulp e2e-test --local
```

For Prebid.org members with access to BrowserStack, additional end-to-end testing can be done with:

```bash
gulp e2e-test --host=test.localhost
```

To run these tests, the following items are required:
- setup an alias of localhost in your `hosts` file (eg `127.0.0.1  test.localhost`); note - you can use any alias.  Use this alias in the command-line argument above.
- access to [BrowserStack](https://www.browserstack.com/) account.  Assign the following variables in your bash_profile:
```bash
export BROWSERSTACK_USERNAME=&#039;YourUserNameHere&#039;
export BROWSERSTACK_ACCESS_KEY=&#039;YourAccessKeyHere&#039;
```
You can get these BrowserStack values from your profile page.

For development:

```javascript
(function() {
    var d = document, pbs = d.createElement(&#039;script&#039;), pro = d.location.protocol;
    pbs.type = &#039;text/javascript&#039;;
    pbs.src = ((pro === &#039;https:&#039;) ? &#039;https&#039; : &#039;http&#039;) + &#039;./build/dev/prebid.js&#039;;
    var target = document.getElementsByTagName(&#039;head&#039;)[0];
    target.insertBefore(pbs, target.firstChild);
})();
```

For deployment:

```javascript
(function() {
    var d = document, pbs = d.createElement(&#039;script&#039;), pro = d.location.protocol;
    pbs.type = &#039;text/javascript&#039;;
    pbs.src = ((pro === &#039;https:&#039;) ? &#039;https&#039; : &#039;http&#039;) + &#039;./build/dist/prebid.js&#039;;
    var target = document.getElementsByTagName(&#039;head&#039;)[0];
    target.insertBefore(pbs, target.firstChild);
})();
```

Build and run the project locally with:

```bash
gulp serve
```

This runs `lint` and `test`, then starts a web server at `http://localhost:9999` serving from the project root.
Navigate to your example implementation to test, and if your `prebid.js` file is sourced from the `./build/dev`
directory you will have sourcemaps available in your browser&#039;s developer tools.

To run the example file, go to:

+ `http://localhost:9999/integrationExamples/gpt/hello_world.html`

As you make code changes, the bundles will be rebuilt and the page reloaded automatically.

&lt;a name=&quot;Contribute&quot;&gt;&lt;/a&gt;

## Contribute

Many SSPs, bidders, and publishers have contributed to this project. [Hundreds of bidders](https://github.com/prebid/Prebid.js/tree/master/modules) are supported by Prebid.js.

For guidelines, see [Contributing](./CONTRIBUTING.md).

Our PR review process can be found [here](https://github.com/prebid/Prebid.js/tree/master/PR_REVIEW.md).

### Add a Bidder Adapter

To add a bidder adapter module, see the instructions in [How to add a bidder adapter](https://docs.prebid.org/dev-docs/bidder-adaptor.html).

### Code Quality

Code quality is defined by `.eslintrc` and errors are reported in the terminal.

If you are contributing code, you should [configure your editor](http://eslint.org/docs/user-guide/integrations#editors) with the provided `.eslintrc` settings.

### Unit Testing with Karma

        $ gulp test --watch --browsers=chrome

This will run tests and keep the Karma test browser open. If your `prebid.js` file is sourced from the `./build/dev` directory you will also have sourcemaps available when using your browser&#039;s developer tools.

+ To access the Karma debug page, go to `http://localhost:9876/debug.html`

+ For test results, see the console

+ To set breakpoints in source code, see the developer tools

Detailed code coverage reporting can be generated explicitly with

        $ gulp test --coverage

The results will be in

        ./build/coverage

*Note*: Starting in June 2016, all pull requests to Prebid.js need to include tests with greater than 80% code coverage before they can be merged.  For more information, see [#421](https://github.com/prebid/Prebid.js/issues/421).

For instructions on writing tests for Prebid.js, see [Testing Prebid.js](https://prebid.org/dev-docs/testing-prebid.html).

### Supported Browsers

Prebid.js is supported on IE11 and modern browsers until 5.x. 6.x+ transpiles to target &gt;0.25%; not dead; not Opera Mini; not IE11.

### Governance
Review our governance model [here](https://github.com/prebid/Prebid.js/tree/master/governance.md).
### END
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[OpenSignLabs/OpenSign]]></title>
            <link>https://github.com/OpenSignLabs/OpenSign</link>
            <guid>https://github.com/OpenSignLabs/OpenSign</guid>
            <pubDate>Sat, 18 Oct 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[🔥 The free & Open Source DocuSign alternative]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/OpenSignLabs/OpenSign">OpenSignLabs/OpenSign</a></h1>
            <p>🔥 The free & Open Source DocuSign alternative</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,334</p>
            <p>Forks: 534</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;&lt;a href=&#039;https://www.opensignlabs.com&#039;&gt;&lt;img src=https://github.com/OpenSignLabs/OpenSign/assets/5486116/e518cc9c-5de3-47da-950b-f93336b9f14e&gt;&lt;/a&gt;
&lt;/h1&gt;&lt;div align=&quot;center&quot;&gt;

[The free and open source alternative to DocuSign](https://www.opensignlabs.com)

[![Average time to resolve an issue](http://isitmaintained.com/badge/resolution/opensignlabs/opensign.svg)](http://isitmaintained.com/project/opensignlabs/opensign &quot;Average time to resolve an issue&quot;)
[![All Contributors](https://img.shields.io/github/all-contributors/opensignlabs/opensign?color=ee8449&amp;style=flat-square)](#contributors)
![GitHub commit activity (branch)](https://img.shields.io/github/commit-activity/w/opensignlabs/opensign)
![GitHub last commit (by committer)](https://img.shields.io/github/last-commit/opensignlabs/opensign)


&lt;a href=&quot;https://www.opensignlabs.com/&quot;&gt;Website&lt;/a&gt;
  &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt;
  &lt;a href=&quot;https://docs.opensignlabs.com&quot;&gt;Help Docs&lt;/a&gt;
  &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt;
    &lt;a href=&quot;https://docs.opensignlabs.com/docs/API-docs/opensign-api-v-1&quot;&gt;API Docs&lt;/a&gt;
  &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt;
  &lt;a href=&quot;https://www.opensignlabs.com/blog&quot;&gt;Blog&lt;/a&gt;
  &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt;
  &lt;a href=&quot;https://discord.com/invite/xe9TDuyAyj&quot;&gt;Discord&lt;/a&gt;
  &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt;
  &lt;a href=&quot;https://twitter.com/opensignlabs&quot;&gt;Twitter&lt;/a&gt;
  &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt;
  &lt;a href=&quot;https://www.linkedin.com/company/opensign%E2%84%A2/about/&quot;&gt;LinkedIn&lt;/a&gt;


## The premier open source document signing solution(DocuSign alternative)

---
&lt;/div&gt;

### Table of Contents

1. [Introduction](#introduction)
2. [Features](#features)
3. [Installation](#installation)
4. [Usage](#usage)
5. [Contribution Guidelines](#contribution-guidelines)
6. [License](#license)
7. [Acknowledgments](#acknowledgments)

---
Please star ⭐ the repo to support us! 😀

### Introduction

Welcome to OpenSign, the premier open source docusign alternative - document e-signing solution designed to provide a secure, reliable and free alternative to commercial esign platforms like DocuSign, PandaDoc, SignNow, Adobe Sign, Smartwaiver, SignRequest, HelloSign &amp; Zoho sign. Our mission is to democratize the document signing process, making it accessible and straightforward for everyone.

---

### Features

- **Secure PDF E-Signing:** With the help of robust encryption algorithms, OpenSign™ ensures maximum security, privacy &amp; compatibility. Now sign unlimited documents even on the [cloud hosted free version of OpenSign](https://www.opensignlabs.com/).
- **Annotate Documents:** OpenSign™ allows you to annotate PDF documents with an advanced signing pad that allows hand drawn signatures, uploaded images, typed signatures &amp; saved signatures for the simplest open source document signing experience ever.
- **User-Friendly Interface:** OpenSign™ was built while keeping Intuitive design in mind for ease of use. Features like &quot;Sign yourself&quot;, &quot;Templates&quot;, &quot;One click signatures&quot; and &quot;OpenSign™ Drive&quot; makes it stand out of the crowd and even makes it better than a lot of so-called industry leaders. OpenSign intends to provide the best document signing experience in the open source ecosystem.
- **Multi-signer Support:** OpenSign&#039;s ability to invite multiple signers for signing along with the ability to invite by sharing signing links &amp; being able to enforce signing in a sequence makes it the only open source solution that is fully loaded and allows it to compete head-to-head with established players in e-signature space.
- **Email Unique Code(OTP) verification support for guest signers:** With OpenSign™, your documents are fully secure even when being signed by guest users. Guest signers can only sign the document after entering a unique code sent to their email address. 
- **&quot;Expiring Docs&quot; &amp; &quot;Rejection&quot;:** You can set documents to expire after certain number of days after which nobody will be able to sign. Not just this, OpenSign™ also allows signers to reject signing a document with a reason that will be promptly shared with the sender.
- **Beautiful email templates:** All document signing invitations, completion notifications &amp; reminders are formatted using great looking email templates. Not just this, you are even allowed to customise the email templates making your free document signing invitations look the way you always wanted them to be.
- **PDF Template Creation:** OpenSign™ allows you to create and store PDF document templates for repeated use thereby saving you a lot of time &amp; collect e-signatures seamlessly.
- **OpenSign™ Drive:** It is a centralised secure vault for your digital documents that makes storing, signing, organizing, sharing &amp; archieving your docs a breeze.
- **Audit Trails &amp; completion certificate:** Being a security focused solution, OpenSign™ makes it a top priority to save detailed logs for tracking document activities along with time-stamps, IP addresses, email IDs &amp; phone numbers. A completion certificate is generated as soon as document is completed which contains all the document related logs for added safety.
- **API Support:** OpenSign™ API allows seamless integration into existing systems and software. You can generate an API key from the app and refer the [official API docs](https://docs.opensignlabs.com/docs/API-docs/opensign-api-v-1) to start integrating it in your existing applications.
- **Integrations:** The open source document signing experience becomes even more seamless because of integrations with various Cloud storage systems, CRMs &amp; enterprise platforms. We also have a Zapier integration that allows you to integrate it with virtually any application.
&lt;img alt=&quot;Login page&quot; src=&quot;https://github.com/OpenSignLabs/OpenSign/assets/171803164/8016edb6-7d6e-4185-ab72-82d2c4a16032&quot; height=&#039;200&#039; &gt; 
&lt;img alt=&quot;Dash_board&quot; src=&quot;https://github.com/OpenSignLabs/OpenSign/assets/171803164/6e7b96f7-3154-4c25-bc1e-caf33925cc47&quot; height=&#039;200&#039;&gt;
&lt;img  alt=&quot;Widgets&quot; src=&quot;https://github.com/OpenSignLabs/OpenSign/assets/171803164/7edb65bd-c265-4b3d-9758-38e79766c5c2&quot; height=&#039;200&#039;&gt;
&lt;img  alt=&quot;Request Signature&quot; src=&quot;https://github.com/OpenSignLabs/OpenSign/assets/171803164/1697ae46-dcac-41c9-a081-aded25693846&quot; height=&#039;200&#039;&gt;
&lt;img  alt=&quot;Create template&quot; src=&quot;https://github.com/OpenSignLabs/OpenSign/assets/171803164/c2060fda-50f1-4116-a532-51b94b48463a&quot; height=&#039;200&#039;&gt;
&lt;img  alt=&quot;Manage_Template&quot; src=&quot;https://github.com/OpenSignLabs/OpenSign/assets/171803164/90310c74-8271-49bd-8c5f-89daa5a623c4&quot; height=&#039;200&#039;&gt;
&lt;img  alt=&quot;Folders&quot; src=&quot;https://github.com/OpenSignLabs/OpenSign/assets/171803164/a52207e7-3b0e-497c-b5f6-747bc4e67918&quot; height=&#039;200&#039;&gt;
&lt;img alt=&quot;OpenSign_Confetti&quot; src=&quot;https://github.com/OpenSignLabs/OpenSign/assets/171803164/8f4c6a6e-4a73-439c-9f34-f426044d0a7f&quot; height=&#039;200&#039;&gt;

---

### Deploy

Note: The default MongoDB instance used in deployment is not persistant and will be cleared on every restart. To retain your data, configure and supply your own MongoDB connection URL.

#### DigitalOcean
[![Deploy on DigitalOcean](https://www.deploytodo.com/do-btn-blue.svg)](https://cloud.digitalocean.com/apps/new?repo=https://github.com/OpenSignLabs/Deploy-OpenSign-to-Digital-Ocean/tree/main&amp;refcode=30db1c901ab0)

#### Docker
The simplest way to install OpenSign on your own server is using official docker images by running the following command -

**Command for linux/MacOS**
``` 
export HOST_URL=https://opensign.yourdomain.com &amp;&amp; curl --remote-name-all https://raw.githubusercontent.com/OpenSignLabs/OpenSign/main/docker-compose.yml https://raw.githubusercontent.com/OpenSignLabs/OpenSign/main/Caddyfile https://raw.githubusercontent.com/OpenSignLabs/OpenSign/main/.env.local_dev &amp;&amp; mv .env.local_dev .env.prod &amp;&amp; docker compose up --force-recreate
```
**Command for Windows (Powershell)**
```
$env:HOST_URL=&quot;https://opensign.yourdomain.com&quot;; Invoke-WebRequest -Uri https://raw.githubusercontent.com/OpenSignLabs/OpenSign/main/docker-compose.yml -OutFile docker-compose.yml; Invoke-WebRequest -Uri https://raw.githubusercontent.com/OpenSignLabs/OpenSign/main/Caddyfile -OutFile Caddyfile; Invoke-WebRequest -Uri https://raw.githubusercontent.com/OpenSignLabs/OpenSign/main/.env.local_dev -OutFile .env.local_dev; Rename-Item -Path .env.local_dev -NewName .env.prod; docker compose up --force-recreate
```
**Command for Windows (CMD/Terminal)**
```
set HOST_URL=https://opensign.yourdomain.com &amp;&amp; curl -O https://raw.githubusercontent.com/OpenSignLabs/OpenSign/main/docker-compose.yml &amp;&amp; curl -O https://raw.githubusercontent.com/OpenSignLabs/OpenSign/main/Caddyfile &amp;&amp; curl -O https://raw.githubusercontent.com/OpenSignLabs/OpenSign/main/.env.local_dev &amp;&amp; rename .env.local_dev .env.prod &amp;&amp; docker compose up --force-recreate
```
Make sure that you have `Docker` and `git` installed before you run this command -

Please refer to the [Installation Guide](https://docs.opensignlabs.com/docs/self-host/docker/run-locally/) for detailed instructions on how to install OpenSign on your system.

---

### Usage

For comprehensive guidelines on how to use OpenSign™, please consult our [User Manual](USAGE.md).

---

### Contribution Guidelines

We welcome contributions from the open-source community. For more information on how to contribute, please read our [Contribution Guidelines](CONTRIBUTING.md).

---

### License

OpenSign is licensed under the AGPL-3 License. For more details, see the [LICENSE](LICENSE) file.

---

### Acknowledgments

We would like to thank all our contributors and users for their support and feedback. Special thanks to [OpenSignLabs](https://www.opensignlabs.com) for spearheading this initiative.

---

## Contributors

&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt;
&lt;!-- prettier-ignore-start --&gt;
&lt;!-- markdownlint-disable --&gt;
&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://aleksandarjakovljevic.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2115393?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Aleksandar Jakovljevic&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Aleksandar Jakovljevic&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-ajakov&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/BuilderPrid&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/106882895?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Priyanshu Dwivedi&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Priyanshu Dwivedi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-BuilderPrid&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Tashuuuu&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/85075827?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Akriti Sengar&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Akriti Sengar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-Tashuuuu&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/parthrc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/101104958?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Parth Chawande&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Parth Chawande&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-parthrc&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Rishabh-git10&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/107680241?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Rishabh Dewangan&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rishabh Dewangan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-Rishabh-git10&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/LemonDrop847&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/106615670?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Nitin Mishra&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Nitin Mishra&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-LemonDrop847&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://jobinselvanose.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/63976083?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Jobin Selvanose&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jobin Selvanose&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#doc-Jobin-S&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/HansF&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1503?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Hans Fraiponts&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Hans Fraiponts&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#doc-HansF&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://linktr.ee/monilprajapati&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/99136041?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Monil Prajapati&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Monil Prajapati&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-Monilprajapati&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://emm-dev0.github.io/portfolio/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/97445413?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Edogbanya Emmanuel&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Edogbanya Emmanuel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#bug-Emm-dev0&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/pranav514&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/76992202?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;pranav514&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;pranav514&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-pranav514&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/arianxq&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/122199576?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Aria&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Aria&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-arianxq&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/SoumyadiptoPal&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/119007659?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Soumyadipto Pal&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Soumyadipto Pal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-SoumyadiptoPal&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/AndreyCurious&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/105622604?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Andrey Didenko&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Andrey Didenko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-AndreyCurious&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/VishakhaSainani&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/113436770?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;VishakhaSainani&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;VishakhaSainani&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-VishakhaSainani&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/andrew-opensignlabs&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/148278535?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Andrew&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Andrew&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-andrew-opensignlabs&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/rishabjasrotia&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/33950743?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Rishab&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rishab&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-rishabjasrotia&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://session.it&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/327285?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Maurizio Pillitu&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Maurizio Pillitu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#bug-maoo&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://luisparra.dev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/16653744?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Luis Parra&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Luis Parra&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#a11y-lsprr&quot; title=&quot;Accessibility&quot;&gt;️️️️♿️&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Govinda04&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/50038172?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Govinda Kocharekar&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Govinda Kocharekar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-Govinda04&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://bilal.cc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/55330484?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Bilal Ahmad Bhat&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Bilal Ahmad Bhat&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-crediblebilal&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/VikramNagwal&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/123088024?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Vikram&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Vikram&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-VikramNagwal&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/ugoconsonni&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13661702?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;ugoconsonni&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ugoconsonni&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-ugoconsonni&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/daniel-mutwiri&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8936960?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Daniel Mutwiri&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Daniel Mutwiri&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-daniel-mutwiri&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Zathiel&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/26553418?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Zathiel&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Zathiel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-Zathiel&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/1024mb&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9301204?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;1024mb&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;1024mb&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#translation-1024mb&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;!-- markdownlint-restore --&gt;
&lt;!-- prettier-ignore-end --&gt;

&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;

This project is tested with BrowserStack.

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[trekhleb/javascript-algorithms]]></title>
            <link>https://github.com/trekhleb/javascript-algorithms</link>
            <guid>https://github.com/trekhleb/javascript-algorithms</guid>
            <pubDate>Sat, 18 Oct 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/trekhleb/javascript-algorithms">trekhleb/javascript-algorithms</a></h1>
            <p>📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings</p>
            <p>Language: JavaScript</p>
            <p>Stars: 193,546</p>
            <p>Forks: 30,913</p>
            <p>Stars today: 20 stars today</p>
            <h2>README</h2><pre># JavaScript Algorithms and Data Structures

&gt; 🇺🇦 UKRAINE [IS BEING ATTACKED](https://war.ukraine.ua/) BY RUSSIAN ARMY. CIVILIANS ARE GETTING KILLED. RESIDENTIAL AREAS ARE GETTING BOMBED.
&gt; - Help Ukraine via:
&gt;   - [Serhiy Prytula Charity Foundation](https://prytulafoundation.org/en/)
&gt;   - [Come Back Alive Charity Foundation](https://savelife.in.ua/en/donate-en/)
&gt;   - [National Bank of Ukraine](https://bank.gov.ua/en/news/all/natsionalniy-bank-vidkriv-spetsrahunok-dlya-zboru-koshtiv-na-potrebi-armiyi)
&gt; - More info on [war.ukraine.ua](https://war.ukraine.ua/) and [MFA of Ukraine](https://twitter.com/MFA_Ukraine)

&lt;hr/&gt;

[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)
[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)
![repo size](https://img.shields.io/github/repo-size/trekhleb/javascript-algorithms.svg)

This repository contains JavaScript based examples of many
popular algorithms and data structures.

Each algorithm and data structure has its own separate README
with related explanations and links for further reading (including ones
to YouTube videos).

_Read this in other languages:_
[_简体中文_](README.zh-CN.md),
[_繁體中文_](README.zh-TW.md),
[_한국어_](README.ko-KR.md),
[_日本語_](README.ja-JP.md),
[_Polski_](README.pl-PL.md),
[_Français_](README.fr-FR.md),
[_Español_](README.es-ES.md),
[_Português_](README.pt-BR.md),
[_Русский_](README.ru-RU.md),
[_Türkçe_](README.tr-TR.md),
[_Italiano_](README.it-IT.md),
[_Bahasa Indonesia_](README.id-ID.md),
[_Українська_](README.uk-UA.md),
[_Arabic_](README.ar-AR.md),
[_Tiếng Việt_](README.vi-VN.md),
[_Deutsch_](README.de-DE.md),
[_Uzbek_](README.uz-UZ.md),
[_עברית_](README.he-IL.md)

*☝ Note that this project is meant to be used for learning and researching purposes
only, and it is **not** meant to be used for production.*

## Data Structures

A data structure is a particular way of organizing and storing data in a computer so that it can
be accessed and modified efficiently. More precisely, a data structure is a collection of data
values, the relationships among them, and the functions or operations that can be applied to
the data.

Remember that each data has its own trade-offs. And you need to pay attention more to why you&#039;re choosing a certain data structure than to how to implement it.

`B` - Beginner, `A` - Advanced

* `B` [Linked List](src/data-structures/linked-list)
* `B` [Doubly Linked List](src/data-structures/doubly-linked-list)
* `B` [Queue](src/data-structures/queue)
* `B` [Stack](src/data-structures/stack)
* `B` [Hash Table](src/data-structures/hash-table)
* `B` [Heap](src/data-structures/heap) - max and min heap versions
* `B` [Priority Queue](src/data-structures/priority-queue)
* `A` [Trie](src/data-structures/trie)
* `A` [Tree](src/data-structures/tree)
  * `A` [Binary Search Tree](src/data-structures/tree/binary-search-tree)
  * `A` [AVL Tree](src/data-structures/tree/avl-tree)
  * `A` [Red-Black Tree](src/data-structures/tree/red-black-tree)
  * `A` [Segment Tree](src/data-structures/tree/segment-tree) - with min/max/sum range queries examples
  * `A` [Fenwick Tree](src/data-structures/tree/fenwick-tree) (Binary Indexed Tree)
* `A` [Graph](src/data-structures/graph) (both directed and undirected)
* `A` [Disjoint Set](src/data-structures/disjoint-set) - a union–find data structure or merge–find set
* `A` [Bloom Filter](src/data-structures/bloom-filter)
* `A` [LRU Cache](src/data-structures/lru-cache/) - Least Recently Used (LRU) cache

## Algorithms

An algorithm is an unambiguous specification of how to solve a class of problems. It is
a set of rules that precisely define a sequence of operations.

`B` - Beginner, `A` - Advanced

### Algorithms by Topic

* **Math**
  * `B` [Bit Manipulation](src/algorithms/math/bits) - set/get/update/clear bits, multiplication/division by two, make negative etc.
  * `B` [Binary Floating Point](src/algorithms/math/binary-floating-point) - binary representation of the floating-point numbers.
  * `B` [Factorial](src/algorithms/math/factorial)
  * `B` [Fibonacci Number](src/algorithms/math/fibonacci) - classic and closed-form versions
  * `B` [Prime Factors](src/algorithms/math/prime-factors) - finding prime factors and counting them using Hardy-Ramanujan&#039;s theorem
  * `B` [Primality Test](src/algorithms/math/primality-test) (trial division method)
  * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)
  * `B` [Least Common Multiple](src/algorithms/math/least-common-multiple) (LCM)
  * `B` [Sieve of Eratosthenes](src/algorithms/math/sieve-of-eratosthenes) - finding all prime numbers up to any given limit
  * `B` [Is Power of Two](src/algorithms/math/is-power-of-two) - check if the number is power of two (naive and bitwise algorithms)
  * `B` [Pascal&#039;s Triangle](src/algorithms/math/pascal-triangle)
  * `B` [Complex Number](src/algorithms/math/complex-number) - complex numbers and basic operations with them
  * `B` [Radian &amp; Degree](src/algorithms/math/radian) - radians to degree and backwards conversion
  * `B` [Fast Powering](src/algorithms/math/fast-powering)
  * `B` [Horner&#039;s method](src/algorithms/math/horner-method) - polynomial evaluation
  * `B` [Matrices](src/algorithms/math/matrix) - matrices and basic matrix operations (multiplication, transposition, etc.)
  * `B` [Euclidean Distance](src/algorithms/math/euclidean-distance) - distance between two points/vectors/matrices
  * `A` [Integer Partition](src/algorithms/math/integer-partition)
  * `A` [Square Root](src/algorithms/math/square-root) - Newton&#039;s method
  * `A` [Liu Hui π Algorithm](src/algorithms/math/liu-hui) - approximate π calculations based on N-gons
  * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - decompose a function of time (a signal) into the frequencies that make it up
* **Sets**
  * `B` [Cartesian Product](src/algorithms/sets/cartesian-product) - product of multiple sets
  * `B` [Fisher–Yates Shuffle](src/algorithms/sets/fisher-yates) - random permutation of a finite sequence
  * `A` [Power Set](src/algorithms/sets/power-set) - all subsets of a set (bitwise, backtracking, and cascading solutions)
  * `A` [Permutations](src/algorithms/sets/permutations) (with and without repetitions)
  * `A` [Combinations](src/algorithms/sets/combinations) (with and without repetitions)
  * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS)
  * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence)
  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence) (SCS)
  * `A` [Knapsack Problem](src/algorithms/sets/knapsack-problem) - &quot;0/1&quot; and &quot;Unbound&quot; ones
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray) - &quot;Brute Force&quot; and &quot;Dynamic Programming&quot; (Kadane&#039;s) versions
  * `A` [Combination Sum](src/algorithms/sets/combination-sum) - find all combinations that form specific sum
* **Strings**
  * `B` [Hamming Distance](src/algorithms/string/hamming-distance) - number of positions at which the symbols are different
  * `B` [Palindrome](src/algorithms/string/palindrome) - check if the string is the same in reverse
  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - minimum edit distance between two sequences
  * `A` [Knuth–Morris–Pratt Algorithm](src/algorithms/string/knuth-morris-pratt) (KMP Algorithm) - substring search (pattern matching)
  * `A` [Z Algorithm](src/algorithms/string/z-algorithm) - substring search (pattern matching)
  * `A` [Rabin Karp Algorithm](src/algorithms/string/rabin-karp) - substring search
  * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring)
  * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching)
* **Searches**
  * `B` [Linear Search](src/algorithms/search/linear-search)
  * `B` [Jump Search](src/algorithms/search/jump-search) (or Block Search) - search in sorted array
  * `B` [Binary Search](src/algorithms/search/binary-search) - search in sorted array
  * `B` [Interpolation Search](src/algorithms/search/interpolation-search) - search in uniformly distributed sorted array
* **Sorting**
  * `B` [Bubble Sort](src/algorithms/sorting/bubble-sort)
  * `B` [Selection Sort](src/algorithms/sorting/selection-sort)
  * `B` [Insertion Sort](src/algorithms/sorting/insertion-sort)
  * `B` [Heap Sort](src/algorithms/sorting/heap-sort)
  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)
  * `B` [Quicksort](src/algorithms/sorting/quick-sort) - in-place and non-in-place implementations
  * `B` [Shellsort](src/algorithms/sorting/shell-sort)
  * `B` [Counting Sort](src/algorithms/sorting/counting-sort)
  * `B` [Radix Sort](src/algorithms/sorting/radix-sort)
  * `B` [Bucket Sort](src/algorithms/sorting/bucket-sort)
* **Linked Lists**
  * `B` [Straight Traversal](src/algorithms/linked-list/traversal)
  * `B` [Reverse Traversal](src/algorithms/linked-list/reverse-traversal)
* **Trees**
  * `B` [Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)
  * `B` [Breadth-First Search](src/algorithms/tree/breadth-first-search) (BFS)
* **Graphs**
  * `B` [Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)
  * `B` [Breadth-First Search](src/algorithms/graph/breadth-first-search) (BFS)
  * `B` [Kruskal’s Algorithm](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - finding the shortest paths to all graph vertices from single vertex
  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - finding the shortest paths to all graph vertices from single vertex
  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - find the shortest paths between all pairs of vertices
  * `A` [Detect Cycle](src/algorithms/graph/detect-cycle) - for both directed and undirected graphs (DFS and Disjoint Set based versions)
  * `A` [Prim’s Algorithm](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Topological Sorting](src/algorithms/graph/topological-sorting) - DFS method
  * `A` [Articulation Points](src/algorithms/graph/articulation-points) - Tarjan&#039;s algorithm (DFS based)
  * `A` [Bridges](src/algorithms/graph/bridges) - DFS based algorithm
  * `A` [Eulerian Path and Eulerian Circuit](src/algorithms/graph/eulerian-path) - Fleury&#039;s algorithm - Visit every edge exactly once
  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once
  * `A` [Strongly Connected Components](src/algorithms/graph/strongly-connected-components) - Kosaraju&#039;s algorithm
  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city
* **Cryptography**
  * `B` [Polynomial Hash](src/algorithms/cryptography/polynomial-hash) - rolling hash function based on polynomial
  * `B` [Rail Fence Cipher](src/algorithms/cryptography/rail-fence-cipher) - a transposition cipher algorithm for encoding messages
  * `B` [Caesar Cipher](src/algorithms/cryptography/caesar-cipher) - simple substitution cipher
  * `B` [Hill Cipher](src/algorithms/cryptography/hill-cipher) - substitution cipher based on linear algebra
* **Machine Learning**
  * `B` [NanoNeuron](https://github.com/trekhleb/nano-neuron) - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)
  * `B` [k-NN](src/algorithms/ml/knn) - k-nearest neighbors classification algorithm
  * `B` [k-Means](src/algorithms/ml/k-means) - k-Means clustering algorithm
* **Image Processing**
  * `B` [Seam Carving](src/algorithms/image-processing/seam-carving) - content-aware image resizing algorithm
* **Statistics**
  * `B` [Weighted Random](src/algorithms/statistics/weighted-random) - select the random item from the list based on items&#039; weights
* **Evolutionary algorithms**
  * `A` [Genetic algorithm](https://github.com/trekhleb/self-parking-car-evolution) - example of how the genetic algorithm may be applied for training the self-parking cars
* **Uncategorized**
  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)
  * `B` [Square Matrix Rotation](src/algorithms/uncategorized/square-matrix-rotation) - in-place algorithm
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game) - backtracking, dynamic programming (top-down + bottom-up) and greedy examples
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths) - backtracking, dynamic programming and Pascal&#039;s Triangle based examples
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem (dynamic programming and brute force versions)
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach to the top (4 solutions)
  * `B` [Best Time To Buy Sell Stocks](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - divide and conquer and one-pass examples
  * `B` [Valid Parentheses](src/algorithms/stack/valid-parentheses) - check if a string has valid parentheses (using stack)
  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)
  * `A` [Knight&#039;s Tour](src/algorithms/uncategorized/knight-tour)

### Algorithms by Paradigm

An algorithmic paradigm is a generic method or approach which underlies the design of a class
of algorithms. It is an abstraction higher than the notion of an algorithm, just as an
algorithm is an abstraction higher than a computer program.

* **Brute Force** - look at all the possibilities and selects the best solution
  * `B` [Linear Search](src/algorithms/search/linear-search)
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach the top
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city
  * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - decompose a function of time (a signal) into the frequencies that make it up
* **Greedy** - choose the best option at the current time, without any consideration for the future
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `A` [Unbound Knapsack Problem](src/algorithms/sets/knapsack-problem)
  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - finding the shortest path to all graph vertices
  * `A` [Prim’s Algorithm](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Kruskal’s Algorithm](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph
* **Divide and Conquer** - divide the problem into smaller parts and then solve those parts
  * `B` [Binary Search](src/algorithms/search/binary-search)
  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)
  * `B` [Pascal&#039;s Triangle](src/algorithms/math/pascal-triangle)
  * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)
  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)
  * `B` [Quicksort](src/algorithms/sorting/quick-sort)
  * `B` [Tree Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)
  * `B` [Graph Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)
  * `B` [Matrices](src/algorithms/math/matrix) - generating and traversing the matrices of different shapes
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Fast Powering](src/algorithms/math/fast-powering)
  * `B` [Best Time To Buy Sell Stocks](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - divide and conquer and one-pass examples
  * `A` [Permutations](src/algorithms/sets/permutations) (with and without repetitions)
  * `A` [Combinations](src/algorithms/sets/combinations) (with and without repetitions)
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
* **Dynamic Programming** - build up a solution using previously found sub-solutions
  * `B` [Fibonacci Number](src/algorithms/math/fibonacci)
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach the top
  * `B` [Seam Carving](src/algorithms/image-processing/seam-carving) - content-aware image resizing algorithm
  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - minimum edit distance between two sequences
  * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS)
  * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring)
  * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence)
  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence)
  * `A` [0/1 Knapsack Problem](src/algorithms/sets/knapsack-problem)
  * `A` [Integer Partition](src/algorithms/math/integer-partition)
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - finding the shortest path to all graph vertices
  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - find the shortest paths between all pairs of vertices
  * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching)
* **Backtracking** - similarly to brute force, try to generate all possible solutions, but each time you generate the next solution, you test
if it satisfies all conditions and only then continue generating subsequent solutions. Otherwise, backtrack and go on a
different path to finding a solution. Normally the DFS traversal of state-space is being used.
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)
  * `B` [Power Set](src/algorithms/sets/power-set) - all subsets of a set
  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once
  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)
  * `A` [Knight&#039;s Tour](src/algorithms/uncategorized/knight-tour)
  * `A` [Combination Sum](src/algorithms/sets/combination-sum) - find all combinations that form specific sum
* **Branch &amp; Bound** - remember the lowest-cost solution found at each stage of the backtracking
search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of
a least-cost solution to the problem in order to discard partial solutions with costs larger than the
lowest-cost solution found so far. Normally, BFS traversal in combination with DFS traversal of state-space
tree is being used.

## How to use this repository

**Install all dependencies**

```
npm install
```

**Run ESLint**

You may want to run it to check code quality.

```
npm run lint
```

**Run all tests**

```
npm test
```

**Run tests by name**

```
npm test -- &#039;LinkedList&#039;
```

**Troubleshooting**

If linting or testing is failing, try to delete the `node_modules` folder and re-install npm packages:

```
rm -rf ./node_modules
npm i
```

Also, make sure that you&#039;re using the correct Node version (`&gt;=16`). If you&#039;re using [nvm](https://github.com/nvm-sh/nvm) for Node version management you may run `nvm use` from the root folde

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[GoogleChrome/lighthouse]]></title>
            <link>https://github.com/GoogleChrome/lighthouse</link>
            <guid>https://github.com/GoogleChrome/lighthouse</guid>
            <pubDate>Sat, 18 Oct 2025 00:04:47 GMT</pubDate>
            <description><![CDATA[Automated auditing, performance metrics, and best practices for the web.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/GoogleChrome/lighthouse">GoogleChrome/lighthouse</a></h1>
            <p>Automated auditing, performance metrics, and best practices for the web.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 29,496</p>
            <p>Forks: 9,590</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[usebruno/bruno]]></title>
            <link>https://github.com/usebruno/bruno</link>
            <guid>https://github.com/usebruno/bruno</guid>
            <pubDate>Sat, 18 Oct 2025 00:04:46 GMT</pubDate>
            <description><![CDATA[Opensource IDE For Exploring and Testing API's (lightweight alternative to Postman/Insomnia)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/usebruno/bruno">usebruno/bruno</a></h1>
            <p>Opensource IDE For Exploring and Testing API's (lightweight alternative to Postman/Insomnia)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 37,607</p>
            <p>Forks: 1,905</p>
            <p>Stars today: 23 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[open-webui/open-webui]]></title>
            <link>https://github.com/open-webui/open-webui</link>
            <guid>https://github.com/open-webui/open-webui</guid>
            <pubDate>Sat, 18 Oct 2025 00:04:45 GMT</pubDate>
            <description><![CDATA[User-friendly AI Interface (Supports Ollama, OpenAI API, ...)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/open-webui/open-webui">open-webui/open-webui</a></h1>
            <p>User-friendly AI Interface (Supports Ollama, OpenAI API, ...)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 112,701</p>
            <p>Forks: 15,624</p>
            <p>Stars today: 101 stars today</p>
            <h2>README</h2><pre># Open WebUI 👋

![GitHub stars](https://img.shields.io/github/stars/open-webui/open-webui?style=social)
![GitHub forks](https://img.shields.io/github/forks/open-webui/open-webui?style=social)
![GitHub watchers](https://img.shields.io/github/watchers/open-webui/open-webui?style=social)
![GitHub repo size](https://img.shields.io/github/repo-size/open-webui/open-webui)
![GitHub language count](https://img.shields.io/github/languages/count/open-webui/open-webui)
![GitHub top language](https://img.shields.io/github/languages/top/open-webui/open-webui)
![GitHub last commit](https://img.shields.io/github/last-commit/open-webui/open-webui?color=red)
[![Discord](https://img.shields.io/badge/Discord-Open_WebUI-blue?logo=discord&amp;logoColor=white)](https://discord.gg/5rJgQTnV4s)
[![](https://img.shields.io/static/v1?label=Sponsor&amp;message=%E2%9D%A4&amp;logo=GitHub&amp;color=%23fe8e86)](https://github.com/sponsors/tjbck)

**Open WebUI is an [extensible](https://docs.openwebui.com/features/plugin/), feature-rich, and user-friendly self-hosted AI platform designed to operate entirely offline.** It supports various LLM runners like **Ollama** and **OpenAI-compatible APIs**, with **built-in inference engine** for RAG, making it a **powerful AI deployment solution**.

Passionate about open-source AI? [Join our team →](https://careers.openwebui.com/)

![Open WebUI Demo](./demo.gif)

&gt; [!TIP]  
&gt; **Looking for an [Enterprise Plan](https://docs.openwebui.com/enterprise)?** – **[Speak with Our Sales Team Today!](mailto:sales@openwebui.com)**
&gt;
&gt; Get **enhanced capabilities**, including **custom theming and branding**, **Service Level Agreement (SLA) support**, **Long-Term Support (LTS) versions**, and **more!**

For more information, be sure to check out our [Open WebUI Documentation](https://docs.openwebui.com/).

## Key Features of Open WebUI ⭐

- 🚀 **Effortless Setup**: Install seamlessly using Docker or Kubernetes (kubectl, kustomize or helm) for a hassle-free experience with support for both `:ollama` and `:cuda` tagged images.

- 🤝 **Ollama/OpenAI API Integration**: Effortlessly integrate OpenAI-compatible APIs for versatile conversations alongside Ollama models. Customize the OpenAI API URL to link with **LMStudio, GroqCloud, Mistral, OpenRouter, and more**.

- 🛡️ **Granular Permissions and User Groups**: By allowing administrators to create detailed user roles and permissions, we ensure a secure user environment. This granularity not only enhances security but also allows for customized user experiences, fostering a sense of ownership and responsibility amongst users.

- 🔄 **SCIM 2.0 Support**: Enterprise-grade user and group provisioning through SCIM 2.0 protocol, enabling seamless integration with identity providers like Okta, Azure AD, and Google Workspace for automated user lifecycle management.

- 📱 **Responsive Design**: Enjoy a seamless experience across Desktop PC, Laptop, and Mobile devices.

- 📱 **Progressive Web App (PWA) for Mobile**: Enjoy a native app-like experience on your mobile device with our PWA, providing offline access on localhost and a seamless user interface.

- ✒️🔢 **Full Markdown and LaTeX Support**: Elevate your LLM experience with comprehensive Markdown and LaTeX capabilities for enriched interaction.

- 🎤📹 **Hands-Free Voice/Video Call**: Experience seamless communication with integrated hands-free voice and video call features, allowing for a more dynamic and interactive chat environment.

- 🛠️ **Model Builder**: Easily create Ollama models via the Web UI. Create and add custom characters/agents, customize chat elements, and import models effortlessly through [Open WebUI Community](https://openwebui.com/) integration.

- 🐍 **Native Python Function Calling Tool**: Enhance your LLMs with built-in code editor support in the tools workspace. Bring Your Own Function (BYOF) by simply adding your pure Python functions, enabling seamless integration with LLMs.

- 📚 **Local RAG Integration**: Dive into the future of chat interactions with groundbreaking Retrieval Augmented Generation (RAG) support. This feature seamlessly integrates document interactions into your chat experience. You can load documents directly into the chat or add files to your document library, effortlessly accessing them using the `#` command before a query.

- 🔍 **Web Search for RAG**: Perform web searches using providers like `SearXNG`, `Google PSE`, `Brave Search`, `serpstack`, `serper`, `Serply`, `DuckDuckGo`, `TavilySearch`, `SearchApi` and `Bing` and inject the results directly into your chat experience.

- 🌐 **Web Browsing Capability**: Seamlessly integrate websites into your chat experience using the `#` command followed by a URL. This feature allows you to incorporate web content directly into your conversations, enhancing the richness and depth of your interactions.

- 🎨 **Image Generation Integration**: Seamlessly incorporate image generation capabilities using options such as AUTOMATIC1111 API or ComfyUI (local), and OpenAI&#039;s DALL-E (external), enriching your chat experience with dynamic visual content.

- ⚙️ **Many Models Conversations**: Effortlessly engage with various models simultaneously, harnessing their unique strengths for optimal responses. Enhance your experience by leveraging a diverse set of models in parallel.

- 🔐 **Role-Based Access Control (RBAC)**: Ensure secure access with restricted permissions; only authorized individuals can access your Ollama, and exclusive model creation/pulling rights are reserved for administrators.

- 🌐🌍 **Multilingual Support**: Experience Open WebUI in your preferred language with our internationalization (i18n) support. Join us in expanding our supported languages! We&#039;re actively seeking contributors!

- 🧩 **Pipelines, Open WebUI Plugin Support**: Seamlessly integrate custom logic and Python libraries into Open WebUI using [Pipelines Plugin Framework](https://github.com/open-webui/pipelines). Launch your Pipelines instance, set the OpenAI URL to the Pipelines URL, and explore endless possibilities. [Examples](https://github.com/open-webui/pipelines/tree/main/examples) include **Function Calling**, User **Rate Limiting** to control access, **Usage Monitoring** with tools like Langfuse, **Live Translation with LibreTranslate** for multilingual support, **Toxic Message Filtering** and much more.

- 🌟 **Continuous Updates**: We are committed to improving Open WebUI with regular updates, fixes, and new features.

Want to learn more about Open WebUI&#039;s features? Check out our [Open WebUI documentation](https://docs.openwebui.com/features) for a comprehensive overview!

## Sponsors 🙌

#### Emerald

&lt;table&gt;
  &lt;!-- &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://n8n.io/&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/n8n.png&quot; alt=&quot;n8n&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt; • Does your interface have a backend yet?&lt;br&gt;Try &lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt; --&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;utm_medium=paid-ad-placement&amp;utm_campaign=OpenWebUI-Docs&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/tailscale.png&quot; alt=&quot;Tailscale&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;utm_medium=paid-ad-placement&amp;utm_campaign=OpenWebUI-Docs&quot;&gt;Tailscale&lt;/a&gt; • Connect self-hosted AI to any device with Tailscale
    &lt;/td&gt;
  &lt;/tr&gt;
   &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://warp.dev/open-webui&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/warp.png&quot; alt=&quot;Warp&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://warp.dev/open-webui&quot;&gt;Warp&lt;/a&gt; • The intelligent terminal for developers
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

---

We are incredibly grateful for the generous support of our sponsors. Their contributions help us to maintain and improve our project, ensuring we can continue to deliver quality work to our community. Thank you!

## How to Install 🚀

### Installation via Python pip 🐍

Open WebUI can be installed using pip, the Python package installer. Before proceeding, ensure you&#039;re using **Python 3.11** to avoid compatibility issues.

1. **Install Open WebUI**:
   Open your terminal and run the following command to install Open WebUI:

   ```bash
   pip install open-webui
   ```

2. **Running Open WebUI**:
   After installation, you can start Open WebUI by executing:

   ```bash
   open-webui serve
   ```

This will start the Open WebUI server, which you can access at [http://localhost:8080](http://localhost:8080)

### Quick Start with Docker 🐳

&gt; [!NOTE]  
&gt; Please note that for certain Docker environments, additional configurations might be needed. If you encounter any connection issues, our detailed guide on [Open WebUI Documentation](https://docs.openwebui.com/) is ready to assist you.

&gt; [!WARNING]
&gt; When using Docker to install Open WebUI, make sure to include the `-v open-webui:/app/backend/data` in your Docker command. This step is crucial as it ensures your database is properly mounted and prevents any loss of data.

&gt; [!TIP]  
&gt; If you wish to utilize Open WebUI with Ollama included or CUDA acceleration, we recommend utilizing our official images tagged with either `:cuda` or `:ollama`. To enable CUDA, you must install the [Nvidia CUDA container toolkit](https://docs.nvidia.com/dgx/nvidia-container-runtime-upgrade/) on your Linux/WSL system.

### Installation with Default Configuration

- **If Ollama is on your computer**, use this command:

  ```bash
  docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **If Ollama is on a Different Server**, use this command:

  To connect to Ollama on another server, change the `OLLAMA_BASE_URL` to the server&#039;s URL:

  ```bash
  docker run -d -p 3000:8080 -e OLLAMA_BASE_URL=https://example.com -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **To run Open WebUI with Nvidia GPU support**, use this command:

  ```bash
  docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda
  ```

### Installation for OpenAI API Usage Only

- **If you&#039;re only using OpenAI API**, use this command:

  ```bash
  docker run -d -p 3000:8080 -e OPENAI_API_KEY=your_secret_key -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

### Installing Open WebUI with Bundled Ollama Support

This installation method uses a single container image that bundles Open WebUI with Ollama, allowing for a streamlined setup via a single command. Choose the appropriate command based on your hardware setup:

- **With GPU Support**:
  Utilize GPU resources by running the following command:

  ```bash
  docker run -d -p 3000:8080 --gpus=all -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

- **For CPU Only**:
  If you&#039;re not using a GPU, use this command instead:

  ```bash
  docker run -d -p 3000:8080 -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

Both commands facilitate a built-in, hassle-free installation of both Open WebUI and Ollama, ensuring that you can get everything up and running swiftly.

After installation, you can access Open WebUI at [http://localhost:3000](http://localhost:3000). Enjoy! 😄

### Other Installation Methods

We offer various installation alternatives, including non-Docker native installation methods, Docker Compose, Kustomize, and Helm. Visit our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/) or join our [Discord community](https://discord.gg/5rJgQTnV4s) for comprehensive guidance.

Look at the [Local Development Guide](https://docs.openwebui.com/getting-started/advanced-topics/development) for instructions on setting up a local development environment.

### Troubleshooting

Encountering connection issues? Our [Open WebUI Documentation](https://docs.openwebui.com/troubleshooting/) has got you covered. For further assistance and to join our vibrant community, visit the [Open WebUI Discord](https://discord.gg/5rJgQTnV4s).

#### Open WebUI: Server Connection Error

If you&#039;re experiencing connection issues, it’s often due to the WebUI docker container not being able to reach the Ollama server at 127.0.0.1:11434 (host.docker.internal:11434) inside the container . Use the `--network=host` flag in your docker command to resolve this. Note that the port changes from 3000 to 8080, resulting in the link: `http://localhost:8080`.

**Example Docker Command**:

```bash
docker run -d --network=host -v open-webui:/app/backend/data -e OLLAMA_BASE_URL=http://127.0.0.1:11434 --name open-webui --restart always ghcr.io/open-webui/open-webui:main
```

### Keeping Your Docker Installation Up-to-Date

In case you want to update your local Docker installation to the latest version, you can do it with [Watchtower](https://containrrr.dev/watchtower/):

```bash
docker run --rm --volume /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --run-once open-webui
```

In the last part of the command, replace `open-webui` with your container name if it is different.

Check our Updating Guide available in our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/updating).

### Using the Dev Branch 🌙

&gt; [!WARNING]
&gt; The `:dev` branch contains the latest unstable features and changes. Use it at your own risk as it may have bugs or incomplete features.

If you want to try out the latest bleeding-edge features and are okay with occasional instability, you can use the `:dev` tag like this:

```bash
docker run -d -p 3000:8080 -v open-webui:/app/backend/data --name open-webui --add-host=host.docker.internal:host-gateway --restart always ghcr.io/open-webui/open-webui:dev
```

### Offline Mode

If you are running Open WebUI in an offline environment, you can set the `HF_HUB_OFFLINE` environment variable to `1` to prevent attempts to download models from the internet.

```bash
export HF_HUB_OFFLINE=1
```

## What&#039;s Next? 🌟

Discover upcoming features on our roadmap in the [Open WebUI Documentation](https://docs.openwebui.com/roadmap/).

## License 📜

This project contains code under multiple licenses. The current codebase includes components licensed under the Open WebUI License with an additional requirement to preserve the &quot;Open WebUI&quot; branding, as well as prior contributions under their respective original licenses. For a detailed record of license changes and the applicable terms for each section of the code, please refer to [LICENSE_HISTORY](./LICENSE_HISTORY). For complete and updated licensing details, please see the [LICENSE](./LICENSE) and [LICENSE_HISTORY](./LICENSE_HISTORY) files.

## Support 💬

If you have any questions, suggestions, or need assistance, please open an issue or join our
[Open WebUI Discord community](https://discord.gg/5rJgQTnV4s) to connect with us! 🤝

## Star History

&lt;a href=&quot;https://star-history.com/#open-webui/open-webui&amp;Date&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&amp;theme=dark&quot; /&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
    &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

---

Created by [Timothy Jaeryang Baek](https://github.com/tjbck) - Let&#039;s make Open WebUI even more amazing together! 💪
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[ai-shifu/ChatALL]]></title>
            <link>https://github.com/ai-shifu/ChatALL</link>
            <guid>https://github.com/ai-shifu/ChatALL</guid>
            <pubDate>Sat, 18 Oct 2025 00:04:44 GMT</pubDate>
            <description><![CDATA[Concurrently chat with ChatGPT, Bing Chat, Bard, Alpaca, Vicuna, Claude, ChatGLM, MOSS, 讯飞星火, 文心一言 and more, discover the best answers]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ai-shifu/ChatALL">ai-shifu/ChatALL</a></h1>
            <p>Concurrently chat with ChatGPT, Bing Chat, Bard, Alpaca, Vicuna, Claude, ChatGLM, MOSS, 讯飞星火, 文心一言 and more, discover the best answers</p>
            <p>Language: JavaScript</p>
            <p>Stars: 16,050</p>
            <p>Forks: 1,692</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;src/assets/logo-cover.png&quot; width=256&gt;&lt;/img&gt;
  &lt;p&gt;&lt;strong&gt;Chat with ALL AI Bots Concurrently, Discover the Best&lt;/strong&gt;&lt;/p&gt;

[Deutsch](README_DE-DE.md) | English | [Español](README_ES-ES.md) | [Français](README_FR-FR.md) | [Italian](README_IT-IT.md) | [日本語](README_JA-JP.md) | [한국어](README_KO-KR.md) | [Русский](README_RU-RU.md) | [Tiếng Việt](README_VI-VN.md) | [简体中文](README_ZH-CN.md)

[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/ai-shifu/ChatALL)

&lt;/div&gt;

## Screenshots

![Screenshot](screenshots/screenshot-1.png?raw=true)

## Features

Large Language Models (LLMs) based AI bots are amazing. However, their behavior can be random and different bots excel at different tasks. If you want the best experience, don&#039;t try them one by one. ChatALL (Chinese name: 齐叨) can send prompt to several AI bots concurrently, help you to discover the best results. All you need to do is [download, install](https://github.com/ai-shifu/ChatALL/releases) and ask.

### Is this you?

Typical users of ChatALL are:

- 🤠**Gurus of LLMs**, who want to find the best answers or creations from LLMs.
- 🤓**Researchers of LLMs**, who want to intuitively compare the strengths and weaknesses of various LLMs in different fields.
- 😎**Developers of LLM applications**, who want to quickly debug prompts and find the best-performing foundation models.

### Supported bots

| AI Bots                                                                        | Web Access  | API         | Notes                                       |
| ------------------------------------------------------------------------------ | ----------- | ----------- | ------------------------------------------- |
| [360 AI Brain](https://ai.360.cn/)                                             | Yes         | No API      |                                             |
| [Baidu ERNIE](https://yiyan.baidu.com/)                                        | No          | Yes         |                                             |
| [Character.AI](https://character.ai/)                                          | Yes         | No API      |                                             |
| [ChatGLM2 6B &amp; 130B](https://chatglm.cn/)                                      | Yes         | No API      | No Login required                           |
| [ChatGPT](https://chatgpt.com)                                             | Yes         | Yes         | Web Browsing, Azure OpenAI service included |
| [Claude](https://www.anthropic.com/claude)                                     | Yes         | Yes         |                                             |
| [Code Llama](https://ai.meta.com/blog/code-llama-large-language-model-coding/) | Yes         | No API      |                                             |
| [Cohere Aya 23](https://cohere.com/blog/aya23)                                 | No          | Yes         |                                             |
| [Cohere Command R Models](https://cohere.com/command)                          | No          | Yes         |                                             |
| [Copilot](https://copilot.microsoft.com/)                                      | Yes         | No API      |                                             |
| [Dedao Learning Assistant](https://ai.dedao.cn/)                               | Coming soon | No API      |                                             |
| [Falcon 180B](https://huggingface.co/tiiuae/falcon-180B-chat)                  | Yes         | No API      |                                             |
| [Gemini](https://gemini.google.com/)                                           | Yes         | Yes         |                                             |
| [Gemma 2B &amp; 7B](https://blog.google/technology/developers/gemma-open-models/)  | Yes         | No API      |                                             |
| [Gradio](https://gradio.app/)                                                  | Yes         | No API      | For Hugging Face space/self-deployed models |
| [Groq Cloud](https://console.groq.com/docs/models)                             | No          | Yes         |                                             |
| [HuggingChat](https://huggingface.co/chat/)                                    | Yes         | No API      |                                             |
| [iFLYTEK SPARK](http://xinghuo.xfyun.cn/)                                      | Yes         | Coming soon |                                             |
| [Kimi](https://kimi.moonshot.cn/               )                               | Yes         | No API      |                                             |
| [Llama 2 13B &amp; 70B](https://ai.meta.com/llama/)                                | Yes         | No API      |                                             |
| [MOSS](https://moss.fastnlp.top/)                                              | Yes         | No API      |                                             |
| [Perplexity](https://www.perplexity.ai/)                                       | Yes         | No API      |                                             |
| [Phind](https://www.phind.com/)                                                | Yes         | No API      |                                             |
| [Pi](https://pi.ai)                                                            | Yes         | No API      |                                             |
| [Poe](https://poe.com/)                                                        | Yes         | Coming soon |                                             |
| [SkyWork](https://neice.tiangong.cn/)                                          | Yes         | Coming soon |                                             |
| [Tongyi Qianwen](http://tongyi.aliyun.com/)                                    | Yes         | Coming soon |                                             |
| [Vicuna 13B &amp; 33B](https://lmsys.org/blog/2023-03-30-vicuna/)                  | Yes         | No API      | No Login required                           |
| [WizardLM 70B](https://github.com/nlpxucan/WizardLM)                           | Yes         | No API      |                                             |
| [xAI Grok](https://x.ai)                                                       | No          | Yes         |                                             |
| [YouChat](https://you.com/)                                                    | Yes         | No API      |                                             |
| [You](https://you.com/)                                                        | Yes         | No API      |                                             |
| [Zephyr](https://huggingface.co/spaces/HuggingFaceH4/zephyr-chat)              | Yes         | No API      |                                             |

More is coming. Upvote your favorite bots in [these issues](https://github.com/ai-shifu/ChatALL/labels/more%20LLMs).

### Note on Web-connected Bot Reliability

Web-connected AI bots (those marked with &quot;Web Access&quot;) are inherently less reliable and frequently face stability issues, as service providers regularly update their web interfaces and security measures. These web-based connections rely on reverse engineering and are difficult to maintain, often breaking unexpectedly. For a dependable experience, we strongly recommend using bots that offer API access whenever possible.

### Other features

- Quick-prompt mode: send the next prompt without waiting for the previous request to complete
- Save chat history locally, protect your privacy
- Highlight the response you like, delete the bad
- Enable/disable any bots at any time
- Switch between one, two, or three-column view
- Auto update to the latest version
- Dark mode (contributed by @tanchekwei)
- Short keys. Press &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;/&lt;/kbd&gt; to know all of them (contributed by @tanchekwei)
- Multiple chats (contributed by @tanchekwei)
- Proxy setting (contributed by @msaong)
- Prompt management (contributed by @tanchekwei)
- Supports multiple languages (Chinese, English, German, French, Russian, Vietnamese, Korean, Japanese, Spanish, Italian)
- Supports Windows, macOS and Linux

Planned features:

You are welcome to contribute to these features.

- [ ] Deploy front-end to GitHub Pages

## Privacy

All chat history, settings and login data are saved locally on your computer.

ChatALL collects anonymous usage data to help us improve the product. Including:

- Which AI bots are prompted and how long the prompt is. Not including the prompt content.
- How long the response is, and which response is deleted/highlighted. Not including the response content.

## Prerequisites

ChatALL is a client, not a proxy. Therefore, you must:

1. Have working accounts and/or API tokens for the bots.
2. Have reliable network connections to the bots.

## Download / Install

Download from https://github.com/ai-shifu/ChatALL/releases

### On Windows

Just download the \*-win.exe file and proceed with the setup.

### On macOS

For Apple Silicon Mac (M1, M2 CPU), download the \*-mac-arm64.dmg file.

For other Macs, download \*-mac-x64.dmg file.

If you are using [Homebrew](https://brew.sh/), you can also install it with:

```bash
brew install --cask chatall
```

### On Linux

Debian-based Distributions: Download the .deb file, double click it and install the software.
Arch-based Distributions: You can clone ChatALL from the AUR [here](https://aur.archlinux.org/packages/chatall-bin). You can install it manually or using an AUR helper like yay or paru.
Other Distributions: Download the .AppImage file, make it executable, and enjoy the click-to-run experience. You can also use [AppimageLauncher](https://github.com/TheAssassin/AppImageLauncher).

## Troubleshooting

If you encounter any problems while using ChatALL, you can try the following methods to resolve them:

1. **Refresh** - press &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;R&lt;/kbd&gt; or &lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;R&lt;/kbd&gt;.
2. **Restart** - exit ChatALL and run it again.
3. **Re-login** - click the settings button in the upper right corner, then click the corresponding login/logout link to relogin the website.
4. **Create a new chat** - click the `New Chat` button and send prompt again.

If none of the above methods work, you can try **resetting ChatALL**. Note that this will delete all your settings and message history.

You can reset ChatALL by deleting the following directories:

- Windows: `C:\Users\&lt;user&gt;\AppData\Roaming\chatall\`
- Linux: `/home/&lt;user&gt;/.config/chatall/`
- macOS: `/Users/&lt;user&gt;/Library/Application Support/chatall/`

If the problem persists, please [submit an issue](https://github.com/ai-shifu/ChatALL/issues).

## For developers

### Contribute a Bot

[The guide](https://github.com/ai-shifu/ChatALL/wiki/%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84-AI-%E5%AF%B9%E8%AF%9D%E6%9C%BA%E5%99%A8%E4%BA%BA) may help you.

### Run

```bash
npm install
npm run electron:serve
```

### Build

Build for your current platform:

```bash
npm run electron:build
```

Build for all platforms:

```bash
npm run electron:build -- -wml --x64 --arm64
```

## Credits

### Contributors

&lt;a href=&quot;https://github.com/ai-shifu/ChatALL/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=ai-shifu/ChatALL&quot; /&gt;
&lt;/a&gt;

### Others

- GPT-4 contributed much of the code
- ChatGPT, Copilot and Google provide many solutions (ranked in order)
- Inspired by [ChatHub](https://github.com/chathub-dev/chathub). Respect!

## Sponsor

If you like this project, please consider:

[![ko-fi](https://ko-fi.com/img/githubbutton_sm.svg)](https://ko-fi.com/F1F8KZJGJ)</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[projectdiscovery/nuclei-templates]]></title>
            <link>https://github.com/projectdiscovery/nuclei-templates</link>
            <guid>https://github.com/projectdiscovery/nuclei-templates</guid>
            <pubDate>Sat, 18 Oct 2025 00:04:43 GMT</pubDate>
            <description><![CDATA[Community curated list of templates for the nuclei engine to find security vulnerabilities.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/projectdiscovery/nuclei-templates">projectdiscovery/nuclei-templates</a></h1>
            <p>Community curated list of templates for the nuclei engine to find security vulnerabilities.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 11,043</p>
            <p>Forks: 3,084</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>

&lt;h1 align=&quot;center&quot;&gt;
Nuclei Templates
&lt;/h1&gt;
&lt;h4 align=&quot;center&quot;&gt;Community curated list of templates for the nuclei engine to find security vulnerabilities in applications.&lt;/h4&gt;


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/projectdiscovery/nuclei-templates&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/pdnuclei&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/pdnuclei.svg?logo=twitter&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://discord.gg/projectdiscovery&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/695645237418131507.svg?logo=discord&quot;&gt;&lt;/a&gt;
&lt;/p&gt;
      
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://nuclei.projectdiscovery.io/templating-guide/&quot;&gt;Documentation&lt;/a&gt; •
  &lt;a href=&quot;#-contributions&quot;&gt;Contributions&lt;/a&gt; •
  &lt;a href=&quot;#-discussion&quot;&gt;Discussion&lt;/a&gt; •
  &lt;a href=&quot;#-community&quot;&gt;Community&lt;/a&gt; •
  &lt;a href=&quot;https://nuclei.projectdiscovery.io/faq/templates/&quot;&gt;FAQs&lt;/a&gt; •
  &lt;a href=&quot;https://discord.gg/projectdiscovery&quot;&gt;Join Discord&lt;/a&gt;
&lt;/p&gt;

----

Templates are the core of the [nuclei scanner](https://github.com/projectdiscovery/nuclei) which powers the actual scanning engine.
This repository stores and houses various templates for the scanner provided by our team, as well as contributed by the community.
We hope that you also contribute by sending templates via **pull requests** or [Github issues](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=submit-template.md&amp;title=%5Bnuclei-template%5D+) to grow the list.


## Nuclei Templates overview


An overview of the nuclei template project, including statistics on unique tags, author, directory, severity, and type of templates. The table below contains the top ten statistics for each matrix; an expanded version of this is [available here](TEMPLATES-STATS.md), and also available in [JSON](TEMPLATES-STATS.json) format for integration.

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt; 

## Nuclei Templates Top 10 statistics

|    TAG    | COUNT |    AUTHOR     | COUNT | DIRECTORY  | COUNT | SEVERITY | COUNT | TYPE | COUNT |
|-----------|-------|---------------|-------|------------|-------|----------|-------|------|-------|
| cve       |  3288 | dhiyaneshdk   |  1882 | http       |  8967 | info     |  4190 | file |   435 |
| panel     |  1342 | daffainfo     |   868 | cloud      |   657 | high     |  2446 | dns  |    26 |
| xss       |  1257 | princechaddha |   854 | file       |   435 | medium   |  2379 |      |       |
| wordpress |  1181 | dwisiswant0   |   806 | dast       |   255 | critical |  1425 |      |       |
| exposure  |  1107 | ritikchaddha  |   649 | workflows  |   202 | low      |   318 |      |       |
| wp-plugin |  1032 | pussycat0x    |   532 | code       |   198 | unknown  |    56 |      |       |
| osint     |   841 | pikpikcu      |   352 | network    |   145 |          |       |      |       |
| tech      |   803 | pdteam        |   310 | javascript |    71 |          |       |      |       |
| rce       |   786 | pdresearch    |   269 | ssl        |    38 |          |       |      |       |
| lfi       |   777 | iamnoooob     |   257 | dns        |    23 |          |       |      |       |

**848 directories, 11344 files**.

&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

📖 Documentation
-----

Please navigate to https://nuclei.projectdiscovery.io for detailed documentation to **build** new or your own **custom** templates.
We have also added a set of templates to help you understand how things work.

💪 Contributions
-----

Nuclei-templates is powered by major contributions from the community.
[Template contributions ](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=submit-template.md&amp;title=%5Bnuclei-template%5D+), [Feature Requests](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=feature_request.md&amp;title=%5BFeature%5D+) and [Bug Reports](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=bug_report.md&amp;title=%5BBug%5D+) are more than welcome.

![Alt](https://repobeats.axiom.co/api/embed/55ee65543bb9a0f9c797626c4e66d472a517d17c.svg &quot;Repobeats analytics image&quot;)

💬 Discussion
-----

Have questions / doubts / ideas to discuss?
Feel free to open a discussion on [Github discussions](https://github.com/projectdiscovery/nuclei-templates/discussions) board.

👨‍💻 Community
-----

You are welcome to join the active [Discord Community](https://discord.gg/projectdiscovery) to discuss directly with project maintainers and share things with others around security and automation.
Additionally, you may follow us on [Twitter](https://twitter.com/pdnuclei) to be updated on all the things about Nuclei.


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=projectdiscovery/nuclei-templates&amp;max=300&quot;&gt;
&lt;/a&gt;
&lt;/p&gt;


Thanks again for your contribution and keeping this community vibrant. :heart:
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[parallax/jsPDF]]></title>
            <link>https://github.com/parallax/jsPDF</link>
            <guid>https://github.com/parallax/jsPDF</guid>
            <pubDate>Sat, 18 Oct 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[Client-side JavaScript PDF generation for everyone.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/parallax/jsPDF">parallax/jsPDF</a></h1>
            <p>Client-side JavaScript PDF generation for everyone.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 30,689</p>
            <p>Forks: 4,756</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre># ![jsPDF](https://parall.ax/parallax-2016/img/svg/jspdf-logo.svg)

[![Continous Integration](https://github.com/MrRio/jsPDF/actions/workflows/continuous-integration.yml/badge.svg)](https://github.com/MrRio/jsPDF/actions/workflows/continuous-integration.yml?query=branch%3Amaster)
[![Code Climate](https://codeclimate.com/repos/57f943855cdc43705e00592f/badges/2665cddeba042dc5191f/gpa.svg)](https://codeclimate.com/repos/57f943855cdc43705e00592f/feed)
[![Test Coverage](https://codeclimate.com/repos/57f943855cdc43705e00592f/badges/2665cddeba042dc5191f/coverage.svg)](https://codeclimate.com/repos/57f943855cdc43705e00592f/coverage)
[![GitHub license](https://img.shields.io/github/license/MrRio/jsPDF.svg)](https://github.com/MrRio/jsPDF/blob/master/LICENSE)
[![Total alerts](https://img.shields.io/lgtm/alerts/g/MrRio/jsPDF.svg?logo=lgtm&amp;logoWidth=18)](https://lgtm.com/projects/g/MrRio/jsPDF/alerts/)
[![Language grade: JavaScript](https://img.shields.io/lgtm/grade/javascript/g/MrRio/jsPDF.svg?logo=lgtm&amp;logoWidth=18)](https://lgtm.com/projects/g/MrRio/jsPDF/context:javascript)
[![Gitpod ready-to-code](https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod)](https://gitpod.io/from-referrer/)

**A library to generate PDFs in JavaScript.**

You can [catch me on twitter](http://twitter.com/MrRio): [@MrRio](http://twitter.com/MrRio) or head over to [my company&#039;s website](http://parall.ax) for consultancy.

jsPDF is now co-maintained by [yWorks - the diagramming experts](https://www.yworks.com/).

## [Live Demo](http://raw.githack.com/MrRio/jsPDF/master/) | [Documentation](http://raw.githack.com/MrRio/jsPDF/master/docs/)

## Install

Recommended: get jsPDF from npm:

```sh
npm install jspdf --save
# or
yarn add jspdf
```

Alternatively, load it from a CDN:

```html
&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jspdf/3.0.3/jspdf.umd.min.js&quot;&gt;&lt;/script&gt;
```

Or always get latest version via [unpkg](https://unpkg.com/browse/jspdf/)

```html
&lt;script src=&quot;https://unpkg.com/jspdf@latest/dist/jspdf.umd.min.js&quot;&gt;&lt;/script&gt;
```

The `dist` folder of this package contains different kinds of files:

- **jspdf.es.\*.js**: Modern ES2015 module format.
- **jspdf.node.\*.js**: For running in Node. Uses file operations for loading/saving files instead of browser APIs.
- **jspdf.umd.\*.js**: UMD module format. For AMD or script-tag loading.
- **polyfills\*.js**: Required polyfills for older browsers like Internet Explorer. The es variant simply imports all
  required polyfills from `core-js`, the umd variant is self-contained.

Usually it is not necessary to specify the exact file in the import statement. Build tools or Node automatically figure
out the right file, so importing &quot;jspdf&quot; is enough.

## Usage

Then you&#039;re ready to start making your document:

```javascript
import { jsPDF } from &quot;jspdf&quot;;

// Default export is a4 paper, portrait, using millimeters for units
const doc = new jsPDF();

doc.text(&quot;Hello world!&quot;, 10, 10);
doc.save(&quot;a4.pdf&quot;);
```

If you want to change the paper size, orientation, or units, you can do:

```javascript
// Landscape export, 2×4 inches
const doc = new jsPDF({
  orientation: &quot;landscape&quot;,
  unit: &quot;in&quot;,
  format: [4, 2]
});

doc.text(&quot;Hello world!&quot;, 1, 1);
doc.save(&quot;two-by-four.pdf&quot;);
```

### Running in Node.js

```javascript
const { jsPDF } = require(&quot;jspdf&quot;); // will automatically load the node version

const doc = new jsPDF();
doc.text(&quot;Hello world!&quot;, 10, 10);
doc.save(&quot;a4.pdf&quot;); // will save the file in the current working directory
```

### Other Module Formats

&lt;details&gt;
  &lt;summary&gt;
    &lt;b&gt;AMD&lt;/b&gt;
  &lt;/summary&gt;

```js
require([&quot;jspdf&quot;], ({ jsPDF }) =&gt; {
  const doc = new jsPDF();
  doc.text(&quot;Hello world!&quot;, 10, 10);
  doc.save(&quot;a4.pdf&quot;);
});
```

&lt;/details&gt;

&lt;details&gt;
  &lt;summary&gt;
    &lt;b&gt;Globals&lt;/b&gt;
  &lt;/summary&gt;

```js
const { jsPDF } = window.jspdf;

const doc = new jsPDF();
doc.text(&quot;Hello world!&quot;, 10, 10);
doc.save(&quot;a4.pdf&quot;);
```

&lt;/details&gt;

### Optional dependencies

Some functions of jsPDF require optional dependencies. E.g. the `html` method, which depends on `html2canvas` and,
when supplied with a string HTML document, `dompurify`. JsPDF loads them dynamically when required
(using the respective module format, e.g. dynamic imports). Build tools like Webpack will automatically create separate
chunks for each of the optional dependencies. If your application does not use any of the optional dependencies, you
can prevent Webpack from generating the chunks by defining them as external dependencies:

```js
// webpack.config.js
module.exports = {
  // ...
  externals: {
    // only define the dependencies you are NOT using as externals!
    canvg: &quot;canvg&quot;,
    html2canvas: &quot;html2canvas&quot;,
    dompurify: &quot;dompurify&quot;
  }
};
```

In **Vue CLI** projects, externals can be defined via the [configureWebpack](https://cli.vuejs.org/config/#configurewebpack)
or [chainWebpack](https://cli.vuejs.org/config/#chainwebpack) properties of the `vue.config.js` file
(needs to be created, first, in fresh projects).

In **Angular** projects, externals can be defined using
[custom webpack builders](https://github.com/just-jeb/angular-builders/tree/master/packages/custom-webpack).

In **React** (`create-react-app`) projects, externals can be defined by either using
[react-app-rewired](https://github.com/timarney/react-app-rewired) or ejecting.

### TypeScript/Angular/Webpack/React/etc. Configuration:

jsPDF can be imported just like any other 3rd party library. This works with all major toolkits and frameworks. jsPDF
also offers a typings file for TypeScript projects.

```js
import { jsPDF } from &quot;jspdf&quot;;
```

You can add jsPDF to your meteor-project as follows:

```
meteor add jspdf:core
```

### Polyfills

jsPDF requires modern browser APIs in order to function. To use jsPDF in older browsers like Internet Explorer,
polyfills are required. You can load all required polyfills as follows:

```js
import &quot;jspdf/dist/polyfills.es.js&quot;;
```

Alternatively, you can load the prebundled polyfill file. This is not recommended, since you might end up
loading polyfills multiple times. Might still be nifty for small applications or quick POCs.

```html
&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jspdf/3.0.3/polyfills.umd.js&quot;&gt;&lt;/script&gt;
```

## Use of Unicode Characters / UTF-8:

The 14 standard fonts in PDF are limited to the ASCII-codepage. If you want to use UTF-8 you have to integrate a
custom font, which provides the needed glyphs. jsPDF supports .ttf-files. So if you want to have for example
Chinese text in your pdf, your font has to have the necessary Chinese glyphs. So, check if your font supports
the wanted glyphs or else it will show garbled characters instead of the right text.

To add the font to jsPDF use our fontconverter in
[/fontconverter/fontconverter.html](https://rawgit.com/MrRio/jsPDF/master/fontconverter/fontconverter.html).
The fontconverter will create a js-file with the content of the provided ttf-file as base64 encoded string
and additional code for jsPDF. You just have to add this generated js-File to your project.
You are then ready to go to use setFont-method in your code and write your UTF-8 encoded text.

Alternatively you can just load the content of the \*.ttf file as a binary string using `fetch` or `XMLHttpRequest` and
add the font to the PDF file:

```js
const doc = new jsPDF();

const myFont = ... // load the *.ttf font file as binary string

// add the font to jsPDF
doc.addFileToVFS(&quot;MyFont.ttf&quot;, myFont);
doc.addFont(&quot;MyFont.ttf&quot;, &quot;MyFont&quot;, &quot;normal&quot;);
doc.setFont(&quot;MyFont&quot;);
```

## Advanced Functionality

Since the merge with the [yWorks fork](https://github.com/yWorks/jsPDF) there are a lot of new features. However, some
of them are API breaking, which is why there is an API-switch between two API modes:

- In &quot;compat&quot; API mode, jsPDF has the same API as MrRio&#039;s original version, which means full compatibility with plugins.
  However, some advanced features like transformation matrices and patterns won&#039;t work. This is the default mode.
- In &quot;advanced&quot; API mode, jsPDF has the API you&#039;re used from the yWorks-fork version. This means the availability of
  all advanced features like patterns, FormObjects, and transformation matrices.

You can switch between the two modes by calling

```javascript
doc.advancedAPI(doc =&gt; {
  // your code
});
// or
doc.compatAPI(doc =&gt; {
  // your code
});
```

JsPDF will automatically switch back to the original API mode after the callback has run.

## Support

Please check if your question is already handled at Stackoverflow &lt;https://stackoverflow.com/questions/tagged/jspdf&gt;.
Feel free to ask a question there with the tag `jspdf`.

Feature requests, bug reports, etc. are very welcome as issues. Note that bug reports should follow these guidelines:

- A bug should be reported as an [mcve](https://stackoverflow.com/help/mcve)
- Make sure code is properly indented and [formatted](https://help.github.com/articles/basic-writing-and-formatting-syntax/#quoting-code) (Use ``` around code blocks)
- Provide a runnable example.
- Try to make sure and show in your issue that the issue is actually related to jspdf and not your framework of choice.

## Contributing

jsPDF cannot live without help from the community! If you think a feature is missing or you found a bug, please consider
if you can spare one or two hours and prepare a pull request. If you&#039;re simply interested in this project and want to
help, have a look at the open issues, especially those labeled with &quot;bug&quot;.

You can find information about building and testing jsPDF in the
[contribution guide](https://github.com/MrRio/jsPDF/blob/master/CONTRIBUTING.md#pull-requests)

## Credits

- Big thanks to Daniel Dotsenko from [Willow Systems Corporation](https://github.com/willowsystems) for making huge contributions to the codebase.
- Thanks to Ajaxian.com for [featuring us back in 2009](http://web.archive.org/web/20111011192314/http://ajaxian.com/archives/dynamically-generic-pdfs-with-javascript). (Internet Archive Wayback Machine reference)
- Our special thanks to GH Lee ([sphilee](https://github.com/sphilee)) for programming the ttf-file-support and providing a large and long sought after feature
- Everyone else that&#039;s contributed patches or bug reports. You rock.

## License (MIT)

Copyright
(c) 2010-2025 James Hall, https://github.com/MrRio/jsPDF
(c) 2015-2025 yWorks GmbH, https://www.yworks.com/

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
&quot;Software&quot;), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[ryanhanwu/How-To-Ask-Questions-The-Smart-Way]]></title>
            <link>https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way</link>
            <guid>https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way</guid>
            <pubDate>Sat, 18 Oct 2025 00:04:41 GMT</pubDate>
            <description><![CDATA[本文原文由知名 Hacker Eric S. Raymond 所撰寫，教你如何正確的提出技術問題並獲得你滿意的答案。]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way">ryanhanwu/How-To-Ask-Questions-The-Smart-Way</a></h1>
            <p>本文原文由知名 Hacker Eric S. Raymond 所撰寫，教你如何正確的提出技術問題並獲得你滿意的答案。</p>
            <p>Language: JavaScript</p>
            <p>Stars: 33,724</p>
            <p>Forks: 5,742</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre># 提問的智慧
&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt;
[![All Contributors](https://img.shields.io/badge/all_contributors-35-orange.svg?style=flat-square)](#contributors-)
&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt;
[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/pulls)

**How To Ask Questions The Smart Way**

Copyright © 2001, 2006, 2014 Eric S. Raymond, Rick Moen

本指南英文版版權為 Eric S. Raymond, Rick Moen 所有。

原文網址 (Translated from)：[http://www.catb.org/~esr/faqs/smart-questions.html](http://www.catb.org/~esr/faqs/smart-questions.html)

Copyleft 2001 by D.H.Grand(nOBODY/Ginux), 2010 by Gasolin, 2015-present by [Ryan Wu](https://github.com/ryanhanwu)

本中文指南是基於原文 3.10 版以及 2010 年由 [Gasolin](https://github.com/gasolin) 所翻譯版本的最新翻譯；

協助指出翻譯問題，__請[發 issue](https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/issues/new)，或直接[發 pull pequest](https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/compare/) 給我。__

本文另有：[简体中文版](README-zh_CN.md)

## [原文版本歷史](history.md)

## 目錄
  * [聲明](#聲明)
  * [簡介](#簡介)
  * [在提問之前](#在提問之前)
  * [當你提問時](#當你提問時)
    * [慎選提問的論壇](#慎選提問的論壇)
    * [Stack Overflow](#stack-overflow)
    * [網站和IRC論壇](#網站和irc論壇)
    * [第二步，使用專案郵件列表](#第二步使用專案郵件列表)
    * [使用有意義且描述明確的標題](#使用有意義且描述明確的標題)
    * [使問題容易回覆](#使問題容易回覆)
    * [用清晰、正確、精準並合乎文法的語句](#用清晰正確精準並合乎文法的語句)
    * [使用易於讀取且標準的文件格式發送問題](#使用易於讀取且標準的文件格式發送問題)
    * [精確的描述問題並言之有物](#精確的描述問題並言之有物)
    * [話不在多而在精](#話不在多而在精)
    * [別動輒聲稱找到Bug](#別動輒聲稱找到bug)
    * [別用低聲下氣取代你真正該做的事](#別用低聲下氣取代你真正該做的事)
    * [描述問題症狀而非猜測](#描述問題症狀而非猜測)
    * [按發生時間先後列出問題症狀](#按發生時間先後列出問題症狀)
    * [描述目標而不是過程](#描述目標而不是過程)
    * [別要求使用私人電郵回覆](#別要求使用私人電郵回覆)
    * [清楚明確地表達你的問題以及需求](#清楚明確地表達你的問題以及需求)
    * [詢問有關程式碼的問題時](#詢問有關程式碼的問題時)
    * [別把自己家庭作業的問題貼上來](#別把自己家庭作業的問題貼上來)
    * [去掉無意義的提問句](#去掉無意義的提問句)
    * [即使你很急也不要在標題寫```緊急```](#即使你很急也不要在標題寫緊急)
    * [禮多人不怪，而且有時還很有幫助](#禮多人不怪而且有時還很有幫助)
    * [問題解決後，加個簡短的補充說明](#問題解決後加個簡短的補充說明)
  * [如何解讀答案](#如何解讀答案)
    * [RTFM和STFW：如何知道你已完全搞砸了](#rtfm和stfw如何知道你已完全搞砸了)
    * [如果還是搞不懂](#如果還是搞不懂)
    * [處理無禮的回應](#處理無禮的回應)
  * [如何避免扮演失敗者](#如何避免扮演失敗者)
  * [不該問的問題](#不該問的問題)
  * [好問題與蠢問題](#好問題與蠢問題)
  * [如果得不到回答](#如果得不到回答)
  * [如何更好地回答問題](#如何更好地回答問題)
  * [相關資源](#相關資源)
  * [鳴謝](#鳴謝)

## 聲明

許多專案在他們的使用協助/說明網頁中連結了本指南，這麼做很好，我們也鼓勵大家都這麼做。但如果你是負責管理這個專案網頁的人，請在超連結附近的顯著位置上註明：

__本指南不提供此專案的實際支援服務！__

我們已經深刻領教到少了上述聲明所帶來的痛苦。因為少了這點聲明，我們不停地被一些白痴糾纏。這些白痴認為既然我們發布了這本指南，那麼我們就有責任解決世上所有的技術問題。

如果你是因為需要某些協助而正在閱讀這本指南，並且最後離開是因為發現從本指南作者們身上得不到直接的協助，那麼你就是我們所說的那些白痴之一。別問我們問題，我們只會忽略你。我們在這本指南中是教你如何從那些真正懂得你所遇到軟體或硬體問題的人取得協助，而99%的情況下那不會是我們。除非你確定本指南的作者之一剛好是你所遇到的問題領域的專家，否則請不要打擾我們，這樣大家都會開心一點。

## 簡介

在[駭客](http://www.catb.org/~esr/faqs/hacker-howto.html)的世界裡，你所提技術問題的解答的好壞, 很大程度上取決於你提問的方式與此問題的難度。本指南將教你如何正確的提問以獲得你滿意的答案。

現在開放原始碼（Open Source）軟體已經相當盛行，您通常可以從其他更有經驗的使用者那裡獲得與駭客一樣好的答案，這是件**好事**；和駭客相比，使用者們往往對那些新手常遇到的問題更寬容一些。儘管如此，以我們在此推薦的方式對待這些有經驗的使用者通常也是從他們那裡獲得有用答案的最有效方式。

首先你應該明白，駭客們喜愛有挑戰性的問題，或者能激發他們思維的好問題。如果我們並非如此，那我們也不會成為你想詢問的對象。如果你給了我們一個值得反覆咀嚼玩味的好問題，我們自會對你感激不盡。好問題是激勵，是厚禮。好問題可以提高我們的理解力，而且通常會暴露我們以前從沒意識到或者思考過的問題。對駭客而言，&quot;好問題！&quot;是誠摯的大力稱讚。

儘管如此，駭客們有著蔑視或傲慢面對簡單問題的壞名聲，這有時讓我們看起來對新手、無知者似乎較有敵意，但其實不是那樣的。

我們不諱言我們對那些不願思考、或者在發問前不做他們該做的事的人的蔑視。那些人是時間殺手──他們只想索取，從不付出，消耗我們可用在更有趣的問題或更值得回答的人身上的時間。我們稱這樣的人為 ```失敗者（loser）``` （由於歷史原因，我們有時把它拼作 ```lusers```）。

我們意識到許多人只是想使用我們寫的軟體，他們對學習技術細節沒有興趣。對大多數人而言，電腦只是種工具，是種達到目的的手段而已。他們有自己的生活並且有更要緊的事要做。我們認可這點，也從不指望每個人都對這些讓我們著迷的技術問題感興趣。盡管如此，我們只為那些真正有興趣並願意積極參與問題解決的人調整回答問題的風格。這點不會變，也不該變：否則，我們就是在最擅長的事情上降低效率。

我們（在很大程度上）是自願的，從繁忙的生活中抽出時間來解答疑惑，而且時常被提問淹沒。所以我們無情的濾掉一些話題，特別是拋棄那些看起來像失敗者的傢伙，以便更高效的利用時間來回答```贏家（溫拿）```的問題。

如果你厭惡我們的態度，高高在上，或過於傲慢，不妨也設身處地想想。我們並沒有要求你向我們屈服──事實上，我們大多數人非常樂意與你平等地交流，只要你付出小小努力來滿足基本要求，我們就會歡迎你加入我們的文化。但讓我們幫助那些不願意幫助自己的人是沒有效率的。無知沒有關係，但裝白痴就是不行。

所以，你不必在技術上很在行才能吸引我們的注意，但你必須表現出能引導你變得在行的特質──機敏、有想法、善於觀察、樂於主動參與解決問題。如果你做不到這些使你與眾不同的事情，我們建議你花點錢找家商業公司簽個技術支援服務契約，而不是要求駭客個人無償地幫助你。

如果你決定向我們求助，當然你也不希望被視為失敗者，更不願成為失敗者中的一員。能立刻得到快速並有效答案的最好方法，就是像贏家那樣提問──聰明、自信、有解決問題的思路，只是偶爾在特定的問題上需要獲得一點幫助。

（歡迎對本指南提出改進意見。你可以 email 你的建議至 [esr@thyrsus.com](mailto:esr@thyrsus.com) 或 [respond-auto@linuxmafia.com](mailto:respond-auto@linuxmafia.com)。然而請注意，本文並非[網路禮節](https://www.ietf.org/rfc/rfc1855.txt)的通用指南，而我們通常會拒絕無助於在技術論壇得到有用答案的建議。）

## 在提問之前

在你準備要透過電子郵件、新聞群組或者聊天室提出技術問題前，請先做到以下事情：

1. 嘗試在你準備提問的論壇的舊文章中搜尋答案。
2. 嘗試上網搜尋來找到答案。
3. 嘗試閱讀手冊來找到答案。
4. 嘗試閱讀常見問題文件（FAQ）來找到答案。
5. 嘗試自己檢查或試驗來找到答案
6. 向你身邊的強者朋友打聽來找到答案。
7. 如果你是程式開發者，請嘗試閱讀原始碼來找到答案

當你提出問題的時候，請先表明你已經做了上述的努力；這將有助於樹立你並不是一個不勞而獲且浪費別人的時間的提問者。如果你能一併表達在做了上述努力的過程中所**學到**的東西會更好，因為我們更樂於回答那些表現出能從答案中學習的人的問題。

運用某些策略，比如先用 Google 搜尋你所遇到的各種錯誤訊息（既搜尋 [Google論壇](https://groups.google.com/)，也搜尋網頁），這樣很可能直接就找到了能解決問題的文件或郵件列表線索。即使沒有結果，在郵件列表或新聞組尋求幫助時加上一句 ```我在 Google 中搜過下列句子但沒有找到什麼有用的東西``` 也是件好事，即使它只是表明了搜尋引擎不能提供哪些幫助。這麼做（加上搜尋過的字串）也讓遇到相似問題的其他人能被搜尋引擎引導到你的提問來。

別著急，不要指望幾秒鐘的 Google 搜尋就能解決一個複雜的問題。在向專家求助之前，再閱讀一下常見問題文件（FAQ）、放輕鬆、坐舒服一些，再花點時間思考一下這個問題。相信我們，他們能從你的提問看出你做了多少閱讀與思考，如果你是有備而來，將更有可能得到解答。不要將所有問題一股腦拋出，只因你的第一次搜尋沒有找到答案（或者找到太多答案）。

準備好你的問題，再將問題仔細的思考過一遍，因為草率的發問只能得到草率的回答，或者根本得不到任何答案。越是能表現出在尋求幫助前你為解決問題所付出的努力，你越有可能得到實質性的幫助。

小心別問錯了問題。如果你的問題基於錯誤的假設，某個普通駭客（J. Random Hacker）多半會一邊在心裏想著```蠢問題…```， 一邊用無意義的字面解釋來答覆你，希望著你會從問題的回答（而非你想得到的答案）中汲取教訓。

絕不要自以為**夠格**得到答案，你沒有；你並沒有。畢竟你沒有為這種服務支付任何報酬。你將會是自己去**掙到**一個答案，靠提出有內涵的、有趣的、有思維激勵作用的問題──一個有潛力能貢獻社群經驗的問題，而不僅僅是被動的從他人處索取知識。

另一方面，表明你願意在找答案的過程中做點什麼是一個非常好的開始。```誰能給點提示？```、```我的這個例子裏缺了什麼？```以及```我應該檢查什麼地方```比```請把我需要的確切的過程貼出來```更容易得到答覆。因為你表現出只要有人能指出一個正確方向，你就有完成它的能力和決心。

## 當你提問時

### 慎選提問的論壇

小心選擇你要提問的場合。如果你做了下述的事情，你很可能被忽略掉或者被看作失敗者：

  * 在與主題不合的論壇上貼出你的問題
  * 在探討進階技術問題的論壇張貼非常初級的問題；反之亦然
  * 在太多的不同新聞群組上重複轉貼同樣的問題（cross-post）
  * 向既非熟人也沒有義務解決你問題的人發送私人電郵

駭客會剔除掉那些搞錯場合的問題，以保護他們溝通的管道不被無關的東西淹沒。你不會想讓這種事發生在自己身上的。

因此，第一步是找到對的論壇。再說一次，Google 和其它搜尋引擎還是你最好的朋友，用它們來找到與你遭遇到困難的軟硬體問題最相關的網站。通常在那裡都有常見問題（FAQ）、郵件列表及相關說明文件的連結。如果你的努力（包括**閱讀** FAQ）都沒有結果，網站上也許還有回報臭蟲（Bug-reporting）的流程或連結，如果是這樣，連過去看看。

向陌生的人或論壇發送郵件最可能是風險最大的事情。舉例來說，別假設一個提供豐富內容的網頁的作者會想充當你的免費顧問。不要對你的問題是否會受到歡迎做太樂觀的估計──如果你不確定，那就向別處發送，或者根本別發。

在選擇論壇、新聞群組或郵件列表時，別太相信名字，先看看 FAQ 或者許可書以弄清楚你的問題是否切題。發文前先翻翻已有的話題，這樣可以讓你感受一下那裡的文化。事實上，事先在新聞組或郵件列表的歷史記錄中搜尋與你問題相關的關鍵詞是個極好的主意，也許這樣就找到答案了。即使沒有，也能幫助你歸納出更好的問題。

別像機關槍似的一次&quot;掃射&quot;所有的幫助管道，這就像大喊大叫一樣會使人不愉快。要一個一個地來。

搞清楚你的主題！最典型的錯誤之一是在某種致力於跨平台可移植的語言、套件或工具的論壇中提關於 Unix 或 Windows 作業系統程式設計介面的問題。如果你不明白為什麼這是大錯，最好在搞清楚這之間差異之前什麼也別問。

一般來說，在仔細挑選的公共論壇中提問，會比在私有論壇中提同樣的問題更容易得到有用的回答。有幾個理由可以支持這點，一是看潛在的回覆者有多少，二是看觀眾有多少。駭客較願意回答那些能幫助到許多人的問題。

可以理解的是，老練的駭客和一些熱門軟體的作者正在接受過多的錯發訊息。就像那根最後壓垮駱駝背的稻草一樣，你的加入也有可能使情況走向極端──已經好幾次了，一些熱門軟體的作者從自己軟體的支援中抽身出來，因為伴隨而來湧入其私人信箱的無用郵件變得無法忍受。

### Stack Overflow

搜尋，**然後** 才在 Stack Exchange 發問。

近年來，Stack Exchange community 社群已經成為回答技術及其他問題的主要管道，尤其是那些開放原始碼的專案。

因為 Google 索引是即時的，在看 Stack Exchange 之前先在 Google 搜尋。有很高的機率某人已經問了一個類似的問題，而且 Stack Exchange 網站們往往會是搜尋結果中最前面幾個。如果你在 Google 上沒有找到任何答案，你再到特定相關主題的網站去找。用標籤（Tag）搜尋能讓你更縮小你的搜尋結果。

如果你還是找不到任何對你的問題有用的內容，請把你的問題發在與它最相關的網站上。提問的時候請善用格式化工具，尤其註意為代碼添加格式，並且添加相關的標籤（特別是編程語言、操作系統或庫/包的名稱）。當有人要求你提供更多相關信息時，請編輯你的貼子來補充它們[譯註：而不是發一個回帖或回答！ ]。如果你覺得一個答案對你有幫助，點擊向上的箭頭來為它投票；如果一個答案提供了問題的正確解決方案，點擊投票按鈕下方的對勾來將它標記為正解。 

Stack Exchange 已經成長到[超過一百個網站](https://stackexchange.com/sites)，以下是最常用的幾個站：

* Super User 是問一些通用的電腦問題，如果你的問題跟程式碼或是寫程式無關，只是一些網路連線之類的，請到這裡。
* Stack Overflow 是問寫程式有關的問題。
* Server Fault 是問伺服器和網管相關的問題。

### 網站和IRC論壇

在地的使用者群組（user group），或者你所用的 Linux 發行版本也許正在宣傳他們的網頁論壇或 IRC 頻道，並提供新手幫助（在一些非英語國家，新手論壇很可能還是郵件列表）， 這些地方是開始提問的好首選，特別是當你覺得遇到的也許只是相對簡單或者很普通的問題時。有廣告贊助的 IRC 頻道是公開歡迎提問的地方，通常可以即時得到回應。

事實上，如果程式出的問題只發生在特定 Linux 發行版提供的版本（這很常見），最好先去該發行版的論壇或郵件列表中提問，再到程式本身的論壇或郵件列表提問。（否則）該項目的駭客可能僅僅回覆 &quot;用**我們的**版本&quot;。

在任何論壇發文以前，先確認一下有沒有搜尋功能。如果有，就試著搜尋一下問題的幾個關鍵詞，也許這會有幫助。如果在此之前你已做過通用的網頁搜尋（你也該這樣做），還是再搜尋一下論壇，搜尋引擎有可能沒來得及索引此論壇的全部內容。

透過論壇或 IRC 頻道來提供使用者支援服務有增長的趨勢，電子郵件則大多為專案開發者間的交流而保留。所以最好先在論壇或 IRC 中尋求與該專案相關的協助。

### 第二步，使用專案郵件列表

當某個專案提供開發者郵件列表時，要向列表而不是其中的個別成員提問，即使你確信他能最好地回答你的問題。查一查專案的文件和首頁，找到專案的郵件列表並使用它。有幾個很好的理由支持我們採用這種辦法：

  * 任何好到需要向個別開發者提出的問題，也將對整個專案群組有益。反之，如果你認為自己的問題對整個專案群組來說太愚蠢，也不能成為騷擾個別開發者的理由。
  * 向列表提問可以分散開發者的負擔，個別開發者（尤其是專案領導人）也許太忙以至於沒法回答你的問題。
  * 大多數郵件列表都會被封存，那些被封存的內容將被搜尋引擎索引。如果你向列表提問並得到解答，將來其它人可以透過網頁搜尋找到你的問題和答案，也就不用再次發問了。
  * 如果某些問題經常被問到，開發者可以利用此資訊來改進說明文件或軟體本身，以使其更清楚。如果只是私下提問，就沒有人能看到最常見問題的完整場景。

如果一個項目既有&quot;使用者&quot; 也有&quot;開發者&quot;（或&quot;駭客&quot;）郵件列表或論壇，而你又不會動到那些原始碼，那麼就向&quot;使用者&quot;列表或論壇提問。不要假設自己會在開發者列表中受到歡迎，那些人多半會將你的提問視為干擾他們開發的噪音。

然而，如果你**確信**你的問題很特別，而且在&quot;使用者&quot; 列表或論壇中幾天都沒有回覆，可以試試前往&quot;開發者&quot;列表或論壇發問。建議你在張貼前最好先暗地裡觀察幾天以了解那裡的行事方式（事實上這是參與任何私有或半私有列表的好主意）

如果你找不到一個專案的郵件列表，而只能查到專案維護者的電子信箱地址，儘管向他發信。即使是在這種情況下，也別假設（專案）郵件列表不存在。在你的電子郵件中，請陳述你已經試過但沒有找到合適的郵件列表，也提及你不反對將自己的郵件轉發給他人（許多人認為，即使沒什麼秘密，私人電子郵件也不應該被公開。透過允許將你的電子郵件轉發他人，你給了相應人員處置你郵件的選擇）。

### 使用有意義且描述明確的標題

在郵件列表、新聞群組或論壇中，大約50字以內的標題是抓住資深專家注意力的好機會。別用喋喋不休的```幫幫忙```、```跪求```、```急```（更別說```救命啊！！！！```這樣讓人反感的話，用這種標題會被條件反射式地忽略）來浪費這個機會。不要妄想用你的痛苦程度來打動我們，而是在這點空間中使用極簡單扼要的描述方式來提出問題。

一個好標題範例是```目標 -- 差異```式的描述，許多技術支援組織就是這樣做的。在```目標```部分指出是哪一個或哪一組東西有問題，在```差異```部分則描述與期望的行為不一致的地方。


&gt; 蠢問題：救命啊！我的筆電不能正常顯示了！

&gt; 聰明問題：X.org 6.8.1的滑鼠游標會變形，某牌顯示卡 MV1005 晶片組。

&gt; 更聰明問題：X.org 6.8.1的滑鼠游標，在某牌顯示卡 MV1005 晶片組環境下 - 會變形。

編寫```目標 -- 差異``` 式描述的過程有助於你組織對問題的細緻思考。是什麼被影響了？ 僅僅是滑鼠游標或者還有其它圖形？只在 X.org 的 X 版中出現？或只是出現在6.8.1版中？ 是針對某牌顯示卡晶片組？或者只是其中的 MV1005 型號？ 一個駭客只需瞄一眼就能夠立即明白你的環境**和**你遇到的問題。

總而言之，請想像一下你正在一個只顯示標題的封存討論串（Thread）索引中查尋。讓你的標題更好地反映問題，可使下一個搜尋類似問題的人能夠關注這個討論串，而不用再次提問相同的問題。

如果你想在回覆中提出問題，記得要修改內容標題，以表明你是在問一個問題， 一個看起來像 ```Re: 測試``` 或者 ```Re: 新bug``` 的標題很難引起足夠重視。另外，在不影響連貫性之下，適當引用並刪減前文的內容，能給新來的讀者留下線索。

對於討論串，不要直接點擊回覆來開始一個全新的討論串，這將限縮你的觀眾。因為有些郵件閱讀程序，比如 mutt ，允許使用者按討論串排序並透過折疊討論串來隱藏消息，這樣做的人永遠看不到你發的消息。

僅僅改變標題還不夠。mutt 和其它一些郵件閱讀程式還會檢查郵件標題以外的其它訊息，以便為其指定討論串。所以寧可發一個全新的郵件。

在網頁論壇上，好的提問方式稍有不同，因為討論串與特定的訊息緊密結合，並且通常在討論串外就看不到裡面的內容，故透過回覆提問，而非改變標題是可接受的。不是所有論壇都允許在回覆中出現分離的標題，而且這樣做了基本上沒有人會去看。不過，透過回覆提問，這本身就是曖昧的做法，因為它們只會被正在查看該標題的人讀到。所以，除非你**只想**在該討論串當前活躍的人群中提問，不然還是另起爐灶比較好。

### 使問題容易回覆

以```請將你的回覆寄到……```來結束你的問題多半會使你得不到回答。如果你覺得花幾秒鐘在電子信箱客戶端設置一下回覆地址都麻煩，我們也覺得花幾秒鐘思考你的問題更麻煩。如果你的電子信箱程式不支援這樣做，[換個好點的](http://linuxmafia.com/faq/Mail/muas.html)；如果是作業系統不支援這種電子信箱程式，也換個好點的。

在論壇，要求透過電子郵件回覆是非常無禮的，除非你相信回覆的訊息可能比較敏感（而且有人會為了某些未知的原因，只讓你而不是整個論壇知道答案）。如果你只是想在有人回覆討論串時得到電子郵件提醒，可以要求網頁論壇發送給你。幾乎所有論壇都支援諸如```追蹤此討論串```、```有回覆時發送郵件提醒```等功能。

### 用清晰、正確、精準並合乎文法的語句

我們從經驗中發現，粗心的提問者通常也會粗心的寫程式與思考（我敢打包票）。回答粗心大意者的問題很不值得，我們寧願把時間耗在別處。

正確的拼字、標點符號和大小寫是很重要的。一般來說，如果你覺得這樣做很麻煩，不想在乎這些，那我們也覺得麻煩，不想在乎你的提問。花點額外的精力斟酌一下字句，用不著太僵硬與正式──事實上，駭客文化很看重能準確地使用非正式、俚語和幽默的語句。但它**必須很**準確，而且有跡象表明你是在思考和關注問題。

正確地拼寫、使用標點和大小寫，不要將```its```混淆為```it&#039;s```，```loose```搞成```lose```或者將```discrete```弄成```discreet```。不要**全部用大寫**，這會被視為無禮的大聲嚷嚷（全部小寫也好不到哪去，因為不易閱讀。[Alan Cox](https://zh.wikipedia.org/wiki/艾倫·考克斯)也許可以這樣做，但你不行。）

更白話的說，如果你寫得像是個半文盲[譯註：[小白](http://zh.wikipedia.org/zh-tw/小白)]），那多半得不到理睬。也不要使用即時通訊中的簡寫或[火星文](https://zh.wikipedia.org/zh-tw/火星文)，如將```的```簡化為```ㄉ```會使你看起來像一個為了少打幾個鍵而省字的小白。更糟的是，如果像個小孩似地鬼畫符那絕對是在找死，可以肯定沒人會理你（或者最多是給你一大堆指責與挖苦）。

如果在使用非母語的論壇提問，你可以犯點拼寫和語法上的小錯，但決不能在思考上馬虎（沒錯，我們通常能弄清兩者的分別）。同時，除非你知道回覆者使用的語言，否則請使用英語書寫。繁忙的駭客一般會直接刪除用他們看不懂語言寫的消息。在網路上英語是通用語言，用英語書寫可以將你的問題在尚未被閱讀就被直接刪除的可能性降到最低。

如果英文是你的第一外語（Second language），提示潛在回覆者你有潛在的語言困難是很好的：
[譯註：以下附上原文以供使用]

&gt; English is not my native language; please excuse typing errors.

* 英文不是我的母語，請原諒我的錯字或文法


&gt; If you speak $LANGUAGE, please email/PM me;
&gt; I may need assistance translating my question.

* 如果你說**某語言**，請寄信/私訊給我；我需要有人協助我翻譯我的問題


&gt; I am familiar with the technical terms,
&gt; but some slang expressions and idioms are difficult for me.

* 我對技術名詞很熟悉，但對於俗語或是特別用法比較不甚了解。


&gt; I&#039;ve posted my question in $LANGUAGE and English.
&gt; I&#039;ll be glad to translate responses, if you only use one or the other.

* 我把我的問題用**某語言**和英文寫出來，如果你只用一種語言回答，我會樂意將其翻譯成另一種。

### 使用易於讀取且標準的文件格式發送問題

如果你人為地將問題搞得難以閱讀，它多半會被忽略，人們更願讀易懂的問題，所以：

  * 使用純文字而不是 HTML ([關閉 HTML ](http://archive.birdhouse.org/etc/evilmail.html)並不難）
  * 使用 MIME 附件通常是可以的，前提是真正有內容（譬如附帶的原始碼或patch），而不僅僅是信箱程式生成的模板（譬如只是信件內容的拷貝）。
  * 不要發送一段文字只是單行句子但多次斷行的郵件（這使得回覆部分內容非常困難）。設想你的讀者是在80個字符寬的終端機上閱讀郵件，最好設置你的斷行點小於80字。
  * 但是，也**不要**用任何固定斷行資料（譬如日誌檔案拷貝或會話記錄）。檔案應該原樣包含，讓回覆者有信心他們看到的是和你看到的一樣的東西。
  * 在英語論壇中，不要使用```Quoted-Printable``` MIME編碼發送消息。這種編碼對於張貼非 ASCII 語言可能是必須的，但很多電子信箱程式並不支援這種編碼。當它們分斷時，那些文本中四處散佈的```=20```符號既難看也分散注意力，甚至有可能破壞內容的語意。
  * 絕對，**永遠**不要指望駭客們閱讀使用封閉格式編寫的文件，像是微軟公司的 Word 或 Excel 文件等。大多數駭客對此的反應就像有人將還在冒熱氣的豬糞倒在你門口階梯上時你的反應一樣。即便他們能夠處理，他們也很厭惡這麼做。
  * 如果你從使用 Windows 的電腦發送電子郵件，關閉微軟愚蠢的```智慧引號```功能 （從[選項] &gt; [校訂] &gt; [自動校正選項], 按掉```智慧引號```核取方塊），以免在你的郵件中到處散佈垃圾字符。
  * 在論壇，勿濫用```表情符號```和```HTML```功能（當它們提供時）。一兩個表情符號通常沒有問題，但花哨的彩色文本傾向於使人認為你是個無能之輩。過濫地使用表情符號、色彩和字體會使你看來像個傻笑的小姑娘。這通常不是個好主意，除非你只是對性而不是有用的回覆更有興趣。

如果你使用圖形使用者介面的電子信箱程式（如微軟公司的 Outlook 或者其它類似的），注意它們的預設配置不一定滿足這些要求。大多數這類程式有基於選單的```查看原始碼```命令，用它來檢查發送文件夾中的消息，以確保發送的是沒有多餘雜質的純文本文件。

### 精確的描述問題並言之有物

  * 仔細、清楚地描述你的問題或臭蟲的症狀。
  * 描述問題發生的環境（機器配置、作業系統、應用程式、以及相關的資訊），提供經銷商的發行版和版本號（如：```Fedora Core 4```、```Slackware 9.1```等）。
  * 描述在提問前你是怎樣去研究和理解這個問題的。
  * 描述在提問前為確定問題而採取的診斷步驟。
  * 描述最近做過什麼可能相關的硬體或軟體變更。
  * 盡可能的提供一個可以```重製這個問題的既定環境```的方法

儘量去揣測一個駭客會怎樣反問你，在他提問的時候預先給他答案。

以上幾點中，當你回報的是你認為可能在程式碼中的問題時，給駭客一個可以重製你的問題的環境尤其重要。當你這麼做時，你得到有效的回答的機會和速度都會大大的提升。

[Simon Tatham](https://www.chiark.greenend.org.uk/~sgtatham/) 寫過一篇名為〈[如何有效地回報Bug](https://www.chiark.greenend.org.uk/~sgtatham/bugs-tw.html)〉的出色文章。強力推薦你也讀一讀。

### 話不在多而在精

你需要提供精確有內容的資訊。這並不是要求你簡單的把成堆的出錯程式碼或者資料完全轉錄到你的提問中。如果你有龐大而複雜的測試樣例能重現程式當掉的情境，儘量將它剪裁得越小越好。

這樣做的用處至少有三點。
第一，表現出你為簡化問題付出了努力，這可以使你得到回答的機會增加；
第二，簡化問題使你更有可能得到**有用**的答案；
第三，在精鍊你的bug報告的過程中，你很可能就自己找到了解決方法或權宜之計。

### 別動輒聲稱找到Bug

當你在使用軟體中遇到問題，除非你非常、**非常**的有根據，不要動輒聲稱找到了Bug。提示：除非你能提供解決問題的原始碼補丁，或者對前一版本的回歸測試表現出不正確的行為，否則你都多半不夠完全確信。這同樣適用在網頁和文件，如果你（聲稱）發現了文件的```Bug```，你應該能提供相應位置的修正或替代文件。

請記得，還有許多其它使用者沒遇到你發現的問題，否則你在閱讀文件或搜尋網頁時就應該發現了（你在抱怨前[已經做了這些，是吧](#在提問之前)？）。這也意味著很有可能是你弄錯了而不是軟體本身有問題。

編寫軟體的人總是非常辛苦地使它盡可能完美。如果你聲稱找到了Bug，也就是在質疑他們的能力，即使你是對的，也有可能會冒犯到其中某部分人。這尤其嚴重當你在標題中嚷嚷著有```Bug```。

提問時，即使你私下非常確信已經發現一個真正的臭蟲，最好寫得像是**你**做錯了什麼。如果真的有臭蟲，你會在回覆中看到這點。這樣做的話，如果真有臭蟲，維護者就會向你道歉，這總比你惹惱別人然後欠別人一個道歉要好一點。

### 別用低聲下氣取代你真正該做的事

有些人明白他們不該粗魯或傲慢的提問並要求得到答覆，但他們選擇另一個極端 -- 低聲下氣：```我知道我只是個可悲的新手，一個失敗者，但...```。這既使人困擾，也沒有用，尤其是伴隨著與實際問題含糊不清的描述時更令人反感。

別用原始靈長類動物的把戲來浪費你我的時間。取而代之的是，盡可能清楚地描述背景條件和你的問題情況。這比低聲下氣更好地定位了你的位置。

有時網頁論壇會設有專為新手提問的版面，如果你真的認為遇到了初學者的問題，到那去就是了，但一樣別那麼低聲下氣。

### 描述問題症狀而非猜測

告訴駭客們你認為問題是怎樣造成的並沒什麼幫助。（如果你的推斷如此有效，還用向別人求助嗎？），因此要確信你原原本本告訴了他們問題的症狀，而不是你的解釋和理論；讓駭客們來推測和診斷。如果你認為陳述自己的猜測很重要，清楚地說明這只是你的猜測，並描述為什麼它們不起作用。

***蠢問題***

&gt; 我在編譯內核時接連遇到 SIG11 錯誤，
&gt; 我懷疑某條飛線搭在主板的走線上了，這種情況應該怎樣檢查最好？

***聰明問題***
&gt; 我的組裝電腦是 FIC-PA2007 主機板搭載 AMD K6/233 CPU（威盛 Apollo VP2晶片組），
&gt; 256MB Corsair PC133 SDRAM記憶體，在編譯內核時，從開機20分鐘以後就頻頻產生 SIG11 錯誤，
&gt; 但是在頭20分鐘內從沒發生過相同的問題。重新啟動也沒有用，但是關機一晚上就又能工作20分鐘。
&gt; 所有記憶體都換過了，沒有效果。相關部分的標準編譯記錄如下…

由於以上這點似乎讓許多人覺得難以配合，這裡有句話可以提醒你：```所有的診斷專家都來自密蘇里州。``` 美國國務院的官方座右銘則是：```讓我看看```（出自國會議員 Willard D. Vandiver 在1899年時的講話：```我來自一個出產玉米，棉花，牛蒡和民主黨人的國家，滔滔雄辯既不能說服我，也不會讓我滿意。我來自密蘇里州，你必須讓我看看。```） 針對診斷者而言，這並不是一種懷疑，而只是一種真實而有用的需求，以便讓他們看到的是與你看到的原始證據盡可能一致的東西，而不是你的猜測與歸納的結論。所以，大方的展示給我們看吧！

### 按發生時間先後列出問題症狀

問題發生前的一系列操作，往往就是對找出問題最有幫助的線索。因此，你的說明裡應該包含你的操作步驟，以及機器和軟體的反應，直到問題發生。在命令列處理的情況下，提供一段操作記錄（例如運行腳本工具所生成的），並引用相關的若干行（如20行）記錄會非常有幫助。

如果當掉的程式有診斷選項（如 -v 的詳述開關），試著選擇這些能在記錄中增加除錯資訊的選項。記住，```多```不等於```好```。試著選取適當的除錯級別以便提供有用的訊息而不是讓讀者淹沒在垃圾中。

如果你的說明很長（如超過四個段落），在開頭簡述問題，接下來再按時間順序詳述會有所幫助。這樣駭客們在讀你的記錄時就知道該注意哪些內容了。

### 描述目標而不是過程

如果你想弄清楚如何做某事（而不是報告一個Bug），在開頭就描述你的目標，然後才陳述重現你所卡住的特定步驟。

經常尋求技術幫助的人在心中有個更高層次的目標，而他們在自以為能達到目標的特定道路上被卡住了，然後跑來問該怎麼走，但沒有意識到這條路本身就有問題。結果要費很大的勁才能搞定。

**蠢問題**
&gt; 我怎樣才能從某繪圖程式的顏色選擇器中取得十六進制的 RGB 值？


**聰明問題**
&gt; 我正試著把一幅圖片的色碼替換成自己選定的色碼，我現在知道的唯一方法是編輯每個色碼區塊，
&gt; 但卻無法從某繪圖程式的顏色選擇器取得十六進制的 RGB 值。


第二種提問法比較聰明，你可能得到像是```建議採用另一個更適任的工具```的回覆。

### 別要求使用私人電郵回覆

駭客們認為問題的解決過程應該公開、透明，此過程中如果更有經驗的人注意到不完整或者不當之處，最初的回覆才能夠、也應該被糾正。同時，作為提供幫助者也能因為能力和學識被其它同行看到而得到某種獎勵。

當你要求私下回覆時，這個過程和獎勵都被中止。別這樣做，讓**回覆者**來決定是否私下回答 -- 如果他真這麼做了，通常是因為他認為問題編寫太差或者太膚淺，以至於對其它人沒有興趣。

這條規則存在一條有但書的例外，如果你確信提問可能會引來大量雷同的回覆時，那麼這個神奇的提問句會是```向我發電郵，我將為論壇歸納這些回覆```。試著將郵件列表或新聞群組從洪水般的雷同回覆中解救出來是非常有禮貌的 -- 但你必須信守諾言。

### 清楚明確地表達你的問題以及需求

漫無邊際的提問近乎無休無止的時間黑洞。最有可能給你有用答案的人通常也正是最忙的人（他們忙是因為要親自完成大部分工作）。這樣的人對無節制的時間黑洞相當厭惡，所以他們也傾向於厭惡那些漫無邊際的提問。

如果你明確表述需要回答者做什麼（如提供指點、發送一段程式碼、檢查你的補丁、或是其他等等），就最有可能得到有用的答案。因為這會定出一個時間和精力的上限，便於回答者能集中精力來幫你。這麼做很棒。

要理解專家們所處的世界，請把專業技能想像為充裕的資源，而回覆的時間則是稀缺的資源。你要求他們奉獻的時間越少，你越有可能從真正專業而且很忙的專家那裡得到解答。

所以，界定一下你的問題，使專家花在辨識你的問題和回答所需要付出的時間減到最少，這技巧對你獲得有用的答案相當有幫助──但這技巧通常和簡化問題有所區別。因此，問```我想更好的理解X，可否指點一下哪裡有好一點的說明？```通常比問```你能解釋一下X嗎？```更好。如果你的程式碼不能運作，通常請別人看看哪裡有問題，比要求別人替你改正要明智得多。

### 詢問有關程式碼的問題時

如果沒有提示別人應該從何入手，別要求他人幫你調試有問題的程式碼。張貼幾百行的程式碼，然後說一聲：```它不會動```會讓你完全被忽略。只貼幾十行程式碼，然後說一句：```在第七行以後，我期待它顯示 &lt;x&gt;，但實際出現的是 &lt;y&gt;```比較有可能讓你得到回應。

最有效描述程式問題的方法是提供最精簡的臭蟲展示測試示例（bug-demonstrating test case）。什麼是最精簡的測試示例? 那是問題的縮影；一小個程式片段能**剛好**展示出程式的異常行為，而不包含其他令人分散注意力的內容。怎麼製作最精簡的測試示例？如果你知道哪一行或哪一段程式碼會造成異常的行為，複製下來並加入足夠重現這個狀況的程式碼（例如，足以讓這段程式碼能被編譯/直譯/被應用程式處理）。如果你無法將問題縮減到一個特定區塊，就複製一份程式碼並移除不影響產生問題行為的部分。總之，測試示例越小越好（查看[話不在多而在精](#話不在多而在精)一節）。

一般而言，要得到一段相當精簡的測試示例並不太容易，但永遠先嘗試這樣做的是種好習慣。這種方式可以幫助你了解如何自行解決這個問題──而且即使你的嘗試不成功，駭客們也會看到你在嘗試取得答案的過程中付出了努力，這可以讓他們更願意與你合作。

如果你只是想讓別人幫忙審（Review）一下程式碼，在信的開頭就要說出來，並且一定要提到你認為哪一部分特別需要關注以及為什麼。

### 別把自己家庭作業的問題貼上來

駭客們很擅長分辨哪些問題是家庭作業式的問題；因為我們中的大多數都曾自己解決這類問題。同樣，這些問題得由**你**來搞定，你會從中學到東西。你可以要求給點提示，但別要求得到完整的解決方案。

如果你懷疑自己碰到了一個家庭作業式的問題，但仍然無法解決，試試在使用者群組，論壇或（最後一招）在專案的**使用者**郵件列表或論壇中提問。儘管駭客們**會**看出來，但一些有經驗的使用者也許仍會給你一些提示。

### 去掉無意義的提問句

避免用無意義的話結束提問，例如```有人能幫我嗎？```或者```這有答案嗎？```。

首先：如果你對問題的描述不是很好，這樣問更是畫蛇添足。

其次：由於這樣問是畫蛇添足，駭客們會很厭煩你──而且通常會用邏輯上正確，但毫無意義的回答來表示他們的蔑視， 例如：```沒錯，有人能幫你```或者```不，沒答案```。

一般來說，避免用 ```是或否```、```對或錯```、```有或沒有```類型的問句，除非你想得到[是或否類型的回答](https://strcat.de/questions-with-yes-or-no-answers.html)。

### 即使你很急也不要在標題寫```緊急```

這是你的問題，不是我們的。宣稱```緊急```極有可能事與願違：大多數駭客會直接刪除無禮和自私地企圖即時引起關注的問題。更嚴重的是，```緊急```這個字（或是其他企圖引起關注的標題）通常會被垃圾信過濾器過濾掉 -- 你的問題可能永遠將無法得到解答。

有半個例外的情況是，如果你是在一些很高調，會使駭客們興奮的地方，也許值得這樣去做。在這種情況下，如果你有時間壓力，也很有禮貌地提到這點，人們也許會有興趣回答快一點。

當然，這風險很大，因為駭客們興奮的點多半與你的不同。譬如從 NASA 國際空間站（International Space Station）發這樣的標題沒有問題，但用自我感覺良好的慈善行為或政治原因發肯定不行。事實上，張貼諸如```緊急：幫我救救這個毛絨絨的小海豹！```肯定讓你被駭客忽略或惹惱他們，即使他們認為毛絨絨的小海豹很重要。

如果你覺得這點很不可思議，最好再把這份指南剩下的內容多讀幾遍，直到你弄懂了再發文。

### 禮多人不怪，而且有時還很有幫助

彬彬有禮，多用```請```和```謝謝您的關注```，或```謝謝你的關照```。讓大家都知道你對他們花時間免費提供幫助心存感激。

坦白說，這一點並沒有比清晰、正確、精準並合乎文法和避免使用專用格式重要（也不能取而代之）。駭客們一般寧可讀有點唐突但技術上鮮明的臭蟲報告，而不是那種有禮但含糊的報告。（如果這點讓你不解，記住我們是按問題能教我們什麼來評價問題的價值的）

然而，如果你有一串的問題待解決，客氣一點肯定會增加你得到有用回應的機會。

（我們注意到，自從本指南發佈後，從資深駭客那裡得到的唯一嚴重缺陷反饋，就是對預先道謝這一條。一些駭客覺得```先謝了```意味著事後就不用再感謝任何人的暗示。我們的建議是要麼先說```先謝了```，**然後**事後再對回覆者表示感謝，或者換種方式表達感激，譬如用```謝謝你的關注```或```謝謝你的關照```。）

### 問題解決後，加個簡短的補充說明

問題解決後，向所有幫助過你的人發個說明，讓他們知道問題是怎樣解決的，並再一次向他們表示感謝。如果問題在新聞組或者郵件列表中引起了廣泛關注，應該在那裡貼一個說明比較恰當。

最理想的方式是向最初提問的話題回覆此消息，並在標題中包含```已修正```，```已解決```或其它同等含義的明顯標記。在人來人往的郵件列表裡，一個看見討論串```問題 X```和```問題的X - 已解決```的潛在回覆者就明白不用再浪費時間了（除非他個人覺得```問題 X```有趣），因此可以利用此時間去解決其它問題。

補充說明不必很長或是很深入；簡單的一句```你好，原來是網路線出了問題！謝謝大家 – Bill```比什麼也不說要來的好。事實上，除非結論真的很有技術含量，否則簡短可愛的小結比長篇大論更好。說明問題是怎樣解決的，但大可不必將解決問題的過程複述一遍。

對於有深度的問題，張貼除錯記錄的摘要是有幫助的。描述問題的最終狀態，說明是什麼解決了問題，在此**之後**才指明可以避免的盲點。避免盲點的部分應放在正確的解決方案和其它總結材料之後，而不要將此訊息搞成偵探推理小說。列出那些幫助過你的名字，會讓你交到更多朋友。

除了有禮貌和有內涵以外，這種類型的補充也有助於他人在郵件列表/新聞群組/論壇中搜尋到真正解決你問題的方案，讓他們也從中受益。

至少，這種補充有助於讓每位參與協助的人因問題的解決而從中得到滿足感。如果你自己不是技術專家或者駭客，那就相信我們，這種感覺對於那些你向他們求助的大師或者專家而言，是非常重要的。問題懸而未決會讓人灰心；駭客們渴望看到問題被解決。好人有好報，滿足他們的渴望，你會在下次提問時嘗到甜頭。

思考一下怎樣才能避免他人將來也遇到類似的問題，自問寫一份文件或加個常見問題（FAQ）會不會有幫助。如果是的話就將它們發給維護者。

在駭客中，這種良好的後繼行動實際上比傳統的禮節更為重要，也是你如何透過善待他人而贏得聲譽的方式，這是非常有價值的資產。

## 如何解讀答案

&lt;a id=&quot;rtfm&quot;&gt;&lt;/a&gt;
### RTFM和STFW：如何知道你已完全搞砸了

有一個古老而神聖的傳統：如果你收到```RTFM （Read The Fucking Manual）```的回應，回答者認為你**應該去讀那該死的手冊**。當然，基本上他是對的，你應該去讀一讀。

RTFM 有一個年輕的親戚。如果你收到```STFW（Search The Fucking Web）```的回應，回答者認為你**應該到該死的網路上搜尋**過了。那人多半也是對的，去搜尋一下吧。（更溫和一點的說法是 **[Google是你的朋友](https://zh.lmgtfy.app/)**！）

在論壇，你也可能被要求去爬爬論壇的舊文。事實上，有人甚至可能熱心地為你提供以前解決此問題的討論串。但不要依賴這種關照，提問前應該先搜尋一下舊文。

通常，用這兩句之一回答你的人會給你一份包含你需要內容的手冊或者一個網址，而且他們打這些字的時候也正在讀著。這些答覆意味著回答者認為

  * **你需要的資訊非常容易獲得**；
  * **你自己去搜尋這些資訊比灌給你能讓你學到更多**。

你不應該因此不爽；**依照駭客的標準，他已經表示了對你一定程度的關注，而沒有對你的要求視而不見**。你應該對他祖母般的慈祥表示感謝。

### 如果還是搞不懂

如果你看不懂回應，別立刻要求對方解釋。像你以前試著自己解決問題時那樣（利用手冊，FAQ，網路，身邊的高手），先試著去搞懂他的回應。如果你真的需要對方解釋，記得表現出你已經從中學到了點什麼。

比方說，如果我回答你：```看來似乎是 zentry 卡住了；你應該先清除它。```，然後，這是一個**很糟的**後續問題回應：```zentry是什麼？``` **好**的問法應該是這樣：```哦~~~我看過說明了但是只有 -z 和 -p 兩個參數中提到了 zentries，而且還都沒有清楚的解釋如何清除它。你是指這兩個中的哪一個嗎？還是我看漏了什麼？```

### 處理無禮的回應

很多駭客圈子中看似無禮的行為並不是存心冒犯。相反，它是直接了當，一針見血式的交流風格，這種風格更注重解決問題，而不是使人感覺舒服而卻模模糊糊。

如果你覺得被冒犯了，試著平靜地反應。如果有人真的做了出格的事，郵件列表、新聞群組或論壇中的前輩多半會招呼他。如果這**沒有**發生而你卻發火了，那麼你發火對象的言語可能在駭客社群中看起來是正常的，而**你**將被視為有錯的一方，這將傷害到你獲取訊息或幫助的機會。

另一方面，你偶而真的會碰到無禮和無聊的言行。與上述相反，對真正的冒犯者狠狠地打擊，用犀利的語言將其駁得體無完膚都是可

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>