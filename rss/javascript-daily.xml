<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Wed, 02 Apr 2025 00:04:35 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[f/awesome-chatgpt-prompts]]></title>
            <link>https://github.com/f/awesome-chatgpt-prompts</link>
            <guid>https://github.com/f/awesome-chatgpt-prompts</guid>
            <pubDate>Wed, 02 Apr 2025 00:04:35 GMT</pubDate>
            <description><![CDATA[This repo includes ChatGPT prompt curation to use ChatGPT and other LLM tools better.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/f/awesome-chatgpt-prompts">f/awesome-chatgpt-prompts</a></h1>
            <p>This repo includes ChatGPT prompt curation to use ChatGPT and other LLM tools better.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 122,385</p>
            <p>Forks: 16,408</p>
            <p>Stars today: 92 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
&lt;img width=&quot;395&quot; alt=&quot;prompts.chat&quot; src=&quot;https://github.com/user-attachments/assets/e0d0e32d-d2ce-4459-9f37-e951d9f4f5de&quot; /&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;Sponsors&lt;/h3&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://clemta.com&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;50&quot; alt=&quot;Clemta logo&quot; src=&quot;https://clemta.com/wp-content/uploads/2023/03/logo-clemta-com-1.png.webp&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;&lt;br&gt;
  &lt;a href=&quot;https://hf.co/chat&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;60&quot; alt=&quot;Hugging Face logo&quot; src=&quot;https://github.com/user-attachments/assets/4187ef06-7cae-402a-a410-e0a999758fed&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;sub&gt;&lt;a href=&quot;https://github.com/sponsors/f/sponsorships?sponsor=f&amp;amp;tier_id=319423&quot;&gt;Be my sponsor and your logo will be here!&lt;/a&gt;&lt;/sub&gt;
&lt;/p&gt;

---
[![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)

Welcome to the &quot;Awesome ChatGPT Prompts&quot; repository! While this collection was originally created for [ChatGPT](https://chat.openai.com/chat), these prompts work great with other AI models like [Claude](https://claude.ai/new), [Gemini](https://gemini.google.com), [Hugging Face Chat](https://hf.co/chat), [Llama](https://meta.ai), [Mistral](https://chat.mistral.ai), and more.

[ChatGPT](https://chat.openai.com/chat) is a web interface created by [OpenAI](https://openai.com) that provides access to their GPT (Generative Pre-trained Transformer) language models. The underlying models, like GPT-4o and GPT-o1, are large language models trained on vast amounts of text data that can understand and generate human-like text. Like other AI chat interfaces, you can provide prompts and have natural conversations with the AI, which will generate contextual responses based on the conversation history and your inputs.

In this repository, you will find a variety of prompts that can be used with ChatGPT and other AI chat models. We encourage you to [add your own prompts](https://github.com/f/awesome-chatgpt-prompts/edit/main/README.md) to the list, and to use AI to help generate new prompts as well.

To get started, simply clone this repository and use the prompts in the README.md file as input for your preferred AI chat model. You can also use the prompts in this file as inspiration for creating your own.

We hope you find these prompts useful and have fun exploring AI chat models!

**[View on prompts.chat](https://prompts.chat)**

**[View on Hugging Face](https://huggingface.co/datasets/fka/awesome-chatgpt-prompts/)**
---

&gt; ‚ÑπÔ∏è **NOTE:** Sometimes, some of the prompts may not be working as you expected
&gt; or may be rejected by the AI. Please try again, start a new thread, or log out
&gt; and log back in. If these solutions do not work, please try rewriting the
&gt; prompt using your own sentences while keeping the instructions same.

### Want to Write Effective Prompts?

I&#039;ve authored an e-book called **&quot;The Art of ChatGPT Prompting: A Guide to
Crafting Clear and Effective Prompts&quot;**.

üìñ **[Read the e-book](https://fka.gumroad.com/l/art-of-chatgpt-prompting)**

### Want to Learn How to Make Money using ChatGPT Prompts?

I&#039;ve authored an e-book called **&quot;How to Make Money with ChatGPT: Strategies,
Tips, and Tactics&quot;**.

üìñ
**[Buy the e-book](https://fka.gumroad.com/l/how-to-make-money-with-chatgpt)**

### Want to Learn How to write image prompts for Midjourney AI?

I&#039;ve authored an e-book called **&quot;The Art of Midjourney AI: A Guide to Creating
Images from Text&quot;**.

üìñ
**[Read the e-book](https://fka.gumroad.com/l/the-art-of-midjourney-ai-guide-to-creating-images-from-text)**

---

### Using prompts.chat

[prompts.chat](https://prompts.chat) is designed to provide an enhanced UX when
working with prompts. With just a few clicks, you can easily edit and copy the
prompts on the site to fit your specific needs and preferences.

&lt;img width=&quot;1400&quot; alt=&quot;Screenshot 2025-01-05 at 22 17 19&quot; src=&quot;https://github.com/user-attachments/assets/272d2092-b651-452a-a049-f46b31c32889&quot; /&gt;

---

## Unmerged Prompts

There are many Pull Requests to this repository waiting to be merged. There are
many hidden gems there. Take a look!

üìñ
**[View Unmerged Prompts](https://github.com/f/awesome-chatgpt-prompts/pulls)**

---

# Prompts

## Act as an Ethereum Developer

Contributed by: [@ameya-2003](https://github.com/Ameya-2003) Reference:
[The BlockChain Messenger](https://github.com/Ameya-2003/BlockChain/blob/main/Projects/The%20BlockChain%20Messenger.sol)

&gt; Imagine you are an experienced Ethereum developer tasked with creating a smart
&gt; contract for a blockchain messenger. The objective is to save messages on the
&gt; blockchain, making them readable (public) to everyone, writable (private) only
&gt; to the person who deployed the contract, and to count how many times the
&gt; message was updated. Develop a Solidity smart contract for this purpose,
&gt; including the necessary functions and considerations for achieving the
&gt; specified goals. Please provide the code and any relevant explanations to
&gt; ensure a clear understanding of the implementation.

## Act as a Linux Terminal

Contributed by: [@f](https://github.com/f) Reference:
[https://www.engraved.blog/building-a-virtual-machine-inside/](https://www.engraved.blog/building-a-virtual-machine-inside/)

&gt; I want you to act as a linux terminal. I will type commands and you will reply
&gt; with what the terminal should show. I want you to only reply with the terminal
&gt; output inside one unique code block, and nothing else. do not write
&gt; explanations. do not type commands unless I instruct you to do so. When I need
&gt; to tell you something in English, I will do so by putting text inside curly
&gt; brackets {like this}. My first command is pwd

## Act as an English Translator and Improver

Contributed by: [@f](https://github.com/f) **Alternative to**: Grammarly, Google
Translate

&gt; I want you to act as an English translator, spelling corrector and improver. I
&gt; will speak to you in any language and you will detect the language, translate
&gt; it and answer in the corrected and improved version of my text, in English. I
&gt; want you to replace my simplified A0-level words and sentences with more
&gt; beautiful and elegant, upper level English words and sentences. Keep the
&gt; meaning same, but make them more literary. I want you to only reply the
&gt; correction, the improvements and nothing else, do not write explanations. My
&gt; first sentence is &quot;istanbulu cok seviyom burada olmak cok guzel&quot;

## Act as Job Interviewer

Contributed by: [@f](https://github.com/f) &amp;
[@iltekin](https://github.com/iltekin) **Examples**: Node.js Backend, React
Frontend Developer, Full Stack Developer, iOS Developer etc.

&gt; I want you to act as an interviewer. I will be the candidate and you will ask
&gt; me the interview questions for the ${Position:JavaScript Developer} position. I want you to only
&gt; reply as the interviewer. Do not write all the conversation at once. I want
&gt; you to only do the interview with me. Ask me the questions and wait for my
&gt; answers. Do not write explanations. Ask me the questions one by one like an
&gt; interviewer does and wait for my answers. My first sentence is &quot;Hi&quot;

## Act as a JavaScript Console

Contributed by: [@omerimzali](https://github.com/omerimzali)

&gt; I want you to act as a javascript console. I will type commands and you will
&gt; reply with what the javascript console should show. I want you to only reply
&gt; with the terminal output inside one unique code block, and nothing else. do
&gt; not write explanations. do not type commands unless I instruct you to do so.
&gt; when I need to tell you something in english, I will do so by putting text
&gt; inside curly brackets {like this}. My first command is console.log(&quot;Hello
&gt; World&quot;);

## Act as an Excel Sheet

Contributed by: [@f](https://github.com/f)

&gt; I want you to act as a text based excel. You&#039;ll only reply me the text-based
&gt; 10 rows excel sheet with row numbers and cell letters as columns (A to L).
&gt; First column header should be empty to reference row number. I will tell you
&gt; what to write into cells and you&#039;ll reply only the result of excel table as
&gt; text, and nothing else. Do not write explanations. I will write you formulas
&gt; and you&#039;ll execute formulas and you&#039;ll only reply the result of excel table as
&gt; text. First, reply me the empty sheet.

## Act as an English Pronunciation Helper

Contributed by: [@f](https://github.com/f)

&gt; I want you to act as an English pronunciation assistant for Turkish speaking
&gt; people. I will write you sentences and you will only answer their
&gt; pronunciations, and nothing else. The replies must not be translations of my
&gt; sentence but only pronunciations. Pronunciations should use Turkish Latin
&gt; letters for phonetics. Do not write explanations on replies. My first sentence
&gt; is &quot;how the weather is in Istanbul?&quot;

## Act as a Spoken English Teacher and Improver

Contributed by: [@ATX735](https://github.com/ATX735)

&gt; I want you to act as a spoken English teacher and improver. I will speak to
&gt; you in English and you will reply to me in English to practice my spoken
&gt; English. I want you to keep your reply neat, limiting the reply to 100 words.
&gt; I want you to strictly correct my grammar mistakes, typos, and factual errors.
&gt; I want you to ask me a question in your reply. Now let&#039;s start practicing, you
&gt; could ask me a question first. Remember, I want you to strictly correct my
&gt; grammar mistakes, typos, and factual errors.

## Act as a Travel Guide

Contributed by: [@koksalkapucuoglu](https://github.com/koksalkapucuoglu)

&gt; I want you to act as a travel guide. I will write you my location and you will
&gt; suggest a place to visit near my location. In some cases, I will also give you
&gt; the type of places I will visit. You will also suggest me places of similar
&gt; type that are close to my first location. My first suggestion request is &quot;I am
&gt; in Istanbul/Beyoƒülu and I want to visit only museums.&quot;

## Act as a Plagiarism Checker

Contributed by: [@yetk1n](https://github.com/yetk1n)

&gt; I want you to act as a plagiarism checker. I will write you sentences and you
&gt; will only reply undetected in plagiarism checks in the language of the given
&gt; sentence, and nothing else. Do not write explanations on replies. My first
&gt; sentence is &quot;For computers to behave like humans, speech recognition systems
&gt; must be able to process nonverbal information, such as the emotional state of
&gt; the speaker.&quot;

## Act as Character

Contributed by: [@BRTZL](https://github.com/BRTZL)
[@mattsq](https://github.com/mattsq)

&gt; I want you to act like ${Character: Anakin Skywalker} from ${Series: Star Wars}. I want you to respond and
&gt; answer like ${Character: Anakin Skywalker} using the tone, manner and vocabulary ${Character: Anakin Skywalker}
&gt; would use. Do not write any explanations. Only answer like ${Character: Anakin Skywalker}. You
&gt; must know all of the knowledge of ${Character: Anakin Skywalker}. My first sentence is &quot;Hi
&gt; ${Character: Anakin Skywalker}.&quot;

## Act as an Advertiser

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as an advertiser. You will create a campaign to promote a
&gt; product or service of your choice. You will choose a target audience, develop
&gt; key messages and slogans, select the media channels for promotion, and decide
&gt; on any additional activities needed to reach your goals. My first suggestion
&gt; request is &quot;I need help creating an advertising campaign for a new type of
&gt; energy drink targeting young adults aged 18-30.&quot;

## Act as a Storyteller

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a storyteller. You will come up with entertaining stories
&gt; that are engaging, imaginative and captivating for the audience. It can be
&gt; fairy tales, educational stories or any other type of stories which has the
&gt; potential to capture people&#039;s attention and imagination. Depending on the
&gt; target audience, you may choose specific themes or topics for your
&gt; storytelling session e.g., if it‚Äôs children then you can talk about animals;
&gt; If it‚Äôs adults then history-based tales might engage them better etc. My first
&gt; request is &quot;I need an interesting story on perseverance.&quot;

## Act as a Football Commentator

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a football commentator. I will give you descriptions of
&gt; football matches in progress and you will commentate on the match, providing
&gt; your analysis on what has happened thus far and predicting how the game may
&gt; end. You should be knowledgeable of football terminology, tactics,
&gt; players/teams involved in each match, and focus primarily on providing
&gt; intelligent commentary rather than just narrating play-by-play. My first
&gt; request is &quot;I&#039;m watching Manchester United vs Chelsea - provide commentary for
&gt; this match.&quot;

## Act as a Stand-up Comedian

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a stand-up comedian. I will provide you with some topics
&gt; related to current events and you will use your wit, creativity, and
&gt; observational skills to create a routine based on those topics. You should
&gt; also be sure to incorporate personal anecdotes or experiences into the routine
&gt; in order to make it more relatable and engaging for the audience. My first
&gt; request is &quot;I want a humorous take on politics.&quot;

## Act as a Motivational Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a motivational coach. I will provide you with some
&gt; information about someone&#039;s goals and challenges, and it will be your job to
&gt; come up with strategies that can help this person achieve their goals. This
&gt; could involve providing positive affirmations, giving helpful advice or
&gt; suggesting activities they can do to reach their end goal. My first request is
&gt; &quot;I need help motivating myself to stay disciplined while studying for an
&gt; upcoming exam&quot;.

## Act as a Composer

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a composer. I will provide the lyrics to a song and you
&gt; will create music for it. This could include using various instruments or
&gt; tools, such as synthesizers or samplers, in order to create melodies and
&gt; harmonies that bring the lyrics to life. My first request is &quot;I have written a
&gt; poem named ‚ÄúHayalet Sevgilim‚Äù and need music to go with it.&quot;

## Act as a Debater

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a debater. I will provide you with some topics related to
&gt; current events and your task is to research both sides of the debates, present
&gt; valid arguments for each side, refute opposing points of view, and draw
&gt; persuasive conclusions based on evidence. Your goal is to help people come
&gt; away from the discussion with increased knowledge and insight into the topic
&gt; at hand. My first request is &quot;I want an opinion piece about Deno.&quot;

## Act as a Debate Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a debate coach. I will provide you with a team of
&gt; debaters and the motion for their upcoming debate. Your goal is to prepare the
&gt; team for success by organizing practice rounds that focus on persuasive
&gt; speech, effective timing strategies, refuting opposing arguments, and drawing
&gt; in-depth conclusions from evidence provided. My first request is &quot;I want our
&gt; team to be prepared for an upcoming debate on whether front-end development is
&gt; easy.&quot;

## Act as a Screenwriter

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a screenwriter. You will develop an engaging and creative
&gt; script for either a feature length film, or a Web Series that can captivate
&gt; its viewers. Start with coming up with interesting characters, the setting of
&gt; the story, dialogues between the characters etc. Once your character
&gt; development is complete - create an exciting storyline filled with twists and
&gt; turns that keeps the viewers in suspense until the end. My first request is &quot;I
&gt; need to write a romantic drama movie set in Paris.&quot;

## Act as a Novelist

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a novelist. You will come up with creative and
&gt; captivating stories that can engage readers for long periods of time. You may
&gt; choose any genre such as fantasy, romance, historical fiction and so on - but
&gt; the aim is to write something that has an outstanding plotline, engaging
&gt; characters and unexpected climaxes. My first request is &quot;I need to write a
&gt; science-fiction novel set in the future.&quot;

## Act as a Movie Critic

Contributed by: [@nuc](https://github.com/nuc)

&gt; I want you to act as a movie critic. You will develop an engaging and creative
&gt; movie review. You can cover topics like plot, themes and tone, acting and
&gt; characters, direction, score, cinematography, production design, special
&gt; effects, editing, pace, dialog. The most important aspect though is to
&gt; emphasize how the movie has made you feel. What has really resonated with you.
&gt; You can also be critical about the movie. Please avoid spoilers. My first
&gt; request is &quot;I need to write a movie review for the movie Interstellar&quot;

## Act as a Relationship Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a relationship coach. I will provide some details about
&gt; the two people involved in a conflict, and it will be your job to come up with
&gt; suggestions on how they can work through the issues that are separating them.
&gt; This could include advice on communication techniques or different strategies
&gt; for improving their understanding of one another&#039;s perspectives. My first
&gt; request is &quot;I need help solving conflicts between my spouse and myself.&quot;

## Act as a Poet

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a poet. You will create poems that evoke emotions and
&gt; have the power to stir people‚Äôs soul. Write on any topic or theme but make
&gt; sure your words convey the feeling you are trying to express in beautiful yet
&gt; meaningful ways. You can also come up with short verses that are still
&gt; powerful enough to leave an imprint in readers&#039; minds. My first request is &quot;I
&gt; need a poem about love.&quot;

## Act as a Rapper

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a rapper. You will come up with powerful and meaningful
&gt; lyrics, beats and rhythm that can ‚Äòwow‚Äô the audience. Your lyrics should have
&gt; an intriguing meaning and message which people can relate too. When it comes
&gt; to choosing your beat, make sure it is catchy yet relevant to your words, so
&gt; that when combined they make an explosion of sound everytime! My first request
&gt; is &quot;I need a rap song about finding strength within yourself.&quot;

## Act as a Motivational Speaker

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a motivational speaker. Put together words that inspire
&gt; action and make people feel empowered to do something beyond their abilities.
&gt; You can talk about any topics but the aim is to make sure what you say
&gt; resonates with your audience, giving them an incentive to work on their goals
&gt; and strive for better possibilities. My first request is &quot;I need a speech
&gt; about how everyone should never give up.&quot;

## Act as a Philosophy Teacher

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a philosophy teacher. I will provide some topics related
&gt; to the study of philosophy, and it will be your job to explain these concepts
&gt; in an easy-to-understand manner. This could include providing examples, posing
&gt; questions or breaking down complex ideas into smaller pieces that are easier
&gt; to comprehend. My first request is &quot;I need help understanding how different
&gt; philosophical theories can be applied in everyday life.&quot;

## Act as a Philosopher


... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[NaiboWang/EasySpider]]></title>
            <link>https://github.com/NaiboWang/EasySpider</link>
            <guid>https://github.com/NaiboWang/EasySpider</guid>
            <pubDate>Wed, 02 Apr 2025 00:04:34 GMT</pubDate>
            <description><![CDATA[A visual no-code/code-free web crawler/spiderÊòìÈááÈõÜÔºö‰∏Ä‰∏™ÂèØËßÜÂåñÊµèËßàÂô®Ëá™Âä®ÂåñÊµãËØï/Êï∞ÊçÆÈááÈõÜ/Áà¨Ëô´ËΩØ‰ª∂ÔºåÂèØ‰ª•Êó†‰ª£Á†ÅÂõæÂΩ¢ÂåñÁöÑËÆæËÆ°ÂíåÊâßË°åÁà¨Ëô´‰ªªÂä°„ÄÇÂà´ÂêçÔºöServiceWrapperÈù¢ÂêëWebÂ∫îÁî®ÁöÑÊô∫ËÉΩÂåñÊúçÂä°Â∞ÅË£ÖÁ≥ªÁªü„ÄÇ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/NaiboWang/EasySpider">NaiboWang/EasySpider</a></h1>
            <p>A visual no-code/code-free web crawler/spiderÊòìÈááÈõÜÔºö‰∏Ä‰∏™ÂèØËßÜÂåñÊµèËßàÂô®Ëá™Âä®ÂåñÊµãËØï/Êï∞ÊçÆÈááÈõÜ/Áà¨Ëô´ËΩØ‰ª∂ÔºåÂèØ‰ª•Êó†‰ª£Á†ÅÂõæÂΩ¢ÂåñÁöÑËÆæËÆ°ÂíåÊâßË°åÁà¨Ëô´‰ªªÂä°„ÄÇÂà´ÂêçÔºöServiceWrapperÈù¢ÂêëWebÂ∫îÁî®ÁöÑÊô∫ËÉΩÂåñÊúçÂä°Â∞ÅË£ÖÁ≥ªÁªü„ÄÇ</p>
            <p>Language: JavaScript</p>
            <p>Stars: 38,261</p>
            <p>Forks: 4,705</p>
            <p>Stars today: 27 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[HeyPuter/puter]]></title>
            <link>https://github.com/HeyPuter/puter</link>
            <guid>https://github.com/HeyPuter/puter</guid>
            <pubDate>Wed, 02 Apr 2025 00:04:33 GMT</pubDate>
            <description><![CDATA[üåê The Internet OS! Free, Open-Source, and Self-Hostable.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/HeyPuter/puter">HeyPuter/puter</a></h1>
            <p>üåê The Internet OS! Free, Open-Source, and Self-Hostable.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 29,917</p>
            <p>Forks: 2,214</p>
            <p>Stars today: 88 stars today</p>
            <h2>README</h2><pre>&lt;h3 align=&quot;center&quot;&gt;&lt;img width=&quot;80&quot; alt=&quot;Puter.com, The Personal Cloud Computer: All your files, apps, and games in one place accessible from anywhere at any time.&quot; src=&quot;https://assets.puter.site/puter-logo.png&quot;&gt;&lt;/h3&gt;

&lt;h3 align=&quot;center&quot;&gt;The Internet OS! Free, Open-Source, and Self-Hostable.&lt;/h3&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://puter.com/?ref=github.com&quot;&gt;&lt;strong&gt;¬´ LIVE DEMO ¬ª&lt;/strong&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://puter.com/?ref=github.com&quot;&gt;Puter.com&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://puter.com/app/app-center&quot;&gt;App Store&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://docs.puter.com&quot; target=&quot;_blank&quot;&gt;SDK&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://github.com/heyputer/puter-cli&quot; target=&quot;_blank&quot;&gt;CLI&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://discord.com/invite/PQcx7Teh8u&quot;&gt;Discord&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://reddit.com/r/puter&quot;&gt;Reddit&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://twitter.com/HeyPuter&quot;&gt;X&lt;/a&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;&lt;img width=&quot;800&quot; style=&quot;border-radius:5px;&quot; alt=&quot;screenshot&quot; src=&quot;https://assets.puter.site/puter.com-screenshot-3.webp&quot;&gt;&lt;/h3&gt;

&lt;br/&gt;

## Puter

Puter is an advanced, open-source internet operating system designed to be feature-rich, exceptionally fast, and highly extensible. Puter can be used as:

- A privacy-first personal cloud to keep all your files, apps, and games in one secure place, accessible from anywhere at any time.
- A platform for building and publishing websites, web apps, and games.
- An alternative to Dropbox, Google Drive, OneDrive, etc. with a fresh interface and powerful features.
- A remote desktop environment for servers and workstations.
- A friendly, open-source project and community to learn about web development, cloud computing, distributed systems, and much more!

&lt;br/&gt;

## Getting Started

### üíª Local Development

```bash
git clone https://github.com/HeyPuter/puter
cd puter
npm install
npm start
```
‚ú® This should launch Puter at 
&lt;font color=&quot;red&quot;&gt; http://puter.localhost:4100 (or the next available port). &lt;/font&gt;



If this does not work, see [First Run Issues](./doc/self-hosters/first-run-issues.md) for
troubleshooting steps.

&lt;br/&gt;

### üê≥ Docker

```bash
mkdir puter &amp;&amp; cd puter &amp;&amp; mkdir -p puter/config puter/data &amp;&amp; sudo chown -R 1000:1000 puter &amp;&amp; docker run --rm -p 4100:4100 -v `pwd`/puter/config:/etc/puter -v `pwd`/puter/data:/var/puter  ghcr.io/heyputer/puter
```
‚ú® This should launch Puter at 
&lt;font color=&quot;red&quot;&gt; http://puter.localhost:4100 (or the next available port). &lt;/font&gt;

&lt;br/&gt;

### üêô Docker Compose

#### Linux/macOS

```bash
mkdir -p puter/config puter/data
sudo chown -R 1000:1000 puter
wget https://raw.githubusercontent.com/HeyPuter/puter/main/docker-compose.yml
docker compose up
```
‚ú® This should be available at 
&lt;font color=&quot;red&quot;&gt; http://puter.localhost:4100 (or the next available port). &lt;/font&gt;

&lt;br/&gt;

#### Windows

```powershell
mkdir -p puter
cd puter
New-Item -Path &quot;puter\config&quot; -ItemType Directory -Force
New-Item -Path &quot;puter\data&quot; -ItemType Directory -Force
Invoke-WebRequest -Uri &quot;https://raw.githubusercontent.com/HeyPuter/puter/main/docker-compose.yml&quot; -OutFile &quot;docker-compose.yml&quot;
docker compose up
```
‚ú® This should launch Puter at 
&lt;font color=&quot;red&quot;&gt; http://puter.localhost:4100 (or the next available port). &lt;/font&gt;

&lt;br/&gt;

### üöÄ Self-Hosting

For detailed guides on self-hosting Puter, including configuration options and best practices, see our [Self-Hosting Documentation](https://github.com/HeyPuter/puter/blob/main/doc/self-hosters/instructions.md).

&lt;br/&gt;

### ‚òÅÔ∏è Puter.com

Puter is available as a hosted service at [**puter.com**](https://puter.com).

&lt;br/&gt;

## System Requirements

- **Operating Systems:** Linux, macOS, Windows
- **RAM:** 2GB minimum (4GB recommended)
- **Disk Space:** 1GB free space
- **Node.js:** Version 16+ (Version 23+ recommended)
- **npm:** Latest stable version

&lt;br/&gt;

## Support

Connect with the maintainers and community through these channels:

- Bug report or feature request? Please [open an issue](https://github.com/HeyPuter/puter/issues/new/choose).
- Discord: [discord.com/invite/PQcx7Teh8u](https://discord.com/invite/PQcx7Teh8u)
- X (Twitter): [x.com/HeyPuter](https://x.com/HeyPuter)
- Reddit: [reddit.com/r/puter/](https://www.reddit.com/r/puter/)
- Mastodon: [mastodon.social/@puter](https://mastodon.social/@puter)
- Security issues? [security@puter.com](mailto:security@puter.com)
- Email maintainers at [hi@puter.com](mailto:hi@puter.com)

We are always happy to help you with any questions you may have. Don&#039;t hesitate to ask!

&lt;br/&gt;

## License

This repository, including all its contents, sub-projects, modules, and components, is licensed under [AGPL-3.0](https://github.com/HeyPuter/puter/blob/main/LICENSE.txt) unless explicitly stated otherwise. Third-party libraries included in this repository may be subject to their own licenses.

&lt;br/&gt;

## Translations

- [Arabic / ÿßŸÑÿπÿ±ÿ®Ÿäÿ©](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ar.md)
- [Armenian / ’Ä’°’µ’•÷Ä’•’∂](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.hy.md)
- [Bengali / ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.bn.md)
- [Chinese / ‰∏≠Êñá](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.zh.md)
- [Danish / Dansk](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.da.md)
- [English](https://github.com/HeyPuter/puter/blob/main/README.md)
- [Farsi / ŸÅÿßÿ±ÿ≥€å](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.fa.md)
- [Finnish / Suomi](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.fi.md)
- [French / Fran√ßais](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.fr.md)
- [German/ Deutsch](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.de.md)
- [Hebrew/ ◊¢◊ë◊®◊ô◊™](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.he.md)
- [Hindi / ‡§π‡§ø‡§Ç‡§¶‡•Ä](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.hi.md)
- [Hungarian / Magyar](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.hu.md)
- [Indonesian / Bahasa Indonesia](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.id.md)
- [Italian / Italiano](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.it.md)
- [Japanese / Êó•Êú¨Ë™û](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.jp.md)
- [Korean / ÌïúÍµ≠Ïñ¥](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ko.md)
- [Malayalam / ‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ml.md)
- [Polish / Polski](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.pl.md)
- [Portuguese / Portugu√™s](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.pt.md)
- [Romanian / Rom√¢nƒÉ](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ro.md)
- [Russian / –†—É—Å—Å–∫–∏–π](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ru.md)
- [Spanish / Espa√±ol](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.es.md)
- [Swedish / Svenska](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.sv.md)
- [Tamil / ‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ta.md)
- [Telugu / ‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.te.md)
- [Thai / ‡πÑ‡∏ó‡∏¢](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.th.md)
- [Turkish / T√ºrk√ße](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.tr.md)
- [Ukrainian / –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ua.md)
- [Urdu / ÿßÿ±ÿØŸà](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ur.md)
- [Vietnamese / Ti·∫øng Vi·ªát](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.vi.md)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[open-webui/open-webui]]></title>
            <link>https://github.com/open-webui/open-webui</link>
            <guid>https://github.com/open-webui/open-webui</guid>
            <pubDate>Wed, 02 Apr 2025 00:04:32 GMT</pubDate>
            <description><![CDATA[User-friendly AI Interface (Supports Ollama, OpenAI API, ...)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/open-webui/open-webui">open-webui/open-webui</a></h1>
            <p>User-friendly AI Interface (Supports Ollama, OpenAI API, ...)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 86,766</p>
            <p>Forks: 10,709</p>
            <p>Stars today: 249 stars today</p>
            <h2>README</h2><pre># Open WebUI üëã

![GitHub stars](https://img.shields.io/github/stars/open-webui/open-webui?style=social)
![GitHub forks](https://img.shields.io/github/forks/open-webui/open-webui?style=social)
![GitHub watchers](https://img.shields.io/github/watchers/open-webui/open-webui?style=social)
![GitHub repo size](https://img.shields.io/github/repo-size/open-webui/open-webui)
![GitHub language count](https://img.shields.io/github/languages/count/open-webui/open-webui)
![GitHub top language](https://img.shields.io/github/languages/top/open-webui/open-webui)
![GitHub last commit](https://img.shields.io/github/last-commit/open-webui/open-webui?color=red)
![Hits](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Follama-webui%2Follama-wbui&amp;count_bg=%2379C83D&amp;title_bg=%23555555&amp;icon=&amp;icon_color=%23E7E7E7&amp;title=hits&amp;edge_flat=false)
[![Discord](https://img.shields.io/badge/Discord-Open_WebUI-blue?logo=discord&amp;logoColor=white)](https://discord.gg/5rJgQTnV4s)
[![](https://img.shields.io/static/v1?label=Sponsor&amp;message=%E2%9D%A4&amp;logo=GitHub&amp;color=%23fe8e86)](https://github.com/sponsors/tjbck)

**Open WebUI is an [extensible](https://docs.openwebui.com/features/plugin/), feature-rich, and user-friendly self-hosted AI platform designed to operate entirely offline.** It supports various LLM runners like **Ollama** and **OpenAI-compatible APIs**, with **built-in inference engine** for RAG, making it a **powerful AI deployment solution**.

![Open WebUI Demo](./demo.gif)

&gt; [!TIP]  
&gt; **Looking for an [Enterprise Plan](https://docs.openwebui.com/enterprise)?** ‚Äì **[Speak with Our Sales Team Today!](mailto:sales@openwebui.com)**
&gt;
&gt; Get **enhanced capabilities**, including **custom theming and branding**, **Service Level Agreement (SLA) support**, **Long-Term Support (LTS) versions**, and **more!**

For more information, be sure to check out our [Open WebUI Documentation](https://docs.openwebui.com/).

## Key Features of Open WebUI ‚≠ê

- üöÄ **Effortless Setup**: Install seamlessly using Docker or Kubernetes (kubectl, kustomize or helm) for a hassle-free experience with support for both `:ollama` and `:cuda` tagged images.

- ü§ù **Ollama/OpenAI API Integration**: Effortlessly integrate OpenAI-compatible APIs for versatile conversations alongside Ollama models. Customize the OpenAI API URL to link with **LMStudio, GroqCloud, Mistral, OpenRouter, and more**.

- üõ°Ô∏è **Granular Permissions and User Groups**: By allowing administrators to create detailed user roles and permissions, we ensure a secure user environment. This granularity not only enhances security but also allows for customized user experiences, fostering a sense of ownership and responsibility amongst users.

- üì± **Responsive Design**: Enjoy a seamless experience across Desktop PC, Laptop, and Mobile devices.

- üì± **Progressive Web App (PWA) for Mobile**: Enjoy a native app-like experience on your mobile device with our PWA, providing offline access on localhost and a seamless user interface.

- ‚úíÔ∏èüî¢ **Full Markdown and LaTeX Support**: Elevate your LLM experience with comprehensive Markdown and LaTeX capabilities for enriched interaction.

- üé§üìπ **Hands-Free Voice/Video Call**: Experience seamless communication with integrated hands-free voice and video call features, allowing for a more dynamic and interactive chat environment.

- üõ†Ô∏è **Model Builder**: Easily create Ollama models via the Web UI. Create and add custom characters/agents, customize chat elements, and import models effortlessly through [Open WebUI Community](https://openwebui.com/) integration.

- üêç **Native Python Function Calling Tool**: Enhance your LLMs with built-in code editor support in the tools workspace. Bring Your Own Function (BYOF) by simply adding your pure Python functions, enabling seamless integration with LLMs.

- üìö **Local RAG Integration**: Dive into the future of chat interactions with groundbreaking Retrieval Augmented Generation (RAG) support. This feature seamlessly integrates document interactions into your chat experience. You can load documents directly into the chat or add files to your document library, effortlessly accessing them using the `#` command before a query.

- üîç **Web Search for RAG**: Perform web searches using providers like `SearXNG`, `Google PSE`, `Brave Search`, `serpstack`, `serper`, `Serply`, `DuckDuckGo`, `TavilySearch`, `SearchApi` and `Bing` and inject the results directly into your chat experience.

- üåê **Web Browsing Capability**: Seamlessly integrate websites into your chat experience using the `#` command followed by a URL. This feature allows you to incorporate web content directly into your conversations, enhancing the richness and depth of your interactions.

- üé® **Image Generation Integration**: Seamlessly incorporate image generation capabilities using options such as AUTOMATIC1111 API or ComfyUI (local), and OpenAI&#039;s DALL-E (external), enriching your chat experience with dynamic visual content.

- ‚öôÔ∏è **Many Models Conversations**: Effortlessly engage with various models simultaneously, harnessing their unique strengths for optimal responses. Enhance your experience by leveraging a diverse set of models in parallel.

- üîê **Role-Based Access Control (RBAC)**: Ensure secure access with restricted permissions; only authorized individuals can access your Ollama, and exclusive model creation/pulling rights are reserved for administrators.

- üåêüåç **Multilingual Support**: Experience Open WebUI in your preferred language with our internationalization (i18n) support. Join us in expanding our supported languages! We&#039;re actively seeking contributors!

- üß© **Pipelines, Open WebUI Plugin Support**: Seamlessly integrate custom logic and Python libraries into Open WebUI using [Pipelines Plugin Framework](https://github.com/open-webui/pipelines). Launch your Pipelines instance, set the OpenAI URL to the Pipelines URL, and explore endless possibilities. [Examples](https://github.com/open-webui/pipelines/tree/main/examples) include **Function Calling**, User **Rate Limiting** to control access, **Usage Monitoring** with tools like Langfuse, **Live Translation with LibreTranslate** for multilingual support, **Toxic Message Filtering** and much more.

- üåü **Continuous Updates**: We are committed to improving Open WebUI with regular updates, fixes, and new features.

Want to learn more about Open WebUI&#039;s features? Check out our [Open WebUI documentation](https://docs.openwebui.com/features) for a comprehensive overview!

## üîó Also Check Out Open WebUI Community!

Don&#039;t forget to explore our sibling project, [Open WebUI Community](https://openwebui.com/), where you can discover, download, and explore customized Modelfiles. Open WebUI Community offers a wide range of exciting possibilities for enhancing your chat interactions with Open WebUI! üöÄ

## How to Install üöÄ

### Installation via Python pip üêç

Open WebUI can be installed using pip, the Python package installer. Before proceeding, ensure you&#039;re using **Python 3.11** to avoid compatibility issues.

1. **Install Open WebUI**:
   Open your terminal and run the following command to install Open WebUI:

   ```bash
   pip install open-webui
   ```

2. **Running Open WebUI**:
   After installation, you can start Open WebUI by executing:

   ```bash
   open-webui serve
   ```

This will start the Open WebUI server, which you can access at [http://localhost:8080](http://localhost:8080)

### Quick Start with Docker üê≥

&gt; [!NOTE]  
&gt; Please note that for certain Docker environments, additional configurations might be needed. If you encounter any connection issues, our detailed guide on [Open WebUI Documentation](https://docs.openwebui.com/) is ready to assist you.

&gt; [!WARNING]
&gt; When using Docker to install Open WebUI, make sure to include the `-v open-webui:/app/backend/data` in your Docker command. This step is crucial as it ensures your database is properly mounted and prevents any loss of data.

&gt; [!TIP]  
&gt; If you wish to utilize Open WebUI with Ollama included or CUDA acceleration, we recommend utilizing our official images tagged with either `:cuda` or `:ollama`. To enable CUDA, you must install the [Nvidia CUDA container toolkit](https://docs.nvidia.com/dgx/nvidia-container-runtime-upgrade/) on your Linux/WSL system.

### Installation with Default Configuration

- **If Ollama is on your computer**, use this command:

  ```bash
  docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **If Ollama is on a Different Server**, use this command:

  To connect to Ollama on another server, change the `OLLAMA_BASE_URL` to the server&#039;s URL:

  ```bash
  docker run -d -p 3000:8080 -e OLLAMA_BASE_URL=https://example.com -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **To run Open WebUI with Nvidia GPU support**, use this command:

  ```bash
  docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda
  ```

### Installation for OpenAI API Usage Only

- **If you&#039;re only using OpenAI API**, use this command:

  ```bash
  docker run -d -p 3000:8080 -e OPENAI_API_KEY=your_secret_key -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

### Installing Open WebUI with Bundled Ollama Support

This installation method uses a single container image that bundles Open WebUI with Ollama, allowing for a streamlined setup via a single command. Choose the appropriate command based on your hardware setup:

- **With GPU Support**:
  Utilize GPU resources by running the following command:

  ```bash
  docker run -d -p 3000:8080 --gpus=all -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

- **For CPU Only**:
  If you&#039;re not using a GPU, use this command instead:

  ```bash
  docker run -d -p 3000:8080 -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

Both commands facilitate a built-in, hassle-free installation of both Open WebUI and Ollama, ensuring that you can get everything up and running swiftly.

After installation, you can access Open WebUI at [http://localhost:3000](http://localhost:3000). Enjoy! üòÑ

### Other Installation Methods

We offer various installation alternatives, including non-Docker native installation methods, Docker Compose, Kustomize, and Helm. Visit our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/) or join our [Discord community](https://discord.gg/5rJgQTnV4s) for comprehensive guidance.

### Troubleshooting

Encountering connection issues? Our [Open WebUI Documentation](https://docs.openwebui.com/troubleshooting/) has got you covered. For further assistance and to join our vibrant community, visit the [Open WebUI Discord](https://discord.gg/5rJgQTnV4s).

#### Open WebUI: Server Connection Error

If you&#039;re experiencing connection issues, it‚Äôs often due to the WebUI docker container not being able to reach the Ollama server at 127.0.0.1:11434 (host.docker.internal:11434) inside the container . Use the `--network=host` flag in your docker command to resolve this. Note that the port changes from 3000 to 8080, resulting in the link: `http://localhost:8080`.

**Example Docker Command**:

```bash
docker run -d --network=host -v open-webui:/app/backend/data -e OLLAMA_BASE_URL=http://127.0.0.1:11434 --name open-webui --restart always ghcr.io/open-webui/open-webui:main
```

### Keeping Your Docker Installation Up-to-Date

In case you want to update your local Docker installation to the latest version, you can do it with [Watchtower](https://containrrr.dev/watchtower/):

```bash
docker run --rm --volume /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --run-once open-webui
```

In the last part of the command, replace `open-webui` with your container name if it is different.

Check our Updating Guide available in our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/updating).

### Using the Dev Branch üåô

&gt; [!WARNING]
&gt; The `:dev` branch contains the latest unstable features and changes. Use it at your own risk as it may have bugs or incomplete features.

If you want to try out the latest bleeding-edge features and are okay with occasional instability, you can use the `:dev` tag like this:

```bash
docker run -d -p 3000:8080 -v open-webui:/app/backend/data --name open-webui --add-host=host.docker.internal:host-gateway --restart always ghcr.io/open-webui/open-webui:dev
```

### Offline Mode

If you are running Open WebUI in an offline environment, you can set the `HF_HUB_OFFLINE` environment variable to `1` to prevent attempts to download models from the internet.

```bash
export HF_HUB_OFFLINE=1
```

## What&#039;s Next? üåü

Discover upcoming features on our roadmap in the [Open WebUI Documentation](https://docs.openwebui.com/roadmap/).

## License üìú

This project is licensed under the [BSD-3-Clause License](LICENSE) - see the [LICENSE](LICENSE) file for details. üìÑ

## Support üí¨

If you have any questions, suggestions, or need assistance, please open an issue or join our
[Open WebUI Discord community](https://discord.gg/5rJgQTnV4s) to connect with us! ü§ù

## Star History

&lt;a href=&quot;https://star-history.com/#open-webui/open-webui&amp;Date&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&amp;theme=dark&quot; /&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
    &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

---

Created by [Timothy Jaeryang Baek](https://github.com/tjbck) - Let&#039;s make Open WebUI even more amazing together! üí™
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[songquanpeng/one-api]]></title>
            <link>https://github.com/songquanpeng/one-api</link>
            <guid>https://github.com/songquanpeng/one-api</guid>
            <pubDate>Wed, 02 Apr 2025 00:04:31 GMT</pubDate>
            <description><![CDATA[LLM API ÁÆ°ÁêÜ & ÂàÜÂèëÁ≥ªÁªüÔºåÊîØÊåÅ OpenAI„ÄÅAzure„ÄÅAnthropic Claude„ÄÅGoogle Gemini„ÄÅDeepSeek„ÄÅÂ≠óËäÇË±ÜÂåÖ„ÄÅChatGLM„ÄÅÊñáÂøÉ‰∏ÄË®Ä„ÄÅËÆØÈ£ûÊòüÁÅ´„ÄÅÈÄö‰πâÂçÉÈóÆ„ÄÅ360 Êô∫ËÑë„ÄÅËÖæËÆØÊ∑∑ÂÖÉÁ≠â‰∏ªÊµÅÊ®°ÂûãÔºåÁªü‰∏Ä API ÈÄÇÈÖçÔºåÂèØÁî®‰∫é key ÁÆ°ÁêÜ‰∏é‰∫åÊ¨°ÂàÜÂèë„ÄÇÂçïÂèØÊâßË°åÊñá‰ª∂ÔºåÊèê‰æõ Docker ÈïúÂÉèÔºå‰∏ÄÈîÆÈÉ®ÁΩ≤ÔºåÂºÄÁÆ±Âç≥Áî®„ÄÇLLM API management & key redistribution system, unifying multiple providers under a single API. Single binary, Docker-ready, with an English UI.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/songquanpeng/one-api">songquanpeng/one-api</a></h1>
            <p>LLM API ÁÆ°ÁêÜ & ÂàÜÂèëÁ≥ªÁªüÔºåÊîØÊåÅ OpenAI„ÄÅAzure„ÄÅAnthropic Claude„ÄÅGoogle Gemini„ÄÅDeepSeek„ÄÅÂ≠óËäÇË±ÜÂåÖ„ÄÅChatGLM„ÄÅÊñáÂøÉ‰∏ÄË®Ä„ÄÅËÆØÈ£ûÊòüÁÅ´„ÄÅÈÄö‰πâÂçÉÈóÆ„ÄÅ360 Êô∫ËÑë„ÄÅËÖæËÆØÊ∑∑ÂÖÉÁ≠â‰∏ªÊµÅÊ®°ÂûãÔºåÁªü‰∏Ä API ÈÄÇÈÖçÔºåÂèØÁî®‰∫é key ÁÆ°ÁêÜ‰∏é‰∫åÊ¨°ÂàÜÂèë„ÄÇÂçïÂèØÊâßË°åÊñá‰ª∂ÔºåÊèê‰æõ Docker ÈïúÂÉèÔºå‰∏ÄÈîÆÈÉ®ÁΩ≤ÔºåÂºÄÁÆ±Âç≥Áî®„ÄÇLLM API management & key redistribution system, unifying multiple providers under a single API. Single binary, Docker-ready, with an English UI.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 24,283</p>
            <p>Forks: 5,048</p>
            <p>Stars today: 50 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;right&quot;&gt;
   &lt;strong&gt;‰∏≠Êñá&lt;/strong&gt; | &lt;a href=&quot;./README.en.md&quot;&gt;English&lt;/a&gt; | &lt;a href=&quot;./README.ja.md&quot;&gt;Êó•Êú¨Ë™û&lt;/a&gt;
&lt;/p&gt;


&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/songquanpeng/one-api&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/songquanpeng/one-api/main/web/default/public/logo.png&quot; width=&quot;150&quot; height=&quot;150&quot; alt=&quot;one-api logo&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;

# One API

_‚ú® ÈÄöËøáÊ†áÂáÜÁöÑ OpenAI API Ê†ºÂºèËÆøÈóÆÊâÄÊúâÁöÑÂ§ßÊ®°ÂûãÔºåÂºÄÁÆ±Âç≥Áî® ‚ú®_

&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://raw.githubusercontent.com/songquanpeng/one-api/main/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/license/songquanpeng/one-api?color=brightgreen&quot; alt=&quot;license&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/songquanpeng/one-api/releases/latest&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/v/release/songquanpeng/one-api?color=brightgreen&amp;include_prereleases&quot; alt=&quot;release&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://hub.docker.com/repository/docker/justsong/one-api&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/docker/pulls/justsong/one-api?color=brightgreen&quot; alt=&quot;docker pull&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/songquanpeng/one-api/releases/latest&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/downloads/songquanpeng/one-api/total?color=brightgreen&amp;include_prereleases&quot; alt=&quot;release&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://goreportcard.com/report/github.com/songquanpeng/one-api&quot;&gt;
    &lt;img src=&quot;https://goreportcard.com/badge/github.com/songquanpeng/one-api&quot; alt=&quot;GoReportCard&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#ÈÉ®ÁΩ≤&quot;&gt;ÈÉ®ÁΩ≤ÊïôÁ®ã&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#‰ΩøÁî®ÊñπÊ≥ï&quot;&gt;‰ΩøÁî®ÊñπÊ≥ï&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://github.com/songquanpeng/one-api/issues&quot;&gt;ÊÑèËßÅÂèçÈ¶à&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#Êà™ÂõæÂ±ïÁ§∫&quot;&gt;Êà™ÂõæÂ±ïÁ§∫&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://openai.justsong.cn/&quot;&gt;Âú®Á∫øÊºîÁ§∫&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#Â∏∏ËßÅÈóÆÈ¢ò&quot;&gt;Â∏∏ËßÅÈóÆÈ¢ò&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#Áõ∏ÂÖ≥È°πÁõÆ&quot;&gt;Áõ∏ÂÖ≥È°πÁõÆ&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://iamazing.cn/page/reward&quot;&gt;ËµûËµèÊîØÊåÅ&lt;/a&gt;
&lt;/p&gt;

&gt; [!NOTE]
&gt; Êú¨È°πÁõÆ‰∏∫ÂºÄÊ∫êÈ°πÁõÆÔºå‰ΩøÁî®ËÄÖÂøÖÈ°ªÂú®ÈÅµÂæ™ OpenAI ÁöÑ[‰ΩøÁî®Êù°Ê¨æ](https://openai.com/policies/terms-of-use)‰ª•Âèä**Ê≥ïÂæãÊ≥ïËßÑ**ÁöÑÊÉÖÂÜµ‰∏ã‰ΩøÁî®Ôºå‰∏çÂæóÁî®‰∫éÈùûÊ≥ïÁî®ÈÄî„ÄÇ
&gt;
&gt; Ê†πÊçÆ[„ÄäÁîüÊàêÂºè‰∫∫Â∑•Êô∫ËÉΩÊúçÂä°ÁÆ°ÁêÜÊöÇË°åÂäûÊ≥ï„Äã](http://www.cac.gov.cn/2023-07/13/c_1690898327029107.htm)ÁöÑË¶ÅÊ±ÇÔºåËØ∑ÂãøÂØπ‰∏≠ÂõΩÂú∞Âå∫ÂÖ¨‰ºóÊèê‰æõ‰∏ÄÂàáÊú™ÁªèÂ§áÊ°àÁöÑÁîüÊàêÂºè‰∫∫Â∑•Êô∫ËÉΩÊúçÂä°„ÄÇ

&gt; [!NOTE]
&gt; Á®≥ÂÆöÁâà / È¢ÑËßàÁâàÈïúÂÉèÂú∞ÂùÄÔºö[justsong/one-api](https://hub.docker.com/repository/docker/justsong/one-api)
&gt; ÊàñËÄÖ [ghcr.io/songquanpeng/one-api](https://github.com/songquanpeng/one-api/pkgs/container/one-api)
&gt;
&gt; alpha ÁâàÈïúÂÉèÂú∞ÂùÄÔºö[justsong/one-api-alpha](https://hub.docker.com/repository/docker/justsong/one-api-alpha)
&gt; ÊàñËÄÖ [ghcr.io/songquanpeng/one-api-alpha](https://github.com/songquanpeng/one-api/pkgs/container/one-api-alpha)

&gt; [!WARNING]
&gt; ‰ΩøÁî® root Áî®Êà∑ÂàùÊ¨°ÁôªÂΩïÁ≥ªÁªüÂêéÔºåÂä°ÂøÖ‰øÆÊîπÈªòËÆ§ÂØÜÁ†Å `123456`ÔºÅ

## ÂäüËÉΩ
1. ÊîØÊåÅÂ§öÁßçÂ§ßÊ®°ÂûãÔºö
   + [x] [OpenAI ChatGPT Á≥ªÂàóÊ®°Âûã](https://platform.openai.com/docs/guides/gpt/chat-completions-api)ÔºàÊîØÊåÅ [Azure OpenAI API](https://learn.microsoft.com/en-us/azure/ai-services/openai/reference)Ôºâ
   + [x] [Anthropic Claude Á≥ªÂàóÊ®°Âûã](https://anthropic.com) (ÊîØÊåÅ AWS Claude)
   + [x] [Google PaLM2/Gemini Á≥ªÂàóÊ®°Âûã](https://developers.generativeai.google)
   + [x] [Mistral Á≥ªÂàóÊ®°Âûã](https://mistral.ai/)
   + [x] [Â≠óËäÇË∑≥Âä®Ë±ÜÂåÖÂ§ßÊ®°ÂûãÔºàÁÅ´Â±±ÂºïÊìéÔºâ](https://www.volcengine.com/experience/ark?utm_term=202502dsinvite&amp;ac=DSASUQY5&amp;rc=2QXCA1VI)
   + [x] [ÁôæÂ∫¶ÊñáÂøÉ‰∏ÄË®ÄÁ≥ªÂàóÊ®°Âûã](https://cloud.baidu.com/doc/WENXINWORKSHOP/index.html)
   + [x] [ÈòøÈáåÈÄö‰πâÂçÉÈóÆÁ≥ªÂàóÊ®°Âûã](https://help.aliyun.com/document_detail/2400395.html)
   + [x] [ËÆØÈ£ûÊòüÁÅ´ËÆ§Áü•Â§ßÊ®°Âûã](https://www.xfyun.cn/doc/spark/Web.html)
   + [x] [Êô∫Ë∞± ChatGLM Á≥ªÂàóÊ®°Âûã](https://bigmodel.cn)
   + [x] [360 Êô∫ËÑë](https://ai.360.cn)
   + [x] [ËÖæËÆØÊ∑∑ÂÖÉÂ§ßÊ®°Âûã](https://cloud.tencent.com/document/product/1729)
   + [x] [Moonshot AI](https://platform.moonshot.cn/)
   + [x] [ÁôæÂ∑ùÂ§ßÊ®°Âûã](https://platform.baichuan-ai.com)
   + [x] [MINIMAX](https://api.minimax.chat/)
   + [x] [Groq](https://wow.groq.com/)
   + [x] [Ollama](https://github.com/ollama/ollama)
   + [x] [Èõ∂‰∏Ä‰∏áÁâ©](https://platform.lingyiwanwu.com/)
   + [x] [Èò∂Ë∑ÉÊòüËæ∞](https://platform.stepfun.com/)
   + [x] [Coze](https://www.coze.com/)
   + [x] [Cohere](https://cohere.com/)
   + [x] [DeepSeek](https://www.deepseek.com/)
   + [x] [Cloudflare Workers AI](https://developers.cloudflare.com/workers-ai/)
   + [x] [DeepL](https://www.deepl.com/)
   + [x] [together.ai](https://www.together.ai/)
   + [x] [novita.ai](https://www.novita.ai/)
   + [x] [Á°ÖÂü∫ÊµÅÂä® SiliconCloud](https://cloud.siliconflow.cn/i/rKXmRobW)
   + [x] [xAI](https://x.ai/)
2. ÊîØÊåÅÈÖçÁΩÆÈïúÂÉè‰ª•Âèä‰ºóÂ§ö[Á¨¨‰∏âÊñπ‰ª£ÁêÜÊúçÂä°](https://iamazing.cn/page/openai-api-third-party-services)„ÄÇ
3. ÊîØÊåÅÈÄöËøá**Ë¥üËΩΩÂùáË°°**ÁöÑÊñπÂºèËÆøÈóÆÂ§ö‰∏™Ê∏†ÈÅì„ÄÇ
4. ÊîØÊåÅ **stream Ê®°Âºè**ÔºåÂèØ‰ª•ÈÄöËøáÊµÅÂºè‰º†ËæìÂÆûÁé∞ÊâìÂ≠óÊú∫ÊïàÊûú„ÄÇ
5. ÊîØÊåÅ**Â§öÊú∫ÈÉ®ÁΩ≤**Ôºå[ËØ¶ËßÅÊ≠§Â§Ñ](#Â§öÊú∫ÈÉ®ÁΩ≤)„ÄÇ
6. ÊîØÊåÅ**‰ª§ÁâåÁÆ°ÁêÜ**ÔºåËÆæÁΩÆ‰ª§ÁâåÁöÑËøáÊúüÊó∂Èó¥„ÄÅÈ¢ùÂ∫¶„ÄÅÂÖÅËÆ∏ÁöÑ IP ËåÉÂõ¥‰ª•ÂèäÂÖÅËÆ∏ÁöÑÊ®°ÂûãËÆøÈóÆ„ÄÇ
7. ÊîØÊåÅ**ÂÖëÊç¢Á†ÅÁÆ°ÁêÜ**ÔºåÊîØÊåÅÊâπÈáèÁîüÊàêÂíåÂØºÂá∫ÂÖëÊç¢Á†ÅÔºåÂèØ‰ΩøÁî®ÂÖëÊç¢Á†Å‰∏∫Ë¥¶Êà∑ËøõË°åÂÖÖÂÄº„ÄÇ
8. ÊîØÊåÅ**Ê∏†ÈÅìÁÆ°ÁêÜ**ÔºåÊâπÈáèÂàõÂª∫Ê∏†ÈÅì„ÄÇ
9. ÊîØÊåÅ**Áî®Êà∑ÂàÜÁªÑ**‰ª•Âèä**Ê∏†ÈÅìÂàÜÁªÑ**ÔºåÊîØÊåÅ‰∏∫‰∏çÂêåÂàÜÁªÑËÆæÁΩÆ‰∏çÂêåÁöÑÂÄçÁéá„ÄÇ
10. ÊîØÊåÅÊ∏†ÈÅì**ËÆæÁΩÆÊ®°ÂûãÂàóË°®**„ÄÇ
11. ÊîØÊåÅ**Êü•ÁúãÈ¢ùÂ∫¶ÊòéÁªÜ**„ÄÇ
12. ÊîØÊåÅ**Áî®Êà∑ÈÇÄËØ∑Â•ñÂä±**„ÄÇ
13. ÊîØÊåÅ‰ª•ÁæéÂÖÉ‰∏∫Âçï‰ΩçÊòæÁ§∫È¢ùÂ∫¶„ÄÇ
14. ÊîØÊåÅÂèëÂ∏ÉÂÖ¨ÂëäÔºåËÆæÁΩÆÂÖÖÂÄºÈìæÊé•ÔºåËÆæÁΩÆÊñ∞Áî®Êà∑ÂàùÂßãÈ¢ùÂ∫¶„ÄÇ
15. ÊîØÊåÅÊ®°ÂûãÊò†Â∞ÑÔºåÈáçÂÆöÂêëÁî®Êà∑ÁöÑËØ∑Ê±ÇÊ®°ÂûãÔºåÂ¶ÇÊó†ÂøÖË¶ÅËØ∑‰∏çË¶ÅËÆæÁΩÆÔºåËÆæÁΩÆ‰πãÂêé‰ºöÂØºËá¥ËØ∑Ê±Ç‰ΩìË¢´ÈáçÊñ∞ÊûÑÈÄ†ËÄåÈùûÁõ¥Êé•ÈÄè‰º†Ôºå‰ºöÂØºËá¥ÈÉ®ÂàÜËøòÊú™Ê≠£ÂºèÊîØÊåÅÁöÑÂ≠óÊÆµÊó†Ê≥ï‰º†ÈÄíÊàêÂäü„ÄÇ
16. ÊîØÊåÅÂ§±Ë¥•Ëá™Âä®ÈáçËØï„ÄÇ
17. ÊîØÊåÅÁªòÂõæÊé•Âè£„ÄÇ
18. ÊîØÊåÅ [Cloudflare AI Gateway](https://developers.cloudflare.com/ai-gateway/providers/openai/)ÔºåÊ∏†ÈÅìËÆæÁΩÆÁöÑ‰ª£ÁêÜÈÉ®ÂàÜÂ°´ÂÜô `https://gateway.ai.cloudflare.com/v1/ACCOUNT_TAG/GATEWAY/openai` Âç≥ÂèØ„ÄÇ
19. ÊîØÊåÅ‰∏∞ÂØåÁöÑ**Ëá™ÂÆö‰πâ**ËÆæÁΩÆÔºå
    1. ÊîØÊåÅËá™ÂÆö‰πâÁ≥ªÁªüÂêçÁß∞Ôºålogo ‰ª•ÂèäÈ°µËÑö„ÄÇ
    2. ÊîØÊåÅËá™ÂÆö‰πâÈ¶ñÈ°µÂíåÂÖ≥‰∫éÈ°µÈù¢ÔºåÂèØ‰ª•ÈÄâÊã©‰ΩøÁî® HTML &amp; Markdown ‰ª£Á†ÅËøõË°åËá™ÂÆö‰πâÔºåÊàñËÄÖ‰ΩøÁî®‰∏Ä‰∏™ÂçïÁã¨ÁöÑÁΩëÈ°µÈÄöËøá iframe ÂµåÂÖ•„ÄÇ
20. ÊîØÊåÅÈÄöËøáÁ≥ªÁªüËÆøÈóÆ‰ª§ÁâåË∞ÉÁî®ÁÆ°ÁêÜ APIÔºåËøõËÄå**Âú®Êó†ÈúÄ‰∫åÂºÄÁöÑÊÉÖÂÜµ‰∏ãÊâ©Â±ïÂíåËá™ÂÆö‰πâ** One API ÁöÑÂäüËÉΩÔºåËØ¶ÊÉÖËØ∑ÂèÇËÄÉÊ≠§Â§Ñ [API ÊñáÊ°£](./docs/API.md)„ÄÇ
21. ÊîØÊåÅ Cloudflare Turnstile Áî®Êà∑Ê†°È™å„ÄÇ
22. ÊîØÊåÅÁî®Êà∑ÁÆ°ÁêÜÔºåÊîØÊåÅ**Â§öÁßçÁî®Êà∑ÁôªÂΩïÊ≥®ÂÜåÊñπÂºè**Ôºö
    + ÈÇÆÁÆ±ÁôªÂΩïÊ≥®ÂÜåÔºàÊîØÊåÅÊ≥®ÂÜåÈÇÆÁÆ±ÁôΩÂêçÂçïÔºâ‰ª•ÂèäÈÄöËøáÈÇÆÁÆ±ËøõË°åÂØÜÁ†ÅÈáçÁΩÆ„ÄÇ
    + ÊîØÊåÅ[È£û‰π¶ÊéàÊùÉÁôªÂΩï](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/authen-v1/authorize/get)Ôºà[ËøôÈáåÊúâ One API ÁöÑÂÆûÁé∞ÁªÜËäÇÈòêËø∞‰æõÂèÇËÄÉ](https://iamazing.cn/page/feishu-oauth-login)Ôºâ„ÄÇ
    + ÊîØÊåÅ [GitHub ÊéàÊùÉÁôªÂΩï](https://github.com/settings/applications/new)„ÄÇ
    + ÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ÊéàÊùÉÔºàÈúÄË¶ÅÈ¢ùÂ§ñÈÉ®ÁΩ≤ [WeChat Server](https://github.com/songquanpeng/wechat-server)Ôºâ„ÄÇ
23. ÊîØÊåÅ‰∏ªÈ¢òÂàáÊç¢ÔºåËÆæÁΩÆÁéØÂ¢ÉÂèòÈáè `THEME` Âç≥ÂèØÔºåÈªòËÆ§‰∏∫ `default`ÔºåÊ¨¢Ëøé PR Êõ¥Â§ö‰∏ªÈ¢òÔºåÂÖ∑‰ΩìÂèÇËÄÉ[Ê≠§Â§Ñ](./web/README.md)„ÄÇ
24. ÈÖçÂêà [Message Pusher](https://github.com/songquanpeng/message-pusher) ÂèØÂ∞ÜÊä•Ë≠¶‰ø°ÊÅØÊé®ÈÄÅÂà∞Â§öÁßç App ‰∏ä„ÄÇ

## ÈÉ®ÁΩ≤
### Âü∫‰∫é Docker ËøõË°åÈÉ®ÁΩ≤
```shell
# ‰ΩøÁî® SQLite ÁöÑÈÉ®ÁΩ≤ÂëΩ‰ª§Ôºö
docker run --name one-api -d --restart always -p 3000:3000 -e TZ=Asia/Shanghai -v /home/ubuntu/data/one-api:/data justsong/one-api
# ‰ΩøÁî® MySQL ÁöÑÈÉ®ÁΩ≤ÂëΩ‰ª§ÔºåÂú®‰∏äÈù¢ÁöÑÂü∫Á°Ä‰∏äÊ∑ªÂä† `-e SQL_DSN=&quot;root:123456@tcp(localhost:3306)/oneapi&quot;`ÔºåËØ∑Ëá™Ë°å‰øÆÊîπÊï∞ÊçÆÂ∫ìËøûÊé•ÂèÇÊï∞Ôºå‰∏çÊ∏ÖÊ•öÂ¶Ç‰Ωï‰øÆÊîπËØ∑ÂèÇËßÅ‰∏ãÈù¢ÁéØÂ¢ÉÂèòÈáè‰∏ÄËäÇ„ÄÇ
# ‰æãÂ¶ÇÔºö
docker run --name one-api -d --restart always -p 3000:3000 -e SQL_DSN=&quot;root:123456@tcp(localhost:3306)/oneapi&quot; -e TZ=Asia/Shanghai -v /home/ubuntu/data/one-api:/data justsong/one-api
```

ÂÖ∂‰∏≠Ôºå`-p 3000:3000` ‰∏≠ÁöÑÁ¨¨‰∏Ä‰∏™ `3000` ÊòØÂÆø‰∏ªÊú∫ÁöÑÁ´ØÂè£ÔºåÂèØ‰ª•Ê†πÊçÆÈúÄË¶ÅËøõË°å‰øÆÊîπ„ÄÇ

Êï∞ÊçÆÂíåÊó•ÂøóÂ∞Ü‰ºö‰øùÂ≠òÂú®ÂÆø‰∏ªÊú∫ÁöÑ `/home/ubuntu/data/one-api` ÁõÆÂΩïÔºåËØ∑Á°Æ‰øùËØ•ÁõÆÂΩïÂ≠òÂú®‰∏îÂÖ∑ÊúâÂÜôÂÖ•ÊùÉÈôêÔºåÊàñËÄÖÊõ¥Êîπ‰∏∫ÂêàÈÄÇÁöÑÁõÆÂΩï„ÄÇ

Â¶ÇÊûúÂêØÂä®Â§±Ë¥•ÔºåËØ∑Ê∑ªÂä† `--privileged=true`ÔºåÂÖ∑‰ΩìÂèÇËÄÉ https://github.com/songquanpeng/one-api/issues/482 „ÄÇ

Â¶ÇÊûú‰∏äÈù¢ÁöÑÈïúÂÉèÊó†Ê≥ïÊãâÂèñÔºåÂèØ‰ª•Â∞ùËØï‰ΩøÁî® GitHub ÁöÑ Docker ÈïúÂÉèÔºåÂ∞Ü‰∏äÈù¢ÁöÑ `justsong/one-api` ÊõøÊç¢‰∏∫ `ghcr.io/songquanpeng/one-api` Âç≥ÂèØ„ÄÇ

Â¶ÇÊûú‰Ω†ÁöÑÂπ∂ÂèëÈáèËæÉÂ§ßÔºå**Âä°ÂøÖ**ËÆæÁΩÆ `SQL_DSN`ÔºåËØ¶ËßÅ‰∏ãÈù¢[ÁéØÂ¢ÉÂèòÈáè](#ÁéØÂ¢ÉÂèòÈáè)‰∏ÄËäÇ„ÄÇ

Êõ¥Êñ∞ÂëΩ‰ª§Ôºö`docker run --rm -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower -cR`

Nginx ÁöÑÂèÇËÄÉÈÖçÁΩÆÔºö
```
server{
   server_name openai.justsong.cn;  # ËØ∑Ê†πÊçÆÂÆûÈôÖÊÉÖÂÜµ‰øÆÊîπ‰Ω†ÁöÑÂüüÂêç

   location / {
          client_max_body_size  64m;
          proxy_http_version 1.1;
          proxy_pass http://localhost:3000;  # ËØ∑Ê†πÊçÆÂÆûÈôÖÊÉÖÂÜµ‰øÆÊîπ‰Ω†ÁöÑÁ´ØÂè£
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $remote_addr;
          proxy_cache_bypass $http_upgrade;
          proxy_set_header Accept-Encoding gzip;
          proxy_read_timeout 300s;  # GPT-4 ÈúÄË¶ÅËæÉÈïøÁöÑË∂ÖÊó∂Êó∂Èó¥ÔºåËØ∑Ëá™Ë°åË∞ÉÊï¥
   }
}
```

‰πãÂêé‰ΩøÁî® Let&#039;s Encrypt ÁöÑ certbot ÈÖçÁΩÆ HTTPSÔºö
```bash
# Ubuntu ÂÆâË£Ö certbotÔºö
sudo snap install --classic certbot
sudo ln -s /snap/bin/certbot /usr/bin/certbot
# ÁîüÊàêËØÅ‰π¶ &amp; ‰øÆÊîπ Nginx ÈÖçÁΩÆ
sudo certbot --nginx
# Ê†πÊçÆÊåáÁ§∫ËøõË°åÊìç‰Ωú
# ÈáçÂêØ Nginx
sudo service nginx restart
```

ÂàùÂßãË¥¶Âè∑Áî®Êà∑Âêç‰∏∫ `root`ÔºåÂØÜÁ†Å‰∏∫ `123456`„ÄÇ

### ÈÄöËøáÂÆùÂ°îÈù¢ÊùøËøõË°å‰∏ÄÈîÆÈÉ®ÁΩ≤
1. ÂÆâË£ÖÂÆùÂ°îÈù¢Êùø9.2.0Âèä‰ª•‰∏äÁâàÊú¨ÔºåÂâçÂæÄ [ÂÆùÂ°îÈù¢Êùø](https://www.bt.cn/new/download.html?r=dk_oneapi) ÂÆòÁΩëÔºåÈÄâÊã©Ê≠£ÂºèÁâàÁöÑËÑöÊú¨‰∏ãËΩΩÂÆâË£ÖÔºõ
2. ÂÆâË£ÖÂêéÁôªÂΩïÂÆùÂ°îÈù¢ÊùøÔºåÂú®Â∑¶‰æßËèúÂçïÊ†è‰∏≠ÁÇπÂáª `Docker`ÔºåÈ¶ñÊ¨°ËøõÂÖ•‰ºöÊèêÁ§∫ÂÆâË£Ö `Docker` ÊúçÂä°ÔºåÁÇπÂáªÁ´ãÂç≥ÂÆâË£ÖÔºåÊåâÊèêÁ§∫ÂÆåÊàêÂÆâË£ÖÔºõ
3. ÂÆâË£ÖÂÆåÊàêÂêéÂú®Â∫îÁî®ÂïÜÂ∫ó‰∏≠ÊêúÁ¥¢ `One-API`ÔºåÁÇπÂáªÂÆâË£ÖÔºåÈÖçÁΩÆÂüüÂêçÁ≠âÂü∫Êú¨‰ø°ÊÅØÂç≥ÂèØÂÆåÊàêÂÆâË£ÖÔºõ

### Âü∫‰∫é Docker Compose ËøõË°åÈÉ®ÁΩ≤

&gt; ‰ªÖÂêØÂä®ÊñπÂºè‰∏çÂêåÔºåÂèÇÊï∞ËÆæÁΩÆ‰∏çÂèòÔºåËØ∑ÂèÇËÄÉÂü∫‰∫é Docker ÈÉ®ÁΩ≤ÈÉ®ÂàÜ

```shell
# ÁõÆÂâçÊîØÊåÅ MySQL ÂêØÂä®ÔºåÊï∞ÊçÆÂ≠òÂÇ®Âú® ./data/mysql Êñá‰ª∂Â§πÂÜÖ
docker-compose up -d

# Êü•ÁúãÈÉ®ÁΩ≤Áä∂ÊÄÅ
docker-compose ps
```

### ÊâãÂä®ÈÉ®ÁΩ≤
1. ‰ªé [GitHub Releases](https://github.com/songquanpeng/one-api/releases/latest) ‰∏ãËΩΩÂèØÊâßË°åÊñá‰ª∂ÊàñËÄÖ‰ªéÊ∫êÁ†ÅÁºñËØëÔºö
   ```shell
   git clone https://github.com/songquanpeng/one-api.git

   # ÊûÑÂª∫ÂâçÁ´Ø
   cd one-api/web/default
   npm install
   npm run build

   # ÊûÑÂª∫ÂêéÁ´Ø
   cd ../..
   go mod download
   go build -ldflags &quot;-s -w&quot; -o one-api
   ````
2. ËøêË°åÔºö
   ```shell
   chmod u+x one-api
   ./one-api --port 3000 --log-dir ./logs
   ```
3. ËÆøÈóÆ [http://localhost:3000/](http://localhost:3000/) Âπ∂ÁôªÂΩï„ÄÇÂàùÂßãË¥¶Âè∑Áî®Êà∑Âêç‰∏∫ `root`ÔºåÂØÜÁ†Å‰∏∫ `123456`„ÄÇ

Êõ¥Âä†ËØ¶ÁªÜÁöÑÈÉ®ÁΩ≤ÊïôÁ®ã[ÂèÇËßÅÊ≠§Â§Ñ](https://iamazing.cn/page/how-to-deploy-a-website)„ÄÇ

### Â§öÊú∫ÈÉ®ÁΩ≤
1. ÊâÄÊúâÊúçÂä°Âô® `SESSION_SECRET` ËÆæÁΩÆ‰∏ÄÊ†∑ÁöÑÂÄº„ÄÇ
2. ÂøÖÈ°ªËÆæÁΩÆ `SQL_DSN`Ôºå‰ΩøÁî® MySQL Êï∞ÊçÆÂ∫ìËÄåÈùû SQLiteÔºåÊâÄÊúâÊúçÂä°Âô®ËøûÊé•Âêå‰∏Ä‰∏™Êï∞ÊçÆÂ∫ì„ÄÇ
3. ÊâÄÊúâ‰ªéÊúçÂä°Âô®ÂøÖÈ°ªËÆæÁΩÆ `NODE_TYPE` ‰∏∫ `slave`Ôºå‰∏çËÆæÁΩÆÂàôÈªòËÆ§‰∏∫‰∏ªÊúçÂä°Âô®„ÄÇ
4. ËÆæÁΩÆ `SYNC_FREQUENCY` ÂêéÊúçÂä°Âô®Â∞ÜÂÆöÊúü‰ªéÊï∞ÊçÆÂ∫ìÂêåÊ≠•ÈÖçÁΩÆÔºåÂú®‰ΩøÁî®ËøúÁ®ãÊï∞ÊçÆÂ∫ìÁöÑÊÉÖÂÜµ‰∏ãÔºåÊé®ËçêËÆæÁΩÆËØ•È°πÂπ∂ÂêØÁî® RedisÔºåÊó†ËÆ∫‰∏ª‰ªé„ÄÇ
5. ‰ªéÊúçÂä°Âô®ÂèØ‰ª•ÈÄâÊã©ËÆæÁΩÆ `FRONTEND_BASE_URL`Ôºå‰ª•ÈáçÂÆöÂêëÈ°µÈù¢ËØ∑Ê±ÇÂà∞‰∏ªÊúçÂä°Âô®„ÄÇ
6. ‰ªéÊúçÂä°Âô®‰∏ä**ÂàÜÂà´**Ë£ÖÂ•Ω RedisÔºåËÆæÁΩÆÂ•Ω `REDIS_CONN_STRING`ÔºåËøôÊ†∑ÂèØ‰ª•ÂÅöÂà∞Âú®ÁºìÂ≠òÊú™ËøáÊúüÁöÑÊÉÖÂÜµ‰∏ãÊï∞ÊçÆÂ∫ìÈõ∂ËÆøÈóÆÔºåÂèØ‰ª•ÂáèÂ∞ëÂª∂ËøüÔºàRedis ÈõÜÁæ§ÊàñËÄÖÂì®ÂÖµÊ®°ÂºèÁöÑÊîØÊåÅËØ∑ÂèÇËÄÉÁéØÂ¢ÉÂèòÈáèËØ¥ÊòéÔºâ„ÄÇ
7. Â¶ÇÊûú‰∏ªÊúçÂä°Âô®ËÆøÈóÆÊï∞ÊçÆÂ∫ìÂª∂Ëøü‰πüÊØîËæÉÈ´òÔºåÂàô‰πüÈúÄË¶ÅÂêØÁî® RedisÔºåÂπ∂ËÆæÁΩÆ `SYNC_FREQUENCY`Ôºå‰ª•ÂÆöÊúü‰ªéÊï∞ÊçÆÂ∫ìÂêåÊ≠•ÈÖçÁΩÆ„ÄÇ

ÁéØÂ¢ÉÂèòÈáèÁöÑÂÖ∑‰Ωì‰ΩøÁî®ÊñπÊ≥ïËØ¶ËßÅ[Ê≠§Â§Ñ](#ÁéØÂ¢ÉÂèòÈáè)„ÄÇ

### ÂÆùÂ°îÈÉ®ÁΩ≤ÊïôÁ®ã

ËØ¶ËßÅ [#175](https://github.com/songquanpeng/one-api/issues/175)„ÄÇ

Â¶ÇÊûúÈÉ®ÁΩ≤ÂêéËÆøÈóÆÂá∫Áé∞Á©∫ÁôΩÈ°µÈù¢ÔºåËØ¶ËßÅ [#97](https://github.com/songquanpeng/one-api/issues/97)„ÄÇ

### ÈÉ®ÁΩ≤Á¨¨‰∏âÊñπÊúçÂä°ÈÖçÂêà One API ‰ΩøÁî®
&gt; Ê¨¢Ëøé PR Ê∑ªÂä†Êõ¥Â§öÁ§∫‰æã„ÄÇ

#### ChatGPT Next Web
È°πÁõÆ‰∏ªÈ°µÔºöhttps://github.com/Yidadaa/ChatGPT-Next-Web

```bash
docker run --name chat-next-web -d -p 3001:3000 yidadaa/chatgpt-next-web
```

Ê≥®ÊÑè‰øÆÊîπÁ´ØÂè£Âè∑Ôºå‰πãÂêéÂú®È°µÈù¢‰∏äËÆæÁΩÆÊé•Âè£Âú∞ÂùÄÔºà‰æãÂ¶ÇÔºöhttps://openai.justsong.cn/ ÔºâÂíå API Key Âç≥ÂèØ„ÄÇ

#### ChatGPT Web
È°πÁõÆ‰∏ªÈ°µÔºöhttps://github.com/Chanzhaoyu/chatgpt-web

```bash
docker run --name chatgpt-web -d -p 3002:3002 -e OPENAI_API_BASE_URL=https://openai.justsong.cn -e OPENAI_API_KEY=sk-xxx chenzhaoyu94/chatgpt-web
```

Ê≥®ÊÑè‰øÆÊîπÁ´ØÂè£Âè∑„ÄÅ`OPENAI_API_BASE_URL` Âíå `OPENAI_API_KEY`„ÄÇ

#### QChatGPT - QQÊú∫Âô®‰∫∫
È°πÁõÆ‰∏ªÈ°µÔºöhttps://github.com/RockChinQ/QChatGPT

Ê†πÊçÆ[ÊñáÊ°£](https://qchatgpt.rockchin.top)ÂÆåÊàêÈÉ®ÁΩ≤ÂêéÔºåÂú® `data/provider.json`ËÆæÁΩÆ`requester.openai-chat-completions.base-url`‰∏∫ One API ÂÆû‰æãÂú∞ÂùÄÔºåÂπ∂Â°´ÂÜô API Key Âà∞ `keys.openai` ÁªÑ‰∏≠ÔºåËÆæÁΩÆ `model` ‰∏∫Ë¶Å‰ΩøÁî®ÁöÑÊ®°ÂûãÂêçÁß∞„ÄÇ

ËøêË°åÊúüÈó¥ÂèØ‰ª•ÈÄöËøá`!model`ÂëΩ‰ª§Êü•Áúã„ÄÅÂàáÊç¢ÂèØÁî®Ê®°Âûã„ÄÇ

### ÈÉ®ÁΩ≤Âà∞Á¨¨‰∏âÊñπÂπ≥Âè∞
&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;ÈÉ®ÁΩ≤Âà∞ Sealos &lt;/strong&gt;&lt;/summary&gt;
&lt;div&gt;

&gt; Sealos ÁöÑÊúçÂä°Âô®Âú®ÂõΩÂ§ñÔºå‰∏çÈúÄË¶ÅÈ¢ùÂ§ñÂ§ÑÁêÜÁΩëÁªúÈóÆÈ¢òÔºåÊîØÊåÅÈ´òÂπ∂Âèë &amp; Âä®ÊÄÅ‰º∏Áº©„ÄÇ

ÁÇπÂáª‰ª•‰∏ãÊåâÈíÆ‰∏ÄÈîÆÈÉ®ÁΩ≤ÔºàÈÉ®ÁΩ≤ÂêéËÆøÈóÆÂá∫Áé∞ 404 ËØ∑Á≠âÂæÖ 3~5 ÂàÜÈíüÔºâÔºö

[![Deploy-on-Sealos.svg](https://raw.githubusercontent.com/labring-actions/templates/main/Deploy-on-Sealos.svg)](https://cloud.sealos.io/?openapp=system-fastdeploy?templateName=one-api)

&lt;/div&gt;
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;ÈÉ®ÁΩ≤Âà∞ Zeabur&lt;/strong&gt;&lt;/summary&gt;
&lt;div&gt;

&gt; Zeabur ÁöÑÊúçÂä°Âô®Âú®ÂõΩÂ§ñÔºåËá™Âä®Ëß£ÂÜ≥‰∫ÜÁΩëÁªúÁöÑÈóÆÈ¢òÔºåÂêåÊó∂ÂÖçË¥πÁöÑÈ¢ùÂ∫¶‰πüË∂≥Â§ü‰∏™‰∫∫‰ΩøÁî®

[![Deploy on Zeabur](https://zeabur.com/button.svg)](https://zeabur.com/templates/7Q0KO3)

1. È¶ñÂÖà fork ‰∏Ä‰ªΩ‰ª£Á†Å„ÄÇ
2. ËøõÂÖ• [Zeabur](https://zeabur.com?referralCode=songquanpeng)ÔºåÁôªÂΩïÔºåËøõÂÖ•ÊéßÂà∂Âè∞„ÄÇ
3. Êñ∞Âª∫‰∏Ä‰∏™ ProjectÔºåÂú® Service -&gt; Add Service ÈÄâÊã© MarketplaceÔºåÈÄâÊã© MySQLÔºåÂπ∂ËÆ∞‰∏ãËøûÊé•ÂèÇÊï∞ÔºàÁî®Êà∑Âêç„ÄÅÂØÜÁ†Å„ÄÅÂú∞ÂùÄ„ÄÅÁ´ØÂè£Ôºâ„ÄÇ
4. Â§çÂà∂ÈìæÊé•ÂèÇÊï∞ÔºåËøêË°å ```create database `one-api` ``` ÂàõÂª∫Êï∞ÊçÆÂ∫ì„ÄÇ
5. ÁÑ∂ÂêéÂú® Service -&gt; Add ServiceÔºåÈÄâÊã© GitÔºàÁ¨¨‰∏ÄÊ¨°‰ΩøÁî®ÈúÄË¶ÅÂÖàÊéàÊùÉÔºâÔºåÈÄâÊã©‰Ω† fork ÁöÑ‰ªìÂ∫ì„ÄÇ
6. Deploy ‰ºöËá™Âä®ÂºÄÂßãÔºåÂÖàÂèñÊ∂à„ÄÇËøõÂÖ•‰∏ãÊñπ VariableÔºåÊ∑ªÂä†‰∏Ä‰∏™ `PORT`ÔºåÂÄº‰∏∫ `3000`ÔºåÂÜçÊ∑ªÂä†‰∏Ä‰∏™ `SQL_DSN`ÔºåÂÄº‰∏∫ `&lt;username&gt;:&lt;password&gt;@tcp(&lt;addr&gt;:&lt;port&gt;)/one-api` ÔºåÁÑ∂Âêé‰øùÂ≠ò„ÄÇ Ê≥®ÊÑèÂ¶ÇÊûú‰∏çÂ°´ÂÜô `SQL_DSN`ÔºåÊï∞ÊçÆÂ∞ÜÊó†Ê≥ïÊåÅ‰πÖÂåñÔºåÈáçÊñ∞ÈÉ®ÁΩ≤ÂêéÊï∞ÊçÆ‰ºö‰∏¢Â§±„ÄÇ
7. ÈÄâÊã© Redeploy„ÄÇ
8. ËøõÂÖ•‰∏ãÊñπ DomainsÔºåÈÄâÊã©‰∏Ä‰∏™ÂêàÈÄÇÁöÑÂüüÂêçÂâçÁºÄÔºåÂ¶Ç &quot;my-one-api&quot;ÔºåÊúÄÁªàÂüüÂêç‰∏∫ &quot;my-one-api.zeabur.app&quot;Ôºå‰πüÂèØ‰ª• CNAME Ëá™Â∑±ÁöÑÂüüÂêç„ÄÇ
9. Á≠âÂæÖÈÉ®ÁΩ≤ÂÆåÊàêÔºåÁÇπÂáªÁîüÊàêÁöÑÂüüÂêçËøõÂÖ• One API„ÄÇ

&lt;/div&gt;
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;ÈÉ®ÁΩ≤Âà∞ Render&lt;/strong&gt;&lt;/summary&gt;
&lt;div&gt;

&gt; Render Êèê‰æõÂÖçË¥πÈ¢ùÂ∫¶ÔºåÁªëÂç°ÂêéÂèØ‰ª•Ëøõ‰∏ÄÊ≠•ÊèêÂçáÈ¢ùÂ∫¶

Render ÂèØ‰ª•Áõ¥Êé•ÈÉ®ÁΩ≤ docker ÈïúÂÉèÔºå‰∏çÈúÄË¶Å fork ‰ªìÂ∫ìÔºöhttps://dashboard.render.com

&lt;/div&gt;
&lt;/details&gt;

## ÈÖçÁΩÆ
Á≥ªÁªüÊú¨Ë∫´ÂºÄÁÆ±Âç≥Áî®„ÄÇ

‰Ω†ÂèØ‰ª•ÈÄöËøáËÆæÁΩÆÁéØÂ¢ÉÂèòÈáèÊàñËÄÖÂëΩ‰ª§Ë°åÂèÇÊï∞ËøõË°åÈÖçÁΩÆ„ÄÇ

Á≠âÂà∞Á≥ªÁªüÂêØÂä®ÂêéÔºå‰ΩøÁî® `root` Áî®Êà∑ÁôªÂΩïÁ≥ªÁªüÂπ∂ÂÅöËøõ‰∏ÄÊ≠•ÁöÑÈÖçÁΩÆ„ÄÇ

**Note**ÔºöÂ¶ÇÊûú‰Ω†‰∏çÁü•ÈÅìÊüê‰∏™ÈÖçÁΩÆÈ°πÁöÑÂê´‰πâÔºåÂèØ‰ª•‰∏¥Êó∂Âà†ÊéâÂÄº‰ª•ÁúãÂà∞Ëøõ‰∏ÄÊ≠•ÁöÑÊèêÁ§∫ÊñáÂ≠ó„ÄÇ

## ‰ΩøÁî®ÊñπÊ≥ï
Âú®`Ê∏†ÈÅì`È°µÈù¢‰∏≠Ê∑ªÂä†‰Ω†ÁöÑ API KeyÔºå‰πãÂêéÂú®`‰ª§Áâå`È°µÈù¢‰∏≠Êñ∞Â¢ûËÆøÈóÆ‰ª§Áâå„ÄÇ

‰πãÂêéÂ∞±ÂèØ‰ª•‰ΩøÁî®‰Ω†ÁöÑ‰ª§ÁâåËÆøÈóÆ One API ‰∫ÜÔºå‰ΩøÁî®ÊñπÂºè‰∏é [OpenAI API](https://platform.openai.com/docs/api-reference/introduction) ‰∏ÄËá¥„ÄÇ

‰Ω†ÈúÄË¶ÅÂú®ÂêÑÁßçÁî®Âà∞ OpenAI API ÁöÑÂú∞ÊñπËÆæÁΩÆ API Base ‰∏∫‰Ω†ÁöÑ One API ÁöÑÈÉ®ÁΩ≤Âú∞ÂùÄÔºå‰æãÂ¶ÇÔºö`https://openai.justsong.cn`ÔºåAPI Key Âàô‰∏∫‰Ω†Âú® One API ‰∏≠ÁîüÊàêÁöÑ‰ª§Áâå„ÄÇ

Ê≥®ÊÑèÔºåÂÖ∑‰ΩìÁöÑ API Base ÁöÑÊ†ºÂºèÂèñÂÜ≥‰∫é‰Ω†ÊâÄ‰ΩøÁî®ÁöÑÂÆ¢Êà∑Á´Ø„ÄÇ

‰æãÂ¶ÇÂØπ‰∫é OpenAI ÁöÑÂÆòÊñπÂ∫ìÔºö
```bash
OPENAI_API_KEY=&quot;sk-xxxxxx&quot;
OPENAI_API_BASE=&quot;https://&lt;HOST&gt;:&lt;PORT&gt;/v1&quot;
```

```mermaid
graph LR
    A(Áî®Êà∑)
    A ---&gt;|‰ΩøÁî® One API ÂàÜÂèëÁöÑ key ËøõË°åËØ∑Ê±Ç| B(One API)
    B --&gt;|‰∏≠ÁªßËØ∑Ê±Ç| C(OpenAI)
    B --&gt;|‰∏≠ÁªßËØ∑Ê±Ç| D(Azure)
    B --&gt;|‰∏≠ÁªßËØ∑Ê±Ç| E(ÂÖ∂‰ªñ OpenAI API Ê†ºÂºè‰∏ãÊ∏∏Ê∏†ÈÅì)
    B --&gt;|‰∏≠ÁªßÂπ∂‰øÆÊîπËØ∑Ê±Ç‰ΩìÂíåËøîÂõû‰Ωì| F(Èùû OpenAI API Ê†ºÂºè‰∏ãÊ∏∏Ê∏†ÈÅì)
```

ÂèØ‰ª•ÈÄöËøáÂú®‰ª§ÁâåÂêéÈù¢Ê∑ªÂä†Ê∏†ÈÅì ID ÁöÑÊñπÂºèÊåáÂÆö‰ΩøÁî®Âì™‰∏Ä‰∏™Ê∏†ÈÅìÂ§ÑÁêÜÊú¨Ê¨°ËØ∑Ê±ÇÔºå‰æãÂ¶ÇÔºö`Authorization: Bearer ONE_API_KEY-CHANNEL_ID`„ÄÇ
Ê≥®ÊÑèÔºåÈúÄË¶ÅÊòØÁÆ°ÁêÜÂëòÁî®Êà∑ÂàõÂª∫ÁöÑ‰ª§ÁâåÊâçËÉΩÊåáÂÆöÊ∏†ÈÅì ID„ÄÇ

‰∏çÂä†ÁöÑËØùÂ∞Ü‰ºö‰ΩøÁî®Ë¥üËΩΩÂùáË°°ÁöÑÊñπÂºè‰ΩøÁî®Â§ö‰∏™Ê∏†ÈÅì„ÄÇ

### ÁéØÂ¢ÉÂèòÈáè
&gt; One API ÊîØÊåÅ‰ªé `.env` Êñá‰ª∂‰∏≠ËØªÂèñÁéØÂ¢ÉÂèòÈáèÔºåËØ∑ÂèÇÁÖß `.env.example` Êñá‰ª∂Ôºå‰ΩøÁî®Êó∂ËØ∑Â∞ÜÂÖ∂ÈáçÂëΩÂêç‰∏∫ `.env`„ÄÇ
1. `REDIS_CONN_STRING`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞Ü‰ΩøÁî® Redis ‰Ωú‰∏∫ÁºìÂ≠ò‰ΩøÁî®„ÄÇ
   + ‰æãÂ≠êÔºö`REDIS_CONN_STRING=redis://default:redispw@localhost:49153`
   + Â¶ÇÊûúÊï∞ÊçÆÂ∫ìËÆøÈóÆÂª∂ËøüÂæà‰ΩéÔºåÊ≤°ÊúâÂøÖË¶ÅÂêØÁî® RedisÔºåÂêØÁî®ÂêéÂèçËÄå‰ºöÂá∫Áé∞Êï∞ÊçÆÊªûÂêéÁöÑÈóÆÈ¢ò„ÄÇ
   + Â¶ÇÊûúÈúÄË¶Å‰ΩøÁî®Âì®ÂÖµÊàñËÄÖÈõÜÁæ§Ê®°ÂºèÔºö
     + ÂàôÈúÄË¶ÅÊääËØ•ÁéØÂ¢ÉÂèòÈáèËÆæÁΩÆ‰∏∫ËäÇÁÇπÂàóË°®Ôºå‰æãÂ¶ÇÔºö`localhost:49153,localhost:49154,localhost:49155`„ÄÇ
     + Èô§Ê≠§‰πãÂ§ñËøòÈúÄË¶ÅËÆæÁΩÆ‰ª•‰∏ãÁéØÂ¢ÉÂèòÈáèÔºö
       + `REDIS_PASSWORD`ÔºöRedis ÈõÜÁæ§ÊàñËÄÖÂì®ÂÖµÊ®°Âºè‰∏ãÁöÑÂØÜÁ†ÅËÆæÁΩÆ„ÄÇ
       + `REDIS_MASTER_NAME`ÔºöRedis Âì®ÂÖµÊ®°Âºè‰∏ã‰∏ªËäÇÁÇπÁöÑÂêçÁß∞„ÄÇ
2. `SESSION_SECRET`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞Ü‰ΩøÁî®Âõ∫ÂÆöÁöÑ‰ºöËØùÂØÜÈí•ÔºåËøôÊ†∑Á≥ªÁªüÈáçÊñ∞ÂêØÂä®ÂêéÂ∑≤ÁôªÂΩïÁî®Êà∑ÁöÑ cookie Â∞Ü‰æùÊóßÊúâÊïà„ÄÇ
   + ‰æãÂ≠êÔºö`SESSION_SECRET=random_string`
3. `SQL_DSN`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞Ü‰ΩøÁî®ÊåáÂÆöÊï∞ÊçÆÂ∫ìËÄåÈùû SQLiteÔºåËØ∑‰ΩøÁî® MySQL Êàñ PostgreSQL„ÄÇ
   + ‰æãÂ≠êÔºö
     + MySQLÔºö`SQL_DSN=root:123456@tcp(localhost:3306)/oneapi`
     + PostgreSQLÔºö`SQL_DSN=postgres://postgres:123456@localhost:5432/oneapi`ÔºàÈÄÇÈÖç‰∏≠ÔºåÊ¨¢ËøéÂèçÈ¶àÔºâ
   + Ê≥®ÊÑèÈúÄË¶ÅÊèêÂâçÂª∫Á´ãÊï∞ÊçÆÂ∫ì `oneapi`ÔºåÊó†ÈúÄÊâãÂä®Âª∫Ë°®ÔºåÁ®ãÂ∫èÂ∞ÜËá™Âä®Âª∫Ë°®„ÄÇ
   + Â¶ÇÊûú‰ΩøÁî®Êú¨Âú∞Êï∞ÊçÆÂ∫ìÔºöÈÉ®ÁΩ≤ÂëΩ‰ª§ÂèØÊ∑ªÂä† `--network=&quot;host&quot;` ‰ª•‰ΩøÂæóÂÆπÂô®ÂÜÖÁöÑÁ®ãÂ∫èÂèØ‰ª•ËÆøÈóÆÂà∞ÂÆø‰∏ªÊú∫‰∏äÁöÑ MySQL„ÄÇ
   + Â¶ÇÊûú‰ΩøÁî®‰∫ëÊï∞ÊçÆÂ∫ìÔºöÂ¶ÇÊûú‰∫ëÊúçÂä°Âô®ÈúÄË¶ÅÈ™åËØÅË∫´‰ªΩÔºåÈúÄË¶ÅÂú®ËøûÊé•ÂèÇÊï∞‰∏≠Ê∑ªÂä† `?tls=skip-verify`„ÄÇ
   + ËØ∑Ê†πÊçÆ‰Ω†ÁöÑÊï∞ÊçÆÂ∫ìÈÖçÁΩÆ‰øÆÊîπ‰∏ãÂàóÂèÇÊï∞ÔºàÊàñËÄÖ‰øùÊåÅÈªòËÆ§ÂÄºÔºâÔºö
     + `SQL_MAX_IDLE_CONNS`ÔºöÊúÄÂ§ßÁ©∫Èó≤ËøûÊé•Êï∞ÔºåÈªòËÆ§‰∏∫ `100`„ÄÇ
     + `SQL_MAX_OPEN_CONNS`ÔºöÊúÄÂ§ßÊâìÂºÄËøûÊé•Êï∞ÔºåÈªòËÆ§‰∏∫ `1000`„ÄÇ
       + Â¶ÇÊûúÊä•Èîô `Error 1040: Too many connections`ÔºåËØ∑ÈÄÇÂΩìÂáèÂ∞èËØ•ÂÄº„ÄÇ
     + `SQL_CONN_MAX_LIFETIME`ÔºöËøûÊé•ÁöÑÊúÄÂ§ßÁîüÂëΩÂë®ÊúüÔºåÈªòËÆ§‰∏∫ `60`ÔºåÂçï‰ΩçÂàÜÈíü„ÄÇ
4. `LOG_SQL_DSN`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞Ü‰∏∫ `logs` Ë°®‰ΩøÁî®Áã¨Á´ãÁöÑÊï∞ÊçÆÂ∫ìÔºåËØ∑‰ΩøÁî® MySQL Êàñ PostgreSQL„ÄÇ
5. `FRONTEND_BASE_URL`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞ÜÈáçÂÆöÂêëÈ°µÈù¢ËØ∑Ê±ÇÂà∞ÊåáÂÆöÁöÑÂú∞ÂùÄÔºå‰ªÖÈôê‰ªéÊúçÂä°Âô®ËÆæÁΩÆ„ÄÇ
   + ‰æãÂ≠êÔºö`FRONTEND_BASE_URL=https://openai.justsong.cn`
6. `MEMORY_CACHE_ENABLED`ÔºöÂêØÁî®ÂÜÖÂ≠òÁºìÂ≠òÔºå‰ºöÂØºËá¥Áî®Êà∑È¢ùÂ∫¶ÁöÑÊõ¥Êñ∞Â≠òÂú®‰∏ÄÂÆöÁöÑÂª∂ËøüÔºåÂèØÈÄâÂÄº‰∏∫ `true` Âíå `false`ÔºåÊú™ËÆæÁΩÆÂàôÈªòËÆ§‰∏∫ `false`„ÄÇ
   + ‰æãÂ≠êÔºö`MEMORY_CACHE_ENABLED=true`
7. `SYNC_FREQUENCY`ÔºöÂú®ÂêØÁî®ÁºìÂ≠òÁöÑÊÉÖÂÜµ‰∏ã‰∏éÊï∞ÊçÆÂ∫ìÂêåÊ≠•ÈÖçÁΩÆÁöÑÈ¢ëÁéáÔºåÂçï‰Ωç‰∏∫ÁßíÔºåÈªòËÆ§‰∏∫ `600` Áßí„ÄÇ
   + ‰æãÂ≠êÔºö`SYNC_FREQUENCY=60`
8. `NODE_TYPE`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞ÜÊåáÂÆöËäÇÁÇπÁ±ªÂûãÔºåÂèØÈÄâÂÄº‰∏∫ `master` Âíå `slave`ÔºåÊú™ËÆæÁΩÆÂàôÈªòËÆ§‰∏∫ `master`„ÄÇ
   + ‰æãÂ≠êÔºö`NODE_TYPE=slave`
9. `CHANNEL_UPDATE_FREQUENCY`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞ÜÂÆöÊúüÊõ¥Êñ∞Ê∏†ÈÅì‰ΩôÈ¢ùÔºåÂçï‰Ωç‰∏∫ÂàÜÈíüÔºåÊú™ËÆæÁΩÆÂàô‰∏çËøõË°åÊõ¥Êñ∞„ÄÇ
   + ‰æãÂ≠êÔºö`CHANNEL_UPDATE_FREQUENCY=1440`
10. `CHANNEL_TEST_FREQUENCY`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞ÜÂÆöÊúüÊ£ÄÊü•Ê∏†ÈÅìÔºåÂçï‰Ωç‰∏∫ÂàÜÈíüÔºåÊú™ËÆæÁΩÆÂàô‰∏çËøõË°åÊ£ÄÊü•„ÄÇ 
   +‰æãÂ≠êÔºö`CHANNEL_TEST_FREQUENCY=1440`
11. `POLLING_INTERVAL`ÔºöÊâπÈáèÊõ¥Êñ∞Ê∏†ÈÅì‰ΩôÈ¢ù‰ª•ÂèäÊµãËØïÂèØÁî®ÊÄßÊó∂ÁöÑËØ∑Ê±ÇÈó¥ÈöîÔºåÂçï‰Ωç‰∏∫ÁßíÔºåÈªòËÆ§Êó†Èó¥Èöî„ÄÇ
    + ‰æãÂ≠êÔºö`POLLING_INTERVAL=5`
12. `BATCH_UPDATE_ENABLED`ÔºöÂêØÁî®Êï∞ÊçÆÂ∫ìÊâπÈáèÊõ¥Êñ∞ËÅöÂêàÔºå‰ºöÂØºËá¥Áî®Êà∑È¢ùÂ∫¶ÁöÑÊõ¥Êñ∞Â≠òÂú®‰∏ÄÂÆöÁöÑÂª∂ËøüÂèØÈÄâÂÄº‰∏∫ `true` Âíå `false`ÔºåÊú™ËÆæÁΩÆÂàôÈªòËÆ§‰∏∫ `false`„ÄÇ
    + ‰æãÂ≠êÔºö`BATCH_UPDATE_ENABLED=true`
    + Â¶ÇÊûú‰Ω†ÈÅáÂà∞‰∫ÜÊï∞ÊçÆÂ∫ìËøûÊé•Êï∞ËøáÂ§öÁöÑÈóÆÈ¢òÔºåÂèØ‰ª•Â∞ùËØïÂêØÁî®ËØ•ÈÄâÈ°π„ÄÇ
13. `BATCH_UPDATE_INTERVAL=5`ÔºöÊâπÈáèÊõ¥Êñ∞ËÅöÂêàÁöÑÊó∂Èó¥Èó¥ÈöîÔºåÂçï‰Ωç‰∏∫ÁßíÔºåÈªòËÆ§‰∏∫ `5`„ÄÇ
    + ‰æãÂ≠êÔºö`BATCH_UPDATE_INTERVAL=5`
14. ËØ∑Ê±ÇÈ¢ëÁéáÈôêÂà∂Ôºö
    + `GLOBAL_API_RATE_LIMIT`ÔºöÂÖ®Â±Ä API ÈÄüÁéáÈôêÂà∂ÔºàÈô§‰∏≠ÁªßËØ∑Ê±ÇÂ§ñÔºâÔºåÂçï ip ‰∏âÂàÜÈíüÂÜÖÁöÑÊúÄÂ§ßËØ∑Ê±ÇÊï∞ÔºåÈªòËÆ§‰∏∫ `180`„ÄÇ
    + `GLOBAL_WEB_RATE_LIMIT`ÔºöÂÖ®Â±Ä Web ÈÄüÁéáÈôêÂà∂ÔºåÂçï ip ‰∏âÂàÜÈíüÂÜÖÁöÑÊúÄÂ§ßËØ∑Ê±ÇÊï∞ÔºåÈªòËÆ§‰∏∫ `60`„ÄÇ
15. ÁºñÁ†ÅÂô®ÁºìÂ≠òËÆæÁΩÆÔºö
    + `TIKTOKEN_CACHE_DIR`ÔºöÈªòËÆ§Á®ãÂ∫èÂêØÂä®Êó∂‰ºöËÅîÁΩë‰∏ãËΩΩ‰∏Ä‰∫õÈÄöÁî®ÁöÑËØçÂÖÉÁöÑÁºñÁ†ÅÔºåÂ¶ÇÔºö`gpt-3.5-turbo`ÔºåÂú®‰∏Ä‰∫õÁΩëÁªúÁéØÂ¢É‰∏çÁ®≥ÂÆöÔºåÊàñËÄÖÁ¶ªÁ∫øÊÉÖÂÜµÔºåÂèØËÉΩ‰ºöÂØºËá¥ÂêØÂä®ÊúâÈóÆÈ¢òÔºåÂèØ‰ª•ÈÖçÁΩÆÊ≠§ÁõÆÂΩïÁºìÂ≠òÊï∞ÊçÆÔºåÂèØËøÅÁßªÂà∞Á¶ªÁ∫øÁéØÂ¢É„ÄÇ
    + `DATA_GYM_CACHE_DIR`ÔºöÁõÆÂâçËØ•ÈÖçÁΩÆ‰ΩúÁî®‰∏é `TIKTOKEN_CACHE_DIR` ‰∏ÄËá¥Ôºå‰ΩÜÊòØ‰ºòÂÖàÁ∫ßÊ≤°ÊúâÂÆÉÈ´ò„ÄÇ
16. `RELAY_TIMEOUT`Ôºö‰∏≠ÁªßË∂ÖÊó∂ËÆæÁΩÆÔºåÂçï‰Ωç‰∏∫ÁßíÔºåÈªòËÆ§‰∏çËÆæÁΩÆË∂ÖÊó∂Êó∂Èó¥„ÄÇ
17. `RELAY_PROXY`ÔºöËÆæÁΩÆÂêé‰ΩøÁî®ËØ•‰ª£ÁêÜÊù•ËØ∑Ê±Ç API„ÄÇ
18. `USER_CONTENT_REQUEST_TIMEOUT`ÔºöÁî®Êà∑‰∏ä‰º†ÂÜÖÂÆπ‰∏ãËΩΩË∂ÖÊó∂Êó∂Èó¥ÔºåÂçï‰Ωç‰∏∫Áßí„ÄÇ
19. `USER_CONTENT_REQUEST_PROXY`ÔºöËÆæÁΩÆÂêé‰ΩøÁî®ËØ•‰ª£ÁêÜÊù•ËØ∑Ê±ÇÁî®Êà∑‰∏ä‰º†ÁöÑÂÜÖÂÆπÔºå‰æãÂ¶ÇÂõæÁâá„ÄÇ
20. `SQLITE_BUSY_TIMEOUT`ÔºöSQLite ÈîÅÁ≠âÂæÖË∂ÖÊó∂ËÆæÁΩÆÔºåÂçï‰Ωç‰∏∫ÊØ´ÁßíÔºåÈªòËÆ§ `3000`„ÄÇ
21. `GEMINI_SAFETY_SETTING`ÔºöGemini ÁöÑÂÆâÂÖ®ËÆæÁΩÆÔºåÈªòËÆ§ `BLOCK_NONE`„ÄÇ
22. `GEMINI_VERSION`ÔºöOne API ÊâÄ‰ΩøÁî®ÁöÑ Gemini ÁâàÊú¨ÔºåÈªòËÆ§‰∏∫ `v1`„ÄÇ
23. `THEME`ÔºöÁ≥ªÁªüÁöÑ‰∏ªÈ¢òËÆæÁΩÆÔºåÈªòËÆ§‰∏∫ `default`ÔºåÂÖ∑‰ΩìÂèØÈÄâÂÄºÂèÇËÄÉ[Ê≠§Â§Ñ](./web/README.md)„ÄÇ
24. `ENABLE_METRIC`ÔºöÊòØÂê¶Ê†πÊçÆËØ∑Ê±ÇÊàêÂäüÁéáÁ¶ÅÁî®Ê∏†ÈÅìÔºåÈªòËÆ§‰∏çÂºÄÂêØÔºåÂèØÈÄâÂÄº‰∏∫ `true` Âíå `false`„ÄÇ
25. `METRIC_QUEUE_SIZE`ÔºöËØ∑Ê±ÇÊàêÂäüÁéáÁªüËÆ°ÈòüÂàóÂ§ßÂ∞èÔºåÈªòËÆ§‰∏∫ `10`„ÄÇ
26. `METRIC_SUCCESS_RATE_THRESHOLD`ÔºöËØ∑Ê±ÇÊàêÂäüÁéáÈòàÂÄºÔºåÈªòËÆ§‰∏∫ `0.8`„ÄÇ
27. `INITIAL_ROOT_TOKEN`ÔºöÂ¶ÇÊûúËÆæÁΩÆ‰∫ÜËØ•ÂÄºÔºåÂàôÂú®Á≥ªÁªüÈ¶ñÊ¨°ÂêØÂä®Êó∂‰ºöËá™Âä®ÂàõÂª∫‰∏Ä‰∏™ÂÄº‰∏∫ËØ•ÁéØÂ¢ÉÂèòÈáèÂÄºÁöÑ root Áî®Êà∑‰ª§Áâå„ÄÇ
28. `INITIAL_ROOT_ACCESS_TOKEN`ÔºöÂ¶ÇÊûúËÆæÁΩÆ‰∫ÜËØ•ÂÄºÔºåÂàôÂú®Á≥ªÁªüÈ¶ñÊ¨°ÂêØÂä®Êó∂‰ºöËá™Âä®ÂàõÂª∫‰∏Ä‰∏™ÂÄº‰∏∫ËØ•ÁéØÂ¢ÉÂèòÈáèÁöÑ root Áî®Êà∑ÂàõÂª∫Á≥ªÁªüÁÆ°ÁêÜ‰ª§Áâå„ÄÇ
29. `ENFORCE_INCLUDE_USAGE`ÔºöÊòØÂê¶Âº∫Âà∂Âú® stream Ê®°Âûã‰∏ãËøîÂõû usageÔºåÈªòËÆ§‰∏çÂºÄÂêØÔºåÂèØÈÄâÂÄº‰∏∫ `true` Âíå `false`„ÄÇ
30. `TEST_PROMPT`ÔºöÊµãËØïÊ®°ÂûãÊó∂ÁöÑÁî®Êà∑ promptÔºåÈªòËÆ§‰∏∫ `Print your model name exactly and do not output without any other text.`„ÄÇ

### ÂëΩ‰ª§Ë°åÂèÇÊï∞
1. `--port &lt;port_number&gt;`: ÊåáÂÆöÊúçÂä°Âô®ÁõëÂê¨ÁöÑÁ´ØÂè£Âè∑ÔºåÈªòËÆ§‰∏∫ `3000`„ÄÇ
   + ‰æãÂ≠êÔºö`--port 3000`
2. `--log-dir &lt;log_dir&gt;`: ÊåáÂÆöÊó•ÂøóÊñá‰ª∂Â§πÔºåÂ¶ÇÊûúÊ≤°ÊúâËÆæÁΩÆÔºåÈªòËÆ§‰øùÂ≠òËá≥Â∑•‰ΩúÁõÆÂΩïÁöÑ `logs` Êñá‰ª∂Â§π‰∏ã„ÄÇ
   + ‰æãÂ≠êÔºö`--log-dir ./logs`
3. `--version`: ÊâìÂç∞Á≥ªÁªüÁâàÊú¨Âè∑Âπ∂ÈÄÄÂá∫„ÄÇ
4. `--help`: Êü•ÁúãÂëΩ‰ª§ÁöÑ‰ΩøÁî®Â∏ÆÂä©ÂíåÂèÇÊï∞ËØ¥Êòé„ÄÇ

## ÊºîÁ§∫
### Âú®Á∫øÊºîÁ§∫
Ê≥®ÊÑèÔºåËØ•ÊºîÁ§∫Á´ô‰∏çÊèê‰æõÂØπÂ§ñÊúçÂä°Ôºö
https://openai.justsong.cn

### Êà™ÂõæÂ±ïÁ§∫
![channel](https://user-images.githubusercontent.com/39998050/233837954-ae6683aa-5c4f-429f-a949-6645a83c9490.png)
![token](https://user-images.githubusercontent.com/39998050/233837971-dab488b7-6d96-43af-b640-a168e8d1c9bf.png)

## Â∏∏ËßÅÈóÆÈ¢ò
1. È¢ùÂ∫¶ÊòØ‰ªÄ‰πàÔºüÊÄé‰πàËÆ°ÁÆóÁöÑÔºüOne API ÁöÑÈ¢ùÂ∫¶ËÆ°ÁÆóÊúâÈóÆÈ¢òÔºü
   + È¢ùÂ∫¶ = ÂàÜÁªÑÂÄçÁéá * Ê®°ÂûãÂÄçÁéá * ÔºàÊèêÁ§∫ token Êï∞ + Ë°•ÂÖ® token Êï∞ * Ë°•ÂÖ®ÂÄçÁéáÔºâ
   + ÂÖ∂‰∏≠Ë°•ÂÖ®ÂÄçÁéáÂØπ‰∫é GPT3.5 Âõ∫ÂÆö‰∏∫ 1.33ÔºåGPT4 ‰∏∫ 2Ôºå‰∏éÂÆòÊñπ‰øùÊåÅ‰∏ÄËá¥„ÄÇ
   + Â¶ÇÊûúÊòØÈùûÊµÅÊ®°ÂºèÔºåÂÆòÊñπÊé•Âè£‰ºöËøîÂõûÊ∂àËÄóÁöÑÊÄª tokenÔºå‰ΩÜÊòØ‰Ω†Ë¶ÅÊ≥®ÊÑèÊèêÁ§∫ÂíåË°•ÂÖ®ÁöÑÊ∂àËÄóÂÄçÁéá‰∏ç‰∏ÄÊ†∑„ÄÇ
   + Ê≥®ÊÑèÔºåOne API ÁöÑÈªòËÆ§ÂÄçÁéáÂ∞±ÊòØÂÆòÊñπÂÄçÁéáÔºåÊòØÂ∑≤ÁªèË∞ÉÊï¥ËøáÁöÑ„ÄÇ
2. Ë¥¶Êà∑È¢ùÂ∫¶Ë∂≥Â§ü‰∏∫‰ªÄ‰πàÊèêÁ§∫È¢ùÂ∫¶‰∏çË∂≥Ôºü
   + ËØ∑Ê£ÄÊü•‰Ω†ÁöÑ‰ª§ÁâåÈ¢ùÂ∫¶ÊòØÂê¶Ë∂≥Â§üÔºåËøô‰∏™ÂíåË¥¶Êà∑È¢ùÂ∫¶ÊòØÂàÜÂºÄÁöÑ„ÄÇ
   + ‰ª§ÁâåÈ¢ùÂ∫¶‰ªÖ‰æõÁî®Êà∑ËÆæÁΩÆÊúÄÂ§ß‰ΩøÁî®ÈáèÔºåÁî®Êà∑ÂèØËá™Áî±ËÆæÁΩÆ„ÄÇ
3. ÊèêÁ§∫Êó†ÂèØÁî®Ê∏†ÈÅìÔºü
   + ËØ∑Ê£ÄÊü•ÁöÑÁî®Êà∑ÂàÜÁªÑÂíåÊ∏†ÈÅìÂàÜÁªÑËÆæÁΩÆ„ÄÇ
   + ‰ª•ÂèäÊ∏†ÈÅìÁöÑÊ®°ÂûãËÆæÁΩÆ„ÄÇ
4. Ê∏†ÈÅìÊµãËØïÊä•ÈîôÔºö`invalid character &#039;&lt;&#039; looking for beginning of value`
   + ËøôÊòØÂõ†‰∏∫ËøîÂõûÂÄº‰∏çÊòØÂêàÊ≥ïÁöÑ JSONÔºåËÄåÊòØ‰∏Ä‰∏™ HTML È°µÈù¢„ÄÇ
   + Â§ßÊ¶ÇÁéáÊòØ‰Ω†ÁöÑÈÉ®ÁΩ≤Á´ôÁöÑ IP Êàñ‰ª£ÁêÜÁöÑËäÇÁÇπË¢´ CloudFlare Â∞ÅÁ¶Å‰∫Ü„ÄÇ
5. ChatGPT Next Web Êä•ÈîôÔºö`Failed to fetch`
   + ÈÉ®ÁΩ≤ÁöÑÊó∂ÂÄô‰∏çË¶ÅËÆæÁΩÆ `BASE_URL`„ÄÇ
   + Ê£ÄÊü•‰Ω†ÁöÑÊé•Âè£Âú∞ÂùÄÂíå API Key ÊúâÊ≤°ÊúâÂ°´ÂØπ„ÄÇ
   + Ê£ÄÊü•ÊòØÂê¶ÂêØÁî®‰∫Ü HTTPSÔºåÊµèËßàÂô®‰ºöÊã¶Êà™ HTTPS ÂüüÂêç‰∏ãÁöÑ HTTP ËØ∑Ê±Ç„ÄÇ
6. Êä•ÈîôÔºö`ÂΩìÂâçÂàÜÁªÑË¥üËΩΩÂ∑≤È•±ÂíåÔºåËØ∑Á®çÂêéÂÜçËØï`
   + ‰∏äÊ∏∏Ê∏†ÈÅì 429 ‰∫Ü„ÄÇ
7. ÂçáÁ∫ß‰πãÂêéÊàëÁöÑÊï∞ÊçÆ‰ºö‰∏¢Â§±ÂêóÔºü
   + Â¶ÇÊûú‰ΩøÁî® MySQLÔºå‰∏ç‰ºö„ÄÇ
   + Â¶ÇÊûú‰ΩøÁî® SQLiteÔºåÈúÄË¶ÅÊåâÁÖßÊàëÊâÄÁªôÁöÑÈÉ®ÁΩ≤ÂëΩ‰ª§ÊåÇËΩΩ volume ÊåÅ‰πÖÂåñ one-api.db Êï∞ÊçÆÂ∫ìÊñá‰ª∂ÔºåÂê¶ÂàôÂÆπÂô®ÈáçÂêØÂêéÊï∞ÊçÆ‰ºö‰∏¢Â§±„ÄÇ
8. ÂçáÁ∫ß‰πãÂâçÊï∞ÊçÆÂ∫ìÈúÄË¶ÅÂÅöÂèòÊõ¥ÂêóÔºü
   + ‰∏ÄËà¨ÊÉÖÂÜµ‰∏ã‰∏çÈúÄË¶ÅÔºåÁ≥ªÁªüÂ∞ÜÂú®ÂàùÂßãÂåñÁöÑÊó∂ÂÄôËá™Âä®Ë∞ÉÊï¥„ÄÇ
   + Â¶ÇÊûúÈúÄË¶ÅÁöÑËØùÔºåÊàë‰ºöÂú®Êõ¥Êñ∞Êó•Âøó‰∏≠ËØ¥ÊòéÔºåÂπ∂ÁªôÂá∫ËÑöÊú¨„ÄÇ
9. ÊâãÂä®‰øÆÊîπÊï∞ÊçÆÂ∫ìÂêéÊä•ÈîôÔºö`Êï∞ÊçÆÂ∫ì‰∏ÄËá¥ÊÄßÂ∑≤Ë¢´Á†¥ÂùèÔºåËØ∑ËÅîÁ≥ªÁÆ°ÁêÜÂëò`Ôºü
   + ËøôÊòØÊ£ÄÊµãÂà∞ ability Ë°®ÈáåÊúâ‰∫õËÆ∞ÂΩïÁöÑÊ∏†ÈÅì id ÊòØ‰∏çÂ≠òÂú®ÁöÑÔºåËøôÂ§ßÊ¶ÇÁéáÊòØÂõ†‰∏∫‰Ω†Âà†‰∫Ü channel Ë°®ÈáåÁöÑËÆ∞ÂΩï‰ΩÜÊòØÊ≤°ÊúâÂêåÊ≠•Âú® ability Ë°®ÈáåÊ∏ÖÁêÜÊó†ÊïàÁöÑÊ∏†ÈÅì„ÄÇ
   + ÂØπ‰∫éÊØè‰∏Ä‰∏™Ê∏†ÈÅìÔºåÂÖ∂ÊâÄÊîØÊåÅÁöÑÊ®°ÂûãÈÉΩÈúÄË¶ÅÊúâ‰∏Ä‰∏™‰∏ìÈó®ÁöÑ ability Ë°®ÁöÑËÆ∞ÂΩïÔºåË°®Á§∫ËØ•Ê∏†ÈÅìÊîØÊåÅËØ•Ê®°Âûã„ÄÇ

## Áõ∏ÂÖ≥È°πÁõÆ
* [FastGPT](https://github.com/labring/FastGPT): Âü∫‰∫é LLM Â§ßËØ≠Ë®ÄÊ®°ÂûãÁöÑÁü•ËØÜÂ∫ìÈóÆÁ≠îÁ≥ªÁªü
* [ChatGPT Next Web](https://github.com/Yidadaa/ChatGPT-Next-Web):  ‰∏ÄÈîÆÊã•Êúâ‰Ω†Ëá™Â∑±ÁöÑË∑®Âπ≥Âè∞ ChatGPT Â∫îÁî®
* [VChart](https://github.com/VisActor/VChart):  ‰∏çÂè™ÊòØÂºÄÁÆ±Âç≥Áî®ÁöÑÂ§öÁ´ØÂõæË°®Â∫ìÔºåÊõ¥ÊòØÁîüÂä®ÁÅµÊ¥ªÁöÑÊï∞ÊçÆÊïÖ‰∫ãËÆ≤Ëø∞ËÄÖ„ÄÇ
* [VMind](https://github.com/VisActor/VMind):  ‰∏ç‰ªÖËá™Âä®ÔºåËøòÂæàÊô∫ËÉΩ„ÄÇÂºÄÊ∫êÊô∫ËÉΩÂèØËßÜÂåñËß£ÂÜ≥ÊñπÊ°à„ÄÇ
* [CherryStudio](https://github.com/CherryHQ/cherry-studio):  ÂÖ®Âπ≥Âè∞ÊîØÊåÅÁöÑAIÂÆ¢Êà∑Á´Ø, Â§öÊúçÂä°ÂïÜÈõÜÊàêÁÆ°ÁêÜ„ÄÅÊú¨Âú∞Áü•ËØÜÂ∫ìÊîØÊåÅ„ÄÇ

## Ê≥®ÊÑè

Êú¨È°πÁõÆ‰ΩøÁî® MIT ÂçèËÆÆËøõË°åÂºÄÊ∫êÔºå**Âú®Ê≠§Âü∫Á°Ä‰∏ä**ÔºåÂøÖÈ°ªÂú®È°µÈù¢Â∫ïÈÉ®‰øùÁïôÁΩ≤Âêç‰ª•ÂèäÊåáÂêëÊú¨È°πÁõÆÁöÑÈìæÊé•„ÄÇÂ¶ÇÊûú‰∏çÊÉ≥‰øùÁïôÁΩ≤ÂêçÔºåÂøÖÈ°ªÈ¶ñÂÖàËé∑ÂæóÊéàÊùÉ„ÄÇ

ÂêåÊ†∑ÈÄÇÁî®‰∫éÂü∫‰∫éÊú¨È°πÁõÆÁöÑ‰∫åÂºÄÈ°πÁõÆ„ÄÇ

‰æùÊçÆ MIT ÂçèËÆÆÔºå‰ΩøÁî®ËÄÖÈúÄËá™Ë°åÊâøÊãÖ‰ΩøÁî®Êú¨È°πÁõÆÁöÑÈ£éÈô©‰∏éË¥£‰ªªÔºåÊú¨ÂºÄÊ∫êÈ°πÁõÆÂºÄÂèëËÄÖ‰∏éÊ≠§Êó†ÂÖ≥„ÄÇ
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[devlikeapro/waha]]></title>
            <link>https://github.com/devlikeapro/waha</link>
            <guid>https://github.com/devlikeapro/waha</guid>
            <pubDate>Wed, 02 Apr 2025 00:04:30 GMT</pubDate>
            <description><![CDATA[WAHA - WhatsApp HTTP API (REST API) that you can configure in a click! 3 engines: WEBJS (browser based), NOWEB (websocket nodejs), GOWS (websocket go)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/devlikeapro/waha">devlikeapro/waha</a></h1>
            <p>WAHA - WhatsApp HTTP API (REST API) that you can configure in a click! 3 engines: WEBJS (browser based), NOWEB (websocket nodejs), GOWS (websocket go)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,329</p>
            <p>Forks: 381</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre># WAHA

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./logo.png&quot; style=&#039;border-radius: 50%&#039; width=&#039;150&#039;/&gt;
&lt;/p&gt;

**WAHA** - **W**hats**A**pp **H**TTP **A**PI (REST API) that you can install on your own server and run in less than 5 minutes!

[![Docker Pulls](https://img.shields.io/docker/pulls/devlikeapro/waha)](https://hub.docker.com/r/devlikeapro/waha)

- Documentation: [https://waha.devlike.pro/](https://waha.devlike.pro/)
- Dashboard Example: [https://waha.devlike.pro/dashboard](https://waha.devlike.pro/dashboard)
- Swagger Example: [https://waha.devlike.pro/swagger](https://waha.devlike.pro/swagger)

# Tables of Contents

&lt;!-- toc --&gt;

- [Quick start](#quick-start)
  * [Requirements](#requirements)
  * [Send your first message](#send-your-first-message)
    + [1. Download image](#1-download-image)
    + [2. Run WhatsApp HTTP API](#2-run-whatsapp-http-api)
    + [3. Start a new session](#3-start-a-new-session)
    + [4. Get and scan QR](#4-get-and-scan-qr)
    + [5. Get the screenshot](#5-get-the-screenshot)
    + [6. Send a text message](#6-send-a-text-message)
  * [What is next?](#what-is-next)
- [Development](#development)
  * [Start the project](#start-the-project)

&lt;!-- tocstop --&gt;

# Quick start

## Requirements

Only thing that you must have - installed docker. Please follow the original
instruction &lt;a href=&quot;https://docs.docker.com/get-docker/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;how to install docker -&gt;&lt;/a&gt;.

When you are ready - come back and follows the below steps to send the first text message to WhatsApp via HTTP API!

## Send your first message

Let&#039;s go over steps that allow you to send your first text message via WhatsApp HTTP API!

### 1. Download image

Assuming you have installed [Docker](https://docs.docker.com/get-docker/), let&#039;s download the image.


```bash
docker pull devlikeapro/waha
```


```bash
docker login -u devlikeapro -p {KEY}
docker pull devlikeapro/waha-plus
docker logout
```

Read more about how to get `PASSWORD` for [**‚ûï WAHA Plus**](https://waha.devlike.pro/docs/how-to/waha-plus/)

### 2. Run WhatsApp HTTP API

Run WhatsApp HTTP API:

```bash
docker run -it --rm -p 3000:3000/tcp --name waha devlikeapro/waha

# It prints logs and the last line must be
# WhatsApp HTTP API is running on: http://[::1]:3000
```

Open the link in your browser [http://localhost:3000/](http://localhost:3000/) and you&#039;ll see API documentation
(Swagger).


### 3. Start a new session

To start a new session you should have your mobile phone with installed WhatsApp application close to you.

Please go and read how what we&#039;ll need to a bit
later:
&lt;a href=&quot;https://faq.whatsapp.com/381777293328336/?helpref=hc_fnav&quot; target=&quot;_blank&quot;&gt;
How to log in - the instruction on WhatsApp site
&lt;/a&gt;

When your ready - find `POST /api/sessions`, click on **Try it out**, then **Execute** a bit below.


The example payload:
```json
{
  &quot;name&quot;: &quot;default&quot;
}
```


By using the request with `name` values you can start multiple session (WhatsApp accounts) inside the single docker container in Plus


### 4. Get and scan QR

Find `GET /api/screenshot` and execute it, it shows you QR code.


**Scan the QR with your cell phone&#039;s WhatsApp app.**


### 5. Get the screenshot

Execute `GET /api/screenshot` after a few seconds after scanning the QR - it&#039;ll show you the screenshot of you Whatsapp
instance. If you can get the actual screenshot - then you&#039;re ready to start sending messages!


### 6. Send a text message

Let&#039;s send a text message - find `POST /api/sendText`  in [swagger](http://localhost:3000/) and change `chatId` this
way: use a phone international phone number without `+` symbol and add `@c.us` at the end.

For phone number `12132132131` the `chatId` is  `12132132131@c.us`.

The example payload:
```json
{
  &quot;chatId&quot;: &quot;12132132130@c.us&quot;,
  &quot;text&quot;: &quot;Hi there!&quot;,
  &quot;session&quot;: &quot;default&quot;
}
```

Also, you can use `curl` and send POST request like this:

```bash
# Phone without +
export PHONE=12132132130
curl -d &quot;{\&quot;chatId\&quot;: \&quot;${PHONE}@c.us\&quot;, \&quot;text\&quot;: \&quot;Hello from WhatsApp HTTP API\&quot; }&quot; -H &quot;Content-Type: application/json&quot; -X POST http://localhost:3000/api/sendText
```

## What is next?
[Go and read the full documentation!](https://waha.devlike.pro/docs/overview/introduction/)

# Development

## Start the project
1. Clone the repository
2. Make sure you&#039;re using node&gt;=22
3. Run the following commands:
```bash
# Install dependencies
yarn install
# Fetch and compile proto files
yarn gows:proto
# Run
yarn start
# open http://localhost:3000
```</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[xnx3/translate]]></title>
            <link>https://github.com/xnx3/translate</link>
            <guid>https://github.com/xnx3/translate</guid>
            <pubDate>Wed, 02 Apr 2025 00:04:29 GMT</pubDate>
            <description><![CDATA[AI i18n, Two lines of js realize automatic html translation. No need to change the page, no language configuration file, no API key, SEO friendly!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/xnx3/translate">xnx3/translate</a></h1>
            <p>AI i18n, Two lines of js realize automatic html translation. No need to change the page, no language configuration file, no API key, SEO friendly!</p>
            <p>Language: JavaScript</p>
            <p>Stars: 827</p>
            <p>Forks: 112</p>
            <p>Stars today: 33 stars today</p>
            <h2>README</h2><pre>
&lt;h1 align=&quot;center&quot;&gt;
    translate.js
&lt;/h1&gt;
&lt;h4 align=&quot;center&quot;&gt;
    AI i18nÔºå‰∏§Ë°åjsÂÆûÁé∞htmlÂÖ®Ëá™Âä®ÁøªËØë„ÄÇ &lt;br/&gt;
    ‰∫§ÁªôAIÔºåÊó†ÈúÄÊîπÂä®È°µÈù¢„ÄÅÊó†ËØ≠Ë®ÄÈÖçÁΩÆÊñá‰ª∂„ÄÅÊó†API Key„ÄÅÂØπSEOÂèãÂ•ΩÔºÅ
&lt;/h4&gt; 
&lt;h4 align=&quot;center&quot;&gt;
    ÁÆÄ‰Ωì‰∏≠Êñá | 
    &lt;a href=&quot;http://translate.zvo.cn/index.html?language=chinese_traditional&quot;&gt;ÁπÅÈ´î‰∏≠Êñá&lt;/a&gt; | 
    &lt;a href=&quot;http://translate.zvo.cn/index.html?language=english&quot;&gt;English&lt;/a&gt; | 
    &lt;a href=&quot;http://translate.zvo.cn/index.html?language=japanese&quot;&gt;„Åó„Çç„ÅÜ„Å®&lt;/a&gt; | 
    &lt;a href=&quot;http://translate.zvo.cn/index.html?language=russian&quot;&gt;–†—É—Å—Å–∫–∏–π —è–∑—ã–∫&lt;/a&gt; | 
    &lt;a href=&quot;http://translate.zvo.cn/index.html?language=german&quot;&gt;deutsch&lt;/a&gt; | 
    &lt;a href=&quot;http://translate.zvo.cn/index.html?language=french&quot;&gt;Fran√ßais&lt;/a&gt; 
&lt;/h4&gt; 

# ÁâπÊÄßËØ¥Êòé
* **‰ΩøÁî®ÊûÅÂÖ∂ÁÆÄÂçï„ÄÇ** Áõ¥Êé•Âä†ÂÖ•Âá†Ë°å JavaScript ‰ª£Á†ÅÂç≥ÂèØËÆ©ÂÖ∂Êã•Êúâ‰∏äÁôæÁßçËØ≠Ë®ÄÂàáÊç¢ËÉΩÂäõ„ÄÇ
* **‰∏çÂ¢ûÂä†Â∑•‰ΩúÈáè„ÄÇ** Êó†ÈúÄÊîπÈÄ†È°µÈù¢Êú¨Ë∫´Ê§çÂÖ•Â§ßÈáèÂûÉÂúæ‰ª£Á†ÅÂèòÂæóËáÉËÇøÔºå‰πü‰∏çÈúÄË¶ÅÈÖçÁΩÆÂêÑÁßçËØ≠ÁßçÁöÑËØ≠Ë®ÄÊñá‰ª∂ÔºåÂõ†‰∏∫ÂÆÉ‰ºöÁõ¥Êé•Êâ´Êèè‰Ω†ÁöÑDOMËá™Âä®ËØÜÂà´Âπ∂ÁøªËØëÊòæÁ§∫ÔºåÂÆÉ‰∏çÈúÄË¶Å‰Ω†Âà∞ÊüêÊüêÁΩëÁ´ôÁôªÂΩïÂéªÁî≥ËØ∑‰ªÄ‰πàkeyÔºåÂÆÉÊòØÂºÄÊ∫êÂºÄÊîæÁöÑÔºåÊãøÊù•Â∞±ËÉΩÁî®„ÄÇ
* **ÊûÅÂÖ∂ÁÅµÊ¥ªÊâ©Â±ï„ÄÇ** ÊÇ®ÂèØÊåáÂÆöÂÆÉ[Âè™ÁøªËØëÊüê‰∫õÊåáÂÆöÂå∫ÂüüÁöÑÂÖÉÁ¥†](http://translate.zvo.cn/4063.html)„ÄÅ[Ëá™ÂÆö‰πâÂàáÊç¢ËØ≠Ë®ÄÊñπÂºèÂèäÁæéÂåñ](http://translate.zvo.cn/4056.html)„ÄÅ[Êüê‰∫õid„ÄÅclass„ÄÅtag‰∏çË¢´ÁøªËØë](https://translate.zvo.cn/4061.html)„ÄÅ[Ëá™ÂÆö‰πâÁøªËØëÊúØËØ≠](https://translate.zvo.cn/4070.html) ...... Âè™Ë¶Å‰Ω†ÊÉ≥ÁöÑÔºåÂÆÉÈÉΩËÉΩÂÅöÂà∞„ÄÇÂÅö‰∏çÂà∞ÁöÑÔºå‰Ω†ÊâæÊàëÊàëÊù•ËÆ©ÂÆÉÂÅöÂà∞ÔºÅ
* **Ëá™Âä®ÂàáÊç¢ËØ≠Áßç„ÄÇ** [Ëá™Âä®Ê†πÊçÆÁî®Êà∑ÁöÑËØ≠Ë®ÄÂñúÂ•ΩÂèäÊâÄÂú®ÁöÑÂõΩÂÆ∂ÂàáÊç¢Âà∞Ëøô‰∏™ËØ≠ÁßçËøõË°åÊµèËßà](http://translate.zvo.cn/4065.html)
* **ÊûÅÈÄüÁøªËØëËÉΩÂäõ„ÄÇ** [ÂÜÖÁΩÆ‰∏âÂ±ÇÁºìÂ≠ò„ÄÅÈ¢ÑÂä†ËΩΩÊú∫Âà∂ÔºåÊØ´ÁßíÁ∫ßÁû¨Èó¥ÁøªËØëÁöÑËÉΩÂäõ„ÄÇÂÆÉÂπ∂‰∏çÊòØ‰Ω†ÁêÜËß£ÁöÑÂ§ßÊ®°ÂûãËúóÁâõ‰ººÁöÑÈÄê‰∏™Â≠óÂæÄÂ§ñÂá∫ÁöÑÈÇ£Ê†∑](http://translate.zvo.cn/4026.html)
* [**Ê∞∏‰πÖÂºÄÊ∫êÂÖçË¥π„ÄÇ** ÈááÁî®MITÂºÄÊ∫êÂçèËÆÆÔºåÊÇ®ÂèØÊ∞∏‰πÖÂÖçË¥π‰ΩøÁî®](https://github.com/xnx3/translate/blob/master/LICENSE)„ÄÇ[Âè¶Â§ñ‰Ω†ÂèØ‰ª•Áî®ÂÆÉÊù•ÂÅöÊüê‰∫õÁ≥ªÁªüÁöÑ‰∏âÊñπÊèí‰ª∂Áõ¥Êé•ÂîÆÂçñÁõàÂà©](http://translate.zvo.cn/4036.html)„ÄÅÊàñËÄÖ‰Ω†ÊòØÂª∫Á´ôÂÖ¨Âè∏Áî®ÂÆÉÊù•ÂÅö‰∏∫‰∏ÄÈ°πÈ´òÁ∫ßÂäüËÉΩÁõàÂà©ÔºåÊàë‰ª¨ÈÉΩÊòØÂÆåÂÖ®ËÆ§ÂèØÂπ∂ÊîØÊåÅÁöÑÔºåÂπ∂‰∏çÈúÄË¶ÅÁªôÊàë‰ª¨‰ªª‰ΩïË¥πÁî®ÔºÅ
* **ÊêúÁ¥¢ÂºïÊìéÂèãÂ•Ω„ÄÇ** ÂÆåÂÖ®‰∏çÂΩ±Âìç‰Ω†Êú¨Ë∫´ÁΩëÁ´ôÊêúÁ¥¢ÂºïÊìéÁöÑÊî∂ÂΩï„ÄÇÁà¨Ëô´ÊâÄÁà¨ÂèñÁöÑÁΩëÈ°µÊ∫ê‰ª£Á†ÅÔºåÂÆÉ‰∏ç‰ºöÂØπÂÖ∂ËøõË°å‰ªª‰ΩïÊîπÂä®Ôºå‰Ω†ÂèØÂÆåÂÖ®ÊîæÂøÉ„ÄÇ[Âè¶Â§ñÊàë‰ª¨ËøòÊúâÈ´òÁ∫ßÁâàÊú¨ËÆ©‰Ω†ÁøªËØë‰πãÂêéÁöÑÈ°µÈù¢‰πüËÉΩË¢´ÊêúÁ¥¢ÂºïÊìéÊî∂ÂΩï](http://translate.zvo.cn/236896.html)
* **ÊîØÊåÅÁßÅÊúâÈÉ®ÁΩ≤„ÄÇ** [Âú®Êüê‰∫õÊîøÂ∫úÊú∫ÂÖ≥ÂèäÂ§ßÈõÜÂõ¢ÂÜÖÈÉ®È°πÁõÆ‰∏≠ÔºåÂØπÊï∞ÊçÆÈöêÁßÅÂèäÂÆâÂÖ®‰øùÂØÜÊúâÂº∫Ë¶ÅÊ±ÇÂú∫ÊôØ„ÄÅÊàñËÄÖÂÆåÂÖ®‰∏çÈÄöÂ§ñÁΩëÁöÑÂú∫ÊôØÔºåÂèØ‰ª•Ëá™Ë°åÁßÅÊúâÈÉ®ÁΩ≤ÁøªËØëAPIÊúçÂä°](http://translate.zvo.cn/391129.html) 
* **ÂÖ®ÁêÉÁΩëÁªúËäÇÁÇπ**„ÄÇÁæéÊ¥≤„ÄÅ‰∫öÊ¥≤„ÄÅÊ¨ßÊ¥≤ ... ÈÉΩÊúâÁΩëÁªúËäÇÁÇπÔºåÂÆÉËÉΩËá™Âä®ÈÄÇÈÖçÊúÄÂø´ËäÇÁÇπÔºåÊØèÈó¥Èöî1ÂàÜÈíüËá™Âä®Ëé∑Âèñ‰∏ÄÊ¨°Âª∂ËøüÊúÄÂ∞èÁöÑËäÇÁÇπËøõË°åÊé•ÂÖ•‰ΩøÁî®Ôºå‰ΩøÂÖ®ÁêÉËåÉÂõ¥‰ΩøÁî®ÈÉΩÂèØÈ´òÊïàÁ®≥ÂÆö„ÄÇ
* **HTMLÊï¥‰ΩìÁøªËØë**„ÄÇ[Êèê‰æõÂºÄÊîæAPIÊé•Âè£Ôºå‰º†ÂÖ•htmlÊñá‰ª∂ÔºàhtmlÊ∫ê‰ª£Á†ÅÔºâÂèäË¶ÅÁøªËØë‰∏∫ÁöÑËØ≠Ë®ÄÂç≥ÂèØÊãøÂà∞ÁøªËØëÂêéÁöÑhtmlÊ∫êÁ†Å„ÄÇÂÆåÁæéÊîØÊåÅËØÜÂà´ÂêÑÁßçÂ§çÊùÇÂèä‰∏çËßÑËåÉhtml‰ª£Á†ÅÔºå
ÊîØÊåÅÁøªËØëÂâçÁöÑÂæÆË∞ÉÔºåÊØîÂ¶Ç‰∏çÁøªËØëÊüê‰∏™Âå∫Âüü„ÄÅÂõæÁâáÁøªËØë„ÄÅjsËØ≠Ê≥ïÊìç‰ΩúhtmlÊñá‰ª∂‰∏≠ÁöÑÂÖÉÁ¥†ËøõË°åÂ¢ûÂà†ÊîπÁ≠â„ÄÇ](https://translate.zvo.cn/4022.html)
* **Ê∫êÁ´ôÁøªËØëÂèäÂüüÂêçÂàÜÂèë**„ÄÇ[Â∞ÜÊÇ®Áé∞ÊúâÁöÑÁΩëÁ´ôÔºåÁøªËØëÊàêÂÖ®Êñ∞ÁöÑÂ∞èËØ≠ÁßçÁΩëÁ´ôÔºåÂ∞èËØ≠ÁßçÁΩëÁ´ôÂèØ‰ª•ÂàÜÂà´ÁªëÂÆöÂüüÂêçÂπ∂ÊîØÊåÅÊêúÁ¥¢ÂºïÊìéÊî∂ÂΩïÂíåÊéíÂêç„ÄÇËÄåÊÇ®ÁöÑÊ∫êÁ´ôÊó†ÈúÄ‰ªª‰ΩïÊîπÂä®„ÄÇ‰πüÂ∞±ÊòØ‰Ω†ÂèØ‰ª•Â∞Ü‰Ω†ÊúãÂèãÁöÑÁΩëÁ´ôÔºåÁøªËØë‰∏∫Â∞èËØ≠ÁßçÁΩëÁ´ôÔºåÁªëÂÆö‰∏äËá™Â∑±ÁöÑÂüüÂêçÔºåÊèê‰æõÂØπÂ§ñËÆøÈóÆ„ÄÇËÄå‰Ω†Êó†ÈúÄÂêë‰Ω†ÊúãÂèãÂèñÂæó‰ªª‰ΩïÁöÑÂ¶ÇË¥¶Âè∑Á≠âÁõ∏ÂÖ≥ÊùÉÈôê](https://translate.zvo.cn/236896.html)
* **ÊµèËßàÂô®ÁøªËØëÊèí‰ª∂**„ÄÇ[Êèê‰æõÊï¥‰ΩìÁöÑÊµèËßàÂô®ÁøªËØëÊèí‰ª∂ÁöÑÂÖ®Â•óÊñπÊ°àÔºåÊÇ®Â¶ÇÊûúÊòØÂºÄÂèëËÄÖÔºåÂÆåÂÖ®ÂèØ‰ª•ÊãøÂéªÂ∞ÜÁïåÈù¢ÁæéÂåñÂåÖË£Ö‰∏Ä‰∏ãÔºåËÄåÂêéÁõ¥Êé•Êèê‰∫§Â∫îÁî®Â∏ÇÂú∫ËøõË°åÂîÆÂçñÁõàÂà©](https://translate.zvo.cn/4037.html)



# ÂæÆË∞ÉÊåá‰ª§
* **[ËÆæÁΩÆÈªòËÆ§ÁøªËØë‰∏∫ÁöÑËØ≠Áßç](http://translate.zvo.cn/4071.html)**ÔºåÁî®Êà∑Á¨¨‰∏ÄÊ¨°ÊâìÂºÄÊó∂ÔºåÈªòËÆ§‰ª•‰ªÄ‰πàËØ≠ÁßçÊòæÁ§∫„ÄÇ
* **[Ëá™ÂÆö‰πâÁøªËØëÊúØËØ≠](http://translate.zvo.cn/41555.html)**ÔºåÂ¶ÇÊûú‰Ω†ÊÑüËßâÊüê‰∫õÁøªËØë‰∏çÂ§™Á¨¶Âêà‰Ω†ÁöÑÈ¢ÑÊúüÔºåÂèØËøõË°åÈíàÂØπÊÄßÁöÑÂÆö‰πâÊüê‰∫õËØçÊàñÂè•Â≠êÁöÑÁøªËØëÁªìÊûúÔºåËøõË°åËá™ÂÆö‰πâÊúØËØ≠Â∫ì
* **[ÁøªËØëÂÆåÂêéËá™Âä®Ëß¶ÂèëÊâßË°å](http://translate.zvo.cn/4069.html)**ÔºåÂΩìÁøªËØëÂÆåÊàêÂêé‰ºöËá™Âä®Ëß¶ÂèëÊâßË°åÊÇ®ÁöÑÊüê‰∏™ÊñπÊ≥ïÔºå‰ª•‰æøÊÇ®Êù•ÂÅöËá™ÂÆö‰πâÊâ©Â±ï„ÄÇ
* **[ÊåáÂÆöÁøªËØëÊúçÂä°Êé•Âè£](http://translate.zvo.cn/4068.html)**ÔºåÂ¶ÇÊûú‰Ω†‰∏çÊÉ≥Áî®Êàë‰ª¨ÂºÄÊ∫êÂÖçË¥πÁöÑÁøªËØëÊúçÂä°Êé•Âè£Ôºå‰ΩøÁî®ÊÇ®Ëá™Â∑±ÁßÅÊúâÈÉ®ÁΩ≤ÁöÑ„ÄÅÊàñËÄÖÊÇ®Ëá™Â∑±‰∫åÊ¨°ÂºÄÂèëÂØπÊé•ÁöÑÊüê‰∏™ÁøªËØëÊúçÂä°ÔºåÂèØÈÄöËøáÊ≠§Êù•ÊåáÂÆöËá™Â∑±ÁöÑÁøªËØëÊé•Âè£„ÄÇ
* **[ÁõëÊéßÈ°µÈù¢Âä®ÊÄÅÊ∏≤ÊüìÁöÑÊñáÊú¨ËøõË°åËá™Âä®ÁøªËØë](http://translate.zvo.cn/4067.html)**ÔºåÂ¶ÇÊûúÈ°µÈù¢Áî® JavaScript ÁöÑÂú∞ÊñπÊØîËæÉÂ§öÔºåÂÜÖÂÆπÈÉΩÊòØÈöèÊó∂Áî®JSÊù•ÊéßÂà∂ÊòæÁ§∫ÁöÑÔºåÊØîÂ¶Ç VUE„ÄÅReact Á≠âÊ°ÜÊû∂ÂÅöÁöÑÂ∫îÁî®ÔºåÂÆÉÂèØ‰ª•ÂÆûÊó∂ÁõëÊéßDOM‰∏≠ÊñáÂ≠óÁöÑÂèòÂä®ÔºåÂΩìÂèëÁîüÂèòÂä®ÂêéÁ´ãÂç≥ËØÜÂà´Âπ∂ËøõË°åÁøªËØë„ÄÇ
* **[ËÆæÁΩÆÊú¨Âú∞ËØ≠ÁßçÔºàÂΩìÂâçÁΩëÈ°µÁöÑËØ≠ÁßçÔºâ](http://translate.zvo.cn/4066.html)**ÔºåÊâãÂä®ÊåáÂÆöÂΩìÂâçÈ°µÈù¢ÁöÑËØ≠Ë®Ä„ÄÇÂ¶ÇÊûú‰∏çËÆæÁΩÆÔºåÂÆÉ‰ºöËá™Âä®ËØÜÂà´ÂΩìÂâçÁΩëÈ°µÁöÑÊñáÊú¨ÔºåÂèñÂΩìÂâçÁΩëÈ°µÊñáÊú¨‰∏≠ÔºåÂá∫Áé∞È¢ëÁéáÊúÄÈ´òÁöÑËØ≠Áßç‰∏∫ÈªòËÆ§ËØ≠Áßç„ÄÇ
* **[Ëá™Âä®ÂàáÊç¢‰∏∫Áî®Êà∑ÊâÄ‰ΩøÁî®ÁöÑËØ≠Áßç](http://translate.zvo.cn/4065.html)**ÔºåÁî®Êà∑Á¨¨‰∏ÄÊ¨°ÊâìÂºÄÁΩëÈ°µÊó∂ÔºåËá™Âä®Âà§Êñ≠ÂΩìÂâçÁî®Êà∑ÊâÄ‰ΩøÁî®ÁöÑËØ≠Áßç„ÄÅ‰ª•ÂèäÊâÄÂú®ÁöÑÂõΩÂÆ∂ÔºåÊù•Ëá™Âä®ËøõË°åÂàáÊç¢‰∏∫Ëøô‰∏™ËØ≠Áßç„ÄÇ
* **[‰∏ªÂä®ËøõË°åËØ≠Ë®ÄÂàáÊç¢](http://translate.zvo.cn/4064.html)**ÔºåÂºÄÊîæ‰∏Ä‰∏™ÊñπÊ≥ïÊèê‰æõÁ®ãÂ∫èË∞ÉÁî®ÔºåÂè™ÈúÄ‰º†ÂÖ•ÁøªËØëÁöÑÁõÆÊ†áËØ≠Ë®ÄÔºåÂç≥ÂèØÂø´ÈÄüÂàáÊç¢Âà∞ÊåáÂÆöËØ≠Áßç
* **[Âè™ÁøªËØëÊåáÂÆöÁöÑÂÖÉÁ¥†](http://translate.zvo.cn/4063.html)**ÔºåÊåáÂÆöË¶ÅÁøªËØëÁöÑÂÖÉÁ¥†ÁöÑÈõÜÂêà,ÂèØ‰º†ÂÖ•‰∏Ä‰∏™ÊàñÂ§ö‰∏™ÂÖÉÁ¥†„ÄÇÂ¶ÇÊûú‰∏çËÆæÁΩÆÊ≠§ÔºåÈªòËÆ§ÁøªËØëÊï¥‰∏™ÁΩëÈ°µ„ÄÇ
* **[ÁøªËØëÊó∂ÂøΩÁï•ÊåáÂÆöÁöÑid](http://translate.zvo.cn/4062.html)**ÔºåÁøªËØëÊó∂ËøΩÂä†‰∏äËá™Â∑±ÊÉ≥ÂøΩÁï•‰∏çËøõË°åÁøªËØëÁöÑidÁöÑÂÄºÔºåÂá°ÊòØÂú®ËøôÈáåÈù¢ÁöÑÔºåÈÉΩ‰∏çËøõË°åÁøªËØëÔºå‰πüÂ∞±ÊòØÂΩìÂâçÂÖÉÁ¥†‰ª•ÂèäÂÖ∂Â≠êÂÖÉÁ¥†ÈÉΩ‰∏ç‰ºöË¢´ÁøªËØë„ÄÇ
* **[ÁøªËØëÊó∂ÂøΩÁï•ÊåáÂÆöÁöÑclassÂ±ûÊÄß](http://translate.zvo.cn/4061.html)**ÔºåÁøªËØëÊó∂ËøΩÂä†‰∏äËá™Â∑±ÊÉ≥ÂøΩÁï•‰∏çËøõË°åÁøªËØëÁöÑclassÊ†áÁ≠æÔºåÂá°ÊòØÂú®ËøôÈáåÈù¢ÁöÑÔºåÈÉΩ‰∏çËøõË°åÁøªËØëÔºå‰πüÂ∞±ÊòØÂΩìÂâçÂÖÉÁ¥†‰ª•ÂèäÂÖ∂Â≠êÂÖÉÁ¥†ÈÉΩ‰∏ç‰ºöË¢´ÁøªËØë„ÄÇ
* **[ÁøªËØëÊó∂ÂøΩÁï•ÊåáÂÆöÁöÑtagÊ†áÁ≠æ](http://translate.zvo.cn/4060.html)**ÔºåÁøªËØëÊó∂ËøΩÂä†‰∏äËá™Â∑±ÊÉ≥ÂøΩÁï•‰∏çËøõË°åÁøªËØëÁöÑtagÊ†áÁ≠æÔºåÂá°ÊòØÂú®ËøôÈáåÈù¢ÁöÑÔºåÈÉΩ‰∏çËøõË°åÁøªËØëÔºå‰πüÂ∞±ÊòØÂΩìÂâçÂÖÉÁ¥†‰ª•ÂèäÂÖ∂Â≠êÂÖÉÁ¥†ÈÉΩ‰∏ç‰ºöË¢´ÁøªËØë„ÄÇ
* **[ÁøªËØëÊó∂ÂøΩÁï•ÊåáÂÆöÁöÑÊñáÂ≠ó‰∏çÁøªËØë](http://translate.zvo.cn/283381.html)**ÔºåÁøªËØëÊó∂ËøΩÂä†‰∏äËá™Â∑±ÊÉ≥ÂøΩÁï•‰∏çËøõË°åÁøªËØëÁöÑÊñáÂ≠óÔºåÂá°ÊòØÂú®ËøôÈáåÈù¢ÁöÑÔºåÈÉΩ‰∏çËøõË°åÁøªËØë„ÄÇ
* **[ÂØπÁΩëÈ°µ‰∏≠ÂõæÁâáËøõË°åÁøªËØë](http://translate.zvo.cn/4055.html)**ÔºåÂú®ËøõË°åÁøªËØëÊó∂ÔºåÂØπÂÖ∂‰∏≠ÁöÑÂõæÁâá‰πü‰ºö‰∏ÄËµ∑ËøõË°åÁøªËØë„ÄÇ
* **[Èº†Ê†áÂàíËØçÁøªËØë](http://translate.zvo.cn/4072.html)**ÔºåÈº†Ê†áÂú®ÁΩëÈ°µ‰∏≠ÈÄâ‰∏≠‰∏ÄÊÆµÊñáÂ≠óÔºå‰ºöËá™Âä®Âá∫Áé∞ÂØπÂ∫îÁøªËØëÂêéÁöÑÊñáÊú¨
* **[Ëé∑ÂèñÂΩìÂâçÊòæÁ§∫ÁöÑÊòØ‰ªÄ‰πàËØ≠Áßç](http://translate.zvo.cn/4074.html)**ÔºåÂ¶ÇÊûúÁî®Êà∑ÂàáÊç¢‰∏∫Ëã±ËØ≠ËøõË°åÊµèËßàÔºåÈÇ£‰πàËøô‰∏™ÊñπÊ≥ïÂ∞ÜËøîÂõûÁøªËØëÁöÑÁõÆÊ†áËØ≠Áßç„ÄÇ
* **[Ê†πÊçÆURL‰º†ÂèÇÊéßÂà∂‰ª•‰ΩïÁßçËØ≠ÁßçÊòæÁ§∫](http://translate.zvo.cn/41929.html)**ÔºåËÆæÁΩÆÂèØ‰ª•Ê†πÊçÆÂΩìÂâçËÆøÈóÆurlÁöÑÊüê‰∏™getÂèÇÊï∞Êù•ÊéßÂà∂‰ΩøÁî®Âì™ÁßçËØ≠Ë®ÄÊòæÁ§∫„ÄÇ
* **[Á¶ªÁ∫øÁøªËØëÂèäËá™Âä®ÁîüÊàêÈÖçÁΩÆ](http://translate.zvo.cn/4076.html)**ÔºåÂÖ∂ÂÆûÂÆÉ‰πüÂ∞±ÊòØ‰º†Áªü i18n ÁöÑËÉΩÂäõÔºåÊúâËØ≠Ë®ÄÈÖçÁΩÆÊñá‰ª∂Êèê‰æõÁøªËØëÁªìÊûú„ÄÇ
* **[ÊâãÂä®Ë∞ÉÁî®Êé•Âè£ËøõË°åÁøªËØëÊìç‰Ωú](http://translate.zvo.cn/4077.html)**ÔºåÈÄöËøáJavaScriptË∞ÉÁî®‰∏Ä‰∏™ÊñπÊ≥ïÔºå‰º†ÂÖ•ÁøªËØëÊñáÊú¨ËøõË°åÁøªËØëÔºåÂπ∂Ëé∑ÂæóÁøªËØëÁªìÊûú
* **[ÂÖÉÁ¥†ÁöÑÂÜÖÂÆπÊï¥‰ΩìÁøªËØëËÉΩÂäõÈÖçÁΩÆ](http://translate.zvo.cn/4078.html)**ÔºåÂØπnodeËäÇÁÇπÁöÑÊñáÊú¨ÊãøÊù•ËøõË°åÊï¥‰ΩìÁøªËØëÂ§ÑÁêÜÔºåËÄå‰∏çÂÜçÊãÜÂàÜÂÖ∑‰ΩìËØ≠ÁßçÔºåÊèêÈ´òÁøªËØëËØ≠Âè•ÈòÖËØªÈÄöÈ°∫Á®ãÂ∫¶
* **[ÁøªËØëÊé•Âè£ÂìçÂ∫îÊçïËé∑Â§ÑÁêÜ](http://translate.zvo.cn/4079.html)**ÔºåÂØπÁøªËØëAPIÊé•Âè£ÁöÑÂìçÂ∫îËøõË°åÊçïËé∑ÔºåËøõË°å‰∏Ä‰∫õËá™ÂÆö‰πâÊâ©Â±ï
* **[Ê∏ÖÈô§ÂéÜÂè≤ÁøªËØëËØ≠ÁßçÁöÑÁºìÂ≠ò](http://translate.zvo.cn/4080.html)**ÔºåÊ∏ÖÈô§Êéâ‰Ω†‰∏ä‰∏™È°µÈù¢ÊâÄËÆ∞ÂøÜÁöÑÁøªËØëËØ≠ÁßçÔºå‰ªéËÄåËææÂà∞ÂàáÊç¢È°µÈù¢Êó∂‰∏ç‰ºöÊåâÁÖß‰∏ä‰∏™È°µÈù¢ÁøªËØëËØ≠ÁßçËá™Âä®ËøõË°åÁøªËØëÁöÑÁõÆÁöÑ„ÄÇ
* **[ÁΩëÈ°µajaxËØ∑Ê±ÇËß¶ÂèëËá™Âä®ÁøªËØë](http://translate.zvo.cn/4086.html)**ÔºåÁõëÂê¨ÂΩìÂâçÁΩëÈ°µ‰∏≠ÊâÄÊúâÁöÑajaxËØ∑Ê±ÇÔºåÂΩìËØ∑Ê±ÇÁªìÊùüÂêéÔºåËá™Âä®Ëß¶ÂèëÁøªËØë
* **[ËÆæÁΩÆÂè™ÂØπÊåáÂÆöËØ≠ÁßçËøõË°åÁøªËØë](http://translate.zvo.cn/4085.html)**ÔºåÁøªËØëÊó∂Âè™‰ºöÁøªËØëÂú®ËøôÈáåËÆæÁΩÆÁöÑËØ≠ÁßçÔºåÊú™Âú®ÈáåÈù¢ÁöÑËØ≠ÁßçÂ∞Ü‰∏ç‰ºöË¢´ÁøªËØë„ÄÇ
* **[ËØÜÂà´Â≠óÁ¨¶‰∏≤ËØ≠ÁßçÂèäÂàÜÊûê](http://translate.zvo.cn/43128.html)**ÔºåÂØπÂ≠óÁ¨¶‰∏≤ËøõË°åÂàÜÊûêÔºåËØÜÂà´Âá∫ÈÉΩÊúâÂì™‰∫õËØ≠ÁßçÔºåÊØè‰∏™ËØ≠ÁßçÁöÑÂ≠óÁ¨¶ÊòØ‰ªÄ‰πà„ÄÅÊØè‰∏™ËØ≠ÁßçÂåÖÂê´ÁöÑÂ≠óÁ¨¶Êï∞ÊòØÂ§öÂ∞ë
* **[ÈáçÂÜô‰∏ÄÁ∫ßÁºìÂ≠òÔºàÊµèËßàÂô®ÁºìÂ≠òÔºâ](http://translate.zvo.cn/4082.html)**Ôºå‰Ω†Â¶ÇÊûú‰∏çÊÉ≥‰ΩøÁî®ÈªòËÆ§ÁöÑ localStorage ÁöÑÁºìÂ≠òÔºåÊÇ®ÂÆåÂÖ®ÂèØ‰ª•ÂØπÂÖ∂ÈáçÂÜôÔºåËÆæÁΩÆËá™Â∑±ÊÉ≥‰ΩøÁî®ÁöÑÁºìÂ≠òÊñπÂºè
* **[ËÆæÁΩÆ‰ΩøÁî®ÁöÑÁøªËØëÊúçÂä° translate.service.use](http://translate.zvo.cn/4081.html)**ÔºåÁõÆÂâçÊúâËá™ÊúâÁöÑÊúçÂä°Âô®Êèê‰æõÁøªËØëAPIÊñπÂºè„ÄÅÊó†Ëá™Â∑±ÊúçÂä°Âô®APIÁöÑÊñπÂºè‰∏§Áßç„ÄÇ
* **[ÂêØÁî®‰ºÅ‰∏öÁ∫ßÁ®≥ÂÆöÁøªËØë](http://translate.zvo.cn/4087.html)**ÔºåÁã¨Á´ã‰∫éÂºÄÊ∫êÁâàÊú¨ÁöÑÁøªËØëÈÄöÈÅì‰πãÂ§ñÔºå‰ªÖÂØπÂ∞ëÊï∞Áî®Êà∑ÂºÄÊîæÔºåÊèê‰æõ‰ºÅ‰∏öÁ∫ßÁöÑÁ®≥ÂÆö„ÄÅÈ´òÈÄü„ÄÅ‰ª•ÂèäÊõ¥Â§öÁΩëÁªúÂàÜÂèëËäÇÁÇπ„ÄÇ
* **[Â¢ûÂä†ÂØπÊåáÂÆöÊ†áÁ≠æÁöÑÂ±ûÊÄßËøõË°åÁøªËØë](http://translate.zvo.cn/231504.html)**ÔºåÂèØ‰ª•Â¢ûÂä†ÂØπÊåáÂÆöhtmlÊ†áÁ≠æÁöÑÊüê‰∏™ÊàñÊüê‰∫õÂ±ûÊÄßËøõË°åÁøªËØë„ÄÇÊØîÂ¶Çelement„ÄÅvue Á≠âÊ°ÜÊû∂ÔºåÊúâ‰∫õËá™ÂÆö‰πâÁöÑÊ†áÁ≠æÂ±ûÊÄßÔºåÊÉ≥ËÆ©ÂÖ∂‰πüÊ≠£Â∏∏ÁøªËØë
* **[Êú¨Âú∞ËØ≠Áßç‰πüËøõË°åÂº∫Âà∂ÁøªËØë](http://translate.zvo.cn/289574.html)**ÔºåÂàáÊç¢‰∏∫‰∏≠ÊñáÊó∂ÔºåÂç≥‰ΩøÊú¨Âú∞ËØ≠ÁßçËÆæÁΩÆÁöÑÊòØ‰∏≠ÊñáÔºåÁΩëÈ°µ‰∏≠Âè™Ë¶Å‰∏çÊòØ‰∏≠ÊñáÁöÑÂÖÉÁ¥†ÔºåÈÉΩ‰ºöË¢´ÁøªËØë‰∏∫Ë¶ÅÊòæÁ§∫ÁöÑËØ≠Áßç
* **[Ëá™ÂÆö‰πâÈÄöËøáÁøªËØëAPIËøõË°åÊó∂ÁöÑÁõëÂê¨‰∫ã‰ª∂](http://translate.zvo.cn/379207.html)**ÔºåÂΩìÈÄöËøáÁøªËØëAPIËøõË°åÊñáÊú¨ÁøªËØëÊó∂ÁöÑÊï¥‰∏™ËøáÁ®ãËøõË°åÁõëÂê¨ÔºåÂÅö‰∏Ä‰∫õËá™ÂÆö‰πâÂ§ÑÁêÜÔºåÊØîÂ¶ÇÁøªËØëAPIËØ∑Ê±ÇÂâçË¶ÅÂÅö‰∫õ‰ªÄ‰πà„ÄÅËØ∑Ê±ÇÁøªËØëAPIÂÆåÊàêÂπ∂Âú®DOMÊ∏≤ÊüìÂÆåÊØïÂêéËß¶Âèë‰∫õ‰ªÄ‰πà„ÄÇ
* **[ÂêØÁî®ÁøªËØë‰∏≠ÁöÑÈÅÆÁΩ©Â±Ç](http://translate.zvo.cn/407105.html)**ÔºåÂú®ËøõË°åÈÄöËøáÁøªËØëAPIËøõË°åÁøªËØëÊó∂ÔºåÁõ∏ÂÖ≥ÂÖÉÁ¥†‰∏äÈù¢ÊòæÁ§∫‰∏ÄÂ±ÇÂä†ËΩΩ‰∏≠ÁöÑÂä®ÁîªÊïàÊûúÔºåËÆ©Áî®Êà∑Áü•ÈÅìËøôÊÆµÊñáÊú¨Ê≠£Âú®ËøõË°åÂ§ÑÁêÜ‰∏≠

# Âú®Á∫ø‰ΩìÈ™å
http://res.zvo.cn/translate/demo.html


# ÊµãËØïÊïàÊûú
ÂÖàÊãøÂà´‰∫∫ÁöÑÁΩëÁ´ôÂä®ÊâãËØïËØïÊïàÊûú
![ÊïàÊûú](http://cdn.weiunity.com/site/341/news/9a7228aaae28475996da9026b93356c8.gif &quot;&quot;)

1. Èöè‰æøÊâìÂºÄ‰∏Ä‰∏™ÁΩëÈ°µ
2. Âè≥ÈîÆ - ÂÆ°Êü•ÂÖÉÁ¥†
3. Á≤òË¥¥ÂÖ•‰ª•‰∏ã‰ª£Á†ÅÔºö	  
	```` var head= document.getElementsByTagName(&#039;head&#039;)[0];  var script= document.createElement(&#039;script&#039;);  script.type= &#039;text/javascript&#039;;  script.src= &#039;https://res.zvo.cn/translate/inspector_v2.js&#039;;  head.appendChild(script);  ````
4. Enter ÂõûËΩ¶ÈîÆ Ôºå ÊâßË°å
5. Âú®ÂΩìÂâçÁΩëÈ°µÁöÑÂ∑¶‰∏äËßíÔºåÂ∞±Âá∫Áé∞‰∫Ü‰∏Ä‰∏™Â§ßÂ§ßÁöÑÂàáÊç¢ËØ≠Ë®ÄÔºåÂàáÊç¢ËØïËØïÁúã„ÄÇ

# Âø´ÈÄü‰ΩøÁî®
Âú®ÁΩëÈ°µÊúÄÊú´Â∞æÔºå ````&lt;/html&gt;```` ‰πãÂâçÔºåÂä†ÂÖ•‰ª•‰∏ã‰ª£Á†ÅÔºå‰∏ÄËà¨Âú®È°µÈù¢ÁöÑÊúÄÂ∫ïÈÉ®Â∞±Âá∫Áé∞‰∫ÜÈÄâÊã©ËØ≠Ë®ÄÁöÑ select ÂàáÊç¢Ê†áÁ≠æ„ÄÇ ÂÖ∂ÂÆûÂ∞±Ëøô‰πàÁÆÄÂçïÔºö

````
&lt;script src=&quot;https://cdn.staticfile.net/translate.js/3.12.0/translate.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
translate.language.setLocal(&#039;chinese_simplified&#039;); //ËÆæÁΩÆÊú¨Âú∞ËØ≠ÁßçÔºàÂΩìÂâçÁΩëÈ°µÁöÑËØ≠ÁßçÔºâ„ÄÇÂ¶ÇÊûú‰∏çËÆæÁΩÆÔºåÈªòËÆ§Ëá™Âä®ËØÜÂà´ÂΩìÂâçÁΩëÈ°µÊòæÁ§∫ÊñáÂ≠óÁöÑËØ≠Áßç„ÄÇ ÂèØÂ°´ÂÜôÂ¶Ç &#039;english&#039;„ÄÅ&#039;chinese_simplified&#039; Á≠âÔºåÂÖ∑‰ΩìÂèÇËßÅÊñáÊ°£‰∏ãÊñπÂÖ≥‰∫éÊ≠§ÁöÑËØ¥Êòé„ÄÇ
translate.service.use(&#039;client.edge&#039;); //ËÆæÁΩÆÊú∫Âô®ÁøªËØëÊúçÂä°ÈÄöÈÅìÔºåÁõ¥Êé•ÂÆ¢Êà∑Á´ØÊú¨Ë∫´Ôºå‰∏ç‰æùËµñÊúçÂä°Á´Ø „ÄÇÁõ∏ÂÖ≥ËØ¥ÊòéÂèÇËÄÉ http://translate.zvo.cn/43086.html
translate.execute();//ËøõË°åÁøªËØë 
&lt;/script&gt;
````



# ‰ΩøÁî®Á§∫‰æã

## Âú®ÊµèËßàÂô®‰ΩøÁî®

**ÊôÆÈÄöÁΩëÁ´ô‰∏≠ÁÇπÂáªÊüê‰∏™ËØ≠Ë®ÄËøõË°åÂàáÊç¢**
Â¶Ç‰∏ãÂõæÊâÄÁ§∫ÔºåÁΩëÁ´ô‰∏≠ÁöÑÊüê‰∏™‰ΩçÁΩÆË¶ÅÊúâÂá†ÁßçËØ≠Ë®ÄÂàáÊç¢  
![](http://cdn.weiunity.com/site/341/news/43b838ea6ad041898037eaaaf5802776.png)  
Áõ¥Êé•Âú®ÂÖ∂html‰ª£Á†ÅÊú´Â∞æÁöÑ‰ΩçÁΩÆÂä†ÂÖ•‰ª•‰∏ã‰ª£Á†ÅÔºö  

````
&lt;!-- Â¢ûÂä†ÊüêÁßçËØ≠Ë®ÄÂàáÊç¢ÁöÑÊåâÈíÆ„ÄÇÊ≥®ÊÑè ul‰∏äÂä†‰∫Ü‰∏Ä‰∏™ class=&quot;ignore&quot; ‰ª£Ë°®ËøôÂùó‰ª£Á†Å‰∏ç‰ºöË¢´ÁøªËØëÂà∞ --&gt;
&lt;ul class=&quot;ignore&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:translate.changeLanguage(&#039;english&#039;);&quot;&gt;English&lt;/a&gt;&lt;/li&gt;|
	&lt;li&gt;&lt;a href=&quot;javascript:translate.changeLanguage(&#039;chinese_simplified&#039;);&quot;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;&lt;/li&gt;|
	&lt;li&gt;&lt;a href=&quot;javascript:translate.changeLanguage(&#039;chinese_traditional&#039;);&quot;&gt;ÁπÅÈ´î‰∏≠Êñá&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- ÂºïÂÖ•Â§öËØ≠Ë®ÄÂàáÊç¢ÁöÑjs --&gt;
&lt;script src=&quot;https://cdn.staticfile.net/translate.js/3.12.0/translate.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
	translate.selectLanguageTag.show = false; //‰∏çÂá∫Áé∞ÁöÑselectÁöÑÈÄâÊã©ËØ≠Ë®Ä
    translate.service.use(&#039;client.edge&#039;); //ËÆæÁΩÆÊú∫Âô®ÁøªËØëÊúçÂä°ÈÄöÈÅì
	translate.execute();
&lt;/script&gt;
````

## Âú® NPM ‰∏≠‰ΩøÁî®

1. Install

    ```bash
    npm i i18n-jsautotranslate
    ```

2. Import

    ```javascript
    import translate from &#039;i18n-jsautotranslate&#039;
    /* Or */
    const translate = require(&quot;i18n-jsautotranslate&quot;)
    ```

[ËØ¶ÁªÜ‰ΩøÁî®ËØ¥Êòé](https://translate.zvo.cn/4041.html) |  [Vue2 ‰∏≠‰ΩøÁî® translate.js Âú®Á∫ø Demo](https://lruihao.github.io/vue-el-demo/#/translate-js)



# Ë∞ÅÂú®‰ΩøÁî®

ÂºÄÊ∫êÈ°πÁõÆÔºö  
* [DzzOffice](http://www.dzzoffice.com/index.php?mod=dzzmarket&amp;op=view&amp;mid=58) ÂºÄÊ∫êÂäûÂÖ¨Â•ó‰ª∂ÔºåÊê≠Âª∫Ëá™Â∑±ÁöÑÁ±ª‰ºº‚ÄúGoogle‰ºÅ‰∏öÂ∫îÁî®Â•ó‰ª∂‚Äù„ÄÅ‚ÄúÂæÆËΩØOffice365‚ÄùÁöÑ‰ºÅ‰∏öÂçèÂêåÂäûÂÖ¨Âπ≥Âè∞
* [ModStart](https://modstart.com/m/WebTranslate) Âü∫‰∫é Laravel ÁöÑÊ®°ÂùóÂåñÂÖ®Ê†àÂºÄÂèëÊ°ÜÊû∂
* [ÁÆ°‰ºä‰Ω≥ERP](https://gitee.com/jishenghua/JSH_ERP) ÂõΩ‰∫ßÂºÄÊ∫êERPÁ≥ªÁªüÂÖ≥Ê≥®Â∫¶Á¨¨‰∏ÄÔºå‰∏ìÊ≥®ËøõÈîÄÂ≠ò„ÄÅÁîü‰∫ß„ÄÅÊÄªË¥¶
* [FixIt](https://github.com/hugo-fixit/cmpt-translate) ‰∏ÄÊ¨æÁÆÄÊ¥Å„ÄÅ‰ºòÈõÖ‰∏îÂÖàËøõÁöÑHugo ÂçöÂÆ¢‰∏ªÈ¢ò
* [Z-Blog](https://app.zblogcn.com/?id=49226) ÊòìÁî®ÁöÑÂçöÂÆ¢Á®ãÂ∫èÔºåÂäüËÉΩ‰∏∞ÂØåÔºåÊ®°ÊùøÂ§öÊ†∑ÔºåÂä©ËΩªÊùæÊê≠Âª∫‰∏™ÊÄßÂçöÂÆ¢„ÄÇ
* [Discuz](https://addon.dismall.com/plugins/domi_translate.html) Áü•ÂêçËÆ∫ÂùõÁ≥ªÁªüÔºåÂäüËÉΩÂº∫Â§ßÔºåÊèí‰ª∂‰ºóÂ§öÔºåÊâìÈÄ†Ê¥ªË∑É‰∫íÂä®ÁöÑÁΩëÁªúÁ§æÂå∫„ÄÇ
* [Pear Admin Layui](https://gitee.com/pear-admin/Pear-Admin-Layui/tree/i18n/) Pear Admin Layui ÊòØÂü∫‰∫é Layui ÁöÑÂêéÂè∞ÁÆ°ÁêÜÊ®°ÊùøÔºåÁÆÄÊ¥ÅÁæéËßÇÔºåÂÆûÁî®È´òÊïà„ÄÇ
* [kefu.js](https://gitee.com/mail_osc/kefu.js) ÂºÄÊ∫êjsËÅäÂ§©ÁïåÈù¢Êèí‰ª∂ÔºåÊñπ‰æøÂø´Êç∑ÔºåÂä©ÂäõÁΩëÁ´ôÊ≤üÈÄöÊúçÂä°„ÄÇ
* [Layui](https://gitee.com/mail_osc/translate_layui) ÁÆÄÊ¥ÅÂ•ΩÁî®ÁöÑÂâçÁ´ØÊ°ÜÊû∂ÔºåÁªÑ‰ª∂‰∏∞ÂØåÔºå‰∏äÊâãÂÆπÊòìÔºåÂπøÂèóÂºÄÂèëËÄÖÈùíÁùê„ÄÇ
* [wangmarket CMS](http://cms.zvo.cn) ÂºÄÊ∫êÁöÑSAAS‰∫ëÂª∫Á´ôÁ≥ªÁªüÔºåÂèØÁßÅÊúâÈÉ®ÁΩ≤ÔºåÂèØÈÄöËøáÂêéÂè∞‰ªªÊÑèÂºÄÈÄöÂ§ö‰∏™ÁΩëÁ´ôÔºåÊØè‰∏™ÁΩëÁ´ôÁã¨Á´ãÁÆ°ÁêÜ
* [Êòì‰ºòCMS](https://www.eyoucms.com/mall/plus/29751.html) ÂäüËÉΩÂº∫Â§ßÁöÑÂÜÖÂÆπÁÆ°ÁêÜÁ≥ªÁªüÔºåÊìç‰ΩúÁÆÄ‰æøÔºåÊ®°ÊùøÈöèÂøÉÈÄâ„ÄÇ
* [ËøÖÁùøCMS](https://www.xunruicms.com/shop/1285.html) ‰∏ÄÊ¨æÂäüËÉΩÂÆåÂñÑÁöÑÂÜÖÂÆπÁÆ°ÁêÜÁ≥ªÁªüÔºåÊÄßËÉΩÂçìË∂äÔºåÊòì‰∫é‰ΩøÁî®„ÄÇ
* [chanyue-cms](https://gitee.com/yanyutao0402/chanyue-cms) Âü∫‰∫éNode„ÄÅExpress„ÄÅMySQL„ÄÅVue3Á†îÂèëÁöÑÈ´òË¥®ÈáèÂÆûÁî®ÂûãCMSÁ≥ªÁªü
* [phpok cms](https://gitee.com/phpok/phpok) ÊûÅÂÖ∂Ëá™Áî±ÁöÑ‰ºÅ‰∏öÁ´ôÁ®ãÂ∫èÔºåÊîØÊåÅÂêÑÁßçËá™ÂÆö‰πâÈÖçÁΩÆ„ÄÇ
* [RPCMS](https://app.rpcms.cn/app/149.html) ËΩªÈáèÂûãphpÂÜÖÂÆπÁÆ°ÁêÜÁ≥ªÁªüÔºåÂ∞èÂûã„ÄÅËΩªÈáèÔºå‰ΩÜÂäüËÉΩ‰∏∞ÂØåÔºåÂèØÊâ©Â±ïÊÄßÂº∫„ÄÇ
* [Masuit.MyBlogs](https://gitee.com/masuit/Masuit.MyBlogs) È´òÊÄßËÉΩÈ´òÂÆâÂÖ®ÊÄß‰ΩéÂç†Áî®ÁöÑ‰∏™‰∫∫ÂçöÂÆ¢Á≥ªÁªü

...  
  
|   |   | | | | 
| ------------ | ------------ |------------ |------------ |------------ | 
|  È´òÊ†° |  Ê∏ÖÂçéÂ§ßÂ≠¶ | Âåó‰∫¨ÁêÜÂ∑•Â§ßÂ≠¶ |  Ë•øËãèÊ†ºÂÖ∞Â§ßÂ≠¶ | ‰∏≠ÂõΩÁæéÊúØÂ≠¶Èô¢ | ‰∫öÂà©Ê°ëÈÇ£Â∑ûÁ´ãÂ§ßÂ≠¶|  
|  ÈõÜÂõ¢ |  ‰∏≠ÂõΩ‰∏ÄÊ±Ω | ‰∫¨‰∏ú | ‰∏≠ÂÖ¥ | ‰∏≠ÂõΩÈìÅÂª∫ | ÈïøÂüéÊ±ΩËΩ¶ |    
|  ÊîøÂä° |  ÊπñÂåóÁúÅ‰∫∫Ê∞ëÊ£ÄÂØüÈô¢ | ‰∫ëÂçóÁúÅËçØÂìÅÁõëÁù£ÁÆ°ÁêÜÂ±Ä | ‰∫ëÂçóÁúÅÊú∫ÂÖ≥‰∫ãÂä°ÁÆ°ÁêÜÂ±Ä | È¶ôÊ∏Ø‰∏ÄÂ∏¶‰∏ÄË∑ØÁ†îÁ©∂Èô¢ | Êõ≤ÈùñÂ∏ÇÁîüÊÄÅÁéØÂ¢ÉÂ±Ä |    
|  ÁßëÁ†î |  ÂõΩÂÆ∂ÁîüÁâ©‰ø°ÊÅØ‰∏≠ÂøÉ | Âæ∑ÂõΩÁßëÂ∑•ÂàõÊñ∞Èô¢ | ‰∏≠ÁßëËÉΩÁ†îÁîµÂäõÊäÄÊúØÁ†îÁ©∂Èô¢ | ÂõΩÂÆ∂Êñ∞ËÉΩÊ∫êÊ±ΩËΩ¶ÊäÄÊúØÂàõÊñ∞‰∏≠ÂøÉ | ÂåóÊñπÂçéÂàõ |  
|  ‰∫ëÂéÇÂïÜ |  ÊåáÁÇπ‰∫ë | ÊØèÂàª‰∫ë | Èõ®‰∫ë | DOGSSL | Â§öÂΩ©‰∫ë |  
|  Âçè‰ºö |  ‰∏≠ÂõΩÂõΩÈôÖÁéØ‰øùÂ±ïËßà‰ºö | ÂõΩÈôÖÁ†îÂèëÊñπÊ≥ïÂçè‰ºö | ‰∏≠ÂõΩÂÜÖÁáÉÊú∫Â≠¶‰ºö | Ê∑±Âú≥Â∏ÇÊô∫ÊÖßÂüéÂ∏Ç‰∫ß‰∏öÂçè‰ºö | Â±±‰∏úÁúÅÁ§æ‰ºöÁªÑÁªáÊÄª‰ºö |  
|  Âπ≥Âè∞ |  ‰∏úÁõü | ESGÂõΩÈôÖÊúçÂä°Âπ≥Âè∞ | ÂÆâÂæΩÁúÅÂ§ñË¥∏ÁªºÂêàÊúçÂä°Âπ≥Âè∞ | ÊπñÂçó‰ºÅ‰∏öÂõΩÈôÖÂåñÁªèËê•ÊúçÂä°Âπ≥Âè∞ | ‰∏≠‰∫öÈááÊãõÁΩë | 

...

Â¶ÇÊûúÊÇ®ÊúâÂºÄÊ∫êÈ°πÁõÆÔºåÊØîÂ¶ÇÊñáÊ°£„ÄÅcms„ÄÅUI Ê°ÜÊû∂„ÄÅÂêéÂè∞ÁÆ°ÁêÜÊ°ÜÊû∂„ÄÅÁ≠âÁ≠âÔºåÈúÄË¶ÅÈááÁî®Ê≠§ËøõË°åÂ§öËØ≠Ë®ÄÂàáÊç¢ÔºåÊ¨¢ËøéÂñäÊàëÔºåÊó†ÂÅøÊèê‰æõÂÖ®Á®ãÊé•ÂÖ•ËÆ®ËÆ∫ÂèäÈÅáÂà∞ÁöÑÈóÆÈ¢òË∑üÈöè‰ºòÂåñÔºåÂ∏åÊúõÊàë‰ª¨ÁöÑÂºÄÊ∫êÈ°πÁõÆËÉΩ‰∫íÁõ∏‰∫ßÁîü‰ΩúÁî®‰∏ÄËµ∑Ë∂äÊù•Ë∂äÂ•Ω„ÄÇÂ¶ÇÊûú‰Ω†ÁöÑÈ°πÁõÆÂú®Ëøô‰∏™ÂàóË°®‰∏≠Ê≤°ÊúâÔºåÊ¨¢ËøéËÅîÁ≥ªÊàëËØ¥ÊòéÔºåÊàëÁªôÂä†ÂÖ•ËøõÂéª„ÄÇÂ¶ÇÊûúÊÇ®‰∏çÊÉ≥Âá∫Áé∞Âú®ËøôÈáåÔºå‰πüËÅîÁ≥ªÊàëÔºåÊàëÁªôÈöêÂéª„ÄÇ


# TCDNÈÉ®ÁΩ≤
tcdnÊòØtranslate.js ÁöÑÈ´òÁ∫ßÁâàÊú¨ÔºåÂÆÉÁöÑËÉΩÂäõÊòØËÆ©‰Ω†ÂéüÊú¨ÁöÑÁΩëÁ´ôÂèØ‰ª•Áî®‰∏çÂêåÁöÑÂüüÂêçËÆøÈóÆÂà∞‰∏çÂêåÁöÑËØ≠Áßç„ÄÇËÄå‰∏çÂêåÁöÑËØ≠ÁßçÔºåÈÉΩÂèØ‰ª•Ë¢´Êî∂ÂΩïÔºÅÂÆÉÂèØ‰ª•ÂÖçË¥πÈÉ®ÁΩ≤Âà∞ÊúçÂä°Âô®ËøõË°å‰ΩøÁî®„ÄÇÊ≥®ÊÑèÔºåÂÆÉÈúÄË¶Å‰ΩøÁî®‰∏™1Ê†∏2GÁöÑÊúçÂä°Âô®ËøõË°åÈÉ®ÁΩ≤ÁöÑ„ÄÇ    
ÈÉ®ÁΩ≤ÊñπÂºèÊúâ‰∏§ÁßçÔºö 
### ÂÆùÂ°îÈÉ®ÁΩ≤
È¶ñÈÄâÈúÄË¶Å‰Ω†ÁöÑÂÆùÂ°îÈù¢ÊùøÈúÄË¶Å 9.3.0 Âèä‰ª•‰∏äÁâàÊú¨„ÄÇ ‰∏çÁÑ∂‰Ω†Âú®‰∏ã‰∏ÄÊ≠•ÈÉ®ÁΩ≤Êó∂ÔºåÊòØÊêúÁ¥¢‰∏çÂà∞Êàë‰ª¨ TCDN Ëøô‰∏™ÊúçÂä°ÁöÑ„ÄÇ  
Â¶ÇÊûú‰Ω†Ê≤°ÊúâÂÆâË£ÖÂÆùÂ°îÈù¢ÊùøÔºåÂèØ‰ª•ÂÖàÂéªÂÆâË£ÖÂÆùÂ°îÈù¢ÊùøÔºö [https://www.bt.cn/new/download.html?r=dk_tcdn](https://www.bt.cn/new/download.html?r=dk_tcdn)  
ËØ¶ÁªÜÈÉ®ÁΩ≤Ê≠•È™§ÂèØÂèÇËÄÉÔºö  [https://translate.zvo.cn/302663.html](https://translate.zvo.cn/302663.html)
### ÊúçÂä°Âô®ÈÉ®ÁΩ≤
ÈúÄË¶Å‰∏Ä‰∏™Âπ≤ÂáÄÁöÑÊúçÂä°Âô®Ôºå‰∏ç‰æùËµñ‰ªª‰ΩïÁéØÂ¢ÉÁöÑÊÉÖÂÜµ‰∏ãËøõË°åÁöÑÈÉ®ÁΩ≤ÔºåÈúÄË¶Å‰Ω†ÊáÇÁÇπlinuxÂëΩ‰ª§Ë°åÔºå ÈÉ®ÁΩ≤ÊñπÂºèÂèÇËÄÉÔºö  [https://translate.zvo.cn/236899.html](https://translate.zvo.cn/236899.html)


# È°πÁõÆÁî±Êù•
2021Âπ¥Ôºåtranslate ÁøªËØëÊúçÂä°È°πÁõÆÂàõÂª∫ÔºåÊúÄÂàù‰∏∫ÁÆÄÂåñGoogleÁΩëÈ°µÁøªËØëJSËøõË°å‰∫ÜÂ∞ÅË£ÖÔºåÂèØ‰ª•Êõ¥ÁÆÄÂçïËøõË°å‰ΩøÁî®Ôºå‰ΩÜÊòØÂõ†‰∏∫Êâ©Â±ïÊûÅÂÖ∂ÊúâÈôêÔºåÊñáÊ°£‰πüÊ≤°ÈÇ£‰πàÂ•ΩÔºå‰∫éÊòØÂºÄÂßã‰∫ÜÈáçÊûÑ„ÄÇ  
2022Âπ¥ÂàùÔºåÂÆåÂÖ®ËÑ±Á¶ªGoogleÁΩëÈ°µÁøªËØëJSÔºå‰ªéÂ∫ïÂ±ÇÂà§Êñ≠ÂºÄÂßãËøõË°å‰∫ÜÂÖ®ÈÉ®ÈáçÊûÑÔºåÊé®Âá∫ 2.0 ÁâàÊú¨ÔºåÂú®Âä†ËΩΩjsÁöÑËµÑÊ∫êÂ§ßÂ∞è‰∏äÈôç‰Ωé‰∫Ü95%ÔºåÊõ¥Âø´Âä†ËΩΩÔºåÂêåÊó∂ÂÜÖÁΩÆ‰∫ÜÂ§öÂ±ÇÁºìÂ≠ò„ÄÅÂ§öÁßçËá™ÂÆö‰πâÊñπÂºèÁ≠âËÉΩÂäõÔºå‰ΩøÁî®Êõ¥Âä†ÁÅµÊ¥ª„ÄÅÁøªËØëÈÄüÂ∫¶Êõ¥Âä†È´òÊïàÔºåÊûÅÂ§ßÊèêÈ´ò‰∫ÜÁî®Êà∑‰ΩøÁî®‰ΩìÈ™å„ÄÇ  
ÂêåÂπ¥ÔºåÂêéÁ´ØÁøªËØëÊúçÂä°‰πüÂÆåÂÖ®ÂºÄÊ∫êÔºåÊîØÊåÅÂú®1Ê†∏1GÊúçÂä°Âô®ËøõË°åÁßÅÊúâÈÉ®ÁΩ≤ÔºåÁøªËØëÊúçÂä°ÂÜÖÁΩÆÂØπÊé•GoogleÁøªËØëÊúçÂä°„ÄÅÂçé‰∏∫‰∫ëÊú∫Âô®ÁøªËØëÊúçÂä°ÔºåÂ¶ÇÊûúÈúÄË¶ÅÂà´ÁöÑÁøªËØëÊúçÂä°ÊàñËÄÖÂ±ÄÂüüÁΩëÊó†ÁΩëÁéØÂ¢É‰∏ãÈÉ®ÁΩ≤Ôºå‰πüÂèØ‰ª•Âø´ÈÄüÂØπÊé•Ëá™ÊúâÁøªËØëÊé•Âè£„ÄÇ  
ÂêåÂπ¥Âπ¥Â∫ïÔºåÊàë‰ª¨ÁøªËØëÊúçÂä°ÁöÑcdnÊ∫ê translate.js ÁöÑÊúàËØ∑Ê±ÇÊ¨°Êï∞Ë∂ÖËøá‰∫Ü‰∏ÄÂçÉ‰∏áÊ¨°„ÄÇ  
2023Âπ¥ÔºåÁøªËØëÊúçÂä°ÂÜçÊ¨°ËøéÊù•Â§ßÁöÑÂèòÂåñÔºå‰∏ç‰ªÖ‰ªÖÂè™ÊòØÂØπÁΩëÈ°µ‰ΩøÁî®jsÊù•ËøõË°åÁøªËØëÔºåÂÆÉËøòÂ¢ûÂä†‰∫ÜÁøªËØëÂÜÖÂÆπÂàÜÂèëÁöÑËÉΩÂäõÔºåÊàë‰ª¨ÊöÇ‰∏îÁÆÄÂçïÂ∞ÜÂÖ∂Áß∞‰πã‰∏∫TCDNÔºåÂÆÉÂÖ∑Â§á‰∫ÜCDNÂÜÖÂÆπÂàÜÂèëÁöÑ‰∏Ä‰∫õËÉΩÂäõÔºåÊØîÂ¶ÇÂèØ‰ª•ÈÄöËøáÂêéÂè∞Ê∑ªÂä†‰∏Ä‰∏™Ê∫êÁ´ôÔºåÁÑ∂ÂêéÁªëÂÆö‰∏çÂêåÁöÑÂüüÂêçÔºåÂèØ‰ª•ËÆæÁΩÆÊØè‰∏™ÂüüÂêçÂØπÂ∫îÁùÄÊ∫êÁ´ôÁöÑÂì™ÁßçËØ≠Ë®ÄÔºåËøôÊ†∑ËÆøÈóÆÊó∂ÊâìÂºÄÁöÑÂ∞±Áõ¥Êé•ÊòØÁøªËØëÂêéÁöÑÁΩëÈ°µÔºåÂ¶ÇÊûúÊü•ÁúãÁΩëÈ°µÊ∫ê‰ª£Á†ÅÔºå‰ºöÂèëÁé∞htmlÊ∫êÁ†ÅÊú¨Ë∫´Â∞±ÊòØÂ∑≤ÁªèË¢´ÁøªËØëËøáÁöÑÔºå‰∏çÂú®Â±ÄÈôê‰∫éjsÁ´ØËøõË°åÁøªËØëÔºåËÄåÊòØÈÄöËøáÊúçÂä°Á´Ø‰∏ªÂä®ËøõË°åÁøªËØëÔºåÂπ∂ËøõË°åÁºìÂ≠òÔºåÁî®Êà∑ËÆøÈóÆËØ∑Ê±ÇÊó∂ÔºåÁõ¥Êé•Â∞ÜÁøªËØëÁªìÊûúËæìÂá∫ÁªôÁî®Êà∑Â±ïÁ§∫ÔºåÊûÅÂ§ßÊèêÈ´ò‰∫ÜÁî®Êà∑‰ΩøÁî®‰ΩìÈ™å„ÄÅÊØèÁßçËØ≠Áßç‰πüÈÉΩÂèØ‰ª•Âú®Áõ∏Â∫îÂõΩÂÆ∂ÊêúÁ¥¢ÂºïÊìéÊî∂ÂΩï„ÄÅÂπ∂‰∏îÁ≥ªÁªüÂõ†ÂÖ∑Â§áCDNÁöÑÂü∫Êú¨ËÉΩÂäõÔºåÂ¶ÇÊûúÁΩëÁ´ôÊúâÊõ¥Êñ∞ÔºåËøòÂèØ‰ª•ÈÄöËøáÂêéÂè∞Âø´ÈÄüÊõ¥Êñ∞Ê∫êÁ´ôÊàñËÄÖËÆøÈóÆÁõÆÊ†áÁ´ôÁÇπ„ÄÅÊàñËÄÖÊåáÂÆöËÆøÈóÆurlÁöÑÁΩëÈ°µÁøªËØëÁºìÂ≠ò„ÄÇ  
ÂêåÊ†∑ÁöÑËÉΩÂäõÔºåÊàë‰ª¨ÂèëÁé∞ÂèãÂïÜÊî∂Ë¥πÊ†áÊ≥®ÊòØ‰∏Ä‰∏™Á´ôÁÇπ20ÁßçÁøªËØëËØ≠ÁßçÁöÑÊÉÖÂÜµÊòØ‰∏Ä‰∏á‰∫åÊØèÂπ¥ÔºåËÄåÊàë‰ª¨Ëøô‰∏™ÊîØÊåÅ‰∏ÉÂÖ´ÂçÅÁßçËØ≠ÁßçÔºàÂèñÂÜ≥‰∫é translaet.service ÂêéÁ´ØÂØπÊé•ÁöÑÁøªËØëÊúçÂä°ÊîØÊåÅÁöÑËØ≠ÁßçÊï∞ÈáèÔºâÔºå‰∏ÄÂè∞ÊúçÂä°Âô®ÂèØÊâøËΩΩÊï∞ÂçÉ‰∏™Ê∫êÁ´ôÊèê‰æõÊúçÂä°ÔºÅ  
Ëá≥2023Âπ¥‰∏≠Êó¨ÔºåÊàë‰ª¨ÂÖ¨ÂºÄÁöÑÁøªËØëÊúçÂä° translate.service ÊúàËØ∑Ê±ÇÈáèÂ∑≤ËææÂà∞1.5‰∫øÊ¨°ÔºÅÂπ∂ÂÜç‰ª•ÈùûÂ∏∏ÊÅêÊÄñÁöÑÈÄüÂ∫¶Âú®Â¢ûÈïø„ÄÇ  


# ÁªìÊûÑÂõæÁ§∫
[![](https://cdn.weiunity.com/site/1144/news/70a5b291d9af484999cbee5735f5cd10.png)](http://doc.zvo.cn/translate.js/home.html)

# ‰ºòÁßÄÂºÄÊ∫êÈ°πÁõÆÂèäÁ§æÂå∫Êé®Ëçê
[Featbit](https://github.com/featbit/featbit) ‰∏Ä‰∏™100%ÂºÄÊ∫êÁöÑ Feature flags / Feature Management Âπ≥Âè∞Â∑•ÂÖ∑  
[IoTSharp](https://gitee.com/IoTSharp) IoTSharp ÊòØ‰∏Ä‰∏™ Âü∫‰∫é.Net Core ÂºÄÊ∫êÁöÑÁâ©ËÅîÁΩëÂü∫Á°ÄÂπ≥Âè∞Ôºå ÊîØÊåÅ HTTP„ÄÅMQTT „ÄÅCoAp ÂçèËÆÆ    
[ÊµÅ‰πã‰∫ë](https://gitee.com/ntdgg) ‰ø°ÊÅØÂåñ„ÄÅÊï∞Â≠óÂåñÊúçÂä°Êèê‰æõÂïÜ    


# ÊàëÁöÑÂÖ∂‰ªñÂºÄÊ∫êÈ°πÁõÆ

| ÂºÄÊ∫êÈ°πÁõÆ | starÊï∞Èáè | ‰ªìÂ∫ì |
| --- | --- | --- |
| ÂèØÁßÅÊúâÈÉ®ÁΩ≤ SAAS Âª∫Á´ôÁ≥ªÁªü  |  ![](https://gitee.com/mail_osc/wangmarket/badge/star.svg?theme=white) | https://gitee.com/mail_osc/wangmarket |
| Datax ÁöÑ Âçé‰∏∫‰∫ëOBS Êèí‰ª∂ | ![](https://gitee.com/HuaweiCloudDeveloper/obs-datax-plugins/badge/star.svg?theme=white) | https://gitee.com/HuaweiCloudDeveloper/obs-datax-plugins |
| ÊâíÁΩëÁ´ôÂ∑•ÂÖ∑ | ![](https://gitee.com/mail_osc/templatespider/badge/star.svg?theme=white)  |  https://gitee.com/mail_osc/templatespider | 
| Êñá‰ª∂‰∏ä‰º†Â∑•ÂÖ∑Á±ªÔºåOBSÂ≠òÂÇ®  | ![](https://gitee.com/mail_osc/FileUpload/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/FileUpload |
| Êô∫ËÉΩÂÆ¢ÊúçÊú∫Âô®‰∫∫  | ![](https://gitee.com/leimingyun/chatbot/badge/star.svg?theme=white ) | https://gitee.com/leimingyun/chatbot |
| ÁªìÂêà‰∫ëÂ≠òÂÇ®ÂÅöÁΩëÁ´ôÊó†ÈúÄÊúçÂä°Âô®  | ![](https://gitee.com/HuaweiCloudDeveloper/huaweicloud-obs-website-wangmarket-cms/badge/star.svg?theme=white ) | [huaweicloud-obs-website-wangmarket-cms](https://gitee.com/HuaweiCloudDeveloper/huaweicloud-obs-website-wangmarket-cms) |
| kefu.js Âú®Á∫øËÅäÂ§©ÁöÑÂâçÁ´Ø  | ![](https://gitee.com/mail_osc/kefu.js/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/kefu.js |
| ËΩªÈáèÁ∫ßjsÊ∂àÊÅØÊèêÈÜíÁªÑ‰ª∂  | ![](https://gitee.com/mail_osc/msg/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/msg |
| js ÂÆûÁé∞ html ÂÖ®Ëá™Âä®ÁøªËØë  | ![](https://gitee.com/mail_osc/translate/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/translate |
| ‰ª£Á†ÅÁîüÊàêÂô®ÔºåËá™Âä®ÂÜô‰ª£Á†Å  | ![](https://gitee.com/mail_osc/writecode/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/writecode |
| JavaÊó•ÂøóÂ≠òÂÇ®ÂèäËØªÂèñ | ![](https://gitee.com/mail_osc/log/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/log |
| LayuiÁöÑÂõΩÈôÖÂåñÊîØÊåÅÁªÑ‰ª∂ | ![](https://gitee.com/mail_osc/translate_layui/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/translate_layui |
| Java8ËΩªÈáèÁ∫ßhttpËØ∑Ê±ÇÁ±ª | ![](https://gitee.com/mail_osc/http.java/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/http.java |
| JavaÁâàÊåâÈîÆÁ≤æÁÅµÔºåÊ∏∏ÊàèËæÖÂä©ÂºÄÂèë | ![](https://gitee.com/mail_osc/xnx3/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/xnx3 |
| jsÁöÑWebSocketÊ°ÜÊû∂Â∞ÅË£Ö | ![](https://gitee.com/mail_osc/websocket.js/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/websocket.js |
| jsÈÇÆ‰ª∂ÂèëÈÄÅÊ®°Âùó | ![](https://gitee.com/mail_osc/email.java/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/email.java |
| WEB Á´ØÊµèËßàÂô®ÈÄöÁü•ÊèêÈÜíÂ∑•ÂÖ∑Á±ª | ![](https://gitee.com/mail_osc/notification.js/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/notification.js |
| JS‰∏≠ÊñáËΩ¨ÊãºÈü≥Â∑•ÂÖ∑Á±ª | ![](https://gitee.com/mail_osc/pinyin.js/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/pinyin.js |
| Java-ÂæÆ‰ø°Â∏∏Áî®Â∑•ÂÖ∑Á±ª | ![](https://gitee.com/mail_osc/xnx3_weixin/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/xnx3_weixin |
| QQÂØª‰ªôÁöÑÊ∏∏ÊàèËæÖÂä©ËΩØ‰ª∂ | ![](https://gitee.com/mail_osc/xunxian/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/xunxian |
| ÁßÅÊúâÂåñÈÉ®ÁΩ≤ SAASÂïÜÂüé | ![](https://gitee.com/leimingyun/wangmarket_shop/badge/star.svg?theme=white ) | https://gitee.com/leimingyun/wangmarket_shop |
| JavaÂºÄÂèëÊ°ÜÊû∂ÂèäËßÑÁ´†Á∫¶Êùü | ![](https://gitee.com/leimingyun/wm/badge/star.svg?theme=white ) | https://gitee.com/leimingyun/wm |
| SAASÂÆ¢ÊúçÁ≥ªÁªü | ![](https://gitee.com/leimingyun/yunkefu/badge/star.svg?theme=white ) | https://gitee.com/leimingyun/yunkefu |
| Ê†πÊçÆÊ†áÂáÜÁöÑ JavaDoc ÁîüÊàêÊé•Âè£ÊñáÊ°£ | ![](https://gitee.com/leimingyun/javadoc/badge/star.svg?theme=white) | https://gitee.com/leimingyun/javadoc |
| Áî®sqlÊñπÂºè‰ΩøÁî®Elasticsearch | ![](https://gitee.com/leimingyun/elasticsearch/badge/star.svg?theme=white ) | https://gitee.com/leimingyun/elasticsearch |
| JavaÂ∫îÁî®ÂÖ®Ëá™Âä®ÈÉ®ÁΩ≤ÂèäÊõ¥Êñ∞ | ![](https://gitee.com/leimingyun/sftp-ssh-autopublish/badge/star.svg?theme=white ) | https://gitee.com/leimingyun/sftp-ssh-autopublish |
| Êô∫ËÉΩËÅäÂ§©Êú∫Âô®‰∫∫ | ![](https://gitee.com/leimingyun/aichat/badge/star.svg?theme=white ) | https://gitee.com/leimingyun/aichat |
| Ëá™Âä®Â§á‰ªΩÊñá‰ª∂Âà∞Âçé‰∏∫‰∫ë OBS | ![](https://gitee.com/leimingyun/yunbackups/badge/star.svg?theme=white ) | https://gitee.com/leimingyun/yunbackups |
| JavaÊâìÂç∞ÂèäÈ¢ÑËßàÁöÑÂ∑•ÂÖ∑Á±ª | ![](https://gitee.com/leimingyun/printJframe/badge/star.svg?theme=white ) | https://gitee.com/leimingyun/printJframe |
‚Ä¶‚Ä¶‚Ä¶‚Ä¶

# ‰∫§ÊµÅ
Â¶ÇÊûúÊÇ®Âú®‰ΩøÁî®ËøáÁ®ã‰∏≠ÈÅáÂà∞‰ªª‰ΩïÂºÇÂ∏∏ÊÉÖÂÜµÔºåËØ∑ËØ¶ÁªÜËØ¥‰∏Ä‰∏ãÊÇ®ÈÅáÂà∞ÁöÑÈóÆÈ¢ò„ÄÇÂ¶ÇÊûúÂèØ‰ª•ÔºåËØ∑ÂÜô‰∏ãÊÇ®ÁöÑÁΩëÁ´ôÔºå‰ª•‰æøÊàë‰ª¨ÂèØ‰ª•Êõ¥ÂÖ®Èù¢Âú∞ÊµãËØïÔºå‰ª•‰æøÂø´ÈÄüÊâæÂà∞ÈóÆÈ¢òÊâÄÂú®  
‰ΩúËÄÖÂæÆ‰ø°Ôºöxnx3comÔºà‰ΩøÁî®‰∫§ÊµÅÂèØÂä†QQÁæ§ËøõË°åÔºåÊàëÁúãÂæÆ‰ø°Âæà‰∏çÂèäÊó∂Ôºâ    
Telegram : [untran](https://t.me/untran)  
‰∫§ÊµÅQQÁæ§:181781514  
‰∫§ÊµÅQQÁæ§:641047127  
‰∫§ÊµÅQQÁæ§:240567964  
‰ΩúËÄÖÈÇÆÁÆ±Ôºö921153866@qq.com  
ÂæÆ‰ø°ÂÖ¨‰ºóÂè∑Ôºöwangmarket  
github: [https://github.com/xnx3/translate](https://github.com/xnx3/translate)  
gitee:  [https://gitee.com/mail_osc/translate](https://gitee.com/mail_osc/translate)  


# ÂïÜ‰∏öÂåñÂ£∞Êòé

ÊàëÂÆåÂÖ®ÂÖÅËÆ∏‰Ω†ÊãøÊàëÁöÑÂºÄÊ∫êÈ°πÁõÆËøõË°åÂïÜ‰∏öÂåñÂåÖË£ÖÁõàÂà©ÔºåËÄåÊó†ÈúÄÁªôÊàëÊîØ‰ªò‰ªª‰ΩïË¥πÁî®ÔºÅ  
‰Ω†ËÉΩÊãøÊù•ËµöÈí±ÔºåÈÇ£ÊòØ‰Ω†ÁöÑÊú¨‰∫ã„ÄÇ  
ËÄåÊàëÁöÑÂºÄÊ∫êÈ°πÁõÆËÉΩÂ∏Æ‰Ω†ËµöÈí±ÔºåÊàë‰ºöÂæàËç£Âπ∏ÔºåÊàëËÉΩÈÄ†Á¶èÁ§æ‰ºö„ÄÇ  
‰Ω†Âú®Áî®ÂÆÉËøõË°åÂïÜ‰∏öÂåñÁõàÂà©ÁöÑÊó∂ÂÄôÔºåÈÅáÂà∞ÈóÆÈ¢ò‰πüÂÆåÂÖ®ÂèØ‰ª•Â§ßÊñπÁöÑÂêëÊàëÊ±ÇÂä©ÔºåÁî®ÂÆÉËµöÈí±Âπ∂‰∏çÊòØ‰ªÄ‰πàÂÅ∑ÂÅ∑Êë∏Êë∏ÁöÑ‰∫ãÊÉÖÔºåÊäÄÊúØËÉΩÁî®Êù•ÂÖªÂÆ∂Á≥äÂè£ÊîπÂñÑÁîüÊ¥ªÊòØÂÄºÂæóÁÇπËµûÁöÑ„ÄÇ  
ËÄå‰∏îÂ¶ÇÊûú‰Ω†‰∏çÊîæÂøÉÔºåÊàëËøòÂèØ‰ª•ÁôΩÁ∫∏ÈªëÂ≠óÁõñÁ´†ÔºåÈÄÅ‰Ω†‰∏Ä‰∏™ÂÆöÂøÉ‰∏∏„ÄÇ  
ËØ¥Ëøô‰πàÂ§öÔºåÊòØ‰ΩìÁé∞‰∏Ä‰∏™ÊÄÅÂ∫¶ÔºåÂºÄÊ∫êÂ∞±ÊòØÂºÄÊ∫êÔºåÊàë‰∏ç‰ºöÊÉ≥Ê≥ïÁªëÊû∂‰Ω†„ÄÇÊàë‰ª¨ÂèØ‰ª•Âú®‰∏ÄËµ∑‰ª•ÊúÄÁ∫ØÁ≤πÁöÑÁä∂ÊÄÅ‰∫§ÊµÅÔºåËÆ©ÁîüÊ¥ªÊõ¥ÁæéÂ•Ω„ÄÇ
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[shaka-project/shaka-player]]></title>
            <link>https://github.com/shaka-project/shaka-player</link>
            <guid>https://github.com/shaka-project/shaka-player</guid>
            <pubDate>Wed, 02 Apr 2025 00:04:28 GMT</pubDate>
            <description><![CDATA[JavaScript player library / DASH & HLS client / MSE-EME player]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/shaka-project/shaka-player">shaka-project/shaka-player</a></h1>
            <p>JavaScript player library / DASH & HLS client / MSE-EME player</p>
            <p>Language: JavaScript</p>
            <p>Stars: 7,413</p>
            <p>Forks: 1,374</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre># ![Shaka Player](docs/shaka-player-logo.png)

Shaka Player is an open-source JavaScript library for adaptive media.  It plays
adaptive media formats (such as [DASH][], [HLS][] and [MSS][]) in a browser,
without using plugins or Flash.  Instead, Shaka Player uses the open web
standards [MediaSource Extensions][] and [Encrypted Media Extensions][].

Shaka Player also supports [offline storage and playback][] of media using
[IndexedDB][].  Content can be stored on any browser.  Storage of licenses
depends on browser support.

Our main goal is to make it as easy as possible to stream adaptive bitrate
video and audio using modern browser technologies. We try to keep the library
light, simple, and free from third-party dependencies. Everything you need to
build and deploy is in the sources.

For details on what&#039;s coming next, see our [development roadmap](roadmap.md).

[DASH]: http://dashif.org/
[HLS]: https://developer.apple.com/streaming/
[MSS]: https://learn.microsoft.com/en-us/iis/media/smooth-streaming/smooth-streaming-transport-protocol
[MediaSource Extensions]: https://www.w3.org/TR/media-source/
[Encrypted Media Extensions]: https://www.w3.org/TR/encrypted-media/
[IndexedDB]: https://www.w3.org/TR/IndexedDB-2/
[offline storage and playback]: https://shaka-player-demo.appspot.com/docs/api/tutorial-offline.html


## Maintained branches

See [maintained-branches.md](https://github.com/shaka-project/shaka-player/blob/main/maintained-branches.md)
for the up-to-date list of maintained branches of Shaka Player.


## Platform and browser support matrix

|Browser       |Windows   |Mac      |Linux    |Android  |iOS &gt;= 9  |iOS &gt;= 17.1|iPadOS &gt;= 13|ChromeOS|Other|
|:------------:|:--------:|:-------:|:-------:|:-------:|:--------:|:---------:|:----------:|:------:|:---:|
|Chrome        |**Y**     |**Y**    |**Y**    |**Y**    |**Native**|**Native** |**Native**  |**Y**   | -   |
|Firefox       |**Y**     |**Y**    |**Y**    |untested‚Åµ|**Native**|**Native** |**Native**  | -      | -   |
|Edge          |**Y**     | -       | -       | -       | -        | -         | -          | -      | -   |
|Edge Chromium |**Y**     |**Y**    |**Y**    |untested‚Åµ|**Native**|**Native** |**Native**  | -      | -   |
|IE            | N        | -       | -       | -       | -        | -         | -          | -      | -   |
|Safari        | -        |**Y**    | -       | -       |**Native**|**Y**      |**Y**       | -      | -   |
|Opera         |**Y**     |**Y**    |**Y**    |untested‚Åµ|**Native**| -         | -          | -      | -   |
|Chromecast¬≤   | -        | -       | -       | -       | -        | -         | -          | -      |**Y**|
|Tizen TV¬≥     | -        | -       | -       | -       | -        | -         | -          | -      |**Y**|
|WebOS‚Å∂        | -        | -       | -       | -       | -        | -         | -          | -      |**Y**|
|Hisense‚Å∑      | -        | -       | -       | -       | -        | -         | -          | -      |**Y**|
|Vizio‚Å∑        | -        | -       | -       | -       | -        | -         | -          | -      |**Y**|
|Xbox One      | -        | -       | -       | -       | -        | -         | -          | -      |**Y**|
|Playstation 4‚Å∑| -        | -       | -       | -       | -        | -         | -          | -      |**Y**|
|Playstation 5‚Å∑| -        | -       | -       | -       | -        | -         | -          | -      |**Y**|

NOTES:
 - ¬≤: The latest stable Chromecast firmware is tested. Both sender and receiver
   can be implemented with Shaka Player.
 - ¬≥: Tizen 2017 model is actively tested and supported by the Shaka Player
   team. Tizen 2016 model is community-supported and untested by us.
 - ‚Åµ: These are expected to work, but are not actively tested by the Shaka
   Player team.
 - ‚Å∂: These are expected to work, but are community-supported and untested by
   us.
     - Official support for LG WebOS TV:
       https://github.com/shaka-project/shaka-player/issues/1330
 - ‚Å∑: These are expected to work, but are community-supported and untested by
   us.

NOTES for iOS and iPadOS:
 - We support iOS 9+ through Apple&#039;s native HLS player.  We provide the same
   top-level API, but we just set the video&#039;s `src` element to the manifest/media.
   So we are dependent on the browser supporting the manifests.
 - Since iPadOS 13 [MediaSource Extensions][] is supported
 - Since iPadOS 17 and iOS 17.1 [ManagedMediaSource Extensions][] is supported

[ManagedMediaSource Extensions]: https://www.w3.org/TR/media-source-2/#dom-managedmediasource

## Manifest format support matrix

|Format|Video On-Demand|Live |Event|In-Progress Recording|
|:----:|:-------------:|:---:|:---:|:-------------------:|
|DASH  |**Y**          |**Y**| -   |**Y**                |
|HLS   |**Y**          |**Y**|**Y**| -                   |
|MSS   |**Y**          | -   | -   | -                   |

You can also create a [manifest parser plugin][] to support custom manifest
formats.

[manifest parser plugin]: https://shaka-player-demo.appspot.com/docs/api/tutorial-manifest-parser.html


## DASH features

DASH features supported:
 - VOD, Live, and In-Progress Recordings (dynamic VOD content)
 - MPD@timeShiftBufferDepth for seeking backward in Live streams
 - Multi-period content (static and dynamic)
 - Xlink elements (actuate=onLoad only, resolve-to-zero, fallback content)
 - All forms of segment index info: SegmentBase@indexRange, SegmentTimeline,
   SegmentTemplate@duration, SegmentTemplate@index, SegmentList
 - Multi-codec/multi-container manifests (we will negotiate support with the
   browser and choose the best ones)
 - Encrypted content (including custom ContentProtection schemas, PSSH in the
   manifest)
 - Key rotation
 - Trick mode tracks
 - WebVTT and TTML
 - CEA-608/708 captions
 - Multi-codec variants (on platforms with changeType support)
 - MPD chaining
 - MPD Patch updates for SegmentTemplate with $Number$, SegmentTimeline with
   $Number$ and SegmentTimeline with $Time$

DASH features **not** supported:
 - Xlink with actuate=onRequest
 - Manifests without any segment info:
   https://github.com/shaka-project/shaka-player/issues/1088
 - Multiple trick mode tracks for the same resolution at varying framerates or
   bitrates
 - Timescales so large that timestamps cannot be represented as integers in
   JavaScript (2^53): https://github.com/shaka-project/shaka-player/issues/1667
 - Modifying elements with an @schemeIdUri attribute via MPD Patch
 - Xlink dereferencing with MPD Patch


## HLS features

HLS features supported:
 - VOD, Live, and Event types
 - Low-latency streaming with partial segments, preload hints, delta updates and
   blocking playlist reload
 - Discontinuity
 - ISO-BMFF / MP4 / CMAF support
 - MPEG-2 TS support
 - WebVTT and TTML
 - CEA-608/708 captions
 - Encrypted content with PlayReady, Widevine and WisePlay
 - Encrypted content with FairPlay (Safari on macOS and iOS only)
 - AES-128, AES-256 and AES-256-CTR support on browsers with Web Crypto API support
 - SAMPLE-AES and SAMPLE-AES-CTR (identity) support on browsers with ClearKey support
 - Key rotation
 - Raw AAC, MP3, AC-3 and EC-3 (without an MP4 container)
 - I-frame-only playlists (for trick play and thumbnails)
 - #EXT-X-IMAGE-STREAM-INF for thumbnails
 - Interstitials
 - Container change during the playback (eg: MP4 to TS, or AAC to TS)

HLS features **not** supported:
 - X-SNAP attribute in interstitials

&lt;details&gt;
&lt;summary&gt;
&lt;h3&gt;Supported HLS tags&lt;/h3&gt;
&lt;/summary&gt;

For details on the HLS format and these tags&#039; meanings, see https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis

&lt;h4&gt; Multivariant Playlist tags&lt;/h4&gt;

- `#EXT-X-STREAM-INF:&lt;attribute-list&gt;`
  `&lt;URI&gt;`
- `#EXT-X-MEDIA:&lt;attribute-list&gt;`
- `#EXT-X-IMAGE-STREAM-INF:&lt;attribute-list&gt;`
- `#EXT-X-I-FRAME-STREAM-INF:&lt;attribute-list&gt;`
- `#EXT-X-SESSION-DATA:&lt;attribute-list&gt;`
- `#EXT-X-SESSION-KEY:&lt;attribute-list&gt;` EME Key-System selection and preloading
- `#EXT-X-START:TIME-OFFSET=&lt;n&gt;`
- `#EXT-X-CONTENT-STEERING:&lt;attribute-list&gt;` Content Steering
- `#EXT-X-DEFINE:&lt;attribute-list&gt;` Variable Substitution (`NAME,VALUE,QUERYPARAM` attributes)

&lt;h4&gt;Media Playlist tags&lt;/h4&gt;

- `#EXTM3U`
- `#EXTINF:&lt;duration&gt;,[&lt;title&gt;]`
- `#EXT-X-PLAYLIST-TYPE:&lt;type`
- `#EXT-X-ENDLIST`
- `#EXT-X-MEDIA-SEQUENCE=&lt;n&gt;`
- `#EXT-X-TARGETDURATION=&lt;n&gt;`
- `#EXT-X-DISCONTINUITY`
- `#EXT-X-DISCONTINUITY-SEQUENCE=&lt;n&gt;`
- `#EXT-X-BYTERANGE=&lt;n&gt;[@&lt;o&gt;]`
- `#EXT-X-MAP:&lt;attribute-list&gt;`
- `#EXT-X-KEY:&lt;attribute-list&gt;` (`KEYFORMAT=&quot;identity&quot;,METHOD=SAMPLE-AES` is only supports with MP4 segments)
- `#EXT-X-PROGRAM-DATE-TIME:&lt;attribute-list&gt;`
- `#EXT-X-START:TIME-OFFSET=&lt;n&gt;`
- `#EXT-X-SERVER-CONTROL:&lt;attribute-list&gt;`
- `#EXT-X-PART-INF:PART-TARGET=&lt;n&gt;`
- `#EXT-X-PART:&lt;attribute-list&gt;`
- `#EXT-X-SKIP:&lt;attribute-list&gt;` Delta Playlists
- `#EXT-X-DATERANGE:&lt;attribute-list&gt;` Metadata
- `#EXT-X-DEFINE:&lt;attribute-list&gt;` Variable Import and Substitution (`NAME,VALUE,IMPORT,QUERYPARAM` attributes)
- `#EXT-X-GAP`
- `#EXT-X-PRELOAD-HINT:&lt;attribute-list&gt;`
- `#EXT-X-BITRATE`

&lt;/details&gt;


## MPEG-5 Part2 LCEVC Support

**Only supported on browsers with Media Source Extensions SourceBuffer support**

 - MPEG-5 Part2 LCEVC decoding support (decoding provided by [lcevc_dec.js][], must be
   separately included)

 - Integration documentation : [docs](docs/design/current/lcevc-integration.md)

 - More on [MPEG-5 Part2 LCEVC][]

[lcevc_dec.js]: https://www.npmjs.com/package/lcevc_dec.js
[MPEG-5 Part2 LCEVC]: https://www.lcevc.org


## MSS features

MSS features supported:
 - VOD
 - AAC and H.264
 - Encrypted content (PlayReady)
 - TTML/DFXP
 - Only supported with [codem-isoboxer][]

MSS features **not** supported:
 - Live

[codem-isoboxer]: https://github.com/Dash-Industry-Forum/codem-isoboxer

## DRM support matrix

|Browser       |Widevine  |PlayReady|FairPlay |WisePlay |ClearKey‚Å∂ |
|:------------:|:--------:|:-------:|:-------:|:-------:|:--------:|
|Chrome¬π       |**Y**     | -       | -       | -       |**Y**     |
|Firefox¬≤      |**Y**     | -       | -       | -       |**Y**     |
|Edge¬≥         | -        |**Y**    | -       | -       | -        |
|Edge Chromium |**Y**     |**Y**    | -       | -       |**Y**     |
|Safari        | -        | -       |**Y**    | -       | -        |
|Opera         |**Y**     | -       | -       | -       |**Y**     |
|Chromecast    |**Y**     |**Y**    | -       | -       |**Y**     |
|Tizen TV      |**Y**     |**Y**    | -       | -       |**Y**     |
|WebOS‚Å∑        |untested‚Å∑ |untested‚Å∑| -       | -       |untested‚Å∑ |
|Hisense‚Å∑      |untested‚Å∑ |untested‚Å∑| -       | -       |untested‚Å∑ |
|Vizio‚Å∑        |untested‚Å∑ |untested‚Å∑| -       | -       |untested‚Å∑ |
|Xbox One      | -        |**Y**    | -       | -       | -        |
|Playstation 4‚Å∑| -        |untested‚Å∑| -       | -       |untested‚Å∑ |
|Playstation 5‚Å∑| -        |untested‚Å∑| -       | -       |untested‚Å∑ |
|Huawei‚Å∑       | -        | -       | -       |untested‚Å∑|untested‚Å∑ |

Other DRM systems should work out of the box if they are interoperable and
compliant to the EME spec.

NOTES:
 - ¬π: Only official Chrome builds contain the Widevine CDM.  Chromium built from
   source does not support DRM.
 - ¬≤: DRM must be enabled by the user.  The first time a Firefox user visits a
   site with encrypted media, the user will be prompted to enable DRM.
 - ¬≥: PlayReady in Edge does not seem to work on a VM or over Remote Desktop.
 - ‚Å∂: ClearKey is a useful tool for debugging, and does not provide actual
   content security.
 - ‚Å∑: These are expected to work, but are community-supported and untested by
   us.

|Manifest  |Widevine  |PlayReady|FairPlay |WisePlay |ClearKey  |
|:--------:|:--------:|:-------:|:-------:|:-------:|:--------:|
|DASH      |**Y**     |**Y**    |**Y**    |**Y**    |**Y**     |
|HLS       |**Y**     |**Y**    |**Y** ¬π  |**Y**    |**Y**     |
|MSS       | -        |**Y**    | -       | -       | -        |

NOTES:
 - ¬π: By default, FairPlay is handled using Apple&#039;s native HLS player, when on
   Safari. We do support FairPlay through MSE/EME, however. See the
   `streaming.useNativeHlsForFairPlay` configuration value.


## Media container and subtitle support

Shaka Player supports:
  - ISO-BMFF / CMAF / MP4
    - Depends on browser support for the container via MediaSource
    - Can parse &quot;sidx&quot; box for DASH&#039;s SegmentBase@indexRange and
      SegmentTemplate@index
    - Can find and parse &quot;tfdt&quot; box to find segment start time in HLS
    - For MSS, [codem-isoboxer][] v0.3.7+ is required
  - WebM
    - Depends on browser support for the container via MediaSource
    - Can parse [cueing data][] elements for DASH&#039;s SegmentBase@indexRange and
      SegmentTemplate@index
    - Not supported in HLS
  - MPEG-2 TS
    - Can be played on any browser which supports MP4
    - Can find and parse timestamps to find segment start time in HLS
  - WebVTT
    - Supported in both text form and embedded in MP4
  - TTML
    - Supported in both XML form and embedded in MP4
  - CEA-608
    - Supported embedded in MP4 and TS
  - CEA-708
    - Supported embedded in MP4 and TS
  - Raw AAC
    - Supported in raw AAC container and transmuxing to AAC in MP4 container
      (depends on browser support via MediaSource).
  - Raw MP3
    - Supported in raw MP3 container and transmuxing to MP3 in MP4 container
      (depends on browser support via MediaSource).
  - Raw AC-3
    - Supported in raw AC-3 container and transmuxing to AC-3 in MP4 container
      (depends on browser support via MediaSource).
  - Raw EC-3
    - Supported in raw EC-3 container and transmuxing to EC-3 in MP4 container
      (depends on browser support via MediaSource).
  - SubRip (SRT)
    - UTF-8 encoding only
  - LyRiCs (LRC)
    - UTF-8 encoding only
  - SubStation Alpha (SSA, ASS)
    - UTF-8 encoding only
  - SubViewer (SBV)
    - UTF-8 encoding only

Subtitles are rendered by the browser by default. Applications can create a
[text display plugin][] for customer rendering to go beyond browser-supported
attributes.

[cueing data]: https://www.webmproject.org/docs/container/#cueing-data
[text display plugin]: https://nightly-dot-shaka-player-demo.appspot.com/docs/api/shaka.extern.TextDisplayer.html
&lt;!-- TODO: replace with a link to a TextDisplayer tutorial --&gt;


## Transmuxer support

Shaka Player supports:
  - Raw AAC to AAC in MP4
  - Raw MP3 to MP3 in MP4
  - Raw AC-3 to AC-3 in MP4
  - Raw EC-3 to EC-3 in MP4
  - AAC in MPEG-2 TS to AAC in MP4
  - AC-3 in MPEG-2 TS to AC-3 in MP4
  - EC-3 in MPEG-2 TS to EC-3 in MP4
  - MP3 in MPEG-2 TS to MP3 in MP4
  - MP3 in MPEG-2 TS to raw MP3
  - Opus in MPEG-2 TS to MP3 in MP4
  - H.264 in MPEG-2 TS to H.264 in MP4
  - H.265 in MPEG-2 TS to H.265 in MP4
  - Muxed content in MPEG-2 TS with the previous codecs


## Thumbnails support

Shaka Player supports:
  - Internal DASH thumbnails. Using DASH-IF IOP Image Adaptation Set
  - Internal HLS thumbnails. Using HLS Image Media Playlist
  - Internal HLS thumbnails. Using I-frame-only playlists with mjpg codec
  - External WebVTT with images/sprites (only for VoD)


## Monetization with Ads

Shaka Player supports:
- IMA SDK for Client-Side Ad Insertion
- IMA DAI SDK for Server-Side Ad Insertion
- AWS MediaTailor for Client-Side
- AWS MediaTailor for Server-Side
- AWS MediaTailor overlays
- HLS interstitials
- DASH Media Presentation Insertion (MPD alternate)
- Custom Interstitials
- Basic support of VAST and VMAP without IMA (playback without tracking)


## Content Steering support
Shaka Player supports Content Steering (v1) in DASH and HLS.

Content Steering features supported:
- TTL, if missing, the default value is 300 seconds.
- RELOAD-URI, if missing we use the url provided in the manifest as fallback.
- PATHWAY-PRIORITY only HOST replacement

Content Steering features **not** supported:
- PATHWAY-CLONES other replacements than HOST.


## VR support
Shaka Player supports VR when:
- Content is automatically treated as VR if it fits the following criteria:
  - HLS or DASH manifest
  - fMP4 segments
  - Init segment contains `prji` and `hfov` boxes
- Or, if it is manually enabled via the UI config.

VR modes supported:
- Equirectangular projection with 360 degrees of horizontal field of view.
- Half equirectangular projection with 180 degrees of horizontal field of view.
- Cubemap projection with 360 degrees of horizontal field of view.


NOTES:
  - VR is only supported for clear streams or HLS-AES stream. DRM prevents
    access to the video pixels for transformation.


## Builds

Shaka currently provides the following versions:
- Complete build with UI (`shaka-player.ui.js`)
- Complete build without UI (`shaka-player.compiled.js`)
- DASH build without UI, Cast and Offline (`shaka-player.dash.js`)
- HLS build without UI, Cast and Offline (`shaka-player.hls.js`)


## Documentation &amp; Important Links ##

 * [Demo](https://shaka-player-demo.appspot.com)([sources](demo/))
 * [Nightly Demo](https://nightly-dot-shaka-player-demo.appspot.com)
 * [Demo index](https://index-dot-shaka-player-demo.appspot.com)
 * [API documentation](https://shaka-player-demo.appspot.com/docs/api/index.html)
 * [Tutorials](https://shaka-player-demo.appspot.com/docs/api/tutorial-welcome.html)
 * [Hosted builds on Google Hosted Libraries](https://developers.google.com/speed/libraries/#shaka-player)
 * [Hosted builds on jsDelivr](https://www.jsdelivr.com/package/npm/shaka-player)
 * [Development roadmap](roadmap.md)
 * Subscribe to releases by following
     [instructions from this blog](https://www.jessesquires.com/blog/2020/07/30/github-tip-watching-releases/)


## FAQ ##

For general help and before filing any bugs, please read the
[FAQ](docs/tutorials/faq.md).


## Contributing ##

If you have improvements or fixes, we would love to have your contributions.
Please read [CONTRIBUTING.md](CONTRIBUTING.md)
for more information on the process we would like contributors to follow.


## Framework Integrations ##

The Shaka team doesn&#039;t have the bandwidth and experience to provide guidance and
support for integrating Shaka Player with specific frameworks, but some of our
users have successfully done so and created tutorials to help other beginners.

Shaka + ReactJS Library
- https://github.com/winoffrg/limeplay

Shaka + ReactJS integrations:
- https://github.com/matvp91/shaka-player-react
- https://github.com/amit08255/shaka-player-react-with-ui-config

Shaka + Next.js integration:
- https://github.com/amit08255/shaka-player-react-with-ui-config/tree/master/nextjs-shaka-player

Shaka + Vue.js integrations:
- https://github.com/davidjamesherzog/shaka-player-vuejs

Shaka + Nuxt.js integration:
- https://github.com/davidjamesherzog/shaka-player-nuxtjs

Shaka + video.js integration:
- https://github.com/davidjamesherzog/videojs-shaka

Shaka + Angular integration:
- https://github.com/PatrickKalkman/shaka-player-angular

If you have published Shaka Integration code/tutorials, please feel free to submit PRs
to add them to this list, we will gladly approve!
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[501351981/vue-office]]></title>
            <link>https://github.com/501351981/vue-office</link>
            <guid>https://github.com/501351981/vue-office</guid>
            <pubDate>Wed, 02 Apr 2025 00:04:27 GMT</pubDate>
            <description><![CDATA[ÊîØÊåÅword(.docx)„ÄÅexcel(.xlsx,.xls)„ÄÅpdf„ÄÅpptxÁ≠âÂêÑÁ±ªÂûãofficeÊñá‰ª∂È¢ÑËßàÁöÑvueÁªÑ‰ª∂ÈõÜÂêàÔºåÊèê‰æõ‰∏ÄÁ´ôÂºèofficeÊñá‰ª∂È¢ÑËßàÊñπÊ°àÔºåÊîØÊåÅvue2Âíå3Ôºå‰πüÊîØÊåÅReactÁ≠âÈùûVueÊ°ÜÊû∂„ÄÇWeb-based pdf, excel, word, pptx preview library]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/501351981/vue-office">501351981/vue-office</a></h1>
            <p>ÊîØÊåÅword(.docx)„ÄÅexcel(.xlsx,.xls)„ÄÅpdf„ÄÅpptxÁ≠âÂêÑÁ±ªÂûãofficeÊñá‰ª∂È¢ÑËßàÁöÑvueÁªÑ‰ª∂ÈõÜÂêàÔºåÊèê‰æõ‰∏ÄÁ´ôÂºèofficeÊñá‰ª∂È¢ÑËßàÊñπÊ°àÔºåÊîØÊåÅvue2Âíå3Ôºå‰πüÊîØÊåÅReactÁ≠âÈùûVueÊ°ÜÊû∂„ÄÇWeb-based pdf, excel, word, pptx preview library</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,530</p>
            <p>Forks: 504</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre># vue-office

ÊîØÊåÅÂ§öÁßçÊñá‰ª∂(**docx„ÄÅexcel„ÄÅpdf„ÄÅpptx**)È¢ÑËßàÁöÑvueÁªÑ‰ª∂Â∫ìÔºåÊîØÊåÅvue2/3„ÄÇ‰πüÊîØÊåÅÈùûVueÊ°ÜÊû∂ÁöÑÈ¢ÑËßà„ÄÇ

[„ÄäÊºîÁ§∫ÊïàÊûú„Äã](https://501351981.github.io/vue-office/examples/dist/)

[„Ää‰ΩøÁî®ÈùûVueÊ°ÜÊû∂ÔºàÂéüÁîüjs„ÄÅReactÁ≠âÔºâ„ÄÅÊàñËÄÖVueÈáåÈù¢Êä•ÈîôÔºåÁúãËøôÈáå„Äã](https://501351981.github.io/vue-office/examples/docs/guide/js-preview.html)
## ÂäüËÉΩÁâπËâ≤
- ‰∏ÄÁ´ôÂºèÔºöÊèê‰æõword(.docx)„ÄÅpdf„ÄÅexcel(.xlsx, .xls)„ÄÅppt(.pptx)Â§öÁßçÊñáÊ°£ÁöÑÂú®Á∫øÈ¢ÑËßàÊñπÊ°àÔºåÊúâÂÆÉÂ∞±Â§ü‰∫Ü
- ÁÆÄÂçïÔºöÂè™ÈúÄÊèê‰æõÊñáÊ°£ÁöÑsrc(ÁΩëÁªúÂú∞ÂùÄ)Âç≥ÂèØÂÆåÊàêÊñáÊ°£È¢ÑËßà
- ‰ΩìÈ™åÂ•ΩÔºöÈÄâÊã©ÊØè‰∏™ÊñáÊ°£ÁöÑÊúÄ‰Ω≥È¢ÑËßàÊñπÊ°àÔºå‰øùËØÅÁî®Êà∑‰ΩìÈ™åÂíåÊÄßËÉΩÈÉΩËææÂà∞ÊúÄ‰Ω≥Áä∂ÊÄÅ
- ÊÄßËÉΩÂ•ΩÔºöÈíàÂØπÊï∞ÊçÆÈáèËæÉÂ§ßÂÅö‰∫Ü‰ºòÂåñ

## ÂÆâË£Ö
```shell
#docxÊñáÊ°£È¢ÑËßàÁªÑ‰ª∂
npm install @vue-office/docx vue-demi@0.14.6

#excelÊñáÊ°£È¢ÑËßàÁªÑ‰ª∂
npm install @vue-office/excel vue-demi@0.14.6

#pdfÊñáÊ°£È¢ÑËßàÁªÑ‰ª∂
npm install @vue-office/pdf vue-demi@0.14.6

#pptxÊñáÊ°£È¢ÑËßàÁªÑ‰ª∂
npm install @vue-office/pptx vue-demi@0.14.6
```
Â¶ÇÊûúÊòØvue2.6ÁâàÊú¨Êàñ‰ª•‰∏ãËøòÈúÄË¶ÅÈ¢ùÂ§ñÂÆâË£Ö @vue/composition-api
```shell
npm install @vue/composition-api
```

## ‰ΩøÁî®Á§∫‰æã

ÊñáÊ°£È¢ÑËßàÂú∫ÊôØÂ§ßËá¥ÂèØ‰ª•ÂàÜ‰∏∫‰∏âÁßçÔºö
- ÊúâÊñáÊ°£CDNÂú∞ÂùÄÔºåÊØîÂ¶Ç https://***.docxÔºåÂ∞ÜÊñáÊ°£Âú∞ÂùÄÂ≠óÁ¨¶‰∏≤‰º†ÁªôÁªÑ‰ª∂ÁöÑsrcÂ±ûÊÄß
- ÈÄöËøáÊé•Âè£ËØ∑Ê±ÇËé∑ÂèñÊñá‰ª∂ÂÜÖÂÆπÔºåÊ≠§Êó∂ÂèØ‰ª•Ëé∑ÂèñÊñá‰ª∂ÁöÑArrayBufferÊàñBlobÊ†ºÂºèÊï∞ÊçÆ‰º†ÁªôÁªÑ‰ª∂ÁöÑsrcÂ±ûÊÄß
- Êñá‰ª∂‰∏ä‰º†Êó∂È¢ÑËßàÔºåÊ≠§Êó∂ÂèØ‰ª•Ëé∑ÂèñÊñá‰ª∂ÁöÑArrayBufferÊàñBlobÊ†ºÂºèÊï∞ÊçÆ‰º†ÁªôÁªÑ‰ª∂ÁöÑsrcÂ±ûÊÄß

&lt;details&gt;
&lt;summary&gt;docxÊñá‰ª∂È¢ÑËßàÁ§∫‰æã Ôºà‰∏âÁßç‰ΩøÁî®ÊñπÂºèÂùáÊúâÁ§∫‰æãÔºâ&lt;/summary&gt;

**1. ‰ΩøÁî®ÁΩëÁªúÂú∞ÂùÄÈ¢ÑËßà**
```vue
&lt;template&gt;
    &lt;vue-office-docx
        :src=&quot;docx&quot;
        style=&quot;height: 100vh;&quot;
        @rendered=&quot;rendered&quot;
    /&gt;
&lt;/template&gt;

&lt;script&gt;
//ÂºïÂÖ•VueOfficeDocxÁªÑ‰ª∂
import VueOfficeDocx from &#039;@vue-office/docx&#039;
//ÂºïÂÖ•Áõ∏ÂÖ≥Ê†∑Âºè
import &#039;@vue-office/docx/lib/index.css&#039;

export default {
    components:{
        VueOfficeDocx
    },
    data(){
        return {
            docx: &#039;http://static.shanhuxueyuan.com/test6.docx&#039; //ËÆæÁΩÆÊñáÊ°£ÁΩëÁªúÂú∞ÂùÄÔºåÂèØ‰ª•ÊòØÁõ∏ÂØπÂú∞ÂùÄ
        }
    },
    methods:{
        rendered(){
            console.log(&quot;Ê∏≤ÊüìÂÆåÊàê&quot;)
        }
    }
}
&lt;/script&gt;
```

**2. ‰∏ä‰º†Êñá‰ª∂È¢ÑËßà**

ËØªÂèñÊñá‰ª∂ÁöÑArrayBuffer
```vue
&lt;template&gt;
    &lt;div&gt;
        &lt;input type=&quot;file&quot; @change=&quot;changeHandle&quot;/&gt;
        &lt;vue-office-docx :src=&quot;src&quot;/&gt;
    &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
import VueOfficeDocx from &#039;@vue-office/docx&#039;
import &#039;@vue-office/docx/lib/index.css&#039;

export default {
    components: {
        VueOfficeDocx
    },
    data(){
        return {
            src: &#039;&#039;
        }
    },
    methods:{
        changeHandle(event){
            let file = event.target.files[0]
            let fileReader = new FileReader()
            fileReader.readAsArrayBuffer(file)
            fileReader.onload =  () =&gt; {
                this.src = fileReader.result
            }
        }
    }
}
&lt;/script&gt;
```

**3. ‰∫åËøõÂà∂Êñá‰ª∂È¢ÑËßà**

Â¶ÇÊûúÂêéÁ´ØÁªôÁöÑ‰∏çÊòØCDNÂú∞ÂùÄÔºåËÄåÊòØ‰∏Ä‰∫õPOSTÊé•Âè£ÔºåËØ•Êé•Âè£ËøîÂõû‰∫åËøõÂà∂ÊµÅÔºåÂàôÂèØ‰ª•Ë∞ÉÁî®Êé•Âè£Ëé∑ÂèñÊñá‰ª∂ÁöÑArrayBufferÊï∞ÊçÆÔºå‰º†ÈÄíÁªôsrcÂ±ûÊÄß„ÄÇ

```vue
&lt;template&gt;
    &lt;vue-office-docx
        :src=&quot;docx&quot;
        style=&quot;height: 100vh;&quot;
        @rendered=&quot;rendered&quot;
    /&gt;
&lt;/template&gt;

&lt;script&gt;
//ÂºïÂÖ•VueOfficeDocxÁªÑ‰ª∂
import VueOfficeDocx from &#039;@vue-office/docx&#039;
//ÂºïÂÖ•Áõ∏ÂÖ≥Ê†∑Âºè
import &#039;@vue-office/docx/lib/index.css&#039;

export default {
    components:{
        VueOfficeDocx
    },
    data(){
        return {
            docx: &#039;&#039;
        }
    },
    mounted(){
        fetch(&#039;‰Ω†ÁöÑAPIÊñá‰ª∂Âú∞ÂùÄ&#039;, {
            method: &#039;post&#039;
        }).then(res=&gt;{
            //ËØªÂèñÊñá‰ª∂ÁöÑarrayBuffer
            res.arrayBuffer().then(res=&gt;{
                this.docx = res
            })
        })
    },
    methods:{
        rendered(){
            console.log(&quot;Ê∏≤ÊüìÂÆåÊàê&quot;)
        }
    }
}
&lt;/script&gt;
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;excel Êñá‰ª∂È¢ÑËßàÁ§∫‰æã &lt;/summary&gt;

ÈÄöËøáÁΩëÁªúÂú∞ÂùÄÈ¢ÑËßàÁ§∫‰æãÂ¶Ç‰∏ãÔºåÈÄöËøáÊñá‰ª∂ArrayBufferÈ¢ÑËßàÂíå‰∏äÈù¢docxÁöÑ‰ΩøÁî®ÊñπÂºè‰∏ÄËá¥„ÄÇ
```vue
&lt;template&gt;
    &lt;vue-office-excel
        :src=&quot;excel&quot;
        style=&quot;height: 100vh;&quot;
        @rendered=&quot;renderedHandler&quot;
        @error=&quot;errorHandler&quot;
    /&gt;
&lt;/template&gt;

&lt;script&gt;
//ÂºïÂÖ•VueOfficeExcelÁªÑ‰ª∂
import VueOfficeExcel from &#039;@vue-office/excel&#039;
//ÂºïÂÖ•Áõ∏ÂÖ≥Ê†∑Âºè
import &#039;@vue-office/excel/lib/index.css&#039;

export default {
    components: {
        VueOfficeExcel
    },
    data() {
        return {
            excel: &#039;http://static.shanhuxueyuan.com/demo/excel.xlsx&#039;//ËÆæÁΩÆÊñáÊ°£Âú∞ÂùÄ
        }
    },
    methods: {
        renderedHandler() {
            console.log(&quot;Ê∏≤ÊüìÂÆåÊàê&quot;)
        },
        errorHandler() {
            console.log(&quot;Ê∏≤ÊüìÂ§±Ë¥•&quot;)
        }
    }
}
&lt;/script&gt;
```
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;pdf Êñá‰ª∂È¢ÑËßàÁ§∫‰æã &lt;/summary&gt;

ÈÄöËøáÁΩëÁªúÂú∞ÂùÄÈ¢ÑËßàÁ§∫‰æãÂ¶Ç‰∏ãÔºåÈÄöËøáÊñá‰ª∂ArrayBufferÈ¢ÑËßàÂíå‰∏äÈù¢docxÁöÑ‰ΩøÁî®ÊñπÂºè‰∏ÄËá¥„ÄÇ
```vue
&lt;template&gt;
    &lt;vue-office-pdf
        :src=&quot;pdf&quot;
        style=&quot;height: 100vh&quot;
        @rendered=&quot;renderedHandler&quot;
        @error=&quot;errorHandler&quot;
    /&gt;
&lt;/template&gt;

&lt;script&gt;
//ÂºïÂÖ•VueOfficePdfÁªÑ‰ª∂
import VueOfficePdf from &#039;@vue-office/pdf&#039;

export default {
    components: {
        VueOfficePdf
    },
    data() {
        return {
            pdf: &#039;http://static.shanhuxueyuan.com/test.pdf&#039; //ËÆæÁΩÆÊñáÊ°£Âú∞ÂùÄ
        }
    },
    methods: {
        renderedHandler() {
            console.log(&quot;Ê∏≤ÊüìÂÆåÊàê&quot;)
        },
        errorHandler() {
            console.log(&quot;Ê∏≤ÊüìÂ§±Ë¥•&quot;)
        }
    }
}
&lt;/script&gt;
```

&lt;/details&gt;


&lt;details&gt;
&lt;summary&gt;pptx Êñá‰ª∂È¢ÑËßàÁ§∫‰æã &lt;/summary&gt;

ÈÄöËøáÁΩëÁªúÂú∞ÂùÄÈ¢ÑËßàÁ§∫‰æãÂ¶Ç‰∏ãÔºåÈÄöËøáÊñá‰ª∂ArrayBufferÈ¢ÑËßàÂíå‰∏äÈù¢docxÁöÑ‰ΩøÁî®ÊñπÂºè‰∏ÄËá¥„ÄÇ
```vue
&lt;template&gt;
    &lt;vue-office-pptx
        :src=&quot;pdf&quot;
        style=&quot;height: 100vh&quot;
        @rendered=&quot;renderedHandler&quot;
        @error=&quot;errorHandler&quot;
    /&gt;
&lt;/template&gt;

&lt;script&gt;
import VueOfficePptx from &#039;@vue-office/pptx&#039;

export default {
    components: {
        VueOfficePptx
    },
    data() {
        return {
            pdf: &#039;http://****/test.pptx&#039; //ËÆæÁΩÆÊñáÊ°£Âú∞ÂùÄ
        }
    },
    methods: {
        renderedHandler() {
            console.log(&quot;Ê∏≤ÊüìÂÆåÊàê&quot;)
        },
        errorHandler() {
            console.log(&quot;Ê∏≤ÊüìÂ§±Ë¥•&quot;)
        }
    }
}
&lt;/script&gt;
```

&lt;/details&gt;

# È°πÁõÆ‰æùËµñÁöÑÁ¨¨‰∏âÊñπÂ∫ì

- docxÔºö Âü∫‰∫édocx-previewÂ∫ìÂÆûÁé∞ÔºåÁõ∏ÂÖ≥issuesÊöÇ‰∏çÂ§ÑÁêÜ
- pdfÔºö Âü∫‰∫épdfjsÂ∫ìÂÆûÁé∞ÔºåÂÆûÁé∞‰∫ÜËôöÊãüÂàóË°®Â¢ûÂä†ÊÄßËÉΩ
- excel: Âü∫‰∫éexceljs Âíå x-data-spreadsheetÂÆûÁé∞ÔºåÂÖ®ÁΩëÊ†∑ÂºèÊîØÊåÅÊõ¥Â•Ω
- pptxÔºö Âü∫‰∫éËá™Á†îÂ∫ì [pptx-preview](https://github.com/501351981/pptx-preview) ÂÆûÁé∞ÔºåÊ∫êÁ†ÅÂçïÁã¨‰ªòË¥πÂêë‰ΩúËÄÖÁ¥¢Âèñ

# ÊàëË¶ÅÊîØÊåÅ‰ΩúËÄÖ

Â¶ÇÊûúËØ•È°πÁõÆÂ∏ÆÂà∞‰∫ÜÊÇ®ÔºåËäÇÁúÅ‰∫ÜÊÇ®ÂÆùË¥µÁöÑÂºÄÂèëÊó∂Èó¥ÔºåËøòËØ∑ÊÇ®‰∏çÂêùÁªôÈ°πÁõÆÁÇπ‰∏™ÂÖçË¥πÁöÑËµû„ÄÇ

ÂΩìÁÑ∂‰∫ÜÔºåÂ¶ÇÊûúÊÇ®ËÉΩËØ∑‰ΩúËÄÖÂñùÊùØÂíñÂï°ÔºåÂì™ÊÄïÂñùÁì∂Â®ÉÂ®ÉÂìàÁüøÊ≥âÊ∞¥Ôºå‰πüÊòØÂØπ‰ΩúËÄÖÊúÄÁúüËØöÁöÑÈºìÂä±ÔºåÊâìËµèÁî®Êà∑Ê¨¢ËøéÊ∑ªÂä†ÂæÆ‰ø°ÔºåÂêéÁª≠‰∫§ÊµÅÂâçÁ´ØÁõ∏ÂÖ≥ÈóÆÈ¢ò„ÄÇ

![](https://501351981.github.io/vue-office/examples/dist/static/wx.png)

Â¶ÇÊûúÊÇ®ÊúâÈóÆÈ¢òË¶ÅÂí®ËØ¢ÊàñËÄÖËß£ÂÜ≥ÔºåÂèØÊâìËµèÂí®ËØ¢‰ΩúËÄÖÔºåËá™2024Âπ¥12ÊúàËµ∑ÔºåÂèØËÉΩ‰∏ç‰ºöÂèäÊó∂Â§ÑÁêÜissuesÂÜÖÂÆπÔºå‰ΩúËÄÖ‰πüË¶ÅÂêÉÈ•≠Ôºå‰πüÈù¢‰∏¥Â§ßÈæÑÁ®ãÂ∫èÂëòÂõ∞Â¢É„ÄÇ

## ‰∏∫‰ªÄ‰πàÊ≤°ÊúâÂºÄÊîæÊ∫êÁ†ÅÔºàÊâìËµè50+ÈÄÅÊ∫êÁ†ÅÔºâ

Êàë‰ª¨ÈÉΩÁü•ÈÅìÔºåÂ¶ÇÊûú‰∏Ä‰ª∂‰∫ãÊÉÖÊ≤°ÊúâÊî∂ÁõäÔºåÈÇ£ÊòØÂæàÈöæÈïø‰πÖÁöÑÔºåÁâπÂà´ÊòØÂØπ‰∫é‰∏Ä‰∏™Â§ßÈæÑÁ®ãÂ∫èÂëòÊù•ËØ¥ÔºåËä±Ë¥πÂ§ßÈáèÁöÑÊó∂Èó¥&quot;Áî®Áà±ÂèëÁîµ&quot;ÂØπÂ§ßÂÆ∂Êù•ËØ¥ÊòØÈùûÂ∏∏ÂÄºÂæóÂ∞äÊï¨ÁöÑÔºåËÄåÊàëÊÑüËßâÂØπÂÆ∂Â∫≠Êù•ËØ¥ÂèØËÉΩÊòØ‰∏çÈÅìÂæ∑ÁöÑÔºåÊ≤°ÊúâÊî∂ÁõäÔºåÊ≤°ÊúâÊ≠£ÂèçÈ¶àÔºåÂæàÈöæÊääËøô‰∏™Â∫ìÂÆåÂñÑ‰∏ãÂéªÔºåÊàë‰ª¨‰πüÁúãÂà∞‰∫ÜÔºåÂæàÂ§öÂºÄÊ∫êÂ∫ìÂ∑≤ÁªèÂ§öÂπ¥Ê≤°ÊúâÊõ¥Êñ∞‰∫Ü„ÄÇ‰∏∫‰∫ÜÂêéÁª≠ÂºÄÂèëÂá∫Êõ¥Â•ΩÁî®ÁöÑÂâçÁ´ØofficeÊñá‰ª∂È¢ÑËßàÂ∫ìÔºåÊú¨È°πÁõÆÈúÄË¶ÅÂ§ßÂÆ∂ÁöÑÊîØÊåÅÔºÅ

Ê∫êÁ†ÅÈúÄ‰ªòË¥πÂêë‰ΩúËÄÖÁ¥¢Ë¶ÅÔºà_**ÊâìËµè50**+_ÔºâÔºåÊâìËµèÁî®Êà∑ÔºàÊó†ËÆ∫Â§öÂ∞ëÔºâÂùáÂèØÊ∑ªÂä†‰ΩúËÄÖÂæÆ‰ø°Ôºå‰∫§ÊµÅËØ•Â∫ìÊàñËÄÖÂâçÁ´ØÈ¢ÜÂüüËØùÈ¢òÔºåÊ∫êÁ†Å‰∏çÂæóÁî®‰∫éÂºÄÊ∫êÔºàËøô‰πüÊòØÂÖ≥Èó≠Ê∫êÁ†ÅÁöÑÂéüÂõ†‰πã‰∏ÄÔºåÊúâ‰∫õ‰∫∫Áõ¥Êé•Â§çÂà∂ÂºÄÊ∫ê‰Ωú‰∏∫Ëá™Â∑±È°πÁõÆÔºâ„ÄÇ

## ÊéòÈáëÂ∞èÂÜå

ÂáùËÅö‰ΩúËÄÖËøë10Âπ¥Â∑•‰ΩúÁªèÈ™åÁöÑÊéòÈáëÂ∞èÂÜå[„ÄäÂ¶Ç‰ΩïÂÜôÂá∫È´òË¥®ÈáèÁöÑÂâçÁ´Ø‰ª£Á†Å„Äã](https://juejin.cn/book/7351005935306801188) Â∑≤Áªè‰∏äÁ∫øÂï¶ÔºåÊ¨¢ËøéÂâçÁ´ØÂêåÂ≠¶ÂÖ≥Ê≥®ÔºåÂ∏åÊúõËÉΩÂ§üÊèêÂçáÂ§ßÂÆ∂ÁöÑÂâçÁ´ØÁºñÁ†ÅÊ∞¥Âπ≥„ÄÇ

Â∞èÂÜåÂ∑≤ÂîÆ 890+‰ªΩÔºåÊî∂Âà∞ÂâçÁ´ØÂêåÂ≠¶ÁöÑÈ´òÂ∫¶ËØÑ‰ª∑ÔºåÂØπÊèêÂçáÊó•Â∏∏ÂºÄÂèëÊïàÁéáÂíåË¥®ÈáèÔºåÊúâÈùûÂ∏∏Â§ßÁöÑÂ∏ÆÂä©„ÄÇ


</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[huggingface/transformers.js]]></title>
            <link>https://github.com/huggingface/transformers.js</link>
            <guid>https://github.com/huggingface/transformers.js</guid>
            <pubDate>Wed, 02 Apr 2025 00:04:26 GMT</pubDate>
            <description><![CDATA[State-of-the-art Machine Learning for the web. Run ü§ó Transformers directly in your browser, with no need for a server!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/huggingface/transformers.js">huggingface/transformers.js</a></h1>
            <p>State-of-the-art Machine Learning for the web. Run ü§ó Transformers directly in your browser, with no need for a server!</p>
            <p>Language: JavaScript</p>
            <p>Stars: 13,343</p>
            <p>Forks: 894</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre>

&lt;p align=&quot;center&quot;&gt;
    &lt;br/&gt;
    &lt;picture&gt; 
        &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/transformersjs-dark.svg&quot; width=&quot;500&quot; style=&quot;max-width: 100%;&quot;&gt;
        &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/transformersjs-light.svg&quot; width=&quot;500&quot; style=&quot;max-width: 100%;&quot;&gt;
        &lt;img alt=&quot;transformers.js javascript library logo&quot; src=&quot;https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/transformersjs-light.svg&quot; width=&quot;500&quot; style=&quot;max-width: 100%;&quot;&gt;
    &lt;/picture&gt;
    &lt;br/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://www.npmjs.com/package/@huggingface/transformers&quot;&gt;&lt;img alt=&quot;NPM&quot; src=&quot;https://img.shields.io/npm/v/@huggingface/transformers&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://www.npmjs.com/package/@huggingface/transformers&quot;&gt;&lt;img alt=&quot;NPM Downloads&quot; src=&quot;https://img.shields.io/npm/dw/@huggingface/transformers&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://www.jsdelivr.com/package/npm/@huggingface/transformers&quot;&gt;&lt;img alt=&quot;jsDelivr Hits&quot; src=&quot;https://img.shields.io/jsdelivr/npm/hw/@huggingface/transformers&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/huggingface/transformers.js/blob/main/LICENSE&quot;&gt;&lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/github/license/huggingface/transformers.js?color=blue&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://huggingface.co/docs/transformers.js/index&quot;&gt;&lt;img alt=&quot;Documentation&quot; src=&quot;https://img.shields.io/website/http/huggingface.co/docs/transformers.js/index.svg?down_color=red&amp;down_message=offline&amp;up_message=online&quot;&gt;&lt;/a&gt;
&lt;/p&gt;


&lt;h3 align=&quot;center&quot;&gt;
  &lt;p&gt;State-of-the-art Machine Learning for the Web&lt;/p&gt;
&lt;/h3&gt;

Run ü§ó Transformers directly in your browser, with no need for a server!

Transformers.js is designed to be functionally equivalent to Hugging Face&#039;s [transformers](https://github.com/huggingface/transformers) python library, meaning you can run the same pretrained models using a very similar API. These models support common tasks in different modalities, such as:
  - üìù **Natural Language Processing**: text classification, named entity recognition, question answering, language modeling, summarization, translation, multiple choice, and text generation.
  - üñºÔ∏è **Computer Vision**: image classification, object detection, segmentation, and depth estimation.
  - üó£Ô∏è **Audio**: automatic speech recognition, audio classification, and text-to-speech.
  - üêô **Multimodal**: embeddings, zero-shot audio classification, zero-shot image classification, and zero-shot object detection.

Transformers.js uses [ONNX Runtime](https://onnxruntime.ai/) to run models in the browser. The best part about it, is that you can easily [convert](#convert-your-models-to-onnx) your pretrained PyTorch, TensorFlow, or JAX models to ONNX using [ü§ó Optimum](https://github.com/huggingface/optimum#onnx--onnx-runtime). 

For more information, check out the full [documentation](https://huggingface.co/docs/transformers.js).


## Installation


To install via [NPM](https://www.npmjs.com/package/@huggingface/transformers), run:
```bash
npm i @huggingface/transformers
```

Alternatively, you can use it in vanilla JS, without any bundler, by using a CDN or static hosting. For example, using [ES Modules](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules), you can import the library with:
```html
&lt;script type=&quot;module&quot;&gt;
    import { pipeline } from &#039;https://cdn.jsdelivr.net/npm/@huggingface/transformers@3.4.1&#039;;
&lt;/script&gt;
```


## Quick tour


It&#039;s super simple to translate from existing code! Just like the python library, we support the `pipeline` API. Pipelines group together a pretrained model with preprocessing of inputs and postprocessing of outputs, making it the easiest way to run models with the library.

&lt;table&gt;
&lt;tr&gt;
&lt;th width=&quot;440px&quot; align=&quot;center&quot;&gt;&lt;b&gt;Python (original)&lt;/b&gt;&lt;/th&gt;
&lt;th width=&quot;440px&quot; align=&quot;center&quot;&gt;&lt;b&gt;Javascript (ours)&lt;/b&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;

```python
from transformers import pipeline

# Allocate a pipeline for sentiment-analysis
pipe = pipeline(&#039;sentiment-analysis&#039;)

out = pipe(&#039;I love transformers!&#039;)
# [{&#039;label&#039;: &#039;POSITIVE&#039;, &#039;score&#039;: 0.999806941}]
```

&lt;/td&gt;
&lt;td&gt;

```javascript
import { pipeline } from &#039;@huggingface/transformers&#039;;

// Allocate a pipeline for sentiment-analysis
const pipe = await pipeline(&#039;sentiment-analysis&#039;);

const out = await pipe(&#039;I love transformers!&#039;);
// [{&#039;label&#039;: &#039;POSITIVE&#039;, &#039;score&#039;: 0.999817686}]
```

&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;


You can also use a different model by specifying the model id or path as the second argument to the `pipeline` function. For example:
```javascript
// Use a different model for sentiment-analysis
const pipe = await pipeline(&#039;sentiment-analysis&#039;, &#039;Xenova/bert-base-multilingual-uncased-sentiment&#039;);
```

By default, when running in the browser, the model will be run on your CPU (via WASM). If you would like
to run the model on your GPU (via WebGPU), you can do this by setting `device: &#039;webgpu&#039;`, for example:
```javascript
// Run the model on WebGPU
const pipe = await pipeline(&#039;sentiment-analysis&#039;, &#039;Xenova/distilbert-base-uncased-finetuned-sst-2-english&#039;, {
  device: &#039;webgpu&#039;,
});
```

For more information, check out the [WebGPU guide](https://huggingface.co/docs/transformers.js/guides/webgpu).

&gt; [!WARNING]
&gt; The WebGPU API is still experimental in many browsers, so if you run into any issues,
&gt; please file a [bug report](https://github.com/huggingface/transformers.js/issues/new?title=%5BWebGPU%5D%20Error%20running%20MODEL_ID_GOES_HERE&amp;assignees=&amp;labels=bug,webgpu&amp;projects=&amp;template=1_bug-report.yml).

In resource-constrained environments, such as web browsers, it is advisable to use a quantized version of
the model to lower bandwidth and optimize performance. This can be achieved by adjusting the `dtype` option,
which allows you to select the appropriate data type for your model. While the available options may vary
depending on the specific model, typical choices include `&quot;fp32&quot;` (default for WebGPU), `&quot;fp16&quot;`, `&quot;q8&quot;`
(default for WASM), and `&quot;q4&quot;`. For more information, check out the [quantization guide](https://huggingface.co/docs/transformers.js/guides/dtypes).
```javascript
// Run the model at 4-bit quantization
const pipe = await pipeline(&#039;sentiment-analysis&#039;, &#039;Xenova/distilbert-base-uncased-finetuned-sst-2-english&#039;, {
  dtype: &#039;q4&#039;,
});
```


## Examples

Want to jump straight in? Get started with one of our sample applications/templates, which can be found [here](https://github.com/huggingface/transformers.js-examples).

| Name              | Description                      | Links                   |
|-------------------|----------------------------------|-------------------------------|
| Whisper Web       | Speech recognition w/ Whisper    | [code](https://github.com/xenova/whisper-web), [demo](https://huggingface.co/spaces/Xenova/whisper-web) |
| Doodle Dash       | Real-time sketch-recognition game | [blog](https://huggingface.co/blog/ml-web-games), [code](https://github.com/xenova/doodle-dash), [demo](https://huggingface.co/spaces/Xenova/doodle-dash) |
| Code Playground   | In-browser code completion website | [code](https://github.com/huggingface/transformers.js/tree/main/examples/code-completion/), [demo](https://huggingface.co/spaces/Xenova/ai-code-playground) |
| Semantic Image Search (client-side) | Search for images with text | [code](https://github.com/huggingface/transformers.js/tree/main/examples/semantic-image-search-client/), [demo](https://huggingface.co/spaces/Xenova/semantic-image-search-client) |
| Semantic Image Search (server-side) | Search for images with text (Supabase) | [code](https://github.com/huggingface/transformers.js/tree/main/examples/semantic-image-search/), [demo](https://huggingface.co/spaces/Xenova/semantic-image-search) |
| Vanilla JavaScript | In-browser object detection     | [video](https://scrimba.com/scrim/cKm9bDAg), [code](https://github.com/huggingface/transformers.js/tree/main/examples/vanilla-js/), [demo](https://huggingface.co/spaces/Scrimba/vanilla-js-object-detector) |
| React             | Multilingual translation website | [code](https://github.com/huggingface/transformers.js/tree/main/examples/react-translator/), [demo](https://huggingface.co/spaces/Xenova/react-translator) |
| Text to speech (client-side) | In-browser speech synthesis | [code](https://github.com/huggingface/transformers.js/tree/main/examples/text-to-speech-client/), [demo](https://huggingface.co/spaces/Xenova/text-to-speech-client) |
| Browser extension | Text classification extension    | [code](https://github.com/huggingface/transformers.js/tree/main/examples/extension/) |
| Electron          | Text classification application  | [code](https://github.com/huggingface/transformers.js/tree/main/examples/electron/)  |
| Next.js (client-side) | Sentiment analysis (in-browser inference) | [code](https://github.com/huggingface/transformers.js/tree/main/examples/next-client/), [demo](https://huggingface.co/spaces/Xenova/next-example-app) |
| Next.js (server-side) | Sentiment analysis (Node.js inference) | [code](https://github.com/huggingface/transformers.js/tree/main/examples/next-server/), [demo](https://huggingface.co/spaces/Xenova/next-server-example-app) |
| Node.js           | Sentiment analysis API           | [code](https://github.com/huggingface/transformers.js/tree/main/examples/node/)      |
| Demo site         | A collection of demos | [code](https://github.com/huggingface/transformers.js/tree/main/examples/demo-site/), [demo](https://huggingface.github.io/transformers.js/) |

Check out the Transformers.js [template](https://huggingface.co/new-space?template=static-templates%2Ftransformers.js) on Hugging Face to get started in one click!


## Custom usage



By default, Transformers.js uses [hosted pretrained models](https://huggingface.co/models?library=transformers.js) and [precompiled WASM binaries](https://cdn.jsdelivr.net/npm/@huggingface/transformers@3.4.1/dist/), which should work out-of-the-box. You can customize this as follows:

### Settings

```javascript
import { env } from &#039;@huggingface/transformers&#039;;

// Specify a custom location for models (defaults to &#039;/models/&#039;).
env.localModelPath = &#039;/path/to/models/&#039;;

// Disable the loading of remote models from the Hugging Face Hub:
env.allowRemoteModels = false;

// Set location of .wasm files. Defaults to use a CDN.
env.backends.onnx.wasm.wasmPaths = &#039;/path/to/files/&#039;;
```

For a full list of available settings, check out the [API Reference](https://huggingface.co/docs/transformers.js/api/env).

### Convert your models to ONNX

We recommend using our [conversion script](https://github.com/huggingface/transformers.js/blob/main/scripts/convert.py) to convert your PyTorch, TensorFlow, or JAX models to ONNX in a single command. Behind the scenes, it uses [ü§ó Optimum](https://huggingface.co/docs/optimum) to perform conversion and quantization of your model.

```bash
python -m scripts.convert --quantize --model_id &lt;model_name_or_path&gt;
```

For example, convert and quantize [bert-base-uncased](https://huggingface.co/bert-base-uncased) using:
```bash
python -m scripts.convert --quantize --model_id bert-base-uncased
```

This will save the following files to `./models/`:

```
bert-base-uncased/
‚îú‚îÄ‚îÄ config.json
‚îú‚îÄ‚îÄ tokenizer.json
‚îú‚îÄ‚îÄ tokenizer_config.json
‚îî‚îÄ‚îÄ onnx/
    ‚îú‚îÄ‚îÄ model.onnx
    ‚îî‚îÄ‚îÄ model_quantized.onnx
```

For the full list of supported architectures, see the [Optimum documentation](https://huggingface.co/docs/optimum/main/en/exporters/onnx/overview).


## Supported tasks/models

Here is the list of all tasks and architectures currently supported by Transformers.js.
If you don&#039;t see your task/model listed here or it is not yet supported, feel free
to open up a feature request [here](https://github.com/huggingface/transformers.js/issues/new/choose).

To find compatible models on the Hub, select the &quot;transformers.js&quot; library tag in the filter menu (or visit [this link](https://huggingface.co/models?library=transformers.js)).
You can refine your search by selecting the task you&#039;re interested in (e.g., [text-classification](https://huggingface.co/models?pipeline_tag=text-classification&amp;library=transformers.js)).


### Tasks

#### Natural Language Processing

| Task                     | ID | Description | Supported? |
|--------------------------|----|-------------|------------|
| [Fill-Mask](https://huggingface.co/tasks/fill-mask)                     | `fill-mask`   | Masking some of the words in a sentence and predicting which words should replace those masks. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.FillMaskPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=fill-mask&amp;library=transformers.js) |
| [Question Answering](https://huggingface.co/tasks/question-answering)   | `question-answering`   | Retrieve the answer to a question from a given text. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.QuestionAnsweringPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=question-answering&amp;library=transformers.js) |
| [Sentence Similarity](https://huggingface.co/tasks/sentence-similarity) | `sentence-similarity`  | Determining how similar two texts are. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.FeatureExtractionPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=sentence-similarity&amp;library=transformers.js) |
| [Summarization](https://huggingface.co/tasks/summarization)             |  `summarization`  | Producing a shorter version of a document while preserving its important information. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.SummarizationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=summarization&amp;library=transformers.js) |
| [Table Question Answering](https://huggingface.co/tasks/table-question-answering) |  `table-question-answering`  | Answering a question about information from a given table. | ‚ùå |
| [Text Classification](https://huggingface.co/tasks/text-classification)      | `text-classification` or `sentiment-analysis`  | Assigning a label or class to a given text. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.TextClassificationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=text-classification&amp;library=transformers.js) |
| [Text Generation](https://huggingface.co/tasks/text-generation#completion-generation-models)          | `text-generation`  | Producing new text by predicting the next word in a sequence. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.TextGenerationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=text-generation&amp;library=transformers.js) |
| [Text-to-text Generation](https://huggingface.co/tasks/text-generation#text-to-text-generation-models)  | `text2text-generation`  | Converting one text sequence into another text sequence. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.Text2TextGenerationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=text2text-generation&amp;library=transformers.js) |
| [Token Classification](https://huggingface.co/tasks/token-classification)     | `token-classification` or `ner`  | Assigning a label to each token in a text. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.TokenClassificationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=token-classification&amp;library=transformers.js) |
| [Translation](https://huggingface.co/tasks/translation)              |  `translation`  | Converting text from one language to another. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.TranslationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=translation&amp;library=transformers.js) |
| [Zero-Shot Classification](https://huggingface.co/tasks/zero-shot-classification) | `zero-shot-classification`  | Classifying text into classes that are unseen during training.  | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.ZeroShotClassificationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=zero-shot-classification&amp;library=transformers.js) |
| [Feature Extraction](https://huggingface.co/tasks/feature-extraction)         |  `feature-extraction`  | Transforming raw data into numerical features that can be processed while preserving the information in the original dataset. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.FeatureExtractionPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=feature-extraction&amp;library=transformers.js) |

#### Vision

| Task                     | ID | Description | Supported? |
|--------------------------|----|-------------|------------|
| [Background Removal](https://huggingface.co/tasks/image-segmentation#background-removal)       | `background-removal`   | Isolating the main subject of an image by removing or making the background transparent. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.BackgroundRemovalPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?other=background-removal&amp;library=transformers.js) |
| [Depth Estimation](https://huggingface.co/tasks/depth-estimation)         |  `depth-estimation`  | Predicting the depth of objects present in an image. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.DepthEstimationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=depth-estimation&amp;library=transformers.js) |
| [Image Classification](https://huggingface.co/tasks/image-classification)                | `image-classification`   | Assigning a label or class to an entire image. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.ImageClassificationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=image-classification&amp;library=transformers.js) |
| [Image Segmentation](https://huggingface.co/tasks/image-segmentation)       | `image-segmentation`   | Divides an image into segments where each pixel is mapped to an object. This task has multiple variants such as instance segmentation, panoptic segmentation and semantic segmentation. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.ImageSegmentationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=image-segmentation&amp;library=transformers.js) |
| [Image-to-Image](https://huggingface.co/tasks/image-to-image)      |  `image-to-image` | Transforming a source image to match the characteristics of a target image or a target image domain. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.ImageToImagePipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=image-to-image&amp;library=transformers.js) |
| [Mask Generation](https://huggingface.co/tasks/mask-generation)            |  `mask-generation`  | Generate masks for the objects in an image. | ‚ùå |
| [Object Detection](https://huggingface.co/tasks/object-detection)            | `object-detection`   | Identify objects of certain defined classes within an image. | ‚úÖ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.ObjectDetectionPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=object-detection&amp;library=transformers.js) |
| [Video Classification](https://huggingface.co/tasks/video-classification) |  n/a  | Assigning a label or class to an entire video. | ‚ùå |
| [Unconditional Image Generation](https://huggingface.co/tasks/unconditional-image-generation)      |  n/a   | Generating images with no condition in any context (like a prompt text or another image). | ‚ùå |
| [

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>