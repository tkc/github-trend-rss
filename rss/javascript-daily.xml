<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Wed, 23 Apr 2025 00:05:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[drawdb-io/drawdb]]></title>
            <link>https://github.com/drawdb-io/drawdb</link>
            <guid>https://github.com/drawdb-io/drawdb</guid>
            <pubDate>Wed, 23 Apr 2025 00:05:02 GMT</pubDate>
            <description><![CDATA[Free, simple, and intuitive online database diagram editor and SQL generator.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/drawdb-io/drawdb">drawdb-io/drawdb</a></h1>
            <p>Free, simple, and intuitive online database diagram editor and SQL generator.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 27,551</p>
            <p>Forks: 1,946</p>
            <p>Stars today: 256 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
    &lt;img width=&quot;64&quot; alt=&quot;drawdb logo&quot; src=&quot;./src/assets/icon-dark.png&quot;&gt;
    &lt;h1&gt;drawDB&lt;/h1&gt;
&lt;/div&gt;

&lt;h3 align=&quot;center&quot;&gt;Free, simple, and intuitive database schema editor and SQL generator.&lt;/h3&gt;

&lt;div align=&quot;center&quot; style=&quot;margin-bottom:12px;&quot;&gt;
    &lt;a href=&quot;https://drawdb.app/&quot; style=&quot;display: flex; align-items: center;&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Start%20building-grey&quot; alt=&quot;drawDB&quot;/&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://discord.gg/BrjZgNrmR6&quot; style=&quot;display: flex; align-items: center;&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/discord/1196658537208758412.svg?label=Join%20the%20Discord&amp;logo=discord&quot; alt=&quot;Discord&quot;/&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://x.com/drawDB_&quot; style=&quot;display: flex; align-items: center;&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Follow%20us%20on%20X-blue?logo=X&quot; alt=&quot;Follow us on X&quot;/&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;h3 align=&quot;center&quot;&gt;&lt;img width=&quot;700&quot; style=&quot;border-radius:5px;&quot; alt=&quot;demo&quot; src=&quot;drawdb.png&quot;&gt;&lt;/h3&gt;

DrawDB is a robust and user-friendly database entity relationship (DBER) editor right in your browser. Build diagrams with a few clicks, export sql scripts, customize your editor, and more without creating an account. See the full set of features [here](https://drawdb.app/).

## Getting Started

### Local Development

```bash
git clone https://github.com/drawdb-io/drawdb
cd drawdb
npm install
npm run dev
```

### Build

```bash
git clone https://github.com/drawdb-io/drawdb
cd drawdb
npm install
npm run build
```

### Docker Build

```bash
docker build -t drawdb .
docker run -p 3000:80 drawdb
```

Set up the [server](https://github.com/drawdb-io/drawdb-server) and environment variables according to `.env.sample` for the survey and bug report forms.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[leaningtech/webvm]]></title>
            <link>https://github.com/leaningtech/webvm</link>
            <guid>https://github.com/leaningtech/webvm</guid>
            <pubDate>Wed, 23 Apr 2025 00:05:01 GMT</pubDate>
            <description><![CDATA[Virtual Machine for the Web]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/leaningtech/webvm">leaningtech/webvm</a></h1>
            <p>Virtual Machine for the Web</p>
            <p>Language: JavaScript</p>
            <p>Stars: 12,638</p>
            <p>Forks: 2,244</p>
            <p>Stars today: 29 stars today</p>
            <h2>README</h2><pre># WebVM

[![Discord server](https://img.shields.io/discord/988743885121548329?color=%235865F2&amp;logo=discord&amp;logoColor=%23fff)](https://discord.gg/yWRr2YnD9c)
[![Issues](https://img.shields.io/github/issues/leaningtech/webvm)](https://github.com/leaningtech/webvm/issues)

This repository hosts the source code for [https://webvm.io](https://webvm.io), a Linux virtual machine that runs in your browser.

Try out the new Alpine / Xorg / i3 graphical environment: [https://webvm.io/alpine.html](https://webvm.io/alpine.html)

&lt;img src=&quot;/assets/welcome_to_WebVM_alpine_2024.png&quot; width=&quot;90%&quot;&gt;

WebVM is a server-less virtual environment running fully client-side in HTML5/WebAssembly. It&#039;s designed to be Linux ABI-compatible. It runs an unmodified Debian distribution including many native development toolchains.

WebVM is powered by the CheerpX virtualization engine, and enables safe, sandboxed client-side execution of x86 binaries on any browser. CheerpX includes an x86-to-WebAssembly JIT compiler, a virtual block-based file system, and a Linux syscall emulator. 

# Enable networking

Modern browsers do not provide APIs to directly use TCP or UDP. WebVM provides networking support by integrating with Tailscale, a VPN network that supports WebSockets as a transport layer.

- Open the &quot;Networking&quot; panel from the side-bar
- Click &quot;Connect to Tailscale&quot; from the panel
- Log in to Tailscale (create an account if you don&#039;t have one)
- Click &quot;Connect&quot; when prompted by Tailscale
- If you are unfamiliar with Tailscale or would like additional information see [WebVM and Tailscale](/docs/Tailscale.md).

# Fork, deploy, customize

&lt;img src=&quot;/assets/fork_deploy_instructions.gif&quot; alt=&quot;deploy_instructions_gif&quot; width=&quot;90%&quot;&gt;

- Fork the repository.
- Enable Github pages in settings.
	- Click on `Settings`.
	- Go to the `Pages` section.
	- Select `Github Actions` as the source.
        - If you are using a custom domain, ensure `Enforce HTTPS` is enabled. 
- Run the workflow.
	- Click on `Actions`.
	- Accept the prompt. This is required only once to enable Actions for your fork.
	- Click on the workflow named `Deploy`.
	- Click `Run workflow` and then once more `Run workflow` in the menu.
- After a few seconds a new `Deploy` workflow will start, click on it to see details.
- After the workflow completes, which takes a few minutes, it will show the URL below the `deploy_to_github_pages` job.

&lt;img src=&quot;/assets/result.png&quot; width=&quot;70%&quot; &gt;

You can now customize `dockerfiles/debian_mini` to suit your needs, or make a new Dockerfile from scratch. Use the `Path to Dockerfile` workflow parameter to select it.

# Run WebVM locally with a custom Debian mini disk image

1. Clone the WebVM Repository

```sh
git clone https://github.com/leaningtech/webvm.git
cd webvm
```

2. Download the Debian mini Ext2 image

	Run the following command to download the Debian mini Ext2 image:

	```sh
	wget &quot;https://github.com/leaningtech/webvm/releases/download/ext2_image/debian_mini_20230519_5022088024.ext2&quot;
	```

	(*You can also build your own disk image by selecting the **&quot;Upload GitHub release&quot;** workflow option*)

3. Update the configuration file

	Edit `config_public_terminal.js` to reference your local disk image:

- Replace: 
	
	`&quot;wss://disks.webvm.io/debian_large_20230522_5044875331.ext2&quot;`
	
	With:
	
	`&quot;/disk-images/debian_mini_20230519_5022088024.ext2&quot;`

	(*Use an absolute or relative URL pointing to the disk image location.*)


- Replace `&quot;cloud&quot;` with the correct disk image type: `&quot;bytes&quot;`
	
4. Build WebVM

	Run the following commands to install dependencies and build WebVM:

	```sh
	npm install
	npm run build
	```

	The output will be placed in the `build` directory.

5. Configure Nginx

- Create a directory for the disk image:

	```sh
	mkdir disk-images
	mv debian_mini_20230519_5022088024.ext2 disk-images/
	```

- Modify your `nginx.conf` file to serve the disk image. Add the following location block:

	```nginx
	location /disk-images/ {
        root .;
        autoindex on;
	}
	```

6. Start Nginx

	Run the following command to start Nginx:

	```sh
	nginx -p . -c nginx.conf
	```

	*Nginx will automatically serve the build directory.*

7. Access WebVM

	Open a browser and visit: `http://127.0.0.1:8081`.

	Enjoy your local WebVM!

# Example customization: Python3 REPL

The `Deploy` workflow takes into account the `CMD` specified in the Dockerfile. To build a REPL you can simply apply this patch and deploy.

```diff
diff --git a/dockerfiles/debian_mini b/dockerfiles/debian_mini
index 2878332..1f3103a 100644
--- a/dockerfiles/debian_mini
+++ b/dockerfiles/debian_mini
@@ -15,4 +15,4 @@ WORKDIR /home/user/
 # We set env, as this gets extracted by Webvm. This is optional.
 ENV HOME=&quot;/home/user&quot; TERM=&quot;xterm&quot; USER=&quot;user&quot; SHELL=&quot;/bin/bash&quot; EDITOR=&quot;vim&quot; LANG=&quot;en_US.UTF-8&quot; LC_ALL=&quot;C&quot;
 RUN echo &#039;root:password&#039; | chpasswd
-CMD [ &quot;/bin/bash&quot; ]
+CMD [ &quot;/usr/bin/python3&quot; ]
```

# How to use Claude AI

To access Claude AI, you need an API key. Follow these steps to get started:

1. Create an account
- Visit [Anthropic Console](https://console.anthropic.com/login) and sign up with your e-mail. You&#039;ll receive a sign in link to the Anthropic Console. 

&lt;img src=&quot;/assets/anthropic_signup.png&quot; width=&quot;90%&quot;&gt;

2. Get your API key
- Once logged in, navigate to **Get API keys**.
- Purchase the amount of credits you need. After completing the purchase, you&#039;ll be able to generate the key through the API console.

&lt;img src=&quot;/assets/anthropic_api_payment.png&quot; width=&quot;90%&quot;&gt;

3. Log in with your API key
- Navigate to your WebVM and hover over the robot icon. This will show the Claude AI Integration tab. For added convenience, you can click the pin button in the top right corner to keep the tab in place.
- You&#039;ll see a prompt where you can insert your Claude API key.
- Insert your key and press enter.

&lt;img src=&quot;/assets/insert_key.png&quot; width=&quot;90%&quot;&gt;

4. Start using Claude AI
- Once your API key is entered, you can begin interacting with Claude AI by asking questions such as:

 __&quot;Solve the CTF challenge at `/home/user/chall1.bin.` Note that the binary reads from stdin.&quot;__

&lt;img src=&quot;/assets/webvm_claude_ctf.gif&quot; alt=&quot;deploy_instructions_gif&quot; width=&quot;90%&quot;&gt;

**Important:** Your API key is private and should never be shared. We do not have access to your key, which is not only stored locally in your browser.

# Bugs and Issues

Please use [Issues](https://github.com/leaningtech/webvm/issues) to report any bug.
Or come to say hello / share your feedback on [Discord](https://discord.gg/yTNZgySKGa).

# More links

- [WebVM: server-less x86 virtual machines in the browser](https://leaningtech.com/webvm-server-less-x86-virtual-machines-in-the-browser/)
- [WebVM: Linux Virtualization in WebAssembly with Full Networking via Tailscale](https://leaningtech.com/webvm-virtual-machine-with-networking-via-tailscale/)
- [Mini.WebVM: Your own Linux box from Dockerfile, virtualized in the browser via WebAssembly](https://leaningtech.com/mini-webvm-your-linux-box-from-dockerfile-via-wasm/)
- Reference GitHub Pages deployment: [Mini.WebVM](https://mini.webvm.io)
- [Crafting the Impossible: X86 Virtualization in the Browser with WebAssembly](https://www.youtube.com/watch?v=VqrbVycTXmw) Talk at JsNation 2022

# Thanks to... 
This project depends on:
- [CheerpX](https://cheerpx.io/), made by [Leaning Technologies](https://leaningtech.com/) for x86 virtualization and Linux emulation
- xterm.js, [https://xtermjs.org/](https://xtermjs.org/), for providing the Web-based terminal emulator
- [Tailscale](https://tailscale.com/), for the networking component
- [lwIP](https://savannah.nongnu.org/projects/lwip/), for the TCP/IP stack, compiled for the Web via [Cheerp](https://github.com/leaningtech/cheerp-meta/)

# Versioning

WebVM depends on the CheerpX x86-to-WebAssembly virtualization technology, which is included in the project via [NPM](https://www.npmjs.com/package/@leaningtech/cheerpx).

The NPM package is updated on every release.

Every build is immutable, if a specific version works well for you today, it will keep working forever.

# License

WebVM is released under the Apache License, Version 2.0.

You are welcome to use, modify, and redistribute the contents of this repository.

The public CheerpX deployment is provided **as-is** and is **free to use** for technological exploration, testing and use by individuals. Any other use by organizations, including non-profit, academia and the public sector, requires a license. Downloading a CheerpX build for the purpose of hosting it elsewhere is not permitted without a commercial license.

Read more about [CheerpX licensing](https://cheerpx.io/docs/licensing)

If you want to build a product on top of CheerpX/WebVM, please get in touch: sales@leaningtech.com
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[HeyPuter/puter]]></title>
            <link>https://github.com/HeyPuter/puter</link>
            <guid>https://github.com/HeyPuter/puter</guid>
            <pubDate>Wed, 23 Apr 2025 00:05:00 GMT</pubDate>
            <description><![CDATA[🌐 The Internet OS! Free, Open-Source, and Self-Hostable.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/HeyPuter/puter">HeyPuter/puter</a></h1>
            <p>🌐 The Internet OS! Free, Open-Source, and Self-Hostable.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 30,361</p>
            <p>Forks: 2,272</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre>&lt;h3 align=&quot;center&quot;&gt;&lt;img width=&quot;80&quot; alt=&quot;Puter.com, The Personal Cloud Computer: All your files, apps, and games in one place accessible from anywhere at any time.&quot; src=&quot;https://assets.puter.site/puter-logo.png&quot;&gt;&lt;/h3&gt;

&lt;h3 align=&quot;center&quot;&gt;The Internet OS! Free, Open-Source, and Self-Hostable.&lt;/h3&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://puter.com/?ref=github.com&quot;&gt;&lt;strong&gt;« LIVE DEMO »&lt;/strong&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://puter.com/?ref=github.com&quot;&gt;Puter.com&lt;/a&gt;
    ·
    &lt;a href=&quot;https://puter.com/app/app-center&quot;&gt;App Store&lt;/a&gt;
    ·
    &lt;a href=&quot;https://developer.puter.com&quot; target=&quot;_blank&quot;&gt;Developers&lt;/a&gt;
    ·
    &lt;a href=&quot;https://github.com/heyputer/puter-cli&quot; target=&quot;_blank&quot;&gt;CLI&lt;/a&gt;
    ·
    &lt;a href=&quot;https://discord.com/invite/PQcx7Teh8u&quot;&gt;Discord&lt;/a&gt;
    ·
    &lt;a href=&quot;https://reddit.com/r/puter&quot;&gt;Reddit&lt;/a&gt;
    ·
    &lt;a href=&quot;https://twitter.com/HeyPuter&quot;&gt;X&lt;/a&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;&lt;img width=&quot;800&quot; style=&quot;border-radius:5px;&quot; alt=&quot;screenshot&quot; src=&quot;https://assets.puter.site/puter.com-screenshot-3.webp&quot;&gt;&lt;/h3&gt;

&lt;br/&gt;

## Puter

Puter is an advanced, open-source internet operating system designed to be feature-rich, exceptionally fast, and highly extensible. Puter can be used as:

- A privacy-first personal cloud to keep all your files, apps, and games in one secure place, accessible from anywhere at any time.
- A platform for building and publishing websites, web apps, and games.
- An alternative to Dropbox, Google Drive, OneDrive, etc. with a fresh interface and powerful features.
- A remote desktop environment for servers and workstations.
- A friendly, open-source project and community to learn about web development, cloud computing, distributed systems, and much more!

&lt;br/&gt;

## Getting Started

### 💻 Local Development

```bash
git clone https://github.com/HeyPuter/puter
cd puter
npm install
npm start
```
✨ This should launch Puter at 
&lt;font color=&quot;red&quot;&gt; http://puter.localhost:4100 (or the next available port). &lt;/font&gt;



If this does not work, see [First Run Issues](./doc/self-hosters/first-run-issues.md) for
troubleshooting steps.

&lt;br/&gt;

### 🐳 Docker

```bash
mkdir puter &amp;&amp; cd puter &amp;&amp; mkdir -p puter/config puter/data &amp;&amp; sudo chown -R 1000:1000 puter &amp;&amp; docker run --rm -p 4100:4100 -v `pwd`/puter/config:/etc/puter -v `pwd`/puter/data:/var/puter  ghcr.io/heyputer/puter
```
✨ This should launch Puter at 
&lt;font color=&quot;red&quot;&gt; http://puter.localhost:4100 (or the next available port). &lt;/font&gt;

&lt;br/&gt;

### 🐙 Docker Compose

#### Linux/macOS

```bash
mkdir -p puter/config puter/data
sudo chown -R 1000:1000 puter
wget https://raw.githubusercontent.com/HeyPuter/puter/main/docker-compose.yml
docker compose up
```
✨ This should be available at 
&lt;font color=&quot;red&quot;&gt; http://puter.localhost:4100 (or the next available port). &lt;/font&gt;

&lt;br/&gt;

#### Windows

```powershell
mkdir -p puter
cd puter
New-Item -Path &quot;puter\config&quot; -ItemType Directory -Force
New-Item -Path &quot;puter\data&quot; -ItemType Directory -Force
Invoke-WebRequest -Uri &quot;https://raw.githubusercontent.com/HeyPuter/puter/main/docker-compose.yml&quot; -OutFile &quot;docker-compose.yml&quot;
docker compose up
```
✨ This should launch Puter at 
&lt;font color=&quot;red&quot;&gt; http://puter.localhost:4100 (or the next available port). &lt;/font&gt;

&lt;br/&gt;

### 🚀 Self-Hosting

For detailed guides on self-hosting Puter, including configuration options and best practices, see our [Self-Hosting Documentation](https://github.com/HeyPuter/puter/blob/main/doc/self-hosters/instructions.md).

&lt;br/&gt;

### ☁️ Puter.com

Puter is available as a hosted service at [**puter.com**](https://puter.com).

&lt;br/&gt;

## System Requirements

- **Operating Systems:** Linux, macOS, Windows
- **RAM:** 2GB minimum (4GB recommended)
- **Disk Space:** 1GB free space
- **Node.js:** Version 16+ (Version 23+ recommended)
- **npm:** Latest stable version

&lt;br/&gt;

## Support

Connect with the maintainers and community through these channels:

- Bug report or feature request? Please [open an issue](https://github.com/HeyPuter/puter/issues/new/choose).
- Discord: [discord.com/invite/PQcx7Teh8u](https://discord.com/invite/PQcx7Teh8u)
- X (Twitter): [x.com/HeyPuter](https://x.com/HeyPuter)
- Reddit: [reddit.com/r/puter/](https://www.reddit.com/r/puter/)
- Mastodon: [mastodon.social/@puter](https://mastodon.social/@puter)
- Security issues? [security@puter.com](mailto:security@puter.com)
- Email maintainers at [hi@puter.com](mailto:hi@puter.com)

We are always happy to help you with any questions you may have. Don&#039;t hesitate to ask!

&lt;br/&gt;

## License

This repository, including all its contents, sub-projects, modules, and components, is licensed under [AGPL-3.0](https://github.com/HeyPuter/puter/blob/main/LICENSE.txt) unless explicitly stated otherwise. Third-party libraries included in this repository may be subject to their own licenses.

&lt;br/&gt;

## Translations

- [Arabic / العربية](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ar.md)
- [Armenian / Հայերեն](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.hy.md)
- [Bengali / বাংলা](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.bn.md)
- [Chinese / 中文](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.zh.md)
- [Danish / Dansk](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.da.md)
- [English](https://github.com/HeyPuter/puter/blob/main/README.md)
- [Farsi / فارسی](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.fa.md)
- [Finnish / Suomi](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.fi.md)
- [French / Français](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.fr.md)
- [German/ Deutsch](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.de.md)
- [Hebrew/ עברית](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.he.md)
- [Hindi / हिंदी](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.hi.md)
- [Hungarian / Magyar](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.hu.md)
- [Indonesian / Bahasa Indonesia](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.id.md)
- [Italian / Italiano](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.it.md)
- [Japanese / 日本語](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.jp.md)
- [Korean / 한국어](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ko.md)
- [Malayalam / മലയാളം](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ml.md)
- [Polish / Polski](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.pl.md)
- [Portuguese / Português](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.pt.md)
- [Romanian / Română](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ro.md)
- [Russian / Русский](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ru.md)
- [Spanish / Español](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.es.md)
- [Swedish / Svenska](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.sv.md)
- [Tamil / தமிழ்](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ta.md)
- [Telugu / తెలుగు](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.te.md)
- [Thai / ไทย](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.th.md)
- [Turkish / Türkçe](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.tr.md)
- [Ukrainian / Українська](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ua.md)
- [Urdu / اردو](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.ur.md)
- [Vietnamese / Tiếng Việt](https://github.com/HeyPuter/puter/blob/main/doc/i18n/README.vi.md)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[wanglin2/mind-map]]></title>
            <link>https://github.com/wanglin2/mind-map</link>
            <guid>https://github.com/wanglin2/mind-map</guid>
            <pubDate>Wed, 23 Apr 2025 00:04:59 GMT</pubDate>
            <description><![CDATA[一个还算强大的Web思维导图。A relatively powerful web mind map.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/wanglin2/mind-map">wanglin2/mind-map</a></h1>
            <p>一个还算强大的Web思维导图。A relatively powerful web mind map.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,825</p>
            <p>Forks: 1,236</p>
            <p>Stars today: 44 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;Simple mind map&lt;/h1&gt;

[![npm-version](https://img.shields.io/npm/v/simple-mind-map)](https://www.npmjs.com/package/simple-mind-map)
![npm download](https://img.shields.io/npm/dm/simple-mind-map)
[![GitHub issues](https://img.shields.io/github/issues/wanglin2/mind-map)](https://github.com/wanglin2/mind-map/issues)
![license](https://img.shields.io/npm/l/express.svg)
[![GitHub stars](https://img.shields.io/github/stars/wanglin2/mind-map)](https://github.com/wanglin2/mind-map/stargazers)
[![GitHub forks](https://img.shields.io/github/forks/wanglin2/mind-map)](https://github.com/wanglin2/mind-map/network/members)

&gt; 中文名：思绪思维导图。一个简单&amp;强大的 Web 思维导图库和思维导图软件。

本项目主要包含以下内容：

- 一个 `js` 思维导图库，不依赖任何框架，可以用来快速完成 Web 思维导图产品的开发。

&gt;  开发文档：[https://wanglin2.github.io/mind-map-docs/](https://wanglin2.github.io/mind-map-docs/)

- 一个 Web 思维导图，基于思维导图库、`Vue2.x`、`ElementUI` 开发，支持操作电脑本地文件，可以当做一个在线版思维导图应用使用，也可以自部署和二次开发。

&gt;  在线地址：[https://wanglin2.github.io/mind-map/](https://wanglin2.github.io/mind-map/)

- 客户端和插件

&gt; 1.独立客户端，支持Windows、Mac及Linux系统。
&gt;
&gt; 下载地址：[Github](https://github.com/wanglin2/mind-map/releases)、[百度云盘](https://pan.baidu.com/s/1huasEbKsGNH2Af68dvWiOg?pwd=3bp3)

&gt; 2.`uTools`插件，现已上架[uTools](https://www.u.tools/)插件应用市场。
&gt;
&gt; 可直接在`uTools`插件应用市场中搜索`思绪`进行安装，也可以直接访问该地址：[主页](https://www.u-tools.cn/plugins/detail/%E6%80%9D%E7%BB%AA%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/)，点击右侧的【启动】按钮进行安装。

- 云存储版本，如果你需要带后端的云存储版本，可以尝试我们开发的另一个项目[理想文档](https://github.com/wanglin2/lx-doc)。

# 特性

- [x] 插件化架构，除核心功能外，其他功能作为插件提供，按需使用，减小打包体积
- [x] 支持逻辑结构图（向左、向右逻辑结构图）、思维导图、组织结构图、目录组织图、时间轴（横向、竖向）、鱼骨图等结构
- [x] 内置多种主题，允许高度自定义样式，支持注册新主题
- [x] 节点内容支持文本（普通文本、富文本）、图片、图标、超链接、备注、标签、概要、数学公式
- [x] 节点支持拖拽（拖拽移动、自由调整）、多种节点形状；支持扩展节点内容、支持使用 DDM 完全自定义节点内容
- [x] 支持画布拖动、缩放
- [x] 支持鼠标按键拖动选择和 Ctrl+左键两种多选节点方式
- [x] 支持导出为`json`、`png`、`svg`、`pdf`、`markdown`、`xmind`、`txt`，支持从`json`、`xmind`、`markdown`导入
- [x] 支持快捷键、前进后退、关联线、搜索替换、小地图、水印、滚动条、手绘风格、彩虹线条、标记、外框
- [x] 提供丰富的配置，满足各种场景各种使用习惯
- [x] 支持协同编辑
- [x] 支持演示模式
- [x] 更多功能等你来发现

官方提供了如下插件，可根据需求按需引入（某个功能不生效大概率是因为你没有引入对应的插件），具体使用方式请查看文档：

| RichText（节点富文本插件）           | Select（鼠标多选节点插件）                | Drag（节点拖拽插件）                 | AssociativeLine（关联线插件）        |
| ------------------------------------ | ----------------------------------------- | ------------------------------------ | ------------------------------------ |
| Export（导出插件）                   | KeyboardNavigation（键盘导航插件）        | MiniMap（小地图插件）                | Watermark（水印插件）                |
| TouchEvent（移动端触摸事件支持插件） | NodeImgAdjust（拖拽调整节点图片大小插件） | Search（搜索插件）                   | Painter（节点格式刷插件）            |
| Scrollbar（滚动条插件）              | Formula（数学公式插件）                   | Cooperate（协同编辑插件）            | RainbowLines（彩虹线条插件）         |
| Demonstrate（演示模式插件）          | OuterFrame（外框插件）                    | MindMapLayoutPro（思维导图布局插件） |                                      |
| HandDrawnLikeStyle（手绘风格插件）   | Notation（节点标记插件）                  | Numbers（节点编号插件）[收费]        | Freemind（Freemind格式导入导出插件） |
| Excel（Excel格式导入导出插件）       | Checkbox（待办插件）                      | Lineflow（节点连线流动插件）         | Momentum（动量效果插件）             |
| RightFishbone（向右鱼骨图插件）      | NodeLink（节点链接插件）                  |                                      |                                      |


本项目不会实现的特性：

&gt; 1.自由节点，即多个根节点；
&gt;
&gt; 2.概要节点后面继续添加节点；
&gt;
&gt; 如果你需要以上特性，那么本库可能无法满足你的需求。

# 安装

```bash
npm i simple-mind-map
```

# 使用

提供一个宽高不为 0 的容器元素：

```html
&lt;div id=&quot;mindMapContainer&quot;&gt;&lt;/div&gt;
```

另外再设置一下`css`样式：

```css
#mindMapContainer * {
  margin: 0;
  padding: 0;
}
```

然后创建一个实例：

```js
import MindMap from &quot;simple-mind-map&quot;;

const mindMap = new MindMap({
  el: document.getElementById(&quot;mindMapContainer&quot;),
  data: {
    data: {
      text: &quot;根节点&quot;,
    },
    children: [],
  },
});
```

即可得到一个思维导图。想要实现更多功能？可以查看[开发文档](https://wanglin2.github.io/mind-map-docs/)。

# License

[MIT](./LICENSE)。保留`mind-map`版权声明和注明来源的情况下可随意商用，如有疑问或不想保留可联系作者通过付费的方式去除。

# 微信交流群

微信添加`wanglinguanfang`拉你入群。根据过往的经验，大部分问题都可以通过查看issue列表或文档解决，所以提问前请确保你已经阅读完了所有文档，文档里没有的可在群里提问，不必私聊作者，如果你一定要私聊，请先发红包（￥9.9+每次）。

如果你在杭州，也欢迎来找我面基。

# star

如果喜欢本项目，欢迎点个 star，这对我们很重要。

[![Star History Chart](https://api.star-history.com/svg?repos=wanglin2/mind-map&amp;type=Date)](https://star-history.com/#wanglin2/mind-map&amp;Date)

# 关于定制

如果你有个性化的商用定制需求，可以联系我们，我们提供付费开发服务，无论前端、后端、还是部署，都可以帮你一站式搞定。

# 谁在使用

&lt;table&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;http://drawon.cn/&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/桌案.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;drawon.cn(桌案)&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

# 请作者喝杯咖啡

开源不易，如果本项目有帮助到你的话，可以考虑请作者喝杯咖啡~你的赞助对项目的可持续发展非常重要，是作者持续维护的最大动力。

&gt; 推荐使用支付宝，微信获取不到头像。转账请备注【思维导图】。
&gt;
&gt; 也可以通过购买付费插件来支持我们：[付费插件](https://wanglin2.github.io/mind-map-docs/plugins/about.html)。
&gt;
&gt; 赞助等级：最强王者（￥500+）、星耀赞助（￥300+）、钻石赞助（￥150+）、黄金赞助（￥50+）、青铜赞助

&lt;p&gt;
  &lt;img src=&quot;./web/src/assets/img/alipay.jpg&quot; style=&quot;width: 300px&quot; /&gt;
  &lt;img src=&quot;./web/src/assets/img/wechat.jpg&quot; style=&quot;width: 300px&quot; /&gt;
&lt;/p&gt;

## 最强王者

&lt;table&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/hi.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;hi&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

## 钻石赞助

&lt;table&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/黄智彪@一米一栗科技.png&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;黄智彪@一米一栗科技&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/沨沄.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;沨沄&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

## 黄金赞助

&lt;table&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/小土渣的宇宙.jpeg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;小土渣的宇宙&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Chris.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Chris&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/仓鼠.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;仓鼠&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/风格.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;风格&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/default.png&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;LiuJL&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Kyle.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Kyle&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/秀树因馨雨.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;秀树因馨雨&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/default.png&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;黄泳&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/ccccs.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;ccccs&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/炫.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;炫&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/default.png&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;晏江&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/梁辉.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;梁辉&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/千帆.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;千帆&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/布林.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;布林&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/达仁科技.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;达仁科技&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/沐风牧草.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;沐风牧草&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/俊奇.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;俊奇&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/庆国.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;庆国&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/default.png&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Matt&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/雨馨.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;雨馨&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/峰.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;峰&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/御风.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;御风&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/兔子快跑.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;兔子快跑&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

## 青铜赞助

&lt;table&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Think.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Think&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/志斌.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;志斌&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/qp.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;qp&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/ZXR.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;ZXR&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/花儿朵朵.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;花儿朵朵&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/suka.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;suka&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/水车.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;水车&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/才镇.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;才镇&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/小米.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;小米bbᯤ²ᴳ&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/棐.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;*棐&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./we

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[bluewave-labs/Checkmate]]></title>
            <link>https://github.com/bluewave-labs/Checkmate</link>
            <guid>https://github.com/bluewave-labs/Checkmate</guid>
            <pubDate>Wed, 23 Apr 2025 00:04:58 GMT</pubDate>
            <description><![CDATA[Checkmate is an open-source, self-hosted tool designed to track and monitor server hardware, uptime, response times, and incidents in real-time with beautiful visualizations.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/bluewave-labs/Checkmate">bluewave-labs/Checkmate</a></h1>
            <p>Checkmate is an open-source, self-hosted tool designed to track and monitor server hardware, uptime, response times, and incidents in real-time with beautiful visualizations.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,182</p>
            <p>Forks: 302</p>
            <p>Stars today: 60 stars today</p>
            <h2>README</h2><pre>

&lt;p align=center&gt; &lt;a href=&quot;https://trendshift.io/repositories/12443&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/12443&quot; alt=&quot;bluewave-labs%2Fcheckmate | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
  
![](https://img.shields.io/github/license/bluewave-labs/checkmate)
![](https://img.shields.io/github/repo-size/bluewave-labs/checkmate)
![](https://img.shields.io/github/commit-activity/m/bluewave-labs/checkmate)
![](https://img.shields.io/github/last-commit/bluewave-labs/checkmate)
![](https://img.shields.io/github/languages/top/bluewave-labs/checkmate)
![](https://img.shields.io/github/issues/bluewave-labs/checkmate)
![](https://img.shields.io/github/issues-pr/bluewave-labs/checkmate)
[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/9901/badge)](https://www.bestpractices.dev/projects/9901)


&lt;h1 align=&quot;center&quot;&gt;&lt;a href=&quot;https://bluewavelabs.ca&quot; target=&quot;_blank&quot;&gt;Checkmate&lt;/a&gt;&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;&lt;strong&gt;An open source uptime and infrastructure monitoring application&lt;/strong&gt;&lt;/p&gt;

![dashboard](https://github.com/user-attachments/assets/252d6047-522b-4576-8f14-233510e464b8)

Checkmate is an open source monitoring tool used to track the operational status and performance of servers and websites. It regularly checks whether a server/website is accessible and performs optimally, providing real-time alerts and reports on the monitored services&#039; availability, downtime, and response time. 

Checkmate also has an agent, called [Capture](https://github.com/bluewave-labs/capture), to retrieve data from remote servers. While Capture is not required to run Checkmate, it provides additional insigths about your servers&#039; CPU, RAM, disk and temperature status. 

Checkmate has ben stress tested with 1000+ active monitors without any particular issues or performance bottlenecks.

We **love** what we are building here, and we contibuously learn a few things about Reactjs, Nodejs, MongoDB and Docker while building Checkmate. 

## 📦 Demo

See [Checkmate](https://checkmate-demo.bluewavelabs.ca/) in action. The username is uptimedemo@demo.com and the password is Demouser1! (just a note that we update the demo server from time to time, so if it doesn&#039;t work for you, please ping us on Discussions channel).

## 🔗 User&#039;s guide

Usage instructions can be found [here](https://bluewavelabs.gitbook.io/checkmate). It&#039;s still WIP and some of the information there might be outdated. Rest assured, we are doing our best! :)

## 🛠️ Installation

See installation instructions in [Checkmate documentation portal](https://bluewavelabs.gitbook.io/checkmate/quickstart). Alternatively, you can also use [Coolify](https://coolify.io/) for a one click Docker deployment. If you would like to monitor your server infrastructure, you&#039;ll need [Capture agent](https://github.com/bluewave-labs/capture). Capture repository also contains the installation instructions. 

## 💚 Questions &amp; ideas

If you have any questions, suggestions or comments, please use our [Discord channel](https://discord.gg/NAb6H3UTjK). We&#039;ve also launched our [Discussions](https://github.com/bluewave-labs/bluewave-uptime/discussions) page! Feel free to ask questions or share your ideas—we&#039;d love to hear from you!

## 🧩 Features

- Completely open source, deployable on your servers
- Website monitoring
- Page speed monitoring
- Infrastructure monitoring (memory, disk usage, CPU performance etc) - requires [Capture](https://github.com/bluewave-labs/capture)
- Docker monitoring
- Ping monitoring
- SSL monitoring
- Incidents at a glance
- E-mail notifications
- Scheduled maintenance

**Short term roadmap:**

- Port monitoring (**complete**, waiting to be deployed to stable version) https://github.com/bluewave-labs/Checkmate/issues/1476
- Global (distributed) uptime checking on Solana network (**in progress**) https://github.com/bluewave-labs/Checkmate/issues/1593
- Status pages (**in progress**) https://github.com/bluewave-labs/Checkmate/issues/1131 
- Translations (i18n) (**in progress**)
- Better notification options (Webhooks, Discord, Telegram, Slack) (**in progress**) https://github.com/bluewave-labs/Checkmate/issues/1545
- Command line interface (CLI) (**in progress**) https://github.com/bluewave-labs/Checkmate/issues/1558
- JSON query monitoring https://github.com/bluewave-labs/Checkmate/issues/1573
- Tagging/grouping monitors https://github.com/bluewave-labs/Checkmate/issues/1546
- More configuration options
- DNS monitoring

## 🏗️ Screenshots
&lt;p&gt;
&lt;img width=&quot;2714&quot; alt=&quot;server&quot; src=&quot;https://github.com/user-attachments/assets/f7cb272a-69a6-48c5-93b0-249ecf20ecc6&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;img width=&quot;2714&quot; alt=&quot;uptime&quot; src=&quot;https://github.com/user-attachments/assets/98ddc6c0-3384-47fd-96ce-7e53e6b688ac&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;img width=&quot;2714&quot; alt=&quot;page speed&quot; src=&quot;https://github.com/user-attachments/assets/b5589f79-da30-4239-9846-1f8bb2637ff9&quot; /&gt;
&lt;/p&gt;

## 🏗️ Tech stack

- [ReactJs](https://react.dev/)
- [MUI (React framework)](https://mui.com/)
- [Node.js](https://nodejs.org/en)
- [MongoDB](https://mongodb.com)
- [Recharts](https://recharts.org)
- Lots of other open source components!

## A few links 

- If you would like to support us, please consider giving it a ⭐ and click on &quot;watch&quot;. 
- Have a question or suggestion for the roadmap/featureset? Check our [Discord channel](https://discord.gg/NAb6H3UTjK) or [Discussions](https://github.com/bluewave-labs/checkmate/discussions) forum.
- Need a ping when there&#039;s a new release? Use [Newreleases](https://newreleases.io/), a free service to track releases.
- Watch a Checkmate [installation and usage video](https://www.youtube.com/watch?v=GfFOc0xHIwY)

## 🤝 Contributing

We pride ourselves on building strong connections with contributors at every level. Despite being a young project, Checkmate has already earned 3300 stars and attracted 40+ contributors from around the globe. So, don’t hold back — jump in, contribute and learn with us!

Here&#039;s how you can contribute:

0. Star this repo :)
1. Check [Contributor&#039;s guideline](https://github.com/bluewave-labs/bluewave-uptime/blob/master/CONTRIBUTING.md). First timers are encouraged to check `good-first-issue` tag.
2. Optionally, read [project structure](https://bluewavelabs.gitbook.io/checkmate/developers-guide/general-project-structure) and [high level overview](https://bluewavelabs.gitbook.io/checkmate/developers-guide/high-level-overview).
3. Have a look at our Figma designs [here](https://www.figma.com/design/RPSfaw66HjzSwzntKcgDUV/Uptime-Genie?node-id=0-1&amp;t=WqOFv9jqNTFGItpL-1) if you are going to use one of our designs. We encourage you to copy to your own Figma page, then work on it as it is read-only.
4. Open an issue if you believe you&#039;ve encountered a bug.
5. Check for good-first-issue&#039;s if you are a newcomer.
6. Make a pull request to add new features/make quality-of-life improvements/fix bugs.

&lt;a href=&quot;https://github.com/bluewave-labs/checkmate/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=bluewave-labs/checkmate&quot; /&gt;
&lt;/a&gt;

&lt;!--

![Alt](https://repobeats.axiom.co/api/embed/c35d999c82dbb31e967427ea4166c14da4172e73.svg &quot;Repobeats analytics image&quot;)

--&gt; 

[![Star History Chart](https://api.star-history.com/svg?repos=bluewave-labs/checkmate&amp;type=Date)](https://star-history.com/#bluewave-labs/bluewave-uptime&amp;Date)

Also check other developer and contributor-friendly projects of BlueWave:

- [DataRoom](https://github.com/bluewave-labs/bluewave-dataroom), an secure file sharing application, aka dataroom.
- [BlueWave HRM](https://github.com/bluewave-labs/bluewave-hrm), a complete Human Resource Management platform.
- [Guidefox](https://github.com/bluewave-labs/guidefox), an application that helps new users learn how to use your product via hints, tours, popups and banners.
- [VerifyWise](https://github.com/bluewave-labs/verifywise), the first open source AI governance platform.

![image](https://badges.pufler.dev/visits/bluewave-labs/checkmate) since 14 Jan, 2025
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[leonardomso/33-js-concepts]]></title>
            <link>https://github.com/leonardomso/33-js-concepts</link>
            <guid>https://github.com/leonardomso/33-js-concepts</guid>
            <pubDate>Wed, 23 Apr 2025 00:04:57 GMT</pubDate>
            <description><![CDATA[📜 33 JavaScript concepts every developer should know.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/leonardomso/33-js-concepts">leonardomso/33-js-concepts</a></h1>
            <p>📜 33 JavaScript concepts every developer should know.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 65,072</p>
            <p>Forks: 9,095</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;
&lt;br&gt;
  &lt;a href=&quot;https://github.com/leonardomso/33&quot;&gt;&lt;img src=&quot;https://i.imgur.com/dsHmk6H.jpg&quot; alt=&quot;33 Concepts Every JS Developer Should Know&quot; width=200&quot; /&gt;&lt;/a&gt;
  &lt;br&gt;
    &lt;br&gt;
  33 Concepts Every JavaScript Developer Should Know
  &lt;br&gt;&lt;br&gt;
&lt;/h1&gt;

## Introduction 

This repository was created with the intention of helping developers master their concepts in JavaScript. It is not a requirement, but a guide for future studies. It is based on an article written by Stephen Curtis and you can read it [here](https://medium.com/@stephenthecurt/33-fundamentals-every-javascript-developer-should-know-13dd720a90d1).

**🚀 Considered by GitHub as one of the [top open source projects of 2018!](https://blog.github.com/2018-12-13-new-open-source-projects/)**

## Community

Feel free to submit a PR by adding a link to your own recaps or reviews. If you want to translate the repo into your native language, please feel free to do so.

All the translations for this repo will be listed below:

- [اَلْعَرَبِيَّةُ‎ (Arabic)](https://github.com/amrsekilly/33-js-concepts) — Amr Elsekilly
- [Български (Bulgarian)](https://github.com/thewebmasterp/33-js-concepts) - thewebmasterp
- [汉语 (Chinese)](https://github.com/stephentian/33-js-concepts) — Re Tian
- [Português do Brasil (Brazilian Portuguese)](https://github.com/tiagoboeing/33-js-concepts) — Tiago Boeing
- [한국어 (Korean)](https://github.com/yjs03057/33-js-concepts.git) — Suin Lee
- [Español (Spanish)](https://github.com/adonismendozaperez/33-js-conceptos) — Adonis Mendoza
- [Türkçe (Turkish)](https://github.com/ilker0/33-js-concepts) — İlker Demir
- [русский язык (Russian)](https://github.com/gumennii/33-js-concepts) — Mihail Gumennii
- [Tiếng Việt (Vietnamese)](https://github.com/nguyentranchung/33-js-concepts) — Nguyễn Trần Chung
- [Polski (Polish)](https://github.com/lip3k/33-js-concepts) — Dawid Lipinski
- [فارسی (Persian)](https://github.com/majidalavizadeh/33-js-concepts) — Majid Alavizadeh
- [Bahasa Indonesia (Indonesian)](https://github.com/rijdz/33-js-concepts) — Rijdzuan Sampoerna
- [Français (French)](https://github.com/robinmetral/33-concepts-js) — Robin Métral
- [हिन्दी (Hindi)](https://github.com/vikaschauhan/33-js-concepts) — Vikas Chauhan
- [Ελληνικά (Greek)](https://github.com/DimitrisZx/33-js-concepts) — Dimitris Zarachanis
- [日本語 (Japanese)](https://github.com/oimo23/33-js-concepts) — oimo23
- [Deutsch (German)](https://github.com/burhannn/33-js-concepts) — burhannn
- [украї́нська мо́ва (Ukrainian)](https://github.com/AndrewSavetchuk/33-js-concepts-ukrainian-translation) — Andrew Savetchuk
- [සිංහල (Sinhala)](https://github.com/ududsha/33-js-concepts) — Udaya Shamendra
- [Italiano (Italian)](https://github.com/Donearm/33-js-concepts) — Gianluca Fiore
- [Latviešu (Latvian)](https://github.com/ANormalStick/33-js-concepts) - Jānis Īvāns
- [Afaan Oromoo (Oromo)](https://github.com/Amandagne/33-js-concepts) - Amanuel Dagnachew
- [ภาษาไทย (Thai)](https://github.com/ninearif/33-js-concepts) — Arif Waram
- [Català (Catalan)](https://github.com/marioestradaf/33-js-concepts) — Mario Estrada
- [Svenska (Swedish)](https://github.com/FenixHongell/33-js-concepts/) — Fenix Hongell
- [ខ្មែរ (Khmer)](https://github.com/Chhunneng/33-js-concepts) — Chrea Chanchhunneng
- [አማርኛ (Ethiopian)](https://github.com/hmhard/33-js-concepts) - Miniyahil Kebede(ምንያህል ከበደ)
- [Беларуская мова (Belarussian)](https://github.com/Yafimau/33-js-concepts) — Dzianis Yafimau
- [O&#039;zbekcha (Uzbek)](https://github.com/smnv-shokh/33-js-concepts) — Shokhrukh Usmonov
- [Urdu (اردو)](https://github.com/sudoyasir/33-js-concepts) — Yasir Nawaz
- [Marathi (मराठी)](https://github.com/dhruvchandak30/33-js-concepts) - Dhruv Chandak
- [हिन्दी (Hindi)](https://github.com/milostivyy/33-js-concepts) — Mahima Chauhan
- [বাংলা (Bengali)](https://github.com/Jisan-mia/33-js-concepts) — Jisan Mia
- [ગુજરાતી (Gujarati)](https://github.com/VatsalBhuva11/33-js-concepts) — Vatsal Bhuva
- [سنڌي (Sindhi)](https://github.com/Sunny-unik/33-js-concepts) — Sunny Gandhwani
- [भोजपुरी (Bhojpuri)](https://github.com/debnath003/33-js-concepts) — Pronay Debnath
- [ਪੰਜਾਬੀ (Punjabi)](https://github.com/Harshdev098/33-js-concepts) — Harsh Dev Pathak
- [தமிழ் (Tamil)](https://github.com/Jaimin25/33-js-concepts) - Jaimin Chovatia
- [Latin (Latin)](https://github.com/Harshdev098/33-js-concepts) — Harsh Dev Pathak
- [മലയാളം (Malayalam)](https://github.com/Stark-Akshay/33-js-concepts) — Akshay Manoj
- [Yorùbá (Yoruba)](https://github.com/ayobaj/33-js-concepts) - Ayomide Bajulaye
- [עברית‎ (Hebrew)](https://github.com/rafyzg/33-js-concepts) — Refael Yzgea

---
## &lt;img  align= center width=50px height=50px src=&quot;https://media4.giphy.com/media/3hoLIVAJYkz6T0Ichp/giphy.gif?cid=6c09b952m4j3poopinf91rquev6qy4e8avu0bflq1e0vh4gp&amp;ep=v1_internal_gif_by_id&amp;rid=giphy.gif&amp;ct=s&quot;&gt; &lt;a id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;

1. **[Call Stack](#1-call-stack)**
2. **[Primitive Types](#2-primitive-types)**
3. **[Value Types and Reference Types](#3-value-types-and-reference-types)**
4. **[Implicit, Explicit, Nominal, Structuring and Duck Typing](#4-implicit-explicit-nominal-structuring-and-duck-typing)**
5. **[== vs === vs typeof](#5--vs--vs-typeof)**
6. **[Function Scope, Block Scope and Lexical Scope](#6-function-scope-block-scope-and-lexical-scope)**
7. **[Expression vs Statement](#7-expression-vs-statement)**
8. **[IIFE, Modules and Namespaces](#8-iife-modules-and-namespaces)**
9. **[Message Queue and Event Loop](#9-message-queue-and-event-loop)**
10. **[setTimeout, setInterval and requestAnimationFrame](#10-settimeout-setinterval-and-requestanimationframe)**
11. **[JavaScript Engines](#11-javascript-engines)**
12. **[Bitwise Operators, Type Arrays and Array Buffers](#12-bitwise-operators-type-arrays-and-array-buffers)**
13. **[DOM and Layout Trees](#13-dom-and-layout-trees)**
14. **[Factories and Classes](#14-factories-and-classes)**
15. **[this, call, apply and bind](#15-this-call-apply-and-bind)**
16. **[new, Constructor, instanceof and Instances](#16-new-constructor-instanceof-and-instances)**
17. **[Prototype Inheritance and Prototype Chain](#17-prototype-inheritance-and-prototype-chain)**
18. **[Object.create and Object.assign](#18-objectcreate-and-objectassign)**
19. **[map, reduce, filter](#19-map-reduce-filter)**
20. **[Pure Functions, Side Effects, State Mutation and Event Propagation](#20-pure-functions-side-effects-state-mutation-and-event-propagation)**
21. **[Closures](#21-closures)**
22. **[High Order Functions](#22-high-order-functions)**
23. **[Recursion](#23-recursion)**
24. **[Collections and Generators](#24-collections-and-generators)**
25. **[Promises](#25-promises)**
26. **[async/await](#26-asyncawait)**
27. **[Data Structures](#27-data-structures)**
28. **[Expensive Operation and Big O Notation](#28-expensive-operation-and-big-o-notation)**
29. **[Algorithms](#29-algorithms)**
30. **[Inheritance, Polymorphism and Code Reuse](#30-inheritance-polymorphism-and-code-reuse)**
31. **[Design Patterns](#31-design-patterns)**
32. **[Partial Applications, Currying, Compose and Pipe](#32-partial-applications-currying-compose-and-pipe)**
33. **[Clean Code](#33-clean-code)**

---

## 1. Call Stack

The call stack is a mechanism that the JavaScript interpreter uses to keep track of function execution within a program. In JavaScript, functions are executed in the order they are called. The call stack follows the Last In, First Out (LIFO) principle, meaning that the last function pushed onto the stack is the first one to be executed.

According to the ECMAScript specification, the call stack is defined as part of the execution context. Whenever a function is called, a new execution context is created and placed at the top of the stack. Once the function completes, its execution context is removed from the stack, and control returns to the previous context. This helps manage synchronous code execution, as each function call must complete before the next one can begin.

### Reference

-  [Call Stack — MDN](https://developer.mozilla.org/en-US/docs/Glossary/Call_stack)

### &lt;img  align= center width=40px height=40px src=&quot;https://cdn-icons-png.flaticon.com/512/1945/1945940.png&quot;&gt; Articles

- [Understanding Javascript Call Stack, Event Loops — Gaurav Pandvia](https://medium.com/@gaurav.pandvia/understanding-javascript-function-executions-tasks-event-loop-call-stack-more-part-1-5683dea1f5ec)
- [Understanding the JavaScript Call Stack — Charles Freeborn](https://medium.freecodecamp.org/understanding-the-javascript-call-stack-861e41ae61d4)
-  [Javascript: What Is The Execution Context? What Is The Call Stack? — Valentino Gagliardi](https://medium.com/@valentinog/javascript-what-is-the-execution-context-what-is-the-call-stack-bd23c78f10d1)
-  [What is the JS Event Loop and Call Stack? — Jess Telford](https://gist.github.com/jesstelford/9a35d20a2aa044df8bf241e00d7bc2d0)
-  [Understanding Execution Context and Execution Stack in Javascript — Sukhjinder Arora](https://blog.bitsrc.io/understanding-execution-context-and-execution-stack-in-javascript-1c9ea8642dd0)
-  [How JavaScript Works Under The Hood: An Overview of JavaScript Engine, Heap and, Call Stack — Bipin Rajbhar](https://dev.to/bipinrajbhar/how-javascript-works-under-the-hood-an-overview-of-javascript-engine-heap-and-call-stack-1j5o)
-  [The JS Call stack Explained in 9 minutes](https://www.youtube.com/watch?v=W8AeMrVtFLY) - Colt Steel (YouTube)
-  [Call Stack in JavaScript - Syed Rafsan Raiyan](https://srafsan.hashnode.dev/call-stack-in-javascript)

### &lt;img align=center width=&quot;40&quot; height=&quot;40&quot; src=&quot;https://img.icons8.com/dusk/64/video.png&quot; alt=&quot;video&quot;/&gt;  Videos

- [Javascript: the Call Stack explained — Coding Blocks India](https://www.youtube.com/watch?v=w6QGEiQceOM)
- [The JS Call Stack Explained In 9 Minutes — Colt Steele](https://www.youtube.com/watch?v=W8AeMrVtFLY)
- [What is the Call Stack? — Eric Traub](https://www.youtube.com/watch?v=w7QWQlkLY_s)
- [The Call Stack — Kevin Drumm](https://www.youtube.com/watch?v=Q2sFmqvpBe0)
- [Understanding JavaScript Execution — Codesmith](https://www.youtube.com/watch?v=Z6a1cLyq7Ac&amp;list=PLWrQZnG8l0E4kd1T_nyuVoxQUaYEWFgcD)
- [What the heck is the event loop anyway? — Philip Roberts](https://www.youtube.com/watch?v=8aGhZQkoFbQ)
- [How JavaScript Code is executed? ❤️&amp; Call Stack — Akshay Saini](https://www.youtube.com/watch?v=iLWTnMzWtj4&amp;list=PLlasXeu85E9cQ32gLCvAvr9vNaUccPVNP)
- [Call Stacks - CS50](https://www.youtube.com/watch?v=aCPkszeKRa4)
- [Learn the JavaScript Call Stack - codecupdev](https://www.youtube.com/watch?v=HXqXPGS96rw)
- [JavaScript Functions and the Call Stack | How does the Call stack work - Chidre&#039;sTechTutorials](https://www.youtube.com/watch?v=P6H-T4cUDR4)
    
**[⬆ Back to Top](#table-of-contents)**

---

## 2. Primitive Types
According to the ECMAScript specification, JavaScript has six primitive data types: string, number, bigint, boolean, undefined, and symbol. These types are immutable, meaning their values cannot be altered. There is also a special primitive type called null, which represents the intentional absence of any object value.

Primitive values are directly assigned to a variable, and when you manipulate a primitive type, you&#039;re working directly on the value. Unlike objects, primitives do not have properties or methods, but JavaScript automatically wraps primitive values with object counterparts when necessary (e.g., when calling methods on strings).

### Reference

-  [JavaScript data types and data structures — MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values)

### &lt;img  align= center width=40px height=40px src=&quot;https://cdn-icons-png.flaticon.com/512/1945/1945940.png&quot;&gt; Articles

-  [Primitive and Non-primitive data-types in JavaScript - GeeksforGeeks](https://www.geeksforgeeks.org/primitive-and-non-primitive-data-types-in-javascript)
-  [Javascript variables (Beginner thinking)](https://robiul.dev/javascript-variables-beginner-thinking)
-  [How numbers are encoded in JavaScript — Dr. Axel Rauschmayer](http://2ality.com/2012/04/number-encoding.html)
-  [What You Need to Know About JavaScript Number Type — Max Wizard K](https://indepth.dev/posts/1139/here-is-what-you-need-to-know-about-javascripts-number-type)
-  [What Every JavaScript Developer Should Know About Floating Point Numbers — Chewxy](https://blog.chewxy.com/2014/02/24/what-every-javascript-developer-should-know-about-floating-point-numbers/)
-  [The Secret Life of JavaScript Primitives — Angus Croll](https://javascriptweblog.wordpress.com/2010/09/27/the-secret-life-of-javascript-primitives/)
-  [Primitive Types — Flow](https://flow.org/en/docs/types/primitives/)
-  [(Not) Everything in JavaScript is an Object — Daniel Li](https://dev.to/d4nyll/not-everything-in-javascript-is-an-object)
-  [JavaScript data types and data structures — MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values)
-  [Diving Deeper in JavaScripts Objects — Arfat Salman](https://blog.bitsrc.io/diving-deeper-in-javascripts-objects-318b1e13dc12)
-  [The differences between Object.freeze() vs Const in JavaScript — Bolaji Ayodeji](https://medium.com/@bolajiayodeji/the-differences-between-object-freeze-vs-const-in-javascript-4eacea534d7c)
-  [Object to primitive conversion — JavaScript.info](https://javascript.info/object-toprimitive)
- [Methods of primitives - Javascript.info](https://javascript.info/primitives-methods)

### &lt;img align=center width=&quot;40&quot; height=&quot;40&quot; src=&quot;https://img.icons8.com/dusk/64/video.png&quot; alt=&quot;video&quot;/&gt;  Videos

- [JavaScript Reference vs Primitive Types — Academind](https://www.youtube.com/watch?v=9ooYYRLdg_g)
- [JavaScript Primitive Types — Simon Sez IT](https://www.youtube.com/watch?v=HsbWQsSCE5Y)
- [Value Types and Reference Types in JavaScript — Programming with Mosh](https://www.youtube.com/watch?v=e-_mDyqm2oU)
- [JavaScript Primitive Data Types — Avelx](https://www.youtube.com/watch?v=qw3j0A3DIzQ)
- [Everything you never wanted to know about JavaScript numbers — Bartek Szopka](https://www.youtube.com/watch?v=MqHDDtVYJRI)
- [What are variables in Javascript? — JS For Everyone](https://www.youtube.com/watch?v=B4Bbmei_thw)
- [TIPOS DE DATOS PRIMITIVOS en JAVASCRIPT - La Cocina del Código](https://www.youtube.com/watch?v=cC65D2q5f8I)
- [Data Type in JavaScript - ScholarHat](https://www.youtube.com/watch?v=aFDvBjVjCh8)

**[⬆ Back to Top](#table-of-contents)**

---

## 3. Value Types and Reference Types
According to the ECMAScript specification, value types are stored directly in the location that the variable accesses. These include types like number, string, boolean, undefined, bigint, symbol, and null. When you assign a value type to a variable, the value itself is stored.

### &lt;img  align= center width=40px height=40px src=&quot;https://cdn-icons-png.flaticon.com/512/1945/1945940.png&quot;&gt; Articles

-  [Explaining Value vs. Reference in Javascript — Arnav Aggarwal](https://codeburst.io/explaining-value-vs-reference-in-javascript-647a975e12a0)
-  [Primitive Types &amp; Reference Types in JavaScript — Bran van der Meer](https://gist.github.com/branneman/7fb06d8a74d7e6d4cbcf75c50fec599c)
-  [Value Types, Reference Types and Scope in JavaScript — Ben Aston](https://medium.com/@benastontweet/lesson-1b-javascript-fundamentals-380f601ba851)
-  [Back to roots: JavaScript Value vs Reference — Miro Koczka](https://medium.com/dailyjs/back-to-roots-javascript-value-vs-reference-8fb69d587a18)
-  [Grasp “By Value” and “By Reference” in JavaScript — Léna Faure](https://hackernoon.com/grasp-by-value-and-by-reference-in-javascript-7ed75efa1293)
-  [JavaScript Reference and Copy Variables — Vítor Capretz](https://hackernoon.com/javascript-reference-and-copy-variables-b0103074fdf0)
-  [JavaScript Primitive vs Reference Values](http://www.javascripttutorial.net/javascript-primitive-vs-reference-values/)
-  [JavaScript by Reference vs. by Value — nrabinowitz](https://stackoverflow.com/questions/6605640/javascript-by-reference-vs-by-value)
-  [JavaScript Interview Prep: Primitive vs. Reference Types — Mike Cronin](https://dev.to/mostlyfocusedmike/javascript-interview-prep-primitive-vs-reference-types-3o4f)
-  [forEach method in JavaScript - A Comprehensive Guide](https://robiul.dev/foreach-method-in-javascript-a-comprehensive-guide)
-  [JavaScript map vs. forEach: When to Use Each One - Sajal Soni](https://code.tutsplus.com/tutorials/javascript-map-vs-foreach-when-to-use-each-one--cms-38365)

### &lt;img align=center width=&quot;40&quot; height=&quot;40&quot; src=&quot;https://img.icons8.com/dusk/64/video.png&quot; alt=&quot;video&quot;/&gt;  Videos

- [Javascript Pass by Value vs Pass by Reference — techsith](https://www.youtube.com/watch?v=E-dAnFdq8k8)
- [JavaScript Value vs Reference Types — Programming with Mosh](https://www.youtube.com/watch?v=fD0t_DKREbE)
- [VALORES vs REFERENCIAS en JAVASCRIPT - La Cocina del Código](https://www.youtube.com/watch?v=AvkyOrWkuQc)
- [JavaScript - Reference vs Primitive Values/ Types - Academind](https://www.youtube.com/watch?v=9ooYYRLdg_g)
- [Value Types and Reference Types in JavaScript - Programming with Mosh](https://www.youtube.com/watch?v=e-_mDyqm2oU)

**[⬆ Back to Top](#table-of-contents)**

---

## 4. Implicit, Explicit, Nominal, Structuring and Duck Typing
The ECMAScript specification defines JavaScript as a dynamically typed language, meaning that types are associated with values rather than variables, and type checking occurs at runtime. There are various ways JavaScript manages types:

Implicit Typing (or Type Coercion): This occurs when JavaScript automatically converts one data type to another when required. For instance, JavaScript might convert a string to a number during an arithmetic operation. While this can simplify some code, it can also lead to unexpected results if not handled carefully.

Explicit Typing: Unlike implicit typing, explicit typing involves manually converting a value from one type to another using functions like Number(), String(), or Boolean().

Nominal Typing: JavaScript doesn&#039;t natively support nominal typing, where types are explicitly declared and checked. However, TypeScript, a superset of JavaScript, brings this feature to help catch type errors during development.

Structuring Typing: In this type system, types are based on the structure or properties of the data. JavaScript is a structurally typed language where objects are compatible if they share the same structure (i.e., the same set of properties and methods).

Duck Typing: This is a concept where an object&#039;s suitability is determined by the presence of certain properties and methods, rather than by the actual type of the object. JavaScript relies heavily on duck typing, where behavior is inferred from an object&#039;s properties rather than its declared type.

### &lt;img  align= center width=40px height=40px src=&quot;https://cdn-icons-png.flaticon.com/512/1945/1945940.png&quot;&gt; Articles

-  [What you need to know about Javascript&#039;s Implicit Coercion — Promise Tochi](https://dev.to/promhize/what-you-need-to-know-about-javascripts-implicit-coercion-e23)
-  [JavaScript Type Coercion Explained — Alexey Samoshkin](https://medium.freecodecamp.org/js-type-coercion-explained-27ba3d9a2839)
-  [Javascript Coercion Explained — Ben Garrison](https://hackernoon.com/javascript-coercion-explained-545c895213d3)
-  [What exactly is Type Coercion in Javascript? - Stack Overflow](https://stackoverflow.com/questions/19915688/what-exactly-is-type-coercion-in-javascript)

### &lt;img align=center width=&quot;40&quot; height=&quot;40&quot; src=&quot;https://img.icons8.com/dusk/64/video.png&quot; alt=&quot;video&quot;/&gt;  Videos

- [== ? === ??? ...#@^% - Shirmung Bielefeld](https://www.youtube.com/watch?v=qGyqzN0bjhc&amp;t)
- [Coercion in Javascript - Hitesh Choudhary](https://www.youtube.com/watch?v=b04Q_vyqEG8)
- [JavaScript Questions: What is Coercion? - Steven Hancock](https://www.youtube.com/watch?v=z4-8wMSPJyI)
- [Typing: Static vs Dynamic, Weak vs. Strong - Codexpanse](https://www.youtube.com/wat

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[projectdiscovery/nuclei-templates]]></title>
            <link>https://github.com/projectdiscovery/nuclei-templates</link>
            <guid>https://github.com/projectdiscovery/nuclei-templates</guid>
            <pubDate>Wed, 23 Apr 2025 00:04:56 GMT</pubDate>
            <description><![CDATA[Community curated list of templates for the nuclei engine to find security vulnerabilities.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/projectdiscovery/nuclei-templates">projectdiscovery/nuclei-templates</a></h1>
            <p>Community curated list of templates for the nuclei engine to find security vulnerabilities.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 10,012</p>
            <p>Forks: 2,800</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>

&lt;h1 align=&quot;center&quot;&gt;
Nuclei Templates
&lt;/h1&gt;
&lt;h4 align=&quot;center&quot;&gt;Community curated list of templates for the nuclei engine to find security vulnerabilities in applications.&lt;/h4&gt;


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/projectdiscovery/nuclei-templates&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/pdnuclei&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/pdnuclei.svg?logo=twitter&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://discord.gg/projectdiscovery&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/695645237418131507.svg?logo=discord&quot;&gt;&lt;/a&gt;
&lt;/p&gt;
      
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://nuclei.projectdiscovery.io/templating-guide/&quot;&gt;Documentation&lt;/a&gt; •
  &lt;a href=&quot;#-contributions&quot;&gt;Contributions&lt;/a&gt; •
  &lt;a href=&quot;#-discussion&quot;&gt;Discussion&lt;/a&gt; •
  &lt;a href=&quot;#-community&quot;&gt;Community&lt;/a&gt; •
  &lt;a href=&quot;https://nuclei.projectdiscovery.io/faq/templates/&quot;&gt;FAQs&lt;/a&gt; •
  &lt;a href=&quot;https://discord.gg/projectdiscovery&quot;&gt;Join Discord&lt;/a&gt;
&lt;/p&gt;

----

Templates are the core of the [nuclei scanner](https://github.com/projectdiscovery/nuclei) which powers the actual scanning engine.
This repository stores and houses various templates for the scanner provided by our team, as well as contributed by the community.
We hope that you also contribute by sending templates via **pull requests** or [Github issues](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=submit-template.md&amp;title=%5Bnuclei-template%5D+) to grow the list.


## Nuclei Templates overview


An overview of the nuclei template project, including statistics on unique tags, author, directory, severity, and type of templates. The table below contains the top ten statistics for each matrix; an expanded version of this is [available here](TEMPLATES-STATS.md), and also available in [JSON](TEMPLATES-STATS.json) format for integration.

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt; 

## Nuclei Templates Top 10 statistics

|    TAG    | COUNT |    AUTHOR     | COUNT | DIRECTORY  | COUNT | SEVERITY | COUNT | TYPE | COUNT |
|-----------|-------|---------------|-------|------------|-------|----------|-------|------|-------|
| cve       |  3055 | dhiyaneshdk   |  1811 | http       |  8547 | info     |  4048 | file |   434 |
| panel     |  1284 | daffainfo     |   868 | file       |   434 | high     |  2283 | dns  |    25 |
| xss       |  1228 | dwisiswant0   |   805 | cloud      |   420 | medium   |  2152 |      |       |
| wordpress |  1129 | ritikchaddha  |   581 | dast       |   255 | critical |  1277 |      |       |
| exposure  |  1075 | princechaddha |   571 | workflows  |   192 | low      |   302 |      |       |
| wp-plugin |   988 | pussycat0x    |   489 | code       |   167 | unknown  |    51 |      |       |
| osint     |   807 | pikpikcu      |   352 | network    |   139 |          |       |      |       |
| tech      |   768 | pdteam        |   304 | javascript |    70 |          |       |      |       |
| lfi       |   757 | ricardomaia   |   249 | ssl        |    36 |          |       |      |       |
| misconfig |   729 | geeknik       |   235 | dns        |    22 |          |       |      |       |

**799 directories, 10630 files**.

&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

📖 Documentation
-----

Please navigate to https://nuclei.projectdiscovery.io for detailed documentation to **build** new or your own **custom** templates.
We have also added a set of templates to help you understand how things work.

💪 Contributions
-----

Nuclei-templates is powered by major contributions from the community.
[Template contributions ](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=submit-template.md&amp;title=%5Bnuclei-template%5D+), [Feature Requests](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=feature_request.md&amp;title=%5BFeature%5D+) and [Bug Reports](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=bug_report.md&amp;title=%5BBug%5D+) are more than welcome.

![Alt](https://repobeats.axiom.co/api/embed/55ee65543bb9a0f9c797626c4e66d472a517d17c.svg &quot;Repobeats analytics image&quot;)

💬 Discussion
-----

Have questions / doubts / ideas to discuss?
Feel free to open a discussion on [Github discussions](https://github.com/projectdiscovery/nuclei-templates/discussions) board.

👨‍💻 Community
-----

You are welcome to join the active [Discord Community](https://discord.gg/projectdiscovery) to discuss directly with project maintainers and share things with others around security and automation.
Additionally, you may follow us on [Twitter](https://twitter.com/pdnuclei) to be updated on all the things about Nuclei.


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=projectdiscovery/nuclei-templates&amp;max=300&quot;&gt;
&lt;/a&gt;
&lt;/p&gt;


Thanks again for your contribution and keeping this community vibrant. :heart:
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[CesiumGS/cesium]]></title>
            <link>https://github.com/CesiumGS/cesium</link>
            <guid>https://github.com/CesiumGS/cesium</guid>
            <pubDate>Wed, 23 Apr 2025 00:04:55 GMT</pubDate>
            <description><![CDATA[An open-source JavaScript library for world-class 3D globes and maps 🌎]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/CesiumGS/cesium">CesiumGS/cesium</a></h1>
            <p>An open-source JavaScript library for world-class 3D globes and maps 🌎</p>
            <p>Language: JavaScript</p>
            <p>Stars: 13,591</p>
            <p>Forks: 3,584</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre># CesiumJS

[![Build Status](https://github.com/CesiumGS/cesium/actions/workflows/dev.yml/badge.svg)](https://github.com/CesiumGS/cesium/actions/workflows/dev.yml)
[![npm](https://img.shields.io/npm/v/cesium)](https://www.npmjs.com/package/cesium)
[![Docs](https://img.shields.io/badge/docs-online-orange.svg)](https://cesium.com/learn/)

![Cesium](https://github.com/CesiumGS/cesium/wiki/logos/Cesium_Logo_Color.jpg)

CesiumJS is a JavaScript library for creating 3D globes and 2D maps in a web browser without a plugin. It uses WebGL for hardware-accelerated graphics, and is cross-platform, cross-browser, and tuned for dynamic-data visualization.

Built on open formats, CesiumJS is designed for robust interoperability and scaling for massive datasets.

---

[**Examples**](https://sandcastle.cesium.com/) :earth_asia: [**Docs**](https://cesium.com/learn/cesiumjs-learn/) :earth_americas: [**Website**](https://cesium.com/cesiumjs) :earth_africa: [**Forum**](https://community.cesium.com/) :earth_asia: [**User Stories**](https://cesium.com/user-stories/)

---

## :rocket: Get started

Visit the [Downloads page](https://cesium.com/downloads/) to download a pre-built copy of CesiumJS.

### npm &amp; yarn

If you’re building your application using a module bundler such as Webpack, Parcel, or Rollup, you can install CesiumJS via the [`cesium` npm package](https://www.npmjs.com/package/cesium):

```sh
npm install cesium --save
```

Then, import CesiumJS in your app code. Import individual modules to benefit from tree shaking optimizations through most build tools:

```js
import { Viewer } from &quot;cesium&quot;;
import &quot;cesium/Build/Cesium/Widgets/widgets.css&quot;;

const viewer = new Viewer(&quot;cesiumContainer&quot;);
```

In addition to the `cesium` package, CesiumJS is also [distributed as scoped npm packages for better dependency management](https://cesium.com/blog/2022/12/07/modular-structure-in-cesiumjs/):

- [`@cesium/engine`](./packages/engine/README.md) - CesiumJS&#039;s core, rendering, and data APIs
- [`@cesium/widgets`](./packages/widgets/README.md) - A widgets library for use with CesiumJS

### What next?

See our [Quickstart Guide](https://cesium.com/learn/cesiumjs-learn/cesiumjs-quickstart/) for more information on getting a CesiumJS app up and running.

Instructions for serving local data are in the CesiumJS
[Offline Guide](./Documentation/OfflineGuide/README.md).

Interested in contributing? See [CONTRIBUTING.md](CONTRIBUTING.md). :heart:

## :green_book: License

[Apache 2.0](http://www.apache.org/licenses/LICENSE-2.0.html). CesiumJS is free for both commercial and non-commercial use.

## :earth_americas: Where does the Global 3D Content come from?

The Cesium platform follows an [open-core business model](https://cesium.com/why-cesium/open-ecosystem/cesium-business-model/) with open source runtime engines such as CesiumJS and optional commercial subscription to Cesium ion.

CesiumJS can stream [3D content such as terrain, imagery, and 3D Tiles from the commercial Cesium ion platform](https://cesium.com/platform/cesium-ion/content/) alongside open standards from other offline or online services. We provide Cesium ion as the quickest option for all users to get up and running, but you are free to use any combination of content sources with CesiumJS that you please.

Bring your own data for tiling, hosting, and streaming from Cesium ion. [Using Cesium ion](https://cesium.com/ion/signup/) helps support CesiumJS development.

## :white_check_mark: Features

- Stream in 3D Tiles and other standard formats from Cesium ion or another source
- Visualize and analyze on a high-precision WGS84 globe
- Share with users on desktop or mobile

See more in the [CesiumJS Features Checklist](https://github.com/CesiumGS/cesium/wiki/CesiumJS-Features-Checklist).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[shaka-project/shaka-player]]></title>
            <link>https://github.com/shaka-project/shaka-player</link>
            <guid>https://github.com/shaka-project/shaka-player</guid>
            <pubDate>Wed, 23 Apr 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[JavaScript player library / DASH & HLS client / MSE-EME player]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/shaka-project/shaka-player">shaka-project/shaka-player</a></h1>
            <p>JavaScript player library / DASH & HLS client / MSE-EME player</p>
            <p>Language: JavaScript</p>
            <p>Stars: 7,462</p>
            <p>Forks: 1,379</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre># ![Shaka Player](docs/shaka-player-logo.png)

Shaka Player is an open-source JavaScript library for adaptive media.  It plays
adaptive media formats (such as [DASH][], [HLS][] and [MSS][]) in a browser,
without using plugins or Flash.  Instead, Shaka Player uses the open web
standards [MediaSource Extensions][] and [Encrypted Media Extensions][].

Shaka Player also supports [offline storage and playback][] of media using
[IndexedDB][].  Content can be stored on any browser.  Storage of licenses
depends on browser support.

Our main goal is to make it as easy as possible to stream adaptive bitrate
video and audio using modern browser technologies. We try to keep the library
light, simple, and free from third-party dependencies. Everything you need to
build and deploy is in the sources.

For details on what&#039;s coming next, see our [development roadmap](roadmap.md).

[DASH]: http://dashif.org/
[HLS]: https://developer.apple.com/streaming/
[MSS]: https://learn.microsoft.com/en-us/iis/media/smooth-streaming/smooth-streaming-transport-protocol
[MediaSource Extensions]: https://www.w3.org/TR/media-source/
[Encrypted Media Extensions]: https://www.w3.org/TR/encrypted-media/
[IndexedDB]: https://www.w3.org/TR/IndexedDB-2/
[offline storage and playback]: https://shaka-player-demo.appspot.com/docs/api/tutorial-offline.html


## Maintained branches

See [maintained-branches.md](https://github.com/shaka-project/shaka-player/blob/main/maintained-branches.md)
for the up-to-date list of maintained branches of Shaka Player.


## Platform and browser support matrix

|Browser       |Windows   |Mac      |Linux    |Android  |iOS &gt;= 9  |iOS &gt;= 17.1|iPadOS &gt;= 13|ChromeOS|Other|
|:------------:|:--------:|:-------:|:-------:|:-------:|:--------:|:---------:|:----------:|:------:|:---:|
|Chrome        |**Y**     |**Y**    |**Y**    |**Y**    |**Native**|**Native** |**Native**  |**Y**   | -   |
|Firefox       |**Y**     |**Y**    |**Y**    |untested⁵|**Native**|**Native** |**Native**  | -      | -   |
|Edge          |**Y**     | -       | -       | -       | -        | -         | -          | -      | -   |
|Edge Chromium |**Y**     |**Y**    |**Y**    |untested⁵|**Native**|**Native** |**Native**  | -      | -   |
|IE            | N        | -       | -       | -       | -        | -         | -          | -      | -   |
|Safari        | -        |**Y**    | -       | -       |**Native**|**Y**      |**Y**       | -      | -   |
|Opera         |**Y**     |**Y**    |**Y**    |untested⁵|**Native**| -         | -          | -      | -   |
|Chromecast²   | -        | -       | -       | -       | -        | -         | -          | -      |**Y**|
|Tizen TV³     | -        | -       | -       | -       | -        | -         | -          | -      |**Y**|
|WebOS⁶        | -        | -       | -       | -       | -        | -         | -          | -      |**Y**|
|Hisense⁷      | -        | -       | -       | -       | -        | -         | -          | -      |**Y**|
|Vizio⁷        | -        | -       | -       | -       | -        | -         | -          | -      |**Y**|
|Xbox One      | -        | -       | -       | -       | -        | -         | -          | -      |**Y**|
|Playstation 4⁷| -        | -       | -       | -       | -        | -         | -          | -      |**Y**|
|Playstation 5⁷| -        | -       | -       | -       | -        | -         | -          | -      |**Y**|

NOTES:
 - ²: The latest stable Chromecast firmware is tested. Both sender and receiver
   can be implemented with Shaka Player.
 - ³: Tizen 2017 model is actively tested and supported by the Shaka Player
   team. Tizen 2016 model is community-supported and untested by us.
 - ⁵: These are expected to work, but are not actively tested by the Shaka
   Player team.
 - ⁶: These are expected to work, but are community-supported and untested by
   us.
     - Official support for LG WebOS TV:
       https://github.com/shaka-project/shaka-player/issues/1330
 - ⁷: These are expected to work, but are community-supported and untested by
   us.

NOTES for iOS and iPadOS:
 - We support iOS 9+ through Apple&#039;s native HLS player.  We provide the same
   top-level API, but we just set the video&#039;s `src` element to the manifest/media.
   So we are dependent on the browser supporting the manifests.
 - Since iPadOS 13 [MediaSource Extensions][] is supported
 - Since iPadOS 17 and iOS 17.1 [ManagedMediaSource Extensions][] is supported

[ManagedMediaSource Extensions]: https://www.w3.org/TR/media-source-2/#dom-managedmediasource

## Manifest format support matrix

|Format|Video On-Demand|Live |Event|In-Progress Recording|
|:----:|:-------------:|:---:|:---:|:-------------------:|
|DASH  |**Y**          |**Y**| -   |**Y**                |
|HLS   |**Y**          |**Y**|**Y**| -                   |
|MSS   |**Y**          | -   | -   | -                   |

You can also create a [manifest parser plugin][] to support custom manifest
formats.

[manifest parser plugin]: https://shaka-player-demo.appspot.com/docs/api/tutorial-manifest-parser.html


## DASH features

DASH features supported:
 - VOD, Live, and In-Progress Recordings (dynamic VOD content)
 - MPD@timeShiftBufferDepth for seeking backward in Live streams
 - Multi-period content (static and dynamic)
 - Xlink elements (actuate=onLoad only, resolve-to-zero, fallback content)
 - All forms of segment index info: SegmentBase@indexRange, SegmentTimeline,
   SegmentTemplate@duration, SegmentTemplate@index, SegmentList
 - Multi-codec/multi-container manifests (we will negotiate support with the
   browser and choose the best ones)
 - Encrypted content (including custom ContentProtection schemas, PSSH in the
   manifest)
 - Key rotation
 - Trick mode tracks
 - WebVTT and TTML
 - CEA-608/708 captions
 - Multi-codec variants (on platforms with changeType support)
 - MPD chaining
 - MPD Patch updates for SegmentTemplate with $Number$, SegmentTimeline with
   $Number$ and SegmentTimeline with $Time$

DASH features **not** supported:
 - Xlink with actuate=onRequest
 - Manifests without any segment info:
   https://github.com/shaka-project/shaka-player/issues/1088
 - Multiple trick mode tracks for the same resolution at varying framerates or
   bitrates
 - Timescales so large that timestamps cannot be represented as integers in
   JavaScript (2^53): https://github.com/shaka-project/shaka-player/issues/1667
 - Modifying elements with an @schemeIdUri attribute via MPD Patch
 - Xlink dereferencing with MPD Patch


## HLS features

HLS features supported:
 - VOD, Live, and Event types
 - Low-latency streaming with partial segments, preload hints, delta updates and
   blocking playlist reload
 - Discontinuity
 - ISO-BMFF / MP4 / CMAF support
 - MPEG-2 TS support
 - WebVTT and TTML
 - CEA-608/708 captions
 - Encrypted content with PlayReady, Widevine and WisePlay
 - Encrypted content with FairPlay (Safari on macOS and iOS only)
 - AES-128, AES-256 and AES-256-CTR support on browsers with Web Crypto API support
 - SAMPLE-AES and SAMPLE-AES-CTR (identity) support on browsers with ClearKey support
 - Key rotation
 - Raw AAC, MP3, AC-3 and EC-3 (without an MP4 container)
 - I-frame-only playlists (for trick play and thumbnails)
 - #EXT-X-IMAGE-STREAM-INF for thumbnails
 - Interstitials
 - Container change during the playback (eg: MP4 to TS, or AAC to TS)

HLS features **not** supported:
 - X-SNAP attribute in interstitials

&lt;details&gt;
&lt;summary&gt;
&lt;h3&gt;Supported HLS tags&lt;/h3&gt;
&lt;/summary&gt;

For details on the HLS format and these tags&#039; meanings, see https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis

&lt;h4&gt; Multivariant Playlist tags&lt;/h4&gt;

- `#EXT-X-STREAM-INF:&lt;attribute-list&gt;`
  `&lt;URI&gt;`
- `#EXT-X-MEDIA:&lt;attribute-list&gt;`
- `#EXT-X-IMAGE-STREAM-INF:&lt;attribute-list&gt;`
- `#EXT-X-I-FRAME-STREAM-INF:&lt;attribute-list&gt;`
- `#EXT-X-SESSION-DATA:&lt;attribute-list&gt;`
- `#EXT-X-SESSION-KEY:&lt;attribute-list&gt;` EME Key-System selection and preloading
- `#EXT-X-START:TIME-OFFSET=&lt;n&gt;`
- `#EXT-X-CONTENT-STEERING:&lt;attribute-list&gt;` Content Steering
- `#EXT-X-DEFINE:&lt;attribute-list&gt;` Variable Substitution (`NAME,VALUE,QUERYPARAM` attributes)

&lt;h4&gt;Media Playlist tags&lt;/h4&gt;

- `#EXTM3U`
- `#EXTINF:&lt;duration&gt;,[&lt;title&gt;]`
- `#EXT-X-PLAYLIST-TYPE:&lt;type`
- `#EXT-X-ENDLIST`
- `#EXT-X-MEDIA-SEQUENCE=&lt;n&gt;`
- `#EXT-X-TARGETDURATION=&lt;n&gt;`
- `#EXT-X-DISCONTINUITY`
- `#EXT-X-DISCONTINUITY-SEQUENCE=&lt;n&gt;`
- `#EXT-X-BYTERANGE=&lt;n&gt;[@&lt;o&gt;]`
- `#EXT-X-MAP:&lt;attribute-list&gt;`
- `#EXT-X-KEY:&lt;attribute-list&gt;` (`KEYFORMAT=&quot;identity&quot;,METHOD=SAMPLE-AES` is only supports with MP4 segments)
- `#EXT-X-PROGRAM-DATE-TIME:&lt;attribute-list&gt;`
- `#EXT-X-START:TIME-OFFSET=&lt;n&gt;`
- `#EXT-X-SERVER-CONTROL:&lt;attribute-list&gt;`
- `#EXT-X-PART-INF:PART-TARGET=&lt;n&gt;`
- `#EXT-X-PART:&lt;attribute-list&gt;`
- `#EXT-X-SKIP:&lt;attribute-list&gt;` Delta Playlists
- `#EXT-X-DATERANGE:&lt;attribute-list&gt;` Metadata
- `#EXT-X-DEFINE:&lt;attribute-list&gt;` Variable Import and Substitution (`NAME,VALUE,IMPORT,QUERYPARAM` attributes)
- `#EXT-X-GAP`
- `#EXT-X-PRELOAD-HINT:&lt;attribute-list&gt;`
- `#EXT-X-BITRATE`

&lt;/details&gt;


## MPEG-5 Part2 LCEVC Support

**Only supported on browsers with Media Source Extensions SourceBuffer support**

 - MPEG-5 Part2 LCEVC decoding support (decoding provided by [lcevc_dec.js][], must be
   separately included)

 - Integration documentation : [docs](docs/design/current/lcevc-integration.md)

 - More on [MPEG-5 Part2 LCEVC][]

[lcevc_dec.js]: https://www.npmjs.com/package/lcevc_dec.js
[MPEG-5 Part2 LCEVC]: https://www.lcevc.org


## MSS features

MSS features supported:
 - VOD
 - AAC and H.264
 - Encrypted content (PlayReady)
 - TTML/DFXP
 - Only supported with [codem-isoboxer][]

MSS features **not** supported:
 - Live

[codem-isoboxer]: https://github.com/Dash-Industry-Forum/codem-isoboxer

## DRM support matrix

|Browser       |Widevine  |PlayReady|FairPlay |WisePlay |ClearKey⁶ |
|:------------:|:--------:|:-------:|:-------:|:-------:|:--------:|
|Chrome¹       |**Y**     | -       | -       | -       |**Y**     |
|Firefox²      |**Y**     | -       | -       | -       |**Y**     |
|Edge³         | -        |**Y**    | -       | -       | -        |
|Edge Chromium |**Y**     |**Y**    | -       | -       |**Y**     |
|Safari        | -        | -       |**Y**    | -       | -        |
|Opera         |**Y**     | -       | -       | -       |**Y**     |
|Chromecast    |**Y**     |**Y**    | -       | -       |**Y**     |
|Tizen TV      |**Y**     |**Y**    | -       | -       |**Y**     |
|WebOS⁷        |untested⁷ |untested⁷| -       | -       |untested⁷ |
|Hisense⁷      |untested⁷ |untested⁷| -       | -       |untested⁷ |
|Vizio⁷        |untested⁷ |untested⁷| -       | -       |untested⁷ |
|Xbox One      | -        |**Y**    | -       | -       | -        |
|Playstation 4⁷| -        |untested⁷| -       | -       |untested⁷ |
|Playstation 5⁷| -        |untested⁷| -       | -       |untested⁷ |
|Huawei⁷       | -        | -       | -       |untested⁷|untested⁷ |

Other DRM systems should work out of the box if they are interoperable and
compliant to the EME spec.

NOTES:
 - ¹: Only official Chrome builds contain the Widevine CDM.  Chromium built from
   source does not support DRM.
 - ²: DRM must be enabled by the user.  The first time a Firefox user visits a
   site with encrypted media, the user will be prompted to enable DRM.
 - ³: PlayReady in Edge does not seem to work on a VM or over Remote Desktop.
 - ⁶: ClearKey is a useful tool for debugging, and does not provide actual
   content security.
 - ⁷: These are expected to work, but are community-supported and untested by
   us.

|Manifest  |Widevine  |PlayReady|FairPlay |WisePlay |ClearKey  |
|:--------:|:--------:|:-------:|:-------:|:-------:|:--------:|
|DASH      |**Y**     |**Y**    |**Y**    |**Y**    |**Y**     |
|HLS       |**Y**     |**Y**    |**Y** ¹  |**Y**    |**Y**     |
|MSS       | -        |**Y**    | -       | -       | -        |

NOTES:
 - ¹: By default, FairPlay is handled using Apple&#039;s native HLS player, when on
   Safari. We do support FairPlay through MSE/EME, however. See the
   `streaming.useNativeHlsForFairPlay` configuration value.


## Media container and subtitle support

Shaka Player supports:
  - ISO-BMFF / CMAF / MP4
    - Depends on browser support for the container via MediaSource
    - Can parse &quot;sidx&quot; box for DASH&#039;s SegmentBase@indexRange and
      SegmentTemplate@index
    - Can find and parse &quot;tfdt&quot; box to find segment start time in HLS
    - For MSS, [codem-isoboxer][] v0.3.7+ is required
  - WebM
    - Depends on browser support for the container via MediaSource
    - Can parse [cueing data][] elements for DASH&#039;s SegmentBase@indexRange and
      SegmentTemplate@index
    - Not supported in HLS
  - MPEG-2 TS
    - Can be played on any browser which supports MP4
    - Can find and parse timestamps to find segment start time in HLS
  - WebVTT
    - Supported in both text form and embedded in MP4
  - TTML
    - Supported in both XML form and embedded in MP4
  - CEA-608
    - Supported embedded in MP4 and TS
  - CEA-708
    - Supported embedded in MP4 and TS
  - Raw AAC
    - Supported in raw AAC container and transmuxing to AAC in MP4 container
      (depends on browser support via MediaSource).
  - Raw MP3
    - Supported in raw MP3 container and transmuxing to MP3 in MP4 container
      (depends on browser support via MediaSource).
  - Raw AC-3
    - Supported in raw AC-3 container and transmuxing to AC-3 in MP4 container
      (depends on browser support via MediaSource).
  - Raw EC-3
    - Supported in raw EC-3 container and transmuxing to EC-3 in MP4 container
      (depends on browser support via MediaSource).
  - SubRip (SRT)
    - UTF-8 encoding only
  - LyRiCs (LRC)
    - UTF-8 encoding only
  - SubStation Alpha (SSA, ASS)
    - UTF-8 encoding only
  - SubViewer (SBV)
    - UTF-8 encoding only

Subtitles are rendered by the browser by default. Applications can create a
[text display plugin][] for customer rendering to go beyond browser-supported
attributes.

[cueing data]: https://www.webmproject.org/docs/container/#cueing-data
[text display plugin]: https://nightly-dot-shaka-player-demo.appspot.com/docs/api/shaka.extern.TextDisplayer.html
&lt;!-- TODO: replace with a link to a TextDisplayer tutorial --&gt;


## Transmuxer support

Shaka Player supports:
  - Raw AAC to AAC in MP4
  - Raw MP3 to MP3 in MP4
  - Raw AC-3 to AC-3 in MP4
  - Raw EC-3 to EC-3 in MP4
  - AAC in MPEG-2 TS to AAC in MP4
  - AC-3 in MPEG-2 TS to AC-3 in MP4
  - EC-3 in MPEG-2 TS to EC-3 in MP4
  - MP3 in MPEG-2 TS to MP3 in MP4
  - MP3 in MPEG-2 TS to raw MP3
  - Opus in MPEG-2 TS to MP3 in MP4
  - H.264 in MPEG-2 TS to H.264 in MP4
  - H.265 in MPEG-2 TS to H.265 in MP4
  - Muxed content in MPEG-2 TS with the previous codecs


## Thumbnails support

Shaka Player supports:
  - Internal DASH thumbnails. Using DASH-IF IOP Image Adaptation Set
  - Internal HLS thumbnails. Using HLS Image Media Playlist
  - Internal HLS thumbnails. Using I-frame-only playlists with mjpg codec
  - External WebVTT with images/sprites (only for VoD)


## Monetization with Ads

Shaka Player supports:
- IMA SDK for Client-Side Ad Insertion
- IMA DAI SDK for Server-Side Ad Insertion
- AWS MediaTailor for Client-Side
- AWS MediaTailor for Server-Side
- AWS MediaTailor overlays
- HLS interstitials
- DASH Media Presentation Insertion (MPD alternate)
- Custom Interstitials
- Basic support of VAST and VMAP without IMA (playback without tracking)


## Content Steering support
Shaka Player supports Content Steering (v1) in DASH and HLS.

Content Steering features supported:
- TTL, if missing, the default value is 300 seconds.
- RELOAD-URI, if missing we use the url provided in the manifest as fallback.
- PATHWAY-PRIORITY only HOST replacement

Content Steering features **not** supported:
- PATHWAY-CLONES other replacements than HOST.


## VR support
Shaka Player supports VR when:
- Content is automatically treated as VR if it fits the following criteria:
  - HLS or DASH manifest
  - fMP4 segments
  - Init segment contains `prji` and `hfov` boxes
- Or, if it is manually enabled via the UI config.

VR modes supported:
- Equirectangular projection with 360 degrees of horizontal field of view.
- Half equirectangular projection with 180 degrees of horizontal field of view.
- Cubemap projection with 360 degrees of horizontal field of view.


NOTES:
  - VR is only supported for clear streams or HLS-AES stream. DRM prevents
    access to the video pixels for transformation.


## Builds

Shaka currently provides the following versions:
- Complete build with UI (`shaka-player.ui.js`)
- Complete build without UI (`shaka-player.compiled.js`)
- DASH build without UI, Cast and Offline (`shaka-player.dash.js`)
- HLS build without UI, Cast and Offline (`shaka-player.hls.js`)


## Documentation &amp; Important Links ##

 * [Demo](https://shaka-player-demo.appspot.com)([sources](demo/))
 * [Nightly Demo](https://nightly-dot-shaka-player-demo.appspot.com)
 * [Demo index](https://index-dot-shaka-player-demo.appspot.com)
 * [API documentation](https://shaka-player-demo.appspot.com/docs/api/index.html)
 * [Tutorials](https://shaka-player-demo.appspot.com/docs/api/tutorial-welcome.html)
 * [Hosted builds on Google Hosted Libraries](https://developers.google.com/speed/libraries/#shaka-player)
 * [Hosted builds on jsDelivr](https://www.jsdelivr.com/package/npm/shaka-player)
 * [Development roadmap](roadmap.md)
 * Subscribe to releases by following
     [instructions from this blog](https://www.jessesquires.com/blog/2020/07/30/github-tip-watching-releases/)


## FAQ ##

For general help and before filing any bugs, please read the
[FAQ](docs/tutorials/faq.md).


## Contributing ##

If you have improvements or fixes, we would love to have your contributions.
Please read [CONTRIBUTING.md](CONTRIBUTING.md)
for more information on the process we would like contributors to follow.


## Framework Integrations ##

The Shaka team doesn&#039;t have the bandwidth and experience to provide guidance and
support for integrating Shaka Player with specific frameworks, but some of our
users have successfully done so and created tutorials to help other beginners.

Shaka + ReactJS Library
- https://github.com/winoffrg/limeplay

Shaka + ReactJS integrations:
- https://github.com/matvp91/shaka-player-react
- https://github.com/amit08255/shaka-player-react-with-ui-config

Shaka + Next.js integration:
- https://github.com/amit08255/shaka-player-react-with-ui-config/tree/master/nextjs-shaka-player

Shaka + Vue.js integrations:
- https://github.com/davidjamesherzog/shaka-player-vuejs

Shaka + Nuxt.js integration:
- https://github.com/davidjamesherzog/shaka-player-nuxtjs

Shaka + video.js integration:
- https://github.com/davidjamesherzog/videojs-shaka

Shaka + Angular integration:
- https://github.com/PatrickKalkman/shaka-player-angular

If you have published Shaka Integration code/tutorials, please feel free to submit PRs
to add them to this list, we will gladly approve!
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[typescript-cheatsheets/react]]></title>
            <link>https://github.com/typescript-cheatsheets/react</link>
            <guid>https://github.com/typescript-cheatsheets/react</guid>
            <pubDate>Wed, 23 Apr 2025 00:04:53 GMT</pubDate>
            <description><![CDATA[Cheatsheets for experienced React developers getting started with TypeScript]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/typescript-cheatsheets/react">typescript-cheatsheets/react</a></h1>
            <p>Cheatsheets for experienced React developers getting started with TypeScript</p>
            <p>Language: JavaScript</p>
            <p>Stars: 46,172</p>
            <p>Forks: 4,192</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre># React TypeScript Cheatsheet

Cheatsheet for using React with TypeScript.

---

&lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/81&quot;&gt;
  &lt;img
    height=&quot;90&quot;
    width=&quot;90&quot;
    alt=&quot;react + ts logo&quot;
    src=&quot;https://user-images.githubusercontent.com/84442212/194379444-02e5ec69-5e6c-4100-bd7a-c31d628af29c.png&quot;
    align=&quot;left&quot;
  /&gt;
&lt;/a&gt;

[**Web docs**](https://react-typescript-cheatsheet.netlify.app/docs/basic/setup) |
[Contribute!](https://github.com/typescript-cheatsheets/react/blob/main/CONTRIBUTING.md) |
[Ask!](https://github.com/typescript-cheatsheets/react/issues/new/choose)

:wave: This repo is maintained by [@eps1lon](https://twitter.com/sebsilbermann) and [@filiptammergard](https://twitter.com/tammergard). We&#039;re so happy you want to try out React with TypeScript! If you see anything wrong or missing, please [file an issue](https://github.com/typescript-cheatsheets/react/issues/new/choose)! :+1:

---

[![All Contributors](https://img.shields.io/github/contributors/typescript-cheatsheets/react-typescript-cheatsheet?color=orange&amp;style=flat-square)](/CONTRIBUTORS.md) | [![Discord](https://img.shields.io/discord/508357248330760243.svg?label=&amp;logo=discord&amp;logoColor=ffffff&amp;color=7389D8&amp;labelColor=6A7EC2)](https://discord.gg/wTGS5z9)

- [The Basic Cheatsheet](https://react-typescript-cheatsheet.netlify.app/docs/basic/setup) is focused on helping React devs just start using TS in React **apps**
  - Focus on opinionated best practices, copy+pastable examples.
  - Explains some basic TS types usage and setup along the way.
  - Answers the most Frequently Asked Questions.
  - Does not cover generic type logic in detail. Instead we prefer to teach simple troubleshooting techniques for newbies.
  - The goal is to get effective with TS without learning _too much_ TS.
- [The Advanced Cheatsheet](https://react-typescript-cheatsheet.netlify.app/docs/advanced) helps show and explain advanced usage of generic types for people writing reusable type utilities/functions/render prop/higher order components and TS+React **libraries**.
  - It also has miscellaneous tips and tricks for pro users.
  - Advice for contributing to DefinitelyTyped.
  - The goal is to take _full advantage_ of TypeScript.
- [The Migrating Cheatsheet](https://react-typescript-cheatsheet.netlify.app/docs/migration) helps collate advice for incrementally migrating large codebases from JS or Flow, **from people who have done it**.
  - We do not try to convince people to switch, only to help people who have already decided.
  - ⚠️This is a new cheatsheet, all assistance is welcome.
- [The HOC Cheatsheet](https://react-typescript-cheatsheet.netlify.app/docs/hoc) specifically teaches people to write HOCs with examples.
  - Familiarity with [Generics](https://www.typescriptlang.org/docs/handbook/2/generics.html) is necessary.
  - ⚠️This is the newest cheatsheet, all assistance is welcome.

---

## Basic Cheatsheet

### Basic Cheatsheet Table of Contents

&lt;details&gt;

&lt;summary&gt;&lt;b&gt;Expand Table of Contents&lt;/b&gt;&lt;/summary&gt;

- [React TypeScript Cheatsheet](#react-typescript-cheatsheet)
  - [Basic Cheatsheet](#basic-cheatsheet)
    - [Basic Cheatsheet Table of Contents](#basic-cheatsheet-table-of-contents)
    - [Section 1: Setup](#section-1-setup)
      - [Prerequisites](#prerequisites)
      - [React and TypeScript starter kits](#react-and-typescript-starter-kits)
      - [Try React and TypeScript online](#try-react-and-typescript-online)
    - [Section 2: Getting Started](#section-2-getting-started)
      - [Function Components](#function-components)
      - [Hooks](#hooks)
      - [useState](#usestate)
      - [useCallback](#usecallback)
      - [useReducer](#usereducer)
      - [useEffect / useLayoutEffect](#useeffect--uselayouteffect)
      - [useRef](#useref)
        - [Option 1: DOM element ref](#option-1-dom-element-ref)
        - [Option 2: Mutable value ref](#option-2-mutable-value-ref)
        - [See also](#see-also)
      - [useImperativeHandle](#useimperativehandle)
        - [See also:](#see-also-1)
      - [Custom Hooks](#custom-hooks)
      - [More Hooks + TypeScript reading:](#more-hooks--typescript-reading)
      - [Example React Hooks + TypeScript Libraries:](#example-react-hooks--typescript-libraries)
      - [Class Components](#class-components)
      - [Typing getDerivedStateFromProps](#typing-getderivedstatefromprops)
      - [You May Not Need `defaultProps`](#you-may-not-need-defaultprops)
      - [Typing `defaultProps`](#typing-defaultprops)
      - [Consuming Props of a Component with defaultProps](#consuming-props-of-a-component-with-defaultprops)
        - [Problem Statement](#problem-statement)
        - [Solution](#solution)
      - [Misc Discussions and Knowledge](#misc-discussions-and-knowledge)
      - [Typing Component Props](#typing-component-props)
      - [Basic Prop Types Examples](#basic-prop-types-examples)
        - [`object` as the non-primitive type](#object-as-the-non-primitive-type)
        - [Empty interface, `{}` and `Object`](#empty-interface--and-object)
      - [Useful React Prop Type Examples](#useful-react-prop-type-examples)
      - [Types or Interfaces?](#types-or-interfaces)
        - [TL;DR](#tldr)
        - [More Advice](#more-advice)
        - [Useful table for Types vs Interfaces](#useful-table-for-types-vs-interfaces)
  - [getDerivedStateFromProps](#getderivedstatefromprops)
    - [Forms and Events](#forms-and-events)
      - [List of event types](#list-of-event-types)
    - [Context](#context)
    - [Basic example](#basic-example)
    - [Without default context value](#without-default-context-value)
      - [Type assertion as an alternative](#type-assertion-as-an-alternative)
    - [forwardRef/createRef](#forwardrefcreateref)
    - [Generic forwardRefs](#generic-forwardrefs)
      - [Option 1 - Wrapper component](#option-1---wrapper-component)
      - [Option 2 - Redeclare forwardRef](#option-2---redeclare-forwardref)
      - [Option 3 - Call signature](#option-3---call-signature)
    - [More Info](#more-info)
    - [Portals](#portals)
    - [Error Boundaries](#error-boundaries)
      - [Option 1: Using react-error-boundary](#option-1-using-react-error-boundary)
      - [Option 2: Writing your custom error boundary component](#option-2-writing-your-custom-error-boundary-component)
    - [Concurrent React/React Suspense](#concurrent-reactreact-suspense)
    - [Troubleshooting Handbook: Types](#troubleshooting-handbook-types)
      - [Union Types and Type Guarding](#union-types-and-type-guarding)
      - [Optional Types](#optional-types)
      - [Enum Types](#enum-types)
      - [Type Assertion](#type-assertion)
      - [Simulating Nominal Types](#simulating-nominal-types)
      - [Intersection Types](#intersection-types)
      - [Union Types](#union-types)
      - [Overloading Function Types](#overloading-function-types)
      - [Using Inferred Types](#using-inferred-types)
      - [Using Partial Types](#using-partial-types)
      - [The Types I need weren&#039;t exported!](#the-types-i-need-werent-exported)
      - [The Types I need don&#039;t exist!](#the-types-i-need-dont-exist)
        - [Slapping `any` on everything](#slapping-any-on-everything)
        - [Autogenerate types](#autogenerate-types)
        - [Typing Exported Hooks](#typing-exported-hooks)
        - [Typing Exported Components](#typing-exported-components)
      - [Frequent Known Problems with TypeScript](#frequent-known-problems-with-typescript)
        - [TypeScript doesn&#039;t narrow after an object element null check](#typescript-doesnt-narrow-after-an-object-element-null-check)
        - [TypeScript doesn&#039;t let you restrict the type of children](#typescript-doesnt-let-you-restrict-the-type-of-children)
    - [Troubleshooting Handbook: Operators](#troubleshooting-handbook-operators)
    - [Troubleshooting Handbook: Utilities](#troubleshooting-handbook-utilities)
    - [Troubleshooting Handbook: tsconfig.json](#troubleshooting-handbook-tsconfigjson)
    - [Troubleshooting Handbook: Fixing bugs in official typings](#troubleshooting-handbook-fixing-bugs-in-official-typings)
    - [Troubleshooting Handbook: Globals, Images and other non-TS files](#troubleshooting-handbook-globals-images-and-other-non-ts-files)
    - [Editor Tooling and Integration](#editor-tooling-and-integration)
    - [Linting](#linting)
    - [Other React + TypeScript resources](#other-react--typescript-resources)
    - [Recommended React + TypeScript talks](#recommended-react--typescript-talks)
    - [Time to Really Learn TypeScript](#time-to-really-learn-typescript)
    - [Example App](#example-app)
  - [My question isn&#039;t answered here!](#my-question-isnt-answered-here)
  - [Contributors](#contributors)

&lt;/details&gt;

&lt;!--START-SECTION:setup--&gt;

### Section 1: Setup

#### Prerequisites

You can use this cheatsheet for reference at any skill level, but basic understanding of React and TypeScript is assumed. Here is a list of prerequisites:

- Basic understanding of [React](https://react.dev/).
- Familiarity with [TypeScript Basics](https://www.typescriptlang.org/docs/handbook/2/basic-types.html) and [Everyday Types](https://www.typescriptlang.org/docs/handbook/2/everyday-types.html).

In the cheatsheet we assume you are using the latest versions of React and TypeScript.

#### React and TypeScript starter kits

React has documentation for [how to start a new React project](https://react.dev/learn/start-a-new-react-project) with some of the most popular frameworks. Here&#039;s how to start them with TypeScript:

- [Next.js](https://nextjs.org/docs/basic-features/typescript): `npx create-next-app@latest --ts`
- [Remix](https://remix.run/docs/tutorials/blog): `npx create-remix@latest`
- [Gatsby](https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/): `npm init gatsby --ts`
- [Expo](https://docs.expo.dev/guides/typescript/): `npx create-expo-app -t with-typescript`

#### Try React and TypeScript online

There are some tools that let you run React and TypeScript online, which can be helpful for debugging or making sharable reproductions.

- [TypeScript playground](https://www.typescriptlang.org/play?target=8&amp;jsx=4#code/JYWwDg9gTgLgBAbzgVwM4FMDKMCGN0A0KGAogGZnoDG8AvnGVBCHAORTo42sDcAsAChB6AB6RYcKhAB2qeAGEIyafihwAvHAAUASg0A+RILiSZcuAG0pymEQwxFNgLobiWXPi0AGHfyECTNHRyShotXQMjAJM4ABMIKmQQdBUAOhhgGAAbdFcAAwBNJUks4CoAa3RYuAASBGsVegzk1Dy-E1pfQWM4DhhkKGltHpMAHn0RmNGwfSLkErLK6vqlRrhm9FRRgHoZybGAI2QYGBk4GXlSivUECPVDe0cVLQb4AGo4AEYdWgnomJil0WcGS+zgOyOJxkfwBOxhcC6AlogiAA)
- [StackBlitz](https://stackblitz.com/fork/react-ts)
- [CodeSandbox](https://ts.react.new/)

&lt;!--END-SECTION:setup--&gt;

### Section 2: Getting Started

&lt;!--START-SECTION:function-components--&gt;

#### Function Components

These can be written as normal functions that take a `props` argument and return a JSX element.

```tsx
// Declaring type of props - see &quot;Typing Component Props&quot; for more examples
type AppProps = {
  message: string;
}; /* use `interface` if exporting so that consumers can extend */

// Easiest way to declare a Function Component; return type is inferred.
const App = ({ message }: AppProps) =&gt; &lt;div&gt;{message}&lt;/div&gt;;

// You can choose to annotate the return type so an error is raised if you accidentally return some other type
const App = ({ message }: AppProps): React.JSX.Element =&gt; &lt;div&gt;{message}&lt;/div&gt;;

// You can also inline the type declaration; eliminates naming the prop types, but looks repetitive
const App = ({ message }: { message: string }) =&gt; &lt;div&gt;{message}&lt;/div&gt;;

// Alternatively, you can use `React.FunctionComponent` (or `React.FC`), if you prefer.
// With latest React types and TypeScript 5.1. it&#039;s mostly a stylistic choice, otherwise discouraged.
const App: React.FunctionComponent&lt;{ message: string }&gt; = ({ message }) =&gt; (
  &lt;div&gt;{message}&lt;/div&gt;
);
// or
const App: React.FC&lt;AppProps&gt; = ({ message }) =&gt; &lt;div&gt;{message}&lt;/div&gt;;
```

&gt; Tip: You might use [Paul Shen&#039;s VS Code Extension](https://marketplace.visualstudio.com/items?itemName=paulshen.paul-typescript-toolkit) to automate the type destructure declaration (incl a [keyboard shortcut](https://twitter.com/_paulshen/status/1392915279466745857?s=20)).

&lt;details&gt;

&lt;summary&gt;&lt;b&gt;Why is &lt;code&gt;React.FC&lt;/code&gt; not needed? What about &lt;code&gt;React.FunctionComponent&lt;/code&gt;/&lt;code&gt;React.VoidFunctionComponent&lt;/code&gt;?&lt;/b&gt;&lt;/summary&gt;

You may see this in many React+TypeScript codebases:

```tsx
const App: React.FunctionComponent&lt;{ message: string }&gt; = ({ message }) =&gt; (
  &lt;div&gt;{message}&lt;/div&gt;
);
```

However, the general consensus today is that `React.FunctionComponent` (or the shorthand `React.FC`) is not needed. If you&#039;re still using React 17 or TypeScript lower than 5.1, it is even [discouraged](https://github.com/facebook/create-react-app/pull/8177). This is a nuanced opinion of course, but if you agree and want to remove `React.FC` from your codebase, you can use [this jscodeshift codemod](https://github.com/gndelia/codemod-replace-react-fc-typescript).

Some differences from the &quot;normal function&quot; version:

- `React.FunctionComponent` is explicit about the return type, while the normal function version is implicit (or else needs additional annotation).

- It provides typechecking and autocomplete for static properties like `displayName`, `propTypes`, and `defaultProps`.

  - Note that there are some known issues using `defaultProps` with `React.FunctionComponent`. See [this issue for details](https://github.com/typescript-cheatsheets/react/issues/87). We maintain a separate `defaultProps` section you can also look up.

- Before the [React 18 type updates](https://github.com/DefinitelyTyped/DefinitelyTyped/pull/56210), `React.FunctionComponent` provided an implicit definition of `children` (see below), which was heavily debated and is one of the reasons [`React.FC` was removed from the Create React App TypeScript template](https://github.com/facebook/create-react-app/pull/8177).

```tsx
// before React 18 types
const Title: React.FunctionComponent&lt;{ title: string }&gt; = ({
  children,
  title,
}) =&gt; &lt;div title={title}&gt;{children}&lt;/div&gt;;
```

&lt;details&gt;
&lt;summary&gt;(Deprecated)&lt;b&gt;Using &lt;code&gt;React.VoidFunctionComponent&lt;/code&gt; or &lt;code&gt;React.VFC&lt;/code&gt; instead&lt;/b&gt;&lt;/summary&gt;

In [@types/react 16.9.48](https://github.com/DefinitelyTyped/DefinitelyTyped/pull/46643), the `React.VoidFunctionComponent` or `React.VFC` type was added for typing `children` explicitly.
However, please be aware that `React.VFC` and `React.VoidFunctionComponent` were deprecated in React 18 (https://github.com/DefinitelyTyped/DefinitelyTyped/pull/59882), so this interim solution is no longer necessary or recommended in React 18+.

Please use regular function components or `React.FC` instead.

```ts
type Props = { foo: string };

// OK now, in future, error
const FunctionComponent: React.FunctionComponent&lt;Props&gt; = ({
  foo,
  children,
}: Props) =&gt; {
  return (
    &lt;div&gt;
      {foo} {children}
    &lt;/div&gt;
  ); // OK
};

// Error now, in future, deprecated
const VoidFunctionComponent: React.VoidFunctionComponent&lt;Props&gt; = ({
  foo,
  children,
}) =&gt; {
  return (
    &lt;div&gt;
      {foo}
      {children}
    &lt;/div&gt;
  );
};
```

&lt;/details&gt;

- _In the future_, it may automatically mark props as `readonly`, though that&#039;s a moot point if the props object is destructured in the parameter list.

In most cases it makes very little difference which syntax is used, but you may prefer the more explicit nature of `React.FunctionComponent`.

&lt;/details&gt;

&lt;!--END-SECTION:function-components--&gt;

&lt;!--START-SECTION:hooks--&gt;

#### Hooks

Hooks are [supported in `@types/react` from v16.8 up](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/a05cc538a42243c632f054e42eab483ebf1560ab/types/react/index.d.ts#L800-L1031).

#### useState

Type inference works very well for simple values:

```tsx
const [state, setState] = useState(false);
// `state` is inferred to be a boolean
// `setState` only takes booleans
```

See also the [Using Inferred Types](https://react-typescript-cheatsheet.netlify.app/docs/basic/troubleshooting/types/#using-inferred-types) section if you need to use a complex type that you&#039;ve relied on inference for.

However, many hooks are initialized with null-ish default values, and you may wonder how to provide types. Explicitly declare the type, and use a union type:

```tsx
const [user, setUser] = useState&lt;User | null&gt;(null);

// later...
setUser(newUser);
```

You can also use type assertions if a state is initialized soon after setup and always has a value after:

```tsx
const [user, setUser] = useState&lt;User&gt;({} as User);

// later...
setUser(newUser);
```

This temporarily &quot;lies&quot; to the TypeScript compiler that `{}` is of type `User`. You should follow up by setting the `user` state — if you don&#039;t, the rest of your code may rely on the fact that `user` is of type `User` and that may lead to runtime errors.

#### useCallback

You can type the `useCallback` just like any other function.

```ts
const memoizedCallback = useCallback(
  (param1: string, param2: number) =&gt; {
    console.log(param1, param2)
    return { ok: true }
  },
  [...],
);
/**
 * VSCode will show the following type:
 * const memoizedCallback:
 *  (param1: string, param2: number) =&gt; { ok: boolean }
 */
```

Note that for React &lt; 18, the function signature of `useCallback` typed arguments as `any[]` by default:

```ts
function useCallback&lt;T extends (...args: any[]) =&gt; any&gt;(
  callback: T,
  deps: DependencyList
): T;
```

In React &gt;= 18, the function signature of `useCallback` changed to the following:

```ts
function useCallback&lt;T extends Function&gt;(callback: T, deps: DependencyList): T;
```

Therefore, the following code will yield &quot;`Parameter &#039;e&#039; implicitly has an &#039;any&#039; type.`&quot; error in React &gt;= 18, but not &lt;17.

```ts
// @ts-expect-error Parameter &#039;e&#039; implicitly has &#039;any&#039; type.
useCallback((e) =&gt; {}, []);
// Explicit &#039;any&#039; type.
useCallback((e: any) =&gt; {}, []);
```

#### useReducer

You can use [Discriminated Unions](https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes-func.html#discriminated-unions) for reducer actions. Don&#039;t forget to define the return type of reducer, otherwise TypeScript will infer it.

```tsx
import { useReducer } from &quot;react&quot;;

const initialState = { count: 0 };

type ACTIONTYPE =
  | { type: &quot;increment&quot;; payload: number }
  | { type: &quot;decrement&quot;; payload: string };

function reducer(state: typeof initialState, action: ACTIONTYPE) {
  switch (action.type) {
    case &quot;increment&quot;:
      return { count: state.count + action.payload };
    case &quot;decrement&quot;:
      return { count: state.count - Number(action.payload) };
    default:
      throw new Error();
  }
}

function Counter() {
  const [state, dispatch] = useReducer(reducer, initialState);
  return (
    &lt;&gt;
      Count: {state.count}
      &lt;button onClick={() =&gt; dispatch({ type: &quot;decrement&quot;, payload: &quot;5&quot; })}&gt;
        -
      &lt;/button&gt;
      &lt;button onClick={() =&gt; dispatch({ type: &quot;increment&quot;, payload: 5 })}&gt;
        +
      &lt;/button&gt;
    &lt;/&gt;
  );
}
```

[View in the TypeScript Playground](https://www.typescriptlang.org/play?#code/LAKFEsFsAcHsCcAuACAVMghgZ2QJQKYYDGKAZvLJMgOTyEnUDcooRsAdliuO+IuBgA2AZUQZE+ZAF5kAbzYBXdogBcyAAwBfZmBCIAntEkBBAMIAVAJIB5AHLmAmgAUAotOShkyAD5zkBozVqHiI6SHxlagAaZGgMfUFYDAATNXYFSAAjfHhNDxAvX1l-Q3wg5PxQ-HDImLiEpNTkLngeAHM8ll1SJRJwDmQ6ZIUiHIAKLnEykqNYUmQePgERMQkY4n4ONTMrO0dXAEo5T2aAdz4iAAtkMY3+9gA6APwj2ROvImxJYPYqmsRqCp3l5BvhEAp4Ow5IplGpJhIHjCUABqTB9DgPeqJFLaYGfLDfCp-CIAoEFEFeOjgyHQ2BKVTNVb4RF05TIAC0yFsGWy8Fu6MeWMaB1x5K8FVIGAUglUwK8iEuFFOyHY+GVLngFD5Bx0Xk0oH13V6myhplZEm1x3JbE4KAA2vD8DFkuAsHFEFcALruAgbB4KAkEYajPlDEY5GKLfhCURTHUnKkQqFjYEAHgAfHLkGb6WpZI6WfTDRSvKnMgpEIgBhxTIJwEQANZSWRjI5SdPIF1u8RXMayZ7lSphEnRWLxbFNagAVmomhF6fZqYA9OXKxxM2KQWWK1WoTW643m63pB2u+7e-3SkEQsPamOGik1FO55p08jl6vdxuKcvv8h4yAmhAA)

&lt;details&gt;

&lt;summary&gt;&lt;b&gt;Usage with &lt;code&gt;Reducer&lt;/code&gt; from &lt;code&gt;redux&lt;/code&gt;&lt;/b&gt;&lt;/summary&gt;

In case you use the [redux](https://github.com/reduxjs/redux) library to write reducer function, It provides a convenient helper o

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mailcow/mailcow-dockerized]]></title>
            <link>https://github.com/mailcow/mailcow-dockerized</link>
            <guid>https://github.com/mailcow/mailcow-dockerized</guid>
            <pubDate>Wed, 23 Apr 2025 00:04:52 GMT</pubDate>
            <description><![CDATA[mailcow: dockerized - 🐮 + 🐋 = 💕]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mailcow/mailcow-dockerized">mailcow/mailcow-dockerized</a></h1>
            <p>mailcow: dockerized - 🐮 + 🐋 = 💕</p>
            <p>Language: JavaScript</p>
            <p>Stars: 10,120</p>
            <p>Forks: 1,308</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre># mailcow: dockerized - 🐮 + 🐋 = 💕

[![Translation status](https://translate.mailcow.email/widgets/mailcow-dockerized/-/translation/svg-badge.svg)](https://translate.mailcow.email/engage/mailcow-dockerized/)
[![Twitter URL](https://img.shields.io/twitter/url/https/twitter.com/mailcow_email.svg?style=social&amp;label=Follow%20%40mailcow_email)](https://twitter.com/mailcow_email)
![Mastodon Follow](https://img.shields.io/mastodon/follow/109388212176073348?domain=https%3A%2F%2Fmailcow.social&amp;label=Follow%20%40doncow%40mailcow.social&amp;link=https%3A%2F%2Fmailcow.social%2F%40doncow)


## Want to support mailcow?

Please [consider a support contract with Servercow](https://www.servercow.de/mailcow?lang=en#support) to support further development. _We_ support _you_ while _you_ support _us_. :)

You can also [get a SAL](https://www.servercow.de/mailcow?lang=en#sal) which is a one-time payment with no liabilities or returning fees.

Or just spread the word: moo.

## Many thanks to our GitHub Sponsors ❤️
A big thank you to everyone supporting us on GitHub Sponsors—your contributions mean the world to us! Special thanks to the following amazing supporters:

### 100$/Month Sponsors
  &lt;a href=&quot;https://www.colba.net/&quot; target=_blank&gt;&lt;img
    src=&quot;https://avatars.githubusercontent.com/u/204464723&quot; height=&quot;58&quot;
  /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.maehdros.com/&quot; target=_blank&gt;&lt;img
    src=&quot;https://avatars.githubusercontent.com/u/173894712&quot; height=&quot;58&quot;
  /&gt;&lt;/a&gt;

### 50$/Month Sponsors
  &lt;a href=&quot;https://github.com/vnukhr&quot; target=_blank&gt;&lt;img
    src=&quot;https://avatars.githubusercontent.com/u/7805987?s=52&amp;v=4&quot; height=&quot;58&quot;
  /&gt;&lt;/a&gt;

## Info, documentation and support

Please see [the official documentation](https://docs.mailcow.email/) for installation and support instructions. 🐄

🐛 **If you found a critical security issue, please mail us to [info at servercow.de](mailto:info@servercow.de).**

## Cowmunity

[mailcow community](https://community.mailcow.email)

[Telegram mailcow channel](https://telegram.me/mailcow)

[Telegram mailcow Off-Topic channel](https://t.me/mailcowOfftopic)

[Official 𝕏 (Twitter) Account](https://twitter.com/mailcow_email)

[Official Mastodon Account](https://mailcow.social/@doncow)

Telegram desktop clients are available for [multiple platforms](https://desktop.telegram.org). You can search the groups history for keywords.

## Misc

**Important**: mailcow makes use of various open-source software. Please assure you agree with their license before using mailcow.
Any part of mailcow itself is released under **GNU General Public License, Version 3**.

mailcow is a registered word mark of The Infrastructure Company GmbH, Parkstr. 42, 47877 Willich, Germany.

The project is managed and maintained by The Infrastructure Company GmbH.

Originated from @andryyy (André)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[sudheerj/reactjs-interview-questions]]></title>
            <link>https://github.com/sudheerj/reactjs-interview-questions</link>
            <guid>https://github.com/sudheerj/reactjs-interview-questions</guid>
            <pubDate>Wed, 23 Apr 2025 00:04:51 GMT</pubDate>
            <description><![CDATA[List of top 500 ReactJS Interview Questions & Answers....Coding exercise questions are coming soon!!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/sudheerj/reactjs-interview-questions">sudheerj/reactjs-interview-questions</a></h1>
            <p>List of top 500 ReactJS Interview Questions & Answers....Coding exercise questions are coming soon!!</p>
            <p>Language: JavaScript</p>
            <p>Stars: 41,819</p>
            <p>Forks: 9,839</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre># React Interview Questions &amp; Answers

&gt; Click :star: if you like the project. Pull Requests are highly appreciated. Follow me [@SudheerJonna](https://twitter.com/SudheerJonna) for technical updates.

---

&lt;div&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.greatfrontend.com/questions/react?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=sudheerj-react&amp;gnrs=sudheerj&quot;&gt;
    &lt;img src=&quot;./images/collab/greatfrontend-banner4x.png&quot; alt=&quot;GreatFrontEnd React Interview Questions&quot; width=&quot;100%&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;

&gt; 💡 Nail React interviews with questions and solutions from ex-interviewers! [Try GreatFrontEnd →](https://www.greatfrontend.com/questions/react?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=sudheerj-react&amp;gnrs=sudheerj) 💡

---

&lt;div&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.frontendlead.com/coding-questions?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=sudheerj-react&quot; rel=&quot;dofollow&quot;&gt;
    &lt;img src=&quot;./images/collab/frontendlead-banner.png&quot; alt=&quot;React interview&quot; width=&quot;100%&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;

&gt; 🚀 Ace React interview questions with solutions from FAANG+ companies! [Try FrontendLead →](https://www.frontendlead.com/coding-questions?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=sudheerj-react) 🚀

---

&lt;div&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://zerotomastery.io/?utm_source=github&amp;utm_medium=sponsor&amp;utm_campaign=reactjs-interview-questions&quot;&gt;
    &lt;img src=&quot;https://process.fs.teachablecdn.com/ADNupMnWyR7kCWRvm76Laz/resize=height:70/https://www.filepicker.io/api/file/AKYtjj5SSGyJuyZrkAB2&quot; alt=&quot;ZTM Logo&quot; width=&quot;100&quot; height=&quot;50&quot;&gt;
  &lt;/a&gt;
    &lt;ol&gt;
      &lt;li&gt;I recommend this &lt;a href=&quot;https://links.zerotomastery.io/react_sudheer&quot;&gt;React course&lt;/a&gt; if you’re serious about learning React and want to go beyond the basics.&lt;/li&gt;
      &lt;li&gt;Want to ace your coding interview and get hired at your dream company? &lt;a href=&quot;http://links.zerotomastery.io/mci_sudheer&quot;&gt;Take this coding interview bootcamp&lt;/a&gt;.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/p&gt;
&lt;/div&gt;

---

**Note:** This repository is specific to ReactJS. Please check [JavaScript Interview Questions](https://github.com/sudheerj/javascript-interview-questions) for core JavaScript questions and [Data Structures and Algorithms](https://github.com/sudheerj/datastructures-algorithms) for DSA-related questions or problems.

### Table of Contents

&lt;details open&gt;
&lt;summary&gt;
Hide/Show table of contents
&lt;/summary&gt;

| No. | Questions                                                                                                                                                                                                                        |
| --- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
|     | **Core React**                                                                                                                                                                                                                   |
| 1   | [What is React?](#what-is-react)                                                                                                                                                                                                 |
| 2   | [What is the history behind React’s evolution?](#what-is-the-history-behind-react-evolution)                                                                                                                                      |
| 3   | [What are the major features of React?](#what-are-the-major-features-of-react)                                                                                                                                                   |
| 4   | [What is JSX?](#what-is-jsx)                                                                                                                                                                                                     |
| 5   | [What is the difference between an Element and a Component?](#what-is-the-difference-between-element-and-component)                                                                                                              |
| 6   | [How do you create components in React?](#how-to-create-components-in-react)                                                                                                                                                     |
| 7   | [When should you use a Class Component over a Function Component?](#when-to-use-a-class-component-over-a-function-component)                                                                                                    |
| 8   | [What are Pure Components?](#what-are-pure-components)                                                                                                                                                                           |
| 9   | [What is state in React?](#what-is-state-in-react)                                                                                                                                                                               |
| 10  | [What are props in React?](#what-are-props-in-react)                                                                                                                                                                             |
| 11  | [What is the difference between state and props?](#what-is-the-difference-between-state-and-props)                                                                                                                               |
| 12  | [What is the difference between HTML and React event handling?](#what-is-the-difference-between-html-and-react-event-handling)                                                                                                   |
| 13  | [What are synthetic events in React?](#what-are-synthetic-events-in-react)                                                                                                                                                       |
| 14  | [What are inline conditional expressions?](#what-are-inline-conditional-expressions)                                                                                                                                             |
| 15  | [What is the &quot;key&quot; prop and what is its benefit when used in arrays of elements?](#what-is-key-prop-and-what-is-the-benefit-of-using-it-in-arrays-of-elements)                                                                    |
| 16  | [What is the Virtual DOM?](#what-is-virtual-dom)                                                                                                                                                                                 |
| 17  | [How does the Virtual DOM work?](#how-virtual-dom-works)                                                                                                                                                                         |
| 18  | [What is the difference between Shadow DOM and Virtual DOM?](#what-is-the-difference-between-shadow-dom-and-virtual-dom)                                                                                                         |
| 19  | [What is React Fiber?](#what-is-react-fiber)                                                                                                                                                                                     |
| 20  | [What is the main goal of React Fiber?](#what-is-the-main-goal-of-react-fiber)                                                                                                                                                   |
| 21  | [What are controlled components?](#what-are-controlled-components)                                                                                                                                                               |
| 22  | [What are uncontrolled components?](#what-are-uncontrolled-components)                                                                                                                                                           |
| 23  | [What is the difference between createElement and cloneElement?](#what-is-the-difference-between-createelement-and-cloneelement)                                                                                                 |
| 24  | [What is Lifting State Up in React?](#what-is-lifting-state-up-in-react)                                                                                                                                                         |
| 25  | [What are Higher-Order Components?](#what-are-higher-order-components)                                                                                                                                                           |
| 26  | [What is the children prop?](#what-is-children-prop)                                                                                                                                                                             |
| 27  | [How do you write comments in React?](#how-to-write-comments-in-react)                                                                                                                                                           |
| 28  | [What is reconciliation?](#what-is-reconciliation)                                                                                                                                                                               |
| 29  | [Does the lazy function support named exports?](#does-the-lazy-function-support-named-exports)                                                                                                                                   |
| 30  | [Why does React use className instead of the class attribute?](#why-react-uses-classname-over-class-attribute)                                                                                                                   |
| 31  | [What are Fragments?](#what-are-fragments)                                                                                                                                                                                       |
| 32  | [Why are Fragments better than container divs?](#why-fragments-are-better-than-container-divs)                                                                                                                                   |
| 33  | [What are portals in React?](#what-are-portals-in-react)                                                                                                                                                                         |
| 34  | [What are stateless components?](#what-are-stateless-components)                                                                                                                                                                 |
| 35  | [What are stateful components?](#what-are-stateful-components)                                                                                                                                                                   |
| 36  | [How do you apply validation to props in React?](#how-to-apply-validation-on-props-in-react)                                                                                                                                     |
| 37  | [What are the advantages of React?](#what-are-the-advantages-of-react)                                                                                                                                                           |
| 38  | [What are the limitations of React?](#what-are-the-limitations-of-react)                                                                                                                                                         |
| 39  | [What are the recommended ways for static type checking?](#what-are-the-recommended-ways-for-static-type-checking)                                                                                                               |
| 40  | [What is the use of the react-dom package?](#what-is-the-use-of-react-dom-package)                                                                                                                                               |
| 41  | [What is ReactDOMServer?](#what-is-reactdomserver)                                                                                                                                                                               |
| 42  | [How do you use innerHTML in React?](#how-to-use-innerhtml-in-react)                                                                                                                                                             |
| 43  | [How do you apply styles in React?](#how-to-use-styles-in-react)                                                                                                                                                                 |
| 44  | [How are events different in React?](#how-events-are-different-in-react)                                                                                                                                                         |
| 45  | [What is the impact of using indexes as keys?](#what-is-the-impact-of-indexes-as-keys)                                                                                                                                          |
| 46  | [How do you conditionally render components?](#how-do-you-conditionally-render-components)                                                                                                                                       |
| 47  | [Why do we need to be careful when spreading props on DOM elements?](#why-we-need-to-be-careful-when-spreading-props-on-dom-elements)                                                                                             |
| 48  | [How do you memoize a component?](#how-do-you-memoize-a-component)                                                                                                                                                               |
| 49  | [How do you implement Server-Side Rendering (SSR)?](#how-you-implement-server-side-rendering-or-ssr)                                                                                                                              |
| 50  | [How do you enable production mode in React?](#how-to-enable-production-mode-in-react)                                                                                                                                           |
| 51  | [Do Hooks replace render props and higher-order components?](#do-hooks-replace-render-props-and-higher-order-components)                                                                                                         |
| 52  | [What is a switching component?](#what-is-a-switching-component)                                                                                                                                                                 |
| 53  | [What are React Mixins?](#what-are-react-mixins)                                                                                                                                                                                 |
| 54  | [What are the pointer events supported in React?](#what-are-the-pointer-events-supported-in-react)                                                                                                                               |
| 55  | [Why should component names start with a capital letter?](#why-should-component-names-start-with-capital-letter)                                                                                                                  |
| 56  | [Are custom DOM attributes supported in React v16?](#are-custom-dom-attributes-supported-in-react-v16)                                                                                                                           |
| 57  | [How do you loop inside JSX?](#how-to-loop-inside-jsx)                                                                                                                                                                           |
| 58  | [How do you access props within attribute quotes?](#how-do-you-access-props-in-attribute-quotes)                                                                                                                                 |
| 59  | [What is a React PropType array with shape?](#what-is-react-proptype-array-with-shape)                                                                                                                                           |
| 60  | [How do you conditionally apply class attributes?](#how-to-conditionally-apply-class-attributes)                                                                                                                                 |
| 61  | [What is the difference between React and ReactDOM?](#what-is-the-difference-between-react-and-reactdom)                                                                                                                         |
| 62  | [Why is ReactDOM separated from React?](#why-reactdom-is-separated-from-react)                                                                                                                                                   |
| 63  | [How do you use the React label element?](#how-to-use-react-label-element)                                                                                                                                                       |
| 64  | [How do you combine multiple inline style objects?](#how-to-combine-multiple-inline-style-objects)                                                                                                                               |
| 65  | [How do you re-render the view when the browser is resized?](#how-to-re-render-the-view-when-the-browser-is-resized)                                                                                                             |
| 66  | [How do you pretty-print JSON with React?](#how-to-pretty-print-json-with-react)                                                                                                                                                 |
| 67  | [Why can’t you update props in React?](#why-you-cant-update-props-in-react)                                                                                                                                                      |
| 68  | [How do you focus an input element on page load?](#how-to-focus-an-input-element-on-page-load)                                                                                                                                   |
| 69  | [How can you find the version of React at runtime in the browser?](#how-can-we-find-the-version-of-react-at-runtime-in-the-browser)                                                                                              |
| 70  | [How do you add Google Analytics for React Router?](#how-to-add-google-analytics-for-react-router)                                                                                                                               |
| 71  | [How do you apply vendor prefixes to inline styles in React?](#how-do-you-apply-vendor-prefixes-to-inline-styles-in-react)                                                                                                       |
| 72  | [How do you import and export components using React and ES6?](#how-to-import-and-export-components-using-react-and-es6)                                                                                                         |

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[yagop/node-telegram-bot-api]]></title>
            <link>https://github.com/yagop/node-telegram-bot-api</link>
            <guid>https://github.com/yagop/node-telegram-bot-api</guid>
            <pubDate>Wed, 23 Apr 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[Telegram Bot API for NodeJS]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/yagop/node-telegram-bot-api">yagop/node-telegram-bot-api</a></h1>
            <p>Telegram Bot API for NodeJS</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,725</p>
            <p>Forks: 1,574</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;Node.js Telegram Bot API&lt;/h1&gt;

&lt;div align=&quot;center&quot;&gt;

Node.js module to interact with the official [Telegram Bot API](https://core.telegram.org/bots/api).


[![Bot API](https://img.shields.io/badge/Bot%20API-v.9.0-00aced.svg?style=flat-square&amp;logo=telegram)](https://core.telegram.org/bots/api)
[![npm package](https://img.shields.io/npm/v/node-telegram-bot-api?logo=npm&amp;style=flat-square)](https://www.npmjs.org/package/node-telegram-bot-api)
[![Coverage Status](https://img.shields.io/codecov/c/github/yagop/node-telegram-bot-api?style=flat-square&amp;logo=codecov)](https://codecov.io/gh/yagop/node-telegram-bot-api)

[![https://telegram.me/node_telegram_bot_api](https://img.shields.io/badge/💬%20Telegram-Channel-blue.svg?style=flat-square)](https://telegram.me/node_telegram_bot_api)
[![https://t.me/+_IC8j_b1wSFlZTVk](https://img.shields.io/badge/💬%20Telegram-Group-blue.svg?style=flat-square)](https://t.me/+_IC8j_b1wSFlZTVk)
[![https://telegram.me/Yago_Perez](https://img.shields.io/badge/💬%20Telegram-Yago_Perez-blue.svg?style=flat-square)](https://telegram.me/Yago_Perez)

&lt;/div&gt;

## 📦 Install

```sh
npm i node-telegram-bot-api
```

&lt;br/&gt;

&gt; ✍️ **Note:** If you use Typescript you can install this package that contains type definitions for this library
&gt;```sh
&gt;npm install --save-dev @types/node-telegram-bot-api
&gt;```

## 🚀 Usage

```js
const TelegramBot = require(&#039;node-telegram-bot-api&#039;);

// replace the value below with the Telegram token you receive from @BotFather
const token = &#039;YOUR_TELEGRAM_BOT_TOKEN&#039;;

// Create a bot that uses &#039;polling&#039; to fetch new updates
const bot = new TelegramBot(token, {polling: true});

// Matches &quot;/echo [whatever]&quot;
bot.onText(/\/echo (.+)/, (msg, match) =&gt; {
  // &#039;msg&#039; is the received Message from Telegram
  // &#039;match&#039; is the result of executing the regexp above on the text content
  // of the message

  const chatId = msg.chat.id;
  const resp = match[1]; // the captured &quot;whatever&quot;

  // send back the matched &quot;whatever&quot; to the chat
  bot.sendMessage(chatId, resp);
});

// Listen for any kind of message. There are different kinds of
// messages.
bot.on(&#039;message&#039;, (msg) =&gt; {
  const chatId = msg.chat.id;

  // send a message to the chat acknowledging receipt of their message
  bot.sendMessage(chatId, &#039;Received your message&#039;);
});
```

## 📚 Documentation

* [Usage][usage]
* [Examples][examples]
* [Tutorials][tutorials]
* [Help Information][help]
* API Reference: ([api-release](../master/doc/api.md) / [development][api-dev] / [experimental][api-experimental])
* [Contributing to the Project][contributing]
* [Experimental Features][experimental]

_**Note**: Development is done against the **development** branch.
Code for the latest release resides on the **master** branch.
Experimental features reside on the **experimental** branch._


## 💭 Community

We thank all the developers in the Open-Source community who continuously
take their time and effort in advancing this project.
See our [list of contributors][contributors].

We have a [Telegram channel][tg-channel] where we post updates on
the Project. Head over and subscribe!

We also have a [Telegram  group][tg-group] to discuss issues related to this library.

Some things built using this library that might interest you:

* [tgfancy](https://github.com/GochoMugo/tgfancy): A fancy, higher-level wrapper for Telegram Bot API
* [node-telegram-bot-api-middleware](https://github.com/idchlife/node-telegram-bot-api-middleware): Middleware for node-telegram-bot-api
* [teleirc](https://github.com/FruitieX/teleirc): A simple Telegram ↔ IRC gateway
* [bot-brother](https://github.com/SerjoPepper/bot-brother): Node.js library to help you easily create telegram bots
* [redbot](https://github.com/guidone/node-red-contrib-chatbot): A Node-RED plugin to create telegram bots visually
* [node-telegram-keyboard-wrapper](https://github.com/alexandercerutti/node-telegram-keyboard-wrapper): A wrapper to improve keyboards structures creation through a more easy-to-see way (supports Inline Keyboards, Reply Keyboard, Remove Keyboard and Force Reply)
* [beetube-bot](https://github.com/kodjunkie/beetube-bot): A telegram bot for music, videos, movies, EDM tracks, torrent downloads, files and more.
* [telegram-inline-calendar](https://github.com/VDS13/telegram-inline-calendar): Date and time picker and inline calendar for Node.js telegram bots.
* [telegram-captcha](https://github.com/VDS13/telegram-captcha): Telegram bot to protect Telegram groups from automatic bots.


## 👥 Contributors

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/yagop/node-telegram-bot-api/graphs/contributors&quot;&gt;
    &lt;img src=&quot;https://contrib.rocks/image?repo=yagop/node-telegram-bot-api&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

## License

**The MIT License (MIT)**

Copyright © 2019 Yago

[usage]:https://github.com/yagop/node-telegram-bot-api/tree/master/doc/usage.md
[examples]:https://github.com/yagop/node-telegram-bot-api/tree/master/examples
[help]:https://github.com/yagop/node-telegram-bot-api/tree/master/doc/help.md
[tutorials]:https://github.com/yagop/node-telegram-bot-api/tree/master/doc/tutorials.md
[api-dev]:https://github.com/yagop/node-telegram-bot-api/tree/master/doc/api.md
[api-release]:https://github.com/yagop/node-telegram-bot-api/tree/release/doc/api.md
[api-experimental]:https://github.com/yagop/node-telegram-bot-api/tree/experimental/doc/api.md
[contributing]:https://github.com/yagop/node-telegram-bot-api/tree/master/CONTRIBUTING.md
[contributors]:https://github.com/yagop/node-telegram-bot-api/graphs/contributors
[experimental]:https://github.com/yagop/node-telegram-bot-api/tree/master/doc/experimental.md
[tg-channel]:https://telegram.me/node_telegram_bot_api
[tg-group]:https://t.me/+nc3A9Hs1S81mYzdk
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[Worklenz/worklenz]]></title>
            <link>https://github.com/Worklenz/worklenz</link>
            <guid>https://github.com/Worklenz/worklenz</guid>
            <pubDate>Wed, 23 Apr 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[All in one project management tool for efficient teams]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Worklenz/worklenz">Worklenz/worklenz</a></h1>
            <p>All in one project management tool for efficient teams</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,467</p>
            <p>Forks: 117</p>
            <p>Stars today: 154 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://worklenz.com&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;
        &lt;img src=&quot;https://app.worklenz.com/assets/icons/icon-144x144.png&quot; alt=&quot;Worklenz Logo&quot; width=&quot;75&quot;&gt;
    &lt;/a&gt;
    &lt;br&gt;
    Worklenz    
&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://worklenz.com/task-management/&quot;&gt;Task Management&lt;/a&gt; |
    &lt;a href=&quot;https://worklenz.com/time-tracking/&quot;&gt;Time Tracking&lt;/a&gt; |
    &lt;a href=&quot;https://worklenz.com/analytics/&quot;&gt;Analytics&lt;/a&gt; |
    &lt;a href=&quot;https://worklenz.com/resource-management/&quot;&gt;Resource Management&lt;/a&gt; |
    &lt;a href=&quot;https://worklenz.com/templates/&quot;&gt;Project Templates&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://worklenz.com&quot; target=&quot;_blank&quot;&gt;
      &lt;img
        src=&quot;https://worklenz.s3.amazonaws.com/assets/screenshots/hero-view.png&quot;
        alt=&quot;Worklenz&quot;
        width=&quot;1200&quot;
      /&gt;
    &lt;/a&gt;
&lt;/p&gt;

Worklenz is a project management tool designed to help organizations improve their efficiency. It provides a
comprehensive solution for managing projects, tasks, and collaboration within teams.

## Features

- **Project Planning**: Create and organize projects, assign tasks to team members.
- **Task Management**: Break down projects into smaller tasks, set due dates, priorities, and track progress.
- **Collaboration**: Share files, leave comments, and communicate seamlessly with your team members.
- **Time Tracking**: Monitor time spent on tasks and projects for better resource allocation and billing.
- **Reporting**: Generate detailed reports on project status, team workload, and performance metrics.

## Tech Stack

This repository contains the frontend and backend code for Worklenz.

- **Frontend**: Built using React with Ant Design as the UI library.
- **Backend**: Built using TypeScript, Express.js, with PostgreSQL as the database.

## Requirements

- Node.js version v18 or newer
- PostgreSQL version v15 or newer
- Docker and Docker Compose (for containerized setup)

## Getting Started

These instructions will help you set up and run the Worklenz project on your local machine for development and testing purposes.

### Prerequisites

- Node.js (version 18 or higher)
- PostgreSQL database
- An S3-compatible storage service (like MinIO) or Azure Blob Storage

### Option 1: Manual Installation

1. Clone the repository
```bash
git clone https://github.com/Worklenz/worklenz.git
cd worklenz
```

2. Set up environment variables
   - Copy the example environment files
   ```bash
   cp .env.example .env
   cp worklenz-backend/.env.example worklenz-backend/.env
   ```
   - Update the environment variables with your configuration

3. Install dependencies
```bash
# Install backend dependencies
cd worklenz-backend
npm install

# Install frontend dependencies
cd ../worklenz-frontend
npm install
```

4. Set up the database
```bash
# Create a PostgreSQL database named worklenz_db
cd worklenz-backend

# Execute the SQL setup files in the correct order
psql -U your_username -d worklenz_db -f database/sql/0_extensions.sql
psql -U your_username -d worklenz_db -f database/sql/1_tables.sql
psql -U your_username -d worklenz_db -f database/sql/indexes.sql
psql -U your_username -d worklenz_db -f database/sql/4_functions.sql
psql -U your_username -d worklenz_db -f database/sql/triggers.sql
psql -U your_username -d worklenz_db -f database/sql/3_views.sql
psql -U your_username -d worklenz_db -f database/sql/2_dml.sql
psql -U your_username -d worklenz_db -f database/sql/5_database_user.sql
```

5. Start the development servers
```bash
# In one terminal, start the backend
cd worklenz-backend
npm run dev

# In another terminal, start the frontend
cd worklenz-frontend
npm run dev
```

6. Access the application at http://localhost:5000

### Option 2: Docker Setup

The project includes a fully configured Docker setup with:
- Frontend React application
- Backend server
- PostgreSQL database
- MinIO for S3-compatible storage

1. Clone the repository:
```bash
git clone https://github.com/Worklenz/worklenz.git
cd worklenz
```

2. Start the Docker containers (choose one option):

**Using Docker Compose directly**
```bash
docker-compose up -d
```

3. The application will be available at:
   - Frontend: http://localhost:5000
   - Backend API: http://localhost:3000
   - MinIO Console: http://localhost:9001 (login with minioadmin/minioadmin)

4. To stop the services:
```bash
docker-compose down
```

## Configuration

### Environment Variables

Worklenz requires several environment variables to be configured for proper operation. These include:

- Database credentials
- Session secrets
- Storage configuration (S3 or Azure)
- Authentication settings

Please refer to the `.env.example` files for a full list of required variables.

### MinIO Integration

The project uses MinIO as an S3-compatible object storage service, which provides an open-source alternative to AWS S3 for development and production.

- **MinIO Console**: http://localhost:9001
  - Username: minioadmin
  - Password: minioadmin

- **Default Bucket**: worklenz-bucket (created automatically when the containers start)

### Security Considerations

For production deployments:

1. Use strong, unique passwords and keys for all services
2. Do not commit `.env` files to version control
3. Use a production-grade PostgreSQL setup with proper backup procedures
4. Enable HTTPS for all public endpoints
5. Review and update dependencies regularly

## Contributing

We welcome contributions from the community! If you&#039;d like to contribute, please follow our [contributing guidelines](CONTRIBUTING.md).

## Security

If you believe you have found a security vulnerability in Worklenz, we encourage you to responsibly disclose this and not open a public issue. We will investigate all legitimate reports.

Email [info@worklenz.com](mailto:info@worklenz.com) to disclose any security vulnerabilities.

## License

This project is licensed under the [MIT License](LICENSE).

## Screenshots

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://worklenz.com/features/task-management/&quot; target=&quot;_blank&quot;&gt;
    &lt;img
      src=&quot;https://worklenz.s3.amazonaws.com/assets/screenshots/task-views-view.png&quot;
      alt=&quot;Worklenz task views&quot;
      width=&quot;1024&quot;
    /&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://worklenz.com/features/time-tracking/&quot; target=&quot;_blank&quot;&gt;
    &lt;img
      src=&quot;https://worklenz.s3.amazonaws.com/assets/screenshots/time-tracking-view.png&quot;
      alt=&quot;Worklenz time tracking&quot;
      width=&quot;1024&quot;
    /&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://worklenz.com/features/analytics/&quot; target=&quot;_blank&quot;&gt;
    &lt;img
      src=&quot;https://worklenz.s3.amazonaws.com/assets/screenshots/analytics-view.png&quot;
      alt=&quot;Worklenz analytics&quot;
      width=&quot;1024&quot;
    /&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://worklenz.com/features/resource-management/&quot; target=&quot;_blank&quot;&gt;
    &lt;img
      src=&quot;https://worklenz.s3.amazonaws.com/assets/screenshots/schedule-view.png&quot;
      alt=&quot;Worklenz scheduler&quot;
      width=&quot;1024&quot;
    /&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://worklenz.com/features/templates/&quot; target=&quot;_blank&quot;&gt;
    &lt;img
      src=&quot;https://worklenz.s3.amazonaws.com/assets/screenshots/templates-view.png&quot;
      alt=&quot;Worklenz templates&quot;
      width=&quot;1024&quot;
    /&gt;
  &lt;/a&gt;
&lt;/p&gt;

### Contributing

We welcome contributions from the community! If you&#039;d like to contribute, please follow
our [contributing guidelines](CONTRIBUTING.md).

### License

Worklenz is open source and released under the [GNU Affero General Public License Version 3 (AGPLv3)](LICENSE).

By contributing to Worklenz, you agree that your contributions will be licensed under its AGPL.

# Worklenz React

This repository contains the React version of Worklenz with a Docker setup for easy development and deployment.

## Getting Started with Docker

The project includes a fully configured Docker setup with:
- Frontend React application
- Backend server
- PostgreSQL database
- MinIO for S3-compatible storage

### Prerequisites

- Docker and Docker Compose installed on your system
- Git

### Quick Start

1. Clone the repository:
```bash
git clone https://github.com/Worklenz/worklenz.git
cd worklenz
```

2. Start the Docker containers (choose one option):

**Option 1: Using the provided scripts (easiest)**
- On Windows:
  ```
  start.bat
  ```
- On Linux/macOS:
  ```bash
  ./start.sh
  ```

**Option 2: Using Docker Compose directly**
```bash
docker-compose up -d
```

3. The application will be available at:
   - Frontend: http://localhost:5000
   - Backend API: http://localhost:3000
   - MinIO Console: http://localhost:9001 (login with minioadmin/minioadmin)

4. To stop the services (choose one option):

**Option 1: Using the provided scripts**
- On Windows:
  ```
  stop.bat
  ```
- On Linux/macOS:
  ```bash
  ./stop.sh
  ```

**Option 2: Using Docker Compose directly**
```bash
docker-compose down
```

## MinIO Integration

The project uses MinIO as an S3-compatible object storage service, which provides an open-source alternative to AWS S3 for development and production.

### Working with MinIO

MinIO provides an S3-compatible API, so any code that works with S3 will work with MinIO by simply changing the endpoint URL. The backend has been configured to use MinIO by default, with no additional configuration required.

- **MinIO Console**: http://localhost:9001
  - Username: minioadmin
  - Password: minioadmin

- **Default Bucket**: worklenz-bucket (created automatically when the containers start)

### Backend Storage Configuration

The backend is pre-configured to use MinIO with the following settings:

```javascript
// S3 credentials with MinIO defaults
export const REGION = process.env.AWS_REGION || &quot;us-east-1&quot;;
export const BUCKET = process.env.AWS_BUCKET || &quot;worklenz-bucket&quot;;
export const S3_URL = process.env.S3_URL || &quot;http://minio:9000/worklenz-bucket&quot;;
export const S3_ACCESS_KEY_ID = process.env.AWS_ACCESS_KEY_ID || &quot;minioadmin&quot;;
export const S3_SECRET_ACCESS_KEY = process.env.AWS_SECRET_ACCESS_KEY || &quot;minioadmin&quot;;
```

The S3 client is initialized with special MinIO configuration:

```javascript
const s3Client = new S3Client({
  region: REGION,
  credentials: {
    accessKeyId: S3_ACCESS_KEY_ID || &quot;&quot;,
    secretAccessKey: S3_SECRET_ACCESS_KEY || &quot;&quot;,
  },
  endpoint: getEndpointFromUrl(), // Extracts endpoint from S3_URL
  forcePathStyle: true, // Required for MinIO
});
```

### Environment Configuration

The `.env` file includes the necessary configuration for using MinIO:

```
STORAGE_PROVIDER=s3
AWS_REGION=us-east-1
AWS_BUCKET=worklenz-bucket
S3_ACCESS_KEY_ID=minioadmin
S3_SECRET_ACCESS_KEY=minioadmin
S3_URL=http://minio:9000
```

When the backend service starts, it will use these environment variables to connect to MinIO for file storage.

## Development

For development, you can use the provided Docker setup which includes all necessary dependencies. The code will be running inside containers, but you can still edit files locally and see changes reflected in real-time.

## Production Deployment

For production deployment:

1. Update the `.env` file with production settings
2. Build custom Docker images or use the provided ones
3. Deploy using Docker Compose or a container orchestration platform like Kubernetes

For MinIO in production, consider:
- Setting up proper credentials (change default minioadmin/minioadmin)
- Configuring persistent storage
- Setting up proper networking and access controls
- Using multiple MinIO instances for high availability

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[brave/brave-browser]]></title>
            <link>https://github.com/brave/brave-browser</link>
            <guid>https://github.com/brave/brave-browser</guid>
            <pubDate>Wed, 23 Apr 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[Brave browser for Android, iOS, Linux, macOS, Windows.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/brave/brave-browser">brave/brave-browser</a></h1>
            <p>Brave browser for Android, iOS, Linux, macOS, Windows.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 19,101</p>
            <p>Forks: 2,549</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre>![Brave Browser](./docs/source/_static/Brave.svg)

## Overview

This repository holds the build tools needed to build the Brave desktop browser for macOS, Windows, and Linux.  In particular, it fetches and syncs code from the projects defined in `package.json` and `src/brave/DEPS`:

  - [Chromium](https://chromium.googlesource.com/chromium/src.git)
    - Fetches code via `depot_tools`.
    - Sets the branch for Chromium (ex: 65.0.3325.181).
  - [brave-core](https://github.com/brave/brave-core)
    - Mounted at `src/brave`.
    - Maintains patches for 3rd party Chromium code.
  - [adblock-rust](https://github.com/brave/adblock-rust)
    - Implements Brave&#039;s ad-block engine.
    - Linked through [brave/adblock-rust-ffi](https://github.com/brave/brave-core/tree/master/components/adblock_rust_ffi).

## Downloads

You can [visit our website](https://brave.com/download) to get the latest stable release.

## Contributing

Please see the [contributing guidelines](./CONTRIBUTING.md).

Our [Wiki](https://github.com/brave/brave-browser/wiki) also has some useful technical information.

## Community

[Join the Q&amp;A community](https://community.brave.com/) if you&#039;d like to get more involved with Brave. You can [ask for help](https://community.brave.com/c/support-and-troubleshooting),
[discuss features you&#039;d like to see](https://community.brave.com/c/brave-feature-requests), and a lot more. We&#039;d love to have your help so that we can continue improving Brave.

Help us translate Brave to your language by submitting translations at https://explore.transifex.com/brave/brave_en/.

Follow [@brave](https://x.com/brave) on X for important news and announcements.

## Install prerequisites

Follow the instructions for your platform:

- [macOS](https://github.com/brave/brave-browser/wiki/macOS-Development-Environment)
- [iOS](https://github.com/brave/brave-browser/wiki/iOS-Development-Environment)
- [Windows](https://github.com/brave/brave-browser/wiki/Windows-Development-Environment)
- [Linux](https://github.com/brave/brave-browser/wiki/Linux-Development-Environment)
- [Android](https://github.com/brave/brave-browser/wiki/Android-Development-Environment)

## Clone and initialize the repo

Once you have the prerequisites installed, you can get the code and initialize the build environment.

```bash
git clone git@github.com:brave/brave-core.git path-to-your-project-folder/src/brave
cd path-to-your-project-folder/src/brave
npm install

# the Chromium source is downloaded, which has a large history (gigabytes of data)
# this might take really long to finish depending on internet speed

npm run init
```
brave-core based android builds should use `npm run init -- --target_os=android --target_arch=arm` (or whichever CPU type you want to build for)
brave-core based iOS builds should use `npm run init -- --target_os=ios`

You can also set the target_os and target_arch for init and build using:

```
npm config set target_os android
npm config set target_arch arm
```

Additional parameters needed to build are documented at https://github.com/brave/brave-browser/wiki/Build-configuration

Internal developers can find more information at https://github.com/brave/devops/wiki/%60.env%60-config-for-Brave-Developers

## Build Brave
The default build type is component.

```
# start the component build compile
npm run build
```

To do a release build:

```
# start the release compile
npm run build Release
```

brave-core based android builds should use `npm run build -- --target_os=android --target_arch=arm` or set the npm config variables as specified above for `init`

brave-core based iOS builds should use the Xcode project found in `ios/brave-ios/App`. You can open this project directly or run `npm run ios_bootstrap -- --open_xcodeproj` to have it opened in Xcode. See the [iOS Developer Environment](https://github.com/brave/brave-browser/wiki/iOS-Development-Environment#Building) for more information on iOS builds.

### Build Configurations

Running a release build with `npm run build Release` can be very slow and use a lot of RAM, especially on Linux with the Gold LLVM plugin.

To run a statically linked build (takes longer to build, but starts faster):

```bash
npm run build -- Static
```

To run a debug build (Component build with is_debug=true):

```bash
npm run build -- Debug
```
NOTE: the build will take a while to complete. Depending on your processor and memory, it could potentially take a few hours.

## Run Brave
To start the build:

`npm start [Release|Component|Static|Debug]`

# Update Brave

`npm run sync -- [--force] [--init] [--create] [brave_core_ref]`

**This will attempt to stash your local changes in brave-core, but it&#039;s safer to commit local changes before running this**

`npm run sync` will (depending on the below flags):

1. 📥 Update sub-projects (chromium, brave-core) to latest commit of a git ref (e.g. tag or branch)
2. 🤕 Apply patches
3. 🔄 Update gclient DEPS dependencies
4. ⏩ Run hooks (e.g. to perform `npm install` on child projects)

| flag | Description |
|---|---|
|`[no flags]`|updates chromium if needed and re-applies patches. If the chromium version did not change, it will only re-apply patches that have changed. Will update child dependencies **only if any project needed updating during this script run**. &lt;br&gt; **Use this if you want the script to manage keeping you up to date instead of pulling or switching branches manually. **|
|`--force`|updates both _Chromium_ and _brave-core_ to the latest remote commit for the current brave-core branch and the _Chromium_ ref specified in brave-browser/package.json (e.g. `master` or `74.0.0.103`). Will re-apply all patches. Will force update all child dependencies. &lt;br&gt; **Use this if you&#039;re having trouble and want to force the branches back to a known state. **|
|`--init`|force update both _Chromium_ and _brave-core_ to the versions specified in brave-browser/package.json and force updates all dependent repos - same as `npm run init`|
|`--sync_chromium (true/false)`|Will force or skip the chromium version update when applicable. Useful if you want to avoid a minor update when not ready for the larger build time a chromium update may result in. A warning will be output about the current code state expecting a different chromium version. Your build may fail as a result.|
|`-D, --delete_unused_deps`|Will delete from the working copy any dependencies that have been removed since the last sync. Mimics `gclient sync -D`.|

Run `npm run sync brave_core_ref` to checkout the specified _brave-core_ ref and update all dependent repos including chromium if needed.

## Scenarios

#### Create a new branch:
```bash
brave-browser&gt; cd src/brave
brave-browser/src/brave&gt; git checkout -b branch_name
```

#### Checkout an existing branch or tag:
```bash
brave-browser/src/brave&gt; git fetch origin
brave-browser/src/brave&gt; git checkout [-b] branch_name
brave-browser/src/brave&gt; npm run sync
...Updating 2 patches...
...Updating child dependencies...
...Running hooks...
```

#### Update the current branch to the latest remote:
```bash
brave-browser/src/brave&gt; git pull
brave-browser/src/brave&gt; npm run sync
...Updating 2 patches...
...Updating child dependencies...
...Running hooks...
```

#### Reset to latest brave-browser master and brave-core master (via `init`, will always result in a longer build and will remove any pending changes in your brave-core working directory):
```bash
brave-browser&gt; git checkout master
brave-browser&gt; git pull
brave-browser&gt; npm run sync -- --init
```

#### When you know that DEPS didn&#039;t change, but .patch files did (quickest attempt to perform a mini-sync before a build):
```bash
brave-browser/src/brave&gt; git checkout featureB
brave-browser/src/brave&gt; git pull
brave-browser/src/brave&gt; cd ../..
brave-browser&gt; npm run apply_patches
...Applying 2 patches...
```

# Enabling third-party APIs:

1. **Google Safe Browsing**: Get an API key with SafeBrowsing API enabled from https://console.developers.google.com/. Update the `GOOGLE_API_KEY` environment variable with your key as per https://www.chromium.org/developers/how-tos/api-keys to enable Google SafeBrowsing.

# Development

- [Security rules from Chromium](https://chromium.googlesource.com/chromium/src/+/refs/heads/main/docs/security/rules.md)
- [IPC review guidelines](https://chromium.googlesource.com/chromium/src/+/HEAD/docs/security/ipc-reviews.md) (in particular [this reference](https://docs.google.com/document/d/1Kw4aTuISF7csHnjOpDJGc7JYIjlvOAKRprCTBVWw_E4/edit#heading=h.84bpc1e9z1bg))
- [Brave&#039;s internal security guidelines](https://github.com/brave/internal/wiki/Pull-request-security-audit-checklist) (for employees only)
- [Rust usage](https://github.com/brave/brave-core/blob/master/docs/rust.md)

# Troubleshooting

See [Troubleshooting](https://github.com/brave/brave-browser/wiki/Troubleshooting) for solutions to common problems.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[anuraghazra/github-readme-stats]]></title>
            <link>https://github.com/anuraghazra/github-readme-stats</link>
            <guid>https://github.com/anuraghazra/github-readme-stats</guid>
            <pubDate>Wed, 23 Apr 2025 00:04:47 GMT</pubDate>
            <description><![CDATA[⚡ Dynamically generated stats for your github readmes]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/anuraghazra/github-readme-stats">anuraghazra/github-readme-stats</a></h1>
            <p>⚡ Dynamically generated stats for your github readmes</p>
            <p>Language: JavaScript</p>
            <p>Stars: 72,726</p>
            <p>Forks: 24,489</p>
            <p>Stars today: 35 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>