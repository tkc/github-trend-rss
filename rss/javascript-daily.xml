<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Sun, 31 Aug 2025 00:05:24 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[upstash/context7]]></title>
            <link>https://github.com/upstash/context7</link>
            <guid>https://github.com/upstash/context7</guid>
            <pubDate>Sun, 31 Aug 2025 00:05:24 GMT</pubDate>
            <description><![CDATA[Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/upstash/context7">upstash/context7</a></h1>
            <p>Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors</p>
            <p>Language: JavaScript</p>
            <p>Stars: 28,193</p>
            <p>Forks: 1,428</p>
            <p>Stars today: 151 stars today</p>
            <h2>README</h2><pre>![Cover](public/cover.png)

# Context7 MCP - Up-to-date Code Docs For Any Prompt

[![Website](https://img.shields.io/badge/Website-context7.com-blue)](https://context7.com) [![smithery badge](https://smithery.ai/badge/@upstash/context7-mcp)](https://smithery.ai/server/@upstash/context7-mcp)

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=context7&amp;config=eyJ1cmwiOiJodHRwczovL21jcC5jb250ZXh0Ny5jb20vbWNwIn0%3D) [&lt;img alt=&quot;Install in VS Code (npx)&quot; src=&quot;https://img.shields.io/badge/Install%20in%20VS%20Code-0098FF?style=for-the-badge&amp;logo=visualstudiocode&amp;logoColor=white&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)

[![ÁπÅÈ´î‰∏≠Êñá](https://img.shields.io/badge/docs-ÁπÅÈ´î‰∏≠Êñá-yellow)](./docs/README.zh-TW.md) [![ÁÆÄ‰Ωì‰∏≠Êñá](https://img.shields.io/badge/docs-ÁÆÄ‰Ωì‰∏≠Êñá-yellow)](./docs/README.zh-CN.md) [![Êó•Êú¨Ë™û](https://img.shields.io/badge/docs-Êó•Êú¨Ë™û-b7003a)](./docs/README.ja.md) [![ÌïúÍµ≠Ïñ¥ Î¨∏ÏÑú](https://img.shields.io/badge/docs-ÌïúÍµ≠Ïñ¥-green)](./docs/README.ko.md) [![Documentaci√≥n en Espa√±ol](https://img.shields.io/badge/docs-Espa√±ol-orange)](./docs/README.es.md) [![Documentation en Fran√ßais](https://img.shields.io/badge/docs-Fran√ßais-blue)](./docs/README.fr.md) [![Documenta√ß√£o em Portugu√™s (Brasil)](&lt;https://img.shields.io/badge/docs-Portugu√™s%20(Brasil)-purple&gt;)](./docs/README.pt-BR.md) [![Documentazione in italiano](https://img.shields.io/badge/docs-Italian-red)](./docs/README.it.md) [![Dokumentasi Bahasa Indonesia](https://img.shields.io/badge/docs-Bahasa%20Indonesia-pink)](./docs/README.id-ID.md) [![Dokumentation auf Deutsch](https://img.shields.io/badge/docs-Deutsch-darkgreen)](./docs/README.de.md) [![–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ](https://img.shields.io/badge/docs-–†—É—Å—Å–∫–∏–π-darkblue)](./docs/README.ru.md) [![–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è](https://img.shields.io/badge/docs-–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞-lightblue)](./docs/README.uk.md) [![T√ºrk√ße Dok√ºman](https://img.shields.io/badge/docs-T√ºrk√ße-blue)](./docs/README.tr.md) [![Arabic Documentation](https://img.shields.io/badge/docs-Arabic-white)](./docs/README.ar.md) [![Ti·∫øng Vi·ªát](https://img.shields.io/badge/docs-Ti·∫øng%20Vi·ªát-red)](./docs/README.vi.md)

## ‚ùå Without Context7

LLMs rely on outdated or generic information about the libraries you use. You get:

- ‚ùå Code examples are outdated and based on year-old training data
- ‚ùå Hallucinated APIs don&#039;t even exist
- ‚ùå Generic answers for old package versions

## ‚úÖ With Context7

Context7 MCP pulls up-to-date, version-specific documentation and code examples straight from the source ‚Äî and places them directly into your prompt.

Add `use context7` to your prompt in Cursor:

```txt
Create a Next.js middleware that checks for a valid JWT in cookies and redirects unauthenticated users to `/login`. use context7
```

```txt
Configure a Cloudflare Worker script to cache JSON API responses for five minutes. use context7
```

Context7 fetches up-to-date code examples and documentation right into your LLM&#039;s context.

- 1Ô∏è‚É£ Write your prompt naturally
- 2Ô∏è‚É£ Tell the LLM to `use context7`
- 3Ô∏è‚É£ Get working code answers

No tab-switching, no hallucinated APIs that don&#039;t exist, no outdated code generations.

## üìö Adding Projects

Check out our [project addition guide](./docs/adding-projects.md) to learn how to add (or update) your favorite libraries to Context7.

## üõ†Ô∏è Installation

### Requirements

- Node.js &gt;= v18.0.0
- Cursor, Claude Code, VSCode, Windsurf or another MCP Client
- Context7 API Key (Optional for higher rate limits) (Get yours by creating an account at [context7.com/dashboard](https://context7.com/dashboard))

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Installing via Smithery&lt;/b&gt;&lt;/summary&gt;

To install Context7 MCP Server for any client automatically via [Smithery](https://smithery.ai/server/@upstash/context7-mcp):

```bash
npx -y @smithery/cli@latest install @upstash/context7-mcp --client &lt;CLIENT_NAME&gt; --key &lt;YOUR_SMITHERY_KEY&gt;
```

You can find your Smithery key in the [Smithery.ai webpage](https://smithery.ai/server/@upstash/context7-mcp).

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Cursor&lt;/b&gt;&lt;/summary&gt;

Go to: `Settings` -&gt; `Cursor Settings` -&gt; `MCP` -&gt; `Add new global MCP server`

Pasting the following configuration into your Cursor `~/.cursor/mcp.json` file is the recommended approach. You may also install in a specific project by creating `.cursor/mcp.json` in your project folder. See [Cursor MCP docs](https://docs.cursor.com/context/model-context-protocol) for more info.

&gt; Since Cursor 1.0, you can click the install button below for instant one-click installation.

#### Cursor Remote Server Connection

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=context7&amp;config=eyJ1cmwiOiJodHRwczovL21jcC5jb250ZXh0Ny5jb20vbWNwIn0%3D)

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
      }
    }
  }
}
```

#### Cursor Local Server Connection

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=context7&amp;config=eyJjb21tYW5kIjoibnB4IC15IEB1cHN0YXNoL2NvbnRleHQ3LW1jcCJ9)

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Claude Code&lt;/b&gt;&lt;/summary&gt;

Run this command. See [Claude Code MCP docs](https://docs.anthropic.com/en/docs/claude-code/mcp) for more info.

#### Claude Code Remote Server Connection

```sh
claude mcp add --transport http context7 https://mcp.context7.com/mcp --header &quot;CONTEXT7_API_KEY: YOUR_API_KEY&quot;
```

Or using SSE transport:

```sh
claude mcp add --transport sse context7 https://mcp.context7.com/sse --header &quot;CONTEXT7_API_KEY: YOUR_API_KEY&quot;
```

#### Claude Code Local Server Connection

```sh
claude mcp add context7 -- npx -y @upstash/context7-mcp --api-key YOUR_API_KEY
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Windsurf&lt;/b&gt;&lt;/summary&gt;

Add this to your Windsurf MCP config file. See [Windsurf MCP docs](https://docs.windsurf.com/windsurf/cascade/mcp) for more info.

#### Windsurf Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;serverUrl&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
      }
    }
  }
}
```

#### Windsurf Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in VS Code&lt;/b&gt;&lt;/summary&gt;

[&lt;img alt=&quot;Install in VS Code (npx)&quot; src=&quot;https://img.shields.io/badge/VS_Code-VS_Code?style=flat-square&amp;label=Install%20Context7%20MCP&amp;color=0098FF&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)
[&lt;img alt=&quot;Install in VS Code Insiders (npx)&quot; src=&quot;https://img.shields.io/badge/VS_Code_Insiders-VS_Code_Insiders?style=flat-square&amp;label=Install%20Context7%20MCP&amp;color=24bfa5&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode-insiders%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)

Add this to your VS Code MCP config file. See [VS Code MCP docs](https://code.visualstudio.com/docs/copilot/chat/mcp-servers) for more info.

#### VS Code Remote Server Connection

```json
&quot;mcp&quot;: {
  &quot;servers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;http&quot;,
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
      }
    }
  }
}
```

#### VS Code Local Server Connection

```json
&quot;mcp&quot;: {
  &quot;servers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;stdio&quot;,
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;
&lt;b&gt;Install in Cline&lt;/b&gt;
&lt;/summary&gt;

You can easily install Context7 through the [Cline MCP Server Marketplace](https://cline.bot/mcp-marketplace) by following these instructions:

1. Open **Cline**.
2. Click the hamburger menu icon (‚ò∞) to enter the **MCP Servers** section.
3. Use the search bar within the **Marketplace** tab to find _Context7_.
4. Click the **Install** button.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Zed&lt;/b&gt;&lt;/summary&gt;

It can be installed via [Zed Extensions](https://zed.dev/extensions?query=Context7) or you can add this to your Zed `settings.json`. See [Zed Context Server docs](https://zed.dev/docs/assistant/context-servers) for more info.

```json
{
  &quot;context_servers&quot;: {
    &quot;Context7&quot;: {
      &quot;command&quot;: {
        &quot;path&quot;: &quot;npx&quot;,
        &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
      },
      &quot;settings&quot;: {}
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Augment Code&lt;/b&gt;&lt;/summary&gt;

To configure Context7 MCP in Augment Code, you can use either the graphical interface or manual configuration.

### **A. Using the Augment Code UI**

1. Click the hamburger menu.
2. Select **Settings**.
3. Navigate to the **Tools** section.
4. Click the **+ Add MCP** button.
5. Enter the following command:

   ```
   npx -y @upstash/context7-mcp@latest
   ```

6. Name the MCP: **Context7**.
7. Click the **Add** button.

Once the MCP server is added, you can start using Context7&#039;s up-to-date code documentation features directly within Augment Code.

---

### **B. Manual Configuration**

1. Press Cmd/Ctrl Shift P or go to the hamburger menu in the Augment panel
2. Select Edit Settings
3. Under Advanced, click Edit in settings.json
4. Add the server configuration to the `mcpServers` array in the `augment.advanced` object

```json
&quot;augment.advanced&quot;: {
  &quot;mcpServers&quot;: [
    {
      &quot;name&quot;: &quot;context7&quot;,
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  ]
}
```

Once the MCP server is added, restart your editor. If you receive any errors, check the syntax to make sure closing brackets or commas are not missing.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Roo Code&lt;/b&gt;&lt;/summary&gt;

Add this to your Roo Code MCP configuration file. See [Roo Code MCP docs](https://docs.roocode.com/features/mcp/using-mcp-in-roo) for more info.

#### Roo Code Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;streamable-http&quot;,
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

#### Roo Code Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Gemini CLI&lt;/b&gt;&lt;/summary&gt;

See [Gemini CLI Configuration](https://google-gemini.github.io/gemini-cli/docs/tools/mcp-server.html) for details.

1.  Open the Gemini CLI settings file. The location is `~/.gemini/settings.json` (where `~` is your home directory).
2.  Add the following to the `mcpServers` object in your `settings.json` file:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;httpUrl&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
      }
    }
  }
}
```

Or, for a local server:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

If the `mcpServers` object does not exist, create it.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Claude Desktop&lt;/b&gt;&lt;/summary&gt;

#### Remote Server Connection

Open Claude Desktop and navigate to Settings &gt; Connectors &gt; Add Custom Connector. Enter the name as `Context7` and the remote MCP server URL as `https://mcp.context7.com/mcp`.

#### Local Server Connection

Open Claude Desktop developer settings and edit your `claude_desktop_config.json` file to add the following configuration. See [Claude Desktop MCP docs](https://modelcontextprotocol.io/quickstart/user) for more info.

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Opencode&lt;/b&gt;&lt;/summary&gt;

Add this to your Opencode configuration file. See [Opencode MCP docs](https://opencode.ai/docs/mcp-servers) docs for more info.

#### Opencode Remote Server Connection

```json
&quot;mcp&quot;: {
  &quot;context7&quot;: {
    &quot;type&quot;: &quot;remote&quot;,
    &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;,
    &quot;headers&quot;: {
      &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
    },
    &quot;enabled&quot;: true
  }
}
```

#### Opencode Local Server Connection

```json
{
  &quot;mcp&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;local&quot;,
      &quot;command&quot;: [&quot;npx&quot;, &quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;],
      &quot;enabled&quot;: true
    }
  }
}
```

&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in OpenAI Codex&lt;/b&gt;&lt;/summary&gt;

See [OpenAI Codex](https://github.com/openai/codex) for more information.

Add the following configuration to your OpenAI Codex MCP server settings:

```toml
[mcp_servers.context7]
args = [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
command = &quot;npx&quot;
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in JetBrains AI Assistant&lt;/b&gt;&lt;/summary&gt;

See [JetBrains AI Assistant Documentation](https://www.jetbrains.com/help/ai-assistant/configure-an-mcp-server.html) for more details.

1. In JetBrains IDEs go to `Settings` -&gt; `Tools` -&gt; `AI Assistant` -&gt; `Model Context Protocol (MCP)`
2. Click `+ Add`.
3. Click on `Command` in the top-left corner of the dialog and select the As JSON option from the list
4. Add this configuration and click `OK`

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

5. Click `Apply` to save changes.
6. The same way context7 could be added for JetBrains Junie in `Settings` -&gt; `Tools` -&gt; `Junie` -&gt; `MCP Settings`

&lt;/details&gt;

&lt;details&gt;
  
&lt;summary&gt;&lt;b&gt;Install in Kiro&lt;/b&gt;&lt;/summary&gt;

See [Kiro Model Context Protocol Documentation](https://kiro.dev/docs/mcp/configuration/) for details.

1. Navigate `Kiro` &gt; `MCP Servers`
2. Add a new MCP server by clicking the `+ Add` button.
3. Paste the configuration given below:

```json
{
  &quot;mcpServers&quot;: {
    &quot;Context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;],
      &quot;env&quot;: {},
      &quot;disabled&quot;: false,
      &quot;autoApprove&quot;: []
    }
  }
}
```

4. Click `Save` to apply the changes.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Trae&lt;/b&gt;&lt;/summary&gt;

Use the Add manually feature and fill in the JSON configuration information for that MCP server.
For more details, visit the [Trae documentation](https://docs.trae.ai/ide/model-context-protocol?_lang=en).

#### Trae Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

#### Trae Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Using Bun or Deno&lt;/b&gt;&lt;/summary&gt;

Use these alternatives to run the local Context7 MCP server with other runtimes. These examples work for any client that supports launching a local MCP server via command + args.

#### Bun

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;bunx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

#### Deno

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;deno&quot;,
      &quot;args&quot;: [
        &quot;run&quot;,
        &quot;--allow-env=NO_DEPRECATION,TRACE_DEPRECATION&quot;,
        &quot;--allow-net&quot;,
        &quot;npm:@upstash/context7-mcp&quot;
      ]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Using Docker&lt;/b&gt;&lt;/summary&gt;

If you prefer to run the MCP server in a Docker container:

1. **Build the Docker Image:**

   First, create a `Dockerfile` in the project root (or anywhere you prefer):

   &lt;details&gt;
   &lt;summary&gt;Click to see Dockerfile content&lt;/summary&gt;

   ```Dockerfile
   FROM node:18-alpine

   WORKDIR /app

   # Install the latest version globally
   RUN npm install -g @upstash/context7-mcp

   # Expose default port if needed (optional, depends on MCP client interaction)
   # EXPOSE 3000

   # Default command to run the server
   CMD [&quot;context7-mcp&quot;]
   ```

   &lt;/details&gt;

   Then, build the image using a tag (e.g., `context7-mcp`). **Make sure Docker Desktop (or the Docker daemon) is running.** Run the following command in the same directory where you saved the `Dockerfile`:

   ```bash
   docker build -t context7-mcp .
   ```

2. **Configure Your MCP Client:**

   Update your MCP client&#039;s configuration to use the Docker command.

   _Example for a cline_mcp_settings.json:_

   ```json
   {
     &quot;mcpServers&quot;: {
       &quot;–°ontext7&quot;: {
         &quot;autoApprove&quot;: [],
         &quot;disabled&quot;: false,
         &quot;timeout&quot;: 60,
         &quot;command&quot;: &quot;docker&quot;,
         &quot;args&quot;: [&quot;run&quot;, &quot;-i&quot;, &quot;--rm&quot;, &quot;context7-mcp&quot;],
         &quot;transportType&quot;: &quot;stdio&quot;
       }
     }
   }
   ```

   _Note: This is an example configuration. Please refer to the specific examples for your MCP client (like Cursor, VS Code, etc.) earlier in this README to adapt the structure (e.g., `mcpServers` vs `servers`). Also, ensure the image name in `args` matches the tag used during the `docker build` command._

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install Using the Desktop Extension&lt;/b&gt;&lt;/summary&gt;

Install the [context7.dxt](dxt/context7.dxt) file under the dxt folder and add it to your client. For more information please check out [the desktop extensions docs](https://github.com/anthropics/dxt#desktop-extensions-dxt).

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Windows&lt;/b&gt;&lt;/summary&gt;

The configuration on Windows is slightly different compared to Linux or macOS (_`Cline` is used in the example_). The same principle applies to other editors; refer to the configuration of `command` and `args`.

```json
{
  &quot;mcpServers&quot;: {
    &quot;github.com/upstash/context7-mcp&quot;: {
      &quot;command&quot;: &quot;cmd&quot;,
      &quot;args&quot;: [&quot;/c&quot;, &quot;npx&quot;, &quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;],
      &quot;disabled&quot;: false,
      &quot;autoApprove&quot;: []
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Amazon Q Developer CLI&lt;/b&gt;&lt;/summary&gt;

Add this to your Amazon Q Developer CLI configuration file. See [Amazon Q Developer CLI docs](https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line-mcp-configuration.html) for more details.

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Warp&lt;/b&gt;&lt;/summary&gt;

See [Warp Model Context Protocol Documentation](https://docs.warp.dev/knowledge-and-collaboration/mcp#adding-an-mcp-server) for details.

1. Navigate `Settings` &gt; `AI` &gt; `Manage MCP servers`.
2. Add a new MCP server by clicking the `+ Add` button.
3. Paste the configuration given below:

```json
{
  &quot;Context7&quot;: {
    &quot;command&quot;: &quot;npx&quot;,
    &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;],
    &quot;env&quot;: {},
    &quot;working_directory&quot;: null,
    &quot;start_on_launch&quot;: true
  }
}
```

4. Click `Save` to apply the changes.

&lt;/details&gt;

&lt;details&gt;

&lt;summary&gt;&lt;b&gt;Install in Copilot Coding Agent&lt;/b&gt;&lt;/summary&gt;

## Using Context7 with Copilot Coding Agent

Add the following configuration to the `mcp` section of your Copilot Coding Agent configuration file Repository-&gt;Settings-&gt;Copilot-&gt;Coding agent-&gt;MCP configuration:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;http&quot;,
      &quot;url&quot;: &quot;https:

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[evershopcommerce/evershop]]></title>
            <link>https://github.com/evershopcommerce/evershop</link>
            <guid>https://github.com/evershopcommerce/evershop</guid>
            <pubDate>Sun, 31 Aug 2025 00:05:23 GMT</pubDate>
            <description><![CDATA[üõçÔ∏è Typescript E-commerce Platform]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/evershopcommerce/evershop">evershopcommerce/evershop</a></h1>
            <p>üõçÔ∏è Typescript E-commerce Platform</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,639</p>
            <p>Forks: 1,639</p>
            <p>Stars today: 80 stars today</p>
            <h2>README</h2><pre>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;img width=&quot;60&quot; height=&quot;68&quot; alt=&quot;EverShop Logo&quot; src=&quot;https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/logo-green.png&quot;/&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;h1 align=&quot;center&quot;&gt;EverShop&lt;/h1&gt;
&lt;/p&gt;
&lt;h4 align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://evershop.io/docs/development/getting-started/introduction&quot;&gt;Documentation&lt;/a&gt; |
    &lt;a href=&quot;https://demo.evershop.io/&quot;&gt;Demo&lt;/a&gt;
&lt;/h4&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://github.com/evershopcommerce/evershop/actions/workflows/build_test.yml/badge.svg&quot; alt=&quot;Github Action&quot;&gt;
  &lt;a href=&quot;https://twitter.com/evershopjs&quot;&gt;
    &lt;img alt=&quot;Twitter Follow&quot; src=&quot;https://img.shields.io/twitter/follow/evershopjs?style=social&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/GSzt7dt7RM&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/discord/757179260417867879?label=discord&quot; alt=&quot;Discord&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://opensource.org/licenses/GPL-3.0&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/License-GPLv3-blue.svg&quot; alt=&quot;License&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img alt=&quot;EverShop&quot; width=&quot;950&quot; src=&quot;https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/banner.png&quot;/&gt;
&lt;/p&gt;

## Introduction

EverShop is a modern, TypeScript-first eCommerce platform built with GraphQL and React. Designed for developers, it offers essential commerce features in a modular, fully customizable architecture‚Äîperfect for building tailored shopping experiences with confidence and speed.

## Installation Using Docker


You can get started with EverShop in minutes by using the Docker image. The Docker image is a great way to get started with EverShop without having to worry about installing dependencies or configuring your environment.

```bash
curl -sSL https://raw.githubusercontent.com/evershopcommerce/evershop/main/docker-compose.yml &gt; docker-compose.yml
docker-compose up -d
```

For the full installation guide, please refer to our [Installation guide](https://evershop.io/docs/development/getting-started/installation-guide).

## Documentation

- [Installation guide](https://evershop.io/docs/development/getting-started/installation-guide).

- [Extension development](https://evershop.io/docs/development/module/create-your-first-extension).

- [Theme development](https://evershop.io/docs/development/theme/theme-overview).


## Demo

Explore our demo store.

&lt;p align=&quot;left&quot;&gt;
  &lt;a href=&quot;https://demo.evershop.io/admin&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;evershop-backend-demo&quot; height=&quot;35&quot; alt=&quot;EverShop Admin Demo&quot; src=&quot;https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/evershop-demo-back.png&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://demo.evershop.io/&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;evershop-store-demo&quot; height=&quot;35&quot; alt=&quot;EverShop Store Demo&quot; src=&quot;https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/evershop-demo-front.png&quot;/&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;b&gt;Demo user:&lt;/b&gt;

Email: demo@evershop.io&lt;br/&gt;
Password: 123456

## Support

If you like my work, feel free to:

- ‚≠ê this repository. It helps.
- [![Tweet](https://img.shields.io/twitter/url/http/shields.io.svg?style=social)][tweet] about EverShop. Thank you!

[tweet]: https://twitter.com/intent/tweet?url=https%3A%2F%2Fgithub.com%2Fevershopcommerce%2Fevershop&amp;text=Awesome%20React%20Ecommerce%20Project&amp;hashtags=react,ecommerce,expressjs,graphql

## Contributing

EverShop is an open-source project. We are committed to a fully transparent development process and appreciate highly any contributions. Whether you are helping us fix bugs, proposing new features, improving our documentation or spreading the word - we would love to have you as part of the EverShop community.

### Ask a question about EverShop

You can ask questions, and participate in discussions about EverShop-related topics in the EverShop Discord channel.

&lt;a href=&quot;https://discord.gg/GSzt7dt7RM&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/discord_banner_github.svg&quot; /&gt;&lt;/a&gt;

### Create a bug report

If you see an error message or run into an issue, please [create bug report](https://github.com/evershopcommerce/evershop/issues/new). This effort is valued and it will help all EverShop users.


### Submit a feature request

If you have an idea, or you&#039;re missing a capability that would make development easier and more robust, please [Submit feature request](https://github.com/evershopcommerce/evershop/issues/new).

If a similar feature request already exists, don&#039;t forget to leave a &quot;+1&quot;.
If you add some more information such as your thoughts and vision about the feature, your comments will be embraced warmly :)


Please refer to our [Contribution Guidelines](./CONTRIBUTING.md) and [Code of Conduct](./CODE_OF_CONDUCT.md).

## License

[GPL-3.0 License](https://github.com/evershopcommerce/evershop/blob/main/LICENSE)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mickael-kerjean/filestash]]></title>
            <link>https://github.com/mickael-kerjean/filestash</link>
            <guid>https://github.com/mickael-kerjean/filestash</guid>
            <pubDate>Sun, 31 Aug 2025 00:05:22 GMT</pubDate>
            <description><![CDATA[üìÅ A file manager / web client for SFTP, S3, FTP, WebDAV, Git, Minio, LDAP, CalDAV, CardDAV, Mysql, Backblaze, ...]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mickael-kerjean/filestash">mickael-kerjean/filestash</a></h1>
            <p>üìÅ A file manager / web client for SFTP, S3, FTP, WebDAV, Git, Minio, LDAP, CalDAV, CardDAV, Mysql, Backblaze, ...</p>
            <p>Language: JavaScript</p>
            <p>Stars: 12,216</p>
            <p>Forks: 873</p>
            <p>Stars today: 49 stars today</p>
            <h2>README</h2><pre>![screenshot](https://raw.githubusercontent.com/mickael-kerjean/filestash_images/master/.assets/photo.jpg)

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/mickael-kerjean/contributors&quot; alt=&quot;Contributors&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/github/contributors/mickael-kerjean/filestash&quot; style=&quot;max-width:100%;&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://hub.docker.com/r/machines/filestash&quot; alt=&quot;Docker Hub&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/docker/pulls/machines/filestash&quot; style=&quot;max-width:100%;&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://kiwiirc.com/nextclient/#irc://irc.libera.chat/#filestash?nick=guest??&quot; alt=&quot;Chat on IRC&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/IRC-%23filestash-brightgreen.svg&quot; style=&quot;max-width:100%;&quot;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    A Dropbox-like file manager that let you manage your data anywhere it is located:&lt;br&gt;
    &lt;a href=&quot;https://www.filestash.app/ftp-client.html&quot;&gt;FTP&lt;/a&gt; ‚Ä¢ &lt;a href=&quot;https://www.filestash.app/ftp-client.html&quot;&gt;FTPS&lt;/a&gt; ‚Ä¢ &lt;a href=&quot;https://www.filestash.app/ssh-file-transfer.html&quot;&gt;SFTP&lt;/a&gt; ‚Ä¢ &lt;a href=&quot;https://www.filestash.app/webdav-client.html&quot;&gt;WebDAV&lt;/a&gt; ‚Ä¢ Git ‚Ä¢ &lt;a href=&quot;https://www.filestash.app/s3-browser.html&quot;&gt;S3&lt;/a&gt; ‚Ä¢ NFS ‚Ä¢ &lt;a href=&quot;https://www.filestash.app/smb-client.html&quot;&gt;SMB&lt;/a&gt; ‚Ä¢ Artifactory ‚Ä¢ &lt;a href=&quot;https://www.filestash.app/ldap-browser.html&quot;&gt;LDAP&lt;/a&gt; ‚Ä¢ Mysql &lt;br&gt;
       Storj ‚Ä¢ CardDAV ‚Ä¢ CalDAV ‚Ä¢ Backblaze B2 ‚Ä¢ &lt;a href=&quot;https://www.filestash.app/s3-browser.html&quot;&gt;Minio&lt;/a&gt; &lt;br&gt;Dropbox ‚Ä¢ Google Drive
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;http://demo.filestash.app&quot;&gt;
      &lt;img src=&quot;https://raw.githubusercontent.com/mickael-kerjean/filestash_images/master/.assets/button_demo.png&quot; alt=&quot;demo button&quot; /&gt;
    &lt;/a&gt;
&lt;/p&gt;


# Key Features

- Manage files from your browser
- Sleek, Speedy, Snappy, works great on Desktop and Mobile
- Extensible / Customisable / Hackable via a rich ecosystem of plugins
- Shared Links which you can mount locally as network drives
- Builtin Music, Video, Image viewers with optional transcoding and Chromecast support
- API and LLM integration via [MCP](https://www.filestash.app/docs/api/#mcp)
- [Themes](https://www.filestash.app/docs/plugin/#theme) replicating the UX of [dropbox](https://www.filestash.app/img/screenshots/theme_dropbox.png), [gdrive](https://www.filestash.app/img/screenshots/theme_gdrive.png), [github](https://www.filestash.app/img/screenshots/theme_github.png), [ibm](https://www.filestash.app/img/screenshots/theme_ibm.png), [onedrive](https://www.filestash.app/img/screenshots/theme_onedrive.png), [and more](https://www.filestash.app/img/screenshots/theme_untitled.png)
- ... and much &lt;sub&gt;much &lt;sub&gt;much&lt;/sub&gt;&lt;/sub&gt; more


# Documentation

- [Getting started](https://www.filestash.app/docs/)
- [Installation](https://www.filestash.app/docs/install-and-upgrade/)
- [API](https://www.filestash.app/docs/api/#api) and [MCP](https://www.filestash.app/docs/api/#mcp)
- [Plugins Inventory](https://www.filestash.app/docs/plugin/)
- [Hardening Guide](https://downloads.filestash.app/upload/hardening-guide.pdf)


# Vision &amp; Philosophy

Our goal is simple: **to build the best web based file manager ever made. Period.** But &quot;best&quot; means different things to different people, and making Filestash modular is the only sane model to accomplish that. Anything that isn&#039;t a fundamental truth of the universe and might spark a debate belongs in a plugin.

This modularity is made possible by the magic of programming interfaces. For example, if you want a [Dropbox-like frontend for FTP](https://news.ycombinator.com/item?id=9224), you will find out the [FTP plugin](https://github.com/mickael-kerjean/filestash/tree/master/server/plugin/plg_backend_ftp) simply implements this interface:
```go
type IBackend interface {
	Ls(path string) ([]os.FileInfo, error)           // list files in a folder
	Cat(path string) (io.ReadCloser, error)          // download a file
	Mkdir(path string) error                         // create a folder
	Rm(path string) error                            // remove something
	Mv(from string, to string) error                 // rename something
	Save(path string, file io.Reader) error          // save a file
	Touch(path string) error                         // create a file

	// I have omitted 2 other methods, a first one to enable connections reuse and
	// another one to declare what should the login form be like.
}
```

There are interfaces you can implement for every key component of Filestash: from storage, to authentication, authorisation, custom apps, search, thumbnailing, frontend patches, middleware, endpoint creation and a [few others](https://github.com/mickael-kerjean/filestash/blob/master/server/common/plugin.go).

To see what&#039;s currently installed in your instance, head over to [/about](https://demo.filestash.app/about). The inventory of plugins is [documented here](https://www.filestash.app/docs/plugin/).

# Roadmap

There are 2 major pieces of work currently underway:

&lt;ol&gt;
    &lt;li&gt;Making Filestash able to open virtually anything. Thanks to plugin, we&#039;re adding support for files your browser has never heard of, from astrophysics to embroidery patterns. Concretly we have added support for:
        &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_photography.zip&quot;&gt;photography&lt;/a&gt;: heif, nef, raf, tiff, raw, arw, sr2, srf, nrw, cr2, crw, x3f, pef, rw2, orf, mrw, mdc, mef, mos, dcr, kdc, 3fr, erf and srw&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_photography.zip&quot;&gt;astronomy&lt;/a&gt;: fits, xisf&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_science.zip&quot;&gt;science&lt;/a&gt;: with latex, plantuml &amp; pandoc compilers&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_musician.zip&quot;&gt;music&lt;/a&gt;: mid, midi, gp4 and gp5&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_gis.zip&quot;&gt;GIS&lt;/a&gt;: &lt;a href=&quot;https://www.filestash.app/tools/geojson-viewer.html&quot;&gt;geojson&lt;/a&gt;, &lt;a href=&quot;https://www.filestash.app/tools/shp-viewer.html&quot;&gt;shp&lt;/a&gt;, gpx, wms and &lt;a href=&quot;https://www.filestash.app/tools/dbf-viewer.html&quot;&gt;dbf&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_engineering.zip&quot;&gt;data engineering&lt;/a&gt;: &lt;a href=&quot;https://www.filestash.app/tools/parquet-viewer.html&quot;&gt;parquet&lt;/a&gt;, &lt;a href=&quot;https://www.filestash.app/tools/arrow-viewer.html&quot;&gt;arrow&lt;/a&gt;, &lt;a href=&quot;https://www.filestash.app/tools/feather-viewer.html&quot;&gt;feather&lt;/a&gt;, &lt;a href=&quot;https://www.filestash.app/tools/avro-viewer.html&quot;&gt;avro&lt;/a&gt;, &lt;a href=&quot;https://www.filestash.app/tools/orc-viewer.html&quot;&gt;orc&lt;/a&gt;, hdf5, h5, netcdf, nc, rds, rda and rdata&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_dev.zip&quot;&gt;dev&lt;/a&gt;: a, so, o, dylib, dll, har, cap, pcap, pcapng and &lt;a href=&quot;https://www.filestash.app/tools/sqlite-viewer.html&quot;&gt;sqlite&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_creative.zip&quot;&gt;creative work&lt;/a&gt;: svg, &lt;a href=&quot;https://www.filestash.app/tools/psd-viewer.html&quot;&gt;psd&lt;/a&gt;, ai, &lt;a href=&quot;https://www.filestash.app/tools/sketch-viewer.html&quot;&gt;sketch&lt;/a&gt;, &lt;a href=&quot;https://www.filestash.app/tools/cdr-viewer.html&quot;&gt;cdr&lt;/a&gt;, woff, woff2, ttf, otf, eot, exr, tga, pgm, ppm, dds, ktx, dpx, pcx, xpm, pnm, xbm, aai, xwd, cin, pbm, pcd, sgi, wbmp and rgb&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_biomed.zip&quot;&gt;biomedical&lt;/a&gt;: dicom, sam, bam, cif, pdb, xyz, sdf, mol, mol2 and mmtf&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_autodesk.zip&quot;&gt;autodesk&lt;/a&gt;: &lt;a href=&quot;https://www.filestash.app/tools/dwg-viewer.html&quot;&gt;dwg&lt;/a&gt; and &lt;a href=&quot;https://www.filestash.app/tools/dxf-viewer.html&quot;&gt;dxf&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_adobe.zip&quot;&gt;adobe&lt;/a&gt;: &lt;a href=&quot;https://www.filestash.app/tools/psd-viewer.html&quot;&gt;psd&lt;/a&gt;, ai, &lt;a href=&quot;https://www.filestash.app/tools/xd-viewer.html&quot;&gt;xd&lt;/a&gt;, &lt;a href=&quot;https://www.filestash.app/tools/dng-viewer.html&quot;&gt;dng&lt;/a&gt;, &lt;a href=&quot;https://www.filestash.app/tools/eps-viewer.html&quot;&gt;postscript&lt;/a&gt;, aco, ase, swf&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_3d.zip&quot;&gt;3d&lt;/a&gt;: fbx, gltf, obj, stl, step, mesh, ifc, dae&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_embroidery.zip&quot;&gt;embroidery&lt;/a&gt;: dgt, dst, dsb, dsz, edr, exp, 10o, col, hus, inf, jef, ksm, pcm, pcs, pes, sew, shv, sst, tap, u01, vip, vp3 and xxx&lt;/li&gt;
            &lt;li&gt;there is more to come as we stumbled upon new niches and spend time talking to real people.&lt;/li&gt;
        &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Getting to v1.0. Filestash is already rock solid, it has been in active development for over 8 years. But the bar for v1.0 will be reached when Filestash is objectively better than Dropbox, Google Drive, and Box by every single measurable metric we care about. That&#039;s the mission.&lt;/li&gt;
&lt;/ol&gt;

# Support

- Commercial Users ‚Üí [support contract](https://www.filestash.app/pricing/?origin=github)
- For individuals ‚Üí [#filestash](https://kiwiirc.com/nextclient/#irc://irc.libera.chat/#filestash?nick=guest??) on IRC (libera.chat).

Want to help us sprinkle some toppings on our noodle cups?
- Bitcoin: `3LX5KGmSmHDj5EuXrmUvcg77EJxCxmdsgW`
- [Open Collective](https://opencollective.com/filestash)


# Credits

Filestash stands on the shoulder of: [contributors](https://github.com/mickael-kerjean/filestash/graphs/contributors), folks developing [awesome libraries](https://github.com/mickael-kerjean/filestash/blob/master/go.mod), a whole bunch of C stuff (the [C standard library](https://imgs.xkcd.com/comics/dependency.png), [libjpeg](https://libjpeg-turbo.org/), [libpng](https://www.libpng.org/pub/png/libpng.html), [libgif](https://giflib.sourceforge.net/), [libraw](https://www.libraw.org/about) and many more), [fontawesome](https://fontawesome.com), [material](https://material.io/icons/), [Browser stack](https://www.browserstack.com/) to let us test on real devices, and the many guys from Nebraska and elsewhere who have been thanklessly maintaining the critical pieces that Filestash sits on top:

&lt;img src=&quot;https://imgs.xkcd.com/comics/dependency.png&quot; alt=&quot;credit to the nebraska guy on xkcd&quot; /&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[birobirobiro/awesome-shadcn-ui]]></title>
            <link>https://github.com/birobirobiro/awesome-shadcn-ui</link>
            <guid>https://github.com/birobirobiro/awesome-shadcn-ui</guid>
            <pubDate>Sun, 31 Aug 2025 00:05:21 GMT</pubDate>
            <description><![CDATA[A curated list of awesome things related to shadcn/ui.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/birobirobiro/awesome-shadcn-ui">birobirobiro/awesome-shadcn-ui</a></h1>
            <p>A curated list of awesome things related to shadcn/ui.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 17,112</p>
            <p>Forks: 999</p>
            <p>Stars today: 22 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;br&gt;
  &lt;img width=&quot;400&quot; src=&quot;https://raw.githubusercontent.com/birobirobiro/awesome-shadcn-ui/64729b2c178e3fdcb42c0c7bf341bcde7ae502ea/assets/logo.svg&quot; alt=&quot;logo of awesome-shadcn/ui repository&quot;&gt;
  &lt;br&gt;
  &lt;br&gt;
&lt;/p&gt;

&lt;h2 align=&#039;center&#039;&gt;awesome-shadcn/ui&lt;/h2&gt;

&lt;p align=&#039;center&#039;&gt;
A curated list of awesome things related to &lt;a href=&#039;https://ui.shadcn.com/&#039; target=&quot;_blank&quot;&gt;shadcn/ui&lt;/a&gt;
&lt;br&gt;&lt;br&gt;

&lt;p align=&#039;center&#039;&gt;
&lt;i&gt;Created by: &lt;a href=&#039;https://birobirobiro.dev/&#039; target=&quot;_blank&quot;&gt;birobirobiro.dev&lt;/a&gt;&lt;/i&gt;
&lt;br&gt;&lt;br&gt;

&lt;a href=&#039;https://github.com/birobirobiro/awesome-shadcn-ui/&#039; target=&quot;_blank&quot;&gt;
&lt;img src=&#039;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg&#039; alt=&#039;Awesome&#039;&gt;
&lt;/a&gt;
&lt;/p&gt;

## Libs and Components

| Name | Description | Link | Date |
|------|-------------|------|------|
| 21st.dev                              | Open source npm for shadcn/ui components. Also: Dribble for design engineers. Install UI components via shadcn CLI, or publish your own.                                                                                                        | [Link](https://21st.dev/)                                                               | 2024-12-06 
| 8bitcn.com                            | A set of retro-designed, accessible components and a code distribution platform. Open Source. Open Code.                                                                                                                                        | [Link](https://www.8bitcn.com/)                                                         | 2025-04-12 
| aceternity-ui                         | Copy paste the most trending react components without having to worry about styling and animations.                                                                                                                                             | [Link](https://ui.aceternity.com/)                                                      | 2024-12-06 
| animated-tabs                         | Vercel-like animated tabs.                                                                                                                                                                                                                      | [Link](https://github.com/mehrdadrafiee/animated-tabs)                                  | 2025-04-06 
| assistant-ui                          | React Components for AI Chat.                                                                                                                                                                                                                   | [Link](https://github.com/Yonom/assistant-ui)                                           | 2024-09-23 
| autocomplete-select-shadcn-ui         | Autocomplete component built with shadcn/ui and Fancy Multi Select by Maximilian Kaske.                                                                                                                                                         | [Link](https://www.armand-salle.fr/post/autocomplete-select-shadcn-ui)                  | 2024-04-07 
| auto-form                             | A React component that automatically creates a shadcn/ui form based on a zod schema.                                                                                                                                                            | [Link](https://github.com/vantezzen/auto-form)                                          | 2024-04-29 
| async-select                          | Async Select component built with shadcn/ui with debounce search.                                                                                                                                                                               | [Link](https://async.rdsx.dev)                                                          | 2024-07-22 
| berlix                                | Animated components library built using Tailwind CSS and Motion                                                                                                                                                                                 | [Link](https://berlix.vercel.app)                                                       | 2025-06-10 
| big-calendar                          | A modern, feature-rich calendar application with multiple viewing options built using Next.js, TypeScript, and Tailwind CSS.                                                                                                                    | [Link](https://github.com/lramos33/big-calendar)                                        | 2025-03-08 
| buouui                                | A UI component library and template suite based on shadcn/ui with stunning landing pages, templates, and rich animations.                                                                                                                       | [Link](https://buouui.com)                                                              | 2025-04-06 
| bundui                                | A collection of reusable animated components built with Tailwind CSS and Framer Motion.                                                                                                                                                         | [Link](https://bundui.io)                                                               | 2024-09-23 
| calendar                              | React/shadcn full calendar like Google Calendar                                                                                                                                                                                                 | [Link](https://github.com/charlietlamb/calendar)                                        | 2024-05-03 
| capture-photo                         | Browser-based React component for camera functionalities in web applications.                                                                                                                                                                   | [Link](https://github.com/UretzkyZvi/capture-photo)                                     | 2024-05-06 
| clerk-elements                        | Composable components for building custom UIs on top of Clerk&#039;s APIs.                                                                                                                                                                           | [Link](https://clerk.com/docs/elements/examples/shadcn-ui)                              | 2024-06-07 
| clerk-shadcn-theme                    | Synchronize Clerk SignIn/SignUp components with shadcn/ui styles.                                                                                                                                                                               | [Link](https://github.com/stormynight9/clerk-shadcn-theme)                              | 2024-06-07 
| commerce-ui                           | Components, blocks and examples to build e-commerce storefronts and apps.                                                                                                                                                                       | [Link](https://github.com/stackzero-labs/ui)                                            | 2025-02-20 
| confirm-dialog                        | A confirm dialog component built with shadcn/ui.                                                                                                                                                                                                | [Link](https://github.com/Aslam97/react-confirm-dialog)                                 | 2024-07-02 
| country-state-dropdown                | Component built with Nextjs, Tailwindcss, shadcn/ui &amp; Zustand.                                                                                                                                                                                  | [Link](https://github.com/Jayprecode/country-state-dropdown)                            | 2024-02-22 
| cult-ui                               | Curated set of animated shadcn-style React components.                                                                                                                                                                                          | [Link](https://www.cult-ui.com/)                                                        | 2024-05-29 
| credenza                              | Ready-made responsive modal component for shadcn/ui.                                                                                                                                                                                            | [Link](https://github.com/redpangilinan/credenza)                                       | 2024-06-07 
| crypto-charts                         | Crypto charts made for shadcn/ui using PythNetwork.                                                                                                                                                                                             | [Link](https://github.com/jstnw10/crypto-charts)                                        | 2024-07-16 
| date-range-picker-for-shadcn          | Multi-month views, text entry, preset ranges, responsive design, and date range comparisons.                                                                                                                                                    | [Link](https://github.com/johnpolacek/date-range-picker-for-shadcn)                     | 2024-04-29 
| date-time-picker-shadcn               | Datetime Picker for shadNext Project.                                                                                                                                                                                                           | [Link](https://shadcn-datetime-picker.vercel.app)                                       | 2024-07-16 
| date-time-range-picker-shadcn         | Fully featured date-time range picker with multi-month views, timezone support, preset ranges, and modular components for date and time selection.                                                                                              | [Link](https://date-time-range-picker.vercel.app/)                                      | 2025-03-08 
| datetime-picker                       | Datetime picker with timezone support, min/max dates, and month/year selection.                                                                                                                                                                 | [Link](https://shadcn-datetime-picker-xi.vercel.app)                                    | 2024-07-16 
| dnd-dashboard                         | Dashboard with drop-to-swap layouts using Next.js, shadcn/ui, and swapy.                                                                                                                                                                        | [Link](https://github.com/olliethedev/dnd-dashboard)                                    | 2024-10-17 
| downshift-shadcn-combobox             | Combobox/autocomplete component built with shadcn/ui and Downshift.                                                                                                                                                                             | [Link](https://github.com/TheOmer77/downshift-shadcn-combobox)                          | 2024-06-27 
| drag-to-resize-sidebar                | Extended shadcn/ui sidebar component with persisted state drag-to-resize functionality.                                                                                                                                                         | [Link](https://github.com/lumpinif/drag-to-resize-sidebar)                              | 2024-11-21 
| druid/ui                              | Intercom inspired AI chatbot and UI components built on shadcn/ui.                                                                                                                                                                              | [Link](https://druidui.com/)                                                            | 2024-11-21 
| drop-drawer                           | A dropdown menu on desktop and a drawer on mobile devices.                                                                                                                                                                                      | [Link](https://github.com/jiaweing/DropDrawer)                                          | 2025-05-13 
| dy-comps                              | shacn/ui &amp; Framer Motion React components ‚Äî flexible, responsive &amp; easy to drop into any project.                                                                                                                                               | [Link](https://dycomps.oimmi.com/)                                                      | 2025-03-08 
| echo-editor                           | Modern WYSIWYG rich-text editor based on tiptap and shadcn/ui.                                                                                                                                                                                  | [Link](https://github.com/Seedsa/echo-editor)                                           | 2024-06-07 
| edil-ozi                              | React components with Gsap, framer motion, and tailwind.                                                                                                                                                                                        | [Link](https://edilozi.pro/)                                                            | 2024-06-27 
| emblor                                | Customizable, accessible tag input component with shadcn/ui.                                                                                                                                                                                    | [Link](https://github.com/JaleelB/emblor)                                               | 2024-04-29 
| enhanced-button                       | Enhanced version of the default shadcn-button component.                                                                                                                                                                                        | [Link](https://github.com/jakobhoeg/enhanced-button)                                    | 2024-04-29 
|envin|Framework-agnostic, type-safe tool to validate and preview your environment variables - powered by your favorite schema validator.|[Link](https://envin.turbostarter.dev)| 2025-07-07 
| eo-n/ui                               | Enhanced UI components built on shadcn‚Äôs robust foundation, integrated with Base UI and Tailwind CSS for a modern and customizable design system.                                                                                               | [Link](https://github.com/aeonzz/eo-n)                                                  | 2025-04-04 
| event-timeline-roadmap                | A pair of customizable, animated event timeline and roadmap components                                                                                                                                                                          | [Link](https://roadmap.hncore.website/)                                                 | 2025-04-01 
| extend-ui                             | Reusable components built on shadcn/ui for web applications.                                                                                                                                                                                    | [Link](https://www.extend-ui.com/)                                                      | 2024-11-28 
| fancy-area                            | Textarea with @mention support inspired by GitHub&#039;s PR comment section.                                                                                                                                                                         | [Link](https://craft.mxkaske.dev/post/fancy-area)                                       | 2024-06-27 
| fancy-box                             | GitHub PR label selector-inspired Combobox with radix-ui components.                                                                                                                                                                            | [Link](https://craft.mxkaske.dev/post/fancy-box)                                        | 2024-07-11 
| fancy-multi-select                    | Multi Select Component inspired by campsite.design and cal.com.                                                                                                                                                                                 | [Link](https://craft.mxkaske.dev/post/fancy-multi-select)                               | 2024-04-29 
| fancy-switch                          | Fancy switch component built with shadcn/ui.                                                                                                                                                                                                    | [Link](https://github.com/Aslam97/react-fancy-switch)                                   | 2024-07-11 
| farmui                                | Styled and animated component library with npm package support.                                                                                                                                                                                 | [Link](https://farmui.com)                                                              | 2024-06-08 
| file-uploader                         | File uploader with shadcn/ui and react-dropzone.                                                                                                                                                                                                | [Link](https://github.com/sadmann7/file-uploader)                                       | 2024-06-07 
| file-vault                            | File upload component for React.                                                                                                                                                                                                                | [Link](https://github.com/ManishBisht777/file-vault)                                    | 2024-06-07 
| floating-dragable-card                | Dragable and resizable card using shadcn/ui elements.                                                                                                                                                                                           | [Link](https://github.com/nishansanjuka/react-drag-card)                                | 2024-11-13 
| fusion-ui                             | Library combining shadcn/ui and MagicUI.                                                                                                                                                                                                        | [Link](https://github.com/nyxb-ui/ui)                                                   | 2024-07-02 
| glasscn-ui                            | shadcn/ui component library with glassmorphism variants, and many additional components.                                                                                                                                                        | [Link](https://github.com/itsjavi/glasscn-ui)                                           | 2025-06-10 
| gluestack-ui                          | Rea

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mrmlnc/fast-glob]]></title>
            <link>https://github.com/mrmlnc/fast-glob</link>
            <guid>https://github.com/mrmlnc/fast-glob</guid>
            <pubDate>Sun, 31 Aug 2025 00:05:20 GMT</pubDate>
            <description><![CDATA[üöÄ It's a very fast and efficient glob library for Node.js]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mrmlnc/fast-glob">mrmlnc/fast-glob</a></h1>
            <p>üöÄ It's a very fast and efficient glob library for Node.js</p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,728</p>
            <p>Forks: 126</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre># fast-glob

&gt; It&#039;s a very fast and efficient [glob][glob_definition] library for [Node.js][node_js].

This package provides methods for traversing the file system and returning pathnames that matched a defined set of a specified pattern according to the rules used by the Unix Bash shell with some simplifications, meanwhile results are returned in **arbitrary order**. Quick, simple, effective.

## Table of Contents

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;Details&lt;/strong&gt;&lt;/summary&gt;

* [Highlights](#highlights)
* [Pattern syntax](#pattern-syntax)
  * [Basic syntax](#basic-syntax)
  * [Advanced syntax](#advanced-syntax)
* [Installation](#installation)
* [API](#api)
  * [Asynchronous](#asynchronous)
  * [Synchronous](#synchronous)
  * [Stream](#stream)
    * [patterns](#patterns)
    * [[options]](#options)
  * [Helpers](#helpers)
    * [generateTasks](#generatetaskspatterns-options)
    * [isDynamicPattern](#isdynamicpatternpattern-options)
    * [escapePath](#escapepathpath)
	* [convertPathToPattern](#convertpathtopatternpath)
* [Options](#options-3)
  * [Common](#common)
    * [cwd](#cwd)
    * [deep](#deep)
    * [followSymbolicLinks](#followsymboliclinks)
    * [fs](#fs)
    * [ignore](#ignore)
    * [suppressErrors](#suppresserrors)
    * [throwErrorOnBrokenSymbolicLink](#throwerroronbrokensymboliclink)
    * [signal](#signal)
  * [Output control](#output-control)
    * [absolute](#absolute)
    * [markDirectories](#markdirectories)
    * [objectMode](#objectmode)
    * [onlyDirectories](#onlydirectories)
    * [onlyFiles](#onlyfiles)
    * [stats](#stats)
    * [unique](#unique)
  * [Matching control](#matching-control)
    * [braceExpansion](#braceexpansion)
    * [caseSensitiveMatch](#casesensitivematch)
    * [dot](#dot)
    * [extglob](#extglob)
    * [globstar](#globstar)
    * [baseNameMatch](#basenamematch)
* [FAQ](#faq)
  * [What is a static or dynamic pattern?](#what-is-a-static-or-dynamic-pattern)
  * [How to write patterns on Windows?](#how-to-write-patterns-on-windows)
  * [Why are parentheses match wrong?](#why-are-parentheses-match-wrong)
  * [How to exclude directory from reading?](#how-to-exclude-directory-from-reading)
  * [How to use UNC path?](#how-to-use-unc-path)
  * [Compatible with `node-glob`?](#compatible-with-node-glob)
* [Benchmarks](#benchmarks)
  * [Server](#server)
  * [Nettop](#nettop)
* [Changelog](#changelog)
* [License](#license)

&lt;/details&gt;

## Highlights

* Fast. Probably the fastest.
* Supports multiple and negative patterns.
* Synchronous, Promise and Stream API.
* Object mode. Can return more than just strings.
* Error-tolerant.

## Pattern syntax

&gt; :warning: Always use forward-slashes in glob expressions (patterns and [`ignore`](#ignore) option). Use backslashes for escaping characters.

There is more than one form of syntax: basic and advanced. Below is a brief overview of the supported features. Also pay attention to our [FAQ](#faq).

&gt; :book: This package uses [`micromatch`][micromatch] as a library for pattern matching.

### Basic syntax

* An asterisk (`*`) ‚Äî matches everything except slashes (path separators), hidden files (names starting with `.`).
* A double star or globstar (`**`) ‚Äî matches zero or more directories.
* Question mark (`?`) ‚Äì matches any single character except slashes (path separators).
* Sequence (`[seq]`) ‚Äî matches any character in sequence.

&gt; :book: A few additional words about the [basic matching behavior][picomatch_matching_behavior].

Some examples:

* `src/**/*.js` ‚Äî matches all files in the `src` directory (any level of nesting) that have the `.js` extension.
* `src/*.??` ‚Äî matches all files in the `src` directory (only first level of nesting) that have a two-character extension.
* `file-[01].js` ‚Äî matches files: `file-0.js`, `file-1.js`.

### Advanced syntax

* [Escapes characters][micromatch_backslashes] (`\\`) ‚Äî matching special characters (`$^*+?()[]`) as literals.
* [POSIX character classes][picomatch_posix_brackets] (`[[:digit:]]`).
* [Extended globs][micromatch_extglobs] (`?(pattern-list)`).
* [Bash style brace expansions][micromatch_braces] (`{}`).
* [Regexp character classes][micromatch_regex_character_classes] (`[1-5]`).
* [Regex groups][regular_expressions_brackets] (`(a|b)`).

&gt; :book: A few additional words about the [advanced matching behavior][micromatch_extended_globbing].

Some examples:

* `src/**/*.{css,scss}` ‚Äî matches all files in the `src` directory (any level of nesting) that have the `.css` or `.scss` extension.
* `file-[[:digit:]].js` ‚Äî matches files: `file-0.js`, `file-1.js`, ‚Ä¶, `file-9.js`.
* `file-{1..3}.js` ‚Äî matches files: `file-1.js`, `file-2.js`, `file-3.js`.
* `file-(1|2)` ‚Äî matches files: `file-1.js`, `file-2.js`.

## Installation

```console
npm install fast-glob
```

## API

### Asynchronous

```js
fg.glob(patterns, [options])
fg.async(patterns, [options])
```

Returns a `Promise` with an array of matching entries.

```js
const fg = require(&#039;fast-glob&#039;);

const entries = await fg.glob([&#039;.editorconfig&#039;, &#039;**/index.js&#039;], { dot: true });

// [&#039;.editorconfig&#039;, &#039;services/index.js&#039;]
```

### Synchronous

```js
fg.globSync(patterns, [options])
```

Returns an array of matching entries.

```js
const fg = require(&#039;fast-glob&#039;);

const entries = fg.globSync([&#039;.editorconfig&#039;, &#039;**/index.js&#039;], { dot: true });

// [&#039;.editorconfig&#039;, &#039;services/index.js&#039;]
```

### Stream

```js
fg.globStream(patterns, [options])
fg.stream(patterns, [options])
```

Returns a [`ReadableStream`][node_js_stream_readable_streams] when the `data` event will be emitted with matching entry.

```js
const fg = require(&#039;fast-glob&#039;);

const stream = fg.globStream([&#039;.editorconfig&#039;, &#039;**/index.js&#039;], { dot: true });

for await (const entry of stream) {
	// .editorconfig
	// services/index.js
}
```

#### patterns

* Required: `true`
* Type: `string | string[]`

Any correct pattern(s).

&gt; :1234: [Pattern syntax](#pattern-syntax)
&gt;
&gt; :warning: This package does not respect the order of patterns. First, all the negative patterns are applied, and only then the positive patterns. If you want to get a certain order of records, use sorting or split calls.

#### [options]

* Required: `false`
* Type: [`Options`](#options-3)

See [Options](#options-3) section.

### Helpers

#### `generateTasks(patterns, [options])`

Returns the internal representation of patterns ([`Task`](./src/managers/tasks.ts) is a combining patterns by base directory).

```js
fg.generateTasks(&#039;*&#039;);

[{
    base: &#039;.&#039;, // Parent directory for all patterns inside this task
    dynamic: true, // Dynamic or static patterns are in this task
    patterns: [&#039;*&#039;],
    positive: [&#039;*&#039;],
    negative: []
}]
```

##### patterns

* Required: `true`
* Type: `string | string[]`

Any correct pattern(s).

##### [options]

* Required: `false`
* Type: [`Options`](#options-3)

See [Options](#options-3) section.

#### `isDynamicPattern(pattern, [options])`

Returns `true` if the passed pattern is a dynamic pattern.

&gt; :1234: [What is a static or dynamic pattern?](#what-is-a-static-or-dynamic-pattern)

```js
fg.isDynamicPattern(&#039;*&#039;); // true
fg.isDynamicPattern(&#039;abc&#039;); // false
```

##### pattern

* Required: `true`
* Type: `string`

Any correct pattern.

##### [options]

* Required: `false`
* Type: [`Options`](#options-3)

See [Options](#options-3) section.

#### `escapePath(path)`

Returns the path with escaped special characters depending on the platform.

* Posix:
  * `*?|(){}[]`;
  * `!` at the beginning of line;
  * `@+!` before the opening parenthesis;
  * `\\` before non-special characters;
* Windows:
  * `(){}[]`
  * `!` at the beginning of line;
  * `@+!` before the opening parenthesis;
  * Characters like `*?|` cannot be used in the path ([windows_naming_conventions][windows_naming_conventions]), so they will not be escaped;

```js
fg.escapePath(&#039;!abc&#039;);
// \\!abc
fg.escapePath(&#039;[OpenSource] mrmlnc ‚Äì fast-glob (Deluxe Edition) 2014&#039;) + &#039;/*.flac&#039;
// \\[OpenSource\\] mrmlnc ‚Äì fast-glob \\(Deluxe Edition\\) 2014/*.flac

fg.posix.escapePath(&#039;C:\\Program Files (x86)\\**\\*&#039;);
// C:\\\\Program Files \\(x86\\)\\*\\*\\*
fg.win32.escapePath(&#039;C:\\Program Files (x86)\\**\\*&#039;);
// Windows: C:\\Program Files \\(x86\\)\\**\\*
```

#### `convertPathToPattern(path)`

Converts a path to a pattern depending on the platform, including special character escaping.

* Posix. Works similarly to the `fg.posix.escapePath` method.
* Windows. Works similarly to the `fg.win32.escapePath` method, additionally converting backslashes to forward slashes in cases where they are not escape characters (`!()+@{}[]`).

```js
fg.convertPathToPattern(&#039;[OpenSource] mrmlnc ‚Äì fast-glob (Deluxe Edition) 2014&#039;) + &#039;/*.flac&#039;;
// \\[OpenSource\\] mrmlnc ‚Äì fast-glob \\(Deluxe Edition\\) 2014/*.flac

fg.convertPathToPattern(&#039;C:/Program Files (x86)/**/*&#039;);
// Posix: C:/Program Files \\(x86\\)/\\*\\*/\\*
// Windows: C:/Program Files \\(x86\\)/**/*

fg.convertPathToPattern(&#039;C:\\Program Files (x86)\\**\\*&#039;);
// Posix: C:\\\\Program Files \\(x86\\)\\*\\*\\*
// Windows: C:/Program Files \\(x86\\)/**/*

fg.posix.convertPathToPattern(&#039;\\\\?\\c:\\Program Files (x86)&#039;) + &#039;/**/*&#039;;
// Posix: \\\\\\?\\\\c:\\\\Program Files \\(x86\\)/**/* (broken pattern)
fg.win32.convertPathToPattern(&#039;\\\\?\\c:\\Program Files (x86)&#039;) + &#039;/**/*&#039;;
// Windows: //?/c:/Program Files \\(x86\\)/**/*
```

## Options

### Common options

#### cwd

* Type: `string`
* Default: `process.cwd()`

The current working directory in which to search.

#### deep

* Type: `number`
* Default: `Infinity`

Specifies the maximum depth of a read directory relative to the start directory.

For example, you have the following tree:

```js
dir/
‚îî‚îÄ‚îÄ one/            // 1
    ‚îî‚îÄ‚îÄ two/        // 2
        ‚îî‚îÄ‚îÄ file.js // 3
```

```js
// With base directory
fg.globSync(&#039;dir/**&#039;, { onlyFiles: false, deep: 1 }); // [&#039;dir/one&#039;]
fg.globSync(&#039;dir/**&#039;, { onlyFiles: false, deep: 2 }); // [&#039;dir/one&#039;, &#039;dir/one/two&#039;]

// With cwd option
fg.globSync(&#039;**&#039;, { onlyFiles: false, cwd: &#039;dir&#039;, deep: 1 }); // [&#039;one&#039;]
fg.globSync(&#039;**&#039;, { onlyFiles: false, cwd: &#039;dir&#039;, deep: 2 }); // [&#039;one&#039;, &#039;one/two&#039;]
```

&gt; :book: If you specify a pattern with some base directory, this directory will not participate in the calculation of the depth of the found directories. Think of it as a [`cwd`](#cwd) option.

#### followSymbolicLinks

* Type: `boolean`
* Default: `true`

Indicates whether to traverse descendants of symbolic link directories when expanding `**` patterns.

&gt; :book: Note that this option does not affect the base directory of the pattern. For example, if `./a` is a symlink to directory `./b` and you specified `[&#039;./a**&#039;, &#039;./b/**&#039;]` patterns, then directory `./a` will still be read.

&gt; :book: If the [`stats`](#stats) option is specified, the information about the symbolic link (`fs.lstat`) will be replaced with information about the entry (`fs.stat`) behind it.

#### fs

* Type: `FileSystemAdapter`
* Default: `fs.*`

Custom implementation of methods for working with the file system. Supports objects with enumerable properties only.

```ts
export interface FileSystemAdapter {
    lstat?: typeof fs.lstat;
    stat?: typeof fs.stat;
    lstatSync?: typeof fs.lstatSync;
    statSync?: typeof fs.statSync;
    readdir?: typeof fs.readdir;
    readdirSync?: typeof fs.readdirSync;
}
```

#### ignore

* Type: `string[]`
* Default: `[]`

An array of glob patterns to exclude matches. This is an alternative way to use negative patterns.

```js
dir/
‚îú‚îÄ‚îÄ package-lock.json
‚îî‚îÄ‚îÄ package.json
```

```js
fg.globSync([&#039;*.json&#039;, &#039;!package-lock.json&#039;]);            // [&#039;package.json&#039;]
fg.globSync(&#039;*.json&#039;, { ignore: [&#039;package-lock.json&#039;] }); // [&#039;package.json&#039;]
```

#### suppressErrors

* Type: `boolean`
* Default: `false`

By default this package suppress only `ENOENT` errors. Set to `true` to suppress any error.

&gt; :book: Can be useful when the directory has entries with a special level of access.

#### throwErrorOnBrokenSymbolicLink

* Type: `boolean`
* Default: `false`

Throw an error when symbolic link is broken if `true` or safely return `lstat` call if `false`.

&gt; :book: This option has no effect on errors when reading the symbolic link directory.

#### signal

* Type: [`AbortSignal`](https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal)
* Default: `undefined`

A signal to abort searching for entries on the file system. Works only with asynchronous methods for dynamic and static patterns.

&gt; :book: The abort signal does not interrupt the operation instantly. After the abort signal, there will be a brief period during which the tail of unprocessed but already read directories will be processed. New directories will not be added to the queue for reading, entries found in processed directories will not be emitted. Think of it as a no-op loop because we do not know at what stage of processing the abort signal was triggered.

### Output control

#### absolute

* Type: `boolean`
* Default: `false`

Return the absolute path for entries.

```js
fg.globSync(&#039;*.js&#039;, { absolute: false }); // [&#039;index.js&#039;]
fg.globSync(&#039;*.js&#039;, { absolute: true });  // [&#039;/home/user/index.js&#039;]
```

&gt; :book: This option is required if you want to use negative patterns with absolute path, for example, `!${__dirname}/*.js`.

#### markDirectories

* Type: `boolean`
* Default: `false`

Mark the directory path with the final slash.

```js
fg.globSync(&#039;*&#039;, { onlyFiles: false, markDirectories: false }); // [&#039;index.js&#039;, &#039;controllers&#039;]
fg.globSync(&#039;*&#039;, { onlyFiles: false, markDirectories: true });  // [&#039;index.js&#039;, &#039;controllers/&#039;]
```

#### objectMode

* Type: `boolean`
* Default: `false`

Returns objects (instead of strings) describing entries.

```js
fg.globSync(&#039;*&#039;, { objectMode: false }); // [&#039;src/index.js&#039;]
fg.globSync(&#039;*&#039;, { objectMode: true });  // [{ name: &#039;index.js&#039;, path: &#039;src/index.js&#039;, dirent: &lt;fs.Dirent&gt; }]
```

The object has the following fields:

* name (`string`) ‚Äî the last part of the path (basename)
* path (`string`) ‚Äî full path relative to the pattern base directory
* dirent ([`fs.Dirent`][node_js_fs_class_fs_dirent]) ‚Äî instance of `fs.Dirent`

&gt; :book: An object is an internal representation of entry, so getting it does not affect performance.

#### onlyDirectories

* Type: `boolean`
* Default: `false`

Return only directories.

```js
fg.globSync(&#039;*&#039;, { onlyDirectories: false }); // [&#039;index.js&#039;, &#039;src&#039;]
fg.globSync(&#039;*&#039;, { onlyDirectories: true });  // [&#039;src&#039;]
```

&gt; :book: If `true`, the [`onlyFiles`](#onlyfiles) option is automatically `false`.

#### onlyFiles

* Type: `boolean`
* Default: `true`

Return everything (file, socket, ‚Ä¶) except directories.

```js
fg.globSync(&#039;*&#039;, { onlyFiles: false }); // [&#039;index.js&#039;, &#039;src&#039;]
fg.globSync(&#039;*&#039;, { onlyFiles: true });  // [&#039;index.js&#039;]
```

#### stats

* Type: `boolean`
* Default: `false`

Enables an [object mode](#objectmode) with an additional field:

* stats ([`fs.Stats`][node_js_fs_class_fs_stats]) ‚Äî instance of `fs.Stats`

```js
fg.globSync(&#039;*&#039;, { stats: false }); // [&#039;src/index.js&#039;]
fg.globSync(&#039;*&#039;, { stats: true });  // [{ name: &#039;index.js&#039;, path: &#039;src/index.js&#039;, dirent: &lt;fs.Dirent&gt;, stats: &lt;fs.Stats&gt; }]
```

&gt; :book: Returns `fs.stat` instead of `fs.lstat` for symbolic links when the [`followSymbolicLinks`](#followsymboliclinks) option is specified.

#### unique

* Type: `boolean`
* Default: `true`

Ensures that the returned entries are unique.

```js
fg.globSync([&#039;*.json&#039;, &#039;package.json&#039;], { unique: false }); // [&#039;package.json&#039;, &#039;package.json&#039;]
fg.globSync([&#039;*.json&#039;, &#039;package.json&#039;], { unique: true });  // [&#039;package.json&#039;]
```

If `true` and similar entries are found, the result is the first found.

### Matching control

#### braceExpansion

* Type: `boolean`
* Default: `true`

Enables Bash-like brace expansion.

&gt; :1234: [Syntax description][bash_hackers_syntax_expansion_brace] or more [detailed description][micromatch_braces].

```js
dir/
‚îú‚îÄ‚îÄ abd
‚îú‚îÄ‚îÄ acd
‚îî‚îÄ‚îÄ a{b,c}d
```

```js
fg.globSync(&#039;a{b,c}d&#039;, { braceExpansion: false }); // [&#039;a{b,c}d&#039;]
fg.globSync(&#039;a{b,c}d&#039;, { braceExpansion: true });  // [&#039;abd&#039;, &#039;acd&#039;]
```

#### caseSensitiveMatch

* Type: `boolean`
* Default: `true`

Enables a [case-sensitive][wikipedia_case_sensitivity] mode for matching files.

```js
dir/
‚îú‚îÄ‚îÄ file.txt
‚îî‚îÄ‚îÄ File.txt
```

```js
fg.globSync(&#039;file.txt&#039;, { caseSensitiveMatch: false }); // [&#039;file.txt&#039;, &#039;File.txt&#039;]
fg.globSync(&#039;file.txt&#039;, { caseSensitiveMatch: true });  // [&#039;file.txt&#039;]
```

#### dot

* Type: `boolean`
* Default: `false`

Allow patterns to match entries that begin with a period (`.`).

&gt; :book: Note that an explicit dot in a portion of the pattern will always match dot files.

```js
dir/
‚îú‚îÄ‚îÄ .editorconfig
‚îî‚îÄ‚îÄ package.json
```

```js
fg.globSync(&#039;*&#039;, { dot: false }); // [&#039;package.json&#039;]
fg.globSync(&#039;*&#039;, { dot: true });  // [&#039;.editorconfig&#039;, &#039;package.json&#039;]
```

#### extglob

* Type: `boolean`
* Default: `true`

Enables Bash-like `extglob` functionality.

&gt; :1234: [Syntax description][micromatch_extglobs].

```js
dir/
‚îú‚îÄ‚îÄ README.md
‚îî‚îÄ‚îÄ package.json
```

```js
fg.globSync(&#039;*.+(json|md)&#039;, { extglob: false }); // []
fg.globSync(&#039;*.+(json|md)&#039;, { extglob: true });  // [&#039;README.md&#039;, &#039;package.json&#039;]
```

#### globstar

* Type: `boolean`
* Default: `true`

Enables recursively repeats a pattern containing `**`. If `false`, `**` behaves exactly like `*`.

```js
dir/
‚îî‚îÄ‚îÄ a
    ‚îî‚îÄ‚îÄ b
```

```js
fg.globSync(&#039;**&#039;, { onlyFiles: false, globstar: false }); // [&#039;a&#039;]
fg.globSync(&#039;**&#039;, { onlyFiles: false, globstar: true });  // [&#039;a&#039;, &#039;a/b&#039;]
```

#### baseNameMatch

* Type: `boolean`
* Default: `false`

If set to `true`, then patterns without slashes will be matched against the basename of the path if it contains slashes.

```js
dir/
‚îî‚îÄ‚îÄ one/
    ‚îî‚îÄ‚îÄ file.md
```

```js
fg.globSync(&#039;*.md&#039;, { baseNameMatch: false }); // []
fg.globSync(&#039;*.md&#039;, { baseNameMatch: true });  // [&#039;one/file.md&#039;]
```

## FAQ

## What is a static or dynamic pattern?

All patterns can be divided into two types:

* **static**. A pattern is considered static if it can be used to get an entry on the file system without using matching mechanisms. For example, the `file.js` pattern is a static pattern because we can just verify that it exists on the file system.
* **dynamic**. A pattern is considered dynamic if it cannot be used directly to find occurrences without using a matching mechanisms. For example, the `*` pattern is a dynamic pattern because we cannot use this pattern directly.

A pattern is considered dynamic if it contains the following characters (`‚Ä¶` ‚Äî any characters or their absence) or options:

* The [`caseSensitiveMatch`](#casesensitivematch) option is disabled
* `\\` (the escape character)
* `*`, `?`, `!` (at the beginning of line)
* `[‚Ä¶]`
* `(‚Ä¶|‚Ä¶)`
* `@(‚Ä¶)`, `!(‚Ä¶)`, `*(‚Ä¶)`, `?(‚Ä¶)`, `+(‚Ä¶)` (respects the [`extglob`](#extglob) option)
* `{‚Ä¶,‚Ä¶}`, `{‚Ä¶..‚Ä¶}` (respects the [`braceExpansion`](#braceexpansion) option)

## How to write patterns on Windows?

Always use forward-slashes in glob expressions (patterns and [`ignore`](#ignore) option). Use backslashes for escaping characters. With the [`cwd`](#cwd) option use a convenient format.

**Bad**

```ts
[
	&#039;directory\\*&#039;,
	path.join(process.cwd(), &#039;**&#039;)
]
```

**Good**

```ts
[
	&#039;directory/*&#039;,
	fg.convertPathToPattern(process.cwd()) + &#039;/**&#039;
]
```

&gt; :book: Use the [`.convertPathToPattern`](#convertpathtopatternpath) package to convert Windows-style path to a Unix-style path.

Read more about [matching with backslashes][micromatch_backslashes].

## Why are parentheses match wrong?

```js
dir/
‚îî‚îÄ‚îÄ (special-*file).txt
```

```js
fg.globSync([&#039;(special-*file).txt&#039;]) // []
```

Refers to Bash. You need to escape special characters:

```js
fg.globSync([&#039;\\(special-*file\\).txt&#039;]) // [&#039;(special-*file).txt&#039;]
```

Read more about [matching special characters as literals][picomatch_matching_special_characters_as_literals]. Or use the [`.escapePath`](#escapepathpath).

## How to exclude directory from reading?

You can use a negative pattern like this: `!**/node_modules` or `!**/node_modules/**`. Also you can use [`ignore`](#ignore) option. Just look at

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[drawdb-io/drawdb]]></title>
            <link>https://github.com/drawdb-io/drawdb</link>
            <guid>https://github.com/drawdb-io/drawdb</guid>
            <pubDate>Sun, 31 Aug 2025 00:05:19 GMT</pubDate>
            <description><![CDATA[Free, simple, and intuitive online database diagram editor and SQL generator.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/drawdb-io/drawdb">drawdb-io/drawdb</a></h1>
            <p>Free, simple, and intuitive online database diagram editor and SQL generator.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 32,450</p>
            <p>Forks: 2,386</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;sup&gt;Special thanks to:&lt;/sup&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://www.warp.dev/drawdb/&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Warp sponsorship&quot; width=&quot;280&quot; src=&quot;https://github.com/user-attachments/assets/c7f141e7-9751-407d-bb0e-d6f2c487b34f&quot;&gt;
    &lt;br&gt;
    &lt;b&gt;Next-gen AI-powered intelligent terminal for all platforms&lt;/b&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;br/&gt;
&lt;br/&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img width=&quot;64&quot; alt=&quot;drawdb logo&quot; src=&quot;./src/assets/icon-dark.png&quot;&gt;
    &lt;h1&gt;drawDB&lt;/h1&gt;
&lt;/div&gt;

&lt;h3 align=&quot;center&quot;&gt;Free, simple, and intuitive database schema editor and SQL generator.&lt;/h3&gt;

&lt;div align=&quot;center&quot; style=&quot;margin-bottom:12px;&quot;&gt;
    &lt;a href=&quot;https://drawdb.app/&quot; style=&quot;display: flex; align-items: center;&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Start%20building-grey&quot; alt=&quot;drawDB&quot;/&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://discord.gg/BrjZgNrmR6&quot; style=&quot;display: flex; align-items: center;&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/discord/1196658537208758412.svg?label=Join%20the%20Discord&amp;logo=discord&quot; alt=&quot;Discord&quot;/&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://x.com/drawDB_&quot; style=&quot;display: flex; align-items: center;&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Follow%20us%20on%20X-blue?logo=X&quot; alt=&quot;Follow us on X&quot;/&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;h3 align=&quot;center&quot;&gt;&lt;img width=&quot;700&quot; style=&quot;border-radius:5px;&quot; alt=&quot;demo&quot; src=&quot;drawdb.png&quot;&gt;&lt;/h3&gt;

DrawDB is a robust and user-friendly database entity relationship (DBER) editor right in your browser. Build diagrams with a few clicks, export sql scripts, customize your editor, and more without creating an account. See the full set of features [here](https://drawdb.app/).

## Getting Started

### Local Development

```bash
git clone https://github.com/drawdb-io/drawdb
cd drawdb
npm install
npm run dev
```

### Build

```bash
git clone https://github.com/drawdb-io/drawdb
cd drawdb
npm install
npm run build
```

### Docker Build

```bash
docker build -t drawdb .
docker run -p 3000:80 drawdb
```

If you wish to work with sharing, set up [server](https://github.com/drawdb-io/drawdb-server) and environment variables according to `.env.sample`. This is not required unless you want to share files.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[UseInterstellar/Interstellar]]></title>
            <link>https://github.com/UseInterstellar/Interstellar</link>
            <guid>https://github.com/UseInterstellar/Interstellar</guid>
            <pubDate>Sun, 31 Aug 2025 00:05:18 GMT</pubDate>
            <description><![CDATA[One of the most popular modern web proxies with blazing fast speeds and a variety of games.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/UseInterstellar/Interstellar">UseInterstellar/Interstellar</a></h1>
            <p>One of the most popular modern web proxies with blazing fast speeds and a variety of games.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,615</p>
            <p>Forks: 19,427</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/UseInterstellar/Interstellar/main/.github/branding/in.png&quot;&gt;
    &lt;p&gt;Serving over 15 million users since 2022.&lt;p&gt;
    &lt;p&gt;Interstellar is a web proxy with a Clean and Sleek UI and easy to use menus. Our goal is to provide the best user experience to everyone.&lt;/p&gt;
&lt;/div&gt;

![inpreview](https://github.com/UseInterstellar/Interstellar/assets/89202835/2669efed-5186-4932-83c4-725acae60bd2)

&gt; [!IMPORTANT]
&gt; If you fork this project, consider giving it a star in the original repository!

**Join Our [Discord Community](https://discord.gg/interstellar) for support, more links, and an active community!**

## Features

- About:Blank Cloaking
- Tab Cloaking
- Wide collection of apps &amp; games
- Clean, Easy to use UI
- Inspect Element
- Various Themes
- Password Protection (Optional)
- Built-in Tab System
- Now.gg Support
- Fast Speeds
- Geforce NOW Support

## Deployment

&gt; [!IMPORTANT]
&gt; You **cannot** deploy to static web hosts, including Netlify, Cloudflare Pages, and GitHub Pages.

### Password Protection

1. Go to the `config.js` file and set `challenge` to **true**. Then, set the environment variable as follows:
2. For PNPM: Run either `config=true pnpm start` or `$env:config=true; pnpm start`, depending on your server.
3. For Bun: Run either `config=true bun start` or `$env:config=true; bun start` if you prefer Bun.
4. For NPM: Run either `config=true npm start` or `$env:config=true; npm start` if you prefer NPM.


### Server Deployment

You must run these commands on your server:

```bash
git clone https://github.com/UseInterstellar/Interstellar
cd Interstellar
```

#### Ad-Free Deployment

```bash
git clone --branch Ad-Free https://github.com/UseInterstellar/Interstellar
cd Interstellar
```

Next depending on your package manager, run one of the following commands:

#### Bun

If you are using Bun, run the following commands:

```bash
bun i
bun start
```

#### pnpm

If you are using pnpm, run the following commands:

```bash
pnpm i
pnpm start
```

#### npm

If you are using npm, run the following commands:

```bash
npm i
npm run start
```

### Updating

```bash
cd Interstellar
git pull --force --allow-unrelated-histories # This may overwrite your local changes
```

&lt;a target=&quot;_blank&quot; href=&quot;https://heroku.com/deploy/?template=https://github.com/UseInterstellar/Interstellar&quot;&gt;&lt;img alt=&quot;Deploy to Heroku&quot; src=&quot;https://binbashbanana.github.io/deploy-buttons/buttons/remade/heroku.svg&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://app.koyeb.com/deploy?type=git&amp;repository=github.com/UseInterstellar/Interstellar&quot;&gt;&lt;img alt=&quot;Deploy to Koyeb&quot; src=&quot;https://binbashbanana.github.io/deploy-buttons/buttons/remade/koyeb.svg&quot;&gt;&lt;/a&gt;

### Deployment Alternatives

For more deployment options, join our [Discord Server](https://discord.gg/interstellar) for various ways to deploy Interstellar.
This includes methods of deploying to Render/OnRender.

#### What happened to Replit Deployment?

As of January 1st, 2024, Replit is [no longer free](https://blog.replit.com/hosting-changes). Try GitHub Codespaces instead.

### GitHub Codespaces

&gt; [!NOTE]
&gt; If you&#039;re setting the port below 1023, then you must run `sudo PORT=1023`

1. Create a GitHub account if you haven&#039;t already.
2. Click &quot;Code&quot; (green button) and then &quot;Create Codespace on main.&quot;
3. In the terminal at the bottom, paste `pnpm i &amp;&amp; pnpm start`.
4. Respond to the application popup by clicking &quot;Make public.&quot;
&gt; [!IMPORTANT]
&gt; Make sure you click the &quot;Make public.&quot; button, or the proxy won&#039;t function properly.&lt;br&gt;
&gt; If you get a Range Error, go back and make sure you clicked Make public!
5. Access the deployed website from the ports tab.
6. For subsequent uses in the same codespace, just run `pnpm start`

### Solution for if there is no popup.

1. Run `pnpm i`, and before `pnpm start`, prepend `PORT=8080`, replacing 8080 with another port. For example, `PORT=6969 pnpm start`.
2. If this does not work then you can prepend `$env:PORT=8080;`, replacing 8080 with another port. For example, `$env:PORT=6969; pnpm start`
3. Go to the ports tab, Click Forward A Port, And type the port number.
4. Right-click Visibility and set Port Visibility to Public.

&gt; [!NOTE]
&gt; We are committed to making Interstellar easy and personalized however, as of now we need your support in making it ad-free. Consider keeping ads so Interstellar can run freely or contribute by being a supporter.

## Report Issues

If you encounter problems, open an issue on GitHub, and we&#039;ll address it promptly.

&gt; [!TIP]
&gt; If you&#039;re having trouble, don&#039;t hesitate to reach out to us on [Discord](https://discord.gg/interstellar) for personalized support.

# Credits

A huge thanks goes out to all of the people who have contributed to Interstellar.

[![Contributors](https://contrib.rocks/image?repo=UseInterstellar/Interstellar)](https://github.com/UseInterstellar/Interstellar/graphs/contributors)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[GoogleChrome/lighthouse]]></title>
            <link>https://github.com/GoogleChrome/lighthouse</link>
            <guid>https://github.com/GoogleChrome/lighthouse</guid>
            <pubDate>Sun, 31 Aug 2025 00:05:17 GMT</pubDate>
            <description><![CDATA[Automated auditing, performance metrics, and best practices for the web.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/GoogleChrome/lighthouse">GoogleChrome/lighthouse</a></h1>
            <p>Automated auditing, performance metrics, and best practices for the web.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 29,330</p>
            <p>Forks: 9,558</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[codemirror/dev]]></title>
            <link>https://github.com/codemirror/dev</link>
            <guid>https://github.com/codemirror/dev</guid>
            <pubDate>Sun, 31 Aug 2025 00:05:16 GMT</pubDate>
            <description><![CDATA[Development repository for the CodeMirror editor project]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/codemirror/dev">codemirror/dev</a></h1>
            <p>Development repository for the CodeMirror editor project</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,942</p>
            <p>Forks: 426</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre># CodeMirror

[![Build Status](https://github.com/codemirror/dev/workflows/main/badge.svg)](https://github.com/codemirror/codemirror.next/actions)

This is the central repository for [CodeMirror](https://codemirror.net/). It holds the bug tracker and development scripts.

If you want to **use** CodeMirror, install the separate packages from npm, and ignore the contents of this repository. If you want to **develop on** CodeMirror, this repository provides scripts to install and work with the various packages.

To get started, make sure you are running [node.js](https://nodejs.org/) version 16. After cloning the repository, run

    node bin/cm.js install

to clone the packages that make up the system, install dependencies, and build the packages. At any time you can rebuild packages, either by running `npm run prepare` in their subdirectory, or all at once with

    node bin/cm.js build

Developing is best done by setting up

    npm run dev

which starts a server that automatically rebuilds the packages when their code changes and exposes a dev server on port 8090 running the [demo](http://localhost:8090) and [browser tests](http://localhost:8090/test/).

Please see [the website](https://codemirror.net/) for more information and [docs](https://codemirror.net/docs/ref).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[usebruno/bruno]]></title>
            <link>https://github.com/usebruno/bruno</link>
            <guid>https://github.com/usebruno/bruno</guid>
            <pubDate>Sun, 31 Aug 2025 00:05:15 GMT</pubDate>
            <description><![CDATA[Opensource IDE For Exploring and Testing API's (lightweight alternative to Postman/Insomnia)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/usebruno/bruno">usebruno/bruno</a></h1>
            <p>Opensource IDE For Exploring and Testing API's (lightweight alternative to Postman/Insomnia)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 36,523</p>
            <p>Forks: 1,822</p>
            <p>Stars today: 31 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[PrismJS/prism]]></title>
            <link>https://github.com/PrismJS/prism</link>
            <guid>https://github.com/PrismJS/prism</guid>
            <pubDate>Sun, 31 Aug 2025 00:05:14 GMT</pubDate>
            <description><![CDATA[Lightweight, robust, elegant syntax highlighting.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/PrismJS/prism">PrismJS/prism</a></h1>
            <p>Lightweight, robust, elegant syntax highlighting.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 12,756</p>
            <p>Forks: 1,333</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre># [Prism](https://prismjs.com/)

[![Build Status](https://github.com/PrismJS/prism/workflows/CI/badge.svg)](https://github.com/PrismJS/prism/actions)
[![npm](https://img.shields.io/npm/dw/prismjs.svg)](https://www.npmjs.com/package/prismjs)

Prism is a lightweight, robust, and elegant syntax highlighting library. It&#039;s a spin-off project from [Dabblet](https://dabblet.com/).

You can learn more on [prismjs.com](https://prismjs.com/).

[Why another syntax highlighter?](https://lea.verou.me/2012/07/introducing-prism-an-awesome-new-syntax-highlighter/#more-1841)

[More themes for Prism!](https://github.com/PrismJS/prism-themes)

## Contribute to Prism!

### **Important Notice**

We are currently working on [Prism v2](https://github.com/PrismJS/prism/discussions/3531) and will only accept security-relevant PRs for the time being.

Once work on Prism v2 is sufficiently advanced, we will accept PRs again. This will be announced on our [Discussion](https://github.com/PrismJS/prism/discussions) page and mentioned in the [roadmap discussion](https://github.com/PrismJS/prism/discussions/3531).

&lt;details&gt;
&lt;summary&gt;Prism v1 contributing notes&lt;/summary&gt;

Prism depends on community contributions to expand and cover a wider array of use cases. If you like it, consider giving back by sending a pull request. Here are a few tips:

- Read the [documentation](https://prismjs.com/extending.html). Prism was designed to be extensible.
- Do not edit `prism.js`, it‚Äôs just the version of Prism used by the Prism website and is built automatically. Limit your changes to the unminified files in the `components/` folder. `prism.js` and all minified files are generated by our build system (see below).
- Use `npm ci` to install Prism&#039;s dependencies. Do not use `npm install` because it will cause non-deterministic builds.
- The build system uses [gulp](https://github.com/gulpjs/gulp) to minify the files and build `prism.js`. With all of Prism&#039;s dependencies installed, you just need to run the command `npm run build`.
- Please follow the code conventions used in the files already. For example, I use [tabs for indentation and spaces for alignment](http://lea.verou.me/2012/01/why-tabs-are-clearly-superior/). Opening braces are on the same line, closing braces on their own line regardless of construct. There is a space before the opening brace. etc etc.
- Please try to err towards more smaller PRs rather than a few huge PRs. If a PR includes changes that I want to merge and also changes that I don&#039;t, handling it becomes difficult.
- My time is very limited these days, so it might take a long time to review bigger PRs (small ones are usually merged very quickly), especially those modifying the Prism Core. This doesn&#039;t mean your PR is rejected.
- If you contribute a new language definition, you will be responsible for handling bug reports about that language definition.
- If you [add a new language definition](https://prismjs.com/extending.html#creating-a-new-language-definition) or plugin, you need to add it to `components.json` as well and rebuild Prism by running `npm run build`, so that it becomes available to the download build page. For new languages, please also add a few [tests](https://prismjs.com/test-suite.html) and an example in the `examples/` folder.
- Go to [prism-themes](https://github.com/PrismJS/prism-themes) if you want to add a new theme.

Thank you so much for contributing!!

### Software requirements

Prism will run on [almost any browser](https://prismjs.com/#features-full) and Node.js version but you need the following software to contribute:

- Node.js &gt;= 10.x
- npm &gt;= 6.x

&lt;/details&gt;

## Translations

* [ÁÆÄ‰Ωì‰∏≠Êñá](https://www.awesomes.cn/repo/PrismJS/prism) (if unavailable, see [here](https://deepmind.t-salon.cc/article/113))
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[therealgliz/blooket-hacks]]></title>
            <link>https://github.com/therealgliz/blooket-hacks</link>
            <guid>https://github.com/therealgliz/blooket-hacks</guid>
            <pubDate>Sun, 31 Aug 2025 00:05:13 GMT</pubDate>
            <description><![CDATA[Multiple game hacks to use so the game become easier to play!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/therealgliz/blooket-hacks">therealgliz/blooket-hacks</a></h1>
            <p>Multiple game hacks to use so the game become easier to play!</p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,175</p>
            <p>Forks: 3,778</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre># blooket-hack

Hell i&#039;m actually gliz who created the blooket hacks. I got the repo from the guy who was impersonating me. 

**This repo will not be updated at all. If you have any questions join the discord server below I&#039;ll be answering them.**

**discord server: https://discord.gg/Nj9Zs5VtFp**

Proof thats it me: ![image](https://user-images.githubusercontent.com/108590774/177013795-80b0e338-fa58-4eba-837f-340bab0c4e9a.png)


# Contact

if you want to contact me just dm me on twitter https://twitter.com/glizuwu
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[wonderwhy-er/DesktopCommanderMCP]]></title>
            <link>https://github.com/wonderwhy-er/DesktopCommanderMCP</link>
            <guid>https://github.com/wonderwhy-er/DesktopCommanderMCP</guid>
            <pubDate>Sun, 31 Aug 2025 00:05:12 GMT</pubDate>
            <description><![CDATA[This is MCP server for Claude that gives it terminal control, file system search and diff file editing capabilities]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/wonderwhy-er/DesktopCommanderMCP">wonderwhy-er/DesktopCommanderMCP</a></h1>
            <p>This is MCP server for Claude that gives it terminal control, file system search and diff file editing capabilities</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,340</p>
            <p>Forks: 480</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre># Desktop Commander MCP
### Search, update, manage files and run terminal commands with AI

[![npm downloads](https://img.shields.io/npm/dw/@wonderwhy-er/desktop-commander)](https://www.npmjs.com/package/@wonderwhy-er/desktop-commander)
[![Trust Score](https://archestra.ai/mcp-catalog/api/badge/quality/wonderwhy-er/DesktopCommanderMCP)](https://archestra.ai/mcp-catalog/wonderwhy-er__desktopcommandermcp)
[![smithery badge](https://smithery.ai/badge/@wonderwhy-er/desktop-commander)](https://smithery.ai/server/@wonderwhy-er/desktop-commander)
[![Buy Me A Coffee](https://img.shields.io/badge/Buy%20Me%20A%20Coffee-support-yellow.svg)](https://www.buymeacoffee.com/wonderwhyer)


[![Discord](https://img.shields.io/badge/Join%20Discord-5865F2?style=for-the-badge&amp;logo=discord&amp;logoColor=white)](https://discord.gg/kQ27sNnZr7)


Work with code and text, run processes, and automate tasks, going far beyond other AI editors - without API token costs.


![Desktop Commander MCP](https://raw.githubusercontent.com/wonderwhy-er/ClaudeComputerCommander/main/docs/vertical_video_mobile.mp4)

&lt;a href=&quot;https://glama.ai/mcp/servers/zempur9oh4&quot;&gt;
  &lt;img width=&quot;380&quot; height=&quot;200&quot; src=&quot;https://glama.ai/mcp/servers/zempur9oh4/badge&quot; alt=&quot;Desktop Commander MCP&quot; /&gt;
&lt;/a&gt;

## Table of Contents
- [Features](#features)
- [How to install](#how-to-install)
- [Usage](#usage)
- [Handling Long-Running Commands](#handling-long-running-commands)
- [Work in Progress and TODOs](#roadmap)
- [Sponsors and Supporters](#support-desktop-commander)
- [Website](#website)
- [Media](#media)
- [Testimonials](#testimonials)
- [Frequently Asked Questions](#frequently-asked-questions)
- [Contributing](#contributing)
- [License](#license)

All of your AI development tools in one place.
Desktop Commander puts all dev tools in one chat.
Execute long-running terminal commands on your computer and manage processes through Model Context Protocol (MCP). Built on top of [MCP Filesystem Server](https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem) to provide additional search and replace file editing capabilities.

## Features

- **Enhanced terminal commands with interactive process control**
- **Execute code in memory (Python, Node.js, R) without saving files**
- **Instant data analysis - just ask to analyze CSV/JSON files**
- **Interact with running processes (SSH, databases, development servers)**
- Execute terminal commands with output streaming
- Command timeout and background execution support
- Process management (list and kill processes)
- Session management for long-running commands
- Server configuration management:
  - Get/set configuration values
  - Update multiple settings at once
  - Dynamic configuration changes without server restart
- Full filesystem operations:
  - Read/write files
  - Create/list directories
  - Move files/directories
  - Search files
  - Get file metadata
  - **Negative offset file reading**: Read from end of files using negative offset values (like Unix tail)
- Code editing capabilities:
  - Surgical text replacements for small changes
  - Full file rewrites for major changes
  - Multiple file support
  - Pattern-based replacements
  - vscode-ripgrep based recursive code or text search in folders
- Comprehensive audit logging:
  - All tool calls are automatically logged
  - Log rotation with 10MB size limit
  - Detailed timestamps and arguments

## How to install

Desktop Commander offers multiple installation methods to fit different user needs and technical requirements.

&gt; **üìã Update &amp; Uninstall Information:** Before choosing an installation option, note that **only Options 1, 2, 3, and 6 have automatic updates**. Options 4 and 5 require manual updates. See the sections below for update and uninstall instructions for each option.

### Option 1: Install through npx ‚≠ê **Auto-Updates** **Requires Node.js**
Just run this in terminal:
```
npx @wonderwhy-er/desktop-commander@latest setup
```

For debugging mode (allows Node.js inspector connection):
```
npx @wonderwhy-er/desktop-commander@latest setup --debug
```
Restart Claude if running.

**‚úÖ Auto-Updates:** Yes - automatically updates when you restart Claude  
**üîÑ Manual Update:** Run the setup command again  
**üóëÔ∏è Uninstall:** Run `npx @wonderwhy-er/desktop-commander@latest remove`

### Option 2: Using bash script installer (macOS) ‚≠ê **Auto-Updates** **Installs Node.js if needed**
For macOS users, you can use our automated bash installer which will check your Node.js version, install it if needed, and automatically configure Desktop Commander:
```
curl -fsSL https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install.sh | bash
```
This script handles all dependencies and configuration automatically for a seamless setup experience.

**‚úÖ Auto-Updates:** Yes - requires manual updates  
**üîÑ Manual Update:** Re-run the bash installer command above  
**üóëÔ∏è Uninstall:** Run `npx @wonderwhy-er/desktop-commander@latest remove`

### Option 3: Installing via Smithery ‚≠ê **Auto-Updates** **Requires Node.js**

To install Desktop Commander for Claude Desktop via [Smithery](https://smithery.ai/server/@wonderwhy-er/desktop-commander):

1. **Visit the Smithery page:** https://smithery.ai/server/@wonderwhy-er/desktop-commander
2. **Login to Smithery** if you haven&#039;t already
3. **Select your client** (Claude Desktop) on the right side
4. **Install with the provided key** that appears after selecting your client
5. **Restart Claude Desktop**

The old command-line installation method is no longer supported. Please use the web interface above for the most reliable installation experience.

**‚úÖ Auto-Updates:** Yes - automatically updates when you restart Claude  
**üîÑ Manual Update:** Visit the Smithery page and reinstall  

### Option 4: Add to claude_desktop_config manually ‚≠ê **Auto-Updates** **Requires Node.js**
Add this entry to your claude_desktop_config.json:

- On Mac: `~/Library/Application\ Support/Claude/claude_desktop_config.json`
- On Windows: `%APPDATA%\Claude\claude_desktop_config.json`
- On Linux: `~/.config/Claude/claude_desktop_config.json`

```json
{
  &quot;mcpServers&quot;: {
    &quot;desktop-commander&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;-y&quot;,
        &quot;@wonderwhy-er/desktop-commander@latest&quot;
      ]
    }
  }
}
```
Restart Claude if running.

**‚úÖ Auto-Updates:** Yes - automatically updates when you restart Claude  
**üîÑ Manual Update:** Run the setup command again  
**üóëÔ∏è Uninstall:** Run `npx @wonderwhy-er/desktop-commander@latest remove` or  remove the &quot;desktop-commander&quot; entry from your claude_desktop_config.json file

### ### Option 5: Checkout locally ‚ùå **Manual Updates** **Requires Node.js** ‚ùå **Manual Updates** **Requires Node.js**
1. Clone and build:
```bash
git clone https://github.com/wonderwhy-er/DesktopCommanderMCP.git
cd DesktopCommanderMCP
npm run setup
```
Restart Claude if running.

The setup command will:
- Install dependencies
- Build the server
- Configure Claude&#039;s desktop app
- Add MCP servers to Claude&#039;s config if needed

**‚ùå Auto-Updates:** No - requires manual git updates  
**üîÑ Manual Update:** `cd DesktopCommanderMCP &amp;&amp; git pull &amp;&amp; npm run setup`  
**üóëÔ∏è Uninstall:** Run `npx @wonderwhy-er/desktop-commander@latest remove` or remove the cloned directory and remove MCP server entry from Claude config

### Option 6: Docker Installation üê≥ ‚≠ê **Auto-Updates** **No Node.js Required**

Perfect for users who want complete or partial isolation or don&#039;t have Node.js installed. Desktop Commander runs in a sandboxed Docker container with a persistent work environment.

#### Prerequisites
- [Docker Desktop](https://www.docker.com/products/docker-desktop/) installed **and running**
- Claude Desktop app installed

**Important:** Make sure Docker Desktop is fully started before running the installer.

#### Automated Installation (Recommended)

**macOS/Linux:**
```bash
bash &lt;(curl -fsSL https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.sh)
```

**Windows PowerShell:**
```powershell
# Download and run the installer (one-liner)
iex ((New-Object System.Net.WebClient).DownloadString(&#039;https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.ps1&#039;))
```

The automated installer will:
- Check Docker installation
- Pull the latest Docker image 
- Prompt you to select folders for mounting
- Configure Claude Desktop automatically
- Restart Claude if possible

#### How Docker Persistence Works
Desktop Commander creates a persistent work environment that remembers everything between sessions:
- **Your development tools**: Any software you install (Node.js, Python, databases, etc.) stays installed
- **Your configurations**: Git settings, SSH keys, shell preferences, and other personal configs are preserved  
- **Your work files**: Projects and files in the workspace area persist across restarts
- **Package caches**: Downloaded packages and dependencies are cached for faster future installs

Think of it like having your own dedicated development computer that never loses your setup, but runs safely isolated from your main system.

#### Manual Docker Configuration

If you prefer manual setup, add this to your claude_desktop_config.json:

**Basic setup (no file access):**
```json
{
  &quot;mcpServers&quot;: {
    &quot;desktop-commander-in-docker&quot;: {
      &quot;command&quot;: &quot;docker&quot;,
      &quot;args&quot;: [
        &quot;run&quot;,
        &quot;-i&quot;,
        &quot;--rm&quot;,
        &quot;mcp/desktop-commander:latest&quot;
      ]
    }
  }
}
```

**With folder mounting:**
```json
{
  &quot;mcpServers&quot;: {
    &quot;desktop-commander-in-docker&quot;: {
      &quot;command&quot;: &quot;docker&quot;,
      &quot;args&quot;: [
        &quot;run&quot;,
        &quot;-i&quot;,
        &quot;--rm&quot;,
        &quot;-v&quot;, &quot;/Users/username/Desktop:/mnt/desktop&quot;,
        &quot;-v&quot;, &quot;/Users/username/Documents:/mnt/documents&quot;,
        &quot;mcp/desktop-commander:latest&quot;
      ]
    }
  }
}
```

**Advanced folder mounting:**
```json
{
  &quot;mcpServers&quot;: {
    &quot;desktop-commander-in-docker&quot;: {
      &quot;command&quot;: &quot;docker&quot;,
      &quot;args&quot;: [
        &quot;run&quot;, &quot;-i&quot;, &quot;--rm&quot;,
        &quot;-v&quot;, &quot;dc-system:/usr&quot;,
        &quot;-v&quot;, &quot;dc-home:/root&quot;, 
        &quot;-v&quot;, &quot;dc-workspace:/workspace&quot;,
        &quot;-v&quot;, &quot;dc-packages:/var&quot;,
        &quot;-v&quot;, &quot;/Users/username/Projects:/mnt/Projects&quot;,
        &quot;-v&quot;, &quot;/Users/username/Downloads:/mnt/Downloads&quot;,
        &quot;mcp/desktop-commander:latest&quot;
      ]
    }
  }
}
```

#### Docker Benefits
‚úÖ **Controlled Isolation:** Runs in sandboxed environment with persistent development state
‚úÖ **No Node.js Required:** Everything included in the container
‚úÖ **Cross-Platform:** Same experience on all operating systems
‚úÖ **Persistent Environment:** Your tools, files, configs, and work survives restarts

**‚úÖ Auto-Updates:** Yes - `latest` tag automatically gets newer versions  
**üîÑ Manual Update:** `docker pull mcp/desktop-commander:latest` then restart Claude  

#### Docker Management Commands

**macOS/Linux:**

Check installation status:
```bash
bash &lt;(curl -fsSL https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.sh) --status
```

Reset all persistent data (removes all installed tools and configs):
```bash
bash &lt;(curl -fsSL https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.sh) --reset
```

**Windows PowerShell:**

Check status:
```powershell
$script = (New-Object System.Net.WebClient).DownloadString(&#039;https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.ps1&#039;); &amp; ([ScriptBlock]::Create(&quot;$script&quot;)) -Status
```

Reset all data:
```powershell
$script = (New-Object System.Net.WebClient).DownloadString(&#039;https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.ps1&#039;); &amp; ([ScriptBlock]::Create(&quot;$script&quot;)) -Reset
```

Show help:
```powershell
$script = (New-Object System.Net.WebClient).DownloadString(&#039;https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.ps1&#039;); &amp; ([ScriptBlock]::Create(&quot;$script&quot;)) -Help
```

Verbose output:
```powershell
$script = (New-Object System.Net.WebClient).DownloadString(&#039;https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.ps1&#039;); &amp; ([ScriptBlock]::Create(&quot;$script&quot;)) -VerboseOutput
```  

#### Troubleshooting Docker Installation
If you broke the Docker container or need a fresh start:
```bash
# Reset and reinstall from scratch
bash &lt;(curl -fsSL https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.sh) --reset &amp;&amp; bash &lt;(curl -fsSL https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.sh)
```
This will completely reset your persistent environment and reinstall everything fresh with exception of not touching mounted folders

## Updating &amp; Uninstalling Desktop Commander

### Automatic Updates (Options 1, 2, 3, 4 &amp; 6)
**Options 1 (npx), Option 2 (bash installer), 3 (Smithery), 4 (manual config), and 6 (Docker)** automatically update to the latest version whenever you restart Claude. No manual intervention needed.

### Manual Updates (Option 5)
- **Option 5 (local checkout):** `cd DesktopCommanderMCP &amp;&amp; git pull &amp;&amp; npm run setup`

### Uninstalling Desktop Commander
#### ü§ñ Automatic Uninstallation (Recommended)

The easiest way to completely remove Desktop Commander:

```bash
npx @wonderwhy-er/desktop-commander@latest remove
```

This automatic uninstaller will:
- ‚úÖ Remove Desktop Commander from Claude&#039;s MCP server configuration
- ‚úÖ Create a backup of your Claude config before making changes
- ‚úÖ Provide guidance for complete package removal
- ‚úÖ Restore from backup if anything goes wrong

#### üîß Manual Uninstallation

If the automatic uninstaller doesn&#039;t work or you prefer manual removal:

##### Remove from Claude Configuration

1. **Locate your Claude Desktop config file:**
  - **macOS:** `~/Library/Application Support/Claude/claude_desktop_config.json`
  - **Windows:** `%APPDATA%\Claude\claude_desktop_config.json`
  - **Linux:** `~/.config/Claude/claude_desktop_config.json`

2. **Edit the config file:**
  - Open the file in a text editor
  - Find and remove the `&quot;desktop-commander&quot;` entry from the `&quot;mcpServers&quot;` section
  - Save the file

  **Example - Remove this section:**
  ```json
  {
      &quot;desktop-commander&quot;: {
        &quot;command&quot;: &quot;npx&quot;,
        &quot;args&quot;: [&quot;@wonderwhy-er/desktop-commander@latest&quot;]
      }
  }
  ```

Close and restart Claude Desktop to complete the removal.

#### üÜò Troubleshooting

**If automatic uninstallation fails:**
- Use manual uninstallation as a fallback

**If Claude won&#039;t start after uninstalling:**
- Restore the backup config file created by the uninstaller
- Or manually fix the JSON syntax in your claude_desktop_config.json

**Need help?**
- Join our Discord community: https://discord.com/invite/kQ27sNnZr7

## Usage

The server provides a comprehensive set of tools organized into several categories:

### Available Tools

| Category | Tool | Description |
|----------|------|-------------|
| **Configuration** | `get_config` | Get the complete server configuration as JSON (includes blockedCommands, defaultShell, allowedDirectories, fileReadLineLimit, fileWriteLineLimit, telemetryEnabled) |
| | `set_config_value` | Set a specific configuration value by key. Available settings: &lt;br&gt;‚Ä¢ `blockedCommands`: Array of shell commands that cannot be executed&lt;br&gt;‚Ä¢ `defaultShell`: Shell to use for commands (e.g., bash, zsh, powershell)&lt;br&gt;‚Ä¢ `allowedDirectories`: Array of filesystem paths the server can access for file operations (‚ö†Ô∏è terminal commands can still access files outside these directories)&lt;br&gt;‚Ä¢ `fileReadLineLimit`: Maximum lines to read at once (default: 1000)&lt;br&gt;‚Ä¢ `fileWriteLineLimit`: Maximum lines to write at once (default: 50)&lt;br&gt;‚Ä¢ `telemetryEnabled`: Enable/disable telemetry (boolean) |
| **Terminal** | `start_process` | Start programs with smart detection of when they&#039;re ready for input |
| | `interact_with_process` | Send commands to running programs and get responses |
| | `read_process_output` | Read output from running processes |
| | `force_terminate` | Force terminate a running terminal session |
| | `list_sessions` | List all active terminal sessions |
| | `list_processes` | List all running processes with detailed information |
| | `kill_process` | Terminate a running process by PID |
| **Filesystem** | `read_file` | Read contents from local filesystem or URLs with line-based pagination (supports positive/negative offset and length parameters) |
| | `read_multiple_files` | Read multiple files simultaneously |
| | `write_file` | Write file contents with options for rewrite or append mode (uses configurable line limits) |
| | `create_directory` | Create a new directory or ensure it exists |
| | `list_directory` | Get detailed listing of files and directories |
| | `move_file` | Move or rename files and directories |
| | `search_files` | Find files by name using case-insensitive substring matching |
| | `search_code` | Search for text/code patterns within file contents using ripgrep |
| | `get_file_info` | Retrieve detailed metadata about a file or directory |
| **Text Editing** | `edit_block` | Apply targeted text replacements with enhanced prompting for smaller edits (includes character-level diff feedback) |
| **Analytics** | `get_usage_stats` | Get usage statistics for your own insight |
| | `give_feedback_to_desktop_commander` | Open feedback form in browser to provide feedback to Desktop Commander Team |

### Quick Examples

**Data Analysis:**
```
&quot;Analyze sales.csv and show top customers&quot; ‚Üí Claude runs Python code in memory
```

**Remote Access:**
```
&quot;SSH to my server and check disk space&quot; ‚Üí Claude maintains SSH session
```

**Development:**
```
&quot;Start Node.js and test this API&quot; ‚Üí Claude runs interactive Node session
```

### Tool Usage Examples

Search/Replace Block Format:
```
filepath.ext
&lt;&lt;&lt;&lt;&lt;&lt;&lt; SEARCH
content to find
=======
new content
&gt;&gt;&gt;&gt;&gt;&gt;&gt; REPLACE
```

Example:
```
src/main.js
&lt;&lt;&lt;&lt;&lt;&lt;&lt; SEARCH
console.log(&quot;old message&quot;);
=======
console.log(&quot;new message&quot;);
&gt;&gt;&gt;&gt;&gt;&gt;&gt; REPLACE
```

### Enhanced Edit Block Features

The `edit_block` tool includes several enhancements for better reliability:

1. **Improved Prompting**: Tool descriptions now emphasize making multiple small, focused edits rather than one large change
2. **Fuzzy Search Fallback**: When exact matches fail, it performs fuzzy search and provides detailed feedback
3. **Character-level Diffs**: Shows exactly what&#039;s different using `{-removed-}{+added+}` format
4. **Multiple Occurrence Support**: Can replace multiple instances with `expected_replacements` parameter
5. **Comprehensive Logging**: All fuzzy searches are logged for analysis and debugging

When a search fails, you&#039;ll see detailed information about the closest match found, including similarity percentage, execution time, and character differences. All these details are automatically logged for later analysis using the fuzzy search log tools.

### Docker Support

### üê≥ Isolated Environment Usage

Desktop Commander can be run in Docker containers for **complete isolation from your host system**, providing **zero risk to your computer**. This is perfect for testing, development, or when you want complete sandboxing.

### Installation Instructions

1. **Install Docker for Windows/Mac**
   - Download and install Docker Desktop from [docker.com](https://www.docker.com/products/docker-desktop/)

2. **Get Desktop Commander Docker Configuration**
   - Visit: https://hub.docker.com/mcp/server/desktop-commander/manual
   - **Option A:** Use the provided terminal command for automated setup
   - **Option B:** Click &quot;Standalone&quot; to get the config JSON and add it manually to your Claude Desktop config
 ![docker-config.png](screenshots/docker-config.png)

3. **Mount Your Machine Folders (Coming Soon)**
   - Instructions on how to mount your local directories into the Docker container will be provided soon
   - This will allow 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[sampotts/plyr]]></title>
            <link>https://github.com/sampotts/plyr</link>
            <guid>https://github.com/sampotts/plyr</guid>
            <pubDate>Sun, 31 Aug 2025 00:05:11 GMT</pubDate>
            <description><![CDATA[A simple HTML5, YouTube and Vimeo player]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/sampotts/plyr">sampotts/plyr</a></h1>
            <p>A simple HTML5, YouTube and Vimeo player</p>
            <p>Language: JavaScript</p>
            <p>Stars: 29,104</p>
            <p>Forks: 3,098</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre>Plyr is a simple, lightweight, accessible and customizable HTML5, YouTube and Vimeo media player that supports [_modern_](#browser-support) browsers.

[Checkout the demo](https://plyr.io) - [Donate](#donate) - [Slack](https://bit.ly/plyr--chat) - [Video hosting](https://mux.com?ref=plyr-github)

[![npm version](https://badge.fury.io/js/plyr.svg)](https://badge.fury.io/js/plyr) [![Gitpod Ready-to-Code](https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod)](https://gitpod.io/#https://github.com/sampotts/plyr) [![Financial Contributors on Open Collective](https://opencollective.com/plyr/all/badge.svg?label=financial+contributors)](https://opencollective.com/plyr)

[![Screenshot of Plyr](https://cdn.plyr.io/static/screenshot.webp)](https://plyr.io)

# Features

- üìº **HTML Video &amp; Audio, YouTube &amp; Vimeo** - support for the major formats
- üí™ **Accessible** - full support for VTT captions and screen readers
- üîß **[Customizable](#html)** - make the player look how you want with the markup you want
- üòé **Clean HTML** - uses the _right_ elements. `&lt;input type=&quot;range&quot;&gt;` for volume and `&lt;progress&gt;` for progress and well, `&lt;button&gt;`s for buttons. There&#039;s no
  `&lt;span&gt;` or `&lt;a href=&quot;#&quot;&gt;` button hacks
- üì± **Responsive** - works with any screen size
- üíµ **[Monetization](#ads)** - make money from your videos
- üìπ **[Streaming](#demos)** - support for hls.js, Shaka and dash.js streaming playback
- üéõ **[API](#api)** - toggle playback, volume, seeking, and more through a standardized API
- üé§ **[Events](#events)** - no messing around with Vimeo and YouTube APIs, all events are standardized across formats
- üîé **[Fullscreen](#fullscreen)** - supports native fullscreen with fallback to &quot;full window&quot; modes
- ‚å®Ô∏è **[Shortcuts](#shortcuts)** - supports keyboard shortcuts
- üñ• **Picture-in-Picture** - supports picture-in-picture mode
- üì± **Playsinline** - supports the `playsinline` attribute
- üèé **Speed controls** - adjust speed on the fly
- üìñ **Multiple captions** - support for multiple caption tracks
- üåé **i18n support** - support for internationalization of controls
- üëå **[Preview thumbnails](#preview-thumbnails)** - support for displaying preview thumbnails
- ü§ü **No frameworks** - written in &quot;vanilla&quot; ES6 JavaScript, no jQuery required
- üíÅ‚Äç‚ôÄÔ∏è **Sass** - to include in your build processes

## Demos

You can try Plyr in Codepen using our minimal templates: [HTML5 video](https://codepen.io/pen?template=bKeqpr), [HTML5 audio](https://codepen.io/pen?template=rKLywR), [YouTube](https://codepen.io/pen?template=GGqbbJ), [Vimeo](https://codepen.io/pen?template=bKeXNq). For Streaming we also have example integrations with: [Dash.js](https://codepen.io/pen?template=GRoogML), [Hls.js](https://codepen.io/pen?template=oyLKQb) and [Shaka Player](https://codepen.io/pen?template=ZRpzZO)

# Quick setup

## HTML

Plyr extends upon the standard [HTML5 media element](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement) markup so that&#039;s all you need for those types.

### HTML5 Video

```html
&lt;video id=&quot;player&quot; playsinline controls data-poster=&quot;/path/to/poster.jpg&quot;&gt;
  &lt;source src=&quot;/path/to/video.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;source src=&quot;/path/to/video.webm&quot; type=&quot;video/webm&quot; /&gt;

  &lt;!-- Captions are optional --&gt;
  &lt;track kind=&quot;captions&quot; label=&quot;English captions&quot; src=&quot;/path/to/captions.vtt&quot; srclang=&quot;en&quot; default /&gt;
&lt;/video&gt;
```

**Note**: The poster image should be specified using `data-poster`. This is to prevent it [being downloaded twice](https://github.com/sampotts/plyr/issues/1531). If you&#039;re sure the image will be cached, you can still use the `poster` attribute for true progressive enhancement.

### HTML5 Audio

```html
&lt;audio id=&quot;player&quot; controls&gt;
  &lt;source src=&quot;/path/to/audio.mp3&quot; type=&quot;audio/mp3&quot; /&gt;
  &lt;source src=&quot;/path/to/audio.ogg&quot; type=&quot;audio/ogg&quot; /&gt;
&lt;/audio&gt;
```

For YouTube and Vimeo players, Plyr uses progressive enhancement to enhance the default `&lt;iframe&gt;` embeds. Below are some examples. The `plyr__video-embed` classname will make the embed responsive. You can add the `autoplay`, `loop`, `hl` (YouTube only) and `playsinline` (YouTube only) query parameters to the URL and they will be set as config options automatically. For YouTube, the `origin` should be updated to reflect the domain you&#039;re hosting the embed on, or you can opt to omit it.

### YouTube

We recommend [progressive enhancement](https://www.smashingmagazine.com/2009/04/progressive-enhancement-what-it-is-and-how-to-use-it/) with the embedded players. You can elect to use an `&lt;iframe&gt;` as the source element (which Plyr will progressively enhance) or a bog standard `&lt;div&gt;` with two essential data attributes - `data-plyr-provider` and `data-plyr-embed-id`.

```html
&lt;div class=&quot;plyr__video-embed&quot; id=&quot;player&quot;&gt;
  &lt;iframe
    src=&quot;https://www.youtube.com/embed/bTqVqk7FSmY?origin=https://plyr.io&amp;amp;iv_load_policy=3&amp;amp;modestbranding=1&amp;amp;playsinline=1&amp;amp;showinfo=0&amp;amp;rel=0&amp;amp;enablejsapi=1&quot;
    allowfullscreen
    allowtransparency
    allow=&quot;autoplay&quot;
  &gt;&lt;/iframe&gt;
&lt;/div&gt;
```

_Note_: The `plyr__video-embed` classname will make the player a responsive 16:9 (most common) iframe embed. When plyr itself kicks in, your custom `ratio` config option will be used.

Or the `&lt;div&gt;` non progressively enhanced method:

```html
&lt;div id=&quot;player&quot; data-plyr-provider=&quot;youtube&quot; data-plyr-embed-id=&quot;bTqVqk7FSmY&quot;&gt;&lt;/div&gt;
```

_Note_: The `data-plyr-embed-id` can either be the video ID or URL for the media.

### Vimeo

Much the same as YouTube above.

```html
&lt;div class=&quot;plyr__video-embed&quot; id=&quot;player&quot;&gt;
  &lt;iframe
    src=&quot;https://player.vimeo.com/video/76979871?loop=false&amp;amp;byline=false&amp;amp;portrait=false&amp;amp;title=false&amp;amp;speed=true&amp;amp;transparent=0&amp;amp;gesture=media&quot;
    allowfullscreen
    allowtransparency
    allow=&quot;autoplay&quot;
  &gt;&lt;/iframe&gt;
&lt;/div&gt;
```

Or the `&lt;div&gt;` non progressively enhanced method:

```html
&lt;div id=&quot;player&quot; data-plyr-provider=&quot;vimeo&quot; data-plyr-embed-id=&quot;76979871&quot;&gt;&lt;/div&gt;
```

## JavaScript

You can use Plyr as an ES6 module as follows:

```js
import Plyr from &#039;plyr&#039;;

const player = new Plyr(&#039;#player&#039;);
```

Alternatively you can include the `plyr.js` script before the closing `&lt;/body&gt;` tag and then in your JS create a new instance of Plyr as below.

```html
&lt;script src=&quot;path/to/plyr.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  const player = new Plyr(&#039;#player&#039;);
&lt;/script&gt;
```

See [initialising](#initializing) for more information on advanced setups.

You can use our CDN (provided by [Cloudflare](https://www.cloudflare.com/)) for the JavaScript. There&#039;s 2 versions; one with and one without [polyfills](#polyfills). My recommendation would be to manage polyfills separately as part of your application but to make life easier you can use the polyfilled build.

```html
&lt;script src=&quot;https://cdn.plyr.io/3.8.3/plyr.js&quot;&gt;&lt;/script&gt;
```

...or...

```html
&lt;script src=&quot;https://cdn.plyr.io/3.8.3/plyr.polyfilled.js&quot;&gt;&lt;/script&gt;
```

## CSS

Include the `plyr.css` stylesheet into your `&lt;head&gt;`.

```html
&lt;link rel=&quot;stylesheet&quot; href=&quot;path/to/plyr.css&quot; /&gt;
```

If you want to use our CDN (provided by [Cloudflare](https://www.cloudflare.com/)) for the default CSS, you can use the following:

```html
&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.plyr.io/3.8.3/plyr.css&quot; /&gt;
```

## SVG Sprite

The SVG sprite is loaded automatically from our CDN (provided by [Cloudflare](https://www.cloudflare.com/)). To change this, see the [options](#options) below. For
reference, the CDN hosted SVG sprite can be found at `https://cdn.plyr.io/3.8.3/plyr.svg`.

### Self hosting

If you don&#039;t want to create a build system to include Plyr as an npm module, you can use the pre-built files. You have a few options:

- Download the files from the CDN links above, they&#039;re already minified.
- Download the files from [unpkg](https://unpkg.com/browse/plyr/dist/) or similar services.
- Build the project yourself using `npm i &amp;&amp; npm run build`, which installs the dependencies and spits out a build to `dist`.

# Ads

Plyr has partnered up with [vi.ai](https://vi.ai/publisher-video-monetization/?aid=plyrio) to offer monetization options for your videos. Getting setup is easy:

- [Sign up for a vi.ai account](https://vi.ai/publisher-video-monetization/?aid=plyrio)
- Grab your publisher ID from the code snippet
- Enable ads in the [config options](#options) and enter your publisher ID

Any questions regarding the ads can be sent straight to vi.ai and any issues with rendering raised through GitHub issues.

If you do not wish to use Vi, you can set your own `ads.tagUrl` [option](#options).

# Advanced

## Customizing the CSS

If you want to change any design tokens used for the rendering of the player, you can do so using [CSS Custom Properties](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties).

Here&#039;s a list of the properties and what they are used for:

| Name                                           | Description                                                                                             | Default / Fallback                                                    |
| ---------------------------------------------- | ------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------- |
| `--plyr-color-main`                            | The primary UI color.                                                                                   | ![#f03c15](https://place-hold.it/15/00b3ff/000000?text=+) `#00b3ff`   |
| `--plyr-video-background`                      | The background color of video and poster wrappers for using alpha channel videos and poster images.     | `rgba(0, 0, 0, 1)`                                                    |
| `--plyr-focus-visible-color`                   | The color used for the focus styles when an element is `:focus-visible` (keyboard focused).             | `--plyr-color-main`                                                   |
| `--plyr-badge-background`                      | The background color for badges in the menu.                                                            | ![#4a5464](https://place-hold.it/15/4a5464/000000?text=+) `#4a5464`   |
| `--plyr-badge-text-color`                      | The text color for badges.                                                                              | ![#ffffff](https://place-hold.it/15/ffffff/000000?text=+) `#ffffff`   |
| `--plyr-badge-border-radius`                   | The border radius used for badges.                                                                      | `2px`                                                                 |
| `--plyr-captions-background`                   | The color for the background of captions.                                                               | `rgba(0, 0, 0, 0.8)`                                                  |
| `--plyr-captions-text-color`                   | The color used for the captions text.                                                                   | ![#ffffff](https://place-hold.it/15/ffffff/000000?text=+) `#ffffff`   |
| `--plyr-control-icon-size`                     | The size of the icons used in the controls.                                                             | `18px`                                                                |
| `--plyr-control-spacing`                       | The space between controls (sometimes used in a multiple - e.g. `10px / 2 = 5px`).                      | `10px`                                                                |
| `--plyr-control-padding`                       | The padding inside controls.                                                                            | `--plyr-control-spacing * 0.7` (`7px`)                                |
| `--plyr-control-radius`                        | The border radius used on controls.                                                                     | `3px`                                                                 |
| `--plyr-control-toggle-checked-background`     | The background color used for checked menu items.                                                       | `--plyr-color-main`                                                   |
| `--plyr-video-controls-background`             | The background for the video controls.                                                                  | `linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.75))`              |
| `--plyr-video-control-color`                   | The text/icon color for video controls.                                                                 | ![#ffffff](https://place-hold.it/15/ffffff/000000?text=+) `#ffffff`   |
| `--plyr-video-control-color-hover`             | The text/icon color used when video controls are `:hover`, `:focus` and `:focus-visible` (equivalent).  | ![#ffffff](https://place-hold.it/15/ffffff/000000?text=+) `#ffffff`   |
| `--plyr-video-control-background-hover`        | The background color used when video controls are `:hover`, `:focus` and `:focus-visible` (equivalent). | `--plyr-color-main`                                                   |
| `--plyr-audio-controls-background`             | The background for the audio controls.                                                                  | ![#ffffff](https://place-hold.it/15/ffffff/000000?text=+) `#ffffff`   |
| `--plyr-audio-control-color`                   | The text/icon color for audio controls.                                                                 | ![#4a5464](https://place-hold.it/15/4a5464/000000?text=+) `#4a5464`   |
| `--plyr-audio-control-color-hover`             | The text/icon color used when audio controls are `:hover`, `:focus` and `:focus-visible` (equivalent).  | ![#ffffff](https://place-hold.it/15/ffffff/000000?text=+) `#ffffff`   |
| `--plyr-audio-control-background-hover`        | The background color used when video controls are `:hover`, `:focus` and `:focus-visible` (equivalent). | `--plyr-color-main`                                                   |
| `--plyr-menu-background`                       | The background color for menus.                                                                         | `rgba(255, 255, 255, 0.9)`                                            |
| `--plyr-menu-color`                            | The text/icon color for menu items.                                                                     | ![#4a5464](https://place-hold.it/15/4a5464/000000?text=+) `#4a5464`   |
| `--plyr-menu-shadow`                           | The shadow used on menus.                                                                               | `0 1px 2px rgba(0, 0, 0, 0.15)`                                       |
| `--plyr-menu-radius`                           | The border radius on the menu.                                                                          | `4px`                                                                 |
| `--plyr-menu-arrow-size`                       | The size of the arrow on the bottom of the menu.                                                        | `6px`                                                                 |
| `--plyr-menu-item-arrow-color`                 | The color of the arrows in the menu.                                                                    | ![#728197](https://place-hold.it/15/728197/000000?text=+) `#728197`   |
| `--plyr-menu-item-arrow-size`                  | The size of the arrows in the menu.                                                                     | `4px`                                                                 |
| `--plyr-menu-border-color`                     | The border color for the bottom of the back button in the top of the sub menu pages.                    | ![#dcdfe5](https://place-hold.it/15/dcdfe5/000000?text=+) `#dcdfe5`   |
| `--plyr-menu-border-shadow-color`              | The shadow below the border of the back button in the top of the sub menu pages.                        | ![#ffffff](https://place-hold.it/15/ffffff/000000?text=+) `#ffffff`   |
| `--plyr-progress-loading-size`                 | The size of the stripes in the loading state in the scrubber.                                           | `25px`                                                                |
| `--plyr-progress-loading-background`           | The background color on the loading state in the scrubber.                                              | `rgba(35, 40, 47, 0.6)`                                               |
| `--plyr-video-progress-buffered-background`    | The fill color for the buffer indication in the scrubber for video.                                     | `rgba(255, 255, 255, 0.25)`                                           |
| `--plyr-audio-progress-buffered-background`    | The fill color for the buffer indication in the scrubber for audio.                                     | `rgba(193, 200, 209, 0.6)`                                            |
| `--plyr-range-thumb-height`                    | The height of the scrubber handle/thumb.                                                                | `13px`                                                                |
| `--plyr-range-thumb-background`                | The background of the scrubber handle/thumb.                                                            | ![#ffffff](https://place-hold.it/15/ffffff/000000?text=+) `#ffffff`   |
| `--plyr-range-thumb-shadow`                    | The shadow of the scrubber handle/thumb.                                                                | `0 1px 1px rgba(215, 26, 18, 0.15), 0 0 0 1px rgba(215, 26, 18, 0.2)` |
| `--plyr-range-thumb-active-shadow-width`       | The width of the shadow when the scrubber handle/thumb is `:active` (pressed).                          | `3px`                                                                 |
| `--plyr-range-track-height`                    | The height of the scrubber/progress track.                                                              | `5px`                                                                 |
| `--plyr-range-fill-background`                 | The fill color of the scrubber/progress.                                                                | `--plyr-color-main`                                                   |
| `--plyr-video-range-track-background`          | The background of the scrubber/progress.                                                                | `--plyr-video-progress-buffered-background`                           |
| `--plyr-video-range-thumb-active-shadow-color` | The color of the shadow when the video scrubber handle/thumb is `:active` (pressed).                    | `rgba(255, 255, 255, 0.5)`                                            |
| `--plyr-audio-range-track-background`          | The background of the scrubber/progress.                                                                | `--plyr-video-progress-buffered-background`                           |
| `--plyr-audio-range-thumb-active-shadow-color` | The color of the shadow when the audio scrubber handle/thumb is `:active` (pressed).                    | `rgba(215, 26, 18, 0.1)`                                              |
| `--plyr-tooltip-background`                    | The background color for tooltips.                                                                      | `rgba(255, 255, 255, 0.9)`                                            |
| `--plyr-tooltip-color`                         | The text color for tooltips.                                                                            | ![#4a5464](https://place-hold.it/15/4a5464/000000?text=+) `#4a5464`   |
| `--plyr-tooltip-padding`                       | The padding for tooltips.                                                                               | `calc(

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[processing/p5.js]]></title>
            <link>https://github.com/processing/p5.js</link>
            <guid>https://github.com/processing/p5.js</guid>
            <pubDate>Sun, 31 Aug 2025 00:05:10 GMT</pubDate>
            <description><![CDATA[p5.js is a client-side JS platform that empowers artists, designers, students, and anyone to learn to code and express themselves creatively on the web. It is based on the core principles of Processing. http://twitter.com/p5xjs ‚Äî]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/processing/p5.js">processing/p5.js</a></h1>
            <p>p5.js is a client-side JS platform that empowers artists, designers, students, and anyone to learn to code and express themselves creatively on the web. It is based on the core principles of Processing. http://twitter.com/p5xjs ‚Äî</p>
            <p>Language: JavaScript</p>
            <p>Stars: 22,910</p>
            <p>Forks: 3,559</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre>[![npm version](https://badge.fury.io/js/p5.svg)](https://www.npmjs.com/package/p5)
[![All Contributors](https://img.shields.io/github/all-contributors/processing/p5.js?color=ee8449)](#contributors)
[![Total Downloads](https://img.shields.io/npm/dt/p5)](https://www.npmjs.com/package/p5)

# [p5.js](https://p5js.org)

Welcome! üëãüëãüèøüëãüèΩüëãüèªüëãüèæüëãüèº

p5.js is a free and open-source JavaScript library for [accessible](https://p5js.org/contribute/access) creative coding. It is a nurturing community, an approachable language, an exploratory tool, an accessible environment, an inclusive platform, welcoming and playful for artists, designers, educators, beginners, and anyone else!

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;

```js
function setup() {
¬† createCanvas(400, 400);
¬†¬†background(255);
}

function draw() {
¬† circle(mouseX, mouseY, 80);
}
```

&lt;/td&gt;
&lt;td&gt;

&lt;img src=&quot;./contributor_docs/images/p5-readme-sketch.png&quot; width=&quot;200&quot; height=&quot;200&quot; /&gt;

&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

[Get Started](https://p5js.org/tutorials/get-started/) ‚Äî [Reference](https://p5js.org/reference) ‚Äî [Tutorials](https://p5js.org/tutorials) ‚Äî [Examples](https://p5js.org/examples/) ‚Äî [Libraries](https://p5js.org/libraries) ‚Äî [Forum](https://discourse.processing.org/c/p5js) ‚Äî [Discord](https://discord.gg/SHQ8dH25r9)

## About

p5.js is built and organized to prioritize [accessibility, inclusivity, community, and joy](https://p5js.org/community). Similar to sketching, p5.js has a full set of tools to draw. It also supports creating audio-visual, interactive, experimental, and generative works for the web. p5.js enables thinking of a web page as your sketch. p5.js is accessible in multiple languages and has an expansive [documentation](https://p5js.org/reference/) with visual examples. You can find [tutorials](https://p5js.org/tutorials/) on the p5.js website and start coding right now in the [p5.js web editor](https://editor.p5js.org/). You can extend p5.js with many community-created [libraries](https://p5js.org/libraries/) that bring different capabilities. Its community provides endless inspiration and support for creators.

p5.js encourages iterative and exploratory code for creative expression. Its friendly, diverse community shares art, code, and learning resources to help elevate all voices. We share our values in open source and access for all, to learn, create, imagine, design, share and code freely.

## Community

The p5.js community shares an interest in exploring the creation of art and design with technology. We are a community of, and in solidarity with, people from every gender identity and expression, sexual orientation, race, ethnicity, language, neuro-type, size, disability, class, caste, religion, culture, subculture, immigration status, age, skill level, occupation, and background. We stand in solidarity with justice and liberation movements. We work to acknowledge, dismantle, and prevent barriers to access p5.js code and the p5.js community.

Learn more about [our community](https://p5js.org/community/) and read our community statement and [code of conduct](https://github.com/processing/p5.js/blob/main/CODE_OF_CONDUCT.md). You can directly support our work with p5.js by donating to [the Processing Foundation](https://processingfoundation.org/support).

## üåº p5.js 2.0 Now Available for Community Testing &amp; Development!

We are releasing p5.js 2.0 to the community for testing and development! Here‚Äôs what you need to know.

* For **reference**: p5.js 1.x reference will stay on [https://p5js.org/](https://p5js.org/), and p5.js 2.x documentation will be on [https://beta.p5js.org/](https://beta.p5js.org/)
* In the p5.js Editor: the **default will continue to be 1.x** until at least August 2026 - more information and discussion on timeline can be found on [this Discourse thread](https://discourse.processing.org/t/dev-updates-p5-js-2-0-you-are-here/46130) or [this GitHub thread](https://github.com/processing/p5.js/issues/7488)
* For updating sketches and add-on libraries: check out [the compatibility add-on libraries and guides](https://github.com/processing/p5.js-compatibility)
* For **contribution**: `npm latest` will default to 2.x, but the git branches are still separated with `main` on 1.x and `dev-2.0` on 2.x. We will switch the branches when we have updated all automations (including deploying updated documentation to the website). Want to contribute ideas or implementation? Check the [2.x project board](https://github.com/orgs/processing/projects/21/views/8) for an overview of what still needs discussion, and what‚Äôs ready for work!

## Issues

If you have found a bug in the p5.js library or want to request new features, feel free to file an issue! See our [contributor guidelines](https://p5js.org/contribute/contributor_guidelines) for a full reference of our contribution process. A set of templates for reporting issues and requesting features are provided to assist you (and us!). Different parts of p5.js are in different repositories. You can open an issue on each of them through these links:

[p5.js](https://github.com/processing/p5.js/issues) ‚Äî [p5.js website](https://github.com/processing/p5.js-website/issues) ‚Äî- [p5.js web editor](https://github.com/processing/p5.js-web-editor/issues)

p5.js is maintained mostly by volunteers, so we thank you for your patience as we try to address your issues as soon as we can.

## Get Started for Contributors

p5.js is a collaborative project with many contributors, mostly volunteers, and you are invited to help. All types of involvement are welcome. See the [contribute](https://p5js.org/contribute) for more in-depth details about contributing to different areas of the project, including code, bug fixes, documentation, discussion, and more.

A quick Getting Started with the Build and setting up the repository could be found [here](https://p5js.org/contribute/contributor_guidelines/#quick-get-started-for-developers).

## Stewards

Stewards are contributors who are particularly involved, familiar, or responsive to certain areas of the project. Their role is to help provide context and guidance to others working on p5.js. If you have a question about contributing to a particular area, you can tag the listed steward in an issue or pull request. They may also weigh in on feature requests and guide the overall direction of their area, with the input of the community. You can read more about the organization of the project in our p5.js [Contributor Guidelines](https://p5js.org/contribute/contributor_guidelines) and p5.js [Steward Guidelines](https://p5js.org/contribute/steward_guidelines).

Anyone interested can volunteer to be a steward! There are no specific requirements for expertise, just an interest in actively learning and participating. If you‚Äôre familiar with or interested in actively learning and participating in some of the p5.js areas below, please reply to [this issue](https://github.com/processing/p5.js/issues/5719) mentioning which area(s) you are interested in volunteering as a steward! üëãüëãüëã

p5.js was created by [Lauren Lee McCarthy](https://github.com/lmccart) in 2013 as a new interpretation of Processing for the context of the web. Since then we have allowed ourselves space to deviate and grow, while drawing inspiration from Processing and our shared community. p5.js is sustained by a community of contributors, with support from the Processing Foundation. p5.js follows a rotating leadership model started in 2020, and [Qianqian Ye](https://github.com/qianqianye) has been leading p5.js since 2021. Learn more about the [people](https://p5js.org/people/) behind p5.js.

Current Lead/Mentor
* [@ksen0](https://github.com/ksen0) - p5.js LeadÔºå2024-present
* [@limzykenneth](https://github.com/limzykenneth) - p5.js MentorÔºå2023-present

Lead/Mentor Alumni
* [@lmccart](https://github.com/lmccart) - p5.js Creator
* [@qianqianye](https://github.com/qianqianye) - p5.js LeadÔºå2021-present (on leave)
* [@outofambit](https://github.com/outofambit) - p5.js Co-Lead 2021-22, Mentor 2022-2023
* [@mcturner1995](https://github.com/mcturner1995) - p5.js Lead 2020


&lt;!-- STEWARDS-LIST:START - Do not remove or modify this section --&gt;
| Area | Steward(s) |
|------|-------------|
| Maintainers | [@davepagurek](https://github.com/davepagurek), [@ksen0](https://github.com/ksen0), [@limzykenneth](https://github.com/limzykenneth), [@perminder-17](https://github.com/perminder-17), [@qianqianye](https://github.com/qianqianye) |
| Accessibility | [@calebfoss](https://github.com/calebfoss) |
| Accessibility (p5.js-website) | [@coseeian](https://github.com/coseeian) |
| Color | [@limzykenneth](https://github.com/limzykenneth) |
| Core | [@davepagurek](https://github.com/davepagurek) |
| DevOps | [@Vaivaswat2244](https://github.com/Vaivaswat2244), [@error-four-o-four](https://github.com/error-four-o-four), [@limzykenneth](https://github.com/limzykenneth), [@lirenjie95](https://github.com/lirenjie95) |
| Documentation | [@VANSH3104](https://github.com/VANSH3104), [@limzykenneth](https://github.com/limzykenneth), [@perminder-17](https://github.com/perminder-17) |
| Friendly Errors | [@IIITM-Jay](https://github.com/IIITM-Jay) |
| Graphics (p5.strands) | [@lukeplowden](https://github.com/lukeplowden) |
| Graphics (WebGL) | [@RandomGamingDev](https://github.com/RandomGamingDev), [@aferriss](https://github.com/aferriss), [@davepagurek](https://github.com/davepagurek), [@lukeplowden](https://github.com/lukeplowden), [@perminder-17](https://github.com/perminder-17) |
| i18n (hi) | [@Divyansh013](https://github.com/Divyansh013), [@takshittt](https://github.com/takshittt) |
| i18n (ko) | [@hana-cho](https://github.com/hana-cho) |
| i18n (zh) | [@limzykenneth](https://github.com/limzykenneth), [@lirenjie95](https://github.com/lirenjie95) |
| Math | [@GregStanton](https://github.com/GregStanton), [@holomorfo](https://github.com/holomorfo) |
| p5.js-website | [@clairep94](https://github.com/clairep94), [@ksen0](https://github.com/ksen0) |
| p5.sound.js | [@ogbabydiesal](https://github.com/ogbabydiesal) |
| Shapes | [@GregStanton](https://github.com/GregStanton) |
| Typography | [@dhowe](https://github.com/dhowe) |
&lt;!-- STEWARDS-LIST:END --&gt;

## Contributors

We recognize all types of contributions. This project follows the [all-contributors specification](https://github.com/all-contributors/all-contributors) and the [Emoji Key](https://github.com/all-contributors/all-contributors/blob/master/docs/emoji-key.md) ‚ú® for contribution types. Instructions to add yourself or add contribution emojis to your name are [here](https://github.com/processing/p5.js/issues/2309). You can also post an issue or comment on a pull request with the text: `@all-contributors please add @YOUR-USERNAME for THINGS` (where `THINGS` is a comma-separated list of entries from the [list of possible contribution types](https://github.com/all-contributors/all-contributors/blob/master/docs/emoji-key.md)) and our nice bot will add you.

&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt;
&lt;!-- prettier-ignore-start --&gt;
&lt;!-- markdownlint-disable --&gt;
&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;http://lauren-mccarthy.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/191056?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Lauren McCarthy&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Lauren McCarthy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;http://jasonsigal.cc&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/504124?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Jason Sigal&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jason Sigal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;https://twitter.com/KarenPunkPunk&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1695075?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Karen&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Karen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;http://www.evelyneastmond.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/699840?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Evelyn Eastmond&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Evelyn Eastmond&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;http://www.shiffman.net&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/191758?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Daniel Shiffman&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Daniel Shiffman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;http://reas.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/677774?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Casey Reas&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Casey Reas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;http://fathom.info&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1623101?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Ben Fry&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ben Fry&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;https://limzykenneth.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/7543950?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Kenneth Lim&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Kenneth Lim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/processing/p5.js/issues?q=author%3Alimzykenneth&quot; title=&quot;Bug reports&quot;&gt;üêõ&lt;/a&gt; &lt;a href=&quot;https://github.com/processing/p5.js/commits?author=limzykenneth&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/processing/p5.js/commits?author=limzykenneth&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;http://www.katehollenbach.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/78966?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;kate hollenbach&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;kate hollenbach&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;https://github.com/mlarghydracept&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/10382506?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Stalgia Grigg&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Stalgia Grigg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;https://github.com/machinic&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/3985997?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Jerel Johnson&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jerel Johnson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;http://sakshamsaxena.in&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/8774516?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Saksham Saxena&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Saksham Saxena&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;https://twitter.com/ed_saber&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/11218401?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;saber khan&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;saber khan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;https://github.com/dhowe&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/737638?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Daniel Howe&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Daniel Howe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;http://kevinsiwoff.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1585036?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Kevin Siwoff&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Kevin Siwoff&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;http://portfolio.toolness.org/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/124687?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Atul Varma&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Atul Varma&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;http://www.jessklein.is/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/535012?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Jess Klein&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jess Klein&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;http://unoseistres.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/7158943?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;uno seis tres&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;uno seis tres&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;http://www.susanev.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/5489125?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;susan evans&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;susan evans&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;http://sasj.tumblr.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/2619912?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Saskia Freeke&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Saskia Freeke&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;http://www.phoenixperry.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/783625?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Phoenix Perry&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Phoenix Perry&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;https://s01e01.xyz/jct&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/2850174?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;jesse cahn-thompson&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;jesse cahn-thompson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;https://github.com/lee2sman&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/7377908?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Lee T&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Lee T&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;http://www.cargocollective.com/chellyjin&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/26236471?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Chelly Jin&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Chelly Jin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;http://L05.is&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3998826?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;L05&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;L05&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;http://www.diygirls.org&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1680038?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;DIYgirls&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;DIYgirls&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;https://github.com/lam802&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/8697852?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;lam802&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;lam802&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;http://www.mayaman.cc&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/8224678?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Maya Man&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Maya Man&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;https://github.com/tegacodes&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/5488045?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Tega Brain&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tega Brain&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;https://github.com/luisaph&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/295879?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;luisaph&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;luisaph&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;https://github.com/almchung&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/22488500?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;AlM Chng&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;AlM Chng&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;http://montoyamoraga.io&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/3926350?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;aar√≥n montoya-moraga&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;aar√≥n montoya-moraga&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;https://github.com/catarak&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/6063380?v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Cassie Tarakajian&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Cassie Tarakajian&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;https://www.niklaspeters.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/20650298?s=460&amp;amp;v=4?s=64&quot; width=&quot;64px;&quot; alt=&quot;Niklas Peters&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Niklas Peters&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/processing/p5.js/commits?author=nikfm&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;#tutorial-nikfm&quot; title=&quot;Tutorials&quot;&gt;‚úÖ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;16.66%&quot;&gt;&lt;a href=&quot;http://mathuramg.com&quot;&gt;&lt;img 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WhiskeySockets/Baileys]]></title>
            <link>https://github.com/WhiskeySockets/Baileys</link>
            <guid>https://github.com/WhiskeySockets/Baileys</guid>
            <pubDate>Sun, 31 Aug 2025 00:05:09 GMT</pubDate>
            <description><![CDATA[Lightweight full-featured typescript/javascript WhatsApp Web API]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WhiskeySockets/Baileys">WhiskeySockets/Baileys</a></h1>
            <p>Lightweight full-featured typescript/javascript WhatsApp Web API</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,450</p>
            <p>Forks: 2,197</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&#039;center&#039;&gt;&lt;img alt=&quot;Baileys logo&quot; src=&quot;https://raw.githubusercontent.com/WhiskeySockets/Baileys/refs/heads/master/Media/logo.png&quot; height=&quot;75&quot;/&gt;&lt;/h1&gt;

&lt;div align=&#039;center&#039;&gt;

![NPM Downloads](https://img.shields.io/npm/dw/%40whiskeysockets%2Fbaileys?label=npm&amp;color=%23CB3837)
![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/whiskeysockets/baileys)
![Discord](https://img.shields.io/discord/725839806084546610?label=discord&amp;color=%235865F2)

&lt;/div&gt;

&lt;div align=&#039;center&#039;&gt;Baileys is a WebSockets-based TypeScript library for interacting with the WhatsApp Web API.&lt;/div&gt;

# Important Note
This is a temporally README, the new guide is at development and will be fully released when it&#039;s finished.

New Guide: https://baileys.wiki

# Sponsor
If you&#039;d like to financially support this project, you can do so by supporting the current maintainer [here](https://purpshell.dev/sponsor).

# Disclaimer
This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates.
The official WhatsApp website can be found at whatsapp.com. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners.

The maintainers of Baileys do not in any way condone the use of this application in practices that violate the Terms of Service of WhatsApp. The maintainers of this application call upon the personal responsibility of its users to use this application in a fair way, as it is intended to be used.
Use at your own discretion. Do not spam people with this. We discourage any stalkerware, bulk or automated messaging usage.

##

- Baileys does not require Selenium or any other browser to be interface with WhatsApp Web, it does so directly using a **WebSocket**. 
- Not running Selenium or Chromium saves you like **half a gig** of ram :/ 
- Baileys supports interacting with the multi-device &amp; web versions of WhatsApp.
- Thank you to [@pokearaujo](https://github.com/pokearaujo/multidevice) for writing his observations on the workings of WhatsApp Multi-Device. Also, thank you to [@Sigalor](https://github.com/sigalor/whatsapp-web-reveng) for writing his observations on the workings of WhatsApp Web and thanks to [@Rhymen](https://github.com/Rhymen/go-whatsapp/) for the __go__ implementation.

&gt; [!IMPORTANT]
&gt; The original repository had to be removed by the original author - we now continue development in this repository here.
This is the only official repository and is maintained by the community.
&gt; **Join the Discord [here](https://discord.gg/WeJM5FP9GG)**
 
## Example

Do check out &amp; run [example.ts](Example/example.ts) to see an example usage of the library.
The script covers most common use cases.
To run the example script, download or clone the repo and then type the following in a terminal:
1. ``` cd path/to/Baileys ```
2. ``` yarn ```
3. ``` yarn example ```

## Install

Use the stable version:
```
yarn add @whiskeysockets/baileys
```

Use the edge version (no guarantee of stability, but latest fixes + features)
```
yarn add github:WhiskeySockets/Baileys
```

Then import your code using:
```ts 
import makeWASocket from &#039;@whiskeysockets/baileys&#039;
```

# Links

- [Discord](https://discord.gg/WeJM5FP9GG)
- [Docs](https://guide.whiskeysockets.io/)

# Index

- [Connecting Account](#connecting-account)
    - [Connect with QR-CODE](#starting-socket-with-qr-code)
    - [Connect with Pairing Code](#starting-socket-with-pairing-code)
    - [Receive Full History](#receive-full-history)
- [Important Notes About Socket Config](#important-notes-about-socket-config)
    - [Caching Group Metadata (Recommended)](#caching-group-metadata-recommended)
    - [Improve Retry System &amp; Decrypt Poll Votes](#improve-retry-system--decrypt-poll-votes)
    - [Receive Notifications in Whatsapp App](#receive-notifications-in-whatsapp-app)

- [Save Auth Info](#saving--restoring-sessions)
- [Handling Events](#handling-events)
    - [Example to Start](#example-to-start)
    - [Decrypt Poll Votes](#decrypt-poll-votes)
    - [Summary of Events on First Connection](#summary-of-events-on-first-connection)
- [Implementing a Data Store](#implementing-a-data-store)
- [Whatsapp IDs Explain](#whatsapp-ids-explain)
- [Utility Functions](#utility-functions)
- [Sending Messages](#sending-messages)
    - [Non-Media Messages](#non-media-messages)
        - [Text Message](#text-message)
        - [Quote Message](#quote-message-works-with-all-types)
        - [Mention User](#mention-user-works-with-most-types)
        - [Forward Messages](#forward-messages)
        - [Location Message](#location-message)
        - [Contact Message](#contact-message)
        - [Reaction Message](#reaction-message)
        - [Pin Message](#pin-message)
        - [Poll Message](#poll-message)
    - [Sending with Link Preview](#sending-messages-with-link-previews)
    - [Media Messages](#media-messages)
        - [Gif Message](#gif-message)
        - [Video Message](#video-message)
        - [Audio Message](#audio-message)
        - [Image Message](#image-message)
        - [ViewOnce Message](#view-once-message)
- [Modify Messages](#modify-messages)
    - [Delete Messages (for everyone)](#deleting-messages-for-everyone)
    - [Edit Messages](#editing-messages)
- [Manipulating Media Messages](#manipulating-media-messages)
    - [Thumbnail in Media Messages](#thumbnail-in-media-messages)
    - [Downloading Media Messages](#downloading-media-messages)
    - [Re-upload Media Message to Whatsapp](#re-upload-media-message-to-whatsapp)
- [Reject Call](#reject-call)
- [Send States in Chat](#send-states-in-chat)
    - [Reading Messages](#reading-messages)
    - [Update Presence](#update-presence)
- [Modifying Chats](#modifying-chats)
    - [Archive a Chat](#archive-a-chat)
    - [Mute/Unmute a Chat](#muteunmute-a-chat)
    - [Mark a Chat Read/Unread](#mark-a-chat-readunread)
    - [Delete a Message for Me](#delete-a-message-for-me)
    - [Delete a Chat](#delete-a-chat)
    - [Star/Unstar a Message](#starunstar-a-message)
    - [Disappearing Messages](#disappearing-messages)
- [User Querys](#user-querys)
    - [Check If ID Exists in Whatsapp](#check-if-id-exists-in-whatsapp)
    - [Query Chat History (groups too)](#query-chat-history-groups-too)
    - [Fetch Status](#fetch-status)
    - [Fetch Profile Picture (groups too)](#fetch-profile-picture-groups-too)
    - [Fetch Bussines Profile (such as description or category)](#fetch-bussines-profile-such-as-description-or-category)
    - [Fetch Someone&#039;s Presence (if they&#039;re typing or online)](#fetch-someones-presence-if-theyre-typing-or-online)
- [Change Profile](#change-profile)
    - [Change Profile Status](#change-profile-status)
    - [Change Profile Name](#change-profile-name)
    - [Change Display Picture (groups too)](#change-display-picture-groups-too)
    - [Remove display picture (groups too)](#remove-display-picture-groups-too)
- [Groups](#groups)
    - [Create a Group](#create-a-group)
    - [Add/Remove or Demote/Promote](#addremove-or-demotepromote)
    - [Change Subject (name)](#change-subject-name)
    - [Change Description](#change-description)
    - [Change Settings](#change-settings)
    - [Leave a Group](#leave-a-group)
    - [Get Invite Code](#get-invite-code)
    - [Revoke Invite Code](#revoke-invite-code)
    - [Join Using Invitation Code](#join-using-invitation-code)
    - [Get Group Info by Invite Code](#get-group-info-by-invite-code)
    - [Query Metadata (participants, name, description...)](#query-metadata-participants-name-description)
    - [Join using groupInviteMessage](#join-using-groupinvitemessage)
    - [Get Request Join List](#get-request-join-list)
    - [Approve/Reject Request Join](#approvereject-request-join)
    - [Get All Participating Groups Metadata](#get-all-participating-groups-metadata)
    - [Toggle Ephemeral](#toggle-ephemeral)
    - [Change Add Mode](#change-add-mode)
- [Privacy](#privacy)
    - [Block/Unblock User](#blockunblock-user)
    - [Get Privacy Settings](#get-privacy-settings)
    - [Get BlockList](#get-blocklist)
    - [Update LastSeen Privacy](#update-lastseen-privacy)
    - [Update Online Privacy](#update-online-privacy)
    - [Update Profile Picture Privacy](#update-profile-picture-privacy)
    - [Update Status Privacy](#update-status-privacy)
    - [Update Read Receipts Privacy](#update-read-receipts-privacy)
    - [Update Groups Add Privacy](#update-groups-add-privacy)
    - [Update Default Disappearing Mode](#update-default-disappearing-mode)
- [Broadcast Lists &amp; Stories](#broadcast-lists--stories)
    - [Send Broadcast &amp; Stories](#send-broadcast--stories)
    - [Query a Broadcast List&#039;s Recipients &amp; Name](#query-a-broadcast-lists-recipients--name)
- [Writing Custom Functionality](#writing-custom-functionality)
    - [Enabling Debug Level in Baileys Logs](#enabling-debug-level-in-baileys-logs)
    - [How Whatsapp Communicate With Us](#how-whatsapp-communicate-with-us)
    - [Register a Callback for Websocket Events](#register-a-callback-for-websocket-events)

## Connecting Account

WhatsApp provides a multi-device API that allows Baileys to be authenticated as a second WhatsApp client by scanning a **QR code** or **Pairing Code** with WhatsApp on your phone.

&gt; [!NOTE]
&gt; **[Here](#example-to-start) is a simple example of event handling**

&gt; [!TIP]
&gt; **You can see all supported socket configs [here](https://baileys.whiskeysockets.io/types/SocketConfig.html) (Recommended)**

### Starting socket with **QR-CODE**

&gt; [!TIP]
&gt; You can customize browser name if you connect with **QR-CODE**, with `Browser` constant, we have some browsers config, **see [here](https://baileys.whiskeysockets.io/types/BrowsersMap.html)**

```ts
import makeWASocket from &#039;@whiskeysockets/baileys&#039;

const sock = makeWASocket({
    // can provide additional config here
    browser: Browsers.ubuntu(&#039;My App&#039;),
    printQRInTerminal: true
})
```

If the connection is successful, you will see a QR code printed on your terminal screen, scan it with WhatsApp on your phone and you&#039;ll be logged in!

### Starting socket with **Pairing Code**


&gt; [!IMPORTANT]
&gt; Pairing Code isn&#039;t Mobile API, it&#039;s a method to connect Whatsapp Web without QR-CODE, you can connect only with one device, see [here](https://faq.whatsapp.com/1324084875126592/?cms_platform=web)

The phone number can&#039;t have `+` or `()` or `-`, only numbers, you must provide country code

```ts
import makeWASocket from &#039;@whiskeysockets/baileys&#039;

const sock = makeWASocket({
    // can provide additional config here
    printQRInTerminal: false //need to be false
})

if (!sock.authState.creds.registered) {
    const number = &#039;XXXXXXXXXXX&#039;
    const code = await sock.requestPairingCode(number)
    console.log(code)
}
```

### Receive Full History

1. Set `syncFullHistory` as `true`
2. Baileys, by default, use chrome browser config
    - If you&#039;d like to emulate a desktop connection (and receive more message history), this browser setting to your Socket config:

```ts
const sock = makeWASocket({
    ...otherOpts,
    // can use Windows, Ubuntu here too
    browser: Browsers.macOS(&#039;Desktop&#039;),
    syncFullHistory: true
})
```

## Important Notes About Socket Config

### Caching Group Metadata (Recommended)
- If you use baileys for groups, we recommend you to set `cachedGroupMetadata` in socket config, you need to implement a cache like this:

    ```ts
    const groupCache = new NodeCache({stdTTL: 5 * 60, useClones: false})

    const sock = makeWASocket({
        cachedGroupMetadata: async (jid) =&gt; groupCache.get(jid)
    })

    sock.ev.on(&#039;groups.update&#039;, async ([event]) =&gt; {
        const metadata = await sock.groupMetadata(event.id)
        groupCache.set(event.id, metadata)
    })

    sock.ev.on(&#039;group-participants.update&#039;, async (event) =&gt; {
        const metadata = await sock.groupMetadata(event.id)
        groupCache.set(event.id, metadata)
    })
    ```

### Improve Retry System &amp; Decrypt Poll Votes
- If you want to improve sending message, retrying when error occurs and decrypt poll votes, you need to have a store and set `getMessage` config in socket like this:
    ```ts
    const sock = makeWASocket({
        getMessage: async (key) =&gt; await getMessageFromStore(key)
    })
    ```

### Receive Notifications in Whatsapp App
- If you want to receive notifications in whatsapp app, set `markOnlineOnConnect` to `false`
    ```ts
    const sock = makeWASocket({
        markOnlineOnConnect: false
    })
    ```
## Saving &amp; Restoring Sessions

You obviously don&#039;t want to keep scanning the QR code every time you want to connect. 

So, you can load the credentials to log back in:
```ts
import makeWASocket, { useMultiFileAuthState } from &#039;@whiskeysockets/baileys&#039;

const { state, saveCreds } = await useMultiFileAuthState(&#039;auth_info_baileys&#039;)

// will use the given state to connect
// so if valid credentials are available -- it&#039;ll connect without QR
const sock = makeWASocket({ auth: state })

// this will be called as soon as the credentials are updated
sock.ev.on(&#039;creds.update&#039;, saveCreds)
```

&gt; [!IMPORTANT]
&gt; `useMultiFileAuthState` is a utility function to help save the auth state in a single folder, this function serves as a good guide to help write auth &amp; key states for SQL/no-SQL databases, which I would recommend in any production grade system.

&gt; [!NOTE]
&gt; When a message is received/sent, due to signal sessions needing updating, the auth keys (`authState.keys`) will update. Whenever that happens, you must save the updated keys (`authState.keys.set()` is called). Not doing so will prevent your messages from reaching the recipient &amp; cause other unexpected consequences. The `useMultiFileAuthState` function automatically takes care of that, but for any other serious implementation -- you will need to be very careful with the key state management.

## Handling Events

- Baileys uses the EventEmitter syntax for events. 
They&#039;re all nicely typed up, so you shouldn&#039;t have any issues with an Intellisense editor like VS Code.

&gt; [!IMPORTANT]
&gt; **The events are [these](https://baileys.whiskeysockets.io/types/BaileysEventMap.html)**, it&#039;s important you see all events

You can listen to these events like this:
```ts
const sock = makeWASocket()
sock.ev.on(&#039;messages.upsert&#039;, ({ messages }) =&gt; {
    console.log(&#039;got messages&#039;, messages)
})
```

### Example to Start

&gt; [!NOTE]
&gt; This example includes basic auth storage too

```ts
import makeWASocket, { DisconnectReason, useMultiFileAuthState } from &#039;@whiskeysockets/baileys&#039;
import { Boom } from &#039;@hapi/boom&#039;

async function connectToWhatsApp () {
    const { state, saveCreds } = await useMultiFileAuthState(&#039;auth_info_baileys&#039;)
    const sock = makeWASocket({
        // can provide additional config here
        auth: state,
        printQRInTerminal: true
    })
    sock.ev.on(&#039;connection.update&#039;, (update) =&gt; {
        const { connection, lastDisconnect } = update
        if(connection === &#039;close&#039;) {
            const shouldReconnect = (lastDisconnect.error as Boom)?.output?.statusCode !== DisconnectReason.loggedOut
            console.log(&#039;connection closed due to &#039;, lastDisconnect.error, &#039;, reconnecting &#039;, shouldReconnect)
            // reconnect if not logged out
            if(shouldReconnect) {
                connectToWhatsApp()
            }
        } else if(connection === &#039;open&#039;) {
            console.log(&#039;opened connection&#039;)
        }
    })
    sock.ev.on(&#039;messages.upsert&#039;, event =&gt; {
        for (const m of event.messages) {
            console.log(JSON.stringify(m, undefined, 2))

            console.log(&#039;replying to&#039;, m.key.remoteJid)
            await sock.sendMessage(m.key.remoteJid!, { text: &#039;Hello Word&#039; })
        }
    })

    // to storage creds (session info) when it updates
    sock.ev.on(&#039;creds.update&#039;, saveCreds)
}
// run in main file
connectToWhatsApp()
```

&gt; [!IMPORTANT]
&gt; In `messages.upsert` it&#039;s recommended to use a loop like `for (const message of event.messages)` to handle all messages in array

### Decrypt Poll Votes

- By default poll votes are encrypted and handled in `messages.update`
- That&#039;s a simple example
```ts
sock.ev.on(&#039;messages.update&#039;, event =&gt; {
    for(const { key, update } of event) {
        if(update.pollUpdates) {
            const pollCreation = await getMessage(key)
            if(pollCreation) {
                console.log(
                    &#039;got poll update, aggregation: &#039;,
                    getAggregateVotesInPollMessage({
                        message: pollCreation,
                        pollUpdates: update.pollUpdates,
                    })
                )
            }
        }
    }
})
```

- `getMessage` is a [store](#implementing-a-data-store) implementation (in your end)

### Summary of Events on First Connection

1. When you connect first time, `connection.update` will be fired requesting you to restart sock
2. Then, history messages will be received in `messaging.history-set`

## Implementing a Data Store

- Baileys does not come with a defacto storage for chats, contacts, or messages. However, a simple in-memory implementation has been provided. The store listens for chat updates, new messages, message updates, etc., to always have an up-to-date version of the data.

&gt; [!IMPORTANT]
&gt; I highly recommend building your own data store, as storing someone&#039;s entire chat history in memory is a terrible waste of RAM.

It can be used as follows:

```ts
import makeWASocket, { makeInMemoryStore } from &#039;@whiskeysockets/baileys&#039;
// the store maintains the data of the WA connection in memory
// can be written out to a file &amp; read from it
const store = makeInMemoryStore({ })
// can be read from a file
store.readFromFile(&#039;./baileys_store.json&#039;)
// saves the state to a file every 10s
setInterval(() =&gt; {
    store.writeToFile(&#039;./baileys_store.json&#039;)
}, 10_000)

const sock = makeWASocket({ })
// will listen from this socket
// the store can listen from a new socket once the current socket outlives its lifetime
store.bind(sock.ev)

sock.ev.on(&#039;chats.upsert&#039;, () =&gt; {
    // can use &#039;store.chats&#039; however you want, even after the socket dies out
    // &#039;chats&#039; =&gt; a KeyedDB instance
    console.log(&#039;got chats&#039;, store.chats.all())
})

sock.ev.on(&#039;contacts.upsert&#039;, () =&gt; {
    console.log(&#039;got contacts&#039;, Object.values(store.contacts))
})

```

The store also provides some simple functions such as `loadMessages` that utilize the store to speed up data retrieval.

## Whatsapp IDs Explain

- `id` is the WhatsApp ID, called `jid` too, of the person or group you&#039;re sending the message to. 
    - It must be in the format ```[country code][phone number]@s.whatsapp.net```
	    - Example for people: ```+19999999999@s.whatsapp.net```. 
	    - For groups, it must be in the format ``` 123456789-123345@g.us ```. 
    - For broadcast lists, it&#039;s `[timestamp of creation]@broadcast`.
    - For stories, the ID is `status@broadcast`.

## Utility Functions

- `getContentType`, returns the content type for any message
- `getDevice`, returns the device from message
- `makeCacheableSignalKeyStore`, make auth store more fast
- `downloadContentFromMessage`, download content from any message

## Sending Messages

- Send all types of messages with a single function
    - **[Here](https://baileys.whiskeysockets.io/types/AnyMessageContent.html) you can see all message contents supported, like text message**
    - **[Here](https://baileys.whiskeysockets.io/types/MiscMessageGenerationOptions.html) you can see all options supported, like quote message**

    ```ts
    const jid: string
    const content: AnyMessageContent
    const options: MiscMessageGenerationOptions

    sock.sendMessage(jid, content, options)
    ```

### Non-Media Messages

#### Text Message
```ts
await sock.sendMessage(jid, { text: &#039;hello word&#039; })
```

#### Quote Message (works with all types)
```ts
await sock.sendMessage(jid, { text: &#039;hello word&#039; }, { quoted: message })
```

#### Mention User 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[zumerlab/snapdom]]></title>
            <link>https://github.com/zumerlab/snapdom</link>
            <guid>https://github.com/zumerlab/snapdom</guid>
            <pubDate>Sun, 31 Aug 2025 00:05:08 GMT</pubDate>
            <description><![CDATA[snapDOM captures HTML elements to images with exceptional speed and accuracy.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/zumerlab/snapdom">zumerlab/snapdom</a></h1>
            <p>snapDOM captures HTML elements to images with exceptional speed and accuracy.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,763</p>
            <p>Forks: 181</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;http://zumerlab.github.io/snapdom&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/zumerlab/snapdom/main/docs/assets/newhero.png&quot; width=&quot;70%&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
 &lt;a href=&quot;https://www.npmjs.com/package/@zumer/snapdom&quot;&gt;
    &lt;img alt=&quot;NPM version&quot; src=&quot;https://img.shields.io/npm/v/@zumer/snapdom?style=flat-square&amp;label=Version&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/zumerlab/snapdom/graphs/contributors&quot;&gt;
    &lt;img alt=&quot;GitHub contributors&quot; src=&quot;https://img.shields.io/github/contributors/zumerlab/snapdom?style=flat-square&amp;label=Contributors&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/zumerlab/snapdom/stargazers&quot;&gt;
    &lt;img alt=&quot;GitHub stars&quot; src=&quot;https://img.shields.io/github/stars/zumerlab/snapdom?style=flat-square&amp;label=Stars&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/zumerlab/snapdom/network/members&quot;&gt;
    &lt;img alt=&quot;GitHub forks&quot; src=&quot;https://img.shields.io/github/forks/zumerlab/snapdom?style=flat-square&amp;label=Forks&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/sponsors/tinchox5&quot;&gt;
    &lt;img alt=&quot;Sponsor tinchox5&quot; src=&quot;https://img.shields.io/github/sponsors/tinchox5?style=flat-square&amp;label=Sponsor&quot;&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/zumerlab/snapdom/blob/main/LICENSE&quot;&gt;
    &lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/github/license/zumerlab/snapdom?style=flat-square&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

# snapDOM

**snapDOM** is a fast and accurate DOM-to-image capture tool built for **Zumly**, a zoom-based view transition framework.

It captures any HTML element as a scalable SVG image, preserving styles, fonts, background images, pseudo-elements, and even shadow DOM. It also supports export to raster image formats and canvas.

* üì∏ Full DOM capture
* üé® Embedded styles, pseudo-elements, and fonts
* üñºÔ∏è Export to SVG, PNG, JPG, WebP, `canvas`, or Blob
* ‚ö° Ultra fast, no dependencies
* üì¶ 100% based on standard Web APIs

## Demo

[https://zumerlab.github.io/snapdom/](https://zumerlab.github.io/snapdom/)

## Installation

### NPM / Yarn

```sh
npm i @zumer/snapdom
```

```sh
yarn add @zumer/snapdom
```

Then import it in your code:

```js
import { snapdom } from &#039;@zumer/snapdom&#039;;
```

### CDN

```html
&lt;script src=&quot;https://cdn.jsdelivr.net/npm/@zumer/snapdom/dist/snapdom.min.js&quot;&gt;&lt;/script&gt;
```

### Script tag (local)

```html
&lt;script src=&quot;snapdom.js&quot;&gt;&lt;/script&gt;
```

### ES Module

```js
import { snapdom } from &#039;./snapdom.mjs&#039;;
```

### Module via CDN

```html
&lt;script type=&quot;module&quot;&gt;
  import { snapdom } from &#039;https://cdn.jsdelivr.net/npm/@zumer/snapdom/dist/snapdom.mjs&#039;;
&lt;/script&gt;
```

## Basic usage

### Reusable capture

```js
const el = document.querySelector(&#039;#target&#039;);
const result = await snapdom(el, { scale: 2 });

const img = await result.toPng();
document.body.appendChild(img);

await result.download({ format: &#039;jpg&#039;, filename: &#039;my-capture&#039; });
```

### One-step shortcuts

```js
const el = document.querySelector(&#039;#target&#039;);
const png = await snapdom.toPng(el);
document.body.appendChild(png);

const blob = await snapdom.toBlob(el);
```

## API

### `snapdom(el, options?)`

Returns an object with reusable export methods:

```js
{
  url: string;
  toRaw(): string;
  toImg(): Promise&lt;HTMLImageElement&gt;;
  toCanvas(): Promise&lt;HTMLCanvasElement&gt;;
  toBlob(options?): Promise&lt;Blob&gt;;
  toPng(options?): Promise&lt;HTMLImageElement&gt;;
  toJpg(options?): Promise&lt;HTMLImageElement&gt;;
  toWebp(options?): Promise&lt;HTMLImageElement&gt;;
  download(options?): Promise&lt;void&gt;;
}
```

### Shortcut methods

| Method                         | Description                           |
| ------------------------------ | ------------------------------------- |
| `snapdom.toImg(el, options?)`  | Returns an `HTMLImageElement`         |
| `snapdom.toCanvas(el, options?)     ` | Returns a `Canvas`                    |
| `snapdom.toBlob(el, options?)` | Returns an SVG `Blob`                 |
| `snapdom.toPng(el, options?)`  | Returns a PNG image                   |
| `snapdom.toJpg(el, options?)`  | Returns a JPG image                   |
| `snapdom.toWebp(el, options?)` | Returns a WebP image                  |
| `snapdom.download(el, options?)     ` | Triggers download in specified format |

## Options

All capture methods accept an `options` object:

| Option            | Type     | Default  | Description                                |
| ----------------- | -------- | -------- | ------------------------------------------ |
| `compress`        | boolean  | `true`   | Removes redundant styles                   |
| `fast`            | boolean  | `true`   | Skips idle delay for faster results        |
| `embedFonts`      | boolean  | `false`  | Inlines fonts (icon fonts always embedded) |
| `localFonts`      | array   | `[]`     | Array of local font descriptors `{ family, src, weight?, style? }` |
| `iconFonts`       | string \| RegExp \| (string \| RegExp)[] | `[]` | Additional icon font families or patterns |
| `scale`           | number   | `1`      | Output scale multiplier                    |
| `dpr`             | number   | `devicePixelRatio` | Device pixel ratio                 |
| `width`           | number   | -        | Output specific width size                 |
| `height`          | number   | -        | Output specific height size                |
| `backgroundColor` | string   | `&quot;#fff&quot;` | Fallback color for JPG/WebP                |
| `quality`         | number   | `1`      | Quality for JPG/WebP (0 to 1)              |
| `useProxy`     | string | &#039;&#039;        | Specify a proxy for handling CORS images/fonts as fallback|
| `type`     | string | `svg`        | Select `png`, `jpg`, `webp` Blob type|
| `exclude` | string[] | -  | CSS selectors for elements to exclude |
| `filter` | function | -  | Custom filter function ie `(el) =&gt; !el.classList.contains(&#039;hidden&#039;)` |

### Setting custom dimensions with width and height options

Use the `width` and `height` options to generate an image with specific dimensions.

**Examples:**

**1. Fixed width (proportional height)**
Sets a specific width while maintaining the aspect ratio. Height adjusts proportionally.

```js
const result = await snapdom(element, {
  width: 400 // Outputs a 400px-wide image with auto-scaled height
});
```

**2. Fixed height (proportional width)**
Sets a specific height while maintaining the aspect ratio. Width adjusts proportionally.

```js
const result = await snapdom(element, {
  height: 200 // Outputs a 200px-tall image with auto-scaled width
});
```

**3. Fixed width and height (may distort image)**
Forces exact dimensions, potentially distorting the image if the aspect ratio differs.

```js
const result = await snapdom(element, {
  width: 800,  // Outputs an 800px √ó 200px image (may stretch/squish content)
  height: 200
});
```

**Note:** If `scale` is different from  1, it takes priority over width and height.
Example: `{ scale: 3, width: 500 }` ignores width and scales the image 3x instead.


### Cross-Origin Images

By default, snapDOM loads images with `crossOrigin=&quot;anonymous&quot;` or `crossOrigin=&quot;use-credentials&quot;`. In case fails to get the images, `useProxy` can be used to deal with CORS images:

```js
const result = await snapdom(element, {
  useProxy: &#039;your/proxy/&#039; //Example: &#039;https://corsproxy.io/?url=&#039; or &#039;https://api.allorigins.win/raw?url=&#039;
});
```


### Download options

```js
{
  format?: &quot;svg&quot; | &quot;png&quot; | &quot;jpg&quot; | &quot;jpeg&quot; | &quot;webp&quot;; // default: &quot;png&quot;
  filename?: string;         // default: &quot;capture&quot;
  backgroundColor?: string;  // optional override
}
```


### `preCache()` ‚Äì Optional helper

The `preCache()` function can be used to load external resources (like images and fonts) in advance. It is specially useful when the element to capture is big and complex.

```js
import { preCache } from &#039;@zumer/snapdom&#039;;

await preCache(document.body);
```

```js
import { snapdom, preCache } from &#039;./snapdom.mjs&#039;;
    window.addEventListener(&#039;load&#039;, async () =&gt; {
    await preCache();
    console.log(&#039;üì¶ Resources preloaded&#039;);
    });
```

**Options for `preCache()`:**

* `embedFonts` *(boolean, default: true)* ‚Äî Inlines non-icon fonts during preload.
* `localFonts` *(array)* ‚Äî Array of `{ family, src, weight?, style? }` for local font sources.
* `useProxy` *(string)* ‚Äî Proxy for handling CORS images/fonts as fallback.



## Features

* Captures **shadow DOM** and Web Components
* Supports `::before`, `::after` and `::first-letter` pseudo-elements
* Inlines background images and fonts
* Handles **Font Awesome**, **Material Icons**, and more
* `data-capture=&quot;exclude&quot;` to ignore an element
* `data-capture=&quot;placeholder&quot;` with `data-placeholder-text` for masked replacements

## Limitations

* External images should be CORS-accessible (use `useProxy` option for handling CORS denied)
* Iframes are not supported
* When WebP format is used on Safari, it will fallback to PNG rendering.
* `@font-face` CSS rule is well supported, but if need to use JS `FontFace()`, see this workaround [`#43`](https://github.com/zumerlab/snapdom/issues/43)


## ‚ö° Performance Benchmarks

Snapdom has received **significant performance improvements** since version `v1.8.0`. The following benchmarks compare:

* **Snapdom (current)**
* **Snapdom v1.8.0**
* `html2canvas`
* `html-to-image`


### Simple elements

| Scenario                 | Snapdom (current) | Snapdom v1.8.0 | html2canvas | html-to-image |
| ------------------------ | ----------------- | -------------- | ----------- | ------------- |
| Small (200√ó100)          | **0.4 ms**        | 1.2 ms         | 70.3 ms     | 3.6 ms        |
| Modal (400√ó300)          | **0.4 ms**        | 1.1 ms         | 68.8 ms     | 3.6 ms        |
| Page View (1200√ó800)     | **0.4 ms**        | 1.0 ms         | 100.5 ms    | 3.4 ms        |
| Large Scroll (2000√ó1500) | **0.4 ms**        | 1.0 ms         | 153.1 ms    | 3.4 ms        |
| Very Large (4000√ó2000)   | **0.4 ms**        | 1.0 ms         | 278.9 ms    | 4.3 ms        |



### Complex elements

| Scenario                 | Snapdom (current) | Snapdom v1.8.0 | html2canvas | html-to-image |
| ------------------------ | ----------------- | -------------- | ----------- | ------------- |
| Small (200√ó100)          | **1.1 ms**        | 3.2 ms         | 76.0 ms     | 15.3 ms       |
| Modal (400√ó300)          | **4.5 ms**        | 14.0 ms        | 133.2 ms    | 55.4 ms       |
| Page View (1200√ó800)     | **32.9 ms**       | 113.6 ms       | 303.4 ms    | 369.1 ms      |
| Large Scroll (2000√ó1500) | **133.9 ms**      | 387.4 ms       | 594.4 ms    | 1,163.0 ms    |
| Very Large (4000√ó2000)   | **364.0 ms**      | 1,200.4 ms     | 1,380.8 ms  | 3,023.9 ms    |



### Summary

* Snapdom (current) is **2√ó‚Äì6√ó faster** than `v1.8.0`
* Up to **150√ó faster** than `html2canvas`
* Up to **8√ó faster** than `html-to-image` in large scenarios

&lt;sub&gt;Benchmarks run in Chromium using Vitest.&lt;br&gt;
Hardware: MacBook Air 2018.&lt;br&gt;
‚ö†Ô∏è Performance may vary depending on device.&lt;/sub&gt;



### Run the benchmarks

```sh
git clone https://github.com/zumerlab/snapdom.git
cd snapdom
npm install
npm run test:benchmark
```


## Roadmap

Planned improvements for future versions of SnapDOM:

* [ ] **Implement plugin system**
  SnapDOM will support external plugins to extend or override internal behavior (e.g. custom node transformers, exporters, or filters).

* [ ] **Refactor to modular architecture**
  Internal logic will be split into smaller, focused modules to improve maintainability and code reuse.

* [X] **Decouple internal logic from global options**
  Functions will be redesigned to avoid relying directly on `options`. A centralized capture context will improve clarity, autonomy, and testability. See [`next` branch](https://github.com/zumerlab/snapdom/tree/main)

* [ ] **Expose cache control**
  Users will be able to manually clear image and font caches or configure their own caching strategies.

* [ ] **Auto font preloading**
  Required fonts will be automatically detected and preloaded before capture, reducing the need for manual `preCache()` calls.

* [ ] **Document plugin development**
  A full guide will be provided for creating and registering custom SnapDOM plugins.

* [ ] **Make export utilities tree-shakeable**
  Export functions like `toPng`, `toJpg`, `toBlob`, etc. will be restructured into independent modules to support tree shaking and minimal builds.

Have ideas or feature requests?
Feel free to share suggestions or feedback in [GitHub Discussions](https://github.com/zumerlab/snapdom/discussions).


## Development

To contribute or build snapDOM locally:

```sh
# Clone the repository
git clone https://github.com/zumerlab/snapdom.git
cd snapdom

# Switch to dev branch
git checkout dev

# Install dependencies
npm install

# Compile the library (ESM, CJS, and minified versions)
npm run compile

# Install playwright browsers (necessary for running tests)
npx playwright install

# Run tests
npm test

# Run Benchmarks
npm run test:benchmark
```

The main entry point is in `src/`, and output bundles are generated in the `dist/` folder.

For detailed contribution guidelines, please see [CONTRIBUTING](https://github.com/zumerlab/snapdom/blob/main/CONTRIBUTING.md).


## Contributors üôå

&lt;!-- CONTRIBUTORS:START --&gt;
&lt;p&gt;
&lt;a href=&quot;https://github.com/tinchox5&quot; title=&quot;tinchox5&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11557901?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;tinchox5&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/tarwin&quot; title=&quot;tarwin&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/646149?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;tarwin&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/17biubiu&quot; title=&quot;17biubiu&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13295895?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;17biubiu&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/av01d&quot; title=&quot;av01d&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6247646?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;av01d&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/CHOYSEN&quot; title=&quot;CHOYSEN&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/25995358?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;CHOYSEN&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/pedrocateexte&quot; title=&quot;pedrocateexte&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/207524750?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;pedrocateexte&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/domialex&quot; title=&quot;domialex&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4694217?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;domialex&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/elliots&quot; title=&quot;elliots&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/622455?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;elliots&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/jswhisperer&quot; title=&quot;jswhisperer&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1177690?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;jswhisperer&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/sharuzzaman&quot; title=&quot;sharuzzaman&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7421941?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;sharuzzaman&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/simon1uo&quot; title=&quot;simon1uo&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/60037549?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;simon1uo&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/titoBouzout&quot; title=&quot;titoBouzout&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/64156?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;titoBouzout&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/jhbae200&quot; title=&quot;jhbae200&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/20170610?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;jhbae200&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/miusuncle&quot; title=&quot;miusuncle&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7549857?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;miusuncle&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/rbbydotdev&quot; title=&quot;rbbydotdev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/101137670?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;rbbydotdev&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/zhanghaotian2018&quot; title=&quot;zhanghaotian2018&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/169218899?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;zhanghaotian2018&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/kohaiy&quot; title=&quot;kohaiy&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/15622127?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;kohaiy&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/fu050409&quot; title=&quot;fu050409&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/46275354?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;fu050409&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;!-- CONTRIBUTORS:END --&gt;

## üíñ Sponsors

Special thanks to [@megaphonecolin](https://github.com/megaphonecolin) for supporting this project!

If you&#039;d like to support this project too, you can [become a sponsor](https://github.com/sponsors/tinchox5).

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=zumerlab/snapdom&amp;type=Date)](https://www.star-history.com/#zumerlab/snapdom&amp;Date)

## License

MIT ¬© Zumerlab
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[viarotel-org/escrcpy]]></title>
            <link>https://github.com/viarotel-org/escrcpy</link>
            <guid>https://github.com/viarotel-org/escrcpy</guid>
            <pubDate>Sun, 31 Aug 2025 00:05:07 GMT</pubDate>
            <description><![CDATA[üì± Display and control your Android device graphically with scrcpy.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/viarotel-org/escrcpy">viarotel-org/escrcpy</a></h1>
            <p>üì± Display and control your Android device graphically with scrcpy.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,991</p>
            <p>Forks: 441</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre>&lt;div style=&quot;display:flex;&quot;&gt;
  &lt;img src=&quot;https://cdn.jsdelivr.net/gh/viarotel-org/escrcpy@main/electron/resources/build/logo.png&quot; alt=&quot;viarotel-escrcpy&quot; width=&quot;108px&quot;&gt;
&lt;/div&gt;

# Escrcpy

[![GitCode](https://gitcode.com/viarotel-org/escrcpy/star/badge.svg)](https://gitcode.com/viarotel-org/escrcpy)
[![Gitee](https://gitee.com/viarotel-org/escrcpy/badge/star.svg?theme=dark)](https://gitee.com/viarotel-org/escrcpy)
[![GitHub](https://img.shields.io/github/stars/viarotel-org/escrcpy?label=Github%20Stars)](https://github.com/viarotel-org/escrcpy)
[![Ask DeepWiki](https://deepwiki.com/badge.svg)](https://deepwiki.com/viarotel-org/escrcpy)

üì± Display and control your Android device graphically with scrcpy, powered by Electron. [‰∏≠ÊñáÊñáÊ°£](https://github.com/viarotel-org/escrcpy/blob/main/README-CN.md)

&lt;div style=&quot;display:flex;&quot;&gt;
  &lt;img src=&quot;./screenshots/zh-CN/overview.jpg&quot; alt=&quot;viarotel-escrcpy&quot; width=&quot;100%&quot;&gt;
&lt;/div&gt;

## Features

- üèÉ Synchronization: Faster synchronization with Scrcpy thanks to web technology
- ü§ñ Automation: Auto-connect devices, auto-execute mirroring, custom scripts, scheduled tasks
- üí° Customization: Multi-device management, independent configurations, custom notes, config import/export
- üì° Wireless: Quick connection via QR code scanning
- üîó Reverse Tethering: Gnirehtet reverse tethering
- üé® Themes: Light mode, dark mode, system theme following
- üòé Lightweight: Native support, displays only the device screen
- ‚ö°Ô∏è Performance: 30~120 FPS, depending on the device
- üåü Quality: 1920√ó1080 or higher
- üïí Low Latency: 35~70 ms
- üöÄ Fast Startup: First image displayed in about 1 second
- üôÖ‚Äç‚ôÇÔ∏è Non-intrusive: No installation files left on Android devices
- ü§© User Benefits: No accounts, no ads, no internet connection required
- üóΩ Freedom: Free and open-source software

## Installation

### Manual Installation via Released Packages

Check the [Releases Page](https://github.com/viarotel-org/escrcpy/releases)

### macOS Installation via Homebrew

Refer to [homebrew-escrcpy](https://github.com/viarotel-org/homebrew-escrcpy)

## Documentation

- [Getting Started](https://escrcpy.viarotel.eu.org/guide/started)
- [Shortcuts](https://escrcpy.viarotel.eu.org/reference/scrcpy/shortcuts)
- [Device Operations](https://escrcpy.viarotel.eu.org/guide/operation)
- [Preferences](https://escrcpy.viarotel.eu.org/guide/preferences)
- [Reverse Tethering](https://escrcpy.viarotel.eu.org/reference/gnirehtet/)

## For Developers

If you are a developer and wish to run or help improve this project, refer to the [Development Documentation](https://github.com/viarotel-org/escrcpy/blob/main/develop.md)

## Get Help

As an open-source project powered by passion, support is limited, and updates are irregular.

- [FAQ](https://escrcpy.viarotel.eu.org/help/escrcpy)
- [Report Issues](https://github.com/viarotel-org/escrcpy/issues)
- [Contact Email](viarotel@qq.com)

## What&#039;s Next?

[Milestones](https://escrcpy.viarotel.eu.org/guide/milestones)

## Acknowledgments

This project owes its existence to the following open-source projects:

- [scrcpy](https://github.com/Genymobile/scrcpy)
- [adbkit](https://github.com/DeviceFarmer/adbkit)
- [electron](https://www.electronjs.org/)
- [vue](https://vuejs.org/)
- [gnirehtet](https://github.com/Genymobile/gnirehtet/)

## Donate

If this project has helped you, consider buying me a coffee to keep me motivated for further improvements üòõ

&lt;div style=&quot;display:flex;&quot;&gt;
  &lt;img src=&quot;https://cdn.jsdelivr.net/gh/viarotel-org/escrcpy@main/src/assets/sponsor/viarotel-wepay.png&quot; alt=&quot;viarotel-wepay&quot; width=&quot;30%&quot;&gt;
  &lt;img src=&quot;https://cdn.jsdelivr.net/gh/viarotel-org/escrcpy@main/src/assets/sponsor/viarotel-alipay.png&quot; alt=&quot;viarotel-alipay&quot; width=&quot;30%&quot;&gt;
  &lt;a href=&quot;https://www.paypal.com/paypalme/viarotel&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;
    &lt;img src=&quot;https://cdn.jsdelivr.net/gh/viarotel-org/escrcpy@main/src/assets/sponsor/viarotel-paypal.png&quot; alt=&quot;viarotel-paypal&quot; width=&quot;30%&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;

## Contributors

Thanks to all who contributed!

[Contributors](https://github.com/viarotel/escrcpy/graphs/contributors)

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=viarotel-org/escrcpy&amp;type=Date)](https://star-history.com/#viarotel-org/escrcpy&amp;Date)</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>