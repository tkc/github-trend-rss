<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Tue, 27 May 2025 00:04:51 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[anuraghazra/github-readme-stats]]></title>
            <link>https://github.com/anuraghazra/github-readme-stats</link>
            <guid>https://github.com/anuraghazra/github-readme-stats</guid>
            <pubDate>Tue, 27 May 2025 00:04:51 GMT</pubDate>
            <description><![CDATA[⚡ Dynamically generated stats for your github readmes]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/anuraghazra/github-readme-stats">anuraghazra/github-readme-stats</a></h1>
            <p>⚡ Dynamically generated stats for your github readmes</p>
            <p>Language: JavaScript</p>
            <p>Stars: 73,446</p>
            <p>Forks: 24,837</p>
            <p>Stars today: 21 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[SillyTavern/SillyTavern]]></title>
            <link>https://github.com/SillyTavern/SillyTavern</link>
            <guid>https://github.com/SillyTavern/SillyTavern</guid>
            <pubDate>Tue, 27 May 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[LLM Frontend for Power Users.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/SillyTavern/SillyTavern">SillyTavern/SillyTavern</a></h1>
            <p>LLM Frontend for Power Users.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 14,731</p>
            <p>Forks: 3,306</p>
            <p>Stars today: 27 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[danielmiessler/fabric]]></title>
            <link>https://github.com/danielmiessler/fabric</link>
            <guid>https://github.com/danielmiessler/fabric</guid>
            <pubDate>Tue, 27 May 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[fabric is an open-source framework for augmenting humans using AI. It provides a modular framework for solving specific problems using a crowdsourced set of AI prompts that can be used anywhere.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/danielmiessler/fabric">danielmiessler/fabric</a></h1>
            <p>fabric is an open-source framework for augmenting humans using AI. It provides a modular framework for solving specific problems using a crowdsourced set of AI prompts that can be used anywhere.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 31,272</p>
            <p>Forks: 3,237</p>
            <p>Stars today: 29 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
Fabric is graciously supported by…

[![Github Repo Tagline](https://github.com/user-attachments/assets/96ab3d81-9b13-4df4-ba09-75dee7a5c3d2)](https://warp.dev/fabric)

&lt;img src=&quot;./images/fabric-logo-gif.gif&quot; alt=&quot;fabriclogo&quot; width=&quot;400&quot; height=&quot;400&quot;/&gt;

# `fabric`

![Static Badge](https://img.shields.io/badge/mission-human_flourishing_via_AI_augmentation-purple)
&lt;br /&gt;
![GitHub top language](https://img.shields.io/github/languages/top/danielmiessler/fabric)
![GitHub last commit](https://img.shields.io/github/last-commit/danielmiessler/fabric)
[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](https://opensource.org/licenses/MIT)

&lt;p class=&quot;align center&quot;&gt;
&lt;h4&gt;&lt;code&gt;fabric&lt;/code&gt; is an open-source framework for augmenting humans using AI.&lt;/h4&gt;
&lt;/p&gt;

[Updates](#updates) •
[What and Why](#what-and-why) •
[Philosophy](#philosophy) •
[Installation](#installation) •
[Usage](#usage) •
[Examples](#examples) •
[Just Use the Patterns](#just-use-the-patterns) •
[Custom Patterns](#custom-patterns) •
[Helper Apps](#helper-apps) •
[Meta](#meta)

![Screenshot of fabric](images/fabric-summarize.png)

&lt;/div&gt;

## Navigation

- [`fabric`](#fabric)
  - [Navigation](#navigation)
  - [Updates](#updates)
  - [What and why](#what-and-why)
  - [Intro videos](#intro-videos)
  - [Philosophy](#philosophy)
    - [Breaking problems into components](#breaking-problems-into-components)
    - [Too many prompts](#too-many-prompts)
  - [Installation](#installation)
    - [Get Latest Release Binaries](#get-latest-release-binaries)
      - [Windows](#windows)
      - [macOS (arm64)](#macos-arm64)
      - [macOS (amd64)](#macos-amd64)
      - [Linux (amd64)](#linux-amd64)
      - [Linux (arm64)](#linux-arm64)
    - [Using package managers](#using-package-managers)
      - [macOS (Homebrew)](#macos-homebrew)
      - [Arch Linux (AUR)](#arch-linux-aur)
    - [From Source](#from-source)
    - [Environment Variables](#environment-variables)
    - [Setup](#setup)
    - [Add aliases for all patterns](#add-aliases-for-all-patterns)
      - [Save your files in markdown using aliases](#save-your-files-in-markdown-using-aliases)
    - [Migration](#migration)
    - [Upgrading](#upgrading)
    - [Shell Completions](#shell-completions)
      - [Zsh Completion](#zsh-completion)
      - [Bash Completion](#bash-completion)
      - [Fish Completion](#fish-completion)
  - [Usage](#usage)
  - [Our approach to prompting](#our-approach-to-prompting)
  - [Examples](#examples)
  - [Just use the Patterns](#just-use-the-patterns)
    - [Prompt Strategies](#prompt-strategies)
  - [Custom Patterns](#custom-patterns)
  - [Helper Apps](#helper-apps)
    - [`to_pdf`](#to_pdf)
    - [`to_pdf` Installation](#to_pdf-installation)
    - [`code_helper`](#code_helper)
  - [pbpaste](#pbpaste)
  - [Web Interface](#web-interface)
    - [Installing](#installing)
    - [Streamlit UI](#streamlit-ui)
      - [Clipboard Support](#clipboard-support)
  - [Meta](#meta)
    - [Primary contributors](#primary-contributors)
    - [Contributors](#contributors)

&lt;br /&gt;

## Updates

&gt; [!NOTE]
&gt; May 22, 2025
&gt;
&gt; - Fabric now supports Anthropic&#039;s Claude 4. Read the [blog post from Anthropic](https://www.anthropic.com/news/claude-4).

## What and why

Since the start of 2023 and GenAI we&#039;ve seen a massive number of AI applications for accomplishing tasks. It&#039;s powerful, but _it&#039;s not easy to integrate this functionality into our lives._

&lt;div align=&quot;center&quot;&gt;
&lt;h4&gt;In other words, AI doesn&#039;t have a capabilities problem—it has an &lt;em&gt;integration&lt;/em&gt; problem.&lt;/h4&gt;
&lt;/div&gt;

Fabric was created to address this by enabling everyone to granularly apply AI to everyday challenges.

## Intro videos

Keep in mind that many of these were recorded when Fabric was Python-based, so remember to use the current [install instructions](#installation) below.

- [Network Chuck](https://www.youtube.com/watch?v=UbDyjIIGaxQ)
- [David Bombal](https://www.youtube.com/watch?v=vF-MQmVxnCs)
- [My Own Intro to the Tool](https://www.youtube.com/watch?v=wPEyyigh10g)
- [More Fabric YouTube Videos](https://www.youtube.com/results?search_query=fabric+ai)

## Philosophy

&gt; AI isn&#039;t a thing; it&#039;s a _magnifier_ of a thing. And that thing is **human creativity**.

We believe the purpose of technology is to help humans flourish, so when we talk about AI we start with the **human** problems we want to solve.

### Breaking problems into components

Our approach is to break problems into individual pieces (see below) and then apply AI to them one at a time. See below for some examples.

&lt;img width=&quot;2078&quot; alt=&quot;augmented_challenges&quot; src=&quot;https://github.com/danielmiessler/fabric/assets/50654/31997394-85a9-40c2-879b-b347e4701f06&quot;&gt;

### Too many prompts

Prompts are good for this, but the biggest challenge I faced in 2023——which still exists today—is **the sheer number of AI prompts out there**. We all have prompts that are useful, but it&#039;s hard to discover new ones, know if they are good or not, _and manage different versions of the ones we like_.

One of `fabric`&#039;s primary features is helping people collect and integrate prompts, which we call _Patterns_, into various parts of their lives.

Fabric has Patterns for all sorts of life and work activities, including:

- Extracting the most interesting parts of YouTube videos and podcasts
- Writing an essay in your own voice with just an idea as an input
- Summarizing opaque academic papers
- Creating perfectly matched AI art prompts for a piece of writing
- Rating the quality of content to see if you want to read/watch the whole thing
- Getting summaries of long, boring content
- Explaining code to you
- Turning bad documentation into usable documentation
- Creating social media posts from any content input
- And a million more…

## Installation

To install Fabric, you can use the latest release binaries or install it from the source.

### Get Latest Release Binaries

#### Windows

`https://github.com/danielmiessler/fabric/releases/latest/download/fabric-windows-amd64.exe`

#### macOS (arm64)

`curl -L https://github.com/danielmiessler/fabric/releases/latest/download/fabric-darwin-arm64 &gt; fabric &amp;&amp; chmod +x fabric &amp;&amp; ./fabric --version`

#### macOS (amd64)

`curl -L https://github.com/danielmiessler/fabric/releases/latest/download/fabric-darwin-amd64 &gt; fabric &amp;&amp; chmod +x fabric &amp;&amp; ./fabric --version`

#### Linux (amd64)

`curl -L https://github.com/danielmiessler/fabric/releases/latest/download/fabric-linux-amd64 &gt; fabric &amp;&amp; chmod +x fabric &amp;&amp; ./fabric --version`

#### Linux (arm64)

`curl -L https://github.com/danielmiessler/fabric/releases/latest/download/fabric-linux-arm64 &gt; fabric &amp;&amp; chmod +x fabric &amp;&amp; ./fabric --version`

### Using package managers

**NOTE:** using Homebrew or the Arch Linux package managers makes `fabric` available as `fabric-ai`, so add
the following alias to your shell startup files to account for this:

```bash
alias fabric=&#039;fabric-ai&#039;
```

#### macOS (Homebrew)

`brew install fabric-ai`

#### Arch Linux (AUR)

`yay -S fabric-ai`

### From Source

To install Fabric, [make sure Go is installed](https://go.dev/doc/install), and then run the following command.

```bash
# Install Fabric directly from the repo
go install github.com/danielmiessler/fabric@latest
```

### Environment Variables

You may need to set some environment variables in your `~/.bashrc` on linux or `~/.zshrc` file on mac to be able to run the `fabric` command. Here is an example of what you can add:

For Intel based macs or linux

```bash
# Golang environment variables
export GOROOT=/usr/local/go
export GOPATH=$HOME/go

# Update PATH to include GOPATH and GOROOT binaries
export PATH=$GOPATH/bin:$GOROOT/bin:$HOME/.local/bin:$PATH
```

for Apple Silicon based macs

```bash
# Golang environment variables
export GOROOT=$(brew --prefix go)/libexec
export GOPATH=$HOME/go
export PATH=$GOPATH/bin:$GOROOT/bin:$HOME/.local/bin:$PATH
```

### Setup

Now run the following command

```bash
# Run the setup to set up your directories and keys
fabric --setup
```

If everything works you are good to go.

### Add aliases for all patterns

In order to add aliases for all your patterns and use them directly as commands ie. `summarize` instead of `fabric --pattern summarize`
You can add the following to your `.zshrc` or `.bashrc` file.

```bash
# Loop through all files in the ~/.config/fabric/patterns directory
for pattern_file in $HOME/.config/fabric/patterns/*; do
    # Get the base name of the file (i.e., remove the directory path)
    pattern_name=$(basename &quot;$pattern_file&quot;)

    # Create an alias in the form: alias pattern_name=&quot;fabric --pattern pattern_name&quot;
    alias_command=&quot;alias $pattern_name=&#039;fabric --pattern $pattern_name&#039;&quot;

    # Evaluate the alias command to add it to the current shell
    eval &quot;$alias_command&quot;
done

yt() {
    if [ &quot;$#&quot; -eq 0 ] || [ &quot;$#&quot; -gt 2 ]; then
        echo &quot;Usage: yt [-t | --timestamps] youtube-link&quot;
        echo &quot;Use the &#039;-t&#039; flag to get the transcript with timestamps.&quot;
        return 1
    fi

    transcript_flag=&quot;--transcript&quot;
    if [ &quot;$1&quot; = &quot;-t&quot; ] || [ &quot;$1&quot; = &quot;--timestamps&quot; ]; then
        transcript_flag=&quot;--transcript-with-timestamps&quot;
        shift
    fi
    local video_link=&quot;$1&quot;
    fabric -y &quot;$video_link&quot; $transcript_flag
}
```

You can add the below code for the equivalent aliases inside PowerShell by running `notepad $PROFILE` inside a PowerShell window:

```powershell
# Path to the patterns directory
$patternsPath = Join-Path $HOME &quot;.config/fabric/patterns&quot;
foreach ($patternDir in Get-ChildItem -Path $patternsPath -Directory) {
    $patternName = $patternDir.Name

    # Dynamically define a function for each pattern
    $functionDefinition = @&quot;
function $patternName {
    [CmdletBinding()]
    param(
        [Parameter(ValueFromPipeline = `$true)]
        [string] `$InputObject,

        [Parameter(ValueFromRemainingArguments = `$true)]
        [String[]] `$patternArgs
    )

    begin {
        # Initialize an array to collect pipeline input
        `$collector = @()
    }

    process {
        # Collect pipeline input objects
        if (`$InputObject) {
            `$collector += `$InputObject
        }
    }

    end {
        # Join all pipeline input into a single string, separated by newlines
        `$pipelineContent = `$collector -join &quot;`n&quot;

        # If there&#039;s pipeline input, include it in the call to fabric
        if (`$pipelineContent) {
            `$pipelineContent | fabric --pattern $patternName `$patternArgs
        } else {
            # No pipeline input; just call fabric with the additional args
            fabric --pattern $patternName `$patternArgs
        }
    }
}
&quot;@
    # Add the function to the current session
    Invoke-Expression $functionDefinition
}

# Define the &#039;yt&#039; function as well
function yt {
    [CmdletBinding()]
    param(
        [Parameter()]
        [Alias(&quot;timestamps&quot;)]
        [switch]$t,

        [Parameter(Position = 0, ValueFromPipeline = $true)]
        [string]$videoLink
    )

    begin {
        $transcriptFlag = &quot;--transcript&quot;
        if ($t) {
            $transcriptFlag = &quot;--transcript-with-timestamps&quot;
        }
    }

    process {
        if (-not $videoLink) {
            Write-Error &quot;Usage: yt [-t | --timestamps] youtube-link&quot;
            return
        }
    }

    end {
        if ($videoLink) {
            # Execute and allow output to flow through the pipeline
            fabric -y $videoLink $transcriptFlag
        }
    }
}
```

This also creates a `yt` alias that allows you to use `yt https://www.youtube.com/watch?v=4b0iet22VIk` to get transcripts, comments, and metadata.

#### Save your files in markdown using aliases

If in addition to the above aliases you would like to have the option to save the output to your favorite markdown note vault like Obsidian then instead of the above add the following to your `.zshrc` or `.bashrc` file:

```bash
# Define the base directory for Obsidian notes
obsidian_base=&quot;/path/to/obsidian&quot;

# Loop through all files in the ~/.config/fabric/patterns directory
for pattern_file in ~/.config/fabric/patterns/*; do
    # Get the base name of the file (i.e., remove the directory path)
    pattern_name=$(basename &quot;$pattern_file&quot;)

    # Remove any existing alias with the same name
    unalias &quot;$pattern_name&quot; 2&gt;/dev/null

    # Define a function dynamically for each pattern
    eval &quot;
    $pattern_name() {
        local title=\$1
        local date_stamp=\$(date +&#039;%Y-%m-%d&#039;)
        local output_path=\&quot;\$obsidian_base/\${date_stamp}-\${title}.md\&quot;

        # Check if a title was provided
        if [ -n \&quot;\$title\&quot; ]; then
            # If a title is provided, use the output path
            fabric --pattern \&quot;$pattern_name\&quot; -o \&quot;\$output_path\&quot;
        else
            # If no title is provided, use --stream
            fabric --pattern \&quot;$pattern_name\&quot; --stream
        fi
    }
    &quot;
done
```

This will allow you to use the patterns as aliases like in the above for example `summarize` instead of `fabric --pattern summarize --stream`, however if you pass in an extra argument like this `summarize &quot;my_article_title&quot;` your output will be saved in the destination that you set in `obsidian_base=&quot;/path/to/obsidian&quot;` in the following format `YYYY-MM-DD-my_article_title.md` where the date gets autogenerated for you.
You can tweak the date format by tweaking the `date_stamp` format.

### Migration

If you have the Legacy (Python) version installed and want to migrate to the Go version, here&#039;s how you do it. It&#039;s basically two steps: 1) uninstall the Python version, and 2) install the Go version.

```bash
# Uninstall Legacy Fabric
pipx uninstall fabric

# Clear any old Fabric aliases
(check your .bashrc, .zshrc, etc.)
# Install the Go version
go install github.com/danielmiessler/fabric@latest
# Run setup for the new version. Important because things have changed
fabric --setup
```

Then [set your environmental variables](#environment-variables) as shown above.

### Upgrading

The great thing about Go is that it&#039;s super easy to upgrade. Just run the same command you used to install it in the first place and you&#039;ll always get the latest version.

```bash
go install github.com/danielmiessler/fabric@latest
```

### Shell Completions

Fabric provides shell completion scripts for Zsh, Bash, and Fish
shells, making it easier to use the CLI by providing tab completion
for commands and options.

#### Zsh Completion

To enable Zsh completion:

```bash
# Copy the completion file to a directory in your $fpath
mkdir -p ~/.zsh/completions
cp completions/_fabric ~/.zsh/completions/

# Add the directory to fpath in your .zshrc before compinit
echo &#039;fpath=(~/.zsh/completions $fpath)&#039; &gt;&gt; ~/.zshrc
echo &#039;autoload -Uz compinit &amp;&amp; compinit&#039; &gt;&gt; ~/.zshrc
```

#### Bash Completion

To enable Bash completion:

```bash
# Source the completion script in your .bashrc
echo &#039;source /path/to/fabric/completions/fabric.bash&#039; &gt;&gt; ~/.bashrc

# Or copy to the system-wide bash completion directory
sudo cp completions/fabric.bash /etc/bash_completion.d/
```

#### Fish Completion

To enable Fish completion:

```bash
# Copy the completion file to the fish completions directory
mkdir -p ~/.config/fish/completions
cp completions/fabric.fish ~/.config/fish/completions/
```

## Usage

Once you have it all set up, here&#039;s how to use it.

```bash
fabric -h
```

```plaintext

Usage:
  fabric [OPTIONS]

Application Options:
  -p, --pattern=                    Choose a pattern from the available patterns
  -v, --variable=                   Values for pattern variables, e.g. -v=#role:expert -v=#points:30
  -C, --context=                    Choose a context from the available contexts
      --session=                    Choose a session from the available sessions
  -a, --attachment=                 Attachment path or URL (e.g. for OpenAI image recognition messages)
  -S, --setup                       Run setup for all reconfigurable parts of fabric
  -t, --temperature=                Set temperature (default: 0.7)
  -T, --topp=                       Set top P (default: 0.9)
  -s, --stream                      Stream
  -P, --presencepenalty=            Set presence penalty (default: 0.0)
  -r, --raw                         Use the defaults of the model without sending chat options (like temperature etc.) and use the user role instead of the system role for patterns.
  -F, --frequencypenalty=           Set frequency penalty (default: 0.0)
  -l, --listpatterns                List all patterns
  -L, --listmodels                  List all available models
  -x, --listcontexts                List all contexts
  -X, --listsessions                List all sessions
  -U, --updatepatterns              Update patterns
  -c, --copy                        Copy to clipboard
  -m, --model=                      Choose model
      --modelContextLength=         Model context length (only affects ollama)
  -o, --output=                     Output to file
      --output-session              Output the entire session (also a temporary one) to the output file
  -n, --latest=                     Number of latest patterns to list (default: 0)
  -d, --changeDefaultModel          Change default model
  -y, --youtube=                    YouTube video or play list &quot;URL&quot; to grab transcript, comments from it and send to chat or print it put to the console and store it in the output file
      --playlist                    Prefer playlist over video if both ids are present in the URL
      --transcript                  Grab transcript from YouTube video and send to chat (it is used per default).
      --transcript-with-timestamps  Grab transcript from YouTube video with timestamps and send to chat
      --comments                    Grab comments from YouTube video and send to chat
      --metadata                    Output video metadata
  -g, --language=                   Specify the Language Code for the chat, e.g. -g=en -g=zh
  -u, --scrape_url=                 Scrape website URL to markdown using Jina AI
  -q, --scrape_question=            Search question using Jina AI
  -e, --seed=                       Seed to be used for LMM generation
  -w, --wipecontext=                Wipe context
  -W, --wipesession=                Wipe session
      --printcontext=               Print context
      --printsession=               Print session
      --readability                 Convert HTML input into a clean, readable view
      --input-has-vars              Apply variables to user input
      --dry-run                     Show what would be sent to the model without actually sending it
      --serve                       Serve the Fabric Rest API
      --serveOllama                 Serve the Fabric Rest API with ollama endpoints
      --address=                    The address to bind the REST API (default: :8080)
      --api-key=                    API key used to secure server routes
      --config=                     Path to YAML config file
      --version                     Print current version
      --listextensions              List all registered extensions
      --addextension=               Register a new extension from config file path
      --rmextension=                Remove a registered extension by name
      --strategy=                   Choose a strategy from the available strategies
      --liststrategies              List all strategies
      --listvendors                 List all vendors
      --shell-complete-list         Output raw list without headers/formatting (for shell completion)

Help Options:
  -h, --help                        Show this help message

```

## Our approach to prompting

Fabric _Patterns_ are different than most prompts you&#039;ll see.

- **First, we use `Markdown` to help ensure maximum readability and editability**. This not only helps the creator make a good one, but also anyone who wants to deeply understand what it does. _Importantly, this also includes the AI you&#039;re sending it to!_

Here&#039;s an example of

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[docsifyjs/docsify]]></title>
            <link>https://github.com/docsifyjs/docsify</link>
            <guid>https://github.com/docsifyjs/docsify</guid>
            <pubDate>Tue, 27 May 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[🃏 A magical documentation site generator.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/docsifyjs/docsify">docsifyjs/docsify</a></h1>
            <p>🃏 A magical documentation site generator.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 29,449</p>
            <p>Forks: 5,750</p>
            <p>Stars today: 81 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://docsify.js.org&quot;&gt;
    &lt;img alt=&quot;docsify&quot; src=&quot;./docs/_media/icon.svg&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  A magical documentation site generator.
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;#backers&quot;&gt;&lt;img alt=&quot;Backers on Open Collective&quot; src=&quot;https://opencollective.com/docsify/backers/badge.svg?style=flat-square&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;#sponsors&quot;&gt;
    &lt;img alt=&quot;Sponsors on Open Collective&quot; src=&quot;https://opencollective.com/docsify/sponsors/badge.svg?style=flat-square&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/docsifyjs/docsify/actions/workflows/test.yml&quot;&gt;&lt;img src=&quot;https://github.com/docsifyjs/docsify/actions/workflows/test.yml/badge.svg&quot; alt=&quot;Build &amp; Test&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/docsify&quot;&gt;&lt;img alt=&quot;npm&quot; src=&quot;https://img.shields.io/npm/v/docsify.svg?style=flat-square&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/QingWei-Li/donate&quot;&gt;&lt;img alt=&quot;donate&quot; src=&quot;https://img.shields.io/badge/%24-donate-ff69b4.svg?style=flat-square&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/3NwKFyR&quot;&gt;&lt;img alt=&quot;Join Discord community and chat about Docsify&quot; src=&quot;https://img.shields.io/discord/713647066802421792.svg?label=&amp;logo=discord&amp;logoColor=ffffff&amp;color=7389D8&amp;labelColor=6A7EC2&amp;cacheSeconds=60&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://gitpod.io/#https://github.com/docsifyjs/docsify&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod&quot; alt=&quot;Gitpod Ready-to-Code&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;Gold Sponsor via &lt;a href=&quot;https://opencollective.com/docsify&quot;&gt;Open Collective&lt;/a&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://opencollective.com/docsify/order/3254&quot;&gt;
    &lt;img src=&quot;https://opencollective.com/docsify/tiers/gold-sponsor.svg?avatarHeight=36&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

## Links

- [`develop` branch preview](https://docsify-preview.vercel.app/)
- [Documentation](https://docsify.js.org)
- [CLI](https://github.com/docsifyjs/docsify-cli)
- CDN: [UNPKG](https://unpkg.com/docsify/) | [jsDelivr](https://cdn.jsdelivr.net/npm/docsify/) | [cdnjs](https://cdnjs.com/libraries/docsify)
- [Awesome docsify](https://github.com/docsifyjs/awesome-docsify)
- [Community chat](https://discord.gg/3NwKFyR)

## Features

- No statically built html files
- Simple and lightweight
- Smart full-text search plugin
- Multiple themes
- Useful plugin API
- Compatible with IE11
- Experimental SSR support ([example](https://github.com/docsifyjs/docsify-ssr-demo))
- Support embedded files

## Quick start

Look at [this tutorial](https://docsify.js.org/#/quickstart)

[![Edit 307qqv236](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/307qqv236)

## Showcase

These projects are using docsify to generate their sites. Pull requests welcome :blush:

Move to [awesome-docsify](https://github.com/docsifyjs/awesome-docsify#showcase)

## Similar projects

| Project                                          | Description                              |
| ------------------------------------------------ | ---------------------------------------- |
| [docute](https://github.com/egoist/docute)       | 📜 Effortlessly documentation done right |
| [docpress](https://github.com/docpress/docpress) | Documentation website generator          |

## Contributing

### Online one-click setup for Contributing

You can use Gitpod (a free online VS Code-like IDE) for contributing. With a single click it&#039;ll launch a workspace and automatically:

- clone the docsify repo.
- install the dependencies.
- start `npm run dev`.

So that you can start straight away.

[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/docsifyjs/docsify)

- Fork it!
- Create your feature branch: `git checkout -b my-new-feature`
- Commit your changes: `git add . &amp;&amp; git commit -m &#039;Add some feature&#039;`
- Push to the branch: `git push origin my-new-feature`
- Submit a pull request

## Development

```bash
npm run bootstrap &amp;&amp; npm run dev
```

## Backers

Thank you to all our backers! 🙏 [[Become a backer](https://opencollective.com/docsify#backers)]

&lt;a href=&quot;https://opencollective.com/docsify#backers&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/docsify/backers.svg?width=890&quot;&gt;&lt;/a&gt;

## Sponsors

Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/docsify#silver-sponsors)]

&lt;a href=&quot;https://opencollective.com/docsify/silver-sponsors/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/docsify/silver-sponsors/0/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/docsify/silver-sponsors/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/docsify/silver-sponsors/1/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/docsify/silver-sponsors/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/docsify/silver-sponsors/2/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/docsify/silver-sponsors/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/docsify/silver-sponsors/3/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/docsify/silver-sponsors/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/docsify/silver-sponsors/4/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/docsify/silver-sponsors/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/docsify/silver-sponsors/5/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/docsify/silver-sponsors/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/docsify/silver-sponsors/6/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/docsify/silver-sponsors/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/docsify/silver-sponsors/7/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/docsify/silver-sponsors/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/docsify/silver-sponsors/8/avatar.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/docsify/silver-sponsors/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/docsify/silver-sponsors/9/avatar.svg&quot;&gt;&lt;/a&gt;

## Contributors

This project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].
&lt;a href=&quot;https://github.com/docsifyjs/docsify/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/docsify/contributors.svg?width=890&quot; /&gt;&lt;/a&gt;

## License

[MIT](LICENSE)

## Special Thanks

A preview of Docsify&#039;s PR and develop branch is &lt;a href=&quot;https://vercel.com/?utm_source=docsifyjs&amp;utm_campaign=oss&quot; target=&quot;_blank&quot;&gt;Powered by &lt;img src=&quot;https://cdn.jsdelivr.net/gh/docsifyjs/docsify/docs/_media/vercel_logo.svg&quot; alt=&quot;Vercel&quot; width=&quot;133px&quot;&gt;&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[is-a-dev/register]]></title>
            <link>https://github.com/is-a-dev/register</link>
            <guid>https://github.com/is-a-dev/register</guid>
            <pubDate>Tue, 27 May 2025 00:04:47 GMT</pubDate>
            <description><![CDATA[Grab your own sweet-looking '.is-a.dev' subdomain.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/is-a-dev/register">is-a-dev/register</a></h1>
            <p>Grab your own sweet-looking '.is-a.dev' subdomain.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,537</p>
            <p>Forks: 12,114</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
   &lt;img alt=&quot;is-a.dev Banner&quot; src=&quot;https://raw.githubusercontent.com/is-a-dev/register/main/media/banner.png&quot;&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
   &lt;img alt=&quot;Domains&quot; src=&quot;https://img.shields.io/github/directory-file-count/is-a-dev/register/domains?color=5c46eb&amp;label=domains&amp;style=for-the-badge&quot;&gt;
   &lt;img alt=&quot;Open Pull Requests&quot; src=&quot;https://img.shields.io/github/issues-raw/is-a-dev/register?color=5c46eb&amp;label=issues&amp;style=for-the-badge&quot;&gt;
   &lt;img alt=&quot;Open Issues&quot; src=&quot;https://img.shields.io/github/issues-pr-raw/is-a-dev/register?color=5c46eb&amp;label=pull%20requests&amp;style=for-the-badge&quot;&gt;
   &lt;br&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;is-a.dev&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;&lt;strong&gt;is-a.dev&lt;/strong&gt; is a service that allows developers to get a sweet-looking &lt;code&gt;.is-a.dev&lt;/code&gt; subdomain for their personal websites.&lt;/p&gt;

## Announcements &amp; Status Updates
Please join our [Discord server](https://discord.gg/is-a-dev-830872854677422150) for announcements, updates &amp; upgrades, and downtime notifications regarding the service.
Not all of these will be posted on GitHub[^1], however they will always be posted in our Discord server.

[^1]: We usually only post announcements on GitHub in the case of a serious incident. In that case, you&#039;ll likely see it at the top of this README file.

&lt;a href=&quot;https://discord.gg/is-a-dev-830872854677422150&quot;&gt;&lt;img alt=&quot;Discord Server&quot; src=&quot;https://invidget.wdh.app/is-a-dev-830872854677422150&quot;&gt;&lt;/a&gt;

# Register
&gt; If you want a more visual guide, check out [this blog post](https://wdh.gg/tX3ghge).

- [Fork](https://github.com/is-a-dev/register/fork) this repository.
- Add a new file called `your-domain-name.json` in the `domains` folder to register `your-domain-name.is-a.dev`.
- [Read the documentation](https://docs.is-a.dev).
   - If you are applying for NS records please read [this](#ns-records).
- Your pull request will be reviewed and merged. *Make sure to keep an eye on it in case we need you to make any changes!*
- After the pull request is merged, please allow up to 24 hours for the changes to propagate.
- Enjoy your new `.is-a.dev` subdomain! Please consider leaving us a star ⭐️ to help support us!

### NS Records
When applying for NS records, please be aware we already support a [wide range of DNS records](https://docs.is-a.dev/faq/#which-records-are-supported), so likely do not not need them. 

In your PR, please explain why you need NS records, including examples, to help mitigate potential abuse. Refer to the [FAQ](https://docs.is-a.dev/faq/#who-can-use-ns-records) for guidelines on allowed usage.

***Pull requests adding NS records without sufficient reasoning will be closed.***

&gt; Also see: [Why are you so strict with NS records](https://docs.is-a.dev/faq/#why-are-you-so-strict-with-ns-records)?

## Report Abuse
If you find any subdomains being used for abusive purposes, please report them by [creating an issue](https://github.com/is-a-dev/register/issues/new?assignees=&amp;labels=report-abuse&amp;projects=&amp;template=report-abuse.md&amp;title=Report+abuse) with the relevant evidence.

---

We are proud to announce that we are supported by Cloudflare&#039;s [Project Alexandria](https://www.cloudflare.com/lp/project-alexandria) sponsorship program. We would not be able to operate without their help! 💖

&lt;a href=&quot;https://www.cloudflare.com&quot;&gt;
   &lt;img alt=&quot;Cloudflare Logo&quot; src=&quot;https://raw.githubusercontent.com/is-a-dev/register/main/media/cloudflare.png&quot; height=&quot;96&quot;&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[gradio-app/fastrtc]]></title>
            <link>https://github.com/gradio-app/fastrtc</link>
            <guid>https://github.com/gradio-app/fastrtc</guid>
            <pubDate>Tue, 27 May 2025 00:04:46 GMT</pubDate>
            <description><![CDATA[The python library for real-time communication]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/gradio-app/fastrtc">gradio-app/fastrtc</a></h1>
            <p>The python library for real-time communication</p>
            <p>Language: JavaScript</p>
            <p>Stars: 3,965</p>
            <p>Forks: 347</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre>&lt;div style=&#039;text-align: center; margin-bottom: 1rem; display: flex; justify-content: center; align-items: center;&#039;&gt;
    &lt;h1 style=&#039;color: white; margin: 0;&#039;&gt;FastRTC&lt;/h1&gt;
    &lt;img src=&#039;https://huggingface.co/datasets/freddyaboulton/bucket/resolve/main/fastrtc_logo_small.png&#039;
         alt=&quot;FastRTC Logo&quot; 
         style=&quot;margin-right: 10px;&quot;&gt;
&lt;/div&gt;

&lt;div style=&quot;display: flex; flex-direction: row; justify-content: center&quot;&gt;
&lt;img style=&quot;display: block; padding-right: 5px; height: 20px;&quot; alt=&quot;Static Badge&quot; src=&quot;https://img.shields.io/pypi/v/fastrtc&quot;&gt; 
&lt;a href=&quot;https://github.com/gradio-app/fastrtc&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Static Badge&quot; src=&quot;https://img.shields.io/badge/github-white?logo=github&amp;logoColor=black&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;h3 style=&#039;text-align: center&#039;&gt;
The Real-Time Communication Library for Python. 
&lt;/h3&gt;

Turn any python function into a real-time audio and video stream over WebRTC or WebSockets.

## Installation

```bash
pip install fastrtc
```

to use built-in pause detection (see [ReplyOnPause](https://fastrtc.org/userguide/audio/#reply-on-pause)), and text to speech (see [Text To Speech](https://fastrtc.org/userguide/audio/#text-to-speech)), install the `vad` and `tts` extras:

```bash
pip install &quot;fastrtc[vad, tts]&quot;
```

## Key Features

- 🗣️ Automatic Voice Detection and Turn Taking built-in, only worry about the logic for responding to the user.
- 💻 Automatic UI - Use the `.ui.launch()` method to launch the webRTC-enabled built-in Gradio UI.
- 🔌 Automatic WebRTC Support - Use the `.mount(app)` method to mount the stream on a FastAPI app and get a webRTC endpoint for your own frontend! 
- ⚡️ Websocket Support - Use the `.mount(app)` method to mount the stream on a FastAPI app and get a websocket endpoint for your own frontend! 
- 📞 Automatic Telephone Support - Use the `fastphone()` method of the stream to launch the application and get a free temporary phone number!
- 🤖 Completely customizable backend - A `Stream` can easily be mounted on a FastAPI app so you can easily extend it to fit your production application. See the [Talk To Claude](https://huggingface.co/spaces/fastrtc/talk-to-claude) demo for an example on how to serve a custom JS frontend.

## Docs

[https://fastrtc.org](https://fastrtc.org)

## Examples
See the [Cookbook](https://fastrtc.org/cookbook/) for examples of how to use the library.

&lt;table&gt;
&lt;tr&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🗣️👀 Gemini Audio Video Chat&lt;/h3&gt;
&lt;p&gt;Stream BOTH your webcam video and audio feeds to Google Gemini. You can also upload images to augment your conversation!&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/9636dc97-4fee-46bb-abb8-b92e69c08c71&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/freddyaboulton/gemini-audio-video-chat&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/freddyaboulton/gemini-audio-video-chat/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🗣️ Google Gemini Real Time Voice API&lt;/h3&gt;
&lt;p&gt;Talk to Gemini in real time using Google&#039;s voice API.&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/ea6d18cb-8589-422b-9bba-56332d9f61de&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/talk-to-gemini&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/talk-to-gemini/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🗣️ OpenAI Real Time Voice API&lt;/h3&gt;
&lt;p&gt;Talk to ChatGPT in real time using OpenAI&#039;s voice API.&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/178bdadc-f17b-461a-8d26-e915c632ff80&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/talk-to-openai&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/talk-to-openai/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🤖 Hello Computer&lt;/h3&gt;
&lt;p&gt;Say computer before asking your question!&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/afb2a3ef-c1ab-4cfb-872d-578f895a10d5&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/hello-computer&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/hello-computer/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🤖 Llama Code Editor&lt;/h3&gt;
&lt;p&gt;Create and edit HTML pages with just your voice! Powered by SambaNova systems.&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/98523cf3-dac8-4127-9649-d91a997e3ef5&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/llama-code-editor&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/llama-code-editor/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🗣️ Talk to Claude&lt;/h3&gt;
&lt;p&gt;Use the Anthropic and Play.Ht APIs to have an audio conversation with Claude.&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/fb6ef07f-3ccd-444a-997b-9bc9bdc035d3&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/talk-to-claude&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/talk-to-claude/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🎵 Whisper Transcription&lt;/h3&gt;
&lt;p&gt;Have whisper transcribe your speech in real time!&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/87603053-acdc-4c8a-810f-f618c49caafb&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/whisper-realtime&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/whisper-realtime/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;📷 Yolov10 Object Detection&lt;/h3&gt;
&lt;p&gt;Run the Yolov10 model on a user webcam stream in real time!&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/f82feb74-a071-4e81-9110-a01989447ceb&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/object-detection&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/object-detection/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🗣️ Kyutai Moshi&lt;/h3&gt;
&lt;p&gt;Kyutai&#039;s moshi is a novel speech-to-speech model for modeling human conversations.&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/becc7a13-9e89-4a19-9df2-5fb1467a0137&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/freddyaboulton/talk-to-moshi&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/freddyaboulton/talk-to-moshi/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🗣️ Hello Llama: Stop Word Detection&lt;/h3&gt;
&lt;p&gt;A code editor built with Llama 3.3 70b that is triggered by the phrase &quot;Hello Llama&quot;. Build a Siri-like coding assistant in 100 lines of code!&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/3e10cb15-ff1b-4b17-b141-ff0ad852e613&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/freddyaboulton/hey-llama-code-editor&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/freddyaboulton/hey-llama-code-editor/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

## Usage

This is an shortened version of the official [usage guide](https://freddyaboulton.github.io/gradio-webrtc/user-guide/). 

- `.ui.launch()`: Launch a built-in UI for easily testing and sharing your stream. Built with [Gradio](https://www.gradio.app/).
- `.fastphone()`: Get a free temporary phone number to call into your stream. Hugging Face token required.
- `.mount(app)`: Mount the stream on a [FastAPI](https://fastapi.tiangolo.com/) app. Perfect for integrating with your already existing production system.


## Quickstart

### Echo Audio

```python
from fastrtc import Stream, ReplyOnPause
import numpy as np

def echo(audio: tuple[int, np.ndarray]):
    # The function will be passed the audio until the user pauses
    # Implement any iterator that yields audio
    # See &quot;LLM Voice Chat&quot; for a more complete example
    yield audio

stream = Stream(
    handler=ReplyOnPause(echo),
    modality=&quot;audio&quot;, 
    mode=&quot;send-receive&quot;,
)
```

### LLM Voice Chat

```py
from fastrtc import (
    ReplyOnPause, AdditionalOutputs, Stream,
    audio_to_bytes, aggregate_bytes_to_16bit
)
import gradio as gr
from groq import Groq
import anthropic
from elevenlabs import ElevenLabs

groq_client = Groq()
claude_client = anthropic.Anthropic()
tts_client = ElevenLabs()


# See &quot;Talk to Claude&quot; in Cookbook for an example of how to keep 
# track of the chat history.
def response(
    audio: tuple[int, np.ndarray],
):
    prompt = groq_client.audio.transcriptions.create(
        file=(&quot;audio-file.mp3&quot;, audio_to_bytes(audio)),
        model=&quot;whisper-large-v3-turbo&quot;,
        response_format=&quot;verbose_json&quot;,
    ).text
    response = claude_client.messages.create(
        model=&quot;claude-3-5-haiku-20241022&quot;,
        max_tokens=512,
        messages=[{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: prompt}],
    )
    response_text = &quot; &quot;.join(
        block.text
        for block in response.content
        if getattr(block, &quot;type&quot;, None) == &quot;text&quot;
    )
    iterator = tts_client.text_to_speech.convert_as_stream(
        text=response_text,
        voice_id=&quot;JBFqnCBsd6RMkjVDRZzb&quot;,
        model_id=&quot;eleven_multilingual_v2&quot;,
        output_format=&quot;pcm_24000&quot;
        
    )
    for chunk in aggregate_bytes_to_16bit(iterator):
        audio_array = np.frombuffer(chunk, dtype=np.int16).reshape(1, -1)
        yield (24000, audio_array)

stream = Stream(
    modality=&quot;audio&quot;,
    mode=&quot;send-receive&quot;,
    handler=ReplyOnPause(response),
)
```

### Webcam Stream

```python
from fastrtc import Stream
import numpy as np


def flip_vertically(image):
    return np.flip(image, axis=0)


stream = Stream(
    handler=flip_vertically,
    modality=&quot;video&quot;,
    mode=&quot;send-receive&quot;,
)
```

### Object Detection

```python
from fastrtc import Stream
import gradio as gr
import cv2
from huggingface_hub import hf_hub_download
from .inference import YOLOv10

model_file = hf_hub_download(
    repo_id=&quot;onnx-community/yolov10n&quot;, filename=&quot;onnx/model.onnx&quot;
)

# git clone https://huggingface.co/spaces/fastrtc/object-detection
# for YOLOv10 implementation
model = YOLOv10(model_file)

def detection(image, conf_threshold=0.3):
    image = cv2.resize(image, (model.input_width, model.input_height))
    new_image = model.detect_objects(image, conf_threshold)
    return cv2.resize(new_image, (500, 500))

stream = Stream(
    handler=detection,
    modality=&quot;video&quot;, 
    mode=&quot;send-receive&quot;,
    additional_inputs=[
        gr.Slider(minimum=0, maximum=1, step=0.01, value=0.3)
    ]
)
```

## Running the Stream

Run:

### Gradio

```py
stream.ui.launch()
```

### Telephone (Audio Only)

    ```py
    stream.fastphone()
    ```

### FastAPI

```py
app = FastAPI()
stream.mount(app)

# Optional: Add routes
@app.get(&quot;/&quot;)
async def _():
    return HTMLResponse(content=open(&quot;index.html&quot;).read())

# uvicorn app:app --host 0.0.0.0 --port 8000
```
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[qist/tvbox]]></title>
            <link>https://github.com/qist/tvbox</link>
            <guid>https://github.com/qist/tvbox</guid>
            <pubDate>Tue, 27 May 2025 00:04:45 GMT</pubDate>
            <description><![CDATA[OK影视、tvbox配置文件，如果喜欢，请Fork自用。使用前请仔细阅读仓库说明，一旦使用将被视为你已了解。]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/qist/tvbox">qist/tvbox</a></h1>
            <p>OK影视、tvbox配置文件，如果喜欢，请Fork自用。使用前请仔细阅读仓库说明，一旦使用将被视为你已了解。</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,003</p>
            <p>Forks: 1,912</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre>OK影视、TVBox、猫影视配置文件。所有资源均来自于各路大神无私分享，如有侵权，请联系删除。

所有以任何方式查看本仓库内容的人、或直接或间接使用本仓库内容的使用者都应仔细阅读此声明。本仓库管理者保留随时更改或补充此免责声明的权利。一旦使用、复制、修改了本仓库内容，则视为您已接受此免责声明。

本仓库管理者不能保证本仓库内容的合法性、准确性、完整性和有效性，请根据情况自行判断。本仓库内容，仅用于测试和学习研究，禁止用于商业用途，不得将其用于违反国家、地区、组织等的法律法规或相关规定的其他用途，禁止任何公众号、自媒体进行任何形式的转载、发布，请不要在中华人民共和国境内使用本仓库内容，否则后果自负。

本仓库内容中涉及的第三方硬件、软件等，与本仓库内容没有任何直接或间接的关系。本仓库内容仅对部署和使用过程进行客观描述，不代表支持使用任何第三方硬件、软件。使用任何第三方硬件、软件，所造成的一切后果由使用的个人或组织承担，与本仓库内容无关。

所有直接或间接使用本仓库内容的个人和组织，应 24 小时内完成学习和研究，并及时删除本仓库内容。如对本仓库内容的功能有需求，应自行开发相关功能。所有基于本仓库内容的源代码，进行的任何修改，为其他个人或组织的自发行为，与本仓库内容没有任何直接或间接的关系，所造成的一切后果亦与本仓库内容和本仓库管理者无关。

1. tvbox配置：

（1）0707.json  OK影视多线配置接口,仅适用于Fengmi影视；

（2）0821.json  大而全的配置，在饭太硬配置的基础上添加了若干优质点播源、直播线路和解析；

（3）0822.json  极简配置，OK大佬的jar，还包括几条路飞、俊于的源。

（4）0825.json  小而精的配置，jar包来源于Panda Groove的go包，其中泥巴、星星等，需要替换成自己的代理url；

（5）0826.json  完全来源于饭太硬的jar包和配置；

（6）0827.json  jar包和配置来源于fongmi；

（7）0828.json  jar包和配置来源于唐三；

（8）js.json  jar包来源于Panda Groove的go包，资源来源于道长drpy(js)仓库 添加 YouTube 直播；

（9）XBPQ.json  XBPQ源，jar包和配置来源于小米小爆脾气；

（10）XYQ.json  XYQ源，jar包和配置来源于香雅情；

（11）cat.json  cat源，资源来源于网络各路大佬。/cat/js配合猫影视可直接食用；

（12） jsm.json 来自js.json + 0826.json 合集 家庭电视可用 删除YouTube 直播，OK影视 可用 电视建议使用OK影视 https://github.com/FongMi/Release 支持多直播选择。
 

猫影视使用github 配置

 配置教程：&lt;https://omii.top/1296.html&gt;

`注意使用Gitee或Github导入，并设置为私有仓库，CatVodOpen仅支持私有仓库跟dav`

V1.1.3版本以上

`github://Token@github.com/xxxxx/tvbox/dist/index.js.md5`

改动

* quickjs改为nodejs，proxy设置修改
* 在ios上无法使用local，使用db替换local所有方法
* nodejs 的优势在于更加灵活

V1.1.2版本以下

`github://Token@gitee.com/xxxxx/tvbox/js/open_config.json`

1. APP推荐:

（1）OK影视版本  项目地址：&lt;https://github.com/FongMi/TV&gt; 支持直播多线路、自动换源、直播倍速，手机投屏；

（2）q215613905版本  项目地址：&lt;https://github.com/q215613905/TVBoxOS&gt; 支持直播回放；

（3）takagen99版本  项目地址：&lt;https://github.com/takagen99/Box&gt; 支持直播回放，界面美观；

（4）皮皮虾版本  发布频道：&lt;https://t.me/pipixiawerun&gt; 支持直播回放，支持弹幕；

（5）新版猫影视   项目地址：&lt;https://github.com/catvod/CatVodOpen&gt; 界面简洁，支持多平台。

（6）手机版本  项目地址：&lt;https://github.com/XiaoRanLiu3119/TVBoxOS-Mobile&gt; 竖屏

（7）q215613905 takagen99 编译apk 项目地址：https://github.com/o0HalfLife0o/TVBoxOSC

3. TVBox各路大佬配置（排名不分先后）：

（1）饭太硬：http://www.饭太硬.top/tv/

（2）okjack：https://jihulab.com/okcaptain/kko/raw/main/ok.txt

（3）王二小放牛娃：http://tvbox.王二小放牛娃.xyz

（4）摸鱼儿：http://我不是.摸鱼儿.top

（5）霜辉月明py：https://999740.xyz/raw.githubusercontent.com/lm317379829/PyramidStore/pyramid/py.json

（6）小米小爆脾气：http://xhww.fun/小米/DEMO.json

（7）南风：https://agit.ai/Yoursmile7/TVBox/raw/branch/master/XC.json

（8）神器：https://神器每日推送.tk/pz.json

（9）巧技：http://pandown.pro/tvbox/tvbox.json

（10）Ray：https://100km.top/0

（11）俊于：http://home.jundie.top:81/top98.json

（12）橘子柚：https://mirror.ghproxy.com/https://raw.githubusercontent.com/hackyjso/box/main/jzy.txt

（13）电视（自用）： &lt;https://github.moeyy.xyz/raw.githubusercontent.com/qist/tvbox/master/jsm.json&gt;

（14）github代理地址： `https://github.moeyy.xyz https://mirror.ghproxy.com/ https://gh-proxy.com https://ghproxy.net` 选择一个速度快使用

（15） 还可以使用域名: `https://qist.ugigc.dpdns.org/jsm.json` cloudflare Pages 构建
 
（16） 添加潇洒 接口： https://raw.githubusercontent.com/qist/tvbox/refs/heads/master/xiaosa/api.json 或者 https://qist.ugigc.dpdns.org/xiaosa/api.json

1. token.json格式说明：

模板文件json/tokentemplate.json

特别警告：据传阿里要求使用者不得使用多线程加速方式使用阿里云盘资源，若并发连接数超过10有可能导致被限制访问或封禁帐号的处理，所以下方线程限制设置超过10所需承担的风险请使用者自行斟酌。

特别警告2：迅雷云盘限制极为严格，不要尝试单token多用户异地使用，或多线程使用，随时可能封号。

可以透过配置中的“网盘及弹幕配置”的视频源来实现快捷方便的获取32位token及opentoken的功能。在“网盘及弹幕配置”中扫过任何一个OpenToken后，会自动激活“转存原画”功能

提示：如果遇到极速GO原画反复快速报错，不一定是被封号，可尝试杀掉播放器重启，或重启整个播放设备解决。

提示2：如果遇到“转存原画”速度被限制在2M左右，那麽请尝试在阿里云盘APP里退出登录，然后重新登录，然后删除播放设备SD卡的TV目


```json
{
&quot;token&quot;:&quot;这里填写阿里云盘的32位token,也可以不填写,在播放阿里云盘属性时会弹出窗口,点击QrCode,用阿里云盘app扫码&quot;,
&quot;open_token&quot;:&quot;这里填写通过alist或其他openapi提供方申请的280位aliyun openapi token,也可以不写,会自动隐藏转存原画&quot;,
&quot;thread_limit&quot;:32,//这里是阿里云盘的GO代理的并发协程数或java代理的并发线程数,若遇到账号被限制并发数,请将此数值改为10
&quot;is_vip&quot;:true,//是否是阿里云盘的VIP用户,设置为true后,使用vip_thread_limit设置的数值来并发加速。如本设置项目不是true,则自动隐藏&quot;转存原画&quot;
&quot;vip_thread_limit&quot;:10,//这里是阿里云盘的转存原画（OpenToken）并发线程数,若遇到账号被限制并发数,请将此数值改为10
&quot;quark_thread_limit&quot;:32,//这里是夸克网盘GO代理的并发协程数或java代理的并发线程数,若遇到账号被限制并发数,请将此数值改为10
&quot;quark_vip_thread_limit&quot;:16,//这里是夸克网盘设置quark_is_vip:true之后的并发线程数,若遇到账号被限制并发数,请将此数值改为10
&quot;quark_is_vip&quot;:false,//是否是夸克网盘的VIP用户,设置为true后,线程数受quark_vip_thread_limit控制
&quot;vod_flags&quot;:&quot;4k|4kz|auto&quot;,//这里是播放阿里云的画质选项,4k代表不转存原画（GO原画）,4kz代表转存原画,其他都代表预览画质,可选的预览画质包括qhd,fhd,hd,sd,ld,
&quot;quark_flags&quot;:&quot;4kz|auto&quot;,//这里是播放夸克网盘的画质选项,4kz代表转存原画（GO原画）,其他都代表转码画质,可选的预览画质包括4k,2k,super,high,low,normal
&quot;uc_thread_limit&quot;:0,
&quot;uc_is_vip&quot;:false,
&quot;uc_flags&quot;:&quot;4kz|auto&quot;,
&quot;uc_vip_thread_limit&quot;:0,
&quot;thunder_thread_limit&quot;:0,
&quot;thunder_is_vip&quot;:false,
&quot;thunder_vip_thread_limit&quot;:0,
&quot;thunder_flags&quot;:&quot;4k|4kz|auto&quot;,
&quot;aliproxy&quot;:&quot;这里填写外部的加速代理,用于在盒子性能不够的情况下,使用外部的加速代理来加速播放,可以不填写&quot;,
&quot;proxy&quot;:&quot;这里填写用于科学上网的地址,连接openapi或某些资源站可能会需要用到,可以不填写&quot;,
&quot;open_api_url&quot;:&quot;https://api.xhofe.top/alist/ali_open/token&quot;,//这是alist的openapi接口地址,也可使用其他openapi提供商的地址。
&quot;danmu&quot;:true,//是否全局开启阿里云盘所有csp的弹幕支持,聚合类CSP仍需单独设置,例如Wogg,Wobg
&quot;quark_danmu&quot;:true,//是否全局开启夸克网盘的所有csp的弹幕支持,聚合类CSP仍需单独设置,例如Wogg,Wobg
&quot;quark_cookie&quot;:&quot;这里填写通过https://pan.quark.cn网站获取到的cookie,会很长,全数填入即可。&quot;
&quot;uc_cookie&quot;:&quot;这里填写通过https://drive.uc.cn网站登录获取的cookie&quot;,
&quot;thunder_username&quot;:&quot;这里填入用户名或手机号,如果是手机号,记得是类似&#039;+86 139123457&#039;这样的格式,+86后有空格才对&quot;,
&quot;thunder_password&quot;:&quot;密码&quot;,
&quot;thunder_captchatoken&quot;:&quot;首次使用迅雷网盘时,需要使用app弹出的登陆地址去接码登录,并获取captchaToken,具体方法参考alist网站的文档:https://alist.nn.ci/zh/guide/drivers/thunder.html&quot;,
&quot;pikpak_username&quot;:&quot;PikPak网盘的用户名&quot;,
&quot;pikpak_password&quot;:&quot;PikPak网盘的密码&quot;,
&quot;pikpak_flags&quot;:&quot;4k|auto&quot;,
&quot;pikpak_thread_limit&quot;:2,
&quot;pikpak_vip_thread_limit&quot;:2,
&quot;pikpak_proxy&quot;:&quot;用于科学上网连接PikPak网盘的代理服务器地址&quot;
}
```

自用仓库，如果喜欢，请Fork自用，谢谢！

尽自己所能更新，不保证配置的有效性和时效性。
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[code-charity/youtube]]></title>
            <link>https://github.com/code-charity/youtube</link>
            <guid>https://github.com/code-charity/youtube</guid>
            <pubDate>Tue, 27 May 2025 00:04:44 GMT</pubDate>
            <description><![CDATA[[top~1 open YouTube & Video browser-extension] - Enrich your experience & choice! 🧰185+ options & clever features 📌set+forget📌Longest-standing. Join🧩us?👨‍👩‍👧‍👧 ⋮ {playback|content discovery|player|extra buttons|distractions|related videos|shorts|ads|quality|codec|full tab|full screen}]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/code-charity/youtube">code-charity/youtube</a></h1>
            <p>[top~1 open YouTube & Video browser-extension] - Enrich your experience & choice! 🧰185+ options & clever features 📌set+forget📌Longest-standing. Join🧩us?👨‍👩‍👧‍👧 ⋮ {playback|content discovery|player|extra buttons|distractions|related videos|shorts|ads|quality|codec|full tab|full screen}</p>
            <p>Language: JavaScript</p>
            <p>Stars: 3,778</p>
            <p>Forks: 623</p>
            <p>Stars today: 1 star today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[gorhill/uBlock]]></title>
            <link>https://github.com/gorhill/uBlock</link>
            <guid>https://github.com/gorhill/uBlock</guid>
            <pubDate>Tue, 27 May 2025 00:04:43 GMT</pubDate>
            <description><![CDATA[uBlock Origin - An efficient blocker for Chromium and Firefox. Fast and lean.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/gorhill/uBlock">gorhill/uBlock</a></h1>
            <p>uBlock Origin - An efficient blocker for Chromium and Firefox. Fast and lean.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 53,882</p>
            <p>Forks: 3,500</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre>[![Badge Commits]][Commit Rate]
[![Badge Issues]][Issues]
[![Badge Localization]][Crowdin]
[![Badge License]][License]
[![Badge NPM]][NPM]
[![Badge Mozilla]][Mozilla]
[![Badge Chrome]][Chrome]
[![Badge Edge]][Edge]

***

&lt;h1 align=&quot;center&quot;&gt;
&lt;sub&gt;
&lt;img src=&quot;https://github.com/gorhill/uBlock/blob/master/src/img/ublock.svg&quot; height=&quot;38&quot; width=&quot;38&quot;&gt;
&lt;/sub&gt;
uBlock Origin (uBO)
&lt;/h1&gt;

| Browser   | Install from ... | Status |
| :-------: | ---------------- | ------ |
| &lt;img src=&quot;https://github.com/user-attachments/assets/b0136512-56a5-4856-8c50-4971c957a24f&quot; alt=&quot;Get uBlock Origin for Firefox&quot;&gt; | &lt;a href=&quot;https://addons.mozilla.org/addon/ublock-origin/&quot;&gt;Firefox Add-ons&lt;/a&gt; | [uBO works best on Firefox](https://github.com/gorhill/uBlock/wiki/uBlock-Origin-works-best-on-Firefox) |
| &lt;img src=&quot;https://github.com/user-attachments/assets/938f080c-fe64-4e48-8b89-4bfceabb56e6&quot; alt=&quot;Get uBlock Origin for Opera&quot;&gt; | &lt;a href=&quot;https://addons.opera.com/extensions/details/ublock/&quot;&gt;Opera Add-ons&lt;/a&gt; |
| &lt;img src=&quot;https://github.com/user-attachments/assets/5463ef88-873b-4516-8514-5277664cfde7&quot; alt=&quot;Get uBlock Origin for Chromium&quot;&gt; | &lt;a href=&quot;https://chromewebstore.google.com/detail/ublock-origin-lite/ddkjiahejlhfcafbddmgiahcphecmpfh&quot;&gt;Chrome Web Store&lt;/a&gt; | &lt;a href=&quot;https://github.com/uBlockOrigin/uBlock-issues/wiki/About-Google-Chrome&#039;s-%22This-extension-may-soon-no-longer-be-supported%22&quot;&gt;About Google Chrome&#039;s &quot;This extension may soon no longer be supported&quot;&lt;/a&gt; |
| &lt;img src=&quot;https://github.com/user-attachments/assets/3a7569f8-688b-4eb1-a643-8d0fe173aefe&quot; alt=&quot;Get uBlock Origin for Microsoft Edge&quot;&gt; | &lt;a href=&quot;https://microsoftedge.microsoft.com/addons/detail/ublock-origin-lite/cimighlppcgcoapaliogpjjdehbnofhn&quot;&gt;Edge Add-ons&lt;/a&gt; | [No longer updated and stuck at 1.62.0](https://github.com/uBlockOrigin/uBlock-issues/discussions/3641) |
| &lt;img src=&quot;https://github.com/user-attachments/assets/2e9037c4-836d-44c1-a716-ba96e89daaff&quot; alt=&quot;Get uBlock Origin for Thunderbird&quot;&gt; | &lt;a href=&quot;https://addons.thunderbird.net/en-Us/thunderbird/addon/ublock-origin/&quot;&gt;Thunderbird Add-ons&lt;/a&gt; | [No longer updated and stuck at 1.49.2](https://github.com/uBlockOrigin/uBlock-issues/issues/2928) |

***

uBlock Origin (uBO) is a CPU and memory-efficient [wide-spectrum content blocker][Blocking] for Chromium and Firefox. It blocks ads, trackers, coin miners, popups, annoying anti-blockers, malware sites, etc., by default using [EasyList][EasyList], [EasyPrivacy][EasyPrivacy], [Peter Lowe&#039;s Blocklist][Peter Lowe&#039;s Blocklist], [Online Malicious URL Blocklist][Malicious Blocklist], and uBO [filter lists][uBO Filters]. There are many other lists available to block even more. Hosts files are also supported. uBO uses the EasyList filter syntax and [extends][Extended Syntax] the syntax to work with custom rules and filters.

You may easily unselect any preselected filter lists if you think uBO blocks too much. For reference, Adblock Plus installs with only EasyList, ABP filters, and Acceptable Ads enabled by default.

It is important to note that using a blocker is **NOT** [theft]. Do not fall for this creepy idea. The _ultimate_ logical consequence of `blocking = theft` is the criminalization of the inalienable right to privacy.

Ads, &quot;unintrusive&quot; or not, are just the visible portion of the privacy-invading means entering your browser when you visit most sites. **uBO&#039;s primary goal is to help users neutralize these privacy-invading methods** in a way that welcomes those users who do not wish to use more technical means.

***

* [Documentation](#documentation)
* [Installation](#installation)
  * [Firefox](#firefox)
  * [Thunderbird](#thunderbird)
  * [Chromium](#chromium)
  * [All Programs](#all-programs)
  * [Enterprise Deployment](#enterprise-deployment)
* [Release History](#release-history)
* [Translations](#translations)
* [About](#about)

## Documentation

&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;Basic Mode&lt;/th&gt;
            &lt;th&gt;Advanced Mode&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;The &lt;a href=&quot;https://github.com/gorhill/uBlock/wiki/Quick-guide:-popup-user-interface&quot;&gt;simple popup user interface&lt;/a&gt; for an install-it-and-forget-it type of installation that is configured optimally by default.&lt;/td&gt;
            &lt;td&gt;The &lt;a href=&quot;https://github.com/gorhill/uBlock/wiki/Dynamic-filtering:-quick-guide&quot;&gt;advanced popup user interface&lt;/a&gt; includes a point-and-click firewall that is configurable on a per-site basis.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td align=&quot;center&quot; valign=&quot;top&quot;&gt;&lt;a href=&quot;https://github.com/gorhill/uBlock/wiki/Quick-guide:-popup-user-interface&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/585534/232531044-c4ac4dd5-0b60-4c1e-aabb-914be04b846c.png&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
            &lt;td align=&quot;center&quot; valign=&quot;top&quot;&gt;&lt;a href=&quot;https://github.com/gorhill/uBlock/wiki/Dynamic-filtering:-quick-guide&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/585534/232531439-a8f81cc3-6622-45c4-8b32-7348cecf6e98.png&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

Visit the [Wiki][Wiki] for documentation.

For support, questions, or help, visit [/r/uBlockOrigin][Reddit].

## Installation

[Required Permissions][Permissions]

#### Firefox

[Firefox Add-ons][Mozilla]

[Development Builds][Beta]

uBO [works best][Works Best] on Firefox and is available for desktop and Android versions.

#### Thunderbird

[Thunderbird Add-ons][Thunderbird]

In Thunderbird, uBlock Origin does not affect emails, just feeds.

#### Chromium

[Chrome Web Store][Chrome]

[Microsoft Edge Add-ons][Edge] (Published by: [Nicole Rolls][Nicole Rolls])

[Opera Add-ons][Opera]

[Development Builds][Chrome Dev]

uBO should be compatible with any Chromium-based browser.

#### All Programs

Do **NOT** use uBO with any other content blocker. uBO [performs][Performance] as well as or better than most popular blockers. Other blockers can prevent uBO&#039;s privacy or anti-blocker-defusing features from working correctly.

[Manual Installation][Manual Installation]

#### Enterprise Deployment

[Deploying uBO][Deployment]

## Release History

[Releases Page][Releases]

## Translations

Help translate uBO via [Crowdin][Crowdin].

## About

[Manifesto][Manifesto]

[Privacy Policy][Privacy Policy]

[GPLv3 License][License]

Free. Open-source. For users by users. No donations sought.

If you ever want to contribute something, think about the people working hard to maintain the filter lists you are using, which are available to use by all for free.


&lt;!-----------------------------------------------------------------------------&gt;

[Peter Lowe&#039;s Blocklist]: https://pgl.yoyo.org/adservers/
[Malicious Blocklist]: https://gitlab.com/malware-filter/urlhaus-filter#malicious-url-blocklist
[Performance]: https://www.debugbear.com/blog/chrome-extensions-website-performance#the-impact-of-ad-blocking-on-website-performance
[EasyPrivacy]: https://easylist.to/#easyprivacy
[Thunderbird]: https://addons.thunderbird.net/thunderbird/addon/ublock-origin/
[Chrome Dev]: https://chromewebstore.google.com/detail/ublock-origin-development/cgbcahbpdhpcegmbfconppldiemgcoii
[EasyList]: https://easylist.to/#easylist
[Mozilla]: https://addons.mozilla.org/addon/ublock-origin/
[Crowdin]: https://crowdin.com/project/ublock
[Chrome]: https://chromewebstore.google.com/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm
[Reddit]: https://www.reddit.com/r/uBlockOrigin/
[Theft]: https://x.com/LeaVerou/status/518154828166725632
[Opera]: https://addons.opera.com/extensions/details/ublock/
[Edge]: https://microsoftedge.microsoft.com/addons/detail/ublock-origin/odfafepnkmbhccpbejgmiehpchacaeak
[NPM]: https://www.npmjs.com/package/@gorhill/ubo-core

[Manifesto]: MANIFESTO.md
[License]: LICENSE.txt

[Nicole Rolls]: https://github.com/nicole-ashley

&lt;!---------------------------------[ Internal ]--------------------------------&gt;

[Manual Installation]: https://github.com/gorhill/uBlock/tree/master/dist#install
[Extended Syntax]: https://github.com/gorhill/uBlock/wiki/Static-filter-syntax#extended-syntax
[Privacy Policy]: https://github.com/gorhill/uBlock/wiki/Privacy-policy
[uBO Filters]: https://github.com/uBlockOrigin/uAssets/tree/master/filters
[Permissions]: https://github.com/gorhill/uBlock/wiki/Permissions
[Commit Rate]: https://github.com/gorhill/uBlock/commits/master
[Works Best]: https://github.com/gorhill/uBlock/wiki/uBlock-Origin-works-best-on-Firefox
[Deployment]: https://github.com/gorhill/uBlock/wiki/Deploying-uBlock-Origin
[Blocking]: https://github.com/gorhill/uBlock/wiki/Blocking-mode
[Releases]: https://github.com/gorhill/uBlock/releases
[Issues]: https://github.com/uBlockOrigin/uBlock-issues/issues
[Beta]: https://github.com/gorhill/uBlock/blob/master/dist/README.md#for-beta-version
[Wiki]: https://github.com/gorhill/uBlock/wiki

&lt;!----------------------------------[ Badges ]---------------------------------&gt;

[Badge Localization]: https://d322cqt584bo4o.cloudfront.net/ublock/localized.svg
[Badge Commits]: https://img.shields.io/github/commit-activity/m/gorhill/ublock?label=Commits
[Badge Mozilla]: https://img.shields.io/amo/rating/ublock-origin?label=Firefox
[Badge License]: https://img.shields.io/badge/License-GPLv3-blue.svg
[Badge Chrome]: https://img.shields.io/chrome-web-store/rating/cjpalhdlnbpafiamejdnhcphjbkeiagm?label=Chrome
[Badge Edge]: https://img.shields.io/badge/dynamic/json?label=Edge&amp;color=brightgreen&amp;query=%24.averageRating&amp;suffix=%2F%35&amp;url=https%3A%2F%2Fmicrosoftedge.microsoft.com%2Faddons%2Fgetproductdetailsbycrxid%2Fodfafepnkmbhccpbejgmiehpchacaeak
[Badge Issues]: https://img.shields.io/github/issues/uBlockOrigin/uBlock-issues
[Badge NPM]: https://img.shields.io/npm/v/@gorhill/ubo-core
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[agalwood/Motrix]]></title>
            <link>https://github.com/agalwood/Motrix</link>
            <guid>https://github.com/agalwood/Motrix</guid>
            <pubDate>Tue, 27 May 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[A full-featured download manager.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/agalwood/Motrix">agalwood/Motrix</a></h1>
            <p>A full-featured download manager.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 47,727</p>
            <p>Forks: 4,646</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre># Motrix

&lt;p&gt;
  &lt;a href=&quot;https://motrix.app&quot;&gt;
    &lt;img src=&quot;./static/512x512.png&quot; width=&quot;256&quot; alt=&quot;Motrix App Icon&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

## A full-featured download manager

[![GitHub release](https://img.shields.io/github/v/release/agalwood/Motrix.svg)](https://github.com/agalwood/Motrix/releases) ![Build/release](https://github.com/agalwood/Motrix/workflows/Build/release/badge.svg) ![Total Downloads](https://img.shields.io/github/downloads/agalwood/Motrix/total.svg) ![Support Platforms](https://camo.githubusercontent.com/a50c47295f350646d08f2e1ccd797ceca3840e52/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d6d61634f5325323025374325323057696e646f77732532302537432532304c696e75782d6c69676874677265792e737667)

English | [简体中文](./README-CN.md)

Motrix is a full-featured download manager that supports downloading HTTP, FTP, BitTorrent, Magnet, etc.

Motrix has a clean and easy to use interface. I hope you will like it 👻.

✈️ [Official Website](https://motrix.app) | 📖 [Manual](https://github.com/agalwood/Motrix/wiki)

## 💽 Installation

Download from [GitHub Releases](https://github.com/agalwood/Motrix/releases) and install it.

### Windows

It is recommended to install Motrix using the installation package (Motrix-Setup-x.y.z.exe) to ensure a complete experience, such as associating torrent files, capturing magnet links, etc.

If you use package management tools to manage applications on Windows, such as [Chocolatey](https://chocolatey.org), [scoop](https://github.com/lukesampson/scoop). You can use them to install Motrix.

#### Chocolatey
Thanks to [@Yato](https://github.com/iYato) for continuing to maintain the [Motrix Chocolatey](https://community.chocolatey.org/packages/motrix) package. To install motrix, run the following command from the `command line` or from `PowerShell`:

```bash
# Install
choco install motrix

# Upgrade
choco upgrade motrix
```

#### scoop
If you prefer the portable version, you can use [scoop](https://github.com/lukesampson/scoop) (need Windows 7+) to install Motrix.

```bash
scoop bucket add extras
scoop install motrix
```

### macOS

The macOS users can install Motrix using `brew`, thanks to [PR](https://github.com/Homebrew/homebrew-cask/pull/59494) of [@Mitscherlich](https://github.com/Mitscherlich).

```bash
brew update &amp;&amp; brew install motrix
```

#### Auto Update

Since Motrix v1.8.0 and later versions changed the App BundleID ( `net.agalwood.Motrix` =&gt; `app.motrix.native` ), the automatic update of Motrix v1.6.11 will fail. [Motrix Install Assistant](https://github.com/motrixapp/motrix-install-assistant) will help you install the latest Motrix application.

&lt;p&gt;
  &lt;a href=&quot;https://github.com/motrixapp/motrix-install-assistant&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/motrixapp/motrix-install-assistant/main/build/256x256.png&quot; width=&quot;192&quot; alt=&quot;Motrix Install Assistant Icon&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

### Linux

You can download the `AppImage` (for all Linux distributions) or `snap` to install Motrix, see [GitHub/release](https://github.com/agalwood/Motrix/releases) for more Linux installation package formats.

Motrix may need to run with `sudo` for the first time in Linux because there is no permission to create the download session file (`/var/cache/aria2.session`).

If you want to build from source code, please read the **Build** section.

#### AppImage
The latest version of Motrix AppImage requires you to manually perform desktop integration. Please check the documentation of [AppImageLauncher](https://github.com/TheAssassin/AppImageLauncher) .

&gt; Desktop Integration
&gt; Since electron-builder 21 desktop integration is not a part of produced AppImage file.
&gt; [AppImageLauncher](https://github.com/TheAssassin/AppImageLauncher) is the recommended way to integrate AppImages.

Deepin 20 Beta users failed to install Motrix, please follow the steps below:

Open the `Terminal`, paste and run the following command to install Motrix again.

```bash
sudo apt --fix-broken install
```

#### Snap
Motrix has been listed on [Snapcraft](https://snapcraft.io/motrix) , Ubuntu users recommend downloading from the Snap Store.

Tips for v1.5.10

The tray may not display the indicator normally, which makes it inconvenient to exit the application.

Please unchecked Preferences--Basic Settings--Hide App Menu (Windows &amp; Linux Only), click Save &amp; Apply. Then click &quot;Exit&quot; in the File menu to exit the application.

Please update to v1.5.12 and above, you can use the keyboard shortcut &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;q&lt;/kbd&gt; to quickly exit the application.

#### AUR
For Arch Linux users, Motrix is available in [aur](https://aur.archlinux.org/packages/motrix/), thanks to the maintainer [@weearc](https://github.com/weearc).

Run the following command to install:

```bash
yay -S motrix
```

#### Flatpak
Thanks to the [PR](https://github.com/flathub/flathub/pull/2334) of [@proletarius101](https://github.com/proletarius101), Motrix has been listed [Flathub](https://flathub.org/apps/details/net.agalwood.Motrix), Linux users who like the Flatpak can try it.

```bash
# Install
flatpak install flathub net.agalwood.Motrix

# Run
flatpak run net.agalwood.Motrix
```

## ✨ Features

- 🕹 Simple and clear user interface
- 🦄 Supports BitTorrent &amp; Magnet
- ☑️ BitTorrent selective download
- 📡 Update tracker list every day automatically
- 🔌 UPnP &amp; NAT-PMP Port Mapping
- 🎛 Up to 10 concurrent download tasks
- 🚀 Supports 64 threads in a single task
- 🚥 Supports speed limit
- 🕶 Mock User-Agent
- 🔔 Download completed Notification
- 💻 Ready for Touch Bar (Mac only)
- 🤖 Resident system tray for quick operation
- 📟 Tray speed meter displays real-time speed (Mac only)
- 🌑 Dark mode
- 🗑 Delete related files when removing tasks (optional)
- 🌍 I18n, [View supported languages](#-internationalization).
- 🛠 More features in development

## 🖥 User Interface

![motrix-screenshot-task-en.png](https://cdn.nlark.com/yuque/0/2020/png/129147/1589782238501-e7b39166-da58-4152-ae34-65a061cafa48.png)

## ⌨️ Development

### Clone Code

```bash
git clone git@github.com:agalwood/Motrix.git
```

### Install Dependencies

```bash
cd Motrix
yarn
```

&gt; Error: Electron failed to install correctly, please delete node_modules/electron and try installing again

`Electron` failed to install correctly, please refer to https://github.com/electron/electron/issues/8466#issuecomment-571425574

### Dev Mode

```bash
yarn run dev
```

### Build Release

```bash
yarn run build
```
#### Build for Apple Silicon

```bash
yarn run build:applesilicon
```

After building, the application will be found in the project&#039;s `release` directory.

## 🛠 Technology Stack

- [Electron](https://electronjs.org/)
- [Vue](https://vuejs.org/) + [VueX](https://vuex.vuejs.org/) + [Element](https://element.eleme.io)
- [Aria2](https://aria2.github.io/)

## ☑️ TODO

Development Roadmap see: [Trello](https://trello.com/b/qNUzA0bv/motrix)

## 🤝 Contribute [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat)](http://makeapullrequest.com)

If you are interested in participating in joint development, PR and Forks are welcome!

## 🌍 Internationalization

Translations into versions for other languages are welcome 🧐! Please read the [translation guide](./CONTRIBUTING.md#-translation-guide) before starting translations.

| Key   | Name                | Status       |
|-------|:--------------------|:-------------|
| ar    | Arabic              | ✔️ [@hadialqattan](https://github.com/hadialqattan), [@AhmedElTabarani](https://github.com/AhmedElTabarani) |
| bg    | Българският език    | ✔️ [@null-none](https://github.com/null-none) |
| ca    | Català              | ✔️ [@marcizhu](https://github.com/marcizhu) |
| de    | Deutsch             | ✔️ [@Schloemicher](https://github.com/Schloemicher) |
| el    | Ελληνικά            | ✔️ [@Likecinema](https://github.com/Likecinema) |
| en-US | English             | ✔️           |
| es    | Español             | ✔️ [@Chofito](https://github.com/Chofito)|
| fa    | فارسی               | ✔️ [@Nima-Ra](https://github.com/Nima-Ra) |
| fr    | Français            | ✔️ [@gpatarin](https://github.com/gpatarin) |
| hu    | Hungarian           | ✔️ [@zalnaRs](https://github.com/zalnaRs) |
| id    | Indonesia           | ✔️ [@aarestu](https://github.com/aarestu) |
| it    | Italiano            | ✔️ [@blackcat-917](https://github.com/blackcat-917) |
| ja    | 日本語               | ✔️ [@hbkrkzk](https://github.com/hbkrkzk) |
| ko    | 한국어                | ✔️ [@KOZ39](https://github.com/KOZ39) |
| nb    | Norsk Bokmål        | ✔️ [@rubjo](https://github.com/rubjo) |
| nl    | Nederlands          | ✔️ [@nickbouwhuis](https://github.com/nickbouwhuis) |
| pl    | Polski              | ✔️ [@KanarekLife](https://github.com/KanarekLife) |
| pt-BR | Portuguese (Brazil) | ✔️ [@andrenoberto](https://github.com/andrenoberto) |
| ro    | Română              | ✔️ [@alyn3d](https://github.com/alyn3d) |
| ru    | Русский             | ✔️ [@bladeaweb](https://github.com/bladeaweb) |
| th    | แบบไทย              | ✔️ [@nxanywhere](https://github.com/nxanywhere) |
| tr    | Türkçe              | ✔️ [@abdullah](https://github.com/abdullah) |
| uk    | Українська          | ✔️ [@bladeaweb](https://github.com/bladeaweb) |
| vi    | Tiếng Việt          | ✔️ [@duythanhvn](https://github.com/duythanhvn) |
| zh-CN | 简体中文             | ✔️           |
| zh-TW | 繁體中文             | ✔️ [@Yukaii](https://github.com/Yukaii) [@5idereal](https://github.com/5idereal) |

## 📜 License

[MIT](https://opensource.org/licenses/MIT) Copyright (c) 2018-present Dr_rOot
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[said7388/developer-portfolio]]></title>
            <link>https://github.com/said7388/developer-portfolio</link>
            <guid>https://github.com/said7388/developer-portfolio</guid>
            <pubDate>Tue, 27 May 2025 00:04:41 GMT</pubDate>
            <description><![CDATA[Software Developer Portfolio Website built with next.js and tailwind CSS that helps you showcase your work and skills as a software developer.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/said7388/developer-portfolio">said7388/developer-portfolio</a></h1>
            <p>Software Developer Portfolio Website built with next.js and tailwind CSS that helps you showcase your work and skills as a software developer.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,990</p>
            <p>Forks: 947</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot; width=&quot;100%&quot;&gt;
    &lt;img height=&quot;100&quot; src=&quot;https://github.com/said7388/developer-portfolio/assets/77630868/c0064908-cd5f-4751-a77c-eba90a62b55c&quot;&gt;
&lt;/p&gt;

---

# [Built Portfolio With GitHub ](https://github.com/said7388/github-portfolio)

---

# Developer Portfolio

#### Are you struggling to create a professional portfolio website? Look no further! You can use the Developer Portfolio template and create your very own personalized portfolio today! My website is designed to be user-friendly and easily customizable, making it perfect for both developers and freelancers.

---

# Demo :movie_camera:

![](./public/image/screen.png)

## View live preview [here](https://abusaid.netlify.app/).

---

## Table of Contents :scroll:

- [Sections](#sections-bookmark)
- [Demo](#demo-movie_camera)
- [Installation](#installation-arrow_down)
- [Getting Started](#getting-started-dart)
- [Usage](#usage-joystick)
- [Deployment](#deployment-rocket)
- [Tutorials](#tutorials-wrench)
  - [Gmail App Password Setup](#gmail-app-password-setup)
  - [Create a Telegram Bot](#create-a-telegram-bot)
  - [Fetching Blog from dev.to](#fetching-blog-from-devto)
- [Packages Used](#packages-used-package)

---

# Sections :bookmark:

- HERO SECTION
- ABOUT ME
- EXPERIENCE
- SKILLS
- PROJECTS
- EDUCATION
- BLOG
- CONTACTS

---

# Installation :arrow_down:

### You will need to download Git and Node to run this project

- [Git](https://git-scm.com/downloads)
- [Node](https://nodejs.org/en/download/)

#### Make sure you have the latest version of both Git and Node on your computer.

```bash
node --version
git --version
```

## &lt;br /&gt;

# Getting Started :dart:

### Fork and Clone the repo

To Fork the repo click on the fork button at the top right of the page. Once the repo is forked open your terminal and perform the following commands

```bash
git clone https://github.com/&lt;YOUR GITHUB USERNAME&gt;/developer-portfolio.git

cd developer-portfolio
```

### Install packages from the root directory

```bash
npm install
# or
yarn install
```

Then, run the development server:

```bash
npm run dev
# or
yarn dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

---

### Running with Docker Compose

1. **Build Docker Image and Run Container**:
    ```bash
    docker-compose up --build
    ```

2. **Access the Application**:
    Visit [http://localhost:3000](http://localhost:3000) in your web browser to view the running application.

---

### Building the Docker Image

1. **Build the Docker Image using Dockerfile.dev**:

    ```bash
    docker build -t nextjs-app -f Dockerfile.dev .
    ```

2. **Running the Docker Container**:

    ```bash
    docker run -p 3000:3000 nextjs-app
    ```

3. **Access the Application**:
    Visit [http://localhost:3000](http://localhost:3000) in your web browser to view the running application.

---

# Usage :joystick:

Please create a new `.env` file from `.env.example` file.

Eg:

```env
NEXT_PUBLIC_GTM =
NEXT_PUBLIC_APP_URL =
TELEGRAM_BOT_TOKEN =
TELEGRAM_CHAT_ID =
GMAIL_PASSKEY =
EMAIL_ADDRESS =
```

### Then, Customize data in the `utils/data` [folder](https://github.com/said7388/developer-portfolio/tree/main/utils/data).

Eg:

```javascript
export const personalData = {
  name: &quot;ABU SAID&quot;,
  profile: &quot;/profile.png&quot;,
  designation: &quot;Full-Stack Software Developer&quot;,
  description: &quot;My name is ABU SAID....&quot;,
  email: &quot;abusaid7388@gmail.com&quot;,
  phone: &quot;+8801608797655&quot;,
  address: &quot;Dhaka, Bangladesh&quot;,
  github: &quot;https://github.com/said7388&quot;,
  facebook: &quot;https://www.facebook.com/abusaid.riyaz/&quot;,
  linkedIn: &quot;https://www.linkedin.com/in/abu-said-bd/&quot;,
  twitter: &quot;https://twitter.com/said7388&quot;,
  stackOverflow: &quot;https://stackoverflow.com/users/16840768/abu-said&quot;,
  leetcode: &quot;https://leetcode.com/said3812/&quot;,
  devUsername: &quot;said7388&quot;,
  resume: &quot;...&quot;,
};
```

`devUsername` is used for fetching blog posts from `dev.to`.

---

# Deployment :rocket:

Deploying the app to platforms like Vercel or Netlify is quick and easy.

## Deploying to Vercel:

1. **Sign up or log in** to [Vercel](https://vercel.com/).
2. Once logged in, click on **&quot;New Project&quot;**.
3. Select your **GitHub repo** (the one that contains your forked project) and click **Import**.
4. Configure your environment variables in the Vercel dashboard by adding each key from your `.env` file.
   - E.g., `NEXT_PUBLIC_GTM`, `NEXT_PUBLIC_APP_URL`, `TELEGRAM_BOT_TOKEN`, etc.
5. Click on **Deploy**. Vercel will automatically detect your Next.js app and build it.
6. Once the deployment is complete, you can visit your live website!

### Updating After Deployment

Whenever you push changes to your GitHub repo, Vercel will automatically redeploy the app, keeping your portfolio up-to-date.

## Deploying to Netlify:

1. **Sign up or log in** to [Netlify](https://www.netlify.com/).
2. In the **Netlify Dashboard**, click **&quot;New site from Git&quot;**.
3. Connect your **GitHub** account and select your repo.
4. Configure your environment variables by going to **Site Settings &gt; Build &amp; Deploy &gt; Environment** and adding keys from your `.env` file.
5. Click **Deploy Site**. Netlify will build and deploy your portfolio.

---

# Tutorials :wrench:

## Gmail App Password Setup

1. **Log in to your Google Account** at [https://myaccount.google.com/](https://myaccount.google.com/).
2. Navigate to **Security** from the left sidebar.
3. Scroll down to the **&quot;Signing in to Google&quot;** section and make sure **2-Step Verification** is turned ON.
4. Once 2-Step Verification is enabled, you&#039;ll see an option for **App Passwords**.
5. Click on **App Passwords**. You may need to enter your Google account password again.
6. In the **Select app** dropdown, choose &quot;Mail&quot;, and for **Select device**, choose &quot;Other (Custom name)&quot; and name it appropriately (e.g., &quot;Portfolio&quot;).
7. Click **Generate**. A 16-character app password will be displayed. Save this password for later use in your environment variables (e.g., `GMAIL_PASSKEY`).

## Create a Telegram Bot

1. **Open Telegram** and search for the user **@BotFather**.
2. Start a chat with BotFather and use the `/newbot` command to create a new bot.
3. Choose a name for your bot.
4. Set a unique username for your bot (must end with `bot`, e.g., `PortfolioAssistantBot`).
5. Once your bot is created, BotFather will send you a **Token**. Save this token, as you will need it for your environment variables (e.g., `TELEGRAM_BOT_TOKEN`).
6. To get your chat ID:
   - Open your bot in Telegram and send it a message.
   - Visit the following URL in your browser, replacing `BOT_TOKEN` with your actual bot token:  
     `https://api.telegram.org/bot&lt;BOT_TOKEN&gt;/getUpdates`
   - Look for the `chat` object in the response, which contains your **chat ID** (you can use this value for `TELEGRAM_CHAT_ID`).

## Fetching Blog from dev.to

To display your blog posts from dev.to on the portfolio:

1. Set your `devUsername` in the `utils/data.js` file to your dev.to username.
2. The application will automatically fetch your latest blog posts and display them in the **BLOG** section.
3. Ensure your blogs are publicly visible on dev.to, and the application will fetch them using the dev.to API.

---

# Packages Used :package:

|   Used Package List    |
| :--------------------: |
|    @emailjs/browser    |
|  @next/third-parties   |
|         axios          |
|      lottie-react      |
|          next          |
|       nodemailer       |
|         react          |
|       react-dom        |
|   react-fast-marquee   |
| react-google-recaptcha |
|      react-icons       |
|     react-toastify     |
|         sharp          |
|          sass          |
|      tailwindcss       |

---

# FAQ:

1. For those facing the issue of &quot;`next` is not recognized as an internal or external command, operable program or batch file.&quot;

Run the following command:

```bash

npm install -g next

```

This installs Next.js globally

then do the usual `npm run dev`
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[pollinations/pollinations]]></title>
            <link>https://github.com/pollinations/pollinations</link>
            <guid>https://github.com/pollinations/pollinations</guid>
            <pubDate>Tue, 27 May 2025 00:04:40 GMT</pubDate>
            <description><![CDATA[Free Open-Source Image and Text Generation]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pollinations/pollinations">pollinations/pollinations</a></h1>
            <p>Free Open-Source Image and Text Generation</p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,006</p>
            <p>Forks: 229</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;assets/pollinations_ai_logo_image_black.png&quot; alt=&quot;Pollinations.AI Logo&quot; width=&quot;320&quot;/&gt;
  &lt;h1&gt;&lt;a href=&quot;https://pollinations.ai&quot;&gt;Pollinations.AI&lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;



## 🆕 Latest News

- **🔍 Special Bee** - New &quot;Special Bee&quot; issue template! Projects can now request referrer verification by submitting a [Domain Verification Request](https://github.com/pollinations/pollinations/issues/new?template=special-bee-request.yml)[More info](https://github.com/pollinations/pollinations/blob/master/APIDOCS.md#special-bee-)
- **📚 API Documentation** - Major API documentation improvements! We&#039;ve completely revamped our API docs with better examples, clearer explanations, and interactive code snippets. [Check it out](https://github.com/pollinations/pollinations/blob/master/APIDOCS.md).
- **🤖 MCP Server** - New Model Context Protocol (MCP) server for AI assistants like Claude to generate images directly! [Learn more](./model-context-protocol/README.md).  
  [![MCP Server Interface](https://github.com/user-attachments/assets/7311a7df-6b6a-4da5-94f8-7d57baca0ba3)](./model-context-protocol/README.md)
- **💲 Support Us** - You can now support us with our new **Tip Us** button. Optionally connect your Discord account to **Ko-Fi** to get premium Discord roles!
- **🎵 Audio Generation** - New text-to-speech and speech-to-text capabilities are now available! Try the `openai-audio` model - see our [API documentation](APIDOCS.md#audio-generation-api) for details.
- **🤖 AI Code Assistant** - We&#039;re excited to announce MentatBot, the autonomous AI coding assistant that implements new features directly from GitHub issues! Simply [create an issue](https://github.com/pollinations/pollinations/issues/new) describing what you&#039;d like to see, and MentatBot will analyze and implement it. [Learn more](https://mentat.ai/).
- **🖼️ GPT Image** - Introducing our new state-of-the-art text-to-image model, GPT Image, which generates high-resolution, contextually accurate visuals from any prompt. Learn more about OpenAI&#039;s latest image generation model [here](https://openai.com/index/introducing-4o-image-generation/).
---

[![Pollinations.AI Logo](https://pollinations.ai/p/3D_wireframe_blueprint_of_the_conceptual_isometric_world_of_Pollinations_AI_a_surreal_hyperrealistic_digital_garden_Elements_emerge_partially_from_all_sides?width=3000&amp;height=1000&amp;seed=-1)](https://pollinations.ai/p/3D_wireframe_blueprint_of_the_conceptual_isometric_world_of_Pollinations_AI_a_surreal_hyperrealistic_digital_garden_Elements_emerge_partially_from_all_sides?width=3000&amp;height=1000&amp;seed=-1)

## 🌟 Introduction

[Pollinations.AI](https://pollinations.ai) is an open-source gen AI startup based in Berlin, providing the most easy-to-use, free text and image generation API available. No signups or API keys required. We prioritize your privacy with zero data storage and completely anonymous usage.

## 🚀 Key Features

- 🔓 **100% Open Source**
- 🆓 **_Free to use_**
- 🔒 **Simplicity and privacy:** No logins, no keys, no data stored
- 🖼️ **Embed like any normal image or text**
- 🎵 **Audio generation:** Text-to-speech and speech-to-text capabilities
- 🌍 Free AI image and text generation APIs
- 🤝 Used by various **open-source LLMs**, **bots**, and **communities**
- 🎣 **_Easy-to-use React hooks_** ([React Hooks Examples](https://react-hooks.pollinations.ai/))
- 🤖 **Autonomous Development:** Features implemented by our MentatBot coding assistant through GitHub issues

&lt;a href=&quot;https://star-history.com/#pollinations/pollinations&amp;Date&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=pollinations/pollinations&amp;type=Date&amp;theme=dark&quot; width=&quot;600&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=pollinations/pollinations&amp;type=Date&quot; width=&quot;600&quot; /&gt;
   &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=pollinations/pollinations&amp;type=Date&quot; width=&quot;600&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;

## 🚀 Getting Started

### Featured Projects

| Project | Description | Creator | Links |
|---------|-------------|---------|-------|
| 🆕 KoboldAI | A browser-based front-end for AI-assisted writing with multiple local &amp; remote AI models, including integration with Pollinations.AI for image generation | @lostruins | [Website](https://koboldai.net/), [GitHub](https://github.com/LostRuins/lite.koboldai.net) - ⭐ 3.7k |

### Image Generation

1. Visit [https://pollinations.ai](https://pollinations.ai)
2. Type your description in the text box
3. Click &quot;Generate&quot; and watch the magic happen!

### Text Generation

1. Visit [https://text.pollinations.ai](https://text.pollinations.ai)
2. Start chatting with the AI

### Audio Generation

1. Use the `openai-audio` model with our API ([explore voices at OpenAI.fm](https://www.openai.fm/))
2. Generate speech from text or transcribe audio to text

### MCP Server for AI Assistants

Our MCP (Model Context Protocol) server enables AI assistants like Claude to generate images and audio directly. [Learn more](./model-context-protocol/README.md)

```bash
# Run with npx (no installation required)
npx @pollinations/model-context-protocol
```

Community alternatives like [MCPollinations](https://github.com/pinkpixel-dev/MCPollinations) are also available.

AI assistants can:
- Generate images from text descriptions
- Create text-to-speech audio with various voice options
- Play audio responses through the system speakers
- Access all Pollinations.AI models and services
- List available models, voices, and capabilities

For more advanced usage, check out our [API documentation](APIDOCS.md).

## 🖥️ How to Use

### Web Interface

Our web interface is user-friendly and doesn&#039;t require any technical knowledge. Simply visit [https://pollinations.ai](https://pollinations.ai) and start creating!

### API

Use our API directly in your browser or applications:

    https://pollinations.ai/p/conceptual_isometric_world_of_pollinations_ai_surreal_hyperrealistic_digital_garden

Replace the description with your own, and you&#039;ll get a unique image based on your words!

## 🎨 Examples

### Image Generation

Here&#039;s an example of a generated image:

[![Conceptual Isometric World](https://pollinations.ai/p/3d_wireframe_blueprint_for_the_prompt_conceptual%20isometric%20world%20of%20pollinations%20ai%20surreal%20hyperrealistic%20digital%20garden?width=2000&amp;height=500&amp;nologo=true&amp;seed=-1)](https://pollinations.ai/p/3d_wireframe_blueprint_for_the_prompt_conceptual%20isometric%20world%20of%20pollinations%20ai%20surreal%20hyperrealistic%20digital%20garden?width=2000&amp;height=500&amp;nologo=true&amp;seed=-1)

Python code to download the generated image:

    import requests

    def download_image(prompt):
        url = f&quot;https://pollinations.ai/p/{prompt}&quot;
        response = requests.get(url)
        with open(&#039;generated_image.jpg&#039;, &#039;wb&#039;) as file:
            file.write(response.content)
        print(&#039;Image downloaded!&#039;)

    download_image(&quot;conceptual_isometric_world_of_pollinations_ai_surreal_hyperrealistic_digital_garden&quot;)

### Text Generation

To generate text, use this URL:

    https://text.pollinations.ai/What%20is%20artificial%20intelligence?

### Audio Generation

To generate audio from text, use this URL:

    https://text.pollinations.ai/Welcome%20to%20Pollinations?model=openai-audio&amp;voice=nova

## 🛠️ Integration

### React Hooks

We offer React hooks for easy integration. Example usage:

    import React from &#039;react&#039;;
    import { usePollinationsImage, usePollinationsText } from &#039;@pollinations/react&#039;;
    import ReactMarkdown from &#039;react-markdown&#039;;

    const AIGeneratedContent = () =&gt; {
      const imageUrl = usePollinationsImage(&quot;Beautiful landscape of Paris with Eiffel Tower&quot;, { width: 800, height: 600, seed: 42 });
      const markdown = usePollinationsText(&quot;Write a brief travel guide for Paris, including top attractions and local cuisine in markdown&quot;, { seed: 42 });

      return (
        &lt;div&gt;
          &lt;h2&gt;AI-Generated Travel Guide&lt;/h2&gt;
          &lt;img src={imageUrl} alt=&quot;AI Generated&quot; /&gt;
          {markdown ? (
            &lt;ReactMarkdown&gt;{markdown}&lt;/ReactMarkdown&gt;
          ) : (
            &lt;p&gt;Loading markdown content...&lt;/p&gt;
          )}
        &lt;/div&gt;
      );
    };

    export default AIGeneratedContent;

Check out our [Pollinations React Hooks](./pollinations-react/README.md) for more details.

## Architecture
```mermaid
graph LR
    Q[Bots - Discord, Telegram, WhatsApp] --&gt; L1
    
    N[30+ Mobile and Web Apps] --&gt; L1
    N --&gt; L2
    
    A[pollinations.ai Web Frontend] --&gt; L1
    A --&gt; L2
    
    R[AI Agents - Qwen, Sillytavern, ...] --&gt; L1
    
    AI[AI Assistants - Claude] --&gt; MCP[MCP Server]
    MCP --&gt; L1
    
    L1[Image CDN] --&gt; CF[Cloudflare Worker with R2 Cache]
    L2[Text CDN] --&gt; C
    
    CF --&gt; B
    
    B[image-origin.pollinations.ai - AWS EC2 CPU] --&gt; F[Azure OpenAI - Prompt Enhancing]
    B --&gt; S[LlamaGuard - Safety Checker]
    F --&gt; E[Translation Service - 1 GPU VM]
    E --&gt; D[FLUX image generation model - 2-6 GPU VMs on AWS]
    
    C[text.pollinations.ai - AWS EC2 CPU] --&gt; P[karma.yt - Realtime News]
    C --&gt; SC[Scaleway API]
    C --&gt; DS[Deepseek API]
    C --&gt; G[Azure-hosted Serverless LLMs]
    C --&gt; CFM[Cloudflare AI]
    SC --&gt; MI[Mistral Models]
    SC --&gt; QW[Qwen Models]
    SC --&gt; LL[Llama Models]
    DS --&gt; DM[Deepseek Models]
    G --&gt; H[OpenAI]
    G --&gt; K[Claude]
    CFM --&gt; CFL[Llama &amp; Deepseek Models]
```

## Projects Using Pollinations.AI

&gt; **⭐ GitHub Star Counts:** Projects with GitHub repositories include star counts to help you gauge their popularity.
&gt; 
&gt; **🆕 NEW Tag:** Projects are marked with the 🆕 emoji when they are recently added. This tag is automatically removed after 15 days from the submission date or if no date is specified.
&gt; 
&gt; **Note:** Some projects may be temporarily hidden from this list if they are currently broken or undergoing maintenance.

Pollinations.AI is used in various projects, including:

### LLM Integrations

| Project | Description | Creator | Links |
|---------|-------------|---------|-------|
| 🆕 AI Code Generator | A websim project that generates code from description, selected programming language and other options. Integrates Pollinations because it allows for more models to choose from for potentially better results. It has modes like: Code Generator, Code Explainer, Reviewer, etc. | @Miencraft2 | [Website](https://codegen.on.websim.com/) |
| 🆕 🖥️ Windows Walker | Windows Walker – What Copilot for Windows should have been. AI-powered Windows assistant that translates voice/text commands into real system actions using PowerShell. Powered by ChatGPT + PowerShell in an Electron UI. | @supershivam | [GitHub](https://github.com/SuperShivam5000/windows-walker) - ⭐ 3, [Demo Video](https://www.youtube.com/watch?v=mcH4TlnGenQ) |
| 🆕 The Promised Pen | A free, feature-rich novel writing application that helps writers organize stories, characters, and worlds. Uses Pollinations AI for generating chapter summaries, rewriting text based on context, and generating new content based on previous chapters and character information. | @soryn.san | [Website](https://promisedpen.app) |
| 🆕 Match-cut video ai | This AI generates video from text in match-cut text style, uses pollinations llm to generate nearby text, and supports API integration. | @r3ap3redit | [Website](https://video-gen.megavault.in), [GitHub](https://github.com/iotserver24/match-cut-ai) |
| 🆕 Anisurge | A free anime streaming app with a public chat feature that allows users to chat with AI characters powered by Pollinations AI. | @iotserver24 | [Website](https://anisurge.me), [Download APK](https://bucket.anisurge.me/2.23.4-1/Anisurge-universal.apk) |
| 🆕 MoneyPrinterTurbo | Simply provide a topic or keyword for a video, and it will automatically generate the video copy, video materials, video subtitles, and video background music before synthesizing a high-definition short video. Integrates Pollinations&#039; text generation service to create engaging and relevant video scripts. | @harry0703 | [GitHub](https://github.com/harry0703/MoneyPrinterTurbo) - ⭐ 32.1k |
| 🆕 Rizqi O Chatbot 🇮🇩 | Rizqi O Chatbot adalah proyek berbasis Pollinations yang menggabungkan tiga fitur utama: chatbot AI, generator gambar AI, dan generator audio AI. (An AI chatbot, image generator, and audio generator project with support for custom aspect ratios, over 200 art styles &amp; visual effects, and automatic translation from Indonesian to English.) | @ray23-bit | [Website](https://chatbot.rizqioliveira.my.id), [GitHub](https://github.com/ray23-bit/Projectenam) |
| 🆕 Define | An AI-powered REST API designed to generate definitions for words or phrases, constrained to a specified target word count. It allows customization of tone, context, and language, delivering precise, context-aware definitions programmatically—ideal for developers and content creators. | @hasanraiyan | [Website](https://define-i05a.onrender.com/api/docs/) |
| 🆕 CoNavic | A free, open-source browser extension that brings the power of ChatGPT and browser automation directly to your fingertips. Instantly access AI assistance, manage tabs, and organize bookmarks using natural language all securely within your browser. | @mkantwala | [GitHub](https://github.com/mkantwala/CoNavic/) - ⭐ 1 |
| 🆕 imggen.top 🇨🇳 | Create stunning AI-generated images in seconds with our free AI image generator. No login required, unlimited generations, powered by FLUX model. | lipengliang2012@163.com | [Website](https://www.imggen.top/) |
| 🆕 Aura Chat bot | A chat bot integrating Pollinations API for text and image generation | @Py-Phoenix-PJS | [Email](mailto:itznarutotamilan007@gmail.com) |
| 🆕 FoodAnaly | An AI application for food analysis that uses advanced artificial intelligence technology to help users understand food ingredients, nutritional value, and health impacts. | liukang0120@163.com | [Website](https://foodanaly.vercel.app/) |
| 🆕 OkeyAI | An LLM created by Africans to understand and have cultural awareness of African contexts and languages, OkeyAI outperforms many LLM models based on size and intelligence, OkeyMeta uses pollination image generating API to train it&#039;s LLM (OkeyAI) on images in real time. | @okeymeta | [Website](https://chat.okeymeta.com.ng), [GitHub](https://github.com/okeymeta) |
| 🆕 🤖 DesmondBot | A snarky bot based on Llama that is 100% free, powered by the Pollinations text API and OpenWebUI. Other models are available as well. | @mcgdj | [Website](https://swedish-innocent-teeth-majority.trycloudflare.com) |
| 🆕 🤖 Raftar.xyz | A Discord multi-purpose bot with over 100+ commands, including AI image generation, ChatGPT, and SearchGPT powered by Pollinations.AI | @goodgamerhere | [Website](https://raftar.xyz) |
| 🆕 DreamBig - Generative AI Playground | Interactive AI playground with chat, image generation, and voice responses for creative exploration | @opzzxsprinta._999 | [Website](https://dreambiglabs.vercel.app/) |
| 🆕 Goalani | Voice-enabled AI fitness coach that helps with fitness tracking, nutrition logging, and personalized coaching using voice commands | goalani.app@gmail.com | [Website](https://goalani.com) |
| 🆕 IMyself AI 🇨🇳 | 我们提供高质量的AI生成服务，包括图像生成、文本生成、音频生成和语音转文本服务， 让您轻松创建各种创意内容。 (We provide high-quality AI generation services, including image generation, text generation, audio generation, and speech to text services, allowing you to easily create various creative content.) | Shadownc | [Website](https://openai.lmyself.top/) |
| 🆕 AI Chat Assistant | A comprehensive AI Chat Assistant designed to provide users with an interactive chat interface that supports both text and image generation. Features multiple AI models (GPT-4o, Claude, Qwen-Coder, Llama, Mistral, etc.), image generation from text prompts, image-to-image processing, and a responsive UI with desktop and mobile support | @_dr_misterio_ | [Website](https://seed-ashy.vercel.app/) |
| 🆕 FreeAI 🇨🇳 | An AI application platform based on Pollinations.AI API, providing free and unlimited AI chat assistant, image generation, and voice synthesis services | @Azad-sl | [Website](https://freeai.aihub.ren/), [GitHub](https://github.com/Azad-sl/FreeAI) - ⭐ 44 |
| 🆕 AI Unlimited Customizable Feature Module 🇨🇳 | This project provides a free API interface supporting various text and image generation models, including OpenAI&#039;s GPT-4, Gemini 2.0, etc. Users can access these models without an API key to perform text generation, image generation, translation, text polishing, and more | [S_S](https://linux.do/u/s_s/summary) | [Website](https://getquicker.net/Sharedaction?code=9ac738ed-a4b2-4ded-933c-08dd5f710a8b&amp;fromMyShare=true) |
| 🆕 Zelos AI image generator | It uses Pollinations for both prompt enhancing and image generation, it was a easy to make project due to pollinations services being easy to use | [Roblox Profile](https://www.roblox.com/users/4361935306/profile) | [Website](https://websim.ai/@ISWEARIAMNOTADDICTEDTOPILLOW/ai-image-prompt-generator) |
| 🆕 Aiphoto智能绘画 🇨🇳 | AI艺术工坊 - 智能绘画生成器。这是一个基于AI的绘画生成工具，可以根据用户输入的中文描述自动生成相应的图片。(An AI art workshop - intelligent painting generator. This is an AI-based painting generation tool that can automatically generate images based on Chinese descriptions input by users.) | @zhikanyeye | [Website](https://qiyimg.3d.tc/Aiphoto), [GitHub](https://github.com/zhikanyeye/Aiphoto) |
| 🆕 Mirexa AI Chat | A state-of-the-art AI chatbot that seamlessly integrates multiple LLMs with advanced multimodal capabilities. Features comprehensive text generation, sophisticated image creation and image-to-image transformation, audio generation, mathematical problem solving, and real-time web search functionality | [WithThatWay on GitHub](https://github.com/withthatway) | [Website](https://mirexa.vercel.app) |
| gpt4free | The official gpt4free repository - various collection of powerful language models | xtekky | [GitHub](https://github.com/xtekky/gpt4free) - ⭐ 64.1k |
| LobeChat | An open-source, modern-design ChatGPT/LLMs UI/Framework with speech-synthesis, multi-modal, and extensible plugin system | - | [Website](https://lobehub.com/plugins/pollinations-drawing), [GitHub](https://github.com/lobehub/lobe-chat) - ⭐ 59k |
| SillyTavern | An LLM frontend for power users. Pollinations permits it to generate text and images | - | [Docs](https://docs.sillytavern.app/), [GitHub](https://github.com/SillyTavern/SillyTavern) - ⭐ 14.7k |
| Qwen-Agent | A framework for developing agentic LLM applications | - | [GitHub](https://github.com/QwenLM/Qwen-Agent) - ⭐ 6.6k |
| DynaSpark AI | A versatile AI assistant with advanced image and text generation capabilities | Th3-C0der | [Website](https://dynaspark.onrender.com), [GitHub](https://github.com/Th3-C0der) - ⭐ 20 |
| 🆕 FreeAI 🇨🇳 | An AI application platform based on Pollinations.AI API, providing free and unlimited AI chat assistant, image generation, and voice synthesis services | @Azad-sl | [Website](https://freeai.aihub.ren/), [GitHub](https://github.com/Azad-sl/FreeAI) - ⭐ 44 |
| FlowGPT | Generate images on-demand with ChatGPT | - | [Website](https://flowgpt.com/p/instant-image-generation-with-chatgpt-and-pollinationsai) |
| Unity AI Lab | A specialized uncensored LLM model built on Mistral Large, focused on unrestricted conversations | - | [Website](https://blog.unityailab.com/unity.html) |
| Pollinations Chat | Pollinations&#039; integrated AI for text and images, totally free and unlimited | @adrianoprogramer | [Website](https://websim.ai/@AdrianoDev1/pollinations-ai-assistant/4), [Instagram](https://www.instagram.com/adrianop_761?igshid=MmxwNnRsajVnZmMy) |


### Creative &amp; Interactive Applications

| App | Description | Creator | Links |
|-----|-------------|---------|-------|
| 🆕 MASala | Multi-Agent AI That Cooks Up Recipes Just for You ~ From fridge to feast, MASALA plans it all. | @Naman009 | [GitHub](https:/

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mayswind/AriaNg]]></title>
            <link>https://github.com/mayswind/AriaNg</link>
            <guid>https://github.com/mayswind/AriaNg</guid>
            <pubDate>Tue, 27 May 2025 00:04:39 GMT</pubDate>
            <description><![CDATA[AriaNg, a modern web frontend making aria2 easier to use.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mayswind/AriaNg">mayswind/AriaNg</a></h1>
            <p>AriaNg, a modern web frontend making aria2 easier to use.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 12,291</p>
            <p>Forks: 1,313</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre># AriaNg
[![License](https://img.shields.io/github/license/mayswind/AriaNg.svg?style=flat)](https://github.com/mayswind/AriaNg/blob/master/LICENSE)
[![Lastest Build](https://img.shields.io/circleci/project/github/mayswind/AriaNg.svg?style=flat)](https://circleci.com/gh/mayswind/AriaNg/tree/master)
[![Lastest Release](https://img.shields.io/github/release/mayswind/AriaNg.svg?style=flat)](https://github.com/mayswind/AriaNg/releases)

## Introduction
AriaNg is a modern web frontend making [aria2](https://github.com/aria2/aria2) easier to use. AriaNg is written in pure html &amp; javascript, thus it does not need any compilers or runtime environment. You can just put AriaNg in your web server and open it in your browser. AriaNg uses responsive layout, and supports any desktop or mobile devices.

## Features
1. Pure Html &amp; Javascript, no runtime required
2. Responsive design, supporting desktop and mobile devices
3. User-friendly interface
    * Sort tasks (by name, size, progress, remaining time, download speed, etc.), files, bittorrent peers
    * Search tasks
    * Retry tasks
    * Adjust task order by dragging
    * More information of tasks (health percentage, client information of bt peers, etc.)
    * Filter files by specified file types (videos, audios, pictures, documents, applications, archives, etc.) or file extensions
    * Tree view for multi-directory task
    * Download / upload speed chart for aria2 or single task
    * Full support for aria2 settings
4. Dark theme
5. Url command line api support
6. Download finished notification
7. Multi-languages support
    * Czech
    * English
    * Spanish
    * French
    * Italian
    * Polish
    * Russian
    * Chinese (Simplified Chinese / Traditional Chinese)
8. Multi aria2 RPC host support
9. Exporting and Importing settings support
10. Less bandwidth usage, only requesting incremental data

## Screenshots
#### Desktop
![AriaNg](https://raw.githubusercontent.com/mayswind/AriaNg-WebSite/master/screenshots/desktop.png)
#### Mobile Device
![AriaNg](https://raw.githubusercontent.com/mayswind/AriaNg-WebSite/master/screenshots/mobile.png)

## Installation
AriaNg now provides three versions, standard version, all-in-one version and [AriaNg Native](https://github.com/mayswind/AriaNg-Native). Standard version is suitable for deployment in the web server, and provides on-demand loading. All-In-One version is suitable for local using, and you can download it and just open the only html file in browser. [AriaNg Native](https://github.com/mayswind/AriaNg-Native) is also suitable for local using, and is no need for browser. 

#### Prebuilt release
Latest Release: [https://github.com/mayswind/AriaNg/releases](https://github.com/mayswind/AriaNg/releases)

Latest Daily Build (Standard Version): [https://github.com/mayswind/AriaNg-DailyBuild/archive/master.zip](https://github.com/mayswind/AriaNg-DailyBuild/archive/master.zip)

#### Building from source
Make sure you have [Node.js](https://nodejs.org/), [NPM](https://www.npmjs.com/) and [Gulp](https://gulpjs.com/) installed. Then download the source code, and follow these steps.

##### Standard Version

    $ npm install
    $ gulp clean build

##### All-In-One Version

    $ npm install
    $ gulp clean build-bundle

The builds will be placed in the dist directory.

#### Usage Notes
Since AriaNg standard version loads language resources asynchronously, you may not open index.html directly on the local file system to run AriaNg. It is recommended that you can use the all-in-one version or deploy AriaNg in a web container or download [AriaNg Native](https://github.com/mayswind/AriaNg-Native) that does not require a browser to run.

## Translating

Everyone is welcome to contribute translations. All translations files are put in `/src/langs/`. You can just modify and commit a new pull request.

If you want to translate AriaNg to a new language, you can add language configuration to `/src/scripts/config/languages.js`, then copy `/i18n/en.sample.txt` to `/src/langs/` and rename it to the language code to be translated, then you can start the translation work.

## Documents
1. [English](http://ariang.mayswind.net)
2. [Simplified Chinese (简体中文)](http://ariang.mayswind.net/zh_Hans)

## Demo
Please visit [http://ariang.mayswind.net/latest](http://ariang.mayswind.net/latest)

## Third Party Extensions
There are some third-party applications based on AriaNg, so you can use AriaNg in more scenarios or devices. Please visit [Third Party Extensions](http://ariang.mayswind.net/3rd-extensions.html) for more information.

## License
[MIT](https://github.com/mayswind/AriaNg/blob/master/LICENSE)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[prettier/prettier]]></title>
            <link>https://github.com/prettier/prettier</link>
            <guid>https://github.com/prettier/prettier</guid>
            <pubDate>Tue, 27 May 2025 00:04:38 GMT</pubDate>
            <description><![CDATA[Prettier is an opinionated code formatter.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/prettier/prettier">prettier/prettier</a></h1>
            <p>Prettier is an opinionated code formatter.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 50,459</p>
            <p>Forks: 4,506</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre>[![Prettier Banner](https://unpkg.com/prettier-logo@1.0.3/images/prettier-banner-light.svg)](https://prettier.io)

&lt;h2 align=&quot;center&quot;&gt;Opinionated Code Formatter&lt;/h2&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;em&gt;
    JavaScript
    · TypeScript
    · Flow
    · JSX
    · JSON
  &lt;/em&gt;
  &lt;br /&gt;
  &lt;em&gt;
    CSS
    · SCSS
    · Less
  &lt;/em&gt;
  &lt;br /&gt;
  &lt;em&gt;
    HTML
    · Vue
    · Angular
  &lt;/em&gt;
  &lt;br /&gt;
  &lt;em&gt;
    GraphQL
    · Markdown
    · YAML
  &lt;/em&gt;
  &lt;br /&gt;
  &lt;em&gt;
    &lt;a href=&quot;https://prettier.io/docs/plugins&quot;&gt;
      Your favorite language?
    &lt;/a&gt;
  &lt;/em&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/prettier/prettier/actions?query=branch%3Amain&quot;&gt;
    &lt;img alt=&quot;CI Status&quot; src=&quot;https://img.shields.io/github/check-runs/prettier/prettier/main?style=flat-square&amp;label=CI&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://codecov.io/gh/prettier/prettier&quot;&gt;
    &lt;img alt=&quot;Coverage Status&quot; src=&quot;https://img.shields.io/codecov/c/github/prettier/prettier.svg?style=flat-square&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://x.com/acdlite/status/974390255393505280&quot;&gt;
    &lt;img alt=&quot;Blazing Fast&quot; src=&quot;https://img.shields.io/badge/speed-blazing%20%F0%9F%94%A5-brightgreen.svg?style=flat-square&quot;&gt;&lt;/a&gt;
  &lt;br/&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/prettier&quot;&gt;
    &lt;img alt=&quot;npm version&quot; src=&quot;https://img.shields.io/npm/v/prettier.svg?style=flat-square&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/prettier&quot;&gt;
    &lt;img alt=&quot;weekly downloads from npm&quot; src=&quot;https://img.shields.io/npm/dw/prettier.svg?style=flat-square&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/prettier/prettier#badge&quot;&gt;
    &lt;img alt=&quot;code style: prettier&quot; src=&quot;https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://x.com/intent/follow?screen_name=PrettierCode&quot;&gt;
    &lt;img alt=&quot;Follow Prettier on X&quot; src=&quot;https://img.shields.io/badge/%40PrettierCode-9f9f9f?style=flat-square&amp;logo=x&amp;labelColor=555&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

## Intro

Prettier is an opinionated code formatter. It enforces a consistent style by parsing your code and re-printing it with its own rules that take the maximum line length into account, wrapping code when necessary.

### Input

&lt;!-- prettier-ignore --&gt;
```js
foo(reallyLongArg(), omgSoManyParameters(), IShouldRefactorThis(), isThereSeriouslyAnotherOne());
```

### Output

```js
foo(
  reallyLongArg(),
  omgSoManyParameters(),
  IShouldRefactorThis(),
  isThereSeriouslyAnotherOne(),
);
```

Prettier can be run [in your editor](https://prettier.io/docs/editors) on-save, in a [pre-commit hook](https://prettier.io/docs/precommit), or in [CI environments](https://prettier.io/docs/cli#list-different) to ensure your codebase has a consistent style without devs ever having to post a nit-picky comment on a code review ever again!

---

**[Documentation](https://prettier.io/docs/)**

[Install](https://prettier.io/docs/install) ·
[Options](https://prettier.io/docs/options) ·
[CLI](https://prettier.io/docs/cli) ·
[API](https://prettier.io/docs/api)

**[Playground](https://prettier.io/playground/)**

---

## Badge

Show the world you&#039;re using _Prettier_ → [![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)

```md
[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)
```

## Contributing

See [CONTRIBUTING.md](CONTRIBUTING.md).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[meshery/meshery]]></title>
            <link>https://github.com/meshery/meshery</link>
            <guid>https://github.com/meshery/meshery</guid>
            <pubDate>Tue, 27 May 2025 00:04:37 GMT</pubDate>
            <description><![CDATA[Meshery, the cloud native manager]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/meshery/meshery">meshery/meshery</a></h1>
            <p>Meshery, the cloud native manager</p>
            <p>Language: JavaScript</p>
            <p>Stars: 7,117</p>
            <p>Forks: 2,292</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre>
&lt;p style=&quot;text-align:center;&quot; align=&quot;center&quot;&gt;&lt;a href=&quot;https://meshery.io&quot;&gt;&lt;picture&gt;
 &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-light-text-side.svg&quot;&gt;
 &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg&quot;&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg&quot;
alt=&quot;Meshery Logo&quot; width=&quot;70%&quot; /&gt;&lt;/picture&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://hub.docker.com/r/meshery/meshery&quot; alt=&quot;Docker pulls&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/docker/pulls/layer5/meshery.svg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/issues?q=is%3Aopen%20is%3Aissue%20archived%3Afalse%20(org%3Alayer5io%20OR%20org%3Ameshery%20OR%20org%3Alayer5labs%20OR%20org%3Aservice-mesh-performance%20OR%20org%3Aservice-mesh-patterns%20OR%20org%3Ameshery-extensions)%20label%3A%22help%20wanted%22%20&quot; alt=&quot;GitHub issues by-label&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/issues/layer5io/meshery/help%20wanted.svg?color=informational&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/meshery/meshery/blob/master/LICENSE&quot; alt=&quot;LICENSE&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/license/meshery/meshery?color=brightgreen&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://artifacthub.io/packages/helm/meshery/meshery&quot; alt=&quot;Artifact Hub Meshery&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/endpoint?color=brightgreen&amp;label=Helm%20Chart&amp;style=plastic&amp;url=https%3A%2F%2Fartifacthub.io%2Fbadge%2Frepository%2Fartifact-hub&quot; /&gt;&lt;/a&gt;  
&lt;a href=&quot;https://goreportcard.com/report/github.com/meshery/meshery&quot; alt=&quot;Go Report Card&quot;&gt;
  &lt;img src=&quot;https://goreportcard.com/badge/github.com/meshery/meshery&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/meshery/meshery/actions&quot; alt=&quot;Build Status&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/meshery/meshery/release-drafter.yml&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://bestpractices.coreinfrastructure.org/projects/3564&quot; alt=&quot;CLI Best Practices&quot;&gt;
  &lt;img src=&quot;https://bestpractices.coreinfrastructure.org/projects/3564/badge&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://meshery.io/community#discussion-forums&quot; alt=&quot;Discuss Users&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/discourse/users?label=discuss&amp;logo=discourse&amp;server=https%3A%2F%2Fdiscuss.layer5.io&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://slack.meshery.io&quot; alt=&quot;Join Slack&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/badge/Slack-@layer5.svg?logo=slack&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/intent/follow?screen_name=mesheryio&quot; alt=&quot;Twitter Follow&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/twitter/follow/mesheryio.svg?label=Follow+Meshery&amp;style=social&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/meshery/meshery/releases&quot; alt=&quot;Meshery Downloads&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/downloads/meshery/meshery/total&quot; /&gt;&lt;/a&gt;  
&lt;a href=&quot;https://gurubase.io/g/meshery&quot; alt=&quot;Meshery Guru&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/badge/Gurubase-Ask%20Meshery%20Guru-006BFF&quot; /&gt;&lt;/a&gt;
&lt;!-- &lt;a href=&quot;https://app.fossa.com/projects/git%2Bgithub.com%2Fmeshery%2Fmeshery?ref=badge_shield&quot; alt=&quot;License Scan Report&quot;&gt;
  &lt;img src=&quot;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fmeshery%2Fmeshery.svg?type=shield&quot;/&gt;&lt;/a&gt;  
  --&gt;
&lt;/p&gt;

&lt;h5&gt;&lt;p align=&quot;center&quot;&gt;&lt;i&gt;If you like Meshery, please &lt;a href=&quot;https://github.com/meshery/meshery/stargazers&quot;&gt;★&lt;/a&gt; this repository to show your support! 🤩&lt;/i&gt;&lt;/p&gt;&lt;/h5&gt;
&lt;p align=&quot;center&quot; &gt;
MESHERY IS A CLOUD NATIVE COMPUTING FOUNDATION PROJECT
&lt;/p&gt;

&lt;div align=&quot;center&quot; width=&quot;100%&quot;&gt;
&lt;img src=&quot;.github/assets/images/readme/cncf-white.svg#gh-dark-mode-only&quot; width=&quot;30%&quot; align=&quot;center&quot; /&gt;
&lt;img src=&quot;.github/assets/images/readme/cncf-black.svg#gh-light-mode-only&quot; width=&quot;30%&quot; align=&quot;center&quot; /&gt;
&lt;/div&gt;
&lt;br /&gt;
&lt;p align=&quot;center&quot;&gt;
A self-service engineering platform, &lt;a href=&quot;https://meshery.io&quot;&gt;Meshery&lt;/a&gt;, is the open source, cloud native manager that enables the design and management of all Kubernetes-based infrastructure and applications (multi-cloud). Among other features,  As an extensible platform, Meshery offers visual and collaborative GitOps, freeing you from the chains of YAML while managing Kubernetes multi-cluster deployments.
&lt;/p&gt;
&lt;br /&gt;

&lt;div align=&quot;center&quot; width=&quot;100%&quot;&gt;
 &lt;a href=&quot;https://youtu.be/Do7htKrRzDA&quot;&gt;&lt;img src=&quot;.github/assets/images/readme/thumbnail.png&quot; width=&quot;800px&quot; /&gt;&lt;/a&gt;
 &lt;p&gt;&lt;i&gt;Example extension. See other &lt;a href=&quot;https://meshery.io/extensions&quot;&gt;Meshery Extensions&lt;/a&gt;.&lt;/i&gt;&lt;/p&gt;
 &lt;br /&gt;Try Meshery in your browser using the &lt;a href=&quot;https://play.meshery.io&quot;&gt;Cloud Native Playground&lt;/a&gt; (&lt;a href=&quot;https://www.youtube.com/watch?v=034nVaQUyME&amp;list=PL3A-A6hPO2IO_yzN83wSJJUNQActzCJvO&amp;index=9&quot;&gt;teaser video&lt;/a&gt;)
&lt;/div&gt;

&lt;br /&gt;
&lt;!--
- [Functionality](#functionality)
  - [Meshery Architecture](#meshery-architecture)
  - [Join the Meshery community!](#join-the-meshery-community)
  - [Contributing](#contributing)
    - [Stargazers](#stargazers)
    - [License](#license)
--&gt;
&lt;!-- &lt;p style=&quot;clear:both;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;a href=&quot;https://meshery.io&quot;&gt;&lt;picture&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-light-text-side.svg&quot;&gt;
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg&quot;&gt;
  &lt;img alt=&quot;Meshery - the Cloud Native Manager&quot; src=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg&quot; align=&quot;left&quot; width=&quot;45%&quot;&gt;
  &lt;/picture&gt;&lt;/a&gt; 
&lt;a href=&quot;https://meshery.io&quot;&gt;
&lt;h3 style=&quot;margin:auto;&quot;&gt;&lt;br /&gt;&lt;br /&gt;
  &lt;a href=&quot;https://docs.google.com/presentation/d/14kxjwYSJ_FyE3K_6CDEd6oq2kqwn0OSE8RDJ4H-KlKU/edit?usp=sharing&quot;&gt;&lt;center&gt;&lt;i&gt;Project Overview Presentation&lt;/i&gt;&lt;/center&gt;&lt;/a&gt;
  &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
&lt;/h3&gt; --&gt;

&lt;p style=&quot;clear:both;&quot;&gt;&amp;nbsp;&lt;/p&gt;

# Functionality

## Infrastructure Lifecycle Management

Meshery manages the configuration, deployment, and operation of your Cloud services and Kubernetes clusters while supporting hundreds of different types of cloud native infrastructure integrations. Meshery supports [300+ integrations](https//meshery.io/integrations).

&lt;!--
&lt;a href=&quot;https://www.youtube.com/watch?v=034nVaQUyME&quot;&gt;&lt;img alt=&quot;Meshery cloud native management&quot; src=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshmap.gif&quot;  style=&quot;margin-left:10px; margin-bottom:10px;&quot; width=&quot;100%&quot; align=&quot;center&quot; /&gt;&lt;/a&gt;
&lt;br /&gt;&lt;br /&gt;--&gt;
&lt;/p&gt;

&lt;a href=&quot;.github/assets/images/readme/cloud-native-integrations.png&quot;&gt;&lt;img alt=&quot;Meshery Integrations&quot; src=&quot;.github/assets/images/readme/cloud-native-integrations.png&quot;  style=&quot;margin-right:10px;margin-bottom:10px;&quot; width=&quot;100%&quot; align=&quot;center&quot;/&gt;&lt;/a&gt;

Find infrastructure configuration patterns in Meshery&#039;s &lt;a href=&quot;https://meshery.io/catalog&quot;&gt;catalog of curated design templates&lt;/a&gt; filled with configuration best practices.

## Multiple Kubernetes Clusters and Multiple Clouds

&lt;img src =&quot;https://meshery.io/assets/images/screens/multi-cluster-management.gif&quot; width=&quot;50%&quot; alt=&quot;Multi-cluster Kubernetes Manager&quot; loading=&quot;lazy&quot; align=&quot;center&quot; /&gt;&lt;br /&gt;

Meshery provides a single pane of glass to manage multiple Kubernetes clusters across any infrastructure, including various cloud providers. Meshery enables consistent configuration, operation, and observability across your entire Kubernetes landscape.

&lt;details&gt;&lt;summary&gt;&lt;h4&gt;Dry-run your deployments&lt;/h4&gt;&lt;/summary&gt;
Meshery leverages Kubernetes&#039; built-in dry-run capabilities to allow you to simulate deployments without actually applying the changes to your cluster. This enables you to:

- Validate configurations: Ensure your deployment specifications (e.g., YAML manifests, Helm charts, Meshery Designs) are syntactically correct and will be accepted by the Kubernetes API server.   
- Identify potential issues: Detect errors in your configurations, such as invalid resource definitions, missing fields, or API version mismatches, before they impact your live environment.
- Preview changes: Understand the objects that Kubernetes would create or modify during a real deployment.
- Integrate with CI/CD: Incorporate dry-run as a step in your continuous integration and continuous delivery pipelines to automate pre-deployment checks and prevent faulty deployments.

By providing this dry-run functionality, Meshery helps you increase the reliability and stability of your Kubernetes deployments by catching potential problems early in the development and deployment process.
&lt;!-- 
Assess your cloud native infrastructure configuration against deployment and operational best practices with Meshery&#039;s configuration validator. Manage your workloads with confidence. Check your Kubernetes configuration for anti-patterns and avoid common pitfalls. --&gt;

&lt;/details&gt;

### Visually and collaboratively manage your infrastructure

Using a GitOps-centric approach, visually and collaboratively design and manage your infrastructure and microservices. Meshery intelligently infers the manner in which each resource [interrelates](https://docs.meshery.io/concepts/logical/relationships) with each other. Meshery supports a broad variety of built-in relationships between components, which you can use to create your own custom relationships.

&lt;img src=&quot;.github/assets/images/readme/edge_mount_relationship_pod_persistent_volume.svg&quot; width=&quot;50%&quot; alt=&quot;Multi-cluster Kubernetes Manager&quot; align=&quot;center&quot; /&gt;

&lt;details&gt;&lt;summary&gt;&lt;img alt=&quot;OPA Logo&quot; src=&quot;.github/assets/images/readme/opa-logo.svg&quot; style=&quot;margin-right:10px;&quot; width=&quot;25px&quot; align=&quot;left&quot; /&gt;&lt;h4&gt;Context-Aware Policies For Applications&lt;/h4&gt;&lt;/summary&gt;
&lt;img alt=&quot;Meshery and Open Policy Agent Integration&quot; src=&quot;.github/assets/images/readme/meshery-policies-2.png&quot; style=&quot;margin:auto;text-align:center&quot; width=&quot;50%&quot; /&gt;
&lt;p&gt;Leverage built-in relationships to enforce configuration best practices consistently from code to Kubernetes. Customize Configure your infrastructure with confidence without needing to know or write Open Policy Agent&#039;s Rego query language.&lt;/p&gt;
&lt;/details&gt;

## Workspaces: Your team&#039;s Google Drive for cloud native projects

&lt;img src=&quot;.github/assets/images/readme/workspace.gif&quot; width=&quot;50%&quot; alt=&quot;Multi-cluster Kubernetes Manager&quot; loading=&quot;lazy&quot; /&gt;

Workspaces let you organize your work and serve as the central point of collaboration for you and your teams and point of access control to Environments and their resources.

&lt;details&gt;&lt;summary&gt;&lt;h4&gt;Manage your connections with Environments&lt;/h4&gt;&lt;/summary&gt;

&lt;img src=&quot;.github/assets/images/readme/environments.gif&quot; width=&quot;50%&quot; alt=&quot;Multi-cluster Kubernetes Manager&quot; loading=&quot;lazy&quot; /&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.meshery.io/concepts/logical/environments&quot;&gt;Environments&lt;/a&gt;  make it easier for you to manage, share, and work with a collection of resources as a group, instead of dealing with all your Connections and Credentials on an individual basis.&lt;/p&gt;
&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;&lt;h4&gt;See changes to your infra before you merge&lt;/h4&gt;&lt;/summary&gt;

&lt;img src=&quot;.github/assets/images/readme/meshery-snapshot.png&quot; width=&quot;50%&quot; alt=&quot;Multi-cluster Kubernetes Manager&quot; loading=&quot;lazy&quot; align=&quot;center&quot; /&gt;

Get snapshots of your infrastructure directly in your PRs. Preview your deployment, view changes pull request-to-pull request and get infrastructure snapshots within your PRs by connecting Kanvas to your GitHub repositories.
&lt;/details&gt;

&lt;!-- &lt;h3&gt;Operate with configuration best practices&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;p&gt;Assess your configurations against deployment and operational best practices with Meshery&#039;s configuration validator.&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;

&lt;h3&gt;Control all of your infrastructure with mesheryctl&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;p&gt;Whether managing multiple Meshery deployments, importing designs, discoverying Kubernetes clusters, do so with ease using Meshery CLI in your terminal.&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt; --&gt;

## Platform Engineering with Meshery&#039;s Extension Points

Extend Meshery as your self-service engineering platform by taking advantage of its [vast set of extensibility features](https://docs.meshery.io/extensibility), including gRPC adapters, hot-loadable Reactjs packages and Golang plugins, subscriptions on NATS topics, consumable _and_ extendable API interfaces via REST and GraphQL.The great number of extension points in Meshery make it ideal as the foundation of your internal developer platform.

&lt;details&gt;&lt;summary&gt;&lt;h4&gt;Access the Cloud Native Patterns for Kubernetes&lt;/h4&gt;&lt;/summary&gt;

&lt;p&gt;Design and manage all of your cloud native infrastructure using the design configurator in Meshery or start from a template using the patterns from the &lt;a href=&quot;https://meshery.io/catalog&quot;&gt;catalog&lt;/a&gt;.
&lt;/details&gt;

Meshery offers robust capabilities for managing multiple tenants within a shared Kubernetes infrastructure. Meshery provides the tools and integrations necessary to create a secure, isolated, and manageable multi-tenant environments, allowing multiple teams or organizations with granular control over their role-based access controls.

Meshery&#039;s &quot;multi-player&quot; functionality refers to its collaborative features that enable multiple users to interact with and manage cloud native infrastructure simultaneously. This is primarily facilitated through Kanvas, a Meshery extension visual designer and management interface.

## Performance Management

Meshery offers load generation and performance characterization to help you assess and optimize the performance of your applications and infrastructure.

&lt;img src=&quot;.github/assets/images/readme/performance-metrics.gif&quot; alt=&quot;Multi-cluster Kubernetes Manager&quot; width=&quot;50%&quot; /&gt;

&lt;p&gt;Create and reuse performance profiles for consistent characterization of the configuration of your infrastructure in context of how it performs.&lt;/p&gt;

&lt;details&gt;
&lt;summary&gt;&lt;h4&gt; Manage the performance of your infrastructure and its workloads&lt;/h4&gt;&lt;/summary&gt;

&lt;img src = &quot;.github/assets/images/readme/service-mesh-performance-example.gif&quot;&gt;

Baseline and track your cloud native performance from release to release.

- Use performance profiles to track the historical performance of your workloads.
- Track your application performance from version to version.
- Understand behavioral differences between cloud native network functions.
- Compare performance across infrastructure deployments.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;h4&gt;Load Generation and Microservice Performance Characteristization&lt;/h4&gt;&lt;/summary&gt;

&lt;picture align=&quot;left&quot;&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/layer5io/layer5/master/src/assets/images/service-mesh-performance/stacked/smp-light-text.svg&quot;  width=&quot;18%&quot; align=&quot;left&quot; style=&quot;margin-left:10px;&quot; /&gt;
  &lt;img alt=&quot;Shows an illustrated light mode meshery logo in light color mode and a dark mode meshery logo dark color mode.&quot; src=&quot;https://raw.githubusercontent.com/layer5io/layer5/master/src/assets/images/service-mesh-performance/stacked/smp-light-text.svg&quot; width=&quot;18%&quot; align=&quot;left&quot; style=&quot;margin-left:10px;&quot; /&gt;
&lt;/picture&gt;

- **Multiple Load Generators:** Meshery supports various load generators, including Fortio, Wrk2, and Nighthawk, allowing users to choose the tool that best suits your needs.
- **Configurable Performance Profiles:** Meshery provides a highly configurable set of load profiles with tunable facets, enabling users to generate TCP, gRPC, and HTTP load. You can customize parameters such as duration, concurrent threads, concurrent generators, and load generator type. 
- **Statistical Analysis:** Meshery performs statistical analysis on the results of performance tests, presenting data in the form of histograms with latency buckets. Understand the distribution of response times and identify potential bottlenecks.
- **Comparison of Test Results:** Meshery enables you to compare the difference in request performance (latency and throughput) between independent performance tests. Save your load test configurations as Performance Profiles, making it easy to rerun tests with the same settings and track performance variations over time.
- **Kubernetes Cluster and Workload Metrics:** - Meshery connects to one or more Prometheus servers to gather both cluster and application metrics. Meshery also integrates with Grafana, allowing you to import your existing dashboards and visualize performance data.

&lt;p&gt;In an effort to produce infrastructure agnostic tooling, Meshery uses the &lt;a href=&quot;https://smp-spec.io&quot;&gt;Cloud Native Performance&lt;/a&gt; specification as a common format to capture and measure your infrastructure&#039;s performance against a universal cloud native performance index. Meshery participates in advancing cloud native infrastructure adoption through the standardization of APIs. Meshery enables you to measure the value provided by Docker, Kubernetes, or other cloud native infrastructure in the context of the overhead incurred.&lt;/p&gt;

&lt;!-- 

SCREENSHOT / GIF NEEDED HERE

--&gt;

&lt;/details&gt;

&lt;h2&gt;&lt;a name=&quot;running&quot;&gt;&lt;/a&gt;Get Started with Meshery&lt;/h2&gt;
&lt;p style=&quot;clear:both;&quot;&gt;&lt;/p&gt;
&lt;!-- &lt;img alt=&quot;Control Kubernetes and your workloads with mesheryctl&quot; src=&quot;.github/assets/images/readme/mesheryctl.png&quot;  style=&quot;margin-left:10px; margin-bottom:10px;&quot; width=&quot;50%&quot; align=&quot;right&quot; /&gt; --&gt;
&lt;h3&gt;Using `mesheryctl`&lt;/h3&gt;
&lt;p&gt;Meshery runs as a set of containers inside or outside of your Kubernetes clusters.&lt;/p&gt;
&lt;pre&gt;curl -L https://meshery.io/install | bash -&lt;/pre&gt;
&lt;p&gt;Use the &lt;a href=&quot;https://docs.meshery.io/installation/quick-start&quot;&gt;quick start&lt;/a&gt; guide.&lt;/p&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;See all supported platforms&lt;/strong&gt;&lt;/summary&gt;

See the [getting started](https://meshery.io/#getting-started) section to quickly deploy Meshery on any of these supported platforms:

| Platform                                                                                                                                                                                                                             | Supported?  |
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :---------: |
| &lt;img src=&quot;https://docs.meshery.io/assets/img/platforms/docker.svg&quot; width=&quot;20&quot; height=&quot;20&quot; vertical-align=&quot;middle&quot; /&gt; [Docker](https://docs.meshery.io/installation/docker)                                                           |      ✔️      |
| &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src=&quot;https://docs.meshery.io/assets/img/platforms/docker.svg&quot; width=&quot;20&quot; height=&quot;20&quot; vertical-align=&quot;middle&quot; /&gt; [Docker - Docker App](https://docs.meshery.io/installation/docker)                           |      ✔️      |
| &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src=&quot;https://docs.meshery.io/assets/img/platforms/docker.svg&quot; width=&quot;20&quot; height=&quot;20&quot; vertical-align=&quot;middle&quot; /&gt; [Docker - Docker Extension](https://docs.meshery.io/installation/docker/docker-extensiongit) |      ✔️      |
| &lt;img src=&quot;https://docs.meshery.io/assets/img/platforms/kubernetes.svg&quot; width=&quot;20&quot; height=&quot;20&quot; vertical-align=&quot;middle&quot; /&gt; [Kubernetes](https://docs.meshery.io/installation/kubernetes)                                               |      ✔️      |
| &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src=&quot;https://docs.meshery.io/assets/img/platforms/aks.svg&quot; width=&quot;20&quot; height=&quot;20&quot; vertical-align=&quot;middle&quot; /&gt; [Kubernetes - AKS](https://docs.meshery.io/installation/kubernetes/aks)                         |      ✔️      |
| &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src=&quot;https://docs.meshery.io/assets/img/platforms/docker.svg&quot; width=&quot;20&quot; height=&quot;20&quot; vertical-align=&quot;middle&quot; /&gt; [Kubernetes - Docker Desktop](https://docs.meshery.io/installation#mac-or-linux)             |      ✔️      |
| &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src=&quot;https://docs.meshery.io/assets/img/platforms/eks.png&quot; width=&quot;20&quot; height=&quot;20&quot; vertical-align=&quot;middle&quot; /&gt; [Kubernetes - EKS](https://docs.meshery.io/installation/kubernetes/eks)                         |      ✔️      |
| &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src=&quot;https://docs.meshery.io/assets/img/platforms/g

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[brave/brave-browser]]></title>
            <link>https://github.com/brave/brave-browser</link>
            <guid>https://github.com/brave/brave-browser</guid>
            <pubDate>Tue, 27 May 2025 00:04:36 GMT</pubDate>
            <description><![CDATA[Brave browser for Android, iOS, Linux, macOS, Windows.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/brave/brave-browser">brave/brave-browser</a></h1>
            <p>Brave browser for Android, iOS, Linux, macOS, Windows.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 19,358</p>
            <p>Forks: 2,589</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre>![Brave Browser](./docs/source/_static/Brave.svg)

## Overview

This repository holds the build tools needed to build the Brave desktop browser for macOS, Windows, and Linux.  In particular, it fetches and syncs code from the projects defined in `package.json` and `src/brave/DEPS`:

  - [Chromium](https://chromium.googlesource.com/chromium/src.git)
    - Fetches code via `depot_tools`.
    - Sets the branch for Chromium (ex: 65.0.3325.181).
  - [brave-core](https://github.com/brave/brave-core)
    - Mounted at `src/brave`.
    - Maintains patches for 3rd party Chromium code.
  - [adblock-rust](https://github.com/brave/adblock-rust)
    - Implements Brave&#039;s ad-block engine.
    - Linked through [brave/adblock-rust-ffi](https://github.com/brave/brave-core/tree/master/components/adblock_rust_ffi).

## Downloads

You can [visit our website](https://brave.com/download) to get the latest stable release.

## Contributing

Please see the [contributing guidelines](./CONTRIBUTING.md).

Our [Wiki](https://github.com/brave/brave-browser/wiki) also has some useful technical information.

## Community

[Join the Q&amp;A community](https://community.brave.com/) if you&#039;d like to get more involved with Brave. You can [ask for help](https://community.brave.com/c/support-and-troubleshooting),
[discuss features you&#039;d like to see](https://community.brave.com/c/brave-feature-requests), and a lot more. We&#039;d love to have your help so that we can continue improving Brave.

Help us translate Brave to your language by submitting translations at https://explore.transifex.com/brave/brave_en/.

Follow [@brave](https://x.com/brave) on X for important news and announcements.

## Install prerequisites

Follow the instructions for your platform:

- [macOS](https://github.com/brave/brave-browser/wiki/macOS-Development-Environment)
- [iOS](https://github.com/brave/brave-browser/wiki/iOS-Development-Environment)
- [Windows](https://github.com/brave/brave-browser/wiki/Windows-Development-Environment)
- [Linux](https://github.com/brave/brave-browser/wiki/Linux-Development-Environment)
- [Android](https://github.com/brave/brave-browser/wiki/Android-Development-Environment)

## Clone and initialize the repo

Once you have the prerequisites installed, you can get the code and initialize the build environment.

```bash
git clone git@github.com:brave/brave-core.git path-to-your-project-folder/src/brave
cd path-to-your-project-folder/src/brave
npm install

# the Chromium source is downloaded, which has a large history (gigabytes of data)
# this might take really long to finish depending on internet speed

npm run init
```
brave-core based android builds should use `npm run init -- --target_os=android --target_arch=arm` (or whichever CPU type you want to build for)
brave-core based iOS builds should use `npm run init -- --target_os=ios`

You can also set the target_os and target_arch for init and build using:

```
npm config set target_os android
npm config set target_arch arm
```

Additional parameters needed to build are documented at https://github.com/brave/brave-browser/wiki/Build-configuration

Internal developers can find more information at https://github.com/brave/devops/wiki/%60.env%60-config-for-Brave-Developers

## Build Brave
The default build type is component.

```
# start the component build compile
npm run build
```

To do a release build:

```
# start the release compile
npm run build Release
```

brave-core based android builds should use `npm run build -- --target_os=android --target_arch=arm` or set the npm config variables as specified above for `init`

brave-core based iOS builds should use the Xcode project found in `ios/brave-ios/App`. You can open this project directly or run `npm run ios_bootstrap -- --open_xcodeproj` to have it opened in Xcode. See the [iOS Developer Environment](https://github.com/brave/brave-browser/wiki/iOS-Development-Environment#Building) for more information on iOS builds.

### Build Configurations

Running a release build with `npm run build Release` can be very slow and use a lot of RAM, especially on Linux with the Gold LLVM plugin.

To run a statically linked build (takes longer to build, but starts faster):

```bash
npm run build -- Static
```

To run a debug build (Component build with is_debug=true):

```bash
npm run build -- Debug
```
NOTE: the build will take a while to complete. Depending on your processor and memory, it could potentially take a few hours.

## Run Brave
To start the build:

`npm start [Release|Component|Static|Debug]`

# Update Brave

`npm run sync -- [--force] [--init] [--create] [brave_core_ref]`

**This will attempt to stash your local changes in brave-core, but it&#039;s safer to commit local changes before running this**

`npm run sync` will (depending on the below flags):

1. 📥 Update sub-projects (chromium, brave-core) to latest commit of a git ref (e.g. tag or branch)
2. 🤕 Apply patches
3. 🔄 Update gclient DEPS dependencies
4. ⏩ Run hooks (e.g. to perform `npm install` on child projects)

| flag | Description |
|---|---|
|`[no flags]`|updates chromium if needed and re-applies patches. If the chromium version did not change, it will only re-apply patches that have changed. Will update child dependencies **only if any project needed updating during this script run**. &lt;br&gt; **Use this if you want the script to manage keeping you up to date instead of pulling or switching branches manually. **|
|`--force`|updates both _Chromium_ and _brave-core_ to the latest remote commit for the current brave-core branch and the _Chromium_ ref specified in brave-browser/package.json (e.g. `master` or `74.0.0.103`). Will re-apply all patches. Will force update all child dependencies. &lt;br&gt; **Use this if you&#039;re having trouble and want to force the branches back to a known state. **|
|`--init`|force update both _Chromium_ and _brave-core_ to the versions specified in brave-browser/package.json and force updates all dependent repos - same as `npm run init`|
|`--sync_chromium (true/false)`|Will force or skip the chromium version update when applicable. Useful if you want to avoid a minor update when not ready for the larger build time a chromium update may result in. A warning will be output about the current code state expecting a different chromium version. Your build may fail as a result.|
|`-D, --delete_unused_deps`|Will delete from the working copy any dependencies that have been removed since the last sync. Mimics `gclient sync -D`.|

Run `npm run sync brave_core_ref` to checkout the specified _brave-core_ ref and update all dependent repos including chromium if needed.

## Scenarios

#### Create a new branch:
```bash
brave-browser&gt; cd src/brave
brave-browser/src/brave&gt; git checkout -b branch_name
```

#### Checkout an existing branch or tag:
```bash
brave-browser/src/brave&gt; git fetch origin
brave-browser/src/brave&gt; git checkout [-b] branch_name
brave-browser/src/brave&gt; npm run sync
...Updating 2 patches...
...Updating child dependencies...
...Running hooks...
```

#### Update the current branch to the latest remote:
```bash
brave-browser/src/brave&gt; git pull
brave-browser/src/brave&gt; npm run sync
...Updating 2 patches...
...Updating child dependencies...
...Running hooks...
```

#### Reset to latest brave-browser master and brave-core master (via `init`, will always result in a longer build and will remove any pending changes in your brave-core working directory):
```bash
brave-browser&gt; git checkout master
brave-browser&gt; git pull
brave-browser&gt; npm run sync -- --init
```

#### When you know that DEPS didn&#039;t change, but .patch files did (quickest attempt to perform a mini-sync before a build):
```bash
brave-browser/src/brave&gt; git checkout featureB
brave-browser/src/brave&gt; git pull
brave-browser/src/brave&gt; cd ../..
brave-browser&gt; npm run apply_patches
...Applying 2 patches...
```

# Enabling third-party APIs:

1. **Google Safe Browsing**: Get an API key with SafeBrowsing API enabled from https://console.developers.google.com/. Update the `GOOGLE_API_KEY` environment variable with your key as per https://www.chromium.org/developers/how-tos/api-keys to enable Google SafeBrowsing.

# Development

- [Security rules from Chromium](https://chromium.googlesource.com/chromium/src/+/refs/heads/main/docs/security/rules.md)
- [IPC review guidelines](https://chromium.googlesource.com/chromium/src/+/HEAD/docs/security/ipc-reviews.md) (in particular [this reference](https://docs.google.com/document/d/1Kw4aTuISF7csHnjOpDJGc7JYIjlvOAKRprCTBVWw_E4/edit#heading=h.84bpc1e9z1bg))
- [Brave&#039;s internal security guidelines](https://github.com/brave/internal/wiki/Pull-request-security-audit-checklist) (for employees only)
- [Rust usage](https://github.com/brave/brave-core/blob/master/docs/rust.md)

# Troubleshooting

See [Troubleshooting](https://github.com/brave/brave-browser/wiki/Troubleshooting) for solutions to common problems.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WhiskeySockets/Baileys]]></title>
            <link>https://github.com/WhiskeySockets/Baileys</link>
            <guid>https://github.com/WhiskeySockets/Baileys</guid>
            <pubDate>Tue, 27 May 2025 00:04:35 GMT</pubDate>
            <description><![CDATA[Lightweight full-featured typescript/javascript WhatsApp Web API]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WhiskeySockets/Baileys">WhiskeySockets/Baileys</a></h1>
            <p>Lightweight full-featured typescript/javascript WhatsApp Web API</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,444</p>
            <p>Forks: 1,862</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>&lt;h1&gt;&lt;img alt=&quot;Baileys logo&quot; src=&quot;https://raw.githubusercontent.com/WhiskeySockets/Baileys/refs/heads/master/Media/logo.png&quot; height=&quot;75&quot;/&gt;&lt;/h1&gt;

![NPM Downloads](https://img.shields.io/npm/dw/%40whiskeysockets%2Fbaileys?label=npm&amp;color=%23CB3837)
![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/whiskeysockets/baileys)
![Discord](https://img.shields.io/discord/725839806084546610?label=discord&amp;color=%235865F2)

Baileys is a WebSockets-based TypeScript library for interacting with the WhatsApp Web API.

# Usage
A new guide has been posted at https://baileys.wiki.

# Sponsor
If you&#039;d like to financially support this project, you can do so by supporting the current maintainer [here](https://purpshell.dev/sponsor).

# Disclaimer
This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates.
The official WhatsApp website can be found at whatsapp.com. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners.

The maintainers of Baileys do not in any way condone the use of this application in practices that violate the Terms of Service of WhatsApp. The maintainers of this application call upon the personal responsibility of its users to use this application in a fair way, as it is intended to be used.
Use at your own discretion. Do not spam people with this. We discourage any stalkerware, bulk or automated messaging usage.

# License
Copyright (c) 2025 Rajeh Taher/WhiskeySockets

Licensed under the MIT License:
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &quot;Software&quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

Thus, the maintainers of the project can&#039;t be held liable for any potential misuse of this project.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>