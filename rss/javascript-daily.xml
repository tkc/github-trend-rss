<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Wed, 04 Jun 2025 00:05:06 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[plankanban/planka]]></title>
            <link>https://github.com/plankanban/planka</link>
            <guid>https://github.com/plankanban/planka</guid>
            <pubDate>Wed, 04 Jun 2025 00:05:06 GMT</pubDate>
            <description><![CDATA[PLANKA is the kanban-style project mastering tool for everyone.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/plankanban/planka">plankanban/planka</a></h1>
            <p>PLANKA is the kanban-style project mastering tool for everyone.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 9,498</p>
            <p>Forks: 947</p>
            <p>Stars today: 36 stars today</p>
            <h2>README</h2><pre># PLANKA

**Project mastering driven by fun**

![Version](https://img.shields.io/github/package-json/v/plankanban/planka?style=flat-square) [![Docker Pulls](https://img.shields.io/badge/docker_pulls-6M%2B-%23066da5?style=flat-square&amp;color=red)](https://github.com/plankanban/planka/pkgs/container/planka) [![Contributors](https://img.shields.io/github/contributors/plankanban/planka?style=flat-square&amp;color=blue)](https://github.com/plankanban/planka/graphs/contributors) [![Chat](https://img.shields.io/discord/1041440072953765979?style=flat-square&amp;logo=discord&amp;logoColor=white)](https://discord.gg/WqqYNd7Jvt)

![Demo](https://raw.githubusercontent.com/plankanban/planka/master/assets/demo.gif)

[**Client demo**](https://plankanban.github.io/planka) (without server features).

&gt; ⚠️ The demo GIF and client demo are based on **v1** and will be updated soon.

## Key Features

- **Collaborative Kanban Boards**: Create projects, boards, lists, cards, and manage tasks with an intuitive drag-and-drop interface
- **Real-Time Updates**: Instant syncing across all users, no refresh needed
- **Rich Markdown Support**: Write beautifully formatted card descriptions with a powerful markdown editor
- **Flexible Notifications**: Get alerts through 100+ providers, fully customizable to your workflow
- **Seamless Authentication**: Single sign-on with OpenID Connect integration
- **Multilingual &amp; Easy to Translate**: Full internationalization support for a global audience

## How to Deploy

PLANKA is easy to install using multiple methods - learn more in the [installation guide](https://docs.planka.cloud/docs/welcome/).

For configuration and environment settings, see the [configuration section](https://docs.planka.cloud/docs/category/configuration/).

## Contact

Interested in a hosted version of PLANKA? Email us at [github@planka.group](mailto:github@planka.group).

For any security issues, please do not create a public issue on GitHub - instead, report it privately by emailing [security@planka.group](mailto:security@planka.group).

**Note:** We do NOT offer any public support via email, please use GitHub.

**Join our community:** Get help, share ideas, or contribute on our [Discord server](https://discord.gg/WqqYNd7Jvt).

## License

PLANKA is [fair-code](https://faircode.io) distributed under the [Fair Use License](https://github.com/plankanban/planka/blob/master/LICENSES/PLANKA%20Community%20License%20EN.md) and [PLANKA Pro/Enterprise License](https://github.com/plankanban/planka/blob/master/LICENSES/PLANKA%20Commercial%20License%20EN.md).

- **Source Available**: The source code is always visible
- **Self-Hostable**: Deploy and host it anywhere
- **Extensible**: Customize with your own functionality
- **Enterprise Licenses**: Available for additional features and support

For more details, check the [License Guide](https://github.com/plankanban/planka/blob/master/LICENSES/PLANKA%20License%20Guide%20EN.md).

## Contributing

Found a bug or have a feature request? Check out our [Contributing Guide](https://github.com/plankanban/planka/blob/master/CONTRIBUTING.md) to get started.

For setting up the project locally, see the [development section](https://docs.planka.cloud/docs/category/development/).

**Thanks to all our contributors!**

[![Contributors](https://contrib.rocks/image?repo=plankanban/planka)](https://github.com/plankanban/planka/graphs/contributors)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WordPress/gutenberg]]></title>
            <link>https://github.com/WordPress/gutenberg</link>
            <guid>https://github.com/WordPress/gutenberg</guid>
            <pubDate>Wed, 04 Jun 2025 00:05:05 GMT</pubDate>
            <description><![CDATA[The Block Editor project for WordPress and beyond. Plugin is available from the official repository.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WordPress/gutenberg">WordPress/gutenberg</a></h1>
            <p>The Block Editor project for WordPress and beyond. Plugin is available from the official repository.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 11,194</p>
            <p>Forks: 4,417</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre># Gutenberg

[![End-to-End Tests](https://github.com/WordPress/gutenberg/workflows/End-to-End%20Tests/badge.svg)](https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22End-to-End+Tests%22+branch%3Atrunk)
[![Static Analysis (Linting, License, Type checks...)](&lt;https://github.com/WordPress/gutenberg/workflows/Static%20Analysis%20(Linting,%20License,%20Type%20checks...)/badge.svg&gt;)](https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22Static+Analysis+%28Linting%2C+License%2C+Type+checks...%29%22+branch%3Atrunk)
[![Unit Tests](https://github.com/WordPress/gutenberg/workflows/Unit%20Tests/badge.svg)](https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22Unit+Tests%22+branch%3Atrunk)
[![Create Block](https://github.com/WordPress/gutenberg/workflows/Create%20Block/badge.svg)](https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22Create+Block%22+branch%3Atrunk)
[![React Native E2E Tests (iOS)](&lt;https://github.com/WordPress/gutenberg/workflows/React%20Native%20E2E%20Tests%20(iOS)/badge.svg&gt;)](https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22React+Native+E2E+Tests+%28iOS%29%22+branch%3Atrunk)
[![React Native E2E Tests (Android)](&lt;https://github.com/WordPress/gutenberg/workflows/React%20Native%20E2E%20Tests%20(Android)/badge.svg&gt;)](https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22React+Native+E2E+Tests+%28Android%29%22+branch%3Atrunk)

&lt;a href=&quot;https://wordpress.github.io/gutenberg/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/storybooks/brand/master/badge/badge-storybook.svg&quot; alt=&quot;Storybook Badge&quot; /&gt;&lt;/a&gt;

[![lerna](https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg)](https://lerna.js.org)

![Screenshot of the Gutenberg Editor, editing a post in WordPress](https://user-images.githubusercontent.com/1204802/100067796-fc3e8700-2e36-11eb-993b-6b80b4310b87.png)

Welcome to the development hub for the WordPress Gutenberg project!

&quot;Gutenberg&quot; is a codename for a whole new paradigm in WordPress site building and publishing, that aims to revolutionize the entire publishing experience as much as Gutenberg did the printed word. Right now, the project is in the second phase of a four-phase process that will touch every piece of WordPress -- Editing, Customization, **Collaboration** (which includes [Real-time collaboration](https://make.wordpress.org/core/2023/07/03/real-time-collaboration/), [Asynchronous collaboration](https://make.wordpress.org/core/2023/07/04/workflows/), [Publishing flows](https://make.wordpress.org/core/2023/07/04/workflows/), [Post revisions interface](https://make.wordpress.org/core/2023/07/05/revisions/), [Admin design](https://make.wordpress.org/core/2023/07/12/admin-design/), [Library](https://make.wordpress.org/core/2023/07/10/block-library/)), and Multilingual -- and is focused on a new editing experience, the block editor.

The block editor introduces a modular approach to pages and posts: each piece of content in the editor, from a paragraph to an image gallery to a headline, is its own block. And just like physical blocks, WordPress blocks can be added, arranged, and rearranged, allowing WordPress users to create media-rich pages in a visually intuitive way -- and without work-arounds like shortcodes or custom HTML.

The block editor first became available in December 2018, and we&#039;re still hard at work refining the experience, creating more and better blocks, and laying the groundwork for the next three phases of work. The Gutenberg plugin gives you the latest version of the block editor, so you can join us in testing bleeding-edge features, start playing with blocks, and maybe get inspired to build your own.

Check out the [Keeping up with Gutenberg Index](https://make.wordpress.org/core/handbook/references/keeping-up-with-gutenberg-index/)

## Getting Started

Get hands on: check out the [block editor live demo](https://wordpress.org/gutenberg/) to play with a test instance of the editor.

### Using Gutenberg

-   **Download:** To use the latest release of the Gutenberg plugin on your WordPress site: install from the plugins page in wp-admin, or [download from the WordPress.org plugins repository](https://wordpress.org/plugins/gutenberg/).

-   **User Documentation:** See the [WordPress Editor documentation](https://wordpress.org/documentation/article/wordpress-block-editor/) for detailed docs on using the editor as an author creating posts and pages.

-   **User Support:** If you have run into an issue, you should check the [Support Forums first](https://wordpress.org/support/forums/). The forums are a great place to get help. If you have a bug to report, please [submit it to the Gutenberg repository](https://github.com/wordpress/gutenberg/issues). Please search prior to creating a new bug to confirm it&#039;s not a duplicate.

### Developing for Gutenberg

Extending and customizing is at the heart of the WordPress platform, this is no different for the Gutenberg project. The editor and future products can be extended by third-party developers using plugins.

Review the [Quick Start Guide](https://developer.wordpress.org/block-editor/getting-started/quick-start-guide/) for the fastest way to get started extending the block editor. See the [Block Editor Handbook](https://developer.wordpress.org/block-editor/) for extensive tutorials, documentation, and API references. Also, check the [WordPress Developer Blog](https://developer.wordpress.org/blog/) for great articles about block development, among other topics.

### Contribute to Gutenberg

Gutenberg is an open-source project and welcomes all contributors from code to design, and from documentation to triage. The project is built by many contributors and volunteers, and we&#039;d love your help building it.

See the [Contributors Handbook](https://developer.wordpress.org/block-editor/contributors/) for all the details on how you can contribute.

To get up and running quickly with **code contribution** see [Getting Started With Code Contribution](/docs/contributors/code/getting-started-with-code-contribution.md). Also check out the other resources available on the [Code Contributions](/docs/contributors/code/README.md) page.

In whichever way you wish to contribute please be sure to read the [Contributing Guidelines](https://github.com/WordPress/gutenberg/blob/HEAD/CONTRIBUTING.md) first.

As with all WordPress projects, we want to ensure a welcoming environment for everyone. With that in mind, all contributors are expected to follow our [Code of Conduct](https://make.wordpress.org/handbook/community-code-of-conduct/).

## Get Involved

You can join us in the `#core-editor` channel in Slack, see the [WordPress Slack page](https://make.wordpress.org/chat/) for signup information; it is free to join.

## License

WordPress is free software, and is released under the terms of the GNU General Public License version 2 or (at your option) any later version. See [LICENSE.md](LICENSE.md) for complete license.

&lt;br/&gt;&lt;br/&gt;&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://s.w.org/style/images/codeispoetry.png?1&quot; alt=&quot;Code is Poetry.&quot; /&gt;&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WebKit/WebKit]]></title>
            <link>https://github.com/WebKit/WebKit</link>
            <guid>https://github.com/WebKit/WebKit</guid>
            <pubDate>Wed, 04 Jun 2025 00:05:04 GMT</pubDate>
            <description><![CDATA[Home of the WebKit project, the browser engine used by Safari, Mail, App Store and many other applications on macOS, iOS and Linux.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WebKit/WebKit">WebKit/WebKit</a></h1>
            <p>Home of the WebKit project, the browser engine used by Safari, Mail, App Store and many other applications on macOS, iOS and Linux.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,693</p>
            <p>Forks: 1,565</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[PipedreamHQ/pipedream]]></title>
            <link>https://github.com/PipedreamHQ/pipedream</link>
            <guid>https://github.com/PipedreamHQ/pipedream</guid>
            <pubDate>Wed, 04 Jun 2025 00:05:03 GMT</pubDate>
            <description><![CDATA[Connect APIs, remarkably fast. Free for developers.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/PipedreamHQ/pipedream">PipedreamHQ/pipedream</a></h1>
            <p>Connect APIs, remarkably fast. Free for developers.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 9,912</p>
            <p>Forks: 5,342</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre>![pipedream](https://i.ibb.co/LPhXtH1/logo.png)

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://pipedream.com/community&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/discourse-forum-brightgreen.svg?style=flat-square&amp;link=https%3A%2F%2Fpipedream.com%2Fcommunity)](https://pipedream.com/community&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://pipedream.com/support&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Join%20us%20on%20Slack-green?logo=slack&amp;logoColor=34d28B&amp;labelColor=150d11&amp;color=34d28B&amp;logoWidth=18&amp;link=https%3A%2F%2Fpipedream.com%2Fsupport&amp;link=https%3A%2F%2Fpipedream.com%2Fsupport)](https://pipedream.com/support&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://twitter.com/intent/follow?original_referer=https%3A%2F%2Fpublish.twitter.com%2F%3FbuttonType%3DFollowButton%26query%3Dhttps%253A%252F%252Ftwitter.com%252Fpipedream%26widget%3DButton&amp;ref_src=twsrc%5Etfw&amp;region=follow_link&amp;screen_name=pipedream&amp;tw_p=followbutton&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/pipedream?label=Follow%20%40pipedream&amp;style=social&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://wellfound.com/company/pipedreamhq/jobs&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%91%8B%F0%9F%8F%BC%20We&#039;re%20hiring!-Join%20us-brightgreen&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

Pipedream is an integration platform for developers.

Pipedream provides a free, hosted platform for connecting apps and developing event-driven automations. The platform has over 1,000 fully-integrated applications, so you can use pre-built components to quickly send messages to Slack, add a new row to Google Sheets, and more. You can also run any Node.js, Python, Golang, or Bash code when you need custom logic. Pipedream has demonstrated SOC 2 compliance and can provide a SOC 2 Type 2 report upon request (please email support@pipedream.com).

&lt;p align=&quot;center&quot;&gt;
  &lt;br /&gt;
  &lt;img src=&quot;./images/hero2.png&quot; width=&quot;800px&quot; alt=&quot;HTTP trigger + step selection menu&quot; &gt;
  &lt;br /&gt;
&lt;/p&gt;

This repo contains:

- [The code for all pre-built integration components](https://github.com/PipedreamHQ/pipedream/tree/master/components)
- [The product roadmap](https://github.com/PipedreamHQ/pipedream/issues)
- [The Pipedream docs](https://github.com/PipedreamHQ/pipedream/tree/master/docs)
- And other source code related to Pipedream.

This `README` explains the key features of the platform and how to get started.

To get support, please visit [https://pipedream.com/support](https://pipedream.com/support).

## Key Features

- [Workflows](#workflows) - Workflows run automations. Workflows are sequences of steps - pre-built actions or custom [Node.js](https://pipedream.com/docs/code/nodejs/), [Python](https://pipedream.com/docs/code/python/), [Golang](https://pipedream.com/docs/code/go/), or [Bash](https://pipedream.com/docs/code/bash/) code - triggered by an event (HTTP request, timer, when a new row is added to a Google Sheets, and more).
- [Event Sources](#event-sources) - Sources trigger workflows. They emit events from services like GitHub, Slack, Airtable, RSS and [more](https://pipedream.com/apps). When you want to run a workflow when an event happens in any third-party app, you&#039;re using an event source.
- [Actions](#actions) - Actions are pre-built code steps that you can use in a workflow to perform common operations across Pipedream&#039;s 1,000+ API integrations. For example, you can use actions to send email, add a row to a Google Sheet, [and more](https://pipedream.com/apps).
- [Custom code](#code) - Most integrations require custom logic. Code is often the best way to express that logic, so Pipedream allows you to run any [Node.js](https://pipedream.com/docs/code/nodejs/), [Python](https://pipedream.com/docs/code/python/), [Golang](https://pipedream.com/docs/code/go/), or [Bash](https://pipedream.com/docs/code/bash/) code. You can import any package from the languages&#039; package managers, connect to any Pipedream connected app, and more. Pipedream is &quot;low-code&quot; in the best way: you can use pre-built components when you&#039;re performing common actions, but you can write custom code when you need to.
- [Destinations](#destinations) - Deliver events asynchronously to common destinations like Amazon S3, Snowflake, HTTP and email.
- [Free](#pricing) - No fees for individual developers (see [limits](https://docs.pipedream.com/limits/))

## Demo

Click the image below to watch a brief demo on YouTube.

&lt;p align=&quot;center&quot;&gt;
  &lt;br /&gt;
  &lt;a href=&quot;https://bit.ly/3ytGgyR&quot;&gt;
    &lt;img src=&quot;./images/demo.png&quot; width=&quot;800px&quot; alt=&quot;Pipedream demo static image&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

### Workflows

Workflows are sequences of linear [steps](https://pipedream.com/docs/workflows/steps) triggered by an event (like an HTTP request, or when a new row is added to a Google sheet). You can quickly develop complex automations using workflows and connect to any of our 1,000+ integrated apps.

[See our workflow quickstart](https://pipedream.com/docs/quickstart/) to get started.

### Event Sources

[Event Sources](https://pipedream.com/docs/sources/) watch for new data from services like GitHub, Slack, Airtable, RSS and [more](https://pipedream.com/apps). When a source finds a new event, it emits it, triggering any linked workflows.

You can also consume events emitted by sources using [Pipedream&#039;s REST API](https://pipedream.com/docs/api/rest/) or a private, real-time [SSE stream](https://pipedream.com/docs/api/sse/).

When a pre-built source doesn&#039;t exist for your use case, [you can build your own](https://pipedream.com/docs/components/quickstart/nodejs/sources/). Here is the simplest event source: it exposes an HTTP endpoint you can send any request to, and prints the contents of the request when invoked:

```javascript
export default {
  name: &quot;http&quot;,
  version: &quot;0.0.1&quot;,
  props: {
    http: &quot;$.interface.http&quot;,
  },
  run(event) {
    console.log(event); // event contains the method, payload, etc.
  },
};
```

&lt;a href=&quot;https://pipedream.com/sources/new?app=http&quot;&gt;&lt;img src=&quot;https://i.ibb.co/m0bBsSL/deploy-clean.png&quot; height=&quot;35&quot;&gt;&lt;/a&gt;

You can find the code for all pre-built sources in [the `components` directory](https://github.com/PipedreamHQ/pipedream/tree/master/components). If you find a bug or want to contribute a feature, [see our contribution guide](https://pipedream.com/docs/components/guidelines/#process).

### Actions

[Actions](https://pipedream.com/docs/components/actions/) are pre-built code steps that you can use in a workflow to perform common operations across Pipedream&#039;s 500+ API integrations. For example, you can use actions to send email, add a row to a Google Sheet, [and more](https://pipedream.com/apps).

You can [create your own actions](https://pipedream.com/docs/components/quickstart/nodejs/actions/), which you can re-use across workflows. You can also [publish actions to the entire Pipedream community](https://pipedream.com/docs/components/guidelines/), making them available for anyone to use.

Here&#039;s an action that accepts a `name` as input and prints it to the workflow&#039;s logs:

```javascript
export default {
  name: &quot;Action Demo&quot;,
  description: &quot;This is a demo action&quot;,
  key: &quot;action_demo&quot;,
  version: &quot;0.0.1&quot;,
  type: &quot;action&quot;,
  props: {
    name: {
      type: &quot;string&quot;,
      label: &quot;Name&quot;,
    },
  },
  async run() {
    return `hello ${this.name}!`;
  },
};
```

You can find the code for all pre-built actions in [the `components` directory](https://github.com/PipedreamHQ/pipedream/tree/master/components). If you find a bug or want to contribute a feature, [see our contribution guide](https://pipedream.com/docs/components/guidelines/#process).

### Custom code

Most integrations require custom logic. Code is often the best way to express that logic, so Pipedream allows you to run custom code in a workflow using:

&lt;table align=&quot;center&quot;&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://pipedream.com/docs/code/nodejs/&quot;&gt;
        &lt;img alt=&quot;Node.js&quot; src=&quot;https://res.cloudinary.com/pipedreamin/image/upload/v1646761316/docs/icons/icons8-nodejs_aax6wn.svg&quot; width=&quot;100&quot;&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://pipedream.com/docs/code/python/&quot;&gt;
        &lt;img alt=&quot;Python&quot; src=&quot;https://res.cloudinary.com/pipedreamin/image/upload/v1647356607/docs/icons/python-logo-generic_k3o5w2.svg&quot; width=&quot;100&quot;&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;/tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://pipedream.com/docs/code/go/&quot;&gt;
        &lt;img alt=&quot;Go&quot; src=&quot;https://res.cloudinary.com/pipedreamin/image/upload/v1646763751/docs/icons/Go-Logo_Blue_zhkchv.svg&quot; width=&quot;100&quot;&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://pipedream.com/docs/code/bash/&quot;&gt;
        &lt;img alt=&quot;Bash&quot; src=&quot;https://res.cloudinary.com/pipedreamin/image/upload/v1647356698/docs/icons/full_colored_dark_1_-svg_vyfnv7.svg&quot; width=&quot;100&quot;&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

You can import any package from the languages&#039; package managers by declaring the imports directly in code. Pipedream will parse and download the necessary dependencies.

```javascript
// Node.js
import axios from &quot;axios&quot;;
```

```python
# Python
import pandas as pd
```

```golang
// Go
import (
    &quot;fmt&quot;
    pd &quot;github.com/PipedreamHQ/pipedream-go&quot;
)
```

You can also [connect to any Pipedream connected app in custom code steps](https://pipedream.com/docs/code/nodejs/auth/). For example, you can connect your Slack account and send a message to a channel:

```javascript
import { WebClient } from &quot;@slack/web-api&quot;;

export default defineComponent({
  props: {
    // This creates a connection called &quot;slack&quot; that connects a Slack account.
    slack: {
      type: &quot;app&quot;,
      app: &quot;slack&quot;,
    },
  },
  async run({ steps, $ }) {
    const web = new WebClient(this.slack.$auth.oauth_access_token);

    return await web.chat.postMessage({
      text: &quot;Hello, world!&quot;,
      channel: &quot;#general&quot;,
    });
  },
});
```

### Destinations

[Destinations](https://pipedream.com/docs/destinations/), like actions, abstract the connection, batching, and delivery logic required to send events to services like Amazon S3, or targets like HTTP and email.

For example, sending data to an Amazon S3 bucket is as simple as calling `$send.s3()`:

```javascript
$send.s3({
  bucket: &quot;your-bucket-here&quot;,
  prefix: &quot;your-prefix/&quot;,
  payload: event.body,
});
```

Pipedream supports the following destinations:

- [Amazon S3](https://docs.pipedream.com/destinations/s3/)
- [Snowflake](https://docs.pipedream.com/destinations/snowflake/)
- [HTTP](https://docs.pipedream.com/destinations/http/)
- [Email](https://docs.pipedream.com/destinations/email/)
- [SSE](https://docs.pipedream.com/destinations/sse/)

## Contributors

Thank you to everyone who has contributed to the Pipedream codebase. We appreciate you!

&lt;a href=&quot;https://github.com/PipedreamHQ/pipedream/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=PipedreamHQ/pipedream&quot; /&gt;
&lt;/a&gt;

## Pricing

Pipedream has a [generous free tier](https://pipedream.com/docs/pricing/#developer-tier). You can run sources and workflows for free within the limits of the free tier. If you hit these limits, you can upgrade to one of our [paid tiers](https://pipedream.com/docs/pricing/).

## Limits

The Pipedream platform imposes some runtime limits on sources and workflows. [Read more about those in our docs](https://pipedream.com/docs/limits/).

## Found a Bug? Have a Feature to suggest?

Before adding an issue, please search the [existing issues](https://github.com/PipedreamHQ/pipedream/issues) or [reach out to our team](https://pipedream.com/support/) to see if a similar request already exists.

If an issue exists, please [add a reaction](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-conversations-on-github) or add a comment detailing your specific use case.

If an issue _doesn&#039;t_ yet exist and you need to create one, please [use the issue templates](https://github.com/PipedreamHQ/pipedream/issues/new/choose).

## Security

You can read about our platform security and privacy [here](https://pipedream.com/docs/privacy-and-security/).

If you&#039;d like to report a suspected vulnerability or security issue, or have any questions about the security of the product, please contact our security team at **security@pipedream.com**.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[advplyr/audiobookshelf]]></title>
            <link>https://github.com/advplyr/audiobookshelf</link>
            <guid>https://github.com/advplyr/audiobookshelf</guid>
            <pubDate>Wed, 04 Jun 2025 00:05:02 GMT</pubDate>
            <description><![CDATA[Self-hosted audiobook and podcast server]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/advplyr/audiobookshelf">advplyr/audiobookshelf</a></h1>
            <p>Self-hosted audiobook and podcast server</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,956</p>
            <p>Forks: 606</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[open-webui/open-webui]]></title>
            <link>https://github.com/open-webui/open-webui</link>
            <guid>https://github.com/open-webui/open-webui</guid>
            <pubDate>Wed, 04 Jun 2025 00:05:01 GMT</pubDate>
            <description><![CDATA[User-friendly AI Interface (Supports Ollama, OpenAI API, ...)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/open-webui/open-webui">open-webui/open-webui</a></h1>
            <p>User-friendly AI Interface (Supports Ollama, OpenAI API, ...)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 97,484</p>
            <p>Forks: 12,691</p>
            <p>Stars today: 198 stars today</p>
            <h2>README</h2><pre># Open WebUI 👋

![GitHub stars](https://img.shields.io/github/stars/open-webui/open-webui?style=social)
![GitHub forks](https://img.shields.io/github/forks/open-webui/open-webui?style=social)
![GitHub watchers](https://img.shields.io/github/watchers/open-webui/open-webui?style=social)
![GitHub repo size](https://img.shields.io/github/repo-size/open-webui/open-webui)
![GitHub language count](https://img.shields.io/github/languages/count/open-webui/open-webui)
![GitHub top language](https://img.shields.io/github/languages/top/open-webui/open-webui)
![GitHub last commit](https://img.shields.io/github/last-commit/open-webui/open-webui?color=red)
[![Discord](https://img.shields.io/badge/Discord-Open_WebUI-blue?logo=discord&amp;logoColor=white)](https://discord.gg/5rJgQTnV4s)
[![](https://img.shields.io/static/v1?label=Sponsor&amp;message=%E2%9D%A4&amp;logo=GitHub&amp;color=%23fe8e86)](https://github.com/sponsors/tjbck)

**Open WebUI is an [extensible](https://docs.openwebui.com/features/plugin/), feature-rich, and user-friendly self-hosted AI platform designed to operate entirely offline.** It supports various LLM runners like **Ollama** and **OpenAI-compatible APIs**, with **built-in inference engine** for RAG, making it a **powerful AI deployment solution**.

![Open WebUI Demo](./demo.gif)

&gt; [!TIP]  
&gt; **Looking for an [Enterprise Plan](https://docs.openwebui.com/enterprise)?** – **[Speak with Our Sales Team Today!](mailto:sales@openwebui.com)**
&gt;
&gt; Get **enhanced capabilities**, including **custom theming and branding**, **Service Level Agreement (SLA) support**, **Long-Term Support (LTS) versions**, and **more!**

For more information, be sure to check out our [Open WebUI Documentation](https://docs.openwebui.com/).

## Key Features of Open WebUI ⭐

- 🚀 **Effortless Setup**: Install seamlessly using Docker or Kubernetes (kubectl, kustomize or helm) for a hassle-free experience with support for both `:ollama` and `:cuda` tagged images.

- 🤝 **Ollama/OpenAI API Integration**: Effortlessly integrate OpenAI-compatible APIs for versatile conversations alongside Ollama models. Customize the OpenAI API URL to link with **LMStudio, GroqCloud, Mistral, OpenRouter, and more**.

- 🛡️ **Granular Permissions and User Groups**: By allowing administrators to create detailed user roles and permissions, we ensure a secure user environment. This granularity not only enhances security but also allows for customized user experiences, fostering a sense of ownership and responsibility amongst users.

- 📱 **Responsive Design**: Enjoy a seamless experience across Desktop PC, Laptop, and Mobile devices.

- 📱 **Progressive Web App (PWA) for Mobile**: Enjoy a native app-like experience on your mobile device with our PWA, providing offline access on localhost and a seamless user interface.

- ✒️🔢 **Full Markdown and LaTeX Support**: Elevate your LLM experience with comprehensive Markdown and LaTeX capabilities for enriched interaction.

- 🎤📹 **Hands-Free Voice/Video Call**: Experience seamless communication with integrated hands-free voice and video call features, allowing for a more dynamic and interactive chat environment.

- 🛠️ **Model Builder**: Easily create Ollama models via the Web UI. Create and add custom characters/agents, customize chat elements, and import models effortlessly through [Open WebUI Community](https://openwebui.com/) integration.

- 🐍 **Native Python Function Calling Tool**: Enhance your LLMs with built-in code editor support in the tools workspace. Bring Your Own Function (BYOF) by simply adding your pure Python functions, enabling seamless integration with LLMs.

- 📚 **Local RAG Integration**: Dive into the future of chat interactions with groundbreaking Retrieval Augmented Generation (RAG) support. This feature seamlessly integrates document interactions into your chat experience. You can load documents directly into the chat or add files to your document library, effortlessly accessing them using the `#` command before a query.

- 🔍 **Web Search for RAG**: Perform web searches using providers like `SearXNG`, `Google PSE`, `Brave Search`, `serpstack`, `serper`, `Serply`, `DuckDuckGo`, `TavilySearch`, `SearchApi` and `Bing` and inject the results directly into your chat experience.

- 🌐 **Web Browsing Capability**: Seamlessly integrate websites into your chat experience using the `#` command followed by a URL. This feature allows you to incorporate web content directly into your conversations, enhancing the richness and depth of your interactions.

- 🎨 **Image Generation Integration**: Seamlessly incorporate image generation capabilities using options such as AUTOMATIC1111 API or ComfyUI (local), and OpenAI&#039;s DALL-E (external), enriching your chat experience with dynamic visual content.

- ⚙️ **Many Models Conversations**: Effortlessly engage with various models simultaneously, harnessing their unique strengths for optimal responses. Enhance your experience by leveraging a diverse set of models in parallel.

- 🔐 **Role-Based Access Control (RBAC)**: Ensure secure access with restricted permissions; only authorized individuals can access your Ollama, and exclusive model creation/pulling rights are reserved for administrators.

- 🌐🌍 **Multilingual Support**: Experience Open WebUI in your preferred language with our internationalization (i18n) support. Join us in expanding our supported languages! We&#039;re actively seeking contributors!

- 🧩 **Pipelines, Open WebUI Plugin Support**: Seamlessly integrate custom logic and Python libraries into Open WebUI using [Pipelines Plugin Framework](https://github.com/open-webui/pipelines). Launch your Pipelines instance, set the OpenAI URL to the Pipelines URL, and explore endless possibilities. [Examples](https://github.com/open-webui/pipelines/tree/main/examples) include **Function Calling**, User **Rate Limiting** to control access, **Usage Monitoring** with tools like Langfuse, **Live Translation with LibreTranslate** for multilingual support, **Toxic Message Filtering** and much more.

- 🌟 **Continuous Updates**: We are committed to improving Open WebUI with regular updates, fixes, and new features.

Want to learn more about Open WebUI&#039;s features? Check out our [Open WebUI documentation](https://docs.openwebui.com/features) for a comprehensive overview!

## Sponsors 🙌

#### Emerald

&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://n8n.io/&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/n8n.png&quot; alt=&quot;n8n&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      N8N • Does your interface have a backend yet?&lt;br&gt;Try &lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://warp.dev/open-webui&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/warp.png&quot; alt=&quot;n8n&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://warp.dev/open-webui&quot;&gt;Warp&lt;/a&gt; • The intelligent terminal for developers
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

---

We are incredibly grateful for the generous support of our sponsors. Their contributions help us to maintain and improve our project, ensuring we can continue to deliver quality work to our community. Thank you!

## How to Install 🚀

### Installation via Python pip 🐍

Open WebUI can be installed using pip, the Python package installer. Before proceeding, ensure you&#039;re using **Python 3.11** to avoid compatibility issues.

1. **Install Open WebUI**:
   Open your terminal and run the following command to install Open WebUI:

   ```bash
   pip install open-webui
   ```

2. **Running Open WebUI**:
   After installation, you can start Open WebUI by executing:

   ```bash
   open-webui serve
   ```

This will start the Open WebUI server, which you can access at [http://localhost:8080](http://localhost:8080)

### Quick Start with Docker 🐳

&gt; [!NOTE]  
&gt; Please note that for certain Docker environments, additional configurations might be needed. If you encounter any connection issues, our detailed guide on [Open WebUI Documentation](https://docs.openwebui.com/) is ready to assist you.

&gt; [!WARNING]
&gt; When using Docker to install Open WebUI, make sure to include the `-v open-webui:/app/backend/data` in your Docker command. This step is crucial as it ensures your database is properly mounted and prevents any loss of data.

&gt; [!TIP]  
&gt; If you wish to utilize Open WebUI with Ollama included or CUDA acceleration, we recommend utilizing our official images tagged with either `:cuda` or `:ollama`. To enable CUDA, you must install the [Nvidia CUDA container toolkit](https://docs.nvidia.com/dgx/nvidia-container-runtime-upgrade/) on your Linux/WSL system.

### Installation with Default Configuration

- **If Ollama is on your computer**, use this command:

  ```bash
  docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **If Ollama is on a Different Server**, use this command:

  To connect to Ollama on another server, change the `OLLAMA_BASE_URL` to the server&#039;s URL:

  ```bash
  docker run -d -p 3000:8080 -e OLLAMA_BASE_URL=https://example.com -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **To run Open WebUI with Nvidia GPU support**, use this command:

  ```bash
  docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda
  ```

### Installation for OpenAI API Usage Only

- **If you&#039;re only using OpenAI API**, use this command:

  ```bash
  docker run -d -p 3000:8080 -e OPENAI_API_KEY=your_secret_key -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

### Installing Open WebUI with Bundled Ollama Support

This installation method uses a single container image that bundles Open WebUI with Ollama, allowing for a streamlined setup via a single command. Choose the appropriate command based on your hardware setup:

- **With GPU Support**:
  Utilize GPU resources by running the following command:

  ```bash
  docker run -d -p 3000:8080 --gpus=all -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

- **For CPU Only**:
  If you&#039;re not using a GPU, use this command instead:

  ```bash
  docker run -d -p 3000:8080 -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

Both commands facilitate a built-in, hassle-free installation of both Open WebUI and Ollama, ensuring that you can get everything up and running swiftly.

After installation, you can access Open WebUI at [http://localhost:3000](http://localhost:3000). Enjoy! 😄

### Other Installation Methods

We offer various installation alternatives, including non-Docker native installation methods, Docker Compose, Kustomize, and Helm. Visit our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/) or join our [Discord community](https://discord.gg/5rJgQTnV4s) for comprehensive guidance.

### Troubleshooting

Encountering connection issues? Our [Open WebUI Documentation](https://docs.openwebui.com/troubleshooting/) has got you covered. For further assistance and to join our vibrant community, visit the [Open WebUI Discord](https://discord.gg/5rJgQTnV4s).

#### Open WebUI: Server Connection Error

If you&#039;re experiencing connection issues, it’s often due to the WebUI docker container not being able to reach the Ollama server at 127.0.0.1:11434 (host.docker.internal:11434) inside the container . Use the `--network=host` flag in your docker command to resolve this. Note that the port changes from 3000 to 8080, resulting in the link: `http://localhost:8080`.

**Example Docker Command**:

```bash
docker run -d --network=host -v open-webui:/app/backend/data -e OLLAMA_BASE_URL=http://127.0.0.1:11434 --name open-webui --restart always ghcr.io/open-webui/open-webui:main
```

### Keeping Your Docker Installation Up-to-Date

In case you want to update your local Docker installation to the latest version, you can do it with [Watchtower](https://containrrr.dev/watchtower/):

```bash
docker run --rm --volume /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --run-once open-webui
```

In the last part of the command, replace `open-webui` with your container name if it is different.

Check our Updating Guide available in our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/updating).

### Using the Dev Branch 🌙

&gt; [!WARNING]
&gt; The `:dev` branch contains the latest unstable features and changes. Use it at your own risk as it may have bugs or incomplete features.

If you want to try out the latest bleeding-edge features and are okay with occasional instability, you can use the `:dev` tag like this:

```bash
docker run -d -p 3000:8080 -v open-webui:/app/backend/data --name open-webui --add-host=host.docker.internal:host-gateway --restart always ghcr.io/open-webui/open-webui:dev
```

### Offline Mode

If you are running Open WebUI in an offline environment, you can set the `HF_HUB_OFFLINE` environment variable to `1` to prevent attempts to download models from the internet.

```bash
export HF_HUB_OFFLINE=1
```

## What&#039;s Next? 🌟

Discover upcoming features on our roadmap in the [Open WebUI Documentation](https://docs.openwebui.com/roadmap/).

## License 📜

This project is licensed under the [Open WebUI License](LICENSE), a revised BSD-3-Clause license. You receive all the same rights as the classic BSD-3 license: you can use, modify, and distribute the software, including in proprietary and commercial products, with minimal restrictions. The only additional requirement is to preserve the &quot;Open WebUI&quot; branding, as detailed in the LICENSE file. For full terms, see the [LICENSE](LICENSE) document. 📄

## Support 💬

If you have any questions, suggestions, or need assistance, please open an issue or join our
[Open WebUI Discord community](https://discord.gg/5rJgQTnV4s) to connect with us! 🤝

## Star History

&lt;a href=&quot;https://star-history.com/#open-webui/open-webui&amp;Date&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&amp;theme=dark&quot; /&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
    &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

---

Created by [Timothy Jaeryang Baek](https://github.com/tjbck) - Let&#039;s make Open WebUI even more amazing together! 💪
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[xnx3/translate]]></title>
            <link>https://github.com/xnx3/translate</link>
            <guid>https://github.com/xnx3/translate</guid>
            <pubDate>Wed, 04 Jun 2025 00:05:00 GMT</pubDate>
            <description><![CDATA[AI i18n, Two lines of js realize automatic html translation. No need to change the page, no language configuration file, no API key, SEO friendly!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/xnx3/translate">xnx3/translate</a></h1>
            <p>AI i18n, Two lines of js realize automatic html translation. No need to change the page, no language configuration file, no API key, SEO friendly!</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,727</p>
            <p>Forks: 271</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre>
&lt;h1 align=&quot;center&quot;&gt;
    translate.js
&lt;/h1&gt;
&lt;h4 align=&quot;center&quot;&gt;
    AI i18n，两行js实现html全自动翻译。 &lt;br/&gt;
    交给AI，无需改动页面、无语言配置文件、无API Key、对SEO友好！
&lt;/h4&gt; 
&lt;h4 align=&quot;center&quot;&gt;
    简体中文 | 
    &lt;a href=&quot;http://translate.zvo.cn/index.html?language=chinese_traditional&quot;&gt;繁體中文&lt;/a&gt; | 
    &lt;a href=&quot;http://translate.zvo.cn/index.html?language=english&quot;&gt;English&lt;/a&gt; | 
    &lt;a href=&quot;http://translate.zvo.cn/index.html?language=japanese&quot;&gt;しろうと&lt;/a&gt; | 
    &lt;a href=&quot;http://translate.zvo.cn/index.html?language=russian&quot;&gt;Русский язык&lt;/a&gt; | 
    &lt;a href=&quot;http://translate.zvo.cn/index.html?language=german&quot;&gt;deutsch&lt;/a&gt; | 
    &lt;a href=&quot;http://translate.zvo.cn/index.html?language=french&quot;&gt;Français&lt;/a&gt; 
&lt;/h4&gt; 

# 特性说明
* **使用极其简单。** 直接加入几行 JavaScript 代码即可让其拥有上百种语言切换能力。
* **不增加工作量。** 无需改造页面本身植入大量垃圾代码变得臃肿，也不需要配置各种语种的语言文件，因为它会直接扫描你的DOM自动识别并翻译显示，它不需要你到某某网站登录去申请什么key，它是开源开放的，拿来就能用。
* **极其灵活扩展。** 您可指定它[只翻译某些指定区域的元素](http://translate.zvo.cn/4063.html)、[自定义切换语言方式及美化](http://translate.zvo.cn/4056.html)、[某些id、class、tag不被翻译](https://translate.zvo.cn/4061.html)、[自定义翻译术语](https://translate.zvo.cn/4070.html) ...... 只要你想的，它都能做到。做不到的，你找我我来让它做到！
* **自动切换语种。** [自动根据用户的语言喜好及所在的国家切换到这个语种进行浏览](http://translate.zvo.cn/4065.html)
* **极速翻译能力。** [内置三层缓存、预加载机制，毫秒级瞬间翻译的能力。它并不是你理解的大模型蜗牛似的逐个字往外出的那样](http://translate.zvo.cn/4026.html)
* [**永久开源免费。** 采用MIT开源协议，您可永久免费使用](https://github.com/xnx3/translate/blob/master/LICENSE)。[另外你可以用它来做某些系统的三方插件直接售卖盈利](http://translate.zvo.cn/4036.html)、或者你是建站公司用它来做为一项高级功能盈利，我们都是完全认可并支持的，并不需要给我们任何费用！
* **搜索引擎友好。** 完全不影响你本身网站搜索引擎的收录。爬虫所爬取的网页源代码，它不会对其进行任何改动，你可完全放心。[另外我们还有高级版本让你翻译之后的页面也能被搜索引擎收录](http://translate.zvo.cn/236896.html)
* **支持私有部署。** [在某些政府机关及大集团内部项目中，对数据隐私及安全保密有强要求场景、或者完全不通外网的场景，可以自行私有部署翻译API服务](http://translate.zvo.cn/391129.html) 
* **全球网络节点**。美洲、亚洲、欧洲 ... 都有网络节点，它能自动适配最快节点，每间隔1分钟自动获取一次延迟最小的节点进行接入使用，使全球范围使用都可高效稳定。
* **HTML整体翻译**。[提供开放API接口，传入html文件（html源代码）及要翻译为的语言即可拿到翻译后的html源码。完美支持识别各种复杂及不规范html代码，
支持翻译前的微调，比如不翻译某个区域、图片翻译、js语法操作html文件中的元素进行增删改等。](https://translate.zvo.cn/4022.html)
* **源站翻译及域名分发**。[将您现有的网站，翻译成全新的小语种网站，小语种网站可以分别绑定域名并支持搜索引擎收录和排名。而您的源站无需任何改动。也就是你可以将你朋友的网站，翻译为小语种网站，绑定上自己的域名，提供对外访问。而你无需向你朋友取得任何的如账号等相关权限](https://translate.zvo.cn/236896.html)
* **浏览器翻译插件**。[提供整体的浏览器翻译插件的全套方案，您如果是开发者，完全可以拿去将界面美化包装一下，而后直接提交应用市场进行售卖盈利](https://translate.zvo.cn/4037.html)



# 微调指令
它有极其丰富的扩展指令，让你可以对它进行各种精准控制，满足各种难缠客户的各种脑洞要求。（如果满足不了，可提出来，我们加）

* **[切换语言select选择框的自定义设置](https://translate.zvo.cn/41541.html)**，设置切换语言选择框位置、CSS美化、是否出现、显示的语种、触发后的自定义、以及重写等。
* **[设置默认翻译为什么语种进行显示](http://translate.zvo.cn/4071.html)**，用户第一次打开时，默认以什么语种显示。
* **[自定义翻译术语](http://translate.zvo.cn/41555.html)**，如果你感觉某些翻译不太符合你的预期，可进行针对性的定义某些词或句子的翻译结果，进行自定义术语库
* **[翻译完后自动触发执行](http://translate.zvo.cn/4069.html)**，当翻译完成后会自动触发执行您的某个方法，以便您来做自定义扩展。
* **[指定翻译服务接口](http://translate.zvo.cn/4068.html)**，如果你不想用我们开源免费的翻译服务接口，使用您自己私有部署的、或者您自己二次开发对接的某个翻译服务，可通过此来指定自己的翻译接口。
* **[监控页面动态渲染的文本进行自动翻译](http://translate.zvo.cn/4067.html)**，如果页面用 JavaScript 的地方比较多，内容都是随时用JS来控制显示的，比如 VUE、React 等框架做的应用，它可以实时监控DOM中文字的变动，当发生变动后立即识别并进行翻译。
* **[设置本地语种（当前网页的语种）](http://translate.zvo.cn/4066.html)**，手动指定当前页面的语言。如果不设置，它会自动识别当前网页的文本，取当前网页文本中，出现频率最高的语种为默认语种。
* **[自动切换为用户所使用的语种](http://translate.zvo.cn/4065.html)**，用户第一次打开网页时，自动判断当前用户所使用的语种、以及所在的国家，来自动进行切换为这个语种。
* **[主动进行语言切换](http://translate.zvo.cn/4064.html)**，开放一个方法提供程序调用，只需传入翻译的目标语言，即可快速切换到指定语种
* **[只翻译指定的元素](http://translate.zvo.cn/4063.html)**，指定要翻译的元素的集合,可传入一个或多个元素。如果不设置此，默认翻译整个网页。
* **[翻译时忽略指定的id](http://translate.zvo.cn/4062.html)**，翻译时追加上自己想忽略不进行翻译的id的值，凡是在这里面的，都不进行翻译，也就是当前元素以及其子元素都不会被翻译。
* **[翻译时忽略指定的class属性](http://translate.zvo.cn/4061.html)**，翻译时追加上自己想忽略不进行翻译的class标签，凡是在这里面的，都不进行翻译，也就是当前元素以及其子元素都不会被翻译。
* **[翻译时忽略指定的tag标签](http://translate.zvo.cn/4060.html)**，翻译时追加上自己想忽略不进行翻译的tag标签，凡是在这里面的，都不进行翻译，也就是当前元素以及其子元素都不会被翻译。
* **[翻译时忽略指定的文字不翻译](http://translate.zvo.cn/283381.html)**，翻译时追加上自己想忽略不进行翻译的文字，凡是在这里面的，都不进行翻译。
* **[对网页中图片进行翻译](http://translate.zvo.cn/4055.html)**，在进行翻译时，对其中的图片也会一起进行翻译。
* **[鼠标划词翻译](http://translate.zvo.cn/4072.html)**，鼠标在网页中选中一段文字，会自动出现对应翻译后的文本
* **[获取当前显示的是什么语种](http://translate.zvo.cn/4074.html)**，如果用户切换为英语进行浏览，那么这个方法将返回翻译的目标语种。
* **[根据URL传参控制以何种语种显示](http://translate.zvo.cn/41929.html)**，设置可以根据当前访问url的某个get参数来控制使用哪种语言显示。
* **[离线翻译及自动生成配置](http://translate.zvo.cn/4076.html)**，其实它也就是传统 i18n 的能力，有语言配置文件提供翻译结果。
* **[手动调用接口进行翻译操作](http://translate.zvo.cn/4077.html)**，通过JavaScript调用一个方法，传入翻译文本进行翻译，并获得翻译结果
* **[元素的内容整体翻译能力配置](http://translate.zvo.cn/4078.html)**，对node节点的文本拿来进行整体翻译处理，而不再拆分具体语种，提高翻译语句阅读通顺程度
* **[翻译接口响应捕获处理](http://translate.zvo.cn/4079.html)**，对翻译API接口的响应进行捕获，进行一些自定义扩展
* **[清除历史翻译语种的缓存](http://translate.zvo.cn/4080.html)**，清除掉你上个页面所记忆的翻译语种，从而达到切换页面时不会按照上个页面翻译语种自动进行翻译的目的。
* **[网页ajax请求触发自动翻译](http://translate.zvo.cn/4086.html)**，监听当前网页中所有的ajax请求，当请求结束后，自动触发翻译
* **[设置只对指定语种进行翻译](http://translate.zvo.cn/4085.html)**，翻译时只会翻译在这里设置的语种，未在里面的语种将不会被翻译。
* **[识别字符串语种及分析](http://translate.zvo.cn/43128.html)**，对字符串进行分析，识别出都有哪些语种，每个语种的字符是什么、每个语种包含的字符数是多少
* **[重写一级缓存（浏览器缓存）](http://translate.zvo.cn/4082.html)**，你如果不想使用默认的 localStorage 的缓存，您完全可以对其重写，设置自己想使用的缓存方式
* **[设置使用的翻译服务 translate.service.use](http://translate.zvo.cn/4081.html)**，目前有自有的服务器提供翻译API方式、无自己服务器API的方式两种。
* **[启用企业级稳定翻译](http://translate.zvo.cn/4087.html)**，独立于开源版本的翻译通道之外，仅对少数用户开放，提供企业级的稳定、高速、以及更多网络分发节点。
* **[增加对指定标签的属性进行翻译](http://translate.zvo.cn/231504.html)**，可以增加对指定html标签的某个或某些属性进行翻译。比如element、vue 等框架，有些自定义的标签属性，想让其也正常翻译
* **[本地语种也进行强制翻译](http://translate.zvo.cn/289574.html)**，切换为中文时，即使本地语种设置的是中文，网页中只要不是中文的元素，都会被翻译为要显示的语种
* **[自定义通过翻译API进行时的监听事件](http://translate.zvo.cn/379207.html)**，当通过翻译API进行文本翻译时的整个过程进行监听，做一些自定义处理，比如翻译API请求前要做些什么、请求翻译API完成并在DOM渲染完毕后触发些什么。
* **[启用翻译中的遮罩层](http://translate.zvo.cn/407105.html)**，在进行通过翻译API进行翻译时，相关元素上面显示一层加载中的动画效果，让用户知道这段文本正在进行处理中

# 在线体验
http://res.zvo.cn/translate/demo.html


# 测试效果
先拿别人的网站动手试试效果
![效果](http://cdn.weiunity.com/site/341/news/9a7228aaae28475996da9026b93356c8.gif &quot;&quot;)

1. 随便打开一个网页
2. 右键 - 审查元素
3. 粘贴入以下代码：	  
	```` var head= document.getElementsByTagName(&#039;head&#039;)[0];  var script= document.createElement(&#039;script&#039;);  script.type= &#039;text/javascript&#039;;  script.src= &#039;https://res.zvo.cn/translate/inspector_v2.js&#039;;  head.appendChild(script);  ````
4. Enter 回车键 ， 执行
5. 在当前网页的左上角，就出现了一个大大的切换语言，切换试试看。

# 快速使用
在网页最末尾， ````&lt;/html&gt;```` 之前，加入以下代码，一般在页面的最底部就出现了选择语言的 select 切换标签。 其实就这么简单：

````
&lt;script src=&quot;https://cdn.staticfile.net/translate.js/3.12.0/translate.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
translate.language.setLocal(&#039;chinese_simplified&#039;); //设置本地语种（当前网页的语种）。如果不设置，默认自动识别当前网页显示文字的语种。 可填写如 &#039;english&#039;、&#039;chinese_simplified&#039; 等，具体参见文档下方关于此的说明。
translate.service.use(&#039;client.edge&#039;); //设置机器翻译服务通道，直接客户端本身，不依赖服务端 。相关说明参考 http://translate.zvo.cn/43086.html
translate.execute();//进行翻译 
&lt;/script&gt;
````



# 使用示例

## 在浏览器使用

**普通网站中点击某个语言进行切换**
如下图所示，网站中的某个位置要有几种语言切换  
![](http://cdn.weiunity.com/site/341/news/43b838ea6ad041898037eaaaf5802776.png)  
直接在其html代码末尾的位置加入以下代码：  

````
&lt;!-- 增加某种语言切换的按钮。注意 ul上加了一个 class=&quot;ignore&quot; 代表这块代码不会被翻译到 --&gt;
&lt;ul class=&quot;ignore&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:translate.changeLanguage(&#039;english&#039;);&quot;&gt;English&lt;/a&gt;&lt;/li&gt;|
	&lt;li&gt;&lt;a href=&quot;javascript:translate.changeLanguage(&#039;chinese_simplified&#039;);&quot;&gt;简体中文&lt;/a&gt;&lt;/li&gt;|
	&lt;li&gt;&lt;a href=&quot;javascript:translate.changeLanguage(&#039;chinese_traditional&#039;);&quot;&gt;繁體中文&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- 引入多语言切换的js --&gt;
&lt;script src=&quot;https://cdn.staticfile.net/translate.js/3.12.0/translate.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
	translate.selectLanguageTag.show = false; //不出现的select的选择语言
    translate.service.use(&#039;client.edge&#039;); //设置机器翻译服务通道
	translate.execute();
&lt;/script&gt;
````

## 在 NPM 中使用

1. Install

    ```bash
    npm i i18n-jsautotranslate
    ```

2. Import

    ```javascript
    import translate from &#039;i18n-jsautotranslate&#039;
    /* Or */
    const translate = require(&quot;i18n-jsautotranslate&quot;)
    ```

[详细使用说明](https://translate.zvo.cn/4041.html) |  [Vue2 中使用 translate.js 在线 Demo](https://lruihao.github.io/vue-el-demo/#/translate-js)



# 谁在使用

开源项目：  
* [DzzOffice](http://www.dzzoffice.com/index.php?mod=dzzmarket&amp;op=view&amp;mid=58) 开源办公套件，搭建自己的类似“Google企业应用套件”、“微软Office365”的企业协同办公平台
* [ModStart](https://modstart.com/m/WebTranslate) 基于 Laravel 的模块化全栈开发框架
* [管伊佳ERP](https://gitee.com/jishenghua/JSH_ERP) 国产开源ERP系统关注度第一，专注进销存、生产、总账
* [FixIt](https://github.com/hugo-fixit/cmpt-translate) 一款简洁、优雅且先进的Hugo 博客主题
* [Z-Blog](https://app.zblogcn.com/?id=49226) 易用的博客程序，功能丰富，模板多样，助轻松搭建个性博客。
* [Discuz](https://addon.dismall.com/plugins/domi_translate.html) 知名论坛系统，功能强大，插件众多，打造活跃互动的网络社区。
* [Pear Admin Layui](https://gitee.com/pear-admin/Pear-Admin-Layui/tree/i18n/) Pear Admin Layui 是基于 Layui 的后台管理模板，简洁美观，实用高效。
* [kefu.js](https://gitee.com/mail_osc/kefu.js) 开源js聊天界面插件，方便快捷，助力网站沟通服务。
* [Layui](https://gitee.com/mail_osc/translate_layui) 简洁好用的前端框架，组件丰富，上手容易，广受开发者青睐。
* [wangmarket CMS](http://cms.zvo.cn) 开源的SAAS云建站系统，可私有部署，可通过后台任意开通多个网站，每个网站独立管理
* [易优CMS](https://www.eyoucms.com/mall/plus/29751.html) 功能强大的内容管理系统，操作简便，模板随心选。
* [迅睿CMS](https://www.xunruicms.com/shop/1285.html) 一款功能完善的内容管理系统，性能卓越，易于使用。
* [chanyue-cms](https://gitee.com/yanyutao0402/chanyue-cms) 基于Node、Express、MySQL、Vue3研发的高质量实用型CMS系统
* [phpok cms](https://gitee.com/phpok/phpok) 极其自由的企业站程序，支持各种自定义配置。
* [RPCMS](https://app.rpcms.cn/app/149.html) 轻量型php内容管理系统，小型、轻量，但功能丰富，可扩展性强。
* [Masuit.MyBlogs](https://gitee.com/masuit/Masuit.MyBlogs) 高性能高安全性低占用的个人博客系统

...  
  
|   |   | | | | 
| ------------ | ------------ |------------ |------------ |------------ | 
|  高校 |  清华大学 | 北京理工大学 |  西苏格兰大学 | 中国美术学院 | 亚利桑那州立大学|  
|  集团 |  中国一汽 | 京东 | 中兴 | 中国铁建 | 长城汽车 |    
|  政务 |  湖北省人民检察院 | 云南省药品监督管理局 | 云南省机关事务管理局 | 香港一带一路研究院 | 曲靖市生态环境局 |    
|  科研 |  国家生物信息中心 | 德国科工创新院 | 中科能研电力技术研究院 | 国家新能源汽车技术创新中心 | 北方华创 |  
|  云厂商 |  指点云 | 每刻云 | 雨云 | DOGSSL | 多彩云 |  
|  协会 |  中国国际环保展览会 | 国际研发方法协会 | 中国内燃机学会 | 深圳市智慧城市产业协会 | 山东省社会组织总会 |  
|  平台 |  东盟 | ESG国际服务平台 | 安徽省外贸综合服务平台 | 湖南企业国际化经营服务平台 | 中亚采招网 | 

...

如果您有开源项目，比如文档、cms、UI 框架、后台管理框架、等等，需要采用此进行多语言切换，欢迎喊我，无偿提供全程接入讨论及遇到的问题跟随优化，希望我们的开源项目能互相产生作用一起越来越好。如果你的项目在这个列表中没有，欢迎联系我说明，我给加入进去。如果您不想出现在这里，也联系我，我给隐去。


# TCDN部署
tcdn是translate.js 的高级版本，它的能力是让你原本的网站可以用不同的域名访问到不同的语种。而不同的语种，都可以被收录！它可以免费部署到服务器进行使用。注意，它需要使用个1核2G的服务器进行部署的。    
部署方式有两种： 
### 宝塔部署
首选需要你的宝塔面板需要 9.3.0 及以上版本。 不然你在下一步部署时，是搜索不到我们 TCDN 这个服务的。  
如果你没有安装宝塔面板，可以先去安装宝塔面板： [https://www.bt.cn/new/download.html?r=dk_tcdn](https://www.bt.cn/new/download.html?r=dk_tcdn)  
详细部署步骤可参考：  [https://translate.zvo.cn/302663.html](https://translate.zvo.cn/302663.html)
### 服务器部署
需要一个干净的服务器，不依赖任何环境的情况下进行的部署，需要你懂点linux命令行， 部署方式参考：  [https://translate.zvo.cn/236899.html](https://translate.zvo.cn/236899.html)


# 项目由来
2021年，translate 翻译服务项目创建，最初为简化Google网页翻译JS进行了封装，可以更简单进行使用，但是因为扩展极其有限，文档也没那么好，于是开始了重构。  
2022年初，完全脱离Google网页翻译JS，从底层判断开始进行了全部重构，推出 2.0 版本，在加载js的资源大小上降低了95%，更快加载，同时内置了多层缓存、多种自定义方式等能力，使用更加灵活、翻译速度更加高效，极大提高了用户使用体验。  
同年，后端翻译服务也完全开源，支持在1核1G服务器进行私有部署，翻译服务内置对接Google翻译服务、华为云机器翻译服务，如果需要别的翻译服务或者局域网无网环境下部署，也可以快速对接自有翻译接口。  
同年年底，我们翻译服务的cdn源 translate.js 的月请求次数超过了一千万次。  
2023年，翻译服务再次迎来大的变化，不仅仅只是对网页使用js来进行翻译，它还增加了翻译内容分发的能力，我们暂且简单将其称之为TCDN，它具备了CDN内容分发的一些能力，比如可以通过后台添加一个源站，然后绑定不同的域名，可以设置每个域名对应着源站的哪种语言，这样访问时打开的就直接是翻译后的网页，如果查看网页源代码，会发现html源码本身就是已经被翻译过的，不在局限于js端进行翻译，而是通过服务端主动进行翻译，并进行缓存，用户访问请求时，直接将翻译结果输出给用户展示，极大提高了用户使用体验、每种语种也都可以在相应国家搜索引擎收录、并且系统因具备CDN的基本能力，如果网站有更新，还可以通过后台快速更新源站或者访问目标站点、或者指定访问url的网页翻译缓存。  
同样的能力，我们发现友商收费标注是一个站点20种翻译语种的情况是一万二每年，而我们这个支持七八十种语种（取决于 translaet.service 后端对接的翻译服务支持的语种数量），一台服务器可承载数千个源站提供服务！  
至2023年中旬，我们公开的翻译服务 translate.service 月请求量已达到1.5亿次！并再以非常恐怖的速度在增长。  


# 结构图示
[![](https://cdn.weiunity.com/site/1144/news/70a5b291d9af484999cbee5735f5cd10.png)](http://doc.zvo.cn/translate.js/home.html)

# 优秀开源项目及社区推荐
[Featbit](https://github.com/featbit/featbit) 一个100%开源的 Feature flags / Feature Management 平台工具  
[IoTSharp](https://gitee.com/IoTSharp) IoTSharp 是一个 基于.Net Core 开源的物联网基础平台， 支持 HTTP、MQTT 、CoAp 协议    
[流之云](https://gitee.com/ntdgg) 信息化、数字化服务提供商    


# 我的其他开源项目

| 开源项目 | star数量 | 仓库 |
| --- | --- | --- |
| 可私有部署 SAAS 建站系统  |  ![](https://gitee.com/mail_osc/wangmarket/badge/star.svg?theme=white) | https://gitee.com/mail_osc/wangmarket |
| Datax 的 华为云OBS 插件 | ![](https://gitee.com/HuaweiCloudDeveloper/obs-datax-plugins/badge/star.svg?theme=white) | https://gitee.com/HuaweiCloudDeveloper/obs-datax-plugins |
| 扒网站工具 | ![](https://gitee.com/mail_osc/templatespider/badge/star.svg?theme=white)  |  https://gitee.com/mail_osc/templatespider | 
| 文件上传工具类，OBS存储  | ![](https://gitee.com/mail_osc/FileUpload/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/FileUpload |
| 智能客服机器人  | ![](https://gitee.com/leimingyun/chatbot/badge/star.svg?theme=white ) | https://gitee.com/leimingyun/chatbot |
| 结合云存储做网站无需服务器  | ![](https://gitee.com/HuaweiCloudDeveloper/huaweicloud-obs-website-wangmarket-cms/badge/star.svg?theme=white ) | [huaweicloud-obs-website-wangmarket-cms](https://gitee.com/HuaweiCloudDeveloper/huaweicloud-obs-website-wangmarket-cms) |
| kefu.js 在线聊天的前端  | ![](https://gitee.com/mail_osc/kefu.js/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/kefu.js |
| 轻量级js消息提醒组件  | ![](https://gitee.com/mail_osc/msg/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/msg |
| js 实现 html 全自动翻译  | ![](https://gitee.com/mail_osc/translate/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/translate |
| 代码生成器，自动写代码  | ![](https://gitee.com/mail_osc/writecode/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/writecode |
| Java日志存储及读取 | ![](https://gitee.com/mail_osc/log/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/log |
| Layui的国际化支持组件 | ![](https://gitee.com/mail_osc/translate_layui/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/translate_layui |
| Java8轻量级http请求类 | ![](https://gitee.com/mail_osc/http.java/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/http.java |
| Java版按键精灵，游戏辅助开发 | ![](https://gitee.com/mail_osc/xnx3/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/xnx3 |
| js的WebSocket框架封装 | ![](https://gitee.com/mail_osc/websocket.js/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/websocket.js |
| js邮件发送模块 | ![](https://gitee.com/mail_osc/email.java/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/email.java |
| WEB 端浏览器通知提醒工具类 | ![](https://gitee.com/mail_osc/notification.js/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/notification.js |
| JS中文转拼音工具类 | ![](https://gitee.com/mail_osc/pinyin.js/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/pinyin.js |
| Java-微信常用工具类 | ![](https://gitee.com/mail_osc/xnx3_weixin/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/xnx3_weixin |
| QQ寻仙的游戏辅助软件 | ![](https://gitee.com/mail_osc/xunxian/badge/star.svg?theme=white ) | https://gitee.com/mail_osc/xunxian |
| 私有化部署 SAAS商城 | ![](https://gitee.com/leimingyun/wangmarket_shop/badge/star.svg?theme=white ) | https://gitee.com/leimingyun/wangmarket_shop |
| Java开发框架及规章约束 | ![](https://gitee.com/leimingyun/wm/badge/star.svg?theme=white ) | https://gitee.com/leimingyun/wm |
| SAAS客服系统 | ![](https://gitee.com/leimingyun/yunkefu/badge/star.svg?theme=white ) | https://gitee.com/leimingyun/yunkefu |
| 根据标准的 JavaDoc 生成接口文档 | ![](https://gitee.com/leimingyun/javadoc/badge/star.svg?theme=white) | https://gitee.com/leimingyun/javadoc |
| 用sql方式使用Elasticsearch | ![](https://gitee.com/leimingyun/elasticsearch/badge/star.svg?theme=white ) | https://gitee.com/leimingyun/elasticsearch |
| Java应用全自动部署及更新 | ![](https://gitee.com/leimingyun/sftp-ssh-autopublish/badge/star.svg?theme=white ) | https://gitee.com/leimingyun/sftp-ssh-autopublish |
| 智能聊天机器人 | ![](https://gitee.com/leimingyun/aichat/badge/star.svg?theme=white ) | https://gitee.com/leimingyun/aichat |
| 自动备份文件到华为云 OBS | ![](https://gitee.com/leimingyun/yunbackups/badge/star.svg?theme=white ) | https://gitee.com/leimingyun/yunbackups |
| Java打印及预览的工具类 | ![](https://gitee.com/leimingyun/printJframe/badge/star.svg?theme=white ) | https://gitee.com/leimingyun/printJframe |
…………

# 交流
如果您在使用过程中遇到任何异常情况，请详细说一下您遇到的问题。如果可以，请写下您的网站，以便我们可以更全面地测试，以便快速找到问题所在  
作者微信：xnx3com（使用交流可加QQ群进行，我看微信很不及时）    
Telegram : [untran](https://t.me/untran)  
交流QQ群:181781514(已满)  
交流QQ群:641047127(已满)  
交流QQ群:240567964(已满)  
交流QQ群:1034085260  
交流QQ群:1017938586  
作者邮箱：921153866@qq.com  
微信公众号：wangmarket  
github: [https://github.com/xnx3/translate](https://github.com/xnx3/translate)  
gitee:  [https://gitee.com/mail_osc/translate](https://gitee.com/mail_osc/translate)  


# 商业化声明

我完全允许你拿我的开源项目进行商业化包装盈利，而无需给我支付任何费用！  
你能拿来赚钱，那是你的本事。  
而我的开源项目能帮你赚钱，我会很荣幸，我能造福社会。  
你在用它进行商业化盈利的时候，遇到问题也完全可以大方的向我求助，用它赚钱并不是什么偷偷摸摸的事情，技术能用来养家糊口改善生活是值得点赞的。  
而且如果你不放心，我还可以白纸黑字盖章，送你一个定心丸。  
说这么多，是体现一个态度，开源就是开源，我不会想法绑架你。我们可以在一起以最纯粹的状态交流，让生活更美好。
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[poteto/hiring-without-whiteboards]]></title>
            <link>https://github.com/poteto/hiring-without-whiteboards</link>
            <guid>https://github.com/poteto/hiring-without-whiteboards</guid>
            <pubDate>Wed, 04 Jun 2025 00:04:59 GMT</pubDate>
            <description><![CDATA[⭐️ Companies that don't have a broken hiring process]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/poteto/hiring-without-whiteboards">poteto/hiring-without-whiteboards</a></h1>
            <p>⭐️ Companies that don't have a broken hiring process</p>
            <p>Language: JavaScript</p>
            <p>Stars: 48,461</p>
            <p>Forks: 3,775</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre># Hiring Without Whiteboards

A list of companies (or teams) that don&#039;t do &quot;whiteboard&quot; interviews. &quot;Whiteboards&quot; is used as a metaphor, and is a _symbol_ for the kinds of CS trivia questions that are associated with bad interview practices. Whiteboards are not bad – CS trivia questions are. Using sites like HackerRank/LeetCode _probably_ fall into a similar category.

The companies and teams listed here use interview techniques and questions that resemble day-to-day work. For example, pairing on a real world problem or a paid/unpaid take home exercise. Read (and contribute to) [our recommendations](RECOMMENDATIONS.md) for ways to conduct better interviews.

### tl;dr

- Discussing a real world problem (with or without whiteboard) is 👍
- Solving CS trivia, technical puzzles, riddles, brainteasers (with or without whiteboard) is 👎

Please open a [PR](https://github.com/poteto/hiring-without-whiteboards/pull/new/master) to be added.

### Duds

If you&#039;ve been through an interview with one of these companies recently, and your experience suggests otherwise from their description, please open a [PR](https://github.com/poteto/hiring-without-whiteboards/pull/new/master) to remove them from this list.

### I want to search/sort/filter/group by X!

Check out our [Airtable](https://airtable.com/shr3eGPDm3wGjT2gA)!

Additions to this document that are properly formatted will automatically be pushed and added to Airtable. Keywords from the description will also be extracted. You can see (and contribute!) to the [API here](https://github.com/poteto/hww-api).

Also check out [No Whiteboards](https://www.nowhiteboard.org) to search for jobs at these companies.

### Discussion and other reads

&lt;!--lint disable--&gt;

- Discussion
  - [HackerNews (2017)](https://news.ycombinator.com/item?id=13874026)
  - [HackerNews (2020)](https://news.ycombinator.com/item?id=23981795)
- [Finding a better alternative to the whiteboard interview](https://theoutline.com/post/1256/finding-a-better-alternative-to-the-whiteboard-interview)
- [How to hire engineering talent without the BS](https://jes.al//2023/03/how-to-hire-engineering-talent-without-the-bs/)
- [How I Hire Programmers](http://www.aaronsw.com/weblog/hiring.en) by Aaron Swartz

&lt;!--lint enable--&gt;

---

## 0 - 9

- [1000.software](https://www.1000.software/careers) | Krakow, Poland / Remote | Series of 2 interviews first on soft skills, second on technical skills (how to build things, how to solve specific, real world problem, best practice) and meeting with a team leader. Sometimes a take home, simple project.

## A - C

- [Aalyria](https://www.aalyria.com/jobs) | Remote | Timeboxed design exercise and related coding exercise, followed by a technical/behavioral discussion with the team, and behavioral interview with leadership
- [Able](https://able.co/careers) | Lima, PE / Remote | Coding interview, Technical interview (Backlog Refinement + System Design), Leadership interview (Behavioural)
- [Abstract](https://angel.co/abstract/jobs) | San Francisco, CA
- [Accenture](https://www.accenture.com/us-en/careers) | San Francisco, CA / Los Angeles, CA / New York, NY / Kuala Lumpur, Malaysia | Technical phone discussion with architecture manager, followed by behavioral interview focusing on soft skills
- [Accredible](https://www.accredible.com/careers) | Cambridge, UK / San Francisco, CA / Remote | Take home project, then a pair-programming and discussion onsite / Skype round.
- [Acko](https://www.acko.com/careers) | Mumbai, India | Phone interview, followed by a small take home problem. Finally a F2F or skype pair programming session
- [Acumen](https://www.acumenci.com/careers/) | London, UK | Small take home test, and sit in on some sprint rituals on-site
- [Ad Hoc](https://adhoc.team) | Remote / Washington, DC | Technical take-home assignment, followed by multiple video calls that are discussions of technical background and experience.
- [Adaface](https://www.adaface.com) | Remote/ Singapore, Singapore / Bangalore, India | Conversational on-the-job technical assessment, followed by video calls with technical lead and founders
- [AdCellerant](https://adcellerant.com/career-job-listing/) | Denver, CO | Technical phone screen, 5-day take home code challenge, then on-site interview comprised of cultural and technical discussions
- [Adeva](https://adevait.com) | New York, USA | 4 steps interviewing process that includes online coding assignment + lead engineer call.
- [AdEx Network](https://www.adex.network) | Sofia, Bulgaria / Remote | Email screening process, followed by a take-home assignment
- [Admiral](https://getadmiral.com) | Gainesville, FL / Remote | Intro phone call with hiring manager, take-home assignment, (mostly) non-technical on-site with team/leadership
- [Adnymics](https://adnymics.com) | Munich, DE | Take home project, then work with the team for a day
- [Adthena](https://adthena.com) | London, UK | Takehome project and discussion on-site
- [Adyen](https://www.adyen.com) | Amsterdam, NL | Take-home assignment, design discussion based on take home, culture fit etc. Provides visa sponsorship to the Netherlands.
- [Affinipay](https://www.affinipay.com) | Austin, TX | Short takehome project + video interview about coding with engineering manager
- [Agency Enterprise Studio](https://ae.studio) | Remote / Los Angeles, CA / Florianópolis, Brazil | Live coding of a task you&#039;d do daily
- [Ageno](https://ageno.pl) | Bielsko-Biala, Poland | Simple Magento Take-home project and discussion on the real world problems.
- [AgileMD](https://angel.co/agilemd/jobs) | San Francisco, CA | Takehome project
- [AImotive](https://aimotive.com/career/) | Budapest, Hungary | Small take-home project, then in-person interview about technical background
- [Airbase](https://www.airbase.com/careers) | San Francisco, CA; Bangalore, India; Remote | Intro Call with HR or EMs, small take-home project, two tech rounds with Airbase Engineers (based on real world engineering problems), followed by a final values round with the Founder or Director of Engineering.
- [Airtable](https://airtable.com/careers) | San Francisco, CA; Austin, TX; Mountain View, CA; New York, NY; Remote | Take home project that resembles a problem Airtable solves for. Five hour on-site which includes a discussion of the project, UI design, discussing architectural tradeoffs, and code debugging.
- [Aiwip](https://aiwip.com) | London, UK | Skype/phone interview followed by takehome project or worksample (or whiteboard)
- [Albert](https://jobs.lever.co/meetalbert/) | Los Angeles, CA | Discussion with senior engineer, and then practical pair programming related to my experience + the position
- [Algolia](https://www.algolia.com/careers) | Paris, France / San Francisco, CA | Takehome project &amp; Onsite discussions and presentation
- [all about apps GmbH](https://www.allaboutapps.at/jobs) | Vienna, Austria | 2-phase technical discussion &amp; examination with department heads and management.
- [Allegro](https://allegro.pl/praca) | Warsaw, Poland; Poznan, Poland; Torun, Poland; Wroclaw, Poland; Krakow, Poland | Take home, simple project. Series of 2 technical interviews (how to build things, how to solve specific, real world problem) and meeting with a team leader.
- [Alluxi](https://www.alluxi.mx) | Monterrey, Mexico | Initial skype interview, technical interview with Senior engineer and work sample review.
- [Almabase](https://www.almabase.com/careers#believe) | Bengaluru, India | Take-home assignment, design discussion based on take home, low level and high level design rounds based on real life problems, culture fit etc. during onsite.
- [AlphaSights](https://www.alphasights.com/careers/open-roles/) | London, UK / New York, NY / Remote | Initial interview, pair programming then final round with general technical questions
- [AMAGI](https://amagi.io) | Makati, Philippines | 1) Review of your resume, portfolio, and/or GitHub profile; 2) 1 hour discussion (in-person or Skype) about your goals, experience, personal culture, and how to apply technical solutions to real problems;
- [Analytical Flavor Systems](https://gastrograph.com) | Manhattan, New York | Code sample or take-home project, both with discussion.
- [Anderson Merchandisers](https://amerch.com) | Remote / Dallas, TX | Technical discussion about the technologies they are currently using. Going over background and resume.
- [Angaza](https://www.angaza.com/careers/) | San Francisco, CA | Take-home assignment with guaranteed feedback, on-site interviews involving actual day-to-day work
- [Animech](https://careers.animech.com) | Uppsala, Sweden | Multiple interviews with technical staff with real problem discussions.
- [Anyfin](https://career.anyfin.com) | Stockholm, Sweden | Takehome project &amp; Onsite discussions and presentation.
- [Aparkado](https://aparkado.de) | Cologne, Germany / Remote | Intro with Co-Founder, team fit with the team plus a small real-world problem to solve, followed by final round with CEO / Co-Founder.
- [Apollo Agriculture](https://apolloagriculture.com) | Nairobi, Kenya / Remote | Takehome project or Worksample (or whiteboard)
- [Applied](https://www.beapplied.com) | London, UK | Situational judgement tests focusing on real-world soft skills (online then in structured interview)
- [Arachnys](https://angel.co/arachnys/jobs/220465-software-engineer) | London, UK | Take home test, real world pair programming
- [Articulate](https://www.articulate.com/about/careers/) | Remote | Take-home project &amp; pair program on a problem similar to daily work
- [Artsy](https://www.artsy.net/jobs#engineering) | New York, NY / London, UK / Berlin, Germany / Los Angeles, CA / Hong Kong, Hong Kong / Remote | Our process: 1) Informal chat 2) Application 3) Phone screen 4) In-person interview with 1 lead, 2 individual contributors and 1 non-engineer (30-45 mins each), focusing on your work habits and expertise as demonstrated in your previous work 5) ~4 in-depth professional reference calls (30-45 mins each).
- [ASI Data Science](https://www.asidatascience.com/careers) | London, UK | Project to work at home, general technical questions, pair programming with engineers
- [ASOS](https://www.asoscareers.com) | London, UK | Take home or in-person code refactoring exercise, in-person walk-though of solution including software craftsmanship principles and design decisions, in-person freestyle architecture walk-through
- [Ataccama](https://jobs.ataccama.com) | Prague, Czech Republic | Face to face interview (skype or onsite), coding task for 30 min, meeting with team members
- [aTech Media](https://atech.media) | London, UK | Face to face interview, review of existing open source contributions or, if none are available, asked to write a library for something that interests them
- [Atlan](https://atlan.com) | New Delhi, India | A mini project (to be done within 8 days), followed by a discussion with the team you&#039;re applying to. Then as the final step, a call with one of the founders.
- [Aura Frames](https://auraframes.com/jobs?gh_src=2ef5cfa32) | New York, NY / San Francisco, CA | Simplified real-world coding task on Coderpad.io, followed by a few hours onsite writing code in our actual codebase.
- [Auto1](https://www.auto1-group.com/jobs) | Berlin, DE | Series of Skype interviews which covers general technical questions, followed by a take-home assignment
- [Automattic](https://automattic.com/work-with-us/) | Remote | short take-home code test, then a part-time, paid project.
- [AutoScout24](https://github.com/AutoScout24/hiring) | Munich, Germany | Skype interview followed by home assignment from our day-to-day business and then on-site interview including lunch with a team
- [Avant](https://avant.com/jobs) | Chicago, IL | Pair programming interviews.
- [Avarteq GmbH](https://www.avarteq.com/career) | Berlin, Germany / Saarbrücken, Germany | Technical interview with our developers on-site or remote followed by a work sample in a pair programming session or a previous take-home project with a follow-up discussion and detailed feedback.
- [Axelerant](https://www.axelerant.com/careers) | Remote | Take-home project, interviews with hr and engineering team.
- [Axiacore](https://axiacore.com) | Bogota, Colombia | We talk about on how is your process when solving problems.
- [Axios](https://www.axios.com/careers) | Arlington, VA / New York, NY / San Francisco, CA / Remote | Take-home project, with discussion.
- [B12](https://boards.greenhouse.io/b12#.WMlLfRIrJTa) | New York, NY | Take-home exercises and pair-programming with the team.
- [Babylon Health iOS Team](https://github.com/Babylonpartners/iOS-Interview-Demo) | London, UK | Take-home project, on-site presentation and discussion, design and product interview.
- [Backbase](https://workatbackbase.com) | Amsterdam, Netherlands; Cardiff, Wales; London, UK; Atlanta, GA | Takehome project, interviews
- [Badi](https://jobs.badi.com) | Barcelona, Spain | Phone Screen, Take-home project, then a discussion onsite round.
- [Badoo](https://team.badoo.com/jobs) | London, UK | Take-home project, then a discussion onsite round.
- [BAE Systems Digital Intelligence](https://cybercareers.baesystems.com) | London, UK / Manchester, UK / Guildford, UK / Gloucester, UK | Initial interview with experience based technical questions, second interview pair programming on problem similar to daily work
- [Bakken &amp; Bæck](https://bakkenbaeck.com/jobs) | Oslo, Norway; Amsterdam, Netherlands; Bonn, Germany | Skype interview followed by take-home assignment and a visit to one of our offices
- [Balabit](https://career.balabit.com) | Budapest, Hungary | Take-home project (medium size, with restrictions, e.g. only stdlib may be used), then discussion on-site
- [Barracuda View Team](https://www.barracuda.com/company/careers) | Chelmsford, MA / Remote | Phone screen, remote pair programming session, technical discussion interview, culture fit interview
- [Basecamp](https://basecamp.com/about/jobs) | Chicago, IL / Remote
- [BCW Group](https://www.bcw.group) | Remote | Behavioral interview with the technical lead and hiring manager, followed by a take-home project, and finally a brief discussion about how the exercise went.
- [Beam Dental](https://jobs.lever.co/beam) | Columbus, OH / Remote | Phone Screen, Take Home Project, In-Person or remote Pairing and Cross-Functional Interview
- [Belka](https://www.belkadigital.com) | Trento, Italy; Munich, Germany | We give you a small task that you can do alone and then we evaluate your work with you
- [Bemind](https://www.bemind.me) | Biella, Italy / Latina, Italy / Remote | Series of interviews, discussion about technical background and past experiences, take-home project &amp; pair programming
- [Bendyworks](https://bendyworks.com/careers) | Madison, WI | Interviews and pair programming on personal projects
- [Benefex](https://hellobenefex.com/about-us/careers) | Southampton, UK / Remote | A short, 3-stages interview process. The first stage is with HR. The second stage is a take-home assignment. The third stage is discussing the take-home assignment solution with two engineers.
- [Benshi.ai](https://www.benshi.ai) | Barcelona, Spain | Initial 15-30 mins interview with HR, followed by 15-30 mins chat with hiring manager to clear out basic concepts, then followed by take-home task for 5 days
- [Betterment](https://www.betterment.com/careers) | New York, NY | Phone interview followed by on-site pair programming to simulate a Betterment feature build.
- [BetterPT](https://www.betterhealthcare.co/careers) | New York, NY | Initial phone interview, project using our tech stack, on-site code review/pair programming and &quot;meet the team&quot;.
- [bevelop](https://bevelop.de) | Aschaffenburg, BY / Remote | Initial introductory call, on-sight or remote trial day with project
- [Big Nerd Ranch](https://bignerdranch.com/careers) | Atlanta, GA &amp; Remote | Interviews and pair programming on an internal project or problem.
- [BigaBid](https://www.bigabid.com/careers) | Tel Aviv, Israel | Design a real time solution to a problem relevant to the business, followed by a take home project implementing a lean version of the solution
- [BigBinary](https://www.bigbinary.com/jobs) | Remote | Phone discussion with a developer and the CEO
- [BioConnect](https://bioconnect.com) | Toronto, Canada | Take-home assignment &amp; discussion
- [Bitchief Technology Services](https://www.bitchief.com) | India, Gurgaon | Screening Round: General comms and aptitude, Technical Round: Questions related to required technology, Home Assignments
- [bitExpert AG](https://www.bitexpert.de/karriere) | Mannheim, Germany | Interview with experience based technical questions
- [Bitpanda](https://www.bitpanda.com/en/career) | Cracow, Poland / Remote | HR talk, take-home task, tech interview, culture fit interview
- [Bits of Love](https://www.bitsoflove.be/careers) | Bruges, Belgium | In-person interview to evaluate experience and motivation, potentially followed by take-home project.
- [Bitso](https://bitso.com/jobs) | Mexico City, Mexico / Remote | Intro phone or hangouts/skype call with People team, take home project followed by walkthrough of your code and some tech questions focused on your experience, founders video call with one of the founders
- [Blackdot Solutions](https://blackdotsolutions.com) | Cambridge, UK | Take-home project followed by on-site face-to-face walkthru of your code focusing on decisions/reasoning/technology used.
- [BlackTech](https://blacktech.com.np) | Pokhara, NP | Take-home project followed by on-site face to face or remote video conference interview.
- [Bleacher Report](https://bleacherreport.com) | San Francisco, CA, USA | Take-home project; on-site discussion about the project and meeting with different teams
- [Blendle](https://blendle.homerun.co/?lang=en) | Utrecht, The Netherlands | Take-home project &amp; pair program on a problem similar to daily work
- [blogfoster](https://github.com/blogfoster/join-the-engineering-team) | Berlin, Germany | Take-home project, discussion on-site
- [Bloom Works](https://bloomworks.digital/jobs) | Remote | Discussion, pair-programming exercise
- [Blue Bottle Coffee](https://www.bluebottlecoffee.com) | Oakland, CA | Technical Phone Screen, Take Home Challenge, Technical in-persons.
- [Bluesoft](http://www.bluesoft.com.br) | São Paulo, Brazil | Takehome project and an interview to evaluate the candidate&#039;s previous experience.
- [Bocoup](https://bocoup.com/careers) | Boston, MA / Remote | Pair programming with personal laptop on typical problem seen at work
- [Bonusly](https://bonus.ly/careers) | Boulder, CO | Values &amp; Tech focused interview - Process: 30 minute with HR, 45 minute Google Meet interview with 2 team members, ~2-4 hour take-home project, on-site interview involving 2 values-alignment interviews and 1 technical interview going over your take home project
- [BookingSync](https://www.bookingsync.com/en/jobs) | Remote | Small takehome project, interviews over skype with team members.
- [BoomTown](https://boomtownroi.com) | Charleston, SC / Atlanta, GA / Remote | Conversational in-person interviews with potential team members and managers that revolve around past experience and how that could be applied to future work
- [Botika](https://botika.ai) | San Marino, RSM | View code, projects, libraries or any other open source story that you have been a part of, take-home project followed by on-site face-to-face walkthru of your code focusing on decisions/reasoning/technology used.
- [Bouvet](https://www.bouvet.no) | Bergen, Norway | Pair programming with senior engineers
- [brainn.co](https://brainn.co) | São Paulo, BR | Zoom/On-site interview, take-home project and interview with a team leader.
- [BrainStation-23](https://brainstation-23.com) | Dhaka, BD | A practical project followed by series of in-person interview sessions
- [Bramble](https://www.brmbl.io) | Remote | Slack interview, take home test, pairing, culture-fit interview.
- [Breather

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[pt-plugins/PT-Plugin-Plus]]></title>
            <link>https://github.com/pt-plugins/PT-Plugin-Plus</link>
            <guid>https://github.com/pt-plugins/PT-Plugin-Plus</guid>
            <pubDate>Wed, 04 Jun 2025 00:04:58 GMT</pubDate>
            <description><![CDATA[PT 助手 Plus，为 Microsoft Edge、Google Chrome、Firefox 浏览器插件（Web Extensions），主要用于辅助下载 PT 站的种子。]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pt-plugins/PT-Plugin-Plus">pt-plugins/PT-Plugin-Plus</a></h1>
            <p>PT 助手 Plus，为 Microsoft Edge、Google Chrome、Firefox 浏览器插件（Web Extensions），主要用于辅助下载 PT 站的种子。</p>
            <p>Language: JavaScript</p>
            <p>Stars: 7,808</p>
            <p>Forks: 918</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;https://github.com/pt-plugins/PT-Plugin-Plus/raw/master/public/assets/icon-128.png&quot;&gt;&lt;br/&gt;
&lt;a href=&quot;https://github.com/pt-plugins/PT-Plugin-Plus/releases?include_prereleases/latest&quot; title=&quot;GitHub Pre-releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/pt-plugins/PT-Plugin-Plus.svg?include_prereleases&amp;label=pre-release&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/pt-plugins/PT-Plugin-Plus/releases&quot; title=&quot;GitHub All Releases&quot;&gt;&lt;img alt=&quot;Releases&quot; src=&quot;https://img.shields.io/github/downloads/pt-plugins/PT-Plugin-Plus/total.svg?label=Downloads&quot;&gt;&lt;/a&gt;
&lt;img src=&quot;https://img.shields.io/badge/Used-TypeScript%20Vue-blue.svg&quot;&gt;
&lt;a href=&quot;https://github.com/pt-plugins/PT-Plugin-Plus/LICENSE&quot; title=&quot;GitHub license&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/pt-plugins/PT-Plugin-Plus.svg?label=License&quot; alt=&quot;GitHub license&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://t.me/joinchat/NZ9NCxPKXyby8f35rn_QTw&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Telegram-Chat-blue.svg?logo=telegram&quot; alt=&quot;Telegram&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;

---

## 关于

PT 助手 Plus，是一款浏览器插件（Web Extensions），一个可以提升 PT 站点使用效率的工具。

适用于各 PT 站，可使下载种子等各项操作变化更简单、快捷。配合下载服务器（如 Transmission、µTorrent 等），可一键下载指定的种子。

该版本是对原来的 [PT 助手](https://github.com/ronggang/PT-Plugin) 进行了重构，去掉了繁琐的配置，以获得更好的使用体验；

&gt; ~~注意：`1.0.0` 以下的配置不能直接用于该版本，请勿将 `1.0.0` 以下的版本配置进行导入操作。~~

最新版本请登录后从[Pre-release](https://github.com/pt-plugins/PT-Plugin-Plus/releases?include_prereleases/latest)获取。如不会安装请参看Wiki

**提Issue前请务必检查Dev版本、Pull Request以及之前的Issue**

**M-Team 请于站点控制台 -&gt; 实验室 获取 Token 填入后使用**

## 已支持的浏览器
- &lt;a href=&quot;https://chrome.google.com/webstore/detail/abkdiiddckphbigmakaojlnmakpllenb&quot; title=&quot;已在 Chrome Web Store 市场上发布的版本&quot;&gt;![Google Chrome](https://img.shields.io/chrome-web-store/v/abkdiiddckphbigmakaojlnmakpllenb.svg?label=Google%20Chrome)&lt;/a&gt; （已下架，见[原因](https://github.com/pt-plugins/PT-Plugin-Plus/wiki#%E5%B7%B2%E8%A2%AB%E4%B8%8B%E6%9E%B6%E7%9A%84%E6%B5%8F%E8%A7%88%E5%99%A8)）
- &lt;a href=&quot;https://addons.mozilla.org/zh-CN/firefox/addon/pt-plugin-plus/&quot; title=&quot;已在 Mozilla Add-on 上发布的版本&quot;&gt;![Mozilla Firefox](https://img.shields.io/amo/v/pt-plugin-plus.svg?label=Mozilla%20Firefox)&lt;/a&gt; （已下架，见[原因](https://github.com/pt-plugins/PT-Plugin-Plus/wiki#%E5%B7%B2%E8%A2%AB%E4%B8%8B%E6%9E%B6%E7%9A%84%E6%B5%8F%E8%A7%88%E5%99%A8)）
- &lt;a href=&quot;https://microsoftedge.microsoft.com/addons/detail/ekhingnlcjebipkdcgkkheigmljefepn&quot; title=&quot;已在 Microsoft Edge 上发布的版本&quot;&gt;![Microsoft Edge](https://img.shields.io/badge/dynamic/json?label=Edge%20Addons&amp;prefix=v&amp;query=%24.version&amp;url=https%3A%2F%2Fmicrosoftedge.microsoft.com%2FAddons%2Fgetproductdetailsbycrxid%2Fekhingnlcjebipkdcgkkheigmljefepn)&lt;/a&gt;
- 及其他基于 `Chromium` 内核的浏览器

## 功能

- 一键发送指定的种子到下载服务器，目前已支持：
  - Transmission
  - Synology Download Station
  - µTorrent
  - Deluge
  - qBittorrent `v4.1+`
  - ruTorrent
  - Flood
- 比 RSS 更灵活的下载方式：
  - 针对不同的站点发送到不同的下载服务器；
  - 针对不同的站点、下载服务器设置不同的保存路径；
- 批量下载当前页所有种子；
- 批量复制当前页面所有种子的下载链接（`部分站点需要设置 passkey`）；
- 显示默认下载服务器当前可用空间，目前已支持：
  - Transmission
- 多站聚合搜索相同关键字的种子；
  - 查看 [已支持的站点列表](https://github.com/pt-plugins/PT-Plugin-Plus/wiki/supported-sites)
- 根据当前站点显示专属功能，如：
  - 封面模式浏览种子页面；
- 保存下载历史记录（默认关闭）；
- `豆瓣` 电影页面、[Top250](https://movie.douban.com/top250)、[选电影](https://movie.douban.com/explore) 一键搜索 PT 种子支持；
- `IMDb` 电影页面、[Top250](https://www.imdb.com/chart/top?ref_=nv_mv_250) 一键搜索 PT 种子支持；
- 更多功能请参考 [Wiki](https://github.com/pt-plugins/PT-Plugin-Plus/wiki) ；

## 安装及使用

- 如何安装和使用，请参考 [Wiki](https://github.com/pt-plugins/PT-Plugin-Plus/wiki) 的详细说明；
- 常见问题可 [点这里](https://github.com/pt-plugins/PT-Plugin-Plus/wiki/frequently-asked-questions) 找到答案；
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[einaregilsson/Redirector]]></title>
            <link>https://github.com/einaregilsson/Redirector</link>
            <guid>https://github.com/einaregilsson/Redirector</guid>
            <pubDate>Wed, 04 Jun 2025 00:04:57 GMT</pubDate>
            <description><![CDATA[Browser extension (Firefox, Chrome, Opera, Edge) to redirect urls based on regex patterns, like a client side mod_rewrite.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/einaregilsson/Redirector">einaregilsson/Redirector</a></h1>
            <p>Browser extension (Firefox, Chrome, Opera, Edge) to redirect urls based on regex patterns, like a client side mod_rewrite.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,816</p>
            <p>Forks: 175</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre>## Description
Web browser extension (Firefox, Vivaldi, Chrome, Opera, Edge) to redirect URLs based on regex or wildcard patterns.

## Tribute
In loving memory of Einar Egilsson, who gave us Redirector and selflessly nurtured it for many years.  We miss you Einar, and will always remember your kindness and generosity.

## Download Links
* [Firefox](https://addons.mozilla.org/firefox/addon/redirector/)
* [Google Chrome and Vivaldi](https://chrome.google.com/webstore/detail/redirector/ocgpenflpmgnfapjedencafcfakcekcd)
&lt;!--
Opera extension is no longer present (as of 2023/01/16)
* [Opera](https://addons.opera.com/extensions/details/redirector-2/)
--&gt;

## Examples
### De-mobilizer
- Example URL: `https://en.m.wikipedia.org/`
- Include pattern: `^(https?://)([a-z0-9-]*\.)m(?:obile)?\.(.*)`
- Redirect to: `$1$2$3`
- Pattern type: Regular Expression
- Description: Always show the desktop version of websites

### AMP redirect
- Example URL: `https://www.google.com/amp/www.example.com/amp/document`
- Include pattern: `^(?:https?://)www.(?:google|bing).com/amp/(?:s/)?(.*)`
- Redirect to: `https://$1`
- Pattern type: Regular Expression
- Description: AMP is bad: &lt;https://80x24.net/post/the-problem-with-amp/&gt;

### Doubleclick escaper
- Example URL: `https://ad.doubleclick.net/ddm/trackclk/N135005.2681608PRIVATENETWORK/B20244?https://www.example.com`
- Include pattern: `^(?:https?://)ad.doubleclick.net/.*\?(http?s://.*)`
- Redirect to: `$1`
- Pattern type: Regular Expression
- Description: Remove doubleclick link tracking / fix problems with doubleclick host-based blocking

### YouTube Shorts to YouTube
- Example URL: `https://www.youtube.com/shorts/video-id`
- Include pattern: `^(?:https?://)(?:www.)?youtube.com/shorts/([a-zA-Z0-9_-]+)(.*)`
- Redirect to: `https://www.youtube.com/watch?v=$1$2`
- Pattern type: Regular Expression
- Description: Redirect YouTube Shorts to regular YouTube

### Fun with !bangs
What are bangs?: &lt;https://duckduckgo.com/bangs&gt;

#### Use DuckDuckGo.com !bangs on Google
- Example URL: `https://www.google.com/search?&amp;ei=-FvkXcOVMo6RRwW5p5DgBg&amp;q=asdfasdf%21+sadfas&amp;oq=%21asdfasdf+sadfas&amp;gs_l=asdfsadfafsgaf`
- Include pattern: `^(?:https?://)(?:www.)google\.(?:com|au|de|co\.uk)/search\?(?:.*)?(?:oq|q)=([^\&amp;]*\+)?((?:%21|!)[^\&amp;]*)`
- Redirect to: `https://duckduckgo.com/?q=$1$2`
- Pattern type: Regular Expression
- Description: Redirect any Google query with a !bang to DDG

### Custom DuckDuckGo.com !bangs

#### DDG !example Base
- Example URL: `https://duckduckgo.com/?q=!`__example__`&amp;get=other`
- Include pattern: `^(?:https?://)(?:.*\.)?duckduckgo.com/\?q=(?:%21|!)`__example__`(?=[^\+]|$)(?=\W|$)`
- Redirect to: `https://example.com/`
- Pattern type: Regular Expression
- Description: Redirect to the base site when !bang is the only search parameter

#### DDG !example Search
- Example URL: `https://duckduckgo.com/?q=searchterm+!`__example__`+searchterm2&amp;get=other`
- Include pattern: `^(?:https?://)(?:.*\.)?duckduckgo.com/\?q=(.*\+)?(?:(?:%21|!)`__example__`)(?:\+([^\&amp;\?\#]*))?(?:\W|$)`
- Redirect to: `https://example.com/?query=$1$2`
- Pattern type: Regular Expression
- Description: Redirect to custom site search

#### DDG !ghh git-history
- Example URL: `https://duckduckgo.com/?q=!ghh+https%3A%2F%2Fgithub.com%2Fbabel%2Fbabel%2Fblob%2Fmaster%2Fpackages%2Fbabel-core%2FREADME.md&amp;adfasfasd`
- Include pattern: `^(?:https?://)duckduckgo.com/\?q=(?:(?:%21|!)ghh\+)(?:.*)(github|gitlab|bitbucket)(?:\.org|\.com)(.*?(?=\&amp;))`
- Redirect to: `https://$1.githistory.xyz$2`
- Pattern type: Regular Expression
- Description: Create new !ghh bang that redirects to &lt;https://githistory.xyz&gt;
- Advanced:
    - Process matches: URL decode
    
### Fast DuckDuckGo.com !bangs

Go directly to frequently used DuckDuckGo bangs to avoid intermediary network requests.

- Example URL: `https://duckduckgo.com/?q=foo+bar+%21google+test+bar`
- Include pattern: `^https://duckduckgo\.com/\?q=(.*)\+(?:%21|!)google\b\+(.*?)(?:&amp;|$)`
- Redirect to: `https://google.com/search?hl=en&amp;q=$1+$2`
- Pattern type: Regular Expression
- Description: DuckDuckGo → Google !bang shortcut (prefix AND suffix)
- Pattern Description: Avoid extraneous + in URL with two separate patterns  
###
  
- Example URL: `https://duckduckgo.com/?q=foo+bar+%21google`
- Include pattern: `^https://duckduckgo\.com/\?q=(.*?)\+?(?:%21|!)google\b\+?(.*?)(?:&amp;|$)`
- Redirect to: `https://google.com/search?hl=en&amp;q=$1$2`
- Pattern type: Regular Expression
- Description: DuckDuckGo → Google !bang shortcut (prefix OR suffix)
- Pattern Description: Avoid extraneous + in URL with two separate patterns

## Dark Theme
If you are a Firefox user and use a dark theme, you can add these lines to your `userChrome.css` file to make Redirector&#039;s extension button more visible:

```css
/* Redirector button for dark Firefox themes */
toolbarbutton#toggle-button--redirectoreinaregilssoncom-redirector[image*=&quot;active&quot;] { filter: invert(1) brightness(6); }
toolbarbutton#toggle-button--redirectoreinaregilssoncom-redirector[image*=&quot;disabled&quot;] { filter: invert(1) brightness(2.5); }
```

If you don&#039;t know what the `userChrome.css` file is, or how to edit it, please look it up on a Firefox forum instead of asking about it in this repository. Thanks!
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[netbymatt/ws4kp]]></title>
            <link>https://github.com/netbymatt/ws4kp</link>
            <guid>https://github.com/netbymatt/ws4kp</guid>
            <pubDate>Wed, 04 Jun 2025 00:04:56 GMT</pubDate>
            <description><![CDATA[A web-based WeatherStar 4000]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/netbymatt/ws4kp">netbymatt/ws4kp</a></h1>
            <p>A web-based WeatherStar 4000</p>
            <p>Language: JavaScript</p>
            <p>Stars: 896</p>
            <p>Forks: 107</p>
            <p>Stars today: 44 stars today</p>
            <h2>README</h2><pre># WeatherStar 4000+

A live version of this project is available at https://weatherstar.netbymatt.com

## About

This project aims to bring back the feel of the 90&#039;s with a weather forecast that has the look and feel of The Weather Channel at that time but available in a modern way. This is by no means intended to be a perfect emulation of the WeatherStar 4000, the hardware that produced those wonderful blue and orange graphics you saw during the local forecast on The Weather Channel. If you would like a much more accurate project please see the [WS4000 Simulator](http://www.taiganet.com/). Instead, this project intends to create a simple to use interface with minimal configuration fuss. Some changes have been made to the screens available because either more or less forecast information is available today than was in the 90&#039;s. Most of these changes are captured in sections below.

## What&#039;s your motivation

Nostalgia. And I enjoy following the weather, especially severe storms.

It&#039;s also a creative outlet for me and keeps my programming skills honed for when I need them for my day job. 

### Included technology
I&#039;ve kept this open source, well commented, and made it as library-free as possible to help others interested in programming be able to jump right in and start working with the code.

From a learning standpoint, this codebase make use of a lot of different methods and technologies common on the internet including:

* The https://api.weather.gov REST API. ([documentation](https://www.weather.gov/documentation/services-web-api)).
* ES 6 functionality
	* Arrow functions
	* Promises
	* Async/await and parallel loading of all forecast resources
	* Classes and extensions
	* Javascript modules
* Separation between API code and user interface code
* Use of a modern date parsing library [luxon](https://moment.github.io/luxon/)
* Practical API rates and static asset caching
* Very straight-forward hand written HTML
* Build system integration (Gulp, Webpack) to reduce the number of scripts that need to be loaded
* Hand written CSS made easier to mange with SASS
* A linting library to keep code style consistent

## Does WeatherStar 4000+ work outside of the USA?

This project is tightly coupled to [NOAA&#039;s Weather API](https://www.weather.gov/documentation/services-web-api), which is exclusive to the United States. Using NOAA&#039;s Weather API is a crucial requirement to provide an authentic WeatherStar 4000+ experience.

If you would like to display weather information for international locations (outside of the USA), please checkout a fork of this project created by [@mwood77](https://github.com/mwood77):
- [`ws4kp-international`](https://github.com/mwood77/ws4kp-international)

## Run Your WeatherStar
To run via Node locally:
```
git clone https://github.com/netbymatt/ws4kp.git
cd ws4kp
npm i
node index.mjs
```

To run via Docker: 
```
docker run -p 8080:8080 ghcr.io/netbymatt/ws4kp
```
Open your web browser: http://localhost:8080/ 

To run via Docker Compose (docker-compose.yaml):
```
---
services:
  ws4kp:
    image: ghcr.io/netbymatt/ws4kp
    container_name: ws4kp
    environment: 
      # Each argument in the permalink URL can become an environment variable on the Docker host by adding WSQS_
      # Following the &quot;Sharing a Permalink&quot; example below, here are a few environment variables defined. Visit that section for a
      # more complete list of configuration options.
      - WSQS_latLonQuery=&quot;Orlando International Airport Orlando FL USA&quot;
      - WSQS_hazards_checkbox=false
      - WSQS_current_weather_checkbox=true
    ports:
      - 8080:8080 # change the first 8080 to meet your local network needs
    restart: unless-stopped
```

### Serving static files
The app can be served as a static set of files on any web server. Run the provided gulp task to create a set of static distribution files:
```
npm run buildDist
```
The resulting files will be in the /dist folder in the root of the project. These can then be uploaded to a web server for hosting, no server-side scripting is required.

## What&#039;s different

I&#039;ve made several changes to this Weather Star 4000 simulation compared to the original hardware unit and the code that this was forked from.

* Radar displays the timestamp of the image.
* A new hour-by-hour graph of the temperature, cloud cover and precipitation chances for the next 24 hours.
* A new hourly forecast display for the next 24 hours is available, and is shown in the style of the travel cities forecast. (off by default because it duplicates the hourly graph)
* The SPC Outlook is shown in the style of the old air quality screen. This shows the probability of severe weather over the next 3 days at your location.
* The &quot;Local Forecast&quot; and &quot;Extended Forecast&quot; provide several additional days of information compared to the original format in the 90&#039;s.
* The original music has been replaced. More info in [Music](#music).
* Marine forecast (tides) is not available as it is not reliably part of the new API.
* &quot;Flavors&quot; are not present in this simulation. Flavors refer to the order of the weather information that was shown on the original units. Instead, the order of the displays has been fixed and a checkboxes can be used to turn on and off individual displays. The travel forecast has been defaulted to off so only local information shows for new users.

## Sharing a permalink (bookmarking)
Selected displays, the forecast city and widescreen setting are sticky from one session to the next. However if you would like to share your exact configuration or bookmark it, click the &quot;Copy Permalink&quot; (or get &quot;Get Parmalink&quot;) near the bottom of the page. A URL will be copied to your clipboard with all of you selected displays and location (or copy it from the page if your browser doesn&#039;t support clipboard transfers directly). You can then share this link or add it to your bookmarks.

Your permalink will be very long. Here is an example for the Orlando International Airport:
```
https://weatherstar.netbymatt.com/?hazards-checkbox=false&amp;current-weather-checkbox=true&amp;latest-observations-checkbox=true&amp;hourly-checkbox=false&amp;hourly-graph-checkbox=true&amp;travel-checkbox=false&amp;regional-forecast-checkbox=true&amp;local-forecast-checkbox=true&amp;extended-forecast-checkbox=true&amp;almanac-checkbox=false&amp;spc-outlook-checkbox=true&amp;radar-checkbox=true&amp;settings-wide-checkbox=false&amp;settings-kiosk-checkbox=false&amp;settings-scanLines-checkbox=false&amp;settings-speed-select=1.00&amp;settings-units-select=us&amp;latLonQuery=Orlando+International+Airport%2C+Orlando%2C+FL%2C+USA&amp;latLon=%7B%22lat%22%3A28.431%2C%22lon%22%3A-81.3076%7D
```
You can also build your own permalink. Any omitted settings will be filled with defaults. Here are a few examples:
```
https://weatherstar.netbymatt.com/?latLonQuery=Orlando+International+Airport
https://weatherstar.netbymatt.com/?kiosk=true
https://weatherstar.netbymatt.com/?settings-units-select=metric
```

### Kiosk mode
Kiosk mode can be activated by a checkbox on the page. Note that there is no way out of kiosk mode (except refresh or closing the browser), and the play/pause and other controls will not be available. This is deliberate as a browser&#039;s kiosk mode it intended not to be exited or significantly modified. A separate full-screen icon is available in the tool bar to go full-screen on a laptop or mobile browser.

It&#039;s also possible to enter kiosk mode using a permalink. First generate a [Permalink](#sharing-a-permalink-bookmarking), then to the end of it add `&amp;kiosk=true`. Opening this link will load all of the selected displays included in the Permalink, enter kiosk mode immediately upon loading and start playing the forecast.

### Default query string paramaters (environment variables)
When serving this via the built-in Express server, it&#039;s possible to define environment variables that direct the user to a default set of paramaters (like the  [Permalink](#sharing-a-permalink-bookmarking) above). If a user requests the root page at `http://localhost:8080/` the query string provided by environment variables will be appended to the url thus providing a default configuration.

Environment variables can be added to the command line as usual, or via a .env file which is parsed with [dotenv](https://github.com/motdotla/dotenv). Both methods have the same effect.

Environment variables that are to be added to the default query string are prefixed with `WSQS_` and then use the same key/value pairs generated by the [Permalink](#sharing-a-permalink-bookmarking) above, with the `- (dash)` character replaced by an `_ (underscore)`. For example, if you wanted to turn the travel forecast on, you would find `travel-checkbox=true` in the permalink, it&#039;s matching environment variable becomes `WSQS_travel_checkbox=true`.

## Music
The WeatherStar had wonderful background music from the smooth jazz and new age genres by artists of the time. Lists of the music that played are available by searching online, but it&#039;s all copyrighted music and would be difficult to provide as part of this repository.

I&#039;ve used AI tools to create WeatherStar-inspired music tracks that are unencumbered by copyright and are included in this repo. Too keep the size down, I&#039;ve only included 4 tracks. Additional tracks are in a companion repository [ws4kp-music](https://github.com/netbymatt/ws4kp-music).

If you&#039;re looking for the original music that played during forecasts [TWCClassics](https://twcclassics.com/audio/) has thurough documentation of playlists.

### Customizing the music
Placing .mp3 files in the `/server/music` folder will override the default music included in the repo. Subdirectories will not be scanned. When weatherstar loads in the browser it will load a list if available files and randomize the order when it starts playing. On each loop through the available tracks the order will again be shuffled. If you&#039;re using the static files method to host your WeatherStar music is located in `/music`.

If using docker, you must pass a local accessible folder to the container in the `/app/server/music` directory. 
```
docker run -p 8080:8080 -v /path/to/local/music:/app/server/music ghcr.io/netbymatt/ws4kp
```

### Music doesn&#039;t auto play
Ws4kp is muted by default, but if it was unmuted on the last visit it is coded to try and auto play music on subsequent visits. But, it&#039;s considered bad form to have a web site play music automatically on load, and I fully agree with this. [Chrome](https://developer.chrome.com/blog/autoplay/#media_engagement_index) and [Firefox](https://hacks.mozilla.org/2019/02/firefox-66-to-block-automatically-playing-audible-video-and-audio/) have extensive details on how and when auto play is allowed.

Chrome seems to be more lenient on auto play and will eventually let a site auto-play music if you&#039;re visited it enough recently and manually clicked to start playing music on each visit. It also has a flag you can add to the command line when launching Chrome: `chrome.exe --autoplay-policy=no-user-gesture-required`. This is the best solution when using Kiosk-style setup.

## Community Notes

Thanks to the WeatherStar community for providing these discussions to further extend your retro forecasts!

* [Stream as FFMPEG](https://github.com/netbymatt/ws4kp/issues/37#issuecomment-2008491948)
* [Weather like it&#039;s 1999](https://blog.scottlabs.io/2024/02/weather-like-its-1999/) Raspberry pi, streaming, music and CRT all combined into a complete solution.
* [ws4channels](https://github.com/rice9797/ws4channels) A Dockerized Node.js application to stream WeatherStar 4000 data into Channels DVR using Puppeteer and FFmpeg.

## Customization
A hook is provided as `/server/scripts/custom.js` to allow customizations to your own fork of this project, without accidentally pushing your customizations back upstream to the git repository. An sample file is provided at `/server/scripts/custom.sample.js` and should be renamed to `custom.js` activate it.

## Issue reporting and feature requests

Please do not report issues with api.weather.gov being down. It&#039;s a new service and not considered fully operational yet. I&#039;ve also observed that the API can go down on a regional basis (based on NWS office locations). This means that you may have problems getting data for, say, Chicago right now, but Dallas and others are working just fine.

Before reporting an issue or requesting a feature please consider that this is not intended to be a perfect recreation of the WeatherStar 4000, it&#039;s a best effort that fits within what&#039;s available from the API and within a web browser.

Note: not all units are converted to metric, if selected. Some text-based products such as warnings are simple text strings provided from the national weather service and thus have baked-in units such as &quot;gusts up to 60 mph.&quot; These values will not be converted.

## Related Projects

Not retro enough? Try the [Weatherstar 3000+](https://github.com/netbymatt/ws3kp)

## Use

Linking directly to the live web site at https://weatherstar.netbymatt.com is encouraged. As is using the live site for digital signage, home dashboards, streaming and public display. Please note the disclaimer below.

## Acknowledgements

This project is based on the work of [Mike Battaglia](https://github.com/vbguyny/ws4kp). It was forked from his work in August 2020.

* Mike Battaglia for the original project and all of the code which draws the weather displays. This code remains largely intact and was a huge amount of work to get exactly right. He&#039;s also responsible for all of the background graphics including the maps used in the application.
* The team at [TWCClassics](https://twcclassics.com/) for several resources.
	* A [font](https://twcclassics.com/downloads.html) set used on the original WeatherStar 4000
	* [Icon](https://twcclassics.com/downloads.html) sets
	* Countless photos and videos of WeatherStar 4000 forecasts used as references.
* The growing list of contributors to this repository

## Disclaimer

This web site should NOT be used in life threatening weather situations, or be relied on to inform the public of such situations. The Internet is an unreliable network subject to server and network outages and by nature is not suitable for such mission critical use. If you require such access to NWS data, please consider one of their subscription services. The authors of this web site shall not be held liable in the event of injury, death or property damage that occur as a result of disregarding this warning.

The WeatherSTAR 4000 unit and technology is owned by The Weather Channel. This web site is a free, non-profit work by fans. All of the back ground graphics of this web site were created from scratch.  The icons were created by Charles Abel and Nick Smith (http://twcclassics.com/downloads/icons.html) as well as by Malek Masoud.  The fonts were originally created by Nick Smith (http://twcclassics.com/downloads/fonts.html).

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[dequelabs/axe-core]]></title>
            <link>https://github.com/dequelabs/axe-core</link>
            <guid>https://github.com/dequelabs/axe-core</guid>
            <pubDate>Wed, 04 Jun 2025 00:04:55 GMT</pubDate>
            <description><![CDATA[Accessibility engine for automated Web UI testing]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/dequelabs/axe-core">dequelabs/axe-core</a></h1>
            <p>Accessibility engine for automated Web UI testing</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,389</p>
            <p>Forks: 817</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre># axe-core

[![License](https://img.shields.io/npm/l/axe-core.svg?color=c41)](LICENSE)
[![Version](https://img.shields.io/npm/v/axe-core.svg)](https://www.npmjs.com/package/axe-core)
[![NPM downloads](https://img.shields.io/npm/dw/axe-core.svg?color=080)![](https://img.shields.io/npm/dy/axe-core.svg?color=080&amp;label=)](https://npm-stat.com/charts.html?package=axe-core&amp;from=2017-01-01)
[![Commits](https://img.shields.io/github/commit-activity/y/dequelabs/axe-core.svg)](https://github.com/dequelabs/axe-core/commits/develop)
[![GitHub contributors](https://img.shields.io/github/contributors/dequelabs/axe-core.svg?color=080)](https://github.com/dequelabs/axe-core/graphs/contributors)
[![Join our Slack chat](https://img.shields.io/badge/slack-chat-purple.svg?logo=slack)](https://accessibility.deque.com/axe-community)
[![Package Quality](https://npm.packagequality.com/shield/axe-core.svg)](https://packagequality.com/#?package=axe-core)

Axe is an accessibility testing engine for websites and other HTML-based user interfaces. It&#039;s fast, secure, lightweight, and was built to seamlessly integrate with any existing test environment so you can automate accessibility testing alongside your regular functional testing.

[Sign up for axe news](https://hubs.ly/H0fsN0b0) to get the latest on axe features, future releases, and events.

## The Accessibility Rules

Axe-core has different types of rules, for WCAG 2.0, 2.1, 2.2 on level A, AA and AAA as well as a number of best practices that help you identify common accessibility practices like ensuring every page has an `h1` heading, and to help you avoid &quot;gotchas&quot; in ARIA like where an ARIA attribute you used will get ignored. The complete list of rules, grouped WCAG level and best practice, can be found in [doc/rule-descriptions.md](./doc/rule-descriptions.md).

With axe-core, you can find **on average 57% of WCAG issues automatically**. Additionally, axe-core will return elements as &quot;incomplete&quot; where axe-core could not be certain, and manual review is needed.

To catch bugs earlier in the development cycle we recommend using the [axe-linter vscode extension](https://marketplace.visualstudio.com/items?itemName=deque-systems.vscode-axe-linter). To improve test coverage even further we recommend the [intelligent guided tests](https://www.youtube.com/watch?v=AtsX0dPCG_4&amp;feature=youtu.be&amp;ab_channel=DequeSystems) in the [axe Extension](https://www.deque.com/axe/browser-extensions/).

## Getting started

First download the package:

```console
npm install axe-core --save-dev
```

Now include the javascript file in each of your iframes in your fixtures or test systems:

```html
&lt;script src=&quot;node_modules/axe-core/axe.min.js&quot;&gt;&lt;/script&gt;
```

Now insert calls at each point in your tests where a new piece of UI becomes visible or exposed:

```js
axe
  .run()
  .then(results =&gt; {
    if (results.violations.length) {
      throw new Error(&#039;Accessibility issues found&#039;);
    }
  })
  .catch(err =&gt; {
    console.error(&#039;Something bad happened:&#039;, err.message);
  });
```

## Philosophy

The web can only become an accessible, inclusive space if developers are empowered to take responsibility for accessibility testing and accessible coding practices.

Automated accessibility testing is a huge timesaver, it doesn&#039;t require special expertise, and it allows teams to focus expert resources on the accessibility issues that really need them. Unfortunately, most accessibility tools are meant to be run on sites and applications that have reached the end of the development process and often don&#039;t give clear or consistent results, causing frustration and delays just when you thought your product was ready to ship.

Axe was built to reflect how web development actually works. It works with all modern browsers, tools, and testing environments a dev team might use. With axe, accessibility testing can be performed as part of your unit testing, integration testing, browser testing, and any other functional testing your team already performs on a day-to-day basis. Building accessibility testing into the early development process saves time, resources, and all kinds of frustration.

## About axe - our Manifesto

- Axe is open source.
- It returns zero false positives (bugs notwithstanding).
- It&#039;s designed to work on all modern browsers and with whatever tools, frameworks, libraries and environments you use today.
- It&#039;s actively supported by [Deque Systems](https://www.deque.com), a major accessibility vendor.
- It integrates with your existing functional/acceptance automated tests.
- It automatically determines which rules to run based on the evaluation context.
- Axe supports in-memory fixtures, static fixtures, integration tests, and iframes of infinite depth.
- Axe is highly configurable.

## Supported Browsers

The [axe-core API](doc/API.md) fully supports the following browsers:

- Microsoft Edge v40 and above
- Google Chrome v42 and above
- Mozilla Firefox v38 and above
- Apple Safari v7 and above
- Internet Explorer v11 (DEPRECATED)

Support means that we will fix bugs and attempt to test each browser regularly. Only Chrome and Firefox are currently tested on every pull request.

There is limited support for JSDOM. We will attempt to make all rules compatible with JSDOM but where this is not possible, we recommend turning those rules off. Currently the `color-contrast` rule is known not to work with JSDOM.

We can only support environments where features are either natively supported or polyfilled correctly. We do not support the deprecated v0 Shadow DOM implementation.

## Contents of the API Package

The [axe-core API](doc/API.md) package consists of:

- `axe.js` - the JavaScript file that should be included in your web site under test (API)
- `axe.min.js` - a minified version of the above file

## Localization

Axe can be built using your local language. To do so, a localization file must be added to the `./locales` directory. This file must be named in the following manner: `&lt;langcode&gt;.json`. To build axe using this locale, instead of the default, run axe with the `--lang` flag, like so:

`grunt build --lang=nl`

or equivalently:

`npm run build -- --lang=nl`

This will create a new build for axe, called `axe.&lt;lang&gt;.js` and `axe.&lt;lang&gt;.min.js`. If you want to build all localized versions, simply pass in `--all-lang` instead. If you want to build multiple localized versions (but not all of them), you can pass in a comma-separated list of languages to the `--lang` flag, like `--lang=nl,ja`.

To create a new translation for axe, start by running `grunt translate --lang=&lt;langcode&gt;`. This will create a json file in the `./locales` directory, with the default English text in it for you to translate. Alternatively, you could copy `./locales/_template.json`. We welcome any localization for axe-core. For details on how to contribute, see the Contributing section below. For details on the message syntax, see [Check Message Template](/doc/check-message-template.md).

To update an existing translation file, re-run `grunt translate --lang=&lt;langcode&gt;`. This will add new messages used in English and remove messages which were not used in English.

Additionally, locale can be applied at runtime by passing a `locale` object to `axe.configure()`. The locale object must be of the same shape as existing locales in the `./locales` directory. For example:

```js
axe.configure({
  locale: {
    lang: &#039;de&#039;,
    rules: {
      accesskeys: {
        help: &#039;Der Wert des accesskey-Attributes muss einzigartig sein.&#039;
      }
      // ...
    },
    checks: {
      abstractrole: {
        fail: &#039;Abstrakte ARIA-Rollen dürfen nicht direkt verwendet werden.&#039;
      },
      &#039;aria-errormessage&#039;: {
        // Note: doT (https://github.com/olado/dot) templates are supported here.
        fail: &#039;Der Wert der aria-errormessage ${data.values}` muss eine Technik verwenden, um die Message anzukündigen (z. B., aria-live, aria-describedby, role=alert, etc.).&#039;
      }
      // ...
    }
  }
});
```

### Supported Locales

Axe-core supports the following locales. Do note that since locales are contributed by our community, they are not guaranteed to include all translations needed in a release.

- Basque
- Danish
- Dutch
- French
- German
- Hebrew
- Japanese
- Korean
- Norwegian (Bokmål)
- Polish
- Portuguese (Brazilian)
- Spanish
- Greek
- Italian
- Simplified Chinese
- Traditional Chinese

## Updates &amp; Security

Axe-core has a new minor release every 3 to 5 months, which usually introduces new rules and features. We recommend scheduling time to upgrade to these versions. Security updates will be made available for minor version lines up to **18 months old**.

- See [release and support](doc/release-and-support.md) for details on the frequency of releases, long-term support and recommendations on upgrading axe-core.
- See [backward compatibility](doc/backwards-compatibility-doc.md) for details on the types of changes different releases may introduce.

## Deque Trademarks Policy

DEQUE, DEQUELABS, AXE®, and AXE-CORE® are trademarks of Deque Systems, Inc. Use of the Deque trademarks must be in accordance with [Deque&#039;s trademark policy](https://www.deque.com/legal/trademarks/).

## Supported ARIA Roles and Attributes.

Refer [axe-core ARIA support](./doc/aria-supported.md) for a complete list of ARIA supported roles and attributes by axe.

## Contributing

Read the [Proposing Axe-core Rules guide](./doc/rule-proposal.md)

Read the [documentation on the architecture](./doc/developer-guide.md)

Read the [documentation on contributing](CONTRIBUTING.md)

## Projects using axe-core

[List of projects using axe-core](doc/projects.md)

## Acknowledgements

Thanks to Marat Dulin for his [css-selector-parser](https://www.npmjs.com/package/css-selector-parser) implementation which is included for shadow DOM support. Another thank you to the [Slick Parser](https://github.com/mootools/slick/blob/master/Source/Slick.Parser.js) implementers for their contribution, we have used some of their algorithms in our shadow DOM support code. Thanks to Lea Verou and Chris Lilley for their [colorjs.io](https://colorjs.io/) library which we have used for converting between color formats.

## Licenses

Axe-core is distributed under the [Mozilla Public License, version 2.0](LICENSE). It comes bundled with several dependencies which are distributed under their own terms. (See [LICENSE-3RD-PARTY.txt](LICENSE-3RD-PARTY.txt))
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[eslint/eslint]]></title>
            <link>https://github.com/eslint/eslint</link>
            <guid>https://github.com/eslint/eslint</guid>
            <pubDate>Wed, 04 Jun 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[Find and fix problems in your JavaScript code.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/eslint/eslint">eslint/eslint</a></h1>
            <p>Find and fix problems in your JavaScript code.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 25,984</p>
            <p>Forks: 4,721</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>[![npm version](https://img.shields.io/npm/v/eslint.svg)](https://www.npmjs.com/package/eslint)
[![Downloads](https://img.shields.io/npm/dm/eslint.svg)](https://www.npmjs.com/package/eslint)
[![Build Status](https://github.com/eslint/eslint/workflows/CI/badge.svg)](https://github.com/eslint/eslint/actions)
&lt;br&gt;
[![Open Collective Backers](https://img.shields.io/opencollective/backers/eslint)](https://opencollective.com/eslint)
[![Open Collective Sponsors](https://img.shields.io/opencollective/sponsors/eslint)](https://opencollective.com/eslint)

# ESLint

[Website](https://eslint.org) |
[Configure ESLint](https://eslint.org/docs/latest/use/configure) |
[Rules](https://eslint.org/docs/rules/) |
[Contribute to ESLint](https://eslint.org/docs/latest/contribute) |
[Report Bugs](https://eslint.org/docs/latest/contribute/report-bugs) |
[Code of Conduct](https://eslint.org/conduct) |
[Twitter](https://twitter.com/geteslint) |
[Discord](https://eslint.org/chat) |
[Mastodon](https://fosstodon.org/@eslint) |
[Bluesky](https://bsky.app/profile/eslint.org)

ESLint is a tool for identifying and reporting on patterns found in ECMAScript/JavaScript code. In many ways, it is similar to JSLint and JSHint with a few exceptions:

- ESLint uses [Espree](https://github.com/eslint/js/tree/main/packages/espree) for JavaScript parsing.
- ESLint uses an AST to evaluate patterns in code.
- ESLint is completely pluggable, every single rule is a plugin and you can add more at runtime.

## Table of Contents

1. [Installation and Usage](#installation-and-usage)
1. [Configuration](#configuration)
1. [Version Support](#version-support)
1. [Code of Conduct](#code-of-conduct)
1. [Filing Issues](#filing-issues)
1. [Frequently Asked Questions](#frequently-asked-questions)
1. [Releases](#releases)
1. [Security Policy](#security-policy)
1. [Semantic Versioning Policy](#semantic-versioning-policy)
1. [License](#license)
1. [Team](#team)
1. [Sponsors](#sponsors)
1. [Technology Sponsors](#technology-sponsors) &lt;!-- markdownlint-disable-line MD051 --&gt;

## Installation and Usage

Prerequisites: [Node.js](https://nodejs.org/) (`^18.18.0`, `^20.9.0`, or `&gt;=21.1.0`) built with SSL support. (If you are using an official Node.js distribution, SSL is always built in.)

You can install and configure ESLint using this command:

```shell
npm init @eslint/config@latest
```

After that, you can run ESLint on any file or directory like this:

```shell
npx eslint yourfile.js
```

### pnpm Installation

To use ESLint with pnpm, we recommend setting up a `.npmrc` file with at least the following settings:

```text
auto-install-peers=true
node-linker=hoisted
```

This ensures that pnpm installs dependencies in a way that is more compatible with npm and is less likely to produce errors.

## Configuration

You can configure rules in your `eslint.config.js` files as in this example:

```js
import { defineConfig } from &quot;eslint/config&quot;;

export default defineConfig([
	{
		files: [&quot;**/*.js&quot;, &quot;**/*.cjs&quot;, &quot;**/*.mjs&quot;],
		rules: {
			&quot;prefer-const&quot;: &quot;warn&quot;,
			&quot;no-constant-binary-expression&quot;: &quot;error&quot;,
		},
	},
]);
```

The names `&quot;prefer-const&quot;` and `&quot;no-constant-binary-expression&quot;` are the names of [rules](https://eslint.org/docs/rules) in ESLint. The first value is the error level of the rule and can be one of these values:

- `&quot;off&quot;` or `0` - turn the rule off
- `&quot;warn&quot;` or `1` - turn the rule on as a warning (doesn&#039;t affect exit code)
- `&quot;error&quot;` or `2` - turn the rule on as an error (exit code will be 1)

The three error levels allow you fine-grained control over how ESLint applies rules (for more configuration options and details, see the [configuration docs](https://eslint.org/docs/latest/use/configure)).

## Version Support

The ESLint team provides ongoing support for the current version and six months of limited support for the previous version. Limited support includes critical bug fixes, security issues, and compatibility issues only.

ESLint offers commercial support for both current and previous versions through our partners, [Tidelift][tidelift] and [HeroDevs][herodevs].

See [Version Support](https://eslint.org/version-support) for more details.

## Code of Conduct

ESLint adheres to the [OpenJS Foundation Code of Conduct](https://eslint.org/conduct).

## Filing Issues

Before filing an issue, please be sure to read the guidelines for what you&#039;re reporting:

- [Bug Report](https://eslint.org/docs/latest/contribute/report-bugs)
- [Propose a New Rule](https://eslint.org/docs/latest/contribute/propose-new-rule)
- [Proposing a Rule Change](https://eslint.org/docs/latest/contribute/propose-rule-change)
- [Request a Change](https://eslint.org/docs/latest/contribute/request-change)

## Frequently Asked Questions

### Does ESLint support JSX?

Yes, ESLint natively supports parsing JSX syntax (this must be enabled in [configuration](https://eslint.org/docs/latest/use/configure)). Please note that supporting JSX syntax _is not_ the same as supporting React. React applies specific semantics to JSX syntax that ESLint doesn&#039;t recognize. We recommend using [eslint-plugin-react](https://www.npmjs.com/package/eslint-plugin-react) if you are using React and want React semantics.

### Does Prettier replace ESLint?

No, ESLint and Prettier have different jobs: ESLint is a linter (looking for problematic patterns) and Prettier is a code formatter. Using both tools is common, refer to [Prettier&#039;s documentation](https://prettier.io/docs/en/install#eslint-and-other-linters) to learn how to configure them to work well with each other.

### What ECMAScript versions does ESLint support?

ESLint has full support for ECMAScript 3, 5, and every year from 2015 up until the most recent stage 4 specification (the default). You can set your desired ECMAScript syntax and other settings (like global variables) through [configuration](https://eslint.org/docs/latest/use/configure).

### What about experimental features?

ESLint&#039;s parser only officially supports the latest final ECMAScript standard. We will make changes to core rules in order to avoid crashes on stage 3 ECMAScript syntax proposals (as long as they are implemented using the correct experimental ESTree syntax). We may make changes to core rules to better work with language extensions (such as JSX, Flow, and TypeScript) on a case-by-case basis.

In other cases (including if rules need to warn on more or fewer cases due to new syntax, rather than just not crashing), we recommend you use other parsers and/or rule plugins. If you are using Babel, you can use [@babel/eslint-parser](https://www.npmjs.com/package/@babel/eslint-parser) and [@babel/eslint-plugin](https://www.npmjs.com/package/@babel/eslint-plugin) to use any option available in Babel.

Once a language feature has been adopted into the ECMAScript standard (stage 4 according to the [TC39 process](https://tc39.github.io/process-document/)), we will accept issues and pull requests related to the new feature, subject to our [contributing guidelines](https://eslint.org/docs/latest/contribute). Until then, please use the appropriate parser and plugin(s) for your experimental feature.

### Which Node.js versions does ESLint support?

ESLint updates the supported Node.js versions with each major release of ESLint. At that time, ESLint&#039;s supported Node.js versions are updated to be:

1. The most recent maintenance release of Node.js
1. The lowest minor version of the Node.js LTS release that includes the features the ESLint team wants to use.
1. The Node.js Current release

ESLint is also expected to work with Node.js versions released after the Node.js Current release.

Refer to the [Quick Start Guide](https://eslint.org/docs/latest/use/getting-started#prerequisites) for the officially supported Node.js versions for a given ESLint release.

### Where to ask for help?

Open a [discussion](https://github.com/eslint/eslint/discussions) or stop by our [Discord server](https://eslint.org/chat).

### Why doesn&#039;t ESLint lock dependency versions?

Lock files like `package-lock.json` are helpful for deployed applications. They ensure that dependencies are consistent between environments and across deployments.

Packages like `eslint` that get published to the npm registry do not include lock files. `npm install eslint` as a user will respect version constraints in ESLint&#039;s `package.json`. ESLint and its dependencies will be included in the user&#039;s lock file if one exists, but ESLint&#039;s own lock file would not be used.

We intentionally don&#039;t lock dependency versions so that we have the latest compatible dependency versions in development and CI that our users get when installing ESLint in a project.

The Twilio blog has a [deeper dive](https://www.twilio.com/blog/lockfiles-nodejs) to learn more.

## Releases

We have scheduled releases every two weeks on Friday or Saturday. You can follow a [release issue](https://github.com/eslint/eslint/issues?q=is%3Aopen+is%3Aissue+label%3Arelease) for updates about the scheduling of any particular release.

## Security Policy

ESLint takes security seriously. We work hard to ensure that ESLint is safe for everyone and that security issues are addressed quickly and responsibly. Read the full [security policy](https://github.com/eslint/.github/blob/master/SECURITY.md).

## Semantic Versioning Policy

ESLint follows [semantic versioning](https://semver.org). However, due to the nature of ESLint as a code quality tool, it&#039;s not always clear when a minor or major version bump occurs. To help clarify this for everyone, we&#039;ve defined the following semantic versioning policy for ESLint:

- Patch release (intended to not break your lint build)
    - A bug fix in a rule that results in ESLint reporting fewer linting errors.
    - A bug fix to the CLI or core (including formatters).
    - Improvements to documentation.
    - Non-user-facing changes such as refactoring code, adding, deleting, or modifying tests, and increasing test coverage.
    - Re-releasing after a failed release (i.e., publishing a release that doesn&#039;t work for anyone).
- Minor release (might break your lint build)
    - A bug fix in a rule that results in ESLint reporting more linting errors.
    - A new rule is created.
    - A new option to an existing rule that does not result in ESLint reporting more linting errors by default.
    - A new addition to an existing rule to support a newly-added language feature (within the last 12 months) that will result in ESLint reporting more linting errors by default.
    - An existing rule is deprecated.
    - A new CLI capability is created.
    - New capabilities to the public API are added (new classes, new methods, new arguments to existing methods, etc.).
    - A new formatter is created.
    - `eslint:recommended` is updated and will result in strictly fewer linting errors (e.g., rule removals).
- Major release (likely to break your lint build)
    - `eslint:recommended` is updated and may result in new linting errors (e.g., rule additions, most rule option updates).
    - A new option to an existing rule that results in ESLint reporting more linting errors by default.
    - An existing formatter is removed.
    - Part of the public API is removed or changed in an incompatible way. The public API includes:
        - Rule schemas
        - Configuration schema
        - Command-line options
        - Node.js API
        - Rule, formatter, parser, plugin APIs

According to our policy, any minor update may report more linting errors than the previous release (ex: from a bug fix). As such, we recommend using the tilde (`~`) in `package.json` e.g. `&quot;eslint&quot;: &quot;~3.1.0&quot;` to guarantee the results of your builds.

## License

MIT License

Copyright OpenJS Foundation and other contributors, &lt;www.openjsf.org&gt;

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &quot;Software&quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

## Team

These folks keep the project moving and are resources for help.

&lt;!-- NOTE: This section is autogenerated. Do not manually edit.--&gt;

&lt;!--teamstart--&gt;

### Technical Steering Committee (TSC)

The people who manage releases, review feature requests, and meet regularly to ensure ESLint is properly maintained.

&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;11%&quot;&gt;
&lt;a href=&quot;https://github.com/nzakas&quot;&gt;
&lt;img src=&quot;https://github.com/nzakas.png?s=75&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;Nicholas C. Zakas&#039;s Avatar&quot;&gt;&lt;br /&gt;
Nicholas C. Zakas
&lt;/a&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;11%&quot;&gt;
&lt;a href=&quot;https://github.com/fasttime&quot;&gt;
&lt;img src=&quot;https://github.com/fasttime.png?s=75&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;Francesco Trotta&#039;s Avatar&quot;&gt;&lt;br /&gt;
Francesco Trotta
&lt;/a&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;11%&quot;&gt;
&lt;a href=&quot;https://github.com/mdjermanovic&quot;&gt;
&lt;img src=&quot;https://github.com/mdjermanovic.png?s=75&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;Milos Djermanovic&#039;s Avatar&quot;&gt;&lt;br /&gt;
Milos Djermanovic
&lt;/a&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

### Reviewers

The people who review and implement new features.

&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;11%&quot;&gt;
&lt;a href=&quot;https://github.com/aladdin-add&quot;&gt;
&lt;img src=&quot;https://github.com/aladdin-add.png?s=75&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;唯然&#039;s Avatar&quot;&gt;&lt;br /&gt;
唯然
&lt;/a&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;11%&quot;&gt;
&lt;a href=&quot;https://github.com/snitin315&quot;&gt;
&lt;img src=&quot;https://github.com/snitin315.png?s=75&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;Nitin Kumar&#039;s Avatar&quot;&gt;&lt;br /&gt;
Nitin Kumar
&lt;/a&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

### Committers

The people who review and fix bugs and help triage issues.

&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;11%&quot;&gt;
&lt;a href=&quot;https://github.com/JoshuaKGoldberg&quot;&gt;
&lt;img src=&quot;https://github.com/JoshuaKGoldberg.png?s=75&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;Josh Goldberg ✨&#039;s Avatar&quot;&gt;&lt;br /&gt;
Josh Goldberg ✨
&lt;/a&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;11%&quot;&gt;
&lt;a href=&quot;https://github.com/Tanujkanti4441&quot;&gt;
&lt;img src=&quot;https://github.com/Tanujkanti4441.png?s=75&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;Tanuj Kanti&#039;s Avatar&quot;&gt;&lt;br /&gt;
Tanuj Kanti
&lt;/a&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;11%&quot;&gt;
&lt;a href=&quot;https://github.com/lumirlumir&quot;&gt;
&lt;img src=&quot;https://github.com/lumirlumir.png?s=75&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;루밀LuMir&#039;s Avatar&quot;&gt;&lt;br /&gt;
루밀LuMir
&lt;/a&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

### Website Team

Team members who focus specifically on eslint.org

&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;11%&quot;&gt;
&lt;a href=&quot;https://github.com/amareshsm&quot;&gt;
&lt;img src=&quot;https://github.com/amareshsm.png?s=75&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;Amaresh  S M&#039;s Avatar&quot;&gt;&lt;br /&gt;
Amaresh  S M
&lt;/a&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;11%&quot;&gt;
&lt;a href=&quot;https://github.com/harish-sethuraman&quot;&gt;
&lt;img src=&quot;https://github.com/harish-sethuraman.png?s=75&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;Harish&#039;s Avatar&quot;&gt;&lt;br /&gt;
Harish
&lt;/a&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;11%&quot;&gt;
&lt;a href=&quot;https://github.com/kecrily&quot;&gt;
&lt;img src=&quot;https://github.com/kecrily.png?s=75&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;Percy Ma&#039;s Avatar&quot;&gt;&lt;br /&gt;
Percy Ma
&lt;/a&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;!--teamend--&gt;

&lt;!-- NOTE: This section is autogenerated. Do not manually edit.--&gt;
&lt;!--sponsorsstart--&gt;

## Sponsors

The following companies, organizations, and individuals support ESLint&#039;s ongoing maintenance and development. [Become a Sponsor](https://eslint.org/donate)
to get your logo on our READMEs and [website](https://eslint.org/sponsors).

&lt;h3&gt;Diamond Sponsors&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.ag-grid.com/&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/ag-grid/bec0580/logo.png&quot; alt=&quot;AG Grid&quot; height=&quot;128&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Platinum Sponsors&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://automattic.com&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/automattic/d0ef3e1/logo.png&quot; alt=&quot;Automattic&quot; height=&quot;128&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.airbnb.com/&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/airbnb/d327d66/logo.png&quot; alt=&quot;Airbnb&quot; height=&quot;128&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Gold Sponsors&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://qlty.sh/&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/qltysh/33d157d/logo.png&quot; alt=&quot;Qlty Software&quot; height=&quot;96&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://trunk.io/&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/trunkio/fb92d60/avatar.png&quot; alt=&quot;trunk.io&quot; height=&quot;96&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://shopify.engineering/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8085&quot; alt=&quot;Shopify&quot; height=&quot;96&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Silver Sponsors&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://vite.dev/&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/vite/e6d15e1/logo.png&quot; alt=&quot;Vite&quot; height=&quot;64&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://liftoff.io/&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/liftoff/5c4fa84/logo.png&quot; alt=&quot;Liftoff&quot; height=&quot;64&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://americanexpress.io&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3853301&quot; alt=&quot;American Express&quot; height=&quot;64&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://stackblitz.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/28635252&quot; alt=&quot;StackBlitz&quot; height=&quot;64&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Bronze Sponsors&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://cybozu.co.jp/&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/cybozu/933e46d/logo.png&quot; alt=&quot;Cybozu&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.crosswordsolver.org/anagram-solver/&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/anagram-solver/2666271/logo.png&quot; alt=&quot;Anagram Solver&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://icons8.com/&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/icons8/7fa1641/logo.png&quot; alt=&quot;Icons8&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.com&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/discordapp/f9645d9/logo.png&quot; alt=&quot;Discord&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.gitbook.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7111340&quot; alt=&quot;GitBook&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://nolebase.ayaka.io&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11081491&quot; alt=&quot;Neko&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://nx.dev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/23692104&quot; alt=&quot;Nx&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opensource.mercedes-benz.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/34240465&quot; alt=&quot;Mercedes-Benz Group&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://herocoders.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/37549774&quot; alt=&quot;HeroCoders&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.lambdatest.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/171592363&quot; alt=&quot;LambdaTest&quot; height=&quot;32&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Technology Sponsors&lt;/h3&gt;
Technology sponsors allow us to use their products and services for free as part of a contribution to the open source ecosystem and our work.
&lt;p&gt;&lt;a href=&quot;https://netlify.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eslint/eslint.org/main/src/assets/images/techsponsors/netlify-icon.svg&quot; alt=&quot;Netlify&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://algolia.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eslint/eslint.org/main/src/assets/images/techsponsors/algolia-icon.svg&quot; alt=&quot;Algolia&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://1password.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eslint/eslint.org/main/src/assets/images/techsponsors/1password-icon.svg&quot; alt=&quot;1Password&quot; height=&quot;32&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;!--sponsorsend--&gt;

[tidelift]: https://tidelift.com/funding/github/npm/eslint
[herodevs]: https://www.herodevs.com/support/eslint-nes?utm_source=ESLintWebsite&amp;utm_medium=ESLintWebsite&amp;utm_campaign=ESLintNES&amp;utm_id=ESLintNES
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>