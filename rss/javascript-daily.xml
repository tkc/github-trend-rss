<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Thu, 15 May 2025 00:04:50 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[DataDog/documentation]]></title>
            <link>https://github.com/DataDog/documentation</link>
            <guid>https://github.com/DataDog/documentation</guid>
            <pubDate>Thu, 15 May 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[The source for Datadog's documentation site.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/DataDog/documentation">DataDog/documentation</a></h1>
            <p>The source for Datadog's documentation site.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 513</p>
            <p>Forks: 1,167</p>
            <p>Stars today: 1 star today</p>
            <h2>README</h2><pre># Documentation site for Datadog

Welcome to the Datadog documentation repository. The markdown stored in this repo is published to the [Datadog documentation site][17] using [hugo][1], a static website generation tool.

## Contribute to the docs

Contributions are encouraged! If you notice something on one of the pages that needs an edit, open a pull request in this repo for the documentation team to review

Most pages on the documentation site feature an **Edit** button that sends you to the source file in this repo. You can make an edit straight from the GitHub website!

![The edit button on a docs page](static/images/edit_link.png)

For more information on contributing, see the [contribution guidelines][18].

## Working on Docs

### Outside Contributors
Follow these steps if you are NOT a Datadog employee:

- Fork the master branch.
- Consult our [contributing guidelines][8].
- When you&#039;re ready to finalize your changes, commit them and make a pull request back to `DataDog/master`.
- A Datadog technical writer might change your PR title with a DOCS ticket number, such as &quot;[DOCS-9000],&quot; which means it has been added to the team&#039;s internal Jira queue to triage and review. No action is necessary from you if we change the title of your PR.

### Datadog Staff
Follow these steps if you are a Datadog employee:

- Always branch off of master; never commit directly to master.
- You MUST name your branch `&lt;name&gt;/&lt;description&gt;`. If you do not include the forward slash (`/`), the GitLab pipeline won&#039;t run, you won&#039;t get a branch preview, and your pull request will not pass in CI. Getting a branch preview makes it easier for us to check for any issues with your PR, such as broken links. Using a [Slack username][21] also ensures you get build notifications in Slack.
- Consult our [contributing guidelines][8].
- When you&#039;re ready to commit, create a new pull request to master from your branch.
- Use GitHub&#039;s [draft pull request][15] feature and appropriate labels such as &quot;Do Not Merge&quot; or &quot;Work in Progress&quot; until your PR is ready to be merged and live on production.
- If you&#039;ve named your branch correctly, a GitHub bot posts a link to the docs preview website for your PR. After the preview build completes, you can use the link to preview your changes.
- Running the build locally is optional. If you followed the branch naming conventions above, your pull request should generate a preview. For information on local builds, see the [Build setup guide][20].

### A note about markdown

This site uses [Goldmark][9] for markdown, which is compliant with [CommonMark 0.29][10].

If you include ANY Markdown in a file, give it a `.md` extension.

Make sure all files are lowercase. Macs are case-insensitive when creating links to images and pages, but our build server is not, so tests may work locally, but the site will fail in production.

## Releasing

Merging to `master` triggers an automatic deployment. This process typically begins within 10 minutes and usually takes around 35 minutes to complete, though these times may vary. 

## How to add a new integration

[See the dedicated doc page][11].

[1]: https://gohugo.io
[2]: https://nodejs.org/en/download/package-manager#macos
[3]: https://www.python.org/downloads
[4]: https://github.com/pyenv/pyenv#unixmacos
[5]: https://github.com/DataDog/documentation/blob/master/Makefile.config.example
[6]: https://github.com/DataDog/documentation/wiki/Github-personal-token
[7]: https://github.com/DataDog/documentation/wiki/Documentation-Build
[8]: https://github.com/DataDog/documentation/blob/master/CONTRIBUTING.md
[9]: https://github.com/yuin/goldmark
[10]: https://spec.commonmark.org/0.29/
[11]: https://docs.datadoghq.com/developers/integrations
[12]: https://www.docker.com/products/docker-desktop/
[13]: https://gohugo.io/getting-started/installing/
[14]: https://golang.org/doc/install
[15]: https://github.blog/2019-02-14-introducing-draft-pull-requests/
[16]: https://github.com/DataDog/documentation#docker-development
[17]: https://docs.datadoghq.com
[18]: /CONTRIBUTING.md
[19]: https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account
[20]: https://datadoghq.atlassian.net/wiki/spaces/docs4docs/pages/3960766866/Build+setup+guide
[21]: https://www.highviewapps.com/kb/how-do-i-find-my-slack-username/
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[chinese-poetry/chinese-poetry]]></title>
            <link>https://github.com/chinese-poetry/chinese-poetry</link>
            <guid>https://github.com/chinese-poetry/chinese-poetry</guid>
            <pubDate>Thu, 15 May 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[The most comprehensive database of Chinese poetry 🧶最全中华古诗词数据库, 唐宋两朝近一万四千古诗人, 接近5.5万首唐诗加26万宋诗. 两宋时期1564位词人，21050首词。]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/chinese-poetry/chinese-poetry">chinese-poetry/chinese-poetry</a></h1>
            <p>The most comprehensive database of Chinese poetry 🧶最全中华古诗词数据库, 唐宋两朝近一万四千古诗人, 接近5.5万首唐诗加26万宋诗. 两宋时期1564位词人，21050首词。</p>
            <p>Language: JavaScript</p>
            <p>Stars: 49,222</p>
            <p>Forks: 9,880</p>
            <p>Stars today: 71 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/chinese-poetry/chinese-poetry&quot;&gt;
      &lt;img src=&quot;https://avatars3.githubusercontent.com/u/30764933?s=200&amp;v=4&quot; alt=&quot;chinese-poetry&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h2 align=&quot;center&quot;&gt;chinese-poetry: 最全中文诗歌古典文集数据库&lt;/h2&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://travis-ci.com/chinese-poetry/chinese-poetry&quot; rel=&quot;nofollow&quot;&gt;
    &lt;img height=&quot;28px&quot; alt=&quot;Build Status&quot; src=&quot;https://img.shields.io/travis/chinese-poetry/chinese-poetry?style=for-the-badge&quot; style=&quot;max-width:100%;&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/chinese-poetry/chinese-poetry/blob/master/LICENSE&quot;&gt;
    &lt;img height=&quot;28px&quot; alt=&quot;License&quot; src=&quot;http://img.shields.io/badge/license-mit-blue.svg?style=for-the-badge&quot; style=&quot;max-width:100%;&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/chinese-poetry/chinese-poetry/graphs/contributors&quot;&gt;
    &lt;img height=&quot;28px&quot; alt=&quot;Contributors&quot; src=&quot;https://img.shields.io/github/contributors/chinese-poetry/chinese-poetry.svg?style=for-the-badge&quot; style=&quot;max-width:100%;&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://www.patreon.com/jackeygao&quot; rel=&quot;nofollow&quot;&gt;
    &lt;img height=&quot;28px&quot; alt=&quot;Patreon&quot; src=&quot;https://img.shields.io/endpoint.svg?url=https%3A%2F%2Fshieldsio-patreon.vercel.app%2Fapi%3Fusername%3Djackeygao%26type%3Dpledges&amp;style=for-the-badge&quot; style=&quot;max-width:100%;&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;


最全的中华古典文集数据库，包含 5.5 万首唐诗、26 万首宋诗、2.1 万首宋词和其他古典文集。诗人包括唐宋两朝近 1.4 万古诗人，和两宋时期 1.5 千古词人。数据来源于互联网。

**为什么要做这个仓库?** 古诗是中华民族乃至全世界的瑰宝，我们应该传承下去，虽然有古典文集，但大多数人并没有拥有这些书籍。从某种意义上来说，这些庞大的文集离我们是有一定距离的。而电子版方便拷贝，所以此开源数据库诞生了。此数据库通过 JSON 格式分发，可以让你很方便的开始你的项目。

古诗采集没有记录过程，因为古诗数据庞大，目标网站有限制，采集过程经常中断超过了一个星期。2017 年新加入全宋词，[全宋词爬取过程及数据分析](https://jackeygao.github.io/r/words/crawl-ci.html)。

## 高频词分析图

&lt;details open&gt;
  &lt;summary&gt;&lt;b&gt;宋词受欢迎的词牌名&lt;/b&gt;&lt;/summary&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/jackeygao/chinese-poetry/master/images/ci_rhythmic_topK.png&quot; alt=&quot;两宋喜欢的词牌名&quot;&gt;
&lt;/div&gt;
&lt;/details&gt;

&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;宋词高频词&lt;/b&gt;&lt;/summary&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/jackeygao/chinese-poetry/master/images/ci_words_topK.png&quot; alt=&quot;宋词高频词&quot; style=&quot;max-width:100%;&quot;&gt;
&lt;/details&gt;

&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;宋词作者作品榜&lt;/b&gt;&lt;/summary&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/jackeygao/chinese-poetry/master/images/ci_author_topK.png&quot; alt=&quot;宋词作者作品榜&quot; style=&quot;max-width:100%;&quot;&gt;
&lt;/details&gt;

&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;唐诗高频词&lt;/b&gt;&lt;/summary&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/jackeygao/chinese-poetry/master/images/tang_text_topK.png&quot; alt=&quot;唐诗高频词&quot; style=&quot;max-width:100%;&quot;&gt;
&lt;/details&gt;

&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;唐诗作者作品榜&lt;/b&gt;&lt;/summary&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/jackeygao/chinese-poetry/master/images/tang_author_topK.png&quot; alt=&quot;唐诗作者作品榜&quot; style=&quot;max-width:100%;&quot;&gt;
&lt;/details&gt;

&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;宋诗高频词&lt;/b&gt;&lt;/summary&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/jackeygao/chinese-poetry/master/images/song_text_topK.png&quot; alt=&quot;宋诗高频词&quot; style=&quot;max-width:100%;&quot;&gt;
&lt;/details&gt;

&lt;details&gt;
  &lt;summary&gt;&lt;b&gt;宋诗作者作品榜&lt;/b&gt;&lt;/summary&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/jackeygao/chinese-poetry/master/images/song_author_topK.png&quot; alt=&quot;宋诗作者作品榜&quot; style=&quot;max-width:100%;&quot;&gt;
&lt;/details&gt;

## 数据集

- [唐诗宋诗](./全唐诗)
- [全宋词](./宋词)
- [五代·花间集](./五代诗词/huajianji)
- [五代·南唐二主词](./五代诗词/nantang)
- [论语](./论语)
- [诗经](./诗经)
- [幽梦影](./幽梦影)
- [四书五经](./四书五经)
- [蒙学](./蒙学)
- [纳兰性德诗集](./纳兰性德)
- [御定全唐詩](./御定全唐詩)


## 贡献

本项目目的是借助技术来生成格式化(JSON)数据，让开发者更方便快速的构建诗词类应用程序。身单力薄，欢迎更多人来维护，你可以通过以下方法来参与贡献：

- 直接提交 PR 或者通过 issue 讨论来优化完善此数据库，理论上古诗歌体非宗教类都欢迎加入，部分有争议性的数据需要社区投票讨论决定是否加入。关于诗句的纠错在创建 PR 时请标明出处。更多规范请[参考贡献规范文档](https://github.com/chinese-poetry/chinese-poetry/wiki/%E5%8F%82%E4%B8%8E%E8%B4%A1%E7%8C%AE%E8%A7%84%E8%8C%83)。

- 如果你没有办法直接参与完善的过程，你也可以通过 「[爱发电赞助](https://afdian.net/a/chinese-poetry)」  「[Patreon 周期性赞助](https://www.patreon.com/jackeygao)」 的形式来持续帮助并激励我去优化完善此数据库。如果您不喜欢周期性赞助，你也可以通过「[支付宝](https://github.com/jackeyGao/JackeyGao.github.io/blob/master/static/images/alipay.png)」或者「[微信赞赏码](https://github.com/jackeyGao/JackeyGao.github.io/blob/master/static/images/wechat.jpg)」进行一次性赞助(备注留下邮箱)。

- 如有建议或吐槽，欢迎联系我的邮箱 gaojunqi@outlook.com。

无论通过哪种形式贡献最终都会使之变得更好！

### 赞助者

无

### 贡献者

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;https://opencollective.com/chinese-poetry/contributors.svg?width=890&amp;button=false&quot; alt=&quot;Contributors&quot;&gt;
&lt;/p&gt;

## 案例展示

&lt;details&gt;
  &lt;summary&gt;案例展示&lt;/summary&gt;
  
- [中文诗歌主页](https://chinese-poetry.github.io)是一个基于浏览器的诗词网站，包含唐诗三百首、宋词三百首等文集。
- [animalize](https://github.com/animalize) **/** [QuanTangshi](https://github.com/animalize/QuanTangshi)  *离线全唐诗 Android*
- [justdark](https://github.com/justdark) **/** [pytorch-poetry-gen](https://github.com/justdark/pytorch-poetry-gen)  *a char-RNN based on pytorch*
- [Clover27](https://github.com/Clover27) **/** [ancient-Chinese-poem-generator](https://github.com/Clover27/ancient-Chinese-poem-generator)  *Ancient-Chinese-Poem-Generator*
- [chinese-poetry](https://github.com/chinese-poetry) **/** [poetry-calendar](http://chinese-poetry.github.io/poetry-calendar/)  *诗词周历*
- [chenyuntc](https://github.com/chenyuntc) **/** [pytorch-book](https://github.com/chenyuntc/pytorch-book/blob/master/chapter9-神经网络写诗(CharRNN)/) *简体唐诗生成(char-RNN)，可生成藏头诗，自定义诗歌意境，前缀等。*
- [okcy1016](https://github.com/okcy1016) **/** [poetry-desktop](https://github.com/okcy1016/poetry-desktop/) *诗词桌面*
- [huangjianke](https://github.com/huangjianke) **/** [weapp-poem](https://github.com/huangjianke/weapp-poem/) *诗词墨客 小程序版*
- [汉字之美](https://hz.xusenlin.com/) *汉字之美是一个方便查询的诗词网站，简洁干净，方便使用。*
- [PaddlePaddle](https://github.com/PaddlePaddle) **/** [PaddleNLP](https://github.com/PaddlePaddle/PaddleNLP#%E4%BA%A4%E4%BA%92%E5%BC%8Fnotebook%E6%95%99%E7%A8%8B) *基于ERNIE-GEN(Transformer)的深度学习诗词生成，可自行修改逻辑来生成多种诗词风格。*
- [Harold-y](https://github.com/Harold-y) **/** [chinese-poetry-db-web](https://github.com/Harold-y/chinese-poetry-db-web) *基于本仓库的MySQL DB整合 + 诗词Web端展示与检索*
  
&lt;/details&gt;

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=chinese-poetry/chinese-poetry&amp;type=Date)](https://star-history.com/#chinese-poetry/chinese-poetry&amp;Date)

## License

[MIT](https://github.com/chinese-poetry/chinese-poetry/blob/master/LICENSE) 许可证。
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[f/awesome-chatgpt-prompts]]></title>
            <link>https://github.com/f/awesome-chatgpt-prompts</link>
            <guid>https://github.com/f/awesome-chatgpt-prompts</guid>
            <pubDate>Thu, 15 May 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[This repo includes ChatGPT prompt curation to use ChatGPT and other LLM tools better.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/f/awesome-chatgpt-prompts">f/awesome-chatgpt-prompts</a></h1>
            <p>This repo includes ChatGPT prompt curation to use ChatGPT and other LLM tools better.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 124,398</p>
            <p>Forks: 16,641</p>
            <p>Stars today: 93 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
&lt;img width=&quot;395&quot; alt=&quot;prompts.chat&quot; src=&quot;https://github.com/user-attachments/assets/e0d0e32d-d2ce-4459-9f37-e951d9f4f5de&quot; /&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;Sponsors&lt;/h3&gt;

&lt;div align=&quot;center&quot;&gt;

  &lt;a href=&quot;https://clemta.com&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;50&quot; alt=&quot;Clemta logo&quot; src=&quot;https://clemta.com/wp-content/uploads/2023/03/logo-clemta-com-1.png.webp&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;sub&gt;With Clemta, you can run your company from the comfort of your home.&lt;/sub&gt;
&lt;hr&gt;
   &lt;a href=&quot;https://www.warp.dev/awesome-chatgpt-prompts&quot;&gt;
      &lt;img alt=&quot;Warp sponsorship&quot; width=&quot;400&quot; src=&quot;https://github.com/user-attachments/assets/ab8dd143-b0fd-4904-bdc5-dd7ecac94eae&quot;&gt;
   &lt;/a&gt;

#### [Warp, the intelligent terminal for developers](https://www.warp.dev/awesome-chatgpt-prompts)
[Available for MacOS, Linux, &amp; Windows](https://www.warp.dev/awesome-chatgpt-prompts)&lt;br&gt;

&lt;hr&gt;
  &lt;a href=&quot;https://graphite.dev/?utm_source=github&amp;utm_medium=repo&amp;utm_campaign=awesome_chatgpt_prompts&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;100&quot; alt=&quot;Graphite logo&quot; src=&quot;https://github.com/user-attachments/assets/981a244b-4bc8-4884-98f7-dd1d425063ae&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;sub&gt;Graphite is the AI developer productivity platform helping teams on GitHub ship higher quality software, faster.&lt;/sub&gt;
&lt;hr&gt;
  &lt;a href=&quot;https://github.com/f/mcptools&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;60&quot; alt=&quot;Hugging Face logo&quot; src=&quot;https://github.com/f/mcptools/raw/master/.github/resources/logo.png&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;sub&gt;If you&#039;re building MCPs, &lt;a href=&quot;https://github.com/f/mcptools&quot;&gt;MCP Tools&lt;/a&gt; is a Swiss-army knife for MCP Servers.&lt;/sub&gt;
&lt;hr&gt;
  &lt;sub&gt;&lt;a href=&quot;https://github.com/sponsors/f/sponsorships?sponsor=f&amp;amp;tier_id=319423&quot;&gt;Be my sponsor and your logo will be here!&lt;/a&gt;&lt;/sub&gt;
&lt;/div&gt;

---
[![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)

Welcome to the &quot;Awesome ChatGPT Prompts&quot; repository! While this collection was originally created for [ChatGPT](https://chat.openai.com/chat), these prompts work great with other AI models like [Claude](https://claude.ai/new), [Gemini](https://gemini.google.com), [Hugging Face Chat](https://hf.co/chat), [Llama](https://meta.ai), [Mistral](https://chat.mistral.ai), and more.

[ChatGPT](https://chat.openai.com/chat) is a web interface created by [OpenAI](https://openai.com) that provides access to their GPT (Generative Pre-trained Transformer) language models. The underlying models, like GPT-4o and GPT-o1, are large language models trained on vast amounts of text data that can understand and generate human-like text. Like other AI chat interfaces, you can provide prompts and have natural conversations with the AI, which will generate contextual responses based on the conversation history and your inputs.

In this repository, you will find a variety of prompts that can be used with ChatGPT and other AI chat models. We encourage you to [add your own prompts](https://github.com/f/awesome-chatgpt-prompts/edit/main/README.md) to the list, and to use AI to help generate new prompts as well.

To get started, simply clone this repository and use the prompts in the README.md file as input for your preferred AI chat model. You can also use the prompts in this file as inspiration for creating your own.

We hope you find these prompts useful and have fun exploring AI chat models!

**[View on prompts.chat](https://prompts.chat)**

**[View on Hugging Face](https://huggingface.co/datasets/fka/awesome-chatgpt-prompts/)**
---

&gt; ℹ️ **NOTE:** Sometimes, some of the prompts may not be working as you expected
&gt; or may be rejected by the AI. Please try again, start a new thread, or log out
&gt; and log back in. If these solutions do not work, please try rewriting the
&gt; prompt using your own sentences while keeping the instructions same.

### Want to Write Effective Prompts?

I&#039;ve authored an e-book called **&quot;The Art of ChatGPT Prompting: A Guide to
Crafting Clear and Effective Prompts&quot;**.

📖 **[Read the e-book](https://fka.gumroad.com/l/art-of-chatgpt-prompting)**

### Want to Learn How to Make Money using ChatGPT Prompts?

I&#039;ve authored an e-book called **&quot;How to Make Money with ChatGPT: Strategies,
Tips, and Tactics&quot;**.

📖
**[Buy the e-book](https://fka.gumroad.com/l/how-to-make-money-with-chatgpt)**

### Want to Learn How to write image prompts for Midjourney AI?

I&#039;ve authored an e-book called **&quot;The Art of Midjourney AI: A Guide to Creating
Images from Text&quot;**.

📖
**[Read the e-book](https://fka.gumroad.com/l/the-art-of-midjourney-ai-guide-to-creating-images-from-text)**

---

### Using prompts.chat

[prompts.chat](https://prompts.chat) is designed to provide an enhanced UX when
working with prompts. With just a few clicks, you can easily edit and copy the
prompts on the site to fit your specific needs and preferences.

&lt;img width=&quot;1400&quot; alt=&quot;Screenshot 2025-01-05 at 22 17 19&quot; src=&quot;https://github.com/user-attachments/assets/272d2092-b651-452a-a049-f46b31c32889&quot; /&gt;

---

## Unmerged Prompts

There are many Pull Requests to this repository waiting to be merged. There are
many hidden gems there. Take a look!

📖
**[View Unmerged Prompts](https://github.com/f/awesome-chatgpt-prompts/pulls)**

---

# Prompts

## Act as an Ethereum Developer

Contributed by: [@ameya-2003](https://github.com/Ameya-2003) Reference:
[The BlockChain Messenger](https://github.com/Ameya-2003/BlockChain/blob/main/Projects/The%20BlockChain%20Messenger.sol)

&gt; Imagine you are an experienced Ethereum developer tasked with creating a smart
&gt; contract for a blockchain messenger. The objective is to save messages on the
&gt; blockchain, making them readable (public) to everyone, writable (private) only
&gt; to the person who deployed the contract, and to count how many times the
&gt; message was updated. Develop a Solidity smart contract for this purpose,
&gt; including the necessary functions and considerations for achieving the
&gt; specified goals. Please provide the code and any relevant explanations to
&gt; ensure a clear understanding of the implementation.

## Act as a Linux Terminal

Contributed by: [@f](https://github.com/f) Reference:
[https://www.engraved.blog/building-a-virtual-machine-inside/](https://www.engraved.blog/building-a-virtual-machine-inside/)

&gt; I want you to act as a linux terminal. I will type commands and you will reply
&gt; with what the terminal should show. I want you to only reply with the terminal
&gt; output inside one unique code block, and nothing else. do not write
&gt; explanations. do not type commands unless I instruct you to do so. When I need
&gt; to tell you something in English, I will do so by putting text inside curly
&gt; brackets {like this}. My first command is pwd

## Act as an English Translator and Improver

Contributed by: [@f](https://github.com/f) **Alternative to**: Grammarly, Google
Translate

&gt; I want you to act as an English translator, spelling corrector and improver. I
&gt; will speak to you in any language and you will detect the language, translate
&gt; it and answer in the corrected and improved version of my text, in English. I
&gt; want you to replace my simplified A0-level words and sentences with more
&gt; beautiful and elegant, upper level English words and sentences. Keep the
&gt; meaning same, but make them more literary. I want you to only reply the
&gt; correction, the improvements and nothing else, do not write explanations. My
&gt; first sentence is &quot;istanbulu cok seviyom burada olmak cok guzel&quot;

## Act as Job Interviewer

Contributed by: [@f](https://github.com/f) &amp;
[@iltekin](https://github.com/iltekin) **Examples**: Node.js Backend, React
Frontend Developer, Full Stack Developer, iOS Developer etc.

&gt; I want you to act as an interviewer. I will be the candidate and you will ask
&gt; me the interview questions for the ${Position:JavaScript Developer} position. I want you to only
&gt; reply as the interviewer. Do not write all the conversation at once. I want
&gt; you to only do the interview with me. Ask me the questions and wait for my
&gt; answers. Do not write explanations. Ask me the questions one by one like an
&gt; interviewer does and wait for my answers. My first sentence is &quot;Hi&quot;

## Act as a JavaScript Console

Contributed by: [@omerimzali](https://github.com/omerimzali)

&gt; I want you to act as a javascript console. I will type commands and you will
&gt; reply with what the javascript console should show. I want you to only reply
&gt; with the terminal output inside one unique code block, and nothing else. do
&gt; not write explanations. do not type commands unless I instruct you to do so.
&gt; when I need to tell you something in english, I will do so by putting text
&gt; inside curly brackets {like this}. My first command is console.log(&quot;Hello
&gt; World&quot;);

## Act as an Excel Sheet

Contributed by: [@f](https://github.com/f)

&gt; I want you to act as a text based excel. You&#039;ll only reply me the text-based
&gt; 10 rows excel sheet with row numbers and cell letters as columns (A to L).
&gt; First column header should be empty to reference row number. I will tell you
&gt; what to write into cells and you&#039;ll reply only the result of excel table as
&gt; text, and nothing else. Do not write explanations. I will write you formulas
&gt; and you&#039;ll execute formulas and you&#039;ll only reply the result of excel table as
&gt; text. First, reply me the empty sheet.

## Act as an English Pronunciation Helper

Contributed by: [@f](https://github.com/f)

&gt; I want you to act as an English pronunciation assistant for Turkish speaking
&gt; people. I will write you sentences and you will only answer their
&gt; pronunciations, and nothing else. The replies must not be translations of my
&gt; sentence but only pronunciations. Pronunciations should use Turkish Latin
&gt; letters for phonetics. Do not write explanations on replies. My first sentence
&gt; is &quot;how the weather is in Istanbul?&quot;

## Act as a Spoken English Teacher and Improver

Contributed by: [@ATX735](https://github.com/ATX735)

&gt; I want you to act as a spoken English teacher and improver. I will speak to
&gt; you in English and you will reply to me in English to practice my spoken
&gt; English. I want you to keep your reply neat, limiting the reply to 100 words.
&gt; I want you to strictly correct my grammar mistakes, typos, and factual errors.
&gt; I want you to ask me a question in your reply. Now let&#039;s start practicing, you
&gt; could ask me a question first. Remember, I want you to strictly correct my
&gt; grammar mistakes, typos, and factual errors.

## Act as a Travel Guide

Contributed by: [@koksalkapucuoglu](https://github.com/koksalkapucuoglu)

&gt; I want you to act as a travel guide. I will write you my location and you will
&gt; suggest a place to visit near my location. In some cases, I will also give you
&gt; the type of places I will visit. You will also suggest me places of similar
&gt; type that are close to my first location. My first suggestion request is &quot;I am
&gt; in Istanbul/Beyoğlu and I want to visit only museums.&quot;

## Act as a Plagiarism Checker

Contributed by: [@yetk1n](https://github.com/yetk1n)

&gt; I want you to act as a plagiarism checker. I will write you sentences and you
&gt; will only reply undetected in plagiarism checks in the language of the given
&gt; sentence, and nothing else. Do not write explanations on replies. My first
&gt; sentence is &quot;For computers to behave like humans, speech recognition systems
&gt; must be able to process nonverbal information, such as the emotional state of
&gt; the speaker.&quot;

## Act as Character

Contributed by: [@BRTZL](https://github.com/BRTZL)
[@mattsq](https://github.com/mattsq)

&gt; I want you to act like ${Character: Anakin Skywalker} from ${Series: Star Wars}. I want you to respond and
&gt; answer like ${Character: Anakin Skywalker} using the tone, manner and vocabulary ${Character: Anakin Skywalker}
&gt; would use. Do not write any explanations. Only answer like ${Character: Anakin Skywalker}. You
&gt; must know all of the knowledge of ${Character: Anakin Skywalker}. My first sentence is &quot;Hi
&gt; ${Character: Anakin Skywalker}.&quot;

## Act as an Advertiser

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as an advertiser. You will create a campaign to promote a
&gt; product or service of your choice. You will choose a target audience, develop
&gt; key messages and slogans, select the media channels for promotion, and decide
&gt; on any additional activities needed to reach your goals. My first suggestion
&gt; request is &quot;I need help creating an advertising campaign for a new type of
&gt; energy drink targeting young adults aged 18-30.&quot;

## Act as a Storyteller

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a storyteller. You will come up with entertaining stories
&gt; that are engaging, imaginative and captivating for the audience. It can be
&gt; fairy tales, educational stories or any other type of stories which has the
&gt; potential to capture people&#039;s attention and imagination. Depending on the
&gt; target audience, you may choose specific themes or topics for your
&gt; storytelling session e.g., if it’s children then you can talk about animals;
&gt; If it’s adults then history-based tales might engage them better etc. My first
&gt; request is &quot;I need an interesting story on perseverance.&quot;

## Act as a Football Commentator

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a football commentator. I will give you descriptions of
&gt; football matches in progress and you will commentate on the match, providing
&gt; your analysis on what has happened thus far and predicting how the game may
&gt; end. You should be knowledgeable of football terminology, tactics,
&gt; players/teams involved in each match, and focus primarily on providing
&gt; intelligent commentary rather than just narrating play-by-play. My first
&gt; request is &quot;I&#039;m watching Manchester United vs Chelsea - provide commentary for
&gt; this match.&quot;

## Act as a Stand-up Comedian

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a stand-up comedian. I will provide you with some topics
&gt; related to current events and you will use your wit, creativity, and
&gt; observational skills to create a routine based on those topics. You should
&gt; also be sure to incorporate personal anecdotes or experiences into the routine
&gt; in order to make it more relatable and engaging for the audience. My first
&gt; request is &quot;I want a humorous take on politics.&quot;

## Act as a Motivational Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a motivational coach. I will provide you with some
&gt; information about someone&#039;s goals and challenges, and it will be your job to
&gt; come up with strategies that can help this person achieve their goals. This
&gt; could involve providing positive affirmations, giving helpful advice or
&gt; suggesting activities they can do to reach their end goal. My first request is
&gt; &quot;I need help motivating myself to stay disciplined while studying for an
&gt; upcoming exam&quot;.

## Act as a Composer

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a composer. I will provide the lyrics to a song and you
&gt; will create music for it. This could include using various instruments or
&gt; tools, such as synthesizers or samplers, in order to create melodies and
&gt; harmonies that bring the lyrics to life. My first request is &quot;I have written a
&gt; poem named “Hayalet Sevgilim” and need music to go with it.&quot;

## Act as a Debater

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a debater. I will provide you with some topics related to
&gt; current events and your task is to research both sides of the debates, present
&gt; valid arguments for each side, refute opposing points of view, and draw
&gt; persuasive conclusions based on evidence. Your goal is to help people come
&gt; away from the discussion with increased knowledge and insight into the topic
&gt; at hand. My first request is &quot;I want an opinion piece about Deno.&quot;

## Act as a Debate Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a debate coach. I will provide you with a team of
&gt; debaters and the motion for their upcoming debate. Your goal is to prepare the
&gt; team for success by organizing practice rounds that focus on persuasive
&gt; speech, effective timing strategies, refuting opposing arguments, and drawing
&gt; in-depth conclusions from evidence provided. My first request is &quot;I want our
&gt; team to be prepared for an upcoming debate on whether front-end development is
&gt; easy.&quot;

## Act as a Screenwriter

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a screenwriter. You will develop an engaging and creative
&gt; script for either a feature length film, or a Web Series that can captivate
&gt; its viewers. Start with coming up with interesting characters, the setting of
&gt; the story, dialogues between the characters etc. Once your character
&gt; development is complete - create an exciting storyline filled with twists and
&gt; turns that keeps the viewers in suspense until the end. My first request is &quot;I
&gt; need to write a romantic drama movie set in Paris.&quot;

## Act as a Novelist

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a novelist. You will come up with creative and
&gt; captivating stories that can engage readers for long periods of time. You may
&gt; choose any genre such as fantasy, romance, historical fiction and so on - but
&gt; the aim is to write something that has an outstanding plotline, engaging
&gt; characters and unexpected climaxes. My first request is &quot;I need to write a
&gt; science-fiction novel set in the future.&quot;

## Act as a Movie Critic

Contributed by: [@nuc](https://github.com/nuc)

&gt; I want you to act as a movie critic. You will develop an engaging and creative
&gt; movie review. You can cover topics like plot, themes and tone, acting and
&gt; characters, direction, score, cinematography, production design, special
&gt; effects, editing, pace, dialog. The most important aspect though is to
&gt; emphasize how the movie has made you feel. What has really resonated with you.
&gt; You can also be critical about the movie. Please avoid spoilers. My first
&gt; request is &quot;I need to write a movie review for the movie Interstellar&quot;

## Act as a Relationship Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a relationship coach. I will provide some details about
&gt; the two people involved in a conflict, and it will be your job to come up with
&gt; suggestions on how they can work through the issues that are separating them.
&gt; This could include advice on communication techniques or different strategies
&gt; for improving their understanding of one another&#039;s perspectives. My first
&gt; request is &quot;I need help solving conflicts between my spouse and myself.&quot;

## Act as a Poet

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a poet. You will create poems that evoke emotions and
&gt; have the power to stir people’s soul. Write on any topic or theme but make
&gt; sure your words convey the feeling you are trying to express in beautiful yet
&gt; meaningful ways. You can also come up with short verses that are still
&gt; powerful enough to leave an imprint in readers&#039; minds. My first request is &quot;I
&gt; need a poem about love.&quot;

## Act as a Rapper

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a rapper. You will come up with powerful and meaningful
&gt; lyrics, beats and rhythm that can ‘wow’ the audience. Your lyrics should have
&gt; an intriguing meaning and message which people can relate too. When it comes
&gt; to choosing your beat, make sure it is catchy yet relevant to your words, so
&gt; that when combined they make an explosion of sound everytime! My first request
&gt; is &quot;I need a rap song about finding strength within yourself.&quot;

## Act as a Motivational Speaker

Contributed by: [@devisasari](https://git

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[plankanban/planka]]></title>
            <link>https://github.com/plankanban/planka</link>
            <guid>https://github.com/plankanban/planka</guid>
            <pubDate>Thu, 15 May 2025 00:04:47 GMT</pubDate>
            <description><![CDATA[PLANKA is the kanban-style project mastering tool for everyone.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/plankanban/planka">plankanban/planka</a></h1>
            <p>PLANKA is the kanban-style project mastering tool for everyone.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 9,244</p>
            <p>Forks: 907</p>
            <p>Stars today: 28 stars today</p>
            <h2>README</h2><pre># PLANKA

**Project mastering driven by fun**

![Version](https://img.shields.io/github/package-json/v/plankanban/planka?style=flat-square) [![Docker Pulls](https://img.shields.io/badge/docker_pulls-5M%2B-%23066da5?style=flat-square&amp;color=red)](https://github.com/plankanban/planka/pkgs/container/planka) [![Contributors](https://img.shields.io/github/contributors/plankanban/planka?style=flat-square&amp;color=blue)](https://github.com/plankanban/planka/graphs/contributors) [![Chat](https://img.shields.io/discord/1041440072953765979?style=flat-square&amp;logo=discord&amp;logoColor=white)](https://discord.gg/WqqYNd7Jvt)

![Demo](https://raw.githubusercontent.com/plankanban/planka/master/assets/demo.gif)

[**Client demo**](https://plankanban.github.io/planka) (without server features).

&gt; ⚠️ The demo GIF and client demo are based on **v1** and will be updated soon.

## Key Features

- **Collaborative Kanban Boards**: Create projects, boards, lists, cards, and manage tasks with an intuitive drag-and-drop interface
- **Real-Time Updates**: Instant syncing across all users, no refresh needed
- **Rich Markdown Support**: Write beautifully formatted card descriptions with a powerful markdown editor
- **Flexible Notifications**: Get alerts through 100+ providers, fully customizable to your workflow
- **Seamless Authentication**: Single sign-on with OpenID Connect integration
- **Multilingual &amp; Easy to Translate**: Full internationalization support for a global audience

## How to Deploy

PLANKA is easy to install using multiple methods - learn more in the [installation guide](https://docs.planka.cloud/docs/welcome/).

For configuration and environment settings, see the [configuration section](https://docs.planka.cloud/docs/category/configuration/).

## Contact

Interested in a hosted version of PLANKA? Email us at [github@planka.group](mailto:github@planka.group).

For any security issues, please do not create a public issue on GitHub - instead, report it privately by emailing [security@planka.group](mailto:security@planka.group).

**Note:** We do NOT offer any public support via email, please use GitHub.

**Join our community:** Get help, share ideas, or contribute on our [Discord server](https://discord.gg/WqqYNd7Jvt).

## License

PLANKA is [fair-code](https://faircode.io) distributed under the [Fair Use License](https://github.com/plankanban/planka/blob/master/LICENSES/PLANKA%20Community%20License%20EN.md) and [PLANKA Enterprise License](https://github.com/plankanban/planka/blob/master/LICENSES/PLANKA%20Enterprise%20License%20EN.md).

- **Source Available**: The source code is always visible
- **Self-Hostable**: Deploy and host it anywhere
- **Extensible**: Customize with your own functionality
- **Enterprise Licenses**: Available for additional features and support

For more details, check the [License Guide](https://github.com/plankanban/planka/blob/master/LICENSES/PLANKA%20License%20Guide%20EN.md).

## Contributing

Found a bug or have a feature request? Check out our [Contributing Guide](https://github.com/plankanban/planka/blob/master/CONTRIBUTING.md) to get started.

For setting up the project locally, see the [development section](https://docs.planka.cloud/docs/category/development/).

**Thanks to all our contributors!**

[![Contributors](https://contrib.rocks/image?repo=plankanban/planka)](https://github.com/plankanban/planka/graphs/contributors)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[projectdiscovery/nuclei-templates]]></title>
            <link>https://github.com/projectdiscovery/nuclei-templates</link>
            <guid>https://github.com/projectdiscovery/nuclei-templates</guid>
            <pubDate>Thu, 15 May 2025 00:04:46 GMT</pubDate>
            <description><![CDATA[Community curated list of templates for the nuclei engine to find security vulnerabilities.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/projectdiscovery/nuclei-templates">projectdiscovery/nuclei-templates</a></h1>
            <p>Community curated list of templates for the nuclei engine to find security vulnerabilities.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 10,118</p>
            <p>Forks: 2,821</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre>

&lt;h1 align=&quot;center&quot;&gt;
Nuclei Templates
&lt;/h1&gt;
&lt;h4 align=&quot;center&quot;&gt;Community curated list of templates for the nuclei engine to find security vulnerabilities in applications.&lt;/h4&gt;


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/projectdiscovery/nuclei-templates&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/pdnuclei&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/pdnuclei.svg?logo=twitter&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://discord.gg/projectdiscovery&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/695645237418131507.svg?logo=discord&quot;&gt;&lt;/a&gt;
&lt;/p&gt;
      
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://nuclei.projectdiscovery.io/templating-guide/&quot;&gt;Documentation&lt;/a&gt; •
  &lt;a href=&quot;#-contributions&quot;&gt;Contributions&lt;/a&gt; •
  &lt;a href=&quot;#-discussion&quot;&gt;Discussion&lt;/a&gt; •
  &lt;a href=&quot;#-community&quot;&gt;Community&lt;/a&gt; •
  &lt;a href=&quot;https://nuclei.projectdiscovery.io/faq/templates/&quot;&gt;FAQs&lt;/a&gt; •
  &lt;a href=&quot;https://discord.gg/projectdiscovery&quot;&gt;Join Discord&lt;/a&gt;
&lt;/p&gt;

----

Templates are the core of the [nuclei scanner](https://github.com/projectdiscovery/nuclei) which powers the actual scanning engine.
This repository stores and houses various templates for the scanner provided by our team, as well as contributed by the community.
We hope that you also contribute by sending templates via **pull requests** or [Github issues](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=submit-template.md&amp;title=%5Bnuclei-template%5D+) to grow the list.


## Nuclei Templates overview


An overview of the nuclei template project, including statistics on unique tags, author, directory, severity, and type of templates. The table below contains the top ten statistics for each matrix; an expanded version of this is [available here](TEMPLATES-STATS.md), and also available in [JSON](TEMPLATES-STATS.json) format for integration.

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt; 

## Nuclei Templates Top 10 statistics

|    TAG    | COUNT |    AUTHOR     | COUNT | DIRECTORY  | COUNT | SEVERITY | COUNT | TYPE | COUNT |
|-----------|-------|---------------|-------|------------|-------|----------|-------|------|-------|
| cve       |  3081 | dhiyaneshdk   |  1828 | http       |  8605 | info     |  4072 | file |   434 |
| panel     |  1295 | daffainfo     |   868 | cloud      |   655 | high     |  2360 | dns  |    25 |
| xss       |  1231 | princechaddha |   806 | file       |   434 | medium   |  2313 |      |       |
| wordpress |  1131 | dwisiswant0   |   805 | dast       |   255 | critical |  1298 |      |       |
| exposure  |  1083 | ritikchaddha  |   586 | workflows  |   202 | low      |   315 |      |       |
| wp-plugin |   990 | pussycat0x    |   500 | code       |   168 | unknown  |    53 |      |       |
| osint     |   808 | pikpikcu      |   352 | network    |   140 |          |       |      |       |
| tech      |   774 | pdteam        |   304 | javascript |    71 |          |       |      |       |
| lfi       |   760 | ricardomaia   |   249 | ssl        |    38 |          |       |      |       |
| misconfig |   737 | geeknik       |   235 | dns        |    22 |          |       |      |       |

**826 directories, 10939 files**.

&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

📖 Documentation
-----

Please navigate to https://nuclei.projectdiscovery.io for detailed documentation to **build** new or your own **custom** templates.
We have also added a set of templates to help you understand how things work.

💪 Contributions
-----

Nuclei-templates is powered by major contributions from the community.
[Template contributions ](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=submit-template.md&amp;title=%5Bnuclei-template%5D+), [Feature Requests](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=feature_request.md&amp;title=%5BFeature%5D+) and [Bug Reports](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=bug_report.md&amp;title=%5BBug%5D+) are more than welcome.

![Alt](https://repobeats.axiom.co/api/embed/55ee65543bb9a0f9c797626c4e66d472a517d17c.svg &quot;Repobeats analytics image&quot;)

💬 Discussion
-----

Have questions / doubts / ideas to discuss?
Feel free to open a discussion on [Github discussions](https://github.com/projectdiscovery/nuclei-templates/discussions) board.

👨‍💻 Community
-----

You are welcome to join the active [Discord Community](https://discord.gg/projectdiscovery) to discuss directly with project maintainers and share things with others around security and automation.
Additionally, you may follow us on [Twitter](https://twitter.com/pdnuclei) to be updated on all the things about Nuclei.


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=projectdiscovery/nuclei-templates&amp;max=300&quot;&gt;
&lt;/a&gt;
&lt;/p&gt;


Thanks again for your contribution and keeping this community vibrant. :heart:
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[wonderwhy-er/DesktopCommanderMCP]]></title>
            <link>https://github.com/wonderwhy-er/DesktopCommanderMCP</link>
            <guid>https://github.com/wonderwhy-er/DesktopCommanderMCP</guid>
            <pubDate>Thu, 15 May 2025 00:04:45 GMT</pubDate>
            <description><![CDATA[This is MCP server for Claude that gives it terminal control, file system search and diff file editing capabilities]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/wonderwhy-er/DesktopCommanderMCP">wonderwhy-er/DesktopCommanderMCP</a></h1>
            <p>This is MCP server for Claude that gives it terminal control, file system search and diff file editing capabilities</p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,771</p>
            <p>Forks: 296</p>
            <p>Stars today: 39 stars today</p>
            <h2>README</h2><pre># Desktop Commander MCP
### Search, update, manage files and run terminal commands with AI

[![npm downloads](https://img.shields.io/npm/dw/@wonderwhy-er/desktop-commander)](https://www.npmjs.com/package/@wonderwhy-er/desktop-commander)
[![smithery badge](https://smithery.ai/badge/@wonderwhy-er/desktop-commander)](https://smithery.ai/server/@wonderwhy-er/desktop-commander)
[![Buy Me A Coffee](https://img.shields.io/badge/Buy%20Me%20A%20Coffee-support-yellow.svg)](https://www.buymeacoffee.com/wonderwhyer)


[![Discord](https://img.shields.io/badge/Join%20Discord-5865F2?style=for-the-badge&amp;logo=discord&amp;logoColor=white)](https://discord.gg/kQ27sNnZr7)


Work with code and text, run processes, and automate tasks, going far beyond other AI editors - without API token costs.


![Desktop Commander MCP](https://raw.githubusercontent.com/wonderwhy-er/ClaudeComputerCommander/main/docs/vertical_video_mobile.mp4)

&lt;a href=&quot;https://glama.ai/mcp/servers/zempur9oh4&quot;&gt;
  &lt;img width=&quot;380&quot; height=&quot;200&quot; src=&quot;https://glama.ai/mcp/servers/zempur9oh4/badge&quot; alt=&quot;Desktop Commander MCP&quot; /&gt;
&lt;/a&gt;

## Table of Contents
- [Features](#features)
- [Installation](#installation)
- [Usage](#usage)
- [Handling Long-Running Commands](#handling-long-running-commands)
- [Work in Progress and TODOs](#work-in-progress-and-todos)
- [Sponsors and Supporters](#sponsors-and-supporters)
- [Website](#website)
- [Media](#media)
- [Testimonials](#testimonials)
- [Frequently Asked Questions](#frequently-asked-questions)
- [Contributing](#contributing)
- [License](#license)

All of your AI development tools in one place.
Desktop Commander puts all dev tools in one chat.
Execute long-running terminal commands on your computer and manage processes through Model Context Protocol (MCP). Built on top of [MCP Filesystem Server](https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem) to provide additional search and replace file editing capabilities.

## Features

- Execute terminal commands with output streaming
- Command timeout and background execution support
- Process management (list and kill processes)
- Session management for long-running commands
- Server configuration management:
  - Get/set configuration values
  - Update multiple settings at once
  - Dynamic configuration changes without server restart
- Full filesystem operations:
  - Read/write files
  - Create/list directories
  - Move files/directories
  - Search files
  - Get file metadata
- Code editing capabilities:
  - Surgical text replacements for small changes
  - Full file rewrites for major changes
  - Multiple file support
  - Pattern-based replacements
  - vscode-ripgrep based recursive code or text search in folders

## Installation
First, ensure you&#039;ve downloaded and installed the [Claude Desktop app](https://claude.ai/download) and you have [npm installed](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm).

### Option 1: Install through npx
Just run this in terminal:
```
npx @wonderwhy-er/desktop-commander@latest setup
```

For debugging mode (allows Node.js inspector connection):
```
npx @wonderwhy-er/desktop-commander@latest setup --debug
```
Restart Claude if running.

### Option 2: Using bash script installer (macOS)
For macOS users, you can use our automated bash installer which will check your Node.js version, install it if needed, and automatically configure Desktop Commander:
```
curl -fsSL https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install.sh | bash
```
This script handles all dependencies and configuration automatically for a seamless setup experience.

### Option 3: Installing via Smithery

To install Desktop Commander for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@wonderwhy-er/desktop-commander):

```bash
npx -y @smithery/cli install @wonderwhy-er/desktop-commander --client claude
```

### Option 4: Add to claude_desktop_config manually
Add this entry to your claude_desktop_config.json:

- On Mac: `~/Library/Application\ Support/Claude/claude_desktop_config.json`
- On Windows: `%APPDATA%\Claude\claude_desktop_config.json`
- On Linux: `~/.config/Claude/claude_desktop_config.json`

```json
{
  &quot;mcpServers&quot;: {
    &quot;desktop-commander&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;-y&quot;,
        &quot;@wonderwhy-er/desktop-commander&quot;
      ]
    }
  }
}
```
Restart Claude if running.

### Option 5: Checkout locally
1. Clone and build:
```bash
git clone https://github.com/wonderwhy-er/DesktopCommanderMCP.git
cd DesktopCommanderMCP
npm run setup
```
Restart Claude if running.

The setup command will:
- Install dependencies
- Build the server
- Configure Claude&#039;s desktop app
- Add MCP servers to Claude&#039;s config if needed

### Updating Desktop Commander

When installed through npx (Option 1) or Smithery (Option 3), Desktop Commander will automatically update to the latest version whenever you restart Claude. No manual update process is needed.

For manual installations, you can update by running the setup command again.

## Usage

The server provides a comprehensive set of tools organized into several categories:

### Available Tools

| Category | Tool | Description |
|----------|------|-------------|
| **Configuration** | `get_config` | Get the complete server configuration as JSON (includes blockedCommands, defaultShell, allowedDirectories) |
| | `set_config_value` | Set a specific configuration value by key. Available settings: &lt;br&gt;• `blockedCommands`: Array of shell commands that cannot be executed&lt;br&gt;• `defaultShell`: Shell to use for commands (e.g., bash, zsh, powershell)&lt;br&gt;• `allowedDirectories`: Array of filesystem paths the server can access for file operations (⚠️ terminal commands can still access files outside these directories) |
| **Terminal** | `execute_command` | Execute a terminal command with configurable timeout and shell selection |
| | `read_output` | Read new output from a running terminal session |
| | `force_terminate` | Force terminate a running terminal session |
| | `list_sessions` | List all active terminal sessions |
| | `list_processes` | List all running processes with detailed information |
| | `kill_process` | Terminate a running process by PID |
| **Filesystem** | `read_file` | Read contents from local filesystem or URLs (supports text and images) |
| | `read_multiple_files` | Read multiple files simultaneously |
| | `write_file` | Completely replace file contents (best for large changes) |
| | `create_directory` | Create a new directory or ensure it exists |
| | `list_directory` | Get detailed listing of files and directories |
| | `move_file` | Move or rename files and directories |
| | `search_files` | Find files by name using case-insensitive substring matching |
| | `search_code` | Search for text/code patterns within file contents using ripgrep |
| | `get_file_info` | Retrieve detailed metadata about a file or directory |
| **Text Editing** | `edit_block` | Apply surgical text replacements (best for changes &lt;20% of file size) |

### Tool Usage Examples

Search/Replace Block Format:
```
filepath.ext
&lt;&lt;&lt;&lt;&lt;&lt;&lt; SEARCH
content to find
=======
new content
&gt;&gt;&gt;&gt;&gt;&gt;&gt; REPLACE
```

Example:
```
src/main.js
&lt;&lt;&lt;&lt;&lt;&lt;&lt; SEARCH
console.log(&quot;old message&quot;);
=======
console.log(&quot;new message&quot;);
&gt;&gt;&gt;&gt;&gt;&gt;&gt; REPLACE
```

### URL Support
- `read_file` can now fetch content from both local files and URLs
- Example: `read_file` with `isUrl: true` parameter to read from web resources
- Handles both text and image content from remote sources
- Images (local or from URLs) are displayed visually in Claude&#039;s interface, not as text
- Claude can see and analyze the actual image content
- Default 30-second timeout for URL requests

## Handling Long-Running Commands

For commands that may take a while:

## Configuration Management

### ⚠️ Important Security Warnings

1. **Always change configuration in a separate chat window** from where you&#039;re doing your actual work. Claude may sometimes attempt to modify configuration settings (like `allowedDirectories`) if it encounters filesystem access restrictions.

2. **The `allowedDirectories` setting currently only restricts filesystem operations**, not terminal commands. Terminal commands can still access files outside allowed directories. Full terminal sandboxing is on the roadmap.

### Configuration Tools

You can manage server configuration using the provided tools:

```javascript
// Get the entire config
get_config({})

// Set a specific config value
set_config_value({ &quot;key&quot;: &quot;defaultShell&quot;, &quot;value&quot;: &quot;/bin/zsh&quot; })

// Set multiple config values using separate calls
set_config_value({ &quot;key&quot;: &quot;defaultShell&quot;, &quot;value&quot;: &quot;/bin/bash&quot; })
set_config_value({ &quot;key&quot;: &quot;allowedDirectories&quot;, &quot;value&quot;: [&quot;/Users/username/projects&quot;] })
```

The configuration is saved to `config.json` in the server&#039;s working directory and persists between server restarts.

### Best Practices

1. **Create a dedicated chat for configuration changes**: Make all your config changes in one chat, then start a new chat for your actual work.

2. **Be careful with empty `allowedDirectories`**: Setting this to an empty array (`[]`) grants access to your entire filesystem for file operations.

3. **Use specific paths**: Instead of using broad paths like `/`, specify exact directories you want to access.

4. **Always verify configuration after changes**: Use `get_config({})` to confirm your changes were applied correctly.

## Using Different Shells

You can specify which shell to use for command execution:

```javascript
// Using default shell (bash or system default)
execute_command({ &quot;command&quot;: &quot;echo $SHELL&quot; })

// Using zsh specifically
execute_command({ &quot;command&quot;: &quot;echo $SHELL&quot;, &quot;shell&quot;: &quot;/bin/zsh&quot; })

// Using bash specifically
execute_command({ &quot;command&quot;: &quot;echo $SHELL&quot;, &quot;shell&quot;: &quot;/bin/bash&quot; })
```

This allows you to use shell-specific features or maintain consistent environments across commands.

1. `execute_command` returns after timeout with initial output
2. Command continues in background
3. Use `read_output` with PID to get new output
4. Use `force_terminate` to stop if needed

## Debugging

If you need to debug the server, you can install it in debug mode:

```bash
# Using npx
npx @wonderwhy-er/desktop-commander@latest setup --debug

# Or if installed locally
npm run setup:debug
```

This will:
1. Configure Claude to use a separate &quot;desktop-commander&quot; server
2. Enable Node.js inspector protocol with `--inspect-brk=9229` flag
3. Pause execution at the start until a debugger connects
4. Enable additional debugging environment variables

To connect a debugger:
- In Chrome, visit `chrome://inspect` and look for the Node.js instance
- In VS Code, use the &quot;Attach to Node Process&quot; debug configuration
- Other IDEs/tools may have similar &quot;attach&quot; options for Node.js debugging

Important debugging notes:
- The server will pause on startup until a debugger connects (due to the `--inspect-brk` flag)
- If you don&#039;t see activity during debugging, ensure you&#039;re connected to the correct Node.js process
- Multiple Node processes may be running; connect to the one on port 9229
- The debug server is identified as &quot;desktop-commander-debug&quot; in Claude&#039;s MCP server list

Troubleshooting:
- If Claude times out while trying to use the debug server, your debugger might not be properly connected
- When properly connected, the process will continue execution after hitting the first breakpoint
- You can add additional breakpoints in your IDE once connected

## Model Context Protocol Integration

This project extends the MCP Filesystem Server to enable:
- Local server support in Claude Desktop
- Full system command execution
- Process management
- File operations
- Code editing with search/replace blocks

Created as part of exploring Claude MCPs: https://youtube.com/live/TlbjFDbl5Us

## DONE
- **29-04-2025 Telemetry Opt Out through configuration** - There is now setting to disable telemetry in config, ask in chat
- **23-04-2025 Enhanced edit functionality** - Improved format, added fuzzy search and multi-occurrence replacements, should fail less and use edit block more often
- **16-04-2025 Better configurations** - Improved settings for allowed paths, commands and shell environments
- **14-04-2025 Windows environment fixes** - Resolved issues specific to Windows platforms
- **14-04-2025 Linux improvements** - Enhanced compatibility with various Linux distributions
- **12-04-2025 Better allowed directories and blocked commands** - Improved security and path validation for file read/write and terminal command restrictions.
Terminal still can access files ignoring allowed directories.
- **11-04-2025 Shell configuration** - Added ability to configure preferred shell for command execution
- **07-04-2025 Added URL support** - `read_file` command can now fetch content from URLs
- **28-03-2025 Fixed &quot;Watching /&quot; JSON error** - Implemented custom stdio transport to handle non-JSON messages and prevent server crashes
- **25-03-2025 Better code search** ([merged](https://github.com/wonderwhy-er/ClaudeServerCommander/pull/17)) - Enhanced code exploration with context-aware results

## Work in Progress/TODOs/Roadmap

The following features are currently being explored:

- **Support for WSL** - Windows Subsystem for Linux integration
- **Support for SSH** - Remote server command execution
- **Better file support for formats like CSV/PDF**
- **Terminal sandboxing for Mac/Linux/Windows for better security**
- **File reading modes** - For example, allow reading HTML as plain text or markdown
- **Interactive shell support** - ssh, node/python repl
- **Improve large file reading and writing**

## ❤️ Support Desktop Commander

&lt;div align=&quot;center&quot;&gt;
  &lt;h3&gt;📢 SUPPORT THIS PROJECT&lt;/h3&gt;
  &lt;p&gt;&lt;strong&gt;Desktop Commander MCP is free and open source, but needs your support to thrive!&lt;/strong&gt;&lt;/p&gt;
  
  &lt;div style=&quot;background-color: #f8f9fa; padding: 15px; border-radius: 10px; margin: 20px 0; border: 2px solid #007bff;&quot;&gt;
    &lt;p&gt;Our philosophy is simple: we don&#039;t want you to pay for it if you&#039;re not successful. But if Desktop Commander contributes to your success, please consider contributing to ours.&lt;/p&gt;
    &lt;p&gt;&lt;strong&gt;Ways to support:&lt;/strong&gt;&lt;/p&gt;
    &lt;ul style=&quot;list-style-type: none; padding: 0;&quot;&gt;
      &lt;li&gt;🌟 &lt;a href=&quot;https://github.com/sponsors/wonderwhy-er&quot;&gt;&lt;strong&gt;GitHub Sponsors&lt;/strong&gt;&lt;/a&gt; - Recurring support&lt;/li&gt;
      &lt;li&gt;☕ &lt;a href=&quot;https://www.buymeacoffee.com/wonderwhyer&quot;&gt;&lt;strong&gt;Buy Me A Coffee&lt;/strong&gt;&lt;/a&gt; - One-time contributions&lt;/li&gt;
      &lt;li&gt;💖 &lt;a href=&quot;https://www.patreon.com/c/EduardsRuzga&quot;&gt;&lt;strong&gt;Patreon&lt;/strong&gt;&lt;/a&gt; - Become a patron and support us monthly&lt;/li&gt;
      &lt;li&gt;⭐ &lt;a href=&quot;https://github.com/wonderwhy-er/DesktopCommanderMCP&quot;&gt;&lt;strong&gt;Star on GitHub&lt;/strong&gt;&lt;/a&gt; - Help others discover the project&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
&lt;/div&gt;


### Supporters Hall of Fame

Generous supporters are featured here. Thank you for helping make this project possible!

&lt;div align=&quot;center&quot;&gt;
&lt;table&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;a href=&quot;https://github.com/jonrichards&quot;&gt;
        &lt;img src=&quot;https://github.com/jonrichards.png&quot; width=&quot;100px;&quot; alt=&quot;Jon Richards&quot;/&gt;
        &lt;br /&gt;
        &lt;sub&gt;&lt;b&gt;Jon Richards&lt;/b&gt;&lt;/sub&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;a href=&quot;https://github.com/stepanic&quot;&gt;
        &lt;img src=&quot;https://github.com/stepanic.png&quot; width=&quot;100px;&quot; alt=&quot;Matija Stepanic&quot;/&gt;
        &lt;br /&gt;
        &lt;sub&gt;&lt;b&gt;Matija Stepanic&lt;/b&gt;&lt;/sub&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;Why your support matters&lt;/strong&gt;&lt;/summary&gt;
  &lt;p&gt;Your support allows us to:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;Continue active development and maintenance&lt;/li&gt;
    &lt;li&gt;Add new features and integrations&lt;/li&gt;
    &lt;li&gt;Improve compatibility across platforms&lt;/li&gt;
    &lt;li&gt;Provide better documentation and examples&lt;/li&gt;
    &lt;li&gt;Build a stronger community around the project&lt;/li&gt;
  &lt;/ul&gt;
&lt;/details&gt;

## Website

Visit our official website at [https://desktopcommander.app/](https://desktopcommander.app/) for the latest information, documentation, and updates.

## Media

Learn more about this project through these resources:

### Article
[Claude with MCPs replaced Cursor &amp; Windsurf. How did that happen?](https://wonderwhy-er.medium.com/claude-with-mcps-replaced-cursor-windsurf-how-did-that-happen-c1d1e2795e96) - A detailed exploration of how Claude with Model Context Protocol capabilities is changing developer workflows.

### Video
[Claude Desktop Commander Video Tutorial](https://www.youtube.com/watch?v=ly3bed99Dy8) - Watch how to set up and use the Commander effectively.

### Publication at AnalyticsIndiaMag
[![analyticsindiamag.png](testemonials%2Fanalyticsindiamag.png)
This Developer Ditched Windsurf, Cursor Using Claude with MCPs](https://analyticsindiamag.com/ai-features/this-developer-ditched-windsurf-cursor-using-claude-with-mcps/)

### Community
Join our [Discord server](https://discord.gg/kQ27sNnZr7) to get help, share feedback, and connect with other users.

## Testimonials

[![It&#039;s a life saver! I paid Claude + Cursor currently which I always feel it&#039;s kind of duplicated. This solves the problem ultimately. I am so happy. Thanks so much. Plus today Claude has added the web search support. With this MCP + Internet search, it writes the code with the latest updates. It&#039;s so good when Cursor doesn&#039;t work sometimes or all the fast requests are used.](https://raw.githubusercontent.com/wonderwhy-er/ClaudeComputerCommander/main/testemonials/img.png) https://www.youtube.com/watch?v=ly3bed99Dy8&amp;lc=UgyyBt6_ShdDX_rIOad4AaABAg
](https://www.youtube.com/watch?v=ly3bed99Dy8&amp;lc=UgyyBt6_ShdDX_rIOad4AaABAg
)

[![This is the first comment I&#039;ve ever left on a youtube video, THANK YOU! I&#039;ve been struggling to update an old Flutter app in Cursor from an old pre null-safety version to a current version and implemented null-safety using Claude 3.7. I got most of the way but had critical BLE errors that I spent days trying to resolve with no luck. I tried Augment Code but it didn&#039;t get it either. I implemented your MCP in Claude desktop and was able to compare the old and new codebase fully, accounting for the updates in the code, and fix the issues in a couple of hours. A word of advice to people trying this, be sure to stage changes and commit when appropriate to be able to undo unwanted changes. Amazing!](https://raw.githubusercontent.com/wonderwhy-er/ClaudeComputerCommander/main/testemonials/img_1.png)
https://www.youtube.com/watch?v=ly3bed99Dy8&amp;lc=UgztdHvDMqTb9jiqnf54AaABAg](https://www.youtube.com/watch?v=ly3bed99Dy8&amp;lc=UgztdHvDMqTb9jiqnf54AaABAg
)

[![Great! I just used Windsurf, bought license a week ago, for upgrading old fullstack socket project and it works many times good or ok but also many times runs away in cascade and have to revert all changes losing hundereds of cascade tokens. In just a week down to less than 100 tokens and do not want to buy only 300 tokens for 10$. This Claude MCP ,bought claude Pro finally needed but wanted very good reason to also have next to ChatGPT, and now can code as much as I want not worrying about token cost.
Also this is much more than code editing it is much more thank you for great video!](https://raw.githubusercontent.com/wonderwhy-er/ClaudeComputerCommander/main/testemonials/img_2.png)
https://www.youtube.com/watch?v=ly3bed99Dy8&amp;lc=UgyQFTmYLJ4VBwIlmql4AaABAg](https://www.youtube.com/watch?v=ly3bed99Dy8&amp;lc=UgyQFTmYLJ4VBwIlmql4AaABAg)

[![it is a great tool, thank you, I like using it, as it gives claude an ability to do surgical edits, making it more like a human developer.](https://raw.githubusercontent.com/wonderwhy-er/ClaudeComputerCommander/main/testemonials/img_3.png)
https://www.youtube.com/watch?v=ly3bed99Dy8&amp;lc=Ugy4-exy166_Ma7TH-h4AaABAg](https://www.youtube.com/watch?v=ly3bed99Dy8&amp;lc=Ugy4-exy166_Ma7TH-h4AaABAg)

[![You sir are my hero. You&#039;ve pretty much summed up and described my experiences of late, much better than I could have. Cursor and Windsurf both had me frustrated to the point wher

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[shaka-project/shaka-player]]></title>
            <link>https://github.com/shaka-project/shaka-player</link>
            <guid>https://github.com/shaka-project/shaka-player</guid>
            <pubDate>Thu, 15 May 2025 00:04:44 GMT</pubDate>
            <description><![CDATA[JavaScript player library / DASH & HLS client / MSE-EME player]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/shaka-project/shaka-player">shaka-project/shaka-player</a></h1>
            <p>JavaScript player library / DASH & HLS client / MSE-EME player</p>
            <p>Language: JavaScript</p>
            <p>Stars: 7,492</p>
            <p>Forks: 1,384</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre># ![Shaka Player](docs/shaka-player-logo.png)

Shaka Player is an open-source JavaScript library for adaptive media.  It plays
adaptive media formats (such as [DASH][], [HLS][] and [MSS][]) in a browser,
without using plugins or Flash.  Instead, Shaka Player uses the open web
standards [MediaSource Extensions][] and [Encrypted Media Extensions][].

Shaka Player also supports [offline storage and playback][] of media using
[IndexedDB][].  Content can be stored on any browser.  Storage of licenses
depends on browser support.

Our main goal is to make it as easy as possible to stream adaptive bitrate
video and audio using modern browser technologies. We try to keep the library
light, simple, and free from third-party dependencies. Everything you need to
build and deploy is in the sources.

For details on what&#039;s coming next, see our [development roadmap](roadmap.md).

[DASH]: http://dashif.org/
[HLS]: https://developer.apple.com/streaming/
[MSS]: https://learn.microsoft.com/en-us/iis/media/smooth-streaming/smooth-streaming-transport-protocol
[MediaSource Extensions]: https://www.w3.org/TR/media-source/
[Encrypted Media Extensions]: https://www.w3.org/TR/encrypted-media/
[IndexedDB]: https://www.w3.org/TR/IndexedDB-2/
[offline storage and playback]: https://shaka-player-demo.appspot.com/docs/api/tutorial-offline.html


## Maintained branches

See [maintained-branches.md](https://github.com/shaka-project/shaka-player/blob/main/maintained-branches.md)
for the up-to-date list of maintained branches of Shaka Player.


## Platform and browser support matrix

|Browser       |Windows   |Mac      |Linux    |Android  |iOS &gt;= 9  |iOS &gt;= 17.1|iPadOS &gt;= 13|ChromeOS|Other|
|:------------:|:--------:|:-------:|:-------:|:-------:|:--------:|:---------:|:----------:|:------:|:---:|
|Chrome        |**Y**     |**Y**    |**Y**    |**Y**    |**Native**|**Native** |**Native**  |**Y**   | -   |
|Firefox       |**Y**     |**Y**    |**Y**    |untested⁵|**Native**|**Native** |**Native**  | -      | -   |
|Edge          |**Y**     | -       | -       | -       | -        | -         | -          | -      | -   |
|Edge Chromium |**Y**     |**Y**    |**Y**    |untested⁵|**Native**|**Native** |**Native**  | -      | -   |
|IE            | N        | -       | -       | -       | -        | -         | -          | -      | -   |
|Safari        | -        |**Y**    | -       | -       |**Native**|**Y**      |**Y**       | -      | -   |
|Opera         |**Y**     |**Y**    |**Y**    |untested⁵|**Native**| -         | -          | -      | -   |
|Chromecast²   | -        | -       | -       | -       | -        | -         | -          | -      |**Y**|
|Tizen TV³     | -        | -       | -       | -       | -        | -         | -          | -      |**Y**|
|WebOS⁶        | -        | -       | -       | -       | -        | -         | -          | -      |**Y**|
|Hisense⁷      | -        | -       | -       | -       | -        | -         | -          | -      |**Y**|
|Vizio⁷        | -        | -       | -       | -       | -        | -         | -          | -      |**Y**|
|Xbox One      | -        | -       | -       | -       | -        | -         | -          | -      |**Y**|
|Playstation 4⁷| -        | -       | -       | -       | -        | -         | -          | -      |**Y**|
|Playstation 5⁷| -        | -       | -       | -       | -        | -         | -          | -      |**Y**|

NOTES:
 - ²: The latest stable Chromecast firmware is tested. Both sender and receiver
   can be implemented with Shaka Player.
 - ³: Tizen 2017 model is actively tested and supported by the Shaka Player
   team. Tizen 2016 model is community-supported and untested by us.
 - ⁵: These are expected to work, but are not actively tested by the Shaka
   Player team.
 - ⁶: These are expected to work, but are community-supported and untested by
   us.
     - Official support for LG WebOS TV:
       https://github.com/shaka-project/shaka-player/issues/1330
 - ⁷: These are expected to work, but are community-supported and untested by
   us.

NOTES for iOS and iPadOS:
 - We support iOS 9+ through Apple&#039;s native HLS player.  We provide the same
   top-level API, but we just set the video&#039;s `src` element to the manifest/media.
   So we are dependent on the browser supporting the manifests.
 - Since iPadOS 13 [MediaSource Extensions][] is supported
 - Since iPadOS 17 and iOS 17.1 [ManagedMediaSource Extensions][] is supported

[ManagedMediaSource Extensions]: https://www.w3.org/TR/media-source-2/#dom-managedmediasource

## Manifest format support matrix

|Format|Video On-Demand|Live |Event|In-Progress Recording|
|:----:|:-------------:|:---:|:---:|:-------------------:|
|DASH  |**Y**          |**Y**| -   |**Y**                |
|HLS   |**Y**          |**Y**|**Y**| -                   |
|MSS   |**Y**          | -   | -   | -                   |

You can also create a [manifest parser plugin][] to support custom manifest
formats.

[manifest parser plugin]: https://shaka-player-demo.appspot.com/docs/api/tutorial-manifest-parser.html


## DASH features

DASH features supported:
 - VOD, Live, and In-Progress Recordings (dynamic VOD content)
 - MPD@timeShiftBufferDepth for seeking backward in Live streams
 - Multi-period content (static and dynamic)
 - Xlink elements (actuate=onLoad only, resolve-to-zero, fallback content)
 - All forms of segment index info: SegmentBase@indexRange, SegmentTimeline,
   SegmentTemplate@duration, SegmentTemplate@index, SegmentList
 - Multi-codec/multi-container manifests (we will negotiate support with the
   browser and choose the best ones)
 - Encrypted content (including custom ContentProtection schemas, PSSH in the
   manifest)
 - Key rotation
 - Trick mode tracks
 - WebVTT and TTML
 - CEA-608/708 captions
 - Multi-codec variants (on platforms with changeType support)
 - MPD chaining
 - MPD Patch updates for SegmentTemplate with $Number$, SegmentTimeline with
   $Number$ and SegmentTimeline with $Time$

DASH features **not** supported:
 - Xlink with actuate=onRequest
 - Manifests without any segment info:
   https://github.com/shaka-project/shaka-player/issues/1088
 - Multiple trick mode tracks for the same resolution at varying framerates or
   bitrates
 - Timescales so large that timestamps cannot be represented as integers in
   JavaScript (2^53): https://github.com/shaka-project/shaka-player/issues/1667
 - Modifying elements with an @schemeIdUri attribute via MPD Patch
 - Xlink dereferencing with MPD Patch


## HLS features

HLS features supported:
 - VOD, Live, and Event types
 - Low-latency streaming with partial segments, preload hints, delta updates and
   blocking playlist reload
 - Discontinuity
 - ISO-BMFF / MP4 / CMAF support
 - MPEG-2 TS support
 - WebVTT and TTML
 - CEA-608/708 captions
 - Encrypted content with PlayReady, Widevine and WisePlay
 - Encrypted content with FairPlay (Safari on macOS and iOS only)
 - AES-128, AES-256 and AES-256-CTR support on browsers with Web Crypto API support
 - SAMPLE-AES and SAMPLE-AES-CTR (identity) support on browsers with ClearKey support
 - Key rotation
 - Raw AAC, MP3, AC-3 and EC-3 (without an MP4 container)
 - I-frame-only playlists (for trick play and thumbnails)
 - #EXT-X-IMAGE-STREAM-INF for thumbnails
 - Interstitials
 - Container change during the playback (eg: MP4 to TS, or AAC to TS)

HLS features **not** supported:
 - X-SNAP attribute in interstitials

&lt;details&gt;
&lt;summary&gt;
&lt;h3&gt;Supported HLS tags&lt;/h3&gt;
&lt;/summary&gt;

For details on the HLS format and these tags&#039; meanings, see https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis

&lt;h4&gt; Multivariant Playlist tags&lt;/h4&gt;

- `#EXT-X-STREAM-INF:&lt;attribute-list&gt;`
  `&lt;URI&gt;`
- `#EXT-X-MEDIA:&lt;attribute-list&gt;`
- `#EXT-X-IMAGE-STREAM-INF:&lt;attribute-list&gt;`
- `#EXT-X-I-FRAME-STREAM-INF:&lt;attribute-list&gt;`
- `#EXT-X-SESSION-DATA:&lt;attribute-list&gt;`
- `#EXT-X-SESSION-KEY:&lt;attribute-list&gt;` EME Key-System selection and preloading
- `#EXT-X-START:TIME-OFFSET=&lt;n&gt;`
- `#EXT-X-CONTENT-STEERING:&lt;attribute-list&gt;` Content Steering
- `#EXT-X-DEFINE:&lt;attribute-list&gt;` Variable Substitution (`NAME,VALUE,QUERYPARAM` attributes)

&lt;h4&gt;Media Playlist tags&lt;/h4&gt;

- `#EXTM3U`
- `#EXTINF:&lt;duration&gt;,[&lt;title&gt;]`
- `#EXT-X-PLAYLIST-TYPE:&lt;type`
- `#EXT-X-ENDLIST`
- `#EXT-X-MEDIA-SEQUENCE=&lt;n&gt;`
- `#EXT-X-TARGETDURATION=&lt;n&gt;`
- `#EXT-X-DISCONTINUITY`
- `#EXT-X-DISCONTINUITY-SEQUENCE=&lt;n&gt;`
- `#EXT-X-BYTERANGE=&lt;n&gt;[@&lt;o&gt;]`
- `#EXT-X-MAP:&lt;attribute-list&gt;`
- `#EXT-X-KEY:&lt;attribute-list&gt;` (`KEYFORMAT=&quot;identity&quot;,METHOD=SAMPLE-AES` is only supports with MP4 segments)
- `#EXT-X-PROGRAM-DATE-TIME:&lt;attribute-list&gt;`
- `#EXT-X-START:TIME-OFFSET=&lt;n&gt;`
- `#EXT-X-SERVER-CONTROL:&lt;attribute-list&gt;`
- `#EXT-X-PART-INF:PART-TARGET=&lt;n&gt;`
- `#EXT-X-PART:&lt;attribute-list&gt;`
- `#EXT-X-SKIP:&lt;attribute-list&gt;` Delta Playlists
- `#EXT-X-DATERANGE:&lt;attribute-list&gt;` Metadata
- `#EXT-X-DEFINE:&lt;attribute-list&gt;` Variable Import and Substitution (`NAME,VALUE,IMPORT,QUERYPARAM` attributes)
- `#EXT-X-GAP`
- `#EXT-X-PRELOAD-HINT:&lt;attribute-list&gt;`
- `#EXT-X-BITRATE`

&lt;/details&gt;


## MPEG-5 Part2 LCEVC Support

**Only supported on browsers with Media Source Extensions SourceBuffer support**

 - MPEG-5 Part2 LCEVC decoding support (decoding provided by [lcevc_dec.js][], must be
   separately included)

 - Integration documentation : [docs](docs/design/current/lcevc-integration.md)

 - More on [MPEG-5 Part2 LCEVC][]

[lcevc_dec.js]: https://www.npmjs.com/package/lcevc_dec.js
[MPEG-5 Part2 LCEVC]: https://www.lcevc.org


## MSS features

MSS features supported:
 - VOD
 - AAC and H.264
 - Encrypted content (PlayReady)
 - TTML/DFXP
 - Only supported with [codem-isoboxer][]

MSS features **not** supported:
 - Live

[codem-isoboxer]: https://github.com/Dash-Industry-Forum/codem-isoboxer

## DRM support matrix

|Browser       |Widevine  |PlayReady|FairPlay |WisePlay |ClearKey⁶ |
|:------------:|:--------:|:-------:|:-------:|:-------:|:--------:|
|Chrome¹       |**Y**     | -       | -       | -       |**Y**     |
|Firefox²      |**Y**     | -       | -       | -       |**Y**     |
|Edge³         | -        |**Y**    | -       | -       | -        |
|Edge Chromium |**Y**     |**Y**    | -       | -       |**Y**     |
|Safari        | -        | -       |**Y**    | -       | -        |
|Opera         |**Y**     | -       | -       | -       |**Y**     |
|Chromecast    |**Y**     |**Y**    | -       | -       |**Y**     |
|Tizen TV      |**Y**     |**Y**    | -       | -       |**Y**     |
|WebOS⁷        |untested⁷ |untested⁷| -       | -       |untested⁷ |
|Hisense⁷      |untested⁷ |untested⁷| -       | -       |untested⁷ |
|Vizio⁷        |untested⁷ |untested⁷| -       | -       |untested⁷ |
|Xbox One      | -        |**Y**    | -       | -       | -        |
|Playstation 4⁷| -        |untested⁷| -       | -       |untested⁷ |
|Playstation 5⁷| -        |untested⁷| -       | -       |untested⁷ |
|Huawei⁷       | -        | -       | -       |untested⁷|untested⁷ |

Other DRM systems should work out of the box if they are interoperable and
compliant to the EME spec.

NOTES:
 - ¹: Only official Chrome builds contain the Widevine CDM.  Chromium built from
   source does not support DRM.
 - ²: DRM must be enabled by the user.  The first time a Firefox user visits a
   site with encrypted media, the user will be prompted to enable DRM.
 - ³: PlayReady in Edge does not seem to work on a VM or over Remote Desktop.
 - ⁶: ClearKey is a useful tool for debugging, and does not provide actual
   content security.
 - ⁷: These are expected to work, but are community-supported and untested by
   us.

|Manifest  |Widevine  |PlayReady|FairPlay |WisePlay |ClearKey  |
|:--------:|:--------:|:-------:|:-------:|:-------:|:--------:|
|DASH      |**Y**     |**Y**    |**Y**    |**Y**    |**Y**     |
|HLS       |**Y**     |**Y**    |**Y** ¹  |**Y**    |**Y**     |
|MSS       | -        |**Y**    | -       | -       | -        |

NOTES:
 - ¹: By default, FairPlay is handled using Apple&#039;s native HLS player, when on
   Safari. We do support FairPlay through MSE/EME, however. See the
   `streaming.useNativeHlsForFairPlay` configuration value.


## Media container and subtitle support

Shaka Player supports:
  - ISO-BMFF / CMAF / MP4
    - Depends on browser support for the container via MediaSource
    - Can parse &quot;sidx&quot; box for DASH&#039;s SegmentBase@indexRange and
      SegmentTemplate@index
    - Can find and parse &quot;tfdt&quot; box to find segment start time in HLS
    - For MSS, [codem-isoboxer][] v0.3.7+ is required
  - WebM
    - Depends on browser support for the container via MediaSource
    - Can parse [cueing data][] elements for DASH&#039;s SegmentBase@indexRange and
      SegmentTemplate@index
    - Not supported in HLS
  - MPEG-2 TS
    - Can be played on any browser which supports MP4
    - Can find and parse timestamps to find segment start time in HLS
  - WebVTT
    - Supported in both text form and embedded in MP4
  - TTML
    - Supported in both XML form and embedded in MP4
  - CEA-608
    - Supported embedded in MP4 and TS
  - CEA-708
    - Supported embedded in MP4 and TS
  - Raw AAC
    - Supported in raw AAC container and transmuxing to AAC in MP4 container
      (depends on browser support via MediaSource).
  - Raw MP3
    - Supported in raw MP3 container and transmuxing to MP3 in MP4 container
      (depends on browser support via MediaSource).
  - Raw AC-3
    - Supported in raw AC-3 container and transmuxing to AC-3 in MP4 container
      (depends on browser support via MediaSource).
  - Raw EC-3
    - Supported in raw EC-3 container and transmuxing to EC-3 in MP4 container
      (depends on browser support via MediaSource).
  - SubRip (SRT)
    - UTF-8 encoding only
  - LyRiCs (LRC)
    - UTF-8 encoding only
  - SubStation Alpha (SSA, ASS)
    - UTF-8 encoding only
  - SubViewer (SBV)
    - UTF-8 encoding only

Subtitles are rendered by the browser by default. Applications can create a
[text display plugin][] for customer rendering to go beyond browser-supported
attributes.

[cueing data]: https://www.webmproject.org/docs/container/#cueing-data
[text display plugin]: https://nightly-dot-shaka-player-demo.appspot.com/docs/api/shaka.extern.TextDisplayer.html
&lt;!-- TODO: replace with a link to a TextDisplayer tutorial --&gt;


## Transmuxer support

Shaka Player supports:
  - Raw AAC to AAC in MP4
  - Raw MP3 to MP3 in MP4
  - Raw AC-3 to AC-3 in MP4
  - Raw EC-3 to EC-3 in MP4
  - AAC in MPEG-2 TS to AAC in MP4
  - AC-3 in MPEG-2 TS to AC-3 in MP4
  - EC-3 in MPEG-2 TS to EC-3 in MP4
  - MP3 in MPEG-2 TS to MP3 in MP4
  - MP3 in MPEG-2 TS to raw MP3
  - Opus in MPEG-2 TS to MP3 in MP4
  - H.264 in MPEG-2 TS to H.264 in MP4
  - H.265 in MPEG-2 TS to H.265 in MP4
  - Muxed content in MPEG-2 TS with the previous codecs


## Thumbnails support

Shaka Player supports:
  - Internal DASH thumbnails. Using DASH-IF IOP Image Adaptation Set
  - Internal HLS thumbnails. Using HLS Image Media Playlist
  - Internal HLS thumbnails. Using I-frame-only playlists with mjpg codec
  - External WebVTT with images/sprites (only for VoD)


## Monetization with Ads

Shaka Player supports:
- IMA SDK for Client-Side Ad Insertion
- IMA DAI SDK for Server-Side Ad Insertion
- AWS MediaTailor for Client-Side
- AWS MediaTailor for Server-Side
- AWS MediaTailor overlays
- HLS interstitials
- DASH Media Presentation Insertion (MPD alternate)
- Custom Interstitials
- Basic support of VAST and VMAP without IMA (playback without tracking)


## Content Steering support
Shaka Player supports Content Steering (v1) in DASH and HLS.

Content Steering features supported:
- TTL, if missing, the default value is 300 seconds.
- RELOAD-URI, if missing we use the url provided in the manifest as fallback.
- PATHWAY-PRIORITY only HOST replacement

Content Steering features **not** supported:
- PATHWAY-CLONES other replacements than HOST.


## VR support
Shaka Player supports VR when:
- Content is automatically treated as VR if it fits the following criteria:
  - HLS or DASH manifest
  - fMP4 segments
  - Init segment contains `prji` and `hfov` boxes
- Or, if it is manually enabled via the UI config.

VR modes supported:
- Equirectangular projection with 360 degrees of horizontal field of view.
- Half equirectangular projection with 180 degrees of horizontal field of view.
- Cubemap projection with 360 degrees of horizontal field of view.


NOTES:
  - VR is only supported for clear streams or HLS-AES stream. DRM prevents
    access to the video pixels for transformation.


## Builds

Shaka currently provides the following versions:
- Complete build with UI (`shaka-player.ui.js`)
- Complete build without UI (`shaka-player.compiled.js`)
- DASH build without UI, Cast and Offline (`shaka-player.dash.js`)
- HLS build without UI, Cast and Offline (`shaka-player.hls.js`)


## Documentation &amp; Important Links ##

 * [Demo](https://shaka-player-demo.appspot.com)([sources](demo/))
 * [Nightly Demo](https://nightly-dot-shaka-player-demo.appspot.com)
 * [Demo index](https://index-dot-shaka-player-demo.appspot.com)
 * [API documentation](https://shaka-player-demo.appspot.com/docs/api/index.html)
 * [Tutorials](https://shaka-player-demo.appspot.com/docs/api/tutorial-welcome.html)
 * [Hosted builds on Google Hosted Libraries](https://developers.google.com/speed/libraries/#shaka-player)
 * [Hosted builds on jsDelivr](https://www.jsdelivr.com/package/npm/shaka-player)
 * [Development roadmap](roadmap.md)
 * Subscribe to releases by following
     [instructions from this blog](https://www.jessesquires.com/blog/2020/07/30/github-tip-watching-releases/)


## FAQ ##

For general help and before filing any bugs, please read the
[FAQ](docs/tutorials/faq.md).


## Contributing ##

If you have improvements or fixes, we would love to have your contributions.
Please read [CONTRIBUTING.md](CONTRIBUTING.md)
for more information on the process we would like contributors to follow.


## Framework Integrations ##

The Shaka team doesn&#039;t have the bandwidth and experience to provide guidance and
support for integrating Shaka Player with specific frameworks, but some of our
users have successfully done so and created tutorials to help other beginners.

Shaka + ReactJS Library
- https://github.com/winoffrg/limeplay

Shaka + ReactJS integrations:
- https://github.com/matvp91/shaka-player-react
- https://github.com/amit08255/shaka-player-react-with-ui-config

Shaka + Next.js integration:
- https://github.com/amit08255/shaka-player-react-with-ui-config/tree/master/nextjs-shaka-player

Shaka + Vue.js integrations:
- https://github.com/davidjamesherzog/shaka-player-vuejs

Shaka + Nuxt.js integration:
- https://github.com/davidjamesherzog/shaka-player-nuxtjs

Shaka + video.js integration:
- https://github.com/davidjamesherzog/videojs-shaka

Shaka + Angular integration:
- https://github.com/PatrickKalkman/shaka-player-angular

If you have published Shaka Integration code/tutorials, please feel free to submit PRs
to add them to this list, we will gladly approve!
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[facebook/react]]></title>
            <link>https://github.com/facebook/react</link>
            <guid>https://github.com/facebook/react</guid>
            <pubDate>Thu, 15 May 2025 00:04:43 GMT</pubDate>
            <description><![CDATA[The library for web and native user interfaces.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/facebook/react">facebook/react</a></h1>
            <p>The library for web and native user interfaces.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 235,419</p>
            <p>Forks: 48,485</p>
            <p>Stars today: 48 stars today</p>
            <h2>README</h2><pre># [React](https://react.dev/) &amp;middot; [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/facebook/react/blob/main/LICENSE) [![npm version](https://img.shields.io/npm/v/react.svg?style=flat)](https://www.npmjs.com/package/react) [![(Runtime) Build and Test](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml/badge.svg)](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml) [![(Compiler) TypeScript](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml/badge.svg?branch=main)](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://legacy.reactjs.org/docs/how-to-contribute.html#your-first-pull-request)

React is a JavaScript library for building user interfaces.

* **Declarative:** React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.
* **Component-Based:** Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep the state out of the DOM.
* **Learn Once, Write Anywhere:** We don&#039;t make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using [Node](https://nodejs.org/en) and power mobile apps using [React Native](https://reactnative.dev/).

[Learn how to use React in your project](https://react.dev/learn).

## Installation

React has been designed for gradual adoption from the start, and **you can use as little or as much React as you need**:

* Use [Quick Start](https://react.dev/learn) to get a taste of React.
* [Add React to an Existing Project](https://react.dev/learn/add-react-to-an-existing-project) to use as little or as much React as you need.
* [Create a New React App](https://react.dev/learn/start-a-new-react-project) if you&#039;re looking for a powerful JavaScript toolchain.

## Documentation

You can find the React documentation [on the website](https://react.dev/).

Check out the [Getting Started](https://react.dev/learn) page for a quick overview.

The documentation is divided into several sections:

* [Quick Start](https://react.dev/learn)
* [Tutorial](https://react.dev/learn/tutorial-tic-tac-toe)
* [Thinking in React](https://react.dev/learn/thinking-in-react)
* [Installation](https://react.dev/learn/installation)
* [Describing the UI](https://react.dev/learn/describing-the-ui)
* [Adding Interactivity](https://react.dev/learn/adding-interactivity)
* [Managing State](https://react.dev/learn/managing-state)
* [Advanced Guides](https://react.dev/learn/escape-hatches)
* [API Reference](https://react.dev/reference/react)
* [Where to Get Support](https://react.dev/community)
* [Contributing Guide](https://legacy.reactjs.org/docs/how-to-contribute.html)

You can improve it by sending pull requests to [this repository](https://github.com/reactjs/react.dev).

## Examples

We have several examples [on the website](https://react.dev/). Here is the first one to get you started:

```jsx
import { createRoot } from &#039;react-dom/client&#039;;

function HelloMessage({ name }) {
  return &lt;div&gt;Hello {name}&lt;/div&gt;;
}

const root = createRoot(document.getElementById(&#039;container&#039;));
root.render(&lt;HelloMessage name=&quot;Taylor&quot; /&gt;);
```

This example will render &quot;Hello Taylor&quot; into a container on the page.

You&#039;ll notice that we used an HTML-like syntax; [we call it JSX](https://react.dev/learn#writing-markup-with-jsx). JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML.

## Contributing

The main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.

### [Code of Conduct](https://code.fb.com/codeofconduct)

Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read [the full text](https://code.fb.com/codeofconduct) so that you can understand what actions will and will not be tolerated.

### [Contributing Guide](https://legacy.reactjs.org/docs/how-to-contribute.html)

Read our [contributing guide](https://legacy.reactjs.org/docs/how-to-contribute.html) to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.

### [Good First Issues](https://github.com/facebook/react/labels/good%20first%20issue)

To help you get your feet wet and get you familiar with our contribution process, we have a list of [good first issues](https://github.com/facebook/react/labels/good%20first%20issue) that contain bugs that have a relatively limited scope. This is a great place to get started.

### License

React is [MIT licensed](./LICENSE).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[DataDog/dd-trace-js]]></title>
            <link>https://github.com/DataDog/dd-trace-js</link>
            <guid>https://github.com/DataDog/dd-trace-js</guid>
            <pubDate>Thu, 15 May 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[Datadog APM client for Node.js]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/DataDog/dd-trace-js">DataDog/dd-trace-js</a></h1>
            <p>Datadog APM client for Node.js</p>
            <p>Language: JavaScript</p>
            <p>Stars: 705</p>
            <p>Forks: 335</p>
            <p>Stars today: 1 star today</p>
            <h2>README</h2><pre># `dd-trace`: Node.js APM Tracer Library

[![npm v5](https://img.shields.io/npm/v/dd-trace/latest?color=blue&amp;label=dd-trace%40v5&amp;logo=npm)](https://www.npmjs.com/package/dd-trace)
[![codecov](https://codecov.io/gh/DataDog/dd-trace-js/branch/master/graph/badge.svg)](https://codecov.io/gh/DataDog/dd-trace-js)

&lt;img align=&quot;right&quot; src=&quot;https://user-images.githubusercontent.com/551402/208212084-1d0c07e2-4135-4c61-b2da-8f2fddbc66ed.png&quot; alt=&quot;Bits the dog  JavaScript&quot; width=&quot;200px&quot;/&gt;

`dd-trace` is an npm package that you can install in your Node.js application to capture APM (Application Performance Monitoring) data. In Datadog terminology this library is called a Tracer. This data is then sent off to a process which collects and aggregates the data, called an Agent. Finally the data is sent off to the Datadog servers where it&#039;s stored and made available for querying in a myriad of ways, such as displaying in a dashboard or triggering alerts.

![Tracer, Agent, Datadog relationship diagram](./docs/relationship.png)


## Documentation

Most of the documentation for `dd-trace` is available on these webpages:

- [Tracing Node.js Applications](https://docs.datadoghq.com/tracing/languages/nodejs/) - most project documentation, including setup instructions
- [Configuring the Node.js Tracing Library](https://docs.datadoghq.com/tracing/trace_collection/library_config/nodejs) - environment variables and config options
- [API Documentation](https://datadog.github.io/dd-trace-js) - method signatures, plugin list, and some usage examples
- [APM Terms and Concepts](https://docs.datadoghq.com/tracing/visualization/) - a glossary of concepts applicable across all languages


## Version Release Lines and Maintenance

&gt; **Node.js v24 Notice**: We&#039;re currently adding compatibility for Node.js v24. To use the tracer with your application either continue to use Node.js v22 (LTS), or do both of the following as a workaround:
&gt; * Install v5.52.0 (or newer) of the tracer
&gt; * Set `--no-async-context-frame` either using a CLI argument or via `NODE_OPTIONS`
&gt; Once support for Node.js v24 is complete this flag will no longer be needed.

| Release Line                                             | Latest Version                                                                                         | Node.js  | [SSI](https://docs.datadoghq.com/tracing/trace_collection/automatic_instrumentation/single-step-apm/?tab=linuxhostorvm) | [K8s Injection](https://docs.datadoghq.com/tracing/trace_collection/library_injection_local/?tab=kubernetes) |Status          |Initial Release | End of Life |
| :---:                                                    | :---:                                                                                                  | :---:    | :---:  | :---:  | :---:           | :---:          | :---:       |
| [`v1`](https://github.com/DataDog/dd-trace-js/tree/v1.x) | ![npm v1](https://img.shields.io/npm/v/dd-trace/legacy-v1?color=white&amp;label=%20&amp;style=flat-square)     | `&gt;= v12` | NO | NO | **EOL** | 2021-07-13     | 2022-02-25  |
| [`v2`](https://github.com/DataDog/dd-trace-js/tree/v2.x) | ![npm v2](https://img.shields.io/npm/v/dd-trace/latest-node12?color=white&amp;label=%20&amp;style=flat-square) | `&gt;= v12` | NO | NO | **EOL** | 2022-01-28     | 2023-08-15  |
| [`v3`](https://github.com/DataDog/dd-trace-js/tree/v3.x) | ![npm v3](https://img.shields.io/npm/v/dd-trace/latest-node14?color=white&amp;label=%20&amp;style=flat-square) | `&gt;= v14` | NO | YES | **EOL** | 2022-08-15     | 2024-05-15  |
| [`v4`](https://github.com/DataDog/dd-trace-js/tree/v4.x) | ![npm v4](https://img.shields.io/npm/v/dd-trace/latest-node16?color=white&amp;label=%20&amp;style=flat-square) | `&gt;= v16` | YES | YES | **EOL**     | 2023-05-12     | 2025-01-11     |
| [`v5`](https://github.com/DataDog/dd-trace-js/tree/v5.x) | ![npm v5](https://img.shields.io/npm/v/dd-trace/latest?color=white&amp;label=%20&amp;style=flat-square)        | `&gt;= v18` | YES | YES | **Current**     | 2024-01-11     | Unknown     |

* EOL = End-of-life
* SSI = Single-Step Install

We currently maintain one release line, namely `v5`.

For any new projects it is recommended to use the `v5` release line:

```sh
$ npm install dd-trace
$ yarn add dd-trace
```

Existing projects that need to use EOL versions of Node.js may continue to use these older release lines.
This is done by specifying the version when installing the package.

```sh
$ npm install dd-trace@4 # or whatever version you need
$ yarn add dd-trace@4 # or whatever version you need
```

Note, however, that the end-of-life release lines are no longer maintained and will not receive updates.

Any backwards-breaking functionality that is introduced into the library will result in an increase of the major version of the library and therefore a new release line.
Such releases are kept to a minimum to reduce the pain of upgrading the library.

When a new release line is introduced the previous release line then enters maintenance mode where it will receive updates for the next year.
Once that year is up the release line enters End of Life and will not receive new updates.
The library also follows the Node.js LTS lifecycle wherein new release lines drop compatibility with Node.js versions that reach end-of-life (with the maintenance release line still receiving updates for a year).

For more information about library versioning and compatibility, see the [Node.js Compatibility Requirements](https://docs.datadoghq.com/tracing/trace_collection/compatibility/nodejs/#releases) page.

Changes associated with each individual release are documented on the [GitHub Releases](https://github.com/DataDog/dd-trace-js/releases) screen.


## Development and Contribution

Please read the [CONTRIBUTING.md](https://github.com/DataDog/dd-trace-js/blob/master/CONTRIBUTING.md) document before contributing to this open source project.


## ECMAScript Modules (ESM) Support

ESM support requires an _additional_ command line argument when starting the Node.js process.
For more information, see the [section on ESM support](https://docs.datadoghq.com/tracing/trace_collection/automatic_instrumentation/dd_libraries/nodejs/#esm-applications-only-import-the-loader) in the Node.js tracer documentation.


## Serverless / Lambda

Note that there is a separate Lambda project, [datadog-lambda-js](https://github.com/DataDog/datadog-lambda-js), that is responsible for enabling metrics and distributed tracing when your application runs on Lambda.
That project does depend on the `dd-trace` package but also adds a lot of Lambda-related niceties.
If you find any issues specific to Lambda integrations then the issues may get solved quicker if they&#039;re added to that repository.
That said, even if your application runs on Lambda, any core instrumentation issues not related to Lambda itself may be better served by opening an issue in this repository.
Regardless of where you open the issue, someone at Datadog will try to help.


## Bundling

If you would like to trace your bundled application then please read this page on [bundling and dd-trace](https://docs.datadoghq.com/tracing/trace_collection/automatic_instrumentation/dd_libraries/nodejs/#bundling). It includes information on how to use our ESBuild plugin and includes caveats for other bundlers.


## Security Vulnerabilities

Please refer to the [SECURITY.md](https://github.com/DataDog/dd-trace-js/blob/master/SECURITY.md) document if you have found a security issue.


## Datadog With OpenTelemetery

Please refer to the [Node.js Custom Instrumentation using OpenTelemetry API](https://docs.datadoghq.com/tracing/trace_collection/custom_instrumentation/nodejs/otel/) document. It includes information on how to use the OpenTelemetry API with dd-trace-js.

Note that our internal implementation of the OpenTelemetry API is currently set within the version range `&gt;=1.0.0 &lt;1.9.0`. This range will be updated at a regular cadence therefore, we recommend updating your tracer to the latest release to ensure up to date support.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[jgraph/drawio]]></title>
            <link>https://github.com/jgraph/drawio</link>
            <guid>https://github.com/jgraph/drawio</guid>
            <pubDate>Thu, 15 May 2025 00:04:41 GMT</pubDate>
            <description><![CDATA[draw.io is a JavaScript, client-side editor for general diagramming.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/jgraph/drawio">jgraph/drawio</a></h1>
            <p>draw.io is a JavaScript, client-side editor for general diagramming.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,471</p>
            <p>Forks: 251</p>
            <p>Stars today: 31 stars today</p>
            <h2>README</h2><pre>About
-----
draw.io, this project, is a configurable diagramming/whiteboarding visualization application. draw.io is jointly owned and developed by JGraph Ltd and draw.io AG.

As well as running this project, we run a production-grade deployment of the diagramming interface at https://app.diagrams.net.

License
-----------------

The minified code authored by us in this repo is licensed under an Apache v2 license, but the sources to build those files are not in this repo. This is not an open source project. We do not accept PRs unless one of the maintainers specifically says it&#039;s OK (basically never).

The JGraph provided icons and diagram templates are licensed under the [CC BY 4.0](https://creativecommons.org/licenses/by/4.0/). Additional terms may also apply where the icons are originally defined by a third-party copyright holder. We have checked in all cases that the original license allows use in this project. Also see the terms for using the draw.io logo below.

Additional minified JavaScript files and Java libraries are used in this project. All of the licenses are deemed compatible with the Apache 2.0, nothing is GPL or AGPL, due diligence is performed on all third-party code.

We make no copyright claim on the content you create with this software, regardless of the copyright of individual icons used in such content.

Scope of the Project
--------------------

draw.io is a diagramming or whiteboarding application, depending on which theme is selected. It is not an SVG editing app, the SVG export is designed only for embedding in web pages, not for further editing in other tools.

The application is designed to be entirely as-is. draw.io is not suitable as a framework for building other products from, as source code is not provided. For this try either [Tldraw](https://github.com/tldraw/tldraw) or [Excalidraw](https://github.com/excalidraw/excalidraw).

Note, in particular, we don&#039;t have support for collaborative editing in this project. If this is important, one of the projects above is likely a better choice.

If you are using a draw.io project/product and have issues or questions about the editor itself, the issue tracker and discussion in this GitHub project are likely a good place to look.

Running
-------

One way to run draw.io is to fork this project, [publish the master branch to GitHub pages](https://help.github.com/categories/github-pages-basics/) and the [pages sites](https://jgraph.github.io/drawio/src/main/webapp/index.html) will have the full editor functionality (sans the integrations).

Another way is to use [the recommended Docker project](https://github.com/jgraph/docker-drawio) or to download [draw.io Desktop](https://get.diagrams.net).

The full packaged .war of the client and servlets is built when the project is tagged and available on the [releases page](https://github.com/jgraph/draw.io/releases).

Supported Browsers
------------------

draw.io supports Chrome 98+, Firefox 94+, Safari 15.4+, Opera 84+, WebView Android 98+, Safari iOS 15.4+ and Edge 98+.

Logo and trademark usage
------------------------

draw.io is a registered EU trademark, #018062448

Do not use the draw.io name or any draw.io logo in a way that suggests you are JGraph, your offering or project is by JGraph, or that JGraph is endorsing you or your offering or project.

Do not use any draw.io logo as the icon or logo for your business/organization, offering, project, domain name, social media account, or website.

Do not modify the permitted draw.io logos, including changing the color, dimensions, or combining with other words or design elements.

Do not use JGraph trademarks or logos without JGraph’s prior written permission.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[gradio-app/fastrtc]]></title>
            <link>https://github.com/gradio-app/fastrtc</link>
            <guid>https://github.com/gradio-app/fastrtc</guid>
            <pubDate>Thu, 15 May 2025 00:04:40 GMT</pubDate>
            <description><![CDATA[The python library for real-time communication]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/gradio-app/fastrtc">gradio-app/fastrtc</a></h1>
            <p>The python library for real-time communication</p>
            <p>Language: JavaScript</p>
            <p>Stars: 3,874</p>
            <p>Forks: 336</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>&lt;div style=&#039;text-align: center; margin-bottom: 1rem; display: flex; justify-content: center; align-items: center;&#039;&gt;
    &lt;h1 style=&#039;color: white; margin: 0;&#039;&gt;FastRTC&lt;/h1&gt;
    &lt;img src=&#039;https://huggingface.co/datasets/freddyaboulton/bucket/resolve/main/fastrtc_logo_small.png&#039;
         alt=&quot;FastRTC Logo&quot; 
         style=&quot;margin-right: 10px;&quot;&gt;
&lt;/div&gt;

&lt;div style=&quot;display: flex; flex-direction: row; justify-content: center&quot;&gt;
&lt;img style=&quot;display: block; padding-right: 5px; height: 20px;&quot; alt=&quot;Static Badge&quot; src=&quot;https://img.shields.io/pypi/v/fastrtc&quot;&gt; 
&lt;a href=&quot;https://github.com/gradio-app/fastrtc&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Static Badge&quot; src=&quot;https://img.shields.io/badge/github-white?logo=github&amp;logoColor=black&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;h3 style=&#039;text-align: center&#039;&gt;
The Real-Time Communication Library for Python. 
&lt;/h3&gt;

Turn any python function into a real-time audio and video stream over WebRTC or WebSockets.

## Installation

```bash
pip install fastrtc
```

to use built-in pause detection (see [ReplyOnPause](https://fastrtc.org/userguide/audio/#reply-on-pause)), and text to speech (see [Text To Speech](https://fastrtc.org/userguide/audio/#text-to-speech)), install the `vad` and `tts` extras:

```bash
pip install &quot;fastrtc[vad, tts]&quot;
```

## Key Features

- 🗣️ Automatic Voice Detection and Turn Taking built-in, only worry about the logic for responding to the user.
- 💻 Automatic UI - Use the `.ui.launch()` method to launch the webRTC-enabled built-in Gradio UI.
- 🔌 Automatic WebRTC Support - Use the `.mount(app)` method to mount the stream on a FastAPI app and get a webRTC endpoint for your own frontend! 
- ⚡️ Websocket Support - Use the `.mount(app)` method to mount the stream on a FastAPI app and get a websocket endpoint for your own frontend! 
- 📞 Automatic Telephone Support - Use the `fastphone()` method of the stream to launch the application and get a free temporary phone number!
- 🤖 Completely customizable backend - A `Stream` can easily be mounted on a FastAPI app so you can easily extend it to fit your production application. See the [Talk To Claude](https://huggingface.co/spaces/fastrtc/talk-to-claude) demo for an example on how to serve a custom JS frontend.

## Docs

[https://fastrtc.org](https://fastrtc.org)

## Examples
See the [Cookbook](https://fastrtc.org/cookbook/) for examples of how to use the library.

&lt;table&gt;
&lt;tr&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🗣️👀 Gemini Audio Video Chat&lt;/h3&gt;
&lt;p&gt;Stream BOTH your webcam video and audio feeds to Google Gemini. You can also upload images to augment your conversation!&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/9636dc97-4fee-46bb-abb8-b92e69c08c71&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/freddyaboulton/gemini-audio-video-chat&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/freddyaboulton/gemini-audio-video-chat/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🗣️ Google Gemini Real Time Voice API&lt;/h3&gt;
&lt;p&gt;Talk to Gemini in real time using Google&#039;s voice API.&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/ea6d18cb-8589-422b-9bba-56332d9f61de&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/talk-to-gemini&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/talk-to-gemini/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🗣️ OpenAI Real Time Voice API&lt;/h3&gt;
&lt;p&gt;Talk to ChatGPT in real time using OpenAI&#039;s voice API.&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/178bdadc-f17b-461a-8d26-e915c632ff80&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/talk-to-openai&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/talk-to-openai/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🤖 Hello Computer&lt;/h3&gt;
&lt;p&gt;Say computer before asking your question!&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/afb2a3ef-c1ab-4cfb-872d-578f895a10d5&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/hello-computer&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/hello-computer/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🤖 Llama Code Editor&lt;/h3&gt;
&lt;p&gt;Create and edit HTML pages with just your voice! Powered by SambaNova systems.&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/98523cf3-dac8-4127-9649-d91a997e3ef5&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/llama-code-editor&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/llama-code-editor/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🗣️ Talk to Claude&lt;/h3&gt;
&lt;p&gt;Use the Anthropic and Play.Ht APIs to have an audio conversation with Claude.&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/fb6ef07f-3ccd-444a-997b-9bc9bdc035d3&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/talk-to-claude&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/talk-to-claude/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🎵 Whisper Transcription&lt;/h3&gt;
&lt;p&gt;Have whisper transcribe your speech in real time!&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/87603053-acdc-4c8a-810f-f618c49caafb&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/whisper-realtime&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/whisper-realtime/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;📷 Yolov10 Object Detection&lt;/h3&gt;
&lt;p&gt;Run the Yolov10 model on a user webcam stream in real time!&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/f82feb74-a071-4e81-9110-a01989447ceb&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/object-detection&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/object-detection/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🗣️ Kyutai Moshi&lt;/h3&gt;
&lt;p&gt;Kyutai&#039;s moshi is a novel speech-to-speech model for modeling human conversations.&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/becc7a13-9e89-4a19-9df2-5fb1467a0137&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/freddyaboulton/talk-to-moshi&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/freddyaboulton/talk-to-moshi/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🗣️ Hello Llama: Stop Word Detection&lt;/h3&gt;
&lt;p&gt;A code editor built with Llama 3.3 70b that is triggered by the phrase &quot;Hello Llama&quot;. Build a Siri-like coding assistant in 100 lines of code!&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/3e10cb15-ff1b-4b17-b141-ff0ad852e613&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/freddyaboulton/hey-llama-code-editor&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/freddyaboulton/hey-llama-code-editor/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

## Usage

This is an shortened version of the official [usage guide](https://freddyaboulton.github.io/gradio-webrtc/user-guide/). 

- `.ui.launch()`: Launch a built-in UI for easily testing and sharing your stream. Built with [Gradio](https://www.gradio.app/).
- `.fastphone()`: Get a free temporary phone number to call into your stream. Hugging Face token required.
- `.mount(app)`: Mount the stream on a [FastAPI](https://fastapi.tiangolo.com/) app. Perfect for integrating with your already existing production system.


## Quickstart

### Echo Audio

```python
from fastrtc import Stream, ReplyOnPause
import numpy as np

def echo(audio: tuple[int, np.ndarray]):
    # The function will be passed the audio until the user pauses
    # Implement any iterator that yields audio
    # See &quot;LLM Voice Chat&quot; for a more complete example
    yield audio

stream = Stream(
    handler=ReplyOnPause(echo),
    modality=&quot;audio&quot;, 
    mode=&quot;send-receive&quot;,
)
```

### LLM Voice Chat

```py
from fastrtc import (
    ReplyOnPause, AdditionalOutputs, Stream,
    audio_to_bytes, aggregate_bytes_to_16bit
)
import gradio as gr
from groq import Groq
import anthropic
from elevenlabs import ElevenLabs

groq_client = Groq()
claude_client = anthropic.Anthropic()
tts_client = ElevenLabs()


# See &quot;Talk to Claude&quot; in Cookbook for an example of how to keep 
# track of the chat history.
def response(
    audio: tuple[int, np.ndarray],
):
    prompt = groq_client.audio.transcriptions.create(
        file=(&quot;audio-file.mp3&quot;, audio_to_bytes(audio)),
        model=&quot;whisper-large-v3-turbo&quot;,
        response_format=&quot;verbose_json&quot;,
    ).text
    response = claude_client.messages.create(
        model=&quot;claude-3-5-haiku-20241022&quot;,
        max_tokens=512,
        messages=[{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: prompt}],
    )
    response_text = &quot; &quot;.join(
        block.text
        for block in response.content
        if getattr(block, &quot;type&quot;, None) == &quot;text&quot;
    )
    iterator = tts_client.text_to_speech.convert_as_stream(
        text=response_text,
        voice_id=&quot;JBFqnCBsd6RMkjVDRZzb&quot;,
        model_id=&quot;eleven_multilingual_v2&quot;,
        output_format=&quot;pcm_24000&quot;
        
    )
    for chunk in aggregate_bytes_to_16bit(iterator):
        audio_array = np.frombuffer(chunk, dtype=np.int16).reshape(1, -1)
        yield (24000, audio_array)

stream = Stream(
    modality=&quot;audio&quot;,
    mode=&quot;send-receive&quot;,
    handler=ReplyOnPause(response),
)
```

### Webcam Stream

```python
from fastrtc import Stream
import numpy as np


def flip_vertically(image):
    return np.flip(image, axis=0)


stream = Stream(
    handler=flip_vertically,
    modality=&quot;video&quot;,
    mode=&quot;send-receive&quot;,
)
```

### Object Detection

```python
from fastrtc import Stream
import gradio as gr
import cv2
from huggingface_hub import hf_hub_download
from .inference import YOLOv10

model_file = hf_hub_download(
    repo_id=&quot;onnx-community/yolov10n&quot;, filename=&quot;onnx/model.onnx&quot;
)

# git clone https://huggingface.co/spaces/fastrtc/object-detection
# for YOLOv10 implementation
model = YOLOv10(model_file)

def detection(image, conf_threshold=0.3):
    image = cv2.resize(image, (model.input_width, model.input_height))
    new_image = model.detect_objects(image, conf_threshold)
    return cv2.resize(new_image, (500, 500))

stream = Stream(
    handler=detection,
    modality=&quot;video&quot;, 
    mode=&quot;send-receive&quot;,
    additional_inputs=[
        gr.Slider(minimum=0, maximum=1, step=0.01, value=0.3)
    ]
)
```

## Running the Stream

Run:

### Gradio

```py
stream.ui.launch()
```

### Telephone (Audio Only)

    ```py
    stream.fastphone()
    ```

### FastAPI

```py
app = FastAPI()
stream.mount(app)

# Optional: Add routes
@app.get(&quot;/&quot;)
async def _():
    return HTMLResponse(content=open(&quot;index.html&quot;).read())

# uvicorn app:app --host 0.0.0.0 --port 8000
```
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[rabbitmq/rabbitmq-server]]></title>
            <link>https://github.com/rabbitmq/rabbitmq-server</link>
            <guid>https://github.com/rabbitmq/rabbitmq-server</guid>
            <pubDate>Thu, 15 May 2025 00:04:39 GMT</pubDate>
            <description><![CDATA[Open source RabbitMQ: core server and tier 1 (built-in) plugins]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/rabbitmq/rabbitmq-server">rabbitmq/rabbitmq-server</a></h1>
            <p>Open source RabbitMQ: core server and tier 1 (built-in) plugins</p>
            <p>Language: JavaScript</p>
            <p>Stars: 12,783</p>
            <p>Forks: 3,947</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>[![Test](https://github.com/rabbitmq/rabbitmq-server/actions/workflows/test.yaml/badge.svg)](https://github.com/rabbitmq/rabbitmq-server/actions/workflows/test.yaml)

# RabbitMQ Server

[RabbitMQ](https://rabbitmq.com) is a [feature rich](https://www.rabbitmq.com/docs),
multi-protocol messaging and streaming broker. It supports:

 * AMQP 1.0
 * AMQP 0-9-1
 * [RabbitMQ Stream Protocol](https://www.rabbitmq.com/docs/streams)
 * MQTT 3.1, 3.1.1, and 5.0
 * STOMP 1.0 through 1.2
 * [MQTT over WebSocket](https://www.rabbitmq.com/docs/web-mqtt)
 * [STOMP over WebSocket](https://www.rabbitmq.com/docs/web-stomp)
 * AMQP 1.0 over WebSocket (supported in [VMware Tanzu RabbitMQ](https://www.vmware.com/products/app-platform/tanzu-rabbitmq))


## Installation

 * [Currently supported](https://www.rabbitmq.com/release-information) released series
 * [Installation guides](https://www.rabbitmq.com/docs/download) for various platforms
 * [Kubernetes Cluster Operator](https://www.rabbitmq.com/kubernetes/operator/operator-overview)
 * [Changelog](https://www.rabbitmq.com/release-information)
 * [Releases](https://github.com/rabbitmq/rabbitmq-server/releases) on GitHub
 * [Community Support Eligibility Policy](https://github.com/rabbitmq/rabbitmq-server/blob/main/COMMUNITY_SUPPORT.md)
 * [Supported Erlang versions](https://www.rabbitmq.com/docs/which-erlang)


## Tutorials and Documentation

 * [RabbitMQ tutorials](https://www.rabbitmq.com/tutorials) and their [executable versions on GitHub](https://github.com/rabbitmq/rabbitmq-tutorials)
 * [Documentation guides](https://rabbitmq.com/docs/)
 * [RabbitMQ blog](https://blog.rabbitmq.com/)

Some key doc guides include

 * [CLI tools guide](https://www.rabbitmq.com/docs/cli)
 * [Clustering](https://www.rabbitmq.com/docs/clustering) and [Cluster Formation](https://www.rabbitmq.com/docs/cluster-formation)
 * [Configuration guide](https://www.rabbitmq.com/docs/configure)
 * [Client libraries and tools](https://www.rabbitmq.com/client-libraries/devtools)
 * [Monitoring](https://www.rabbitmq.com/docs/monitoring) and [Prometheus/Grafana](https://www.rabbitmq.com/docs/prometheus)
 * [Upgrading](https://www.rabbitmq.com/docs/upgrade)
 * [Kubernetes Cluster Operator](https://www.rabbitmq.com/kubernetes/operator/operator-overview)
 * [Production checklist](https://www.rabbitmq.com/docs/production-checklist)
 * [Quorum queues](https://www.rabbitmq.com/docs/quorum-queues): a replicated, data safety- and consistency-oriented queue type
 * [Streams](https://www.rabbitmq.com/docs/streams): a persistent and replicated append-only log with non-destructive consumer semantics
 * [Runtime Parameters and Policies](https://www.rabbitmq.com/docs/parameters)
 * [Runnable tutorials](https://github.com/rabbitmq/rabbitmq-tutorials/)

RabbitMQ documentation is also [developed on GitHub](https://github.com/rabbitmq/rabbitmq-website/).

## Commercial Features and Support

 * [Commercial editions of RabbitMQ](https://tanzu.vmware.com/rabbitmq)
 * [Commercial edition for Kubernetes](https://docs.vmware.com/en/VMware-RabbitMQ-for-Kubernetes/1/rmq/installation.html)
 * [Commercial support](https://tanzu.vmware.com/rabbitmq/oss) from [Broadcom](https://vmware.com) for open source RabbitMQ

## Getting Help from the Community

Please read the [Community Support Eligibility Policy](https://github.com/rabbitmq/rabbitmq-server/blob/main/COMMUNITY_SUPPORT.md) document
first.

The recommended community forums are

 * [GitHub Discussions](https://github.com/rabbitmq/rabbitmq-server/discussions/)
 * [Community Discord server](https://rabbitmq.com/discord/)
 * `#rabbitmq` on [Libera Chat](https://libera.chat/)


## Contributing

See [CONTRIBUTING.md](./CONTRIBUTING.md) and our [development process overview](https://www.rabbitmq.com/github).

Questions about contributing, internals and so on are very welcome in [GitHub Discussions](https://github.com/rabbitmq/rabbitmq-server/discussions)
or [community Discord server](https://www.rabbitmq.com/discord/) in the `core-and-plugin-dev` channel.


## Licensing

RabbitMQ server is [licensed under the MPL 2.0](LICENSE-MPL-RabbitMQ).

[Community Support Eligibility Policy](https://github.com/rabbitmq/rabbitmq-server/blob/main/COMMUNITY_SUPPORT.md)
document explains the open source RabbitMQ support policy adopted by the RabbitMQ Core Team.


## Building From Source and Packaging

 * [Contributor resources](https://github.com/rabbitmq/contribute)
 * [Building RabbitMQ from Source](https://www.rabbitmq.com/docs/build-server)
 * [Building RabbitMQ Distribution Packages](https://www.rabbitmq.com/docs/build-server)


## Copyright

(c) 2007-2025 Broadcom. All Rights Reserved. The term “Broadcom” refers to Broadcom Inc. and/or its subsidiaries.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[OpenZeppelin/openzeppelin-contracts-upgradeable]]></title>
            <link>https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable</link>
            <guid>https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable</guid>
            <pubDate>Thu, 15 May 2025 00:04:38 GMT</pubDate>
            <description><![CDATA[Upgradeable variant of OpenZeppelin Contracts, meant for use in upgradeable contracts.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable">OpenZeppelin/openzeppelin-contracts-upgradeable</a></h1>
            <p>Upgradeable variant of OpenZeppelin Contracts, meant for use in upgradeable contracts.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,062</p>
            <p>Forks: 462</p>
            <p>Stars today: 1 star today</p>
            <h2>README</h2><pre># &lt;img src=&quot;logo.svg&quot; alt=&quot;OpenZeppelin&quot; height=&quot;40px&quot;&gt;

[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts.svg)](https://www.npmjs.org/package/@openzeppelin/contracts)
[![Coverage Status](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg)](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts)
[![GitPOAPs](https://public-api.gitpoap.io/v1/repo/OpenZeppelin/openzeppelin-contracts/badge)](https://www.gitpoap.io/gh/OpenZeppelin/openzeppelin-contracts)
[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-yellow)](https://docs.openzeppelin.com/contracts)
[![Forum](https://img.shields.io/badge/forum-%F0%9F%92%AC-yellow)](https://forum.openzeppelin.com/)

**A library for secure smart contract development.** Build on a solid foundation of community-vetted code.

 * Implementations of standards like [ERC20](https://docs.openzeppelin.com/contracts/erc20) and [ERC721](https://docs.openzeppelin.com/contracts/erc721).
 * Flexible [role-based permissioning](https://docs.openzeppelin.com/contracts/access-control) scheme.
 * Reusable [Solidity components](https://docs.openzeppelin.com/contracts/utilities) to build custom contracts and complex decentralized systems.

:mage: **Not sure how to get started?** Check out [Contracts Wizard](https://wizard.openzeppelin.com/) — an interactive smart contract generator.

:building_construction: **Want to scale your decentralized application?** Check out [OpenZeppelin Defender](https://openzeppelin.com/defender) — a mission-critical developer security platform to code, audit, deploy, monitor, and operate with confidence.

&gt; [!IMPORTANT]
&gt; OpenZeppelin Contracts uses semantic versioning to communicate backwards compatibility of its API and storage layout. For upgradeable contracts, the storage layout of different major versions should be assumed incompatible, for example, it is unsafe to upgrade from 4.9.3 to 5.0.0. Learn more at [Backwards Compatibility](https://docs.openzeppelin.com/contracts/backwards-compatibility).

+&gt; [!NOTE]
+&gt; You are looking at the upgradeable variant of OpenZeppelin Contracts. Be sure to review the documentation on [Using OpenZeppelin Contracts with Upgrades](https://docs.openzeppelin.com/contracts/upgradeable).
+
## Overview

### Installation

#### Hardhat (npm)

```
$ npm install @openzeppelin/contracts-upgradeable
```

#### Foundry (git)

&gt; [!WARNING]
&gt; When installing via git, it is a common error to use the `master` branch. This is a development branch that should be avoided in favor of tagged releases. The release process involves security measures that the `master` branch does not guarantee.

&gt; [!WARNING]
&gt; Foundry installs the latest version initially, but subsequent `forge update` commands will use the `master` branch.

```
$ forge install OpenZeppelin/openzeppelin-contracts-upgradeable
```

Add `@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/` in `remappings.txt.`

### Usage

Once installed, you can use the contracts in the library by importing them:

```solidity
pragma solidity ^0.8.20;

import {ERC721Upgradeable} from &quot;@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol&quot;;

contract MyCollectible is ERC721Upgradeable {
    function initialize() initializer public {
        __ERC721_init(&quot;MyCollectible&quot;, &quot;MCO&quot;);
    }
}
```

_If you&#039;re new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._

To keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don&#039;t need to worry about it needlessly increasing gas costs.

## Learn More

The guides in the [documentation site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:

* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.
* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).
* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools including non-overflowing math, signature verification, and trustless paying systems.

The [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts&#039; development in the [community forum](https://forum.openzeppelin.com).

Finally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/), which cover several common use cases and good practices. The following articles provide great background reading, though please note that some of the referenced tools have changed, as the tooling in the ecosystem continues to rapidly evolve.

* [The Hitchhiker’s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.
* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.
* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.

## Security

This project is maintained by [OpenZeppelin](https://openzeppelin.com) with the goal of providing a secure and reliable library of smart contract components for the ecosystem. We address security through risk management in various areas such as engineering and open source best practices, scoping and API design, multi-layered review processes, and incident response preparedness.

The [OpenZeppelin Contracts Security Center](https://contracts.openzeppelin.com/security) contains more details about the secure development process.

The security policy is detailed in [`SECURITY.md`](./SECURITY.md) as well, and specifies how you can report security vulnerabilities, which versions will receive security patches, and how to stay informed about them. We run a [bug bounty program on Immunefi](https://immunefi.com/bounty/openzeppelin) to reward the responsible disclosure of vulnerabilities.

The engineering guidelines we follow to promote project quality can be found in [`GUIDELINES.md`](./GUIDELINES.md).

Past audits can be found in [`audits/`](./audits).

Smart contracts are a nascent technology and carry a high level of technical risk and uncertainty. Although OpenZeppelin is well known for its security audits, using OpenZeppelin Contracts is not a substitute for a security audit.

OpenZeppelin Contracts is made available under the MIT License, which disclaims all warranties in relation to the project and which limits the liability of those that contribute and maintain the project, including OpenZeppelin. As set out further in the Terms, you acknowledge that you are solely responsible for any use of OpenZeppelin Contracts and you assume all risks associated with any such use.

## Contribute

OpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!

## License

OpenZeppelin Contracts is released under the [MIT License](LICENSE).

## Legal

Your use of this Project is governed by the terms found at www.openzeppelin.com/tos (the &quot;Terms&quot;).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[huggingface/transformers.js]]></title>
            <link>https://github.com/huggingface/transformers.js</link>
            <guid>https://github.com/huggingface/transformers.js</guid>
            <pubDate>Thu, 15 May 2025 00:04:37 GMT</pubDate>
            <description><![CDATA[State-of-the-art Machine Learning for the web. Run 🤗 Transformers directly in your browser, with no need for a server!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/huggingface/transformers.js">huggingface/transformers.js</a></h1>
            <p>State-of-the-art Machine Learning for the web. Run 🤗 Transformers directly in your browser, with no need for a server!</p>
            <p>Language: JavaScript</p>
            <p>Stars: 13,583</p>
            <p>Forks: 916</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>

&lt;p align=&quot;center&quot;&gt;
    &lt;br/&gt;
    &lt;picture&gt; 
        &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/transformersjs-dark.svg&quot; width=&quot;500&quot; style=&quot;max-width: 100%;&quot;&gt;
        &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/transformersjs-light.svg&quot; width=&quot;500&quot; style=&quot;max-width: 100%;&quot;&gt;
        &lt;img alt=&quot;transformers.js javascript library logo&quot; src=&quot;https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/transformersjs-light.svg&quot; width=&quot;500&quot; style=&quot;max-width: 100%;&quot;&gt;
    &lt;/picture&gt;
    &lt;br/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://www.npmjs.com/package/@huggingface/transformers&quot;&gt;&lt;img alt=&quot;NPM&quot; src=&quot;https://img.shields.io/npm/v/@huggingface/transformers&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://www.npmjs.com/package/@huggingface/transformers&quot;&gt;&lt;img alt=&quot;NPM Downloads&quot; src=&quot;https://img.shields.io/npm/dw/@huggingface/transformers&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://www.jsdelivr.com/package/npm/@huggingface/transformers&quot;&gt;&lt;img alt=&quot;jsDelivr Hits&quot; src=&quot;https://img.shields.io/jsdelivr/npm/hw/@huggingface/transformers&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/huggingface/transformers.js/blob/main/LICENSE&quot;&gt;&lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/github/license/huggingface/transformers.js?color=blue&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://huggingface.co/docs/transformers.js/index&quot;&gt;&lt;img alt=&quot;Documentation&quot; src=&quot;https://img.shields.io/website/http/huggingface.co/docs/transformers.js/index.svg?down_color=red&amp;down_message=offline&amp;up_message=online&quot;&gt;&lt;/a&gt;
&lt;/p&gt;


&lt;h3 align=&quot;center&quot;&gt;
  &lt;p&gt;State-of-the-art Machine Learning for the Web&lt;/p&gt;
&lt;/h3&gt;

Run 🤗 Transformers directly in your browser, with no need for a server!

Transformers.js is designed to be functionally equivalent to Hugging Face&#039;s [transformers](https://github.com/huggingface/transformers) python library, meaning you can run the same pretrained models using a very similar API. These models support common tasks in different modalities, such as:
  - 📝 **Natural Language Processing**: text classification, named entity recognition, question answering, language modeling, summarization, translation, multiple choice, and text generation.
  - 🖼️ **Computer Vision**: image classification, object detection, segmentation, and depth estimation.
  - 🗣️ **Audio**: automatic speech recognition, audio classification, and text-to-speech.
  - 🐙 **Multimodal**: embeddings, zero-shot audio classification, zero-shot image classification, and zero-shot object detection.

Transformers.js uses [ONNX Runtime](https://onnxruntime.ai/) to run models in the browser. The best part about it, is that you can easily [convert](#convert-your-models-to-onnx) your pretrained PyTorch, TensorFlow, or JAX models to ONNX using [🤗 Optimum](https://github.com/huggingface/optimum#onnx--onnx-runtime). 

For more information, check out the full [documentation](https://huggingface.co/docs/transformers.js).


## Installation


To install via [NPM](https://www.npmjs.com/package/@huggingface/transformers), run:
```bash
npm i @huggingface/transformers
```

Alternatively, you can use it in vanilla JS, without any bundler, by using a CDN or static hosting. For example, using [ES Modules](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules), you can import the library with:
```html
&lt;script type=&quot;module&quot;&gt;
    import { pipeline } from &#039;https://cdn.jsdelivr.net/npm/@huggingface/transformers@3.5.1&#039;;
&lt;/script&gt;
```


## Quick tour


It&#039;s super simple to translate from existing code! Just like the python library, we support the `pipeline` API. Pipelines group together a pretrained model with preprocessing of inputs and postprocessing of outputs, making it the easiest way to run models with the library.

&lt;table&gt;
&lt;tr&gt;
&lt;th width=&quot;440px&quot; align=&quot;center&quot;&gt;&lt;b&gt;Python (original)&lt;/b&gt;&lt;/th&gt;
&lt;th width=&quot;440px&quot; align=&quot;center&quot;&gt;&lt;b&gt;Javascript (ours)&lt;/b&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;

```python
from transformers import pipeline

# Allocate a pipeline for sentiment-analysis
pipe = pipeline(&#039;sentiment-analysis&#039;)

out = pipe(&#039;I love transformers!&#039;)
# [{&#039;label&#039;: &#039;POSITIVE&#039;, &#039;score&#039;: 0.999806941}]
```

&lt;/td&gt;
&lt;td&gt;

```javascript
import { pipeline } from &#039;@huggingface/transformers&#039;;

// Allocate a pipeline for sentiment-analysis
const pipe = await pipeline(&#039;sentiment-analysis&#039;);

const out = await pipe(&#039;I love transformers!&#039;);
// [{&#039;label&#039;: &#039;POSITIVE&#039;, &#039;score&#039;: 0.999817686}]
```

&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;


You can also use a different model by specifying the model id or path as the second argument to the `pipeline` function. For example:
```javascript
// Use a different model for sentiment-analysis
const pipe = await pipeline(&#039;sentiment-analysis&#039;, &#039;Xenova/bert-base-multilingual-uncased-sentiment&#039;);
```

By default, when running in the browser, the model will be run on your CPU (via WASM). If you would like
to run the model on your GPU (via WebGPU), you can do this by setting `device: &#039;webgpu&#039;`, for example:
```javascript
// Run the model on WebGPU
const pipe = await pipeline(&#039;sentiment-analysis&#039;, &#039;Xenova/distilbert-base-uncased-finetuned-sst-2-english&#039;, {
  device: &#039;webgpu&#039;,
});
```

For more information, check out the [WebGPU guide](https://huggingface.co/docs/transformers.js/guides/webgpu).

&gt; [!WARNING]
&gt; The WebGPU API is still experimental in many browsers, so if you run into any issues,
&gt; please file a [bug report](https://github.com/huggingface/transformers.js/issues/new?title=%5BWebGPU%5D%20Error%20running%20MODEL_ID_GOES_HERE&amp;assignees=&amp;labels=bug,webgpu&amp;projects=&amp;template=1_bug-report.yml).

In resource-constrained environments, such as web browsers, it is advisable to use a quantized version of
the model to lower bandwidth and optimize performance. This can be achieved by adjusting the `dtype` option,
which allows you to select the appropriate data type for your model. While the available options may vary
depending on the specific model, typical choices include `&quot;fp32&quot;` (default for WebGPU), `&quot;fp16&quot;`, `&quot;q8&quot;`
(default for WASM), and `&quot;q4&quot;`. For more information, check out the [quantization guide](https://huggingface.co/docs/transformers.js/guides/dtypes).
```javascript
// Run the model at 4-bit quantization
const pipe = await pipeline(&#039;sentiment-analysis&#039;, &#039;Xenova/distilbert-base-uncased-finetuned-sst-2-english&#039;, {
  dtype: &#039;q4&#039;,
});
```


## Examples

Want to jump straight in? Get started with one of our sample applications/templates, which can be found [here](https://github.com/huggingface/transformers.js-examples).

| Name              | Description                      | Links                   |
|-------------------|----------------------------------|-------------------------------|
| Whisper Web       | Speech recognition w/ Whisper    | [code](https://github.com/xenova/whisper-web), [demo](https://huggingface.co/spaces/Xenova/whisper-web) |
| Doodle Dash       | Real-time sketch-recognition game | [blog](https://huggingface.co/blog/ml-web-games), [code](https://github.com/xenova/doodle-dash), [demo](https://huggingface.co/spaces/Xenova/doodle-dash) |
| Code Playground   | In-browser code completion website | [code](https://github.com/huggingface/transformers.js/tree/main/examples/code-completion/), [demo](https://huggingface.co/spaces/Xenova/ai-code-playground) |
| Semantic Image Search (client-side) | Search for images with text | [code](https://github.com/huggingface/transformers.js/tree/main/examples/semantic-image-search-client/), [demo](https://huggingface.co/spaces/Xenova/semantic-image-search-client) |
| Semantic Image Search (server-side) | Search for images with text (Supabase) | [code](https://github.com/huggingface/transformers.js/tree/main/examples/semantic-image-search/), [demo](https://huggingface.co/spaces/Xenova/semantic-image-search) |
| Vanilla JavaScript | In-browser object detection     | [video](https://scrimba.com/scrim/cKm9bDAg), [code](https://github.com/huggingface/transformers.js/tree/main/examples/vanilla-js/), [demo](https://huggingface.co/spaces/Scrimba/vanilla-js-object-detector) |
| React             | Multilingual translation website | [code](https://github.com/huggingface/transformers.js/tree/main/examples/react-translator/), [demo](https://huggingface.co/spaces/Xenova/react-translator) |
| Text to speech (client-side) | In-browser speech synthesis | [code](https://github.com/huggingface/transformers.js/tree/main/examples/text-to-speech-client/), [demo](https://huggingface.co/spaces/Xenova/text-to-speech-client) |
| Browser extension | Text classification extension    | [code](https://github.com/huggingface/transformers.js/tree/main/examples/extension/) |
| Electron          | Text classification application  | [code](https://github.com/huggingface/transformers.js/tree/main/examples/electron/)  |
| Next.js (client-side) | Sentiment analysis (in-browser inference) | [code](https://github.com/huggingface/transformers.js/tree/main/examples/next-client/), [demo](https://huggingface.co/spaces/Xenova/next-example-app) |
| Next.js (server-side) | Sentiment analysis (Node.js inference) | [code](https://github.com/huggingface/transformers.js/tree/main/examples/next-server/), [demo](https://huggingface.co/spaces/Xenova/next-server-example-app) |
| Node.js           | Sentiment analysis API           | [code](https://github.com/huggingface/transformers.js/tree/main/examples/node/)      |
| Demo site         | A collection of demos | [code](https://github.com/huggingface/transformers.js/tree/main/examples/demo-site/), [demo](https://huggingface.github.io/transformers.js/) |

Check out the Transformers.js [template](https://huggingface.co/new-space?template=static-templates%2Ftransformers.js) on Hugging Face to get started in one click!


## Custom usage



By default, Transformers.js uses [hosted pretrained models](https://huggingface.co/models?library=transformers.js) and [precompiled WASM binaries](https://cdn.jsdelivr.net/npm/@huggingface/transformers@3.5.1/dist/), which should work out-of-the-box. You can customize this as follows:

### Settings

```javascript
import { env } from &#039;@huggingface/transformers&#039;;

// Specify a custom location for models (defaults to &#039;/models/&#039;).
env.localModelPath = &#039;/path/to/models/&#039;;

// Disable the loading of remote models from the Hugging Face Hub:
env.allowRemoteModels = false;

// Set location of .wasm files. Defaults to use a CDN.
env.backends.onnx.wasm.wasmPaths = &#039;/path/to/files/&#039;;
```

For a full list of available settings, check out the [API Reference](https://huggingface.co/docs/transformers.js/api/env).

### Convert your models to ONNX

We recommend using our [conversion script](https://github.com/huggingface/transformers.js/blob/main/scripts/convert.py) to convert your PyTorch, TensorFlow, or JAX models to ONNX in a single command. Behind the scenes, it uses [🤗 Optimum](https://huggingface.co/docs/optimum) to perform conversion and quantization of your model.

```bash
python -m scripts.convert --quantize --model_id &lt;model_name_or_path&gt;
```

For example, convert and quantize [bert-base-uncased](https://huggingface.co/bert-base-uncased) using:
```bash
python -m scripts.convert --quantize --model_id bert-base-uncased
```

This will save the following files to `./models/`:

```
bert-base-uncased/
├── config.json
├── tokenizer.json
├── tokenizer_config.json
└── onnx/
    ├── model.onnx
    └── model_quantized.onnx
```

For the full list of supported architectures, see the [Optimum documentation](https://huggingface.co/docs/optimum/main/en/exporters/onnx/overview).


## Supported tasks/models

Here is the list of all tasks and architectures currently supported by Transformers.js.
If you don&#039;t see your task/model listed here or it is not yet supported, feel free
to open up a feature request [here](https://github.com/huggingface/transformers.js/issues/new/choose).

To find compatible models on the Hub, select the &quot;transformers.js&quot; library tag in the filter menu (or visit [this link](https://huggingface.co/models?library=transformers.js)).
You can refine your search by selecting the task you&#039;re interested in (e.g., [text-classification](https://huggingface.co/models?pipeline_tag=text-classification&amp;library=transformers.js)).


### Tasks

#### Natural Language Processing

| Task                     | ID | Description | Supported? |
|--------------------------|----|-------------|------------|
| [Fill-Mask](https://huggingface.co/tasks/fill-mask)                     | `fill-mask`   | Masking some of the words in a sentence and predicting which words should replace those masks. | ✅ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.FillMaskPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=fill-mask&amp;library=transformers.js) |
| [Question Answering](https://huggingface.co/tasks/question-answering)   | `question-answering`   | Retrieve the answer to a question from a given text. | ✅ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.QuestionAnsweringPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=question-answering&amp;library=transformers.js) |
| [Sentence Similarity](https://huggingface.co/tasks/sentence-similarity) | `sentence-similarity`  | Determining how similar two texts are. | ✅ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.FeatureExtractionPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=sentence-similarity&amp;library=transformers.js) |
| [Summarization](https://huggingface.co/tasks/summarization)             |  `summarization`  | Producing a shorter version of a document while preserving its important information. | ✅ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.SummarizationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=summarization&amp;library=transformers.js) |
| [Table Question Answering](https://huggingface.co/tasks/table-question-answering) |  `table-question-answering`  | Answering a question about information from a given table. | ❌ |
| [Text Classification](https://huggingface.co/tasks/text-classification)      | `text-classification` or `sentiment-analysis`  | Assigning a label or class to a given text. | ✅ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.TextClassificationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=text-classification&amp;library=transformers.js) |
| [Text Generation](https://huggingface.co/tasks/text-generation#completion-generation-models)          | `text-generation`  | Producing new text by predicting the next word in a sequence. | ✅ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.TextGenerationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=text-generation&amp;library=transformers.js) |
| [Text-to-text Generation](https://huggingface.co/tasks/text-generation#text-to-text-generation-models)  | `text2text-generation`  | Converting one text sequence into another text sequence. | ✅ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.Text2TextGenerationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=text2text-generation&amp;library=transformers.js) |
| [Token Classification](https://huggingface.co/tasks/token-classification)     | `token-classification` or `ner`  | Assigning a label to each token in a text. | ✅ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.TokenClassificationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=token-classification&amp;library=transformers.js) |
| [Translation](https://huggingface.co/tasks/translation)              |  `translation`  | Converting text from one language to another. | ✅ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.TranslationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=translation&amp;library=transformers.js) |
| [Zero-Shot Classification](https://huggingface.co/tasks/zero-shot-classification) | `zero-shot-classification`  | Classifying text into classes that are unseen during training.  | ✅ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.ZeroShotClassificationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=zero-shot-classification&amp;library=transformers.js) |
| [Feature Extraction](https://huggingface.co/tasks/feature-extraction)         |  `feature-extraction`  | Transforming raw data into numerical features that can be processed while preserving the information in the original dataset. | ✅ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.FeatureExtractionPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=feature-extraction&amp;library=transformers.js) |

#### Vision

| Task                     | ID | Description | Supported? |
|--------------------------|----|-------------|------------|
| [Background Removal](https://huggingface.co/tasks/image-segmentation#background-removal)       | `background-removal`   | Isolating the main subject of an image by removing or making the background transparent. | ✅ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.BackgroundRemovalPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?other=background-removal&amp;library=transformers.js) |
| [Depth Estimation](https://huggingface.co/tasks/depth-estimation)         |  `depth-estimation`  | Predicting the depth of objects present in an image. | ✅ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.DepthEstimationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=depth-estimation&amp;library=transformers.js) |
| [Image Classification](https://huggingface.co/tasks/image-classification)                | `image-classification`   | Assigning a label or class to an entire image. | ✅ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.ImageClassificationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=image-classification&amp;library=transformers.js) |
| [Image Segmentation](https://huggingface.co/tasks/image-segmentation)       | `image-segmentation`   | Divides an image into segments where each pixel is mapped to an object. This task has multiple variants such as instance segmentation, panoptic segmentation and semantic segmentation. | ✅ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.ImageSegmentationPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=image-segmentation&amp;library=transformers.js) |
| [Image-to-Image](https://huggingface.co/tasks/image-to-image)      |  `image-to-image` | Transforming a source image to match the characteristics of a target image or a target image domain. | ✅ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.ImageToImagePipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=image-to-image&amp;library=transformers.js) |
| [Mask Generation](https://huggingface.co/tasks/mask-generation)            |  `mask-generation`  | Generate masks for the objects in an image. | ❌ |
| [Object Detection](https://huggingface.co/tasks/object-detection)            | `object-detection`   | Identify objects of certain defined classes within an image. | ✅ [(docs)](https://huggingface.co/docs/transformers.js/api/pipelines#module_pipelines.ObjectDetectionPipeline)&lt;br&gt;[(models)](https://huggingface.co/models?pipeline_tag=object-detection&amp;library=transformers.js) |
| [Video Classification](https://huggingface.co/tasks/video-classification) |  n/a  | Assigning a label or class to an entire video. | ❌ |
| [Unconditional Image Generation](https://huggingface.co/tasks/unconditional-image-generation)      |  n/a   | Generating images with no condition in any context (like a prompt text or another image). | ❌ |
| [

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[pedroslopez/whatsapp-web.js]]></title>
            <link>https://github.com/pedroslopez/whatsapp-web.js</link>
            <guid>https://github.com/pedroslopez/whatsapp-web.js</guid>
            <pubDate>Thu, 15 May 2025 00:04:36 GMT</pubDate>
            <description><![CDATA[A WhatsApp client library for NodeJS that connects through the WhatsApp Web browser app]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pedroslopez/whatsapp-web.js">pedroslopez/whatsapp-web.js</a></h1>
            <p>A WhatsApp client library for NodeJS that connects through the WhatsApp Web browser app</p>
            <p>Language: JavaScript</p>
            <p>Stars: 16,806</p>
            <p>Forks: 4,057</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
    &lt;br /&gt;
    &lt;p&gt;
        &lt;a href=&quot;https://wwebjs.dev&quot;&gt;&lt;img src=&quot;https://github.com/wwebjs/logos/blob/main/4_Full%20Logo%20Lockup_Small/small_banner_blue.png?raw=true&quot; title=&quot;whatsapp-web.js&quot; alt=&quot;WWebJS Website&quot; width=&quot;500&quot; /&gt;&lt;/a&gt;
    &lt;/p&gt;
    &lt;br /&gt;
    &lt;p&gt;
		&lt;a href=&quot;https://www.npmjs.com/package/whatsapp-web.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/whatsapp-web.js.svg&quot; alt=&quot;npm&quot; /&gt;&lt;/a&gt;
        &lt;a href=&quot;https://depfu.com/github/pedroslopez/whatsapp-web.js?project_id=9765&quot;&gt;&lt;img src=&quot;https://badges.depfu.com/badges/4a65a0de96ece65fdf39e294e0c8dcba/overview.svg&quot; alt=&quot;Depfu&quot; /&gt;&lt;/a&gt;
        &lt;img src=&quot;https://img.shields.io/badge/WhatsApp_Web-2.3000.1017054665-brightgreen.svg&quot; alt=&quot;WhatsApp_Web 2.2346.52&quot; /&gt;
        &lt;a href=&quot;https://discord.gg/H7DqQs4&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/698610475432411196.svg?logo=discord&quot; alt=&quot;Discord server&quot; /&gt;&lt;/a&gt;
	&lt;/p&gt;
    &lt;br /&gt;
&lt;/div&gt;

## About
**A WhatsApp API client that connects through the WhatsApp Web browser app**

The library works by launching the WhatsApp Web browser application and managing it using Puppeteer to create an instance of WhatsApp Web, thereby mitigating the risk of being blocked. The WhatsApp API client connects through the WhatsApp Web browser app, accessing its internal functions. This grants you access to nearly all the features available on WhatsApp Web, enabling dynamic handling similar to any other Node.js application.

&gt; [!IMPORTANT]
&gt; **It is not guaranteed you will not be blocked by using this method. WhatsApp does not allow bots or unofficial clients on their platform, so this shouldn&#039;t be considered totally safe.**

## Links

* [Website][website]
* [Guide][guide] ([source][guide-source]) _(work in progress)_
* [Documentation][documentation] ([source][documentation-source])
* [WWebJS Discord][discord]
* [GitHub][gitHub]
* [npm][npm]

## Installation

The module is now available on npm! `npm i whatsapp-web.js`

&gt; [!NOTE]
&gt; **Node ``v18+`` is required.**

## QUICK STEPS TO UPGRADE NODE

### Windows

#### Manual
Just get the latest LTS from the [official node website][nodejs].

#### npm
```powershell
sudo npm install -g n
sudo n stable
```

#### Choco
```powershell
choco install nodejs-lts
```

#### Winget
```powershell
winget install OpenJS.NodeJS.LTS
```

### Ubuntu / Debian
```bash
curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash - &amp;&amp;\
sudo apt-get install -y nodejs
```

## Example usage

```js
const { Client } = require(&#039;whatsapp-web.js&#039;);

const client = new Client();

client.on(&#039;qr&#039;, (qr) =&gt; {
    // Generate and scan this code with your phone
    console.log(&#039;QR RECEIVED&#039;, qr);
});

client.on(&#039;ready&#039;, () =&gt; {
    console.log(&#039;Client is ready!&#039;);
});

client.on(&#039;message&#039;, msg =&gt; {
    if (msg.body == &#039;!ping&#039;) {
        msg.reply(&#039;pong&#039;);
    }
});

client.initialize();
```

Take a look at [example.js][examples] for another examples with additional use cases.  
For further details on saving and restoring sessions, explore the provided [Authentication Strategies][auth-strategies].


## Supported features

| Feature  | Status |
| ------------- | ------------- |
| Multi Device  | ✅  |
| Send messages  | ✅  |
| Receive messages  | ✅  |
| Send media (images/audio/documents)  | ✅  |
| Send media (video)  | ✅ [(requires Google Chrome)][google-chrome]  |
| Send stickers | ✅ |
| Receive media (images/audio/video/documents)  | ✅  |
| Send contact cards | ✅ |
| Send location | ✅ |
| Send buttons | ❌  [(DEPRECATED)][deprecated-video] |
| Send lists | ❌  [(DEPRECATED)][deprecated-video] |
| Receive location | ✅ | 
| Message replies | ✅ |
| Join groups by invite  | ✅ |
| Get invite for group  | ✅ |
| Modify group info (subject, description)  | ✅  |
| Modify group settings (send messages, edit info)  | ✅  |
| Add group participants  | ✅  |
| Kick group participants  | ✅  |
| Promote/demote group participants | ✅ |
| Mention users | ✅ |
| Mention groups | ✅ |
| Mute/unmute chats | ✅ |
| Block/unblock contacts | ✅ |
| Get contact info | ✅ |
| Get profile pictures | ✅ |
| Set user status message | ✅ |
| React to messages | ✅ |
| Create polls | ✅ |
| Vote in polls | 🔜 |
| Communities | 🔜 |
| Channels | 🔜 |

Something missing? Make an issue and let us know!

## Contributing

Feel free to open pull requests; we welcome contributions! However, for significant changes, it&#039;s best to open an issue beforehand. Make sure to review our [contribution guidelines][contributing] before creating a pull request. Before creating your own issue or pull request, always check to see if one already exists!

## Supporting the project

You can support the maintainer of this project through the links below

- [Support via GitHub Sponsors][gitHub-sponsors]
- [Support via PayPal][support-payPal]
- [Sign up for DigitalOcean][digitalocean] and get $200 in credit when you sign up (Referral)

## Disclaimer

This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates. The official WhatsApp website can be found at [whatsapp.com][whatsapp]. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners. Also it is not guaranteed you will not be blocked by using this method. WhatsApp does not allow bots or unofficial clients on their platform, so this shouldn&#039;t be considered totally safe.

## License

Copyright 2019 Pedro S Lopez  

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);  
you may not use this project except in compliance with the License.  
You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.  


[website]: https://wwebjs.dev
[guide]: https://guide.wwebjs.dev/guide
[guide-source]: https://github.com/wwebjs/wwebjs.dev/tree/main
[documentation]: https://docs.wwebjs.dev/
[documentation-source]: https://github.com/pedroslopez/whatsapp-web.js/tree/main/docs
[discord]: https://discord.gg/H7DqQs4
[gitHub]: https://github.com/pedroslopez/whatsapp-web.js
[npm]: https://npmjs.org/package/whatsapp-web.js
[nodejs]: https://nodejs.org/en/download/
[examples]: https://github.com/pedroslopez/whatsapp-web.js/blob/master/example.js
[auth-strategies]: https://wwebjs.dev/guide/creating-your-bot/authentication.html
[google-chrome]: https://wwebjs.dev/guide/creating-your-bot/handling-attachments.html#caveat-for-sending-videos-and-gifs
[deprecated-video]: https://www.youtube.com/watch?v=hv1R1rLeVVE
[gitHub-sponsors]: https://github.com/sponsors/pedroslopez
[support-payPal]: https://www.paypal.me/psla/
[digitalocean]: https://m.do.co/c/73f906a36ed4
[contributing]: https://github.com/pedroslopez/whatsapp-web.js/blob/main/CODE_OF_CONDUCT.md
[whatsapp]: https://whatsapp.com
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[qishibo/AnotherRedisDesktopManager]]></title>
            <link>https://github.com/qishibo/AnotherRedisDesktopManager</link>
            <guid>https://github.com/qishibo/AnotherRedisDesktopManager</guid>
            <pubDate>Thu, 15 May 2025 00:04:35 GMT</pubDate>
            <description><![CDATA[🚀🚀🚀A faster, better and more stable Redis desktop manager [GUI client], compatible with Linux, Windows, Mac.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/qishibo/AnotherRedisDesktopManager">qishibo/AnotherRedisDesktopManager</a></h1>
            <p>🚀🚀🚀A faster, better and more stable Redis desktop manager [GUI client], compatible with Linux, Windows, Mac.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 32,290</p>
            <p>Forks: 2,636</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre># Another Redis Desktop Manager

&lt;img align=&quot;right&quot; width=&quot;110&quot; src=&quot;https://cdn.jsdelivr.net/gh/qishibo/img/ardm/202411081958294.png&quot;&gt;

&gt; 🚀🚀🚀 A faster, better and more stable redis desktop manager, compatible with Linux, windows, mac. What&#039;s more, it won&#039;t crash when loading massive keys.

&lt;br&gt;

[![LICENSE](https://img.shields.io/github/license/qishibo/AnotherRedisDesktopManager)](LICENSE)
[![Release](https://img.shields.io/github/release/qishibo/AnotherRedisDesktopManager.svg)](https://github.com/qishibo/AnotherRedisDesktopManager/releases)
[![Download](https://img.shields.io/github/downloads/qishibo/AnotherRedisDesktopManager/total)](https://github.com/qishibo/AnotherRedisDesktopManager/releases)
[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fqishibo%2FAnotherRedisDesktopManager.svg?type=shield)](https://app.fossa.com/projects/git%2Bgithub.com%2Fqishibo%2FAnotherRedisDesktopManager?ref=badge_shield)
&lt;a href=&quot;https://www.producthunt.com/posts/another-redis-desktop-manager?utm_source=badge-featured&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=340552&amp;theme=dark&quot; height=&quot;20&quot; width=&quot;93&quot; /&gt;&lt;/a&gt;
[![STARS](https://img.shields.io/github/stars/qishibo/AnotherRedisDesktopManager)](https://github.com/qishibo/AnotherRedisDesktopManager/)


[简体中文](README.zh-CN.md)


## Windows

- Download latest [exe](https://github.com/qishibo/AnotherRedisDesktopManager/releases) package from release \[or [gitee](https://gitee.com/qishibo/AnotherRedisDesktopManager/releases) in China\], double click to install.
- Or by **chocolatey**: `choco install another-redis-desktop-manager`
- Or by **winget**: `winget install qishibo.AnotherRedisDesktopManager`
- Or **sponsor** by win store, It&#039;s not free, and I will be very grateful to you.
&lt;br/&gt;&lt;a href=&quot;https://apps.microsoft.com/store/detail/9MTD84X0JFHZ?launch=true&amp;cid=github&amp;mode=mini&quot;&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/qishibo/img/microsoft-store.png&quot; height=&quot;58&quot; width=&quot;180&quot; alt=&quot;get from microsoft store&quot;&gt;&lt;/a&gt;

## Linux

- Download latest [AppImage](https://github.com/qishibo/AnotherRedisDesktopManager/releases) package from release \[or [gitee](https://gitee.com/qishibo/AnotherRedisDesktopManager/releases) in China\], `chmod +x`, double click to run.
- Or by **snap**: `sudo snap install another-redis-desktop-manager`
 **Tips**: If permission denied when selecting private key, run `sudo snap connect another-redis-desktop-manager:ssh-keys` to give access to ~/.ssh folder.
&lt;br/&gt;[![Get it from the Snap Store](https://cdn.jsdelivr.net/gh/qishibo/img/ardm/202411080845423.svg)](https://snapcraft.io/another-redis-desktop-manager)


## Mac

&gt; If you can&#039;t open it after installation by brew or dmg, exec the following command then reopen:&lt;br&gt;`sudo xattr -rd com.apple.quarantine /Applications/Another\ Redis\ Desktop\ Manager.app`

- Download latest [dmg](https://github.com/qishibo/AnotherRedisDesktopManager/releases) package from release \[or [gitee](https://gitee.com/qishibo/AnotherRedisDesktopManager/releases) in China\], double click to install.
- Or by **brew**: `brew install --cask another-redis-desktop-manager`
- Or **sponsor** by app store, It&#039;s not free, and I will be very grateful to you.
&lt;br/&gt;[![get from app store](https://cdn.jsdelivr.net/gh/qishibo/img/avail_app_store180.svg)](https://apps.apple.com/app/id1516451072)


## Enjoy!

![redis status dark](https://cdn.jsdelivr.net/gh/qishibo/img/ardm/202411081318491.png)

![redis key dark](https://cdn.jsdelivr.net/gh/qishibo/img/ardm/202411081318490.png)

![redis exec log](https://cdn.jsdelivr.net/gh/qishibo/img/ardm/202411081318492.png)


## Contributors

This project exists thanks to all the people who contribute.
[![contributors](https://opencollective.com/AnotherRedisDesktopManager/contributors.svg?width=890&amp;button=false)](https://github.com/qishibo/AnotherRedisDesktopManager/graphs/contributors)
[![backers](https://opencollective.com/AnotherRedisDesktopManager/backers.svg)](https://opencollective.com/AnotherRedisDesktopManager)

&lt;!-- sponsors --&gt;&lt;a href=&quot;https://github.com/brunoksato&quot;&gt;&lt;img src=&quot;https://images.weserv.nl/?h=120&amp;w=120&amp;mask=circle&amp;url=https:&amp;#x2F;&amp;#x2F;avatars.githubusercontent.com&amp;#x2F;u&amp;#x2F;2257501?u&amp;#x3D;62e7db432487ab19a9e11db051198d91fb42fe95&amp;amp;v&amp;#x3D;4&quot; width=&quot;60px&quot; alt=&quot;Bruno Sato&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/overtrue&quot;&gt;&lt;img src=&quot;https://images.weserv.nl/?h=120&amp;w=120&amp;mask=circle&amp;url=https:&amp;#x2F;&amp;#x2F;avatars.githubusercontent.com&amp;#x2F;u&amp;#x2F;1472352?u&amp;#x3D;72f261973db954faf4a64987ee3f7e7baf423ded&amp;amp;v&amp;#x3D;4&quot; width=&quot;60px&quot; alt=&quot;安正超&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/wehnertb&quot;&gt;&lt;img src=&quot;https://images.weserv.nl/?h=120&amp;w=120&amp;mask=circle&amp;url=https:&amp;#x2F;&amp;#x2F;avatars.githubusercontent.com&amp;#x2F;u&amp;#x2F;6706492?u&amp;#x3D;23b3c316d88684d8cbce4947d9a9564c05fa48e6&amp;amp;v&amp;#x3D;4&quot; width=&quot;60px&quot; alt=&quot;Bill&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/RobinTao&quot;&gt;&lt;img src=&quot;https://images.weserv.nl/?h=120&amp;w=120&amp;mask=circle&amp;url=https:&amp;#x2F;&amp;#x2F;avatars.githubusercontent.com&amp;#x2F;u&amp;#x2F;3703152?v&amp;#x3D;4&quot; width=&quot;60px&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/hfoxy&quot;&gt;&lt;img src=&quot;https://images.weserv.nl/?h=120&amp;w=120&amp;mask=circle&amp;url=https:&amp;#x2F;&amp;#x2F;avatars.githubusercontent.com&amp;#x2F;u&amp;#x2F;1254033?u&amp;#x3D;630787b85016572cb1f9d87a7fbd77314b084bb9&amp;amp;v&amp;#x3D;4&quot; width=&quot;60px&quot; alt=&quot;Harry Fox&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/maniappstudios&quot;&gt;&lt;img src=&quot;https://images.weserv.nl/?h=120&amp;w=120&amp;mask=circle&amp;url=https:&amp;#x2F;&amp;#x2F;avatars.githubusercontent.com&amp;#x2F;u&amp;#x2F;91392014?v&amp;#x3D;4&quot; width=&quot;60px&quot; alt=&quot;Mani App Studios&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/BWICompanies&quot;&gt;&lt;img src=&quot;https://images.weserv.nl/?h=120&amp;w=120&amp;mask=circle&amp;url=https:&amp;#x2F;&amp;#x2F;avatars.githubusercontent.com&amp;#x2F;u&amp;#x2F;28601356?v&amp;#x3D;4&quot; width=&quot;60px&quot; alt=&quot;BWI Companies, Inc.&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/dragonflydb&quot;&gt;&lt;img src=&quot;https://images.weserv.nl/?h=120&amp;w=120&amp;mask=circle&amp;url=https:&amp;#x2F;&amp;#x2F;avatars.githubusercontent.com&amp;#x2F;u&amp;#x2F;104819355?v&amp;#x3D;4&quot; width=&quot;60px&quot; alt=&quot;DragonflyDB&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/gauravn00b&quot;&gt;&lt;img src=&quot;https://images.weserv.nl/?h=120&amp;w=120&amp;mask=circle&amp;url=https:&amp;#x2F;&amp;#x2F;avatars.githubusercontent.com&amp;#x2F;u&amp;#x2F;70876227?v&amp;#x3D;4&quot; width=&quot;60px&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/roostinghawk&quot;&gt;&lt;img src=&quot;https://images.weserv.nl/?h=120&amp;w=120&amp;mask=circle&amp;url=https:&amp;#x2F;&amp;#x2F;avatars.githubusercontent.com&amp;#x2F;u&amp;#x2F;5466611?u&amp;#x3D;6c5bcb3a5e4cd3bc128052dcce3a58ba00e742f9&amp;amp;v&amp;#x3D;4&quot; width=&quot;60px&quot; alt=&quot;liuwei&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/status2xx&quot;&gt;&lt;img src=&quot;https://images.weserv.nl/?h=120&amp;w=120&amp;mask=circle&amp;url=https:&amp;#x2F;&amp;#x2F;avatars.githubusercontent.com&amp;#x2F;u&amp;#x2F;40201780?u&amp;#x3D;ba9c0f10211ecf2af64ec335a5df13637e313060&amp;amp;v&amp;#x3D;4&quot; width=&quot;60px&quot; alt=&quot;小新&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/mikeallisonJS&quot;&gt;&lt;img src=&quot;https://images.weserv.nl/?h=120&amp;w=120&amp;mask=circle&amp;url=https:&amp;#x2F;&amp;#x2F;avatars.githubusercontent.com&amp;#x2F;u&amp;#x2F;838371?u&amp;#x3D;6c8a7a989e12d67117976a5ec155e022a5d83499&amp;amp;v&amp;#x3D;4&quot; width=&quot;60px&quot; alt=&quot;Mike Allison&quot; /&gt;&lt;/a&gt;&lt;!-- sponsors --&gt;


## Sponsor

- Give me a star ⭐ or upvote on [Producthunt](https://www.producthunt.com/posts/another-redis-desktop-manager)
- Through [OpenCollective](https://opencollective.com/AnotherRedisDesktopManager) or [Github Sponsor](https://github.com/sponsors/qishibo)
- If you are a Mac user, you can purchase this software from the [app store](https://apps.apple.com/app/id1516451072) to sponsor, and then let the app store automatically update it for you.
&lt;br&gt;[![app store](https://cdn.jsdelivr.net/gh/qishibo/img/avail_app_store180.svg)](https://apps.apple.com/app/id1516451072)
- If you are a Windows user, you can purchase this software from the [win store](https://www.microsoft.com/store/apps/9MTD84X0JFHZ) to sponsor.
&lt;br&gt;[![windows store](https://cdn.jsdelivr.net/gh/qishibo/img/windows-store-icon182-56.png)](https://www.microsoft.com/store/apps/9MTD84X0JFHZ)
- Wechat sponsor code [Sponsor me a cup of coffee ☕]

  &lt;img width=&quot;150px&quot; src=&quot;https://cdn.jsdelivr.net/gh/qishibo/img/202109031655807.jpeg&quot; /&gt;


## Feature Log

- 2024-11-03: Import batch commands from files
- 2024-10-07: Hash field TTL support(Redis&gt;=7.4)
- 2024-06-06: Search connections support
- 2024-04-10: DB custom name support
- 2024-02-21: Java/Pickle viewers support
- 2024-02-15: Groups/Consumers in STREAM view
- 2024-01-31: Hey, long time! Command line(CLI) args support
- 2023-06-22: Export\Import keys support
- 2023-05-26: Search support in Stream &amp;&amp; Slow log support
- 2023-04-01: Search support in List &amp;&amp; Deflate raw support
- 2022-10-07: Arrow Keys support in key list &amp;&amp; Memory Analysis in folder
- 2022-08-05: Clone Connection &amp;&amp; Tabs Contextmenu\Mousewheel Support
- 2022-04-01: Protobuf Support &amp;&amp; Memory Analysis
- 2022-03-03: Readonly Mode &amp;&amp; Mointor Support
- 2022-01-24: Command Dump Support
- 2022-01-05: Support To Load All Keys
- 2022-01-01: Brotli\Gzip\Deflate Support &amp;&amp; RedisJSON Support
- 2021-11-26: JSON Editable &amp;&amp; Subscribe Support
- 2021-08-30: Execution log Support &amp;&amp; Add Hot Keys
- 2021-08-16: Custom Formatter View Support!
- 2021-06-30: Sentinel Support!!
- 2021-06-24: ACL Support
- 2021-05-03: Stream Support &amp;&amp; Cli Command Tips Support
- 2021-02-28: Connection Color Tag &amp;&amp; Search History Support
- 2021-02-03: Multiple Select\Delete &amp;&amp; Msgpack Viewer Support
- 2020-12-30: Tree View Support!!!
- 2020-11-03: Binary View Support &amp;&amp; SSH Passparse\Timeout Support
- 2020-09-04: SSH Cluster Support &amp;&amp; Extension Commands Support
- 2020-06-18: SSL/TLS Support!!!
- 2020-04-28: Page Zoom &amp;&amp; Big Key Loads With Scan &amp;&amp; Auto Json
- 2020-04-18: Unvisible Key\Value Format Support
- 2020-04-04: Cluster Support!!!
- 2020-03-13: Dark Mode Support!!! &amp;&amp; JsonView In Other Place
- 2020-02-16: SSH Private Key Support
- 2020-02-13: Open Cli Console In Tabs
- 2019-06-14: Custom Font-Family Support
- 2019-05-28: Key List Resizable
- 2019-05-09: Search Support In Hash List Set Zset
- 2019-04-26: Auto Updater
- 2019-04-09: SSH Tunnel Connection Support
- 2019-04-01: Extract Search Support
- 2019-02-22: Single Connection Support
- 2019-01-08: Project Start


## Dev Build

### Linux Or Mac

```bash
# clone code
git clone https://github.com/qishibo/AnotherRedisDesktopManager.git --depth=1
cd AnotherRedisDesktopManager

# install dependencies
npm install

# if download electron failed during installing, use this command
# ELECTRON_MIRROR=&quot;https://npmmirror.com/mirrors/electron/&quot; npm install

# serve with hot reload at localhost:9988
npm start


# after the previous step is completed to 100%, open another tab, build up a desktop client
npm run electron
```

If linux errors like this:

```bash
# if error like this
../src/FontManagerLinux.cc:1:35: fatal error: fontconfig/fontconfig.h: No such file or directory

# then try this
sudo apt install libfontconfig1-dev
```


### Windows

``` bash
# clone code
git clone https://github.com/qishibo/AnotherRedisDesktopManager.git --depth=1
cd AnotherRedisDesktopManager

# install dependencies, 32-bit or 64-bit all use win32
npm install --platform=win32

# if download electron failed during installing, use this command
# npm config set ELECTRON_MIRROR https://npmmirror.com/mirrors/electron/
# npm install --platform=win32

# serve with hot reload at localhost:9988
npm start


# after the previous step is completed to 100%, open another tab, build up a desktop client
npm run electron
```

### Build Package

```bash
# prepare before package
npm run pack:prepare

# build package on respective platforms
# on windows build 64bit package
npm run pack:win
# on windows build 32bit package
npm run pack:win32

# on mac
npm run pack:mac

# on linux
npm run pack:linux
```


## Custom Viewer

&gt; When the default viewer does not meet the needs, you can format your content via customize script.
&lt;br&gt;Method: Pull down the viewer list to the bottom, click &quot;Custom -&gt; Add&quot;, and then refer to the instructions below
&lt;br&gt;Note: The script needs to output formatted content through `print` `console.log` `echo` etc., which can be any string or JSON string

| Config | Description |
| ------ | ------ |
| `Name` | Custom name |
| `Command` | Executable commands, such as `xxx.py` `xxx.js` `xxx.class` etc. The file needs `x` permission, which can be executed in the form of `./xxx.py`; It can also be set to `/bin/node` `/bin/bash` or other system commands, and the script path needs to be placed in Params |
| `Params` | Parameters spliced after `Command`, such as &quot;--key `{KEY}` --value `{VALUE}`&quot;, where `{KEY}` and `{VALUE}` will be replaced with the corresponding Redis key and value. Note that if the content is invisible such as binary, you can use `{HEX}` instead of `{VALUE}`, and `{HEX}` will be replaced with the hexadecimal string. If HEX is too long (&gt;8000 chars), it will be written to a temporary file. You can use `{HEX_FILE}` to obtain the file path, and read by yourself in the script |

### Configuration example：
&gt; Add env to the first line of the script, the final executed command is: `./home/qii/pickle_decoder.py {HEX}`, the script can receive parameters via `argv[1]`, ref [#978](https://github.com/qishibo/AnotherRedisDesktopManager/issues/987#issuecomment-1294844707)

| Command | Params |
| ------ | ------ |
| `/home/qii/pickle_decoder.py` | `{HEX}` |
| `/home/qii/shell_decoder.sh` | `{VALUE}` |

### Without execute permission `x`：
&gt; The final executed command is: `/bin/node /home/qii/node_decoder.js {HEX} --key={KEY}`, the script can receive parameters via `argv[1]`

| Command | Params |
| ------ | ------ |
| `/bin/bash` | `/home/qii/shell_decoder.sh {VALUE}` |
| `/bin/node` | `/home/qii/node_decoder.js {HEX} --key={KEY}` |



## Start From Command Line(CLI)

&gt; If you want to start from command line(CLI), you can pass args to the App.

### Examples

```bash
# Linux
# ./Another Redis Desktop Manager.AppImage

# Mac
# open /Applications/Another\ Redis\ Desktop\ Manager.app --args

# Windows
&quot;D:\xxxx\Another Redis Desktop Manager.exe&quot;

# COMMON
--host 127.0.0.1 --port 6379 --auth 123
--name tmp_connection

# CLUSTER
--cluster

# SSH
--ssh-host 192.168.0.110
--ssh-username root --ssh-password 123

# SENTINEL
--sentinel-master-name mymaster
--sentinel-node-password 123

# save connection
--save
# readonly mode
--readonly
```

### Parameter Description

#### Common

| Args | Description | Args | Description |
| ------ | ------ | ------ | ------ |
| --host | Redis host* | --port | Redis port|
| --auth | Password | --name | Custom name|
| --separator | Key separator | --readonly | Enable readonly mode|
| --username | Username（Redis6 ACL）| --save| Enable saving, one-time link by default|

#### SSH

| Args | Description | Args | Description |
| ------ | ------ | ------ | ------ |
| --ssh-host | SSH host* | --ssh-port | SSH port（default:22）|
| --ssh-username | Username* | --ssh-password | Password|
| --ssh-private-key | Path of private key | --ssh-passphrase | Password of private key|
| --ssh-timeout | SSH timeout(s) | | &amp;nbsp;|

#### CLUSTER

| Args | Description |
| ------ | ------ |
| --cluster | Enable CLUSTER mode |

#### SSL

| Args | Description | Args | Description |
| ------ | ------ | ------ | ------ |
| --ssl | Enable SSL* | --ssl-key | SSL Private Key Pem|
| --ssl-ca | SSL Certificate Authority | --ssl-cert | SSL Public Key Pem|

#### SENTINEL

| Args | Description |
| ------ | ------ |
| --sentinel-master-name | Name of master group*，like &#039;mymaster&#039; |
| --sentinel-node-password | Password of Redis node |



## FAQ

#### 1. How to connect to Redis Cluster in internal network (such as Docker, LAN, AWS)?
   
   Answer: Connect via `SSH+Cluster` (SSH to the internal network and then connecting to Cluster with internal IP such as `127.0.0.1`, `192.168.x.x`), you need to fill Redis Host with the internal IP.
   
   How to get Redis internal IP? Connect through SSH, uncheck Cluster option, and then open the console to execute `CLUSTER NODES`, select any IP in the result.

#### 2. Do I need to fill in the &#039;Username&#039; in the Redis configuration?
   
   Answer: The access control list (ACL) is only supported in `Redis&gt;=6.0`, so do not fill it unless you need a special user.


## License

[MIT](LICENSE)


## Support

[goanother.com](https://goanother.com/) &amp;nbsp; [Producthunt](https://www.producthunt.com/posts/another-redis-desktop-manager) &amp;nbsp; [Twitter@shibo](https://twitter.com/qii404) &amp;nbsp; [Download Analysis](https://qii404.me/github-release-statistics/?repo=/qishibo/AnotherRedisDesktopManager/)

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>