<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Tue, 21 Oct 2025 00:04:57 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[koodo-reader/koodo-reader]]></title>
            <link>https://github.com/koodo-reader/koodo-reader</link>
            <guid>https://github.com/koodo-reader/koodo-reader</guid>
            <pubDate>Tue, 21 Oct 2025 00:04:57 GMT</pubDate>
            <description><![CDATA[A modern ebook manager and reader with sync and backup capacities for Windows, macOS, Linux, Android, iOS and Web]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/koodo-reader/koodo-reader">koodo-reader/koodo-reader</a></h1>
            <p>A modern ebook manager and reader with sync and backup capacities for Windows, macOS, Linux, Android, iOS and Web</p>
            <p>Language: JavaScript</p>
            <p>Stars: 24,218</p>
            <p>Forks: 1,843</p>
            <p>Stars today: 20 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;left&quot;&gt;

[简体中文](https://github.com/koodo-reader/koodo-reader/blob/master/README_cn.md) | [हिंदी](https://github.com/koodo-reader/koodo-reader/blob/master/README_hi.md)
|[Português](https://github.com/koodo-reader/koodo-reader/blob/master/README_pt.md) | [Indonesian](https://github.com/koodo-reader/koodo-reader/blob/master/README_id.md) | English

&lt;/div&gt;

&lt;div align=&quot;center&quot; &gt;
  &lt;img src=&quot;https://dl.koodoreader.com/screenshots/logo.png&quot; width=&quot;96px&quot; height=&quot;96px&quot;/&gt;
&lt;/div&gt;

&lt;h1 align=&quot;center&quot;&gt;
  Koodo Reader
&lt;/h1&gt;

&lt;h3 align=&quot;center&quot;&gt;
  A cross-platform ebook reader
&lt;/h3&gt;
&lt;div align=&quot;center&quot;&gt;

[Download](https://koodoreader.com/en) | [Preview](https://web.koodoreader.com) | [Roadmap](https://koodoreader.com/en/roadmap) | [Document](https://koodoreader.com/en/document) | [Plugins](https://koodoreader.com/en/plugin)

&lt;/div&gt;

## Preview

&lt;div align=&quot;center&quot;&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;img src=&quot;https://dl.koodoreader.com/screenshots/7.png&quot; width=&quot;800px&quot;&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;img src=&quot;https://dl.koodoreader.com/screenshots/8.png&quot; width=&quot;800px&quot;&gt;
  &lt;br/&gt;
  &lt;br/&gt;
&lt;/div&gt;

## Feature

- Format support:
  - EPUB (**.epub**)
  - PDF (**.pdf**)
  - DRM-free Mobipocket (**.mobi**) and Kindle (**.azw3**, **.azw**)
  - Plain text (**.txt**)
  - FictionBook (**.fb2**)
  - Comic book archive (**.cbr**, **.cbz**, **.cbt**, **.cb7**)
  - Rich text (**.md**, **.docx**)
  - Hyper Text (**.html**, **.xml**, **.xhtml**, **.mhtml**, **.htm**)
- Platform support: **Windows**, **macOS**, **Linux**, **Android**, **iOS** and **Web**
- Utilize **OneDrive**, **Google Drive**, **Dropbox**, **MEGA**, **pCloud**, **Yandex Disk**, **Box**, **FTP**, **SFTP**, **WebDAV**, **SMB**, **Object Storage** to sync and backup your data.
- Easily import books from **OneDrive**, **Google Drive**, **MEGA**, **Yandex Disk**, **Box**, **FTP**, **SFTP**, **WebDAV**, **SMB**, **Object Storage**
- AI Translation, AI Dictionary, AI Summarization
- Single-column, two-column, or continuous scrolling layouts
- Text-to-speech, translation, dictionary, touch screen support, batch import
- Add bookmarks, notes, highlights to your books
- Adjust font size, font family, line-spacing, paragraph spacing, background color, text color, margins, and brightness
- Night mode and theme color
- Text highlight, underline, boldness, italics and shadow

## Installation

### Desktop Version: [Download](https://koodoreader.com/en/download)

### Web Version：[Visit](https://web.koodoreader.com)

### Android Version：[Download](https://koodoreader.com/en/download)

### iOS Version：[Download](https://koodoreader.com/en/download)

### Install with Scoop:

```shell
scoop bucket add extras
scoop install extras/koodo-reader
```

### Install with Homebrew:

```shell
brew install --cask koodo-reader
```

### Install with Docker:

&gt; [!NOTE]
&gt; The Docker version stores data in the browser cache by default. For your data security, please deploy and access it via HTTPS, then save the data to your local folder. Alternatively, you can enable the data source feature to synchronize the data to a specified server path.

If you only need to deploy the web version, simply use the command below.

```bash
docker run -d \
  --name koodo-reader \
  -p 80:80 \
  -p 8080:8080 \
  -e ENABLE_HTTP_SERVER=false \
  -e SERVER_USERNAME=admin \
  -e SERVER_PASSWORD=securePass123 \
  -v /path/to/host/uploads:/app/uploads \
  ghcr.io/koodo-reader/koodo-reader:master
```

If you also want to enable the **data source feature**, please:

1. Set **`ENABLE_HTTP_SERVER`** to **`true`**
2. Change **`SERVER_USERNAME`** and **`SERVER_PASSWORD`** to a secure username and password
3. Replace **`/path/to/host/uploads`** with the folder where you want to store reading data

Then, select **Docker** as the data source in Koodo Reader.

Data source functionality use port 8080, and web version use port 80 by default. If you want to switch to port 8090, just change **`-p 8080:8080`** to **`-p 8090:8080`**.

If you want to use Docker Secrets to set **`SERVER_PASSWORD`**, please refer to [docker-compose-secret.yml](https://github.com/koodo-reader/koodo-reader/blob/master/docker-compose-secret.yml)

## Screenshot

&lt;div align=&quot;center&quot;&gt;
  &lt;b&gt;Book list&lt;/b&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;kbd&gt;&lt;img src=&quot;https://dl.koodoreader.com/screenshots/1.png&quot; width=&quot;800px&quot;&gt;&lt;/kbd&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;b&gt;Book display&lt;/b&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;kbd&gt;&lt;img src=&quot;https://dl.koodoreader.com/screenshots/5.png&quot; width=&quot;800px&quot;&gt;&lt;/kbd&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;b&gt;List mode&lt;/b&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;kbd&gt;&lt;img src=&quot;https://dl.koodoreader.com/screenshots/2.png&quot; width=&quot;800px&quot;&gt;&lt;/kbd&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;b&gt;Cover mode&lt;/b&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;kbd&gt;&lt;img src=&quot;https://dl.koodoreader.com/screenshots/3.png&quot; width=&quot;800px&quot;&gt;&lt;/kbd&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;b&gt;Reader menu&lt;/b&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;kbd&gt;&lt;img src=&quot;https://dl.koodoreader.com/screenshots/6.png&quot; width=&quot;800px&quot;&gt;&lt;/kbd&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;b&gt;Dark mode&lt;/b&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;kbd&gt;&lt;img src=&quot;https://dl.koodoreader.com/screenshots/4.png&quot; width=&quot;800px&quot;&gt;&lt;/kbd&gt;
  &lt;br/&gt;
&lt;/div&gt;

&lt;/div&gt;

## Develop

Make sure that you have installed yarn and git

1. Download the repo

   ```
   git clone https://github.com/koodo-reader/koodo-reader.git
   ```

2. Enter desktop mode

   ```
   yarn
   yarn dev
   ```

3. Enter web mode

   ```
   yarn
   yarn start
   ```

## Translation

### Edit current language

1. Select your target language from the following list.

2. Click the view button to examine the source file. The untranslated terms are listed at the bottom of each file.

3. Translate the terms to your target language based on the given English reference

4. Sumbit the translation file or just translation snippets based on the amount of your translation to [this link](https://github.com/koodo-reader/koodo-reader/issues/new?assignees=&amp;labels=submit+translation&amp;projects=&amp;template=submit_translation.yml). Pull request is also welcomed.

| Language(A-Z)   | Code  | View                                                |
| --------------- | ----- | --------------------------------------------------- |
| Amharic         | am    | [View](./src/assets/locales/am/translation.json)    |
| Arabic          | ar    | [View](./src/assets/locales/ar/translation.json)    |
| Armenian        | hy    | [View](./src/assets/locales/hy/translation.json)    |
| Bengali         | bn    | [View](./src/assets/locales/bn/translation.json)    |
| Bulgarian       | bg    | [View](./src/assets/locales/bg/translation.json)    |
| Chinese (CN)    | zh-CN | [View](./src/assets/locales/zh-CN/translation.json) |
| Chinese (MO)    | zh-MO | [View](./src/assets/locales/zh-MO/translation.json) |
| Chinese (TW)    | zh-TW | [View](./src/assets/locales/zh-TW/translation.json) |
| Czech           | cs    | [View](./src/assets/locales/cs/translation.json)    |
| Danish          | da    | [View](./src/assets/locales/da/translation.json)    |
| Dutch           | nl    | [View](./src/assets/locales/nl/translation.json)    |
| English         | en    | [View](./src/assets/locales/en/translation.json)    |
| Esperanto       | eo    | [View](./src/assets/locales/eo/translation.json)    |
| Finnish         | fi    | [View](./src/assets/locales/fi/translation.json)    |
| French          | fr    | [View](./src/assets/locales/fr/translation.json)    |
| German          | de    | [View](./src/assets/locales/de/translation.json)    |
| Greek           | el    | [View](./src/assets/locales/el/translation.json)    |
| Hindi           | hi    | [View](./src/assets/locales/hi/translation.json)    |
| Hungarian       | hu    | [View](./src/assets/locales/hu/translation.json)    |
| Indonesian      | id    | [View](./src/assets/locales/id/translation.json)    |
| Interlingue     | ie    | [View](./src/assets/locales/ie/translation.json)    |
| Irish           | ga    | [View](./src/assets/locales/ga/translation.json)    |
| Italian         | it    | [View](./src/assets/locales/it/translation.json)    |
| Japanese        | ja    | [View](./src/assets/locales/ja/translation.json)    |
| Korean          | ko    | [View](./src/assets/locales/ko/translation.json)    |
| Persian         | fa    | [View](./src/assets/locales/fa/translation.json)    |
| Polish          | pl    | [View](./src/assets/locales/pl/translation.json)    |
| Portuguese      | pt    | [View](./src/assets/locales/pt/translation.json)    |
| Portuguese (BR) | pt-BR | [View](./src/assets/locales/pt-BR/translation.json) |
| Romanian        | ro    | [View](./src/assets/locales/ro/translation.json)    |
| Russian         | ru    | [View](./src/assets/locales/ru/translation.json)    |
| Slovenian       | sl    | [View](./src/assets/locales/sl/translation.json)    |
| Spanish         | es    | [View](./src/assets/locales/es/translation.json)    |
| Swedish         | sv    | [View](./src/assets/locales/sv/translation.json)    |
| Tamil           | ta    | [View](./src/assets/locales/ta/translation.json)    |
| Thai            | th    | [View](./src/assets/locales/th/translation.json)    |
| Tagalog         | tl    | [View](./src/assets/locales/tl/translation.json)    |
| Tibetan         | bo    | [View](./src/assets/locales/bo/translation.json)    |
| Turkish         | tr    | [View](./src/assets/locales/tr/translation.json)    |
| Ukrainian       | uk    | [View](./src/assets/locales/uk/translation.json)    |
| Vietnamese      | vi    | [View](./src/assets/locales/vi/translation.json)    |

### Add new language

1. If you can&#039;t find your target language from the above list, Download the Engish source file from [this link](./src/assets/locales/en/translation.json)

2. When you finish translation, submit the source file to [this link](https://github.com/koodo-reader/koodo-reader/issues/new?assignees=&amp;labels=submit+translation&amp;projects=&amp;template=submit_translation.yml). Pull request is also welcomed.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[automatisch/automatisch]]></title>
            <link>https://github.com/automatisch/automatisch</link>
            <guid>https://github.com/automatisch/automatisch</guid>
            <pubDate>Tue, 21 Oct 2025 00:04:56 GMT</pubDate>
            <description><![CDATA[The open source Zapier alternative. Build workflow automation without spending time and money.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/automatisch/automatisch">automatisch/automatisch</a></h1>
            <p>The open source Zapier alternative. Build workflow automation without spending time and money.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 13,255</p>
            <p>Forks: 1,003</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre># Automatisch - Open Source Zapier Alternative

![Automatisch - Screenshot](https://user-images.githubusercontent.com/2501931/191562539-e42f6c34-03c7-4dc4-bcf9-7f9473a9c64f.png)

🧐 Automatisch is a business automation tool that lets you connect different services like Twitter, Slack, and more to automate your business processes.

💸 Automating your workflows doesn&#039;t have to be a difficult or expensive process. You also don&#039;t need any programming knowledge to use Automatisch.

## Advantages

There are other existing solutions in the market, like Zapier and Integromat, so you might be wondering why you should use Automatisch.

✅ One of the main benefits of using Automatisch is that it allows you to store your data on your own servers, which is essential for businesses that handle sensitive user information and cannot risk sharing it with external cloud services. This is especially relevant for industries such as healthcare and finance, as well as for European companies that must adhere to the General Data Protection Regulation (GDPR).

🤓 Your contributions are vital to the development of Automatisch. As an open-source software, anyone can have an impact on how it is being developed.

💙 No vendor lock-in. If you ever decide that Automatisch is no longer helpful for your business, you can switch to any other provider, which will be easier than switching from the one cloud provider to another since you have all data and flexibility.

## Documentation

The official documentation can be found here: [https://automatisch.io/docs](https://automatisch.io/docs)

## Installation

```bash
# Clone the repository
git clone https://github.com/automatisch/automatisch.git

# Go to the repository folder
cd automatisch

# Start
docker compose up
```

You can use `user@automatisch.io` email address and `sample` password to login to Automatisch. Please do not forget to change your email and password from the settings page.

For other installation types, you can check the [installation](https://automatisch.io/docs/guide/installation) guide.

## Community Links

- [Discord](https://discord.gg/dJSah9CVrC)
- [Twitter](https://twitter.com/automatischio)

## Support

If you have any questions or problems, please visit our GitHub issues page, and we&#039;ll try to help you as soon as possible.

[https://github.com/automatisch/automatisch/issues](https://github.com/automatisch/automatisch/issues)

## License

Automatisch Community Edition (Automatisch CE) is an open-source software with the [AGPL-3.0 license](LICENSE.agpl).

Automatisch Enterprise Edition (Automatisch EE) is a commercial offering with the [Enterprise license](LICENSE.enterprise).

The Automatisch repository contains both AGPL-licensed and Enterprise-licensed files. We maintain a single repository to make development easier.

All files that contain &quot;.ee.&quot; in their name fall under the [Enterprise license](LICENSE.enterprise). All other files fall under the [AGPL-3.0 license](LICENSE.agpl).

See the [LICENSE](LICENSE) file for more information.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[nodejs/node]]></title>
            <link>https://github.com/nodejs/node</link>
            <guid>https://github.com/nodejs/node</guid>
            <pubDate>Tue, 21 Oct 2025 00:04:55 GMT</pubDate>
            <description><![CDATA[Node.js JavaScript runtime ✨🐢🚀✨]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nodejs/node">nodejs/node</a></h1>
            <p>Node.js JavaScript runtime ✨🐢🚀✨</p>
            <p>Language: JavaScript</p>
            <p>Stars: 113,890</p>
            <p>Forks: 33,530</p>
            <p>Stars today: 21 stars today</p>
            <h2>README</h2><pre># Node.js

Node.js is an open-source, cross-platform JavaScript runtime environment.

For information on using Node.js, see the [Node.js website][].

The Node.js project uses an [open governance model](./GOVERNANCE.md). The
[OpenJS Foundation][] provides support for the project.

Contributors are expected to act in a collaborative manner to move
the project forward. We encourage the constructive exchange of contrary
opinions and compromise. The [TSC](./GOVERNANCE.md#technical-steering-committee)
reserves the right to limit or block contributors who repeatedly act in ways
that discourage, exhaust, or otherwise negatively affect other participants.

**This project has a [Code of Conduct][].**

## Table of contents

* [Support](#support)
* [Release types](#release-types)
  * [Download](#download)
    * [Current and LTS releases](#current-and-lts-releases)
    * [Nightly releases](#nightly-releases)
    * [API documentation](#api-documentation)
  * [Verifying binaries](#verifying-binaries)
* [Building Node.js](#building-nodejs)
* [Security](#security)
* [Contributing to Node.js](#contributing-to-nodejs)
* [Current project team members](#current-project-team-members)
  * [TSC (Technical Steering Committee)](#tsc-technical-steering-committee)
  * [Collaborators](#collaborators)
  * [Triagers](#triagers)
  * [Release keys](#release-keys)
* [License](#license)

## Support

Looking for help? Check out the
[instructions for getting support](.github/SUPPORT.md).

## Release types

* **Current**: Under active development. Code for the Current release is in the
  branch for its major version number (for example,
  [v22.x](https://github.com/nodejs/node/tree/v22.x)). Node.js releases a new
  major version every 6 months, allowing for breaking changes. This happens in
  April and October every year. Releases appearing each October have a support
  life of 8 months. Releases appearing each April convert to LTS (see below)
  each October.
* **LTS**: Releases that receive Long Term Support, with a focus on stability
  and security. Every even-numbered major version will become an LTS release.
  LTS releases receive 12 months of _Active LTS_ support and a further 18 months
  of _Maintenance_. LTS release lines have alphabetically-ordered code names,
  beginning with v4 Argon. There are no breaking changes or feature additions,
  except in some special circumstances.
* **Nightly**: Code from the Current branch built every 24-hours when there are
  changes. Use with caution.

Current and LTS releases follow [semantic versioning](https://semver.org). A
member of the Release Team [signs](#release-keys) each Current and LTS release.
For more information, see the
[Release README](https://github.com/nodejs/Release#readme).

### Download

Binaries, installers, and source tarballs are available at
&lt;https://nodejs.org/en/download/&gt;.

#### Current and LTS releases

&lt;https://nodejs.org/download/release/&gt;

The [latest](https://nodejs.org/download/release/latest/) directory is an
alias for the latest Current release. The latest-_codename_ directory is an
alias for the latest release from an LTS line. For example, the
[latest-hydrogen](https://nodejs.org/download/release/latest-hydrogen/)
directory contains the latest Hydrogen (Node.js 18) release.

#### Nightly releases

&lt;https://nodejs.org/download/nightly/&gt;

Each directory and filename includes the version (e.g., `v22.0.0`),
followed by the UTC date (e.g., `20240424` for April 24, 2024),
and the short commit SHA of the HEAD of the release (e.g., `ddd0a9e494`).
For instance, a full directory name might look like `v22.0.0-nightly20240424ddd0a9e494`.

#### API documentation

Documentation for the latest Current release is at &lt;https://nodejs.org/api/&gt;.
Version-specific documentation is available in each release directory in the
_docs_ subdirectory. Version-specific documentation is also at
&lt;https://nodejs.org/download/docs/&gt;.

### Verifying binaries

Download directories contain a `SHASUMS256.txt.asc` file with SHA checksums for the
files and the releaser PGP signature.

You can get a trusted keyring from nodejs/release-keys, e.g. using `curl`:

```bash
curl -fsLo &quot;/path/to/nodejs-keyring.kbx&quot; &quot;https://github.com/nodejs/release-keys/raw/HEAD/gpg/pubring.kbx&quot;
```

Alternatively, you can import the releaser keys in your default keyring, see
[Release keys](#release-keys) for commands to how to do that.

Then, you can verify the files you&#039;ve downloaded locally
(if you&#039;re using your default keyring, pass `--keyring=&quot;${GNUPGHOME:-~/.gnupg}/pubring.kbx&quot;`):

```bash
curl -fsO &quot;https://nodejs.org/dist/${VERSION}/SHASUMS256.txt.asc&quot; \
&amp;&amp; gpgv --keyring=&quot;/path/to/nodejs-keyring.kbx&quot; --output SHASUMS256.txt &lt; SHASUMS256.txt.asc \
&amp;&amp; shasum --check SHASUMS256.txt --ignore-missing
```

## Building Node.js

See [BUILDING.md](BUILDING.md) for instructions on how to build Node.js from
source and a list of supported platforms.

## Security

For information on reporting security vulnerabilities in Node.js, see
[SECURITY.md](./SECURITY.md).

## Contributing to Node.js

* [Contributing to the project][]
* [Working Groups][]
* [Strategic initiatives][]
* [Technical values and prioritization][]

## Current project team members

For information about the governance of the Node.js project, see
[GOVERNANCE.md](./GOVERNANCE.md).

&lt;!-- node-core-utils and find-inactive-tsc.mjs depend on the format of the TSC
     list. If the format changes, those utilities need to be tested and
     updated. --&gt;

### TSC (Technical Steering Committee)

#### TSC voting members

&lt;!--lint disable prohibited-strings--&gt;

* [aduh95](https://github.com/aduh95) -
  **Antoine du Hamel** &lt;&lt;duhamelantoine1995@gmail.com&gt;&gt; (he/him)
* [anonrig](https://github.com/anonrig) -
  **Yagiz Nizipli** &lt;&lt;yagiz@nizipli.com&gt;&gt; (he/him)
* [benjamingr](https://github.com/benjamingr) -
  **Benjamin Gruenbaum** &lt;&lt;benjamingr@gmail.com&gt;&gt;
* [BridgeAR](https://github.com/BridgeAR) -
  **Ruben Bridgewater** &lt;&lt;ruben@bridgewater.de&gt;&gt; (he/him)
* [gireeshpunathil](https://github.com/gireeshpunathil) -
  **Gireesh Punathil** &lt;&lt;gpunathi@in.ibm.com&gt;&gt; (he/him)
* [jasnell](https://github.com/jasnell) -
  **James M Snell** &lt;&lt;jasnell@gmail.com&gt;&gt; (he/him)
* [joyeecheung](https://github.com/joyeecheung) -
  **Joyee Cheung** &lt;&lt;joyeec9h3@gmail.com&gt;&gt; (she/her)
* [legendecas](https://github.com/legendecas) -
  **Chengzhong Wu** &lt;&lt;legendecas@gmail.com&gt;&gt; (he/him)
* [marco-ippolito](https://github.com/marco-ippolito) -
  **Marco Ippolito** &lt;&lt;marcoippolito54@gmail.com&gt;&gt; (he/him)
* [mcollina](https://github.com/mcollina) -
  **Matteo Collina** &lt;&lt;matteo.collina@gmail.com&gt;&gt; (he/him)
* [panva](https://github.com/panva) -
  **Filip Skokan** &lt;&lt;panva.ip@gmail.com&gt;&gt; (he/him)
* [RafaelGSS](https://github.com/RafaelGSS) -
  **Rafael Gonzaga** &lt;&lt;rafael.nunu@hotmail.com&gt;&gt; (he/him)
* [RaisinTen](https://github.com/RaisinTen) -
  **Darshan Sen** &lt;&lt;raisinten@gmail.com&gt;&gt; (he/him)
* [richardlau](https://github.com/richardlau) -
  **Richard Lau** &lt;&lt;richard.lau@ibm.com&gt;&gt;
* [ronag](https://github.com/ronag) -
  **Robert Nagy** &lt;&lt;ronagy@icloud.com&gt;&gt;
* [ruyadorno](https://github.com/ruyadorno) -
  **Ruy Adorno** &lt;&lt;ruy@vlt.sh&gt;&gt; (he/him)
* [ShogunPanda](https://github.com/ShogunPanda) -
  **Paolo Insogna** &lt;&lt;paolo@cowtech.it&gt;&gt; (he/him)
* [targos](https://github.com/targos) -
  **Michaël Zasso** &lt;&lt;targos@protonmail.com&gt;&gt; (he/him)
* [tniessen](https://github.com/tniessen) -
  **Tobias Nießen** &lt;&lt;tniessen@tnie.de&gt;&gt; (he/him)

#### TSC regular members

* [BethGriggs](https://github.com/BethGriggs) -
  **Beth Griggs** &lt;&lt;bethanyngriggs@gmail.com&gt;&gt; (she/her)
* [bnoordhuis](https://github.com/bnoordhuis) -
  **Ben Noordhuis** &lt;&lt;info@bnoordhuis.nl&gt;&gt;
* [cjihrig](https://github.com/cjihrig) -
  **Colin Ihrig** &lt;&lt;cjihrig@gmail.com&gt;&gt; (he/him)
* [codebytere](https://github.com/codebytere) -
  **Shelley Vohr** &lt;&lt;shelley.vohr@gmail.com&gt;&gt; (she/her)
* [GeoffreyBooth](https://github.com/GeoffreyBooth) -
  **Geoffrey Booth** &lt;&lt;webadmin@geoffreybooth.com&gt;&gt; (he/him)
* [MoLow](https://github.com/MoLow) -
  **Moshe Atlow** &lt;&lt;moshe@atlow.co.il&gt;&gt; (he/him)
* [Trott](https://github.com/Trott) -
  **Rich Trott** &lt;&lt;rtrott@gmail.com&gt;&gt; (he/him)

&lt;details&gt;

&lt;summary&gt;TSC emeriti members&lt;/summary&gt;

#### TSC emeriti members

* [addaleax](https://github.com/addaleax) -
  **Anna Henningsen** &lt;&lt;anna@addaleax.net&gt;&gt; (she/her)
* [apapirovski](https://github.com/apapirovski) -
  **Anatoli Papirovski** &lt;&lt;apapirovski@mac.com&gt;&gt; (he/him)
* [ChALkeR](https://github.com/ChALkeR) -
  **Сковорода Никита Андреевич** &lt;&lt;chalkerx@gmail.com&gt;&gt; (he/him)
* [chrisdickinson](https://github.com/chrisdickinson) -
  **Chris Dickinson** &lt;&lt;christopher.s.dickinson@gmail.com&gt;&gt;
* [danbev](https://github.com/danbev) -
  **Daniel Bevenius** &lt;&lt;daniel.bevenius@gmail.com&gt;&gt; (he/him)
* [danielleadams](https://github.com/danielleadams) -
  **Danielle Adams** &lt;&lt;adamzdanielle@gmail.com&gt;&gt; (she/her)
* [evanlucas](https://github.com/evanlucas) -
  **Evan Lucas** &lt;&lt;evanlucas@me.com&gt;&gt; (he/him)
* [fhinkel](https://github.com/fhinkel) -
  **Franziska Hinkelmann** &lt;&lt;franziska.hinkelmann@gmail.com&gt;&gt; (she/her)
* [Fishrock123](https://github.com/Fishrock123) -
  **Jeremiah Senkpiel** &lt;&lt;fishrock123@rocketmail.com&gt;&gt; (he/they)
* [gabrielschulhof](https://github.com/gabrielschulhof) -
  **Gabriel Schulhof** &lt;&lt;gabrielschulhof@gmail.com&gt;&gt;
* [gibfahn](https://github.com/gibfahn) -
  **Gibson Fahnestock** &lt;&lt;gibfahn@gmail.com&gt;&gt; (he/him)
* [indutny](https://github.com/indutny) -
  **Fedor Indutny** &lt;&lt;fedor@indutny.com&gt;&gt;
* [isaacs](https://github.com/isaacs) -
  **Isaac Z. Schlueter** &lt;&lt;i@izs.me&gt;&gt;
* [joshgav](https://github.com/joshgav) -
  **Josh Gavant** &lt;&lt;josh.gavant@outlook.com&gt;&gt;
* [mhdawson](https://github.com/mhdawson) -
  **Michael Dawson** &lt;&lt;midawson@redhat.com&gt;&gt; (he/him)
* [mmarchini](https://github.com/mmarchini) -
  **Mary Marchini** &lt;&lt;oss@mmarchini.me&gt;&gt; (she/her)
* [mscdex](https://github.com/mscdex) -
  **Brian White** &lt;&lt;mscdex@mscdex.net&gt;&gt;
* [MylesBorins](https://github.com/MylesBorins) -
  **Myles Borins** &lt;&lt;myles.borins@gmail.com&gt;&gt; (he/him)
* [nebrius](https://github.com/nebrius) -
  **Bryan Hughes** &lt;&lt;bryan@nebri.us&gt;&gt;
* [ofrobots](https://github.com/ofrobots) -
  **Ali Ijaz Sheikh** &lt;&lt;ofrobots@google.com&gt;&gt; (he/him)
* [orangemocha](https://github.com/orangemocha) -
  **Alexis Campailla** &lt;&lt;orangemocha@nodejs.org&gt;&gt;
* [piscisaureus](https://github.com/piscisaureus) -
  **Bert Belder** &lt;&lt;bertbelder@gmail.com&gt;&gt;
* [rvagg](https://github.com/rvagg) -
  **Rod Vagg** &lt;&lt;r@va.gg&gt;&gt;
* [sam-github](https://github.com/sam-github) -
  **Sam Roberts** &lt;&lt;vieuxtech@gmail.com&gt;&gt;
* [shigeki](https://github.com/shigeki) -
  **Shigeki Ohtsu** &lt;&lt;ohtsu@ohtsu.org&gt;&gt; (he/him)
* [thefourtheye](https://github.com/thefourtheye) -
  **Sakthipriyan Vairamani** &lt;&lt;thechargingvolcano@gmail.com&gt;&gt; (he/him)
* [TimothyGu](https://github.com/TimothyGu) -
  **Tiancheng &quot;Timothy&quot; Gu** &lt;&lt;timothygu99@gmail.com&gt;&gt; (he/him)
* [trevnorris](https://github.com/trevnorris) -
  **Trevor Norris** &lt;&lt;trev.norris@gmail.com&gt;&gt;

&lt;/details&gt;

&lt;!-- node-core-utils and find-inactive-collaborators.mjs depend on the format
     of the collaborator list. If the format changes, those utilities need to be
     tested and updated. --&gt;

### Collaborators

* [abmusse](https://github.com/abmusse) -
  **Abdirahim Musse** &lt;&lt;abdirahim.musse@ibm.com&gt;&gt;
* [addaleax](https://github.com/addaleax) -
  **Anna Henningsen** &lt;&lt;anna@addaleax.net&gt;&gt; (she/her)
* [Aditi-1400](https://github.com/Aditi-1400) -
  **Aditi Singh** &lt;&lt;aditisingh1400@gmail.com&gt;&gt; (she/her)
* [aduh95](https://github.com/aduh95) -
  **Antoine du Hamel** &lt;&lt;duhamelantoine1995@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/aduh95)
* [anonrig](https://github.com/anonrig) -
  **Yagiz Nizipli** &lt;&lt;yagiz@nizipli.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/anonrig)
* [atlowChemi](https://github.com/atlowChemi) -
  **Chemi Atlow** &lt;&lt;chemi@atlow.co.il&gt;&gt; (he/him)
* [Ayase-252](https://github.com/Ayase-252) -
  **Qingyu Deng** &lt;&lt;i@ayase-lab.com&gt;&gt;
* [bengl](https://github.com/bengl) -
  **Bryan English** &lt;&lt;bryan@bryanenglish.com&gt;&gt; (he/him)
* [benjamingr](https://github.com/benjamingr) -
  **Benjamin Gruenbaum** &lt;&lt;benjamingr@gmail.com&gt;&gt;
* [BethGriggs](https://github.com/BethGriggs) -
  **Beth Griggs** &lt;&lt;bethanyngriggs@gmail.com&gt;&gt; (she/her)
* [bnb](https://github.com/bnb) -
  **Tierney Cyren** &lt;&lt;hello@bnb.im&gt;&gt; (they/them)
* [bnoordhuis](https://github.com/bnoordhuis) -
  **Ben Noordhuis** &lt;&lt;info@bnoordhuis.nl&gt;&gt;
* [BridgeAR](https://github.com/BridgeAR) -
  **Ruben Bridgewater** &lt;&lt;ruben@bridgewater.de&gt;&gt; (he/him)
* [cclauss](https://github.com/cclauss) -
  **Christian Clauss** &lt;&lt;cclauss@me.com&gt;&gt; (he/him)
* [cjihrig](https://github.com/cjihrig) -
  **Colin Ihrig** &lt;&lt;cjihrig@gmail.com&gt;&gt; (he/him)
* [codebytere](https://github.com/codebytere) -
  **Shelley Vohr** &lt;&lt;shelley.vohr@gmail.com&gt;&gt; (she/her)
* [cola119](https://github.com/cola119) -
  **Kohei Ueno** &lt;&lt;kohei.ueno119@gmail.com&gt;&gt; (he/him)
* [daeyeon](https://github.com/daeyeon) -
  **Daeyeon Jeong** &lt;&lt;daeyeon.dev@gmail.com&gt;&gt; (he/him)
* [dario-piotrowicz](https://github.com/dario-piotrowicz) -
  **Dario Piotrowicz** &lt;&lt;dario.piotrowicz@gmail.com&gt;&gt; (he/him)
* [debadree25](https://github.com/debadree25) -
  **Debadree Chatterjee** &lt;&lt;debadree333@gmail.com&gt;&gt; (he/him)
* [deokjinkim](https://github.com/deokjinkim) -
  **Deokjin Kim** &lt;&lt;deokjin81.kim@gmail.com&gt;&gt; (he/him)
* [edsadr](https://github.com/edsadr) -
  **Adrian Estrada** &lt;&lt;edsadr@gmail.com&gt;&gt; (he/him)
* [ErickWendel](https://github.com/ErickWendel) -
  **Erick Wendel** &lt;&lt;erick.workspace@gmail.com&gt;&gt; (he/him)
* [Ethan-Arrowood](https://github.com/Ethan-Arrowood) -
  **Ethan Arrowood** &lt;&lt;ethan@arrowood.dev&gt;&gt; (he/him)
* [fhinkel](https://github.com/fhinkel) -
  **Franziska Hinkelmann** &lt;&lt;franziska.hinkelmann@gmail.com&gt;&gt; (she/her)
* [Flarna](https://github.com/Flarna) -
  **Gerhard Stöbich** &lt;&lt;deb2001-github@yahoo.de&gt;&gt; (he/they)
* [gabrielschulhof](https://github.com/gabrielschulhof) -
  **Gabriel Schulhof** &lt;&lt;gabrielschulhof@gmail.com&gt;&gt;
* [geeksilva97](https://github.com/geeksilva97) -
  **Edy Silva** &lt;&lt;edigleyssonsilva@gmail.com&gt;&gt; (he/him)
* [gengjiawen](https://github.com/gengjiawen) -
  **Jiawen Geng** &lt;&lt;technicalcute@gmail.com&gt;&gt;
* [GeoffreyBooth](https://github.com/GeoffreyBooth) -
  **Geoffrey Booth** &lt;&lt;webadmin@geoffreybooth.com&gt;&gt; (he/him)
* [gireeshpunathil](https://github.com/gireeshpunathil) -
  **Gireesh Punathil** &lt;&lt;gpunathi@in.ibm.com&gt;&gt; (he/him)
* [guybedford](https://github.com/guybedford) -
  **Guy Bedford** &lt;&lt;guybedford@gmail.com&gt;&gt; (he/him)
* [H4ad](https://github.com/H4ad) -
  **Vinícius Lourenço Claro Cardoso** &lt;&lt;contact@viniciusl.com.br&gt;&gt; (he/him)
* [HarshithaKP](https://github.com/HarshithaKP) -
  **Harshitha K P** &lt;&lt;harshitha014@gmail.com&gt;&gt; (she/her)
* [himself65](https://github.com/himself65) -
  **Zeyu &quot;Alex&quot; Yang** &lt;&lt;himself65@outlook.com&gt;&gt; (he/him)
* [IlyasShabi](https://github.com/IlyasShabi) -
  **Ilyas Shabi** &lt;&lt;ilyasshabi94@gmail.com&gt;&gt; (he/him)
* [islandryu](https://github.com/islandryu) -
  **Ryuhei Shima** &lt;&lt;shimaryuhei@gmail.com&gt;&gt; (he/him)
* [jakecastelli](https://github.com/jakecastelli) -
  **Jake Yuesong Li** &lt;&lt;jake.yuesong@gmail.com&gt;&gt; (he/him)
* [JakobJingleheimer](https://github.com/JakobJingleheimer) -
  **Jacob Smith** &lt;&lt;jacob@frende.me&gt;&gt; (he/him)
* [jasnell](https://github.com/jasnell) -
  **James M Snell** &lt;&lt;jasnell@gmail.com&gt;&gt; (he/him)
* [jazelly](https://github.com/jazelly) -
  **Jason Zhang** &lt;&lt;xzha4350@gmail.com&gt;&gt; (he/him)
* [jkrems](https://github.com/jkrems) -
  **Jan Martin** &lt;&lt;jan.krems@gmail.com&gt;&gt; (he/him)
* [JonasBa](https://github.com/JonasBa) -
  **Jonas Badalic** &lt;&lt;jonas.badalic@gmail.com&gt;&gt; (he/him)
* [joyeecheung](https://github.com/joyeecheung) -
  **Joyee Cheung** &lt;&lt;joyeec9h3@gmail.com&gt;&gt; (she/her)
* [juanarbol](https://github.com/juanarbol) -
  **Juan José Arboleda** &lt;&lt;soyjuanarbol@gmail.com&gt;&gt; (he/him)
* [JungMinu](https://github.com/JungMinu) -
  **Minwoo Jung** &lt;&lt;nodecorelab@gmail.com&gt;&gt; (he/him)
* [KhafraDev](https://github.com/KhafraDev) -
  **Matthew Aitken** &lt;&lt;maitken033380023@gmail.com&gt;&gt; (he/him)
* [legendecas](https://github.com/legendecas) -
  **Chengzhong Wu** &lt;&lt;legendecas@gmail.com&gt;&gt; (he/him)
* [lemire](https://github.com/lemire) -
  **Daniel Lemire** &lt;&lt;daniel@lemire.me&gt;&gt;
* [LiviaMedeiros](https://github.com/LiviaMedeiros) -
  **LiviaMedeiros** &lt;&lt;livia@cirno.name&gt;&gt;
* [ljharb](https://github.com/ljharb) -
  **Jordan Harband** &lt;&lt;ljharb@gmail.com&gt;&gt;
* [lpinca](https://github.com/lpinca) -
  **Luigi Pinca** &lt;&lt;luigipinca@gmail.com&gt;&gt; (he/him)
* [lukekarrys](https://github.com/lukekarrys) -
  **Luke Karrys** &lt;&lt;luke@lukekarrys.com&gt;&gt; (he/him)
* [Lxxyx](https://github.com/Lxxyx) -
  **Zijian Liu** &lt;&lt;lxxyxzj@gmail.com&gt;&gt; (he/him)
* [marco-ippolito](https://github.com/marco-ippolito) -
  **Marco Ippolito** &lt;&lt;marcoippolito54@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/marco-ippolito)
* [marsonya](https://github.com/marsonya) -
  **Akhil Marsonya** &lt;&lt;akhil.marsonya27@gmail.com&gt;&gt; (he/him)
* [MattiasBuelens](https://github.com/MattiasBuelens) -
  **Mattias Buelens** &lt;&lt;mattias@buelens.com&gt;&gt; (he/him)
* [mcollina](https://github.com/mcollina) -
  **Matteo Collina** &lt;&lt;matteo.collina@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/mcollina)
* [meixg](https://github.com/meixg) -
  **Xuguang Mei** &lt;&lt;meixuguang@gmail.com&gt;&gt; (he/him)
* [mhdawson](https://github.com/mhdawson) -
  **Michael Dawson** &lt;&lt;midawson@redhat.com&gt;&gt; (he/him)
* [MoLow](https://github.com/MoLow) -
  **Moshe Atlow** &lt;&lt;moshe@atlow.co.il&gt;&gt; (he/him)
* [MrJithil](https://github.com/MrJithil) -
  **Jithil P Ponnan** &lt;&lt;jithil@outlook.com&gt;&gt; (he/him)
* [ovflowd](https://github.com/ovflowd) -
  **Claudio Wunder** &lt;&lt;cwunder@gnome.org&gt;&gt; (he/they)
* [panva](https://github.com/panva) -
  **Filip Skokan** &lt;&lt;panva.ip@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/panva)
* [pimterry](https://github.com/pimterry) -
  **Tim Perry** &lt;&lt;pimterry@gmail.com&gt;&gt; (he/him)
* [pmarchini](https://github.com/pmarchini) -
  **Pietro Marchini** &lt;&lt;pietro.marchini94@gmail.com&gt;&gt; (he/him)
* [puskin](https://github.com/puskin) -
  **Giovanni Bucci** &lt;&lt;github@puskin.it&gt;&gt; (he/him)
* [Qard](https://github.com/Qard) -
  **Stephen Belanger** &lt;&lt;admin@stephenbelanger.com&gt;&gt; (he/him)
* [RafaelGSS](https://github.com/RafaelGSS) -
  **Rafael Gonzaga** &lt;&lt;rafael.nunu@hotmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/RafaelGSS)
* [RaisinTen](https://github.com/RaisinTen) -
  **Darshan Sen** &lt;&lt;raisinten@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/RaisinTen)
* [richardlau](https://github.com/richardlau) -
  **Richard Lau** &lt;&lt;richard.lau@ibm.com&gt;&gt;
* [rluvaton](https://github.com/rluvaton) -
  **Raz Luvaton** &lt;&lt;rluvaton@gmail.com&gt;&gt; (he/him)
* [ronag](https://github.com/ronag) -
  **Robert Nagy** &lt;&lt;ronagy@icloud.com&gt;&gt;
* [ruyadorno](https://github.com/ruyadorno) -
  **Ruy Adorno** &lt;&lt;ruy@vlt.sh&gt;&gt; (he/him)
* [santigimeno](https://github.com/santigimeno) -
  **Santiago Gimeno** &lt;&lt;santiago.gimeno@gmail.com&gt;&gt;
* [ShogunPanda](https://github.com/ShogunPanda) -
  **Paolo Insogna** &lt;&lt;paolo@cowtech.it&gt;&gt; (he/him)
* [srl295](https://github.com/srl295) -
  **Steven R Loomis** &lt;&lt;srl295@gmail.com&gt;&gt;
* [StefanStojanovic](https://github.com/StefanStojanovic) -
  **Stefan Stojanovic** &lt;&lt;stefan.stojanovic@janeasystems.com&gt;&gt; (he/him)
* [sxa](https://github.com/sxa) -
  **Stewart X Addison** &lt;&lt;sxa@redhat.com&gt;&gt; (he/him)
* [targos](https://github.com/targos) -
  **Michaël Zasso** &lt;&lt;targos@protonmail.com&gt;&gt; (he/him)
* [theanarkh](https://github.com/theanarkh) -
  **theanarkh** &lt;&lt;theratliter@gmail.com&gt;&gt; (he/him)
* [tniessen](https://github.com/tniessen) -
  **Tobias Nießen** &lt;&lt;tniessen@tnie.de&gt;&gt; (he/him)
* [trivikr](https://github.com/trivikr) -
  **Trivikram Kamat** &lt;&lt;trivikr.dev@gmail.com&gt;&gt;
* [Trott](https://github.com/Trott) -
  **Rich Trott** &lt;&lt;rtrott@gmail.com&gt;&gt; (he/him)
* [UlisesGascon](https://github.com/UlisesGascon) -
  **Ulises Gascón** &lt;&lt;ulisesgascongonzalez@gmail.com&gt;&gt; (he/him)
* [vmoroz]

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[vanzan01/claude-code-sub-agent-collective]]></title>
            <link>https://github.com/vanzan01/claude-code-sub-agent-collective</link>
            <guid>https://github.com/vanzan01/claude-code-sub-agent-collective</guid>
            <pubDate>Tue, 21 Oct 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[🧠 Context Engineering Research - Not just another agent collection, but using research and context engineering to function as a collective. Hub-and-spoke coordination through Claude Code.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vanzan01/claude-code-sub-agent-collective">vanzan01/claude-code-sub-agent-collective</a></h1>
            <p>🧠 Context Engineering Research - Not just another agent collection, but using research and context engineering to function as a collective. Hub-and-spoke coordination through Claude Code.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 383</p>
            <p>Forks: 44</p>
            <p>Stars today: 42 stars today</p>
            <h2>README</h2><pre># Claude Code Sub-Agent Collective

[![npm version](https://badge.fury.io/js/claude-code-collective.svg)](https://badge.fury.io/js/claude-code-collective)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)

**Experimental NPX installer for TDD-focused AI agents**

This installs a collection of AI agents designed for Test-Driven Development and rapid prototyping. It&#039;s experimental, opinionated, and I built it to speed up my own MVP development work.

## What this installs

```bash
npx claude-code-collective init
```

You get 30+ specialized agents that enforce TDD methodology and try to be smarter about using real documentation instead of guessing.

## Why this exists

I got tired of:
- AI giving me code without tests
- Having to manually look up library documentation
- Inconsistent development approaches across projects
- Breaking down complex features manually

So I built agents that:
1. Write tests first, always (RED → GREEN → REFACTOR)
2. Use Context7 to pull real documentation
3. Route work to specialists based on what needs doing
4. Break down complex requests intelligently

## What you get after installation

### Core Implementation Agents (TDD-enforced)
- **@component-implementation-agent** - UI components with tests and modern patterns
- **@feature-implementation-agent** - Business logic with comprehensive testing
- **@infrastructure-implementation-agent** - Build systems with testing setup
- **@testing-implementation-agent** - Test suites that actually test things
- **@polish-implementation-agent** - Performance optimization with preserved tests

### Quality &amp; Validation
- **@quality-agent** - Code review and standards checking
- **@devops-agent** - Deployment and CI/CD setup
- **@functional-testing-agent** - Browser testing with Playwright
- **@enhanced-quality-gate** - Comprehensive validation gates
- **@completion-gate** - Task validation and completion checks

### Research &amp; Intelligence (Experimental)
- **@research-agent** - Context7-powered documentation lookup
- **@prd-research-agent** - Intelligent requirement breakdown
- **@task-orchestrator** - Smart task parallelization

### System &amp; Coordination
- **`/van` command** - Entry point that routes to @task-orchestrator
- **@task-orchestrator** - Central routing hub that picks the right specialist
- **@behavioral-transformation-agent** - System behavioral setup
- **@hook-integration-agent** - TDD enforcement automation
- **@van-maintenance-agent** - System maintenance and updates

**Plus 20+ other specialized agents** for specific development tasks.

## Installation options

### Quick install (recommended for trying it out)
```bash
npx claude-code-collective init
```

### Other options if you want to be selective
```bash
# Just core agents for lightweight projects
npx claude-code-collective init --minimal

# Focus on testing framework only
npx claude-code-collective init --testing-only

# Just the behavioral system and hooks
npx claude-code-collective init --hooks-only

# Interactive setup with choices
npx claude-code-collective init --interactive
```

## What actually gets installed

```
your-project/
├── CLAUDE.md                    # Behavioral rules for agents
├── .claude/
│   ├── settings.json           # Hook configuration
│   ├── agents/                 # Agent definitions (30+ files)
│   │   ├── prd-research-agent.md
│   │   ├── task-orchestrator.md
│   │   ├── lib/
│   │   │   └── research-analyzer.js  # Complexity analysis engine
│   │   └── ... (lots more agents)
│   └── hooks/                  # TDD enforcement scripts
│       ├── test-driven-handoff.sh
│       └── collective-metrics.sh
└── .claude-collective/
    ├── tests/                  # Test framework templates
    ├── metrics/                # Usage tracking (for development)
    └── package.json           # Testing setup (Vitest)
```

## How it works

1. **`/van` command** routes to **@task-orchestrator** (the routing hub) which analyzes requests and delegates to specialists
2. **Research phase** - agents use Context7 for real documentation  
3. **Tests written first** - before any implementation
4. **Implementation** - minimal code to make tests pass
5. **Refactoring** - clean up while keeping tests green
6. **Delivery** - you see what tests were added and results

### The TDD contract every agent follows

```
## DELIVERY COMPLETE
✅ Tests written first (RED phase)
✅ Implementation passes tests (GREEN phase)
✅ Code refactored for quality (REFACTOR phase)
📊 Test Results: X/X passing
```

## Management commands

```bash
# Check what&#039;s installed and working
npx claude-code-collective status

# Validate installation integrity
npx claude-code-collective validate

# Fix broken installations
npx claude-code-collective repair

# Remove everything
npx claude-code-collective clean

# Get help
npx claude-code-collective --help
```

## Current state (honest assessment)

### What works well
- TDD enforcement prevents a lot of bugs
- Context7 integration is much better than agents guessing
- Routing usually picks the right agent for the job
- Breaking down complex tasks is genuinely helpful

### What&#039;s experimental/rough
- Some agents are still being refined
- Research phase can be slow sometimes
- Hook system requires restart (Claude Code limitation)
- Documentation is scattered across files

### Known limitations
- Requires Node.js &gt;= 16
- Need to restart Claude Code after installation
- Opinionated about TDD (if you don&#039;t like tests, skip this)
- Some agents might be too thorough/slow for simple tasks

## Testing your installation

After installing:

```bash
# 1. Validate everything installed correctly
npx claude-code-collective validate

# 2. Check status
npx claude-code-collective status

# 3. Restart Claude Code (required for hooks)

# 4. Try it out
# In Claude Code: &quot;Build a simple todo app with React&quot;
# Expected: routes to research → breaks down task → writes tests → implements
```

## Troubleshooting

### Installation fails
- Check Node.js version: `node --version` (need &gt;= 16)
- Clear npm cache: `npm cache clean --force`
- Try force install: `npx claude-code-collective init --force`

### Agents don&#039;t work
- Restart Claude Code (hooks need to load)
- Check `.claude/settings.json` exists
- Run `npx claude-code-collective validate`

### Tests don&#039;t run
- Make sure your project has a test runner (Jest, Vitest, etc.)
- Check if tests are actually being written to files
- Look at the TDD completion reports from agents

### Research is slow
- Context7 might be having connectivity issues
- Agent might be being thorough (this varies)
- Check `.claude-collective/metrics/` for timing data

## Requirements

- **Node.js**: &gt;= 16.0.0
- **NPM**: &gt;= 8.0.0
- **Claude Code**: With MCP support and hook system
- **Restart**: Required after installation (hooks limitation)

## What this is and isn&#039;t

### What it is
- Experimental development aid for rapid prototyping
- Collection of TDD-focused AI agents
- Personal project that I use for my own MVPs
- Opinionated about test-first development

### What it isn&#039;t
- Production-ready enterprise software
- Guaranteed to work perfectly
- Following any official standards
- A replacement for thinking or understanding code

## Why TDD?

Because in my experience:
- Writing tests first forces better design thinking
- Tests catch bugs when they&#039;re cheap to fix
- Refactoring is safe with good test coverage
- Code with tests is easier to change later

The agents enforce this because I believe it leads to better outcomes. If you disagree with TDD philosophy, this tool probably isn&#039;t for you.

## Research features (experimental)

To make agents smarter about modern development:

- **Context7 integration** - real, current library documentation
- **ResearchDrivenAnalyzer** - intelligent complexity assessment
- **Smart task breakdown** - only creates subtasks when actually needed
- **Best practice application** - research-informed patterns

This stuff is experimental and sometimes overthinks things, but generally helpful.

## Solutions to common agent problems

AI agents can be unreliable. Here&#039;s what I built to deal with that:

**Agents ignoring TDD rules**: Hook system enforces test-first development before any code gets written.

**Agents bypassing directives**: CLAUDE.md behavioral operating system with prime directives that override default behavior.

**Agents stopping mid-task**: Test-driven handoff validation ensures work gets completed or explicitly handed off.

**Agents making up APIs**: Context7 integration forces agents to use real, current documentation.

**Agents taking wrong approach**: Central routing through **@task-orchestrator** hub prevents agents from self-selecting incorrectly.

**Agents breaking coordination**: Hub-and-spoke architecture eliminates peer-to-peer communication chaos.

**Agents skipping quality steps**: Quality gates that block completion until standards are met.

**Agents losing context**: Handoff contracts preserve required information across agent transitions.

**Agents providing inconsistent output**: Standardized TDD completion reporting from every implementation agent.

**Agents working on wrong priorities**: ResearchDrivenAnalyzer scores complexity to focus effort appropriately.

Most of these are enforced automatically through hooks and behavioral constraints, not just hoping agents follow instructions.

## Support

This is a personal project, but:
- **Issues welcome** if you find bugs or have suggestions
- **PRs welcome** for small fixes or better agent prompts  
- **Don&#039;t expect rapid responses** - this is a side project

**Get help**: Run `npx claude-code-collective validate` for diagnostics

## License

MIT License - Use it, break it, fix it, whatever works for you.

---

**Experimental** | **TDD-Focused** | **Personal Project** | **Use At Your Own Risk**

## Changelog

See [CHANGELOG.md](CHANGELOG.md) for detailed version history and release notes.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[bgstaal/multipleWindow3dScene]]></title>
            <link>https://github.com/bgstaal/multipleWindow3dScene</link>
            <guid>https://github.com/bgstaal/multipleWindow3dScene</guid>
            <pubDate>Tue, 21 Oct 2025 00:04:53 GMT</pubDate>
            <description><![CDATA[A quick example of how one can "synchronize" a 3d scene across multiple windows using three.js and localStorage]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/bgstaal/multipleWindow3dScene">bgstaal/multipleWindow3dScene</a></h1>
            <p>A quick example of how one can "synchronize" a 3d scene across multiple windows using three.js and localStorage</p>
            <p>Language: JavaScript</p>
            <p>Stars: 18,919</p>
            <p>Forks: 2,933</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre># Multiple Window 3D Scene using Three.js

## Introduction
This project demonstrates a unique approach to creating and managing a 3D scene across multiple browser windows using Three.js and localStorage. It&#039;s designed for developers interested in advanced web graphics and window management techniques.

## Features
- 3D scene creation and rendering with Three.js.
- Synchronization of 3D scenes across multiple browser windows.
- Dynamic window management and state synchronization using localStorage.

## Installation
Clone the repository and open `index.html` in your browser to start exploring the 3D scene.

```
git clone https://github.com/bgstaal/multipleWindow3dScene
```
## Usage
The main application logic is contained within `main.js` and `WindowManager.js`. The 3D scene is rendered in `index.html`, which serves as the entry point of the application.

## Structure and Components
- `index.html`: Entry point that sets up the HTML structure and includes the Three.js library and the main script.
- `WindowManager.js`: Core class managing window creation, synchronization, and state management across multiple windows.
- `main.js`: Contains the logic for initializing the 3D scene, handling window events, and rendering the scene.
- `three.r124.min.js`: Minified version of the Three.js library used for 3D graphics rendering.

## Detailed Functionality
- `WindowManager.js` handles the lifecycle of multiple browser windows, including creation, synchronization, and removal. It uses localStorage to maintain state across windows.
- `main.js` initializes the 3D scene using Three.js, manages the window&#039;s resize events, and updates the scene based on window interactions.

## Contributing
Contributions to enhance or expand the project are welcome. Feel free to fork the repository, make changes, and submit pull requests.

## License
This project is open-sourced under the MIT License.

## Acknowledgments
- The Three.js team for their comprehensive 3D library.
- x.com/didntdrinkwater for this readme.

## Contact
For more information and updates, follow [@_nonfigurativ_](https://twitter.com/_nonfigurativ_) on Twitter.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[LeCoupa/awesome-cheatsheets]]></title>
            <link>https://github.com/LeCoupa/awesome-cheatsheets</link>
            <guid>https://github.com/LeCoupa/awesome-cheatsheets</guid>
            <pubDate>Tue, 21 Oct 2025 00:04:52 GMT</pubDate>
            <description><![CDATA[👩‍💻👨‍💻 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/LeCoupa/awesome-cheatsheets">LeCoupa/awesome-cheatsheets</a></h1>
            <p>👩‍💻👨‍💻 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 44,564</p>
            <p>Forks: 6,605</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>[![AWESOME CHEATSHEETS LOGO](_design/cover_github@2x.png)](https://lecoupa.github.io/awesome-cheatsheets/)

[![Awesome](https://awesome.re/badge.svg)](https://awesome.re) [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/LeCoupa/awesome-cheatsheets/blob/master/LICENSE)

**WEBSITE DIRECTORY**: [Available here](https://lecoupa.github.io/awesome-cheatsheets/).

&gt; 📚 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.

## 🤔 Why Awesome-Cheatsheets?

I usually make a cheat sheet when I want to improve my skills in a programming language, a framework or a development tool. [I started doing these kinds of things a long time ago on Gist](https://gist.github.com/LeCoupa). To better keep track of the history and to let people contribute, I re-organized all of them into this single repository. Most of the content is coming from official documentation and some books I have read.

Feel free to take a look. You might learn new things. They have been designed to provide a quick way to assess your knowledge and to save you time.

## 📚 Table of Contents

### 📃 Languages

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### Command line interface

- [Bash](languages/bash.sh)

#### Imperative

- [C](languages/C.txt)
- [C#](languages/C%23.txt)
- [Go](languages/golang.md)
- [Java](languages/java.md)
- [PHP](languages/php.php)
- [Python](languages/python.md)

#### Functional

- [JavaScript](languages/javascript.js)

&lt;/details&gt;

### 📦 Backend

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### PHP

- [Laravel](backend/laravel.php)

#### Python

- [Django](backend/django.py)

#### Javascript

- [Adonis.js](backend/adonis.js)
- [Express.js](backend/express.js)
- [Feathers.js](backend/feathers.js)
- [Moleculer](backend/moleculer.js)
- [Node.js](backend/node.js)
- [Sails.js](backend/sails.js)
  &lt;/details&gt;

### 🌐 Frontend

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### Basics

- [HTML5](frontend/html5.html)
- [CSS3](frontend/css3.css)

#### Frameworks

- [React.js](frontend/react.js)
- [Vue.js](frontend/vue.js)
- [Tailwind.css](frontend/tailwind.css)
- [Ember.js](frontend/ember.js)
- [Angular (2+)](frontend/angular.js)
- [AngularJS](frontend/angularjs.js)
  &lt;/details&gt;

### 🗃️ Databases

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### SQL

- [MySQL](databases/mysql.sh)

#### NoSQL

- [Redis](databases/redis.sh)
  &lt;/details&gt;

### 🔧 Tools

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### Development

- [cURL](tools/curl.sh)
- [Drush](tools/drush.sh)
- [Elasticsearch](tools/elasticsearch.js)
- [Emmet](tools/emmet.md)
- [Git](tools/git.sh)
- [Puppeteer](tools/puppeteer.js)
- [Sublime Text](tools/sublime_text.md)
- [VIM](tools/vim.txt)
- [Visual Studio Code](tools/vscode.md)
- [Xcode](tools/xcode.txt)

#### Infrastructure

- [AWS CLI](tools/aws.sh)
- [Docker](tools/docker.sh)
- [Heroku CLI](tools/heroku.sh)
- [Kubernetes](tools/kubernetes.md)
- [Nanobox Boxfile](tools/nanobox_boxfile.yml)
- [Nanobox CLI](tools/nanobox_cli.sh)
- [Nginx](tools/nginx.sh)
- [PM2](tools/pm2.sh)
- [Ubuntu](tools/ubuntu.sh)
- [Firebase CLI](tools/firebase_cli.md)
  &lt;/details&gt;

## 🙌🏼 How to Contribute?

You are more than welcome to contribute and build your own cheat sheet for your favorite programming language, framework or development tool. Just submit changes via pull request and I will review them before merging.

## 👩‍💻👨‍💻 Our valuable Contributors

&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/LeCoupa/awesome-cheatsheets/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contributors-img.web.app/image?repo=LeCoupa/awesome-cheatsheets&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[gorhill/uBlock]]></title>
            <link>https://github.com/gorhill/uBlock</link>
            <guid>https://github.com/gorhill/uBlock</guid>
            <pubDate>Tue, 21 Oct 2025 00:04:51 GMT</pubDate>
            <description><![CDATA[uBlock Origin - An efficient blocker for Chromium and Firefox. Fast and lean.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/gorhill/uBlock">gorhill/uBlock</a></h1>
            <p>uBlock Origin - An efficient blocker for Chromium and Firefox. Fast and lean.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 59,225</p>
            <p>Forks: 3,767</p>
            <p>Stars today: 21 stars today</p>
            <h2>README</h2><pre>[![Badge Commits]][Commit Rate]
[![Badge Issues]][Issues]
[![Badge Localization]][Crowdin]
[![Badge License]][License]
[![Badge NPM]][NPM]
[![Badge Mozilla]][Mozilla]
[![Badge Chrome]][Chrome]
[![Badge Edge]][Edge]

***

&lt;h1 align=&quot;center&quot;&gt;
&lt;sub&gt;
&lt;img src=&quot;https://github.com/gorhill/uBlock/blob/master/src/img/ublock.svg&quot; height=&quot;38&quot; width=&quot;38&quot;&gt;
&lt;/sub&gt;
uBlock Origin (uBO)
&lt;/h1&gt;

| Browser   | Install from ... | Status |
| :-------: | ---------------- | ------ |
| &lt;img src=&quot;https://github.com/user-attachments/assets/b0136512-56a5-4856-8c50-4971c957a24f&quot; alt=&quot;Get uBlock Origin for Firefox&quot;&gt; | &lt;a href=&quot;https://addons.mozilla.org/addon/ublock-origin/&quot;&gt;Firefox Add-ons&lt;/a&gt; | [uBO works best on Firefox](https://github.com/gorhill/uBlock/wiki/uBlock-Origin-works-best-on-Firefox) |
| &lt;img src=&quot;https://github.com/user-attachments/assets/3a7569f8-688b-4eb1-a643-8d0fe173aefe&quot; alt=&quot;Get uBlock Origin for Microsoft Edge&quot;&gt; | &lt;a href=&quot;https://microsoftedge.microsoft.com/addons/detail/ublock-origin/odfafepnkmbhccpbejgmiehpchacaeak&quot;&gt;Edge Add-ons&lt;/a&gt; |
| &lt;img src=&quot;https://github.com/user-attachments/assets/938f080c-fe64-4e48-8b89-4bfceabb56e6&quot; alt=&quot;Get uBlock Origin for Opera&quot;&gt; | &lt;a href=&quot;https://addons.opera.com/extensions/details/ublock/&quot;&gt;Opera Add-ons&lt;/a&gt; |
| &lt;img src=&quot;https://github.com/user-attachments/assets/5463ef88-873b-4516-8514-5277664cfde7&quot; alt=&quot;Get uBlock Origin for Chromium&quot;&gt; | &lt;a href=&quot;https://chromewebstore.google.com/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm&quot;&gt;Chrome Web Store&lt;/a&gt; | &lt;a href=&quot;https://github.com/uBlockOrigin/uBlock-issues/wiki/About-Google-Chrome&#039;s-%22This-extension-may-soon-no-longer-be-supported%22&quot;&gt;About Google Chrome&#039;s &quot;This extension may soon no longer be supported&quot;&lt;/a&gt;&lt;br&gt;End of support on Chrome 139 |
| &lt;img src=&quot;https://github.com/user-attachments/assets/2e9037c4-836d-44c1-a716-ba96e89daaff&quot; alt=&quot;Get uBlock Origin for Thunderbird&quot;&gt; | &lt;a href=&quot;https://addons.thunderbird.net/thunderbird/addon/ublock-origin/&quot;&gt;Thunderbird Add-ons&lt;/a&gt; | [No longer updated and stuck at 1.49.2.](https://github.com/uBlockOrigin/uBlock-issues/issues/2928) Later versions require &quot;GitHub - Releases&quot;. |
| &lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/c/c2/GitHub_Invertocat_Logo.svg&quot; height=&quot;50&quot; alt=&quot;Get uBlock Origin through GitHub&quot;&gt; | &lt;a href=&quot;https://github.com/gorhill/uBlock/releases&quot;&gt;GitHub - Releases&lt;/a&gt; | Stable and development versions on Firefox, Chromium MV2, and Thunderbird. Must be placed manually into web browsers; the Chromium and Thunderbird versions usually won&#039;t auto-update.

***

uBlock Origin (uBO) is a CPU and memory-efficient [wide-spectrum content blocker][Blocking] for Chromium and Firefox. It blocks ads, trackers, coin miners, popups, annoying anti-blockers, malware sites, etc., by default using [EasyList][EasyList], [EasyPrivacy][EasyPrivacy], [Peter Lowe&#039;s Blocklist][Peter Lowe&#039;s Blocklist], [Online Malicious URL Blocklist][Malicious Blocklist], and uBO [filter lists][uBO Filters]. There are many other lists available to block even more. Hosts files are also supported. uBO uses the EasyList filter syntax and [extends][Extended Syntax] the syntax to work with custom rules and filters.

You may easily unselect any preselected filter lists if you think uBO blocks too much. For reference, Adblock Plus installs with only EasyList, ABP filters, and Acceptable Ads enabled by default.

It is important to note that using a blocker is **NOT** [theft]. Do not fall for this creepy idea. The _ultimate_ logical consequence of `blocking = theft` is the criminalization of the inalienable right to privacy.

Ads, &quot;unintrusive&quot; or not, are just the visible portion of the privacy-invading means entering your browser when you visit most sites. **uBO&#039;s primary goal is to help users neutralize these privacy-invading methods** in a way that welcomes those users who do not wish to use more technical means.

***

* [Documentation](#documentation)
* [Installation](#installation)
  * [Firefox](#firefox)
  * [Thunderbird](#thunderbird)
  * [Chromium](#chromium)
  * [All Programs](#all-programs)
  * [Enterprise Deployment](#enterprise-deployment)
* [Release History](#release-history)
* [Translations](#translations)
* [About](#about)

## Documentation

&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;Basic Mode&lt;/th&gt;
            &lt;th&gt;Advanced Mode&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;The &lt;a href=&quot;https://github.com/gorhill/uBlock/wiki/Quick-guide:-popup-user-interface&quot;&gt;simple popup user interface&lt;/a&gt; for an install-it-and-forget-it type of installation that is configured optimally by default.&lt;/td&gt;
            &lt;td&gt;The &lt;a href=&quot;https://github.com/gorhill/uBlock/wiki/Dynamic-filtering:-quick-guide&quot;&gt;advanced popup user interface&lt;/a&gt; includes a point-and-click firewall that is configurable on a per-site basis.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td align=&quot;center&quot; valign=&quot;top&quot;&gt;&lt;a href=&quot;https://github.com/gorhill/uBlock/wiki/Quick-guide:-popup-user-interface&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/585534/232531044-c4ac4dd5-0b60-4c1e-aabb-914be04b846c.png&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
            &lt;td align=&quot;center&quot; valign=&quot;top&quot;&gt;&lt;a href=&quot;https://github.com/gorhill/uBlock/wiki/Dynamic-filtering:-quick-guide&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/585534/232531439-a8f81cc3-6622-45c4-8b32-7348cecf6e98.png&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

Visit the [Wiki][Wiki] for documentation.

For support, questions, or help, visit [/r/uBlockOrigin][Reddit].

## Installation

[Required Permissions][Permissions]

#### Firefox

[Firefox Add-ons][Mozilla]

[Development Builds][Beta]

uBO [works best][Works Best] on Firefox and is available for desktop and Android versions.

#### Thunderbird

[Thunderbird Add-ons][Thunderbird]

In Thunderbird, uBlock Origin does not affect emails, just feeds.

#### Chromium

[Chrome Web Store][Chrome]

[Microsoft Edge Add-ons][Edge] (Published by [Nicole Rolls][Nicole Rolls] until version 1.62. Ownership transfer at version 1.64.)

[Opera Add-ons][Opera]

[Development Builds][Chrome Dev]

uBO should be compatible with any Chromium-based browser.

#### All Programs

Do **NOT** use uBO with any other content blocker. uBO [performs][Performance] as well as or better than most popular blockers. Other blockers can prevent uBO&#039;s privacy or anti-blocker-defusing features from working correctly.

[Manual Installation][Manual Installation]

#### Enterprise Deployment

[Deploying uBO][Deployment]

## Release History

[Releases Page][Releases]

## Translations

Help translate uBO via [Crowdin][Crowdin].

## About

[Manifesto][Manifesto]

[Privacy Policy][Privacy Policy]

[GPLv3 License][License]

Free. Open-source. For users by users. No donations sought.

If you ever want to contribute something, think about the people working hard to maintain the filter lists you are using, which are available to use by all for free.


&lt;!-----------------------------------------------------------------------------&gt;

[Peter Lowe&#039;s Blocklist]: https://pgl.yoyo.org/adservers/
[Malicious Blocklist]: https://gitlab.com/malware-filter/urlhaus-filter#malicious-url-blocklist
[Performance]: https://www.debugbear.com/blog/chrome-extensions-website-performance#the-impact-of-ad-blocking-on-website-performance
[EasyPrivacy]: https://easylist.to/#easyprivacy
[Thunderbird]: https://addons.thunderbird.net/thunderbird/addon/ublock-origin/
[Chrome Dev]: https://chromewebstore.google.com/detail/ublock-origin-development/cgbcahbpdhpcegmbfconppldiemgcoii
[EasyList]: https://easylist.to/#easylist
[Mozilla]: https://addons.mozilla.org/addon/ublock-origin/
[Crowdin]: https://crowdin.com/project/ublock
[Chrome]: https://chromewebstore.google.com/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm
[Reddit]: https://www.reddit.com/r/uBlockOrigin/
[Theft]: https://x.com/LeaVerou/status/518154828166725632
[Opera]: https://addons.opera.com/extensions/details/ublock/
[Edge]: https://microsoftedge.microsoft.com/addons/detail/ublock-origin/odfafepnkmbhccpbejgmiehpchacaeak
[NPM]: https://www.npmjs.com/package/@gorhill/ubo-core

[Manifesto]: MANIFESTO.md
[License]: LICENSE.txt

[Nicole Rolls]: https://github.com/nicole-ashley

&lt;!---------------------------------[ Internal ]--------------------------------&gt;

[Manual Installation]: https://github.com/gorhill/uBlock/tree/master/dist#install
[Extended Syntax]: https://github.com/gorhill/uBlock/wiki/Static-filter-syntax#extended-syntax
[Privacy Policy]: https://github.com/gorhill/uBlock/wiki/Privacy-policy
[uBO Filters]: https://github.com/uBlockOrigin/uAssets/tree/master/filters
[Permissions]: https://github.com/gorhill/uBlock/wiki/Permissions
[Commit Rate]: https://github.com/gorhill/uBlock/commits/master
[Works Best]: https://github.com/gorhill/uBlock/wiki/uBlock-Origin-works-best-on-Firefox
[Deployment]: https://github.com/gorhill/uBlock/wiki/Deploying-uBlock-Origin
[Blocking]: https://github.com/gorhill/uBlock/wiki/Blocking-mode
[Releases]: https://github.com/gorhill/uBlock/releases
[Issues]: https://github.com/uBlockOrigin/uBlock-issues/issues
[Beta]: https://github.com/gorhill/uBlock/blob/master/dist/README.md#for-beta-version
[Wiki]: https://github.com/gorhill/uBlock/wiki

&lt;!----------------------------------[ Badges ]---------------------------------&gt;

[Badge Localization]: https://d322cqt584bo4o.cloudfront.net/ublock/localized.svg
[Badge Commits]: https://img.shields.io/github/commit-activity/m/gorhill/ublock?label=Commits
[Badge Mozilla]: https://img.shields.io/amo/rating/ublock-origin?label=Firefox
[Badge License]: https://img.shields.io/badge/License-GPLv3-blue.svg
[Badge Chrome]: https://img.shields.io/chrome-web-store/rating/cjpalhdlnbpafiamejdnhcphjbkeiagm?label=Chrome
[Badge Edge]: https://img.shields.io/badge/dynamic/json?label=Edge&amp;color=brightgreen&amp;query=%24.averageRating&amp;suffix=%2F%35&amp;url=https%3A%2F%2Fmicrosoftedge.microsoft.com%2Faddons%2Fgetproductdetailsbycrxid%2Fodfafepnkmbhccpbejgmiehpchacaeak
[Badge Issues]: https://img.shields.io/github/issues/uBlockOrigin/uBlock-issues
[Badge NPM]: https://img.shields.io/npm/v/@gorhill/ubo-core
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[Gar-b-age/CookLikeHOC]]></title>
            <link>https://github.com/Gar-b-age/CookLikeHOC</link>
            <guid>https://github.com/Gar-b-age/CookLikeHOC</guid>
            <pubDate>Tue, 21 Oct 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[🥢像老乡鸡🐔那样做饭。主要部分于2024年完工，非老乡鸡官方仓库。文字来自《老乡鸡菜品溯源报告》，并做归纳、编辑与整理。CookLikeHOC.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Gar-b-age/CookLikeHOC">Gar-b-age/CookLikeHOC</a></h1>
            <p>🥢像老乡鸡🐔那样做饭。主要部分于2024年完工，非老乡鸡官方仓库。文字来自《老乡鸡菜品溯源报告》，并做归纳、编辑与整理。CookLikeHOC.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 21,468</p>
            <p>Forks: 2,133</p>
            <p>Stars today: 101 stars today</p>
            <h2>README</h2><pre>![pic](/banner.png)

&lt;div align=&quot;center&quot;&gt;

[**Docker Support**](./docker_support/README.md) | [**Development**](./docs/development.md)

&lt;/div&gt;

# 像老乡鸡那样做饭

[**一些说明**](https://github.com/Gar-b-age/CookLikeHOC/issues/26)

仓库主体部分于2024年完工，和2025年9月份的舆论事件无关。截止提交时，仓库的贡献者们与老乡鸡的唯一关系只有消费者和商家的关系。本仓库不是老乡鸡的官方仓库。如果有任何问题或意见建议，欢迎指出

## 新更新

- 欢迎大家来贡献实拍图

- 现已上线网页端，[点击访问](https://cooklikehoc.soilzhu.su)

- Run with Docker? Check it out [here](https://github.com/Gar-b-age/CookLikeHOC/tree/main/docker_support), supported by [@honestAnt](https://github.com/honestAnt) in [PR #141](https://github.com/Gar-b-age/CookLikeHOC/pull/141)

- AI 绘制的手绘图版及AI配图流程版网页： [点击访问](https://ai.cooklikehoc.soilzhu.su), 手绘图由 [@liucongg](https://github.com/liucongg) 贡献，见 [PR #143](https://github.com/Gar-b-age/CookLikeHOC/pull/143)

---

[![link](/tg.png)](https://t.me/cooklikehoc)

《老乡鸡菜品溯源报告》中公布的所有菜品已经全部录入完，欢迎大家查阅和补充。

文字超大段copy自[《老乡鸡菜品溯源报告》](https://www.lxjchina.com.cn/display.asp?id=4226)，有编辑与整理

指路隔壁 [How To Cook](https://cook.aiursoft.cn/)

至于为什么仓库名要叫CookLikeHOC，因为直接写Laoxiangji大概不方便阅读，而Home Original Chicken是china daily报道中所使用的老乡鸡的英文名，故简写成HOC。


## Contributor

![cr](https://contrib.rocks/image?repo=Gar-b-age/CookLikeHOC)

## Logo
![pic](/logo.png) 

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=Gar-b-age/CookLikeHOC&amp;type=Date)](https://star-history.com/#Gar-b-age/CookLikeHOC&amp;Date)</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[jellyfin/jellyfin-web]]></title>
            <link>https://github.com/jellyfin/jellyfin-web</link>
            <guid>https://github.com/jellyfin/jellyfin-web</guid>
            <pubDate>Tue, 21 Oct 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[The Free Software Media System - Official Web Client]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/jellyfin/jellyfin-web">jellyfin/jellyfin-web</a></h1>
            <p>The Free Software Media System - Official Web Client</p>
            <p>Language: JavaScript</p>
            <p>Stars: 3,074</p>
            <p>Forks: 1,649</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;Jellyfin Web&lt;/h1&gt;
&lt;h3 align=&quot;center&quot;&gt;Part of the &lt;a href=&quot;https://jellyfin.org&quot;&gt;Jellyfin Project&lt;/a&gt;&lt;/h3&gt;

---

&lt;p align=&quot;center&quot;&gt;
&lt;img alt=&quot;Logo Banner&quot; src=&quot;https://raw.githubusercontent.com/jellyfin/jellyfin-ux/master/branding/SVG/banner-logo-solid.svg?sanitize=true&quot;/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://github.com/jellyfin/jellyfin-web&quot;&gt;
&lt;img alt=&quot;GPL 2.0 License&quot; src=&quot;https://img.shields.io/github/license/jellyfin/jellyfin-web.svg&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/jellyfin/jellyfin-web/releases&quot;&gt;
&lt;img alt=&quot;Current Release&quot; src=&quot;https://img.shields.io/github/release/jellyfin/jellyfin-web.svg&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://translate.jellyfin.org/projects/jellyfin/jellyfin-web/?utm_source=widget&quot;&gt;
&lt;img src=&quot;https://translate.jellyfin.org/widgets/jellyfin/-/jellyfin-web/svg-badge.svg&quot; alt=&quot;Translation Status&quot;/&gt;
&lt;/a&gt;
&lt;br/&gt;
&lt;a href=&quot;https://opencollective.com/jellyfin&quot;&gt;
&lt;img alt=&quot;Donate&quot; src=&quot;https://img.shields.io/opencollective/all/jellyfin.svg?label=backers&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://features.jellyfin.org&quot;&gt;
&lt;img alt=&quot;Feature Requests&quot; src=&quot;https://img.shields.io/badge/fider-vote%20on%20features-success.svg&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://matrix.to/#/+jellyfin:matrix.org&quot;&gt;
&lt;img alt=&quot;Chat on Matrix&quot; src=&quot;https://img.shields.io/matrix/jellyfin:matrix.org.svg?logo=matrix&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://www.reddit.com/r/jellyfin&quot;&gt;
&lt;img alt=&quot;Join our Subreddit&quot; src=&quot;https://img.shields.io/badge/reddit-r%2Fjellyfin-%23FF5700.svg&quot;/&gt;
&lt;/a&gt;
&lt;/p&gt;

Jellyfin Web is the frontend used for most of the clients available for end users, such as desktop browsers, Android, and iOS. We welcome all contributions and pull requests! If you have a larger feature in mind please open an issue so we can discuss the implementation before you start. Translations can be improved very easily from our &lt;a href=&quot;https://translate.jellyfin.org/projects/jellyfin/jellyfin-web&quot;&gt;Weblate&lt;/a&gt; instance. Look through the following graphic to see if your native language could use some work!

&lt;a href=&quot;https://translate.jellyfin.org/engage/jellyfin/?utm_source=widget&quot;&gt;
&lt;img src=&quot;https://translate.jellyfin.org/widgets/jellyfin/-/jellyfin-web/multi-auto.svg&quot; alt=&quot;Detailed Translation Status&quot;/&gt;
&lt;/a&gt;

## Build Process

### Dependencies

- [Node.js](https://nodejs.org/en/download)
- npm (included in Node.js)

### Getting Started

1. Clone or download this repository.

   ```sh
   git clone https://github.com/jellyfin/jellyfin-web.git
   cd jellyfin-web
   ```

2. Install build dependencies in the project directory.

   ```sh
   npm install
   ```

3. Run the web client with webpack for local development.

   ```sh
   npm start
   ```

4. Build the client with sourcemaps available.

   ```sh
   npm run build:development
   ```

## Directory Structure

&gt; [!NOTE]
&gt; We are in the process of refactoring to a [new structure](https://forum.jellyfin.org/t-proposed-update-to-the-structure-of-jellyfin-web) based on [Bulletproof React](https://github.com/alan2207/bulletproof-react/blob/master/docs/project-structure.md) architecture guidelines.
&gt; Most new code should be organized under the appropriate app directory unless it is common/shared.

```
.
└── src
    ├── apps
    │   ├── dashboard           # Admin dashboard app
    │   ├── experimental        # New experimental app
    │   ├── stable              # Classic (stable) app
    │   └── wizard              # Startup wizard app
    ├── assets                  # Static assets
    ├── components              # Higher order visual components and React components
    ├── constants               # Common constant values
    ├── controllers             # Legacy page views and controllers 🧹 ❌
    ├── elements                # Basic webcomponents and React equivalents 🧹
    ├── hooks                   # Custom React hooks
    ├── lib                     # Reusable libraries
    │   ├── globalize           # Custom localization library
    │   ├── jellyfin-apiclient  # Supporting code for the deprecated apiclient package
    │   ├── legacy              # Polyfills for legacy browsers
    │   ├── navdrawer           # Navigation drawer library for classic layout
    │   └── scroller            # Content scrolling library
    ├── plugins                 # Client plugins (features dynamically loaded at runtime)
    ├── scripts                 # Random assortment of visual components and utilities 🐉 ❌
    ├── strings                 # Translation files (only commit changes to en-us.json)
    ├── styles                  # Common app Sass stylesheets
    ├── themes                  # Sass and MUI themes
    ├── types                   # Common TypeScript interfaces/types
    └── utils                   # Utility functions
```

- ❌ &amp;mdash; Deprecated, do **not** create new files here
- 🧹 &amp;mdash; Needs cleanup
- 🐉 &amp;mdash; Serious mess (Here be dragons)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[hiteshchoudhary/apihub]]></title>
            <link>https://github.com/hiteshchoudhary/apihub</link>
            <guid>https://github.com/hiteshchoudhary/apihub</guid>
            <pubDate>Tue, 21 Oct 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[Your own API Hub to learn and master API interaction. Ideal for frontend, mobile dev and backend developers.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/hiteshchoudhary/apihub">hiteshchoudhary/apihub</a></h1>
            <p>Your own API Hub to learn and master API interaction. Ideal for frontend, mobile dev and backend developers.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,471</p>
            <p>Forks: 1,353</p>
            <p>Stars today: 1 star today</p>
            <h2>README</h2><pre># FreeAPI.app

## Problem

We are trying to build a single source API hub that can be used to learn api handling in any programming language. Users can build their front end portfolio in web and mobile apps using this api hub.

# What is FreeAPI.app

The FreeAPI project is an innovative and community-driven initiative aimed at providing developers with free and accessible APIs for their projects.

The project focuses on delivering a wide range of APIs that cater to various domains and functionalities, enabling developers to seamlessly integrate these APIs into their applications.

Key highlights of the FreeAPI project include:

1. **Accessibility:** The FreeAPI project is committed to eliminating barriers by providing free access to its collection of APIs.
   Developers can leverage these APIs without any cost limitations, allowing them to experiment, learn, and build innovative applications.

2. **Diverse API Collection:** The project offers a diverse and comprehensive collection of APIs that span across different industries, domains, and functionalities.
   Whether you require social media integrations, payment gateways, machine learning algorithms, or IoT device connectivity, the FreeAPI project has you covered.

3. **Simplified Integration:** The FreeAPI project understands the challenges developers face when integrating APIs into their applications. To address this, the project provides clear documentation, code samples, and SDKs, simplifying the integration process and reducing development time and effort.

4. **Community-Driven Development:** The project fosters a vibrant and collaborative community of developers. Contributors are encouraged to share their knowledge, engage in discussions, and collaborate on API-related projects. This collective effort ensures the continuous improvement and reliability of the APIs offered by the FreeAPI project.

5. **Learning and Skill Development:** The FreeAPI project aims to empower developers by providing a platform for learning and skill development. Through access to various APIs and educational resources, developers can enhance their understanding of API integration, expand their knowledge, and showcase their expertise through building complete projects.

Overall, the FreeAPI project is a valuable resource for developers seeking accessible and diverse APIs.

By fostering a supportive community, the project empowers developers to learn, create, and innovate, ultimately contributing to the growth and advancement of the API integration landscape.

## Features:

Introducing our groundbreaking open source API hub project, a dynamic platform designed to revolutionize the way developers interact with APIs.

With an emphasis on openness, accessibility, and learning, our API hub empowers developers of all levels to explore, experiment, and grow their skills in API integration.

Highlights:

1. **Open Source:** Our API hub is built on the principles of open source, ensuring transparency, collaboration, and community-driven development. This means that the source code is freely available, allowing developers to customize, extend, and contribute to the project.

2. **Free to Use:** We firmly believe in removing barriers to entry, which is why our API hub is completely free to use. Whether you&#039;re a seasoned developer or just starting your coding journey, you can leverage our platform without any cost limitations.

3. **Local or Deployment**: Flexibility is at the core of our API hub. You have the option to use it locally, running on your own machine, or deploy it to a server, making it accessible to others. This versatility ensures that you can adapt the platform to your specific development environment.

4. **Learning Resource**: Our API hub is designed as a comprehensive learning resource, offering a wealth of educational materials, tutorials, and documentation. Whether you&#039;re a beginner or seeking to expand your API knowledge, our platform provides the resources you need to learn and improve.

5. **Custom Endpoints for Beginners**: For developers at the beginner level, our API hub offers custom endpoints that provide a hands-on experience in handling API responses. These beginner-friendly APIs allow you to practice and familiarize yourself with the basics of working with APIs.

6. **Advanced APIs for Portfolio Building**: In addition to beginner-level endpoints, our API hub also provides advanced APIs to challenge and stretch your skills. These APIs enable you to tackle more complex integration scenarios, helping you build a robust portfolio of projects to showcase your expertise.

By combining open source principles, accessibility, and a focus on learning, our API hub project paves the way for developers to thrive in the world of API integration. Join our vibrant community and embark on an exciting journey of discovery, growth, and innovation.

# ⚠️ Important Note: Avoiding Data Loss and Self-Hosting

# Background:

Our open-source project is currently hosted on a remote server, where we are forced to reset the entire server, **including the file system and MongoDB database**, every **2 hours** to avoid incurring additional costs.

This process results in the **deletion of all image/static files and a reset of the entire database on the server.**

## What does this mean for you?

**Data Loss:**
Any changes made during the 2-hour interval (on the remote server), including uploaded images and user data, will be lost and unrecoverable.

**Service Interruption:**
The server reset might disrupt your development and testing processes for a certain duration while the server is rebooting (for 1-2 minutes).

## Recommended Solutions:

**Local API Usage:**
For development and testing purposes, we strongly recommend using the API locally on your machine by **cloning the project**.

This ensures that your work is not affected by the server resets and allows you to maintain a stable development environment on your local machine.

**Self-Hosting on Railway _(recommended for personal projects)_:**
To self-host the FreeAPI.app application, you can take advantage of a pre-built template that is readily available.
[Click here for detailed docs](https://github.com/hiteshchoudhary/apihub/#-using-railway-one-click-deploy)

# 🏁 Installation

### 📦 Using Docker (recommended)

To run the FreeAPI project, follow these steps:

1. Install [Docker](https://www.docker.com/) on your machine.
2. Clone the project repository.
3. Navigate to the project directory.
4. Create `.env` file in the root folder and copy paste the content of `.env.sample`, and add necessary credentials.
5. Run the Docker Compose command:

```bash
docker-compose up --build --attach backend

# --build: Rebuild the image and run the containers
# --attach: only show logs of Node app container and not mongodb
```

6. Access the project APIs at the specified endpoints.

### 💻 Running locally

To run the FreeAPI project locally, follow these steps:

1. Install [Yarn](https://yarnpkg.com/), [NodeJs](https://www.nodejs.org/), [MongoDB](https://www.mongodb.com) and [MongoDB Compass (optional)](https://www.mongodb.com/products/compass) on your machine.
2. Clone the project repository.
3. Navigate to the project directory.
4. Create `.env` file in the root folder and copy paste the content of `.env.sample`, and add necessary credentials.
5. Install the packages:

```bash
yarn install
```

6. Run the project:

```bash
yarn start
```

7. Access the project APIs at the specified endpoints.

### 🚄 Using Railway (One-click Deploy)

To self-host the FreeAPI.app application, you can take advantage of a pre-built template that is readily available.

[![Deploy FreeAPI.app](https://railway.app/button.svg)](https://railway.app/template/B2f7Hq)

1. Click the button above to visit railway.app.

2. Click on the **Deploy Now** button.

3. (Optional) Sign in with GitHub to deploy.

4. Fill in the Repository details:

   - Specify the repo name (e.g., freeapi-app).
   - Checkmark for Public/Private repository.

5. For Environment variables, we have provided some default values in the `ENV` to reduce the burden, but some parameters are mandatory:

   - `PORT`: Do not change the value, let it be set to 8080 to view the swagger docs after deployment.
   - `MONGODB_URI`: Provide the MongoDB Atlas database URL. An example is prefilled for you, edit/update it to continue.
   - `NODE_ENV`: Default set to &#039;development&#039; to view the logs. You may choose to change it to &#039;production&#039; (make sure to add exact same word) to hide them.
   - `EXPRESS_SESSION_SECRET`: It is advised to change the default value to your own secret value.
   - `ACCESS_TOKEN_SECRET`: It is advised to change the default value to your own secret value.
   - `ACCESS_TOKEN_EXPIRY`: Set to 1 day as default.
   - `REFRESH_TOKEN_SECRET`: It is advised to change the default value to your own secret value.
   - `REFRESH_TOKEN_EXPIRY`: Set to 10 days as default.
   - `FREEAPI_HOST_URL`: Set it as generated railway url.

6. Once you fill in the required environment parameters, if you choose to add others such as PayPal, Google, and Razorpay, please proceed to mention your credentials in the form.

7. Click on the **Deploy** button to trigger the first build.
   - Monitor the server logs; if you come across any deployment problems, feel free to raise an issue for our team to look into.

Note: Once the application is deployed, please wait for 3-5 minutes for the swagger docs to be available.

# 🧪 Testing

To ensure reliability &amp; stability for our end users, we utilize Playwright, a powerful testing framework to automate testing across all endpoints.

### 💻 Run the Test Server

Make sure to add `MONGO_MEMORY_SERVER_PORT=10000` (mongodb port for e2e testing) in your `.env` file.

```bash
yarn start:test-server
```

### 🧪 Run Tests

```bash
yarn test:playwright
```

This will generate a Playwright report. To view this report run the following command

```bash
yarn playwright show-report
```

Make sure all the test cases are passed whenever you make any changes.

# How to contribute - Guidelines

## ⚡️ Contribute in core FreeAPI codebase:

We welcome your interest in contributing to our open source project!

To contribute to FreeAPI, please follow these steps:

1. Fork the repository.
2. Create a new branch for your feature or bug fix: `git checkout -b feat/your-feature-name` or `git checkout -b fix/your-bug-fix-name` and make your changes.
3. Run all the tests 🧪 before committing the changes and make sure all tests are passed.
4. After all tests are passed, commit your changes with a descriptive messages: `git commit -am &#039;add your commit message&#039;`
5. For more details on the commit format and other guidelines, please refer to the [Contributor Guidelines](./CONTRIBUTING.md).
6. Push your changes to your forked repository: `git push origin feat/your-feature-name`.
7. Submit a pull request to the main repository, explaining the changes you&#039;ve made and providing any necessary details.

Here&#039;s a guide on how you can effectively contribute to our API hub:

1. Pull Requests for Readme Updates: Please refrain from sending pull requests solely for updating the project&#039;s readme file. While we appreciate the importance of clear and concise documentation, we prefer to focus on substantial code contributions and feature enhancements.

2. Grammar Updates: Our team values effective communication, but we&#039;re not grammar sticklers. You don&#039;t need to send pull requests solely for grammar fixes or minor language improvements. Instead, concentrate on the core functionalities and features of the project.

3. Avoid Updating Existing Public APIs: To maintain stability and consistency, we discourage direct updates to existing public APIs within the API hub. These APIs have been thoroughly tested and approved. However, if you encounter any bugs or issues, we encourage you to open an issue on our project&#039;s issue tracker to notify us.

4. Build New Project APIs: We encourage you to explore your creativity and contribute by building complete project APIs. These APIs should provide comprehensive solutions that can assist developers in constructing complex projects to showcase their skills and abilities. Your contributions in this area will greatly benefit the community.

5. Draft a Proposal and Discuss on Discord: Before diving into your project, we recommend drafting a proposal. This can include a mind map or outline of the API you intend to build and its potential benefits. Join our Discord community, where you can share your proposal, discuss ideas, and gather feedback from fellow contributors. Engaging in these discussions will enhance your backend portfolio and help shape the future direction of the project.

We appreciate your enthusiasm and look forward to your valuable contributions to our open source API hub project.

Together, we can foster a collaborative environment and make a significant impact in the API integration landscape.

Click [here](https://github.com/hiteshchoudhary/apihub/blob/main/CONTRIBUTING.md) for detailed contribution guide.

## 🚀 Contribute by creating frontend application:

Thank you for your interest in contributing to the FreeAPI project by creating frontend applications consuming FreeAPIs! Your efforts play a crucial role in enhancing the user experience and expanding the reach of our APIs. Please follow this guide to ensure a smooth and collaborative contribution process.

Click [here](https://github.com/hiteshchoudhary/apihub/blob/main/CONTRIBUTING_FRONTEND.md) for detailed contribution guide for Frontend Developers 🚀!

## 🧪 Contribute in testing suite

Thank you for your interest in contributing to the FreeAPI project to increase code coverage of our API service that helps us to ship robust endpoints that are battlefield tested. Please follow this guide to ensure a smooth and collaborative contribution process.

Click [here](https://github.com/hiteshchoudhary/apihub/blob/main/CONTRIBUTING_CODE_COVERAGE.md) for detailed contribution guide for increasing code coverage.

# 📜 Swagger Docs

[Swagger Docs](https://api.freeapi.app): https://api.freeapi.app

NOTE: Swagger docs are auto generated from the `swagger.yaml` file. While running the project locally, make sure you change the url to `http://localhost:&lt;port_from_.env&gt;/api/v1` in the swagger docs `servers/url` field.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[louislam/uptime-kuma]]></title>
            <link>https://github.com/louislam/uptime-kuma</link>
            <guid>https://github.com/louislam/uptime-kuma</guid>
            <pubDate>Tue, 21 Oct 2025 00:04:47 GMT</pubDate>
            <description><![CDATA[A fancy self-hosted monitoring tool]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/louislam/uptime-kuma">louislam/uptime-kuma</a></h1>
            <p>A fancy self-hosted monitoring tool</p>
            <p>Language: JavaScript</p>
            <p>Stars: 76,236</p>
            <p>Forks: 6,761</p>
            <p>Stars today: 69 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot; width=&quot;100%&quot;&gt;
    &lt;img src=&quot;./public/icon.svg&quot; width=&quot;128&quot; alt=&quot;&quot; /&gt;
&lt;/div&gt;

# Uptime Kuma

Uptime Kuma is an easy-to-use self-hosted monitoring tool.

&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/louislam/uptime-kuma?style=flat&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/louislam/uptime-kuma&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/v/louislam/uptime-kuma/latest?label=docker%20image%20ver.&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/louislam/uptime-kuma&quot; /&gt;&lt;/a&gt;  &lt;a target=&quot;_blank&quot; href=&quot;https://opencollective.com/uptime-kuma&quot;&gt;&lt;img src=&quot;https://opencollective.com/uptime-kuma/total/badge.svg?label=Open%20Collective%20Backers&amp;color=brightgreen&quot; /&gt;&lt;/a&gt;
[![GitHub Sponsors](https://img.shields.io/github/sponsors/louislam?label=GitHub%20Sponsors)](https://github.com/sponsors/louislam) &lt;a href=&quot;https://weblate.kuma.pet/projects/uptime-kuma/uptime-kuma/&quot;&gt;
&lt;img src=&quot;https://weblate.kuma.pet/widgets/uptime-kuma/-/svg-badge.svg&quot; alt=&quot;Translation status&quot; /&gt;
&lt;/a&gt;

&lt;img src=&quot;https://user-images.githubusercontent.com/1336778/212262296-e6205815-ad62-488c-83ec-a5b0d0689f7c.jpg&quot; width=&quot;700&quot; alt=&quot;&quot; /&gt;

## 🥔 Live Demo

Try it!

Demo Server (Location: Frankfurt - Germany): &lt;https://demo.kuma.pet/start-demo&gt;

It is a temporary live demo, all data will be deleted after 10 minutes. Sponsored by [Uptime Kuma Sponsors](https://github.com/louislam/uptime-kuma#%EF%B8%8F-sponsors).

## ⭐ Features

- Monitoring uptime for HTTP(s) / TCP / HTTP(s) Keyword / HTTP(s) Json Query / Ping / DNS Record / Push / Steam Game Server / Docker Containers
- Fancy, Reactive, Fast UI/UX
- Notifications via Telegram, Discord, Gotify, Slack, Pushover, Email (SMTP), and [90+ notification services, click here for the full list](https://github.com/louislam/uptime-kuma/tree/master/src/components/notifications)
- 20-second intervals
- [Multi Languages](https://github.com/louislam/uptime-kuma/tree/master/src/lang)
- Multiple status pages
- Map status pages to specific domains
- Ping chart
- Certificate info
- Proxy support
- 2FA support

## 🔧 How to Install

### 🐳 Docker Compose

```bash
mkdir uptime-kuma
cd uptime-kuma
curl -o compose.yaml https://raw.githubusercontent.com/louislam/uptime-kuma/master/compose.yaml
docker compose up -d
```

Uptime Kuma is now running on &lt;http://0.0.0.0:3001&gt;.

&gt; [!WARNING]
&gt; File Systems like **NFS** (Network File System) are **NOT** supported. Please map to a local directory or volume.

### 🐳 Docker Command

```bash
docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:2
```

Uptime Kuma is now running on &lt;http://0.0.0.0:3001&gt;.

&gt; [!NOTE]
&gt; If you want to limit exposure to localhost (without exposing port for other users or to use a [reverse proxy](https://github.com/louislam/uptime-kuma/wiki/Reverse-Proxy)), you can expose the port like this:
&gt;
&gt; ```bash
&gt; docker run -d --restart=always -p 127.0.0.1:3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:2
&gt; ```

### 💪🏻 Non-Docker

Requirements:

- Platform
  - ✅ Major Linux distros such as Debian, Ubuntu, CentOS, Fedora and ArchLinux etc.
  - ✅ Windows 10 (x64), Windows Server 2012 R2 (x64) or higher
  - ❌ FreeBSD / OpenBSD / NetBSD
  - ❌ Replit / Heroku
- [Node.js](https://nodejs.org/en/download/) &gt;= 20.4
- [Git](https://git-scm.com/downloads)
- [pm2](https://pm2.keymetrics.io/) - For running Uptime Kuma in the background

```bash
git clone https://github.com/louislam/uptime-kuma.git
cd uptime-kuma
npm run setup

# Option 1. Try it
node server/server.js

# (Recommended) Option 2. Run in the background using PM2
# Install PM2 if you don&#039;t have it:
npm install pm2 -g &amp;&amp; pm2 install pm2-logrotate

# Start Server
pm2 start server/server.js --name uptime-kuma
```

Uptime Kuma is now running on &lt;http://localhost:3001&gt;

More useful PM2 Commands

```bash
# If you want to see the current console output
pm2 monit

# If you want to add it to startup
pm2 startup &amp;&amp; pm2 save
```

### Advanced Installation

If you need more options or need to browse via a reverse proxy, please read:

&lt;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install&gt;

## 🆙 How to Update

Please read:

&lt;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update&gt;

## 🆕 What&#039;s Next?

I will assign requests/issues to the next milestone.

&lt;https://github.com/louislam/uptime-kuma/milestones&gt;

## ❤️ Sponsors

Thank you so much! (GitHub Sponsors will be updated manually. OpenCollective sponsors will be updated automatically, the list will be cached by GitHub though. It may need some time to be updated)

&lt;img src=&quot;https://uptime.kuma.pet/sponsors?v=6&quot; alt /&gt;

## 🖼 More Screenshots

Light Mode:

&lt;img src=&quot;https://uptime.kuma.pet/img/light.jpg&quot; width=&quot;512&quot; alt=&quot;&quot; /&gt;

Status Page:

&lt;img src=&quot;https://user-images.githubusercontent.com/1336778/134628766-a3fe0981-0926-4285-ab46-891a21c3e4cb.png&quot; width=&quot;512&quot; alt=&quot;&quot; /&gt;

Settings Page:

&lt;img src=&quot;https://louislam.net/uptimekuma/2.jpg&quot; width=&quot;400&quot; alt=&quot;&quot; /&gt;

Telegram Notification Sample:

&lt;img src=&quot;https://louislam.net/uptimekuma/3.jpg&quot; width=&quot;400&quot; alt=&quot;&quot; /&gt;

## Motivation

- I was looking for a self-hosted monitoring tool like &quot;Uptime Robot&quot;, but it is hard to find a suitable one. One of the closest ones is statping. Unfortunately, it is not stable and no longer maintained.
- Wanted to build a fancy UI.
- Learn Vue 3 and vite.js.
- Show the power of Bootstrap 5.
- Try to use WebSocket with SPA instead of a REST API.
- Deploy my first Docker image to Docker Hub.

If you love this project, please consider giving it a ⭐.

## 🗣️ Discussion / Ask for Help

⚠️ For any general or technical questions, please don&#039;t send me an email, as I am unable to provide support in that manner. I will not respond if you ask questions there.

I recommend using Google, GitHub Issues, or Uptime Kuma&#039;s subreddit for finding answers to your question. If you cannot find the information you need, feel free to ask:

- [GitHub Issues](https://github.com/louislam/uptime-kuma/issues)
- [Subreddit (r/UptimeKuma)](https://www.reddit.com/r/UptimeKuma/)

My Reddit account: [u/louislamlam](https://reddit.com/u/louislamlam)
You can mention me if you ask a question on the subreddit.

## Contributions

### Create Pull Requests

We DO NOT accept all types of pull requests and do not want to waste your time. Please be sure that you have read and follow pull request rules:
[CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma](https://github.com/louislam/uptime-kuma/blob/master/CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma)

### Test Pull Requests

There are a lot of pull requests right now, but I don&#039;t have time to test them all.

If you want to help, you can check this:
&lt;https://github.com/louislam/uptime-kuma/wiki/Test-Pull-Requests&gt;

### Test Beta Version

Check out the latest beta release here: &lt;https://github.com/louislam/uptime-kuma/releases&gt;

### Bug Reports / Feature Requests

If you want to report a bug or request a new feature, feel free to open a [new issue](https://github.com/louislam/uptime-kuma/issues).

### Translations

If you want to translate Uptime Kuma into your language, please visit [Weblate Readme](https://github.com/louislam/uptime-kuma/blob/master/src/lang/README.md).

### Spelling &amp; Grammar

Feel free to correct the grammar in the documentation or code.
My mother language is not English and my grammar is not that great.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[violentmonkey/violentmonkey]]></title>
            <link>https://github.com/violentmonkey/violentmonkey</link>
            <guid>https://github.com/violentmonkey/violentmonkey</guid>
            <pubDate>Tue, 21 Oct 2025 00:04:46 GMT</pubDate>
            <description><![CDATA[Violentmonkey provides userscripts support for browsers. It works on browsers with WebExtensions support.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/violentmonkey/violentmonkey">violentmonkey/violentmonkey</a></h1>
            <p>Violentmonkey provides userscripts support for browsers. It works on browsers with WebExtensions support.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 7,428</p>
            <p>Forks: 619</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre># Violentmonkey

[![Chrome Web Store](https://img.shields.io/chrome-web-store/v/jinjaccalgkegednnccohejagnlnfdag.svg)](https://chrome.google.com/webstore/detail/violentmonkey/jinjaccalgkegednnccohejagnlnfdag)
[![Firefox Add-ons](https://img.shields.io/amo/v/violentmonkey.svg)](https://addons.mozilla.org/firefox/addon/violentmonkey)
[![Microsoft Edge Add-on](https://img.shields.io/badge/dynamic/json?label=microsoft%20edge%20add-on&amp;query=%24.version&amp;url=https%3A%2F%2Fmicrosoftedge.microsoft.com%2Faddons%2Fgetproductdetailsbycrxid%2Feeagobfjdenkkddmbclomhiblgggliao)](https://microsoftedge.microsoft.com/addons/detail/eeagobfjdenkkddmbclomhiblgggliao)

Violentmonkey provides userscripts support for browsers.
It works on browsers with [WebExtensions](https://developer.mozilla.org/en-US/Add-ons/WebExtensions) support.

More details can be found [here](https://violentmonkey.github.io/).

Join our Discord server:

[![Discord](https://img.shields.io/discord/995346102003965952?label=discord&amp;logo=discord&amp;logoColor=white&amp;style=for-the-badge)](https://discord.gg/XHtUNSm6Xc)

## Automated Builds for Testers

A test build is generated automatically for changes between beta releases. It can be installed as an unpacked extension in Chrome and Chromium-based browsers or as a temporary extension in Firefox. It&#039;s likely to have bugs so do an export in Violentmonkey settings first. This zip is available only if you&#039;re logged-in on GitHub site. Open an entry in the [CI workflows](https://github.com/violentmonkey/violentmonkey/actions/workflows/ci.yml) table and click the `Violentmonkey-...` link at the bottom to download it.

## Workflows

### Development

Install [Node.js](https://nodejs.org/) and Yarn v1.x.
The version of Node.js should match `&quot;node&quot;` key in `package.json`.

``` sh
# Install dependencies
$ yarn

# Watch and compile
$ yarn dev
```

Then load the extension from &#039;dist/&#039;.

### Build

To release a new version, we must build the assets and upload them to web stores.

``` sh
# Build for normal releases
$ yarn build

# Build for self-hosted release that has an update_url
$ yarn build:selfHosted
```

### Release

See [RELEASE](RELEASE.md) for the release flow.

## Related Projects

- [Violentmonkey for Opera Presto](https://github.com/violentmonkey/violentmonkey-oex)
- [Violentmonkey for Maxthon](https://github.com/violentmonkey/violentmonkey-mx)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[is-a-dev/register]]></title>
            <link>https://github.com/is-a-dev/register</link>
            <guid>https://github.com/is-a-dev/register</guid>
            <pubDate>Tue, 21 Oct 2025 00:04:45 GMT</pubDate>
            <description><![CDATA[Grab your own sweet-looking '.is-a.dev' subdomain.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/is-a-dev/register">is-a-dev/register</a></h1>
            <p>Grab your own sweet-looking '.is-a.dev' subdomain.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,683</p>
            <p>Forks: 15,630</p>
            <p>Stars today: 47 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
   &lt;img alt=&quot;is-a.dev Banner&quot; src=&quot;https://raw.githubusercontent.com/is-a-dev/register/main/media/banner.png&quot;&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
   &lt;img alt=&quot;Domains&quot; src=&quot;https://img.shields.io/github/directory-file-count/is-a-dev/register/domains?color=5c46eb&amp;label=domains&amp;style=for-the-badge&quot;&gt;
   &lt;img alt=&quot;Open Pull Requests&quot; src=&quot;https://img.shields.io/github/issues-raw/is-a-dev/register?color=5c46eb&amp;label=issues&amp;style=for-the-badge&quot;&gt;
   &lt;img alt=&quot;Open Issues&quot; src=&quot;https://img.shields.io/github/issues-pr-raw/is-a-dev/register?color=5c46eb&amp;label=pull%20requests&amp;style=for-the-badge&quot;&gt;
   &lt;br&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;is-a.dev&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;&lt;strong&gt;is-a.dev&lt;/strong&gt; is a service that allows developers to get a sweet-looking &lt;code&gt;.is-a.dev&lt;/code&gt; subdomain for their personal websites.&lt;/p&gt;

## Announcements &amp; Status Updates
Please join our [Discord server](https://discord.gg/is-a-dev-830872854677422150) for announcements, updates &amp; upgrades, and downtime notifications regarding the service.
Not all of these will be posted on GitHub[^1], however they will always be posted in our Discord server.

[^1]: We only post announcements on GitHub in the case of a serious incident, which you&#039;ll see at the top of this README.

&lt;a href=&quot;https://discord.gg/is-a-dev-830872854677422150&quot;&gt;&lt;img alt=&quot;Discord Server&quot; src=&quot;https://invidget.api.hrsn.dev/is-a-dev-830872854677422150&quot;&gt;&lt;/a&gt;

# Register
&gt; If you want a visual guide, check out [this blog post](https://wdh.gg/tX3ghge).

- [Fork](https://github.com/is-a-dev/register/fork) this repository.
- [Read the documentation](https://docs.is-a.dev).
   - If you are applying for NS records please read [this](#ns-records).
- Your pull request will be reviewed and merged. *Keep an eye on it in case changes are needed!*
- After the pull request is merged, your DNS records should be published with-in a few minutes.
- Enjoy your new `.is-a.dev` subdomain! Please consider leaving us a star ⭐️ to help support us!

### NS Records
When applying for NS records, please be aware we already support a [wide range of DNS records](https://docs.is-a.dev/faq/#which-dns-record-types-are-supported), so you likely do not need them. 

In your PR, please explain why you need NS records, including examples, to help mitigate potential abuse. Refer to the [FAQ](https://docs.is-a.dev/faq/#who-can-use-ns-records) for guidelines on allowed usage.

***Pull requests adding NS records without sufficient reasoning will be closed.***

&gt; Also see: [Why are NS records restricted?](https://docs.is-a.dev/faq/#why-are-ns-records-restricted)

## Report Abuse
If you find any subdomains being used for abusive purposes, please report them by [creating an issue](https://github.com/is-a-dev/register/issues/new?assignees=&amp;labels=report-abuse&amp;projects=&amp;template=report-abuse.md&amp;title=Report+abuse) with the relevant evidence.

---

We are proud to announce that we are supported by Cloudflare&#039;s [Project Alexandria](https://www.cloudflare.com/lp/project-alexandria) sponsorship program. We would not be able to operate without their help! 💖

&lt;a href=&quot;https://www.cloudflare.com&quot;&gt;
   &lt;img alt=&quot;Cloudflare Logo&quot; src=&quot;https://raw.githubusercontent.com/is-a-dev/register/main/media/cloudflare.png&quot; height=&quot;96&quot;&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[fanmingming/live]]></title>
            <link>https://github.com/fanmingming/live</link>
            <guid>https://github.com/fanmingming/live</guid>
            <pubDate>Tue, 21 Oct 2025 00:04:44 GMT</pubDate>
            <description><![CDATA[✯ 可直连访问的电视/广播图标库与相关工具项目 ✯ 🔕 永久免费 直连访问 完整开源 不断完善的台标 支持IPv4/IPv6双栈访问 🔕]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/fanmingming/live">fanmingming/live</a></h1>
            <p>✯ 可直连访问的电视/广播图标库与相关工具项目 ✯ 🔕 永久免费 直连访问 完整开源 不断完善的台标 支持IPv4/IPv6双栈访问 🔕</p>
            <p>Language: JavaScript</p>
            <p>Stars: 26,717</p>
            <p>Forks: 4,012</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;&lt;img alt=&quot;live.fanmingming.com&quot; src=&quot;https://live.fanmingming.com/logo.png&quot;&gt;&lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt; ✯ 一个可直连访问的电视/广播图标库与相关工具项目 ✯ &lt;/h1&gt;
&lt;h3 align=&quot;center&quot;&gt;🔕 永久免费 直连访问 完整开源 不断完善的台标 支持IPv4/IPv6双栈访问 🔕&lt;/h3&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img alt=&quot;GitHub Repo stars&quot; src=&quot;https://img.shields.io/github/stars/fanmingming/live?style=flat-square&quot;&gt;
&lt;img alt=&quot;GitHub forks&quot; src=&quot;https://img.shields.io/github/forks/fanmingming/live?style=flat-square&quot;&gt;
&lt;img alt=&quot;GitHub issues&quot; src=&quot;https://img.shields.io/github/issues/fanmingming/live?style=flat-square&quot;&gt;
&lt;img alt=&quot;GitHub watchers&quot; src=&quot;https://img.shields.io/github/watchers/fanmingming/live?style=flat-square&quot;&gt;
&lt;img alt=&quot;GitHub contributors&quot; src=&quot;https://img.shields.io/github/contributors/fanmingming/live?style=flat-square&quot;&gt;
&lt;img alt=&quot;GitHub&quot; src=&quot;https://img.shields.io/github/license/fanmingming/live?style=flat-square&quot;&gt;
&lt;/p&gt;

---

## 🤹‍♂️使用方法:

### 🌇电视/广播图标库：

| 类 别  | 调用路径                                       | 最后更新   |
|-------|------------------------------------------------|------------|
| 📺电视  | [https://live.fanmingming.cn/tv/{name}.png](https://github.com/fanmingming/live/tree/main/tv) | 2025.04.01    |
| 📻广播  | [https://live.fanmingming.cn/radio/{name}.png](https://github.com/fanmingming/live/tree/main/radio) | 2024.8.29   |

### ⛓️创建您的m3u订阅链接：
 - 下载 `demo.m3u` 空白示例文件并使用文本编辑软件打开。
   - [https://live.fanmingming.cn/tv/m3u/demo.m3u](https://live.fanmingming.cn/tv/m3u/demo.m3u)

 - 参考下方示例代码将`可用的CCTV1节目源`替换为您当地可用的直播源链接，依此类推逐个替换。

```
#EXTM3U x-tvg-url=&quot;https://live.fanmingming.cn/e.xml&quot;
#EXTINF:-1 tvg-name=&quot;CCTV1&quot; tvg-logo=&quot;https://live.fanmingming.cn/tv/CCTV1.png&quot; group-title=&quot;央视&quot;,CCTV-1 综合
可用的CCTV1节目源
此处省略...
```

 - 将编辑完成的m3u文件上传到您的Github仓库。
 - 为您的Github仓库开启Pages。
 - 通过播放器订阅您的m3u链接。

&gt; 关于Github Pages：[https://docs.github.com/en/enterprise-cloud@latest/pages/quickstart](https://docs.github.com/en/enterprise-cloud@latest/pages/quickstart)

## 🛠️工具
- 📆**EPG接口地址**：
  -  [https://live.fanmingming.cn/e.xml](https://live.fanmingming.cn/e.xml)
- 🏞️**Bing每日图片**：
  -  [https://fanmingming.com/bing](https://fanmingming.com/bing)
- 🎞️**m3u8在线下载**：
  -  [https://live.fanmingming.cn/m3u8](https://live.fanmingming.cn/m3u8)
- 🆕**TXT转M3U格式**：
  - [https://live.fanmingming.cn/txt2m3u](https://live.fanmingming.cn/txt2m3u)
- 📄**在线M3U转TXT**：
  - Demo🔗 [https://fanmingming.com/txt?url=https://live.fanmingming.com/tv/m3u/ipv6.m3u](https://fanmingming.com/txt?url=https://live.fanmingming.cn/tv/m3u/ipv6.m3u)
- 🌐**M3U8 Web Player**:
  - Demo🔗 [https://live.fanmingming.cn/player/?vurl=https://0472.org/hls/cgtn.m3u8](https://live.fanmingming.cn/player/?vurl=https://0472.org/hls/cgtn.m3u8)

## 📖说明
- 项目EPG接口为112114.xyz站点分发，本项目无法确保其准确性。
- 通过M3U8 Web Player测试直播源需使用https协议的直播源链接。
- 在线M3U转TXT工具构建在Vercel，不会记录您的访问日志请放心使用。
- TXT转M3U工具为前端网页转换，无需上传文件，粘贴即转换，安全不偷源。
- 本项目不存储任何的流媒体内容，所有的法律责任与后果应由使用者自行承担。
- 项目`/tv/m3u/`和`/radio/m3u/`目录下的内容收集于互联网，仅供测试研究使用，本项目无法保证其有效性。
- 主域名【`live.fanmingming.com`】的WEB访问通过Github Pages自动构建，由CloudFlare提供CDN和安全防护。
- 镜像域名【`live.fanmingming.cn`】提供完整的资源WEB访问，通过Github Actions自动构建在CloudFlare Pages。
- 项目所有文件均托管在[GitHub](https://github.com/fanmingming/live)且自动构建，由项目发起人公益维护，欢迎Star本项目或点击[Issues](https://github.com/fanmingming/live/issues/new/choose)反馈您的问题。
- 您可以Frok本项目到您的Github账户，将缺失的频道Logo上传到`tv`或`radio`目录下并发起拉取请求，收到请求后我们会对您提交的内容进行验证，审核通过后会自动为您署名并发布。

## 📱联系
- Telegram: [@AirfoneBot](https://t.me/AirfoneBot)
  - 如遇资源访问问题请通过Telegram反馈。

## 📔更新
- 2025.04.01
  - 新增北京卫视4K台标。
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WhiskeySockets/Baileys]]></title>
            <link>https://github.com/WhiskeySockets/Baileys</link>
            <guid>https://github.com/WhiskeySockets/Baileys</guid>
            <pubDate>Tue, 21 Oct 2025 00:04:43 GMT</pubDate>
            <description><![CDATA[Socket-based TS/JavaScript API for WhatsApp Web]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WhiskeySockets/Baileys">WhiskeySockets/Baileys</a></h1>
            <p>Socket-based TS/JavaScript API for WhatsApp Web</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,901</p>
            <p>Forks: 2,356</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&#039;center&#039;&gt;&lt;img alt=&quot;Baileys logo&quot; src=&quot;https://raw.githubusercontent.com/WhiskeySockets/Baileys/refs/heads/master/Media/logo.png&quot; height=&quot;75&quot;/&gt;&lt;/h1&gt;

&lt;div align=&#039;center&#039;&gt;Baileys is a WebSockets-based TypeScript library for interacting with the WhatsApp Web API.&lt;/div&gt;


&gt; [!CAUTION]
&gt; NOTICE OF BREAKING CHANGE.
&gt; 
&gt; As of 7.0.0, multiple breaking changes were introduced into the library.
&gt; 
&gt; Please check out https://whiskey.so/migrate-latest for more information.

&gt; [!IMPORTANT]
&gt; I made a survey for users of the project to ask questions, and provide Baileys valuable insights regarding its users. I will be publishing the results of this form (after filtering) as well so we can study and understand where we need to work.
&gt; 
&gt; The survey is anonymous and requires no personal info at all. You are required to sign-in with Google to keep responses to one person. You are able to edit your response after you submit. The deadline for this form is September 30, 2025.
&gt; 
&gt; I encourage you to put the effort, all it takes is 5-10 minutes and you get to ask me any questions you have.
&gt; 
&gt; \- Rajeh (purpshell)
&gt; 
&gt; Fill in the survey via the link: https://whiskey.so/survey 


# Important Note
This is a temporary README.md, the new guide is in development and will this file will be replaced with .github/README.md (already a default on GitHub).

New guide link: https://baileys.wiki

# Sponsor
If you&#039;d like to financially support this project, you can do so by supporting the current maintainer [here](https://purpshell.dev/sponsor).

# Disclaimer
This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates.
The official WhatsApp website can be found at whatsapp.com. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners.

The maintainers of Baileys do not in any way condone the use of this application in practices that violate the Terms of Service of WhatsApp. The maintainers of this application call upon the personal responsibility of its users to use this application in a fair way, as it is intended to be used.
Use at your own discretion. Do not spam people with this. We discourage any stalkerware, bulk or automated messaging usage.

##

- Baileys does not require Selenium or any other browser to be interface with WhatsApp Web, it does so directly using a **WebSocket**. 
- Not running Selenium or Chromium saves you like **half a gig** of ram :/ 
- Baileys supports interacting with the multi-device &amp; web versions of WhatsApp.
- Thank you to [@pokearaujo](https://github.com/pokearaujo/multidevice) for writing his observations on the workings of WhatsApp Multi-Device. Also, thank you to [@Sigalor](https://github.com/sigalor/whatsapp-web-reveng) for writing his observations on the workings of WhatsApp Web and thanks to [@Rhymen](https://github.com/Rhymen/go-whatsapp/) for the __go__ implementation.

&gt; [!IMPORTANT]
&gt; The original repository had to be removed by the original author - we now continue development in this repository here.
This is the only official repository and is maintained by the community.
&gt; **Join the Discord [here](https://discord.gg/WeJM5FP9GG)**
 
## Example

Do check out &amp; run [example.ts](Example/example.ts) to see an example usage of the library.
The script covers most common use cases.
To run the example script, download or clone the repo and then type the following in a terminal:
1. ``` cd path/to/Baileys ```
2. ``` yarn ```
3. ``` yarn example ```

## Install

Use the stable version:
```
yarn add @whiskeysockets/baileys
```

Use the edge version (no guarantee of stability, but latest fixes + features)
```
yarn add github:WhiskeySockets/Baileys
```

Then import your code using:
```ts 
import makeWASocket from &#039;@whiskeysockets/baileys&#039;
```

# Links

- [Discord](https://discord.gg/WeJM5FP9GG)
- [Docs](https://guide.whiskeysockets.io/)

# Index

- [Connecting Account](#connecting-account)
    - [Connect with QR-CODE](#starting-socket-with-qr-code)
    - [Connect with Pairing Code](#starting-socket-with-pairing-code)
    - [Receive Full History](#receive-full-history)
- [Important Notes About Socket Config](#important-notes-about-socket-config)
    - [Caching Group Metadata (Recommended)](#caching-group-metadata-recommended)
    - [Improve Retry System &amp; Decrypt Poll Votes](#improve-retry-system--decrypt-poll-votes)
    - [Receive Notifications in Whatsapp App](#receive-notifications-in-whatsapp-app)

- [Save Auth Info](#saving--restoring-sessions)
- [Handling Events](#handling-events)
    - [Example to Start](#example-to-start)
    - [Decrypt Poll Votes](#decrypt-poll-votes)
    - [Summary of Events on First Connection](#summary-of-events-on-first-connection)
- [Implementing a Data Store](#implementing-a-data-store)
- [Whatsapp IDs Explain](#whatsapp-ids-explain)
- [Utility Functions](#utility-functions)
- [Sending Messages](#sending-messages)
    - [Non-Media Messages](#non-media-messages)
        - [Text Message](#text-message)
        - [Quote Message](#quote-message-works-with-all-types)
        - [Mention User](#mention-user-works-with-most-types)
        - [Forward Messages](#forward-messages)
        - [Location Message](#location-message)
        - [Contact Message](#contact-message)
        - [Reaction Message](#reaction-message)
        - [Pin Message](#pin-message)
        - [Poll Message](#poll-message)
    - [Sending with Link Preview](#sending-messages-with-link-previews)
    - [Media Messages](#media-messages)
        - [Gif Message](#gif-message)
        - [Video Message](#video-message)
        - [Audio Message](#audio-message)
        - [Image Message](#image-message)
        - [ViewOnce Message](#view-once-message)
- [Modify Messages](#modify-messages)
    - [Delete Messages (for everyone)](#deleting-messages-for-everyone)
    - [Edit Messages](#editing-messages)
- [Manipulating Media Messages](#manipulating-media-messages)
    - [Thumbnail in Media Messages](#thumbnail-in-media-messages)
    - [Downloading Media Messages](#downloading-media-messages)
    - [Re-upload Media Message to Whatsapp](#re-upload-media-message-to-whatsapp)
- [Reject Call](#reject-call)
- [Send States in Chat](#send-states-in-chat)
    - [Reading Messages](#reading-messages)
    - [Update Presence](#update-presence)
- [Modifying Chats](#modifying-chats)
    - [Archive a Chat](#archive-a-chat)
    - [Mute/Unmute a Chat](#muteunmute-a-chat)
    - [Mark a Chat Read/Unread](#mark-a-chat-readunread)
    - [Delete a Message for Me](#delete-a-message-for-me)
    - [Delete a Chat](#delete-a-chat)
    - [Star/Unstar a Message](#starunstar-a-message)
    - [Disappearing Messages](#disappearing-messages)
- [User Querys](#user-querys)
    - [Check If ID Exists in Whatsapp](#check-if-id-exists-in-whatsapp)
    - [Query Chat History (groups too)](#query-chat-history-groups-too)
    - [Fetch Status](#fetch-status)
    - [Fetch Profile Picture (groups too)](#fetch-profile-picture-groups-too)
    - [Fetch Bussines Profile (such as description or category)](#fetch-bussines-profile-such-as-description-or-category)
    - [Fetch Someone&#039;s Presence (if they&#039;re typing or online)](#fetch-someones-presence-if-theyre-typing-or-online)
- [Change Profile](#change-profile)
    - [Change Profile Status](#change-profile-status)
    - [Change Profile Name](#change-profile-name)
    - [Change Display Picture (groups too)](#change-display-picture-groups-too)
    - [Remove display picture (groups too)](#remove-display-picture-groups-too)
- [Groups](#groups)
    - [Create a Group](#create-a-group)
    - [Add/Remove or Demote/Promote](#addremove-or-demotepromote)
    - [Change Subject (name)](#change-subject-name)
    - [Change Description](#change-description)
    - [Change Settings](#change-settings)
    - [Leave a Group](#leave-a-group)
    - [Get Invite Code](#get-invite-code)
    - [Revoke Invite Code](#revoke-invite-code)
    - [Join Using Invitation Code](#join-using-invitation-code)
    - [Get Group Info by Invite Code](#get-group-info-by-invite-code)
    - [Query Metadata (participants, name, description...)](#query-metadata-participants-name-description)
    - [Join using groupInviteMessage](#join-using-groupinvitemessage)
    - [Get Request Join List](#get-request-join-list)
    - [Approve/Reject Request Join](#approvereject-request-join)
    - [Get All Participating Groups Metadata](#get-all-participating-groups-metadata)
    - [Toggle Ephemeral](#toggle-ephemeral)
    - [Change Add Mode](#change-add-mode)
- [Privacy](#privacy)
    - [Block/Unblock User](#blockunblock-user)
    - [Get Privacy Settings](#get-privacy-settings)
    - [Get BlockList](#get-blocklist)
    - [Update LastSeen Privacy](#update-lastseen-privacy)
    - [Update Online Privacy](#update-online-privacy)
    - [Update Profile Picture Privacy](#update-profile-picture-privacy)
    - [Update Status Privacy](#update-status-privacy)
    - [Update Read Receipts Privacy](#update-read-receipts-privacy)
    - [Update Groups Add Privacy](#update-groups-add-privacy)
    - [Update Default Disappearing Mode](#update-default-disappearing-mode)
- [Broadcast Lists &amp; Stories](#broadcast-lists--stories)
    - [Send Broadcast &amp; Stories](#send-broadcast--stories)
    - [Query a Broadcast List&#039;s Recipients &amp; Name](#query-a-broadcast-lists-recipients--name)
- [Writing Custom Functionality](#writing-custom-functionality)
    - [Enabling Debug Level in Baileys Logs](#enabling-debug-level-in-baileys-logs)
    - [How Whatsapp Communicate With Us](#how-whatsapp-communicate-with-us)
    - [Register a Callback for Websocket Events](#register-a-callback-for-websocket-events)

## Connecting Account

WhatsApp provides a multi-device API that allows Baileys to be authenticated as a second WhatsApp client by scanning a **QR code** or **Pairing Code** with WhatsApp on your phone.

&gt; [!NOTE]
&gt; **[Here](#example-to-start) is a simple example of event handling**

&gt; [!TIP]
&gt; **You can see all supported socket configs [here](https://baileys.whiskeysockets.io/types/SocketConfig.html) (Recommended)**

### Starting socket with **QR-CODE**

&gt; [!TIP]
&gt; You can customize browser name if you connect with **QR-CODE**, with `Browser` constant, we have some browsers config, **see [here](https://baileys.whiskeysockets.io/types/BrowsersMap.html)**

```ts
import makeWASocket from &#039;@whiskeysockets/baileys&#039;

const sock = makeWASocket({
    // can provide additional config here
    browser: Browsers.ubuntu(&#039;My App&#039;),
    printQRInTerminal: true
})
```

If the connection is successful, you will see a QR code printed on your terminal screen, scan it with WhatsApp on your phone and you&#039;ll be logged in!

### Starting socket with **Pairing Code**


&gt; [!IMPORTANT]
&gt; Pairing Code isn&#039;t Mobile API, it&#039;s a method to connect Whatsapp Web without QR-CODE, you can connect only with one device, see [here](https://faq.whatsapp.com/1324084875126592/?cms_platform=web)

The phone number can&#039;t have `+` or `()` or `-`, only numbers, you must provide country code

```ts
import makeWASocket from &#039;@whiskeysockets/baileys&#039;

const sock = makeWASocket({
    // can provide additional config here
    printQRInTerminal: false //need to be false
})

if (!sock.authState.creds.registered) {
    const number = &#039;XXXXXXXXXXX&#039;
    const code = await sock.requestPairingCode(number)
    console.log(code)
}
```

### Receive Full History

1. Set `syncFullHistory` as `true`
2. Baileys, by default, use chrome browser config
    - If you&#039;d like to emulate a desktop connection (and receive more message history), this browser setting to your Socket config:

```ts
const sock = makeWASocket({
    ...otherOpts,
    // can use Windows, Ubuntu here too
    browser: Browsers.macOS(&#039;Desktop&#039;),
    syncFullHistory: true
})
```

## Important Notes About Socket Config

### Caching Group Metadata (Recommended)
- If you use baileys for groups, we recommend you to set `cachedGroupMetadata` in socket config, you need to implement a cache like this:

    ```ts
    const groupCache = new NodeCache({stdTTL: 5 * 60, useClones: false})

    const sock = makeWASocket({
        cachedGroupMetadata: async (jid) =&gt; groupCache.get(jid)
    })

    sock.ev.on(&#039;groups.update&#039;, async ([event]) =&gt; {
        const metadata = await sock.groupMetadata(event.id)
        groupCache.set(event.id, metadata)
    })

    sock.ev.on(&#039;group-participants.update&#039;, async (event) =&gt; {
        const metadata = await sock.groupMetadata(event.id)
        groupCache.set(event.id, metadata)
    })
    ```

### Improve Retry System &amp; Decrypt Poll Votes
- If you want to improve sending message, retrying when error occurs and decrypt poll votes, you need to have a store and set `getMessage` config in socket like this:
    ```ts
    const sock = makeWASocket({
        getMessage: async (key) =&gt; await getMessageFromStore(key)
    })
    ```

### Receive Notifications in Whatsapp App
- If you want to receive notifications in whatsapp app, set `markOnlineOnConnect` to `false`
    ```ts
    const sock = makeWASocket({
        markOnlineOnConnect: false
    })
    ```
## Saving &amp; Restoring Sessions

You obviously don&#039;t want to keep scanning the QR code every time you want to connect. 

So, you can load the credentials to log back in:
```ts
import makeWASocket, { useMultiFileAuthState } from &#039;@whiskeysockets/baileys&#039;

const { state, saveCreds } = await useMultiFileAuthState(&#039;auth_info_baileys&#039;)

// will use the given state to connect
// so if valid credentials are available -- it&#039;ll connect without QR
const sock = makeWASocket({ auth: state })

// this will be called as soon as the credentials are updated
sock.ev.on(&#039;creds.update&#039;, saveCreds)
```

&gt; [!IMPORTANT]
&gt; `useMultiFileAuthState` is a utility function to help save the auth state in a single folder, this function serves as a good guide to help write auth &amp; key states for SQL/no-SQL databases, which I would recommend in any production grade system.

&gt; [!NOTE]
&gt; When a message is received/sent, due to signal sessions needing updating, the auth keys (`authState.keys`) will update. Whenever that happens, you must save the updated keys (`authState.keys.set()` is called). Not doing so will prevent your messages from reaching the recipient &amp; cause other unexpected consequences. The `useMultiFileAuthState` function automatically takes care of that, but for any other serious implementation -- you will need to be very careful with the key state management.

## Handling Events

- Baileys uses the EventEmitter syntax for events. 
They&#039;re all nicely typed up, so you shouldn&#039;t have any issues with an Intellisense editor like VS Code.

&gt; [!IMPORTANT]
&gt; **The events are [these](https://baileys.whiskeysockets.io/types/BaileysEventMap.html)**, it&#039;s important you see all events

You can listen to these events like this:
```ts
const sock = makeWASocket()
sock.ev.on(&#039;messages.upsert&#039;, ({ messages }) =&gt; {
    console.log(&#039;got messages&#039;, messages)
})
```

### Example to Start

&gt; [!NOTE]
&gt; This example includes basic auth storage too

&gt; [!NOTE]
&gt; For reliable serialization of the authentication state, especially when storing as JSON, always use the BufferJSON utility.

```ts
import makeWASocket, { DisconnectReason, useMultiFileAuthState } from &#039;@whiskeysockets/baileys&#039;
import { Boom } from &#039;@hapi/boom&#039;

async function connectToWhatsApp () {
    const { state, saveCreds } = await useMultiFileAuthState(&#039;auth_info_baileys&#039;)
    const sock = makeWASocket({
        // can provide additional config here
        auth: state,
        printQRInTerminal: true
    })
    sock.ev.on(&#039;connection.update&#039;, (update) =&gt; {
        const { connection, lastDisconnect } = update
        if(connection === &#039;close&#039;) {
            const shouldReconnect = (lastDisconnect.error as Boom)?.output?.statusCode !== DisconnectReason.loggedOut
            console.log(&#039;connection closed due to &#039;, lastDisconnect.error, &#039;, reconnecting &#039;, shouldReconnect)
            // reconnect if not logged out
            if(shouldReconnect) {
                connectToWhatsApp()
            }
        } else if(connection === &#039;open&#039;) {
            console.log(&#039;opened connection&#039;)
        }
    })
    sock.ev.on(&#039;messages.upsert&#039;, event =&gt; {
        for (const m of event.messages) {
            console.log(JSON.stringify(m, undefined, 2))

            console.log(&#039;replying to&#039;, m.key.remoteJid)
            await sock.sendMessage(m.key.remoteJid!, { text: &#039;Hello Word&#039; })
        }
    })

    // to storage creds (session info) when it updates
    sock.ev.on(&#039;creds.update&#039;, saveCreds)
}
// run in main file
connectToWhatsApp()
```

&gt; [!IMPORTANT]
&gt; In `messages.upsert` it&#039;s recommended to use a loop like `for (const message of event.messages)` to handle all messages in array

### Decrypt Poll Votes

- By default poll votes are encrypted and handled in `messages.update`
- That&#039;s a simple example
```ts
sock.ev.on(&#039;messages.update&#039;, event =&gt; {
    for(const { key, update } of event) {
        if(update.pollUpdates) {
            const pollCreation = await getMessage(key)
            if(pollCreation) {
                console.log(
                    &#039;got poll update, aggregation: &#039;,
                    getAggregateVotesInPollMessage({
                        message: pollCreation,
                        pollUpdates: update.pollUpdates,
                    })
                )
            }
        }
    }
})
```

- `getMessage` is a [store](#implementing-a-data-store) implementation (in your end)

### Summary of Events on First Connection

1. When you connect first time, `connection.update` will be fired requesting you to restart sock
2. Then, history messages will be received in `messaging.history-set`

## Implementing a Data Store

- Baileys does not come with a defacto storage for chats, contacts, or messages. However, a simple in-memory implementation has been provided. The store listens for chat updates, new messages, message updates, etc., to always have an up-to-date version of the data.

&gt; [!IMPORTANT]
&gt; I highly recommend building your own data store, as storing someone&#039;s entire chat history in memory is a terrible waste of RAM.

It can be used as follows:

```ts
import makeWASocket, { makeInMemoryStore } from &#039;@whiskeysockets/baileys&#039;
// the store maintains the data of the WA connection in memory
// can be written out to a file &amp; read from it
const store = makeInMemoryStore({ })
// can be read from a file
store.readFromFile(&#039;./baileys_store.json&#039;)
// saves the state to a file every 10s
setInterval(() =&gt; {
    store.writeToFile(&#039;./baileys_store.json&#039;)
}, 10_000)

const sock = makeWASocket({ })
// will listen from this socket
// the store can listen from a new socket once the current socket outlives its lifetime
store.bind(sock.ev)

sock.ev.on(&#039;chats.upsert&#039;, () =&gt; {
    // can use &#039;store.chats&#039; however you want, even after the socket dies out
    // &#039;chats&#039; =&gt; a KeyedDB instance
    console.log(&#039;got chats&#039;, store.chats.all())
})

sock.ev.on(&#039;contacts.upsert&#039;, () =&gt; {
    console.log(&#039;got contacts&#039;, Object.values(store.contacts))
})

```

The store also provides some simple functions such as `loadMessages` that utilize the store to speed up data retrieval.

## Whatsapp IDs Explain

- `id` is the WhatsApp ID, called `jid` too, of the person or group you&#039;re sending the message to. 
    - It must be in the format ```[country code][phone number]@s.whatsapp.net```
	    - Example for people: ```+19999999999@s.whatsapp.net```. 
	    - For groups, it must be in the format ``` 123456789-123345@g.us ```. 
    - For broadcast lists, it&#039;s `[timestamp of creation]@broadcast`.
    - For stories, the ID is `status@broadcast`.

## Utility Functions

- `getContentType`, returns the content type for any message
- `getDevice`, returns the device from message
- `makeCacheableSignalKeyStore`, make auth store more fast
- `downloadContentFromMessage`, download content from any message

## Sending M

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mindcraft-bots/mindcraft]]></title>
            <link>https://github.com/mindcraft-bots/mindcraft</link>
            <guid>https://github.com/mindcraft-bots/mindcraft</guid>
            <pubDate>Tue, 21 Oct 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[Minecraft AI with LLMs+Mineflayer]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mindcraft-bots/mindcraft">mindcraft-bots/mindcraft</a></h1>
            <p>Minecraft AI with LLMs+Mineflayer</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,300</p>
            <p>Forks: 593</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre># Mindcraft 🧠⛏️

Crafting minds for Minecraft with LLMs and [Mineflayer!](https://prismarinejs.github.io/mineflayer/#/)

[FAQ](https://github.com/mindcraft-bots/mindcraft/blob/main/FAQ.md) | [Discord Support](https://discord.gg/mp73p35dzC) | [Video Tutorial](https://www.youtube.com/watch?v=gRotoL8P8D8) | [Blog Post](https://kolbynottingham.com/mindcraft/) | [Contributor TODO](https://github.com/users/kolbytn/projects/1) | [Paper Website](https://mindcraft-minecollab.github.io/index.html) | [MineCollab](https://github.com/mindcraft-bots/mindcraft/blob/main/minecollab.md) 


&gt; [!Caution]
Do not connect this bot to public servers with coding enabled. This project allows an LLM to write/execute code on your computer. The code is sandboxed, but still vulnerable to injection attacks. Code writing is disabled by default, you can enable it by setting `allow_insecure_coding` to `true` in `settings.js`. Ye be warned.

## Requirements

- [Minecraft Java Edition](https://www.minecraft.net/en-us/store/minecraft-java-bedrock-edition-pc) (up to v1.21.6, recommend v1.21.1)
- [Node.js Installed](https://nodejs.org/) (at least v18)
- One of these: [OpenAI API Key](https://openai.com/blog/openai-api) | [Gemini API Key](https://aistudio.google.com/app/apikey) | [Anthropic API Key](https://docs.anthropic.com/claude/docs/getting-access-to-claude) | [Replicate API Key](https://replicate.com/) | [Hugging Face API Key](https://huggingface.co/) | [Groq API Key](https://console.groq.com/keys) | [Ollama Installed](https://ollama.com/download). | [Mistral API Key](https://docs.mistral.ai/getting-started/models/models_overview/) | [Qwen API Key [Intl.]](https://www.alibabacloud.com/help/en/model-studio/developer-reference/get-api-key)/[[cn]](https://help.aliyun.com/zh/model-studio/getting-started/first-api-call-to-qwen?) | [Novita AI API Key](https://novita.ai/settings?utm_source=github_mindcraft&amp;utm_medium=github_readme&amp;utm_campaign=link#key-management) | [Cerebras API Key](https://cloud.cerebras.ai) | [Mercury API](https://platform.inceptionlabs.ai/docs)

## Install and Run

1. Make sure you have the requirements above.

2. Clone or download this repository (big green button) &#039;git clone https://github.com/mindcraft-bots/mindcraft.git&#039;

3. Rename `keys.example.json` to `keys.json` and fill in your API keys (you only need one). The desired model is set in `andy.json` or other profiles. For other models refer to the table below.

4. In terminal/command prompt, run `npm install` from the installed directory

5. Start a minecraft world and open it to LAN on localhost port `55916`

6. Run `node main.js` from the installed directory

If you encounter issues, check the [FAQ](https://github.com/mindcraft-bots/mindcraft/blob/main/FAQ.md) or find support on [discord](https://discord.gg/mp73p35dzC). We are currently not very responsive to github issues. To run tasks please refer to [Minecollab Instructions](minecollab.md#installation)

## Tasks

Bot performance can be roughly evaluated with Tasks. Tasks automatically intialize bots with a goal to aquire specific items or construct predefined buildings, and remove the bot once the goal is achieved.

To run tasks, you need python, pip, and optionally conda. You can then install dependencies with `pip install -r requirements.txt`. 

Tasks are defined in json files in the `tasks` folder, and can be run with: `python tasks/run_task_file.py --task_path=tasks/example_tasks.json`

For full evaluations, you will need to [download and install the task suite. Full instructions.](minecollab.md#installation)

## Model Customization

You can configure project details in `settings.js`. [See file.](settings.js)

You can configure the agent&#039;s name, model, and prompts in their profile like `andy.json` with the `model` field. For comprehensive details, see [Model Specifications](#model-specifications).

| API | Config Variable | Example Model name | Docs |
|------|------|------|------|
| `openai` | `OPENAI_API_KEY` | `gpt-4o-mini` | [docs](https://platform.openai.com/docs/models) |
| `google` | `GEMINI_API_KEY` | `gemini-2.0-flash` | [docs](https://ai.google.dev/gemini-api/docs/models/gemini) |
| `anthropic` | `ANTHROPIC_API_KEY` | `claude-3-haiku-20240307` | [docs](https://docs.anthropic.com/claude/docs/models-overview) |
| `xai` | `XAI_API_KEY` | `grok-2-1212` | [docs](https://docs.x.ai/docs) |
| `deepseek` | `DEEPSEEK_API_KEY` | `deepseek-chat` | [docs](https://api-docs.deepseek.com/) |
| `ollama` (local) | n/a | `ollama/sweaterdog/andy-4:micro-q8_0` | [docs](https://ollama.com/library) |
| `qwen` | `QWEN_API_KEY` | `qwen-max` | [Intl.](https://www.alibabacloud.com/help/en/model-studio/developer-reference/use-qwen-by-calling-api)/[cn](https://help.aliyun.com/zh/model-studio/getting-started/models) |
| `mistral` | `MISTRAL_API_KEY` | `mistral-large-latest` | [docs](https://docs.mistral.ai/getting-started/models/models_overview/) |
| `replicate` | `REPLICATE_API_KEY` | `replicate/meta/meta-llama-3-70b-instruct` | [docs](https://replicate.com/collections/language-models) |
| `groq` (not grok) | `GROQCLOUD_API_KEY` | `groq/mixtral-8x7b-32768` | [docs](https://console.groq.com/docs/models) |
| `huggingface` | `HUGGINGFACE_API_KEY` | `huggingface/mistralai/Mistral-Nemo-Instruct-2407` | [docs](https://huggingface.co/models) |
| `novita` | `NOVITA_API_KEY` | `novita/deepseek/deepseek-r1` | [docs](https://novita.ai/model-api/product/llm-api?utm_source=github_mindcraft&amp;utm_medium=github_readme&amp;utm_campaign=link) |
| `openrouter` | `OPENROUTER_API_KEY` | `openrouter/anthropic/claude-3.5-sonnet` | [docs](https://openrouter.ai/models) |
| `glhf.chat` | `GHLF_API_KEY` | `glhf/hf:meta-llama/Llama-3.1-405B-Instruct` | [docs](https://glhf.chat/user-settings/api) |
| `hyperbolic` | `HYPERBOLIC_API_KEY` | `hyperbolic/deepseek-ai/DeepSeek-V3` | [docs](https://docs.hyperbolic.xyz/docs/getting-started) |
| `vllm` | n/a | `vllm/llama3` | n/a |
| `cerebras` | `CEREBRAS_API_KEY` | `cerebras/llama-3.3-70b` | [docs](https://inference-docs.cerebras.ai/introduction) |
| `mercury` | `MERCURY_API_KEY` | `mercury-coder-small` | [docs](https://www.inceptionlabs.ai/) |

If you use Ollama, to install the models used by default (generation and embedding), execute the following terminal command:
`ollama pull sweaterdog/andy-4:micro-q8_0 &amp;&amp; ollama pull embeddinggemma`

To use Azure, you can reuse the `OPENAI_API_KEY` environment variable. You can get the key from the Azure portal. See [azure.json](profiles/azure.json) for an example.

### Online Servers
To connect to online servers your bot will need an official Microsoft/Minecraft account. You can use your own personal one, but will need another account if you want to connect too and play with it. To connect, change these lines in `settings.js`:
```javascript
&quot;host&quot;: &quot;111.222.333.444&quot;,
&quot;port&quot;: 55920,
&quot;auth&quot;: &quot;microsoft&quot;,

// rest is same...
```
&gt; [!Important]
&gt; The bot&#039;s name in the profile.json must exactly match the Minecraft profile name! Otherwise the bot will spam talk to itself.

To use different accounts, Mindcraft will connect with the account that the Minecraft launcher is currently using. You can switch accounts in the launcer, then run `node main.js`, then switch to your main account after the bot has connected.

### Docker Container

If you intend to `allow_insecure_coding`, it is a good idea to run the app in a docker container to reduce risks of running unknown code. This is strongly recommended before connecting to remote servers.

```bash
docker run -i -t --rm -v $(pwd):/app -w /app -p 3000-3003:3000-3003 node:latest node main.js
```
or simply
```bash
docker-compose up
```

When running in docker, if you want the bot to join your local minecraft server, you have to use a special host address `host.docker.internal` to call your localhost from inside your docker container. Put this into your [settings.js](settings.js):

```javascript
&quot;host&quot;: &quot;host.docker.internal&quot;, // instead of &quot;localhost&quot;, to join your local minecraft from inside the docker container
```

To connect to an unsupported minecraft version, you can try to use [viaproxy](services/viaproxy/README.md)

# Bot Profiles

Bot profiles are json files (such as `andy.json`) that define:

1. Bot backend LLMs to use for talking, coding, and embedding.
2. Prompts used to influence the bot&#039;s behavior.
3. Examples help the bot perform tasks.

## Model Specifications

LLM models can be specified simply as `&quot;model&quot;: &quot;gpt-4o&quot;`. However, you can use different models for chat, coding, and embeddings. 
You can pass a string or an object for these fields. A model object must specify an `api`, and optionally a `model`, `url`, and additional `params`.

```json
&quot;model&quot;: {
  &quot;api&quot;: &quot;openai&quot;,
  &quot;model&quot;: &quot;gpt-4o&quot;,
  &quot;url&quot;: &quot;https://api.openai.com/v1/&quot;,
  &quot;params&quot;: {
    &quot;max_tokens&quot;: 1000,
    &quot;temperature&quot;: 1
  }
},
&quot;code_model&quot;: {
  &quot;api&quot;: &quot;openai&quot;,
  &quot;model&quot;: &quot;gpt-4&quot;,
  &quot;url&quot;: &quot;https://api.openai.com/v1/&quot;
},
&quot;vision_model&quot;: {
  &quot;api&quot;: &quot;openai&quot;,
  &quot;model&quot;: &quot;gpt-4o&quot;,
  &quot;url&quot;: &quot;https://api.openai.com/v1/&quot;
},
&quot;embedding&quot;: {
  &quot;api&quot;: &quot;openai&quot;,
  &quot;url&quot;: &quot;https://api.openai.com/v1/&quot;,
  &quot;model&quot;: &quot;text-embedding-ada-002&quot;
},
&quot;speak_model&quot;: {
  &quot;api&quot;: &quot;openai&quot;,
  &quot;url&quot;: &quot;https://api.openai.com/v1/&quot;,
  &quot;model&quot;: &quot;tts-1&quot;,
  &quot;voice&quot;: &quot;echo&quot;
}

```

`model` is used for chat, `code_model` is used for newAction coding, `vision_model` is used for image interpretation, and `embedding` is used to embed text for example selection. If `code_model` or `vision_model` is not specified, `model` will be used by default. Not all APIs support embeddings or vision.

All apis have default models and urls, so those fields are optional. The `params` field is optional and can be used to specify additional parameters for the model. It accepts any key-value pairs supported by the api. Is not supported for embedding models.

## Embedding Models

Embedding models are used to embed and efficiently select relevant examples for conversation and coding.

Supported Embedding APIs: `openai`, `google`, `replicate`, `huggingface`, `novita`

If you try to use an unsupported model, then it will default to a simple word-overlap method. Expect reduced performance, recommend mixing APIs to ensure embedding support.

## Specifying Profiles via Command Line

By default, the program will use the profiles specified in `settings.js`. You can specify one or more agent profiles using the `--profiles` argument: `node main.js --profiles ./profiles/andy.json ./profiles/jill.json`

## Patches

Some of the node modules that we depend on have bugs in them. To add a patch, change your local node module file and run `npx patch-package [package-name]`

## Citation:

```
@article{mindcraft2025,
  title = {Collaborating Action by Action: A Multi-agent LLM Framework for Embodied Reasoning},
  author = {White*, Isadora and Nottingham*, Kolby and Maniar, Ayush and Robinson, Max and Lillemark, Hansen and Maheshwari, Mehul and Qin, Lianhui and Ammanabrolu, Prithviraj},
  journal = {arXiv preprint arXiv:2504.17950},
  year = {2025},
  url = {https://arxiv.org/abs/2504.17950},
}
```


</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>