<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Sun, 10 Aug 2025 00:05:23 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[zumerlab/snapdom]]></title>
            <link>https://github.com/zumerlab/snapdom</link>
            <guid>https://github.com/zumerlab/snapdom</guid>
            <pubDate>Sun, 10 Aug 2025 00:05:23 GMT</pubDate>
            <description><![CDATA[snapDOM captures HTML elements to images with exceptional speed and accuracy.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/zumerlab/snapdom">zumerlab/snapdom</a></h1>
            <p>snapDOM captures HTML elements to images with exceptional speed and accuracy.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,955</p>
            <p>Forks: 160</p>
            <p>Stars today: 59 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;http://zumerlab.github.io/snapdom&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/zumerlab/snapdom/main/docs/assets/newhero.png&quot; width=&quot;70%&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
 &lt;a href=&quot;https://www.npmjs.com/package/@zumer/snapdom&quot;&gt;
    &lt;img alt=&quot;NPM version&quot; src=&quot;https://img.shields.io/npm/v/@zumer/snapdom?style=flat-square&amp;label=Version&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/zumerlab/snapdom/graphs/contributors&quot;&gt;
    &lt;img alt=&quot;GitHub contributors&quot; src=&quot;https://img.shields.io/github/contributors/zumerlab/snapdom?style=flat-square&amp;label=Contributors&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/zumerlab/snapdom/stargazers&quot;&gt;
    &lt;img alt=&quot;GitHub stars&quot; src=&quot;https://img.shields.io/github/stars/zumerlab/snapdom?style=flat-square&amp;label=Stars&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/zumerlab/snapdom/network/members&quot;&gt;
    &lt;img alt=&quot;GitHub forks&quot; src=&quot;https://img.shields.io/github/forks/zumerlab/snapdom?style=flat-square&amp;label=Forks&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/sponsors/tinchox5&quot;&gt;
    &lt;img alt=&quot;Sponsor tinchox5&quot; src=&quot;https://img.shields.io/github/sponsors/tinchox5?style=flat-square&amp;label=Sponsor&quot;&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/zumerlab/snapdom/blob/main/LICENSE&quot;&gt;
    &lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/github/license/zumerlab/snapdom?style=flat-square&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

# snapDOM

**snapDOM** is a fast and accurate DOM-to-image capture tool built for **Zumly**, a zoom-based view transition framework.

It captures any HTML element as a scalable SVG image, preserving styles, fonts, background images, pseudo-elements, and even shadow DOM. It also supports export to raster image formats and canvas.

* üì∏ Full DOM capture
* üé® Embedded styles, pseudo-elements, and fonts
* üñºÔ∏è Export to SVG, PNG, JPG, WebP, `canvas`, or Blob
* ‚ö° Ultra fast, no dependencies
* üì¶ 100% based on standard Web APIs

## Demo

[https://zumerlab.github.io/snapdom/](https://zumerlab.github.io/snapdom/)

## Installation

### NPM / Yarn

```sh
npm i @zumer/snapdom
```

```sh
yarn add @zumer/snapdom
```

Then import it in your code:

```js
import { snapdom } from &#039;@zumer/snapdom&#039;;
```

### CDN

```html
&lt;script src=&quot;https://cdn.jsdelivr.net/npm/@zumer/snapdom/dist/snapdom.min.js&quot;&gt;&lt;/script&gt;
```

### Script tag (local)

```html
&lt;script src=&quot;snapdom.js&quot;&gt;&lt;/script&gt;
```

### ES Module

```js
import { snapdom } from &#039;./snapdom.mjs&#039;;
```

### Module via CDN

```html
&lt;script type=&quot;module&quot;&gt;
  import { snapdom } from &#039;https://cdn.jsdelivr.net/npm/@zumer/snapdom/dist/snapdom.mjs&#039;;
&lt;/script&gt;
```

## Basic usage

### Reusable capture

```js
const el = document.querySelector(&#039;#target&#039;);
const result = await snapdom(el, { scale: 2 });

const img = await result.toPng();
document.body.appendChild(img);

await result.download({ format: &#039;jpg&#039;, filename: &#039;my-capture&#039; });
```

### One-step shortcuts

```js
const el = document.querySelector(&#039;#target&#039;);
const png = await snapdom.toPng(el);
document.body.appendChild(png);

const blob = await snapdom.toBlob(el);
```

## API

### `snapdom(el, options?)`

Returns an object with reusable export methods:

```js
{
  url: string;
  toRaw(): string;
  toImg(): Promise&lt;HTMLImageElement&gt;;
  toCanvas(): Promise&lt;HTMLCanvasElement&gt;;
  toBlob(options?): Promise&lt;Blob&gt;;
  toPng(options?): Promise&lt;HTMLImageElement&gt;;
  toJpg(options?): Promise&lt;HTMLImageElement&gt;;
  toWebp(options?): Promise&lt;HTMLImageElement&gt;;
  download(options?): Promise&lt;void&gt;;
}
```

### Shortcut methods

| Method                         | Description                           |
| ------------------------------ | ------------------------------------- |
| `snapdom.toImg(el, options?)`  | Returns an `HTMLImageElement`         |
| `snapdom.toCanvas(el, options?)     ` | Returns a `Canvas`                    |
| `snapdom.toBlob(el, options?)` | Returns an SVG `Blob`                 |
| `snapdom.toPng(el, options?)`  | Returns a PNG image                   |
| `snapdom.toJpg(el, options?)`  | Returns a JPG image                   |
| `snapdom.toWebp(el, options?)` | Returns a WebP image                  |
| `snapdom.download(el, options?)     ` | Triggers download in specified format |

## Options

All capture methods accept an `options` object:

| Option            | Type     | Default  | Description                                |
| ----------------- | -------- | -------- | ------------------------------------------ |
| `compress`        | boolean  | `true`   | Removes redundant styles                   |
| `fast`            | boolean  | `true`   | Skips idle delay for faster results        |
| `embedFonts`      | boolean  | `false`  | Inlines fonts (icon fonts always embedded) |
| `scale`           | number   | `1`      | Output scale multiplier                    |
| `dpr`             | number   | `devicePixelRatio` | Device pixel ratio                 |
| `width`           | number   | -        | Output specific width size                 |
| `height`          | number   | -        | Output specific height size                |
| `backgroundColor` | string   | `&quot;#fff&quot;` | Fallback color for JPG/WebP                |
| `quality`         | number   | `1`      | Quality for JPG/WebP (0 to 1)              |
| `useProxy`     | string | &#039;&#039;        | Specify a proxy for handling CORS images as fallback|
| `type`     | string | `svg`        | Select `png`, `jpg`, `webp` Blob type|
| `exclude` | string[] | -  | CSS selectors for elements to exclude |
| `filter` | function | -  | Custom filter function ie `(el) =&gt; !el.classList.contains(&#039;hidden&#039;)` |

### Setting custom dimensions with width and height options

Use the `width` and `height` options to generate an image with specific dimensions.

**Examples:**

**1. Fixed width (proportional height)**
Sets a specific width while maintaining the aspect ratio. Height adjusts proportionally.

```js
const result = await snapdom(element, {
  width: 400 // Outputs a 400px-wide image with auto-scaled height
});
```

**2. Fixed height (proportional width)**
Sets a specific height while maintaining the aspect ratio. Width adjusts proportionally.

```js
const result = await snapdom(element, {
  height: 200 // Outputs a 200px-tall image with auto-scaled width
});
```

**3. Fixed width and height (may distort image)**
Forces exact dimensions, potentially distorting the image if the aspect ratio differs.

```js
const result = await snapdom(element, {
  width: 800,  // Outputs an 800px √ó 200px image (may stretch/squish content)
  height: 200
});
```

**Note:** If `scale` is different from  1, it takes priority over width and height.
Example: `{ scale: 3, width: 500 }` ignores width and scales the image 3x instead.


### Cross-Origin Images

By default, snapDOM loads images with `crossOrigin=&quot;anonymous&quot;` or `crossOrigin=&quot;use-credentials&quot;`. In case fails to get the images, `useProxy` can be used to deal with CORS images:

```js
const result = await snapdom(element, {
  useProxy: &#039;your/proxy/&#039; //Example: &#039;https://corsproxy.io/?url=&#039; or &#039;https://api.allorigins.win/raw?url=&#039;
});
```


### Download options

```js
{
  format?: &quot;svg&quot; | &quot;png&quot; | &quot;jpg&quot; | &quot;jpeg&quot; | &quot;webp&quot;; // default: &quot;png&quot;
  filename?: string;         // default: &quot;capture&quot;
  backgroundColor?: string;  // optional override
}
```


### `preCache()` ‚Äì Optional helper

The `preCache()` function can be used to load external resources (like images and fonts) in advance. It is specially useful when the element to capture is big and complex.

```js
import { preCache } from &#039;@zumer/snapdom&#039;;

await preCache(document.body);
```

```js
import { snapdom, preCache } from &#039;./snapdom.mjs&#039;;
    window.addEventListener(&#039;load&#039;, async () =&gt; {
    await preCache();
    console.log(&#039;üì¶ Resources preloaded&#039;);
    });
```

**Options for `preCache()`:**

* `embedFonts` *(boolean, default: true)* ‚Äî Inlines non-icon fonts during preload.
* `useProxy` *(string)* ‚Äî Proxy for handling CORS images as fallback.


## Features

* Captures **shadow DOM** and Web Components
* Supports `::before`, `::after` and `::first-letter` pseudo-elements
* Inlines background images and fonts
* Handles **Font Awesome**, **Material Icons**, and more
* `data-capture=&quot;exclude&quot;` to ignore an element
* `data-capture=&quot;placeholder&quot;` with `data-placeholder-text` for masked replacements

## Limitations

* External images should be CORS-accessible (use `useProxy` option for handling CORS denied)
* Iframes are not supported
* When WebP format is used on Safari, it will fallback to PNG rendering.
* `@font-face` CSS rule is well supported, but if need to use JS `FontFace()`, see this workaround [`#43`](https://github.com/zumerlab/snapdom/issues/43)


## ‚ö° Performance Benchmarks

Snapdom has received **significant performance improvements** since version `v1.8.0`. The following benchmarks compare:

* **Snapdom (current)**
* **Snapdom v1.8.0**
* `html2canvas`
* `html-to-image`


### Simple elements

| Scenario                 | Snapdom (current) | Snapdom v1.8.0 | html2canvas | html-to-image |
| ------------------------ | ----------------- | -------------- | ----------- | ------------- |
| Small (200√ó100)          | **0.4 ms**        | 1.2 ms         | 70.3 ms     | 3.6 ms        |
| Modal (400√ó300)          | **0.4 ms**        | 1.1 ms         | 68.8 ms     | 3.6 ms        |
| Page View (1200√ó800)     | **0.4 ms**        | 1.0 ms         | 100.5 ms    | 3.4 ms        |
| Large Scroll (2000√ó1500) | **0.4 ms**        | 1.0 ms         | 153.1 ms    | 3.4 ms        |
| Very Large (4000√ó2000)   | **0.4 ms**        | 1.0 ms         | 278.9 ms    | 4.3 ms        |



### Complex elements

| Scenario                 | Snapdom (current) | Snapdom v1.8.0 | html2canvas | html-to-image |
| ------------------------ | ----------------- | -------------- | ----------- | ------------- |
| Small (200√ó100)          | **1.1 ms**        | 3.2 ms         | 76.0 ms     | 15.3 ms       |
| Modal (400√ó300)          | **4.5 ms**        | 14.0 ms        | 133.2 ms    | 55.4 ms       |
| Page View (1200√ó800)     | **32.9 ms**       | 113.6 ms       | 303.4 ms    | 369.1 ms      |
| Large Scroll (2000√ó1500) | **133.9 ms**      | 387.4 ms       | 594.4 ms    | 1,163.0 ms    |
| Very Large (4000√ó2000)   | **364.0 ms**      | 1,200.4 ms     | 1,380.8 ms  | 3,023.9 ms    |



### Summary

* Snapdom (current) is **2√ó‚Äì6√ó faster** than `v1.8.0`
* Up to **150√ó faster** than `html2canvas`
* Up to **8√ó faster** than `html-to-image` in large scenarios

&lt;sub&gt;Benchmarks run in Chromium using Vitest.&lt;br&gt;
Hardware: MacBook Air 2018.&lt;br&gt;
‚ö†Ô∏è Performance may vary depending on device.&lt;/sub&gt;



### Run the benchmarks

```sh
git clone https://github.com/zumerlab/snapdom.git
cd snapdom
npm install
npm run test:benchmark
```


## Roadmap

Planned improvements for future versions of SnapDOM:

* [ ] **Implement plugin system**
  SnapDOM will support external plugins to extend or override internal behavior (e.g. custom node transformers, exporters, or filters).

* [ ] **Refactor to modular architecture**
  Internal logic will be split into smaller, focused modules to improve maintainability and code reuse.

* [X] **Decouple internal logic from global options**
  Functions will be redesigned to avoid relying directly on `options`. A centralized capture context will improve clarity, autonomy, and testability. See [`next` branch](https://github.com/zumerlab/snapdom/tree/main)

* [ ] **Expose cache control**
  Users will be able to manually clear image and font caches or configure their own caching strategies.

* [ ] **Auto font preloading**
  Required fonts will be automatically detected and preloaded before capture, reducing the need for manual `preCache()` calls.

* [ ] **Document plugin development**
  A full guide will be provided for creating and registering custom SnapDOM plugins.

* [ ] **Make export utilities tree-shakeable**
  Export functions like `toPng`, `toJpg`, `toBlob`, etc. will be restructured into independent modules to support tree shaking and minimal builds.

Have ideas or feature requests?
Feel free to share suggestions or feedback in [GitHub Discussions](https://github.com/zumerlab/snapdom/discussions).


## Development

To contribute or build snapDOM locally:

```sh
# Clone the repository
git clone https://github.com/zumerlab/snapdom.git
cd snapdom

# Switch to dev branch
git checkout dev

# Install dependencies
npm install

# Compile the library (ESM, CJS, and minified versions)
npm run compile

# Install playwright browsers (necessary for running tests)
npx playwright install

# Run tests
npm test

# Run Benchmarks
npm run test:benchmark
```

The main entry point is in `src/`, and output bundles are generated in the `dist/` folder.

For detailed contribution guidelines, please see [CONTRIBUTING](https://github.com/zumerlab/snapdom/blob/main/CONTRIBUTING.md).


## Contributors üôå

&lt;!-- CONTRIBUTORS:START --&gt;
&lt;p&gt;
&lt;a href=&quot;https://github.com/tinchox5&quot; title=&quot;tinchox5&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11557901?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;tinchox5&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/tarwin&quot; title=&quot;tarwin&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/646149?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;tarwin&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/17biubiu&quot; title=&quot;17biubiu&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13295895?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;17biubiu&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/av01d&quot; title=&quot;av01d&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6247646?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;av01d&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/CHOYSEN&quot; title=&quot;CHOYSEN&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/25995358?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;CHOYSEN&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/pedrocateexte&quot; title=&quot;pedrocateexte&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/207524750?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;pedrocateexte&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/domialex&quot; title=&quot;domialex&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4694217?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;domialex&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/elliots&quot; title=&quot;elliots&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/622455?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;elliots&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/jswhisperer&quot; title=&quot;jswhisperer&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1177690?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;jswhisperer&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/sharuzzaman&quot; title=&quot;sharuzzaman&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7421941?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;sharuzzaman&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/simon1uo&quot; title=&quot;simon1uo&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/60037549?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;simon1uo&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/titoBouzout&quot; title=&quot;titoBouzout&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/64156?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;titoBouzout&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/jhbae200&quot; title=&quot;jhbae200&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/20170610?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;jhbae200&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/miusuncle&quot; title=&quot;miusuncle&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7549857?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;miusuncle&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/rbbydotdev&quot; title=&quot;rbbydotdev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/101137670?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;rbbydotdev&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/zhanghaotian2018&quot; title=&quot;zhanghaotian2018&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/169218899?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;zhanghaotian2018&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/kohaiy&quot; title=&quot;kohaiy&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/15622127?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;kohaiy&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/fu050409&quot; title=&quot;fu050409&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/46275354?v=4&amp;s=100&quot; style=&quot;border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;&quot; alt=&quot;fu050409&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;!-- CONTRIBUTORS:END --&gt;

## üíñ Sponsors

Special thanks to [@megaphonecolin](https://github.com/megaphonecolin) for supporting this project!

If you&#039;d like to support this project too, you can [become a sponsor](https://github.com/sponsors/tinchox5).

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=zumerlab/snapdom&amp;type=Date)](https://www.star-history.com/#zumerlab/snapdom&amp;Date)

## License

MIT ¬© Zumerlab
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[upstash/context7]]></title>
            <link>https://github.com/upstash/context7</link>
            <guid>https://github.com/upstash/context7</guid>
            <pubDate>Sun, 10 Aug 2025 00:05:22 GMT</pubDate>
            <description><![CDATA[Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/upstash/context7">upstash/context7</a></h1>
            <p>Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors</p>
            <p>Language: JavaScript</p>
            <p>Stars: 24,876</p>
            <p>Forks: 1,260</p>
            <p>Stars today: 138 stars today</p>
            <h2>README</h2><pre># Context7 MCP - Up-to-date Code Docs For Any Prompt

[![Website](https://img.shields.io/badge/Website-context7.com-blue)](https://context7.com) [![smithery badge](https://smithery.ai/badge/@upstash/context7-mcp)](https://smithery.ai/server/@upstash/context7-mcp) [&lt;img alt=&quot;Install in VS Code (npx)&quot; src=&quot;https://img.shields.io/badge/VS_Code-VS_Code?style=flat-square&amp;label=Install%20Context7%20MCP&amp;color=0098FF&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)
[![ÁπÅÈ´î‰∏≠Êñá](https://img.shields.io/badge/docs-ÁπÅÈ´î‰∏≠Êñá-yellow)](./docs/README.zh-TW.md) [![ÁÆÄ‰Ωì‰∏≠Êñá](https://img.shields.io/badge/docs-ÁÆÄ‰Ωì‰∏≠Êñá-yellow)](./docs/README.zh-CN.md) [![Êó•Êú¨Ë™û](https://img.shields.io/badge/docs-Êó•Êú¨Ë™û-b7003a)](./docs/README.ja.md) [![ÌïúÍµ≠Ïñ¥ Î¨∏ÏÑú](https://img.shields.io/badge/docs-ÌïúÍµ≠Ïñ¥-green)](./docs/README.ko.md) [![Documentaci√≥n en Espa√±ol](https://img.shields.io/badge/docs-Espa√±ol-orange)](./docs/README.es.md) [![Documentation en Fran√ßais](https://img.shields.io/badge/docs-Fran√ßais-blue)](./docs/README.fr.md) [![Documenta√ß√£o em Portugu√™s (Brasil)](&lt;https://img.shields.io/badge/docs-Portugu√™s%20(Brasil)-purple&gt;)](./docs/README.pt-BR.md) [![Documentazione in italiano](https://img.shields.io/badge/docs-Italian-red)](./docs/README.it.md) [![Dokumentasi Bahasa Indonesia](https://img.shields.io/badge/docs-Bahasa%20Indonesia-pink)](./docs/README.id-ID.md) [![Dokumentation auf Deutsch](https://img.shields.io/badge/docs-Deutsch-darkgreen)](./docs/README.de.md) [![–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ](https://img.shields.io/badge/docs-–†—É—Å—Å–∫–∏–π-darkblue)](./docs/README.ru.md) [![–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è](https://img.shields.io/badge/docs-–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞-lightblue)](./docs/README.uk.md) [![T√ºrk√ße Dok√ºman](https://img.shields.io/badge/docs-T√ºrk√ße-blue)](./docs/README.tr.md) [![Arabic Documentation](https://img.shields.io/badge/docs-Arabic-white)](./docs/README.ar.md) [![Ti·∫øng Vi·ªát](https://img.shields.io/badge/docs-Ti·∫øng%20Vi·ªát-red)](./docs/README.vi.md)

## ‚ùå Without Context7

LLMs rely on outdated or generic information about the libraries you use. You get:

- ‚ùå Code examples are outdated and based on year-old training data
- ‚ùå Hallucinated APIs don&#039;t even exist
- ‚ùå Generic answers for old package versions

## ‚úÖ With Context7

Context7 MCP pulls up-to-date, version-specific documentation and code examples straight from the source ‚Äî and places them directly into your prompt.

Add `use context7` to your prompt in Cursor:

```txt
Create a Next.js middleware that checks for a valid JWT in cookies and redirects unauthenticated users to `/login`. use context7
```

```txt
Configure a Cloudflare Worker script to cache JSON API responses for five minutes. use context7
```

Context7 fetches up-to-date code examples and documentation right into your LLM&#039;s context.

- 1Ô∏è‚É£ Write your prompt naturally
- 2Ô∏è‚É£ Tell the LLM to `use context7`
- 3Ô∏è‚É£ Get working code answers

No tab-switching, no hallucinated APIs that don&#039;t exist, no outdated code generations.

## üìö Adding Projects

Check out our [project addition guide](./docs/adding-projects.md) to learn how to add (or update) your favorite libraries to Context7.

## üõ†Ô∏è Installation

### Requirements

- Node.js &gt;= v18.0.0
- Cursor, Windsurf, Claude Desktop or another MCP Client

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Installing via Smithery&lt;/b&gt;&lt;/summary&gt;

To install Context7 MCP Server for any client automatically via [Smithery](https://smithery.ai/server/@upstash/context7-mcp):

```bash
npx -y @smithery/cli@latest install @upstash/context7-mcp --client &lt;CLIENT_NAME&gt; --key &lt;YOUR_SMITHERY_KEY&gt;
```

You can find your Smithery key in the [Smithery.ai webpage](https://smithery.ai/server/@upstash/context7-mcp).

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Cursor&lt;/b&gt;&lt;/summary&gt;

Go to: `Settings` -&gt; `Cursor Settings` -&gt; `MCP` -&gt; `Add new global MCP server`

Pasting the following configuration into your Cursor `~/.cursor/mcp.json` file is the recommended approach. You may also install in a specific project by creating `.cursor/mcp.json` in your project folder. See [Cursor MCP docs](https://docs.cursor.com/context/model-context-protocol) for more info.

&gt; Since Cursor 1.0, you can click the install button below for instant one-click installation.

#### Cursor Remote Server Connection

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=context7&amp;config=eyJ1cmwiOiJodHRwczovL21jcC5jb250ZXh0Ny5jb20vbWNwIn0%3D)

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

#### Cursor Local Server Connection

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=context7&amp;config=eyJjb21tYW5kIjoibnB4IC15IEB1cHN0YXNoL2NvbnRleHQ3LW1jcCJ9)

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;details&gt;
&lt;summary&gt;Alternative: Use Bun&lt;/summary&gt;

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/install-mcp?name=context7&amp;config=eyJjb21tYW5kIjoiYnVueCAteSBAdXBzdGFzaC9jb250ZXh0Ny1tY3AifQ%3D%3D)

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;bunx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Alternative: Use Deno&lt;/summary&gt;

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/install-mcp?name=context7&amp;config=eyJjb21tYW5kIjoiZGVubyBydW4gLS1hbGxvdy1lbnYgLS1hbGxvdy1uZXQgbnBtOkB1cHN0YXNoL2NvbnRleHQ3LW1jcCJ9)

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;deno&quot;,
      &quot;args&quot;: [
        &quot;run&quot;,
        &quot;--allow-env=NO_DEPRECATION,TRACE_DEPRECATION&quot;,
        &quot;--allow-net&quot;,
        &quot;npm:@upstash/context7-mcp&quot;
      ]
    }
  }
}
```

&lt;/details&gt;

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Windsurf&lt;/b&gt;&lt;/summary&gt;

Add this to your Windsurf MCP config file. See [Windsurf MCP docs](https://docs.windsurf.com/windsurf/mcp) for more info.

#### Windsurf Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;serverUrl&quot;: &quot;https://mcp.context7.com/sse&quot;
    }
  }
}
```

#### Windsurf Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Trae&lt;/b&gt;&lt;/summary&gt;

Use the Add manually feature and fill in the JSON configuration information for that MCP server.
For more details, visit the [Trae documentation](https://docs.trae.ai/ide/model-context-protocol?_lang=en).

#### Trae Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

#### Trae Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in VS Code&lt;/b&gt;&lt;/summary&gt;

[&lt;img alt=&quot;Install in VS Code (npx)&quot; src=&quot;https://img.shields.io/badge/VS_Code-VS_Code?style=flat-square&amp;label=Install%20Context7%20MCP&amp;color=0098FF&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)
[&lt;img alt=&quot;Install in VS Code Insiders (npx)&quot; src=&quot;https://img.shields.io/badge/VS_Code_Insiders-VS_Code_Insiders?style=flat-square&amp;label=Install%20Context7%20MCP&amp;color=24bfa5&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode-insiders%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)

Add this to your VS Code MCP config file. See [VS Code MCP docs](https://code.visualstudio.com/docs/copilot/chat/mcp-servers) for more info.

#### VS Code Remote Server Connection

```json
&quot;mcp&quot;: {
  &quot;servers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;http&quot;,
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

#### VS Code Local Server Connection

```json
&quot;mcp&quot;: {
  &quot;servers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;stdio&quot;,
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Visual Studio 2022&lt;/b&gt;&lt;/summary&gt;

You can configure Context7 MCP in Visual Studio 2022 by following the [Visual Studio MCP Servers documentation](https://learn.microsoft.com/visualstudio/ide/mcp-servers?view=vs-2022).

Add this to your Visual Studio MCP config file (see the [Visual Studio docs](https://learn.microsoft.com/visualstudio/ide/mcp-servers?view=vs-2022) for details):

```json
{
  &quot;mcp&quot;: {
    &quot;servers&quot;: {
      &quot;context7&quot;: {
        &quot;type&quot;: &quot;http&quot;,
        &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
      }
    }
  }
}
```

Or, for a local server:

```json
{
  &quot;mcp&quot;: {
    &quot;servers&quot;: {
      &quot;context7&quot;: {
        &quot;type&quot;: &quot;stdio&quot;,
        &quot;command&quot;: &quot;npx&quot;,
        &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
      }
    }
  }
}
```

For more information and troubleshooting, refer to the [Visual Studio MCP Servers documentation](https://learn.microsoft.com/visualstudio/ide/mcp-servers?view=vs-2022).

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Zed&lt;/b&gt;&lt;/summary&gt;

It can be installed via [Zed Extensions](https://zed.dev/extensions?query=Context7) or you can add this to your Zed `settings.json`. See [Zed Context Server docs](https://zed.dev/docs/assistant/context-servers) for more info.

```json
{
  &quot;context_servers&quot;: {
    &quot;Context7&quot;: {
      &quot;command&quot;: {
        &quot;path&quot;: &quot;npx&quot;,
        &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
      },
      &quot;settings&quot;: {}
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Gemini CLI&lt;/b&gt;&lt;/summary&gt;

See [Gemini CLI Configuration](https://github.com/google-gemini/gemini-cli/blob/main/docs/cli/configuration.md) for details.

1.  Open the Gemini CLI settings file. The location is `~/.gemini/settings.json` (where `~` is your home directory).
2.  Add the following to the `mcpServers` object in your `settings.json` file:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;httpUrl&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

Or, for a local server:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

If the `mcpServers` object does not exist, create it.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Claude Code&lt;/b&gt;&lt;/summary&gt;

Run this command. See [Claude Code MCP docs](https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/tutorials#set-up-model-context-protocol-mcp) for more info.

#### Claude Code Remote Server Connection

```sh
claude mcp add --transport http context7 https://mcp.context7.com/mcp
```

Or using SSE transport:

```sh
claude mcp add --transport sse context7 https://mcp.context7.com/sse
```

#### Claude Code Local Server Connection

```sh
claude mcp add context7 -- npx -y @upstash/context7-mcp
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Claude Desktop&lt;/b&gt;&lt;/summary&gt;

Add this to your Claude Desktop `claude_desktop_config.json` file. See [Claude Desktop MCP docs](https://modelcontextprotocol.io/quickstart/user) for more info.

```json
{
  &quot;mcpServers&quot;: {
    &quot;Context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Crush&lt;/b&gt;&lt;/summary&gt;

Add this to your Crush configuration file. See [Crush MCP docs](https://github.com/charmbracelet/crush#mcps) for more info.

#### Crush Remote Server Connection (HTTP)

```json
{
  &quot;$schema&quot;: &quot;https://charm.land/crush.json&quot;,
  &quot;mcp&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;http&quot;,
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

#### Crush Remote Server Connection (SSE)

```json
{
  &quot;$schema&quot;: &quot;https://charm.land/crush.json&quot;,
  &quot;mcp&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;sse&quot;,
      &quot;url&quot;: &quot;https://mcp.context7.com/sse&quot;
    }
  }
}
```

#### Crush Local Server Connection

```json
{
  &quot;$schema&quot;: &quot;https://charm.land/crush.json&quot;,
  &quot;mcp&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;stdio&quot;,
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;
&lt;b&gt;Install in Cline&lt;/b&gt;
&lt;/summary&gt;

You can easily install Context7 through the [Cline MCP Server Marketplace](https://cline.bot/mcp-marketplace) by following these instructions:

1. Open **Cline**.
2. Click the hamburger menu icon (‚ò∞) to enter the **MCP Servers** section.
3. Use the search bar within the **Marketplace** tab to find _Context7_.
4. Click the **Install** button.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in BoltAI&lt;/b&gt;&lt;/summary&gt;

Open the &quot;Settings&quot; page of the app, navigate to &quot;Plugins,&quot; and enter the following JSON:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

Once saved, enter in the chat `get-library-docs` followed by your Context7 documentation ID (e.g., `get-library-docs /nuxt/ui`). More information is available on [BoltAI&#039;s Documentation site](https://docs.boltai.com/docs/plugins/mcp-servers). For BoltAI on iOS, [see this guide](https://docs.boltai.com/docs/boltai-mobile/mcp-servers).

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Using Docker&lt;/b&gt;&lt;/summary&gt;

If you prefer to run the MCP server in a Docker container:

1. **Build the Docker Image:**

   First, create a `Dockerfile` in the project root (or anywhere you prefer):

   &lt;details&gt;
   &lt;summary&gt;Click to see Dockerfile content&lt;/summary&gt;

   ```Dockerfile
   FROM node:18-alpine

   WORKDIR /app

   # Install the latest version globally
   RUN npm install -g @upstash/context7-mcp

   # Expose default port if needed (optional, depends on MCP client interaction)
   # EXPOSE 3000

   # Default command to run the server
   CMD [&quot;context7-mcp&quot;]
   ```

   &lt;/details&gt;

   Then, build the image using a tag (e.g., `context7-mcp`). **Make sure Docker Desktop (or the Docker daemon) is running.** Run the following command in the same directory where you saved the `Dockerfile`:

   ```bash
   docker build -t context7-mcp .
   ```

2. **Configure Your MCP Client:**

   Update your MCP client&#039;s configuration to use the Docker command.

   _Example for a cline_mcp_settings.json:_

   ```json
   {
     &quot;mcpServers&quot;: {
       &quot;–°ontext7&quot;: {
         &quot;autoApprove&quot;: [],
         &quot;disabled&quot;: false,
         &quot;timeout&quot;: 60,
         &quot;command&quot;: &quot;docker&quot;,
         &quot;args&quot;: [&quot;run&quot;, &quot;-i&quot;, &quot;--rm&quot;, &quot;context7-mcp&quot;],
         &quot;transportType&quot;: &quot;stdio&quot;
       }
     }
   }
   ```

   _Note: This is an example configuration. Please refer to the specific examples for your MCP client (like Cursor, VS Code, etc.) earlier in this README to adapt the structure (e.g., `mcpServers` vs `servers`). Also, ensure the image name in `args` matches the tag used during the `docker build` command._

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Windows&lt;/b&gt;&lt;/summary&gt;

The configuration on Windows is slightly different compared to Linux or macOS (_`Cline` is used in the example_). The same principle applies to other editors; refer to the configuration of `command` and `args`.

```json
{
  &quot;mcpServers&quot;: {
    &quot;github.com/upstash/context7-mcp&quot;: {
      &quot;command&quot;: &quot;cmd&quot;,
      &quot;args&quot;: [&quot;/c&quot;, &quot;npx&quot;, &quot;-y&quot;, &quot;@upstash/context7-mcp@latest&quot;],
      &quot;disabled&quot;: false,
      &quot;autoApprove&quot;: []
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Augment Code&lt;/b&gt;&lt;/summary&gt;

To configure Context7 MCP in Augment Code, you can use either the graphical interface or manual configuration.

### **A. Using the Augment Code UI**

1. Click the hamburger menu.
2. Select **Settings**.
3. Navigate to the **Tools** section.
4. Click the **+ Add MCP** button.
5. Enter the following command:

   ```
   npx -y @upstash/context7-mcp@latest
   ```

6. Name the MCP: **Context7**.
7. Click the **Add** button.

Once the MCP server is added, you can start using Context7&#039;s up-to-date code documentation features directly within Augment Code.

---

### **B. Manual Configuration**

1. Press Cmd/Ctrl Shift P or go to the hamburger menu in the Augment panel
2. Select Edit Settings
3. Under Advanced, click Edit in settings.json
4. Add the server configuration to the `mcpServers` array in the `augment.advanced` object

&quot;augment.advanced&quot;: {
&quot;mcpServers&quot;: [
{
&quot;name&quot;: &quot;context7&quot;,
&quot;command&quot;: &quot;npx&quot;,
&quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
}
]
}

Once the MCP server is added, restart your editor. If you receive any errors, check the syntax to make sure closing brackets or commas are not missing.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Roo Code&lt;/b&gt;&lt;/summary&gt;

Add this to your Roo Code MCP configuration file. See [Roo Code MCP docs](https://docs.roocode.com/features/mcp/using-mcp-in-roo) for more info.

#### Roo Code Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;streamable-http&quot;,
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

#### Roo Code Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Zencoder&lt;/b&gt;&lt;/summary&gt;

To configure Context7 MCP in Zencoder, follow these steps:

1. Go to the Zencoder menu (...)
2. From the dropdown menu, select Agent tools
3. Click on the Add custom MCP
4. Add the name and server configuration from below, and make sure to hit the Install button

```json
{
  &quot;command&quot;: &quot;npx&quot;,
  &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp@latest&quot;]
}
```

Once the MCP server is added, you can easily continue using it.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Amazon Q Developer CLI&lt;/b&gt;&lt;/summary&gt;

Add this to your Amazon Q Developer CLI configuration file. See [Amazon Q Developer CLI docs](https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line-mcp-configuration.html) for more details.

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp@latest&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Qodo Gen&lt;/b&gt;&lt;/summary&gt;

See [Qodo Gen docs](https://docs.qodo.ai/qodo-documentation/qodo-gen/qodo-gen-chat/agentic-mode/agentic-tools-mcps) for more details.

1. Open Qodo Gen chat panel in VSCode or IntelliJ.
2. Click Connect more tools.
3. Click + Add new MCP.
4. Add the following configuration:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in JetBrains AI Assistant&lt;/b&gt;&lt;/summary&gt;

See [JetBrains AI Assistant Documentation](https://www.jetbrains.com/help/ai-assistant/configure-an-mcp-server.html) for more details.

1. In JetBrains IDEs go to `Settings` -&gt; `Tools` -&gt; `AI Assistant` -&gt; `Model Context Protocol (MCP)`
2. Click `+ Add`.
3. Click on `Command` in the top-left corner of the dialog and select the As JSON option from the list
4. Add this configuration and click `OK`

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

5. Click `Apply` to save changes.
6. The same way context7 could be added for JetBrains Junie in `Settings` -&gt; `Tools` -&gt; `Junie` -&gt; `MCP Settings`

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Warp&lt;/b&gt;&lt;/summary&gt;

See [Warp Model Context Protocol Documentation](https://docs.warp.dev/knowledge-and-collaboration/mcp#adding-an-mcp-server) for details.

1. Navigate `Settings` &gt; `AI` &gt; `Manage MCP servers`.
2. Add a new MCP server by clicking the `+ Add` button.
3. Paste the configuration given below:

```json
{
  &quot;Context7&quot;: {
    &quot;command&quot;: &quot;npx&quot;,
    &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;],
    &quot;env&quot;: {},
    &quot;working_directory&quot;: null,
    &quot;start_on_launch&quot;: true
  }
}
```

4. Click `Save` to apply the changes.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Opencode&lt;/b&gt;&lt;/sum

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[copy/v86]]></title>
            <link>https://github.com/copy/v86</link>
            <guid>https://github.com/copy/v86</guid>
            <pubDate>Sun, 10 Aug 2025 00:05:21 GMT</pubDate>
            <description><![CDATA[x86 PC emulator and x86-to-wasm JIT, running in the browser]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/copy/v86">copy/v86</a></h1>
            <p>x86 PC emulator and x86-to-wasm JIT, running in the browser</p>
            <p>Language: JavaScript</p>
            <p>Stars: 21,137</p>
            <p>Forks: 1,549</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[is-a-dev/register]]></title>
            <link>https://github.com/is-a-dev/register</link>
            <guid>https://github.com/is-a-dev/register</guid>
            <pubDate>Sun, 10 Aug 2025 00:05:20 GMT</pubDate>
            <description><![CDATA[Grab your own sweet-looking '.is-a.dev' subdomain.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/is-a-dev/register">is-a-dev/register</a></h1>
            <p>Grab your own sweet-looking '.is-a.dev' subdomain.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,768</p>
            <p>Forks: 12,926</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
   &lt;img alt=&quot;is-a.dev Banner&quot; src=&quot;https://raw.githubusercontent.com/is-a-dev/register/main/media/banner.png&quot;&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
   &lt;img alt=&quot;Domains&quot; src=&quot;https://img.shields.io/github/directory-file-count/is-a-dev/register/domains?color=5c46eb&amp;label=domains&amp;style=for-the-badge&quot;&gt;
   &lt;img alt=&quot;Open Pull Requests&quot; src=&quot;https://img.shields.io/github/issues-raw/is-a-dev/register?color=5c46eb&amp;label=issues&amp;style=for-the-badge&quot;&gt;
   &lt;img alt=&quot;Open Issues&quot; src=&quot;https://img.shields.io/github/issues-pr-raw/is-a-dev/register?color=5c46eb&amp;label=pull%20requests&amp;style=for-the-badge&quot;&gt;
   &lt;br&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;is-a.dev&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;&lt;strong&gt;is-a.dev&lt;/strong&gt; is a service that allows developers to get a sweet-looking &lt;code&gt;.is-a.dev&lt;/code&gt; subdomain for their personal websites.&lt;/p&gt;

## Announcements &amp; Status Updates
Please join our [Discord server](https://discord.gg/is-a-dev-830872854677422150) for announcements, updates &amp; upgrades, and downtime notifications regarding the service.
Not all of these will be posted on GitHub[^1], however they will always be posted in our Discord server.

[^1]: We usually only post announcements on GitHub in the case of a serious incident. In that case, you&#039;ll likely see it at the top of this README file.

&lt;a href=&quot;https://discord.gg/is-a-dev-830872854677422150&quot;&gt;&lt;img alt=&quot;Discord Server&quot; src=&quot;https://invidget.wdh.app/is-a-dev-830872854677422150&quot;&gt;&lt;/a&gt;

# Register
&gt; If you want a visual guide, check out [this blog post](https://wdh.gg/tX3ghge).

- [Fork](https://github.com/is-a-dev/register/fork) this repository.
- [Read the documentation](https://docs.is-a.dev).
   - If you are applying for NS records please read [this](#ns-records).
- Your pull request will be reviewed and merged. *Keep an eye on it in case changes are needed!*
- After the pull request is merged, your DNS records should be published with-in a few minutes.
- Enjoy your new `.is-a.dev` subdomain! Please consider leaving us a star ‚≠êÔ∏è to help support us!

### NS Records
When applying for NS records, please be aware we already support a [wide range of DNS records](https://docs.is-a.dev/faq/#which-dns-record-types-are-supported), so you likely do not need them. 

In your PR, please explain why you need NS records, including examples, to help mitigate potential abuse. Refer to the [FAQ](https://docs.is-a.dev/faq/#who-can-use-ns-records) for guidelines on allowed usage.

***Pull requests adding NS records without sufficient reasoning will be closed.***

&gt; Also see: [Why are NS records restricted?](https://docs.is-a.dev/faq/#why-are-ns-records-restricted)

## Report Abuse
If you find any subdomains being used for abusive purposes, please report them by [creating an issue](https://github.com/is-a-dev/register/issues/new?assignees=&amp;labels=report-abuse&amp;projects=&amp;template=report-abuse.md&amp;title=Report+abuse) with the relevant evidence.

---

We are proud to announce that we are supported by Cloudflare&#039;s [Project Alexandria](https://www.cloudflare.com/lp/project-alexandria) sponsorship program. We would not be able to operate without their help! üíñ

&lt;a href=&quot;https://www.cloudflare.com&quot;&gt;
   &lt;img alt=&quot;Cloudflare Logo&quot; src=&quot;https://raw.githubusercontent.com/is-a-dev/register/main/media/cloudflare.png&quot; height=&quot;96&quot;&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[open-webui/open-webui]]></title>
            <link>https://github.com/open-webui/open-webui</link>
            <guid>https://github.com/open-webui/open-webui</guid>
            <pubDate>Sun, 10 Aug 2025 00:05:19 GMT</pubDate>
            <description><![CDATA[User-friendly AI Interface (Supports Ollama, OpenAI API, ...)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/open-webui/open-webui">open-webui/open-webui</a></h1>
            <p>User-friendly AI Interface (Supports Ollama, OpenAI API, ...)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 105,987</p>
            <p>Forks: 14,281</p>
            <p>Stars today: 139 stars today</p>
            <h2>README</h2><pre># Open WebUI üëã

![GitHub stars](https://img.shields.io/github/stars/open-webui/open-webui?style=social)
![GitHub forks](https://img.shields.io/github/forks/open-webui/open-webui?style=social)
![GitHub watchers](https://img.shields.io/github/watchers/open-webui/open-webui?style=social)
![GitHub repo size](https://img.shields.io/github/repo-size/open-webui/open-webui)
![GitHub language count](https://img.shields.io/github/languages/count/open-webui/open-webui)
![GitHub top language](https://img.shields.io/github/languages/top/open-webui/open-webui)
![GitHub last commit](https://img.shields.io/github/last-commit/open-webui/open-webui?color=red)
[![Discord](https://img.shields.io/badge/Discord-Open_WebUI-blue?logo=discord&amp;logoColor=white)](https://discord.gg/5rJgQTnV4s)
[![](https://img.shields.io/static/v1?label=Sponsor&amp;message=%E2%9D%A4&amp;logo=GitHub&amp;color=%23fe8e86)](https://github.com/sponsors/tjbck)

**Open WebUI is an [extensible](https://docs.openwebui.com/features/plugin/), feature-rich, and user-friendly self-hosted AI platform designed to operate entirely offline.** It supports various LLM runners like **Ollama** and **OpenAI-compatible APIs**, with **built-in inference engine** for RAG, making it a **powerful AI deployment solution**.

Passionate about open-source AI? [Join our team ‚Üí](https://careers.openwebui.com/)

![Open WebUI Demo](./demo.gif)

&gt; [!TIP]  
&gt; **Looking for an [Enterprise Plan](https://docs.openwebui.com/enterprise)?** ‚Äì **[Speak with Our Sales Team Today!](mailto:sales@openwebui.com)**
&gt;
&gt; Get **enhanced capabilities**, including **custom theming and branding**, **Service Level Agreement (SLA) support**, **Long-Term Support (LTS) versions**, and **more!**

For more information, be sure to check out our [Open WebUI Documentation](https://docs.openwebui.com/).

## Key Features of Open WebUI ‚≠ê

- üöÄ **Effortless Setup**: Install seamlessly using Docker or Kubernetes (kubectl, kustomize or helm) for a hassle-free experience with support for both `:ollama` and `:cuda` tagged images.

- ü§ù **Ollama/OpenAI API Integration**: Effortlessly integrate OpenAI-compatible APIs for versatile conversations alongside Ollama models. Customize the OpenAI API URL to link with **LMStudio, GroqCloud, Mistral, OpenRouter, and more**.

- üõ°Ô∏è **Granular Permissions and User Groups**: By allowing administrators to create detailed user roles and permissions, we ensure a secure user environment. This granularity not only enhances security but also allows for customized user experiences, fostering a sense of ownership and responsibility amongst users.

- üîÑ **SCIM 2.0 Support**: Enterprise-grade user and group provisioning through SCIM 2.0 protocol, enabling seamless integration with identity providers like Okta, Azure AD, and Google Workspace for automated user lifecycle management.

- üì± **Responsive Design**: Enjoy a seamless experience across Desktop PC, Laptop, and Mobile devices.

- üì± **Progressive Web App (PWA) for Mobile**: Enjoy a native app-like experience on your mobile device with our PWA, providing offline access on localhost and a seamless user interface.

- ‚úíÔ∏èüî¢ **Full Markdown and LaTeX Support**: Elevate your LLM experience with comprehensive Markdown and LaTeX capabilities for enriched interaction.

- üé§üìπ **Hands-Free Voice/Video Call**: Experience seamless communication with integrated hands-free voice and video call features, allowing for a more dynamic and interactive chat environment.

- üõ†Ô∏è **Model Builder**: Easily create Ollama models via the Web UI. Create and add custom characters/agents, customize chat elements, and import models effortlessly through [Open WebUI Community](https://openwebui.com/) integration.

- üêç **Native Python Function Calling Tool**: Enhance your LLMs with built-in code editor support in the tools workspace. Bring Your Own Function (BYOF) by simply adding your pure Python functions, enabling seamless integration with LLMs.

- üìö **Local RAG Integration**: Dive into the future of chat interactions with groundbreaking Retrieval Augmented Generation (RAG) support. This feature seamlessly integrates document interactions into your chat experience. You can load documents directly into the chat or add files to your document library, effortlessly accessing them using the `#` command before a query.

- üîç **Web Search for RAG**: Perform web searches using providers like `SearXNG`, `Google PSE`, `Brave Search`, `serpstack`, `serper`, `Serply`, `DuckDuckGo`, `TavilySearch`, `SearchApi` and `Bing` and inject the results directly into your chat experience.

- üåê **Web Browsing Capability**: Seamlessly integrate websites into your chat experience using the `#` command followed by a URL. This feature allows you to incorporate web content directly into your conversations, enhancing the richness and depth of your interactions.

- üé® **Image Generation Integration**: Seamlessly incorporate image generation capabilities using options such as AUTOMATIC1111 API or ComfyUI (local), and OpenAI&#039;s DALL-E (external), enriching your chat experience with dynamic visual content.

- ‚öôÔ∏è **Many Models Conversations**: Effortlessly engage with various models simultaneously, harnessing their unique strengths for optimal responses. Enhance your experience by leveraging a diverse set of models in parallel.

- üîê **Role-Based Access Control (RBAC)**: Ensure secure access with restricted permissions; only authorized individuals can access your Ollama, and exclusive model creation/pulling rights are reserved for administrators.

- üåêüåç **Multilingual Support**: Experience Open WebUI in your preferred language with our internationalization (i18n) support. Join us in expanding our supported languages! We&#039;re actively seeking contributors!

- üß© **Pipelines, Open WebUI Plugin Support**: Seamlessly integrate custom logic and Python libraries into Open WebUI using [Pipelines Plugin Framework](https://github.com/open-webui/pipelines). Launch your Pipelines instance, set the OpenAI URL to the Pipelines URL, and explore endless possibilities. [Examples](https://github.com/open-webui/pipelines/tree/main/examples) include **Function Calling**, User **Rate Limiting** to control access, **Usage Monitoring** with tools like Langfuse, **Live Translation with LibreTranslate** for multilingual support, **Toxic Message Filtering** and much more.

- üåü **Continuous Updates**: We are committed to improving Open WebUI with regular updates, fixes, and new features.

Want to learn more about Open WebUI&#039;s features? Check out our [Open WebUI documentation](https://docs.openwebui.com/features) for a comprehensive overview!

## Sponsors üôå

#### Emerald

&lt;table&gt;
  &lt;!-- &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://n8n.io/&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/n8n.png&quot; alt=&quot;n8n&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt; ‚Ä¢ Does your interface have a backend yet?&lt;br&gt;Try &lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt; --&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;utm_medium=paid-ad-placement&amp;utm_campaign=OpenWebUI-Docs&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/tailscale.png&quot; alt=&quot;Tailscale&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;utm_medium=paid-ad-placement&amp;utm_campaign=OpenWebUI-Docs&quot;&gt;Tailscale&lt;/a&gt; ‚Ä¢ Connect self-hosted AI to any device with Tailscale
    &lt;/td&gt;
  &lt;/tr&gt;
   &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://warp.dev/open-webui&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/warp.png&quot; alt=&quot;Warp&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://warp.dev/open-webui&quot;&gt;Warp&lt;/a&gt; ‚Ä¢ The intelligent terminal for developers
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

---

We are incredibly grateful for the generous support of our sponsors. Their contributions help us to maintain and improve our project, ensuring we can continue to deliver quality work to our community. Thank you!

## How to Install üöÄ

### Installation via Python pip üêç

Open WebUI can be installed using pip, the Python package installer. Before proceeding, ensure you&#039;re using **Python 3.11** to avoid compatibility issues.

1. **Install Open WebUI**:
   Open your terminal and run the following command to install Open WebUI:

   ```bash
   pip install open-webui
   ```

2. **Running Open WebUI**:
   After installation, you can start Open WebUI by executing:

   ```bash
   open-webui serve
   ```

This will start the Open WebUI server, which you can access at [http://localhost:8080](http://localhost:8080)

### Quick Start with Docker üê≥

&gt; [!NOTE]  
&gt; Please note that for certain Docker environments, additional configurations might be needed. If you encounter any connection issues, our detailed guide on [Open WebUI Documentation](https://docs.openwebui.com/) is ready to assist you.

&gt; [!WARNING]
&gt; When using Docker to install Open WebUI, make sure to include the `-v open-webui:/app/backend/data` in your Docker command. This step is crucial as it ensures your database is properly mounted and prevents any loss of data.

&gt; [!TIP]  
&gt; If you wish to utilize Open WebUI with Ollama included or CUDA acceleration, we recommend utilizing our official images tagged with either `:cuda` or `:ollama`. To enable CUDA, you must install the [Nvidia CUDA container toolkit](https://docs.nvidia.com/dgx/nvidia-container-runtime-upgrade/) on your Linux/WSL system.

### Installation with Default Configuration

- **If Ollama is on your computer**, use this command:

  ```bash
  docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **If Ollama is on a Different Server**, use this command:

  To connect to Ollama on another server, change the `OLLAMA_BASE_URL` to the server&#039;s URL:

  ```bash
  docker run -d -p 3000:8080 -e OLLAMA_BASE_URL=https://example.com -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **To run Open WebUI with Nvidia GPU support**, use this command:

  ```bash
  docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda
  ```

### Installation for OpenAI API Usage Only

- **If you&#039;re only using OpenAI API**, use this command:

  ```bash
  docker run -d -p 3000:8080 -e OPENAI_API_KEY=your_secret_key -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

### Installing Open WebUI with Bundled Ollama Support

This installation method uses a single container image that bundles Open WebUI with Ollama, allowing for a streamlined setup via a single command. Choose the appropriate command based on your hardware setup:

- **With GPU Support**:
  Utilize GPU resources by running the following command:

  ```bash
  docker run -d -p 3000:8080 --gpus=all -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

- **For CPU Only**:
  If you&#039;re not using a GPU, use this command instead:

  ```bash
  docker run -d -p 3000:8080 -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

Both commands facilitate a built-in, hassle-free installation of both Open WebUI and Ollama, ensuring that you can get everything up and running swiftly.

After installation, you can access Open WebUI at [http://localhost:3000](http://localhost:3000). Enjoy! üòÑ

### Other Installation Methods

We offer various installation alternatives, including non-Docker native installation methods, Docker Compose, Kustomize, and Helm. Visit our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/) or join our [Discord community](https://discord.gg/5rJgQTnV4s) for comprehensive guidance.

Look at the [Local Development Guide](https://docs.openwebui.com/getting-started/advanced-topics/development) for instructions on setting up a local development environment.

### Troubleshooting

Encountering connection issues? Our [Open WebUI Documentation](https://docs.openwebui.com/troubleshooting/) has got you covered. For further assistance and to join our vibrant community, visit the [Open WebUI Discord](https://discord.gg/5rJgQTnV4s).

#### Open WebUI: Server Connection Error

If you&#039;re experiencing connection issues, it‚Äôs often due to the WebUI docker container not being able to reach the Ollama server at 127.0.0.1:11434 (host.docker.internal:11434) inside the container . Use the `--network=host` flag in your docker command to resolve this. Note that the port changes from 3000 to 8080, resulting in the link: `http://localhost:8080`.

**Example Docker Command**:

```bash
docker run -d --network=host -v open-webui:/app/backend/data -e OLLAMA_BASE_URL=http://127.0.0.1:11434 --name open-webui --restart always ghcr.io/open-webui/open-webui:main
```

### Keeping Your Docker Installation Up-to-Date

In case you want to update your local Docker installation to the latest version, you can do it with [Watchtower](https://containrrr.dev/watchtower/):

```bash
docker run --rm --volume /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --run-once open-webui
```

In the last part of the command, replace `open-webui` with your container name if it is different.

Check our Updating Guide available in our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/updating).

### Using the Dev Branch üåô

&gt; [!WARNING]
&gt; The `:dev` branch contains the latest unstable features and changes. Use it at your own risk as it may have bugs or incomplete features.

If you want to try out the latest bleeding-edge features and are okay with occasional instability, you can use the `:dev` tag like this:

```bash
docker run -d -p 3000:8080 -v open-webui:/app/backend/data --name open-webui --add-host=host.docker.internal:host-gateway --restart always ghcr.io/open-webui/open-webui:dev
```

### Offline Mode

If you are running Open WebUI in an offline environment, you can set the `HF_HUB_OFFLINE` environment variable to `1` to prevent attempts to download models from the internet.

```bash
export HF_HUB_OFFLINE=1
```

## What&#039;s Next? üåü

Discover upcoming features on our roadmap in the [Open WebUI Documentation](https://docs.openwebui.com/roadmap/).

## License üìú

This project is licensed under the [Open WebUI License](LICENSE), a revised BSD-3-Clause license. You receive all the same rights as the classic BSD-3 license: you can use, modify, and distribute the software, including in proprietary and commercial products, with minimal restrictions. The only additional requirement is to preserve the &quot;Open WebUI&quot; branding, as detailed in the LICENSE file. For full terms, see the [LICENSE](LICENSE) document. üìÑ

## Support üí¨

If you have any questions, suggestions, or need assistance, please open an issue or join our
[Open WebUI Discord community](https://discord.gg/5rJgQTnV4s) to connect with us! ü§ù

## Star History

&lt;a href=&quot;https://star-history.com/#open-webui/open-webui&amp;Date&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&amp;theme=dark&quot; /&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
    &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

---

Created by [Timothy Jaeryang Baek](https://github.com/tjbck) - Let&#039;s make Open WebUI even more amazing together! üí™
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[songquanpeng/one-api]]></title>
            <link>https://github.com/songquanpeng/one-api</link>
            <guid>https://github.com/songquanpeng/one-api</guid>
            <pubDate>Sun, 10 Aug 2025 00:05:18 GMT</pubDate>
            <description><![CDATA[LLM API ÁÆ°ÁêÜ & ÂàÜÂèëÁ≥ªÁªüÔºåÊîØÊåÅ OpenAI„ÄÅAzure„ÄÅAnthropic Claude„ÄÅGoogle Gemini„ÄÅDeepSeek„ÄÅÂ≠óËäÇË±ÜÂåÖ„ÄÅChatGLM„ÄÅÊñáÂøÉ‰∏ÄË®Ä„ÄÅËÆØÈ£ûÊòüÁÅ´„ÄÅÈÄö‰πâÂçÉÈóÆ„ÄÅ360 Êô∫ËÑë„ÄÅËÖæËÆØÊ∑∑ÂÖÉÁ≠â‰∏ªÊµÅÊ®°ÂûãÔºåÁªü‰∏Ä API ÈÄÇÈÖçÔºåÂèØÁî®‰∫é key ÁÆ°ÁêÜ‰∏é‰∫åÊ¨°ÂàÜÂèë„ÄÇÂçïÂèØÊâßË°åÊñá‰ª∂ÔºåÊèê‰æõ Docker ÈïúÂÉèÔºå‰∏ÄÈîÆÈÉ®ÁΩ≤ÔºåÂºÄÁÆ±Âç≥Áî®„ÄÇLLM API management & key redistribution system, unifying multiple providers under a single API. Single binary, Docker-ready, with an English UI.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/songquanpeng/one-api">songquanpeng/one-api</a></h1>
            <p>LLM API ÁÆ°ÁêÜ & ÂàÜÂèëÁ≥ªÁªüÔºåÊîØÊåÅ OpenAI„ÄÅAzure„ÄÅAnthropic Claude„ÄÅGoogle Gemini„ÄÅDeepSeek„ÄÅÂ≠óËäÇË±ÜÂåÖ„ÄÅChatGLM„ÄÅÊñáÂøÉ‰∏ÄË®Ä„ÄÅËÆØÈ£ûÊòüÁÅ´„ÄÅÈÄö‰πâÂçÉÈóÆ„ÄÅ360 Êô∫ËÑë„ÄÅËÖæËÆØÊ∑∑ÂÖÉÁ≠â‰∏ªÊµÅÊ®°ÂûãÔºåÁªü‰∏Ä API ÈÄÇÈÖçÔºåÂèØÁî®‰∫é key ÁÆ°ÁêÜ‰∏é‰∫åÊ¨°ÂàÜÂèë„ÄÇÂçïÂèØÊâßË°åÊñá‰ª∂ÔºåÊèê‰æõ Docker ÈïúÂÉèÔºå‰∏ÄÈîÆÈÉ®ÁΩ≤ÔºåÂºÄÁÆ±Âç≥Áî®„ÄÇLLM API management & key redistribution system, unifying multiple providers under a single API. Single binary, Docker-ready, with an English UI.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 26,606</p>
            <p>Forks: 5,340</p>
            <p>Stars today: 25 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;right&quot;&gt;
   &lt;strong&gt;‰∏≠Êñá&lt;/strong&gt; | &lt;a href=&quot;./README.en.md&quot;&gt;English&lt;/a&gt; | &lt;a href=&quot;./README.ja.md&quot;&gt;Êó•Êú¨Ë™û&lt;/a&gt;
&lt;/p&gt;


&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/songquanpeng/one-api&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/songquanpeng/one-api/main/web/default/public/logo.png&quot; width=&quot;150&quot; height=&quot;150&quot; alt=&quot;one-api logo&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;

# One API

_‚ú® ÈÄöËøáÊ†áÂáÜÁöÑ OpenAI API Ê†ºÂºèËÆøÈóÆÊâÄÊúâÁöÑÂ§ßÊ®°ÂûãÔºåÂºÄÁÆ±Âç≥Áî® ‚ú®_

&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://raw.githubusercontent.com/songquanpeng/one-api/main/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/license/songquanpeng/one-api?color=brightgreen&quot; alt=&quot;license&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/songquanpeng/one-api/releases/latest&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/v/release/songquanpeng/one-api?color=brightgreen&amp;include_prereleases&quot; alt=&quot;release&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://hub.docker.com/repository/docker/justsong/one-api&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/docker/pulls/justsong/one-api?color=brightgreen&quot; alt=&quot;docker pull&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/songquanpeng/one-api/releases/latest&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/downloads/songquanpeng/one-api/total?color=brightgreen&amp;include_prereleases&quot; alt=&quot;release&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://goreportcard.com/report/github.com/songquanpeng/one-api&quot;&gt;
    &lt;img src=&quot;https://goreportcard.com/badge/github.com/songquanpeng/one-api&quot; alt=&quot;GoReportCard&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#ÈÉ®ÁΩ≤&quot;&gt;ÈÉ®ÁΩ≤ÊïôÁ®ã&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#‰ΩøÁî®ÊñπÊ≥ï&quot;&gt;‰ΩøÁî®ÊñπÊ≥ï&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://github.com/songquanpeng/one-api/issues&quot;&gt;ÊÑèËßÅÂèçÈ¶à&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#Êà™ÂõæÂ±ïÁ§∫&quot;&gt;Êà™ÂõæÂ±ïÁ§∫&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://openai.justsong.cn/&quot;&gt;Âú®Á∫øÊºîÁ§∫&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#Â∏∏ËßÅÈóÆÈ¢ò&quot;&gt;Â∏∏ËßÅÈóÆÈ¢ò&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#Áõ∏ÂÖ≥È°πÁõÆ&quot;&gt;Áõ∏ÂÖ≥È°πÁõÆ&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://iamazing.cn/page/reward&quot;&gt;ËµûËµèÊîØÊåÅ&lt;/a&gt;
&lt;/p&gt;

&gt; [!NOTE]
&gt; Êú¨È°πÁõÆ‰∏∫ÂºÄÊ∫êÈ°πÁõÆÔºå‰ΩøÁî®ËÄÖÂøÖÈ°ªÂú®ÈÅµÂæ™ OpenAI ÁöÑ[‰ΩøÁî®Êù°Ê¨æ](https://openai.com/policies/terms-of-use)‰ª•Âèä**Ê≥ïÂæãÊ≥ïËßÑ**ÁöÑÊÉÖÂÜµ‰∏ã‰ΩøÁî®Ôºå‰∏çÂæóÁî®‰∫éÈùûÊ≥ïÁî®ÈÄî„ÄÇ
&gt;
&gt; Ê†πÊçÆ[„ÄäÁîüÊàêÂºè‰∫∫Â∑•Êô∫ËÉΩÊúçÂä°ÁÆ°ÁêÜÊöÇË°åÂäûÊ≥ï„Äã](http://www.cac.gov.cn/2023-07/13/c_1690898327029107.htm)ÁöÑË¶ÅÊ±ÇÔºåËØ∑ÂãøÂØπ‰∏≠ÂõΩÂú∞Âå∫ÂÖ¨‰ºóÊèê‰æõ‰∏ÄÂàáÊú™ÁªèÂ§áÊ°àÁöÑÁîüÊàêÂºè‰∫∫Â∑•Êô∫ËÉΩÊúçÂä°„ÄÇ

&gt; [!NOTE]
&gt; Á®≥ÂÆöÁâà / È¢ÑËßàÁâàÈïúÂÉèÂú∞ÂùÄÔºö[justsong/one-api](https://hub.docker.com/repository/docker/justsong/one-api)
&gt; ÊàñËÄÖ [ghcr.io/songquanpeng/one-api](https://github.com/songquanpeng/one-api/pkgs/container/one-api)
&gt;
&gt; alpha ÁâàÈïúÂÉèÂú∞ÂùÄÔºö[justsong/one-api-alpha](https://hub.docker.com/repository/docker/justsong/one-api-alpha)
&gt; ÊàñËÄÖ [ghcr.io/songquanpeng/one-api-alpha](https://github.com/songquanpeng/one-api/pkgs/container/one-api-alpha)

&gt; [!WARNING]
&gt; ‰ΩøÁî® root Áî®Êà∑ÂàùÊ¨°ÁôªÂΩïÁ≥ªÁªüÂêéÔºåÂä°ÂøÖ‰øÆÊîπÈªòËÆ§ÂØÜÁ†Å `123456`ÔºÅ

## ÂäüËÉΩ
1. ÊîØÊåÅÂ§öÁßçÂ§ßÊ®°ÂûãÔºö
   + [x] [OpenAI ChatGPT Á≥ªÂàóÊ®°Âûã](https://platform.openai.com/docs/guides/gpt/chat-completions-api)ÔºàÊîØÊåÅ [Azure OpenAI API](https://learn.microsoft.com/en-us/azure/ai-services/openai/reference)Ôºâ
   + [x] [Anthropic Claude Á≥ªÂàóÊ®°Âûã](https://anthropic.com) (ÊîØÊåÅ AWS Claude)
   + [x] [Google PaLM2/Gemini Á≥ªÂàóÊ®°Âûã](https://developers.generativeai.google)
   + [x] [Mistral Á≥ªÂàóÊ®°Âûã](https://mistral.ai/)
   + [x] [Â≠óËäÇË∑≥Âä®Ë±ÜÂåÖÂ§ßÊ®°ÂûãÔºàÁÅ´Â±±ÂºïÊìéÔºâ](https://www.volcengine.com/experience/ark?utm_term=202502dsinvite&amp;ac=DSASUQY5&amp;rc=2QXCA1VI)
   + [x] [ÁôæÂ∫¶ÊñáÂøÉ‰∏ÄË®ÄÁ≥ªÂàóÊ®°Âûã](https://cloud.baidu.com/doc/WENXINWORKSHOP/index.html)
   + [x] [ÈòøÈáåÈÄö‰πâÂçÉÈóÆÁ≥ªÂàóÊ®°Âûã](https://help.aliyun.com/document_detail/2400395.html)
   + [x] [ËÆØÈ£ûÊòüÁÅ´ËÆ§Áü•Â§ßÊ®°Âûã](https://www.xfyun.cn/doc/spark/Web.html)
   + [x] [Êô∫Ë∞± ChatGLM Á≥ªÂàóÊ®°Âûã](https://bigmodel.cn)
   + [x] [360 Êô∫ËÑë](https://ai.360.cn)
   + [x] [ËÖæËÆØÊ∑∑ÂÖÉÂ§ßÊ®°Âûã](https://cloud.tencent.com/document/product/1729)
   + [x] [Moonshot AI](https://platform.moonshot.cn/)
   + [x] [ÁôæÂ∑ùÂ§ßÊ®°Âûã](https://platform.baichuan-ai.com)
   + [x] [MINIMAX](https://api.minimax.chat/)
   + [x] [Groq](https://wow.groq.com/)
   + [x] [Ollama](https://github.com/ollama/ollama)
   + [x] [Èõ∂‰∏Ä‰∏áÁâ©](https://platform.lingyiwanwu.com/)
   + [x] [Èò∂Ë∑ÉÊòüËæ∞](https://platform.stepfun.com/)
   + [x] [Coze](https://www.coze.com/)
   + [x] [Cohere](https://cohere.com/)
   + [x] [DeepSeek](https://www.deepseek.com/)
   + [x] [Cloudflare Workers AI](https://developers.cloudflare.com/workers-ai/)
   + [x] [DeepL](https://www.deepl.com/)
   + [x] [together.ai](https://www.together.ai/)
   + [x] [novita.ai](https://www.novita.ai/)
   + [x] [Á°ÖÂü∫ÊµÅÂä® SiliconCloud](https://cloud.siliconflow.cn/i/rKXmRobW)
   + [x] [xAI](https://x.ai/)
2. ÊîØÊåÅÈÖçÁΩÆÈïúÂÉè‰ª•Âèä‰ºóÂ§ö[Á¨¨‰∏âÊñπ‰ª£ÁêÜÊúçÂä°](https://iamazing.cn/page/openai-api-third-party-services)„ÄÇ
3. ÊîØÊåÅÈÄöËøá**Ë¥üËΩΩÂùáË°°**ÁöÑÊñπÂºèËÆøÈóÆÂ§ö‰∏™Ê∏†ÈÅì„ÄÇ
4. ÊîØÊåÅ **stream Ê®°Âºè**ÔºåÂèØ‰ª•ÈÄöËøáÊµÅÂºè‰º†ËæìÂÆûÁé∞ÊâìÂ≠óÊú∫ÊïàÊûú„ÄÇ
5. ÊîØÊåÅ**Â§öÊú∫ÈÉ®ÁΩ≤**Ôºå[ËØ¶ËßÅÊ≠§Â§Ñ](#Â§öÊú∫ÈÉ®ÁΩ≤)„ÄÇ
6. ÊîØÊåÅ**‰ª§ÁâåÁÆ°ÁêÜ**ÔºåËÆæÁΩÆ‰ª§ÁâåÁöÑËøáÊúüÊó∂Èó¥„ÄÅÈ¢ùÂ∫¶„ÄÅÂÖÅËÆ∏ÁöÑ IP ËåÉÂõ¥‰ª•ÂèäÂÖÅËÆ∏ÁöÑÊ®°ÂûãËÆøÈóÆ„ÄÇ
7. ÊîØÊåÅ**ÂÖëÊç¢Á†ÅÁÆ°ÁêÜ**ÔºåÊîØÊåÅÊâπÈáèÁîüÊàêÂíåÂØºÂá∫ÂÖëÊç¢Á†ÅÔºåÂèØ‰ΩøÁî®ÂÖëÊç¢Á†Å‰∏∫Ë¥¶Êà∑ËøõË°åÂÖÖÂÄº„ÄÇ
8. ÊîØÊåÅ**Ê∏†ÈÅìÁÆ°ÁêÜ**ÔºåÊâπÈáèÂàõÂª∫Ê∏†ÈÅì„ÄÇ
9. ÊîØÊåÅ**Áî®Êà∑ÂàÜÁªÑ**‰ª•Âèä**Ê∏†ÈÅìÂàÜÁªÑ**ÔºåÊîØÊåÅ‰∏∫‰∏çÂêåÂàÜÁªÑËÆæÁΩÆ‰∏çÂêåÁöÑÂÄçÁéá„ÄÇ
10. ÊîØÊåÅÊ∏†ÈÅì**ËÆæÁΩÆÊ®°ÂûãÂàóË°®**„ÄÇ
11. ÊîØÊåÅ**Êü•ÁúãÈ¢ùÂ∫¶ÊòéÁªÜ**„ÄÇ
12. ÊîØÊåÅ**Áî®Êà∑ÈÇÄËØ∑Â•ñÂä±**„ÄÇ
13. ÊîØÊåÅ‰ª•ÁæéÂÖÉ‰∏∫Âçï‰ΩçÊòæÁ§∫È¢ùÂ∫¶„ÄÇ
14. ÊîØÊåÅÂèëÂ∏ÉÂÖ¨ÂëäÔºåËÆæÁΩÆÂÖÖÂÄºÈìæÊé•ÔºåËÆæÁΩÆÊñ∞Áî®Êà∑ÂàùÂßãÈ¢ùÂ∫¶„ÄÇ
15. ÊîØÊåÅÊ®°ÂûãÊò†Â∞ÑÔºåÈáçÂÆöÂêëÁî®Êà∑ÁöÑËØ∑Ê±ÇÊ®°ÂûãÔºåÂ¶ÇÊó†ÂøÖË¶ÅËØ∑‰∏çË¶ÅËÆæÁΩÆÔºåËÆæÁΩÆ‰πãÂêé‰ºöÂØºËá¥ËØ∑Ê±Ç‰ΩìË¢´ÈáçÊñ∞ÊûÑÈÄ†ËÄåÈùûÁõ¥Êé•ÈÄè‰º†Ôºå‰ºöÂØºËá¥ÈÉ®ÂàÜËøòÊú™Ê≠£ÂºèÊîØÊåÅÁöÑÂ≠óÊÆµÊó†Ê≥ï‰º†ÈÄíÊàêÂäü„ÄÇ
16. ÊîØÊåÅÂ§±Ë¥•Ëá™Âä®ÈáçËØï„ÄÇ
17. ÊîØÊåÅÁªòÂõæÊé•Âè£„ÄÇ
18. ÊîØÊåÅ [Cloudflare AI Gateway](https://developers.cloudflare.com/ai-gateway/providers/openai/)ÔºåÊ∏†ÈÅìËÆæÁΩÆÁöÑ‰ª£ÁêÜÈÉ®ÂàÜÂ°´ÂÜô `https://gateway.ai.cloudflare.com/v1/ACCOUNT_TAG/GATEWAY/openai` Âç≥ÂèØ„ÄÇ
19. ÊîØÊåÅ‰∏∞ÂØåÁöÑ**Ëá™ÂÆö‰πâ**ËÆæÁΩÆÔºå
    1. ÊîØÊåÅËá™ÂÆö‰πâÁ≥ªÁªüÂêçÁß∞Ôºålogo ‰ª•ÂèäÈ°µËÑö„ÄÇ
    2. ÊîØÊåÅËá™ÂÆö‰πâÈ¶ñÈ°µÂíåÂÖ≥‰∫éÈ°µÈù¢ÔºåÂèØ‰ª•ÈÄâÊã©‰ΩøÁî® HTML &amp; Markdown ‰ª£Á†ÅËøõË°åËá™ÂÆö‰πâÔºåÊàñËÄÖ‰ΩøÁî®‰∏Ä‰∏™ÂçïÁã¨ÁöÑÁΩëÈ°µÈÄöËøá iframe ÂµåÂÖ•„ÄÇ
20. ÊîØÊåÅÈÄöËøáÁ≥ªÁªüËÆøÈóÆ‰ª§ÁâåË∞ÉÁî®ÁÆ°ÁêÜ APIÔºåËøõËÄå**Âú®Êó†ÈúÄ‰∫åÂºÄÁöÑÊÉÖÂÜµ‰∏ãÊâ©Â±ïÂíåËá™ÂÆö‰πâ** One API ÁöÑÂäüËÉΩÔºåËØ¶ÊÉÖËØ∑ÂèÇËÄÉÊ≠§Â§Ñ [API ÊñáÊ°£](./docs/API.md)„ÄÇ
21. ÊîØÊåÅ Cloudflare Turnstile Áî®Êà∑Ê†°È™å„ÄÇ
22. ÊîØÊåÅÁî®Êà∑ÁÆ°ÁêÜÔºåÊîØÊåÅ**Â§öÁßçÁî®Êà∑ÁôªÂΩïÊ≥®ÂÜåÊñπÂºè**Ôºö
    + ÈÇÆÁÆ±ÁôªÂΩïÊ≥®ÂÜåÔºàÊîØÊåÅÊ≥®ÂÜåÈÇÆÁÆ±ÁôΩÂêçÂçïÔºâ‰ª•ÂèäÈÄöËøáÈÇÆÁÆ±ËøõË°åÂØÜÁ†ÅÈáçÁΩÆ„ÄÇ
    + ÊîØÊåÅ[È£û‰π¶ÊéàÊùÉÁôªÂΩï](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/authen-v1/authorize/get)Ôºà[ËøôÈáåÊúâ One API ÁöÑÂÆûÁé∞ÁªÜËäÇÈòêËø∞‰æõÂèÇËÄÉ](https://iamazing.cn/page/feishu-oauth-login)Ôºâ„ÄÇ
    + ÊîØÊåÅ [GitHub ÊéàÊùÉÁôªÂΩï](https://github.com/settings/applications/new)„ÄÇ
    + ÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ÊéàÊùÉÔºàÈúÄË¶ÅÈ¢ùÂ§ñÈÉ®ÁΩ≤ [WeChat Server](https://github.com/songquanpeng/wechat-server)Ôºâ„ÄÇ
23. ÊîØÊåÅ‰∏ªÈ¢òÂàáÊç¢ÔºåËÆæÁΩÆÁéØÂ¢ÉÂèòÈáè `THEME` Âç≥ÂèØÔºåÈªòËÆ§‰∏∫ `default`ÔºåÊ¨¢Ëøé PR Êõ¥Â§ö‰∏ªÈ¢òÔºåÂÖ∑‰ΩìÂèÇËÄÉ[Ê≠§Â§Ñ](./web/README.md)„ÄÇ
24. ÈÖçÂêà [Message Pusher](https://github.com/songquanpeng/message-pusher) ÂèØÂ∞ÜÊä•Ë≠¶‰ø°ÊÅØÊé®ÈÄÅÂà∞Â§öÁßç App ‰∏ä„ÄÇ

## ÈÉ®ÁΩ≤
### Âü∫‰∫é Docker ËøõË°åÈÉ®ÁΩ≤
```shell
# ‰ΩøÁî® SQLite ÁöÑÈÉ®ÁΩ≤ÂëΩ‰ª§Ôºö
docker run --name one-api -d --restart always -p 3000:3000 -e TZ=Asia/Shanghai -v /home/ubuntu/data/one-api:/data justsong/one-api
# ‰ΩøÁî® MySQL ÁöÑÈÉ®ÁΩ≤ÂëΩ‰ª§ÔºåÂú®‰∏äÈù¢ÁöÑÂü∫Á°Ä‰∏äÊ∑ªÂä† `-e SQL_DSN=&quot;root:123456@tcp(localhost:3306)/oneapi&quot;`ÔºåËØ∑Ëá™Ë°å‰øÆÊîπÊï∞ÊçÆÂ∫ìËøûÊé•ÂèÇÊï∞Ôºå‰∏çÊ∏ÖÊ•öÂ¶Ç‰Ωï‰øÆÊîπËØ∑ÂèÇËßÅ‰∏ãÈù¢ÁéØÂ¢ÉÂèòÈáè‰∏ÄËäÇ„ÄÇ
# ‰æãÂ¶ÇÔºö
docker run --name one-api -d --restart always -p 3000:3000 -e SQL_DSN=&quot;root:123456@tcp(localhost:3306)/oneapi&quot; -e TZ=Asia/Shanghai -v /home/ubuntu/data/one-api:/data justsong/one-api
```

ÂÖ∂‰∏≠Ôºå`-p 3000:3000` ‰∏≠ÁöÑÁ¨¨‰∏Ä‰∏™ `3000` ÊòØÂÆø‰∏ªÊú∫ÁöÑÁ´ØÂè£ÔºåÂèØ‰ª•Ê†πÊçÆÈúÄË¶ÅËøõË°å‰øÆÊîπ„ÄÇ

Êï∞ÊçÆÂíåÊó•ÂøóÂ∞Ü‰ºö‰øùÂ≠òÂú®ÂÆø‰∏ªÊú∫ÁöÑ `/home/ubuntu/data/one-api` ÁõÆÂΩïÔºåËØ∑Á°Æ‰øùËØ•ÁõÆÂΩïÂ≠òÂú®‰∏îÂÖ∑ÊúâÂÜôÂÖ•ÊùÉÈôêÔºåÊàñËÄÖÊõ¥Êîπ‰∏∫ÂêàÈÄÇÁöÑÁõÆÂΩï„ÄÇ

Â¶ÇÊûúÂêØÂä®Â§±Ë¥•ÔºåËØ∑Ê∑ªÂä† `--privileged=true`ÔºåÂÖ∑‰ΩìÂèÇËÄÉ https://github.com/songquanpeng/one-api/issues/482 „ÄÇ

Â¶ÇÊûú‰∏äÈù¢ÁöÑÈïúÂÉèÊó†Ê≥ïÊãâÂèñÔºåÂèØ‰ª•Â∞ùËØï‰ΩøÁî® GitHub ÁöÑ Docker ÈïúÂÉèÔºåÂ∞Ü‰∏äÈù¢ÁöÑ `justsong/one-api` ÊõøÊç¢‰∏∫ `ghcr.io/songquanpeng/one-api` Âç≥ÂèØ„ÄÇ

Â¶ÇÊûú‰Ω†ÁöÑÂπ∂ÂèëÈáèËæÉÂ§ßÔºå**Âä°ÂøÖ**ËÆæÁΩÆ `SQL_DSN`ÔºåËØ¶ËßÅ‰∏ãÈù¢[ÁéØÂ¢ÉÂèòÈáè](#ÁéØÂ¢ÉÂèòÈáè)‰∏ÄËäÇ„ÄÇ

Êõ¥Êñ∞ÂëΩ‰ª§Ôºö`docker run --rm -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower -cR`

Nginx ÁöÑÂèÇËÄÉÈÖçÁΩÆÔºö
```
server{
   server_name openai.justsong.cn;  # ËØ∑Ê†πÊçÆÂÆûÈôÖÊÉÖÂÜµ‰øÆÊîπ‰Ω†ÁöÑÂüüÂêç

   location / {
          client_max_body_size  64m;
          proxy_http_version 1.1;
          proxy_pass http://localhost:3000;  # ËØ∑Ê†πÊçÆÂÆûÈôÖÊÉÖÂÜµ‰øÆÊîπ‰Ω†ÁöÑÁ´ØÂè£
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $remote_addr;
          proxy_cache_bypass $http_upgrade;
          proxy_set_header Accept-Encoding gzip;
          proxy_read_timeout 300s;  # GPT-4 ÈúÄË¶ÅËæÉÈïøÁöÑË∂ÖÊó∂Êó∂Èó¥ÔºåËØ∑Ëá™Ë°åË∞ÉÊï¥
   }
}
```

‰πãÂêé‰ΩøÁî® Let&#039;s Encrypt ÁöÑ certbot ÈÖçÁΩÆ HTTPSÔºö
```bash
# Ubuntu ÂÆâË£Ö certbotÔºö
sudo snap install --classic certbot
sudo ln -s /snap/bin/certbot /usr/bin/certbot
# ÁîüÊàêËØÅ‰π¶ &amp; ‰øÆÊîπ Nginx ÈÖçÁΩÆ
sudo certbot --nginx
# Ê†πÊçÆÊåáÁ§∫ËøõË°åÊìç‰Ωú
# ÈáçÂêØ Nginx
sudo service nginx restart
```

ÂàùÂßãË¥¶Âè∑Áî®Êà∑Âêç‰∏∫ `root`ÔºåÂØÜÁ†Å‰∏∫ `123456`„ÄÇ

### ÈÄöËøáÂÆùÂ°îÈù¢ÊùøËøõË°å‰∏ÄÈîÆÈÉ®ÁΩ≤
1. ÂÆâË£ÖÂÆùÂ°îÈù¢Êùø9.2.0Âèä‰ª•‰∏äÁâàÊú¨ÔºåÂâçÂæÄ [ÂÆùÂ°îÈù¢Êùø](https://www.bt.cn/new/download.html?r=dk_oneapi) ÂÆòÁΩëÔºåÈÄâÊã©Ê≠£ÂºèÁâàÁöÑËÑöÊú¨‰∏ãËΩΩÂÆâË£ÖÔºõ
2. ÂÆâË£ÖÂêéÁôªÂΩïÂÆùÂ°îÈù¢ÊùøÔºåÂú®Â∑¶‰æßËèúÂçïÊ†è‰∏≠ÁÇπÂáª `Docker`ÔºåÈ¶ñÊ¨°ËøõÂÖ•‰ºöÊèêÁ§∫ÂÆâË£Ö `Docker` ÊúçÂä°ÔºåÁÇπÂáªÁ´ãÂç≥ÂÆâË£ÖÔºåÊåâÊèêÁ§∫ÂÆåÊàêÂÆâË£ÖÔºõ
3. ÂÆâË£ÖÂÆåÊàêÂêéÂú®Â∫îÁî®ÂïÜÂ∫ó‰∏≠ÊêúÁ¥¢ `One-API`ÔºåÁÇπÂáªÂÆâË£ÖÔºåÈÖçÁΩÆÂüüÂêçÁ≠âÂü∫Êú¨‰ø°ÊÅØÂç≥ÂèØÂÆåÊàêÂÆâË£ÖÔºõ

### Âü∫‰∫é Docker Compose ËøõË°åÈÉ®ÁΩ≤

&gt; ‰ªÖÂêØÂä®ÊñπÂºè‰∏çÂêåÔºåÂèÇÊï∞ËÆæÁΩÆ‰∏çÂèòÔºåËØ∑ÂèÇËÄÉÂü∫‰∫é Docker ÈÉ®ÁΩ≤ÈÉ®ÂàÜ

```shell
# ÁõÆÂâçÊîØÊåÅ MySQL ÂêØÂä®ÔºåÊï∞ÊçÆÂ≠òÂÇ®Âú® ./data/mysql Êñá‰ª∂Â§πÂÜÖ
docker-compose up -d

# Êü•ÁúãÈÉ®ÁΩ≤Áä∂ÊÄÅ
docker-compose ps
```

### ÊâãÂä®ÈÉ®ÁΩ≤
1. ‰ªé [GitHub Releases](https://github.com/songquanpeng/one-api/releases/latest) ‰∏ãËΩΩÂèØÊâßË°åÊñá‰ª∂ÊàñËÄÖ‰ªéÊ∫êÁ†ÅÁºñËØëÔºö
   ```shell
   git clone https://github.com/songquanpeng/one-api.git

   # ÊûÑÂª∫ÂâçÁ´Ø
   cd one-api/web/default
   npm install
   npm run build

   # ÊûÑÂª∫ÂêéÁ´Ø
   cd ../..
   go mod download
   go build -ldflags &quot;-s -w&quot; -o one-api
   ````
2. ËøêË°åÔºö
   ```shell
   chmod u+x one-api
   ./one-api --port 3000 --log-dir ./logs
   ```
3. ËÆøÈóÆ [http://localhost:3000/](http://localhost:3000/) Âπ∂ÁôªÂΩï„ÄÇÂàùÂßãË¥¶Âè∑Áî®Êà∑Âêç‰∏∫ `root`ÔºåÂØÜÁ†Å‰∏∫ `123456`„ÄÇ

Êõ¥Âä†ËØ¶ÁªÜÁöÑÈÉ®ÁΩ≤ÊïôÁ®ã[ÂèÇËßÅÊ≠§Â§Ñ](https://iamazing.cn/page/how-to-deploy-a-website)„ÄÇ

### Â§öÊú∫ÈÉ®ÁΩ≤
1. ÊâÄÊúâÊúçÂä°Âô® `SESSION_SECRET` ËÆæÁΩÆ‰∏ÄÊ†∑ÁöÑÂÄº„ÄÇ
2. ÂøÖÈ°ªËÆæÁΩÆ `SQL_DSN`Ôºå‰ΩøÁî® MySQL Êï∞ÊçÆÂ∫ìËÄåÈùû SQLiteÔºåÊâÄÊúâÊúçÂä°Âô®ËøûÊé•Âêå‰∏Ä‰∏™Êï∞ÊçÆÂ∫ì„ÄÇ
3. ÊâÄÊúâ‰ªéÊúçÂä°Âô®ÂøÖÈ°ªËÆæÁΩÆ `NODE_TYPE` ‰∏∫ `slave`Ôºå‰∏çËÆæÁΩÆÂàôÈªòËÆ§‰∏∫‰∏ªÊúçÂä°Âô®„ÄÇ
4. ËÆæÁΩÆ `SYNC_FREQUENCY` ÂêéÊúçÂä°Âô®Â∞ÜÂÆöÊúü‰ªéÊï∞ÊçÆÂ∫ìÂêåÊ≠•ÈÖçÁΩÆÔºåÂú®‰ΩøÁî®ËøúÁ®ãÊï∞ÊçÆÂ∫ìÁöÑÊÉÖÂÜµ‰∏ãÔºåÊé®ËçêËÆæÁΩÆËØ•È°πÂπ∂ÂêØÁî® RedisÔºåÊó†ËÆ∫‰∏ª‰ªé„ÄÇ
5. ‰ªéÊúçÂä°Âô®ÂèØ‰ª•ÈÄâÊã©ËÆæÁΩÆ `FRONTEND_BASE_URL`Ôºå‰ª•ÈáçÂÆöÂêëÈ°µÈù¢ËØ∑Ê±ÇÂà∞‰∏ªÊúçÂä°Âô®„ÄÇ
6. ‰ªéÊúçÂä°Âô®‰∏ä**ÂàÜÂà´**Ë£ÖÂ•Ω RedisÔºåËÆæÁΩÆÂ•Ω `REDIS_CONN_STRING`ÔºåËøôÊ†∑ÂèØ‰ª•ÂÅöÂà∞Âú®ÁºìÂ≠òÊú™ËøáÊúüÁöÑÊÉÖÂÜµ‰∏ãÊï∞ÊçÆÂ∫ìÈõ∂ËÆøÈóÆÔºåÂèØ‰ª•ÂáèÂ∞ëÂª∂ËøüÔºàRedis ÈõÜÁæ§ÊàñËÄÖÂì®ÂÖµÊ®°ÂºèÁöÑÊîØÊåÅËØ∑ÂèÇËÄÉÁéØÂ¢ÉÂèòÈáèËØ¥ÊòéÔºâ„ÄÇ
7. Â¶ÇÊûú‰∏ªÊúçÂä°Âô®ËÆøÈóÆÊï∞ÊçÆÂ∫ìÂª∂Ëøü‰πüÊØîËæÉÈ´òÔºåÂàô‰πüÈúÄË¶ÅÂêØÁî® RedisÔºåÂπ∂ËÆæÁΩÆ `SYNC_FREQUENCY`Ôºå‰ª•ÂÆöÊúü‰ªéÊï∞ÊçÆÂ∫ìÂêåÊ≠•ÈÖçÁΩÆ„ÄÇ

ÁéØÂ¢ÉÂèòÈáèÁöÑÂÖ∑‰Ωì‰ΩøÁî®ÊñπÊ≥ïËØ¶ËßÅ[Ê≠§Â§Ñ](#ÁéØÂ¢ÉÂèòÈáè)„ÄÇ

### ÂÆùÂ°îÈÉ®ÁΩ≤ÊïôÁ®ã

ËØ¶ËßÅ [#175](https://github.com/songquanpeng/one-api/issues/175)„ÄÇ

Â¶ÇÊûúÈÉ®ÁΩ≤ÂêéËÆøÈóÆÂá∫Áé∞Á©∫ÁôΩÈ°µÈù¢ÔºåËØ¶ËßÅ [#97](https://github.com/songquanpeng/one-api/issues/97)„ÄÇ

### ÈÉ®ÁΩ≤Á¨¨‰∏âÊñπÊúçÂä°ÈÖçÂêà One API ‰ΩøÁî®
&gt; Ê¨¢Ëøé PR Ê∑ªÂä†Êõ¥Â§öÁ§∫‰æã„ÄÇ

#### ChatGPT Next Web
È°πÁõÆ‰∏ªÈ°µÔºöhttps://github.com/Yidadaa/ChatGPT-Next-Web

```bash
docker run --name chat-next-web -d -p 3001:3000 yidadaa/chatgpt-next-web
```

Ê≥®ÊÑè‰øÆÊîπÁ´ØÂè£Âè∑Ôºå‰πãÂêéÂú®È°µÈù¢‰∏äËÆæÁΩÆÊé•Âè£Âú∞ÂùÄÔºà‰æãÂ¶ÇÔºöhttps://openai.justsong.cn/ ÔºâÂíå API Key Âç≥ÂèØ„ÄÇ

#### ChatGPT Web
È°πÁõÆ‰∏ªÈ°µÔºöhttps://github.com/Chanzhaoyu/chatgpt-web

```bash
docker run --name chatgpt-web -d -p 3002:3002 -e OPENAI_API_BASE_URL=https://openai.justsong.cn -e OPENAI_API_KEY=sk-xxx chenzhaoyu94/chatgpt-web
```

Ê≥®ÊÑè‰øÆÊîπÁ´ØÂè£Âè∑„ÄÅ`OPENAI_API_BASE_URL` Âíå `OPENAI_API_KEY`„ÄÇ

#### QChatGPT - QQÊú∫Âô®‰∫∫
È°πÁõÆ‰∏ªÈ°µÔºöhttps://github.com/RockChinQ/QChatGPT

Ê†πÊçÆ[ÊñáÊ°£](https://qchatgpt.rockchin.top)ÂÆåÊàêÈÉ®ÁΩ≤ÂêéÔºåÂú® `data/provider.json`ËÆæÁΩÆ`requester.openai-chat-completions.base-url`‰∏∫ One API ÂÆû‰æãÂú∞ÂùÄÔºåÂπ∂Â°´ÂÜô API Key Âà∞ `keys.openai` ÁªÑ‰∏≠ÔºåËÆæÁΩÆ `model` ‰∏∫Ë¶Å‰ΩøÁî®ÁöÑÊ®°ÂûãÂêçÁß∞„ÄÇ

ËøêË°åÊúüÈó¥ÂèØ‰ª•ÈÄöËøá`!model`ÂëΩ‰ª§Êü•Áúã„ÄÅÂàáÊç¢ÂèØÁî®Ê®°Âûã„ÄÇ

### ÈÉ®ÁΩ≤Âà∞Á¨¨‰∏âÊñπÂπ≥Âè∞
&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;ÈÉ®ÁΩ≤Âà∞ Sealos &lt;/strong&gt;&lt;/summary&gt;
&lt;div&gt;

&gt; Sealos ÁöÑÊúçÂä°Âô®Âú®ÂõΩÂ§ñÔºå‰∏çÈúÄË¶ÅÈ¢ùÂ§ñÂ§ÑÁêÜÁΩëÁªúÈóÆÈ¢òÔºåÊîØÊåÅÈ´òÂπ∂Âèë &amp; Âä®ÊÄÅ‰º∏Áº©„ÄÇ

ÁÇπÂáª‰ª•‰∏ãÊåâÈíÆ‰∏ÄÈîÆÈÉ®ÁΩ≤ÔºàÈÉ®ÁΩ≤ÂêéËÆøÈóÆÂá∫Áé∞ 404 ËØ∑Á≠âÂæÖ 3~5 ÂàÜÈíüÔºâÔºö

[![Deploy-on-Sealos.svg](https://raw.githubusercontent.com/labring-actions/templates/main/Deploy-on-Sealos.svg)](https://cloud.sealos.io/?openapp=system-fastdeploy?templateName=one-api)

&lt;/div&gt;
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;ÈÉ®ÁΩ≤Âà∞ Zeabur&lt;/strong&gt;&lt;/summary&gt;
&lt;div&gt;

&gt; Zeabur ÁöÑÊúçÂä°Âô®Âú®ÂõΩÂ§ñÔºåËá™Âä®Ëß£ÂÜ≥‰∫ÜÁΩëÁªúÁöÑÈóÆÈ¢òÔºåÂêåÊó∂ÂÖçË¥πÁöÑÈ¢ùÂ∫¶‰πüË∂≥Â§ü‰∏™‰∫∫‰ΩøÁî®

[![Deploy on Zeabur](https://zeabur.com/button.svg)](https://zeabur.com/templates/7Q0KO3)

1. È¶ñÂÖà fork ‰∏Ä‰ªΩ‰ª£Á†Å„ÄÇ
2. ËøõÂÖ• [Zeabur](https://zeabur.com?referralCode=songquanpeng)ÔºåÁôªÂΩïÔºåËøõÂÖ•ÊéßÂà∂Âè∞„ÄÇ
3. Êñ∞Âª∫‰∏Ä‰∏™ ProjectÔºåÂú® Service -&gt; Add Service ÈÄâÊã© MarketplaceÔºåÈÄâÊã© MySQLÔºåÂπ∂ËÆ∞‰∏ãËøûÊé•ÂèÇÊï∞ÔºàÁî®Êà∑Âêç„ÄÅÂØÜÁ†Å„ÄÅÂú∞ÂùÄ„ÄÅÁ´ØÂè£Ôºâ„ÄÇ
4. Â§çÂà∂ÈìæÊé•ÂèÇÊï∞ÔºåËøêË°å ```create database `one-api` ``` ÂàõÂª∫Êï∞ÊçÆÂ∫ì„ÄÇ
5. ÁÑ∂ÂêéÂú® Service -&gt; Add ServiceÔºåÈÄâÊã© GitÔºàÁ¨¨‰∏ÄÊ¨°‰ΩøÁî®ÈúÄË¶ÅÂÖàÊéàÊùÉÔºâÔºåÈÄâÊã©‰Ω† fork ÁöÑ‰ªìÂ∫ì„ÄÇ
6. Deploy ‰ºöËá™Âä®ÂºÄÂßãÔºåÂÖàÂèñÊ∂à„ÄÇËøõÂÖ•‰∏ãÊñπ VariableÔºåÊ∑ªÂä†‰∏Ä‰∏™ `PORT`ÔºåÂÄº‰∏∫ `3000`ÔºåÂÜçÊ∑ªÂä†‰∏Ä‰∏™ `SQL_DSN`ÔºåÂÄº‰∏∫ `&lt;username&gt;:&lt;password&gt;@tcp(&lt;addr&gt;:&lt;port&gt;)/one-api` ÔºåÁÑ∂Âêé‰øùÂ≠ò„ÄÇ Ê≥®ÊÑèÂ¶ÇÊûú‰∏çÂ°´ÂÜô `SQL_DSN`ÔºåÊï∞ÊçÆÂ∞ÜÊó†Ê≥ïÊåÅ‰πÖÂåñÔºåÈáçÊñ∞ÈÉ®ÁΩ≤ÂêéÊï∞ÊçÆ‰ºö‰∏¢Â§±„ÄÇ
7. ÈÄâÊã© Redeploy„ÄÇ
8. ËøõÂÖ•‰∏ãÊñπ DomainsÔºåÈÄâÊã©‰∏Ä‰∏™ÂêàÈÄÇÁöÑÂüüÂêçÂâçÁºÄÔºåÂ¶Ç &quot;my-one-api&quot;ÔºåÊúÄÁªàÂüüÂêç‰∏∫ &quot;my-one-api.zeabur.app&quot;Ôºå‰πüÂèØ‰ª• CNAME Ëá™Â∑±ÁöÑÂüüÂêç„ÄÇ
9. Á≠âÂæÖÈÉ®ÁΩ≤ÂÆåÊàêÔºåÁÇπÂáªÁîüÊàêÁöÑÂüüÂêçËøõÂÖ• One API„ÄÇ

&lt;/div&gt;
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;ÈÉ®ÁΩ≤Âà∞ Render&lt;/strong&gt;&lt;/summary&gt;
&lt;div&gt;

&gt; Render Êèê‰æõÂÖçË¥πÈ¢ùÂ∫¶ÔºåÁªëÂç°ÂêéÂèØ‰ª•Ëøõ‰∏ÄÊ≠•ÊèêÂçáÈ¢ùÂ∫¶

Render ÂèØ‰ª•Áõ¥Êé•ÈÉ®ÁΩ≤ docker ÈïúÂÉèÔºå‰∏çÈúÄË¶Å fork ‰ªìÂ∫ìÔºöhttps://dashboard.render.com

&lt;/div&gt;
&lt;/details&gt;

## ÈÖçÁΩÆ
Á≥ªÁªüÊú¨Ë∫´ÂºÄÁÆ±Âç≥Áî®„ÄÇ

‰Ω†ÂèØ‰ª•ÈÄöËøáËÆæÁΩÆÁéØÂ¢ÉÂèòÈáèÊàñËÄÖÂëΩ‰ª§Ë°åÂèÇÊï∞ËøõË°åÈÖçÁΩÆ„ÄÇ

Á≠âÂà∞Á≥ªÁªüÂêØÂä®ÂêéÔºå‰ΩøÁî® `root` Áî®Êà∑ÁôªÂΩïÁ≥ªÁªüÂπ∂ÂÅöËøõ‰∏ÄÊ≠•ÁöÑÈÖçÁΩÆ„ÄÇ

**Note**ÔºöÂ¶ÇÊûú‰Ω†‰∏çÁü•ÈÅìÊüê‰∏™ÈÖçÁΩÆÈ°πÁöÑÂê´‰πâÔºåÂèØ‰ª•‰∏¥Êó∂Âà†ÊéâÂÄº‰ª•ÁúãÂà∞Ëøõ‰∏ÄÊ≠•ÁöÑÊèêÁ§∫ÊñáÂ≠ó„ÄÇ

## ‰ΩøÁî®ÊñπÊ≥ï
Âú®`Ê∏†ÈÅì`È°µÈù¢‰∏≠Ê∑ªÂä†‰Ω†ÁöÑ API KeyÔºå‰πãÂêéÂú®`‰ª§Áâå`È°µÈù¢‰∏≠Êñ∞Â¢ûËÆøÈóÆ‰ª§Áâå„ÄÇ

‰πãÂêéÂ∞±ÂèØ‰ª•‰ΩøÁî®‰Ω†ÁöÑ‰ª§ÁâåËÆøÈóÆ One API ‰∫ÜÔºå‰ΩøÁî®ÊñπÂºè‰∏é [OpenAI API](https://platform.openai.com/docs/api-reference/introduction) ‰∏ÄËá¥„ÄÇ

‰Ω†ÈúÄË¶ÅÂú®ÂêÑÁßçÁî®Âà∞ OpenAI API ÁöÑÂú∞ÊñπËÆæÁΩÆ API Base ‰∏∫‰Ω†ÁöÑ One API ÁöÑÈÉ®ÁΩ≤Âú∞ÂùÄÔºå‰æãÂ¶ÇÔºö`https://openai.justsong.cn`ÔºåAPI Key Âàô‰∏∫‰Ω†Âú® One API ‰∏≠ÁîüÊàêÁöÑ‰ª§Áâå„ÄÇ

Ê≥®ÊÑèÔºåÂÖ∑‰ΩìÁöÑ API Base ÁöÑÊ†ºÂºèÂèñÂÜ≥‰∫é‰Ω†ÊâÄ‰ΩøÁî®ÁöÑÂÆ¢Êà∑Á´Ø„ÄÇ

‰æãÂ¶ÇÂØπ‰∫é OpenAI ÁöÑÂÆòÊñπÂ∫ìÔºö
```bash
OPENAI_API_KEY=&quot;sk-xxxxxx&quot;
OPENAI_API_BASE=&quot;https://&lt;HOST&gt;:&lt;PORT&gt;/v1&quot;
```

```mermaid
graph LR
    A(Áî®Êà∑)
    A ---&gt;|‰ΩøÁî® One API ÂàÜÂèëÁöÑ key ËøõË°åËØ∑Ê±Ç| B(One API)
    B --&gt;|‰∏≠ÁªßËØ∑Ê±Ç| C(OpenAI)
    B --&gt;|‰∏≠ÁªßËØ∑Ê±Ç| D(Azure)
    B --&gt;|‰∏≠ÁªßËØ∑Ê±Ç| E(ÂÖ∂‰ªñ OpenAI API Ê†ºÂºè‰∏ãÊ∏∏Ê∏†ÈÅì)
    B --&gt;|‰∏≠ÁªßÂπ∂‰øÆÊîπËØ∑Ê±Ç‰ΩìÂíåËøîÂõû‰Ωì| F(Èùû OpenAI API Ê†ºÂºè‰∏ãÊ∏∏Ê∏†ÈÅì)
```

ÂèØ‰ª•ÈÄöËøáÂú®‰ª§ÁâåÂêéÈù¢Ê∑ªÂä†Ê∏†ÈÅì ID ÁöÑÊñπÂºèÊåáÂÆö‰ΩøÁî®Âì™‰∏Ä‰∏™Ê∏†ÈÅìÂ§ÑÁêÜÊú¨Ê¨°ËØ∑Ê±ÇÔºå‰æãÂ¶ÇÔºö`Authorization: Bearer ONE_API_KEY-CHANNEL_ID`„ÄÇ
Ê≥®ÊÑèÔºåÈúÄË¶ÅÊòØÁÆ°ÁêÜÂëòÁî®Êà∑ÂàõÂª∫ÁöÑ‰ª§ÁâåÊâçËÉΩÊåáÂÆöÊ∏†ÈÅì ID„ÄÇ

‰∏çÂä†ÁöÑËØùÂ∞Ü‰ºö‰ΩøÁî®Ë¥üËΩΩÂùáË°°ÁöÑÊñπÂºè‰ΩøÁî®Â§ö‰∏™Ê∏†ÈÅì„ÄÇ

### ÁéØÂ¢ÉÂèòÈáè
&gt; One API ÊîØÊåÅ‰ªé `.env` Êñá‰ª∂‰∏≠ËØªÂèñÁéØÂ¢ÉÂèòÈáèÔºåËØ∑ÂèÇÁÖß `.env.example` Êñá‰ª∂Ôºå‰ΩøÁî®Êó∂ËØ∑Â∞ÜÂÖ∂ÈáçÂëΩÂêç‰∏∫ `.env`„ÄÇ
1. `REDIS_CONN_STRING`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞Ü‰ΩøÁî® Redis ‰Ωú‰∏∫ÁºìÂ≠ò‰ΩøÁî®„ÄÇ
   + ‰æãÂ≠êÔºö`REDIS_CONN_STRING=redis://default:redispw@localhost:49153`
   + Â¶ÇÊûúÊï∞ÊçÆÂ∫ìËÆøÈóÆÂª∂ËøüÂæà‰ΩéÔºåÊ≤°ÊúâÂøÖË¶ÅÂêØÁî® RedisÔºåÂêØÁî®ÂêéÂèçËÄå‰ºöÂá∫Áé∞Êï∞ÊçÆÊªûÂêéÁöÑÈóÆÈ¢ò„ÄÇ
   + Â¶ÇÊûúÈúÄË¶Å‰ΩøÁî®Âì®ÂÖµÊàñËÄÖÈõÜÁæ§Ê®°ÂºèÔºö
     + ÂàôÈúÄË¶ÅÊääËØ•ÁéØÂ¢ÉÂèòÈáèËÆæÁΩÆ‰∏∫ËäÇÁÇπÂàóË°®Ôºå‰æãÂ¶ÇÔºö`localhost:49153,localhost:49154,localhost:49155`„ÄÇ
     + Èô§Ê≠§‰πãÂ§ñËøòÈúÄË¶ÅËÆæÁΩÆ‰ª•‰∏ãÁéØÂ¢ÉÂèòÈáèÔºö
       + `REDIS_PASSWORD`ÔºöRedis ÈõÜÁæ§ÊàñËÄÖÂì®ÂÖµÊ®°Âºè‰∏ãÁöÑÂØÜÁ†ÅËÆæÁΩÆ„ÄÇ
       + `REDIS_MASTER_NAME`ÔºöRedis Âì®ÂÖµÊ®°Âºè‰∏ã‰∏ªËäÇÁÇπÁöÑÂêçÁß∞„ÄÇ
2. `SESSION_SECRET`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞Ü‰ΩøÁî®Âõ∫ÂÆöÁöÑ‰ºöËØùÂØÜÈí•ÔºåËøôÊ†∑Á≥ªÁªüÈáçÊñ∞ÂêØÂä®ÂêéÂ∑≤ÁôªÂΩïÁî®Êà∑ÁöÑ cookie Â∞Ü‰æùÊóßÊúâÊïà„ÄÇ
   + ‰æãÂ≠êÔºö`SESSION_SECRET=random_string`
3. `SQL_DSN`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞Ü‰ΩøÁî®ÊåáÂÆöÊï∞ÊçÆÂ∫ìËÄåÈùû SQLiteÔºåËØ∑‰ΩøÁî® MySQL Êàñ PostgreSQL„ÄÇ
   + ‰æãÂ≠êÔºö
     + MySQLÔºö`SQL_DSN=root:123456@tcp(localhost:3306)/oneapi`
     + PostgreSQLÔºö`SQL_DSN=postgres://postgres:123456@localhost:5432/oneapi`ÔºàÈÄÇÈÖç‰∏≠ÔºåÊ¨¢ËøéÂèçÈ¶àÔºâ
   + Ê≥®ÊÑèÈúÄË¶ÅÊèêÂâçÂª∫Á´ãÊï∞ÊçÆÂ∫ì `oneapi`ÔºåÊó†ÈúÄÊâãÂä®Âª∫Ë°®ÔºåÁ®ãÂ∫èÂ∞ÜËá™Âä®Âª∫Ë°®„ÄÇ
   + Â¶ÇÊûú‰ΩøÁî®Êú¨Âú∞Êï∞ÊçÆÂ∫ìÔºöÈÉ®ÁΩ≤ÂëΩ‰ª§ÂèØÊ∑ªÂä† `--network=&quot;host&quot;` ‰ª•‰ΩøÂæóÂÆπÂô®ÂÜÖÁöÑÁ®ãÂ∫èÂèØ‰ª•ËÆøÈóÆÂà∞ÂÆø‰∏ªÊú∫‰∏äÁöÑ MySQL„ÄÇ
   + Â¶ÇÊûú‰ΩøÁî®‰∫ëÊï∞ÊçÆÂ∫ìÔºöÂ¶ÇÊûú‰∫ëÊúçÂä°Âô®ÈúÄË¶ÅÈ™åËØÅË∫´‰ªΩÔºåÈúÄË¶ÅÂú®ËøûÊé•ÂèÇÊï∞‰∏≠Ê∑ªÂä† `?tls=skip-verify`„ÄÇ
   + ËØ∑Ê†πÊçÆ‰Ω†ÁöÑÊï∞ÊçÆÂ∫ìÈÖçÁΩÆ‰øÆÊîπ‰∏ãÂàóÂèÇÊï∞ÔºàÊàñËÄÖ‰øùÊåÅÈªòËÆ§ÂÄºÔºâÔºö
     + `SQL_MAX_IDLE_CONNS`ÔºöÊúÄÂ§ßÁ©∫Èó≤ËøûÊé•Êï∞ÔºåÈªòËÆ§‰∏∫ `100`„ÄÇ
     + `SQL_MAX_OPEN_CONNS`ÔºöÊúÄÂ§ßÊâìÂºÄËøûÊé•Êï∞ÔºåÈªòËÆ§‰∏∫ `1000`„ÄÇ
       + Â¶ÇÊûúÊä•Èîô `Error 1040: Too many connections`ÔºåËØ∑ÈÄÇÂΩìÂáèÂ∞èËØ•ÂÄº„ÄÇ
     + `SQL_CONN_MAX_LIFETIME`ÔºöËøûÊé•ÁöÑÊúÄÂ§ßÁîüÂëΩÂë®ÊúüÔºåÈªòËÆ§‰∏∫ `60`ÔºåÂçï‰ΩçÂàÜÈíü„ÄÇ
4. `LOG_SQL_DSN`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞Ü‰∏∫ `logs` Ë°®‰ΩøÁî®Áã¨Á´ãÁöÑÊï∞ÊçÆÂ∫ìÔºåËØ∑‰ΩøÁî® MySQL Êàñ PostgreSQL„ÄÇ
5. `FRONTEND_BASE_URL`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞ÜÈáçÂÆöÂêëÈ°µÈù¢ËØ∑Ê±ÇÂà∞ÊåáÂÆöÁöÑÂú∞ÂùÄÔºå‰ªÖÈôê‰ªéÊúçÂä°Âô®ËÆæÁΩÆ„ÄÇ
   + ‰æãÂ≠êÔºö`FRONTEND_BASE_URL=https://openai.justsong.cn`
6. `MEMORY_CACHE_ENABLED`ÔºöÂêØÁî®ÂÜÖÂ≠òÁºìÂ≠òÔºå‰ºöÂØºËá¥Áî®Êà∑È¢ùÂ∫¶ÁöÑÊõ¥Êñ∞Â≠òÂú®‰∏ÄÂÆöÁöÑÂª∂ËøüÔºåÂèØÈÄâÂÄº‰∏∫ `true` Âíå `false`ÔºåÊú™ËÆæÁΩÆÂàôÈªòËÆ§‰∏∫ `false`„ÄÇ
   + ‰æãÂ≠êÔºö`MEMORY_CACHE_ENABLED=true`
7. `SYNC_FREQUENCY`ÔºöÂú®ÂêØÁî®ÁºìÂ≠òÁöÑÊÉÖÂÜµ‰∏ã‰∏éÊï∞ÊçÆÂ∫ìÂêåÊ≠•ÈÖçÁΩÆÁöÑÈ¢ëÁéáÔºåÂçï‰Ωç‰∏∫ÁßíÔºåÈªòËÆ§‰∏∫ `600` Áßí„ÄÇ
   + ‰æãÂ≠êÔºö`SYNC_FREQUENCY=60`
8. `NODE_TYPE`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞ÜÊåáÂÆöËäÇÁÇπÁ±ªÂûãÔºåÂèØÈÄâÂÄº‰∏∫ `master` Âíå `slave`ÔºåÊú™ËÆæÁΩÆÂàôÈªòËÆ§‰∏∫ `master`„ÄÇ
   + ‰æãÂ≠êÔºö`NODE_TYPE=slave`
9. `CHANNEL_UPDATE_FREQUENCY`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞ÜÂÆöÊúüÊõ¥Êñ∞Ê∏†ÈÅì‰ΩôÈ¢ùÔºåÂçï‰Ωç‰∏∫ÂàÜÈíüÔºåÊú™ËÆæÁΩÆÂàô‰∏çËøõË°åÊõ¥Êñ∞„ÄÇ
   + ‰æãÂ≠êÔºö`CHANNEL_UPDATE_FREQUENCY=1440`
10. `CHANNEL_TEST_FREQUENCY`ÔºöËÆæÁΩÆ‰πãÂêéÂ∞ÜÂÆöÊúüÊ£ÄÊü•Ê∏†ÈÅìÔºåÂçï‰Ωç‰∏∫ÂàÜÈíüÔºåÊú™ËÆæÁΩÆÂàô‰∏çËøõË°åÊ£ÄÊü•„ÄÇ 
   +‰æãÂ≠êÔºö`CHANNEL_TEST_FREQUENCY=1440`
11. `POLLING_INTERVAL`ÔºöÊâπÈáèÊõ¥Êñ∞Ê∏†ÈÅì‰ΩôÈ¢ù‰ª•ÂèäÊµãËØïÂèØÁî®ÊÄßÊó∂ÁöÑËØ∑Ê±ÇÈó¥ÈöîÔºåÂçï‰Ωç‰∏∫ÁßíÔºåÈªòËÆ§Êó†Èó¥Èöî„ÄÇ
    + ‰æãÂ≠êÔºö`POLLING_INTERVAL=5`
12. `BATCH_UPDATE_ENABLED`ÔºöÂêØÁî®Êï∞ÊçÆÂ∫ìÊâπÈáèÊõ¥Êñ∞ËÅöÂêàÔºå‰ºöÂØºËá¥Áî®Êà∑È¢ùÂ∫¶ÁöÑÊõ¥Êñ∞Â≠òÂú®‰∏ÄÂÆöÁöÑÂª∂ËøüÂèØÈÄâÂÄº‰∏∫ `true` Âíå `false`ÔºåÊú™ËÆæÁΩÆÂàôÈªòËÆ§‰∏∫ `false`„ÄÇ
    + ‰æãÂ≠êÔºö`BATCH_UPDATE_ENABLED=true`
    + Â¶ÇÊûú‰Ω†ÈÅáÂà∞‰∫ÜÊï∞ÊçÆÂ∫ìËøûÊé•Êï∞ËøáÂ§öÁöÑÈóÆÈ¢òÔºåÂèØ‰ª•Â∞ùËØïÂêØÁî®ËØ•ÈÄâÈ°π„ÄÇ
13. `BATCH_UPDATE_INTERVAL=5`ÔºöÊâπÈáèÊõ¥Êñ∞ËÅöÂêàÁöÑÊó∂Èó¥Èó¥ÈöîÔºåÂçï‰Ωç‰∏∫ÁßíÔºåÈªòËÆ§‰∏∫ `5`„ÄÇ
    + ‰æãÂ≠êÔºö`BATCH_UPDATE_INTERVAL=5`
14. ËØ∑Ê±ÇÈ¢ëÁéáÈôêÂà∂Ôºö
    + `GLOBAL_API_RATE_LIMIT`ÔºöÂÖ®Â±Ä API ÈÄüÁéáÈôêÂà∂ÔºàÈô§‰∏≠ÁªßËØ∑Ê±ÇÂ§ñÔºâÔºåÂçï ip ‰∏âÂàÜÈíüÂÜÖÁöÑÊúÄÂ§ßËØ∑Ê±ÇÊï∞ÔºåÈªòËÆ§‰∏∫ `180`„ÄÇ
    + `GLOBAL_WEB_RATE_LIMIT`ÔºöÂÖ®Â±Ä Web ÈÄüÁéáÈôêÂà∂ÔºåÂçï ip ‰∏âÂàÜÈíüÂÜÖÁöÑÊúÄÂ§ßËØ∑Ê±ÇÊï∞ÔºåÈªòËÆ§‰∏∫ `60`„ÄÇ
15. ÁºñÁ†ÅÂô®ÁºìÂ≠òËÆæÁΩÆÔºö
    + `TIKTOKEN_CACHE_DIR`ÔºöÈªòËÆ§Á®ãÂ∫èÂêØÂä®Êó∂‰ºöËÅîÁΩë‰∏ãËΩΩ‰∏Ä‰∫õÈÄöÁî®ÁöÑËØçÂÖÉÁöÑÁºñÁ†ÅÔºåÂ¶ÇÔºö`gpt-3.5-turbo`ÔºåÂú®‰∏Ä‰∫õÁΩëÁªúÁéØÂ¢É‰∏çÁ®≥ÂÆöÔºåÊàñËÄÖÁ¶ªÁ∫øÊÉÖÂÜµÔºåÂèØËÉΩ‰ºöÂØºËá¥ÂêØÂä®ÊúâÈóÆÈ¢òÔºåÂèØ‰ª•ÈÖçÁΩÆÊ≠§ÁõÆÂΩïÁºìÂ≠òÊï∞ÊçÆÔºåÂèØËøÅÁßªÂà∞Á¶ªÁ∫øÁéØÂ¢É„ÄÇ
    + `DATA_GYM_CACHE_DIR`ÔºöÁõÆÂâçËØ•ÈÖçÁΩÆ‰ΩúÁî®‰∏é `TIKTOKEN_CACHE_DIR` ‰∏ÄËá¥Ôºå‰ΩÜÊòØ‰ºòÂÖàÁ∫ßÊ≤°ÊúâÂÆÉÈ´ò„ÄÇ
16. `RELAY_TIMEOUT`Ôºö‰∏≠ÁªßË∂ÖÊó∂ËÆæÁΩÆÔºåÂçï‰Ωç‰∏∫ÁßíÔºåÈªòËÆ§‰∏çËÆæÁΩÆË∂ÖÊó∂Êó∂Èó¥„ÄÇ
17. `RELAY_PROXY`ÔºöËÆæÁΩÆÂêé‰ΩøÁî®ËØ•‰ª£ÁêÜÊù•ËØ∑Ê±Ç API„ÄÇ
18. `USER_CONTENT_REQUEST_TIMEOUT`ÔºöÁî®Êà∑‰∏ä‰º†ÂÜÖÂÆπ‰∏ãËΩΩË∂ÖÊó∂Êó∂Èó¥ÔºåÂçï‰Ωç‰∏∫Áßí„ÄÇ
19. `USER_CONTENT_REQUEST_PROXY`ÔºöËÆæÁΩÆÂêé‰ΩøÁî®ËØ•‰ª£ÁêÜÊù•ËØ∑Ê±ÇÁî®Êà∑‰∏ä‰º†ÁöÑÂÜÖÂÆπÔºå‰æãÂ¶ÇÂõæÁâá„ÄÇ
20. `SQLITE_BUSY_TIMEOUT`ÔºöSQLite ÈîÅÁ≠âÂæÖË∂ÖÊó∂ËÆæÁΩÆÔºåÂçï‰Ωç‰∏∫ÊØ´ÁßíÔºåÈªòËÆ§ `3000`„ÄÇ
21. `GEMINI_SAFETY_SETTING`ÔºöGemini ÁöÑÂÆâÂÖ®ËÆæÁΩÆÔºåÈªòËÆ§ `BLOCK_NONE`„ÄÇ
22. `GEMINI_VERSION`ÔºöOne API ÊâÄ‰ΩøÁî®ÁöÑ Gemini ÁâàÊú¨ÔºåÈªòËÆ§‰∏∫ `v1`„ÄÇ
23. `THEME`ÔºöÁ≥ªÁªüÁöÑ‰∏ªÈ¢òËÆæÁΩÆÔºåÈªòËÆ§‰∏∫ `default`ÔºåÂÖ∑‰ΩìÂèØÈÄâÂÄºÂèÇËÄÉ[Ê≠§Â§Ñ](./web/README.md)„ÄÇ
24. `ENABLE_METRIC`ÔºöÊòØÂê¶Ê†πÊçÆËØ∑Ê±ÇÊàêÂäüÁéáÁ¶ÅÁî®Ê∏†ÈÅìÔºåÈªòËÆ§‰∏çÂºÄÂêØÔºåÂèØÈÄâÂÄº‰∏∫ `true` Âíå `false`„ÄÇ
25. `METRIC_QUEUE_SIZE`ÔºöËØ∑Ê±ÇÊàêÂäüÁéáÁªüËÆ°ÈòüÂàóÂ§ßÂ∞èÔºåÈªòËÆ§‰∏∫ `10`„ÄÇ
26. `METRIC_SUCCESS_RATE_THRESHOLD`ÔºöËØ∑Ê±ÇÊàêÂäüÁéáÈòàÂÄºÔºåÈªòËÆ§‰∏∫ `0.8`„ÄÇ
27. `INITIAL_ROOT_TOKEN`ÔºöÂ¶ÇÊûúËÆæÁΩÆ‰∫ÜËØ•ÂÄºÔºåÂàôÂú®Á≥ªÁªüÈ¶ñÊ¨°ÂêØÂä®Êó∂‰ºöËá™Âä®ÂàõÂª∫‰∏Ä‰∏™ÂÄº‰∏∫ËØ•ÁéØÂ¢ÉÂèòÈáèÂÄºÁöÑ root Áî®Êà∑‰ª§Áâå„ÄÇ
28. `INITIAL_ROOT_ACCESS_TOKEN`ÔºöÂ¶ÇÊûúËÆæÁΩÆ‰∫ÜËØ•ÂÄºÔºåÂàôÂú®Á≥ªÁªüÈ¶ñÊ¨°ÂêØÂä®Êó∂‰ºöËá™Âä®ÂàõÂª∫‰∏Ä‰∏™ÂÄº‰∏∫ËØ•ÁéØÂ¢ÉÂèòÈáèÁöÑ root Áî®Êà∑ÂàõÂª∫Á≥ªÁªüÁÆ°ÁêÜ‰ª§Áâå„ÄÇ
29. `ENFORCE_INCLUDE_USAGE`ÔºöÊòØÂê¶Âº∫Âà∂Âú® stream Ê®°Âûã‰∏ãËøîÂõû usageÔºåÈªòËÆ§‰∏çÂºÄÂêØÔºåÂèØÈÄâÂÄº‰∏∫ `true` Âíå `false`„ÄÇ
30. `TEST_PROMPT`ÔºöÊµãËØïÊ®°ÂûãÊó∂ÁöÑÁî®Êà∑ promptÔºåÈªòËÆ§‰∏∫ `Print your model name exactly and do not output without any other text.`„ÄÇ

### ÂëΩ‰ª§Ë°åÂèÇÊï∞
1. `--port &lt;port_number&gt;`: ÊåáÂÆöÊúçÂä°Âô®ÁõëÂê¨ÁöÑÁ´ØÂè£Âè∑ÔºåÈªòËÆ§‰∏∫ `3000`„ÄÇ
   + ‰æãÂ≠êÔºö`--port 3000`
2. `--log-dir &lt;log_dir&gt;`: ÊåáÂÆöÊó•ÂøóÊñá‰ª∂Â§πÔºåÂ¶ÇÊûúÊ≤°ÊúâËÆæÁΩÆÔºåÈªòËÆ§‰øùÂ≠òËá≥Â∑•‰ΩúÁõÆÂΩïÁöÑ `logs` Êñá‰ª∂Â§π‰∏ã„ÄÇ
   + ‰æãÂ≠êÔºö`--log-dir ./logs`
3. `--version`: ÊâìÂç∞Á≥ªÁªüÁâàÊú¨Âè∑Âπ∂ÈÄÄÂá∫„ÄÇ
4. `--help`: Êü•ÁúãÂëΩ‰ª§ÁöÑ‰ΩøÁî®Â∏ÆÂä©ÂíåÂèÇÊï∞ËØ¥Êòé„ÄÇ

## ÊºîÁ§∫
### Âú®Á∫øÊºîÁ§∫
Ê≥®ÊÑèÔºåËØ•ÊºîÁ§∫Á´ô‰∏çÊèê‰æõÂØπÂ§ñÊúçÂä°Ôºö
https://openai.justsong.cn

### Êà™ÂõæÂ±ïÁ§∫
![channel](https://user-images.githubusercontent.com/39998050/233837954-ae6683aa-5c4f-429f-a949-6645a83c9490.png)
![token](https://user-images.githubusercontent.com/39998050/233837971-dab488b7-6d96-43af-b640-a168e8d1c9bf.png)

## Â∏∏ËßÅÈóÆÈ¢ò
1. È¢ùÂ∫¶ÊòØ‰ªÄ‰πàÔºüÊÄé‰πàËÆ°ÁÆóÁöÑÔºüOne API ÁöÑÈ¢ùÂ∫¶ËÆ°ÁÆóÊúâÈóÆÈ¢òÔºü
   + È¢ùÂ∫¶ = ÂàÜÁªÑÂÄçÁéá * Ê®°ÂûãÂÄçÁéá * ÔºàÊèêÁ§∫ token Êï∞ + Ë°•ÂÖ® token Êï∞ * Ë°•ÂÖ®ÂÄçÁéáÔºâ
   + ÂÖ∂‰∏≠Ë°•ÂÖ®ÂÄçÁéáÂØπ‰∫é GPT3.5 Âõ∫ÂÆö‰∏∫ 1.33ÔºåGPT4 ‰∏∫ 2Ôºå‰∏éÂÆòÊñπ‰øùÊåÅ‰∏ÄËá¥„ÄÇ
   + Â¶ÇÊûúÊòØÈùûÊµÅÊ®°ÂºèÔºåÂÆòÊñπÊé•Âè£‰ºöËøîÂõûÊ∂àËÄóÁöÑÊÄª tokenÔºå‰ΩÜÊòØ‰Ω†Ë¶ÅÊ≥®ÊÑèÊèêÁ§∫ÂíåË°•ÂÖ®ÁöÑÊ∂àËÄóÂÄçÁéá‰∏ç‰∏ÄÊ†∑„ÄÇ
   + Ê≥®ÊÑèÔºåOne API ÁöÑÈªòËÆ§ÂÄçÁéáÂ∞±ÊòØÂÆòÊñπÂÄçÁéáÔºåÊòØÂ∑≤ÁªèË∞ÉÊï¥ËøáÁöÑ„ÄÇ
2. Ë¥¶Êà∑È¢ùÂ∫¶Ë∂≥Â§ü‰∏∫‰ªÄ‰πàÊèêÁ§∫È¢ùÂ∫¶‰∏çË∂≥Ôºü
   + ËØ∑Ê£ÄÊü•‰Ω†ÁöÑ‰ª§ÁâåÈ¢ùÂ∫¶ÊòØÂê¶Ë∂≥Â§üÔºåËøô‰∏™ÂíåË¥¶Êà∑È¢ùÂ∫¶ÊòØÂàÜÂºÄÁöÑ„ÄÇ
   + ‰ª§ÁâåÈ¢ùÂ∫¶‰ªÖ‰æõÁî®Êà∑ËÆæÁΩÆÊúÄÂ§ß‰ΩøÁî®ÈáèÔºåÁî®Êà∑ÂèØËá™Áî±ËÆæÁΩÆ„ÄÇ
3. ÊèêÁ§∫Êó†ÂèØÁî®Ê∏†ÈÅìÔºü
   + ËØ∑Ê£ÄÊü•ÁöÑÁî®Êà∑ÂàÜÁªÑÂíåÊ∏†ÈÅìÂàÜÁªÑËÆæÁΩÆ„ÄÇ
   + ‰ª•ÂèäÊ∏†ÈÅìÁöÑÊ®°ÂûãËÆæÁΩÆ„ÄÇ
4. Ê∏†ÈÅìÊµãËØïÊä•ÈîôÔºö`invalid character &#039;&lt;&#039; looking for beginning of value`
   + ËøôÊòØÂõ†‰∏∫ËøîÂõûÂÄº‰∏çÊòØÂêàÊ≥ïÁöÑ JSONÔºåËÄåÊòØ‰∏Ä‰∏™ HTML È°µÈù¢„ÄÇ
   + Â§ßÊ¶ÇÁéáÊòØ‰Ω†ÁöÑÈÉ®ÁΩ≤Á´ôÁöÑ IP Êàñ‰ª£ÁêÜÁöÑËäÇÁÇπË¢´ CloudFlare Â∞ÅÁ¶Å‰∫Ü„ÄÇ
5. ChatGPT Next Web Êä•ÈîôÔºö`Failed to fetch`
   + ÈÉ®ÁΩ≤ÁöÑÊó∂ÂÄô‰∏çË¶ÅËÆæÁΩÆ `BASE_URL`„ÄÇ
   + Ê£ÄÊü•‰Ω†ÁöÑÊé•Âè£Âú∞ÂùÄÂíå API Key ÊúâÊ≤°ÊúâÂ°´ÂØπ„ÄÇ
   + Ê£ÄÊü•ÊòØÂê¶ÂêØÁî®‰∫Ü HTTPSÔºåÊµèËßàÂô®‰ºöÊã¶Êà™ HTTPS ÂüüÂêç‰∏ãÁöÑ HTTP ËØ∑Ê±Ç„ÄÇ
6. Êä•ÈîôÔºö`ÂΩìÂâçÂàÜÁªÑË¥üËΩΩÂ∑≤È•±ÂíåÔºåËØ∑Á®çÂêéÂÜçËØï`
   + ‰∏äÊ∏∏Ê∏†ÈÅì 429 ‰∫Ü„ÄÇ
7. ÂçáÁ∫ß‰πãÂêéÊàëÁöÑÊï∞ÊçÆ‰ºö‰∏¢Â§±ÂêóÔºü
   + Â¶ÇÊûú‰ΩøÁî® MySQLÔºå‰∏ç‰ºö„ÄÇ
   + Â¶ÇÊûú‰ΩøÁî® SQLiteÔºåÈúÄË¶ÅÊåâÁÖßÊàëÊâÄÁªôÁöÑÈÉ®ÁΩ≤ÂëΩ‰ª§ÊåÇËΩΩ volume ÊåÅ‰πÖÂåñ one-api.db Êï∞ÊçÆÂ∫ìÊñá‰ª∂ÔºåÂê¶ÂàôÂÆπÂô®ÈáçÂêØÂêéÊï∞ÊçÆ‰ºö‰∏¢Â§±„ÄÇ
8. ÂçáÁ∫ß‰πãÂâçÊï∞ÊçÆÂ∫ìÈúÄË¶ÅÂÅöÂèòÊõ¥ÂêóÔºü
   + ‰∏ÄËà¨ÊÉÖÂÜµ‰∏ã‰∏çÈúÄË¶ÅÔºåÁ≥ªÁªüÂ∞ÜÂú®ÂàùÂßãÂåñÁöÑÊó∂ÂÄôËá™Âä®Ë∞ÉÊï¥„ÄÇ
   + Â¶ÇÊûúÈúÄË¶ÅÁöÑËØùÔºåÊàë‰ºöÂú®Êõ¥Êñ∞Êó•Âøó‰∏≠ËØ¥ÊòéÔºåÂπ∂ÁªôÂá∫ËÑöÊú¨„ÄÇ
9. ÊâãÂä®‰øÆÊîπÊï∞ÊçÆÂ∫ìÂêéÊä•ÈîôÔºö`Êï∞ÊçÆÂ∫ì‰∏ÄËá¥ÊÄßÂ∑≤Ë¢´Á†¥ÂùèÔºåËØ∑ËÅîÁ≥ªÁÆ°ÁêÜÂëò`Ôºü
   + ËøôÊòØÊ£ÄÊµãÂà∞ ability Ë°®ÈáåÊúâ‰∫õËÆ∞ÂΩïÁöÑÊ∏†ÈÅì id ÊòØ‰∏çÂ≠òÂú®ÁöÑÔºåËøôÂ§ßÊ¶ÇÁéáÊòØÂõ†‰∏∫‰Ω†Âà†‰∫Ü channel Ë°®ÈáåÁöÑËÆ∞ÂΩï‰ΩÜÊòØÊ≤°ÊúâÂêåÊ≠•Âú® ability Ë°®ÈáåÊ∏ÖÁêÜÊó†ÊïàÁöÑÊ∏†ÈÅì„ÄÇ
   + ÂØπ‰∫éÊØè‰∏Ä‰∏™Ê∏†ÈÅìÔºåÂÖ∂ÊâÄÊîØÊåÅÁöÑÊ®°ÂûãÈÉΩÈúÄË¶ÅÊúâ‰∏Ä‰∏™‰∏ìÈó®ÁöÑ ability Ë°®ÁöÑËÆ∞ÂΩïÔºåË°®Á§∫ËØ•Ê∏†ÈÅìÊîØÊåÅËØ•Ê®°Âûã„ÄÇ

## Áõ∏ÂÖ≥È°πÁõÆ
* [FastGPT](https://github.com/labring/FastGPT): Âü∫‰∫é LLM Â§ßËØ≠Ë®ÄÊ®°ÂûãÁöÑÁü•ËØÜÂ∫ìÈóÆÁ≠îÁ≥ªÁªü
* [ChatGPT Next Web](https://github.com/Yidadaa/ChatGPT-Next-Web):  ‰∏ÄÈîÆÊã•Êúâ‰Ω†Ëá™Â∑±ÁöÑË∑®Âπ≥Âè∞ ChatGPT Â∫îÁî®
* [VChart](https://github.com/VisActor/VChart):  ‰∏çÂè™ÊòØÂºÄÁÆ±Âç≥Áî®ÁöÑÂ§öÁ´ØÂõæË°®Â∫ìÔºåÊõ¥ÊòØÁîüÂä®ÁÅµÊ¥ªÁöÑÊï∞ÊçÆÊïÖ‰∫ãËÆ≤Ëø∞ËÄÖ„ÄÇ
* [VMind](https://github.com/VisActor/VMind):  ‰∏ç‰ªÖËá™Âä®ÔºåËøòÂæàÊô∫ËÉΩ„ÄÇÂºÄÊ∫êÊô∫ËÉΩÂèØËßÜÂåñËß£ÂÜ≥ÊñπÊ°à„ÄÇ
* [CherryStudio](https://github.com/CherryHQ/cherry-studio):  ÂÖ®Âπ≥Âè∞ÊîØÊåÅÁöÑAIÂÆ¢Êà∑Á´Ø, Â§öÊúçÂä°ÂïÜÈõÜÊàêÁÆ°ÁêÜ„ÄÅÊú¨Âú∞Áü•ËØÜÂ∫ìÊîØÊåÅ„ÄÇ

## Ê≥®ÊÑè

Êú¨È°πÁõÆ‰ΩøÁî® MIT ÂçèËÆÆËøõË°åÂºÄÊ∫êÔºå**Âú®Ê≠§Âü∫Á°Ä‰∏ä**ÔºåÂøÖÈ°ªÂú®È°µÈù¢Â∫ïÈÉ®‰øùÁïôÁΩ≤Âêç‰ª•ÂèäÊåáÂêëÊú¨È°πÁõÆÁöÑÈìæÊé•„ÄÇÂ¶ÇÊûú‰∏çÊÉ≥‰øùÁïôÁΩ≤ÂêçÔºåÂøÖÈ°ªÈ¶ñÂÖàËé∑ÂæóÊéàÊùÉ„ÄÇ

ÂêåÊ†∑ÈÄÇÁî®‰∫éÂü∫‰∫éÊú¨È°πÁõÆÁöÑ‰∫åÂºÄÈ°πÁõÆ„ÄÇ

‰æùÊçÆ MIT ÂçèËÆÆÔºå‰ΩøÁî®ËÄÖÈúÄËá™Ë°åÊâøÊãÖ‰ΩøÁî®Êú¨È°πÁõÆÁöÑÈ£éÈô©‰∏éË¥£‰ªªÔºåÊú¨ÂºÄÊ∫êÈ°πÁõÆÂºÄÂèëËÄÖ‰∏éÊ≠§Êó†ÂÖ≥„ÄÇ
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[remoteintech/remote-jobs]]></title>
            <link>https://github.com/remoteintech/remote-jobs</link>
            <guid>https://github.com/remoteintech/remote-jobs</guid>
            <pubDate>Sun, 10 Aug 2025 00:05:17 GMT</pubDate>
            <description><![CDATA[A list of semi to fully remote-friendly companies (jobs) in tech.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/remoteintech/remote-jobs">remoteintech/remote-jobs</a></h1>
            <p>A list of semi to fully remote-friendly companies (jobs) in tech.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 38,250</p>
            <p>Forks: 3,702</p>
            <p>Stars today: 46 stars today</p>
            <h2>README</h2><pre># Remote-friendly companies

A list of semi to fully remote-friendly companies in or around tech.


Contributions are very welcome! Please [review our contributing guidelines](https://github.com/remoteintech/remote-jobs/tree/main/.github/CONTRIBUTING.md) and then submit a new entry or update.


## Companies

Name | Website | Region
------------ | ------- | -------
[10up](/company-profiles/10up.md) | https://10up.com/ | Worldwide
[15Five](/company-profiles/15five.md) | https://www.15five.com | Europe, Americas
[18F](/company-profiles/18f.md) | https://18f.gsa.gov/ | USA
[1Password](/company-profiles/1password.md) | https://www.1password.com | North America, UK
[37signals](/company-profiles/37signals.md) | https://37signals.com | Worldwide
[3Blocks](/company-profiles/3blocks.md) | https://3blocks.io/ | Worldwide
[42 Technologies](/company-profiles/42-technologies.md) | https://www.42technologies.com/ | Worldwide
[90 Seconds](/company-profiles/90-seconds.md) | https://90seconds.com/ | Worldwide
[A-1 Auto Transport](/company-profiles/a-1-auto-transport.md) | https://www.a1autotransport.com | Worldwide
[abiturma](/company-profiles/abiturma.md) | https://www.abiturma.de/ | Germany
[Ably](/company-profiles/ably.md) | https://www.ably.io/ | Europe
[Abstract API](/company-profiles/abstract.md) | https://www.abstractapi.com | Worldwide
[Acivilate](/company-profiles/acivilate.md) | https://acivilate.com/ | USA
[Acquia](/company-profiles/acquia.md) | https://www.acquia.com/ | Worldwide
[ActiveCampaign](/company-profiles/activecampaign.md) | https://www.activecampaign.com/ | Dublin, Ireland; USA
[Ad Hoc](/company-profiles/ad-hoc.md) | https://www.adhocteam.us/ | USA
[Adaface](/company-profiles/adaface.md) | https://www.adaface.com | Asia
[AddStructure](/company-profiles/addstructure.md)| https://www.bazaarvoice.com/ | USA
[Adeva](/company-profiles/adeva.md) | https://adevait.com/ | Asia, Africa, Europe, South America, United States
[Adzuna](/company-profiles/adzuna.md) | https://www.adzuna.co.uk/ | Worldwide
[AE Studio](/company-profiles/aestudio.md) | https://ae.studio/ | USA, BR
[Aerolab](/company-profiles/aerolab.md) | https://aerolab.co/ | Latin America
[Aerostrat](/company-profiles/aerostrat.md) | https://aerostratsoftware.com/ | USA
[AgFlow](/company-profiles/agflow.md) | https://www.agflow.com | Europe
[Aha!](/company-profiles/aha.md) | https://www.aha.io | North America, South America, United Kingdom, Ireland, Australia, South Africa
[Aiir](/company-profiles/aiir.md) | https://aiir.com/ | USA, UK
[Aim India](/company-profiles/aim-india.md) | https://www.aimincorp.com/ | India
[Airbyte](/company-profiles/airbyte.md)| https://airbyte.com/ | Europe, North America, Latin America
[AirGarage](/company-profiles/airgarage.md) | https://www.airgarage.com/ | USA
[AirTreks](/company-profiles/airtreks.md) | https://www.airtreks.com/ | USA
[Aivitex](/company-profiles/aivitex.md) | https://aivitex.com/ | Germany
[Akamai](/company-profiles/akamai.md) | https://www.akamai.com/ | USA, India
[Akka](/company-profiles/akka.md) | https://akka.io/ | Worldwide
[Alami](/company-profiles/alami.md) | https://alamisharia.co.id/en/ | Indonesia
[Alan](/company-profiles/alan.md) | https://alan.com/ | Europe
[Algorand](/company-profiles/algorand.md) | https://www.algorand.com/ | USA
[Algorithmia](/company-profiles/algorithmia.md) | https://algorithmia.com/ | North America
[ALICE](/company-profiles/alice.md) | https://aliceplatform.com | Worldwide
[Alight Solutions](/company-profiles/alight-solutions.md) | https://alight.com | Worldwide
[Alley](/company-profiles/alley.md) | https://alley.co | USA, Canada, Western Europe
[allyDVM](/company-profiles/allydvm.md) | https://www.allydvm.com/ | USA
[AlphaSights](/company-profiles/alphasights.md) | https://engineering.alphasights.com | USA, UK, (EST, GMT)
[Amazon](/company-profiles/amazon.md) | https://www.amazon.jobs/en/locations/virtual-locations | Worldwide
[Ambaum](/company-profiles/ambaum.md) | https://ambaum.com/ | USA, Europe
[Andela](/company-profiles/andela.md) | https://andela.com/ | Worldwide
[Animalz](/company-profiles/animalz.md) | https://www.animalz.co | USA
[Annertech](/company-profiles/annertech.md) | https://www.annertech.com | Ireland
[Anomali](/company-profiles/anomali.md) | https://www.anomali.com/company/careers | USA, UK, Singapore
[apartment therapy](/company-profiles/apartment-therapy.md) | http://www.apartmenttherapy.com/ | USA
[Appcues](/company-profiles/appcues.md) | https://www.appcues.com/ | Worldwide
[Appen](/company-profiles/appen.md) | https://www.appen.com/ | North America, Europe, Asia, Australia
[Appinio](/company-profiles/appinio.md) | https://appinio.com/ | Europe
[Applaudo](/company-profiles/applaudo.md) | https://applaudostudios.com | Worldwide
[Applied AI Company (AAICO)](/company-profiles/applied-ai-company-aaico.md) | https://www.aaico.com/ | Worldwide
[Appstractor Corporation](/company-profiles/appstractor.md) | https://www.appstractor.com/ | USA, UK, Israel
[Appwrite](/company-profiles/appwrite.md) | https://appwrite.io | Worldwide
[Argyle](/company-profiles/argyle.md) | https://argyle.com/ | Worldwide
[ARK](/company-profiles/ark.md) | https://www.ark.io/careers | Worldwide
[Arkency](/company-profiles/arkency.md) | https://arkency.com/ | Worldwide
[Art &amp; Logic](/company-profiles/art-and-logic.md) | https://artandlogic.com | USA, Canada
[Artefactual Systems](/company-profiles/artefactual.md) | https://www.artefactual.com | UTC-8 to UTC+2
[Articulate](/company-profiles/articulate.md) | https://www.articulate.com | Worldwide
[Asana](/company-profiles/asana.md) | https://asana.com/ | Worldwide
[Astronomer](/company-profiles/astronomer.md) | https://www.astronomer.io/ | USA and India 
[Atento](/company-profiles/atento.md) | https://atento.gupy.io | Brazil, Mexico and EMEA
[Atlassian](/company-profiles/atlassian.md) | https://www.atlassian.com/ | USA, Europe, Asia, Australia
[AtoZDebug](/company-profiles/atozdebug.md) | https://atozdebug.com/ | Worldwide
[Audiense](/company-profiles/audiense.md) | https://www.audiense.com/ | Worldwide
[Aula Education](/company-profiles/aula.md) | https://aula.education/ | Worldwide
[Auth0](/company-profiles/auth0.md) | https://auth0.com/ | Worldwide
[Automattic](/company-profiles/automattic.md) | https://automattic.com/ | Worldwide
[Axelerant](/company-profiles/axelerant.md) | https://axelerant.com/ | Worldwide
[Axios](/company-profiles/axios.md) | https://axios.com/ | USA
[Bairesdev](/company-profiles/bairesdev.md) | https://bairesdev.com/ | Worldwide
[Balena](/company-profiles/balena.md) | https://www.balena.io/ | Worldwide
[Balsamiq](/company-profiles/balsamiq.md) | https://balsamiq.com/ | Worldwide
[Bandcamp](/company-profiles/bandcamp.md) | https://bandcamp.com/ | Worldwide
[BandLab](/company-profiles/bandlab.md) | https://bandlab.com/ | Worldwide
[Bandzoogle](/company-profiles/bandzoogle.md) | https://bandzoogle.com/ | Worldwide
[Baremetrics](/company-profiles/baremetrics.md) | https://baremetrics.com/ | Worldwide
[Basecamp](/company-profiles/basecamp.md) | https://basecamp.com/ | Worldwide
[Bear Group](/company-profiles/bear-group.md) | https://www.beargroup.com/ | USA
[BeBanjo](/company-profiles/bebanjo.md) | https://bebanjo.com/ | Worldwide
[BeenVerified](/company-profiles/beenverified.md) | https://www.beenverified.com/ | Worldwide
[Best Practical Solutions](/company-profiles/best-practical-solutions.md) | https://bestpractical.com/ | Worldwide
[Betable](/company-profiles/betable.md) | https://corp.betable.com/ | USA, Europe
[BetaPeak](/company-profiles/betapeak.md) | https://betapeak.com/ | Worldwide
[BetterUp](/company-profiles/betterup.md) | https://www.betterup.com/ | USA
[Beyond Company](/company-profiles/beyond-company.md) | https://beyondcompany.com.br/ | Brazil
[BeyondPricing](/company-profiles/beyondpricing.md) | https://beyondpricing.com | USA, Europe
[BharatPe](/company-profiles/bharatpe.md) | https://www.bharatpe.com | India
[Big Cartel](/company-profiles/big-cartel.md) | https://www.bigcartel.com | USA
[Bill](/company-profiles/bill.md) | https://www.bill.com/ | USA
[bilstein group](/company-profiles/bilstein-group.md) | https://bilsteingroup.com/en/ | Germany, UK, Portugal, Serbia
[Bit Zesty](/company-profiles/bit-zesty.md) | https://bitzesty.com/ | Worldwide
[Bitnami](/company-profiles/bitnami.md) | https://bitnami.com/ | Worldwide
[Bitovi](/company-profiles/bitovi.md) | https://bitovi.com/ | Worldwide
[Bizink](/company-profiles/bizink.md) | https://bizinkonline.com | Worldwide
[Blameless](/company-profiles/blameless.md) | https://www.blameless.com/ | North America
[Bloc](/company-profiles/bloc.md) | https://www.bloc.io/ | North America
[BlueCat Networks](/company-profiles/bluecat-networks.md) | https://bluecatnetworks.com/ | North America
[Bluespark](/company-profiles/bluespark.md)  | https://www.bluespark.com/ | USA
[Boldare](/company-profiles/boldare.md) | https://boldare.com | Worldwide
[Bonsai](/company-profiles/bonsai.md) | https://www.hellobonsai.com | Worldwide
[Bounteous](/company-profiles/bounteous.md) | https://bounteous.com | Worldwide
[Brainstorm Force](/company-profiles/brainstorm-force.md) | https://brainstormforce.com/ | Worldwide
[Bright Funds](/company-profiles/bright-funds.md) | https://www.brightfunds.org | USA
[Brikl](/company-profiles/brikl.md) | https://www.brikl.com/ | North America, Asia
[BriteCore](/company-profiles/britecore.md) | https://britecore.com/ | USA, Worldwide
[Broadwing](/company-profiles/broadwing.md) | https://www.broadwing.io/ | Worldwide
[Buffer](/company-profiles/buffer.md) | https://buffer.com/ | Worldwide
[Bugfender](/company-profiles/bugfender.md) | https://bugfender.com/ | Worldwide
[BuySellAds](/company-profiles/buysellads.md) | https://www.buysellads.com/ |  Worldwide
[Cabify](/company-profiles/cabify.md) | https://cabify.com/ | Spain
[Calamari](/company-profiles/calamari.md) | https://calamari.io/ | Poland
[Calibre](/company-profiles/calibre.md) | https://calibreapp.com/ | Worldwide
[CANCOM](/company-profiles/cancom.md) | https://www.cancom.com/ | Germany, Austria, Slovakia
[Canonical](/company-profiles/canonical.md) | https://www.canonical.com/ | Worldwide
[Capchase](/company-profiles/capchase.md) | https://www.capchase.com/ | Worldwide
[Capgemini](/company-profiles/capgemini.md) | https://www.capgemini.com/us-en/ | Worldwide
[Capital One](/company-profiles/capital-one.md) | https://www.capitalonecareers.com/tech | USA
[Capital Placement](/company-profiles/capital-placement.md) | https://capital-placement.com | Worldwide
[Capmo](/company-profiles/capmo.md) | https://www.capmo.com/en | CET -4 / CET +4
[Carbon Black](/company-profiles/carbon-black.md) | https://www.carbonblack.com/ | USA
[Cards Against Humanity](/company-profiles/cards-against-humanity.md) | https://cardsagainsthumanity.com/ | USA
[CareCru](/company-profiles/carecru.md) | https://carecru.com | Worldwide
[CareMessage](/company-profiles/caremessage.md) | https://caremessage.org/careers/ | Worldwide
[Carmatec](/company-profiles/carmatec.md) | https://www.carmatec.com/ | USA, India
[CartoDB](/company-profiles/cartodb.md) | https://cartodb.com/ | Worldwide
[CartStack](/company-profiles/cartstack.md) | https://www.cartstack.com/ | Worldwide
[Casumo](/company-profiles/casumo.md) | https://www.casumo.com/ | Europe
[ChainLink Labs](/company-profiles/chainlink.md) | https://chainlinklabs.com/ | USA
[Chargify](/company-profiles/chargify.md) | https://www.chargify.com/ | USA
[charity: water](/company-profiles/charity-water.md) | https://www.charitywater.org/ | USA
[ChatGen](/company-profiles/chatgen.md) | https://chatgen.ai/ | India, USA
[Checkly](/company-profiles/checkly.md) | https://www.checklyhq.com | Europe (CET -3 / CET +3)
[Chef](/company-profiles/chef.md) | https://www.chef.io/ | USA, UK
[ChefsClub](/company-profiles/chefsclub.md) | https://www.chefsclub.com.br/ | Brazil
[Chess](/company-profiles/chess.md) | https://www.chess.com/jobs/ | Worldwide
[Chroma](/company-profiles/chroma.md) | https://hichroma.com/ | Worldwide
[CircleCI](/company-profiles/circleci.md) | https://circleci.com/ | Worldwide
[Circonus](/company-profiles/circonus.md) | https://circonus.com/ | USA
[CivicActions](/company-profiles/civicactions.md) | https://civicactions.com/ | Worldwide
[Civo](/company-profiles/civo.md) | https://www.civo.com | Worldwide
[Clevertech](/company-profiles/clevertech.md) | https://clevertech.biz/ | Worldwide
[ClickUp](/company-profiles/clickup.md) | https://clickup.com/ | Worldwide
[Clootrack](/company-profiles/clootrack.md) | https://www.clootrack.com/ | India
[Close](/company-profiles/close.md) | https://close.com | Worldwide
[CloudApp](/company-profiles/cloudapp.md) | https://getcloudapp.com | North America
[CloudEra](/company-profiles/cloudera.md) | https://www.cloudera.com | Worldwide
[CloudLinux](/company-profiles/cloudlinux.md) | https://www.cloudlinux.com/ | Worldwide
[Coalition Technologies](/company-profiles/coalition-technologies.md) | https://coalitiontechnologies.com/ | Worldwide
[Code B Solutions](/company-profiles/code-b-solutions.md) | https://code-b.dev/ | Worldwide
[Code Like a Girl](/company-profiles/code-like-a-girl.md) | https://codelikeagirl.com | Australia
[Codea IT](/company-profiles/codea-it.md) | https://www.codeait.com | Worldwide
[CodePen](/company-profiles/codepen.md) | https://codepen.io | Worldwide
[CodeSandbox](/company-profiles/codesandbox.md) | https://codesandbox.io | Worldwide
[Codeship](/company-profiles/codeship.md) | https://codeship.com/ | Worldwide
[CodingCops](/company-profiles/codingcops.md) | https://codingcops.com/ | USA
[Cofense](/company-profiles/cofense.md) | https://cofense.com | USA
[Coforma](/company-profiles/coforma.md) | https://coforma.io | USA
[Cognizant](/company-profiles/cognizant.md) | https://www.cognizant.com/in/en | Worldwide
[Coinbase](/company-profiles/coinbase.md) | https://www.coinbase.com | Worldwide
[Coingape](/company-profiles/coingape.md) | https://coingape.com/ | India
[Collabora](/company-profiles/collabora.md) | https://www.collabora.com/ | Worldwide
[Comet](/company-profiles/comet.md) | https://www.comet.co/ | France
[Compose](/company-profiles/compose.md) | https://www.compose.io/ | Worldwide
[Compucorp](/company-profiles/compucorp.md) | https://www.compuco.io | Worldwide
[Connexa](/company-profiles/connexa.md) | https://www.connexa.com/ | Worldwide
[ConsenSys](/company-profiles/consensys.md) | https://consensys.net/ | Worldwide
[Consumer Financial Protection Bureau](/company-profiles/consumer-financial-protection-bureau.md) | https://www.consumerfinance.gov | USA
[Continu](/company-profiles/continu.md) | https://www.continu.co/ | USA
[Conversio](/company-profiles/conversio.md) | https://conversio.com/ | Worldwide
[Convert](/company-profiles/convert.md) | https://www.convert.com | Worldwide
[Coodesh](/company-profiles/coodesh.md) | https://coodesh.com/ | Brazil
[Core-Apps](/company-profiles/core-apps.md) | https://www.core-apps.com/ | USA
[CoreOS](/company-profiles/coreos.md) | https://coreos.com/ | USA
[Corgibytes](/company-profiles/corgibytes.md) | https://corgibytes.com | USA East Coast
[Cosmic Chimps](/company-profiles/cosmic-chimps.md) | https://www.cosmic-chimps.com/ | Spain, M√©xico
[Coursera](/company-profiles/coursera.md) | https://www.coursera.org/ | USA, Canada
[CrateDB](/company-profiles/cratedb.md) | https://cratedb.com | Europe
[CrazyGames](/company-profiles/crazygames.md) | https://www.crazygames.com | Worldwide
[Crossover](/company-profiles/crossover.md)  | https://www.crossover.com | Worldwide
[Crowdstrike](/company-profiles/crowdstrike.md) | https://www.crowdstrike.com | Worldwide
[CrowdTangle](/company-profiles/crowdtangle.md) | https://crowdtangle.com | USA
[Cueup](/company-profiles/cueup.md) | https://cueup.io/ | Worldwide
[Customer.io](/company-profiles/customer-io.md) | https://customer.io | Worldwide
[Cuvette](/company-profiles/cuvette.md) | https://cuvette.tech | Worldwide
[CVS Health](/company-profiles/cvs-health.md) | https://jobs.cvshealth.com/ | USA
[CWT](/company-profiles/cwt.md) | https://www.mycwt.com/ | Worldwide
[Cyber Whale](/company-profiles/cyber-whale.md) | https://cyberwhale.tech | Europe
[Daktronics](/company-profiles/daktronics.md) | https://www.daktronics.com/en-us | US
[DappRadar](/company-profiles/dappradar.md) | https://dappradar.com/ | Worldwide
[DareCode](/company-profiles/darecode.md) | https://darecode.com/ | Europe
[DashboardHub](/company-profiles/dashboardhub.md) | https://dashboardhub.io | Worldwide
[Dashlane](/company-profiles/dashlane.md) | https://dashlane.com | Worldwide
[Data Science Brigade](/company-profiles/data-science-brigade.md) | https://dsbrigade.com/ | Worldwide
[Data Science Dojo](/company-profiles/data-science-dojo.md) | https://datasciencedojo.com/ | Worldwide
[DataCamp](/company-profiles/datacamp.md) | https://www.datacamp.com/ | Europe or comparable timezone
[Datadog](/company-profiles/datadog.md) | https://www.datadoghq.com/ | Worldwide (restricted locations)
[DataStax](/company-profiles/datastax.md) | https://www.datastax.com/ | Worldwide
[Datica](/company-profiles/datica.md) | https://datica.com/ | USA
[Dave](/company-profiles/dave.md) | https://dave.com/ | USA
[DealDash](/company-profiles/dealdash.md) | http://www.dealdash.com | Worldwide
[Deel](/company-profiles/deel.md) | http://www.deel.com/ | Worldwide
[Delighted](/company-profiles/delighted.md)| https://delighted.com | Worldwide
[Designcode](/company-profiles/designcode.md) | https://designcode.io/ | Worldwide
[Deskpass](/company-profiles/deskpass.md) | https://www.deskpass.com | Worldwide
[Dev Spotlight](/company-profiles/dev-spotlight.md) | https://www.devspotlight.com | Worldwide
[Devsquad](/company-profiles/devsquad.md) | https://devsquad.com | Worldwide
[Dgraph](/company-profiles/dgraph.md) | https://dgraph.io/ | Americas
[DigitalOcean](/company-profiles/digitalocean.md) | https://www.digitalocean.com/ | Worldwide
[Discord](/company-profiles/discord.md) | https://discord.com/ | USA
[Discourse](/company-profiles/discourse.md) | https://www.discourse.org/ | Worldwide
[DNSimple](/company-profiles/dnsimple.md) | https://dnsimple.com/ | Worldwide
[Docker](/company-profiles/docker.md) | https://www.docker.com | USA
[Doist](/company-profiles/doist.md) | https://doist.com | Worldwide
[Doit](/company-profiles/doit.md) | https://doit.com | Worldwide
[Dow Jones](/company-profiles/dow-jones.md) | https://www.dowjones.com/ | USA
[DroneDeploy](/company-profiles/dronedeploy.md) | https://www.dronedeploy.com/ | Worldwide
[Dropbox](/company-profiles/dropbox.md) | https://www.dropbox.com/ | Europe, North America
[Drupal Jedi](/company-profiles/drupal-jedi.md) | https://drupaljedi.com/ | Worldwide
[DuckDuckGo](/company-profiles/duckduckgo.md) | https://duckduckgo.com/ | Worldwide
[DynaPictures](/company-profiles/dynapictures.md) | https://dynapictures.com/ | Worldwide
[EarthOfDrones](/company-profiles/earthofdrones.md) | https://earthofdrones.com/ | Worldwide
[EatStreet](/company-profiles/eatstreet.md) | https://eatstreet.com/ | USA
[EBSCO Information Services](/company-profiles/ebsco-information-services.md) | https://www.ebsco.com | USA
[Ebury](/company-profiles/ebury.md) | https://ebury.com/ | Worldwide
[Eco-Mind](/company-profiles/eco-mind.md) | https://eco-mind.eu/ | Italy
[Ecosmic](/company-profiles/ecosmic.md) | https://ecosmic.space/ | Italy
[Edgar](/company-profiles/edgar.md) | https://meetedgar.com/ | USA, Canada
[Edify](/company-profiles/edify.md) | https://edify.cr/ | Worldwide
[Elastic](/company-profiles/elastic.md) | https://www.elastic.co/ | Worldwide
[Elsewhen](/company-profiles/elsewhen.md) | https://www.elsewhen.com/ | UK
[Embraer](/company-profiles/embraer.md) | https://embraer.com/ | Brazil
[Emsisoft](/company-profiles/emsisoft.md) | https://www.emsisoft.com/ | Worldwide
[Encora](/company-profiles/encora.md) | https://careers.encora.com/ | Worldwide
[EngineYard (Support Team)](/company-profiles/en

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[bluewave-labs/Checkmate]]></title>
            <link>https://github.com/bluewave-labs/Checkmate</link>
            <guid>https://github.com/bluewave-labs/Checkmate</guid>
            <pubDate>Sun, 10 Aug 2025 00:05:16 GMT</pubDate>
            <description><![CDATA[Checkmate is an open-source, self-hosted tool designed to track and monitor server hardware, uptime, response times, and incidents in real-time with beautiful visualizations. Don't be shy, join here: https://discord.com/invite/NAb6H3UTjK :)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/bluewave-labs/Checkmate">bluewave-labs/Checkmate</a></h1>
            <p>Checkmate is an open-source, self-hosted tool designed to track and monitor server hardware, uptime, response times, and incidents in real-time with beautiful visualizations. Don't be shy, join here: https://discord.com/invite/NAb6H3UTjK :)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 7,690</p>
            <p>Forks: 503</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>&lt;p align=center&gt; &lt;a href=&quot;https://trendshift.io/repositories/12443&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/12443&quot; alt=&quot;bluewave-labs%2Fcheckmate | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
  
![](https://img.shields.io/github/license/bluewave-labs/checkmate)
![](https://img.shields.io/github/repo-size/bluewave-labs/checkmate)
![](https://img.shields.io/github/commit-activity/m/bluewave-labs/checkmate)
![](https://img.shields.io/github/last-commit/bluewave-labs/checkmate)
![](https://img.shields.io/github/languages/top/bluewave-labs/checkmate)
![](https://img.shields.io/github/issues/bluewave-labs/checkmate)
![](https://img.shields.io/github/issues-pr/bluewave-labs/checkmate)
[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/9901/badge)](https://www.bestpractices.dev/projects/9901)
[![Ask DeepWiki](https://deepwiki.com/badge.svg)](https://deepwiki.com/bluewave-labs/checkmate)

&lt;h1 align=&quot;center&quot;&gt;&lt;a href=&quot;https://bluewavelabs.ca&quot; target=&quot;_blank&quot;&gt;Checkmate&lt;/a&gt;&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;&lt;strong&gt;An open source uptime and infrastructure monitoring application&lt;/strong&gt;&lt;/p&gt;

&lt;img width=&quot;1660&quot; alt=&quot;image&quot; src=&quot;https://github.com/user-attachments/assets/b748f36d-a271-4965-ad0a-18bf153bbee7&quot; /&gt;

This repository contains both the frontend and the backend of Checkmate, an open-source, self-hosted monitoring tool for tracking server hardware, uptime, response times, and incidents in real-time with beautiful visualizations. Checkmate regularly checks whether a server/website is accessible and performs optimally, providing real-time alerts and reports on the monitored services&#039; availability, downtime, and response time.

Checkmate also has an agent, called [Capture](https://github.com/bluewave-labs/capture), to retrieve data from remote servers. While Capture is not required to run Checkmate, it provides additional insights about your servers&#039; CPU, RAM, disk, and temperature status.

Checkmate has been stress-tested with 1000+ active monitors without any particular issues or performance bottlenecks.

**If you would like to sponsor a feature, [see this link](https://checkmate.so/sponsored-features).**

## üìö Table of contents

- [üì¶ Demo](#-demo)  
- [üîó User&#039;s guide](#-users-guide)  
- [üõ†Ô∏è Installation](#Ô∏è-installation)
- [üöÄ Deploying Checkmate with Helm](#-deploying-checkmate-with-helm)
- [üèÅ Translations](#-translations)  
- [üöÄ Performance](#-performance)  
- [üíö Questions &amp; Ideas](#-questions--ideas)  
- [üß© Features](#-features)  
- [üèóÔ∏è Screenshots](#-screenshots)  
- [üèóÔ∏è Tech stack](#-tech-stack)  
- [üîó A few links](#a-few-links)  
- [ü§ù Contributing](#-contributing)  
- [üí∞ Our sponsors](#-our-sponsors)


## üì¶ Demo

You can see the latest build of [Checkmate](https://checkmate-demo.bluewavelabs.ca/) in action. The username is uptimedemo@demo.com and the password is Demouser1! (just a note that we update the demo server from time to time, so if it doesn&#039;t work for you, please ping us on the Discussions channel).

## üîó User&#039;s guide

Usage instructions can be found [here](https://docs.checkmate.so/checkmate-2.1). It&#039;s still WIP and some of the information there might be outdated as we continuously add features weekly. Rest assured, we are doing our best! :)

## üõ†Ô∏è Installation

See installation instructions in [Checkmate documentation portal](https://docs.checkmate.so/checkmate-2.1/users-guide/quickstart). 

Alternatively, you can also use [Coolify](https://coolify.io/), [Elestio](https://elest.io/open-source/checkmate), [K8s](./charts/helm/checkmate/INSTALLATION.md) or [Pikapods](https://www.pikapods.com/) to quickly spin off a Checkmate instance. If you would like to monitor your server infrastructure, you&#039;ll need [Capture agent](https://github.com/bluewave-labs/capture). Capture repository also contains the installation instructions.


## üèÅ Translations

If you would like to use Checkmate in your language, please [go to this page](https://poeditor.com/join/project/lRUoGZFCsJ) and register for the language you would like to translate Checkmate to. 

## üöÄ Performance

Thanks to extensive optimizations, Checkmate operates with an exceptionally small memory footprint, requiring minimal memory and CPU resources. Here‚Äôs the memory usage of a Node.js instance running on a server that monitors 323 servers every minute:

![image](https://github.com/user-attachments/assets/37e04a75-d83a-488f-b25c-025511b492c9)

You can see the memory footprint of MongoDB and Redis on the same server (398Mb and 15Mb) for the same amount of servers:

![image](https://github.com/user-attachments/assets/3b469e85-e675-4040-a162-3f24c1afc751)

## üíö Questions &amp; Ideas

If you have any questions, suggestions or comments, please use our [Discord channel](https://discord.gg/NAb6H3UTjK). We&#039;ve also launched our [Discussions](https://github.com/bluewave-labs/bluewave-uptime/discussions) page! Feel free to ask questions or share your ideas‚Äîwe&#039;d love to hear from you!

## üß© Features

- Completely open source, deployable on your servers or home devices (e.g Raspberry Pi 4 or 5)
- Website monitoring
- Page speed monitoring
- Infrastructure monitoring (memory, disk usage, CPU performance etc) - requires [Capture](https://github.com/bluewave-labs/capture)
- Docker monitoring
- Ping monitoring
- SSL monitoring
- Port monitoring
- Incidents at a glance
- Status pages
- E-mail, Webhooks, Discord, Telegram, Slack notifications
- Scheduled maintenance
- JSON query monitoring
- Support for multiple languages

**Short term roadmap:** ([Milestone 2.2](https://github.com/bluewave-labs/Checkmate/milestone/8))

- Better notifications
- Network monitoring
- ..and a few more features

## üèóÔ∏è Screenshots

&lt;p&gt;
&lt;img width=&quot;1628&quot; alt=&quot;image&quot; src=&quot;https://github.com/user-attachments/assets/2eff6464-0738-4a32-9312-26e1e8e86275&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;img width=&quot;1656&quot; alt=&quot;image&quot; src=&quot;https://github.com/user-attachments/assets/616c3563-c2a7-4ee4-af6c-7e6068955d1a&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;&lt;img width=&quot;1652&quot; alt=&quot;image&quot; src=&quot;https://github.com/user-attachments/assets/7912d7cf-0d0e-4f26-aa5c-2ad7170b5c99&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;img width=&quot;1652&quot; alt=&quot;image&quot; src=&quot;https://github.com/user-attachments/assets/08c2c6ac-3a2f-44d1-a229-d1746a3f9d16&quot; /&gt;
&lt;/p&gt;



## üèóÔ∏è Tech stack

- [ReactJs](https://react.dev/)
- [MUI (React framework)](https://mui.com/)
- [Node.js](https://nodejs.org/en)
- [MongoDB](https://mongodb.com)
- [Recharts](https://recharts.org)
- Lots of other open source components!

## A few links

- If you would like to support us, please consider giving it a ‚≠ê and click on &quot;watch&quot;.
- Have a question or suggestion for the roadmap/featureset? Check our [Discord channel](https://discord.gg/NAb6H3UTjK) or [Discussions](https://github.com/bluewave-labs/checkmate/discussions) forum.
- Need a ping when there&#039;s a new release? Use [Newreleases](https://newreleases.io/), a free service to track releases.
- Watch a Checkmate [installation and usage video](https://www.youtube.com/watch?v=GfFOc0xHIwY)

## ü§ù Contributing

We are [Alex](http://github.com/ajhollid) (team lead), [Vishnu](http://github.com/vishnusn77), [Mohadeseh](http://github.com/mohicody), [Gorkem](http://github.com/gorkem-bwl/), [Owaise](http://github.com/Owaiseimdad), [Aryaman](https://github.com/Br0wnHammer) and [Mert](https://github.com/mertssmnoglu) helping individuals and businesses monitor their infra and servers.

We pride ourselves on building strong connections with contributors at every level. Despite being a young project, Checkmate has already earned 6000+ stars and attracted 80+ contributors from around the globe.

Our repo is starred by employees from **Google, Microsoft, Intel, Cisco, Tencent, Electronic Arts, ByteDance, JP Morgan Chase, Deloitte, Accenture, Foxconn, Broadcom, China Telecom, Barclays, Capgemini, Wipro, Cloudflare, Dassault Syst√®mes and NEC**, so don‚Äôt hold back ‚Äî jump in, contribute and learn with us!

Here&#039;s how you can contribute:

0. Star this repo :)
1. Check [Contributor&#039;s guideline](https://github.com/bluewave-labs/Checkmate/blob/develop/CONTRIBUTING.md). First timers are encouraged to check `good-first-issue` tag.
2. Check [project structure](https://docs.checkmate.so/checkmate-2.1/developers-guide/general-project-structure) and [high level overview](https://bluewavelabs.gitbook.io/checkmate/developers-guide/high-level-overview).
3. Read a detailed structure of [Checkmate](https://deepwiki.com/bluewave-labs/Checkmate) if you would like to deep dive into the architecture.
4. Open an issue if you believe you&#039;ve encountered a bug.
5. Check for good-first-issue&#039;s if you are a newcomer.
6. Make a pull request to add new features/make quality-of-life improvements/fix bugs.

&lt;a href=&quot;https://github.com/bluewave-labs/checkmate/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=bluewave-labs/checkmate&quot; /&gt;
&lt;/a&gt;

[![Star History Chart](https://api.star-history.com/svg?repos=bluewave-labs/checkmate&amp;type=Date)](https://star-history.com/#bluewave-labs/bluewave-uptime&amp;Date)

## üí∞ Our sponsors

Thanks to [Gitbook](https://gitbook.io/) for giving us a free tier for their documentation platform, and [Poeditor](https://poeditor.com/) providing us a free account to use their i18n services. If you would like to sponsor Checkmate, please send an email to hello@bluewavelabs.ca

If you would like to sponsor a feature, [see this page](https://checkmate.so/sponsored-features).

Also check other developer and contributor-friendly projects of BlueWave:

- [VerifyWise](https://github.com/bluewave-labs/verifywise), the first open source AI governance platform.
- [DataRoom](https://github.com/bluewave-labs/bluewave-dataroom), an secure file sharing application, aka dataroom.
- [Guidefox](https://github.com/bluewave-labs/guidefox), an application that helps new users learn how to use your product via hints, tours, popups and banners.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[franceking1/Flash-Md-V2]]></title>
            <link>https://github.com/franceking1/Flash-Md-V2</link>
            <guid>https://github.com/franceking1/Flash-Md-V2</guid>
            <pubDate>Sun, 10 Aug 2025 00:05:15 GMT</pubDate>
            <description><![CDATA[Feel Free To Use FLASH-MD, Remember To STARüåü The Repo before Forking]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/franceking1/Flash-Md-V2">franceking1/Flash-Md-V2</a></h1>
            <p>Feel Free To Use FLASH-MD, Remember To STARüåü The Repo before Forking</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,525</p>
            <p>Forks: 5,613</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre># üöÄ FLASH-MD-V2: The Ultimate WhatsApp Bot

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://files.catbox.moe/fpase8.jpg&quot; alt=&quot;FLASH-MD-V2 Banner&quot; width=&quot;600&quot;/&gt;
&lt;/p&gt;

**FLASH-MD-V2** is a powerful, fully customizable WhatsApp bot built with **Node.js** and the **WhatsApp Web API**. Automate tasks, manage groups, and enhance your WhatsApp experience with ease.
## CONNECT TO WHATSAPP:
- **STAR REPO AND THEN** [FORK IT](https://github.com/franceking1/Flash-Md-V2/fork) 
- **GET SESSION ID USING** [PAIRING CODE](https://flash-v2-session.onrender.com/pair)


---
### üöÄ Deployment Platforms:

| **Platform**        | **Instructions** |
|---------------------|------------------|
| **Heroku**          | **Heroku deployment guide**:&lt;br&gt;1. Create an account on [Heroku](https://signup.heroku.com)&lt;br&gt;2. Add a credit card (required for deployment).&lt;br&gt;3. Use [this tool](https://france-king.vercel.app/) to deploy FLASH-MD V2 instantly. |
| **Render**          | 1. Sign up at [Render](https://render.com) &amp; link GitHub.&lt;br&gt;2. Set Build Command as `npm install` &amp; Start Command as `npm start`.&lt;br&gt;3. Deploy without session env first.&lt;br&gt;4. After first deploy, add `SESSION`, `YOUR_NUMBER`, and `YOUR_LID` to `.env`.&lt;br&gt;5. To keep it 24/7, add your Render app link to `.env`. |
| **Koyeb**           | 1. Sign up at [Koyeb](https://www.koyeb.com) &amp; link GitHub.&lt;br&gt;2. Set up environment variables: `YOUR_NUMBER`, `YOUR_LID`, `SESSION`.&lt;br&gt;3. Deploy using Node.js auto-detect. |
| **Railway**         | 1. Sign up at [Railway](https://railway.app) &amp; link GitHub.&lt;br&gt;2. Set Build Command as `npm install` &amp; Start Command as `npm start`.&lt;br&gt;3. Add environment variables: `YOUR_NUMBER`, `YOUR_LID`, `SESSION`.&lt;br&gt;4. Deploy &amp; your bot is live! |
| **Bot-Hosting.net** | 1. **[DOWNLOAD THE ZIP HERE](https://github.com/franceking1/Flash-Md-V2/archive/refs/heads/main.zip)**.&lt;br&gt;2. Go to [Bot-Hosting.net](https://bot-hosting.net) and create a new Node.js app.&lt;br&gt;3. Upload and extract the ZIP contents.&lt;br&gt;4. Add environment variables: `SESSION`, `YOUR_NUMBER`, `YOUR_LID`.&lt;br&gt;5. Start your bot from the panel. |
| **Optiklink.com**   | 1. **[DOWNLOAD THE ZIP HERE](https://github.com/franceking1/Flash-Md-V2/archive/refs/heads/main.zip)**.&lt;br&gt;2. Go to [Optiklink.com](https://optiklink.com) and create a Node.js project.&lt;br&gt;3. Upload and extract the ZIP.&lt;br&gt;4. Set `.env` values: `SESSION`, `YOUR_NUMBER`, `YOUR_LID`.&lt;br&gt;5. Start the bot via terminal or web console. |
| **Termux**          | **Termux Setup Instructions**:&lt;br&gt;1. Install [Termux](https://f-droid.org/packages/com.termux/) on Android.&lt;br&gt;2. Clone the repo and navigate into the folder.&lt;br&gt;3. Install dependencies and run the bot with the commands below. |

### üìö TERMUX Setup Instructions:

#### 1. Clone the repository:

```bash
git clone https://github.com/franceking1/FLASH-MD-V2.git
```
```bash
cd FLASH-MD-V2
```
```bash
npm install
```
```bash
npm start

``` 
---

### üôè Credits &amp; Licensing

| **Contributor** | **Role** |
|------------------|----------|
| [Baileys](https://github.com/WhiskeySockets/Baileys) | Core WhatsApp Web API Library |
| [FranceKing1](https://github.com/franceking1) | Developer &amp; Maintainer of FLASH-MD-V2 |

---

### ‚ö†Ô∏è Warning

- **Do NOT copy, modify, or redistribute** this bot without **proper permission**.
- FLASH-MD-V2 is an **open-source project**, but it is protected by its license and community standards.
- Give **proper credits** to the original authors and libraries used.
- Any misuse or abuse of this bot is **strictly prohibited**.

---
***
### HELP :
**IF you need any help**
- [**CLICK HERE**](https://messages-snowy.vercel.app)
- [**Click here to send suggestions or queries**](https://suggestions-phi.vercel.app) 


***

### ‚≠ê Support This Project

| **Action** | **Purpose** |
|------------|-------------|
| [Use This Template](https://github.com/franceking1/FLASH-MD-V2/generate) | Create your own working bot easily. Eg, for hosting on render ‚ÄºÔ∏è |
| [Fork This Repo](https://github.com/franceking1/FLASH-MD-V2/fork) | Show your support and boost visibility |

&gt; Every ‚≠ê star and fork makes a big difference ‚Äî thank you for supporting **FLASH-MD-V2**!

&gt; Powered by France King 
---
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[HumanSignal/label-studio]]></title>
            <link>https://github.com/HumanSignal/label-studio</link>
            <guid>https://github.com/HumanSignal/label-studio</guid>
            <pubDate>Sun, 10 Aug 2025 00:05:14 GMT</pubDate>
            <description><![CDATA[Label Studio is a multi-type data labeling and annotation tool with standardized output format]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/HumanSignal/label-studio">HumanSignal/label-studio</a></h1>
            <p>Label Studio is a multi-type data labeling and annotation tool with standardized output format</p>
            <p>Language: JavaScript</p>
            <p>Stars: 24,116</p>
            <p>Forks: 2,965</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>&lt;img src=&quot;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/ls_github_header.png&quot;/&gt;

![GitHub](https://img.shields.io/github/license/heartexlabs/label-studio?logo=heartex) ![label-studio:build](https://github.com/heartexlabs/label-studio/workflows/label-studio:build/badge.svg) ![GitHub release](https://img.shields.io/github/v/release/heartexlabs/label-studio?include_prereleases)

[Website](https://labelstud.io/) ‚Ä¢ [Docs](https://labelstud.io/guide/) ‚Ä¢ [Twitter](https://twitter.com/heartexlabs) ‚Ä¢ [Join Slack Community &lt;img src=&quot;https://app.heartex.ai/docs/images/slack-mini.png&quot; width=&quot;18px&quot;/&gt;](https://slack.labelstudio.heartex.com/?source=github-1)


## What is Label Studio?

&lt;!-- &lt;a href=&quot;https://labelstud.io/blog/release-130.html&quot;&gt;&lt;img src=&quot;https://github.com/heartexlabs/label-studio/raw/master/docs/themes/htx/source/images/release-130/LS-Hits-v1.3.png&quot; align=&quot;right&quot; /&gt;&lt;/a&gt; --&gt;

Label Studio is an open source data labeling tool. It lets you label data types like audio, text, images, videos, and time series with a simple and straightforward UI and export to various model formats. It can be used to prepare raw data or improve existing training data to get more accurate ML models.

- [Try out Label Studio](#try-out-label-studio)
- [What you get from Label Studio](#what-you-get-from-label-studio)
- [Included templates for labeling data in Label Studio](#included-templates-for-labeling-data-in-label-studio)
- [Set up machine learning models with Label Studio](#set-up-machine-learning-models-with-Label-Studio)
- [Integrate Label Studio with your existing tools](#integrate-label-studio-with-your-existing-tools)

![Gif of Label Studio annotating different types of data](https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/annotation_examples.gif)

Have a custom dataset? You can customize Label Studio to fit your needs. Read an [introductory blog post](https://towardsdatascience.com/introducing-label-studio-a-swiss-army-knife-of-data-labeling-140c1be92881) to learn more. 

## Try out Label Studio

Install Label Studio locally, or deploy it in a cloud instance. Also you can try [Label Studio Teams](https://app.heartex.com).

- [Install locally with Docker](#install-locally-with-docker)
- [Run with Docker Compose (Label Studio + Nginx + PostgreSQL)](#run-with-docker-compose)
- [Install locally with pip](#install-locally-with-pip)
- [Install locally with Anaconda](#install-locally-with-anaconda)
- [Install for local development](#install-for-local-development)
- [Deploy in a cloud instance](#deploy-in-a-cloud-instance)

### Install locally with Docker
Official Label Studio docker image is [here](https://hub.docker.com/r/heartexlabs/label-studio) and it can be downloaded with `docker pull`. 
Run Label Studio in a Docker container and access it at `http://localhost:8080`.


```bash
docker pull heartexlabs/label-studio:latest
docker run -it -p 8080:8080 -v `pwd`/mydata:/label-studio/data heartexlabs/label-studio:latest
```
You can find all the generated assets, including SQLite3 database storage `label_studio.sqlite3` and uploaded files, in the `./mydata` directory.

#### Override default Docker install
You can override the default launch command by appending the new arguments:
```bash
docker run -it -p 8080:8080 -v `pwd`/mydata:/label-studio/data heartexlabs/label-studio:latest label-studio --log-level DEBUG
```

#### Build a local image with Docker
If you want to build a local image, run:
```bash
docker build -t heartexlabs/label-studio:latest .
```

### Run with Docker Compose
Docker Compose script provides production-ready stack consisting of the following components:

- Label Studio
- [Nginx](https://www.nginx.com/) - proxy web server used to load various static data, including uploaded audio, images, etc.
- [PostgreSQL](https://www.postgresql.org/) - production-ready database that replaces less performant SQLite3.

To start using the app from `http://localhost` run this command:
```bash
docker-compose up
```

### Install locally with pip

```bash
# Requires Python &gt;=3.7 &lt;=3.9
pip install label-studio

# Start the server at http://localhost:8080
label-studio
```

### Install locally with Anaconda

```bash
conda create --name label-studio
conda activate label-studio
pip install label-studio
```

### Install for local development

You can run the latest Label Studio version locally without installing the package with pip. 

```bash
# Install all package dependencies
pip install -e .
# Run database migrations
python label_studio/manage.py migrate
# Start the server in development mode at http://localhost:8080
python label_studio/manage.py runserver
```

### Deploy in a cloud instance

You can deploy Label Studio with one click in Heroku, Microsoft Azure, or Google Cloud Platform: 

[&lt;img src=&quot;https://www.herokucdn.com/deploy/button.svg&quot; height=&quot;30px&quot;&gt;](https://heroku.com/deploy?template=https://github.com/heartexlabs/label-studio/tree/heroku-persistent-pg)
[&lt;img src=&quot;https://aka.ms/deploytoazurebutton&quot; height=&quot;30px&quot;&gt;](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2Fheartexlabs%2Flabel-studio%2Fmaster%2Fazuredeploy.json)
[&lt;img src=&quot;https://deploy.cloud.run/button.svg&quot; height=&quot;30px&quot;&gt;](https://deploy.cloud.run)


#### Apply frontend changes

The frontend part of Label Studio app lies in the `frontend/` folder and written in React JSX. In case you&#039;ve made some changes there, the following commands should be run before building / starting the instance:

```
cd label_studio/frontend/
npm ci
npx webpack
cd ../..
python label_studio/manage.py collectstatic --no-input
```

### Troubleshoot installation
If you see any errors during installation, try to rerun the installation

```bash
pip install --ignore-installed label-studio
```

#### Install dependencies on Windows 
To run Label Studio on Windows, download and install the following wheel packages from [Gohlke builds](https://www.lfd.uci.edu/~gohlke/pythonlibs) to ensure you&#039;re using the correct version of Python:
- [lxml](https://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml)

```bash
# Upgrade pip 
pip install -U pip

# If you&#039;re running Win64 with Python 3.8, install the packages downloaded from Gohlke:
pip install lxml‚Äë4.5.0‚Äëcp38‚Äëcp38‚Äëwin_amd64.whl

# Install label studio
pip install label-studio
```

#### Run test suite
```bash
pip install -r deploy/requirements-test.txt
cd label_studio

# postgres (assumes default postgres user,db,pass)
DJANGO_DB=default DJANGO_SETTINGS_MODULE=core.settings.label_studio python -m pytest -vv -n auto

# sqlite3
DJANGO_DB=sqlite DJANGO_SETTINGS_MODULE=core.settings.label_studio python -m pytest -vv -n auto
```


## What you get from Label Studio

![Screenshot of Label Studio data manager grid view with images](https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/labelstudio-ui.gif)

- **Multi-user labeling** sign up and login, when you create an annotation it&#039;s tied to your account.
- **Multiple projects** to work on all your datasets in one instance.
- **Streamlined design** helps you focus on your task, not how to use the software.
- **Configurable label formats** let you customize the visual interface to meet your specific labeling needs.
- **Support for multiple data types** including images, audio, text, HTML, time-series, and video. 
- **Import from files or from cloud storage** in Amazon AWS S3, Google Cloud Storage, or JSON, CSV, TSV, RAR, and ZIP archives. 
- **Integration with machine learning models** so that you can visualize and compare predictions from different models and perform pre-labeling.
- **Embed it in your data pipeline** REST API makes it easy to make it a part of your pipeline

## Included templates for labeling data in Label Studio 

Label Studio includes a variety of templates to help you label your data, or you can create your own using specifically designed configuration language. The most common templates and use cases for labeling include the following cases:

&lt;img src=&quot;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/templates-categories.jpg&quot; /&gt;

## Set up machine learning models with Label Studio

Connect your favorite machine learning model using the Label Studio Machine Learning SDK. Follow these steps:

1. Start your own machine learning backend server. See [more detailed instructions](https://github.com/heartexlabs/label-studio-ml-backend).
2. Connect Label Studio to the server on the model page found in project settings.

This lets you:

- **Pre-label** your data using model predictions. 
- Do **online learning** and retrain your model while new annotations are being created. 
- Do **active learning** by labeling only the most complex examples in your data.

## Integrate Label Studio with your existing tools

You can use Label Studio as an independent part of your machine learning workflow or integrate the frontend or backend into your existing tools.  

* Use the [Label Studio Frontend](https://github.com/heartexlabs/label-studio-frontend) as a separate React library. See more in the [Frontend Library documentation](https://labelstud.io/guide/frontend.html). 

## Ecosystem

| Project | Description |
|-|-|
| label-studio | Server, distributed as a pip package |
| [label-studio-frontend](https://github.com/heartexlabs/label-studio-frontend) | React and JavaScript frontend and can run standalone in a web browser or be embedded into your application. |  
| [data-manager](https://github.com/heartexlabs/dm2) | React and JavaScript frontend for managing data. Includes the Label Studio Frontend. Relies on the label-studio server or a custom backend with the expected API methods. | 
| [label-studio-converter](https://github.com/heartexlabs/label-studio-converter) | Encode labels in the format of your favorite machine learning library | 
| [label-studio-transformers](https://github.com/heartexlabs/label-studio-transformers) | Transformers library connected and configured for use with Label Studio |


## Roadmap

Want to use **The Coolest Feature X** but Label Studio doesn&#039;t support it? Check out [our public roadmap](roadmap.md)!

## Citation

```tex
@misc{Label Studio,
  title={{Label Studio}: Data labeling software},
  url={https://github.com/heartexlabs/label-studio},
  note={Open source software available from https://github.com/heartexlabs/label-studio},
  author={
    Maxim Tkachenko and
    Mikhail Malyuk and
    Andrey Holmanyuk and
    Nikolai Liubimov},
  year={2020-2022},
}
```

## License

This software is licensed under the [Apache 2.0 LICENSE](/LICENSE) ¬© [Heartex](https://www.heartex.ai/). 2020-2021

&lt;img src=&quot;https://github.com/heartexlabs/label-studio/blob/master/images/opossum_looking.png?raw=true&quot; title=&quot;Hey everyone!&quot; height=&quot;140&quot; width=&quot;140&quot; /&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[LeCoupa/awesome-cheatsheets]]></title>
            <link>https://github.com/LeCoupa/awesome-cheatsheets</link>
            <guid>https://github.com/LeCoupa/awesome-cheatsheets</guid>
            <pubDate>Sun, 10 Aug 2025 00:05:13 GMT</pubDate>
            <description><![CDATA[üë©‚Äçüíªüë®‚Äçüíª Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/LeCoupa/awesome-cheatsheets">LeCoupa/awesome-cheatsheets</a></h1>
            <p>üë©‚Äçüíªüë®‚Äçüíª Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 43,266</p>
            <p>Forks: 6,504</p>
            <p>Stars today: 21 stars today</p>
            <h2>README</h2><pre>[![AWESOME CHEATSHEETS LOGO](_design/cover_github@2x.png)](https://lecoupa.github.io/awesome-cheatsheets/)

[![Awesome](https://awesome.re/badge.svg)](https://awesome.re) [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/LeCoupa/awesome-cheatsheets/blob/master/LICENSE)

**WEBSITE DIRECTORY**: [Available here](https://lecoupa.github.io/awesome-cheatsheets/).

&gt; üìö Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.

## ü§î Why Awesome-Cheatsheets?

I usually make a cheat sheet when I want to improve my skills in a programming language, a framework or a development tool. [I started doing these kinds of things a long time ago on Gist](https://gist.github.com/LeCoupa). To better keep track of the history and to let people contribute, I re-organized all of them into this single repository. Most of the content is coming from official documentation and some books I have read.

Feel free to take a look. You might learn new things. They have been designed to provide a quick way to assess your knowledge and to save you time.

## üìö Table of Contents

### üìÉ Languages

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### Command line interface

- [Bash](languages/bash.sh)

#### Imperative

- [C](languages/C.txt)
- [C#](languages/C%23.txt)
- [Go](languages/golang.md)
- [Java](languages/java.md)
- [PHP](languages/php.php)
- [Python](languages/python.md)

#### Functional

- [JavaScript](languages/javascript.js)

&lt;/details&gt;

### üì¶ Backend

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### PHP

- [Laravel](backend/laravel.php)

#### Python

- [Django](backend/django.py)

#### Javascript

- [Adonis.js](backend/adonis.js)
- [Express.js](backend/express.js)
- [Feathers.js](backend/feathers.js)
- [Moleculer](backend/moleculer.js)
- [Node.js](backend/node.js)
- [Sails.js](backend/sails.js)
  &lt;/details&gt;

### üåê Frontend

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### Basics

- [HTML5](frontend/html5.html)
- [CSS3](frontend/css3.css)

#### Frameworks

- [React.js](frontend/react.js)
- [Vue.js](frontend/vue.js)
- [Tailwind.css](frontend/tailwind.css)
- [Ember.js](frontend/ember.js)
- [Angular (2+)](frontend/angular.js)
- [AngularJS](frontend/angularjs.js)
  &lt;/details&gt;

### üóÉÔ∏è Databases

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### SQL

- [MySQL](databases/mysql.sh)

#### NoSQL

- [Redis](databases/redis.sh)
  &lt;/details&gt;

### üîß Tools

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### Development

- [cURL](tools/curl.sh)
- [Drush](tools/drush.sh)
- [Elasticsearch](tools/elasticsearch.js)
- [Emmet](tools/emmet.md)
- [Git](tools/git.sh)
- [Puppeteer](tools/puppeteer.js)
- [Sublime Text](tools/sublime_text.md)
- [VIM](tools/vim.txt)
- [Visual Studio Code](tools/vscode.md)
- [Xcode](tools/xcode.txt)

#### Infrastructure

- [AWS CLI](tools/aws.sh)
- [Docker](tools/docker.sh)
- [Heroku CLI](tools/heroku.sh)
- [Kubernetes](tools/kubernetes.md)
- [Nanobox Boxfile](tools/nanobox_boxfile.yml)
- [Nanobox CLI](tools/nanobox_cli.sh)
- [Nginx](tools/nginx.sh)
- [PM2](tools/pm2.sh)
- [Ubuntu](tools/ubuntu.sh)
- [Firebase CLI](tools/firebase_cli.md)
  &lt;/details&gt;

## üôåüèº How to Contribute?

You are more than welcome to contribute and build your own cheat sheet for your favorite programming language, framework or development tool. Just submit changes via pull request and I will review them before merging.

## üë©‚Äçüíªüë®‚Äçüíª Our valuable Contributors

&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/LeCoupa/awesome-cheatsheets/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contributors-img.web.app/image?repo=LeCoupa/awesome-cheatsheets&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[automerge/automerge]]></title>
            <link>https://github.com/automerge/automerge</link>
            <guid>https://github.com/automerge/automerge</guid>
            <pubDate>Sun, 10 Aug 2025 00:05:12 GMT</pubDate>
            <description><![CDATA[A JSON-like data structure (a CRDT) that can be modified concurrently by different users, and merged again automatically.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/automerge/automerge">automerge/automerge</a></h1>
            <p>A JSON-like data structure (a CRDT) that can be modified concurrently by different users, and merged again automatically.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,292</p>
            <p>Forks: 212</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre># Automerge

&lt;img src=&#039;./img/sign.svg&#039; width=&#039;500&#039; alt=&#039;Automerge logo&#039; /&gt;

[![homepage](https://img.shields.io/badge/homepage-published-informational)](https://automerge.org/)
[![main docs](https://img.shields.io/badge/docs-main-informational)](https://automerge.org/automerge/automerge/)
[![latest docs](https://img.shields.io/badge/docs-latest-informational)](https://docs.rs/automerge/latest/automerge)
[![ci](https://github.com/automerge/automerge/actions/workflows/ci.yaml/badge.svg)](https://github.com/automerge/automerge/actions/workflows/ci.yaml)

Automerge is a library which provides fast implementations of several different
CRDTs, a compact compression format for these CRDTs, and a sync protocol for
efficiently transmitting those changes over the network. The objective of the
project is to support [local-first](https://www.inkandswitch.com/local-first/) applications in the same way that relational
databases support server applications - by providing mechanisms for persistence
which allow application developers to avoid thinking about hard distributed
computing problems. Automerge aims to be PostgreSQL for your local-first app.

If you&#039;re looking for documentation on the JavaScript implementation take a look
at https://automerge.org/docs/hello/. This repository also contains the core
Rust library which is compiled to WebAssembly and exposed in JavaScript. The
docs for this library can be found on
[docs.rs](https://docs.rs/automerge/latest/automerge/). Finally, there is a C
library in `rust/automerge-c`, take a look at the README there for more details.

If you&#039;re familiar with CRDTs and interested in the design of Automerge in
particular take a look at https://automerge.org/automerge-binary-format-spec.

Finally, if you want to talk to us about this project please [join our Discord
server](https://discord.gg/HrpnPAU5zx)!

## Status

This project is formed of a core Rust implementation which is exposed via FFI in
javascript+WASM, C, and soon other languages. Alex
([@alexjg](https://github.com/alexjg/)) and Orion
([@orionz](https://github.com/orionz)) are working full time on maintaining
automerge, other members of Ink and Switch are also contributing time and there
are several other maintainers. We are currently focusing on a new implementation
of the internals (with no API change) which achieves around a 100x reduction in
memory usage.

In general we try and respect semver.

### JavaScript

A stable release of the javascript package is currently available as
`@automerge/automerge@2.0.0` where. pre-release verisions of the `2.0.1` are
available as `2.0.1-alpha.n`.

### Rust

The rust codebase is currently oriented around producing a performant backend
for the Javascript wrapper and as such the API for Rust code is low level and
not well documented. We will be returning to this over the next few months but
for now you will need to be comfortable reading the tests and asking questions
to figure out how to use it. If you are looking to build rust applications which
use automerge you may want to look into
[autosurgeon](https://github.com/automerge/autosurgeon)

## Repository Organisation

- `./rust` - the rust implementation and also the Rust components of
  platform specific wrappers (e.g. `automerge-wasm` for the WASM API or
  `automerge-c` for the C FFI bindings)
- `./javascript` - The javascript library which uses `automerge-wasm`
  internally but presents a more idiomatic javascript interface
- `./scripts` - scripts which are useful to maintenance of the repository.
  This includes the scripts which are run in CI.
- `./img` - static assets for use in `.md` files

## Building

To build this codebase you will need:

- `rust`
- `node`
- `yarn`

And if you are interested in building the automerge-c library

- `cmake`
- `cmocka`
- `doxygen`
- `ninja`

You will also need to install the following with `cargo install`

- `wasm-bindgen-cli`
- `wasm-opt`
- `cargo-deny`

And ensure you have added the `wasm32-unknown-unknown` target for rust cross-compilation.

The various subprojects (the rust code, the wrapper projects) have their own
build instructions, but to run the tests that will be run in CI you can run
`./scripts/ci/run`.

### For macOS

These instructions worked to build locally on macOS 13.1 (arm64) as of
Nov 29th 2022.

```bash
# clone the repo
git clone https://github.com/automerge/automerge
cd automerge

# install rustup
curl --proto &#039;=https&#039; --tlsv1.2 -sSf https://sh.rustup.rs | sh

# install homebrew
/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;

# install cmake, node, cmocka
brew install cmake node cmocka

# install yarn
npm install --global yarn

# install javascript dependencies
yarn --cwd ./javascript

# install rust dependencies
cargo install wasm-bindgen-cli wasm-opt cargo-deny

# get nightly rust to produce optimized automerge-c builds
rustup toolchain install nightly
rustup component add rust-src --toolchain nightly

# add wasm target in addition to current architecture
rustup target add wasm32-unknown-unknown

# Run ci script
./scripts/ci/run
```

If your build fails to find `cmocka.h` you may need to teach it about homebrew&#039;s
installation location:

```
export CPATH=/opt/homebrew/include
export LIBRARY_PATH=/opt/homebrew/lib
./scripts/ci/run
```

## Nix Flake

If you have [Nix](https://nixos.org/) installed, there is a flake available with all
of the dependencies configured and some helper scripts.

``` console
$ nix develop

  ____                                          _
 / ___|___  _ __ ___  _ __ ___   __ _ _ __   __| |___
| |   / _ \| &#039;_ ` _ \| &#039;_ ` _ \ / _` | &#039;_ \ / _` / __|
| |__| (_) | | | | | | | | | | | (_| | | | | (_| \__ \
 \____\___/|_| |_| |_|_| |_| |_|\__,_|_| |_|\__,_|___/


build:deno          | Build Deno-wrapped Wasm library
build:host          | Build for aarch64-darwin
build:node          | Build JS-wrapped Wasm library
build:wasi          | Build for Wasm32-WASI
build:wasm:nodejs   | Build for wasm32-unknown-unknown with Node.js bindgings
build:wasm:web      | Build for wasm32-unknown-unknown with web bindings
docs:build:host     | Refresh the docs
docs:build:wasm     | Refresh the docs with the wasm32-unknown-unknown target
docs:open:host      | Open refreshed docs
docs:open:wasm      | Open refreshed docs
# ‚úÇÔ∏è  SNIP ‚úÇÔ∏è

$ rustc --version
rustc 1.82.0 (f6e511eec 2024-10-15) # latest at time of writing
```

## Contributing

Please try and split your changes up into relatively independent commits which
change one subsystem at a time and add good commit messages which describe what
the change is and why you&#039;re making it (err on the side of longer commit
messages). `git blame` should give future maintainers a good idea of why
something is the way it is.

### Releasing

There are four artefacts in this repository which need releasing:

* The `@automerge/automerge` NPM package
* The `@automerge/automerge-wasm` NPM package
* The automerge deno crate
* The `automerge` rust crate

#### JS Packages

The NPM package is released automatically by CI tooling whenever a new Github release
is created. This means that the process for releasing an ew JS version is:

1. Bump the version in `@automerge/automerge` also in `javascript/package.json`
2. Put in a PR to main with the version bump, wait for tests to run and merge to `main`
3. Once merged to main, create a tag of the form `js/automerge-&lt;version&gt;`
4. Create a new release on Github referring to the tag in question

This does depend on an access token available as `NPM_TOKEN` in the
actions environment, this token is generated with a 30 day expiry date so needs
(manually) refreshing every so often.

#### Rust Package

This is much easier, but less automatic. The steps to release are:

1. Bump the version in `automerge/Cargo.toml`
2. Push a PR and merge once clean
3. Tag the release as `rust/automerge@&lt;version&gt;`
4. Push the tag to the repository
5. Publish the release with `cargo publish`
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[GoogleChrome/chrome-extensions-samples]]></title>
            <link>https://github.com/GoogleChrome/chrome-extensions-samples</link>
            <guid>https://github.com/GoogleChrome/chrome-extensions-samples</guid>
            <pubDate>Sun, 10 Aug 2025 00:05:11 GMT</pubDate>
            <description><![CDATA[Chrome Extensions Samples]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/GoogleChrome/chrome-extensions-samples">GoogleChrome/chrome-extensions-samples</a></h1>
            <p>Chrome Extensions Samples</p>
            <p>Language: JavaScript</p>
            <p>Stars: 16,709</p>
            <p>Forks: 8,718</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre># Chrome Extensions samples

Official samples for Chrome Extensions and the Chrome Apps platform. (Chrome Apps are deprecated. Learn more [on the Chromium blog](https://blog.chromium.org/2020/08/changes-to-chrome-app-support-timeline.html)).

For more information on extensions, see [Chrome Developers](https://developer.chrome.com).

## Explore samples

The directory structure is as follows:

- [api-samples/](api-samples/) - extensions focused on a single API package
- [functional-samples/](functional-samples/) - full featured extensions spanning multiple API packages
- [\_archive/apps/](_archive/apps/) - deprecated Chrome Apps platform (not listed below)
- [\_archive/mv2/](_archive/mv2/) - resources for manifest version 2

You can also use the [Samples](https://developer.chrome.com/docs/extensions/samples/) page to discover extensions by type, permissions, and extension API.

## Installation

To experiment with these samples, please clone this repo and use &#039;Load Unpacked Extension&#039;.
Read more on [Development Basics](https://developer.chrome.com/docs/extensions/mv3/getstarted/development-basics/#load-unpacked).

## Contributing

Please see [the CONTRIBUTING file](/CONTRIBUTING.md) for information on contributing to the `chrome-extensions-samples` project.

## License

`chrome-extensions-samples` are authored by Google and are licensed under the [Apache License, Version 2.0](/LICENSE).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[vercel/next.js]]></title>
            <link>https://github.com/vercel/next.js</link>
            <guid>https://github.com/vercel/next.js</guid>
            <pubDate>Sun, 10 Aug 2025 00:05:10 GMT</pubDate>
            <description><![CDATA[The React Framework]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vercel/next.js">vercel/next.js</a></h1>
            <p>The React Framework</p>
            <p>Language: JavaScript</p>
            <p>Stars: 133,701</p>
            <p>Forks: 29,027</p>
            <p>Stars today: 21 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[birobirobiro/awesome-shadcn-ui]]></title>
            <link>https://github.com/birobirobiro/awesome-shadcn-ui</link>
            <guid>https://github.com/birobirobiro/awesome-shadcn-ui</guid>
            <pubDate>Sun, 10 Aug 2025 00:05:09 GMT</pubDate>
            <description><![CDATA[A curated list of awesome things related to shadcn/ui.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/birobirobiro/awesome-shadcn-ui">birobirobiro/awesome-shadcn-ui</a></h1>
            <p>A curated list of awesome things related to shadcn/ui.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 16,673</p>
            <p>Forks: 969</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;br&gt;
  &lt;img width=&quot;400&quot; src=&quot;https://raw.githubusercontent.com/birobirobiro/awesome-shadcn-ui/64729b2c178e3fdcb42c0c7bf341bcde7ae502ea/assets/logo.svg&quot; alt=&quot;logo of awesome-shadcn/ui repository&quot;&gt;
  &lt;br&gt;
  &lt;br&gt;
&lt;/p&gt;

&lt;h2 align=&#039;center&#039;&gt;awesome-shadcn/ui&lt;/h2&gt;

&lt;p align=&#039;center&#039;&gt;
A curated list of awesome things related to &lt;a href=&#039;https://ui.shadcn.com/&#039; target=&quot;_blank&quot;&gt;shadcn/ui&lt;/a&gt;
&lt;br&gt;&lt;br&gt;

&lt;p align=&#039;center&#039;&gt;
&lt;i&gt;Created by: &lt;a href=&#039;https://birobirobiro.dev/&#039; target=&quot;_blank&quot;&gt;birobirobiro.dev&lt;/a&gt;&lt;/i&gt;
&lt;br&gt;&lt;br&gt;

&lt;a href=&#039;https://github.com/birobirobiro/awesome-shadcn-ui/&#039; target=&quot;_blank&quot;&gt;
&lt;img src=&#039;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg&#039; alt=&#039;Awesome&#039;&gt;
&lt;/a&gt;
&lt;/p&gt;

## Libs and Components

| Name | Description | Link | Date |
|------|-------------|------|------|
| 21st.dev                              | Open source npm for shadcn/ui components. Also: Dribble for design engineers. Install UI components via shadcn CLI, or publish your own.                                                                                                        | [Link](https://21st.dev/)                                                               | 2024-12-06 
| 8bitcn.com                            | A set of retro-designed, accessible components and a code distribution platform. Open Source. Open Code.                                                                                                                                        | [Link](https://www.8bitcn.com/)                                                         | 2025-04-12 
| aceternity-ui                         | Copy paste the most trending react components without having to worry about styling and animations.                                                                                                                                             | [Link](https://ui.aceternity.com/)                                                      | 2024-12-06 
| animated-tabs                         | Vercel-like animated tabs.                                                                                                                                                                                                                      | [Link](https://github.com/mehrdadrafiee/animated-tabs)                                  | 2025-04-06 
| assistant-ui                          | React Components for AI Chat.                                                                                                                                                                                                                   | [Link](https://github.com/Yonom/assistant-ui)                                           | 2024-09-23 
| autocomplete-select-shadcn-ui         | Autocomplete component built with shadcn/ui and Fancy Multi Select by Maximilian Kaske.                                                                                                                                                         | [Link](https://www.armand-salle.fr/post/autocomplete-select-shadcn-ui)                  | 2024-04-07 
| auto-form                             | A React component that automatically creates a shadcn/ui form based on a zod schema.                                                                                                                                                            | [Link](https://github.com/vantezzen/auto-form)                                          | 2024-04-29 
| async-select                          | Async Select component built with shadcn/ui with debounce search.                                                                                                                                                                               | [Link](https://async.rdsx.dev)                                                          | 2024-07-22 
| berlix                                | Animated components library built using Tailwind CSS and Motion                                                                                                                                                                                 | [Link](https://berlix.vercel.app)                                                       | 2025-06-10 
| big-calendar                          | A modern, feature-rich calendar application with multiple viewing options built using Next.js, TypeScript, and Tailwind CSS.                                                                                                                    | [Link](https://github.com/lramos33/big-calendar)                                        | 2025-03-08 
| buouui                                | A UI component library and template suite based on shadcn/ui with stunning landing pages, templates, and rich animations.                                                                                                                       | [Link](https://buouui.com)                                                              | 2025-04-06 
| bundui                                | A collection of reusable animated components built with Tailwind CSS and Framer Motion.                                                                                                                                                         | [Link](https://bundui.io)                                                               | 2024-09-23 
| calendar                              | React/shadcn full calendar like Google Calendar                                                                                                                                                                                                 | [Link](https://github.com/charlietlamb/calendar)                                        | 2024-05-03 
| capture-photo                         | Browser-based React component for camera functionalities in web applications.                                                                                                                                                                   | [Link](https://github.com/UretzkyZvi/capture-photo)                                     | 2024-05-06 
| clerk-elements                        | Composable components for building custom UIs on top of Clerk&#039;s APIs.                                                                                                                                                                           | [Link](https://clerk.com/docs/elements/examples/shadcn-ui)                              | 2024-06-07 
| clerk-shadcn-theme                    | Synchronize Clerk SignIn/SignUp components with shadcn/ui styles.                                                                                                                                                                               | [Link](https://github.com/stormynight9/clerk-shadcn-theme)                              | 2024-06-07 
| commerce-ui                           | Components, blocks and examples to build e-commerce storefronts and apps.                                                                                                                                                                       | [Link](https://github.com/stackzero-labs/ui)                                            | 2025-02-20 
| confirm-dialog                        | A confirm dialog component built with shadcn/ui.                                                                                                                                                                                                | [Link](https://github.com/Aslam97/react-confirm-dialog)                                 | 2024-07-02 
| country-state-dropdown                | Component built with Nextjs, Tailwindcss, shadcn/ui &amp; Zustand.                                                                                                                                                                                  | [Link](https://github.com/Jayprecode/country-state-dropdown)                            | 2024-02-22 
| cult-ui                               | Curated set of animated shadcn-style React components.                                                                                                                                                                                          | [Link](https://www.cult-ui.com/)                                                        | 2024-05-29 
| credenza                              | Ready-made responsive modal component for shadcn/ui.                                                                                                                                                                                            | [Link](https://github.com/redpangilinan/credenza)                                       | 2024-06-07 
| crypto-charts                         | Crypto charts made for shadcn/ui using PythNetwork.                                                                                                                                                                                             | [Link](https://github.com/jstnw10/crypto-charts)                                        | 2024-07-16 
| date-range-picker-for-shadcn          | Multi-month views, text entry, preset ranges, responsive design, and date range comparisons.                                                                                                                                                    | [Link](https://github.com/johnpolacek/date-range-picker-for-shadcn)                     | 2024-04-29 
| date-time-picker-shadcn               | Datetime Picker for shadNext Project.                                                                                                                                                                                                           | [Link](https://shadcn-datetime-picker.vercel.app)                                       | 2024-07-16 
| date-time-range-picker-shadcn         | Fully featured date-time range picker with multi-month views, timezone support, preset ranges, and modular components for date and time selection.                                                                                              | [Link](https://date-time-range-picker.vercel.app/)                                      | 2025-03-08 
| datetime-picker                       | Datetime picker with timezone support, min/max dates, and month/year selection.                                                                                                                                                                 | [Link](https://shadcn-datetime-picker-xi.vercel.app)                                    | 2024-07-16 
| dnd-dashboard                         | Dashboard with drop-to-swap layouts using Next.js, shadcn/ui, and swapy.                                                                                                                                                                        | [Link](https://github.com/olliethedev/dnd-dashboard)                                    | 2024-10-17 
| downshift-shadcn-combobox             | Combobox/autocomplete component built with shadcn/ui and Downshift.                                                                                                                                                                             | [Link](https://github.com/TheOmer77/downshift-shadcn-combobox)                          | 2024-06-27 
| drag-to-resize-sidebar                | Extended shadcn/ui sidebar component with persisted state drag-to-resize functionality.                                                                                                                                                         | [Link](https://github.com/lumpinif/drag-to-resize-sidebar)                              | 2024-11-21 
| druid/ui                              | Intercom inspired AI chatbot and UI components built on shadcn/ui.                                                                                                                                                                              | [Link](https://druidui.com/)                                                            | 2024-11-21 
| drop-drawer                           | A dropdown menu on desktop and a drawer on mobile devices.                                                                                                                                                                                      | [Link](https://github.com/jiaweing/DropDrawer)                                          | 2025-05-13 
| dy-comps                              | shacn/ui &amp; Framer Motion React components ‚Äî flexible, responsive &amp; easy to drop into any project.                                                                                                                                               | [Link](https://dycomps.oimmi.com/)                                                      | 2025-03-08 
| echo-editor                           | Modern WYSIWYG rich-text editor based on tiptap and shadcn/ui.                                                                                                                                                                                  | [Link](https://github.com/Seedsa/echo-editor)                                           | 2024-06-07 
| edil-ozi                              | React components with Gsap, framer motion, and tailwind.                                                                                                                                                                                        | [Link](https://edilozi.pro/)                                                            | 2024-06-27 
| emblor                                | Customizable, accessible tag input component with shadcn/ui.                                                                                                                                                                                    | [Link](https://github.com/JaleelB/emblor)                                               | 2024-04-29 
| enhanced-button                       | Enhanced version of the default shadcn-button component.                                                                                                                                                                                        | [Link](https://github.com/jakobhoeg/enhanced-button)                                    | 2024-04-29 
|envin|Framework-agnostic, type-safe tool to validate and preview your environment variables - powered by your favorite schema validator.|[Link](https://envin.turbostarter.dev)| 2025-07-07 
| eo-n/ui                               | Enhanced UI components built on shadcn‚Äôs robust foundation, integrated with Base UI and Tailwind CSS for a modern and customizable design system.                                                                                               | [Link](https://github.com/aeonzz/eo-n)                                                  | 2025-04-04 
| event-timeline-roadmap                | A pair of customizable, animated event timeline and roadmap components                                                                                                                                                                          | [Link](https://roadmap.hncore.website/)                                                 | 2025-04-01 
| extend-ui                             | Reusable components built on shadcn/ui for web applications.                                                                                                                                                                                    | [Link](https://www.extend-ui.com/)                                                      | 2024-11-28 
| fancy-area                            | Textarea with @mention support inspired by GitHub&#039;s PR comment section.                                                                                                                                                                         | [Link](https://craft.mxkaske.dev/post/fancy-area)                                       | 2024-06-27 
| fancy-box                             | GitHub PR label selector-inspired Combobox with radix-ui components.                                                                                                                                                                            | [Link](https://craft.mxkaske.dev/post/fancy-box)                                        | 2024-07-11 
| fancy-multi-select                    | Multi Select Component inspired by campsite.design and cal.com.                                                                                                                                                                                 | [Link](https://craft.mxkaske.dev/post/fancy-multi-select)                               | 2024-04-29 
| fancy-switch                          | Fancy switch component built with shadcn/ui.                                                                                                                                                                                                    | [Link](https://github.com/Aslam97/react-fancy-switch)                                   | 2024-07-11 
| farmui                                | Styled and animated component library with npm package support.                                                                                                                                                                                 | [Link](https://farmui.com)                                                              | 2024-06-08 
| file-uploader                         | File uploader with shadcn/ui and react-dropzone.                                                                                                                                                                                                | [Link](https://github.com/sadmann7/file-uploader)                                       | 2024-06-07 
| file-vault                            | File upload component for React.                                                                                                                                                                                                                | [Link](https://github.com/ManishBisht777/file-vault)                                    | 2024-06-07 
| floating-dragable-card                | Dragable and resizable card using shadcn/ui elements.                                                                                                                                                                                           | [Link](https://github.com/nishansanjuka/react-drag-card)                                | 2024-11-13 
| fusion-ui                             | Library combining shadcn/ui and MagicUI.                                                                                                                                                                                                        | [Link](https://github.com/nyxb-ui/ui)                                                   | 2024-07-02 
| glasscn-ui                            | shadcn/ui component library with glassmorphism variants, and many additional components.                                                                                                                                                        | [Link](https://github.com/itsjavi/glasscn-ui)                                           | 2025-06-10 
| gluestack-ui                          | Rea

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[browserslist/browserslist]]></title>
            <link>https://github.com/browserslist/browserslist</link>
            <guid>https://github.com/browserslist/browserslist</guid>
            <pubDate>Sun, 10 Aug 2025 00:05:08 GMT</pubDate>
            <description><![CDATA[ü¶î Share target browsers between different front-end tools, like Autoprefixer, Stylelint and babel-preset-env]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/browserslist/browserslist">browserslist/browserslist</a></h1>
            <p>ü¶î Share target browsers between different front-end tools, like Autoprefixer, Stylelint and babel-preset-env</p>
            <p>Language: JavaScript</p>
            <p>Stars: 13,369</p>
            <p>Forks: 742</p>
            <p>Stars today: 1 star today</p>
            <h2>README</h2><pre># Browserslist

&lt;img width=&quot;120&quot; height=&quot;120&quot; alt=&quot;Browserslist logo by Anton Popov&quot;
     src=&quot;https://browsersl.ist/logo.svg&quot; align=&quot;right&quot;&gt;

The config to share target browsers and Node.js versions between different
front-end tools. It is used in:

* [Autoprefixer]
* [Babel]
* [postcss-preset-env]
* [eslint-plugin-compat]
* [stylelint-no-unsupported-browser-features]
* [postcss-normalize]
* [obsolete-webpack-plugin]

All tools will find target browsers automatically,
when¬†you¬†add¬†the¬†following to `package.json`:

```json
  &quot;browserslist&quot;: [
    &quot;defaults and fully supports es6-module&quot;,
    &quot;maintained node versions&quot;
  ]
```

Or in `.browserslistrc` config:

```yaml
# Browsers that we support

defaults and fully supports es6-module
maintained node versions
```

Developers set their version lists using queries like `last 2 versions`
to be free from updating versions manually.
Browserslist¬†will¬†use [`caniuse-lite`] with¬†[Can I Use] data for this queries.

You can check how config works at our playground: [`browsersl.ist`](https://browsersl.ist/)

&lt;a href=&quot;https://browsersl.ist/&quot;&gt;
  &lt;img src=&quot;/img/screenshot.webp&quot; alt=&quot;browsersl.ist website&quot;&gt;
&lt;/a&gt;

&lt;br&gt;
&lt;br&gt;
&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://evilmartians.com/?utm_source=browserslist&quot;&gt;&lt;img src=&quot;https://evilmartians.com/badges/sponsored-by-evil-martians.svg&quot; alt=&quot;Sponsored by Evil Martians&quot; width=&quot;236&quot; height=&quot;54&quot;&gt;&lt;/a&gt;¬†¬†&lt;a href=&quot;https://cube.dev/?ref=eco-browserslist-github&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/986756/154330861-d79ab8ec-aacb-4af8-9e17-1b28f1eccb01.svg&quot; alt=&quot;Supported by Cube&quot; width=&quot;227&quot; height=&quot;46&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

[stylelint-no-unsupported-browser-features]: https://github.com/ismay/stylelint-no-unsupported-browser-features
[obsolete-webpack-plugin]:                   https://github.com/ElemeFE/obsolete-webpack-plugin
[eslint-plugin-compat]:                      https://github.com/amilajack/eslint-plugin-compat
[Browserslist Example]:                      https://github.com/browserslist/browserslist-example
[postcss-preset-env]:                        https://github.com/csstools/postcss-plugins/tree/main/plugin-packs/postcss-preset-env
[postcss-normalize]:                         https://github.com/csstools/postcss-normalize
[`browsersl.ist`]:                           https://browsersl.ist/
[`caniuse-lite`]:                            https://github.com/ben-eb/caniuse-lite
[Autoprefixer]:                              https://github.com/postcss/autoprefixer
[Can I Use]:                                 https://caniuse.com/
[Babel]:                                     https://github.com/babel/babel/tree/master/packages/babel-preset-env

## Table of Contents

* [Tools](#tools)
* [Best Practices](#best-practices)
* [Queries](#queries)
* [Config File](#config-file)
* [Shareable Configs](#shareable-configs)
* [Configuring for Different Environments](#configuring-for-different-environments)
* [Custom Usage Data](#custom-usage-data)
* [JS API](#js-api)
* [Environment Variables](#environment-variables)
* [Cache](#cache)
* [Security Contact](#security-contact)
* [For Enterprise](#for-enterprise)


## Sponsors

Browserslist needs your support. We are accepting donations
[at Open Collective](https://opencollective.com/browserslist).

&lt;a href=&quot;https://workleap.com/&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/f4f764d3-39ce-4d4e-bdcb-2583ce349812&quot; alt=&quot;Sponsored by Workleap&quot; width=&quot;154&quot; height=&quot;40&quot;&gt;&lt;/a&gt;¬†¬†¬†¬†¬†¬†&lt;a href=&quot;https://kinsta.com/&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/27cd0c29-637a-4c94-a60c-85c056cbac28&quot; alt=&quot;Sponsored by Kinsta&quot; width=&quot;158&quot; height=&quot;40&quot;&gt;&lt;/a&gt;


## Tools

### Analyze your Browserslist Config

* Run `npx browserslist` in your project directory to see project‚Äôs
  target browsers. This CLI tool is built-in and available in¬†any project
  with Autoprefixer.
* [`browserslist-lint`] checks your config for popular mistakes.


### Update `caniuse-lite`

* [`update-browserslist-db`] is a CLI tool to update browsers DB for queries
  like `last 2 version` or `&gt;1%`.
* [`browserslist-update-action`] is a GitHub Action to automatically
  run `update-browserslist-db` and proposes a pull request to merge updates.


### Useful Shared Configs

* [`browserslist-config-baseline`]


### Show ‚ÄúWe do not support your browser‚Äù Banner

* [`browserslist-useragent-regexp`] compiles Browserslist query to a RegExp
  to test browser useragent.
* [`browserslist-useragent-ruby`] is a Ruby library to check browser
  by user agent string to match Browserslist.


### Get Statistics for `&gt;5% in my stats`:

* [`browserslist-ga`] and [`browserslist-ga-export`] download your website
  browsers statistics to¬†use¬†it¬†in `&gt; 0.5% in my stats` query.
* [`browserslist-new-relic`] generates a custom usage data file for Browserslist
* [`browserslist-adobe-analytics`] uses Adobe Analytics data to target browsers
  from your New Relic Browser data.


### Others

* [`browserslist-rs`] is a Browserslist port to Rust.
* [`browserslist-browserstack`] runs BrowserStack tests for all browsers
  in Browserslist config.

[`browserslist-useragent-regexp`]: https://github.com/browserslist/browserslist-useragent-regexp
[`browserslist-adobe-analytics`]:  https://github.com/xeroxinteractive/browserslist-adobe-analytics
[`browserslist-config-baseline`]: https://github.com/web-platform-dx/browserslist-config-baseline
[`browserslist-useragent-ruby`]:   https://github.com/browserslist/browserslist-useragent-ruby
[`browserslist-update-action`]:    https://github.com/c2corg/browserslist-update-action
[`browserslist-browserstack`]:     https://github.com/xeroxinteractive/browserslist-browserstack
[`browserslist-ga-export`]:        https://github.com/browserslist/browserslist-ga-export
[`browserslist-useragent`]:        https://github.com/pastelsky/browserslist-useragent
[`update-browserslist-db`]:        https://github.com/browserslist/update-db
[`browserslist-new-relic`]:        https://github.com/syntactic-salt/browserslist-new-relic
[`browserslist-lint`]:             https://github.com/browserslist/lint/
[`browserslist-ga`]:               https://github.com/browserslist/browserslist-ga
[`browserslist-rs`]:               https://github.com/g-plane/browserslist-rs
[`caniuse-api`]:                   https://github.com/Nyalab/caniuse-api


### Text Editors

These extensions will add syntax highlighting for `.browserslistrc` files.

* [VS Code](https://marketplace.visualstudio.com/items?itemName=webben.browserslist)
* [Vim](https://github.com/browserslist/vim-browserslist)
* [WebStorm](https://plugins.jetbrains.com/plugin/16139-browserslist)

## Best Practices

* There is a `defaults` query, which gives a reasonable configuration
  for most users:

  ```json
    &quot;browserslist&quot;: [
      &quot;defaults&quot;
    ]
  ```

* If you want to change the default set of browsers, we recommend including
  `last 2 versions, not dead, &gt; 0.2%`. This is because `last n versions` on its
  own does not add popular old versions, while only using a percentage of usage
  numbers above `0.2%` will in the long run make popular browsers even more
  popular. We might run into a monopoly and stagnation situation, as we had with
  Internet Explorer 6. Please use this setting with caution.
* Select browsers directly (`last 2 Chrome versions`) only if you are making
  a web app for a kiosk with one browser. There¬†are a lot of browsers
  on the market. If you are making general web app you should respect
  browsers diversity.
* Don‚Äôt remove browsers just because you don‚Äôt know them. Opera Mini has
  100 million users in Africa and it is more popular in the global market
  than Microsoft Edge. Chinese QQ Browsers has more market share than Firefox
  and desktop Safari combined.


## Queries

Browserslist will use browsers and Node.js versions query
from one of these sources:

1. `.browserslistrc` config file in current or parent directories.
2. `browserslist` key in `package.json` file in current or parent directories.
3. `browserslist` config file in current or parent directories.
4. `BROWSERSLIST` environment variable.
5. If the above methods did not produce a valid result
   Browserslist will use defaults:
   `&gt; 0.5%, last 2 versions, Firefox ESR, not dead`.


### Query Composition

An `or` combiner can use the keyword `or` as well as `,`.
`last 1 version or &gt; 1%` is equal to `last 1 version, &gt; 1%`.

`and` query combinations are also supported to perform an
intersection of all the previous queries:
`last 1 version or chrome &gt; 75 and &gt; 1%` will select
(`browser last version` or `Chrome since 76`) and `more than 1% marketshare`.

There are 3 different ways to combine queries as depicted below. First you start
with a single query and then we combine the¬†queries to get our final list.

Obviously you can *not* start with a `not` combiner, since there is no left-hand
side query to¬†combine¬†it¬†with. The left-hand is always resolved as `and`
combiner even if `or` is used (this is an API implementation specificity).

| Query combiner type | Illustration | Example |
| ------------------- | :----------: | ------- |
|`or`/`,` combiner &lt;br&gt; (union) | ![Union of queries](img/union.svg)  | `&gt; .5% or last 2 versions` &lt;br&gt; `&gt; .5%, last 2 versions` |
| `and` combiner &lt;br&gt; (intersection) | ![intersection of queries](img/intersection.svg) | `&gt; .5% and last 2 versions` |
| `not` combiner &lt;br&gt; (relative complement) | ![Relative complement of queries](img/complement.svg) | These three are equivalent to one another: &lt;br&gt; `&gt; .5% and not last 2 versions` &lt;br&gt; `&gt; .5% or not last 2 versions` &lt;br&gt; `&gt; .5%, not last 2 versions` |

_A quick way to test your query is to do `npx browserslist &#039;&gt; 0.3%, not dead&#039;`
in your terminal._

### Full List

You can specify the browser and Node.js versions by queries (case insensitive):

* `defaults`: Browserslist‚Äôs default browsers
  (`&gt; 0.5%, last 2 versions, Firefox ESR, not dead`).
* By usage statistics:
  * `&gt; 5%`: browsers versions selected by global usage statistics.
  `&gt;=`, `&lt;` and `&lt;=` work too.
  * `&gt; 5% in US`: uses USA usage statistics.
    It accepts [two-letter country code].
  * `&gt; 5% in alt-AS`: uses Asia region usage statistics.
    List of all region codes can be found at [`caniuse-lite/data/regions`].
  * `&gt; 5% in my stats`: uses [custom usage data].
  * `&gt; 5% in browserslist-config-mycompany stats`: uses [custom usage data]
    from `browserslist-config-mycompany/browserslist-stats.json`.
  * `cover 99.5%`: most popular browsers that provide coverage.
  * `cover 99.5% in US`: same as above, with [two-letter country code].
  * `cover 99.5% in my stats`: uses [custom usage data].
  * `cover 99.5% in browserslist-config-mycompany stats`: uses [custom usage data] from `browserslist-config-mycompany/browserslist-stats.json`.
* Last versions:
  * `last 2 versions`: the last 2 versions for *each* browser.
  * `last 2 Chrome versions`: the last 2 versions of Chrome browser.
  * `last 2 major versions` or `last 2 iOS major versions`:
    all minor/patch releases of last 2 major versions.
* `dead`: browsers without official support or updates for 24 months.
  Right now it is `IE 11`, `IE_Mob 11`, `BlackBerry 10`, `BlackBerry 7`,
  `Samsung 4`, `OperaMobile 12.1` and all versions of `Baidu`.
* Node.js versions:
  * `node 10` and `node 10.4`: selects latest Node.js `10.x.x`
  or `10.4.x` release.
  * `last 2 node versions`: select 2 latest Node.js releases.
  * `last 2 node major versions`: select 2 latest major-version Node.js releases.
  * `current node`: Node.js version used by Browserslist right now.
  * `maintained node versions`: all Node.js versions, which are [still maintained]
    by Node.js Foundation.
* Browsers versions:
  * `iOS 7`: the iOS browser version 7 directly. Note, that `op_mini`
    has special version `all`.
  * `Firefox &gt; 20`: versions of Firefox newer than 20.
    `&gt;=`, `&lt;` and `&lt;=` work too. It also works with Node.js.
  * `ie 6-8`: selects an inclusive range of versions.
  * `Firefox ESR`: the latest [Firefox Extended Support Release].
  * `PhantomJS 2.1` and `PhantomJS 1.9`: selects Safari versions similar
    to PhantomJS runtime.
* `extends browserslist-config-mycompany`: take queries from
  `browserslist-config-mycompany` npm package.
* By browser support:&lt;br&gt;
  In these example queries `es6` and `es6-module` are the the `feat` parameter
  from the URL of the [Can I Use] page. A list of all available features can be
  found at [`caniuse-lite/data/features`].
  * `fully supports es6`: browsers with full support for specific
    features. For example, `fully supports css-grid` will omit Edge 12-15, as
    those browser versions are marked as [having partial support].
  * `partially supports es6-module` or `supports es6-module`:  browsers with
    full or partial support for specific features. For example,
    `partially supports css-grid` will include Edge 12-15 support, as those
    browser versions are marked as [having partial support].
* `browserslist config`: the browsers defined in Browserslist config. Useful
  in Differential Serving to modify user‚Äôs config like
  `browserslist config and fully supports es6-module`.
* `since 2015` or `last 2 years`: all versions released since year 2015
  (also `since 2015-03` and `since 2015-03-10`).
* `unreleased versions` or `unreleased Chrome versions`:
  alpha and beta versions.
* `not ie &lt;= 8`: exclude IE 8 and lower from previous queries.

You can add `not ` to any query.

[`caniuse-lite/data/regions`]: https://github.com/ben-eb/caniuse-lite/tree/main/data/regions
[`caniuse-lite/data/features`]: https://github.com/ben-eb/caniuse-lite/tree/main/data/features
[two-letter country code]:     https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements
[custom usage data]:           #custom-usage-data
[still maintained]:            https://github.com/nodejs/Release
[Can I Use]:                   https://caniuse.com/
[Firefox Extended Support Release]: https://support.mozilla.org/en-US/kb/choosing-firefox-update-channel
[having partial support]: https://caniuse.com/css-grid

### Grammar Definition

There is a [grammar specification](./grammar.w3c-ebnf) about the query syntax,
which may be helpful if you&#039;re implementing a parser or something else.

### Debug

Run `npx browserslist` in a project directory to see which browsers were selected
by your queries.

```sh
$ npx browserslist
and_chr 61
and_ff 56
and_qq 1.2
and_uc 11.4
android 56
baidu 7.12
bb 10
chrome 62
edge 16
firefox 56
ios_saf 11
opera 48
safari 11
samsung 5
```


### Browsers

The following table maps browser names &amp; their target devices into identifiers used by browserslist.

| Browser Name             | Desktop         | Android                   | iOS                      | Other Mobile      |
| ------------------------ | --------------- | ------------------------- | ------------------------ | ----------------- |
| Android (WebView)        |                 | `Android`                 |                          |                   |
| Baidu                    | `Baidu`         |                           |                          |                   |
| BlackBerry               |                 |                           |                          | `BlackBerry`¬†`bb` |
| Chrome                   | `Chrome`        | `ChromeAndroid`¬†`and_chr` | ‚Ü™Ô∏é `ios_saf`&lt;sup&gt;2&lt;/sup&gt; |                   |
| Edge                     | `Edge`          | ‚Ü™Ô∏é `and_chr`              | ‚Ü™Ô∏é `ios_saf`&lt;sup&gt;2&lt;/sup&gt; |                   |
| Electron                 | `Electron`      |                           |                          |                   |
| Firefox                  | `Firefox`¬†`ff`  | `FirefoxAndroid`¬†`and_ff` | ‚Ü™Ô∏é `ios_saf`&lt;sup&gt;2&lt;/sup&gt; |                   |
| Internet Explorer        | `Explorer`¬†`ie` |                           |                          | `ie_mob`          |
| Node.js                  | `Node`          |                           |                          |                   |
| [KaiOS Browser]          |                 |                           |                          | `kaios`           |
| Opera                    | `Opera`         | `op_mob` &lt;sup&gt;1&lt;/sup&gt;     | ‚Ü™Ô∏é `ios_saf`&lt;sup&gt;2&lt;/sup&gt; |                   |
| [Opera Mini]&lt;sup&gt;3&lt;/sup&gt; |                 | `OperaMini` `op_mini`     |                          |                   |
| [QQ browser]             |                 | `and_qq`                  |                          |                   |
| Safari                   | `Safari`        |                           | `iOS` `ios_saf`          |                   |
| Samsung Internet         |                 | `Samsung`                 |                          |                   |
| [UC Browser]             |                 | `UCAndroid`¬†`and_uc`      |                          |                   |

- `‚Ü™Ô∏é name` implies that the browser uses the same engine captured by `name`
- &lt;sup&gt;1&lt;/sup&gt; [Opera Mobile ‚âà Chrome Android](https://github.com/Fyrd/caniuse/issues/5602#issuecomment-792385127)
- &lt;sup&gt;2&lt;/sup&gt; [All iOS browsers use WebKit](https://en.wikipedia.org/wiki/WebKit)
- &lt;sup&gt;3&lt;/sup&gt; Opera Mini has 2 modes ‚ÄúExtreme‚Äù and ‚ÄúHigh‚Äù for data saving.
  `op_mini` targets at the ‚ÄúExtreme‚Äù one.
  ‚ÄúHigh‚Äù is compatible with the normal Opera Mobile.

[KaiOS Browser]: https://medium.com/design-at-kai/what-you-didnt-know-about-kaios-browser-53937ea1636
[QQ browser]: https://en.wikipedia.org/wiki/QQ_browser
[Opera Mini]: https://en.wikipedia.org/wiki/Opera_Mini
[UC Browser]: https://en.wikipedia.org/wiki/UC_Browser

## Config File

### `package.json`

If you want to reduce config files in project root, you can specify
browsers in `package.json` with `browserslist` key:

```json
{
  &quot;private&quot;: true,
  &quot;dependencies&quot;: {
    &quot;autoprefixer&quot;: &quot;^6.5.4&quot;
  },
  &quot;browserslist&quot;: [
    &quot;last 1 version&quot;,
    &quot;&gt; 1%&quot;,
    &quot;not dead&quot;
  ]
}
```


### `.browserslistrc`

Separated Browserslist config should be named `.browserslistrc`
and have browsers queries split by a new line.
Each line is combined with the `or` combiner. Comments¬†starts¬†with¬†`#`¬†symbol:

```yaml
# Browsers that we support

last 1 version
&gt; 1%
not dead # no browsers without security updates
```

Browserslist will check config in every directory in `path`.
So, if tool process `app/styles/main.css`, you can put config to root,
`app/` or `app/styles`.

You can specify direct path in `BROWSERSLIST_CONFIG` environment variables.


## Shareable Configs

You can use the following query to reference an exported Browserslist config
from another package:

```json
  &quot;browserslist&quot;: [
    &quot;extends browserslist-config-mycompany&quot;
  ]
```

For security reasons, external configuration only supports packages that have
the `browserslist-config-` prefix. npm scoped packages are also supported, by
naming or prefixing the module with `@scope/browserslist-config`, such as
`@scope/browserslist-config` or `@scope/browserslist-config-mycompany`.

If¬†you¬†don‚Äôt¬†accept Browserslist queries from users, you can disable the
validation by using the or `BROWSERSLIST_DANGEROUS_EXTEND` environment variable.

```sh
BROWSERSLIST_DANGEROUS_EXTEND=1 npx webpack
```

Because this uses `npm`&#039;s resolution, you can also reference specific files
in a package:

```json
  &quot;browserslist&quot;: [
    &quot;extends browserslist-config-mycompany/desktop&quot;,
    &quot;extends browserslist-config-mycompany/mobile&quot;
  ]
```

When writing a shared Browserslist package, just export an array.
`browserslist-config-mycompany/index.js`:

```js
module.exports = [
  &#039;last 1 version&#039;,
  &#039;&gt; 1%&#039;,
  &#039;not dead&#039;
]
```

You can also include a `browserslist-stats.json` file as part of your shareable
config at the root and query it using
`&gt; 5% in browserslist-config-mycompany stats`. It uses the same format
as `extends` and the `dangerousExtend` property as above.

You can export configs for different environments and select environment
by `BROWSERSLIST_ENV` or `env` option in your tool:

```js
module.exports = {
  development: [
    &#039;last 1 version&#039;
  ],
  pr

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[DefiLlama/DefiLlama-Adapters]]></title>
            <link>https://github.com/DefiLlama/DefiLlama-Adapters</link>
            <guid>https://github.com/DefiLlama/DefiLlama-Adapters</guid>
            <pubDate>Sun, 10 Aug 2025 00:05:07 GMT</pubDate>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/DefiLlama/DefiLlama-Adapters">DefiLlama/DefiLlama-Adapters</a></h1>
            <p></p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,015</p>
            <p>Forks: 6,184</p>
            <p>Stars today: 0 stars today</p>
            <h2>README</h2><pre># Defillama Adapters

Follow [this guide](https://docs.llama.fi/submit-a-project) to create an adapter and submit a PR with it.

Also, don&#039;t hesitate to send a message on [our discord](https://discord.defillama.com/) if we&#039;re late to merge your PR.

&gt; If you would like to add a `volume` adapter please submit the PR [here](https://github.com/DefiLlama/adapters)
&gt; - If you would like to add a `liquidations` adapter, please refer to [this readme document](https://github.com/DefiLlama/DefiLlama-Adapters/tree/main/liquidations) for details.

1. PLEASE PLEASE **enable &quot;Allow edits by maintainers&quot; while putting up the PR.**
2. Once your adapter has been merged, it takes time to show on the UI. No need to notify us on Discord.
3. TVL must be computed from blockchain data (reason: https://github.com/DefiLlama/DefiLlama-Adapters/discussions/432), if you have trouble with creating the adapter, please hop onto our discord, we are happy to assist you.
4. **For updating listing info** It is a different repo, you can find your listing in this file: https://github.com/DefiLlama/defillama-server/blob/master/defi/src/protocols/data2.ts, you can  edit it there and put up a PR
5. Do not edit/push `package-lock.json` file as part of your changes, we use lockfileVersion 2, and most use v1 and using that messes up our CI
6. No need to go to our discord and announce that you&#039;ve created a PR, we monitor all PRs and will review it asap

## Getting listed

Please send answers to questions there https://github.com/DefiLlama/DefiLlama-Adapters/blob/main/pull_request_template.md when creating a PR.

## Work in progress

This is a work in progress. DefiLlama aims to be transparent, accurate, and open source.

If you have any suggestions, want to contribute or want to chat, please join [our discord](https://discord.defillama.com/) and drop a message.

## Testing adapters
```bash
node test.js projects/pangolin/index.js
# Add a timestamp at the end to run the adapter at a historical timestamp
node test.js projects/aave/v3.js 1729080692
# or using YYYY-MM-DD
node test.js projects/aave/v3.js 2024-10-16
```

## Changing RPC providers
If you want to change RPC providers because you need archive node access or because the default ones don&#039;t work well enough you can do so by creating an `.env` file and filling it with the env variables to overwrite:
```
ETHEREUM_RPC=&quot;...&quot;
BSC_RPC=&quot;...&quot;
POLYGON_RPC=&quot;...&quot;
```

The name of each rpc is `{CHAIN-NAME}_RPC`, and the name we use for each chain can be found [here](https://unpkg.com/@defillama/sdk@latest/build/providers.json). If you run into issues with a chain make sure to update the sdk with `npm update @defillama/sdk`.

## Adapter rules
- Never add extra npm packages, if you need a chain-level package for your chain, ask us, and we&#039;ll consider it, but we can&#039;t accept any npm package that is project-specific
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[qeeqbox/social-analyzer]]></title>
            <link>https://github.com/qeeqbox/social-analyzer</link>
            <guid>https://github.com/qeeqbox/social-analyzer</guid>
            <pubDate>Sun, 10 Aug 2025 00:05:06 GMT</pubDate>
            <description><![CDATA[API, CLI, and Web App for analyzing and finding a person's profile in 1000 social media \ websites]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/qeeqbox/social-analyzer">qeeqbox/social-analyzer</a></h1>
            <p>API, CLI, and Web App for analyzing and finding a person's profile in 1000 social media \ websites</p>
            <p>Language: JavaScript</p>
            <p>Stars: 12,722</p>
            <p>Forks: 1,036</p>
            <p>Stars today: 28 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/socialanalyzerlogo_.png&quot;&gt;&lt;/p&gt;

Social Analyzer - API, CLI, and Web App for analyzing &amp; finding a person&#039;s profile across +1000 social media \ websites. It includes different analysis and detection modules, and you can choose which modules to use during the investigation process.

The detection modules utilize a rating mechanism based on different detection techniques, which produces a rate value that starts from 0 to 100 (No-Maybe-Yes). This module is intended to have fewer false positives.

The analysis and public extracted information from this OSINT tool could help investigate profiles related to suspicious or malicious activities such as cyberbullying, cyber grooming, cyberstalking, and spreading misinformation.

`This project is currently used by some law enforcement agencies in countries where resources are limited - The detection database is different than the one shared here..`

## So¬∑cial Me¬∑di¬∑a
Websites and applications that enable users to create and share content or to participate in social networking - Oxford Dictionary

## Structure
&lt;img src=&quot;https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/structure.png&quot;&gt;


## APP (Preferred!)
Standard localhost WEB APP url: http://0.0.0.0:9005/app.html

&lt;img src=&quot;https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/intro_fast.gif&quot; style=&quot;max-width:768px&quot;/&gt;

## CLI 
&lt;img src=&quot;https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/cli.gif&quot; style=&quot;max-width:768px&quot;/&gt;

## Features
- String &amp; name analysis (Permutations and Combinations)
- Find a profile using multiple techniques (HTTPS library &amp; Webdriver)
- Multi profile search (Used for correlation - any combination separated with &quot;,&quot; )
- Multilayers detections (OCR, normal, advanced &amp; special)
- Visualized profile information using Ixora (Metadata &amp; Patterns)
- Metadata &amp; Patterns extraction (Added from Qeeqbox OSINT project)
- Force-directed Graph for Metadata (Needs ExtractPatterns)
- Search by top ranking or by country (Alexa Ranking)
- Search by type (adult, music, etc.. - automated websites stats)
- Profiles stats and static info (Category country)
- Cross Metadata stats (Added from Qeeqbox OSINT project)
- Auto-flirtation to unnecessary output (Enable javascript etc..)
- Search engine lookup (Google API - optional)
- Custom search queries (Google API &amp; DuckDuckGo API - optional)
- Profile screenshot, title, info, and website description
- Find name origins, name similarity &amp; common words by language
- Find possible profile\person age (Limited analysis)
- Custom user-agent, proxy, timeout &amp; implicit wait
- Python CLI &amp; NodeJS CLI (limited to FindUserProfilesFast option)
- Screenshots of detected profile (The latest version of Chrome must be installed)
- Grid option for faster checking (limited to docker-compose)
- Dump logs to folder or terminal (prettified)
- Adjust finding\getting profile workers (default 15)
- Re-checking option for failed profiles
- Filter profiles by good, maybe, and bad
- Save the analysis as a JSON file
- Simplified web interface and CLI
- And, more!!

## Special Detections
- Facebook (Phone number, name, or profile name)
- Gmail (example@gmail.com)
- Google (example@example.com)

## Install &amp; Run
### Linux (As Node WebApp)
```bash
sudo apt-get update
#Depedning on your Linux distro, you may or may not need these 2 lines
sudo DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common
sudo add-apt-repository ppa:mozillateam/ppa -y
sudo apt-get install -y firefox-esr tesseract-ocr git nodejs npm
git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
npm update
npm install
npm start
```

### Linux (As Node CLI)
```bash
sudo apt-get update
#Depedning on your Linux distro, you may or may not need these 2 lines
sudo DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common
sudo add-apt-repository ppa:mozillateam/ppa -y
sudo apt-get install -y firefox-esr tesseract-ocr git nodejs npm
git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
npm install
nodejs app.js --username &quot;johndoe&quot;
#or
nodejs app.js --username &quot;johndoe,janedoe&quot; --metadata
#or
nodejs app.js --username &quot;johndoe,janedoe&quot; --metadata --top 100
#or
nodejs app.js --username &quot;johndoe&quot; --type &quot;adult&quot;
```

### Linux (As python package)
```bash
sudo apt-get update
sudo apt-get install python3 python3-pip
pip3 install social-analyzer
python3 -m social-analyzer --username &quot;johndoe&quot;
#or
python3 -m social-analyzer --username &quot;johndoe&quot; --metadata
#or
python3 -m social-analyzer --username &quot;johndoe&quot; --metadata --top 100
#or
python3 -m social-analyzer --username &quot;johndoe&quot; --type &quot;adult&quot;
#or
python3 -m social-analyzer --username &quot;johndoe&quot; --websites &quot;car&quot; --logs --screenshots
```

### Linux (As python script)
```bash
sudo apt-get update
sudo apt-get install git python3 python3-pip
git clone https://github.com/qeeqbox/social-analyzer
cd social-analyzer
pip3 install -r requirements.txt
python3 app.py --username &quot;janedoe&quot;
#or
python3 app.py --username &quot;johndoe&quot; --metadata
#or
python3 app.py --username &quot;johndoe&quot; --metadata --top 100
#or
python3 app.py --username &quot;johndoe&quot; --type &quot;adult&quot;
#or
python3 app.py --username &quot;johndoe&quot; --websites &quot;car&quot; --logs --screenshots
```

### Importing as object (python)
```python

#E.g. #1
from importlib import import_module
SocialAnalyzer = import_module(&quot;social-analyzer&quot;).SocialAnalyzer()
results = SocialAnalyzer.run_as_object(username=&quot;johndoe&quot;,silent=True)
print(results)

#E.g. #2
from importlib import import_module
SocialAnalyzer = import_module(&quot;social-analyzer&quot;).SocialAnalyzer()
results = SocialAnalyzer.run_as_object(username=&quot;johndoe,janedoe&quot;,silent=True,output=&quot;json&quot;,filter=&quot;good&quot;,metadata=False,timeout=10, profiles=&quot;detected&quot;)
print(results)
```

### Linux, Windows, MacOS, Raspberry pi..
- check this [wiki](https://github.com/qeeqbox/social-analyzer/wiki/install) for all possible installation methods
- check this [wiki](https://github.com/qeeqbox/social-analyzer/wiki/integration) for integrating social-analyzer with your OSINT tools, feeds, etc...

## social-analyzer --h
```
Required Arguments:
  --username   E.g. johndoe, john_doe or johndoe9999

Optional Arguments:
  --websites    A website or websites separated by space E.g. youtube, tiktokor tumblr
  --mode        Analysis mode E.g.fast -&gt; FindUserProfilesFast, slow -&gt; FindUserProfilesSlow or special -&gt; FindUserProfilesSpecial
  --output      Show the output in the following format: json -&gt; json outputfor integration or pretty -&gt; prettify the output
  --options     Show the following when a profile is found: link, rate, titleor text
  --method      find -&gt; show detected profiles, get -&gt; show all profiles regardless detected or not, all -&gt; combine find &amp; get
  --filter      Filter detected profiles by good, maybe or bad, you can do combine them with comma (good,bad) or use all
  --profiles    Filter profiles by detected, unknown or failed, you can do combine them with comma (detected,failed) or use all
  --countries   select websites by country or countries separated by space as: us br ru
  --type        Select websites by type (Adult, Music etc)
  --top         select top websites as 10, 50 etc...[--websites is not needed]
  --extract     Extract profiles, urls &amp; patterns if possible
  --metadata    Extract metadata if possible (pypi QeeqBox OSINT)
  --trim        Trim long strings
  --gui         Reserved for a gui (Not implemented)
  --cli         Reserved for a cli (Not needed)

Listing websites &amp; detections:
  --list        List all available websites

Setting:
  --headers     Headers as dict
  --logs_dir    Change logs directory
  --timeout     Change timeout between each request
  --silent      Disable output to screen
```

## Open Shell
[![Open in Cloud Shell](https://img.shields.io/static/v1?label=%3E_&amp;message=Open%20in%20Cloud%20Shell&amp;color=3267d6&amp;style=flat-square)](https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https://github.com/qeeqbox/social-analyzer&amp;tutorial=README.md) [![Open in repl.it Shell](https://img.shields.io/static/v1?label=%3E_&amp;message=Open%20in%20repl.it%20Shell&amp;color=606c74&amp;style=flat-square)](https://repl.it/github/qeeqbox/social-analyzer)

## Resources
- DuckDuckGo API, Google API, NodeJS, bootstrap, selectize, jQuery, Wikipedia, font-awesome, selenium-webdriver &amp; tesseract.js
- Let me know if I missed a reference or resource!

## Disclaimer\Notes
- Download this project from GitHub and treat it as a security project
- If you want your website to be excluded from this project list, please reach out to me
- This tool is meant to be used locally, not as a service (It does not have any Access Control)
- For issues related to modules that end with -private or under the private group ![](https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/modules.png), reach out directly to me (do not open an issue on GitHub)

## Other Projects
[![](https://github.com/qeeqbox/.github/blob/main/data/analyzer.png)](https://github.com/qeeqbox/analyzer) [![](https://github.com/qeeqbox/.github/blob/main/data/chameleon.png)](https://github.com/qeeqbox/chameleon) [![](https://github.com/qeeqbox/.github/blob/main/data/honeypots.png)](https://github.com/qeeqbox/honeypots) [![](https://github.com/qeeqbox/.github/blob/main/data/osint.png)](https://github.com/qeeqbox/osint) [![](https://github.com/qeeqbox/.github/blob/main/data/url-sandbox.png)](https://github.com/qeeqbox/url-sandbox) [![](https://github.com/qeeqbox/.github/blob/main/data/mitre-visualizer.png)](https://github.com/qeeqbox/mitre-visualizer) [![](https://github.com/qeeqbox/.github/blob/main/data/woodpecker.png)](https://github.com/qeeqbox/woodpecker) [![](https://github.com/qeeqbox/.github/blob/main/data/docker-images.png)](https://github.com/qeeqbox/docker-images) [![](https://github.com/qeeqbox/.github/blob/main/data/seahorse.png)](https://github.com/qeeqbox/seahorse) [![](https://github.com/qeeqbox/.github/blob/main/data/rhino.png)](https://github.com/qeeqbox/rhino) [![](https://github.com/qeeqbox/.github/blob/main/data/raven.png)](https://github.com/qeeqbox/raven) [![](https://github.com/qeeqbox/.github/blob/main/data/image-analyzer.png)](https://github.com/qeeqbox/image-analyzer)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>