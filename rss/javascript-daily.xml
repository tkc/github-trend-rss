<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Sat, 29 Mar 2025 00:04:28 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[facebook/react]]></title>
            <link>https://github.com/facebook/react</link>
            <guid>https://github.com/facebook/react</guid>
            <pubDate>Sat, 29 Mar 2025 00:04:28 GMT</pubDate>
            <description><![CDATA[The library for web and native user interfaces.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/facebook/react">facebook/react</a></h1>
            <p>The library for web and native user interfaces.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 233,809</p>
            <p>Forks: 48,035</p>
            <p>Stars today: 67 stars today</p>
            <h2>README</h2><pre># [React](https://react.dev/) &amp;middot; [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/facebook/react/blob/main/LICENSE) [![npm version](https://img.shields.io/npm/v/react.svg?style=flat)](https://www.npmjs.com/package/react) [![(Runtime) Build and Test](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml/badge.svg)](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml) [![(Compiler) TypeScript](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml/badge.svg?branch=main)](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://legacy.reactjs.org/docs/how-to-contribute.html#your-first-pull-request)

React is a JavaScript library for building user interfaces.

* **Declarative:** React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.
* **Component-Based:** Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep the state out of the DOM.
* **Learn Once, Write Anywhere:** We don&#039;t make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using [Node](https://nodejs.org/en) and power mobile apps using [React Native](https://reactnative.dev/).

[Learn how to use React in your project](https://react.dev/learn).

## Installation

React has been designed for gradual adoption from the start, and **you can use as little or as much React as you need**:

* Use [Quick Start](https://react.dev/learn) to get a taste of React.
* [Add React to an Existing Project](https://react.dev/learn/add-react-to-an-existing-project) to use as little or as much React as you need.
* [Create a New React App](https://react.dev/learn/start-a-new-react-project) if you&#039;re looking for a powerful JavaScript toolchain.

## Documentation

You can find the React documentation [on the website](https://react.dev/).

Check out the [Getting Started](https://react.dev/learn) page for a quick overview.

The documentation is divided into several sections:

* [Quick Start](https://react.dev/learn)
* [Tutorial](https://react.dev/learn/tutorial-tic-tac-toe)
* [Thinking in React](https://react.dev/learn/thinking-in-react)
* [Installation](https://react.dev/learn/installation)
* [Describing the UI](https://react.dev/learn/describing-the-ui)
* [Adding Interactivity](https://react.dev/learn/adding-interactivity)
* [Managing State](https://react.dev/learn/managing-state)
* [Advanced Guides](https://react.dev/learn/escape-hatches)
* [API Reference](https://react.dev/reference/react)
* [Where to Get Support](https://react.dev/community)
* [Contributing Guide](https://legacy.reactjs.org/docs/how-to-contribute.html)

You can improve it by sending pull requests to [this repository](https://github.com/reactjs/react.dev).

## Examples

We have several examples [on the website](https://react.dev/). Here is the first one to get you started:

```jsx
import { createRoot } from &#039;react-dom/client&#039;;

function HelloMessage({ name }) {
  return &lt;div&gt;Hello {name}&lt;/div&gt;;
}

const root = createRoot(document.getElementById(&#039;container&#039;));
root.render(&lt;HelloMessage name=&quot;Taylor&quot; /&gt;);
```

This example will render &quot;Hello Taylor&quot; into a container on the page.

You&#039;ll notice that we used an HTML-like syntax; [we call it JSX](https://react.dev/learn#writing-markup-with-jsx). JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML.

## Contributing

The main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.

### [Code of Conduct](https://code.fb.com/codeofconduct)

Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read [the full text](https://code.fb.com/codeofconduct) so that you can understand what actions will and will not be tolerated.

### [Contributing Guide](https://legacy.reactjs.org/docs/how-to-contribute.html)

Read our [contributing guide](https://legacy.reactjs.org/docs/how-to-contribute.html) to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.

### [Good First Issues](https://github.com/facebook/react/labels/good%20first%20issue)

To help you get your feet wet and get you familiar with our contribution process, we have a list of [good first issues](https://github.com/facebook/react/labels/good%20first%20issue) that contain bugs that have a relatively limited scope. This is a great place to get started.

### License

React is [MIT licensed](./LICENSE).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[andersontr15/clean-code-javascript-es]]></title>
            <link>https://github.com/andersontr15/clean-code-javascript-es</link>
            <guid>https://github.com/andersontr15/clean-code-javascript-es</guid>
            <pubDate>Sat, 29 Mar 2025 00:04:27 GMT</pubDate>
            <description><![CDATA[Clean Code traducido al Español]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/andersontr15/clean-code-javascript-es">andersontr15/clean-code-javascript-es</a></h1>
            <p>Clean Code traducido al Español</p>
            <p>Language: JavaScript</p>
            <p>Stars: 3,398</p>
            <p>Forks: 696</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre>Repositorio original: [ryanmcdermott/clean-code-javascript](https://github.com/ryanmcdermott/clean-code-javascript)

# clean-code-javascript 

## Contenido
  1. [Introducción](#introducción)
  2. [Variables](#variables)
  3. [Funciones](#funciones)
  4. [Objetos y estructuras de data](#objetos-y-estructuras-de-data)
  5. [Clases](#clases)
  6. [SOLID](#solid)
  7. [Pruebas](#pruebas)
  8. [Concurrencia](#concurrencia)
  9. [Resolver los errores](#resolver-los-errores)
  10. [Formatear](#formatear)
  11. [Comentarios](#comentarios)

## Introducción

![Imagen gracioso de la estimación de la calidad de software como una cifra 
de cuantos expletivos que uno puede gritar al leer programas](http://www.osnews.com/images/comics/wtfm.jpg)

Los principios de la ingeniería de software, del libro de Robert C. Martin [*Clean Code*](https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882), adaptado para JavaScript. Esta no es una guía de estilo, en cambio, es una guía para crear software que sea reutilizable, comprensible y que se pueda mejorar con el tiempo.

No hay que seguir tan estrictamente todos los principios en este libro, y vale la pena mencionar que hacia muchos de ellos habrá controversia en cuanto al consentimiento. Estas son reflexiones hechas después de muchos años de experiencia colectiva de los autores de *Clean Code*.

Nuestra obra de ingeniería de software lleva poco más que 50 años como negocio, y aún estamos aprendiendo. Cuando la arquitectura de software llegue a ser tan vieja como la arquitectura en sí misma, quizás tengamos reglas más estrictas para seguir. Hasta entonces, dejemos que estas guías sirvan como ejemplo para medir la calidad del código en JavaScript que tú y tu equipo producen.

Una cosa más: saber esto no te hará un mejor ingeniero inmediatamente, y tampoco trabajar con estas herramientas durante muchos años garantiza que nunca te equivocarás. Cualquier código empieza primero como un borrador, como arcilla mojada moldeándose en su forma final. Por último, arreglamos las imperfecciones cuando lo repasamos con nuestros compañeros de trabajo. No seas tan duro contigo mismo por los borradores iniciales que aún necesitan mejorar. ¡Trabaja más duro para mejorar el programa!

## **Variables**
### Utiliza nombres significativos y pronunciables para las variables

**Mal hecho:**
```javascript
const yyyymmdstr = moment().format(&#039;YYYY/MM/DD&#039;);
```

**Bien hecho:**
```javascript
const fechaActual = moment().format(&#039;YYYY/MM/DD&#039;);
```
**[⬆ vuelve hasta arriba](#contenido)**

### Utiliza el vocabulario igual para las variables del mismo tipo 

**Mal hecho:**
```javascript
conseguirInfoUsuario();
conseguirDataDelCliente();
conseguirRecordDelCliente();
```

**Bien hecho:**
```javascript
conseguirUsuario();
```
**[⬆ vuelve hasta arriba](#contenido)**

### Utiliza nombres buscables 

Nosotros leemos mucho más código que jamás escribiremos. Es importante que el código que escribimos sea legible y buscable. Cuando faltamos nombrar a las variables de manera buscable y legible, acabamos confundiendo a nuestros lectores. Echa un vistazo a las herramientas para ayudarte: [buddy.js](https://github.com/danielstjules/buddy.js) y
[ESLint](https://github.com/eslint/eslint/blob/660e0918933e6e7fede26bc675a0763a6b357c94/docs/rules/no-magic-numbers.md)

**Mal hecho:**
```javascript
// Para qué rayos sirve 86400000? 
setTimeout(hastaLaInfinidadYMasAlla, 86400000);

```

**Bien hecho:**
```javascript
// Decláralos como variables globales de &#039;const&#039;.
const MILISEGUNDOS_EN_UN_DIA = 8640000;

setTimeout(hastaLaInfinidadYMasAlla, MILISEGUNDOS_EN_UN_DIA);

```
**[⬆ vuelve hasta arriba](#contenido)**

### Utiliza variables explicativas
**Mal hecho:**
```javascript
const direccion = &#039;One Infinite Loop, Cupertino 95014&#039;;
const codigoPostalRegex = /^[^,\\]+[,\\\s]+(.+?)\s*(\d{5})?$/;
saveCityZipCode(direccion.match(codigoPostalRegex)[1], direccion.match(codigoPostalRegex)[2]);
```

**Bien hecho:**
```javascript
const direccion = &#039;One Infinite Loop, Cupertino 95014&#039;;
const codigoPostalRegex = /^[^,\\]+[,\\\s]+(.+?)\s*(\d{5})?$/;
const [, ciudad, codigoPostal] = direccion.match(codigoPostalRegex) || [];
guardarcodigoPostal(ciudad, codigoPostal);
```
**[⬆ vuelve hasta arriba](#contenido)**

### Evitar el mapeo mental 
El explícito es mejor que el implícito.

**Mal hecho:**
```javascript
const ubicaciones = [&#039;Austin&#039;, &#039;New York&#039;, &#039;San Francisco&#039;];
ubicaciones.forEach((u) =&gt; {
  hazUnaCosa();
  hasMasCosas()
  // ...
  // ...
  // ...
  // Espera, para qué existe la &#039;u&#039;?
  ejecuta(u);
});
```

**Bien hecho:**
```javascript
const ubicaciones = [&#039;Austin&#039;, &#039;New York&#039;, &#039;San Francisco&#039;];
ubicaciones.forEach((ubicacion) =&gt; {
  hazUnaCosa();
  hazMasCosas()
  // ...
  // ...
  // ...
  ejecuta(ubicacion);
});
```
**[⬆ vuelve hasta arriba](#contenido)**

### No incluyas contexto innecesario  
Si el nombre de tu clase/objeto te dice algo, no lo repitas 
de nuevo en el nombre de variable.

**Mal hecho:**
```javascript
const Coche = {
  cocheMarca: &#039;Honda&#039;,
  cocheModelo: &#039;Accord&#039;,
  cocheColor: &#039;Blue&#039;
};

function pintarCoche(coche) {
  coche.cocheColor = &#039;Red&#039;;
}
```

**Bien hecho:**
```javascript
const Coche = {
  marca: &#039;Honda&#039;,
  modelo: &#039;Accord&#039;,
  color: &#039;Blue&#039;
};

function pintarCoche(coche) {
  coche.color = &#039;Red&#039;;
}
```
**[⬆ vuelve hasta arriba](#contenido)**

### Utiliza argumentos predefinidos en vez de utilizar condicionales 
Los argumentos predefinidos muchas veces son más organizados que utilizar los condicionales.
Se consciente que si tú los usas, tu función sólo tendrá valores para los argumentos de `undefined`.
Los demás valores de &#039;falso&#039; como `&#039;&#039;`, `&quot;&quot;`, `false`, `null`, `0`, y
`NaN`, no se reemplazan con un valor predefinido.

**Mal hecho:**
```javascript
function crearMicroCerveceria(nombre) {
  const nombreDelMicroCerveceria = nombre || &#039;Hipster Brew Co.&#039;;
  // ...
}

```

**Bien hecho:**
```javascript
function crearMicroCerveceria(nombreDelMicroCerveceria = &#039;Hipster Brew Co.&#039;) {
  // ...
}

```
**[⬆ vuelve hasta arriba](#contenido)**

## **Funciones**
### Argumentos de funciones (2 o menos idealmente)

Limitar la cantidad de parámetros de tus funciones es increíblemente importante ya que hace que tus pruebas del código sean más fáciles. Al pasar los 3 argumentos, llegarás a un escenario de una explosión combinatoria en que hay que comprobar con pruebas muchos casos únicos con un argumento separado.

Uno o dos argumentos es la situación ideal, y más que eso uno debe evitar si es posible. Todo lo que se puede consolidar se debe consolidar. Normalmente, si tienes más que dos argumentos, tu función sirve para hacer demasiado. En otros casos, es mejor refactorizar y hacerlo un objeto para encapsular las funciones extras.

Ya que JavaScript te deja crear objetos cuando quieras sin incorporar la arquitectura de &#039;clases&#039;, se puede usar un objeto si necesitas muchos argumentos.

Para hacerlo más obvio cuáles argumentos espera la función, se puede usar la sintaxis de ES2015/ES6: &#039;destructuración&#039;. Esta sintaxis tiene varias ventajas:

1. Cuando alguien se fija en el firme de la función, es inmediatamente claro cuáles argumentos se usan.
2. Destructurar también copia los valores específicos y primitivos del objeto argumento que se le pasa a la función. Esto puede evitar los efectos extras. Ojo: objetos y arreglos que se destructuran del objeto argumento NO se copian.
3. Los &#039;linters&#039; te pueden avisar cuales argumentos / propiedades no se usan, lo cual sería imposible sin destructurar.


**Mal hecho:**
```javascript
function crearMenu(titulo, contexto, textoDelBoton, cancelable) {
  // ...
}
```

**Bien hecho:**
```javascript
function crearMenu({ titulo, contexto, textoDelBoton, cancelable }) {
  // ...
}

crearMenu({
  titulo: &#039;Foo&#039;,
  contexto: &#039;Bar&#039;,
  textoDelBoton: &#039;Baz&#039;,
  cancelable: true
});
```
**[⬆ vuelve hasta arriba](#contenido)**

### Las funciones deben tener una sola responsabilidad
Esta regla por mucho es la más importante en la ingeniería de software. Cuando las funciones sirven para hacer más que una sola cosa, se dificultan las pruebas, la composición y el entender. Cuando puedes aislar una función hasta tener solo una acción, se pueden mejorar más fácil y tu código llegue a ser mucho más limpio. Si solamente entiendes una cosa de esta guía, entiende esta regla y estarás adelantado de muchos desarrolladores.

**Mal hecho:**
```javascript
function escribirClientes(clients) {
  clientes.forEach((cliente) =&gt; {
    const recordDelCliente = database.busca(cliente);
    if (recordDelCliente.esActivo()) {
      escribir(cliente);
    }
  });
}
```

**Bien hecho:**
```javascript
function escribirClientes(clientes) {
  clientes
    .filter(esActivoElCliente)
    .forEach(email);
}

function esActivoElCliente(cliente) {
  const recordDelCliente = database.busca(cliente);
  return recordDelCliente.esActivo();
}
```
**[⬆ vuelve hasta arriba](#contenido)**

### Los nombres de las funciones deben explicar lo que hacen

**Mal hecho:**
```javascript
function adelantarLaFechaPorUnDia(fecha, mes) {
  // ...
}

const fecha = new Date();
// Es difícil entender del nombre lo que hace la función 
adelantarLaFechaPorUnDia(fecha, 1);
```

**Bien hecho:**
```javascript
function agregarMesAlDia(mes, fecha) {
  // ...
}

const fecha = new Date();
agregarMesAlDia(1, fecha);
```
**[⬆ vuelve hasta arriba](#contenido)**

### Las funciones deben tener solo un nivel de abstracción 
Cuando tienes más que un nivel de abstracción tu función suele servir 
para hacer demasiado. Crear varias funciones más pequeñas se debe a mejor reutilización
y comprobación más fácil. 

**Mal hecho:**
```javascript
function parseBetterJSAlternative(code) {
  const REGEXES = [
    // ...
  ];

  const statements = code.split(&#039; &#039;);
  const tokens = [];
  REGEXES.forEach((REGEX) =&gt; {
    statements.forEach((statement) =&gt; {
      // ...
    });
  });

  const ast = [];
  tokens.forEach((token) =&gt; {
    // lex...
  });

  ast.forEach((node) =&gt; {
    // parse...
  });
}
```

**Bien hecho:**
```javascript
function tokenize(code) {
  const REGEXES = [
    // ...
  ];

  const statements = code.split(&#039; &#039;);
  const tokens = [];
  REGEXES.forEach((REGEX) =&gt; {
    statements.forEach((statement) =&gt; {
      tokens.push( /* ... */ );
    });
  });

  return tokens;
}

function lexer(tokens) {
  const ast = [];
  tokens.forEach((token) =&gt; {
    ast.push( /* ... */ );
  });

  return ast;
}

function parseBetterJSAlternative(code) {
  const tokens = tokenize(code);
  const ast = lexer(tokens);
  ast.forEach((node) =&gt; {
    // parse...
  });
}
```
**[⬆ vuelve hasta arriba](#contenido)**

### Eliminar el código duplicado 
Haz tanto como puedas para evitar código duplicado. El código duplicado es malo ya que significa que hay varios lugares donde hay que actualizar algo si un cambio es necesario en tu lógico.

Imagínate que estás en un restaurante y necesitas organizar tu inventario: todos tus tomates, cebolla, pimientos y tal. Si tienes varias listas donde organizas el inventario, cada lista se tendrá que actualizar en cuanto se baja tu inventario. En cambio, si logras tener una sola lista, solo se actualizará en un lugar a la hora de apuntar el inventario.

Muchas veces tienes código duplicado se debe al hecho de tener dos o más cosas semejantes. Estos archivos pueden comparten varias cosas, pero sus diferencias te obligan separarlos para tener dos o más funciones que hacen cosas muy similares. Remover el código duplicado significa que se puede hacer la misma cosa que un solo función/módulo/clase.

Obtener la abstracción correcta es crítica y por eso debes de adherir a los principios de SOLID que se explican en la sección de Clases. Las malas abstracciones pueden ser aún peores que el código duplicado, ¡así que ten cuidado! Es decir, si puedes hacer una buena abstracción, ¡hazla! No te repitas, si no te darás cuenta de que andas actualizando mucho código en varios lugares a la hora de implementar un cambio.


**Mal hecho:**
```javascript
function showDeveloperList(developers) {
  developers.forEach((developer) =&gt; {
    const expectedSalary = developer.calculateExpectedSalary();
    const experience = developer.getExperience();
    const githubLink = developer.getGithubLink();
    const data = {
      expectedSalary,
      experience,
      githubLink
    };

    render(data);
  });
}

function showManagerList(managers) {
  managers.forEach((manager) =&gt; {
    const expectedSalary = manager.calculateExpectedSalary();
    const experience = manager.getExperience();
    const portfolio = manager.getMBAProjects();
    const data = {
      expectedSalary,
      experience,
      portfolio
    };

    render(data);
  });
}
```

**Bien hecho:**
```javascript
function showEmployeeList(employees) {
  employees.forEach((employee) =&gt; {
    const expectedSalary = employee.calculateExpectedSalary();
    const experience = employee.getExperience();

    let portfolio = employee.getGithubLink();

    if (employee.type === &#039;manager&#039;) {
      portfolio = employee.getMBAProjects();
    }

    const data = {
      expectedSalary,
      experience,
      portfolio
    };

    render(data);
  });
}
```
**[⬆ vuelve hasta arriba](#contenido)**

### Crear objetos predefinidos con Object.assign

**Mal hecho:**
```javascript
const menuConfig = {
  title: null,
  body: &#039;Bar&#039;,
  buttonText: null,
  cancellable: true
};

function createMenu(config) {
  config.title = config.title || &#039;Foo&#039;;
  config.body = config.body || &#039;Bar&#039;;
  config.buttonText = config.buttonText || &#039;Baz&#039;;
  config.cancellable = config.cancellable === undefined ? config.cancellable : true;
}

createMenu(menuConfig);
```

**Bien hecho:**
```javascript
const menuConfig = {
  title: &#039;Order&#039;,
  // El usuario no tenía la clave &#039;body&#039;
  buttonText: &#039;Send&#039;,
  cancellable: true
};

function createMenu(config) {
  config = Object.assign({
    title: &#039;Foo&#039;,
    body: &#039;Bar&#039;,
    buttonText: &#039;Baz&#039;,
    cancellable: true
  }, config);
  // el variable &#039;config&#039; ahora iguala: {title: &quot;Order&quot;, body: &quot;Bar&quot;, buttonText: &quot;Send&quot;, cancellable: true}
  // ...
}

createMenu(menuConfig);
```
**[⬆ vuelve hasta arriba](#contenido)**

### No utilices &#039;marcadores&#039; como parámetros de las funciones
Los marcadores existen para decirle a tu usuario que esta función hace más que una sola cosa. 
Como se ha mencionado antes las funciones deben hacer una sola cosa. 
Divide tus funciones en varias funciones más pequeñas si se adhieren a distintos métodos basados en un booleano. 

**Mal hecho:**
```javascript
function createFile(name, temp) {
  if (temp) {
    fs.create(`./temp/${name}`);
  } else {
    fs.create(name);
  }
}
```

**Bien hecho:**
```javascript
function createFile(name) {
  fs.create(name);
}

function createTempFile(name) {
  createFile(`./temp/${name}`);
}
```
**[⬆ vuelve hasta arriba](#contenido)**

### Evitar que las funciones produzcan efectos extras (parte 1)
Una función produce un efecto extra si hace cualquier cosa más que solo tomar 
un valor y volverlo/los). Un efecto extra podría ser escribir a un archivo, 
modificar un variable global, o accidentalmente enviar todo tu dinero a un 
desconfiado. 

Bueno, las funciones necesitan tener efectos extras a menudo. Como el ejemplo anterior, 
puede que sea necesario escribir hasta un archivo. En ese caso, hay que centralizar en el &#039;por qué&#039; 
de lo que estás haciendo. No tengas varias funciones y clases que escriben hasta un archivo particular. 
En cambio, crea un &#039;servicio&#039; que se dedica a eso: uno y solo un servicio.

El punto clave aquí es evitar las equivocaciones comunes como compartir &#039;estado&#039; entre 
objeto sin ninguna estructura, utilizar tipos de data mutables que se pueden escribir hasta 
lo que sea, y no centralizar donde se ocurren los efectos extras. Si puedes conseguir esto, 
serás más feliz que la mayoría de los demás programadores.


**Mal hecho:**
```javascript
// Global variable referenced by following function.
// If we had another function that used this name, now it&#039;d be an array and it could break it.
let name = &#039;Ryan McDermott&#039;;

function splitIntoFirstAndLastName() {
  name = name.split(&#039; &#039;);
}

splitIntoFirstAndLastName();

console.log(name); // [&#039;Ryan&#039;, &#039;McDermott&#039;];
```

**Bien hecho:**
```javascript
function splitIntoFirstAndLastName(name) {
  return name.split(&#039; &#039;);
}

const name = &#039;Ryan McDermott&#039;;
const newName = splitIntoFirstAndLastName(name);

console.log(name); // &#039;Ryan McDermott&#039;;
console.log(newName); // [&#039;Ryan&#039;, &#039;McDermott&#039;];
```
**[⬆ vuelve hasta arriba](#contenido)**

### Evitar los efectos extras(parte 2)
En JavaScript, los primitivos se pasan por valores y los objetos/arrays se
pasan por referencia. En el caso de los objetos y los array, si tu función 
hace un cambio en la shopping cart array, por ejemplo, con agregar una cosa a 
la hora de comprar, resulta que todas las demás funciones que utilizan este array 
estarán afectadas. Esto puede ser bueno o malo. Imaginemos una situación mala:

El usuario le da click a &quot;Comprar&quot;, un botón que invoca la función de &quot;comprar&quot;.
Esta función hace una solicitud del red y envía el array de &#039;cart&#039; hasta el servidor.
Debido a la conexión mala del red, la función sigue intentando invocarse para mandar 
la solicitud. Ahora, que pasa mientras tanto cuando el usuario le da click otra vez 
al botón en una cosa que no querían antes de que empezase la solicitud del red? 
Bueno, si pasa eso y comienza la solicitud del red, la función de &#039;comprar&#039; 
mandara sin querer la cosa que estaba agregada accidentalmente ya que tiene una 
referencia al array de &#039;shopping cart&#039; que la función &#039;addItemToCart&#039; modifico 
con agregar una cosa no deseada.

Una buena solución seria que la función &#039;addItemToCart&#039; siempre copiara la &#039;carta&#039;,
editarla, y devolvérsela a la copia. Esto asegura que ninguna otra función relacionada 
se afectará por estos cambios.

Dos cosas para mencionar con esta solución:
  1. Puede que existan escenarios donde de verdad quieres modificar el objeto de input, 
  pero cuando adoptas esta práctica de programar, te darás cuentas de que estos casos son 
  bastante únicos.
  2. Copiar objetos grandes pueden ser muy caros en cuanto a la velocidad y calidad de tu programa.
  Afortunadamente, no hay mucho problema con esto ya que existen muchas [recursos](https://facebook.github.io/immutable-js/)
  que nos dejan lograr el copiar de objetos y arrays sin perder actuación.


**Mal hecho:**
```javascript
const addItemToCart = (cart, item) =&gt; {
  cart.push({ item, date: Date.now() });
};
```

**Bien hecho:**
```javascript
const addItemToCart = (cart, item) =&gt; {
  return [...cart, { item, date : Date.now() }];
};
```

**[⬆ vuelve hasta arriba](#contenido)**

### No intentes cambiar las funciones globales
Polucionar las construcciones globales no es buen costumbre en JavaScript 
ya que se puede afrontar con otra biblioteca y el usuario de tu API no se daría 
cuenta hasta que reciba una excepción cuando ya está en producción el código. Pensemos 
en un ejemplo: que pasaría si quisieras extender los métodos nativos de la clase Array para 
tener un método de &#039;diff&#039; en que se podría mostrar la diferencia entre dos arrays?
Podrías escribir una nueva función hasta el prototipo del `Array.prototype`, pero eso
también podría causar problemas con otra biblioteca que contenía el método igual. 
Bueno, ¿qué pasaría si la otra biblioteca solamente usaba ‘diff’ para averiguar la diferencia entre el primer elemento y el último elemento del array? Por eso hay que utilizar las clases de ES2015/ES6 y extender el global de `Array`. 


**Mal hecho:**
```javascript
Array.prototype.diff = function diff(comparisonArray) {
  const hash = new Set(comparisonArray);
  return this.filter(elem =&gt; !hash.has(elem));
};
```

**Bien hecho:**
```javascript
class SuperArray extends Array {
  diff(comparisonArray) {
    const hash = new Set(comparisonArray);
    return this.filter(elem =&gt; !hash.has(elem));
  }
}
```
**[⬆ vuelve hasta arriba](#contenido)**

### Favorece a 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[open-webui/open-webui]]></title>
            <link>https://github.com/open-webui/open-webui</link>
            <guid>https://github.com/open-webui/open-webui</guid>
            <pubDate>Sat, 29 Mar 2025 00:04:26 GMT</pubDate>
            <description><![CDATA[User-friendly AI Interface (Supports Ollama, OpenAI API, ...)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/open-webui/open-webui">open-webui/open-webui</a></h1>
            <p>User-friendly AI Interface (Supports Ollama, OpenAI API, ...)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 86,050</p>
            <p>Forks: 10,566</p>
            <p>Stars today: 192 stars today</p>
            <h2>README</h2><pre># Open WebUI 👋

![GitHub stars](https://img.shields.io/github/stars/open-webui/open-webui?style=social)
![GitHub forks](https://img.shields.io/github/forks/open-webui/open-webui?style=social)
![GitHub watchers](https://img.shields.io/github/watchers/open-webui/open-webui?style=social)
![GitHub repo size](https://img.shields.io/github/repo-size/open-webui/open-webui)
![GitHub language count](https://img.shields.io/github/languages/count/open-webui/open-webui)
![GitHub top language](https://img.shields.io/github/languages/top/open-webui/open-webui)
![GitHub last commit](https://img.shields.io/github/last-commit/open-webui/open-webui?color=red)
![Hits](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Follama-webui%2Follama-wbui&amp;count_bg=%2379C83D&amp;title_bg=%23555555&amp;icon=&amp;icon_color=%23E7E7E7&amp;title=hits&amp;edge_flat=false)
[![Discord](https://img.shields.io/badge/Discord-Open_WebUI-blue?logo=discord&amp;logoColor=white)](https://discord.gg/5rJgQTnV4s)
[![](https://img.shields.io/static/v1?label=Sponsor&amp;message=%E2%9D%A4&amp;logo=GitHub&amp;color=%23fe8e86)](https://github.com/sponsors/tjbck)

**Open WebUI is an [extensible](https://docs.openwebui.com/features/plugin/), feature-rich, and user-friendly self-hosted AI platform designed to operate entirely offline.** It supports various LLM runners like **Ollama** and **OpenAI-compatible APIs**, with **built-in inference engine** for RAG, making it a **powerful AI deployment solution**.

![Open WebUI Demo](./demo.gif)

&gt; [!TIP]  
&gt; **Looking for an [Enterprise Plan](https://docs.openwebui.com/enterprise)?** – **[Speak with Our Sales Team Today!](mailto:sales@openwebui.com)**
&gt;
&gt; Get **enhanced capabilities**, including **custom theming and branding**, **Service Level Agreement (SLA) support**, **Long-Term Support (LTS) versions**, and **more!**

For more information, be sure to check out our [Open WebUI Documentation](https://docs.openwebui.com/).

## Key Features of Open WebUI ⭐

- 🚀 **Effortless Setup**: Install seamlessly using Docker or Kubernetes (kubectl, kustomize or helm) for a hassle-free experience with support for both `:ollama` and `:cuda` tagged images.

- 🤝 **Ollama/OpenAI API Integration**: Effortlessly integrate OpenAI-compatible APIs for versatile conversations alongside Ollama models. Customize the OpenAI API URL to link with **LMStudio, GroqCloud, Mistral, OpenRouter, and more**.

- 🛡️ **Granular Permissions and User Groups**: By allowing administrators to create detailed user roles and permissions, we ensure a secure user environment. This granularity not only enhances security but also allows for customized user experiences, fostering a sense of ownership and responsibility amongst users.

- 📱 **Responsive Design**: Enjoy a seamless experience across Desktop PC, Laptop, and Mobile devices.

- 📱 **Progressive Web App (PWA) for Mobile**: Enjoy a native app-like experience on your mobile device with our PWA, providing offline access on localhost and a seamless user interface.

- ✒️🔢 **Full Markdown and LaTeX Support**: Elevate your LLM experience with comprehensive Markdown and LaTeX capabilities for enriched interaction.

- 🎤📹 **Hands-Free Voice/Video Call**: Experience seamless communication with integrated hands-free voice and video call features, allowing for a more dynamic and interactive chat environment.

- 🛠️ **Model Builder**: Easily create Ollama models via the Web UI. Create and add custom characters/agents, customize chat elements, and import models effortlessly through [Open WebUI Community](https://openwebui.com/) integration.

- 🐍 **Native Python Function Calling Tool**: Enhance your LLMs with built-in code editor support in the tools workspace. Bring Your Own Function (BYOF) by simply adding your pure Python functions, enabling seamless integration with LLMs.

- 📚 **Local RAG Integration**: Dive into the future of chat interactions with groundbreaking Retrieval Augmented Generation (RAG) support. This feature seamlessly integrates document interactions into your chat experience. You can load documents directly into the chat or add files to your document library, effortlessly accessing them using the `#` command before a query.

- 🔍 **Web Search for RAG**: Perform web searches using providers like `SearXNG`, `Google PSE`, `Brave Search`, `serpstack`, `serper`, `Serply`, `DuckDuckGo`, `TavilySearch`, `SearchApi` and `Bing` and inject the results directly into your chat experience.

- 🌐 **Web Browsing Capability**: Seamlessly integrate websites into your chat experience using the `#` command followed by a URL. This feature allows you to incorporate web content directly into your conversations, enhancing the richness and depth of your interactions.

- 🎨 **Image Generation Integration**: Seamlessly incorporate image generation capabilities using options such as AUTOMATIC1111 API or ComfyUI (local), and OpenAI&#039;s DALL-E (external), enriching your chat experience with dynamic visual content.

- ⚙️ **Many Models Conversations**: Effortlessly engage with various models simultaneously, harnessing their unique strengths for optimal responses. Enhance your experience by leveraging a diverse set of models in parallel.

- 🔐 **Role-Based Access Control (RBAC)**: Ensure secure access with restricted permissions; only authorized individuals can access your Ollama, and exclusive model creation/pulling rights are reserved for administrators.

- 🌐🌍 **Multilingual Support**: Experience Open WebUI in your preferred language with our internationalization (i18n) support. Join us in expanding our supported languages! We&#039;re actively seeking contributors!

- 🧩 **Pipelines, Open WebUI Plugin Support**: Seamlessly integrate custom logic and Python libraries into Open WebUI using [Pipelines Plugin Framework](https://github.com/open-webui/pipelines). Launch your Pipelines instance, set the OpenAI URL to the Pipelines URL, and explore endless possibilities. [Examples](https://github.com/open-webui/pipelines/tree/main/examples) include **Function Calling**, User **Rate Limiting** to control access, **Usage Monitoring** with tools like Langfuse, **Live Translation with LibreTranslate** for multilingual support, **Toxic Message Filtering** and much more.

- 🌟 **Continuous Updates**: We are committed to improving Open WebUI with regular updates, fixes, and new features.

Want to learn more about Open WebUI&#039;s features? Check out our [Open WebUI documentation](https://docs.openwebui.com/features) for a comprehensive overview!

## 🔗 Also Check Out Open WebUI Community!

Don&#039;t forget to explore our sibling project, [Open WebUI Community](https://openwebui.com/), where you can discover, download, and explore customized Modelfiles. Open WebUI Community offers a wide range of exciting possibilities for enhancing your chat interactions with Open WebUI! 🚀

## How to Install 🚀

### Installation via Python pip 🐍

Open WebUI can be installed using pip, the Python package installer. Before proceeding, ensure you&#039;re using **Python 3.11** to avoid compatibility issues.

1. **Install Open WebUI**:
   Open your terminal and run the following command to install Open WebUI:

   ```bash
   pip install open-webui
   ```

2. **Running Open WebUI**:
   After installation, you can start Open WebUI by executing:

   ```bash
   open-webui serve
   ```

This will start the Open WebUI server, which you can access at [http://localhost:8080](http://localhost:8080)

### Quick Start with Docker 🐳

&gt; [!NOTE]  
&gt; Please note that for certain Docker environments, additional configurations might be needed. If you encounter any connection issues, our detailed guide on [Open WebUI Documentation](https://docs.openwebui.com/) is ready to assist you.

&gt; [!WARNING]
&gt; When using Docker to install Open WebUI, make sure to include the `-v open-webui:/app/backend/data` in your Docker command. This step is crucial as it ensures your database is properly mounted and prevents any loss of data.

&gt; [!TIP]  
&gt; If you wish to utilize Open WebUI with Ollama included or CUDA acceleration, we recommend utilizing our official images tagged with either `:cuda` or `:ollama`. To enable CUDA, you must install the [Nvidia CUDA container toolkit](https://docs.nvidia.com/dgx/nvidia-container-runtime-upgrade/) on your Linux/WSL system.

### Installation with Default Configuration

- **If Ollama is on your computer**, use this command:

  ```bash
  docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **If Ollama is on a Different Server**, use this command:

  To connect to Ollama on another server, change the `OLLAMA_BASE_URL` to the server&#039;s URL:

  ```bash
  docker run -d -p 3000:8080 -e OLLAMA_BASE_URL=https://example.com -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **To run Open WebUI with Nvidia GPU support**, use this command:

  ```bash
  docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda
  ```

### Installation for OpenAI API Usage Only

- **If you&#039;re only using OpenAI API**, use this command:

  ```bash
  docker run -d -p 3000:8080 -e OPENAI_API_KEY=your_secret_key -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

### Installing Open WebUI with Bundled Ollama Support

This installation method uses a single container image that bundles Open WebUI with Ollama, allowing for a streamlined setup via a single command. Choose the appropriate command based on your hardware setup:

- **With GPU Support**:
  Utilize GPU resources by running the following command:

  ```bash
  docker run -d -p 3000:8080 --gpus=all -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

- **For CPU Only**:
  If you&#039;re not using a GPU, use this command instead:

  ```bash
  docker run -d -p 3000:8080 -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

Both commands facilitate a built-in, hassle-free installation of both Open WebUI and Ollama, ensuring that you can get everything up and running swiftly.

After installation, you can access Open WebUI at [http://localhost:3000](http://localhost:3000). Enjoy! 😄

### Other Installation Methods

We offer various installation alternatives, including non-Docker native installation methods, Docker Compose, Kustomize, and Helm. Visit our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/) or join our [Discord community](https://discord.gg/5rJgQTnV4s) for comprehensive guidance.

### Troubleshooting

Encountering connection issues? Our [Open WebUI Documentation](https://docs.openwebui.com/troubleshooting/) has got you covered. For further assistance and to join our vibrant community, visit the [Open WebUI Discord](https://discord.gg/5rJgQTnV4s).

#### Open WebUI: Server Connection Error

If you&#039;re experiencing connection issues, it’s often due to the WebUI docker container not being able to reach the Ollama server at 127.0.0.1:11434 (host.docker.internal:11434) inside the container . Use the `--network=host` flag in your docker command to resolve this. Note that the port changes from 3000 to 8080, resulting in the link: `http://localhost:8080`.

**Example Docker Command**:

```bash
docker run -d --network=host -v open-webui:/app/backend/data -e OLLAMA_BASE_URL=http://127.0.0.1:11434 --name open-webui --restart always ghcr.io/open-webui/open-webui:main
```

### Keeping Your Docker Installation Up-to-Date

In case you want to update your local Docker installation to the latest version, you can do it with [Watchtower](https://containrrr.dev/watchtower/):

```bash
docker run --rm --volume /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --run-once open-webui
```

In the last part of the command, replace `open-webui` with your container name if it is different.

Check our Updating Guide available in our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/updating).

### Using the Dev Branch 🌙

&gt; [!WARNING]
&gt; The `:dev` branch contains the latest unstable features and changes. Use it at your own risk as it may have bugs or incomplete features.

If you want to try out the latest bleeding-edge features and are okay with occasional instability, you can use the `:dev` tag like this:

```bash
docker run -d -p 3000:8080 -v open-webui:/app/backend/data --name open-webui --add-host=host.docker.internal:host-gateway --restart always ghcr.io/open-webui/open-webui:dev
```

### Offline Mode

If you are running Open WebUI in an offline environment, you can set the `HF_HUB_OFFLINE` environment variable to `1` to prevent attempts to download models from the internet.

```bash
export HF_HUB_OFFLINE=1
```

## What&#039;s Next? 🌟

Discover upcoming features on our roadmap in the [Open WebUI Documentation](https://docs.openwebui.com/roadmap/).

## License 📜

This project is licensed under the [BSD-3-Clause License](LICENSE) - see the [LICENSE](LICENSE) file for details. 📄

## Support 💬

If you have any questions, suggestions, or need assistance, please open an issue or join our
[Open WebUI Discord community](https://discord.gg/5rJgQTnV4s) to connect with us! 🤝

## Star History

&lt;a href=&quot;https://star-history.com/#open-webui/open-webui&amp;Date&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&amp;theme=dark&quot; /&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
    &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

---

Created by [Timothy Jaeryang Baek](https://github.com/tjbck) - Let&#039;s make Open WebUI even more amazing together! 💪
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[UseInterstellar/Interstellar]]></title>
            <link>https://github.com/UseInterstellar/Interstellar</link>
            <guid>https://github.com/UseInterstellar/Interstellar</guid>
            <pubDate>Sat, 29 Mar 2025 00:04:25 GMT</pubDate>
            <description><![CDATA[One of the most popular modern web proxies with blazing fast speeds and a variety of games.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/UseInterstellar/Interstellar">UseInterstellar/Interstellar</a></h1>
            <p>One of the most popular modern web proxies with blazing fast speeds and a variety of games.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,406</p>
            <p>Forks: 17,206</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/UseInterstellar/Interstellar/main/.github/branding/in.png&quot;&gt;
    &lt;p&gt;Serving over 8+ million users since 2023.&lt;p&gt;
    &lt;p&gt;Interstellar is a web proxy with a Clean and Sleek UI and easy to use menus. Our goal is to provide the best user experience to everyone.&lt;/p&gt;
&lt;/div&gt;

![inpreview](https://github.com/UseInterstellar/Interstellar/assets/89202835/2669efed-5186-4932-83c4-725acae60bd2)

&gt; [!IMPORTANT]
&gt; If you fork this project, consider giving it a star in the original repository!

**Join Our [Discord Community](https://discord.gg/interstellar) for support, more links, and an active community!**

## Features

- About:Blank Cloaking
- Tab Cloaking
- Wide collection of apps &amp; games
- Clean, Easy to use UI
- Inspect Element
- Various Themes
- Password Protection (Optional)
- Built-in Tab System
- Now.gg Support
- Fast Speeds
- Geforce NOW Support

## Deployment

&gt; [!IMPORTANT]
&gt; You **cannot** deploy to static web hosts, including Netlify, Cloudflare Pages, and GitHub Pages.

### Password Protection

1. Go to the `config.js` file and set `challenge` to **true**. Then, set the environment variable as follows:
2. For PNPM: Run either `config=true pnpm start` or `$env:config=true; pnpm start`, depending on your server.
3. For Bun: Run either `config=true bun start` or `$env:config=true; bun start` if you prefer Bun.
4. For NPM: Run either `config=true npm start` or `$env:config=true; npm start` if you prefer NPM.


### Server Deployment

You must run these commands on your server:

```bash
git clone https://github.com/UseInterstellar/Interstellar
cd Interstellar
```

#### Ad-Free Deployment

```bash
git clone --branch Ad-Free https://github.com/UseInterstellar/Interstellar
cd Interstellar
```

Next depending on your package manager, run one of the following commands:

#### Bun

If you are using Bun, run the following commands:

```bash
bun i
bun start
```

#### pnpm

If you are using pnpm, run the following commands:

```bash
pnpm i
pnpm start
```

#### npm

If you are using npm, run the following commands:

```bash
npm i
npm run start
```

### Updating

```bash
cd Interstellar
git pull --force --allow-unrelated-histories # This may overwrite your local changes
```

&lt;a target=&quot;_blank&quot; href=&quot;https://heroku.com/deploy/?template=https://github.com/UseInterstellar/Interstellar&quot;&gt;&lt;img alt=&quot;Deploy to Heroku&quot; src=&quot;https://binbashbanana.github.io/deploy-buttons/buttons/remade/heroku.svg&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://app.koyeb.com/deploy?type=git&amp;repository=github.com/UseInterstellar/Interstellar&quot;&gt;&lt;img alt=&quot;Deploy to Koyeb&quot; src=&quot;https://binbashbanana.github.io/deploy-buttons/buttons/remade/koyeb.svg&quot;&gt;&lt;/a&gt;

### Deployment Alternatives

For more deployment options, join our [Discord Server](https://discord.gg/interstellar) for various ways to deploy Interstellar.
This includes methods of deploying to Render/OnRender.

#### What happened to Replit Deployment?

As of January 1st, 2024, Replit is [no longer free](https://blog.replit.com/hosting-changes). Try GitHub Codespaces instead.

### GitHub Codespaces

&gt; [!NOTE]
&gt; If you&#039;re setting the port below 1023, then you must run `sudo PORT=1023`

1. Create a GitHub account if you haven&#039;t already.
2. Click &quot;Code&quot; (green button) and then &quot;Create Codespace on main.&quot;
3. In the terminal at the bottom, paste `pnpm i &amp;&amp; pnpm start`.
4. Respond to the application popup by clicking &quot;Make public.&quot;
&gt; [!IMPORTANT]
&gt; Make sure you click the &quot;Make public.&quot; button, or the proxy won&#039;t function properly.&lt;br&gt;
&gt; If you get a Range Error, go back and make sure you clicked Make public!
5. Access the deployed website from the ports tab.
6. For subsequent uses in the same codespace, just run `pnpm start`

### Solution for if there is no popup.

1. Run `pnpm i`, and before `pnpm start`, prepend `PORT=8080`, replacing 8080 with another port. For example, `PORT=6969 pnpm start`.
2. If this does not work then you can prepend `$env:PORT=8080;`, replacing 8080 with another port. For example, `$env:PORT=6969; pnpm start`
3. Go to the ports tab, Click Forward A Port, And type the port number.
4. Right-click Visibility and set Port Visibility to Public.

&gt; [!NOTE]
&gt; We are committed to making Interstellar easy and personalized however, as of now we need your support in making it ad-free. Consider keeping ads so Interstellar can run freely or contribute by being a supporter.

## Report Issues

If you encounter problems, open an issue on GitHub, and we&#039;ll address it promptly.

&gt; [!TIP]
&gt; If you&#039;re having trouble, don&#039;t hesitate to reach out to us on [Discord](https://discord.gg/interstellar) for personalized support.

# Credits

A huge thanks goes out to all of the people who have contributed to Interstellar.

[![Contributors](https://contrib.rocks/image?repo=UseInterstellar/Interstellar)](https://github.com/UseInterstellar/Interstellar/graphs/contributors)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[f/awesome-chatgpt-prompts]]></title>
            <link>https://github.com/f/awesome-chatgpt-prompts</link>
            <guid>https://github.com/f/awesome-chatgpt-prompts</guid>
            <pubDate>Sat, 29 Mar 2025 00:04:24 GMT</pubDate>
            <description><![CDATA[This repo includes ChatGPT prompt curation to use ChatGPT and other LLM tools better.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/f/awesome-chatgpt-prompts">f/awesome-chatgpt-prompts</a></h1>
            <p>This repo includes ChatGPT prompt curation to use ChatGPT and other LLM tools better.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 122,129</p>
            <p>Forks: 16,386</p>
            <p>Stars today: 50 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
&lt;img width=&quot;395&quot; alt=&quot;prompts.chat&quot; src=&quot;https://github.com/user-attachments/assets/e0d0e32d-d2ce-4459-9f37-e951d9f4f5de&quot; /&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;Sponsors&lt;/h3&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://clemta.com&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;50&quot; alt=&quot;Clemta logo&quot; src=&quot;https://clemta.com/wp-content/uploads/2023/03/logo-clemta-com-1.png.webp&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;&lt;br&gt;
  &lt;a href=&quot;https://hf.co/chat&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;60&quot; alt=&quot;Hugging Face logo&quot; src=&quot;https://github.com/user-attachments/assets/4187ef06-7cae-402a-a410-e0a999758fed&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;sub&gt;&lt;a href=&quot;https://github.com/sponsors/f/sponsorships?sponsor=f&amp;amp;tier_id=319423&quot;&gt;Be my sponsor and your logo will be here!&lt;/a&gt;&lt;/sub&gt;
&lt;/p&gt;

---
[![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)

Welcome to the &quot;Awesome ChatGPT Prompts&quot; repository! While this collection was originally created for [ChatGPT](https://chat.openai.com/chat), these prompts work great with other AI models like [Claude](https://claude.ai/new), [Gemini](https://gemini.google.com), [Hugging Face Chat](https://hf.co/chat), [Llama](https://meta.ai), [Mistral](https://chat.mistral.ai), and more.

[ChatGPT](https://chat.openai.com/chat) is a web interface created by [OpenAI](https://openai.com) that provides access to their GPT (Generative Pre-trained Transformer) language models. The underlying models, like GPT-4o and GPT-o1, are large language models trained on vast amounts of text data that can understand and generate human-like text. Like other AI chat interfaces, you can provide prompts and have natural conversations with the AI, which will generate contextual responses based on the conversation history and your inputs.

In this repository, you will find a variety of prompts that can be used with ChatGPT and other AI chat models. We encourage you to [add your own prompts](https://github.com/f/awesome-chatgpt-prompts/edit/main/README.md) to the list, and to use AI to help generate new prompts as well.

To get started, simply clone this repository and use the prompts in the README.md file as input for your preferred AI chat model. You can also use the prompts in this file as inspiration for creating your own.

We hope you find these prompts useful and have fun exploring AI chat models!

**[View on prompts.chat](https://prompts.chat)**

**[View on Hugging Face](https://huggingface.co/datasets/fka/awesome-chatgpt-prompts/)**
---

&gt; ℹ️ **NOTE:** Sometimes, some of the prompts may not be working as you expected
&gt; or may be rejected by the AI. Please try again, start a new thread, or log out
&gt; and log back in. If these solutions do not work, please try rewriting the
&gt; prompt using your own sentences while keeping the instructions same.

### Want to Write Effective Prompts?

I&#039;ve authored an e-book called **&quot;The Art of ChatGPT Prompting: A Guide to
Crafting Clear and Effective Prompts&quot;**.

📖 **[Read the e-book](https://fka.gumroad.com/l/art-of-chatgpt-prompting)**

### Want to Learn How to Make Money using ChatGPT Prompts?

I&#039;ve authored an e-book called **&quot;How to Make Money with ChatGPT: Strategies,
Tips, and Tactics&quot;**.

📖
**[Buy the e-book](https://fka.gumroad.com/l/how-to-make-money-with-chatgpt)**

### Want to Learn How to write image prompts for Midjourney AI?

I&#039;ve authored an e-book called **&quot;The Art of Midjourney AI: A Guide to Creating
Images from Text&quot;**.

📖
**[Read the e-book](https://fka.gumroad.com/l/the-art-of-midjourney-ai-guide-to-creating-images-from-text)**

---

### Using prompts.chat

[prompts.chat](https://prompts.chat) is designed to provide an enhanced UX when
working with prompts. With just a few clicks, you can easily edit and copy the
prompts on the site to fit your specific needs and preferences.

&lt;img width=&quot;1400&quot; alt=&quot;Screenshot 2025-01-05 at 22 17 19&quot; src=&quot;https://github.com/user-attachments/assets/272d2092-b651-452a-a049-f46b31c32889&quot; /&gt;

---

## Unmerged Prompts

There are many Pull Requests to this repository waiting to be merged. There are
many hidden gems there. Take a look!

📖
**[View Unmerged Prompts](https://github.com/f/awesome-chatgpt-prompts/pulls)**

---

# Prompts

## Act as an Ethereum Developer

Contributed by: [@ameya-2003](https://github.com/Ameya-2003) Reference:
[The BlockChain Messenger](https://github.com/Ameya-2003/BlockChain/blob/main/Projects/The%20BlockChain%20Messenger.sol)

&gt; Imagine you are an experienced Ethereum developer tasked with creating a smart
&gt; contract for a blockchain messenger. The objective is to save messages on the
&gt; blockchain, making them readable (public) to everyone, writable (private) only
&gt; to the person who deployed the contract, and to count how many times the
&gt; message was updated. Develop a Solidity smart contract for this purpose,
&gt; including the necessary functions and considerations for achieving the
&gt; specified goals. Please provide the code and any relevant explanations to
&gt; ensure a clear understanding of the implementation.

## Act as a Linux Terminal

Contributed by: [@f](https://github.com/f) Reference:
[https://www.engraved.blog/building-a-virtual-machine-inside/](https://www.engraved.blog/building-a-virtual-machine-inside/)

&gt; I want you to act as a linux terminal. I will type commands and you will reply
&gt; with what the terminal should show. I want you to only reply with the terminal
&gt; output inside one unique code block, and nothing else. do not write
&gt; explanations. do not type commands unless I instruct you to do so. When I need
&gt; to tell you something in English, I will do so by putting text inside curly
&gt; brackets {like this}. My first command is pwd

## Act as an English Translator and Improver

Contributed by: [@f](https://github.com/f) **Alternative to**: Grammarly, Google
Translate

&gt; I want you to act as an English translator, spelling corrector and improver. I
&gt; will speak to you in any language and you will detect the language, translate
&gt; it and answer in the corrected and improved version of my text, in English. I
&gt; want you to replace my simplified A0-level words and sentences with more
&gt; beautiful and elegant, upper level English words and sentences. Keep the
&gt; meaning same, but make them more literary. I want you to only reply the
&gt; correction, the improvements and nothing else, do not write explanations. My
&gt; first sentence is &quot;istanbulu cok seviyom burada olmak cok guzel&quot;

## Act as Job Interviewer

Contributed by: [@f](https://github.com/f) &amp;
[@iltekin](https://github.com/iltekin) **Examples**: Node.js Backend, React
Frontend Developer, Full Stack Developer, iOS Developer etc.

&gt; I want you to act as an interviewer. I will be the candidate and you will ask
&gt; me the interview questions for the ${Position:JavaScript Developer} position. I want you to only
&gt; reply as the interviewer. Do not write all the conversation at once. I want
&gt; you to only do the interview with me. Ask me the questions and wait for my
&gt; answers. Do not write explanations. Ask me the questions one by one like an
&gt; interviewer does and wait for my answers. My first sentence is &quot;Hi&quot;

## Act as a JavaScript Console

Contributed by: [@omerimzali](https://github.com/omerimzali)

&gt; I want you to act as a javascript console. I will type commands and you will
&gt; reply with what the javascript console should show. I want you to only reply
&gt; with the terminal output inside one unique code block, and nothing else. do
&gt; not write explanations. do not type commands unless I instruct you to do so.
&gt; when I need to tell you something in english, I will do so by putting text
&gt; inside curly brackets {like this}. My first command is console.log(&quot;Hello
&gt; World&quot;);

## Act as an Excel Sheet

Contributed by: [@f](https://github.com/f)

&gt; I want you to act as a text based excel. You&#039;ll only reply me the text-based
&gt; 10 rows excel sheet with row numbers and cell letters as columns (A to L).
&gt; First column header should be empty to reference row number. I will tell you
&gt; what to write into cells and you&#039;ll reply only the result of excel table as
&gt; text, and nothing else. Do not write explanations. I will write you formulas
&gt; and you&#039;ll execute formulas and you&#039;ll only reply the result of excel table as
&gt; text. First, reply me the empty sheet.

## Act as an English Pronunciation Helper

Contributed by: [@f](https://github.com/f)

&gt; I want you to act as an English pronunciation assistant for Turkish speaking
&gt; people. I will write you sentences and you will only answer their
&gt; pronunciations, and nothing else. The replies must not be translations of my
&gt; sentence but only pronunciations. Pronunciations should use Turkish Latin
&gt; letters for phonetics. Do not write explanations on replies. My first sentence
&gt; is &quot;how the weather is in Istanbul?&quot;

## Act as a Spoken English Teacher and Improver

Contributed by: [@ATX735](https://github.com/ATX735)

&gt; I want you to act as a spoken English teacher and improver. I will speak to
&gt; you in English and you will reply to me in English to practice my spoken
&gt; English. I want you to keep your reply neat, limiting the reply to 100 words.
&gt; I want you to strictly correct my grammar mistakes, typos, and factual errors.
&gt; I want you to ask me a question in your reply. Now let&#039;s start practicing, you
&gt; could ask me a question first. Remember, I want you to strictly correct my
&gt; grammar mistakes, typos, and factual errors.

## Act as a Travel Guide

Contributed by: [@koksalkapucuoglu](https://github.com/koksalkapucuoglu)

&gt; I want you to act as a travel guide. I will write you my location and you will
&gt; suggest a place to visit near my location. In some cases, I will also give you
&gt; the type of places I will visit. You will also suggest me places of similar
&gt; type that are close to my first location. My first suggestion request is &quot;I am
&gt; in Istanbul/Beyoğlu and I want to visit only museums.&quot;

## Act as a Plagiarism Checker

Contributed by: [@yetk1n](https://github.com/yetk1n)

&gt; I want you to act as a plagiarism checker. I will write you sentences and you
&gt; will only reply undetected in plagiarism checks in the language of the given
&gt; sentence, and nothing else. Do not write explanations on replies. My first
&gt; sentence is &quot;For computers to behave like humans, speech recognition systems
&gt; must be able to process nonverbal information, such as the emotional state of
&gt; the speaker.&quot;

## Act as Character

Contributed by: [@BRTZL](https://github.com/BRTZL)
[@mattsq](https://github.com/mattsq)

&gt; I want you to act like ${Character: Anakin Skywalker} from ${Series: Star Wars}. I want you to respond and
&gt; answer like ${Character: Anakin Skywalker} using the tone, manner and vocabulary ${Character: Anakin Skywalker}
&gt; would use. Do not write any explanations. Only answer like ${Character: Anakin Skywalker}. You
&gt; must know all of the knowledge of ${Character: Anakin Skywalker}. My first sentence is &quot;Hi
&gt; ${Character: Anakin Skywalker}.&quot;

## Act as an Advertiser

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as an advertiser. You will create a campaign to promote a
&gt; product or service of your choice. You will choose a target audience, develop
&gt; key messages and slogans, select the media channels for promotion, and decide
&gt; on any additional activities needed to reach your goals. My first suggestion
&gt; request is &quot;I need help creating an advertising campaign for a new type of
&gt; energy drink targeting young adults aged 18-30.&quot;

## Act as a Storyteller

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a storyteller. You will come up with entertaining stories
&gt; that are engaging, imaginative and captivating for the audience. It can be
&gt; fairy tales, educational stories or any other type of stories which has the
&gt; potential to capture people&#039;s attention and imagination. Depending on the
&gt; target audience, you may choose specific themes or topics for your
&gt; storytelling session e.g., if it’s children then you can talk about animals;
&gt; If it’s adults then history-based tales might engage them better etc. My first
&gt; request is &quot;I need an interesting story on perseverance.&quot;

## Act as a Football Commentator

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a football commentator. I will give you descriptions of
&gt; football matches in progress and you will commentate on the match, providing
&gt; your analysis on what has happened thus far and predicting how the game may
&gt; end. You should be knowledgeable of football terminology, tactics,
&gt; players/teams involved in each match, and focus primarily on providing
&gt; intelligent commentary rather than just narrating play-by-play. My first
&gt; request is &quot;I&#039;m watching Manchester United vs Chelsea - provide commentary for
&gt; this match.&quot;

## Act as a Stand-up Comedian

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a stand-up comedian. I will provide you with some topics
&gt; related to current events and you will use your wit, creativity, and
&gt; observational skills to create a routine based on those topics. You should
&gt; also be sure to incorporate personal anecdotes or experiences into the routine
&gt; in order to make it more relatable and engaging for the audience. My first
&gt; request is &quot;I want a humorous take on politics.&quot;

## Act as a Motivational Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a motivational coach. I will provide you with some
&gt; information about someone&#039;s goals and challenges, and it will be your job to
&gt; come up with strategies that can help this person achieve their goals. This
&gt; could involve providing positive affirmations, giving helpful advice or
&gt; suggesting activities they can do to reach their end goal. My first request is
&gt; &quot;I need help motivating myself to stay disciplined while studying for an
&gt; upcoming exam&quot;.

## Act as a Composer

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a composer. I will provide the lyrics to a song and you
&gt; will create music for it. This could include using various instruments or
&gt; tools, such as synthesizers or samplers, in order to create melodies and
&gt; harmonies that bring the lyrics to life. My first request is &quot;I have written a
&gt; poem named “Hayalet Sevgilim” and need music to go with it.&quot;

## Act as a Debater

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a debater. I will provide you with some topics related to
&gt; current events and your task is to research both sides of the debates, present
&gt; valid arguments for each side, refute opposing points of view, and draw
&gt; persuasive conclusions based on evidence. Your goal is to help people come
&gt; away from the discussion with increased knowledge and insight into the topic
&gt; at hand. My first request is &quot;I want an opinion piece about Deno.&quot;

## Act as a Debate Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a debate coach. I will provide you with a team of
&gt; debaters and the motion for their upcoming debate. Your goal is to prepare the
&gt; team for success by organizing practice rounds that focus on persuasive
&gt; speech, effective timing strategies, refuting opposing arguments, and drawing
&gt; in-depth conclusions from evidence provided. My first request is &quot;I want our
&gt; team to be prepared for an upcoming debate on whether front-end development is
&gt; easy.&quot;

## Act as a Screenwriter

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a screenwriter. You will develop an engaging and creative
&gt; script for either a feature length film, or a Web Series that can captivate
&gt; its viewers. Start with coming up with interesting characters, the setting of
&gt; the story, dialogues between the characters etc. Once your character
&gt; development is complete - create an exciting storyline filled with twists and
&gt; turns that keeps the viewers in suspense until the end. My first request is &quot;I
&gt; need to write a romantic drama movie set in Paris.&quot;

## Act as a Novelist

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a novelist. You will come up with creative and
&gt; captivating stories that can engage readers for long periods of time. You may
&gt; choose any genre such as fantasy, romance, historical fiction and so on - but
&gt; the aim is to write something that has an outstanding plotline, engaging
&gt; characters and unexpected climaxes. My first request is &quot;I need to write a
&gt; science-fiction novel set in the future.&quot;

## Act as a Movie Critic

Contributed by: [@nuc](https://github.com/nuc)

&gt; I want you to act as a movie critic. You will develop an engaging and creative
&gt; movie review. You can cover topics like plot, themes and tone, acting and
&gt; characters, direction, score, cinematography, production design, special
&gt; effects, editing, pace, dialog. The most important aspect though is to
&gt; emphasize how the movie has made you feel. What has really resonated with you.
&gt; You can also be critical about the movie. Please avoid spoilers. My first
&gt; request is &quot;I need to write a movie review for the movie Interstellar&quot;

## Act as a Relationship Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a relationship coach. I will provide some details about
&gt; the two people involved in a conflict, and it will be your job to come up with
&gt; suggestions on how they can work through the issues that are separating them.
&gt; This could include advice on communication techniques or different strategies
&gt; for improving their understanding of one another&#039;s perspectives. My first
&gt; request is &quot;I need help solving conflicts between my spouse and myself.&quot;

## Act as a Poet

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a poet. You will create poems that evoke emotions and
&gt; have the power to stir people’s soul. Write on any topic or theme but make
&gt; sure your words convey the feeling you are trying to express in beautiful yet
&gt; meaningful ways. You can also come up with short verses that are still
&gt; powerful enough to leave an imprint in readers&#039; minds. My first request is &quot;I
&gt; need a poem about love.&quot;

## Act as a Rapper

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a rapper. You will come up with powerful and meaningful
&gt; lyrics, beats and rhythm that can ‘wow’ the audience. Your lyrics should have
&gt; an intriguing meaning and message which people can relate too. When it comes
&gt; to choosing your beat, make sure it is catchy yet relevant to your words, so
&gt; that when combined they make an explosion of sound everytime! My first request
&gt; is &quot;I need a rap song about finding strength within yourself.&quot;

## Act as a Motivational Speaker

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a motivational speaker. Put together words that inspire
&gt; action and make people feel empowered to do something beyond their abilities.
&gt; You can talk about any topics but the aim is to make sure what you say
&gt; resonates with your audience, giving them an incentive to work on their goals
&gt; and strive for better possibilities. My first request is &quot;I need a speech
&gt; about how everyone should never give up.&quot;

## Act as a Philosophy Teacher

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a philosophy teacher. I will provide some topics related
&gt; to the study of philosophy, and it will be your job to explain these concepts
&gt; in an easy-to-understand manner. This could include providing examples, posing
&gt; questions or breaking down complex ideas into smaller pieces that are easier
&gt; to comprehend. My first request is &quot;I need help understanding how different
&gt; philosophical theories can be applied in everyday life.&quot;

## Act as a Philosopher


... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[sudheerj/reactjs-interview-questions]]></title>
            <link>https://github.com/sudheerj/reactjs-interview-questions</link>
            <guid>https://github.com/sudheerj/reactjs-interview-questions</guid>
            <pubDate>Sat, 29 Mar 2025 00:04:23 GMT</pubDate>
            <description><![CDATA[List of top 500 ReactJS Interview Questions & Answers....Coding exercise questions are coming soon!!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/sudheerj/reactjs-interview-questions">sudheerj/reactjs-interview-questions</a></h1>
            <p>List of top 500 ReactJS Interview Questions & Answers....Coding exercise questions are coming soon!!</p>
            <p>Language: JavaScript</p>
            <p>Stars: 41,563</p>
            <p>Forks: 9,786</p>
            <p>Stars today: 22 stars today</p>
            <h2>README</h2><pre># React Interview Questions &amp; Answers

&gt; Click :star: if you like the project. Pull Requests are highly appreciated. Follow me [@SudheerJonna](https://twitter.com/SudheerJonna) for technical updates.

---

&lt;div&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.greatfrontend.com/questions/react?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=sudheerj-react&amp;gnrs=sudheerj&quot;&gt;
    &lt;img src=&quot;./images/collab/greatfrontend-banner4x.png&quot; alt=&quot;GreatFrontEnd React Interview Questions&quot; width=&quot;100%&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;

&gt; 💡 Nail React interviews with questions and solutions from ex-interviewers! [Try GreatFrontEnd →](https://www.greatfrontend.com/questions/react?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=sudheerj-react&amp;gnrs=sudheerj) 💡

---

&lt;div&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.frontendlead.com/coding-questions?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=sudheerj-react&quot; rel=&quot;dofollow&quot;&gt;
    &lt;img src=&quot;./images/collab/frontendlead-banner.png&quot; alt=&quot;React interview&quot; width=&quot;100%&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;

&gt; 🚀 Ace React interview questions with solutions from FAANG+ companies! [Try FrontendLead →](https://www.frontendlead.com/coding-questions?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=sudheerj-react) 🚀

---


**Note:** This repository is specific to ReactJS. Please check [Javascript Interview questions](https://github.com/sudheerj/javascript-interview-questions) for core javascript questions and [DataStructures and Algorithms](https://github.com/sudheerj/datastructures-algorithms) for DSA related questions or problems.

### Table of Contents

&lt;details open&gt;
&lt;summary&gt;
Hide/Show table of contents
&lt;/summary&gt;

| No. | Questions                                                                                                                                                                                                                        |
| --- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
|     | **Core React**                                                                                                                                                                                                                   |
| 1   | [What is React?](#what-is-react)                                                                                                                                                                                                 |
| 2   | [What is the history behind React evolution?](#What-is-the-history-behind-React-evolution)                                                                                                                                       |
| 3   | [What are the major features of React?](#what-are-the-major-features-of-react)                                                                                                                                                   |
| 4   | [What is JSX?](#what-is-jsx)                                                                                                                                                                                                     |
| 5   | [What is the difference between Element and Component?](#what-is-the-difference-between-element-and-component)                                                                                                                   |
| 6   | [How to create components in React?](#how-to-create-components-in-react)                                                                                                                                                         |
| 7   | [When to use a Class Component over a Function Component?](#when-to-use-a-class-component-over-a-function-component)                                                                                                             |
| 8   | [What are Pure Components?](#what-are-pure-components)                                                                                                                                                                           |
| 9   | [What is state in React?](#what-is-state-in-react)                                                                                                                                                                               |
| 10  | [What are props in React?](#what-are-props-in-react)                                                                                                                                                                             |
| 11  | [What is the difference between state and props?](#what-is-the-difference-between-state-and-props)                                                                                                                               |
| 12  | [What is the difference between HTML and React event handling?](#what-is-the-difference-between-html-and-react-event-handling)                                                                                                   |
| 13  | [What are synthetic events in React?](#what-are-synthetic-events-in-react)                                                                                                                                                       |
| 14  | [What are inline conditional expressions?](#what-are-inline-conditional-expressions)                                                                                                                                             |
| 15  | [What is a &quot;key&quot; prop and what is the benefit of using it in arrays of elements?](#what-is-key-prop-and-what-is-the-benefit-of-using-it-in-arrays-of-elements)                                                                     |
| 16  | [What is Virtual DOM?](#what-is-virtual-dom)                                                                                                                                                                                     |
| 17  | [How Virtual DOM works?](#how-virtual-dom-works)                                                                                                                                                                                 |
| 18  | [What is the difference between Shadow DOM and Virtual DOM?](#what-is-the-difference-between-shadow-dom-and-virtual-dom)                                                                                                         |
| 19  | [What is React Fiber?](#what-is-react-fiber)                                                                                                                                                                                     |
| 20  | [What is the main goal of React Fiber?](#what-is-the-main-goal-of-react-fiber)                                                                                                                                                   |
| 21  | [What are controlled components?](#what-are-controlled-components)                                                                                                                                                               |
| 22  | [What are uncontrolled components?](#what-are-uncontrolled-components)                                                                                                                                                           |
| 23  | [What is the difference between createElement and cloneElement?](#what-is-the-difference-between-createelement-and-cloneelement)                                                                                                 |
| 24  | [What is Lifting State Up in React?](#what-is-lifting-state-up-in-react)                                                                                                                                                         |
| 25  | [What are Higher-Order components?](#what-are-higher-order-components)                                                                                                                                                           |
| 26  | [What is children prop?](#what-is-children-prop)                                                                                                                                                                                 |
| 27  | [How to write comments in React?](#how-to-write-comments-in-react)                                                                                                                                                               |
| 28  | [What is reconciliation?](#what-is-reconciliation)                                                                                                                                                                               |
| 29  | [Does the lazy function support named exports?](#does-the-lazy-function-support-named-exports)                                                                                                                                   |
| 30  | [Why React uses className over class attribute?](#why-react-uses-classname-over-class-attribute)                                                                                                                                 |
| 31  | [What are fragments?](#what-are-fragments)                                                                                                                                                                                       |
| 32  | [Why fragments are better than container divs?](#why-fragments-are-better-than-container-divs)                                                                                                                                   |
| 33  | [What are portals in React?](#what-are-portals-in-react)                                                                                                                                                                         |
| 34  | [What are stateless components?](#what-are-stateless-components)                                                                                                                                                                 |
| 35  | [What are stateful components?](#what-are-stateful-components)                                                                                                                                                                   |
| 36  | [How to apply validation on props in React?](#how-to-apply-validation-on-props-in-react)                                                                                                                                         |
| 37  | [What are the advantages of React?](#what-are-the-advantages-of-react)                                                                                                                                                           |
| 38  | [What are the limitations of React?](#what-are-the-limitations-of-react)                                                                                                                                                         |
| 39  | [What are the recommended ways for static type checking?](#what-are-the-recommended-ways-for-static-type-checking)                                                                                                               |
| 40  | [What is the use of the react-dom package?](#what-is-the-use-of-react-dom-package)                                                                                                                                                   |
| 41  | [What is ReactDOMServer?](#what-is-reactdomserver)                                                                                                                                                                               |
| 42  | [How to use InnerHtml in React?](#how-to-use-innerhtml-in-react)                                                                                                                                                                 |
| 43  | [How to use styles in React?](#how-to-use-styles-in-react)                                                                                                                                                                       |
| 44  | [How events are different in React?](#how-events-are-different-in-react)                                                                                                                                                         |
| 45  | [What is the impact of indexes as keys?](#what-is-the-impact-of-indexes-as-keys)                                                                                                                                                 |
| 46  | [How do you conditionally render components?](#how-do-you-conditionally-render-components)                                                                                                                                       |
| 47  | [Why we need to be careful when spreading props on DOM elements??](#why-we-need-to-be-careful-when-spreading-props-on-dom-elements)                                                                                              |
| 48  | [How do you memoize a component?](#how-do-you-memoize-a-component)                                                                                                                                                               |
| 49  | [How you implement Server-Side Rendering or SSR?](#how-you-implement-server-side-rendering-or-ssr)                                                                                                                               |
| 50  | [How to enable production mode in React?](#how-to-enable-production-mode-in-react)                                                                                                                                               |
| 51  | [Do Hooks replace render props and higher-order components?](#do-hooks-replace-render-props-and-higher-order-components)                                                                                                         |
| 52  | [What is a switching component?](#what-is-a-switching-component)                                                                                                                                                                 |
| 53  | [What are React Mixins?](#what-are-react-mixins)                                                                                                                                                                                 |
| 54  | [What are the Pointer Events supported in React?](#what-are-the-pointer-events-supported-in-react)                                                                                                                               |
| 55  | [Why should component names start with a capital letter?](#why-should-component-names-start-with-capital-letter)                                                                                                                   |
| 56  | [Are custom DOM attributes supported in React v16?](#are-custom-dom-attributes-supported-in-react-v16)                                                                                                                           |
| 57  | [How to loop inside JSX?](#how-to-loop-inside-jsx)                                                                                                                                                                               |
| 58  | [How do you access props in attribute quotes?](#how-do-you-access-props-in-attribute-quotes)                                                                                                                                     |
| 59  | [What is React PropType array with shape?](#what-is-react-proptype-array-with-shape)                                                                                                                                             |
| 60  | [How to conditionally apply class attributes?](#how-to-conditionally-apply-class-attributes)                                                                                                                                     |
| 61  | [What is the difference between React and ReactDOM?](#what-is-the-difference-between-react-and-reactdom)                                                                                                                         |
| 62  | [Why ReactDOM is separated from React?](#why-reactdom-is-separated-from-react)                                                                                                                                                   |
| 63  | [How to use React label element?](#how-to-use-react-label-element)                                                                                                                                                               |
| 64  | [How do you combine multiple inline-style objects?](#how-to-combine-multiple-inline-style-objects)                                                                                                                                   |
| 65  | [How to re-render the view when the browser is resized?](#how-to-re-render-the-view-when-the-browser-is-resized)                                                                                                                 |
| 66  | [How to pretty print JSON with React?](#how-to-pretty-print-json-with-react)                                                                                                                                                     |
| 67  | [Why you can&#039;t update props in React?](#why-you-cant-update-props-in-react)                                                                                                                                                      |
| 68  | [How do you focus an input element on page load?](#how-to-focus-an-input-element-on-page-load)                                                                                                                                       |
| 69  | [How can we find the version of React at runtime in the browser?](#how-can-we-find-the-version-of-react-at-runtime-in-the-browser)                                                                                               |
| 70  | [How to add Google Analytics for react-router?](#how-to-add-google-analytics-for-react-router)                                                                                                                                   |
| 71  | [How do you apply vendor prefixes to inline styles in React?](#how-do-you-apply-vendor-prefixes-to-inline-styles-in-react)                                                                                                       |
| 72  | [How to import and export components using react and ES6?](#how-to-import-and-export-components-using-react-and-es6)                                                                                                             |
| 73  | [What are the exceptions on React component naming?](#what-are-the-exceptions-on-react-component-naming)                                                                                                                         |
| 74  | [Is it possible to use async/await in plain React?](#is-it-possible-to-use-asyncawait-in-plain-react)                                                                                                                            |
| 75  | [What are the common folder structures for React?](#what-are-the-common-folder-structures-for-react)                                                                                                                             |
| 76  | [Wha

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[ToolJet/ToolJet]]></title>
            <link>https://github.com/ToolJet/ToolJet</link>
            <guid>https://github.com/ToolJet/ToolJet</guid>
            <pubDate>Sat, 29 Mar 2025 00:04:22 GMT</pubDate>
            <description><![CDATA[Low-code platform for building business applications. Connect to databases, cloud storages, GraphQL, API endpoints, Airtable, Google sheets, OpenAI, etc and build apps using drag and drop application builder. Built using JavaScript/TypeScript. 🚀]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ToolJet/ToolJet">ToolJet/ToolJet</a></h1>
            <p>Low-code platform for building business applications. Connect to databases, cloud storages, GraphQL, API endpoints, Airtable, Google sheets, OpenAI, etc and build apps using drag and drop application builder. Built using JavaScript/TypeScript. 🚀</p>
            <p>Language: JavaScript</p>
            <p>Stars: 35,202</p>
            <p>Forks: 4,519</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre>ToolJet is an **open-source low-code framework** to build and deploy internal tools with minimal engineering effort. ToolJet&#039;s drag-and-drop frontend builder allows you to create complex, responsive frontends within minutes. Additionally, you can integrate various data sources, including databases like PostgreSQL, MongoDB, and Elasticsearch; API endpoints with OpenAPI spec and OAuth2 support; SaaS tools such as Stripe, Slack, Google Sheets, Airtable, and Notion; as well as object storage services like S3, GCS, and Minio, to fetch and write data.

 :star: If you find ToolJet useful, please consider giving us a star on GitHub! Your support helps us continue to innovate and deliver exciting features.

![Docker Cloud Build Status](https://img.shields.io/docker/cloud/build/tooljet/tooljet-ce)
![Number of GitHub contributors](https://img.shields.io/github/contributors/tooljet/tooljet)
[![Number of GitHub issues that are open](https://img.shields.io/github/issues/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet/issues)
[![Number of GitHub stars](https://img.shields.io/github/stars/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet/stargazers)
![Number of GitHub closed issues](https://img.shields.io/github/issues-closed/tooljet/tooljet)
![Number of GitHub pull requests that are open](https://img.shields.io/github/issues-pr-raw/tooljet/tooljet)
![GitHub release; latest by date](https://img.shields.io/github/v/release/tooljet/tooljet)
![GitHub commit activity](https://img.shields.io/github/commit-activity/m/tooljet/tooljet)
[![GitHub license which is AGPL license](https://img.shields.io/github/license/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet)
[![Follow us on X, formerly Twitter](https://img.shields.io/twitter/follow/ToolJet?style=social)](https://twitter.com/ToolJet)

&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://user-images.githubusercontent.com/7828962/211444352-4d6d2e4a-13c9-4980-9e16-4aed4af9811b.png&quot; alt=&quot;Tooljet dashboard showing inventory and orders&quot;/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://github.com/ToolJet/ToolJet/assets/25361949/0e711f3a-edb7-496b-8833-107de3826933&quot;/&gt;
&lt;/p&gt;

## All features

- **Visual App Builder:** 45+ built-in responsive components, including Tables, Charts, Lists, Forms, and Progress Bars.
- **ToolJet Database:** Built-in no-code database.
- **Multi-Page:** Build an application with multiple pages.
- **Multiplayer editing:** Allows simultaneous app building by multiple developers.
- **50+ data sources:** Integrate with external databases, cloud storage, and APIs.
- **Desktop &amp; mobile:** Customize layout widths to fit various screen sizes.
- **Self-host:** Supports Docker, Kubernetes, AWS EC2, Google Cloud Run, and more.
- **Collaborate:** Add comments anywhere on the canvas and tag your team members.
- **Extend with plugins:** Use our [command-line tool](https://www.npmjs.com/package/@tooljet/cli) to easily bootstrap new connectors.
- **Version control:** Manage multiple application versions with a structured release cycle.
- **Run JS &amp; Python code:** Execute custom JavaScript and Python snippets.
- **Granular access control:** Set permissions at both group and app levels.
- **Low-code:** Use JS code almost anywhere within the builder, such as setting text color based on status with 
`status === &#039;success&#039; ? &#039;green&#039; : &#039;red&#039;`.
- **No-code query editors:** Query Editors are available for all supported data sources.
- **Join and transform data:** Transform query results using JavaScript or Python code.
- **Secure:** All the credentials are securely encrypted using `aes-256-gcm`.
- **Data Privacy:** ToolJet serves solely as a proxy and does not store data.
- **SSO:** Supports multiple Single Sign-On providers.

&lt;hr&gt;

## Quickstart
The easiest way to get started with ToolJet is by creating a [ToolJet Cloud](https://tooljet.ai) account. ToolJet Cloud offers a hosted solution of ToolJet. If you want to self-host ToolJet, kindly proceed to [deployment documentation](https://docs.tooljet.ai/docs/setup/).

### Try using Docker
Want to give ToolJet a quick spin on your local machine? You can run the following command from your terminal to have ToolJet up and running right away.


```bash
docker run \
  --name tooljet \
  --restart unless-stopped \
  -p 80:80 \
  --platform linux/amd64 \
  -v tooljet_data:/var/lib/postgresql/13/main \
  tooljet/try:ee-lts-latest
```

*For users upgrading their ToolJet version, we recommend choosing the LTS version over the latest version. The LTS version ensures stability with production bug fixes, security patches, and performance enhancements.*

## Tutorials and examples

[Time Tracker Application](https://docs.tooljet.ai/docs/#quickstart-guide)&lt;br&gt;
[Build your own CMS using low-code](https://blog.tooljet.ai/build-cms-using-lowcode-and-mongodb/)&lt;br&gt;
[AWS S3 Browser](https://blog.tooljet.ai/build-an-aws-s3-broswer-with-tooljet/)&lt;br&gt;

## Documentation
Documentation is available at https://docs.tooljet.ai.

- [Getting Started](https://docs.tooljet.ai)&lt;br&gt;
- [Data source Reference](https://docs.tooljet.ai/docs/data-sources/airtable/)&lt;br&gt;
- [Component Reference](https://docs.tooljet.ai/docs/widgets/button)

## Self-hosted
You can use ToolJet Cloud for a fully managed solution. If you want to self-host ToolJet, we have guides on deploying ToolJet on Kubernetes, AWS EC2, Docker, and more.

| Provider  | Documentation |
| :------------- | :------------- |
| Digital Ocean | [Link](https://docs.tooljet.ai/docs/setup/digitalocean)  |
| Docker  | [Link](https://docs.tooljet.ai/docs/setup/docker)   |
| AWS EC2 | [Link](https://docs.tooljet.ai/docs/setup/ec2)  |
| AWS ECS | [Link](https://docs.tooljet.ai/docs/setup/ecs)   |
| OpenShift | [Link](https://docs.tooljet.ai/docs/setup/openshift)   |
| Helm | [Link](https://docs.tooljet.ai/docs/setup/helm)   |
| AWS EKS (Kubernetes) | [Link](https://docs.tooljet.ai/docs/setup/kubernetes)   |
| GCP GKE (Kubernetes) | [Link](https://docs.tooljet.ai/docs/setup/kubernetes-gke)   |
| Azure AKS (Kubernetes) | [Link](https://docs.tooljet.ai/docs/setup/kubernetes-aks)   |
| Azure Container | [Link](https://docs.tooljet.ai/docs/setup/azure-container)   |
| Google Cloud Run  | [Link](https://docs.tooljet.ai/docs/setup/google-cloud-run)   |
| Deploying ToolJet client  | [Link](https://docs.tooljet.ai/docs/setup/client)   |
| Deploying ToolJet on a Subpath  | [Link](https://docs.tooljet.ai/docs/setup/tooljet-subpath/)   |

## Marketplace 
ToolJet can now be found on both AWS and Azure Marketplaces, making it simpler than ever to access and deploy our app-building platform.

Find ToolJet on AWS Marketplace [here](https://aws.amazon.com/marketplace/pp/prodview-fxjto27jkpqfg?sr=0-1&amp;ref_=beagle&amp;applicationId=AWSMPContessa) and explore seamless integration on Azure Marketplace [here](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/tooljetsolutioninc1679496832216.tooljet?tab=Overview).

## Community support
For general help using ToolJet, please refer to the official [documentation](https://docs.tooljet.ai/docs/). For additional help, you can use one of these channels to ask a question:

- [Slack](https://tooljet.ai/slack) - Discussions with the community and the team.
- [GitHub](https://github.com/ToolJet/ToolJet/issues) - For bug reports and feature requests.
- [𝕏 (Twitter)](https://twitter.com/ToolJet) - Get the product updates quickly.

## Roadmap
Check out our [roadmap](https://github.com/orgs/ToolJet/projects/15) to stay updated on recently released features and learn about what&#039;s coming next.

## Branching model
We use the git-flow branching model. The base branch is `develop`. If you are looking for a stable version, please use the main branch or tags labeled as v1.x.x.

## Contributing
Kindly read our [Contributing Guide](CONTRIBUTING.md) to familiarize yourself with ToolJet&#039;s development process, how to suggest bug fixes and improvements, and the steps for building and testing your changes. &lt;br&gt;

## Contributors
&lt;a href=&quot;https://github.com/tooljet/tooljet/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=tooljet/tooljet&amp;max=400&amp;columns=20&quot; /&gt;
  &lt;img src=&quot;https://us-central1-tooljet-hub.cloudfunctions.net/github&quot; width=&quot;0&quot; height=&quot;0&quot; /&gt;
&lt;/a&gt;

## License
ToolJet © 2023, ToolJet Solutions Inc - Released under the GNU Affero General Public License v3.0.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[fchollet/ARC-AGI]]></title>
            <link>https://github.com/fchollet/ARC-AGI</link>
            <guid>https://github.com/fchollet/ARC-AGI</guid>
            <pubDate>Sat, 29 Mar 2025 00:04:21 GMT</pubDate>
            <description><![CDATA[The Abstraction and Reasoning Corpus]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/fchollet/ARC-AGI">fchollet/ARC-AGI</a></h1>
            <p>The Abstraction and Reasoning Corpus</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,336</p>
            <p>Forks: 652</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre># Abstraction and Reasoning Corpus for Artificial General Intelligence (ARC-AGI)

This repository contains the ARC-AGI task data, as well as a browser-based interface for humans to try their hand at solving the tasks manually.

*&quot;ARC can be seen as a general artificial intelligence benchmark, as a program synthesis benchmark, or as a psychometric intelligence test. It is targeted at both humans and artificially intelligent systems that aim at emulating a human-like form of general fluid intelligence.&quot;*

A complete description of the dataset, its goals, and its underlying logic, can be found in: [On the Measure of Intelligence](https://arxiv.org/abs/1911.01547).

As a reminder, a test-taker is said to solve a task when, upon seeing the task for the first time, they are able to produce the correct output grid for *all* test inputs in the task (this includes picking the dimensions of the output grid). For each test input, the test-taker is allowed 3 trials (this holds for all test-takers, either humans or AI).


## Task file format

The `data` directory contains two subdirectories:

- `data/training`: contains the task files for training (400 tasks). Use these to prototype your algorithm or to train your algorithm to acquire ARC-relevant cognitive priors.
- `data/evaluation`: contains the task files for evaluation (400 tasks). Use these to evaluate your final algorithm. To ensure fair evaluation results, do not leak information from the evaluation set into your algorithm (e.g. by looking at the evaluation tasks yourself during development, or by repeatedly modifying an algorithm while using its evaluation score as feedback).

The tasks are stored in JSON format. Each task JSON file contains a dictionary with two fields:

- `&quot;train&quot;`: demonstration input/output pairs. It is a list of &quot;pairs&quot; (typically 3 pairs).
- `&quot;test&quot;`: test input/output pairs. It is a list of &quot;pairs&quot; (typically 1 pair).

A &quot;pair&quot; is a dictionary with two fields:

- `&quot;input&quot;`: the input &quot;grid&quot; for the pair.
- `&quot;output&quot;`: the output &quot;grid&quot; for the pair.

A &quot;grid&quot; is a rectangular matrix (list of lists) of integers between 0 and 9 (inclusive). The smallest possible grid size is 1x1 and the largest is 30x30.

When looking at a task, a test-taker has access to inputs &amp; outputs of the demonstration pairs, plus the input(s) of the test pair(s). The goal is to construct the output grid(s) corresponding to the test input grid(s), using 3 trials for each test input. &quot;Constructing the output grid&quot; involves picking the height and width of the output grid, then filling each cell in the grid with a symbol (integer between 0 and 9, which are visualized as colors). Only *exact* solutions (all cells match the expected answer) can be said to be correct.


## Usage of the testing interface

The testing interface is located at `apps/testing_interface.html`. Open it in a web browser (Chrome recommended). It will prompt you to select a task JSON file.

After loading a task, you will enter the test space, which looks like this:

![test space](https://arc-benchmark.s3.amazonaws.com/figs/arc_test_space.png)

On the left, you will see the input/output pairs demonstrating the nature of the task. In the middle, you will see the current test input grid. On the right, you will see the controls you can use to construct the corresponding output grid.

You have access to the following tools:

### Grid controls

- Resize: input a grid size (e.g. &quot;10x20&quot; or &quot;4x4&quot;) and click &quot;Resize&quot;. This preserves existing grid content (in the top left corner).
- Copy from input: copy the input grid to the output grid. This is useful for tasks where the output consists of some modification of the input.
- Reset grid: fill the grid with 0s.

### Symbol controls

- Edit: select a color (symbol) from the color picking bar, then click on a cell to set its color.
- Select: click and drag on either the output grid or the input grid to select cells.
    - After selecting cells on the output grid, you can select a color from the color picking to set the color of the selected cells. This is useful to draw solid rectangles or lines.
    - After selecting cells on either the input grid or the output grid, you can press C to copy their content. After copying, you can select a cell on the output grid and press &quot;V&quot; to paste the copied content. You should select the cell in the top left corner of the zone you want to paste into.
- Floodfill: click on a cell from the output grid to color all connected cells to the selected color. &quot;Connected cells&quot; are contiguous cells with the same color.

### Answer validation

When your output grid is ready, click the green &quot;Submit!&quot; button to check your answer. We do not enforce the 3-trials rule.

After you&#039;ve obtained the correct answer for the current test input grid, you can switch to the next test input grid for the task using the &quot;Next test input&quot; button (if there is any available; most tasks only have one test input).

When you&#039;re done with a task, use the &quot;load task&quot; button to open a new task.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[gaotianliuyun/gao]]></title>
            <link>https://github.com/gaotianliuyun/gao</link>
            <guid>https://github.com/gaotianliuyun/gao</guid>
            <pubDate>Sat, 29 Mar 2025 00:04:20 GMT</pubDate>
            <description><![CDATA[FongMi影视和tvbox配置文件，如果喜欢，请Fork自用。使用前请仔细阅读仓库说明，一旦使用将被视为你已了解。]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/gaotianliuyun/gao">gaotianliuyun/gao</a></h1>
            <p>FongMi影视和tvbox配置文件，如果喜欢，请Fork自用。使用前请仔细阅读仓库说明，一旦使用将被视为你已了解。</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,410</p>
            <p>Forks: 2,483</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre>FongMi影视、TVBox、猫影视配置文件。所有资源均来自于各路大神无私分享，如有侵权，请联系删除。

所有以任何方式查看本仓库内容的人、或直接或间接使用本仓库内容的使用者都应仔细阅读此声明。本仓库管理者保留随时更改或补充此免责声明的权利。一旦使用、复制、修改了本仓库内容，则视为您已接受此免责声明。

本仓库管理者不能保证本仓库内容的合法性、准确性、完整性和有效性，请根据情况自行判断。本仓库内容，仅用于测试和学习研究，禁止用于商业用途，不得将其用于违反国家、地区、组织等的法律法规或相关规定的其他用途，禁止任何公众号、自媒体进行任何形式的转载、发布，请不要在中华人民共和国境内使用本仓库内容，否则后果自负。

本仓库内容中涉及的第三方硬件、软件等，与本仓库内容没有任何直接或间接的关系。本仓库内容仅对部署和使用过程进行客观描述，不代表支持使用任何第三方硬件、软件。使用任何第三方硬件、软件，所造成的一切后果由使用的个人或组织承担，与本仓库内容无关。

所有直接或间接使用本仓库内容的个人和组织，应 24 小时内完成学习和研究，并及时删除本仓库内容。如对本仓库内容的功能有需求，应自行开发相关功能。所有基于本仓库内容的源代码，进行的任何修改，为其他个人或组织的自发行为，与本仓库内容没有任何直接或间接的关系，所造成的一切后果亦与本仓库内容和本仓库管理者无关。


1. tvbox配置：

（1）0707.json  Fengmi影视多线配置接口,仅适用于Fengmi影视；

（2）0821.json  在饭太硬配置的基础上添加了若干优质点播源、直播线路和解析；

（3）0825.json  jar包来源于Panda Groove的jar，PG网盘的用法请看https://github.com/gaotianliuyun/gao/blob/gaotianliuyun-patch-1/README.md ；

（4）0826.json  完全来源于饭太硬的jar包和配置；

（5）0827.json  jar包和配置来源于fongmi；

（6）js.json  jar包来源于Panda Groove的go包，资源来源于道长drpy(js)仓库；

（7）XYQ.json  XYQ源，jar包和配置来源于香雅情；

（8）/cat/js/config_open.json  cat源，资源暂停更新，如果有能力的大佬愿意发电，请联系我。

2. APP推荐:

（1）FongMi版本  项目地址：https://github.com/FongMi/TV 支持直播多线路、自动换源、直播倍速，手机投屏；

（2）q215613905版本  项目地址：https://github.com/q215613905/TVBoxOS 支持直播回放；

（3）takagen99版本  项目地址：https://github.com/takagen99/Box 支持直播回放，界面美观；

（4）猫影视   项目地址：https://github.com/catvod/CatVodOpen 界面简洁，支持多平台。

3. TVBox各路大佬配置（排名不分先后）：

（1）饭太硬：http://www.饭太硬.top/tv/

（2）okjack：https://jihulab.com/okcaptain/kko/raw/main/ok.txt

（3）王二小放牛娃：http://tvbox.王二小放牛娃.xyz

（4）摸鱼儿：http://我不是.摸鱼儿.top

（5）霜辉月明py：https://999740.xyz/raw.githubusercontent.com/lm317379829/PyramidStore/pyramid/py.json

（6）小米小爆脾气：http://xhww.fun/小米/DEMO.json

（7）南风：https://agit.ai/Yoursmile7/TVBox/raw/branch/master/XC.json

（8）神器：https://神器每日推送.tk/pz.json

（9）巧技：http://pandown.pro/tvbox/tvbox.json

（10）Ray：https://100km.top/0

（11）俊于：http://home.jundie.top:81/top98.json

4. 随机轮换壁纸：

（1）https://jianbian.chuqiuyu.workers.dev 自制极简渐变壁纸

（2）http://www.kf666888.cn/api/tvbox/img

（3）https://picsum.photos/1280/720/?blur=10

（4）http://刚刚.live/图 

（5）http://饭.eu.org/深色壁纸/api.php,

（6）https://www.dmoe.cc/random.php

（7）https://api.btstu.cn/sjbz/zsy.php

（8）https://api.btstu.cn/sjbz/?lx=dongman

（9）http://api.btstu.cn/sjbz/?lx=meizi

（10）http://api.btstu.cn/sjbz/?lx=suiji

（11）https://pictures.catvod.eu.org/

（12）https://bing.img.run/rand.php

自用仓库，如果喜欢，请Fork自用，谢谢！

尽自己所能更新，不保证配置的有效性和时效性。

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[bia-pain-bache/BPB-Worker-Panel]]></title>
            <link>https://github.com/bia-pain-bache/BPB-Worker-Panel</link>
            <guid>https://github.com/bia-pain-bache/BPB-Worker-Panel</guid>
            <pubDate>Sat, 29 Mar 2025 00:04:19 GMT</pubDate>
            <description><![CDATA[A GUI Panel providing Worker subscriptions for VLESS, Trojan and Warp configs alongside chain proxies, offering full DNS, clean IP, Fragment, Warp, Warp pro and routing settings for cross-platform clients using Amnezia, Wireguard, Sing-box, Clash/Mihomo and Xray cores.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/bia-pain-bache/BPB-Worker-Panel">bia-pain-bache/BPB-Worker-Panel</a></h1>
            <p>A GUI Panel providing Worker subscriptions for VLESS, Trojan and Warp configs alongside chain proxies, offering full DNS, clean IP, Fragment, Warp, Warp pro and routing settings for cross-platform clients using Amnezia, Wireguard, Sing-box, Clash/Mihomo and Xray cores.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,914</p>
            <p>Forks: 30,915</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;💦 BPB Panel&lt;/h1&gt;

### 🌏 Readme in [Farsi](README_fa.md)

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;docs/assets/images/Panel.jpg&quot;&gt;
&lt;/p&gt;
&lt;br&gt;

## Introduction
This project is dedicated to developing a user panel for the [Cloudflare-workers/pages proxy script](https://github.com/yonggekkk/Cloudflare-workers-pages-vless) created by [yonggekkk](https://github.com/yonggekkk). The panel offers two deployment options: 
- **Worker** deployment
- **Pages** deployment
&lt;br&gt;

🌟 If you found **BPB Panel** valuable, Your donations make all the difference 🌟
- **USDT (BEP20):** `0x111EFF917E7cf4b0BfC99Edffd8F1AbC2b23d158`

## Features

1. **Free**: No cost involved.
2. **User-Friendly Panel:** Designed for easy navigation, configuration and usage.
3. **Protocols:** Provides VLESS, Trojan and Wireguard (Warp) protocols.
4. **Warp Pro configs:** Optimized Warp for crucial circumstances.
5. **Support Fragment:** Supports Fragment functionality for crucial network situations.
6. **Full routing rules:** Bypassing Iran/China/Russia and LAN, Blocking QUIC, Porn, Ads, Malwares, Phishing...
7. **Chain Proxy:** Capable of adding a chain proxy to fix IP.
8. **Supports Wide Range of Clients:** Offers subscription links for Xray, Sing-box and Clash core clients.
9. **Password-Protected Panel:** Secure your panel with password protection.
10. **Fully customizable:** Ability to use online scanner and setting up clean IP-domains, Proxy IP, setting DNS servers, choosing ports and protocols, Warp endpoints...
&lt;br&gt;

## How to use:
- [Installation (Pages - New recommended method)](docs/pages_upload_installation_fa.md)

- [Installation (Pages)](docs/pages_installation_fa.md)

- [Installation (Worker)](docs/worker_installation_fa.md)

- [How to use](docs/configuration_fa.md)

- [FAQ](docs/faq.md)
&lt;br&gt;

## Supported Clients
| Client  | Version | Fragment | Warp Pro |
| :-------------: | :-------------: | :-------------: | :-------------: |
| **v2rayNG**  | 1.9.33 or higher  | :heavy_check_mark: | :heavy_check_mark: |
| **v2rayN**  | 7.8.3 or higher  | :heavy_check_mark: | :heavy_check_mark: |
| **v2rayN-PRO**  | 1.8 or higher  | :heavy_check_mark: | :heavy_check_mark: |
| **Husi**  |   | :x: | :x: |
| **Sing-box**  | 1.11.2 or higher  | :x: | :x: |
| **Streisand**  | 1.6.48 or higher  | :heavy_check_mark: | :heavy_check_mark: |
| **V2Box**  |   | :x: | :x: |
| **Shadowrocket**  |   | :x: | :x: |
| **Nekoray**  |   | :heavy_check_mark: | :x: |
| **Hiddify**  | 2.5.7 or higher  | :heavy_check_mark: | :heavy_check_mark: |
| **NikaNG**  |   | :heavy_check_mark: | :heavy_check_mark: |
| **Clash Meta**  |   | :x: | :x: |
| **Clash Verge Rev**  |   | :x: | :x: |
| **FLClash**  |   | :x: | :x: |

## Environment variables
| Variable  | Usage |
| :-------------: | :-------------: |
| **UUID**  | VLESS UUID  |
| **TR_PASS**  | Trojan Password  |
| **PROXYIP**  | Proxy IP or domain (VLESS, Trojan)  |
| **SUB_PATH**  | Subscriptions&#039; URI  |
| **FALLBACK**  | Fallback domain (VLESS, Trojan) |
| **DOH_URL**  | Core DOH |

---

## Stargazers Over Time
[![Stargazers Over Time](https://starchart.cc/bia-pain-bache/BPB-Worker-Panel.svg?variant=adaptive)](https://starchart.cc/bia-pain-bache/BPB-Worker-Panel)

---

### Special Thanks
- CF-vless code author [3Kmfi6HP](https://github.com/3Kmfi6HP/EDtunnel)
- CF preferred IP program author [badafans](https://github.com/badafans/Cloudflare-IP-SpeedTest), [XIU2](https://github.com/XIU2/CloudflareSpeedTest)

---

For a detailed tutorial on the core script, please refer to [Yongge’s blog and video tutorials](https://ygkkk.blogspot.com/2023/07/cfworkers-vless.html).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[trekhleb/javascript-algorithms]]></title>
            <link>https://github.com/trekhleb/javascript-algorithms</link>
            <guid>https://github.com/trekhleb/javascript-algorithms</guid>
            <pubDate>Sat, 29 Mar 2025 00:04:18 GMT</pubDate>
            <description><![CDATA[📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/trekhleb/javascript-algorithms">trekhleb/javascript-algorithms</a></h1>
            <p>📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings</p>
            <p>Language: JavaScript</p>
            <p>Stars: 190,751</p>
            <p>Forks: 30,591</p>
            <p>Stars today: 34 stars today</p>
            <h2>README</h2><pre># JavaScript Algorithms and Data Structures

&gt; 🇺🇦 UKRAINE [IS BEING ATTACKED](https://war.ukraine.ua/) BY RUSSIAN ARMY. CIVILIANS ARE GETTING KILLED. RESIDENTIAL AREAS ARE GETTING BOMBED.
&gt; - Help Ukraine via:
&gt;   - [Serhiy Prytula Charity Foundation](https://prytulafoundation.org/en/)
&gt;   - [Come Back Alive Charity Foundation](https://savelife.in.ua/en/donate-en/)
&gt;   - [National Bank of Ukraine](https://bank.gov.ua/en/news/all/natsionalniy-bank-vidkriv-spetsrahunok-dlya-zboru-koshtiv-na-potrebi-armiyi)
&gt; - More info on [war.ukraine.ua](https://war.ukraine.ua/) and [MFA of Ukraine](https://twitter.com/MFA_Ukraine)

&lt;hr/&gt;

[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)
[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)
![repo size](https://img.shields.io/github/repo-size/trekhleb/javascript-algorithms.svg)

This repository contains JavaScript based examples of many
popular algorithms and data structures.

Each algorithm and data structure has its own separate README
with related explanations and links for further reading (including ones
to YouTube videos).

_Read this in other languages:_
[_简体中文_](README.zh-CN.md),
[_繁體中文_](README.zh-TW.md),
[_한국어_](README.ko-KR.md),
[_日本語_](README.ja-JP.md),
[_Polski_](README.pl-PL.md),
[_Français_](README.fr-FR.md),
[_Español_](README.es-ES.md),
[_Português_](README.pt-BR.md),
[_Русский_](README.ru-RU.md),
[_Türkçe_](README.tr-TR.md),
[_Italiano_](README.it-IT.md),
[_Bahasa Indonesia_](README.id-ID.md),
[_Українська_](README.uk-UA.md),
[_Arabic_](README.ar-AR.md),
[_Tiếng Việt_](README.vi-VN.md),
[_Deutsch_](README.de-DE.md),
[_Uzbek_](README.uz-UZ.md),
[_עברית_](README.he-IL.md)

*☝ Note that this project is meant to be used for learning and researching purposes
only, and it is **not** meant to be used for production.*

## Data Structures

A data structure is a particular way of organizing and storing data in a computer so that it can
be accessed and modified efficiently. More precisely, a data structure is a collection of data
values, the relationships among them, and the functions or operations that can be applied to
the data.

Remember that each data has its own trade-offs. And you need to pay attention more to why you&#039;re choosing a certain data structure than to how to implement it.

`B` - Beginner, `A` - Advanced

* `B` [Linked List](src/data-structures/linked-list)
* `B` [Doubly Linked List](src/data-structures/doubly-linked-list)
* `B` [Queue](src/data-structures/queue)
* `B` [Stack](src/data-structures/stack)
* `B` [Hash Table](src/data-structures/hash-table)
* `B` [Heap](src/data-structures/heap) - max and min heap versions
* `B` [Priority Queue](src/data-structures/priority-queue)
* `A` [Trie](src/data-structures/trie)
* `A` [Tree](src/data-structures/tree)
  * `A` [Binary Search Tree](src/data-structures/tree/binary-search-tree)
  * `A` [AVL Tree](src/data-structures/tree/avl-tree)
  * `A` [Red-Black Tree](src/data-structures/tree/red-black-tree)
  * `A` [Segment Tree](src/data-structures/tree/segment-tree) - with min/max/sum range queries examples
  * `A` [Fenwick Tree](src/data-structures/tree/fenwick-tree) (Binary Indexed Tree)
* `A` [Graph](src/data-structures/graph) (both directed and undirected)
* `A` [Disjoint Set](src/data-structures/disjoint-set) - a union–find data structure or merge–find set
* `A` [Bloom Filter](src/data-structures/bloom-filter)
* `A` [LRU Cache](src/data-structures/lru-cache/) - Least Recently Used (LRU) cache

## Algorithms

An algorithm is an unambiguous specification of how to solve a class of problems. It is
a set of rules that precisely define a sequence of operations.

`B` - Beginner, `A` - Advanced

### Algorithms by Topic

* **Math**
  * `B` [Bit Manipulation](src/algorithms/math/bits) - set/get/update/clear bits, multiplication/division by two, make negative etc.
  * `B` [Binary Floating Point](src/algorithms/math/binary-floating-point) - binary representation of the floating-point numbers.
  * `B` [Factorial](src/algorithms/math/factorial)
  * `B` [Fibonacci Number](src/algorithms/math/fibonacci) - classic and closed-form versions
  * `B` [Prime Factors](src/algorithms/math/prime-factors) - finding prime factors and counting them using Hardy-Ramanujan&#039;s theorem
  * `B` [Primality Test](src/algorithms/math/primality-test) (trial division method)
  * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)
  * `B` [Least Common Multiple](src/algorithms/math/least-common-multiple) (LCM)
  * `B` [Sieve of Eratosthenes](src/algorithms/math/sieve-of-eratosthenes) - finding all prime numbers up to any given limit
  * `B` [Is Power of Two](src/algorithms/math/is-power-of-two) - check if the number is power of two (naive and bitwise algorithms)
  * `B` [Pascal&#039;s Triangle](src/algorithms/math/pascal-triangle)
  * `B` [Complex Number](src/algorithms/math/complex-number) - complex numbers and basic operations with them
  * `B` [Radian &amp; Degree](src/algorithms/math/radian) - radians to degree and backwards conversion
  * `B` [Fast Powering](src/algorithms/math/fast-powering)
  * `B` [Horner&#039;s method](src/algorithms/math/horner-method) - polynomial evaluation
  * `B` [Matrices](src/algorithms/math/matrix) - matrices and basic matrix operations (multiplication, transposition, etc.)
  * `B` [Euclidean Distance](src/algorithms/math/euclidean-distance) - distance between two points/vectors/matrices
  * `A` [Integer Partition](src/algorithms/math/integer-partition)
  * `A` [Square Root](src/algorithms/math/square-root) - Newton&#039;s method
  * `A` [Liu Hui π Algorithm](src/algorithms/math/liu-hui) - approximate π calculations based on N-gons
  * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - decompose a function of time (a signal) into the frequencies that make it up
* **Sets**
  * `B` [Cartesian Product](src/algorithms/sets/cartesian-product) - product of multiple sets
  * `B` [Fisher–Yates Shuffle](src/algorithms/sets/fisher-yates) - random permutation of a finite sequence
  * `A` [Power Set](src/algorithms/sets/power-set) - all subsets of a set (bitwise, backtracking, and cascading solutions)
  * `A` [Permutations](src/algorithms/sets/permutations) (with and without repetitions)
  * `A` [Combinations](src/algorithms/sets/combinations) (with and without repetitions)
  * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS)
  * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence)
  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence) (SCS)
  * `A` [Knapsack Problem](src/algorithms/sets/knapsack-problem) - &quot;0/1&quot; and &quot;Unbound&quot; ones
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray) - &quot;Brute Force&quot; and &quot;Dynamic Programming&quot; (Kadane&#039;s) versions
  * `A` [Combination Sum](src/algorithms/sets/combination-sum) - find all combinations that form specific sum
* **Strings**
  * `B` [Hamming Distance](src/algorithms/string/hamming-distance) - number of positions at which the symbols are different
  * `B` [Palindrome](src/algorithms/string/palindrome) - check if the string is the same in reverse
  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - minimum edit distance between two sequences
  * `A` [Knuth–Morris–Pratt Algorithm](src/algorithms/string/knuth-morris-pratt) (KMP Algorithm) - substring search (pattern matching)
  * `A` [Z Algorithm](src/algorithms/string/z-algorithm) - substring search (pattern matching)
  * `A` [Rabin Karp Algorithm](src/algorithms/string/rabin-karp) - substring search
  * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring)
  * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching)
* **Searches**
  * `B` [Linear Search](src/algorithms/search/linear-search)
  * `B` [Jump Search](src/algorithms/search/jump-search) (or Block Search) - search in sorted array
  * `B` [Binary Search](src/algorithms/search/binary-search) - search in sorted array
  * `B` [Interpolation Search](src/algorithms/search/interpolation-search) - search in uniformly distributed sorted array
* **Sorting**
  * `B` [Bubble Sort](src/algorithms/sorting/bubble-sort)
  * `B` [Selection Sort](src/algorithms/sorting/selection-sort)
  * `B` [Insertion Sort](src/algorithms/sorting/insertion-sort)
  * `B` [Heap Sort](src/algorithms/sorting/heap-sort)
  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)
  * `B` [Quicksort](src/algorithms/sorting/quick-sort) - in-place and non-in-place implementations
  * `B` [Shellsort](src/algorithms/sorting/shell-sort)
  * `B` [Counting Sort](src/algorithms/sorting/counting-sort)
  * `B` [Radix Sort](src/algorithms/sorting/radix-sort)
  * `B` [Bucket Sort](src/algorithms/sorting/bucket-sort)
* **Linked Lists**
  * `B` [Straight Traversal](src/algorithms/linked-list/traversal)
  * `B` [Reverse Traversal](src/algorithms/linked-list/reverse-traversal)
* **Trees**
  * `B` [Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)
  * `B` [Breadth-First Search](src/algorithms/tree/breadth-first-search) (BFS)
* **Graphs**
  * `B` [Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)
  * `B` [Breadth-First Search](src/algorithms/graph/breadth-first-search) (BFS)
  * `B` [Kruskal’s Algorithm](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - finding the shortest paths to all graph vertices from single vertex
  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - finding the shortest paths to all graph vertices from single vertex
  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - find the shortest paths between all pairs of vertices
  * `A` [Detect Cycle](src/algorithms/graph/detect-cycle) - for both directed and undirected graphs (DFS and Disjoint Set based versions)
  * `A` [Prim’s Algorithm](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Topological Sorting](src/algorithms/graph/topological-sorting) - DFS method
  * `A` [Articulation Points](src/algorithms/graph/articulation-points) - Tarjan&#039;s algorithm (DFS based)
  * `A` [Bridges](src/algorithms/graph/bridges) - DFS based algorithm
  * `A` [Eulerian Path and Eulerian Circuit](src/algorithms/graph/eulerian-path) - Fleury&#039;s algorithm - Visit every edge exactly once
  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once
  * `A` [Strongly Connected Components](src/algorithms/graph/strongly-connected-components) - Kosaraju&#039;s algorithm
  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city
* **Cryptography**
  * `B` [Polynomial Hash](src/algorithms/cryptography/polynomial-hash) - rolling hash function based on polynomial
  * `B` [Rail Fence Cipher](src/algorithms/cryptography/rail-fence-cipher) - a transposition cipher algorithm for encoding messages
  * `B` [Caesar Cipher](src/algorithms/cryptography/caesar-cipher) - simple substitution cipher
  * `B` [Hill Cipher](src/algorithms/cryptography/hill-cipher) - substitution cipher based on linear algebra
* **Machine Learning**
  * `B` [NanoNeuron](https://github.com/trekhleb/nano-neuron) - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)
  * `B` [k-NN](src/algorithms/ml/knn) - k-nearest neighbors classification algorithm
  * `B` [k-Means](src/algorithms/ml/k-means) - k-Means clustering algorithm
* **Image Processing**
  * `B` [Seam Carving](src/algorithms/image-processing/seam-carving) - content-aware image resizing algorithm
* **Statistics**
  * `B` [Weighted Random](src/algorithms/statistics/weighted-random) - select the random item from the list based on items&#039; weights
* **Evolutionary algorithms**
  * `A` [Genetic algorithm](https://github.com/trekhleb/self-parking-car-evolution) - example of how the genetic algorithm may be applied for training the self-parking cars
* **Uncategorized**
  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)
  * `B` [Square Matrix Rotation](src/algorithms/uncategorized/square-matrix-rotation) - in-place algorithm
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game) - backtracking, dynamic programming (top-down + bottom-up) and greedy examples
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths) - backtracking, dynamic programming and Pascal&#039;s Triangle based examples
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem (dynamic programming and brute force versions)
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach to the top (4 solutions)
  * `B` [Best Time To Buy Sell Stocks](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - divide and conquer and one-pass examples
  * `B` [Valid Parentheses](src/algorithms/stack/valid-parentheses) - check if a string has valid parentheses (using stack)
  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)
  * `A` [Knight&#039;s Tour](src/algorithms/uncategorized/knight-tour)

### Algorithms by Paradigm

An algorithmic paradigm is a generic method or approach which underlies the design of a class
of algorithms. It is an abstraction higher than the notion of an algorithm, just as an
algorithm is an abstraction higher than a computer program.

* **Brute Force** - look at all the possibilities and selects the best solution
  * `B` [Linear Search](src/algorithms/search/linear-search)
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach the top
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city
  * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - decompose a function of time (a signal) into the frequencies that make it up
* **Greedy** - choose the best option at the current time, without any consideration for the future
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `A` [Unbound Knapsack Problem](src/algorithms/sets/knapsack-problem)
  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - finding the shortest path to all graph vertices
  * `A` [Prim’s Algorithm](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Kruskal’s Algorithm](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph
* **Divide and Conquer** - divide the problem into smaller parts and then solve those parts
  * `B` [Binary Search](src/algorithms/search/binary-search)
  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)
  * `B` [Pascal&#039;s Triangle](src/algorithms/math/pascal-triangle)
  * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)
  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)
  * `B` [Quicksort](src/algorithms/sorting/quick-sort)
  * `B` [Tree Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)
  * `B` [Graph Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)
  * `B` [Matrices](src/algorithms/math/matrix) - generating and traversing the matrices of different shapes
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Fast Powering](src/algorithms/math/fast-powering)
  * `B` [Best Time To Buy Sell Stocks](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - divide and conquer and one-pass examples
  * `A` [Permutations](src/algorithms/sets/permutations) (with and without repetitions)
  * `A` [Combinations](src/algorithms/sets/combinations) (with and without repetitions)
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
* **Dynamic Programming** - build up a solution using previously found sub-solutions
  * `B` [Fibonacci Number](src/algorithms/math/fibonacci)
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach the top
  * `B` [Seam Carving](src/algorithms/image-processing/seam-carving) - content-aware image resizing algorithm
  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - minimum edit distance between two sequences
  * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS)
  * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring)
  * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence)
  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence)
  * `A` [0/1 Knapsack Problem](src/algorithms/sets/knapsack-problem)
  * `A` [Integer Partition](src/algorithms/math/integer-partition)
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - finding the shortest path to all graph vertices
  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - find the shortest paths between all pairs of vertices
  * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching)
* **Backtracking** - similarly to brute force, try to generate all possible solutions, but each time you generate the next solution, you test
if it satisfies all conditions and only then continue generating subsequent solutions. Otherwise, backtrack and go on a
different path to finding a solution. Normally the DFS traversal of state-space is being used.
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)
  * `B` [Power Set](src/algorithms/sets/power-set) - all subsets of a set
  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once
  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)
  * `A` [Knight&#039;s Tour](src/algorithms/uncategorized/knight-tour)
  * `A` [Combination Sum](src/algorithms/sets/combination-sum) - find all combinations that form specific sum
* **Branch &amp; Bound** - remember the lowest-cost solution found at each stage of the backtracking
search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of
a least-cost solution to the problem in order to discard partial solutions with costs larger than the
lowest-cost solution found so far. Normally, BFS traversal in combination with DFS traversal of state-space
tree is being used.

## How to use this repository

**Install all dependencies**

```
npm install
```

**Run ESLint**

You may want to run it to check code quality.

```
npm run lint
```

**Run all tests**

```
npm test
```

**Run tests by name**

```
npm test -- &#039;LinkedList&#039;
```

**Troubleshooting**

If linting or testing is failing, try to delete the `node_modules` folder and re-install npm packages:

```
rm -rf ./node_modules
npm i
```

Also, make sure that you&#039;re using the correct Node version (`&gt;=16`). If you&#039;re using [nvm](https://github.com/nvm-sh/nvm) for Node version management you may run `nvm use` from the root folde

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[ryanmcdermott/clean-code-javascript]]></title>
            <link>https://github.com/ryanmcdermott/clean-code-javascript</link>
            <guid>https://github.com/ryanmcdermott/clean-code-javascript</guid>
            <pubDate>Sat, 29 Mar 2025 00:04:17 GMT</pubDate>
            <description><![CDATA[Clean Code concepts adapted for JavaScript]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ryanmcdermott/clean-code-javascript">ryanmcdermott/clean-code-javascript</a></h1>
            <p>Clean Code concepts adapted for JavaScript</p>
            <p>Language: JavaScript</p>
            <p>Stars: 92,701</p>
            <p>Forks: 12,403</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre># clean-code-javascript

## Table of Contents

1. [Introduction](#introduction)
2. [Variables](#variables)
3. [Functions](#functions)
4. [Objects and Data Structures](#objects-and-data-structures)
5. [Classes](#classes)
6. [SOLID](#solid)
7. [Testing](#testing)
8. [Concurrency](#concurrency)
9. [Error Handling](#error-handling)
10. [Formatting](#formatting)
11. [Comments](#comments)
12. [Translation](#translation)

## Introduction

![Humorous image of software quality estimation as a count of how many expletives
you shout when reading code](https://www.osnews.com/images/comics/wtfm.jpg)

Software engineering principles, from Robert C. Martin&#039;s book
[_Clean Code_](https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882),
adapted for JavaScript. This is not a style guide. It&#039;s a guide to producing
[readable, reusable, and refactorable](https://github.com/ryanmcdermott/3rs-of-software-architecture) software in JavaScript.

Not every principle herein has to be strictly followed, and even fewer will be
universally agreed upon. These are guidelines and nothing more, but they are
ones codified over many years of collective experience by the authors of
_Clean Code_.

Our craft of software engineering is just a bit over 50 years old, and we are
still learning a lot. When software architecture is as old as architecture
itself, maybe then we will have harder rules to follow. For now, let these
guidelines serve as a touchstone by which to assess the quality of the
JavaScript code that you and your team produce.

One more thing: knowing these won&#039;t immediately make you a better software
developer, and working with them for many years doesn&#039;t mean you won&#039;t make
mistakes. Every piece of code starts as a first draft, like wet clay getting
shaped into its final form. Finally, we chisel away the imperfections when
we review it with our peers. Don&#039;t beat yourself up for first drafts that need
improvement. Beat up the code instead!

## **Variables**

### Use meaningful and pronounceable variable names

**Bad:**

```javascript
const yyyymmdstr = moment().format(&quot;YYYY/MM/DD&quot;);
```

**Good:**

```javascript
const currentDate = moment().format(&quot;YYYY/MM/DD&quot;);
```

**[⬆ back to top](#table-of-contents)**

### Use the same vocabulary for the same type of variable

**Bad:**

```javascript
getUserInfo();
getClientData();
getCustomerRecord();
```

**Good:**

```javascript
getUser();
```

**[⬆ back to top](#table-of-contents)**

### Use searchable names

We will read more code than we will ever write. It&#039;s important that the code we
do write is readable and searchable. By _not_ naming variables that end up
being meaningful for understanding our program, we hurt our readers.
Make your names searchable. Tools like
[buddy.js](https://github.com/danielstjules/buddy.js) and
[ESLint](https://github.com/eslint/eslint/blob/660e0918933e6e7fede26bc675a0763a6b357c94/docs/rules/no-magic-numbers.md)
can help identify unnamed constants.

**Bad:**

```javascript
// What the heck is 86400000 for?
setTimeout(blastOff, 86400000);
```

**Good:**

```javascript
// Declare them as capitalized named constants.
const MILLISECONDS_PER_DAY = 60 * 60 * 24 * 1000; //86400000;

setTimeout(blastOff, MILLISECONDS_PER_DAY);
```

**[⬆ back to top](#table-of-contents)**

### Use explanatory variables

**Bad:**

```javascript
const address = &quot;One Infinite Loop, Cupertino 95014&quot;;
const cityZipCodeRegex = /^[^,\\]+[,\\\s]+(.+?)\s*(\d{5})?$/;
saveCityZipCode(
  address.match(cityZipCodeRegex)[1],
  address.match(cityZipCodeRegex)[2]
);
```

**Good:**

```javascript
const address = &quot;One Infinite Loop, Cupertino 95014&quot;;
const cityZipCodeRegex = /^[^,\\]+[,\\\s]+(.+?)\s*(\d{5})?$/;
const [_, city, zipCode] = address.match(cityZipCodeRegex) || [];
saveCityZipCode(city, zipCode);
```

**[⬆ back to top](#table-of-contents)**

### Avoid Mental Mapping

Explicit is better than implicit.

**Bad:**

```javascript
const locations = [&quot;Austin&quot;, &quot;New York&quot;, &quot;San Francisco&quot;];
locations.forEach(l =&gt; {
  doStuff();
  doSomeOtherStuff();
  // ...
  // ...
  // ...
  // Wait, what is `l` for again?
  dispatch(l);
});
```

**Good:**

```javascript
const locations = [&quot;Austin&quot;, &quot;New York&quot;, &quot;San Francisco&quot;];
locations.forEach(location =&gt; {
  doStuff();
  doSomeOtherStuff();
  // ...
  // ...
  // ...
  dispatch(location);
});
```

**[⬆ back to top](#table-of-contents)**

### Don&#039;t add unneeded context

If your class/object name tells you something, don&#039;t repeat that in your
variable name.

**Bad:**

```javascript
const Car = {
  carMake: &quot;Honda&quot;,
  carModel: &quot;Accord&quot;,
  carColor: &quot;Blue&quot;
};

function paintCar(car, color) {
  car.carColor = color;
}
```

**Good:**

```javascript
const Car = {
  make: &quot;Honda&quot;,
  model: &quot;Accord&quot;,
  color: &quot;Blue&quot;
};

function paintCar(car, color) {
  car.color = color;
}
```

**[⬆ back to top](#table-of-contents)**

### Use default parameters instead of short circuiting or conditionals

Default parameters are often cleaner than short circuiting. Be aware that if you
use them, your function will only provide default values for `undefined`
arguments. Other &quot;falsy&quot; values such as `&#039;&#039;`, `&quot;&quot;`, `false`, `null`, `0`, and
`NaN`, will not be replaced by a default value.

**Bad:**

```javascript
function createMicrobrewery(name) {
  const breweryName = name || &quot;Hipster Brew Co.&quot;;
  // ...
}
```

**Good:**

```javascript
function createMicrobrewery(name = &quot;Hipster Brew Co.&quot;) {
  // ...
}
```

**[⬆ back to top](#table-of-contents)**

## **Functions**

### Function arguments (2 or fewer ideally)

Limiting the amount of function parameters is incredibly important because it
makes testing your function easier. Having more than three leads to a
combinatorial explosion where you have to test tons of different cases with
each separate argument.

One or two arguments is the ideal case, and three should be avoided if possible.
Anything more than that should be consolidated. Usually, if you have
more than two arguments then your function is trying to do too much. In cases
where it&#039;s not, most of the time a higher-level object will suffice as an
argument.

Since JavaScript allows you to make objects on the fly, without a lot of class
boilerplate, you can use an object if you are finding yourself needing a
lot of arguments.

To make it obvious what properties the function expects, you can use the ES2015/ES6
destructuring syntax. This has a few advantages:

1. When someone looks at the function signature, it&#039;s immediately clear what
   properties are being used.
2. It can be used to simulate named parameters.
3. Destructuring also clones the specified primitive values of the argument
   object passed into the function. This can help prevent side effects. Note:
   objects and arrays that are destructured from the argument object are NOT
   cloned.
4. Linters can warn you about unused properties, which would be impossible
   without destructuring.

**Bad:**

```javascript
function createMenu(title, body, buttonText, cancellable) {
  // ...
}

createMenu(&quot;Foo&quot;, &quot;Bar&quot;, &quot;Baz&quot;, true);

```

**Good:**

```javascript
function createMenu({ title, body, buttonText, cancellable }) {
  // ...
}

createMenu({
  title: &quot;Foo&quot;,
  body: &quot;Bar&quot;,
  buttonText: &quot;Baz&quot;,
  cancellable: true
});
```

**[⬆ back to top](#table-of-contents)**

### Functions should do one thing

This is by far the most important rule in software engineering. When functions
do more than one thing, they are harder to compose, test, and reason about.
When you can isolate a function to just one action, it can be refactored
easily and your code will read much cleaner. If you take nothing else away from
this guide other than this, you&#039;ll be ahead of many developers.

**Bad:**

```javascript
function emailClients(clients) {
  clients.forEach(client =&gt; {
    const clientRecord = database.lookup(client);
    if (clientRecord.isActive()) {
      email(client);
    }
  });
}
```

**Good:**

```javascript
function emailActiveClients(clients) {
  clients.filter(isActiveClient).forEach(email);
}

function isActiveClient(client) {
  const clientRecord = database.lookup(client);
  return clientRecord.isActive();
}
```

**[⬆ back to top](#table-of-contents)**

### Function names should say what they do

**Bad:**

```javascript
function addToDate(date, month) {
  // ...
}

const date = new Date();

// It&#039;s hard to tell from the function name what is added
addToDate(date, 1);
```

**Good:**

```javascript
function addMonthToDate(month, date) {
  // ...
}

const date = new Date();
addMonthToDate(1, date);
```

**[⬆ back to top](#table-of-contents)**

### Functions should only be one level of abstraction

When you have more than one level of abstraction your function is usually
doing too much. Splitting up functions leads to reusability and easier
testing.

**Bad:**

```javascript
function parseBetterJSAlternative(code) {
  const REGEXES = [
    // ...
  ];

  const statements = code.split(&quot; &quot;);
  const tokens = [];
  REGEXES.forEach(REGEX =&gt; {
    statements.forEach(statement =&gt; {
      // ...
    });
  });

  const ast = [];
  tokens.forEach(token =&gt; {
    // lex...
  });

  ast.forEach(node =&gt; {
    // parse...
  });
}
```

**Good:**

```javascript
function parseBetterJSAlternative(code) {
  const tokens = tokenize(code);
  const syntaxTree = parse(tokens);
  syntaxTree.forEach(node =&gt; {
    // parse...
  });
}

function tokenize(code) {
  const REGEXES = [
    // ...
  ];

  const statements = code.split(&quot; &quot;);
  const tokens = [];
  REGEXES.forEach(REGEX =&gt; {
    statements.forEach(statement =&gt; {
      tokens.push(/* ... */);
    });
  });

  return tokens;
}

function parse(tokens) {
  const syntaxTree = [];
  tokens.forEach(token =&gt; {
    syntaxTree.push(/* ... */);
  });

  return syntaxTree;
}
```

**[⬆ back to top](#table-of-contents)**

### Remove duplicate code

Do your absolute best to avoid duplicate code. Duplicate code is bad because it
means that there&#039;s more than one place to alter something if you need to change
some logic.

Imagine if you run a restaurant and you keep track of your inventory: all your
tomatoes, onions, garlic, spices, etc. If you have multiple lists that
you keep this on, then all have to be updated when you serve a dish with
tomatoes in them. If you only have one list, there&#039;s only one place to update!

Oftentimes you have duplicate code because you have two or more slightly
different things, that share a lot in common, but their differences force you
to have two or more separate functions that do much of the same things. Removing
duplicate code means creating an abstraction that can handle this set of
different things with just one function/module/class.

Getting the abstraction right is critical, that&#039;s why you should follow the
SOLID principles laid out in the _Classes_ section. Bad abstractions can be
worse than duplicate code, so be careful! Having said this, if you can make
a good abstraction, do it! Don&#039;t repeat yourself, otherwise you&#039;ll find yourself
updating multiple places anytime you want to change one thing.

**Bad:**

```javascript
function showDeveloperList(developers) {
  developers.forEach(developer =&gt; {
    const expectedSalary = developer.calculateExpectedSalary();
    const experience = developer.getExperience();
    const githubLink = developer.getGithubLink();
    const data = {
      expectedSalary,
      experience,
      githubLink
    };

    render(data);
  });
}

function showManagerList(managers) {
  managers.forEach(manager =&gt; {
    const expectedSalary = manager.calculateExpectedSalary();
    const experience = manager.getExperience();
    const portfolio = manager.getMBAProjects();
    const data = {
      expectedSalary,
      experience,
      portfolio
    };

    render(data);
  });
}
```

**Good:**

```javascript
function showEmployeeList(employees) {
  employees.forEach(employee =&gt; {
    const expectedSalary = employee.calculateExpectedSalary();
    const experience = employee.getExperience();

    const data = {
      expectedSalary,
      experience
    };

    switch (employee.type) {
      case &quot;manager&quot;:
        data.portfolio = employee.getMBAProjects();
        break;
      case &quot;developer&quot;:
        data.githubLink = employee.getGithubLink();
        break;
    }

    render(data);
  });
}
```

**[⬆ back to top](#table-of-contents)**

### Set default objects with Object.assign

**Bad:**

```javascript
const menuConfig = {
  title: null,
  body: &quot;Bar&quot;,
  buttonText: null,
  cancellable: true
};

function createMenu(config) {
  config.title = config.title || &quot;Foo&quot;;
  config.body = config.body || &quot;Bar&quot;;
  config.buttonText = config.buttonText || &quot;Baz&quot;;
  config.cancellable =
    config.cancellable !== undefined ? config.cancellable : true;
}

createMenu(menuConfig);
```

**Good:**

```javascript
const menuConfig = {
  title: &quot;Order&quot;,
  // User did not include &#039;body&#039; key
  buttonText: &quot;Send&quot;,
  cancellable: true
};

function createMenu(config) {
  let finalConfig = Object.assign(
    {
      title: &quot;Foo&quot;,
      body: &quot;Bar&quot;,
      buttonText: &quot;Baz&quot;,
      cancellable: true
    },
    config
  );
  return finalConfig
  // config now equals: {title: &quot;Order&quot;, body: &quot;Bar&quot;, buttonText: &quot;Send&quot;, cancellable: true}
  // ...
}

createMenu(menuConfig);
```

**[⬆ back to top](#table-of-contents)**

### Don&#039;t use flags as function parameters

Flags tell your user that this function does more than one thing. Functions should do one thing. Split out your functions if they are following different code paths based on a boolean.

**Bad:**

```javascript
function createFile(name, temp) {
  if (temp) {
    fs.create(`./temp/${name}`);
  } else {
    fs.create(name);
  }
}
```

**Good:**

```javascript
function createFile(name) {
  fs.create(name);
}

function createTempFile(name) {
  createFile(`./temp/${name}`);
}
```

**[⬆ back to top](#table-of-contents)**

### Avoid Side Effects (part 1)

A function produces a side effect if it does anything other than take a value in
and return another value or values. A side effect could be writing to a file,
modifying some global variable, or accidentally wiring all your money to a
stranger.

Now, you do need to have side effects in a program on occasion. Like the previous
example, you might need to write to a file. What you want to do is to
centralize where you are doing this. Don&#039;t have several functions and classes
that write to a particular file. Have one service that does it. One and only one.

The main point is to avoid common pitfalls like sharing state between objects
without any structure, using mutable data types that can be written to by anything,
and not centralizing where your side effects occur. If you can do this, you will
be happier than the vast majority of other programmers.

**Bad:**

```javascript
// Global variable referenced by following function.
// If we had another function that used this name, now it&#039;d be an array and it could break it.
let name = &quot;Ryan McDermott&quot;;

function splitIntoFirstAndLastName() {
  name = name.split(&quot; &quot;);
}

splitIntoFirstAndLastName();

console.log(name); // [&#039;Ryan&#039;, &#039;McDermott&#039;];
```

**Good:**

```javascript
function splitIntoFirstAndLastName(name) {
  return name.split(&quot; &quot;);
}

const name = &quot;Ryan McDermott&quot;;
const newName = splitIntoFirstAndLastName(name);

console.log(name); // &#039;Ryan McDermott&#039;;
console.log(newName); // [&#039;Ryan&#039;, &#039;McDermott&#039;];
```

**[⬆ back to top](#table-of-contents)**

### Avoid Side Effects (part 2)

In JavaScript, some values are unchangeable (immutable) and some are changeable 
(mutable). Objects and arrays are two kinds of mutable values so it&#039;s important 
to handle them carefully when they&#039;re passed as parameters to a function. A 
JavaScript function can change an object&#039;s properties or alter the contents of 
an array which could easily cause bugs elsewhere.

Suppose there&#039;s a function that accepts an array parameter representing a 
shopping cart. If the function makes a change in that shopping cart array - 
by adding an item to purchase, for example - then any other function that 
uses that same `cart` array will be affected by this addition. That may be 
great, however it could also be bad. Let&#039;s imagine a bad situation:

The user clicks the &quot;Purchase&quot; button which calls a `purchase` function that
spawns a network request and sends the `cart` array to the server. Because
of a bad network connection, the `purchase` function has to keep retrying the
request. Now, what if in the meantime the user accidentally clicks an &quot;Add to Cart&quot;
button on an item they don&#039;t actually want before the network request begins?
If that happens and the network request begins, then that purchase function
will send the accidentally added item because the `cart` array was modified.

A great solution would be for the `addItemToCart` function to always clone the 
`cart`, edit it, and return the clone. This would ensure that functions that are still
using the old shopping cart wouldn&#039;t be affected by the changes.

Two caveats to mention to this approach:

1. There might be cases where you actually want to modify the input object,
   but when you adopt this programming practice you will find that those cases
   are pretty rare. Most things can be refactored to have no side effects!

2. Cloning big objects can be very expensive in terms of performance. Luckily,
   this isn&#039;t a big issue in practice because there are
   [great libraries](https://facebook.github.io/immutable-js/) that allow
   this kind of programming approach to be fast and not as memory intensive as
   it would be for you to manually clone objects and arrays.

**Bad:**

```javascript
const addItemToCart = (cart, item) =&gt; {
  cart.push({ item, date: Date.now() });
};
```

**Good:**

```javascript
const addItemToCart = (cart, item) =&gt; {
  return [...cart, { item, date: Date.now() }];
};
```

**[⬆ back to top](#table-of-contents)**

### Don&#039;t write to global functions

Polluting globals is a bad practice in JavaScript because you could clash with another
library and the user of your API would be none-the-wiser until they get an
exception in production. Let&#039;s think about an example: what if you wanted to
extend JavaScript&#039;s native Array method to have a `diff` method that could
show the difference between two arrays? You could write your new function
to the `Array.prototype`, but it could clash with another library that tried
to do the same thing. What if that other library was just using `diff` to find
the difference between the first and last elements of an array? This is why it
would be much better to just use ES2015/ES6 classes and simply extend the `Array` global.

**Bad:**

```javascript
Array.prototype.diff = function diff(comparisonArray) {
  const hash = new Set(comparisonArray);
  return this.filter(elem =&gt; !hash.has(elem));
};
```

**Good:**

```javascript
class SuperArray extends Array {
  diff(comparisonArray) {
    const hash = new Set(comparisonArray);
    return this.filter(elem =&gt; !hash.has(elem));
  }
}
```

**[⬆ back to top](#table-of-contents)**

### Favor functional programming over imperative programming

JavaScript isn&#039;t a functional language in the way that Haskell is, but it has
a functional flavor to it. Functional languages can be cleaner and easier to test.
Favor this style of programming when you can.

**Bad:**

```javascript
const programmerOutput = [
  {
    name: &quot;Uncle Bobby&quot;,
    linesOfCode: 500
  },
  {
    name: &quot;Suzie Q&quot;,
    linesOfCode: 1500
  },
  {
    name: &quot;Jimmy Gosling&quot;,
    linesOfCode: 150
  },
  {
    name: &quot;Gracie Hopper&quot;,
    linesOfCode: 1000
  }
];

let totalOutput = 0;

for (let i = 0; i &lt; programmerOutput.length; i++) {
  totalOutput += programmerOutput[i].linesOfCode;
}
```

**Good:**

```javascript
const programmerOutput = [
  {
    name: &quot;Uncle Bobby&quot;,
    linesOfCode: 500
  },
  {
    name: &quot;Suzie Q&quot;,
    linesOfCode: 1500
  },
  {
    name: &quot;Jimmy Gosling&quot;,
    linesOfCode: 150
  },
  {
    name: &quot;Gracie Hopper&quot;,
    linesOfCode: 1000
  }
];

const totalOutput = program

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[nodejs/node]]></title>
            <link>https://github.com/nodejs/node</link>
            <guid>https://github.com/nodejs/node</guid>
            <pubDate>Sat, 29 Mar 2025 00:04:16 GMT</pubDate>
            <description><![CDATA[Node.js JavaScript runtime ✨🐢🚀✨]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nodejs/node">nodejs/node</a></h1>
            <p>Node.js JavaScript runtime ✨🐢🚀✨</p>
            <p>Language: JavaScript</p>
            <p>Stars: 110,339</p>
            <p>Forks: 31,118</p>
            <p>Stars today: 21 stars today</p>
            <h2>README</h2><pre># Node.js

Node.js is an open-source, cross-platform JavaScript runtime environment.

For information on using Node.js, see the [Node.js website][].

The Node.js project uses an [open governance model](./GOVERNANCE.md). The
[OpenJS Foundation][] provides support for the project.

Contributors are expected to act in a collaborative manner to move
the project forward. We encourage the constructive exchange of contrary
opinions and compromise. The [TSC](./GOVERNANCE.md#technical-steering-committee)
reserves the right to limit or block contributors who repeatedly act in ways
that discourage, exhaust, or otherwise negatively affect other participants.

**This project has a [Code of Conduct][].**

## Table of contents

* [Support](#support)
* [Release types](#release-types)
  * [Download](#download)
    * [Current and LTS releases](#current-and-lts-releases)
    * [Nightly releases](#nightly-releases)
    * [API documentation](#api-documentation)
  * [Verifying binaries](#verifying-binaries)
* [Building Node.js](#building-nodejs)
* [Security](#security)
* [Contributing to Node.js](#contributing-to-nodejs)
* [Current project team members](#current-project-team-members)
  * [TSC (Technical Steering Committee)](#tsc-technical-steering-committee)
  * [Collaborators](#collaborators)
  * [Triagers](#triagers)
  * [Release keys](#release-keys)
* [License](#license)

## Support

Looking for help? Check out the
[instructions for getting support](.github/SUPPORT.md).

## Release types

* **Current**: Under active development. Code for the Current release is in the
  branch for its major version number (for example,
  [v22.x](https://github.com/nodejs/node/tree/v22.x)). Node.js releases a new
  major version every 6 months, allowing for breaking changes. This happens in
  April and October every year. Releases appearing each October have a support
  life of 8 months. Releases appearing each April convert to LTS (see below)
  each October.
* **LTS**: Releases that receive Long Term Support, with a focus on stability
  and security. Every even-numbered major version will become an LTS release.
  LTS releases receive 12 months of _Active LTS_ support and a further 18 months
  of _Maintenance_. LTS release lines have alphabetically-ordered code names,
  beginning with v4 Argon. There are no breaking changes or feature additions,
  except in some special circumstances.
* **Nightly**: Code from the Current branch built every 24-hours when there are
  changes. Use with caution.

Current and LTS releases follow [semantic versioning](https://semver.org). A
member of the Release Team [signs](#release-keys) each Current and LTS release.
For more information, see the
[Release README](https://github.com/nodejs/Release#readme).

### Download

Binaries, installers, and source tarballs are available at
&lt;https://nodejs.org/en/download/&gt;.

#### Current and LTS releases

&lt;https://nodejs.org/download/release/&gt;

The [latest](https://nodejs.org/download/release/latest/) directory is an
alias for the latest Current release. The latest-_codename_ directory is an
alias for the latest release from an LTS line. For example, the
[latest-hydrogen](https://nodejs.org/download/release/latest-hydrogen/)
directory contains the latest Hydrogen (Node.js 18) release.

#### Nightly releases

&lt;https://nodejs.org/download/nightly/&gt;

Each directory and filename includes the version (e.g., `v22.0.0`),
followed by the UTC date (e.g., `20240424` for April 24, 2024),
and the short commit SHA of the HEAD of the release (e.g., `ddd0a9e494`).
For instance, a full directory name might look like `v22.0.0-nightly20240424ddd0a9e494`.

#### API documentation

Documentation for the latest Current release is at &lt;https://nodejs.org/api/&gt;.
Version-specific documentation is available in each release directory in the
_docs_ subdirectory. Version-specific documentation is also at
&lt;https://nodejs.org/download/docs/&gt;.

### Verifying binaries

Download directories contain a `SHASUMS256.txt` file with SHA checksums for the
files.

To download `SHASUMS256.txt` using `curl`:

```bash
curl -O https://nodejs.org/dist/vx.y.z/SHASUMS256.txt
```

To check that downloaded files match the checksum, use `sha256sum`:

```bash
sha256sum -c SHASUMS256.txt --ignore-missing
```

For Current and LTS, the GPG detached signature of `SHASUMS256.txt` is in
`SHASUMS256.txt.sig`. You can use it with `gpg` to verify the integrity of
`SHASUMS256.txt`. You will first need to import
[the GPG keys of individuals authorized to create releases](#release-keys).

See [Release keys](#release-keys) for commands to import active release keys.

Next, download the `SHASUMS256.txt.sig` for the release:

```bash
curl -O https://nodejs.org/dist/vx.y.z/SHASUMS256.txt.sig
```

Then use `gpg --verify SHASUMS256.txt.sig SHASUMS256.txt` to verify
the file&#039;s signature.

## Building Node.js

See [BUILDING.md](BUILDING.md) for instructions on how to build Node.js from
source and a list of supported platforms.

## Security

For information on reporting security vulnerabilities in Node.js, see
[SECURITY.md](./SECURITY.md).

## Contributing to Node.js

* [Contributing to the project][]
* [Working Groups][]
* [Strategic initiatives][]
* [Technical values and prioritization][]

## Current project team members

For information about the governance of the Node.js project, see
[GOVERNANCE.md](./GOVERNANCE.md).

&lt;!-- node-core-utils and find-inactive-tsc.mjs depend on the format of the TSC
     list. If the format changes, those utilities need to be tested and
     updated. --&gt;

### TSC (Technical Steering Committee)

#### TSC voting members

&lt;!--lint disable prohibited-strings--&gt;

* [aduh95](https://github.com/aduh95) -
  **Antoine du Hamel** &lt;&lt;duhamelantoine1995@gmail.com&gt;&gt; (he/him)
* [anonrig](https://github.com/anonrig) -
  **Yagiz Nizipli** &lt;&lt;yagiz@nizipli.com&gt;&gt; (he/him)
* [benjamingr](https://github.com/benjamingr) -
  **Benjamin Gruenbaum** &lt;&lt;benjamingr@gmail.com&gt;&gt;
* [BridgeAR](https://github.com/BridgeAR) -
  **Ruben Bridgewater** &lt;&lt;ruben@bridgewater.de&gt;&gt; (he/him)
* [gireeshpunathil](https://github.com/gireeshpunathil) -
  **Gireesh Punathil** &lt;&lt;gpunathi@in.ibm.com&gt;&gt; (he/him)
* [jasnell](https://github.com/jasnell) -
  **James M Snell** &lt;&lt;jasnell@gmail.com&gt;&gt; (he/him)
* [joyeecheung](https://github.com/joyeecheung) -
  **Joyee Cheung** &lt;&lt;joyeec9h3@gmail.com&gt;&gt; (she/her)
* [legendecas](https://github.com/legendecas) -
  **Chengzhong Wu** &lt;&lt;legendecas@gmail.com&gt;&gt; (he/him)
* [marco-ippolito](https://github.com/marco-ippolito) -
  **Marco Ippolito** &lt;&lt;marcoippolito54@gmail.com&gt;&gt; (he/him)
* [mcollina](https://github.com/mcollina) -
  **Matteo Collina** &lt;&lt;matteo.collina@gmail.com&gt;&gt; (he/him)
* [mhdawson](https://github.com/mhdawson) -
  **Michael Dawson** &lt;&lt;midawson@redhat.com&gt;&gt; (he/him)
* [RafaelGSS](https://github.com/RafaelGSS) -
  **Rafael Gonzaga** &lt;&lt;rafael.nunu@hotmail.com&gt;&gt; (he/him)
* [RaisinTen](https://github.com/RaisinTen) -
  **Darshan Sen** &lt;&lt;raisinten@gmail.com&gt;&gt; (he/him)
* [richardlau](https://github.com/richardlau) -
  **Richard Lau** &lt;&lt;rlau@redhat.com&gt;&gt;
* [ronag](https://github.com/ronag) -
  **Robert Nagy** &lt;&lt;ronagy@icloud.com&gt;&gt;
* [ruyadorno](https://github.com/ruyadorno) -
  **Ruy Adorno** &lt;&lt;ruy@vlt.sh&gt;&gt; (he/him)
* [ShogunPanda](https://github.com/ShogunPanda) -
  **Paolo Insogna** &lt;&lt;paolo@cowtech.it&gt;&gt; (he/him)
* [targos](https://github.com/targos) -
  **Michaël Zasso** &lt;&lt;targos@protonmail.com&gt;&gt; (he/him)
* [tniessen](https://github.com/tniessen) -
  **Tobias Nießen** &lt;&lt;tniessen@tnie.de&gt;&gt; (he/him)

#### TSC regular members

* [BethGriggs](https://github.com/BethGriggs) -
  **Beth Griggs** &lt;&lt;bethanyngriggs@gmail.com&gt;&gt; (she/her)
* [bnoordhuis](https://github.com/bnoordhuis) -
  **Ben Noordhuis** &lt;&lt;info@bnoordhuis.nl&gt;&gt;
* [cjihrig](https://github.com/cjihrig) -
  **Colin Ihrig** &lt;&lt;cjihrig@gmail.com&gt;&gt; (he/him)
* [codebytere](https://github.com/codebytere) -
  **Shelley Vohr** &lt;&lt;shelley.vohr@gmail.com&gt;&gt; (she/her)
* [GeoffreyBooth](https://github.com/GeoffreyBooth) -
  **Geoffrey Booth** &lt;&lt;webadmin@geoffreybooth.com&gt;&gt; (he/him)
* [MoLow](https://github.com/MoLow) -
  **Moshe Atlow** &lt;&lt;moshe@atlow.co.il&gt;&gt; (he/him)
* [Trott](https://github.com/Trott) -
  **Rich Trott** &lt;&lt;rtrott@gmail.com&gt;&gt; (he/him)

&lt;details&gt;

&lt;summary&gt;TSC emeriti members&lt;/summary&gt;

#### TSC emeriti members

* [addaleax](https://github.com/addaleax) -
  **Anna Henningsen** &lt;&lt;anna@addaleax.net&gt;&gt; (she/her)
* [apapirovski](https://github.com/apapirovski) -
  **Anatoli Papirovski** &lt;&lt;apapirovski@mac.com&gt;&gt; (he/him)
* [ChALkeR](https://github.com/ChALkeR) -
  **Сковорода Никита Андреевич** &lt;&lt;chalkerx@gmail.com&gt;&gt; (he/him)
* [chrisdickinson](https://github.com/chrisdickinson) -
  **Chris Dickinson** &lt;&lt;christopher.s.dickinson@gmail.com&gt;&gt;
* [danbev](https://github.com/danbev) -
  **Daniel Bevenius** &lt;&lt;daniel.bevenius@gmail.com&gt;&gt; (he/him)
* [danielleadams](https://github.com/danielleadams) -
  **Danielle Adams** &lt;&lt;adamzdanielle@gmail.com&gt;&gt; (she/her)
* [evanlucas](https://github.com/evanlucas) -
  **Evan Lucas** &lt;&lt;evanlucas@me.com&gt;&gt; (he/him)
* [fhinkel](https://github.com/fhinkel) -
  **Franziska Hinkelmann** &lt;&lt;franziska.hinkelmann@gmail.com&gt;&gt; (she/her)
* [Fishrock123](https://github.com/Fishrock123) -
  **Jeremiah Senkpiel** &lt;&lt;fishrock123@rocketmail.com&gt;&gt; (he/they)
* [gabrielschulhof](https://github.com/gabrielschulhof) -
  **Gabriel Schulhof** &lt;&lt;gabrielschulhof@gmail.com&gt;&gt;
* [gibfahn](https://github.com/gibfahn) -
  **Gibson Fahnestock** &lt;&lt;gibfahn@gmail.com&gt;&gt; (he/him)
* [indutny](https://github.com/indutny) -
  **Fedor Indutny** &lt;&lt;fedor@indutny.com&gt;&gt;
* [isaacs](https://github.com/isaacs) -
  **Isaac Z. Schlueter** &lt;&lt;i@izs.me&gt;&gt;
* [joshgav](https://github.com/joshgav) -
  **Josh Gavant** &lt;&lt;josh.gavant@outlook.com&gt;&gt;
* [mmarchini](https://github.com/mmarchini) -
  **Mary Marchini** &lt;&lt;oss@mmarchini.me&gt;&gt; (she/her)
* [mscdex](https://github.com/mscdex) -
  **Brian White** &lt;&lt;mscdex@mscdex.net&gt;&gt;
* [MylesBorins](https://github.com/MylesBorins) -
  **Myles Borins** &lt;&lt;myles.borins@gmail.com&gt;&gt; (he/him)
* [nebrius](https://github.com/nebrius) -
  **Bryan Hughes** &lt;&lt;bryan@nebri.us&gt;&gt;
* [ofrobots](https://github.com/ofrobots) -
  **Ali Ijaz Sheikh** &lt;&lt;ofrobots@google.com&gt;&gt; (he/him)
* [orangemocha](https://github.com/orangemocha) -
  **Alexis Campailla** &lt;&lt;orangemocha@nodejs.org&gt;&gt;
* [piscisaureus](https://github.com/piscisaureus) -
  **Bert Belder** &lt;&lt;bertbelder@gmail.com&gt;&gt;
* [rvagg](https://github.com/rvagg) -
  **Rod Vagg** &lt;&lt;r@va.gg&gt;&gt;
* [sam-github](https://github.com/sam-github) -
  **Sam Roberts** &lt;&lt;vieuxtech@gmail.com&gt;&gt;
* [shigeki](https://github.com/shigeki) -
  **Shigeki Ohtsu** &lt;&lt;ohtsu@ohtsu.org&gt;&gt; (he/him)
* [thefourtheye](https://github.com/thefourtheye) -
  **Sakthipriyan Vairamani** &lt;&lt;thechargingvolcano@gmail.com&gt;&gt; (he/him)
* [TimothyGu](https://github.com/TimothyGu) -
  **Tiancheng &quot;Timothy&quot; Gu** &lt;&lt;timothygu99@gmail.com&gt;&gt; (he/him)
* [trevnorris](https://github.com/trevnorris) -
  **Trevor Norris** &lt;&lt;trev.norris@gmail.com&gt;&gt;

&lt;/details&gt;

&lt;!-- node-core-utils and find-inactive-collaborators.mjs depend on the format
     of the collaborator list. If the format changes, those utilities need to be
     tested and updated. --&gt;

### Collaborators

* [abmusse](https://github.com/abmusse) -
  **Abdirahim Musse** &lt;&lt;abdirahim.musse@ibm.com&gt;&gt;
* [addaleax](https://github.com/addaleax) -
  **Anna Henningsen** &lt;&lt;anna@addaleax.net&gt;&gt; (she/her)
* [aduh95](https://github.com/aduh95) -
  **Antoine du Hamel** &lt;&lt;duhamelantoine1995@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/aduh95)
* [anonrig](https://github.com/anonrig) -
  **Yagiz Nizipli** &lt;&lt;yagiz@nizipli.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/anonrig)
* [atlowChemi](https://github.com/atlowChemi) -
  **Chemi Atlow** &lt;&lt;chemi@atlow.co.il&gt;&gt; (he/him)
* [Ayase-252](https://github.com/Ayase-252) -
  **Qingyu Deng** &lt;&lt;i@ayase-lab.com&gt;&gt;
* [bengl](https://github.com/bengl) -
  **Bryan English** &lt;&lt;bryan@bryanenglish.com&gt;&gt; (he/him)
* [benjamingr](https://github.com/benjamingr) -
  **Benjamin Gruenbaum** &lt;&lt;benjamingr@gmail.com&gt;&gt;
* [BethGriggs](https://github.com/BethGriggs) -
  **Beth Griggs** &lt;&lt;bethanyngriggs@gmail.com&gt;&gt; (she/her)
* [bnb](https://github.com/bnb) -
  **Tierney Cyren** &lt;&lt;hello@bnb.im&gt;&gt; (they/them)
* [bnoordhuis](https://github.com/bnoordhuis) -
  **Ben Noordhuis** &lt;&lt;info@bnoordhuis.nl&gt;&gt;
* [BridgeAR](https://github.com/BridgeAR) -
  **Ruben Bridgewater** &lt;&lt;ruben@bridgewater.de&gt;&gt; (he/him)
* [cclauss](https://github.com/cclauss) -
  **Christian Clauss** &lt;&lt;cclauss@me.com&gt;&gt; (he/him)
* [cjihrig](https://github.com/cjihrig) -
  **Colin Ihrig** &lt;&lt;cjihrig@gmail.com&gt;&gt; (he/him)
* [codebytere](https://github.com/codebytere) -
  **Shelley Vohr** &lt;&lt;shelley.vohr@gmail.com&gt;&gt; (she/her)
* [cola119](https://github.com/cola119) -
  **Kohei Ueno** &lt;&lt;kohei.ueno119@gmail.com&gt;&gt; (he/him)
* [daeyeon](https://github.com/daeyeon) -
  **Daeyeon Jeong** &lt;&lt;daeyeon.dev@gmail.com&gt;&gt; (he/him)
* [debadree25](https://github.com/debadree25) -
  **Debadree Chatterjee** &lt;&lt;debadree333@gmail.com&gt;&gt; (he/him)
* [deokjinkim](https://github.com/deokjinkim) -
  **Deokjin Kim** &lt;&lt;deokjin81.kim@gmail.com&gt;&gt; (he/him)
* [edsadr](https://github.com/edsadr) -
  **Adrian Estrada** &lt;&lt;edsadr@gmail.com&gt;&gt; (he/him)
* [ErickWendel](https://github.com/ErickWendel) -
  **Erick Wendel** &lt;&lt;erick.workspace@gmail.com&gt;&gt; (he/him)
* [Ethan-Arrowood](https://github.com/Ethan-Arrowood) -
  **Ethan Arrowood** &lt;&lt;ethan@arrowood.dev&gt;&gt; (he/him)
* [F3n67u](https://github.com/F3n67u) -
  **Feng Yu** &lt;&lt;F3n67u@outlook.com&gt;&gt; (he/him)
* [fhinkel](https://github.com/fhinkel) -
  **Franziska Hinkelmann** &lt;&lt;franziska.hinkelmann@gmail.com&gt;&gt; (she/her)
* [Flarna](https://github.com/Flarna) -
  **Gerhard Stöbich** &lt;&lt;deb2001-github@yahoo.de&gt;&gt; (he/they)
* [gabrielschulhof](https://github.com/gabrielschulhof) -
  **Gabriel Schulhof** &lt;&lt;gabrielschulhof@gmail.com&gt;&gt;
* [geeksilva97](https://github.com/geeksilva97) -
  **Edy Silva** &lt;&lt;edigleyssonsilva@gmail.com&gt;&gt; (he/him)
* [gengjiawen](https://github.com/gengjiawen) -
  **Jiawen Geng** &lt;&lt;technicalcute@gmail.com&gt;&gt;
* [GeoffreyBooth](https://github.com/GeoffreyBooth) -
  **Geoffrey Booth** &lt;&lt;webadmin@geoffreybooth.com&gt;&gt; (he/him)
* [gireeshpunathil](https://github.com/gireeshpunathil) -
  **Gireesh Punathil** &lt;&lt;gpunathi@in.ibm.com&gt;&gt; (he/him)
* [guybedford](https://github.com/guybedford) -
  **Guy Bedford** &lt;&lt;guybedford@gmail.com&gt;&gt; (he/him)
* [H4ad](https://github.com/H4ad) -
  **Vinícius Lourenço Claro Cardoso** &lt;&lt;contact@viniciusl.com.br&gt;&gt; (he/him)
* [HarshithaKP](https://github.com/HarshithaKP) -
  **Harshitha K P** &lt;&lt;harshitha014@gmail.com&gt;&gt; (she/her)
* [himself65](https://github.com/himself65) -
  **Zeyu &quot;Alex&quot; Yang** &lt;&lt;himself65@outlook.com&gt;&gt; (he/him)
* [jakecastelli](https://github.com/jakecastelli) -
  **Jake Yuesong Li** &lt;&lt;jake.yuesong@gmail.com&gt;&gt; (he/him)
* [JakobJingleheimer](https://github.com/JakobJingleheimer) -
  **Jacob Smith** &lt;&lt;jacob@frende.me&gt;&gt; (he/him)
* [jasnell](https://github.com/jasnell) -
  **James M Snell** &lt;&lt;jasnell@gmail.com&gt;&gt; (he/him)
* [jazelly](https://github.com/jazelly) -
  **Jason Zhang** &lt;&lt;xzha4350@gmail.com&gt;&gt; (he/him)
* [jkrems](https://github.com/jkrems) -
  **Jan Martin** &lt;&lt;jan.krems@gmail.com&gt;&gt; (he/him)
* [joyeecheung](https://github.com/joyeecheung) -
  **Joyee Cheung** &lt;&lt;joyeec9h3@gmail.com&gt;&gt; (she/her)
* [juanarbol](https://github.com/juanarbol) -
  **Juan José Arboleda** &lt;&lt;soyjuanarbol@gmail.com&gt;&gt; (he/him)
* [JungMinu](https://github.com/JungMinu) -
  **Minwoo Jung** &lt;&lt;nodecorelab@gmail.com&gt;&gt; (he/him)
* [KhafraDev](https://github.com/KhafraDev) -
  **Matthew Aitken** &lt;&lt;maitken033380023@gmail.com&gt;&gt; (he/him)
* [legendecas](https://github.com/legendecas) -
  **Chengzhong Wu** &lt;&lt;legendecas@gmail.com&gt;&gt; (he/him)
* [lemire](https://github.com/lemire) -
  **Daniel Lemire** &lt;&lt;daniel@lemire.me&gt;&gt;
* [Linkgoron](https://github.com/Linkgoron) -
  **Nitzan Uziely** &lt;&lt;linkgoron@gmail.com&gt;&gt;
* [LiviaMedeiros](https://github.com/LiviaMedeiros) -
  **LiviaMedeiros** &lt;&lt;livia@cirno.name&gt;&gt;
* [ljharb](https://github.com/ljharb) -
  **Jordan Harband** &lt;&lt;ljharb@gmail.com&gt;&gt;
* [lpinca](https://github.com/lpinca) -
  **Luigi Pinca** &lt;&lt;luigipinca@gmail.com&gt;&gt; (he/him)
* [lukekarrys](https://github.com/lukekarrys) -
  **Luke Karrys** &lt;&lt;luke@lukekarrys.com&gt;&gt; (he/him)
* [Lxxyx](https://github.com/Lxxyx) -
  **Zijian Liu** &lt;&lt;lxxyxzj@gmail.com&gt;&gt; (he/him)
* [marco-ippolito](https://github.com/marco-ippolito) -
  **Marco Ippolito** &lt;&lt;marcoippolito54@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/marco-ippolito)
* [marsonya](https://github.com/marsonya) -
  **Akhil Marsonya** &lt;&lt;akhil.marsonya27@gmail.com&gt;&gt; (he/him)
* [MattiasBuelens](https://github.com/MattiasBuelens) -
  **Mattias Buelens** &lt;&lt;mattias@buelens.com&gt;&gt; (he/him)
* [mcollina](https://github.com/mcollina) -
  **Matteo Collina** &lt;&lt;matteo.collina@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/mcollina)
* [meixg](https://github.com/meixg) -
  **Xuguang Mei** &lt;&lt;meixuguang@gmail.com&gt;&gt; (he/him)
* [mhdawson](https://github.com/mhdawson) -
  **Michael Dawson** &lt;&lt;midawson@redhat.com&gt;&gt; (he/him)
* [mildsunrise](https://github.com/mildsunrise) -
  **Alba Mendez** &lt;&lt;me@alba.sh&gt;&gt; (she/her)
* [MoLow](https://github.com/MoLow) -
  **Moshe Atlow** &lt;&lt;moshe@atlow.co.il&gt;&gt; (he/him)
* [MrJithil](https://github.com/MrJithil) -
  **Jithil P Ponnan** &lt;&lt;jithil@outlook.com&gt;&gt; (he/him)
* [panva](https://github.com/panva) -
  **Filip Skokan** &lt;&lt;panva.ip@gmail.com&gt;&gt; (he/him)
* [pimterry](https://github.com/pimterry) -
  **Tim Perry** &lt;&lt;pimterry@gmail.com&gt;&gt; (he/him)
* [pmarchini](https://github.com/pmarchini) -
  **Pietro Marchini** &lt;&lt;pietro.marchini94@gmail.com&gt;&gt; (he/him)
* [Qard](https://github.com/Qard) -
  **Stephen Belanger** &lt;&lt;admin@stephenbelanger.com&gt;&gt; (he/him)
* [RafaelGSS](https://github.com/RafaelGSS) -
  **Rafael Gonzaga** &lt;&lt;rafael.nunu@hotmail.com&gt;&gt; (he/him)
* [RaisinTen](https://github.com/RaisinTen) -
  **Darshan Sen** &lt;&lt;raisinten@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/RaisinTen)
* [richardlau](https://github.com/richardlau) -
  **Richard Lau** &lt;&lt;rlau@redhat.com&gt;&gt;
* [rluvaton](https://github.com/rluvaton) -
  **Raz Luvaton** &lt;&lt;rluvaton@gmail.com&gt;&gt; (he/him)
* [ronag](https://github.com/ronag) -
  **Robert Nagy** &lt;&lt;ronagy@icloud.com&gt;&gt;
* [ruyadorno](https://github.com/ruyadorno) -
  **Ruy Adorno** &lt;&lt;ruy@vlt.sh&gt;&gt; (he/him)
* [santigimeno](https://github.com/santigimeno) -
  **Santiago Gimeno** &lt;&lt;santiago.gimeno@gmail.com&gt;&gt;
* [ShogunPanda](https://github.com/ShogunPanda) -
  **Paolo Insogna** &lt;&lt;paolo@cowtech.it&gt;&gt; (he/him)
* [srl295](https://github.com/srl295) -
  **Steven R Loomis** &lt;&lt;srl295@gmail.com&gt;&gt;
* [StefanStojanovic](https://github.com/StefanStojanovic) -
  **Stefan Stojanovic** &lt;&lt;stefan.stojanovic@janeasystems.com&gt;&gt; (he/him)
* [sxa](https://github.com/sxa) -
  **Stewart X Addison** &lt;&lt;sxa@redhat.com&gt;&gt; (he/him)
* [targos](https://github.com/targos) -
  **Michaël Zasso** &lt;&lt;targos@protonmail.com&gt;&gt; (he/him)
* [theanarkh](https://github.com/theanarkh) -
  **theanarkh** &lt;&lt;theratliter@gmail.com&gt;&gt; (he/him)
* [tniessen](https://github.com/tniessen) -
  **Tobias Nießen** &lt;&lt;tniessen@tnie.de&gt;&gt; (he/him)
* [trivikr](https://github.com/trivikr) -
  **Trivikram Kamat** &lt;&lt;trivikr.dev@gmail.com&gt;&gt;
* [Trott](https://github.com/Trott) -
  **Rich Trott** &lt;&lt;rtrott@gmail.com&gt;&gt; (he/him)
* [UlisesGascon](https://github.com/UlisesGascon) -
  **Ulises Gascón** &lt;&lt;ulisesgascongonzalez@gmail.com&gt;&gt; (he/him)
* [vmoroz](https://github.com/vmoroz) -
  **Vladimir Morozov** &lt;&lt;vmorozov@microsoft.com&gt;&gt; (he/him)
* [VoltrexKeyva](https://github.com/VoltrexKeyva) -
  **Mohammed Keyvanzadeh** &lt;&lt;mohammadkeyvanzade94@gmail.com&gt;&gt; (he/him)
* [zcbenz](https://github.com/zcbenz) -
  **Cheng Zhao** &lt;&lt;zcbenz@gmail.com&gt;&gt; (he/him)
* [ZYSzys](https://github.com/ZYSzys) -
  **Yongsheng Zhang** &lt;&lt;zyszys98@gmail.com&gt;&gt; (he/him)

&lt;details&gt;

&lt;summary&gt;Emeriti&lt;/summary&gt;

&lt;!-- find-inactive-collaborators.mjs depends on the format of the emeriti list.
     If the format changes, those utilities need to be tested and updated

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[twbs/bootstrap]]></title>
            <link>https://github.com/twbs/bootstrap</link>
            <guid>https://github.com/twbs/bootstrap</guid>
            <pubDate>Sat, 29 Mar 2025 00:04:15 GMT</pubDate>
            <description><![CDATA[The most popular HTML, CSS, and JavaScript framework for developing responsive, mobile first projects on the web.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/twbs/bootstrap">twbs/bootstrap</a></h1>
            <p>The most popular HTML, CSS, and JavaScript framework for developing responsive, mobile first projects on the web.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 171,864</p>
            <p>Forks: 79,061</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;
    &lt;img src=&quot;https://getbootstrap.com/docs/5.3/assets/brand/bootstrap-logo-shadow.png&quot; alt=&quot;Bootstrap logo&quot; width=&quot;200&quot; height=&quot;165&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;Bootstrap&lt;/h3&gt;

&lt;p align=&quot;center&quot;&gt;
  Sleek, intuitive, and powerful front-end framework for faster and easier web development.
  &lt;br&gt;
  &lt;a href=&quot;https://getbootstrap.com/docs/5.3/&quot;&gt;&lt;strong&gt;Explore Bootstrap docs »&lt;/strong&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://github.com/twbs/bootstrap/issues/new?assignees=-&amp;labels=bug&amp;template=bug_report.yml&quot;&gt;Report bug&lt;/a&gt;
  ·
  &lt;a href=&quot;https://github.com/twbs/bootstrap/issues/new?assignees=&amp;labels=feature&amp;template=feature_request.yml&quot;&gt;Request feature&lt;/a&gt;
  ·
  &lt;a href=&quot;https://themes.getbootstrap.com/&quot;&gt;Themes&lt;/a&gt;
  ·
  &lt;a href=&quot;https://blog.getbootstrap.com/&quot;&gt;Blog&lt;/a&gt;
&lt;/p&gt;


## Bootstrap 5

Our default branch is for development of our Bootstrap 5 release. Head to the [`v4-dev` branch](https://github.com/twbs/bootstrap/tree/v4-dev) to view the readme, documentation, and source code for Bootstrap 4.


## Table of contents

- [Quick start](#quick-start)
- [Status](#status)
- [What&#039;s included](#whats-included)
- [Bugs and feature requests](#bugs-and-feature-requests)
- [Documentation](#documentation)
- [Contributing](#contributing)
- [Community](#community)
- [Versioning](#versioning)
- [Creators](#creators)
- [Thanks](#thanks)
- [Copyright and license](#copyright-and-license)


## Quick start

Several quick start options are available:

- [Download the latest release](https://github.com/twbs/bootstrap/archive/v5.3.3.zip)
- Clone the repo: `git clone https://github.com/twbs/bootstrap.git`
- Install with [npm](https://www.npmjs.com/): `npm install bootstrap@v5.3.3`
- Install with [yarn](https://yarnpkg.com/): `yarn add bootstrap@v5.3.3`
- Install with [Composer](https://getcomposer.org/): `composer require twbs/bootstrap:5.3.3`
- Install with [NuGet](https://www.nuget.org/): CSS: `Install-Package bootstrap` Sass: `Install-Package bootstrap.sass`

Read the [Getting started page](https://getbootstrap.com/docs/5.3/getting-started/introduction/) for information on the framework contents, templates, examples, and more.


## Status

[![Build Status](https://img.shields.io/github/actions/workflow/status/twbs/bootstrap/js.yml?branch=main&amp;label=JS%20Tests&amp;logo=github)](https://github.com/twbs/bootstrap/actions/workflows/js.yml?query=workflow%3AJS+branch%3Amain)
[![npm version](https://img.shields.io/npm/v/bootstrap?logo=npm&amp;logoColor=fff)](https://www.npmjs.com/package/bootstrap)
[![Gem version](https://img.shields.io/gem/v/bootstrap?logo=rubygems&amp;logoColor=fff)](https://rubygems.org/gems/bootstrap)
[![Meteor Atmosphere](https://img.shields.io/badge/meteor-twbs%3Abootstrap-blue?logo=meteor&amp;logoColor=fff)](https://atmospherejs.com/twbs/bootstrap)
[![Packagist Prerelease](https://img.shields.io/packagist/vpre/twbs/bootstrap?logo=packagist&amp;logoColor=fff)](https://packagist.org/packages/twbs/bootstrap)
[![NuGet](https://img.shields.io/nuget/vpre/bootstrap?logo=nuget&amp;logoColor=fff)](https://www.nuget.org/packages/bootstrap/absoluteLatest)
[![Coverage Status](https://img.shields.io/coveralls/github/twbs/bootstrap/main?logo=coveralls&amp;logoColor=fff)](https://coveralls.io/github/twbs/bootstrap?branch=main)
[![CSS gzip size](https://img.badgesize.io/twbs/bootstrap/main/dist/css/bootstrap.min.css?compression=gzip&amp;label=CSS%20gzip%20size)](https://github.com/twbs/bootstrap/blob/main/dist/css/bootstrap.min.css)
[![CSS Brotli size](https://img.badgesize.io/twbs/bootstrap/main/dist/css/bootstrap.min.css?compression=brotli&amp;label=CSS%20Brotli%20size)](https://github.com/twbs/bootstrap/blob/main/dist/css/bootstrap.min.css)
[![JS gzip size](https://img.badgesize.io/twbs/bootstrap/main/dist/js/bootstrap.min.js?compression=gzip&amp;label=JS%20gzip%20size)](https://github.com/twbs/bootstrap/blob/main/dist/js/bootstrap.min.js)
[![JS Brotli size](https://img.badgesize.io/twbs/bootstrap/main/dist/js/bootstrap.min.js?compression=brotli&amp;label=JS%20Brotli%20size)](https://github.com/twbs/bootstrap/blob/main/dist/js/bootstrap.min.js)
[![Backers on Open Collective](https://img.shields.io/opencollective/backers/bootstrap?logo=opencollective&amp;logoColor=fff)](#backers)
[![Sponsors on Open Collective](https://img.shields.io/opencollective/sponsors/bootstrap?logo=opencollective&amp;logoColor=fff)](#sponsors)


## What&#039;s included

Within the download you&#039;ll find the following directories and files, logically grouping common assets and providing both compiled and minified variations.

&lt;details&gt;
  &lt;summary&gt;Download contents&lt;/summary&gt;

  ```text
  bootstrap/
  ├── css/
  │   ├── bootstrap-grid.css
  │   ├── bootstrap-grid.css.map
  │   ├── bootstrap-grid.min.css
  │   ├── bootstrap-grid.min.css.map
  │   ├── bootstrap-grid.rtl.css
  │   ├── bootstrap-grid.rtl.css.map
  │   ├── bootstrap-grid.rtl.min.css
  │   ├── bootstrap-grid.rtl.min.css.map
  │   ├── bootstrap-reboot.css
  │   ├── bootstrap-reboot.css.map
  │   ├── bootstrap-reboot.min.css
  │   ├── bootstrap-reboot.min.css.map
  │   ├── bootstrap-reboot.rtl.css
  │   ├── bootstrap-reboot.rtl.css.map
  │   ├── bootstrap-reboot.rtl.min.css
  │   ├── bootstrap-reboot.rtl.min.css.map
  │   ├── bootstrap-utilities.css
  │   ├── bootstrap-utilities.css.map
  │   ├── bootstrap-utilities.min.css
  │   ├── bootstrap-utilities.min.css.map
  │   ├── bootstrap-utilities.rtl.css
  │   ├── bootstrap-utilities.rtl.css.map
  │   ├── bootstrap-utilities.rtl.min.css
  │   ├── bootstrap-utilities.rtl.min.css.map
  │   ├── bootstrap.css
  │   ├── bootstrap.css.map
  │   ├── bootstrap.min.css
  │   ├── bootstrap.min.css.map
  │   ├── bootstrap.rtl.css
  │   ├── bootstrap.rtl.css.map
  │   ├── bootstrap.rtl.min.css
  │   └── bootstrap.rtl.min.css.map
  └── js/
      ├── bootstrap.bundle.js
      ├── bootstrap.bundle.js.map
      ├── bootstrap.bundle.min.js
      ├── bootstrap.bundle.min.js.map
      ├── bootstrap.esm.js
      ├── bootstrap.esm.js.map
      ├── bootstrap.esm.min.js
      ├── bootstrap.esm.min.js.map
      ├── bootstrap.js
      ├── bootstrap.js.map
      ├── bootstrap.min.js
      └── bootstrap.min.js.map
  ```
&lt;/details&gt;

We provide compiled CSS and JS (`bootstrap.*`), as well as compiled and minified CSS and JS (`bootstrap.min.*`). [Source maps](https://web.dev/articles/source-maps) (`bootstrap.*.map`) are available for use with certain browsers&#039; developer tools. Bundled JS files (`bootstrap.bundle.js` and minified `bootstrap.bundle.min.js`) include [Popper](https://popper.js.org/docs/v2/).


## Bugs and feature requests

Have a bug or a feature request? Please first read the [issue guidelines](https://github.com/twbs/bootstrap/blob/main/.github/CONTRIBUTING.md#using-the-issue-tracker) and search for existing and closed issues. If your problem or idea is not addressed yet, [please open a new issue](https://github.com/twbs/bootstrap/issues/new/choose).


## Documentation

Bootstrap&#039;s documentation, included in this repo in the root directory, is built with [Hugo](https://gohugo.io/) and publicly hosted on GitHub Pages at &lt;https://getbootstrap.com/&gt;. The docs may also be run locally.

Documentation search is powered by [Algolia&#039;s DocSearch](https://docsearch.algolia.com/).

### Running documentation locally

1. Run `npm install` to install the Node.js dependencies, including Hugo (the site builder).
2. Run `npm run test` (or a specific npm script) to rebuild distributed CSS and JavaScript files, as well as our docs assets.
3. From the root `/bootstrap` directory, run `npm run docs-serve` in the command line.
4. Open `http://localhost:9001/` in your browser, and voilà.

Learn more about using Hugo by reading its [documentation](https://gohugo.io/documentation/).

### Documentation for previous releases

You can find all our previous releases docs on &lt;https://getbootstrap.com/docs/versions/&gt;.

[Previous releases](https://github.com/twbs/bootstrap/releases) and their documentation are also available for download.


## Contributing

Please read through our [contributing guidelines](https://github.com/twbs/bootstrap/blob/main/.github/CONTRIBUTING.md). Included are directions for opening issues, coding standards, and notes on development.

Moreover, if your pull request contains JavaScript patches or features, you must include [relevant unit tests](https://github.com/twbs/bootstrap/tree/main/js/tests). All HTML and CSS should conform to the [Code Guide](https://github.com/mdo/code-guide), maintained by [Mark Otto](https://github.com/mdo).

Editor preferences are available in the [editor config](https://github.com/twbs/bootstrap/blob/main/.editorconfig) for easy use in common text editors. Read more and download plugins at &lt;https://editorconfig.org/&gt;.


## Community

Get updates on Bootstrap&#039;s development and chat with the project maintainers and community members.

- Follow [@getbootstrap on Twitter](https://twitter.com/getbootstrap).
- Read and subscribe to [The Official Bootstrap Blog](https://blog.getbootstrap.com/).
- Ask questions and explore [our GitHub Discussions](https://github.com/twbs/bootstrap/discussions).
- Discuss, ask questions, and more on [the community Discord](https://discord.gg/bZUvakRU3M) or [Bootstrap subreddit](https://www.reddit.com/r/bootstrap/).
- Chat with fellow Bootstrappers in IRC. On the `irc.libera.chat` server, in the `#bootstrap` channel.
- Implementation help may be found at Stack Overflow (tagged [`bootstrap-5`](https://stackoverflow.com/questions/tagged/bootstrap-5)).
- Developers should use the keyword `bootstrap` on packages which modify or add to the functionality of Bootstrap when distributing through [npm](https://www.npmjs.com/browse/keyword/bootstrap) or similar delivery mechanisms for maximum discoverability.


## Versioning

For transparency into our release cycle and in striving to maintain backward compatibility, Bootstrap is maintained under [the Semantic Versioning guidelines](https://semver.org/). Sometimes we screw up, but we adhere to those rules whenever possible.

See [the Releases section of our GitHub project](https://github.com/twbs/bootstrap/releases) for changelogs for each release version of Bootstrap. Release announcement posts on [the official Bootstrap blog](https://blog.getbootstrap.com/) contain summaries of the most noteworthy changes made in each release.


## Creators

**Mark Otto**

- &lt;https://twitter.com/mdo&gt;
- &lt;https://github.com/mdo&gt;

**Jacob Thornton**

- &lt;https://twitter.com/fat&gt;
- &lt;https://github.com/fat&gt;


## Thanks

&lt;a href=&quot;https://www.browserstack.com/&quot;&gt;
  &lt;img src=&quot;https://live.browserstack.com/images/opensource/browserstack-logo.svg&quot; alt=&quot;BrowserStack&quot; width=&quot;192&quot; height=&quot;42&quot;&gt;
&lt;/a&gt;

Thanks to [BrowserStack](https://www.browserstack.com/) for providing the infrastructure that allows us to test in real browsers!

&lt;a href=&quot;https://www.netlify.com/&quot;&gt;
  &lt;img src=&quot;https://www.netlify.com/v3/img/components/full-logo-light.svg&quot; alt=&quot;Netlify&quot; width=&quot;147&quot; height=&quot;40&quot;&gt;
&lt;/a&gt;

Thanks to [Netlify](https://www.netlify.com/) for providing us with Deploy Previews!


## Sponsors

Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/bootstrap#sponsor)]

[![OC sponsor 0](https://opencollective.com/bootstrap/sponsor/0/avatar.svg)](https://opencollective.com/bootstrap/sponsor/0/website)
[![OC sponsor 1](https://opencollective.com/bootstrap/sponsor/1/avatar.svg)](https://opencollective.com/bootstrap/sponsor/1/website)
[![OC sponsor 2](https://opencollective.com/bootstrap/sponsor/2/avatar.svg)](https://opencollective.com/bootstrap/sponsor/2/website)
[![OC sponsor 3](https://opencollective.com/bootstrap/sponsor/3/avatar.svg)](https://opencollective.com/bootstrap/sponsor/3/website)
[![OC sponsor 4](https://opencollective.com/bootstrap/sponsor/4/avatar.svg)](https://opencollective.com/bootstrap/sponsor/4/website)
[![OC sponsor 5](https://opencollective.com/bootstrap/sponsor/5/avatar.svg)](https://opencollective.com/bootstrap/sponsor/5/website)
[![OC sponsor 6](https://opencollective.com/bootstrap/sponsor/6/avatar.svg)](https://opencollective.com/bootstrap/sponsor/6/website)
[![OC sponsor 7](https://opencollective.com/bootstrap/sponsor/7/avatar.svg)](https://opencollective.com/bootstrap/sponsor/7/website)
[![OC sponsor 8](https://opencollective.com/bootstrap/sponsor/8/avatar.svg)](https://opencollective.com/bootstrap/sponsor/8/website)
[![OC sponsor 9](https://opencollective.com/bootstrap/sponsor/9/avatar.svg)](https://opencollective.com/bootstrap/sponsor/9/website)


## Backers

Thank you to all our backers! 🙏 [[Become a backer](https://opencollective.com/bootstrap#backer)]

[![Backers](https://opencollective.com/bootstrap/backers.svg?width=890)](https://opencollective.com/bootstrap#backers)


## Copyright and license

Code and documentation copyright 2011-2025 the [Bootstrap Authors](https://github.com/twbs/bootstrap/graphs/contributors). Code released under the [MIT License](https://github.com/twbs/bootstrap/blob/main/LICENSE). Docs released under [Creative Commons](https://creativecommons.org/licenses/by/3.0/).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[FreeTubeApp/FreeTube]]></title>
            <link>https://github.com/FreeTubeApp/FreeTube</link>
            <guid>https://github.com/FreeTubeApp/FreeTube</guid>
            <pubDate>Sat, 29 Mar 2025 00:04:14 GMT</pubDate>
            <description><![CDATA[An Open Source YouTube app for privacy]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/FreeTubeApp/FreeTube">FreeTubeApp/FreeTube</a></h1>
            <p>An Open Source YouTube app for privacy</p>
            <p>Language: JavaScript</p>
            <p>Stars: 17,361</p>
            <p>Forks: 1,113</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
 &lt;img alt=&quot;&quot; src=&quot;/_icons/logoColor.svg&quot; width=500 align=&quot;center&quot;&gt;
&lt;/p&gt;

FreeTube is an open source desktop YouTube player built with privacy in mind.
Use YouTube without advertisements and prevent Google from tracking you with their cookies and JavaScript.
Available for Windows (10 and later), Mac (macOS 11 and later) &amp; Linux thanks to Electron.

&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/FreeTubeApp/FreeTube/releases&quot;&gt;Download FreeTube&lt;/a&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/FreeTubeApp/FreeTube/actions/workflows/build.yml&quot;&gt;
    &lt;img alt=&#039;Build status&#039; src=&quot;https://github.com/FreeTubeApp/FreeTube/actions/workflows/build.yml/badge.svg?branch=development&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://hosted.weblate.org/engage/free-tube/&quot;&gt;
    &lt;img src=&quot;https://hosted.weblate.org/widgets/free-tube/-/svg-badge.svg&quot; alt=&quot;Translation status&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;hr&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;#screenshots&quot;&gt;Screenshots&lt;/a&gt; &amp;bull; &lt;a href=&quot;#how-does-it-work&quot;&gt;How does it work?&lt;/a&gt; &amp;bull; &lt;a href=&quot;#features&quot;&gt;Features&lt;/a&gt; &amp;bull; &lt;a href=&quot;#download-links&quot;&gt;Download Links&lt;/a&gt; &amp;bull; &lt;a href=&quot;#contributing&quot;&gt;Contributing&lt;/a&gt; &amp;bull; &lt;a href=&quot;#localization&quot;&gt;Localization&lt;/a&gt; &amp;bull; &lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt; &amp;bull; &lt;a href=&quot;#donate&quot;&gt;Donate&lt;/a&gt; &amp;bull; &lt;a href=&quot;#license&quot;&gt;License&lt;/a&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://freetubeapp.io/&quot;&gt;Website&lt;/a&gt; &amp;bull; &lt;a href=&quot;https://blog.freetubeapp.io/&quot;&gt;Blog&lt;/a&gt; &amp;bull; &lt;a href=&quot;https://docs.freetubeapp.io/&quot;&gt;Documentation&lt;/a&gt; &amp;bull; &lt;a href=&quot;https://docs.freetubeapp.io/faq/&quot;&gt;FAQ&lt;/a&gt; &amp;bull; &lt;a href=&quot;https://github.com/FreeTubeApp/FreeTube/discussions&quot;&gt;Discussions&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&gt; [!NOTE] 
&gt; FreeTube is currently in Beta. While it should work well for most users, there are still bugs and missing features that need to be addressed.
&gt;
&gt; If you have an idea or if you found a bug, please submit a [GitHub issue](https://github.com/FreeTubeApp/FreeTube/issues/new/choose) so that we can track it.  Please search [the existing issues](https://github.com/FreeTubeApp/FreeTube/issues) before submitting to prevent duplicates!

## Screenshots
&lt;img src=&quot;https://i.imgur.com/zFgZUUV.png&quot; width=300&gt; &lt;img src=&quot;https://i.imgur.com/9evYHgN.png&quot; width=300&gt; &lt;img src=&quot;https://i.imgur.com/yT2UzPa.png&quot; width=300&gt; &lt;img src=&quot;https://i.imgur.com/47zIEt4.png&quot; width=300&gt; &lt;img src=&quot;https://i.imgur.com/hFB2fKC.png&quot; width=300&gt;

## How does it work?
FreeTube uses a built in extractor to grab and serve data / videos. The [Invidious API](https://github.com/iv-org/invidious) can also optionally be used. FreeTube does not use any official APIs to obtain data. While YouTube can still see your video requests, it can no
longer track you using cookies or JavaScript. Your subscriptions and history are stored locally on your computer and never sent out.

&gt; [!IMPORTANT]  
&gt; Using a VPN or Tor is highly recommended to hide your IP while using FreeTube.

## Features
* Watch videos without ads
* Use YouTube without Google tracking you using cookies and JavaScript
* Two extractor APIs to choose from (Built in or Invidious)
* Subscribe to channels without an account
* Connect to an externally setup proxy such as Tor
* View and search your local subscriptions, history, and saved videos
* Organize your subscriptions into &quot;Profiles&quot; to create a more focused feed
* Export &amp; import subscriptions
* Youtube Trending
* Youtube Chapters
* Most popular videos page based on the set Invidious instance
* SponsorBlock 
* Open videos from your browser directly into FreeTube (with extension)
* Watch videos using an external player
* Full Theme support
* Make a screenshot of a video
* Multiple windows
* Mini Player (Picture-in-Picture)
* Keyboard shortcuts
* Option to show only family friendly content
* Show/hide functionality or elements within the app using the distraction free settings
* View channel community posts

### Browser Extensions
The following extensions open YouTube links directly in FreeTube:

- [LibRedirect](https://libredirect.github.io/)
- [RedirectTube](https://github.com/MStankiewiczOfficial/RedirectTube)

LibRedirect automatically redirect YouTube links to FreeTube.
&gt; [!IMPORTANT]
&gt; To ensure proper functionality, select FreeTube as Frontend in the Services settings of the extension.

RedirectTube, doesn’t automatically open YouTube links in FreeTube. Instead, it adds buttons to the toolbar and context menu, which you can click to open videos in FreeTube manually.

- Download LibRedirect from [Mozilla Add-ons](https://addons.mozilla.org/firefox/addon/libredirect/) (for Firefox based-browsers) or [developer&#039;s website](https://libredirect.github.io/download_chromium.html) (for Chrome and Chromium-based browsers).

- Download RedirectTube from [Mozilla Add-ons](https://addons.mozilla.org/firefox/addon/redirecttube/) (for Firefox based-browsers).

&gt; [!NOTE]
&gt; These extensions do not work on Linux portable builds!
&gt;
&gt; If you have issues with the extension working with FreeTube, please create an issue in this repository instead of the extension repository.

## Download Links
### Official Downloads

&gt; [!CAUTION]
&gt; FreeTube is only supported on Windows 10 and later, macOS 11 and above, and various Linux distributions. Installing it on unsupported systems may result in unexpected issues.

* [GitHub Releases](https://github.com/FreeTubeApp/FreeTube/releases)

* [FreeTube Website](https://freetubeapp.io/#download)

* Flatpak on Flathub: [Download](https://flathub.org/apps/details/io.freetubeapp.FreeTube) and [Source Code](https://github.com/flathub/io.freetubeapp.FreeTube)

#### Automated Builds (Nightly / Weekly)
&gt; [!WARNING]
&gt; Use these builds at your own risk. These are pre-release versions and are only intended for people that want to test changes early and are willing to accept that things could break from one build to another. 

Builds are automatically created from changes to our development branch via [GitHub Actions](https://github.com/FreeTubeApp/FreeTube/actions?query=workflow%3ABuild).

The first build with a green check mark is the latest build.  

&gt; [!IMPORTANT]
&gt; You will need to have a GitHub account to download these builds.

### Unofficial Downloads
&gt; [!WARNING]
&gt; These builds are maintained by the community. While they should be safe, download at your own risk. There may be issues with using these versus the official builds. Any issues specific with these builds should be sent to their respective maintainer. Make sure u always try an [official download](https://github.com/freetubeapp/freetube/#official-downloads) before reporting your issue to us!

* Arch User Repository (AUR): [Download](https://aur.archlinux.org/packages/freetube-bin/)

* Chocolatey: [Download](https://chocolatey.org/packages/freetube/)

* FreeTubeAndroid (FreeTube port for Android and PWA): [Download](https://github.com/MarmadileManteater/FreeTubeAndroid/releases) and [Source Code](https://github.com/MarmadileManteater/FreeTubeAndroid)

* Homebrew Formulae (Mac only): [Download](https://formulae.brew.sh/cask/freetube)

* makedeb Package Repository (MPR): [Download](https://mpr.makedeb.org/packages/freetube-bin)

* Nix Packages: [Download](https://search.nixos.org/packages?query=freetube)

* PortableApps (Windows Only): [Download](https://github.com/rddim/FreeTubePortable/releases) and [Source Code](https://github.com/rddim/FreeTubePortable)

* Scoop (Windows Only): [Usage](https://github.com/ScoopInstaller/Scoop)

* Snap: [Download](https://snapcraft.io/freetube) and [Source Code](https://git.launchpad.net/freetube)

* WAPT: [Download](https://wapt.tranquil.it/store/tis-freetube)

* Windows Package Manager (winget): [Usage](https://docs.microsoft.com/en-us/windows/package-manager/winget/)

## Contributing
Thank you very much to the [People and Projects](https://docs.freetubeapp.io/credits/) that make FreeTube possible!

If you like to get your hands dirty and want to contribute, we would love to
have your help.  Send a pull request and someone will review your code. 

&gt; [!IMPORTANT]
&gt; Please follow the [Contribution Guidelines](https://github.com/FreeTubeApp/FreeTube/blob/development/CONTRIBUTING.md) before sending your pull request.

## Localization
&lt;a href=&quot;https://hosted.weblate.org/engage/free-tube/&quot;&gt;
&lt;img src=&quot;https://hosted.weblate.org/widgets/free-tube/-/287x66-grey.png&quot; alt=&quot;Translation status&quot; /&gt;
&lt;/a&gt;

We are actively looking for translations!  We use [Weblate](https://hosted.weblate.org/engage/free-tube/) to make it easy for translators to get involved.  Click on the badge above to learn how to get involved.

For the Linux Flatpak, the desktop entry comment string can be translated at our [Flatpak repository](https://github.com/flathub/io.freetubeapp.FreeTube/blob/master/io.freetubeapp.FreeTube.desktop).

## Contact
If you ever have any questions, feel free to ask it on our [Discussions](https://github.com/FreeTubeApp/FreeTube/discussions) page.  Alternatively, you can email us at FreeTubeApp@protonmail.com or you can join our [Matrix Community](https://matrix.to/#/+freetube:matrix.org).  

&gt; [!IMPORTANT]
&gt; Don&#039;t forget to check out the [rules](https://docs.freetubeapp.io/community/matrix/) before joining.

## Donate
If you enjoy using FreeTube, you&#039;re welcome to leave a donation using the following method.  

* Bitcoin Address: `1Lih7Ho5gnxb1CwPD4o59ss78pwo2T91eS`

While your donations are much appreciated, only donate if you really want to.  Donations are used for keeping the website up and running and eventual code signing costs. 

&gt; [!TIP]
&gt; If you are using the Invidious API then we recommend that you donate to the instance that you use. You can also donate to the [Invidious team](https://invidious.io/donate/) or the [Local API developer](https://github.com/sponsors/LuanRT).

## License
[![GNU AGPLv3 Image](https://www.gnu.org/graphics/agplv3-155x51.png)](https://www.gnu.org/licenses/agpl-3.0.html)  

FreeTube is Free Software: You can use, study share and improve it at your
will. Specifically you can redistribute and/or modify it under the terms of the
[GNU Affero General Public License](https://www.gnu.org/licenses/agpl-3.0.html) as
published by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.  
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[amzn/style-dictionary]]></title>
            <link>https://github.com/amzn/style-dictionary</link>
            <guid>https://github.com/amzn/style-dictionary</guid>
            <pubDate>Sat, 29 Mar 2025 00:04:13 GMT</pubDate>
            <description><![CDATA[A build system for creating cross-platform styles.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/amzn/style-dictionary">amzn/style-dictionary</a></h1>
            <p>A build system for creating cross-platform styles.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,108</p>
            <p>Forks: 584</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>&lt;pre&gt;
&lt;a href=&quot;https://styledictionary.com/version-4/migration/&quot;&gt;What&#039;s new in Style Dictionary 4.0!&lt;/a&gt;
&lt;/pre&gt;

&lt;img src=&quot;docs/src/assets/logo.png&quot; alt=&quot;Style Dictionary logo and mascot&quot; title=&quot;&amp;quot;Pascal&amp;quot;&quot; width=&quot;100&quot; align=&quot;right&quot; /&gt;

[![npm version](https://img.shields.io/npm/v/style-dictionary.svg?style=flat-square)](https://badge.fury.io/js/style-dictionary)
![license](https://img.shields.io/npm/l/style-dictionary.svg?style=flat-square)
[![PRs welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](https://github.com/amzn/style-dictionary/blob/main/CONTRIBUTING.md#submitting-pull-requests)
[![GitHub Workflow Status](https://img.shields.io/github/workflow/status/amzn/style-dictionary/Test?style=flat-square)](https://github.com/amzn/style-dictionary/actions/workflows/test.yml)
[![downloads](https://img.shields.io/npm/dm/style-dictionary.svg?style=flat-square)](https://www.npmjs.com/package/style-dictionary)

# Style Dictionary

&gt; _Style once, use everywhere._

A Style Dictionary uses design tokens to define styles once and use those styles on any platform or language. It provides a single place to create and edit your styles, and exports these tokens to all the places you need - iOS, Android, CSS, JS, HTML, sketch files, style documentation, etc. It is available as a CLI through npm, but can also be used like any normal node module if you want to extend its functionality.

When you are managing user experiences, it can be quite challenging to keep styles consistent and synchronized across multiple development platforms and devices. At the same time, designers, developers, PMs and others must be able to have consistent and up-to-date style documentation to enable effective work and communication. Even then, mistakes inevitably happen and the design may not be implemented accurately. Style Dictionary solves this by automatically generating style definitions across all platforms from a single source - removing roadblocks, errors, and inefficiencies across your workflow.

For detailed usage head to https://amzn.github.io/style-dictionary

## Watch the Demo on YouTube

[![Watch the video](/docs/src/assets/fake_player.png)](http://youtu.be/1HREvonfqhY)

## Experiment in the playground

Try the browser-based Style Dictionary playground: [https://www.style-dictionary-play.dev/](https://www.style-dictionary-play.dev/), built by the folks at [\&lt;div\&gt;RIOTS](https://divriots.com/).

## Contents

- [Installation](#installation)
- [Usage](#usage)
- [Example](#example)
- [Quick Start](#quick-start)
- [Design Tokens](#design-tokens)
- [Extending](#extending)
- [Contributing](#contributing)
- [License](#license)

## Installation

_Note that you must have node (and npm) installed._

If you want to use the CLI, you can install it globally via npm:

```bash
$ npm install -g style-dictionary
```

Or you can install it like a normal npm dependency. This is a build tool and you are most likely going to want to save it as a dev dependency:

```bash
$ npm install -D style-dictionary
```

If you want to install it with yarn:

```bash
$ yarn add style-dictionary --dev
```

## Usage

### CLI

```bash
$ style-dictionary build
```

Call this in the root directory of your project. The only thing needed is a `config.json` file. There are also arguments:

| Flag                    | Short Flag | Description                                                |
| ----------------------- | ---------- | ---------------------------------------------------------- |
| --config \[path\]       | -c         | Set the config file to use. Must be a .json file           |
| --platform \[platform\] | -p         | Only build a specific platform defined in the config file. |
| --help                  | -h         | Display help content                                       |
| --version               | -v         | Display the version                                        |

### Node

You can also use the style dictionary build system in node if you want to [extend](#extending) the functionality or use it in another build system like Grunt or Gulp.

```javascript
const StyleDictionary = require(&#039;style-dictionary&#039;).extend(&#039;config.json&#039;);

StyleDictionary.buildAllPlatforms();
```

The `.extend()` method is an overloaded method that can also take an object with the configuration in the same format as a config.json file.

```javascript
import { formats, transformGroups } from &#039;style-dictionary/enums&#039;;

const StyleDictionary = require(&#039;style-dictionary&#039;).extend({
  source: [&#039;tokens/**/*.json&#039;],
  platforms: {
    scss: {
      transformGroup: transformGroups.scss,
      buildPath: &#039;build/&#039;,
      files: [
        {
          destination: &#039;variables.scss&#039;,
          format: formats.scssVariables,
        },
      ],
    },
    // ...
  },
});

StyleDictionary.buildAllPlatforms();
```

## Example

[Take a look at some of our examples](examples/)

A style dictionary is a collection of design tokens, key/value pairs that describe stylistic attributes like colors, sizes, icons, motion, etc. A style dictionary defines these design tokens in JSON or Javascript files, and can also include static assets like images and fonts. Here is a basic example of what the package structure can look like:

```
├── config.json
├── tokens/
│   ├── size/
│       ├── font.json
│   ├── color/
│       ├── font.json
│   ...
├── assets/
│   ├── fonts/
│   ├── images/
```

### config.json

This tells the style dictionary build system how and what to build. The default file path is `config.json` or `config.js` in the root of the project, but you can name it whatever you want by passing in the `--config` flag to the [CLI](https://styledictionary.com/getting-started/using_the_cli/).

```json
{
  &quot;source&quot;: [&quot;tokens/**/*.json&quot;],
  &quot;platforms&quot;: {
    &quot;scss&quot;: {
      &quot;transformGroup&quot;: &quot;scss&quot;,
      &quot;buildPath&quot;: &quot;build/&quot;,
      &quot;files&quot;: [
        {
          &quot;destination&quot;: &quot;scss/_variables.scss&quot;,
          &quot;format&quot;: &quot;scss/variables&quot;
        }
      ]
    },
    &quot;android&quot;: {
      &quot;transformGroup&quot;: &quot;android&quot;,
      &quot;buildPath&quot;: &quot;build/android/&quot;,
      &quot;files&quot;: [
        {
          &quot;destination&quot;: &quot;font_dimens.xml&quot;,
          &quot;format&quot;: &quot;android/fontDimens&quot;
        }
      ]
    }
  }
}
```

| Property                             | Type              | Description                                                                                                                                                                                                                                                                   |
| :----------------------------------- | :---------------- | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| source                               | Array             | An array of file path [globs](https://github.com/isaacs/node-glob) to design token files. Style Dictionary will do a deep merge of all of the token files, allowing you to organize your files files however you want.                                                        |
| include                              | Array             | An array of file path [globs](https://github.com/isaacs/node-glob) to design token files that contain default styles. The Style Dictionary uses this as a base collection of tokens. The tokens found using the &quot;source&quot; attribute will overwrite tokens found using include. |
| platforms                            | Object            | Sets of platform files to be built.                                                                                                                                                                                                                                           |
| platform.transformGroup              | String (optional) | Apply a group of transforms to the tokens, must either define this or `transforms`.                                                                                                                                                                                           |
| platform.transforms                  | Array (optional)  | Transforms to apply sequentially to all tokens. Can be a built-in one or you can create your own.                                                                                                                                                                             |
| platform.buildPath                   | String (optional) | Base path to build the files, must end with a trailing slash.                                                                                                                                                                                                                 |
| platform.files                       | Array (optional)  | Files to be generated for this platform.                                                                                                                                                                                                                                      |
| platform.file.destination            | String (optional) | Location to build the file, will be appended to the buildPath.                                                                                                                                                                                                                |
| platform.file.format                 | String (optional) | Format used to generate the file. Can be a built-in one or you can create your own. [More on formats](https://styledictionary.com/reference/hooks/formats/)                                                                                                                   |
| platform.file.options                | Object (optional) | A set of extra options associated with the file.                                                                                                                                                                                                                              |
| platform.file.options.showFileHeader | Boolean           | If the generated file should have a &quot;Do not edit + Timestamp&quot; header (where the format supports it). By default is &quot;true&quot;.                                                                                                                                                    |

### Design Tokens

```json
{
  &quot;size&quot;: {
    &quot;font&quot;: {
      &quot;small&quot;: { &quot;value&quot;: &quot;10px&quot; },
      &quot;medium&quot;: { &quot;value&quot;: &quot;16px&quot; },
      &quot;large&quot;: { &quot;value&quot;: &quot;24px&quot; },
      &quot;base&quot;: { &quot;value&quot;: &quot;{size.font.medium}&quot; }
    }
  }
}
```

Here we are creating some basic font size design tokens. The style definition size.font.small.value is &quot;10px&quot; for example. The style definition size.font.base.value is automatically aliased to the value found in size.font.medium.value and both of those resolve to &quot;16px&quot;.

Now what the style dictionary build system will do with this information is convert it to different formats, enabling these values to be used in any type of codebase. From this one file you can generate any number of files like:

```scss
$size-font-small: 10px;
$size-font-medium: 16px;
$size-font-large: 24px;
$size-font-base: 16px;
```

```xml
&lt;dimen name=&quot;font-small&quot;&gt;10sp&lt;/dimen&gt;
&lt;dimen name=&quot;font-medium&quot;&gt;16sp&lt;/dimen&gt;
&lt;dimen name=&quot;font-large&quot;&gt;24sp&lt;/dimen&gt;
&lt;dimen name=&quot;font-base&quot;&gt;16sp&lt;/dimen&gt;
```

```objc
float const SizeFontSmall = 10.00f;
float const SizeFontMedium = 16.00f;
float const SizeFontLarge = 24.00f;
float const SizeFontBase = 16.00f;
```

## Quick Start

The style dictionary framework comes with some example code to get you started. Install the node module globally, create a directory and `cd` into it.

```bash
$ npm i -g style-dictionary
$ mkdir MyStyleDictionary
$ cd MyStyleDictionary
```

Now run:

```bash
$ style-dictionary init basic
```

This command will copy over the example files found in [example](examples/) in this repo. Now you have an example project set up. You can make changes to the style dictionary and rebuild the project by running:

```bash
$ style-dictionary build
```

Take a look at the documentation for the example code.

## Design Tokens

A design token is an attribute to describe something visually. It is atomic (it cannot be broken down further). Design tokens have a name, a value, and optional attributes or metadata. The name of a token can be anything, but we have a proposed naming structure that we find works really well in the next section.

### Category/Type/Item Structure

While not exactly necessary, we feel this classification structure of design tokens makes the most sense semantically. Design tokens can be organized into a hierarchical tree structure with the top level, category, defining the primitive nature of the token. For example, we have the color category and every token underneath is always a color. As you proceed down the tree to type, item, sub-item, and state, you get more specific about what that color is. Is it a background color, a text color, or a border color? What kind of text color is it? You get the point. Now you can structure your token json files like simple objects:

```json
{
  &quot;size&quot;: {
    &quot;font&quot;: {
      &quot;base&quot;: { &quot;value&quot;: &quot;16&quot; },
      &quot;large&quot;: { &quot;value&quot;: &quot;20&quot; }
    }
  }
}
```

The CTI is implicit in the structure, the category and type is &#039;size&#039; and &#039;font&#039;, and there are 2 tokens &#039;base&#039; and &#039;large&#039;.

Structuring design tokens in this manner gives us consistent naming and accessing of these tokens. You don&#039;t need to remember if it is button_color_error or error_button_color, it is color_background_button_error!

You can organize and name your design tokens however you want, there are no restrictions. But we have a good amount of helpers if you do use this structure, like the &#039;attribute/cti&#039; transform which adds attributes to the token of its CTI based on the path in the object. There are a lot of name transforms as well for when you want a flat structure like for Sass variables.

Also, the CTI structure provides a good mechanism to target transforms for specific kinds of tokens. All of the transforms provided by the framework use the CTI of a token to know if it should be applied. For instance, the &#039;color/hex&#039; transform only applies to tokens of the category &#039;color&#039;.

You can also add a _comment_ to a design token:

```json
{
  &quot;size&quot;: {
    &quot;font&quot;: {
      &quot;base&quot;: {
        &quot;value&quot;: &quot;16&quot;,
        &quot;comment&quot;: &quot;the base size of the font&quot;
      },
      &quot;large&quot;: {
        &quot;value&quot;: &quot;20&quot;,
        &quot;comment&quot;: &quot;the large size of the font&quot;
      }
    }
  }
}
```

The comment will appear in the output files, where relevant or the output format supports comments.

## Extending

The style dictionary build system is made to be extended. We don&#039;t know exactly how everyone will want to use style dictionaries in their project, which is why you can create custom transforms and formats.

```javascript
const StyleDictionary = require(&#039;style-dictionary&#039;).extend(&#039;config.json&#039;);
import { transforms, transformTypes } from &#039;style-dictionary/enums&#039;;

StyleDictionary.registerTransform({
  name: transforms.timeSeconds,
  type: transformTypes.value,
  filter: function (token) {
    return token.type === &#039;time&#039;;
  },
  transform: function (token) {
    return (parseInt(token.original.value) / 1000).toString() + &#039;s&#039;;
  },
});

StyleDictionary.buildAllPlatforms();
```

For more information on creating your own transforms and formats, take a look at our [docs](https://styledictionary.com).

## Version 4

In May 2021, we started [an issue / RFC, &quot;What would you like to see in Style-Dictionary 4.0?&quot;](https://github.com/amzn/style-dictionary/issues/643) to gather feedback on what the community would like to see.
Fortunately, in August 2023, the folks at [Tokens Studio](https://tokens.studio/) contacted us about co-maintaining this project, and leading the v4 release (and beyond)!

We have started working on the biggest and most important changes, like migrating to ESM, making the library browser-compatible out of the box, and supporting asynchronicity in Style-Dictionary&#039;s various APIs. There will be multiple prereleases to battle-test these changes before a final v4.0 is released.

You can follow [this roadmap board](https://github.com/orgs/amzn/projects/4/views/1?layout=board) to keep an eye on the developments for v4.0, we will also keep adding to this board when we encounter changes we&#039;d like to see in v4.0 that would entail a breaking change. Absence of something in this roadmap does not mean we don&#039;t see value in it, but rather that it could also be added in a (non-breaking) minor release within v4.x.x.

### From the folks at Tokens Studio

Hi everyone! I&#039;m Joren from Tokens Studio, a big fan of this project (see [Style-Dictionary-Play](https://www.style-dictionary-play.dev/), [Token Configurator](https://configurator.tokens.studio/), [sd-transforms](https://github.com/tokens-studio/sd-transforms)) and the main pusher behind leading a 4.0 release of this project, I think it would be good to explain from our perspective why we&#039;ve made the move to collaborate with Amazon on this.

At Tokens Studio, we&#039;re a huge fan of Design Tokens and the workflows they enable. We believe exporting design tokens to various platforms is a key ingredient in ensuring that the journey from design to implementation code is smooth.
In our minds, Style-Dictionary has been the most popular and most flexible library for reaching that goal, and so we want to build on top of that.
Rather than starting our own spinoff tool, we much prefer bringing Style-Dictionary further, together with its vibrant community of contributors, which is why we reached out to Danny Banks.

I think it&#039;s important to stress that it is our shared vision to keep Style-Dictionary as an agnostic (so not &quot;Tokens Studio&quot;-specific) and flexible tool. As Tokens Studio, while we are highly incentivized to see this project progress further to strengthen our product journey, we value the open source community highly and want to make sure this library remains the go-to tool for exporting Design Tokens, whether you use Tokens Studio or not.

We are very open to feedback and collaboration, feel free to reach out to us in [our Slack](https://join.slack.com/t/tokens-studio/shared_invite/zt-1p8ea3m6t-C163oJcN9g3~YZTKRgo2hg) -&gt; `style-dictionary-v4` channel!

## Mascot

The mascot for Style Dictionary is [&quot;Pascal&quot;](https://github.com/amzn/style-dictionary/issues/97) the chameleon (seen below). You can also find them blending in as the logo throughout the documentation.

&lt;img src=&quot;docs/src/assets/logo.png&quot; alt=&quot;Style Dictionary logo and mascot&quot; title=&quot;&amp;quot;Pascal&amp;quot;&quot; width=&quot;240&quot; /&gt;

## Contributing

Please help make this framework better. For more information take a look at [CONTRIBUTING.md](CONTRIBUTING.md)

## License

[Apache 2.0](LICENSE)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[xszyou/Fay]]></title>
            <link>https://github.com/xszyou/Fay</link>
            <guid>https://github.com/xszyou/Fay</guid>
            <pubDate>Sat, 29 Mar 2025 00:04:12 GMT</pubDate>
            <description><![CDATA[fay是一个帮助数字人（2.5d、3d、移动、pc、网页）或大语言模型（openai兼容、deepseek）连通业务系统的agent框架。]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/xszyou/Fay">xszyou/Fay</a></h1>
            <p>fay是一个帮助数字人（2.5d、3d、移动、pc、网页）或大语言模型（openai兼容、deepseek）连通业务系统的agent框架。</p>
            <p>Language: JavaScript</p>
            <p>Stars: 10,604</p>
            <p>Forks: 1,971</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre>
&lt;div align=&quot;center&quot;&gt;
    &lt;br&gt;
    &lt;img src=&quot;readme/icon.png&quot; alt=&quot;Fay&quot;&gt;
    &lt;h1&gt;FAY&lt;/h1&gt;
	&lt;h3&gt;Fay数字人框架&lt;/h3&gt;
&lt;/div&gt;

！！重要通知：我们已经把Fay的三个版本合并成1个，并致力提供更稳定更全面的功能。

我们致力于思考面向终端的数字人落地应用，并通过完整代码把思考结果呈现给大家。Fay数字人框架，向上适配各种数字人模型技术，向下接入各式大语言模型，并且便于更换诸如TTS、ASR等模型，为单片机、app、网站提供全面的数字人应用接口。      
更新日志：https://qqk9ntwbcit.feishu.cn/wiki/UlbZwfAXgiKSquk52AkcibhHngg
文档：https://qqk9ntwbcit.feishu.cn/wiki/JzMJw7AghiO8eHktMwlcxznenIg


## **功能特点**



- 完全开源，商用免责
- 支持全离线使用
- 全时流式的支持
- 自由匹配数字人模型、大语言模型、ASR、TTS模型
- 支持数字人自动播报模式（虚拟教师、虚拟主播、新闻播报）
- 支持任意终端使用：单片机、app、网站、大屏、成熟系统接入等
- 支持多用户多路并发
- 提供文字沟通接口、声音沟通接口、数字人模型接口、管理控制接口、自动播报接口、意图接口
- 支持语音指令灵活配置执行
- 支持自定义知识库、自定义问答对、自定义人设信息
- 支持唤醒及打断对话
- 支持服务器及单机模式
- 支持机器人表情输出
- 支持react agent自主决策执行、主动对话
- 支持后台静默启动
- 支持deepseek

###               

## **Fay数字人框架**

![](readme/chat.png)

![](readme/controller.png)






## **源码启动**


### **环境** 
- Python 3.9、3.10、3.11、3.12
- Windows、macos、linux

### **安装依赖**

```shell
pip install -r requirements.txt
```

### **配置**
+ 依照说明修改 `./system.conf` 文件

### **启动**
启动Fay控制器
```shell
python main.py
```



## **或docker 启动**

1. 下载助理版
https://github.com/xszyou/Fay
2.  修改 `./system.conf` 文件
3. 删除requirements.txt下pyqt5~=5.15.6

build （修改配置文件后，需要重新build）
```shell
docker build  -t fay ./fay-assistant-edition
```
run
```shell
docker run -it --rm -p 5000:5000 -p 10001:10001 -p 10002:10002 -p 10003:10003 fay
```


## **高级玩法**

![](readme/interface.png)



### ***使用数字人（非必须）***

ue: https://github.com/xszyou/fay-ue5

unity：https://qqk9ntwbcit.feishu.cn/wiki/Se9xw04hUiss00kb2Lmci1BVnM9

metahuman-stream（2d）：https://qqk9ntwbcit.feishu.cn/wiki/Ik1kwO9X5iilnGkFwRhcnmtvn3e

duix（android)：https://qqk9ntwbcit.feishu.cn/wiki/Ik1kwO9X5iilnGkFwRhcnmtvn3e()

aibote(windows cpu克隆人)：[‬‍‬‍⁠﻿‍‍‍‌﻿﻿https://qqk9ntwbcit.feishu.cn/wiki/ULaywzVRti0HXWkhCzacoSPAnIg



### ***集成到自家产品（非必须）***
接口：https://qqk9ntwbcit.feishu.cn/wiki/Mcw3wbA3RiNZzwkexz6cnKCsnhh



### **联系**

**交流群及资料教程**关注公众号 **fay数字人**（**请先star本仓库**）

![](readme/gzh.jpg)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[expressjs/express]]></title>
            <link>https://github.com/expressjs/express</link>
            <guid>https://github.com/expressjs/express</guid>
            <pubDate>Sat, 29 Mar 2025 00:04:11 GMT</pubDate>
            <description><![CDATA[Fast, unopinionated, minimalist web framework for node.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/expressjs/express">expressjs/express</a></h1>
            <p>Fast, unopinionated, minimalist web framework for node.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 66,627</p>
            <p>Forks: 18,002</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[ckeditor/ckeditor5]]></title>
            <link>https://github.com/ckeditor/ckeditor5</link>
            <guid>https://github.com/ckeditor/ckeditor5</guid>
            <pubDate>Sat, 29 Mar 2025 00:04:10 GMT</pubDate>
            <description><![CDATA[Powerful rich text editor framework with a modular architecture, modern integrations, and features like collaborative editing.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ckeditor/ckeditor5">ckeditor/ckeditor5</a></h1>
            <p>Powerful rich text editor framework with a modular architecture, modern integrations, and features like collaborative editing.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 9,978</p>
            <p>Forks: 3,726</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre>CKEditor&amp;nbsp;5 [![Tweet](https://img.shields.io/twitter/url/http/shields.io.svg?style=social)](https://twitter.com/intent/tweet?text=Check%20out%20CKEditor%205%20on%20GitHub&amp;url=https%3A%2F%2Fgithub.com%2Fckeditor%2Fckeditor5)&lt;!-- omit in toc --&gt;
===================================

[![npm version](https://badge.fury.io/js/ckeditor5.svg)](https://www.npmjs.com/package/ckeditor5)
[![Coverage Status](https://coveralls.io/repos/github/ckeditor/ckeditor5/badge.svg?branch=master)](https://coveralls.io/github/ckeditor/ckeditor5?branch=master)
[![CircleCI](https://circleci.com/gh/ckeditor/ckeditor5.svg?style=shield)](https://app.circleci.com/pipelines/github/ckeditor/ckeditor5?branch=master)
![TypeScript Support](https://badgen.net/badge/Built%20With/TypeScript/blue)

[![Join newsletter](https://img.shields.io/badge/join-newsletter-00cc99.svg)](http://eepurl.com/c3zRPr)
[![Follow Twitter](https://img.shields.io/badge/follow-twitter-00cc99.svg)](https://twitter.com/ckeditor)

CKEditor&amp;nbsp;5 is a modern JavaScript rich-text editor with MVC architecture, custom data model, and virtual DOM, written from scratch in TypeScript with excellent support for modern bundlers. It provides every type of WYSIWYG editing solution imaginable with extensive collaboration support. From editors similar to Google Docs and Medium to Slack or Twitter-like applications, all is possible within a single editing framework. As a market leader, it is constantly expanded and updated.

![A composition of screenshots presenting various features of CKEditor&amp;nbsp;5 rich text editor](https://raw.githubusercontent.com/ckeditor/ckeditor5/master/docs/assets/img/CKEditor-5.png)

## Table of contents&lt;!-- omit in toc --&gt;

- [Quick start](#quick-start)
	- [CKEditor 5 Builder](#ckeditor-5-builder)
	- [TypeScript support](#typescript-support)
	- [CKEditor 5 advanced installation](#ckeditor-5-advanced-installation)
		- [CKEditor 5 Framework](#ckeditor-5-framework)
- [Documentation and FAQ](#documentation-and-faq)
- [Releases](#releases)
- [Editing and collaboration features](#editing-and-collaboration-features)
- [Create a free account and test full potential](#create-a-free-account-and-test-full-potential)
- [Contributing and project organization](#contributing-and-project-organization)
	- [Ideas and discussions](#ideas-and-discussions)
	- [Development](#development)
	- [Reporting issues and feature requests](#reporting-issues-and-feature-requests)
- [License](#license)

## Quick start

Refer to the [Quick Start](https://ckeditor.com/docs/ckeditor5/latest/getting-started/installation/quick-start.html) guide to learn more about CKEditor&amp;nbsp;5 installation.

### CKEditor 5 Builder

The easiest way to start using CKEditor&amp;nbsp;5 with all the features you need is to prepare a customized setup with the [CKEditor&amp;nbsp;5 Builder](https://ckeditor.com/ckeditor-5/builder). All you need to do is choose the preferred editor type as a base, add all the required plugins, and download the ready-to-use package.

### TypeScript support

CKEditor&amp;nbsp;5 is a TypeScript project. Starting from v37.0.0, it offers native type definitions. Check out our dedicated guide to read more about [TypeScript support](https://ckeditor.com/docs/ckeditor5/latest/getting-started/setup/typescript-support.html).

### CKEditor 5 advanced installation

For more advanced users or those who need to integrate CKEditor&amp;nbsp;5 with their applications, we prepared integrations with popular JavaScript frameworks:
* [Angular](https://ckeditor.com/docs/ckeditor5/latest/getting-started/installation/angular.html)
* [React](https://ckeditor.com/docs/ckeditor5/latest/getting-started/installation/react/react.html)
* [Vue](https://ckeditor.com/docs/ckeditor5/latest/getting-started/installation/vuejs-v3.html)

#### CKEditor 5 Framework

CKEditor&amp;nbsp;5 is also a framework for creating custom-made rich text editing solutions.

To find out how to start building your editor from scratch go to the [CKEditor&amp;nbsp;5 Framework overview](https://ckeditor.com/docs/ckeditor5/latest/framework/index.html) section of the CKEditor&amp;nbsp;5 documentation.

## Documentation and FAQ

Extensive documentation dedicated to all things CKEditor&amp;nbsp;5-related is available. You will find basic guides that will help you kick off your project, advanced deep-dive tutorials to tailor the editor to your specific needs, and help sections with solutions and answers to any of your possible questions. To find out more refer to the following [CKEditor&amp;nbsp;5 documentation](https://ckeditor.com/docs/ckeditor5/latest/index.html) sections:

* [Installing CKEditor&amp;nbsp;5](https://ckeditor.com/docs/ckeditor5/latest/getting-started/installation/quick-start.html)
* [CKEditor&amp;nbsp;5 features](https://ckeditor.com/docs/ckeditor5/latest/features/index.html)
* [CKEditor&amp;nbsp;5 examples](https://ckeditor.com/docs/ckeditor5/latest/examples/index.html)
* [Updating CKEditor&amp;nbsp;5](https://ckeditor.com/docs/ckeditor5/latest/updating/index.html)
* [Getting CKEditor&amp;nbsp;5 support](https://ckeditor.com/docs/ckeditor5/latest/support/index.html)
* [CKEditor&amp;nbsp;5 Framework](https://ckeditor.com/docs/ckeditor5/latest/framework/index.html)
* [API documentation](https://ckeditor.com/docs/ckeditor5/latest/api/index.html)

For FAQ please go to the [CKEditor Ecosystem help center](https://support.ckeditor.com/hc/en-us).
For a high-level overview of the project see the [CKEditor Ecosystem website](https://ckeditor.com).

## Releases

Follow the [CKEditor&amp;nbsp;5 changelog](https://github.com/ckeditor/ckeditor5/blob/stable/CHANGELOG.md) for release details and check out the CKEditor&amp;nbsp;5 release blog posts on the [CKSource blog](https://ckeditor.com/blog/?category=releases&amp;tags=CKEditor-5) for important release highlights and additional information.

## Editing and collaboration features

The CKEditor&amp;nbsp;5 Framework offers access to a plethora of various plugins, supporting [all kinds of editing features](https://ckeditor.com/docs/ckeditor5/latest/features/index.html).

From collaborative editing support providing comments and tracking changes, through editing tools that let users control the content looks and structure such as tables, lists, and font styles, to accessibility helpers and multi-language support - CKEditor&amp;nbsp;5 is easily extensible and customizable. Special duty features like Markdown input and output and source editing, or export to PDF and Word provide solutions for users with diverse and specialized needs. Images and videos are easily supported and CKEditor&amp;nbsp;5 offers various upload and storage systems to manage these.

The number of options and the ease of customization and adding new ones make the editing experience even better for any environment and professional background.

Refer to the [CKEditor&amp;nbsp;5 Features](https://ckeditor.com/docs/ckeditor5/latest/features/index.html) documentation for details.

## Create a free account and test full potential

If you want to check full CKEditor&amp;nbsp;5 capabilities, including premium features, sign up for a [free non-commitment 14-day trial](https://portal.ckeditor.com/checkout?plan=free).

## Contributing and project organization

### Ideas and discussions

The development repository of CKEditor&amp;nbsp;5 is located at [https://github.com/ckeditor/ckeditor5](https://github.com/ckeditor/ckeditor5). This is the best place for bringing opinions and contributions. Letting the core team know if they are going in the right or wrong direction is great feedback and will be much appreciated!

### Development

CKEditor&amp;nbsp;5 is a modular, multi-package, [monorepo](https://en.wikipedia.org/wiki/Monorepo) project. It consists of several packages that create the editing framework, based on which the feature packages are implemented.

The [`ckeditor5`](https://github.com/ckeditor/ckeditor5) repository is the place that centralizes the development of CKEditor&amp;nbsp;5. It bundles different packages into a single place, adding the necessary helper tools for the development workflow, like the builder and the test runner. [Basic information on how to set up the development environment](https://ckeditor.com/docs/ckeditor5/latest/framework/contributing/development-environment.html) can be found in the documentation.

See the [official contributors&#039; guide](https://ckeditor.com/docs/ckeditor5/latest/framework/contributing/contributing.html) to learn how to contribute your code to the project.

### Reporting issues and feature requests

Report issues in [the `ckeditor5` repository](https://github.com/ckeditor/ckeditor5/issues). Read more in the [Getting support](https://ckeditor.com/docs/ckeditor5/latest/support/index.html#reporting-issues) section of the CKEditor 5 documentation.

## License

Licensed under a dual-license model, this software is available under:

* the [GNU General Public License Version 2 or later](https://www.gnu.org/licenses/gpl.html),
* or commercial license terms from CKSource Holding sp. z o.o.

For more information, see: [https://ckeditor.com/legal/ckeditor-licensing-options](https://ckeditor.com/legal/ckeditor-licensing-options).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[vercel/next.js]]></title>
            <link>https://github.com/vercel/next.js</link>
            <guid>https://github.com/vercel/next.js</guid>
            <pubDate>Sat, 29 Mar 2025 00:04:09 GMT</pubDate>
            <description><![CDATA[The React Framework]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vercel/next.js">vercel/next.js</a></h1>
            <p>The React Framework</p>
            <p>Language: JavaScript</p>
            <p>Stars: 130,650</p>
            <p>Forks: 28,015</p>
            <p>Stars today: 33 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[pt-plugins/PT-Plugin-Plus]]></title>
            <link>https://github.com/pt-plugins/PT-Plugin-Plus</link>
            <guid>https://github.com/pt-plugins/PT-Plugin-Plus</guid>
            <pubDate>Sat, 29 Mar 2025 00:04:08 GMT</pubDate>
            <description><![CDATA[PT 助手 Plus，为 Microsoft Edge、Google Chrome、Firefox 浏览器插件（Web Extensions），主要用于辅助下载 PT 站的种子。]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pt-plugins/PT-Plugin-Plus">pt-plugins/PT-Plugin-Plus</a></h1>
            <p>PT 助手 Plus，为 Microsoft Edge、Google Chrome、Firefox 浏览器插件（Web Extensions），主要用于辅助下载 PT 站的种子。</p>
            <p>Language: JavaScript</p>
            <p>Stars: 7,555</p>
            <p>Forks: 899</p>
            <p>Stars today: 0 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;https://github.com/pt-plugins/PT-Plugin-Plus/raw/master/public/assets/icon-128.png&quot;&gt;&lt;br/&gt;
&lt;a href=&quot;https://github.com/pt-plugins/PT-Plugin-Plus/releases?include_prereleases/latest&quot; title=&quot;GitHub Pre-releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/pt-plugins/PT-Plugin-Plus.svg?include_prereleases&amp;label=pre-release&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/pt-plugins/PT-Plugin-Plus/releases&quot; title=&quot;GitHub All Releases&quot;&gt;&lt;img alt=&quot;Releases&quot; src=&quot;https://img.shields.io/github/downloads/pt-plugins/PT-Plugin-Plus/total.svg?label=Downloads&quot;&gt;&lt;/a&gt;
&lt;img src=&quot;https://img.shields.io/badge/Used-TypeScript%20Vue-blue.svg&quot;&gt;
&lt;a href=&quot;https://github.com/pt-plugins/PT-Plugin-Plus/LICENSE&quot; title=&quot;GitHub license&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/pt-plugins/PT-Plugin-Plus.svg?label=License&quot; alt=&quot;GitHub license&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://t.me/joinchat/NZ9NCxPKXyby8f35rn_QTw&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Telegram-Chat-blue.svg?logo=telegram&quot; alt=&quot;Telegram&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;

---

## 关于

PT 助手 Plus，是一款浏览器插件（Web Extensions），一个可以提升 PT 站点使用效率的工具。

适用于各 PT 站，可使下载种子等各项操作变化更简单、快捷。配合下载服务器（如 Transmission、µTorrent 等），可一键下载指定的种子。

该版本是对原来的 [PT 助手](https://github.com/ronggang/PT-Plugin) 进行了重构，去掉了繁琐的配置，以获得更好的使用体验；

&gt; ~~注意：`1.0.0` 以下的配置不能直接用于该版本，请勿将 `1.0.0` 以下的版本配置进行导入操作。~~

最新版本请登录后从[Pre-release](https://github.com/pt-plugins/PT-Plugin-Plus/releases?include_prereleases/latest)获取。如不会安装请参看Wiki

**提Issue前请务必检查Dev版本、Pull Request以及之前的Issue**

**M-Team 请于站点控制台 -&gt; 实验室 获取 Token 填入后使用**

## 已支持的浏览器
- &lt;a href=&quot;https://chrome.google.com/webstore/detail/abkdiiddckphbigmakaojlnmakpllenb&quot; title=&quot;已在 Chrome Web Store 市场上发布的版本&quot;&gt;![Google Chrome](https://img.shields.io/chrome-web-store/v/abkdiiddckphbigmakaojlnmakpllenb.svg?label=Google%20Chrome)&lt;/a&gt; （已下架，见[原因](https://github.com/pt-plugins/PT-Plugin-Plus/wiki#%E5%B7%B2%E8%A2%AB%E4%B8%8B%E6%9E%B6%E7%9A%84%E6%B5%8F%E8%A7%88%E5%99%A8)）
- &lt;a href=&quot;https://addons.mozilla.org/zh-CN/firefox/addon/pt-plugin-plus/&quot; title=&quot;已在 Mozilla Add-on 上发布的版本&quot;&gt;![Mozilla Firefox](https://img.shields.io/amo/v/pt-plugin-plus.svg?label=Mozilla%20Firefox)&lt;/a&gt; （已下架，见[原因](https://github.com/pt-plugins/PT-Plugin-Plus/wiki#%E5%B7%B2%E8%A2%AB%E4%B8%8B%E6%9E%B6%E7%9A%84%E6%B5%8F%E8%A7%88%E5%99%A8)）
- &lt;a href=&quot;https://microsoftedge.microsoft.com/addons/detail/ekhingnlcjebipkdcgkkheigmljefepn&quot; title=&quot;已在 Microsoft Edge 上发布的版本&quot;&gt;![Microsoft Edge](https://img.shields.io/badge/dynamic/json?label=Edge%20Addons&amp;prefix=v&amp;query=%24.version&amp;url=https%3A%2F%2Fmicrosoftedge.microsoft.com%2FAddons%2Fgetproductdetailsbycrxid%2Fekhingnlcjebipkdcgkkheigmljefepn)&lt;/a&gt;
- 及其他基于 `Chromium` 内核的浏览器

## 功能

- 一键发送指定的种子到下载服务器，目前已支持：
  - Transmission
  - Synology Download Station
  - µTorrent
  - Deluge
  - qBittorrent `v4.1+`
  - ruTorrent
  - Flood
- 比 RSS 更灵活的下载方式：
  - 针对不同的站点发送到不同的下载服务器；
  - 针对不同的站点、下载服务器设置不同的保存路径；
- 批量下载当前页所有种子；
- 批量复制当前页面所有种子的下载链接（`部分站点需要设置 passkey`）；
- 显示默认下载服务器当前可用空间，目前已支持：
  - Transmission
- 多站聚合搜索相同关键字的种子；
  - 查看 [已支持的站点列表](https://github.com/pt-plugins/PT-Plugin-Plus/wiki/supported-sites)
- 根据当前站点显示专属功能，如：
  - 封面模式浏览种子页面；
- 保存下载历史记录（默认关闭）；
- `豆瓣` 电影页面、[Top250](https://movie.douban.com/top250)、[选电影](https://movie.douban.com/explore) 一键搜索 PT 种子支持；
- `IMDb` 电影页面、[Top250](https://www.imdb.com/chart/top?ref_=nv_mv_250) 一键搜索 PT 种子支持；
- 更多功能请参考 [Wiki](https://github.com/pt-plugins/PT-Plugin-Plus/wiki) ；

## 安装及使用

- 如何安装和使用，请参考 [Wiki](https://github.com/pt-plugins/PT-Plugin-Plus/wiki) 的详细说明；
- 常见问题可 [点这里](https://github.com/pt-plugins/PT-Plugin-Plus/wiki/frequently-asked-questions) 找到答案；
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>