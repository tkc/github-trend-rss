<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Tue, 05 Aug 2025 00:05:15 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[hakimel/reveal.js]]></title>
            <link>https://github.com/hakimel/reveal.js</link>
            <guid>https://github.com/hakimel/reveal.js</guid>
            <pubDate>Tue, 05 Aug 2025 00:05:15 GMT</pubDate>
            <description><![CDATA[The HTML Presentation Framework]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/hakimel/reveal.js">hakimel/reveal.js</a></h1>
            <p>The HTML Presentation Framework</p>
            <p>Language: JavaScript</p>
            <p>Stars: 69,320</p>
            <p>Forks: 16,743</p>
            <p>Stars today: 58 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://revealjs.com&quot;&gt;
  &lt;img src=&quot;https://hakim-static.s3.amazonaws.com/reveal-js/logo/v1/reveal-black-text-sticker.png&quot; alt=&quot;reveal.js&quot; width=&quot;500&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;&lt;br&gt;
  &lt;a href=&quot;https://github.com/hakimel/reveal.js/actions&quot;&gt;&lt;img src=&quot;https://github.com/hakimel/reveal.js/workflows/tests/badge.svg&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://slides.com/&quot;&gt;&lt;img src=&quot;https://static.slid.es/images/slides-github-banner-320x40.png?1&quot; alt=&quot;Slides&quot; width=&quot;160&quot; height=&quot;20&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

reveal.js is an open source HTML presentation framework. It enables anyone with a web browser to create beautiful presentations for free. Check out the live demo at [revealjs.com](https://revealjs.com/).

The framework comes with a powerful feature set including [nested slides](https://revealjs.com/vertical-slides/), [Markdown support](https://revealjs.com/markdown/), [Auto-Animate](https://revealjs.com/auto-animate/), [PDF export](https://revealjs.com/pdf-export/), [speaker notes](https://revealjs.com/speaker-view/), [LaTeX typesetting](https://revealjs.com/math/), [syntax highlighted code](https://revealjs.com/code/) and an [extensive API](https://revealjs.com/api/).

---

Want to create reveal.js presentation in a graphical editor? Try &lt;https://slides.com&gt;. It&#039;s made by the same people behind reveal.js.

---

### Getting started
- 🚀 [Install reveal.js](https://revealjs.com/installation)
- 👀 [View the demo presentation](https://revealjs.com/demo)
- 📖 [Read the documentation](https://revealjs.com/markup/)
- 🖌 [Try the visual editor for reveal.js at Slides.com](https://slides.com/)
- 🎬 [Watch the reveal.js video course (paid)](https://revealjs.com/course)

--- 
&lt;div align=&quot;center&quot;&gt;
  MIT licensed | Copyright © 2011-2024 Hakim El Hattab, https://hakim.se
&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[expressjs/express]]></title>
            <link>https://github.com/expressjs/express</link>
            <guid>https://github.com/expressjs/express</guid>
            <pubDate>Tue, 05 Aug 2025 00:05:14 GMT</pubDate>
            <description><![CDATA[Fast, unopinionated, minimalist web framework for node.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/expressjs/express">expressjs/express</a></h1>
            <p>Fast, unopinionated, minimalist web framework for node.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 67,467</p>
            <p>Forks: 20,067</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[crocodilestick/Calibre-Web-Automated]]></title>
            <link>https://github.com/crocodilestick/Calibre-Web-Automated</link>
            <guid>https://github.com/crocodilestick/Calibre-Web-Automated</guid>
            <pubDate>Tue, 05 Aug 2025 00:05:13 GMT</pubDate>
            <description><![CDATA[Calibre-Web but automated and with Calibre features! Fully automate and simplify your eBook set up!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/crocodilestick/Calibre-Web-Automated">crocodilestick/Calibre-Web-Automated</a></h1>
            <p>Calibre-Web but automated and with Calibre features! Fully automate and simplify your eBook set up!</p>
            <p>Language: JavaScript</p>
            <p>Stars: 3,222</p>
            <p>Forks: 143</p>
            <p>Stars today: 35 stars today</p>
            <h2>README</h2><pre># Calibre-Web Automated _(formerly Calibre-Web Automator)_

![Calibre-Web Automated](README_images/CWA-banner.png &quot;Calibre-Web Automated&quot;)

## Making Calibre-Web your _dream_, all-in-one self-hosted digital library solution.

![Docker Pulls](https://img.shields.io/docker/pulls/crocodilestick/calibre-web-automated)
![GitHub Release](https://img.shields.io/github/v/release/crocodilestick/calibre-web-automated)
![GitHub commits since latest release](https://img.shields.io/github/commits-since/crocodilestick/calibre-web-automated/latest)


## _Quick Access_

- [Features](#features) 🪄
- [Releases](https://github.com/crocodilestick/Calibre-Web-Automated/releases) 🆕
- [Roadmap](#features-currently-under-active-development-and-on-our-roadmap-️️) 🛣️
- [How to Install](#how-to-install-): 📖
  - [Quick Install](#quick-install-) 🚀
  - [Docker-Compose](#using-docker-compose-recommended) 🐋⭐(Recommended)
  - [Users Migrating from stock Calibre Web](#users-migrating-from-stock-calibre-web) 🔄
  - [Post-Install Tasks](#post-install-tasks) 🏁
    - [Default Login Credentials 🔑](#default-admin-login)
- [Usage](#usage-) 🔧
  - [Adding Books to Your Library](#adding-books-to-your-library)
  - [KOReader Syncing (KOSync)](#koreader-syncing-kosync-) 📖⚡
- [For Developers](#for-developers---building-custom-docker-image) 🚀
- [Further Development](#further-development-️) 🏗️
- [Support / Buy me a Coffee](https://ko-fi.com/crocodilestick) ☕

## _Affiliated Projects_ 👬

### Calibre-Web Automated Book Downloader

- An intuitive web interface for searching and requesting book downloads, designed to work seamlessly with Calibre-Web-Automated. This project streamlines the process of downloading books and preparing them for integration into your Calibre library

[&lt;img src=&quot;https://raw.githubusercontent.com/vadret/android/master/assets/get-github.png&quot; alt=&quot;Get it on GitHub&quot; height=&quot;80&quot;&gt;](https://github.com/calibrain/calibre-web-automated-book-downloader)

___

### Calibre-Web Companion

- Built with **Flutter** and using **Material You**, [**Calibre Web Companion**](https://github.com/doen1el/calibre-web-companion) is an **unofficial companion application** for **Calibre Web** &amp; **Calibre Web Automated** that allows you to browse your book collection and download books directly on your device, providing a much **more modern, mobile-friendly UX** than either service can currently provide on its own

&lt;br&gt;

[![Calibre Web Companion Preview](README_images/cw-companion-screenshots.png)](https://github.com/doen1el/calibre-web-companion)

[&lt;img src=&quot;README_images/google-play.png&quot; alt=&quot;Get it on Google Play&quot; height=&quot;80&quot;&gt;](https://play.google.com/store/apps/details?id=de.doen1el.calibreWebCompanion)
[&lt;img src=&quot;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&quot; alt=&quot;Get it on F-Droid&quot; height=&quot;80&quot;&gt;](https://f-droid.org/en/packages/de.doen1el.calibreWebCompanion/)
[&lt;img src=&quot;https://raw.githubusercontent.com/vadret/android/master/assets/get-github.png&quot; alt=&quot;Get it on GitHub&quot; height=&quot;80&quot;&gt;](https://github.com/doen1el/calibre-web-companion)

## Why does it exist? 🔓

Calibre, while a fantastic tool for its age, has several problems when containerised, including its reliance on a KasmVNC server instance for the UI, which is near impossible to use on mobile and is relatively resource-heavy if you&#039;re running a small, lower power server like I am.

For many, Calibre-Web has really swooped in to save the day, offering an alternative to a containerised Calibre instance that&#039;s resource-light and with a much more modern UI to boot.

However, when compared to full-fat Calibre, it unfortunately lacks a few core features leading many to run both services in parallel, each serving to fill in where the other lacks, resulting in an often clunky, imperfect solution.

## Goal of the Project 🎯

Calibre-Web Automated aims to be an all-in-one solution, combining the modern lightweight web UI from Calibre-Web with the robust, versatile feature set of Calibre, with a slew of extra features and automations thrown in on top.

![Calibre-Web Automated Example Homepage](README_images/CWA-Homepage.png)
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;i&gt;CWA allows you to keep your ebook library accessible &amp; organised and looks good while doing it&lt;/i&gt; 😎🦚&lt;/p&gt;

## Join our Community! ❤️

- I want to say a **big thanks** 🙏 to all the members of this community that have taken the time to participate in the testing and development of this project and we encourage anyone who would like to to contribute in some way. Anyone of any level is welcome and every little helps!
- **For anyone that wish to contribute to this project in some way**, please reach out on our Discord Server and see how you can best get involved:\
    \
    [![](https://dcbadge.limes.pink/api/server/https://discord.gg/EjgSeek94R)](https://discord.gg/EjgSeek94R)

- Or alternativly make your own companion project, come hang out and or come get help if you&#039;re facing issues :)

## 🚨 To users planning to deploy via Network Shares (particularly NFS) 🚨

- Calibre, Calibre-Web and CWA are all SQLite3 based applications and as a result **don&#039;t like being run over network shares (especially NFS)**
    - SQLite is designed as a lightweight, file-based database system, and it assumes the underlying file system supports certain guarantees about **file locking, atomic writes, and consistency**
    - **Network file systems (e.g., NFS, SMB/CIFS, etc.) often do not meet these assumptions, which can lead to issues.**
  - Some users are successful in deploying CWA across NFS shares however doing so **can produce a lot of hard to diagnose issues** that take time away from users with actual issues
  - **Therefore as of V3.0.0, deployments over NFS shares are &quot;unsupported&quot;**, meaning **you are free to do so**, but **support will not be provided for users facing issues**

## **_Features:_**

### CWA supports all Stock CW Features:
| | | |
|     :---:    |     :---:      |     :---:     |
| Modern &amp; responsive Bootstrap 3 HTML5 interface | Comprehensive user management with per-user permissions | OPDS feed for ereader apps |
| eBook metadata editing and deletion support | Metadata download from various sources (extensible via plugins) | eBook download restriction to logged-in users |
| Public user registration support | Send eBooks to E-Readers with a single click | Sync Kobo devices with your Calibre library |
| In-browser eBook reading support for multiple formats | Content hiding based on categories and Custom Column content per user | &quot;Magic Link&quot; login for easy access on eReaders |
| LDAP, Google/GitHub OAuth, and proxy authentication support | Advanced search and filtering options | Multilingual user interface supporting 20+ [languages](https://github.com/janeczku/calibre-web/wiki/Translation-Status) |

## Plus these _**CWA Specific Features**_ on top:

#### Click a feature below to read about it in more detail:

| | | |
|     :---:    |     :---:      |     :---:     |
| [Automatic Ingest Service ✨](#automatic-ingest-service-) | [Automatic Conversion Service 🔃](#automatic-conversion-service-) | [Automatic Enforcement of Covers &amp; Metadata 👀📔](#automatic-enforcement-of-changes-made-to-covers--metadata-through-the-calibre-web-ui-) |
| [Batch Editing &amp; Deletion 🗂️](#batch-editing--deletion-️️) | [Automated Back Up Service 🔒](#automated-back-up-service-) | [Automated Setup Experience for New Users 🦮](#library-auto-detect-️) |
| [Automatic EPUB Fixer Service 🔨](#automatic-epub-fixer-service-) | [Multi-Format Conversion Service 🌌](#simple-to-use-multi-format-conversion-service-) | [Library Auto-Detect 📚🕵️](#library-auto-detect-️) |
| [Server Stats Tracking Page 📍](#server-stats-tracking-page-) | [Server Stats Tracking 📊](#server-stats-tracking-page-) | [Easy Dark/ Light Mode Switching ☀️🌙](#easy-dark-light-mode-switching-️) |
| [Internal Update Notification System 🛎️](#internal-update-notification-system-️) | [Auto-Compression of Backed Up Files 🤐](#auto-compression-of-backed-up-files-) | [Additional Metadata Providers 🗃️](#additional-metadata-providers-️) |
| [KOReader Syncing (KOSync) 📖⚡](#koreader-syncing-kosync-) | | |

#### **Automatic Ingest Service** ✨
- CWA currently supports automatic ingest of 27 different popular ebook formats
- Users can configure the services behavior to ignore and/or have certain formats automatically converted to other formats in the Admin Panel

&lt;!-- - A **Weighted Conversion Algorithm:** ⚖️
  - Using the information provided in the Calibre eBook-converter documentation on which formats convert best into epubs, CWA is able to determine from downloads containing multiple eBook formats, which format will convert most optimally, ignoring the other formats to ensure the **best possible quality** and no **duplicate imports** --&gt;

#### **Automatic Conversion Service** 🔃
- On by default though can be toggled of in the CWA Settings page, with EPUB as the default target format
  - _Available target formats include:_ **EPUB**, **MOBI**, **AZW3**, **KEPUB** &amp; **PDF**
- Upon detecting new files in the Ingest Directory, if any of the files are in formats the user has configured CWA to auto-convert to the current target format,
- The following **28 file types are currently supported:**
  - _.azw, .azw3, .azw4, .mobi, .cbz, .cbr, .cb7, .cbc, .chm, .djvu, .docx, .epub, .fb2, .fbz, .html, .htmlz, .lit, .lrf, .odt, .pdf, .prc, .pdb, .pml, .rb, .rtf, .snb, .tcr, .txtz_

#### **Automatic Enforcement of Changes made to Covers &amp; Metadata through the Calibre-Web UI!** 👀📔
- In stock Calibre-Web, any changes made to a book&#039;s **Cover and/or Metadata** are only applied to how the book appears in the Calibre-Web UI, changing nothing in the ebook&#039;s files like you would expect
- This results in a frustrating situation for many CW users who utilise CW&#039;s Send-To-Kindle function, and are disappointed to find that the High-Quality Covers they picked out and carefully chosen Metadata they sourced are completely absent on all their other devices! UGH!
- CWA&#039;s **Automatic Cover &amp; Metadata Enforcement Feature** makes it so that **WHATEVER** you changes you make to **YOUR** books, **_are made to the books themselves_**, as well as in the Web UI, **making what you see, what you get.**

![Cover Enforcement CWA](README_images/cwa-enforcer-diagram.png &quot;CWA 1.2.0 Cover Enforcement Diagram&quot;)

#### **Batch Editing &amp; Deletion!** 🗂️🗄️
- Say goodbye to clicking that edit button again, and again, and again just to remove or edit a single series!
- To use, simply navigate to the `Books List`page on the left hand side of the Web UI, select the books you wish to edit/ delete and use the buttons either above the table or within the headers to do whatever you need!
- _Courtesy of [@jmarmstrong1207](https://github.com/jmarmstrong1207)_

![](/README_images/cwa-bulk-editting-diagram.png)

#### **Automated Back Up Service** 🔒
- Worried what will happen if something goes wrong during one of CWA&#039;s automated functions? Don&#039;t be!
- By default, the originals all files processed by CWA are stored in `/config/processed_books` though this can be toggled in the CWA Settings panel

#### **Automatic EPUB Fixer Service** 🔨
- Ever had it where you&#039;re super excited to start reading your next book but for some reason, Amazon&#039;s Send-to-Kindle service just keeps rejecting it? Well no more!

- Originally developed by [innocenat](https://github.com/innocenat/kindle-epub-fix), this tool corrects the following potential issues for every EPUB processed by CWA:
  - Fixes UTF-8 encoding problem by adding UTF-8 declaration if no encoding is specified
  - Fixes hyperlink problem (result in Amazon rejecting the EPUB) when NCX table of content link to `&lt;body&gt;` with ID hash.
  - Detect invalid and/or missing language tag in metadata, and prompt user to select new language.
  - Remove stray `&lt;img&gt;` tags with no source field.
  - Resolves several EPUB compatibility issues, such as UTF-8 encoding, hyperlink problems, invalid/missing language tags, and stray image tags.
- This **ensures maximum comparability** for each EPUB file with the Amazon **Send-to-Kindle** service and for those who don&#039;t use Amazon devices, has the side benefit of cleaning up your lower quality files!
- Enabled by default but can be toggled in settings.
- Files processed by the EPUB-Fixer service are by default automatically backed up to `/config/processed_books` however this can also be toggled in the settings.
- Bulk processing of whole library with progress tracking available in the Admin Panel
- Available via both the Web UI and CLI

#### **Simple to use Multi-Format Conversion Service** 🌌
- This utility gives the user the option to either keep a copy of the original of all converted files in `/config/processed_books` or to trust the process and have CWA simply convert and replace those files (not recommended)
- Full usage details can be found [here](#the-convert-library-tool)

![CWA Convert Library Web UI](/README_images/CWA-new-process-ui.gif)

#### **Additional Metadata Providers** 🗃️
- Users can now make use of [isbndb.com](https://isbndb.com/)&#039;s huge database when fetching metadata for the books in their library!
- Access is being provided via [ibdb.dev](https://ibdb.dev/) thanks to a generous donation to the community by [@chad3814](https://www.github.com/chad3814)
- [Hardcover](https://hardcover.app/) is also currently in the process of being added to CWA as a Metadata Provider

#### **KOReader Syncing (KOSync)** 📖⚡
- CWA now includes built-in KOReader syncing functionality, providing a modern alternative to traditional KOReader sync servers
- **Universal KOReader Syncer:** Works across all KOReader-compatible devices, storing sync data in a readable format for future CWA features
- **Modern Authentication:** Uses RFC 7617 compliant header-based authentication instead of legacy MD5 hashing for enhanced security
- **CWA Integration:** Leverages your existing CWA user accounts and permissions - no additional server setup required
- **Easy Installation:** Plugin and setup instructions are available directly from your CWA instance at `/kosync`

#### **Server Stats Tracking Page** 📍📊
  - Ever wondered how many times CWA has been there for you in the background? Check out the CWA Stats page to see a fun list of statistics showing how many times CWA has been there to make your life just that little bit easier
- A database also exists to keep track of any and all enforcements, imports, conversions &amp; fixes both for peace of mind and to make the checking of any bugs or weird behaviour easier
  &lt;!-- - Full documentation can be found below [here](#checking-the-cover-enforcement-logs) --&gt;

![CWA Server Stats Page](/README_images/cwa-server-stats-page.png)

#### **Library Auto-Detect** 📚🕵️
  - Made to **MASSIVELY** simplify the setup process for both **new and existing users** alike
  - **New Users without existing Libraries:** 🆕
    - **No library? No problem!**
    - New users without existing Calibre Libraries no longer need to copy and paste `metadata.db` files and point to their location in the Web UI, CWA will now automatically detect the lack of Library in your given bind and automatically create a new one for you! It will even automatically register it with the Web UI so you can really hit the ground running
  - **New or Existing Users with Existing Libraries:**
    - Simply bind a directory containing your Calibre Library (search is done recursively so it doesn&#039;t matter how deep in the directory it is) and CWA will now automatically find it and mount it to the Web UI
    - Should you bind a directory with more than 1 Calibre Library in it, CWA will intelligently compare the disk sizes of all discovered libraries and mount the largest one
      - _CWA supports only one library per instance though support for multiple libraries is being investigated for future releases_
      - _In the meantime, users with multiple libraries who don&#039;t want to consolidate them are advised to run multiple, parallel instances_

#### **Easy Dark/ Light Mode Switching** ☀️🌙
  - **Switch between Light &amp; Dark Modes in just one click from anywhere in the Web UI!**
  - Simply click/tap the 🕶️ icon on the  Web UI&#039;s navbar and switch between themes at your leisure

#### **Internal Update Notification System** 🛎️
  - Users will now be automatically notified of the availability of new updates from within the Web UI
  - Automatically triggered by a difference between the version number of the most recent GitHub release and the version installed
  - Set to only show once per calendar day until updated as to not be annoying
  - _Visible to Admin users only_

#### **Manual Library Refresh** ♻️
  - Ever had books get stuck in the ingest folder after an unexpected power-cut ect.? Well say goodbye to having to manually copy the books to be ingested back in and out of the ingest folder, simply press the `Refresh Library` button on the navbar of the Web UI and anything still sitting in the ingest folder will be automatically ingested!

#### **Auto-Compression of Backed Up Files** 🤐
  - Just before midnight each day, the CWA-Auto-Zipper service will automatically zip together all files processed that day.
  - Minimises disk space usage and helps keep back up files as organised as possible
  - __Enabled by default but can be disabled in the CWA Settings page in the Admin panel__

![Calibre-Web Automated](README_images/cwa-bulk-editting-diagram.png &quot;Calibre-Web Automated Bulk Editing &amp; Bulk Deletion&quot;)

# Features Currently Under Active Development and on our Roadmap 🏗️🛣️

#### High Priority 🚨

- Integration of CWA with [Hardcover](https://hardcover.app/) 📚
  - Ability to use Hardcover as a Metadata Provider
  - Ability to sync read progress with your Hardcover account! (Kobo users only)
- A companion project to integrate CWA with the Friendliest &amp; Warmest Place on the Internet 🐭🧀
- Support for Calibre Plugins e.g. deDRM 🔌
- Split Libraries (having your Calibre Library and books in separate locations)

#### Lower Priority 🌱

- Notification system integrations e.g. Telegram, Gotify, ntfy ect. 📧
- Possible Prowlarr Integration 🐯

Please suggest any ideas or wishes you might have! we&#039;re open to anything!

# How To Install 📖

## Quick Install 🚀

1. Download the Docker Compose template file using the command below:

```
curl -OL https://raw.githubusercontent.com/crocodilestick/calibre-web-automated/main/docker-compose.yml
```

2. Move the compose file to an empty folder (e.g. ~/docker/calibre-web-automated/docker-compose.yml). This will be used to store the server data and library

3. Edit the compose file using the comments to help, filling in your Timezone (optional) and desired binds

4. Navigate to where you downloaded the Compose file using `cd` and run:

```
docker compose up -d
```

And that&#039;s you off to the races! 🥳 HOWEVER to avoid potential problems and ensure maximum functionality, we recommend carrying out these [Post-Install Tasks Here](#post-install-tasks).

---
## Using Docker Compose 🐋⭐(Recommended)

### 1. Setup the container using the Docker Compose template below: 🐋📜

  ~~~ bash
  ---
  services:
    calibre-web-automated:
      image: crocodilestick/calibre-web-automated:latest
      container_name: calibre-web-automated
      environment:
        # Only change these if you know what you&#039;re doing
        - PUID=1000
        - PGID=1000
        # Edit to match your current timezone https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
        - TZ=UTC
      volumes:
        # CW users migrating should stop their existing CW instance, make a copy of the config folder, and bind that here to carry over all of their user settings ect.
        - /path/to/config/folder:/config
        # This is an ingest dir, NOT a library one. Anything added here will be automatically added to your library according to the settings you have configured in CWA Settings page. All files placed here are REMOVED AFTER PROCESSING
  

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[trekhleb/javascript-algorithms]]></title>
            <link>https://github.com/trekhleb/javascript-algorithms</link>
            <guid>https://github.com/trekhleb/javascript-algorithms</guid>
            <pubDate>Tue, 05 Aug 2025 00:05:12 GMT</pubDate>
            <description><![CDATA[📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/trekhleb/javascript-algorithms">trekhleb/javascript-algorithms</a></h1>
            <p>📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings</p>
            <p>Language: JavaScript</p>
            <p>Stars: 192,861</p>
            <p>Forks: 30,825</p>
            <p>Stars today: 212 stars today</p>
            <h2>README</h2><pre># JavaScript Algorithms and Data Structures

&gt; 🇺🇦 UKRAINE [IS BEING ATTACKED](https://war.ukraine.ua/) BY RUSSIAN ARMY. CIVILIANS ARE GETTING KILLED. RESIDENTIAL AREAS ARE GETTING BOMBED.
&gt; - Help Ukraine via:
&gt;   - [Serhiy Prytula Charity Foundation](https://prytulafoundation.org/en/)
&gt;   - [Come Back Alive Charity Foundation](https://savelife.in.ua/en/donate-en/)
&gt;   - [National Bank of Ukraine](https://bank.gov.ua/en/news/all/natsionalniy-bank-vidkriv-spetsrahunok-dlya-zboru-koshtiv-na-potrebi-armiyi)
&gt; - More info on [war.ukraine.ua](https://war.ukraine.ua/) and [MFA of Ukraine](https://twitter.com/MFA_Ukraine)

&lt;hr/&gt;

[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)
[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)
![repo size](https://img.shields.io/github/repo-size/trekhleb/javascript-algorithms.svg)

This repository contains JavaScript based examples of many
popular algorithms and data structures.

Each algorithm and data structure has its own separate README
with related explanations and links for further reading (including ones
to YouTube videos).

_Read this in other languages:_
[_简体中文_](README.zh-CN.md),
[_繁體中文_](README.zh-TW.md),
[_한국어_](README.ko-KR.md),
[_日本語_](README.ja-JP.md),
[_Polski_](README.pl-PL.md),
[_Français_](README.fr-FR.md),
[_Español_](README.es-ES.md),
[_Português_](README.pt-BR.md),
[_Русский_](README.ru-RU.md),
[_Türkçe_](README.tr-TR.md),
[_Italiano_](README.it-IT.md),
[_Bahasa Indonesia_](README.id-ID.md),
[_Українська_](README.uk-UA.md),
[_Arabic_](README.ar-AR.md),
[_Tiếng Việt_](README.vi-VN.md),
[_Deutsch_](README.de-DE.md),
[_Uzbek_](README.uz-UZ.md),
[_עברית_](README.he-IL.md)

*☝ Note that this project is meant to be used for learning and researching purposes
only, and it is **not** meant to be used for production.*

## Data Structures

A data structure is a particular way of organizing and storing data in a computer so that it can
be accessed and modified efficiently. More precisely, a data structure is a collection of data
values, the relationships among them, and the functions or operations that can be applied to
the data.

Remember that each data has its own trade-offs. And you need to pay attention more to why you&#039;re choosing a certain data structure than to how to implement it.

`B` - Beginner, `A` - Advanced

* `B` [Linked List](src/data-structures/linked-list)
* `B` [Doubly Linked List](src/data-structures/doubly-linked-list)
* `B` [Queue](src/data-structures/queue)
* `B` [Stack](src/data-structures/stack)
* `B` [Hash Table](src/data-structures/hash-table)
* `B` [Heap](src/data-structures/heap) - max and min heap versions
* `B` [Priority Queue](src/data-structures/priority-queue)
* `A` [Trie](src/data-structures/trie)
* `A` [Tree](src/data-structures/tree)
  * `A` [Binary Search Tree](src/data-structures/tree/binary-search-tree)
  * `A` [AVL Tree](src/data-structures/tree/avl-tree)
  * `A` [Red-Black Tree](src/data-structures/tree/red-black-tree)
  * `A` [Segment Tree](src/data-structures/tree/segment-tree) - with min/max/sum range queries examples
  * `A` [Fenwick Tree](src/data-structures/tree/fenwick-tree) (Binary Indexed Tree)
* `A` [Graph](src/data-structures/graph) (both directed and undirected)
* `A` [Disjoint Set](src/data-structures/disjoint-set) - a union–find data structure or merge–find set
* `A` [Bloom Filter](src/data-structures/bloom-filter)
* `A` [LRU Cache](src/data-structures/lru-cache/) - Least Recently Used (LRU) cache

## Algorithms

An algorithm is an unambiguous specification of how to solve a class of problems. It is
a set of rules that precisely define a sequence of operations.

`B` - Beginner, `A` - Advanced

### Algorithms by Topic

* **Math**
  * `B` [Bit Manipulation](src/algorithms/math/bits) - set/get/update/clear bits, multiplication/division by two, make negative etc.
  * `B` [Binary Floating Point](src/algorithms/math/binary-floating-point) - binary representation of the floating-point numbers.
  * `B` [Factorial](src/algorithms/math/factorial)
  * `B` [Fibonacci Number](src/algorithms/math/fibonacci) - classic and closed-form versions
  * `B` [Prime Factors](src/algorithms/math/prime-factors) - finding prime factors and counting them using Hardy-Ramanujan&#039;s theorem
  * `B` [Primality Test](src/algorithms/math/primality-test) (trial division method)
  * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)
  * `B` [Least Common Multiple](src/algorithms/math/least-common-multiple) (LCM)
  * `B` [Sieve of Eratosthenes](src/algorithms/math/sieve-of-eratosthenes) - finding all prime numbers up to any given limit
  * `B` [Is Power of Two](src/algorithms/math/is-power-of-two) - check if the number is power of two (naive and bitwise algorithms)
  * `B` [Pascal&#039;s Triangle](src/algorithms/math/pascal-triangle)
  * `B` [Complex Number](src/algorithms/math/complex-number) - complex numbers and basic operations with them
  * `B` [Radian &amp; Degree](src/algorithms/math/radian) - radians to degree and backwards conversion
  * `B` [Fast Powering](src/algorithms/math/fast-powering)
  * `B` [Horner&#039;s method](src/algorithms/math/horner-method) - polynomial evaluation
  * `B` [Matrices](src/algorithms/math/matrix) - matrices and basic matrix operations (multiplication, transposition, etc.)
  * `B` [Euclidean Distance](src/algorithms/math/euclidean-distance) - distance between two points/vectors/matrices
  * `A` [Integer Partition](src/algorithms/math/integer-partition)
  * `A` [Square Root](src/algorithms/math/square-root) - Newton&#039;s method
  * `A` [Liu Hui π Algorithm](src/algorithms/math/liu-hui) - approximate π calculations based on N-gons
  * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - decompose a function of time (a signal) into the frequencies that make it up
* **Sets**
  * `B` [Cartesian Product](src/algorithms/sets/cartesian-product) - product of multiple sets
  * `B` [Fisher–Yates Shuffle](src/algorithms/sets/fisher-yates) - random permutation of a finite sequence
  * `A` [Power Set](src/algorithms/sets/power-set) - all subsets of a set (bitwise, backtracking, and cascading solutions)
  * `A` [Permutations](src/algorithms/sets/permutations) (with and without repetitions)
  * `A` [Combinations](src/algorithms/sets/combinations) (with and without repetitions)
  * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS)
  * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence)
  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence) (SCS)
  * `A` [Knapsack Problem](src/algorithms/sets/knapsack-problem) - &quot;0/1&quot; and &quot;Unbound&quot; ones
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray) - &quot;Brute Force&quot; and &quot;Dynamic Programming&quot; (Kadane&#039;s) versions
  * `A` [Combination Sum](src/algorithms/sets/combination-sum) - find all combinations that form specific sum
* **Strings**
  * `B` [Hamming Distance](src/algorithms/string/hamming-distance) - number of positions at which the symbols are different
  * `B` [Palindrome](src/algorithms/string/palindrome) - check if the string is the same in reverse
  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - minimum edit distance between two sequences
  * `A` [Knuth–Morris–Pratt Algorithm](src/algorithms/string/knuth-morris-pratt) (KMP Algorithm) - substring search (pattern matching)
  * `A` [Z Algorithm](src/algorithms/string/z-algorithm) - substring search (pattern matching)
  * `A` [Rabin Karp Algorithm](src/algorithms/string/rabin-karp) - substring search
  * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring)
  * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching)
* **Searches**
  * `B` [Linear Search](src/algorithms/search/linear-search)
  * `B` [Jump Search](src/algorithms/search/jump-search) (or Block Search) - search in sorted array
  * `B` [Binary Search](src/algorithms/search/binary-search) - search in sorted array
  * `B` [Interpolation Search](src/algorithms/search/interpolation-search) - search in uniformly distributed sorted array
* **Sorting**
  * `B` [Bubble Sort](src/algorithms/sorting/bubble-sort)
  * `B` [Selection Sort](src/algorithms/sorting/selection-sort)
  * `B` [Insertion Sort](src/algorithms/sorting/insertion-sort)
  * `B` [Heap Sort](src/algorithms/sorting/heap-sort)
  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)
  * `B` [Quicksort](src/algorithms/sorting/quick-sort) - in-place and non-in-place implementations
  * `B` [Shellsort](src/algorithms/sorting/shell-sort)
  * `B` [Counting Sort](src/algorithms/sorting/counting-sort)
  * `B` [Radix Sort](src/algorithms/sorting/radix-sort)
  * `B` [Bucket Sort](src/algorithms/sorting/bucket-sort)
* **Linked Lists**
  * `B` [Straight Traversal](src/algorithms/linked-list/traversal)
  * `B` [Reverse Traversal](src/algorithms/linked-list/reverse-traversal)
* **Trees**
  * `B` [Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)
  * `B` [Breadth-First Search](src/algorithms/tree/breadth-first-search) (BFS)
* **Graphs**
  * `B` [Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)
  * `B` [Breadth-First Search](src/algorithms/graph/breadth-first-search) (BFS)
  * `B` [Kruskal’s Algorithm](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - finding the shortest paths to all graph vertices from single vertex
  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - finding the shortest paths to all graph vertices from single vertex
  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - find the shortest paths between all pairs of vertices
  * `A` [Detect Cycle](src/algorithms/graph/detect-cycle) - for both directed and undirected graphs (DFS and Disjoint Set based versions)
  * `A` [Prim’s Algorithm](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Topological Sorting](src/algorithms/graph/topological-sorting) - DFS method
  * `A` [Articulation Points](src/algorithms/graph/articulation-points) - Tarjan&#039;s algorithm (DFS based)
  * `A` [Bridges](src/algorithms/graph/bridges) - DFS based algorithm
  * `A` [Eulerian Path and Eulerian Circuit](src/algorithms/graph/eulerian-path) - Fleury&#039;s algorithm - Visit every edge exactly once
  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once
  * `A` [Strongly Connected Components](src/algorithms/graph/strongly-connected-components) - Kosaraju&#039;s algorithm
  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city
* **Cryptography**
  * `B` [Polynomial Hash](src/algorithms/cryptography/polynomial-hash) - rolling hash function based on polynomial
  * `B` [Rail Fence Cipher](src/algorithms/cryptography/rail-fence-cipher) - a transposition cipher algorithm for encoding messages
  * `B` [Caesar Cipher](src/algorithms/cryptography/caesar-cipher) - simple substitution cipher
  * `B` [Hill Cipher](src/algorithms/cryptography/hill-cipher) - substitution cipher based on linear algebra
* **Machine Learning**
  * `B` [NanoNeuron](https://github.com/trekhleb/nano-neuron) - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)
  * `B` [k-NN](src/algorithms/ml/knn) - k-nearest neighbors classification algorithm
  * `B` [k-Means](src/algorithms/ml/k-means) - k-Means clustering algorithm
* **Image Processing**
  * `B` [Seam Carving](src/algorithms/image-processing/seam-carving) - content-aware image resizing algorithm
* **Statistics**
  * `B` [Weighted Random](src/algorithms/statistics/weighted-random) - select the random item from the list based on items&#039; weights
* **Evolutionary algorithms**
  * `A` [Genetic algorithm](https://github.com/trekhleb/self-parking-car-evolution) - example of how the genetic algorithm may be applied for training the self-parking cars
* **Uncategorized**
  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)
  * `B` [Square Matrix Rotation](src/algorithms/uncategorized/square-matrix-rotation) - in-place algorithm
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game) - backtracking, dynamic programming (top-down + bottom-up) and greedy examples
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths) - backtracking, dynamic programming and Pascal&#039;s Triangle based examples
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem (dynamic programming and brute force versions)
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach to the top (4 solutions)
  * `B` [Best Time To Buy Sell Stocks](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - divide and conquer and one-pass examples
  * `B` [Valid Parentheses](src/algorithms/stack/valid-parentheses) - check if a string has valid parentheses (using stack)
  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)
  * `A` [Knight&#039;s Tour](src/algorithms/uncategorized/knight-tour)

### Algorithms by Paradigm

An algorithmic paradigm is a generic method or approach which underlies the design of a class
of algorithms. It is an abstraction higher than the notion of an algorithm, just as an
algorithm is an abstraction higher than a computer program.

* **Brute Force** - look at all the possibilities and selects the best solution
  * `B` [Linear Search](src/algorithms/search/linear-search)
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach the top
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city
  * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - decompose a function of time (a signal) into the frequencies that make it up
* **Greedy** - choose the best option at the current time, without any consideration for the future
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `A` [Unbound Knapsack Problem](src/algorithms/sets/knapsack-problem)
  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - finding the shortest path to all graph vertices
  * `A` [Prim’s Algorithm](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Kruskal’s Algorithm](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph
* **Divide and Conquer** - divide the problem into smaller parts and then solve those parts
  * `B` [Binary Search](src/algorithms/search/binary-search)
  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)
  * `B` [Pascal&#039;s Triangle](src/algorithms/math/pascal-triangle)
  * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)
  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)
  * `B` [Quicksort](src/algorithms/sorting/quick-sort)
  * `B` [Tree Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)
  * `B` [Graph Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)
  * `B` [Matrices](src/algorithms/math/matrix) - generating and traversing the matrices of different shapes
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Fast Powering](src/algorithms/math/fast-powering)
  * `B` [Best Time To Buy Sell Stocks](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - divide and conquer and one-pass examples
  * `A` [Permutations](src/algorithms/sets/permutations) (with and without repetitions)
  * `A` [Combinations](src/algorithms/sets/combinations) (with and without repetitions)
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
* **Dynamic Programming** - build up a solution using previously found sub-solutions
  * `B` [Fibonacci Number](src/algorithms/math/fibonacci)
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach the top
  * `B` [Seam Carving](src/algorithms/image-processing/seam-carving) - content-aware image resizing algorithm
  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - minimum edit distance between two sequences
  * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS)
  * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring)
  * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence)
  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence)
  * `A` [0/1 Knapsack Problem](src/algorithms/sets/knapsack-problem)
  * `A` [Integer Partition](src/algorithms/math/integer-partition)
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - finding the shortest path to all graph vertices
  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - find the shortest paths between all pairs of vertices
  * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching)
* **Backtracking** - similarly to brute force, try to generate all possible solutions, but each time you generate the next solution, you test
if it satisfies all conditions and only then continue generating subsequent solutions. Otherwise, backtrack and go on a
different path to finding a solution. Normally the DFS traversal of state-space is being used.
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)
  * `B` [Power Set](src/algorithms/sets/power-set) - all subsets of a set
  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once
  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)
  * `A` [Knight&#039;s Tour](src/algorithms/uncategorized/knight-tour)
  * `A` [Combination Sum](src/algorithms/sets/combination-sum) - find all combinations that form specific sum
* **Branch &amp; Bound** - remember the lowest-cost solution found at each stage of the backtracking
search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of
a least-cost solution to the problem in order to discard partial solutions with costs larger than the
lowest-cost solution found so far. Normally, BFS traversal in combination with DFS traversal of state-space
tree is being used.

## How to use this repository

**Install all dependencies**

```
npm install
```

**Run ESLint**

You may want to run it to check code quality.

```
npm run lint
```

**Run all tests**

```
npm test
```

**Run tests by name**

```
npm test -- &#039;LinkedList&#039;
```

**Troubleshooting**

If linting or testing is failing, try to delete the `node_modules` folder and re-install npm packages:

```
rm -rf ./node_modules
npm i
```

Also, make sure that you&#039;re using the correct Node version (`&gt;=16`). If you&#039;re using [nvm](https://github.com/nvm-sh/nvm) for Node version management you may run `nvm use` from the root folde

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[simple-icons/simple-icons]]></title>
            <link>https://github.com/simple-icons/simple-icons</link>
            <guid>https://github.com/simple-icons/simple-icons</guid>
            <pubDate>Tue, 05 Aug 2025 00:05:11 GMT</pubDate>
            <description><![CDATA[SVG icons for popular brands]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/simple-icons/simple-icons">simple-icons/simple-icons</a></h1>
            <p>SVG icons for popular brands</p>
            <p>Language: JavaScript</p>
            <p>Stars: 23,159</p>
            <p>Forks: 2,856</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;https://cdn.simpleicons.org/simpleicons/000/fff&quot; alt=&quot;Simple Icons&quot; width=70&gt;
&lt;h3 align=&quot;center&quot;&gt;Simple Icons&lt;/h3&gt;
&lt;p align=&quot;center&quot;&gt;
Over 3300 SVG icons for popular brands. See them all on one page at &lt;a href=&quot;https://simpleicons.org&quot;&gt;SimpleIcons.org&lt;/a&gt;. Contributions, corrections &amp; requests can be made on GitHub.&lt;/p&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://simpleicons.org&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json?color=informational&amp;label=icons&amp;prefix=%20&amp;logo=simpleicons&amp;query=%24.length&amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Fsimple-icons%2Fsimple-icons%2Fdevelop%2Fdata%2Fsimple-icons.json&quot; alt=&quot;Number of icons currently in the library&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://www.npmjs.com/package/simple-icons&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/simple-icons.svg?logo=npm&quot; alt=&quot;NPM version&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://packagist.org/packages/simple-icons/simple-icons&quot;&gt;&lt;img src=&quot;https://img.shields.io/packagist/v/simple-icons/simple-icons?logo=packagist&amp;logoColor=white&quot; alt=&quot;Build status&quot;/&gt;&lt;/a&gt;
&lt;br/&gt;
&lt;a href=&quot;https://github.com/simple-icons/simple-icons/actions?query=workflow%3AVerify+branch%3Adevelop&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/simple-icons/simple-icons/verify.yml?branch=develop&amp;logo=github&amp;label=tests&quot; alt=&quot;Build status&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://discord.gg/vUXFa7t5xJ&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1142044630909726760?logo=discord&amp;logoColor=white&amp;label=discord&quot; alt=&quot;Number of users active in our Discord server&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/simple-icons&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/all/simple-icons?logo=opencollective&quot; alt=&quot;Backers and sponsors on Open Collective&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;

## Usage

&gt; [!IMPORTANT]\
&gt; We ask that all users read our [legal disclaimer](https://github.com/simple-icons/simple-icons/blob/develop/DISCLAIMER.md) before using icons from Simple Icons.

### General Usage

Icons can be downloaded as SVGs directly from [simpleicons.org](https://simpleicons.org) - simply click the download button of the icon you want, and the download will start automatically.

### CDN Usage

Icons can be served from a CDN such as [jsDelivr](https://www.jsdelivr.com/package/npm/simple-icons) or [unpkg](https://unpkg.com/browse/simple-icons/). Simply use the `simple-icons` npm package and specify a version in the URL like the following:

```html
&lt;img height=&quot;32&quot; width=&quot;32&quot; src=&quot;https://cdn.jsdelivr.net/npm/simple-icons@v15/icons/[ICON SLUG].svg&quot; /&gt;
&lt;img height=&quot;32&quot; width=&quot;32&quot; src=&quot;https://unpkg.com/simple-icons@v15/icons/[ICON SLUG].svg&quot; /&gt;
```

Where `[ICON SLUG]` is replaced by the [slug] of the icon you want to use, for example:

```html
&lt;img height=&quot;32&quot; width=&quot;32&quot; src=&quot;https://cdn.jsdelivr.net/npm/simple-icons@v15/icons/simpleicons.svg&quot; /&gt;
&lt;img height=&quot;32&quot; width=&quot;32&quot; src=&quot;https://unpkg.com/simple-icons@v15/icons/simpleicons.svg&quot; /&gt;
```

These examples use the latest major version. This means you won&#039;t receive any updates following the next major release. You can use `@latest` instead to receive updates indefinitely. However, this will result in a `404` error if the icon is removed.

#### CDN with colors

We also provide a CDN service which allows you to use colors.

```html
&lt;img height=&quot;32&quot; width=&quot;32&quot; src=&quot;https://cdn.simpleicons.org/[ICON SLUG]&quot; /&gt;
&lt;img height=&quot;32&quot; width=&quot;32&quot; src=&quot;https://cdn.simpleicons.org/[ICON SLUG]/[COLOR]&quot; /&gt;
&lt;img height=&quot;32&quot; width=&quot;32&quot; src=&quot;https://cdn.simpleicons.org/[ICON SLUG]/[COLOR]/[DARK_MODE_COLOR]&quot; /&gt;
```

Where `[COLOR]` is optional, and can be replaced by the [hex colors](https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color) or [CSS keywords](https://www.w3.org/wiki/CSS/Properties/color/keywords) of the icon you want to use. The color is defaulted to the HEX color of the icon shown in [simpleicons.org website](https://simpleicons.org). `[DARK_MODE_COLOR]` is used for dark mode. The [CSS prefers-color-scheme](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme) will be used when a value is specified. For example:

```html
&lt;img height=&quot;32&quot; width=&quot;32&quot; src=&quot;https://cdn.simpleicons.org/simpleicons&quot; /&gt;
&lt;img height=&quot;32&quot; width=&quot;32&quot; src=&quot;https://cdn.simpleicons.org/simpleicons/gray&quot; /&gt;
&lt;img height=&quot;32&quot; width=&quot;32&quot; src=&quot;https://cdn.simpleicons.org/simpleicons/hotpink&quot; /&gt;
&lt;img height=&quot;32&quot; width=&quot;32&quot; src=&quot;https://cdn.simpleicons.org/simpleicons/0cf&quot; /&gt;
&lt;img height=&quot;32&quot; width=&quot;32&quot; src=&quot;https://cdn.simpleicons.org/simpleicons/0cf9&quot; /&gt;
&lt;img height=&quot;32&quot; width=&quot;32&quot; src=&quot;https://cdn.simpleicons.org/simpleicons/00ccff&quot; /&gt;
&lt;img height=&quot;32&quot; width=&quot;32&quot; src=&quot;https://cdn.simpleicons.org/simpleicons/00ccff99&quot; /&gt;
&lt;img height=&quot;32&quot; width=&quot;32&quot; src=&quot;https://cdn.simpleicons.org/simpleicons/orange/pink&quot; /&gt;
&lt;img height=&quot;32&quot; width=&quot;32&quot; src=&quot;https://cdn.simpleicons.org/simpleicons/_/eee&quot; /&gt;
&lt;img height=&quot;32&quot; width=&quot;32&quot; src=&quot;https://cdn.simpleicons.org/simpleicons/eee/_&quot; /&gt;
```

You can use a `viewbox=auto` parameter to get a auto-sized viewbox. This is useful if you want all icons rendered with consistent size:

```html
&lt;img height=&quot;20&quot; src=&quot;https://cdn.simpleicons.org/github?viewbox=auto&quot; /&gt;
&lt;img height=&quot;20&quot; src=&quot;https://cdn.simpleicons.org/simpleicons?viewbox=auto&quot; /&gt;
&lt;img height=&quot;20&quot; src=&quot;https://cdn.simpleicons.org/awesomelists?viewbox=auto&quot; /&gt;
```

### Node Usage &lt;img src=&quot;https://cdn.simpleicons.org/nodedotjs/000/fff&quot; alt=&quot;Node&quot; align=left width=24&gt;

The icons are also available through our npm package. To install, simply run:

```shell
npm install simple-icons
```

All icons are imported from a single file, where `[ICON SLUG]` is replaced by a capitalized [slug]. We highly recommend using a bundler that can tree shake such as [webpack](https://webpack.js.org/) to remove the unused icon code:

```javascript
// Import a specific icon by its slug as:
// import { si[ICON SLUG] } from &#039;simple-icons&#039;

// For example:
// use import/esm to allow tree shaking
import {siSimpleicons} from &#039;simple-icons&#039;;
// or with require/cjs
const {siSimpleicons} = require(&#039;simple-icons&#039;);
```

It will return an icon object:

```javascript
console.log(siSimpleicons);

/*
{
    title: &#039;Simple Icons&#039;,
    slug: &#039;simpleicons&#039;,
    hex: &#039;111111&#039;,
    source: &#039;https://simpleicons.org/&#039;,
    svg: &#039;&lt;svg role=&quot;img&quot; viewBox=&quot;0 0 24 24&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;...&lt;/svg&gt;&#039;,
    path: &#039;M12 12v-1.5c-2.484 ...&#039;,
    guidelines: &#039;https://simpleicons.org/styleguide&#039;,
    license: {
        type: &#039;...&#039;,
        url: &#039;https://example.com/&#039;
    }
}

NOTE: the `guidelines` entry will be `undefined` if we do not yet have guidelines for the icon.
NOTE: the `license` entry will be `undefined` if we do not yet have license data for the icon.
*/
```

If you need to iterate over all icons, use:

```javascript
import * as icons from &#039;simple-icons&#039;;
```

#### TypeScript Usage &lt;img src=&quot;https://cdn.simpleicons.org/typescript/000/fff&quot; alt=&quot;Typescript&quot; align=left width=19 height=19&gt;

Type definitions are bundled with the package.

```typescript
import type {SimpleIcon} from &#039;simple-icons&#039;;
```

### PHP Usage &lt;img src=&quot;https://cdn.simpleicons.org/php/000/fff&quot; alt=&quot;Php&quot; align=left width=24 height=24&gt;

The icons are also available through our Packagist package. To install, simply run:

```shell
composer require simple-icons/simple-icons
```

The package can then be used as follows, where `[ICON SLUG]` is replaced by a [slug]:

```php
&lt;?php
// Import a specific icon by its slug as:
echo file_get_contents(&#039;path/to/package/icons/[ICON SLUG].svg&#039;);

// For example:
echo file_get_contents(&#039;path/to/package/icons/simpleicons.svg&#039;);

// &lt;svg role=&quot;img&quot; viewBox=&quot;0 0 24 24&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;...&lt;/svg&gt;
?&gt;
```

## Third-Party Extensions

The below are known extensions to third-party tools.

| Extension | Author |
| :-- | :-- |
| [Blender add-on](https://github.com/mondeja/simple-icons-blender) &lt;img src=&quot;https://cdn.simpleicons.org/blender/000/fff&quot; alt=&quot;Blender&quot; align=left width=24 height=24&gt; | [@mondeja](https://github.com/mondeja) |
| [Boxy SVG library](https://boxy-svg.com/ideas/298/simple-icons-library-provider) &lt;img src=&quot;https://cdn.simpleicons.org/boxysvg/000/fff&quot; alt=&quot;Boxy SVG&quot; align=left width=24 height=24&gt; | [@Jarek](https://boxy-svg.com/profiles/0000000000/jarek) |
| [Drawio library](https://github.com/mondeja/simple-icons-drawio) &lt;img src=&quot;https://cdn.simpleicons.org/diagramsdotnet/000/fff&quot; alt=&quot;Drawio&quot; align=left width=24 height=24&gt; | [@mondeja](https://github.com/mondeja) |
| [Figma plugin](https://www.figma.com/community/plugin/1149614463603005908) &lt;img src=&quot;https://cdn.simpleicons.org/figma/000/fff&quot; alt=&quot;Figma&quot; align=left width=24 height=24&gt; | [@LitoMore](https://github.com/LitoMore) |
| [Jekyll plugin](https://github.com/pirafrank/jekyll-simple-icons) &lt;img src=&quot;https://cdn.simpleicons.org/jekyll/000/fff&quot; alt=&quot;Jekyll&quot; align=left width=24 height=24&gt; | [@pirafrank](https://github.com/pirafrank) |
| [Kando icon theme](https://kando.menu/icon-themes#built-in-icon-themes) &lt;img src=&quot;https://brands.deno.dev/kando/000/fff&quot; alt=&quot;Kando&quot; align=left width=24 height=24&gt; | [@Schneegans](https://github.com/Schneegans) |
| [Miro app](https://miro.com/marketplace/brand-icons/) &lt;img src=&quot;https://cdn.simpleicons.org/miro/000/fff&quot; alt=&quot;Miro&quot; align=left width=24 height=24&gt; | [@LitoMore](https://github.com/LitoMore) |
| [Raycast extension](https://www.raycast.com/litomore/simple-icons) &lt;img src=&quot;https://cdn.simpleicons.org/raycast/000/fff&quot; alt=&quot;Raycast&quot; align=left width=24 height=24&gt; | [@LitoMore](https://github.com/LitoMore) |
| [Stream Deck icon pack](https://github.com/mackenly/simple-icons-stream-deck) &lt;img src=&quot;https://cdn.simpleicons.org/elgato/000/fff&quot; alt=&quot;Stream Deck&quot; align=left width=24 height=24&gt; | [@mackenly](https://github.com/mackenly) |
| [Webflow app](https://webflow.com/apps/detail/simple-icons) &lt;img src=&quot;https://cdn.simpleicons.org/webflow/000/fff&quot; alt=&quot;Webflow&quot; align=left width=24 height=24&gt; | [@diegoliv](https://github.com/diegoliv) |

Maintain an extension? [Submit a PR][open-pr] to include it in the list above.

## Third-Party Libraries

The below are known third-party libraries for use in your own projects. We only keep items in the list that are at least up to date with our previous major version.

| Library | Author | License | Simple Icons |
| :-- | :-- | :-: | :-: |
| [Angular package](https://github.com/khalilou88/semantic-icons/tree/main/libs/simple-icons) &lt;img src=&quot;https://cdn.simpleicons.org/angular/000/fff&quot; alt=&quot;Angular&quot; align=left width=24 height=24&gt; | [@khalilou88](https://github.com/khalilou88) | ![License](https://img.shields.io/github/license/khalilou88/semantic-icons?label=) | ![Simple Icons version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Fkhalilou88%2Fsemantic-icons%2Fmain%2Fpackage.json&amp;query=%24..devDependencies%5B&#039;simple-icons&#039;%5D&amp;label=) |
| [Astro package](https://github.com/dzeiocom/simple-icons-astro) &lt;img src=&quot;https://cdn.simpleicons.org/astro/000/fff&quot; alt=&quot;Astro&quot; align=left width=24 height=24&gt; | [@Aviortheking](https://github.com/aviortheking) | ![License](https://img.shields.io/github/license/dzeiocom/simple-icons-astro?label=) | ![Simple Icons version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Fdzeiocom%2Fsimple-icons-astro%2Fmaster%2Fpackage.json&amp;query=%24.version&amp;label=) |
| [Blazor Nuget package](https://github.com/TimeWarpEngineering/timewarp-simple-icons) &lt;img src=&quot;https://cdn.simpleicons.org/blazor/000/fff&quot; alt=&quot;Blazor&quot; align=left width=24 height=24&gt; | [@TimeWarpEngineering](https://github.com/TimeWarpEngineering) | ![License](https://img.shields.io/github/license/TimeWarpEngineering/timewarp-simple-icons?label=) | ![Simple Icons version](https://img.shields.io/badge/dynamic/xml?url=https%3A%2F%2Fraw.githubusercontent.com%2FTimeWarpEngineering%2Ftimewarp-simple-icons%2Fmain%2Fsource%2Ftimewarp-simple-icons%2Ftimewarp-simple-icons.csproj&amp;query=%2FProject%2FPropertyGroup%2FVersion&amp;label=) |
| [Flutter package](https://github.com/jlnrrg/simple_icons) &lt;img src=&quot;https://cdn.simpleicons.org/flutter/000/fff&quot; alt=&quot;Flutter&quot; align=left width=24 height=24&gt; | [@jlnrrg](https://github.com/jlnrrg) | ![License](https://img.shields.io/github/license/jlnrrg/simple_icons?label=) | ![Simple Icons version](https://img.shields.io/badge/dynamic/yaml?url=https%3A%2F%2Fraw.githubusercontent.com%2Fjlnrrg%2Fsimple_icons%2Fmaster%2Fpubspec.yaml&amp;query=%24.version&amp;logoColor=white&amp;label=) |
| [Framer component](https://github.com/LitoMore/simple-icons-framer) &lt;img src=&quot;https://cdn.simpleicons.org/framer/000/fff&quot; alt=&quot;Framer&quot; align=left width=24 height=24&gt; | [@LitoMore](https://github.com/LitoMore) | ![License](https://img.shields.io/github/license/LitoMore/simple-icons-framer?label=) | ![Simple Icons version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Fsimple-icons%2Fsimple-icons%2Fmaster%2Fpackage.json&amp;query=%24.version&amp;label=) |
| [Hugo module](https://github.com/foo-dogsquared/hugo-mod-simple-icons) &lt;img src=&quot;https://cdn.simpleicons.org/hugo/000/fff&quot; alt=&quot;Hugo&quot; align=left width=24 height=24&gt; | [@foo-dogsquared](https://github.com/foo-dogsquared) | ![License](https://img.shields.io/github/license/foo-dogsquared/hugo-mod-simple-icons?label=) | ![Simple Icons version](https://img.shields.io/github/v/tag/foo-dogsquared/hugo-mod-simple-icons?label=) |
| [Java library](https://github.com/silentsoft/simpleicons4j) &lt;img src=&quot;https://cdn.simpleicons.org/openjdk/000/fff&quot; alt=&quot;Java&quot; align=left width=24 height=24&gt; | [@silentsoft](https://github.com/silentsoft) | ![License](https://img.shields.io/github/license/silentsoft/simpleicons4j?label=) | ![Simple Icons version](https://img.shields.io/maven-central/v/org.silentsoft/simpleicons4j?label=) |
| [Kirby plugin](https://github.com/runxel/kirby3-simpleicons) &lt;img src=&quot;https://cdn.simpleicons.org/kirby/000/fff&quot; alt=&quot;Kirby&quot; align=left width=24 height=24&gt; | [@runxel](https://github.com/runxel) | ![License](https://img.shields.io/github/license/runxel/kirby3-simpleicons?label=) | ![Simple Icons version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Frunxel%2Fkirby3-simpleicons%2Fmaster%2Fcomposer.json&amp;query=%24..%5B&#039;simple-icons%2Fsimple-icons&#039;%5D&amp;label=) |
| [LaTeX package](https://github.com/ineshbose/simple-icons-latex) &lt;img src=&quot;https://cdn.simpleicons.org/latex/000/fff&quot; alt=&quot;LaTeX&quot; align=left width=24 height=24&gt; | [@ineshbose](https://github.com/ineshbose) | ![License](https://img.shields.io/github/license/ineshbose/simple-icons-latex?label=) | ![Simple Icons version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Fineshbose%2Fsimple-icons-latex%2Fdevelop%2Fpackage.json&amp;query=%24..%5B&#039;simple-icons-font&#039;%5D&amp;label=) |
| [Laravel package](https://github.com/ublabs/blade-simple-icons) &lt;img src=&quot;https://cdn.simpleicons.org/laravel/000/fff&quot; alt=&quot;Laravel&quot; align=left width=24 height=24&gt; | [@adrian-ub](https://github.com/adrian-ub) | ![License](https://img.shields.io/github/license/ublabs/blade-simple-icons?label=) | ![Simple Icons version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Fsimple-icons%2Fsimple-icons%2Fmaster%2Fpackage.json&amp;query=%24.version&amp;label=) |
| [Python wheel](https://github.com/carstencodes/simplepycons) &lt;img src=&quot;https://cdn.simpleicons.org/python/000/fff&quot; alt=&quot;Python&quot; align=left width=24 height=24&gt; | [@carstencodes](https://github.com/carstencodes) | ![License](https://img.shields.io/github/license/carstencodes/simplepycons?label=) | ![Simple Icons version](https://img.shields.io/badge/dynamic/regex?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcarstencodes%2Fsimplepycons%2Frefs%2Fheads%2Fmain%2F.gitmodules&amp;search=%5C%5Bsubmodule%20%22vendor%5C%2Fsimple-icons%22%5C%5D%5B%5E%5C%5B%5D%2Bbranch%5Cs*%3D%5Cs*%28%3F%3Cversion%3E%5Cd%2B%5C.%5Cd%2B%5C.%5Cd%2B%3F%29&amp;replace=%24%3Cversion%3E&amp;flags=ims&amp;label=) |
| [React package](https://github.com/icons-pack/react-simple-icons) &lt;img src=&quot;https://cdn.simpleicons.org/react/000/fff&quot; alt=&quot;React&quot; align=left width=24 height=24&gt; | [@wootsbot](https://github.com/wootsbot) | ![License](https://img.shields.io/github/license/icons-pack/react-simple-icons?label=) | ![Simple Icons version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Ficons-pack%2Freact-simple-icons%2Fmain%2Fpackage.json&amp;query=%24..%5B&#039;simple-icons&#039;%5D&amp;label=) |
| [Ruby gem](https://rubygems.org/gems/simple-icons-rails) &lt;img src=&quot;https://cdn.simpleicons.org/rubygems/000/fff&quot; alt=&quot;Ruby&quot; align=left width=24 height=24&gt; | [@thepew](https://github.com/the-pew-inc) | ![License](https://img.shields.io/github/license/the-pew-inc/simple-icons-rails?label=) | ![Simple Icons version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Fsimple-icons%2Fsimple-icons%2Fmaster%2Fpackage.json&amp;query=%24.version&amp;label=) |
| [Rust crate](https://github.com/carloskiki/icondata) &lt;img src=&quot;https://cdn.simpleicons.org/rust/000/fff&quot; alt=&quot;Rust&quot; align=left width=24 height=24&gt; | [@carloskiki](https://github.com/carloskiki) | ![License](https://img.shields.io/github/license/carloskiki/icondata?label=) | ![Simple Icons version](https://img.shields.io/badge/dynamic/regex?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcarloskiki%2Ficondata%2Frefs%2Fheads%2Fmain%2Fbuild%2Fsrc%2Fpackage%2Fmod.rs&amp;search=%22Simple%20Icons%22%5B%5E%7D%5D%2B%22%28%3F%3Cversion%3E%5Cd%2B%5C.%5Cd%2B%5C.%5Cd%2B%29%22&amp;replace=%24%3Cversion%3E&amp;flags=ims&amp;label=) |
| [Svelte package](https://github.com/icons-pack/svelte-simple-icons) &lt;img src=&quot;https://cdn.simpleicons.org/svelte/000/fff&quot; alt=&quot;Svelte&quot; align=left width=24 height=24&gt; | [@wootsbot](https://github.com/wootsbot) | ![License](https://img.shields.io/github/license/icons-pack/svelte-simple-icons?label=) | ![Simple Icons version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Ficons-pack%2Fsvelte-simple-icons%2Fmain%2Fpackage.json&amp;query=%24..%5B&#039;simple-icons&#039;%5D&amp;label=) |
| [Vue 3 package](https://github.com/wyatt-herkamp/vue3-simple-icons) &lt;img src=&quot;https://cdn.simpleicons.org/vuedotjs/000/fff&quot; alt=&quot;Vue&quot; align=left width=24 height=24&gt; | [@wyatt-herkamp](https://github.com/wyatt-herkamp) | ![License](https://img.shields.io/github/license/wyatt-herkamp/vue3-simple-icons?label=) | ![Simple Icons version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Fwyatt-herkamp%2Fvue3-simple-icons%2Fmain%2Fsimple-icons.json&amp;query=simpleIconsVersion&amp;label=) |

Maintain a library? [Submit a PR][open-pr] to include it in the list above.

## Contribute

[![Good first issues](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fapi.github.com%2Fsearch%2Fissues%3Fq%3Drepo%3Asimple-icons%2Fsimple-icons%2520label%3A%2522good%2520first%2520issue%2522%2520is%3Aopen%2520-linked%3Apr&amp;query=%24.total_count&amp;suffix=%20open&amp;logo=github&amp;label=good%20first%20issues&amp;color=228f6c&amp;labelColor=228f6c&amp;logoColor=white&amp;style=flat-square)](https://github.com/simple-icons/simple-icons/issues?q=is%3Aopen+label%3A%22good+first+issue%22+-linked%3Apr) [![Icon issues](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fapi.github.com%2Fsearch%2Fissues%3Fq%3Drepo%3Asimple-icons%2Fsimple-icons%2520label%3A%2522update%2520icon%2Fdata%2522%2C%2522new%2520icon%2522%2520is%3Aopen%2520-linked%3Apr&amp;query=%24.total_count&amp;suffix=%20open&amp;logo=svg&amp;logoColor=333&amp;label=icon%20issues&amp;labelColor=FFB13B&amp;color=FFB13B&amp;style=flat-square)](https://github.com/simple-icons/simple-icons/issues?q=is%3Aissue+is%3Aopen+label%3A%22new+icon%22%2C%22update+icon%2Fdata%22) [![Code issues](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fapi.github.com%2Fsearch%2Fissues%3Fq%3Drepo%3Asimple-icons%2Fsimple-icons%2520is%3Aissue%2520is%3Aopen%2520label%3Ameta%2Cpackage%2520-linked%3Apr&amp;query=%24.total_count&amp;suffix=%20open&amp;logo=typescript&amp;logoColor=white&amp;label=code%20issues&amp;labelColor=3178C6&amp;color=3178C6&amp;styl

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[fchollet/ARC-AGI]]></title>
            <link>https://github.com/fchollet/ARC-AGI</link>
            <guid>https://github.com/fchollet/ARC-AGI</guid>
            <pubDate>Tue, 05 Aug 2025 00:05:10 GMT</pubDate>
            <description><![CDATA[The Abstraction and Reasoning Corpus]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/fchollet/ARC-AGI">fchollet/ARC-AGI</a></h1>
            <p>The Abstraction and Reasoning Corpus</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,494</p>
            <p>Forks: 677</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre># Abstraction and Reasoning Corpus for Artificial General Intelligence v1 (ARC-AGI-1)

This repository contains the ARC-AGI-1 task data, as well as a browser-based interface for humans to try their hand at solving the tasks manually.

See also the [ARC-AGI-2 repository](https://github.com/arcprize/ARC-AGI-2).

*&quot;ARC can be seen as a general artificial intelligence benchmark, as a program synthesis benchmark, or as a psychometric intelligence test. It is targeted at both humans and artificially intelligent systems that aim at emulating a human-like form of general fluid intelligence.&quot;*

A complete description of the dataset, its goals, and its underlying logic, can be found in: [On the Measure of Intelligence](https://arxiv.org/abs/1911.01547).

As a reminder, a test-taker is said to solve a task when, upon seeing the task for the first time, they are able to produce the correct output grid for *all* test inputs in the task (this includes picking the dimensions of the output grid). For each test input, the test-taker is allowed 3 trials (this holds for all test-takers, either humans or AI).


## Task file format

The `data` directory contains two subdirectories:

- `data/training`: contains the task files for training (400 tasks). Use these to prototype your algorithm or to train your algorithm to acquire ARC-relevant cognitive priors.
- `data/evaluation`: contains the task files for evaluation (400 tasks). Use these to evaluate your final algorithm. To ensure fair evaluation results, do not leak information from the evaluation set into your algorithm (e.g. by looking at the evaluation tasks yourself during development, or by repeatedly modifying an algorithm while using its evaluation score as feedback).

The tasks are stored in JSON format. Each task JSON file contains a dictionary with two fields:

- `&quot;train&quot;`: demonstration input/output pairs. It is a list of &quot;pairs&quot; (typically 3 pairs).
- `&quot;test&quot;`: test input/output pairs. It is a list of &quot;pairs&quot; (typically 1 pair).

A &quot;pair&quot; is a dictionary with two fields:

- `&quot;input&quot;`: the input &quot;grid&quot; for the pair.
- `&quot;output&quot;`: the output &quot;grid&quot; for the pair.

A &quot;grid&quot; is a rectangular matrix (list of lists) of integers between 0 and 9 (inclusive). The smallest possible grid size is 1x1 and the largest is 30x30.

When looking at a task, a test-taker has access to inputs &amp; outputs of the demonstration pairs, plus the input(s) of the test pair(s). The goal is to construct the output grid(s) corresponding to the test input grid(s), using 3 trials for each test input. &quot;Constructing the output grid&quot; involves picking the height and width of the output grid, then filling each cell in the grid with a symbol (integer between 0 and 9, which are visualized as colors). Only *exact* solutions (all cells match the expected answer) can be said to be correct.


## Usage of the testing interface

The testing interface is located at `apps/testing_interface.html`. Open it in a web browser (Chrome recommended). It will prompt you to select a task JSON file.

After loading a task, you will enter the test space, which looks like this:

![test space](https://arc-benchmark.s3.amazonaws.com/figs/arc_test_space.png)

On the left, you will see the input/output pairs demonstrating the nature of the task. In the middle, you will see the current test input grid. On the right, you will see the controls you can use to construct the corresponding output grid.

You have access to the following tools:

### Grid controls

- Resize: input a grid size (e.g. &quot;10x20&quot; or &quot;4x4&quot;) and click &quot;Resize&quot;. This preserves existing grid content (in the top left corner).
- Copy from input: copy the input grid to the output grid. This is useful for tasks where the output consists of some modification of the input.
- Reset grid: fill the grid with 0s.

### Symbol controls

- Edit: select a color (symbol) from the color picking bar, then click on a cell to set its color.
- Select: click and drag on either the output grid or the input grid to select cells.
    - After selecting cells on the output grid, you can select a color from the color picking to set the color of the selected cells. This is useful to draw solid rectangles or lines.
    - After selecting cells on either the input grid or the output grid, you can press C to copy their content. After copying, you can select a cell on the output grid and press &quot;V&quot; to paste the copied content. You should select the cell in the top left corner of the zone you want to paste into.
- Floodfill: click on a cell from the output grid to color all connected cells to the selected color. &quot;Connected cells&quot; are contiguous cells with the same color.

### Answer validation

When your output grid is ready, click the green &quot;Submit!&quot; button to check your answer. We do not enforce the 3-trials rule.

After you&#039;ve obtained the correct answer for the current test input grid, you can switch to the next test input grid for the task using the &quot;Next test input&quot; button (if there is any available; most tasks only have one test input).

When you&#039;re done with a task, use the &quot;load task&quot; button to open a new task.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[pollinations/pollinations]]></title>
            <link>https://github.com/pollinations/pollinations</link>
            <guid>https://github.com/pollinations/pollinations</guid>
            <pubDate>Tue, 05 Aug 2025 00:05:09 GMT</pubDate>
            <description><![CDATA[Free Open-Source Image and Text Generation]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pollinations/pollinations">pollinations/pollinations</a></h1>
            <p>Free Open-Source Image and Text Generation</p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,620</p>
            <p>Forks: 305</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;operations/assets/pollinations_ai_logo_text_black.png&quot; alt=&quot;Pollinations.AI Logo&quot; width=&quot;100%&quot;/&gt;
&lt;/div&gt;

## 🆕 Latest News

- **🔐 Auth Dashboard** - New and live! Visit [auth.pollinations.ai](https://auth.pollinations.ai) to manage your API tokens and referrer domains. [Learn more](APIDOCS.md#authentication-).
- **🏆 Tier System:** Seed, Flower, Nectar—higher tiers unlock more features. [Details](APIDOCS.md#tiers)
- **🔍 Special Bee:** Request Flower/Nectar upgrade. [Apply here](https://github.com/pollinations/pollinations/issues/new?template=special-bee-request.yml)
- **💲 Support Us** - You can now support us with our new **Tip Us** button. Optionally connect your Discord account to **Ko-Fi** to get premium Discord roles!
- **🎵 Audio Generation** - New text-to-speech and speech-to-text capabilities are now available! Try the `openai-audio` model - see our [API documentation](APIDOCS.md#audio-generation-api) for details.
- **🤖 AI Code Assistant** - We&#039;re excited to announce MentatBot, the autonomous AI coding assistant that implements new features directly from GitHub issues! Simply [create an issue](https://github.com/pollinations/pollinations/issues/new) describing what you&#039;d like to see, and MentatBot will analyze and implement it. [Learn more](https://mentat.ai/).
- **🖼️ GPT Image** - Introducing our new state-of-the-art text-to-image model, GPT Image, which generates high-resolution, contextually accurate visuals from any prompt. Learn more about OpenAI&#039;s latest image generation model [here](https://openai.com/index/introducing-4o-image-generation/).
---

[![Pollinations.AI Logo](https://pollinations.ai/p/3D_wireframe_blueprint_of_the_conceptual_isometric_world_of_Pollinations_AI_a_surreal_hyperrealistic_digital_garden_Elements_emerge_partially_from_all_sides?width=3000&amp;height=1000&amp;seed=-1)](https://pollinations.ai/p/3D_wireframe_blueprint_of_the_conceptual_isometric_world_of_Pollinations_AI_a_surreal_hyperrealistic_digital_garden_Elements_emerge_partially_from_all_sides?width=3000&amp;height=1000&amp;seed=-1)

## 🌟 Introduction

[Pollinations.AI](https://pollinations.ai) is an open-source gen AI startup based in Berlin, providing the most easy-to-use, free text and image generation API available. No signups or API keys required. We prioritize your privacy with zero data storage and completely anonymous usage.

## 🚀 Key Features

- 🔓 **100% Open Source**
- 🆓 **_Free to use_**
- 🔒 **Simplicity and privacy:** No logins, no keys, no data stored
- 🖼️ **Embed like any normal image or text**
- 🎵 **Audio generation:** Text-to-speech and speech-to-text capabilities
- 🌍 Free AI image and text generation APIs
- 🤝 Used by various **open-source LLMs**, **bots**, and **communities**
- 🎣 **_Easy-to-use React hooks_** ([React Hooks Examples](https://react-hooks.pollinations.ai/))
- 🤖 **Autonomous Development:** Features implemented by our MentatBot coding assistant through GitHub issues

&lt;a href=&quot;https://star-history.com/#pollinations/pollinations&amp;Date&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=pollinations/pollinations&amp;type=Date&amp;theme=dark&quot; width=&quot;600&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=pollinations/pollinations&amp;type=Date&quot; width=&quot;600&quot; /&gt;
   &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=pollinations/pollinations&amp;type=Date&quot; width=&quot;600&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;

## 🚀 Getting Started

[![Ask DeepWiki](https://deepwiki.com/badge.svg)](https://deepwiki.com/pollinations/pollinations)

### Image Generation

1. Visit [https://pollinations.ai](https://pollinations.ai)
2. Type your description in the text box
3. Click &quot;Generate&quot; and watch the magic happen!

### Text Generation

1. Visit [https://text.pollinations.ai](https://text.pollinations.ai)
2. Start chatting with the AI

### Audio Generation

1. Use the `openai-audio` model with our API ([explore voices at OpenAI.fm](https://www.openai.fm/))
2. Generate speech from text or transcribe audio to text

### MCP Server for AI Assistants

Our MCP (Model Context Protocol) server enables AI assistants like Claude to generate images and audio directly. [Learn more](./model-context-protocol/README.md)

#### Configuration

Add this to your MCP client configuration:

```json
{
  &quot;mcpServers&quot;: {
    &quot;pollinations&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;@pollinations/model-context-protocol&quot;
      ]
    }
  }
}
```

### Run with npx (no installation required)
```bash
npx @pollinations/model-context-protocol
```

Community alternatives like [MCPollinations](https://github.com/pinkpixel-dev/MCPollinations) are also available.

AI assistants can:
- Generate images from text descriptions
- Create text-to-speech audio with various voice options
- Play audio responses through the system speakers
- Access all Pollinations.AI models and services
- List available models, voices, and capabilities

For more advanced usage, check out our [API documentation](APIDOCS.md).

## 🖥️ How to Use

### Web Interface

Our web interface is user-friendly and doesn&#039;t require any technical knowledge. Simply visit [https://pollinations.ai](https://pollinations.ai) and start creating!

### API

Use our API directly in your browser or applications:

    https://pollinations.ai/p/conceptual_isometric_world_of_pollinations_ai_surreal_hyperrealistic_digital_garden

Replace the description with your own, and you&#039;ll get a unique image based on your words!

## 🎨 Examples

### Image Generation

Here&#039;s an example of a generated image:

[![Conceptual Isometric World](https://pollinations.ai/p/3d_wireframe_blueprint_for_the_prompt_conceptual%20isometric%20world%20of%20pollinations%20ai%20surreal%20hyperrealistic%20digital%20garden?width=2000&amp;height=500&amp;nologo=true&amp;seed=-1)](https://pollinations.ai/p/3d_wireframe_blueprint_for_the_prompt_conceptual%20isometric%20world%20of%20pollinations%20ai%20surreal%20hyperrealistic%20digital%20garden?width=2000&amp;height=500&amp;nologo=true&amp;seed=-1)

Python code to download the generated image:

    import requests

    def download_image(prompt):
        url = f&quot;https://pollinations.ai/p/{prompt}&quot;
        response = requests.get(url)
        with open(&#039;generated_image.jpg&#039;, &#039;wb&#039;) as file:
            file.write(response.content)
        print(&#039;Image downloaded!&#039;)

    download_image(&quot;conceptual_isometric_world_of_pollinations_ai_surreal_hyperrealistic_digital_garden&quot;)

### Text Generation

To generate text, use this URL:

    https://text.pollinations.ai/What%20is%20artificial%20intelligence?

### Audio Generation

To generate audio from text, use this URL:

    https://text.pollinations.ai/Welcome%20to%20Pollinations?model=openai-audio&amp;voice=nova

## 🛠️ Integration

### React Hooks

We offer React hooks for easy integration. Example usage:

    import React from &#039;react&#039;;
    import { usePollinationsImage, usePollinationsText } from &#039;@pollinations/react&#039;;
    import ReactMarkdown from &#039;react-markdown&#039;;

    const AIGeneratedContent = () =&gt; {
      const imageUrl = usePollinationsImage(&quot;Beautiful landscape of Paris with Eiffel Tower&quot;, { width: 800, height: 600, seed: 42 });
      const markdown = usePollinationsText(&quot;Write a brief travel guide for Paris, including top attractions and local cuisine in markdown&quot;, { seed: 42 });

      return (
        &lt;div&gt;
          &lt;h2&gt;AI-Generated Travel Guide&lt;/h2&gt;
          &lt;img src={imageUrl} alt=&quot;AI Generated&quot; /&gt;
          {markdown ? (
            &lt;ReactMarkdown&gt;{markdown}&lt;/ReactMarkdown&gt;
          ) : (
            &lt;p&gt;Loading markdown content...&lt;/p&gt;
          )}
        &lt;/div&gt;
      );
    };

    export default AIGeneratedContent;

Check out our [Pollinations React Hooks](./pollinations-react/README.md) for more details.

## Architecture
```mermaid
graph LR
    Q[Bots - Discord, Telegram, WhatsApp] --&gt; L1
    
    N[30+ Mobile and Web Apps] --&gt; L1
    N --&gt; L2
    
    A[pollinations.ai Web Frontend] --&gt; L1
    A --&gt; L2
    
    R[AI Agents - Qwen, Sillytavern, ...] --&gt; L1
    
    AI[AI Assistants - Claude] --&gt; MCP[MCP Server]
    MCP --&gt; L1
    
    L1[Image CDN] --&gt; CF[Cloudflare Worker with R2 Cache]
    L2[Text CDN] --&gt; C
    
    CF --&gt; B
    
    B[image-origin.pollinations.ai - AWS EC2 CPU] --&gt; F[Azure OpenAI - Prompt Enhancing]
    B --&gt; S[LlamaGuard - Safety Checker]
    F --&gt; E[Translation Service - 1 GPU VM]
    E --&gt; D[FLUX image generation model - 2-6 GPU VMs on AWS]
    
    C[text.pollinations.ai - AWS EC2 CPU] --&gt; P[karma.yt - Realtime News]
    C --&gt; SC[Scaleway API]
    C --&gt; DS[Deepseek API]
    C --&gt; G[Azure-hosted Serverless LLMs]
    C --&gt; CFM[Cloudflare AI]
    SC --&gt; MI[Mistral Models]
    SC --&gt; QW[Qwen Models]
    SC --&gt; LL[Llama Models]
    DS --&gt; DM[Deepseek Models]
    G --&gt; H[OpenAI]
    G --&gt; K[Claude]
    CFM --&gt; CFL[Llama &amp; Deepseek Models]
```

## Projects Using Pollinations.AI

&gt; **⭐ GitHub Star Counts:** Projects with GitHub repositories include star counts to help you gauge their popularity.
&gt; 
&gt; **🆕 NEW Tag:** Projects are marked with the 🆕 emoji when they are recently added. This tag is automatically removed after 15 days from the submission date or if no date is specified.
&gt; 
&lt;!-- AUTO-GENERATED-CONTENT:START --&gt;

&gt; **Note:** Some projects may be temporarily hidden from this list if they are currently broken or undergoing maintenance.

Pollinations.AI is used in various projects, including:

### Vibe Coding ✨

| Project | Description | Creator |
|---------|-------------|--------|
| [Berrry Computer](https://berrry.app) ([⭐ 0](https://github.com/Strawberry-Computer)) | Make tiny self-contained web apps with AI. Find a tweet with an interesting app... | @vgrichina |
| Qwen-Agent ([⭐ 10.0k](https://github.com/QwenLM/Qwen-Agent)) | A framework for developing agentic LLM applications. | - |
| Pollinations Task Master ([⭐ 12](https://github.com/LousyBook94/pollinations-task-master)) | A task management system that uses AI to help break down and organize... | @LousyBook94 |
| [SocialScribe](https://socialscribe.pages.dev/) ([⭐ 1](https://github.com/sh20raj/socialscribe)) | An AI-powered Chrome extension that fixes grammar, rewrites text, and enhances... | @sh20raj |
| [PairFusion](https://pair-fusion.vercel.app/) ([⭐ 0](https://github.com/auraticabhi/PairFusion)) | A real-time AI powered, scalable and feature-rich collaborative IDE built for... | @auraticabhi |
| [CraftUI](https://craftui.studio/) | An AI-powered tool that simplifies UI design by turning text prompts or images... | @imhardikdesai |
| [AI Code Generator](https://codegen.on.websim.com/) | A websim project that generates code from description, selected programming... | @Miencraft2 |
| VibeCoder | A conversational coding environment that lets you create applications by... | @Aashir__Shaikh |
| [JCode Website Builder](https://jcode-ai-website-bulder.netlify.app/) | A website generator using Pollinations text API. | @rtxpower |
| [Pollinations.DIY](https://pollinations.diy) | A browser-based coding environment based on bolt.diy, featuring integrated... | @thomash |
| [NetSim](https://netsim.us.to/) | websim.ai clone that&#039;s actually good | @kennet678 |
| [Pollin-Coder](https://pollin-coder.megavault.in) | A free AI-powered website builder that lets anyone create a clean site just by... | @r3ap3redit |
| [JustBuildThings](https://justbuildthings.com) | A natural language programming interface that lets users create web... | @buildmaster |
| [Websim](https://websim.ai/c/bXsmNE96e3op5rtUS) | A web simulation tool that integrates Pollinations.ai. | @thomash |

### Creative 🎨

| Project | Description | Creator |
|---------|-------------|--------|
| MoneyPrinterTurbo ([⭐ 38.0k](https://github.com/harry0703/MoneyPrinterTurbo)) | Simply provide a topic or keyword for a video, and it will automatically... | @harry0703 |
| [FoldaScan](https://fs.wen.bar) ([⭐ 178](https://github.com/0010skn/WebFS-Toolkit-Local-Folder-Scan-Monitor-Versioning-AI-Prep)) | Use Natural Language to &quot;Converse&quot; with Your Codebase, Folda-Scan Smart Project... | @0010skn |
| [Elixpo-Art](https://elixpo-art.com) ([⭐ 18](https://github.com/elixpo/art-platform)) | A digital art platform that combines AI image generation with traditional... | @elixpo |
| Match-cut video ai ([⭐ 12](https://github.com/lrdcxdes/text-match-cut)) | This AI generates video from text in match-cut text style, uses pollinations... | @r3ap3redit |
| [POLLIPAPER](https://github.com/Tolerable/POLLIPAPER) | A dynamic wallpaper app that uses Pollinations AI. | @intolerant0ne |
| [Elixpo Art](https://elixpoart.vercel.app) ([⭐ 8](https://github.com/Circuit-Overtime/elixpo_ai_chapter)) | A Web interface to create thematic images from prompts, with multiple aspect... | Ayushman Bhattach... |
| [Elixpo Art Chrome Extension](https://chromewebstore.google.com/detail/elixpo-art-select-text-an/hcjdeknbbbllfllddkbacfgehddpnhdh) ([⭐ 8](https://github.com/Circuit-Overtime/elixpo_ai_chapter/tree/main/Elixpo%20Chrome%20%20Extension)) | It uses the pollinations image endpoint to generate an image with `boltning` as... | Ayushman Bhatacharya |
| Pollinations.ai Image Generation (for Frame) ([⭐ 6](https://github.com/CitizenOneX/frame_pollinations)) | A Flutter application that listens for image generation prompts, requests... | CitizenOneX |
| [Imagen](https://altkriz.github.io/imagen/) ([⭐ 3](https://github.com/altkriz/imagen)) | A beautiful web interface for generating images using Pollinations.ai API with... | @altkriz |
| MASala ([⭐ 3](https://github.com/Naman009/MASala)) | Multi-Agent AI That Cooks Up Recipes Just for You ~ From fridge to feast,... | @Naman009 |
| [Imagen](https://altkriz.github.io/imagen/) ([⭐ 3](https://github.com/altkriz/imagen)) | A beautiful web interface for generating images using Pollinations.ai API with... | @altkriz |
| [CatGPT Meme Generator 🐱](https://pollinations.github.io/catgpt/) ([⭐ 2](https://github.com/pollinations/catgpt)) | Transform your questions into sassy cat wisdom! An AI-powered meme generator... | @voodoohop |
| [Dreamscape AI](https://dreamscape.pinkpixel.dev) ([⭐ 2](https://github.com/pinkpixel-dev/dreamscape-ai)) | Dreamscape AI is a creative studio for generating, enhancing, and transforming... | @sizzlebop |
| 🆕 [Evolve AI 🤖](https://evolve-ai-gamma.vercel.app/) ([⭐ 0](https://github.com/chandankumarm55/Evolve-ai)) | Evolve AI is an intelligent assistant platform that brings together a variety... | @chandankumarm55 |
| 🆕 [What is this? ❔](https://whatisthis.pinkpixel.dev/) ([⭐ 0](https://github.com/pinkpixel-dev/what-is-this)) | A fun AI-powered object identification tool that helps you identify mysterious... | @sizzlebop |
| 🆕 [🇷🇺 Aimpress](https://aimpress.ru/) | AIMpress is a web-based image generation platform that allows users to create... | [support@aimp...](mailto:support@aimpress.ru) |
| 🆕 [Vizbo 📱](https://vizboapp.com/) | Vizbo is a mobile app for AI powered vision board creation. | [visbo.app@gm...](mailto:visbo.app@gmail.com) |
| 🆕 [Imagine Draw AI 🎨](https://imaginedrawai.vercel.app/) ([⭐ 0](https://github.com/TechWithAiTelugu)) | This AI image was created for free using ImagineDraw AI a powerful tool to... | TechWithAiTelugu |
| [EzPromptla](https://ezpromptla.netlify.app) | EzPromptla is an advanced visual prompt builder and creative partner designed... | [mohamadizuan...](mailto:mohamadizuanbakar@gmail.com) |
| [Argent Script](https://perchance.org/ai-text-to-audio) | AI Voice Generator - Generate text to audio for free and without limits,... | [Link](https://github.com/withthatway) |
| [Unfoldtech](https://studio.unfoldtech.online/) | Easily generate new images inspired by the Pexels website with embedded IPTC... | [kengkreingkr...](mailto:kengkreingkrai@gmail.com) |
| [Celebrity AI Image Generator](https://www.aicelebrity.design/) ([⭐ 0](https://github.com/Colin-Zero)) | An AI-powered celebrity image generator that uses Pollinations.ai and a1.art... | @Colin-Zero |
| [Coloring AI 🎨](https://coloring-ai.com/) | An intelligent web-based coloring assistant that turns black-and-white sketches... | [962900862@qq...](mailto:962900862@qq.com) |
| [JSON Pollinations API](https://pollinations-json.deno.dev/openai) | A Deno Deploy API wrapper for Pollinations that provides JSON-formatted... | @apersonwhomakess... |
| [MrEgonAI](https://mr-egon-ai.vercel.app/) | An image generator powered by pollinations.ai and its image generation models.... | @mregon |
| [Image Creator](https://saepulwap.blogspot.com/p/flux-image-creator.html) | Create images with multi-language prompts, the language will be automatically... | [Link](https://facebook.com/403.frobidden) |
| [Avatar GenStudio](https://astudio-dcae4.web.app) | A system for creating custom characters that uses the Pollinations API for... | @nic-wq |
| [StoryBolt](https://storybolt.vercel.app/) ([⭐ 0](https://github.com/sahilalamgir/StoryBolt)) | Generate stories with enticing narratives and beautiful illustrations. Users... | @gumbasil |
| [CalcuBite AI](https://calcubite.vercel.app/) | CalcuBite AI is a smart tool that analyzes food from images to provide calorie... | @sugamdeol |
| 🇮🇩 [Generator AI Image 🇮🇩](https://kenthir.my.id/advanced-generator/) | Advanced AI Image Generator adalah platform inovatif yang memungkinkan Anda... | @kenthirai |
| [NailsGen](https://www.nailsgen.com/) | Create beautiful nail art designs with AI. Generate unique nail art designs... | [lipengliang2...](mailto:lipengliang2012@163.com) |
| [ImageGen AI Image](https://imagegenaiimage.com/) | Generate high-quality AI images for any purpose. Features a variety of models... | [Link](https://www.linkedin.com/in/narendradwivedi) |
| 🇮🇩 [RuangRiung AI Image 🇮🇩](https://ruangriung.my.id) ([⭐ 0](https://github.com/ruangriung)) | RuangRiung AI Image Generator is ideal for digital artists, designers, or... | @ruangriung |
| [PollinateAI](https://pollinateai.vercel.app) ([⭐ 0](https://github.com/Auspicious14/image-generator-fe.git)) | PollinateAI is an image generation platform that aims to ease the stress of... | @Auspicious14 |
| [FlowGPT](https://flowgpt.com/p/instant-image-generation-with-chatgpt-and-pollinationsai) | Generate images on-demand with ChatGPT! | - |
| [Image Gen - Uncensored Edition](https://huggingface.co/chat/assistant/66fccce0c0fafc94ab557ef2) | A powerful image generation assistant on HuggingChat. | @DeFactOfficial |
| [Foodie AI](https://foodie-ai.vercel.app/) | An AI application for food analysis that uses advanced artificial intelligence... | @Aashir__Shaikh |
| [AIMinistries](https://www.ai-ministries.com) | A collection of free AI tools including AI chat, writing tools, image... | @tolerantone |
| [The Promised Pen](https://promisedpen.app) | A free, feature-rich novel writing application that helps writers organize... | @soryn.san |
| 🇨🇳 [Text2Image_audio 🇨🇳](nihilistic.dpdns.org) ([⭐ 0](https://github.com/wtliao/text2image)) | 文生图与文生语音网站 - 一个初学者的AI编程项目，支持文本转图像和音频生成功能。(Text to Image and Text to Audio... | @peyoba |
| 🇨🇳 [Aiphoto智能绘画 🇨🇳](https://qiyimg.3d.tc/Aiphoto) | AI艺术工坊 - 智能绘画生成器。这是一个基于AI的绘画生成工具，可以根据用户输入的中文描述自动生成相应的图片。(An AI art workshop -... | @qiyimg |
| 🖥️ AI YouTube Shorts Generator | Python desktop app that automates YouTube Shorts creation with AI-generated... | @Sami-Alsahabany |
| 🤖 [Emojiall AI Drawing Platform](https://art.emojiall.com) | A platform focused on allowing users to draw pictures according to their own... | @James-Qi |
| [PixPal](https://pixpal.chat) | PixPal is a free AI assistant that can analyze, edit, and generate images,... | @andreas_11 |
| 🇪🇸 [🇪🇸 Generador de presentaciones con imágenes y texto V2](https://proyectodescartes.org/IATools/Crea_presentaciones4/) | Una herramienta configurable que permite crear presentaciones con 3 a 20... | @juanrivera126 |
| [🇪🇸 Yo el director](https://yoeldirector.dpana.com.ve) | Web para crear peliculas y contenido para youtube, usando Pollina

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[PrismarineJS/mineflayer]]></title>
            <link>https://github.com/PrismarineJS/mineflayer</link>
            <guid>https://github.com/PrismarineJS/mineflayer</guid>
            <pubDate>Tue, 05 Aug 2025 00:05:08 GMT</pubDate>
            <description><![CDATA[Create Minecraft bots with a powerful, stable, and high level JavaScript API.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/PrismarineJS/mineflayer">PrismarineJS/mineflayer</a></h1>
            <p>Create Minecraft bots with a powerful, stable, and high level JavaScript API.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,948</p>
            <p>Forks: 1,076</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[maboloshi/github-chinese]]></title>
            <link>https://github.com/maboloshi/github-chinese</link>
            <guid>https://github.com/maboloshi/github-chinese</guid>
            <pubDate>Tue, 05 Aug 2025 00:05:07 GMT</pubDate>
            <description><![CDATA[GitHub 汉化插件，GitHub 中文化界面。 (GitHub Translation To Chinese)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/maboloshi/github-chinese">maboloshi/github-chinese</a></h1>
            <p>GitHub 汉化插件，GitHub 中文化界面。 (GitHub Translation To Chinese)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 14,664</p>
            <p>Forks: 793</p>
            <p>Stars today: 32 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;&lt;a name=&quot;readme-top&quot;&gt;&lt;/a&gt;

# [GitHub 中文化插件][github-project-link]

&gt; 让 GitHub 界面全面中文化 | 源自 [52cik/github-hans](https://github.com/52cik/github-hans)

**简体中文** · [繁體中文](./README_zh-TW.md) · [反馈问题][github-issues-link]

&lt;!-- SHIELD GROUP --&gt;

[![GitHub stars][github-stars-shield]][github-stars-link]
[![GitHub forks][github-forks-shield]][github-forks-link]
[![GitHub issues][github-issues-shield]][github-issues-link]
[![license GPL-3.0][github-license-shield]][github-license-link]
[![GreasyFork installs][greasyFork-shield]][greasyFork-link]

&lt;a href=&quot;https://hellogithub.com/repository/738d0abae49543f18d887a7e29ec9e90&quot; target=&quot;_blank&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.hellogithub.com/v1/widgets/recommend.svg?rid=738d0abae49543f18d887a7e29ec9e90&amp;claim_uid=zepvSg6Vwl4EqMr&amp;theme=dark&quot; /&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.hellogithub.com/v1/widgets/recommend.svg?rid=738d0abae49543f18d887a7e29ec9e90&amp;claim_uid=zepvSg6Vwl4EqMr&amp;theme=neutral&quot; /&gt;
    &lt;img alt=&quot;Featured｜HelloGitHub&quot; src=&quot;https://api.hellogithub.com/v1/widgets/recommend.svg?rid=738d0abae49543f18d887a7e29ec9e90&amp;claim_uid=zepvSg6Vwl4EqMr&amp;theme=neutral&quot; style=&quot;width: 250px; height: 54px;&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

&lt;/div&gt;

&gt; [!warning]
&gt; 本项目从未发布至 GitCode，如您发现请截图并保留证据

&lt;details&gt;
&lt;summary&gt;&lt;kbd&gt;目录树&lt;/kbd&gt;&lt;/summary&gt;

#### TOC
- [🌟 功能特性](#-功能特性)
- [🌐 兼容环境](#-兼容环境)
- [💻 安装指南](#-安装指南)
- [🔧 本地调试](#-本地调试)
- [🔄 更新日志](#-更新日志)
- [📌 待办事项](#-待办事项)
- [🤝 参与贡献](#-参与贡献)
- [🖼️ 效果预览](#-效果预览)
- [🙏 特别鸣谢](#-特别鸣谢)
- [📈 项目统计](#-项目统计)
- [🎁 欢迎打赏](#-欢迎打赏)
&lt;/details&gt;

## 🌟 功能特性

- [x] 全面中文化 GitHub 界面元素（菜单栏、标题、按钮等）
- [x] 智能正则匹配功能
- [x] 支持项目描述的人机翻译
- [x] 自动本地化时间元素
- [x] 持续更新词库

## 🌐 兼容环境

浏览器类型           | 支持的脚本管理器
:------------------: | :---------------:
Chrome / Chromium 内核 | [Tampermonkey][Tampermonkey], [Violentmonkey][Violentmonkey]
Safari（全平台）     | [Tampermonkey][Tampermonkey], [Macaque][Macaque], [Stay][Stay]
Firefox / Gecko 内核   | [Tampermonkey][Tampermonkey], [Violentmonkey][Violentmonkey]
Via（Android）       | 内置管理器

## 💻 安装指南

1. 安装用户脚本管理器：
    - 推荐：[Tampermonkey][Tampermonkey]
1. **Chrome / Chromium 内核浏览器，请务必开启 “扩展程序” 管理中的 “开发者模式”[^1]**
1. 选择安装源：
    - [GitHub 源【开发版】][main.user.js]
    - [GreasyFork 源【稳定版】][main(greasyfork).user.js]
1. 刷新页面后，插件即可生效
1. 必要时，重启浏览器

[^1]: [Chrome 切换到 Manifest V3后，使用问题](https://github.com/maboloshi/github-chinese/issues/234)

&gt; [!NOTE]
&gt; **版本说明**：
&gt; - 🚀 开发版：实时更新，每周五自动更新词库
&gt; - 🛡️ 稳定版：每周一同步开发版词库，更稳定

## 🔧 本地调试

1. 安装 [Tampermonkey][Tampermonkey]，并启用 “允许访问文件网址”。
1. 下载词库文件到本地（如：`D:\github-chinese\locals.js`）
1. 在脚本管理器中修改引用路径：
   ```js
   // 原始路径
   // @require https://raw.githubusercontent.com/...
   
   // 修改为
   // @require file:///D:/github-chinese/locals.js
   ```
1. 刷新页面生效

&gt; [!TIP]
&gt; 💡 **温馨提示：** 您可以将词库文件拖拽至浏览器地址栏，复制路径直接使用。

&lt;div align=&quot;right&quot;&gt;

[![][back-to-top]](#readme-top)

&lt;/div&gt;


## 🔄 更新日志

### 最新版本

#### v1.9.3 (2024-08-18)

1. 新增功能：通过设置中文环境，自动本地化时间元素，仅保留`on`开头的时间正则，并停用时间元素监视
1. 优化突变翻译处理：
   - 引入`characterDataPage`规则，对特定页面启用`筛选字符数据`的变更
   - 引入`ignoreMutationSelectorPage`规则，忽略特定突变元素
1. 合并`reIgnoreClass，reIgnoreItemprop，ignoreId，ignoreTag`为`ignoreSelectorPage`规则，处理全局及特定页面，忽略特定元素
1. 引入全局缓存模式，减少重复构建包括不限于基于`page`变化的忽略规则、正则规则数组等
1. 调整：更新讯飞听见翻译引擎v2.0
1. 优化：梳理、优化脚本
1. 调整：调整词库语言代码为`zh-CN`, 与环境语言设置一致

&lt;details&gt;&lt;summary&gt;&lt;kbd&gt;查看更多历史版本&lt;/kbd&gt;&lt;/summary&gt;

#### v1.9.2 (2024-06-14)

1. 适配`www.githubstatus.com`
1. 适配`skills.github.com`

#### v1.9.1 (2024-05-23)

1. 更新`切换正则功能按钮`

#### v1.9.0 (2023-12-09)

1. 重新定义版本号规则, 如`1.9.0-2023-12-09`。
   - `1.9.0`: 主版本号（由项目所有者更新）
   - `2023-12-09`：`词库`发布版本号（由 GitHub Action 自动更新）
1. 加强: [GitHub 源【开发版】][main.user.js]每周一凌晨自动更新`词库`发布版本号
1. 加强: [GreasyFork 源【稳定版】][main(greasyfork).user.js]每周五凌晨自动更新`词库`发布版本号, 词库内容同上一次[GitHub 源【开发版】][main.user.js]
1. 加强：在 `README.md` 中自动更新贡献者头像
1. 更新: 忽略规则, 词条等

#### v1.8.5 (2023-08-31)

1. 优化: `transDesc 函数`代码
1. 修复: 重复添加`translate-me`翻译按钮
1. 加强：`watchUpdate 函数`新增节点文本更新的情况
1. 调整: `transBySelector和transDesc函数`延迟执行时间
1. 更新: 忽略规则, 词条等

#### v1.8.4 (2023-08-08)

1. 修复: `Itemprop`过滤规则, 依然使用正则方式
1. 修复: `tooltipped`样式提示, 依然使用正则方式

#### v1.8.3 (2023-08-07)

1. 梳理、优化脚本
1. 更新: 忽略规则, 大量词条等

#### v1.8.2 (2023-05-15)

1. `greasyfork 托管`源切换到`按页面精细化词条模式`
1. 调整词库格式
1. 功能加强: 优化`元素筛选器`翻译逻辑
1. 更新: 忽略规则, 大量词条等

#### v1.8.1 (2023-01-22)

1. 修复: #8 与 dark reader 扩展发生冲突，导致时间显示出现问题
1. `GitHub`源开始切换到`按页面精细化词条模式(开发版)`, 词库未完全迁移适配
1. 停止`greasyfork`源词库文件的同步更新

#### v1.8.0 (2023-01-18)

1. 删除: `TURBO-FRAME`框架处理代码. Github 已调整新动态加载模式, 直接检测`url`的变化就能获取对应的`page`信息
1. 新增: 支持时间元素的`Shadow DOM`翻译, 并监听变化
1. 新增: 启用并更新`时间元素翻译`专项正则词条
1. 新增: 仅当`page`有效才翻译页面
1. 修复: 原`简介翻译`引擎`GitHub中文社区`失效, 改为`讯飞`引擎(测试)
1. 修复: 追加公共正则重复迭代的问题
1. 修复: 正则标记变量`RegExp`与构造函数`new RegExp`冲突
1. 更新: 忽略规则, 词条等

预告, 下次将细化`page`匹配规则, 导致词库文件结构大调整, 词库文件会适当变大, 页面正则更精细效率会提升

#### v1.7.9 (2022-07-17)

GitHub 的 ajax 载入方式逐步从 [defunkt/jquery-pjax](https://github.com/defunkt/jquery-pjax) 切换到 [hotwired/turbo](turbo.hotwired.dev), 导致已有的动态监测方式逐步失效

目前, 通过以下修复:

1. 新增 `BODY` 元素新增监视
1. 解析 `TURBO-FRAME` 框架, 获取对应的 `page`
1. 修复 github 新动态加载模式, 导致`翻译描述`返回值无法插入
1. 修复 github 新动态加载模式, 导致`chrome`浏览器自带翻译功能卡死页面

其他更新:

1. 修复`rePagePath`,`rePagePathRepo`,`rePagePathOrg`匹配规则，限制路径匹配层次，排除干扰
1. 直接使用网页URL`document.URL`变化触发`标题翻译`和`JS 筛选器`翻译
1. 修复`关闭正则`无法生效, 需要刷新页面才生效
1. 日常更新词库和忽略规则
1. 更新`JS 筛选器`规则

#### v1.7.8 (2022-06-29)

1. 紧急修复: GitHub 变更了`document.body`和`title`更新机制, 导致原有的`监测更新`规则部分失效, 目前使用`document.documentElement`监视整个页面 DOM 的变更
1. 跳过`&lt;HEAD&gt;`标签
1. `标题翻译`和`JS 筛选器`翻译, 依据 URL变化更新

#### v1.7.7 (2022-06-26)

1. 新增`时间元素翻译`功能
1. 重写`页面标题翻译`函数
1. 梳理`遍历节点`函数逻辑
1. 优化`transPage`函数，默认翻译公共部分
1. 调整`getPage`函数, 使`ClassName匹配规则`优先
1. 优化`translate`函数, 跳过`不存在英文字母和符号,.`, 保留首尾空白部分等
1. 部分函数重命名，使用`es6`新语法
1. 日常更新词库和忽略规则，修复一个`JS 选择器规则`

#### v1.7.6 (2022-05-12)

1. 日常更新词库和忽略规则
1. 添加手动开启/禁用正则翻译，添加切换菜单
1. 优化翻译文本函数：避免已翻译词汇二次匹配，提高效率；局部翻译优先于全局

&lt;/details&gt;

&lt;div align=&quot;right&quot;&gt;

[![][back-to-top]](#readme-top)

&lt;/div&gt;


## 📌 待办事项

1. 添加 GitHub 专用名词解释
1. 整理 [Git](https://git-scm.com/) &amp; [GitHub](https://github.com/) 学习资料
1. 完善文档翻译，需大家 PR 共同翻译

## 🤝 参与贡献

欢迎通过以下方式参与贡献：

1. 完善词库翻译（编辑 `locals.js`）
1. 提交议题报告，参与话题讨论
1. 改进代码逻辑

[![][pr-welcome-shield]][pr-welcome-link]

### 翻译参考资源:

1. [Pro Git 第二版 简体中文](https://git-scm.com/book/zh/v2)
1. [Pro Git: 翻译约定](https://github.com/progit/progit2-zh/blob/master/TRANSLATION_NOTES.asc)
1. [Git 官方软件包的简体中文翻译](https://github.com/git/git/blob/master/po/zh_CN.po)
1. [GitHub 词汇表官方译本](https://docs.github.com/cn/get-started/quickstart/github-glossary)

&gt; [查看详细贡献指南](https://github.com/maboloshi/github-chinese/discussions/57)

## 🖼️ 效果预览

  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/maboloshi/github-chinese/gh-pages/preview/img1.png&quot;/&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/maboloshi/github-chinese/gh-pages/preview/img3.png&quot;/&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/maboloshi/github-chinese/gh-pages/preview/img1.png&quot; width=&quot;75%&quot; /&gt;
  &lt;/picture&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/maboloshi/github-chinese/gh-pages/preview/img2.png&quot;/&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/maboloshi/github-chinese/gh-pages/preview/img4.png&quot;/&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/maboloshi/github-chinese/gh-pages/preview/img2.png&quot; width=&quot;75%&quot; /&gt;
  &lt;/picture&gt;

## 🙏 特别鸣谢

### 核心团队

- [maboloshi](https://github.com/maboloshi) - 项目作者
- [wyc-26](https://github.com/wyc-26)，[陈生杂物房](https://github.com/TC999) - 项目协作者
- [52cik](https://github.com/52cik) - 项目原作者

### 贡献者墙

一如既往，感谢我们出色的贡献者❤️！

&lt;!--AUTO_GENERATED_PLEASE_DONT_DELETE_IT--&gt;
&lt;a href=&quot;https://github.com/maboloshi&quot; title=&quot;沙漠之子&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/7850715?v=4&quot; width=&quot;42;&quot; alt=&quot;沙漠之子&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/52cik&quot; title=&quot;楼教主&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/5033310?v=4&quot; width=&quot;42;&quot; alt=&quot;楼教主&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/TC999&quot; title=&quot;陈生杂物房&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/88823709?v=4&quot; width=&quot;42;&quot; alt=&quot;陈生杂物房&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/qznfbnj&quot; title=&quot;其智乃反不能及&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/100760086?v=4&quot; width=&quot;42;&quot; alt=&quot;其智乃反不能及&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/wyc-26&quot; title=&quot;wyc-26&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/154735436?v=4&quot; width=&quot;42;&quot; alt=&quot;wyc-26&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/pylover7&quot; title=&quot;大叶子&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/56282729?v=4&quot; width=&quot;42;&quot; alt=&quot;大叶子&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/tangyuan0821&quot; title=&quot;Tangyuan&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/195516213?v=4&quot; width=&quot;42;&quot; alt=&quot;Tangyuan&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/cat-kun&quot; title=&quot;cat-kun&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/8529528?v=4&quot; width=&quot;42;&quot; alt=&quot;cat-kun&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/ChinaGodMan&quot; title=&quot;人民的勤务员&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/96548841?v=4&quot; width=&quot;42;&quot; alt=&quot;人民的勤务员&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/buiawpkgew1&quot; title=&quot;菾凴&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/71136405?v=4&quot; width=&quot;42;&quot; alt=&quot;菾凴&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/pecasha&quot; title=&quot;Pecasha&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/9607128?v=4&quot; width=&quot;42;&quot; alt=&quot;Pecasha&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/yrljroli&quot; title=&quot;𠭞&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/169890386?v=4&quot; width=&quot;42;&quot; alt=&quot;𠭞&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/YiShengJunn&quot; title=&quot;益生君&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/134821571?v=4&quot; width=&quot;42;&quot; alt=&quot;益生君&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/3DMXM&quot; title=&quot;小莫&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/28587093?v=4&quot; width=&quot;42;&quot; alt=&quot;小莫&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/xuexb&quot; title=&quot;前端小武&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/3872051?v=4&quot; width=&quot;42;&quot; alt=&quot;前端小武&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/wang4yu6peng13&quot; title=&quot;wang4yu6peng13&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/10207042?v=4&quot; width=&quot;42;&quot; alt=&quot;wang4yu6peng13&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/pangshitong&quot; title=&quot;pangshitong&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/41714457?v=4&quot; width=&quot;42;&quot; alt=&quot;pangshitong&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/daydaygo&quot; title=&quot;dayday&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/3986303?v=4&quot; width=&quot;42;&quot; alt=&quot;dayday&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/heicks&quot; title=&quot;create new ██████╗  ██╔══██╗ ██████╔╝ ██╔══██╗ ██████╔╝ ╚═════╝  　　██╗ 　  ██╗ 　　██║ 　  ██║ 　　██║  　 ██║ 　　██║  　 ██║ 　　╚█████╔╝  　　╚═════╝  ███████╗ ██╔════╝　 ██║████═╗　 ██║　   ██　║ ╚██████╔╝　 　╚══════╝&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/12287943?v=4&quot; width=&quot;42;&quot; alt=&quot;create new ██████╗  ██╔══██╗ ██████╔╝ ██╔══██╗ ██████╔╝ ╚═════╝  　　██╗ 　  ██╗ 　　██║ 　  ██║ 　　██║  　 ██║ 　　██║  　 ██║ 　　╚█████╔╝  　　╚═════╝  ███████╗ ██╔════╝　 ██║████═╗　 ██║　   ██　║ ╚██████╔╝　 　╚══════╝&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/NyA1K0&quot; title=&quot;NyA!K0&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/177237971?v=4&quot; width=&quot;42;&quot; alt=&quot;NyA!K0&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/KS-OTO&quot; title=&quot;KS-OTO&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/6616413?v=4&quot; width=&quot;42;&quot; alt=&quot;KS-OTO&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/swsoyee&quot; title=&quot;InfinityLoop&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/20528423?v=4&quot; width=&quot;42;&quot; alt=&quot;InfinityLoop&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/ImgBotApp&quot; title=&quot;Imgbot&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/31427850?v=4&quot; width=&quot;42;&quot; alt=&quot;Imgbot&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/neveler&quot; title=&quot;neveler&quot;&gt;
  &lt;img src=&quot;https://avatars.githubusercontent.com/u/55753029?v=4&quot; width=&quot;42;&quot; alt=&quot;neveler&quot;/&gt;
&lt;/a&gt;
&lt;!--AUTO_GENERATED_PLEASE_DONT_DELETE_IT-END--&gt;

&gt; 贡献者列表，由 [GitHub Action][update-contributors-images] 自动生成

&lt;div align=&quot;right&quot;&gt;

[![][back-to-top]](#readme-top)

&lt;/div&gt;


## 📈 项目统计

&lt;a href=&quot;https://star-history.com/#maboloshi/github-chinese&amp;Timeline&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=maboloshi/github-chinese&amp;type=Timeline&amp;theme=dark&quot; /&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=maboloshi/github-chinese&amp;type=Timeline&quot; /&gt;
    &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=maboloshi/github-chinese&amp;type=Timeline&quot; width=&quot;75%&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

![Alt](https://repobeats.axiom.co/api/embed/ae4c378f0e6ec317654ec5c4e8b01218c734cd53.svg &quot;Repobeats analytics image&quot;)

&lt;div align=&quot;right&quot;&gt;

[![][back-to-top]](#readme-top)

&lt;/div&gt;

## 🎁 欢迎打赏
[赞赏列表](https://github.com/maboloshi/maboloshi/issues/1)
|                                        微信赞赏                                        |                                       支付宝赞赏                                       |
| :--------------------------------------------------------------------------------: | :--------------------------------------------------------------------------------: |
| &lt;img src=&quot;https://cdn.jsdelivr.net/gh/maboloshi/maboloshi/img/wechat.png?raw=true&quot; alt=&quot;WeChat QRcode&quot; width=200&gt; &lt;br&gt;&lt;small&gt;☕喝点咖啡继续干☕&lt;/small&gt; | &lt;img src=&quot;https://cdn.jsdelivr.net/gh/maboloshi/maboloshi/img/alipay-1.jpg?raw=true&quot; alt=&quot;AliPay QRcode&quot; width=200&gt; &lt;br&gt;&lt;small&gt;🌶️来包辣条吧~🍪&lt;/small&gt; |


&lt;!-- LINK GROUP --&gt;

[back-to-top]: https://img.shields.io/badge/-BACK_TO_TOP-151515?style=flat-square
[github-project-link]: https://github.com/maboloshi/github-chinese &quot;GitHub 中文化插件&quot;
[github-issues-link]: https://github.com/maboloshi/github-chinese/issues &quot;议题&quot;
[github-issues-shield]: https://img.shields.io/github/issues/maboloshi/github-chinese?style=flat-square&amp;logo=github&amp;label=Issue
[github-stars-link]: https://github.com/maboloshi/github-chinese/stargazers &quot;星标&quot;
[github-stars-shield]: https://img.shields.io/github/stars/maboloshi/github-chinese?style=flat-square&amp;logo=github&amp;label=Star
[github-forks-link]: https://github.com/maboloshi/github-chinese/network &quot;复刻&quot;
[github-forks-shield]: https://img.shields.io/github/forks/maboloshi/github-chinese?style=flat-square&amp;logo=github&amp;label=Fork
[github-license-link]: https://opensource.org/licenses/GPL-3.0  &quot;许可证&quot;
[github-license-shield]: https://img.shields.io/github/license/maboloshi/github-chinese?style=flat-square&amp;logo=github&amp;label=License
[greasyFork-link]: https://greasyfork.org/scripts/435208  &quot;GreasyFork 源 - GitHub 中文化插件&quot;
[greasyFork-shield]: https://img.shields.io/greasyfork/dt/435208?style=flat-square&amp;logo=GreasyFork&amp;label=GreasyFork%20Installs
[pr-welcome-link]: https://github.com/maboloshi/github-chinese/pulls
[pr-welcome-shield]: https://img.shields.io/badge/🤯_pr_welcome-%E2%86%92-ffcb47?labelColor=black&amp;style=for-the-badge &quot;欢迎提交 PR&quot;
[Tampermonkey]: http://tampermonkey.net/ &quot;篡改猴&quot;
[Violentmonkey]: https://violentmonkey.github.io/ &quot;暴力猴&quot;
[Macaque]: https://macaque.app/ &quot;猕猴&quot;
[Stay]: https://apps.apple.com/cn/app/stay-for-safari-%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BC%B4%E4%BE%A3/id1591620171 &quot;Stay&quot;
[main.user.js]: https://github.com/maboloshi/github-chinese/raw/gh-pages/main.user.js &quot;GitHub 中文化插件 - GitHub 源&quot;
[main(greasyfork).user.js]: https://greasyfork.org/scripts/435208-github-%E4%B8%AD%E6%96%87%E5%8C%96%E6%8F%92%E4%BB%B6/code/GitHub%20%E4%B8%AD%E6%96%87%E5%8C%96%E6%8F%92%E4%BB%B6.user.js &quot;GitHub 中文化插件 - GreasyFork 源&quot;
[update-contributors-images]: https://github.com/maboloshi/github-chinese/blob/gh-pages/.github/workflows/update_contributors_images.yml
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[MHSanaei/3x-ui]]></title>
            <link>https://github.com/MHSanaei/3x-ui</link>
            <guid>https://github.com/MHSanaei/3x-ui</guid>
            <pubDate>Tue, 05 Aug 2025 00:05:06 GMT</pubDate>
            <description><![CDATA[Xray panel supporting multi-protocol multi-user expire day & traffic & IP limit (Vmess & Vless & Trojan & ShadowSocks & Wireguard)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/MHSanaei/3x-ui">MHSanaei/3x-ui</a></h1>
            <p>Xray panel supporting multi-protocol multi-user expire day & traffic & IP limit (Vmess & Vless & Trojan & ShadowSocks & Wireguard)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 22,356</p>
            <p>Forks: 4,882</p>
            <p>Stars today: 85 stars today</p>
            <h2>README</h2><pre>[English](/README.md) | [فارسی](/README.fa_IR.md) | [العربية](/README.ar_EG.md) |  [中文](/README.zh_CN.md) | [Español](/README.es_ES.md) | [Русский](/README.ru_RU.md)

&lt;p align=&quot;center&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./media/3x-ui-dark.png&quot;&gt;
    &lt;img alt=&quot;3x-ui&quot; src=&quot;./media/3x-ui-light.png&quot;&gt;
  &lt;/picture&gt;
&lt;/p&gt;

[![](https://img.shields.io/github/v/release/mhsanaei/3x-ui.svg?style=for-the-badge)](https://github.com/MHSanaei/3x-ui/releases)
[![](https://img.shields.io/github/actions/workflow/status/mhsanaei/3x-ui/release.yml.svg?style=for-the-badge)](https://github.com/MHSanaei/3x-ui/actions)
[![GO Version](https://img.shields.io/github/go-mod/go-version/mhsanaei/3x-ui.svg?style=for-the-badge)](#)
[![Downloads](https://img.shields.io/github/downloads/mhsanaei/3x-ui/total.svg?style=for-the-badge)](https://github.com/MHSanaei/3x-ui/releases/latest)
[![License](https://img.shields.io/badge/license-GPL%20V3-blue.svg?longCache=true&amp;style=for-the-badge)](https://www.gnu.org/licenses/gpl-3.0.en.html)

**3X-UI** — advanced, open-source web-based control panel designed for managing Xray-core server. It offers a user-friendly interface for configuring and monitoring various VPN and proxy protocols.

&gt; [!IMPORTANT]
&gt; This project is only for personal using, please do not use it for illegal purposes, please do not use it in a production environment.

As an enhanced fork of the original X-UI project, 3X-UI provides improved stability, broader protocol support, and additional features.

## Quick Start

```bash
bash &lt;(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)
```

For full documentation, please visit the [project Wiki](https://github.com/MHSanaei/3x-ui/wiki).

## A Special Thanks to

- [alireza0](https://github.com/alireza0/)

## Acknowledgment

- [Iran v2ray rules](https://github.com/chocolate4u/Iran-v2ray-rules) (License: **GPL-3.0**): _Enhanced v2ray/xray and v2ray/xray-clients routing rules with built-in Iranian domains and a focus on security and adblocking._
- [Russia v2ray rules](https://github.com/runetfreedom/russia-v2ray-rules-dat) (License: **GPL-3.0**): _This repository contains automatically updated V2Ray routing rules based on data on blocked domains and addresses in Russia._

## Support project

**If this project is helpful to you, you may wish to give it a**:star2:

&lt;p align=&quot;left&quot;&gt;
  &lt;a href=&quot;https://buymeacoffee.com/mhsanaei&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./media/buymeacoffe.png&quot; alt=&quot;Image&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

- USDT (TRC20): `TXncxkvhkDWGts487Pjqq1qT9JmwRUz8CC`
- MATIC (polygon): `0x41C9548675D044c6Bfb425786C765bc37427256A`
- LTC (Litecoin): `ltc1q2ach7x6d2zq0n4l0t4zl7d7xe2s6fs7a3vspwv`

## Stargazers over Time

[![Stargazers over time](https://starchart.cc/MHSanaei/3x-ui.svg?variant=adaptive)](https://starchart.cc/MHSanaei/3x-ui)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[anuraghazra/github-readme-stats]]></title>
            <link>https://github.com/anuraghazra/github-readme-stats</link>
            <guid>https://github.com/anuraghazra/github-readme-stats</guid>
            <pubDate>Tue, 05 Aug 2025 00:05:05 GMT</pubDate>
            <description><![CDATA[⚡ Dynamically generated stats for your github readmes]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/anuraghazra/github-readme-stats">anuraghazra/github-readme-stats</a></h1>
            <p>⚡ Dynamically generated stats for your github readmes</p>
            <p>Language: JavaScript</p>
            <p>Stars: 74,779</p>
            <p>Forks: 25,534</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[jesse-ai/jesse]]></title>
            <link>https://github.com/jesse-ai/jesse</link>
            <guid>https://github.com/jesse-ai/jesse</guid>
            <pubDate>Tue, 05 Aug 2025 00:05:04 GMT</pubDate>
            <description><![CDATA[An advanced crypto trading bot written in Python]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/jesse-ai/jesse">jesse-ai/jesse</a></h1>
            <p>An advanced crypto trading bot written in Python</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,686</p>
            <p>Forks: 897</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
&lt;br&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;assets/jesse-logo.png&quot; alt=&quot;Jesse&quot; height=&quot;72&quot; /&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
Algo-trading was 😵‍💫, we made it 🤩
&lt;/p&gt;
&lt;/div&gt;

# Jesse
[![PyPI](https://img.shields.io/pypi/v/jesse)](https://pypi.org/project/jesse)
[![Downloads](https://pepy.tech/badge/jesse)](https://pepy.tech/project/jesse)
[![Docker Pulls](https://img.shields.io/docker/pulls/salehmir/jesse)](https://hub.docker.com/r/salehmir/jesse)
[![GitHub](https://img.shields.io/github/license/jesse-ai/jesse)](https://github.com/jesse-ai/jesse)
[![coverage](https://codecov.io/gh/jesse-ai/jesse/graph/badge.svg)](https://codecov.io/gh/jesse-ai/jesse)

---

Jesse is an advanced crypto trading framework that aims to **simplify** **researching** and defining **YOUR OWN trading strategies** for backtesting, optimizing, and live trading.

## What is Jesse?
Watch this video to get a quick overview of Jesse:

[![Jesse Overview](https://img.youtube.com/vi/0EqN3OOqeJM/0.jpg)](https://www.youtube.com/watch?v=0EqN3OOqeJM)

## Why Jesse?
In short, Jesse is more **accurate** than other solutions, and way more **simple**. 
In fact, it is so simple that in case you already know Python, you can get started today, in **matter of minutes**, instead of **weeks and months**. 

## Key Features

- 📝 **Simple Syntax**: Define both simple and advanced trading strategies with the simplest syntax in the fastest time.
- 📊 **Comprehensive Indicator Library**: Access a complete library of technical indicators with easy-to-use syntax.
- 📈 **Smart Ordering**: Supports market, limit, and stop orders, automatically choosing the best one for you.
- ⏰ **Multiple Timeframes and Symbols**: Backtest and livetrade multiple timeframes and symbols simultaneously without look-ahead bias.
- 🔒 **Self-Hosted and Privacy-First**: Designed with your privacy in mind, fully self-hosted to ensure your trading strategies and data remain secure.
- 🛡️ **Risk Management**: Built-in helper functions for robust risk management.
- 📋 **Metrics System**: A comprehensive metrics system to evaluate your trading strategy&#039;s performance.
- 🔍 **Debug Mode**: Observe your strategy in action with a detailed debug mode.
- 🔧 **Optimize Mode**: Fine-tune your strategies using AI, without needing a technical background.
- 📈 **Leveraged and Short-Selling**: First-class support for leveraged trading and short-selling.
- 🔀 **Partial Fills**: Supports entering and exiting positions in multiple orders, allowing for greater flexibility.
- 🔔 **Advanced Alerts**: Create real-time alerts within your strategies for effective monitoring.
- 🤖 **JesseGPT**: Jesse has its own GPT, JesseGPT, that can help you write strategies, optimize them, debug them, and much more.
- 🔧 **Built-in Code Editor**: Write, edit, and debug your strategies with a built-in code editor.
- 📺 **Youtube Channel**: Jesse has a Youtube channel with screencast tutorials that go through example strategies step by step.

## Dive Deeper into Jesse&#039;s Capabilities

### Stupid Simple
Craft complex trading strategies with remarkably simple Python. Access 300+ indicators, multi-symbol/timeframe support, spot/futures trading, partial fills, and risk management tools. Focus on logic, not boilerplate.

```python
class GoldenCross(Strategy):
    def should_long(self):
        # go long when the EMA 8 is above the EMA 21
        short_ema = ta.ema(self.candles, 8)
        long_ema = ta.ema(self.candles, 21)
        return short_ema &gt; long_ema

    def go_long(self):
        entry_price = self.price - 10        # limit buy order at $10 below the current price
        qty = utils.size_to_qty(self.balance*0.05, entry_price) # spend only 5% of my total capital
        self.buy = qty, entry_price                 # submit entry order
        self.take_profit = qty, entry_price*1.2  # take profit at 20% above the entry price
        self.stop_loss = qty, entry_price*0.9   # stop loss at 10% below the entry price
```

### Backtest
Execute highly accurate and fast backtests without look-ahead bias. Utilize debugging logs, interactive charts with indicator support, and detailed performance metrics to validate your strategies thoroughly.

![Backtest](https://raw.githubusercontent.com/jesse-ai/storage/refs/heads/master/backtest.gif)

### Live/Paper Trading
Deploy strategies live with robust monitoring tools. Supports paper trading, multiple accounts, real-time logs &amp; notifications (Telegram, Slack, Discord), interactive charts, spot/futures, DEX, and a built-in code editor.

![Live/Paper Trading](https://raw.githubusercontent.com/jesse-ai/storage/refs/heads/master/live.gif)

### Benchmark
Accelerate research using the benchmark feature. Run batch backtests, compare across timeframes, symbols, and strategies. Filter and sort results by key performance metrics for efficient analysis.

![Benchmark](https://raw.githubusercontent.com/jesse-ai/storage/refs/heads/master/benchmark.gif)

### AI
Leverage our AI assistant even with limited Python knowledge. Get help writing and improving strategies, implementing ideas, debugging, optimizing, and understanding code. Your personal AI quant.

![AI](https://raw.githubusercontent.com/jesse-ai/storage/refs/heads/master/gpt.gif)

### Optimize Your Strategies
Unsure about optimal parameters? Let the optimization mode decide using simple syntax. Fine-tune any strategy parameter with the Optuna library and easy cross-validation.

```python
@property
def slow_sma(self):
    return ta.sma(self.candles, self.hp[&#039;slow_sma_period&#039;])

@property
def fast_sma(self):
    return ta.sma(self.candles, self.hp[&#039;fast_sma_period&#039;])

def hyperparameters(self):
    return [
        {&#039;name&#039;: &#039;slow_sma_period&#039;, &#039;type&#039;: int, &#039;min&#039;: 150, &#039;max&#039;: 210, &#039;default&#039;: 200},
        {&#039;name&#039;: &#039;fast_sma_period&#039;, &#039;type&#039;: int, &#039;min&#039;: 20, &#039;max&#039;: 100, &#039;default&#039;: 50},
    ]
```

## Getting Started
Head over to the &quot;getting started&quot; section of the [documentation](https://docs.jesse.trade/docs/getting-started). The 
documentation is **short yet very informative**. 

## Resources

- [⚡️ Website](https://jesse.trade)
- [🎓 Documentation](https://docs.jesse.trade)
- [🎥 Youtube channel (screencast tutorials)](https://jesse.trade/youtube)
- [🛟 Help center](https://jesse.trade/help)
- [💬 Discord community](https://jesse.trade/discord)
- [🤖 JesseGPT](https://jesse.trade/gpt) (Requires a free account)

## What&#039;s next?

You can see the project&#039;s **[roadmap here](https://docs.jesse.trade/docs/roadmap.html)**. **Subscribe** to our mailing list at [jesse.trade](https://jesse.trade) to get the good stuff as soon they&#039;re released. Don&#039;t worry, We won&#039;t send you spam—Pinky promise.

## Disclaimer
This software is for educational purposes only. USE THE SOFTWARE AT **YOUR OWN RISK**. THE AUTHORS AND ALL AFFILIATES ASSUME **NO RESPONSIBILITY FOR YOUR TRADING RESULTS**. **Do not risk money that you are afraid to lose**. There might be **bugs** in the code - this software DOES NOT come with **ANY warranty**.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[gorhill/uBlock]]></title>
            <link>https://github.com/gorhill/uBlock</link>
            <guid>https://github.com/gorhill/uBlock</guid>
            <pubDate>Tue, 05 Aug 2025 00:05:03 GMT</pubDate>
            <description><![CDATA[uBlock Origin - An efficient blocker for Chromium and Firefox. Fast and lean.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/gorhill/uBlock">gorhill/uBlock</a></h1>
            <p>uBlock Origin - An efficient blocker for Chromium and Firefox. Fast and lean.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 57,221</p>
            <p>Forks: 3,640</p>
            <p>Stars today: 64 stars today</p>
            <h2>README</h2><pre>[![Badge Commits]][Commit Rate]
[![Badge Issues]][Issues]
[![Badge Localization]][Crowdin]
[![Badge License]][License]
[![Badge NPM]][NPM]
[![Badge Mozilla]][Mozilla]
[![Badge Chrome]][Chrome]
[![Badge Edge]][Edge]

***

&lt;h1 align=&quot;center&quot;&gt;
&lt;sub&gt;
&lt;img src=&quot;https://github.com/gorhill/uBlock/blob/master/src/img/ublock.svg&quot; height=&quot;38&quot; width=&quot;38&quot;&gt;
&lt;/sub&gt;
uBlock Origin (uBO)
&lt;/h1&gt;

| Browser   | Install from ... | Status |
| :-------: | ---------------- | ------ |
| &lt;img src=&quot;https://github.com/user-attachments/assets/b0136512-56a5-4856-8c50-4971c957a24f&quot; alt=&quot;Get uBlock Origin for Firefox&quot;&gt; | &lt;a href=&quot;https://addons.mozilla.org/addon/ublock-origin/&quot;&gt;Firefox Add-ons&lt;/a&gt; | [uBO works best on Firefox](https://github.com/gorhill/uBlock/wiki/uBlock-Origin-works-best-on-Firefox) |
| &lt;img src=&quot;https://github.com/user-attachments/assets/3a7569f8-688b-4eb1-a643-8d0fe173aefe&quot; alt=&quot;Get uBlock Origin for Microsoft Edge&quot;&gt; | &lt;a href=&quot;https://microsoftedge.microsoft.com/addons/detail/ublock-origin/odfafepnkmbhccpbejgmiehpchacaeak&quot;&gt;Edge Add-ons&lt;/a&gt; |
| &lt;img src=&quot;https://github.com/user-attachments/assets/938f080c-fe64-4e48-8b89-4bfceabb56e6&quot; alt=&quot;Get uBlock Origin for Opera&quot;&gt; | &lt;a href=&quot;https://addons.opera.com/extensions/details/ublock/&quot;&gt;Opera Add-ons&lt;/a&gt; |
| &lt;img src=&quot;https://github.com/user-attachments/assets/5463ef88-873b-4516-8514-5277664cfde7&quot; alt=&quot;Get uBlock Origin for Chromium&quot;&gt; | &lt;a href=&quot;https://chromewebstore.google.com/detail/ublock-origin-lite/ddkjiahejlhfcafbddmgiahcphecmpfh&quot;&gt;Chrome Web Store&lt;/a&gt; | &lt;a href=&quot;https://github.com/uBlockOrigin/uBlock-issues/wiki/About-Google-Chrome&#039;s-%22This-extension-may-soon-no-longer-be-supported%22&quot;&gt;About Google Chrome&#039;s &quot;This extension may soon no longer be supported&quot;&lt;/a&gt;&lt;br&gt;End of support on Chrome 139 |
| &lt;img src=&quot;https://github.com/user-attachments/assets/2e9037c4-836d-44c1-a716-ba96e89daaff&quot; alt=&quot;Get uBlock Origin for Thunderbird&quot;&gt; | &lt;a href=&quot;https://addons.thunderbird.net/en-Us/thunderbird/addon/ublock-origin/&quot;&gt;Thunderbird Add-ons&lt;/a&gt; | [No longer updated and stuck at 1.49.2](https://github.com/uBlockOrigin/uBlock-issues/issues/2928) |

***

uBlock Origin (uBO) is a CPU and memory-efficient [wide-spectrum content blocker][Blocking] for Chromium and Firefox. It blocks ads, trackers, coin miners, popups, annoying anti-blockers, malware sites, etc., by default using [EasyList][EasyList], [EasyPrivacy][EasyPrivacy], [Peter Lowe&#039;s Blocklist][Peter Lowe&#039;s Blocklist], [Online Malicious URL Blocklist][Malicious Blocklist], and uBO [filter lists][uBO Filters]. There are many other lists available to block even more. Hosts files are also supported. uBO uses the EasyList filter syntax and [extends][Extended Syntax] the syntax to work with custom rules and filters.

You may easily unselect any preselected filter lists if you think uBO blocks too much. For reference, Adblock Plus installs with only EasyList, ABP filters, and Acceptable Ads enabled by default.

It is important to note that using a blocker is **NOT** [theft]. Do not fall for this creepy idea. The _ultimate_ logical consequence of `blocking = theft` is the criminalization of the inalienable right to privacy.

Ads, &quot;unintrusive&quot; or not, are just the visible portion of the privacy-invading means entering your browser when you visit most sites. **uBO&#039;s primary goal is to help users neutralize these privacy-invading methods** in a way that welcomes those users who do not wish to use more technical means.

***

* [Documentation](#documentation)
* [Installation](#installation)
  * [Firefox](#firefox)
  * [Thunderbird](#thunderbird)
  * [Chromium](#chromium)
  * [All Programs](#all-programs)
  * [Enterprise Deployment](#enterprise-deployment)
* [Release History](#release-history)
* [Translations](#translations)
* [About](#about)

## Documentation

&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;Basic Mode&lt;/th&gt;
            &lt;th&gt;Advanced Mode&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;The &lt;a href=&quot;https://github.com/gorhill/uBlock/wiki/Quick-guide:-popup-user-interface&quot;&gt;simple popup user interface&lt;/a&gt; for an install-it-and-forget-it type of installation that is configured optimally by default.&lt;/td&gt;
            &lt;td&gt;The &lt;a href=&quot;https://github.com/gorhill/uBlock/wiki/Dynamic-filtering:-quick-guide&quot;&gt;advanced popup user interface&lt;/a&gt; includes a point-and-click firewall that is configurable on a per-site basis.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td align=&quot;center&quot; valign=&quot;top&quot;&gt;&lt;a href=&quot;https://github.com/gorhill/uBlock/wiki/Quick-guide:-popup-user-interface&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/585534/232531044-c4ac4dd5-0b60-4c1e-aabb-914be04b846c.png&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
            &lt;td align=&quot;center&quot; valign=&quot;top&quot;&gt;&lt;a href=&quot;https://github.com/gorhill/uBlock/wiki/Dynamic-filtering:-quick-guide&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/585534/232531439-a8f81cc3-6622-45c4-8b32-7348cecf6e98.png&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

Visit the [Wiki][Wiki] for documentation.

For support, questions, or help, visit [/r/uBlockOrigin][Reddit].

## Installation

[Required Permissions][Permissions]

#### Firefox

[Firefox Add-ons][Mozilla]

[Development Builds][Beta]

uBO [works best][Works Best] on Firefox and is available for desktop and Android versions.

#### Thunderbird

[Thunderbird Add-ons][Thunderbird]

In Thunderbird, uBlock Origin does not affect emails, just feeds.

#### Chromium

[Chrome Web Store][Chrome]

[Microsoft Edge Add-ons][Edge] (Published by [Nicole Rolls][Nicole Rolls] until version 1.62. Ownership transfer at version 1.64.)

[Opera Add-ons][Opera]

[Development Builds][Chrome Dev]

uBO should be compatible with any Chromium-based browser.

#### All Programs

Do **NOT** use uBO with any other content blocker. uBO [performs][Performance] as well as or better than most popular blockers. Other blockers can prevent uBO&#039;s privacy or anti-blocker-defusing features from working correctly.

[Manual Installation][Manual Installation]

#### Enterprise Deployment

[Deploying uBO][Deployment]

## Release History

[Releases Page][Releases]

## Translations

Help translate uBO via [Crowdin][Crowdin].

## About

[Manifesto][Manifesto]

[Privacy Policy][Privacy Policy]

[GPLv3 License][License]

Free. Open-source. For users by users. No donations sought.

If you ever want to contribute something, think about the people working hard to maintain the filter lists you are using, which are available to use by all for free.


&lt;!-----------------------------------------------------------------------------&gt;

[Peter Lowe&#039;s Blocklist]: https://pgl.yoyo.org/adservers/
[Malicious Blocklist]: https://gitlab.com/malware-filter/urlhaus-filter#malicious-url-blocklist
[Performance]: https://www.debugbear.com/blog/chrome-extensions-website-performance#the-impact-of-ad-blocking-on-website-performance
[EasyPrivacy]: https://easylist.to/#easyprivacy
[Thunderbird]: https://addons.thunderbird.net/thunderbird/addon/ublock-origin/
[Chrome Dev]: https://chromewebstore.google.com/detail/ublock-origin-development/cgbcahbpdhpcegmbfconppldiemgcoii
[EasyList]: https://easylist.to/#easylist
[Mozilla]: https://addons.mozilla.org/addon/ublock-origin/
[Crowdin]: https://crowdin.com/project/ublock
[Chrome]: https://chromewebstore.google.com/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm
[Reddit]: https://www.reddit.com/r/uBlockOrigin/
[Theft]: https://x.com/LeaVerou/status/518154828166725632
[Opera]: https://addons.opera.com/extensions/details/ublock/
[Edge]: https://microsoftedge.microsoft.com/addons/detail/ublock-origin/odfafepnkmbhccpbejgmiehpchacaeak
[NPM]: https://www.npmjs.com/package/@gorhill/ubo-core

[Manifesto]: MANIFESTO.md
[License]: LICENSE.txt

[Nicole Rolls]: https://github.com/nicole-ashley

&lt;!---------------------------------[ Internal ]--------------------------------&gt;

[Manual Installation]: https://github.com/gorhill/uBlock/tree/master/dist#install
[Extended Syntax]: https://github.com/gorhill/uBlock/wiki/Static-filter-syntax#extended-syntax
[Privacy Policy]: https://github.com/gorhill/uBlock/wiki/Privacy-policy
[uBO Filters]: https://github.com/uBlockOrigin/uAssets/tree/master/filters
[Permissions]: https://github.com/gorhill/uBlock/wiki/Permissions
[Commit Rate]: https://github.com/gorhill/uBlock/commits/master
[Works Best]: https://github.com/gorhill/uBlock/wiki/uBlock-Origin-works-best-on-Firefox
[Deployment]: https://github.com/gorhill/uBlock/wiki/Deploying-uBlock-Origin
[Blocking]: https://github.com/gorhill/uBlock/wiki/Blocking-mode
[Releases]: https://github.com/gorhill/uBlock/releases
[Issues]: https://github.com/uBlockOrigin/uBlock-issues/issues
[Beta]: https://github.com/gorhill/uBlock/blob/master/dist/README.md#for-beta-version
[Wiki]: https://github.com/gorhill/uBlock/wiki

&lt;!----------------------------------[ Badges ]---------------------------------&gt;

[Badge Localization]: https://d322cqt584bo4o.cloudfront.net/ublock/localized.svg
[Badge Commits]: https://img.shields.io/github/commit-activity/m/gorhill/ublock?label=Commits
[Badge Mozilla]: https://img.shields.io/amo/rating/ublock-origin?label=Firefox
[Badge License]: https://img.shields.io/badge/License-GPLv3-blue.svg
[Badge Chrome]: https://img.shields.io/chrome-web-store/rating/cjpalhdlnbpafiamejdnhcphjbkeiagm?label=Chrome
[Badge Edge]: https://img.shields.io/badge/dynamic/json?label=Edge&amp;color=brightgreen&amp;query=%24.averageRating&amp;suffix=%2F%35&amp;url=https%3A%2F%2Fmicrosoftedge.microsoft.com%2Faddons%2Fgetproductdetailsbycrxid%2Fodfafepnkmbhccpbejgmiehpchacaeak
[Badge Issues]: https://img.shields.io/github/issues/uBlockOrigin/uBlock-issues
[Badge NPM]: https://img.shields.io/npm/v/@gorhill/ubo-core
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[eyaltoledano/claude-task-master]]></title>
            <link>https://github.com/eyaltoledano/claude-task-master</link>
            <guid>https://github.com/eyaltoledano/claude-task-master</guid>
            <pubDate>Tue, 05 Aug 2025 00:05:02 GMT</pubDate>
            <description><![CDATA[An AI-powered task-management system you can drop into Cursor, Lovable, Windsurf, Roo, and others.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/eyaltoledano/claude-task-master">eyaltoledano/claude-task-master</a></h1>
            <p>An AI-powered task-management system you can drop into Cursor, Lovable, Windsurf, Roo, and others.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 19,992</p>
            <p>Forks: 1,952</p>
            <p>Stars today: 75 stars today</p>
            <h2>README</h2><pre># Task Master [![GitHub stars](https://img.shields.io/github/stars/eyaltoledano/claude-task-master?style=social)](https://github.com/eyaltoledano/claude-task-master/stargazers)

[![CI](https://github.com/eyaltoledano/claude-task-master/actions/workflows/ci.yml/badge.svg)](https://github.com/eyaltoledano/claude-task-master/actions/workflows/ci.yml) [![npm version](https://badge.fury.io/js/task-master-ai.svg)](https://badge.fury.io/js/task-master-ai) [![Discord](https://dcbadge.limes.pink/api/server/https://discord.gg/taskmasterai?style=flat)](https://discord.gg/taskmasterai) [![License: MIT with Commons Clause](https://img.shields.io/badge/license-MIT%20with%20Commons%20Clause-blue.svg)](LICENSE)

[![NPM Downloads](https://img.shields.io/npm/d18m/task-master-ai?style=flat)](https://www.npmjs.com/package/task-master-ai) [![NPM Downloads](https://img.shields.io/npm/dm/task-master-ai?style=flat)](https://www.npmjs.com/package/task-master-ai) [![NPM Downloads](https://img.shields.io/npm/dw/task-master-ai?style=flat)](https://www.npmjs.com/package/task-master-ai)

## By [@eyaltoledano](https://x.com/eyaltoledano), [@RalphEcom](https://x.com/RalphEcom) &amp; [@jasonzhou1993](https://x.com/jasonzhou1993)

[![Twitter Follow](https://img.shields.io/twitter/follow/eyaltoledano)](https://x.com/eyaltoledano)
[![Twitter Follow](https://img.shields.io/twitter/follow/RalphEcom)](https://x.com/RalphEcom)
[![Twitter Follow](https://img.shields.io/twitter/follow/jasonzhou1993)](https://x.com/jasonzhou1993)

A task management system for AI-driven development with Claude, designed to work seamlessly with Cursor AI.

## Documentation

📚 **[View Full Documentation](https://docs.task-master.dev)**

For detailed guides, API references, and comprehensive examples, visit our documentation site.

### Quick Reference

The following documentation is also available in the `docs` directory:

- [Configuration Guide](docs/configuration.md) - Set up environment variables and customize Task Master
- [Tutorial](docs/tutorial.md) - Step-by-step guide to getting started with Task Master
- [Command Reference](docs/command-reference.md) - Complete list of all available commands
- [Task Structure](docs/task-structure.md) - Understanding the task format and features
- [Example Interactions](docs/examples.md) - Common Cursor AI interaction examples
- [Migration Guide](docs/migration-guide.md) - Guide to migrating to the new project structure

#### Quick Install for Cursor 1.0+ (One-Click)

[![Add task-master-ai MCP server to Cursor](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/install-mcp?name=task-master-ai&amp;config=eyJjb21tYW5kIjoibnB4IC15IC0tcGFja2FnZT10YXNrLW1hc3Rlci1haSB0YXNrLW1hc3Rlci1haSIsImVudiI6eyJBTlRIUk9QSUNfQVBJX0tFWSI6IllPVVJfQU5USFJPUElDX0FQSV9LRVlfSEVSRSIsIlBFUlBMRVhJVFlfQVBJX0tFWSI6IllPVVJfUEVSUExFWElUWV9BUElfS0VZX0hFUkUiLCJPUEVOQUlfQVBJX0tFWSI6IllPVVJfT1BFTkFJX0tFWV9IRVJFIiwiR09PR0xFX0FQSV9LRVkiOiJZT1VSX0dPT0dMRV9LRVlfSEVSRSIsIk1JU1RSQUxfQVBJX0tFWSI6IllPVVJfTUlTVFJBTF9LRVlfSEVSRSIsIkdST1FfQVBJX0tFWSI6IllPVVJfR1JPUV9LRVlfSEVSRSIsIk9QRU5ST1VURVJfQVBJX0tFWSI6IllPVVJfT1BFTlJPVVRFUl9LRVlfSEVSRSIsIlhBSV9BUElfS0VZIjoiWU9VUl9YQUlfS0VZX0hFUkUiLCJBWlVSRV9PUEVOQUlfQVBJX0tFWSI6IllPVVJfQVpVUkVfS0VZX0hFUkUiLCJPTExBTUFfQVBJX0tFWSI6IllPVVJfT0xMQU1BX0FQSV9LRVlfSEVSRSJ9fQ%3D%3D)

&gt; **Note:** After clicking the link, you&#039;ll still need to add your API keys to the configuration. The link installs the MCP server with placeholder keys that you&#039;ll need to replace with your actual API keys.

## Requirements

Taskmaster utilizes AI across several commands, and those require a separate API key. You can use a variety of models from different AI providers provided you add your API keys. For example, if you want to use Claude 3.7, you&#039;ll need an Anthropic API key.

You can define 3 types of models to be used: the main model, the research model, and the fallback model (in case either the main or research fail). Whatever model you use, its provider API key must be present in either mcp.json or .env.

At least one (1) of the following is required:

- Anthropic API key (Claude API)
- OpenAI API key
- Google Gemini API key
- Perplexity API key (for research model)
- xAI API Key (for research or main model)
- OpenRouter API Key (for research or main model)
- Claude Code (no API key required - requires Claude Code CLI)

Using the research model is optional but highly recommended. You will need at least ONE API key (unless using Claude Code). Adding all API keys enables you to seamlessly switch between model providers at will.

## Quick Start

### Option 1: MCP (Recommended)

MCP (Model Control Protocol) lets you run Task Master directly from your editor.

#### 1. Add your MCP config at the following path depending on your editor

| Editor       | Scope   | Linux/macOS Path                      | Windows Path                                      | Key          |
| ------------ | ------- | ------------------------------------- | ------------------------------------------------- | ------------ |
| **Cursor**   | Global  | `~/.cursor/mcp.json`                  | `%USERPROFILE%\.cursor\mcp.json`                  | `mcpServers` |
|              | Project | `&lt;project_folder&gt;/.cursor/mcp.json`   | `&lt;project_folder&gt;\.cursor\mcp.json`               | `mcpServers` |
| **Windsurf** | Global  | `~/.codeium/windsurf/mcp_config.json` | `%USERPROFILE%\.codeium\windsurf\mcp_config.json` | `mcpServers` |
| **VS Code**  | Project | `&lt;project_folder&gt;/.vscode/mcp.json`   | `&lt;project_folder&gt;\.vscode\mcp.json`               | `servers`    |

##### Manual Configuration

###### Cursor &amp; Windsurf (`mcpServers`)

```json
{
  &quot;mcpServers&quot;: {
    &quot;task-master-ai&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;--package=task-master-ai&quot;, &quot;task-master-ai&quot;],
      &quot;env&quot;: {
        &quot;ANTHROPIC_API_KEY&quot;: &quot;YOUR_ANTHROPIC_API_KEY_HERE&quot;,
        &quot;PERPLEXITY_API_KEY&quot;: &quot;YOUR_PERPLEXITY_API_KEY_HERE&quot;,
        &quot;OPENAI_API_KEY&quot;: &quot;YOUR_OPENAI_KEY_HERE&quot;,
        &quot;GOOGLE_API_KEY&quot;: &quot;YOUR_GOOGLE_KEY_HERE&quot;,
        &quot;MISTRAL_API_KEY&quot;: &quot;YOUR_MISTRAL_KEY_HERE&quot;,
        &quot;GROQ_API_KEY&quot;: &quot;YOUR_GROQ_KEY_HERE&quot;,
        &quot;OPENROUTER_API_KEY&quot;: &quot;YOUR_OPENROUTER_KEY_HERE&quot;,
        &quot;XAI_API_KEY&quot;: &quot;YOUR_XAI_KEY_HERE&quot;,
        &quot;AZURE_OPENAI_API_KEY&quot;: &quot;YOUR_AZURE_KEY_HERE&quot;,
        &quot;OLLAMA_API_KEY&quot;: &quot;YOUR_OLLAMA_API_KEY_HERE&quot;
      }
    }
  }
}
```

&gt; 🔑 Replace `YOUR_…_KEY_HERE` with your real API keys. You can remove keys you don&#039;t use.

&gt; **Note**: If you see `0 tools enabled` in the MCP settings, try removing the `--package=task-master-ai` flag from `args`.

###### VS Code (`servers` + `type`)

```json
{
  &quot;servers&quot;: {
    &quot;task-master-ai&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;--package=task-master-ai&quot;, &quot;task-master-ai&quot;],
      &quot;env&quot;: {
        &quot;ANTHROPIC_API_KEY&quot;: &quot;YOUR_ANTHROPIC_API_KEY_HERE&quot;,
        &quot;PERPLEXITY_API_KEY&quot;: &quot;YOUR_PERPLEXITY_API_KEY_HERE&quot;,
        &quot;OPENAI_API_KEY&quot;: &quot;YOUR_OPENAI_KEY_HERE&quot;,
        &quot;GOOGLE_API_KEY&quot;: &quot;YOUR_GOOGLE_KEY_HERE&quot;,
        &quot;MISTRAL_API_KEY&quot;: &quot;YOUR_MISTRAL_KEY_HERE&quot;,
        &quot;GROQ_API_KEY&quot;: &quot;YOUR_GROQ_KEY_HERE&quot;,
        &quot;OPENROUTER_API_KEY&quot;: &quot;YOUR_OPENROUTER_KEY_HERE&quot;,
        &quot;XAI_API_KEY&quot;: &quot;YOUR_XAI_KEY_HERE&quot;,
        &quot;AZURE_OPENAI_API_KEY&quot;: &quot;YOUR_AZURE_KEY_HERE&quot;,
        &quot;OLLAMA_API_KEY&quot;: &quot;YOUR_OLLAMA_API_KEY_HERE&quot;
      },
      &quot;type&quot;: &quot;stdio&quot;
    }
  }
}
```

&gt; 🔑 Replace `YOUR_…_KEY_HERE` with your real API keys. You can remove keys you don&#039;t use.

#### 2. (Cursor-only) Enable Taskmaster MCP

Open Cursor Settings (Ctrl+Shift+J) ➡ Click on MCP tab on the left ➡ Enable task-master-ai with the toggle

#### 3. (Optional) Configure the models you want to use

In your editor&#039;s AI chat pane, say:

```txt
Change the main, research and fallback models to &lt;model_name&gt;, &lt;model_name&gt; and &lt;model_name&gt; respectively.
```

For example, to use Claude Code (no API key required):
```txt
Change the main model to claude-code/sonnet
```

[Table of available models](docs/models.md) | [Claude Code setup](docs/examples/claude-code-usage.md)

#### 4. Initialize Task Master

In your editor&#039;s AI chat pane, say:

```txt
Initialize taskmaster-ai in my project
```

#### 5. Make sure you have a PRD (Recommended)

For **new projects**: Create your PRD at `.taskmaster/docs/prd.txt`  
For **existing projects**: You can use `scripts/prd.txt` or migrate with `task-master migrate`

An example PRD template is available after initialization in `.taskmaster/templates/example_prd.txt`.

&gt; [!NOTE]
&gt; While a PRD is recommended for complex projects, you can always create individual tasks by asking &quot;Can you help me implement [description of what you want to do]?&quot; in chat.

**Always start with a detailed PRD.**

The more detailed your PRD, the better the generated tasks will be.

#### 6. Common Commands

Use your AI assistant to:

- Parse requirements: `Can you parse my PRD at scripts/prd.txt?`
- Plan next step: `What&#039;s the next task I should work on?`
- Implement a task: `Can you help me implement task 3?`
- View multiple tasks: `Can you show me tasks 1, 3, and 5?`
- Expand a task: `Can you help me expand task 4?`
- **Research fresh information**: `Research the latest best practices for implementing JWT authentication with Node.js`
- **Research with context**: `Research React Query v5 migration strategies for our current API implementation in src/api.js`

[More examples on how to use Task Master in chat](docs/examples.md)

### Option 2: Using Command Line

#### Installation

```bash
# Install globally
npm install -g task-master-ai

# OR install locally within your project
npm install task-master-ai
```

#### Initialize a new project

```bash
# If installed globally
task-master init

# If installed locally
npx task-master init

# Initialize project with specific rules
task-master init --rules cursor,windsurf,vscode
```

This will prompt you for project details and set up a new project with the necessary files and structure.

#### Common Commands

```bash
# Initialize a new project
task-master init

# Parse a PRD and generate tasks
task-master parse-prd your-prd.txt

# List all tasks
task-master list

# Show the next task to work on
task-master next

# Show specific task(s) - supports comma-separated IDs
task-master show 1,3,5

# Research fresh information with project context
task-master research &quot;What are the latest best practices for JWT authentication?&quot;

# Generate task files
task-master generate

# Add rules after initialization
task-master rules add windsurf,roo,vscode
```

## Claude Code Support

Task Master now supports Claude models through the Claude Code CLI, which requires no API key:

- **Models**: `claude-code/opus` and `claude-code/sonnet`
- **Requirements**: Claude Code CLI installed
- **Benefits**: No API key needed, uses your local Claude instance

[Learn more about Claude Code setup](docs/examples/claude-code-usage.md)

## Troubleshooting

### If `task-master init` doesn&#039;t respond

Try running it with Node directly:

```bash
node node_modules/claude-task-master/scripts/init.js
```

Or clone the repository and run:

```bash
git clone https://github.com/eyaltoledano/claude-task-master.git
cd claude-task-master
node scripts/init.js
```

## Contributors

&lt;a href=&quot;https://github.com/eyaltoledano/claude-task-master/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=eyaltoledano/claude-task-master&quot; alt=&quot;Task Master project contributors&quot; /&gt;
&lt;/a&gt;

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=eyaltoledano/claude-task-master&amp;type=Timeline)](https://www.star-history.com/#eyaltoledano/claude-task-master&amp;Timeline)

## Licensing

Task Master is licensed under the MIT License with Commons Clause. This means you can:

✅ **Allowed**:

- Use Task Master for any purpose (personal, commercial, academic)
- Modify the code
- Distribute copies
- Create and sell products built using Task Master

❌ **Not Allowed**:

- Sell Task Master itself
- Offer Task Master as a hosted service
- Create competing products based on Task Master

See the [LICENSE](LICENSE) file for the complete license text and [licensing details](docs/licensing.md) for more information.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>