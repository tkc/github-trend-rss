<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Mon, 01 Sep 2025 00:05:36 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[NaiboWang/EasySpider]]></title>
            <link>https://github.com/NaiboWang/EasySpider</link>
            <guid>https://github.com/NaiboWang/EasySpider</guid>
            <pubDate>Mon, 01 Sep 2025 00:05:36 GMT</pubDate>
            <description><![CDATA[A visual no-code/code-free web crawler/spider易采集：一个可视化浏览器自动化测试/数据采集/爬虫软件，可以无代码图形化的设计和执行爬虫任务。别名：ServiceWrapper面向Web应用的智能化服务封装系统。]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/NaiboWang/EasySpider">NaiboWang/EasySpider</a></h1>
            <p>A visual no-code/code-free web crawler/spider易采集：一个可视化浏览器自动化测试/数据采集/爬虫软件，可以无代码图形化的设计和执行爬虫任务。别名：ServiceWrapper面向Web应用的智能化服务封装系统。</p>
            <p>Language: JavaScript</p>
            <p>Stars: 41,889</p>
            <p>Forks: 5,146</p>
            <p>Stars today: 127 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[alyssaxuu/screenity]]></title>
            <link>https://github.com/alyssaxuu/screenity</link>
            <guid>https://github.com/alyssaxuu/screenity</guid>
            <pubDate>Mon, 01 Sep 2025 00:05:35 GMT</pubDate>
            <description><![CDATA[The free and privacy-friendly screen recorder with no limits 🎥]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/alyssaxuu/screenity">alyssaxuu/screenity</a></h1>
            <p>The free and privacy-friendly screen recorder with no limits 🎥</p>
            <p>Language: JavaScript</p>
            <p>Stars: 16,907</p>
            <p>Forks: 1,338</p>
            <p>Stars today: 111 stars today</p>
            <h2>README</h2><pre># Screenity
[![jiewjjc232](https://github.com/alyssaxuu/screenity/assets/7581348/ed55e52e-4adf-442b-b774-6856abacdffb)](https://screenity.io)


The free and privacy-friendly screen recorder with no limits 🎥

[Get it now - it&#039;s free!](https://chrome.google.com/webstore/detail/screenity-screen-recorder/kbbdabhdfibnancpjfhlkhafgdilcnji)

Screenity is a powerful privacy-friendly screen recorder and annotation tool to make better videos for work, education, and more. You can create stunning product demos, tutorials, presentations, or share feedback with your team - all for free.

&gt; You can support this project (and many others) through [GitHub Sponsors](https://github.com/sponsors/alyssaxuu)! ❤️

Made by [Alyssa X](https://alyssax.com)

&lt;a href=&quot;https://www.producthunt.com/posts/screenity?utm_source=badge-top-post-badge&amp;utm_medium=badge&amp;utm_souce=badge-screenity&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=275308&amp;theme=light&amp;period=daily&quot; alt=&quot;Screenity - The most powerful screen recorder for Chrome | Product Hunt&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://news.ycombinator.com/item?id=25150804&quot; target=&quot;_blank&quot;&gt;&lt;img height=53 src=&quot;https://hackerbadge.now.sh/api?id=25150804&amp;type=orange&quot; alt=&quot;Featured on HackerNews&quot;&gt;&lt;/a&gt;

&gt; ❗️ Screenity has been rebuilt from the ground up, and updated to MV3. [Click here](https://help.screenity.io/getting-started/77KizPC8MHVGfpKpqdux9D/what%E2%80%99s-changed-in-the-new-version-of-screenity/bDtvcwAtw9PPesQeNH4zjE) to here to learn more about why, and what&#039;s changed in the new version. Also note that **the license has changed to [GPLv3](https://github.com/alyssaxuu/screenity/blob/master/LICENSE)**, but the older MV2 version remains MIT licensed. Make sure you read the license and the [Terms of Service](https://screenity.io/en/terms/) regarding intellectual property.

## Table of contents

- [Features](#features)
- [Self-hosting Screenity](#self-hosting-screenity)
- [Creating a development version](#creating-a-development-version)
  - [Enabling Save to Google Drive](#enabling-save-to-google-drive)
- [Acknowledgements](#acknowledgements)

## Features

🎥 Make unlimited recordings of your tab, a specific area, desktop, any application, or camera&lt;br&gt;
🎙️ Record your microphone or internal audio, and use features like push to talk&lt;br&gt;
✏️ Annotate by drawing anywhere on the screen, adding text, arrows, shapes, and more&lt;br&gt;
✨ Use AI-powered camera backgrounds or blur to enhance your recordings&lt;br&gt;
🔎 Zoom in smoothly in your recordings to focus on specific areas&lt;br&gt;
🪄 Blur out any sensitive content of any page to keep it private&lt;br&gt;
✂️ Remove or add audio, cut, trim, or crop your recordings with a comprehensive editor&lt;br&gt;
👀 Highlight your clicks and cursor, and go in spotlight mode&lt;br&gt;
⏱️ Set up alarms to automatically stop your recording&lt;br&gt;
💾 Export as mp4, gif, and webm, or save the video directly to Google Drive to share a link&lt;br&gt;
⚙️ Set a countdown, hide parts of the UI, or move it anywhere&lt;br&gt;
🔒 Only you can see your videos, we don’t collect any of your data. You can even go offline!&lt;br&gt;
💙 No limits, make as many videos as you want, for as long as you want&lt;br&gt; …and much more - all for free &amp; no sign in needed!

## Self-hosting Screenity

You can run Screenity locally without having to install it from the Chrome Store. Here&#039;s how:

1. Download the latest Build.zip from the [releases page](https://github.com/alyssaxuu/screenity/releases)
2. Load the extension by pasting `chrome://extensions/` in the address bar, and [enabling developer mode](https://developer.chrome.com/docs/extensions/mv2/faq/#:~:text=You%20can%20start%20by%20turning,a%20packaged%20extension%2C%20and%20more.).
3. Drag the folder that contains the code (make sure it&#039;s a folder and not a ZIP file, so unzip first), or click on the &quot;Load unpacked&quot; button and locate the folder.
4. That&#039;s it, you should now be able to use Screenity locally. [Follow these instructions](#enabling-save-to-google-drive) to set up the Google Drive integration.

## Creating a development version

&gt; ❗️ Note that the license has changed to [GPLv3](https://github.com/alyssaxuu/screenity/blob/master/LICENSE) for the current MV3 version (Screenity version 3.0.0 and higher). Make sure to read the license and the [Terms of Service](https://screenity.io/en/terms/) regarding intellectual property.

1. Check if your [Node.js](https://nodejs.org/) version is &gt;= **14**.
2. Clone this repository.
3. Run `npm install` to install the dependencies.
4. Run `npm start`.
5. Load the extension by going to `chrome://extensions/` , and [enabling developer mode](https://developer.chrome.com/docs/extensions/mv2/faq/#:~:text=You%20can%20start%20by%20turning,a%20packaged%20extension%2C%20and%20more.).
6. Click on `Load unpacked extension`.
7. Select the `build` folder.

### Enabling Save to Google Drive

To enable the Google Drive Upload (authorization consent screen) you must change the client_id in the manifest.json file with your linked extension key.

You can create it accessing [Google Cloud Console](https://console.cloud.google.com/apis/credentials) and selecting Create Credential &gt; OAuth Client ID &gt; Chrome App. To create a persistent extension key, you can follow the steps detailed [here](https://developer.chrome.com/docs/extensions/reference/manifest/key).

## Libraries used

- [FFmpeg WASM](https://ffmpegwasm.netlify.app/) for editing and encoding videos
- [Tensorflow](https://github.com/tensorflow/tfjs) with the [Selfie Segmentation](https://blog.tensorflow.org/2022/01/body-segmentation.html) model
- [Fabric.js](https://github.com/fabricjs/fabric.js) for drawing and annotating
- [Radix Primitives](https://www.radix-ui.com/primitives) for the UI components
- [react-color](https://uiwjs.github.io/react-color/) for the color wheel
- [localForage](https://github.com/localForage/localForage) to help store videos offline with IndexedDB
- [Wavesurfer.js](https://wavesurfer.xyz/) to create audio waveforms in the popup and the editor
- [React Advanced Cropper](https://advanced-cropper.github.io/react-advanced-cropper/) for the cropping UI in the editor
- [fix-webm-duration](https://github.com/yusitnikov/fix-webm-duration) to add missing metadata to WEBM files

## Acknowledgements

- Thanks to [HelpKit](https://www.helpkit.so/) for sponsoring this project by hosting the [Screenity Help Center](https://help.screenity.io/).
- Thanks to [Mei Xuan](https://www.behance.net/meixuanloo) for helping with the Chinese translation of the extension.

If you need any help, or want to become a Screenity expert, you can browse articles and guides in the [help center](https://help.screenity.io). You can also submit any feedback or ideas in this [form](https://tally.so/r/3ElpXq), or contact through [this page](https://help.screenity.io/contact)

Feel free to reach out to me through email at hi@alyssax.com or [on Twitter](https://twitter.com/alyssaxuu) if you have any questions or feedback! Hope you find this useful 💜
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[met4citizen/TalkingHead]]></title>
            <link>https://github.com/met4citizen/TalkingHead</link>
            <guid>https://github.com/met4citizen/TalkingHead</guid>
            <pubDate>Mon, 01 Sep 2025 00:05:34 GMT</pubDate>
            <description><![CDATA[Talking Head (3D): A JavaScript class for real-time lip-sync using Ready Player Me full-body 3D avatars.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/met4citizen/TalkingHead">met4citizen/TalkingHead</a></h1>
            <p>Talking Head (3D): A JavaScript class for real-time lip-sync using Ready Player Me full-body 3D avatars.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 752</p>
            <p>Forks: 208</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre># Talking Head (3D)

### Demo Videos

*All the demo videos are real-time screen captures from a Chrome browser running
the TalkingHead test web app without any post-processing.*

Video | Description
--- | ---
&lt;span style=&quot;display: block; min-width:400px&quot;&gt;[&lt;img src=&quot;images/dynamicbones.jpg&quot; width=&quot;400&quot;/&gt;](https://youtu.be/YUbDIWkskuw)&lt;br&gt;[&lt;img src=&quot;images/dynamicbones2.jpg&quot; width=&quot;400&quot;/&gt;](https://youtu.be/4Y9NFnENH5s)&lt;/span&gt; | Having a good hair day! – A two-part introduction to the TalkingHead&#039;s dynamic bones feature 🦴🦴 and built-in physics engine. Using custom models with rigged hair and two different hairstyles. See Appendix E for more details.
[&lt;img src=&quot;images/screenshot4.jpg&quot; width=&quot;400&quot;/&gt;](https://youtu.be/OA6LBZjkzJI) | I chat with Jenny and Harri. The close-up view allows you to evaluate the accuracy of lip-sync in both English and Finnish. Using GPT-3.5 and Microsoft text-to-speech.
[&lt;img src=&quot;images/screenshot5.jpg&quot; width=&quot;400&quot;/&gt;](https://youtu.be/fJrYGaGCAGo) | A short demo of how AI can control the avatar&#039;s movements. Using OpenAI&#039;s function calling and Google TTS with the TalkingHead&#039;s built-in viseme generation.
[&lt;img src=&quot;images/screenshot6.jpg&quot; width=&quot;400&quot;/&gt;](https://youtu.be/6XRxALY1Iwg) | Michael lip-syncs to two MP3 audio tracks using OpenAI&#039;s Whisper and TalkingHead&#039;s `speakAudio` method. He kicks things off with some casual talk, but then goes all out by trying to tackle an old Meat Loaf classic. 🤘 Keep rockin&#039;, Michael! 🎤😂
[&lt;img src=&quot;images/screenshot3.jpg&quot; width=&quot;400&quot;/&gt;](https://youtu.be/SfnqRnWKT40) | Julia and I showcase some of the features of the TalkingHead class and the test app including the settings, some poses and animations.

---

### Use Case Examples

*Some videos, apps, and projects using the TalkingHead class:*

Video/App | Use Case
--- | ---
&lt;span style=&quot;display: block; min-width:400px&quot;&gt;[&lt;img src=&quot;images/olivia.jpg&quot; width=&quot;400&quot;/&gt;](https://youtu.be/9GeXwjuslnQ)&lt;/span&gt; | **Video conferencing**. A video conferencing solution with real-time transcription, contextual AI responses, and voice lip-sync. The app and demo, featuring Olivia, by [namnm](https://github.com/namnm) 👍
[&lt;img src=&quot;images/edgespeaker.png&quot; width=&quot;400&quot;/&gt;](https://www.edgespeaker.com/) | **Fully in-browser AI you can talk to**. Uses TalkingHead, [HeadTTS (with Kokoro)](https://github.com/met4citizen/HeadTTS), [whisper-web](https://github.com/xenova/whisper-web), and [WebLLM (with Llama 3.2)](https://github.com/mlc-ai/web-llm). No APIs, no accounts. For more details, see [#115](https://github.com/met4citizen/TalkingHead/issues/115). — For best performance and WebGPU support, use a desktop version of Chrome or Edge: 👉 [EdgeSpeaker.com](https://www.edgespeaker.com/)
[&lt;img src=&quot;images/geminicompetition.jpg&quot; width=&quot;400&quot;/&gt;](https://www.youtube.com/watch?v=Dl2o9kRvbLQ) | **Recycling Advisor 3D**. Snap a photo and get local recycling advice from a talking avatar. My entry for the [Gemini API Developer Competition](https://ai.google.dev/competition/projects/recycling-advisor-3d).
[&lt;img src=&quot;images/evertrail.jpg&quot; width=&quot;400&quot;/&gt;](https://www.youtube.com/watch?v=OG1vwOit_Yk) | **Live Twitch adventure**. [Evertrail](https://evertrail.app) is an infinite, real-time generated world where all of your choices shape the outcome. Video clip and the app by [JPhilipp](https://github.com/JPhilipp) 👏👏&lt;br&gt;**NEWS**: Featured at the AI Film Awards during the 2025 Cannes Film Festival!
[&lt;img src=&quot;images/cliquevm.jpg&quot; width=&quot;400&quot;/&gt;](https://www.youtube.com/watch?v=vNJ9Ifv-as8) | **Quantum physics using a blackboard**. David introduces us to the CHSH game and explores the mystery of quantum entanglement. For more information about the research project, see [CliqueVM](https://github.com/met4citizen/CliqueVM).
[&lt;img src=&quot;images/interactiveportfolio.jpg&quot; width=&quot;400&quot;/&gt;](https://akshatrastogi.in/) | **Interactive Portfolio**. Click the image to open the app, where you can interview the virtual persona of its developer, [AkshatRastogi-1nC0re](https://github.com/AkshatRastogi-1nC0re) 👋
[&lt;img src=&quot;images/datingprofile.jpg&quot; width=&quot;400&quot;/&gt;](https://www.youtube.com/watch?v=Hv-ItCZ0qc4) | **Interactive Dating Profiles**. ❤️ Researchers from the MIT Media Lab and Harvard used the TalkingHead class and data-driven AI to create digital twins that potential dating partners could interact with. Their paper (Baradari et al., 2025) was presented at [CHI 2025](https://programs.sigchi.org/chi/2025/program/content/194739) in Japan. 


---

### Introduction

Talking Head (3D) is a browser JavaScript class featuring a 3D avatar that can
speak and lip-sync in real-time. The class supports
[Ready Player Me](https://readyplayer.me/) / [PlayerZero](https://playerzero.me/)
full-body 3D avatars (GLB) and
[Mixamo](https://www.mixamo.com) animations (FBX).
It also knows a set of emojis and can convert them into facial expressions.

You can create your own 3D avatar for free using the Ready Player Me or PlayerZero
service. Alternatively, you can create a custom 3D avatar by making it compatible with
RPM models. See Appendix A for more details.

By default, the class uses
[Google Cloud TTS](https://cloud.google.com/text-to-speech) for text-to-speech
and has a built-in lip-sync support for English, Finnish, and Lithuanian (beta).
New lip-sync languages can be added by creating new lip-sync language modules.

It is also possible to integrate the TalkingHead class with any external
TTS service that can provide word-level timestamps, such as the
[ElevenLabs WebSocket API](https://elevenlabs.io).
Note that a lip-sync language module is not required if your TTS engine
can output viseme IDs or blend shape data directly. For example, by using the
[Microsoft Azure Speech SDK](https://github.com/microsoft/cognitive-services-speech-sdk-js),
you can extend TalkingHead&#039;s lip-sync support to 100+ languages.

The class uses [ThreeJS](https://github.com/mrdoob/three.js/) / WebGL for 3D
rendering.

&gt; [!TIP]
&gt; If you&#039;re looking for a free English TTS that can output timestamps and viseme IDs, check out [HeadTTS](https://github.com/met4citizen/HeadTTS). It offers Kokoro neural voices, phoneme-level timestamps, and can run locally or even entirely in a browser using WebGPU. And best of all, it&#039;s fully compatible with the TalkingHead class.

---

### Talking Head class

You can download the TalkingHead modules from
[releases](https://github.com/met4citizen/TalkingHead/releases)
(without dependencies). Alternatively, you can install them from
[NPM](https://www.npmjs.com/package/@met4citizen/talkinghead),
or import all the needed modules from a CDN:

```javascript
&lt;script type=&quot;importmap&quot;&gt;
{ &quot;imports&quot;:
  {
    &quot;three&quot;: &quot;https://cdn.jsdelivr.net/npm/three@0.170.0/build/three.module.js/+esm&quot;,
    &quot;three/addons/&quot;: &quot;https://cdn.jsdelivr.net/npm/three@0.170.0/examples/jsm/&quot;,
    &quot;talkinghead&quot;: &quot;https://cdn.jsdelivr.net/gh/met4citizen/TalkingHead@1.5/modules/talkinghead.mjs&quot;
  }
}
&lt;/script&gt;
```

&gt; [!TIP]
&gt; **FOR HOBBYISTS:** If you&#039;re just looking to experiment on your personal
laptop without dealing with proxies, JSON Web Tokens, or Single Sign-On,
take a look at the [minimal code example](https://github.com/met4citizen/TalkingHead/blob/main/examples/minimal.html).
Simply download the file, add your Google TTS API key, and you&#039;ll
have a basic web app template with a talking head.

If you want to use the built-in Google TTS and lip-sync using
Single Sign-On (SSO) functionality, give the class your TTS proxy endpoint and
a function from which to obtain the JSON Web Token needed to use that proxy.
Refer to Appendix B for one way to implement JWT SSO.

```javascript
import { TalkingHead } from &quot;talkinghead&quot;;

// Create the talking head avatar
const nodeAvatar = document.getElementById(&#039;avatar&#039;);
const head = new TalkingHead( nodeAvatar, {
  ttsEndpoint: &quot;/gtts/&quot;,
  jwtGet: jwtGet,
  lipsyncModules: [&quot;en&quot;, &quot;fi&quot;],
  mixerGainSpeech: 3
});
```

&lt;details&gt;
  &lt;summary&gt;CLICK HERE to see all the available OPTIONS.&lt;/summary&gt;

Option | Description | Default
--- | --- | ---
`jwsGet` | Function to get the JSON Web Token (JWT). See Appendix B for more information. | `null`
`ttsEndpoint` | Text-to-speech backend/endpoint/proxy implementing the Google Text-to-Speech API. | `null`
`ttsApikey` | If you don&#039;t want to use a proxy or JWT, you can use Google TTS endpoint directly and provide your API key here. **NOTE: I recommend that you don&#039;t use this in production and never put your API key in any client-side code.** | `null`
`ttsLang` | Google text-to-speech language. | `&quot;fi-FI&quot;`
`ttsVoice` | Google text-to-speech voice. The used voice must support SSML and \&lt;mark&gt; tags that are needed to get word-level timestamps. Currently, Google supports SSML and \&lt;mark&gt; tags when using Standard, Wavenet, Neural2, News, or Casual voice types. | `&quot;fi-FI-Standard-A&quot;`
`ttsRate` | Google text-to-speech rate in the range [0.25, 4.0]. | `1.0`
`ttsPitch` | Google text-to-speech pitch in the range [-20.0, 20.0]. | `0`
`ttsVolume` | Google text-to-speech volume gain (in dB) in the range [-96.0, 16.0]. | `0`
`ttsTrimStart` | Trim the viseme sequence start relative to the beginning of the audio (shift in milliseconds). | `0`
`ttsTrimEnd` | Trim the viseme sequence end relative to the end of the audio (shift in milliseconds). | `400`
`mixerGainSpeech` | The amount of gain for speech. See Web Audio API / GainNode for more information. | `null`
`mixerGainBackground` | The amount of gain for background audio. See Web Audio API / GainNode for more information. | `null`
`lipsyncModules`| Lip-sync modules to load dynamically at start-up. Limiting the number of language modules improves the loading time and memory usage. | `[&quot;en&quot;, &quot;fi&quot;, &quot;lt&quot;]`
`lipsyncLang`| Lip-sync language. | `&quot;fi&quot;`
`pcmSampleRate` | PCM (signed 16bit little endian) sample rate used in `speakAudio` in Hz. | `22050`
`modelRoot` | The root name of the armature. | `Armature`
`modelPixelRatio` | Sets the device&#039;s pixel ratio. | `1`
`modelFPS` | Frames per second. Note that actual frame rate will be a bit lower than the set value. | `30`
`modelMovementFactor` | A factor in the range [0,1] limiting the avatar&#039;s upper body movement when standing. | `1`
`dracoEnabled` | If `true`, use Draco geometry compression. [&amp;#8805;`v1.5`] | `false`
`dracoDecoderPath` | Draco decoder library path. [&amp;#8805;`v1.5`] | `&quot;https://www.gstatic.com/`&lt;br&gt;`draco/v1/decoders/&quot;`
`cameraView` | Initial view. Supported views are `&quot;full&quot;`, `&quot;mid&quot;`, `&quot;upper&quot;`  and `&quot;head&quot;`. | `&quot;full&quot;`
`cameraDistance` | Camera distance offset for initial view in meters. | `0`
`cameraX` | Camera position offset in X direction in meters. | `0`
`cameraY` | Camera position offset in Y direction in meters. | `0`
`cameraRotateX` | Camera rotation offset in X direction in radians. | `0`
`cameraRotateY` | Camera rotation offset in Y direction in radians. | `0`
`cameraRotateEnable` | If true, the user is allowed to rotate the 3D model. | `true`
`cameraPanEnable` | If true, the user is allowed to pan the 3D model. | `false`
`cameraZoomEnable` | If true, the user is allowed to zoom the 3D model. | `false`
`lightAmbientColor` | Ambient light color. The value can be a hexadecimal color or CSS-style string. | `0xffffff`
`lightAmbientIntensity` | Ambient light intensity. | `2`
`lightDirectColor` | Direction light color. The value can be a hexadecimal color or CSS-style string. | `0x8888aa`
`lightDirectIntensity` | Direction light intensity. | `30`
`lightDirectPhi` | Direction light phi angle. | `0.1`
`lightDirectTheta` | Direction light theta angle. | `2`
`lightSpotColor` | Spot light color. The value can be a hexadecimal color or CSS-style string. | `0x3388ff`
`lightSpotIntensity` | Spot light intensity. | `0`
`lightSpotPhi` | Spot light phi angle. | `0.1`
`lightSpotTheta` | Spot light theta angle. | `4`
`lightSpotDispersion` | Spot light dispersion. | `1`
`avatarMood` | The mood of the avatar. Supported moods: `&quot;neutral&quot;`, `&quot;happy&quot;`, `&quot;angry&quot;`, `&quot;sad&quot;`, `&quot;fear&quot;`, `&quot;disgust&quot;`, `&quot;love&quot;`, `&quot;sleep&quot;`. | `&quot;neutral&quot;`
`avatarMute`| Mute the avatar. This can be helpful option if you want to output subtitles without audio and lip-sync. | `false`
`avatarIdle`&lt;br&gt;`EyeContact` | The average proportion of eye contact while idle in the range [0,1]. | `0.2`
`avatarIdle`&lt;br&gt;`HeadMove` | The average proportion of head movement while idle in the range [0,1]. | `0.5`
`avatarSpeaking`&lt;br&gt;`EyeContact` | The average proportion of eye contact while speaking in the range [0,1]. | `0.5`
`avatarSpeaking`&lt;br&gt;`HeadMove` | The average proportion of head movement while speaking in the range [0,1]. | `0.5`
`avatarIgnoreCamera` | If set to `true`, makes the avatar to ignore the camera and speak to whatever it is facing. | `false`
`listeningSilence`&lt;br&gt;`ThresholdLevel` |  Silence detection threshold in the range of [0,100]. If the volume stays below the level for the set duration, a `&quot;stop&quot;` event is triggered. | `40`
`listeningSilence`&lt;br&gt;`ThresholdMs` | Silence detection duration in milliseconds. If the volume stays below the level for the set duration, a `&quot;stop&quot;` event is triggered. | `2000`
`listeningSilence`&lt;br&gt;`DurationMax` | Maximum silence in milliseconds before `&quot;maxsilence&quot;` event is triggered. | `10000`
`listeningActive`&lt;br&gt;`ThresholdLevel` | Activity detection threshold in the range of [0,100]. If the volume stays above the set level for the set duration, a `&quot;start&quot;` event is triggered. | `90`
`listeningActive`&lt;br&gt;`ThresholdMs` | Activity detection duration in milliseconds. If the volume stays above the set level for the set duration, a `&quot;start&quot;` event is triggered. | `400`
`listeningActive`&lt;br&gt;`DurationMax` | Maximum activity in milliseconds before `&quot;maxactive&quot;` event is triggered. | `240000`
`avatarOnly` | If `true`, creates an avatar armature object instead of a standalone instance with a 3D scene, lights, and renderer. Read Appendix H for more details about the `avatarOnly` mode. (EXPERIMENTAL) | `false`
`avatarOnlyCamera` | In `avatarOnly` mode, sets the camera to which the avatar is linked. | `null`
`avatarOnlyScene` | If set in `avatarOnly` mode, the armature object is automatically added to the specified scene. | `null`
`update` | Custom callback function inside the `requestAnimationFrame` animation loop. Enables the app to do custom processing before rendering the 3D scene. If `null`, disabled. | `null`
`statsNode` | Parent DOM element for the three.js stats display. If `null`, don&#039;t use. | `null`
`statsStyle` | CSS style for the stats element. If `null`, use the three.js default style. | `null`

&lt;/details&gt;

Once the instance has been created, you can load and display your avatar.
Refer to Appendix A for how to make your avatar:

```javascript
// Load and show the avatar
try {
  await head.showAvatar( {
    url: &#039;./avatars/brunette.glb&#039;,
    body: &#039;F&#039;,
    avatarMood: &#039;neutral&#039;,
    ttsLang: &quot;en-GB&quot;,
    ttsVoice: &quot;en-GB-Standard-A&quot;,
    lipsyncLang: &#039;en&#039;
  });
} catch (error) {
  console.log(error);
}
```

An example of how to make the avatar speak the text on input `text` when
the button `speak` is clicked:

```javascript
// Speak &#039;text&#039; when the button &#039;speak&#039; is clicked
const nodeSpeak = document.getElementById(&#039;speak&#039;);
nodeSpeak.addEventListener(&#039;click&#039;, function () {
  try {
    const text = document.getElementById(&#039;text&#039;).value;
    if ( text ) {
      head.speakText( text );
    }
  } catch (error) {
    console.log(error);
  }
});
```

&lt;details&gt;
  &lt;summary&gt;CLICK HERE to see the key METHODS.&lt;/summary&gt;

Method | Description
--- | ---
`showAvatar(avatar, [onprogress=null])` | Load and show the specified avatar. The `avatar` object must include the `url` for GLB file. Optional properties are `body` for either male `M` or female `F` body form, `lipsyncLang`, `lipsyncHeadMovement`, `baseline` object for blend shape baseline, `modelDynamicBones` for dynamic bones (see Appendix E), `ttsLang`, `ttsVoice`, `ttsRate`, `ttsPitch`, `ttsVolume`, `avatarMood`, `avatarMute`, `avatarIdleEyeContact`, `avatarSpeakingEyeContact`, `avatarListeningEyeContact`, and `avatarIgnoreCamera`.
`setView(view, [opt])` | Set view. Supported views are `&quot;full&quot;`, `&quot;mid&quot;`, `&quot;upper&quot;`  and `&quot;head&quot;`. The `opt` object can be used to set `cameraDistance`, `cameraX`, `cameraY`, `cameraRotateX`, `cameraRotateY`.
`setLighting(opt)` | Change lighting settings. The `opt` object can be used to set `lightAmbientColor`, `lightAmbientIntensity`, `lightDirectColor`, `lightDirectIntensity`, `lightDirectPhi`, `lightDirectTheta`, `lightSpotColor`, `lightSpotIntensity`, `lightSpotPhi`, `lightSpotTheta`, `lightSpotDispersion`.
`speakText(text, [opt={}], [onsubtitles=null], [excludes=[]])` | Add the `text` string to the speech queue. The text can contain face emojis. Options `opt` can be used to set text-specific `lipsyncLang`, `ttsLang`, `ttsVoice`, `ttsRate`, `ttsPitch`, `ttsVolume`, `avatarMood`, `avatarMute`. Optional callback function `onsubtitles` is called whenever a new subtitle is to be written with the parameter of the added string. The optional `excludes` is an array of [start,end] indices to be excluded from audio but to be included in the subtitles.
`speakAudio(audio, [opt={}], [onsubtitles=null])` | Add a new `audio` object to the speech queue. In audio object, property `audio` is either `AudioBuffer` or an array of PCM 16bit LE audio chunks. Property `words` is an array of words, `wtimes` is an array of corresponding starting times in milliseconds, and `wdurations` an array of durations in milliseconds. If the Oculus viseme IDs are known, they can be given in optional `visemes`, `vtimes` and `vdurations` arrays. The object also supports optional timed callbacks using `markers` and `mtimes`. In addition, you can provide an optional `anim` as an animation template object that can drive your own blendshape or morph target data in sync with audio playback. See Appendix F for more details. The `opt` object can be used to set text-specific `lipsyncLang`.
`streamStart(opt={},  onAudioStart = null, onAudioEnd = null, onSubtitles = null, onMetrics = null)` | Sets the talking head in streaming mode. See Appendix G for streaming instructions.
`streamAudio(audio)` | Starts feeding audio chunks to talkinghead in the streaming mode. See Appendix G for streaming instructions.
`streamNotifyEnd()` | Signals the end of streaming audio chunks to the talkinghead. See Appendix G for streaming instructions.
`streamInterrupt()` | Interrupts ongoing audio and lip-sync in streaming mode without ending the session. See Appendix G for streaming instructions.
`streamStop()` | Exits the streaming mode and ends the session. See Appendix G for streaming instructions.
`speakEmoji(e)` | Add an emoji `e` to the speech queue.
`speakBreak(t)` | Add a break of `t` milliseconds to the speech queue.
`speakMarker(onmarker)` | Add a marker to the speech queue. The callback function `onmarker` is called when the queue processes the marker.
`lookAt(x,y,t)` | Make the avatar&#039;s head turn to look at the screen position (`x`,`y`) for `t` milliseconds.
`lookAhead(t)` | Make avatar look ahead for `t` milliseconds.
`lookAtCamera(t)` | Make the avatar&#039;s head turn to look at the camera for `t` milliseconds. If `avatarIgnoreCamera` is set to `true`, looks ahead for `t` milliseconds.
`makeEyeContact(t)` | Make the avatar maintain eye contact with the person in front of it for (at least) `t` milliseconds.
`setMood(mood)` | Set avatar mood.
`playBackgroundAudio(url)` | Play background audio such as ambient sounds/music in a loop.
`stopBackgroundAudio()` | Stop playing the background audio.
`setMixerGain(speech, [background=null], [fadeSecs=0])` | The amount of gain for speech and background audio (see Web Audio API / GainNode for more information). Value `null` means no change. Optional `fadeSecs` parameter sets exponential fade in/out time in seconds.
`playAnimation(url, [onprogress=null], [dur=10], [ndx=0], [scale=0.01])` | Play Mixamo animation file for `dur` seconds, but full rounds and at least once. If the FBX file includes several anim

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[GoogleChrome/lighthouse]]></title>
            <link>https://github.com/GoogleChrome/lighthouse</link>
            <guid>https://github.com/GoogleChrome/lighthouse</guid>
            <pubDate>Mon, 01 Sep 2025 00:05:33 GMT</pubDate>
            <description><![CDATA[Automated auditing, performance metrics, and best practices for the web.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/GoogleChrome/lighthouse">GoogleChrome/lighthouse</a></h1>
            <p>Automated auditing, performance metrics, and best practices for the web.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 29,340</p>
            <p>Forks: 9,558</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[popcorn-official/popcorn-desktop]]></title>
            <link>https://github.com/popcorn-official/popcorn-desktop</link>
            <guid>https://github.com/popcorn-official/popcorn-desktop</guid>
            <pubDate>Mon, 01 Sep 2025 00:05:32 GMT</pubDate>
            <description><![CDATA[Popcorn Time is a multi-platform, free software BitTorrent client that includes an integrated media player ( Windows / Mac / Linux ) A Butter-Project Fork]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/popcorn-official/popcorn-desktop">popcorn-official/popcorn-desktop</a></h1>
            <p>Popcorn Time is a multi-platform, free software BitTorrent client that includes an integrated media player ( Windows / Mac / Linux ) A Butter-Project Fork</p>
            <p>Language: JavaScript</p>
            <p>Stars: 9,881</p>
            <p>Forks: 661</p>
            <p>Stars today: 1 star today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://popcorn-time.site&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/7267937?s=200&quot; alt=&quot;Popcorn Time&quot; width=&quot;200&quot;&gt;&lt;/a&gt;
  &lt;br&gt;
  Popcorn Time
  &lt;br&gt;
  &lt;br&gt;
&lt;/h1&gt;

&lt;h4 align=&quot;center&quot;&gt;A multi-platform, free software BitTorrent client that includes an integrated media player.&lt;/h4&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/popcorn-official/popcorn-desktop/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/popcorn-official/popcorn-desktop?color=brightgreen&amp;label=latest%20release&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/popcorn-official/popcorn-desktop/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release-date/popcorn-official/popcorn-desktop?label=&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/popcorn-official/popcorn-desktop/compare/master...development&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/commits-since/popcorn-official/popcorn-desktop/latest?label=commits%20since&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/popcorn-official/popcorn-desktop/commit/development&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/popcorn-official/popcorn-desktop?label=latest%20commit&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/popcorn-official/popcorn-desktop/actions&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/popcorn-official/popcorn-desktop/build.yml?branch=development&amp;label=latest%20build&quot;&gt;&lt;/a&gt;&lt;br&gt;
  &lt;a href=&quot;https://popcorn-time.site&quot;&gt;&lt;img src=&quot;https://img.shields.io/website?down_color=red&amp;down_message=offline&amp;label=popcorn-time.site&amp;up_color=brightgreen&amp;up_message=online&amp;url=https%3A%2F%2Fpopcorn-time.site&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/popcorn-official&quot;&gt;&lt;img src=&quot;https://img.shields.io/website?down_color=red&amp;down_message=offline&amp;label=github&amp;up_color=brightgreen&amp;up_message=online&amp;url=https%3A%2F%2Fgithub.com%2Fpopcorn-official&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.reddit.com/r/PopCornTimeApp&quot;&gt;&lt;img src=&quot;https://img.shields.io/website?down_color=red&amp;down_message=offline&amp;label=reddit&amp;up_color=brightgreen&amp;up_message=online&amp;url=https%3A%2F%2Fold.reddit.com%2Fr%2Fpopcorntimeapp%2F&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/popcorn-official/popcorn-desktop/wiki/&quot;&gt;&lt;img src=&quot;https://img.shields.io/website?down_color=red&amp;down_message=offline&amp;label=wiki&amp;up_color=brightgreen&amp;up_message=online&amp;url=https%3A%2F%2Fgithub.com%2Fpopcorn-official%2Fpopcorn-desktop%2Fwiki%2F&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/popcorn-official/popcorn-desktop/wiki/FAQ&quot;&gt;&lt;img src=&quot;https://img.shields.io/website?down_color=red&amp;down_message=offline&amp;label=faq&amp;up_color=brightgreen&amp;up_message=online&amp;url=https%3A%2F%2Fgithub.com%2Fpopcorn-official%2Fpopcorn-desktop%2Fwiki%2FFAQ&quot;&gt;&lt;/a&gt;

&lt;h4 align=&quot;center&quot;&gt;Visit the project&#039;s website at &lt;a href=&quot;https://popcorn-time.site&quot;&gt;popcorn-time.site&lt;/a&gt;&lt;/h4&gt;

***

## Install

### Windows:
Download and install:
  * **Latest release**: check [popcorn-time.site](https://popcorn-time.site) or the repo&#039;s [releases page](https://github.com/popcorn-official/popcorn-desktop/releases)
  * Or **latest dev build (for testers)**: check the repo&#039;s [actions page](https://github.com/popcorn-official/popcorn-desktop/actions)


### macOS:
Download and install:
  * **Latest release**: check [popcorn-time.site](https://popcorn-time.site) or the repo&#039;s [releases page](https://github.com/popcorn-official/popcorn-desktop/releases)
  * Or **latest dev build (for testers)**: check the repo&#039;s [actions page](https://github.com/popcorn-official/popcorn-desktop/actions)

Easily install Popcorn Time via _[Homebrew](https://brew.sh) ([Cask](https://docs.brew.sh/Cask-Cookbook)):_
  ~~~ rb
  brew tap popcorn-official/popcorn-desktop https://github.com/popcorn-official/popcorn-desktop.git
  #export HOMEBREW_POPCORN_TIME_BUILD=false
  brew install --cask popcorn-time #--no-quarantine
  ~~~

Also, if you keep a [_Brewfile_](https://github.com/Homebrew/homebrew-bundle#usage), you can add something like this:
  ~~~ rb
  repo = &quot;popcorn-official/popcorn-desktop&quot;
  tap repo, &quot;https://github.com/#{repo}.git&quot;
  #ENV[&quot;HOMEBREW_POPCORN_TIME_BUILD&quot;] = &quot;false&quot;
  cask &quot;popcorn-time&quot; #, args: { &quot;no-quarantine&quot;: true }
  ~~~


### Linux - Debian/Ubuntu based distros:
Download and install:
  * **Latest release**: check [popcorn-time.site](https://popcorn-time.site) or the repo&#039;s [releases page](https://github.com/popcorn-official/popcorn-desktop/releases)
  * Or **latest dev build (for testers)**: check the repo&#039;s [actions page](https://github.com/popcorn-official/popcorn-desktop/actions)

Via .deb package:

  _**Firstly, be aware** in some cases, missings dependencies packages (libatomic1, libgconf-2-4, libcanberra-gtk-module) were reported to be required for the app to works.  
  **If the app don&#039;t start for you too**, in this case, **try `sudo apt update &amp;&amp; sudo apt install libatomic1 libgconf-2-4 libcanberra-gtk-module`** to be sure your system have the required dependencies._

Via archive and command line (tested on ubuntu 18.04 and 20.04):
  1. Download Popcorn Time archive from the github repo for the **latest release** :
  `wget -c https://github.com/popcorn-official/popcorn-desktop/releases/download/v0.5.1/Popcorn-Time-0.5.1-linux64.zip`
  2. Create popcorn-time folder in /opt/:  
  `sudo mkdir /opt/popcorn-time`  
  3. Install unzip &amp;&amp; dependencies (they should not be always required but some users needed them to make Popcorn Time working):  
  `sudo apt update &amp;&amp; sudo apt install unzip libcanberra-gtk-module libgconf-2-4 libatomic1`  
  4. Extract the zip in /opt/popcorn-time:  
  `sudo unzip Popcorn-Time-0.5.1-linux64.zip -d /opt/popcorn-time`
  5. Create symlink of Popcorn-Time in /usr/bin:  
  `sudo ln -sf /opt/popcorn-time/Popcorn-Time /usr/bin/popcorn-time`  
  6. Create .desktop file (so the launcher):  
  `sudo nano /usr/share/applications/popcorntime.desktop`  
  7. and copy paste the following text in the editor and save  
  ```desktop
  [Desktop Entry]
  Version = 1.0
  Type = Application
  Terminal = false
  Name = Popcorn Time
  Exec = /usr/bin/popcorn-time
  Icon = /opt/popcorn-time/src/app/images/icon.png
  Categories = Application;
  ```


## Getting Started

If you&#039;re comfortable getting up and running from a `git clone`, this method is for you.

The [development](https://github.com/popcorn-official/popcorn-desktop/tree/development) branch contains the latest changes.  
The [master](https://github.com/popcorn-official/popcorn-desktop/tree/master) branch contains the latest release.

#### Quickstart:

1. `yarn start`

If you encounter trouble with the above method, you can try:

1. `yarn config set yarn-offline-mirror ./node_modules/`
2. `yarn install --ignore-engines`
3. `yarn build`
4. `yarn start`

Optionally, you may simply run `./make_popcorn.sh` if you are on a linux or mac based operating system.

Full instructions &amp; troubleshooting tips can be found in the [Contributing Guide](docs/Contributing.md#contributing-to-popcorn-time).

#### Building redistribuable packages/installers:

1. `yarn config set yarn-offline-mirror ./node_modules/`
2. `yarn install --ignore-engines`
3. `yarn dist --platforms=&lt;platform&gt;`

`&lt;platform&gt;` can be one or more of the folowing values (separated by a comma `,`):
* `win64`, `win32`, `linux64`, `linux32`, `osx64`, `all`

Redistribuable packages are saved into `build/` subfolder.


## Getting Involved
Want to report a bug, request a feature, contribute to or translate Popcorn Time?  
Check out our in-depth guide to [Contributing to Popcorn Time](docs/Contributing.md#contributing-to-popcorn-time). We need all the help we can get!  
You can also join our [community](README.md#community) to keep up-to-date and meet other developers.  


&lt;a name=&quot;community&quot;&gt;&lt;/a&gt;
## Community
Keep track of Popcorn Time development and community activity.
  * Read and contribute to the official [Popcorn Time Wiki](https://github.com/popcorn-official/popcorn-desktop/wiki/).
  * Join in discussions on [r/PopCornTimeApp](https://www.reddit.com/r/PopcornTimeApp).


## Screenshots
![Popcorn Time](https://cloud.githubusercontent.com/assets/8317250/10714437/b1e1dc8c-7b32-11e5-9c25-d9fbd5b2f3bd.png)


## Versioning
For transparency and insight into our release cycle, and for striving to maintain backward compatibility, Popcorn Time will be maintained according to the [Semantic Versioning](http://semver.org/) guidelines as much as possible.

Releases will be numbered with the following format:

`&lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;-&lt;build&gt;`

Constructed with the following guidelines:

* A new *major* release indicates a large change where backward compatibility is broken.
* A new *minor* release indicates a normal change that maintains backward compatibility.
* A new *patch* release indicates a bugfix or small change which does not affect compatibility.
* A new *build* release indicates this is a pre-release of the version.


***

If you distribute a copy or make a fork of the project, you have to credit this project as the source.

This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program.  If not, see http://www.gnu.org/licenses/.

***

Copyright © 2024 Popcorn Time Project - Released under the [GPL v3 license](LICENSE.txt).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[brave/brave-browser]]></title>
            <link>https://github.com/brave/brave-browser</link>
            <guid>https://github.com/brave/brave-browser</guid>
            <pubDate>Mon, 01 Sep 2025 00:05:31 GMT</pubDate>
            <description><![CDATA[Brave browser for Android, iOS, Linux, macOS, Windows.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/brave/brave-browser">brave/brave-browser</a></h1>
            <p>Brave browser for Android, iOS, Linux, macOS, Windows.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 20,086</p>
            <p>Forks: 2,720</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre>![Brave Browser](./docs/source/_static/Brave.svg)

## Overview

This repository holds the build tools needed to build the Brave desktop browser for macOS, Windows, and Linux.  In particular, it fetches and syncs code from the projects defined in `package.json` and `src/brave/DEPS`:

  - [Chromium](https://chromium.googlesource.com/chromium/src.git)
    - Fetches code via `depot_tools`.
    - Sets the branch for Chromium (ex: 65.0.3325.181).
  - [brave-core](https://github.com/brave/brave-core)
    - Mounted at `src/brave`.
    - Maintains patches for 3rd party Chromium code.
  - [adblock-rust](https://github.com/brave/adblock-rust)
    - Implements Brave&#039;s ad-block engine.
    - Linked through [brave/adblock-rust-ffi](https://github.com/brave/brave-core/tree/master/components/adblock_rust_ffi).

## Downloads

You can [visit our website](https://brave.com/download) to get the latest stable release.

## Contributing

Please see the [contributing guidelines](./CONTRIBUTING.md).

Our [Wiki](https://github.com/brave/brave-browser/wiki) also has some useful technical information.

## Community

[Join the Q&amp;A community](https://community.brave.app/) if you&#039;d like to get more involved with Brave. You can [ask for help](https://community.brave.app/c/support-and-troubleshooting),
[discuss features you&#039;d like to see](https://community.brave.app/c/brave-feature-requests), and a lot more. We&#039;d love to have your help so that we can continue improving Brave.

Help us translate Brave to your language by submitting translations at https://explore.transifex.com/brave/brave_en/.

Follow [@brave](https://x.com/brave) on X for important news and announcements.

## Install prerequisites

Follow the instructions for your platform:

- [macOS](https://github.com/brave/brave-browser/wiki/macOS-Development-Environment)
- [iOS](https://github.com/brave/brave-browser/wiki/iOS-Development-Environment)
- [Windows](https://github.com/brave/brave-browser/wiki/Windows-Development-Environment)
- [Linux](https://github.com/brave/brave-browser/wiki/Linux-Development-Environment)
- [Android](https://github.com/brave/brave-browser/wiki/Android-Development-Environment)

## Clone and initialize the repo

Once you have the prerequisites installed, you can get the code and initialize the build environment.

```bash
git clone git@github.com:brave/brave-core.git path-to-your-project-folder/src/brave
cd path-to-your-project-folder/src/brave
npm install

# the Chromium source is downloaded, which has a large history (gigabytes of data)
# this might take really long to finish depending on internet speed

npm run init
```
brave-core based android builds should use `npm run init -- --target_os=android --target_arch=arm` (or whichever CPU type you want to build for)
brave-core based iOS builds should use `npm run init -- --target_os=ios`

You can also set the target_os and target_arch for init and build using:

```
npm config set target_os android
npm config set target_arch arm
```

Additional parameters needed to build are documented at https://github.com/brave/brave-browser/wiki/Build-configuration

Internal developers can find more information at https://github.com/brave/devops/wiki/%60.env%60-config-for-Brave-Developers

## Build Brave
The default build type is component.

```
# start the component build compile
npm run build
```

To do a release build:

```
# start the release compile
npm run build Release
```

brave-core based android builds should use `npm run build -- --target_os=android --target_arch=arm` or set the npm config variables as specified above for `init`

brave-core based iOS builds should use the Xcode project found in `ios/brave-ios/App`. You can open this project directly or run `npm run ios_bootstrap -- --open_xcodeproj` to have it opened in Xcode. See the [iOS Developer Environment](https://github.com/brave/brave-browser/wiki/iOS-Development-Environment#Building) for more information on iOS builds.

### Build Configurations

Running a release build with `npm run build Release` can be very slow and use a lot of RAM, especially on Linux with the Gold LLVM plugin.

To run a statically linked build (takes longer to build, but starts faster):

```bash
npm run build -- Static
```

To run a debug build (Component build with is_debug=true):

```bash
npm run build -- Debug
```
NOTE: the build will take a while to complete. Depending on your processor and memory, it could potentially take a few hours.

## Run Brave
To start the build:

`npm start [Release|Component|Static|Debug]`

# Update Brave

`npm run sync -- [--force] [--init] [--create] [brave_core_ref]`

**This will attempt to stash your local changes in brave-core, but it&#039;s safer to commit local changes before running this**

`npm run sync` will (depending on the below flags):

1. 📥 Update sub-projects (chromium, brave-core) to latest commit of a git ref (e.g. tag or branch)
2. 🤕 Apply patches
3. 🔄 Update gclient DEPS dependencies
4. ⏩ Run hooks (e.g. to perform `npm install` on child projects)

| flag | Description |
|---|---|
|`[no flags]`|updates chromium if needed and re-applies patches. If the chromium version did not change, it will only re-apply patches that have changed. Will update child dependencies **only if any project needed updating during this script run**. &lt;br&gt; **Use this if you want the script to manage keeping you up to date instead of pulling or switching branches manually. **|
|`--force`|updates both _Chromium_ and _brave-core_ to the latest remote commit for the current brave-core branch and the _Chromium_ ref specified in brave-browser/package.json (e.g. `master` or `74.0.0.103`). Will re-apply all patches. Will force update all child dependencies. &lt;br&gt; **Use this if you&#039;re having trouble and want to force the branches back to a known state. **|
|`--init`|force update both _Chromium_ and _brave-core_ to the versions specified in brave-browser/package.json and force updates all dependent repos - same as `npm run init`|
|`--sync_chromium (true/false)`|Will force or skip the chromium version update when applicable. Useful if you want to avoid a minor update when not ready for the larger build time a chromium update may result in. A warning will be output about the current code state expecting a different chromium version. Your build may fail as a result.|
|`-D, --delete_unused_deps`|Will delete from the working copy any dependencies that have been removed since the last sync. Mimics `gclient sync -D`.|

Run `npm run sync brave_core_ref` to checkout the specified _brave-core_ ref and update all dependent repos including chromium if needed.

## Scenarios

#### Create a new branch:
```bash
brave-browser&gt; cd src/brave
brave-browser/src/brave&gt; git checkout -b branch_name
```

#### Checkout an existing branch or tag:
```bash
brave-browser/src/brave&gt; git fetch origin
brave-browser/src/brave&gt; git checkout [-b] branch_name
brave-browser/src/brave&gt; npm run sync
...Updating 2 patches...
...Updating child dependencies...
...Running hooks...
```

#### Update the current branch to the latest remote:
```bash
brave-browser/src/brave&gt; git pull
brave-browser/src/brave&gt; npm run sync
...Updating 2 patches...
...Updating child dependencies...
...Running hooks...
```

#### Reset to latest brave-browser master and brave-core master (via `init`, will always result in a longer build and will remove any pending changes in your brave-core working directory):
```bash
brave-browser&gt; git checkout master
brave-browser&gt; git pull
brave-browser&gt; npm run sync -- --init
```

#### When you know that DEPS didn&#039;t change, but .patch files did (quickest attempt to perform a mini-sync before a build):
```bash
brave-browser/src/brave&gt; git checkout featureB
brave-browser/src/brave&gt; git pull
brave-browser/src/brave&gt; cd ../..
brave-browser&gt; npm run apply_patches
...Applying 2 patches...
```

# Enabling third-party APIs:

1. **Google Safe Browsing**: Get an API key with SafeBrowsing API enabled from https://console.developers.google.com/. Update the `GOOGLE_API_KEY` environment variable with your key as per https://www.chromium.org/developers/how-tos/api-keys to enable Google SafeBrowsing.

# Development

- [Security rules from Chromium](https://chromium.googlesource.com/chromium/src/+/refs/heads/main/docs/security/rules.md)
- [IPC review guidelines](https://chromium.googlesource.com/chromium/src/+/HEAD/docs/security/ipc-reviews.md) (in particular [this reference](https://docs.google.com/document/d/1Kw4aTuISF7csHnjOpDJGc7JYIjlvOAKRprCTBVWw_E4/edit#heading=h.84bpc1e9z1bg))
- [Brave&#039;s internal security guidelines](https://github.com/brave/internal/wiki/Pull-request-security-audit-checklist) (for employees only)
- [Rust usage](https://github.com/brave/brave-core/blob/master/docs/rust.md)

# Troubleshooting

See [Troubleshooting](https://github.com/brave/brave-browser/wiki/Troubleshooting) for solutions to common problems.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mickael-kerjean/filestash]]></title>
            <link>https://github.com/mickael-kerjean/filestash</link>
            <guid>https://github.com/mickael-kerjean/filestash</guid>
            <pubDate>Mon, 01 Sep 2025 00:05:30 GMT</pubDate>
            <description><![CDATA[📁 A file manager / web client for SFTP, S3, FTP, WebDAV, Git, Minio, LDAP, CalDAV, CardDAV, Mysql, Backblaze, ...]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mickael-kerjean/filestash">mickael-kerjean/filestash</a></h1>
            <p>📁 A file manager / web client for SFTP, S3, FTP, WebDAV, Git, Minio, LDAP, CalDAV, CardDAV, Mysql, Backblaze, ...</p>
            <p>Language: JavaScript</p>
            <p>Stars: 12,310</p>
            <p>Forks: 878</p>
            <p>Stars today: 90 stars today</p>
            <h2>README</h2><pre>![screenshot](https://raw.githubusercontent.com/mickael-kerjean/filestash_images/master/.assets/photo.jpg)

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/mickael-kerjean/contributors&quot; alt=&quot;Contributors&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/github/contributors/mickael-kerjean/filestash&quot; style=&quot;max-width:100%;&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://hub.docker.com/r/machines/filestash&quot; alt=&quot;Docker Hub&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/docker/pulls/machines/filestash&quot; style=&quot;max-width:100%;&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://kiwiirc.com/nextclient/#irc://irc.libera.chat/#filestash?nick=guest??&quot; alt=&quot;Chat on IRC&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/IRC-%23filestash-brightgreen.svg&quot; style=&quot;max-width:100%;&quot;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    A Dropbox-like file manager that let you manage your data anywhere it is located:&lt;br&gt;
    &lt;a href=&quot;https://www.filestash.app/ftp-client.html&quot;&gt;FTP&lt;/a&gt; • &lt;a href=&quot;https://www.filestash.app/ftp-client.html&quot;&gt;FTPS&lt;/a&gt; • &lt;a href=&quot;https://www.filestash.app/ssh-file-transfer.html&quot;&gt;SFTP&lt;/a&gt; • &lt;a href=&quot;https://www.filestash.app/webdav-client.html&quot;&gt;WebDAV&lt;/a&gt; • Git • &lt;a href=&quot;https://www.filestash.app/s3-browser.html&quot;&gt;S3&lt;/a&gt; • NFS • &lt;a href=&quot;https://www.filestash.app/smb-client.html&quot;&gt;SMB&lt;/a&gt; • Artifactory • &lt;a href=&quot;https://www.filestash.app/ldap-browser.html&quot;&gt;LDAP&lt;/a&gt; • Mysql &lt;br&gt;
       Storj • CardDAV • CalDAV • Backblaze B2 • &lt;a href=&quot;https://www.filestash.app/s3-browser.html&quot;&gt;Minio&lt;/a&gt; &lt;br&gt;Dropbox • Google Drive
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;http://demo.filestash.app&quot;&gt;
      &lt;img src=&quot;https://raw.githubusercontent.com/mickael-kerjean/filestash_images/master/.assets/button_demo.png&quot; alt=&quot;demo button&quot; /&gt;
    &lt;/a&gt;
&lt;/p&gt;


# Key Features

- Manage files from your browser
- Sleek, Speedy, Snappy, works great on Desktop and Mobile
- Extensible / Customisable / Hackable via a rich ecosystem of plugins
- Shared Links which you can mount locally as network drives
- Builtin Music, Video, Image viewers with optional transcoding and Chromecast support
- API and LLM integration via [MCP](https://www.filestash.app/docs/api/#mcp)
- [Themes](https://www.filestash.app/docs/plugin/#theme) replicating the UX of [dropbox](https://www.filestash.app/img/screenshots/theme_dropbox.png), [gdrive](https://www.filestash.app/img/screenshots/theme_gdrive.png), [github](https://www.filestash.app/img/screenshots/theme_github.png), [ibm](https://www.filestash.app/img/screenshots/theme_ibm.png), [onedrive](https://www.filestash.app/img/screenshots/theme_onedrive.png), [and more](https://www.filestash.app/img/screenshots/theme_untitled.png)
- ... and much &lt;sub&gt;much &lt;sub&gt;much&lt;/sub&gt;&lt;/sub&gt; more


# Documentation

- [Getting started](https://www.filestash.app/docs/)
- [Installation](https://www.filestash.app/docs/install-and-upgrade/)
- [API](https://www.filestash.app/docs/api/#api) and [MCP](https://www.filestash.app/docs/api/#mcp)
- [Plugins Inventory](https://www.filestash.app/docs/plugin/)
- [Hardening Guide](https://downloads.filestash.app/upload/hardening-guide.pdf)


# Vision &amp; Philosophy

Our goal is simple: **to build the best web based file manager ever made. Period.** But &quot;best&quot; means different things to different people, and making Filestash modular is the only sane model to accomplish that. Anything that isn&#039;t a fundamental truth of the universe and might spark a debate belongs in a plugin.

This modularity is made possible by the magic of programming interfaces. For example, if you want a [Dropbox-like frontend for FTP](https://news.ycombinator.com/item?id=9224), you will find out the [FTP plugin](https://github.com/mickael-kerjean/filestash/tree/master/server/plugin/plg_backend_ftp) simply implements this interface:
```go
type IBackend interface {
	Ls(path string) ([]os.FileInfo, error)           // list files in a folder
	Cat(path string) (io.ReadCloser, error)          // download a file
	Mkdir(path string) error                         // create a folder
	Rm(path string) error                            // remove something
	Mv(from string, to string) error                 // rename something
	Save(path string, file io.Reader) error          // save a file
	Touch(path string) error                         // create a file

	// I have omitted 2 other methods, a first one to enable connections reuse and
	// another one to declare what should the login form be like.
}
```

There are interfaces you can implement for every key component of Filestash: from storage, to authentication, authorisation, custom apps, search, thumbnailing, frontend patches, middleware, endpoint creation and a [few others](https://github.com/mickael-kerjean/filestash/blob/master/server/common/plugin.go).

To see what&#039;s currently installed in your instance, head over to [/about](https://demo.filestash.app/about). The inventory of plugins is [documented here](https://www.filestash.app/docs/plugin/).

# Roadmap

There are 2 major pieces of work currently underway:

&lt;ol&gt;
    &lt;li&gt;Making Filestash able to open virtually anything. Thanks to plugin, we&#039;re adding support for files your browser has never heard of, from astrophysics to embroidery patterns. Concretly we have added support for:
        &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_photography.zip&quot;&gt;photography&lt;/a&gt;: heif, nef, raf, tiff, raw, arw, sr2, srf, nrw, cr2, crw, x3f, pef, rw2, orf, mrw, mdc, mef, mos, dcr, kdc, 3fr, erf and srw&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_photography.zip&quot;&gt;astronomy&lt;/a&gt;: fits, xisf&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_science.zip&quot;&gt;science&lt;/a&gt;: with latex, plantuml &amp; pandoc compilers&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_musician.zip&quot;&gt;music&lt;/a&gt;: mid, midi, gp4 and gp5&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_gis.zip&quot;&gt;GIS&lt;/a&gt;: &lt;a href=&quot;https://www.filestash.app/tools/geojson-viewer.html&quot;&gt;geojson&lt;/a&gt;, &lt;a href=&quot;https://www.filestash.app/tools/shp-viewer.html&quot;&gt;shp&lt;/a&gt;, gpx, wms and &lt;a href=&quot;https://www.filestash.app/tools/dbf-viewer.html&quot;&gt;dbf&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_engineering.zip&quot;&gt;data engineering&lt;/a&gt;: &lt;a href=&quot;https://www.filestash.app/tools/parquet-viewer.html&quot;&gt;parquet&lt;/a&gt;, &lt;a href=&quot;https://www.filestash.app/tools/arrow-viewer.html&quot;&gt;arrow&lt;/a&gt;, &lt;a href=&quot;https://www.filestash.app/tools/feather-viewer.html&quot;&gt;feather&lt;/a&gt;, &lt;a href=&quot;https://www.filestash.app/tools/avro-viewer.html&quot;&gt;avro&lt;/a&gt;, &lt;a href=&quot;https://www.filestash.app/tools/orc-viewer.html&quot;&gt;orc&lt;/a&gt;, hdf5, h5, netcdf, nc, rds, rda and rdata&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_dev.zip&quot;&gt;dev&lt;/a&gt;: a, so, o, dylib, dll, har, cap, pcap, pcapng and &lt;a href=&quot;https://www.filestash.app/tools/sqlite-viewer.html&quot;&gt;sqlite&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_creative.zip&quot;&gt;creative work&lt;/a&gt;: svg, &lt;a href=&quot;https://www.filestash.app/tools/psd-viewer.html&quot;&gt;psd&lt;/a&gt;, ai, &lt;a href=&quot;https://www.filestash.app/tools/sketch-viewer.html&quot;&gt;sketch&lt;/a&gt;, &lt;a href=&quot;https://www.filestash.app/tools/cdr-viewer.html&quot;&gt;cdr&lt;/a&gt;, woff, woff2, ttf, otf, eot, exr, tga, pgm, ppm, dds, ktx, dpx, pcx, xpm, pnm, xbm, aai, xwd, cin, pbm, pcd, sgi, wbmp and rgb&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_biomed.zip&quot;&gt;biomedical&lt;/a&gt;: dicom, sam, bam, cif, pdb, xyz, sdf, mol, mol2 and mmtf&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_autodesk.zip&quot;&gt;autodesk&lt;/a&gt;: &lt;a href=&quot;https://www.filestash.app/tools/dwg-viewer.html&quot;&gt;dwg&lt;/a&gt; and &lt;a href=&quot;https://www.filestash.app/tools/dxf-viewer.html&quot;&gt;dxf&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_adobe.zip&quot;&gt;adobe&lt;/a&gt;: &lt;a href=&quot;https://www.filestash.app/tools/psd-viewer.html&quot;&gt;psd&lt;/a&gt;, ai, &lt;a href=&quot;https://www.filestash.app/tools/xd-viewer.html&quot;&gt;xd&lt;/a&gt;, &lt;a href=&quot;https://www.filestash.app/tools/dng-viewer.html&quot;&gt;dng&lt;/a&gt;, &lt;a href=&quot;https://www.filestash.app/tools/eps-viewer.html&quot;&gt;postscript&lt;/a&gt;, aco, ase, swf&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_3d.zip&quot;&gt;3d&lt;/a&gt;: fbx, gltf, obj, stl, step, mesh, ifc, dae&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://demo.filestash.app/assets/plugin/application_embroidery.zip&quot;&gt;embroidery&lt;/a&gt;: dgt, dst, dsb, dsz, edr, exp, 10o, col, hus, inf, jef, ksm, pcm, pcs, pes, sew, shv, sst, tap, u01, vip, vp3 and xxx&lt;/li&gt;
            &lt;li&gt;there is more to come as we stumbled upon new niches and spend time talking to real people.&lt;/li&gt;
        &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Getting to v1.0. Filestash is already rock solid, it has been in active development for over 8 years. But the bar for v1.0 will be reached when Filestash is objectively better than Dropbox, Google Drive, and Box by every single measurable metric we care about. That&#039;s the mission.&lt;/li&gt;
&lt;/ol&gt;

# Support

- Commercial Users → [support contract](https://www.filestash.app/pricing/?origin=github)
- For individuals → [#filestash](https://kiwiirc.com/nextclient/#irc://irc.libera.chat/#filestash?nick=guest??) on IRC (libera.chat).

Want to help us sprinkle some toppings on our noodle cups?
- Bitcoin: `3LX5KGmSmHDj5EuXrmUvcg77EJxCxmdsgW`
- [Open Collective](https://opencollective.com/filestash)


# Credits

Filestash stands on the shoulder of: [contributors](https://github.com/mickael-kerjean/filestash/graphs/contributors), folks developing [awesome libraries](https://github.com/mickael-kerjean/filestash/blob/master/go.mod), a whole bunch of C stuff (the [C standard library](https://imgs.xkcd.com/comics/dependency.png), [libjpeg](https://libjpeg-turbo.org/), [libpng](https://www.libpng.org/pub/png/libpng.html), [libgif](https://giflib.sourceforge.net/), [libraw](https://www.libraw.org/about) and many more), [fontawesome](https://fontawesome.com), [material](https://material.io/icons/), [Browser stack](https://www.browserstack.com/) to let us test on real devices, and the many guys from Nebraska and elsewhere who have been thanklessly maintaining the critical pieces that Filestash sits on top:

&lt;img src=&quot;https://imgs.xkcd.com/comics/dependency.png&quot; alt=&quot;credit to the nebraska guy on xkcd&quot; /&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[eyaltoledano/claude-task-master]]></title>
            <link>https://github.com/eyaltoledano/claude-task-master</link>
            <guid>https://github.com/eyaltoledano/claude-task-master</guid>
            <pubDate>Mon, 01 Sep 2025 00:05:29 GMT</pubDate>
            <description><![CDATA[An AI-powered task-management system you can drop into Cursor, Lovable, Windsurf, Roo, and others.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/eyaltoledano/claude-task-master">eyaltoledano/claude-task-master</a></h1>
            <p>An AI-powered task-management system you can drop into Cursor, Lovable, Windsurf, Roo, and others.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 21,381</p>
            <p>Forks: 2,084</p>
            <p>Stars today: 49 stars today</p>
            <h2>README</h2><pre>&lt;a name=&quot;readme-top&quot;&gt;&lt;/a&gt;

&lt;div align=&#039;center&#039;&gt;
&lt;a href=&quot;https://trendshift.io/repositories/13971&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/13971&quot; alt=&quot;eyaltoledano%2Fclaude-task-master | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://task-master.dev&quot;&gt;&lt;img src=&quot;./images/logo.png?raw=true&quot; alt=&quot;Taskmaster logo&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;b&gt;Taskmaster&lt;/b&gt;: A task management system for AI-driven development, designed to work seamlessly with any AI chat.
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://discord.gg/taskmasterai&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://dcbadge.limes.pink/api/server/https://discord.gg/taskmasterai?style=flat&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; |
  &lt;a href=&quot;https://docs.task-master.dev&quot; target=&quot;_blank&quot;&gt;Docs&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/eyaltoledano/claude-task-master/actions/workflows/ci.yml&quot;&gt;&lt;img src=&quot;https://github.com/eyaltoledano/claude-task-master/actions/workflows/ci.yml/badge.svg&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/eyaltoledano/claude-task-master/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/eyaltoledano/claude-task-master?style=social&quot; alt=&quot;GitHub stars&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://badge.fury.io/js/task-master-ai&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/task-master-ai.svg&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT%20with%20Commons%20Clause-blue.svg&quot; alt=&quot;License&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/task-master-ai&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/d18m/task-master-ai?style=flat&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/task-master-ai&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/task-master-ai?style=flat&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/task-master-ai&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dw/task-master-ai?style=flat&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

## By [@eyaltoledano](https://x.com/eyaltoledano) &amp; [@RalphEcom](https://x.com/RalphEcom)

[![Twitter Follow](https://img.shields.io/twitter/follow/eyaltoledano)](https://x.com/eyaltoledano)
[![Twitter Follow](https://img.shields.io/twitter/follow/RalphEcom)](https://x.com/RalphEcom)

A task management system for AI-driven development with Claude, designed to work seamlessly with Cursor AI.

## Documentation

📚 **[View Full Documentation](https://docs.task-master.dev)**

For detailed guides, API references, and comprehensive examples, visit our documentation site.

### Quick Reference

The following documentation is also available in the `docs` directory:

- [Configuration Guide](docs/configuration.md) - Set up environment variables and customize Task Master
- [Tutorial](docs/tutorial.md) - Step-by-step guide to getting started with Task Master
- [Command Reference](docs/command-reference.md) - Complete list of all available commands
- [Task Structure](docs/task-structure.md) - Understanding the task format and features
- [Example Interactions](docs/examples.md) - Common Cursor AI interaction examples
- [Migration Guide](docs/migration-guide.md) - Guide to migrating to the new project structure

#### Quick Install for Cursor 1.0+ (One-Click)

[![Add task-master-ai MCP server to Cursor](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=task-master-ai&amp;config=eyJjb21tYW5kIjoibnB4IC15IC0tcGFja2FnZT10YXNrLW1hc3Rlci1haSB0YXNrLW1hc3Rlci1haSIsImVudiI6eyJBTlRIUk9QSUNfQVBJX0tFWSI6IllPVVJfQU5USFJPUElDX0FQSV9LRVlfSEVSRSIsIlBFUlBMRVhJVFlfQVBJX0tFWSI6IllPVVJfUEVSUExFWElUWV9BUElfS0VZX0hFUkUiLCJPUEVOQUlfQVBJX0tFWSI6IllPVVJfT1BFTkFJX0tFWV9IRVJFIiwiR09PR0xFX0FQSV9LRVkiOiJZT1VSX0dPT0dMRV9LRVlfSEVSRSIsIk1JU1RSQUxfQVBJX0tFWSI6IllPVVJfTUlTVFJBTF9LRVlfSEVSRSIsIkdST1FfQVBJX0tFWSI6IllPVVJfR1JPUV9LRVlfSEVSRSIsIk9QRU5ST1VURVJfQVBJX0tFWSI6IllPVVJfT1BFTlJPVVRFUl9LRVlfSEVSRSIsIlhBSV9BUElfS0VZIjoiWU9VUl9YQUlfS0VZX0hFUkUiLCJBWlVSRV9PUEVOQUlfQVBJX0tFWSI6IllPVVJfQVpVUkVfS0VZX0hFUkUiLCJPTExBTUFfQVBJX0tFWSI6IllPVVJfT0xMQU1BX0FQSV9LRVlfSEVSRSJ9fQ%3D%3D)

&gt; **Note:** After clicking the link, you&#039;ll still need to add your API keys to the configuration. The link installs the MCP server with placeholder keys that you&#039;ll need to replace with your actual API keys.

## Requirements

Taskmaster utilizes AI across several commands, and those require a separate API key. You can use a variety of models from different AI providers provided you add your API keys. For example, if you want to use Claude 3.7, you&#039;ll need an Anthropic API key.

You can define 3 types of models to be used: the main model, the research model, and the fallback model (in case either the main or research fail). Whatever model you use, its provider API key must be present in either mcp.json or .env.

At least one (1) of the following is required:

- Anthropic API key (Claude API)
- OpenAI API key
- Google Gemini API key
- Perplexity API key (for research model)
- xAI API Key (for research or main model)
- OpenRouter API Key (for research or main model)
- Claude Code (no API key required - requires Claude Code CLI)

Using the research model is optional but highly recommended. You will need at least ONE API key (unless using Claude Code). Adding all API keys enables you to seamlessly switch between model providers at will.

## Quick Start

### Option 1: MCP (Recommended)

MCP (Model Control Protocol) lets you run Task Master directly from your editor.

#### 1. Add your MCP config at the following path depending on your editor

| Editor       | Scope   | Linux/macOS Path                      | Windows Path                                      | Key          |
| ------------ | ------- | ------------------------------------- | ------------------------------------------------- | ------------ |
| **Cursor**   | Global  | `~/.cursor/mcp.json`                  | `%USERPROFILE%\.cursor\mcp.json`                  | `mcpServers` |
|              | Project | `&lt;project_folder&gt;/.cursor/mcp.json`   | `&lt;project_folder&gt;\.cursor\mcp.json`               | `mcpServers` |
| **Windsurf** | Global  | `~/.codeium/windsurf/mcp_config.json` | `%USERPROFILE%\.codeium\windsurf\mcp_config.json` | `mcpServers` |
| **VS Code**  | Project | `&lt;project_folder&gt;/.vscode/mcp.json`   | `&lt;project_folder&gt;\.vscode\mcp.json`               | `servers`    |

##### Manual Configuration

###### Cursor &amp; Windsurf (`mcpServers`)

```json
{
  &quot;mcpServers&quot;: {
    &quot;task-master-ai&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;--package=task-master-ai&quot;, &quot;task-master-ai&quot;],
      &quot;env&quot;: {
        &quot;ANTHROPIC_API_KEY&quot;: &quot;YOUR_ANTHROPIC_API_KEY_HERE&quot;,
        &quot;PERPLEXITY_API_KEY&quot;: &quot;YOUR_PERPLEXITY_API_KEY_HERE&quot;,
        &quot;OPENAI_API_KEY&quot;: &quot;YOUR_OPENAI_KEY_HERE&quot;,
        &quot;GOOGLE_API_KEY&quot;: &quot;YOUR_GOOGLE_KEY_HERE&quot;,
        &quot;MISTRAL_API_KEY&quot;: &quot;YOUR_MISTRAL_KEY_HERE&quot;,
        &quot;GROQ_API_KEY&quot;: &quot;YOUR_GROQ_KEY_HERE&quot;,
        &quot;OPENROUTER_API_KEY&quot;: &quot;YOUR_OPENROUTER_KEY_HERE&quot;,
        &quot;XAI_API_KEY&quot;: &quot;YOUR_XAI_KEY_HERE&quot;,
        &quot;AZURE_OPENAI_API_KEY&quot;: &quot;YOUR_AZURE_KEY_HERE&quot;,
        &quot;OLLAMA_API_KEY&quot;: &quot;YOUR_OLLAMA_API_KEY_HERE&quot;
      }
    }
  }
}
```

&gt; 🔑 Replace `YOUR_…_KEY_HERE` with your real API keys. You can remove keys you don&#039;t use.

&gt; **Note**: If you see `0 tools enabled` in the MCP settings, try removing the `--package=task-master-ai` flag from `args`.

###### VS Code (`servers` + `type`)

```json
{
  &quot;servers&quot;: {
    &quot;task-master-ai&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;--package=task-master-ai&quot;, &quot;task-master-ai&quot;],
      &quot;env&quot;: {
        &quot;ANTHROPIC_API_KEY&quot;: &quot;YOUR_ANTHROPIC_API_KEY_HERE&quot;,
        &quot;PERPLEXITY_API_KEY&quot;: &quot;YOUR_PERPLEXITY_API_KEY_HERE&quot;,
        &quot;OPENAI_API_KEY&quot;: &quot;YOUR_OPENAI_KEY_HERE&quot;,
        &quot;GOOGLE_API_KEY&quot;: &quot;YOUR_GOOGLE_KEY_HERE&quot;,
        &quot;MISTRAL_API_KEY&quot;: &quot;YOUR_MISTRAL_KEY_HERE&quot;,
        &quot;GROQ_API_KEY&quot;: &quot;YOUR_GROQ_KEY_HERE&quot;,
        &quot;OPENROUTER_API_KEY&quot;: &quot;YOUR_OPENROUTER_KEY_HERE&quot;,
        &quot;XAI_API_KEY&quot;: &quot;YOUR_XAI_KEY_HERE&quot;,
        &quot;AZURE_OPENAI_API_KEY&quot;: &quot;YOUR_AZURE_KEY_HERE&quot;,
        &quot;OLLAMA_API_KEY&quot;: &quot;YOUR_OLLAMA_API_KEY_HERE&quot;
      },
      &quot;type&quot;: &quot;stdio&quot;
    }
  }
}
```

&gt; 🔑 Replace `YOUR_…_KEY_HERE` with your real API keys. You can remove keys you don&#039;t use.

#### 2. (Cursor-only) Enable Taskmaster MCP

Open Cursor Settings (Ctrl+Shift+J) ➡ Click on MCP tab on the left ➡ Enable task-master-ai with the toggle

#### 3. (Optional) Configure the models you want to use

In your editor&#039;s AI chat pane, say:

```txt
Change the main, research and fallback models to &lt;model_name&gt;, &lt;model_name&gt; and &lt;model_name&gt; respectively.
```

For example, to use Claude Code (no API key required):
```txt
Change the main model to claude-code/sonnet
```

[Table of available models](docs/models.md) | [Claude Code setup](docs/examples/claude-code-usage.md)

#### 4. Initialize Task Master

In your editor&#039;s AI chat pane, say:

```txt
Initialize taskmaster-ai in my project
```

#### 5. Make sure you have a PRD (Recommended)

For **new projects**: Create your PRD at `.taskmaster/docs/prd.txt`  
For **existing projects**: You can use `scripts/prd.txt` or migrate with `task-master migrate`

An example PRD template is available after initialization in `.taskmaster/templates/example_prd.txt`.

&gt; [!NOTE]
&gt; While a PRD is recommended for complex projects, you can always create individual tasks by asking &quot;Can you help me implement [description of what you want to do]?&quot; in chat.

**Always start with a detailed PRD.**

The more detailed your PRD, the better the generated tasks will be.

#### 6. Common Commands

Use your AI assistant to:

- Parse requirements: `Can you parse my PRD at scripts/prd.txt?`
- Plan next step: `What&#039;s the next task I should work on?`
- Implement a task: `Can you help me implement task 3?`
- View multiple tasks: `Can you show me tasks 1, 3, and 5?`
- Expand a task: `Can you help me expand task 4?`
- **Research fresh information**: `Research the latest best practices for implementing JWT authentication with Node.js`
- **Research with context**: `Research React Query v5 migration strategies for our current API implementation in src/api.js`

[More examples on how to use Task Master in chat](docs/examples.md)

### Option 2: Using Command Line

#### Installation

```bash
# Install globally
npm install -g task-master-ai

# OR install locally within your project
npm install task-master-ai
```

#### Initialize a new project

```bash
# If installed globally
task-master init

# If installed locally
npx task-master init

# Initialize project with specific rules
task-master init --rules cursor,windsurf,vscode
```

This will prompt you for project details and set up a new project with the necessary files and structure.

#### Common Commands

```bash
# Initialize a new project
task-master init

# Parse a PRD and generate tasks
task-master parse-prd your-prd.txt

# List all tasks
task-master list

# Show the next task to work on
task-master next

# Show specific task(s) - supports comma-separated IDs
task-master show 1,3,5

# Research fresh information with project context
task-master research &quot;What are the latest best practices for JWT authentication?&quot;

# Move tasks between tags (cross-tag movement)
task-master move --from=5 --from-tag=backlog --to-tag=in-progress
task-master move --from=5,6,7 --from-tag=backlog --to-tag=done --with-dependencies
task-master move --from=5 --from-tag=backlog --to-tag=in-progress --ignore-dependencies

# Generate task files
task-master generate

# Add rules after initialization
task-master rules add windsurf,roo,vscode
```

## Claude Code Support

Task Master now supports Claude models through the Claude Code CLI, which requires no API key:

- **Models**: `claude-code/opus` and `claude-code/sonnet`
- **Requirements**: Claude Code CLI installed
- **Benefits**: No API key needed, uses your local Claude instance

[Learn more about Claude Code setup](docs/examples/claude-code-usage.md)

## Troubleshooting

### If `task-master init` doesn&#039;t respond

Try running it with Node directly:

```bash
node node_modules/claude-task-master/scripts/init.js
```

Or clone the repository and run:

```bash
git clone https://github.com/eyaltoledano/claude-task-master.git
cd claude-task-master
node scripts/init.js
```

## Contributors

&lt;a href=&quot;https://github.com/eyaltoledano/claude-task-master/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=eyaltoledano/claude-task-master&quot; alt=&quot;Task Master project contributors&quot; /&gt;
&lt;/a&gt;

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=eyaltoledano/claude-task-master&amp;type=Timeline)](https://www.star-history.com/#eyaltoledano/claude-task-master&amp;Timeline)

## Licensing

Task Master is licensed under the MIT License with Commons Clause. This means you can:

✅ **Allowed**:

- Use Task Master for any purpose (personal, commercial, academic)
- Modify the code
- Distribute copies
- Create and sell products built using Task Master

❌ **Not Allowed**:

- Sell Task Master itself
- Offer Task Master as a hosted service
- Create competing products based on Task Master

See the [LICENSE](LICENSE) file for the complete license text and [licensing details](docs/licensing.md) for more information.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[projectdiscovery/nuclei-templates]]></title>
            <link>https://github.com/projectdiscovery/nuclei-templates</link>
            <guid>https://github.com/projectdiscovery/nuclei-templates</guid>
            <pubDate>Mon, 01 Sep 2025 00:05:28 GMT</pubDate>
            <description><![CDATA[Community curated list of templates for the nuclei engine to find security vulnerabilities.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/projectdiscovery/nuclei-templates">projectdiscovery/nuclei-templates</a></h1>
            <p>Community curated list of templates for the nuclei engine to find security vulnerabilities.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 10,710</p>
            <p>Forks: 2,993</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>

&lt;h1 align=&quot;center&quot;&gt;
Nuclei Templates
&lt;/h1&gt;
&lt;h4 align=&quot;center&quot;&gt;Community curated list of templates for the nuclei engine to find security vulnerabilities in applications.&lt;/h4&gt;


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/projectdiscovery/nuclei-templates&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/pdnuclei&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/pdnuclei.svg?logo=twitter&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://discord.gg/projectdiscovery&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/695645237418131507.svg?logo=discord&quot;&gt;&lt;/a&gt;
&lt;/p&gt;
      
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://nuclei.projectdiscovery.io/templating-guide/&quot;&gt;Documentation&lt;/a&gt; •
  &lt;a href=&quot;#-contributions&quot;&gt;Contributions&lt;/a&gt; •
  &lt;a href=&quot;#-discussion&quot;&gt;Discussion&lt;/a&gt; •
  &lt;a href=&quot;#-community&quot;&gt;Community&lt;/a&gt; •
  &lt;a href=&quot;https://nuclei.projectdiscovery.io/faq/templates/&quot;&gt;FAQs&lt;/a&gt; •
  &lt;a href=&quot;https://discord.gg/projectdiscovery&quot;&gt;Join Discord&lt;/a&gt;
&lt;/p&gt;

----

Templates are the core of the [nuclei scanner](https://github.com/projectdiscovery/nuclei) which powers the actual scanning engine.
This repository stores and houses various templates for the scanner provided by our team, as well as contributed by the community.
We hope that you also contribute by sending templates via **pull requests** or [Github issues](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=submit-template.md&amp;title=%5Bnuclei-template%5D+) to grow the list.


## Nuclei Templates overview


An overview of the nuclei template project, including statistics on unique tags, author, directory, severity, and type of templates. The table below contains the top ten statistics for each matrix; an expanded version of this is [available here](TEMPLATES-STATS.md), and also available in [JSON](TEMPLATES-STATS.json) format for integration.

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt; 

## Nuclei Templates Top 10 statistics

|    TAG    | COUNT |    AUTHOR     | COUNT | DIRECTORY  | COUNT | SEVERITY | COUNT | TYPE | COUNT |
|-----------|-------|---------------|-------|------------|-------|----------|-------|------|-------|
| cve       |  3288 | dhiyaneshdk   |  1882 | http       |  8967 | info     |  4190 | file |   435 |
| panel     |  1342 | daffainfo     |   868 | cloud      |   657 | high     |  2446 | dns  |    26 |
| xss       |  1257 | princechaddha |   854 | file       |   435 | medium   |  2379 |      |       |
| wordpress |  1181 | dwisiswant0   |   806 | dast       |   255 | critical |  1425 |      |       |
| exposure  |  1107 | ritikchaddha  |   649 | workflows  |   202 | low      |   318 |      |       |
| wp-plugin |  1032 | pussycat0x    |   532 | code       |   198 | unknown  |    56 |      |       |
| osint     |   841 | pikpikcu      |   352 | network    |   145 |          |       |      |       |
| tech      |   803 | pdteam        |   310 | javascript |    71 |          |       |      |       |
| rce       |   786 | pdresearch    |   269 | ssl        |    38 |          |       |      |       |
| lfi       |   777 | iamnoooob     |   257 | dns        |    23 |          |       |      |       |

**848 directories, 11344 files**.

&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

📖 Documentation
-----

Please navigate to https://nuclei.projectdiscovery.io for detailed documentation to **build** new or your own **custom** templates.
We have also added a set of templates to help you understand how things work.

💪 Contributions
-----

Nuclei-templates is powered by major contributions from the community.
[Template contributions ](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=submit-template.md&amp;title=%5Bnuclei-template%5D+), [Feature Requests](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=feature_request.md&amp;title=%5BFeature%5D+) and [Bug Reports](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=bug_report.md&amp;title=%5BBug%5D+) are more than welcome.

![Alt](https://repobeats.axiom.co/api/embed/55ee65543bb9a0f9c797626c4e66d472a517d17c.svg &quot;Repobeats analytics image&quot;)

💬 Discussion
-----

Have questions / doubts / ideas to discuss?
Feel free to open a discussion on [Github discussions](https://github.com/projectdiscovery/nuclei-templates/discussions) board.

👨‍💻 Community
-----

You are welcome to join the active [Discord Community](https://discord.gg/projectdiscovery) to discuss directly with project maintainers and share things with others around security and automation.
Additionally, you may follow us on [Twitter](https://twitter.com/pdnuclei) to be updated on all the things about Nuclei.


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=projectdiscovery/nuclei-templates&amp;max=300&quot;&gt;
&lt;/a&gt;
&lt;/p&gt;


Thanks again for your contribution and keeping this community vibrant. :heart:
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[GitSquared/edex-ui]]></title>
            <link>https://github.com/GitSquared/edex-ui</link>
            <guid>https://github.com/GitSquared/edex-ui</guid>
            <pubDate>Mon, 01 Sep 2025 00:05:27 GMT</pubDate>
            <description><![CDATA[A cross-platform, customizable science fiction terminal emulator with advanced monitoring & touchscreen support.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/GitSquared/edex-ui">GitSquared/edex-ui</a></h1>
            <p>A cross-platform, customizable science fiction terminal emulator with advanced monitoring & touchscreen support.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 43,048</p>
            <p>Forks: 2,818</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;br&gt;
  &lt;img alt=&quot;Logo&quot; src=&quot;media/logo.png&quot;&gt;
  &lt;br&gt;&lt;br&gt;
  &lt;a href=&quot;https://lgtm.com/projects/g/GitSquared/edex-ui/context:javascript&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://img.shields.io/lgtm/grade/javascript/g/GitSquared/edex-ui.svg?logo=lgtm&amp;logoWidth=18&quot;/&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/latest&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://img.shields.io/github/release/GitSquared/edex-ui.svg?style=popout&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;#featured-in&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://img.shields.io/github/downloads/GitSquared/edex-ui/total.svg?style=popout&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/GitSquared/edex-ui/blob/master/LICENSE&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://img.shields.io/github/license/GitSquared/edex-ui.svg?style=popout&quot;&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-Windows.exe&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/Download/Windows/?color=blue&amp;icon=windows&amp;label&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-macOS.dmg&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/Download/macOS/?color=grey&amp;icon=apple&amp;label&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-Linux-x86_64.AppImage&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/Download/Linux64/?color=orange&amp;icon=terminal&amp;label&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-Linux-arm64-AppImage&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/Download/LinuxArm64/?color=orange&amp;icon=terminal&amp;label&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://aur.archlinux.org/packages/edex-ui&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/AUR/Package/cyan&quot;&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/tag/v2.2.8&quot;&gt;&lt;strong&gt;&lt;i&gt;(Project archived oct. 18th 2021)&lt;/i&gt;&lt;/strong&gt;&lt;/a&gt;
  &lt;br&gt;&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

eDEX-UI is a fullscreen, cross-platform terminal emulator and system monitor that looks and feels like a sci-fi computer interface.

---

&lt;a href=&quot;https://youtu.be/BGeY1rK19zA&quot;&gt;
  &lt;img align=&quot;right&quot; width=&quot;400&quot; alt=&quot;Demo on YouTube&quot; src=&quot;media/youtube-demo-teaser.gif&quot;&gt;
&lt;/a&gt;

Heavily inspired from the [TRON Legacy movie effects](https://web.archive.org/web/20170511000410/http://jtnimoy.com/blogs/projects/14881671) (especially the [Board Room sequence](https://gmunk.com/TRON-Board-Room)), the eDEX-UI project was originally meant to be *&quot;[DEX-UI](https://github.com/seenaburns/dex-ui) with less « art » and more « distributable software »&quot;*.

While keeping a futuristic look and feel, it strives to maintain a certain level of functionality and to be usable in real-life scenarios, with the larger goal of bringing science-fiction UXs to the mainstream.

&lt;br&gt;

It might or might not be a joke taken too seriously.


---

&lt;p align=&quot;center&quot;&gt;
  &lt;em&gt;Jump to: &lt;br&gt;&lt;a href=&quot;#features&quot;&gt;Features&lt;/a&gt; — &lt;a href=&quot;#screenshots&quot;&gt;Screenshots&lt;/a&gt; — &lt;a href=&quot;#qa&quot;&gt;Questions &amp; Answers&lt;/a&gt; — &lt;strong&gt;&lt;a href=&quot;#how-do-i-get-it&quot;&gt;Download&lt;/a&gt;&lt;/strong&gt; — &lt;a href=&quot;#featured-in&quot;&gt;Featured In&lt;/a&gt; — &lt;a href=&quot;#useful-commands-for-the-nerds&quot;&gt;Contributor Instructions&lt;/a&gt; — &lt;a href=&quot;#credits&quot;&gt;Credits&lt;/a&gt;&lt;/em&gt;
&lt;/p&gt;

## Sponsor

**Want to help support my open-source experiments and learn some cool JavaScript tricks at the same time?**

Click the banner below and sign up to **Bytes**, the only newsletter cool enough to be recommended by eDEX-UI.

[![Bytes by UI.dev](media/sponsor-uidev-bytes.jpg)](https://ui.dev/bytes/?r=gabriel)

## Features
- Fully featured terminal emulator with tabs, colors, mouse events, and support for `curses` and `curses`-like applications.
- Real-time system (CPU, RAM, swap, processes) and network (GeoIP, active connections, transfer rates) monitoring.
- Full support for touch-enabled displays, including an on-screen keyboard.
- Directory viewer that follows the CWD (current working directory) of the terminal.
- Advanced customization using themes, on-screen keyboard layouts, CSS injections. See the [wiki](https://github.com/GitSquared/edex-ui/wiki) for more info.
- Optional sound effects made by a talented sound designer for maximum hollywood hacking vibe.

## Screenshots
![Default screenshot](media/screenshot_default.png)

_[neofetch](https://github.com/dylanaraps/neofetch) on eDEX-UI 2.2 with the default &quot;tron&quot; theme &amp; QWERTY keyboard_

![Blade screenshot](media/screenshot_blade.png)

_Checking out available themes in [eDEX&#039;s config dir](https://github.com/GitSquared/edex-ui/wiki/userData) with [`ranger`](https://github.com/ranger/ranger) on eDEX-UI 2.2 with the &quot;blade&quot; theme_

![Disrupted screenshot](media/screenshot_disrupted.png)

_[cmatrix](https://github.com/abishekvashok/cmatrix) on eDEX-UI 2.2 with the experimental &quot;tron-disrupted&quot; theme, and the user-contributed DVORAK keyboard_

![Horizon screenshot](media/screenshot_horizon.png)

_Editing eDEX-UI source code with `nvim` on eDEX-UI 2.2 with the custom [`horizon-full`](https://github.com/GitSquared/horizon-edex-theme) theme_

## Q&amp;A
#### How do I get it?
Click on the little badges under the eDEX logo at the top of this page, or go to the [Releases](https://github.com/GitSquared/edex-ui/releases) tab, or download it through [one of the available repositories](https://repology.org/project/edex-ui/versions) (Homebrew, AUR...).

Public release binaries are unsigned ([why](https://gaby.dev/posts/code-signing)). On Linux, you will need to `chmod +x` the AppImage file in order to run it.
#### I have a problem!
Search through the [Issues](https://github.com/GitSquared/edex-ui/issues) to see if yours has already been reported. If you&#039;re confident it hasn&#039;t been reported yet, feel free to open up a new one. If you see your issue and it&#039;s been closed, it probably means that the fix for it will ship in the next version, and you&#039;ll have to wait a bit.
#### Can you disable the keyboard/the filesystem display?
You can&#039;t disable them (yet) but you can hide them. See the `tron-notype` theme.
#### Why is the file browser saying that &quot;Tracking Failed&quot;? (Windows only)
On Linux and macOS, eDEX tracks where you&#039;re going in your terminal tab to display the content of the current folder on-screen.
Sadly, this is technically impossible to do on Windows right now, so the file browser reverts back to a &quot;detached&quot; mode. You can still use it to browse files &amp; directories and click on files to input their path in the terminal.
#### Can this run on a Raspberry Pi / ARM device?
We provide prebuilt arm64 builds. For other platforms, see [this issue comment](https://github.com/GitSquared/edex-ui/issues/313#issuecomment-443465345), and the thread on issue [#818](https://github.com/GitSquared/edex-ui/issues/818).
#### Is this repo actively maintained?
No, after a 3 years run, this project has been archived. See the [announcement](https://github.com/GitSquared/edex-ui/releases/tag/v2.2.8).
#### How did you make this?
Glad you&#039;re interested! See [#272](https://github.com/GitSquared/edex-ui/issues/272).
#### This is so cool.
Thanks! If you feel like it, you can [follow me on Twitter](https://gaby.dev/twitter) to hear about new stuff I&#039;m making.

&lt;img width=&quot;220&quot; src=&quot;https://78.media.tumblr.com/35d4ef4447e0112f776b629bffd99188/tumblr_mk4gf8zvyC1s567uwo1_500.gif&quot; /&gt;


## Featured in...
- [Linux Uprising Blog](https://www.linuxuprising.com/2018/11/edex-ui-fully-functioning-sci-fi.html)
- [My post on r/unixporn](https://www.reddit.com/r/unixporn/comments/9ysbx7/oc_a_little_project_that_ive_been_working_on/)
- [Korben article (in french)](https://korben.info/une-interface-futuriste-pour-vos-ecrans-tactiles.html)
- [Hacker News](https://news.ycombinator.com/item?id=18509828)
- [This tweet that made me smile](https://twitter.com/mikemaccana/status/1065615451940667396)
- [BoingBoing article](https://boingboing.net/2018/11/23/simulacrum-sf.html) - Apparently i&#039;m a &quot;French hacker&quot;
- [OReilly 4 short links](https://www.oreilly.com/ideas/four-short-links-23-november-2018)
- [Hackaday](https://hackaday.com/2018/11/23/look-like-a-movie-hacker/)
- [Developpez.com (another french link)](https://www.developpez.com/actu/234808/Une-application-de-bureau-ressemble-a-une-interface-d-ordinateur-de-science-fiction-inspiree-des-effets-du-film-TRON-Legacy/)
- [GitHub Blog&#039;s Release Radar November 2018](https://blog.github.com/2018-12-21-release-radar-november-2018/)
- [opensource.com Productive Tools for 2019](https://opensource.com/article/19/1/productivity-tool-edex-ui)
- [O&#039;Reilly 4 short links (again)](https://www.oreilly.com/radar/four-short-links-7-july-2020/)
- [LinuxLinks](https://www.linuxlinks.com/linux-candy-edex-ui-sci-fi-computer-terminal-emulator-system-monitor/)
- [Linux For Everyone (Youtube)](https://www.youtube.com/watch?v=gbzqCAjm--g)
- [BestOfJS Rising Stars 2020](https://risingstars.js.org/2020/en#edex-ui)
- [The Geek Freaks (Youtube/German)](https://youtu.be/TSjMIeLG0Sk)
- [JSNation Open Source Awards 2021](https://osawards.com/javascript/#nominees) (Nominee - Fun Side Project of the Year)


## Useful commands for the nerds

**IMPORTANT NOTE:** the following instructions are meant for running eDEX from the latest unoptimized, unreleased, development version. If you&#039;d like to get stable software instead, refer to [these](#how-do-i-get-it) instructions.

#### Starting from source:
on *nix systems (You&#039;ll need the Xcode command line tools on macOS):
- clone the repository
- `npm run install-linux`
- `npm run start`

on Windows:
- start cmd or powershell **as administrator**
- clone the repository
- `npm run install-windows`
- `npm run start`

#### Building
Note: Due to native modules, you can only build targets for the host OS you are using.

- `npm install` (NOT `install-linux` or `install-windows`)
- `npm run build-linux` or `build-windows` or `build-darwin`

The script will minify the source code, recompile native dependencies and create distributable assets in the `dist` folder.

#### Getting the bleeding edge
If you&#039;re interested in running the latest in-development version but don&#039;t want to compile source code yourself, you can can get pre-built nightly binaries on [GitHub Actions](https://github.com/GitSquared/edex-ui/actions): click the latest commits, and download the artifacts bundle for your OS.

## Credits
eDEX-UI&#039;s source code was primarily written by me, [Squared](https://github.com/GitSquared). If you want to get in touch with me or find other projects I&#039;m involved in, check out [my website](https://gaby.dev).

[PixelyIon](https://github.com/PixelyIon) helped me get started with Windows compatibility and offered some precious advice when I started to work on this project seriously.

[IceWolf](https://soundcloud.com/iamicewolf) composed the sound effects on v2.1.x and above. He makes really cool stuff, check out his music!

## Thanks
Of course, eDEX would never have existed if I hadn&#039;t stumbled upon the amazing work of [Seena](https://github.com/seenaburns) on [r/unixporn](https://reddit.com/r/unixporn).

This project uses a bunch of open-source libraries, frameworks and tools, see [the full dependency graph](https://github.com/GitSquared/edex-ui/network/dependencies).

I want to namely thank the developers behind [xterm.js](https://github.com/xtermjs/xterm.js), [systeminformation](https://github.com/sebhildebrandt/systeminformation) and [SmoothieCharts](https://github.com/joewalnes/smoothie).

Huge thanks to [Rob &quot;Arscan&quot; Scanlon](https://github.com/arscan) for making the fantastic [ENCOM Globe](https://github.com/arscan/encom-globe), also inspired by the TRON: Legacy movie, and distributing it freely. His work really puts the icing on the cake.

## Licensing

Licensed under the [GPLv3.0](https://github.com/GitSquared/edex-ui/blob/master/LICENSE).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[sub-store-org/Sub-Store]]></title>
            <link>https://github.com/sub-store-org/Sub-Store</link>
            <guid>https://github.com/sub-store-org/Sub-Store</guid>
            <pubDate>Mon, 01 Sep 2025 00:05:26 GMT</pubDate>
            <description><![CDATA[Advanced Subscription Manager for QX, Loon, Surge, Stash, Egern and Shadowrocket!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/sub-store-org/Sub-Store">sub-store-org/Sub-Store</a></h1>
            <p>Advanced Subscription Manager for QX, Loon, Surge, Stash, Egern and Shadowrocket!</p>
            <p>Language: JavaScript</p>
            <p>Stars: 7,406</p>
            <p>Forks: 839</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
&lt;br&gt;
&lt;img width=&quot;200&quot; src=&quot;https://raw.githubusercontent.com/cc63/ICON/main/Sub-Store.png&quot; alt=&quot;Sub-Store&quot;&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2 align=&quot;center&quot;&gt;Sub-Store&lt;h2&gt;
&lt;/div&gt;

&lt;p align=&quot;center&quot; color=&quot;#6a737d&quot;&gt;
Advanced Subscription Manager for QX, Loon, Surge, Stash, Egern and Shadowrocket.
&lt;/p&gt;

[![Build](https://github.com/sub-store-org/Sub-Store/actions/workflows/main.yml/badge.svg)](https://github.com/sub-store-org/Sub-Store/actions/workflows/main.yml) ![GitHub](https://img.shields.io/github/license/sub-store-org/Sub-Store) ![GitHub issues](https://img.shields.io/github/issues/sub-store-org/Sub-Store) ![GitHub closed pull requests](https://img.shields.io/github/issues-pr-closed-raw/Peng-Ym/Sub-Store) ![Lines of code](https://img.shields.io/tokei/lines/github/sub-store-org/Sub-Store) ![Size](https://img.shields.io/github/languages/code-size/sub-store-org/Sub-Store)
&lt;a href=&quot;https://trendshift.io/repositories/4572&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/4572&quot; alt=&quot;sub-store-org%2FSub-Store | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
[![&quot;Buy Me A Coffee&quot;](https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png)](https://www.buymeacoffee.com/PengYM)

Core functionalities:

1. Conversion among various formats.
2. Subscription formatting.
3. Collect multiple subscriptions in one URL.

&gt; The following descriptions of features may not be updated in real-time. Please refer to the actual available features for accurate information.

## 1. Subscription Conversion

### Supported Input Formats

&gt; ⚠️ Do not use `Shadowrocket` or `NekoBox` to export URI and then import it as input. The URIs exported in this way may not be standard URIs. However, we have already supported some very common non-standard URIs (such as VMess, VLESS).

- [x] Proxy URI Scheme(`socks5`, `socks5+tls`, `http`, `https`(it&#039;s ok))

  example: `socks5+tls://user:pass@ip:port#name`

- [x] URI(AnyTLS, SOCKS, SS, SSR, VMess, VLESS, Trojan, Hysteria, Hysteria 2, TUIC v5, WireGuard)
  &gt; Please note, HTTP(s) does not have a standard URI format, so it is not supported. Please use other formats.
- [x] Clash Proxies YAML
- [x] Clash Proxy JSON(single line)
- [x] QX (SS, SSR, VMess, Trojan, HTTP, SOCKS5, VLESS)
- [x] Loon (SS, SSR, VMess, Trojan, HTTP, SOCKS5, SOCKS5-TLS, WireGuard, VLESS, Hysteria 2)
- [x] Surge (Direct, SS, VMess, Trojan, HTTP, SOCKS5, SOCKS5-TLS, TUIC, Snell, Hysteria 2, SSH(Password authentication only), External Proxy Program(only for macOS), WireGuard(Surge to Surge))
- [x] Surfboard (SS, VMess, Trojan, HTTP, SOCKS5, SOCKS5-TLS, WireGuard(Surfboard to Surfboard))
- [x] Clash.Meta (Direct, SS, SSR, VMess, Trojan, HTTP, SOCKS5, Snell, VLESS, WireGuard, Hysteria, Hysteria 2, TUIC, SSH, mieru, AnyTLS)
- [x] Stash (SS, SSR, VMess, Trojan, HTTP, SOCKS5, Snell, VLESS, WireGuard, Hysteria, TUIC, Juicity, SSH)

Deprecated(The frontend doesn&#039;t show it, but the backend still supports it, with the query parameter `target=Clash`):

- [x] Clash (SS, SSR, VMess, Trojan, HTTP, SOCKS5, Snell, VLESS, WireGuard)

### Supported Target Platforms

- [x] Plain JSON
- [x] Stash
- [x] Clash.Meta(mihomo)
- [x] Surfboard
- [x] Surge
- [x] SurgeMac(Use mihomo to support protocols that are not supported by Surge itself)
- [x] Loon
- [x] Egern
- [x] Shadowrocket
- [x] QX
- [x] sing-box
- [x] V2Ray
- [x] V2Ray URI

Deprecated:

- [x] Clash

## 2. Subscription Formatting

### Filtering

- [x] **Regex filter**
- [x] **Discard regex filter**
- [x] **Region filter**
- [x] **Type filter**
- [x] **Useless proxies filter**
- [x] **Script filter**

### Proxy Operations

- [x] **Set property operator**: set some proxy properties such as `udp`,`tfo`, `skip-cert-verify` etc.
- [x] **Flag operator**: add flags or remove flags for proxies.
- [x] **Sort operator**: sort proxies by name.
- [x] **Regex sort operator**: sort proxies by keywords (fallback to normal sort).
- [x] **Regex rename operator**: replace by regex in proxy names.
- [x] **Regex delete operator**: delete by regex in proxy names.
- [x] **Script operator**: modify proxy by script.
- [x] **Resolve Domain Operator**: resolve the domain of nodes to an IP address.

### Development

Install `pnpm`

Go to `backend` directories, install node dependencies:

```
pnpm i
```

```
SUB_STORE_BACKEND_API_PORT=3000 pnpm run --parallel &quot;/^dev:.*/&quot;
```

### Build

```
pnpm bundle:esbuild
```

## LICENSE

This project is under the GPL V3 LICENSE.

[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2FPeng-YM%2FSub-Store.svg?type=large)](https://app.fossa.com/projects/git%2Bgithub.com%2FPeng-YM%2FSub-Store?ref=badge_large)

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=sub-store-org/sub-store&amp;type=Date)](https://star-history.com/#sub-store-org/sub-store&amp;Date)

## Acknowledgements

- Special thanks to @KOP-XIAO for his awesome resource-parser. Please give a [star](https://github.com/KOP-XIAO/QuantumultX) for his great work!
- Special thanks to @Orz-3 and @58xinian for their awesome icons.

## Sponsors

[![image](./support.nodeseek.com_page_promotion_id=8.png)](https://yxvm.com)

[NodeSupport](https://github.com/NodeSeekDev/NodeSupport) sponsored this project.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[manga-download/hakuneko]]></title>
            <link>https://github.com/manga-download/hakuneko</link>
            <guid>https://github.com/manga-download/hakuneko</guid>
            <pubDate>Mon, 01 Sep 2025 00:05:25 GMT</pubDate>
            <description><![CDATA[Manga & Anime Downloader for Linux, Windows & MacOS]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/manga-download/hakuneko">manga-download/hakuneko</a></h1>
            <p>Manga & Anime Downloader for Linux, Windows & MacOS</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,447</p>
            <p>Forks: 534</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[CodeWithHarry/Sigma-Web-Dev-Course]]></title>
            <link>https://github.com/CodeWithHarry/Sigma-Web-Dev-Course</link>
            <guid>https://github.com/CodeWithHarry/Sigma-Web-Dev-Course</guid>
            <pubDate>Mon, 01 Sep 2025 00:05:24 GMT</pubDate>
            <description><![CDATA[Source Code for Sigma Web Development Course]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/CodeWithHarry/Sigma-Web-Dev-Course">CodeWithHarry/Sigma-Web-Dev-Course</a></h1>
            <p>Source Code for Sigma Web Development Course</p>
            <p>Language: JavaScript</p>
            <p>Stars: 9,971</p>
            <p>Forks: 2,840</p>
            <p>Stars today: 26 stars today</p>
            <h2>README</h2><pre># Welcome to Sigma&#039;s Web Development Course - Hindi Web Development Tutorials! 🚀

## What&#039;s Inside:

If you&#039;ve been itching to dive into the world of web development but feel lost in a sea of English tutorials, you&#039;re in the right place! Our course is exclusively in Hindi and is crafted to guide you from being an absolute beginner to a seasoned pro, one step at a time.

## Who Can Benefit?

### This course is a perfect fit for:

1. Beginners eager to start their web development journey
2. Intermediate developers looking to refine their skills
3. Individuals who prefer learning in Hindi

## What You&#039;ll Master:

### During this course, you&#039;ll delve into:

1. The fundamentals of HTML, CSS, and JavaScript
2. Both front-end and back-end development
3. How to seamlessly integrate databases
4. Real-world project implementation
5. And a whole lot more!

## The Schedule:

We&#039;re committed to your growth. Expect fresh source code additions nearly every day. Keep up the pace with our schedule and watch your skills soar! 📅

Get ready to embark on an exciting coding journey! 👨‍💻🌟

Ready to start? [Click here](https://www.youtube.com/playlist?list=PLu0W_9lII9agq5TrH9XLIKQvv0iaF2X3w) to access the complete YouTube playlist.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[viarotel-org/escrcpy]]></title>
            <link>https://github.com/viarotel-org/escrcpy</link>
            <guid>https://github.com/viarotel-org/escrcpy</guid>
            <pubDate>Mon, 01 Sep 2025 00:05:23 GMT</pubDate>
            <description><![CDATA[📱 Display and control your Android device graphically with scrcpy.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/viarotel-org/escrcpy">viarotel-org/escrcpy</a></h1>
            <p>📱 Display and control your Android device graphically with scrcpy.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,002</p>
            <p>Forks: 441</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>&lt;div style=&quot;display:flex;&quot;&gt;
  &lt;img src=&quot;https://cdn.jsdelivr.net/gh/viarotel-org/escrcpy@main/electron/resources/build/logo.png&quot; alt=&quot;viarotel-escrcpy&quot; width=&quot;108px&quot;&gt;
&lt;/div&gt;

# Escrcpy

[![GitCode](https://gitcode.com/viarotel-org/escrcpy/star/badge.svg)](https://gitcode.com/viarotel-org/escrcpy)
[![Gitee](https://gitee.com/viarotel-org/escrcpy/badge/star.svg?theme=dark)](https://gitee.com/viarotel-org/escrcpy)
[![GitHub](https://img.shields.io/github/stars/viarotel-org/escrcpy?label=Github%20Stars)](https://github.com/viarotel-org/escrcpy)
[![Ask DeepWiki](https://deepwiki.com/badge.svg)](https://deepwiki.com/viarotel-org/escrcpy)

📱 Display and control your Android device graphically with scrcpy, powered by Electron. [中文文档](https://github.com/viarotel-org/escrcpy/blob/main/README-CN.md)

&lt;div style=&quot;display:flex;&quot;&gt;
  &lt;img src=&quot;./screenshots/zh-CN/overview.jpg&quot; alt=&quot;viarotel-escrcpy&quot; width=&quot;100%&quot;&gt;
&lt;/div&gt;

## Features

- 🏃 Synchronization: Faster synchronization with Scrcpy thanks to web technology
- 🤖 Automation: Auto-connect devices, auto-execute mirroring, custom scripts, scheduled tasks
- 💡 Customization: Multi-device management, independent configurations, custom notes, config import/export
- 📡 Wireless: Quick connection via QR code scanning
- 🔗 Reverse Tethering: Gnirehtet reverse tethering
- 🎨 Themes: Light mode, dark mode, system theme following
- 😎 Lightweight: Native support, displays only the device screen
- ⚡️ Performance: 30~120 FPS, depending on the device
- 🌟 Quality: 1920×1080 or higher
- 🕒 Low Latency: 35~70 ms
- 🚀 Fast Startup: First image displayed in about 1 second
- 🙅‍♂️ Non-intrusive: No installation files left on Android devices
- 🤩 User Benefits: No accounts, no ads, no internet connection required
- 🗽 Freedom: Free and open-source software

## Installation

### Manual Installation via Released Packages

Check the [Releases Page](https://github.com/viarotel-org/escrcpy/releases)

### macOS Installation via Homebrew

Refer to [homebrew-escrcpy](https://github.com/viarotel-org/homebrew-escrcpy)

## Documentation

- [Getting Started](https://escrcpy.viarotel.eu.org/guide/started)
- [Shortcuts](https://escrcpy.viarotel.eu.org/reference/scrcpy/shortcuts)
- [Device Operations](https://escrcpy.viarotel.eu.org/guide/operation)
- [Preferences](https://escrcpy.viarotel.eu.org/guide/preferences)
- [Reverse Tethering](https://escrcpy.viarotel.eu.org/reference/gnirehtet/)

## For Developers

If you are a developer and wish to run or help improve this project, refer to the [Development Documentation](https://github.com/viarotel-org/escrcpy/blob/main/develop.md)

## Get Help

As an open-source project powered by passion, support is limited, and updates are irregular.

- [FAQ](https://escrcpy.viarotel.eu.org/help/escrcpy)
- [Report Issues](https://github.com/viarotel-org/escrcpy/issues)
- [Contact Email](viarotel@qq.com)

## What&#039;s Next?

[Milestones](https://escrcpy.viarotel.eu.org/guide/milestones)

## Acknowledgments

This project owes its existence to the following open-source projects:

- [scrcpy](https://github.com/Genymobile/scrcpy)
- [adbkit](https://github.com/DeviceFarmer/adbkit)
- [electron](https://www.electronjs.org/)
- [vue](https://vuejs.org/)
- [gnirehtet](https://github.com/Genymobile/gnirehtet/)

## Donate

If this project has helped you, consider buying me a coffee to keep me motivated for further improvements 😛

&lt;div style=&quot;display:flex;&quot;&gt;
  &lt;img src=&quot;https://cdn.jsdelivr.net/gh/viarotel-org/escrcpy@main/src/assets/sponsor/viarotel-wepay.png&quot; alt=&quot;viarotel-wepay&quot; width=&quot;30%&quot;&gt;
  &lt;img src=&quot;https://cdn.jsdelivr.net/gh/viarotel-org/escrcpy@main/src/assets/sponsor/viarotel-alipay.png&quot; alt=&quot;viarotel-alipay&quot; width=&quot;30%&quot;&gt;
  &lt;a href=&quot;https://www.paypal.com/paypalme/viarotel&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;
    &lt;img src=&quot;https://cdn.jsdelivr.net/gh/viarotel-org/escrcpy@main/src/assets/sponsor/viarotel-paypal.png&quot; alt=&quot;viarotel-paypal&quot; width=&quot;30%&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;

## Contributors

Thanks to all who contributed!

[Contributors](https://github.com/viarotel/escrcpy/graphs/contributors)

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=viarotel-org/escrcpy&amp;type=Date)](https://star-history.com/#viarotel-org/escrcpy&amp;Date)</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[vercel/next.js]]></title>
            <link>https://github.com/vercel/next.js</link>
            <guid>https://github.com/vercel/next.js</guid>
            <pubDate>Mon, 01 Sep 2025 00:05:22 GMT</pubDate>
            <description><![CDATA[The React Framework]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vercel/next.js">vercel/next.js</a></h1>
            <p>The React Framework</p>
            <p>Language: JavaScript</p>
            <p>Stars: 134,124</p>
            <p>Forks: 29,196</p>
            <p>Stars today: 35 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>