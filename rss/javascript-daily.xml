<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Thu, 03 Apr 2025 00:04:57 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[open-webui/open-webui]]></title>
            <link>https://github.com/open-webui/open-webui</link>
            <guid>https://github.com/open-webui/open-webui</guid>
            <pubDate>Thu, 03 Apr 2025 00:04:57 GMT</pubDate>
            <description><![CDATA[User-friendly AI Interface (Supports Ollama, OpenAI API, ...)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/open-webui/open-webui">open-webui/open-webui</a></h1>
            <p>User-friendly AI Interface (Supports Ollama, OpenAI API, ...)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 87,119</p>
            <p>Forks: 10,747</p>
            <p>Stars today: 288 stars today</p>
            <h2>README</h2><pre># Open WebUI üëã

![GitHub stars](https://img.shields.io/github/stars/open-webui/open-webui?style=social)
![GitHub forks](https://img.shields.io/github/forks/open-webui/open-webui?style=social)
![GitHub watchers](https://img.shields.io/github/watchers/open-webui/open-webui?style=social)
![GitHub repo size](https://img.shields.io/github/repo-size/open-webui/open-webui)
![GitHub language count](https://img.shields.io/github/languages/count/open-webui/open-webui)
![GitHub top language](https://img.shields.io/github/languages/top/open-webui/open-webui)
![GitHub last commit](https://img.shields.io/github/last-commit/open-webui/open-webui?color=red)
![Hits](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Follama-webui%2Follama-wbui&amp;count_bg=%2379C83D&amp;title_bg=%23555555&amp;icon=&amp;icon_color=%23E7E7E7&amp;title=hits&amp;edge_flat=false)
[![Discord](https://img.shields.io/badge/Discord-Open_WebUI-blue?logo=discord&amp;logoColor=white)](https://discord.gg/5rJgQTnV4s)
[![](https://img.shields.io/static/v1?label=Sponsor&amp;message=%E2%9D%A4&amp;logo=GitHub&amp;color=%23fe8e86)](https://github.com/sponsors/tjbck)

**Open WebUI is an [extensible](https://docs.openwebui.com/features/plugin/), feature-rich, and user-friendly self-hosted AI platform designed to operate entirely offline.** It supports various LLM runners like **Ollama** and **OpenAI-compatible APIs**, with **built-in inference engine** for RAG, making it a **powerful AI deployment solution**.

![Open WebUI Demo](./demo.gif)

&gt; [!TIP]  
&gt; **Looking for an [Enterprise Plan](https://docs.openwebui.com/enterprise)?** ‚Äì **[Speak with Our Sales Team Today!](mailto:sales@openwebui.com)**
&gt;
&gt; Get **enhanced capabilities**, including **custom theming and branding**, **Service Level Agreement (SLA) support**, **Long-Term Support (LTS) versions**, and **more!**

For more information, be sure to check out our [Open WebUI Documentation](https://docs.openwebui.com/).

## Key Features of Open WebUI ‚≠ê

- üöÄ **Effortless Setup**: Install seamlessly using Docker or Kubernetes (kubectl, kustomize or helm) for a hassle-free experience with support for both `:ollama` and `:cuda` tagged images.

- ü§ù **Ollama/OpenAI API Integration**: Effortlessly integrate OpenAI-compatible APIs for versatile conversations alongside Ollama models. Customize the OpenAI API URL to link with **LMStudio, GroqCloud, Mistral, OpenRouter, and more**.

- üõ°Ô∏è **Granular Permissions and User Groups**: By allowing administrators to create detailed user roles and permissions, we ensure a secure user environment. This granularity not only enhances security but also allows for customized user experiences, fostering a sense of ownership and responsibility amongst users.

- üì± **Responsive Design**: Enjoy a seamless experience across Desktop PC, Laptop, and Mobile devices.

- üì± **Progressive Web App (PWA) for Mobile**: Enjoy a native app-like experience on your mobile device with our PWA, providing offline access on localhost and a seamless user interface.

- ‚úíÔ∏èüî¢ **Full Markdown and LaTeX Support**: Elevate your LLM experience with comprehensive Markdown and LaTeX capabilities for enriched interaction.

- üé§üìπ **Hands-Free Voice/Video Call**: Experience seamless communication with integrated hands-free voice and video call features, allowing for a more dynamic and interactive chat environment.

- üõ†Ô∏è **Model Builder**: Easily create Ollama models via the Web UI. Create and add custom characters/agents, customize chat elements, and import models effortlessly through [Open WebUI Community](https://openwebui.com/) integration.

- üêç **Native Python Function Calling Tool**: Enhance your LLMs with built-in code editor support in the tools workspace. Bring Your Own Function (BYOF) by simply adding your pure Python functions, enabling seamless integration with LLMs.

- üìö **Local RAG Integration**: Dive into the future of chat interactions with groundbreaking Retrieval Augmented Generation (RAG) support. This feature seamlessly integrates document interactions into your chat experience. You can load documents directly into the chat or add files to your document library, effortlessly accessing them using the `#` command before a query.

- üîç **Web Search for RAG**: Perform web searches using providers like `SearXNG`, `Google PSE`, `Brave Search`, `serpstack`, `serper`, `Serply`, `DuckDuckGo`, `TavilySearch`, `SearchApi` and `Bing` and inject the results directly into your chat experience.

- üåê **Web Browsing Capability**: Seamlessly integrate websites into your chat experience using the `#` command followed by a URL. This feature allows you to incorporate web content directly into your conversations, enhancing the richness and depth of your interactions.

- üé® **Image Generation Integration**: Seamlessly incorporate image generation capabilities using options such as AUTOMATIC1111 API or ComfyUI (local), and OpenAI&#039;s DALL-E (external), enriching your chat experience with dynamic visual content.

- ‚öôÔ∏è **Many Models Conversations**: Effortlessly engage with various models simultaneously, harnessing their unique strengths for optimal responses. Enhance your experience by leveraging a diverse set of models in parallel.

- üîê **Role-Based Access Control (RBAC)**: Ensure secure access with restricted permissions; only authorized individuals can access your Ollama, and exclusive model creation/pulling rights are reserved for administrators.

- üåêüåç **Multilingual Support**: Experience Open WebUI in your preferred language with our internationalization (i18n) support. Join us in expanding our supported languages! We&#039;re actively seeking contributors!

- üß© **Pipelines, Open WebUI Plugin Support**: Seamlessly integrate custom logic and Python libraries into Open WebUI using [Pipelines Plugin Framework](https://github.com/open-webui/pipelines). Launch your Pipelines instance, set the OpenAI URL to the Pipelines URL, and explore endless possibilities. [Examples](https://github.com/open-webui/pipelines/tree/main/examples) include **Function Calling**, User **Rate Limiting** to control access, **Usage Monitoring** with tools like Langfuse, **Live Translation with LibreTranslate** for multilingual support, **Toxic Message Filtering** and much more.

- üåü **Continuous Updates**: We are committed to improving Open WebUI with regular updates, fixes, and new features.

Want to learn more about Open WebUI&#039;s features? Check out our [Open WebUI documentation](https://docs.openwebui.com/features) for a comprehensive overview!

## üîó Also Check Out Open WebUI Community!

Don&#039;t forget to explore our sibling project, [Open WebUI Community](https://openwebui.com/), where you can discover, download, and explore customized Modelfiles. Open WebUI Community offers a wide range of exciting possibilities for enhancing your chat interactions with Open WebUI! üöÄ

## How to Install üöÄ

### Installation via Python pip üêç

Open WebUI can be installed using pip, the Python package installer. Before proceeding, ensure you&#039;re using **Python 3.11** to avoid compatibility issues.

1. **Install Open WebUI**:
   Open your terminal and run the following command to install Open WebUI:

   ```bash
   pip install open-webui
   ```

2. **Running Open WebUI**:
   After installation, you can start Open WebUI by executing:

   ```bash
   open-webui serve
   ```

This will start the Open WebUI server, which you can access at [http://localhost:8080](http://localhost:8080)

### Quick Start with Docker üê≥

&gt; [!NOTE]  
&gt; Please note that for certain Docker environments, additional configurations might be needed. If you encounter any connection issues, our detailed guide on [Open WebUI Documentation](https://docs.openwebui.com/) is ready to assist you.

&gt; [!WARNING]
&gt; When using Docker to install Open WebUI, make sure to include the `-v open-webui:/app/backend/data` in your Docker command. This step is crucial as it ensures your database is properly mounted and prevents any loss of data.

&gt; [!TIP]  
&gt; If you wish to utilize Open WebUI with Ollama included or CUDA acceleration, we recommend utilizing our official images tagged with either `:cuda` or `:ollama`. To enable CUDA, you must install the [Nvidia CUDA container toolkit](https://docs.nvidia.com/dgx/nvidia-container-runtime-upgrade/) on your Linux/WSL system.

### Installation with Default Configuration

- **If Ollama is on your computer**, use this command:

  ```bash
  docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **If Ollama is on a Different Server**, use this command:

  To connect to Ollama on another server, change the `OLLAMA_BASE_URL` to the server&#039;s URL:

  ```bash
  docker run -d -p 3000:8080 -e OLLAMA_BASE_URL=https://example.com -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **To run Open WebUI with Nvidia GPU support**, use this command:

  ```bash
  docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda
  ```

### Installation for OpenAI API Usage Only

- **If you&#039;re only using OpenAI API**, use this command:

  ```bash
  docker run -d -p 3000:8080 -e OPENAI_API_KEY=your_secret_key -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

### Installing Open WebUI with Bundled Ollama Support

This installation method uses a single container image that bundles Open WebUI with Ollama, allowing for a streamlined setup via a single command. Choose the appropriate command based on your hardware setup:

- **With GPU Support**:
  Utilize GPU resources by running the following command:

  ```bash
  docker run -d -p 3000:8080 --gpus=all -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

- **For CPU Only**:
  If you&#039;re not using a GPU, use this command instead:

  ```bash
  docker run -d -p 3000:8080 -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

Both commands facilitate a built-in, hassle-free installation of both Open WebUI and Ollama, ensuring that you can get everything up and running swiftly.

After installation, you can access Open WebUI at [http://localhost:3000](http://localhost:3000). Enjoy! üòÑ

### Other Installation Methods

We offer various installation alternatives, including non-Docker native installation methods, Docker Compose, Kustomize, and Helm. Visit our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/) or join our [Discord community](https://discord.gg/5rJgQTnV4s) for comprehensive guidance.

### Troubleshooting

Encountering connection issues? Our [Open WebUI Documentation](https://docs.openwebui.com/troubleshooting/) has got you covered. For further assistance and to join our vibrant community, visit the [Open WebUI Discord](https://discord.gg/5rJgQTnV4s).

#### Open WebUI: Server Connection Error

If you&#039;re experiencing connection issues, it‚Äôs often due to the WebUI docker container not being able to reach the Ollama server at 127.0.0.1:11434 (host.docker.internal:11434) inside the container . Use the `--network=host` flag in your docker command to resolve this. Note that the port changes from 3000 to 8080, resulting in the link: `http://localhost:8080`.

**Example Docker Command**:

```bash
docker run -d --network=host -v open-webui:/app/backend/data -e OLLAMA_BASE_URL=http://127.0.0.1:11434 --name open-webui --restart always ghcr.io/open-webui/open-webui:main
```

### Keeping Your Docker Installation Up-to-Date

In case you want to update your local Docker installation to the latest version, you can do it with [Watchtower](https://containrrr.dev/watchtower/):

```bash
docker run --rm --volume /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --run-once open-webui
```

In the last part of the command, replace `open-webui` with your container name if it is different.

Check our Updating Guide available in our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/updating).

### Using the Dev Branch üåô

&gt; [!WARNING]
&gt; The `:dev` branch contains the latest unstable features and changes. Use it at your own risk as it may have bugs or incomplete features.

If you want to try out the latest bleeding-edge features and are okay with occasional instability, you can use the `:dev` tag like this:

```bash
docker run -d -p 3000:8080 -v open-webui:/app/backend/data --name open-webui --add-host=host.docker.internal:host-gateway --restart always ghcr.io/open-webui/open-webui:dev
```

### Offline Mode

If you are running Open WebUI in an offline environment, you can set the `HF_HUB_OFFLINE` environment variable to `1` to prevent attempts to download models from the internet.

```bash
export HF_HUB_OFFLINE=1
```

## What&#039;s Next? üåü

Discover upcoming features on our roadmap in the [Open WebUI Documentation](https://docs.openwebui.com/roadmap/).

## License üìú

This project is licensed under the [BSD-3-Clause License](LICENSE) - see the [LICENSE](LICENSE) file for details. üìÑ

## Support üí¨

If you have any questions, suggestions, or need assistance, please open an issue or join our
[Open WebUI Discord community](https://discord.gg/5rJgQTnV4s) to connect with us! ü§ù

## Star History

&lt;a href=&quot;https://star-history.com/#open-webui/open-webui&amp;Date&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&amp;theme=dark&quot; /&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
    &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

---

Created by [Timothy Jaeryang Baek](https://github.com/tjbck) - Let&#039;s make Open WebUI even more amazing together! üí™
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[f/awesome-chatgpt-prompts]]></title>
            <link>https://github.com/f/awesome-chatgpt-prompts</link>
            <guid>https://github.com/f/awesome-chatgpt-prompts</guid>
            <pubDate>Thu, 03 Apr 2025 00:04:56 GMT</pubDate>
            <description><![CDATA[This repo includes ChatGPT prompt curation to use ChatGPT and other LLM tools better.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/f/awesome-chatgpt-prompts">f/awesome-chatgpt-prompts</a></h1>
            <p>This repo includes ChatGPT prompt curation to use ChatGPT and other LLM tools better.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 122,480</p>
            <p>Forks: 16,415</p>
            <p>Stars today: 109 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
&lt;img width=&quot;395&quot; alt=&quot;prompts.chat&quot; src=&quot;https://github.com/user-attachments/assets/e0d0e32d-d2ce-4459-9f37-e951d9f4f5de&quot; /&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;Sponsors&lt;/h3&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://clemta.com&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;50&quot; alt=&quot;Clemta logo&quot; src=&quot;https://clemta.com/wp-content/uploads/2023/03/logo-clemta-com-1.png.webp&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;&lt;br&gt;
  &lt;a href=&quot;https://hf.co/chat&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;60&quot; alt=&quot;Hugging Face logo&quot; src=&quot;https://github.com/user-attachments/assets/4187ef06-7cae-402a-a410-e0a999758fed&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;sub&gt;&lt;a href=&quot;https://github.com/sponsors/f/sponsorships?sponsor=f&amp;amp;tier_id=319423&quot;&gt;Be my sponsor and your logo will be here!&lt;/a&gt;&lt;/sub&gt;
&lt;/p&gt;

---
[![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)

Welcome to the &quot;Awesome ChatGPT Prompts&quot; repository! While this collection was originally created for [ChatGPT](https://chat.openai.com/chat), these prompts work great with other AI models like [Claude](https://claude.ai/new), [Gemini](https://gemini.google.com), [Hugging Face Chat](https://hf.co/chat), [Llama](https://meta.ai), [Mistral](https://chat.mistral.ai), and more.

[ChatGPT](https://chat.openai.com/chat) is a web interface created by [OpenAI](https://openai.com) that provides access to their GPT (Generative Pre-trained Transformer) language models. The underlying models, like GPT-4o and GPT-o1, are large language models trained on vast amounts of text data that can understand and generate human-like text. Like other AI chat interfaces, you can provide prompts and have natural conversations with the AI, which will generate contextual responses based on the conversation history and your inputs.

In this repository, you will find a variety of prompts that can be used with ChatGPT and other AI chat models. We encourage you to [add your own prompts](https://github.com/f/awesome-chatgpt-prompts/edit/main/README.md) to the list, and to use AI to help generate new prompts as well.

To get started, simply clone this repository and use the prompts in the README.md file as input for your preferred AI chat model. You can also use the prompts in this file as inspiration for creating your own.

We hope you find these prompts useful and have fun exploring AI chat models!

**[View on prompts.chat](https://prompts.chat)**

**[View on Hugging Face](https://huggingface.co/datasets/fka/awesome-chatgpt-prompts/)**
---

&gt; ‚ÑπÔ∏è **NOTE:** Sometimes, some of the prompts may not be working as you expected
&gt; or may be rejected by the AI. Please try again, start a new thread, or log out
&gt; and log back in. If these solutions do not work, please try rewriting the
&gt; prompt using your own sentences while keeping the instructions same.

### Want to Write Effective Prompts?

I&#039;ve authored an e-book called **&quot;The Art of ChatGPT Prompting: A Guide to
Crafting Clear and Effective Prompts&quot;**.

üìñ **[Read the e-book](https://fka.gumroad.com/l/art-of-chatgpt-prompting)**

### Want to Learn How to Make Money using ChatGPT Prompts?

I&#039;ve authored an e-book called **&quot;How to Make Money with ChatGPT: Strategies,
Tips, and Tactics&quot;**.

üìñ
**[Buy the e-book](https://fka.gumroad.com/l/how-to-make-money-with-chatgpt)**

### Want to Learn How to write image prompts for Midjourney AI?

I&#039;ve authored an e-book called **&quot;The Art of Midjourney AI: A Guide to Creating
Images from Text&quot;**.

üìñ
**[Read the e-book](https://fka.gumroad.com/l/the-art-of-midjourney-ai-guide-to-creating-images-from-text)**

---

### Using prompts.chat

[prompts.chat](https://prompts.chat) is designed to provide an enhanced UX when
working with prompts. With just a few clicks, you can easily edit and copy the
prompts on the site to fit your specific needs and preferences.

&lt;img width=&quot;1400&quot; alt=&quot;Screenshot 2025-01-05 at 22 17 19&quot; src=&quot;https://github.com/user-attachments/assets/272d2092-b651-452a-a049-f46b31c32889&quot; /&gt;

---

## Unmerged Prompts

There are many Pull Requests to this repository waiting to be merged. There are
many hidden gems there. Take a look!

üìñ
**[View Unmerged Prompts](https://github.com/f/awesome-chatgpt-prompts/pulls)**

---

# Prompts

## Act as an Ethereum Developer

Contributed by: [@ameya-2003](https://github.com/Ameya-2003) Reference:
[The BlockChain Messenger](https://github.com/Ameya-2003/BlockChain/blob/main/Projects/The%20BlockChain%20Messenger.sol)

&gt; Imagine you are an experienced Ethereum developer tasked with creating a smart
&gt; contract for a blockchain messenger. The objective is to save messages on the
&gt; blockchain, making them readable (public) to everyone, writable (private) only
&gt; to the person who deployed the contract, and to count how many times the
&gt; message was updated. Develop a Solidity smart contract for this purpose,
&gt; including the necessary functions and considerations for achieving the
&gt; specified goals. Please provide the code and any relevant explanations to
&gt; ensure a clear understanding of the implementation.

## Act as a Linux Terminal

Contributed by: [@f](https://github.com/f) Reference:
[https://www.engraved.blog/building-a-virtual-machine-inside/](https://www.engraved.blog/building-a-virtual-machine-inside/)

&gt; I want you to act as a linux terminal. I will type commands and you will reply
&gt; with what the terminal should show. I want you to only reply with the terminal
&gt; output inside one unique code block, and nothing else. do not write
&gt; explanations. do not type commands unless I instruct you to do so. When I need
&gt; to tell you something in English, I will do so by putting text inside curly
&gt; brackets {like this}. My first command is pwd

## Act as an English Translator and Improver

Contributed by: [@f](https://github.com/f) **Alternative to**: Grammarly, Google
Translate

&gt; I want you to act as an English translator, spelling corrector and improver. I
&gt; will speak to you in any language and you will detect the language, translate
&gt; it and answer in the corrected and improved version of my text, in English. I
&gt; want you to replace my simplified A0-level words and sentences with more
&gt; beautiful and elegant, upper level English words and sentences. Keep the
&gt; meaning same, but make them more literary. I want you to only reply the
&gt; correction, the improvements and nothing else, do not write explanations. My
&gt; first sentence is &quot;istanbulu cok seviyom burada olmak cok guzel&quot;

## Act as Job Interviewer

Contributed by: [@f](https://github.com/f) &amp;
[@iltekin](https://github.com/iltekin) **Examples**: Node.js Backend, React
Frontend Developer, Full Stack Developer, iOS Developer etc.

&gt; I want you to act as an interviewer. I will be the candidate and you will ask
&gt; me the interview questions for the ${Position:JavaScript Developer} position. I want you to only
&gt; reply as the interviewer. Do not write all the conversation at once. I want
&gt; you to only do the interview with me. Ask me the questions and wait for my
&gt; answers. Do not write explanations. Ask me the questions one by one like an
&gt; interviewer does and wait for my answers. My first sentence is &quot;Hi&quot;

## Act as a JavaScript Console

Contributed by: [@omerimzali](https://github.com/omerimzali)

&gt; I want you to act as a javascript console. I will type commands and you will
&gt; reply with what the javascript console should show. I want you to only reply
&gt; with the terminal output inside one unique code block, and nothing else. do
&gt; not write explanations. do not type commands unless I instruct you to do so.
&gt; when I need to tell you something in english, I will do so by putting text
&gt; inside curly brackets {like this}. My first command is console.log(&quot;Hello
&gt; World&quot;);

## Act as an Excel Sheet

Contributed by: [@f](https://github.com/f)

&gt; I want you to act as a text based excel. You&#039;ll only reply me the text-based
&gt; 10 rows excel sheet with row numbers and cell letters as columns (A to L).
&gt; First column header should be empty to reference row number. I will tell you
&gt; what to write into cells and you&#039;ll reply only the result of excel table as
&gt; text, and nothing else. Do not write explanations. I will write you formulas
&gt; and you&#039;ll execute formulas and you&#039;ll only reply the result of excel table as
&gt; text. First, reply me the empty sheet.

## Act as an English Pronunciation Helper

Contributed by: [@f](https://github.com/f)

&gt; I want you to act as an English pronunciation assistant for Turkish speaking
&gt; people. I will write you sentences and you will only answer their
&gt; pronunciations, and nothing else. The replies must not be translations of my
&gt; sentence but only pronunciations. Pronunciations should use Turkish Latin
&gt; letters for phonetics. Do not write explanations on replies. My first sentence
&gt; is &quot;how the weather is in Istanbul?&quot;

## Act as a Spoken English Teacher and Improver

Contributed by: [@ATX735](https://github.com/ATX735)

&gt; I want you to act as a spoken English teacher and improver. I will speak to
&gt; you in English and you will reply to me in English to practice my spoken
&gt; English. I want you to keep your reply neat, limiting the reply to 100 words.
&gt; I want you to strictly correct my grammar mistakes, typos, and factual errors.
&gt; I want you to ask me a question in your reply. Now let&#039;s start practicing, you
&gt; could ask me a question first. Remember, I want you to strictly correct my
&gt; grammar mistakes, typos, and factual errors.

## Act as a Travel Guide

Contributed by: [@koksalkapucuoglu](https://github.com/koksalkapucuoglu)

&gt; I want you to act as a travel guide. I will write you my location and you will
&gt; suggest a place to visit near my location. In some cases, I will also give you
&gt; the type of places I will visit. You will also suggest me places of similar
&gt; type that are close to my first location. My first suggestion request is &quot;I am
&gt; in Istanbul/Beyoƒülu and I want to visit only museums.&quot;

## Act as a Plagiarism Checker

Contributed by: [@yetk1n](https://github.com/yetk1n)

&gt; I want you to act as a plagiarism checker. I will write you sentences and you
&gt; will only reply undetected in plagiarism checks in the language of the given
&gt; sentence, and nothing else. Do not write explanations on replies. My first
&gt; sentence is &quot;For computers to behave like humans, speech recognition systems
&gt; must be able to process nonverbal information, such as the emotional state of
&gt; the speaker.&quot;

## Act as Character

Contributed by: [@BRTZL](https://github.com/BRTZL)
[@mattsq](https://github.com/mattsq)

&gt; I want you to act like ${Character: Anakin Skywalker} from ${Series: Star Wars}. I want you to respond and
&gt; answer like ${Character: Anakin Skywalker} using the tone, manner and vocabulary ${Character: Anakin Skywalker}
&gt; would use. Do not write any explanations. Only answer like ${Character: Anakin Skywalker}. You
&gt; must know all of the knowledge of ${Character: Anakin Skywalker}. My first sentence is &quot;Hi
&gt; ${Character: Anakin Skywalker}.&quot;

## Act as an Advertiser

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as an advertiser. You will create a campaign to promote a
&gt; product or service of your choice. You will choose a target audience, develop
&gt; key messages and slogans, select the media channels for promotion, and decide
&gt; on any additional activities needed to reach your goals. My first suggestion
&gt; request is &quot;I need help creating an advertising campaign for a new type of
&gt; energy drink targeting young adults aged 18-30.&quot;

## Act as a Storyteller

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a storyteller. You will come up with entertaining stories
&gt; that are engaging, imaginative and captivating for the audience. It can be
&gt; fairy tales, educational stories or any other type of stories which has the
&gt; potential to capture people&#039;s attention and imagination. Depending on the
&gt; target audience, you may choose specific themes or topics for your
&gt; storytelling session e.g., if it‚Äôs children then you can talk about animals;
&gt; If it‚Äôs adults then history-based tales might engage them better etc. My first
&gt; request is &quot;I need an interesting story on perseverance.&quot;

## Act as a Football Commentator

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a football commentator. I will give you descriptions of
&gt; football matches in progress and you will commentate on the match, providing
&gt; your analysis on what has happened thus far and predicting how the game may
&gt; end. You should be knowledgeable of football terminology, tactics,
&gt; players/teams involved in each match, and focus primarily on providing
&gt; intelligent commentary rather than just narrating play-by-play. My first
&gt; request is &quot;I&#039;m watching Manchester United vs Chelsea - provide commentary for
&gt; this match.&quot;

## Act as a Stand-up Comedian

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a stand-up comedian. I will provide you with some topics
&gt; related to current events and you will use your wit, creativity, and
&gt; observational skills to create a routine based on those topics. You should
&gt; also be sure to incorporate personal anecdotes or experiences into the routine
&gt; in order to make it more relatable and engaging for the audience. My first
&gt; request is &quot;I want a humorous take on politics.&quot;

## Act as a Motivational Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a motivational coach. I will provide you with some
&gt; information about someone&#039;s goals and challenges, and it will be your job to
&gt; come up with strategies that can help this person achieve their goals. This
&gt; could involve providing positive affirmations, giving helpful advice or
&gt; suggesting activities they can do to reach their end goal. My first request is
&gt; &quot;I need help motivating myself to stay disciplined while studying for an
&gt; upcoming exam&quot;.

## Act as a Composer

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a composer. I will provide the lyrics to a song and you
&gt; will create music for it. This could include using various instruments or
&gt; tools, such as synthesizers or samplers, in order to create melodies and
&gt; harmonies that bring the lyrics to life. My first request is &quot;I have written a
&gt; poem named ‚ÄúHayalet Sevgilim‚Äù and need music to go with it.&quot;

## Act as a Debater

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a debater. I will provide you with some topics related to
&gt; current events and your task is to research both sides of the debates, present
&gt; valid arguments for each side, refute opposing points of view, and draw
&gt; persuasive conclusions based on evidence. Your goal is to help people come
&gt; away from the discussion with increased knowledge and insight into the topic
&gt; at hand. My first request is &quot;I want an opinion piece about Deno.&quot;

## Act as a Debate Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a debate coach. I will provide you with a team of
&gt; debaters and the motion for their upcoming debate. Your goal is to prepare the
&gt; team for success by organizing practice rounds that focus on persuasive
&gt; speech, effective timing strategies, refuting opposing arguments, and drawing
&gt; in-depth conclusions from evidence provided. My first request is &quot;I want our
&gt; team to be prepared for an upcoming debate on whether front-end development is
&gt; easy.&quot;

## Act as a Screenwriter

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a screenwriter. You will develop an engaging and creative
&gt; script for either a feature length film, or a Web Series that can captivate
&gt; its viewers. Start with coming up with interesting characters, the setting of
&gt; the story, dialogues between the characters etc. Once your character
&gt; development is complete - create an exciting storyline filled with twists and
&gt; turns that keeps the viewers in suspense until the end. My first request is &quot;I
&gt; need to write a romantic drama movie set in Paris.&quot;

## Act as a Novelist

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a novelist. You will come up with creative and
&gt; captivating stories that can engage readers for long periods of time. You may
&gt; choose any genre such as fantasy, romance, historical fiction and so on - but
&gt; the aim is to write something that has an outstanding plotline, engaging
&gt; characters and unexpected climaxes. My first request is &quot;I need to write a
&gt; science-fiction novel set in the future.&quot;

## Act as a Movie Critic

Contributed by: [@nuc](https://github.com/nuc)

&gt; I want you to act as a movie critic. You will develop an engaging and creative
&gt; movie review. You can cover topics like plot, themes and tone, acting and
&gt; characters, direction, score, cinematography, production design, special
&gt; effects, editing, pace, dialog. The most important aspect though is to
&gt; emphasize how the movie has made you feel. What has really resonated with you.
&gt; You can also be critical about the movie. Please avoid spoilers. My first
&gt; request is &quot;I need to write a movie review for the movie Interstellar&quot;

## Act as a Relationship Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a relationship coach. I will provide some details about
&gt; the two people involved in a conflict, and it will be your job to come up with
&gt; suggestions on how they can work through the issues that are separating them.
&gt; This could include advice on communication techniques or different strategies
&gt; for improving their understanding of one another&#039;s perspectives. My first
&gt; request is &quot;I need help solving conflicts between my spouse and myself.&quot;

## Act as a Poet

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a poet. You will create poems that evoke emotions and
&gt; have the power to stir people‚Äôs soul. Write on any topic or theme but make
&gt; sure your words convey the feeling you are trying to express in beautiful yet
&gt; meaningful ways. You can also come up with short verses that are still
&gt; powerful enough to leave an imprint in readers&#039; minds. My first request is &quot;I
&gt; need a poem about love.&quot;

## Act as a Rapper

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a rapper. You will come up with powerful and meaningful
&gt; lyrics, beats and rhythm that can ‚Äòwow‚Äô the audience. Your lyrics should have
&gt; an intriguing meaning and message which people can relate too. When it comes
&gt; to choosing your beat, make sure it is catchy yet relevant to your words, so
&gt; that when combined they make an explosion of sound everytime! My first request
&gt; is &quot;I need a rap song about finding strength within yourself.&quot;

## Act as a Motivational Speaker

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a motivational speaker. Put together words that inspire
&gt; action and make people feel empowered to do something beyond their abilities.
&gt; You can talk about any topics but the aim is to make sure what you say
&gt; resonates with your audience, giving them an incentive to work on their goals
&gt; and strive for better possibilities. My first request is &quot;I need a speech
&gt; about how everyone should never give up.&quot;

## Act as a Philosophy Teacher

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a philosophy teacher. I will provide some topics related
&gt; to the study of philosophy, and it will be your job to explain these concepts
&gt; in an easy-to-understand manner. This could include providing examples, posing
&gt; questions or breaking down complex ideas into smaller pieces that are easier
&gt; to comprehend. My first request is &quot;I need help understanding how different
&gt; philosophical theories can be applied in everyday life.&quot;

## Act as a Philosopher


... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[npm/cli]]></title>
            <link>https://github.com/npm/cli</link>
            <guid>https://github.com/npm/cli</guid>
            <pubDate>Thu, 03 Apr 2025 00:04:55 GMT</pubDate>
            <description><![CDATA[the package manager for JavaScript]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/npm/cli">npm/cli</a></h1>
            <p>the package manager for JavaScript</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,781</p>
            <p>Forks: 3,375</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre># npm - a JavaScript package manager

### Requirements

You should be running a currently supported version of [Node.js](https://nodejs.org/en/download/) to run **`npm`**.  For a list of which versions of Node.js are currently supported, please see the [Node.js releases](https://nodejs.org/en/about/previous-releases) page.

### Installation

**`npm`** comes bundled with [**`node`**](https://nodejs.org/), &amp; most third-party distributions, by default. Officially supported downloads/distributions can be found at: [nodejs.org/en/download](https://nodejs.org/en/download)

#### Direct Download

You can download &amp; install **`npm`** directly from [**npmjs**.com](https://npmjs.com/) using our custom `install.sh` script:

```bash
curl -qL https://www.npmjs.com/install.sh | sh
```

#### Node Version Managers

If you&#039;re looking to manage multiple versions of **`Node.js`** &amp;/or **`npm`**, consider using a [node version manager](https://github.com/search?q=node+version+manager+archived%3Afalse&amp;type=repositories&amp;ref=advsearch)

### Usage

```bash
npm &lt;command&gt;
```

### Links &amp; Resources

* [**Documentation**](https://docs.npmjs.com/) - Official docs &amp; how-tos for all things **npm**
    * Note: you can also search docs locally with `npm help-search &lt;query&gt;`
* [**Bug Tracker**](https://github.com/npm/cli/issues) - Search or submit bugs against the CLI
* [**Roadmap**](https://github.com/orgs/github/projects/4247/views/1?filterQuery=npm) - Track &amp; follow along with our public roadmap
* [**Community Feedback and Discussions**](https://github.com/orgs/community/discussions/categories/npm) - Contribute ideas &amp; discussion around the npm registry, website &amp; CLI
* [**RFCs**](https://github.com/npm/rfcs) - Contribute ideas &amp; specifications for the API/design of the npm CLI
* [**Service Status**](https://status.npmjs.org/) - Monitor the current status &amp; see incident reports for the website &amp; registry
* [**Project Status**](https://npm.github.io/statusboard/) - See the health of all our maintained OSS projects in one view
* [**Events Calendar**](https://calendar.google.com/calendar/u/0/embed?src=npmjs.com_oonluqt8oftrt0vmgrfbg6q6go@group.calendar.google.com) - Keep track of our Open RFC calls, releases, meetups, conferences &amp; more
* [**Support**](https://www.npmjs.com/support) - Experiencing problems with the **npm** [website](https://npmjs.com) or [registry](https://registry.npmjs.org)? File a ticket [here](https://www.npmjs.com/support)

### Acknowledgments

* `npm` is configured to use the **npm Public Registry** at [https://registry.npmjs.org](https://registry.npmjs.org) by default; Usage of this registry is subject to **Terms of Use** available at [https://npmjs.com/policies/terms](https://npmjs.com/policies/terms)
* You can configure `npm` to use any other compatible registry you prefer. You can read more about configuring third-party registries [here](https://docs.npmjs.com/cli/v7/using-npm/registry)

### FAQ on Branding

#### Is it &quot;npm&quot; or &quot;NPM&quot; or &quot;Npm&quot;?

**`npm`** should never be capitalized unless it is being displayed in a location that is customarily all-capitals (ex. titles on `man` pages).

#### Is &quot;npm&quot; an acronym for &quot;Node Package Manager&quot;?

Contrary to popular belief, **`npm`** **is not** in fact an acronym for &quot;Node Package Manager&quot;; It is a recursive bacronymic abbreviation for **&quot;npm is not an acronym&quot;** (if the project was named &quot;ninaa&quot;, then it would be an acronym). The precursor to **`npm`** was actually a bash utility named **&quot;pm&quot;**, which was the shortform name of **&quot;pkgmakeinst&quot;** - a bash function that installed various things on various platforms. If **`npm`** were to ever have been considered an acronym, it would be as &quot;node pm&quot; or, potentially &quot;new pm&quot;.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[JetBrains/mcp-jetbrains]]></title>
            <link>https://github.com/JetBrains/mcp-jetbrains</link>
            <guid>https://github.com/JetBrains/mcp-jetbrains</guid>
            <pubDate>Thu, 03 Apr 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[A model context protocol server to work with JetBrains IDEs: IntelliJ, PyCharm, WebStorm, etc. Also, works with Android Studio]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/JetBrains/mcp-jetbrains">JetBrains/mcp-jetbrains</a></h1>
            <p>A model context protocol server to work with JetBrains IDEs: IntelliJ, PyCharm, WebStorm, etc. Also, works with Android Studio</p>
            <p>Language: JavaScript</p>
            <p>Stars: 382</p>
            <p>Forks: 34</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre>[![official JetBrains project](http://jb.gg/badges/incubator-flat-square.svg)](https://github.com/JetBrains#jetbrains-on-github)
# JetBrains MCP Proxy Server

The server proxies requests from client to JetBrains IDE.

## Install MCP Server plugin

https://plugins.jetbrains.com/plugin/26071-mcp-server

## Usage with Claude Desktop

To use this with Claude Desktop, add the following to your `claude_desktop_config.json`.
The full path on MacOS: `~/Library/Application\ Support/Claude/claude_desktop_config.json`, on Windows: `%APPDATA%/Claude/claude_desktop_config.json`.

```json
{
  &quot;mcpServers&quot;: {
    &quot;jetbrains&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@jetbrains/mcp-proxy&quot;]
    }
  }
}
```

## Configuration

If you&#039;re running multiple IDEs with MCP server and want to connect to the specific one, add to the MCP server configuration:
```json
&quot;env&quot;: {
  &quot;IDE_PORT&quot;: &quot;&lt;port of IDE&#039;s built-in webserver&gt;&quot;
}
```

By default, we connect to IDE on  127.0.0.1 but you can specify a different address/host:
```json
&quot;env&quot;: {
  &quot;HOST&quot;: &quot;&lt;host/address of IDE&#039;s built-in webserver&gt;&quot;
}
```

To enable logging add:
```json
&quot;env&quot;: {
  &quot;LOG_ENABLED&quot;: &quot;true&quot;
}
```

## How to build
1. Tested on macOS
2. `brew install node pnpm`
3. Run `pnpm build` to build the project

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[nodejs/node]]></title>
            <link>https://github.com/nodejs/node</link>
            <guid>https://github.com/nodejs/node</guid>
            <pubDate>Thu, 03 Apr 2025 00:04:53 GMT</pubDate>
            <description><![CDATA[Node.js JavaScript runtime ‚ú®üê¢üöÄ‚ú®]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nodejs/node">nodejs/node</a></h1>
            <p>Node.js JavaScript runtime ‚ú®üê¢üöÄ‚ú®</p>
            <p>Language: JavaScript</p>
            <p>Stars: 110,422</p>
            <p>Forks: 31,160</p>
            <p>Stars today: 29 stars today</p>
            <h2>README</h2><pre># Node.js

Node.js is an open-source, cross-platform JavaScript runtime environment.

For information on using Node.js, see the [Node.js website][].

The Node.js project uses an [open governance model](./GOVERNANCE.md). The
[OpenJS Foundation][] provides support for the project.

Contributors are expected to act in a collaborative manner to move
the project forward. We encourage the constructive exchange of contrary
opinions and compromise. The [TSC](./GOVERNANCE.md#technical-steering-committee)
reserves the right to limit or block contributors who repeatedly act in ways
that discourage, exhaust, or otherwise negatively affect other participants.

**This project has a [Code of Conduct][].**

## Table of contents

* [Support](#support)
* [Release types](#release-types)
  * [Download](#download)
    * [Current and LTS releases](#current-and-lts-releases)
    * [Nightly releases](#nightly-releases)
    * [API documentation](#api-documentation)
  * [Verifying binaries](#verifying-binaries)
* [Building Node.js](#building-nodejs)
* [Security](#security)
* [Contributing to Node.js](#contributing-to-nodejs)
* [Current project team members](#current-project-team-members)
  * [TSC (Technical Steering Committee)](#tsc-technical-steering-committee)
  * [Collaborators](#collaborators)
  * [Triagers](#triagers)
  * [Release keys](#release-keys)
* [License](#license)

## Support

Looking for help? Check out the
[instructions for getting support](.github/SUPPORT.md).

## Release types

* **Current**: Under active development. Code for the Current release is in the
  branch for its major version number (for example,
  [v22.x](https://github.com/nodejs/node/tree/v22.x)). Node.js releases a new
  major version every 6 months, allowing for breaking changes. This happens in
  April and October every year. Releases appearing each October have a support
  life of 8 months. Releases appearing each April convert to LTS (see below)
  each October.
* **LTS**: Releases that receive Long Term Support, with a focus on stability
  and security. Every even-numbered major version will become an LTS release.
  LTS releases receive 12 months of _Active LTS_ support and a further 18 months
  of _Maintenance_. LTS release lines have alphabetically-ordered code names,
  beginning with v4 Argon. There are no breaking changes or feature additions,
  except in some special circumstances.
* **Nightly**: Code from the Current branch built every 24-hours when there are
  changes. Use with caution.

Current and LTS releases follow [semantic versioning](https://semver.org). A
member of the Release Team [signs](#release-keys) each Current and LTS release.
For more information, see the
[Release README](https://github.com/nodejs/Release#readme).

### Download

Binaries, installers, and source tarballs are available at
&lt;https://nodejs.org/en/download/&gt;.

#### Current and LTS releases

&lt;https://nodejs.org/download/release/&gt;

The [latest](https://nodejs.org/download/release/latest/) directory is an
alias for the latest Current release. The latest-_codename_ directory is an
alias for the latest release from an LTS line. For example, the
[latest-hydrogen](https://nodejs.org/download/release/latest-hydrogen/)
directory contains the latest Hydrogen (Node.js 18) release.

#### Nightly releases

&lt;https://nodejs.org/download/nightly/&gt;

Each directory and filename includes the version (e.g., `v22.0.0`),
followed by the UTC date (e.g., `20240424` for April 24, 2024),
and the short commit SHA of the HEAD of the release (e.g., `ddd0a9e494`).
For instance, a full directory name might look like `v22.0.0-nightly20240424ddd0a9e494`.

#### API documentation

Documentation for the latest Current release is at &lt;https://nodejs.org/api/&gt;.
Version-specific documentation is available in each release directory in the
_docs_ subdirectory. Version-specific documentation is also at
&lt;https://nodejs.org/download/docs/&gt;.

### Verifying binaries

Download directories contain a `SHASUMS256.txt` file with SHA checksums for the
files.

To download `SHASUMS256.txt` using `curl`:

```bash
curl -O https://nodejs.org/dist/vx.y.z/SHASUMS256.txt
```

To check that downloaded files match the checksum, use `sha256sum`:

```bash
sha256sum -c SHASUMS256.txt --ignore-missing
```

For Current and LTS, the GPG detached signature of `SHASUMS256.txt` is in
`SHASUMS256.txt.sig`. You can use it with `gpg` to verify the integrity of
`SHASUMS256.txt`. You will first need to import
[the GPG keys of individuals authorized to create releases](#release-keys).

See [Release keys](#release-keys) for commands to import active release keys.

Next, download the `SHASUMS256.txt.sig` for the release:

```bash
curl -O https://nodejs.org/dist/vx.y.z/SHASUMS256.txt.sig
```

Then use `gpg --verify SHASUMS256.txt.sig SHASUMS256.txt` to verify
the file&#039;s signature.

## Building Node.js

See [BUILDING.md](BUILDING.md) for instructions on how to build Node.js from
source and a list of supported platforms.

## Security

For information on reporting security vulnerabilities in Node.js, see
[SECURITY.md](./SECURITY.md).

## Contributing to Node.js

* [Contributing to the project][]
* [Working Groups][]
* [Strategic initiatives][]
* [Technical values and prioritization][]

## Current project team members

For information about the governance of the Node.js project, see
[GOVERNANCE.md](./GOVERNANCE.md).

&lt;!-- node-core-utils and find-inactive-tsc.mjs depend on the format of the TSC
     list. If the format changes, those utilities need to be tested and
     updated. --&gt;

### TSC (Technical Steering Committee)

#### TSC voting members

&lt;!--lint disable prohibited-strings--&gt;

* [aduh95](https://github.com/aduh95) -
  **Antoine du Hamel** &lt;&lt;duhamelantoine1995@gmail.com&gt;&gt; (he/him)
* [anonrig](https://github.com/anonrig) -
  **Yagiz Nizipli** &lt;&lt;yagiz@nizipli.com&gt;&gt; (he/him)
* [benjamingr](https://github.com/benjamingr) -
  **Benjamin Gruenbaum** &lt;&lt;benjamingr@gmail.com&gt;&gt;
* [BridgeAR](https://github.com/BridgeAR) -
  **Ruben Bridgewater** &lt;&lt;ruben@bridgewater.de&gt;&gt; (he/him)
* [gireeshpunathil](https://github.com/gireeshpunathil) -
  **Gireesh Punathil** &lt;&lt;gpunathi@in.ibm.com&gt;&gt; (he/him)
* [jasnell](https://github.com/jasnell) -
  **James M Snell** &lt;&lt;jasnell@gmail.com&gt;&gt; (he/him)
* [joyeecheung](https://github.com/joyeecheung) -
  **Joyee Cheung** &lt;&lt;joyeec9h3@gmail.com&gt;&gt; (she/her)
* [legendecas](https://github.com/legendecas) -
  **Chengzhong Wu** &lt;&lt;legendecas@gmail.com&gt;&gt; (he/him)
* [marco-ippolito](https://github.com/marco-ippolito) -
  **Marco Ippolito** &lt;&lt;marcoippolito54@gmail.com&gt;&gt; (he/him)
* [mcollina](https://github.com/mcollina) -
  **Matteo Collina** &lt;&lt;matteo.collina@gmail.com&gt;&gt; (he/him)
* [mhdawson](https://github.com/mhdawson) -
  **Michael Dawson** &lt;&lt;midawson@redhat.com&gt;&gt; (he/him)
* [RafaelGSS](https://github.com/RafaelGSS) -
  **Rafael Gonzaga** &lt;&lt;rafael.nunu@hotmail.com&gt;&gt; (he/him)
* [RaisinTen](https://github.com/RaisinTen) -
  **Darshan Sen** &lt;&lt;raisinten@gmail.com&gt;&gt; (he/him)
* [richardlau](https://github.com/richardlau) -
  **Richard Lau** &lt;&lt;rlau@redhat.com&gt;&gt;
* [ronag](https://github.com/ronag) -
  **Robert Nagy** &lt;&lt;ronagy@icloud.com&gt;&gt;
* [ruyadorno](https://github.com/ruyadorno) -
  **Ruy Adorno** &lt;&lt;ruy@vlt.sh&gt;&gt; (he/him)
* [ShogunPanda](https://github.com/ShogunPanda) -
  **Paolo Insogna** &lt;&lt;paolo@cowtech.it&gt;&gt; (he/him)
* [targos](https://github.com/targos) -
  **Micha√´l Zasso** &lt;&lt;targos@protonmail.com&gt;&gt; (he/him)
* [tniessen](https://github.com/tniessen) -
  **Tobias Nie√üen** &lt;&lt;tniessen@tnie.de&gt;&gt; (he/him)

#### TSC regular members

* [BethGriggs](https://github.com/BethGriggs) -
  **Beth Griggs** &lt;&lt;bethanyngriggs@gmail.com&gt;&gt; (she/her)
* [bnoordhuis](https://github.com/bnoordhuis) -
  **Ben Noordhuis** &lt;&lt;info@bnoordhuis.nl&gt;&gt;
* [cjihrig](https://github.com/cjihrig) -
  **Colin Ihrig** &lt;&lt;cjihrig@gmail.com&gt;&gt; (he/him)
* [codebytere](https://github.com/codebytere) -
  **Shelley Vohr** &lt;&lt;shelley.vohr@gmail.com&gt;&gt; (she/her)
* [GeoffreyBooth](https://github.com/GeoffreyBooth) -
  **Geoffrey Booth** &lt;&lt;webadmin@geoffreybooth.com&gt;&gt; (he/him)
* [MoLow](https://github.com/MoLow) -
  **Moshe Atlow** &lt;&lt;moshe@atlow.co.il&gt;&gt; (he/him)
* [Trott](https://github.com/Trott) -
  **Rich Trott** &lt;&lt;rtrott@gmail.com&gt;&gt; (he/him)

&lt;details&gt;

&lt;summary&gt;TSC emeriti members&lt;/summary&gt;

#### TSC emeriti members

* [addaleax](https://github.com/addaleax) -
  **Anna Henningsen** &lt;&lt;anna@addaleax.net&gt;&gt; (she/her)
* [apapirovski](https://github.com/apapirovski) -
  **Anatoli Papirovski** &lt;&lt;apapirovski@mac.com&gt;&gt; (he/him)
* [ChALkeR](https://github.com/ChALkeR) -
  **–°–∫–æ–≤–æ—Ä–æ–¥–∞ –ù–∏–∫–∏—Ç–∞ –ê–Ω–¥—Ä–µ–µ–≤–∏—á** &lt;&lt;chalkerx@gmail.com&gt;&gt; (he/him)
* [chrisdickinson](https://github.com/chrisdickinson) -
  **Chris Dickinson** &lt;&lt;christopher.s.dickinson@gmail.com&gt;&gt;
* [danbev](https://github.com/danbev) -
  **Daniel Bevenius** &lt;&lt;daniel.bevenius@gmail.com&gt;&gt; (he/him)
* [danielleadams](https://github.com/danielleadams) -
  **Danielle Adams** &lt;&lt;adamzdanielle@gmail.com&gt;&gt; (she/her)
* [evanlucas](https://github.com/evanlucas) -
  **Evan Lucas** &lt;&lt;evanlucas@me.com&gt;&gt; (he/him)
* [fhinkel](https://github.com/fhinkel) -
  **Franziska Hinkelmann** &lt;&lt;franziska.hinkelmann@gmail.com&gt;&gt; (she/her)
* [Fishrock123](https://github.com/Fishrock123) -
  **Jeremiah Senkpiel** &lt;&lt;fishrock123@rocketmail.com&gt;&gt; (he/they)
* [gabrielschulhof](https://github.com/gabrielschulhof) -
  **Gabriel Schulhof** &lt;&lt;gabrielschulhof@gmail.com&gt;&gt;
* [gibfahn](https://github.com/gibfahn) -
  **Gibson Fahnestock** &lt;&lt;gibfahn@gmail.com&gt;&gt; (he/him)
* [indutny](https://github.com/indutny) -
  **Fedor Indutny** &lt;&lt;fedor@indutny.com&gt;&gt;
* [isaacs](https://github.com/isaacs) -
  **Isaac Z. Schlueter** &lt;&lt;i@izs.me&gt;&gt;
* [joshgav](https://github.com/joshgav) -
  **Josh Gavant** &lt;&lt;josh.gavant@outlook.com&gt;&gt;
* [mmarchini](https://github.com/mmarchini) -
  **Mary Marchini** &lt;&lt;oss@mmarchini.me&gt;&gt; (she/her)
* [mscdex](https://github.com/mscdex) -
  **Brian White** &lt;&lt;mscdex@mscdex.net&gt;&gt;
* [MylesBorins](https://github.com/MylesBorins) -
  **Myles Borins** &lt;&lt;myles.borins@gmail.com&gt;&gt; (he/him)
* [nebrius](https://github.com/nebrius) -
  **Bryan Hughes** &lt;&lt;bryan@nebri.us&gt;&gt;
* [ofrobots](https://github.com/ofrobots) -
  **Ali Ijaz Sheikh** &lt;&lt;ofrobots@google.com&gt;&gt; (he/him)
* [orangemocha](https://github.com/orangemocha) -
  **Alexis Campailla** &lt;&lt;orangemocha@nodejs.org&gt;&gt;
* [piscisaureus](https://github.com/piscisaureus) -
  **Bert Belder** &lt;&lt;bertbelder@gmail.com&gt;&gt;
* [rvagg](https://github.com/rvagg) -
  **Rod Vagg** &lt;&lt;r@va.gg&gt;&gt;
* [sam-github](https://github.com/sam-github) -
  **Sam Roberts** &lt;&lt;vieuxtech@gmail.com&gt;&gt;
* [shigeki](https://github.com/shigeki) -
  **Shigeki Ohtsu** &lt;&lt;ohtsu@ohtsu.org&gt;&gt; (he/him)
* [thefourtheye](https://github.com/thefourtheye) -
  **Sakthipriyan Vairamani** &lt;&lt;thechargingvolcano@gmail.com&gt;&gt; (he/him)
* [TimothyGu](https://github.com/TimothyGu) -
  **Tiancheng &quot;Timothy&quot; Gu** &lt;&lt;timothygu99@gmail.com&gt;&gt; (he/him)
* [trevnorris](https://github.com/trevnorris) -
  **Trevor Norris** &lt;&lt;trev.norris@gmail.com&gt;&gt;

&lt;/details&gt;

&lt;!-- node-core-utils and find-inactive-collaborators.mjs depend on the format
     of the collaborator list. If the format changes, those utilities need to be
     tested and updated. --&gt;

### Collaborators

* [abmusse](https://github.com/abmusse) -
  **Abdirahim Musse** &lt;&lt;abdirahim.musse@ibm.com&gt;&gt;
* [addaleax](https://github.com/addaleax) -
  **Anna Henningsen** &lt;&lt;anna@addaleax.net&gt;&gt; (she/her)
* [aduh95](https://github.com/aduh95) -
  **Antoine du Hamel** &lt;&lt;duhamelantoine1995@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/aduh95)
* [anonrig](https://github.com/anonrig) -
  **Yagiz Nizipli** &lt;&lt;yagiz@nizipli.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/anonrig)
* [atlowChemi](https://github.com/atlowChemi) -
  **Chemi Atlow** &lt;&lt;chemi@atlow.co.il&gt;&gt; (he/him)
* [Ayase-252](https://github.com/Ayase-252) -
  **Qingyu Deng** &lt;&lt;i@ayase-lab.com&gt;&gt;
* [bengl](https://github.com/bengl) -
  **Bryan English** &lt;&lt;bryan@bryanenglish.com&gt;&gt; (he/him)
* [benjamingr](https://github.com/benjamingr) -
  **Benjamin Gruenbaum** &lt;&lt;benjamingr@gmail.com&gt;&gt;
* [BethGriggs](https://github.com/BethGriggs) -
  **Beth Griggs** &lt;&lt;bethanyngriggs@gmail.com&gt;&gt; (she/her)
* [bnb](https://github.com/bnb) -
  **Tierney Cyren** &lt;&lt;hello@bnb.im&gt;&gt; (they/them)
* [bnoordhuis](https://github.com/bnoordhuis) -
  **Ben Noordhuis** &lt;&lt;info@bnoordhuis.nl&gt;&gt;
* [BridgeAR](https://github.com/BridgeAR) -
  **Ruben Bridgewater** &lt;&lt;ruben@bridgewater.de&gt;&gt; (he/him)
* [cclauss](https://github.com/cclauss) -
  **Christian Clauss** &lt;&lt;cclauss@me.com&gt;&gt; (he/him)
* [cjihrig](https://github.com/cjihrig) -
  **Colin Ihrig** &lt;&lt;cjihrig@gmail.com&gt;&gt; (he/him)
* [codebytere](https://github.com/codebytere) -
  **Shelley Vohr** &lt;&lt;shelley.vohr@gmail.com&gt;&gt; (she/her)
* [cola119](https://github.com/cola119) -
  **Kohei Ueno** &lt;&lt;kohei.ueno119@gmail.com&gt;&gt; (he/him)
* [daeyeon](https://github.com/daeyeon) -
  **Daeyeon Jeong** &lt;&lt;daeyeon.dev@gmail.com&gt;&gt; (he/him)
* [debadree25](https://github.com/debadree25) -
  **Debadree Chatterjee** &lt;&lt;debadree333@gmail.com&gt;&gt; (he/him)
* [deokjinkim](https://github.com/deokjinkim) -
  **Deokjin Kim** &lt;&lt;deokjin81.kim@gmail.com&gt;&gt; (he/him)
* [edsadr](https://github.com/edsadr) -
  **Adrian Estrada** &lt;&lt;edsadr@gmail.com&gt;&gt; (he/him)
* [ErickWendel](https://github.com/ErickWendel) -
  **Erick Wendel** &lt;&lt;erick.workspace@gmail.com&gt;&gt; (he/him)
* [Ethan-Arrowood](https://github.com/Ethan-Arrowood) -
  **Ethan Arrowood** &lt;&lt;ethan@arrowood.dev&gt;&gt; (he/him)
* [F3n67u](https://github.com/F3n67u) -
  **Feng Yu** &lt;&lt;F3n67u@outlook.com&gt;&gt; (he/him)
* [fhinkel](https://github.com/fhinkel) -
  **Franziska Hinkelmann** &lt;&lt;franziska.hinkelmann@gmail.com&gt;&gt; (she/her)
* [Flarna](https://github.com/Flarna) -
  **Gerhard St√∂bich** &lt;&lt;deb2001-github@yahoo.de&gt;&gt; (he/they)
* [gabrielschulhof](https://github.com/gabrielschulhof) -
  **Gabriel Schulhof** &lt;&lt;gabrielschulhof@gmail.com&gt;&gt;
* [geeksilva97](https://github.com/geeksilva97) -
  **Edy Silva** &lt;&lt;edigleyssonsilva@gmail.com&gt;&gt; (he/him)
* [gengjiawen](https://github.com/gengjiawen) -
  **Jiawen Geng** &lt;&lt;technicalcute@gmail.com&gt;&gt;
* [GeoffreyBooth](https://github.com/GeoffreyBooth) -
  **Geoffrey Booth** &lt;&lt;webadmin@geoffreybooth.com&gt;&gt; (he/him)
* [gireeshpunathil](https://github.com/gireeshpunathil) -
  **Gireesh Punathil** &lt;&lt;gpunathi@in.ibm.com&gt;&gt; (he/him)
* [guybedford](https://github.com/guybedford) -
  **Guy Bedford** &lt;&lt;guybedford@gmail.com&gt;&gt; (he/him)
* [H4ad](https://github.com/H4ad) -
  **Vin√≠cius Louren√ßo Claro Cardoso** &lt;&lt;contact@viniciusl.com.br&gt;&gt; (he/him)
* [HarshithaKP](https://github.com/HarshithaKP) -
  **Harshitha K P** &lt;&lt;harshitha014@gmail.com&gt;&gt; (she/her)
* [himself65](https://github.com/himself65) -
  **Zeyu &quot;Alex&quot; Yang** &lt;&lt;himself65@outlook.com&gt;&gt; (he/him)
* [jakecastelli](https://github.com/jakecastelli) -
  **Jake Yuesong Li** &lt;&lt;jake.yuesong@gmail.com&gt;&gt; (he/him)
* [JakobJingleheimer](https://github.com/JakobJingleheimer) -
  **Jacob Smith** &lt;&lt;jacob@frende.me&gt;&gt; (he/him)
* [jasnell](https://github.com/jasnell) -
  **James M Snell** &lt;&lt;jasnell@gmail.com&gt;&gt; (he/him)
* [jazelly](https://github.com/jazelly) -
  **Jason Zhang** &lt;&lt;xzha4350@gmail.com&gt;&gt; (he/him)
* [jkrems](https://github.com/jkrems) -
  **Jan Martin** &lt;&lt;jan.krems@gmail.com&gt;&gt; (he/him)
* [joyeecheung](https://github.com/joyeecheung) -
  **Joyee Cheung** &lt;&lt;joyeec9h3@gmail.com&gt;&gt; (she/her)
* [juanarbol](https://github.com/juanarbol) -
  **Juan Jos√© Arboleda** &lt;&lt;soyjuanarbol@gmail.com&gt;&gt; (he/him)
* [JungMinu](https://github.com/JungMinu) -
  **Minwoo Jung** &lt;&lt;nodecorelab@gmail.com&gt;&gt; (he/him)
* [KhafraDev](https://github.com/KhafraDev) -
  **Matthew Aitken** &lt;&lt;maitken033380023@gmail.com&gt;&gt; (he/him)
* [legendecas](https://github.com/legendecas) -
  **Chengzhong Wu** &lt;&lt;legendecas@gmail.com&gt;&gt; (he/him)
* [lemire](https://github.com/lemire) -
  **Daniel Lemire** &lt;&lt;daniel@lemire.me&gt;&gt;
* [Linkgoron](https://github.com/Linkgoron) -
  **Nitzan Uziely** &lt;&lt;linkgoron@gmail.com&gt;&gt;
* [LiviaMedeiros](https://github.com/LiviaMedeiros) -
  **LiviaMedeiros** &lt;&lt;livia@cirno.name&gt;&gt;
* [ljharb](https://github.com/ljharb) -
  **Jordan Harband** &lt;&lt;ljharb@gmail.com&gt;&gt;
* [lpinca](https://github.com/lpinca) -
  **Luigi Pinca** &lt;&lt;luigipinca@gmail.com&gt;&gt; (he/him)
* [lukekarrys](https://github.com/lukekarrys) -
  **Luke Karrys** &lt;&lt;luke@lukekarrys.com&gt;&gt; (he/him)
* [Lxxyx](https://github.com/Lxxyx) -
  **Zijian Liu** &lt;&lt;lxxyxzj@gmail.com&gt;&gt; (he/him)
* [marco-ippolito](https://github.com/marco-ippolito) -
  **Marco Ippolito** &lt;&lt;marcoippolito54@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/marco-ippolito)
* [marsonya](https://github.com/marsonya) -
  **Akhil Marsonya** &lt;&lt;akhil.marsonya27@gmail.com&gt;&gt; (he/him)
* [MattiasBuelens](https://github.com/MattiasBuelens) -
  **Mattias Buelens** &lt;&lt;mattias@buelens.com&gt;&gt; (he/him)
* [mcollina](https://github.com/mcollina) -
  **Matteo Collina** &lt;&lt;matteo.collina@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/mcollina)
* [meixg](https://github.com/meixg) -
  **Xuguang Mei** &lt;&lt;meixuguang@gmail.com&gt;&gt; (he/him)
* [mhdawson](https://github.com/mhdawson) -
  **Michael Dawson** &lt;&lt;midawson@redhat.com&gt;&gt; (he/him)
* [mildsunrise](https://github.com/mildsunrise) -
  **Alba Mendez** &lt;&lt;me@alba.sh&gt;&gt; (she/her)
* [MoLow](https://github.com/MoLow) -
  **Moshe Atlow** &lt;&lt;moshe@atlow.co.il&gt;&gt; (he/him)
* [MrJithil](https://github.com/MrJithil) -
  **Jithil P Ponnan** &lt;&lt;jithil@outlook.com&gt;&gt; (he/him)
* [panva](https://github.com/panva) -
  **Filip Skokan** &lt;&lt;panva.ip@gmail.com&gt;&gt; (he/him)
* [pimterry](https://github.com/pimterry) -
  **Tim Perry** &lt;&lt;pimterry@gmail.com&gt;&gt; (he/him)
* [pmarchini](https://github.com/pmarchini) -
  **Pietro Marchini** &lt;&lt;pietro.marchini94@gmail.com&gt;&gt; (he/him)
* [Qard](https://github.com/Qard) -
  **Stephen Belanger** &lt;&lt;admin@stephenbelanger.com&gt;&gt; (he/him)
* [RafaelGSS](https://github.com/RafaelGSS) -
  **Rafael Gonzaga** &lt;&lt;rafael.nunu@hotmail.com&gt;&gt; (he/him)
* [RaisinTen](https://github.com/RaisinTen) -
  **Darshan Sen** &lt;&lt;raisinten@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/RaisinTen)
* [richardlau](https://github.com/richardlau) -
  **Richard Lau** &lt;&lt;rlau@redhat.com&gt;&gt;
* [rluvaton](https://github.com/rluvaton) -
  **Raz Luvaton** &lt;&lt;rluvaton@gmail.com&gt;&gt; (he/him)
* [ronag](https://github.com/ronag) -
  **Robert Nagy** &lt;&lt;ronagy@icloud.com&gt;&gt;
* [ruyadorno](https://github.com/ruyadorno) -
  **Ruy Adorno** &lt;&lt;ruy@vlt.sh&gt;&gt; (he/him)
* [santigimeno](https://github.com/santigimeno) -
  **Santiago Gimeno** &lt;&lt;santiago.gimeno@gmail.com&gt;&gt;
* [ShogunPanda](https://github.com/ShogunPanda) -
  **Paolo Insogna** &lt;&lt;paolo@cowtech.it&gt;&gt; (he/him)
* [srl295](https://github.com/srl295) -
  **Steven R Loomis** &lt;&lt;srl295@gmail.com&gt;&gt;
* [StefanStojanovic](https://github.com/StefanStojanovic) -
  **Stefan Stojanovic** &lt;&lt;stefan.stojanovic@janeasystems.com&gt;&gt; (he/him)
* [sxa](https://github.com/sxa) -
  **Stewart X Addison** &lt;&lt;sxa@redhat.com&gt;&gt; (he/him)
* [targos](https://github.com/targos) -
  **Micha√´l Zasso** &lt;&lt;targos@protonmail.com&gt;&gt; (he/him)
* [theanarkh](https://github.com/theanarkh) -
  **theanarkh** &lt;&lt;theratliter@gmail.com&gt;&gt; (he/him)
* [tniessen](https://github.com/tniessen) -
  **Tobias Nie√üen** &lt;&lt;tniessen@tnie.de&gt;&gt; (he/him)
* [trivikr](https://github.com/trivikr) -
  **Trivikram Kamat** &lt;&lt;trivikr.dev@gmail.com&gt;&gt;
* [Trott](https://github.com/Trott) -
  **Rich Trott** &lt;&lt;rtrott@gmail.com&gt;&gt; (he/him)
* [UlisesGascon](https://github.com/UlisesGascon) -
  **Ulises Gasc√≥n** &lt;&lt;ulisesgascongonzalez@gmail.com&gt;&gt; (he/him)
* [vmoroz](https://github.com/vmoroz) -
  **Vladimir Morozov** &lt;&lt;vmorozov@microsoft.com&gt;&gt; (he/him)
* [VoltrexKeyva](https://github.com/VoltrexKeyva) -
  **Mohammed Keyvanzadeh** &lt;&lt;mohammadkeyvanzade94@gmail.com&gt;&gt; (he/him)
* [zcbenz](https://github.com/zcbenz) -
  **Cheng Zhao** &lt;&lt;zcbenz@gmail.com&gt;&gt; (he/him)
* [ZYSzys](https://github.com/ZYSzys) -
  **Yongsheng Zhang** &lt;&lt;zyszys98@gmail.com&gt;&gt; (he/him)

&lt;details&gt;

&lt;summary&gt;Emeriti&lt;/summary&gt;

&lt;!-- find-inactive-collaborators.mjs depends on the format of the emeriti list.
     If the format changes, those utilities need to be tested and updated

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mozilla/pdf.js]]></title>
            <link>https://github.com/mozilla/pdf.js</link>
            <guid>https://github.com/mozilla/pdf.js</guid>
            <pubDate>Thu, 03 Apr 2025 00:04:52 GMT</pubDate>
            <description><![CDATA[PDF Reader in JavaScript]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mozilla/pdf.js">mozilla/pdf.js</a></h1>
            <p>PDF Reader in JavaScript</p>
            <p>Language: JavaScript</p>
            <p>Stars: 50,297</p>
            <p>Forks: 10,238</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre># PDF.js [![CI](https://github.com/mozilla/pdf.js/actions/workflows/ci.yml/badge.svg?query=branch%3Amaster)](https://github.com/mozilla/pdf.js/actions/workflows/ci.yml?query=branch%3Amaster)

[PDF.js](https://mozilla.github.io/pdf.js/) is a Portable Document Format (PDF) viewer that is built with HTML5.

PDF.js is community-driven and supported by Mozilla. Our goal is to
create a general-purpose, web standards-based platform for parsing and
rendering PDFs.

## Contributing

PDF.js is an open source project and always looking for more contributors. To
get involved, visit:

+ [Issue Reporting Guide](https://github.com/mozilla/pdf.js/blob/master/.github/CONTRIBUTING.md)
+ [Code Contribution Guide](https://github.com/mozilla/pdf.js/wiki/Contributing)
+ [Frequently Asked Questions](https://github.com/mozilla/pdf.js/wiki/Frequently-Asked-Questions)
+ [Good Beginner Bugs](https://github.com/mozilla/pdf.js/issues?direction=desc&amp;labels=good-beginner-bug&amp;page=1&amp;sort=created&amp;state=open)
+ [Projects](https://github.com/mozilla/pdf.js/projects)

Feel free to stop by our [Matrix room](https://chat.mozilla.org/#/room/#pdfjs:mozilla.org) for questions or guidance.

## Getting Started

### Online demo

Please note that the &quot;Modern browsers&quot; version assumes native support for the
latest JavaScript features; please also see [this wiki page](https://github.com/mozilla/pdf.js/wiki/Frequently-Asked-Questions#faq-support).

+ Modern browsers: https://mozilla.github.io/pdf.js/web/viewer.html

+ Older browsers: https://mozilla.github.io/pdf.js/legacy/web/viewer.html

### Browser Extensions

#### Firefox

PDF.js is built into version 19+ of Firefox.

#### Chrome

+ The official extension for Chrome can be installed from the [Chrome Web Store](https://chrome.google.com/webstore/detail/pdf-viewer/oemmndcbldboiebfnladdacbdfmadadm).
*This extension is maintained by [@Rob--W](https://github.com/Rob--W).*
+ Build Your Own - Get the code as explained below and issue `npx gulp chromium`. Then open
Chrome, go to `Tools &gt; Extension` and load the (unpackaged) extension from the
directory `build/chromium`.

## Getting the Code

To get a local copy of the current code, clone it using git:

    $ git clone https://github.com/mozilla/pdf.js.git
    $ cd pdf.js

Next, install Node.js via the [official package](https://nodejs.org) or via
[nvm](https://github.com/creationix/nvm). If everything worked out, install
all dependencies for PDF.js:

    $ npm install

Finally, you need to start a local web server as some browsers do not allow opening
PDF files using a `file://` URL. Run:

    $ npx gulp server

and then you can open:

+ http://localhost:8888/web/viewer.html

Please keep in mind that this assumes the latest version of Mozilla Firefox; refer to [Building PDF.js](https://github.com/mozilla/pdf.js/blob/master/README.md#building-pdfjs) for non-development usage of the PDF.js library.

It is also possible to view all test PDF files on the right side by opening:

+ http://localhost:8888/test/pdfs/?frame

## Building PDF.js

In order to bundle all `src/` files into two production scripts and build the generic
viewer, run:

    $ npx gulp generic

If you need to support older browsers, run:

    $ npx gulp generic-legacy

This will generate `pdf.js` and `pdf.worker.js` in the `build/generic/build/` directory (respectively `build/generic-legacy/build/`).
Both scripts are needed but only `pdf.js` needs to be included since `pdf.worker.js` will
be loaded by `pdf.js`. The PDF.js files are large and should be minified for production.

## Using PDF.js in a web application

To use PDF.js in a web application you can choose to use a pre-built version of the library
or to build it from source. We supply pre-built versions for usage with NPM under
the `pdfjs-dist` name. For more information and examples please refer to the
[wiki page](https://github.com/mozilla/pdf.js/wiki/Setup-pdf.js-in-a-website) on this subject.

## Including via a CDN

PDF.js is hosted on several free CDNs:
 - https://www.jsdelivr.com/package/npm/pdfjs-dist
 - https://cdnjs.com/libraries/pdf.js
 - https://unpkg.com/pdfjs-dist/

## Learning

You can play with the PDF.js API directly from your browser using the live demos below:

+ [Interactive examples](https://mozilla.github.io/pdf.js/examples/index.html#interactive-examples)

More examples can be found in the [examples folder](https://github.com/mozilla/pdf.js/tree/master/examples/). Some of them are using the pdfjs-dist package, which can be built and installed in this repo directory via `npx gulp dist-install` command.

For an introduction to the PDF.js code, check out the presentation by our
contributor Julian Viereck:

+ https://www.youtube.com/watch?v=Iv15UY-4Fg8

More learning resources can be found at:

+ https://github.com/mozilla/pdf.js/wiki/Additional-Learning-Resources

The API documentation can be found at:

+ https://mozilla.github.io/pdf.js/api/

## Questions

Check out our FAQs and get answers to common questions:

+ https://github.com/mozilla/pdf.js/wiki/Frequently-Asked-Questions

Talk to us on Matrix:

+ https://chat.mozilla.org/#/room/#pdfjs:mozilla.org

File an issue:

+ https://github.com/mozilla/pdf.js/issues/new/choose
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[Script-Hub-Org/Script-Hub]]></title>
            <link>https://github.com/Script-Hub-Org/Script-Hub</link>
            <guid>https://github.com/Script-Hub-Org/Script-Hub</guid>
            <pubDate>Thu, 03 Apr 2025 00:04:51 GMT</pubDate>
            <description><![CDATA[Advanced Script Converter for QX, Loon, Surge, Stash, Egern, LanceX and Shadowrocket - ÈáçÂÜô & ËßÑÂàôÈõÜËΩ¨Êç¢]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Script-Hub-Org/Script-Hub">Script-Hub-Org/Script-Hub</a></h1>
            <p>Advanced Script Converter for QX, Loon, Surge, Stash, Egern, LanceX and Shadowrocket - ÈáçÂÜô & ËßÑÂàôÈõÜËΩ¨Êç¢</p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,665</p>
            <p>Forks: 93</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
&lt;br&gt;
&lt;img width=&quot;200&quot; src=&quot;https://raw.githubusercontent.com/Script-Hub-Org/Script-Hub/main/assets/icon-dark.png&quot; alt=&quot;Script Hub&quot;&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h1 align=&quot;center&quot;&gt;Script Hub&lt;h1&gt;
&lt;/div&gt;

&lt;p align=&quot;center&quot; color=&quot;#6a737d&quot;&gt;
Advanced Script Converter for QX, Loon, Surge, Stash, Egern, LanceX and Shadowrocket
&lt;/p&gt;
&lt;p align=&quot;center&quot; color=&quot;#6a737d&quot;&gt;
ÈáçÂÜô &amp; ËßÑÂàôÈõÜËΩ¨Êç¢
&lt;/p&gt;

## Á§æÁæ§

üëèüèª Ê¨¢ËøéÂä†ÂÖ•Á§æÁæ§ËøõË°å‰∫§ÊµÅËÆ®ËÆ∫

üë• Áæ§ÁªÑ [Âº†‰Ω©Êúç(Áæ§ÁªÑ)](https://t.me/zhangpeifu) &amp; [ÊäòËÖæÂï•(Áæ§ÁªÑ)](https://t.me/zhetengsha_group)

üì¢ È¢ëÈÅì [Âº†‰Ω©Êúç(È¢ëÈÅì)](https://t.me/h5683577) &amp; [ÊäòËÖæÂï•(È¢ëÈÅì)](https://t.me/zhetengsha)

## ÁÆÄ‰ªã

‚Ä¢ ÊîØÊåÅÂ∞Ü QX ÈáçÂÜôËß£ÊûêËá≥ Surge Shadowrocket Loon Stash

‚Ä¢ ÊîØÊåÅÂ∞Ü Surge Ê®°ÂùóËß£ÊûêËá≥ Loon Stash

‚Ä¢ ÊîØÊåÅÂ∞Ü Loon Êèí‰ª∂Ëß£ÊûêËá≥ Surge Shadowrocket Stash

‚Ä¢ ÊîØÊåÅ QX &amp; Surge &amp; Loon &amp; Shadowrocket &amp; Clash ËßÑÂàôÈõÜËß£ÊûêÔºåÈÄÇÁî® app: Surge Shadowrocket Stash Loon

‚Ä¢ ÊîØÊåÅ Â∞Ü QX ËÑöÊú¨ËΩ¨Êç¢Êàê Surge ËÑöÊú¨(ÂÖºÂÆπ)

‚Ä¢ ÂèØ‰ª•‰øÆÊîπÂèÇÊï∞ argument

‚Ä¢ ÊîØÊåÅ‰∏ÄÈîÆÂØºÂÖ• Shadowrocket / Loon / Stash

‚Ä¢ È´òÁ∫ßÂäüËÉΩ OR ‰øÆÊîπ‰ªªÊÑèÊñáÊú¨

‚Ä¢ Â¶ÇÊûúÊüê‰∫õÊ®°ÂùóÈúÄË¶Å `Âä†ÂèÇÊï∞ÊâçËÉΩ‰ΩøÁî®` ‰ΩÜÂè™ÊÉ≥Áî®ËøúÁ®ãÈìæÊé•Ôºå‰∏çÊÉ≥ÊãâÂèñÂà∞Êú¨Âú∞Ê®°ÂùóÁöÑÊÉÖÂÜµ ÂèØ‰ª•Áõ¥Êé•‰ΩøÁî® `Á∫ØÊñáÊú¨` -&gt; `È´òÁ∫ßÊìç‰Ωú`„ÄÅ`‰øÆÊîπÂèÇÊï∞` ÂäüËÉΩ‰øÆÊîπËøúÁ®ãÈìæÊé• `‰ªªÊÑèÂÜÖÂÆπ` ÊàñËÄÖ `argument` ÂèÇÊï∞, ‰∏çÁî®ÂÜçÂ§çÂà∂Âà∞Êú¨Âú∞Ê®°Âùó

‚Ä¢ [üÜï ‰∏çÈúÄË¶Å‰ª£ÁêÜ app ÁöÑÂÖ®ÊúçÂä°Âô®ÈÉ®ÁΩ≤Áâà(ÊµãËØï‰∏≠)](&lt;https://github.com/Script-Hub-Org/Script-Hub/wiki/%E5%85%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%89%88(%E6%B5%8B%E8%AF%95%E4%B8%AD)&gt;)

‚Ä¢ Áõ∏ÂÖ≥ÁîüÊÄÅ: [Surge Ê®°ÂùóÂ∑•ÂÖ∑](https://github.com/Script-Hub-Org/Script-Hub/wiki/%E7%9B%B8%E5%85%B3%E7%94%9F%E6%80%81:-Surge-%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7) ÊîØÊåÅ‰∏ÄÈîÆÂØºÂÖ• SurgeÔºå ÈúÄË¶Å‰∏ãËΩΩ„ÄåScriptable„Äçapp. Â¶ÇÊûúÊÉ≥ÊääÂÖ∂‰ªñÈùû Script Hub ËΩ¨Êç¢ÁöÑ Ê®°ÂùóÊîæÂú®Êú¨Âú∞, ‰πüÂèØÂçïÁã¨Áî®Ê≠§ËÑöÊú¨

## ÊñáÊ°£

[ÂÆâË£Ö‰ΩìÈ™åËØ∑Êü•ÁúãÊñáÊ°£](https://github.com/Script-Hub-Org/Script-Hub/wiki)

## È∏£Ë∞¢

Powered by [_@Chavy‚Äòs_](https://github.com/chavyleung) [Env.js](https://github.com/chavyleung/scripts)  
ÂéüËÑöÊú¨‰ΩúËÄÖ @Â∞èÁôΩËÑ∏  
ËÑöÊú¨‰øÆÊîπ[_@chengkongyiban_](https://github.com/chengkongyiban)  
Â§ßÈáèÂÄüÈâ¥[_@KOP-XIAO_](https://github.com/KOP-XIAO)‰Ω¨ÁöÑ[resource-parser.js](https://github.com/KOP-XIAO/QuantumultX/raw/master/Scripts/resource-parser.js)  
ÊÑüË∞¢[_@xream_](https://github.com/xream) ‰Ω¨Êèê‰æõ‰∏é [_@keywos_](https://github.com/keywos) ‰øÆÊîπ `Êú¨È°πÁõÆ Script Hub ÁΩëÈ°µÂâçÁ´Ø`, [replace-header.js](https://raw.githubusercontent.com/Script-Hub-Org/Script-Hub/main/scripts/replace-header.js)Ôºå[echo-response.js](https://raw.githubusercontent.com/Script-Hub-Org/Script-Hub/main/scripts/echo-response.js)Ôºå[script-converter.js](https://raw.githubusercontent.com/Script-Hub-Org/Script-Hub/main/script-converter.js)  
ÊÑüË∞¢[_@mieqq_](https://github.com/mieqq) ‰Ω¨Êèê‰æõÁöÑ[replace-body.js](https://github.com/mieqq/mieqq/raw/master/replace-body.js), Êú¨È°πÁõÆ‰∏≠Â∑≤ËøõË°å‰øÆÊîπ  
ÊÑüË∞¢[_@Maasea_](https://github.com/Maasea) ‰Ω¨ÁöÑÊåáÂØº  
È°πÁõÆ logo ÊÑüË∞¢ [_@Toperlock_](https://github.com/Toperlock)  
Êèí‰ª∂ÂõæÊ†áÁî®ÁöÑ [_@Keikinn_](https://github.com/Keikinn) ‰Ω¨ÁöÑ [StickerOnScreen](https://github.com/KeiKinn/StickerOnScreen)È°πÁõÆÔºå‰ª•Âèä [_@Toperlock_](https://github.com/Toperlock) ‰Ω¨ÁöÑ [QX ÂõæÊ†áÂ∫ì](https://github.com/Toperlock/Quantumult/tree/main/icon)È°πÁõÆÔºåÊÑüË∞¢

## ÂºÄÂèë

`pnpm preview` html ÂÜÖÂÆπÁöÑÊú¨Âú∞È¢ÑËßà

## ËµûÂä©

ÊîØÊåÅÊàë‰ª¨ÁöÑÂ∑•‰Ωú

[Patreon](https://www.patreon.com/scripthuborg)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[dequelabs/axe-core]]></title>
            <link>https://github.com/dequelabs/axe-core</link>
            <guid>https://github.com/dequelabs/axe-core</guid>
            <pubDate>Thu, 03 Apr 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[Accessibility engine for automated Web UI testing]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/dequelabs/axe-core">dequelabs/axe-core</a></h1>
            <p>Accessibility engine for automated Web UI testing</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,266</p>
            <p>Forks: 801</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre># axe-core

[![License](https://img.shields.io/npm/l/axe-core.svg?color=c41)](LICENSE)
[![Version](https://img.shields.io/npm/v/axe-core.svg)](https://www.npmjs.com/package/axe-core)
[![NPM downloads](https://img.shields.io/npm/dw/axe-core.svg?color=080)![](https://img.shields.io/npm/dy/axe-core.svg?color=080&amp;label=)](https://npm-stat.com/charts.html?package=axe-core&amp;from=2017-01-01)
[![Commits](https://img.shields.io/github/commit-activity/y/dequelabs/axe-core.svg)](https://github.com/dequelabs/axe-core/commits/develop)
[![GitHub contributors](https://img.shields.io/github/contributors/dequelabs/axe-core.svg?color=080)](https://github.com/dequelabs/axe-core/graphs/contributors)
[![Join our Slack chat](https://img.shields.io/badge/slack-chat-purple.svg?logo=slack)](https://accessibility.deque.com/axe-community)
[![Package Quality](https://npm.packagequality.com/shield/axe-core.svg)](https://packagequality.com/#?package=axe-core)

Axe is an accessibility testing engine for websites and other HTML-based user interfaces. It&#039;s fast, secure, lightweight, and was built to seamlessly integrate with any existing test environment so you can automate accessibility testing alongside your regular functional testing.

[Sign up for axe news](https://hubs.ly/H0fsN0b0) to get the latest on axe features, future releases, and events.

## The Accessibility Rules

Axe-core has different types of rules, for WCAG 2.0, 2.1, 2.2 on level A, AA and AAA as well as a number of best practices that help you identify common accessibility practices like ensuring every page has an `h1` heading, and to help you avoid &quot;gotchas&quot; in ARIA like where an ARIA attribute you used will get ignored. The complete list of rules, grouped WCAG level and best practice, can be found in [doc/rule-descriptions.md](./doc/rule-descriptions.md).

With axe-core, you can find **on average 57% of WCAG issues automatically**. Additionally, axe-core will return elements as &quot;incomplete&quot; where axe-core could not be certain, and manual review is needed.

To catch bugs earlier in the development cycle we recommend using the [axe-linter vscode extension](https://marketplace.visualstudio.com/items?itemName=deque-systems.vscode-axe-linter). To improve test coverage even further we recommend the [intelligent guided tests](https://www.youtube.com/watch?v=AtsX0dPCG_4&amp;feature=youtu.be&amp;ab_channel=DequeSystems) in the [axe Extension](https://www.deque.com/axe/browser-extensions/).

## Getting started

First download the package:

```console
npm install axe-core --save-dev
```

Now include the javascript file in each of your iframes in your fixtures or test systems:

```html
&lt;script src=&quot;node_modules/axe-core/axe.min.js&quot;&gt;&lt;/script&gt;
```

Now insert calls at each point in your tests where a new piece of UI becomes visible or exposed:

```js
axe
  .run()
  .then(results =&gt; {
    if (results.violations.length) {
      throw new Error(&#039;Accessibility issues found&#039;);
    }
  })
  .catch(err =&gt; {
    console.error(&#039;Something bad happened:&#039;, err.message);
  });
```

## Philosophy

The web can only become an accessible, inclusive space if developers are empowered to take responsibility for accessibility testing and accessible coding practices.

Automated accessibility testing is a huge timesaver, it doesn&#039;t require special expertise, and it allows teams to focus expert resources on the accessibility issues that really need them. Unfortunately, most accessibility tools are meant to be run on sites and applications that have reached the end of the development process and often don&#039;t give clear or consistent results, causing frustration and delays just when you thought your product was ready to ship.

Axe was built to reflect how web development actually works. It works with all modern browsers, tools, and testing environments a dev team might use. With axe, accessibility testing can be performed as part of your unit testing, integration testing, browser testing, and any other functional testing your team already performs on a day-to-day basis. Building accessibility testing into the early development process saves time, resources, and all kinds of frustration.

## About axe - our Manifesto

- Axe is open source.
- It returns zero false positives (bugs notwithstanding).
- It&#039;s designed to work on all modern browsers and with whatever tools, frameworks, libraries and environments you use today.
- It&#039;s actively supported by [Deque Systems](https://www.deque.com), a major accessibility vendor.
- It integrates with your existing functional/acceptance automated tests.
- It automatically determines which rules to run based on the evaluation context.
- Axe supports in-memory fixtures, static fixtures, integration tests, and iframes of infinite depth.
- Axe is highly configurable.

## Supported Browsers

The [axe-core API](doc/API.md) fully supports the following browsers:

- Microsoft Edge v40 and above
- Google Chrome v42 and above
- Mozilla Firefox v38 and above
- Apple Safari v7 and above
- Internet Explorer v11 (DEPRECATED)

Support means that we will fix bugs and attempt to test each browser regularly. Only Chrome and Firefox are currently tested on every pull request.

There is limited support for JSDOM. We will attempt to make all rules compatible with JSDOM but where this is not possible, we recommend turning those rules off. Currently the `color-contrast` rule is known not to work with JSDOM.

We can only support environments where features are either natively supported or polyfilled correctly. We do not support the deprecated v0 Shadow DOM implementation.

## Contents of the API Package

The [axe-core API](doc/API.md) package consists of:

- `axe.js` - the JavaScript file that should be included in your web site under test (API)
- `axe.min.js` - a minified version of the above file

## Localization

Axe can be built using your local language. To do so, a localization file must be added to the `./locales` directory. This file must be named in the following manner: `&lt;langcode&gt;.json`. To build axe using this locale, instead of the default, run axe with the `--lang` flag, like so:

`grunt build --lang=nl`

or equivalently:

`npm run build -- --lang=nl`

This will create a new build for axe, called `axe.&lt;lang&gt;.js` and `axe.&lt;lang&gt;.min.js`. If you want to build all localized versions, simply pass in `--all-lang` instead. If you want to build multiple localized versions (but not all of them), you can pass in a comma-separated list of languages to the `--lang` flag, like `--lang=nl,ja`.

To create a new translation for axe, start by running `grunt translate --lang=&lt;langcode&gt;`. This will create a json file in the `./locales` directory, with the default English text in it for you to translate. Alternatively, you could copy `./locales/_template.json`. We welcome any localization for axe-core. For details on how to contribute, see the Contributing section below. For details on the message syntax, see [Check Message Template](/doc/check-message-template.md).

To update an existing translation file, re-run `grunt translate --lang=&lt;langcode&gt;`. This will add new messages used in English and remove messages which were not used in English.

Additionally, locale can be applied at runtime by passing a `locale` object to `axe.configure()`. The locale object must be of the same shape as existing locales in the `./locales` directory. For example:

```js
axe.configure({
  locale: {
    lang: &#039;de&#039;,
    rules: {
      accesskeys: {
        help: &#039;Der Wert des accesskey-Attributes muss einzigartig sein.&#039;
      }
      // ...
    },
    checks: {
      abstractrole: {
        fail: &#039;Abstrakte ARIA-Rollen d√ºrfen nicht direkt verwendet werden.&#039;
      },
      &#039;aria-errormessage&#039;: {
        // Note: doT (https://github.com/olado/dot) templates are supported here.
        fail: &#039;Der Wert der aria-errormessage ${data.values}` muss eine Technik verwenden, um die Message anzuk√ºndigen (z. B., aria-live, aria-describedby, role=alert, etc.).&#039;
      }
      // ...
    }
  }
});
```

### Supported Locales

Axe-core supports the following locales. Do note that since locales are contributed by our community, they are not guaranteed to include all translations needed in a release.

- Basque
- Danish
- Dutch
- French
- German
- Hebrew
- Japanese
- Korean
- Norwegian (Bokm√•l)
- Polish
- Portuguese (Brazilian)
- Spanish
- Greek
- Italian
- Simplified Chinese
- Traditional Chinese

## Updates &amp; Security

Axe-core has a new minor release every 3 to 5 months, which usually introduces new rules and features. We recommend scheduling time to upgrade to these versions. Security updates will be made available for minor version lines up to **18 months old**.

- See [release and support](doc/release-and-support.md) for details on the frequency of releases, long-term support and recommendations on upgrading axe-core.
- See [backward compatibility](doc/backwards-compatibility-doc.md) for details on the types of changes different releases may introduce.

## Deque Trademarks Policy

DEQUE, DEQUELABS, AXE¬Æ, and AXE-CORE¬Æ are trademarks of Deque Systems, Inc. Use of the Deque trademarks must be in accordance with [Deque&#039;s trademark policy](https://www.deque.com/legal/trademarks/).

## Supported ARIA Roles and Attributes.

Refer [axe-core ARIA support](./doc/aria-supported.md) for a complete list of ARIA supported roles and attributes by axe.

## Contributing

Read the [Proposing Axe-core Rules guide](./doc/rule-proposal.md)

Read the [documentation on the architecture](./doc/developer-guide.md)

Read the [documentation on contributing](CONTRIBUTING.md)

## Projects using axe-core

[List of projects using axe-core](doc/projects.md)

## Acknowledgements

Thanks to Marat Dulin for his [css-selector-parser](https://www.npmjs.com/package/css-selector-parser) implementation which is included for shadow DOM support. Another thank you to the [Slick Parser](https://github.com/mootools/slick/blob/master/Source/Slick.Parser.js) implementers for their contribution, we have used some of their algorithms in our shadow DOM support code. Thanks to Lea Verou and Chris Lilley for their [colorjs.io](https://colorjs.io/) library which we have used for converting between color formats.

## Licenses

Axe-core is distributed under the [Mozilla Public License, version 2.0](LICENSE). It comes bundled with several dependencies which are distributed under their own terms. (See [LICENSE-3RD-PARTY.txt](LICENSE-3RD-PARTY.txt))
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[meteor/meteor]]></title>
            <link>https://github.com/meteor/meteor</link>
            <guid>https://github.com/meteor/meteor</guid>
            <pubDate>Thu, 03 Apr 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[Meteor, the JavaScript App Platform]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/meteor/meteor">meteor/meteor</a></h1>
            <p>Meteor, the JavaScript App Platform</p>
            <p>Language: JavaScript</p>
            <p>Stars: 44,615</p>
            <p>Forks: 5,208</p>
            <p>Stars today: 0 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.meteor.com&quot; target=&quot;_blank&quot;&gt;
    &lt;img align=&quot;center&quot; width=&quot;225&quot; src=&quot;https://user-images.githubusercontent.com/841294/26841702-0902bbee-4af3-11e7-9805-0618da66a246.png&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;br&gt;

&lt;div align=&quot;center&quot;&gt;

[![Travis CI Status](https://api.travis-ci.com/meteor/meteor.svg?branch=devel)](https://app.travis-ci.com/github/meteor/meteor)
[![CircleCI Status](https://circleci.com/gh/meteor/meteor.svg?style=svg)](https://app.circleci.com/pipelines/github/meteor/meteor?branch=devel)
[![built with Meteor](https://img.shields.io/badge/Meteor-3.0.1-green?logo=meteor&amp;logoColor=white)](https://meteor.com)


&lt;/div&gt;

&lt;hr&gt;

Meteor is an **ultra-simple** environment for building **modern** web applications.

&lt;hr&gt;

- [Official Website](https://www.meteor.com)
- [Installation](https://www.meteor.com/developers/install)
- [Documentation](https://docs.meteor.com/#/full/)

&lt;hr&gt;

### üìö **Create your applications using modern JavaScript**

Benefit from the latest technology updates to rapidly prototype and develop your applications.

&lt;hr&gt;

### ‚ú® **Integrate technologies you already use**

Use popular frameworks and tools right out-of-the-box. Focus on building features instead of configuring disparate components yourself.

&lt;hr&gt;

### üíª **Build apps for any device**

Use the same code whether you‚Äôre developing for web, iOS, Android, or desktop for a seamless update experience for your users.

&lt;hr&gt;

# üî• Getting Started

How about trying a tutorial to get started with your favorite technology?

| [&lt;img align=&quot;left&quot; width=&quot;25&quot; src=&quot;https://upload.wikimedia.org/wikipedia/commons/a/a7/React-icon.svg&quot;&gt; React](https://react-tutorial.meteor.com/) |
| - |
| [&lt;img align=&quot;left&quot; width=&quot;25&quot; src=&quot;https://progsoft.net/images/blaze-css-icon-3e80acb3996047afd09f1150f53fcd78e98c1e1b.png&quot;&gt; Blaze](https://blaze-tutorial.meteor.com/) |
| [&lt;img align=&quot;left&quot; width=&quot;25&quot; src=&quot;https://vuejs.org/images/logo.png&quot;&gt; Vue](https://vue-tutorial.meteor.com/) |
| [&lt;img align=&quot;left&quot; width=&quot;25&quot; src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/Svelte_Logo.svg/1200px-Svelte_Logo.svg.png&quot;&gt; Svelte](https://svelte-tutorial.meteor.com/) |

Next, read the [documentation](https://docs.meteor.com/) and get some [examples](https://github.com/meteor/examples).

# üöÄ Quick Start

On your platform, use this line:

```shell
&gt; npm install -g meteor
```
 
üöÄ To create a project:

```shell
&gt; meteor create my-app
```

‚òÑÔ∏è Run it:

```shell
cd my-app
meteor
```

# üß± Developer Resources

**Building an application with Meteor?**

* Deploy on [Meteor Cloud](https://www.meteor.com/cloud)
* Discuss on [Forums](https://forums.meteor.com/)
* Join the Meteor community Slack by clicking this [invite link](https://join.slack.com/t/meteor-community/shared_invite/enQtODA0NTU2Nzk5MTA3LWY5NGMxMWRjZDgzYWMyMTEyYTQ3MTcwZmU2YjM5MTY3MjJkZjQ0NWRjOGZlYmIxZjFlYTA5Mjg4OTk3ODRiOTc).
* Announcement list. Subscribe in the [footer](https://www.meteor.com/).


Interested in helping or contributing to Meteor?  These resources will help:

* [Core development guide](DEVELOPMENT.md)
* [Contribution guidelines](CONTRIBUTING.md)
* [Feature requests](https://github.com/meteor/meteor/discussions/)
* [Issue tracker](https://github.com/meteor/meteor/issues)

To uninstall Meteor: 
  - If installed via npm, run:
      ```shell
      meteor-installer uninstall
      ```
  - If installed via curl, run:
    ```shell
    rm -rf ~/.meteor 
    sudo rm /usr/local/bin/meteor
    ```
To find more information about installation, [read here](https://docs.meteor.com/install.html#uninstall).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[sveltejs/svelte]]></title>
            <link>https://github.com/sveltejs/svelte</link>
            <guid>https://github.com/sveltejs/svelte</guid>
            <pubDate>Thu, 03 Apr 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[web development for the rest of us]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/sveltejs/svelte">sveltejs/svelte</a></h1>
            <p>web development for the rest of us</p>
            <p>Language: JavaScript</p>
            <p>Stars: 82,069</p>
            <p>Forks: 4,449</p>
            <p>Stars today: 23 stars today</p>
            <h2>README</h2><pre>&lt;a href=&quot;https://svelte.dev&quot;&gt;
	&lt;picture&gt;
		&lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;assets/banner_dark.png&quot;&gt;
		&lt;img src=&quot;assets/banner.png&quot; alt=&quot;Svelte - web development for the rest of us&quot; /&gt;
	&lt;/picture&gt;
&lt;/a&gt;

[![License](https://img.shields.io/npm/l/svelte.svg)](LICENSE.md) [![Chat](https://img.shields.io/discord/457912077277855764?label=chat&amp;logo=discord)](https://svelte.dev/chat)

## What is Svelte?

Svelte is a new way to build web applications. It&#039;s a compiler that takes your declarative components and converts them into efficient JavaScript that surgically updates the DOM.

Learn more at the [Svelte website](https://svelte.dev), or stop by the [Discord chatroom](https://svelte.dev/chat).

## Supporting Svelte

Svelte is an MIT-licensed open source project with its ongoing development made possible entirely by fantastic volunteers. If you&#039;d like to support their efforts, please consider:

- [Becoming a backer on Open Collective](https://opencollective.com/svelte).

Funds donated via Open Collective will be used for compensating expenses related to Svelte&#039;s development such as hosting costs. If sufficient donations are received, funds may also be used to support Svelte&#039;s development more directly.

## Roadmap

You may view [our roadmap](https://svelte.dev/roadmap) if you&#039;d like to see what we&#039;re currently working on.

## Contributing

Please see the [Contributing Guide](CONTRIBUTING.md) and the [`svelte`](packages/svelte) package for information on contributing to Svelte.

## Is svelte.dev down?

Probably not, but it&#039;s possible. If you can&#039;t seem to access any `.dev` sites, check out [this SuperUser question and answer](https://superuser.com/q/1413402).

## License

[MIT](LICENSE.md)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[jquery/jquery]]></title>
            <link>https://github.com/jquery/jquery</link>
            <guid>https://github.com/jquery/jquery</guid>
            <pubDate>Thu, 03 Apr 2025 00:04:47 GMT</pubDate>
            <description><![CDATA[jQuery JavaScript Library]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/jquery/jquery">jquery/jquery</a></h1>
            <p>jQuery JavaScript Library</p>
            <p>Language: JavaScript</p>
            <p>Stars: 59,465</p>
            <p>Forks: 20,578</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre># [jQuery](https://jquery.com/) ‚Äî New Wave JavaScript

Meetings are currently held on the [matrix.org platform](https://matrix.to/#/#jquery_meeting:gitter.im).

Meeting minutes can be found at [meetings.jquery.org](https://meetings.jquery.org/category/core/).

The latest version of jQuery is available at [https://jquery.com/download/](https://jquery.com/download/).

## Version support

| Version | Branch     | Status   |
| ------- | ---------- | -------- |
| 4.x     | main       | Beta     |
| 3.x     | 3.x-stable | Active   |
| 2.x     | 2.x-stable | Inactive |
| 1.x     | 1.x-stable | Inactive |

Once 4.0.0 final is released, the 3.x branch will continue to receive updates for a limited time. The 2.x and 1.x branches are no longer supported.

Commercial support for inactive versions is available from [HeroDevs](https://herodevs.com/nes).

Learn more about our [version support](https://jquery.com/support/).

## Contribution Guides

In the spirit of open source software development, jQuery always encourages community code contribution. To help you get started and before you jump into writing code, be sure to read these important contribution guidelines thoroughly:

1. [Getting Involved](https://contribute.jquery.org/)
2. [Core Style Guide](https://contribute.jquery.org/style-guide/js/)
3. [Writing Code for jQuery Projects](https://contribute.jquery.org/code/)

### References to issues/PRs

GitHub issues/PRs are usually referenced via `gh-NUMBER`, where `NUMBER` is the numerical ID of the issue/PR. You can find such an issue/PR under `https://github.com/jquery/jquery/issues/NUMBER`.

jQuery has used a different bug tracker - based on Trac - in the past, available under [bugs.jquery.com](https://bugs.jquery.com/). It is being kept in read only mode so that referring to past discussions is possible. When jQuery source references one of those issues, it uses the pattern `trac-NUMBER`, where `NUMBER` is the numerical ID of the issue. You can find such an issue under `https://bugs.jquery.com/ticket/NUMBER`.

## Environments in which to use jQuery

- [Browser support](https://jquery.com/browser-support/)
- jQuery also supports Node, browser extensions, and other non-browser environments.

## What you need to build your own jQuery

To build jQuery, you need to have the latest Node.js/npm and git 1.7 or later. Earlier versions might work, but are not supported.

For Windows, you have to download and install [git](https://git-scm.com/downloads) and [Node.js](https://nodejs.org/en/download/).

macOS users should install [Homebrew](https://brew.sh/). Once Homebrew is installed, run `brew install git` to install git,
and `brew install node` to install Node.js.

Linux/BSD users should use their appropriate package managers to install git and Node.js, or build from source
if you swing that way. Easy-peasy.

## How to build your own jQuery

First, [clone the jQuery git repo](https://help.github.com/en/github/creating-cloning-and-archiving-repositories/cloning-a-repository).

Then, enter the jquery directory, install dependencies, and run the build script:

```bash
cd jquery
npm install
npm run build
```

The built version of jQuery will be placed in the `dist/` directory, along with a minified copy and associated map file.

## Build all jQuery release files

To build all variants of jQuery, run the following command:

```bash
npm run build:all
```

This will create all of the variants that jQuery includes in a release, including `jquery.js`, `jquery.slim.js`, `jquery.module.js`, and `jquery.slim.module.js` along their associated minified files and sourcemaps.

`jquery.module.js` and `jquery.slim.module.js` are [ECMAScript modules](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules) that export `jQuery` and `$` as named exports are placed in the `dist-module/` directory rather than the `dist/` directory.

## Building a Custom jQuery

The build script can be used to create a custom version of jQuery that includes only the modules you need.

Any module may be excluded except for `core`. When excluding `selector`, it is not removed but replaced with a small wrapper around native `querySelectorAll` (see below for more information).

### Build Script Help

To see the full list of available options for the build script, run the following:

```bash
npm run build -- --help
```

### Modules

To exclude a module, pass its path relative to the `src` folder (without the `.js` extension) to the `--exclude` option. When using the `--include` option, the default includes are dropped and a build is created with only those modules.

Some example modules that can be excluded or included are:

- **ajax**: All AJAX functionality: `$.ajax()`, `$.get()`, `$.post()`, `$.ajaxSetup()`, `.load()`, transports, and ajax event shorthands such as `.ajaxStart()`.
- **ajax/xhr**: The XMLHTTPRequest AJAX transport only.
- **ajax/script**: The `&lt;script&gt;` AJAX transport only; used to retrieve scripts.
- **ajax/jsonp**: The JSONP AJAX transport only; depends on the ajax/script transport.
- **css**: The `.css()` method. Also removes **all** modules depending on css (including **effects**, **dimensions**, and **offset**).
- **css/showHide**: Non-animated `.show()`, `.hide()` and `.toggle()`; can be excluded if you use classes or explicit `.css()` calls to set the `display` property. Also removes the **effects** module.
- **deprecated**: Methods documented as deprecated but not yet removed.
- **dimensions**: The `.width()` and `.height()` methods, including `inner-` and `outer-` variations.
- **effects**: The `.animate()` method and its shorthands such as `.slideUp()` or `.hide(&quot;slow&quot;)`.
- **event**: The `.on()` and `.off()` methods and all event functionality.
- **event/trigger**: The `.trigger()` and `.triggerHandler()` methods.
- **offset**: The `.offset()`, `.position()`, `.offsetParent()`, `.scrollLeft()`, and `.scrollTop()` methods.
- **wrap**: The `.wrap()`, `.wrapAll()`, `.wrapInner()`, and `.unwrap()` methods.
- **core/ready**: Exclude the ready module if you place your scripts at the end of the body. Any ready callbacks bound with `jQuery()` will simply be called immediately. However, `jQuery(document).ready()` will not be a function and `.on(&quot;ready&quot;, ...)` or similar will not be triggered.
- **deferred**: Exclude jQuery.Deferred. This also excludes all modules that rely on Deferred, including **ajax**, **effects**, and **queue**, but replaces **core/ready** with **core/ready-no-deferred**.
- **exports/global**: Exclude the attachment of global jQuery variables ($ and jQuery) to the window.
- **exports/amd**: Exclude the AMD definition.

- **selector**: The full jQuery selector engine. When this module is excluded, it is replaced with a rudimentary selector engine based on the browser&#039;s `querySelectorAll` method that does not support jQuery selector extensions or enhanced semantics. See the [selector-native.js](https://github.com/jquery/jquery/blob/main/src/selector-native.js) file for details.

*Note*: Excluding the full `selector` module will also exclude all jQuery selector extensions (such as `effects/animatedSelector` and `css/hiddenVisibleSelectors`).

##### AMD name

You can set the module name for jQuery&#039;s AMD definition. By default, it is set to &quot;jquery&quot;, which plays nicely with plugins and third-party libraries, but there may be cases where you&#039;d like to change this. Pass it to the `--amd` parameter:

```bash
npm run build -- --amd=&quot;custom-name&quot;
```

Or, to define anonymously, leave the name blank.

```bash
npm run build -- --amd
```

##### File name and directory

The default name for the built jQuery file is `jquery.js`; it is placed under the `dist/` directory. It&#039;s possible to change the file name using `--filename` and the directory using `--dir`. `--dir` is relative to the project root.

```bash
npm run build -- --slim --filename=&quot;jquery.slim.js&quot; --dir=&quot;/tmp&quot;
```

This would create a slim version of jQuery and place it under `tmp/jquery.slim.js`.

##### ECMAScript Module (ESM) mode

By default, jQuery generates a regular script JavaScript file. You can also generate an ECMAScript module exporting `jQuery` as the default export using the `--esm` parameter:

```bash
npm run build -- --filename=jquery.module.js --esm
```

##### Factory mode

By default, jQuery depends on a global `window`. For environments that don&#039;t have one, you can generate a factory build that exposes a function accepting `window` as a parameter that you can provide externally (see [`README` of the published package](build/fixtures/README.md) for usage instructions). You can generate such a factory using the `--factory` parameter:

```bash
npm run build -- --filename=jquery.factory.js --factory
```

This option can be mixed with others like `--esm` or `--slim`:

```bash
npm run build -- --filename=jquery.factory.slim.module.js --factory --esm --slim --dir=&quot;/dist-module&quot;
```

#### Custom Build Examples

Create a custom build using `npm run build`, listing the modules to be excluded. Excluding a top-level module also excludes its corresponding directory of modules.

Exclude all **ajax** functionality:

```bash
npm run build -- --exclude=ajax
```

Excluding **css** removes modules depending on CSS: **effects**, **offset**, **dimensions**.

```bash
npm run build -- --exclude=css
```

Exclude a bunch of modules (`-e` is an alias for `--exclude`):

```bash
npm run build -- -e ajax/jsonp -e css -e deprecated -e dimensions -e effects -e offset -e wrap
```

There is a special alias to generate a build with the same configuration as the official jQuery Slim build:

```bash
npm run build -- --filename=jquery.slim.js --slim
```

Or, to create the slim build as an esm module:

```bash
npm run build -- --filename=jquery.slim.module.js --slim --esm
```

*Non-official custom builds are not regularly tested. Use them at your own risk.*

## Running the Unit Tests

Make sure you have the necessary dependencies:

```bash
npm install
```

Start `npm start` to auto-build jQuery as you work:

```bash
npm start
```

Run the unit tests with a local server that supports PHP. Ensure that you run the site from the root directory, not the &quot;test&quot; directory. No database is required. Pre-configured php local servers are available for Windows and Mac. Here are some options:

- Windows: [WAMP download](https://www.wampserver.com/en/)
- Mac: [MAMP download](https://www.mamp.info/en/downloads/)
- Linux: [Setting up LAMP](https://www.linux.com/training-tutorials/easy-lamp-server-installation/)
- [Mongoose (most platforms)](https://code.google.com/p/mongoose/)

## Essential Git

As the source code is handled by the Git version control system, it&#039;s useful to know some features used.

### Cleaning

If you want to purge your working directory back to the status of upstream, the following commands can be used (remember everything you&#039;ve worked on is gone after these):

```bash
git reset --hard upstream/main
git clean -fdx
```

### Rebasing

For feature/topic branches, you should always use the `--rebase` flag to `git pull`, or if you are usually handling many temporary &quot;to be in a github pull request&quot; branches, run the following to automate this:

```bash
git config branch.autosetuprebase local
```

(see `man git-config` for more information)

### Handling merge conflicts

If you&#039;re getting merge conflicts when merging, instead of editing the conflicted files manually, you can use the feature
`git mergetool`. Even though the default tool `xxdiff` looks awful/old, it&#039;s rather useful.

The following are some commands that can be used there:

- `Ctrl + Alt + M` - automerge as much as possible
- `b` - jump to next merge conflict
- `s` - change the order of the conflicted lines
- `u` - undo a merge
- `left mouse button` - mark a block to be the winner
- `middle mouse button` - mark a line to be the winner
- `Ctrl + S` - save
- `Ctrl + Q` - quit

## [QUnit](https://api.qunitjs.com) Reference

### Test methods

```js
expect( numAssertions );
stop();
start();
```

*Note*: QUnit&#039;s eventual addition of an argument to stop/start is ignored in this test suite so that start and stop can be passed as callbacks without worrying about their parameters.

### Test assertions

```js
ok( value, [message] );
equal( actual, expected, [message] );
notEqual( actual, expected, [message] );
deepEqual( actual, expected, [message] );
notDeepEqual( actual, expected, [message] );
strictEqual( actual, expected, [message] );
notStrictEqual( actual, expected, [message] );
throws( block, [expected], [message] );
```

## Test Suite Convenience Methods Reference

See [test/data/testinit.js](https://github.com/jquery/jquery/blob/main/test/data/testinit.js).

### Returns an array of elements with the given IDs

```js
q( ... );
```

Example:

```js
q( &quot;main&quot;, &quot;foo&quot;, &quot;bar&quot; );

=&gt; [ div#main, span#foo, input#bar ]
```

### Asserts that a selection matches the given IDs

```js
t( testName, selector, [ &quot;array&quot;, &quot;of&quot;, &quot;ids&quot; ] );
```

Example:

```js
t(&quot;Check for something&quot;, &quot;//[a]&quot;, [&quot;foo&quot;, &quot;bar&quot;]);
```

### Fires a native DOM event without going through jQuery

```js
fireNative( node, eventType );
```

Example:

```js
fireNative( jQuery( &quot;#elem&quot; )[ 0 ], &quot;click&quot; );
```

### Add random number to url to stop caching

```js
url( &quot;some/url&quot; );
```

Example:

```js
url( &quot;index.html&quot; );

=&gt; &quot;data/index.html?10538358428943&quot;


url( &quot;mock.php?foo=bar&quot; );

=&gt; &quot;data/mock.php?foo=bar&amp;10538358345554&quot;
```

### Run tests in an iframe

Some tests may require a document other than the standard test fixture, and
these can be run in a separate iframe. The actual test code and assertions
remain in jQuery&#039;s main test files; only the minimal test fixture markup
and setup code should be placed in the iframe file.

```js
testIframe( testName, fileName,
  function testCallback(
      assert, jQuery, window, document,
	  [ additional args ] ) {
	...
  } );
```

This loads a page, constructing a url with fileName `&quot;./data/&quot; + fileName`.
The iframed page determines when the callback occurs in the test by
including the &quot;/test/data/iframeTest.js&quot; script and calling
`startIframeTest( [ additional args ] )` when appropriate. Often this
will be after either document ready or `window.onload` fires.

The `testCallback` receives the QUnit `assert` object created by `testIframe`
for this test, followed by the global `jQuery`, `window`, and `document` from
the iframe. If the iframe code passes any arguments to `startIframeTest`,
they follow the `document` argument.

## Questions?

If you have any questions, please feel free to ask on the
[Developing jQuery Core forum](https://forum.jquery.com/developing-jquery-core) or in #jquery on [libera](https://web.libera.chat/).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[IsmaelMartinez/teams-for-linux]]></title>
            <link>https://github.com/IsmaelMartinez/teams-for-linux</link>
            <guid>https://github.com/IsmaelMartinez/teams-for-linux</guid>
            <pubDate>Thu, 03 Apr 2025 00:04:46 GMT</pubDate>
            <description><![CDATA[Unofficial Microsoft Teams for Linux client]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/IsmaelMartinez/teams-for-linux">IsmaelMartinez/teams-for-linux</a></h1>
            <p>Unofficial Microsoft Teams for Linux client</p>
            <p>Language: JavaScript</p>
            <p>Stars: 3,266</p>
            <p>Forks: 254</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre># teams-for-linux

This is an unofficial Microsoft Teams client. The official one from Microsoft is
retired and got replaced with PWA. Read the blog
[here](https://techcommunity.microsoft.com/t5/microsoft-teams-blog/microsoft-teams-progressive-web-app-now-available-on-linux/ba-p/3669846).

Please report bugs and enhancements in the issues section. We will attend them
as soon as possible. Please review the open/close issues before raising a new
one and avoid duplicates. We encourage everyone to join our chat room in
[matrix](https://matrix.to/#/#teams-for-linux_community:gitter.im) and ask your
questions. That&#039;s probably the quickest way to find solutions. Alternatively
open a github discussion.

As this is a wrapper around the web version of teams, we would not be able to
add certain features. It&#039;s not because we don&#039;t want to, but we&#039;re fully
dependent on Microsoft in certain cases. We may close the issue stating the same
reason.

PRs and suggestions are welcomed. We will continue to support the community.

---

[![Gitter chat](https://badges.gitter.im/ismaelmartinez/teams-for-linux.png)](https://gitter.im/teams-for-linux/community &quot;Gitter chat&quot;)
![](https://img.shields.io/github/release/IsmaelMartinez/teams-for-linux.svg?style=flat)
![](https://img.shields.io/github/downloads/IsmaelMartinez/teams-for-linux/total.svg?style=flat)
![Build &amp; Release](https://github.com/IsmaelMartinez/teams-for-linux/workflows/Build%20&amp;%20Release/badge.svg)
![](https://img.shields.io/librariesio/github/IsmaelMartinez/teams-for-linux)
[![Known Vulnerabilities](https://snyk.io//test/github/IsmaelMartinez/teams-for-linux/badge.svg?targetFile=package.json)](https://snyk.io//test/github/IsmaelMartinez/teams-for-linux?targetFile=package.json)
[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=IsmaelMartinez_teams-for-linux&amp;metric=alert_status)](https://sonarcloud.io/summary/new_code?id=IsmaelMartinez_teams-for-linux)

Unofficial Microsoft Teams client for Linux using
[`Electron`](https://electronjs.org/). It uses the Web App and wraps it as a
standalone application using Electron.

## Downloads

Binaries available under
[releases](https://github.com/IsmaelMartinez/teams-for-linux/releases) for
`AppImage`, `rpm`, `deb`, `snap`, and `tar.gz`.

In the case of `AppImage`, we recommend using
[`AppImageLauncher`](https://github.com/TheAssassin/AppImageLauncher) for the
best desktop experience.

We have a dedicated deb and rpm repo at https://teamsforlinux.de hosted with
:heart: by [Nils B√ºchner](https://github.com/nbuechner). Please follow the
installation instructions below.

### Debian/Ubuntu and other derivatives

```bash
sudo mkdir -p /etc/apt/keyrings

sudo wget -qO /etc/apt/keyrings/teams-for-linux.asc https://repo.teamsforlinux.de/teams-for-linux.asc

sh -c &#039;echo &quot;Types: deb\nURIs: https://repo.teamsforlinux.de/debian/\nSuites: stable\nComponents: main\nSigned-By: /etc/apt/keyrings/teams-for-linux.asc&quot; | sudo tee /etc/apt/sources.list.d/teams-for-linux-packages.sources&#039;

sudo apt update

sudo apt install teams-for-linux
```

### RHEL/Fedora and other derivatives

```bash
curl -1sLf -o /tmp/teams-for-linux.asc https://repo.teamsforlinux.de/teams-for-linux.asc; rpm --import /tmp/teams-for-linux.asc; rm -f /tmp/teams-for-linux.asc

curl -1sLf -o /etc/yum.repos.d/teams-for-linux.repo https://repo.teamsforlinux.de/rpm/teams-for-linux.repo

yum update

yum install teams-for-linux
```

Also available in:

[![AUR: teams-for-linux](https://img.shields.io/badge/AUR-teams--for--linux-blue.svg)](https://aur.archlinux.org/packages/teams-for-linux)

[![Pacstall: teams-for-linux-deb](https://img.shields.io/badge/Pacstall-teams--for--linux--deb-00958C)](https://github.com/pacstall/pacstall-programs/tree/master/packages/teams-for-linux-deb)

[![Get it from the Snap Store](https://snapcraft.io/static/images/badges/en/snap-store-black.svg)](https://snapcraft.io/teams-for-linux)

&lt;a href=&#039;https://flathub.org/apps/details/com.github.IsmaelMartinez.teams_for_linux&#039;&gt;&lt;img width=&#039;170&#039; alt=&#039;Download on Flathub&#039; src=&#039;https://flathub.org/assets/badges/flathub-badge-en.png&#039;/&gt;&lt;/a&gt;

## Configuration and starting arguments

Please check in the config [`README.md`](app/config/README.md) of the config
folder for startup or configuration options, to enable or disable certain
features or behaviors.

## Running teams-for-linux in a firejail

A simple shell script that runs teams-for-linux in a firejail is hosted at
https://codeberg.org/lars_uffmann/teams-for-linux-jailed. The script can be used
both to start t4l, as well as to join meetings with an active t4l instance.

## Contributing

Please refer to the [`CONTRIBUTING.md`](CONTRIBUTING.md) file for more
information about how to run this application from source, and/or how to
contribute.

## Known issues

Known issues and workarounds can be found in the
[`KNOWN_ISSUES.md`](KNOWN_ISSUES.md) file.

## History

Read about the history of this project in the [`HISTORY.md`](HISTORY.md) file.

## License

Some icons are from
[Icon Duck](https://iconduck.com/sets/hugeicons-essential-free-icons) under the
`CC BY 4.0` license.

License: [`GPLv3`](LICENSE.md)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[advplyr/audiobookshelf]]></title>
            <link>https://github.com/advplyr/audiobookshelf</link>
            <guid>https://github.com/advplyr/audiobookshelf</guid>
            <pubDate>Thu, 03 Apr 2025 00:04:45 GMT</pubDate>
            <description><![CDATA[Self-hosted audiobook and podcast server]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/advplyr/audiobookshelf">advplyr/audiobookshelf</a></h1>
            <p>Self-hosted audiobook and podcast server</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,252</p>
            <p>Forks: 558</p>
            <p>Stars today: 24 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[microsoft/monaco-editor]]></title>
            <link>https://github.com/microsoft/monaco-editor</link>
            <guid>https://github.com/microsoft/monaco-editor</guid>
            <pubDate>Thu, 03 Apr 2025 00:04:44 GMT</pubDate>
            <description><![CDATA[A browser based code editor]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/microsoft/monaco-editor">microsoft/monaco-editor</a></h1>
            <p>A browser based code editor</p>
            <p>Language: JavaScript</p>
            <p>Stars: 41,962</p>
            <p>Forks: 3,699</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre># Monaco Editor

[![Versions](https://img.shields.io/npm/v/monaco-editor)](https://www.npmjs.com/package/monaco-editor)
[![Versions](https://img.shields.io/npm/v/monaco-editor/next)](https://www.npmjs.com/package/monaco-editor)
[![Feature Requests](https://img.shields.io/github/issues/microsoft/monaco-editor/feature-request.svg)](https://github.com/microsoft/monaco-editor/issues?q=is%3Aopen+is%3Aissue+label%3Afeature-request+sort%3Areactions-%2B1-desc)
[![Bugs](https://img.shields.io/github/issues/microsoft/monaco-editor/bug.svg)](https://github.com/microsoft/monaco-editor/issues?utf8=‚úì&amp;q=is%3Aissue+is%3Aopen+label%3Abug)

The Monaco Editor is the fully featured code editor from [VS Code](https://github.com/microsoft/vscode). Check out the [VS Code docs](https://code.visualstudio.com/docs/editor/editingevolved) to see some of the supported features.

![image](https://user-images.githubusercontent.com/5047891/94183711-290c0780-fea3-11ea-90e3-c88ff9d21bd6.png)

## Try it out

Try out the editor and see various examples [in our interactive playground](https://microsoft.github.io/monaco-editor/playground.html).

The playground is the best way to learn about how to use the editor, which features is supports, to try out different versions and to create minimal reproducible examples for bug reports.

## Installing

```
&gt; npm install monaco-editor
```

You will get:

- inside `/esm`: ESM version of the editor (compatible with e.g. webpack)
- inside `/dev`: AMD bundled, not minified
- inside `/min`: AMD bundled, and minified
- inside `/min-maps`: source maps for `min`
- `monaco.d.ts`: this specifies the API of the editor (this is what is actually versioned, everything else is considered private and might break with any release).

It is recommended to develop against the `dev` version, and in production to use the `min` version.

## Concepts

Monaco editor is best known for being the text editor that powers VS Code. However, it&#039;s a bit more nuanced. Some basic understanding about the underlying concepts is needed to use Monaco editor effectively.

### Models

Models are at the heart of Monaco editor. It&#039;s what you interact with when managing content. A model represents a file that has been opened. This could represent a file that exists on a file system, but it doesn&#039;t have to. For example, the model holds the text content, determines the language of the content, and tracks the edit history of the content.

### URIs

Each model is identified by a URI. This is why it&#039;s not possible for two models to have the same URI. Ideally when you represent content in Monaco editor, you should think of a virtual file system that matches the files your users are editing. For example, you could use `file:///` as a base path. If a model is created without a URI, its URI will be `inmemory://model/1`. The number increases as more models are created.

### Editors

An editor is a user facing view of the model. This is what gets attached to the DOM and what your users see visually. Typical editor operations are displaying a model, managing the view state, or executing actions or commands.

### Providers

Providers provide smart editor features. For example, this includes completion and hover information. It is not the same as, but often maps to [language server protocol](https://microsoft.github.io/language-server-protocol) features.

Providers work on models. Some smart features depends on the file URI. For example, for TypeScript to resolve imports, or for JSON IntelliSense to determine which JSON schema to apply to which model. So it&#039;s important to choose proper model URIs.

### Disposables

Many Monaco related objects often implement the `.dispose()` method. This method is intended to perform cleanups when a resource is no longer needed. For example, calling `model.dispose()` will unregister it, freeing up the URI for a new model. Editors should be disposed to free up resources and remove their model listeners.

## Documentation

- Learn how to integrate the editor with these [complete samples](./samples/).
  - [Integrate the AMD version](./docs/integrate-amd.md).
  - [Integrate the ESM version](./docs/integrate-esm.md)
- Learn how to use the editor API and try out your own customizations in the [playground](https://microsoft.github.io/monaco-editor/playground.html).
- Explore the [API docs](https://microsoft.github.io/monaco-editor/docs.html) or read them straight from [`monaco.d.ts`](https://github.com/microsoft/monaco-editor/blob/gh-pages/node_modules/monaco-editor/monaco.d.ts).
- Read [this guide](https://github.com/microsoft/monaco-editor/wiki/Accessibility-Guide-for-Integrators) to ensure the editor is accessible to all your users!
- Create a Monarch tokenizer for a new programming language [in the Monarch playground](https://microsoft.github.io/monaco-editor/monarch.html).
- Ask questions on [StackOverflow](https://stackoverflow.com/questions/tagged/monaco-editor)! Search open and closed issues, there are a lot of tips in there!

## Issues

Create [issues](https://github.com/microsoft/monaco-editor/issues) in this repository for anything related to the Monaco Editor. Please search for existing issues to avoid duplicates.

## FAQ

‚ùì **What is the relationship between VS Code and the Monaco Editor?**

The Monaco Editor is generated straight from VS Code&#039;s sources with some shims around services the code needs to make it run in a web browser outside of its home.

‚ùì **What is the relationship between VS Code&#039;s version and the Monaco Editor&#039;s version?**

None. The Monaco Editor is a library and it reflects directly the source code.

‚ùì **I&#039;ve written an extension for VS Code, will it work on the Monaco Editor in a browser?**

No.

&gt; Note: If the extension is fully based on the [LSP](https://microsoft.github.io/language-server-protocol/) and if the language server is authored in JavaScript, then it would be possible.

‚ùì **Why all these web workers and why should I care?**

Language services create web workers to compute heavy stuff outside of the UI thread. They cost hardly anything in terms of resource overhead and you shouldn&#039;t worry too much about them, as long as you get them to work (see above the cross-domain case).

‚ùì **What is this `loader.js`? Can I use `require.js`?**

It is an AMD loader that we use in VS Code. Yes.

‚ùì **I see the warning &quot;Could not create web worker&quot;. What should I do?**

HTML5 does not allow pages loaded on `file://` to create web workers. Please load the editor with a web server on `http://` or `https://` schemes.

‚ùì **Is the editor supported in mobile browsers or mobile web app frameworks?**

No.

‚ùì **Why doesn&#039;t the editor support TextMate grammars?**

- Please see https://github.com/bolinfest/monaco-tm which puts together `monaco-editor`, `vscode-oniguruma` and `vscode-textmate` to get TM grammar support in the editor.

## Contributing / Local Development

We are welcoming contributions from the community!
Please see [CONTRIBUTING](./CONTRIBUTING.md) for details how you can contribute effectively, how you can run the editor from sources and how you can debug and fix issues.

## Code of Conduct

This project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.

## License

Licensed under the [MIT](https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt) License.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mediacms-io/mediacms]]></title>
            <link>https://github.com/mediacms-io/mediacms</link>
            <guid>https://github.com/mediacms-io/mediacms</guid>
            <pubDate>Thu, 03 Apr 2025 00:04:43 GMT</pubDate>
            <description><![CDATA[MediaCMS is a modern, fully featured open source video and media CMS, written in Python/Django and React, featuring a REST API.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mediacms-io/mediacms">mediacms-io/mediacms</a></h1>
            <p>MediaCMS is a modern, fully featured open source video and media CMS, written in Python/Django and React, featuring a REST API.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 3,288</p>
            <p>Forks: 598</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre># MediaCMS

[![GitHub license](https://img.shields.io/badge/License-AGPL%20v3-blue.svg)](https://raw.githubusercontent.com/mediacms-io/mediacms/main/LICENSE.txt)
[![Releases](https://img.shields.io/github/v/release/mediacms-io/mediacms?color=green)](https://github.com/mediacms-io/mediacms/releases/)
[![DockerHub](https://img.shields.io/docker/pulls/mediacms/mediacms)](https://hub.docker.com/r/mediacms/mediacms)



MediaCMS is a modern, fully featured open source video and media CMS. It is developed to meet the needs of modern web platforms for viewing and sharing media. It can be used to build a small to medium video and media portal within minutes.

It is built mostly using the modern stack Django + React and includes a REST API.

A demo is available at https://demo.mediacms.io


## Screenshots

&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/images/index.jpg&quot; width=&quot;340&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/images/video.jpg&quot; width=&quot;340&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/images/embed.jpg&quot; width=&quot;340&quot;&gt;
&lt;/p&gt;

## Features
- **Complete control over your data**: host it yourself!
- **Support for multiple publishing workflows**: public, private, unlisted and custom
- **Modern technologies**: Django/Python/Celery, React.
- **Multiple media types support**: video, audio,  image, pdf
- **Multiple media classification options**: categories, tags and custom
- **Multiple media sharing options**: social media share, videos embed code generation
- **Easy media searching**: enriched with live search functionality
- **Playlists for audio and video content**: create playlists, add and reorder content
- **Responsive design**: including light and dark themes
- **Advanced users management**: allow self registration, invite only, closed.
- **Configurable actions**: allow download, add comments, add likes, dislikes, report media
- **Configuration options**: change logos, fonts, styling, add more pages
- **Enhanced video player**: customized video.js player with multiple resolution and playback speed options
- **Multiple transcoding profiles**: sane defaults for multiple dimensions (240p, 360p, 480p, 720p, 1080p) and multiple profiles (h264, h265, vp9)
- **Adaptive video streaming**: possible through HLS protocol
- **Subtitles/CC**: support for multilingual subtitle files
- **Scalable transcoding**: transcoding through priorities. Experimental support for remote workers
- **Chunked file uploads**: for pausable/resumable upload of content
- **REST API**: Documented through Swagger
- **Translation**: Most of the CMS is translated to a number of languages

## Example cases

- **Schools, education.** Administrators and editors keep what content will be published, students are not distracted with advertisements and irrelevant content, plus they have the ability to select either to stream or download content.
- **Organization sensitive content.** In cases where content is sensitive and cannot be uploaded to external sites.
- **Build a great community.** MediaCMS can be customized (URLs, logos, fonts, aesthetics) so that you create a highly customized video portal for your community!
- **Personal portal.** Organize, categorize and host your content the way you prefer.


## Philosophy

We believe there&#039;s a need for quality open source web applications that can be used to build community portals and support collaboration.
We have three goals for MediaCMS: a) deliver all functionality one would expect from a modern system, b) allow for easy installation and maintenance, c) allow easy customization and addition of features.


## License

MediaCMS is released under [GNU Affero General Public License v3.0 license](LICENSE.txt).
Copyright Markos Gogoulos.


## Support and paid services

We provide custom installations, development of extra functionality, migration from existing systems, integrations with legacy systems, training and support. Contact us at info@mediacms.io for more information.

### Commercial Hostings
**Elestio**

You can deploy MediaCMS on Elestio using one-click deployment. Elestio supports MediaCMS by providing revenue share so go ahead and click below to deploy and use MediaCMS.

[![Deploy on Elestio](https://elest.io/images/logos/deploy-to-elestio-btn.png)](https://elest.io/open-source/mediacms)

## Hardware considerations

For a small to medium installation, with a few hours of video uploaded daily, and a few hundreds of active daily users viewing content, 4GB Ram / 2-4 CPUs as minimum is ok. For a larger installation with many hours of video uploaded daily, consider adding more CPUs and more Ram.

In terms of disk space, think of what the needs will be. A general rule is to multiply by three the size of the expected uploaded videos (since the system keeps original versions, encoded versions plus HLS), so if you receive 1G of videos daily and maintain all of them, you should consider a 1T disk across a year (1G * 3 * 365).


## Installation / Maintanance

There are two ways to run MediaCMS, through Docker Compose and through installing it on a server via an automation script that installs and configures all needed services. Find the related pages:

- [Single Server](docs/admins_docs.md#2-server-installation) page
- [Docker Compose](docs/admins_docs.md#3-docker-installation) page

  A complete guide can be found on the blog post [How to self-host and share your videos in 2021](https://medium.com/@MediaCMS.io/how-to-self-host-and-share-your-videos-in-2021-14067e3b291b).

## Configuration

Visit [Configuration](docs/admins_docs.md#5-configuration) page.


## Information for developers
Check out the new section on the [Developer Experience](docs/dev_exp.md) page


## Documentation

* [Users documentation](docs/user_docs.md) page
* [Administrators documentation](docs/admins_docs.md) page
* [Developers documentation](docs/developers_docs.md) page


## Technology

This software uses the following list of awesome technologies: Python, Django, Django Rest Framework, Celery, PostgreSQL, Redis, Nginx, uWSGI, React, Fine Uploader, video.js, FFMPEG, Bento4


## Who is using it

- **Cinemata** non-profit media, technology and culture organization - https://cinemata.org
- **Critical Commons** public media archive and fair use advocacy network - https://criticalcommons.org
- **American Association of Gynecologic Laparoscopists** - https://surgeryu.org/


## How to contribute

If you like the project, here&#039;s a few things you can do
- Hire us, for custom installations, training, support, maintenance work
- Suggest us to others that are interested to hire us
- Write a blog post/article about MediaCMS
- Share on social media about the project
- Open issues, participate on [discussions](https://github.com/mediacms-io/mediacms/discussions), report bugs, suggest ideas
- [Show and tell](https://github.com/mediacms-io/mediacms/discussions/categories/show-and-tell) how you are using the project
- Star the project
- Add functionality, work on a PR, fix an issue!


## Contact

info@mediacms.io
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[apsdehal/awesome-ctf]]></title>
            <link>https://github.com/apsdehal/awesome-ctf</link>
            <guid>https://github.com/apsdehal/awesome-ctf</guid>
            <pubDate>Thu, 03 Apr 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[A curated list of CTF frameworks, libraries, resources and softwares]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/apsdehal/awesome-ctf">apsdehal/awesome-ctf</a></h1>
            <p>A curated list of CTF frameworks, libraries, resources and softwares</p>
            <p>Language: JavaScript</p>
            <p>Stars: 10,221</p>
            <p>Forks: 1,522</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre># Awesome CTF [![Build Status](https://travis-ci.org/apsdehal/awesome-ctf.svg?branch=master)](https://travis-ci.org/apsdehal/awesome-ctf) [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)

A curated list of [Capture The Flag](https://en.wikipedia.org/wiki/Capture_the_flag#Computer_security) (CTF) frameworks, libraries, resources, softwares and tutorials. This list aims to help starters as well as seasoned CTF players to find everything related to CTFs at one place.

### Contributing

Please take a quick look at the [contribution guidelines](https://github.com/apsdehal/ctf-tools/blob/master/CONTRIBUTING.md) first.

#### _If you know a tool that isn&#039;t present here, feel free to open a pull request._

### Why?

It takes time to build up collection of tools used in CTF and remember them all. This repo helps to keep all these scattered tools at one place.

### Contents

- [Awesome CTF](#awesome-ctf)
  - [Create](#create)
    - [Forensics](#forensics)
    - [Platforms](#platforms)
    - [Steganography](#steganography)
    - [Web](#web)
  - [Solve](#solve)
    - [Attacks](#attacks)
    - [Bruteforcers](#bruteforcers)
    - [Cryptography](#crypto)
    - [Exploits](#exploits)
    - [Forensics](#forensics-1)
    - [Networking](#networking)
    - [Reversing](#reversing)
    - [Services](#services)
    - [Steganography](#steganography-1)
    - [Web](#web-1)

- [Resources](#resources)
  - [Operating Systems](#operating-systems)
  - [Starter Packs](#starter-packs)
  - [Tutorials](#tutorials)
  - [Wargames](#wargames)
  - [Websites](#websites)
  - [Wikis](#wikis)
  - [Writeups Collections](#writeups-collections)


# Create

*Tools used for creating CTF challenges*

- [Kali Linux CTF Blueprints](https://www.packtpub.com/eu/networking-and-servers/kali-linux-ctf-blueprints) - Online book on building, testing, and customizing your own Capture the Flag challenges.


## Forensics

*Tools used for creating Forensics challenges*

- [Dnscat2](https://github.com/iagox86/dnscat2) - Hosts communication through DNS.
- [Kroll Artifact Parser and Extractor (KAPE)](https://learn.duffandphelps.com/kape) - Triage program.
- [Magnet AXIOM](https://www.magnetforensics.com/downloadaxiom) - Artifact-centric DFIR tool.
- [Registry Dumper](http://www.kahusecurity.com/posts/registry_dumper_find_and_dump_hidden_registry_keys.html) - Dump your registry.

## Platforms

*Projects that can be used to host a CTF*

- [CTFd](https://github.com/isislab/CTFd) - Platform to host jeopardy style CTFs from ISISLab, NYU Tandon.
- [echoCTF.RED](https://github.com/echoCTF/echoCTF.RED) - Develop, deploy and maintain your own CTF infrastructure.
- [FBCTF](https://github.com/facebook/fbctf) - Platform to host Capture the Flag competitions from Facebook.
- [Haaukins](https://github.com/aau-network-security/haaukins)- A Highly Accessible and Automated Virtualization Platform for Security Education.
- [HackTheArch](https://github.com/mcpa-stlouis/hack-the-arch) - CTF scoring platform.
- [Mellivora](https://github.com/Nakiami/mellivora) - A CTF engine written in PHP.
- [MotherFucking-CTF](https://github.com/andreafioraldi/motherfucking-ctf) - Badass lightweight plaform to host CTFs. No JS involved.
- [NightShade](https://github.com/UnrealAkama/NightShade) - A simple security CTF framework.
- [OpenCTF](https://github.com/easyctf/openctf) - CTF in a box. Minimal setup required.
- [PicoCTF](https://github.com/picoCTF/picoCTF) - The platform used to run picoCTF. A great framework to host any CTF.
- [PyChallFactory](https://github.com/pdautry/py_chall_factory) - Small framework to create/manage/package jeopardy CTF challenges.
- [RootTheBox](https://github.com/moloch--/RootTheBox) - A Game of Hackers (CTF Scoreboard &amp; Game Manager).
- [Scorebot](https://github.com/legitbs/scorebot) - Platform for CTFs by Legitbs (Defcon).
- [SecGen](https://github.com/cliffe/SecGen) - Security Scenario Generator. Creates randomly vulnerable virtual machines.

## Steganography

*Tools used to create stego challenges*

Check solve section for steganography.

## Web

*Tools used for creating Web challenges*

*JavaScript Obfustcators*

- [Metasploit JavaScript Obfuscator](https://github.com/rapid7/metasploit-framework/wiki/How-to-obfuscate-JavaScript-in-Metasploit)
- [Uglify](https://github.com/mishoo/UglifyJS)


# Solve

*Tools used for solving CTF challenges*

## Attacks

*Tools used for performing various kinds of attacks*

- [Bettercap](https://github.com/bettercap/bettercap) - Framework to perform MITM (Man in the Middle) attacks.
- [Yersinia](https://github.com/tomac/yersinia) - Attack various protocols on layer 2.

## Crypto

*Tools used for solving Crypto challenges*

- [CyberChef](https://gchq.github.io/CyberChef) - Web app for analysing and decoding data.
- [FeatherDuster](https://github.com/nccgroup/featherduster) - An automated, modular cryptanalysis tool.
- [Hash Extender](https://github.com/iagox86/hash_extender) - A utility tool for performing hash length extension attacks.
- [padding-oracle-attacker](https://github.com/KishanBagaria/padding-oracle-attacker) - A CLI tool to execute padding oracle attacks.
- [PkCrack](https://www.unix-ag.uni-kl.de/~conrad/krypto/pkcrack.html) - A tool for Breaking PkZip-encryption.
- [QuipQuip](https://quipqiup.com) - An online tool for breaking substitution ciphers or vigenere ciphers (without key).
- [RSACTFTool](https://github.com/Ganapati/RsaCtfTool) - A tool for recovering RSA private key with various attack.
- [RSATool](https://github.com/ius/rsatool) - Generate private key with knowledge of p and q.
- [XORTool](https://github.com/hellman/xortool) - A tool to analyze multi-byte xor cipher.

## Bruteforcers

*Tools used for various kind of bruteforcing (passwords etc.)*

- [Hashcat](https://hashcat.net/hashcat/) - Password Cracker
- [Hydra](https://tools.kali.org/password-attacks/hydra) - A parallelized login cracker which supports numerous protocols to attack
- [John The Jumbo](https://github.com/magnumripper/JohnTheRipper) - Community enhanced version of John the Ripper.
- [John The Ripper](http://www.openwall.com/john/) - Password Cracker.
- [Nozzlr](https://github.com/intrd/nozzlr) - Nozzlr is a bruteforce framework, trully modular and script-friendly.
- [Ophcrack](http://ophcrack.sourceforge.net/) - Windows password cracker based on rainbow tables.
- [Patator](https://github.com/lanjelot/patator) - Patator is a multi-purpose brute-forcer, with a modular design.
- [Turbo Intruder](https://portswigger.net/research/turbo-intruder-embracing-the-billion-request-attack) - Burp Suite extension for sending large numbers of HTTP requests 

## Exploits

*Tools used for solving Exploits challenges*

- [DLLInjector](https://github.com/OpenSecurityResearch/dllinjector) - Inject dlls in processes.
- [libformatstr](https://github.com/hellman/libformatstr) - Simplify format string exploitation.
- [Metasploit](http://www.metasploit.com/) - Penetration testing software.
  - [Cheatsheet](https://www.comparitech.com/net-admin/metasploit-cheat-sheet/)
- [one_gadget](https://github.com/david942j/one_gadget) -  A tool to find the one gadget `execve(&#039;/bin/sh&#039;, NULL, NULL)` call.
  - `gem install one_gadget`
- [Pwntools](https://github.com/Gallopsled/pwntools) - CTF Framework for writing exploits.
- [Qira](https://github.com/BinaryAnalysisPlatform/qira) - QEMU Interactive Runtime Analyser.
- [ROP Gadget](https://github.com/JonathanSalwan/ROPgadget) - Framework for ROP exploitation.
- [V0lt](https://github.com/P1kachu/v0lt) - Security CTF Toolkit.

## Forensics

*Tools used for solving Forensics challenges*

- [Aircrack-Ng](http://www.aircrack-ng.org/) - Crack 802.11 WEP and WPA-PSK keys.
  - `apt-get install aircrack-ng`
- [Audacity](http://sourceforge.net/projects/audacity/) - Analyze sound files (mp3, m4a, whatever).
  - `apt-get install audacity`
- [Bkhive and Samdump2](http://sourceforge.net/projects/ophcrack/files/samdump2/) - Dump SYSTEM and SAM files.
  - `apt-get install samdump2 bkhive`
- [CFF Explorer](http://www.ntcore.com/exsuite.php) - PE Editor.
- [Creddump](https://github.com/moyix/creddump) - Dump windows credentials.
- [DVCS Ripper](https://github.com/kost/dvcs-ripper) - Rips web accessible (distributed) version control systems.
- [Exif Tool](http://www.sno.phy.queensu.ca/~phil/exiftool/) - Read, write and edit file metadata.
- [Extundelete](http://extundelete.sourceforge.net/) - Used for recovering lost data from mountable images.
- [Fibratus](https://github.com/rabbitstack/fibratus) - Tool for exploration and tracing of the Windows kernel.
- [Foremost](http://foremost.sourceforge.net/) - Extract particular kind of files using headers.
  - `apt-get install foremost`
- [Fsck.ext4](http://linux.die.net/man/8/fsck.ext3) - Used to fix corrupt filesystems.
- [Malzilla](http://malzilla.sourceforge.net/) - Malware hunting tool.
- [NetworkMiner](http://www.netresec.com/?page=NetworkMiner) - Network Forensic Analysis Tool.
- [PDF Streams Inflater](http://malzilla.sourceforge.net/downloads.html) - Find and extract zlib files compressed in PDF files.
- [Pngcheck](http://www.libpng.org/pub/png/apps/pngcheck.html) - Verifies the integrity of PNG and dump all of the chunk-level information in human-readable form.
  - `apt-get install pngcheck`
- [ResourcesExtract](http://www.nirsoft.net/utils/resources_extract.html) - Extract various filetypes from exes.
- [Shellbags](https://github.com/williballenthin/shellbags) - Investigate NT\_USER.dat files.
- [Snow](https://sbmlabs.com/notes/snow_whitespace_steganography_tool) - A Whitespace Steganography Tool.
- [USBRip](https://github.com/snovvcrash/usbrip) - Simple CLI forensics tool for tracking USB device artifacts (history of USB events) on GNU/Linux.
- [Volatility](https://github.com/volatilityfoundation/volatility) - To investigate memory dumps.
- [Wireshark](https://www.wireshark.org) - Used to analyze pcap or pcapng files

*Registry Viewers*
- [OfflineRegistryView](https://www.nirsoft.net/utils/offline_registry_view.html) - Simple tool for Windows that allows you to read offline Registry files from external drive and view the desired Registry key in .reg file format.
- [Registry Viewer¬Æ](https://accessdata.com/product-download/registry-viewer-2-0-0) - Used to view Windows registries.

## Networking

*Tools used for solving Networking challenges*

- [Masscan](https://github.com/robertdavidgraham/masscan) - Mass IP port scanner, TCP port scanner.
- [Monit](https://linoxide.com/monitoring-2/monit-linux/) - A linux tool to check a host on the network (and other non-network activities).
- [Nipe](https://github.com/GouveaHeitor/nipe) - Nipe is a script to make Tor Network your default gateway.
- [Nmap](https://nmap.org/) - An open source utility for network discovery and security auditing.
- [Wireshark](https://www.wireshark.org/) - Analyze the network dumps.
  - `apt-get install wireshark`
- [Zeek](https://www.zeek.org) - An open-source network security monitor.
- [Zmap](https://zmap.io/) - An open-source network scanner.

## Reversing

*Tools used for solving Reversing challenges*

- [Androguard](https://github.com/androguard/androguard) - Reverse engineer Android applications.
- [Angr](https://github.com/angr/angr) - platform-agnostic binary analysis framework.
- [Apk2Gold](https://github.com/lxdvs/apk2gold) - Yet another Android decompiler.
- [ApkTool](http://ibotpeaches.github.io/Apktool/) - Android Decompiler.
- [Barf](https://github.com/programa-stic/barf-project) - Binary Analysis and Reverse engineering Framework.
- [Binary Ninja](https://binary.ninja/) - Binary analysis framework.
- [BinUtils](http://www.gnu.org/software/binutils/binutils.html) - Collection of binary tools.
- [BinWalk](https://github.com/devttys0/binwalk) - Analyze, reverse engineer, and extract firmware images.
- [Boomerang](https://github.com/BoomerangDecompiler/boomerang) - Decompile x86/SPARC/PowerPC/ST-20 binaries to C.
- [ctf_import](https://github.com/docileninja/ctf_import) ‚Äì run basic functions from stripped binaries cross platform.
- [cwe_checker](https://github.com/fkie-cad/cwe_checker) - cwe_checker finds vulnerable patterns in binary executables.
- [demovfuscator](https://github.com/kirschju/demovfuscator) - A work-in-progress deobfuscator for movfuscated binaries.
- [Frida](https://github.com/frida/) - Dynamic Code Injection.
- [GDB](https://www.gnu.org/software/gdb/) - The GNU project debugger.
- [GEF](https://github.com/hugsy/gef) - GDB plugin.
- [Ghidra](https://ghidra-sre.org/) - Open Source suite of reverse engineering tools.  Similar to IDA Pro.
- [Hopper](http://www.hopperapp.com/) - Reverse engineering tool (disassembler) for OSX and Linux.
- [IDA Pro](https://www.hex-rays.com/products/ida/) - Most used Reversing software.
- [Jadx](https://github.com/skylot/jadx) - Decompile Android files.
- [Java Decompilers](http://www.javadecompilers.com) - An online decompiler for Java and Android APKs.
- [Krakatau](https://github.com/Storyyeller/Krakatau) - Java decompiler and disassembler.
- [Objection](https://github.com/sensepost/objection) - Runtime Mobile Exploration.
- [PEDA](https://github.com/longld/peda) - GDB plugin (only python2.7).
- [Pin](https://software.intel.com/en-us/articles/pin-a-dynamic-binary-instrumentation-tool) - A dynamic binary instrumentaion tool by Intel.
- [PINCE](https://github.com/korcankaraokcu/PINCE) - GDB front-end/reverse engineering tool, focused on game-hacking and automation.
- [PinCTF](https://github.com/ChrisTheCoolHut/PinCTF) - A tool which uses intel pin for Side Channel Analysis.
- [Plasma](https://github.com/joelpx/plasma) - An interactive disassembler for x86/ARM/MIPS which can generate indented pseudo-code with colored syntax.
- [Pwndbg](https://github.com/pwndbg/pwndbg) - A GDB plugin that provides a suite of utilities to hack around GDB easily.
- [radare2](https://github.com/radare/radare2) - A portable reversing framework.
- [Triton](https://github.com/JonathanSalwan/Triton/) - Dynamic Binary Analysis (DBA) framework.
- [Uncompyle](https://github.com/gstarnberger/uncompyle) - Decompile Python 2.7 binaries (.pyc).
- [WinDbg](http://www.windbg.org/) - Windows debugger distributed by Microsoft.
- [Xocopy](http://reverse.lostrealm.com/tools/xocopy.html) - Program that can copy executables with execute, but no read permission.
- [Z3](https://github.com/Z3Prover/z3) - A theorem prover from Microsoft Research.

*JavaScript Deobfuscators*

- [Detox](http://relentless-coding.org/projects/jsdetox/install) - A Javascript malware analysis tool.
- [Revelo](http://www.kahusecurity.com/posts/revelo_javascript_deobfuscator.html) - Analyze obfuscated Javascript code.

*SWF Analyzers*
- [RABCDAsm](https://github.com/CyberShadow/RABCDAsm) - Collection of utilities including an ActionScript 3 assembler/disassembler.
- [Swftools](http://www.swftools.org/) - Collection of utilities to work with SWF files.
- [Xxxswf](https://bitbucket.org/Alexander_Hanel/xxxswf) -  A Python script for analyzing Flash files.

## Services

*Various kind of useful services available around the internet*

- [CSWSH](http://cow.cat/cswsh.html) - Cross-Site WebSocket Hijacking Tester.
- [Request Bin](https://requestbin.com/) - Lets you inspect http requests to a particular url.

## Steganography

*Tools used for solving Steganography challenges*

- [AperiSolve](https://aperisolve.fr/) - Aperi&#039;Solve is a platform which performs layer analysis on image (open-source).
- [Convert](http://www.imagemagick.org/script/convert.php) - Convert images b/w formats and apply filters.
- [Exif](http://manpages.ubuntu.com/manpages/trusty/man1/exif.1.html) - Shows EXIF information in JPEG files.
- [Exiftool](https://linux.die.net/man/1/exiftool) - Read and write meta information in files.
- [Exiv2](http://www.exiv2.org/manpage.html) - Image metadata manipulation tool.
- [Image Steganography](https://sourceforge.net/projects/image-steg/) - Embeds text and files in images with optional encryption. Easy-to-use UI.
- [Image Steganography Online](https://incoherency.co.uk/image-steganography) - This is a client-side Javascript tool to steganographically hide images inside the lower &quot;bits&quot; of other images
- [ImageMagick](http://www.imagemagick.org/script/index.php) - Tool for manipulating images.
- [Outguess](https://www.freebsd.org/cgi/man.cgi?query=outguess+&amp;apropos=0&amp;sektion=0&amp;manpath=FreeBSD+Ports+5.1-RELEASE&amp;format=html) - Universal steganographic tool.
- [Pngtools](https://packages.debian.org/sid/pngtools) - For various analysis related to PNGs.
  - `apt-get install pngtools`
- [SmartDeblur](https://github.com/Y-Vladimir/SmartDeblur) - Used to deblur and fix defocused images.
- [Steganabara](https://www.openhub.net/p/steganabara) -  Tool for stegano analysis written in Java.
- [SteganographyOnline](https://stylesuxx.github.io/steganography/) - Online steganography encoder and decoder.
- [Stegbreak](https://linux.die.net/man/1/stegbreak) - Launches brute-force dictionary attacks on JPG image.
- [StegCracker](https://github.com/Paradoxis/StegCracker) - Steganography brute-force utility to uncover hidden data inside files.
- [stegextract](https://github.com/evyatarmeged/stegextract) - Detect hidden files and text in images.
- [Steghide](http://steghide.sourceforge.net/) - Hide data in various kind of images.
- [StegOnline](https://georgeom.net/StegOnline/upload) - Conduct a wide range of image steganography operations, such as concealing/revealing files hidden within bits (open-source).
- [Stegsolve](http://www.caesum.com/handbook/Stegsolve.jar) - Apply various steganography techniques to images.
- [Zsteg](https://github.com/zed-0xff/zsteg/) - PNG/BMP analysis.

## Web

*Tools used for solving Web challenges*

- [BurpSuite](https://portswigger.net/burp) - A graphical tool to testing website security.
- [Commix](https://github.com/commixproject/commix) - Automated All-in-One OS Command Injection and Exploitation Tool.
- [Hackbar](https://addons.mozilla.org/en-US/firefox/addon/hackbartool/) - Firefox addon for easy web exploitation.
- [OWASP ZAP](https://www.owasp.org/index.php/Projects/OWASP_Zed_Attack_Proxy_Project) - Intercepting proxy to replay, debug, and fuzz HTTP requests and responses
- [Postman](https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop?hl=en) - Add on for chrome for debugging network requests.
- [Raccoon](https://github.com/evyatarmeged/Raccoon) - A high performance offensive security tool for reconnaissance and vulnerability scanning.
- [SQLMap](https://github.com/sqlmapproject/sqlmap) - Automatic SQL injection and database takeover tool.
  ```pip install sqlmap```
- [W3af](https://github.com/andresriancho/w3af) -  Web Application Attack and Audit Framework.
- [XSSer](http://xsser.sourceforge.net/) - Automated XSS testor.


# Resources

*Where to discover about CTF*

## Operating Systems

*Penetration testing and security lab Operating Systems*

- [Android Tamer](https://androidtamer.com/) - Based on Debian.
- [BackBox](https://backbox.org/) - Based on Ubuntu.
- [BlackArch Linux](https://blackarch.org/) - Based on Arch Linux.
- [Fedora Security Lab](https://labs.fedoraproject.org/security/) - Based on Fedora.
- [Kali Linux](https://www.kali.org/) - Based on Debian.
- [Parrot Security OS](https://www.parrotsec.org/) - Based on Debian.
- [Pentoo](http://www.pentoo.ch/) - Based on Gentoo.
- [URIX OS](http://urix.us/) - Based on openSUSE.
- [Wifislax](http://www.wifislax.com/) - Based on Slackware.

*Malware analysts and reverse-engineering*

- [Flare VM](https://github.com/fireeye/flare-vm/) - Based on Windows.
- [REMnux](https://remnux.org/) - Based on Debian.

## Starter Packs

*Collections of installer scripts, useful tools*

- [CTF Tools](https://github.com/zardus/ctf-tools) - Collection of setup scripts to install various security research tools.
- [LazyKali](https://github.com/jlevitsk/lazykali) - 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[vercel/next.js]]></title>
            <link>https://github.com/vercel/next.js</link>
            <guid>https://github.com/vercel/next.js</guid>
            <pubDate>Thu, 03 Apr 2025 00:04:41 GMT</pubDate>
            <description><![CDATA[The React Framework]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vercel/next.js">vercel/next.js</a></h1>
            <p>The React Framework</p>
            <p>Language: JavaScript</p>
            <p>Stars: 130,764</p>
            <p>Forks: 28,052</p>
            <p>Stars today: 36 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[LeCoupa/awesome-cheatsheets]]></title>
            <link>https://github.com/LeCoupa/awesome-cheatsheets</link>
            <guid>https://github.com/LeCoupa/awesome-cheatsheets</guid>
            <pubDate>Thu, 03 Apr 2025 00:04:40 GMT</pubDate>
            <description><![CDATA[üë©‚Äçüíªüë®‚Äçüíª Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/LeCoupa/awesome-cheatsheets">LeCoupa/awesome-cheatsheets</a></h1>
            <p>üë©‚Äçüíªüë®‚Äçüíª Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 42,040</p>
            <p>Forks: 6,398</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre>[![AWESOME CHEATSHEETS LOGO](_design/cover_github@2x.png)](https://lecoupa.github.io/awesome-cheatsheets/)

[![Awesome](https://awesome.re/badge.svg)](https://awesome.re) [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/LeCoupa/awesome-cheatsheets/blob/master/LICENSE)

**WEBSITE DIRECTORY**: [Available here](https://lecoupa.github.io/awesome-cheatsheets/).

&gt; üìö Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.

## ü§î Why Awesome-Cheatsheets?

I usually make a cheat sheet when I want to improve my skills in a programming language, a framework or a development tool. [I started doing these kinds of things a long time ago on Gist](https://gist.github.com/LeCoupa). To better keep track of the history and to let people contribute, I re-organized all of them into this single repository. Most of the content is coming from official documentation and some books I have read.

Feel free to take a look. You might learn new things. They have been designed to provide a quick way to assess your knowledge and to save you time.

## üìö Table of Contents

### üìÉ Languages

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### Command line interface

- [Bash](languages/bash.sh)

#### Imperative

- [C](languages/C.txt)
- [C#](languages/C%23.txt)
- [Go](languages/golang.md)
- [Java](languages/java.md)
- [PHP](languages/php.php)
- [Python](languages/python.md)

#### Functional

- [JavaScript](languages/javascript.js)

&lt;/details&gt;

### üì¶ Backend

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### PHP

- [Laravel](backend/laravel.php)

#### Python

- [Django](backend/django.py)

#### Javascript

- [Adonis.js](backend/adonis.js)
- [Express.js](backend/express.js)
- [Feathers.js](backend/feathers.js)
- [Moleculer](backend/moleculer.js)
- [Node.js](backend/node.js)
- [Sails.js](backend/sails.js)
  &lt;/details&gt;

### üåê Frontend

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### Basics

- [HTML5](frontend/html5.html)
- [CSS3](frontend/css3.css)

#### Frameworks

- [React.js](frontend/react.js)
- [Vue.js](frontend/vue.js)
- [Tailwind.css](frontend/tailwind.css)
- [Ember.js](frontend/ember.js)
- [Angular (2+)](frontend/angular.js)
- [AngularJS](frontend/angularjs.js)
  &lt;/details&gt;

### üóÉÔ∏è Databases

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### SQL

- [MySQL](databases/mysql.sh)

#### NoSQL

- [Redis](databases/redis.sh)
  &lt;/details&gt;

### üîß Tools

&lt;details&gt;
&lt;summary&gt;View cheatsheets&lt;/summary&gt;

#### Development

- [cURL](tools/curl.sh)
- [Drush](tools/drush.sh)
- [Elasticsearch](tools/elasticsearch.js)
- [Emmet](tools/emmet.md)
- [Git](tools/git.sh)
- [Puppeteer](tools/puppeteer.js)
- [Sublime Text](tools/sublime_text.md)
- [VIM](tools/vim.txt)
- [Visual Studio Code](tools/vscode.md)
- [Xcode](tools/xcode.txt)

#### Infrastructure

- [AWS CLI](tools/aws.sh)
- [Docker](tools/docker.sh)
- [Heroku CLI](tools/heroku.sh)
- [Kubernetes](tools/kubernetes.md)
- [Nanobox Boxfile](tools/nanobox_boxfile.yml)
- [Nanobox CLI](tools/nanobox_cli.sh)
- [Nginx](tools/nginx.sh)
- [PM2](tools/pm2.sh)
- [Ubuntu](tools/ubuntu.sh)
- [Firebase CLI](tools/firebase_cli.md)
  &lt;/details&gt;

## üôåüèº How to Contribute?

You are more than welcome to contribute and build your own cheat sheet for your favorite programming language, framework or development tool. Just submit changes via pull request and I will review them before merging.

## üë©‚Äçüíªüë®‚Äçüíª Our valuable Contributors

&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/LeCoupa/awesome-cheatsheets/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contributors-img.web.app/image?repo=LeCoupa/awesome-cheatsheets&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[jgraph/drawio]]></title>
            <link>https://github.com/jgraph/drawio</link>
            <guid>https://github.com/jgraph/drawio</guid>
            <pubDate>Thu, 03 Apr 2025 00:04:39 GMT</pubDate>
            <description><![CDATA[draw.io is a JavaScript, client-side editor for general diagramming.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/jgraph/drawio">jgraph/drawio</a></h1>
            <p>draw.io is a JavaScript, client-side editor for general diagramming.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,062</p>
            <p>Forks: 198</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>About
-----
draw.io, this project, is a configurable diagramming/whiteboarding visualization application. draw.io is jointly owned and developed by JGraph Ltd and draw.io AG.

As well as running this project, we run a production-grade deployment of the diagramming interface at https://app.diagrams.net.

License
-----------------

The minified code authored by us in this repo is licensed under an Apache v2 license, but the sources to build those files are not in this repo. This is not an open source project. We do not accept PRs unless one of the maintainers specifically says it&#039;s OK (basically never).

The JGraph provided icons and diagram templates are licensed under the [CC BY 4.0](https://creativecommons.org/licenses/by/4.0/). Additional terms may also apply where the icons are originally defined by a third-party copyright holder. We have checked in all cases that the original license allows use in this project. Also see the terms for using the draw.io logo below.

Additional minified JavaScript files and Java libraries are used in this project. All of the licenses are deemed compatible with the Apache 2.0, nothing is GPL or AGPL, due diligence is performed on all third-party code.

We make no copyright claim on the content you create with this software, regardless of the copyright of individual icons used in such content.

Scope of the Project
--------------------

draw.io is a diagramming or whiteboarding application, depending on which theme is selected. It is not an SVG editing app, the SVG export is designed only for embedding in web pages, not for further editing in other tools.

The application is designed to be entirely as-is. draw.io is not suitable as a framework for building other products from, as source code is not provided. For this try either [Tldraw](https://github.com/tldraw/tldraw) or [Excalidraw](https://github.com/excalidraw/excalidraw).

Note, in particular, we don&#039;t have support for collaborative editing in this project. If this is important, one of the projects above is likely a better choice.

If you are using a draw.io project/product and have issues or questions about the editor itself, the issue tracker and discussion in this GitHub project are likely a good place to look.

Running
-------

One way to run draw.io is to fork this project, [publish the master branch to GitHub pages](https://help.github.com/categories/github-pages-basics/) and the [pages sites](https://jgraph.github.io/drawio/src/main/webapp/index.html) will have the full editor functionality (sans the integrations).

Another way is to use [the recommended Docker project](https://github.com/jgraph/docker-drawio) or to download [draw.io Desktop](https://get.diagrams.net).

The full packaged .war of the client and servlets is built when the project is tagged and available on the [releases page](https://github.com/jgraph/draw.io/releases).

Supported Browsers
------------------

draw.io supports Chrome 98+, Firefox 94+, Safari 15.4+, Opera 84+, WebView Android 98+, Safari iOS 15.4+ and Edge 98+.

Logo and trademark usage
------------------------

draw.io is a registered EU trademark, #018062448

Do not use the draw.io name or any draw.io logo in a way that suggests you are JGraph, your offering or project is by JGraph, or that JGraph is endorsing you or your offering or project.

Do not use any draw.io logo as the icon or logo for your business/organization, offering, project, domain name, social media account, or website.

Do not modify the permitted draw.io logos, including changing the color, dimensions, or combining with other words or design elements.

Do not use JGraph trademarks or logos without JGraph‚Äôs prior written permission.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>