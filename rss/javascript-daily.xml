<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Thu, 14 Aug 2025 00:04:45 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[mikechambers/adb-mcp]]></title>
            <link>https://github.com/mikechambers/adb-mcp</link>
            <guid>https://github.com/mikechambers/adb-mcp</guid>
            <pubDate>Thu, 14 Aug 2025 00:04:45 GMT</pubDate>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mikechambers/adb-mcp">mikechambers/adb-mcp</a></h1>
            <p></p>
            <p>Language: JavaScript</p>
            <p>Stars: 290</p>
            <p>Forks: 37</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre># adb-mcp

adb-mcp is a proof of concept project to enabled AI control of Adobe tools (Adobe Photoshop and Adobe Premiere) by providing an interface to LLMs via the MCP protocol.

The project is not endorsed by nor supported by Adobe.

It has been tested with Claude desktop (Mac and Windows) from Anthropic, as well as the OpenAI Agent SDK, and allows AI clients to control Adobe Photoshop and Adobe Premiere. Theoretically, it should work with any AI App / LLM that supports the MCP protocol, and is built in a way to support multiple Adobe applications.

Example use cases include:

-   Giving Claude step by step instruction on what to do in Photoshop, providing a conversational based interface (particularly useful if you are new to Photoshop).
-   Giving Claude a task (create an instagram post that looks like a Polariod image, create a double exposure) and letting it create it from start to finish to use as a template.
-   Asking Claude to generate custom Photoshop tutorials for you, by creating an example file, then step by step instructions on how to recreate.
-   As a Photoshop utility tool (have Claude rename all of your layers into a consistent format)
-   Have Claude create new Premiere projects pre-populations with clips, transitions, effects and Audio

[View Video Examples](https://www.youtube.com/playlist?list=PLrZcuHfRluqt5JQiKzMWefUb0Xumb7MkI)

The Premiere agent is a bit more limited in functionality compared to the Photoshop agent, due to current limitations of the Premiere plugin API.

## How it works

The proof of concept works by providing:

-   A MCP Server that provides an interface to functionality within Adobe Photoshop to the AI / LLM
-   A Node based command proxy server that sits between the MCP server and Adobe app plugins
-   An Adobe app (Photoshop and Premiere) plugin that listens for commands, and drives the programs

**AI** &lt;-&gt; **MCP Server** &lt;-&gt; **Command Proxy Server** &lt;-&gt; **Photoshop / Premiere UXP Plugin** &lt;-&gt; **Photoshop / Premiere**

The proxy server is required because the public facing API for UXP Based JavaScript plugin does not allow it to listen on a socket connection (as a server) for the MCP Server to connect to (it can only connect to a socket as a client).

## Requirements

In order to run this, the following is required:

-   AI LLM with support for MCP Protocol (tested with Claude desktop on Mac &amp; Windows, and OpenAI Agent SDK)
-   Python 3, which is used to run the MCP server provided with this project
-   NodeJS, used to provide a proxy between the MCP server and Photoshop
-   Adobe UXP Developer tool (available via Creative Cloud) used to install and debug the Photoshop / Premiere plugin used to connect to the proxy
-   Adobe Photoshop (26.0 or greater) with the MCP Plugin installed or Adobe Premiere Beta (25.3 Build 46 or greater)


## Installation

This guide assumes you&#039;re using Claude Desktop. Other MCP-compatible AI applications should work similarly.

Choose your installation method:

### Quick Start (Recommended for Testing)

Use this method if you want to try the system without modifying code.

#### 1. Download Release Files
Download the latest release from the [releases page](https://github.com/mikechambers/adb-mcp/releases), including:
- Source code
- Claude MCP installers (.dxt files)
- Adobe plugins (.ccx files)

#### 2. Install Claude Desktop
1. Download and install [Claude Desktop](https://claude.ai/download)
2. Launch Claude Desktop to verify it works

#### 3. Install MCP in Claude Desktop
1. Launch Claude Desktop
2. Double-click the appropriate .dxt file:
   - `photoshop-mcp.dxt` for Photoshop
   - `premiere-mcp.dxt` for Premiere Pro
3. Restart Claude Desktop

#### Using Prebuilt Executables (Recommended)

1. Download the appropriate executable for your platform from the latest release (files named like `adb-proxy-socket-macos-x64.zip` (Intel), `adb-proxy-socket-macos-arm64.zip` (Silicon), or `adb-proxy-socket-win-x64.exe.zip`).
2. Unzip the executable.
3. From the terminal or console run the executable:

   - **macOS** (Intel or Apple Silicon):
     ```bash
     ./adb-proxy-socket-macos-x64
     ```
     or
     ```bash
     ./adb-proxy-socket-macos-arm64
     ```
   - **Windows**:  
     Double-click `adb-proxy-socket-win.exe` or run in Command Prompt:
     ```cmd
     adb-proxy-socket-win.exe
     ```

4. You should see a message like:  
   `Photoshop MCP Command proxy server running on ws://localhost:3001`

5. **Keep this running** — the proxy server must stay active for Claude to communicate with Adobe plugins.


#### 5. Install Adobe Plugins
1. Open the Adobe application you want to use (Photoshop or Premiere Pro)
2. Download and launch **Adobe UXP Developer Tools** from Creative Cloud
3. In UXP Developer Tools: **File &gt; Add Plugin**
4. Select the appropriate .ccx file from your downloads
5. Click **Load** to install the plugin
6. In your Adobe application, find the plugin panel:
   - **Photoshop**: Plugins menu
   - **Premiere Pro**: Window &gt; UXP Plugins menu
7. Click **Connect** in the plugin panel

### Development Setup

Use this method if you want to modify the code or access the latest features.

#### 1. Download Source Code
Clone or download the source code from the [main project page](https://github.com/mikechambers/adb-mcp).

#### 2. Install Claude Desktop
Same as Quick Start step 2.

#### 3. Install MCP for Development
Navigate to the project directory and run:

**For Photoshop:**
```bash
uv run mcp install --with fonttools --with python-socketio --with mcp --with requests --with websocket-client --with numpy ps-mcp.py
```

**For Premiere Pro:**
```bash
uv run mcp install --with fonttools --with python-socketio --with mcp --with requests --with websocket-client --with pillow pr-mcp.py
```

Restart Claude Desktop after installation.

#### 4. Set Up Proxy Server
Same as Quick Start step 4.

#### 5. Enable Developer Mode in Adobe Applications

**For Photoshop:**
1. Launch Photoshop (2025/26.0 or greater)
2. Go to **Settings &gt; Plugins** and check **&quot;Enable Developer Mode&quot;**
3. Restart Photoshop

**For Premiere Pro:**
1. Launch Premiere Pro Beta (25.3 or greater)
2. Developer mode should be available by default in the beta

#### 6. Install Plugins for Development
1. Launch **UXP Developer Tools** from Creative Cloud
2. Enable developer mode when prompted
3. Select **File &gt; Add Plugin**
4. Navigate to the appropriate directory and select **manifest.json**:
   - **Photoshop**: `uxp/ps/manifest.json`
   - **Premiere Pro**: `uxp/pr/manifest.json`
5. Click **Load**
6. In your Adobe application, open the plugin panel and click **Connect**

## Using Claude with Adobe Apps

Launch the following:

1. Claude Desktop
2. adb-proxy-socket node server
3. Launch Photoshop and / or Premiere

_TIP: Create a project for Photoshop / Premiere Pro in Claude and pre-load any app specific instructions in its Project knowledge._

### Photoshop
1. Launch UXP Developer Tool and click the Load button for _Photoshop MCP Agent_
2. In Photoshop, if the MCP Agent panel is not open, open _Plugins &gt; Photoshop MCP Agent &gt; Photoshop MCP Agent_
3. Click connect in the agent panel in Photoshop

Now you can switch over the Claude desktop. Before you start a session, you should load the instructions resource which will provide guidance and info the Claude by clicking the socket icon (Attach from MCP) and then _Choose an Integration_ &gt; _Adobe Photoshop_ &gt; _config://get_instructions_.



### Premiere
4. Launch UXP Developer Tool and click the Load button for _Premiere MCP Agent_
5. In Premiere, if the MCP Agent panel is not open, open _Window &gt; UXP Plugins &gt; Premiere MCP Agent &gt; Premiere MCP Agent_
6. Click connect in the agent panel in Photoshop

Now you can switch over the Claude desktop. Before you start a session, you should load the instructions resource which will provide guidance and info the Claude by clicking the socket icon (Attach from MCP) and then _Choose an Integration_ &gt; _Adobe Premiere &gt; _config://get_instructions_.


Note, you must reload the plugin via the UCP Developer app every time you restart Photoshop and Premiere.

### Setting up session

In the chat input field, click the &quot;+&quot; button. From there click &quot;Add from Adobe Photoshop / Premiere&quot; then select *config://get_instructions*. This will load the instructions into the prompt. Submit that to Claude and once it processes it, you are ready to go.

&lt;img src=&quot;images/claud-attach-mcp.png&quot; width=&quot;300&quot;&gt;

This will help reduce errors when the AI is using the app.


### Prompting

At anytime, you can ask the following:

```
Can you list what apis / functions are available for working with Photoshop / Premiere?
```

and it will list out all of the functionality available.

When prompting, you do not need to reference the APIs, just use natural language to give instructions.

For example:

```
Create a new Photoshop file with a blue background, that is 1080 width by 720 height at 300 dpi
```

```
Create a new Photoshop file for an instagram post
```

```
Create a double exposure image in Photoshop of a woman and a forest
```

```
Generate an image of a forest, and then add a clipping mask to only show the center in a circle
```
```
Make something cool with photoshop
```

```
Add cross fade transitions between all of the clips on the timeline in Premiere
```


### Tips

#### General
* When asking AI to view the content in Photoshop / Premiere Pro, you can see the image returned in the Tool Call item in the chat. It will appear once the entire response has been added to the chat.
* When prompting, ask the AI to think about and check its work.
* The more you guide it (i.e. &quot;consider using clipping masks&quot;) the better the results
* The more advanced the model, or the more resources given to the model the better and more creative the AI is.
* As a general rule, don&#039;t make changes in the Adobe Apps while the AI is doing work. If you do make changes, make sure to tell the AI about it.
* The AI will learn from its mistakes, but will lose its memory once you start a new chat. You can guide it to do things in a different way, and then ask it to start over and it should follow the new approach.

The AI currently has access to a subset of Photoshop / Premiere functionality. In general, the approach has been to provide lower level tools to give the AI the basics to do more complex stuff.

The Photoshop plugin has more functionality that Premiere.

By default, the AI cannot access files directly, although if you install the [Claude File System MCP server](https://www.claudemcp.com/servers/filesystem) it can access, and load files into Photoshop / Premiere (open files and embed images).

#### Photoshop

* You can ask the AI to look at the content of the Photoshop file and it should be able to then see the output.
* The AI currently has issue sizing and positioning text correctly, so giving it guidelines on font sizes to use will help, as well as telling it to align the text relative to the canvas.
* The AI has access to all of the Postscript fonts on the system. If you want to specify a font, you must use its Postscript name (you may be able to ask the AI for it).
* You can ask the AI for suggestions. It comes up with really useful ideas / feedback sometimes.

#### Premiere

* Currently the plugin assumes you are just working with a single sequence.
* Pair the Premiere Pro MCP with the [media-utils-mcp](https://github.com/mikechambers/media-utils-mcp) to expand functionality.


### Troubleshooting

#### MCP won&#039;t run in Claude

If you get an error when running Claude that the MCP is not working, you may need to edit your Claude config file and put an absolute path for the UV command. More info [here](https://github.com/mikechambers/adb-mcp/issues/5#issuecomment-2829817624).

#### All fonts not available

The MCP server will return a list of available fonts, but depending on the number of fonts installed on your system, may omit some to work around the amount of data that can be send to the AI. By default it will list the first 1000 fonts sorted in alphabetical order.

You can tell the AI to use a specific font, using its postscript name.

#### Plugin won&#039;t install or connect

*   Make sure the app is running before you try to load the plugin.
*   In the UXP developer tool click the debug button next to load, and see if there are any errors.
*   Make sure the node / proxy server is running. If you plugin connects you should see output similar to:

```
adb-mcp Command proxy server running on ws://localhost:3001
User connected: Ud6L4CjMWGAeofYAAAAB
Client Ud6L4CjMWGAeofYAAAAB registered for application: photoshop
```

*   When you press the connect button, if it still says &quot;Connect&quot; it means there was either an error, or it can&#039;t connect to the proxy server. You can view the error in the UXP Developer App, by opening the Developer Workspace and click &quot;Debug&quot;.

#### Errors within AI client

* If something fails on the AI side, it will usually tell you the issue. If you click the command / code box, you can see the error.
* The first thing to check if there is an issue is to make sure the plugin in Photoshop / Premiere is connected, and that the node proxy server is running.
* If response times get really slow, check if the AI servers are under load, and that you do not have too much text in the current conversation (restarting a new chat can sometimes help speed up, but you will lose the context).

If you continue to have issues post an [issue](https://github.com/mikechambers/adb-mcp/issuesrd.gg/fgxw9t37D7). Include as much information as you can (OS, App, App version, and debug info or errors).

## Development

Adding new functionality is relatively easy, and requires:

1. Adding the API and parameters in the *mcp/ps-mcp.py* / *mcp/pr-mcp.py* file (which is used by the AI)
2. Implementing the API in the *uxp/ps/commands/index.js* / *uxp/pr/commands/index.js* file.

TO BE COMPLETED

## Questions, Feature Requests, Feedback

If you have any questions, feature requests, need help, or just want to chat, join the [discord](https://discord.gg/fgxw9t37D7).

You can also log bugs and feature requests on the [issues page](https://github.com/mikechambers/adb-mcp/issues).

## License

Project released under a [MIT License](LICENSE.md).

[![License: MIT](https://img.shields.io/badge/License-MIT-orange.svg)](LICENSE.md)


</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[vercel/next.js]]></title>
            <link>https://github.com/vercel/next.js</link>
            <guid>https://github.com/vercel/next.js</guid>
            <pubDate>Thu, 14 Aug 2025 00:04:44 GMT</pubDate>
            <description><![CDATA[The React Framework]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vercel/next.js">vercel/next.js</a></h1>
            <p>The React Framework</p>
            <p>Language: JavaScript</p>
            <p>Stars: 133,776</p>
            <p>Forks: 29,058</p>
            <p>Stars today: 39 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[TheOdinProject/curriculum]]></title>
            <link>https://github.com/TheOdinProject/curriculum</link>
            <guid>https://github.com/TheOdinProject/curriculum</guid>
            <pubDate>Thu, 14 Aug 2025 00:04:43 GMT</pubDate>
            <description><![CDATA[The open curriculum for learning web development]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/TheOdinProject/curriculum">TheOdinProject/curriculum</a></h1>
            <p>The open curriculum for learning web development</p>
            <p>Language: JavaScript</p>
            <p>Stars: 11,347</p>
            <p>Forks: 15,177</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre># The Odin Project Curriculum

[The Odin Project](https://www.theodinproject.com/) (TOP) is an open-source curriculum for learning full-stack web development. Our curriculum is divided into distinct courses, each covering the subject language in depth. Each course contains a listing of lessons interspersed with multiple projects. These projects give users the opportunity to practice what they are learning, thereby reinforcing and solidifying the theoretical knowledge learned in the lessons. Completed projects may then be included in the user&#039;s portfolio.

Lessons are structured through a combination of original written content and a compilation of carefully curated resources from the web. This is where the contributing happens!

This repo contains the actual lesson files used on our website. For the actual TOP app that pulls in this lesson content and contains our front-end and back-end code, please go to the [main TOP repo](https://github.com/TheOdinProject/theodinproject).

Our community can be found on the [TOP Discord server](https://discord.gg/fbFCkYabZB).

## Contributing

The Odin Project depends on open-source contributions to improve, grow, and thrive. We welcome contributors of all experience levels and backgrounds to help maintain this awesome curriculum and community. If you would like to contribute to our curriculum, be sure to thoroughly read our [contributing guide](https://github.com/TheOdinProject/.github/blob/main/CONTRIBUTING.md).

Some of the things you can do to contribute to our curriculum include:

- Correct typos and other grammar errors.
- Rewrite parts of existing lessons to make them clearer and easier to understand.
- Fix broken links.
- Add new resource links you think would make a lesson better.
- Work on entirely new lessons after getting approval.

**Happy Coding!**

See [license.md](https://github.com/TheOdinProject/curriculum/blob/main/license.md) for usage details.

___

Created by [Erik Trautman](http://www.github.com/eriktrautman).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[sveltejs/kit]]></title>
            <link>https://github.com/sveltejs/kit</link>
            <guid>https://github.com/sveltejs/kit</guid>
            <pubDate>Thu, 14 Aug 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[web development, streamlined]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/sveltejs/kit">sveltejs/kit</a></h1>
            <p>web development, streamlined</p>
            <p>Language: JavaScript</p>
            <p>Stars: 19,606</p>
            <p>Forks: 2,098</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre>[![Chat](https://img.shields.io/discord/457912077277855764?label=chat&amp;logo=discord)](https://svelte.dev/chat)

# SvelteKit

Web development, streamlined. Read the [documentation](https://svelte.dev/docs/kit) to get started.

### Packages

| Package                                                                     | Changelog                                                     |
| --------------------------------------------------------------------------- | ------------------------------------------------------------- |
| [@sveltejs/kit](packages/kit)                                               | [Changelog](packages/kit/CHANGELOG.md)                        |
| [@sveltejs/adapter-auto](packages/adapter-auto)                             | [Changelog](packages/adapter-auto/CHANGELOG.md)               |
| [@sveltejs/adapter-cloudflare](packages/adapter-cloudflare)                 | [Changelog](packages/adapter-cloudflare/CHANGELOG.md)         |
| [@sveltejs/adapter-netlify](packages/adapter-netlify)                       | [Changelog](packages/adapter-netlify/CHANGELOG.md)            |
| [@sveltejs/adapter-node](packages/adapter-node)                             | [Changelog](packages/adapter-node/CHANGELOG.md)               |
| [@sveltejs/adapter-static](packages/adapter-static)                         | [Changelog](packages/adapter-static/CHANGELOG.md)             |
| [@sveltejs/adapter-vercel](packages/adapter-vercel)                         | [Changelog](packages/adapter-vercel/CHANGELOG.md)             |
| [@sveltejs/amp](packages/amp)                                               | [Changelog](packages/amp/CHANGELOG.md)                        |
| [@sveltejs/enhanced-img](packages/enhanced-img)                             | [Changelog](packages/enhanced-img/CHANGELOG.md)               |
| [@sveltejs/package](packages/package)                                       | [Changelog](packages/package/CHANGELOG.md)                    |
| [create-svelte](packages/create-svelte)                                     | [Changelog](packages/create-svelte/CHANGELOG.md)              |

[Additional adapters](https://sveltesociety.dev/packages?category=sveltekit-adapters) are maintained by the community.

## Bug reporting

Please make sure the issue you&#039;re reporting involves SvelteKit. Many issues related to how a project builds originate from [Vite](https://vitejs.dev/), which is used to build a SvelteKit project. You can create a new Vite project with `npm create vite@latest` for client-side only repros and `npm create vite-extra@latest` for SSR or library repros.

If an issue originates from Vite, please report it in the [Vite issue tracker](https://github.com/vitejs/vite/issues).

## Contributing

See [CONTRIBUTING.md](./CONTRIBUTING.md) for information on how to develop SvelteKit locally.

## Supporting Svelte

Svelte is an MIT-licensed open source project with its ongoing development made possible entirely by fantastic volunteers. If you&#039;d like to support their efforts, please consider:

- [Becoming a backer on Open Collective](https://opencollective.com/svelte).

Funds donated via Open Collective will be used for compensating expenses related to Svelte&#039;s development such as hosting costs. If sufficient donations are received, funds may also be used to support Svelte&#039;s development more directly.

## License

[MIT](https://github.com/sveltejs/kit/blob/main/LICENSE)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[asgeirtj/system_prompts_leaks]]></title>
            <link>https://github.com/asgeirtj/system_prompts_leaks</link>
            <guid>https://github.com/asgeirtj/system_prompts_leaks</guid>
            <pubDate>Thu, 14 Aug 2025 00:04:41 GMT</pubDate>
            <description><![CDATA[Collection of extracted System Prompts from popular chatbots like ChatGPT, Claude & Gemini]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/asgeirtj/system_prompts_leaks">asgeirtj/system_prompts_leaks</a></h1>
            <p>Collection of extracted System Prompts from popular chatbots like ChatGPT, Claude & Gemini</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,285</p>
            <p>Forks: 1,851</p>
            <p>Stars today: 38 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[microsoft/Web-Dev-For-Beginners]]></title>
            <link>https://github.com/microsoft/Web-Dev-For-Beginners</link>
            <guid>https://github.com/microsoft/Web-Dev-For-Beginners</guid>
            <pubDate>Thu, 14 Aug 2025 00:04:40 GMT</pubDate>
            <description><![CDATA[24 Lessons, 12 Weeks, Get Started as a Web Developer]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/microsoft/Web-Dev-For-Beginners">microsoft/Web-Dev-For-Beginners</a></h1>
            <p>24 Lessons, 12 Weeks, Get Started as a Web Developer</p>
            <p>Language: JavaScript</p>
            <p>Stars: 91,296</p>
            <p>Forks: 13,861</p>
            <p>Stars today: 59 stars today</p>
            <h2>README</h2><pre>[![GitHub license](https://img.shields.io/github/license/microsoft/Web-Dev-For-Beginners.svg)](https://github.com/microsoft/Web-Dev-For-Beginners/blob/master/LICENSE)
[![GitHub contributors](https://img.shields.io/github/contributors/microsoft/Web-Dev-For-Beginners.svg)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/graphs/contributors/)
[![GitHub issues](https://img.shields.io/github/issues/microsoft/Web-Dev-For-Beginners.svg)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/issues/)
[![GitHub pull-requests](https://img.shields.io/github/issues-pr/microsoft/Web-Dev-For-Beginners.svg)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/pulls/)
[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)

[![GitHub watchers](https://img.shields.io/github/watchers/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;label=Watch&amp;maxAge=2592000)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/watchers/)
[![GitHub forks](https://img.shields.io/github/forks/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;label=Fork&amp;maxAge=2592000)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/network/)
[![GitHub stars](https://img.shields.io/github/stars/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;label=Star&amp;maxAge=2592000)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/stargazers/)

[![](https://dcbadge.vercel.app/api/server/ByRwuEEgH4)](https://discord.gg/zxKYvhSnVp?WT.mc_id=academic-000002-leestott)

[![Open in Visual Studio Code](https://img.shields.io/static/v1?logo=visualstudiocode&amp;label=&amp;message=Open%20in%20Visual%20Studio%20Code&amp;labelColor=2c2c32&amp;color=007acc&amp;logoColor=007acc)](https://open.vscode.dev/microsoft/Web-Dev-For-Beginners)

# Web Development for Beginners - A Curriculum

Learn the fundamentals of web development with our 12-week comprehensive course by Microsoft Cloud Advocates. Each of the 24 lessons dives into JavaScript, CSS, and HTML through hands-on projects like terrariums, browser extensions, and space games. Engage with quizzes, discussions, and practical assignments. Enhance your skills and optimize your knowledge retention with our effective project-based pedagogy. Start your coding journey today!

#### 🧑‍🎓 _Are you a student?_

Visit [**Student Hub page**](https://docs.microsoft.com/learn/student-hub/?WT.mc_id=academic-77807-sagibbon) where you will find beginner resources, Student packs and even ways to get a free certificate voucher. This is the page you want to bookmark and check from time to time as we switch out content monthly.

### 📣 Announcement - _New Curriculum_ on Generative AI for JavaScript was just released

Don&#039;t miss our new Generative AI curriculum!

Visit [https://aka.ms/genai-js-course](https://aka.ms/genai-js-course) to get started!

&lt;div&gt;
  &lt;img src=&quot;./images/background.png&quot; width=&quot;600px&quot; /&gt;
&lt;/div&gt;

- Lessons covering everything from basics to RAG.
- Interact with historical characters using GenAI and our companion app.
- Fun and engaging narrative, you&#039;ll be time traveling!

&lt;div&gt;
  &lt;img src=&quot;./images/character.png&quot; width=&quot;600px&quot; /&gt;
&lt;/div&gt;

Each lesson includes an assignment to complete, a knowledge check and a challenge to guide you on learning topics like:
- Prompting and prompt engineering
- Text and image app generation
- Search apps

Visit [https://aka.ms/genai-js-course]([https://aka.ms/genai-js-course) to get started!



## 🌱 Getting Started

&gt; **Teachers**, we have [included some suggestions](for-teachers.md) on how to use this curriculum. We&#039;d love your feedback [in our discussion forum](https://github.com/microsoft/Web-Dev-For-Beginners/discussions/categories/teacher-corner)!

**[Learners](https://aka.ms/student-page/?WT.mc_id=academic-77807-sagibbon)**, for each lesson, start with a pre-lecture quiz and follow through with reading the lecture material, completing the various activities and check your understanding with the post-lecture quiz.

To enhance your learning experience, connect with your peers to work on the projects together! Discussions are encouraged in our [discussion forum](https://github.com/microsoft/Web-Dev-For-Beginners/discussions) where our team of moderators will be available to answer your questions.

To further your education, we highly recommend exploring [Microsoft Learn](https://learn.microsoft.com/users/wirelesslife/collections/p1ddcy5jwy0jkm?WT.mc_id=academic-77807-sagibbon) for additional study materials.

### 📋 Setting up your environment

This curriculum has a development environment ready to go! As you get started you can choose to run the curriculum in a [Codespace](https://github.com/features/codespaces/) (_a browser-based, no installs needed environment_), or locally on your computer using a text editor such as [Visual Studio Code](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon).

#### Create your repository
For you to easily save your work, it is recommended that you create your own copy of this repository. You can do this by clicking the **Use this template** button at the top of the page. This will create a new repository in your GitHub account with a copy of the curriculum.

Follow these steps:
1. **Fork the Repository**: Click on the &quot;Fork&quot; button at the top-right corner of this page.
2. **Clone the Repository**:   `git clone https://github.com/microsoft/Web-Dev-For-Beginners.git`

#### Running the curriculum in a Codespace

In your copy of this repository that you created, click the **Code** button and select **Open with Codespaces**. This will create a new Codespace for you to work in.

&lt;img src=&quot;./images/createcodespace.png&quot; alt=&quot;Create codespace&quot; style=&quot;width:270px;&quot;/&gt;

#### Running the curriculum locally on your computer

To run this curriculum locally on your computer, you will need a text editor, a browser and a command line tool. Our first lesson, [Introduction to Programming Languages and Tools of the Trade](https://github.com/microsoft/Web-Dev-For-Beginners/tree/main/1-getting-started-lessons/1-intro-to-programming-languages), will walk you through various options for each of these tools for you to select what works best for you.

Our recommendation is to use [Visual Studio Code](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon) as your editor, which also has a built-in [Terminal](https://code.visualstudio.com/docs/terminal/basics/?WT.mc_id=academic-77807-sagibbon). You can download Visual Studio Code [here](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon).


1. Clone your repository to your computer. You can do this by clicking the **Code** button and copying the URL:

    &lt;img src=&quot;./images/createcodespace.png&quot; alt=&quot;Copy your repository URL&quot; style=&quot;width:270px;&quot;/&gt;

    Then, open [Terminal](https://code.visualstudio.com/docs/terminal/basics/?WT.mc_id=academic-77807-sagibbon) within [Visual Studio Code](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon) and run the following command, replacing `&lt;your-repository-url&gt;` with the URL you just copied:

    ```bash 
    git clone &lt;your-repository-url&gt;
    ```

2. Open the folder in Visual Studio Code. You can do this by clicking **File** &gt; **Open Folder** and selecting the folder you just cloned.


&gt;  Recommended Visual Studio Code extensions:
&gt;
&gt; * [Live Server](https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer&amp;WT.mc_id=academic-77807-sagibbon) - to preview HTML pages within Visual Studio Code
&gt; * [Copilot](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot&amp;WT.mc_id=academic-77807-sagibbon) - to help you write code faster

## 📂 Each lesson includes:

- optional sketchnote
- optional supplemental video
- pre-lesson warmup quiz
- written lesson
- for project-based lessons, step-by-step guides on how to build the project
- knowledge checks
- a challenge
- supplemental reading
- assignment
- post-lesson quiz

&gt; **A note about quizzes**: All quizzes are contained in the Quiz-app folder, 48 total quizzes of three questions each. They are linked from within the lessons the quiz app can be run locally or deployed to Azure; follow the instruction in the `quiz-app` folder. They are gradually being localized.

## 🗃️ Lessons

|     |                       Project Name                       |                            Concepts Taught                             | Learning Objectives                                                                                                                 |                                                         Linked Lesson                                                          |         Author          |
| :-: | :------------------------------------------------------: | :--------------------------------------------------------------------: | ----------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------: | :---------------------: |
| 01  |                     Getting Started                      |           Introduction to Programming and Tools of the Trade           | Learn the basic underpinnings behind most programming languages and about software that helps professional developers do their jobs | [Intro to Programming Languages and Tools of the Trade](/1-getting-started-lessons/1-intro-to-programming-languages/README.md) |         Jasmine         |
| 02  |                     Getting Started                      |             Basics of GitHub, includes working with a team             | How to use GitHub in your project, how to collaborate with others on a code base                                                    |                            [Intro to GitHub](/1-getting-started-lessons/2-github-basics/README.md)                             |          Floor          |
| 03  |                     Getting Started                      |                             Accessibility                              | Learn the basics of web accessibility                                                                                               |                       [Accessibility Fundamentals](/1-getting-started-lessons/3-accessibility/README.md)                       |       Christopher       |
| 04  |                        JS Basics                         |                         JavaScript Data Types                          | The basics of JavaScript data types                                                                                                 |                                       [Data Types](/2-js-basics/1-data-types/README.md)                                        |         Jasmine         |
| 05  |                        JS Basics                         |                         Functions and Methods                          | Learn about functions and methods to manage an application&#039;s logic flow                                                             |                              [Functions and Methods](/2-js-basics/2-functions-methods/README.md)                               | Jasmine and Christopher |
| 06  |                        JS Basics                         |                        Making Decisions with JS                        | Learn how to create conditions in your code using decision-making methods                                                           |                                 [Making Decisions](/2-js-basics/3-making-decisions/README.md)                                  |         Jasmine         |
| 07  |                        JS Basics                         |                            Arrays and Loops                            | Work with data using arrays and loops in JavaScript                                                                                 |                                   [Arrays and Loops](/2-js-basics/4-arrays-loops/README.md)                                    |         Jasmine         |
| 08  |       [Terrarium](/3-terrarium/solution/README.md)       |                            HTML in Practice                            | Build the HTML to create an online terrarium, focusing on building a layout                                                         |                                 [Introduction to HTML](/3-terrarium/1-intro-to-html/README.md)                                 |           Jen           |
| 09  |       [Terrarium](/3-terrarium/solution/README.md)       |                            CSS in Practice                             | Build the CSS to style the online terrarium, focusing on the basics of CSS including making the page responsive                     |                                  [Introduction to CSS](/3-terrarium/2-intro-to-css/README.md)                                  |           Jen           |
| 10  |            [Terrarium](/3-terrarium/solution/README.md)            |                 JavaScript Closures, DOM manipulation                  | Build the JavaScript to make the terrarium function as a drag/drop interface, focusing on closures and DOM manipulation             |                  [JavaScript Closures, DOM manipulation](/3-terrarium/3-intro-to-DOM-and-closures/README.md)                   |           Jen           |
| 11  |          [Typing Game](/4-typing-game/solution/README.md)          |                          Build a Typing Game                           | Learn how to use keyboard events to drive the logic of your JavaScript app                                                          |                                [Event-Driven Programming](/4-typing-game/typing-game/README.md)                                |       Christopher       |
| 12  | [Green Browser Extension](/5-browser-extension/solution/README.md) |                         Working with Browsers                          | Learn how browsers work, their history, and how to scaffold the first elements of a browser extension                               |                               [About Browsers](/5-browser-extension/1-about-browsers/README.md)                                |           Jen           |
| 13  | [Green Browser Extension](/5-browser-extension/solution/README.md) | Building a form, calling an API and storing variables in local storage | Build the JavaScript elements of your browser extension to call an API using variables stored in local storage                      |                [APIs, Forms, and Local Storage](/5-browser-extension/2-forms-browsers-local-storage/README.md)                 |           Jen           |
| 14  | [Green Browser Extension](/5-browser-extension/solution/README.md) |          Background processes in the browser, web performance          | Use the browser&#039;s background processes to manage the extension&#039;s icon; learn about web performance and some optimizations to make   |             [Background Tasks and Performance](/5-browser-extension/3-background-tasks-and-performance/README.md)              |           Jen           |
| 15  |           [Space Game](/6-space-game/solution/README.md)           |             More Advanced Game Development with JavaScript             | Learn about Inheritance using both Classes and Composition and the Pub/Sub pattern, in preparation for building a game              |                      [Introduction to Advanced Game Development](/6-space-game/1-introduction/README.md)                       |          Chris          |
| 16  |           [Space Game](/6-space-game/solution/README.md)           |                           Drawing to canvas                            | Learn about the Canvas API, used to draw elements to a screen                                                                       |                                [Drawing to Canvas](/6-space-game/2-drawing-to-canvas/README.md)                                |          Chris          |
| 17  |           [Space Game](/6-space-game/solution/README.md)           |                   Moving elements around the screen                    | Discover how elements can gain motion using the cartesian coordinates and the Canvas API                                            |                           [Moving Elements Around](/6-space-game/3-moving-elements-around/README.md)                           |          Chris          |
| 18  |           [Space Game](/6-space-game/solution/README.md)           |                          Collision detection                           | Make elements collide and react to each other using keypresses and provide a cooldown function to ensure performance of the game    |                              [Collision Detection](/6-space-game/4-collision-detection/README.md)                              |          Chris          |
| 19  |           [Space Game](/6-space-game/solution/README.md)           |                             Keeping score                              | Perform math calculations based on the game&#039;s status and performance                                                                |                                    [Keeping Score](/6-space-game/5-keeping-score/README.md)                                    |          Chris          |
| 20  |           [Space Game](/6-space-game/solution/README.md)           |                     Ending and restarting the game                     | Learn about ending and restarting the game, including cleaning up assets and resetting variable values                              |                                [The Ending Condition](/6-space-game/6-end-condition/README.md)                                 |          Chris          |
| 21  |         [Banking App](/7-bank-project/solution/README.md)          |                 HTML Templates and Routes in a Web App                 | Learn how to create the scaffold of a multipage website&#039;s architecture using routing and HTML templates                             |                            [HTML Templates and Routes](/7-bank-project/1-template-route/README.md)                             |          Yohan          |
| 22  |         [Banking App](/7-bank-project/solution/README.md)          |                  Build a Login and Registration Form                   | Learn about building forms and handling validation routines                                                                          |                                           [Forms](/7-bank-project/2-forms/README.md)                                           |          Yohan          |
| 23  |         [Banking App](/7-bank-project/solution/README.md)          |                   Methods of Fetching and Using Data                   | How data flows in and out of your app, how to fetch it, store it, and dispose of it                                                 |                                            [Data](/7-bank-project/3-data/README.md)                                            |          Yohan          |
| 24  |         [Banking App](/7-bank-project/solution/README.md)          |                      Concepts of State Management                      | Learn how your app retains state and how to manage it programmatically                                                              |                                [State Management](/7-bank-project/4-state-management/README.md)                                |          Yohan          |


## 🏫 Pedagogy

Our curriculum is designed with two key pedagogical principles in mind:
* project-based learning
* frequent quizzes

The program teaches the fundamentals of JavaScript, HTML, and CSS, as well as the latest tools and techniques used by today&#039;s web developers. Students will have the opportunity to develop hands-on experience by building a typing game, virtual terrarium, eco-friendly browser extension, space-invader-style game, and a banking app for businesses. By the end of the 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[f/awesome-chatgpt-prompts]]></title>
            <link>https://github.com/f/awesome-chatgpt-prompts</link>
            <guid>https://github.com/f/awesome-chatgpt-prompts</guid>
            <pubDate>Thu, 14 Aug 2025 00:04:39 GMT</pubDate>
            <description><![CDATA[This repo includes ChatGPT prompt curation to use ChatGPT and other LLM tools better.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/f/awesome-chatgpt-prompts">f/awesome-chatgpt-prompts</a></h1>
            <p>This repo includes ChatGPT prompt curation to use ChatGPT and other LLM tools better.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 132,495</p>
            <p>Forks: 17,582</p>
            <p>Stars today: 63 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
&lt;img width=&quot;395&quot; alt=&quot;prompts.chat&quot; src=&quot;https://github.com/user-attachments/assets/e0d0e32d-d2ce-4459-9f37-e951d9f4f5de&quot; /&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;Sponsors&lt;/h3&gt;

&lt;div align=&quot;center&quot;&gt;

  &lt;a href=&quot;https://clemta.com&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;50&quot; alt=&quot;Clemta logo&quot; src=&quot;https://clemta.com/wp-content/uploads/2023/03/logo-clemta-com-1.png.webp&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;sub&gt;With Clemta, you can run your company from the comfort of your home.&lt;/sub&gt;
&lt;hr&gt;
  &lt;a href=&quot;https://github.com/f/mcptools&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;60&quot; alt=&quot;Hugging Face logo&quot; src=&quot;https://github.com/f/mcptools/raw/master/.github/resources/logo.png&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;sub&gt;If you&#039;re building MCPs, &lt;a href=&quot;https://github.com/f/mcptools&quot;&gt;MCP Tools&lt;/a&gt; is a Swiss-army knife for MCP Servers.&lt;/sub&gt;
&lt;hr&gt;
  &lt;sub&gt;&lt;a href=&quot;https://github.com/sponsors/f/sponsorships?sponsor=f&amp;amp;tier_id=319423&quot;&gt;Be my sponsor and your logo will be here!&lt;/a&gt;&lt;/sub&gt;
&lt;/div&gt;

---
[![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)

Welcome to the &quot;Awesome ChatGPT Prompts&quot; repository! While this collection was originally created for [ChatGPT](https://chat.openai.com/chat), these prompts work great with other AI models like [Claude](https://claude.ai/new), [Gemini](https://gemini.google.com), [Hugging Face Chat](https://hf.co/chat), [Llama](https://meta.ai), [Mistral](https://chat.mistral.ai), and more.

[ChatGPT](https://chat.openai.com/chat) is a web interface created by [OpenAI](https://openai.com) that provides access to their GPT (Generative Pre-trained Transformer) language models. The underlying models, like GPT-4o and GPT-o1, are large language models trained on vast amounts of text data that can understand and generate human-like text. Like other AI chat interfaces, you can provide prompts and have natural conversations with the AI, which will generate contextual responses based on the conversation history and your inputs.

In this repository, you will find a variety of prompts that can be used with ChatGPT and other AI chat models. We encourage you to [add your own prompts](https://github.com/f/awesome-chatgpt-prompts/edit/main/README.md) to the list, and to use AI to help generate new prompts as well.

To get started, simply clone this repository and use the prompts in the README.md file as input for your preferred AI chat model. You can also use the prompts in this file as inspiration for creating your own.

We hope you find these prompts useful and have fun exploring AI chat models!

**[View on prompts.chat](https://prompts.chat)**

**[View on Hugging Face](https://huggingface.co/datasets/fka/awesome-chatgpt-prompts/)**
---

&gt; ℹ️ **NOTE:** Sometimes, some of the prompts may not be working as you expected
&gt; or may be rejected by the AI. Please try again, start a new thread, or log out
&gt; and log back in. If these solutions do not work, please try rewriting the
&gt; prompt using your own sentences while keeping the instructions same.

### Want to Write Effective Prompts?

I&#039;ve authored an e-book called **&quot;The Art of ChatGPT Prompting: A Guide to
Crafting Clear and Effective Prompts&quot;**.

📖 **[Read the e-book](https://fka.gumroad.com/l/art-of-chatgpt-prompting)**

### Want to Learn How to Make Money using ChatGPT Prompts?

I&#039;ve authored an e-book called **&quot;How to Make Money with ChatGPT: Strategies,
Tips, and Tactics&quot;**.

📖
**[Buy the e-book](https://fka.gumroad.com/l/how-to-make-money-with-chatgpt)**

### Want to Learn How to write image prompts for Midjourney AI?

I&#039;ve authored an e-book called **&quot;The Art of Midjourney AI: A Guide to Creating
Images from Text&quot;**.

📖
**[Read the e-book](https://fka.gumroad.com/l/the-art-of-midjourney-ai-guide-to-creating-images-from-text)**

---

### Using prompts.chat

[prompts.chat](https://prompts.chat) is designed to provide an enhanced UX when
working with prompts. With just a few clicks, you can easily edit and copy the
prompts on the site to fit your specific needs and preferences.

&lt;img width=&quot;1400&quot; alt=&quot;Screenshot 2025-01-05 at 22 17 19&quot; src=&quot;https://github.com/user-attachments/assets/272d2092-b651-452a-a049-f46b31c32889&quot; /&gt;

---

## Unmerged Prompts

There are many Pull Requests to this repository waiting to be merged. There are
many hidden gems there. Take a look!

📖
**[View Unmerged Prompts](https://github.com/f/awesome-chatgpt-prompts/pulls)**

---

# Prompts

## Act as an Ethereum Developer

Contributed by: [@ameya-2003](https://github.com/Ameya-2003) Reference:
[The BlockChain Messenger](https://github.com/Ameya-2003/BlockChain/blob/main/Projects/The%20BlockChain%20Messenger.sol)

&gt; Imagine you are an experienced Ethereum developer tasked with creating a smart
&gt; contract for a blockchain messenger. The objective is to save messages on the
&gt; blockchain, making them readable (public) to everyone, writable (private) only
&gt; to the person who deployed the contract, and to count how many times the
&gt; message was updated. Develop a Solidity smart contract for this purpose,
&gt; including the necessary functions and considerations for achieving the
&gt; specified goals. Please provide the code and any relevant explanations to
&gt; ensure a clear understanding of the implementation.

## Act as a Linux Terminal

Contributed by: [@f](https://github.com/f) Reference:
[https://www.engraved.blog/building-a-virtual-machine-inside/](https://www.engraved.blog/building-a-virtual-machine-inside/)

&gt; I want you to act as a linux terminal. I will type commands and you will reply
&gt; with what the terminal should show. I want you to only reply with the terminal
&gt; output inside one unique code block, and nothing else. do not write
&gt; explanations. do not type commands unless I instruct you to do so. When I need
&gt; to tell you something in English, I will do so by putting text inside curly
&gt; brackets {like this}. My first command is pwd

## Act as an English Translator and Improver

Contributed by: [@f](https://github.com/f) **Alternative to**: Grammarly, Google
Translate

&gt; I want you to act as an English translator, spelling corrector and improver. I
&gt; will speak to you in any language and you will detect the language, translate
&gt; it and answer in the corrected and improved version of my text, in English. I
&gt; want you to replace my simplified A0-level words and sentences with more
&gt; beautiful and elegant, upper level English words and sentences. Keep the
&gt; meaning same, but make them more literary. I want you to only reply the
&gt; correction, the improvements and nothing else, do not write explanations. My
&gt; first sentence is &quot;istanbulu cok seviyom burada olmak cok guzel&quot;

## Act as Job Interviewer

Contributed by: [@f](https://github.com/f) &amp;
[@iltekin](https://github.com/iltekin) **Examples**: Node.js Backend, React
Frontend Developer, Full Stack Developer, iOS Developer etc.

&gt; I want you to act as an interviewer. I will be the candidate and you will ask
&gt; me the interview questions for the ${Position:JavaScript Developer} position. I want you to only
&gt; reply as the interviewer. Do not write all the conversation at once. I want
&gt; you to only do the interview with me. Ask me the questions and wait for my
&gt; answers. Do not write explanations. Ask me the questions one by one like an
&gt; interviewer does and wait for my answers. My first sentence is &quot;Hi&quot;

## Act as a JavaScript Console

Contributed by: [@omerimzali](https://github.com/omerimzali)

&gt; I want you to act as a javascript console. I will type commands and you will
&gt; reply with what the javascript console should show. I want you to only reply
&gt; with the terminal output inside one unique code block, and nothing else. do
&gt; not write explanations. do not type commands unless I instruct you to do so.
&gt; when I need to tell you something in english, I will do so by putting text
&gt; inside curly brackets {like this}. My first command is console.log(&quot;Hello
&gt; World&quot;);

## Act as an Excel Sheet

Contributed by: [@f](https://github.com/f)

&gt; I want you to act as a text based excel. You&#039;ll only reply me the text-based
&gt; 10 rows excel sheet with row numbers and cell letters as columns (A to L).
&gt; First column header should be empty to reference row number. I will tell you
&gt; what to write into cells and you&#039;ll reply only the result of excel table as
&gt; text, and nothing else. Do not write explanations. I will write you formulas
&gt; and you&#039;ll execute formulas and you&#039;ll only reply the result of excel table as
&gt; text. First, reply me the empty sheet.

## Act as an English Pronunciation Helper

Contributed by: [@f](https://github.com/f)

&gt; I want you to act as an English pronunciation assistant for Turkish speaking
&gt; people. I will write you sentences and you will only answer their
&gt; pronunciations, and nothing else. The replies must not be translations of my
&gt; sentence but only pronunciations. Pronunciations should use Turkish Latin
&gt; letters for phonetics. Do not write explanations on replies. My first sentence
&gt; is &quot;how the weather is in Istanbul?&quot;

## Act as a Spoken English Teacher and Improver

Contributed by: [@ATX735](https://github.com/ATX735)

&gt; I want you to act as a spoken English teacher and improver. I will speak to
&gt; you in English and you will reply to me in English to practice my spoken
&gt; English. I want you to keep your reply neat, limiting the reply to 100 words.
&gt; I want you to strictly correct my grammar mistakes, typos, and factual errors.
&gt; I want you to ask me a question in your reply. Now let&#039;s start practicing, you
&gt; could ask me a question first. Remember, I want you to strictly correct my
&gt; grammar mistakes, typos, and factual errors.

## Act as a Travel Guide

Contributed by: [@koksalkapucuoglu](https://github.com/koksalkapucuoglu)

&gt; I want you to act as a travel guide. I will write you my location and you will
&gt; suggest a place to visit near my location. In some cases, I will also give you
&gt; the type of places I will visit. You will also suggest me places of similar
&gt; type that are close to my first location. My first suggestion request is &quot;I am
&gt; in Istanbul/Beyoğlu and I want to visit only museums.&quot;

## Act as a Plagiarism Checker

Contributed by: [@yetk1n](https://github.com/yetk1n)

&gt; I want you to act as a plagiarism checker. I will write you sentences and you
&gt; will only reply undetected in plagiarism checks in the language of the given
&gt; sentence, and nothing else. Do not write explanations on replies. My first
&gt; sentence is &quot;For computers to behave like humans, speech recognition systems
&gt; must be able to process nonverbal information, such as the emotional state of
&gt; the speaker.&quot;

## Act as Character

Contributed by: [@BRTZL](https://github.com/BRTZL)
[@mattsq](https://github.com/mattsq)

&gt; I want you to act like ${Character: Anakin Skywalker} from ${Series: Star Wars}. I want you to respond and
&gt; answer like ${Character: Anakin Skywalker} using the tone, manner and vocabulary ${Character: Anakin Skywalker}
&gt; would use. Do not write any explanations. Only answer like ${Character: Anakin Skywalker}. You
&gt; must know all of the knowledge of ${Character: Anakin Skywalker}. My first sentence is &quot;Hi
&gt; ${Character: Anakin Skywalker}.&quot;

## Act as an Advertiser

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as an advertiser. You will create a campaign to promote a
&gt; product or service of your choice. You will choose a target audience, develop
&gt; key messages and slogans, select the media channels for promotion, and decide
&gt; on any additional activities needed to reach your goals. My first suggestion
&gt; request is &quot;I need help creating an advertising campaign for a new type of
&gt; energy drink targeting young adults aged 18-30.&quot;

## Act as a Storyteller

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a storyteller. You will come up with entertaining stories
&gt; that are engaging, imaginative and captivating for the audience. It can be
&gt; fairy tales, educational stories or any other type of stories which has the
&gt; potential to capture people&#039;s attention and imagination. Depending on the
&gt; target audience, you may choose specific themes or topics for your
&gt; storytelling session e.g., if it’s children then you can talk about animals;
&gt; If it’s adults then history-based tales might engage them better etc. My first
&gt; request is &quot;I need an interesting story on perseverance.&quot;

## Act as a Football Commentator

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a football commentator. I will give you descriptions of
&gt; football matches in progress and you will commentate on the match, providing
&gt; your analysis on what has happened thus far and predicting how the game may
&gt; end. You should be knowledgeable of football terminology, tactics,
&gt; players/teams involved in each match, and focus primarily on providing
&gt; intelligent commentary rather than just narrating play-by-play. My first
&gt; request is &quot;I&#039;m watching Manchester United vs Chelsea - provide commentary for
&gt; this match.&quot;

## Act as a Stand-up Comedian

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a stand-up comedian. I will provide you with some topics
&gt; related to current events and you will use your wit, creativity, and
&gt; observational skills to create a routine based on those topics. You should
&gt; also be sure to incorporate personal anecdotes or experiences into the routine
&gt; in order to make it more relatable and engaging for the audience. My first
&gt; request is &quot;I want a humorous take on politics.&quot;

## Act as a Motivational Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a motivational coach. I will provide you with some
&gt; information about someone&#039;s goals and challenges, and it will be your job to
&gt; come up with strategies that can help this person achieve their goals. This
&gt; could involve providing positive affirmations, giving helpful advice or
&gt; suggesting activities they can do to reach their end goal. My first request is
&gt; &quot;I need help motivating myself to stay disciplined while studying for an
&gt; upcoming exam&quot;.

## Act as a Composer

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a composer. I will provide the lyrics to a song and you
&gt; will create music for it. This could include using various instruments or
&gt; tools, such as synthesizers or samplers, in order to create melodies and
&gt; harmonies that bring the lyrics to life. My first request is &quot;I have written a
&gt; poem named “Hayalet Sevgilim” and need music to go with it.&quot;

## Act as a Debater

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a debater. I will provide you with some topics related to
&gt; current events and your task is to research both sides of the debates, present
&gt; valid arguments for each side, refute opposing points of view, and draw
&gt; persuasive conclusions based on evidence. Your goal is to help people come
&gt; away from the discussion with increased knowledge and insight into the topic
&gt; at hand. My first request is &quot;I want an opinion piece about Deno.&quot;

## Act as a Debate Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a debate coach. I will provide you with a team of
&gt; debaters and the motion for their upcoming debate. Your goal is to prepare the
&gt; team for success by organizing practice rounds that focus on persuasive
&gt; speech, effective timing strategies, refuting opposing arguments, and drawing
&gt; in-depth conclusions from evidence provided. My first request is &quot;I want our
&gt; team to be prepared for an upcoming debate on whether front-end development is
&gt; easy.&quot;

## Act as a Screenwriter

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a screenwriter. You will develop an engaging and creative
&gt; script for either a feature length film, or a Web Series that can captivate
&gt; its viewers. Start with coming up with interesting characters, the setting of
&gt; the story, dialogues between the characters etc. Once your character
&gt; development is complete - create an exciting storyline filled with twists and
&gt; turns that keeps the viewers in suspense until the end. My first request is &quot;I
&gt; need to write a romantic drama movie set in Paris.&quot;

## Act as a Novelist

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a novelist. You will come up with creative and
&gt; captivating stories that can engage readers for long periods of time. You may
&gt; choose any genre such as fantasy, romance, historical fiction and so on - but
&gt; the aim is to write something that has an outstanding plotline, engaging
&gt; characters and unexpected climaxes. My first request is &quot;I need to write a
&gt; science-fiction novel set in the future.&quot;

## Act as a Movie Critic

Contributed by: [@nuc](https://github.com/nuc)

&gt; I want you to act as a movie critic. You will develop an engaging and creative
&gt; movie review. You can cover topics like plot, themes and tone, acting and
&gt; characters, direction, score, cinematography, production design, special
&gt; effects, editing, pace, dialog. The most important aspect though is to
&gt; emphasize how the movie has made you feel. What has really resonated with you.
&gt; You can also be critical about the movie. Please avoid spoilers. My first
&gt; request is &quot;I need to write a movie review for the movie Interstellar&quot;

## Act as a Relationship Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a relationship coach. I will provide some details about
&gt; the two people involved in a conflict, and it will be your job to come up with
&gt; suggestions on how they can work through the issues that are separating them.
&gt; This could include advice on communication techniques or different strategies
&gt; for improving their understanding of one another&#039;s perspectives. My first
&gt; request is &quot;I need help solving conflicts between my spouse and myself.&quot;

## Act as a Poet

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a poet. You will create poems that evoke emotions and
&gt; have the power to stir people’s soul. Write on any topic or theme but make
&gt; sure your words convey the feeling you are trying to express in beautiful yet
&gt; meaningful ways. You can also come up with short verses that are still
&gt; powerful enough to leave an imprint in readers&#039; minds. My first request is &quot;I
&gt; need a poem about love.&quot;

## Act as a Rapper

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a rapper. You will come up with powerful and meaningful
&gt; lyrics, beats and rhythm that can ‘wow’ the audience. Your lyrics should have
&gt; an intriguing meaning and message which people can relate too. When it comes
&gt; to choosing your beat, make sure it is catchy yet relevant to your words, so
&gt; that when combined they make an explosion of sound everytime! My first request
&gt; is &quot;I need a rap song about finding strength within yourself.&quot;

## Act as a Motivational Speaker

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a motivational speaker. Put together words that inspire
&gt; action and make people feel empowered to do something beyond their abilities.
&gt; You can talk about any topics but the aim is to make sure what you say
&gt; resonates with your audience, giving them an incentive to work on their goals
&gt; and strive for better possibilities. My first request is &quot;I need a speech
&gt; about how everyone should never give up.&quot;

## Act as a Philosophy Teacher

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a philosophy teacher. I will provide some topics related
&gt; to the study of philosophy, and it will be your job to explain these concepts
&gt; in an easy-to-understand manner. This could include providing examples, posing
&gt; questions or bre

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[ConardLi/easy-dataset]]></title>
            <link>https://github.com/ConardLi/easy-dataset</link>
            <guid>https://github.com/ConardLi/easy-dataset</guid>
            <pubDate>Thu, 14 Aug 2025 00:04:38 GMT</pubDate>
            <description><![CDATA[A powerful tool for creating fine-tuning datasets for LLM]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ConardLi/easy-dataset">ConardLi/easy-dataset</a></h1>
            <p>A powerful tool for creating fine-tuning datasets for LLM</p>
            <p>Language: JavaScript</p>
            <p>Stars: 10,117</p>
            <p>Forks: 965</p>
            <p>Stars today: 55 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

![](./public//imgs/bg2.png)

&lt;img alt=&quot;GitHub Repo stars&quot; src=&quot;https://img.shields.io/github/stars/ConardLi/easy-dataset&quot;&gt;
&lt;img alt=&quot;GitHub Downloads (all assets, all releases)&quot; src=&quot;https://img.shields.io/github/downloads/ConardLi/easy-dataset/total&quot;&gt;
&lt;img alt=&quot;GitHub Release&quot; src=&quot;https://img.shields.io/github/v/release/ConardLi/easy-dataset&quot;&gt;
&lt;img src=&quot;https://img.shields.io/badge/license-AGPL--3.0-green.svg&quot; alt=&quot;AGPL 3.0 License&quot;/&gt;
&lt;img alt=&quot;GitHub contributors&quot; src=&quot;https://img.shields.io/github/contributors/ConardLi/easy-dataset&quot;&gt;
&lt;img alt=&quot;GitHub last commit&quot; src=&quot;https://img.shields.io/github/last-commit/ConardLi/easy-dataset&quot;&gt;
&lt;a href=&quot;https://arxiv.org/abs/2507.04009v1&quot; target=&quot;_blank&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/badge/arXiv-2507.04009-b31b1b.svg&quot; alt=&quot;arXiv:2507.04009&quot;&gt;
&lt;/a&gt;

&lt;a href=&quot;https://trendshift.io/repositories/13944&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/13944&quot; alt=&quot;ConardLi%2Feasy-dataset | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;

**A powerful tool for creating fine-tuning datasets for Large Language Models**

[简体中文](./README.zh-CN.md) | [English](./README.md)

[Features](#features) • [Quick Start](#local-run) • [Documentation](https://docs.easy-dataset.com/ed/en) • [Contributing](#contributing) • [License](#license)

If you like this project, please give it a Star⭐️, or buy the author a coffee =&gt; [Donate](./public/imgs/aw.jpg) ❤️!

&lt;/div&gt;

## Overview

Easy Dataset is an application specifically designed for creating fine-tuning datasets for Large Language Models (LLMs). It provides an intuitive interface for uploading domain-specific files, intelligently splitting content, generating questions, and producing high-quality training data for model fine-tuning.

With Easy Dataset, you can transform domain knowledge into structured datasets, compatible with all LLM APIs that follow the OpenAI format, making the fine-tuning process simple and efficient.

![](./public/imgs/en-arc.png)

## Features

- **Intelligent Document Processing**: Supports intelligent recognition and processing of multiple formats including PDF, Markdown, DOCX, etc.
- **Intelligent Text Splitting**: Supports multiple intelligent text splitting algorithms and customizable visual segmentation
- **Intelligent Question Generation**: Extracts relevant questions from each text segment
- **Domain Labels**: Intelligently builds global domain labels for datasets, with global understanding capabilities
- **Answer Generation**: Uses LLM API to generate comprehensive answers and Chain of Thought (COT)
- **Flexible Editing**: Edit questions, answers, and datasets at any stage of the process
- **Multiple Export Formats**: Export datasets in various formats (Alpaca, ShareGPT) and file types (JSON, JSONL)
- **Wide Model Support**: Compatible with all LLM APIs that follow the OpenAI format
- **User-Friendly Interface**: Intuitive UI designed for both technical and non-technical users
- **Custom System Prompts**: Add custom system prompts to guide model responses

## Quick Demo

https://github.com/user-attachments/assets/6ddb1225-3d1b-4695-90cd-aa4cb01376a8

## Local Run

### Download Client

&lt;table style=&quot;width: 100%&quot;&gt;
  &lt;tr&gt;
    &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt;
      &lt;b&gt;Windows&lt;/b&gt;
    &lt;/td&gt;
    &lt;td width=&quot;30%&quot; align=&quot;center&quot; colspan=&quot;2&quot;&gt;
      &lt;b&gt;MacOS&lt;/b&gt;
    &lt;/td&gt;
    &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt;
      &lt;b&gt;Linux&lt;/b&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;text-align: center&quot;&gt;
    &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
      &lt;a href=&#039;https://github.com/ConardLi/easy-dataset/releases/latest&#039;&gt;
        &lt;img src=&#039;./public/imgs/windows.png&#039; style=&quot;height:24px; width: 24px&quot; /&gt;
        &lt;br /&gt;
        &lt;b&gt;Setup.exe&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
      &lt;a href=&#039;https://github.com/ConardLi/easy-dataset/releases/latest&#039;&gt;
        &lt;img src=&#039;./public/imgs/mac.png&#039; style=&quot;height:24px; width: 24px&quot; /&gt;
        &lt;br /&gt;
        &lt;b&gt;Intel&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
      &lt;a href=&#039;https://github.com/ConardLi/easy-dataset/releases/latest&#039;&gt;
        &lt;img src=&#039;./public/imgs/mac.png&#039; style=&quot;height:24px; width: 24px&quot; /&gt;
        &lt;br /&gt;
        &lt;b&gt;M&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
      &lt;a href=&#039;https://github.com/ConardLi/easy-dataset/releases/latest&#039;&gt;
        &lt;img src=&#039;./public/imgs/linux.png&#039; style=&quot;height:24px; width: 24px&quot; /&gt;
        &lt;br /&gt;
        &lt;b&gt;AppImage&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

### Install with NPM

1. Clone the repository:

```bash
   git clone https://github.com/ConardLi/easy-dataset.git
   cd easy-dataset
```

2. Install dependencies:

```bash
   npm install
```

3. Start the development server:

```bash
   npm run build

   npm run start
```

4. Open your browser and visit `http://localhost:1717`

### Using the Official Docker Image

1. Clone the repository:

```bash
git clone https://github.com/ConardLi/easy-dataset.git
cd easy-dataset
```

2. Modify the `docker-compose.yml` file:

```yml
services:
  easy-dataset:
    image: ghcr.io/conardli/easy-dataset
    container_name: easy-dataset
    ports:
      - &#039;1717:1717&#039;
    volumes:
      - ${LOCAL_DB_PATH}:/app/local-db
      - ${LOCAL_PRISMA_PATH}:/app/prisma
    restart: unless-stopped
```

&gt; **Note:** Replace `{YOUR_LOCAL_DB_PATH}` and `{LOCAL_PRISMA_PATH}` with the actual paths where you want to store the local database. It is recommended to use the `local-db` and `prisma` folders in the current code repository directory to maintain consistency with the database paths when starting via NPM.

3. Start with docker-compose:

```bash
docker-compose up -d
```

4. Open a browser and visit `http://localhost:1717`

### Building with a Local Dockerfile

If you want to build the image yourself, use the Dockerfile in the project root directory:

1. Clone the repository:

```bash
git clone https://github.com/ConardLi/easy-dataset.git
cd easy-dataset
```

2. Build the Docker image:

```bash
docker build -t easy-dataset .
```

3. Run the container:

```bash
docker run -d \
  -p 1717:1717 \
  -v {YOUR_LOCAL_DB_PATH}:/app/local-db \
  -v {LOCAL_PRISMA_PATH}:/app/prisma \
  --name easy-dataset \
  easy-dataset
```

&gt; **Note:** Replace `{YOUR_LOCAL_DB_PATH}` and `{LOCAL_PRISMA_PATH}` with the actual paths where you want to store the local database. It is recommended to use the `local-db` and `prisma` folders in the current code repository directory to maintain consistency with the database paths when starting via NPM.

4. Open a browser and visit `http://localhost:1717`

## How to Use

### Create a Project

&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;&lt;img src=&quot;./public/imgs/1.png&quot;&gt;&lt;/td&gt;
        &lt;td&gt;&lt;img src=&quot;./public/imgs/2.png&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

1. Click the &quot;Create Project&quot; button on the homepage;
2. Enter a project name and description;
3. Configure your preferred LLM API settings

### Process Documents

&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;&lt;img src=&quot;./public/imgs/3.png&quot;&gt;&lt;/td&gt;
        &lt;td&gt;&lt;img src=&quot;./public/imgs/4.png&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

1. Upload your files in the &quot;Text Split&quot; section (supports PDF, Markdown, txt, DOCX);
2. View and adjust the automatically split text segments;
3. View and adjust the global domain tree

### Generate Questions

&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;&lt;img src=&quot;./public/imgs/5.png&quot;&gt;&lt;/td&gt;
        &lt;td&gt;&lt;img src=&quot;./public/imgs/6.png&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

2. Batch construct questions based on text blocks;
3. View and edit the generated questions;
4. Organize questions using the label tree

### Create Datasets

&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;&lt;img src=&quot;./public/imgs/7.png&quot;&gt;&lt;/td&gt;
        &lt;td&gt;&lt;img src=&quot;./public/imgs/8.png&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

1. Batch construct datasets based on questions;
2. Generate answers using the configured LLM;
3. View, edit, and optimize the generated answers

### Export Datasets

&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;&lt;img src=&quot;./public/imgs/9.png&quot;&gt;&lt;/td&gt;
        &lt;td&gt;&lt;img src=&quot;./public/imgs/10.png&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

1. Click the &quot;Export&quot; button in the Datasets section;
2. Choose your preferred format (Alpaca or ShareGPT);
3. Select the file format (JSON or JSONL);
4. Add custom system prompts as needed;
5. Export your dataset

## Documentation

- View the demo video of this project: [Easy Dataset Demo Video](https://www.bilibili.com/video/BV1y8QpYGE57/)
- For detailed documentation on all features and APIs, visit our [Documentation Site](https://docs.easy-dataset.com/ed/en)
- View the paper of this project: [Easy Dataset: A Unified and Extensible Framework for Synthesizing LLM Fine-Tuning Data from Unstructured Documents](https://arxiv.org/abs/2507.04009v1)

## Community Practice

- [Easy Dataset × LLaMA Factory: Enabling LLMs to Efficiently Learn Domain Knowledge](https://buaa-act.feishu.cn/wiki/GVzlwYcRFiR8OLkHbL6cQpYin7g)
- [Easy Dataset Practical Guide: How to Build High-Quality Datasets?](https://www.bilibili.com/video/BV1MRMnz1EGW)
- [Interpretation of Key Feature Updates in Easy Dataset](https://www.bilibili.com/video/BV1fyJhzHEb7/)
- [Foundation Models Fine-tuning Datasets: Basic Knowledge Popularization](https://docs.easy-dataset.com/zhi-shi-ke-pu)

## Contributing

We welcome contributions from the community! If you&#039;d like to contribute to Easy Dataset, please follow these steps:

1. Fork the repository
2. Create a new branch (`git checkout -b feature/amazing-feature`)
3. Make your changes
4. Commit your changes (`git commit -m &#039;Add some amazing feature&#039;`)
5. Push to the branch (`git push origin feature/amazing-feature`)
6. Open a Pull Request (submit to the DEV branch)

Please ensure that tests are appropriately updated and adhere to the existing coding style.

## Join Discussion Group &amp; Contact the Author

https://docs.easy-dataset.com/geng-duo/lian-xi-wo-men

## License

This project is licensed under the AGPL 3.0 License - see the [LICENSE](LICENSE) file for details.

## Citation

If this work is helpful, please kindly cite as:

```bibtex
@misc{miao2025easydataset,
  title={Easy Dataset: A Unified and Extensible Framework for Synthesizing LLM Fine-Tuning Data from Unstructured Documents},
  author={Ziyang Miao and Qiyu Sun and Jingyuan Wang and Yuchen Gong and Yaowei Zheng and Shiqi Li and Richong Zhang},
  year={2025},
  eprint={2507.04009},
  archivePrefix={arXiv},
  primaryClass={cs.CL},
  url={https://arxiv.org/abs/2507.04009}
}
```

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=ConardLi/easy-dataset&amp;type=Date)](https://www.star-history.com/#ConardLi/easy-dataset&amp;Date)

&lt;div align=&quot;center&quot;&gt;
  &lt;sub&gt;Built with ❤️ by &lt;a href=&quot;https://github.com/ConardLi&quot;&gt;ConardLi&lt;/a&gt; • Follow me: &lt;a href=&quot;./public/imgs/weichat.jpg&quot;&gt;WeChat Official Account&lt;/a&gt;｜&lt;a href=&quot;https://space.bilibili.com/474921808&quot;&gt;Bilibili&lt;/a&gt;｜&lt;a href=&quot;https://juejin.cn/user/3949101466785709&quot;&gt;Juejin&lt;/a&gt;｜&lt;a href=&quot;https://www.zhihu.com/people/wen-ti-chao-ji-duo-de-xiao-qi&quot;&gt;Zhihu&lt;/a&gt;｜&lt;a href=&quot;https://www.youtube.com/@garden-conard&quot;&gt;Youtube&lt;/a&gt;&lt;/sub&gt;
&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[hexgrad/kokoro]]></title>
            <link>https://github.com/hexgrad/kokoro</link>
            <guid>https://github.com/hexgrad/kokoro</guid>
            <pubDate>Thu, 14 Aug 2025 00:04:37 GMT</pubDate>
            <description><![CDATA[https://hf.co/hexgrad/Kokoro-82M]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/hexgrad/kokoro">hexgrad/kokoro</a></h1>
            <p>https://hf.co/hexgrad/Kokoro-82M</p>
            <p>Language: JavaScript</p>
            <p>Stars: 3,972</p>
            <p>Forks: 433</p>
            <p>Stars today: 19 stars today</p>
            <h2>README</h2><pre># kokoro

An inference library for [Kokoro-82M](https://huggingface.co/hexgrad/Kokoro-82M). You can [`pip install kokoro`](https://pypi.org/project/kokoro/).

&gt; **Kokoro** is an open-weight TTS model with 82 million parameters. Despite its lightweight architecture, it delivers comparable quality to larger models while being significantly faster and more cost-efficient. With Apache-licensed weights, Kokoro can be deployed anywhere from production environments to personal projects.

### Usage
You can run this basic cell on [Google Colab](https://colab.research.google.com/). [Listen to samples](https://huggingface.co/hexgrad/Kokoro-82M/blob/main/SAMPLES.md).
```py
!pip install -q kokoro&gt;=0.9.4 soundfile
!apt-get -qq -y install espeak-ng &gt; /dev/null 2&gt;&amp;1
from kokoro import KPipeline
from IPython.display import display, Audio
import soundfile as sf
import torch
pipeline = KPipeline(lang_code=&#039;a&#039;)
text = &#039;&#039;&#039;
[Kokoro](/kˈOkəɹO/) is an open-weight TTS model with 82 million parameters. Despite its lightweight architecture, it delivers comparable quality to larger models while being significantly faster and more cost-efficient. With Apache-licensed weights, [Kokoro](/kˈOkəɹO/) can be deployed anywhere from production environments to personal projects.
&#039;&#039;&#039;
generator = pipeline(text, voice=&#039;af_heart&#039;)
for i, (gs, ps, audio) in enumerate(generator):
    print(i, gs, ps)
    display(Audio(data=audio, rate=24000, autoplay=i==0))
    sf.write(f&#039;{i}.wav&#039;, audio, 24000)
```
Under the hood, `kokoro` uses [`misaki`](https://pypi.org/project/misaki/), a G2P library at https://github.com/hexgrad/misaki

### Advanced Usage
You can run this advanced cell on [Google Colab](https://colab.research.google.com/).
```py
# 1️⃣ Install kokoro
!pip install -q kokoro&gt;=0.9.4 soundfile
# 2️⃣ Install espeak, used for English OOD fallback and some non-English languages
!apt-get -qq -y install espeak-ng &gt; /dev/null 2&gt;&amp;1

# 3️⃣ Initalize a pipeline
from kokoro import KPipeline
from IPython.display import display, Audio
import soundfile as sf
import torch
# 🇺🇸 &#039;a&#039; =&gt; American English, 🇬🇧 &#039;b&#039; =&gt; British English
# 🇪🇸 &#039;e&#039; =&gt; Spanish es
# 🇫🇷 &#039;f&#039; =&gt; French fr-fr
# 🇮🇳 &#039;h&#039; =&gt; Hindi hi
# 🇮🇹 &#039;i&#039; =&gt; Italian it
# 🇯🇵 &#039;j&#039; =&gt; Japanese: pip install misaki[ja]
# 🇧🇷 &#039;p&#039; =&gt; Brazilian Portuguese pt-br
# 🇨🇳 &#039;z&#039; =&gt; Mandarin Chinese: pip install misaki[zh]
pipeline = KPipeline(lang_code=&#039;a&#039;) # &lt;= make sure lang_code matches voice, reference above.

# This text is for demonstration purposes only, unseen during training
text = &#039;&#039;&#039;
The sky above the port was the color of television, tuned to a dead channel.
&quot;It&#039;s not like I&#039;m using,&quot; Case heard someone say, as he shouldered his way through the crowd around the door of the Chat. &quot;It&#039;s like my body&#039;s developed this massive drug deficiency.&quot;
It was a Sprawl voice and a Sprawl joke. The Chatsubo was a bar for professional expatriates; you could drink there for a week and never hear two words in Japanese.

These were to have an enormous impact, not only because they were associated with Constantine, but also because, as in so many other areas, the decisions taken by Constantine (or in his name) were to have great significance for centuries to come. One of the main issues was the shape that Christian churches were to take, since there was not, apparently, a tradition of monumental church buildings when Constantine decided to help the Christian church build a series of truly spectacular structures. The main form that these churches took was that of the basilica, a multipurpose rectangular structure, based ultimately on the earlier Greek stoa, which could be found in most of the great cities of the empire. Christianity, unlike classical polytheism, needed a large interior space for the celebration of its religious services, and the basilica aptly filled that need. We naturally do not know the degree to which the emperor was involved in the design of new churches, but it is tempting to connect this with the secular basilica that Constantine completed in the Roman forum (the so-called Basilica of Maxentius) and the one he probably built in Trier, in connection with his residence in the city at a time when he was still caesar.

[Kokoro](/kˈOkəɹO/) is an open-weight TTS model with 82 million parameters. Despite its lightweight architecture, it delivers comparable quality to larger models while being significantly faster and more cost-efficient. With Apache-licensed weights, [Kokoro](/kˈOkəɹO/) can be deployed anywhere from production environments to personal projects.
&#039;&#039;&#039;
# text = &#039;「もしおれがただ偶然、そしてこうしようというつもりでなくここに立っているのなら、ちょっとばかり絶望するところだな」と、そんなことが彼の頭に思い浮かんだ。&#039;
# text = &#039;中國人民不信邪也不怕邪，不惹事也不怕事，任何外國不要指望我們會拿自己的核心利益做交易，不要指望我們會吞下損害我國主權、安全、發展利益的苦果！&#039;
# text = &#039;Los partidos políticos tradicionales compiten con los populismos y los movimientos asamblearios.&#039;
# text = &#039;Le dromadaire resplendissant déambulait tranquillement dans les méandres en mastiquant de petites feuilles vernissées.&#039;
# text = &#039;ट्रांसपोर्टरों की हड़ताल लगातार पांचवें दिन जारी, दिसंबर से इलेक्ट्रॉनिक टोल कलेक्शनल सिस्टम&#039;
# text = &quot;Allora cominciava l&#039;insonnia, o un dormiveglia peggiore dell&#039;insonnia, che talvolta assumeva i caratteri dell&#039;incubo.&quot;
# text = &#039;Elabora relatórios de acompanhamento cronológico para as diferentes unidades do Departamento que propõem contratos.&#039;

# 4️⃣ Generate, display, and save audio files in a loop.
generator = pipeline(
    text, voice=&#039;af_heart&#039;, # &lt;= change voice here
    speed=1, split_pattern=r&#039;\n+&#039;
)
# Alternatively, load voice tensor directly:
# voice_tensor = torch.load(&#039;path/to/voice.pt&#039;, weights_only=True)
# generator = pipeline(
#     text, voice=voice_tensor,
#     speed=1, split_pattern=r&#039;\n+&#039;
# )

for i, (gs, ps, audio) in enumerate(generator):
    print(i)  # i =&gt; index
    print(gs) # gs =&gt; graphemes/text
    print(ps) # ps =&gt; phonemes
    display(Audio(data=audio, rate=24000, autoplay=i==0))
    sf.write(f&#039;{i}.wav&#039;, audio, 24000) # save each audio file
```

### Windows Installation
To install espeak-ng on Windows:
1. Go to [espeak-ng releases](https://github.com/espeak-ng/espeak-ng/releases)
2. Click on **Latest release** 
3. Download the appropriate `*.msi` file (e.g. **espeak-ng-20191129-b702b03-x64.msi**)
4. Run the downloaded installer

For advanced configuration and usage on Windows, see the [official espeak-ng Windows guide](https://github.com/espeak-ng/espeak-ng/blob/master/docs/guide.md)

### MacOS Apple Silicon GPU Acceleration

On Mac M1/M2/M3/M4 devices, you can explicitly specify the environment variable `PYTORCH_ENABLE_MPS_FALLBACK=1` to enable GPU acceleration.

```bash
PYTORCH_ENABLE_MPS_FALLBACK=1 python run-your-kokoro-script.py
```

### Conda Environment
Use the following conda `environment.yml` if you&#039;re facing any dependency issues.
```yaml
name: kokoro
channels:
  - defaults
dependencies:
  - python==3.9       
  - libstdcxx~=12.4.0 # Needed to load espeak correctly. Try removing this if you&#039;re facing issues with Espeak fallback. 
  - pip:
      - kokoro&gt;=0.3.1
      - soundfile
      - misaki[en]
```

### Acknowledgements
- 🛠️ [@yl4579](https://huggingface.co/yl4579) for architecting StyleTTS 2.
- 🏆 [@Pendrokar](https://huggingface.co/Pendrokar) for adding Kokoro as a contender in the TTS Spaces Arena.
- 📊 Thank you to everyone who contributed synthetic training data.
- ❤️ Special thanks to all compute sponsors.
- 👾 Discord server: https://discord.gg/QuGxSWBfQy
- 🪽 Kokoro is a Japanese word that translates to &quot;heart&quot; or &quot;spirit&quot;. Kokoro is also a [character in the Terminator franchise](https://terminator.fandom.com/wiki/Kokoro) along with [Misaki](https://github.com/hexgrad/misaki?tab=readme-ov-file#acknowledgements).

&lt;img src=&quot;https://static0.gamerantimages.com/wordpress/wp-content/uploads/2024/08/terminator-zero-41-1.jpg&quot; width=&quot;400&quot; alt=&quot;kokoro&quot; /&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[eslint/eslint]]></title>
            <link>https://github.com/eslint/eslint</link>
            <guid>https://github.com/eslint/eslint</guid>
            <pubDate>Thu, 14 Aug 2025 00:04:36 GMT</pubDate>
            <description><![CDATA[Find and fix problems in your JavaScript code.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/eslint/eslint">eslint/eslint</a></h1>
            <p>Find and fix problems in your JavaScript code.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 26,167</p>
            <p>Forks: 4,774</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre>[![npm version](https://img.shields.io/npm/v/eslint.svg)](https://www.npmjs.com/package/eslint)
[![Downloads](https://img.shields.io/npm/dm/eslint.svg)](https://www.npmjs.com/package/eslint)
[![Build Status](https://github.com/eslint/eslint/workflows/CI/badge.svg)](https://github.com/eslint/eslint/actions)
&lt;br&gt;
[![Open Collective Backers](https://img.shields.io/opencollective/backers/eslint)](https://opencollective.com/eslint)
[![Open Collective Sponsors](https://img.shields.io/opencollective/sponsors/eslint)](https://opencollective.com/eslint)

# ESLint

[Website](https://eslint.org) |
[Configure ESLint](https://eslint.org/docs/latest/use/configure) |
[Rules](https://eslint.org/docs/rules/) |
[Contribute to ESLint](https://eslint.org/docs/latest/contribute) |
[Report Bugs](https://eslint.org/docs/latest/contribute/report-bugs) |
[Code of Conduct](https://eslint.org/conduct) |
[Twitter](https://twitter.com/geteslint) |
[Discord](https://eslint.org/chat) |
[Mastodon](https://fosstodon.org/@eslint) |
[Bluesky](https://bsky.app/profile/eslint.org)

ESLint is a tool for identifying and reporting on patterns found in ECMAScript/JavaScript code. In many ways, it is similar to JSLint and JSHint with a few exceptions:

- ESLint uses [Espree](https://github.com/eslint/js/tree/main/packages/espree) for JavaScript parsing.
- ESLint uses an AST to evaluate patterns in code.
- ESLint is completely pluggable, every single rule is a plugin and you can add more at runtime.

## Table of Contents

1. [Installation and Usage](#installation-and-usage)
1. [Configuration](#configuration)
1. [Version Support](#version-support)
1. [Code of Conduct](#code-of-conduct)
1. [Filing Issues](#filing-issues)
1. [Frequently Asked Questions](#frequently-asked-questions)
1. [Releases](#releases)
1. [Security Policy](#security-policy)
1. [Semantic Versioning Policy](#semantic-versioning-policy)
1. [License](#license)
1. [Team](#team)
1. [Sponsors](#sponsors)
1. [Technology Sponsors](#technology-sponsors) &lt;!-- markdownlint-disable-line MD051 --&gt;

## Installation and Usage

Prerequisites: [Node.js](https://nodejs.org/) (`^18.18.0`, `^20.9.0`, or `&gt;=21.1.0`) built with SSL support. (If you are using an official Node.js distribution, SSL is always built in.)

You can install and configure ESLint using this command:

```shell
npm init @eslint/config@latest
```

After that, you can run ESLint on any file or directory like this:

```shell
npx eslint yourfile.js
```

### pnpm Installation

To use ESLint with pnpm, we recommend setting up a `.npmrc` file with at least the following settings:

```text
auto-install-peers=true
node-linker=hoisted
```

This ensures that pnpm installs dependencies in a way that is more compatible with npm and is less likely to produce errors.

## Configuration

You can configure rules in your `eslint.config.js` files as in this example:

```js
import { defineConfig } from &quot;eslint/config&quot;;

export default defineConfig([
	{
		files: [&quot;**/*.js&quot;, &quot;**/*.cjs&quot;, &quot;**/*.mjs&quot;],
		rules: {
			&quot;prefer-const&quot;: &quot;warn&quot;,
			&quot;no-constant-binary-expression&quot;: &quot;error&quot;,
		},
	},
]);
```

The names `&quot;prefer-const&quot;` and `&quot;no-constant-binary-expression&quot;` are the names of [rules](https://eslint.org/docs/rules) in ESLint. The first value is the error level of the rule and can be one of these values:

- `&quot;off&quot;` or `0` - turn the rule off
- `&quot;warn&quot;` or `1` - turn the rule on as a warning (doesn&#039;t affect exit code)
- `&quot;error&quot;` or `2` - turn the rule on as an error (exit code will be 1)

The three error levels allow you fine-grained control over how ESLint applies rules (for more configuration options and details, see the [configuration docs](https://eslint.org/docs/latest/use/configure)).

## Version Support

The ESLint team provides ongoing support for the current version and six months of limited support for the previous version. Limited support includes critical bug fixes, security issues, and compatibility issues only.

ESLint offers commercial support for both current and previous versions through our partners, [Tidelift][tidelift] and [HeroDevs][herodevs].

See [Version Support](https://eslint.org/version-support) for more details.

## Code of Conduct

ESLint adheres to the [OpenJS Foundation Code of Conduct](https://eslint.org/conduct).

## Filing Issues

Before filing an issue, please be sure to read the guidelines for what you&#039;re reporting:

- [Bug Report](https://eslint.org/docs/latest/contribute/report-bugs)
- [Propose a New Rule](https://eslint.org/docs/latest/contribute/propose-new-rule)
- [Proposing a Rule Change](https://eslint.org/docs/latest/contribute/propose-rule-change)
- [Request a Change](https://eslint.org/docs/latest/contribute/request-change)

## Frequently Asked Questions

### Does ESLint support JSX?

Yes, ESLint natively supports parsing JSX syntax (this must be enabled in [configuration](https://eslint.org/docs/latest/use/configure)). Please note that supporting JSX syntax _is not_ the same as supporting React. React applies specific semantics to JSX syntax that ESLint doesn&#039;t recognize. We recommend using [eslint-plugin-react](https://www.npmjs.com/package/eslint-plugin-react) if you are using React and want React semantics.

### Does Prettier replace ESLint?

No, ESLint and Prettier have different jobs: ESLint is a linter (looking for problematic patterns) and Prettier is a code formatter. Using both tools is common, refer to [Prettier&#039;s documentation](https://prettier.io/docs/en/install#eslint-and-other-linters) to learn how to configure them to work well with each other.

### What ECMAScript versions does ESLint support?

ESLint has full support for ECMAScript 3, 5, and every year from 2015 up until the most recent stage 4 specification (the default). You can set your desired ECMAScript syntax and other settings (like global variables) through [configuration](https://eslint.org/docs/latest/use/configure).

### What about experimental features?

ESLint&#039;s parser only officially supports the latest final ECMAScript standard. We will make changes to core rules in order to avoid crashes on stage 3 ECMAScript syntax proposals (as long as they are implemented using the correct experimental ESTree syntax). We may make changes to core rules to better work with language extensions (such as JSX, Flow, and TypeScript) on a case-by-case basis.

In other cases (including if rules need to warn on more or fewer cases due to new syntax, rather than just not crashing), we recommend you use other parsers and/or rule plugins. If you are using Babel, you can use [@babel/eslint-parser](https://www.npmjs.com/package/@babel/eslint-parser) and [@babel/eslint-plugin](https://www.npmjs.com/package/@babel/eslint-plugin) to use any option available in Babel.

Once a language feature has been adopted into the ECMAScript standard (stage 4 according to the [TC39 process](https://tc39.github.io/process-document/)), we will accept issues and pull requests related to the new feature, subject to our [contributing guidelines](https://eslint.org/docs/latest/contribute). Until then, please use the appropriate parser and plugin(s) for your experimental feature.

### Which Node.js versions does ESLint support?

ESLint updates the supported Node.js versions with each major release of ESLint. At that time, ESLint&#039;s supported Node.js versions are updated to be:

1. The most recent maintenance release of Node.js
1. The lowest minor version of the Node.js LTS release that includes the features the ESLint team wants to use.
1. The Node.js Current release

ESLint is also expected to work with Node.js versions released after the Node.js Current release.

Refer to the [Quick Start Guide](https://eslint.org/docs/latest/use/getting-started#prerequisites) for the officially supported Node.js versions for a given ESLint release.

### Where to ask for help?

Open a [discussion](https://github.com/eslint/eslint/discussions) or stop by our [Discord server](https://eslint.org/chat).

### Why doesn&#039;t ESLint lock dependency versions?

Lock files like `package-lock.json` are helpful for deployed applications. They ensure that dependencies are consistent between environments and across deployments.

Packages like `eslint` that get published to the npm registry do not include lock files. `npm install eslint` as a user will respect version constraints in ESLint&#039;s `package.json`. ESLint and its dependencies will be included in the user&#039;s lock file if one exists, but ESLint&#039;s own lock file would not be used.

We intentionally don&#039;t lock dependency versions so that we have the latest compatible dependency versions in development and CI that our users get when installing ESLint in a project.

The Twilio blog has a [deeper dive](https://www.twilio.com/blog/lockfiles-nodejs) to learn more.

## Releases

We have scheduled releases every two weeks on Friday or Saturday. You can follow a [release issue](https://github.com/eslint/eslint/issues?q=is%3Aopen+is%3Aissue+label%3Arelease) for updates about the scheduling of any particular release.

## Security Policy

ESLint takes security seriously. We work hard to ensure that ESLint is safe for everyone and that security issues are addressed quickly and responsibly. Read the full [security policy](https://github.com/eslint/.github/blob/master/SECURITY.md).

## Semantic Versioning Policy

ESLint follows [semantic versioning](https://semver.org). However, due to the nature of ESLint as a code quality tool, it&#039;s not always clear when a minor or major version bump occurs. To help clarify this for everyone, we&#039;ve defined the following semantic versioning policy for ESLint:

- Patch release (intended to not break your lint build)
    - A bug fix in a rule that results in ESLint reporting fewer linting errors.
    - A bug fix to the CLI or core (including formatters).
    - Improvements to documentation.
    - Non-user-facing changes such as refactoring code, adding, deleting, or modifying tests, and increasing test coverage.
    - Re-releasing after a failed release (i.e., publishing a release that doesn&#039;t work for anyone).
- Minor release (might break your lint build)
    - A bug fix in a rule that results in ESLint reporting more linting errors.
    - A new rule is created.
    - A new option to an existing rule that does not result in ESLint reporting more linting errors by default.
    - A new addition to an existing rule to support a newly-added language feature (within the last 12 months) that will result in ESLint reporting more linting errors by default.
    - An existing rule is deprecated.
    - A new CLI capability is created.
    - New capabilities to the public API are added (new classes, new methods, new arguments to existing methods, etc.).
    - A new formatter is created.
    - `eslint:recommended` is updated and will result in strictly fewer linting errors (e.g., rule removals).
- Major release (likely to break your lint build)
    - `eslint:recommended` is updated and may result in new linting errors (e.g., rule additions, most rule option updates).
    - A new option to an existing rule that results in ESLint reporting more linting errors by default.
    - An existing formatter is removed.
    - Part of the public API is removed or changed in an incompatible way. The public API includes:
        - Rule schemas
        - Configuration schema
        - Command-line options
        - Node.js API
        - Rule, formatter, parser, plugin APIs

According to our policy, any minor update may report more linting errors than the previous release (ex: from a bug fix). As such, we recommend using the tilde (`~`) in `package.json` e.g. `&quot;eslint&quot;: &quot;~3.1.0&quot;` to guarantee the results of your builds.

## License

MIT License

Copyright OpenJS Foundation and other contributors, &lt;www.openjsf.org&gt;

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &quot;Software&quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

## Team

These folks keep the project moving and are resources for help.

&lt;!-- NOTE: This section is autogenerated. Do not manually edit.--&gt;

&lt;!--teamstart--&gt;

### Technical Steering Committee (TSC)

The people who manage releases, review feature requests, and meet regularly to ensure ESLint is properly maintained.

&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;11%&quot;&gt;
&lt;a href=&quot;https://github.com/nzakas&quot;&gt;
&lt;img src=&quot;https://github.com/nzakas.png?s=75&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;Nicholas C. Zakas&#039;s Avatar&quot;&gt;&lt;br /&gt;
Nicholas C. Zakas
&lt;/a&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;11%&quot;&gt;
&lt;a href=&quot;https://github.com/fasttime&quot;&gt;
&lt;img src=&quot;https://github.com/fasttime.png?s=75&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;Francesco Trotta&#039;s Avatar&quot;&gt;&lt;br /&gt;
Francesco Trotta
&lt;/a&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;11%&quot;&gt;
&lt;a href=&quot;https://github.com/mdjermanovic&quot;&gt;
&lt;img src=&quot;https://github.com/mdjermanovic.png?s=75&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;Milos Djermanovic&#039;s Avatar&quot;&gt;&lt;br /&gt;
Milos Djermanovic
&lt;/a&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

### Reviewers

The people who review and implement new features.

&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;11%&quot;&gt;
&lt;a href=&quot;https://github.com/aladdin-add&quot;&gt;
&lt;img src=&quot;https://github.com/aladdin-add.png?s=75&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;唯然&#039;s Avatar&quot;&gt;&lt;br /&gt;
唯然
&lt;/a&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;11%&quot;&gt;
&lt;a href=&quot;https://github.com/snitin315&quot;&gt;
&lt;img src=&quot;https://github.com/snitin315.png?s=75&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;Nitin Kumar&#039;s Avatar&quot;&gt;&lt;br /&gt;
Nitin Kumar
&lt;/a&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

### Committers

The people who review and fix bugs and help triage issues.

&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;11%&quot;&gt;
&lt;a href=&quot;https://github.com/JoshuaKGoldberg&quot;&gt;
&lt;img src=&quot;https://github.com/JoshuaKGoldberg.png?s=75&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;Josh Goldberg ✨&#039;s Avatar&quot;&gt;&lt;br /&gt;
Josh Goldberg ✨
&lt;/a&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;11%&quot;&gt;
&lt;a href=&quot;https://github.com/Tanujkanti4441&quot;&gt;
&lt;img src=&quot;https://github.com/Tanujkanti4441.png?s=75&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;Tanuj Kanti&#039;s Avatar&quot;&gt;&lt;br /&gt;
Tanuj Kanti
&lt;/a&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;11%&quot;&gt;
&lt;a href=&quot;https://github.com/lumirlumir&quot;&gt;
&lt;img src=&quot;https://github.com/lumirlumir.png?s=75&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;루밀LuMir&#039;s Avatar&quot;&gt;&lt;br /&gt;
루밀LuMir
&lt;/a&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

### Website Team

Team members who focus specifically on eslint.org

&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;11%&quot;&gt;
&lt;a href=&quot;https://github.com/amareshsm&quot;&gt;
&lt;img src=&quot;https://github.com/amareshsm.png?s=75&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;Amaresh  S M&#039;s Avatar&quot;&gt;&lt;br /&gt;
Amaresh  S M
&lt;/a&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;11%&quot;&gt;
&lt;a href=&quot;https://github.com/harish-sethuraman&quot;&gt;
&lt;img src=&quot;https://github.com/harish-sethuraman.png?s=75&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;Harish&#039;s Avatar&quot;&gt;&lt;br /&gt;
Harish
&lt;/a&gt;
&lt;/td&gt;&lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;11%&quot;&gt;
&lt;a href=&quot;https://github.com/kecrily&quot;&gt;
&lt;img src=&quot;https://github.com/kecrily.png?s=75&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;Percy Ma&#039;s Avatar&quot;&gt;&lt;br /&gt;
Percy Ma
&lt;/a&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;!--teamend--&gt;

&lt;!-- NOTE: This section is autogenerated. Do not manually edit.--&gt;
&lt;!--sponsorsstart--&gt;

## Sponsors

The following companies, organizations, and individuals support ESLint&#039;s ongoing maintenance and development. [Become a Sponsor](https://eslint.org/donate)
to get your logo on our READMEs and [website](https://eslint.org/sponsors).

&lt;h3&gt;Platinum Sponsors&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://automattic.com&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/automattic/d0ef3e1/logo.png&quot; alt=&quot;Automattic&quot; height=&quot;128&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.airbnb.com/&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/airbnb/d327d66/logo.png&quot; alt=&quot;Airbnb&quot; height=&quot;128&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Gold Sponsors&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://qlty.sh/&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/qltysh/33d157d/logo.png&quot; alt=&quot;Qlty Software&quot; height=&quot;96&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://trunk.io/&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/trunkio/fb92d60/avatar.png&quot; alt=&quot;trunk.io&quot; height=&quot;96&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://shopify.engineering/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8085&quot; alt=&quot;Shopify&quot; height=&quot;96&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Silver Sponsors&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://vite.dev/&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/vite/e6d15e1/logo.png&quot; alt=&quot;Vite&quot; height=&quot;64&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://liftoff.io/&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/liftoff/5c4fa84/logo.png&quot; alt=&quot;Liftoff&quot; height=&quot;64&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://americanexpress.io&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3853301&quot; alt=&quot;American Express&quot; height=&quot;64&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://stackblitz.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/28635252&quot; alt=&quot;StackBlitz&quot; height=&quot;64&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Bronze Sponsors&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://cybozu.co.jp/&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/cybozu/933e46d/logo.png&quot; alt=&quot;Cybozu&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sentry.io&quot;&gt;&lt;img src=&quot;https://github.com/getsentry.png&quot; alt=&quot;Sentry&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.fortunegames.com&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/fortunegames/657063f/logo.png&quot; alt=&quot;FORTUNE GAMES&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.crosswordsolver.org/anagram-solver/&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/anagram-solver/2666271/logo.png&quot; alt=&quot;Anagram Solver&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://icons8.com/&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/icons8/7fa1641/logo.png&quot; alt=&quot;Icons8&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.com&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/discordapp/f9645d9/logo.png&quot; alt=&quot;Discord&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.gitbook.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7111340&quot; alt=&quot;GitBook&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://nx.dev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/23692104&quot; alt=&quot;Nx&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opensource.mercedes-benz.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/34240465&quot; alt=&quot;Mercedes-Benz Group&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://herocoders.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/37549774&quot; alt=&quot;HeroCoders&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.lambdatest.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/171592363&quot; alt=&quot;LambdaTest&quot; height=&quot;32&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Technology Sponsors&lt;/h3&gt;
Technology sponsors allow us to use their products and services for free as part of a contribution to the open source ecosystem and our work.
&lt;p&gt;&lt;a href=&quot;https://netlify.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eslint/eslint.org/main/src/assets/images/techsponsors/netlify-icon.svg&quot; alt=&quot;Netlify&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://algolia.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eslint/eslint.org/main/src/assets/images/techsponsors/algolia-icon.svg&quot; alt=&quot;Algolia&quot; height=&quot;32&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://1password.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eslint/eslint.org/main/src/assets/images/techsponsors/1password-icon.svg&quot; alt=&quot;1Password&quot; height=&quot;32&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;!--sponsorsend--&gt;

[tidelift]: https://tidelift.com/funding/github/npm/eslint
[herodevs]: https://www.herodevs.com/support/eslint-nes?utm_source=ESLintWebsite&amp;utm_medium=ESLintWebsite&amp;utm_campaign=ESLintNES&amp;utm_id=ESLintNES
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[dequelabs/axe-core]]></title>
            <link>https://github.com/dequelabs/axe-core</link>
            <guid>https://github.com/dequelabs/axe-core</guid>
            <pubDate>Thu, 14 Aug 2025 00:04:35 GMT</pubDate>
            <description><![CDATA[Accessibility engine for automated Web UI testing]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/dequelabs/axe-core">dequelabs/axe-core</a></h1>
            <p>Accessibility engine for automated Web UI testing</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,549</p>
            <p>Forks: 838</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre># axe-core

[![License](https://img.shields.io/npm/l/axe-core.svg?color=c41)](LICENSE)
[![Version](https://img.shields.io/npm/v/axe-core.svg)](https://www.npmjs.com/package/axe-core)
[![NPM downloads](https://img.shields.io/npm/dw/axe-core.svg?color=080)![](https://img.shields.io/npm/dy/axe-core.svg?color=080&amp;label=)](https://npm-stat.com/charts.html?package=axe-core&amp;from=2017-01-01)
[![Commits](https://img.shields.io/github/commit-activity/y/dequelabs/axe-core.svg)](https://github.com/dequelabs/axe-core/commits/develop)
[![GitHub contributors](https://img.shields.io/github/contributors/dequelabs/axe-core.svg?color=080)](https://github.com/dequelabs/axe-core/graphs/contributors)
[![Join our Slack chat](https://img.shields.io/badge/slack-chat-purple.svg?logo=slack)](https://accessibility.deque.com/axe-community)
[![Package Quality](https://npm.packagequality.com/shield/axe-core.svg)](https://packagequality.com/#?package=axe-core)

Axe is an accessibility testing engine for websites and other HTML-based user interfaces. It&#039;s fast, secure, lightweight, and was built to seamlessly integrate with any existing test environment so you can automate accessibility testing alongside your regular functional testing.

[Sign up for axe news](https://hubs.ly/H0fsN0b0) to get the latest on axe features, future releases, and events.

## The Accessibility Rules

Axe-core has different types of rules, for WCAG 2.0, 2.1, 2.2 on level A, AA and AAA as well as a number of best practices that help you identify common accessibility practices like ensuring every page has an `h1` heading, and to help you avoid &quot;gotchas&quot; in ARIA like where an ARIA attribute you used will get ignored. The complete list of rules, grouped WCAG level and best practice, can be found in [doc/rule-descriptions.md](./doc/rule-descriptions.md).

With axe-core, you can find **on average 57% of WCAG issues automatically**. Additionally, axe-core will return elements as &quot;incomplete&quot; where axe-core could not be certain, and manual review is needed.

To catch bugs earlier in the development cycle we recommend using the [axe-linter vscode extension](https://marketplace.visualstudio.com/items?itemName=deque-systems.vscode-axe-linter). To improve test coverage even further we recommend the [intelligent guided tests](https://www.youtube.com/watch?v=AtsX0dPCG_4&amp;feature=youtu.be&amp;ab_channel=DequeSystems) in the [axe Extension](https://www.deque.com/axe/browser-extensions/).

## Getting started

First download the package:

```console
npm install axe-core --save-dev
```

Now include the javascript file in each of your iframes in your fixtures or test systems:

```html
&lt;script src=&quot;node_modules/axe-core/axe.min.js&quot;&gt;&lt;/script&gt;
```

Now insert calls at each point in your tests where a new piece of UI becomes visible or exposed:

```js
axe
  .run()
  .then(results =&gt; {
    if (results.violations.length) {
      throw new Error(&#039;Accessibility issues found&#039;);
    }
  })
  .catch(err =&gt; {
    console.error(&#039;Something bad happened:&#039;, err.message);
  });
```

## Philosophy

The web can only become an accessible, inclusive space if developers are empowered to take responsibility for accessibility testing and accessible coding practices.

Automated accessibility testing is a huge timesaver, it doesn&#039;t require special expertise, and it allows teams to focus expert resources on the accessibility issues that really need them. Unfortunately, most accessibility tools are meant to be run on sites and applications that have reached the end of the development process and often don&#039;t give clear or consistent results, causing frustration and delays just when you thought your product was ready to ship.

Axe was built to reflect how web development actually works. It works with all modern browsers, tools, and testing environments a dev team might use. With axe, accessibility testing can be performed as part of your unit testing, integration testing, browser testing, and any other functional testing your team already performs on a day-to-day basis. Building accessibility testing into the early development process saves time, resources, and all kinds of frustration.

## About axe - our Manifesto

- Axe is open source.
- It returns zero false positives (bugs notwithstanding).
- It&#039;s designed to work on all modern browsers and with whatever tools, frameworks, libraries and environments you use today.
- It&#039;s actively supported by [Deque Systems](https://www.deque.com), a major accessibility vendor.
- It integrates with your existing functional/acceptance automated tests.
- It automatically determines which rules to run based on the evaluation context.
- Axe supports in-memory fixtures, static fixtures, integration tests, and iframes of infinite depth.
- Axe is highly configurable.

## Supported Browsers

The [axe-core API](doc/API.md) fully supports the following browsers:

- Microsoft Edge v40 and above
- Google Chrome v42 and above
- Mozilla Firefox v38 and above
- Apple Safari v7 and above
- Internet Explorer v11 (DEPRECATED)

Support means that we will fix bugs and attempt to test each browser regularly. Only Chrome and Firefox are currently tested on every pull request.

There is limited support for JSDOM. We will attempt to make all rules compatible with JSDOM but where this is not possible, we recommend turning those rules off. Currently the `color-contrast` rule is known not to work with JSDOM.

We can only support environments where features are either natively supported or polyfilled correctly. We do not support the deprecated v0 Shadow DOM implementation.

## Contents of the API Package

The [axe-core API](doc/API.md) package consists of:

- `axe.js` - the JavaScript file that should be included in your web site under test (API)
- `axe.min.js` - a minified version of the above file

## Localization

Axe can be built using your local language. To do so, a localization file must be added to the `./locales` directory. This file must be named in the following manner: `&lt;langcode&gt;.json`. To build axe using this locale, instead of the default, run axe with the `--lang` flag, like so:

`grunt build --lang=nl`

or equivalently:

`npm run build -- --lang=nl`

This will create a new build for axe, called `axe.&lt;lang&gt;.js` and `axe.&lt;lang&gt;.min.js`. If you want to build all localized versions, simply pass in `--all-lang` instead. If you want to build multiple localized versions (but not all of them), you can pass in a comma-separated list of languages to the `--lang` flag, like `--lang=nl,ja`.

To create a new translation for axe, start by running `grunt translate --lang=&lt;langcode&gt;`. This will create a json file in the `./locales` directory, with the default English text in it for you to translate. Alternatively, you could copy `./locales/_template.json`. We welcome any localization for axe-core. For details on how to contribute, see the Contributing section below. For details on the message syntax, see [Check Message Template](/doc/check-message-template.md).

To update an existing translation file, re-run `grunt translate --lang=&lt;langcode&gt;`. This will add new messages used in English and remove messages which were not used in English.

Additionally, locale can be applied at runtime by passing a `locale` object to `axe.configure()`. The locale object must be of the same shape as existing locales in the `./locales` directory. For example:

```js
axe.configure({
  locale: {
    lang: &#039;de&#039;,
    rules: {
      accesskeys: {
        help: &#039;Der Wert des accesskey-Attributes muss einzigartig sein.&#039;
      }
      // ...
    },
    checks: {
      abstractrole: {
        fail: &#039;Abstrakte ARIA-Rollen dürfen nicht direkt verwendet werden.&#039;
      },
      &#039;aria-errormessage&#039;: {
        // Note: doT (https://github.com/olado/dot) templates are supported here.
        fail: &#039;Der Wert der aria-errormessage ${data.values}` muss eine Technik verwenden, um die Message anzukündigen (z. B., aria-live, aria-describedby, role=alert, etc.).&#039;
      }
      // ...
    }
  }
});
```

### Supported Locales

Axe-core supports the following locales. Do note that since locales are contributed by our community, they are not guaranteed to include all translations needed in a release.

- Basque
- Danish
- Dutch
- French
- German
- Hebrew
- Japanese
- Korean
- Norwegian (Bokmål)
- Polish
- Portuguese (Brazilian)
- Spanish
- Greek
- Italian
- Simplified Chinese
- Traditional Chinese

## Updates &amp; Security

Axe-core has a new minor release every 3 to 5 months, which usually introduces new rules and features. We recommend scheduling time to upgrade to these versions. Security updates will be made available for minor version lines up to **18 months old**.

- See [release and support](doc/release-and-support.md) for details on the frequency of releases, long-term support and recommendations on upgrading axe-core.
- See [backward compatibility](doc/backwards-compatibility-doc.md) for details on the types of changes different releases may introduce.

## Deque Trademarks Policy

DEQUE, DEQUELABS, AXE®, and AXE-CORE® are trademarks of Deque Systems, Inc. Use of the Deque trademarks must be in accordance with [Deque&#039;s trademark policy](https://www.deque.com/legal/trademarks/).

## Supported ARIA Roles and Attributes.

Refer [axe-core ARIA support](./doc/aria-supported.md) for a complete list of ARIA supported roles and attributes by axe.

## Contributing

Read the [Proposing Axe-core Rules guide](./doc/rule-proposal.md)

Read the [documentation on the architecture](./doc/developer-guide.md)

Read the [documentation on contributing](CONTRIBUTING.md)

## Projects using axe-core

[List of projects using axe-core](doc/projects.md)

## Acknowledgements

Thanks to Marat Dulin for his [css-selector-parser](https://www.npmjs.com/package/css-selector-parser) implementation which is included for shadow DOM support. Another thank you to the [Slick Parser](https://github.com/mootools/slick/blob/master/Source/Slick.Parser.js) implementers for their contribution, we have used some of their algorithms in our shadow DOM support code. Thanks to Lea Verou and Chris Lilley for their [colorjs.io](https://colorjs.io/) library which we have used for converting between color formats.

## Licenses

Axe-core is distributed under the [Mozilla Public License, version 2.0](LICENSE). It comes bundled with several dependencies which are distributed under their own terms. (See [LICENSE-3RD-PARTY.txt](LICENSE-3RD-PARTY.txt))
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[clusterzx/paperless-ai]]></title>
            <link>https://github.com/clusterzx/paperless-ai</link>
            <guid>https://github.com/clusterzx/paperless-ai</guid>
            <pubDate>Thu, 14 Aug 2025 00:04:34 GMT</pubDate>
            <description><![CDATA[An automated document analyzer for Paperless-ngx using OpenAI API, Ollama, Deepseek-r1, Azure and all OpenAI API compatible Services to automatically analyze and tag your documents.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/clusterzx/paperless-ai">clusterzx/paperless-ai</a></h1>
            <p>An automated document analyzer for Paperless-ngx using OpenAI API, Ollama, Deepseek-r1, Azure and all OpenAI API compatible Services to automatically analyze and tag your documents.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,031</p>
            <p>Forks: 169</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre># 📄 Paperless-AI

[![GitHub commit activity](https://img.shields.io/github/commit-activity/t/clusterzx/paperless-ai)](https://github.com/clusterzx/paperless-ai/commits/main)
[![Docker Pulls](https://img.shields.io/docker/pulls/clusterzx/paperless-ai)](https://hub.docker.com/r/clusterzx/paperless-ai)
[![GitHub Stars](https://img.shields.io/github/stars/clusterzx)](https://github.com/clusterzx)
[![License](https://img.shields.io/github/license/clusterzx/paperless-ai?cacheSeconds=1)](LICENSE)

---

**Paperless-AI** is an AI-powered extension for [Paperless-ngx](https://github.com/paperless-ngx/paperless-ngx) that brings automatic document classification, smart tagging, and semantic search using OpenAI-compatible APIs and Ollama.

It enables **fully automated document workflows**, **contextual chat**, and **powerful customization** — all via an intuitive web interface.

&gt; 💡 Just ask:  
&gt; “When did I sign my rental agreement?”  
&gt; “What was the amount of the last electricity bill?”  
&gt; “Which documents mention my health insurance?”  

Powered by **Retrieval-Augmented Generation (RAG)**, you can now search semantically across your full archive and get precise, natural language answers.

---

## ✨ Features

### 🔄 Automated Document Processing
- Detects new documents in Paperless-ngx automatically
- Analyzes content using OpenAI API, Ollama, and other compatible backends
- Assigns title, tags, document type, and correspondent
- Built-in support for:
  - Ollama (Mistral, Llama, Phi-3, Gemma-2)
  - OpenAI
  - DeepSeek.ai
  - OpenRouter.ai
  - Perplexity.ai
  - Together.ai
  - LiteLLM
  - VLLM
  - Fastchat
  - Gemini (Google)
  - ...and more!

### 🧠 RAG-Based AI Chat
- Natural language document search and Q&amp;A
- Understands full document context (not just keywords)
- Semantic memory powered by your own data
- Fast, intelligent, privacy-friendly document queries  
![RAG_CHAT_DEMO](https://raw.githubusercontent.com/clusterzx/paperless-ai/refs/heads/main/ppairag.png)

### ⚙️ Manual Processing
- Web interface for manual AI tagging
- Useful when reviewing sensitive documents
- Accessible via `/manual`

### 🧩 Smart Tagging &amp; Rules
- Define rules to limit which documents are processed
- Disable prompts and apply tags automatically
- Set custom output tags for tracked classification  
![PPAI_SHOWCASE3](https://github.com/user-attachments/assets/1fc9f470-6e45-43e0-a212-b8fa6225e8dd)

---

## 🚀 Installation

&gt; ⚠️ **First-time install:** Restart the container **after completing setup** (API keys, preferences) to build RAG index.  
&gt; 🔁 Not required for updates.

📘 [Installation Wiki](https://github.com/clusterzx/paperless-ai/wiki/2.-Installation)

---

## 🐳 Docker Support

- Health monitoring and auto-restart
- Persistent volumes and graceful shutdown
- Works out of the box with minimal setup

---

## 🔧 Local Development

```bash
# Install dependencies
npm install

# Start development/test mode
npm run test
```

---

## 🧭 Roadmap Highlights

- ✅ Multi-AI model support
- ✅ Multilingual document analysis
- ✅ Tag rules and filters
- ✅ Integrated document chat with RAG
- ✅ Responsive web interface

---

## 🤝 Contributing

We welcome PRs and contributions!

```bash
# Fork, clone, then:
git checkout -b feature/YourFeature
# After changes:
git commit -m &quot;Add YourFeature&quot;
git push origin feature/YourFeature
```

Then open a Pull Request via GitHub.

---

## 🆘 Support &amp; Community

- [Issues](https://github.com/clusterzx/paperless-ai/issues)
- [Discord](https://discord.gg/AvNekAfK38)

---

## 📄 License

This project is licensed under the MIT License. See [LICENSE](LICENSE) for details.

---

## 🙏 Support Development

[![Patreon](https://img.shields.io/badge/Patreon-F96854?style=for-the-badge&amp;logo=patreon&amp;logoColor=white)](https://www.patreon.com/c/clusterzx)
[![PayPal](https://img.shields.io/badge/PayPal-00457C?style=for-the-badge&amp;logo=paypal&amp;logoColor=white)](https://www.paypal.com/paypalme/bech0r)
[![BuyMeACoffee](https://img.shields.io/badge/Buy%20Me%20a%20Coffee-ffdd00?style=for-the-badge&amp;logo=buy-me-a-coffee&amp;logoColor=black)](https://www.buymeacoffee.com/clusterzx)
[![Ko-Fi](https://img.shields.io/badge/Ko--fi-F16061?style=for-the-badge&amp;logo=ko-fi&amp;logoColor=white)](https://ko-fi.com/clusterzx)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[quasarframework/quasar]]></title>
            <link>https://github.com/quasarframework/quasar</link>
            <guid>https://github.com/quasarframework/quasar</guid>
            <pubDate>Thu, 14 Aug 2025 00:04:33 GMT</pubDate>
            <description><![CDATA[Quasar Framework - Build high-performance VueJS user interfaces in record time]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/quasarframework/quasar">quasarframework/quasar</a></h1>
            <p>Quasar Framework - Build high-performance VueJS user interfaces in record time</p>
            <p>Language: JavaScript</p>
            <p>Stars: 26,766</p>
            <p>Forks: 3,637</p>
            <p>Stars today: 1 star today</p>
            <h2>README</h2><pre>![Quasar Framework logo](https://cdn.quasar.dev/logo-v2/header.png)

# Quasar Framework

&gt; Build high-performance VueJS user interfaces in record time: responsive Single Page Apps, SSR Apps, PWAs, Browser extensions, Hybrid Mobile Apps and Electron Apps. If you want, all using the same codebase!

&lt;img src=&quot;https://img.shields.io/npm/v/quasar?label=quasar&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/app-webpack?label=@quasar/app-webpack&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/app-vite?label=@quasar/app-vite&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/cli?label=@quasar/cli&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/extras.svg?label=@quasar/extras&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/icongenie.svg?label=@quasar/icongenie&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/vite-plugin.svg?label=@quasar/vite-plugin&quot;&gt;

[![Join the chat at https://chat.quasar.dev](https://img.shields.io/badge/chat-on%20discord-7289da.svg)](https://chat.quasar.dev)
&lt;a href=&quot;https://forum.quasar.dev&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/community-forum-brightgreen.svg&quot;&gt;&lt;/a&gt;
[![https://good-labs.github.io/greater-good-affirmation/assets/images/badge.svg](https://good-labs.github.io/greater-good-affirmation/assets/images/badge.svg)](https://good-labs.github.io/greater-good-affirmation)

[![UI Tests](https://github.com/quasarframework/quasar/actions/workflows/tests-on-pr.yml/badge.svg?branch=dev)](https://github.com/quasarframework/quasar/actions/workflows/tests-on-pr.yml)

Please submit a PR to https://github.com/quasarframework/quasar-awesome with your website/app/Quasar tutorial/video etc. Thank you!

## Supporting Quasar
Quasar Framework is an MIT-licensed open source project. Its ongoing development is made possible thanks to the support by these awesome [backers](https://github.com/rstoenescu/quasar-framework/blob/dev/backers.md).

**Please read our manifest on [Why donations are important](https://quasar.dev/why-donate)**. If you&#039;d like to become a donator, check out [Quasar Framework&#039;s Donator campaign](https://donate.quasar.dev).

### Proudly sponsored by:

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://dreamonkey.com/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/Dreamonkey.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://www.hapag-lloyd.com/en/landingpage/quasar.html&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/HapagLloyd.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;&lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://irewind.com&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/iRewind.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td&gt;&amp;nbsp;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;&lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://qintil.com/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/Qintil.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://synestia.pl/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/Synestia.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;&lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://letsbutterfly.com/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/Letsbutterfly.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://kalisio.com/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/Kalisio.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;&lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://comcomservices.com/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/COMCOMService.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://digitalocean.com/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/DigitalOcean.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;&lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://www.projectfinance.io/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/ProjectFinance.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://ib-langenthal.ch/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/iBL.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;&lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://jugglestreet.com.au/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/JuggleSt.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://www.nodesol.com/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/Nodesol.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;&lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://www.acornfinance.com&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/AcornFinance.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://www.certible.com/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/Certible.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;&lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://www.bairesdev.com/sponsoring-open-source-projects/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/BairesDev.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td&gt;&amp;nbsp;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

## Documentation

Head on to the Quasar Framework official website: [https://quasar.dev](https://quasar.dev)

## Stay in Touch

For latest releases and announcements, follow us on our Twitter account: [@quasarframework](https://twitter.com/quasarframework)

## Chat Support

Ask questions at the official community Discord server: [https://chat.quasar.dev](https://chat.quasar.dev)

## Community Forum

Ask questions at the official community forum: [https://forum.quasar.dev](https://forum.quasar.dev)

## Contributing

Please make sure to read the [Contributing Guide](./CONTRIBUTING.md) before making a pull request. If you have a Quasar-related project/component/tool, add it with a pull request to [this curated list](https://github.com/quasarframework/quasar-awesome)!

Thank you to all the people who already [contributed to Quasar](https://github.com/quasarframework/quasar/graphs/contributors)!

## Semver
Quasar is following [Semantic Versioning 2.0](https://semver.org/).

## License

Copyright (c) 2015-present Razvan Stoenescu

[MIT License](http://en.wikipedia.org/wiki/MIT_License)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[nasa/openmct]]></title>
            <link>https://github.com/nasa/openmct</link>
            <guid>https://github.com/nasa/openmct</guid>
            <pubDate>Thu, 14 Aug 2025 00:04:32 GMT</pubDate>
            <description><![CDATA[A web based mission control framework.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nasa/openmct">nasa/openmct</a></h1>
            <p>A web based mission control framework.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 12,525</p>
            <p>Forks: 1,330</p>
            <p>Stars today: 0 stars today</p>
            <h2>README</h2><pre># Open MCT [![license](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](http://www.apache.org/licenses/LICENSE-2.0) [![Language grade: JavaScript](https://img.shields.io/lgtm/grade/javascript/g/nasa/openmct.svg?logo=lgtm&amp;logoWidth=18)](https://lgtm.com/projects/g/nasa/openmct/context:javascript) [![codecov](https://codecov.io/gh/nasa/openmct/branch/master/graph/badge.svg?token=7DQIipp3ej)](https://codecov.io/gh/nasa/openmct) [![This project is using Percy.io for visual regression testing.](https://percy.io/static/images/percy-badge.svg)](https://percy.io/b2e34b17/openmct) [![npm version](https://img.shields.io/npm/v/openmct.svg)](https://www.npmjs.com/package/openmct) 

Open MCT (Open Mission Control Technologies) is a next-generation mission control framework for visualization of data on desktop and mobile devices. It is developed at NASA&#039;s Ames Research Center, and is being used by NASA for data analysis of spacecraft missions, as well as planning and operation of experimental rover systems. As a generalizable and open source framework, Open MCT could be used as the basis for building applications for planning, operation, and analysis of any systems producing telemetry data.

Please visit our [Official Site](https://nasa.github.io/openmct/) and [Getting Started Guide](https://nasa.github.io/openmct/getting-started/)

Once you&#039;ve created something amazing with Open MCT, showcase your work in our GitHub Discussions [Show and Tell](https://github.com/nasa/openmct/discussions/categories/show-and-tell) section. We love seeing unique and wonderful implementations of Open MCT!

## See Open MCT in Action

Try Open MCT now with our [live demo](https://openmct-demo.herokuapp.com/).
![Demo](https://nasa.github.io/openmct/static/res/images/Open-MCT.Browse.Layout.Mars-Weather-1.jpg)

## Open MCT v2.0.0
Support for our legacy bundle-based API, and the libraries that it was built on (like Angular 1.x), have now been removed entirely from this repository.

For now if you have an Open MCT application that makes use of the legacy API, [a plugin](https://github.com/nasa/openmct-legacy-plugin) is provided that bootstraps the legacy bundling mechanism and API. This plugin will not be maintained over the long term however, and the legacy support plugin will not be tested for compatibility with future versions of Open MCT. It is provided for convenience only.

### How do I know if I am using legacy API?
You might still be using legacy API if your source code

* Contains files named bundle.js, or bundle.json,
* Makes calls to `openmct.$injector()`, or `openmct.$angular`,
* Makes calls to `openmct.legacyRegistry`, `openmct.legacyExtension`, or `openmct.legacyBundle`.


### What should I do if I am using legacy API?
Please refer to [the modern Open MCT API](https://nasa.github.io/openmct/documentation/). Post any questions to the [Discussions section](https://github.com/nasa/openmct/discussions) of the Open MCT GitHub repository.

## Building and Running Open MCT Locally

Building and running Open MCT in your local dev environment is very easy. Be sure you have [Git](https://git-scm.com/downloads) and [Node.js](https://nodejs.org/) installed, then follow the directions below. Need additional information? Check out the [Getting Started](https://nasa.github.io/openmct/getting-started/) page on our website.
(These instructions assume you are installing as a non-root user; developers have [reported issues](https://github.com/nasa/openmct/issues/1151) running these steps with root privileges.)

1. Clone the source code

 `git clone https://github.com/nasa/openmct.git`

2. Install development dependencies. Note: Check the package.json engine for our tested and supported node versions.

 `npm install`

3. Run a local development server

 `npm start`

Open MCT is now running, and can be accessed by pointing a web browser at [http://localhost:8080/](http://localhost:8080/)

## Documentation

Documentation is available on the [Open MCT website](https://nasa.github.io/openmct/documentation/).

### Examples

The clearest examples for developing Open MCT plugins are in the
[tutorials](https://github.com/nasa/openmct-tutorial) provided in
our documentation.

We want Open MCT to be as easy to use, install, run, and develop for as
possible, and your feedback will help us get there! Feedback can be provided via [GitHub issues](https://github.com/nasa/openmct/issues/new/choose), [Starting a GitHub Discussion](https://github.com/nasa/openmct/discussions), or by emailing us at [arc-dl-openmct@mail.nasa.gov](mailto:arc-dl-openmct@mail.nasa.gov).

## Building Applications With Open MCT

Open MCT is built using [`npm`](http://npmjs.com/) and [`webpack`](https://webpack.js.org/).

See our documentation for a guide on [building Applications with Open MCT](https://github.com/nasa/openmct/blob/master/API.md#starting-an-open-mct-application).

## Compatibility

This is a fast moving project and we do our best to test and support the widest possible range of browsers, operating systems, and nodejs APIs. We have a published list of support available in our package.json&#039;s `browserslist` key.

If you encounter an issue with a particular browser, OS, or nodejs API, please file a [GitHub issue](https://github.com/nasa/openmct/issues/new/choose)

## Plugins

Open MCT can be extended via plugins that make calls to the Open MCT API. A plugin is a group 
of software components (including source code and resources such as images and HTML templates)
that is intended to be added or removed as a single unit.

As well as providing an extension mechanism, most of the core Open MCT codebase is also 
written as plugins.

For information on writing plugins, please see [our API documentation](https://github.com/nasa/openmct/blob/master/API.md#plugins).

## Tests

Tests are written for [Jasmine 3](https://jasmine.github.io/api/3.1/global)
and run by [Karma](http://karma-runner.github.io). To run:

`npm test`

The test suite is configured to load any scripts ending with `Spec.js` found
in the `src` hierarchy. Full configuration details are found in
`karma.conf.js`. By convention, unit test scripts should be located
alongside the units that they test; for example, `src/foo/Bar.js` would be
tested by `src/foo/BarSpec.js`. (For legacy reasons, some existing tests may
be located in separate `test` folders near the units they test, but the
naming convention is otherwise the same.)

### Test Reporting

When `npm test` is run, test results will be written as HTML to
`dist/reports/tests/`. Code coverage information is written to `dist/reports/coverage`.

Code Coverage Reports are available from [codecov.io](https://app.codecov.io/gh/nasa/openmct/)

# Glossary

Certain terms are used throughout Open MCT with consistent meanings
or conventions. Any deviations from the below are issues and should be
addressed (either by updating this glossary or changing code to reflect
correct usage.) Other developer documentation, particularly in-line
documentation, may presume an understanding of these terms.

* _plugin_: A plugin is a removable, reusable grouping of software elements.
  The application is composed of plugins.
* _composition_: In the context of a domain object, this refers to the set of
  other domain objects that compose or are contained by that object. A domain
  object&#039;s composition is the set of domain objects that should appear
  immediately beneath it in a tree hierarchy. A domain object&#039;s composition is
  described in its model as an array of id&#039;s; its composition capability
  provides a means to retrieve the actual domain object instances associated
  with these identifiers asynchronously.
* _description_: When used as an object property, this refers to the human-readable
  description of a thing; usually a single sentence or short paragraph.
  (Most often used in the context of extensions, domain
  object models, or other similar application-specific objects.)
* _domain object_: A meaningful object to the user; a distinct thing in
  the work support by Open MCT. Anything that appears in the left-hand
  tree is a domain object.
* _identifier_: A tuple consisting of a namespace and a key, which together uniquely
  identifies a domain object.
* _model_: The persistent state associated with a domain object. A domain
  object&#039;s model is a JavaScript object which can be converted to JSON
  without losing information (that is, it contains no methods.)
* _name_: When used as an object property, this refers to the human-readable
  name for a thing. (Most often used in the context of extensions, domain
  object models, or other similar application-specific objects.)
* _navigation_: Refers to the current state of the application with respect
  to the user&#039;s expressed interest in a specific domain object; e.g. when
  a user clicks on a domain object in the tree, they are _navigating_ to
  it, and it is thereafter considered the _navigated_ object (until the
  user makes another such choice.)
* _namespace_: A name used to identify a persistence store. A running open MCT 
application could potentially use multiple persistence stores, with the 
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[louislam/uptime-kuma]]></title>
            <link>https://github.com/louislam/uptime-kuma</link>
            <guid>https://github.com/louislam/uptime-kuma</guid>
            <pubDate>Thu, 14 Aug 2025 00:04:31 GMT</pubDate>
            <description><![CDATA[A fancy self-hosted monitoring tool]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/louislam/uptime-kuma">louislam/uptime-kuma</a></h1>
            <p>A fancy self-hosted monitoring tool</p>
            <p>Language: JavaScript</p>
            <p>Stars: 73,175</p>
            <p>Forks: 6,510</p>
            <p>Stars today: 52 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot; width=&quot;100%&quot;&gt;
    &lt;img src=&quot;./public/icon.svg&quot; width=&quot;128&quot; alt=&quot;&quot; /&gt;
&lt;/div&gt;

# Uptime Kuma

Uptime Kuma is an easy-to-use self-hosted monitoring tool.

&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/louislam/uptime-kuma?style=flat&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/louislam/uptime-kuma&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/v/louislam/uptime-kuma/latest?label=docker%20image%20ver.&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/louislam/uptime-kuma&quot; /&gt;&lt;/a&gt;  &lt;a target=&quot;_blank&quot; href=&quot;https://opencollective.com/uptime-kuma&quot;&gt;&lt;img src=&quot;https://opencollective.com/uptime-kuma/total/badge.svg?label=Open%20Collective%20Backers&amp;color=brightgreen&quot; /&gt;&lt;/a&gt;
[![GitHub Sponsors](https://img.shields.io/github/sponsors/louislam?label=GitHub%20Sponsors)](https://github.com/sponsors/louislam) &lt;a href=&quot;https://weblate.kuma.pet/projects/uptime-kuma/uptime-kuma/&quot;&gt;
&lt;img src=&quot;https://weblate.kuma.pet/widgets/uptime-kuma/-/svg-badge.svg&quot; alt=&quot;Translation status&quot; /&gt;
&lt;/a&gt;

&lt;img src=&quot;https://user-images.githubusercontent.com/1336778/212262296-e6205815-ad62-488c-83ec-a5b0d0689f7c.jpg&quot; width=&quot;700&quot; alt=&quot;&quot; /&gt;

## 🥔 Live Demo

Try it!

Demo Server (Location: Frankfurt - Germany): https://demo.kuma.pet/start-demo

It is a temporary live demo, all data will be deleted after 10 minutes. Sponsored by [Uptime Kuma Sponsors](https://github.com/louislam/uptime-kuma#%EF%B8%8F-sponsors).

## ⭐ Features

- Monitoring uptime for HTTP(s) / TCP / HTTP(s) Keyword / HTTP(s) Json Query / Ping / DNS Record / Push / Steam Game Server / Docker Containers
- Fancy, Reactive, Fast UI/UX
- Notifications via Telegram, Discord, Gotify, Slack, Pushover, Email (SMTP), and [90+ notification services, click here for the full list](https://github.com/louislam/uptime-kuma/tree/master/src/components/notifications)
- 20-second intervals
- [Multi Languages](https://github.com/louislam/uptime-kuma/tree/master/src/lang)
- Multiple status pages
- Map status pages to specific domains
- Ping chart
- Certificate info
- Proxy support
- 2FA support

## 🔧 How to Install

### 🐳 Docker

```bash
docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
```

Uptime Kuma is now running on &lt;http://0.0.0.0:3001&gt;.

&gt; [!WARNING]
&gt; File Systems like **NFS** (Network File System) are **NOT** supported. Please map to a local directory or volume.

&gt; [!NOTE]
&gt; If you want to limit exposure to localhost (without exposing port for other users or to use a [reverse proxy](https://github.com/louislam/uptime-kuma/wiki/Reverse-Proxy)), you can expose the port like this:
&gt; 
&gt; ```bash
&gt; docker run -d --restart=always -p 127.0.0.1:3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
&gt; ```

### 💪🏻 Non-Docker

Requirements:

- Platform
  - ✅ Major Linux distros such as Debian, Ubuntu, CentOS, Fedora and ArchLinux etc.
  - ✅ Windows 10 (x64), Windows Server 2012 R2 (x64) or higher
  - ❌ FreeBSD / OpenBSD / NetBSD
  - ❌ Replit / Heroku
- [Node.js](https://nodejs.org/en/download/) 18 / 20.4
- [npm](https://docs.npmjs.com/cli/) 9
- [Git](https://git-scm.com/downloads)
- [pm2](https://pm2.keymetrics.io/) - For running Uptime Kuma in the background

```bash
git clone https://github.com/louislam/uptime-kuma.git
cd uptime-kuma
npm run setup

# Option 1. Try it
node server/server.js

# (Recommended) Option 2. Run in the background using PM2
# Install PM2 if you don&#039;t have it:
npm install pm2 -g &amp;&amp; pm2 install pm2-logrotate

# Start Server
pm2 start server/server.js --name uptime-kuma
```

Uptime Kuma is now running on http://localhost:3001

More useful PM2 Commands

```bash
# If you want to see the current console output
pm2 monit

# If you want to add it to startup
pm2 save &amp;&amp; pm2 startup
```

### Advanced Installation

If you need more options or need to browse via a reverse proxy, please read:

https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install

## 🆙 How to Update

Please read:

https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update

## 🆕 What&#039;s Next?

I will assign requests/issues to the next milestone.

https://github.com/louislam/uptime-kuma/milestones

## ❤️ Sponsors

Thank you so much! (GitHub Sponsors will be updated manually. OpenCollective sponsors will be updated automatically, the list will be cached by GitHub though. It may need some time to be updated)

&lt;img src=&quot;https://uptime.kuma.pet/sponsors?v=6&quot; alt /&gt;

## 🖼 More Screenshots

Light Mode:

&lt;img src=&quot;https://uptime.kuma.pet/img/light.jpg&quot; width=&quot;512&quot; alt=&quot;&quot; /&gt;

Status Page:

&lt;img src=&quot;https://user-images.githubusercontent.com/1336778/134628766-a3fe0981-0926-4285-ab46-891a21c3e4cb.png&quot; width=&quot;512&quot; alt=&quot;&quot; /&gt;

Settings Page:

&lt;img src=&quot;https://louislam.net/uptimekuma/2.jpg&quot; width=&quot;400&quot; alt=&quot;&quot; /&gt;

Telegram Notification Sample:

&lt;img src=&quot;https://louislam.net/uptimekuma/3.jpg&quot; width=&quot;400&quot; alt=&quot;&quot; /&gt;

## Motivation

- I was looking for a self-hosted monitoring tool like &quot;Uptime Robot&quot;, but it is hard to find a suitable one. One of the closest ones is statping. Unfortunately, it is not stable and no longer maintained.
- Wanted to build a fancy UI.
- Learn Vue 3 and vite.js.
- Show the power of Bootstrap 5.
- Try to use WebSocket with SPA instead of a REST API.
- Deploy my first Docker image to Docker Hub.

If you love this project, please consider giving it a ⭐.

## 🗣️ Discussion / Ask for Help

⚠️ For any general or technical questions, please don&#039;t send me an email, as I am unable to provide support in that manner. I will not respond if you ask questions there.

I recommend using Google, GitHub Issues, or Uptime Kuma&#039;s subreddit for finding answers to your question. If you cannot find the information you need, feel free to ask:

- [GitHub Issues](https://github.com/louislam/uptime-kuma/issues)
- [Subreddit (r/UptimeKuma)](https://www.reddit.com/r/UptimeKuma/)

My Reddit account: [u/louislamlam](https://reddit.com/u/louislamlam)
You can mention me if you ask a question on the subreddit.

## Contributions

### Create Pull Requests

We DO NOT accept all types of pull requests and do not want to waste your time. Please be sure that you have read and follow pull request rules:
[CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma](https://github.com/louislam/uptime-kuma/blob/master/CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma)

### Test Pull Requests

There are a lot of pull requests right now, but I don&#039;t have time to test them all.

If you want to help, you can check this:
https://github.com/louislam/uptime-kuma/wiki/Test-Pull-Requests

### Test Beta Version

Check out the latest beta release here: https://github.com/louislam/uptime-kuma/releases

### Bug Reports / Feature Requests

If you want to report a bug or request a new feature, feel free to open a [new issue](https://github.com/louislam/uptime-kuma/issues).

### Translations

If you want to translate Uptime Kuma into your language, please visit [Weblate Readme](https://github.com/louislam/uptime-kuma/blob/master/src/lang/README.md).

### Spelling &amp; Grammar

Feel free to correct the grammar in the documentation or code.
My mother language is not English and my grammar is not that great.


</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[Script-Hub-Org/Script-Hub]]></title>
            <link>https://github.com/Script-Hub-Org/Script-Hub</link>
            <guid>https://github.com/Script-Hub-Org/Script-Hub</guid>
            <pubDate>Thu, 14 Aug 2025 00:04:30 GMT</pubDate>
            <description><![CDATA[Advanced Script Converter for QX, Loon, Surge, Stash, Egern, LanceX and Shadowrocket - 重写 & 规则集转换]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Script-Hub-Org/Script-Hub">Script-Hub-Org/Script-Hub</a></h1>
            <p>Advanced Script Converter for QX, Loon, Surge, Stash, Egern, LanceX and Shadowrocket - 重写 & 规则集转换</p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,958</p>
            <p>Forks: 116</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
&lt;br&gt;
&lt;img width=&quot;200&quot; src=&quot;https://raw.githubusercontent.com/Script-Hub-Org/Script-Hub/main/assets/icon-dark.png&quot; alt=&quot;Script Hub&quot;&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h1 align=&quot;center&quot;&gt;Script Hub&lt;h1&gt;
&lt;/div&gt;

&lt;p align=&quot;center&quot; color=&quot;#6a737d&quot;&gt;
Advanced Script Converter for QX, Loon, Surge, Stash, Egern, LanceX and Shadowrocket
&lt;/p&gt;
&lt;p align=&quot;center&quot; color=&quot;#6a737d&quot;&gt;
重写 &amp; 规则集转换
&lt;/p&gt;

## 社群

👏🏻 欢迎加入社群进行交流讨论

👥 群组 [张佩服(群组)](https://t.me/zhangpeifu) &amp; [折腾啥(群组)](https://t.me/zhetengsha_group)

📢 频道 [张佩服(频道)](https://t.me/h5683577) &amp; [折腾啥(频道)](https://t.me/zhetengsha)

## 简介

• 支持将 QX 重写解析至 Surge Shadowrocket Loon Stash

• 支持将 Surge 模块解析至 Loon Stash

• 支持将 Loon 插件解析至 Surge Shadowrocket Stash

• 支持 QX &amp; Surge &amp; Loon &amp; Shadowrocket &amp; Clash 规则集解析，适用 app: Surge Shadowrocket Stash Loon

• 支持 将 QX 脚本转换成 Surge 脚本(兼容)

• 可以修改参数 argument

• 支持一键导入 Shadowrocket / Loon / Stash

• 高级功能 OR 修改任意文本

• 如果某些模块需要 `加参数才能使用` 但只想用远程链接，不想拉取到本地模块的情况 可以直接使用 `纯文本` -&gt; `高级操作`、`修改参数` 功能修改远程链接 `任意内容` 或者 `argument` 参数, 不用再复制到本地模块

• [🆕 不需要代理 app 的全服务器部署版(测试中)](&lt;https://github.com/Script-Hub-Org/Script-Hub/wiki/%E5%85%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%89%88(%E6%B5%8B%E8%AF%95%E4%B8%AD)&gt;)

• 相关生态: [Surge 模块工具](https://github.com/Script-Hub-Org/Script-Hub/wiki/%E7%9B%B8%E5%85%B3%E7%94%9F%E6%80%81:-Surge-%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7) 支持一键导入 Surge， 需要下载「Scriptable」app. 如果想把其他非 Script Hub 转换的 模块放在本地, 也可单独用此脚本

## 文档

[安装体验请查看文档](https://github.com/Script-Hub-Org/Script-Hub/wiki)

## 鸣谢

Powered by [_@Chavy‘s_](https://github.com/chavyleung) [Env.js](https://github.com/chavyleung/scripts)  
原脚本作者 @小白脸  
脚本修改[_@chengkongyiban_](https://github.com/chengkongyiban)  
大量借鉴[_@KOP-XIAO_](https://github.com/KOP-XIAO)佬的[resource-parser.js](https://github.com/KOP-XIAO/QuantumultX/raw/master/Scripts/resource-parser.js)  
感谢[_@xream_](https://github.com/xream) 佬提供与 [_@keywos_](https://github.com/keywos) 修改 `本项目 Script Hub 网页前端`, [replace-header.js](https://raw.githubusercontent.com/Script-Hub-Org/Script-Hub/main/scripts/replace-header.js)，[echo-response.js](https://raw.githubusercontent.com/Script-Hub-Org/Script-Hub/main/scripts/echo-response.js)，[script-converter.js](https://raw.githubusercontent.com/Script-Hub-Org/Script-Hub/main/script-converter.js)  
感谢[_@mieqq_](https://github.com/mieqq) 佬提供的[replace-body.js](https://github.com/mieqq/mieqq/raw/master/replace-body.js), 本项目中已进行修改  
感谢[_@Maasea_](https://github.com/Maasea) 佬的指导  
项目 logo 感谢 [_@Toperlock_](https://github.com/Toperlock)  
插件图标用的 [_@Keikinn_](https://github.com/Keikinn) 佬的 [StickerOnScreen](https://github.com/KeiKinn/StickerOnScreen)项目，以及 [_@Toperlock_](https://github.com/Toperlock) 佬的 [QX 图标库](https://github.com/Toperlock/Quantumult/tree/main/icon)项目，感谢

## 开发

`pnpm preview` html 内容的本地预览

## 赞助

支持我们的工作

[Patreon](https://www.patreon.com/scripthuborg)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>