<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Wed, 29 Oct 2025 00:05:08 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[qeeqbox/social-analyzer]]></title>
            <link>https://github.com/qeeqbox/social-analyzer</link>
            <guid>https://github.com/qeeqbox/social-analyzer</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:08 GMT</pubDate>
            <description><![CDATA[API, CLI, and Web App for analyzing and finding a person's profile in 1000 social media \ websites]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/qeeqbox/social-analyzer">qeeqbox/social-analyzer</a></h1>
            <p>API, CLI, and Web App for analyzing and finding a person's profile in 1000 social media \ websites</p>
            <p>Language: JavaScript</p>
            <p>Stars: 15,029</p>
            <p>Forks: 1,239</p>
            <p>Stars today: 847 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/socialanalyzerlogo_.png&quot;&gt;&lt;/p&gt;

Social Analyzer - API, CLI, and Web App for analyzing &amp; finding a person&#039;s profile across +1000 social media \ websites. It includes different analysis and detection modules, and you can choose which modules to use during the investigation process.

The detection modules utilize a rating mechanism based on different detection techniques, which produces a rate value that starts from 0 to 100 (No-Maybe-Yes). This module is intended to have fewer false positives.

The analysis and public extracted information from this OSINT tool could help investigate profiles related to suspicious or malicious activities such as cyberbullying, cyber grooming, cyberstalking, and spreading misinformation.

`This project is currently used by some law enforcement agencies in countries where resources are limited - The detection database is different than the one shared here..`

## So·cial Me·di·a
Websites and applications that enable users to create and share content or to participate in social networking - Oxford Dictionary

## Structure
&lt;img src=&quot;https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/structure.png&quot;&gt;


## APP (Preferred!)
Standard localhost WEB APP url: http://0.0.0.0:9005/app.html

&lt;img src=&quot;https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/intro_fast.gif&quot; style=&quot;max-width:768px&quot;/&gt;

## CLI 
&lt;img src=&quot;https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/cli.gif&quot; style=&quot;max-width:768px&quot;/&gt;

## Features
- String &amp; name analysis (Permutations and Combinations)
- Find a profile using multiple techniques (HTTPS library &amp; Webdriver)
- Multi profile search (Used for correlation - any combination separated with &quot;,&quot; )
- Multilayers detections (OCR, normal, advanced &amp; special)
- Visualized profile information using Ixora (Metadata &amp; Patterns)
- Metadata &amp; Patterns extraction (Added from Qeeqbox OSINT project)
- Force-directed Graph for Metadata (Needs ExtractPatterns)
- Search by top ranking or by country (Alexa Ranking)
- Search by type (adult, music, etc.. - automated websites stats)
- Profiles stats and static info (Category country)
- Cross Metadata stats (Added from Qeeqbox OSINT project)
- Auto-flirtation to unnecessary output (Enable javascript etc..)
- Search engine lookup (Google API - optional)
- Custom search queries (Google API &amp; DuckDuckGo API - optional)
- Profile screenshot, title, info, and website description
- Find name origins, name similarity &amp; common words by language
- Find possible profile\person age (Limited analysis)
- Custom user-agent, proxy, timeout &amp; implicit wait
- Python CLI &amp; NodeJS CLI (limited to FindUserProfilesFast option)
- Screenshots of detected profile (The latest version of Chrome must be installed)
- Grid option for faster checking (limited to docker-compose)
- Dump logs to folder or terminal (prettified)
- Adjust finding\getting profile workers (default 15)
- Re-checking option for failed profiles
- Filter profiles by good, maybe, and bad
- Save the analysis as a JSON file
- Simplified web interface and CLI
- And, more!!

## Special Detections
- Facebook (Phone number, name, or profile name)
- Gmail (example@gmail.com)
- Google (example@example.com)

## Install &amp; Run
### Linux (As Node WebApp)
```bash
sudo apt-get update
#Depedning on your Linux distro, you may or may not need these 2 lines
sudo DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common
sudo add-apt-repository ppa:mozillateam/ppa -y
sudo apt-get install -y firefox-esr tesseract-ocr git nodejs npm
git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
npm update
npm install
npm start
```

### Linux (As Node CLI)
```bash
sudo apt-get update
#Depedning on your Linux distro, you may or may not need these 2 lines
sudo DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common
sudo add-apt-repository ppa:mozillateam/ppa -y
sudo apt-get install -y firefox-esr tesseract-ocr git nodejs npm
git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
npm install
nodejs app.js --username &quot;johndoe&quot;
#or
nodejs app.js --username &quot;johndoe,janedoe&quot; --metadata
#or
nodejs app.js --username &quot;johndoe,janedoe&quot; --metadata --top 100
#or
nodejs app.js --username &quot;johndoe&quot; --type &quot;adult&quot;
```

### Linux (As python package)
```bash
sudo apt-get update
sudo apt-get install python3 python3-pip
pip3 install social-analyzer
python3 -m social-analyzer --username &quot;johndoe&quot;
#or
python3 -m social-analyzer --username &quot;johndoe&quot; --metadata
#or
python3 -m social-analyzer --username &quot;johndoe&quot; --metadata --top 100
#or
python3 -m social-analyzer --username &quot;johndoe&quot; --type &quot;adult&quot;
#or
python3 -m social-analyzer --username &quot;johndoe&quot; --websites &quot;car&quot; --logs --screenshots
```

### Linux (As python script)
```bash
sudo apt-get update
sudo apt-get install git python3 python3-pip
git clone https://github.com/qeeqbox/social-analyzer
cd social-analyzer
pip3 install -r requirements.txt
python3 app.py --username &quot;janedoe&quot;
#or
python3 app.py --username &quot;johndoe&quot; --metadata
#or
python3 app.py --username &quot;johndoe&quot; --metadata --top 100
#or
python3 app.py --username &quot;johndoe&quot; --type &quot;adult&quot;
#or
python3 app.py --username &quot;johndoe&quot; --websites &quot;car&quot; --logs --screenshots
```

### Importing as object (python)
```python

#E.g. #1
from importlib import import_module
SocialAnalyzer = import_module(&quot;social-analyzer&quot;).SocialAnalyzer()
results = SocialAnalyzer.run_as_object(username=&quot;johndoe&quot;,silent=True)
print(results)

#E.g. #2
from importlib import import_module
SocialAnalyzer = import_module(&quot;social-analyzer&quot;).SocialAnalyzer()
results = SocialAnalyzer.run_as_object(username=&quot;johndoe,janedoe&quot;,silent=True,output=&quot;json&quot;,filter=&quot;good&quot;,metadata=False,timeout=10, profiles=&quot;detected&quot;)
print(results)
```

### Linux, Windows, MacOS, Raspberry pi..
- check this [wiki](https://github.com/qeeqbox/social-analyzer/wiki/install) for all possible installation methods
- check this [wiki](https://github.com/qeeqbox/social-analyzer/wiki/integration) for integrating social-analyzer with your OSINT tools, feeds, etc...

## social-analyzer --h
```
Required Arguments:
  --username   E.g. johndoe, john_doe or johndoe9999

Optional Arguments:
  --websites    A website or websites separated by space E.g. youtube, tiktokor tumblr
  --mode        Analysis mode E.g.fast -&gt; FindUserProfilesFast, slow -&gt; FindUserProfilesSlow or special -&gt; FindUserProfilesSpecial
  --output      Show the output in the following format: json -&gt; json outputfor integration or pretty -&gt; prettify the output
  --options     Show the following when a profile is found: link, rate, titleor text
  --method      find -&gt; show detected profiles, get -&gt; show all profiles regardless detected or not, all -&gt; combine find &amp; get
  --filter      Filter detected profiles by good, maybe or bad, you can do combine them with comma (good,bad) or use all
  --profiles    Filter profiles by detected, unknown or failed, you can do combine them with comma (detected,failed) or use all
  --countries   select websites by country or countries separated by space as: us br ru
  --type        Select websites by type (Adult, Music etc)
  --top         select top websites as 10, 50 etc...[--websites is not needed]
  --extract     Extract profiles, urls &amp; patterns if possible
  --metadata    Extract metadata if possible (pypi QeeqBox OSINT)
  --trim        Trim long strings
  --gui         Reserved for a gui (Not implemented)
  --cli         Reserved for a cli (Not needed)

Listing websites &amp; detections:
  --list        List all available websites

Setting:
  --headers     Headers as dict
  --logs_dir    Change logs directory
  --timeout     Change timeout between each request
  --silent      Disable output to screen
```

## Open Shell
[![Open in Cloud Shell](https://img.shields.io/static/v1?label=%3E_&amp;message=Open%20in%20Cloud%20Shell&amp;color=3267d6&amp;style=flat-square)](https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https://github.com/qeeqbox/social-analyzer&amp;tutorial=README.md) [![Open in repl.it Shell](https://img.shields.io/static/v1?label=%3E_&amp;message=Open%20in%20repl.it%20Shell&amp;color=606c74&amp;style=flat-square)](https://repl.it/github/qeeqbox/social-analyzer)

## Resources
- DuckDuckGo API, Google API, NodeJS, bootstrap, selectize, jQuery, Wikipedia, font-awesome, selenium-webdriver &amp; tesseract.js
- Let me know if I missed a reference or resource!

## Disclaimer\Notes
- Download this project from GitHub and treat it as a security project
- If you want your website to be excluded from this project list, please reach out to me
- This tool is meant to be used locally, not as a service (It does not have any Access Control)
- For issues related to modules that end with -private or under the private group ![](https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/modules.png), reach out directly to me (do not open an issue on GitHub)

## Other Projects
[![](https://github.com/qeeqbox/.github/blob/main/data/analyzer.png)](https://github.com/qeeqbox/analyzer) [![](https://github.com/qeeqbox/.github/blob/main/data/chameleon.png)](https://github.com/qeeqbox/chameleon) [![](https://github.com/qeeqbox/.github/blob/main/data/honeypots.png)](https://github.com/qeeqbox/honeypots) [![](https://github.com/qeeqbox/.github/blob/main/data/osint.png)](https://github.com/qeeqbox/osint) [![](https://github.com/qeeqbox/.github/blob/main/data/url-sandbox.png)](https://github.com/qeeqbox/url-sandbox) [![](https://github.com/qeeqbox/.github/blob/main/data/mitre-visualizer.png)](https://github.com/qeeqbox/mitre-visualizer) [![](https://github.com/qeeqbox/.github/blob/main/data/woodpecker.png)](https://github.com/qeeqbox/woodpecker) [![](https://github.com/qeeqbox/.github/blob/main/data/docker-images.png)](https://github.com/qeeqbox/docker-images) [![](https://github.com/qeeqbox/.github/blob/main/data/seahorse.png)](https://github.com/qeeqbox/seahorse) [![](https://github.com/qeeqbox/.github/blob/main/data/rhino.png)](https://github.com/qeeqbox/rhino) [![](https://github.com/qeeqbox/.github/blob/main/data/raven.png)](https://github.com/qeeqbox/raven) [![](https://github.com/qeeqbox/.github/blob/main/data/image-analyzer.png)](https://github.com/qeeqbox/image-analyzer)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[trekhleb/javascript-algorithms]]></title>
            <link>https://github.com/trekhleb/javascript-algorithms</link>
            <guid>https://github.com/trekhleb/javascript-algorithms</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:07 GMT</pubDate>
            <description><![CDATA[📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/trekhleb/javascript-algorithms">trekhleb/javascript-algorithms</a></h1>
            <p>📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings</p>
            <p>Language: JavaScript</p>
            <p>Stars: 193,770</p>
            <p>Forks: 30,928</p>
            <p>Stars today: 103 stars today</p>
            <h2>README</h2><pre># JavaScript Algorithms and Data Structures

&gt; 🇺🇦 UKRAINE [IS BEING ATTACKED](https://war.ukraine.ua/) BY RUSSIAN ARMY. CIVILIANS ARE GETTING KILLED. RESIDENTIAL AREAS ARE GETTING BOMBED.
&gt; - Help Ukraine via:
&gt;   - [Serhiy Prytula Charity Foundation](https://prytulafoundation.org/en/)
&gt;   - [Come Back Alive Charity Foundation](https://savelife.in.ua/en/donate-en/)
&gt;   - [National Bank of Ukraine](https://bank.gov.ua/en/news/all/natsionalniy-bank-vidkriv-spetsrahunok-dlya-zboru-koshtiv-na-potrebi-armiyi)
&gt; - More info on [war.ukraine.ua](https://war.ukraine.ua/) and [MFA of Ukraine](https://twitter.com/MFA_Ukraine)

&lt;hr/&gt;

[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)
[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)
![repo size](https://img.shields.io/github/repo-size/trekhleb/javascript-algorithms.svg)

This repository contains JavaScript based examples of many
popular algorithms and data structures.

Each algorithm and data structure has its own separate README
with related explanations and links for further reading (including ones
to YouTube videos).

_Read this in other languages:_
[_简体中文_](README.zh-CN.md),
[_繁體中文_](README.zh-TW.md),
[_한국어_](README.ko-KR.md),
[_日本語_](README.ja-JP.md),
[_Polski_](README.pl-PL.md),
[_Français_](README.fr-FR.md),
[_Español_](README.es-ES.md),
[_Português_](README.pt-BR.md),
[_Русский_](README.ru-RU.md),
[_Türkçe_](README.tr-TR.md),
[_Italiano_](README.it-IT.md),
[_Bahasa Indonesia_](README.id-ID.md),
[_Українська_](README.uk-UA.md),
[_Arabic_](README.ar-AR.md),
[_Tiếng Việt_](README.vi-VN.md),
[_Deutsch_](README.de-DE.md),
[_Uzbek_](README.uz-UZ.md),
[_עברית_](README.he-IL.md)

## Data Structures

A data structure is a particular way of organizing and storing data in a computer so that it can
be accessed and modified efficiently. More precisely, a data structure is a collection of data
values, the relationships among them, and the functions or operations that can be applied to
the data.

Remember that each data has its own trade-offs. And you need to pay attention more to why you&#039;re choosing a certain data structure than to how to implement it.

`B` - Beginner, `A` - Advanced

* `B` [Linked List](src/data-structures/linked-list)
* `B` [Doubly Linked List](src/data-structures/doubly-linked-list)
* `B` [Queue](src/data-structures/queue)
* `B` [Stack](src/data-structures/stack)
* `B` [Hash Table](src/data-structures/hash-table)
* `B` [Heap](src/data-structures/heap) - max and min heap versions
* `B` [Priority Queue](src/data-structures/priority-queue)
* `A` [Trie](src/data-structures/trie)
* `A` [Tree](src/data-structures/tree)
  * `A` [Binary Search Tree](src/data-structures/tree/binary-search-tree)
  * `A` [AVL Tree](src/data-structures/tree/avl-tree)
  * `A` [Red-Black Tree](src/data-structures/tree/red-black-tree)
  * `A` [Segment Tree](src/data-structures/tree/segment-tree) - with min/max/sum range queries examples
  * `A` [Fenwick Tree](src/data-structures/tree/fenwick-tree) (Binary Indexed Tree)
* `A` [Graph](src/data-structures/graph) (both directed and undirected)
* `A` [Disjoint Set](src/data-structures/disjoint-set) - a union–find data structure or merge–find set
* `A` [Bloom Filter](src/data-structures/bloom-filter)
* `A` [LRU Cache](src/data-structures/lru-cache/) - Least Recently Used (LRU) cache

## Algorithms

An algorithm is an unambiguous specification of how to solve a class of problems. It is
a set of rules that precisely define a sequence of operations.

`B` - Beginner, `A` - Advanced

### Algorithms by Topic

* **Math**
  * `B` [Bit Manipulation](src/algorithms/math/bits) - set/get/update/clear bits, multiplication/division by two, make negative etc.
  * `B` [Binary Floating Point](src/algorithms/math/binary-floating-point) - binary representation of the floating-point numbers.
  * `B` [Factorial](src/algorithms/math/factorial)
  * `B` [Fibonacci Number](src/algorithms/math/fibonacci) - classic and closed-form versions
  * `B` [Prime Factors](src/algorithms/math/prime-factors) - finding prime factors and counting them using Hardy-Ramanujan&#039;s theorem
  * `B` [Primality Test](src/algorithms/math/primality-test) (trial division method)
  * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)
  * `B` [Least Common Multiple](src/algorithms/math/least-common-multiple) (LCM)
  * `B` [Sieve of Eratosthenes](src/algorithms/math/sieve-of-eratosthenes) - finding all prime numbers up to any given limit
  * `B` [Is Power of Two](src/algorithms/math/is-power-of-two) - check if the number is power of two (naive and bitwise algorithms)
  * `B` [Pascal&#039;s Triangle](src/algorithms/math/pascal-triangle)
  * `B` [Complex Number](src/algorithms/math/complex-number) - complex numbers and basic operations with them
  * `B` [Radian &amp; Degree](src/algorithms/math/radian) - radians to degree and backwards conversion
  * `B` [Fast Powering](src/algorithms/math/fast-powering)
  * `B` [Horner&#039;s method](src/algorithms/math/horner-method) - polynomial evaluation
  * `B` [Matrices](src/algorithms/math/matrix) - matrices and basic matrix operations (multiplication, transposition, etc.)
  * `B` [Euclidean Distance](src/algorithms/math/euclidean-distance) - distance between two points/vectors/matrices
  * `A` [Integer Partition](src/algorithms/math/integer-partition)
  * `A` [Square Root](src/algorithms/math/square-root) - Newton&#039;s method
  * `A` [Liu Hui π Algorithm](src/algorithms/math/liu-hui) - approximate π calculations based on N-gons
  * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - decompose a function of time (a signal) into the frequencies that make it up
* **Sets**
  * `B` [Cartesian Product](src/algorithms/sets/cartesian-product) - product of multiple sets
  * `B` [Fisher–Yates Shuffle](src/algorithms/sets/fisher-yates) - random permutation of a finite sequence
  * `A` [Power Set](src/algorithms/sets/power-set) - all subsets of a set (bitwise, backtracking, and cascading solutions)
  * `A` [Permutations](src/algorithms/sets/permutations) (with and without repetitions)
  * `A` [Combinations](src/algorithms/sets/combinations) (with and without repetitions)
  * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS)
  * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence)
  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence) (SCS)
  * `A` [Knapsack Problem](src/algorithms/sets/knapsack-problem) - &quot;0/1&quot; and &quot;Unbound&quot; ones
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray) - &quot;Brute Force&quot; and &quot;Dynamic Programming&quot; (Kadane&#039;s) versions
  * `A` [Combination Sum](src/algorithms/sets/combination-sum) - find all combinations that form specific sum
* **Strings**
  * `B` [Hamming Distance](src/algorithms/string/hamming-distance) - number of positions at which the symbols are different
  * `B` [Palindrome](src/algorithms/string/palindrome) - check if the string is the same in reverse
  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - minimum edit distance between two sequences
  * `A` [Knuth–Morris–Pratt Algorithm](src/algorithms/string/knuth-morris-pratt) (KMP Algorithm) - substring search (pattern matching)
  * `A` [Z Algorithm](src/algorithms/string/z-algorithm) - substring search (pattern matching)
  * `A` [Rabin Karp Algorithm](src/algorithms/string/rabin-karp) - substring search
  * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring)
  * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching)
* **Searches**
  * `B` [Linear Search](src/algorithms/search/linear-search)
  * `B` [Jump Search](src/algorithms/search/jump-search) (or Block Search) - search in sorted array
  * `B` [Binary Search](src/algorithms/search/binary-search) - search in sorted array
  * `B` [Interpolation Search](src/algorithms/search/interpolation-search) - search in uniformly distributed sorted array
* **Sorting**
  * `B` [Bubble Sort](src/algorithms/sorting/bubble-sort)
  * `B` [Selection Sort](src/algorithms/sorting/selection-sort)
  * `B` [Insertion Sort](src/algorithms/sorting/insertion-sort)
  * `B` [Heap Sort](src/algorithms/sorting/heap-sort)
  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)
  * `B` [Quicksort](src/algorithms/sorting/quick-sort) - in-place and non-in-place implementations
  * `B` [Shellsort](src/algorithms/sorting/shell-sort)
  * `B` [Counting Sort](src/algorithms/sorting/counting-sort)
  * `B` [Radix Sort](src/algorithms/sorting/radix-sort)
  * `B` [Bucket Sort](src/algorithms/sorting/bucket-sort)
* **Linked Lists**
  * `B` [Straight Traversal](src/algorithms/linked-list/traversal)
  * `B` [Reverse Traversal](src/algorithms/linked-list/reverse-traversal)
* **Trees**
  * `B` [Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)
  * `B` [Breadth-First Search](src/algorithms/tree/breadth-first-search) (BFS)
* **Graphs**
  * `B` [Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)
  * `B` [Breadth-First Search](src/algorithms/graph/breadth-first-search) (BFS)
  * `B` [Kruskal’s Algorithm](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - finding the shortest paths to all graph vertices from single vertex
  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - finding the shortest paths to all graph vertices from single vertex
  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - find the shortest paths between all pairs of vertices
  * `A` [Detect Cycle](src/algorithms/graph/detect-cycle) - for both directed and undirected graphs (DFS and Disjoint Set based versions)
  * `A` [Prim’s Algorithm](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Topological Sorting](src/algorithms/graph/topological-sorting) - DFS method
  * `A` [Articulation Points](src/algorithms/graph/articulation-points) - Tarjan&#039;s algorithm (DFS based)
  * `A` [Bridges](src/algorithms/graph/bridges) - DFS based algorithm
  * `A` [Eulerian Path and Eulerian Circuit](src/algorithms/graph/eulerian-path) - Fleury&#039;s algorithm - Visit every edge exactly once
  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once
  * `A` [Strongly Connected Components](src/algorithms/graph/strongly-connected-components) - Kosaraju&#039;s algorithm
  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city
* **Cryptography**
  * `B` [Polynomial Hash](src/algorithms/cryptography/polynomial-hash) - rolling hash function based on polynomial
  * `B` [Rail Fence Cipher](src/algorithms/cryptography/rail-fence-cipher) - a transposition cipher algorithm for encoding messages
  * `B` [Caesar Cipher](src/algorithms/cryptography/caesar-cipher) - simple substitution cipher
  * `B` [Hill Cipher](src/algorithms/cryptography/hill-cipher) - substitution cipher based on linear algebra
* **Machine Learning**
  * `B` [NanoNeuron](https://github.com/trekhleb/nano-neuron) - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)
  * `B` [k-NN](src/algorithms/ml/knn) - k-nearest neighbors classification algorithm
  * `B` [k-Means](src/algorithms/ml/k-means) - k-Means clustering algorithm
* **Image Processing**
  * `B` [Seam Carving](src/algorithms/image-processing/seam-carving) - content-aware image resizing algorithm
* **Statistics**
  * `B` [Weighted Random](src/algorithms/statistics/weighted-random) - select the random item from the list based on items&#039; weights
* **Evolutionary algorithms**
  * `A` [Genetic algorithm](https://github.com/trekhleb/self-parking-car-evolution) - example of how the genetic algorithm may be applied for training the self-parking cars
* **Uncategorized**
  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)
  * `B` [Square Matrix Rotation](src/algorithms/uncategorized/square-matrix-rotation) - in-place algorithm
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game) - backtracking, dynamic programming (top-down + bottom-up) and greedy examples
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths) - backtracking, dynamic programming and Pascal&#039;s Triangle based examples
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem (dynamic programming and brute force versions)
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach to the top (4 solutions)
  * `B` [Best Time To Buy Sell Stocks](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - divide and conquer and one-pass examples
  * `B` [Valid Parentheses](src/algorithms/stack/valid-parentheses) - check if a string has valid parentheses (using stack)
  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)
  * `A` [Knight&#039;s Tour](src/algorithms/uncategorized/knight-tour)

### Algorithms by Paradigm

An algorithmic paradigm is a generic method or approach which underlies the design of a class
of algorithms. It is an abstraction higher than the notion of an algorithm, just as an
algorithm is an abstraction higher than a computer program.

* **Brute Force** - look at all the possibilities and selects the best solution
  * `B` [Linear Search](src/algorithms/search/linear-search)
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach the top
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city
  * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - decompose a function of time (a signal) into the frequencies that make it up
* **Greedy** - choose the best option at the current time, without any consideration for the future
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `A` [Unbound Knapsack Problem](src/algorithms/sets/knapsack-problem)
  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - finding the shortest path to all graph vertices
  * `A` [Prim’s Algorithm](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Kruskal’s Algorithm](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph
* **Divide and Conquer** - divide the problem into smaller parts and then solve those parts
  * `B` [Binary Search](src/algorithms/search/binary-search)
  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)
  * `B` [Pascal&#039;s Triangle](src/algorithms/math/pascal-triangle)
  * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)
  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)
  * `B` [Quicksort](src/algorithms/sorting/quick-sort)
  * `B` [Tree Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)
  * `B` [Graph Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)
  * `B` [Matrices](src/algorithms/math/matrix) - generating and traversing the matrices of different shapes
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Fast Powering](src/algorithms/math/fast-powering)
  * `B` [Best Time To Buy Sell Stocks](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - divide and conquer and one-pass examples
  * `A` [Permutations](src/algorithms/sets/permutations) (with and without repetitions)
  * `A` [Combinations](src/algorithms/sets/combinations) (with and without repetitions)
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
* **Dynamic Programming** - build up a solution using previously found sub-solutions
  * `B` [Fibonacci Number](src/algorithms/math/fibonacci)
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach the top
  * `B` [Seam Carving](src/algorithms/image-processing/seam-carving) - content-aware image resizing algorithm
  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - minimum edit distance between two sequences
  * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS)
  * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring)
  * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence)
  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence)
  * `A` [0/1 Knapsack Problem](src/algorithms/sets/knapsack-problem)
  * `A` [Integer Partition](src/algorithms/math/integer-partition)
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - finding the shortest path to all graph vertices
  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - find the shortest paths between all pairs of vertices
  * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching)
* **Backtracking** - similarly to brute force, try to generate all possible solutions, but each time you generate the next solution, you test
if it satisfies all conditions and only then continue generating subsequent solutions. Otherwise, backtrack and go on a
different path to finding a solution. Normally the DFS traversal of state-space is being used.
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)
  * `B` [Power Set](src/algorithms/sets/power-set) - all subsets of a set
  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once
  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)
  * `A` [Knight&#039;s Tour](src/algorithms/uncategorized/knight-tour)
  * `A` [Combination Sum](src/algorithms/sets/combination-sum) - find all combinations that form specific sum
* **Branch &amp; Bound** - remember the lowest-cost solution found at each stage of the backtracking
search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of
a least-cost solution to the problem in order to discard partial solutions with costs larger than the
lowest-cost solution found so far. Normally, BFS traversal in combination with DFS traversal of state-space
tree is being used.

## How to use this repository

**Install all dependencies**

```
npm install
```

**Run ESLint**

You may want to run it to check code quality.

```
npm run lint
```

**Run all tests**

```
npm test
```

**Run tests by name**

```
npm test -- &#039;LinkedList&#039;
```

**Troubleshooting**

If linting or testing is failing, try to delete the `node_modules` folder and re-install npm packages:

```
rm -rf ./node_modules
npm i
```

Also, make sure that you&#039;re using the correct Node version (`&gt;=16`). If you&#039;re using [nvm](https://github.com/nvm-sh/nvm) for Node version management you may run `nvm use` from the root folder of the project and the correct version will be picked up.

**Playground**

You may play with data-structures and algorithms in `./src/playgro

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[meshery/meshery]]></title>
            <link>https://github.com/meshery/meshery</link>
            <guid>https://github.com/meshery/meshery</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:06 GMT</pubDate>
            <description><![CDATA[Meshery, the cloud native manager]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/meshery/meshery">meshery/meshery</a></h1>
            <p>Meshery, the cloud native manager</p>
            <p>Language: JavaScript</p>
            <p>Stars: 9,357</p>
            <p>Forks: 2,763</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre>
&lt;p style=&quot;text-align:center;&quot; align=&quot;center&quot;&gt;&lt;a href=&quot;https://meshery.io&quot;&gt;&lt;picture&gt;
 &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-light-text-side.svg&quot;&gt;
 &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg&quot;&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg&quot;
alt=&quot;Meshery Logo&quot; width=&quot;70%&quot; /&gt;&lt;/picture&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://hub.docker.com/r/meshery/meshery&quot; alt=&quot;Docker pulls&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/docker/pulls/meshery/meshery.svg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/issues?q=is%3Aopen%20is%3Aissue%20archived%3Afalse%20(org%3Ameshery%20OR%20org%3Aservice-mesh-performance%20OR%20org%3Aservice-mesh-patterns%20OR%20org%3Ameshery-extensions)%20label%3A%22help%20wanted%22%20&quot; alt=&quot;GitHub issues by-label&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/issues/meshery/meshery/help%20wanted.svg?color=informational&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/meshery/meshery/blob/master/LICENSE&quot; alt=&quot;LICENSE&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/license/meshery/meshery?color=brightgreen&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://artifacthub.io/packages/helm/meshery/meshery&quot; alt=&quot;Artifact Hub Meshery&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/endpoint?color=brightgreen&amp;label=Helm%20Chart&amp;style=plastic&amp;url=https%3A%2F%2Fartifacthub.io%2Fbadge%2Frepository%2Fartifact-hub&quot; /&gt;&lt;/a&gt;  
&lt;a href=&quot;https://goreportcard.com/report/github.com/meshery/meshery&quot; alt=&quot;Go Report Card&quot;&gt;
  &lt;img src=&quot;https://goreportcard.com/badge/github.com/meshery/meshery&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/meshery/meshery/actions&quot; alt=&quot;Build Status&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/meshery/meshery/release-drafter.yml&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://bestpractices.coreinfrastructure.org/projects/3564&quot; alt=&quot;CLI Best Practices&quot;&gt;
  &lt;img src=&quot;https://bestpractices.coreinfrastructure.org/projects/3564/badge&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://meshery.io/community#discussion-forums&quot; alt=&quot;Discussion Forum&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/discourse/users?label=discuss&amp;logo=discourse&amp;server=https%3A%2F%2Fmeshery.io/community&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://slack.meshery.io&quot; alt=&quot;Join Slack&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/badge/Slack-@meshery.svg?logo=slack&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/intent/follow?screen_name=mesheryio&quot; alt=&quot;Twitter Follow&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/twitter/follow/mesheryio.svg?label=Follow+Meshery&amp;style=social&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/meshery/meshery/releases&quot; alt=&quot;Meshery Downloads&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/downloads/meshery/meshery/total&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://scorecard.dev/viewer/?uri=github.com/meshery/meshery&quot; alt=&quot;OpenSSF Scorecard&quot;&gt;
  &lt;img src=&quot;https://api.scorecard.dev/projects/github.com/meshery/meshery/badge&quot; /&gt;&lt;/a&gt; 
&lt;a href=&quot;https://trendshift.io/repositories/888&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/888&quot; alt=&quot;meshery%2Fmeshery | Trendshift&quot; style=&quot;width: 150px;&quot; width=&quot;150px&quot; /&gt;&lt;/a&gt;
&lt;!-- &lt;a href=&quot;https://app.fossa.com/projects/git%2Bgithub.com%2Fmeshery%2Fmeshery?ref=badge_shield&quot; alt=&quot;License Scan Report&quot;&gt;
  &lt;img src=&quot;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fmeshery%2Fmeshery.svg?type=shield&quot;/&gt;&lt;/a&gt;  
  --&gt;
&lt;/p&gt;

&lt;h5&gt;&lt;p align=&quot;center&quot;&gt;&lt;i&gt;If you like Meshery, please &lt;a href=&quot;https://github.com/meshery/meshery/stargazers&quot;&gt;★&lt;/a&gt; this repository to show your support! 🤩&lt;/i&gt;&lt;/p&gt;&lt;/h5&gt;
&lt;p align=&quot;center&quot; &gt;
MESHERY IS A CLOUD NATIVE COMPUTING FOUNDATION PROJECT
&lt;/p&gt;

&lt;div align=&quot;center&quot; width=&quot;100%&quot;&gt;
&lt;img src=&quot;.github/assets/images/readme/cncf-white.svg#gh-dark-mode-only&quot; width=&quot;30%&quot; align=&quot;center&quot; /&gt;
&lt;img src=&quot;.github/assets/images/readme/cncf-black.svg#gh-light-mode-only&quot; width=&quot;30%&quot; align=&quot;center&quot; /&gt;
&lt;/div&gt;
&lt;br /&gt;
&lt;p align=&quot;center&quot;&gt;
A self-service engineering platform, &lt;a href=&quot;https://meshery.io&quot;&gt;Meshery&lt;/a&gt;, is the open source, cloud native manager that enables the design and management of all Kubernetes-based infrastructure and applications (multi-cloud). Among other features,  As an extensible platform, Meshery offers visual and collaborative GitOps, freeing you from the chains of YAML while managing Kubernetes multi-cluster deployments.
&lt;/p&gt;
&lt;br /&gt;

&lt;div align=&quot;center&quot; width=&quot;100%&quot;&gt;
&lt;a href=&quot;https://www.youtube.com/watch?v=034nVaQUyME&amp;list=PL3A-A6hPO2IO_yzN83wSJJUNQActzCJvO&amp;index=9&quot;&gt;&lt;img src=&quot;.github/assets/images/readme/meshery-dashboard-hero-image.png&quot; width=&quot;800px&quot; /&gt;&lt;/a&gt;
 &lt;br /&gt;Try Meshery in your browser using the &lt;a href=&quot;https://play.meshery.io&quot;&gt;Cloud Native Playground&lt;/a&gt; (&lt;a href=&quot;https://www.youtube.com/watch?v=034nVaQUyME&amp;list=PL3A-A6hPO2IO_yzN83wSJJUNQActzCJvO&amp;index=9&quot;&gt;teaser video&lt;/a&gt;)
&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;h4 align=&quot;center&quot;&gt;Open Meshery extension, Kanvas, in your browser: https://kanvas.new&lt;/h4&gt;
&lt;/p&gt;
&lt;br /&gt;
&lt;!--
- [Functionality](#functionality)
  - [Meshery Architecture](#meshery-architecture)
  - [Join the Meshery community!](#join-the-meshery-community)
  - [Contributing](#contributing)
    - [Stargazers](#stargazers)
    - [License](#license)
--&gt;
&lt;!-- &lt;p style=&quot;clear:both;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;a href=&quot;https://meshery.io&quot;&gt;&lt;picture&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-light-text-side.svg&quot;&gt;
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg&quot;&gt;
  &lt;img alt=&quot;Meshery - the Cloud Native Manager&quot; src=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg&quot; align=&quot;left&quot; width=&quot;45%&quot;&gt;
  &lt;/picture&gt;&lt;/a&gt; 
&lt;a href=&quot;https://meshery.io&quot;&gt;
&lt;h3 style=&quot;margin:auto;&quot;&gt;&lt;br /&gt;&lt;br /&gt;
  &lt;a href=&quot;https://docs.google.com/presentation/d/14kxjwYSJ_FyE3K_6CDEd6oq2kqwn0OSE8RDJ4H-KlKU/edit?usp=sharing&quot;&gt;&lt;center&gt;&lt;i&gt;Project Overview Presentation&lt;/i&gt;&lt;/center&gt;&lt;/a&gt;
  &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
&lt;/h3&gt; --&gt;

&lt;p style=&quot;clear:both;&quot;&gt;&amp;nbsp;&lt;/p&gt;

# Functionality

## Infrastructure Lifecycle Management

Meshery manages the configuration, deployment, and operation of your Cloud services and Kubernetes clusters while supporting hundreds of different types of cloud native infrastructure integrations. Meshery supports [300+ integrations](https://meshery.io/integrations).

&lt;!--
&lt;a href=&quot;https://www.youtube.com/watch?v=034nVaQUyME&quot;&gt;&lt;img alt=&quot;Meshery cloud native management&quot; src=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshmap.gif&quot;  style=&quot;margin-left:10px; margin-bottom:10px;&quot; width=&quot;100%&quot; align=&quot;center&quot; /&gt;&lt;/a&gt;
&lt;br /&gt;&lt;br /&gt;--&gt;
&lt;/p&gt;

&lt;a href=&quot;.github/assets/images/readme/cloud-native-integrations.png&quot;&gt;&lt;img alt=&quot;Meshery Integrations&quot; src=&quot;.github/assets/images/readme/cloud-native-integrations.png&quot;  style=&quot;margin-right:10px;margin-bottom:10px;&quot; width=&quot;100%&quot; align=&quot;center&quot;/&gt;&lt;/a&gt;

Find infrastructure configuration patterns in Meshery&#039;s &lt;a href=&quot;https://meshery.io/catalog&quot;&gt;catalog of curated design templates&lt;/a&gt; filled with configuration best practices.

### Multiple Kubernetes Clusters and Multiple Clouds

&lt;img src =&quot;https://meshery.io/assets/images/screens/multi-cluster-management.gif&quot; width=&quot;50%&quot; alt=&quot;Multi-cluster Kubernetes Manager&quot; loading=&quot;lazy&quot; align=&quot;center&quot; /&gt;&lt;br /&gt;

Meshery provides a single pane of glass to manage multiple Kubernetes clusters across any infrastructure, including various cloud providers. Meshery enables consistent configuration, operation, and observability across your entire Kubernetes landscape.

&lt;details&gt;&lt;summary&gt;&lt;h4&gt;Dry-run your deployments&lt;/h4&gt;&lt;/summary&gt;
Meshery leverages Kubernetes&#039; built-in dry-run capabilities to allow you to simulate deployments without actually applying the changes to your cluster. This enables you to:

- Validate configurations: Ensure your deployment specifications (e.g., YAML manifests, Helm charts, Meshery Designs) are syntactically correct and will be accepted by the Kubernetes API server.   
- Identify potential issues: Detect errors in your configurations, such as invalid resource definitions, missing fields, or API version mismatches, before they impact your live environment.
- Preview changes: Understand the objects that Kubernetes would create or modify during a real deployment.
- Integrate with CI/CD: Incorporate dry-run as a step in your continuous integration and continuous delivery pipelines to automate pre-deployment checks and prevent faulty deployments.

By providing this dry-run functionality, Meshery helps you increase the reliability and stability of your Kubernetes deployments by catching potential problems early in the development and deployment process.
&lt;!-- 
Assess your cloud native infrastructure configuration against deployment and operational best practices with Meshery&#039;s configuration validator. Manage your workloads with confidence. Check your Kubernetes configuration for anti-patterns and avoid common pitfalls. --&gt;

&lt;/details&gt;

### Visually and collaboratively manage your infrastructure

Using a GitOps-centric approach, visually and collaboratively design and manage your infrastructure and microservices. Meshery intelligently infers the manner in which each resource [interrelates](https://docs.meshery.io/concepts/logical/relationships) with each other. Meshery supports a broad variety of built-in relationships between components, which you can use to create your own custom relationships.

&lt;img src=&quot;.github/assets/images/readme/edge_mount_relationship_pod_persistent_volume.svg&quot; width=&quot;50%&quot; alt=&quot;Multi-cluster Kubernetes Manager&quot; align=&quot;center&quot; /&gt;

&lt;details&gt;&lt;summary&gt;&lt;img alt=&quot;OPA Logo&quot; src=&quot;.github/assets/images/readme/opa-logo.svg&quot; style=&quot;margin-right:10px;&quot; width=&quot;25px&quot; align=&quot;left&quot; /&gt;&lt;h4&gt;Context-Aware Policies For Applications&lt;/h4&gt;&lt;/summary&gt;
&lt;img alt=&quot;Meshery and Open Policy Agent Integration&quot; src=&quot;.github/assets/images/readme/meshery-policies-2.png&quot; style=&quot;margin:auto;text-align:center&quot; width=&quot;50%&quot; /&gt;
&lt;p&gt;Leverage built-in relationships to enforce configuration best practices consistently from code to Kubernetes. Customize Configure your infrastructure with confidence without needing to know or write Open Policy Agent&#039;s Rego query language.&lt;/p&gt;
&lt;/details&gt;

## Workspaces: Your team&#039;s Google Drive for cloud native projects

&lt;img src=&quot;.github/assets/images/readme/workspace.gif&quot; width=&quot;50%&quot; alt=&quot;Multi-cluster Kubernetes Manager&quot; loading=&quot;lazy&quot; /&gt;

Workspaces let you organize your work and serve as the central point of collaboration for you and your teams and point of access control to Environments and their resources.

&lt;details&gt;&lt;summary&gt;&lt;h4&gt;Manage your connections with Environments&lt;/h4&gt;&lt;/summary&gt;

&lt;img src=&quot;.github/assets/images/readme/environments.gif&quot; width=&quot;50%&quot; alt=&quot;Multi-cluster Kubernetes Manager&quot; loading=&quot;lazy&quot; /&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.meshery.io/concepts/logical/environments&quot;&gt;Environments&lt;/a&gt;  make it easier for you to manage, share, and work with a collection of resources as a group, instead of dealing with all your Connections and Credentials on an individual basis.&lt;/p&gt;
&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;&lt;h4&gt;See changes to your infra before you merge&lt;/h4&gt;&lt;/summary&gt;

&lt;img src=&quot;.github/assets/images/readme/meshery-snapshot.png&quot; width=&quot;50%&quot; alt=&quot;Multi-cluster Kubernetes Manager&quot; loading=&quot;lazy&quot; align=&quot;center&quot; /&gt;

Get snapshots of your infrastructure directly in your PRs. Preview your deployment, view changes pull request-to-pull request and get infrastructure snapshots within your PRs by connecting Kanvas to your GitHub repositories.
&lt;/details&gt;

&lt;!-- &lt;h3&gt;Operate with configuration best practices&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;p&gt;Assess your configurations against deployment and operational best practices with Meshery&#039;s configuration validator.&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;

&lt;h3&gt;Control all of your infrastructure with mesheryctl&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;p&gt;Whether managing multiple Meshery deployments, importing designs, discoverying Kubernetes clusters, do so with ease using Meshery CLI in your terminal.&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt; --&gt;

## Platform Engineering with Meshery&#039;s Extension Points

Extend Meshery as your self-service engineering platform by taking advantage of its [vast set of extensibility features](https://docs.meshery.io/extensibility), including gRPC adapters, hot-loadable Reactjs packages and Golang plugins, subscriptions on NATS topics, consumable _and_ extendable API interfaces via REST and GraphQL.The great number of extension points in Meshery make it ideal as the foundation of your internal developer platform.

&lt;details&gt;&lt;summary&gt;&lt;h4&gt;Access the Cloud Native Patterns for Kubernetes&lt;/h4&gt;&lt;/summary&gt;

&lt;p&gt;Design and manage all of your cloud native infrastructure using the design configurator in Meshery or start from a template using the patterns from the &lt;a href=&quot;https://meshery.io/catalog&quot;&gt;catalog&lt;/a&gt;.
&lt;/details&gt;

Meshery offers robust capabilities for managing multiple tenants within a shared Kubernetes infrastructure. Meshery provides the tools and integrations necessary to create a secure, isolated, and manageable multi-tenant environments, allowing multiple teams or organizations with granular control over their role-based access controls.

Meshery&#039;s &quot;multi-player&quot; functionality refers to its collaborative features that enable multiple users to interact with and manage cloud native infrastructure simultaneously. This is primarily facilitated through Kanvas, a Meshery extension visual designer and management interface.

## Performance Management

Meshery offers load generation and performance characterization to help you assess and optimize the performance of your applications and infrastructure.

&lt;img src=&quot;.github/assets/images/readme/performance-metrics.gif&quot; alt=&quot;Multi-cluster Kubernetes Manager&quot; width=&quot;50%&quot; /&gt;

&lt;p&gt;Create and reuse performance profiles for consistent characterization of the configuration of your infrastructure in context of how it performs.&lt;/p&gt;

&lt;details&gt;
&lt;summary&gt;&lt;h4&gt; Manage the performance of your infrastructure and its workloads&lt;/h4&gt;&lt;/summary&gt;

&lt;img src = &quot;.github/assets/images/readme/meshery-performance.gif&quot;&gt;

Baseline and track your cloud native performance from release to release.

- Use performance profiles to track the historical performance of your workloads.
- Track your application performance from version to version.
- Understand behavioral differences between cloud native network functions.
- Compare performance across infrastructure deployments.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;h4&gt;Load Generation and Microservice Performance Characteristization&lt;/h4&gt;&lt;/summary&gt;

&lt;picture align=&quot;left&quot;&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/layer5io/layer5/master/src/assets/images/service-mesh-performance/stacked/smp-light-text.svg&quot;  width=&quot;18%&quot; align=&quot;left&quot; style=&quot;margin-left:10px;&quot; /&gt;
  &lt;img alt=&quot;Shows an illustrated light mode meshery logo in light color mode and a dark mode meshery logo dark color mode.&quot; src=&quot;https://raw.githubusercontent.com/layer5io/layer5/master/src/assets/images/service-mesh-performance/stacked/smp-light-text.svg&quot; width=&quot;18%&quot; align=&quot;left&quot; style=&quot;margin-left:10px;&quot; /&gt;
&lt;/picture&gt;

- **Multiple Load Generators:** Meshery supports various load generators, including Fortio, Wrk2, and Nighthawk, allowing users to choose the tool that best suits your needs.
- **Configurable Performance Profiles:** Meshery provides a highly configurable set of load profiles with tunable facets, enabling users to generate TCP, gRPC, and HTTP load. You can customize parameters such as duration, concurrent threads, concurrent generators, and load generator type. 
- **Statistical Analysis:** Meshery performs statistical analysis on the results of performance tests, presenting data in the form of histograms with latency buckets. Understand the distribution of response times and identify potential bottlenecks.
- **Comparison of Test Results:** Meshery enables you to compare the difference in request performance (latency and throughput) between independent performance tests. Save your load test configurations as Performance Profiles, making it easy to rerun tests with the same settings and track performance variations over time.
- **Kubernetes Cluster and Workload Metrics:** - Meshery connects to one or more Prometheus servers to gather both cluster and application metrics. Meshery also integrates with Grafana, allowing you to import your existing dashboards and visualize performance data.

&lt;p&gt;In an effort to produce infrastructure agnostic tooling, Meshery uses the &lt;a href=&quot;https://smp-spec.io&quot;&gt;Cloud Native Performance&lt;/a&gt; specification as a common format to capture and measure your infrastructure&#039;s performance against a universal cloud native performance index. Meshery participates in advancing cloud native infrastructure adoption through the standardization of APIs. Meshery enables you to measure the value provided by Docker, Kubernetes, or other cloud native infrastructure in the context of the overhead incurred.&lt;/p&gt;

&lt;!-- 

SCREENSHOT / GIF NEEDED HERE

--&gt;

&lt;/details&gt;

&lt;h2&gt;&lt;a name=&quot;running&quot;&gt;&lt;/a&gt;Get Started with Meshery&lt;/h2&gt;
&lt;p style=&quot;clear:both;&quot;&gt;&lt;/p&gt;
&lt;!-- &lt;img alt=&quot;Control Kubernetes and your workloads with mesheryctl&quot; src=&quot;.github/assets/images/readme/mesheryctl.png&quot;  style=&quot;margin-left:10px; margin-bottom:10px;&quot; width=&quot;50%&quot; align=&quot;right&quot; /&gt; --&gt;
&lt;h3&gt;Using `mesheryctl`&lt;/h3&gt;
&lt;p&gt;Meshery runs as a set of containers inside or outside of your Kubernetes clusters.&lt;/p&gt;
&lt;pre&gt;curl -L https://meshery.io/install | bash -&lt;/pre&gt;
&lt;p&gt;Use the &lt;a href=&quot;https://docs.meshery.io/installation/quick-start&quot;&gt;quick start&lt;/a&gt; guide.&lt;/p&gt;
&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;See all supported platforms&lt;/strong&gt;&lt;/summary&gt;

See the [getting started](https://meshery.io/#getting-started) section to quickly deploy Meshery on any of these supported platforms:

| Platform                                                                                                                                                                                                                             | Supported?  |
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :---------: |
| &lt;img src=&quot;https://docs.meshery.io/assets/img/platforms/docker.svg&quot; width=&quot;20&quot; height=&quot;20&quot; vertical-align=&quot;middle&quot; /&gt; [Docker](https://docs.meshery.io/installation/docker)                                                           |      ✔️      |
| &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src=&quot;https://docs.meshery.io/assets/img/platforms/docker.svg&quot; width=&quot;20&quot; height=&quot;20&quot; vertical-align=&quot;middle&quot; /&gt; [Docker - Docker App](https://docs.meshery.io/installation/docker)                           |      ✔️      |
| &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src=&quot;https://docs.meshery.io/assets/img/platforms/docker.svg&quot; width=&quot;20&quot; height=&quot;20&quot; vertical-align=&quot;middle&quot; /&gt; [Docker - Docker Extension](https://docs.meshery.io/installation/docker/docker-extensiongit) |      ✔️      |
| &lt;img src=&quot;https://docs.meshery.io/assets/img/platforms/kubernetes.svg&quot; width=&quot;20&quot; height=&quot;20&quot; vertical-align=&quot;middle&quot; /&gt; [Kubernetes](https://docs.meshery.io/installation/kubernetes)                                               |      ✔️      |
| &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src=&quot;https://docs.meshery.io/assets/img/platforms/aks.svg&quot; width=&quot;20&quot; height=&quot;20&quot; vertical-align=&quot;middle&quot; /&gt; [Kubernetes - AKS](https://docs.meshery.io/installation/kubernetes/aks)                         |      ✔️      |
| &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src=&quot;https://docs.meshery.io/assets/img/platforms/docker.svg&quot; width=&quot;20&quot; height=&quot;20&quot; vertical-align=&quot;middle&quot; /&gt; [Kubernetes - Docker Desktop](https://docs.meshery.io/installation#mac-or-linux)             |      ✔️      |
| &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src=&quot;https://docs.

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[wangwangit/SubsTracker]]></title>
            <link>https://github.com/wangwangit/SubsTracker</link>
            <guid>https://github.com/wangwangit/SubsTracker</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:05 GMT</pubDate>
            <description><![CDATA[基于Cloudflare Workers的轻量级订阅管理系统，帮助您轻松跟踪各类订阅服务的到期时间，并通过Telegram发送及时提醒。]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/wangwangit/SubsTracker">wangwangit/SubsTracker</a></h1>
            <p>基于Cloudflare Workers的轻量级订阅管理系统，帮助您轻松跟踪各类订阅服务的到期时间，并通过Telegram发送及时提醒。</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,588</p>
            <p>Forks: 1,377</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre># SubsTracker - 订阅管理与提醒系统

基于Cloudflare Workers的轻量级订阅管理系统，帮助您轻松跟踪各类订阅服务的到期时间，并通过 Telegram、Webhook 等多渠道发送及时提醒。

![image](https://github.com/user-attachments/assets/22ff1592-7836-4f73-aa13-24e9d43d7064)

## ✨ 功能特色

### 🎯 核心功能
- **订阅管理**：添加、编辑、删除各类订阅服务
- **智能提醒**：自定义提前提醒天数，自动续订计算
- **农历显示**：支持农历日期显示，可控制开关
- **状态管理**：订阅启用/停用，过期状态自动识别

### 📱 多渠道通知
- **Telegram**：支持 Telegram Bot 通知
- **NotifyX**：集成 NotifyX 推送服务
- **Webhook 通知**：支持自定义 Webhook 推送
- **企业微信机器人**：支持企业微信群机器人通知
- **邮件通知**：基于 Resend 的专业邮件服务
- **Bark**：支持 iOS Bark 推送
- **自定义 Webhook**：支持自定义请求格式和模板

### 🌙 农历功能
- **农历转换**：支持 1900-2100 年农历转换
- **智能显示**：列表和编辑页面可控制农历显示
- **通知集成**：通知消息中可包含农历信息

### 🎨 用户体验
- **响应式设计**：完美适配桌面端和移动端
- **备注优化**：长备注自动截断，悬停显示完整内容
- **实时预览**：日期选择时实时显示对应农历
- **用户偏好**：记住用户的显示偏好设置

## 🚀 一键部署

### 点击按钮，一键部署到 CloudFlare Workers,

[![Deploy to Cloudflare Workers](https://deploy.workers.cloudflare.com/button)](https://deploy.workers.cloudflare.com/?url=https://github.com/wangwangit/SubsTracker)


&gt; 适用于新部署的,以前部署过的直接替换js中的内容即可!

## 📋 三步开始使用

### 1️⃣ 一键部署
Fork仓库,然后点击自己仓库里的部署按钮，等待部署完成,**注意,KV名称修改为 `SUBSCRIPTIONS_KV`**
![image.png](https://img.wangwangit.com/file/1751942578108_image.png)

### 2️⃣ 首次登录
- 访问部署后的域名
- 默认用户名：`admin`
- 默认密码：`password`

### 3️⃣ 开始使用
1. **修改默认密码**（进入系统配置）
2. **配置通知渠道**（选择一个或多个）
3. **添加订阅**，设置提醒
4. **享受智能提醒**！

## 🔧 通知渠道配置

### Telegram
- **Bot Token**: 从 [@BotFather](https://t.me/BotFather) 获取
- **Chat ID**: 从 [@userinfobot](https://t.me/userinfobot) 获取

### NotifyX
- **API Key**: 从 [NotifyX官网](https://www.notifyx.cn/) 获取

### 企业微信机器人
- **推送 URL**: 参考[官方文档](https://developer.work.weixin.qq.com/document/path/91770)获取

### Webhook 通知
- **推送 URL**: 根据所使用的 Webhook 服务或自建接口填写，例如 `https://your-service.com/hooks/notify`
- 支持自定义请求方法、请求头与消息模板
- **模板占位符**：`{{title}}`、`{{content}}`、`{{tags}}`（多行形式）、`{{tagsLine}}`、`{{timestamp}}`、`{{formattedMessage}}`

### Bark（iOS 推送）
- **服务器地址**：默认 `https://api.day.app`，也可使用自建服务器
- **设备 Key**：在 Bark App 内复制
- **历史记录**：勾选“保存推送”后可保留推送历史

### 邮件通知 (Resend)
- **API Key**: 从 [Resend 官方教程](https://developers.cloudflare.com/workers/tutorials/send-emails-with-resend/) 获取
- **发件人邮箱**: 必须是已在 Resend 验证的域名邮箱
- **收件人邮箱**: 接收通知的邮箱地址
- 支持 HTML 格式的美观邮件模板

### 🔔 通知时间与时区说明
- Cloudflare Workers 的 Cron 表达式使用 **UTC 时区**，例如 `0 8 * * *` 表示 UTC 08:00 触发
- 若希望在北京时间（UTC+8）早上 8 点提醒，可将 Cron 设置为 `0 0 * * *`
- 若需要小时级提醒，可将 Cron 调整为 `0 * * * *`（每小时执行一次），并在系统配置中指定允许的通知小时
- 系统配置中的 “系统时区” 用于计算订阅剩余时间和格式化展示，建议与提醒需求保持一致

### 🔐 第三方 API 安全调用
- 通过 `POST /api/notify/{token}` 可触发系统通知，请在后台配置“第三方 API 访问令牌”
- 令牌也可通过 `Authorization: Bearer &lt;token&gt;` 或 `?token=&lt;token&gt;` 传入
- 未配置或令牌不匹配时接口会直接拒绝请求，建议定期更换随机令牌


&gt; 💡 **提示**: 系统默认每天早上8点自动检查即将到期的订阅


**欢迎大家关注我的公众号**

![39d8d5a902fa1eee6cbbbc8a0dcff4b](https://github.com/user-attachments/assets/96bae085-4299-4377-9958-9a3a11294efc)



## 🚀 手动部署指南

### 前提条件

- Cloudflare账户
- Telegram Bot (用于发送通知)
- 可以直接将代码丢给AI,帮助查漏补缺

### 部署步骤

1.登陆cloudflare,创建worker,粘贴本项目中的js代码,点击部署

![image](https://github.com/user-attachments/assets/ff4ac794-01e1-4916-b226-1f4f604dcbd3)


2.创建KV键值 **SUBSCRIPTIONS_KV**

![image](https://github.com/user-attachments/assets/c9ebaf3e-6015-4400-bb0a-1a55fd5e14d2)


3.给worker绑定上键值对,以及设置定时执行时间!

![image](https://github.com/user-attachments/assets/25b663b3-8e8e-4386-a499-9b6bf12ead76)


4.打开worker提供的域名地址,输入默认账号密码: admin  password (或者admin admin123),可以在代码中查看默认账号密码!

![image](https://github.com/user-attachments/assets/5dac1ce0-43a3-4642-925c-d9cf21076454)


5.前往系统配置,修改账号密码,以及配置tg通知的信息

![image](https://github.com/user-attachments/assets/f6db2089-28a1-439d-9de0-412ee4b2807f)


6.配置完成可以点击测试通知,查看是否能够正常通知,然后就可以正常添加订阅使用了!

![image](https://github.com/user-attachments/assets/af530379-332c-4482-9e6e-229a9e24775e)


## 赞助
本项目 CDN 加速及安全防护由 Tencent EdgeOne 赞助：EdgeOne 提供长期有效的免费套餐，包含不限量的流量和请求，覆盖中国大陆节点，且无任何超额收费，感兴趣的朋友可以点击下面的链接领取

[[Best Asian CDN, Edge, and Secure Solutions - Tencent EdgeOne](https://edgeone.ai/?from=github)]

[![image](https://edgeone.ai/media/34fe3a45-492d-4ea4-ae5d-ea1087ca7b4b.png)](https://edgeone.ai/media/34fe3a45-492d-4ea4-ae5d-ea1087ca7b4b.png)

## 🤝 贡献

欢迎贡献代码、报告问题或提出新功能建议!

## 📜 许可证

MIT License

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=wangwangit/SubsTracker&amp;type=Date)](https://www.star-history.com/#wangwangit/SubsTracker&amp;Date)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[koodo-reader/koodo-reader]]></title>
            <link>https://github.com/koodo-reader/koodo-reader</link>
            <guid>https://github.com/koodo-reader/koodo-reader</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:04 GMT</pubDate>
            <description><![CDATA[A modern ebook manager and reader with sync and backup capacities for Windows, macOS, Linux, Android, iOS and Web]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/koodo-reader/koodo-reader">koodo-reader/koodo-reader</a></h1>
            <p>A modern ebook manager and reader with sync and backup capacities for Windows, macOS, Linux, Android, iOS and Web</p>
            <p>Language: JavaScript</p>
            <p>Stars: 24,523</p>
            <p>Forks: 1,858</p>
            <p>Stars today: 127 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;left&quot;&gt;

[简体中文](https://github.com/koodo-reader/koodo-reader/blob/master/README_cn.md) | [हिंदी](https://github.com/koodo-reader/koodo-reader/blob/master/README_hi.md)
|[Português](https://github.com/koodo-reader/koodo-reader/blob/master/README_pt.md) | [Indonesian](https://github.com/koodo-reader/koodo-reader/blob/master/README_id.md) | English

&lt;/div&gt;

&lt;div align=&quot;center&quot; &gt;
  &lt;img src=&quot;https://dl.koodoreader.com/screenshots/logo.png&quot; width=&quot;96px&quot; height=&quot;96px&quot;/&gt;
&lt;/div&gt;

&lt;h1 align=&quot;center&quot;&gt;
  Koodo Reader
&lt;/h1&gt;

&lt;h3 align=&quot;center&quot;&gt;
  A cross-platform ebook reader
&lt;/h3&gt;
&lt;div align=&quot;center&quot;&gt;

[Download](https://koodoreader.com/en) | [Preview](https://web.koodoreader.com) | [Roadmap](https://koodoreader.com/en/roadmap) | [Document](https://koodoreader.com/en/document) | [Plugins](https://koodoreader.com/en/plugin)

&lt;/div&gt;

## Preview

&lt;div align=&quot;center&quot;&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;img src=&quot;https://dl.koodoreader.com/screenshots/7.png&quot; width=&quot;800px&quot;&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;img src=&quot;https://dl.koodoreader.com/screenshots/8.png&quot; width=&quot;800px&quot;&gt;
  &lt;br/&gt;
  &lt;br/&gt;
&lt;/div&gt;

## Feature

- Format support:
  - EPUB (**.epub**)
  - PDF (**.pdf**)
  - DRM-free Mobipocket (**.mobi**) and Kindle (**.azw3**, **.azw**)
  - Plain text (**.txt**)
  - FictionBook (**.fb2**)
  - Comic book archive (**.cbr**, **.cbz**, **.cbt**, **.cb7**)
  - Rich text (**.md**, **.docx**)
  - Hyper Text (**.html**, **.xml**, **.xhtml**, **.mhtml**, **.htm**)
- Platform support: **Windows**, **macOS**, **Linux**, **Android**, **iOS** and **Web**
- Utilize **OneDrive**, **Google Drive**, **Dropbox**, **MEGA**, **pCloud**, **Yandex Disk**, **Box**, **FTP**, **SFTP**, **WebDAV**, **SMB**, **Object Storage** to sync and backup your data.
- Easily import books from **OneDrive**, **Google Drive**, **MEGA**, **Yandex Disk**, **Box**, **FTP**, **SFTP**, **WebDAV**, **SMB**, **Object Storage**
- AI Translation, AI Dictionary, AI Summarization
- Single-column, two-column, or continuous scrolling layouts
- Text-to-speech, translation, dictionary, touch screen support, batch import
- Add bookmarks, notes, highlights to your books
- Adjust font size, font family, line-spacing, paragraph spacing, background color, text color, margins, and brightness
- Night mode and theme color
- Text highlight, underline, boldness, italics and shadow

## Installation

### Desktop Version: [Download](https://koodoreader.com/en/download)

### Web Version：[Visit](https://web.koodoreader.com)

### Android Version：[Download](https://koodoreader.com/en/download)

### iOS Version：[Download](https://koodoreader.com/en/download)

### Install with Scoop:

```shell
scoop bucket add extras
scoop install extras/koodo-reader
```

### Install with Homebrew:

```shell
brew install --cask koodo-reader
```

### Install with Docker:

&gt; [!NOTE]
&gt; The Docker version stores data in the browser cache by default. For your data security, please deploy and access it via HTTPS, then save the data to your local folder. Alternatively, you can enable the data source feature to synchronize the data to a specified server path.

If you only need to deploy the web version, simply use the command below.

```bash
docker run -d \
  --name koodo-reader \
  -p 80:80 \
  -p 8080:8080 \
  -e ENABLE_HTTP_SERVER=false \
  -e SERVER_USERNAME=admin \
  -e SERVER_PASSWORD=securePass123 \
  -v /path/to/host/uploads:/app/uploads \
  ghcr.io/koodo-reader/koodo-reader:master
```

If you also want to enable the **data source feature**, please:

1. Set **`ENABLE_HTTP_SERVER`** to **`true`**
2. Change **`SERVER_USERNAME`** and **`SERVER_PASSWORD`** to a secure username and password
3. Replace **`/path/to/host/uploads`** with the folder where you want to store reading data

Then, select **Docker** as the data source in Koodo Reader.

Data source functionality use port 8080, and web version use port 80 by default. If you want to switch to port 8090, just change **`-p 8080:8080`** to **`-p 8090:8080`**.

If you want to use Docker Secrets to set **`SERVER_PASSWORD`**, please refer to [docker-compose-secret.yml](https://github.com/koodo-reader/koodo-reader/blob/master/docker-compose-secret.yml)

## Screenshot

&lt;div align=&quot;center&quot;&gt;
  &lt;b&gt;Book list&lt;/b&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;kbd&gt;&lt;img src=&quot;https://dl.koodoreader.com/screenshots/1.png&quot; width=&quot;800px&quot;&gt;&lt;/kbd&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;b&gt;Book display&lt;/b&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;kbd&gt;&lt;img src=&quot;https://dl.koodoreader.com/screenshots/5.png&quot; width=&quot;800px&quot;&gt;&lt;/kbd&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;b&gt;List mode&lt;/b&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;kbd&gt;&lt;img src=&quot;https://dl.koodoreader.com/screenshots/2.png&quot; width=&quot;800px&quot;&gt;&lt;/kbd&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;b&gt;Cover mode&lt;/b&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;kbd&gt;&lt;img src=&quot;https://dl.koodoreader.com/screenshots/3.png&quot; width=&quot;800px&quot;&gt;&lt;/kbd&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;b&gt;Reader menu&lt;/b&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;kbd&gt;&lt;img src=&quot;https://dl.koodoreader.com/screenshots/6.png&quot; width=&quot;800px&quot;&gt;&lt;/kbd&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;b&gt;Dark mode&lt;/b&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;kbd&gt;&lt;img src=&quot;https://dl.koodoreader.com/screenshots/4.png&quot; width=&quot;800px&quot;&gt;&lt;/kbd&gt;
  &lt;br/&gt;
&lt;/div&gt;

&lt;/div&gt;

## Develop

Make sure that you have installed yarn and git

1. Download the repo

   ```
   git clone https://github.com/koodo-reader/koodo-reader.git
   ```

2. Enter desktop mode

   ```
   yarn
   yarn dev
   ```

3. Enter web mode

   ```
   yarn
   yarn start
   ```

## Translation

### Edit current language

1. Select your target language from the following list.

2. Click the view button to examine the source file. The untranslated terms are listed at the bottom of each file.

3. Translate the terms to your target language based on the given English reference

4. Sumbit the translation file or just translation snippets based on the amount of your translation to [this link](https://github.com/koodo-reader/koodo-reader/issues/new?assignees=&amp;labels=submit+translation&amp;projects=&amp;template=submit_translation.yml). Pull request is also welcomed.

| Language(A-Z)   | Code  | View                                                |
| --------------- | ----- | --------------------------------------------------- |
| Amharic         | am    | [View](./src/assets/locales/am/translation.json)    |
| Arabic          | ar    | [View](./src/assets/locales/ar/translation.json)    |
| Armenian        | hy    | [View](./src/assets/locales/hy/translation.json)    |
| Bengali         | bn    | [View](./src/assets/locales/bn/translation.json)    |
| Bulgarian       | bg    | [View](./src/assets/locales/bg/translation.json)    |
| Chinese (CN)    | zh-CN | [View](./src/assets/locales/zh-CN/translation.json) |
| Chinese (MO)    | zh-MO | [View](./src/assets/locales/zh-MO/translation.json) |
| Chinese (TW)    | zh-TW | [View](./src/assets/locales/zh-TW/translation.json) |
| Czech           | cs    | [View](./src/assets/locales/cs/translation.json)    |
| Danish          | da    | [View](./src/assets/locales/da/translation.json)    |
| Dutch           | nl    | [View](./src/assets/locales/nl/translation.json)    |
| English         | en    | [View](./src/assets/locales/en/translation.json)    |
| Esperanto       | eo    | [View](./src/assets/locales/eo/translation.json)    |
| Finnish         | fi    | [View](./src/assets/locales/fi/translation.json)    |
| French          | fr    | [View](./src/assets/locales/fr/translation.json)    |
| German          | de    | [View](./src/assets/locales/de/translation.json)    |
| Greek           | el    | [View](./src/assets/locales/el/translation.json)    |
| Hindi           | hi    | [View](./src/assets/locales/hi/translation.json)    |
| Hungarian       | hu    | [View](./src/assets/locales/hu/translation.json)    |
| Indonesian      | id    | [View](./src/assets/locales/id/translation.json)    |
| Interlingue     | ie    | [View](./src/assets/locales/ie/translation.json)    |
| Irish           | ga    | [View](./src/assets/locales/ga/translation.json)    |
| Italian         | it    | [View](./src/assets/locales/it/translation.json)    |
| Japanese        | ja    | [View](./src/assets/locales/ja/translation.json)    |
| Korean          | ko    | [View](./src/assets/locales/ko/translation.json)    |
| Persian         | fa    | [View](./src/assets/locales/fa/translation.json)    |
| Polish          | pl    | [View](./src/assets/locales/pl/translation.json)    |
| Portuguese      | pt    | [View](./src/assets/locales/pt/translation.json)    |
| Portuguese (BR) | pt-BR | [View](./src/assets/locales/pt-BR/translation.json) |
| Romanian        | ro    | [View](./src/assets/locales/ro/translation.json)    |
| Russian         | ru    | [View](./src/assets/locales/ru/translation.json)    |
| Slovenian       | sl    | [View](./src/assets/locales/sl/translation.json)    |
| Spanish         | es    | [View](./src/assets/locales/es/translation.json)    |
| Swedish         | sv    | [View](./src/assets/locales/sv/translation.json)    |
| Tamil           | ta    | [View](./src/assets/locales/ta/translation.json)    |
| Thai            | th    | [View](./src/assets/locales/th/translation.json)    |
| Tagalog         | tl    | [View](./src/assets/locales/tl/translation.json)    |
| Tibetan         | bo    | [View](./src/assets/locales/bo/translation.json)    |
| Turkish         | tr    | [View](./src/assets/locales/tr/translation.json)    |
| Ukrainian       | uk    | [View](./src/assets/locales/uk/translation.json)    |
| Vietnamese      | vi    | [View](./src/assets/locales/vi/translation.json)    |

### Add new language

1. If you can&#039;t find your target language from the above list, Download the Engish source file from [this link](./src/assets/locales/en/translation.json)

2. When you finish translation, submit the source file to [this link](https://github.com/koodo-reader/koodo-reader/issues/new?assignees=&amp;labels=submit+translation&amp;projects=&amp;template=submit_translation.yml). Pull request is also welcomed.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[Asabeneh/30-Days-Of-React]]></title>
            <link>https://github.com/Asabeneh/30-Days-Of-React</link>
            <guid>https://github.com/Asabeneh/30-Days-Of-React</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:03 GMT</pubDate>
            <description><![CDATA[30 Days of React challenge is a step by step guide to learn React in 30 days. These videos may help too: https://www.youtube.com/channel/UC7PNRuno1rzYPb1xLa4yktw]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Asabeneh/30-Days-Of-React">Asabeneh/30-Days-Of-React</a></h1>
            <p>30 Days of React challenge is a step by step guide to learn React in 30 days. These videos may help too: https://www.youtube.com/channel/UC7PNRuno1rzYPb1xLa4yktw</p>
            <p>Language: JavaScript</p>
            <p>Stars: 27,159</p>
            <p>Forks: 7,688</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[ryanhanwu/How-To-Ask-Questions-The-Smart-Way]]></title>
            <link>https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way</link>
            <guid>https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:02 GMT</pubDate>
            <description><![CDATA[本文原文由知名 Hacker Eric S. Raymond 所撰寫，教你如何正確的提出技術問題並獲得你滿意的答案。]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way">ryanhanwu/How-To-Ask-Questions-The-Smart-Way</a></h1>
            <p>本文原文由知名 Hacker Eric S. Raymond 所撰寫，教你如何正確的提出技術問題並獲得你滿意的答案。</p>
            <p>Language: JavaScript</p>
            <p>Stars: 33,810</p>
            <p>Forks: 5,751</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre># 提問的智慧
&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt;
[![All Contributors](https://img.shields.io/badge/all_contributors-35-orange.svg?style=flat-square)](#contributors-)
&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt;
[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/pulls)

**How To Ask Questions The Smart Way**

Copyright © 2001, 2006, 2014 Eric S. Raymond, Rick Moen

本指南英文版版權為 Eric S. Raymond, Rick Moen 所有。

原文網址 (Translated from)：[http://www.catb.org/~esr/faqs/smart-questions.html](http://www.catb.org/~esr/faqs/smart-questions.html)

Copyleft 2001 by D.H.Grand(nOBODY/Ginux), 2010 by Gasolin, 2015-present by [Ryan Wu](https://github.com/ryanhanwu)

本中文指南是基於原文 3.10 版以及 2010 年由 [Gasolin](https://github.com/gasolin) 所翻譯版本的最新翻譯；

協助指出翻譯問題，__請[發 issue](https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/issues/new)，或直接[發 pull pequest](https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/compare/) 給我。__

本文另有：[简体中文版](README-zh_CN.md)

## [原文版本歷史](history.md)

## 目錄
  * [聲明](#聲明)
  * [簡介](#簡介)
  * [在提問之前](#在提問之前)
  * [當你提問時](#當你提問時)
    * [慎選提問的論壇](#慎選提問的論壇)
    * [Stack Overflow](#stack-overflow)
    * [網站和IRC論壇](#網站和irc論壇)
    * [第二步，使用專案郵件列表](#第二步使用專案郵件列表)
    * [使用有意義且描述明確的標題](#使用有意義且描述明確的標題)
    * [使問題容易回覆](#使問題容易回覆)
    * [用清晰、正確、精準並合乎文法的語句](#用清晰正確精準並合乎文法的語句)
    * [使用易於讀取且標準的文件格式發送問題](#使用易於讀取且標準的文件格式發送問題)
    * [精確的描述問題並言之有物](#精確的描述問題並言之有物)
    * [話不在多而在精](#話不在多而在精)
    * [別動輒聲稱找到Bug](#別動輒聲稱找到bug)
    * [別用低聲下氣取代你真正該做的事](#別用低聲下氣取代你真正該做的事)
    * [描述問題症狀而非猜測](#描述問題症狀而非猜測)
    * [按發生時間先後列出問題症狀](#按發生時間先後列出問題症狀)
    * [描述目標而不是過程](#描述目標而不是過程)
    * [別要求使用私人電郵回覆](#別要求使用私人電郵回覆)
    * [清楚明確地表達你的問題以及需求](#清楚明確地表達你的問題以及需求)
    * [詢問有關程式碼的問題時](#詢問有關程式碼的問題時)
    * [別把自己家庭作業的問題貼上來](#別把自己家庭作業的問題貼上來)
    * [去掉無意義的提問句](#去掉無意義的提問句)
    * [即使你很急也不要在標題寫```緊急```](#即使你很急也不要在標題寫緊急)
    * [禮多人不怪，而且有時還很有幫助](#禮多人不怪而且有時還很有幫助)
    * [問題解決後，加個簡短的補充說明](#問題解決後加個簡短的補充說明)
  * [如何解讀答案](#如何解讀答案)
    * [RTFM和STFW：如何知道你已完全搞砸了](#rtfm和stfw如何知道你已完全搞砸了)
    * [如果還是搞不懂](#如果還是搞不懂)
    * [處理無禮的回應](#處理無禮的回應)
  * [如何避免扮演失敗者](#如何避免扮演失敗者)
  * [不該問的問題](#不該問的問題)
  * [好問題與蠢問題](#好問題與蠢問題)
  * [如果得不到回答](#如果得不到回答)
  * [如何更好地回答問題](#如何更好地回答問題)
  * [相關資源](#相關資源)
  * [鳴謝](#鳴謝)

## 聲明

許多專案在他們的使用協助/說明網頁中連結了本指南，這麼做很好，我們也鼓勵大家都這麼做。但如果你是負責管理這個專案網頁的人，請在超連結附近的顯著位置上註明：

__本指南不提供此專案的實際支援服務！__

我們已經深刻領教到少了上述聲明所帶來的痛苦。因為少了這點聲明，我們不停地被一些白痴糾纏。這些白痴認為既然我們發布了這本指南，那麼我們就有責任解決世上所有的技術問題。

如果你是因為需要某些協助而正在閱讀這本指南，並且最後離開是因為發現從本指南作者們身上得不到直接的協助，那麼你就是我們所說的那些白痴之一。別問我們問題，我們只會忽略你。我們在這本指南中是教你如何從那些真正懂得你所遇到軟體或硬體問題的人取得協助，而99%的情況下那不會是我們。除非你確定本指南的作者之一剛好是你所遇到的問題領域的專家，否則請不要打擾我們，這樣大家都會開心一點。

## 簡介

在[駭客](http://www.catb.org/~esr/faqs/hacker-howto.html)的世界裡，你所提技術問題的解答的好壞, 很大程度上取決於你提問的方式與此問題的難度。本指南將教你如何正確的提問以獲得你滿意的答案。

現在開放原始碼（Open Source）軟體已經相當盛行，您通常可以從其他更有經驗的使用者那裡獲得與駭客一樣好的答案，這是件**好事**；和駭客相比，使用者們往往對那些新手常遇到的問題更寬容一些。儘管如此，以我們在此推薦的方式對待這些有經驗的使用者通常也是從他們那裡獲得有用答案的最有效方式。

首先你應該明白，駭客們喜愛有挑戰性的問題，或者能激發他們思維的好問題。如果我們並非如此，那我們也不會成為你想詢問的對象。如果你給了我們一個值得反覆咀嚼玩味的好問題，我們自會對你感激不盡。好問題是激勵，是厚禮。好問題可以提高我們的理解力，而且通常會暴露我們以前從沒意識到或者思考過的問題。對駭客而言，&quot;好問題！&quot;是誠摯的大力稱讚。

儘管如此，駭客們有著蔑視或傲慢面對簡單問題的壞名聲，這有時讓我們看起來對新手、無知者似乎較有敵意，但其實不是那樣的。

我們不諱言我們對那些不願思考、或者在發問前不做他們該做的事的人的蔑視。那些人是時間殺手──他們只想索取，從不付出，消耗我們可用在更有趣的問題或更值得回答的人身上的時間。我們稱這樣的人為 ```失敗者（loser）``` （由於歷史原因，我們有時把它拼作 ```lusers```）。

我們意識到許多人只是想使用我們寫的軟體，他們對學習技術細節沒有興趣。對大多數人而言，電腦只是種工具，是種達到目的的手段而已。他們有自己的生活並且有更要緊的事要做。我們認可這點，也從不指望每個人都對這些讓我們著迷的技術問題感興趣。盡管如此，我們只為那些真正有興趣並願意積極參與問題解決的人調整回答問題的風格。這點不會變，也不該變：否則，我們就是在最擅長的事情上降低效率。

我們（在很大程度上）是自願的，從繁忙的生活中抽出時間來解答疑惑，而且時常被提問淹沒。所以我們無情的濾掉一些話題，特別是拋棄那些看起來像失敗者的傢伙，以便更高效的利用時間來回答```贏家（溫拿）```的問題。

如果你厭惡我們的態度，高高在上，或過於傲慢，不妨也設身處地想想。我們並沒有要求你向我們屈服──事實上，我們大多數人非常樂意與你平等地交流，只要你付出小小努力來滿足基本要求，我們就會歡迎你加入我們的文化。但讓我們幫助那些不願意幫助自己的人是沒有效率的。無知沒有關係，但裝白痴就是不行。

所以，你不必在技術上很在行才能吸引我們的注意，但你必須表現出能引導你變得在行的特質──機敏、有想法、善於觀察、樂於主動參與解決問題。如果你做不到這些使你與眾不同的事情，我們建議你花點錢找家商業公司簽個技術支援服務契約，而不是要求駭客個人無償地幫助你。

如果你決定向我們求助，當然你也不希望被視為失敗者，更不願成為失敗者中的一員。能立刻得到快速並有效答案的最好方法，就是像贏家那樣提問──聰明、自信、有解決問題的思路，只是偶爾在特定的問題上需要獲得一點幫助。

（歡迎對本指南提出改進意見。你可以 email 你的建議至 [esr@thyrsus.com](mailto:esr@thyrsus.com) 或 [respond-auto@linuxmafia.com](mailto:respond-auto@linuxmafia.com)。然而請注意，本文並非[網路禮節](https://www.ietf.org/rfc/rfc1855.txt)的通用指南，而我們通常會拒絕無助於在技術論壇得到有用答案的建議。）

## 在提問之前

在你準備要透過電子郵件、新聞群組或者聊天室提出技術問題前，請先做到以下事情：

1. 嘗試在你準備提問的論壇的舊文章中搜尋答案。
2. 嘗試上網搜尋來找到答案。
3. 嘗試閱讀手冊來找到答案。
4. 嘗試閱讀常見問題文件（FAQ）來找到答案。
5. 嘗試自己檢查或試驗來找到答案
6. 向你身邊的強者朋友打聽來找到答案。
7. 如果你是程式開發者，請嘗試閱讀原始碼來找到答案

當你提出問題的時候，請先表明你已經做了上述的努力；這將有助於樹立你並不是一個不勞而獲且浪費別人的時間的提問者。如果你能一併表達在做了上述努力的過程中所**學到**的東西會更好，因為我們更樂於回答那些表現出能從答案中學習的人的問題。

運用某些策略，比如先用 Google 搜尋你所遇到的各種錯誤訊息（既搜尋 [Google論壇](https://groups.google.com/)，也搜尋網頁），這樣很可能直接就找到了能解決問題的文件或郵件列表線索。即使沒有結果，在郵件列表或新聞組尋求幫助時加上一句 ```我在 Google 中搜過下列句子但沒有找到什麼有用的東西``` 也是件好事，即使它只是表明了搜尋引擎不能提供哪些幫助。這麼做（加上搜尋過的字串）也讓遇到相似問題的其他人能被搜尋引擎引導到你的提問來。

別著急，不要指望幾秒鐘的 Google 搜尋就能解決一個複雜的問題。在向專家求助之前，再閱讀一下常見問題文件（FAQ）、放輕鬆、坐舒服一些，再花點時間思考一下這個問題。相信我們，他們能從你的提問看出你做了多少閱讀與思考，如果你是有備而來，將更有可能得到解答。不要將所有問題一股腦拋出，只因你的第一次搜尋沒有找到答案（或者找到太多答案）。

準備好你的問題，再將問題仔細的思考過一遍，因為草率的發問只能得到草率的回答，或者根本得不到任何答案。越是能表現出在尋求幫助前你為解決問題所付出的努力，你越有可能得到實質性的幫助。

小心別問錯了問題。如果你的問題基於錯誤的假設，某個普通駭客（J. Random Hacker）多半會一邊在心裏想著```蠢問題…```， 一邊用無意義的字面解釋來答覆你，希望著你會從問題的回答（而非你想得到的答案）中汲取教訓。

絕不要自以為**夠格**得到答案，你沒有；你並沒有。畢竟你沒有為這種服務支付任何報酬。你將會是自己去**掙到**一個答案，靠提出有內涵的、有趣的、有思維激勵作用的問題──一個有潛力能貢獻社群經驗的問題，而不僅僅是被動的從他人處索取知識。

另一方面，表明你願意在找答案的過程中做點什麼是一個非常好的開始。```誰能給點提示？```、```我的這個例子裏缺了什麼？```以及```我應該檢查什麼地方```比```請把我需要的確切的過程貼出來```更容易得到答覆。因為你表現出只要有人能指出一個正確方向，你就有完成它的能力和決心。

## 當你提問時

### 慎選提問的論壇

小心選擇你要提問的場合。如果你做了下述的事情，你很可能被忽略掉或者被看作失敗者：

  * 在與主題不合的論壇上貼出你的問題
  * 在探討進階技術問題的論壇張貼非常初級的問題；反之亦然
  * 在太多的不同新聞群組上重複轉貼同樣的問題（cross-post）
  * 向既非熟人也沒有義務解決你問題的人發送私人電郵

駭客會剔除掉那些搞錯場合的問題，以保護他們溝通的管道不被無關的東西淹沒。你不會想讓這種事發生在自己身上的。

因此，第一步是找到對的論壇。再說一次，Google 和其它搜尋引擎還是你最好的朋友，用它們來找到與你遭遇到困難的軟硬體問題最相關的網站。通常在那裡都有常見問題（FAQ）、郵件列表及相關說明文件的連結。如果你的努力（包括**閱讀** FAQ）都沒有結果，網站上也許還有回報臭蟲（Bug-reporting）的流程或連結，如果是這樣，連過去看看。

向陌生的人或論壇發送郵件最可能是風險最大的事情。舉例來說，別假設一個提供豐富內容的網頁的作者會想充當你的免費顧問。不要對你的問題是否會受到歡迎做太樂觀的估計──如果你不確定，那就向別處發送，或者根本別發。

在選擇論壇、新聞群組或郵件列表時，別太相信名字，先看看 FAQ 或者許可書以弄清楚你的問題是否切題。發文前先翻翻已有的話題，這樣可以讓你感受一下那裡的文化。事實上，事先在新聞組或郵件列表的歷史記錄中搜尋與你問題相關的關鍵詞是個極好的主意，也許這樣就找到答案了。即使沒有，也能幫助你歸納出更好的問題。

別像機關槍似的一次&quot;掃射&quot;所有的幫助管道，這就像大喊大叫一樣會使人不愉快。要一個一個地來。

搞清楚你的主題！最典型的錯誤之一是在某種致力於跨平台可移植的語言、套件或工具的論壇中提關於 Unix 或 Windows 作業系統程式設計介面的問題。如果你不明白為什麼這是大錯，最好在搞清楚這之間差異之前什麼也別問。

一般來說，在仔細挑選的公共論壇中提問，會比在私有論壇中提同樣的問題更容易得到有用的回答。有幾個理由可以支持這點，一是看潛在的回覆者有多少，二是看觀眾有多少。駭客較願意回答那些能幫助到許多人的問題。

可以理解的是，老練的駭客和一些熱門軟體的作者正在接受過多的錯發訊息。就像那根最後壓垮駱駝背的稻草一樣，你的加入也有可能使情況走向極端──已經好幾次了，一些熱門軟體的作者從自己軟體的支援中抽身出來，因為伴隨而來湧入其私人信箱的無用郵件變得無法忍受。

### Stack Overflow

搜尋，**然後** 才在 Stack Exchange 發問。

近年來，Stack Exchange community 社群已經成為回答技術及其他問題的主要管道，尤其是那些開放原始碼的專案。

因為 Google 索引是即時的，在看 Stack Exchange 之前先在 Google 搜尋。有很高的機率某人已經問了一個類似的問題，而且 Stack Exchange 網站們往往會是搜尋結果中最前面幾個。如果你在 Google 上沒有找到任何答案，你再到特定相關主題的網站去找。用標籤（Tag）搜尋能讓你更縮小你的搜尋結果。

如果你還是找不到任何對你的問題有用的內容，請把你的問題發在與它最相關的網站上。提問的時候請善用格式化工具，尤其註意為代碼添加格式，並且添加相關的標籤（特別是編程語言、操作系統或庫/包的名稱）。當有人要求你提供更多相關信息時，請編輯你的貼子來補充它們[譯註：而不是發一個回帖或回答！ ]。如果你覺得一個答案對你有幫助，點擊向上的箭頭來為它投票；如果一個答案提供了問題的正確解決方案，點擊投票按鈕下方的對勾來將它標記為正解。 

Stack Exchange 已經成長到[超過一百個網站](https://stackexchange.com/sites)，以下是最常用的幾個站：

* Super User 是問一些通用的電腦問題，如果你的問題跟程式碼或是寫程式無關，只是一些網路連線之類的，請到這裡。
* Stack Overflow 是問寫程式有關的問題。
* Server Fault 是問伺服器和網管相關的問題。

### 網站和IRC論壇

在地的使用者群組（user group），或者你所用的 Linux 發行版本也許正在宣傳他們的網頁論壇或 IRC 頻道，並提供新手幫助（在一些非英語國家，新手論壇很可能還是郵件列表）， 這些地方是開始提問的好首選，特別是當你覺得遇到的也許只是相對簡單或者很普通的問題時。有廣告贊助的 IRC 頻道是公開歡迎提問的地方，通常可以即時得到回應。

事實上，如果程式出的問題只發生在特定 Linux 發行版提供的版本（這很常見），最好先去該發行版的論壇或郵件列表中提問，再到程式本身的論壇或郵件列表提問。（否則）該項目的駭客可能僅僅回覆 &quot;用**我們的**版本&quot;。

在任何論壇發文以前，先確認一下有沒有搜尋功能。如果有，就試著搜尋一下問題的幾個關鍵詞，也許這會有幫助。如果在此之前你已做過通用的網頁搜尋（你也該這樣做），還是再搜尋一下論壇，搜尋引擎有可能沒來得及索引此論壇的全部內容。

透過論壇或 IRC 頻道來提供使用者支援服務有增長的趨勢，電子郵件則大多為專案開發者間的交流而保留。所以最好先在論壇或 IRC 中尋求與該專案相關的協助。

### 第二步，使用專案郵件列表

當某個專案提供開發者郵件列表時，要向列表而不是其中的個別成員提問，即使你確信他能最好地回答你的問題。查一查專案的文件和首頁，找到專案的郵件列表並使用它。有幾個很好的理由支持我們採用這種辦法：

  * 任何好到需要向個別開發者提出的問題，也將對整個專案群組有益。反之，如果你認為自己的問題對整個專案群組來說太愚蠢，也不能成為騷擾個別開發者的理由。
  * 向列表提問可以分散開發者的負擔，個別開發者（尤其是專案領導人）也許太忙以至於沒法回答你的問題。
  * 大多數郵件列表都會被封存，那些被封存的內容將被搜尋引擎索引。如果你向列表提問並得到解答，將來其它人可以透過網頁搜尋找到你的問題和答案，也就不用再次發問了。
  * 如果某些問題經常被問到，開發者可以利用此資訊來改進說明文件或軟體本身，以使其更清楚。如果只是私下提問，就沒有人能看到最常見問題的完整場景。

如果一個項目既有&quot;使用者&quot; 也有&quot;開發者&quot;（或&quot;駭客&quot;）郵件列表或論壇，而你又不會動到那些原始碼，那麼就向&quot;使用者&quot;列表或論壇提問。不要假設自己會在開發者列表中受到歡迎，那些人多半會將你的提問視為干擾他們開發的噪音。

然而，如果你**確信**你的問題很特別，而且在&quot;使用者&quot; 列表或論壇中幾天都沒有回覆，可以試試前往&quot;開發者&quot;列表或論壇發問。建議你在張貼前最好先暗地裡觀察幾天以了解那裡的行事方式（事實上這是參與任何私有或半私有列表的好主意）

如果你找不到一個專案的郵件列表，而只能查到專案維護者的電子信箱地址，儘管向他發信。即使是在這種情況下，也別假設（專案）郵件列表不存在。在你的電子郵件中，請陳述你已經試過但沒有找到合適的郵件列表，也提及你不反對將自己的郵件轉發給他人（許多人認為，即使沒什麼秘密，私人電子郵件也不應該被公開。透過允許將你的電子郵件轉發他人，你給了相應人員處置你郵件的選擇）。

### 使用有意義且描述明確的標題

在郵件列表、新聞群組或論壇中，大約50字以內的標題是抓住資深專家注意力的好機會。別用喋喋不休的```幫幫忙```、```跪求```、```急```（更別說```救命啊！！！！```這樣讓人反感的話，用這種標題會被條件反射式地忽略）來浪費這個機會。不要妄想用你的痛苦程度來打動我們，而是在這點空間中使用極簡單扼要的描述方式來提出問題。

一個好標題範例是```目標 -- 差異```式的描述，許多技術支援組織就是這樣做的。在```目標```部分指出是哪一個或哪一組東西有問題，在```差異```部分則描述與期望的行為不一致的地方。


&gt; 蠢問題：救命啊！我的筆電不能正常顯示了！

&gt; 聰明問題：X.org 6.8.1的滑鼠游標會變形，某牌顯示卡 MV1005 晶片組。

&gt; 更聰明問題：X.org 6.8.1的滑鼠游標，在某牌顯示卡 MV1005 晶片組環境下 - 會變形。

編寫```目標 -- 差異``` 式描述的過程有助於你組織對問題的細緻思考。是什麼被影響了？ 僅僅是滑鼠游標或者還有其它圖形？只在 X.org 的 X 版中出現？或只是出現在6.8.1版中？ 是針對某牌顯示卡晶片組？或者只是其中的 MV1005 型號？ 一個駭客只需瞄一眼就能夠立即明白你的環境**和**你遇到的問題。

總而言之，請想像一下你正在一個只顯示標題的封存討論串（Thread）索引中查尋。讓你的標題更好地反映問題，可使下一個搜尋類似問題的人能夠關注這個討論串，而不用再次提問相同的問題。

如果你想在回覆中提出問題，記得要修改內容標題，以表明你是在問一個問題， 一個看起來像 ```Re: 測試``` 或者 ```Re: 新bug``` 的標題很難引起足夠重視。另外，在不影響連貫性之下，適當引用並刪減前文的內容，能給新來的讀者留下線索。

對於討論串，不要直接點擊回覆來開始一個全新的討論串，這將限縮你的觀眾。因為有些郵件閱讀程序，比如 mutt ，允許使用者按討論串排序並透過折疊討論串來隱藏消息，這樣做的人永遠看不到你發的消息。

僅僅改變標題還不夠。mutt 和其它一些郵件閱讀程式還會檢查郵件標題以外的其它訊息，以便為其指定討論串。所以寧可發一個全新的郵件。

在網頁論壇上，好的提問方式稍有不同，因為討論串與特定的訊息緊密結合，並且通常在討論串外就看不到裡面的內容，故透過回覆提問，而非改變標題是可接受的。不是所有論壇都允許在回覆中出現分離的標題，而且這樣做了基本上沒有人會去看。不過，透過回覆提問，這本身就是曖昧的做法，因為它們只會被正在查看該標題的人讀到。所以，除非你**只想**在該討論串當前活躍的人群中提問，不然還是另起爐灶比較好。

### 使問題容易回覆

以```請將你的回覆寄到……```來結束你的問題多半會使你得不到回答。如果你覺得花幾秒鐘在電子信箱客戶端設置一下回覆地址都麻煩，我們也覺得花幾秒鐘思考你的問題更麻煩。如果你的電子信箱程式不支援這樣做，[換個好點的](http://linuxmafia.com/faq/Mail/muas.html)；如果是作業系統不支援這種電子信箱程式，也換個好點的。

在論壇，要求透過電子郵件回覆是非常無禮的，除非你相信回覆的訊息可能比較敏感（而且有人會為了某些未知的原因，只讓你而不是整個論壇知道答案）。如果你只是想在有人回覆討論串時得到電子郵件提醒，可以要求網頁論壇發送給你。幾乎所有論壇都支援諸如```追蹤此討論串```、```有回覆時發送郵件提醒```等功能。

### 用清晰、正確、精準並合乎文法的語句

我們從經驗中發現，粗心的提問者通常也會粗心的寫程式與思考（我敢打包票）。回答粗心大意者的問題很不值得，我們寧願把時間耗在別處。

正確的拼字、標點符號和大小寫是很重要的。一般來說，如果你覺得這樣做很麻煩，不想在乎這些，那我們也覺得麻煩，不想在乎你的提問。花點額外的精力斟酌一下字句，用不著太僵硬與正式──事實上，駭客文化很看重能準確地使用非正式、俚語和幽默的語句。但它**必須很**準確，而且有跡象表明你是在思考和關注問題。

正確地拼寫、使用標點和大小寫，不要將```its```混淆為```it&#039;s```，```loose```搞成```lose```或者將```discrete```弄成```discreet```。不要**全部用大寫**，這會被視為無禮的大聲嚷嚷（全部小寫也好不到哪去，因為不易閱讀。[Alan Cox](https://zh.wikipedia.org/wiki/艾倫·考克斯)也許可以這樣做，但你不行。）

更白話的說，如果你寫得像是個半文盲[譯註：[小白](http://zh.wikipedia.org/zh-tw/小白)]），那多半得不到理睬。也不要使用即時通訊中的簡寫或[火星文](https://zh.wikipedia.org/zh-tw/火星文)，如將```的```簡化為```ㄉ```會使你看起來像一個為了少打幾個鍵而省字的小白。更糟的是，如果像個小孩似地鬼畫符那絕對是在找死，可以肯定沒人會理你（或者最多是給你一大堆指責與挖苦）。

如果在使用非母語的論壇提問，你可以犯點拼寫和語法上的小錯，但決不能在思考上馬虎（沒錯，我們通常能弄清兩者的分別）。同時，除非你知道回覆者使用的語言，否則請使用英語書寫。繁忙的駭客一般會直接刪除用他們看不懂語言寫的消息。在網路上英語是通用語言，用英語書寫可以將你的問題在尚未被閱讀就被直接刪除的可能性降到最低。

如果英文是你的第一外語（Second language），提示潛在回覆者你有潛在的語言困難是很好的：
[譯註：以下附上原文以供使用]

&gt; English is not my native language; please excuse typing errors.

* 英文不是我的母語，請原諒我的錯字或文法


&gt; If you speak $LANGUAGE, please email/PM me;
&gt; I may need assistance translating my question.

* 如果你說**某語言**，請寄信/私訊給我；我需要有人協助我翻譯我的問題


&gt; I am familiar with the technical terms,
&gt; but some slang expressions and idioms are difficult for me.

* 我對技術名詞很熟悉，但對於俗語或是特別用法比較不甚了解。


&gt; I&#039;ve posted my question in $LANGUAGE and English.
&gt; I&#039;ll be glad to translate responses, if you only use one or the other.

* 我把我的問題用**某語言**和英文寫出來，如果你只用一種語言回答，我會樂意將其翻譯成另一種。

### 使用易於讀取且標準的文件格式發送問題

如果你人為地將問題搞得難以閱讀，它多半會被忽略，人們更願讀易懂的問題，所以：

  * 使用純文字而不是 HTML ([關閉 HTML ](http://archive.birdhouse.org/etc/evilmail.html)並不難）
  * 使用 MIME 附件通常是可以的，前提是真正有內容（譬如附帶的原始碼或patch），而不僅僅是信箱程式生成的模板（譬如只是信件內容的拷貝）。
  * 不要發送一段文字只是單行句子但多次斷行的郵件（這使得回覆部分內容非常困難）。設想你的讀者是在80個字符寬的終端機上閱讀郵件，最好設置你的斷行點小於80字。
  * 但是，也**不要**用任何固定斷行資料（譬如日誌檔案拷貝或會話記錄）。檔案應該原樣包含，讓回覆者有信心他們看到的是和你看到的一樣的東西。
  * 在英語論壇中，不要使用```Quoted-Printable``` MIME編碼發送消息。這種編碼對於張貼非 ASCII 語言可能是必須的，但很多電子信箱程式並不支援這種編碼。當它們分斷時，那些文本中四處散佈的```=20```符號既難看也分散注意力，甚至有可能破壞內容的語意。
  * 絕對，**永遠**不要指望駭客們閱讀使用封閉格式編寫的文件，像是微軟公司的 Word 或 Excel 文件等。大多數駭客對此的反應就像有人將還在冒熱氣的豬糞倒在你門口階梯上時你的反應一樣。即便他們能夠處理，他們也很厭惡這麼做。
  * 如果你從使用 Windows 的電腦發送電子郵件，關閉微軟愚蠢的```智慧引號```功能 （從[選項] &gt; [校訂] &gt; [自動校正選項], 按掉```智慧引號```核取方塊），以免在你的郵件中到處散佈垃圾字符。
  * 在論壇，勿濫用```表情符號```和```HTML```功能（當它們提供時）。一兩個表情符號通常沒有問題，但花哨的彩色文本傾向於使人認為你是個無能之輩。過濫地使用表情符號、色彩和字體會使你看來像個傻笑的小姑娘。這通常不是個好主意，除非你只是對性而不是有用的回覆更有興趣。

如果你使用圖形使用者介面的電子信箱程式（如微軟公司的 Outlook 或者其它類似的），注意它們的預設配置不一定滿足這些要求。大多數這類程式有基於選單的```查看原始碼```命令，用它來檢查發送文件夾中的消息，以確保發送的是沒有多餘雜質的純文本文件。

### 精確的描述問題並言之有物

  * 仔細、清楚地描述你的問題或臭蟲的症狀。
  * 描述問題發生的環境（機器配置、作業系統、應用程式、以及相關的資訊），提供經銷商的發行版和版本號（如：```Fedora Core 4```、```Slackware 9.1```等）。
  * 描述在提問前你是怎樣去研究和理解這個問題的。
  * 描述在提問前為確定問題而採取的診斷步驟。
  * 描述最近做過什麼可能相關的硬體或軟體變更。
  * 盡可能的提供一個可以```重製這個問題的既定環境```的方法

儘量去揣測一個駭客會怎樣反問你，在他提問的時候預先給他答案。

以上幾點中，當你回報的是你認為可能在程式碼中的問題時，給駭客一個可以重製你的問題的環境尤其重要。當你這麼做時，你得到有效的回答的機會和速度都會大大的提升。

[Simon Tatham](https://www.chiark.greenend.org.uk/~sgtatham/) 寫過一篇名為〈[如何有效地回報Bug](https://www.chiark.greenend.org.uk/~sgtatham/bugs-tw.html)〉的出色文章。強力推薦你也讀一讀。

### 話不在多而在精

你需要提供精確有內容的資訊。這並不是要求你簡單的把成堆的出錯程式碼或者資料完全轉錄到你的提問中。如果你有龐大而複雜的測試樣例能重現程式當掉的情境，儘量將它剪裁得越小越好。

這樣做的用處至少有三點。
第一，表現出你為簡化問題付出了努力，這可以使你得到回答的機會增加；
第二，簡化問題使你更有可能得到**有用**的答案；
第三，在精鍊你的bug報告的過程中，你很可能就自己找到了解決方法或權宜之計。

### 別動輒聲稱找到Bug

當你在使用軟體中遇到問題，除非你非常、**非常**的有根據，不要動輒聲稱找到了Bug。提示：除非你能提供解決問題的原始碼補丁，或者對前一版本的回歸測試表現出不正確的行為，否則你都多半不夠完全確信。這同樣適用在網頁和文件，如果你（聲稱）發現了文件的```Bug```，你應該能提供相應位置的修正或替代文件。

請記得，還有許多其它使用者沒遇到你發現的問題，否則你在閱讀文件或搜尋網頁時就應該發現了（你在抱怨前[已經做了這些，是吧](#在提問之前)？）。這也意味著很有可能是你弄錯了而不是軟體本身有問題。

編寫軟體的人總是非常辛苦地使它盡可能完美。如果你聲稱找到了Bug，也就是在質疑他們的能力，即使你是對的，也有可能會冒犯到其中某部分人。這尤其嚴重當你在標題中嚷嚷著有```Bug```。

提問時，即使你私下非常確信已經發現一個真正的臭蟲，最好寫得像是**你**做錯了什麼。如果真的有臭蟲，你會在回覆中看到這點。這樣做的話，如果真有臭蟲，維護者就會向你道歉，這總比你惹惱別人然後欠別人一個道歉要好一點。

### 別用低聲下氣取代你真正該做的事

有些人明白他們不該粗魯或傲慢的提問並要求得到答覆，但他們選擇另一個極端 -- 低聲下氣：```我知道我只是個可悲的新手，一個失敗者，但...```。這既使人困擾，也沒有用，尤其是伴隨著與實際問題含糊不清的描述時更令人反感。

別用原始靈長類動物的把戲來浪費你我的時間。取而代之的是，盡可能清楚地描述背景條件和你的問題情況。這比低聲下氣更好地定位了你的位置。

有時網頁論壇會設有專為新手提問的版面，如果你真的認為遇到了初學者的問題，到那去就是了，但一樣別那麼低聲下氣。

### 描述問題症狀而非猜測

告訴駭客們你認為問題是怎樣造成的並沒什麼幫助。（如果你的推斷如此有效，還用向別人求助嗎？），因此要確信你原原本本告訴了他們問題的症狀，而不是你的解釋和理論；讓駭客們來推測和診斷。如果你認為陳述自己的猜測很重要，清楚地說明這只是你的猜測，並描述為什麼它們不起作用。

***蠢問題***

&gt; 我在編譯內核時接連遇到 SIG11 錯誤，
&gt; 我懷疑某條飛線搭在主板的走線上了，這種情況應該怎樣檢查最好？

***聰明問題***
&gt; 我的組裝電腦是 FIC-PA2007 主機板搭載 AMD K6/233 CPU（威盛 Apollo VP2晶片組），
&gt; 256MB Corsair PC133 SDRAM記憶體，在編譯內核時，從開機20分鐘以後就頻頻產生 SIG11 錯誤，
&gt; 但是在頭20分鐘內從沒發生過相同的問題。重新啟動也沒有用，但是關機一晚上就又能工作20分鐘。
&gt; 所有記憶體都換過了，沒有效果。相關部分的標準編譯記錄如下…

由於以上這點似乎讓許多人覺得難以配合，這裡有句話可以提醒你：```所有的診斷專家都來自密蘇里州。``` 美國國務院的官方座右銘則是：```讓我看看```（出自國會議員 Willard D. Vandiver 在1899年時的講話：```我來自一個出產玉米，棉花，牛蒡和民主黨人的國家，滔滔雄辯既不能說服我，也不會讓我滿意。我來自密蘇里州，你必須讓我看看。```） 針對診斷者而言，這並不是一種懷疑，而只是一種真實而有用的需求，以便讓他們看到的是與你看到的原始證據盡可能一致的東西，而不是你的猜測與歸納的結論。所以，大方的展示給我們看吧！

### 按發生時間先後列出問題症狀

問題發生前的一系列操作，往往就是對找出問題最有幫助的線索。因此，你的說明裡應該包含你的操作步驟，以及機器和軟體的反應，直到問題發生。在命令列處理的情況下，提供一段操作記錄（例如運行腳本工具所生成的），並引用相關的若干行（如20行）記錄會非常有幫助。

如果當掉的程式有診斷選項（如 -v 的詳述開關），試著選擇這些能在記錄中增加除錯資訊的選項。記住，```多```不等於```好```。試著選取適當的除錯級別以便提供有用的訊息而不是讓讀者淹沒在垃圾中。

如果你的說明很長（如超過四個段落），在開頭簡述問題，接下來再按時間順序詳述會有所幫助。這樣駭客們在讀你的記錄時就知道該注意哪些內容了。

### 描述目標而不是過程

如果你想弄清楚如何做某事（而不是報告一個Bug），在開頭就描述你的目標，然後才陳述重現你所卡住的特定步驟。

經常尋求技術幫助的人在心中有個更高層次的目標，而他們在自以為能達到目標的特定道路上被卡住了，然後跑來問該怎麼走，但沒有意識到這條路本身就有問題。結果要費很大的勁才能搞定。

**蠢問題**
&gt; 我怎樣才能從某繪圖程式的顏色選擇器中取得十六進制的 RGB 值？


**聰明問題**
&gt; 我正試著把一幅圖片的色碼替換成自己選定的色碼，我現在知道的唯一方法是編輯每個色碼區塊，
&gt; 但卻無法從某繪圖程式的顏色選擇器取得十六進制的 RGB 值。


第二種提問法比較聰明，你可能得到像是```建議採用另一個更適任的工具```的回覆。

### 別要求使用私人電郵回覆

駭客們認為問題的解決過程應該公開、透明，此過程中如果更有經驗的人注意到不完整或者不當之處，最初的回覆才能夠、也應該被糾正。同時，作為提供幫助者也能因為能力和學識被其它同行看到而得到某種獎勵。

當你要求私下回覆時，這個過程和獎勵都被中止。別這樣做，讓**回覆者**來決定是否私下回答 -- 如果他真這麼做了，通常是因為他認為問題編寫太差或者太膚淺，以至於對其它人沒有興趣。

這條規則存在一條有但書的例外，如果你確信提問可能會引來大量雷同的回覆時，那麼這個神奇的提問句會是```向我發電郵，我將為論壇歸納這些回覆```。試著將郵件列表或新聞群組從洪水般的雷同回覆中解救出來是非常有禮貌的 -- 但你必須信守諾言。

### 清楚明確地表達你的問題以及需求

漫無邊際的提問近乎無休無止的時間黑洞。最有可能給你有用答案的人通常也正是最忙的人（他們忙是因為要親自完成大部分工作）。這樣的人對無節制的時間黑洞相當厭惡，所以他們也傾向於厭惡那些漫無邊際的提問。

如果你明確表述需要回答者做什麼（如提供指點、發送一段程式碼、檢查你的補丁、或是其他等等），就最有可能得到有用的答案。因為這會定出一個時間和精力的上限，便於回答者能集中精力來幫你。這麼做很棒。

要理解專家們所處的世界，請把專業技能想像為充裕的資源，而回覆的時間則是稀缺的資源。你要求他們奉獻的時間越少，你越有可能從真正專業而且很忙的專家那裡得到解答。

所以，界定一下你的問題，使專家花在辨識你的問題和回答所需要付出的時間減到最少，這技巧對你獲得有用的答案相當有幫助──但這技巧通常和簡化問題有所區別。因此，問```我想更好的理解X，可否指點一下哪裡有好一點的說明？```通常比問```你能解釋一下X嗎？```更好。如果你的程式碼不能運作，通常請別人看看哪裡有問題，比要求別人替你改正要明智得多。

### 詢問有關程式碼的問題時

如果沒有提示別人應該從何入手，別要求他人幫你調試有問題的程式碼。張貼幾百行的程式碼，然後說一聲：```它不會動```會讓你完全被忽略。只貼幾十行程式碼，然後說一句：```在第七行以後，我期待它顯示 &lt;x&gt;，但實際出現的是 &lt;y&gt;```比較有可能讓你得到回應。

最有效描述程式問題的方法是提供最精簡的臭蟲展示測試示例（bug-demonstrating test case）。什麼是最精簡的測試示例? 那是問題的縮影；一小個程式片段能**剛好**展示出程式的異常行為，而不包含其他令人分散注意力的內容。怎麼製作最精簡的測試示例？如果你知道哪一行或哪一段程式碼會造成異常的行為，複製下來並加入足夠重現這個狀況的程式碼（例如，足以讓這段程式碼能被編譯/直譯/被應用程式處理）。如果你無法將問題縮減到一個特定區塊，就複製一份程式碼並移除不影響產生問題行為的部分。總之，測試示例越小越好（查看[話不在多而在精](#話不在多而在精)一節）。

一般而言，要得到一段相當精簡的測試示例並不太容易，但永遠先嘗試這樣做的是種好習慣。這種方式可以幫助你了解如何自行解決這個問題──而且即使你的嘗試不成功，駭客們也會看到你在嘗試取得答案的過程中付出了努力，這可以讓他們更願意與你合作。

如果你只是想讓別人幫忙審（Review）一下程式碼，在信的開頭就要說出來，並且一定要提到你認為哪一部分特別需要關注以及為什麼。

### 別把自己家庭作業的問題貼上來

駭客們很擅長分辨哪些問題是家庭作業式的問題；因為我們中的大多數都曾自己解決這類問題。同樣，這些問題得由**你**來搞定，你會從中學到東西。你可以要求給點提示，但別要求得到完整的解決方案。

如果你懷疑自己碰到了一個家庭作業式的問題，但仍然無法解決，試試在使用者群組，論壇或（最後一招）在專案的**使用者**郵件列表或論壇中提問。儘管駭客們**會**看出來，但一些有經驗的使用者也許仍會給你一些提示。

### 去掉無意義的提問句

避免用無意義的話結束提問，例如```有人能幫我嗎？```或者```這有答案嗎？```。

首先：如果你對問題的描述不是很好，這樣問更是畫蛇添足。

其次：由於這樣問是畫蛇添足，駭客們會很厭煩你──而且通常會用邏輯上正確，但毫無意義的回答來表示他們的蔑視， 例如：```沒錯，有人能幫你```或者```不，沒答案```。

一般來說，避免用 ```是或否```、```對或錯```、```有或沒有```類型的問句，除非你想得到[是或否類型的回答](https://strcat.de/questions-with-yes-or-no-answers.html)。

### 即使你很急也不要在標題寫```緊急```

這是你的問題，不是我們的。宣稱```緊急```極有可能事與願違：大多數駭客會直接刪除無禮和自私地企圖即時引起關注的問題。更嚴重的是，```緊急```這個字（或是其他企圖引起關注的標題）通常會被垃圾信過濾器過濾掉 -- 你的問題可能永遠將無法得到解答。

有半個例外的情況是，如果你是在一些很高調，會使駭客們興奮的地方，也許值得這樣去做。在這種情況下，如果你有時間壓力，也很有禮貌地提到這點，人們也許會有興趣回答快一點。

當然，這風險很大，因為駭客們興奮的點多半與你的不同。譬如從 NASA 國際空間站（International Space Station）發這樣的標題沒有問題，但用自我感覺良好的慈善行為或政治原因發肯定不行。事實上，張貼諸如```緊急：幫我救救這個毛絨絨的小海豹！```肯定讓你被駭客忽略或惹惱他們，即使他們認為毛絨絨的小海豹很重要。

如果你覺得這點很不可思議，最好再把這份指南剩下的內容多讀幾遍，直到你弄懂了再發文。

### 禮多人不怪，而且有時還很有幫助

彬彬有禮，多用```請```和```謝謝您的關注```，或```謝謝你的關照```。讓大家都知道你對他們花時間免費提供幫助心存感激。

坦白說，這一點並沒有比清晰、正確、精準並合乎文法和避免使用專用格式重要（也不能取而代之）。駭客們一般寧可讀有點唐突但技術上鮮明的臭蟲報告，而不是那種有禮但含糊的報告。（如果這點讓你不解，記住我們是按問題能教我們什麼來評價問題的價值的）

然而，如果你有一串的問題待解決，客氣一點肯定會增加你得到有用回應的機會。

（我們注意到，自從本指南發佈後，從資深駭客那裡得到的唯一嚴重缺陷反饋，就是對預先道謝這一條。一些駭客覺得```先謝了```意味著事後就不用再感謝任何人的暗示。我們的建議是要麼先說```先謝了```，**然後**事後再對回覆者表示感謝，或者換種方式表達感激，譬如用```謝謝你的關注```或```謝謝你的關照```。）

### 問題解決後，加個簡短的補充說明

問題解決後，向所有幫助過你的人發個說明，讓他們知道問題是怎樣解決的，並再一次向他們表示感謝。如果問題在新聞組或者郵件列表中引起了廣泛關注，應該在那裡貼一個說明比較恰當。

最理想的方式是向最初提問的話題回覆此消息，並在標題中包含```已修正```，```已解決```或其它同等含義的明顯標記。在人來人往的郵件列表裡，一個看見討論串```問題 X```和```問題的X - 已解決```的潛在回覆者就明白不用再浪費時間了（除非他個人覺得```問題 X```有趣），因此可以利用此時間去解決其它問題。

補充說明不必很長或是很深入；簡單的一句```你好，原來是網路線出了問題！謝謝大家 – Bill```比什麼也不說要來的好。事實上，除非結論真的很有技術含量，否則簡短可愛的小結比長篇大論更好。說明問題是怎樣解決的，但大可不必將解決問題的過程複述一遍。

對於有深度的問題，張貼除錯記錄的摘要是有幫助的。描述問題的最終狀態，說明是什麼解決了問題，在此**之後**才指明可以避免的盲點。避免盲點的部分應放在正確的解決方案和其它總結材料之後，而不要將此訊息搞成偵探推理小說。列出那些幫助過你的名字，會讓你交到更多朋友。

除了有禮貌和有內涵以外，這種類型的補充也有助於他人在郵件列表/新聞群組/論壇中搜尋到真正解決你問題的方案，讓他們也從中受益。

至少，這種補充有助於讓每位參與協助的人因問題的解決而從中得到滿足感。如果你自己不是技術專家或者駭客，那就相信我們，這種感覺對於那些你向他們求助的大師或者專家而言，是非常重要的。問題懸而未決會讓人灰心；駭客們渴望看到問題被解決。好人有好報，滿足他們的渴望，你會在下次提問時嘗到甜頭。

思考一下怎樣才能避免他人將來也遇到類似的問題，自問寫一份文件或加個常見問題（FAQ）會不會有幫助。如果是的話就將它們發給維護者。

在駭客中，這種良好的後繼行動實際上比傳統的禮節更為重要，也是你如何透過善待他人而贏得聲譽的方式，這是非常有價值的資產。

## 如何解讀答案

&lt;a id=&quot;rtfm&quot;&gt;&lt;/a&gt;
### RTFM和STFW：如何知道你已完全搞砸了

有一個古老而神聖的傳統：如果你收到```RTFM （Read The Fucking Manual）```的回應，回答者認為你**應該去讀那該死的手冊**。當然，基本上他是對的，你應該去讀一讀。

RTFM 有一個年輕的親戚。如果你收到```STFW（Search The Fucking Web）```的回應，回答者認為你**應該到該死的網路上搜尋**過了。那人多半也是對的，去搜尋一下吧。（更溫和一點的說法是 **[Google是你的朋友](https://zh.lmgtfy.app/)**！）

在論壇，你也可能被要求去爬爬論壇的舊文。事實上，有人甚至可能熱心地為你提供以前解決此問題的討論串。但不要依賴這種關照，提問前應該先搜尋一下舊文。

通常，用這兩句之一回答你的人會給你一份包含你需要內容的手冊或者一個網址，而且他們打這些字的時候也正在讀著。這些答覆意味著回答者認為

  * **你需要的資訊非常容易獲得**；
  * **你自己去搜尋這些資訊比灌給你能讓你學到更多**。

你不應該因此不爽；**依照駭客的標準，他已經表示了對你一定程度的關注，而沒有對你的要求視而不見**。你應該對他祖母般的慈祥表示感謝。

### 如果還是搞不懂

如果你看不懂回應，別立刻要求對方解釋。像你以前試著自己解決問題時那樣（利用手冊，FAQ，網路，身邊的高手），先試著去搞懂他的回應。如果你真的需要對方解釋，記得表現出你已經從中學到了點什麼。

比方說，如果我回答你：```看來似乎是 zentry 卡住了；你應該先清除它。```，然後，這是一個**很糟的**後續問題回應：```zentry是什麼？``` **好**的問法應該是這樣：```哦~~~我看過說明了但是只有 -z 和 -p 兩個參數中提到了 zentries，而且還都沒有清楚的解釋如何清除它。你是指這兩個中的哪一個嗎？還是我看漏了什麼？```

### 處理無禮的回應

很多駭客圈子中看似無禮的行為並不是存心冒犯。相反，它是直接了當，一針見血式的交流風格，這種風格更注重解決問題，而不是使人感覺舒服而卻模模糊糊。

如果你覺得被冒犯了，試著平靜地反應。如果有人真的做了出格的事，郵件列表、新聞群組或論壇中的前輩多半會招呼他。如果這**沒有**發生而你卻發火了，那麼你發火對象的言語可能在駭客社群中看起來是正常的，而**你**將被視為有錯的一方，這將傷害到你獲取訊息或幫助的機會。

另一方面，你偶而真的會碰到無禮和無聊的言行。與上述相反，對真正的冒犯者狠狠地打擊，用犀利的語言將其駁得體無完膚都是可

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[n00bcodr/Jellyfin-Enhanced]]></title>
            <link>https://github.com/n00bcodr/Jellyfin-Enhanced</link>
            <guid>https://github.com/n00bcodr/Jellyfin-Enhanced</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:01 GMT</pubDate>
            <description><![CDATA[A Jellyfin Plugin to enhance your Jellyfin Web experience.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/n00bcodr/Jellyfin-Enhanced">n00bcodr/Jellyfin-Enhanced</a></h1>
            <p>A Jellyfin Plugin to enhance your Jellyfin Web experience.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 372</p>
            <p>Forks: 18</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre># Jellyfin Enhanced

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/last-commit/n00bcodr/Jellyfin-Enhanced/main?logo=semantic-release&amp;logoColor=white&amp;label=Last%20Updated&amp;labelColor=black&amp;color=AA5CC3&amp;cacheSeconds=3600&quot; alt=&quot;Last Updated&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/commit-activity/w/n00bcodr/Jellyfin-Enhanced?logo=git&amp;label=Commit%20Activity&amp;labelColor=black&amp;color=00A4DC&amp;cacheSeconds=600&quot; alt=&quot;Commit Activity&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/badge/Jellyfin%20Version-10.10.7-AA5CC3?logo=jellyfin&amp;logoColor=00A4DC&amp;labelColor=black&quot; alt=&quot;Jellyfin Version&quot;&gt;
&lt;/p&gt;
&lt;br&gt;

The essential enhancement suite for Jellyfin, bundling advanced features and customizations into one convenient plugin.

&lt;img src=&quot;images/panel_jellyfish.gif&quot; alt=&quot;Enhanced Panel&quot; width=&quot;90%&quot; align=&quot;center&quot;/&gt;

&lt;br&gt;
&lt;p align=&quot;center&quot;&gt;
--------------------------------------------------
&lt;/p&gt;
&lt;br&gt;

## 📑 Table of Contents

- [Jellyfin Enhanced](#jellyfin-enhanced)
  - [🔧 Installation](#-installation)
    - [🐳 Docker Installation Workaround](#docker-installation)
  - [✨ Features](#-features)
    - [🪼 Jellyseerr Search](#jellyseerr-search-integration)
        - [Setup](#setup)
        - [Icon States](#icon-states)
      - [How It Works?](#how-it-works)
  - [🌐 Internationalization &amp; Translations](#-internationalization--translations)
  - [🎨 Custom Styling](#-custom-styling)
    - [Pause Screen CSS](#pause-screen-css)
    - [Quality Tags CSS](#quality-tags-css)
    - [Genre Tags CSS](#genre-tags-css)
    - [Language Tags CSS](#language-tags-css)
    - [Enhanced Panel CSS](#panel-css)
  - [🫚 Project Structure](#-project-structure)
    - [File Structure](#file-structure)
    - [Component Breakdown](#component-breakdown)
  - [🧪 Compatibility](#-compatibility)
  - [💡 FAQ \&amp; Troubleshooting](#-faq--troubleshooting)
    - [FAQ](#faq)
    - [Troubleshooting](#troubleshooting)
    - [Common Errors](#common-errors)
  - [📸 Screenshots](#-screenshots)
  - [📄 License](#-license)
- [Enjoying Jellyfin Enhanced?](#enjoying-jellyfin-enhanced)


## 🔧 Installation

1.  In Jellyfin, go to **Dashboard** &gt; **Plugins** &gt; **Catalog** &gt; ⚙️
2.  Click **➕** and give the repository a name (e.g., &quot;Jellyfin Enhanced&quot;).
3.  Set the **Repository URL** to:

&gt; [!IMPORTANT]
&gt; **If you are on Jellyfin version 10.11**
&gt; ```
&gt; https://raw.githubusercontent.com/n00bcodr/jellyfin-plugins/main/10.11/manifest.json
&gt; ```
&gt; If you are on 10.10.7
&gt; ```
&gt; https://raw.githubusercontent.com/n00bcodr/jellyfin-plugins/main/10.10/manifest.json
&gt; ```

4.  Click **Save**.
5.  Go to the **Catalog** tab, find **Jellyfin Enhanced** in the list, and click **Install**.
6.  **Restart** your Jellyfin server to complete the installation.


&gt; [!NOTE]
&gt; It is highly recommended to have [file-transformation](https://github.com/IAmParadox27/jellyfin-plugin-file-transformation) at least v2.2.1.0 installed. It helps avoid permission issues while modifying index.html on any kind of installation!
&gt;
&gt; **Only if you do not have file-transformation plugin installed - proceed with the below workaround!**


#### &lt;a id=&quot;docker-installation&quot;&gt;&lt;/a&gt;
&lt;details&gt;
&lt;summary style=&quot;font-size: 1.25em;&quot;&gt;🐳 Docker Installation Workaround&lt;/summary&gt;
&lt;br&gt;

&gt; **IMPORTANT**!
&gt;
&gt; If you have [file-transformation](https://github.com/IAmParadox27/jellyfin-plugin-file-transformation) plugin installed, DO NOT proceed.

If you&#039;re running Jellyfin through Docker, the plugin may not have permission to modify jellyfin-web to inject the script. If you see permission errors such as `&#039;System.UnauthorizedAccessException: Access to the path &#039;/jellyfin/jellyfin-web/index.html &#039; is denied.` in your logs, you will need to map the `index.html` file manually:

1. Copy the index.html file from your container:

   ```bash
   docker cp jellyfin:/jellyfin/jellyfin-web/index.html /path/to/your/jellyfin/config/index.html
   ```

2. Add a volume mapping to your Docker run command:

   ```yaml
   -v /path/to/your/jellyfin/config/index.html:/jellyfin/jellyfin-web/index.html
   ```

3. Or for Docker Compose, add this to your volumes section:
   ```yaml
   services:
     jellyfin:
       # ... other config
       volumes:
         - /path/to/your/jellyfin/config:/config
         - /path/to/your/jellyfin/config/index.html:/jellyfin/jellyfin-web/index.html
         # ... other volumes
   ```

This gives the plugin the necessary permissions to inject JavaScript into the web interface.

&lt;/details&gt;
&lt;br&gt;

&lt;p align=&quot;center&quot;&gt;
--------------------------------------------------
&lt;/p&gt;

## ✨ Features

- **⌨️ Advanced Keyboard Shortcuts:** A comprehensive set of hotkeys for navigation, playback control, and more.
- **📝 Customizable Subtitles:** Fine-tune the appearance of subtitles with presets for style, size, and font.
- **⏯️ Smart Playback:** Auto-pause when you switch tabs and auto-resume when you return.
- **↪️ Auto-Skip Intros/Outros:** Binge-watch seamlessly without interruption (requires Intro Skipper plugin).
- **🎲 Random Item Button:** Discover something new in your library with a single click.
- **👁️ Remove from Continue Watching:** Easily clean up your home screen.
- **🔍 Streaming Provider Lookup:** See where else your media is available to stream across multiple regions.
- **✒️ Show Reviews from TMDB:** Option to show TMDB reviews of an item in Jellyfin.
- **🖼️ Auto Picture-in-Picture:** Automatically enter Picture-in-Picture mode when switching to another tab.
- **📁 Show File Sizes:** Display the total file size of media on its detail page.
- **🗣️ Show Audio Languages:** See available audio languages with country flags on the item detail page.
- **🎬 Custom Pause Screen:** A beautifully designed, informative overlay when you pause a video. This feature is a modified version of the original script by [BobHasNoSoul](https://github.com/BobHasNoSoul/Jellyfin-PauseScreen).
- **🏷️ Quality Tags:** See media quality (4K, HDR, Atmos) at a glance directly on the posters. This is a modified and rewritten version of the original script by [BobHasNoSoul](https://github.com/BobHasNoSoul/Jellyfin-Qualitytags/).
- **🎭 Genre Tags:** Identify genres instantly with themed icons on posters.
- **🌐 Language Tags:** Displays available audio languages as flags on posters.
- **🔗 .arr Links Integration:** For administrators, quickly jump to the Sonarr, Radarr, or Bazarr page for any item.
- **🔖 Watchlist** Watchlist any item and access your watchlist using a [CustomTab](https://github.com/IAmParadox27/jellyfin-plugin-custom-tabs/tree/main/src)
- **🌍 Multi-language Support:** The interface is available in multiple languages, with more on the way.
- **🖼️ Custom Splash Screen:** A configurable splash screen that appears while Jellyfin is loading.

&lt;br&gt;

&lt;p align=&quot;center&quot;&gt;
--------------------------------------------------
&lt;/p&gt;

## Jellyseerr Search Integration &lt;a name=&quot;jellyseerr-search-integration&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://cdn.jsdelivr.net/gh/selfhst/icons/svg/jellyseerr.svg&quot; width=&quot;40&quot; height=&quot;50&quot; align=&quot;center&quot;&gt;

The Jellyfin Enhanced plugin can integrate with your Jellyseerr instance, allowing users to search for and request media directly from the Jellyfin search interface.

#### Setup

To enable the Jellyseerr integration, you must first configure it in the plugin settings:

1. Navigate to **Dashboard &gt; Plugins &gt; Jellyfin Enhanced**.
2. Go to the **Jellyseerr Settings** tab.
3. Check the **Show Jellyseerr Results in Search** box to enable the feature.
4. Enter your **Jellyseerr URL(s)**, one per line. The plugin will use the first one that connects successfully. Should be the same Jellyseerr Instance. Intended for providing internal and external urls, ideally just internal URL should work.
5. Enter your **Jellyseerr API Key**. You can find this in Jellyseerr under **Settings &gt; General &gt; API Key**.
6. You can use the test button to see if your Jellyseerr instance is reachable.
7. Click **Save**.

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;images/jellyseerr.png&quot; width=&quot;600&quot; style=&quot;border-radius:25px;&quot; /&gt;
&lt;/p&gt;

&gt; [!IMPORTANT]
&gt; For the integration to work, you must also enable **&quot;Enable Jellyfin Sign-In&quot;** in your Jellyseerr User Settings (`/settings/users`).
&gt; \
&gt; &lt;img src=&quot;images/jellyfin-signin.png&quot; width=&quot;500&quot; style=&quot;border-radius:25px;&quot; /&gt; \
&gt; \
&gt; All users who need access to request content must be imported into Jellyseerr as Jellyfin users.
&gt; &lt;table align=&quot;center&quot;&gt;
&gt; &lt;tr&gt;&lt;th style=&quot;text-align:center&quot;&gt;Users that have access&lt;/th&gt;&lt;th style=&quot;text-align:center&quot;&gt;Users that don&#039;t have access (import them)&lt;/th&gt;  &lt;/tr&gt;  &lt;tr&gt;    &lt;td&gt;&lt;img src=&quot;images/users-with-access.png&quot; width=&quot;300&quot;/&gt;&lt;/td&gt;    &lt;td&gt;&lt;img src=&quot;images/users-no-access.png&quot; width=&quot;300&quot;/&gt;&lt;/td&gt;  &lt;/tr&gt;  &lt;/table&gt;

#### Icon States

When on the search page, a Jellyseerr icon will appear to indicate the connection status. This is the first thing to check when troubleshooting issues.

| **Icon** | **State** | **Description** |
| :---: | :--- | :--- |
|&lt;img width=&quot;32&quot; alt=&quot;active&quot; src=&quot;https://github.com/user-attachments/assets/09124764-5132-4474-83e7-c09399630b13&quot; /&gt; | **Active** | Jellyseerr is successfully connected, and the current Jellyfin user is correctly linked to a Jellyseerr user. &lt;br&gt; Results from Jellyseerr will load along with Jellyfin and requests can be made. |
| &lt;img width=&quot;32&quot; alt=&quot;noaccess&quot; src=&quot;https://github.com/user-attachments/assets/0db72189-04fc-4ec1-bdf1-50dd5e36d2ef&quot; /&gt; | **User Not Found** | Jellyseerr is successfully connected, but the current Jellyfin user is not linked to a Jellyseerr account. &lt;br&gt;Ensure the user has been imported into Jellyseerr from Jellyfin. Results will not load. |
| &lt;img width=&quot;32&quot; alt=&quot;offline&quot; src=&quot;https://github.com/user-attachments/assets/0e109ec3-038c-4471-97c1-9cc38bcd26c5&quot; /&gt; | **Offline** | The plugin could not connect to any of the configured Jellyseerr URLs. &lt;br&gt; Check your plugin settings and ensure Jellyseerr is running and accessible. Results will not load. |


---


&lt;br&gt;

#### How It Works?

To ensure security and prevent browser-related Cross-Origin Resource Sharing (CORS) errors, the Jellyfin Enhanced plugin does not communicate directly with the Jellyseerr API from your browser. Instead, it uses the Jellyfin server as a proxy. This method keeps your Jellyseerr API key safe on the server and avoids security issues.

In doing so, the plugin exposes a few proxy endpoints for its own use and for troubleshooting.

&lt;br&gt;
&lt;details&gt;
&lt;summary style=&quot;font-size: 1.2em; font-weight: 600;&quot;&gt;🔌 Jellyseerr API Endpoints&lt;/summary&gt;
&lt;br&gt;

You can use these `curl` commands to directly interact with the plugin&#039;s API for troubleshooting. You will need to replace the placeholder values with your own.

#### Get Plugin Version

This endpoint checks the installed version of the Jellyfin Enhanced plugin.

```bash
curl -X GET\
  &quot;&lt;JELLYFIN_ADDRESS&gt;/JellyfinEnhanced/version&quot;
```

&lt;br/&gt;

#### Get Jellyseerr Connection Status

Checks if the plugin can connect to any of the configured Jellyseerr URLs using the provided API key.

```bash
curl -X GET\
  -H &quot;X-Emby-Token: &lt;JELLYFIN_API_KEY&gt;&quot;\
  &quot;&lt;JELLYFIN_ADDRESS&gt;/JellyfinEnhanced/jellyseerr/status&quot;
```

&lt;br/&gt;

#### Get Jellyseerr User Status

Verifies that the currently logged-in Jellyfin user is successfully linked to a Jellyseerr user account.

```bash
curl -X GET\
  -H &quot;X-Emby-Token: &lt;JELLYFIN_API_KEY&gt;&quot;\
  -H &quot;X-Jellyfin-User-Id: &lt;JELLYFIN_USER_ID&gt;&quot;\
  &quot;&lt;JELLYFIN_ADDRESS&gt;/JellyfinEnhanced/jellyseerr/user-status&quot;
```

&lt;br/&gt;

#### Perform a Jellyseerr Search

Executes a search query through the Jellyseerr instance for the specified user.

```bash
curl -X GET\
  -H &quot;X-Emby-Token: &lt;JELLYFIN_API_KEY&gt;&quot;\
  -H &quot;X-Jellyfin-User-Id: &lt;JELLYFIN_USER_ID&gt;&quot;\
  &quot;&lt;JELLYFIN_ADDRESS&gt;/JellyfinEnhanced/jellyseerr/search?query=Inception&quot;
```

&lt;br/&gt;

#### Make a Request on Jellyseerr

Submits a media request to Jellyseerr on behalf of the specified user. \
mediaType can be `tv` or `movie` \
mediaId is the TMDB ID of the item

```bash
curl -X POST\
  -H &quot;X-Emby-Token: &lt;JELLYFIN_API_KEY&gt;&quot;\
  -H &quot;X-Jellyfin-User-Id: &lt;JELLYFIN_USER_ID&gt;&quot;\
  -H &quot;Content-Type: application/json&quot;\
  -d &#039;{&quot;mediaType&quot;: &quot;movie&quot;, &quot;mediaId&quot;: 27205}&#039;\
  &quot;&lt;JELLYFIN_ADDRESS&gt;/JellyfinEnhanced/jellyseerr/request&quot;
```

&lt;/details&gt;

&lt;p align=&quot;center&quot;&gt;
--------------------------------------------------
&lt;/p&gt;

&lt;br&gt;

## 🔧 Customization &amp; Advanced Use

### 🌐 Internationalization &amp; Translations

The plugin detects the Jellyfin user profile language automatically. List of currently supported languages [here](Jellyfin.Plugin.JellyfinEnhanced\js\locales).

Is your language missing or incorrect? You can help translate Jellyfin Enhanced for the community!

- Find the Translation Files: Navigate to the `Jellyfin.Plugin.JellyfinEnhanced/js/locales/` directory in this repository.
- Make a copy of `en.json` and rename it to your language&#039;s two-letter ISO 639-1 code (e.g., `es.json` for Spanish, `pl.json` for Polish).
- Translate: Open your new file and translate the English text on the right side of the colons (:).
- Submit a Pull Request: Once you&#039;re done, submit a pull request with your new translation file.



&lt;br&gt;
&lt;p align=&quot;center&quot;&gt;
--------------------------------------------------
&lt;/p&gt;

### 🎨 Custom Styling

### &lt;a id=&quot;pause-screen-css&quot;&gt;&lt;/a&gt;
&lt;details&gt;
&lt;summary style=&quot;font-size: 1.2em;&quot;&gt;Pause Screen&lt;/summary&gt;
&lt;br&gt;

If you do not want an element in the pause screen, you can customize by hiding them to your liking.

| Element | CSS Selector | Example CSS to Hide |
| --- | --- | --- |
| **Logo** | `#pause-screen-logo` | `#pause-screen-logo { display: none; }` |
| **Details** (Year, Rating, Runtime) | `#pause-screen-details` | `#pause-screen-details { display: none; }` |
| **Plot/Description** | `#pause-screen-plot` | `#pause-screen-plot { display: none; }` |
| **Entire Progress Bar** | `#pause-screen-progress-wrap` | `#pause-screen-progress-wrap { display: none; }` |
| **Spinning Disc** | `#pause-screen-disc` | `#pause-screen-disc { display: none; }` |
| **Blurred Backdrop** | `#pause-screen-backdrop` | `#pause-screen-backdrop { display: none; }` |
| **Time Display** (Current / Total) | `.progress-time` | `.progress-time { display: none; }` |
| **&quot;Ends At&quot; Time** | `.progress-ends-at` | `.progress-ends-at { display: none; }` |
| **Percentage Watched** | `.progress-percentage` | `.progress-percentage { display: none; }` |

&lt;/details&gt;

### &lt;a id=&quot;quality-tags-css&quot;&gt;&lt;/a&gt;
&lt;details&gt;
&lt;summary style=&quot;font-size: 1.2em;&quot;&gt;Quality Tags&lt;/summary&gt;
&lt;br&gt;

Quality tags are injected into each card/poster with this structure:

```html
&lt;div class=&quot;cardImageContainer&quot; style=&quot;position: relative;&quot;&gt;
    &lt;div class=&quot;quality-overlay-container&quot;&gt;
        &lt;div class=&quot;quality-overlay-label resolution&quot; data-quality=&quot;4K&quot;&gt;4K&lt;/div&gt;
        &lt;div class=&quot;quality-overlay-label video-codec&quot; data-quality=&quot;HDR&quot;&gt;HDR&lt;/div&gt;
        &lt;div class=&quot;quality-overlay-label audio-codec&quot; data-quality=&quot;ATMOS&quot;&gt;ATMOS&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
```

**Classes &amp; Attributes**

* **`.quality-overlay-container`** → Wrapper for all tags (positioned top-left by default).
* **`.quality-overlay-label`** → Base class for each tag.
* **Category classes**:
  * `.resolution` – resolution tags (`8K`, `4K`, `1080p`, `LOW-RES`, etc.)
  * `.video-codec` – video features (`HDR`, `Dolby Vision`, etc.)
  * `.audio-codec` – audio formats/channels (`ATMOS`, `DTS`, `5.1`, etc.)
* **`data-quality=&quot;...&quot;`** → Exact tag text (e.g. `data-quality=&quot;HDR10+&quot;`).

&lt;br&gt;

**Customization Examples**
----------------------


| Element                     | CSS Selector                                     | Example CSS                                                                                                      |
| --------------------------- | ------------------------------------------------ | ---------------------------------------------------------------------------------------------------------------- |
| **All Tags**                | `.quality-overlay-label`                         | `.quality-overlay-label { font-size: 0.8rem !important; padding: 3px 10px !important; }`                         |
| **Tag Container Position**  | `.quality-overlay-container`                     | `.quality-overlay-container { left: auto !important; right: 6px !important; align-items: flex-end !important; }` |
| **Specific Tag (e.g., 4K)** | `.quality-overlay-label[data-quality=&quot;4K&quot;]`      | `.quality-overlay-label[data-quality=&quot;4K&quot;] { background-color: purple !important; }`                             |
| **HDR Tag**                 | `.quality-overlay-label[data-quality=&quot;HDR&quot;]`     | `.quality-overlay-label[data-quality=&quot;HDR&quot;] { border: 2px solid gold !important; }`                              |
| **Low Resolution Tag**      | `.quality-overlay-label[data-quality=&quot;LOW-RES&quot;]` | `.quality-overlay-label[data-quality=&quot;LOW-RES&quot;] { opacity: 0.7 !important; }`                                    |
| **Stack Tags Horizontally** | `.quality-overlay-container`                     | `.quality-overlay-container { flex-direction: row !important; flex-wrap: wrap !important; }`                     |

&lt;br&gt;

**CSS Examples**
---------------------

* **Style all tags**

  ```css
  .quality-overlay-label {
      font-size: 0.8rem !important;
      border-radius: 4px !important;
  }
  ```

* **Target a category**

  ```css
  .quality-overlay-label.resolution { background: blue !important; }
  .quality-overlay-label.audio-codec { background: green !important; }
  ```

* **Target a specific tag**

  ```css
  .quality-overlay-label[data-quality=&quot;HDR&quot;] {
      border: 2px solid gold !important;
  }
  ```

  ```css
  .quality-overlay-label[data-quality=&quot;4K&quot;] {
      background: linear-gradient(45deg, #c0392b, #e74c3c) !important;
      color: white !important;
      order: -1; /* Appear first */
  }
  ```


* **Hide unwanted tags**

  ```css
  /* Hide all low-res */
  .quality-overlay-label[data-quality=&quot;LOW-RES&quot;] { display: none !important; }

    /* Only show resolution tags */
  .quality-overlay-label.video-codec,
  .quality-overlay-label.audio-codec{ display: none !important; }
  ```

&gt; **Note:**
&gt;- Always use `!important` to ensure your custom styles override the defaults.
&gt;- Only the **best resolution** tag per item is shown (e.g. you won’t see both 4K and 1080p).
&gt;- `LOW-RES` is the fallback for anything below 480p.
&gt;- Tags are sorted automatically with resolution first, then video features, then audio.
&gt;- Position can be controlled via the Enhanced Panel settings under.
&gt;

&lt;/details&gt;

### &lt;a id=&quot;genre-tags-css&quot;&gt;&lt;/a&gt;

&lt;details&gt; &lt;summary style=&quot;font-size: 1.2em;&quot;&gt;Genre Tags&lt;/summary&gt; &lt;br&gt;

Genre tags appear on the top right of posters. By default, they are circular icons that expand on hover to show the genre name.

The HTML structure for the tags is as follows:


```html
&lt;div class=&quot;cardImageContainer&quot;&gt;
    &lt;div class=&quot;genre-overlay-container&quot;&gt;
        &lt;div class=&quot;genre-tag&quot; title=&quot;Action&quot;&gt;
            &lt;span class=&quot;material-icons&quot;&gt;local_fire_department&lt;/span&gt;
            &lt;span class=&quot;genre-text&quot;&gt;Action&lt;/span&gt;
        &lt;/div&gt;
        &lt;/div&gt;
&lt;/div&gt;

```

**Classes**

-   **`.genre-overlay-container`**: The main container for all genre tags on a card.

-   **`.genre-tag`**: The individual tag for a single genre.

-   **`.genre-text`**: The text part of the tag, which is hidden by default.

-   **`.card:hover .genre-tag`**: This selector is used to define the expanded style when a user hovers over the card.

&lt;br&gt;

**Customization Examples**
--------------------------

| Element | CSS Selector | Example CSS |
| --- | --- | --- |
| **All Tags** | `.genre-tag` | `.genre-tag { background-color: #007bff !important; }` |
| **Icon Size** | `.genre-tag .material-icons` | `.genre-tag .material-icons { font-size: 22px !important; }` |
| **Text Style** | `.genre-tag .genre-text` | `.genre-tag .genre-text { font-weight: bold !important; }` |
| **Remove Hover Animation** | `.card:hover .genre-tag` | `.card:hover .genre-tag { width: 30px !important; }` |
| **Always Show Text** | `.genre-tag .genre-text` | `.genre-tag .genre-text { displa

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mrdoob/three.js]]></title>
            <link>https://github.com/mrdoob/three.js</link>
            <guid>https://github.com/mrdoob/three.js</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:00 GMT</pubDate>
            <description><![CDATA[JavaScript 3D Library.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mrdoob/three.js">mrdoob/three.js</a></h1>
            <p>JavaScript 3D Library.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 109,145</p>
            <p>Forks: 36,051</p>
            <p>Stars today: 22 stars today</p>
            <h2>README</h2><pre># three.js

[![NPM Package][npm]][npm-url]
[![Build Size][build-size]][build-size-url]
[![NPM Downloads][npm-downloads]][npmtrends-url]
[![Discord][discord]][discord-url]
[![DeepWiki][deepwiki]][deepwiki-url]

#### JavaScript 3D library

The aim of the project is to create an easy-to-use, lightweight, cross-browser, general-purpose 3D library. The current builds only include WebGL and WebGPU renderers but SVG and CSS3D renderers are also available as addons.

[Examples](https://threejs.org/examples/) &amp;mdash;
[Docs](https://threejs.org/docs/) &amp;mdash;
[Manual](https://threejs.org/manual/) &amp;mdash;
[Wiki](https://github.com/mrdoob/three.js/wiki) &amp;mdash;
[Migrating](https://github.com/mrdoob/three.js/wiki/Migration-Guide) &amp;mdash;
[Questions](https://stackoverflow.com/questions/tagged/three.js) &amp;mdash;
[Forum](https://discourse.threejs.org/) &amp;mdash;
[Discord](https://discord.gg/56GBJwAnUS)

### Usage

This code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a `WebGL` renderer for the scene and camera, and it adds that viewport to the `document.body` element. Finally, it animates the cube within the scene for the camera.

```javascript
import * as THREE from &#039;three&#039;;

const width = window.innerWidth, height = window.innerHeight;

// init

const camera = new THREE.PerspectiveCamera( 70, width / height, 0.01, 10 );
camera.position.z = 1;

const scene = new THREE.Scene();

const geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );
const material = new THREE.MeshNormalMaterial();

const mesh = new THREE.Mesh( geometry, material );
scene.add( mesh );

const renderer = new THREE.WebGLRenderer( { antialias: true } );
renderer.setSize( width, height );
renderer.setAnimationLoop( animate );
document.body.appendChild( renderer.domElement );

// animation

function animate( time ) {

	mesh.rotation.x = time / 2000;
	mesh.rotation.y = time / 1000;

	renderer.render( scene, camera );

}
```

If everything goes well, you should see [this](https://jsfiddle.net/w43x5Lgh/).

### Cloning this repository

Cloning the repo with all its history results in a ~2 GB download. If you don&#039;t need the whole history you can use the `depth` parameter to significantly reduce download size.

```sh
git clone --depth=1 https://github.com/mrdoob/three.js.git
```

### Change log

[Releases](https://github.com/mrdoob/three.js/releases)


[npm]: https://img.shields.io/npm/v/three
[npm-url]: https://www.npmjs.com/package/three
[build-size]: https://badgen.net/bundlephobia/minzip/three
[build-size-url]: https://bundlephobia.com/result?p=three
[npm-downloads]: https://img.shields.io/npm/dw/three
[npmtrends-url]: https://www.npmtrends.com/three
[discord]: https://img.shields.io/discord/685241246557667386
[discord-url]: https://discord.gg/56GBJwAnUS
[deepwiki]: https://deepwiki.com/badge.svg
[deepwiki-url]: https://deepwiki.com/mrdoob/three.js

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[facebook/react]]></title>
            <link>https://github.com/facebook/react</link>
            <guid>https://github.com/facebook/react</guid>
            <pubDate>Wed, 29 Oct 2025 00:04:59 GMT</pubDate>
            <description><![CDATA[The library for web and native user interfaces.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/facebook/react">facebook/react</a></h1>
            <p>The library for web and native user interfaces.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 240,114</p>
            <p>Forks: 49,687</p>
            <p>Stars today: 42 stars today</p>
            <h2>README</h2><pre># [React](https://react.dev/) &amp;middot; [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/facebook/react/blob/main/LICENSE) [![npm version](https://img.shields.io/npm/v/react.svg?style=flat)](https://www.npmjs.com/package/react) [![(Runtime) Build and Test](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml/badge.svg)](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml) [![(Compiler) TypeScript](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml/badge.svg?branch=main)](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://legacy.reactjs.org/docs/how-to-contribute.html#your-first-pull-request)

React is a JavaScript library for building user interfaces.

* **Declarative:** React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.
* **Component-Based:** Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep the state out of the DOM.
* **Learn Once, Write Anywhere:** We don&#039;t make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using [Node](https://nodejs.org/en) and power mobile apps using [React Native](https://reactnative.dev/).

[Learn how to use React in your project](https://react.dev/learn).

## Installation

React has been designed for gradual adoption from the start, and **you can use as little or as much React as you need**:

* Use [Quick Start](https://react.dev/learn) to get a taste of React.
* [Add React to an Existing Project](https://react.dev/learn/add-react-to-an-existing-project) to use as little or as much React as you need.
* [Create a New React App](https://react.dev/learn/start-a-new-react-project) if you&#039;re looking for a powerful JavaScript toolchain.

## Documentation

You can find the React documentation [on the website](https://react.dev/).

Check out the [Getting Started](https://react.dev/learn) page for a quick overview.

The documentation is divided into several sections:

* [Quick Start](https://react.dev/learn)
* [Tutorial](https://react.dev/learn/tutorial-tic-tac-toe)
* [Thinking in React](https://react.dev/learn/thinking-in-react)
* [Installation](https://react.dev/learn/installation)
* [Describing the UI](https://react.dev/learn/describing-the-ui)
* [Adding Interactivity](https://react.dev/learn/adding-interactivity)
* [Managing State](https://react.dev/learn/managing-state)
* [Advanced Guides](https://react.dev/learn/escape-hatches)
* [API Reference](https://react.dev/reference/react)
* [Where to Get Support](https://react.dev/community)
* [Contributing Guide](https://legacy.reactjs.org/docs/how-to-contribute.html)

You can improve it by sending pull requests to [this repository](https://github.com/reactjs/react.dev).

## Examples

We have several examples [on the website](https://react.dev/). Here is the first one to get you started:

```jsx
import { createRoot } from &#039;react-dom/client&#039;;

function HelloMessage({ name }) {
  return &lt;div&gt;Hello {name}&lt;/div&gt;;
}

const root = createRoot(document.getElementById(&#039;container&#039;));
root.render(&lt;HelloMessage name=&quot;Taylor&quot; /&gt;);
```

This example will render &quot;Hello Taylor&quot; into a container on the page.

You&#039;ll notice that we used an HTML-like syntax; [we call it JSX](https://react.dev/learn#writing-markup-with-jsx). JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML.

## Contributing

The main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.

### [Code of Conduct](https://code.fb.com/codeofconduct)

Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read [the full text](https://code.fb.com/codeofconduct) so that you can understand what actions will and will not be tolerated.

### [Contributing Guide](https://legacy.reactjs.org/docs/how-to-contribute.html)

Read our [contributing guide](https://legacy.reactjs.org/docs/how-to-contribute.html) to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.

### [Good First Issues](https://github.com/facebook/react/labels/good%20first%20issue)

To help you get your feet wet and get you familiar with our contribution process, we have a list of [good first issues](https://github.com/facebook/react/labels/good%20first%20issue) that contain bugs that have a relatively limited scope. This is a great place to get started.

### License

React is [MIT licensed](./LICENSE).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[itdoginfo/podkop]]></title>
            <link>https://github.com/itdoginfo/podkop</link>
            <guid>https://github.com/itdoginfo/podkop</guid>
            <pubDate>Wed, 29 Oct 2025 00:04:58 GMT</pubDate>
            <description><![CDATA[Dev podkop]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/itdoginfo/podkop">itdoginfo/podkop</a></h1>
            <p>Dev podkop</p>
            <p>Language: JavaScript</p>
            <p>Stars: 988</p>
            <p>Forks: 79</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre># Вещи, которые вам нужно знать перед установкой

- Это бета-версия, которая находится в активной разработке. Из версии в версию что-то может меняться.
- При возникновении проблем, нужен технически грамотный фидбэк в чат. Ознакомьтесь с закрепом в топике.
- При обновлении **обязательно** [сбрасывайте кэш LuCI](https://podkop.net/docs/clear-browser-cache/).
- Также при обновлении всегда заходите в конфигурацию и проверяйте свои настройки. Конфигурация может измениться.
- Необходимо минимум 25МБ свободного места на роутере. Роутеры с флешками на 16МБ сразу мимо.
- При старте программы редактируется конфиг Dnsmasq.
- Podkop редактирует конфиг sing-box. Обязательно сохраните ваш конфиг sing-box перед установкой, если он вам нужен.
- Информация здесь может быть устаревшей. Все изменения фиксируются в [телеграм-чате](https://t.me/itdogchat/81758/420321).
- [Если у вас что-то не работает.](https://podkop.net/docs/diagnostics/)
- Если у вас установлен Getdomains, [его следует удалить](https://github.com/itdoginfo/domain-routing-openwrt?tab=readme-ov-file#%D1%81%D0%BA%D1%80%D0%B8%D0%BF%D1%82-%D0%B4%D0%BB%D1%8F-%D1%83%D0%B4%D0%B0%D0%BB%D0%B5%D0%BD%D0%B8%D1%8F).
- Требуется версия OpenWrt 24.10.
- Dashboard доступен, если вы заходите по http (из-за особенностей clash api). И не будет работать, если вы заходите по https и/или домену.

# Документация
https://podkop.net/

# Установка Podkop
Полная информация в [документации](https://podkop.net/docs/install/)

Вкратце, достаточно одного скрипта для установки и обновления:
```
sh &lt;(wget -O - https://raw.githubusercontent.com/itdoginfo/podkop/refs/heads/main/install.sh)
```

## Изменения 0.7.0
Начиная с версии 0.7.0 изменена структура конфига `/etc/config/podkop`. Старые значения несовместимы с новыми. Нужно заново настроить Podkop.

Скрипт установки обнаружит старую версию и предупредит вас об этом. Если вы согласитесь, то он сделает автоматически написанное ниже.

При обновлении вручную нужно:

0. Не ныть в issue и чатик.
1. Забэкапить старый конфиг:
```
mv /etc/config/podkop /etc/config/podkop-070
```
2. Стянуть новый дефолтный конфиг:
```
wget -O /etc/config/podkop https://raw.githubusercontent.com/itdoginfo/podkop/refs/heads/main/podkop/files/etc/config/podkop
```
3. Настроить заново ваш Podkop через Luci или UCI.

# ToDo

&gt; [!IMPORTANT]  
&gt; PR принимаются только по issues, у которых стоит label &quot;enhancement&quot;. Либо по согласованию с авторами в ТГ-чате. Остальные PR на данный момент не рассматриваются.

## Будущее
- [ ] [Подписка](https://github.com/itdoginfo/podkop/issues/118). Здесь нужна реализация, чтоб для каждой секции помимо ручного выбора, был выбор фильтрации по тегу. Например, для main выбираем ключевые слова NL, DE, FI. А для extra секции фильтруем по RU. И создаётся outbound c urltest в которых перечислены outbound из фильтров.
- [ ] Весь трафик в sing-box и маршрутизация полностью на его уровне.
- [ ] При успешном запуске переходит в фоновый режим и следит за состоянием sing-box. Если вдруг идёт exit 1, выполняется dnsmasq restore и снова следит за состоянием. Вопрос в том, как это искусственно провернуть. Попробовать положить прокси и посмотреть, останется ли работать DNS в этом случае. И здесь, вероятно, можно обойтись триггером в init.d. [Issue](https://github.com/itdoginfo/podkop/issues/111)
- [ ] Галочка, которая режет доступ к doh серверам.
- [ ] IPv6. Только после наполнения Wiki.

## Тесты
- [ ] Unit тесты (BATS)
- [ ] Интеграционные тесты бекенда (OpenWrt rootfs + BATS)

[![Ask DeepWiki](https://deepwiki.com/badge.svg)](https://deepwiki.com/itdoginfo/podkop)</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[nodejs/node]]></title>
            <link>https://github.com/nodejs/node</link>
            <guid>https://github.com/nodejs/node</guid>
            <pubDate>Wed, 29 Oct 2025 00:04:57 GMT</pubDate>
            <description><![CDATA[Node.js JavaScript runtime ✨🐢🚀✨]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nodejs/node">nodejs/node</a></h1>
            <p>Node.js JavaScript runtime ✨🐢🚀✨</p>
            <p>Language: JavaScript</p>
            <p>Stars: 114,028</p>
            <p>Forks: 33,589</p>
            <p>Stars today: 38 stars today</p>
            <h2>README</h2><pre># Node.js

Node.js is an open-source, cross-platform JavaScript runtime environment.

For information on using Node.js, see the [Node.js website][].

The Node.js project uses an [open governance model](./GOVERNANCE.md). The
[OpenJS Foundation][] provides support for the project.

Contributors are expected to act in a collaborative manner to move
the project forward. We encourage the constructive exchange of contrary
opinions and compromise. The [TSC](./GOVERNANCE.md#technical-steering-committee)
reserves the right to limit or block contributors who repeatedly act in ways
that discourage, exhaust, or otherwise negatively affect other participants.

**This project has a [Code of Conduct][].**

## Table of contents

* [Support](#support)
* [Release types](#release-types)
  * [Download](#download)
    * [Current and LTS releases](#current-and-lts-releases)
    * [Nightly releases](#nightly-releases)
    * [API documentation](#api-documentation)
  * [Verifying binaries](#verifying-binaries)
* [Building Node.js](#building-nodejs)
* [Security](#security)
* [Contributing to Node.js](#contributing-to-nodejs)
* [Current project team members](#current-project-team-members)
  * [TSC (Technical Steering Committee)](#tsc-technical-steering-committee)
  * [Collaborators](#collaborators)
  * [Triagers](#triagers)
  * [Release keys](#release-keys)
* [License](#license)

## Support

Looking for help? Check out the
[instructions for getting support](.github/SUPPORT.md).

## Release types

* **Current**: Under active development. Code for the Current release is in the
  branch for its major version number (for example,
  [v22.x](https://github.com/nodejs/node/tree/v22.x)). Node.js releases a new
  major version every 6 months, allowing for breaking changes. This happens in
  April and October every year. Releases appearing each October have a support
  life of 8 months. Releases appearing each April convert to LTS (see below)
  each October.
* **LTS**: Releases that receive Long Term Support, with a focus on stability
  and security. Every even-numbered major version will become an LTS release.
  LTS releases receive 12 months of _Active LTS_ support and a further 18 months
  of _Maintenance_. LTS release lines have alphabetically-ordered code names,
  beginning with v4 Argon. There are no breaking changes or feature additions,
  except in some special circumstances.
* **Nightly**: Code from the Current branch built every 24-hours when there are
  changes. Use with caution.

Current and LTS releases follow [semantic versioning](https://semver.org). A
member of the Release Team [signs](#release-keys) each Current and LTS release.
For more information, see the
[Release README](https://github.com/nodejs/Release#readme).

### Download

Binaries, installers, and source tarballs are available at
&lt;https://nodejs.org/en/download/&gt;.

#### Current and LTS releases

&lt;https://nodejs.org/download/release/&gt;

The [latest](https://nodejs.org/download/release/latest/) directory is an
alias for the latest Current release. The latest-_codename_ directory is an
alias for the latest release from an LTS line. For example, the
[latest-hydrogen](https://nodejs.org/download/release/latest-hydrogen/)
directory contains the latest Hydrogen (Node.js 18) release.

#### Nightly releases

&lt;https://nodejs.org/download/nightly/&gt;

Each directory and filename includes the version (e.g., `v22.0.0`),
followed by the UTC date (e.g., `20240424` for April 24, 2024),
and the short commit SHA of the HEAD of the release (e.g., `ddd0a9e494`).
For instance, a full directory name might look like `v22.0.0-nightly20240424ddd0a9e494`.

#### API documentation

Documentation for the latest Current release is at &lt;https://nodejs.org/api/&gt;.
Version-specific documentation is available in each release directory in the
_docs_ subdirectory. Version-specific documentation is also at
&lt;https://nodejs.org/download/docs/&gt;.

### Verifying binaries

Download directories contain a `SHASUMS256.txt.asc` file with SHA checksums for the
files and the releaser PGP signature.

You can get a trusted keyring from nodejs/release-keys, e.g. using `curl`:

```bash
curl -fsLo &quot;/path/to/nodejs-keyring.kbx&quot; &quot;https://github.com/nodejs/release-keys/raw/HEAD/gpg/pubring.kbx&quot;
```

Alternatively, you can import the releaser keys in your default keyring, see
[Release keys](#release-keys) for commands to how to do that.

Then, you can verify the files you&#039;ve downloaded locally
(if you&#039;re using your default keyring, pass `--keyring=&quot;${GNUPGHOME:-~/.gnupg}/pubring.kbx&quot;`):

```bash
curl -fsO &quot;https://nodejs.org/dist/${VERSION}/SHASUMS256.txt.asc&quot; \
&amp;&amp; gpgv --keyring=&quot;/path/to/nodejs-keyring.kbx&quot; --output SHASUMS256.txt &lt; SHASUMS256.txt.asc \
&amp;&amp; shasum --check SHASUMS256.txt --ignore-missing
```

## Building Node.js

See [BUILDING.md](BUILDING.md) for instructions on how to build Node.js from
source and a list of supported platforms.

## Security

For information on reporting security vulnerabilities in Node.js, see
[SECURITY.md](./SECURITY.md).

## Contributing to Node.js

* [Contributing to the project][]
* [Working Groups][]
* [Strategic initiatives][]
* [Technical values and prioritization][]

## Current project team members

For information about the governance of the Node.js project, see
[GOVERNANCE.md](./GOVERNANCE.md).

&lt;!-- node-core-utils and find-inactive-tsc.mjs depend on the format of the TSC
     list. If the format changes, those utilities need to be tested and
     updated. --&gt;

### TSC (Technical Steering Committee)

#### TSC voting members

&lt;!--lint disable prohibited-strings--&gt;

* [aduh95](https://github.com/aduh95) -
  **Antoine du Hamel** &lt;&lt;duhamelantoine1995@gmail.com&gt;&gt; (he/him)
* [anonrig](https://github.com/anonrig) -
  **Yagiz Nizipli** &lt;&lt;yagiz@nizipli.com&gt;&gt; (he/him)
* [benjamingr](https://github.com/benjamingr) -
  **Benjamin Gruenbaum** &lt;&lt;benjamingr@gmail.com&gt;&gt;
* [BridgeAR](https://github.com/BridgeAR) -
  **Ruben Bridgewater** &lt;&lt;ruben@bridgewater.de&gt;&gt; (he/him)
* [gireeshpunathil](https://github.com/gireeshpunathil) -
  **Gireesh Punathil** &lt;&lt;gpunathi@in.ibm.com&gt;&gt; (he/him)
* [jasnell](https://github.com/jasnell) -
  **James M Snell** &lt;&lt;jasnell@gmail.com&gt;&gt; (he/him)
* [joyeecheung](https://github.com/joyeecheung) -
  **Joyee Cheung** &lt;&lt;joyeec9h3@gmail.com&gt;&gt; (she/her)
* [legendecas](https://github.com/legendecas) -
  **Chengzhong Wu** &lt;&lt;legendecas@gmail.com&gt;&gt; (he/him)
* [marco-ippolito](https://github.com/marco-ippolito) -
  **Marco Ippolito** &lt;&lt;marcoippolito54@gmail.com&gt;&gt; (he/him)
* [mcollina](https://github.com/mcollina) -
  **Matteo Collina** &lt;&lt;matteo.collina@gmail.com&gt;&gt; (he/him)
* [panva](https://github.com/panva) -
  **Filip Skokan** &lt;&lt;panva.ip@gmail.com&gt;&gt; (he/him)
* [RafaelGSS](https://github.com/RafaelGSS) -
  **Rafael Gonzaga** &lt;&lt;rafael.nunu@hotmail.com&gt;&gt; (he/him)
* [RaisinTen](https://github.com/RaisinTen) -
  **Darshan Sen** &lt;&lt;raisinten@gmail.com&gt;&gt; (he/him)
* [richardlau](https://github.com/richardlau) -
  **Richard Lau** &lt;&lt;richard.lau@ibm.com&gt;&gt;
* [ronag](https://github.com/ronag) -
  **Robert Nagy** &lt;&lt;ronagy@icloud.com&gt;&gt;
* [ruyadorno](https://github.com/ruyadorno) -
  **Ruy Adorno** &lt;&lt;ruy@vlt.sh&gt;&gt; (he/him)
* [ShogunPanda](https://github.com/ShogunPanda) -
  **Paolo Insogna** &lt;&lt;paolo@cowtech.it&gt;&gt; (he/him)
* [targos](https://github.com/targos) -
  **Michaël Zasso** &lt;&lt;targos@protonmail.com&gt;&gt; (he/him)
* [tniessen](https://github.com/tniessen) -
  **Tobias Nießen** &lt;&lt;tniessen@tnie.de&gt;&gt; (he/him)

#### TSC regular members

* [BethGriggs](https://github.com/BethGriggs) -
  **Beth Griggs** &lt;&lt;bethanyngriggs@gmail.com&gt;&gt; (she/her)
* [bnoordhuis](https://github.com/bnoordhuis) -
  **Ben Noordhuis** &lt;&lt;info@bnoordhuis.nl&gt;&gt;
* [cjihrig](https://github.com/cjihrig) -
  **Colin Ihrig** &lt;&lt;cjihrig@gmail.com&gt;&gt; (he/him)
* [codebytere](https://github.com/codebytere) -
  **Shelley Vohr** &lt;&lt;shelley.vohr@gmail.com&gt;&gt; (she/her)
* [GeoffreyBooth](https://github.com/GeoffreyBooth) -
  **Geoffrey Booth** &lt;&lt;webadmin@geoffreybooth.com&gt;&gt; (he/him)
* [MoLow](https://github.com/MoLow) -
  **Moshe Atlow** &lt;&lt;moshe@atlow.co.il&gt;&gt; (he/him)
* [Trott](https://github.com/Trott) -
  **Rich Trott** &lt;&lt;rtrott@gmail.com&gt;&gt; (he/him)

&lt;details&gt;

&lt;summary&gt;TSC emeriti members&lt;/summary&gt;

#### TSC emeriti members

* [addaleax](https://github.com/addaleax) -
  **Anna Henningsen** &lt;&lt;anna@addaleax.net&gt;&gt; (she/her)
* [apapirovski](https://github.com/apapirovski) -
  **Anatoli Papirovski** &lt;&lt;apapirovski@mac.com&gt;&gt; (he/him)
* [ChALkeR](https://github.com/ChALkeR) -
  **Сковорода Никита Андреевич** &lt;&lt;chalkerx@gmail.com&gt;&gt; (he/him)
* [chrisdickinson](https://github.com/chrisdickinson) -
  **Chris Dickinson** &lt;&lt;christopher.s.dickinson@gmail.com&gt;&gt;
* [danbev](https://github.com/danbev) -
  **Daniel Bevenius** &lt;&lt;daniel.bevenius@gmail.com&gt;&gt; (he/him)
* [danielleadams](https://github.com/danielleadams) -
  **Danielle Adams** &lt;&lt;adamzdanielle@gmail.com&gt;&gt; (she/her)
* [evanlucas](https://github.com/evanlucas) -
  **Evan Lucas** &lt;&lt;evanlucas@me.com&gt;&gt; (he/him)
* [fhinkel](https://github.com/fhinkel) -
  **Franziska Hinkelmann** &lt;&lt;franziska.hinkelmann@gmail.com&gt;&gt; (she/her)
* [Fishrock123](https://github.com/Fishrock123) -
  **Jeremiah Senkpiel** &lt;&lt;fishrock123@rocketmail.com&gt;&gt; (he/they)
* [gabrielschulhof](https://github.com/gabrielschulhof) -
  **Gabriel Schulhof** &lt;&lt;gabrielschulhof@gmail.com&gt;&gt;
* [gibfahn](https://github.com/gibfahn) -
  **Gibson Fahnestock** &lt;&lt;gibfahn@gmail.com&gt;&gt; (he/him)
* [indutny](https://github.com/indutny) -
  **Fedor Indutny** &lt;&lt;fedor@indutny.com&gt;&gt;
* [isaacs](https://github.com/isaacs) -
  **Isaac Z. Schlueter** &lt;&lt;i@izs.me&gt;&gt;
* [joshgav](https://github.com/joshgav) -
  **Josh Gavant** &lt;&lt;josh.gavant@outlook.com&gt;&gt;
* [mhdawson](https://github.com/mhdawson) -
  **Michael Dawson** &lt;&lt;midawson@redhat.com&gt;&gt; (he/him)
* [mmarchini](https://github.com/mmarchini) -
  **Mary Marchini** &lt;&lt;oss@mmarchini.me&gt;&gt; (she/her)
* [mscdex](https://github.com/mscdex) -
  **Brian White** &lt;&lt;mscdex@mscdex.net&gt;&gt;
* [MylesBorins](https://github.com/MylesBorins) -
  **Myles Borins** &lt;&lt;myles.borins@gmail.com&gt;&gt; (he/him)
* [nebrius](https://github.com/nebrius) -
  **Bryan Hughes** &lt;&lt;bryan@nebri.us&gt;&gt;
* [ofrobots](https://github.com/ofrobots) -
  **Ali Ijaz Sheikh** &lt;&lt;ofrobots@google.com&gt;&gt; (he/him)
* [orangemocha](https://github.com/orangemocha) -
  **Alexis Campailla** &lt;&lt;orangemocha@nodejs.org&gt;&gt;
* [piscisaureus](https://github.com/piscisaureus) -
  **Bert Belder** &lt;&lt;bertbelder@gmail.com&gt;&gt;
* [rvagg](https://github.com/rvagg) -
  **Rod Vagg** &lt;&lt;r@va.gg&gt;&gt;
* [sam-github](https://github.com/sam-github) -
  **Sam Roberts** &lt;&lt;vieuxtech@gmail.com&gt;&gt;
* [shigeki](https://github.com/shigeki) -
  **Shigeki Ohtsu** &lt;&lt;ohtsu@ohtsu.org&gt;&gt; (he/him)
* [thefourtheye](https://github.com/thefourtheye) -
  **Sakthipriyan Vairamani** &lt;&lt;thechargingvolcano@gmail.com&gt;&gt; (he/him)
* [TimothyGu](https://github.com/TimothyGu) -
  **Tiancheng &quot;Timothy&quot; Gu** &lt;&lt;timothygu99@gmail.com&gt;&gt; (he/him)
* [trevnorris](https://github.com/trevnorris) -
  **Trevor Norris** &lt;&lt;trev.norris@gmail.com&gt;&gt;

&lt;/details&gt;

&lt;!-- node-core-utils and find-inactive-collaborators.mjs depend on the format
     of the collaborator list. If the format changes, those utilities need to be
     tested and updated. --&gt;

### Collaborators

* [abmusse](https://github.com/abmusse) -
  **Abdirahim Musse** &lt;&lt;abdirahim.musse@ibm.com&gt;&gt;
* [addaleax](https://github.com/addaleax) -
  **Anna Henningsen** &lt;&lt;anna@addaleax.net&gt;&gt; (she/her)
* [Aditi-1400](https://github.com/Aditi-1400) -
  **Aditi Singh** &lt;&lt;aditisingh1400@gmail.com&gt;&gt; (she/her)
* [aduh95](https://github.com/aduh95) -
  **Antoine du Hamel** &lt;&lt;duhamelantoine1995@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/aduh95)
* [anonrig](https://github.com/anonrig) -
  **Yagiz Nizipli** &lt;&lt;yagiz@nizipli.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/anonrig)
* [atlowChemi](https://github.com/atlowChemi) -
  **Chemi Atlow** &lt;&lt;chemi@atlow.co.il&gt;&gt; (he/him)
* [Ayase-252](https://github.com/Ayase-252) -
  **Qingyu Deng** &lt;&lt;i@ayase-lab.com&gt;&gt;
* [bengl](https://github.com/bengl) -
  **Bryan English** &lt;&lt;bryan@bryanenglish.com&gt;&gt; (he/him)
* [benjamingr](https://github.com/benjamingr) -
  **Benjamin Gruenbaum** &lt;&lt;benjamingr@gmail.com&gt;&gt;
* [BethGriggs](https://github.com/BethGriggs) -
  **Beth Griggs** &lt;&lt;bethanyngriggs@gmail.com&gt;&gt; (she/her)
* [bnb](https://github.com/bnb) -
  **Tierney Cyren** &lt;&lt;hello@bnb.im&gt;&gt; (they/them)
* [bnoordhuis](https://github.com/bnoordhuis) -
  **Ben Noordhuis** &lt;&lt;info@bnoordhuis.nl&gt;&gt;
* [BridgeAR](https://github.com/BridgeAR) -
  **Ruben Bridgewater** &lt;&lt;ruben@bridgewater.de&gt;&gt; (he/him)
* [cclauss](https://github.com/cclauss) -
  **Christian Clauss** &lt;&lt;cclauss@me.com&gt;&gt; (he/him)
* [cjihrig](https://github.com/cjihrig) -
  **Colin Ihrig** &lt;&lt;cjihrig@gmail.com&gt;&gt; (he/him)
* [codebytere](https://github.com/codebytere) -
  **Shelley Vohr** &lt;&lt;shelley.vohr@gmail.com&gt;&gt; (she/her)
* [cola119](https://github.com/cola119) -
  **Kohei Ueno** &lt;&lt;kohei.ueno119@gmail.com&gt;&gt; (he/him)
* [daeyeon](https://github.com/daeyeon) -
  **Daeyeon Jeong** &lt;&lt;daeyeon.dev@gmail.com&gt;&gt; (he/him)
* [dario-piotrowicz](https://github.com/dario-piotrowicz) -
  **Dario Piotrowicz** &lt;&lt;dario.piotrowicz@gmail.com&gt;&gt; (he/him)
* [debadree25](https://github.com/debadree25) -
  **Debadree Chatterjee** &lt;&lt;debadree333@gmail.com&gt;&gt; (he/him)
* [deokjinkim](https://github.com/deokjinkim) -
  **Deokjin Kim** &lt;&lt;deokjin81.kim@gmail.com&gt;&gt; (he/him)
* [edsadr](https://github.com/edsadr) -
  **Adrian Estrada** &lt;&lt;edsadr@gmail.com&gt;&gt; (he/him)
* [ErickWendel](https://github.com/ErickWendel) -
  **Erick Wendel** &lt;&lt;erick.workspace@gmail.com&gt;&gt; (he/him)
* [Ethan-Arrowood](https://github.com/Ethan-Arrowood) -
  **Ethan Arrowood** &lt;&lt;ethan@arrowood.dev&gt;&gt; (he/him)
* [fhinkel](https://github.com/fhinkel) -
  **Franziska Hinkelmann** &lt;&lt;franziska.hinkelmann@gmail.com&gt;&gt; (she/her)
* [Flarna](https://github.com/Flarna) -
  **Gerhard Stöbich** &lt;&lt;deb2001-github@yahoo.de&gt;&gt; (he/they)
* [gabrielschulhof](https://github.com/gabrielschulhof) -
  **Gabriel Schulhof** &lt;&lt;gabrielschulhof@gmail.com&gt;&gt;
* [geeksilva97](https://github.com/geeksilva97) -
  **Edy Silva** &lt;&lt;edigleyssonsilva@gmail.com&gt;&gt; (he/him)
* [gengjiawen](https://github.com/gengjiawen) -
  **Jiawen Geng** &lt;&lt;technicalcute@gmail.com&gt;&gt;
* [GeoffreyBooth](https://github.com/GeoffreyBooth) -
  **Geoffrey Booth** &lt;&lt;webadmin@geoffreybooth.com&gt;&gt; (he/him)
* [gireeshpunathil](https://github.com/gireeshpunathil) -
  **Gireesh Punathil** &lt;&lt;gpunathi@in.ibm.com&gt;&gt; (he/him)
* [guybedford](https://github.com/guybedford) -
  **Guy Bedford** &lt;&lt;guybedford@gmail.com&gt;&gt; (he/him)
* [H4ad](https://github.com/H4ad) -
  **Vinícius Lourenço Claro Cardoso** &lt;&lt;contact@viniciusl.com.br&gt;&gt; (he/him)
* [HarshithaKP](https://github.com/HarshithaKP) -
  **Harshitha K P** &lt;&lt;harshitha014@gmail.com&gt;&gt; (she/her)
* [himself65](https://github.com/himself65) -
  **Zeyu &quot;Alex&quot; Yang** &lt;&lt;himself65@outlook.com&gt;&gt; (he/him)
* [IlyasShabi](https://github.com/IlyasShabi) -
  **Ilyas Shabi** &lt;&lt;ilyasshabi94@gmail.com&gt;&gt; (he/him)
* [islandryu](https://github.com/islandryu) -
  **Ryuhei Shima** &lt;&lt;shimaryuhei@gmail.com&gt;&gt; (he/him)
* [jakecastelli](https://github.com/jakecastelli) -
  **Jake Yuesong Li** &lt;&lt;jake.yuesong@gmail.com&gt;&gt; (he/him)
* [JakobJingleheimer](https://github.com/JakobJingleheimer) -
  **Jacob Smith** &lt;&lt;jacob@frende.me&gt;&gt; (he/him)
* [jasnell](https://github.com/jasnell) -
  **James M Snell** &lt;&lt;jasnell@gmail.com&gt;&gt; (he/him)
* [jazelly](https://github.com/jazelly) -
  **Jason Zhang** &lt;&lt;xzha4350@gmail.com&gt;&gt; (he/him)
* [jkrems](https://github.com/jkrems) -
  **Jan Martin** &lt;&lt;jan.krems@gmail.com&gt;&gt; (he/him)
* [JonasBa](https://github.com/JonasBa) -
  **Jonas Badalic** &lt;&lt;jonas.badalic@gmail.com&gt;&gt; (he/him)
* [joyeecheung](https://github.com/joyeecheung) -
  **Joyee Cheung** &lt;&lt;joyeec9h3@gmail.com&gt;&gt; (she/her)
* [juanarbol](https://github.com/juanarbol) -
  **Juan José Arboleda** &lt;&lt;soyjuanarbol@gmail.com&gt;&gt; (he/him)
* [JungMinu](https://github.com/JungMinu) -
  **Minwoo Jung** &lt;&lt;nodecorelab@gmail.com&gt;&gt; (he/him)
* [KhafraDev](https://github.com/KhafraDev) -
  **Matthew Aitken** &lt;&lt;maitken033380023@gmail.com&gt;&gt; (he/him)
* [legendecas](https://github.com/legendecas) -
  **Chengzhong Wu** &lt;&lt;legendecas@gmail.com&gt;&gt; (he/him)
* [lemire](https://github.com/lemire) -
  **Daniel Lemire** &lt;&lt;daniel@lemire.me&gt;&gt;
* [LiviaMedeiros](https://github.com/LiviaMedeiros) -
  **LiviaMedeiros** &lt;&lt;livia@cirno.name&gt;&gt;
* [ljharb](https://github.com/ljharb) -
  **Jordan Harband** &lt;&lt;ljharb@gmail.com&gt;&gt;
* [lpinca](https://github.com/lpinca) -
  **Luigi Pinca** &lt;&lt;luigipinca@gmail.com&gt;&gt; (he/him)
* [lukekarrys](https://github.com/lukekarrys) -
  **Luke Karrys** &lt;&lt;luke@lukekarrys.com&gt;&gt; (he/him)
* [Lxxyx](https://github.com/Lxxyx) -
  **Zijian Liu** &lt;&lt;lxxyxzj@gmail.com&gt;&gt; (he/him)
* [marco-ippolito](https://github.com/marco-ippolito) -
  **Marco Ippolito** &lt;&lt;marcoippolito54@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/marco-ippolito)
* [marsonya](https://github.com/marsonya) -
  **Akhil Marsonya** &lt;&lt;akhil.marsonya27@gmail.com&gt;&gt; (he/him)
* [MattiasBuelens](https://github.com/MattiasBuelens) -
  **Mattias Buelens** &lt;&lt;mattias@buelens.com&gt;&gt; (he/him)
* [mcollina](https://github.com/mcollina) -
  **Matteo Collina** &lt;&lt;matteo.collina@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/mcollina)
* [meixg](https://github.com/meixg) -
  **Xuguang Mei** &lt;&lt;meixuguang@gmail.com&gt;&gt; (he/him)
* [mhdawson](https://github.com/mhdawson) -
  **Michael Dawson** &lt;&lt;midawson@redhat.com&gt;&gt; (he/him)
* [MoLow](https://github.com/MoLow) -
  **Moshe Atlow** &lt;&lt;moshe@atlow.co.il&gt;&gt; (he/him)
* [MrJithil](https://github.com/MrJithil) -
  **Jithil P Ponnan** &lt;&lt;jithil@outlook.com&gt;&gt; (he/him)
* [ovflowd](https://github.com/ovflowd) -
  **Claudio Wunder** &lt;&lt;cwunder@gnome.org&gt;&gt; (he/they)
* [panva](https://github.com/panva) -
  **Filip Skokan** &lt;&lt;panva.ip@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/panva)
* [pimterry](https://github.com/pimterry) -
  **Tim Perry** &lt;&lt;pimterry@gmail.com&gt;&gt; (he/him)
* [pmarchini](https://github.com/pmarchini) -
  **Pietro Marchini** &lt;&lt;pietro.marchini94@gmail.com&gt;&gt; (he/him)
* [puskin](https://github.com/puskin) -
  **Giovanni Bucci** &lt;&lt;github@puskin.it&gt;&gt; (he/him)
* [Qard](https://github.com/Qard) -
  **Stephen Belanger** &lt;&lt;admin@stephenbelanger.com&gt;&gt; (he/him)
* [RafaelGSS](https://github.com/RafaelGSS) -
  **Rafael Gonzaga** &lt;&lt;rafael.nunu@hotmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/RafaelGSS)
* [RaisinTen](https://github.com/RaisinTen) -
  **Darshan Sen** &lt;&lt;raisinten@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/RaisinTen)
* [richardlau](https://github.com/richardlau) -
  **Richard Lau** &lt;&lt;richard.lau@ibm.com&gt;&gt;
* [rluvaton](https://github.com/rluvaton) -
  **Raz Luvaton** &lt;&lt;rluvaton@gmail.com&gt;&gt; (he/him)
* [ronag](https://github.com/ronag) -
  **Robert Nagy** &lt;&lt;ronagy@icloud.com&gt;&gt;
* [ruyadorno](https://github.com/ruyadorno) -
  **Ruy Adorno** &lt;&lt;ruy@vlt.sh&gt;&gt; (he/him)
* [santigimeno](https://github.com/santigimeno) -
  **Santiago Gimeno** &lt;&lt;santiago.gimeno@gmail.com&gt;&gt;
* [ShogunPanda](https://github.com/ShogunPanda) -
  **Paolo Insogna** &lt;&lt;paolo@cowtech.it&gt;&gt; (he/him)
* [srl295](https://github.com/srl295) -
  **Steven R Loomis** &lt;&lt;srl295@gmail.com&gt;&gt;
* [StefanStojanovic](https://github.com/StefanStojanovic) -
  **Stefan Stojanovic** &lt;&lt;stefan.stojanovic@janeasystems.com&gt;&gt; (he/him)
* [sxa](https://github.com/sxa) -
  **Stewart X Addison** &lt;&lt;sxa@redhat.com&gt;&gt; (he/him)
* [targos](https://github.com/targos) -
  **Michaël Zasso** &lt;&lt;targos@protonmail.com&gt;&gt; (he/him)
* [theanarkh](https://github.com/theanarkh) -
  **theanarkh** &lt;&lt;theratliter@gmail.com&gt;&gt; (he/him)
* [tniessen](https://github.com/tniessen) -
  **Tobias Nießen** &lt;&lt;tniessen@tnie.de&gt;&gt; (he/him)
* [trivikr](https://github.com/trivikr) -
  **Trivikram Kamat** &lt;&lt;trivikr.dev@gmail.com&gt;&gt;
* [Trott](https://github.com/Trott) -
  **Rich Trott** &lt;&lt;rtrott@gmail.com&gt;&gt; (he/him)
* [UlisesGascon](https://github.com/UlisesGascon) -
  **Ulises Gascón** &lt;&lt;ulisesgascongonzalez@gmail.com&gt;&gt; (he/him)
* [vmoroz]

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[Asabeneh/30-Days-Of-JavaScript]]></title>
            <link>https://github.com/Asabeneh/30-Days-Of-JavaScript</link>
            <guid>https://github.com/Asabeneh/30-Days-Of-JavaScript</guid>
            <pubDate>Wed, 29 Oct 2025 00:04:56 GMT</pubDate>
            <description><![CDATA[30 days of JavaScript programming challenge is a step-by-step guide to learn JavaScript programming language in 30 days. This challenge may take more than 100 days, please just follow your own pace. These videos may help too: https://www.youtube.com/channel/UC7PNRuno1rzYPb1xLa4yktw]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Asabeneh/30-Days-Of-JavaScript">Asabeneh/30-Days-Of-JavaScript</a></h1>
            <p>30 days of JavaScript programming challenge is a step-by-step guide to learn JavaScript programming language in 30 days. This challenge may take more than 100 days, please just follow your own pace. These videos may help too: https://www.youtube.com/channel/UC7PNRuno1rzYPb1xLa4yktw</p>
            <p>Language: JavaScript</p>
            <p>Stars: 45,520</p>
            <p>Forks: 10,356</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[upstash/context7]]></title>
            <link>https://github.com/upstash/context7</link>
            <guid>https://github.com/upstash/context7</guid>
            <pubDate>Wed, 29 Oct 2025 00:04:55 GMT</pubDate>
            <description><![CDATA[Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/upstash/context7">upstash/context7</a></h1>
            <p>Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors</p>
            <p>Language: JavaScript</p>
            <p>Stars: 35,373</p>
            <p>Forks: 1,752</p>
            <p>Stars today: 173 stars today</p>
            <h2>README</h2><pre>![Cover](public/cover.png)

# Context7 MCP - Up-to-date Code Docs For Any Prompt

[![Website](https://img.shields.io/badge/Website-context7.com-blue)](https://context7.com) [![smithery badge](https://smithery.ai/badge/@upstash/context7-mcp)](https://smithery.ai/server/@upstash/context7-mcp) [![NPM Version](https://img.shields.io/npm/v/%40upstash%2Fcontext7-mcp?color=red)](https://www.npmjs.com/package/@upstash/context7-mcp) [![MIT licensed](https://img.shields.io/npm/l/%40upstash%2Fcontext7-mcp)](./LICENSE)

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=context7&amp;config=eyJ1cmwiOiJodHRwczovL21jcC5jb250ZXh0Ny5jb20vbWNwIn0%3D) [&lt;img alt=&quot;Install in VS Code (npx)&quot; src=&quot;https://img.shields.io/badge/Install%20in%20VS%20Code-0098FF?style=for-the-badge&amp;logo=visualstudiocode&amp;logoColor=white&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)

[![繁體中文](https://img.shields.io/badge/docs-繁體中文-yellow)](./docs/README.zh-TW.md) [![简体中文](https://img.shields.io/badge/docs-简体中文-yellow)](./docs/README.zh-CN.md) [![日本語](https://img.shields.io/badge/docs-日本語-b7003a)](./docs/README.ja.md) [![한국어 문서](https://img.shields.io/badge/docs-한국어-green)](./docs/README.ko.md) [![Documentación en Español](https://img.shields.io/badge/docs-Español-orange)](./docs/README.es.md) [![Documentation en Français](https://img.shields.io/badge/docs-Français-blue)](./docs/README.fr.md) [![Documentação em Português (Brasil)](&lt;https://img.shields.io/badge/docs-Português%20(Brasil)-purple&gt;)](./docs/README.pt-BR.md) [![Documentazione in italiano](https://img.shields.io/badge/docs-Italian-red)](./docs/README.it.md) [![Dokumentasi Bahasa Indonesia](https://img.shields.io/badge/docs-Bahasa%20Indonesia-pink)](./docs/README.id-ID.md) [![Dokumentation auf Deutsch](https://img.shields.io/badge/docs-Deutsch-darkgreen)](./docs/README.de.md) [![Документация на русском языке](https://img.shields.io/badge/docs-Русский-darkblue)](./docs/README.ru.md) [![Українська документація](https://img.shields.io/badge/docs-Українська-lightblue)](./docs/README.uk.md) [![Türkçe Doküman](https://img.shields.io/badge/docs-Türkçe-blue)](./docs/README.tr.md) [![Arabic Documentation](https://img.shields.io/badge/docs-Arabic-white)](./docs/README.ar.md) [![Tiếng Việt](https://img.shields.io/badge/docs-Tiếng%20Việt-red)](./docs/README.vi.md)

## ❌ Without Context7

LLMs rely on outdated or generic information about the libraries you use. You get:

- ❌ Code examples are outdated and based on year-old training data
- ❌ Hallucinated APIs that don&#039;t even exist
- ❌ Generic answers for old package versions

## ✅ With Context7

Context7 MCP pulls up-to-date, version-specific documentation and code examples straight from the source — and places them directly into your prompt.

Add `use context7` to your prompt in Cursor:

```txt
Create a Next.js middleware that checks for a valid JWT in cookies and redirects unauthenticated users to `/login`. use context7
```

```txt
Configure a Cloudflare Worker script to cache JSON API responses for five minutes. use context7
```

Context7 fetches up-to-date code examples and documentation right into your LLM&#039;s context.

- 1️⃣ Write your prompt naturally
- 2️⃣ Tell the LLM to `use context7`
- 3️⃣ Get working code answers

No tab-switching, no hallucinated APIs that don&#039;t exist, no outdated code generation.



&gt; [!NOTE]
&gt; This repository hosts the source code of Context7 MCP server. The supporting components — API backend, parsing engine, and crawling engine — are private and not part of this release. 



## 📚 Adding Projects

Check out our [project addition guide](./docs/adding-projects.md) to learn how to add (or update) your favorite libraries to Context7.

## 🛠️ Installation

### Requirements

- Node.js &gt;= v18.0.0
- Cursor, Claude Code, VSCode, Windsurf or another MCP Client
- Context7 API Key (Optional) for higher rate limits and private repositories (Get yours by creating an account at [context7.com/dashboard](https://context7.com/dashboard))

&gt; [!WARNING]
&gt; **SSE Protocol Deprecation Notice**
&gt;
&gt; The Server-Sent Events (SSE) transport protocol is deprecated and its endpoint will be removed in upcoming releases. Please use HTTP or stdio transport methods instead.

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Installing via Smithery&lt;/b&gt;&lt;/summary&gt;

To install Context7 MCP Server for any client automatically via [Smithery](https://smithery.ai/server/@upstash/context7-mcp):

```bash
npx -y @smithery/cli@latest install @upstash/context7-mcp --client &lt;CLIENT_NAME&gt; --key &lt;YOUR_SMITHERY_KEY&gt;
```

You can find your Smithery key in the [Smithery.ai webpage](https://smithery.ai/server/@upstash/context7-mcp).

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Cursor&lt;/b&gt;&lt;/summary&gt;

Go to: `Settings` -&gt; `Cursor Settings` -&gt; `MCP` -&gt; `Add new global MCP server`

Pasting the following configuration into your Cursor `~/.cursor/mcp.json` file is the recommended approach. You may also install in a specific project by creating `.cursor/mcp.json` in your project folder. See [Cursor MCP docs](https://docs.cursor.com/context/model-context-protocol) for more info.

&gt; Since Cursor 1.0, you can click the install button below for instant one-click installation.

#### Cursor Remote Server Connection

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=context7&amp;config=eyJ1cmwiOiJodHRwczovL21jcC5jb250ZXh0Ny5jb20vbWNwIn0%3D)

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
      }
    }
  }
}
```

#### Cursor Local Server Connection

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=context7&amp;config=eyJjb21tYW5kIjoibnB4IC15IEB1cHN0YXNoL2NvbnRleHQ3LW1jcCJ9)

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Claude Code&lt;/b&gt;&lt;/summary&gt;

Run this command. See [Claude Code MCP docs](https://docs.anthropic.com/en/docs/claude-code/mcp) for more info.

#### Claude Code Remote Server Connection

```sh
claude mcp add --transport http context7 https://mcp.context7.com/mcp --header &quot;CONTEXT7_API_KEY: YOUR_API_KEY&quot;
```

#### Claude Code Local Server Connection

```sh
claude mcp add context7 -- npx -y @upstash/context7-mcp --api-key YOUR_API_KEY
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Amp&lt;/b&gt;&lt;/summary&gt;

Run this command in your terminal. See [Amp MCP docs](https://ampcode.com/manual#mcp) for more info.

#### Without API Key (Basic Usage)

```sh
amp mcp add context7 https://mcp.context7.com/mcp
```

#### With API Key (Higher Rate Limits &amp; Private Repos)

```sh
amp mcp add context7 --header &quot;CONTEXT7_API_KEY=YOUR_API_KEY&quot; https://mcp.context7.com/mcp
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Windsurf&lt;/b&gt;&lt;/summary&gt;

Add this to your Windsurf MCP config file. See [Windsurf MCP docs](https://docs.windsurf.com/windsurf/cascade/mcp) for more info.

#### Windsurf Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;serverUrl&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
      }
    }
  }
}
```

#### Windsurf Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in VS Code&lt;/b&gt;&lt;/summary&gt;

[&lt;img alt=&quot;Install in VS Code (npx)&quot; src=&quot;https://img.shields.io/badge/VS_Code-VS_Code?style=flat-square&amp;label=Install%20Context7%20MCP&amp;color=0098FF&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)
[&lt;img alt=&quot;Install in VS Code Insiders (npx)&quot; src=&quot;https://img.shields.io/badge/VS_Code_Insiders-VS_Code_Insiders?style=flat-square&amp;label=Install%20Context7%20MCP&amp;color=24bfa5&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode-insiders%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)

Add this to your VS Code MCP config file. See [VS Code MCP docs](https://code.visualstudio.com/docs/copilot/chat/mcp-servers) for more info.

#### VS Code Remote Server Connection

```json
&quot;mcp&quot;: {
  &quot;servers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;http&quot;,
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
      }
    }
  }
}
```

#### VS Code Local Server Connection

```json
&quot;mcp&quot;: {
  &quot;servers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;stdio&quot;,
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;
&lt;b&gt;Install in Cline&lt;/b&gt;
&lt;/summary&gt;

You can easily install Context7 through the [Cline MCP Server Marketplace](https://cline.bot/mcp-marketplace) by following these instructions:

1. Open **Cline**.
2. Click the hamburger menu icon (☰) to enter the **MCP Servers** section.
3. Use the search bar within the **Marketplace** tab to find _Context7_.
4. Click the **Install** button.

Or you can directly edit MCP servers configuration:

1. Open **Cline**.
2. Click the hamburger menu icon (☰) to enter the **MCP Servers** section.
3. Choose **Remote Servers** tab.
4. Click the **Edit Configuration** button.
5. Add context7 to `mcpServers`:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;type&quot;: &quot;streamableHttp&quot;,
      &quot;headers&quot;: {
        &quot;Authorization&quot;: &quot;Bearer YOUR_API_KEY&quot;
      }
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Zed&lt;/b&gt;&lt;/summary&gt;

It can be installed via [Zed Extensions](https://zed.dev/extensions?query=Context7) or you can add this to your Zed `settings.json`. See [Zed Context Server docs](https://zed.dev/docs/assistant/context-servers) for more info.

```json
{
  &quot;context_servers&quot;: {
    &quot;Context7&quot;: {
      &quot;source&quot;: &quot;custom&quot;,
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Augment Code&lt;/b&gt;&lt;/summary&gt;

To configure Context7 MCP in Augment Code, you can use either the graphical interface or manual configuration.

### **A. Using the Augment Code UI**

1. Click the hamburger menu.
2. Select **Settings**.
3. Navigate to the **Tools** section.
4. Click the **+ Add MCP** button.
5. Enter the following command:

   ```
   npx -y @upstash/context7-mcp@latest
   ```

6. Name the MCP: **Context7**.
7. Click the **Add** button.

Once the MCP server is added, you can start using Context7&#039;s up-to-date code documentation features directly within Augment Code.

---

### **B. Manual Configuration**

1. Press Cmd/Ctrl Shift P or go to the hamburger menu in the Augment panel
2. Select Edit Settings
3. Under Advanced, click Edit in settings.json
4. Add the server configuration to the `mcpServers` array in the `augment.advanced` object

```json
&quot;augment.advanced&quot;: {
  &quot;mcpServers&quot;: [
    {
      &quot;name&quot;: &quot;context7&quot;,
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  ]
}
```

Once the MCP server is added, restart your editor. If you receive any errors, check the syntax to make sure closing brackets or commas are not missing.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Roo Code&lt;/b&gt;&lt;/summary&gt;

Add this to your Roo Code MCP configuration file. See [Roo Code MCP docs](https://docs.roocode.com/features/mcp/using-mcp-in-roo) for more info.

#### Roo Code Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;streamable-http&quot;,
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
      }
    }
  }
}
```

#### Roo Code Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Gemini CLI&lt;/b&gt;&lt;/summary&gt;

See [Gemini CLI Configuration](https://google-gemini.github.io/gemini-cli/docs/tools/mcp-server.html) for details.

1.  Open the Gemini CLI settings file. The location is `~/.gemini/settings.json` (where `~` is your home directory).
2.  Add the following to the `mcpServers` object in your `settings.json` file:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;httpUrl&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;,
        &quot;Accept&quot;: &quot;application/json, text/event-stream&quot;
      }
    }
  }
}
```

Or, for a local server:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

If the `mcpServers` object does not exist, create it.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Qwen Coder&lt;/b&gt;&lt;/summary&gt;

See [Qwen Coder MCP Configuration](https://qwenlm.github.io/qwen-code-docs/en/tools/mcp-server/#how-to-set-up-your-mcp-server) for details.

1.  Open the Qwen Coder settings file. The location is `~/.qwen/settings.json` (where `~` is your home directory).
2.  Add the following to the `mcpServers` object in your `settings.json` file:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;httpUrl&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;,
        &quot;Accept&quot;: &quot;application/json, text/event-stream&quot;
      }
    }
  }
}
```

Or, for a local server:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

If the `mcpServers` object does not exist, create it.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Claude Desktop&lt;/b&gt;&lt;/summary&gt;

#### Remote Server Connection

Open Claude Desktop and navigate to Settings &gt; Connectors &gt; Add Custom Connector. Enter the name as `Context7` and the remote MCP server URL as `https://mcp.context7.com/mcp`.

#### Local Server Connection

Open Claude Desktop developer settings and edit your `claude_desktop_config.json` file to add the following configuration. See [Claude Desktop MCP docs](https://modelcontextprotocol.io/quickstart/user) for more info.

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Opencode&lt;/b&gt;&lt;/summary&gt;

Add this to your Opencode configuration file. See [Opencode MCP docs](https://opencode.ai/docs/mcp-servers) for more info.

#### Opencode Remote Server Connection

```json
&quot;mcp&quot;: {
  &quot;context7&quot;: {
    &quot;type&quot;: &quot;remote&quot;,
    &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;,
    &quot;headers&quot;: {
      &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
    },
    &quot;enabled&quot;: true
  }
}
```

#### Opencode Local Server Connection

```json
{
  &quot;mcp&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;local&quot;,
      &quot;command&quot;: [&quot;npx&quot;, &quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;],
      &quot;enabled&quot;: true
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in OpenAI Codex&lt;/b&gt;&lt;/summary&gt;

See [OpenAI Codex](https://github.com/openai/codex) for more information.

Add the following configuration to your OpenAI Codex MCP server settings:

#### Local Server Connection

```toml
[mcp_servers.context7]
args = [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
command = &quot;npx&quot;
startup_timeout_ms = 20_000
```

#### Remote Server Connection

```toml
[mcp_servers.context7]
url = &quot;https://mcp.context7.com/mcp&quot;
http_headers = { &quot;CONTEXT7_API_KEY&quot; = &quot;YOUR_API_KEY&quot; }
```

&gt; Optional troubleshooting — only if you see startup &quot;request timed out&quot; or &quot;not found program&quot;. Most users can ignore this.
&gt;
&gt; - First try: increase `startup_timeout_ms` to `40_000` and retry.
&gt; - Windows quick fix (absolute `npx` path + explicit env):
&gt;
&gt; ```toml
&gt; [mcp_servers.context7]
&gt; command = &quot;C:\\Users\\yourname\\AppData\\Roaming\\npm\\npx.cmd&quot;
&gt; args = [
&gt;   &quot;-y&quot;,
&gt;   &quot;@upstash/context7-mcp&quot;,
&gt;   &quot;--api-key&quot;,
&gt;   &quot;YOUR_API_KEY&quot;
&gt; ]
&gt; env = { SystemRoot=&quot;C:\\Windows&quot;, APPDATA=&quot;C:\\Users\\yourname\\AppData\\Roaming&quot; }
&gt; startup_timeout_ms = 40_000
&gt; ```
&gt;
&gt; - macOS quick fix (use Node + installed package entry point):
&gt;
&gt; ```toml
&gt; [mcp_servers.context7]
&gt; command = &quot;/Users/yourname/.nvm/versions/node/v22.14.0/bin/node&quot;
&gt; args = [&quot;/Users/yourname/.nvm/versions/node/v22.14.0/lib/node_modules/@upstash/context7-mcp/dist/index.js&quot;,
&gt;   &quot;--transport&quot;,
&gt;   &quot;stdio&quot;,
&gt;   &quot;--api-key&quot;,
&gt;   &quot;YOUR_API_KEY&quot;
&gt; ]
&gt; ```
&gt;
&gt; Notes: Replace `yourname` with your OS username. Explicitly setting `APPDATA` and `SystemRoot` is essential because these are required by `npx` on Windows but not set by certain versions of OpenAI Codex mcp clients by default.

&lt;/details&gt;

&lt;details&gt;

&lt;summary&gt;&lt;b&gt;Install in JetBrains AI Assistant&lt;/b&gt;&lt;/summary&gt;

See [JetBrains AI Assistant Documentation](https://www.jetbrains.com/help/ai-assistant/configure-an-mcp-server.html) for more details.

1. In JetBrains IDEs, go to `Settings` -&gt; `Tools` -&gt; `AI Assistant` -&gt; `Model Context Protocol (MCP)`
2. Click `+ Add`.
3. Click on `Command` in the top-left corner of the dialog and select the As JSON option from the list
4. Add this configuration and click `OK`

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

5. Click `Apply` to save changes.
6. The same way context7 could be added for JetBrains Junie in `Settings` -&gt; `Tools` -&gt; `Junie` -&gt; `MCP Settings`

&lt;/details&gt;

&lt;details&gt;
  
&lt;summary&gt;&lt;b&gt;Install in Kiro&lt;/b&gt;&lt;/summary&gt;

See [Kiro Model Context Protocol Documentation](https://kiro.dev/docs/mcp/configuration/) for details.

1. Navigate `Kiro` &gt; `MCP Servers`
2. Add a new MCP server by clicking the `+ Add` button.
3. Paste the configuration given below:

```json
{
  &quot;mcpServers&quot;: {
    &quot;Context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;],
      &quot;env&quot;: {},
      &quot;disabled&quot;: false,
      &quot;autoApprove&quot;: []
    }
  }
}
```

4. Click `Save` to apply the changes.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Trae&lt;/b&gt;&lt;/summary&gt;

Use the Add manually feature and fill in the JSON configuration information for that MCP server.
For more details, visit the [Trae documentation](https://docs.trae.ai/ide/model-context-protocol?_lang=en).

#### Trae Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

#### Trae Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Using Bun or Deno&lt;/b&gt;&lt;/summary&gt;

Use these alternatives to run the local Context7 MCP server with other runtimes. These examples work for any client that supports launching a local MCP server via command + args.

#### Bun

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;bunx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

#### Deno

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;deno&quot;,
      &quot;args&quot;: [
        &quot;run&quot;,
        &quot;--allow-env=NO_DEPRECATION,TRACE_DEPRECATION&quot;,
        &quot;--allow-net&quot;,
        &quot;npm:@upstash/context7-mcp&quot;
      ]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Using Docker&lt;/b&gt;&lt;/summary&gt;

If you prefer to run the MCP server in a Docker containe

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[DataDog/dd-trace-js]]></title>
            <link>https://github.com/DataDog/dd-trace-js</link>
            <guid>https://github.com/DataDog/dd-trace-js</guid>
            <pubDate>Wed, 29 Oct 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[Datadog APM client for Node.js]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/DataDog/dd-trace-js">DataDog/dd-trace-js</a></h1>
            <p>Datadog APM client for Node.js</p>
            <p>Language: JavaScript</p>
            <p>Stars: 743</p>
            <p>Forks: 351</p>
            <p>Stars today: 0 stars today</p>
            <h2>README</h2><pre># `dd-trace`: Node.js APM Tracer Library

[![npm v5](https://img.shields.io/npm/v/dd-trace/latest?color=blue&amp;label=dd-trace%40v5&amp;logo=npm)](https://www.npmjs.com/package/dd-trace)
[![codecov](https://codecov.io/gh/DataDog/dd-trace-js/branch/master/graph/badge.svg)](https://codecov.io/gh/DataDog/dd-trace-js)

&lt;img align=&quot;right&quot; src=&quot;https://user-images.githubusercontent.com/551402/208212084-1d0c07e2-4135-4c61-b2da-8f2fddbc66ed.png&quot; alt=&quot;Bits the dog  JavaScript&quot; width=&quot;200px&quot;/&gt;

`dd-trace` is an npm package that you can install in your Node.js application to capture APM (Application Performance Monitoring) data. In Datadog terminology this library is called a Tracer. This data is then sent off to a process which collects and aggregates the data, called an Agent. Finally the data is sent off to the Datadog servers where it&#039;s stored and made available for querying in a myriad of ways, such as displaying in a dashboard or triggering alerts.

![Tracer, Agent, Datadog relationship diagram](./docs/relationship.png)


## Documentation

Most of the documentation for `dd-trace` is available on these webpages:

- [Tracing Node.js Applications](https://docs.datadoghq.com/tracing/languages/nodejs/) - most project documentation, including setup instructions
- [Configuring the Node.js Tracing Library](https://docs.datadoghq.com/tracing/trace_collection/library_config/nodejs) - environment variables and config options
- [API Documentation](https://datadog.github.io/dd-trace-js) - method signatures, plugin list, and some usage examples
- [APM Terms and Concepts](https://docs.datadoghq.com/tracing/visualization/) - a glossary of concepts applicable across all languages


## Version Release Lines and Maintenance

| Release Line                                             | Latest Version                                                                                         | Node.js  | [SSI](https://docs.datadoghq.com/tracing/trace_collection/automatic_instrumentation/single-step-apm/?tab=linuxhostorvm) | [K8s Injection](https://docs.datadoghq.com/tracing/trace_collection/library_injection_local/?tab=kubernetes) |Status          |Initial Release | End of Life |
| :---:                                                    | :---:                                                                                                  | :---:    | :---:  | :---:  | :---:           | :---:          | :---:       |
| [`v1`](https://github.com/DataDog/dd-trace-js/tree/v1.x) | ![npm v1](https://img.shields.io/npm/v/dd-trace/legacy-v1?color=white&amp;label=%20&amp;style=flat-square)     | `&gt;= v12` | NO | NO | **EOL** | 2021-07-13     | 2022-02-25  |
| [`v2`](https://github.com/DataDog/dd-trace-js/tree/v2.x) | ![npm v2](https://img.shields.io/npm/v/dd-trace/latest-node12?color=white&amp;label=%20&amp;style=flat-square) | `&gt;= v12` | NO | NO | **EOL** | 2022-01-28     | 2023-08-15  |
| [`v3`](https://github.com/DataDog/dd-trace-js/tree/v3.x) | ![npm v3](https://img.shields.io/npm/v/dd-trace/latest-node14?color=white&amp;label=%20&amp;style=flat-square) | `&gt;= v14` | NO | YES | **EOL** | 2022-08-15     | 2024-05-15  |
| [`v4`](https://github.com/DataDog/dd-trace-js/tree/v4.x) | ![npm v4](https://img.shields.io/npm/v/dd-trace/latest-node16?color=white&amp;label=%20&amp;style=flat-square) | `&gt;= v16` | YES | YES | **EOL**     | 2023-05-12     | 2025-01-11     |
| [`v5`](https://github.com/DataDog/dd-trace-js/tree/v5.x) | ![npm v5](https://img.shields.io/npm/v/dd-trace/latest?color=white&amp;label=%20&amp;style=flat-square)        | `&gt;= v18` | YES | YES | **Current**     | 2024-01-11     | Unknown     |

* EOL = End-of-life
* SSI = Single-Step Install

We currently maintain one release line, namely `v5`.

For any new projects it is recommended to use the `v5` release line:

```sh
$ npm install dd-trace
$ yarn add dd-trace
```

Existing projects that need to use EOL versions of Node.js may continue to use these older release lines.
This is done by specifying the version when installing the package.

```sh
$ npm install dd-trace@4 # or whatever version you need
$ yarn add dd-trace@4 # or whatever version you need
```

Note, however, that the end-of-life release lines are no longer maintained and will not receive updates.

Any backwards-breaking functionality that is introduced into the library will result in an increase of the major version of the library and therefore a new release line.
Such releases are kept to a minimum to reduce the pain of upgrading the library.

When a new release line is introduced the previous release line then enters maintenance mode where it will receive updates for the next year.
Once that year is up the release line enters End of Life and will not receive new updates.
The library also follows the Node.js LTS lifecycle wherein new release lines drop compatibility with Node.js versions that reach end-of-life (with the maintenance release line still receiving updates for a year).

For more information about library versioning and compatibility, see the [Node.js Compatibility Requirements](https://docs.datadoghq.com/tracing/trace_collection/compatibility/nodejs/#releases) page.

Changes associated with each individual release are documented on the [GitHub Releases](https://github.com/DataDog/dd-trace-js/releases) screen.


## Development and Contribution

Please read the [CONTRIBUTING.md](https://github.com/DataDog/dd-trace-js/blob/master/CONTRIBUTING.md) document before contributing to this open source project.


## ECMAScript Modules (ESM) Support

ESM support requires an _additional_ command line argument when starting the Node.js process.
For more information, see the [section on ESM support](https://docs.datadoghq.com/tracing/trace_collection/automatic_instrumentation/dd_libraries/nodejs/#esm-applications-only-import-the-loader) in the Node.js tracer documentation.


## Serverless / Lambda

Note that there is a separate Lambda project, [datadog-lambda-js](https://github.com/DataDog/datadog-lambda-js), that is responsible for enabling metrics and distributed tracing when your application runs on Lambda.
That project does depend on the `dd-trace` package but also adds a lot of Lambda-related niceties.
If you find any issues specific to Lambda integrations then the issues may get solved quicker if they&#039;re added to that repository.
That said, even if your application runs on Lambda, any core instrumentation issues not related to Lambda itself may be better served by opening an issue in this repository.
Regardless of where you open the issue, someone at Datadog will try to help.


## Bundling

If you would like to trace your bundled application then please read this page on [bundling and dd-trace](https://docs.datadoghq.com/tracing/trace_collection/automatic_instrumentation/dd_libraries/nodejs/#bundling). It includes information on how to use our ESBuild plugin and includes caveats for other bundlers.


## Security Vulnerabilities

Please refer to the [SECURITY.md](https://github.com/DataDog/dd-trace-js/blob/master/SECURITY.md) document if you have found a security issue.


## Datadog With OpenTelemetery

Please refer to the [Node.js Custom Instrumentation using OpenTelemetry API](https://docs.datadoghq.com/tracing/trace_collection/custom_instrumentation/nodejs/otel/) document. It includes information on how to use the OpenTelemetry API with dd-trace-js.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[sudheerj/javascript-interview-questions]]></title>
            <link>https://github.com/sudheerj/javascript-interview-questions</link>
            <guid>https://github.com/sudheerj/javascript-interview-questions</guid>
            <pubDate>Wed, 29 Oct 2025 00:04:53 GMT</pubDate>
            <description><![CDATA[List of 1000 JavaScript Interview Questions]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/sudheerj/javascript-interview-questions">sudheerj/javascript-interview-questions</a></h1>
            <p>List of 1000 JavaScript Interview Questions</p>
            <p>Language: JavaScript</p>
            <p>Stars: 26,542</p>
            <p>Forks: 7,461</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre># JavaScript Interview Questions &amp; Answers

&gt; Click :star:if you like the project and follow [@SudheerJonna](https://twitter.com/SudheerJonna) for more updates. Coding questions available [here](#coding-exercise). Check [DataStructures and Algorithms](https://github.com/sudheerj/datastructures-algorithms) for DSA related questions and [ECMAScript](https://github.com/sudheerj/ECMAScript-features) for all ES features.).

---

&lt;div&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.greatfrontend.com/questions/formats/javascript-functions?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=sudheerj-js&amp;fpr=sudheerj&amp;gnrs=sudheerj&quot;&gt;
    &lt;img src=&quot;./images/collab/greatfrontend-js.gif&quot; alt=&quot;GreatFrontEnd JavaScript Interview Questions&quot; width=&quot;100%&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;

&gt; Practice 280+ JavaScript coding interview questions in-browser. Built by ex-FAANG interviewers. No AI-generated fluff. No fake reviews. [Try GreatFrontEnd →](https://www.greatfrontend.com/questions/formats/javascript-functions?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=sudheerj-js&amp;fpr=sudheerj&amp;gnrs=sudheerj) 💡

---

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=https://zerotomastery.io/?utm_source=github&amp;utm_medium=sponsor&amp;utm_campaign=javascript-interview-questions&gt;
    &lt;img src=https://process.fs.teachablecdn.com/ADNupMnWyR7kCWRvm76Laz/resize=height:70/https://www.filepicker.io/api/file/AKYtjj5SSGyJuyZrkAB2 alt=&quot;ZTM Logo&quot; width=&quot;100&quot; height=&quot;50&quot;&gt;
  &lt;/a&gt;
  &lt;p align=&quot;center&quot;&gt;
    &lt;ol&gt;
    &lt;li&gt;Take this &lt;a href=https://links.zerotomastery.io/jsp_sudheer&gt;JavaScript Projects&lt;/a&gt; course to go from a JS beginner to confidently building your own projects&lt;/li&gt;
    &lt;li&gt;Take this &lt;a href=https://links.zerotomastery.io/mci_sudheer2&gt;coding interview bootcamp&lt;/a&gt; if you’re serious about getting hired and don’t have a CS degree&lt;/li&gt;
    &lt;li&gt;Take this &lt;a href=https://links.zerotomastery.io/ajs_sudheer&gt;Advanced JavaScript Course&lt;/a&gt; to learn advanced JS concepts and become a top JS developer&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/p&gt;
&lt;/p&gt;

---

### Table of Contents

&lt;!-- TOC_START --&gt;
| No. | Questions |
| --- | --------- |
| 1 | [What are the possible ways to create objects in JavaScript](#what-are-the-possible-ways-to-create-objects-in-javascript) |
| 2 | [What is a prototype chain](#what-is-a-prototype-chain) |
| 3 | [What is the Difference Between `call`, `apply`, and `bind`](#what-is-the-difference-between-call-apply-and-bind) |
| 4 | [What is JSON and its common operations](#what-is-json-and-its-common-operations) |
| 5 | [What is the purpose of the array slice method](#what-is-the-purpose-of-the-array-slice-method) |
| 6 | [What is the purpose of the array splice method](#what-is-the-purpose-of-the-array-splice-method) |
| 7 | [What is the difference between slice and splice](#what-is-the-difference-between-slice-and-splice) |
| 8 | [How do you compare Object and Map](#how-do-you-compare-object-and-map) |
| 9 | [What is the difference between == and === operators](#what-is-the-difference-between--and--operators) |
| 10 | [What are lambda expressions or arrow functions](#what-are-lambda-expressions-or-arrow-functions) |
| 11 | [What is a first class function](#what-is-a-first-class-function) |
| 12 | [What is a first order function](#what-is-a-first-order-function) |
| 13 | [What is a higher order function](#what-is-a-higher-order-function) |
| 14 | [What is a unary function](#what-is-a-unary-function) |
| 15 | [What is the currying function](#what-is-the-currying-function) |
| 16 | [What is a pure function](#what-is-a-pure-function) |
| 17 | [What are the benefits of pure functions](#what-are-the-benefits-of-pure-functions) |
| 18 | [What is the purpose of the let keyword](#what-is-the-purpose-of-the-let-keyword) |
| 19 | [What is the difference between let and var](#what-is-the-difference-between-let-and-var) |
| 20 | [What is the reason to choose the name let as a keyword](#what-is-the-reason-to-choose-the-name-let-as-a-keyword) |
| 21 | [How do you redeclare variables in a switch block without an error](#how-do-you-redeclare-variables-in-a-switch-block-without-an-error) |
| 22 | [What is the Temporal Dead Zone](#what-is-the-temporal-dead-zone) |
| 23 | [What is an IIFE (Immediately Invoked Function Expression)](#what-is-an-iife-immediately-invoked-function-expression) |
| 24 | [How do you decode or encode a URL in JavaScript?](#how-do-you-decode-or-encode-a-url-in-javascript) |
| 25 | [What is memoization](#what-is-memoization) |
| 26 | [What is Hoisting](#what-is-hoisting) |
| 27 | [What are classes in ES6](#what-are-classes-in-es6) |
| 28 | [What are closures](#what-are-closures) |
| 29 | [What are modules](#what-are-modules) |
| 30 | [Why do you need modules](#why-do-you-need-modules) |
| 31 | [What is scope in javascript](#what-is-scope-in-javascript) |
| 32 | [What is a service worker](#what-is-a-service-worker) |
| 33 | [How do you manipulate DOM using a service worker](#how-do-you-manipulate-dom-using-a-service-worker) |
| 34 | [How do you reuse information across service worker restarts](#how-do-you-reuse-information-across-service-worker-restarts) |
| 35 | [What is IndexedDB](#what-is-indexeddb) |
| 36 | [What is web storage](#what-is-web-storage) |
| 37 | [What is a post message](#what-is-a-post-message) |
| 38 | [What is a Cookie](#what-is-a-cookie) |
| 39 | [Why do you need a Cookie](#why-do-you-need-a-cookie) |
| 40 | [What are the options in a cookie](#what-are-the-options-in-a-cookie) |
| 41 | [How do you delete a cookie](#how-do-you-delete-a-cookie) |
| 42 | [What are the differences between cookie, local storage and session storage](#what-are-the-differences-between-cookie-local-storage-and-session-storage) |
| 43 | [What is the main difference between localStorage and sessionStorage](#what-is-the-main-difference-between-localstorage-and-sessionstorage) |
| 44 | [How do you access web storage](#how-do-you-access-web-storage) |
| 45 | [What are the methods available on session storage](#what-are-the-methods-available-on-session-storage) |
| 46 | [What is a storage event and its event handler](#what-is-a-storage-event-and-its-event-handler) |
| 47 | [Why do you need web storage](#why-do-you-need-web-storage) |
| 48 | [How do you check web storage browser support](#how-do-you-check-web-storage-browser-support) |
| 49 | [How do you check web workers browser support](#how-do-you-check-web-workers-browser-support) |
| 50 | [Give an example of a web worker](#give-an-example-of-a-web-worker) |
| 51 | [What are the restrictions of web workers on DOM](#what-are-the-restrictions-of-web-workers-on-dom) |
| 52 | [What is a promise](#what-is-a-promise) |
| 53 | [Why do you need a promise](#why-do-you-need-a-promise) |
| 54 | [Explain the three states of promise](#explain-the-three-states-of-promise) |
| 55 | [What is a callback function](#what-is-a-callback-function) |
| 56 | [Why do we need callbacks](#why-do-we-need-callbacks) |
| 57 | [What is a callback hell](#what-is-a-callback-hell) |
| 58 | [What are server-sent events](#what-are-server-sent-events) |
| 59 | [How do you receive server-sent event notifications](#how-do-you-receive-server-sent-event-notifications) |
| 60 | [How do you check browser support for server-sent events](#how-do-you-check-browser-support-for-server-sent-events) |
| 61 | [What are the events available for server sent events](#what-are-the-events-available-for-server-sent-events) |
| 62 | [What are the main rules of promise](#what-are-the-main-rules-of-promise) |
| 63 | [What is callback in callback](#what-is-callback-in-callback) |
| 64 | [What is promise chaining](#what-is-promise-chaining) |
| 65 | [What is promise.all](#what-is-promiseall) |
| 66 | [What is the purpose of the race method in promise](#what-is-the-purpose-of-the-race-method-in-promise) |
| 67 | [What is a strict mode in javascript](#what-is-a-strict-mode-in-javascript) |
| 68 | [Why do you need strict mode](#why-do-you-need-strict-mode) |
| 69 | [How do you declare strict mode](#how-do-you-declare-strict-mode) |
| 70 | [What is the purpose of double exclamation](#what-is-the-purpose-of-double-exclamation) |
| 71 | [What is the purpose of the delete operator](#what-is-the-purpose-of-the-delete-operator) |
| 72 | [What is typeof operator](#what-is-typeof-operator) |
| 73 | [What is undefined property](#what-is-undefined-property) |
| 74 | [What is null value](#what-is-null-value) |
| 75 | [What is the difference between null and undefined](#what-is-the-difference-between-null-and-undefined) |
| 76 | [What is eval](#what-is-eval) |
| 77 | [What is the difference between window and document](#what-is-the-difference-between-window-and-document) |
| 78 | [How do you access history in javascript](#how-do-you-access-history-in-javascript) |
| 79 | [How do you detect caps lock key turned on or not](#how-do-you-detect-caps-lock-key-turned-on-or-not) |
| 80 | [What is isNaN](#what-is-isnan) |
| 81 | [What are the differences between undeclared and undefined variables](#what-are-the-differences-between-undeclared-and-undefined-variables) |
| 82 | [What are global variables](#what-are-global-variables) |
| 83 | [What are the problems with global variables](#what-are-the-problems-with-global-variables) |
| 84 | [What is NaN property](#what-is-nan-property) |
| 85 | [What is the purpose of isFinite function](#what-is-the-purpose-of-isfinite-function) |
| 86 | [What is an event flow](#what-is-an-event-flow) |
| 87 | [What is event capturing](#what-is-event-capturing) |
| 88 | [What is event bubbling](#what-is-event-bubbling) |
| 89 | [How do you submit a form using JavaScript](#how-do-you-submit-a-form-using-javascript) |
| 90 | [How do you find operating system details](#how-do-you-find-operating-system-details) |
| 91 | [What is the difference between document load and DOMContentLoaded events](#what-is-the-difference-between-document-load-and-domcontentloaded-events) |
| 92 | [What is the difference between native, host and user objects](#what-is-the-difference-between-native-host-and-user-objects) |
| 93 | [What are the tools or techniques used for debugging JavaScript code](#what-are-the-tools-or-techniques-used-for-debugging-javascript-code) |
| 94 | [What are the pros and cons of promises over callbacks](#what-are-the-pros-and-cons-of-promises-over-callbacks) |
| 95 | [What is the difference between an attribute and a property](#what-is-the-difference-between-an-attribute-and-a-property) |
| 96 | [What is same-origin policy](#what-is-same-origin-policy) |
| 97 | [What is the purpose of void 0](#what-is-the-purpose-of-void-0) |
| 98 | [Is JavaScript a compiled or interpreted language](#is-javascript-a-compiled-or-interpreted-language) |
| 99 | [Is JavaScript a case-sensitive language](#is-javascript-a-case-sensitive-language) |
| 100 | [Is there any relation between Java and JavaScript](#is-there-any-relation-between-java-and-javascript) |
| 101 | [What are events](#what-are-events) |
| 102 | [Who created javascript](#who-created-javascript) |
| 103 | [What is the use of preventDefault method](#what-is-the-use-of-preventdefault-method) |
| 104 | [What is the use of stopPropagation method](#what-is-the-use-of-stoppropagation-method) |
| 105 | [What are the steps involved in return false usage](#what-are-the-steps-involved-in-return-false-usage) |
| 106 | [What is BOM](#what-is-bom) |
| 107 | [What is the use of setTimeout](#what-is-the-use-of-settimeout) |
| 108 | [What is the use of setInterval](#what-is-the-use-of-setinterval) |
| 109 | [Why is JavaScript treated as Single threaded](#why-is-javascript-treated-as-single-threaded) |
| 110 | [What is an event delegation](#what-is-an-event-delegation) |
| 111 | [What is ECMAScript](#what-is-ecmascript) |
| 112 | [What is JSON](#what-is-json) |
| 113 | [What are the syntax rules of JSON](#what-are-the-syntax-rules-of-json) |
| 114 | [What is the purpose JSON stringify](#what-is-the-purpose-json-stringify) |
| 115 | [How do you parse JSON string](#how-do-you-parse-json-string) |
| 116 | [Why do you need JSON](#why-do-you-need-json) |
| 117 | [What are PWAs](#what-are-pwas) |
| 118 | [What is the purpose of clearTimeout method](#what-is-the-purpose-of-cleartimeout-method) |
| 119 | [What is the purpose of clearInterval method](#what-is-the-purpose-of-clearinterval-method) |
| 120 | [How do you redirect new page in javascript](#how-do-you-redirect-new-page-in-javascript) |
| 121 | [How do you check whether a string contains a substring](#how-do-you-check-whether-a-string-contains-a-substring) |
| 122 | [How do you validate an email in javascript](#how-do-you-validate-an-email-in-javascript) |
| 123 | [How do you get the current url with javascript](#how-do-you-get-the-current-url-with-javascript) |
| 124 | [What are the various url properties of location object](#what-are-the-various-url-properties-of-location-object) |
| 125 | [How do get query string values in javascript](#how-do-get-query-string-values-in-javascript) |
| 126 | [How do you check if a key exists in an object](#how-do-you-check-if-a-key-exists-in-an-object) |
| 127 | [How do you loop through or enumerate javascript object](#how-do-you-loop-through-or-enumerate-javascript-object) |
| 128 | [How do you test for an empty object](#how-do-you-test-for-an-empty-object) |
| 129 | [What is an arguments object](#what-is-an-arguments-object) |
| 130 | [How do you make first letter of the string in an uppercase](#how-do-you-make-first-letter-of-the-string-in-an-uppercase) |
| 131 | [What are the pros and cons of for loops](#what-are-the-pros-and-cons-of-for-loops) |
| 132 | [How do you display the current date in javascript](#how-do-you-display-the-current-date-in-javascript) |
| 133 | [How do you compare two date objects](#how-do-you-compare-two-date-objects) |
| 134 | [How do you check if a string starts with another string](#how-do-you-check-if-a-string-starts-with-another-string) |
| 135 | [How do you trim a string in javascript](#how-do-you-trim-a-string-in-javascript) |
| 136 | [How do you add a key value pair in javascript](#how-do-you-add-a-key-value-pair-in-javascript) |
| 137 | [Is the !-- notation represents a special operator](#is-the----notation-represents-a-special-operator) |
| 138 | [How do you assign default values to variables](#how-do-you-assign-default-values-to-variables) |
| 139 | [How do you define multiline strings](#how-do-you-define-multiline-strings) |
| 140 | [What is an app shell model](#what-is-an-app-shell-model) |
| 141 | [Can we define properties for functions](#can-we-define-properties-for-functions) |
| 142 | [What is the way to find the number of parameters expected by a function](#what-is-the-way-to-find-the-number-of-parameters-expected-by-a-function) |
| 143 | [What is a polyfill](#what-is-a-polyfill) |
| 144 | [What are break and continue statements](#what-are-break-and-continue-statements) |
| 145 | [What are js labels](#what-are-js-labels) |
| 146 | [What are the benefits of keeping declarations at the top](#what-are-the-benefits-of-keeping-declarations-at-the-top) |
| 147 | [What are the benefits of initializing variables](#what-are-the-benefits-of-initializing-variables) |
| 148 | [What are the recommendations to create new object](#what-are-the-recommendations-to-create-new-object) |
| 149 | [How do you define JSON arrays](#how-do-you-define-json-arrays) |
| 150 | [How do you generate random integers](#how-do-you-generate-random-integers) |
| 151 | [Can you write a random integers function to print integers within a range](#can-you-write-a-random-integers-function-to-print-integers-within-a-range) |
| 152 | [What is tree shaking](#what-is-tree-shaking) |
| 153 | [What is the need of tree shaking](#what-is-the-need-of-tree-shaking) |
| 154 | [Is it recommended to use eval](#is-it-recommended-to-use-eval) |
| 155 | [What is a Regular Expression](#what-is-a-regular-expression) |
| 156 | [What are the string methods that accept Regular expression](#what-are-the-string-methods-that-accept-regular-expression) |
| 157 | [What are modifiers in regular expression](#what-are-modifiers-in-regular-expression) |
| 158 | [What are regular expression patterns](#what-are-regular-expression-patterns) |
| 159 | [What is a RegExp object](#what-is-a-regexp-object) |
| 160 | [How do you search a string for a pattern](#how-do-you-search-a-string-for-a-pattern) |
| 161 | [What is the purpose of exec method](#what-is-the-purpose-of-exec-method) |
| 162 | [How do you change the style of a HTML element](#how-do-you-change-the-style-of-a-html-element) |
| 163 | [What would be the result of 1+2+&#039;3&#039;](#what-would-be-the-result-of-123) |
| 164 | [What is a debugger statement](#what-is-a-debugger-statement) |
| 165 | [What is the purpose of breakpoints in debugging](#what-is-the-purpose-of-breakpoints-in-debugging) |
| 166 | [Can I use reserved words as identifiers](#can-i-use-reserved-words-as-identifiers) |
| 167 | [How do you detect a mobile browser](#how-do-you-detect-a-mobile-browser) |
| 168 | [How do you detect a mobile browser without regexp](#how-do-you-detect-a-mobile-browser-without-regexp) |
| 169 | [How do you get the image width and height using JS](#how-do-you-get-the-image-width-and-height-using-js) |
| 170 | [How do you make synchronous HTTP request](#how-do-you-make-synchronous-http-request) |
| 171 | [How do you make asynchronous HTTP request](#how-do-you-make-asynchronous-http-request) |
| 172 | [How do you convert date to another timezone in javascript](#how-do-you-convert-date-to-another-timezone-in-javascript) |
| 173 | [What are the properties used to get size of window](#what-are-the-properties-used-to-get-size-of-window) |
| 174 | [What is a conditional operator in javascript](#what-is-a-conditional-operator-in-javascript) |
| 175 | [Can you apply chaining on conditional operator](#can-you-apply-chaining-on-conditional-operator) |
| 176 | [What are the ways to execute javascript after a page load](#what-are-the-ways-to-execute-javascript-after-a-page-load) |
| 177 | [What is the difference between proto and prototype](#what-is-the-difference-between-proto-and-prototype) |
| 178 | [Can you give an example of when you really need a semicolon](#can-you-give-an-example-of-when-you-really-need-a-semicolon) |
| 179 | [What is the freeze method](#what-is-the-freeze-method) |
| 180 | [What is the purpose of the freeze method](#what-is-the-purpose-of-the-freeze-method) |
| 181 | [Why do I need to use the freeze method](#why-do-i-need-to-use-the-freeze-method) |
| 182 | [How do you detect a browser language preference](#how-do-you-detect-a-browser-language-preference) |
| 183 | [How to convert a string to title case with javascript](#how-to-convert-a-string-to-title-case-with-javascript) |
| 184 | [How do you detect if javascript is disabled on the page](#how-do-you-detect-if-javascript-is-disabled-on-the-page) |
| 185 | [What are various operators supported by javascript](#what-are-various-operators-supported-by-javascript) |
| 186 | [What is a rest parameter](#what-is-a-rest-parameter) |
| 187 | [What happens if you do not use rest parameter as a last argument](#what-happens-if-you-do-not-use-rest-parameter-as-a-last-argument) |
| 188 | [What are the bitwise operators available in javascript](#what-are-the-bitwise-operators-available-in-javascript) |
| 189 | [What is a spread operator](#what-is-a-spread-operator) |
| 190 | [How do you determine whether object is frozen or not](#how-do-you-determine-whether-object-is-frozen-or-not) |
| 191 | [How do you determine two values same or not using object](#how-do-you-determine-two-values-same-or-not-using-object) |
| 192 | [What is the purpose of using object is method](#what-is-the-purpose-of-using-object-is-method) |
| 193 | [How do you copy properties from one object to other](#how-do-you-copy-properties-from-one-object-to-other) |
| 194 | [What are the applications of the assign method](#what-are-the-applications-of-the-assign-method) |
| 195 | [What is a proxy object](#what-is-a-proxy-object) |
| 196 | [What is the purpose of the

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[github/awesome-copilot]]></title>
            <link>https://github.com/github/awesome-copilot</link>
            <guid>https://github.com/github/awesome-copilot</guid>
            <pubDate>Wed, 29 Oct 2025 00:04:52 GMT</pubDate>
            <description><![CDATA[Community-contributed instructions, prompts, and configurations to help you make the most of GitHub Copilot.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/github/awesome-copilot">github/awesome-copilot</a></h1>
            <p>Community-contributed instructions, prompts, and configurations to help you make the most of GitHub Copilot.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 10,619</p>
            <p>Forks: 1,233</p>
            <p>Stars today: 58 stars today</p>
            <h2>README</h2><pre># 🤖 Awesome GitHub Copilot Customizations

[![Powered by Awesome Copilot](https://img.shields.io/badge/Powered_by-Awesome_Copilot-blue?logo=githubcopilot)](https://aka.ms/awesome-github-copilot)
&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt;
[![All Contributors](https://img.shields.io/badge/all_contributors-89-orange.svg?style=flat-square)](#contributors-)
&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt;

A curated collection of prompts, instructions, and chat modes to supercharge your GitHub Copilot experience across different domains, languages, and use cases.

## 🚀 What is Awesome GitHub Copilot?

This repository provides a comprehensive toolkit for enhancing GitHub Copilot with specialized:

- **👉 [Awesome Agents](docs/README.agents.md)** - Specialized GitHub Copilot agents that integrate with MCP servers to provide enhanced capabilities for specific workflows and tools
- **👉 [Awesome Prompts](docs/README.prompts.md)** - Focused, task-specific prompts for generating code, documentation, and solving specific problems
- **👉 [Awesome Instructions](docs/README.instructions.md)** - Comprehensive coding standards and best practices that apply to specific file patterns or entire projects
- **👉 [Awesome Chat Modes](docs/README.chatmodes.md)** - Specialized AI personas and conversation modes for different roles and contexts
- **👉 [Awesome Collections](docs/README.collections.md)** - Curated collections of related prompts, instructions, and chat modes organized around specific themes and workflows

## 🌟 Featured Collections

Discover our curated collections of prompts, instructions, and chat modes organized around specific themes and workflows.

| Name | Description | Items | Tags |
| ---- | ----------- | ----- | ---- |
| [Partners](collections/partners.md) | Custom agents that have been created by GitHub partners | 11 items | devops, security, database, cloud, infrastructure, observability, feature-flags, cicd, migration, performance |


## MCP Server

To make it easy to add these customizations to your editor, we have created a [MCP Server](https://developer.microsoft.com/blog/announcing-awesome-copilot-mcp-server) that provides a prompt for searching and installing prompts, instructions, and chat modes directly from this repository. You&#039;ll need to have Docker installed and running to run the server.

[![Install in VS Code](https://img.shields.io/badge/VS_Code-Install-0098FF?logo=visualstudiocode&amp;logoColor=white)](https://aka.ms/awesome-copilot/mcp/vscode) [![Install in VS Code Insiders](https://img.shields.io/badge/VS_Code_Insiders-Install-24bfa5?logo=visualstudiocode&amp;logoColor=white)](https://aka.ms/awesome-copilot/mcp/vscode-insiders) [![Install in Visual Studio](https://img.shields.io/badge/Visual_Studio-Install-C16FDE?logo=visualstudio&amp;logoColor=white)](https://aka.ms/awesome-copilot/mcp/vs)

&lt;details&gt;
&lt;summary&gt;Show MCP Server JSON configuration&lt;/summary&gt;

```json
{
  &quot;servers&quot;: {
    &quot;awesome-copilot&quot;: {
      &quot;type&quot;: &quot;stdio&quot;,
      &quot;command&quot;: &quot;docker&quot;,
      &quot;args&quot;: [
        &quot;run&quot;,
        &quot;-i&quot;,
        &quot;--rm&quot;,
        &quot;ghcr.io/microsoft/mcp-dotnet-samples/awesome-copilot:latest&quot;
      ]
    }
  }
}
```

&lt;/details&gt;

## 🔧 How to Use

### 🤖 Custom Agents

Custom agents can be used in Copilot coding agent (CCA), VS Code, and Copilot CLI (coming soon). For CCA, when assigning an issue to Copilot, select the custom agent from the provided list. In VS Code, you can activate the custom agent in the agents session, alongside built-in agents like Plan and Agent.

### 🎯 Prompts

Use the `/` command in GitHub Copilot Chat to access prompts:

```plaintext
/awesome-copilot create-readme
```

### 📋 Instructions

Instructions automatically apply to files based on their patterns and provide contextual guidance for coding standards, frameworks, and best practices.

### 💭 Chat Modes

Activate chat modes to get specialized assistance from AI personas tailored for specific roles like architects, DBAs, or security experts.

## 🤝 Contributing

We welcome contributions! Please see our [Contributing Guidelines](CONTRIBUTING.md) for details on how to:

- Add new prompts, instructions, or chat modes
- Improve existing content
- Report issues or suggest enhancements

### Quick Contribution Guide

1. Follow our file naming conventions and frontmatter requirements
2. Test your contributions thoroughly
3. Update the appropriate README tables
4. Submit a pull request with a clear description

## 📖 Repository Structure

```plaintext
├── prompts/          # Task-specific prompts (.prompt.md)
├── instructions/     # Coding standards and best practices (.instructions.md)
├── chatmodes/        # AI personas and specialized modes (.chatmode.md)
├── collections/      # Curated collections of related items (.collection.yml)
└── scripts/          # Utility scripts for maintenance
```

## 🌟 Getting Started

1. **Browse the Collections**: Check out our comprehensive lists of [prompts](docs/README.prompts.md), [instructions](docs/README.instructions.md), [chat modes](docs/README.chatmodes.md), and [collections](docs/README.collections.md).
2. **Add to your editor**: Click the &quot;Install&quot; button to install to VS Code, or copy the file contents for other editors.
3. **Start Using**: Copy prompts to use with `/` commands, let instructions enhance your coding experience, or activate chat modes for specialized assistance.

## 📄 License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## 🛡️ Security &amp; Support

- **Security Issues**: Please see our [Security Policy](SECURITY.md)
- **Support**: Check our [Support Guide](SUPPORT.md) for getting help
- **Code of Conduct**: We follow the [Contributor Covenant](CODE_OF_CONDUCT.md)

## 🎯 Why Use Awesome GitHub Copilot?

- **Productivity**: Pre-built prompts and instructions save time and provide consistent results
- **Best Practices**: Benefit from community-curated coding standards and patterns
- **Specialized Assistance**: Access expert-level guidance through specialized chat modes
- **Continuous Learning**: Stay updated with the latest patterns and practices across technologies

---

**Ready to supercharge your coding experience?** Start exploring our [prompts](docs/README.prompts.md), [instructions](docs/README.instructions.md), and [chat modes](docs/README.chatmodes.md)!

## Contributors ✨

Thanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):

&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt;
&lt;!-- prettier-ignore-start --&gt;
&lt;!-- markdownlint-disable --&gt;
&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.aaron-powell.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/434140?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Aaron Powell&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Aaron Powell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=aaronpowell&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;#maintenance-aaronpowell&quot; title=&quot;Maintenance&quot;&gt;🚧&lt;/a&gt; &lt;a href=&quot;#projectManagement-aaronpowell&quot; title=&quot;Project Management&quot;&gt;📆&lt;/a&gt; &lt;a href=&quot;#promotion-aaronpowell&quot; title=&quot;Promotion&quot;&gt;📣&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://mubaidr.js.org/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2222702?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Muhammad Ubaid Raza&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Muhammad Ubaid Raza&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=mubaidr&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://digitarald.de/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8599?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Harald Kirschner&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Harald Kirschner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=digitarald&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/mbianchidev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/37507190?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Matteo Bianchi&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Matteo Bianchi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=mbianchidev&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/AungMyoKyaw&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9404824?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Aung Myo Kyaw&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Aung Myo Kyaw&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=AungMyoKyaw&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://danielscottraynsford.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7589164?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Daniel Scott-Raynsford&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Daniel Scott-Raynsford&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=PlagueHO&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/burkeholland&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/686963?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Burke Holland&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Burke Holland&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=burkeholland&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://calva.io/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/30010?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Peter Strömberg&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Peter Strömberg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=PEZ&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.devprodlogs.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/51440732?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Daniel Meppiel&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Daniel Meppiel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=danielmeppiel&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://montemagno.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1676321?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;James Montemagno&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;James Montemagno&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=jamesmontemagno&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/VamshiVerma&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/21999324?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Vamshi Verma&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Vamshi Verma&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=VamshiVerma&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/sinedied&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/593151?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Yohan Lasorsa&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Yohan Lasorsa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=sinedied&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/OrenMe&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5461862?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Oren Me&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Oren Me&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=OrenMe&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/mjrousos&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10077254?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Mike Rousos&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mike Rousos&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=mjrousos&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/guiopen&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/94094527?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Guilherme do Amaral Alves &quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Guilherme do Amaral Alves &lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=guiopen&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.buymeacoffee.com/troystaylor&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/44444967?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Troy Simeon Taylor&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Troy Simeon Taylor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=troystaylor&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/ambilykk/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10282550?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Ambily&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ambily&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=ambilykk&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://tgrall.github.io/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/541250?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Tugdual Grall&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tugdual Grall&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=tgrall&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/TianqiZhang&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5326582?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Tianqi Zhang&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tianqi Zhang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=TianqiZhang&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/shubham070&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5480589?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Shubham Gaikwad&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Shubham Gaikwad&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=shubham070&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/sdolgin&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/576449?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Saul Dolgin&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Saul Dolgin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=sdolgin&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/nullchimp&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/58362593?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;NULLchimp&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;NULLchimp&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=nullchimp&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/MattVevang&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/20714898?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Matt Vevang&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Matt Vevang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=MattVevang&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://devkimchi.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1538528?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Justin Yoo&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Justin Yoo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=justinyoo&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://hachyderm.io/@0gis0&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/175379?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Gisela Torres&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Gisela Torres&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=0GiS0&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://debbie.codes/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13063165?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Debbie O&#039;Brien&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Debbie O&#039;Brien&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=debs-obrien&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/agreaves-ms&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/111466195?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Allen Greaves&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Allen Greaves&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=agreaves-ms&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/AmeliaRose802&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/26167931?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Amelia Payne&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Amelia Payne&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=AmeliaRose802&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/SebastienDegodez&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2349146?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Sebastien DEGODEZ&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Sebastien DEGODEZ&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=SebastienDegodez&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://graef.io/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/19261257?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Sebastian Gräf&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Sebastian Gräf&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=segraef&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://9ssi7.dev/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/76786120?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Salih İbrahimbaş&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Salih İbrahimbaş&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=9ssi7&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/inquinity&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/406234?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Robert Altman&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Robert Altman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=inquinity&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/pertrai1&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/442374?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Rob Simpson&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rob Simpson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=pertrai1&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://ricksm.it/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7207783?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Rick Smit&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rick Smit&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=ricksmit3000&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://dotneteers.net/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/28162552?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Peter Smulovics&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Peter Smulovics&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=psmulovics&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/pelikhan&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4175913?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Peli de Halleux&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Peli de Halleux&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=pelikhan&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.paulomorgado.net/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/470455?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Paulo Morgado&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Paulo Morgado&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=paulomorgado&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://nickyt.co/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/833231?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Nick Taylor&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Nick Taylor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[sohzm/cheating-daddy]]></title>
            <link>https://github.com/sohzm/cheating-daddy</link>
            <guid>https://github.com/sohzm/cheating-daddy</guid>
            <pubDate>Wed, 29 Oct 2025 00:04:51 GMT</pubDate>
            <description><![CDATA[a free and opensource app that lets you gain an unfair advantage]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/sohzm/cheating-daddy">sohzm/cheating-daddy</a></h1>
            <p>a free and opensource app that lets you gain an unfair advantage</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,578</p>
            <p>Forks: 717</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre>&lt;img width=&quot;1299&quot; height=&quot;424&quot; alt=&quot;cd (1)&quot; src=&quot;https://github.com/user-attachments/assets/b25fff4d-043d-4f38-9985-f832ae0d0f6e&quot; /&gt;

## Recall.ai - API for desktop recording

If you’re looking for a hosted desktop recording API, consider checking out [Recall.ai](https://www.recall.ai/product/desktop-recording-sdk/?utm_source=github&amp;utm_medium=sponsorship&amp;utm_campaign=sohzm-cheating-daddy), an API that records Zoom, Google Meet, Microsoft Teams, in-person meetings, and more.

This project is sponsored by Recall.ai.

---

&gt; [!NOTE]  
&gt; Use latest MacOS and Windows version, older versions have limited support

&gt; [!NOTE]  
&gt; During testing it wont answer if you ask something, you need to simulate interviewer asking question, which it will answer

A real-time AI assistant that provides contextual help during video calls, interviews, presentations, and meetings using screen capture and audio analysis.

## Features

- **Live AI Assistance**: Real-time help powered by Google Gemini 2.0 Flash Live
- **Screen &amp; Audio Capture**: Analyzes what you see and hear for contextual responses
- **Multiple Profiles**: Interview, Sales Call, Business Meeting, Presentation, Negotiation
- **Transparent Overlay**: Always-on-top window that can be positioned anywhere
- **Click-through Mode**: Make window transparent to clicks when needed
- **Cross-platform**: Works on macOS, Windows, and Linux (kinda, dont use, just for testing rn)

## Setup

1. **Get a Gemini API Key**: Visit [Google AI Studio](https://aistudio.google.com/apikey)
2. **Install Dependencies**: `npm install`
3. **Run the App**: `npm start`

## Usage

1. Enter your Gemini API key in the main window
2. Choose your profile and language in settings
3. Click &quot;Start Session&quot; to begin
4. Position the window using keyboard shortcuts
5. The AI will provide real-time assistance based on your screen and what interview asks

## Keyboard Shortcuts

- **Window Movement**: `Ctrl/Cmd + Arrow Keys` - Move window
- **Click-through**: `Ctrl/Cmd + M` - Toggle mouse events
- **Close/Back**: `Ctrl/Cmd + \` - Close window or go back
- **Send Message**: `Enter` - Send text to AI

## Audio Capture

- **macOS**: [SystemAudioDump](https://github.com/Mohammed-Yasin-Mulla/Sound) for system audio
- **Windows**: Loopback audio capture
- **Linux**: Microphone input

## Requirements

- Electron-compatible OS (macOS, Windows, Linux)
- Gemini API key
- Screen recording permissions
- Microphone/audio permissions
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[axios/axios]]></title>
            <link>https://github.com/axios/axios</link>
            <guid>https://github.com/axios/axios</guid>
            <pubDate>Wed, 29 Oct 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[Promise based HTTP client for the browser and node.js]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/axios/axios">axios/axios</a></h1>
            <p>Promise based HTTP client for the browser and node.js</p>
            <p>Language: JavaScript</p>
            <p>Stars: 108,036</p>
            <p>Forks: 11,372</p>
            <p>Stars today: 22 stars today</p>
            <h2>README</h2><pre># axios

[![npm version](https://img.shields.io/npm/v/axios.svg?style=flat-square)](https://www.npmjs.org/package/axios)
[![CDNJS](https://img.shields.io/cdnjs/v/axios.svg?style=flat-square)](https://cdnjs.com/libraries/axios)
![Build status](https://github.com/axios/axios/actions/workflows/ci.yml/badge.svg)
[![Gitpod Ready-to-Code](https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod)](https://gitpod.io/#https://github.com/axios/axios) 
[![code coverage](https://img.shields.io/coveralls/mzabriskie/axios.svg?style=flat-square)](https://coveralls.io/r/mzabriskie/axios)
[![install size](https://packagephobia.now.sh/badge?p=axios)](https://packagephobia.now.sh/result?p=axios)
[![npm downloads](https://img.shields.io/npm/dm/axios.svg?style=flat-square)](https://npm-stat.com/charts.html?package=axios)
[![gitter chat](https://img.shields.io/gitter/room/mzabriskie/axios.svg?style=flat-square)](https://gitter.im/mzabriskie/axios)
[![code helpers](https://www.codetriage.com/axios/axios/badges/users.svg)](https://www.codetriage.com/axios/axios)
[![Known Vulnerabilities](https://snyk.io/test/npm/axios/badge.svg)](https://snyk.io/test/npm/axios)
![npm bundle size](https://img.shields.io/bundlephobia/minzip/axios)

Promise based HTTP client for the browser and node.js

&gt; New axios docs website: [click here](https://axios-http.com/)

## Table of Contents

  - [Features](#features)
  - [Browser Support](#browser-support)
  - [Installing](#installing)
  - [Example](#example)
  - [Axios API](#axios-api)
  - [Request method aliases](#request-method-aliases)
  - [Concurrency 👎](#concurrency-deprecated)
  - [Creating an instance](#creating-an-instance)
  - [Instance methods](#instance-methods)
  - [Request Config](#request-config)
  - [Response Schema](#response-schema)
  - [Config Defaults](#config-defaults)
    - [Global axios defaults](#global-axios-defaults)
    - [Custom instance defaults](#custom-instance-defaults)
    - [Config order of precedence](#config-order-of-precedence)
  - [Interceptors](#interceptors)
    - [Multiple Interceptors](#multiple-interceptors)
  - [Handling Errors](#handling-errors)
  - [Cancellation](#cancellation)
    - [AbortController](#abortcontroller)
    - [CancelToken 👎](#canceltoken-deprecated)
  - [Using application/x-www-form-urlencoded format](#using-applicationx-www-form-urlencoded-format)
    - [URLSearchParams](#urlsearchparams)
    - [Query string](#query-string-older-browsers)
    - [🆕 Automatic serialization](#-automatic-serialization-to-urlsearchparams)        
  - [Using multipart/form-data format](#using-multipartform-data-format)    
    - [FormData](#formdata)
    - [🆕 Automatic serialization](#-automatic-serialization-to-formdata) 
  - [Files Posting](#files-posting)
  - [HTML Form Posting](#html-form-posting-browser)
  - [Semver](#semver)
  - [Promises](#promises)
  - [TypeScript](#typescript)
  - [Resources](#resources)
  - [Credits](#credits)
  - [License](#license)

## Features

- Make [XMLHttpRequests](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest) from the browser
- Make [http](https://nodejs.org/api/http.html) requests from node.js
- Supports the [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) API
- Intercept request and response
- Transform request and response data
- Cancel requests
- Automatic transforms for JSON data
- 🆕 Automatic data object serialization to `multipart/form-data` and `x-www-form-urlencoded` body encodings
- Client side support for protecting against [XSRF](https://en.wikipedia.org/wiki/Cross-site_request_forgery)

## Browser Support

![Chrome](https://raw.githubusercontent.com/alrra/browser-logos/main/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.githubusercontent.com/alrra/browser-logos/main/src/firefox/firefox_48x48.png) | ![Safari](https://raw.githubusercontent.com/alrra/browser-logos/main/src/safari/safari_48x48.png) | ![Opera](https://raw.githubusercontent.com/alrra/browser-logos/main/src/opera/opera_48x48.png) | ![Edge](https://raw.githubusercontent.com/alrra/browser-logos/main/src/edge/edge_48x48.png) | ![IE](https://raw.githubusercontent.com/alrra/browser-logos/master/src/archive/internet-explorer_9-11/internet-explorer_9-11_48x48.png) |
--- | --- | --- | --- | --- | --- |
Latest ✔ | Latest ✔ | Latest ✔ | Latest ✔ | Latest ✔ | 11 ✔ |

[![Browser Matrix](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)

## Installing

Using npm:

```bash
$ npm install axios
```

Using bower:

```bash
$ bower install axios
```

Using yarn:

```bash
$ yarn add axios
```

Using pnpm:

```bash
$ pnpm add axios
```

Using jsDelivr CDN:

```html
&lt;script src=&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;&gt;&lt;/script&gt;
```

Using unpkg CDN:

```html
&lt;script src=&quot;https://unpkg.com/axios/dist/axios.min.js&quot;&gt;&lt;/script&gt;
```

## Example

### note: CommonJS usage
In order to gain the TypeScript typings (for intellisense / autocomplete) while using CommonJS imports with `require()` use the following approach:

```js
const axios = require(&#039;axios&#039;).default;

// axios.&lt;method&gt; will now provide autocomplete and parameter typings
```

Performing a `GET` request

```js
const axios = require(&#039;axios&#039;).default;

// Make a request for a user with a given ID
axios.get(&#039;/user?ID=12345&#039;)
  .then(function (response) {
    // handle success
    console.log(response);
  })
  .catch(function (error) {
    // handle error
    console.log(error);
  })
  .then(function () {
    // always executed
  });

// Optionally the request above could also be done as
axios.get(&#039;/user&#039;, {
    params: {
      ID: 12345
    }
  })
  .then(function (response) {
    console.log(response);
  })
  .catch(function (error) {
    console.log(error);
  })
  .then(function () {
    // always executed
  });  

// Want to use async/await? Add the `async` keyword to your outer function/method.
async function getUser() {
  try {
    const response = await axios.get(&#039;/user?ID=12345&#039;);
    console.log(response);
  } catch (error) {
    console.error(error);
  }
}
```

&gt; **NOTE:** `async/await` is part of ECMAScript 2017 and is not supported in Internet
&gt; Explorer and older browsers, so use with caution.

Performing a `POST` request

```js
axios.post(&#039;/user&#039;, {
    firstName: &#039;Fred&#039;,
    lastName: &#039;Flintstone&#039;
  })
  .then(function (response) {
    console.log(response);
  })
  .catch(function (error) {
    console.log(error);
  });
```

Performing multiple concurrent requests

```js
function getUserAccount() {
  return axios.get(&#039;/user/12345&#039;);
}

function getUserPermissions() {
  return axios.get(&#039;/user/12345/permissions&#039;);
}

Promise.all([getUserAccount(), getUserPermissions()])
  .then(function (results) {
    const acct = results[0];
    const perm = results[1];
  });
```

## axios API

Requests can be made by passing the relevant config to `axios`.

##### axios(config)

```js
// Send a POST request
axios({
  method: &#039;post&#039;,
  url: &#039;/user/12345&#039;,
  data: {
    firstName: &#039;Fred&#039;,
    lastName: &#039;Flintstone&#039;
  }
});
```

```js
// GET request for remote image in node.js
axios({
  method: &#039;get&#039;,
  url: &#039;https://bit.ly/2mTM3nY&#039;,
  responseType: &#039;stream&#039;
})
  .then(function (response) {
    response.data.pipe(fs.createWriteStream(&#039;ada_lovelace.jpg&#039;))
  });
```

##### axios(url[, config])

```js
// Send a GET request (default method)
axios(&#039;/user/12345&#039;);
```

### Request method aliases

For convenience, aliases have been provided for all common request methods.

##### axios.request(config)
##### axios.get(url[, config])
##### axios.delete(url[, config])
##### axios.head(url[, config])
##### axios.options(url[, config])
##### axios.post(url[, data[, config]])
##### axios.put(url[, data[, config]])
##### axios.patch(url[, data[, config]])

###### NOTE
When using the alias methods `url`, `method`, and `data` properties don&#039;t need to be specified in config.

### Concurrency (Deprecated)
Please use `Promise.all` to replace the below functions.

Helper functions for dealing with concurrent requests.

axios.all(iterable)
axios.spread(callback)

### Creating an instance

You can create a new instance of axios with a custom config.

##### axios.create([config])

```js
const instance = axios.create({
  baseURL: &#039;https://some-domain.com/api/&#039;,
  timeout: 1000,
  headers: {&#039;X-Custom-Header&#039;: &#039;foobar&#039;}
});
```

### Instance methods

The available instance methods are listed below. The specified config will be merged with the instance config.

##### axios#request(config)
##### axios#get(url[, config])
##### axios#delete(url[, config])
##### axios#head(url[, config])
##### axios#options(url[, config])
##### axios#post(url[, data[, config]])
##### axios#put(url[, data[, config]])
##### axios#patch(url[, data[, config]])
##### axios#getUri([config])

## Request Config

These are the available config options for making requests. Only the `url` is required. Requests will default to `GET` if `method` is not specified.

```js
{
  // `url` is the server URL that will be used for the request
  url: &#039;/user&#039;,

  // `method` is the request method to be used when making the request
  method: &#039;get&#039;, // default

  // `baseURL` will be prepended to `url` unless `url` is absolute.
  // It can be convenient to set `baseURL` for an instance of axios to pass relative URLs
  // to methods of that instance.
  baseURL: &#039;https://some-domain.com/api/&#039;,

  // `transformRequest` allows changes to the request data before it is sent to the server
  // This is only applicable for request methods &#039;PUT&#039;, &#039;POST&#039;, &#039;PATCH&#039; and &#039;DELETE&#039;
  // The last function in the array must return a string or an instance of Buffer, ArrayBuffer,
  // FormData or Stream
  // You may modify the headers object.
  transformRequest: [function (data, headers) {
    // Do whatever you want to transform the data

    return data;
  }],

  // `transformResponse` allows changes to the response data to be made before
  // it is passed to then/catch
  transformResponse: [function (data) {
    // Do whatever you want to transform the data

    return data;
  }],

  // `headers` are custom headers to be sent
  headers: {&#039;X-Requested-With&#039;: &#039;XMLHttpRequest&#039;},

  // `params` are the URL parameters to be sent with the request
  // Must be a plain object or a URLSearchParams object
  params: {
    ID: 12345
  },

  // `paramsSerializer` is an optional config in charge of serializing `params`
  paramsSerializer: {
    indexes: null // array indexes format (null - no brackets, false - empty brackets, true - brackets with indexes)
  },

  // `data` is the data to be sent as the request body
  // Only applicable for request methods &#039;PUT&#039;, &#039;POST&#039;, &#039;DELETE , and &#039;PATCH&#039;
  // When no `transformRequest` is set, must be of one of the following types:
  // - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams
  // - Browser only: FormData, File, Blob
  // - Node only: Stream, Buffer
  data: {
    firstName: &#039;Fred&#039;
  },
  
  // syntax alternative to send data into the body
  // method post
  // only the value is sent, not the key
  data: &#039;Country=Brasil&amp;City=Belo Horizonte&#039;,

  // `timeout` specifies the number of milliseconds before the request times out.
  // If the request takes longer than `timeout`, the request will be aborted.
  timeout: 1000, // default is `0` (no timeout)

  // `withCredentials` indicates whether or not cross-site Access-Control requests
  // should be made using credentials
  withCredentials: false, // default

  // `adapter` allows custom handling of requests which makes testing easier.
  // Return a promise and supply a valid response (see lib/adapters/README.md).
  adapter: function (config) {
    /* ... */
  },

  // `auth` indicates that HTTP Basic auth should be used, and supplies credentials.
  // This will set an `Authorization` header, overwriting any existing
  // `Authorization` custom headers you have set using `headers`.
  // Please note that only HTTP Basic auth is configurable through this parameter.
  // For Bearer tokens and such, use `Authorization` custom headers instead.
  auth: {
    username: &#039;janedoe&#039;,
    password: &#039;s00pers3cret&#039;
  },

  // `responseType` indicates the type of data that the server will respond with
  // options are: &#039;arraybuffer&#039;, &#039;document&#039;, &#039;json&#039;, &#039;text&#039;, &#039;stream&#039;
  //   browser only: &#039;blob&#039;
  responseType: &#039;json&#039;, // default

  // `responseEncoding` indicates encoding to use for decoding responses (Node.js only)
  // Note: Ignored for `responseType` of &#039;stream&#039; or client-side requests
  responseEncoding: &#039;utf8&#039;, // default

  // `xsrfCookieName` is the name of the cookie to use as a value for xsrf token
  xsrfCookieName: &#039;XSRF-TOKEN&#039;, // default

  // `xsrfHeaderName` is the name of the http header that carries the xsrf token value
  xsrfHeaderName: &#039;X-XSRF-TOKEN&#039;, // default

  // `onUploadProgress` allows handling of progress events for uploads
  // browser only
  onUploadProgress: function (progressEvent) {
    // Do whatever you want with the native progress event
  },

  // `onDownloadProgress` allows handling of progress events for downloads
  // browser only
  onDownloadProgress: function (progressEvent) {
    // Do whatever you want with the native progress event
  },

  // `maxContentLength` defines the max size of the http response content in bytes allowed in node.js
  maxContentLength: 2000,

  // `maxBodyLength` (Node only option) defines the max size of the http request content in bytes allowed
  maxBodyLength: 2000,

  // `validateStatus` defines whether to resolve or reject the promise for a given
  // HTTP response status code. If `validateStatus` returns `true` (or is set to `null`
  // or `undefined`), the promise will be resolved; otherwise, the promise will be
  // rejected.
  validateStatus: function (status) {
    return status &gt;= 200 &amp;&amp; status &lt; 300; // default
  },

  // `maxRedirects` defines the maximum number of redirects to follow in node.js.
  // If set to 0, no redirects will be followed.
  maxRedirects: 21, // default

  // `beforeRedirect` defines a function that will be called before redirect.
  // Use this to adjust the request options upon redirecting,
  // to inspect the latest response headers,
  // or to cancel the request by throwing an error
  // If maxRedirects is set to 0, `beforeRedirect` is not used.
  beforeRedirect: (options, { headers }) =&gt; {
    if (options.hostname === &quot;example.com&quot;) {
      options.auth = &quot;user:password&quot;;
    }
  },

  // `socketPath` defines a UNIX Socket to be used in node.js.
  // e.g. &#039;/var/run/docker.sock&#039; to send requests to the docker daemon.
  // Only either `socketPath` or `proxy` can be specified.
  // If both are specified, `socketPath` is used.
  socketPath: null, // default

  // `httpAgent` and `httpsAgent` define a custom agent to be used when performing http
  // and https requests, respectively, in node.js. This allows options to be added like
  // `keepAlive` that are not enabled by default.
  httpAgent: new http.Agent({ keepAlive: true }),
  httpsAgent: new https.Agent({ keepAlive: true }),

  // `proxy` defines the hostname, port, and protocol of the proxy server.
  // You can also define your proxy using the conventional `http_proxy` and
  // `https_proxy` environment variables. If you are using environment variables
  // for your proxy configuration, you can also define a `no_proxy` environment
  // variable as a comma-separated list of domains that should not be proxied.
  // Use `false` to disable proxies, ignoring environment variables.
  // `auth` indicates that HTTP Basic auth should be used to connect to the proxy, and
  // supplies credentials.
  // This will set an `Proxy-Authorization` header, overwriting any existing
  // `Proxy-Authorization` custom headers you have set using `headers`.
  // If the proxy server uses HTTPS, then you must set the protocol to `https`. 
  proxy: {
    protocol: &#039;https&#039;,
    host: &#039;127.0.0.1&#039;,
    port: 9000,
    auth: {
      username: &#039;mikeymike&#039;,
      password: &#039;rapunz3l&#039;
    }
  },

  // `cancelToken` specifies a cancel token that can be used to cancel the request
  // (see Cancellation section below for details)
  cancelToken: new CancelToken(function (cancel) {
  }),

  // an alternative way to cancel Axios requests using AbortController
  signal: new AbortController().signal,

  // `decompress` indicates whether or not the response body should be decompressed 
  // automatically. If set to `true` will also remove the &#039;content-encoding&#039; header 
  // from the responses objects of all decompressed responses
  // - Node only (XHR cannot turn off decompression)
  decompress: true // default

  // `insecureHTTPParser` boolean.
  // Indicates where to use an insecure HTTP parser that accepts invalid HTTP headers.
  // This may allow interoperability with non-conformant HTTP implementations.
  // Using the insecure parser should be avoided.
  // see options https://nodejs.org/dist/latest-v12.x/docs/api/http.html#http_http_request_url_options_callback
  // see also https://nodejs.org/en/blog/vulnerability/february-2020-security-releases/#strict-http-header-parsing-none
  insecureHTTPParser: undefined // default

  // transitional options for backward compatibility that may be removed in the newer versions
  transitional: {
    // silent JSON parsing mode
    // `true`  - ignore JSON parsing errors and set response.data to null if parsing failed (old behaviour)
    // `false` - throw SyntaxError if JSON parsing failed (Note: responseType must be set to &#039;json&#039;)
    silentJSONParsing: true, // default value for the current Axios version

    // try to parse the response string as JSON even if `responseType` is not &#039;json&#039;
    forcedJSONParsing: true,
    
    // throw ETIMEDOUT error instead of generic ECONNABORTED on request timeouts
    clarifyTimeoutError: false,
  },

  env: {
    // The FormData class to be used to automatically serialize the payload into a FormData object
    FormData: window?.FormData || global?.FormData
  },

  formSerializer: {
      visitor: (value, key, path, helpers)=&gt; {}; // custom visitor funaction to serrialize form values
      dots: boolean; // use dots instead of brackets format
      metaTokens: boolean; // keep special endings like {} in parameter key 
      indexes: boolean; // array indexes format null - no brackets, false - empty brackets, true - brackets with indexes
  }
}
```

## Response Schema

The response for a request contains the following information.

```js
{
  // `data` is the response that was provided by the server
  data: {},

  // `status` is the HTTP status code from the server response
  status: 200,

  // `statusText` is the HTTP status message from the server response
  statusText: &#039;OK&#039;,

  // `headers` the HTTP headers that the server responded with
  // All header names are lowercase and can be accessed using the bracket notation.
  // Example: `response.headers[&#039;content-type&#039;]`
  headers: {},

  // `config` is the config that was provided to `axios` for the request
  config: {},

  // `request` is the request that generated this response
  // It is the last ClientRequest instance in node.js (in redirects)
  // and an XMLHttpRequest instance in the browser
  request: {}
}
```

When using `then`, you will receive the response as follows:

```js
axios.get(&#039;/user/12345&#039;)
  .then(function (response) {
    console.log(response.data);
    console.log(response.status);
    console.log(response.statusText);
    console.log(response.headers);
    console.log(response.config);
  });
```

When using `catch`, or passing a [rejection callback](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then) as second parameter of `then`, the response will be available through the `error` object as explained in the [Handling Errors](#handling-errors) section.

## Config Defaults

You can specify config defaults that will be applied to every request.

### Global axios defaults

```js
axios.defaults.bas

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[NginxProxyManager/nginx-proxy-manager]]></title>
            <link>https://github.com/NginxProxyManager/nginx-proxy-manager</link>
            <guid>https://github.com/NginxProxyManager/nginx-proxy-manager</guid>
            <pubDate>Wed, 29 Oct 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[Docker container for managing Nginx proxy hosts with a simple, powerful interface]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/NginxProxyManager/nginx-proxy-manager">NginxProxyManager/nginx-proxy-manager</a></h1>
            <p>Docker container for managing Nginx proxy hosts with a simple, powerful interface</p>
            <p>Language: JavaScript</p>
            <p>Stars: 28,988</p>
            <p>Forks: 3,344</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
	&lt;img src=&quot;https://nginxproxymanager.com/github.png&quot;&gt;
	&lt;br&gt;&lt;br&gt;
	&lt;img src=&quot;https://img.shields.io/badge/version-2.12.6-green.svg?style=for-the-badge&quot;&gt;
	&lt;a href=&quot;https://hub.docker.com/repository/docker/jc21/nginx-proxy-manager&quot;&gt;
		&lt;img src=&quot;https://img.shields.io/docker/stars/jc21/nginx-proxy-manager.svg?style=for-the-badge&quot;&gt;
	&lt;/a&gt;
	&lt;a href=&quot;https://hub.docker.com/repository/docker/jc21/nginx-proxy-manager&quot;&gt;
		&lt;img src=&quot;https://img.shields.io/docker/pulls/jc21/nginx-proxy-manager.svg?style=for-the-badge&quot;&gt;
	&lt;/a&gt;
&lt;/p&gt;

This project comes as a pre-built docker image that enables you to easily forward to your websites
running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.

- [Quick Setup](#quick-setup)
- [Full Setup](https://nginxproxymanager.com/setup/)
- [Screenshots](https://nginxproxymanager.com/screenshots/)

## Project Goal

I created this project to fill a personal need to provide users with an easy way to accomplish reverse
proxying hosts with SSL termination and it had to be so easy that a monkey could do it. This goal hasn&#039;t changed.
While there might be advanced options they are optional and the project should be as simple as possible
so that the barrier for entry here is low.

&lt;a href=&quot;https://www.buymeacoffee.com/jc21&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://public.jc21.com/github/by-me-a-coffee.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: 51px !important;width: 217px !important;&quot; &gt;&lt;/a&gt;


## Features

- Beautiful and Secure Admin Interface based on [Tabler](https://tabler.github.io/)
- Easily create forwarding domains, redirections, streams and 404 hosts without knowing anything about Nginx
- Free SSL using Let&#039;s Encrypt or provide your own custom SSL certificates
- Access Lists and basic HTTP Authentication for your hosts
- Advanced Nginx configuration available for super users
- User management, permissions and audit log


## Hosting your home network

I won&#039;t go in to too much detail here but here are the basics for someone new to this self-hosted world.

1. Your home router will have a Port Forwarding section somewhere. Log in and find it
2. Add port forwarding for port 80 and 443 to the server hosting this project
3. Configure your domain name details to point to your home, either with a static ip or a service like DuckDNS or [Amazon Route53](https://github.com/jc21/route53-ddns)
4. Use the Nginx Proxy Manager as your gateway to forward to your other web based services

## Quick Setup

1. Install Docker and Docker-Compose

- [Docker Install documentation](https://docs.docker.com/install/)
- [Docker-Compose Install documentation](https://docs.docker.com/compose/install/)

2. Create a docker-compose.yml file similar to this:

```yml
services:
  app:
    image: &#039;docker.io/jc21/nginx-proxy-manager:latest&#039;
    restart: unless-stopped
    ports:
      - &#039;80:80&#039;
      - &#039;81:81&#039;
      - &#039;443:443&#039;
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
```

This is the bare minimum configuration required. See the [documentation](https://nginxproxymanager.com/setup/) for more.

3. Bring up your stack by running

```bash
docker-compose up -d

# If using docker-compose-plugin
docker compose up -d

```

4. Log in to the Admin UI

When your docker container is running, connect to it on port `81` for the admin interface.
Sometimes this can take a little bit because of the entropy of keys.

[http://127.0.0.1:81](http://127.0.0.1:81)

Default Admin User:
```
Email:    admin@example.com
Password: changeme
```

Immediately after logging in with this default user you will be asked to modify your details and change your password.


## Contributing

All are welcome to create pull requests for this project, against the `develop` branch. Official releases are created from the `master` branch.

CI is used in this project. All PR&#039;s must pass before being considered. After passing,
docker builds for PR&#039;s are available on dockerhub for manual verifications.

Documentation within the `develop` branch is available for preview at
[https://develop.nginxproxymanager.com](https://develop.nginxproxymanager.com)


### Contributors

Special thanks to [all of our contributors](https://github.com/NginxProxyManager/nginx-proxy-manager/graphs/contributors).


## Getting Support

1. [Found a bug?](https://github.com/NginxProxyManager/nginx-proxy-manager/issues)
2. [Discussions](https://github.com/NginxProxyManager/nginx-proxy-manager/discussions)
3. [Reddit](https://reddit.com/r/nginxproxymanager)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[npm/cli]]></title>
            <link>https://github.com/npm/cli</link>
            <guid>https://github.com/npm/cli</guid>
            <pubDate>Wed, 29 Oct 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[the package manager for JavaScript]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/npm/cli">npm/cli</a></h1>
            <p>the package manager for JavaScript</p>
            <p>Language: JavaScript</p>
            <p>Stars: 9,250</p>
            <p>Forks: 3,790</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre># npm - a JavaScript package manager

### Requirements

You should be running a currently supported version of [Node.js](https://nodejs.org/en/download/) to run **`npm`**.  For a list of which versions of Node.js are currently supported, please see the [Node.js releases](https://nodejs.org/en/about/previous-releases) page.

### Installation

**`npm`** comes bundled with [**`node`**](https://nodejs.org/), &amp; most third-party distributions, by default. Officially supported downloads/distributions can be found at: [nodejs.org/en/download](https://nodejs.org/en/download)

#### Direct Download

You can download &amp; install **`npm`** directly from [**npmjs**.com](https://npmjs.com/) using our custom `install.sh` script:

```bash
curl -qL https://www.npmjs.com/install.sh | sh
```

#### Node Version Managers

If you&#039;re looking to manage multiple versions of **`Node.js`** &amp;/or **`npm`**, consider using a [node version manager](https://github.com/search?q=node+version+manager+archived%3Afalse&amp;type=repositories&amp;ref=advsearch)

### Usage

```bash
npm &lt;command&gt;
```

### Links &amp; Resources

* [**Documentation**](https://docs.npmjs.com/) - Official docs &amp; how-tos for all things **npm**
    * Note: you can also search docs locally with `npm help-search &lt;query&gt;`
* [**Bug Tracker**](https://github.com/npm/cli/issues) - Search or submit bugs against the CLI
* [**Roadmap**](https://github.com/orgs/github/projects/4247/views/1?filterQuery=npm) - Track &amp; follow along with our public roadmap
* [**Community Feedback and Discussions**](https://github.com/orgs/community/discussions/categories/npm) - Contribute ideas &amp; discussion around the npm registry, website &amp; CLI
* [**RFCs**](https://github.com/npm/rfcs) - Contribute ideas &amp; specifications for the API/design of the npm CLI
* [**Service Status**](https://status.npmjs.org/) - Monitor the current status &amp; see incident reports for the website &amp; registry
* [**Project Status**](https://npm.github.io/statusboard/) - See the health of all our maintained OSS projects in one view
* [**Support**](https://www.npmjs.com/support) - Experiencing problems with the **npm** [website](https://npmjs.com) or [registry](https://registry.npmjs.org)? [File a ticket](https://www.npmjs.com/support)

### Acknowledgments

* `npm` is configured to use the **npm Public Registry** at [https://registry.npmjs.org](https://registry.npmjs.org) by default; Usage of this registry is subject to **Terms of Use** available at [https://npmjs.com/policies/terms](https://npmjs.com/policies/terms)
* You can configure `npm` to use any other compatible registry you prefer. You can read more about [configuring third-party registries](https://docs.npmjs.com/cli/v7/using-npm/registry)

### FAQ on Branding

#### Is it &quot;npm&quot; or &quot;NPM&quot; or &quot;Npm&quot;?

**`npm`** should never be capitalized unless it is being displayed in a location that is customarily all-capitals (ex. titles on `man` pages).

#### Is &quot;npm&quot; an acronym for &quot;Node Package Manager&quot;?

Contrary to popular belief, **`npm`** **is not** in fact an acronym for &quot;Node Package Manager&quot;; It is a recursive bacronymic abbreviation for **&quot;npm is not an acronym&quot;** (if the project was named &quot;ninaa&quot;, then it would be an acronym). The precursor to **`npm`** was actually a bash utility named **&quot;pm&quot;**, which was the shortform name of **&quot;pkgmakeinst&quot;** - a bash function that installed various things on various platforms. If **`npm`** were to ever have been considered an acronym, it would be as &quot;node pm&quot; or, potentially &quot;new pm&quot;.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[MagicMirrorOrg/MagicMirror]]></title>
            <link>https://github.com/MagicMirrorOrg/MagicMirror</link>
            <guid>https://github.com/MagicMirrorOrg/MagicMirror</guid>
            <pubDate>Wed, 29 Oct 2025 00:04:47 GMT</pubDate>
            <description><![CDATA[MagicMirror² is an open source modular smart mirror platform. With a growing list of installable modules, the MagicMirror² allows you to convert your hallway or bathroom mirror into your personal assistant.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/MagicMirrorOrg/MagicMirror">MagicMirrorOrg/MagicMirror</a></h1>
            <p>MagicMirror² is an open source modular smart mirror platform. With a growing list of installable modules, the MagicMirror² allows you to convert your hallway or bathroom mirror into your personal assistant.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 22,290</p>
            <p>Forks: 4,437</p>
            <p>Stars today: 19 stars today</p>
            <h2>README</h2><pre># ![MagicMirror²: The open source modular smart mirror platform.](.github/header.png)

&lt;p style=&quot;text-align: center&quot;&gt;
  &lt;a href=&quot;https://choosealicense.com/licenses/mit&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg&quot; alt=&quot;License&quot;&gt;
 &lt;/a&gt;
 &lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/magicmirrororg/magicmirror/automated-tests.yaml&quot; alt=&quot;GitHub Actions&quot;&gt;
 &lt;img src=&quot;https://img.shields.io/github/check-runs/magicmirrororg/magicmirror/master&quot; alt=&quot;Build Status&quot;&gt;
 &lt;a href=&quot;https://github.com/MagicMirrorOrg/MagicMirror&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/stars/magicmirrororg/magicmirror?style=social&quot; alt=&quot;GitHub Stars&quot;&gt;
 &lt;/a&gt;
&lt;/p&gt;

**MagicMirror²** is an open source modular smart mirror platform. With a growing list of installable modules, the **MagicMirror²** allows you to convert your hallway or bathroom mirror into your personal assistant. **MagicMirror²** is built by the creator of [the original MagicMirror](https://michaelteeuw.nl/tagged/magicmirror) with the incredible help of a [growing community of contributors](https://github.com/MagicMirrorOrg/MagicMirror/graphs/contributors).

MagicMirror² focuses on a modular plugin system and uses [Electron](https://www.electronjs.org/) as an application wrapper. So no more web server or browser installs necessary!

## Documentation

For the full documentation including **[installation instructions](https://docs.magicmirror.builders/getting-started/installation.html)**, please visit our dedicated documentation website: [https://docs.magicmirror.builders](https://docs.magicmirror.builders).

## Links

- Website: [https://magicmirror.builders](https://magicmirror.builders)
- Documentation: [https://docs.magicmirror.builders](https://docs.magicmirror.builders)
- Forum: [https://forum.magicmirror.builders](https://forum.magicmirror.builders)
  - Technical discussions: &lt;https://forum.magicmirror.builders/category/11/core-system&gt;
- Discord: [https://discord.gg/J5BAtvx](https://discord.gg/J5BAtvx)
- Blog: [https://michaelteeuw.nl/tagged/magicmirror](https://michaelteeuw.nl/tagged/magicmirror)
- Donations: [https://magicmirror.builders/#donate](https://magicmirror.builders/#donate)

## Contributing Guidelines

Contributions of all kinds are welcome, not only in the form of code but also with regards to

- bug reports
- documentation
- translations

For the full contribution guidelines, check out: [https://docs.magicmirror.builders/about/contributing.html](https://docs.magicmirror.builders/about/contributing.html)

## Enjoying MagicMirror? Consider a donation!

MagicMirror² is Open Source and free. That doesn&#039;t mean we don&#039;t need any money.

Please consider a donation to help us cover the ongoing costs like webservers and email services.
If we receive enough donations we might even be able to free up some working hours and spend some extra time improving the MagicMirror² core.

To donate, please follow [this](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=G5D8E9MR5DTD2&amp;source=url) link.

&lt;p style=&quot;text-align: center&quot;&gt;
  &lt;a href=&quot;https://forum.magicmirror.builders/topic/728/magicmirror-is-voted-number-1-in-the-magpi-top-50&quot;&gt;&lt;img src=&quot;https://magicmirror.builders/img/magpi-best-watermark-custom.png&quot; width=&quot;150&quot; alt=&quot;MagPi Top 50&quot;&gt;&lt;/a&gt;
&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>