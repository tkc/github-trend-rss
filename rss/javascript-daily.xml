<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Fri, 21 Mar 2025 00:04:43 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[microsoft/Web-Dev-For-Beginners]]></title>
            <link>https://github.com/microsoft/Web-Dev-For-Beginners</link>
            <guid>https://github.com/microsoft/Web-Dev-For-Beginners</guid>
            <pubDate>Fri, 21 Mar 2025 00:04:43 GMT</pubDate>
            <description><![CDATA[24 Lessons, 12 Weeks, Get Started as a Web Developer]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/microsoft/Web-Dev-For-Beginners">microsoft/Web-Dev-For-Beginners</a></h1>
            <p>24 Lessons, 12 Weeks, Get Started as a Web Developer</p>
            <p>Language: JavaScript</p>
            <p>Stars: 85,783</p>
            <p>Forks: 12,793</p>
            <p>Stars today: 59 stars today</p>
            <h2>README</h2><pre>[![GitHub license](https://img.shields.io/github/license/microsoft/Web-Dev-For-Beginners.svg)](https://github.com/microsoft/Web-Dev-For-Beginners/blob/master/LICENSE)
[![GitHub contributors](https://img.shields.io/github/contributors/microsoft/Web-Dev-For-Beginners.svg)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/graphs/contributors/)
[![GitHub issues](https://img.shields.io/github/issues/microsoft/Web-Dev-For-Beginners.svg)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/issues/)
[![GitHub pull-requests](https://img.shields.io/github/issues-pr/microsoft/Web-Dev-For-Beginners.svg)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/pulls/)
[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)

[![GitHub watchers](https://img.shields.io/github/watchers/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;label=Watch&amp;maxAge=2592000)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/watchers/)
[![GitHub forks](https://img.shields.io/github/forks/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;label=Fork&amp;maxAge=2592000)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/network/)
[![GitHub stars](https://img.shields.io/github/stars/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;label=Star&amp;maxAge=2592000)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/stargazers/)

[![](https://dcbadge.vercel.app/api/server/ByRwuEEgH4)](https://discord.gg/zxKYvhSnVp?WT.mc_id=academic-000002-leestott)

[![Open in Visual Studio Code](https://img.shields.io/static/v1?logo=visualstudiocode&amp;label=&amp;message=Open%20in%20Visual%20Studio%20Code&amp;labelColor=2c2c32&amp;color=007acc&amp;logoColor=007acc)](https://open.vscode.dev/microsoft/Web-Dev-For-Beginners)

# Web Development for Beginners - A Curriculum

Learn the fundamentals of web development with our 12-week comprehensive course by Microsoft Cloud Advocates. Each of the 24 lessons dives into JavaScript, CSS, and HTML through hands-on projects like terrariums, browser extensions, and space games. Engage with quizzes, discussions, and practical assignments. Enhance your skills and optimize your knowledge retention with our effective project-based pedagogy. Start your coding journey today!

#### üßë‚Äçüéì _Are you a student?_

Visit [**Student Hub page**](https://docs.microsoft.com/learn/student-hub/?WT.mc_id=academic-77807-sagibbon) where you will find beginner resources, Student packs and even ways to get a free certificate voucher. This is the page you want to bookmark and check from time to time as we switch out content monthly.

### üì£ Announcement - _New Curriculum_ on Generative AI for JavaScript was just released

Don&#039;t miss our new Generative AI curriculum!

Visit [https://aka.ms/genai-js-course](https://aka.ms/genai-js-course) to get started!

&lt;div&gt;
  &lt;img src=&quot;./images/background.png&quot; width=&quot;600px&quot; /&gt;
&lt;/div&gt;

- Lessons covering everything from basics to RAG.
- Interact with historical characters using GenAI and our companion app.
- Fun and engaging narrative, you&#039;ll be time traveling!

&lt;div&gt;
  &lt;img src=&quot;./images/character.png&quot; width=&quot;600px&quot; /&gt;
&lt;/div&gt;

Each lesson includes an assignment to complete, a knowledge check and a challenge to guide you on learning topics like:
- Prompting and prompt engineering
- Text and image app generation
- Search apps

Visit [https://aka.ms/genai-js-course]([https://aka.ms/genai-js-course) to get started!



## üå± Getting Started

&gt; **Teachers**, we have [included some suggestions](for-teachers.md) on how to use this curriculum. We&#039;d love your feedback [in our discussion forum](https://github.com/microsoft/Web-Dev-For-Beginners/discussions/categories/teacher-corner)!

**[Learners](https://aka.ms/student-page/?WT.mc_id=academic-77807-sagibbon)**, for each lesson, start with a pre-lecture quiz and follow through with reading the lecture material, completing the various activities and check your understanding with the post-lecture quiz.

To enhance your learning experience, connect with your peers to work on the projects together! Discussions are encouraged in our [discussion forum](https://github.com/microsoft/Web-Dev-For-Beginners/discussions) where our team of moderators will be available to answer your questions.

To further your education, we highly recommend exploring [Microsoft Learn](https://learn.microsoft.com/users/wirelesslife/collections/p1ddcy5jwy0jkm?WT.mc_id=academic-77807-sagibbon) for additional study materials.

### üìã Setting up your environment

This curriculum has a development environment ready to go! As you get started you can choose to run the curriculum in a [Codespace](https://github.com/features/codespaces/) (_a browser-based, no installs needed environment_), or locally on your computer using a text editor such as [Visual Studio Code](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon).

#### Create your repository
For you to easily save your work, it is recommended that you create your own copy of this repository. You can do this by clicking the **Use this template** button at the top of the page. This will create a new repository in your GitHub account with a copy of the curriculum.

Follow these steps:
1. **Fork the Repository**: Click on the &quot;Fork&quot; button at the top-right corner of this page.
2. **Clone the Repository**:   `git clone https://github.com/microsoft/Web-Dev-For-Beginners.git`

#### Running the curriculum in a Codespace

In your copy of this repository that you created, click the **Code** button and select **Open with Codespaces**. This will create a new Codespace for you to work in.

&lt;img src=&quot;./images/createcodespace.png&quot; alt=&quot;Create codespace&quot; style=&quot;width:270px;&quot;/&gt;

#### Running the curriculum locally on your computer

To run this curriculum locally on your computer, you will need a text editor, a browser and a command line tool. Our first lesson, [Introduction to Programming Languages and Tools of the Trade](https://github.com/microsoft/Web-Dev-For-Beginners/tree/main/1-getting-started-lessons/1-intro-to-programming-languages), will walk you through various options for each of these tools for you to select what works best for you.

Our recommendation is to use [Visual Studio Code](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon) as your editor, which also has a built-in [Terminal](https://code.visualstudio.com/docs/terminal/basics/?WT.mc_id=academic-77807-sagibbon). You can download Visual Studio Code [here](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon).


1. Clone your repository to your computer. You can do this by clicking the **Code** button and copying the URL:

    &lt;img src=&quot;./images/createcodespace.png&quot; alt=&quot;Copy your repository URL&quot; style=&quot;width:270px;&quot;/&gt;

    Then, open [Terminal](https://code.visualstudio.com/docs/terminal/basics/?WT.mc_id=academic-77807-sagibbon) within [Visual Studio Code](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon) and run the following command, replacing `&lt;your-repository-url&gt;` with the URL you just copied:

    ```bash 
    git clone &lt;your-repository-url&gt;
    ```

2. Open the folder in Visual Studio Code. You can do this by clicking **File** &gt; **Open Folder** and selecting the folder you just cloned.


&gt;  Recommended Visual Studio Code extensions:
&gt;
&gt; * [Live Server](https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer&amp;WT.mc_id=academic-77807-sagibbon) - to preview HTML pages within Visual Studio Code
&gt; * [Copilot](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot&amp;WT.mc_id=academic-77807-sagibbon) - to help you write code faster

## üìÇ Each lesson includes:

- optional sketchnote
- optional supplemental video
- pre-lesson warmup quiz
- written lesson
- for project-based lessons, step-by-step guides on how to build the project
- knowledge checks
- a challenge
- supplemental reading
- assignment
- post-lesson quiz

&gt; **A note about quizzes**: All quizzes are contained in the Quiz-app folder, 48 total quizzes of three questions each. They are linked from within the lessons the quiz app can be run locally or deployed to Azure; follow the instruction in the `quiz-app` folder. They are gradually being localized.

## üóÉÔ∏è Lessons

|     |                       Project Name                       |                            Concepts Taught                             | Learning Objectives                                                                                                                 |                                                         Linked Lesson                                                          |         Author          |
| :-: | :------------------------------------------------------: | :--------------------------------------------------------------------: | ----------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------: | :---------------------: |
| 01  |                     Getting Started                      |           Introduction to Programming and Tools of the Trade           | Learn the basic underpinnings behind most programming languages and about software that helps professional developers do their jobs | [Intro to Programming Languages and Tools of the Trade](/1-getting-started-lessons/1-intro-to-programming-languages/README.md) |         Jasmine         |
| 02  |                     Getting Started                      |             Basics of GitHub, includes working with a team             | How to use GitHub in your project, how to collaborate with others on a code base                                                    |                            [Intro to GitHub](/1-getting-started-lessons/2-github-basics/README.md)                             |          Floor          |
| 03  |                     Getting Started                      |                             Accessibility                              | Learn the basics of web accessibility                                                                                               |                       [Accessibility Fundamentals](/1-getting-started-lessons/3-accessibility/README.md)                       |       Christopher       |
| 04  |                        JS Basics                         |                         JavaScript Data Types                          | The basics of JavaScript data types                                                                                                 |                                       [Data Types](/2-js-basics/1-data-types/README.md)                                        |         Jasmine         |
| 05  |                        JS Basics                         |                         Functions and Methods                          | Learn about functions and methods to manage an application&#039;s logic flow                                                             |                              [Functions and Methods](/2-js-basics/2-functions-methods/README.md)                               | Jasmine and Christopher |
| 06  |                        JS Basics                         |                        Making Decisions with JS                        | Learn how to create conditions in your code using decision-making methods                                                           |                                 [Making Decisions](/2-js-basics/3-making-decisions/README.md)                                  |         Jasmine         |
| 07  |                        JS Basics                         |                            Arrays and Loops                            | Work with data using arrays and loops in JavaScript                                                                                 |                                   [Arrays and Loops](/2-js-basics/4-arrays-loops/README.md)                                    |         Jasmine         |
| 08  |       [Terrarium](/3-terrarium/solution/README.md)       |                            HTML in Practice                            | Build the HTML to create an online terrarium, focusing on building a layout                                                         |                                 [Introduction to HTML](/3-terrarium/1-intro-to-html/README.md)                                 |           Jen           |
| 09  |       [Terrarium](/3-terrarium/solution/README.md)       |                            CSS in Practice                             | Build the CSS to style the online terrarium, focusing on the basics of CSS including making the page responsive                     |                                  [Introduction to CSS](/3-terrarium/2-intro-to-css/README.md)                                  |           Jen           |
| 10  |            [Terrarium](/3-terrarium/solution/README.md)            |                 JavaScript Closures, DOM manipulation                  | Build the JavaScript to make the terrarium function as a drag/drop interface, focusing on closures and DOM manipulation             |                  [JavaScript Closures, DOM manipulation](/3-terrarium/3-intro-to-DOM-and-closures/README.md)                   |           Jen           |
| 11  |          [Typing Game](/4-typing-game/solution/README.md)          |                          Build a Typing Game                           | Learn how to use keyboard events to drive the logic of your JavaScript app                                                          |                                [Event-Driven Programming](/4-typing-game/typing-game/README.md)                                |       Christopher       |
| 12  | [Green Browser Extension](/5-browser-extension/solution/README.md) |                         Working with Browsers                          | Learn how browsers work, their history, and how to scaffold the first elements of a browser extension                               |                               [About Browsers](/5-browser-extension/1-about-browsers/README.md)                                |           Jen           |
| 13  | [Green Browser Extension](/5-browser-extension/solution/README.md) | Building a form, calling an API and storing variables in local storage | Build the JavaScript elements of your browser extension to call an API using variables stored in local storage                      |                [APIs, Forms, and Local Storage](/5-browser-extension/2-forms-browsers-local-storage/README.md)                 |           Jen           |
| 14  | [Green Browser Extension](/5-browser-extension/solution/README.md) |          Background processes in the browser, web performance          | Use the browser&#039;s background processes to manage the extension&#039;s icon; learn about web performance and some optimizations to make   |             [Background Tasks and Performance](/5-browser-extension/3-background-tasks-and-performance/README.md)              |           Jen           |
| 15  |           [Space Game](/6-space-game/solution/README.md)           |             More Advanced Game Development with JavaScript             | Learn about Inheritance using both Classes and Composition and the Pub/Sub pattern, in preparation for building a game              |                      [Introduction to Advanced Game Development](/6-space-game/1-introduction/README.md)                       |          Chris          |
| 16  |           [Space Game](/6-space-game/solution/README.md)           |                           Drawing to canvas                            | Learn about the Canvas API, used to draw elements to a screen                                                                       |                                [Drawing to Canvas](/6-space-game/2-drawing-to-canvas/README.md)                                |          Chris          |
| 17  |           [Space Game](/6-space-game/solution/README.md)           |                   Moving elements around the screen                    | Discover how elements can gain motion using the cartesian coordinates and the Canvas API                                            |                           [Moving Elements Around](/6-space-game/3-moving-elements-around/README.md)                           |          Chris          |
| 18  |           [Space Game](/6-space-game/solution/README.md)           |                          Collision detection                           | Make elements collide and react to each other using keypresses and provide a cooldown function to ensure performance of the game    |                              [Collision Detection](/6-space-game/4-collision-detection/README.md)                              |          Chris          |
| 19  |           [Space Game](/6-space-game/solution/README.md)           |                             Keeping score                              | Perform math calculations based on the game&#039;s status and performance                                                                |                                    [Keeping Score](/6-space-game/5-keeping-score/README.md)                                    |          Chris          |
| 20  |           [Space Game](/6-space-game/solution/README.md)           |                     Ending and restarting the game                     | Learn about ending and restarting the game, including cleaning up assets and resetting variable values                              |                                [The Ending Condition](/6-space-game/6-end-condition/README.md)                                 |          Chris          |
| 21  |         [Banking App](/7-bank-project/solution/README.md)          |                 HTML Templates and Routes in a Web App                 | Learn how to create the scaffold of a multipage website&#039;s architecture using routing and HTML templates                             |                            [HTML Templates and Routes](/7-bank-project/1-template-route/README.md)                             |          Yohan          |
| 22  |         [Banking App](/7-bank-project/solution/README.md)          |                  Build a Login and Registration Form                   | Learn about building forms and handling validation routines                                                                          |                                           [Forms](/7-bank-project/2-forms/README.md)                                           |          Yohan          |
| 23  |         [Banking App](/7-bank-project/solution/README.md)          |                   Methods of Fetching and Using Data                   | How data flows in and out of your app, how to fetch it, store it, and dispose of it                                                 |                                            [Data](/7-bank-project/3-data/README.md)                                            |          Yohan          |
| 24  |         [Banking App](/7-bank-project/solution/README.md)          |                      Concepts of State Management                      | Learn how your app retains state and how to manage it programmatically                                                              |                                [State Management](/7-bank-project/4-state-management/README.md)                                |          Yohan          |


## üè´ Pedagogy

Our curriculum is designed with two key pedagogical principles in mind:
* project-based learning
* frequent quizzes

The program teaches the fundamentals of JavaScript, HTML, and CSS, as well as the latest tools and techniques used by today&#039;s web developers. Students will have the opportunity to develop hands-on experience by building a typing game, virtual terrarium, eco-friendly browser extension, space-invader-style game, and a banking app for businesses. By the end of the 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mendableai/firecrawl-mcp-server]]></title>
            <link>https://github.com/mendableai/firecrawl-mcp-server</link>
            <guid>https://github.com/mendableai/firecrawl-mcp-server</guid>
            <pubDate>Fri, 21 Mar 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[Official Firecrawl MCP Server - Adds powerful web scraping to Cursor, Claude and any other LLM clients.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mendableai/firecrawl-mcp-server">mendableai/firecrawl-mcp-server</a></h1>
            <p>Official Firecrawl MCP Server - Adds powerful web scraping to Cursor, Claude and any other LLM clients.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,445</p>
            <p>Forks: 107</p>
            <p>Stars today: 104 stars today</p>
            <h2>README</h2><pre># Firecrawl MCP Server

A Model Context Protocol (MCP) server implementation that integrates with [Firecrawl](https://github.com/mendableai/firecrawl) for web scraping capabilities.

Big thanks to [@vrknetha](https://github.com/vrknetha), [@cawstudios](https://caw.tech) for the initial implementation!

## Features

- Scrape, crawl, search, extract, deep research and batch scrape support
- Web scraping with JS rendering
- URL discovery and crawling
- Web search with content extraction
- Automatic retries with exponential backoff
- - Efficient batch processing with built-in rate limiting
- Credit usage monitoring for cloud API
- Comprehensive logging system
- Support for cloud and self-hosted FireCrawl instances
- Mobile/Desktop viewport support
- Smart content filtering with tag inclusion/exclusion

## Installation

### Running with npx

```bash
env FIRECRAWL_API_KEY=fc-YOUR_API_KEY npx -y firecrawl-mcp
```

### Manual Installation

```bash
npm install -g firecrawl-mcp
```

### Running on Cursor

Configuring Cursor üñ•Ô∏è
Note: Requires Cursor version 0.45.6+

To configure FireCrawl MCP in Cursor:

1. Open Cursor Settings
2. Go to Features &gt; MCP Servers 
3. Click &quot;+ Add New MCP Server&quot;
4. Enter the following:
   - Name: &quot;firecrawl-mcp&quot; (or your preferred name)
   - Type: &quot;command&quot;
   - Command: `env FIRECRAWL_API_KEY=your-api-key npx -y firecrawl-mcp`

&gt; If you are using Windows and are running into issues, try `cmd /c &quot;set FIRECRAWL_API_KEY=your-api-key &amp;&amp; npx -y firecrawl-mcp&quot;`

Replace `your-api-key` with your FireCrawl API key.

After adding, refresh the MCP server list to see the new tools. The Composer Agent will automatically use FireCrawl MCP when appropriate, but you can explicitly request it by describing your web scraping needs. Access the Composer via Command+L (Mac), select &quot;Agent&quot; next to the submit button, and enter your query.

### Running on Windsurf

Add this to your `./codeium/windsurf/model_config.json`:

```json
{
  &quot;mcpServers&quot;: {
    &quot;mcp-server-firecrawl&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;firecrawl-mcp&quot;],
      &quot;env&quot;: {
        &quot;FIRECRAWL_API_KEY&quot;: &quot;YOUR_API_KEY_HERE&quot;
      }
    }
  }
}
```


### Installing via Smithery (Legacy)

To install FireCrawl for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@mendableai/mcp-server-firecrawl):

```bash
npx -y @smithery/cli install @mendableai/mcp-server-firecrawl --client claude
```

## Configuration

### Environment Variables

#### Required for Cloud API

- `FIRECRAWL_API_KEY`: Your FireCrawl API key
  - Required when using cloud API (default)
  - Optional when using self-hosted instance with `FIRECRAWL_API_URL`
- `FIRECRAWL_API_URL` (Optional): Custom API endpoint for self-hosted instances
  - Example: `https://firecrawl.your-domain.com`
  - If not provided, the cloud API will be used (requires API key)

#### Optional Configuration

##### Retry Configuration

- `FIRECRAWL_RETRY_MAX_ATTEMPTS`: Maximum number of retry attempts (default: 3)
- `FIRECRAWL_RETRY_INITIAL_DELAY`: Initial delay in milliseconds before first retry (default: 1000)
- `FIRECRAWL_RETRY_MAX_DELAY`: Maximum delay in milliseconds between retries (default: 10000)
- `FIRECRAWL_RETRY_BACKOFF_FACTOR`: Exponential backoff multiplier (default: 2)

##### Credit Usage Monitoring

- `FIRECRAWL_CREDIT_WARNING_THRESHOLD`: Credit usage warning threshold (default: 1000)
- `FIRECRAWL_CREDIT_CRITICAL_THRESHOLD`: Credit usage critical threshold (default: 100)

### Configuration Examples

For cloud API usage with custom retry and credit monitoring:

```bash
# Required for cloud API
export FIRECRAWL_API_KEY=your-api-key

# Optional retry configuration
export FIRECRAWL_RETRY_MAX_ATTEMPTS=5        # Increase max retry attempts
export FIRECRAWL_RETRY_INITIAL_DELAY=2000    # Start with 2s delay
export FIRECRAWL_RETRY_MAX_DELAY=30000       # Maximum 30s delay
export FIRECRAWL_RETRY_BACKOFF_FACTOR=3      # More aggressive backoff

# Optional credit monitoring
export FIRECRAWL_CREDIT_WARNING_THRESHOLD=2000    # Warning at 2000 credits
export FIRECRAWL_CREDIT_CRITICAL_THRESHOLD=500    # Critical at 500 credits
```

For self-hosted instance:

```bash
# Required for self-hosted
export FIRECRAWL_API_URL=https://firecrawl.your-domain.com

# Optional authentication for self-hosted
export FIRECRAWL_API_KEY=your-api-key  # If your instance requires auth

# Custom retry configuration
export FIRECRAWL_RETRY_MAX_ATTEMPTS=10
export FIRECRAWL_RETRY_INITIAL_DELAY=500     # Start with faster retries
```

### Usage with Claude Desktop

Add this to your `claude_desktop_config.json`:

```json
{
  &quot;mcpServers&quot;: {
    &quot;mcp-server-firecrawl&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;firecrawl-mcp&quot;],
      &quot;env&quot;: {
        &quot;FIRECRAWL_API_KEY&quot;: &quot;YOUR_API_KEY_HERE&quot;,

        &quot;FIRECRAWL_RETRY_MAX_ATTEMPTS&quot;: &quot;5&quot;,
        &quot;FIRECRAWL_RETRY_INITIAL_DELAY&quot;: &quot;2000&quot;,
        &quot;FIRECRAWL_RETRY_MAX_DELAY&quot;: &quot;30000&quot;,
        &quot;FIRECRAWL_RETRY_BACKOFF_FACTOR&quot;: &quot;3&quot;,

        &quot;FIRECRAWL_CREDIT_WARNING_THRESHOLD&quot;: &quot;2000&quot;,
        &quot;FIRECRAWL_CREDIT_CRITICAL_THRESHOLD&quot;: &quot;500&quot;
      }
    }
  }
}
```

### System Configuration

The server includes several configurable parameters that can be set via environment variables. Here are the default values if not configured:

```typescript
const CONFIG = {
  retry: {
    maxAttempts: 3, // Number of retry attempts for rate-limited requests
    initialDelay: 1000, // Initial delay before first retry (in milliseconds)
    maxDelay: 10000, // Maximum delay between retries (in milliseconds)
    backoffFactor: 2, // Multiplier for exponential backoff
  },
  credit: {
    warningThreshold: 1000, // Warn when credit usage reaches this level
    criticalThreshold: 100, // Critical alert when credit usage reaches this level
  },
};
```

These configurations control:

1. **Retry Behavior**

   - Automatically retries failed requests due to rate limits
   - Uses exponential backoff to avoid overwhelming the API
   - Example: With default settings, retries will be attempted at:
     - 1st retry: 1 second delay
     - 2nd retry: 2 seconds delay
     - 3rd retry: 4 seconds delay (capped at maxDelay)

2. **Credit Usage Monitoring**
   - Tracks API credit consumption for cloud API usage
   - Provides warnings at specified thresholds
   - Helps prevent unexpected service interruption
   - Example: With default settings:
     - Warning at 1000 credits remaining
     - Critical alert at 100 credits remaining

### Rate Limiting and Batch Processing

The server utilizes FireCrawl&#039;s built-in rate limiting and batch processing capabilities:

- Automatic rate limit handling with exponential backoff
- Efficient parallel processing for batch operations
- Smart request queuing and throttling
- Automatic retries for transient errors

## Available Tools

### 1. Scrape Tool (`firecrawl_scrape`)

Scrape content from a single URL with advanced options.

```json
{
  &quot;name&quot;: &quot;firecrawl_scrape&quot;,
  &quot;arguments&quot;: {
    &quot;url&quot;: &quot;https://example.com&quot;,
    &quot;formats&quot;: [&quot;markdown&quot;],
    &quot;onlyMainContent&quot;: true,
    &quot;waitFor&quot;: 1000,
    &quot;timeout&quot;: 30000,
    &quot;mobile&quot;: false,
    &quot;includeTags&quot;: [&quot;article&quot;, &quot;main&quot;],
    &quot;excludeTags&quot;: [&quot;nav&quot;, &quot;footer&quot;],
    &quot;skipTlsVerification&quot;: false
  }
}
```

### 2. Batch Scrape Tool (`firecrawl_batch_scrape`)

Scrape multiple URLs efficiently with built-in rate limiting and parallel processing.

```json
{
  &quot;name&quot;: &quot;firecrawl_batch_scrape&quot;,
  &quot;arguments&quot;: {
    &quot;urls&quot;: [&quot;https://example1.com&quot;, &quot;https://example2.com&quot;],
    &quot;options&quot;: {
      &quot;formats&quot;: [&quot;markdown&quot;],
      &quot;onlyMainContent&quot;: true
    }
  }
}
```

Response includes operation ID for status checking:

```json
{
  &quot;content&quot;: [
    {
      &quot;type&quot;: &quot;text&quot;,
      &quot;text&quot;: &quot;Batch operation queued with ID: batch_1. Use firecrawl_check_batch_status to check progress.&quot;
    }
  ],
  &quot;isError&quot;: false
}
```

### 3. Check Batch Status (`firecrawl_check_batch_status`)

Check the status of a batch operation.

```json
{
  &quot;name&quot;: &quot;firecrawl_check_batch_status&quot;,
  &quot;arguments&quot;: {
    &quot;id&quot;: &quot;batch_1&quot;
  }
}
```

### 4. Search Tool (`firecrawl_search`)

Search the web and optionally extract content from search results.

```json
{
  &quot;name&quot;: &quot;firecrawl_search&quot;,
  &quot;arguments&quot;: {
    &quot;query&quot;: &quot;your search query&quot;,
    &quot;limit&quot;: 5,
    &quot;lang&quot;: &quot;en&quot;,
    &quot;country&quot;: &quot;us&quot;,
    &quot;scrapeOptions&quot;: {
      &quot;formats&quot;: [&quot;markdown&quot;],
      &quot;onlyMainContent&quot;: true
    }
  }
}
```

### 5. Crawl Tool (`firecrawl_crawl`)

Start an asynchronous crawl with advanced options.

```json
{
  &quot;name&quot;: &quot;firecrawl_crawl&quot;,
  &quot;arguments&quot;: {
    &quot;url&quot;: &quot;https://example.com&quot;,
    &quot;maxDepth&quot;: 2,
    &quot;limit&quot;: 100,
    &quot;allowExternalLinks&quot;: false,
    &quot;deduplicateSimilarURLs&quot;: true
  }
}
```

### 6. Extract Tool (`firecrawl_extract`)

Extract structured information from web pages using LLM capabilities. Supports both cloud AI and self-hosted LLM extraction.

```json
{
  &quot;name&quot;: &quot;firecrawl_extract&quot;,
  &quot;arguments&quot;: {
    &quot;urls&quot;: [&quot;https://example.com/page1&quot;, &quot;https://example.com/page2&quot;],
    &quot;prompt&quot;: &quot;Extract product information including name, price, and description&quot;,
    &quot;systemPrompt&quot;: &quot;You are a helpful assistant that extracts product information&quot;,
    &quot;schema&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;name&quot;: { &quot;type&quot;: &quot;string&quot; },
        &quot;price&quot;: { &quot;type&quot;: &quot;number&quot; },
        &quot;description&quot;: { &quot;type&quot;: &quot;string&quot; }
      },
      &quot;required&quot;: [&quot;name&quot;, &quot;price&quot;]
    },
    &quot;allowExternalLinks&quot;: false,
    &quot;enableWebSearch&quot;: false,
    &quot;includeSubdomains&quot;: false
  }
}
```

Example response:

```json
{
  &quot;content&quot;: [
    {
      &quot;type&quot;: &quot;text&quot;,
      &quot;text&quot;: {
        &quot;name&quot;: &quot;Example Product&quot;,
        &quot;price&quot;: 99.99,
        &quot;description&quot;: &quot;This is an example product description&quot;
      }
    }
  ],
  &quot;isError&quot;: false
}
```

#### Extract Tool Options:

- `urls`: Array of URLs to extract information from
- `prompt`: Custom prompt for the LLM extraction
- `systemPrompt`: System prompt to guide the LLM
- `schema`: JSON schema for structured data extraction
- `allowExternalLinks`: Allow extraction from external links
- `enableWebSearch`: Enable web search for additional context
- `includeSubdomains`: Include subdomains in extraction

When using a self-hosted instance, the extraction will use your configured LLM. For cloud API, it uses FireCrawl&#039;s managed LLM service.

## Logging System

The server includes comprehensive logging:

- Operation status and progress
- Performance metrics
- Credit usage monitoring
- Rate limit tracking
- Error conditions

Example log messages:

```
[INFO] FireCrawl MCP Server initialized successfully
[INFO] Starting scrape for URL: https://example.com
[INFO] Batch operation queued with ID: batch_1
[WARNING] Credit usage has reached warning threshold
[ERROR] Rate limit exceeded, retrying in 2s...
```

## Error Handling

The server provides robust error handling:

- Automatic retries for transient errors
- Rate limit handling with backoff
- Detailed error messages
- Credit usage warnings
- Network resilience

Example error response:

```json
{
  &quot;content&quot;: [
    {
      &quot;type&quot;: &quot;text&quot;,
      &quot;text&quot;: &quot;Error: Rate limit exceeded. Retrying in 2 seconds...&quot;
    }
  ],
  &quot;isError&quot;: true
}
```

## Development

```bash
# Install dependencies
npm install

# Build
npm run build

# Run tests
npm test
```

### Contributing

1. Fork the repository
2. Create your feature branch
3. Run tests: `npm test`
4. Submit a pull request

## License

MIT License - see LICENSE file for details
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[jgraph/drawio]]></title>
            <link>https://github.com/jgraph/drawio</link>
            <guid>https://github.com/jgraph/drawio</guid>
            <pubDate>Fri, 21 Mar 2025 00:04:41 GMT</pubDate>
            <description><![CDATA[draw.io is a JavaScript, client-side editor for general diagramming.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/jgraph/drawio">jgraph/drawio</a></h1>
            <p>draw.io is a JavaScript, client-side editor for general diagramming.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 930</p>
            <p>Forks: 185</p>
            <p>Stars today: 27 stars today</p>
            <h2>README</h2><pre>About
-----
draw.io, this project, is a configurable diagramming/whiteboarding visualization application. draw.io is jointly owned and developed by JGraph Ltd and draw.io AG.

As well as running this project, we run a production-grade deployment of the diagramming interface at https://app.diagrams.net.

License
-----------------

The minified code authored by us in this repo is licensed under an Apache v2 license, but the sources to build those files are not in this repo. This is not an open source project. We do not accept PRs unless one of the maintainers specifically says it&#039;s OK (basically never).

The JGraph provided icons and diagram templates are licensed under the [CC BY 4.0](https://creativecommons.org/licenses/by/4.0/). Additional terms may also apply where the icons are originally defined by a third-party copyright holder. We have checked in all cases that the original license allows use in this project. Also see the terms for using the draw.io logo below.

Additional minified JavaScript files and Java libraries are used in this project. All of the licenses are deemed compatible with the Apache 2.0, nothing is GPL or AGPL, due diligence is performed on all third-party code.

We make no copyright claim on the content you create with this software, regardless of the copyright of individual icons used in such content.

Scope of the Project
--------------------

draw.io is a diagramming or whiteboarding application, depending on which theme is selected. It is not an SVG editing app, the SVG export is designed only for embedding in web pages, not for further editing in other tools.

The application is designed to be entirely as-is. draw.io is not suitable as a framework for building other products from, as source code is not provided. For this try either [Tldraw](https://github.com/tldraw/tldraw) or [Excalidraw](https://github.com/excalidraw/excalidraw).

Note, in particular, we don&#039;t have support for collaborative editing in this project. If this is important, one of the projects above is likely a better choice.

If you are using a draw.io project/product and have issues or questions about the editor itself, the issue tracker and discussion in this GitHub project are likely a good place to look.

Running
-------

One way to run draw.io is to fork this project, [publish the master branch to GitHub pages](https://help.github.com/categories/github-pages-basics/) and the [pages sites](https://jgraph.github.io/drawio/src/main/webapp/index.html) will have the full editor functionality (sans the integrations).

Another way is to use [the recommended Docker project](https://github.com/jgraph/docker-drawio) or to download [draw.io Desktop](https://get.diagrams.net).

The full packaged .war of the client and servlets is built when the project is tagged and available on the [releases page](https://github.com/jgraph/draw.io/releases).

Supported Browsers
------------------

draw.io supports Chrome 98+, Firefox 94+, Safari 15.4+, Opera 84+, WebView Android 98+, Safari iOS 15.4+ and Edge 98+.

Logo and trademark usage
------------------------

draw.io is a registered EU trademark, #018062448

Do not use the draw.io name or any draw.io logo in a way that suggests you are JGraph, your offering or project is by JGraph, or that JGraph is endorsing you or your offering or project.

Do not use any draw.io logo as the icon or logo for your business/organization, offering, project, domain name, social media account, or website.

Do not modify the permitted draw.io logos, including changing the color, dimensions, or combining with other words or design elements.

Do not use JGraph trademarks or logos without JGraph‚Äôs prior written permission.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[microsoft/generative-ai-with-javascript]]></title>
            <link>https://github.com/microsoft/generative-ai-with-javascript</link>
            <guid>https://github.com/microsoft/generative-ai-with-javascript</guid>
            <pubDate>Fri, 21 Mar 2025 00:04:40 GMT</pubDate>
            <description><![CDATA[Join a time-traveling adventure where you meet history‚Äôs legends while learning Generative AI technologies! ‚ú®]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/microsoft/generative-ai-with-javascript">microsoft/generative-ai-with-javascript</a></h1>
            <p>Join a time-traveling adventure where you meet history‚Äôs legends while learning Generative AI technologies! ‚ú®</p>
            <p>Language: JavaScript</p>
            <p>Stars: 313</p>
            <p>Forks: 124</p>
            <p>Stars today: 19 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt; 

&lt;img src=&quot;./docs/images/logo.png&quot; alt=&quot;&quot; align=&quot;center&quot; height=&quot;128&quot; /&gt;

# Generative AI for beginners with JavaScript

[![License](https://img.shields.io/badge/License-MIT-blue?style=flat-square)](https://github.com/microsoft/generative-ai-with-javascript/blob/main/LICENSE)
[![Watch the video series](https://img.shields.io/badge/Videos-d95652.svg?style=flat-square&amp;logo=youtube)](https://aka.ms/genai-js)
[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)

[![Azure AI Discord](https://dcbadge.limes.pink/api/server/kzRShWzttr)](https://discord.gg/kzRShWzttr)

‚≠ê If you like this repo, star it on GitHub ‚Äî it helps a lot!

[Getting Started](#getting-started) ‚Ä¢ [Lessons](#lessons) ‚Ä¢ [Keep Learning](#keep-learning)

&lt;/div&gt;

Ready to integrate Generative AI into your JavaScript apps? 

This course throws you into a *time-traveling adventure*‚Äîmeet history‚Äôs legends with a fun twist, while learning Generative AI technologies ‚ú®
 
&gt; [!IMPORTANT]  
&gt; Open-source vibes! Reuse, tweak, and share this content freely.
 
![Character App Sneak Peek](./docs/images/background.png)
 

## Call for help - help us translate !

Help us translate this course. Each lesson in `lessons/` folder has a `translations/` directory. Add your translation file like so `README.&lt;language code&gt;.md`, for example *README.es.md*.  - Thank You.


## Step into history with AI magic! 
 
Dive into an immersive learning experience powered by Generative AI:  
- **Learn about Generative AI technologies**. If you&#039;ve wanted to understand Generative AI and the potential for your applications, you&#039;re in the right place!
 
- **Epic Time-Travel Stories**.
Dive into a fun tale, chatting with icons like Leonardo da Vinci, Ada Lovelace, or Montezuma in every lesson.
 
- **Companion App**. Interact with historical figures using Generative AI technologies ([see our Responsible AI disclaimer](#responsible-ai-disclaimer)).

  ![Interact with History through conversation](./docs/images/character-chat.png) 

  Check the [_app_](./app/) directory to run the [app locally](./docs/setup/README.md#option-2--running-the-app-locally) or use [GitHub Codespaces](./docs/setup/README.md) to run it online.

- **Accessibility FTW**. Read it, hear it‚Äîaudio tags bring it to life.
 
&gt; ‚ÄúIt‚Äôs like a comic book with code!‚Äù ‚Äî Happy User
 
## Getting started
 
Throughout this course you&#039;ll find many code examples and exercises, so we encourage you to run and experiment with the code in your own copy of this repository:
 
1. Select the **Fork** button in the upper right-hand corner of the repository or select this button:
   [![Fork](https://img.shields.io/badge/Fork-Repository-blue?style=flat-square)](https://github.com/microsoft/generative-ai-with-javascript/fork)
 
2. Click the **Code** button in your forked repository, go to the **Codespaces** tab, and then choose **Create codespace**.

   This will create a preconfigured online environment for you. You&#039;ll then be able to use [GitHub Models](https://github.com/marketplace/models) to run the code examples and interact with AI models for free, without any additional setup.

&gt; [!NOTE]
&gt;
&gt; While GitHub Codespaces provides a quick and easy starting point you can also run the code samples [locally](/docs/setup/README.md#option-2--running-the-app-locally).
&gt;
&gt; Learn more about [GitHub Codespaces and GitHub Models concepts here](/docs/setup/README.md).  

### Lesson description

üì¶ Each lesson includes:

- A **written lesson** with an assignment and quiz.
- A short **video** to help further your learning.
- **Solutions** for each assignment and quiz.
- **Characters** you can interact with using our [companion app](./app), demonstrating Generative AI.

## Lessons

üóÉÔ∏è Table of contents

| # | Lesson Link  | Description |
| ---- | ----------- | ----------- |
| 1 | [Introduction to Generative AI and LLMs for JavaScript Developers](./lessons/01-intro-to-genai) | Understand Generative AI and LLM fundamentals, their applications and limits in JavaScript, and how to use AI to enhance user experiences. |
| 2 | [Build your first AI app](./lessons/02-first-ai-app) | Set up your development environment, write a basic app, and understand system prompts. |
| 3 | [Prompt engineering](./lessons/03-prompt-engineering) | Learn Prompt engineering fundamentals, techniques, and meta-prompts for better AI outcomes. |
| 4 | [Structured output](./lessons/04-structured-output) | Learn structured output, how to extract data from prompts, and present it in various formats, such as JSON, for easier consumption. |
| 5 | [Retrieval augmented generation (RAG)](./lessons/05-rag) | Learn the basics of RAG, how to integrate external data, and how to leverage it for more relevant, accurate AI responses. |
| 6 | Additional chapters are coming soon! | ... |

New lessons will be added to the course over time, so stay tuned!

## Keep learning

üôå After completing this course, you can continue learning by exploring our additional resources.

&lt;details&gt;
&lt;summary&gt;üé¨Video Series&lt;/summary&gt;

| # | Session | Description | Slides | Demo | Script | Video |
|---|---------|-------------|--------|------|--------|-------|
| 0 | Series introduction | Introduces the series and its content. | [pptx](/videos/slides/00-intro.pptx) / [pdf](/videos/slides/pdf/00-intro.pdf) | - | [Script](/videos/sessions/00-intro.md) | [üì∫](https://www.youtube.com/watch?v=vLYtDgs_zx8&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=1) |
| 1 | What you need to know about LLMs | Explores what LLMs are, how they&#039;re trained, how they work and their limits. | [pptx](/videos/slides/01-llms.pptx) / [pdf](/videos/slides/pdf/01-llms.pdf) | [Demo](/videos/demos/01-llms/) | [Script](/videos/sessions/01-llms.md) | [üì∫](https://www.youtube.com/watch?v=GQ_2OjNZ9aA&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=2)  |
| 2 | Essential prompt engineering techniques | Practical prompt engineering techniques to get the best out of AI models. | [pptx](/videos/slides/02-prompt-engineering.pptx) / [pdf](/videos/slides/pdf/02-prompt-engineering.pdf) | [Demo](/videos/demos/02-prompt-engineering/) | [Script](/videos/sessions/02-prompt-engineering.md) | [üì∫](https://www.youtube.com/watch?v=gQ6TlyxBmWs&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=3)  |
| 3 | Improve AI accuracy and reliability with RAG | Introduces Retrieval-Augmented Generation, to use AI with your own data. | [pptx](/videos/slides/03-rag.pptx) / [pdf](/videos/slides/pdf/03-rag.pdf) | [Demo](/videos/demos/03-rag/) | [Script](/videos/sessions/03-rag.md) | [üì∫](https://www.youtube.com/watch?v=xkFOmx5yxIA&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=4) |
| 4 | Speed up your AI development with LangChain.js | Covers LangChain.js framework core concepts, and how to use it to accelerate AI developments. | [pptx](/videos/slides/04-langchainjs.pptx) / [pdf](/videos/slides/pdf/04-langchainjs.pdf) | [Demo](/videos/demos/04-langchainjs/) | [Script](/videos/sessions/04-langchainjs.md) | [üì∫](https://www.youtube.com/watch?v=02IDU8eCX8o&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=5) |
| 5 | Run AI models on your local machine with Ollama | Shows how to integrate local AI models into your development workflow. | [pptx](/videos/slides/05-local-models.pptx) / [pdf](/videos/slides/pdf/05-local-models.pdf) | [Demo](/videos/demos/05-local-models/) | [Script](/videos/sessions/05-local-models.md) | [üì∫](https://www.youtube.com/watch?v=dLfNnoPv4AQ&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=6) |
| 6 | Get started with AI for free using Phi-3 | Experiments with Ollama and Phi-3 model directly from your browser. | [pptx](/videos/slides/06-playground.pptx) / [pdf](/videos/slides/pdf/06-playground.pdf) | [Demo](/videos/demos/06-playground/) | [Script](/videos/sessions/06-playground.md) | [üì∫](https://www.youtube.com/watch?v=Ds32MS9SHzU&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=7) |
| 7 | Introduction to Azure AI Foundry | Kickstart your journey with Azure AI Foundry. | [pptx](/videos/slides/07-ai-foundry.pptx) / [pdf](/videos/slides/pdf/07-ai-foundry.pdf) | [Demo](/videos/demos/07-ai-foundry/) | [Script](/videos/sessions/07-ai-foundry.md) | [üì∫](https://www.youtube.com/watch?v=9Mo-VOGk8ng&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=8) |
| 8 | Building Generative AI Apps with Azure Cosmos DB | Build generative AI apps with Azure Cosmos DB and vector search. | [pptx](/videos/slides/08-cosmos-db.pptx) / [pdf](/videos/slides/pdf/08-cosmos-db.pdf) | [Demo](/videos/demos/08-cosmos-db/) | [Script](/videos/sessions/08-cosmos-db.md) | [üì∫](https://www.youtube.com/watch?v=-GQyaLbeqxQ&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=9)  |
| 9 | Azure tools &amp; services for hosting and storing AI apps | Build, deploy, and scale AI applications using Azure tools. | [pptx](/videos/slides/09-azure-tools.pptx) / [pdf](/videos/slides/pdf/09-azure-tools.pdf) | - | [Script](/videos/sessions/09-azure-tools.md) | [üì∫](https://www.youtube.com/watch?v=WB6Fpzhwyug&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=10) |
| 10 | Streaming Generative AI output with the AI Chat Protocol | Integrate streaming easily into your apps with the AI Chat Protocol. | [pptx](/videos/slides/10-chat-protocol.pptx) / [pdf](/videos/slides/pdf/10-chat-protocol.pdf) | [Demo](/videos/demos/10-chat-protocol/) | [Script](/videos/sessions/10-chat-protocol.md) | [üì∫](https://www.youtube.com/watch?v=fzDCW-6hMtU&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=11) |

To see the full page of resources, go to this [video overview page](/videos/README.md).

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;üéí Other Courses&lt;/summary&gt;

- [Generative AI for Beginners](https://aka.ms/genai-beginners)
- [Generative AI for Beginners .NET](https://github.com/microsoft/Generative-AI-for-beginners-dotnet)
- [Generative AI with JavaScript](https://github.com/microsoft/generative-ai-with-javascript)
- [AI for Beginners](https://aka.ms/ai-beginners)
- [AI Agents for Beginners - A Course](https://github.com/microsoft/ai-agents-for-beginners)
- [Data Science for Beginners](https://aka.ms/datascience-beginners)
- [ML for Beginners](https://aka.ms/ml-beginners)
- [Cybersecurity for Beginners](https://github.com/microsoft/Security-101) 
- [Web Dev for Beginners](https://aka.ms/webdev-beginners)
- [IoT for Beginners](https://aka.ms/iot-beginners)
- [XR Development for Beginners](https://github.com/microsoft/xr-development-for-beginners)
- [Mastering GitHub Copilot for Paired Programming](https://github.com/microsoft/Mastering-GitHub-Copilot-for-Paired-Programming)
- [Mastering GitHub Copilot for C#/.NET Developers](https://github.com/microsoft/mastering-github-copilot-for-dotnet-csharp-developers)
- [Choose Your Own Copilot Adventure](https://github.com/microsoft/CopilotAdventures)
&lt;/details&gt;

You&#039;ll also find additional resources in the form of [tutorials, code samples and more](/docs/additional-resources.md).

## Responsible AI Disclaimer

&gt; [!IMPORTANT]
&gt; DISCLAIMER: This repository contains fictional content generated by AI. The historical characters depicted here are generating responses thanks to generative AI, which is based on training data. Any responses generated by these characters do not represent their actual views or quotes. This content is intended solely for entertainment purposes. [Microsoft Responsible AI principles here](https://www.microsoft.com/en-us/ai/principles-and-approach/)


## Interact with community

[![Azure AI Discord](https://dcbadge.limes.pink/api/server/kzRShWzttr)](https://discord.gg/kzRShWzttr)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[trekhleb/javascript-algorithms]]></title>
            <link>https://github.com/trekhleb/javascript-algorithms</link>
            <guid>https://github.com/trekhleb/javascript-algorithms</guid>
            <pubDate>Fri, 21 Mar 2025 00:04:39 GMT</pubDate>
            <description><![CDATA[üìù Algorithms and data structures implemented in JavaScript with explanations and links to further readings]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/trekhleb/javascript-algorithms">trekhleb/javascript-algorithms</a></h1>
            <p>üìù Algorithms and data structures implemented in JavaScript with explanations and links to further readings</p>
            <p>Language: JavaScript</p>
            <p>Stars: 190,564</p>
            <p>Forks: 30,570</p>
            <p>Stars today: 28 stars today</p>
            <h2>README</h2><pre># JavaScript Algorithms and Data Structures

&gt; üá∫üá¶ UKRAINE [IS BEING ATTACKED](https://war.ukraine.ua/) BY RUSSIAN ARMY. CIVILIANS ARE GETTING KILLED. RESIDENTIAL AREAS ARE GETTING BOMBED.
&gt; - Help Ukraine via:
&gt;   - [Serhiy Prytula Charity Foundation](https://prytulafoundation.org/en/)
&gt;   - [Come Back Alive Charity Foundation](https://savelife.in.ua/en/donate-en/)
&gt;   - [National Bank of Ukraine](https://bank.gov.ua/en/news/all/natsionalniy-bank-vidkriv-spetsrahunok-dlya-zboru-koshtiv-na-potrebi-armiyi)
&gt; - More info on [war.ukraine.ua](https://war.ukraine.ua/) and [MFA of Ukraine](https://twitter.com/MFA_Ukraine)

&lt;hr/&gt;

[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)
[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)
![repo size](https://img.shields.io/github/repo-size/trekhleb/javascript-algorithms.svg)

This repository contains JavaScript based examples of many
popular algorithms and data structures.

Each algorithm and data structure has its own separate README
with related explanations and links for further reading (including ones
to YouTube videos).

_Read this in other languages:_
[_ÁÆÄ‰Ωì‰∏≠Êñá_](README.zh-CN.md),
[_ÁπÅÈ´î‰∏≠Êñá_](README.zh-TW.md),
[_ÌïúÍµ≠Ïñ¥_](README.ko-KR.md),
[_Êó•Êú¨Ë™û_](README.ja-JP.md),
[_Polski_](README.pl-PL.md),
[_Fran√ßais_](README.fr-FR.md),
[_Espa√±ol_](README.es-ES.md),
[_Portugu√™s_](README.pt-BR.md),
[_–†—É—Å—Å–∫–∏–π_](README.ru-RU.md),
[_T√ºrk√ße_](README.tr-TR.md),
[_Italiano_](README.it-IT.md),
[_Bahasa Indonesia_](README.id-ID.md),
[_–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞_](README.uk-UA.md),
[_Arabic_](README.ar-AR.md),
[_Ti·∫øng Vi·ªát_](README.vi-VN.md),
[_Deutsch_](README.de-DE.md),
[_Uzbek_](README.uz-UZ.md),
[_◊¢◊ë◊®◊ô◊™_](README.he-IL.md)

*‚òù Note that this project is meant to be used for learning and researching purposes
only, and it is **not** meant to be used for production.*

## Data Structures

A data structure is a particular way of organizing and storing data in a computer so that it can
be accessed and modified efficiently. More precisely, a data structure is a collection of data
values, the relationships among them, and the functions or operations that can be applied to
the data.

Remember that each data has its own trade-offs. And you need to pay attention more to why you&#039;re choosing a certain data structure than to how to implement it.

`B` - Beginner, `A` - Advanced

* `B` [Linked List](src/data-structures/linked-list)
* `B` [Doubly Linked List](src/data-structures/doubly-linked-list)
* `B` [Queue](src/data-structures/queue)
* `B` [Stack](src/data-structures/stack)
* `B` [Hash Table](src/data-structures/hash-table)
* `B` [Heap](src/data-structures/heap) - max and min heap versions
* `B` [Priority Queue](src/data-structures/priority-queue)
* `A` [Trie](src/data-structures/trie)
* `A` [Tree](src/data-structures/tree)
  * `A` [Binary Search Tree](src/data-structures/tree/binary-search-tree)
  * `A` [AVL Tree](src/data-structures/tree/avl-tree)
  * `A` [Red-Black Tree](src/data-structures/tree/red-black-tree)
  * `A` [Segment Tree](src/data-structures/tree/segment-tree) - with min/max/sum range queries examples
  * `A` [Fenwick Tree](src/data-structures/tree/fenwick-tree) (Binary Indexed Tree)
* `A` [Graph](src/data-structures/graph) (both directed and undirected)
* `A` [Disjoint Set](src/data-structures/disjoint-set) - a union‚Äìfind data structure or merge‚Äìfind set
* `A` [Bloom Filter](src/data-structures/bloom-filter)
* `A` [LRU Cache](src/data-structures/lru-cache/) - Least Recently Used (LRU) cache

## Algorithms

An algorithm is an unambiguous specification of how to solve a class of problems. It is
a set of rules that precisely define a sequence of operations.

`B` - Beginner, `A` - Advanced

### Algorithms by Topic

* **Math**
  * `B` [Bit Manipulation](src/algorithms/math/bits) - set/get/update/clear bits, multiplication/division by two, make negative etc.
  * `B` [Binary Floating Point](src/algorithms/math/binary-floating-point) - binary representation of the floating-point numbers.
  * `B` [Factorial](src/algorithms/math/factorial)
  * `B` [Fibonacci Number](src/algorithms/math/fibonacci) - classic and closed-form versions
  * `B` [Prime Factors](src/algorithms/math/prime-factors) - finding prime factors and counting them using Hardy-Ramanujan&#039;s theorem
  * `B` [Primality Test](src/algorithms/math/primality-test) (trial division method)
  * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)
  * `B` [Least Common Multiple](src/algorithms/math/least-common-multiple) (LCM)
  * `B` [Sieve of Eratosthenes](src/algorithms/math/sieve-of-eratosthenes) - finding all prime numbers up to any given limit
  * `B` [Is Power of Two](src/algorithms/math/is-power-of-two) - check if the number is power of two (naive and bitwise algorithms)
  * `B` [Pascal&#039;s Triangle](src/algorithms/math/pascal-triangle)
  * `B` [Complex Number](src/algorithms/math/complex-number) - complex numbers and basic operations with them
  * `B` [Radian &amp; Degree](src/algorithms/math/radian) - radians to degree and backwards conversion
  * `B` [Fast Powering](src/algorithms/math/fast-powering)
  * `B` [Horner&#039;s method](src/algorithms/math/horner-method) - polynomial evaluation
  * `B` [Matrices](src/algorithms/math/matrix) - matrices and basic matrix operations (multiplication, transposition, etc.)
  * `B` [Euclidean Distance](src/algorithms/math/euclidean-distance) - distance between two points/vectors/matrices
  * `A` [Integer Partition](src/algorithms/math/integer-partition)
  * `A` [Square Root](src/algorithms/math/square-root) - Newton&#039;s method
  * `A` [Liu Hui œÄ Algorithm](src/algorithms/math/liu-hui) - approximate œÄ calculations based on N-gons
  * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - decompose a function of time (a signal) into the frequencies that make it up
* **Sets**
  * `B` [Cartesian Product](src/algorithms/sets/cartesian-product) - product of multiple sets
  * `B` [Fisher‚ÄìYates Shuffle](src/algorithms/sets/fisher-yates) - random permutation of a finite sequence
  * `A` [Power Set](src/algorithms/sets/power-set) - all subsets of a set (bitwise, backtracking, and cascading solutions)
  * `A` [Permutations](src/algorithms/sets/permutations) (with and without repetitions)
  * `A` [Combinations](src/algorithms/sets/combinations) (with and without repetitions)
  * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS)
  * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence)
  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence) (SCS)
  * `A` [Knapsack Problem](src/algorithms/sets/knapsack-problem) - &quot;0/1&quot; and &quot;Unbound&quot; ones
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray) - &quot;Brute Force&quot; and &quot;Dynamic Programming&quot; (Kadane&#039;s) versions
  * `A` [Combination Sum](src/algorithms/sets/combination-sum) - find all combinations that form specific sum
* **Strings**
  * `B` [Hamming Distance](src/algorithms/string/hamming-distance) - number of positions at which the symbols are different
  * `B` [Palindrome](src/algorithms/string/palindrome) - check if the string is the same in reverse
  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - minimum edit distance between two sequences
  * `A` [Knuth‚ÄìMorris‚ÄìPratt Algorithm](src/algorithms/string/knuth-morris-pratt) (KMP Algorithm) - substring search (pattern matching)
  * `A` [Z Algorithm](src/algorithms/string/z-algorithm) - substring search (pattern matching)
  * `A` [Rabin Karp Algorithm](src/algorithms/string/rabin-karp) - substring search
  * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring)
  * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching)
* **Searches**
  * `B` [Linear Search](src/algorithms/search/linear-search)
  * `B` [Jump Search](src/algorithms/search/jump-search) (or Block Search) - search in sorted array
  * `B` [Binary Search](src/algorithms/search/binary-search) - search in sorted array
  * `B` [Interpolation Search](src/algorithms/search/interpolation-search) - search in uniformly distributed sorted array
* **Sorting**
  * `B` [Bubble Sort](src/algorithms/sorting/bubble-sort)
  * `B` [Selection Sort](src/algorithms/sorting/selection-sort)
  * `B` [Insertion Sort](src/algorithms/sorting/insertion-sort)
  * `B` [Heap Sort](src/algorithms/sorting/heap-sort)
  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)
  * `B` [Quicksort](src/algorithms/sorting/quick-sort) - in-place and non-in-place implementations
  * `B` [Shellsort](src/algorithms/sorting/shell-sort)
  * `B` [Counting Sort](src/algorithms/sorting/counting-sort)
  * `B` [Radix Sort](src/algorithms/sorting/radix-sort)
  * `B` [Bucket Sort](src/algorithms/sorting/bucket-sort)
* **Linked Lists**
  * `B` [Straight Traversal](src/algorithms/linked-list/traversal)
  * `B` [Reverse Traversal](src/algorithms/linked-list/reverse-traversal)
* **Trees**
  * `B` [Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)
  * `B` [Breadth-First Search](src/algorithms/tree/breadth-first-search) (BFS)
* **Graphs**
  * `B` [Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)
  * `B` [Breadth-First Search](src/algorithms/graph/breadth-first-search) (BFS)
  * `B` [Kruskal‚Äôs Algorithm](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - finding the shortest paths to all graph vertices from single vertex
  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - finding the shortest paths to all graph vertices from single vertex
  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - find the shortest paths between all pairs of vertices
  * `A` [Detect Cycle](src/algorithms/graph/detect-cycle) - for both directed and undirected graphs (DFS and Disjoint Set based versions)
  * `A` [Prim‚Äôs Algorithm](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Topological Sorting](src/algorithms/graph/topological-sorting) - DFS method
  * `A` [Articulation Points](src/algorithms/graph/articulation-points) - Tarjan&#039;s algorithm (DFS based)
  * `A` [Bridges](src/algorithms/graph/bridges) - DFS based algorithm
  * `A` [Eulerian Path and Eulerian Circuit](src/algorithms/graph/eulerian-path) - Fleury&#039;s algorithm - Visit every edge exactly once
  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once
  * `A` [Strongly Connected Components](src/algorithms/graph/strongly-connected-components) - Kosaraju&#039;s algorithm
  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city
* **Cryptography**
  * `B` [Polynomial Hash](src/algorithms/cryptography/polynomial-hash) - rolling hash function based on polynomial
  * `B` [Rail Fence Cipher](src/algorithms/cryptography/rail-fence-cipher) - a transposition cipher algorithm for encoding messages
  * `B` [Caesar Cipher](src/algorithms/cryptography/caesar-cipher) - simple substitution cipher
  * `B` [Hill Cipher](src/algorithms/cryptography/hill-cipher) - substitution cipher based on linear algebra
* **Machine Learning**
  * `B` [NanoNeuron](https://github.com/trekhleb/nano-neuron) - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)
  * `B` [k-NN](src/algorithms/ml/knn) - k-nearest neighbors classification algorithm
  * `B` [k-Means](src/algorithms/ml/k-means) - k-Means clustering algorithm
* **Image Processing**
  * `B` [Seam Carving](src/algorithms/image-processing/seam-carving) - content-aware image resizing algorithm
* **Statistics**
  * `B` [Weighted Random](src/algorithms/statistics/weighted-random) - select the random item from the list based on items&#039; weights
* **Evolutionary algorithms**
  * `A` [Genetic algorithm](https://github.com/trekhleb/self-parking-car-evolution) - example of how the genetic algorithm may be applied for training the self-parking cars
* **Uncategorized**
  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)
  * `B` [Square Matrix Rotation](src/algorithms/uncategorized/square-matrix-rotation) - in-place algorithm
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game) - backtracking, dynamic programming (top-down + bottom-up) and greedy examples
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths) - backtracking, dynamic programming and Pascal&#039;s Triangle based examples
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem (dynamic programming and brute force versions)
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach to the top (4 solutions)
  * `B` [Best Time To Buy Sell Stocks](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - divide and conquer and one-pass examples
  * `B` [Valid Parentheses](src/algorithms/stack/valid-parentheses) - check if a string has valid parentheses (using stack)
  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)
  * `A` [Knight&#039;s Tour](src/algorithms/uncategorized/knight-tour)

### Algorithms by Paradigm

An algorithmic paradigm is a generic method or approach which underlies the design of a class
of algorithms. It is an abstraction higher than the notion of an algorithm, just as an
algorithm is an abstraction higher than a computer program.

* **Brute Force** - look at all the possibilities and selects the best solution
  * `B` [Linear Search](src/algorithms/search/linear-search)
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach the top
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city
  * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - decompose a function of time (a signal) into the frequencies that make it up
* **Greedy** - choose the best option at the current time, without any consideration for the future
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `A` [Unbound Knapsack Problem](src/algorithms/sets/knapsack-problem)
  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - finding the shortest path to all graph vertices
  * `A` [Prim‚Äôs Algorithm](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Kruskal‚Äôs Algorithm](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph
* **Divide and Conquer** - divide the problem into smaller parts and then solve those parts
  * `B` [Binary Search](src/algorithms/search/binary-search)
  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)
  * `B` [Pascal&#039;s Triangle](src/algorithms/math/pascal-triangle)
  * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)
  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)
  * `B` [Quicksort](src/algorithms/sorting/quick-sort)
  * `B` [Tree Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)
  * `B` [Graph Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)
  * `B` [Matrices](src/algorithms/math/matrix) - generating and traversing the matrices of different shapes
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Fast Powering](src/algorithms/math/fast-powering)
  * `B` [Best Time To Buy Sell Stocks](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - divide and conquer and one-pass examples
  * `A` [Permutations](src/algorithms/sets/permutations) (with and without repetitions)
  * `A` [Combinations](src/algorithms/sets/combinations) (with and without repetitions)
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
* **Dynamic Programming** - build up a solution using previously found sub-solutions
  * `B` [Fibonacci Number](src/algorithms/math/fibonacci)
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach the top
  * `B` [Seam Carving](src/algorithms/image-processing/seam-carving) - content-aware image resizing algorithm
  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - minimum edit distance between two sequences
  * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS)
  * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring)
  * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence)
  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence)
  * `A` [0/1 Knapsack Problem](src/algorithms/sets/knapsack-problem)
  * `A` [Integer Partition](src/algorithms/math/integer-partition)
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - finding the shortest path to all graph vertices
  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - find the shortest paths between all pairs of vertices
  * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching)
* **Backtracking** - similarly to brute force, try to generate all possible solutions, but each time you generate the next solution, you test
if it satisfies all conditions and only then continue generating subsequent solutions. Otherwise, backtrack and go on a
different path to finding a solution. Normally the DFS traversal of state-space is being used.
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)
  * `B` [Power Set](src/algorithms/sets/power-set) - all subsets of a set
  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once
  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)
  * `A` [Knight&#039;s Tour](src/algorithms/uncategorized/knight-tour)
  * `A` [Combination Sum](src/algorithms/sets/combination-sum) - find all combinations that form specific sum
* **Branch &amp; Bound** - remember the lowest-cost solution found at each stage of the backtracking
search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of
a least-cost solution to the problem in order to discard partial solutions with costs larger than the
lowest-cost solution found so far. Normally, BFS traversal in combination with DFS traversal of state-space
tree is being used.

## How to use this repository

**Install all dependencies**

```
npm install
```

**Run ESLint**

You may want to run it to check code quality.

```
npm run lint
```

**Run all tests**

```
npm test
```

**Run tests by name**

```
npm test -- &#039;LinkedList&#039;
```

**Troubleshooting**

If linting or testing is failing, try to delete the `node_modules` folder and re-install npm packages:

```
rm -rf ./node_modules
npm i
```

Also, make sure that you&#039;re using the correct Node version (`&gt;=16`). If you&#039;re using [nvm](https://github.com/nvm-sh/nvm) for Node version management you may run `nvm use` from the root folde

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mailcow/mailcow-dockerized]]></title>
            <link>https://github.com/mailcow/mailcow-dockerized</link>
            <guid>https://github.com/mailcow/mailcow-dockerized</guid>
            <pubDate>Fri, 21 Mar 2025 00:04:38 GMT</pubDate>
            <description><![CDATA[mailcow: dockerized - üêÆ + üêã = üíï]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mailcow/mailcow-dockerized">mailcow/mailcow-dockerized</a></h1>
            <p>mailcow: dockerized - üêÆ + üêã = üíï</p>
            <p>Language: JavaScript</p>
            <p>Stars: 9,861</p>
            <p>Forks: 1,275</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre># mailcow: dockerized - üêÆ + üêã = üíï

[![Translation status](https://translate.mailcow.email/widgets/mailcow-dockerized/-/translation/svg-badge.svg)](https://translate.mailcow.email/engage/mailcow-dockerized/)
[![Twitter URL](https://img.shields.io/twitter/url/https/twitter.com/mailcow_email.svg?style=social&amp;label=Follow%20%40mailcow_email)](https://twitter.com/mailcow_email)
![Mastodon Follow](https://img.shields.io/mastodon/follow/109388212176073348?domain=https%3A%2F%2Fmailcow.social&amp;label=Follow%20%40doncow%40mailcow.social&amp;link=https%3A%2F%2Fmailcow.social%2F%40doncow)


## Want to support mailcow?

Please [consider a support contract with Servercow](https://www.servercow.de/mailcow?lang=en#support) to support further development. _We_ support _you_ while _you_ support _us_. :)

You can also [get a SAL](https://www.servercow.de/mailcow?lang=en#sal) which is a one-time payment with no liabilities or returning fees.

Or just spread the word: moo.

## Info, documentation and support

Please see [the official documentation](https://docs.mailcow.email/) for installation and support instructions. üêÑ

üêõ **If you found a critical security issue, please mail us to [info at servercow.de](mailto:info@servercow.de).**

## Cowmunity

[mailcow community](https://community.mailcow.email)

[Telegram mailcow channel](https://telegram.me/mailcow)

[Telegram mailcow Off-Topic channel](https://t.me/mailcowOfftopic)

[Official ùïè (Twitter) Account](https://twitter.com/mailcow_email)

[Official Mastodon Account](https://mailcow.social/@doncow)

Telegram desktop clients are available for [multiple platforms](https://desktop.telegram.org). You can search the groups history for keywords.

## Misc

**Important**: mailcow makes use of various open-source software. Please assure you agree with their license before using mailcow.
Any part of mailcow itself is released under **GNU General Public License, Version 3**.

mailcow is a registered word mark of The Infrastructure Company GmbH, Parkstr. 42, 47877 Willich, Germany.

The project is managed and maintained by The Infrastructure Company GmbH.

Originated from @andryyy (Andr√©)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[meshery/meshery]]></title>
            <link>https://github.com/meshery/meshery</link>
            <guid>https://github.com/meshery/meshery</guid>
            <pubDate>Fri, 21 Mar 2025 00:04:37 GMT</pubDate>
            <description><![CDATA[Meshery, the cloud native manager]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/meshery/meshery">meshery/meshery</a></h1>
            <p>Meshery, the cloud native manager</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,898</p>
            <p>Forks: 2,129</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>
&lt;p style=&quot;text-align:center;&quot; align=&quot;center&quot;&gt;&lt;a href=&quot;https://meshery.io&quot;&gt;&lt;picture&gt;
 &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-light-text-side.svg&quot;&gt;
 &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg&quot;&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg&quot;
alt=&quot;Meshery Logo&quot; width=&quot;70%&quot; /&gt;&lt;/picture&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://hub.docker.com/r/meshery/meshery&quot; alt=&quot;Docker pulls&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/docker/pulls/layer5/meshery.svg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/issues?q=is%3Aopen+is%3Aissue+archived%3Afalse+org%3Alayer5io+org%3Ameshery+org%3Aservice-mesh-performance+org%3Aservice-mesh-patterns+org%3A+label%3A%22help+wanted%22+&quot; alt=&quot;GitHub issues by-label&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/issues/layer5io/meshery/help%20wanted.svg?color=informational&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/meshery/meshery/blob/master/LICENSE&quot; alt=&quot;LICENSE&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/license/meshery/meshery?color=brightgreen&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://artifacthub.io/packages/helm/meshery/meshery&quot; alt=&quot;Artifact Hub Meshery&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/endpoint?color=brightgreen&amp;label=Helm%20Chart&amp;style=plastic&amp;url=https%3A%2F%2Fartifacthub.io%2Fbadge%2Frepository%2Fartifact-hub&quot; /&gt;&lt;/a&gt;  
&lt;a href=&quot;https://goreportcard.com/report/github.com/meshery/meshery&quot; alt=&quot;Go Report Card&quot;&gt;
  &lt;img src=&quot;https://goreportcard.com/badge/github.com/meshery/meshery&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/meshery/meshery/actions&quot; alt=&quot;Build Status&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/meshery/meshery/release-drafter.yml&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://bestpractices.coreinfrastructure.org/projects/3564&quot; alt=&quot;CLI Best Practices&quot;&gt;
  &lt;img src=&quot;https://bestpractices.coreinfrastructure.org/projects/3564/badge&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://meshery.io/community#discussion-forums&quot; alt=&quot;Discuss Users&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/discourse/users?label=discuss&amp;logo=discourse&amp;server=https%3A%2F%2Fdiscuss.layer5.io&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://slack.meshery.io&quot; alt=&quot;Join Slack&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/badge/Slack-@layer5.svg?logo=slack&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/intent/follow?screen_name=mesheryio&quot; alt=&quot;Twitter Follow&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/twitter/follow/mesheryio.svg?label=Follow+Meshery&amp;style=social&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/meshery/meshery/releases&quot; alt=&quot;Meshery Downloads&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/downloads/meshery/meshery/total&quot; /&gt;&lt;/a&gt;  
&lt;a href=&quot;https://gurubase.io/g/meshery&quot; alt=&quot;Meshery Guru&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/badge/Gurubase-Ask%20Meshery%20Guru-006BFF&quot; /&gt;&lt;/a&gt; 
&lt;!-- &lt;a href=&quot;https://app.fossa.com/projects/git%2Bgithub.com%2Fmeshery%2Fmeshery?ref=badge_shield&quot; alt=&quot;License Scan Report&quot;&gt;
  &lt;img src=&quot;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fmeshery%2Fmeshery.svg?type=shield&quot;/&gt;&lt;/a&gt;  
  --&gt;
&lt;/p&gt;

&lt;h5&gt;&lt;p align=&quot;center&quot;&gt;&lt;i&gt;If you like Meshery, please &lt;a href=&quot;https://github.com/meshery/meshery/stargazers&quot;&gt;‚òÖ&lt;/a&gt; this repository to show your support! ü§©&lt;/i&gt;&lt;/p&gt;&lt;/h5&gt;
&lt;p align=&quot;center&quot; &gt;
MESHERY IS A CLOUD NATIVE COMPUTING FOUNDATION PROJECT
&lt;/p&gt;

&lt;div align=&quot;center&quot; width=&quot;100%&quot;&gt;
&lt;img src=&quot;.github/assets/images/readme/cncf-white.svg#gh-dark-mode-only&quot; width=&quot;30%&quot; align=&quot;center&quot; /&gt;
&lt;img src=&quot;.github/assets/images/readme/cncf-black.svg#gh-light-mode-only&quot; width=&quot;30%&quot; align=&quot;center&quot; /&gt;
&lt;/div&gt;
&lt;br /&gt;
&lt;p align=&quot;center&quot;&gt;
A self-service engineering platform, &lt;a href=&quot;https://meshery.io&quot;&gt;Meshery&lt;/a&gt;, is the open source, cloud native manager that enables the design and management of all Kubernetes-based infrastructure and applications (multi-cloud). Among other features,  As an extensible platform, Meshery offers visual and collaborative GitOps, freeing you from the chains of YAML while managing Kubernetes multi-cluster deployments.
&lt;/p&gt;
&lt;br /&gt;

&lt;div align=&quot;center&quot; width=&quot;100%&quot;&gt;
 &lt;a href=&quot;https://youtu.be/Do7htKrRzDA&quot;&gt;&lt;img src=&quot;.github/assets/images/readme/thumbnail.png&quot; width=&quot;800px&quot; /&gt;&lt;/a&gt;
 &lt;p&gt;&lt;i&gt;Example extension. See other &lt;a href=&quot;https://meshery.io/extensions&quot;&gt;Meshery Extensions&lt;/a&gt;.&lt;/i&gt;&lt;/p&gt;
 &lt;br /&gt;Try Meshery in the &lt;a href=&quot;https://play.meshery.io&quot;&gt;Cloud Native Playground&lt;/a&gt; (&lt;a href=&quot;https://www.youtube.com/watch?v=034nVaQUyME&amp;list=PL3A-A6hPO2IO_yzN83wSJJUNQActzCJvO&amp;index=9&quot;&gt;teaser video&lt;/a&gt;)
&lt;/div&gt;

&lt;br /&gt;
&lt;!--
- [Functionality](#functionality)
  - [Meshery Architecture](#meshery-architecture)
  - [Join the Meshery community!](#join-the-meshery-community)
  - [Contributing](#contributing)
    - [Stargazers](#stargazers)
    - [License](#license)
--&gt;
&lt;!-- &lt;p style=&quot;clear:both;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;a href=&quot;https://meshery.io&quot;&gt;&lt;picture&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-light-text-side.svg&quot;&gt;
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg&quot;&gt;
  &lt;img alt=&quot;Meshery - the Cloud Native Manager&quot; src=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg&quot; align=&quot;left&quot; width=&quot;45%&quot;&gt;
  &lt;/picture&gt;&lt;/a&gt; 
&lt;a href=&quot;https://meshery.io&quot;&gt;
&lt;h3 style=&quot;margin:auto;&quot;&gt;&lt;br /&gt;&lt;br /&gt;
  &lt;a href=&quot;https://docs.google.com/presentation/d/14kxjwYSJ_FyE3K_6CDEd6oq2kqwn0OSE8RDJ4H-KlKU/edit?usp=sharing&quot;&gt;&lt;center&gt;&lt;i&gt;Project Overview Presentation&lt;/i&gt;&lt;/center&gt;&lt;/a&gt;
  &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
&lt;/h3&gt; --&gt;
&lt;p style=&quot;clear:both;&quot;&gt;&amp;nbsp;&lt;/p&gt;

# Functionality&lt;a name=&quot;functionality&quot;&gt;&lt;/a&gt;

&lt;p style=&quot;clear:both;&quot;&gt;
&lt;h2&gt;Cloud Native Lifecycle Management&lt;/h2&gt;
Meshery manages the provisioning, configuration and operation of your Kubernetes clusters while supporting hundreds of different types of cloud native infrastructure integrations. Meshery also offers a &lt;a href=&quot;https://meshery.io/catalog&quot;&gt;catalog of curated design templates&lt;/a&gt; filled with configuration best practices.

&lt;!--
&lt;a href=&quot;https://www.youtube.com/watch?v=034nVaQUyME&quot;&gt;&lt;img alt=&quot;Meshery cloud native management&quot; src=&quot;https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshmap.gif&quot;  style=&quot;margin-left:10px; margin-bottom:10px;&quot; width=&quot;100%&quot; align=&quot;center&quot; /&gt;&lt;/a&gt;
&lt;br /&gt;&lt;br /&gt;--&gt;
&lt;/p&gt;


Using a GitOps-centric approach, visually and collaboratively design and manage your infrastructure and microservices. Extend Meshery as your self-service engineering platform by taking advantage of its [vast set of extensibility features](https://docs.meshery.io/extensibility), including gRPC adapters, hot-loadable Reactjs packages and Golang plugins, subscriptions on NATS topics, consumable _and_ extendable API interfaces via REST and GraphQL. 

&lt;img src =&quot;https://meshery.io/assets/images/screens/multi-cluster-management.gif&quot;&gt;

&lt;p style=&quot;clear:both;&quot;&gt;
 
&lt;h2&gt;Multi-Cluster Kubernetes, Multi-Cloud, and Cloud Native Configuration Management&lt;/h2&gt;
&lt;p&gt;Meshery supports &lt;a href=&quot;https://meshery.io/integrations&quot;&gt;300+ integrations&lt;/a&gt;.&lt;/p&gt;

&lt;!-- 
&lt;h3&gt;&lt;a name=&quot;iac&quot;&gt;&lt;/a&gt;Supported Cloud Native Infrastructure and Applications&lt;/h3&gt;

&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;See all of Meshery&#039;s pluggable adapters&lt;/strong&gt;&lt;/summary&gt;
&lt;div class=&quot;container flex&quot;&gt;
  &lt;div class=&quot;text editable&quot;&gt;
    &lt;p&gt;Meshery adapters provision, configure, and manage their respective cloud native infrastructure.
      &lt;table class=&quot;adapters&quot;&gt;
        &lt;thead style=&quot;display:none;&quot;&gt;
          &lt;th&gt;Status&lt;/th&gt;
          &lt;th&gt;Adapter&lt;/th&gt;
        &lt;/thead&gt;
        &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td style=&quot;width:30%&quot; rowspan=&quot;11&quot; class=&quot;stable-adapters&quot;&gt;stable&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;&lt;a href=&quot;https://github.com/layer5io/meshery-istio&quot;&gt;
            &lt;img src=&#039;https://docs.meshery.io/assets/img/service-meshes/istio.svg&#039; alt=&#039;Meshery Adapter for Istio Service Mesh&#039; align=&quot;middle&quot; hspace=&quot;10px&quot; vspace=&quot;5px&quot; height=&quot;30px&quot; /&gt; Meshery adapter for Istio&lt;/a&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;&lt;a href=&quot;https://github.com/meshery/meshery-linkerd&quot;&gt;
            &lt;img src=&#039;https://docs.meshery.io/assets/img/service-meshes/linkerd.svg&#039; alt=&#039;Linkerd&#039; align=&quot;middle&quot; hspace=&quot;5px&quot; vspace=&quot;5px&quot; height=&quot;30px&quot; width=&quot;30px&quot; /&gt; Meshery adapter for Linkerd&lt;/a&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;&lt;a href=&quot;https://github.com/meshery/meshery-cilium&quot;&gt;
            &lt;img src=&#039;https://docs.meshery.io/assets/img/service-meshes/cilium.svg&#039; alt=&#039;Cilium Service mesh&#039; align=&quot;middle&quot; hspace=&quot;5px&quot; vspace=&quot;5px&quot; height=&quot;30px&quot; width=&quot;30px&quot; /&gt;Meshery Adapter for Cilium Service Mesh&lt;/a&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;&lt;a href=&quot;https://github.com/layer5io/meshery-consul&quot;&gt;
            &lt;img src=&#039;https://docs.meshery.io/assets/img/service-meshes/consul.svg&#039; alt=&#039;Consul Connect&#039; align=&quot;middle&quot; hspace=&quot;5px&quot; vspace=&quot;5px&quot; height=&quot;30px&quot; width=&quot;30px&quot; /&gt; Meshery adapter for Consul&lt;/a&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;&lt;a href=&quot;https://github.com/layer5io/meshery-octarine&quot;&gt;
            &lt;img src=&#039;https://docs.meshery.io/assets/img/service-meshes/octarine.svg&#039; alt=&#039;Octarine Service Mesh&#039; align=&quot;middle&quot; hspace=&quot;5px&quot; vspace=&quot;5px&quot; height=&quot;30px&quot; width=&quot;30px&quot; /&gt;Meshery adapter for Octarine**&lt;/a&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;&lt;a href=&quot;https://github.com/layer5io/meshery-nsm&quot;&gt;
            &lt;img src=&#039;https://docs.meshery.io/assets/img/service-meshes/nsm.svg&#039; alt=&#039;Network Mesh&#039; align=&quot;middle&quot; hspace=&quot;5px&quot; vspace=&quot;5px&quot; height=&quot;30px&quot; width=&quot;30px&quot; /&gt;Meshery adapter for Network Service Mesh&lt;/a&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
         &lt;tr&gt;
           &lt;td&gt;&lt;a href=&quot;https://github.com/layer5io/meshery-kuma&quot;&gt;
             &lt;img src=&#039;https://docs.meshery.io/assets/img/service-meshes/kuma.svg&#039; alt=&#039;Kuma Service Mesh&#039; align=&quot;middle&quot; hspace=&quot;5px&quot; vspace=&quot;5px&quot; height=&quot;30px&quot; width=&quot;30px&quot; /&gt;Meshery adapter for Kuma&lt;/a&gt;
           &lt;/td&gt;
        &lt;/tr&gt;
          &lt;tr&gt;
          &lt;td&gt;&lt;a href=&quot;https://github.com/layer5io/meshery-osm&quot;&gt;
            &lt;img src=&#039;https://docs.meshery.io/assets/img/service-meshes/osm.svg&#039; alt=&#039;Open Service Mesh&#039; align=&quot;middle&quot; hspace=&quot;5px&quot; vspace=&quot;5px&quot; height=&quot;30px&quot; width=&quot;30px&quot; /&gt;Meshery adapter for Open Service Mesh&lt;/a&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;&lt;a href=&quot;https://github.com/layer5io/meshery-traefik-mesh&quot;&gt;
            &lt;img src=&#039;https://docs.meshery.io/assets/img/service-meshes/traefik-mesh.svg&#039; alt=&#039;Traefik Service Mesh&#039; align=&quot;middle&quot; hspace=&quot;5px&quot; vspace=&quot;5px&quot; height=&quot;30px&quot; width=&quot;30px&quot; /&gt;Meshery adapter for Traefik Mesh&lt;/a&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;&lt;a href=&quot;https://github.com/meshery/meshery-nginx-sm&quot;&gt;
            &lt;img src=&#039;https://docs.meshery.io/assets/img/service-meshes/nginx-sm.svg&#039; alt=&#039;NGINX Service Mesh&#039; align=&quot;middle&quot; hspace=&quot;5px&quot; vspace=&quot;5px&quot; height=&quot;30px&quot; width=&quot;30px&quot; /&gt;Meshery adapter for NGINX Service Mesh&lt;/a&gt;
          &lt;/td&gt;
        &lt;/tr&gt;          
        &lt;tr&gt;&lt;td colspan=&quot;2&quot; class=&quot;stable-adapters&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;
          &lt;td rowspan=&quot;3&quot; class=&quot;beta-adapters&quot;&gt;beta&lt;/td&gt;
        &lt;/tr&gt;
         &lt;tr&gt;
          &lt;td&gt;&lt;a href=&quot;https://github.com/layer5io/meshery-cpx&quot;&gt;
            &lt;img src=&#039;https://docs.meshery.io/assets/img/service-meshes/citrix.svg&#039; alt=&#039;Citrix CPX Service Mesh&#039; align=&quot;middle&quot; hspace=&quot;5px&quot; vspace=&quot;5px&quot; height=&quot;30px&quot; width=&quot;30px&quot; /&gt;Meshery adapter for Citrix CPX**&lt;/a&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;&lt;a href=&quot;https://github.com/meshery/meshery-app-mesh&quot;&gt;
            &lt;img src=&#039;https://docs.meshery.io/assets/img/service-meshes/app-mesh.svg&#039; alt=&#039;AWS App Mesh Service Mesh&#039; align=&quot;middle&quot; hspace=&quot;5px&quot; vspace=&quot;5px&quot; height=&quot;30px&quot; width=&quot;30px&quot; /&gt;Meshery adapter for App Mesh&lt;/a&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;&lt;td colspan=&quot;2&quot; class=&quot;beta-adapters&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;
          &lt;td rowspan=&quot;3&quot; class=&quot;alpha-adapters&quot;&gt;alpha&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;&lt;a href=&quot;https://github.com/meshery/meshery-tanzu-sm&quot;&gt;
            &lt;img src=&#039;https://docs.meshery.io/assets/img/service-meshes/tanzu.svg&#039; alt=&#039;Tanzu Service Mesh&#039; align=&quot;middle&quot; hspace=&quot;5px&quot; vspace=&quot;5px&quot; height=&quot;30px&quot; width=&quot;30px&quot; /&gt;Meshery adapter for Tanzu SM&lt;/a&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;&lt;td colspan=&quot;2&quot; class=&quot;alpha-adapters&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
   ** Deprecated
  &lt;/p&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;p style=&quot;clear:both;&quot;&gt;&amp;nbsp;&lt;/p&gt; --&gt;

Assess your cloud native infrastructure configuration against deployment and operational best practices with Meshery&#039;s configuration validator. Manage your workloads with confidence. Check your Kubernetes configuration for anti-patterns and avoid common pitfalls.

&lt;a href=&quot;.github/assets/images/readme/cloud-native-integrations.png&quot;&gt;&lt;img alt=&quot;Meshery Integrations&quot; src=&quot;.github/assets/images/readme/cloud-native-integrations.png&quot;  style=&quot;margin-right:10px;margin-bottom:10px;&quot; width=&quot;100%&quot; align=&quot;center&quot;/&gt;&lt;/a&gt;
&lt;br /&gt;&lt;br /&gt;

&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;p style=&quot;clear:both;&quot;&gt;

&lt;img alt=&quot;OPA Logo&quot; src=&quot;.github/assets/images/readme/opa-logo.svg&quot; style=&quot;margin-right:10px;&quot; width=&quot;10%&quot; align=&quot;left&quot; /&gt;
&lt;h3&gt;Context-Aware Policies For Applications&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;p&gt;Leverage built-in relationships to enforce configuration best practices consistently from code to Kubernetes. Configure your infrastructure with confidence without needing to know or write Open Policy Agent&#039;s Rego query language.
&lt;img alt=&quot;Meshery and Open Policy Agent Integration&quot; src=&quot;.github/assets/images/readme/meshery-policies-2.png&quot; style=&quot;margin-right:10px;&quot; width=&quot;50%&quot; /&gt;
&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;p style=&quot;clear:both;&quot;&gt;

&lt;h3&gt;Visually and collaboratively manage your infrastructure&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;p&gt;Meshery uses &lt;a href=&quot;https://docs.meshery.io/concepts/logical/relationships&quot;&gt;relationships&lt;/a&gt; to define how and when components interrelate with one another. Meshery supports a variety of relationships between components. These relationships are categorized into two types: semantic and non-semantic.&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;

&lt;h3&gt;Manage your connections with Environments&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt;  &lt;img src=&quot;.github/assets/images/readme/environments.gif&quot; width=&quot;50%&quot;
                        alt=&quot;Multi-cluster Kubernetes Manager&quot; loading=&quot;lazy&quot; /&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.meshery.io/concepts/logical/environments&quot;&gt;Environments&lt;/a&gt;  make it easier for you to manage, share, and work with a collection of resources as a group, instead of dealing with all your Connections and Credentials on an individual basis.&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;


&lt;h3&gt;Workspaces: Your team&#039;s Google Drive for cloud native projects&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt; &lt;img src=&quot;.github/assets/images/readme/workspace.gif&quot; width=&quot;50%&quot;
                        alt=&quot;Multi-cluster Kubernetes Manager&quot; loading=&quot;lazy&quot; /&gt;
&lt;p&gt;Workspaces let you organize your work and serve as the central point of collaboration for you and your teams and point of access control to Environments and their resources.&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;


&lt;!-- &lt;img alt=&quot;WebAssembly Logo&quot; src=&quot;https://docs.meshery.io/assets/img/readme/webassembly_logo.svg&quot; style=&quot;margin-right:10px;&quot; width=&quot;10%&quot; align=&quot;left&quot; /&gt; --&gt;

&lt;h3&gt; See changes to your infra before you merge&lt;/h3&gt;
&lt;p&gt;Get snapshots of your infrastructure directly in your PRs. Preview your deployment, view changes pull request-to-pull request and get infrastructure snapshots within your PRs by connecting Kanvas to your GitHub repositories.
&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;

&lt;h3&gt;Operate with configuration best practices&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;p&gt;Assess your configurations against deployment and operational best practices with Meshery&#039;s configuration validator.&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;

&lt;h3&gt;Control all of your infrastructure with mesheryctl&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;p&gt;Whether managing multiple Meshery deployments, importing designs, discoverying Kubernetes clusters, do so with ease using Meshery CLI in your terminal.&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;

&lt;h3&gt;Platform Engineering with Meshery&#039;s Extension Points&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;p&gt;Meshery includes both REST APIs and GraphQL APIs, pluggable adapters via gRPCs, hot-loadable ReactJS and hot-loadable Golang binaries. The great number of extension points in Meshery make it ideal as the foundation of your internal developer platform.
&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;

&lt;h3&gt;Access the Cloud Native Patterns for Kubernetes&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;img src = &quot;.github/assets/images/readme/smp-video-poster-play.png&quot;&gt;
&lt;p&gt;Design and manage all of your cloud native infrastructure using the design configurator in Meshery or start from a template using the patterns from the &lt;a href=&quot;https://meshery.io/catalog&quot;&gt;catalog&lt;/a&gt;
&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;

&lt;h2&gt;Performance Management&lt;/h2&gt;

&lt;details&gt;
 &lt;summary&gt;&lt;h3&gt;Manage infra performance with Performance Profiles&lt;/h3&gt;&lt;/summary&gt;
&lt;br /&gt;&lt;br /&gt;&lt;img src=&quot;.github/assets/images/readme/performance-metrics.gif&quot; class=&quot;screenshot&quot;
                    alt=&quot;Multi-cluster Kubernetes Manager&quot; loading=&quot;lazy&quot; /&gt;
&lt;p&gt;Create and reuse performance profiles for consistent characterization of the configuration of your infrastructure in context of how it performs.&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;

&lt;h3&gt;Manage the performance of your infrastructure and its workloads&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;img src = &quot;.github/assets/images/readme/service-mesh-performance-example.gif&quot;&gt;
&lt;p&gt;Baseline and track your cloud native performance from release to release.

- Use performance profiles to track the historical performance of your workloads.
- Track your application performance from version to version.
- Understand behavioral differences between cloud native network functions.
- Compare performance across infrastructure deployments.
&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;h3&gt;Load Generation and Microservice Performance Characteristization&lt;/h3&gt;&lt;/summary&gt;

&lt;picture align=&quot;left&quot;&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/layer5io/layer5/master/src/assets/images/service-mesh-performance/stacked/smp-light-text.svg&quot;  width=&quot;18%&quot; align=&quot;left&quot; style=&quot;margin-left:10px;&quot; /&gt;
  &lt;img alt=&quot;Shows an illustrated light mode meshery logo in light color mode and a dark mode meshery logo dark color mode.&quot; src=&quot;https://raw.githubusercontent.com/layer5io/layer5/master/src/assets/images/service-mesh-performance/stacked/smp-light-text.svg&quot; width=&quot;18%&quot; align=&quot;left&quot; style=&quot;margin-left:10px;&quot; /&gt;
&lt;/picture&gt;

Meshery offers load generation and performance characterization to help you assess and optimize the performance of your applications and infrastructure. Here&#039;s how it works: ¬† 

- **Multiple Load Generators:** Meshery supports various load generators, including Fortio, Wrk2, and Nighthawk, allowing users to choose the tool that best suits your needs. ¬† 
- **Configurable Performance Profiles:** Meshery provides a highly configurable set of load profiles with tunable facets, enabling users to generate TCP, gRPC, and HTTP load. You can customize parameters such as duration, concurrent threads, concurrent generators, and load generator type. Save your load test configurations as Performance Profiles, making it easy to rerun tests with the same settings and track performance variations over time.
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;h3&gt;Performance Characterization&lt;/h3&gt;&lt;/summary&gt;

- **Metrics Collection:** Meshery can connect to one or more Prometheus instances to gather telemetric data, including Kubernetes and application metrics. It also integrates with Grafana, allowing users to import existing dashboards and visualize performance data. ¬† 
- **Statistical Analysis:** Meshery performs statistical analysis on the results of performance tests, presenting data in the form of histograms with latency buckets. This helps users understand the distribution of response times and identify potential bottlenecks. ¬† 
- **Performance Test Profiles:** Meshery allows users to customize and save their load test co

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[NB-Group/NB_Music]]></title>
            <link>https://github.com/NB-Group/NB_Music</link>
            <guid>https://github.com/NB-Group/NB_Music</guid>
            <pubDate>Fri, 21 Mar 2025 00:04:36 GMT</pubDate>
            <description><![CDATA[A nearly perfect music player.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/NB-Group/NB_Music">NB-Group/NB_Music</a></h1>
            <p>A nearly perfect music player.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 150</p>
            <p>Forks: 16</p>
            <p>Stars today: 28 stars today</p>
            <h2>README</h2><pre># NB Music

![È°µÈù¢Êà™Âõæ](image.png)
![GitHub license](https://img.shields.io/github/license/NB-Group/NB_Music)
![GitHub last commit](https://img.shields.io/github/last-commit/NB-Group/NB_Music)
## ÁÆÄ‰ªã
Áî±NB-GroupÂíåUser782Tec‰∏§ÂêçÂàù‰∏≠ÁîüÂºÄÂèëÁöÑË∑®Âπ≥Âè∞Èü≥‰πêÊí≠ÊîæÂô®ÔºÅÊó†ÈúÄVIPÂ∞±ËÉΩÁïÖÂê¨ÂÖ®ÁΩëÈü≥‰πêÔºåÂõ†‰∏∫Êàë‰ª¨Áõ¥Êé•‰ªéÂìîÂì©ÂìîÂì©Ëé∑ÂèñÈü≥È¢ëËµÑÊ∫ê~ 
ËøôÈáåÊúâÔºö
- ÂÖ®ÁΩëÈü≥‰πêËá™Áî±Êí≠ÊîæÔºàÂåÖÊã¨ÂÖ∂‰ªñÂπ≥Âè∞Ë¶ÅVIPÁöÑÊ≠åÊõ≤ÔºÅÔºâ
- ‰∏ÄÈîÆÂØºÂÖ•BÁ´ôÊî∂ËóèÂ§πÂΩìÊ≠åÂçï
- Êô∫ËÉΩÊ≠åËØçÊçïÊçâÁ≥ªÁªüÔºàËá™Âä®ÂåπÈÖç+ÊâãÂä®Ë°•ÂÖ®Âèå‰øùÈô©Ôºâ

**Âàù‰∏≠Áîü„ÅÆÈªëÁßëÊäÄÂÆ£Ë®Ä**ÔºöÊàë‰ª¨Êâç‰∏çÊòØÂè™‰ºöÂÅöÈ¢òÁöÑÂ∞èÂèØÁà±ÔºÅÁî®Electron+ÂêÑÂ§ßAPIÔºåÂ∏¶‰Ω†‰ΩìÈ™åÁúüÊ≠£ÁöÑÁôΩÂ´ñÂê¨Ê≠åËá™Áî±œà(ÔΩÄ‚àá¬¥)œà

Âì¶ÔºåÂØπ‰∫ÜÔºÅÊàë‰ª¨Âü∫‰∫é‰ª•‰∏ãÂºÄÊ∫êÈ°πÁõÆÔºåÊÑüË∞¢‰ªñ‰ª¨ÔºÅ
- [neteasecloudmusicapi](https://gitlab.com/Binaryify/neteasecloudmusicapi) ÁΩëÊòì‰∫ëAPI(Github‰ªìÂ∫ìÂ∑≤ÁªèÂØÑ‰∫Ü)
- [BillBill Api Collect](https://github.com/SocialSisterYi/bilibili-API-collect) BÁ´ôAPI
---

## Áî®Êà∑ÊåáÂçó

### ‰∏ãËΩΩ
[Releases](https://github.com/NB-Group/NB_Music/releases)Êü•ÁúãÊúÄÊñ∞ÁâàÊú¨ÂñµÔºÅ
ËØùËØ¥Â∫îËØ•‰ºöÊúâËá™Âä®Êõ¥Êñ∞ÁöÑÔºå‰ª£Á†ÅÈáåÂÜô‰∫ÜÁöÑÔºàÔºâ
### ÁâπËâ≤ÂäüËÉΩËØ¥Êòé‰π¶
**BÁ´ôÁõ∏ÂÖ≥**  
- Êàë‰ª¨‰ªéBÁ´ôËá™Âä®ÊäìÂèñÊúÄÈ´òÈü≥Ë¥®ÁâàÊú¨ÔºàÊÇÑÊÇÑËØ¥ÔºöÁôªÂΩïÂ∏¶Â§ß‰ºöÂëòÁöÑË¥¶Âè∑ÊâçËÉΩÂê¨Hi-ResÁöÑQwQÔºâ
- Êî∂ËóèÂ§π‰∏ÄÈîÆÂØºÂÖ•Ê≠åÂçïÔºà‰∏ÄÁÇπËøÅÁßªÊàêÊú¨ÈÉΩÊ≤°ÊúâÂì¶Ôºâ

**Ê≠åËØçÁõ∏ÂÖ≥**
- ‰ªéÁΩëÊòì‰∫ëËá™Âä®ÊäìÂèñÊ≠åËØçÊçè„ÄÇ  
- Ëá™Âä®ÂåπÈÖçÊ≠åËØçÁöÑ‰∏çÂØπÔºü‰Ω†ÂèØ‰ª•ÊâãÂä®Ê≠åÂêçÔºàÁÑ∂ÂêéÊàë‰ª¨ÂÜçÂéªÂÖ®ÁΩëÊêúÂàÆ~ËÆ∞ÂæóÂú®ËÆæÁΩÆÈáåÊâìÂºÄÂì¶Ôºâ

**üõ†Ô∏è ÈÅáÂà∞ÈóÆÈ¢òÊÄé‰πàÂäûÔºü**  
- Ê≠åÊõ≤Âä†ËΩΩÂ§±Ë¥•‚ÜíÂ§öÁÇπÂá†Ê¨°Êí≠ÊîæÈîÆÔºàÊàë‰ª¨ÁöÑÈáçËØïÊú∫Âà∂Ë∂ÖÈ°ΩÂº∫ÔºÅÔºâ
- ÂÖ∂‰ªñbug‚ÜíÂØπÁùÄÂ±èÂπïËØ¥&quot;‰øÆÂ•ΩÂÆÉÔºÅ&quot;ÔºàÁÑ∂ÂêéÈáçÂêØÂ∫îÁî®Â∞±OKÂï¶~ÊâçÊÄ™ÔºÅË¶ÅËÆ∞ÂæóÂèçÈ¶àÁªôÊàë‰ª¨Âì¶Ôºâ
- ÂΩìÁÑ∂Ôºå‰øÆbugÊúÄÈáçË¶ÅÁöÑËøòÊòØÈáçÂêØÂ∫îÁî®Âï¶ÔºÅ

---

## ÂºÄÂèëËÄÖÊñáÊ°£

### Êû∂ÊûÑËÆæËÆ°


#### ÊäÄÊúØÊ†à

- üöÄ Electron - Ë∑®Âπ≥Âè∞Ê°åÈù¢Â∫îÁî®ÂºÄÂèëÊ°ÜÊû∂
- üéµ Html Dom API - Èü≥È¢ëÂ§ÑÁêÜ
- üé® ÂéüÁîü CSS - ÁïåÈù¢Ê†∑Âºè
- üì¶ Yarn - ÂåÖÁÆ°ÁêÜÂô®
- üîÑ GitHub Actions - CI/CD
#### Ê†∏ÂøÉÊ®°Âùó
```bash
‚îú‚îÄ‚îÄ  .git/                       # GitÁâàÊú¨ÊéßÂà∂Êñá‰ª∂Â§π
‚îú‚îÄ‚îÄ  .gitattributes               # GitÂ±ûÊÄßÈÖçÁΩÆ
‚îú‚îÄ‚îÄ  .github/                     # GitHubÂ∑•‰ΩúÊµÅÈÖçÁΩÆ
‚îÇ   ‚îú‚îÄ‚îÄ  workflows/               # CI/CDÂ∑•‰ΩúÊµÅÈÖçÁΩÆ
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  release.yml          # ÂèëÂ∏ÉÂ∑•‰ΩúÊµÅ
‚îú‚îÄ‚îÄ  .gitignore                   # GitÂøΩÁï•Êñá‰ª∂ÈÖçÁΩÆ
‚îú‚îÄ‚îÄ  .gitmodules                  # GitÂ≠êÊ®°ÂùóÈÖçÁΩÆ
‚îú‚îÄ‚îÄ  .prettierrc                  # PrettierÈÖçÁΩÆ
‚îú‚îÄ‚îÄ  .vscode/                     # VSCodeÈÖçÁΩÆÊñá‰ª∂Â§π
‚îÇ   ‚îú‚îÄ‚îÄ  launch.json              # Ë∞ÉËØïÈÖçÁΩÆÊñá‰ª∂
‚îú‚îÄ‚îÄ  LICENSE                      # È°πÁõÆËÆ∏ÂèØËØÅ
‚îú‚îÄ‚îÄ  README.md                    # È°πÁõÆËØ¥ÊòéÊñáÊ°£
‚îú‚îÄ‚îÄ  dist/                        # ÊûÑÂª∫ËæìÂá∫Êñá‰ª∂Â§π
‚îú‚îÄ‚îÄ  eslint.config.mjs            # ESLintÈÖçÁΩÆ
‚îú‚îÄ‚îÄ  icons/                       # È°πÁõÆÂõæÊ†áËµÑÊ∫ê
‚îÇ   ‚îú‚îÄ‚îÄ  NB Music.png             # Â∫îÁî®ÂõæÊ†á
‚îÇ   ‚îú‚îÄ‚îÄ  icon.icns                # macOSÂõæÊ†á
‚îÇ   ‚îú‚îÄ‚îÄ  icon.ico                 # WindowsÂõæÊ†á
‚îÇ   ‚îú‚îÄ‚îÄ  icon.png                 # PNGÊ†ºÂºèÂõæÊ†á
‚îú‚îÄ‚îÄ  image.png                    # Áî®‰∫éÂ±ïÁ§∫ÁöÑÂõæÁâá
‚îú‚îÄ‚îÄ  img/                         # È°πÁõÆÂõæÂÉèËµÑÊ∫ê
‚îÇ   ‚îú‚îÄ‚îÄ  NB_Music.png             # Â∞ÅÈù¢ÂõæÂÉè
‚îÇ   ‚îú‚îÄ‚îÄ  poster.jpeg              # Êµ∑Êä•ÂõæÂÉè
‚îú‚îÄ‚îÄ  package.json                 # È°πÁõÆ‰æùËµñÁÆ°ÁêÜ
‚îú‚îÄ‚îÄ  public/                      # ÂÖ¨ÂÖ±ËµÑÊ∫êÊñá‰ª∂Â§π
‚îú‚îÄ‚îÄ  src/                         # Ê∫ê‰ª£Á†ÅÊñá‰ª∂Â§π
‚îÇ   ‚îú‚îÄ‚îÄ  javascript/              # JavaScriptÊñá‰ª∂
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  AudioPlayer.js       # Èü≥È¢ëÊí≠ÊîæÂô®ÂäüËÉΩ
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  CacheManager.js      # ÁºìÂ≠òÁÆ°ÁêÜÂô®
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  FavoriteManager.js   # Êî∂ËóèÁÆ°ÁêÜÂô®
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  LoginManager.js      # ÁôªÂΩïÁÆ°ÁêÜÂô®
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  LyricsPlayer.js      # Ê≠åËØçÊí≠ÊîæÂô®
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  MusicSearcher.js     # Èü≥‰πêÊêúÁ¥¢Âô®
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  MusiclistManager.js  # Ê≠åÂçïÁÆ°ÁêÜÂô®
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  PlaylistManager.js   # Êí≠ÊîæÂàóË°®ÁÆ°ÁêÜÂô®
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  SettingManager.js    # ËÆæÁΩÆÁÆ°ÁêÜÂô®
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  UIManager.js         # UIÁÆ°ÁêÜÂô®
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  UpdateManager.js     # Êõ¥Êñ∞ÁÆ°ÁêÜÂô®
‚îÇ   ‚îú‚îÄ‚îÄ  main.html                # ‰∏ªË¶ÅHTMLÊñá‰ª∂
‚îÇ   ‚îú‚îÄ‚îÄ  main.js                  # ‰∏ªË¶ÅJavaScriptÊñá‰ª∂
‚îÇ   ‚îú‚îÄ‚îÄ  script.js                # ËæÖÂä©ËÑöÊú¨
‚îÇ   ‚îú‚îÄ‚îÄ  splash.html              # ÂêØÂä®ÁîªÈù¢HTML
‚îÇ   ‚îú‚îÄ‚îÄ  styles/                  # Ê†∑ÂºèÊñá‰ª∂Â§π
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  base.css             # Âü∫Á°ÄÊ†∑Âºè
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  components/          # ÁªÑ‰ª∂Ê†∑Âºè
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  animations.css   # Âä®ÁîªÊ†∑Âºè
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  controls.css     # Êéß‰ª∂Ê†∑Âºè
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  dialogs.css      # ÂØπËØùÊ°ÜÊ†∑Âºè
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  lyrics.css       # Ê≠åËØçÊ†∑Âºè
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  musiclist.css    # Ê≠åÂçïÊ†∑Âºè
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  notifications.css # ÈÄöÁü•Ê†∑Âºè
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  player.css       # Êí≠ÊîæÂô®Ê†∑Âºè
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  settings.css     # ËÆæÁΩÆÊ†∑Âºè
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  sidebar.css      # ‰æßËæπÊ†èÊ†∑Âºè
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  song.css         # Ê≠åÊõ≤Ê†∑Âºè
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  titlebar.css     # Ê†áÈ¢òÊ†èÊ†∑Âºè
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  index.css            # È¶ñÈ°µÊ†∑Âºè
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  utilities.css        # ËæÖÂä©Ê†∑Âºè
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  variables.css        # ÂèòÈáèÊ†∑Âºè
‚îÇ   ‚îú‚îÄ‚îÄ  utils.js                 # Â∑•ÂÖ∑ÂáΩÊï∞
‚îú‚îÄ‚îÄ  yarn.lock                    # YarnÈîÅÊñá‰ª∂

```

#### Êï∞ÊçÆÊµÅÂêë
```mermaid
graph TD
    A[Áî®Êà∑Êìç‰Ωú] --&gt; B{‰∫ã‰ª∂‰∏≠ÂøÉ}
    
    %% Ê†∏ÂøÉÊí≠ÊîæÊéßÂà∂ÊµÅ
    B --&gt; C[AudioPlayer]
    C --&gt;|Êí≠ÊîæÁä∂ÊÄÅ| D[LyricsPlayer]
    C --&gt;|ËøõÂ∫¶ÂêåÊ≠•| E[ËßÜÈ¢ëËÉåÊôØ]
    
    %% Êí≠ÊîæÂàóË°®ÁÆ°ÁêÜÊµÅ
    B --&gt; F[PlaylistManager]
    F --&gt;|Ê≠åÂçïÊõ¥Êñ∞| G[MusiclistManager]
    G --&gt;|ÊåÅ‰πÖÂåñ| H[localStorage]
    
    %% ÊêúÁ¥¢‰∏éÁºìÂ≠òÊµÅ
    I[BÁ´ôAPI] --&gt;|Èü≥È¢ë/ËßÜÈ¢ëÈìæÊé•| J[MusicSearcher]
    J --&gt;|URLÁºìÂ≠ò| K[CacheManager]
    K --&gt;|ËøáÊúüÊ£ÄÊü•| F
    
    %% UIÊõ¥Êñ∞ÊµÅ
    F --&gt;|Êí≠ÊîæÁä∂ÊÄÅ| L[UIManager]
    L --&gt;|ÁïåÈù¢Êõ¥Êñ∞| M[DOM]
    
    %% Êî∂ËóèÁÆ°ÁêÜÊµÅ
    B --&gt; N[FavoriteManager]
    N --&gt;|Êî∂ËóèÂêåÊ≠•| H
    
    %% ËÆæÁΩÆÁÆ°ÁêÜÊµÅ
    O[SettingManager] --&gt;|ÈÖçÁΩÆ| F
    O --&gt;|‰∫ã‰ª∂Â§ÑÁêÜ| L

    %% Áä∂ÊÄÅ‰øùÂ≠òÊµÅ
    F --&gt;|Êí≠ÊîæËøõÂ∫¶| H
    C --&gt;|ÂΩìÂâçÊó∂Èó¥| H
```

### Ë¥°ÁåÆÊåáÂçó
1. ÂÖãÈöÜ‰ªìÂ∫ìÂêéÊâßË°å `yarn add --magic`ÔºàÂºÄÁé©Á¨ëÁöÑÔºåÊ≠£Â∏∏addÂ∞±Â•ΩÔºâ
2. Ë∞ÉËØï‰∏ªËøõÁ®ãÔºö`yarn run electron:debug`
3. Áõ¥Êé•ËøêË°å: `yarn run run`
4. ÊâìÂåÖ: `yarn run build`
5. ‰ª£Á†ÅËßÑËåÉÔºö
   - ‰∏ÄÂÆöË¶ÅÁªÑ‰ª∂ÂåñÂì¶ÔºÅÈù¢ÂêëÂØπË±°ÂêØÂä®ÔºÅ
   - Áî®yarnÔºÅ
   - ÂÖ∂ÂÆÉÊ≤°Âï•Ôºå‰ª£Á†ÅÂêàÁêÜÂç≥ÂèØ„ÄÇ
   - Ê±ÇÂ§ß‰Ω¨PRÔºàÈõæÔºâ
6. ÊèêPRÊó∂ËØ∑ÈôÑ‰∏äÁå´ËÄ≥Ë°®ÊÉÖÂåÖ‰ª•ÈÄöËøáÂÆ°Ê†∏ÔºàÂ§ßÈõæÔºâ

---

**ÁâàÊùÉËØ¥Êòé**  
ÂºÄÊ∫êÂçèËÆÆÔºö[GPL-3.0](LICENSE) 
ÂºÄÂèëÂõ¢ÈòüÔºöNB-GroupÂíåUser782TecËøô‰∏§ÂêçÂàù‰∏≠ÁîüÔºà‰Ωú‰∏öÊ≤°ÂÜôÂÆå‰πüË¶ÅÂÜô‰ª£Á†ÅÁöÑ‰º†ËØ¥ÔºÅÔºâÔºàÂÖ∂ÂÆûÊàë‰ª¨ÊàêÁª©ÈÉΩÂæàÂ•ΩÁöÑÂï¶Ôºâ

Â∞ΩÁÆ°Êàë‰ª¨‰ª£Á†ÅÂºÄÊ∫êÔºå‰ΩÜÊàë‰ª¨‰ªçÂèó„Ää‰∏≠Âçé‰∫∫Ê∞ëÂÖ±ÂíåÂõΩËëó‰ΩúÊùÉÊ≥ï„ÄãÁöÑ‰øùÊä§„ÄÇ
Á¶ÅÊ≠¢‰∏ÄÂàá‰ΩøÁî®Êàë‰ª¨Ê∫ê‰ª£Á†ÅÁöÑÂïÜ‰∏öË°å‰∏∫ÔºåÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÔºåÊâìÂåÖÂîÆÂçñ„ÄÅÊú™ÁªèÂÖÅËÆ∏ÁöÑÊê¨ËøêÁ≠â„ÄÇ
Ôºà‰∏äÊ¨°Êàë‰ª¨ÁöÑWin12Â∞±Ë¢´ÂÄíÂçñÊ∫êÁ†Å‰∫ÜQwQÔºâ
Â¶ÇÊûúÁî®‰∫éÂ≠¶‰π†‰∫§ÊµÅÔºåÈÇ£‰πàËØ∑‰æøÔºå‰ΩÜÊòØÂä°ÂøÖÊ†áÊ≥®‰ΩúËÄÖÂíåÈ°πÁõÆÈìæÊé•Âì¶„ÄÇ

ÂÖ∂ÂÆÉÊù°Ê¨æËØ∑ËßÅ [GPL-3.0](LICENSE) ÂçèËÆÆÊñáÊú¨„ÄÇ</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WhiskeySockets/Baileys]]></title>
            <link>https://github.com/WhiskeySockets/Baileys</link>
            <guid>https://github.com/WhiskeySockets/Baileys</guid>
            <pubDate>Fri, 21 Mar 2025 00:04:35 GMT</pubDate>
            <description><![CDATA[Lightweight full-featured typescript/javascript WhatsApp Web API]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WhiskeySockets/Baileys">WhiskeySockets/Baileys</a></h1>
            <p>Lightweight full-featured typescript/javascript WhatsApp Web API</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,928</p>
            <p>Forks: 1,668</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>&lt;h1&gt;&lt;img alt=&quot;Baileys logo&quot; src=&quot;https://raw.githubusercontent.com/WhiskeySockets/Baileys/refs/heads/master/Media/logo.png&quot; height=&quot;75&quot;/&gt;&lt;/h1&gt;

![NPM Downloads](https://img.shields.io/npm/dw/%40whiskeysockets%2Fbaileys?label=npm&amp;color=%23CB3837)
![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/whiskeysockets/baileys)
![Discord](https://img.shields.io/discord/725839806084546610?label=discord&amp;color=%235865F2)

Baileys is a WebSockets-based TypeScript library for interacting with the WhatsApp Web API.

# Usage
A new guide has been posted at https://baileys.wiki.

# Sponsor
If you&#039;d like to financially support this project, you can do so by supporting the current maintainer [here](https://purpshell.dev/sponsor).

# Disclaimer
This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates.
The official WhatsApp website can be found at whatsapp.com. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners.

The maintainers of Baileys do not in any way condone the use of this application in practices that violate the Terms of Service of WhatsApp. The maintainers of this application call upon the personal responsibility of its users to use this application in a fair way, as it is intended to be used.
Use at your own discretion. Do not spam people with this. We discourage any stalkerware, bulk or automated messaging usage.

# License
Copyright (c) 2025 Rajeh Taher/WhiskeySockets

Licensed under the MIT License:
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &quot;Software&quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

Thus, the maintainers of the project can&#039;t be held liable for any potential misuse of this project.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[ToolJet/ToolJet]]></title>
            <link>https://github.com/ToolJet/ToolJet</link>
            <guid>https://github.com/ToolJet/ToolJet</guid>
            <pubDate>Fri, 21 Mar 2025 00:04:34 GMT</pubDate>
            <description><![CDATA[Low-code platform for building business applications. Connect to databases, cloud storages, GraphQL, API endpoints, Airtable, Google sheets, OpenAI, etc and build apps using drag and drop application builder. Built using JavaScript/TypeScript. üöÄ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ToolJet/ToolJet">ToolJet/ToolJet</a></h1>
            <p>Low-code platform for building business applications. Connect to databases, cloud storages, GraphQL, API endpoints, Airtable, Google sheets, OpenAI, etc and build apps using drag and drop application builder. Built using JavaScript/TypeScript. üöÄ</p>
            <p>Language: JavaScript</p>
            <p>Stars: 35,090</p>
            <p>Forks: 4,514</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre>ToolJet is an **open-source low-code framework** to build and deploy internal tools with minimal engineering effort. ToolJet&#039;s drag-and-drop frontend builder allows you to create complex, responsive frontends within minutes. Additionally, you can integrate various data sources, including databases like PostgreSQL, MongoDB, and Elasticsearch; API endpoints with OpenAPI spec and OAuth2 support; SaaS tools such as Stripe, Slack, Google Sheets, Airtable, and Notion; as well as object storage services like S3, GCS, and Minio, to fetch and write data.

 :star: If you find ToolJet useful, please consider giving us a star on GitHub! Your support helps us continue to innovate and deliver exciting features.

![Docker Cloud Build Status](https://img.shields.io/docker/cloud/build/tooljet/tooljet-ce)
![Number of GitHub contributors](https://img.shields.io/github/contributors/tooljet/tooljet)
[![Number of GitHub issues that are open](https://img.shields.io/github/issues/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet/issues)
[![Number of GitHub stars](https://img.shields.io/github/stars/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet/stargazers)
![Number of GitHub closed issues](https://img.shields.io/github/issues-closed/tooljet/tooljet)
![Number of GitHub pull requests that are open](https://img.shields.io/github/issues-pr-raw/tooljet/tooljet)
![GitHub release; latest by date](https://img.shields.io/github/v/release/tooljet/tooljet)
![GitHub commit activity](https://img.shields.io/github/commit-activity/m/tooljet/tooljet)
[![GitHub license which is AGPL license](https://img.shields.io/github/license/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet)
[![Follow us on X, formerly Twitter](https://img.shields.io/twitter/follow/ToolJet?style=social)](https://twitter.com/ToolJet)

&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://user-images.githubusercontent.com/7828962/211444352-4d6d2e4a-13c9-4980-9e16-4aed4af9811b.png&quot; alt=&quot;Tooljet dashboard showing inventory and orders&quot;/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://github.com/ToolJet/ToolJet/assets/25361949/0e711f3a-edb7-496b-8833-107de3826933&quot;/&gt;
&lt;/p&gt;

## All features

- **Visual App Builder:** 45+ built-in responsive components, including Tables, Charts, Lists, Forms, and Progress Bars.
- **ToolJet Database:** Built-in no-code database.
- **Multi-Page:** Build an application with multiple pages.
- **Multiplayer editing:** Allows simultaneous app building by multiple developers.
- **50+ data sources:** Integrate with external databases, cloud storage, and APIs.
- **Desktop &amp; mobile:** Customize layout widths to fit various screen sizes.
- **Self-host:** Supports Docker, Kubernetes, AWS EC2, Google Cloud Run, and more.
- **Collaborate:** Add comments anywhere on the canvas and tag your team members.
- **Extend with plugins:** Use our [command-line tool](https://www.npmjs.com/package/@tooljet/cli) to easily bootstrap new connectors.
- **Version control:** Manage multiple application versions with a structured release cycle.
- **Run JS &amp; Python code:** Execute custom JavaScript and Python snippets.
- **Granular access control:** Set permissions at both group and app levels.
- **Low-code:** Use JS code almost anywhere within the builder, such as setting text color based on status with 
`status === &#039;success&#039; ? &#039;green&#039; : &#039;red&#039;`.
- **No-code query editors:** Query Editors are available for all supported data sources.
- **Join and transform data:** Transform query results using JavaScript or Python code.
- **Secure:** All the credentials are securely encrypted using `aes-256-gcm`.
- **Data Privacy:** ToolJet serves solely as a proxy and does not store data.
- **SSO:** Supports multiple Single Sign-On providers.

&lt;hr&gt;

## Quickstart
The easiest way to get started with ToolJet is by creating a [ToolJet Cloud](https://tooljet.com) account. ToolJet Cloud offers a hosted solution of ToolJet. If you want to self-host ToolJet, kindly proceed to [deployment documentation](https://docs.tooljet.com/docs/setup/).

You can deploy ToolJet on DigitalOcean using one-click-deployment.

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://cloud.digitalocean.com/apps/new?repo=https://github.com/ToolJet/ToolJet/tree/main&quot;&gt;&lt;img src=&quot;https://www.deploytodo.com/do-btn-blue.svg&quot; alt=&quot;Deploy to DigitalOcean&quot; height=32&gt;&lt;/a&gt;
&lt;/p&gt;

### Try using Docker
Want to give ToolJet a quick spin on your local machine? You can run the following command from your terminal to have ToolJet up and running right away.


```bash
docker run \
  --name tooljet \
  --restart unless-stopped \
  -p 80:80 \
  --platform linux/amd64 \
  -v tooljet_data:/var/lib/postgresql/13/main \
  tooljet/try:EE-LTS-latest
```

*For users upgrading their ToolJet version, we recommend choosing the LTS version over the latest version. The LTS version ensures stability with production bug fixes, security patches, and performance enhancements.*

## Tutorials and examples

[Time Tracker Application](https://docs.tooljet.com/docs/#quickstart-guide)&lt;br&gt;
[Build your own CMS using low-code](https://blog.tooljet.com/build-cms-using-lowcode-and-mongodb/)&lt;br&gt;
[AWS S3 Browser](https://blog.tooljet.com/build-an-aws-s3-broswer-with-tooljet/)&lt;br&gt;

## Documentation
Documentation is available at https://docs.tooljet.com.

- [Getting Started](https://docs.tooljet.com)&lt;br&gt;
- [Data source Reference](https://docs.tooljet.com/docs/data-sources/airtable/)&lt;br&gt;
- [Component Reference](https://docs.tooljet.com/docs/widgets/button)

## Self-hosted
You can use ToolJet Cloud for a fully managed solution. If you want to self-host ToolJet, we have guides on deploying ToolJet on Kubernetes, AWS EC2, Docker, and more.

| Provider  | Documentation |
| :------------- | :------------- |
| Digital Ocean | [Link](https://docs.tooljet.com/docs/setup/digitalocean)  |
| Docker  | [Link](https://docs.tooljet.com/docs/setup/docker)   |
| AWS EC2 | [Link](https://docs.tooljet.com/docs/setup/ec2)  |
| AWS ECS | [Link](https://docs.tooljet.com/docs/setup/ecs)   |
| OpenShift | [Link](https://docs.tooljet.com/docs/setup/openshift)   |
| Helm | [Link](https://docs.tooljet.com/docs/setup/helm)   |
| AWS EKS (Kubernetes) | [Link](https://docs.tooljet.com/docs/setup/kubernetes)   |
| GCP GKE (Kubernetes) | [Link](https://docs.tooljet.com/docs/setup/kubernetes-gke)   |
| Azure AKS (Kubernetes) | [Link](https://docs.tooljet.com/docs/setup/kubernetes-aks)   |
| Azure Container | [Link](https://docs.tooljet.com/docs/setup/azure-container)   |
| Google Cloud Run  | [Link](https://docs.tooljet.com/docs/setup/google-cloud-run)   |
| Deploying ToolJet client  | [Link](https://docs.tooljet.com/docs/setup/client)   |
| Deploying ToolJet on a Subpath  | [Link](https://docs.tooljet.com/docs/setup/tooljet-subpath/)   |

## Marketplace 
ToolJet can now be found on both AWS and Azure Marketplaces, making it simpler than ever to access and deploy our app-building platform.

Find ToolJet on AWS Marketplace [here](https://aws.amazon.com/marketplace/pp/prodview-fxjto27jkpqfg?sr=0-1&amp;ref_=beagle&amp;applicationId=AWSMPContessa) and explore seamless integration on Azure Marketplace [here](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/tooljetsolutioninc1679496832216.tooljet?tab=Overview).

## Community support
For general help using ToolJet, please refer to the official [documentation](https://docs.tooljet.com/docs/). For additional help, you can use one of these channels to ask a question:

- [Slack](https://tooljet.com/slack) - Discussions with the community and the team.
- [GitHub](https://github.com/ToolJet/ToolJet/issues) - For bug reports and feature requests.
- [ùïè (Twitter)](https://twitter.com/ToolJet) - Get the product updates quickly.

## Roadmap
Check out our [roadmap](https://github.com/orgs/ToolJet/projects/15) to stay updated on recently released features and learn about what&#039;s coming next.

## Branching model
We use the git-flow branching model. The base branch is `develop`. If you are looking for a stable version, please use the main branch or tags labeled as v1.x.x.

## Contributing
Kindly read our [Contributing Guide](CONTRIBUTING.md) to familiarize yourself with ToolJet&#039;s development process, how to suggest bug fixes and improvements, and the steps for building and testing your changes. &lt;br&gt;

## Contributors
&lt;a href=&quot;https://github.com/tooljet/tooljet/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=tooljet/tooljet&amp;max=400&amp;columns=20&quot; /&gt;
  &lt;img src=&quot;https://us-central1-tooljet-hub.cloudfunctions.net/github&quot; width=&quot;0&quot; height=&quot;0&quot; /&gt;
&lt;/a&gt;

## License
ToolJet ¬© 2023, ToolJet Solutions Inc - Released under the GNU Affero General Public License v3.0.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[prebid/Prebid.js]]></title>
            <link>https://github.com/prebid/Prebid.js</link>
            <guid>https://github.com/prebid/Prebid.js</guid>
            <pubDate>Fri, 21 Mar 2025 00:04:33 GMT</pubDate>
            <description><![CDATA[Setup and manage header bidding advertising partners without writing code or confusing line items. Prebid.js is open source and free.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/prebid/Prebid.js">prebid/Prebid.js</a></h1>
            <p>Setup and manage header bidding advertising partners without writing code or confusing line items. Prebid.js is open source and free.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,416</p>
            <p>Forks: 2,131</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>[![Build Status](https://circleci.com/gh/prebid/Prebid.js.svg?style=svg)](https://circleci.com/gh/prebid/Prebid.js)
[![Percentage of issues still open](http://isitmaintained.com/badge/open/prebid/Prebid.js.svg)](https://isitmaintained.com/project/prebid/Prebid.js &quot;Percentage of issues still open&quot;)
[![Coverage Status](https://coveralls.io/repos/github/prebid/Prebid.js/badge.svg)](https://coveralls.io/github/prebid/Prebid.js)

# Prebid.js

&gt; A free and open source library for publishers to quickly implement header bidding.

This README is for developers who want to contribute to Prebid.js.
Additional documentation can be found at [the Prebid.js documentation homepage](https://docs.prebid.org/prebid/prebidjs.html).
Working examples can be found in [the developer docs](https://prebid.org/dev-docs/getting-started.html).

Prebid.js is open source software that is offered for free as a convenience. While it is designed to help companies address legal requirements associated with header bidding, we cannot and do not warrant that your use of Prebid.js will satisfy legal requirements. You are solely responsible for ensuring that your use of Prebid.js complies with all applicable laws.  We strongly encourage you to obtain legal advice when using Prebid.js to ensure your implementation complies with all laws where you operate.

**Table of Contents**

- [Usage](#Usage)
- [Install](#Install)
- [Build](#Build)
- [Run](#Run)
- [Contribute](#Contribute)

&lt;a name=&quot;Usage&quot;&gt;&lt;/a&gt;

## Usage (as a npm dependency)

*Note:* Requires Prebid.js v1.38.0+

Prebid.js depends on Babel and some Babel Plugins in order to run correctly in the browser.  Here are some examples for
configuring webpack to work with Prebid.js.

With Babel 7:
```javascript
// webpack.conf.js
let path = require(&#039;path&#039;);
module.exports = {
  mode: &#039;production&#039;,
  module: {
    rules: [

      // this rule can be excluded if you don&#039;t require babel-loader for your other application files
      {
        test: /\.m?js$/,
        exclude: /node_modules/,
        use: {
          loader: &#039;babel-loader&#039;,
        }
      },

      // this separate rule is required to make sure that the Prebid.js files are babel-ified.  this rule will
      // override the regular exclusion from above (for being inside node_modules).
      {
        test: /.js$/,
        include: new RegExp(`\\${path.sep}prebid\\.js`),
        use: {
          loader: &#039;babel-loader&#039;,
          // presets and plugins for Prebid.js must be manually specified separate from your other babel rule.
          // this can be accomplished by requiring prebid&#039;s .babelrc.js file (requires Babel 7 and Node v8.9.0+)
          // as of Prebid 6, babelrc.js only targets modern browsers. One can change the targets and build for
          // older browsers if they prefer, but integration tests on ie11 were removed in Prebid.js 6.0
          options: require(&#039;prebid.js/.babelrc.js&#039;)
        }
      }
    ]
  }
}
```

Or for Babel 6:
```javascript
            // you must manually install and specify the presets and plugins yourself
            options: {
              plugins: [
                &quot;transform-object-assign&quot;, // required (for IE support) and &quot;babel-plugin-transform-object-assign&quot;
                                           // must be installed as part of your package.
                require(&#039;prebid.js/plugins/pbjsGlobals.js&#039;) // required!
              ],
              presets: [
                [&quot;env&quot;, {                 // you can use other presets if you wish.
                  &quot;targets&quot;: {            // this example is using &quot;babel-presets-env&quot;, which must be installed if you
                    &quot;browsers&quot;: [         // follow this example.
                      ... // your browser targets. they should probably match the targets you&#039;re using for the rest
                          // of your application
                    ]
                  }
                }]
              ]
            }
```

Then you can use Prebid.js as any other npm dependency

```javascript
import pbjs from &#039;prebid.js&#039;;
import &#039;prebid.js/modules/rubiconBidAdapter&#039;; // imported modules will register themselves automatically with prebid
import &#039;prebid.js/modules/appnexusBidAdapter&#039;;
pbjs.processQueue();  // required to process existing pbjs.queue blocks and setup any further pbjs.queue execution

pbjs.requestBids({
  ...
})

```



&lt;a name=&quot;Install&quot;&gt;&lt;/a&gt;

## Install



    $ git clone https://github.com/prebid/Prebid.js.git
    $ cd Prebid.js
    $ npm ci

*Note:* You need to have `NodeJS` 12.16.1 or greater installed.

*Note:* In the 1.24.0 release of Prebid.js we have transitioned to using gulp 4.0 from using gulp 3.9.1.  To comply with gulp&#039;s recommended setup for 4.0, you&#039;ll need to have `gulp-cli` installed globally prior to running the general `npm ci`.  This shouldn&#039;t impact any other projects you may work on that use an earlier version of gulp in its setup.

If you have a previous version of `gulp` installed globally, you&#039;ll need to remove it before installing `gulp-cli`.  You can check if this is installed by running `gulp -v` and seeing the version that&#039;s listed in the `CLI` field of the output.  If you have the `gulp` package installed globally, it&#039;s likely the same version that you&#039;ll see in the `Local` field.  If you already have `gulp-cli` installed, it should be a lower major version (it&#039;s at version `2.0.1` at the time of the transition).

To remove the old package, you can use the command: `npm rm gulp -g`

Once setup, run the following command to globally install the `gulp-cli` package: `npm install gulp-cli -g`


&lt;a name=&quot;Build&quot;&gt;&lt;/a&gt;

## Build for Development

To build the project on your local machine we recommend, running:

    $ gulp serve-and-test --file &lt;spec_file.js&gt;

This will run testing but not linting. A web server will start at `http://localhost:9999` serving from the project root and generates the following files:

+ `./build/dev/prebid.js` - Full source code for dev and debug
+ `./build/dev/prebid.js.map` - Source map for dev and debug
+ `./build/dev/prebid-core.js`
+ `./build/dev/prebid-core.js.map`


Development may be a bit slower but if you prefer linting and additional watch files you can also still run just:

    $ gulp serve


### Build Optimization

The standard build output contains all the available modules from within the `modules` folder.  Note, however that there are bid adapters which support multiple bidders through aliases, so if you don&#039;t see a file in modules for a bid adapter, you may need to grep the repository to find the name of the module you need to include.

You might want to exclude some/most of them from the final bundle.  To make sure the build only includes the modules you want, you can specify the modules to be included with the `--modules` CLI argument.

For example, when running the serve command: `gulp serve --modules=openxBidAdapter,rubiconBidAdapter,sovrnBidAdapter`

Building with just these adapters will result in a smaller bundle which should allow your pages to load faster.

**Build standalone prebid.js**

- Clone the repo, run `npm ci`
- Then run the build:

        $ gulp build --modules=openxBidAdapter,rubiconBidAdapter,sovrnBidAdapter

Alternatively, a `.json` file can be specified that contains a list of modules you would like to include.

    $ gulp build --modules=modules.json

With `modules.json` containing the following
```json modules.json
[
  &quot;openxBidAdapter&quot;,
  &quot;rubiconBidAdapter&quot;,
  &quot;sovrnBidAdapter&quot;
]
```

**Build prebid.js using npm for bundling**

In case you&#039;d like to explicitly show that your project uses `prebid.js` and want a reproducible build, consider adding it as an `npm` dependency.

- Add `prebid.js` as a `npm` dependency of your project: `npm install prebid.js`
- Run the `prebid.js` build under the `node_modules/prebid.js/` folder

        $ gulp build --modules=path/to/your/list-of-modules.json

Most likely your custom `prebid.js` will only change when there&#039;s:

- A change in your list of modules
- A new release of `prebid.js`

Having said that, you are probably safe to check your custom bundle into your project.  You can also generate it in your build process.

**Build once, bundle multiple times**

If you need to generate multiple distinct bundles from the same Prebid version, you can reuse a single build with:

```
gulp build
gulp bundle --tag one --modules=one.json
gulp bundle --tag two --modules=two.json
```

This generates slightly larger files, but has the advantage of being much faster to run (after the initial `gulp build`). It&#039;s also the method used by [the Prebid.org download page](https://docs.prebid.org/download.html).

&lt;a name=&quot;Run&quot;&gt;&lt;/a&gt;

### Excluding particular features from the build

Since version 7.2.0, you may instruct the build to exclude code for some features - for example, if you don&#039;t need support for native ads:

```
gulp build --disable NATIVE --modules=openxBidAdapter,rubiconBidAdapter,sovrnBidAdapter # substitute your module list
```

Or, if you are consuming Prebid through npm, with the `disableFeatures` option in your Prebid rule:

```javascript
  {
    test: /.js$/,
    include: new RegExp(`\\${path.sep}prebid\\.js`),
    use: {
      loader: &#039;babel-loader&#039;,
      options: require(&#039;prebid.js/babelConfig.js&#039;)({disableFeatures: [&#039;NATIVE&#039;]})
    }
  }
```

Features that can be disabled this way are:

 - `VIDEO` - support for video bids;
 - `NATIVE` - support for native bids;
 - `UID2_CSTG` - support for UID2 client side token generation (see [Unified ID 2.0](https://docs.prebid.org/dev-docs/modules/userid-submodules/unified2.html))
 - `GREEDY` - disables the use blocking, &quot;greedy&quot; promises within Prebid (see below).    

#### Greedy promises

By default, Prebid attempts to hold control of the main thread when possible, using a [custom implementation of `Promise`](https://github.com/prebid/Prebid.js/blob/master/libraries/greedy/greedyPromise.js) that does not submit callbacks to the scheduler once the promise is resolved (running them immediately instead).
Disabling this behavior instructs Prebid to use the standard `window.Promise` instead; this has the effect of breaking up task execution, making them slower overall but giving the browser more chances to run other tasks in between, which can improve UX.         

You may also override the `Promise` constructor used by Prebid through `pbjs.Promise`, for example:

```javascript
var pbjs = pbjs || {};
pbjs.Promise = myCustomPromiseConstructor;
```

## Unminified code

You can get a version of the code that&#039;s unminified for debugging with `build-bundle-dev`:

```bash
gulp build-bundle-dev --modules=bidderA,module1,...
```

The results will be in build/dev/prebid.js.

## Test locally

To lint the code:

```bash
gulp lint
```

To lint and only show errors

```bash
gulp lint --no-lint-warnings
```

To run the unit tests:

```bash
gulp test
```

To run the unit tests for a particular file (example for pubmaticBidAdapter_spec.js):
```bash
gulp test --file &quot;test/spec/modules/pubmaticBidAdapter_spec.js&quot; --nolint
```

To generate and view the code coverage reports:

```bash
gulp test-coverage
gulp view-coverage
```

Local end-to-end testing can be done with:

```bash
gulp e2e-test --local
```

For Prebid.org members with access to BrowserStack, additional end-to-end testing can be done with:

```bash
gulp e2e-test --host=test.localhost
```

To run these tests, the following items are required:
- setup an alias of localhost in your `hosts` file (eg `127.0.0.1  test.localhost`); note - you can use any alias.  Use this alias in the command-line argument above.
- access to [BrowserStack](https://www.browserstack.com/) account.  Assign the following variables in your bash_profile:
```bash
export BROWSERSTACK_USERNAME=&#039;YourUserNameHere&#039;
export BROWSERSTACK_ACCESS_KEY=&#039;YourAccessKeyHere&#039;
```
You can get these BrowserStack values from your profile page.

For development:

```javascript
(function() {
    var d = document, pbs = d.createElement(&#039;script&#039;), pro = d.location.protocol;
    pbs.type = &#039;text/javascript&#039;;
    pbs.src = ((pro === &#039;https:&#039;) ? &#039;https&#039; : &#039;http&#039;) + &#039;./build/dev/prebid.js&#039;;
    var target = document.getElementsByTagName(&#039;head&#039;)[0];
    target.insertBefore(pbs, target.firstChild);
})();
```

For deployment:

```javascript
(function() {
    var d = document, pbs = d.createElement(&#039;script&#039;), pro = d.location.protocol;
    pbs.type = &#039;text/javascript&#039;;
    pbs.src = ((pro === &#039;https:&#039;) ? &#039;https&#039; : &#039;http&#039;) + &#039;./build/dist/prebid.js&#039;;
    var target = document.getElementsByTagName(&#039;head&#039;)[0];
    target.insertBefore(pbs, target.firstChild);
})();
```

Build and run the project locally with:

```bash
gulp serve
```

This runs `lint` and `test`, then starts a web server at `http://localhost:9999` serving from the project root.
Navigate to your example implementation to test, and if your `prebid.js` file is sourced from the `./build/dev`
directory you will have sourcemaps available in your browser&#039;s developer tools.

To run the example file, go to:

+ `http://localhost:9999/integrationExamples/gpt/hello_world.html`

As you make code changes, the bundles will be rebuilt and the page reloaded automatically.

&lt;a name=&quot;Contribute&quot;&gt;&lt;/a&gt;

## Contribute

Many SSPs, bidders, and publishers have contributed to this project. [Hundreds of bidders](https://github.com/prebid/Prebid.js/tree/master/modules) are supported by Prebid.js.

For guidelines, see [Contributing](./CONTRIBUTING.md).

Our PR review process can be found [here](https://github.com/prebid/Prebid.js/tree/master/PR_REVIEW.md).

### Add a Bidder Adapter

To add a bidder adapter module, see the instructions in [How to add a bidder adapter](https://docs.prebid.org/dev-docs/bidder-adaptor.html).

### Code Quality

Code quality is defined by `.eslintrc` and errors are reported in the terminal.

If you are contributing code, you should [configure your editor](http://eslint.org/docs/user-guide/integrations#editors) with the provided `.eslintrc` settings.

### Unit Testing with Karma

        $ gulp test --watch --browsers=chrome

This will run tests and keep the Karma test browser open. If your `prebid.js` file is sourced from the `./build/dev` directory you will also have sourcemaps available when using your browser&#039;s developer tools.

+ To access the Karma debug page, go to `http://localhost:9876/debug.html`

+ For test results, see the console

+ To set breakpoints in source code, see the developer tools

Detailed code coverage reporting can be generated explicitly with

        $ gulp test --coverage

The results will be in

        ./build/coverage

*Note*: Starting in June 2016, all pull requests to Prebid.js need to include tests with greater than 80% code coverage before they can be merged.  For more information, see [#421](https://github.com/prebid/Prebid.js/issues/421).

For instructions on writing tests for Prebid.js, see [Testing Prebid.js](https://prebid.org/dev-docs/testing-prebid.html).

### Supported Browsers

Prebid.js is supported on IE11 and modern browsers until 5.x. 6.x+ transpiles to target &gt;0.25%; not Opera Mini; not IE11.

### Governance
Review our governance model [here](https://github.com/prebid/Prebid.js/tree/master/governance.md).
### END
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[react-grid-layout/react-grid-layout]]></title>
            <link>https://github.com/react-grid-layout/react-grid-layout</link>
            <guid>https://github.com/react-grid-layout/react-grid-layout</guid>
            <pubDate>Fri, 21 Mar 2025 00:04:32 GMT</pubDate>
            <description><![CDATA[A draggable and resizable grid layout with responsive breakpoints, for React.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/react-grid-layout/react-grid-layout">react-grid-layout/react-grid-layout</a></h1>
            <p>A draggable and resizable grid layout with responsive breakpoints, for React.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 21,001</p>
            <p>Forks: 2,628</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre># React-Grid-Layout

[![travis build](https://travis-ci.org/STRML/react-grid-layout.svg?branch=master)](https://travis-ci.org/STRML/react-grid-layout)
[![CDNJS](https://img.shields.io/cdnjs/v/react-grid-layout.svg)](https://cdnjs.com/libraries/react-grid-layout)
[![npm package](https://img.shields.io/npm/v/react-grid-layout.svg?style=flat-square)](https://www.npmjs.org/package/react-grid-layout)
[![npm downloads](https://img.shields.io/npm/dt/react-grid-layout.svg?maxAge=2592000)]()

React-Grid-Layout is a grid layout system much like [Packery](http://packery.metafizzy.co/) or
[Gridster](http://dsmorse.github.io/gridster.js/), for React.

Unlike those systems, it is responsive and supports breakpoints. Breakpoint layouts can be provided by the user
or autogenerated.

RGL is React-only and does not require jQuery.

![BitMEX UI](http://i.imgur.com/oo1NT6c.gif)

&gt; GIF from production usage on [BitMEX.com](https://www.bitmex.com)

[**[Demo](https://react-grid-layout.github.io/react-grid-layout/) | [Changelog](/CHANGELOG.md) | [CodeSandbox Editable demo](https://codesandbox.io/s/5wy3rz5z1x?module=%2Fsrc%2FShowcaseLayout.js)**]

## Table of Contents

- [Demos](#demos)
- [Features](#features)
- [Installation](#installation)
- [Usage](#usage)
- [Responsive Usage](#responsive-usage)
- [Providing Grid Width](#providing-grid-width)
- [Grid Layout Props](#grid-layout-props)
- [Responsive Grid Layout Props](#responsive-grid-layout-props)
- [Grid Item Props](#grid-item-props)
- [User Recipes](../../wiki/Users-recipes)
- [Performance](#performance)
- [Contribute](#contribute)
- [TODO List](#todo-list)

## Demos

1. [Showcase](https://react-grid-layout.github.io/react-grid-layout/examples/00-showcase.html)
1. [Basic](https://react-grid-layout.github.io/react-grid-layout/examples/01-basic.html)
1. [No Dragging/Resizing (Layout Only)](https://react-grid-layout.github.io/react-grid-layout/examples/02-no-dragging.html)
1. [Messy Layout Autocorrect](https://react-grid-layout.github.io/react-grid-layout/examples/03-messy.html)
1. [Layout Defined on Children](https://react-grid-layout.github.io/react-grid-layout/examples/04-grid-property.html)
1. [Static Elements](https://react-grid-layout.github.io/react-grid-layout/examples/05-static-elements.html)
1. [Adding/Removing Elements](https://react-grid-layout.github.io/react-grid-layout/examples/06-dynamic-add-remove.html)
1. [Saving Layout to LocalStorage](https://react-grid-layout.github.io/react-grid-layout/examples/07-localstorage.html)
1. [Saving a Responsive Layout to LocalStorage](https://react-grid-layout.github.io/react-grid-layout/examples/08-localstorage-responsive.html)
1. [Minimum and Maximum Width/Height](https://react-grid-layout.github.io/react-grid-layout/examples/09-min-max-wh.html)
1. [Dynamic Minimum and Maximum Width/Height](https://react-grid-layout.github.io/react-grid-layout/examples/10-dynamic-min-max-wh.html)
1. [No Vertical Compacting (Free Movement)](https://react-grid-layout.github.io/react-grid-layout/examples/11-no-vertical-compact.html)
1. [Prevent Collision](https://react-grid-layout.github.io/react-grid-layout/examples/12-prevent-collision.html)
1. [Error Case](https://react-grid-layout.github.io/react-grid-layout/examples/13-error-case.html)
1. [Toolbox](https://react-grid-layout.github.io/react-grid-layout/examples/14-toolbox.html)
1. [Drag From Outside](https://react-grid-layout.github.io/react-grid-layout/examples/15-drag-from-outside.html)
1. [Bounded Layout](https://react-grid-layout.github.io/react-grid-layout/examples/16-bounded.html)
1. [Responsive Bootstrap-style Layout](https://react-grid-layout.github.io/react-grid-layout/examples/17-responsive-bootstrap-style.html)
1. [Scaled Containers](https://react-grid-layout.github.io/react-grid-layout/examples/18-scale.html)
1. [Allow Overlap](https://react-grid-layout.github.io/react-grid-layout/examples/19-allow-overlap.html)
1. [All Resizable Handles](https://react-grid-layout.github.io/react-grid-layout/examples/20-resizable-handles.html)
1. [Single Row Horizontal](https://react-grid-layout.github.io/react-grid-layout/examples/21-horizontal.html)

#### Projects Using React-Grid-Layout

- [BitMEX](https://www.bitmex.com/)
- [AWS CloudFront Dashboards](https://aws.amazon.com/blogs/aws/cloudwatch-dashboards-create-use-customized-metrics-views/)
- [Grafana](https://grafana.com/)
- [Metabase](http://www.metabase.com/)
- [HubSpot](http://www.hubspot.com)
- [ComNetViz](http://www.grotto-networking.com/ComNetViz/ComNetViz.html)
- [Stoplight](https://app.stoplight.io)
- [Reflect](https://reflect.io)
- [ez-Dashing](https://github.com/ylacaute/ez-Dashing)
- [Kibana](https://www.elastic.co/products/kibana)
- [Graphext](https://graphext.com/)
- [Monday](https://support.monday.com/hc/en-us/articles/360002187819-What-are-the-Dashboards-)
- [Quadency](https://quadency.com/)
- [Hakkiri](https://www.hakkiri.io)
- [Ubidots](https://help.ubidots.com/en/articles/2400308-create-dashboards-and-widgets)
- [Statsout](https://statsout.com/)
- [Datto RMM](https://www.datto.com/uk/products/rmm/)
- [SquaredUp](https://squaredup.com/)

_Know of others? Create a PR to let me know!_

## Features

- 100% React - no jQuery
- Compatible with server-rendered apps
- Draggable widgets
- Resizable widgets
- Static widgets
- Configurable packing: horizontal, vertical, or off
- Bounds checking for dragging and resizing
- Widgets may be added or removed without rebuilding grid
- Layout can be serialized and restored
- Responsive breakpoints
- Separate layouts per responsive breakpoint
- Grid Items placed using CSS Transforms
  - Performance with CSS Transforms: [on](http://i.imgur.com/FTogpLp.jpg) / [off](http://i.imgur.com/gOveMm8.jpg), note paint (green) as % of time
- Compatibility with `&lt;React.StrictMode&gt;`

| Version      | Compatibility   |
| ------------ | --------------- |
| &gt;= 0.17.0    | React 16 &amp; 17   |
| &gt;= 0.11.3    | React 0.14 &amp; 15 |
| &gt;= 0.10.0    | React 0.14      |
| 0.8. - 0.9.2 | React 0.13      |
| &lt; 0.8        | React 0.12      |

## Installation

Install the React-Grid-Layout [package](https://www.npmjs.org/package/react-grid-layout) using [npm](https://www.npmjs.com/):

```bash
npm install react-grid-layout
```

Include the following stylesheets in your application:

```
/node_modules/react-grid-layout/css/styles.css
/node_modules/react-resizable/css/styles.css
```

## Usage

Use ReactGridLayout like any other component. The following example below will
produce a grid with three items where:

- users will not be able to drag or resize item `a`
- item `b` will be restricted to a minimum width of 2 grid blocks and a maximum width of 4 grid blocks
- users will be able to freely drag and resize item `c`

```js
import GridLayout from &quot;react-grid-layout&quot;;

class MyFirstGrid extends React.Component {
  render() {
    // layout is an array of objects, see the demo for more complete usage
    const layout = [
      { i: &quot;a&quot;, x: 0, y: 0, w: 1, h: 2, static: true },
      { i: &quot;b&quot;, x: 1, y: 0, w: 3, h: 2, minW: 2, maxW: 4 },
      { i: &quot;c&quot;, x: 4, y: 0, w: 1, h: 2 }
    ];
    return (
      &lt;GridLayout
        className=&quot;layout&quot;
        layout={layout}
        cols={12}
        rowHeight={30}
        width={1200}
      &gt;
        &lt;div key=&quot;a&quot;&gt;a&lt;/div&gt;
        &lt;div key=&quot;b&quot;&gt;b&lt;/div&gt;
        &lt;div key=&quot;c&quot;&gt;c&lt;/div&gt;
      &lt;/GridLayout&gt;
    );
  }
}
```

You may also choose to set layout properties directly on the children:

```js
import GridLayout from &quot;react-grid-layout&quot;;

class MyFirstGrid extends React.Component {
  render() {
    return (
      &lt;GridLayout className=&quot;layout&quot; cols={12} rowHeight={30} width={1200}&gt;
        &lt;div key=&quot;a&quot; data-grid={{ x: 0, y: 0, w: 1, h: 2, static: true }}&gt;
          a
        &lt;/div&gt;
        &lt;div key=&quot;b&quot; data-grid={{ x: 1, y: 0, w: 3, h: 2, minW: 2, maxW: 4 }}&gt;
          b
        &lt;/div&gt;
        &lt;div key=&quot;c&quot; data-grid={{ x: 4, y: 0, w: 1, h: 2 }}&gt;
          c
        &lt;/div&gt;
      &lt;/GridLayout&gt;
    );
  }
}
```

### Usage without Browserify/Webpack

A module usable in a `&lt;script&gt;` tag is included [here](/dist/react-grid-layout.min.js). It uses a UMD shim and
excludes `React`, so it must be otherwise available in your application, either via RequireJS or on `window.React`.

### Responsive Usage

To make RGL responsive, use the `&lt;ResponsiveReactGridLayout&gt;` element:

```js
import { Responsive as ResponsiveGridLayout } from &quot;react-grid-layout&quot;;

class MyResponsiveGrid extends React.Component {
  render() {
    // {lg: layout1, md: layout2, ...}
    const layouts = getLayoutsFromSomewhere();
    return (
      &lt;ResponsiveGridLayout
        className=&quot;layout&quot;
        layouts={layouts}
        breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}
        cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}
      &gt;
        &lt;div key=&quot;1&quot;&gt;1&lt;/div&gt;
        &lt;div key=&quot;2&quot;&gt;2&lt;/div&gt;
        &lt;div key=&quot;3&quot;&gt;3&lt;/div&gt;
      &lt;/ResponsiveGridLayout&gt;
    );
  }
}
```

When in responsive mode, you should supply at least one breakpoint via the `layouts` property.

When using `layouts`, it is best to supply as many breakpoints as possible, especially the largest one.
If the largest is provided, RGL will attempt to interpolate the rest.

You will also need to provide a `width`, when using `&lt;ResponsiveReactGridLayout&gt;` it is suggested you use the HOC
`WidthProvider` as per the instructions below.

It is possible to supply default mappings via the `data-grid` property on individual
items, so that they would be taken into account within layout interpolation.

### Providing Grid Width

Both `&lt;ResponsiveReactGridLayout&gt;` and `&lt;ReactGridLayout&gt;` take `width` to calculate
positions on drag events. In simple cases a HOC `WidthProvider` can be used to automatically determine
width upon initialization and window resize events.

```js
import { Responsive, WidthProvider } from &quot;react-grid-layout&quot;;

const ResponsiveGridLayout = WidthProvider(Responsive);

class MyResponsiveGrid extends React.Component {
  render() {
    // {lg: layout1, md: layout2, ...}
    var layouts = getLayoutsFromSomewhere();
    return (
      &lt;ResponsiveGridLayout
        className=&quot;layout&quot;
        layouts={layouts}
        breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}
        cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}
      &gt;
        &lt;div key=&quot;1&quot;&gt;1&lt;/div&gt;
        &lt;div key=&quot;2&quot;&gt;2&lt;/div&gt;
        &lt;div key=&quot;3&quot;&gt;3&lt;/div&gt;
      &lt;/ResponsiveGridLayout&gt;
    );
  }
}
```

This allows you to easily replace `WidthProvider` with your own Provider HOC if you need more sophisticated logic.

`WidthProvider` accepts a single prop, `measureBeforeMount`. If `true`, `WidthProvider` will measure the
container&#039;s width before mounting children. Use this if you&#039;d like to completely eliminate any resizing animation
on application/component mount.

Have a more complicated layout? `WidthProvider` [is very simple](/lib/components/WidthProvider.jsx) and only
listens to window `&#039;resize&#039;` events. If you need more power and flexibility, try the
[SizeMe React HOC](https://github.com/ctrlplusb/react-sizeme) as an alternative to WidthProvider.

### Grid Layout Props

RGL supports the following properties (see the source for the final word on this):

```js
//
// Basic props
//

// This allows setting the initial width on the server side.
// This is required unless using the HOC &lt;WidthProvider&gt; or similar
width: number,

// If true, the container height swells and contracts to fit contents
autoSize: ?boolean = true,

// Number of columns in this layout.
cols: ?number = 12,

// A CSS selector for tags that will not be draggable.
// For example: draggableCancel:&#039;.MyNonDraggableAreaClassName&#039;
// If you forget the leading . it will not work.
// .react-resizable-handle&quot; is always prepended to this value.
draggableCancel: ?string = &#039;&#039;,

// A CSS selector for tags that will act as the draggable handle.
// For example: draggableHandle:&#039;.MyDragHandleClassName&#039;
// If you forget the leading . it will not work.
draggableHandle: ?string = &#039;&#039;,

// Compaction type.
compactType: ?(&#039;vertical&#039; | &#039;horizontal&#039; | null) = &#039;vertical&#039;;

// Layout is an array of objects with the format:
// The index into the layout must match the key used on each item component.
// If you choose to use custom keys, you can specify that key in the layout
// array objects using the `i` prop.
layout: ?Array&lt;{i?: string, x: number, y: number, w: number, h: number}&gt; = null, // If not provided, use data-grid props on children

// Margin between items [x, y] in px.
margin: ?[number, number] = [10, 10],

// Padding inside the container [x, y] in px
containerPadding: ?[number, number] = margin,

// Rows have a static height, but you can change this based on breakpoints
// if you like.
rowHeight: ?number = 150,

// Configuration of a dropping element. Dropping element is a &quot;virtual&quot; element
// which appears when you drag over some element from outside.
// It can be changed by passing specific parameters:
//  i - id of an element
//  w - width of an element
//  h - height of an element
droppingItem?: { i: string, w: number, h: number }

//
// Flags
//
isDraggable: ?boolean = true,
isResizable: ?boolean = true,
isBounded: ?boolean = false,
// Uses CSS3 translate() instead of position top/left.
// This makes about 6x faster paint performance
useCSSTransforms: ?boolean = true,
// If parent DOM node of ResponsiveReactGridLayout or ReactGridLayout has &quot;transform: scale(n)&quot; css property,
// we should set scale coefficient to avoid render artefacts while dragging.
transformScale: ?number = 1,

// If true, grid can be placed one over the other.
// If set, implies `preventCollision`.
allowOverlap: ?boolean = false,

// If true, grid items won&#039;t change position when being
// dragged over. If `allowOverlap` is still false,
// this simply won&#039;t allow one to drop on an existing object.
preventCollision: ?boolean = false,

// If true, droppable elements (with `draggable={true}` attribute)
// can be dropped on the grid. It triggers &quot;onDrop&quot; callback
// with position and event object as parameters.
// It can be useful for dropping an element in a specific position
//
// NOTE: In case of using Firefox you should add
// `onDragStart={e =&gt; e.dataTransfer.setData(&#039;text/plain&#039;, &#039;&#039;)}` attribute
// along with `draggable={true}` otherwise this feature will work incorrect.
// onDragStart attribute is required for Firefox for a dragging initialization
// @see https://bugzilla.mozilla.org/show_bug.cgi?id=568313
isDroppable: ?boolean = false,
// Defines which resize handles should be rendered.
// Allows for any combination of:
// &#039;s&#039; - South handle (bottom-center)
// &#039;w&#039; - West handle (left-center)
// &#039;e&#039; - East handle (right-center)
// &#039;n&#039; - North handle (top-center)
// &#039;sw&#039; - Southwest handle (bottom-left)
// &#039;nw&#039; - Northwest handle (top-left)
// &#039;se&#039; - Southeast handle (bottom-right)
// &#039;ne&#039; - Northeast handle (top-right)
//
// Note that changing this property dynamically does not work due to a restriction in react-resizable.
resizeHandles: ?Array&lt;&#039;s&#039; | &#039;w&#039; | &#039;e&#039; | &#039;n&#039; | &#039;sw&#039; | &#039;nw&#039; | &#039;se&#039; | &#039;ne&#039;&gt; = [&#039;se&#039;],
// Custom component for resize handles
// See `handle` as used in https://github.com/react-grid-layout/react-resizable#resize-handle
// Your component should have the class `.react-resizable-handle`, or you should add your custom
// class to the `draggableCancel` prop.
resizeHandle?: ReactElement&lt;any&gt; | ((resizeHandleAxis: ResizeHandleAxis, ref: ReactRef&lt;HTMLElement&gt;) =&gt; ReactElement&lt;any&gt;),

//
// Callbacks
//

// Callback so you can save the layout.
// Calls back with (currentLayout) after every drag or resize stop.
onLayoutChange: (layout: Layout) =&gt; void,

//
// All callbacks below have signature (layout, oldItem, newItem, placeholder, e, element).
// &#039;start&#039; and &#039;stop&#039; callbacks pass `undefined` for &#039;placeholder&#039;.
//
type ItemCallback = (layout: Layout, oldItem: LayoutItem, newItem: LayoutItem,
                     placeholder: LayoutItem, e: MouseEvent, element: HTMLElement) =&gt; void,

// Calls when drag starts.
onDragStart: ItemCallback,
// Calls on each drag movement.
onDrag: ItemCallback,
// Calls when drag is complete.
onDragStop: ItemCallback,
// Calls when resize starts.
onResizeStart: ItemCallback,
// Calls when resize movement happens.
onResize: ItemCallback,
// Calls when resize is complete.
onResizeStop: ItemCallback,

//
// Dropover functionality
//

// Calls when an element has been dropped into the grid from outside.
onDrop: (layout: Layout, item: ?LayoutItem, e: Event) =&gt; void,
// Calls when an element is being dragged over the grid from outside as above.
// This callback should return an object to dynamically change the droppingItem size
// Return false to short-circuit the dragover
onDropDragOver: (e: DragOverEvent) =&gt; ?({|w?: number, h?: number|} | false),

// Ref for getting a reference for the grid&#039;s wrapping div.
// You can use this instead of a regular ref and the deprecated `ReactDOM.findDOMNode()`` function.
// Note that this type is React.Ref&lt;HTMLDivElement&gt; in TypeScript, Flow has a bug here
// https://github.com/facebook/flow/issues/8671#issuecomment-862634865
innerRef: {current: null | HTMLDivElement},
```

### Responsive Grid Layout Props

The responsive grid layout can be used instead. It supports all of the props above, excepting `layout`.
The new properties and changes are:

```js
// {name: pxVal}, e.g. {lg: 1200, md: 996, sm: 768, xs: 480}
// Breakpoint names are arbitrary but must match in the cols and layouts objects.
breakpoints: ?Object = {lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0},

// # of cols. This is a breakpoint -&gt; cols map, e.g. {lg: 12, md: 10, ...}
cols: ?Object = {lg: 12, md: 10, sm: 6, xs: 4, xxs: 2},


// margin (in pixels). Can be specified either as horizontal and vertical margin, e.g. `[10, 10]` or as a breakpoint -&gt; margin map, e.g. `{lg: [10, 10], md: [10, 10], ...}.
margin: [number, number] | {[breakpoint: $Keys&lt;breakpoints&gt;]: [number, number]},


// containerPadding (in pixels). Can be specified either as horizontal and vertical padding, e.g. `[10, 10]` or as a breakpoint -&gt; containerPadding map, e.g. `{lg: [10, 10], md: [10, 10], ...}.
containerPadding: [number, number] | {[breakpoint: $Keys&lt;breakpoints&gt;]: [number, number]},


// layouts is an object mapping breakpoints to layouts.
// e.g. {lg: Layout, md: Layout, ...}
layouts: {[key: $Keys&lt;breakpoints&gt;]: Layout},

//
// Callbacks
//

// Calls back with breakpoint and new # cols
onBreakpointChange: (newBreakpoint: string, newCols: number) =&gt; void,

// Callback so you can save the layout.
// AllLayouts are keyed by breakpoint.
onLayoutChange: (currentLayout: Layout, allLayouts: {[key: $Keys&lt;breakpoints&gt;]: Layout}) =&gt; void,

// Callback when the width changes, so you can modify the layout as needed.
onWidthChange: (containerWidth: number, margin: [number, number], cols: number, containerPadding: [number, number]) =&gt; void;

```

### Grid Item Props

RGL supports the following properties on grid items or layout items. When initializing a grid,
build a layout array (as in the first example above), or attach this object as the `data-grid` property
to each of your child elements (as in the second example).

If `data-grid` is provided on an item, it will take precedence over an item in the `layout` with the same key (`i`).

Note that if a grid item is provided but incomplete (missing one of `x, y, w, or h`), an error
will be thrown so you can correct your layout.

If no properties are provided for a grid item, one will be generated with a width and height of `1`.

You can set minimums and maximums for each dimension. This is for resizing; it of course has no effect if resizing
is disabled. Errors will be thrown if your mins and maxes overlap incorrectly, or your initial dimensions
are out of range.

Any `&lt;GridItem&gt;` properties defined directly will take precedence over globally-set options. For
example, if the layout has the property `isDraggable: false`, but the grid item has the prop `isDraggable: true`, the item
will be draggable, even if the item is marked `

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[highlightjs/highlight.js]]></title>
            <link>https://github.com/highlightjs/highlight.js</link>
            <guid>https://github.com/highlightjs/highlight.js</guid>
            <pubDate>Fri, 21 Mar 2025 00:04:31 GMT</pubDate>
            <description><![CDATA[JavaScript syntax highlighter with language auto-detection and zero dependencies.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/highlightjs/highlight.js">highlightjs/highlight.js</a></h1>
            <p>JavaScript syntax highlighter with language auto-detection and zero dependencies.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 24,151</p>
            <p>Forks: 3,643</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre># Highlight.js

[![latest version](https://badgen.net/npm/v/highlight.js?label=latest)](https://www.npmjs.com/package/highlight.js)
[![license](https://badgen.net/github/license/highlightjs/highlight.js?color=cyan)](https://github.com/highlightjs/highlight.js/blob/main/LICENSE)
[![install size](https://badgen.net/packagephobia/install/highlight.js?label=npm+install)](https://packagephobia.now.sh/result?p=highlight.js)
![minified](https://img.shields.io/github/size/highlightjs/cdn-release/build/highlight.min.js?label=minified)
[![NPM downloads weekly](https://badgen.net/npm/dw/highlight.js?label=npm+downloads&amp;color=purple)](https://www.npmjs.com/package/highlight.js)
[![jsDelivr CDN downloads](https://badgen.net/jsdelivr/hits/gh/highlightjs/cdn-release?label=jsDelivr+CDN&amp;color=purple)](https://www.jsdelivr.com/package/gh/highlightjs/cdn-release)

[![ci status](https://badgen.net/github/checks/highlightjs/highlight.js/main?label=build)](https://github.com/highlightjs/highlight.js/actions/workflows/tests.js.yml)
[![CodeQL](https://github.com/highlightjs/highlight.js/workflows/CodeQL/badge.svg)](https://github.com/highlightjs/highlight.js/actions/workflows/github-code-scanning/codeql)
[![vulnerabilities](https://badgen.net/snyk/highlightjs/highlight.js)](https://snyk.io/test/github/highlightjs/highlight.js?targetFile=package.json)

[![discord](https://badgen.net/badge/icon/discord?icon=discord&amp;label&amp;color=pink)](https://discord.gg/M24EbU7ja9)
[![open issues](https://badgen.net/github/open-issues/highlightjs/highlight.js?label=issues)](https://github.com/highlightjs/highlight.js/issues)
[![help welcome issues](https://badgen.net/github/label-issues/highlightjs/highlight.js/help%20welcome/open)](https://github.com/highlightjs/highlight.js/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+welcome%22)
[![good first issue](https://badgen.net/github/label-issues/highlightjs/highlight.js/good%20first%20issue/open)](https://github.com/highlightjs/highlight.js/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22)

&lt;!-- [![Build CI](https://img.shields.io/github/workflow/status/highlightjs/highlight.js/Node.js%20CI)](https://github.com/highlightjs/highlight.js/actions?query=workflow%3A%22Node.js+CI%22) --&gt;
&lt;!-- [![commits since release](https://img.shields.io/github/commits-since/highlightjs/highlight.js/latest?label=commits+since)](https://github.com/highlightjs/highlight.js/commits/main) --&gt;
&lt;!-- [![](https://data.jsdelivr.com/v1/package/gh/highlightjs/cdn-release/badge?style=rounded)](https://www.jsdelivr.com/package/gh/highlightjs/cdn-release) --&gt;
&lt;!-- [![Total Lines](https://img.shields.io/tokei/lines/github/highlightjs/highlight.js)]() --&gt;
&lt;!-- [![npm bundle size (minified + gzip)](https://img.shields.io/bundlephobia/minzip/highlight.js.svg)](https://bundlephobia.com/result?p=highlight.js) --&gt;


Highlight.js is a syntax highlighter written in JavaScript. It works in
the browser as well as on the server. It can work with pretty much any
markup, doesn‚Äôt depend on any other frameworks, and has automatic language
detection.

**Contents**

- [Basic Usage](#basic-usage)
  - [In the Browser](#in-the-browser)
    - [Plaintext Code Blocks](#plaintext-code-blocks)
    - [Ignoring a Code Block](#ignoring-a-code-block)
  - [Node.js on the Server](#nodejs-on-the-server)
- [Supported Languages](#supported-languages)
- [Custom Usage](#custom-usage)
  - [Using custom HTML](#using-custom-html)
  - [Using with Vue.js](#using-with-vuejs)
  - [Using Web Workers](#using-web-workers)
- [Importing the Library](#importing-the-library)
  - [Node.js CommonJS Modules / `require`](#nodejs-commonjs-modules--require)
  - [Node.js ES6 Modules / `import`](#nodejs-es6-modules--import)
  - [Browser ES6 Modules](#browser-es6-modules)
- [Getting the Library](#getting-the-library)
  - [Fetch via CDN](#fetch-via-cdn)
    - [cdnjs (link)](#cdnjs-link)
    - [jsdelivr (link)](#jsdelivr-link)
    - [unpkg (link)](#unpkg-link)
  - [Download prebuilt CDN assets](#download-prebuilt-cdn-assets)
  - [Download from our website](#download-from-our-website)
  - [Install via NPM package](#install-via-npm-package)
  - [Build from Source](#build-from-source)
- [Requirements](#requirements)
- [License](#license)
- [Links](#links)

---

#### Upgrading to Version 11

As always, major releases do contain breaking changes which may require action from users.  Please read [VERSION_11_UPGRADE.md](https://github.com/highlightjs/highlight.js/blob/main/VERSION_11_UPGRADE.md) for a detailed summary of breaking changes and any actions you may need to take.


#### Support for older versions &lt;!-- omit in toc --&gt;

Please see [SECURITY.md](https://github.com/highlightjs/highlight.js/blob/main/SECURITY.md) for long-term support information.

---

## Basic Usage
### In the Browser

The bare minimum for using highlight.js on a web page is linking to the
library along with one of the themes and calling [`highlightAll`][1]:

```html
&lt;link rel=&quot;stylesheet&quot; href=&quot;/path/to/styles/default.min.css&quot;&gt;
&lt;script src=&quot;/path/to/highlight.min.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;hljs.highlightAll();&lt;/script&gt;
```

This will find and highlight code inside of `&lt;pre&gt;&lt;code&gt;` tags; it tries
to detect the language automatically. If automatic detection doesn‚Äôt
work for you, or you simply prefer to be explicit, you can specify the language manually by using the `class` attribute:


```html
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;...&lt;/code&gt;&lt;/pre&gt;
```

#### Plaintext Code Blocks

To apply the Highlight.js styling to plaintext without actually highlighting it, use the `plaintext` language:

```html
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;...&lt;/code&gt;&lt;/pre&gt;
```

#### Ignoring a Code Block

To skip highlighting of a code block completely, use the `nohighlight` class:

```html
&lt;pre&gt;&lt;code class=&quot;nohighlight&quot;&gt;...&lt;/code&gt;&lt;/pre&gt;
```

### Node.js on the Server

The bare minimum to auto-detect the language and highlight some code.

```js
// load the library and ALL languages
hljs = require(&#039;highlight.js&#039;);
html = hljs.highlightAuto(&#039;&lt;h1&gt;Hello World!&lt;/h1&gt;&#039;).value
```

To load only a &quot;common&quot; subset of popular languages:

```js
hljs = require(&#039;highlight.js/lib/common&#039;);
```

To highlight code with a specific language, use `highlight`:

```js
html = hljs.highlight(&#039;&lt;h1&gt;Hello World!&lt;/h1&gt;&#039;, {language: &#039;xml&#039;}).value
```

See [Importing the Library](#importing-the-library) for more examples of `require` vs `import` usage, etc.  For more information about the result object returned by `highlight` or `highlightAuto` refer to the [api docs](https://highlightjs.readthedocs.io/en/latest/api.html).



## Supported Languages

Highlight.js supports over 180 languages in the core library.  There are also 3rd party
language definitions available to support even more languages. You can find the full list of supported languages in [SUPPORTED_LANGUAGES.md][9].

## Custom Usage

If you need a bit more control over the initialization of
Highlight.js, you can use the [`highlightElement`][3] and [`configure`][4]
functions. This allows you to better control *what* to highlight and *when*.

For example, here‚Äôs the rough equivalent of calling [`highlightAll`][1] but doing the work manually instead:

```js
document.addEventListener(&#039;DOMContentLoaded&#039;, (event) =&gt; {
  document.querySelectorAll(&#039;pre code&#039;).forEach((el) =&gt; {
    hljs.highlightElement(el);
  });
});
```

Please refer to the documentation for [`configure`][4] options.


### Using custom HTML

We strongly recommend `&lt;pre&gt;&lt;code&gt;` wrapping for code blocks. It&#039;s quite
semantic and &quot;just works&quot; out of the box with zero fiddling. It is possible to
use other HTML elements (or combos), but you may need to pay special attention to
preserving linebreaks.

Let&#039;s say your markup for code blocks uses divs:

```html
&lt;div class=&#039;code&#039;&gt;...&lt;/div&gt;
```

To highlight such blocks manually:

```js
// first, find all the div.code blocks
document.querySelectorAll(&#039;div.code&#039;).forEach(el =&gt; {
  // then highlight each
  hljs.highlightElement(el);
});
```

Without using a tag that preserves linebreaks (like `pre`) you&#039;ll need some
additional CSS to help preserve them.  You could also [pre and post-process line
breaks with a plug-in][brPlugin], but *we recommend using CSS*.

[brPlugin]: https://github.com/highlightjs/highlight.js/issues/2559

To preserve linebreaks inside a `div` using CSS:

```css
div.code {
  white-space: pre;
}
```


### Using with Vue.js

See [highlightjs/vue-plugin](https://github.com/highlightjs/vue-plugin) for a simple Vue plugin that works great with Highlight.js.

An example of `vue-plugin` in action:

```html
  &lt;div id=&quot;app&quot;&gt;
    &lt;!-- bind to a data property named `code` --&gt;
    &lt;highlightjs autodetect :code=&quot;code&quot; /&gt;
    &lt;!-- or literal code works as well --&gt;
    &lt;highlightjs language=&#039;javascript&#039; code=&quot;var x = 5;&quot; /&gt;
  &lt;/div&gt;
```

### Using Web Workers

You can run highlighting inside a web worker to avoid freezing the browser
window while dealing with very big chunks of code.

In your main script:

```js
addEventListener(&#039;load&#039;, () =&gt; {
  const code = document.querySelector(&#039;#code&#039;);
  const worker = new Worker(&#039;worker.js&#039;);
  worker.onmessage = (event) =&gt; { code.innerHTML = event.data; }
  worker.postMessage(code.textContent);
});
```

In worker.js:

```js
onmessage = (event) =&gt; {
  importScripts(&#039;&lt;path&gt;/highlight.min.js&#039;);
  const result = self.hljs.highlightAuto(event.data);
  postMessage(result.value);
};
```

## Importing the Library

First, you&#039;ll likely be installing the library via `npm` or `yarn` -- see [Getting the Library](#getting-the-library).


### Node.js CommonJS Modules / `require`

Requiring the top-level library will load all languages:

```js
// require the highlight.js library, including all languages
const hljs = require(&#039;./highlight.js&#039;);
const highlightedCode = hljs.highlightAuto(&#039;&lt;span&gt;Hello World!&lt;/span&gt;&#039;).value
```

For a smaller footprint, load our common subset of languages (the same set used for our default web build).

```js
const hljs = require(&#039;highlight.js/lib/common&#039;);
```

For the smallest footprint, load only the languages you need:

```js
const hljs = require(&#039;highlight.js/lib/core&#039;);
hljs.registerLanguage(&#039;xml&#039;, require(&#039;highlight.js/lib/languages/xml&#039;));

const highlightedCode = hljs.highlight(&#039;&lt;span&gt;Hello World!&lt;/span&gt;&#039;, {language: &#039;xml&#039;}).value
```


### Node.js ES6 Modules / `import`

The default import will register all languages:

```js
import hljs from &#039;highlight.js&#039;;
```

It is more efficient to import only the library and register the languages you need:

```js
import hljs from &#039;highlight.js/lib/core&#039;;
import javascript from &#039;highlight.js/lib/languages/javascript&#039;;
hljs.registerLanguage(&#039;javascript&#039;, javascript);
```

If your build tool processes CSS imports, you can also import the theme directly as a module:

```js
import hljs from &#039;highlight.js&#039;;
import &#039;highlight.js/styles/github.css&#039;;
```

### Browser ES6 Modules

*Note: For now you&#039;ll want to install `@highlightjs/cdn-assets` package instead of `highlight.js`.
See [Download prebuilt CDN assets](#download-prebuilt-cdn-assets)*

To import the library and register only those languages that you need:

```js
import hljs from &#039;./assets/js/@highlightjs/cdn-assets/es/core.js&#039;;
import javascript from &#039;./assets/js/@highlightjs/cdn-assets/es/languages/javascript.min.js&#039;;

hljs.registerLanguage(&#039;javascript&#039;, javascript);
```

To import the library and register all languages:

```js
import hljs from &#039;./assets/js/@highlightjs/cdn-assets/es/highlight.js&#039;;
```

*Note: The path to these files will vary depending on where you have installed/copied them
within your project or site. The above path is only an example.*

You can also use [`importmap`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script/type/importmap) to import in similar way as Node:

```html
&lt;script type=&quot;importmap&quot;&gt;
{
	&quot;imports&quot;: {
		&quot;@highlightjs&quot;: &quot;./assets/js/@highlightjs/cdn-assets/es/&quot;
	}
}
&lt;/script&gt;
```

Use the above code in your HTML. After that, your JavaScript can import using the named key from
your `importmap`, for example `@highlightjs` in this case:

```js
import hljs from &#039;@highlightjs/core.js&#039;;
import javascript from &#039;@highlightjs/languages/javascript.min.js&#039;;

hljs.registerLanguage(&#039;javascript&#039;, javascript);
```

*Note: You can also import directly from fully static URLs, such as our very own pre-built ES6 Module CDN resources. See [Fetch via CDN](#fetch-via-cdn) for specific examples.*


## Getting the Library

You can get highlight.js as a hosted, or custom-build, browser script or
as a server module. Right out of the box the browser script supports
both AMD and CommonJS, so if you wish you can use RequireJS or
Browserify without having to build from source. The server module also
works perfectly fine with Browserify, but there is the option to use a
build specific to browsers rather than something meant for a server.


**Do not link to GitHub directly.** The library is not supposed to work straight
from the source, it requires building. If none of the pre-packaged options
work for you refer to the [building documentation][6].

**On Almond.** You need to use the optimizer to give the module a name. For
example:

```bash
r.js -o name=hljs paths.hljs=/path/to/highlight out=highlight.js
```

### Fetch via CDN

A prebuilt version of Highlight.js bundled with many common languages is hosted by several popular CDNs.
When using Highlight.js via CDN you can use Subresource Integrity for additional security.  For details
see [DIGESTS.md](https://github.com/highlightjs/cdn-release/blob/main/DIGESTS.md).

#### cdnjs ([link](https://cdnjs.com/libraries/highlight.js))

##### Common JS &lt;!-- omit in toc --&gt;

```html
&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/styles/default.min.css&quot;&gt;
&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/highlight.min.js&quot;&gt;&lt;/script&gt;
&lt;!-- and it&#039;s easy to individually load additional languages --&gt;
&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/languages/go.min.js&quot;&gt;&lt;/script&gt;
```

##### ES6 Modules &lt;!-- omit in toc --&gt;

````html
&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/styles/dark.min.css&quot;&gt;
&lt;script type=&quot;module&quot;&gt;
import hljs from &#039;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/es/highlight.min.js&#039;;
//  and it&#039;s easy to individually load additional languages
import go from &#039;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/es/languages/go.min.js&#039;;
hljs.registerLanguage(&#039;go&#039;, go);
&lt;/script&gt;

````


#### jsdelivr ([link](https://www.jsdelivr.com/package/gh/highlightjs/cdn-release))

##### Common JS &lt;!-- omit in toc --&gt;

```html
&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.11.1/build/styles/default.min.css&quot;&gt;
&lt;script src=&quot;https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.11.1/build/highlight.min.js&quot;&gt;&lt;/script&gt;
&lt;!-- and it&#039;s easy to individually load additional languages --&gt;
&lt;script src=&quot;https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.11.1/build/languages/go.min.js&quot;&gt;&lt;/script&gt;
```

##### ES6 Modules &lt;!-- omit in toc --&gt;

```html
&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.11.1/build/styles/default.min.css&quot;&gt;
&lt;script type=&quot;module&quot;&gt;
import hljs from &#039;https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.11.1/build/es/highlight.min.js&#039;;
//  and it&#039;s easy to individually load additional languages
import go from &#039;https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.11.1/build/es/languages/go.min.js&#039;;
hljs.registerLanguage(&#039;go&#039;, go);
&lt;/script&gt;
```

#### unpkg ([link](https://unpkg.com/browse/@highlightjs/cdn-assets/))

##### Common JS &lt;!-- omit in toc --&gt;

```html
&lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/@highlightjs/cdn-assets@11.11.1/styles/default.min.css&quot;&gt;
&lt;script src=&quot;https://unpkg.com/@highlightjs/cdn-assets@11.11.1/highlight.min.js&quot;&gt;&lt;/script&gt;
&lt;!-- and it&#039;s easy to individually load additional languages --&gt;
&lt;script src=&quot;https://unpkg.com/@highlightjs/cdn-assets@11.11.1/languages/go.min.js&quot;&gt;&lt;/script&gt;
```

##### ES6 Modules &lt;!-- omit in toc --&gt;

```html
&lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/@highlightjs/cdn-assets@11.11.1/styles/default.min.css&quot;&gt;
&lt;script type=&quot;module&quot;&gt;
import hljs from &#039;https://unpkg.com/@highlightjs/cdn-assets@11.11.1/es/highlight.min.js&#039;;
//  and it&#039;s easy to individually load &amp; register additional languages
import go from &#039;https://unpkg.com/@highlightjs/cdn-assets@11.11.1/es/languages/go.min.js&#039;;
hljs.registerLanguage(&#039;go&#039;, go);
&lt;/script&gt;
```


**Note:** *The CDN-hosted `highlight.min.js` package doesn&#039;t bundle every language.* It would be
very large. You can find our list of &quot;common&quot; languages that we bundle by default on our [download page][5].

### Download prebuilt CDN assets

You can also download and self-host the same assets we serve up via our own CDNs.  We publish those builds to the [cdn-release](https://github.com/highlightjs/cdn-release) GitHub repository.  You can easily pull individual files off the CDN endpoints with `curl`, etc; if say you only needed `highlight.min.js` and a single CSS file.

There is also an npm package [@highlightjs/cdn-assets](https://www.npmjs.com/package/@highlightjs/cdn-assets) if pulling the assets in via `npm` or `yarn` would be easier for your build process.

### Download from our website

The [download page][5] can quickly generate a custom single-file minified bundle including only the languages you desire.

**Note:** [Building from source](#build-from-source) can produce slightly smaller builds than the website download.


### Install via NPM package

Our NPM package including all supported languages can be installed with NPM or Yarn:

```bash
npm install highlight.js
# or
yarn add highlight.js
```

There is also another npm package [@highlightjs/cdn-assets](https://www.npmjs.com/package/@highlightjs/cdn-assets) that contains prebuilt CDN assets including [ES6 Modules that can be imported in browser](#browser-es6-modules):

```bash
npm install @highlightjs/cdn-assets
# or
yarn add @highlightjs/cdn-assets
```

Alternatively, you can build the NPM package from source.


### Build from Source

The [current source code][10] is always available on GitHub.

```bash
node tools/build.js -t node
node tools/build.js -t browser :common
node tools/build.js -t cdn :common
```

See our [building documentation][6] for more information.


## Requirements

Highlight.js works on all modern browsers and currently supported Node.js versions.  You&#039;ll need the following software to contribute to the core library:

- Node.js &gt;= 12.x
- npm &gt;= 6.x

## License

Highlight.js is released under the BSD License. See our [LICENSE][7] file
for details.


## Links

The official website for the library is &lt;https://highlightjs.org/&gt;.

Further in-depth documentation for the API and other topics is at
&lt;http://highlightjs.readthedocs.io/&gt;.

A list of the Core Team and contributors can be found in the [CONTRIBUTORS.md][8] file.

[1]: http://highlightjs.readthedocs.io/en/latest/api.html#highlightall
[2]: http://highlightjs.readthedocs.io/en/latest/css-classes-reference.html
[3]: http://highlightjs.readthedocs.io/en/latest/api.html#highlightelement
[4]: http://highlightjs.readthedocs.io/en/latest/api.html#configure
[5]: https://highlightjs.org/download/
[6]: http://highlightjs.readthedocs.io/en/latest/building-testing.html
[7]: https://github.com/highlightjs/highlight.js/blob/main/LICENSE
[8]: https://github.com/highlightjs/highlight.js/blob/main/CONTRIBUTORS.md
[9]: https://github.com/highlightjs/highlight.js/blob/main/SUPPORTED_LANGUAGES.md
[10]: https://github.com/highlightjs/
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[jgraph/drawio-desktop]]></title>
            <link>https://github.com/jgraph/drawio-desktop</link>
            <guid>https://github.com/jgraph/drawio-desktop</guid>
            <pubDate>Fri, 21 Mar 2025 00:04:30 GMT</pubDate>
            <description><![CDATA[Official electron build of draw.io]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/jgraph/drawio-desktop">jgraph/drawio-desktop</a></h1>
            <p>Official electron build of draw.io</p>
            <p>Language: JavaScript</p>
            <p>Stars: 53,339</p>
            <p>Forks: 5,188</p>
            <p>Stars today: 39 stars today</p>
            <h2>README</h2><pre>About
----- 

**drawio-desktop** is a diagramming desktop app based on [Electron](https://electronjs.org/) that wraps the [core draw.io editor](https://github.com/jgraph/drawio).

Download built binaries from the [releases section](https://github.com/jgraph/drawio-desktop/releases).

**Can I use this app for free?** Yes, under the apache 2.0 license. If you don&#039;t change the code and accept it is provided &quot;as-is&quot;, you can use it for any purpose.

Security
--------

draw.io Desktop is designed to be completely isolated from the Internet, apart from the update process. This checks github.com at startup for a newer version and downloads it from an AWS S3 bucket owned by Github. All JavaScript files are self-contained, the Content Security Policy forbids running remotely loaded JavaScript.

No diagram data is ever sent externally, nor do we send any analytics about app usage externally. This means certain functionality for which we do not have a JavaScript implementation do not work in the Desktop build, namely .vsd and Gliffy import.

Security and isolating the app are the primarily objectives of draw.io desktop. If you ask for anything that involves external connections enabled in the app by default, the answer will be no.

Support
-------

Support is provided on a reasonable business constraints basis, but without anything contractually binding. All support is provided via this repo. There is no private ticketing support for non-paying users.

Purchasing draw.io for Confluence or Jira does not entitle you to commercial support for draw.io desktop, unless you have a paid advanced (premium) edition of draw.io for Confluence Cloud.

Developing
----------

**draw.io** is a git submodule of **drawio-desktop**. To get both you need to clone recursively:

`git clone --recursive https://github.com/jgraph/drawio-desktop.git`

To run this:
1. `npm install` (in the root directory of this repo)
2. export DRAWIO_ENV=dev if you want to develop/debug in dev mode.
3. `npm start` _in the root directory of this repo_ runs the app. For debugging, use `npm start --enable-logging`.

Note: If a symlink is used to refer to drawio repo (instead of the submodule), then symlink the `node_modules` directory inside `drawio/src/main/webapp` also.

To release:
1. Update the draw.io sub-module and push the change. Add version tag before pushing to origin.
2. Wait for the builds to complete (https://travis-ci.org/jgraph/drawio-desktop and https://ci.appveyor.com/project/davidjgraph/drawio-desktop)
3. Go to https://github.com/jgraph/drawio-desktop/releases, edit the preview release.
4. Download the windows exe and windows portable, sign them using `signtool sign /a /tr http://rfc3161timestamp.globalsign.com/advanced /td SHA256 c:/path/to/your/file.exe`
5. Re-upload signed file as `draw.io-windows-installer-x.y.z.exe` and `draw.io-windows-no-installer-x.y.z.exe`
6. Add release notes
7. Publish release

*Note*: In Windows release, when using both x64 and is32 as arch, the result is one big file with both archs. This is why we split them.

Local Storage and Session Storage is stored in the AppData folder:

- macOS: `~/Library/Application Support/draw.io`
- Windows: `C:\Users\&lt;USER-NAME&gt;\AppData\Roaming\draw.io\`

Not open-contribution
---------------------

draw.io is closed to contributions (unless a maintainer permits it, which is extremely rare).

The level of complexity of this project means that even simple changes 
can break a _lot_ of other moving parts. The amount of testing required 
is far more than it first seems. If we were to receive a PR, we&#039;d have 
to basically throw it away and write it how we want it to be implemented.

We are grateful for community involvement, bug reports, &amp; feature requests. We do
not wish to come off as anything but welcoming, however, we&#039;ve
made the decision to keep this project closed to contributions for 
the long term viability of the project.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[meteor/meteor]]></title>
            <link>https://github.com/meteor/meteor</link>
            <guid>https://github.com/meteor/meteor</guid>
            <pubDate>Fri, 21 Mar 2025 00:04:29 GMT</pubDate>
            <description><![CDATA[Meteor, the JavaScript App Platform]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/meteor/meteor">meteor/meteor</a></h1>
            <p>Meteor, the JavaScript App Platform</p>
            <p>Language: JavaScript</p>
            <p>Stars: 44,596</p>
            <p>Forks: 5,206</p>
            <p>Stars today: 0 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.meteor.com&quot; target=&quot;_blank&quot;&gt;
    &lt;img align=&quot;center&quot; width=&quot;225&quot; src=&quot;https://user-images.githubusercontent.com/841294/26841702-0902bbee-4af3-11e7-9805-0618da66a246.png&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;br&gt;

&lt;div align=&quot;center&quot;&gt;

[![Travis CI Status](https://api.travis-ci.com/meteor/meteor.svg?branch=devel)](https://app.travis-ci.com/github/meteor/meteor)
[![CircleCI Status](https://circleci.com/gh/meteor/meteor.svg?style=svg)](https://app.circleci.com/pipelines/github/meteor/meteor?branch=devel)
[![built with Meteor](https://img.shields.io/badge/Meteor-3.0.1-green?logo=meteor&amp;logoColor=white)](https://meteor.com)


&lt;/div&gt;

&lt;hr&gt;

Meteor is an **ultra-simple** environment for building **modern** web applications.

&lt;hr&gt;

- [Official Website](https://www.meteor.com)
- [Installation](https://www.meteor.com/developers/install)
- [Documentation](https://docs.meteor.com/#/full/)

&lt;hr&gt;

### üìö **Create your applications using modern JavaScript**

Benefit from the latest technology updates to rapidly prototype and develop your applications.

&lt;hr&gt;

### ‚ú® **Integrate technologies you already use**

Use popular frameworks and tools right out-of-the-box. Focus on building features instead of configuring disparate components yourself.

&lt;hr&gt;

### üíª **Build apps for any device**

Use the same code whether you‚Äôre developing for web, iOS, Android, or desktop for a seamless update experience for your users.

&lt;hr&gt;

# üî• Getting Started

How about trying a tutorial to get started with your favorite technology?

| [&lt;img align=&quot;left&quot; width=&quot;25&quot; src=&quot;https://upload.wikimedia.org/wikipedia/commons/a/a7/React-icon.svg&quot;&gt; React](https://react-tutorial.meteor.com/) |
| - |
| [&lt;img align=&quot;left&quot; width=&quot;25&quot; src=&quot;https://progsoft.net/images/blaze-css-icon-3e80acb3996047afd09f1150f53fcd78e98c1e1b.png&quot;&gt; Blaze](https://blaze-tutorial.meteor.com/) |
| [&lt;img align=&quot;left&quot; width=&quot;25&quot; src=&quot;https://vuejs.org/images/logo.png&quot;&gt; Vue](https://vue-tutorial.meteor.com/) |
| [&lt;img align=&quot;left&quot; width=&quot;25&quot; src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/Svelte_Logo.svg/1200px-Svelte_Logo.svg.png&quot;&gt; Svelte](https://svelte-tutorial.meteor.com/) |

Next, read the [documentation](https://docs.meteor.com/) and get some [examples](https://github.com/meteor/examples).

# üöÄ Quick Start

On your platform, use this line:

```shell
&gt; npm install -g meteor
```
 
üöÄ To create a project:

```shell
&gt; meteor create my-app
```

‚òÑÔ∏è Run it:

```shell
cd my-app
meteor
```

# üß± Developer Resources

**Building an application with Meteor?**

* Deploy on [Meteor Cloud](https://www.meteor.com/cloud)
* Discuss on [Forums](https://forums.meteor.com/)
* Join the Meteor community Slack by clicking this [invite link](https://join.slack.com/t/meteor-community/shared_invite/enQtODA0NTU2Nzk5MTA3LWY5NGMxMWRjZDgzYWMyMTEyYTQ3MTcwZmU2YjM5MTY3MjJkZjQ0NWRjOGZlYmIxZjFlYTA5Mjg4OTk3ODRiOTc).
* Announcement list. Subscribe in the [footer](https://www.meteor.com/).


Interested in helping or contributing to Meteor?  These resources will help:

* [Core development guide](DEVELOPMENT.md)
* [Contribution guidelines](CONTRIBUTING.md)
* [Feature requests](https://github.com/meteor/meteor/discussions/)
* [Issue tracker](https://github.com/meteor/meteor/issues)

To uninstall Meteor: 
  - If installed via npm, run:
      ```shell
      meteor-installer uninstall
      ```
  - If installed via curl, run:
    ```shell
    rm -rf ~/.meteor 
    sudo rm /usr/local/bin/meteor
    ```
To find more information about installation, [read here](https://docs.meteor.com/install.html#uninstall).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>