<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Fri, 25 Apr 2025 00:04:49 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[leaningtech/webvm]]></title>
            <link>https://github.com/leaningtech/webvm</link>
            <guid>https://github.com/leaningtech/webvm</guid>
            <pubDate>Fri, 25 Apr 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[Virtual Machine for the Web]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/leaningtech/webvm">leaningtech/webvm</a></h1>
            <p>Virtual Machine for the Web</p>
            <p>Language: JavaScript</p>
            <p>Stars: 12,791</p>
            <p>Forks: 2,283</p>
            <p>Stars today: 48 stars today</p>
            <h2>README</h2><pre># WebVM

[![Discord server](https://img.shields.io/discord/988743885121548329?color=%235865F2&amp;logo=discord&amp;logoColor=%23fff)](https://discord.gg/yWRr2YnD9c)
[![Issues](https://img.shields.io/github/issues/leaningtech/webvm)](https://github.com/leaningtech/webvm/issues)

This repository hosts the source code for [https://webvm.io](https://webvm.io), a Linux virtual machine that runs in your browser.

Try out the new Alpine / Xorg / i3 graphical environment: [https://webvm.io/alpine.html](https://webvm.io/alpine.html)

&lt;img src=&quot;/assets/welcome_to_WebVM_alpine_2024.png&quot; width=&quot;90%&quot;&gt;

WebVM is a server-less virtual environment running fully client-side in HTML5/WebAssembly. It&#039;s designed to be Linux ABI-compatible. It runs an unmodified Debian distribution including many native development toolchains.

WebVM is powered by the CheerpX virtualization engine, and enables safe, sandboxed client-side execution of x86 binaries on any browser. CheerpX includes an x86-to-WebAssembly JIT compiler, a virtual block-based file system, and a Linux syscall emulator. 

# Enable networking

Modern browsers do not provide APIs to directly use TCP or UDP. WebVM provides networking support by integrating with Tailscale, a VPN network that supports WebSockets as a transport layer.

- Open the &quot;Networking&quot; panel from the side-bar
- Click &quot;Connect to Tailscale&quot; from the panel
- Log in to Tailscale (create an account if you don&#039;t have one)
- Click &quot;Connect&quot; when prompted by Tailscale
- If you are unfamiliar with Tailscale or would like additional information see [WebVM and Tailscale](/docs/Tailscale.md).

# Fork, deploy, customize

&lt;img src=&quot;/assets/fork_deploy_instructions.gif&quot; alt=&quot;deploy_instructions_gif&quot; width=&quot;90%&quot;&gt;

- Fork the repository.
- Enable Github pages in settings.
	- Click on `Settings`.
	- Go to the `Pages` section.
	- Select `Github Actions` as the source.
        - If you are using a custom domain, ensure `Enforce HTTPS` is enabled. 
- Run the workflow.
	- Click on `Actions`.
	- Accept the prompt. This is required only once to enable Actions for your fork.
	- Click on the workflow named `Deploy`.
	- Click `Run workflow` and then once more `Run workflow` in the menu.
- After a few seconds a new `Deploy` workflow will start, click on it to see details.
- After the workflow completes, which takes a few minutes, it will show the URL below the `deploy_to_github_pages` job.

&lt;img src=&quot;/assets/result.png&quot; width=&quot;70%&quot; &gt;

You can now customize `dockerfiles/debian_mini` to suit your needs, or make a new Dockerfile from scratch. Use the `Path to Dockerfile` workflow parameter to select it.

# Run WebVM locally with a custom Debian mini disk image

1. Clone the WebVM Repository

```sh
git clone https://github.com/leaningtech/webvm.git
cd webvm
```

2. Download the Debian mini Ext2 image

	Run the following command to download the Debian mini Ext2 image:

	```sh
	wget &quot;https://github.com/leaningtech/webvm/releases/download/ext2_image/debian_mini_20230519_5022088024.ext2&quot;
	```

	(*You can also build your own disk image by selecting the **&quot;Upload GitHub release&quot;** workflow option*)

3. Update the configuration file

	Edit `config_public_terminal.js` to reference your local disk image:

- Replace: 
	
	`&quot;wss://disks.webvm.io/debian_large_20230522_5044875331.ext2&quot;`
	
	With:
	
	`&quot;/disk-images/debian_mini_20230519_5022088024.ext2&quot;`

	(*Use an absolute or relative URL pointing to the disk image location.*)


- Replace `&quot;cloud&quot;` with the correct disk image type: `&quot;bytes&quot;`
	
4. Build WebVM

	Run the following commands to install dependencies and build WebVM:

	```sh
	npm install
	npm run build
	```

	The output will be placed in the `build` directory.

5. Configure Nginx

- Create a directory for the disk image:

	```sh
	mkdir disk-images
	mv debian_mini_20230519_5022088024.ext2 disk-images/
	```

- Modify your `nginx.conf` file to serve the disk image. Add the following location block:

	```nginx
	location /disk-images/ {
        root .;
        autoindex on;
	}
	```

6. Start Nginx

	Run the following command to start Nginx:

	```sh
	nginx -p . -c nginx.conf
	```

	*Nginx will automatically serve the build directory.*

7. Access WebVM

	Open a browser and visit: `http://127.0.0.1:8081`.

	Enjoy your local WebVM!

# Example customization: Python3 REPL

The `Deploy` workflow takes into account the `CMD` specified in the Dockerfile. To build a REPL you can simply apply this patch and deploy.

```diff
diff --git a/dockerfiles/debian_mini b/dockerfiles/debian_mini
index 2878332..1f3103a 100644
--- a/dockerfiles/debian_mini
+++ b/dockerfiles/debian_mini
@@ -15,4 +15,4 @@ WORKDIR /home/user/
 # We set env, as this gets extracted by Webvm. This is optional.
 ENV HOME=&quot;/home/user&quot; TERM=&quot;xterm&quot; USER=&quot;user&quot; SHELL=&quot;/bin/bash&quot; EDITOR=&quot;vim&quot; LANG=&quot;en_US.UTF-8&quot; LC_ALL=&quot;C&quot;
 RUN echo &#039;root:password&#039; | chpasswd
-CMD [ &quot;/bin/bash&quot; ]
+CMD [ &quot;/usr/bin/python3&quot; ]
```

# How to use Claude AI

To access Claude AI, you need an API key. Follow these steps to get started:

1. Create an account
- Visit [Anthropic Console](https://console.anthropic.com/login) and sign up with your e-mail. You&#039;ll receive a sign in link to the Anthropic Console. 

&lt;img src=&quot;/assets/anthropic_signup.png&quot; width=&quot;90%&quot;&gt;

2. Get your API key
- Once logged in, navigate to **Get API keys**.
- Purchase the amount of credits you need. After completing the purchase, you&#039;ll be able to generate the key through the API console.

&lt;img src=&quot;/assets/anthropic_api_payment.png&quot; width=&quot;90%&quot;&gt;

3. Log in with your API key
- Navigate to your WebVM and hover over the robot icon. This will show the Claude AI Integration tab. For added convenience, you can click the pin button in the top right corner to keep the tab in place.
- You&#039;ll see a prompt where you can insert your Claude API key.
- Insert your key and press enter.

&lt;img src=&quot;/assets/insert_key.png&quot; width=&quot;90%&quot;&gt;

4. Start using Claude AI
- Once your API key is entered, you can begin interacting with Claude AI by asking questions such as:

 __&quot;Solve the CTF challenge at `/home/user/chall1.bin.` Note that the binary reads from stdin.&quot;__

&lt;img src=&quot;/assets/webvm_claude_ctf.gif&quot; alt=&quot;deploy_instructions_gif&quot; width=&quot;90%&quot;&gt;

**Important:** Your API key is private and should never be shared. We do not have access to your key, which is not only stored locally in your browser.

# Bugs and Issues

Please use [Issues](https://github.com/leaningtech/webvm/issues) to report any bug.
Or come to say hello / share your feedback on [Discord](https://discord.gg/yTNZgySKGa).

# More links

- [WebVM: server-less x86 virtual machines in the browser](https://leaningtech.com/webvm-server-less-x86-virtual-machines-in-the-browser/)
- [WebVM: Linux Virtualization in WebAssembly with Full Networking via Tailscale](https://leaningtech.com/webvm-virtual-machine-with-networking-via-tailscale/)
- [Mini.WebVM: Your own Linux box from Dockerfile, virtualized in the browser via WebAssembly](https://leaningtech.com/mini-webvm-your-linux-box-from-dockerfile-via-wasm/)
- Reference GitHub Pages deployment: [Mini.WebVM](https://mini.webvm.io)
- [Crafting the Impossible: X86 Virtualization in the Browser with WebAssembly](https://www.youtube.com/watch?v=VqrbVycTXmw) Talk at JsNation 2022

# Thanks to... 
This project depends on:
- [CheerpX](https://cheerpx.io/), made by [Leaning Technologies](https://leaningtech.com/) for x86 virtualization and Linux emulation
- xterm.js, [https://xtermjs.org/](https://xtermjs.org/), for providing the Web-based terminal emulator
- [Tailscale](https://tailscale.com/), for the networking component
- [lwIP](https://savannah.nongnu.org/projects/lwip/), for the TCP/IP stack, compiled for the Web via [Cheerp](https://github.com/leaningtech/cheerp-meta/)

# Versioning

WebVM depends on the CheerpX x86-to-WebAssembly virtualization technology, which is included in the project via [NPM](https://www.npmjs.com/package/@leaningtech/cheerpx).

The NPM package is updated on every release.

Every build is immutable, if a specific version works well for you today, it will keep working forever.

# License

WebVM is released under the Apache License, Version 2.0.

You are welcome to use, modify, and redistribute the contents of this repository.

The public CheerpX deployment is provided **as-is** and is **free to use** for technological exploration, testing and use by individuals. Any other use by organizations, including non-profit, academia and the public sector, requires a license. Downloading a CheerpX build for the purpose of hosting it elsewhere is not permitted without a commercial license.

Read more about [CheerpX licensing](https://cheerpx.io/docs/licensing)

If you want to build a product on top of CheerpX/WebVM, please get in touch: sales@leaningtech.com
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[microsoft/generative-ai-with-javascript]]></title>
            <link>https://github.com/microsoft/generative-ai-with-javascript</link>
            <guid>https://github.com/microsoft/generative-ai-with-javascript</guid>
            <pubDate>Fri, 25 Apr 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[Join a time-traveling adventure where you meet history’s legends while learning Generative AI technologies! ✨]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/microsoft/generative-ai-with-javascript">microsoft/generative-ai-with-javascript</a></h1>
            <p>Join a time-traveling adventure where you meet history’s legends while learning Generative AI technologies! ✨</p>
            <p>Language: JavaScript</p>
            <p>Stars: 514</p>
            <p>Forks: 264</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt; 

&lt;img src=&quot;./docs/images/logo.png&quot; alt=&quot;&quot; align=&quot;center&quot; height=&quot;128&quot; /&gt;

# Generative AI for beginners with JavaScript

[![License](https://img.shields.io/badge/License-MIT-blue?style=flat-square)](https://github.com/microsoft/generative-ai-with-javascript/blob/main/LICENSE)
[![Watch the video series](https://img.shields.io/badge/Videos-d95652.svg?style=flat-square&amp;logo=youtube)](https://aka.ms/genai-js)
[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)

[![Azure AI Discord](https://dcbadge.limes.pink/api/server/kzRShWzttr)](https://discord.gg/kzRShWzttr)

⭐ If you like this repo, star it on GitHub — it helps a lot!

[Getting Started](#getting-started) • [Lessons](#lessons) • [Keep Learning](#keep-learning)

&lt;/div&gt;

Ready to integrate Generative AI into your JavaScript apps? 

This course throws you into a *time-traveling adventure*—meet history’s legends with a fun twist, while learning Generative AI technologies ✨
 
&gt; [!IMPORTANT]  
&gt; Open-source vibes! Reuse, tweak, and share this content freely.
 
![Character App Sneak Peek](./docs/images/background.png)
 
## NEW - tool calling lesson just added

Learn [Tool calling/Function calling](./lessons/06-tool-calling) with Amelia Earhart. Want to help translate it also? Check out the next section below on translation.


## Call for help - help us translate !

Help us translate this course. Each lesson in `lessons/` folder has a `translations/` directory. Add your translation file like so `README.&lt;language code&gt;.md`, for example *README.es.md*.  - Thank You.


## Step into history with AI magic! 
 
Dive into an immersive learning experience powered by Generative AI:  
- **Learn about Generative AI technologies**. If you&#039;ve wanted to understand Generative AI and the potential for your applications, you&#039;re in the right place!
 
- **Epic Time-Travel Stories**.
Dive into a fun tale, chatting with icons like Leonardo da Vinci, Ada Lovelace, or Montezuma in every lesson.
 
- **Companion App**. Interact with historical figures using Generative AI technologies ([see our Responsible AI disclaimer](#responsible-ai-disclaimer)).

  ![Interact with History through conversation](./docs/images/character-chat.png) 

  Check the [_app_](./app/) directory to run the [app locally](./docs/setup/README.md#option-2--running-the-app-locally) or use [GitHub Codespaces](./docs/setup/README.md) to run it online.

- **Accessibility FTW**. Read it, hear it—audio tags bring it to life.
 
&gt; “It’s like a comic book with code!” — Happy User
 
## Getting started
 
Throughout this course you&#039;ll find many code examples and exercises, so we encourage you to run and experiment with the code in your own copy of this repository:
 
1. Select the **Fork** button in the upper right-hand corner of the repository or select this button:
   [![Fork](https://img.shields.io/badge/Fork-Repository-blue?style=flat-square)](https://github.com/microsoft/generative-ai-with-javascript/fork)
 
2. Click the **Code** button in your forked repository, go to the **Codespaces** tab, and then choose **Create codespace**.

   This will create a preconfigured online environment for you. You&#039;ll then be able to use [GitHub Models](https://github.com/marketplace/models) to run the code examples and interact with AI models for free, without any additional setup.

&gt; [!NOTE]
&gt;
&gt; While GitHub Codespaces provides a quick and easy starting point you can also run the code samples [locally](/docs/setup/README.md#option-2--running-the-app-locally).
&gt;
&gt; Learn more about [GitHub Codespaces and GitHub Models concepts here](/docs/setup/README.md).  

### Lesson description

📦 Each lesson includes:

- A **written lesson** with an assignment and quiz.
- A short **video** to help further your learning.
- **Solutions** for each assignment and quiz.
- **Characters** you can interact with using our [companion app](./app), demonstrating Generative AI.

## Lessons

🗃️ Table of contents

| # | Lesson Link  | Description |
| ---- | ----------- | ----------- |
| 1 | [Introduction to Generative AI and LLMs for JavaScript Developers](./lessons/01-intro-to-genai) | Understand Generative AI and LLM fundamentals, their applications and limits in JavaScript, and how to use AI to enhance user experiences. |
| 2 | [Build your first AI app](./lessons/02-first-ai-app) | Set up your development environment, write a basic app, and understand system prompts. |
| 3 | [Prompt engineering](./lessons/03-prompt-engineering) | Learn Prompt engineering fundamentals, techniques, and meta-prompts for better AI outcomes. |
| 4 | [Structured output](./lessons/04-structured-output) | Learn structured output, how to extract data from prompts, and present it in various formats, such as JSON, for easier consumption. |
| 5 | [Retrieval augmented generation (RAG)](./lessons/05-rag) | Learn the basics of RAG, how to integrate external data, and how to leverage it for more relevant, accurate AI responses. |
| 6 | [Tool calling/Function calling](./lessons/06-tool-calling) | Learn how to give your LLM extra capbilities, bring your own functions  |

New lessons will be added to the course over time, so stay tuned!

## Keep learning

🙌 After completing this course, you can continue learning by exploring our additional resources.

&lt;details&gt;
&lt;summary&gt;🎬Video Series&lt;/summary&gt;

| # | Session | Description | Slides | Demo | Script | Video |
|---|---------|-------------|--------|------|--------|-------|
| 0 | Series introduction | Introduces the series and its content. | [pptx](/videos/slides/00-intro.pptx) / [pdf](/videos/slides/pdf/00-intro.pdf) | - | [Script](/videos/sessions/00-intro.md) | [📺](https://www.youtube.com/watch?v=vLYtDgs_zx8&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=1) |
| 1 | What you need to know about LLMs | Explores what LLMs are, how they&#039;re trained, how they work and their limits. | [pptx](/videos/slides/01-llms.pptx) / [pdf](/videos/slides/pdf/01-llms.pdf) | [Demo](/videos/demos/01-llms/) | [Script](/videos/sessions/01-llms.md) | [📺](https://www.youtube.com/watch?v=GQ_2OjNZ9aA&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=2)  |
| 2 | Essential prompt engineering techniques | Practical prompt engineering techniques to get the best out of AI models. | [pptx](/videos/slides/02-prompt-engineering.pptx) / [pdf](/videos/slides/pdf/02-prompt-engineering.pdf) | [Demo](/videos/demos/02-prompt-engineering/) | [Script](/videos/sessions/02-prompt-engineering.md) | [📺](https://www.youtube.com/watch?v=gQ6TlyxBmWs&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=3)  |
| 3 | Improve AI accuracy and reliability with RAG | Introduces Retrieval-Augmented Generation, to use AI with your own data. | [pptx](/videos/slides/03-rag.pptx) / [pdf](/videos/slides/pdf/03-rag.pdf) | [Demo](/videos/demos/03-rag/) | [Script](/videos/sessions/03-rag.md) | [📺](https://www.youtube.com/watch?v=xkFOmx5yxIA&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=4) |
| 4 | Speed up your AI development with LangChain.js | Covers LangChain.js framework core concepts, and how to use it to accelerate AI developments. | [pptx](/videos/slides/04-langchainjs.pptx) / [pdf](/videos/slides/pdf/04-langchainjs.pdf) | [Demo](/videos/demos/04-langchainjs/) | [Script](/videos/sessions/04-langchainjs.md) | [📺](https://www.youtube.com/watch?v=02IDU8eCX8o&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=5) |
| 5 | Run AI models on your local machine with Ollama | Shows how to integrate local AI models into your development workflow. | [pptx](/videos/slides/05-local-models.pptx) / [pdf](/videos/slides/pdf/05-local-models.pdf) | [Demo](/videos/demos/05-local-models/) | [Script](/videos/sessions/05-local-models.md) | [📺](https://www.youtube.com/watch?v=dLfNnoPv4AQ&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=6) |
| 6 | Get started with AI for free using Phi-3 | Experiments with Ollama and Phi-3 model directly from your browser. | [pptx](/videos/slides/06-playground.pptx) / [pdf](/videos/slides/pdf/06-playground.pdf) | [Demo](/videos/demos/06-playground/) | [Script](/videos/sessions/06-playground.md) | [📺](https://www.youtube.com/watch?v=Ds32MS9SHzU&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=7) |
| 7 | Introduction to Azure AI Foundry | Kickstart your journey with Azure AI Foundry. | [pptx](/videos/slides/07-ai-foundry.pptx) / [pdf](/videos/slides/pdf/07-ai-foundry.pdf) | [Demo](/videos/demos/07-ai-foundry/) | [Script](/videos/sessions/07-ai-foundry.md) | [📺](https://www.youtube.com/watch?v=9Mo-VOGk8ng&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=8) |
| 8 | Building Generative AI Apps with Azure Cosmos DB | Build generative AI apps with Azure Cosmos DB and vector search. | [pptx](/videos/slides/08-cosmos-db.pptx) / [pdf](/videos/slides/pdf/08-cosmos-db.pdf) | [Demo](/videos/demos/08-cosmos-db/) | [Script](/videos/sessions/08-cosmos-db.md) | [📺](https://www.youtube.com/watch?v=-GQyaLbeqxQ&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=9)  |
| 9 | Azure tools &amp; services for hosting and storing AI apps | Build, deploy, and scale AI applications using Azure tools. | [pptx](/videos/slides/09-azure-tools.pptx) / [pdf](/videos/slides/pdf/09-azure-tools.pdf) | - | [Script](/videos/sessions/09-azure-tools.md) | [📺](https://www.youtube.com/watch?v=WB6Fpzhwyug&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=10) |
| 10 | Streaming Generative AI output with the AI Chat Protocol | Integrate streaming easily into your apps with the AI Chat Protocol. | [pptx](/videos/slides/10-chat-protocol.pptx) / [pdf](/videos/slides/pdf/10-chat-protocol.pdf) | [Demo](/videos/demos/10-chat-protocol/) | [Script](/videos/sessions/10-chat-protocol.md) | [📺](https://www.youtube.com/watch?v=fzDCW-6hMtU&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=11) |

To see the full page of resources, go to this [video overview page](/videos/README.md).

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;🎒 Other Courses&lt;/summary&gt;

- [Generative AI for Beginners](https://aka.ms/genai-beginners)
- [Generative AI for Beginners .NET](https://github.com/microsoft/Generative-AI-for-beginners-dotnet)
- [Generative AI with JavaScript](https://github.com/microsoft/generative-ai-with-javascript)
- [AI for Beginners](https://aka.ms/ai-beginners)
- [AI Agents for Beginners - A Course](https://github.com/microsoft/ai-agents-for-beginners)
- [Data Science for Beginners](https://aka.ms/datascience-beginners)
- [ML for Beginners](https://aka.ms/ml-beginners)
- [Cybersecurity for Beginners](https://github.com/microsoft/Security-101) 
- [Web Dev for Beginners](https://aka.ms/webdev-beginners)
- [IoT for Beginners](https://aka.ms/iot-beginners)
- [XR Development for Beginners](https://github.com/microsoft/xr-development-for-beginners)
- [Mastering GitHub Copilot for Paired Programming](https://github.com/microsoft/Mastering-GitHub-Copilot-for-Paired-Programming)
- [Mastering GitHub Copilot for C#/.NET Developers](https://github.com/microsoft/mastering-github-copilot-for-dotnet-csharp-developers)
- [Choose Your Own Copilot Adventure](https://github.com/microsoft/CopilotAdventures)
&lt;/details&gt;

You&#039;ll also find additional resources in the form of [tutorials, code samples and more](/docs/additional-resources.md).

## Responsible AI Disclaimer

&gt; [!IMPORTANT]
&gt; DISCLAIMER: This repository contains fictional content generated by AI. The historical characters depicted here are generating responses thanks to generative AI, which is based on training data. Any responses generated by these characters do not represent their actual views or quotes. This content is intended solely for entertainment purposes. [Microsoft Responsible AI principles here](https://www.microsoft.com/en-us/ai/principles-and-approach/)


## Interact with community

[![Azure AI Discord](https://dcbadge.limes.pink/api/server/kzRShWzttr)](https://discord.gg/kzRShWzttr)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[ToolJet/ToolJet]]></title>
            <link>https://github.com/ToolJet/ToolJet</link>
            <guid>https://github.com/ToolJet/ToolJet</guid>
            <pubDate>Fri, 25 Apr 2025 00:04:47 GMT</pubDate>
            <description><![CDATA[Low-code platform for building business applications. Connect to databases, cloud storages, GraphQL, API endpoints, Airtable, Google sheets, OpenAI, etc and build apps using drag and drop application builder. Built using JavaScript/TypeScript. 🚀]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ToolJet/ToolJet">ToolJet/ToolJet</a></h1>
            <p>Low-code platform for building business applications. Connect to databases, cloud storages, GraphQL, API endpoints, Airtable, Google sheets, OpenAI, etc and build apps using drag and drop application builder. Built using JavaScript/TypeScript. 🚀</p>
            <p>Language: JavaScript</p>
            <p>Stars: 35,517</p>
            <p>Forks: 4,558</p>
            <p>Stars today: 33 stars today</p>
            <h2>README</h2><pre>ToolJet is an **open-source low-code framework** to build and deploy internal tools with minimal engineering effort. ToolJet&#039;s drag-and-drop frontend builder allows you to create complex, responsive frontends within minutes. Additionally, you can integrate various data sources, including databases like PostgreSQL, MongoDB, and Elasticsearch; API endpoints with OpenAPI spec and OAuth2 support; SaaS tools such as Stripe, Slack, Google Sheets, Airtable, and Notion; as well as object storage services like S3, GCS, and Minio, to fetch and write data.

 :star: If you find ToolJet useful, please consider giving us a star on GitHub! Your support helps us continue to innovate and deliver exciting features.

![Docker Cloud Build Status](https://img.shields.io/docker/cloud/build/tooljet/tooljet-ce)
![Number of GitHub contributors](https://img.shields.io/github/contributors/tooljet/tooljet)
[![Number of GitHub issues that are open](https://img.shields.io/github/issues/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet/issues)
[![Number of GitHub stars](https://img.shields.io/github/stars/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet/stargazers)
![Number of GitHub closed issues](https://img.shields.io/github/issues-closed/tooljet/tooljet)
![Number of GitHub pull requests that are open](https://img.shields.io/github/issues-pr-raw/tooljet/tooljet)
![GitHub release; latest by date](https://img.shields.io/github/v/release/tooljet/tooljet)
![GitHub commit activity](https://img.shields.io/github/commit-activity/m/tooljet/tooljet)
[![GitHub license which is AGPL license](https://img.shields.io/github/license/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet)
[![Follow us on X, formerly Twitter](https://img.shields.io/twitter/follow/ToolJet?style=social)](https://twitter.com/ToolJet)

&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://user-images.githubusercontent.com/7828962/211444352-4d6d2e4a-13c9-4980-9e16-4aed4af9811b.png&quot; alt=&quot;Tooljet dashboard showing inventory and orders&quot;/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://github.com/ToolJet/ToolJet/assets/25361949/0e711f3a-edb7-496b-8833-107de3826933&quot;/&gt;
&lt;/p&gt;

## All features

- **Visual App Builder:** 45+ built-in responsive components, including Tables, Charts, Lists, Forms, and Progress Bars.
- **ToolJet Database:** Built-in no-code database.
- **Multi-Page:** Build an application with multiple pages.
- **Multiplayer editing:** Allows simultaneous app building by multiple developers.
- **50+ data sources:** Integrate with external databases, cloud storage, and APIs.
- **Desktop &amp; mobile:** Customize layout widths to fit various screen sizes.
- **Self-host:** Supports Docker, Kubernetes, AWS EC2, Google Cloud Run, and more.
- **Collaborate:** Add comments anywhere on the canvas and tag your team members.
- **Extend with plugins:** Use our [command-line tool](https://www.npmjs.com/package/@tooljet/cli) to easily bootstrap new connectors.
- **Version control:** Manage multiple application versions with a structured release cycle.
- **Run JS &amp; Python code:** Execute custom JavaScript and Python snippets.
- **Granular access control:** Set permissions at both group and app levels.
- **Low-code:** Use JS code almost anywhere within the builder, such as setting text color based on status with 
`status === &#039;success&#039; ? &#039;green&#039; : &#039;red&#039;`.
- **No-code query editors:** Query Editors are available for all supported data sources.
- **Join and transform data:** Transform query results using JavaScript or Python code.
- **Secure:** All the credentials are securely encrypted using `aes-256-gcm`.
- **Data Privacy:** ToolJet serves solely as a proxy and does not store data.
- **SSO:** Supports multiple Single Sign-On providers.

&lt;hr&gt;

## Quickstart
The easiest way to get started with ToolJet is by creating a [ToolJet Cloud](https://tooljet.ai) account. ToolJet Cloud offers a hosted solution of ToolJet. If you want to self-host ToolJet, kindly proceed to [deployment documentation](https://docs.tooljet.ai/docs/setup/).

### Try using Docker
Want to give ToolJet a quick spin on your local machine? You can run the following command from your terminal to have ToolJet up and running right away.


```bash
docker run \
  --name tooljet \
  --restart unless-stopped \
  -p 80:80 \
  --platform linux/amd64 \
  -v tooljet_data:/var/lib/postgresql/13/main \
  tooljet/try:ee-lts-latest
```

*For users upgrading their ToolJet version, we recommend choosing the LTS version over the latest version. The LTS version ensures stability with production bug fixes, security patches, and performance enhancements.*

## Tutorials and examples

[Time Tracker Application](https://docs.tooljet.ai/docs/#quickstart-guide)&lt;br&gt;
[Build your own CMS using low-code](https://blog.tooljet.ai/build-cms-using-lowcode-and-mongodb/)&lt;br&gt;
[AWS S3 Browser](https://blog.tooljet.ai/build-an-aws-s3-broswer-with-tooljet/)&lt;br&gt;

## Documentation
Documentation is available at https://docs.tooljet.ai.

- [Getting Started](https://docs.tooljet.ai)&lt;br&gt;
- [Data source Reference](https://docs.tooljet.ai/docs/data-sources/airtable/)&lt;br&gt;
- [Component Reference](https://docs.tooljet.ai/docs/widgets/button)

## Self-hosted
You can use ToolJet Cloud for a fully managed solution. If you want to self-host ToolJet, we have guides on deploying ToolJet on Kubernetes, AWS EC2, Docker, and more.

| Provider  | Documentation |
| :------------- | :------------- |
| Digital Ocean | [Link](https://docs.tooljet.ai/docs/setup/digitalocean)  |
| Docker  | [Link](https://docs.tooljet.ai/docs/setup/docker)   |
| AWS EC2 | [Link](https://docs.tooljet.ai/docs/setup/ec2)  |
| AWS ECS | [Link](https://docs.tooljet.ai/docs/setup/ecs)   |
| OpenShift | [Link](https://docs.tooljet.ai/docs/setup/openshift)   |
| Helm | [Link](https://docs.tooljet.ai/docs/setup/helm)   |
| AWS EKS (Kubernetes) | [Link](https://docs.tooljet.ai/docs/setup/kubernetes)   |
| GCP GKE (Kubernetes) | [Link](https://docs.tooljet.ai/docs/setup/kubernetes-gke)   |
| Azure AKS (Kubernetes) | [Link](https://docs.tooljet.ai/docs/setup/kubernetes-aks)   |
| Azure Container | [Link](https://docs.tooljet.ai/docs/setup/azure-container)   |
| Google Cloud Run  | [Link](https://docs.tooljet.ai/docs/setup/google-cloud-run)   |
| Deploying ToolJet client  | [Link](https://docs.tooljet.ai/docs/setup/client)   |
| Deploying ToolJet on a Subpath  | [Link](https://docs.tooljet.ai/docs/setup/tooljet-subpath/)   |

## Marketplace 
ToolJet can now be found on both AWS and Azure Marketplaces, making it simpler than ever to access and deploy our app-building platform.

Find ToolJet on AWS Marketplace [here](https://aws.amazon.com/marketplace/pp/prodview-fxjto27jkpqfg?sr=0-1&amp;ref_=beagle&amp;applicationId=AWSMPContessa) and explore seamless integration on Azure Marketplace [here](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/tooljetsolutioninc1679496832216.tooljet?tab=Overview).

## Community support
For general help using ToolJet, please refer to the official [documentation](https://docs.tooljet.ai/docs/). For additional help, you can use one of these channels to ask a question:

- [Slack](https://tooljet.ai/slack) - Discussions with the community and the team.
- [GitHub](https://github.com/ToolJet/ToolJet/issues) - For bug reports and feature requests.
- [𝕏 (Twitter)](https://twitter.com/ToolJet) - Get the product updates quickly.

## Roadmap
Check out our [roadmap](https://github.com/orgs/ToolJet/projects/15) to stay updated on recently released features and learn about what&#039;s coming next.

## Branching model
We use the git-flow branching model. The base branch is `develop`. If you are looking for a stable version, please use the main branch or tags labeled as v1.x.x.

## Contributing
Kindly read our [Contributing Guide](CONTRIBUTING.md) to familiarize yourself with ToolJet&#039;s development process, how to suggest bug fixes and improvements, and the steps for building and testing your changes. &lt;br&gt;

## Contributors
&lt;a href=&quot;https://github.com/tooljet/tooljet/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=tooljet/tooljet&amp;max=400&amp;columns=20&quot; /&gt;
  &lt;img src=&quot;https://us-central1-tooljet-hub.cloudfunctions.net/github&quot; width=&quot;0&quot; height=&quot;0&quot; /&gt;
&lt;/a&gt;

## License
ToolJet © 2023, ToolJet Solutions Inc - Released under the GNU Affero General Public License v3.0.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[drawdb-io/drawdb]]></title>
            <link>https://github.com/drawdb-io/drawdb</link>
            <guid>https://github.com/drawdb-io/drawdb</guid>
            <pubDate>Fri, 25 Apr 2025 00:04:46 GMT</pubDate>
            <description><![CDATA[Free, simple, and intuitive online database diagram editor and SQL generator.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/drawdb-io/drawdb">drawdb-io/drawdb</a></h1>
            <p>Free, simple, and intuitive online database diagram editor and SQL generator.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 28,097</p>
            <p>Forks: 1,982</p>
            <p>Stars today: 350 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
    &lt;img width=&quot;64&quot; alt=&quot;drawdb logo&quot; src=&quot;./src/assets/icon-dark.png&quot;&gt;
    &lt;h1&gt;drawDB&lt;/h1&gt;
&lt;/div&gt;

&lt;h3 align=&quot;center&quot;&gt;Free, simple, and intuitive database schema editor and SQL generator.&lt;/h3&gt;

&lt;div align=&quot;center&quot; style=&quot;margin-bottom:12px;&quot;&gt;
    &lt;a href=&quot;https://drawdb.app/&quot; style=&quot;display: flex; align-items: center;&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Start%20building-grey&quot; alt=&quot;drawDB&quot;/&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://discord.gg/BrjZgNrmR6&quot; style=&quot;display: flex; align-items: center;&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/discord/1196658537208758412.svg?label=Join%20the%20Discord&amp;logo=discord&quot; alt=&quot;Discord&quot;/&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://x.com/drawDB_&quot; style=&quot;display: flex; align-items: center;&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Follow%20us%20on%20X-blue?logo=X&quot; alt=&quot;Follow us on X&quot;/&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;h3 align=&quot;center&quot;&gt;&lt;img width=&quot;700&quot; style=&quot;border-radius:5px;&quot; alt=&quot;demo&quot; src=&quot;drawdb.png&quot;&gt;&lt;/h3&gt;

DrawDB is a robust and user-friendly database entity relationship (DBER) editor right in your browser. Build diagrams with a few clicks, export sql scripts, customize your editor, and more without creating an account. See the full set of features [here](https://drawdb.app/).

## Getting Started

### Local Development

```bash
git clone https://github.com/drawdb-io/drawdb
cd drawdb
npm install
npm run dev
```

### Build

```bash
git clone https://github.com/drawdb-io/drawdb
cd drawdb
npm install
npm run build
```

### Docker Build

```bash
docker build -t drawdb .
docker run -p 3000:80 drawdb
```

If you wish to work with sharing, set up [server](https://github.com/drawdb-io/drawdb-server) and environment variables according to `.env.sample`. This is not required unless you want to share files.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[Worklenz/worklenz]]></title>
            <link>https://github.com/Worklenz/worklenz</link>
            <guid>https://github.com/Worklenz/worklenz</guid>
            <pubDate>Fri, 25 Apr 2025 00:04:45 GMT</pubDate>
            <description><![CDATA[All in one project management tool for efficient teams]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Worklenz/worklenz">Worklenz/worklenz</a></h1>
            <p>All in one project management tool for efficient teams</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,549</p>
            <p>Forks: 122</p>
            <p>Stars today: 23 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://worklenz.com&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;
        &lt;img src=&quot;https://app.worklenz.com/assets/icons/icon-144x144.png&quot; alt=&quot;Worklenz Logo&quot; width=&quot;75&quot;&gt;
    &lt;/a&gt;
    &lt;br&gt;
    Worklenz    
&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://worklenz.com/task-management/&quot;&gt;Task Management&lt;/a&gt; |
    &lt;a href=&quot;https://worklenz.com/time-tracking/&quot;&gt;Time Tracking&lt;/a&gt; |
    &lt;a href=&quot;https://worklenz.com/analytics/&quot;&gt;Analytics&lt;/a&gt; |
    &lt;a href=&quot;https://worklenz.com/resource-management/&quot;&gt;Resource Management&lt;/a&gt; |
    &lt;a href=&quot;https://worklenz.com/templates/&quot;&gt;Project Templates&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://worklenz.com&quot; target=&quot;_blank&quot;&gt;
      &lt;img
        src=&quot;https://worklenz.s3.amazonaws.com/assets/screenshots/hero-view.png&quot;
        alt=&quot;Worklenz&quot;
        width=&quot;1200&quot;
      /&gt;
    &lt;/a&gt;
&lt;/p&gt;

Worklenz is a project management tool designed to help organizations improve their efficiency. It provides a
comprehensive solution for managing projects, tasks, and collaboration within teams.

## Features

- **Project Planning**: Create and organize projects, assign tasks to team members.
- **Task Management**: Break down projects into smaller tasks, set due dates, priorities, and track progress.
- **Collaboration**: Share files, leave comments, and communicate seamlessly with your team members.
- **Time Tracking**: Monitor time spent on tasks and projects for better resource allocation and billing.
- **Reporting**: Generate detailed reports on project status, team workload, and performance metrics.

## Tech Stack

This repository contains the frontend and backend code for Worklenz.

- **Frontend**: Built using React with Ant Design as the UI library.
- **Backend**: Built using TypeScript, Express.js, with PostgreSQL as the database.

## Requirements

- Node.js version v18 or newer
- PostgreSQL version v15 or newer
- Docker and Docker Compose (for containerized setup)

## Getting Started

These instructions will help you set up and run the Worklenz project on your local machine for development and testing purposes.

### Prerequisites

- Node.js (version 18 or higher)
- PostgreSQL database
- An S3-compatible storage service (like MinIO) or Azure Blob Storage

### Option 1: Manual Installation

1. Clone the repository
```bash
git clone https://github.com/Worklenz/worklenz.git
cd worklenz
```

2. Set up environment variables
   - Copy the example environment files
   ```bash
   cp .env.example .env
   cp worklenz-backend/.env.example worklenz-backend/.env
   ```
   - Update the environment variables with your configuration

3. Install dependencies
```bash
# Install backend dependencies
cd worklenz-backend
npm install

# Install frontend dependencies
cd ../worklenz-frontend
npm install
```

4. Set up the database
```bash
# Create a PostgreSQL database named worklenz_db
cd worklenz-backend

# Execute the SQL setup files in the correct order
psql -U your_username -d worklenz_db -f database/sql/0_extensions.sql
psql -U your_username -d worklenz_db -f database/sql/1_tables.sql
psql -U your_username -d worklenz_db -f database/sql/indexes.sql
psql -U your_username -d worklenz_db -f database/sql/4_functions.sql
psql -U your_username -d worklenz_db -f database/sql/triggers.sql
psql -U your_username -d worklenz_db -f database/sql/3_views.sql
psql -U your_username -d worklenz_db -f database/sql/2_dml.sql
psql -U your_username -d worklenz_db -f database/sql/5_database_user.sql
```

5. Start the development servers
```bash
# In one terminal, start the backend
cd worklenz-backend
npm run dev

# In another terminal, start the frontend
cd worklenz-frontend
npm run dev
```

6. Access the application at http://localhost:5000

### Option 2: Docker Setup

The project includes a fully configured Docker setup with:
- Frontend React application
- Backend server
- PostgreSQL database
- MinIO for S3-compatible storage

1. Clone the repository:
```bash
git clone https://github.com/Worklenz/worklenz.git
cd worklenz
```

2. Start the Docker containers (choose one option):

**Using Docker Compose directly**
```bash
docker-compose up -d
```

3. The application will be available at:
   - Frontend: http://localhost:5000
   - Backend API: http://localhost:3000
   - MinIO Console: http://localhost:9001 (login with minioadmin/minioadmin)

4. To stop the services:
```bash
docker-compose down
```

## Configuration

### Environment Variables

Worklenz requires several environment variables to be configured for proper operation. These include:

- Database credentials
- Session secrets
- Storage configuration (S3 or Azure)
- Authentication settings

Please refer to the `.env.example` files for a full list of required variables.

### MinIO Integration

The project uses MinIO as an S3-compatible object storage service, which provides an open-source alternative to AWS S3 for development and production.

- **MinIO Console**: http://localhost:9001
  - Username: minioadmin
  - Password: minioadmin

- **Default Bucket**: worklenz-bucket (created automatically when the containers start)

### Security Considerations

For production deployments:

1. Use strong, unique passwords and keys for all services
2. Do not commit `.env` files to version control
3. Use a production-grade PostgreSQL setup with proper backup procedures
4. Enable HTTPS for all public endpoints
5. Review and update dependencies regularly

## Contributing

We welcome contributions from the community! If you&#039;d like to contribute, please follow our [contributing guidelines](CONTRIBUTING.md).

## Security

If you believe you have found a security vulnerability in Worklenz, we encourage you to responsibly disclose this and not open a public issue. We will investigate all legitimate reports.

Email [info@worklenz.com](mailto:info@worklenz.com) to disclose any security vulnerabilities.

## License

This project is licensed under the [MIT License](LICENSE).

## Screenshots

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://worklenz.com/features/task-management/&quot; target=&quot;_blank&quot;&gt;
    &lt;img
      src=&quot;https://worklenz.s3.amazonaws.com/assets/screenshots/task-views-view.png&quot;
      alt=&quot;Worklenz task views&quot;
      width=&quot;1024&quot;
    /&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://worklenz.com/features/time-tracking/&quot; target=&quot;_blank&quot;&gt;
    &lt;img
      src=&quot;https://worklenz.s3.amazonaws.com/assets/screenshots/time-tracking-view.png&quot;
      alt=&quot;Worklenz time tracking&quot;
      width=&quot;1024&quot;
    /&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://worklenz.com/features/analytics/&quot; target=&quot;_blank&quot;&gt;
    &lt;img
      src=&quot;https://worklenz.s3.amazonaws.com/assets/screenshots/analytics-view.png&quot;
      alt=&quot;Worklenz analytics&quot;
      width=&quot;1024&quot;
    /&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://worklenz.com/features/resource-management/&quot; target=&quot;_blank&quot;&gt;
    &lt;img
      src=&quot;https://worklenz.s3.amazonaws.com/assets/screenshots/schedule-view.png&quot;
      alt=&quot;Worklenz scheduler&quot;
      width=&quot;1024&quot;
    /&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://worklenz.com/features/templates/&quot; target=&quot;_blank&quot;&gt;
    &lt;img
      src=&quot;https://worklenz.s3.amazonaws.com/assets/screenshots/templates-view.png&quot;
      alt=&quot;Worklenz templates&quot;
      width=&quot;1024&quot;
    /&gt;
  &lt;/a&gt;
&lt;/p&gt;

### Contributing

We welcome contributions from the community! If you&#039;d like to contribute, please follow
our [contributing guidelines](CONTRIBUTING.md).

### License

Worklenz is open source and released under the [GNU Affero General Public License Version 3 (AGPLv3)](LICENSE).

By contributing to Worklenz, you agree that your contributions will be licensed under its AGPL.

# Worklenz React

This repository contains the React version of Worklenz with a Docker setup for easy development and deployment.

## Getting Started with Docker

The project includes a fully configured Docker setup with:
- Frontend React application
- Backend server
- PostgreSQL database
- MinIO for S3-compatible storage

### Prerequisites

- Docker and Docker Compose installed on your system
- Git

### Quick Start

1. Clone the repository:
```bash
git clone https://github.com/Worklenz/worklenz.git
cd worklenz
```

2. Start the Docker containers (choose one option):

**Option 1: Using the provided scripts (easiest)**
- On Windows:
  ```
  start.bat
  ```
- On Linux/macOS:
  ```bash
  ./start.sh
  ```

**Option 2: Using Docker Compose directly**
```bash
docker-compose up -d
```

3. The application will be available at:
   - Frontend: http://localhost:5000
   - Backend API: http://localhost:3000
   - MinIO Console: http://localhost:9001 (login with minioadmin/minioadmin)

4. To stop the services (choose one option):

**Option 1: Using the provided scripts**
- On Windows:
  ```
  stop.bat
  ```
- On Linux/macOS:
  ```bash
  ./stop.sh
  ```

**Option 2: Using Docker Compose directly**
```bash
docker-compose down
```

## MinIO Integration

The project uses MinIO as an S3-compatible object storage service, which provides an open-source alternative to AWS S3 for development and production.

### Working with MinIO

MinIO provides an S3-compatible API, so any code that works with S3 will work with MinIO by simply changing the endpoint URL. The backend has been configured to use MinIO by default, with no additional configuration required.

- **MinIO Console**: http://localhost:9001
  - Username: minioadmin
  - Password: minioadmin

- **Default Bucket**: worklenz-bucket (created automatically when the containers start)

### Backend Storage Configuration

The backend is pre-configured to use MinIO with the following settings:

```javascript
// S3 credentials with MinIO defaults
export const REGION = process.env.AWS_REGION || &quot;us-east-1&quot;;
export const BUCKET = process.env.AWS_BUCKET || &quot;worklenz-bucket&quot;;
export const S3_URL = process.env.S3_URL || &quot;http://minio:9000/worklenz-bucket&quot;;
export const S3_ACCESS_KEY_ID = process.env.AWS_ACCESS_KEY_ID || &quot;minioadmin&quot;;
export const S3_SECRET_ACCESS_KEY = process.env.AWS_SECRET_ACCESS_KEY || &quot;minioadmin&quot;;
```

The S3 client is initialized with special MinIO configuration:

```javascript
const s3Client = new S3Client({
  region: REGION,
  credentials: {
    accessKeyId: S3_ACCESS_KEY_ID || &quot;&quot;,
    secretAccessKey: S3_SECRET_ACCESS_KEY || &quot;&quot;,
  },
  endpoint: getEndpointFromUrl(), // Extracts endpoint from S3_URL
  forcePathStyle: true, // Required for MinIO
});
```

### Environment Configuration

The `.env` file includes the necessary configuration for using MinIO:

```
STORAGE_PROVIDER=s3
AWS_REGION=us-east-1
AWS_BUCKET=worklenz-bucket
S3_ACCESS_KEY_ID=minioadmin
S3_SECRET_ACCESS_KEY=minioadmin
S3_URL=http://minio:9000
```

When the backend service starts, it will use these environment variables to connect to MinIO for file storage.

## Development

For development, you can use the provided Docker setup which includes all necessary dependencies. The code will be running inside containers, but you can still edit files locally and see changes reflected in real-time.

## Production Deployment

For production deployment:

1. Update the `.env` file with production settings
2. Build custom Docker images or use the provided ones
3. Deploy using Docker Compose or a container orchestration platform like Kubernetes

For MinIO in production, consider:
- Setting up proper credentials (change default minioadmin/minioadmin)
- Configuring persistent storage
- Setting up proper networking and access controls
- Using multiple MinIO instances for high availability

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[f/awesome-chatgpt-prompts]]></title>
            <link>https://github.com/f/awesome-chatgpt-prompts</link>
            <guid>https://github.com/f/awesome-chatgpt-prompts</guid>
            <pubDate>Fri, 25 Apr 2025 00:04:44 GMT</pubDate>
            <description><![CDATA[This repo includes ChatGPT prompt curation to use ChatGPT and other LLM tools better.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/f/awesome-chatgpt-prompts">f/awesome-chatgpt-prompts</a></h1>
            <p>This repo includes ChatGPT prompt curation to use ChatGPT and other LLM tools better.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 123,460</p>
            <p>Forks: 16,532</p>
            <p>Stars today: 78 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
&lt;img width=&quot;395&quot; alt=&quot;prompts.chat&quot; src=&quot;https://github.com/user-attachments/assets/e0d0e32d-d2ce-4459-9f37-e951d9f4f5de&quot; /&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;Sponsors&lt;/h3&gt;

&lt;div align=&quot;center&quot;&gt;

  &lt;a href=&quot;https://clemta.com&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;50&quot; alt=&quot;Clemta logo&quot; src=&quot;https://clemta.com/wp-content/uploads/2023/03/logo-clemta-com-1.png.webp&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;sub&gt;With Clemta, you can run your company from the comfort of your home.&lt;/sub&gt;
&lt;hr&gt;
   &lt;a href=&quot;https://www.warp.dev/awesome-chatgpt-prompts&quot;&gt;
      &lt;img alt=&quot;Warp sponsorship&quot; width=&quot;400&quot; src=&quot;https://github.com/user-attachments/assets/ab8dd143-b0fd-4904-bdc5-dd7ecac94eae&quot;&gt;
   &lt;/a&gt;

#### [Warp, the intelligent terminal for developers](https://www.warp.dev/awesome-chatgpt-prompts)
[Available for MacOS, Linux, &amp; Windows](https://www.warp.dev/awesome-chatgpt-prompts)&lt;br&gt;

&lt;hr&gt;
  &lt;a href=&quot;https://graphite.dev/?utm_source=github&amp;utm_medium=repo&amp;utm_campaign=awesome_chatgpt_prompts&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;100&quot; alt=&quot;Graphite logo&quot; src=&quot;https://github.com/user-attachments/assets/981a244b-4bc8-4884-98f7-dd1d425063ae&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;sub&gt;Graphite is the AI developer productivity platform helping teams on GitHub ship higher quality software, faster.&lt;/sub&gt;
&lt;hr&gt;
  &lt;a href=&quot;https://github.com/f/mcptools&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;60&quot; alt=&quot;Hugging Face logo&quot; src=&quot;https://github.com/f/mcptools/raw/master/.github/resources/logo.png&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;sub&gt;If you&#039;re building MCPs, &lt;a href=&quot;https://github.com/f/mcptools&quot;&gt;MCP Tools&lt;/a&gt; is a Swiss-army knife for MCP Servers.&lt;/sub&gt;
&lt;hr&gt;
  &lt;sub&gt;&lt;a href=&quot;https://github.com/sponsors/f/sponsorships?sponsor=f&amp;amp;tier_id=319423&quot;&gt;Be my sponsor and your logo will be here!&lt;/a&gt;&lt;/sub&gt;
&lt;/div&gt;

---
[![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)

Welcome to the &quot;Awesome ChatGPT Prompts&quot; repository! While this collection was originally created for [ChatGPT](https://chat.openai.com/chat), these prompts work great with other AI models like [Claude](https://claude.ai/new), [Gemini](https://gemini.google.com), [Hugging Face Chat](https://hf.co/chat), [Llama](https://meta.ai), [Mistral](https://chat.mistral.ai), and more.

[ChatGPT](https://chat.openai.com/chat) is a web interface created by [OpenAI](https://openai.com) that provides access to their GPT (Generative Pre-trained Transformer) language models. The underlying models, like GPT-4o and GPT-o1, are large language models trained on vast amounts of text data that can understand and generate human-like text. Like other AI chat interfaces, you can provide prompts and have natural conversations with the AI, which will generate contextual responses based on the conversation history and your inputs.

In this repository, you will find a variety of prompts that can be used with ChatGPT and other AI chat models. We encourage you to [add your own prompts](https://github.com/f/awesome-chatgpt-prompts/edit/main/README.md) to the list, and to use AI to help generate new prompts as well.

To get started, simply clone this repository and use the prompts in the README.md file as input for your preferred AI chat model. You can also use the prompts in this file as inspiration for creating your own.

We hope you find these prompts useful and have fun exploring AI chat models!

**[View on prompts.chat](https://prompts.chat)**

**[View on Hugging Face](https://huggingface.co/datasets/fka/awesome-chatgpt-prompts/)**
---

&gt; ℹ️ **NOTE:** Sometimes, some of the prompts may not be working as you expected
&gt; or may be rejected by the AI. Please try again, start a new thread, or log out
&gt; and log back in. If these solutions do not work, please try rewriting the
&gt; prompt using your own sentences while keeping the instructions same.

### Want to Write Effective Prompts?

I&#039;ve authored an e-book called **&quot;The Art of ChatGPT Prompting: A Guide to
Crafting Clear and Effective Prompts&quot;**.

📖 **[Read the e-book](https://fka.gumroad.com/l/art-of-chatgpt-prompting)**

### Want to Learn How to Make Money using ChatGPT Prompts?

I&#039;ve authored an e-book called **&quot;How to Make Money with ChatGPT: Strategies,
Tips, and Tactics&quot;**.

📖
**[Buy the e-book](https://fka.gumroad.com/l/how-to-make-money-with-chatgpt)**

### Want to Learn How to write image prompts for Midjourney AI?

I&#039;ve authored an e-book called **&quot;The Art of Midjourney AI: A Guide to Creating
Images from Text&quot;**.

📖
**[Read the e-book](https://fka.gumroad.com/l/the-art-of-midjourney-ai-guide-to-creating-images-from-text)**

---

### Using prompts.chat

[prompts.chat](https://prompts.chat) is designed to provide an enhanced UX when
working with prompts. With just a few clicks, you can easily edit and copy the
prompts on the site to fit your specific needs and preferences.

&lt;img width=&quot;1400&quot; alt=&quot;Screenshot 2025-01-05 at 22 17 19&quot; src=&quot;https://github.com/user-attachments/assets/272d2092-b651-452a-a049-f46b31c32889&quot; /&gt;

---

## Unmerged Prompts

There are many Pull Requests to this repository waiting to be merged. There are
many hidden gems there. Take a look!

📖
**[View Unmerged Prompts](https://github.com/f/awesome-chatgpt-prompts/pulls)**

---

# Prompts

## Act as an Ethereum Developer

Contributed by: [@ameya-2003](https://github.com/Ameya-2003) Reference:
[The BlockChain Messenger](https://github.com/Ameya-2003/BlockChain/blob/main/Projects/The%20BlockChain%20Messenger.sol)

&gt; Imagine you are an experienced Ethereum developer tasked with creating a smart
&gt; contract for a blockchain messenger. The objective is to save messages on the
&gt; blockchain, making them readable (public) to everyone, writable (private) only
&gt; to the person who deployed the contract, and to count how many times the
&gt; message was updated. Develop a Solidity smart contract for this purpose,
&gt; including the necessary functions and considerations for achieving the
&gt; specified goals. Please provide the code and any relevant explanations to
&gt; ensure a clear understanding of the implementation.

## Act as a Linux Terminal

Contributed by: [@f](https://github.com/f) Reference:
[https://www.engraved.blog/building-a-virtual-machine-inside/](https://www.engraved.blog/building-a-virtual-machine-inside/)

&gt; I want you to act as a linux terminal. I will type commands and you will reply
&gt; with what the terminal should show. I want you to only reply with the terminal
&gt; output inside one unique code block, and nothing else. do not write
&gt; explanations. do not type commands unless I instruct you to do so. When I need
&gt; to tell you something in English, I will do so by putting text inside curly
&gt; brackets {like this}. My first command is pwd

## Act as an English Translator and Improver

Contributed by: [@f](https://github.com/f) **Alternative to**: Grammarly, Google
Translate

&gt; I want you to act as an English translator, spelling corrector and improver. I
&gt; will speak to you in any language and you will detect the language, translate
&gt; it and answer in the corrected and improved version of my text, in English. I
&gt; want you to replace my simplified A0-level words and sentences with more
&gt; beautiful and elegant, upper level English words and sentences. Keep the
&gt; meaning same, but make them more literary. I want you to only reply the
&gt; correction, the improvements and nothing else, do not write explanations. My
&gt; first sentence is &quot;istanbulu cok seviyom burada olmak cok guzel&quot;

## Act as Job Interviewer

Contributed by: [@f](https://github.com/f) &amp;
[@iltekin](https://github.com/iltekin) **Examples**: Node.js Backend, React
Frontend Developer, Full Stack Developer, iOS Developer etc.

&gt; I want you to act as an interviewer. I will be the candidate and you will ask
&gt; me the interview questions for the ${Position:JavaScript Developer} position. I want you to only
&gt; reply as the interviewer. Do not write all the conversation at once. I want
&gt; you to only do the interview with me. Ask me the questions and wait for my
&gt; answers. Do not write explanations. Ask me the questions one by one like an
&gt; interviewer does and wait for my answers. My first sentence is &quot;Hi&quot;

## Act as a JavaScript Console

Contributed by: [@omerimzali](https://github.com/omerimzali)

&gt; I want you to act as a javascript console. I will type commands and you will
&gt; reply with what the javascript console should show. I want you to only reply
&gt; with the terminal output inside one unique code block, and nothing else. do
&gt; not write explanations. do not type commands unless I instruct you to do so.
&gt; when I need to tell you something in english, I will do so by putting text
&gt; inside curly brackets {like this}. My first command is console.log(&quot;Hello
&gt; World&quot;);

## Act as an Excel Sheet

Contributed by: [@f](https://github.com/f)

&gt; I want you to act as a text based excel. You&#039;ll only reply me the text-based
&gt; 10 rows excel sheet with row numbers and cell letters as columns (A to L).
&gt; First column header should be empty to reference row number. I will tell you
&gt; what to write into cells and you&#039;ll reply only the result of excel table as
&gt; text, and nothing else. Do not write explanations. I will write you formulas
&gt; and you&#039;ll execute formulas and you&#039;ll only reply the result of excel table as
&gt; text. First, reply me the empty sheet.

## Act as an English Pronunciation Helper

Contributed by: [@f](https://github.com/f)

&gt; I want you to act as an English pronunciation assistant for Turkish speaking
&gt; people. I will write you sentences and you will only answer their
&gt; pronunciations, and nothing else. The replies must not be translations of my
&gt; sentence but only pronunciations. Pronunciations should use Turkish Latin
&gt; letters for phonetics. Do not write explanations on replies. My first sentence
&gt; is &quot;how the weather is in Istanbul?&quot;

## Act as a Spoken English Teacher and Improver

Contributed by: [@ATX735](https://github.com/ATX735)

&gt; I want you to act as a spoken English teacher and improver. I will speak to
&gt; you in English and you will reply to me in English to practice my spoken
&gt; English. I want you to keep your reply neat, limiting the reply to 100 words.
&gt; I want you to strictly correct my grammar mistakes, typos, and factual errors.
&gt; I want you to ask me a question in your reply. Now let&#039;s start practicing, you
&gt; could ask me a question first. Remember, I want you to strictly correct my
&gt; grammar mistakes, typos, and factual errors.

## Act as a Travel Guide

Contributed by: [@koksalkapucuoglu](https://github.com/koksalkapucuoglu)

&gt; I want you to act as a travel guide. I will write you my location and you will
&gt; suggest a place to visit near my location. In some cases, I will also give you
&gt; the type of places I will visit. You will also suggest me places of similar
&gt; type that are close to my first location. My first suggestion request is &quot;I am
&gt; in Istanbul/Beyoğlu and I want to visit only museums.&quot;

## Act as a Plagiarism Checker

Contributed by: [@yetk1n](https://github.com/yetk1n)

&gt; I want you to act as a plagiarism checker. I will write you sentences and you
&gt; will only reply undetected in plagiarism checks in the language of the given
&gt; sentence, and nothing else. Do not write explanations on replies. My first
&gt; sentence is &quot;For computers to behave like humans, speech recognition systems
&gt; must be able to process nonverbal information, such as the emotional state of
&gt; the speaker.&quot;

## Act as Character

Contributed by: [@BRTZL](https://github.com/BRTZL)
[@mattsq](https://github.com/mattsq)

&gt; I want you to act like ${Character: Anakin Skywalker} from ${Series: Star Wars}. I want you to respond and
&gt; answer like ${Character: Anakin Skywalker} using the tone, manner and vocabulary ${Character: Anakin Skywalker}
&gt; would use. Do not write any explanations. Only answer like ${Character: Anakin Skywalker}. You
&gt; must know all of the knowledge of ${Character: Anakin Skywalker}. My first sentence is &quot;Hi
&gt; ${Character: Anakin Skywalker}.&quot;

## Act as an Advertiser

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as an advertiser. You will create a campaign to promote a
&gt; product or service of your choice. You will choose a target audience, develop
&gt; key messages and slogans, select the media channels for promotion, and decide
&gt; on any additional activities needed to reach your goals. My first suggestion
&gt; request is &quot;I need help creating an advertising campaign for a new type of
&gt; energy drink targeting young adults aged 18-30.&quot;

## Act as a Storyteller

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a storyteller. You will come up with entertaining stories
&gt; that are engaging, imaginative and captivating for the audience. It can be
&gt; fairy tales, educational stories or any other type of stories which has the
&gt; potential to capture people&#039;s attention and imagination. Depending on the
&gt; target audience, you may choose specific themes or topics for your
&gt; storytelling session e.g., if it’s children then you can talk about animals;
&gt; If it’s adults then history-based tales might engage them better etc. My first
&gt; request is &quot;I need an interesting story on perseverance.&quot;

## Act as a Football Commentator

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a football commentator. I will give you descriptions of
&gt; football matches in progress and you will commentate on the match, providing
&gt; your analysis on what has happened thus far and predicting how the game may
&gt; end. You should be knowledgeable of football terminology, tactics,
&gt; players/teams involved in each match, and focus primarily on providing
&gt; intelligent commentary rather than just narrating play-by-play. My first
&gt; request is &quot;I&#039;m watching Manchester United vs Chelsea - provide commentary for
&gt; this match.&quot;

## Act as a Stand-up Comedian

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a stand-up comedian. I will provide you with some topics
&gt; related to current events and you will use your wit, creativity, and
&gt; observational skills to create a routine based on those topics. You should
&gt; also be sure to incorporate personal anecdotes or experiences into the routine
&gt; in order to make it more relatable and engaging for the audience. My first
&gt; request is &quot;I want a humorous take on politics.&quot;

## Act as a Motivational Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a motivational coach. I will provide you with some
&gt; information about someone&#039;s goals and challenges, and it will be your job to
&gt; come up with strategies that can help this person achieve their goals. This
&gt; could involve providing positive affirmations, giving helpful advice or
&gt; suggesting activities they can do to reach their end goal. My first request is
&gt; &quot;I need help motivating myself to stay disciplined while studying for an
&gt; upcoming exam&quot;.

## Act as a Composer

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a composer. I will provide the lyrics to a song and you
&gt; will create music for it. This could include using various instruments or
&gt; tools, such as synthesizers or samplers, in order to create melodies and
&gt; harmonies that bring the lyrics to life. My first request is &quot;I have written a
&gt; poem named “Hayalet Sevgilim” and need music to go with it.&quot;

## Act as a Debater

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a debater. I will provide you with some topics related to
&gt; current events and your task is to research both sides of the debates, present
&gt; valid arguments for each side, refute opposing points of view, and draw
&gt; persuasive conclusions based on evidence. Your goal is to help people come
&gt; away from the discussion with increased knowledge and insight into the topic
&gt; at hand. My first request is &quot;I want an opinion piece about Deno.&quot;

## Act as a Debate Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a debate coach. I will provide you with a team of
&gt; debaters and the motion for their upcoming debate. Your goal is to prepare the
&gt; team for success by organizing practice rounds that focus on persuasive
&gt; speech, effective timing strategies, refuting opposing arguments, and drawing
&gt; in-depth conclusions from evidence provided. My first request is &quot;I want our
&gt; team to be prepared for an upcoming debate on whether front-end development is
&gt; easy.&quot;

## Act as a Screenwriter

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a screenwriter. You will develop an engaging and creative
&gt; script for either a feature length film, or a Web Series that can captivate
&gt; its viewers. Start with coming up with interesting characters, the setting of
&gt; the story, dialogues between the characters etc. Once your character
&gt; development is complete - create an exciting storyline filled with twists and
&gt; turns that keeps the viewers in suspense until the end. My first request is &quot;I
&gt; need to write a romantic drama movie set in Paris.&quot;

## Act as a Novelist

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a novelist. You will come up with creative and
&gt; captivating stories that can engage readers for long periods of time. You may
&gt; choose any genre such as fantasy, romance, historical fiction and so on - but
&gt; the aim is to write something that has an outstanding plotline, engaging
&gt; characters and unexpected climaxes. My first request is &quot;I need to write a
&gt; science-fiction novel set in the future.&quot;

## Act as a Movie Critic

Contributed by: [@nuc](https://github.com/nuc)

&gt; I want you to act as a movie critic. You will develop an engaging and creative
&gt; movie review. You can cover topics like plot, themes and tone, acting and
&gt; characters, direction, score, cinematography, production design, special
&gt; effects, editing, pace, dialog. The most important aspect though is to
&gt; emphasize how the movie has made you feel. What has really resonated with you.
&gt; You can also be critical about the movie. Please avoid spoilers. My first
&gt; request is &quot;I need to write a movie review for the movie Interstellar&quot;

## Act as a Relationship Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a relationship coach. I will provide some details about
&gt; the two people involved in a conflict, and it will be your job to come up with
&gt; suggestions on how they can work through the issues that are separating them.
&gt; This could include advice on communication techniques or different strategies
&gt; for improving their understanding of one another&#039;s perspectives. My first
&gt; request is &quot;I need help solving conflicts between my spouse and myself.&quot;

## Act as a Poet

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a poet. You will create poems that evoke emotions and
&gt; have the power to stir people’s soul. Write on any topic or theme but make
&gt; sure your words convey the feeling you are trying to express in beautiful yet
&gt; meaningful ways. You can also come up with short verses that are still
&gt; powerful enough to leave an imprint in readers&#039; minds. My first request is &quot;I
&gt; need a poem about love.&quot;

## Act as a Rapper

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a rapper. You will come up with powerful and meaningful
&gt; lyrics, beats and rhythm that can ‘wow’ the audience. Your lyrics should have
&gt; an intriguing meaning and message which people can relate too. When it comes
&gt; to choosing your beat, make sure it is catchy yet relevant to your words, so
&gt; that when combined they make an explosion of sound everytime! My first request
&gt; is &quot;I need a rap song about finding strength within yourself.&quot;

## Act as a Motivational Speaker

Contributed by: [@devisasari](https://git

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[GitSquared/edex-ui]]></title>
            <link>https://github.com/GitSquared/edex-ui</link>
            <guid>https://github.com/GitSquared/edex-ui</guid>
            <pubDate>Fri, 25 Apr 2025 00:04:43 GMT</pubDate>
            <description><![CDATA[A cross-platform, customizable science fiction terminal emulator with advanced monitoring & touchscreen support.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/GitSquared/edex-ui">GitSquared/edex-ui</a></h1>
            <p>A cross-platform, customizable science fiction terminal emulator with advanced monitoring & touchscreen support.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 42,057</p>
            <p>Forks: 2,709</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;br&gt;
  &lt;img alt=&quot;Logo&quot; src=&quot;media/logo.png&quot;&gt;
  &lt;br&gt;&lt;br&gt;
  &lt;a href=&quot;https://lgtm.com/projects/g/GitSquared/edex-ui/context:javascript&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://img.shields.io/lgtm/grade/javascript/g/GitSquared/edex-ui.svg?logo=lgtm&amp;logoWidth=18&quot;/&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/latest&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://img.shields.io/github/release/GitSquared/edex-ui.svg?style=popout&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;#featured-in&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://img.shields.io/github/downloads/GitSquared/edex-ui/total.svg?style=popout&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/GitSquared/edex-ui/blob/master/LICENSE&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://img.shields.io/github/license/GitSquared/edex-ui.svg?style=popout&quot;&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-Windows.exe&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/Download/Windows/?color=blue&amp;icon=windows&amp;label&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-macOS.dmg&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/Download/macOS/?color=grey&amp;icon=apple&amp;label&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-Linux-x86_64.AppImage&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/Download/Linux64/?color=orange&amp;icon=terminal&amp;label&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-Linux-arm64-AppImage&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/Download/LinuxArm64/?color=orange&amp;icon=terminal&amp;label&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://aur.archlinux.org/packages/edex-ui&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/AUR/Package/cyan&quot;&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/tag/v2.2.8&quot;&gt;&lt;strong&gt;&lt;i&gt;(Project archived oct. 18th 2021)&lt;/i&gt;&lt;/strong&gt;&lt;/a&gt;
  &lt;br&gt;&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

eDEX-UI is a fullscreen, cross-platform terminal emulator and system monitor that looks and feels like a sci-fi computer interface.

---

&lt;a href=&quot;https://youtu.be/BGeY1rK19zA&quot;&gt;
  &lt;img align=&quot;right&quot; width=&quot;400&quot; alt=&quot;Demo on YouTube&quot; src=&quot;media/youtube-demo-teaser.gif&quot;&gt;
&lt;/a&gt;

Heavily inspired from the [TRON Legacy movie effects](https://web.archive.org/web/20170511000410/http://jtnimoy.com/blogs/projects/14881671) (especially the [Board Room sequence](https://gmunk.com/TRON-Board-Room)), the eDEX-UI project was originally meant to be *&quot;[DEX-UI](https://github.com/seenaburns/dex-ui) with less « art » and more « distributable software »&quot;*.

While keeping a futuristic look and feel, it strives to maintain a certain level of functionality and to be usable in real-life scenarios, with the larger goal of bringing science-fiction UXs to the mainstream.

&lt;br&gt;

It might or might not be a joke taken too seriously.


---

&lt;p align=&quot;center&quot;&gt;
  &lt;em&gt;Jump to: &lt;br&gt;&lt;a href=&quot;#features&quot;&gt;Features&lt;/a&gt; — &lt;a href=&quot;#screenshots&quot;&gt;Screenshots&lt;/a&gt; — &lt;a href=&quot;#qa&quot;&gt;Questions &amp; Answers&lt;/a&gt; — &lt;strong&gt;&lt;a href=&quot;#how-do-i-get-it&quot;&gt;Download&lt;/a&gt;&lt;/strong&gt; — &lt;a href=&quot;#featured-in&quot;&gt;Featured In&lt;/a&gt; — &lt;a href=&quot;#useful-commands-for-the-nerds&quot;&gt;Contributor Instructions&lt;/a&gt; — &lt;a href=&quot;#credits&quot;&gt;Credits&lt;/a&gt;&lt;/em&gt;
&lt;/p&gt;

## Sponsor

**Want to help support my open-source experiments and learn some cool JavaScript tricks at the same time?**

Click the banner below and sign up to **Bytes**, the only newsletter cool enough to be recommended by eDEX-UI.

[![Bytes by UI.dev](media/sponsor-uidev-bytes.jpg)](https://ui.dev/bytes/?r=gabriel)

## Features
- Fully featured terminal emulator with tabs, colors, mouse events, and support for `curses` and `curses`-like applications.
- Real-time system (CPU, RAM, swap, processes) and network (GeoIP, active connections, transfer rates) monitoring.
- Full support for touch-enabled displays, including an on-screen keyboard.
- Directory viewer that follows the CWD (current working directory) of the terminal.
- Advanced customization using themes, on-screen keyboard layouts, CSS injections. See the [wiki](https://github.com/GitSquared/edex-ui/wiki) for more info.
- Optional sound effects made by a talented sound designer for maximum hollywood hacking vibe.

## Screenshots
![Default screenshot](media/screenshot_default.png)

_[neofetch](https://github.com/dylanaraps/neofetch) on eDEX-UI 2.2 with the default &quot;tron&quot; theme &amp; QWERTY keyboard_

![Blade screenshot](media/screenshot_blade.png)

_Checking out available themes in [eDEX&#039;s config dir](https://github.com/GitSquared/edex-ui/wiki/userData) with [`ranger`](https://github.com/ranger/ranger) on eDEX-UI 2.2 with the &quot;blade&quot; theme_

![Disrupted screenshot](media/screenshot_disrupted.png)

_[cmatrix](https://github.com/abishekvashok/cmatrix) on eDEX-UI 2.2 with the experimental &quot;tron-disrupted&quot; theme, and the user-contributed DVORAK keyboard_

![Horizon screenshot](media/screenshot_horizon.png)

_Editing eDEX-UI source code with `nvim` on eDEX-UI 2.2 with the custom [`horizon-full`](https://github.com/GitSquared/horizon-edex-theme) theme_

## Q&amp;A
#### How do I get it?
Click on the little badges under the eDEX logo at the top of this page, or go to the [Releases](https://github.com/GitSquared/edex-ui/releases) tab, or download it through [one of the available repositories](https://repology.org/project/edex-ui/versions) (Homebrew, AUR...).

Public release binaries are unsigned ([why](https://gaby.dev/posts/code-signing)). On Linux, you will need to `chmod +x` the AppImage file in order to run it.
#### I have a problem!
Search through the [Issues](https://github.com/GitSquared/edex-ui/issues) to see if yours has already been reported. If you&#039;re confident it hasn&#039;t been reported yet, feel free to open up a new one. If you see your issue and it&#039;s been closed, it probably means that the fix for it will ship in the next version, and you&#039;ll have to wait a bit.
#### Can you disable the keyboard/the filesystem display?
You can&#039;t disable them (yet) but you can hide them. See the `tron-notype` theme.
#### Why is the file browser saying that &quot;Tracking Failed&quot;? (Windows only)
On Linux and macOS, eDEX tracks where you&#039;re going in your terminal tab to display the content of the current folder on-screen.
Sadly, this is technically impossible to do on Windows right now, so the file browser reverts back to a &quot;detached&quot; mode. You can still use it to browse files &amp; directories and click on files to input their path in the terminal.
#### Can this run on a Raspberry Pi / ARM device?
We provide prebuilt arm64 builds. For other platforms, see [this issue comment](https://github.com/GitSquared/edex-ui/issues/313#issuecomment-443465345), and the thread on issue [#818](https://github.com/GitSquared/edex-ui/issues/818).
#### Is this repo actively maintained?
No, after a 3 years run, this project has been archived. See the [announcement](https://github.com/GitSquared/edex-ui/releases/tag/v2.2.8).
#### How did you make this?
Glad you&#039;re interested! See [#272](https://github.com/GitSquared/edex-ui/issues/272).
#### This is so cool.
Thanks! If you feel like it, you can [follow me on Twitter](https://gaby.dev/twitter) to hear about new stuff I&#039;m making.

&lt;img width=&quot;220&quot; src=&quot;https://78.media.tumblr.com/35d4ef4447e0112f776b629bffd99188/tumblr_mk4gf8zvyC1s567uwo1_500.gif&quot; /&gt;


## Featured in...
- [Linux Uprising Blog](https://www.linuxuprising.com/2018/11/edex-ui-fully-functioning-sci-fi.html)
- [My post on r/unixporn](https://www.reddit.com/r/unixporn/comments/9ysbx7/oc_a_little_project_that_ive_been_working_on/)
- [Korben article (in french)](https://korben.info/une-interface-futuriste-pour-vos-ecrans-tactiles.html)
- [Hacker News](https://news.ycombinator.com/item?id=18509828)
- [This tweet that made me smile](https://twitter.com/mikemaccana/status/1065615451940667396)
- [BoingBoing article](https://boingboing.net/2018/11/23/simulacrum-sf.html) - Apparently i&#039;m a &quot;French hacker&quot;
- [OReilly 4 short links](https://www.oreilly.com/ideas/four-short-links-23-november-2018)
- [Hackaday](https://hackaday.com/2018/11/23/look-like-a-movie-hacker/)
- [Developpez.com (another french link)](https://www.developpez.com/actu/234808/Une-application-de-bureau-ressemble-a-une-interface-d-ordinateur-de-science-fiction-inspiree-des-effets-du-film-TRON-Legacy/)
- [GitHub Blog&#039;s Release Radar November 2018](https://blog.github.com/2018-12-21-release-radar-november-2018/)
- [opensource.com Productive Tools for 2019](https://opensource.com/article/19/1/productivity-tool-edex-ui)
- [O&#039;Reilly 4 short links (again)](https://www.oreilly.com/radar/four-short-links-7-july-2020/)
- [LinuxLinks](https://www.linuxlinks.com/linux-candy-edex-ui-sci-fi-computer-terminal-emulator-system-monitor/)
- [Linux For Everyone (Youtube)](https://www.youtube.com/watch?v=gbzqCAjm--g)
- [BestOfJS Rising Stars 2020](https://risingstars.js.org/2020/en#edex-ui)
- [The Geek Freaks (Youtube/German)](https://youtu.be/TSjMIeLG0Sk)
- [JSNation Open Source Awards 2021](https://osawards.com/javascript/#nominees) (Nominee - Fun Side Project of the Year)


## Useful commands for the nerds

**IMPORTANT NOTE:** the following instructions are meant for running eDEX from the latest unoptimized, unreleased, development version. If you&#039;d like to get stable software instead, refer to [these](#how-do-i-get-it) instructions.

#### Starting from source:
on *nix systems (You&#039;ll need the Xcode command line tools on macOS):
- clone the repository
- `npm run install-linux`
- `npm run start`

on Windows:
- start cmd or powershell **as administrator**
- clone the repository
- `npm run install-windows`
- `npm run start`

#### Building
Note: Due to native modules, you can only build targets for the host OS you are using.

- `npm install` (NOT `install-linux` or `install-windows`)
- `npm run build-linux` or `build-windows` or `build-darwin`

The script will minify the source code, recompile native dependencies and create distributable assets in the `dist` folder.

#### Getting the bleeding edge
If you&#039;re interested in running the latest in-development version but don&#039;t want to compile source code yourself, you can can get pre-built nightly binaries on [GitHub Actions](https://github.com/GitSquared/edex-ui/actions): click the latest commits, and download the artifacts bundle for your OS.

## Credits
eDEX-UI&#039;s source code was primarily written by me, [Squared](https://github.com/GitSquared). If you want to get in touch with me or find other projects I&#039;m involved in, check out [my website](https://gaby.dev).

[PixelyIon](https://github.com/PixelyIon) helped me get started with Windows compatibility and offered some precious advice when I started to work on this project seriously.

[IceWolf](https://soundcloud.com/iamicewolf) composed the sound effects on v2.1.x and above. He makes really cool stuff, check out his music!

## Thanks
Of course, eDEX would never have existed if I hadn&#039;t stumbled upon the amazing work of [Seena](https://github.com/seenaburns) on [r/unixporn](https://reddit.com/r/unixporn).

This project uses a bunch of open-source libraries, frameworks and tools, see [the full dependency graph](https://github.com/GitSquared/edex-ui/network/dependencies).

I want to namely thank the developers behind [xterm.js](https://github.com/xtermjs/xterm.js), [systeminformation](https://github.com/sebhildebrandt/systeminformation) and [SmoothieCharts](https://github.com/joewalnes/smoothie).

Huge thanks to [Rob &quot;Arscan&quot; Scanlon](https://github.com/arscan) for making the fantastic [ENCOM Globe](https://github.com/arscan/encom-globe), also inspired by the TRON: Legacy movie, and distributing it freely. His work really puts the icing on the cake.

## Licensing

Licensed under the [GPLv3.0](https://github.com/GitSquared/edex-ui/blob/master/LICENSE).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[FortAwesome/Font-Awesome]]></title>
            <link>https://github.com/FortAwesome/Font-Awesome</link>
            <guid>https://github.com/FortAwesome/Font-Awesome</guid>
            <pubDate>Fri, 25 Apr 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[The iconic SVG, font, and CSS toolkit]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/FortAwesome/Font-Awesome">FortAwesome/Font-Awesome</a></h1>
            <p>The iconic SVG, font, and CSS toolkit</p>
            <p>Language: JavaScript</p>
            <p>Stars: 74,976</p>
            <p>Forks: 12,200</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre>&lt;h1&gt;&lt;img src=&quot;https://img.fortawesome.com/349cfdf6/fa-free-logo.svg&quot; alt=&quot;Font Awesome Free&quot; width=&quot;50%&quot;&gt;&lt;/h1&gt;

&gt; Version 5 – the iconic SVG, font, and CSS framework

The internet&#039;s most popular icon toolkit has been redesigned and built from
scratch. On top of this, features like icon font ligatures, an SVG framework,
official NPM packages for popular frontend libraries like React, and access to
a new CDN.

Not familiar with Font Awesome 5? [Learn
more](https://www.kickstarter.com/projects/232193852/font-awesome-5) about our
successful Kickstarter and plan. You can also **[order Font Awesome
Pro](https://fontawesome.com/pro)** which includes tons more icons directly
from [fontawesome.com](https://fontawesome.com).

## Documentation

Learn how to get started with Font Awesome and then dive deeper into other and advanced topics:

### Using Font Awesome on the Web

* [With SVG with JavaScript](https://fontawesome.com/how-to-use/on-the-web/setup/getting-started?using=svg-with-js)
* [With web fonts with CSS](https://fontawesome.com/how-to-use/on-the-web/setup/getting-started?using=web-fonts-with-css)
* [Upgrading from version 4](https://fontawesome.com/how-to-use/on-the-web/setup/upgrading-from-version-4)
* [Installing Font Awesome with a package manager](https://fontawesome.com/how-to-use/on-the-web/setup/using-package-managers)
* [Downloading + hosting Font Awesome yourself](https://fontawesome.com/how-to-use/on-the-web/setup/hosting-font-awesome-yourself)
* [Performance and security](https://fontawesome.com/how-to-use/performance-and-security)
* [Accessibility](https://fontawesome.com/how-to-use/on-the-web/other-topics/accessibility)
* [Troubleshooting](https://fontawesome.com/how-to-use/on-the-web/other-topics/troubleshooting)

#### Advanced Options &amp; Techniques

* [Using CSS pseudo-elements](https://fontawesome.com/how-to-use/on-the-web/advanced/css-pseudo-elements)
* [SVG sprites](https://fontawesome.com/how-to-use/svg-sprites)
* [The Font Awesome API](https://fontawesome.com/how-to-use/font-awesome-api)
* [SVG symbols](https://fontawesome.com/how-to-use/on-the-web/advanced/svg-symbols)
* [SVG JavaScript Core](https://fontawesome.com/how-to-use/on-the-web/advanced/svg-javascript-core)
* [Server side rendering](https://fontawesome.com/how-to-use/server-side-rendering)

### Using Font Awesome on the Desktop

* [Getting started](https://fontawesome.com/how-to-use/on-the-desktop/setup/getting-started)
* [Upgrading from version 4](https://fontawesome.com/how-to-use/on-the-desktop/setup/upgrading-from-version-4)
* [Using ligatures](https://fontawesome.com/how-to-use/on-the-desktop/referencing-icons/using-ligatures)
* [Using glyphs](https://fontawesome.com/how-to-use/on-the-desktop/referencing-icons/using-glyphs)
* [Troubleshooting](https://fontawesome.com/how-to-use/on-the-desktop/other-topics/troubleshooting)

### Where did Font Awesome 4 (or 3) go?

Now that Font Awesome 5 has been released we are marking version 4 as
end-of-life. We don&#039;t plan on releasing any further versions of the 4.x or 3.x.

Documentation is still available but it&#039;s moved to
[https://fontawesome.com/v4.7.0](https://fontawesome.com/v4.7.0) and
[https://fontawesome.com/v3.2.1](https://fontawesome.com/v3.2.1).

The Git repository for
[v4.7.0](https://github.com/FortAwesome/Font-Awesome/releases/tag/v4.7.0) and
[v3.2.1](https://github.com/FortAwesome/Font-Awesome/releases/tag/v3.2.1) can
be found in our GitHub releases.

## Change log

We&#039;ll keep track of each release in the [CHANGELOG.md](./CHANGELOG.md)

Looking for older versions of Font Awesome? Check the [releases](https://github.com/FortAwesome/Font-Awesome/releases).

## Upgrading

From time-to-time we&#039;ll have special upgrading instructions from one version to the next.

Check out the [UPGRADING.md](./UPGRADING.md) guide when you upgrade your dependencies.

## Code of conduct

We will behave ourselves if you behave yourselves. For more details see our
[CODE_OF_CONDUCT.md](./CODE_OF_CONDUCT.md).

## Contributing

Please read through our [contributing guidelines](./CONTRIBUTING.md).  Included
are directions for opening issues.

## Versioning

Font Awesome will be maintained under the Semantic Versioning guidelines as much as possible. Releases will be numbered
with the following format:

`&lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;`

For more information on SemVer, please visit http://semver.org.

**The major version &quot;5&quot; is part of an umbrella release.  It includes many different types of files and technologies. Therefore
we deviate from normal SemVer in the following ways:**

* Any release may update the design, look-and-feel, or branding of an existing
  icon
* We will never intentionally release a `patch` version update that breaks
  backward compatibility
* A `minor` release **may include backward-incompatible changes** but we will
  write clear upgrading instructions in UPGRADING.md
* A `minor` or `patch` release will never remove icons
* Bug fixes will be addressed as `patch` releases unless they include backward
  incompatibility then they will be `minor` releases

## License

Font Awesome Free is free, open source, and GPL friendly. You can use it for
commercial projects, open source projects, or really almost whatever you want.

- Icons — CC BY 4.0 License
  - In the Font Awesome Free download, the CC BY 4.0 license applies to all icons packaged as .svg and .js files types.
- Fonts — SIL OFL 1.1 License
  - In the Font Awesome Free download, the SIL OLF license applies to all icons packaged as web and desktop font files.
- Code — MIT License
  - In the Font Awesome Free download, the MIT license applies to all non-font and non-icon files.

Attribution is required by MIT, SIL OLF, and CC BY licenses. Downloaded Font
Awesome Free files already contain embedded comments with sufficient
attribution, so you shouldn&#039;t need to do anything additional when using these
files normally.

We&#039;ve kept attribution comments terse, so we ask that you do not actively work
to remove them from files, especially code. They&#039;re a great way for folks to
learn about Font Awesome.

## Team
* [Dave Gandy](https://github.com/davegandy)
* [Travis Chase](https://github.com/supercodepoet)
* [Rob Madole](https://github.com/robmadole)
* [Brian Talbot](https://github.com/talbs)
* [Jory Raphael](https://github.com/sensibleworld)
* [Mike Wilkerson](https://github.com/mlwilkerson)
* [Frances Botsford](https://github.com/frrrances)
* [Trevor Chase](https://github.com/trevorchase)
* [Jason Lundien](https://github.com/jasonlundien)
* [Jason Otero](https://github.com/deathnfudge)
* [Edward Emanuel](https://github.com/ej2)
* [Kelsey Jackson](https://github.com/kelseythejackson)
* [Geremia Taglialatela](https://github.com/tagliala)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[sveltejs/kit]]></title>
            <link>https://github.com/sveltejs/kit</link>
            <guid>https://github.com/sveltejs/kit</guid>
            <pubDate>Fri, 25 Apr 2025 00:04:41 GMT</pubDate>
            <description><![CDATA[web development, streamlined]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/sveltejs/kit">sveltejs/kit</a></h1>
            <p>web development, streamlined</p>
            <p>Language: JavaScript</p>
            <p>Stars: 19,229</p>
            <p>Forks: 2,045</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>[![Chat](https://img.shields.io/discord/457912077277855764?label=chat&amp;logo=discord)](https://svelte.dev/chat)

# SvelteKit

Web development, streamlined. Read the [documentation](https://svelte.dev/docs/kit) to get started.

### Packages

| Package                                                                     | Changelog                                                     |
| --------------------------------------------------------------------------- | ------------------------------------------------------------- |
| [@sveltejs/kit](packages/kit)                                               | [Changelog](packages/kit/CHANGELOG.md)                        |
| [@sveltejs/adapter-auto](packages/adapter-auto)                             | [Changelog](packages/adapter-auto/CHANGELOG.md)               |
| [@sveltejs/adapter-cloudflare](packages/adapter-cloudflare)                 | [Changelog](packages/adapter-cloudflare/CHANGELOG.md)         |
| [@sveltejs/adapter-netlify](packages/adapter-netlify)                       | [Changelog](packages/adapter-netlify/CHANGELOG.md)            |
| [@sveltejs/adapter-node](packages/adapter-node)                             | [Changelog](packages/adapter-node/CHANGELOG.md)               |
| [@sveltejs/adapter-static](packages/adapter-static)                         | [Changelog](packages/adapter-static/CHANGELOG.md)             |
| [@sveltejs/adapter-vercel](packages/adapter-vercel)                         | [Changelog](packages/adapter-vercel/CHANGELOG.md)             |
| [@sveltejs/amp](packages/amp)                                               | [Changelog](packages/amp/CHANGELOG.md)                        |
| [@sveltejs/enhanced-img](packages/enhanced-img)                             | [Changelog](packages/enhanced-img/CHANGELOG.md)               |
| [@sveltejs/package](packages/package)                                       | [Changelog](packages/package/CHANGELOG.md)                    |
| [create-svelte](packages/create-svelte)                                     | [Changelog](packages/create-svelte/CHANGELOG.md)              |

[Additional adapters](https://sveltesociety.dev/packages?category=sveltekit-adapters) are maintained by the community.

## Bug reporting

Please make sure the issue you&#039;re reporting involves SvelteKit. Many issues related to how a project builds originate from [Vite](https://vitejs.dev/), which is used to build a SvelteKit project. You can create a new Vite project with `npm create vite@latest` for client-side only repros and `npm create vite-extra@latest` for SSR or library repros.

If an issue originates from Vite, please report it in the [Vite issue tracker](https://github.com/vitejs/vite/issues).

## Contributing

See [CONTRIBUTING.md](./CONTRIBUTING.md) for information on how to develop SvelteKit locally.

## Supporting Svelte

Svelte is an MIT-licensed open source project with its ongoing development made possible entirely by fantastic volunteers. If you&#039;d like to support their efforts, please consider:

- [Becoming a backer on Open Collective](https://opencollective.com/svelte).

Funds donated via Open Collective will be used for compensating expenses related to Svelte&#039;s development such as hosting costs. If sufficient donations are received, funds may also be used to support Svelte&#039;s development more directly.

## License

[MIT](https://github.com/sveltejs/kit/blob/main/LICENSE)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[FreeTubeApp/FreeTube]]></title>
            <link>https://github.com/FreeTubeApp/FreeTube</link>
            <guid>https://github.com/FreeTubeApp/FreeTube</guid>
            <pubDate>Fri, 25 Apr 2025 00:04:40 GMT</pubDate>
            <description><![CDATA[An Open Source YouTube app for privacy]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/FreeTubeApp/FreeTube">FreeTubeApp/FreeTube</a></h1>
            <p>An Open Source YouTube app for privacy</p>
            <p>Language: JavaScript</p>
            <p>Stars: 17,581</p>
            <p>Forks: 1,138</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
 &lt;img alt=&quot;&quot; src=&quot;/_icons/logoColor.svg&quot; width=500 align=&quot;center&quot;&gt;
&lt;/p&gt;

FreeTube is an open source desktop YouTube player built with privacy in mind.
Use YouTube without advertisements and prevent Google from tracking you with their cookies and JavaScript.
Available for Windows (10 and later), Mac (macOS 11 and later) &amp; Linux thanks to Electron.

&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/FreeTubeApp/FreeTube/releases&quot;&gt;Download FreeTube&lt;/a&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/FreeTubeApp/FreeTube/actions/workflows/build.yml&quot;&gt;
    &lt;img alt=&#039;Build status&#039; src=&quot;https://github.com/FreeTubeApp/FreeTube/actions/workflows/build.yml/badge.svg?branch=development&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://hosted.weblate.org/engage/free-tube/&quot;&gt;
    &lt;img src=&quot;https://hosted.weblate.org/widgets/free-tube/-/svg-badge.svg&quot; alt=&quot;Translation status&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;hr&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;#screenshots&quot;&gt;Screenshots&lt;/a&gt; &amp;bull; &lt;a href=&quot;#how-does-it-work&quot;&gt;How does it work?&lt;/a&gt; &amp;bull; &lt;a href=&quot;#features&quot;&gt;Features&lt;/a&gt; &amp;bull; &lt;a href=&quot;#download-links&quot;&gt;Download Links&lt;/a&gt; &amp;bull; &lt;a href=&quot;#contributing&quot;&gt;Contributing&lt;/a&gt; &amp;bull; &lt;a href=&quot;#localization&quot;&gt;Localization&lt;/a&gt; &amp;bull; &lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt; &amp;bull; &lt;a href=&quot;#donate&quot;&gt;Donate&lt;/a&gt; &amp;bull; &lt;a href=&quot;#license&quot;&gt;License&lt;/a&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://freetubeapp.io/&quot;&gt;Website&lt;/a&gt; &amp;bull; &lt;a href=&quot;https://blog.freetubeapp.io/&quot;&gt;Blog&lt;/a&gt; &amp;bull; &lt;a href=&quot;https://docs.freetubeapp.io/&quot;&gt;Documentation&lt;/a&gt; &amp;bull; &lt;a href=&quot;https://docs.freetubeapp.io/faq/&quot;&gt;FAQ&lt;/a&gt; &amp;bull; &lt;a href=&quot;https://github.com/FreeTubeApp/FreeTube/discussions&quot;&gt;Discussions&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&gt; [!NOTE] 
&gt; FreeTube is currently in Beta. While it should work well for most users, there are still bugs and missing features that need to be addressed.
&gt;
&gt; If you have an idea or if you found a bug, please submit a [GitHub issue](https://github.com/FreeTubeApp/FreeTube/issues/new/choose) so that we can track it.  Please search [the existing issues](https://github.com/FreeTubeApp/FreeTube/issues) before submitting to prevent duplicates!

## Screenshots
&lt;img src=&quot;https://i.imgur.com/zFgZUUV.png&quot; width=300&gt; &lt;img src=&quot;https://i.imgur.com/9evYHgN.png&quot; width=300&gt; &lt;img src=&quot;https://i.imgur.com/yT2UzPa.png&quot; width=300&gt; &lt;img src=&quot;https://i.imgur.com/47zIEt4.png&quot; width=300&gt; &lt;img src=&quot;https://i.imgur.com/hFB2fKC.png&quot; width=300&gt;

## How does it work?
FreeTube uses a built in extractor to grab and serve data / videos. The [Invidious API](https://github.com/iv-org/invidious) can also optionally be used. FreeTube does not use any official APIs to obtain data. While YouTube can still see your video requests, it can no
longer track you using cookies or JavaScript. Your subscriptions and history are stored locally on your computer and never sent out.

&gt; [!IMPORTANT]  
&gt; Using a VPN or Tor is highly recommended to hide your IP while using FreeTube.

## Features
* Watch videos without ads
* Use YouTube without Google tracking you using cookies and JavaScript
* Two extractor APIs to choose from (Built in or Invidious)
* Subscribe to channels without an account
* Connect to an externally setup proxy such as Tor
* View and search your local subscriptions, history, and saved videos
* Organize your subscriptions into &quot;Profiles&quot; to create a more focused feed
* Export &amp; import subscriptions
* Youtube Trending
* Youtube Chapters
* Most popular videos page based on the set Invidious instance
* SponsorBlock 
* Open videos from your browser directly into FreeTube (with extension)
* Watch videos using an external player
* Full Theme support
* Make a screenshot of a video
* Multiple windows
* Mini Player (Picture-in-Picture)
* Keyboard shortcuts
* Option to show only family friendly content
* Show/hide functionality or elements within the app using the distraction free settings
* View channel community posts

### Browser Extensions
The following extensions open YouTube links directly in FreeTube:

- [LibRedirect](https://libredirect.github.io/)
- [RedirectTube](https://github.com/MStankiewiczOfficial/RedirectTube)

LibRedirect automatically redirect YouTube links to FreeTube.
&gt; [!IMPORTANT]
&gt; To ensure proper functionality, select FreeTube as Frontend in the Services settings of the extension.

RedirectTube, doesn’t automatically open YouTube links in FreeTube. Instead, it adds buttons to the toolbar and context menu, which you can click to open videos in FreeTube manually.

- Download LibRedirect from [Mozilla Add-ons](https://addons.mozilla.org/firefox/addon/libredirect/) (for Firefox based-browsers) or [developer&#039;s website](https://libredirect.github.io/download_chromium.html) (for Chrome and Chromium-based browsers).

- Download RedirectTube from [Mozilla Add-ons](https://addons.mozilla.org/firefox/addon/redirecttube/) (for Firefox based-browsers).

&gt; [!NOTE]
&gt; These extensions do not work on Linux portable builds!
&gt;
&gt; If you have issues with the extension working with FreeTube, please create an issue in this repository instead of the extension repository.

## Download Links
### Official Downloads

&gt; [!CAUTION]
&gt; FreeTube is only supported on Windows 10 and later, macOS 11 and above, and various Linux distributions. Installing it on unsupported systems may result in unexpected issues.

* [GitHub Releases](https://github.com/FreeTubeApp/FreeTube/releases)

* [FreeTube Website](https://freetubeapp.io/#download)

* Flatpak on Flathub: [Download](https://flathub.org/apps/details/io.freetubeapp.FreeTube) and [Source Code](https://github.com/flathub/io.freetubeapp.FreeTube)

#### Automated Builds (Nightly / Weekly)
&gt; [!WARNING]
&gt; Use these builds at your own risk. These are pre-release versions and are only intended for people that want to test changes early and are willing to accept that things could break from one build to another. 

Builds are automatically created from changes to our development branch via [GitHub Actions](https://github.com/FreeTubeApp/FreeTube/actions?query=workflow%3ABuild).

The first build with a green check mark is the latest build.  

&gt; [!IMPORTANT]
&gt; You will need to have a GitHub account to download these builds.

### Unofficial Downloads
&gt; [!WARNING]
&gt; These builds are maintained by the community. While they should be safe, download at your own risk. There may be issues with using these versus the official builds. Any issues specific with these builds should be sent to their respective maintainer. Make sure u always try an [official download](https://github.com/freetubeapp/freetube/#official-downloads) before reporting your issue to us!

* Arch User Repository (AUR): [Download](https://aur.archlinux.org/packages/freetube-bin/)

* Chocolatey: [Download](https://chocolatey.org/packages/freetube/)

* FreeTubeAndroid (FreeTube port for Android and PWA): [Download](https://github.com/MarmadileManteater/FreeTubeAndroid/releases) and [Source Code](https://github.com/MarmadileManteater/FreeTubeAndroid)

* Homebrew Formulae (Mac only): [Download](https://formulae.brew.sh/cask/freetube)

* makedeb Package Repository (MPR): [Download](https://mpr.makedeb.org/packages/freetube-bin)

* Nix Packages: [Download](https://search.nixos.org/packages?query=freetube)

* PortableApps (Windows Only): [Download](https://github.com/rddim/FreeTubePortable/releases) and [Source Code](https://github.com/rddim/FreeTubePortable)

* Scoop (Windows Only): [Usage](https://github.com/ScoopInstaller/Scoop)

* Snap: [Download](https://snapcraft.io/freetube) and [Source Code](https://git.launchpad.net/freetube)

* WAPT: [Download](https://wapt.tranquil.it/store/tis-freetube)

* Windows Package Manager (winget): [Usage](https://docs.microsoft.com/en-us/windows/package-manager/winget/)

## Contributing
Thank you very much to the [People and Projects](https://docs.freetubeapp.io/credits/) that make FreeTube possible!

If you like to get your hands dirty and want to contribute, we would love to
have your help.  Send a pull request and someone will review your code. 

&gt; [!IMPORTANT]
&gt; Please follow the [Contribution Guidelines](https://github.com/FreeTubeApp/FreeTube/blob/development/CONTRIBUTING.md) before sending your pull request.

## Localization
&lt;a href=&quot;https://hosted.weblate.org/engage/free-tube/&quot;&gt;
&lt;img src=&quot;https://hosted.weblate.org/widgets/free-tube/-/287x66-grey.png&quot; alt=&quot;Translation status&quot; /&gt;
&lt;/a&gt;

We are actively looking for translations!  We use [Weblate](https://hosted.weblate.org/engage/free-tube/) to make it easy for translators to get involved.  Click on the badge above to learn how to get involved.

For the Linux Flatpak, the desktop entry comment string can be translated at our [Flatpak repository](https://github.com/flathub/io.freetubeapp.FreeTube/blob/master/io.freetubeapp.FreeTube.desktop).

## Contact
If you ever have any questions, feel free to ask it on our [Discussions](https://github.com/FreeTubeApp/FreeTube/discussions) page.  Alternatively, you can email us at FreeTubeApp@protonmail.com or you can join our [Matrix Community](https://matrix.to/#/+freetube:matrix.org).  

&gt; [!IMPORTANT]
&gt; Don&#039;t forget to check out the [rules](https://docs.freetubeapp.io/community/matrix/) before joining.

## Donate
If you enjoy using FreeTube, you&#039;re welcome to leave a donation using the following method.  

* Bitcoin Address: `1Lih7Ho5gnxb1CwPD4o59ss78pwo2T91eS`

While your donations are much appreciated, only donate if you really want to.  Donations are used for keeping the website up and running and eventual code signing costs. 

&gt; [!TIP]
&gt; If you are using the Invidious API then we recommend that you donate to the instance that you use. You can also donate to the [Invidious team](https://invidious.io/donate/) or the [Local API developer](https://github.com/sponsors/LuanRT).

## License
[![GNU AGPLv3 Image](https://www.gnu.org/graphics/agplv3-155x51.png)](https://www.gnu.org/licenses/agpl-3.0.html)  

FreeTube is Free Software: You can use, study share and improve it at your
will. Specifically you can redistribute and/or modify it under the terms of the
[GNU Affero General Public License](https://www.gnu.org/licenses/agpl-3.0.html) as
published by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.  
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[typescript-cheatsheets/react]]></title>
            <link>https://github.com/typescript-cheatsheets/react</link>
            <guid>https://github.com/typescript-cheatsheets/react</guid>
            <pubDate>Fri, 25 Apr 2025 00:04:39 GMT</pubDate>
            <description><![CDATA[Cheatsheets for experienced React developers getting started with TypeScript]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/typescript-cheatsheets/react">typescript-cheatsheets/react</a></h1>
            <p>Cheatsheets for experienced React developers getting started with TypeScript</p>
            <p>Language: JavaScript</p>
            <p>Stars: 46,199</p>
            <p>Forks: 4,196</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre># React TypeScript Cheatsheet

Cheatsheet for using React with TypeScript.

---

&lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/81&quot;&gt;
  &lt;img
    height=&quot;90&quot;
    width=&quot;90&quot;
    alt=&quot;react + ts logo&quot;
    src=&quot;https://user-images.githubusercontent.com/84442212/194379444-02e5ec69-5e6c-4100-bd7a-c31d628af29c.png&quot;
    align=&quot;left&quot;
  /&gt;
&lt;/a&gt;

[**Web docs**](https://react-typescript-cheatsheet.netlify.app/docs/basic/setup) |
[Contribute!](https://github.com/typescript-cheatsheets/react/blob/main/CONTRIBUTING.md) |
[Ask!](https://github.com/typescript-cheatsheets/react/issues/new/choose)

:wave: This repo is maintained by [@eps1lon](https://twitter.com/sebsilbermann) and [@filiptammergard](https://twitter.com/tammergard). We&#039;re so happy you want to try out React with TypeScript! If you see anything wrong or missing, please [file an issue](https://github.com/typescript-cheatsheets/react/issues/new/choose)! :+1:

---

[![All Contributors](https://img.shields.io/github/contributors/typescript-cheatsheets/react-typescript-cheatsheet?color=orange&amp;style=flat-square)](/CONTRIBUTORS.md) | [![Discord](https://img.shields.io/discord/508357248330760243.svg?label=&amp;logo=discord&amp;logoColor=ffffff&amp;color=7389D8&amp;labelColor=6A7EC2)](https://discord.gg/wTGS5z9)

- [The Basic Cheatsheet](https://react-typescript-cheatsheet.netlify.app/docs/basic/setup) is focused on helping React devs just start using TS in React **apps**
  - Focus on opinionated best practices, copy+pastable examples.
  - Explains some basic TS types usage and setup along the way.
  - Answers the most Frequently Asked Questions.
  - Does not cover generic type logic in detail. Instead we prefer to teach simple troubleshooting techniques for newbies.
  - The goal is to get effective with TS without learning _too much_ TS.
- [The Advanced Cheatsheet](https://react-typescript-cheatsheet.netlify.app/docs/advanced) helps show and explain advanced usage of generic types for people writing reusable type utilities/functions/render prop/higher order components and TS+React **libraries**.
  - It also has miscellaneous tips and tricks for pro users.
  - Advice for contributing to DefinitelyTyped.
  - The goal is to take _full advantage_ of TypeScript.
- [The Migrating Cheatsheet](https://react-typescript-cheatsheet.netlify.app/docs/migration) helps collate advice for incrementally migrating large codebases from JS or Flow, **from people who have done it**.
  - We do not try to convince people to switch, only to help people who have already decided.
  - ⚠️This is a new cheatsheet, all assistance is welcome.
- [The HOC Cheatsheet](https://react-typescript-cheatsheet.netlify.app/docs/hoc) specifically teaches people to write HOCs with examples.
  - Familiarity with [Generics](https://www.typescriptlang.org/docs/handbook/2/generics.html) is necessary.
  - ⚠️This is the newest cheatsheet, all assistance is welcome.

---

## Basic Cheatsheet

### Basic Cheatsheet Table of Contents

&lt;details&gt;

&lt;summary&gt;&lt;b&gt;Expand Table of Contents&lt;/b&gt;&lt;/summary&gt;

- [React TypeScript Cheatsheet](#react-typescript-cheatsheet)
  - [Basic Cheatsheet](#basic-cheatsheet)
    - [Basic Cheatsheet Table of Contents](#basic-cheatsheet-table-of-contents)
    - [Section 1: Setup](#section-1-setup)
      - [Prerequisites](#prerequisites)
      - [React and TypeScript starter kits](#react-and-typescript-starter-kits)
      - [Try React and TypeScript online](#try-react-and-typescript-online)
    - [Section 2: Getting Started](#section-2-getting-started)
      - [Function Components](#function-components)
      - [Hooks](#hooks)
      - [useState](#usestate)
      - [useCallback](#usecallback)
      - [useReducer](#usereducer)
      - [useEffect / useLayoutEffect](#useeffect--uselayouteffect)
      - [useRef](#useref)
        - [Option 1: DOM element ref](#option-1-dom-element-ref)
        - [Option 2: Mutable value ref](#option-2-mutable-value-ref)
        - [See also](#see-also)
      - [useImperativeHandle](#useimperativehandle)
        - [See also:](#see-also-1)
      - [Custom Hooks](#custom-hooks)
      - [More Hooks + TypeScript reading:](#more-hooks--typescript-reading)
      - [Example React Hooks + TypeScript Libraries:](#example-react-hooks--typescript-libraries)
      - [Class Components](#class-components)
      - [Typing getDerivedStateFromProps](#typing-getderivedstatefromprops)
      - [You May Not Need `defaultProps`](#you-may-not-need-defaultprops)
      - [Typing `defaultProps`](#typing-defaultprops)
      - [Consuming Props of a Component with defaultProps](#consuming-props-of-a-component-with-defaultprops)
        - [Problem Statement](#problem-statement)
        - [Solution](#solution)
      - [Misc Discussions and Knowledge](#misc-discussions-and-knowledge)
      - [Typing Component Props](#typing-component-props)
      - [Basic Prop Types Examples](#basic-prop-types-examples)
        - [`object` as the non-primitive type](#object-as-the-non-primitive-type)
        - [Empty interface, `{}` and `Object`](#empty-interface--and-object)
      - [Useful React Prop Type Examples](#useful-react-prop-type-examples)
      - [Types or Interfaces?](#types-or-interfaces)
        - [TL;DR](#tldr)
        - [More Advice](#more-advice)
        - [Useful table for Types vs Interfaces](#useful-table-for-types-vs-interfaces)
  - [getDerivedStateFromProps](#getderivedstatefromprops)
    - [Forms and Events](#forms-and-events)
      - [List of event types](#list-of-event-types)
    - [Context](#context)
    - [Basic example](#basic-example)
    - [Without default context value](#without-default-context-value)
      - [Type assertion as an alternative](#type-assertion-as-an-alternative)
    - [forwardRef/createRef](#forwardrefcreateref)
    - [Generic forwardRefs](#generic-forwardrefs)
      - [Option 1 - Wrapper component](#option-1---wrapper-component)
      - [Option 2 - Redeclare forwardRef](#option-2---redeclare-forwardref)
      - [Option 3 - Call signature](#option-3---call-signature)
    - [More Info](#more-info)
    - [Portals](#portals)
    - [Error Boundaries](#error-boundaries)
      - [Option 1: Using react-error-boundary](#option-1-using-react-error-boundary)
      - [Option 2: Writing your custom error boundary component](#option-2-writing-your-custom-error-boundary-component)
    - [Concurrent React/React Suspense](#concurrent-reactreact-suspense)
    - [Troubleshooting Handbook: Types](#troubleshooting-handbook-types)
      - [Union Types and Type Guarding](#union-types-and-type-guarding)
      - [Optional Types](#optional-types)
      - [Enum Types](#enum-types)
      - [Type Assertion](#type-assertion)
      - [Simulating Nominal Types](#simulating-nominal-types)
      - [Intersection Types](#intersection-types)
      - [Union Types](#union-types)
      - [Overloading Function Types](#overloading-function-types)
      - [Using Inferred Types](#using-inferred-types)
      - [Using Partial Types](#using-partial-types)
      - [The Types I need weren&#039;t exported!](#the-types-i-need-werent-exported)
      - [The Types I need don&#039;t exist!](#the-types-i-need-dont-exist)
        - [Slapping `any` on everything](#slapping-any-on-everything)
        - [Autogenerate types](#autogenerate-types)
        - [Typing Exported Hooks](#typing-exported-hooks)
        - [Typing Exported Components](#typing-exported-components)
      - [Frequent Known Problems with TypeScript](#frequent-known-problems-with-typescript)
        - [TypeScript doesn&#039;t narrow after an object element null check](#typescript-doesnt-narrow-after-an-object-element-null-check)
        - [TypeScript doesn&#039;t let you restrict the type of children](#typescript-doesnt-let-you-restrict-the-type-of-children)
    - [Troubleshooting Handbook: Operators](#troubleshooting-handbook-operators)
    - [Troubleshooting Handbook: Utilities](#troubleshooting-handbook-utilities)
    - [Troubleshooting Handbook: tsconfig.json](#troubleshooting-handbook-tsconfigjson)
    - [Troubleshooting Handbook: Fixing bugs in official typings](#troubleshooting-handbook-fixing-bugs-in-official-typings)
    - [Troubleshooting Handbook: Globals, Images and other non-TS files](#troubleshooting-handbook-globals-images-and-other-non-ts-files)
    - [Editor Tooling and Integration](#editor-tooling-and-integration)
    - [Linting](#linting)
    - [Other React + TypeScript resources](#other-react--typescript-resources)
    - [Recommended React + TypeScript talks](#recommended-react--typescript-talks)
    - [Time to Really Learn TypeScript](#time-to-really-learn-typescript)
    - [Example App](#example-app)
  - [My question isn&#039;t answered here!](#my-question-isnt-answered-here)
  - [Contributors](#contributors)

&lt;/details&gt;

&lt;!--START-SECTION:setup--&gt;

### Section 1: Setup

#### Prerequisites

You can use this cheatsheet for reference at any skill level, but basic understanding of React and TypeScript is assumed. Here is a list of prerequisites:

- Basic understanding of [React](https://react.dev/).
- Familiarity with [TypeScript Basics](https://www.typescriptlang.org/docs/handbook/2/basic-types.html) and [Everyday Types](https://www.typescriptlang.org/docs/handbook/2/everyday-types.html).

In the cheatsheet we assume you are using the latest versions of React and TypeScript.

#### React and TypeScript starter kits

React has documentation for [how to start a new React project](https://react.dev/learn/start-a-new-react-project) with some of the most popular frameworks. Here&#039;s how to start them with TypeScript:

- [Next.js](https://nextjs.org/docs/basic-features/typescript): `npx create-next-app@latest --ts`
- [Remix](https://remix.run/docs/tutorials/blog): `npx create-remix@latest`
- [Gatsby](https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/): `npm init gatsby --ts`
- [Expo](https://docs.expo.dev/guides/typescript/): `npx create-expo-app -t with-typescript`

#### Try React and TypeScript online

There are some tools that let you run React and TypeScript online, which can be helpful for debugging or making sharable reproductions.

- [TypeScript playground](https://www.typescriptlang.org/play?target=8&amp;jsx=4#code/JYWwDg9gTgLgBAbzgVwM4FMDKMCGN0A0KGAogGZnoDG8AvnGVBCHAORTo42sDcAsAChB6AB6RYcKhAB2qeAGEIyafihwAvHAAUASg0A+RILiSZcuAG0pymEQwxFNgLobiWXPi0AGHfyECTNHRyShotXQMjAJM4ABMIKmQQdBUAOhhgGAAbdFcAAwBNJUks4CoAa3RYuAASBGsVegzk1Dy-E1pfQWM4DhhkKGltHpMAHn0RmNGwfSLkErLK6vqlRrhm9FRRgHoZybGAI2QYGBk4GXlSivUECPVDe0cVLQb4AGo4AEYdWgnomJil0WcGS+zgOyOJxkfwBOxhcC6AlogiAA)
- [StackBlitz](https://stackblitz.com/fork/react-ts)
- [CodeSandbox](https://ts.react.new/)

&lt;!--END-SECTION:setup--&gt;

### Section 2: Getting Started

&lt;!--START-SECTION:function-components--&gt;

#### Function Components

These can be written as normal functions that take a `props` argument and return a JSX element.

```tsx
// Declaring type of props - see &quot;Typing Component Props&quot; for more examples
type AppProps = {
  message: string;
}; /* use `interface` if exporting so that consumers can extend */

// Easiest way to declare a Function Component; return type is inferred.
const App = ({ message }: AppProps) =&gt; &lt;div&gt;{message}&lt;/div&gt;;

// You can choose to annotate the return type so an error is raised if you accidentally return some other type
const App = ({ message }: AppProps): React.JSX.Element =&gt; &lt;div&gt;{message}&lt;/div&gt;;

// You can also inline the type declaration; eliminates naming the prop types, but looks repetitive
const App = ({ message }: { message: string }) =&gt; &lt;div&gt;{message}&lt;/div&gt;;

// Alternatively, you can use `React.FunctionComponent` (or `React.FC`), if you prefer.
// With latest React types and TypeScript 5.1. it&#039;s mostly a stylistic choice, otherwise discouraged.
const App: React.FunctionComponent&lt;{ message: string }&gt; = ({ message }) =&gt; (
  &lt;div&gt;{message}&lt;/div&gt;
);
// or
const App: React.FC&lt;AppProps&gt; = ({ message }) =&gt; &lt;div&gt;{message}&lt;/div&gt;;
```

&gt; Tip: You might use [Paul Shen&#039;s VS Code Extension](https://marketplace.visualstudio.com/items?itemName=paulshen.paul-typescript-toolkit) to automate the type destructure declaration (incl a [keyboard shortcut](https://twitter.com/_paulshen/status/1392915279466745857?s=20)).

&lt;details&gt;

&lt;summary&gt;&lt;b&gt;Why is &lt;code&gt;React.FC&lt;/code&gt; not needed? What about &lt;code&gt;React.FunctionComponent&lt;/code&gt;/&lt;code&gt;React.VoidFunctionComponent&lt;/code&gt;?&lt;/b&gt;&lt;/summary&gt;

You may see this in many React+TypeScript codebases:

```tsx
const App: React.FunctionComponent&lt;{ message: string }&gt; = ({ message }) =&gt; (
  &lt;div&gt;{message}&lt;/div&gt;
);
```

However, the general consensus today is that `React.FunctionComponent` (or the shorthand `React.FC`) is not needed. If you&#039;re still using React 17 or TypeScript lower than 5.1, it is even [discouraged](https://github.com/facebook/create-react-app/pull/8177). This is a nuanced opinion of course, but if you agree and want to remove `React.FC` from your codebase, you can use [this jscodeshift codemod](https://github.com/gndelia/codemod-replace-react-fc-typescript).

Some differences from the &quot;normal function&quot; version:

- `React.FunctionComponent` is explicit about the return type, while the normal function version is implicit (or else needs additional annotation).

- It provides typechecking and autocomplete for static properties like `displayName`, `propTypes`, and `defaultProps`.

  - Note that there are some known issues using `defaultProps` with `React.FunctionComponent`. See [this issue for details](https://github.com/typescript-cheatsheets/react/issues/87). We maintain a separate `defaultProps` section you can also look up.

- Before the [React 18 type updates](https://github.com/DefinitelyTyped/DefinitelyTyped/pull/56210), `React.FunctionComponent` provided an implicit definition of `children` (see below), which was heavily debated and is one of the reasons [`React.FC` was removed from the Create React App TypeScript template](https://github.com/facebook/create-react-app/pull/8177).

```tsx
// before React 18 types
const Title: React.FunctionComponent&lt;{ title: string }&gt; = ({
  children,
  title,
}) =&gt; &lt;div title={title}&gt;{children}&lt;/div&gt;;
```

&lt;details&gt;
&lt;summary&gt;(Deprecated)&lt;b&gt;Using &lt;code&gt;React.VoidFunctionComponent&lt;/code&gt; or &lt;code&gt;React.VFC&lt;/code&gt; instead&lt;/b&gt;&lt;/summary&gt;

In [@types/react 16.9.48](https://github.com/DefinitelyTyped/DefinitelyTyped/pull/46643), the `React.VoidFunctionComponent` or `React.VFC` type was added for typing `children` explicitly.
However, please be aware that `React.VFC` and `React.VoidFunctionComponent` were deprecated in React 18 (https://github.com/DefinitelyTyped/DefinitelyTyped/pull/59882), so this interim solution is no longer necessary or recommended in React 18+.

Please use regular function components or `React.FC` instead.

```ts
type Props = { foo: string };

// OK now, in future, error
const FunctionComponent: React.FunctionComponent&lt;Props&gt; = ({
  foo,
  children,
}: Props) =&gt; {
  return (
    &lt;div&gt;
      {foo} {children}
    &lt;/div&gt;
  ); // OK
};

// Error now, in future, deprecated
const VoidFunctionComponent: React.VoidFunctionComponent&lt;Props&gt; = ({
  foo,
  children,
}) =&gt; {
  return (
    &lt;div&gt;
      {foo}
      {children}
    &lt;/div&gt;
  );
};
```

&lt;/details&gt;

- _In the future_, it may automatically mark props as `readonly`, though that&#039;s a moot point if the props object is destructured in the parameter list.

In most cases it makes very little difference which syntax is used, but you may prefer the more explicit nature of `React.FunctionComponent`.

&lt;/details&gt;

&lt;!--END-SECTION:function-components--&gt;

&lt;!--START-SECTION:hooks--&gt;

#### Hooks

Hooks are [supported in `@types/react` from v16.8 up](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/a05cc538a42243c632f054e42eab483ebf1560ab/types/react/index.d.ts#L800-L1031).

#### useState

Type inference works very well for simple values:

```tsx
const [state, setState] = useState(false);
// `state` is inferred to be a boolean
// `setState` only takes booleans
```

See also the [Using Inferred Types](https://react-typescript-cheatsheet.netlify.app/docs/basic/troubleshooting/types/#using-inferred-types) section if you need to use a complex type that you&#039;ve relied on inference for.

However, many hooks are initialized with null-ish default values, and you may wonder how to provide types. Explicitly declare the type, and use a union type:

```tsx
const [user, setUser] = useState&lt;User | null&gt;(null);

// later...
setUser(newUser);
```

You can also use type assertions if a state is initialized soon after setup and always has a value after:

```tsx
const [user, setUser] = useState&lt;User&gt;({} as User);

// later...
setUser(newUser);
```

This temporarily &quot;lies&quot; to the TypeScript compiler that `{}` is of type `User`. You should follow up by setting the `user` state — if you don&#039;t, the rest of your code may rely on the fact that `user` is of type `User` and that may lead to runtime errors.

#### useCallback

You can type the `useCallback` just like any other function.

```ts
const memoizedCallback = useCallback(
  (param1: string, param2: number) =&gt; {
    console.log(param1, param2)
    return { ok: true }
  },
  [...],
);
/**
 * VSCode will show the following type:
 * const memoizedCallback:
 *  (param1: string, param2: number) =&gt; { ok: boolean }
 */
```

Note that for React &lt; 18, the function signature of `useCallback` typed arguments as `any[]` by default:

```ts
function useCallback&lt;T extends (...args: any[]) =&gt; any&gt;(
  callback: T,
  deps: DependencyList
): T;
```

In React &gt;= 18, the function signature of `useCallback` changed to the following:

```ts
function useCallback&lt;T extends Function&gt;(callback: T, deps: DependencyList): T;
```

Therefore, the following code will yield &quot;`Parameter &#039;e&#039; implicitly has an &#039;any&#039; type.`&quot; error in React &gt;= 18, but not &lt;17.

```ts
// @ts-expect-error Parameter &#039;e&#039; implicitly has &#039;any&#039; type.
useCallback((e) =&gt; {}, []);
// Explicit &#039;any&#039; type.
useCallback((e: any) =&gt; {}, []);
```

#### useReducer

You can use [Discriminated Unions](https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes-func.html#discriminated-unions) for reducer actions. Don&#039;t forget to define the return type of reducer, otherwise TypeScript will infer it.

```tsx
import { useReducer } from &quot;react&quot;;

const initialState = { count: 0 };

type ACTIONTYPE =
  | { type: &quot;increment&quot;; payload: number }
  | { type: &quot;decrement&quot;; payload: string };

function reducer(state: typeof initialState, action: ACTIONTYPE) {
  switch (action.type) {
    case &quot;increment&quot;:
      return { count: state.count + action.payload };
    case &quot;decrement&quot;:
      return { count: state.count - Number(action.payload) };
    default:
      throw new Error();
  }
}

function Counter() {
  const [state, dispatch] = useReducer(reducer, initialState);
  return (
    &lt;&gt;
      Count: {state.count}
      &lt;button onClick={() =&gt; dispatch({ type: &quot;decrement&quot;, payload: &quot;5&quot; })}&gt;
        -
      &lt;/button&gt;
      &lt;button onClick={() =&gt; dispatch({ type: &quot;increment&quot;, payload: 5 })}&gt;
        +
      &lt;/button&gt;
    &lt;/&gt;
  );
}
```

[View in the TypeScript Playground](https://www.typescriptlang.org/play?#code/LAKFEsFsAcHsCcAuACAVMghgZ2QJQKYYDGKAZvLJMgOTyEnUDcooRsAdliuO+IuBgA2AZUQZE+ZAF5kAbzYBXdogBcyAAwBfZmBCIAntEkBBAMIAVAJIB5AHLmAmgAUAotOShkyAD5zkBozVqHiI6SHxlagAaZGgMfUFYDAATNXYFSAAjfHhNDxAvX1l-Q3wg5PxQ-HDImLiEpNTkLngeAHM8ll1SJRJwDmQ6ZIUiHIAKLnEykqNYUmQePgERMQkY4n4ONTMrO0dXAEo5T2aAdz4iAAtkMY3+9gA6APwj2ROvImxJYPYqmsRqCp3l5BvhEAp4Ow5IplGpJhIHjCUABqTB9DgPeqJFLaYGfLDfCp-CIAoEFEFeOjgyHQ2BKVTNVb4RF05TIAC0yFsGWy8Fu6MeWMaB1x5K8FVIGAUglUwK8iEuFFOyHY+GVLngFD5Bx0Xk0oH13V6myhplZEm1x3JbE4KAA2vD8DFkuAsHFEFcALruAgbB4KAkEYajPlDEY5GKLfhCURTHUnKkQqFjYEAHgAfHLkGb6WpZI6WfTDRSvKnMgpEIgBhxTIJwEQANZSWRjI5SdPIF1u8RXMayZ7lSphEnRWLxbFNagAVmomhF6fZqYA9OXKxxM2KQWWK1WoTW643m63pB2u+7e-3SkEQsPamOGik1FO55p08jl6vdxuKcvv8h4yAmhAA)

&lt;details&gt;

&lt;summary&gt;&lt;b&gt;Usage with &lt;code&gt;Reducer&lt;/code&gt; from &lt;code&gt;redux&lt;/code&gt;&lt;/b&gt;&lt;/summary&gt;

In case you use the [redux](https://github.com/reduxjs/redux) library to write reducer function, It provides a convenient helper o

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WhiskeySockets/Baileys]]></title>
            <link>https://github.com/WhiskeySockets/Baileys</link>
            <guid>https://github.com/WhiskeySockets/Baileys</guid>
            <pubDate>Fri, 25 Apr 2025 00:04:38 GMT</pubDate>
            <description><![CDATA[Lightweight full-featured typescript/javascript WhatsApp Web API]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WhiskeySockets/Baileys">WhiskeySockets/Baileys</a></h1>
            <p>Lightweight full-featured typescript/javascript WhatsApp Web API</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,176</p>
            <p>Forks: 1,750</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>&lt;h1&gt;&lt;img alt=&quot;Baileys logo&quot; src=&quot;https://raw.githubusercontent.com/WhiskeySockets/Baileys/refs/heads/master/Media/logo.png&quot; height=&quot;75&quot;/&gt;&lt;/h1&gt;

![NPM Downloads](https://img.shields.io/npm/dw/%40whiskeysockets%2Fbaileys?label=npm&amp;color=%23CB3837)
![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/whiskeysockets/baileys)
![Discord](https://img.shields.io/discord/725839806084546610?label=discord&amp;color=%235865F2)

Baileys is a WebSockets-based TypeScript library for interacting with the WhatsApp Web API.

# Usage
A new guide has been posted at https://baileys.wiki.

# Sponsor
If you&#039;d like to financially support this project, you can do so by supporting the current maintainer [here](https://purpshell.dev/sponsor).

# Disclaimer
This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates.
The official WhatsApp website can be found at whatsapp.com. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners.

The maintainers of Baileys do not in any way condone the use of this application in practices that violate the Terms of Service of WhatsApp. The maintainers of this application call upon the personal responsibility of its users to use this application in a fair way, as it is intended to be used.
Use at your own discretion. Do not spam people with this. We discourage any stalkerware, bulk or automated messaging usage.

# License
Copyright (c) 2025 Rajeh Taher/WhiskeySockets

Licensed under the MIT License:
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &quot;Software&quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

Thus, the maintainers of the project can&#039;t be held liable for any potential misuse of this project.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[projectdiscovery/nuclei-templates]]></title>
            <link>https://github.com/projectdiscovery/nuclei-templates</link>
            <guid>https://github.com/projectdiscovery/nuclei-templates</guid>
            <pubDate>Fri, 25 Apr 2025 00:04:37 GMT</pubDate>
            <description><![CDATA[Community curated list of templates for the nuclei engine to find security vulnerabilities.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/projectdiscovery/nuclei-templates">projectdiscovery/nuclei-templates</a></h1>
            <p>Community curated list of templates for the nuclei engine to find security vulnerabilities.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 10,023</p>
            <p>Forks: 2,806</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre>

&lt;h1 align=&quot;center&quot;&gt;
Nuclei Templates
&lt;/h1&gt;
&lt;h4 align=&quot;center&quot;&gt;Community curated list of templates for the nuclei engine to find security vulnerabilities in applications.&lt;/h4&gt;


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/projectdiscovery/nuclei-templates&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/pdnuclei&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/pdnuclei.svg?logo=twitter&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://discord.gg/projectdiscovery&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/695645237418131507.svg?logo=discord&quot;&gt;&lt;/a&gt;
&lt;/p&gt;
      
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://nuclei.projectdiscovery.io/templating-guide/&quot;&gt;Documentation&lt;/a&gt; •
  &lt;a href=&quot;#-contributions&quot;&gt;Contributions&lt;/a&gt; •
  &lt;a href=&quot;#-discussion&quot;&gt;Discussion&lt;/a&gt; •
  &lt;a href=&quot;#-community&quot;&gt;Community&lt;/a&gt; •
  &lt;a href=&quot;https://nuclei.projectdiscovery.io/faq/templates/&quot;&gt;FAQs&lt;/a&gt; •
  &lt;a href=&quot;https://discord.gg/projectdiscovery&quot;&gt;Join Discord&lt;/a&gt;
&lt;/p&gt;

----

Templates are the core of the [nuclei scanner](https://github.com/projectdiscovery/nuclei) which powers the actual scanning engine.
This repository stores and houses various templates for the scanner provided by our team, as well as contributed by the community.
We hope that you also contribute by sending templates via **pull requests** or [Github issues](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=submit-template.md&amp;title=%5Bnuclei-template%5D+) to grow the list.


## Nuclei Templates overview


An overview of the nuclei template project, including statistics on unique tags, author, directory, severity, and type of templates. The table below contains the top ten statistics for each matrix; an expanded version of this is [available here](TEMPLATES-STATS.md), and also available in [JSON](TEMPLATES-STATS.json) format for integration.

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt; 

## Nuclei Templates Top 10 statistics

|    TAG    | COUNT |    AUTHOR     | COUNT | DIRECTORY  | COUNT | SEVERITY | COUNT | TYPE | COUNT |
|-----------|-------|---------------|-------|------------|-------|----------|-------|------|-------|
| cve       |  3055 | dhiyaneshdk   |  1811 | http       |  8547 | info     |  4048 | file |   434 |
| panel     |  1284 | daffainfo     |   868 | file       |   434 | high     |  2283 | dns  |    25 |
| xss       |  1228 | dwisiswant0   |   805 | cloud      |   420 | medium   |  2152 |      |       |
| wordpress |  1129 | ritikchaddha  |   581 | dast       |   255 | critical |  1277 |      |       |
| exposure  |  1075 | princechaddha |   571 | workflows  |   192 | low      |   302 |      |       |
| wp-plugin |   988 | pussycat0x    |   489 | code       |   167 | unknown  |    51 |      |       |
| osint     |   807 | pikpikcu      |   352 | network    |   139 |          |       |      |       |
| tech      |   768 | pdteam        |   304 | javascript |    70 |          |       |      |       |
| lfi       |   757 | ricardomaia   |   249 | ssl        |    36 |          |       |      |       |
| misconfig |   729 | geeknik       |   235 | dns        |    22 |          |       |      |       |

**799 directories, 10630 files**.

&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

📖 Documentation
-----

Please navigate to https://nuclei.projectdiscovery.io for detailed documentation to **build** new or your own **custom** templates.
We have also added a set of templates to help you understand how things work.

💪 Contributions
-----

Nuclei-templates is powered by major contributions from the community.
[Template contributions ](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=submit-template.md&amp;title=%5Bnuclei-template%5D+), [Feature Requests](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=feature_request.md&amp;title=%5BFeature%5D+) and [Bug Reports](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=bug_report.md&amp;title=%5BBug%5D+) are more than welcome.

![Alt](https://repobeats.axiom.co/api/embed/55ee65543bb9a0f9c797626c4e66d472a517d17c.svg &quot;Repobeats analytics image&quot;)

💬 Discussion
-----

Have questions / doubts / ideas to discuss?
Feel free to open a discussion on [Github discussions](https://github.com/projectdiscovery/nuclei-templates/discussions) board.

👨‍💻 Community
-----

You are welcome to join the active [Discord Community](https://discord.gg/projectdiscovery) to discuss directly with project maintainers and share things with others around security and automation.
Additionally, you may follow us on [Twitter](https://twitter.com/pdnuclei) to be updated on all the things about Nuclei.


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=projectdiscovery/nuclei-templates&amp;max=300&quot;&gt;
&lt;/a&gt;
&lt;/p&gt;


Thanks again for your contribution and keeping this community vibrant. :heart:
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[is-a-dev/register]]></title>
            <link>https://github.com/is-a-dev/register</link>
            <guid>https://github.com/is-a-dev/register</guid>
            <pubDate>Fri, 25 Apr 2025 00:04:36 GMT</pubDate>
            <description><![CDATA[Grab your own sweet-looking '.is-a.dev' subdomain.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/is-a-dev/register">is-a-dev/register</a></h1>
            <p>Grab your own sweet-looking '.is-a.dev' subdomain.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,440</p>
            <p>Forks: 11,796</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
   &lt;img alt=&quot;is-a.dev Banner&quot; src=&quot;https://raw.githubusercontent.com/is-a-dev/register/main/media/banner.png&quot;&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
   &lt;img alt=&quot;Domains&quot; src=&quot;https://shields.wdh.app/github/directory-file-count/is-a-dev/register/domains?color=5c46eb&amp;label=domains&amp;style=for-the-badge&quot;&gt;
   &lt;img alt=&quot;Open Pull Requests&quot; src=&quot;https://shields.wdh.app/github/issues-raw/is-a-dev/register?color=5c46eb&amp;label=issues&amp;style=for-the-badge&quot;&gt;
   &lt;img alt=&quot;Open Issues&quot; src=&quot;https://shields.wdh.app/github/issues-pr-raw/is-a-dev/register?color=5c46eb&amp;label=pull%20requests&amp;style=for-the-badge&quot;&gt;
   &lt;br&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;is-a.dev&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;&lt;strong&gt;is-a.dev&lt;/strong&gt; is a service that allows developers to get a sweet-looking &lt;code&gt;.is-a.dev&lt;/code&gt; subdomain for their personal websites.&lt;/p&gt;

## Announcements &amp; Status Updates
Please join our [Discord server](https://discord.gg/is-a-dev-830872854677422150) for announcements, updates &amp; upgrades, and downtime notifications regarding the service.
Not all of these will be posted on GitHub[^1], however they will always be posted in our Discord server.

[^1]: We usually only post announcements on GitHub in the case of a serious incident. In that case, you&#039;ll likely see it at the top of this README file.

&lt;a href=&quot;https://discord.gg/is-a-dev-830872854677422150&quot;&gt;&lt;img alt=&quot;Discord Server&quot; src=&quot;https://invidget.wdh.app/is-a-dev-830872854677422150&quot;&gt;&lt;/a&gt;

# Register
&gt; If you want a more visual guide, check out [this blog post](https://wdh.gg/tX3ghge).

- [Fork](https://github.com/is-a-dev/register/fork) this repository.
- Add a new file called `your-domain-name.json` in the `domains` folder to register `your-domain-name.is-a.dev`.
- [Read the documentation](https://docs.is-a.dev).
   - If you are applying for NS records please read [this](#ns-records).
- Your pull request will be reviewed and merged. *Make sure to keep an eye on it in case we need you to make any changes!*
- After the pull request is merged, please allow up to 24 hours for the changes to propagate.
- Enjoy your new `.is-a.dev` subdomain! Please consider leaving us a star ⭐️ to help support us!

### NS Records
When applying for NS records, please be aware we already support a [wide range of DNS records](https://docs.is-a.dev/faq/#which-records-are-supported), so you may not need them. 

In your PR, please explain why you need NS records, including examples, to help mitigate potential abuse. Refer to the [FAQ](https://docs.is-a.dev/faq/#who-can-use-ns-records) for guidelines on allowed usage.

***Pull requests adding NS records without sufficient reasoning will be closed.***

&gt; Also see: [Why are you so strict with NS records](https://docs.is-a.dev/faq/#why-are-you-so-strict-with-ns-records)?

&gt; [!NOTE]
&gt; You can bypass these requirements[^2] by donating just $2 [here](https://wdh.gg/pvNCdvs), or via [GitHub Sponsors](https://wdh.gg/sponsor). As a thank you, you&#039;ll also receive a special role in our [Discord server](https://discord.gg/is-a-dev-830872854677422150)!
&gt;
&gt; If you donate, email william@is-a.dev or DM `@williamharrison` on Discord with your receipt and PR link.

[^2]: Requests deemed to be made with malicious intent may be denied, with a refund provided.

## Report Abuse
If you find any subdomains being used for abusive purposes, please report them by [creating an issue](https://github.com/is-a-dev/register/issues/new?assignees=&amp;labels=report-abuse&amp;projects=&amp;template=report-abuse.md&amp;title=Report+abuse) with the relevant evidence.

---

We are proud to announce that we are supported by Cloudflare&#039;s [Project Alexandria](https://www.cloudflare.com/lp/project-alexandria) sponsorship program. We would not be able to operate without their help! 💖

&lt;a href=&quot;https://www.cloudflare.com&quot;&gt;
   &lt;img alt=&quot;Cloudflare Logo&quot; src=&quot;https://raw.githubusercontent.com/is-a-dev/register/main/media/cloudflare.png&quot; height=&quot;96&quot;&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[brianc/node-postgres]]></title>
            <link>https://github.com/brianc/node-postgres</link>
            <guid>https://github.com/brianc/node-postgres</guid>
            <pubDate>Fri, 25 Apr 2025 00:04:35 GMT</pubDate>
            <description><![CDATA[PostgreSQL client for node.js.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/brianc/node-postgres">brianc/node-postgres</a></h1>
            <p>PostgreSQL client for node.js.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 12,624</p>
            <p>Forks: 1,263</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre># node-postgres

![Build Status](https://github.com/brianc/node-postgres/actions/workflows/ci.yml/badge.svg)
&lt;span class=&quot;badge-npmversion&quot;&gt;&lt;a href=&quot;https://npmjs.org/package/pg&quot; title=&quot;View this project on NPM&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/pg.svg&quot; alt=&quot;NPM version&quot; /&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;badge-npmdownloads&quot;&gt;&lt;a href=&quot;https://npmjs.org/package/pg&quot; title=&quot;View this project on NPM&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/pg.svg&quot; alt=&quot;NPM downloads&quot; /&gt;&lt;/a&gt;&lt;/span&gt;

Non-blocking PostgreSQL client for Node.js. Pure JavaScript and optional native libpq bindings.

## Monorepo

This repo is a monorepo which contains the core [pg](https://github.com/brianc/node-postgres/tree/master/packages/pg) module as well as a handful of related modules.

- [pg](https://github.com/brianc/node-postgres/tree/master/packages/pg)
- [pg-pool](https://github.com/brianc/node-postgres/tree/master/packages/pg-pool)
- [pg-native](https://github.com/brianc/node-postgres/tree/master/packages/pg-native)
- [pg-cursor](https://github.com/brianc/node-postgres/tree/master/packages/pg-cursor)
- [pg-query-stream](https://github.com/brianc/node-postgres/tree/master/packages/pg-query-stream)
- [pg-connection-string](https://github.com/brianc/node-postgres/tree/master/packages/pg-connection-string)
- [pg-protocol](https://github.com/brianc/node-postgres/tree/master/packages/pg-protocol)

## Install

```
npm install pg
```

## Documentation

Each package in this repo should have its own readme more focused on how to develop/contribute. For overall documentation on the project and the related modules managed by this repo please see:

### :star: [Documentation](https://node-postgres.com) :star:

The source repo for the documentation is available for contribution [here](https://github.com/brianc/node-postgres/tree/master/docs).

### Features

- Pure JavaScript client and native libpq bindings share _the same API_
- Connection pooling
- Extensible JS ↔ PostgreSQL data-type coercion
- Supported PostgreSQL features
  - Parameterized queries
  - Named statements with query plan caching
  - Async notifications with `LISTEN/NOTIFY`
  - Bulk import &amp; export with `COPY TO/COPY FROM`

### Extras

node-postgres is by design pretty light on abstractions. These are some handy modules we&#039;ve been using over the years to complete the picture.
The entire list can be found on our [wiki](https://github.com/brianc/node-postgres/wiki/Extras).

## Support

node-postgres is free software. If you encounter a bug with the library please open an issue on the [GitHub repo](https://github.com/brianc/node-postgres). If you have questions unanswered by the documentation please open an issue pointing out how the documentation was unclear &amp; I will do my best to make it better!

When you open an issue please provide:

- version of Node
- version of Postgres
- smallest possible snippet of code to reproduce the problem

You can also follow me [@briancarlson](https://twitter.com/briancarlson) if that&#039;s your thing. I try to always announce noteworthy changes &amp; developments with node-postgres on Twitter.

## Sponsorship :two_hearts:

node-postgres&#039;s continued development has been made possible in part by generous financial support from [the community](https://github.com/brianc/node-postgres/blob/master/SPONSORS.md).

If you or your company are benefiting from node-postgres and would like to help keep the project financially sustainable [please consider supporting](https://github.com/sponsors/brianc) its development.

### Featured sponsor

Special thanks to [medplum](https://medplum.com) for their generous and thoughtful support of node-postgres!

![medplum](https://raw.githubusercontent.com/medplum/medplum-logo/refs/heads/main/medplum-logo.png)

## Contributing

**:heart: contributions!**

I will **happily** accept your pull request if it:

- **has tests**
- looks reasonable
- does not break backwards compatibility

If your change involves breaking backwards compatibility please please point that out in the pull request &amp; we can discuss &amp; plan when and how to release it and what type of documentation or communication it will require.

### Setting up for local development

1. Clone the repo
2. Ensure you have installed libpq-dev in your system.
3. From your workspace root run `yarn` and then `yarn lerna bootstrap`
4. Ensure you have a PostgreSQL instance running with SSL enabled and an empty database for tests
5. Ensure you have the proper environment variables configured for connecting to the instance
6. Run `yarn test` to run all the tests

## Troubleshooting and FAQ

The causes and solutions to common errors can be found among the [Frequently Asked Questions (FAQ)](https://github.com/brianc/node-postgres/wiki/FAQ)

## License

Copyright (c) 2010-2020 Brian Carlson (brian.m.carlson@gmail.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &quot;Software&quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[prebid/Prebid.js]]></title>
            <link>https://github.com/prebid/Prebid.js</link>
            <guid>https://github.com/prebid/Prebid.js</guid>
            <pubDate>Fri, 25 Apr 2025 00:04:34 GMT</pubDate>
            <description><![CDATA[Setup and manage header bidding advertising partners without writing code or confusing line items. Prebid.js is open source and free.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/prebid/Prebid.js">prebid/Prebid.js</a></h1>
            <p>Setup and manage header bidding advertising partners without writing code or confusing line items. Prebid.js is open source and free.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,425</p>
            <p>Forks: 2,154</p>
            <p>Stars today: 0 stars today</p>
            <h2>README</h2><pre>[![Build Status](https://circleci.com/gh/prebid/Prebid.js.svg?style=svg)](https://circleci.com/gh/prebid/Prebid.js)
[![Percentage of issues still open](http://isitmaintained.com/badge/open/prebid/Prebid.js.svg)](https://isitmaintained.com/project/prebid/Prebid.js &quot;Percentage of issues still open&quot;)
[![Coverage Status](https://coveralls.io/repos/github/prebid/Prebid.js/badge.svg)](https://coveralls.io/github/prebid/Prebid.js)

# Prebid.js

&gt; A free and open source library for publishers to quickly implement header bidding.

This README is for developers who want to contribute to Prebid.js.
Additional documentation can be found at [the Prebid.js documentation homepage](https://docs.prebid.org/prebid/prebidjs.html).
Working examples can be found in [the developer docs](https://prebid.org/dev-docs/getting-started.html).

Prebid.js is open source software that is offered for free as a convenience. While it is designed to help companies address legal requirements associated with header bidding, we cannot and do not warrant that your use of Prebid.js will satisfy legal requirements. You are solely responsible for ensuring that your use of Prebid.js complies with all applicable laws.  We strongly encourage you to obtain legal advice when using Prebid.js to ensure your implementation complies with all laws where you operate.

**Table of Contents**

- [Usage](#Usage)
- [Install](#Install)
- [Build](#Build)
- [Run](#Run)
- [Contribute](#Contribute)

&lt;a name=&quot;Usage&quot;&gt;&lt;/a&gt;

## Usage (as a npm dependency)

*Note:* Requires Prebid.js v1.38.0+

Prebid.js depends on Babel and some Babel Plugins in order to run correctly in the browser.  Here are some examples for
configuring webpack to work with Prebid.js.

With Babel 7:
```javascript
// webpack.conf.js
let path = require(&#039;path&#039;);
module.exports = {
  mode: &#039;production&#039;,
  module: {
    rules: [

      // this rule can be excluded if you don&#039;t require babel-loader for your other application files
      {
        test: /\.m?js$/,
        exclude: /node_modules/,
        use: {
          loader: &#039;babel-loader&#039;,
        }
      },

      // this separate rule is required to make sure that the Prebid.js files are babel-ified.  this rule will
      // override the regular exclusion from above (for being inside node_modules).
      {
        test: /.js$/,
        include: new RegExp(`\\${path.sep}prebid\\.js`),
        use: {
          loader: &#039;babel-loader&#039;,
          // presets and plugins for Prebid.js must be manually specified separate from your other babel rule.
          // this can be accomplished by requiring prebid&#039;s .babelrc.js file (requires Babel 7 and Node v8.9.0+)
          // as of Prebid 6, babelrc.js only targets modern browsers. One can change the targets and build for
          // older browsers if they prefer, but integration tests on ie11 were removed in Prebid.js 6.0
          options: require(&#039;prebid.js/.babelrc.js&#039;)
        }
      }
    ]
  }
}
```

Or for Babel 6:
```javascript
            // you must manually install and specify the presets and plugins yourself
            options: {
              plugins: [
                &quot;transform-object-assign&quot;, // required (for IE support) and &quot;babel-plugin-transform-object-assign&quot;
                                           // must be installed as part of your package.
                require(&#039;prebid.js/plugins/pbjsGlobals.js&#039;) // required!
              ],
              presets: [
                [&quot;env&quot;, {                 // you can use other presets if you wish.
                  &quot;targets&quot;: {            // this example is using &quot;babel-presets-env&quot;, which must be installed if you
                    &quot;browsers&quot;: [         // follow this example.
                      ... // your browser targets. they should probably match the targets you&#039;re using for the rest
                          // of your application
                    ]
                  }
                }]
              ]
            }
```

Then you can use Prebid.js as any other npm dependency

```javascript
import pbjs from &#039;prebid.js&#039;;
import &#039;prebid.js/modules/rubiconBidAdapter&#039;; // imported modules will register themselves automatically with prebid
import &#039;prebid.js/modules/appnexusBidAdapter&#039;;
pbjs.processQueue();  // required to process existing pbjs.queue blocks and setup any further pbjs.queue execution

pbjs.requestBids({
  ...
})

```



&lt;a name=&quot;Install&quot;&gt;&lt;/a&gt;

## Install



    $ git clone https://github.com/prebid/Prebid.js.git
    $ cd Prebid.js
    $ npm ci

*Note:* You need to have `NodeJS` 12.16.1 or greater installed.

*Note:* In the 1.24.0 release of Prebid.js we have transitioned to using gulp 4.0 from using gulp 3.9.1.  To comply with gulp&#039;s recommended setup for 4.0, you&#039;ll need to have `gulp-cli` installed globally prior to running the general `npm ci`.  This shouldn&#039;t impact any other projects you may work on that use an earlier version of gulp in its setup.

If you have a previous version of `gulp` installed globally, you&#039;ll need to remove it before installing `gulp-cli`.  You can check if this is installed by running `gulp -v` and seeing the version that&#039;s listed in the `CLI` field of the output.  If you have the `gulp` package installed globally, it&#039;s likely the same version that you&#039;ll see in the `Local` field.  If you already have `gulp-cli` installed, it should be a lower major version (it&#039;s at version `2.0.1` at the time of the transition).

To remove the old package, you can use the command: `npm rm gulp -g`

Once setup, run the following command to globally install the `gulp-cli` package: `npm install gulp-cli -g`


&lt;a name=&quot;Build&quot;&gt;&lt;/a&gt;

## Build for Development

To build the project on your local machine we recommend, running:

    $ gulp serve-and-test --file &lt;spec_file.js&gt;

This will run testing but not linting. A web server will start at `http://localhost:9999` serving from the project root and generates the following files:

+ `./build/dev/prebid.js` - Full source code for dev and debug
+ `./build/dev/prebid.js.map` - Source map for dev and debug
+ `./build/dev/prebid-core.js`
+ `./build/dev/prebid-core.js.map`


Development may be a bit slower but if you prefer linting and additional watch files you can also still run just:

    $ gulp serve


### Build Optimization

The standard build output contains all the available modules from within the `modules` folder.  Note, however that there are bid adapters which support multiple bidders through aliases, so if you don&#039;t see a file in modules for a bid adapter, you may need to grep the repository to find the name of the module you need to include.

You might want to exclude some/most of them from the final bundle.  To make sure the build only includes the modules you want, you can specify the modules to be included with the `--modules` CLI argument.

For example, when running the serve command: `gulp serve --modules=openxBidAdapter,rubiconBidAdapter,sovrnBidAdapter`

Building with just these adapters will result in a smaller bundle which should allow your pages to load faster.

**Build standalone prebid.js**

- Clone the repo, run `npm ci`
- Then run the build:

        $ gulp build --modules=openxBidAdapter,rubiconBidAdapter,sovrnBidAdapter

Alternatively, a `.json` file can be specified that contains a list of modules you would like to include.

    $ gulp build --modules=modules.json

With `modules.json` containing the following
```json modules.json
[
  &quot;openxBidAdapter&quot;,
  &quot;rubiconBidAdapter&quot;,
  &quot;sovrnBidAdapter&quot;
]
```

**Build prebid.js using npm for bundling**

In case you&#039;d like to explicitly show that your project uses `prebid.js` and want a reproducible build, consider adding it as an `npm` dependency.

- Add `prebid.js` as a `npm` dependency of your project: `npm install prebid.js`
- Run the `prebid.js` build under the `node_modules/prebid.js/` folder

        $ gulp build --modules=path/to/your/list-of-modules.json

Most likely your custom `prebid.js` will only change when there&#039;s:

- A change in your list of modules
- A new release of `prebid.js`

Having said that, you are probably safe to check your custom bundle into your project.  You can also generate it in your build process.

**Build once, bundle multiple times**

If you need to generate multiple distinct bundles from the same Prebid version, you can reuse a single build with:

```
gulp build
gulp bundle --tag one --modules=one.json
gulp bundle --tag two --modules=two.json
```

This generates slightly larger files, but has the advantage of being much faster to run (after the initial `gulp build`). It&#039;s also the method used by [the Prebid.org download page](https://docs.prebid.org/download.html).

&lt;a name=&quot;Run&quot;&gt;&lt;/a&gt;

### Excluding particular features from the build

Since version 7.2.0, you may instruct the build to exclude code for some features - for example, if you don&#039;t need support for native ads:

```
gulp build --disable NATIVE --modules=openxBidAdapter,rubiconBidAdapter,sovrnBidAdapter # substitute your module list
```

Or, if you are consuming Prebid through npm, with the `disableFeatures` option in your Prebid rule:

```javascript
  {
    test: /.js$/,
    include: new RegExp(`\\${path.sep}prebid\\.js`),
    use: {
      loader: &#039;babel-loader&#039;,
      options: require(&#039;prebid.js/babelConfig.js&#039;)({disableFeatures: [&#039;NATIVE&#039;]})
    }
  }
```

Features that can be disabled this way are:

 - `VIDEO` - support for video bids;
 - `NATIVE` - support for native bids;
 - `UID2_CSTG` - support for UID2 client side token generation (see [Unified ID 2.0](https://docs.prebid.org/dev-docs/modules/userid-submodules/unified2.html))
 - `GREEDY` - disables the use blocking, &quot;greedy&quot; promises within Prebid (see below).    

#### Greedy promises

By default, Prebid attempts to hold control of the main thread when possible, using a [custom implementation of `Promise`](https://github.com/prebid/Prebid.js/blob/master/libraries/greedy/greedyPromise.js) that does not submit callbacks to the scheduler once the promise is resolved (running them immediately instead).
Disabling this behavior instructs Prebid to use the standard `window.Promise` instead; this has the effect of breaking up task execution, making them slower overall but giving the browser more chances to run other tasks in between, which can improve UX.         

You may also override the `Promise` constructor used by Prebid through `pbjs.Promise`, for example:

```javascript
var pbjs = pbjs || {};
pbjs.Promise = myCustomPromiseConstructor;
```

## Unminified code

You can get a version of the code that&#039;s unminified for debugging with `build-bundle-dev`:

```bash
gulp build-bundle-dev --modules=bidderA,module1,...
```

The results will be in build/dev/prebid.js.

## Test locally

To lint the code:

```bash
gulp lint
```

To lint and only show errors

```bash
gulp lint --no-lint-warnings
```

To run the unit tests:

```bash
gulp test
```

To run the unit tests for a particular file (example for pubmaticBidAdapter_spec.js):
```bash
gulp test --file &quot;test/spec/modules/pubmaticBidAdapter_spec.js&quot; --nolint
```

To generate and view the code coverage reports:

```bash
gulp test-coverage
gulp view-coverage
```

Local end-to-end testing can be done with:

```bash
gulp e2e-test --local
```

For Prebid.org members with access to BrowserStack, additional end-to-end testing can be done with:

```bash
gulp e2e-test --host=test.localhost
```

To run these tests, the following items are required:
- setup an alias of localhost in your `hosts` file (eg `127.0.0.1  test.localhost`); note - you can use any alias.  Use this alias in the command-line argument above.
- access to [BrowserStack](https://www.browserstack.com/) account.  Assign the following variables in your bash_profile:
```bash
export BROWSERSTACK_USERNAME=&#039;YourUserNameHere&#039;
export BROWSERSTACK_ACCESS_KEY=&#039;YourAccessKeyHere&#039;
```
You can get these BrowserStack values from your profile page.

For development:

```javascript
(function() {
    var d = document, pbs = d.createElement(&#039;script&#039;), pro = d.location.protocol;
    pbs.type = &#039;text/javascript&#039;;
    pbs.src = ((pro === &#039;https:&#039;) ? &#039;https&#039; : &#039;http&#039;) + &#039;./build/dev/prebid.js&#039;;
    var target = document.getElementsByTagName(&#039;head&#039;)[0];
    target.insertBefore(pbs, target.firstChild);
})();
```

For deployment:

```javascript
(function() {
    var d = document, pbs = d.createElement(&#039;script&#039;), pro = d.location.protocol;
    pbs.type = &#039;text/javascript&#039;;
    pbs.src = ((pro === &#039;https:&#039;) ? &#039;https&#039; : &#039;http&#039;) + &#039;./build/dist/prebid.js&#039;;
    var target = document.getElementsByTagName(&#039;head&#039;)[0];
    target.insertBefore(pbs, target.firstChild);
})();
```

Build and run the project locally with:

```bash
gulp serve
```

This runs `lint` and `test`, then starts a web server at `http://localhost:9999` serving from the project root.
Navigate to your example implementation to test, and if your `prebid.js` file is sourced from the `./build/dev`
directory you will have sourcemaps available in your browser&#039;s developer tools.

To run the example file, go to:

+ `http://localhost:9999/integrationExamples/gpt/hello_world.html`

As you make code changes, the bundles will be rebuilt and the page reloaded automatically.

&lt;a name=&quot;Contribute&quot;&gt;&lt;/a&gt;

## Contribute

Many SSPs, bidders, and publishers have contributed to this project. [Hundreds of bidders](https://github.com/prebid/Prebid.js/tree/master/modules) are supported by Prebid.js.

For guidelines, see [Contributing](./CONTRIBUTING.md).

Our PR review process can be found [here](https://github.com/prebid/Prebid.js/tree/master/PR_REVIEW.md).

### Add a Bidder Adapter

To add a bidder adapter module, see the instructions in [How to add a bidder adapter](https://docs.prebid.org/dev-docs/bidder-adaptor.html).

### Code Quality

Code quality is defined by `.eslintrc` and errors are reported in the terminal.

If you are contributing code, you should [configure your editor](http://eslint.org/docs/user-guide/integrations#editors) with the provided `.eslintrc` settings.

### Unit Testing with Karma

        $ gulp test --watch --browsers=chrome

This will run tests and keep the Karma test browser open. If your `prebid.js` file is sourced from the `./build/dev` directory you will also have sourcemaps available when using your browser&#039;s developer tools.

+ To access the Karma debug page, go to `http://localhost:9876/debug.html`

+ For test results, see the console

+ To set breakpoints in source code, see the developer tools

Detailed code coverage reporting can be generated explicitly with

        $ gulp test --coverage

The results will be in

        ./build/coverage

*Note*: Starting in June 2016, all pull requests to Prebid.js need to include tests with greater than 80% code coverage before they can be merged.  For more information, see [#421](https://github.com/prebid/Prebid.js/issues/421).

For instructions on writing tests for Prebid.js, see [Testing Prebid.js](https://prebid.org/dev-docs/testing-prebid.html).

### Supported Browsers

Prebid.js is supported on IE11 and modern browsers until 5.x. 6.x+ transpiles to target &gt;0.25%; not Opera Mini; not IE11.

### Governance
Review our governance model [here](https://github.com/prebid/Prebid.js/tree/master/governance.md).
### END
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[Asabeneh/30-Days-Of-JavaScript]]></title>
            <link>https://github.com/Asabeneh/30-Days-Of-JavaScript</link>
            <guid>https://github.com/Asabeneh/30-Days-Of-JavaScript</guid>
            <pubDate>Fri, 25 Apr 2025 00:04:33 GMT</pubDate>
            <description><![CDATA[30 days of JavaScript programming challenge is a step-by-step guide to learn JavaScript programming language in 30 days. This challenge may take more than 100 days, please just follow your own pace. These videos may help too: https://www.youtube.com/channel/UC7PNRuno1rzYPb1xLa4yktw]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Asabeneh/30-Days-Of-JavaScript">Asabeneh/30-Days-Of-JavaScript</a></h1>
            <p>30 days of JavaScript programming challenge is a step-by-step guide to learn JavaScript programming language in 30 days. This challenge may take more than 100 days, please just follow your own pace. These videos may help too: https://www.youtube.com/channel/UC7PNRuno1rzYPb1xLa4yktw</p>
            <p>Language: JavaScript</p>
            <p>Stars: 44,250</p>
            <p>Forks: 10,221</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mozilla/pdf.js]]></title>
            <link>https://github.com/mozilla/pdf.js</link>
            <guid>https://github.com/mozilla/pdf.js</guid>
            <pubDate>Fri, 25 Apr 2025 00:04:32 GMT</pubDate>
            <description><![CDATA[PDF Reader in JavaScript]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mozilla/pdf.js">mozilla/pdf.js</a></h1>
            <p>PDF Reader in JavaScript</p>
            <p>Language: JavaScript</p>
            <p>Stars: 50,526</p>
            <p>Forks: 10,261</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre># PDF.js [![CI](https://github.com/mozilla/pdf.js/actions/workflows/ci.yml/badge.svg?query=branch%3Amaster)](https://github.com/mozilla/pdf.js/actions/workflows/ci.yml?query=branch%3Amaster)

[PDF.js](https://mozilla.github.io/pdf.js/) is a Portable Document Format (PDF) viewer that is built with HTML5.

PDF.js is community-driven and supported by Mozilla. Our goal is to
create a general-purpose, web standards-based platform for parsing and
rendering PDFs.

## Contributing

PDF.js is an open source project and always looking for more contributors. To
get involved, visit:

+ [Issue Reporting Guide](https://github.com/mozilla/pdf.js/blob/master/.github/CONTRIBUTING.md)
+ [Code Contribution Guide](https://github.com/mozilla/pdf.js/wiki/Contributing)
+ [Frequently Asked Questions](https://github.com/mozilla/pdf.js/wiki/Frequently-Asked-Questions)
+ [Good Beginner Bugs](https://github.com/mozilla/pdf.js/issues?direction=desc&amp;labels=good-beginner-bug&amp;page=1&amp;sort=created&amp;state=open)
+ [Projects](https://github.com/mozilla/pdf.js/projects)

Feel free to stop by our [Matrix room](https://chat.mozilla.org/#/room/#pdfjs:mozilla.org) for questions or guidance.

## Getting Started

### Online demo

Please note that the &quot;Modern browsers&quot; version assumes native support for the
latest JavaScript features; please also see [this wiki page](https://github.com/mozilla/pdf.js/wiki/Frequently-Asked-Questions#faq-support).

+ Modern browsers: https://mozilla.github.io/pdf.js/web/viewer.html

+ Older browsers: https://mozilla.github.io/pdf.js/legacy/web/viewer.html

### Browser Extensions

#### Firefox

PDF.js is built into version 19+ of Firefox.

#### Chrome

+ The official extension for Chrome can be installed from the [Chrome Web Store](https://chrome.google.com/webstore/detail/pdf-viewer/oemmndcbldboiebfnladdacbdfmadadm).
*This extension is maintained by [@Rob--W](https://github.com/Rob--W).*
+ Build Your Own - Get the code as explained below and issue `npx gulp chromium`. Then open
Chrome, go to `Tools &gt; Extension` and load the (unpackaged) extension from the
directory `build/chromium`.

## Getting the Code

To get a local copy of the current code, clone it using git:

    $ git clone https://github.com/mozilla/pdf.js.git
    $ cd pdf.js

Next, install Node.js via the [official package](https://nodejs.org) or via
[nvm](https://github.com/creationix/nvm). If everything worked out, install
all dependencies for PDF.js:

    $ npm install

Finally, you need to start a local web server as some browsers do not allow opening
PDF files using a `file://` URL. Run:

    $ npx gulp server

and then you can open:

+ http://localhost:8888/web/viewer.html

Please keep in mind that this assumes the latest version of Mozilla Firefox; refer to [Building PDF.js](https://github.com/mozilla/pdf.js/blob/master/README.md#building-pdfjs) for non-development usage of the PDF.js library.

It is also possible to view all test PDF files on the right side by opening:

+ http://localhost:8888/test/pdfs/?frame

## Building PDF.js

In order to bundle all `src/` files into two production scripts and build the generic
viewer, run:

    $ npx gulp generic

If you need to support older browsers, run:

    $ npx gulp generic-legacy

This will generate `pdf.js` and `pdf.worker.js` in the `build/generic/build/` directory (respectively `build/generic-legacy/build/`).
Both scripts are needed but only `pdf.js` needs to be included since `pdf.worker.js` will
be loaded by `pdf.js`. The PDF.js files are large and should be minified for production.

## Using PDF.js in a web application

To use PDF.js in a web application you can choose to use a pre-built version of the library
or to build it from source. We supply pre-built versions for usage with NPM under
the `pdfjs-dist` name. For more information and examples please refer to the
[wiki page](https://github.com/mozilla/pdf.js/wiki/Setup-pdf.js-in-a-website) on this subject.

## Including via a CDN

PDF.js is hosted on several free CDNs:
 - https://www.jsdelivr.com/package/npm/pdfjs-dist
 - https://cdnjs.com/libraries/pdf.js
 - https://unpkg.com/pdfjs-dist/

## Learning

You can play with the PDF.js API directly from your browser using the live demos below:

+ [Interactive examples](https://mozilla.github.io/pdf.js/examples/index.html#interactive-examples)

More examples can be found in the [examples folder](https://github.com/mozilla/pdf.js/tree/master/examples/). Some of them are using the pdfjs-dist package, which can be built and installed in this repo directory via `npx gulp dist-install` command.

For an introduction to the PDF.js code, check out the presentation by our
contributor Julian Viereck:

+ https://www.youtube.com/watch?v=Iv15UY-4Fg8

More learning resources can be found at:

+ https://github.com/mozilla/pdf.js/wiki/Additional-Learning-Resources

The API documentation can be found at:

+ https://mozilla.github.io/pdf.js/api/

## Questions

Check out our FAQs and get answers to common questions:

+ https://github.com/mozilla/pdf.js/wiki/Frequently-Asked-Questions

Talk to us on Matrix:

+ https://chat.mozilla.org/#/room/#pdfjs:mozilla.org

File an issue:

+ https://github.com/mozilla/pdf.js/issues/new/choose
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mrdoob/three.js]]></title>
            <link>https://github.com/mrdoob/three.js</link>
            <guid>https://github.com/mrdoob/three.js</guid>
            <pubDate>Fri, 25 Apr 2025 00:04:31 GMT</pubDate>
            <description><![CDATA[JavaScript 3D Library.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mrdoob/three.js">mrdoob/three.js</a></h1>
            <p>JavaScript 3D Library.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 105,872</p>
            <p>Forks: 35,715</p>
            <p>Stars today: 26 stars today</p>
            <h2>README</h2><pre># three.js

[![NPM Package][npm]][npm-url]
[![Build Size][build-size]][build-size-url]
[![NPM Downloads][npm-downloads]][npmtrends-url]
[![DeepScan][deepscan]][deepscan-url]
[![Discord][discord]][discord-url]

#### JavaScript 3D library

The aim of the project is to create an easy-to-use, lightweight, cross-browser, general-purpose 3D library. The current builds only include WebGL and WebGPU renderers but SVG and CSS3D renderers are also available as addons.

[Examples](https://threejs.org/examples/) &amp;mdash;
[Docs](https://threejs.org/docs/) &amp;mdash;
[Manual](https://threejs.org/manual/) &amp;mdash;
[Wiki](https://github.com/mrdoob/three.js/wiki) &amp;mdash;
[Migrating](https://github.com/mrdoob/three.js/wiki/Migration-Guide) &amp;mdash;
[Questions](https://stackoverflow.com/questions/tagged/three.js) &amp;mdash;
[Forum](https://discourse.threejs.org/) &amp;mdash;
[Discord](https://discord.gg/56GBJwAnUS)

### Usage

This code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a `WebGL` renderer for the scene and camera, and it adds that viewport to the `document.body` element. Finally, it animates the cube within the scene for the camera.

```javascript
import * as THREE from &#039;three&#039;;

const width = window.innerWidth, height = window.innerHeight;

// init

const camera = new THREE.PerspectiveCamera( 70, width / height, 0.01, 10 );
camera.position.z = 1;

const scene = new THREE.Scene();

const geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );
const material = new THREE.MeshNormalMaterial();

const mesh = new THREE.Mesh( geometry, material );
scene.add( mesh );

const renderer = new THREE.WebGLRenderer( { antialias: true } );
renderer.setSize( width, height );
renderer.setAnimationLoop( animate );
document.body.appendChild( renderer.domElement );

// animation

function animate( time ) {

	mesh.rotation.x = time / 2000;
	mesh.rotation.y = time / 1000;

	renderer.render( scene, camera );

}
```

If everything goes well, you should see [this](https://jsfiddle.net/v98k6oze/).

### Cloning this repository

Cloning the repo with all its history results in a ~2 GB download. If you don&#039;t need the whole history you can use the `depth` parameter to significantly reduce download size.

```sh
git clone --depth=1 https://github.com/mrdoob/three.js.git
```

### Change log

[Releases](https://github.com/mrdoob/three.js/releases)


[npm]: https://img.shields.io/npm/v/three
[npm-url]: https://www.npmjs.com/package/three
[build-size]: https://badgen.net/bundlephobia/minzip/three
[build-size-url]: https://bundlephobia.com/result?p=three
[npm-downloads]: https://img.shields.io/npm/dw/three
[npmtrends-url]: https://www.npmtrends.com/three
[deepscan]: https://deepscan.io/api/teams/16600/projects/19901/branches/525701/badge/grade.svg
[deepscan-url]: https://deepscan.io/dashboard#view=project&amp;tid=16600&amp;pid=19901&amp;bid=525701
[discord]: https://img.shields.io/discord/685241246557667386
[discord-url]: https://discord.gg/56GBJwAnUS

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[antimatter15/splat]]></title>
            <link>https://github.com/antimatter15/splat</link>
            <guid>https://github.com/antimatter15/splat</guid>
            <pubDate>Fri, 25 Apr 2025 00:04:30 GMT</pubDate>
            <description><![CDATA[WebGL 3D Gaussian Splat Viewer]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/antimatter15/splat">antimatter15/splat</a></h1>
            <p>WebGL 3D Gaussian Splat Viewer</p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,336</p>
            <p>Forks: 268</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre># splat

This is a WebGL implementation of a real-time renderer for [3D Gaussian Splatting for Real-Time Radiance Field Rendering](https://repo-sam.inria.fr/fungraph/3d-gaussian-splatting/), a recently developed technique for taking a set of pictures and generating a photorealistic navigable 3D scene out of it. As it is essentially an extension of rendering point clouds, rendering scenes generated with this technique can be done very efficiently on ordinary graphics hardware- unlike prior comparable techniques such as NeRFs.

You can [try it out here](https://antimatter15.com/splat/).



https://github.com/antimatter15/splat/assets/30054/878d5d34-e0a7-4336-85df-111ff22daf4b



## controls

movement (arrow keys)

- left/right arrow keys to strafe side to side
- up/down arrow keys to move forward/back
- `space` to jump

camera angle (wasd)

- `a`/`d` to turn camera left/right
- `w`/`s` to tilt camera up/down
- `q`/`e` to roll camera counterclockwise/clockwise
- `i`/`k` and `j`/`l` to orbit

trackpad
- scroll up/down to orbit down
- scroll left/right to orbit left/right
- pinch to move forward/back
- ctrl key + scroll up/down to move forward/back
- shift + scroll up/down to move up/down
- shift + scroll left/right to strafe side to side

mouse
- click and drag to orbit
- right click (or ctrl/cmd key) and drag up/down to move forward/back
- right click (or ctrl/cmd key) and drag left/right to strafe side to side

touch (mobile)
- one finger to orbit
- two finger pinch to move forward/back
- two finger rotate to rotate camera clockwise/counterclockwise
- two finger pan to move side-to-side and up-down

other
- press 0-9 to switch to one of the pre-loaded camera views
- press &#039;-&#039; or &#039;+&#039;key to cycle loaded cameras
- press `p` to resume default animation
- drag and drop .ply file to convert to .splat
- drag and drop cameras.json to load cameras

## other features

- press `v` to save the current view coordinates to the url
- open custom `.splat` files by adding a `url` param to a CORS-enabled URL
- drag and drop a `.ply` file which has been processed with the 3d gaussian splatting software onto the page and it will automatically convert the file to the `.splat` format

## examples

note that as long as your `.splat` file is hosted in a CORS-accessible way, you can open it with the `url` field. 

- https://antimatter15.com/splat/?url=plush.splat#[0.95,0.19,-0.23,0,-0.16,0.98,0.12,0,0.24,-0.08,0.97,0,-0.33,-1.52,1.53,1]
- https://antimatter15.com/splat/?url=truck.splat
- https://antimatter15.com/splat/?url=garden.splat
- https://antimatter15.com/splat/?url=treehill.splat
- https://antimatter15.com/splat/?url=stump.splat#[-0.86,-0.23,0.45,0,0.27,0.54,0.8,0,-0.43,0.81,-0.4,0,0.92,-2.02,4.1,1]
- https://antimatter15.com/splat/?url=bicycle.splat
- https://antimatter15.com/splat/?url=https://media.reshot.ai/models/nike_next/model.splat#[0.95,0.16,-0.26,0,-0.16,0.99,0.01,0,0.26,0.03,0.97,0,0.01,-1.96,2.82,1]

## notes

- written in javascript with webgl 1.0 with no external dependencies, you can just hit view source and read the unminified code. webgl 2.0 doesn&#039;t really add any new features that aren&#039;t possible with webgl 1.0 with extensions. webgpu is apparently nice but still not very well supported outside of chromium.
- we sorts splats by a combination of size and opacity and supports progressive loading so you can see and interact with the model without having all the splats loaded. 
- does not currently support view dependent shading effects with spherical harmonics, this is primarily done to reduce the file size of the splat format so it can be loaded easily into web browsers. For third-order spherical harmonics we need 48 coefficients which is nearly 200 bytes per splat!
- splat sorting is done asynchronously on the cpu in a webworker. it might be interesting to investigate performing the sort on the gpu with an implementation of bitonic or radix sorting, but it seems plausible to me that it&#039;d be better to let the gpu focus rather than splitting its time between rendering and sorting.
- earlier experiments used [stochastic transparency](https://research.nvidia.com/publication/2011-08_stochastic-transparency) which looked grainy, and [weighted blended order independent transparency](https://learnopengl.com/Guest-Articles/2020/OIT/Weighted-Blended) which didn&#039;t seem to work.


## words

gaussian splats are very efficient to render because they work in a way which is very similar to point clouds— in fact they use the same file format (`.ply`) and open them up with the same tools (though to see colors in meshlab, you should convert the spherical harmonic zeroth order terms into rgb colors first). you can think of them as essentially generalizing individual points into translucent 3D blobs (the eponymous splats). 

that said, even though the inference process is very similar to a traditional 3d rendering, the reference implementation doesn&#039;t leverage any of that because for training it needs the entire render pipeline to be differentiable (i.e. you need to be able to run the rendering process &quot;backwards&quot; to figure out how to wiggle the location, size and color of each blob to make a particular camera&#039;s view incrementally closer to that of a reference photograph). whether or not this gradient based optimization counts as neural is i guess a somewhat debated question online.

since this implementation is just a viewer we don&#039;t need to do any differentiable rendering. our general approach is to take each splat and feed it into a vertex shader. we take the xyz position of the splat and project it to the screen coordinates with a projection matrix, and we take the scale and quaternion rotation parameters of the splat and figure out the projected eigenvectors so we can draw a bounding quadrilateral. these quadrilaterals are then individually shaded with a fragment shader. 

the fragment shader is a program which essentially runs for each pixel on each fragment (i.e. quadrilateral that was generated by the vertex shader) and outputs a color. It takes its position, calculates the distance from the center of the splat and uses it to determine the opacity channel of the splat&#039;s color. right now this implementation only stores 3 (red, blue, green) channels of color for a splat, but the full implementation uses essentially 48 channels to encode arbitrary view-dependent lighting. 

the most annoying problem comes with how these fragments come together and create an actual image. it turns out that rendering translucent objects in general is a somewhat unsolved problem in computer graphics which ultimately stems from the fact that compositing translucent things is not commutative, i.e. a stack of translucent objects looks different based on the order in which they are drawn. 

one easy solution is called speculative transparency, where basically you pretend that you actually have no translucency at all- objects are just different levels of randomized swiss cheese. the graphics card keeps track of a z-buffer and discards all the pixels which are not the top-most, and we generate a random number at each pixel and then discard it if it 90% of the time if it is 90% transparent. this works but it gives everything a noisy, dithered look.

another easy approach is to use the painter&#039;s algorithm, which basically involves pre-sorting all your objects before rendering them. doing this on the CPU can be rather expensive, with the ~1M splats on the demo page, it takes about 150ms to sort through them all on my computer. 

the approach that the reference implementation, and most other implementations of gaussian splatting take is to do the sorting on the GPU. one common algorithm for doing sorts on the gpu is called the [bitonic sort](https://en.wikipedia.org/wiki/Bitonic_sorter) as it is very parallelizable. a normal cpu comparison sorting algorithm like quicksort/mergesort can run in O(n log n) time, the bitonic sort is a bit slower at O(n log^2 n), but the n factor can be done in parallel, so the overall latency is O(log^2 n) which is faster than than O(n log n). the reference implementation uses a radix sort based on [onesweep](https://arxiv.org/abs/2206.01784), which can happen in O(n) time because you can leverage the fact that you&#039;re sorting numbers to get more information at each cycle than a single comparison. 

chrome has recently shipped webgpu, which is a new very clean api that apparently makes it possible to write things like compute shaders similar to CUDA that work in the browser. however, webgpu is not yet supported by firefox and safari. this means that if we want to build something that is broadly usable, we have to stick with the older webgl (and maybe even webgl 1.0, since there are reports that webgl 2.0 is buggy or slow on safari with the new M1 chips). It&#039;s still probably possible to implement a bitonic sort on top of webgl, but it would take about 200 iterations to sort 1M numbers, so it might still be too slow. 

another approach to rendering translucent objects is called depth peeling, where you enable the z-buffer and only render the translucent objects that are on the top, and then feed that z-buffer back into the render process to &quot;peel&quot; off the top and render only the layer beneath, before stacking those translucent layers together to a final image. I didn&#039;t manage to get this to work, but it&#039;s likely that it would be slow anyway.

another interesting approach is something called [weighted blended order independent transparency](https://learnopengl.com/Guest-Articles/2020/OIT/Weighted-Blended) which adds an additional number saved to a different render buffer which is used as a weight for an approximation of translucency which is commutative. it didn&#039;t work in my experiments, which is somewhat expected in situations where you have certain splats with high opacity on top of each other. 

the final approach that i settled on is to run the sorting process on the CPU in a webworker, which happens a bit more slowly (at roughly 4fps whereas the main render is at 60fps), but that&#039;s fine because most of the time when you are moving around the z order doesn&#039;t actually change very fast (this results in momentary artifacts when jumping directly between different camera orientations on opposite sides). 


## acknowledgements

Thanks to Otavio Good for discussions on different approaches for [order independent transparency](https://en.wikipedia.org/wiki/Order-independent_transparency), Mikola Lysenko for [regl](http://regl.party/) and also for helpful advice about webgl and webgpu, Ethan Weber for discussions about how NeRFs work and letting me know that sorting is hard, Gray Crawford for identifying issues with color rendering and camera controls, Anna Brewer for help with implementing animations, and GPT-4 for writing all the WebGL boilerplate. 
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>