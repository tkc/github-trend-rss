<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Wed, 22 Oct 2025 00:04:54 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[louislam/uptime-kuma]]></title>
            <link>https://github.com/louislam/uptime-kuma</link>
            <guid>https://github.com/louislam/uptime-kuma</guid>
            <pubDate>Wed, 22 Oct 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[A fancy self-hosted monitoring tool]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/louislam/uptime-kuma">louislam/uptime-kuma</a></h1>
            <p>A fancy self-hosted monitoring tool</p>
            <p>Language: JavaScript</p>
            <p>Stars: 76,466</p>
            <p>Forks: 6,776</p>
            <p>Stars today: 128 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot; width=&quot;100%&quot;&gt;
    &lt;img src=&quot;./public/icon.svg&quot; width=&quot;128&quot; alt=&quot;&quot; /&gt;
&lt;/div&gt;

# Uptime Kuma

Uptime Kuma is an easy-to-use self-hosted monitoring tool.

&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/louislam/uptime-kuma?style=flat&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/louislam/uptime-kuma&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/v/louislam/uptime-kuma/latest?label=docker%20image%20ver.&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/louislam/uptime-kuma&quot; /&gt;&lt;/a&gt;  &lt;a target=&quot;_blank&quot; href=&quot;https://opencollective.com/uptime-kuma&quot;&gt;&lt;img src=&quot;https://opencollective.com/uptime-kuma/total/badge.svg?label=Open%20Collective%20Backers&amp;color=brightgreen&quot; /&gt;&lt;/a&gt;
[![GitHub Sponsors](https://img.shields.io/github/sponsors/louislam?label=GitHub%20Sponsors)](https://github.com/sponsors/louislam) &lt;a href=&quot;https://weblate.kuma.pet/projects/uptime-kuma/uptime-kuma/&quot;&gt;
&lt;img src=&quot;https://weblate.kuma.pet/widgets/uptime-kuma/-/svg-badge.svg&quot; alt=&quot;Translation status&quot; /&gt;
&lt;/a&gt;

&lt;img src=&quot;https://user-images.githubusercontent.com/1336778/212262296-e6205815-ad62-488c-83ec-a5b0d0689f7c.jpg&quot; width=&quot;700&quot; alt=&quot;&quot; /&gt;

## ü•î Live Demo

Try it!

Demo Server (Location: Frankfurt - Germany): &lt;https://demo.kuma.pet/start-demo&gt;

It is a temporary live demo, all data will be deleted after 10 minutes. Sponsored by [Uptime Kuma Sponsors](https://github.com/louislam/uptime-kuma#%EF%B8%8F-sponsors).

## ‚≠ê Features

- Monitoring uptime for HTTP(s) / TCP / HTTP(s) Keyword / HTTP(s) Json Query / Ping / DNS Record / Push / Steam Game Server / Docker Containers
- Fancy, Reactive, Fast UI/UX
- Notifications via Telegram, Discord, Gotify, Slack, Pushover, Email (SMTP), and [90+ notification services, click here for the full list](https://github.com/louislam/uptime-kuma/tree/master/src/components/notifications)
- 20-second intervals
- [Multi Languages](https://github.com/louislam/uptime-kuma/tree/master/src/lang)
- Multiple status pages
- Map status pages to specific domains
- Ping chart
- Certificate info
- Proxy support
- 2FA support

## üîß How to Install

### üê≥ Docker Compose

```bash
mkdir uptime-kuma
cd uptime-kuma
curl -o compose.yaml https://raw.githubusercontent.com/louislam/uptime-kuma/master/compose.yaml
docker compose up -d
```

Uptime Kuma is now running on &lt;http://0.0.0.0:3001&gt;.

&gt; [!WARNING]
&gt; File Systems like **NFS** (Network File System) are **NOT** supported. Please map to a local directory or volume.

### üê≥ Docker Command

```bash
docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:2
```

Uptime Kuma is now running on &lt;http://0.0.0.0:3001&gt;.

&gt; [!NOTE]
&gt; If you want to limit exposure to localhost (without exposing port for other users or to use a [reverse proxy](https://github.com/louislam/uptime-kuma/wiki/Reverse-Proxy)), you can expose the port like this:
&gt;
&gt; ```bash
&gt; docker run -d --restart=always -p 127.0.0.1:3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:2
&gt; ```

### üí™üèª Non-Docker

Requirements:

- Platform
  - ‚úÖ Major Linux distros such as Debian, Ubuntu, CentOS, Fedora and ArchLinux etc.
  - ‚úÖ Windows 10 (x64), Windows Server 2012 R2 (x64) or higher
  - ‚ùå FreeBSD / OpenBSD / NetBSD
  - ‚ùå Replit / Heroku
- [Node.js](https://nodejs.org/en/download/) &gt;= 20.4
- [Git](https://git-scm.com/downloads)
- [pm2](https://pm2.keymetrics.io/) - For running Uptime Kuma in the background

```bash
git clone https://github.com/louislam/uptime-kuma.git
cd uptime-kuma
npm run setup

# Option 1. Try it
node server/server.js

# (Recommended) Option 2. Run in the background using PM2
# Install PM2 if you don&#039;t have it:
npm install pm2 -g &amp;&amp; pm2 install pm2-logrotate

# Start Server
pm2 start server/server.js --name uptime-kuma
```

Uptime Kuma is now running on &lt;http://localhost:3001&gt;

More useful PM2 Commands

```bash
# If you want to see the current console output
pm2 monit

# If you want to add it to startup
pm2 startup &amp;&amp; pm2 save
```

### Advanced Installation

If you need more options or need to browse via a reverse proxy, please read:

&lt;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install&gt;

## üÜô How to Update

Please read:

&lt;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update&gt;

## üÜï What&#039;s Next?

I will assign requests/issues to the next milestone.

&lt;https://github.com/louislam/uptime-kuma/milestones&gt;

## ‚ù§Ô∏è Sponsors

Thank you so much! (GitHub Sponsors will be updated manually. OpenCollective sponsors will be updated automatically, the list will be cached by GitHub though. It may need some time to be updated)

&lt;img src=&quot;https://uptime.kuma.pet/sponsors?v=6&quot; alt /&gt;

## üñº More Screenshots

Light Mode:

&lt;img src=&quot;https://uptime.kuma.pet/img/light.jpg&quot; width=&quot;512&quot; alt=&quot;&quot; /&gt;

Status Page:

&lt;img src=&quot;https://user-images.githubusercontent.com/1336778/134628766-a3fe0981-0926-4285-ab46-891a21c3e4cb.png&quot; width=&quot;512&quot; alt=&quot;&quot; /&gt;

Settings Page:

&lt;img src=&quot;https://louislam.net/uptimekuma/2.jpg&quot; width=&quot;400&quot; alt=&quot;&quot; /&gt;

Telegram Notification Sample:

&lt;img src=&quot;https://louislam.net/uptimekuma/3.jpg&quot; width=&quot;400&quot; alt=&quot;&quot; /&gt;

## Motivation

- I was looking for a self-hosted monitoring tool like &quot;Uptime Robot&quot;, but it is hard to find a suitable one. One of the closest ones is statping. Unfortunately, it is not stable and no longer maintained.
- Wanted to build a fancy UI.
- Learn Vue 3 and vite.js.
- Show the power of Bootstrap 5.
- Try to use WebSocket with SPA instead of a REST API.
- Deploy my first Docker image to Docker Hub.

If you love this project, please consider giving it a ‚≠ê.

## üó£Ô∏è Discussion / Ask for Help

‚ö†Ô∏è For any general or technical questions, please don&#039;t send me an email, as I am unable to provide support in that manner. I will not respond if you ask questions there.

I recommend using Google, GitHub Issues, or Uptime Kuma&#039;s subreddit for finding answers to your question. If you cannot find the information you need, feel free to ask:

- [GitHub Issues](https://github.com/louislam/uptime-kuma/issues)
- [Subreddit (r/UptimeKuma)](https://www.reddit.com/r/UptimeKuma/)

My Reddit account: [u/louislamlam](https://reddit.com/u/louislamlam)
You can mention me if you ask a question on the subreddit.

## Contributions

### Create Pull Requests

We DO NOT accept all types of pull requests and do not want to waste your time. Please be sure that you have read and follow pull request rules:
[CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma](https://github.com/louislam/uptime-kuma/blob/master/CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma)

### Test Pull Requests

There are a lot of pull requests right now, but I don&#039;t have time to test them all.

If you want to help, you can check this:
&lt;https://github.com/louislam/uptime-kuma/wiki/Test-Pull-Requests&gt;

### Test Beta Version

Check out the latest beta release here: &lt;https://github.com/louislam/uptime-kuma/releases&gt;

### Bug Reports / Feature Requests

If you want to report a bug or request a new feature, feel free to open a [new issue](https://github.com/louislam/uptime-kuma/issues).

### Translations

If you want to translate Uptime Kuma into your language, please visit [Weblate Readme](https://github.com/louislam/uptime-kuma/blob/master/src/lang/README.md).

### Spelling &amp; Grammar

Feel free to correct the grammar in the documentation or code.
My mother language is not English and my grammar is not that great.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[is-a-dev/register]]></title>
            <link>https://github.com/is-a-dev/register</link>
            <guid>https://github.com/is-a-dev/register</guid>
            <pubDate>Wed, 22 Oct 2025 00:04:53 GMT</pubDate>
            <description><![CDATA[Grab your own sweet-looking '.is-a.dev' subdomain.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/is-a-dev/register">is-a-dev/register</a></h1>
            <p>Grab your own sweet-looking '.is-a.dev' subdomain.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,751</p>
            <p>Forks: 15,676</p>
            <p>Stars today: 53 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
   &lt;img alt=&quot;is-a.dev Banner&quot; src=&quot;https://raw.githubusercontent.com/is-a-dev/register/main/media/banner.png&quot;&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
   &lt;img alt=&quot;Domains&quot; src=&quot;https://img.shields.io/github/directory-file-count/is-a-dev/register/domains?color=5c46eb&amp;label=domains&amp;style=for-the-badge&quot;&gt;
   &lt;img alt=&quot;Open Pull Requests&quot; src=&quot;https://img.shields.io/github/issues-raw/is-a-dev/register?color=5c46eb&amp;label=issues&amp;style=for-the-badge&quot;&gt;
   &lt;img alt=&quot;Open Issues&quot; src=&quot;https://img.shields.io/github/issues-pr-raw/is-a-dev/register?color=5c46eb&amp;label=pull%20requests&amp;style=for-the-badge&quot;&gt;
   &lt;br&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;is-a.dev&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;&lt;strong&gt;is-a.dev&lt;/strong&gt; is a service that allows developers to get a sweet-looking &lt;code&gt;.is-a.dev&lt;/code&gt; subdomain for their personal websites.&lt;/p&gt;

## Announcements &amp; Status Updates
Please join our [Discord server](https://discord.gg/is-a-dev-830872854677422150) for announcements, updates &amp; upgrades, and downtime notifications regarding the service.
Not all of these will be posted on GitHub[^1], however they will always be posted in our Discord server.

[^1]: We only post announcements on GitHub in the case of a serious incident, which you&#039;ll see at the top of this README.

&lt;a href=&quot;https://discord.gg/is-a-dev-830872854677422150&quot;&gt;&lt;img alt=&quot;Discord Server&quot; src=&quot;https://invidget.api.hrsn.dev/is-a-dev-830872854677422150&quot;&gt;&lt;/a&gt;

# Register
&gt; If you want a visual guide, check out [this blog post](https://wdh.gg/tX3ghge).

- [Fork](https://github.com/is-a-dev/register/fork) this repository.
- [Read the documentation](https://docs.is-a.dev).
   - If you are applying for NS records please read [this](#ns-records).
- Your pull request will be reviewed and merged. *Keep an eye on it in case changes are needed!*
- After the pull request is merged, your DNS records should be published with-in a few minutes.
- Enjoy your new `.is-a.dev` subdomain! Please consider leaving us a star ‚≠êÔ∏è to help support us!

### NS Records
When applying for NS records, please be aware we already support a [wide range of DNS records](https://docs.is-a.dev/faq/#which-dns-record-types-are-supported), so you likely do not need them. 

In your PR, please explain why you need NS records, including examples, to help mitigate potential abuse. Refer to the [FAQ](https://docs.is-a.dev/faq/#who-can-use-ns-records) for guidelines on allowed usage.

***Pull requests adding NS records without sufficient reasoning will be closed.***

&gt; Also see: [Why are NS records restricted?](https://docs.is-a.dev/faq/#why-are-ns-records-restricted)

## Report Abuse
If you find any subdomains being used for abusive purposes, please report them by [creating an issue](https://github.com/is-a-dev/register/issues/new?assignees=&amp;labels=report-abuse&amp;projects=&amp;template=report-abuse.md&amp;title=Report+abuse) with the relevant evidence.

---

We are proud to announce that we are supported by Cloudflare&#039;s [Project Alexandria](https://www.cloudflare.com/lp/project-alexandria) sponsorship program. We would not be able to operate without their help! üíñ

&lt;a href=&quot;https://www.cloudflare.com&quot;&gt;
   &lt;img alt=&quot;Cloudflare Logo&quot; src=&quot;https://raw.githubusercontent.com/is-a-dev/register/main/media/cloudflare.png&quot; height=&quot;96&quot;&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[jaywcjlove/awesome-mac]]></title>
            <link>https://github.com/jaywcjlove/awesome-mac</link>
            <guid>https://github.com/jaywcjlove/awesome-mac</guid>
            <pubDate>Wed, 22 Oct 2025 00:04:52 GMT</pubDate>
            <description><![CDATA[Ô£ø Now we have become very big, Different from the original idea. Collect premium software in various categories.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/jaywcjlove/awesome-mac">jaywcjlove/awesome-mac</a></h1>
            <p>Ô£ø Now we have become very big, Different from the original idea. Collect premium software in various categories.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 90,578</p>
            <p>Forks: 6,867</p>
            <p>Stars today: 372 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot; markdown=&quot;1&quot;&gt;
  &lt;sup&gt;Special thanks to:&lt;/sup&gt;
  &lt;br&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://www.warp.dev/awesome-mac&quot;&gt;
    &lt;img alt=&quot;Warp sponsorship&quot; width=&quot;400&quot; src=&quot;https://jaywcjlove.github.io/sponsor/warp-banner.png&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://warp.dev/awesome-mac&quot;&gt;&lt;b&gt;Warp, the intelligent terminal for developers!&lt;/b&gt;&lt;/a&gt;&lt;br&gt;
  &lt;a href=&quot;https://warp.dev/awesome-mac&quot;&gt;Available for MacOS, Linux, &amp; Windows&lt;/a&gt;&lt;br&gt;&lt;br&gt;

  &lt;a href=&quot;https://zenquery.app/?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=awesome-mac&quot;&gt;
    &lt;img alt=&quot;Zenquery sponsorship&quot; width=&quot;400&quot; src=&quot;https://jaywcjlove.github.io/sponsor/zenquery.png&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://zenquery.app/?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=awesome-mac&quot;&gt;&lt;b&gt;ZenQuery&lt;/b&gt;&lt;/a&gt;&lt;br&gt;
  &lt;a href=&quot;https://zenquery.app/?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=awesome-mac&quot;&gt;Instant Q/A on your data files (CSV, JSON, Excel, Parquet)&lt;/a&gt;&lt;br&gt;&lt;br&gt;

  &lt;a href=&quot;https://tuple.app/awesome-mac&quot;&gt;
    &lt;img alt=&quot;Zenquery sponsorship&quot; width=&quot;400&quot; src=&quot;https://jaywcjlove.github.io/sponsor/tuple.app.png&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://tuple.app/awesome-mac&quot;&gt;Tuple, the premier screen sharing app for developers on macOS and Windows.&lt;/a&gt;

  &lt;br&gt;&lt;br&gt;
&lt;/div&gt;
&lt;hr&gt;

Awesome Mac
===
&lt;!--rehype:style=font-size: 38px; border-bottom: 0; display: flex; min-height: 260px; align-items: center; justify-content: center;--&gt;

[![Buy me a coffee](https://img.shields.io/badge/Buy%20me%20a%20coffee-048754?logo=buymeacoffee)](https://jaywcjlove.github.io/#/sponsor)
[![Awesome](https://jaywcjlove.github.io/sb/ico/awesome.svg)](https://github.com/sindresorhus/awesome)
[![jaywcjlove/sb](https://jaywcjlove.github.io/sb/lang/chinese.svg)](README-zh.md)
[![Gitter](https://jaywcjlove.github.io/sb/ico/gitter.svg)](https://gitter.im/awesome-mac/en?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=body_badge)
[![Track Awesome List](https://www.trackawesomelist.com/badge.svg)](https://www.trackawesomelist.com/jaywcjlove/awesome-mac/)
[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fjaywcjlove%2Fawesome-mac.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2Fjaywcjlove%2Fawesome-mac?ref=badge_shield)
[![Docker Image Version (latest by date)](https://img.shields.io/docker/v/wcjiang/awesome-mac?logo=docker)](https://hub.docker.com/r/wcjiang/awesome-mac)
&lt;!--rehype:style=text-align: center;--&gt;

This project is now very large, and is very different from the original idea.
Here, we collect awesome macOS software and arrange them into various categories.
Feel free to **star** and **fork**.

Any comments, suggestions? [Let us know!](https://github.com/jaywcjlove/awesome-mac/issues) We love PRs :) Please take a look at the [contributing](https://github.com/jaywcjlove/awesome-mac/blob/master/CONTRIBUTING.md) guidelines before opening one. Follow the [awesome](https://github.com/sindresorhus/awesome) list.

**Explanation**

[‰∏≠Êñá](README-zh.md) | [Awesome Command Line Apps](./command-line-apps.md)

![Open-Source Software][OSS Icon] means **open source**. click the icon to see the item&#039;s repository;\
![Freeware][Freeware Icon] means **free** to use, or **free** personal license;\
![App Store][app-store Icon] means **App store** hyperlink;\
![Awesome List][awesome-list Icon] means hyperlink to a corresponding **Awesome list** for the item;

‚ú¶ My macOS application:

&lt;p style=&quot;display: inline_block&quot;&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/jaywcjlove/vidwall-hub&quot; title=&quot;Vidwall Hub for macOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;Vidwall Hub&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/vidwall-hub.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/VidCrop/6752624705&quot; title=&quot;VidCrop for macOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;VidCrop&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/vidcrop.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/Vidwall/6747587746&quot; title=&quot;Vidwall for macOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;Vidwall&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/vidwall.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://wangchujiang.com/mousio-hint/&quot; title=&quot;Mousio Hint for macOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;Mousio Hint&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/mousio-hint.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6746747327&quot; title=&quot;Mousio for macOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;Mousio&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/mousio.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6745227444&quot; title=&quot;Musicer for macOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;Musicer&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/musicer.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6743841447&quot; title=&quot;Audioer for macOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;Audioer&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/audioer.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6744690194&quot; title=&quot;FileSentinel for macOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;FileSentinel&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/file-sentinel.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6743495172&quot; title=&quot;FocusCursor for macOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;FocusCursor&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/focus-cursor.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6742680573&quot; title=&quot;Videoer for macOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;Videoer&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/videoer.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6740425504&quot; title=&quot;KeyClicker for macOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;KeyClicker&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/key-clicker.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6739052447&quot; title=&quot;DayBar for macOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;DayBar&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/daybar.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6739444407&quot; title=&quot;Iconed for macOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;Iconed&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/iconed.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6737160756&quot; title=&quot;Mousio for macOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;Mousio&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/rightmenu-master.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6723903021&quot; title=&quot;Paste Quick for macOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;Quick RSS&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/paste-quick.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6670696072&quot; title=&quot;Quick RSS for macOS/iOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;Quick RSS&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/quick-rss.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6670167443&quot; title=&quot;Web Serve for macOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;Web Serve&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/web-serve.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6503953628&quot; title=&quot;Copybook Generator for macOS/iOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;Copybook Generator&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/copybook-generator.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6471227008&quot; title=&quot;DevTutor for macOS/iOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;DevTutor for SwiftUI&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/devtutor.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6479819388&quot; title=&quot;RegexMate for macOS/iOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;RegexMate&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/regex-mate.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6479194014&quot; title=&quot;Time Passage for macOS/iOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;Time Passage&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/time-passage.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6478772538&quot; title=&quot;IconizeFolder for macOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;Iconize Folder&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/iconize-folder.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6478511402&quot; title=&quot;Textsound Saver for macOS/iOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;Textsound Saver&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/textsound-saver.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6476924627&quot; title=&quot;Create Custom Symbols for macOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;Create Custom Symbols&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/create-custom-symbols.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6476452351&quot; title=&quot;DevHub for macOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;DevHub&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/devhub.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6476400184&quot; title=&quot;Resume Revise for macOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;Resume Revise&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/resume-revise.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6472593276&quot; title=&quot;Palette Genius for macOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;Palette Genius&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/palette-genius.png&quot;&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://apps.apple.com/app/6470879005&quot; title=&quot;Symbol Scribe for macOS&quot;&gt;&lt;img align=&quot;center&quot; alt=&quot;Symbol Scribe&quot; height=&quot;52&quot; width=&quot;52&quot; src=&quot;https://wangchujiang.com/appicon/symbol-scribe.png&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;!--idoc:ignore:start--&gt;

## Contents

- [Awesome Mac](#awesome-mac)
- [Contents](#contents)
- [Reading and Writing Tools](#reading-and-writing-tools)
    - [Text Editors](#text-editors)
    - [Office](#office)
    - [Markdown Tools](#markdown-tools)
    - [Note-taking](#note-taking)
    - [Journaling](#journaling)
    - [Writing](#writing)
    - [Ebooks](#ebooks)
    - [RSS](#rss)
    - [Others](#others)
- [Developer Tools](#developer-tools)
    - [IDEs](#ides)
    - [Developer Utilities](#developer-utilities)
    - [Regular Expression Editors](#regular-expression-editors)
    - [API Development and Analysis](#api-development-and-analysis)
    - [Network Analysis](#network-analysis)
    - [Frameworks For Hybrid Applications](#frameworks-for-hybrid-applications)
    - [Version Control](#version-control)
    - [Virtualization](#virtualization)
    - [Databases](#databases)
    - [Terminal Apps](#terminal-apps)
- [Design and Product](#design-and-product)
    - [Design Tools](#design-tools)
    - [Prototyping and Mind-Mapping Tools](#prototyping-and-mind-mapping-tools)
    - [Screencapturing Software](#screencapturing-software)
    - [Other Tools](#other-tools)
- [AI Client](#ai-client)
- [Communication](#communication)
    - [Collaboration and Team Tools](#collaboration-and-team-tools)
    - [Email Clients](#email-clients)
    - [File Sharing](#file-sharing)
- [Data Recovery Tools](#data-recovery-tools)
- [Audio and Video Tools](#audio-and-video-tools)
    - [Audio Record and Process](#audio-record-and-process)
- [Download Management Tools](#download-management-tools)
- [Cloud Storage](#cloud-storage)
- [Input Methods](#input-methods)
- [Browsers](#browsers)
- [Translation Tools](#translation-tools)
- [Education](#education)
- [Finance](#finance)
- [Encryption](#encryption)
- [Security Tools](#security-tools)
- [Proxy and VPN Tools](#proxy-and-vpn-tools)
- [Utilities](#utilities)
    - [Clipboard Tools](#clipboard-tools)
    - [Menu Bar Tools](#menu-bar-tools)
    - [File Organization Tools](#file-organization-tools)
    - [General Tools](#general-tools)
    - [To-Do Lists](#to-do-lists)
    - [Productivity](#productivity)
    - [Window Management](#window-management)
    - [Password Management](#password-management)
    - [Finder Tools](#finder-tools)
    - [Quality of Life Improvements](#quality-of-life-improvements)
    - [System Related Tools](#system-related-tools)
- [Gaming Software](#gaming-software)
- [Remote Login Software](#remote-login-software)
- [QuickLook Plugins](#quicklook-plugins)
- [Third Party App Markets](#third-party-app-markets)
    - [Package Managers](#package-managers)
- [Mac App Download Sites](#mac-app-download-sites)
  - [Genuine Sites](#genuine-sites)
  - [Pirated software download site blocklist](#pirated-software-download-site-blocklist)
- [Podcasts](#podcasts)
- [Contributors](#contributors)
- [License](#license)

&lt;!--start--&gt;
&lt;!--idoc:ignore:end--&gt;

## Reading and Writing Tools

*Applications to edit text, I suggest the open-source editors*

### Text Editors

* [Aurora Editor](https://auroraeditor.com/) - Lightweight Code Editor (IDE) for macOS. [![Open-Source Software][OSS Icon]](https://github.com/AuroraEditor/AuroraEditor)
* [Bootstrap Studio](https://bootstrapstudio.io/) - A powerful desktop app for creating responsive websites using the Bootstrap framework.
* [Brackets](http://brackets.io) - A modern, open source text editor that understands web design. [![Open-Source Software][OSS Icon]](https://github.com/brackets-cont/brackets/) ![Freeware][Freeware Icon]
* [CodeEdit](https://www.codeedit.app/) - A lightweight, natively-built editor. Open source. Free forever. [![Open-Source Software][OSS Icon]](https://github.com/CodeEditApp/CodeEdit) ![Freeware][Freeware Icon]
* [CotEditor](https://coteditor.com) - Lightweight plain-text editor for macOS. [![Open-Source Software][OSS Icon]](https://github.com/coteditor/CotEditor/) ![Freeware][Freeware Icon]
* [Emacs](https://www.emacswiki.org/emacs/EmacsForMacOS) - Popular Unix-based text editor for programmers and system administrators. [![Open-Source Software][OSS Icon]](https://git.savannah.gnu.org/cgit/) ![Freeware][Freeware Icon] [![Awesome List][awesome-list Icon]](https://github.com/emacs-tw/awesome-emacs#readme)
* [Haystack Editor](https://github.com/haystackeditor/haystack-editor) - Code editor with a canvas UI for better code understanding. [![Open-Source Software][OSS Icon]](https://github.com/haystackeditor/haystack-editor) ![Freeware][Freeware Icon]
* [Helix](https://helix-editor.com/) - A post-modern modal text editor. [![Open-Source Software][OSS Icon]](https://github.com/helix-editor/helix/) ![Freeware][Freeware Icon]
* [Lapce](https://lapce.dev/) - Lightning-fast and powerful code editor. [![Open-Source Software][OSS Icon]](https://github.com/lapce/lapce) ![Freeware][Freeware Icon]
* [LightTable](http://lighttable.com/) - The next generation code editor. [![Open-Source Software][OSS Icon]](https://github.com/LightTable/LightTable) ![Freeware][Freeware Icon]
* [MacVim](https://github.com/macvim-dev/macvim) - the text editor Vim - for macOS. [![Open-Source Software][OSS Icon]](https://github.com/macvim-dev/macvim) ![Freeware][Freeware Icon]
* [micro](https://micro-editor.github.io) - Modern and intuitive terminal-based text editor. [![Open-Source Software][OSS Icon]](https://github.com/ory/editor) ![Freeware][Freeware Icon]
* [Neovim](https://github.com/neovim/neovim) - Vim-fork focused on extensibility and usability. [![Open-Source Software][OSS Icon]](https://github.com/neovim/neovim) ![Freeware][Freeware Icon]
* [Nova](https://nova.app/) - The beautiful, fast, flexible, native Mac code editor from Panic.
* [Plain Text Editor](https://sindresorhus.com/plain-text-editor) - Simple distraction-free notepad. ![Freeware][Freeware Icon] [![App Store][app-store Icon]](https://apps.apple.com/app/id1572202501)
* [Sublime Text](http://www.sublimetext.com/3) - A popular, clean, and sleek editor with a plugin management system. For more plugins, check [Sublime Text Plugins](editor-plugin-zh.md#sublime-text-plugin). [![Awesome List][awesome-list Icon]](https://github.com/dreikanter/sublime-bookmarks#readme)
* [SubEthaEdit](https://subethaedit.net/) - Powerful editor for writing, coding, and collaboration anytime, anywhere! [![Open-Source Software][OSS Icon]](https://github.com/subethaedit/SubEthaEdit)
* [TextMate](https://macromates.com) - Editor that brings Apple&#039;s approach to operating systems into the world of text editors. [![Open-Source Software][OSS Icon]](https://github.com/textmate/textmate) ![Freeware][Freeware Icon]
* [Tot](https://tot.rocks/) - Tot is an elegant, simple way to collect &amp; edit text. It‚Äôs your tiny text companion! ![Freeware][Freeware Icon] [![App Store][app-store Icon]](https://apps.apple.com/us/app/tot/id1491071483)
* [Vim](http://www.vim.org/) - An old terminal-based editor. For common plugins, check [Vim Common Plugins](editor-plugin-zh.md#vim-plugin). [![Open-Source Software][OSS Icon]](https://github.com/vim/vim) ![Freeware][Freeware Icon] [![Awesome List][awesome-list Icon]](https://github.com/mhinz/vim-galore#readme)
* [Vimr](http://vimr.org/) - Refined Vim Experience for OS X. [![Open-Source Software][OSS Icon]](https://github.com/qvacua/vimr/) ![Freeware][Freeware Icon]
* [Zed](https://zed.dev/) - A high-performance, multiplayer code editor from the creators of Atom and Tree-sitter. [![Open-Source Software][OSS Icon]](https://github.com/zed-industries/zed) ![Freeware][Freeware Icon]

### Office

* [Keynote](https://apps.apple.com/app/keynote/id409183694?mt=12) - Build stunning presentations. ![Freeware][Freeware Icon] [![App Store][app-store Icon]](https://apps.apple.com/app/keynote/id409183694?mt=12)
* [LibreOffice](https://www.libreoffice.org) - Free, open-source office software used and tested daily by a large community. [![Open-Source Software][OSS Icon]](https://www.libreoffice.org/about-us/source-code/) ![Freeware][Freeware Icon]
* [Microsoft Office](https://products.office.com/en-us/mac/microsoft-office-for-mac) - Unmistakably Office, designed for Mac. [![App Store][app-store Icon]](https://www.apple.com/search/office?page=1&amp;sel=accessories&amp;f=software#!&amp;f=software&amp;fh=4649)
* [Numbers](https://apps.apple.com/app/numbers/id409203825?mt=12) - Create impressive spreadsheets. ![Freeware][Freeware Icon] [![App Store][app-store Icon]](https://apps.apple.com/app/numbers/id409203825?mt=12)
* [OnlyOffice](https://www.onlyoffice.com/) - An office suite that combines text, spreadsheet and presentation editors allowing to create, view and edit local documents. [![Open-Source Software][OSS Icon]](https://github.com/ONLYOFFICE/DesktopEditors) ![Freeware][Freeware Icon]
* [Pages](https://apps.apple.com/app/pages/id409201541?mt=12) - Documents that stand apart. ![Freeware][Freeware Icon] [![App Store][app-store Icon]](https://apps.apple.com/app/pages/id409201541?mt=12)
* [SoftMaker Office](https://www.softmaker.com/en/softmaker-office) - A complete office suite that aims for full compatibility with Microsoft Office documents.
* [WPS](https://www.wps.com/mac) - Is a cross-platform office software suite. ![Freeware][Freeware Icon]

### Markdown Tools [![Awesome List][awesome-list Icon]](https://github.com/BubuAnabelas/awesome-markdown#tools)

* [Archimedes](https://furnacecreek.org/archimedes/) - Native macOS Markdown editor geared toward mathematical writing with inline LaTeX support.
* [EME](https://github.com/egoist/eme) - Open-source Markdown editor with an interface like Chrome. ![Open-Source Software][OSS Icon]
* [iA Writer](https://ia.net/writer/) - Writing app with an emphasis on simplicity and design.
* [LightPaper](https://getlightpaper.com/) - Simple, beautiful, yet powerful text editor for your Mac.
* [Marked 2](http://marked2app.com/) - This is the Markdown preview with an elegant and powerful set of tools for all writers.
* [MarkText](https://github.com/marktext/marktext) - Next generation markdown editor, running on platforms of MacOS Windows and Linux. [![Open-Source Software][OSS Icon]](https://github.com/marktext/marktext) ![Freeware][Freeware Icon]
* [Marp](https://marp.app) - Markdown presentation writer with cross-platform support. [![Open-Source Software][OSS Icon]](https://github.com/marp-team/marp) ![Freeware][Freeware Icon]
* [Marxico](https://marxi.co/) - Delicate Markdown editor for Evernote. Reliable storage and sync.
* [MWeb](http://www.mweb.im/) - Pro Markdown writing, and static blog generator App.

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[aandrew-me/ytDownloader]]></title>
            <link>https://github.com/aandrew-me/ytDownloader</link>
            <guid>https://github.com/aandrew-me/ytDownloader</guid>
            <pubDate>Wed, 22 Oct 2025 00:04:51 GMT</pubDate>
            <description><![CDATA[Desktop App for downloading Videos and Audios from hundreds of sites]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/aandrew-me/ytDownloader">aandrew-me/ytDownloader</a></h1>
            <p>Desktop App for downloading Videos and Audios from hundreds of sites</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,411</p>
            <p>Forks: 426</p>
            <p>Stars today: 150 stars today</p>
            <h2>README</h2><pre>&lt;img src=&quot;https://github-production-user-asset-6210df.s3.amazonaws.com/66430340/238887646-33b4cba9-3c45-4042-83d1-b79e94a3a769.png&quot; style=&quot;width:80px;&quot;&gt;

# ytDownloader

[![Flathub](https://img.shields.io/flathub/downloads/io.github.aandrew_me.ytdn?label=Flathub%20downloads)](https://flathub.org/apps/details/me.aandrew.ytdownloader)
[![GitHub downloads](https://img.shields.io/github/downloads/aandrew-me/ytdownloader/total?label=Github%20downloads)](https://github.com/aandrew-me/ytDownloader/releases)
[![GitHub release (latest by date)](https://img.shields.io/github/v/release/aandrew-me/ytdownloader?label=latest%20release)](https://github.com/aandrew-me/ytDownloader/releases/latest)
[![Flathub](https://img.shields.io/flathub/v/io.github.aandrew_me.ytdn)](https://flathub.org/apps/io.github.aandrew_me.ytdn)
[![Snapcraft](https://badgen.net/snapcraft/v/ytdownloader)](https://snapcraft.io/ytdownloader)
![Chocolatey Version](https://img.shields.io/chocolatey/v/ytdownloader)
![WinGet Package Version](https://img.shields.io/winget/v/aandrew-me.ytDownloader)

A modern GUI video and audio downloader supporting [hundreds of sites](https://github.com/yt-dlp/yt-dlp/blob/master/supportedsites.md)


[![Get it from the Snap Store](https://snapcraft.io/static/images/badges/en/snap-store-black.svg)](https://snapcraft.io/ytdownloader)
[![Get AppImage](https://raw.githubusercontent.com/srevinsaju/get-appimage/master/static/badges/get-appimage-branding-blue.png)](https://github.com/aandrew-me/ytDownloader/releases/latest/download/YTDownloader_Linux.AppImage)
&lt;a href=&quot;https://flathub.org/apps/io.github.aandrew_me.ytdn&quot;&gt;&lt;img src=&quot;https://flathub.org/assets/badges/flathub-badge-en.svg&quot; style=&quot;width:180px;&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/aandrew-me/ytDownloader/releases/latest/download/YTDownloader_Win.exe
&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/66430340/187172806-a8edd12a-ef58-4a05-96a3-99d7490b42f6.png&quot; style=&quot;width:190px;&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/aandrew-me/ytDownloader/releases/latest/download/YTDownloader_Mac_arm64.dmg&quot;&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/aandrew-me/badges/download_mac_apple_silicon.png&quot; style=&quot;width:200px;&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/aandrew-me/ytDownloader/releases/latest/download/YTDownloader_Mac_x64.dmg&quot;&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/aandrew-me/badges/download_mac_intel.png&quot; style=&quot;width:200px;&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://community.chocolatey.org/packages/ytdownloader&quot;&gt;&lt;img style=&quot;width:200px;&quot; src=&quot;https://github-production-user-asset-6210df.s3.amazonaws.com/66430340/238886537-7b2769fe-bd62-4921-a0eb-edf2eb06216d.png&quot; alt=&quot;Chocolatey&quot;&gt;&lt;/a&gt;

## Features üöÄ


‚úÖ Supports hundreds of sites including Youtube, Facebook, Instagram, Tiktok, Twitter and so on.

‚úÖ Multiple themes

‚úÖ Video Compressor with Hardware Acceleration

‚úÖ Advanced options like Range Selection, Subtitles

‚úÖ Download playlists

‚úÖ Available on Linux, Windows &amp; macOS

‚úÖ Fast download speeds

‚úÖ And of-course no trackers or ads

## Screenshots

&lt;!-- ![dark](https://user-images.githubusercontent.com/66430340/196022794-885e5b90-40d2-4b58-a8fa-74f10c6e470e.png) --&gt;
&lt;!-- ![light](https://user-images.githubusercontent.com/66430340/196022796-1215038d-bafb-4450-82b1-7baddd60c0e8.png) --&gt;


&lt;!-- ![ytdownloader_dark](https://github.com/aandrew-me/ytDownloader/assets/66430340/62efbca0-28b8-4016-bcf2-1a14bcaa782c) --&gt;
&lt;!-- ![ytdownloader_light](https://github.com/aandrew-me/ytDownloader/assets/66430340/34f5270f-bdea-460e-8622-6459cd147b73) --&gt;
![ss_dark](https://github.com/user-attachments/assets/0e810d71-6e8e-428f-9cca-9af71b5d7c16)

![ss_prefs](https://github.com/user-attachments/assets/12097005-b41c-44a3-a579-61b8e990432f)

![ss_compressor](https://github.com/user-attachments/assets/b366aa8e-a004-4697-873f-965f51752f15)


&lt;!-- ![ytdownloader_dark](https://github.com/aandrew-me/ytDownloader/assets/66430340/2f6695e7-6ca0-4f7c-91a0-0ad735c1e3af) --&gt;
&lt;!-- ![ytdownloader_light](https://github.com/aandrew-me/ytDownloader/assets/66430340/3c974ab0-8257-4b8a-88ec-ee6bd119751e) --&gt;

# Installation

## Windows ü™ü

-   **Traditional way**

    Download and install the exe or msi file. Exe file lets you choose custom download location, msi file doesn&#039;t ask for location. Windows defender may show a popup saying **Windows Protected Your PC**. Just click on **More info** and click on **Run Anyway**

-   **Chocolatey**
    App can be installed from [Chocolatey](https://community.chocolatey.org/packages/ytdownloader) using the following command
    ```
    choco install ytdownloader
    ```
-   **Scoop**
    App can be installed with [Scoop](https://scoop.sh) using the following command
    ```
    scoop install https://raw.githubusercontent.com/aandrew-me/ytDownloader/main/ytdownloader.json
    ```
-   **Winget**

    App can be installed with [Winget](https://github.com/microsoft/winget-cli) using the following command
    ```
    winget install aandrew-me.ytDownloader
    ```
## Linux üêß

Linux has several options available - Flatpak, AppImage and Snap.
Flatpak is recommended. For arm processors, download from flathub.

-   ### AppImage

    **AppImage** format is supported on most Linux distros and has Auto-Update support.
    It just needs to be executed after downloading. See more about [AppImages here](https://appimage.org/).

    [AppImageLauncher](https://github.com/TheAssassin/AppImageLauncher) is recommended for integrating AppImages.

-   ### Flatpak
    ```
    flatpak install flathub io.github.aandrew_me.ytdn
    ```
-   ### Snapcraft
    ```
    sudo snap install ytdownloader
    ```

## macOS üçé

Since the app is not signed, when you will try to open the app, macOS will not allow you to open it. 

You need to open terminal and execute:
```
sudo xattr -r -d com.apple.quarantine /Applications/YTDownloader.app 
```

You will also need to install `yt-dlp` with [homebrew](https://brew.sh/)
```
brew install yt-dlp
```

## Internationalization (Localization) üåç

Translations into other languages would be highly appreciated. If you want to help translating the app to other languages, you can join from [here](https://crwd.in/ytdownloader). Open a new issue and that language will be added to Crowdin. Please don&#039;t make pull requests with json files, instead use Crowdin.

[![Crowdin](https://badges.crowdin.net/ytdownloader/localized.svg)](https://crowdin.com/project/ytdownloader)

### ‚úÖ Available languages

| Name                | Status |
| ------------------- | ------ |
| Arabic              | ‚úîÔ∏è     |
| English             | ‚úîÔ∏è     |
| Simplified Chinese  | ‚úîÔ∏è     |
| Finnish             | ‚úîÔ∏è     |
| French              | ‚úîÔ∏è     |
| German              | ‚úîÔ∏è     |
| Greek               | ‚úîÔ∏è     |
| Hungarian           | ‚úîÔ∏è     |
| Italian             | ‚úîÔ∏è     |
| Japanese            | ‚úîÔ∏è     |
| Persian             | ‚úîÔ∏è     |
| Polish              | ‚úîÔ∏è     |
| Portuguese (Brazil) | ‚úîÔ∏è     |
| Russian             | ‚úîÔ∏è     |
| Spanish             | ‚úîÔ∏è     |
| Turkish             | ‚úîÔ∏è     |
| Ukrainian           | ‚úîÔ∏è     |
| Vietnamese          | ‚úîÔ∏è     |

Thanks to [nxjosephofficial](https://github.com/nxjosephofficial), [LINUX-SAUNA](https://t.me/linuxsauna), [Proxycon](https://github.com/proxycon), [albanobattistella](https://github.com/albanobattistella), [TheBlueQuasar](https://github.com/TheBlueQuasar), [MrQuerter](https://github.com/MrQuerter), [KotoWhiskas](https://github.com/KotoWhiskas), [Andr√©](https://github.com/andre1828), [haggen88](https://github.com/haggen88), [XfedeX](https://github.com/XfedeX), [Jok3r](https://github.com/th3knv), [TitouanReal](https://github.com/TitouanReal), [soredake](https://github.com/soredake), [yoi](https://github.com/thiennguyenqn), [HowlingWerewolf](https://github.com/HowlingWerewolf), [Kum](https://github.com/kum4423), [Mohammed Bakry](https://crowdin.com/profile/m7md_b4kry), [Huang Bingfeng](https://github.com/jackiotyu) and others for helping.

## Used technologies

-   [yt-dlp](https://github.com/yt-dlp/yt-dlp)
-   [Electron](https://www.electronjs.org/)
-   [ffmpeg](https://ffmpeg.org/)
-   [nodeJS](https://nodejs.org/en/)
-   [flaticon](https://www.flaticon.com/)

## For building or running from source code

[Nodejs](https://nodejs.org/) (along with npm) needs to be installed.

Required commands to get started.

```
git clone https://github.com/aandrew-me/ytDownloader.git
cd ytDownloader
npm i
```

To run with [Electron](https://www.electronjs.org/) :

```
npm start
```

You need to download ffmpeg and put it in the root directory of the project. If you don&#039;t need to build for arm processor, you can download ffmpeg by executing any of the files - linux.sh / mac.sh / windows.sh depending on the platform. Otherwise you need to download ffmpeg from [here](https://github.com/yt-dlp/FFmpeg-Builds/releases) for windows/linux and from [here](http://www.osxexperts.net/) for mac (not tested)

To build for Linux (It will create packages as specified in package.json). The builds are stored in **release** folder.
```
npm run linux
```

To build for Windows

```
npm run windows
```

To build for macOS

```
npm run mac
```
If you only want to build for one format, you can do
```
npx electron-builder -l appimage
```
It will just create a linux appimage build.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[jellyfin/jellyfin-web]]></title>
            <link>https://github.com/jellyfin/jellyfin-web</link>
            <guid>https://github.com/jellyfin/jellyfin-web</guid>
            <pubDate>Wed, 22 Oct 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[The Free Software Media System - Official Web Client]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/jellyfin/jellyfin-web">jellyfin/jellyfin-web</a></h1>
            <p>The Free Software Media System - Official Web Client</p>
            <p>Language: JavaScript</p>
            <p>Stars: 3,077</p>
            <p>Forks: 1,649</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;Jellyfin Web&lt;/h1&gt;
&lt;h3 align=&quot;center&quot;&gt;Part of the &lt;a href=&quot;https://jellyfin.org&quot;&gt;Jellyfin Project&lt;/a&gt;&lt;/h3&gt;

---

&lt;p align=&quot;center&quot;&gt;
&lt;img alt=&quot;Logo Banner&quot; src=&quot;https://raw.githubusercontent.com/jellyfin/jellyfin-ux/master/branding/SVG/banner-logo-solid.svg?sanitize=true&quot;/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://github.com/jellyfin/jellyfin-web&quot;&gt;
&lt;img alt=&quot;GPL 2.0 License&quot; src=&quot;https://img.shields.io/github/license/jellyfin/jellyfin-web.svg&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/jellyfin/jellyfin-web/releases&quot;&gt;
&lt;img alt=&quot;Current Release&quot; src=&quot;https://img.shields.io/github/release/jellyfin/jellyfin-web.svg&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://translate.jellyfin.org/projects/jellyfin/jellyfin-web/?utm_source=widget&quot;&gt;
&lt;img src=&quot;https://translate.jellyfin.org/widgets/jellyfin/-/jellyfin-web/svg-badge.svg&quot; alt=&quot;Translation Status&quot;/&gt;
&lt;/a&gt;
&lt;br/&gt;
&lt;a href=&quot;https://opencollective.com/jellyfin&quot;&gt;
&lt;img alt=&quot;Donate&quot; src=&quot;https://img.shields.io/opencollective/all/jellyfin.svg?label=backers&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://features.jellyfin.org&quot;&gt;
&lt;img alt=&quot;Feature Requests&quot; src=&quot;https://img.shields.io/badge/fider-vote%20on%20features-success.svg&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://matrix.to/#/+jellyfin:matrix.org&quot;&gt;
&lt;img alt=&quot;Chat on Matrix&quot; src=&quot;https://img.shields.io/matrix/jellyfin:matrix.org.svg?logo=matrix&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://www.reddit.com/r/jellyfin&quot;&gt;
&lt;img alt=&quot;Join our Subreddit&quot; src=&quot;https://img.shields.io/badge/reddit-r%2Fjellyfin-%23FF5700.svg&quot;/&gt;
&lt;/a&gt;
&lt;/p&gt;

Jellyfin Web is the frontend used for most of the clients available for end users, such as desktop browsers, Android, and iOS. We welcome all contributions and pull requests! If you have a larger feature in mind please open an issue so we can discuss the implementation before you start. Translations can be improved very easily from our &lt;a href=&quot;https://translate.jellyfin.org/projects/jellyfin/jellyfin-web&quot;&gt;Weblate&lt;/a&gt; instance. Look through the following graphic to see if your native language could use some work!

&lt;a href=&quot;https://translate.jellyfin.org/engage/jellyfin/?utm_source=widget&quot;&gt;
&lt;img src=&quot;https://translate.jellyfin.org/widgets/jellyfin/-/jellyfin-web/multi-auto.svg&quot; alt=&quot;Detailed Translation Status&quot;/&gt;
&lt;/a&gt;

## Build Process

### Dependencies

- [Node.js](https://nodejs.org/en/download)
- npm (included in Node.js)

### Getting Started

1. Clone or download this repository.

   ```sh
   git clone https://github.com/jellyfin/jellyfin-web.git
   cd jellyfin-web
   ```

2. Install build dependencies in the project directory.

   ```sh
   npm install
   ```

3. Run the web client with webpack for local development.

   ```sh
   npm start
   ```

4. Build the client with sourcemaps available.

   ```sh
   npm run build:development
   ```

## Directory Structure

&gt; [!NOTE]
&gt; We are in the process of refactoring to a [new structure](https://forum.jellyfin.org/t-proposed-update-to-the-structure-of-jellyfin-web) based on [Bulletproof React](https://github.com/alan2207/bulletproof-react/blob/master/docs/project-structure.md) architecture guidelines.
&gt; Most new code should be organized under the appropriate app directory unless it is common/shared.

```
.
‚îî‚îÄ‚îÄ src
    ‚îú‚îÄ‚îÄ apps
    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ dashboard           # Admin dashboard app
    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ experimental        # New experimental app
    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ stable              # Classic (stable) app
    ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ wizard              # Startup wizard app
    ‚îú‚îÄ‚îÄ assets                  # Static assets
    ‚îú‚îÄ‚îÄ components              # Higher order visual components and React components
    ‚îú‚îÄ‚îÄ constants               # Common constant values
    ‚îú‚îÄ‚îÄ controllers             # Legacy page views and controllers üßπ ‚ùå
    ‚îú‚îÄ‚îÄ elements                # Basic webcomponents and React equivalents üßπ
    ‚îú‚îÄ‚îÄ hooks                   # Custom React hooks
    ‚îú‚îÄ‚îÄ lib                     # Reusable libraries
    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ globalize           # Custom localization library
    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ jellyfin-apiclient  # Supporting code for the deprecated apiclient package
    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ legacy              # Polyfills for legacy browsers
    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ navdrawer           # Navigation drawer library for classic layout
    ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ scroller            # Content scrolling library
    ‚îú‚îÄ‚îÄ plugins                 # Client plugins (features dynamically loaded at runtime)
    ‚îú‚îÄ‚îÄ scripts                 # Random assortment of visual components and utilities üêâ ‚ùå
    ‚îú‚îÄ‚îÄ strings                 # Translation files (only commit changes to en-us.json)
    ‚îú‚îÄ‚îÄ styles                  # Common app Sass stylesheets
    ‚îú‚îÄ‚îÄ themes                  # Sass and MUI themes
    ‚îú‚îÄ‚îÄ types                   # Common TypeScript interfaces/types
    ‚îî‚îÄ‚îÄ utils                   # Utility functions
```

- ‚ùå &amp;mdash; Deprecated, do **not** create new files here
- üßπ &amp;mdash; Needs cleanup
- üêâ &amp;mdash; Serious mess (Here be dragons)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[prettier/prettier]]></title>
            <link>https://github.com/prettier/prettier</link>
            <guid>https://github.com/prettier/prettier</guid>
            <pubDate>Wed, 22 Oct 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[Prettier is an opinionated code formatter.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/prettier/prettier">prettier/prettier</a></h1>
            <p>Prettier is an opinionated code formatter.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 51,093</p>
            <p>Forks: 4,588</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>[![Prettier Banner](https://unpkg.com/prettier-logo@1.0.3/images/prettier-banner-light.svg)](https://prettier.io)

&lt;h2 align=&quot;center&quot;&gt;Opinionated Code Formatter&lt;/h2&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;em&gt;
    JavaScript
    ¬∑ TypeScript
    ¬∑ Flow
    ¬∑ JSX
    ¬∑ JSON
  &lt;/em&gt;
  &lt;br /&gt;
  &lt;em&gt;
    CSS
    ¬∑ SCSS
    ¬∑ Less
  &lt;/em&gt;
  &lt;br /&gt;
  &lt;em&gt;
    HTML
    ¬∑ Vue
    ¬∑ Angular
  &lt;/em&gt;
  &lt;br /&gt;
  &lt;em&gt;
    GraphQL
    ¬∑ Markdown
    ¬∑ YAML
  &lt;/em&gt;
  &lt;br /&gt;
  &lt;em&gt;
    &lt;a href=&quot;https://prettier.io/docs/plugins&quot;&gt;
      Your favorite language?
    &lt;/a&gt;
  &lt;/em&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/prettier/prettier/actions?query=branch%3Amain&quot;&gt;
    &lt;img alt=&quot;CI Status&quot; src=&quot;https://img.shields.io/github/check-runs/prettier/prettier/main?style=flat-square&amp;label=CI&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://codecov.io/gh/prettier/prettier&quot;&gt;
    &lt;img alt=&quot;Coverage Status&quot; src=&quot;https://img.shields.io/codecov/c/github/prettier/prettier.svg?style=flat-square&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://x.com/acdlite/status/974390255393505280&quot;&gt;
    &lt;img alt=&quot;Blazing Fast&quot; src=&quot;https://img.shields.io/badge/speed-blazing%20%F0%9F%94%A5-brightgreen.svg?style=flat-square&quot;&gt;&lt;/a&gt;
  &lt;br/&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/prettier&quot;&gt;
    &lt;img alt=&quot;npm version&quot; src=&quot;https://img.shields.io/npm/v/prettier.svg?style=flat-square&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/prettier&quot;&gt;
    &lt;img alt=&quot;weekly downloads from npm&quot; src=&quot;https://img.shields.io/npm/dw/prettier.svg?style=flat-square&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/prettier/prettier#badge&quot;&gt;
    &lt;img alt=&quot;code style: prettier&quot; src=&quot;https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://x.com/intent/follow?screen_name=PrettierCode&quot;&gt;
    &lt;img alt=&quot;Follow Prettier on X&quot; src=&quot;https://img.shields.io/badge/%40PrettierCode-9f9f9f?style=flat-square&amp;logo=x&amp;labelColor=555&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

## Intro

Prettier is an opinionated code formatter. It enforces a consistent style by parsing your code and re-printing it with its own rules that take the maximum line length into account, wrapping code when necessary.

### Input

&lt;!-- prettier-ignore --&gt;
```js
foo(reallyLongArg(), omgSoManyParameters(), IShouldRefactorThis(), isThereSeriouslyAnotherOne());
```

### Output

```js
foo(
  reallyLongArg(),
  omgSoManyParameters(),
  IShouldRefactorThis(),
  isThereSeriouslyAnotherOne(),
);
```

Prettier can be run [in your editor](https://prettier.io/docs/editors) on-save, in a [pre-commit hook](https://prettier.io/docs/precommit), or in [CI environments](https://prettier.io/docs/cli#list-different) to ensure your codebase has a consistent style without devs ever having to post a nit-picky comment on a code review ever again!

---

**[Documentation](https://prettier.io/docs/)**

[Install](https://prettier.io/docs/install) ¬∑
[Options](https://prettier.io/docs/options) ¬∑
[CLI](https://prettier.io/docs/cli) ¬∑
[API](https://prettier.io/docs/api)

**[Playground](https://prettier.io/playground/)**

---

## Badge

Show the world you&#039;re using _Prettier_ ‚Üí [![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)

```md
[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)
```

## Contributing

See [CONTRIBUTING.md](CONTRIBUTING.md).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[usebruno/bruno]]></title>
            <link>https://github.com/usebruno/bruno</link>
            <guid>https://github.com/usebruno/bruno</guid>
            <pubDate>Wed, 22 Oct 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[Opensource IDE For Exploring and Testing API's (lightweight alternative to Postman/Insomnia)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/usebruno/bruno">usebruno/bruno</a></h1>
            <p>Opensource IDE For Exploring and Testing API's (lightweight alternative to Postman/Insomnia)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 37,780</p>
            <p>Forks: 1,916</p>
            <p>Stars today: 74 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[Gar-b-age/CookLikeHOC]]></title>
            <link>https://github.com/Gar-b-age/CookLikeHOC</link>
            <guid>https://github.com/Gar-b-age/CookLikeHOC</guid>
            <pubDate>Wed, 22 Oct 2025 00:04:47 GMT</pubDate>
            <description><![CDATA[ü•¢ÂÉèËÄÅ‰π°È∏°üêîÈÇ£Ê†∑ÂÅöÈ•≠„ÄÇ‰∏ªË¶ÅÈÉ®ÂàÜ‰∫é2024Âπ¥ÂÆåÂ∑•ÔºåÈùûËÄÅ‰π°È∏°ÂÆòÊñπ‰ªìÂ∫ì„ÄÇÊñáÂ≠óÊù•Ëá™„ÄäËÄÅ‰π°È∏°ËèúÂìÅÊ∫ØÊ∫êÊä•Âëä„ÄãÔºåÂπ∂ÂÅöÂΩíÁ∫≥„ÄÅÁºñËæë‰∏éÊï¥ÁêÜ„ÄÇCookLikeHOC.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Gar-b-age/CookLikeHOC">Gar-b-age/CookLikeHOC</a></h1>
            <p>ü•¢ÂÉèËÄÅ‰π°È∏°üêîÈÇ£Ê†∑ÂÅöÈ•≠„ÄÇ‰∏ªË¶ÅÈÉ®ÂàÜ‰∫é2024Âπ¥ÂÆåÂ∑•ÔºåÈùûËÄÅ‰π°È∏°ÂÆòÊñπ‰ªìÂ∫ì„ÄÇÊñáÂ≠óÊù•Ëá™„ÄäËÄÅ‰π°È∏°ËèúÂìÅÊ∫ØÊ∫êÊä•Âëä„ÄãÔºåÂπ∂ÂÅöÂΩíÁ∫≥„ÄÅÁºñËæë‰∏éÊï¥ÁêÜ„ÄÇCookLikeHOC.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 21,546</p>
            <p>Forks: 2,144</p>
            <p>Stars today: 79 stars today</p>
            <h2>README</h2><pre>![pic](/banner.png)

&lt;div align=&quot;center&quot;&gt;

[**Docker Support**](./docker_support/README.md) | [**Development**](./docs/development.md)

&lt;/div&gt;

# ÂÉèËÄÅ‰π°È∏°ÈÇ£Ê†∑ÂÅöÈ•≠

[**‰∏Ä‰∫õËØ¥Êòé**](https://github.com/Gar-b-age/CookLikeHOC/issues/26)

‰ªìÂ∫ì‰∏ª‰ΩìÈÉ®ÂàÜ‰∫é2024Âπ¥ÂÆåÂ∑•ÔºåÂíå2025Âπ¥9Êúà‰ªΩÁöÑËàÜËÆ∫‰∫ã‰ª∂Êó†ÂÖ≥„ÄÇÊà™Ê≠¢Êèê‰∫§Êó∂Ôºå‰ªìÂ∫ìÁöÑË¥°ÁåÆËÄÖ‰ª¨‰∏éËÄÅ‰π°È∏°ÁöÑÂîØ‰∏ÄÂÖ≥Á≥ªÂè™ÊúâÊ∂àË¥πËÄÖÂíåÂïÜÂÆ∂ÁöÑÂÖ≥Á≥ª„ÄÇÊú¨‰ªìÂ∫ì‰∏çÊòØËÄÅ‰π°È∏°ÁöÑÂÆòÊñπ‰ªìÂ∫ì„ÄÇÂ¶ÇÊûúÊúâ‰ªª‰ΩïÈóÆÈ¢òÊàñÊÑèËßÅÂª∫ËÆÆÔºåÊ¨¢ËøéÊåáÂá∫

## Êñ∞Êõ¥Êñ∞

- Ê¨¢ËøéÂ§ßÂÆ∂Êù•Ë¥°ÁåÆÂÆûÊãçÂõæ

- Áé∞Â∑≤‰∏äÁ∫øÁΩëÈ°µÁ´ØÔºå[ÁÇπÂáªËÆøÈóÆ](https://cooklikehoc.soilzhu.su)

- Run with Docker? Check it out [here](https://github.com/Gar-b-age/CookLikeHOC/tree/main/docker_support), supported by [@honestAnt](https://github.com/honestAnt) in [PR #141](https://github.com/Gar-b-age/CookLikeHOC/pull/141)

- AI ÁªòÂà∂ÁöÑÊâãÁªòÂõæÁâàÂèäAIÈÖçÂõæÊµÅÁ®ãÁâàÁΩëÈ°µÔºö [ÁÇπÂáªËÆøÈóÆ](https://ai.cooklikehoc.soilzhu.su), ÊâãÁªòÂõæÁî± [@liucongg](https://github.com/liucongg) Ë¥°ÁåÆÔºåËßÅ [PR #143](https://github.com/Gar-b-age/CookLikeHOC/pull/143)

---

[![link](/tg.png)](https://t.me/cooklikehoc)

„ÄäËÄÅ‰π°È∏°ËèúÂìÅÊ∫ØÊ∫êÊä•Âëä„Äã‰∏≠ÂÖ¨Â∏ÉÁöÑÊâÄÊúâËèúÂìÅÂ∑≤ÁªèÂÖ®ÈÉ®ÂΩïÂÖ•ÂÆåÔºåÊ¨¢ËøéÂ§ßÂÆ∂Êü•ÈòÖÂíåË°•ÂÖÖ„ÄÇ

ÊñáÂ≠óË∂ÖÂ§ßÊÆµcopyËá™[„ÄäËÄÅ‰π°È∏°ËèúÂìÅÊ∫ØÊ∫êÊä•Âëä„Äã](https://www.lxjchina.com.cn/display.asp?id=4226)ÔºåÊúâÁºñËæë‰∏éÊï¥ÁêÜ

ÊåáË∑ØÈöîÂ£Å [How To Cook](https://cook.aiursoft.cn/)

Ëá≥‰∫é‰∏∫‰ªÄ‰πà‰ªìÂ∫ìÂêçË¶ÅÂè´CookLikeHOCÔºåÂõ†‰∏∫Áõ¥Êé•ÂÜôLaoxiangjiÂ§ßÊ¶Ç‰∏çÊñπ‰æøÈòÖËØªÔºåËÄåHome Original ChickenÊòØchina dailyÊä•ÈÅì‰∏≠ÊâÄ‰ΩøÁî®ÁöÑËÄÅ‰π°È∏°ÁöÑËã±ÊñáÂêçÔºåÊïÖÁÆÄÂÜôÊàêHOC„ÄÇ


## Contributor

![cr](https://contrib.rocks/image?repo=Gar-b-age/CookLikeHOC)

## Logo
![pic](/logo.png) 

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=Gar-b-age/CookLikeHOC&amp;type=Date)](https://star-history.com/#Gar-b-age/CookLikeHOC&amp;Date)</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[ruvnet/claude-flow]]></title>
            <link>https://github.com/ruvnet/claude-flow</link>
            <guid>https://github.com/ruvnet/claude-flow</guid>
            <pubDate>Wed, 22 Oct 2025 00:04:46 GMT</pubDate>
            <description><![CDATA[üåä The leading agent orchestration platform for Claude. Deploy intelligent multi-agent swarms, coordinate autonomous workflows, and build conversational AI systems. Features enterprise-grade architecture, distributed swarm intelligence, RAG integration, and native Claude Code support via MCP protocol. Ranked #1 in agent-based frameworks.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ruvnet/claude-flow">ruvnet/claude-flow</a></h1>
            <p>üåä The leading agent orchestration platform for Claude. Deploy intelligent multi-agent swarms, coordinate autonomous workflows, and build conversational AI systems. Features enterprise-grade architecture, distributed swarm intelligence, RAG integration, and native Claude Code support via MCP protocol. Ranked #1 in agent-based frameworks.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 9,151</p>
            <p>Forks: 1,213</p>
            <p>Stars today: 39 stars today</p>
            <h2>README</h2><pre># üåä Claude-Flow v2.7.0: Enterprise AI Orchestration Platform

&lt;div align=&quot;center&quot;&gt;

[![üåü Star on GitHub](https://img.shields.io/github/stars/ruvnet/claude-flow?style=for-the-badge&amp;logo=github&amp;color=gold)](https://github.com/ruvnet/claude-flow)
[![üìà Downloads](https://img.shields.io/npm/dt/claude-flow?style=for-the-badge&amp;logo=npm&amp;color=blue&amp;label=Downloads)](https://www.npmjs.com/package/claude-flow)
[![üì¶ Latest Release](https://img.shields.io/npm/v/claude-flow/alpha?style=for-the-badge&amp;logo=npm&amp;color=green&amp;label=v2.7.0-alpha.10)](https://www.npmjs.com/package/claude-flow)
[![‚ö° Claude Code](https://img.shields.io/badge/Claude%20Code-SDK%20Integrated-green?style=for-the-badge&amp;logo=anthropic)](https://github.com/ruvnet/claude-flow)
[![üèõÔ∏è Agentics Foundation](https://img.shields.io/badge/Agentics-Foundation-crimson?style=for-the-badge&amp;logo=openai)](https://discord.com/invite/dfxmpwkG2D)
[![üõ°Ô∏è MIT License](https://img.shields.io/badge/License-MIT-yellow?style=for-the-badge&amp;logo=opensourceinitiative)](https://opensource.org/licenses/MIT)

&lt;/div&gt;

## üåü **Overview**

**Claude-Flow v2.7** is an enterprise-grade AI orchestration platform that combines **hive-mind swarm intelligence**, **persistent memory**, and **100+ advanced MCP tools** to revolutionize AI-powered development workflows.

### üéØ **Key Features**

- **üé® 25 Claude Skills**: Natural language-activated skills for development, GitHub, memory, and automation
- **üß† ReasoningBank Memory**: Persistent SQLite storage with semantic search (2-3ms latency)
- **üîç Semantic Search**: Hash-based embeddings - works without API keys
- **üêù Hive-Mind Intelligence**: Queen-led AI coordination with specialized worker agents
- **üîß 100 MCP Tools**: Comprehensive toolkit for swarm orchestration and automation
- **üîÑ Dynamic Agent Architecture (DAA)**: Self-organizing agents with fault tolerance
- **üíæ Persistent Memory**: `.swarm/memory.db` with 30+ specialized patterns
- **ü™ù Advanced Hooks System**: Automated workflows with pre/post operation hooks
- **üìä GitHub Integration**: 6 specialized modes for repository management
- **üåê Flow Nexus Cloud**: E2B sandboxes, AI swarms, challenges, and marketplace

&gt; üî• **Revolutionary AI Coordination**: Build faster, smarter, and more efficiently with AI-powered development orchestration


---

## ‚ö° **Quick Start**

### üìã **Prerequisites**

- **Node.js 18+** (LTS recommended)
- **npm 9+** or equivalent package manager
- **Windows users**: See [Windows Installation Guide](./docs/windows-installation.md) for special instructions

‚ö†Ô∏è **IMPORTANT**: Claude Code must be installed first:

```bash
# 1. Install Claude Code globally
npm install -g @anthropic-ai/claude-code

# 2. (Optional) Skip permissions check for faster setup
claude --dangerously-skip-permissions
```

### üöÄ **Install Latest Alpha**

```bash
# NPX (recommended - always latest)
npx claude-flow@alpha init --force
npx claude-flow@alpha --help

# Or install globally
npm install -g claude-flow@alpha
claude-flow --version
# v2.7.0-alpha.10
```

---

## üé® **Skills System**

Claude-Flow includes **25 specialized skills** that activate automatically via natural language - no commands to memorize:

```bash
# Just describe what you want - skills activate automatically
&quot;Let&#039;s pair program on this feature&quot;        ‚Üí pair-programming skill
&quot;Review this PR for security issues&quot;       ‚Üí github-code-review skill
&quot;Use vector search to find similar code&quot;   ‚Üí agentdb-vector-search skill
&quot;Create a swarm to build this API&quot;         ‚Üí swarm-orchestration skill
```

**Skill Categories:**
- **Development &amp; Methodology** (3) - SPARC, pair programming, skill builder
- **Intelligence &amp; Memory** (6) - AgentDB integration with 150x-12,500x performance
- **Swarm Coordination** (3) - Multi-agent orchestration and hive-mind
- **GitHub Integration** (5) - PR review, workflows, releases, multi-repo
- **Automation &amp; Quality** (4) - Hooks, verification, performance analysis
- **Flow Nexus Platform** (3) - Cloud sandboxes and neural training

üìö **[Complete Skills Tutorial](./docs/skills-tutorial.md)** - Full guide with usage examples

---

## üÜï **What&#039;s New in v2.7.0-alpha.10**

### ‚úÖ **Semantic Search Fixed**
Critical bug fix for semantic search returning 0 results:
- ‚úÖ Fixed stale compiled code (dist-cjs/ now uses Node.js backend)
- ‚úÖ Fixed result mapping for `retrieveMemories()` flat structure
- ‚úÖ Fixed parameter mismatch (namespace vs domain)
- ‚úÖ 2-3ms query latency with hash embeddings
- ‚úÖ Works without API keys (deterministic 1024-dim embeddings)

### üß† **ReasoningBank Integration (agentic-flow@1.5.13)**
- **Node.js Backend**: Replaced WASM with SQLite + better-sqlite3
- **Persistent Storage**: All memories saved to `.swarm/memory.db`
- **Semantic Search**: MMR ranking with 4-factor scoring
- **Database Tables**: patterns, embeddings, trajectories, links
- **Performance**: 2ms queries, 400KB per pattern with embeddings

```bash
# Semantic search now fully functional
npx claude-flow@alpha memory store test &quot;API configuration&quot; --namespace semantic --reasoningbank
npx claude-flow@alpha memory query &quot;configuration&quot; --namespace semantic --reasoningbank
# ‚úÖ Found 3 results (semantic search) in 2ms
```

üìö **Release Notes**: [v2.7.0-alpha.10](./docs/RELEASE-NOTES-v2.7.0-alpha.10.md)

## üß† **Memory System Commands**

### **ReasoningBank (Persistent SQLite Memory)**

```bash
# Store memories with semantic search
npx claude-flow@alpha memory store api_key &quot;REST API configuration&quot; \
  --namespace backend --reasoningbank

# Query with semantic search (2-3ms latency)
npx claude-flow@alpha memory query &quot;API config&quot; \
  --namespace backend --reasoningbank
# ‚úÖ Found 3 results (semantic search)

# List all memories
npx claude-flow@alpha memory list --namespace backend --reasoningbank

# Check status and statistics
npx claude-flow@alpha memory status --reasoningbank
# ‚úÖ Total memories: 30
#    Embeddings: 30
#    Storage: .swarm/memory.db
```

### **Features**
- ‚úÖ **No API Keys Required**: Hash-based embeddings (1024 dimensions)
- ‚úÖ **Persistent Storage**: SQLite database survives restarts
- ‚úÖ **Semantic Search**: MMR ranking with similarity scoring
- ‚úÖ **Namespace Isolation**: Organize memories by domain
- ‚úÖ **Fast Queries**: 2-3ms average latency
- ‚úÖ **Process Cleanup**: Automatic database closing

### **Optional: Enhanced Embeddings**
```bash
# For better semantic accuracy (requires API key)
export OPENAI_API_KEY=$YOUR_API_KEY
# Uses text-embedding-3-small (1536 dimensions)
```

---

## üêù **Swarm Orchestration**

### **Quick Swarm Commands**

```bash
# Quick task execution (recommended)
npx claude-flow@alpha swarm &quot;build REST API with authentication&quot; --claude

# Multi-agent coordination
npx claude-flow@alpha swarm init --topology mesh --max-agents 5
npx claude-flow@alpha swarm spawn researcher &quot;analyze API patterns&quot;
npx claude-flow@alpha swarm spawn coder &quot;implement endpoints&quot;
npx claude-flow@alpha swarm status
```

### **Hive-Mind for Complex Projects**

```bash
# Initialize hive-mind system
npx claude-flow@alpha hive-mind wizard
npx claude-flow@alpha hive-mind spawn &quot;build enterprise system&quot; --claude

# Session management
npx claude-flow@alpha hive-mind status
npx claude-flow@alpha hive-mind resume session-xxxxx
```

**When to Use:**
| Feature | `swarm` | `hive-mind` |
|---------|---------|-------------|
| **Best For** | Quick tasks | Complex projects |
| **Setup** | Instant | Interactive wizard |
| **Memory** | Task-scoped | Project-wide SQLite |
| **Sessions** | Temporary | Persistent + resume |

---

## üîß **MCP Tools Integration**

### **Setup MCP Servers**

```bash
# Add Claude Flow MCP server (required)
claude mcp add claude-flow npx claude-flow@alpha mcp start

# Optional: Enhanced coordination
claude mcp add ruv-swarm npx ruv-swarm mcp start

# Optional: Cloud features (requires registration)
claude mcp add flow-nexus npx flow-nexus@latest mcp start
```

### **Available MCP Tools (100 Total)**

**Core Tools:**
- `swarm_init`, `agent_spawn`, `task_orchestrate`
- `memory_usage`, `memory_search`
- `neural_status`, `neural_train`, `neural_patterns`

**Memory Tools:**
- `mcp__claude-flow__memory_usage` - Store/retrieve persistent memory
- `mcp__claude-flow__memory_search` - Pattern-based search

**GitHub Tools:**
- `github_repo_analyze`, `github_pr_manage`, `github_issue_track`

**Performance Tools:**
- `benchmark_run`, `performance_report`, `bottleneck_analyze`

üìö **Full Reference**: [MCP Tools Documentation](./docs/MCP-TOOLS.md)

---

## ü™ù **Advanced Hooks System**

### **Automated Workflow Enhancement**

Claude-Flow automatically configures hooks for enhanced operations:

```bash
# Auto-configures hooks during init
npx claude-flow@alpha init --force
```

### **Available Hooks**

**Pre-Operation:**
- `pre-task`: Auto-assigns agents by complexity
- `pre-edit`: Validates files and prepares resources
- `pre-command`: Security validation

**Post-Operation:**
- `post-edit`: Auto-formats code
- `post-task`: Trains neural patterns
- `post-command`: Updates memory

**Session Management:**
- `session-start`: Restores previous context
- `session-end`: Generates summaries
- `session-restore`: Loads memory

---

## üéØ **Common Workflows**

### **Pattern 1: Single Feature Development**
```bash
# Initialize once per feature
npx claude-flow@alpha init --force
npx claude-flow@alpha hive-mind spawn &quot;Implement authentication&quot; --claude

# Continue same feature (reuse hive)
npx claude-flow@alpha memory query &quot;auth&quot; --recent
npx claude-flow@alpha swarm &quot;Add password reset&quot; --continue-session
```

### **Pattern 2: Multi-Feature Project**
```bash
# Project initialization
npx claude-flow@alpha init --force --project-name &quot;my-app&quot;

# Feature 1: Authentication
npx claude-flow@alpha hive-mind spawn &quot;auth-system&quot; --namespace auth --claude

# Feature 2: User management
npx claude-flow@alpha hive-mind spawn &quot;user-mgmt&quot; --namespace users --claude
```

### **Pattern 3: Research &amp; Analysis**
```bash
# Start research session
npx claude-flow@alpha hive-mind spawn &quot;Research microservices&quot; \
  --agents researcher,analyst --claude

# Check learned knowledge
npx claude-flow@alpha memory stats
npx claude-flow@alpha memory query &quot;microservices patterns&quot; --reasoningbank
```

---

## üìä **Performance &amp; Stats**

- **84.8% SWE-Bench solve rate** - Industry-leading problem-solving
- **32.3% token reduction** - Efficient context management
- **2.8-4.4x speed improvement** - Parallel coordination
- **2-3ms query latency** - ReasoningBank semantic search
- **64 specialized agents** - Complete development ecosystem
- **100 MCP tools** - Comprehensive automation toolkit

---

## üìö **Documentation**

### **Core Documentation**
- **[Skills Tutorial](./docs/skills-tutorial.md)** - Complete guide to 25 Claude Flow skills with natural language invocation
- **[Installation Guide](./docs/INSTALLATION.md)** - Setup instructions
- **[Memory System Guide](./docs/MEMORY-SYSTEM.md)** - ReasoningBank usage
- **[MCP Tools Reference](./docs/MCP-TOOLS.md)** - Complete tool catalog
- **[Agent System](./docs/AGENT-SYSTEM.md)** - All 64 agents

### **Release Notes**
- **[v2.7.0-alpha.10](./docs/RELEASE-NOTES-v2.7.0-alpha.10.md)** - Semantic search fix
- **[v2.7.0-alpha.9](./docs/RELEASE-NOTES-v2.7.0-alpha.9.md)** - Process cleanup
- **[Changelog](./CHANGELOG.md)** - Full version history

### **Advanced Topics**
- **[Neural Module](./docs/NEURAL-MODULE.md)** - SAFLA self-learning
- **[Goal Module](./docs/GOAL-MODULE.md)** - GOAP intelligent planning
- **[Hive-Mind Intelligence](./docs/HIVE-MIND.md)** - Queen-led coordination
- **[GitHub Integration](./docs/GITHUB-INTEGRATION.md)** - Repository automation

### **Configuration**
- **[CLAUDE.md Templates](./docs/CLAUDE-MD-TEMPLATES.md)** - Project configs
- **[SPARC Methodology](./docs/SPARC.md)** - TDD patterns
- **[Windows Installation](./docs/windows-installation.md)** - Windows setup

---

## ü§ù **Community &amp; Support**

- **GitHub Issues**: [Report bugs or request features](https://github.com/ruvnet/claude-flow/issues)
- **Discord**: [Join the Agentics Foundation community](https://discord.com/invite/dfxmpwkG2D)
- **Documentation**: [Complete guides and tutorials](https://github.com/ruvnet/claude-flow/wiki)
- **Examples**: [Real-world usage patterns](https://github.com/ruvnet/claude-flow/tree/main/examples)

---

## üöÄ **Roadmap &amp; Targets**

### **Immediate (Q4 2025)**
- ‚úÖ Semantic search fix (v2.7.0-alpha.10)
- ‚úÖ ReasoningBank Node.js backend
- üîÑ Enhanced embedding models
- üîÑ Multi-user collaboration features

### **Q1 2026**
- Advanced neural pattern recognition
- Cloud swarm coordination
- Real-time agent communication
- Enterprise SSO integration

### **Growth Targets**
- 5K+ GitHub stars, 50K npm downloads/month
- $25K MRR, 15 enterprise customers
- 90%+ error prevention
- 30+ minutes saved per developer per week

---

## Star History

&lt;a href=&quot;https://www.star-history.com/#ruvnet/claude-flow&amp;Date&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=ruvnet/claude-flow&amp;type=Date&amp;theme=dark&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=ruvnet/claude-flow&amp;type=Date&quot; /&gt;
   &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=ruvnet/claude-flow&amp;type=Date&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;

---

## üìÑ **License**

MIT License - see [LICENSE](./LICENSE) for details

---

**Built with ‚ù§Ô∏è by [rUv](https://github.com/ruvnet) | Powered by Revolutionary AI**

*v2.7.0-alpha.10 - Semantic Search Fixed + ReasoningBank Node.js Backend*

&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[drawdb-io/drawdb]]></title>
            <link>https://github.com/drawdb-io/drawdb</link>
            <guid>https://github.com/drawdb-io/drawdb</guid>
            <pubDate>Wed, 22 Oct 2025 00:04:45 GMT</pubDate>
            <description><![CDATA[Free, simple, and intuitive online database diagram editor and SQL generator.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/drawdb-io/drawdb">drawdb-io/drawdb</a></h1>
            <p>Free, simple, and intuitive online database diagram editor and SQL generator.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 33,365</p>
            <p>Forks: 2,527</p>
            <p>Stars today: 107 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;sup&gt;Special thanks to:&lt;/sup&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://www.warp.dev/drawdb/&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Warp sponsorship&quot; width=&quot;280&quot; src=&quot;https://github.com/user-attachments/assets/c7f141e7-9751-407d-bb0e-d6f2c487b34f&quot;&gt;
    &lt;br&gt;
    &lt;b&gt;Next-gen AI-powered intelligent terminal for all platforms&lt;/b&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;br/&gt;
&lt;br/&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img width=&quot;64&quot; alt=&quot;drawdb logo&quot; src=&quot;./src/assets/icon-dark.png&quot;&gt;
    &lt;h1&gt;drawDB&lt;/h1&gt;
&lt;/div&gt;

&lt;h3 align=&quot;center&quot;&gt;Free, simple, and intuitive database schema editor and SQL generator.&lt;/h3&gt;

&lt;div align=&quot;center&quot; style=&quot;margin-bottom:12px;&quot;&gt;
    &lt;a href=&quot;https://drawdb.app/&quot; style=&quot;display: flex; align-items: center;&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Start%20building-grey&quot; alt=&quot;drawDB&quot;/&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://discord.gg/BrjZgNrmR6&quot; style=&quot;display: flex; align-items: center;&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/discord/1196658537208758412.svg?label=Join%20the%20Discord&amp;logo=discord&quot; alt=&quot;Discord&quot;/&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://x.com/drawDB_&quot; style=&quot;display: flex; align-items: center;&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Follow%20us%20on%20X-blue?logo=X&quot; alt=&quot;Follow us on X&quot;/&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://getmanta.ai/drawdb&quot;&gt;
        &lt;img src=&quot;https://getmanta.ai/api/badges?text=Manta%20Graph&amp;link=drawdb&quot; alt=&quot;DrawDB graph on Manta&quot;&gt;
    &lt;/a&gt; 
&lt;/div&gt;

&lt;h3 align=&quot;center&quot;&gt;&lt;img width=&quot;700&quot; style=&quot;border-radius:5px;&quot; alt=&quot;demo&quot; src=&quot;drawdb.png&quot;&gt;&lt;/h3&gt;

DrawDB is a robust and user-friendly database entity relationship (DBER) editor right in your browser. Build diagrams with a few clicks, export sql scripts, customize your editor, and more without creating an account. See the full set of features [here](https://drawdb.app/).

## Getting Started

### Local Development

```bash
git clone https://github.com/drawdb-io/drawdb
cd drawdb
npm install
npm run dev
```

### Build

```bash
git clone https://github.com/drawdb-io/drawdb
cd drawdb
npm install
npm run build
```

### Docker Build

```bash
docker build -t drawdb .
docker run -p 3000:80 drawdb
```

If you want to enable sharing, set up the [server](https://github.com/drawdb-io/drawdb-server) and environment variables according to `.env.sample`. This is optional unless you need to share files..
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[lioensky/VCPToolBox]]></title>
            <link>https://github.com/lioensky/VCPToolBox</link>
            <guid>https://github.com/lioensky/VCPToolBox</guid>
            <pubDate>Wed, 22 Oct 2025 00:04:44 GMT</pubDate>
            <description><![CDATA[‰∏Ä‰∏™ÂÖ®Êñ∞ÁöÑÔºåÂº∫Â§ßÁöÑAI-API-Â∑•ÂÖ∑‰∫§‰∫íËåÉÂºèAGIÁ§æÁæ§Á≥ªÁªü„ÄÇÁã¨Á´ãÂ§öAgentÂ∞ÅË£ÖÔºåÈùûÁ∫øÊÄßË∂ÖÂºÇÊ≠•Â∑•‰ΩúÊµÅÔºå‰∫§ÂèâËÆ∞ÂøÜÁΩëÁªúÔºåÂÖ≠Â§ßÊèí‰ª∂ÂçèËÆÆÔºåÂÆåÊï¥WebsocketÂíåWebDavÂäüËÉΩÔºåÊîØÊåÅÂàÜÂ∏ÉÂºèÈÉ®ÁΩ≤ÂíåÁÆóÂäõÂùáË°°ÔºÅ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/lioensky/VCPToolBox">lioensky/VCPToolBox</a></h1>
            <p>‰∏Ä‰∏™ÂÖ®Êñ∞ÁöÑÔºåÂº∫Â§ßÁöÑAI-API-Â∑•ÂÖ∑‰∫§‰∫íËåÉÂºèAGIÁ§æÁæ§Á≥ªÁªü„ÄÇÁã¨Á´ãÂ§öAgentÂ∞ÅË£ÖÔºåÈùûÁ∫øÊÄßË∂ÖÂºÇÊ≠•Â∑•‰ΩúÊµÅÔºå‰∫§ÂèâËÆ∞ÂøÜÁΩëÁªúÔºåÂÖ≠Â§ßÊèí‰ª∂ÂçèËÆÆÔºåÂÆåÊï¥WebsocketÂíåWebDavÂäüËÉΩÔºåÊîØÊåÅÂàÜÂ∏ÉÂºèÈÉ®ÁΩ≤ÂíåÁÆóÂäõÂùáË°°ÔºÅ</p>
            <p>Language: JavaScript</p>
            <p>Stars: 419</p>
            <p>Forks: 95</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre># VCP (Variable &amp; Command Protocol) - Êñ∞‰∏Ä‰ª£ AI ËÉΩÂäõÂ¢ûÂº∫‰∏éËøõÂåñ‰∏≠Èó¥Â±Ç

![LOGOÂõæÁâá1](VCPLogo.png)

---

[English](README_en.md) | [Êó•Êú¨Ë™û](README_ja.md) | [–†—É—Å—Å–∫–∏–π](README_ru.md) 

## Ë≠¶ÂëäÔºÅÊú¨È°πÁõÆAgentÊã•ÊúâÁ°¨‰ª∂Â∫ïÂ±ÇÁ∫ßÂàÜÂ∏ÉÂºèÁ≥ªÁªüÊ†πÊùÉÈôêÔºÅÈùû‰∏ì‰∏öÁî®Êà∑ËØ∑ÂãøÈöèÊÑèÈÉ®ÁΩ≤ÔºÅ ##
---

## 1. È°πÁõÆÊÑøÊôØÔºöË∂ÖË∂ä‰∫§‰∫íÔºåËµãËÉΩËøõÂåñ

VCP (Variable &amp; Command Protocol) Êó®Âú®ÊûÑÂª∫‰∏Ä‰∏™Ë∂ÖË∂ä‰º†Áªü AI ‰∫§‰∫íÊ®°ÂºèÁöÑÈù©ÂëΩÊÄß‰∏≠Èó¥Â±Ç„ÄÇÂÆÉ‰∏ç‰ªÖÊòØ‰∏Ä‰∏™È´òÂ∫¶ÂÖºÂÆπ„ÄÅÈÄöÁî®„ÄÅÂèØÊâ©Â±ïÁöÑÂ∑•ÂÖ∑ÁÆ±ÔºåÊõ¥ÊòØ‰∏Ä‰∏™Ëá¥Âäõ‰∫éËµãËÉΩ AI Ê®°ÂûãÂÆûÁé∞ËÉΩÂäõË∑ÉËøÅ„ÄÅËÆ∞ÂøÜËøõÂåñ‰∏éÁæ§‰ΩìÊô∫ËÉΩÊ∂åÁé∞ÁöÑÁîüÊÄÅÁ≥ªÁªü„ÄÇ

Êàë‰ª¨ÁöÑÁõÆÊ†áÊòØÂàõÂª∫‰∏Ä‰∏™**‚Äú‰∏çÂèóÊ®°ÂûãÁßçÁ±ª„ÄÅÊ®°ÊÄÅ„ÄÅÂäüËÉΩÈôêÂà∂‚Äù‰∏î‚Äú‰∏çÂèóÂâçÁ´Ø‰∫§‰∫íÊùüÁºö‚Äù**ÁöÑÈÄöÁî® VCP Á≥ªÁªüÔºåÈÄöËøáÂú® API Â±ÇÈù¢Ê∑±Â∫¶Êï¥Âêà AI Êé®ÁêÜ„ÄÅÂ§ñÈÉ®Â∑•ÂÖ∑ÊâßË°å‰∏éÊåÅ‰πÖÂåñËÆ∞ÂøÜÁ≥ªÁªüÔºåÂΩ¢ÊàêÈ´òÊïàÂçèÂêåÁöÑ‚ÄúAI-Â∑•ÂÖ∑-ËÆ∞ÂøÜ‚ÄùÈìÅ‰∏âËßí„ÄÇVCP ÂÖÅËÆ∏ AI ‰πãÈó¥„ÄÅAI ‰∏éÂ∑•ÂÖ∑‰πãÈó¥„ÄÅÁîöËá≥ AI ‰∏éËá™Ë∫´ËÆ∞ÂøÜ‰πãÈó¥ËøõË°åÂâçÊâÄÊú™ÊúâÁöÑÈ´òÊïàÈÄöËÆØ‰∏éÂçèÂêåËøõÂåñÔºå‰∏ÄÂàáÂü∫‰∫éÁßÅÊúâÂíåÂÖ±‰∫´Áü•ËØÜÂ∫ìÂÆûÁé∞Ôºå‰ªéËÄåÊó†ÈôêÊâ©Â±ï AI ÁöÑÂ∫îÁî®ËæπÁïå‰∏éÊô∫ËÉΩÊΩúÂäõ„ÄÇ

VCP ÁöÑÊ†∏ÂøÉÊòØÂºïÈ¢Ü AI Agent ËøõÂÖ•‰∏Ä‰∏™ËÉΩÂ§üËá™‰∏ªÂ≠¶‰π†„ÄÅÊåÅÁª≠ËøõÂåñ„ÄÅÂπ∂ËÉΩ‰∏éÂÖ∂‰ªñ Agent È´òÊïàÂçè‰ΩúÁöÑÊñ∞Á∫™ÂÖÉ„ÄÇ

[Ê∑±ÂÖ•ÁêÜËß£ VCP ÁêÜËÆ∫Êû∂ÊûÑ‰∏éÊ†∏ÂøÉÊ¥ûËßÅ](VCP.md)

**ÈÉëÈáçË≠¶Âëä**ÔºöËØ∑Âãø‰ΩøÁî®‰ªª‰ΩïÈùûÂÆòÊñπÊàñÂèçÂêë‰ª£ÁêÜÁöÑ API (‰æãÂ¶ÇÂêÑÁ±ª‚ÄúÈïúÂÉèÁ´ô‚Äù„ÄÅ‚Äú‰∏≠ËΩ¨APIÊúçÂä°ÂïÜ‚Äù) Êù•Ë∞ÉÁî®Ê≠§Â∑•ÂÖ∑ÁÆ±ÔºåVCPÊã•ÊúâÂá†‰πéÂ∫ïÂ±ÇÁöÑÁ≥ªÁªüÁõëÊéßÊùÉÈôêÔºåÊ≠§Á±ªË°å‰∏∫ÊûÅÊòìÂØºËá¥ÊÇ®ÁöÑÊïèÊÑü‰ø°ÊÅØÔºàÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫é AI ‰∫§‰∫íÊï∞ÊçÆ„ÄÅËÆ∞ÂøÜÂ∫ìÂÜÖÂÆπ„ÄÅAPIÂØÜÈí•„ÄÅÊµèËßàÂô®ÂéÜÂè≤„ÄÅË¥¶Âè∑ÂØÜÁ†ÅÔºâÊ≥ÑÈú≤Áªô‰∏çÂèØ‰ø°ÁöÑÁ¨¨‰∏âÊñπÔºåÈÄ†Êàê‰∏çÂèØÊåΩÂõûÁöÑÊçüÂ§±„ÄÇËØ∑Âä°ÂøÖÁ°Æ‰øùÊÇ®ÁöÑ AI Ê®°Âûã API Ë∞ÉÁî®ÈìæË∑ØÁ∫ØÂáÄ„ÄÅÁõ¥Êé•„ÄÅÂèØ‰ø°„ÄÇ

## 2. VCP ÁöÑ‚ÄúÊ¨°Êó∂‰ª£‚ÄùÊ†∏ÂøÉÁâπÊÄß‰∏éËÆæËÆ°Âì≤Â≠¶

VCP ÁöÑÊØè‰∏ÄÈ°πÁâπÊÄßÈÉΩÊ†πÊ§ç‰∫éÂÖ∂ÂâçÁûªÊÄßÁöÑËÆæËÆ°Âì≤Â≠¶ÔºåÊó®Âú®Ëß£ÂÜ≥ÂΩìÂâç AI Â∫îÁî®ÁöÑÊ∑±Â±ÇÁóõÁÇπÔºåÂπ∂ÂºïÈ¢Ü‰∏ã‰∏Ä‰ª£ AI Agent ÁöÑÂèëÂ±ïÊñπÂêë„ÄÇ

### ÊûÅÂÖ∂Âº∫Â§ßÁöÑÊèí‰ª∂ÂåñÊû∂ÊûÑ

- **ËÆæËÆ°Âì≤Â≠¶**: ÂÆûÁé∞ÊûÅËá¥ÁöÑÁÅµÊ¥ªÊÄß‰∏éÂèØÊâ©Â±ïÊÄßÔºåËÆ© AI ÁöÑËÉΩÂäõÂèØ‰ª•Êó†ÈôêÂª∂‰º∏„ÄÇÈÄöËøáÂÆö‰πâËâØÂ•ΩÁöÑÊèí‰ª∂Ê∏ÖÂçï (`plugin-manifest.json`) ÂíåÊ†∏ÂøÉÊèí‰ª∂ÁÆ°ÁêÜÂô® (`Plugin.js`)ÔºåVCP ËÉΩÂ§üËΩªÊùæÈõÜÊàêÂíåÁÆ°ÁêÜ‰ªª‰ΩïÂ§ñÈÉ®ÂäüËÉΩÊ®°ÂùóÔºåÊó†ËÆ∫ÊòØÁé∞Êúâ API„ÄÅ‰∏ì‰∏öËΩØ‰ª∂„ÄÅÁ°¨‰ª∂Êé•Âè£ËøòÊòØËá™ÂÆö‰πâÈÄªËæë„ÄÇ
- **Ê∑±Â∫¶Ëß£ËØª**: Ëøô‰∏ç‰ªÖ‰ªÖÊòØÂäüËÉΩÊâ©Â±ïÔºåÊõ¥ÊòØÊûÑÂª∫‰∫Ü‰∏Ä‰∏™ AI ÂèØËá™‰∏ª‚ÄúÂ≠¶‰π†‚ÄùÂíå‚ÄúÊéåÊè°‚ÄùÊñ∞ÊäÄËÉΩÁöÑÁîüÊÄÅÂü∫Á°Ä„ÄÇ

### Âä®ÊÄÅÈÄªËæëÂº∫ÂåñÊ°ÜÊû∂Ôºö‰ªéÂìçÂ∫îÂà∞È¢ÑÂà§ÁöÑËøõÂåñ
- **Êô∫ËÉΩÊÑèÂõæÂàÜÊûê**: VCPÂºïÂÖ•‰∫Ü‰∏ÄÂ•óÂä®ÊÄÅÈÄªËæëÂº∫ÂåñÊ°ÜÊû∂ÔºåËØ•Ê°ÜÊû∂Âü∫‰∫éVcptarvenÊèí‰ª∂ÁîüÊÄÅÔºåÊòæËëóÊèêÂçá‰∫ÜAIÂú®ÈÄªËæëÈìæÂèçÊÄù„ÄÅ‰ø°ÊÅØËÄ¶Âêà„ÄÅÊÑèÂõæÈ¢ÑÂà§ÂèäÂä®ÊÄÅÂ∑•‰ΩúÊµÅÊûÑÂª∫ÊñπÈù¢ÁöÑËÉΩÂäõ„ÄÇAI‰∏çÂÜçË¢´Âä®ÂìçÂ∫îÔºåËÄåÊòØËÉΩÂ§ü‰∏ªÂä®ÂàÜÊûêÁî®Êà∑ÊΩúÂú®ÊÑèÂõæÔºåÂπ∂ÁÅµÊ¥ªÊûÑÂª∫VCPÊèí‰ª∂Ë∞ÉÁî®Èìæ‰ª•Ëé∑ÂèñÂÜ≥Á≠ñÊâÄÈúÄÁöÑÂÆåÂ§á‰ø°ÊÅØ„ÄÇ
- **Á§∫‰æãÔºö** ÂΩìÁî®Êà∑‰ªÖÊèê‰æõ‰∏ÄÂº†ÁΩëÈ°µËßÜÈ¢ëÊà™ÂõæÊó∂ÔºåÊñ∞Ê°ÜÊû∂‰∏ãÁöÑAI‰ºö‰∏ªÂä®ÊâßË°å‰∏ÄÁ≥ªÂàóÂä®‰ΩúÔºöÈ¶ñÂÖàÊ£ÄÁ¥¢ÂõæÂÉè‰ø°ÊÅØ‰ª•ÂÆö‰ΩçËßÜÈ¢ëÊù•Ê∫êÔºåÈöèÂêéË∞ÉÁî®VCPÂú®Á∫øËßÜÈ¢ëÂ≠óÂπïÊçïÊçâÂô®ËøõË°å‚ÄúËßÜÈ¢ëÈòÖËØª‚ÄùÔºåÊúÄÁªàËé∑ÂèñÂÆåÊï¥ÁöÑ‰∏ä‰∏ãÊñá‰ø°ÊÅØÔºå‰ªéËÄåËÉΩÂ§ü‰∏éÁî®Êà∑Â±ïÂºÄÊõ¥ÊúâÊ∑±Â∫¶ÁöÑËÆ®ËÆ∫„ÄÇ
- **Ê†∏ÂøÉ‰ºòÂäøÔºö** Âú®ËøôÂ•óÂÖ®Êñ∞ÁöÑÈÄªËæëÈìæÊû∂ÊûÑ‰∏ãÔºåAIÂú®Áü•ËØÜÂ∫ìÁöÑÊô∫ËÉΩÂΩíÊ°£„ÄÅÂ∑•ÂÖ∑Ë∞ÉÁî®ÁöÑÁÅµÊ¥ªÂ∫¶‰ª•ÂèäÂπªËßâÊäëÂà∂Á≠âÊñπÈù¢ÂùáËé∑Âæó‰∫ÜË¥®ÁöÑÈ£ûË∑É„ÄÇ

### VCP Êåá‰ª§ÂçèËÆÆ

- **ËÆæËÆ°Âì≤Â≠¶**: Êèê‰æõ‰∏ÄÁßçÂØπ AI Ê®°ÂûãÂèãÂ•Ω„ÄÅÂØπÂâçÁ´ØÈõ∂‰æµÂÖ•„ÄÅ‰∏îËÉΩÊâøËΩΩÂ§çÊùÇÊåá‰ª§ÁöÑÈÄöÁî®Â∑•ÂÖ∑Ë∞ÉÁî®ËØ≠Ë®Ä„ÄÇAI ÈÄöËøáÂú®ÂõûÂ§ç‰∏≠ÂµåÂÖ•ÁâπÂÆöÊ†ºÂºèÁöÑÊåá‰ª§ (`&lt;&lt;&lt;[TOOL_REQUEST]&gt;&gt;&gt; ... &lt;&lt;&lt;[END_TOOL_REQUEST]&gt;&gt;&gt;`) Êù•Ë∞ÉÁî®Êèí‰ª∂ÔºåÂèÇÊï∞‰ΩøÁî® `key:„ÄåÂßã„Äçvalue„ÄåÊú´„Äç` Ê†ºÂºèÔºåÊîØÊåÅÂ§çÊùÇÊï∞ÊçÆÁ±ªÂûãÂíåÂ§öË°åÊñáÊú¨„ÄÇ
- **Ê∑±Â∫¶Ëß£ËØª**: ËøôÁßçÂü∫‰∫éÊñáÊú¨Ê†áËÆ∞ÁöÑÂçèËÆÆÔºåÊûÅÂ§ßÂú∞Èôç‰Ωé‰∫ÜÂØπÁâπÂÆöÊ®°Âûã API ÁâπÊÄßÔºàÂ¶ÇÊüê‰∫õÊ®°Âûã‰∏ìÂ±ûÁöÑ Function Calling Â≠óÊÆµÔºâÁöÑ‰æùËµñÔºåÂÆûÁé∞‰∫ÜÁúüÊ≠£ÁöÑÊ®°ÂûãÊôÆÈÄÇÊÄß„ÄÇÁã¨ÁâπÁöÑ `„ÄåÂßã„Äçvalue„ÄåÊú´„Äç` ÂèÇÊï∞Ê†ºÂºèÔºåÂàô‰øùËØÅ‰∫ÜÂú®Â§çÊùÇÂèÇÊï∞‰º†ÈÄíÔºàÂ¶Ç‰ª£Á†ÅÂùó„ÄÅJSONÂØπË±°„ÄÅÈïøÊñáÊú¨ÔºâÊó∂ÁöÑËß£ÊûêÈ≤ÅÊ£íÊÄß„ÄÇÊ≠§Â§ñÔºåÂçèËÆÆÂÆûÁé∞‰∫ÜÂº∫Â§ßÁöÑÈ≤ÅÊ£íÊÄß‰øÆÂ§ç„ÄÇÂèÇÊï∞ÈîÆÔºàkeyÔºâÁöÑËß£Êûê‰∏ç‰ªÖÂ§ßÂ∞èÂÜô‰∏çÊïèÊÑüÔºåËøò‰ºöËá™Âä®ÂøΩÁï•‰∏ãÂàíÁ∫ø„ÄÅËøûÂ≠óÁ¨¶Á≠âÂ∏∏ËßÅÂàÜÈöîÁ¨¶„ÄÇËøôÊÑèÂë≥ÁùÄ AI Âú®ÁîüÊàêÊåá‰ª§Êó∂ÔºåÊó†ËÆ∫ÊòØ `image_size`„ÄÅ`imagesize`„ÄÅ`ImageSize` ËøòÊòØ `IMAGE-SIZE`ÔºåÈÉΩ‰ºöË¢´Ê≠£Á°ÆËØÜÂà´‰∏∫Âêå‰∏Ä‰∏™ÂèÇÊï∞ÔºåÊûÅÂ§ßÂú∞Â¢ûÂº∫‰∫ÜÂçèËÆÆÁöÑÂÆπÈîôÊÄßÂíåÂØπ AI ÁîüÊàêÂÜÖÂÆπÂ§öÊ†∑ÊÄßÁöÑÈÄÇÂ∫îËÉΩÂäõ„ÄÇ
- **ÂÖ≠Â§ßÊèí‰ª∂ÂçèËÆÆ**ÔºöÊîØÊåÅÂä®ÊÄÅÔºåÊúçÂä°Âô®ÔºåÂêåÊ≠•ÔºåÂºÇÊ≠•ÔºåÊ≥®ÂÖ•ÂºèÔºåÊ∑∑ÂêàÂºèÂÖ≠Â§ßÁ±ªÂûãÊèí‰ª∂ÂêàËÆ°300Â§ö‰∏™ÂÆòÊñπÊèí‰ª∂ÔºåÂá†‰πéÊ∂âÂèäÊâÄÊúâÁîü‰∫ßÂ∫îÁî®Âú∫ÊôØÔºå‰ªéÂπ≥Âè∞ÊéßÂà∂Âà∞Â§öÂ™í‰ΩìÁîüÊàêÂà∞Â§çÊùÇÁºñËæëÂà∞Á®ãÂ∫èÂèçÁºñËØëÂà∞Áâ©ËÅîÁΩëÔºåËêΩÂú∞Âç≥ÁîüÊÄÅ„ÄÇ
- **Âä®ÊÄÅÂ∑•ÂÖ∑Ê≥®ÂÖ•**ÔºöÂºÄÂèëËÄÖÊó†ÈúÄÂÖ≥ÂøÉÂ¶Ç‰ΩïÁÆ°ÁêÜvcpÊèí‰ª∂ÔºåÂ¶Ç‰ΩïÂÆûÁé∞ËÆ©ai‰ΩøÁî®Â∑•ÂÖ∑„ÄÇÊúçÂä°Âô®‰ºöËá™Âä®ÂàÜÊûê‰∏ä‰∏ãÊñáÂíåÈ¢ÑÂà§aiÊÑèÂõæÔºå‰∏ªÂä®‰∏∫aiÂä®ÊÄÅÊèê‰æõÊèí‰ª∂Ë∞ÉÁî®ÊñπÂºèÔºå‰øùËØÅÂì™ÊÄïÂêéÁ´ØÊúâ‰∏ä‰∏áÁßçÂ∑•ÂÖ∑‰πü‰∏ç‰ºöÈòªÂ°û‰∏ä‰∏ãÊñá„ÄÇÊâÄÊúâÊèí‰ª∂ÈÉΩÈááÁî®Êó†ËøõÁ®ãÊó†ÊúçÂä°Â§ÑÁêÜ„ÄÇ

### Êñ∞Â¢ûÔºöÂü∫‰∫éMCPOÁöÑMCPÂÖºÂÆπÁ´ØÂè£
- **ËÆæËÆ°Âì≤Â≠¶**Ôºö‰∏∫‰∫ÜÊúÄÂ§ßÂåñVCPÁöÑÁîüÊÄÅÂÖºÂÆπÊÄßÔºåÊàë‰ª¨ÂºïÂÖ•‰∫ÜÂü∫‰∫éMCPOÔºàModel Context Protocol OperaÔºâÁöÑÂÖºÂÆπÁ´ØÂè£„ÄÇËøôÊÑèÂë≥ÁùÄÔºåÁé∞Âú®VCPÊúçÂä°Âô®‰∏ç‰ªÖËÉΩÂ§üÊåÇËΩΩÂéüÁîüÁöÑVCPÊèí‰ª∂Ôºå‰πüËÉΩÂ§üÊó†ÁºùÂÖºÂÆπÂíåÊåÇËΩΩ‰∏∫MCPÔºàModel Context ProtocolÔºâËÆæËÆ°ÁöÑÊèí‰ª∂„ÄÇ
- **Ê†∏ÂøÉËÉΩÂäõ**ÔºöÈÄöËøá‰∏Ä‰∏™‰∏ìÈó®ÁöÑMCPOÊèí‰ª∂ËøõË°åÂçèËÆÆËΩ¨ËØëÔºåÂ∞ÜMCPÁöÑË∞ÉÁî®Ê†ºÂºèÂÆûÊó∂ËΩ¨Êç¢‰∏∫VCPÊåá‰ª§ÔºåÂπ∂Â§ÑÁêÜÂÖ∂ÂìçÂ∫î„ÄÇËøô‰ΩøÂæóÂ§ßÈáèÁé∞ÊúâÁöÑMCPÊèí‰ª∂Êó†ÈúÄ‰ªª‰Ωï‰øÆÊîπÔºåÂç≥ÂèØÂú®VCPÁéØÂ¢É‰∏≠‰ΩøÁî®ÔºåÊûÅÂ§ßÂú∞‰∏∞ÂØå‰∫ÜVCPÁöÑÂèØÁî®Â∑•ÂÖ∑ÁîüÊÄÅ„ÄÇ
- **Ê¨°Êó∂‰ª£ÊÑè‰πâ**ÔºöËøô‰∏ç‰ªÖ‰ªÖÊòØÂêëÂêéÂÖºÂÆπÔºåÊõ¥ÊòØVCP‰Ωú‰∏∫‚ÄúÂÖÉÂçèËÆÆ‚ÄùÂº∫Â§ßÂåÖÂÆπÊÄßÁöÑ‰ΩìÁé∞„ÄÇÂÆÉ‰∏∫‰∏çÂêåÂçèËÆÆÁöÑAIËÉΩÂäõÂ±ÇÊèê‰æõ‰∫Ü‰∏Ä‰∏™Áªü‰∏ÄÁöÑÊï¥Âêà‰∏éÂçè‰ΩúÂπ≥Âè∞ÔºåÊòØÊûÑÂª∫Êõ¥ÂÆèÂ§ß„ÄÅÊõ¥Â§öÊ†∑ÂåñÁöÑAI AgentÁîüÊÄÅÁ≥ªÁªüÁöÑÂÖ≥ÈîÆ‰∏ÄÊ≠•„ÄÇ

### Áªü‰∏ÄÁöÑ WebSocket ÈÄö‰ø°ÊúçÂä°

- **ËÆæËÆ°Âì≤Â≠¶**: Êèê‰æõ‰∏Ä‰∏™ÈõÜ‰∏≠ÁöÑ WebSocket ÊúçÂä° (`WebSocketServer.js`)ÔºåÁî®‰∫éÊúçÂä°Âô®‰∏éÂÆ¢Êà∑Á´Ø‰πãÈó¥ÁöÑÂèåÂêëÂÆûÊó∂ÈÄö‰ø°„ÄÇËøôÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÊé®ÈÄÅÊó•Âøó„ÄÅAI ÁîüÊàêÁöÑÊ∂àÊÅØ„ÄÅÁä∂ÊÄÅÊõ¥Êñ∞Á≠â„ÄÇ
- **Ê†∏ÂøÉËÉΩÂäõ**:
    - **ÈõÜ‰∏≠ÁÆ°ÁêÜ**: ÊâÄÊúâ WebSocket ËøûÊé•„ÄÅËÆ§ËØÅ„ÄÅÊ∂àÊÅØÂπøÊí≠Áî± `WebSocketServer.js` Áªü‰∏ÄÂ§ÑÁêÜ„ÄÇ
    - **Êèí‰ª∂ÈõÜÊàê**: ÊúçÂä°Á±ªÊèí‰ª∂ÔºàÂ¶Ç `VCPLog`ÔºâÂíåÂêåÊ≠•Êèí‰ª∂ÔºàÈÄöËøá `webSocketPush` ÈÖçÁΩÆÔºâÂèØ‰ª•Âà©Áî®Ê≠§‰∏≠Â§ÆÊúçÂä°ÂêëÂÆ¢Êà∑Á´ØÊé®ÈÄÅ‰ø°ÊÅØÔºåËÄåÊó†ÈúÄÂêÑËá™ÂÆûÁé∞ WebSocket ÊúçÂä°Âô®„ÄÇ
    - **ÂÆ¢Êà∑Á´ØÁ±ªÂûã**: ÊîØÊåÅÂü∫‰∫é `clientType` ÁöÑÊ∂àÊÅØÂÆöÂêëÂπøÊí≠ÔºåÂÖÅËÆ∏‰∏çÂêåÂâçÁ´ØÊàñÂÆ¢Êà∑Á´ØÁªÑ‰ª∂ËÆ¢ÈòÖÁâπÂÆöÁ±ªÂûãÁöÑÊ∂àÊÅØ„ÄÇ
- **Ê∑±Â∫¶Ëß£ËØª**: ÁÆÄÂåñ‰∫ÜÈúÄË¶ÅÂÆûÊó∂Êé®ÈÄÅÂäüËÉΩÁöÑÊèí‰ª∂ÂºÄÂèëÔºåÊèêÈ´ò‰∫ÜÁ≥ªÁªüÁöÑÊ®°ÂùóÂåñÂíåÂèØÁª¥Êä§ÊÄß„ÄÇÂÆÉ‰πüÊòØ VCP ÂàÜÂ∏ÉÂºèÁΩëÁªúÁöÑÊ†∏ÂøÉÈÄö‰ø°È™®Êû∂„ÄÇ

### Ê®°ÂûãÁôΩÂêçÂçïÁ©øÈÄèÊú∫Âà∂

- **ËÆæËÆ°Âì≤Â≠¶**: ÊâøËÆ§Âπ∂ÂÖºÂÆπÂπ∂ÈùûÊâÄÊúâ AI Ê®°ÂûãÈÉΩÈÅµÂæ™Ê†áÂáÜËÅäÂ§©APIÊ†ºÂºè„ÄÇÂØπ‰∫éÊüê‰∫õÁâπÊÆäÊ®°ÂûãÔºàÂ¶ÇÊñáÁîüÂõæ„ÄÅÂêëÈáèÂåñÊ®°ÂûãÔºâÔºåÂÖ∂APIËØ∑Ê±Ç/ÂìçÂ∫îÁªìÊûÑÂÆåÂÖ®‰∏çÂêåÔºåÈúÄË¶ÅÁªïËøáVCPÁöÑÊ†áÂáÜÂåñÂ§ÑÁêÜÊµÅÁ®ã„ÄÇ
- **Ê†∏ÂøÉËÉΩÂäõ**:
    - **ÈÖçÁΩÆÈ©±Âä®**: Âú® `config.env` ‰∏≠ÈÄöËøá `WhitelistImageModel` Âíå `WhitelistEmbeddingModel` ÂèòÈáèÂàÜÂà´ÈÖçÁΩÆÂõæÂÉèÊ®°ÂûãÂíåÂêëÈáèÂåñÊ®°ÂûãÁöÑÁôΩÂêçÂçïÔºàÁî®ÈÄóÂè∑ÂàÜÈöîÔºâ„ÄÇ
    - **ËØ∑Ê±ÇÁªïË°å**: ÂΩìÊúçÂä°Âô®Êî∂Âà∞‰∏Ä‰∏™ÈíàÂØπÁôΩÂêçÂçïÂÜÖÊ®°ÂûãÁöÑËØ∑Ê±ÇÊó∂ÔºåÂÆÉ‰ºöÈÄöËøá‰∏Ä‰∏™ÁâπÊÆäÁöÑË∑ØÁî±Ê®°Âùó (`specialModelRouter.js`) ËøõË°åÂ§ÑÁêÜÔºå**ÂÆåÂÖ®Ë∑≥Ëøá**ÊâÄÊúâÁöÑÂ∏∏ËßÑÂ§ÑÁêÜÊ≠•È™§ÔºàÂåÖÊã¨Ê∂àÊÅØÈ¢ÑÂ§ÑÁêÜ„ÄÅÂèòÈáèÊõøÊç¢„ÄÅÂ∑•ÂÖ∑Ë∞ÉÁî®Âæ™ÁéØÁ≠âÔºâ„ÄÇ
    - **Áõ¥Êé•ËΩ¨Âèë**:
        - **ÂêëÈáèÂåñÊ®°Âûã**: ËØ∑Ê±Ç‰ΩìÂíåÂìçÂ∫î‰ΩìÂ∞ÜÂú®ÂÆ¢Êà∑Á´Ø‰∏é‰∏äÊ∏∏API‰πãÈó¥Ë¢´ÂéüÂ∞Å‰∏çÂä®Âú∞Áõ¥Êé•ËΩ¨ÂèëÔºåÂÆûÁé∞ÁúüÊ≠£ÁöÑ‚ÄúÁ©øÈÄè‚Äù„ÄÇ
        - **ÂõæÂÉèÊ®°Âûã**: ÊúçÂä°Âô®‰ºöÂú®ËΩ¨ÂèëÂâçÂØπËØ∑Ê±Ç‰ΩìËøõË°åÂøÖË¶ÅÁöÑ‰øÆÊîπÔºàÂ¶ÇÊ∑ªÂä†ÁâπÂÆöÁöÑ `generationConfig`ÔºâÔºåÂπ∂Ê†πÊçÆÈúÄË¶ÅÂ§ÑÁêÜÂìçÂ∫î„ÄÇ
- **Ê∑±Â∫¶Ëß£ËØª**: ËØ•Êú∫Âà∂‰øùËØÅ‰∫ÜVCPÂØπÊú™Êù•ÊàñÈùûÊ†áÂáÜAIÊ®°ÂûãÁöÑÊúÄÂ§ßÂÖºÂÆπÊÄßÔºå‰ΩøÂÖ∂ÂèØ‰ª•‰Ωú‰∏∫‰∏Ä‰∏™Á∫ØÁ≤π„ÄÅÈ´òÊïàÁöÑ‰ª£ÁêÜÔºåËÄå‰∏çÊòØÂ§ÑÁêÜÊµÅÁ®ã‰∏≠ÁöÑÈöúÁ¢ç„ÄÇ

### ‰∏∞ÂØåÁöÑÊèí‰ª∂Á±ªÂûãÔºåÊîØÊíë AI ÂÖ®Êñπ‰ΩçËÉΩÂäõÊãìÂ±ï

VCP ÊîØÊåÅÂ§öÁßçÊèí‰ª∂Á±ªÂûãÔºå‰ª•Êª°Ë∂≥‰∏çÂêåÁöÑ AI ËÉΩÂäõÊâ©Â±ïÈúÄÊ±Ç„ÄÇÊ†∏ÂøÉÁöÑ‰∫§‰∫íÂûãÊèí‰ª∂‰∏ªË¶ÅÂàÜ‰∏∫ÂêåÊ≠•ÈòªÂ°ûÂûãÂíåÂºÇÊ≠•ÂõûË∞ÉÂûã„ÄÇ

- **ÈùôÊÄÅÊèí‰ª∂ (static)**:
  - **‰ΩúÁî®**: ‰∏∫ AI Êèê‰æõÂä®ÊÄÅÁöÑ„ÄÅÂÆûÊó∂ÁöÑ‚Äú‰∏ñÁïåÁü•ËØÜ‚ÄùÔºåÂ¶ÇÂ§©Ê∞î„ÄÅËá™ÂÆö‰πâÊï∞ÊçÆ„ÄÅËßíËâ≤Êó•ËÆ∞Á≠âÔºåÈÄöËøáÊõøÊç¢Á≥ªÁªüÊèêÁ§∫ËØç‰∏≠ÁöÑÂç†‰ΩçÁ¨¶Ê≥®ÂÖ•„ÄÇÊîØÊåÅÂÆöÊó∂Âà∑Êñ∞„ÄÇ
  - **Ê¨°Êó∂‰ª£ÊÑè‰πâ**: ÂÖãÊúç LLM Áü•ËØÜÊà™Ê≠¢Êó•ÊúüÈôêÂà∂ÔºåËµã‰∫à AI ÂÆûÊó∂ÊÑüÁü•ËÉΩÂäõÔºåÊòØÊûÑÂª∫‚ÄúÊÉÖÂ¢ÉÊÑüÁü•Âûã AI‚ÄùÁöÑÂÖ≥ÈîÆ„ÄÇ
- **Ê∂àÊÅØÈ¢ÑÂ§ÑÁêÜÂô®Êèí‰ª∂ (messagePreprocessor)**:
  - **‰ΩúÁî®**: Âú®Áî®Êà∑ËØ∑Ê±ÇÂèëÈÄÅÁªô AI Ê®°ÂûãÂâçÔºåÂØπÊ∂àÊÅØÂÜÖÂÆπËøõË°å‰øÆÊîπÊàñÂ¢ûÂº∫ÔºåÂ¶ÇÂõæÂÉèËØÜÂà´‰∏éÊèèËø∞ (`ImageProcessor`)„ÄÇ
  - **Ê¨°Êó∂‰ª£ÊÑè‰πâ**: ÂÆûÁé∞Â§öÊ®°ÊÄÅËæìÂÖ•ÁöÑÁªü‰∏ÄÂ§ÑÁêÜÔºåËÆ© AI ËÉΩÂ§ü‚ÄúÁêÜËß£‚ÄùÊõ¥‰∏∞ÂØåÁöÑËæìÂÖ•‰ø°ÊÅØÔºåÊòØÊûÑÂª∫Â§öÊ®°ÊÄÅÊô∫ËÉΩ‰ΩìÁöÑÂü∫Á°Ä„ÄÇ
- **ÂêåÊ≠•Êèí‰ª∂ (synchronous)**:
  - **Ê®°Âºè**: ËøôÊòØ‰º†ÁªüÁöÑÈòªÂ°ûÂºèË∞ÉÁî®„ÄÇAI ÂèëËµ∑Ë∞ÉÁî®ÂêéÔºåVCP ÊúçÂä°Âô®‰ºöÂêØÂä®Êèí‰ª∂ËøõÁ®ãÔºåÂπ∂**Á≠âÂæÖËØ•Êèí‰ª∂ËøõÁ®ãÂÆåÂÖ®ÊâßË°åÂÆåÊØï**ÂêéÔºåÊî∂ÈõÜÂÖ∂Ê†áÂáÜËæìÂá∫‰Ωú‰∏∫ÁªìÊûúÔºåÁÑ∂ÂêéÂ∞ÜÊ≠§ÁªìÊûúÂèçÈ¶àÁªô AI ËøõË°åÂêéÁª≠Â§ÑÁêÜ„ÄÇ
  - **ÈÄÇÁî®Âú∫ÊôØ**: ÈÄÇÁî®‰∫éÊâßË°åÊó∂Èó¥ËæÉÁü≠„ÄÅËÉΩÂ§üÂø´ÈÄüËøîÂõûÁªìÊûúÁöÑ‰ªªÂä°ÔºåÂ¶ÇÁßëÂ≠¶ËÆ°ÁÆó (`SciCalculator`)„ÄÅÁÆÄÂçïÁöÑ‰ø°ÊÅØÊü•ËØ¢Á≠â„ÄÇ
  - **WebSocket Êé®ÈÄÅ**: ÈÉ®ÂàÜÂêåÊ≠•Êèí‰ª∂ÁöÑÊúÄÁªàÁªìÊûú‰πüÂèØ‰ª•ÈÄöËøáÂú®ÂÖ∂ `plugin-manifest.json` ‰∏≠ÈÖçÁΩÆ `webSocketPush`ÔºåÁªèÁî±Áªü‰∏ÄÁöÑ WebSocket ÊúçÂä°Êé®ÈÄÅÁªôÂÆ¢Êà∑Á´Ø„ÄÇ
  - **Ê¨°Êó∂‰ª£ÊÑè‰πâ**: ËøôÊòØ AI ‚ÄúË°åÂä®ËÉΩÂäõ‚ÄùÁöÑÂü∫Á°Ä‰ΩìÁé∞Ôºå‰ΩøÂÖ∂ËÉΩÂ§üÂπ≤È¢ÑÂ§ñÈÉ®‰∏ñÁïå„ÄÅËé∑ÂèñÂ§ñÈÉ®‰ø°ÊÅØ„ÄÇ
- **ÂºÇÊ≠•Êèí‰ª∂ (asynchronous)**:
  - **Ê†∏ÂøÉÊ®°Âºè**: ‰∏ì‰∏∫ËÄóÊó∂‰ªªÂä°ËÆæËÆ°ÔºåÂÆûÁé∞ÈùûÈòªÂ°ûË∞ÉÁî®ÂíåAIÂØπÁªìÊûúÁöÑ‚ÄúÂç≥Êó∂‚ÄùÊÑüÁü•„ÄÇ
    1.  **AIË∞ÉÁî®‰∏éÂàùÂßãÂìçÂ∫î**: AIË∞ÉÁî®ÂºÇÊ≠•Êèí‰ª∂„ÄÇÊèí‰ª∂ËÑöÊú¨Á´ãÂç≥ÂêëÊ†áÂáÜËæìÂá∫ÊâìÂç∞‰∏Ä‰∏™JSONÂìçÂ∫îÔºåÊ≠§ÂìçÂ∫îÈÄöÂ∏∏ÂåÖÂê´‰∏Ä‰∏™ÂîØ‰∏ÄÁöÑ‰ªªÂä°IDÔºå‰ª•Âèä‰∏ÄÊÆµ**ÂºïÂØºAI‰ΩøÁî®ÁöÑËá™ÁÑ∂ËØ≠Ë®ÄÊ∂àÊÅØ**„ÄÇËøôÊù°Ê∂àÊÅØ‰ºöÊåáÁ§∫AIÂú®ÂÖ∂ÂõûÂ§ç‰∏≠ÂåÖÂê´‰∏Ä‰∏™ÁâπÂÆöÊ†ºÂºèÁöÑÂä®ÊÄÅÂç†‰ΩçÁ¨¶ÔºåÂ¶Ç `{{VCP_ASYNC_RESULT::PluginName::ActualTaskID}}`„ÄÇ`Plugin.js`ÊçïËé∑Ê≠§ÂàùÂßãÂìçÂ∫îÂπ∂ËøÖÈÄüËøîÂõûÁªôAI„ÄÇ
    2.  **AIÂõûÂ§ç‰∏éÂç†‰ΩçÁ¨¶Ê§çÂÖ•**: AIÊ†πÊçÆÊèí‰ª∂ÁöÑÂàùÂßãÂìçÂ∫îÔºàÂåÖÂê´ÂºïÂØºÊñáÊú¨ÂíåÂç†‰ΩçÁ¨¶Ê†ºÂºèÔºâÁîüÊàêÂõûÂ§çÁªôÁî®Êà∑ÁöÑÊ∂àÊÅØÔºåÂπ∂Â∞ÜËØ•Âç†‰ΩçÁ¨¶ÂéüÊñáÂåÖÂê´Âú®ÂÖ∂ÂõûÂ§ç‰∏≠„ÄÇ
    3.  **Êèí‰ª∂ÂêéÂè∞ÊâßË°å**: ‰∏éÊ≠§ÂêåÊó∂ÔºåÊèí‰ª∂ÁöÑÈùûÂÆàÊä§Á∫øÁ®ãÊàñÂêéÂè∞ËøõÁ®ãÁªßÁª≠ÊâßË°åËÄóÊó∂ÁöÑ‰∏ªË¶Å‰ªªÂä°Ôºà‰æãÂ¶ÇËßÜÈ¢ëÁîüÊàêÔºâ„ÄÇ
    4.  **‰ªªÂä°ÂÆåÊàêÂõûË∞É‰∏éÁªìÊûúÊåÅ‰πÖÂåñ**: Êèí‰ª∂ÂêéÂè∞‰ªªÂä°ÂÆåÊàêÂêéÔºåÂÆÉ‰ºöÂêëVCPÊúçÂä°Âô®ÁöÑ `/plugin-callback/:pluginName/:taskId` Á´ØÁÇπÂèëÈÄÅ‰∏Ä‰∏™HTTP POSTËØ∑Ê±Ç„ÄÇËØ∑Ê±Ç‰ΩìÊòØÂåÖÂê´‰ªªÂä°ÊúÄÁªàÁªìÊûúÁöÑJSONÊï∞ÊçÆ„ÄÇÊúçÂä°Âô®Âú®Êî∂Âà∞Ê≠§ÂõûË∞ÉÂêéÔºå‰ºöÂ∞ÜËøô‰∏™JSONÊï∞ÊçÆ‰øùÂ≠òÂà∞ÊúçÂä°Âô®Êú¨Âú∞ÁöÑ‰∏Ä‰∏™ÁâπÂÆöÊñá‰ª∂Ôºà‰æãÂ¶Ç `VCPAsyncResults/PluginName-ActualTaskID.json`Ôºâ„ÄÇ
    5.  **Âä®ÊÄÅ‰∏ä‰∏ãÊñáÊõøÊç¢‰∏éAIÊÑüÁü•**: ÂΩìAIÁöÑÂêéÁª≠ÂØπËØùÔºàÊó†ËÆ∫ÊòØÁî®Êà∑ËæìÂÖ•‰∏≠ÂºïÁî®‰∫ÜAI‰πãÂâçÁöÑÂõûÂ§çÔºåËøòÊòØAIÂú®ÁîüÊàêÊñ∞ÂõûÂ§çÊó∂ÂèÇËÄÉ‰∫ÜÂéÜÂè≤ÂØπËØùÔºâ‰∏≠ÂÜçÊ¨°Âá∫Áé∞ `{{VCP_ASYNC_RESULT::PluginName::ActualTaskID}}` Ëøô‰∏™Âç†‰ΩçÁ¨¶Êó∂ÔºåVCPÊúçÂä°Âô®ÁöÑ `replaceCommonVariables` ÂáΩÊï∞‰ºöÂú®Â∞ÜÊ≠§‰∏ä‰∏ãÊñáÂèëÈÄÅÁªôAIÊ®°Âûã‰πãÂâçÔºåÂä®ÊÄÅÂú∞Êü•ÊâæÂØπÂ∫îÁöÑÁªìÊûúÊñá‰ª∂Ôºö
        - Â¶ÇÊûúÁªìÊûúÊñá‰ª∂Â≠òÂú®ÔºåÂç†‰ΩçÁ¨¶‰ºöË¢´ÊõøÊç¢‰∏∫Êñá‰ª∂‰∏≠ÁöÑÂÆûÈôÖÁªìÊûú‰ø°ÊÅØÔºà‰æãÂ¶ÇÔºå‰∏ÄÊÆµÊèèËø∞‰ªªÂä°ÊàêÂäüÂπ∂ÂåÖÂê´URLÁöÑÊñáÊú¨Ôºâ„ÄÇ
        - Â¶ÇÊûúÁªìÊûúÊñá‰ª∂‰∏çÂ≠òÂú®Ôºà‰ªªÂä°‰ªçÂú®Â§ÑÁêÜ‰∏≠ÔºâÔºåÂç†‰ΩçÁ¨¶‰ºöË¢´ÊõøÊç¢‰∏∫‰∏Ä‰∏™ÊèêÁ§∫‰ø°ÊÅØÔºàÂ¶Ç‚Äú[‰ªªÂä°ÁªìÊûúÂæÖÊõ¥Êñ∞...]‚ÄùÔºâ„ÄÇ
        ËøôÊ†∑ÔºåAIÂú®ÂÖ∂ÂêéÁª≠ÁöÑ‚ÄúÊÄùËÄÉ‚ÄùÂíåÂõûÂ§ç‰∏≠ÔºåÂ∞±ËÉΩ‚ÄúÁúãÂà∞‚ÄùÂºÇÊ≠•‰ªªÂä°ÁöÑÊúÄÊñ∞Áä∂ÊÄÅÊàñÊúÄÁªàÁªìÊûúÔºå‰ªø‰Ωõ‰ø°ÊÅØÊòØÂç≥Êó∂Êõ¥Êñ∞Âú®ÂØπËØùÊµÅ‰∏≠ÁöÑ„ÄÇ
    6.  **WebSocket Êé®ÈÄÅ (ÂèØÈÄâÂπ∂Ë°åÊú∫Âà∂)**: ÊúçÂä°Âô®Âú®Êî∂Âà∞Êèí‰ª∂ÂõûË∞ÉÂπ∂ÊåÅ‰πÖÂåñÁªìÊûúÂêéÔºå‰ªçÁÑ∂ÂèØ‰ª•ÔºàÂπ∂‰∏îÊé®ËçêÔºâÊ†πÊçÆÊèí‰ª∂Ê∏ÖÂçï‰∏≠ÁöÑ `webSocketPush` ÈÖçÁΩÆÔºåÈÄöËøá `WebSocketServer.js` Â∞ÜÂõûË∞ÉÊï∞ÊçÆÔºàÊàñÂÖ∂‰∏ÄÈÉ®ÂàÜÔºâÊé®ÈÄÅÁªôÂÆ¢Êà∑Á´ØÔºå‰Ωú‰∏∫‰∏ÄÁßçÊõ¥Áõ¥Êé•„ÄÅÊõ¥Âç≥Êó∂ÁöÑÂâçÁ´ØÈÄöÁü•ÊñπÂºè„ÄÇËøôÁßçÂü∫‰∫éÊñá‰ª∂ÁöÑ‰∏ä‰∏ãÊñáÊõøÊç¢Êú∫Âà∂ÊòØÂØπWebSocketÊé®ÈÄÅÁöÑË°•ÂÖÖÂíåÂ¢ûÂº∫ÔºåÂ∞§ÂÖ∂ÊòØÂú®AIÈúÄË¶ÅÁõ¥Êé•ÊÑüÁü•ÂíåÂà©Áî®ÂºÇÊ≠•ÁªìÊûúËøõË°åÂêéÁª≠ÂØπËØùÊó∂„ÄÇ
  - **ÈÄÇÁî®Âú∫ÊôØ**: ÈùûÂ∏∏ÈÄÇÂêàÊâßË°åÊó∂Èó¥ËæÉÈïøÁöÑ‰ªªÂä°ÔºåÂ¶ÇËßÜÈ¢ëÁîüÊàê (`Wan2.1VideoGen`)„ÄÅÂ§çÊùÇÊï∞ÊçÆÂàÜÊûê„ÄÅÈúÄË¶ÅËΩÆËØ¢Â§ñÈÉ®APIÁä∂ÊÄÅÁ≠â„ÄÇ
  - **‰ºòÂäø**:
      - AIÊó†ÈúÄÈïøÊó∂Èó¥Á≠âÂæÖÔºå‰∫§‰∫íÊµÅÁïÖ„ÄÇ
      - AIËÉΩÂ§üÂú®ÂÖ∂ÂØπËØùÊµÅ‰∏≠‚ÄúËá™ÁÑ∂Âú∞‚ÄùÊÑüÁü•ÂíåÂà©Áî®ÂºÇÊ≠•‰ªªÂä°ÁöÑÊúÄÁªàÁªìÊûú„ÄÇ
      - Èôç‰Ωé‰∫ÜÂØπÂâçÁ´ØÂøÖÈ°ª‰æùËµñWebSocketÊù•Ëé∑ÂèñÂíåÂõû‰º†ÂºÇÊ≠•ÁªìÊûúÁöÑÁ°¨ÊÄßË¶ÅÊ±Ç„ÄÇ
      - ÊèêÂçá‰∫ÜÁ≥ªÁªüÁöÑÈ≤ÅÊ£íÊÄßÔºåÂç≥‰ΩøWebSocketÈÄöÁü•Â§±Ë¥•ÊàñÂÆ¢Êà∑Á´ØÊú™ËøûÊé•ÔºåAI‰ªçÊúâÊú∫‰ºöÈÄöËøá‰∏ä‰∏ãÊñáÊÑüÁü•ÁªìÊûú„ÄÇ
  - **Ê¨°Êó∂‰ª£ÊÑè‰πâ**: Ëµã‰∫àAIÊâßË°åÂ§çÊùÇ„ÄÅËÄóÊó∂‰ªªÂä°ËÄåËá™Ë∫´‰∏çË¢´ÈòªÂ°ûÁöÑËÉΩÂäõÔºåÁªìÂêà‰∏ä‰∏ãÊñáÊÑüÁü•ÁöÑÂºÇÊ≠•ÁªìÊûúÂíåÂèØÈÄâÁöÑÂç≥Êó∂ÈÄöÁü•ÔºåÊûÅÂ§ßÂú∞ÊèêÂçá‰∫ÜÁî®Êà∑‰ΩìÈ™åÂíåAI AgentÁöÑËá™‰∏ªÊÄß‰∏éÊô∫ËÉΩË°®Áé∞„ÄÇ
- **ÊúçÂä°Êèí‰ª∂ (service)**:
  - **‰ΩúÁî®**: ÂÖÅËÆ∏Êèí‰ª∂Âêë‰∏ªÂ∫îÁî®Ê≥®ÂÜåÁã¨Á´ãÁöÑ HTTP Ë∑ØÁî±ÔºåÊèê‰æõÈ¢ùÂ§ñÁöÑÊúçÂä°Êé•Âè£ÔºåÂ¶ÇÂõæÂ∫äÊúçÂä° (`ImageServer`)„ÄÇÈÉ®ÂàÜÊúçÂä°Êèí‰ª∂ÔºàÂ¶Ç `VCPLog`Ôºâ‰πüÂèØËÉΩÂà©Áî®Áªü‰∏Ä WebSocket ÊúçÂä°ËøõË°å‰ø°ÊÅØÊé®ÈÄÅ„ÄÇ
  - **Ê¨°Êó∂‰ª£ÊÑè‰πâ**: Â∞Ü VCP Âπ≥Âè∞Êú¨Ë∫´ËΩ¨Âèò‰∏∫‰∏Ä‰∏™ÂèØÊâ©Â±ïÁöÑÊúçÂä°‰∏≠ÂøÉÔºåÊîØÊåÅÊõ¥Â§çÊùÇÁöÑÂ∫îÁî®Âú∫ÊôØ„ÄÇ
- **Ê∑∑ÂêàÊúçÂä°Êèí‰ª∂ (hybridservice)**:
  - **‰ΩúÁî®**: ËøôÊòØ `service` Âíå `messagePreprocessor` Êèí‰ª∂ÁöÑÁªìÂêà‰Ωì„ÄÇÂÆÉÊó¢ÂèØ‰ª•ÂÉèÊ∂àÊÅØÈ¢ÑÂ§ÑÁêÜÂô®‰∏ÄÊ†∑Âú® AI ËØ∑Ê±ÇÂâç‰øÆÊîπÊ∂àÊÅØÊµÅÔºåÂèàÂèØ‰ª•ÂÉèÊúçÂä°Êèí‰ª∂‰∏ÄÊ†∑Ê≥®ÂÜåËá™Â∑±ÁöÑ API Ë∑ØÁî±Êù•Êèê‰æõÂêéÂè∞ÊúçÂä°„ÄÇ
  - **ÈÄÇÁî®Âú∫ÊôØ**: ÈùûÂ∏∏ÈÄÇÂêàÈÇ£‰∫õÊó¢ÈúÄË¶ÅÂêéÂè∞ÁÆ°ÁêÜÁïåÈù¢ÔºàÈÄöËøá API Ë∑ØÁî±ÂÆûÁé∞ÔºâÔºåÂèàÈúÄË¶ÅÁõ¥Êé•Âπ≤È¢ÑËÅäÂ§©‰∏ä‰∏ãÊñáÁöÑÂ§çÊùÇÊèí‰ª∂Ôºå‰æãÂ¶Ç `VCPTavern` ‰∏ä‰∏ãÊñáÊ≥®ÂÖ•Âô®„ÄÇ
  - **Ê¨°Êó∂‰ª£ÊÑè‰πâ**: ‰∏∫ÊûÑÂª∫ÂäüËÉΩÊõ¥ÂÆåÊï¥„ÄÅÊõ¥Ëá™Ê¥ΩÁöÑÂ§çÊùÇÊèí‰ª∂Êèê‰æõ‰∫ÜÂèØËÉΩÔºå‰ΩøÂæóÊèí‰ª∂Êú¨Ë∫´Â∞±ËÉΩÂΩ¢Êàê‰∏Ä‰∏™ÂåÖÂê´‚ÄúÂâçÁ´ØÈÄªËæëÔºàÈ¢ÑÂ§ÑÁêÜÔºâ‚ÄùÂíå‚ÄúÂêéÁ´ØÁÆ°ÁêÜÔºàÊúçÂä°Ôºâ‚ÄùÁöÑËø∑‰Ω†Â∫îÁî®„ÄÇ
- **ÂàÜÂ∏ÉÂºèËäÇÁÇπ (Distributed Node)**:
- **‰ΩúÁî®**: ÂÖÅËÆ∏Â∞Ü VCP ÁöÑÁÆóÂäõÊâ©Â±ïÂà∞Â§öÂè∞Êú∫Âô®„ÄÇ‰∏Ä‰∏™Áã¨Á´ãÁöÑ `VCPDistributedServer` ËäÇÁÇπÂèØ‰ª•ËøêË°åÂú®‰ªª‰ΩïÂú∞ÊñπÔºåÂä†ËΩΩÂÖ∂Êú¨Âú∞ÁöÑÊèí‰ª∂ÔºåÂπ∂ÈÄöËøá WebSocket ËøûÊé•Âà∞‰∏ªÊúçÂä°Âô®„ÄÇ
- **Ê¨°Êó∂‰ª£ÊÑè‰πâ**: ËøôÊòØ VCP ÂÆûÁé∞‚ÄúÊó†ÈôêÁÆóÂäõ‚ÄùÂíå‚ÄúÁæ§‰ΩìÊô∫ËÉΩ‚ÄùÁöÑÁâ©ÁêÜÂü∫Á°Ä„ÄÇÈÄöËøáÂàÜÂ∏ÉÂºèÁΩëÁªúÔºåÂèØ‰ª•Â∞ÜÈúÄË¶ÅÂ§ßÈáèËÆ°ÁÆóËµÑÊ∫êÔºàÂ¶Ç GPU ÂØÜÈõÜÂûã‰ªªÂä°ÔºâÊàñÈúÄË¶ÅËÆøÈóÆÁâπÂÆöÁΩëÁªú/Á°¨‰ª∂ÔºàÂ¶ÇÂÜÖÁΩëÊñá‰ª∂ÊúçÂä°Âô®„ÄÅÁâπÊÆäÁ°¨‰ª∂ÔºâÁöÑÊèí‰ª∂ÈÉ®ÁΩ≤Âú®ÊúÄÂêàÈÄÇÁöÑÊú∫Âô®‰∏äÔºåËÄå‰∏ªÊúçÂä°Âô®Âàô‰Ωú‰∏∫Áªü‰∏ÄÁöÑË∞ÉÂ∫¶‰∏≠ÂøÉÔºåÂØπ AI ÈÄèÊòéÂú∞Ë∞ÉÁî®Ëøô‰∫õËøúÁ®ãËµÑÊ∫ê„ÄÇ

### ÂÖ®Â±ÄÂ§öÊ®°ÊÄÅÊô∫ËÉΩË∑ØÁî±‰∏éÊï∞ÊçÆÈìæ

- **ËÆæËÆ°Âì≤Â≠¶**: ÊâìÁ†¥Ê®°ÊÄÅÂ£ÅÂûíÔºåÂÆûÁé∞‰ªªÊÑèÊï∞ÊçÆÁ±ªÂûãÂú® VCP ÁΩëÁªú‰∏≠ÁöÑÊó†ÁºùÊµÅËΩ¨„ÄÅÊô∫ËÉΩËΩ¨ËØë‰∏éÈ´òÊïàÂ§ÑÁêÜÔºåÊûÑÂª∫‰∏Ä‰∏™ÁúüÊ≠£ÊÑè‰πâ‰∏äÁöÑÂÖ®Â™í‰ΩìÊô∫ËÉΩÁîüÊÄÅ„ÄÇ
- **Ê†∏ÂøÉËÉΩÂäõ**:
    - **Base64 Áõ¥ÈÄöËΩ¶**: ÂÖÅËÆ∏ AI Âú® `tool` Â≠óÊÆµ‰∏≠Áõ¥Êé•ÂºïÂÖ• Base64 Êï∞ÊçÆÔºåÊûÅÂ§ßÂú∞ÁÆÄÂåñ‰∫ÜÂ§öÂ™í‰ΩìÂÜÖÂÆπÁöÑÂç≥Êó∂Ë∞ÉÁî®„ÄÇ
    - **ÂÖ®Â±ÄÊñá‰ª∂ API (`VCPFileAPI` v4.0 Ë∂ÖÊ†àËøΩË∏™Áâà)**: ÂÆûÁé∞‰∫ÜÈù©ÂëΩÊÄßÁöÑÂÖ®URLË∂ÖÊ†àËøΩË∏™„ÄÇÁé∞Âú®ÔºåAIÂú®‰ªª‰ΩïÂàÜÂ∏ÉÂºèËäÇÁÇπ‰∏äÊèê‰∫§Êú¨Âú∞Êñá‰ª∂Ë∑ØÂæÑÔºàÂ¶Ç `H:\MCP\123.txt`ÔºâÔºå‰∏ªÊúçÂä°Âô®ÈÉΩËÉΩÊô∫ËÉΩËß£ÊûêÂÖ∂Êù•Ê∫êÂπ∂Ëá™Âä®ÂêëÊ∫êËäÇÁÇπËØ∑Ê±ÇÊñá‰ª∂ÁöÑBase64Êï∞ÊçÆÔºåÂÆûÁé∞Êó†ÁºùÁöÑË∑®ÊúçÂä°Âô®Êñá‰ª∂Ë∞ÉÁî®„ÄÇ
        - **ÂàÜÂ∏ÉÂºèÂ§öÊ®°ÊÄÅ‰º†Ëæì (v4.0 Ê†∏ÂøÉÂçáÁ∫ß)**: ÂÄüÂä©**ÂÖ® URL Ë∂ÖÊ†àËøΩË∏™**Ôºå‰ªªÊÑèËäÇÁÇπ‰∏äÁöÑ AI ÈÉΩËÉΩÁõ¥Êé•‰ΩøÁî®Êú¨Âú∞Êñá‰ª∂Ë∑ØÂæÑËøõË°åË∑®ÊúçË∞ÉÁî®„ÄÇ‰∏ªÊúçÂä°Âô®‰ºöËá™Âä®ËøΩË∏™Âπ∂ÊãâÂèñÊï∞ÊçÆÔºåÂΩªÂ∫ïÊâìÈÄö‰∫ÜÂàÜÂ∏ÉÂºèÁΩëÁªú‰∏≠ÁöÑÊñá‰ª∂Â≠§Â≤õÔºåËÆ©Â§öÊ®°ÊÄÅÊï∞ÊçÆÂú®ÊòüÂûãÁΩëÁªú‰∏≠Êó†ÁºùÊµÅËΩ¨„ÄÇ
    - **Ë∑®Ê®°ÊÄÅÊô∫ËÉΩËΩ¨ËØë**: ÂÆûÁé∞È´òÈò∂Ê®°ÂûãÂØπ‰ΩéÈò∂Ê®°ÂûãÁöÑ‚ÄúËÉΩÂäõËµãËÉΩ‚Äù„ÄÇ‰æãÂ¶ÇÔºåËÉΩËØÜÂà´Èü≥È¢ëÁöÑÊ®°ÂûãÂèØ‰ª•Â∏ÆÂä©Á∫ØÊñáÊú¨Ê®°ÂûãÔºåÂ∞ÜÂÖ∂Êó†Ê≥ïÂ§ÑÁêÜÁöÑÈü≥È¢ë Base64 Êï∞ÊçÆÊô∫ËÉΩËΩ¨ËØë‰∏∫ÊñáÂ≠óÊèèËø∞ÔºåÂèçÂì∫ÁªôËØ∑Ê±ÇÊñπ„ÄÇ
    - **Êô∫ËÉΩÂìçÂ∫îË∑ØÁî±**: VCP Ê†∏ÂøÉËÉΩÂ§üÊô∫ËÉΩÂà§Êñ≠Êèí‰ª∂ËøîÂõûÁöÑÊòØ‰º†ÁªüÁöÑ stdio ÊñáÊú¨‰ø°ÊÅØÔºåËøòÊòØÂåÖÂê´ Base64 ÁöÑÁªìÊûÑÂåñÊï∞ÊçÆÔºåÂπ∂Ëá™Âä®ÈÄâÊã©Ê≠£Á°ÆÁöÑÊ∏†ÈÅìËøõË°åËΩ¨ÂèëÂíåÂ§ÑÁêÜ„ÄÇ
    - **Â§ö Agent Âçè‰ΩúÂÖ±‰∫´**: Âú®Â§ö Agent ÂçèÂêå‰ªªÂä°‰∏≠ÔºåÂÆûÁé∞ Base64 Êï∞ÊçÆÁöÑÊô∫ËÉΩÂÖ±‰∫´ÔºåÂπ∂ËÉΩÊ†πÊçÆÈúÄË¶ÅÂ∞ÜÂÖ∂Âä®ÊÄÅËΩ¨ËØë‰∏∫‰∏¥Êó∂ÁöÑ `fileurl`ÔºåÊñπ‰æøÂÖ∂‰ªñ Agent ÊàñÂâçÁ´ØÂ∫îÁî®ËÆøÈóÆ„ÄÇ
- **Ê∑±Â∫¶Ëß£ËØª**: ËøôÂ•óÂûÇÁõ¥ÊâìÈÄöÁöÑÊû∂ÊûÑÔºåÊÑèÂë≥ÁùÄ VCP ‰∏çÂÜç‰ªÖ‰ªÖÂ§ÑÁêÜÊñáÊú¨Êåá‰ª§ÔºåËÄåÊòØËøõÂåñÊàê‰∫Ü‰∏Ä‰∏™ËÉΩÂ§üÁêÜËß£„ÄÅÂ§ÑÁêÜÂíå‰º†ÈÄíÂõæÂÉè„ÄÅÈü≥È¢ë„ÄÅËßÜÈ¢ëÁ≠âÂ§öÁßçÂ™í‰ΩìÊ†ºÂºèÁöÑ‚ÄúÂÖ®Ê®°ÊÄÅÊìç‰ΩúÁ≥ªÁªü‚Äù„ÄÇÂÆÉ‰∏∫ÂºÄÂèëËÉΩÂ§üÁúã„ÄÅÂê¨„ÄÅËØ¥ÁöÑÂ§çÊùÇ AI Agent Êèê‰æõ‰∫ÜÂùöÂÆûÁöÑÂü∫Á°ÄËÆæÊñΩ„ÄÇ‰∏Ä‰∏™Ê¢¶ÂπªËà¨ÁöÑÂ∫îÁî®Âú∫ÊôØÊòØÔºöAI Agent ÂèØ‰ª•ÈÄöËøá‰∏Ä‰∏™ÈÉ®ÁΩ≤Âú®ËøúÁ®ãÊúçÂä°Âô®‰∏äÁöÑ `FileManager` Êèí‰ª∂ÔºåÁõ¥Êé•ËØªÂèñ WebDAV ‰∏äÁöÑÂ§öÂ™í‰ΩìÊñá‰ª∂ÔºàÂ¶Ç‰ºöËÆÆÂΩïÈü≥„ÄÅËßÜÈ¢ëÁâáÊÆµÔºâÔºåËé∑ÂèñÂÖ∂ Base64 Êï∞ÊçÆÊµÅÔºåÂπ∂ÂØπÂÖ∂ËøõË°åÂç≥Êó∂ÂàÜÊûêÂíåÊÄªÁªìÔºåÊï¥‰∏™ËøáÁ®ãÂØπ AI Êù•ËØ¥Â¶ÇÂêåËØªÂèñÊú¨Âú∞Êñá‰ª∂‰∏ÄÊ†∑Ëá™ÁÑ∂„ÄÇ
 
### ‰ªªÂä°Ë∞ÉÂ∫¶‰∏éÂÖ®Á∫øËøΩË∏™
- **AI ËßÑÂàíÊú™Êù•**: ÈÄöËøá `/v1/schedule_task` ÂàõÂª∫Ê†áÂáÜÂåñ JSON ‰ªªÂä°ÔºåÂÆûÁé∞‚ÄúÂª∂ËøüÊâßË°å‚ÄùÂíå‚ÄúÂæ™ÁéØÂ∑•‰ΩúÊµÅ‚Äù„ÄÇ‰ΩøÂæóAgentÂèëËµ∑ÁöÑ‰ªª‰ΩïÂ∑•ÂÖ∑Ë∞ÉÁî®Ëá™Â∏¶ÂÆöÊó∂Âô®ÔºåËÉΩË¢´Êú™Êù•Ëß¶Âèë„ÄÇÊØîÂ¶ÇÂàõÂª∫Á±≥ÂÆ∂Ê¥óË°£Êú∫Ê¥óË°£ÊúçÁöÑ‰ªªÂä°ÂêéÔºåÂÜçÊèêÈÜíÁî®Êà∑4Â∞èÊó∂ÂêéÊôíË°£Êúç„ÄÇ
- **ÂÖ®Á∫ø‰ªªÂä°ËøΩË∏™** ÔºöÈÄöËøáÂº∫ÂÅ•ÁöÑWSÁÆ°ÁΩëÂèØ‰ª•ËøΩÊ∫Ø‰ªª‰ΩïVCPË∞ÉÁî®„ÄÇÁî®Êà∑ÂíåAgentÊ∏ÖÊô∞ÂèØÊü•ÊØè‰∏Ä‰∏™Ë∞ÉÁî®Á∫øÁ®ãÁî±Âì™‰∏™ÊúçÂä°Âô®‰∏äÁöÑÂì™‰∏™AgentÂèëËµ∑ÔºåÊï∞ÊçÆÊµÅÂêë‰ΩïÂ§ÑÔºåË¢´Âì™‰∫õÂàÜÂ∏ÉÊû∂ÊûÑÂ±ïÂºÄÔºå‰∏ÄÂàáÁªìÊûúÂèØÊ∫ØÊ∫ê„ÄÇ
- **Ê∑±Â∫¶Ëß£ËØª**: ËøôÈ°πÂäüËÉΩÊûÅÂ§ßÂú∞Â¢ûÂº∫‰∫Ü AI Agent ÁöÑËá™‰∏ªÊÄß„ÄÇAgent ‰∏çÂÜç‰ªÖ‰ªÖÊòØË¢´Âä®ÂìçÂ∫îÔºåËÄåÊòØÂèØ‰ª•‰∏ªÂä®ËßÑÂàíÊú™Êù•Ë°åÂä®Ôºå‰æãÂ¶ÇÔºö‚ÄúÊèêÈÜíÊàëÊòéÂ§©‰∏ãÂçà‰∏âÁÇπÂºÄ‰ºö‚Äù„ÄÅ‚ÄúÊØèÂë®‰∫îËá™Âä®ÊäìÂèñÂπ∂ÊÄªÁªì‰∏ÄÊ¨°È°πÁõÆÊä•Âëä‚Äù„ÄÅ‚ÄúÂçäÂ∞èÊó∂ÂêéÂÜçÊ¨°Â∞ùËØïË∞ÉÁî®ÈÇ£‰∏™Â§±Ë¥•ÁöÑAPI‚Äù„ÄÇËøôÊòØÂÆûÁé∞È´òÁ∫ß„ÄÅÈïøÊúü„ÄÅÂ§çÊùÇËá™Âä®ÂåñÂ∑•‰ΩúÊµÅÁöÑÂÖ≥ÈîÆÂü∫Áü≥„ÄÇ

### Âä®ÊÄÅÈÖçÁΩÆÂºïÊìé
- **ËÆæËÆ°Âì≤Â≠¶**: ÂÆûÁé∞ AI Ë°å‰∏∫ÁöÑÊ∑±Â∫¶ÂÆöÂà∂‰∏éÂä®ÊÄÅ‰∏ä‰∏ãÊñáÊ≥®ÂÖ•ÔºåËµã‰∫àÈÉ®ÁΩ≤ËÄÖÂú®ÊúçÂä°Âô®ÂêéÁ´ØË∂ÖË∂äÂâçÁ´ØÈôêÂà∂ÁöÑ„ÄÅÂØπ AI Êåá‰ª§ÁöÑÁ≤æÁªÜË∞ÉÊéßËÉΩÂäõ„ÄÇ
- **Ê†∏ÂøÉËÉΩÂäõ**:
    - **ËØ≠‰πâÊÑüÁü•ÂûãÂä®ÊÄÅÁ≥ªÁªüÊèêÁ§∫ËØç**ÔºöVCPÂÆûÁé∞‰∫ÜÂ§öÁªÑ‰ø°ÊÅØÁöÑÂä®ÊÄÅÁ≥ªÁªüÊèêÁ§∫ËØçÔºåÂåÖÂê´‰∏ªÁ≥ªÁªüÂíåÊèí‰ª∂Ôºå‰æãÂ¶ÇÊó∂Èó¥ÔºåÂ§©Ê∞îÔºå‰ªªÂä°ËøõÂ∫¶ÔºåÈü≥‰πêÂàóË°®ÔºåÁΩëÁªúÂèÇÊï∞ÔºåVCPÂ∑•ÂÖ∑Ë∞ÉÁî®Êåá‰ª§ÈõÜÁ≠âÁ≠âÁöÑËá™Âä®Ê≥®ÂÖ•„ÄÇÁ≥ªÁªü‰ºöÊ†πÊçÆ‰∏ä‰∏ãÊñáÁéØÂ¢ÉÔºåÂà§Êñ≠AIÈúÄË¶ÅÁü•ÊôìÂì™‰∫õ‰ø°ÊÅØÔºåÂú®‚ÄúAIÊúâÂøÖË¶ÅÁü•ÈÅì‚ÄùÁöÑÊó∂ÂÄôÔºåËÆ©‚ÄúAIËÇØÂÆöËÉΩÁü•ÈÅì‚ÄùÂøÖË¶ÅÁöÑÁõ∏ÂÖ≥ÂÜÖÂÆπÔºå‰ªéËÄåÂÆûÁé∞Âä®ÊÄÅÂÆΩÊ≥õÁöÑ‰∏ä‰∏ãÊñáÊéßÂà∂„ÄÇ
    - **Â§öÁ∫ßÂèòÈáèÊõøÊç¢**Ôºö`{{Agent*}}`ÔºàÊ®°ÂùóËµ∑ÊâãÂºèÔºåÂèØÂåÖÂê´‰∏ÄÁ∫ß‰ª•‰∏ãÊâÄÊúâÂç†‰ΩçÁ¨¶Ôºâ„ÄÅ`{{Tar*}}`ÔºàÊ®°ÊùøÂåñÁªÑÂêàÂç†‰ΩçÁ¨¶ÔºåÂèØÂåÖÂê´‰∫åÁ∫ß‰ª•‰∏ãÊâÄÊúâÂç†‰ΩçÁ¨¶Ôºâ„ÄÅ`{{Var*}}`ÔºàÂÖ®Â±ÄÊõøÊç¢Âç†‰ΩçÁ¨¶Ôºâ„ÄÅ`{{Sar*}}`ÔºàÊ®°ÂûãÊù°‰ª∂Ê≥®ÂÖ•ÔºâÂÆûÁé∞ÊèêÁ§∫ËØçÂä®ÊÄÅÊãºË£Ö„ÄÇ
    - **‰∏≠ÊñáËØ≠‰πâÁõÆÁöÑÈáèÂåñÁ≥ªÁªü**ÔºöÊú¨ÊúçÂä°Âô®Â∑≤ÁªèÂü∫‰∫éÂéüÂàõÁöÑÂü∫‰∫éÁêÉÊûÅÊäïÂΩ±ÁöÑÊãìÊâëÂàÜÂΩ¢ÁÆóÊ≥ïÔºå‰ΩøÂæó‰∏≠ÊñáÂëΩÈ¢òÂíåÂÜÖÂÆπÁõÆÊ†á‰πãÈó¥ÁöÑÁõ∏ÂÖ≥ÊÄßË∑ùÁ¶ªÂæóÂà∞ÂèØÈù†ÈáèÂåñ„ÄÇ‰ª•Ê≠§ÂÆûÁé∞ÂØπ‰∏ä‰∏ãÊñáÁöÑAIÊ∑∑Ê∑ÜÊÄßÂπªËßâÁöÑËá™Âä®‰øÆÂ§çÔºåÈÅøÂÖçÂπªËßâÁ¥ØÁßØ„ÄÇ
    - **Â§ñÈÉ®Êñá‰ª∂Âä†ËΩΩ**Ôºö`.txt` Êñá‰ª∂Áõ¥Êé•ÂµåÂ•ó‰∏∫ÂèòÈáèÂÄºÔºåÊîØÊåÅÂØåÊñáÊú¨„ÄÇ
    - **Agent Ê≠£ÂàôÂºïÊìé**: Êèê‰æõË¶ÜÁõñ Agent Ë°å‰∏∫ÂÖ®ÊµÅÁ®ãÁöÑÁ≤æÁªÜÂåñÊ≠£ÂàôÊéßÂà∂ËÉΩÂäõÔºåÂπ∂ÈÖçÂ§áÂÆåÊï¥ÁöÑÂõæÂΩ¢ÂåñÁÆ°ÁêÜÁïåÈù¢„ÄÇ
        - **ËÅäÂ§©ÂéÜÂè≤Ê≠£Âàô**: ÂØπËØùÂéÜÂè≤ËøõË°åÁªìÊûÑÂåñÂåπÈÖç‰∏éÂÜÖÂÆπÊèêÂèñ„ÄÇ
        - **Ê∏≤ÊüìÊ≠£Âàô**: Âú®ÂÜÖÂÆπÂ±ïÁ§∫ÂâçÔºåÂØπËæìÂá∫ÊñáÊú¨ËøõË°åÂä®ÊÄÅ‰øÆÊîπÊàñÊ†ºÂºèÂåñ„ÄÇ
        - **Ê∑±Â∫¶Ê≠£Âàô**: Âú®Ê®°ÂûãÁîüÊàêÂõûÂ§çÁöÑÊ†∏ÂøÉÈò∂ÊÆµËøõË°åÂπ≤È¢ÑÔºåÂÆûÁé∞Êõ¥Â∫ïÂ±ÇÁöÑË°å‰∏∫‰øÆÊ≠£„ÄÇ
        - **Content Êï∞ÁªÑÊ≠£Âàô**: ÈíàÂØπÂ§öËΩÆÂØπËØùÁöÑ `content` Êï∞ÁªÑËøõË°åÂ§çÊùÇÂåπÈÖç‰∏éËΩ¨Êç¢„ÄÇ
    - **VCPSuper‰∏ä‰∏ãÊñáÁªìÊûÑÂáÄÂåñÂô®**ÔºöVCPÊã•ÊúâÂº∫Â§ßÊó†ÊØîÂíåÊ∑±Â∫¶ÂæÆË∞ÉÁöÑ‰∏ä‰∏ãÊñáÁªìÊûÑÂáÄÂåñÂô®Ôºå‰ºöÂú®‰∏ä‰∏ãÊñáPostÂèëÈÄÅÂâçÂØπÊâÄÊúâÁ©∫Ê†ºÔºåÊç¢Ë°åÔºåÂºïÂè∑ÔºåÊã¨Âè∑ÔºåÈáçÂ§çÂ≠óÁ¨¶ÔºåÊ∫¢Âá∫ËØçÂÖÉÔºåÊ†ºÂºèËæπÁïåËøõË°åÂØπÈΩêÂíåÊéßÂà∂ÔºåÊûÅÂ§ßÊäëÂà∂AIÂú®ÊΩúÁ©∫Èó¥‰∏≠Âá∫Áé∞ÁöÑ‰∏çÂèØÊéßÂô™Â£∞ÂíåÁ¥ØÁßØÊÄßÂπªËßâÔºåÈÄöËøáËØ≠‰πâË∑ùÁ¶ªÈáèÂåñÁÆóÊ≥ïÔºåÂØπAIËæìÂá∫ÂÜÖÂÆπËøõË°åËá™ÈÜíËá™Êü•ÔºåÂÆûÁé∞Â§öÁª¥Â∫¶ÁöÑ‰∏ä‰∏ãÊñáË¥®ÈáèÁü´Ê≠£„ÄÇ
- **Ê∑±Â∫¶Ëß£ËØª**: ËøôÊòØ VCP ÂÆûÁé∞‚ÄúAI Ë°å‰∏∫Â∑•Á®ã‚ÄùÂíå‚ÄúÊåá‰ª§Â∫ìÂç≥‰ª£Á†ÅÈÖçÁΩÆ‚ÄùÁöÑÂÖ≥ÈîÆ„ÄÇÈÄöËøáÂèòÈáèÊõøÊç¢ÔºåÂèØ‰ª•Âä®ÊÄÅÊûÑÂª∫Âíå‰ºòÂåñÊ≥®ÂÖ•Áªô AI ÁöÑÁ≥ªÁªüÊèêÁ§∫ËØç„ÄÅÁî®Êà∑Ê∂àÊÅØÔºåÁîöËá≥Êèí‰ª∂Ë∞ÉÁî®ÂèÇÊï∞Ôºå‰ªéËÄåÂÖãÊúç LLM ÁöÑÁü•ËØÜÊªûÂêé„ÄÅÊó∂Á©∫ÈîôËßâÔºåÂπ∂ËÉΩÈÄöËøáÂÖ®Â±ÄÊñáÊú¨ÊõøÊç¢ËßÑÂàôÔºàÂ¶Ç `DetectorX`Ôºâ‚ÄúÂæÆË∞É‚ÄùAI ÁöÑËæìÂá∫‰π†ÊÉØÔºåÊäëÂà∂‰∏çËâØËæìÂá∫ÊÉØÊÄß„ÄÇ

### AI ‰∏ªÂØºÁöÑÊåÅ‰πÖÂåñËÆ∞ÂøÜ‰∏éËøõÂåñÁ≥ªÁªü

VCP ÁöÑËÆ∞ÂøÜÁ≥ªÁªüÊ†πÊ§ç‰∫é‰∏Ä‰∏™Ê†∏ÂøÉÂì≤Â≠¶ÔºöËÆ∞ÂøÜ‰∏ç‰ªÖÊòØ‰ø°ÊÅØÂ≠òÂÇ®ÔºåÊõ¥ÊòØ AI Ëá™ÊàëËøõÂåñ„ÄÅËÉΩÂäõÂÜÖÂåñ„ÄÅ‰∏™ÊÄßÂΩ¢ÊàêÁöÑÊ†∏ÂøÉÈ©±Âä®Âäõ„ÄÇÊàë‰ª¨ÈÄöËøá‰∏ÄÂ•óÈù©ÂëΩÊÄßÁöÑÊó•ËÆ∞‰∏éËÆ∞ÂøÜÂ∑•ÂÖ∑ÔºåÂ∞ÜËøô‰∏ÄÁêÜÂøµÂèò‰∏∫Áé∞ÂÆûÔºåÊûÑÂª∫‰∫Ü‰∏öÁïåÈ¢ÜÂÖàÁöÑËÆ∞ÂøÜÁ≥ªÁªüÔºåÁ™ÅÁ†¥‰∫Ü‰º†ÁªüÈïøËÆ∞ÂøÜÂú®Êó∂Èó¥Áª¥Â∫¶„ÄÅ‰∫ã‰ª∂È°∫Â∫èÂíåÈÄªËæëÂÖ≥ËÅî‰∏äÁöÑ‰∏âÂ§ßÊ®°Á≥äÈ´òÂ≥∞„ÄÇ

#### ËÆ∞ÂøÜÁöÑÂàõÂª∫‰∏éÁÆ°ÁêÜ

- **Ëá™‰∏ªËÆ∞ÂøÜÂàõÂª∫‰∏éÁºñËæë**: Agent ÈÄöËøá `DailyNoteWrite` (ÂºÇÊ≠•) Âíå `DailyNoteEdit` Êèí‰ª∂ÔºåÂèØ‰ª•‰∏ªÂä®ÂàõÂª∫„ÄÅÊõ¥Êñ∞ÂíåÁºñËæëÊó•ËÆ∞ÔºåÂÆûÁé∞ÊµÅÁïÖÁöÑ‰∏ä‰∏ãÊñáËÆ∞ÂøÜÊõ¥Êñ∞„ÄÇÊâÄÊúâÊó•ËÆ∞‰ª• `.txt` Êàñ `.md` Ê†ºÂºè‰øùÂ≠òÔºåÂπ∂‰∏éÂêéÁ´ØÁöÑÂêëÈáèÊï∞ÊçÆÂ∫ìÂÆûÁé∞Âü∫‰∫éÂìàÂ∏åÂÄº„ÄÅÊó∂Èó¥Êà≥Âíå Base64 Â≠óÊÆµÁöÑÂéüÂ≠êÁ∫ßÂÆûÊó∂ÂêåÊ≠•„ÄÇ
- **ÊâπÈáèËÆ∞ÂøÜÊï¥ÁêÜ (`DailyNoteManager`)**: ËøôÊòØ‰∏Ä‰∏™Âº∫Â§ßÁöÑÊó•ËÆ∞ÊâπÂ§ÑÁêÜÊèí‰ª∂ÔºåÂª∫ËÆÆÁî±È´òÁ∫ßÊ®°ÂûãÔºàÂ¶Ç Claude 4.5 Opus, Gemini 3 ProÔºâÈ©±Âä®ÁöÑ‚ÄúËÆ∞ÂøÜÂ§ßÂ∏à‚Äù Agent ‰ΩøÁî®ÔºåÂØπÊåáÂÆöÊó∂Èó¥ÊÆµÁöÑÊó•ËÆ∞ËøõË°å‰∫ã‰ª∂ÂêàÂπ∂„ÄÅÁªìÊûÑ‰ºòÂåñ„ÄÅÂÜó‰ΩôÂéªÈô§Á≠âÈ´òÁ∫ßÊï¥ÁêÜ„ÄÇ
- **Ê∑±Â∫¶ÂéÜÂè≤ÂõûÊ∫Ø (`DeepMemo`)**: ÁªèËøáÈáçÂ§ßÂçáÁ∫ßÔºå`DeepMemo` Êàê‰∏∫‰∏Ä‰∏™Âº∫Â§ßÁöÑÂéÜÂè≤ÂØπËØùÊ£ÄÁ¥¢ÂºïÊìéÔºåÈááÁî®ÂàõÊñ∞ÁöÑ**‰∏âÈáçÊ∑∑ÂêàÊ£ÄÁ¥¢Êû∂ÊûÑ**ÔºåÁ≤æÂáÜÂÆö‰Ωç‰ªª‰ΩïÂéÜÂè≤ÂØπËØùÁâáÊÆµÔºö
    1.  **Á¨¨‰∏ÄÂ±ÇÔºö`Fuse.js` Ê®°Á≥äÊêúÁ¥¢**: Êèê‰æõÈó™ÁîµËà¨ÁöÑÂÖ®ÊñáÊ®°Á≥äÊêúÁ¥¢Ôºå‰øùËØÅÂè¨ÂõûÁöÑÂπøÂ∫¶„ÄÇ
    2.  **Á¨¨‰∫åÂ±ÇÔºö`BM25` ÂÖ≥ÈîÆËØçÂä†ÊùÉ**: Ê†πÊçÆÂÖ≥ÈîÆËØçÁöÑÁ®ÄÊúâÂ∫¶ÂíåÈ¢ëÁéáÂØπÁªìÊûúËøõË°åÊéíÂ∫èÔºåÊèêÂçáÁõ∏ÂÖ≥ÊÄß„ÄÇ
    3.  **Á¨¨‰∏âÂ±ÇÔºö`Reranker` ËØ≠‰πâÁ≤æÊéí**: Áî±Âº∫Â§ßÁöÑ Reranker Ê®°ÂûãËøõË°åÊúÄÁªàÁöÑËØ≠‰πâÁõ∏ÂÖ≥ÊÄßÊéíÂ∫èÔºåÁúüÊ≠£ÁêÜËß£Êü•ËØ¢ÊÑèÂõæÔºåÁ°Æ‰øùÁªìÊûúÁöÑÊúÄÈ´òË¥®Èáè„ÄÇ‰∏∫‰∫ÜÁ™ÅÁ†¥ÈáçÊéíÊ®°ÂûãÔºàÂ¶Ç32kÔºâÁöÑ‰∏ä‰∏ãÊñáÁ™óÂè£ÈôêÂà∂ÔºåÂú®Â§ÑÁêÜÊµ∑ÈáèËÅäÂ§©ËÆ∞ÂΩïÊó∂ÔºåÁ≥ªÁªüÂàõÊñ∞ÊÄßÂú∞ÂºïÂÖ•‰∫Ü**ÁëûÂ£´ËΩÆÁßØÂàÜÂà∂ÁöÑÈî¶Ê†áËµõÁ≥ªÁªü**Âπ∂ÂÜÖÁΩÆ**ËæπÁºòË°∞Âáè**ÁÆóÊ≥ïÔºåÊûÅÂ§ß‰øùËØÅ‰∫ÜÂú®Ë∂ÖÈïøÊñáÊú¨‰∏≠‰πüËÉΩÂÆûÁé∞Á≤æÂáÜÁöÑÁõ∏ÂÖ≥ÊÄßÂè¨Âõû„ÄÇ
- **ËØ≠‰πâÁΩëÁªúÁÆ°ÁêÜ (`SGManager`)**: ÂÖÅËÆ∏ Agent Áõ¥Êé•ÁÆ°ÁêÜÁü•ËØÜÂ∫ìÁöÑ‚ÄúËØçÂÖÉÁªÑÊçïÁΩë‚ÄùÂÖ≥Á≥ªÁªìÊûÑÔºåÊûÑÂª∫Ê∑±Â±ÇÈÄªËæëÂÖ≥ËÅî„ÄÇ

#### ‰ºÅ‰∏öÁ∫ß RAG Êï∞ÊçÆÂ∫ìÊû∂ÊûÑ

VCP ÁöÑ RAG Êó•ËÆ∞Á≥ªÁªüËÉåÂêéÊòØ‰∏Ä‰∏™ÁªèËøáÊ∑±Â∫¶‰ºòÂåñÁöÑ„ÄÅÈ´òÊÄßËÉΩÁöÑÂêëÈáèÊï∞ÊçÆÂ∫ìÁÆ°ÁêÜÂô® (`VectorDBManager.js`)ÔºåÁ°Æ‰øù‰∫ÜËÆ∞ÂøÜÁöÑÂÆûÊó∂ÂêåÊ≠•„ÄÅÈ´òÊïàÊ£ÄÁ¥¢ÂíåÈïøÊúüÁ®≥ÂÆö„ÄÇ

- **È´òÊÄßËÉΩ HNSW Á¥¢Âºï**: ÈááÁî®‰∏öÁïåÈ¢ÜÂÖàÁöÑ `hnswlib-node` Â∫ìÔºåÂü∫‰∫é HNSW ÁÆóÊ≥ïÊûÑÂª∫ÂêëÈáèÁ¥¢ÂºïÔºåÂç≥‰ΩøÂú®Êï∞Áôæ‰∏áÁ∫ßÂà´ÁöÑÊó•ËÆ∞ÁâáÊÆµ‰∏≠Ôºå‰πüËÉΩÂÆûÁé∞ÊØ´ÁßíÁ∫ßÁöÑËøë‰ººÊúÄËøëÈÇªÊêúÁ¥¢„ÄÇ
- **Êô∫ËÉΩÁöÑÂ¢ûÈáè‰∏éÂÖ®ÈáèÂêåÊ≠•**: ÈÄöËøá `chokidar` ÂÆûÊó∂ÁõëÊéßÊñá‰ª∂ÂèòÂä®ÔºåÂπ∂ÁªìÂêàÂìàÂ∏åÊ†°È™åÔºåÂÆûÁé∞**Âè•Á∫ßÂéüÂ≠êÊìç‰Ωú**ÁöÑÂ¢ûÈáèÊõ¥Êñ∞ÊàñÂ§ßËßÑÊ®°ÂÜÖÂÆπÂèòÊõ¥Êó∂ÁöÑÂÖ®ÈáèÈáçÂª∫ÔºåÁ°Æ‰øùÊï∞ÊçÆ‰∏ÄËá¥ÊÄß‰∏éÁ¥¢ÂºïÊÄßËÉΩ„ÄÇ
- **ÂΩªÂ∫ïÁöÑÂºÇÊ≠•‰∏éÂ§öÁ∫øÁ®ãÊû∂ÊûÑ**: ÊâÄÊúâÊ†∏ÂøÉÂ§ÑÁêÜÊµÅÁ®ãÔºàÂêëÈáèÂåñ„ÄÅÁ¥¢ÂºïÊûÑÂª∫„ÄÅÊêúÁ¥¢ÔºâÈÉΩÂú®Áã¨Á´ãÁöÑ Worker Á∫øÁ®ã‰∏≠ÂÆåÊàêÔºåÈò≤Ê≠¢ÈòªÂ°ûÊúçÂä°Âô®‰∏ªÁ∫øÁ®ãÔºå‰øùËØÅÁ≥ªÁªüÈ´òÂπ∂ÂèëÂìçÂ∫îËÉΩÂäõ„ÄÇ
- **Á≤æÁªÜÂåñÁöÑÂÜÖÂ≠òÁÆ°ÁêÜ‰∏éÊÄßËÉΩ‰ºòÂåñ**: ÈááÁî®ÊáíÂä†ËΩΩ (Lazy Loading)„ÄÅLRU ÁºìÂ≠òÊ∑òÊ±∞„ÄÅÁ¥¢ÂºïÈ¢ÑÁÉ≠ (Pre-Warming) ÂíåÊü•ËØ¢ÁªìÊûúÁºìÂ≠òÁ≠âÂ§öÁßçÁ≠ñÁï•ÔºåÂú®‰øùËØÅÈ´òÊÄßËÉΩÁöÑÂêåÊó∂ÔºåÂ∞ÜÂÜÖÂ≠òÂç†Áî®ÊéßÂà∂Âú®ÂêàÁêÜËåÉÂõ¥„ÄÇ
- **‰ºÅ‰∏öÁ∫ßÈ≤ÅÊ£íÊÄß**: ÂÜÖÁΩÆ API ÈáçËØïÊú∫Âà∂„ÄÅÈ´òÂ∫¶ÂèØÈÖçÁΩÆÁöÑÊ†∏ÂøÉÂèÇÊï∞„ÄÅÂ§öÈáçÂå∫ÂùóÂåñ RAG ÁÆ°ÁêÜ‰∏éÂ§á‰ªΩ„ÄÅËá™Âä®ÊäóÂ¥©Ê∫ÉËÉΩÂäõ„ÄÅÊï∞ÊçÆÂ∫ìÊçüÊØÅËá™‰øÆÂ§çÈïúÂÉè‰ª•ÂèäÁâàÊú¨ÂõûÊ∫ØÂäüËÉΩÔºåÁ°Æ‰øùËÆ∞ÂøÜÊï∞ÊçÆÁöÑÈ´òÂèØÁî®‰∏éÈ´òÂèØÈù†ÊÄß„ÄÇ

#### ËÆ∞ÂøÜÂè¨ÂõûÊú∫Âà∂ÁöÑÈù©ÂëΩ

‰∏∫‰∫ÜÂÆûÁé∞ÂØπËÆ∞ÂøÜÁöÑÁ≤æÂáÜ„ÄÅÈ´òÊïà„ÄÅÊô∫ËÉΩÂåñË∞ÉÁî®ÔºåVCP ËÆæËÆ°‰∫ÜÂõõÁßç‰∏çÂêåÁöÑÊó•ËÆ∞Â£∞ÊòéÊ®°ÂºèÔºåÂπ∂ËæÖ‰ª•‰∏ÄÁ≥ªÂàóÊ¨°Êó∂‰ª£È´òÁ∫ßÂè¨ÂõûÁÆóÊ≥ïÔºö

- **`{{ËßíËâ≤Êó•ËÆ∞Êú¨}}` (ÊúçÂä°Âô®ÂéüÁîü)**:
  - **Â∑•‰ΩúÊ®°Âºè**: **Êó†Êù°‰ª∂ÂÖ®ÊñáÊ≥®ÂÖ•**„ÄÇ
  - **ÊèèËø∞**: ÊúçÂä°Âô®ÂÜÖÁΩÆÁöÑÂü∫Á°ÄË∞ÉÁî®ÊñπÂºèÔºåÂ∞ÜÊåáÂÆöËßíËâ≤ÁöÑ**ÊâÄÊúâ**Êó•ËÆ∞ÂÜÖÂÆπÂÆåÊï¥Ê≥®ÂÖ•„ÄÇ
  - **ÈÄÇÁî®Âú∫ÊôØ**: ÈúÄË¶ÅËßíËâ≤ÂÆåÊï¥ÂõûÈ°æÂÖ∂ÊâÄÊúâËÆ∞ÂøÜÔºåÊàñÂØπÊï¥‰∏™Êó•ËÆ∞ËøõË°åÂÖ®Èù¢ÊÄªÁªìÊó∂„ÄÇ

- **`[[ËßíËâ≤Êó•ËÆ∞Êú¨]]` (Êèí‰ª∂)**:
  - **Â∑•‰ΩúÊ®°Âºè**: **Êó†Êù°‰ª∂ RAG ÁâáÊÆµÊ£ÄÁ¥¢**„ÄÇ
  - **ÊèèËø∞**: Áõ¥Êé•Ê†πÊçÆÂΩìÂâçÂØπËØùÁöÑ‰∏ä‰∏ãÊñáÔºå‰ªéÊåáÂÆöÁöÑÊó•ËÆ∞ÂêëÈáèÊï∞ÊçÆÂ∫ì‰∏≠Ê£ÄÁ¥¢Âá∫ÊúÄÁõ∏ÂÖ≥ÁöÑ**ËÆ∞ÂøÜÁâáÊÆµ**„ÄÇ
  - **È´òÁ∫ßÁî®Ê≥ï**: ÊîØÊåÅÂº∫Â§ßÁöÑ**Êó∂Èó¥ÊÑüÁü•Ê£ÄÁ¥¢**„ÄÅ**ËØ≠‰πâÁªÑÂ¢ûÂº∫Ê£ÄÁ¥¢**„ÄÅ**RerankÁ≤æÊéí**ÔºåÂπ∂ÂèØÈÄöËøá `[[ËßíËâ≤Êó•ËÆ∞Êú¨:1.5]]` ÁöÑËØ≠Ê≥ïÊù•Âä®ÊÄÅË∞ÉÊï¥Ê£ÄÁ¥¢ÁâáÊÆµÁöÑÊï∞Èáè„ÄÇ

- **`&lt;&lt;ËßíËâ≤Êó•ËÆ∞Êú¨&gt;&gt;` (Êèí‰ª∂)**:
  - **Â∑•‰ΩúÊ®°Âºè**: **Âü∫‰∫éÁõ∏‰ººÂ∫¶ÈòàÂÄºÁöÑÂÖ®ÊñáÊ≥®ÂÖ•**„ÄÇ
  - **ÊèèËø∞**: Êô∫ËÉΩÁöÑÂÖ®ÊñáÊ≥®ÂÖ•Ê®°Âºè„ÄÇ**Âè™ÊúâÂΩì**ÂΩìÂâçÂØπËØù‰∏ä‰∏ãÊñá‰∏éËØ•Êó•ËÆ∞Êú¨‰∏ªÈ¢òÁöÑÂêëÈáèÁõ∏‰ººÂ∫¶Ë∂ÖËøáÈ¢ÑËÆæÈòàÂÄºÊó∂ÔºåÊâç‰ºöÊ≥®ÂÖ•**ÂÖ®ÈÉ®**Êó•ËÆ∞ÂÜÖÂÆπ„ÄÇ
  - **ÈÄÇÁî®Âú∫ÊôØ**: ÈÄÇÁî®‰∫é‰∏çÁ°ÆÂÆöÂΩìÂâçÂØπËØùÊòØÂê¶‰∏éÊüê‰∏™‰∏ªÈ¢òÈ´òÂ∫¶Áõ∏ÂÖ≥ÔºåÂ∏åÊúõÁî±Á≥ªÁªüËá™Âä®Âà§Êñ≠ÊòØÂê¶Âä†ËΩΩÂÆåÊï¥ËÉåÊôØÁöÑÂú∫Âêà„ÄÇ

- **`„Ää„ÄäËßíËâ≤Êó•ËÆ∞Êú¨„Äã„Äã` (Êèí‰ª∂) - Ê∑∑ÂêàÊ®°Âºè**:
  - **Â∑•‰ΩúÊ®°Âºè**: **Âü∫‰∫éÁõ∏‰ººÂ∫¶ÈòàÂÄºÁöÑ RAG ÁâáÊÆµÊ£ÄÁ¥¢**„ÄÇ
  - **ÊèèËø∞**: ÊúÄÊô∫ËÉΩ„ÄÅÊúÄÁÅµÊ¥ªÁöÑÊ®°Âºè„ÄÇÂÖàËøõË°åÁõ∏‰ººÂ∫¶ËØÑ‰º∞Ôºå**Âè™ÊúâÂΩìÁõ∏‰ººÂ∫¶ËææÊ†áÂêé**ÔºåÊâç‰ºöÂéªÊ£ÄÁ¥¢Áõ∏ÂÖ≥ÁöÑ**ËÆ∞ÂøÜÁâáÊÆµ**ËÄåÈùûÊ≥®ÂÖ•ÂÖ®Êñá„ÄÇ
  - **ÈÄÇÁî®Âú∫ÊôØ**: Â§ßÂûãÊó•ËÆ∞Â∫ìÊúÄÊé®ËçêÁöÑÊó•Â∏∏‰ΩøÁî®Ê®°Âºè„ÄÇÂÆÉÊó¢ËÉΩÈÅøÂÖçÊó†ÂÖ≥‰ø°ÊÅØÁöÑÂπ≤Êâ∞ÔºåÂèàËÉΩÂú®Áõ∏ÂÖ≥Êó∂Âè™ÊèêÂèñÊúÄÂÖ≥ÈîÆÁöÑËÆ∞ÂøÜÁâáÊÆµÔºåÊúÄÂ§ßÈôêÂ∫¶Âú∞‰øùËØÅ‰∫Ü‰∏ä‰∏ãÊñáÁöÑÁ≤æÁ°ÆÊÄßÂíåÈ´òÊïàÊÄß„ÄÇ

#### Ê¨°Êó∂‰ª£È´òÁ∫ßÂè¨ÂõûÁÆóÊ≥ï

- **Âä®ÊÄÅ K ÂÄº**: RAG Ê£ÄÁ¥¢ÁöÑ K ÂÄºÔºàÊ£ÄÁ¥¢Êï∞ÈáèÔºâÁî±Áî®Êà∑ÂèëË®ÄÁöÑÈöæÂ∫¶‰∏é AI ËØùÈ¢òÁöÑÂπøÂ∫¶ÂÖ±ÂêåÂä®ÊÄÅÂÜ≥ÂÆö„ÄÇÁî®Êà∑ËøòÂèØ‰ª•ÈÄöËøá `:‰πòÊï∞` ÁöÑÊñπÂºèÔºàÂ¶Ç `[[Êó•ËÆ∞Êú¨:1.5]]`ÔºâÊù•Âä®ÊÄÅË∞ÉÊï¥„ÄÇ

- **Êó∂Èó¥ÊÑüÁü•Ê£ÄÁ¥¢ (Time-Aware RAG)**:
  - **ÂêØÁî®ËØ≠Ê≥ï**: `[[ËßíËâ≤Êó•ËÆ∞Êú¨::Time]]`
  - **Ê†∏ÂøÉËÉΩÂäõ**: Ëß£ÂÜ≥‚ÄúÊàë‰ª¨‰∏äÂë®ËÅä‰∫ÜÂï•Ôºü‚ÄùÁöÑÂà©Âô®„ÄÇÊèí‰ª∂ÊøÄÊ¥ª**Êó∂Èó¥Ë∑®Â∫¶ÊãüÂêàÁÆóÊ≥ï**ÔºåÊô∫ËÉΩËß£ÊûêÁî®Êà∑ÂèëË®Ä‰∏≠ÁöÑËá™ÁÑ∂ËØ≠Ë®ÄÊó∂Èó¥ÊèèËø∞ÔºàÂ¶Ç‚ÄúÊúÄËøë‚Äù„ÄÅ‚Äú‰∏äÂë®‰∫î‚Äù„ÄÅ‚Äú‰∏â‰∏™ÊúàÂâç‚ÄùÔºâÔºåÂπ∂ËûçÂêàËØ≠‰πâ‰∏éÊó∂Èó¥‰∏§‰∏™Áª¥Â∫¶ËøõË°åÊ∑∑ÂêàÊ£ÄÁ¥¢ÔºåÂÆûÁé∞Á≤æÂáÜÁöÑËÆ∞ÂøÜÂõûÊ∫Ø„ÄÇ

- **ËØ≠‰πâÁªÑÂ¢ûÂº∫Ê£ÄÁ¥¢ (Semantic Group RAG)**:
  - **ÂêØÁî®ËØ≠Ê≥ï**: `[[ËßíËâ≤Êó•ËÆ∞Êú¨::Group]]`
  - **Ê†∏ÂøÉËÉΩÂäõ**: ÂêëÈáèÂüüÁöÑÈÄªËæëÊçïÁΩëÂô®„ÄÇÂÆÉÂÖÅËÆ∏‰Ω†Â∞ÜÈõ∂Êï£ÁöÑÂÖ≥ÈîÆËØçÁªÑÁªáÊàêÂÖ∑ÊúâÁâπÂÆöËØ≠‰πâÁöÑ‚ÄúËØçÁªÑ‚ÄùÔºàÂú®ÁÆ°ÁêÜÈù¢Êùø‰∏≠ÈÖçÁΩÆÔºâ„ÄÇÂΩìÂëΩ‰∏≠ËØçÁªÑÊó∂ÔºåÂÆÉ‰ºöÂ∞ÜÂéüÂßãÊü•ËØ¢‰∏é‚ÄúÁªÑÂêëÈáè‚ÄùËøõË°åÂä†ÊùÉËûçÂêàÔºåÁîüÊàê‰∏Ä‰∏™ËØ≠‰πâÊõ¥Á≤æÁ°ÆÁöÑ‚ÄúÂ¢ûÂº∫Êü•ËØ¢ÂêëÈáè‚ÄùÔºåÊûÅÂ§ßÂú∞ÊèêÂçáÊ£ÄÁ¥¢ÁöÑ**ÂèØÊéßÊÄß**Âíå**ÂáÜÁ°ÆÊÄß**ÔºåËΩªÊùæ‚Äú‰∏ÄÁΩëÊâìÂ∞Ω‚Äù‰∫ã‰ª∂Á∫ø„ÄÅÂÖ≥Á≥ªÊ†ëÁ≠âÂ§çÊùÇÈÄªËæë„ÄÇ

- **Rerank Á≤æÊéíÊ£ÄÁ¥¢ (Precision Ranking)**:
  - **ÂêØÁî®ËØ≠Ê≥ï**: `[[ËßíËâ≤Êó•ËÆ∞Êú¨::Rerank]]`
  - **Ê†∏ÂøÉËÉΩÂäõ**: Âè¨ÂõûÁ≥ªÁªüÁöÑÊúÄÂêé‰∏ÄÂùóÊãºÂõæ„ÄÇÂú®Â∏∏ËßÑÂêëÈáèÊ£ÄÁ¥¢ÔºàË∂ÖÈáèËé∑ÂèñÔºâÂêéÔºåÂ∞ÜÁªìÊûú‰∫§Áªô‰∏Ä‰∏™Êõ¥Âº∫Â§ßÁöÑ Rerank Ê®°ÂûãËøõË°å‰∫åÊ¨°ÊéíÂ∫èÔºåÈÄê‰∏ÄËØÑ‰º∞ÊØè‰∏™ÁªìÊûú‰∏éÈóÆÈ¢òÁöÑÁúüÊ≠£‚ÄúËØ≠‰πâÁõ∏ÂÖ≥ÊÄß‚ÄùÔºåÁ°Æ‰øùÊúÄÁªàÊ≥®ÂÖ•ÁöÑËÆ∞ÂøÜÁâáÊÆµÊòØÁúüÊ≠£‚ÄúÂëΩ‰∏≠Ê†∏ÂøÉ‚ÄùÁöÑ„ÄÇ

- **‰∏âÂ§ßËá™Â≠¶‰π†Á≥ªÁªüÔºöËÆ©ËÆ∞ÂøÜÊõ¥ÊáÇ‰Ω†**:
  - **RAGÂØªÈÅìËá™Â≠¶‰π†**: Á≥ªÁªü‰ºöÊ†πÊçÆÁî®Êà∑ÁöÑ‰∫§‰∫íËÆ∞ÂΩïÂä®ÊÄÅ‰ºòÂåñÊ£ÄÁ¥¢ÁÆóÊ≥ï‰∏éË∑ØÂæÑÔºåËÆ©È´òÈ¢ë„ÄÅÈ´òÊïàÁöÑ‚ÄúÂØªÈÅì‚ÄùÊ®°ÂºèËé∑ÂæóÊõ¥È´òÊùÉÈáç„ÄÇ
  - **TagÊùÉÈáçËá™Â≠¶‰π†**: Ê†πÊçÆÁî®Êà∑ÂØπ‰∏çÂêå‰∏ªÈ¢òÂÜÖÂÆπÁöÑÊü•ËØ¢È¢ëÁéáÔºåËá™Âä®„ÄÅÁºìÊÖ¢Âú∞Ë∞ÉÊï¥Êó•ËÆ∞Êú¨ÂÖ≥ËÅî Tag ÁöÑÊùÉÈáçÔºå‰ΩøÁü•ËØÜÂ∫ìÁöÑÁÑ¶ÁÇπËÉΩËá™Âä®ÂØπÈΩêÁî®Êà∑ÁöÑÊ†∏ÂøÉÂÖ¥Ë∂£„ÄÇ
  - **ËØçÂÖÉÁªÑÊçïÁΩëÁ≥ªÁªüËá™Â≠¶‰π†**: ÁõëÊéßÁî®Êà∑ÁöÑÊü•ËØ¢‰π†ÊÉØÔºåËá™Âä®ÂèëÁé∞Âπ∂Âª∫ËÆÆÂ∞ÜÊñ∞ÁöÑÊ¶ÇÂøµÈõÜ„ÄÅÈÄªËæë‰∏≤Êàñ‰∫ã‰ª∂ÂÖ≥ËÅîËØçÊ±áÁ∫≥ÂÖ•Áé∞ÊúâÁöÑËØ≠‰πâÁªÑÁΩëÁªúÔºåÂÆûÁé∞Áü•ËØÜÁΩëÁªúÁöÑËá™ÊàëË°çÁîü‰∏éËøõÂåñ„ÄÇ

ÈÄöËøáËøôÂ•óÂ±ÇÊ¨°Âåñ„ÄÅÈ´òÂ∫¶Êô∫ËÉΩÁöÑËÆ∞ÂøÜ‰∏éÂè¨ÂõûÁ≥ªÁªüÔºåVCP ‰∏∫ AI Agent Êèê‰æõ‰∫ÜÂâçÊâÄÊú™ÊúâÁöÑÂ§ßËÑëÔºå‰ΩøÂÖ∂ËÉΩÂ§üÊ†πÊçÆ‰∏çÂêåÂú∫ÊôØÂíåÈúÄÊ±ÇÔºåÁÅµÊ¥ªË∞ÉÁî®ÊúÄÂêàÈÄÇÁöÑÁü•ËØÜÔºå‰ªéËÄåË°®Áé∞Âá∫Ë∂ÖÂá°ÁöÑÊô∫ËÉΩ‰∏éÈÄÇÂ∫îÊÄß„ÄÇ

### VCPÂÖÉÊÄùËÄÉÔºöË∂ÖÂä®ÊÄÅÈÄíÂΩíÊÄùÁª¥Èìæ
VCPÁöÑËÆ∞ÂøÜÁ≥ªÁªüÊúÄÁªàÈÄöÂêëÁöÑÔºåÊòØ‰∏ÄÂ•óË∂≥‰ª•È¢†Ë¶ÜÁé∞ÊúâAIÂ∑•‰ΩúÊµÅÁöÑÈù©ÂëΩÊÄßÊû∂ÊûÑ‚Äî‚Äî**VCPÂÖÉÊÄùËÄÉ**„ÄÇÂÆÉ‰∏çÂÜçÊª°Ë∂≥‰∫éÁÆÄÂçïÁöÑ‰ø°ÊÅØÂè¨ÂõûÔºåËÄåÊòØÈÄöËøá‚ÄúË∂ÖÂä®ÊÄÅÈÄíÂΩíÊÄùÁª¥Èìæ‚ÄùÔºåÊ®°ÊãüÁªìÊûÑÂåñÁöÑ„ÄÅÂ§öÈò∂ÊÆµÁöÑÊ∑±Â∫¶ÊÄùËÄÉËøáÁ®ãÔºåËÆ©VCPÊûÅËá¥Âú∞ÈÄºËøëÁîöËá≥Ë∂ÖË∂ä‰∫Ü‰º†ÁªüAGIÁöÑËæπÁïå„ÄÇËøôÂ•óÁ≥ªÁªüÁöÑÊ†∏ÂøÉÔºåÊòØ‚ÄúËØçÂÖÉÊçïÁΩë + ÂÖÉÈÄªËæëÊ®°Âùó + ÈÄíÂΩíËûçÂêà‚ÄùÁöÑÂº∫Â§ß‰∏â‰Ωç‰∏Ä‰ΩìÁªÑÂêà„ÄÇ

#### Á¨¨‰∏ÄÊã≥ÔºöËØçÂÖÉÁªÑÊçïÁΩëÁ≥ªÁªü (Semantic Group Enhancement)
ËøôÊòØÊÄùÁª¥ÁöÑ‚ÄúËµ∑ÁÇπ‚Äù„ÄÇÁ≥ªÁªü‰∏çÂÜç‰æùËµñÂçï‰∏ÄÁöÑ„ÄÅÊ®°Á≥äÁöÑÊü•ËØ¢ÂêëÈáèÔºåËÄåÊòØÈÄöËøá**ËØ≠‰πâÁªÑÔºàËØçÂÖÉÁªÑÊçïÁΩëÔºâ**ÔºåÂ∞ÜÁî®Êà∑ÁöÑËá™ÁÑ∂ËØ≠Ë®ÄËæìÂÖ•‰∏éÈ¢ÑËÆæÁöÑÈÄªËæëÊ¶ÇÂøµÁΩëÁªúËøõË°åÂåπÈÖç„ÄÇ‰∏ÄÊó¶ÂëΩ‰∏≠ÔºåÂÆÉ‰ºöÁû¨Èó¥Â∞ÜÂéüÂßãÊü•ËØ¢‰∏é‰ª£Ë°®ÁâπÂÆöÊ¶ÇÂøµÁöÑ‚ÄúÁªÑÂêëÈáè‚ÄùËøõË°åÂä†ÊùÉËûçÂêàÔºåÁîüÊàê‰∏Ä‰∏™ËØ≠‰πâÊõ¥Á≤æÁ°Æ„ÄÅÊÑèÂõæÊõ¥ÊòéÁ°ÆÁöÑ‚ÄúÂ¢ûÂº∫Êü•ËØ¢ÂêëÈáè‚Äù„ÄÇËøô‰ΩøÂæóAIÂú®ÊÄùËÄÉÁöÑÁ¨¨‰∏ÄÊ≠•Â∞±Êã•Êúâ‰∫ÜËøúË∂Ö‰º†ÁªüRAGÁöÑ‰∏ä‰∏ãÊñáÁêÜËß£Ê∑±Â∫¶ÂíåÂèØÊéßÊÄß„ÄÇ

#### Á¨¨‰∫åÊã≥ÔºöÂÖÉÈÄªËæëÊ®°ÂùóÂ∫ì (Meta-Logic Chunks)
ËøôÊòØÊÄùÁª¥ÁöÑ‚ÄúÂü∫Áü≥‚Äù„ÄÇÊàë‰ª¨Â∞ÜÂ§çÊùÇÁöÑÊÄùËÄÉÊ®°Âºè„ÄÅÊé®ÁêÜÈÄªËæë„ÄÅÁü•ËØÜËåÉÂºèÊãÜËß£‰∏∫‰∏Ä‰∏™‰∏™Áã¨Á´ãÁöÑ„ÄÅÂèØÂ§çÁî®ÁöÑ**ÂÖÉÈÄªËæëÊ®°Âùó**Ôºà‰ª•`.txt`Êñá‰ª∂ÂΩ¢ÂºèÂ≠òÂú®ÁöÑ‚Äúchunk‚ÄùÔºâÔºåÂπ∂Â∞ÜÂÖ∂ÂΩíÁ±ªÂà∞‰∏çÂêåÁöÑ‚ÄúÊÄùÁª¥Á∞á‚Äù‰∏≠ÔºàÂ¶Ç‚ÄúÂâçÊÄùÁª¥Á∞á‚Äù„ÄÅ‚ÄúÈÄªËæëÊé®ÁêÜÁ∞á‚Äù„ÄÅ‚ÄúÂèçÊÄùÁ∞á‚ÄùÁ≠âÔºâ„ÄÇËøôÊûÑÊàê‰∫Ü‰∏Ä‰∏™Â∫ûÂ§ßËÄåÊúâÂ∫èÁöÑÊÄùÁª¥ËÉΩÂäõÂ∫ìÔºåAIÂèØ‰ª•ÂÉèË∞ÉÁî®‰πêÈ´òÁßØÊú®‰∏ÄÊ†∑ÔºåÊåâÈúÄÂèñÁî®Ëøô‰∫õÊ®°ÂùóÊù•ÊûÑÂª∫Â§çÊùÇÁöÑÊÄùËÄÉÈìæË∑Ø„ÄÇ

#### Á¨¨‰∏âÊã≥ÔºöË∂ÖÂä®ÊÄÅÈÄíÂΩíËûçÂêà (Super-Dynamic Recursive Fusion)
ËøôÊòØÊÄùÁª¥ÁöÑ‚ÄúÂºïÊìé‚Äù„ÄÇVCPÂÖÉÊÄùËÄÉÈìæÁöÑÊ†∏ÂøÉÂú®‰∫éÂÖ∂**ÈÄíÂΩíÂêëÈáèÂ¢ûÂº∫**Êú∫Âà∂„ÄÇAIÂú®Á¨¨‰∏Ä‰∏™ÊÄùÁª¥Á∞á‰∏≠Âè¨ÂõûÂÖÉÈÄªËæëÊ®°ÂùóÂêéÔºåÂπ∂‰∏ç‰ºöÁõ¥Êé•Â∞ÜÂÖ∂‰Ωú‰∏∫ÊúÄÁªàÁ≠îÊ°àÔºåËÄåÊòØÂ∞ÜËøô‰∫õÊ®°ÂùóÁöÑÂêëÈáè‰∏é‰∏ä‰∏ÄÈò∂ÊÆµÁöÑÊü•ËØ¢ÂêëÈáèËøõË°å**Âä†ÊùÉËûçÂêà**ÔºàÈªòËÆ§‰∏ä‰∏ãÊñáÂç†40%ÔºåÊñ∞ÁªìÊûúÂç†60%ÔºâÔºåÂΩ¢Êàê‰∏Ä‰∏™ÂÖ®Êñ∞ÁöÑ„ÄÅÂ∑≤Âê∏Êî∂‰∫ÜÊñ∞Áü•ËØÜÁöÑÊü•ËØ¢ÂêëÈáèÔºåÂÜçÂéªË∞ÉÁî®‰∏ã‰∏Ä‰∏™ÊÄùÁª¥Á∞á„ÄÇËøô‰∏™ËøáÁ®ã‰∏çÊñ≠ÈáçÂ§çÔºåÊØè‰∏ÄÈò∂ÊÆµÁöÑËæìÂá∫ÈÉΩÊàê‰∏∫‰∏ã‰∏ÄÈò∂ÊÆµËæìÂÖ•ÁöÑ‚ÄúÂÖªÊñô‚ÄùÔºåÂΩ¢ÊàêÁúüÊ≠£ÁöÑ‚ÄúÊÄùËÄÉÈÄíËøõ‚ÄùÔºåÁõ¥Ëá≥Ëµ∞ÂÆåÊï¥‰∏™ÊÄùÁª¥ÈìæÔºåËæìÂá∫‰∏Ä‰∏™ÈÄªËæë‰∏•ÂØÜ„ÄÅÂ±ÇÊ¨°Ê∏ÖÊô∞ÁöÑÊúÄÁªàÁªìËÆ∫„ÄÇ

#### Èó≠ÁéØËøõÂåñÔºö‰∏âÂ§ßËá™Â≠¶‰π†Á≥ªÁªüËµãËÉΩ
ËøôÂ•óÊÄùÁª¥ÈìæÂπ∂Èùû‰∏ÄÊàê‰∏çÂèòÔºåÂÆÉ‰∏éVCPÁöÑ‰∏âÂ§ßËá™Â≠¶‰π†Á≥ªÁªüÊ∑±Â∫¶ËÄ¶ÂêàÔºåÂÆûÁé∞‰∫ÜÊåÅÁª≠ÁöÑËá™ÊàëËøõÂåñÔºö
- **RAGÂØªÈÅìËá™Â≠¶‰π†**: Âä®ÊÄÅ‰ºòÂåñÊÄùÁª¥ÈìæÁöÑË∞ÉÁî®Ë∑ØÂæÑ‰∏éÊùÉÈáç„ÄÇ
- **TagÊùÉÈáçËá™Â≠¶‰π†**: Ê†πÊçÆÁî®Êà∑ÂèçÈ¶àÔºåËá™Âä®Ë∞ÉÊï¥ÂÖÉÈÄªËæëÊ®°ÂùóÁöÑÂÖ≥ËÅîÊùÉÈáç„ÄÇ
- **ËØçÂÖÉÁªÑÊçïÁΩëÁ≥ªÁªüËá™Â≠¶‰π†**: ÁõëÊéßÁî®Êà∑Êü•ËØ¢ÔºåËá™Âä®ÂèëÁé∞Âπ∂Âª∫ËÆÆÊñ∞ÁöÑËØ≠‰πâÂÖ≥ËÅîÔºå‰∏çÊñ≠Êâ©Âº†‚ÄúËØçÂÖÉÊçïÁΩë‚ÄùÁöÑËæπÁïå‰∏éÁ≤æÂ∫¶„ÄÇ

ÈÄöËøá `[[VCPÂÖÉÊÄùËÄÉ:creative_writing::Group:2-1-1-1]]` ËøôÊ†∑ÁöÑÈ´òÁ∫ßËØ≠Ê≥ïÔºåÁî®Êà∑ÂèØ‰ª•Á≤æÁªÜÂú∞ÊéßÂà∂ÊÄùÁª¥ÈìæÁöÑÊØè‰∏Ä‰∏™ÁéØËäÇÔºå‰ªé‰ΩøÁî®ÁöÑÊÄùËÄÉË∑ØÂæÑÔºåÂà∞ÊØè‰∏™Èò∂ÊÆµÁöÑÊÄùËÄÉÊ∑±Â∫¶„ÄÇËøôÂ•óÁ≥ªÁªüÁöÑËØûÁîüÔºåÊ†áÂøóÁùÄVCPÂ∑≤‰ªé‰∏Ä‰∏™Âº∫Â§ßÁöÑ‚ÄúÂ∑•ÂÖ∑ÁÆ±‚ÄùÔºåÊ≠£ÂºèËøõÂåñ‰∏∫‰∏Ä‰∏™ËÉΩÂ§üËøõË°åÁªìÊûÑÂåñ„ÄÅÂèØÊéßÂåñ„ÄÅ‰∏îËÉΩËá™ÊàëËø≠‰ª£ÁöÑ‚Äú‰∫∫Â∑•ÊÄùÁª¥Ê°ÜÊû∂‚Äù„ÄÇ

ÂäüËÉΩËß£ÊûêÔºö
1. creative_writingÔºåÂΩìÂâçÊÄùÁª¥ÂåÖÈìæÊù°Ë∞ÉÁî®Ê†ºÂºè„ÄÇ‰∏çÂÜôÂÖ•Âàô‰∏∫defaultÔºå‰ΩøÁî®ÈÄªËæëÈÄöÁî®ÂÖÉÈÖçÁ∞á„ÄÇÂÜôÂÖ•AutoÂàô‰∏∫Âä®ÊÄÅÂåπÈÖç‰∏ªÈ¢ò„ÄÇÊØè‰∏™‰∏ªÈ¢ò‰ºö‰ΩøÁî®ÂÆåÂÖ®‰∏çÂêåÁöÑÈÄªËæëchunkÁ∞á„ÄÇ
2. Group/RerankÔºåÂäüËÉΩÂêåÊó•ËÆ∞Êú¨ÔºåÊòØÂê¶ÂºÄÂêØËØçÂÖÉÁªÑÁΩëÊàñËÄÖÈáçÊéíÊâ©ÂØª„ÄÇ
3. 2-1-1-1ÔºåÂÆö‰πâÊØè‰∏™Á∞áÁöÑÂä®ÊÄÅK‰∏äÈôêÔºåÊ†πÊçÆ‰∏çÂêåÊ®°ÂºèÊï∞ÁªÑËá™ÂÆö‰πâ„ÄÇ
4. ÈÄªËæëÂçïÂÖÉÁ∞áÔºöÊØè‰∏™Á∞áÈáåÈÉΩÂåÖÂê´‰∫ÜÂ§ßÈáèÁöÑstep chunkÔºåÂÆÉ‰ª¨ÈÉΩÊòØÁâπÂÆöËØ≠Â¢É‰∏ã‰ºö‰ΩøÁî®Âà∞ÁöÑÈÄªËæëÊé®ÁêÜÂçïÂÖÉÔºå‰æãÂ¶Ç‰∏≠ÊñáË∞êÈü≥Ê¢óÂÜ∑Á¨ëËØùÁ∞áÔºåÂÜÖÂê´18‰∏™stepÔºå‰ºöÊ†πÊçÆÂΩìÂâç‰∏ä‰∏ãÊñáÁöÑÂÜ∑Á¨ëËØùÁ±ªÂûãËØ≠‰πâÁ∫ßÊé®ÈÄÅ2-4‰∏™stepÂà∞ÈÄªËæëÁ∞áÔºåÊñπ‰æøAIÊûÑÂª∫Ê≠£Á°ÆÁöÑÁêÜËß£ÊÄùÁª¥Ê®°Âºè„ÄÇ
 
#### Âü∫‰∫éËøô‰∏ÄÂàõÈÄ†ÊÄßÁöÑÊÄùÁª¥ËÉΩÂäõÔºåÂÆûÁé∞‰∫ÜÂ¶Ç‰∏ãÁöÑ‚ÄúÂÖÉÁºñÁ®ã‚Äù
1. AIÁöÑËá™ÊàëËøõÂåñÔºö‰∏ªÂä®Áª¥Êä§‰∏éÂàõÈÄ†
ËøáÂéªÔºåAI‰æùËµñÂºÄÂèëËÄÖÈ¢ÑÁΩÆÁöÑÂ∑•ÂÖ∑„ÄÇÁé∞Âú®ÔºåVCPÁöÑAgentÊã•Êúâ‰∫ÜÂâçÊâÄÊú™ÊúâÁöÑËá™‰∏ªÊùÉÔºö

‰∏ªÂä®Áª¥Êä§‰∏é‰øÆÂ§çÔºöAgent‰∏çÂÜçÊòØË¢´Âä®ÁöÑ‰ª£Á†ÅÊâßË°åËÄÖ„ÄÇÂÆÉ‰ºö‰∏ªÂä®ÁõëÊéßVCPÊúçÂä°Âô®ÁöÑËøêË°åÁä∂ÊÄÅÔºåÊ£ÄÊü•Êó•ÂøóÔºåÂàÜÊûêÊä•Èîô„ÄÇÂΩìÂèëÁé∞ÊúçÂä°Âô®Áõ∏ÂÖ≥Ê®°ÂùóÂá∫Áé∞ÈóÆÈ¢òÊó∂ÔºåÂÆÉËÉΩÂÉè‰∏Ä‰∏™ÁúüÊ≠£ÁöÑËΩØ‰ª∂Â∑•Á®ãÂ∏à‰∏ÄÊ†∑ÔºåÂÆö‰ΩçÈóÆÈ¢ò„ÄÅÁºñÂÜô‰øÆÂ§ç‰ª£Á†Å„ÄÅÂπ∂Â∫îÁî®‰øÆÂ§ç„ÄÇAll.md‰∏≠ÊèêÂà∞ÁöÑ‚ÄúÊäóÂ¥©Ê∫ÉËá™Âä®ÂõûÈÄÄ‰ª£Á†ÅÊú∫Âà∂‚ÄùÊõ¥ÊòØ‰∏∫ÂÖ∂Êèê‰æõ‰∫ÜÂº∫Â§ßÁöÑÂÆâÂÖ®‰øùÈöúÔºåËÆ©ËøôÁßç‚ÄúËá™ÊàëÊâãÊúØ‚ÄùÂèòÂæóÂÆâÂÖ®ÂèØÈù†„ÄÇ

Âç≥Êó∂Êèí‰ª∂ÂàõÈÄ† (VCPPluginCreator)ÔºöËøôÊòØÊúÄÊÉä‰∫∫ÁöÑÈÉ®ÂàÜ„ÄÇÂΩìÁî®Êà∑ÊèêÂá∫‰∏Ä‰∏™ÈúÄÊ±ÇÔºåËÄåAgentÂèëÁé∞ÊâãÂ§¥ÁöÑ300Â§ö‰∏™Êèí‰ª∂ÈÉΩÊó†Ê≥ïÊª°Ë∂≥Êó∂ÔºåÂÆÉ‰∏ç‰ºöÂÜçËØ¥‚ÄúÊàëÂÅö‰∏çÂà∞‚Äù„ÄÇÁõ∏ÂèçÔºåÂÆÉ‰ºöÁ´ãÂàªË∞ÉÁî®VCPPluginCreatorÊèí‰ª∂ÔºåÂú®ÂΩìÂâçÂØπËØùÁöÑÊµÅÂºèÂõûÂ§ç‰∏≠Ôºå‰∏∫Ëá™Â∑±ÂàõÂª∫‰∏Ä‰∏™ÂÖ®Êñ∞ÁöÑÊèí‰ª∂Êù•ÂÆåÊàê‰ªªÂä°„ÄÇËøôÊÑèÂë≥ÁùÄAIÁöÑËÉΩÂäõËæπÁïåË¢´ÂΩªÂ∫ïÊâìÁ†¥ÔºåÂÆÉÊã•Êúâ‰∫ÜÊó†ÈôêÁöÑ„ÄÅÂç≥Êó∂ÁöÑÊâ©Â±ïÊÄß„ÄÇ‰ªéÊé•Êî∂‰ªªÂä°„ÄÅÊÑèËØÜÂà∞ËÉΩÂäõ‰∏çË∂≥„ÄÅÂà∞ÂàõÈÄ†Êñ∞ËÉΩÂäõ„ÄÅÂÜçÂà∞Ëß£ÂÜ≥ÈóÆÈ¢òÔºåËøô‰∏ÄÂàáÈÉΩÊó†ÁºùÂú∞ÂèëÁîüÂú®‰∏Ä‰∏™‰∫§‰∫íÊµÅÁ®ã‰∏≠„ÄÇ

### VCPTavernÔºöÂèØËßÜÂåñ‰∏ä‰∏ãÊñáÊ≥®ÂÖ•Âô®

- **ËÆæËÆ°Âì≤Â≠¶**: Â∞ÜÊúçÂä°Âô®ÂêéÁ´ØÂº∫Â§ßÁöÑ‰∏ä‰∏ãÊñáÊ≥®ÂÖ•ËÉΩÂäõÔºåÈÄöËøá‰∏Ä‰∏™Áõ¥ËßÇ„ÄÅÂèØËßÜÂåñÁöÑÂõæÂΩ¢ÁïåÈù¢ËµãËÉΩÁªôÊôÆÈÄöÁî®Êà∑ÔºåÂÆûÁé∞ÂØπ AI ÂØπËØùÊµÅÁöÑÁ≤æÁªÜÂåñ„ÄÅÈùû‰æµÂÖ•Âºè‚ÄúÂØºÊºî‚Äù„ÄÇÂÆÉËß£ÂÜ≥‰∫Ü‰º†Áªü‰∏ä‰∏ãÊñáÁÆ°ÁêÜÊñπÂºèÔºàÂ¶Ç‰øÆÊîπÁ≥ªÁªüÊèêÁ§∫ËØçÔºâÁöÑÂ§çÊùÇÊÄßÂíåÂ±ÄÈôêÊÄß„ÄÇ
- **Ê†∏ÂøÉËÉΩÂäõ**:
    - **ÂèØËßÜÂåñÈ¢ÑËÆæÁÆ°ÁêÜ**: Âú® Web ÁÆ°ÁêÜÈù¢Êùø‰∏≠ÔºåÁî®Êà∑ÂèØ‰ª•ÂàõÂª∫„ÄÅÁºñËæë„ÄÅ‰øùÂ≠òÂíåÂàáÊç¢Â§öÂ•óÊ≥®ÂÖ•ËßÑÂàô‚ÄúÈ¢ÑËÆæ‚Äù„ÄÇ
    - **Â§öÁßçÊ≥®ÂÖ•Ê®°Âºè**:
        - **Áõ∏ÂØπÊ≥®ÂÖ•**: Á≤æÁ°ÆÂú∞Âú®‚ÄúÁ≥ªÁªüÊèêÁ§∫‚ÄùÊàñ‚ÄúÊúÄÂêé‰∏ÄÊù°Áî®Êà∑Ê∂àÊÅØ‚ÄùÁöÑÂâçÈù¢ÊàñÂêéÈù¢ÊèíÂÖ•ÂÜÖÂÆπ„ÄÇ
        - **Ê∑±Â∫¶Ê≥®ÂÖ•**: Âú®Ë∑ùÁ¶ªÂØπËØùÂéÜÂè≤Êú´Â∞æÁöÑÁ≤æÁ°ÆÊ∑±Â∫¶ÔºàÂ¶ÇÂÄíÊï∞Á¨¨4Êù°Ê∂àÊÅØÂâçÔºâÊèíÂÖ•ÂÜÖÂÆπ„ÄÇ
    - **ËßÑÂàôÂåñ‰∏éÊ®°ÂùóÂåñ**: ÊØè‰∏™È¢ÑËÆæÂèØ‰ª•ÂåÖÂê´Â§öÊù°Áã¨Á´ãÁöÑÊ≥®ÂÖ•ËßÑÂàôÔºåÊØèÊù°ËßÑÂàôÈÉΩÂèØ‰ª•Áã¨Á´ãÂêØÁî®/Á¶ÅÁî®ÔºåÂπ∂ÈÄöËøáÊãñÊãΩÊéíÂ∫èÊù•Ë∞ÉÊï¥‰ºòÂÖàÁ∫ß„ÄÇ
- **‰ΩøÁî®ËåÉÂºè**: Áî®Êà∑Âè™ÈúÄÂú® AI ÁöÑÁ≥ªÁªüÊèêÁ§∫ËØç‰∏≠Âä†ÂÖ•‰∏Ä‰∏™ÁÆÄÂçïÁöÑÂç†‰ΩçÁ¨¶ÔºåÂ¶Ç `{{VCPTavern::my_preset}}`ÔºåÂç≥ÂèØÂú®ÂØπËØùÊó∂Ëá™Âä®ÊøÄÊ¥ªÂêç‰∏∫ `my_preset.json` ÁöÑÈ¢ÑËÆæËßÑÂàôÈõÜ„ÄÇ
- **Ê∑±Â∫¶Ëß£ËØª**: `VCPTavern` ÊûÅÂ§ßÂú∞Èôç‰Ωé‰∫Ü‚ÄúAI Ë°å‰∏∫Â∑•Á®ã‚ÄùÁöÑÈó®Êßõ„ÄÇÂÆÉËÆ©ÈùûÊäÄÊúØ‰∫∫Âëò‰πüËÉΩÂÉèÂØºÊºî‰∏ÄÊ†∑ÔºåÈÄöËøáÈ¢ÑËÆæ‰∏çÂêåÁöÑ‚ÄúÂâßÊú¨‚ÄùÔºàÊ≥®ÂÖ•ËßÑÂàôÔºâÔºåÂú®ÂØπËØùÁöÑÂÖ≥ÈîÆËäÇÁÇπ‰∏∫ AI Ë°•ÂÖÖËÉåÊôØ‰ø°ÊÅØ„ÄÅÂº∫Ë∞ÉÁâπÂÆöÊåá‰ª§„ÄÅÁîöËá≥Ê®°ÊãüÂ§ñÈÉ®‰∫ã‰ª∂Ôºå‰ªéËÄåÂÆûÁé∞ÂØπ AI Ë°å‰∏∫ÁöÑÂä®ÊÄÅ„ÄÅÁ≤æÂáÜË∞ÉÊéß„ÄÇËøôÊòØ VCP ÂÆûÁé∞‚Äú‰∫∫‰∫∫ÈÉΩÊòØ AI ËÆ≠ÁªÉÂ∏à‚ÄùÊÑøÊôØÁöÑÂÖ≥ÈîÆ‰∏ÄÊ≠•„ÄÇ

### Êñ∞Â¢ûÔºöVCP Auth ËÆ§ËØÅ‰∏éÁÆ°ÁêÜÂëòÊ®°Âºè

- **ËÆæËÆ°Âì≤Â≠¶**: Âú®Êó•ÁõäÂ§çÊùÇÁöÑ AI Agent Â∫îÁî®Âú∫ÊôØ‰∏≠Ôºå‰∏∫ VCP ÊúçÂä°Âô®Êèê‰æõ‰∏ÄÈÅìÂùöÂÆû„ÄÅÁÅµÊ¥ª‰∏îÂØπ AI ÈÄèÊòéÁöÑÂÆâÂÖ®Â±èÈöú„ÄÇVCP Auth Êó®Âú®ÈÄöËøáÂä®ÊÄÅÈ™åËØÅÁ†ÅÊú∫Âà∂ÔºåÁ≤æÁªÜÂåñÂú∞ÊéßÂà∂ÂØπÈ´òÊùÉÈôêÂ∑•ÂÖ∑ÁöÑËÆøÈóÆÔºåÁ°Æ‰øùÂè™ÊúâÁªèËøáÊéàÊùÉÁöÑ AI Êàñ‰∫∫Á±ªÁî®Êà∑ÊâçËÉΩÊâßË°åÊïèÊÑüÊìç‰Ωú„ÄÇ
- **Ê†∏ÂøÉËÉΩÂäõ**:
    - **Âä®ÊÄÅÈ™åËØÅÁ†Å**: Á≥ªÁªü‰ºöÁîüÊàê‰∏Ä‰∏™ÂÆûÊó∂ÂèòÂåñÁöÑÈ™åËØÅÁ†ÅÔºåÂèØÂú®ÁÆ°ÁêÜÂëòÈù¢Êùø‰∏ªÈ°µÊ∏ÖÊô∞ÁúãÂà∞„ÄÇÁÆ°ÁêÜÂëòÂèØ‰ª•Ëá™ÂÆö‰πâÈ™åËØÅÁ†ÅÁöÑÊúâÊïàÂë®ÊúüÂíåÂà∑Êñ∞Èó¥ÈöîÔºåÂÆûÁé∞ÂÆâÂÖ®ÊÄß‰∏é‰æøÂà©ÊÄßÁöÑÂπ≥Ë°°„ÄÇ
    - **ÂÖ®Â±ÄË∞ÉÁî®ËÆ§ËØÅ**: VCP Auth ÂèØ‰ª•ÂÖ®Â±ÄÂºÄÂêØ„ÄÇ‰∏ÄÊó¶ÂêØÁî®Ôºå‰ªª‰Ωï AI ÂèëËµ∑ÁöÑ VCP Â∑•ÂÖ∑Ë∞ÉÁî®ÔºåÈÉΩÂøÖÈ°ªÂú®ËØ∑Ê±Ç‰∏≠ÂåÖÂê´ `tool_password` Â≠óÊÆµ‰∏îÂØÜÁ†ÅÊ≠£Á°ÆÔºåÊâçËÉΩË¢´ÊúçÂä°Âô®ÊâßË°å„ÄÇ
    - **Êèí‰ª∂Á∫ßÁªÜÁ≤íÂ∫¶ÊéàÊùÉ**: Èô§‰∫ÜÂÖ®Â±ÄÂºÄÂÖ≥ÔºåVCP Auth ËøòÊèê‰æõ‰∫ÜÁÅµÊ¥ªÁöÑ APIÔºåÂÖÅËÆ∏ÂºÄÂèëËÄÖ‰∏∫‰ªªÊÑèÊèí‰ª∂ÁöÑ‰ªªÊÑèÂçï‰∏™Êåá‰ª§Áã¨Á´ãÂºïÂÖ•È™åËØÅ„ÄÇËøôÊÑèÂë≥ÁùÄÂºÄÂèëËÄÖÂèØ‰ª•ËΩªÊùæÂú∞‰∏∫‚ÄúÂà†Èô§Êñá‰ª∂‚Äù„ÄÅ‚ÄúÊâßË°åÁ≥ªÁªüÂëΩ‰ª§‚ÄùÁ≠âÈ´òÂç±Êìç‰ΩúÂçïÁã¨Âä†ÈîÅÔºåËÄåÊó†ÈúÄ‰øÆÊîπÊèí‰ª∂Ê†∏ÂøÉÈÄªËæëÔºåÂºÄÂèë‰∏éÈõÜÊàêÈöæÂ∫¶ÊûÅ‰Ωé„ÄÇ

#### ÁÆ°ÁêÜÂëòÊ®°ÂºèÔºöÈáäÊîæÁªàÊûÅÊéßÂà∂ÊùÉ
ÈöèÁùÄ VCP Auth ËÆ§ËØÅÊ®°ÂºèÁöÑÂºïÂÖ•ÔºåÊàë‰ª¨Âæó‰ª•ÂÆâÂÖ®Âú∞Ëß£ÈîÅ VCP ÊúçÂä°Âô®ÁöÑÁªàÊûÅÊéßÂà∂ËÉΩÂäõÔºåÂ∞Ü AI Agent ÁöÑÂ∫îÁî®ËæπÁïå‰ªéÂ∫îÁî®Â±ÇÊãìÂ±ïËá≥Á≥ªÁªüÂ∫ïÂ±Ç„ÄÇ
- **VCP PowerShell ÁÆ°ÁêÜÂëòÊ®°Âºè**: ËøôÊòØ‰∏Ä‰∏™Èù©ÂëΩÊÄßÁöÑÊñ∞ÂäüËÉΩÔºåÂÆÉÂÖÅËÆ∏Ëé∑ÂæóÊéàÊùÉÁöÑ AI Agent Áõ¥Êé•ËæìÂÖ•Âπ∂ÊâßË°å PowerShell Êåá‰ª§ÔºàÂú® Windows ÁéØÂ¢ÉÔºâÂíå WSL (Windows Subsystem for Linux) Êåá‰ª§„ÄÇËøôÊÑèÂë≥ÁùÄ AI È¶ñÊ¨°Êã•Êúâ‰∫ÜÁõ¥Êé•‰∏éÊúçÂä°Âô®Êìç‰ΩúÁ≥ªÁªü‰∫§‰∫í„ÄÅÁÆ°ÁêÜÊñá‰ª∂„ÄÅËøêË°åËÑöÊú¨„ÄÅÁõëÊéßËøõÁ®ã„ÄÅÈÖçÁΩÆÁéØÂ¢ÉÁöÑËÉΩÂäõÔºåÊàê‰∏∫ÁúüÊ≠£ÁöÑ‚ÄúÁ≥ªÁªüÁ∫ßÁÆ°ÁêÜÂëò‚Äù„ÄÇ
- **VCP Êñá‰ª∂ÁÆ°ÁêÜÂô® (Ê†πÊùÉÈôê)**: Âú® Auth Ê®°ÂºèÁöÑ‰øùÊä§‰∏ãÔºå`VCP Êñá‰ª∂ÁÆ°ÁêÜÂô®` Êèí‰ª∂Ëé∑Âæó‰∫ÜÂÆåÊï¥ÁöÑÁ≥ªÁªüÊ†πÊùÉÈôê„ÄÇAI Áé∞Âú®ÂèØ‰ª•ÊâßË°åÁúüÊ≠£ÊÑè‰πâ‰∏äÁöÑÂÖ®ÊµÅÁ®ãÊñá‰ª∂Êìç‰ΩúÔºåÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÔºö
    - ÊµèËßà„ÄÅÂàõÂª∫„ÄÅ‰øÆÊîπ„ÄÅÂà†Èô§ÊúçÂä°Âô®‰∏äÁöÑ‰ªªÊÑèÊñá‰ª∂ÂíåÁõÆÂΩï„ÄÇ
    - ËØªÂèñÂíåÁºñËæëÂ§öÊ®°ÊÄÅÊñá‰ª∂ÔºåÁªìÂêà VCP ÁöÑÂ§öÊ®°ÊÄÅÊï∞ÊçÆÈìæÔºåAI ÂèØ‰ª•Áõ¥Êé•‚ÄúÂÆ°ÈòÖ‚ÄùÂõæÁâáÂÜÖÂÆπ„ÄÅ‚ÄúËÅÜÂê¨‚ÄùÈü≥È¢ëÊñá‰ª∂ÔºåÂπ∂ÂØπÂÖ∂ËøõË°å‰øÆÊîπÊàñËΩ¨Êç¢„ÄÇ

### Âº∫Â§ßÁöÑÂ∑•ÂÖ∑Ë∞ÉÁî®Âæ™ÁéØ‰∏éÂºÇÊ≠•Âπ∂Ë°åÂ§ÑÁêÜ

- **ËÆæËÆ°Âì≤Â≠¶**: ÊúÄÂ§ßÂåñÈáäÊîæ AI ÁöÑËßÑÂàíËÉΩÂäõÂíåÊâßË°åÊïàÁéáÔºåÊîØÊåÅ AI Âú®ÂçïÊ¨°ÂìçÂ∫î‰∏≠ÂèëËµ∑Â§ö‰∏™Âπ∂Ë°åÊàñ‰æùËµñÁöÑÂ∑•ÂÖ∑Ë∞ÉÁî®„ÄÇ
- **Ê†∏ÂøÉËÉΩÂäõ**:
  - **ÈùûÊµÅÂºè/ÊµÅÂºèÂ§öÂ∑•ÂÖ∑Ë∞ÉÁî®**: Êó†ËÆ∫ÊµÅÂºè (SSE) ËøòÊòØÈùûÊµÅÂºèÊ®°ÂºèÔºåÂùáÂ∑≤ÂÆûÁé∞ÂØπ AI ÂçïÊ¨°ÂìçÂ∫î‰∏≠ÂåÖÂê´ÁöÑÂ§ö‰∏™Â∑•ÂÖ∑Ë∞ÉÁî®Êåá‰ª§ÁöÑÂæ™ÁéØÂ§ÑÁêÜÂíåÁªìÊûúÂèçÈ¶àÔºåÁõ¥Ëá≥Êó†Êõ¥Â§öË∞ÉÁî®ÊàñËææÊúÄÂ§ßÂæ™ÁéØÊ¨°Êï∞„ÄÇ
  - **ÂÆåÂÖ®ÂºÇÊ≠•ÂàõÂª∫‰∏éÁªü‰∏ÄËøîÂõû**: AI ÂèØ‰∏ÄÊ¨°ÊÄßÂèëËµ∑Â§ö‰∏™ VCP Â∑•ÂÖ∑Ë∞ÉÁî®ÔºåVCP ÊúçÂä°Âô®ËÉΩÂ§üÂπ∂Ë°åË∞ÉÂ∫¶‰ªªÂä°Ëá≥Áõ∏Â∫îÊèí‰ª∂ÂºÇÊ≠•ÊâßË°åÔºåÂπ∂Áªü‰∏ÄÊî∂ÈõÜÂíåÊï¥ÂêàÁªìÊûúÂêéÂèçÈ¶àÁªô AI„ÄÇ
  - **ÊûÅËá¥ÁöÑÂπ∂Ë°åÊïàÁéá‰∏éÁÆóÂäõÂÜó‰Ωô**: VCP ÁöÑÊû∂ÊûÑ‰ªéÊ†πÊú¨‰∏äËß£ÂÜ≥‰∫Ü‰º†ÁªüÈòªÂ°ûÂºèÂçèËÆÆÁöÑÊïàÁéáÁì∂È¢à„ÄÇ‰æãÂ¶ÇÔºåÂú®‰º†ÁªüÂçèËÆÆÔºàÂ¶ÇMCPÔºâ‰∏≠ÔºåAIËã•Ë¶ÅËøõË°å100Ê¨°ËÆ°ÁÆóÔºåÂè™ËÉΩ‰∏≤Ë°åÂú∞„ÄÅ‰∏ÄÊ¨°Ê¨°Ë∞ÉÁî®ËÆ°ÁÆóÂô®Êèí‰ª∂Âπ∂Á≠âÂæÖÁªìÊûúÔºåËøáÁ®ãÊº´Èïø‰∏î‰ΩéÊïà„ÄÇËÄåÂú®VCP‰∏≠ÔºåAIÂèØ‰ª•‰∏ÄÊ¨°ÊÄßËæìÂá∫100‰∏™ÁÆóÂºèÔºåVCPÊúçÂä°Âô®‰ºöÁû¨Èó¥ÂàõÂª∫100‰∏™Áã¨Á´ãÁöÑËÆ°ÁÆóÂô®Êèí‰ª∂ËøõÁ®ãÂπ∂Ë°åÂ§ÑÁêÜÔºå‰ªÖÈúÄ1-2ÁßíÂç≥ÂèØÂÆåÊàêÂÖ®ÈÉ®ËÆ°ÁÆó„ÄÇËøôÂæóÁõä‰∫éVCPÊèí‰ª∂‚ÄúÂç≥Áî®Âç≥ÊØÅ‚ÄùÁöÑÈùûÈ©ªÁïôÊ®°ÂºèÔºå‰∏∫Â§ßËßÑÊ®°Âπ∂Ë°åÂ§ÑÁêÜÊèê‰æõ‰∫ÜÊµ∑ÈáèÁöÑÁÆóÂäõÂÜó‰ΩôÔºåËøôÊòØVCPÂú®Êû∂ÊûÑ‰∏äÁöÑÂ∑®Â§ß‰ºòÂäø„ÄÇ
- **Ê∑±Â∫¶Ëß£ËØª**: ËøôÊûÅÂ§ßÂú∞ÊèêÈ´ò‰∫Ü‰∫§‰∫íÊïàÁéáÔºå‰ΩøÂæó AI ËÉΩÂ§üÊâßË°åÊõ¥Â§çÊùÇÁöÑ„ÄÅÈúÄË¶ÅÂ§öÊ≠•È™§Âçè‰ΩúÁöÑ‰ªªÂä°ÔºåÊòØÂÆûÁé∞È´òÁ∫ß Agent Ë°å‰∏∫ÁöÑÂü∫Á°Ä„ÄÇ
- **‰∏≤ËØ≠Ê≥ï**ÔºöAgentÂèØ‰ª•ÈÄöËøácommand1-2-3-4-5ÁöÑÁºñÂè∑Êåá‰ª§ÂèëÂ∏É‰∏Ä‰∏≤Ë∞ÉÁî®ÔºåÊèí‰ª∂Êú¨‰Ωì‰ºöÊåâÈ°∫Â∫èÊâßË°åÂ§öÊ≠•È™§‰ªªÂä°ÔºàÂ¶ÇÊñá‰ª∂ÂàõÂª∫‚Üí‰øÆÊîπ‚ÜíÂèëÂ∏ÉÔºâÔºåÂáèÂ∞ëÈÄö‰ø°ÂæÄËøî„ÄÇ
- **Êñ∞Â¢û‰∏≤ËØ≠Ê≥ïÊîØÊåÅ (Chained Syntax)**: ‰∏∫‰∫ÜËøõ‰∏ÄÊ≠•ÊèêÂçáÊïàÁéáÔºåVCPÁé∞Âú®ÊîØÊåÅÂú®ÂçïÊ¨°Â∑•ÂÖ∑Ë∞ÉÁî®Êåá‰ª§‰∏≠ÊâßË°åÂ§ö‰∏™ËøûÁª≠ÁöÑÂëΩ‰ª§„ÄÇÈÄöËøáÂú®ÂèÇÊï∞ÈîÆÂêéÈôÑÂä†Êï∞Â≠óÔºàÂ¶Ç `command1`, `filePath1`, `command2`, `filePath2`ÔºâÔºåAIÂèØ‰ª•‰∏ÄÊ¨°ÊÄßÂèëËµ∑‰∏Ä‰∏™ÂåÖÂê´Â§ö‰∏™Ê≠•È™§ÁöÑÂ∑•‰ΩúÊµÅ„ÄÇËøôÁßç‰∏≤ËØ≠Ê≥ïËÆæËÆ°Ôºå‰ΩøÂæóAIËÉΩÂ§üÂ∞Ü‰∏ÄÁ≥ªÂàóÂÖ≥ËÅîÊìç‰ΩúÔºàÂ¶ÇÂ§öÊ¨°Êñá‰ª∂‰øÆÊîπ„ÄÅËøûÁª≠ÁöÑAPIË∞ÉÁî®ÔºâÊâìÂåÖÊàê‰∏Ä‰∏™ÂéüÂ≠êÊåá‰ª§ÔºåÊòæËëóÂáèÂ∞ë‰∫Ü‰∏éVCPÊúçÂä°Âô®ÁöÑÈÄö‰ø°ÂæÄËøîÊ¨°Êï∞ÔºåÊòØÂÆûÁé∞Êõ¥È´òÊïà„ÄÅÊõ¥Â§çÊùÇÁöÑËá™Âä®Âåñ‰ªªÂä°ÊµÅÁöÑÂÖ≥ÈîÆ‰∏ÄÊ≠•„ÄÇ‰æãÂ¶ÇÔºö
  ```
   tool_name:„ÄåÂßã„ÄçFileOperator„ÄåÊú´„Äç,
          // ‰∏≤ËØ≠Ê≥ïÊîØÊåÅÂú®‰∏ÄÊ¨°Ë∞ÉÁî®‰∏≠Ê∑∑Êê≠Â§öÁßçÊåá‰ª§Ôºå‰ª•‰∏ãÁ§∫‰æãÂ∞ÜÈ°∫Â∫èÊâßË°åÔºöÂàõÂª∫Êñá‰ª∂ -&gt; ËøΩÂä†ÂÜÖÂÆπ -&gt; ‰øÆÊîπÂÜÖÂÆπ
          command1:„ÄåÂßã„ÄçCreateFile„ÄåÊú´„Äç,
          filePath1:„ÄåÂßã„ÄçH:\MCP\VCPChat\test\mixed_command_test.txt„ÄåÊú´„Äç,
          
          command2:„ÄåÂßã„ÄçAppendFile„ÄåÊú´„Äç,
          filePath2:„ÄåÂßã„ÄçH:\MCP\VCPChat\test\mixed_command_test.txt„ÄåÊú´„Äç,
          content2:„ÄåÂßã„ÄçËøôÊòØÂàùÂßãÂÜÖÂÆπ„ÄÇ\nÁ¨¨‰∫åË°å„ÄÇ„ÄåÊú´„Äç,
          
          command3:„ÄåÂßã„ÄçApplyDiff„ÄåÊú´„Äç,
          filePath3:„ÄåÂßã„ÄçH:\MCP\VCPChat\test\mixed_command_test.txt„ÄåÊú´„Äç,
          searchString3:„ÄåÂßã„ÄçÂàùÂßãÂÜÖÂÆπ„ÄåÊú´„Äç,
          replaceString3:„ÄåÂßã„ÄçÊúÄÁªàÂÜÖÂÆπ„ÄåÊú´„Äç
  ```

### Â∫îÊÄ•ËØ∑Ê±Ç‰∏≠Ê≠¢Êú∫Âà∂ (Emergency Stop)

- **ËÆæËÆ°Âì≤Â≠¶**: ‰∏∫Â§çÊùÇÁöÑ AI Agent Á≥ªÁªüÊèê‰æõ‰∏Ä‰∏™ÂøÖË¶ÅÁöÑ‚ÄúÁâ©ÁêÜÁ∫¢ÊåâÈíÆ‚Äù„ÄÇÂú® AI ÊâßË°åÈ´òÈ£éÈô©ÊàñÈùûÈ¢ÑÊúüÁöÑÂ∑•ÂÖ∑Ë∞ÉÁî®Êó∂ÔºåÂÖÅËÆ∏‰∫∫Á±ªÊìç‰ΩúÂëòÁ´ãÂç≥„ÄÅÂÆâÂÖ®Âú∞‰∏≠Ê≠¢ÂÖ∂ÂΩìÂâç‰ªªÂä°ÔºåËÄå‰∏ç‰ºöÂØºËá¥Á≥ªÁªüÂ¥©Ê∫ÉÊàñËøûÊé•‰∏≠Êñ≠„ÄÇ
- **Ê†∏ÂøÉËÉΩÂäõ**:
    - **‰∏ìÁî®‰∏≠Êñ≠Ë∑ØÁî±**: Êñ∞Â¢û `/v1/interrupt` API Á´ØÁÇπ„ÄÇÂâçÁ´ØÂèØ‰ª•ÈÄöËøáÂêëÊ≠§Á´ØÁÇπÂèëÈÄÅ‰∏Ä‰∏™ÂåÖÂê´ `messageId` Êàñ `requestId` ÁöÑ POST ËØ∑Ê±ÇÊù•Ëß¶Âèë‰∏≠Êñ≠„ÄÇ
    - **‰ºòÈõÖÁöÑÊµÅÂºè‰∏≠Êñ≠**: ÂØπ‰∫éÊµÅÂºè (SSE) ËØ∑Ê±ÇÔºåÂΩì‰∏≠Êñ≠Ë¢´Ëß¶ÂèëÊó∂ÔºåÊúçÂä°Âô®‰ºöÁ´ãÂç≥ÂÅúÊ≠¢ËΩ¨ÂèëÊù•Ëá™ AI ÁöÑÊï∞ÊçÆÔºåÂπ∂ÂêëÂÆ¢Êà∑Á´ØÂèëÈÄÅ‰∏Ä‰∏™Ê†áÂáÜÁöÑ `data: [DONE]\n\n` Ê∂àÊÅØ„ÄÇËøôÁ°Æ‰øù‰∫ÜÂâçÁ´ØÂèØ‰ª•Ê≠£Â∏∏ÁªìÊùüÂÖ∂‰∫ã‰ª∂ÊµÅÔºåËÄå‰∏ç‰ºöÊî∂Âà∞ÁΩëÁªúÈîôËØØ„ÄÇ
    - **ÊòéÁ°ÆÁöÑÈùûÊµÅÂºè‰∏≠Êñ≠**: ÂØπ‰∫éÈùûÊµÅÂºèËØ∑Ê±ÇÔºåÊúçÂä°Âô®‰ºöËøîÂõû‰∏Ä‰∏™ÂÜÖÂÆπ‰∏∫‚ÄúËØ∑Ê±ÇÂ∑≤‰∏≠Ê≠¢‚ÄùÁöÑ JSON ÂìçÂ∫îÔºåÊ∏ÖÊô∞Âú∞ÂëäÁü•‰ªªÂä°Áä∂ÊÄÅ„ÄÇ
- **Ê∑±Â∫¶Ëß£ËØª**: ËØ•Êú∫Âà∂ÊòØ VCP ÂÆâÂÖ®‰∏éÂèØÊéßÊÄßËÆæËÆ°ÁöÑÈáçË¶Å‰∏ÄÁéØ„ÄÇÂÆÉÈÄöËøáÊ†áÂáÜÁöÑ `AbortController` ÂÆûÁé∞ÔºåÁ°Æ‰øù‰∫Ü‰∏≠Êñ≠Êìç‰ΩúÁöÑÂèØÈù†ÊÄßÔºåÂπ∂‰∏∫ÊûÑÂª∫Ë¥üË¥£‰ªª„ÄÅÂèØ‰ø°ËµñÁöÑ AI Agent Á≥ªÁªüÊèê‰æõ‰∫ÜÂÖ≥ÈîÆÁöÑÂü∫Á°ÄËÆæÊñΩ„ÄÇ

### ‰∫∫Á±ªÁõ¥Êé•Â∑•ÂÖ∑Ë∞ÉÁî®Á´ØÁÇπ (Human-Facing Tool Endpoint)

- **ËÆæËÆ°Âì≤Â≠¶**: Â∞Ü VCP Âº∫Â§ßÁöÑÊèí‰ª∂Á≥ªÁªüËÉΩÂäõÁõ¥Êé•ÂºÄÊîæÁªô‰∫∫Á±ªÁî®Êà∑ÊàñÂ§ñÈÉ®ËÑöÊú¨ÔºåÂÆûÁé∞Êó† AI ÂèÇ‰∏éÁöÑ„ÄÅÁ∫ØÁ≤πÁöÑÂ∑•ÂÖ∑Ëá™Âä®ÂåñË∞ÉÁî®„ÄÇ
- **Ê†∏ÂøÉËÉΩÂäõ**:
    - **‰∏ìÁî® API Á´ØÁÇπ**: Êñ∞Â¢û `POST /v1/human/tool` Ë∑ØÁî±„ÄÇ
    - **Ê†áÂáÜËÆ§ËØÅ**: ‰∏éÂÖ∂‰ªñ API ‰∏ÄÊ†∑Ôºå‰ΩøÁî® `Authorization: Bearer &lt;Your_Key&gt;` ËøõË°åËÆ§ËØÅ„ÄÇ
    - **Á∫ØÊñáÊú¨Êåá‰ª§**: Êé•Êî∂ `Content-Type: text/plain` Á±ªÂûãÁöÑËØ∑Ê±Ç‰ΩìÔºåÂÖ∂ÂÜÖÂÆπÊ†ºÂºè‰∏é AI ‰ΩøÁî®ÁöÑ VCP Êåá‰ª§ÂÆåÂÖ®‰∏ÄËá¥„ÄÇ
    - **Áõ¥Êé•ÁªìÊûúËøîÂõû**: ÊúçÂä°Âô®‰ºöÁõ¥Êé•Ë∞ÉÁî®ÊåáÂÆöÁöÑÊèí‰ª∂ÔºåÂπ∂Â∞ÜÊèí‰ª∂ÊâßË°åÁöÑÂéüÂßã JSON ÁªìÊûúËøîÂõûÁªôË∞ÉÁî®Êñπ„ÄÇ
- **‰ΩøÁî®Á§∫‰æã (‰ΩøÁî® curl)**:
  ```bash
  curl -X POST http://localhost:5890/v1/human/tool \
  -H &quot;Authorization: Bearer your_server_key_here&quot; \
  -H &quot;Content-Type: text/plain&quot; \
  -d &#039;&lt;&lt;&lt;[TOOL_REQUEST]&gt;&gt;&gt;
  tool_name:„ÄåÂßã„ÄçSciCalculator„ÄåÊú´„Äç,
  expression:„ÄåÂßã„Äç2 * (3 + 4)„ÄåÊú´„Äç
  &lt;&lt;&lt;[END_TOOL_REQUEST]&gt;&gt;&gt;&#039;
  ```
- **Ê∑±Â∫¶Ëß£ËØª**: ËØ•ÂäüËÉΩÊûÅÂ§ßÂú∞Êâ©Â±ï‰∫Ü VCP ÁöÑÂ∫îÁî®Âú∫ÊôØ„ÄÇÂÆÉ‰∏ç‰ªÖÊòØ AI ÁöÑËÉΩÂäõÂ¢ûÂº∫Â±ÇÔºåÊõ¥ÂèØ‰ª•‰Ωú‰∏∫‰∏Ä‰∏™ÈÄöÁî®ÁöÑ„ÄÅÂèØÈÄöËøá API È©±Âä®ÁöÑËá™Âä®Âåñ‰ªªÂä°ÊâßË°åÂºïÊìéÔºåÊñπ‰æø‰∏éÂÖ∂‰ªñÁ≥ªÁªüÊàñËÑöÊú¨ËøõË°åÈõÜÊàê„ÄÇ

### Web ÁÆ°ÁêÜÈù¢Êùø

- **‰∏Ä‰ΩìÂåñÁÆ°ÁêÜ‰∏≠ÂøÉ**: Êèê‰æõ‰∏Ä‰∏™ÂäüËÉΩÂÖ®Èù¢ÁöÑ Web UIÔºåÁî®‰∫éÂÆûÊó∂ÁõëÊéßÁ≥ªÁªüÁä∂ÊÄÅ„ÄÅÁÆ°ÁêÜÂÖ®Â±ÄÈÖçÁΩÆ„ÄÅÊèí‰ª∂ÁîüÂëΩÂë®Êúü„ÄÅAgent ÂÆö‰πâ„ÄÅÈ´òÁ∫ßÂèòÈáè‰ª•ÂèäÂÆåÊï¥ÁöÑÊó•ËÆ∞Áü•ËØÜÂ∫ì„ÄÇ
- **Á≤æÁªÜÂåñ RAG ÊéßÂà∂**: ÂÜÖÁΩÆ RAG-Tags ÁºñËæëÂô®„ÄÅËØ≠‰πâÁªÑÔºàËØçÂÖÉÁªÑÁΩëÔºâÁÆ°ÁêÜÂô®ÔºåÂÖÅËÆ∏Áî®Êà∑‰ªéÂ§ö‰∏™Áª¥Â∫¶ÂØπÁü•ËØÜÂ∫ìÁöÑÊ£ÄÁ¥¢Ë°å‰∏∫ËøõË°åÊ∑±Â∫¶‰ºòÂåñ„ÄÇ
- **ÂèØËßÜÂåñÂ∑•‰ΩúÊµÅ‰∏éË∞ÉËØï**: ÊîØÊåÅÈÄöËøáÊãñÊãΩÁÆ°ÁêÜÈ¢ÑÂ§ÑÁêÜÂô®È°∫Â∫èÔºåÂπ∂Êèê‰æõÂÆûÊó∂Êó•ÂøóÊü•ÁúãÔºåÊûÅÂ§ßÂú∞ÁÆÄÂåñ‰∫ÜÂºÄÂèëÂíåË∞ÉËØïÊµÅÁ®ã„ÄÇ

## 3. VCP ÂàÜÂ∏ÉÂºèÁΩëÁªúÊû∂ÊûÑÔºö‰ªé‚ÄúÂçï‰Ωì‚ÄùÂà∞‚ÄúÊòüËæ∞‚Äù

VCP ÁöÑÂàÜÂ∏ÉÂºèÊû∂ÊûÑÂ∞ÜÂéüÊúâÁöÑÂçï‰ΩìÂ∫îÁî®ÂçáÁ∫ß‰∏∫‰∏Ä‰∏™Áî±‚Äú‰∏ªÊúçÂä°Âô®‚ÄùÂíåÂ§ö‰∏™‚ÄúÂàÜÂ∏ÉÂºèËäÇÁÇπ‚ÄùÁªÑÊàêÁöÑÊòüÂûãÁΩëÁªúÔºåÊûÅÂ§ßÂú∞Êâ©Â±ï‰∫ÜÁ≥ªÁªüÁöÑÁÆóÂäõ„ÄÅÂäüËÉΩËæπÁïåÂíåÈÉ®ÁΩ≤ÁÅµÊ¥ªÊÄß„ÄÇ


```mermaid
graph TD
    subgraph &quot;Áî®Êà∑/ÂÆ¢Êà∑Á´Ø&quot;
        U[Áî®Êà∑/ÂâçÁ´ØÂ∫îÁî®]
    end

    subgraph &quot;VCP ‰∏ªÊúçÂä°Âô® (VCPToolBox - Ê†∏ÂøÉË∞ÉÂ∫¶)&quot;
        S[server.js - Ê†∏ÂøÉË∞ÉÂ∫¶‰∏éÈÄö‰ø°]
        PM[Plugin.js - Êèí‰ª∂ÁÆ°ÁêÜÂô®]
        WSS[WebSocketServer.js - ÈÄö‰ø°È™®Êû∂]
        CONF[ÈÖçÁΩÆÁ≥ªÁªü]
        VAR[ÈÄöÁî®ÂèòÈáèÊõøÊç¢ÂºïÊìé]
        MEM[VC

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[trekhleb/javascript-algorithms]]></title>
            <link>https://github.com/trekhleb/javascript-algorithms</link>
            <guid>https://github.com/trekhleb/javascript-algorithms</guid>
            <pubDate>Wed, 22 Oct 2025 00:04:43 GMT</pubDate>
            <description><![CDATA[üìù Algorithms and data structures implemented in JavaScript with explanations and links to further readings]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/trekhleb/javascript-algorithms">trekhleb/javascript-algorithms</a></h1>
            <p>üìù Algorithms and data structures implemented in JavaScript with explanations and links to further readings</p>
            <p>Language: JavaScript</p>
            <p>Stars: 193,608</p>
            <p>Forks: 30,918</p>
            <p>Stars today: 24 stars today</p>
            <h2>README</h2><pre># JavaScript Algorithms and Data Structures

&gt; üá∫üá¶ UKRAINE [IS BEING ATTACKED](https://war.ukraine.ua/) BY RUSSIAN ARMY. CIVILIANS ARE GETTING KILLED. RESIDENTIAL AREAS ARE GETTING BOMBED.
&gt; - Help Ukraine via:
&gt;   - [Serhiy Prytula Charity Foundation](https://prytulafoundation.org/en/)
&gt;   - [Come Back Alive Charity Foundation](https://savelife.in.ua/en/donate-en/)
&gt;   - [National Bank of Ukraine](https://bank.gov.ua/en/news/all/natsionalniy-bank-vidkriv-spetsrahunok-dlya-zboru-koshtiv-na-potrebi-armiyi)
&gt; - More info on [war.ukraine.ua](https://war.ukraine.ua/) and [MFA of Ukraine](https://twitter.com/MFA_Ukraine)

&lt;hr/&gt;

[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)
[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)
![repo size](https://img.shields.io/github/repo-size/trekhleb/javascript-algorithms.svg)

This repository contains JavaScript based examples of many
popular algorithms and data structures.

Each algorithm and data structure has its own separate README
with related explanations and links for further reading (including ones
to YouTube videos).

_Read this in other languages:_
[_ÁÆÄ‰Ωì‰∏≠Êñá_](README.zh-CN.md),
[_ÁπÅÈ´î‰∏≠Êñá_](README.zh-TW.md),
[_ÌïúÍµ≠Ïñ¥_](README.ko-KR.md),
[_Êó•Êú¨Ë™û_](README.ja-JP.md),
[_Polski_](README.pl-PL.md),
[_Fran√ßais_](README.fr-FR.md),
[_Espa√±ol_](README.es-ES.md),
[_Portugu√™s_](README.pt-BR.md),
[_–†—É—Å—Å–∫–∏–π_](README.ru-RU.md),
[_T√ºrk√ße_](README.tr-TR.md),
[_Italiano_](README.it-IT.md),
[_Bahasa Indonesia_](README.id-ID.md),
[_–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞_](README.uk-UA.md),
[_Arabic_](README.ar-AR.md),
[_Ti·∫øng Vi·ªát_](README.vi-VN.md),
[_Deutsch_](README.de-DE.md),
[_Uzbek_](README.uz-UZ.md),
[_◊¢◊ë◊®◊ô◊™_](README.he-IL.md)

*‚òù Note that this project is meant to be used for learning and researching purposes
only, and it is **not** meant to be used for production.*

## Data Structures

A data structure is a particular way of organizing and storing data in a computer so that it can
be accessed and modified efficiently. More precisely, a data structure is a collection of data
values, the relationships among them, and the functions or operations that can be applied to
the data.

Remember that each data has its own trade-offs. And you need to pay attention more to why you&#039;re choosing a certain data structure than to how to implement it.

`B` - Beginner, `A` - Advanced

* `B` [Linked List](src/data-structures/linked-list)
* `B` [Doubly Linked List](src/data-structures/doubly-linked-list)
* `B` [Queue](src/data-structures/queue)
* `B` [Stack](src/data-structures/stack)
* `B` [Hash Table](src/data-structures/hash-table)
* `B` [Heap](src/data-structures/heap) - max and min heap versions
* `B` [Priority Queue](src/data-structures/priority-queue)
* `A` [Trie](src/data-structures/trie)
* `A` [Tree](src/data-structures/tree)
  * `A` [Binary Search Tree](src/data-structures/tree/binary-search-tree)
  * `A` [AVL Tree](src/data-structures/tree/avl-tree)
  * `A` [Red-Black Tree](src/data-structures/tree/red-black-tree)
  * `A` [Segment Tree](src/data-structures/tree/segment-tree) - with min/max/sum range queries examples
  * `A` [Fenwick Tree](src/data-structures/tree/fenwick-tree) (Binary Indexed Tree)
* `A` [Graph](src/data-structures/graph) (both directed and undirected)
* `A` [Disjoint Set](src/data-structures/disjoint-set) - a union‚Äìfind data structure or merge‚Äìfind set
* `A` [Bloom Filter](src/data-structures/bloom-filter)
* `A` [LRU Cache](src/data-structures/lru-cache/) - Least Recently Used (LRU) cache

## Algorithms

An algorithm is an unambiguous specification of how to solve a class of problems. It is
a set of rules that precisely define a sequence of operations.

`B` - Beginner, `A` - Advanced

### Algorithms by Topic

* **Math**
  * `B` [Bit Manipulation](src/algorithms/math/bits) - set/get/update/clear bits, multiplication/division by two, make negative etc.
  * `B` [Binary Floating Point](src/algorithms/math/binary-floating-point) - binary representation of the floating-point numbers.
  * `B` [Factorial](src/algorithms/math/factorial)
  * `B` [Fibonacci Number](src/algorithms/math/fibonacci) - classic and closed-form versions
  * `B` [Prime Factors](src/algorithms/math/prime-factors) - finding prime factors and counting them using Hardy-Ramanujan&#039;s theorem
  * `B` [Primality Test](src/algorithms/math/primality-test) (trial division method)
  * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)
  * `B` [Least Common Multiple](src/algorithms/math/least-common-multiple) (LCM)
  * `B` [Sieve of Eratosthenes](src/algorithms/math/sieve-of-eratosthenes) - finding all prime numbers up to any given limit
  * `B` [Is Power of Two](src/algorithms/math/is-power-of-two) - check if the number is power of two (naive and bitwise algorithms)
  * `B` [Pascal&#039;s Triangle](src/algorithms/math/pascal-triangle)
  * `B` [Complex Number](src/algorithms/math/complex-number) - complex numbers and basic operations with them
  * `B` [Radian &amp; Degree](src/algorithms/math/radian) - radians to degree and backwards conversion
  * `B` [Fast Powering](src/algorithms/math/fast-powering)
  * `B` [Horner&#039;s method](src/algorithms/math/horner-method) - polynomial evaluation
  * `B` [Matrices](src/algorithms/math/matrix) - matrices and basic matrix operations (multiplication, transposition, etc.)
  * `B` [Euclidean Distance](src/algorithms/math/euclidean-distance) - distance between two points/vectors/matrices
  * `A` [Integer Partition](src/algorithms/math/integer-partition)
  * `A` [Square Root](src/algorithms/math/square-root) - Newton&#039;s method
  * `A` [Liu Hui œÄ Algorithm](src/algorithms/math/liu-hui) - approximate œÄ calculations based on N-gons
  * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - decompose a function of time (a signal) into the frequencies that make it up
* **Sets**
  * `B` [Cartesian Product](src/algorithms/sets/cartesian-product) - product of multiple sets
  * `B` [Fisher‚ÄìYates Shuffle](src/algorithms/sets/fisher-yates) - random permutation of a finite sequence
  * `A` [Power Set](src/algorithms/sets/power-set) - all subsets of a set (bitwise, backtracking, and cascading solutions)
  * `A` [Permutations](src/algorithms/sets/permutations) (with and without repetitions)
  * `A` [Combinations](src/algorithms/sets/combinations) (with and without repetitions)
  * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS)
  * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence)
  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence) (SCS)
  * `A` [Knapsack Problem](src/algorithms/sets/knapsack-problem) - &quot;0/1&quot; and &quot;Unbound&quot; ones
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray) - &quot;Brute Force&quot; and &quot;Dynamic Programming&quot; (Kadane&#039;s) versions
  * `A` [Combination Sum](src/algorithms/sets/combination-sum) - find all combinations that form specific sum
* **Strings**
  * `B` [Hamming Distance](src/algorithms/string/hamming-distance) - number of positions at which the symbols are different
  * `B` [Palindrome](src/algorithms/string/palindrome) - check if the string is the same in reverse
  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - minimum edit distance between two sequences
  * `A` [Knuth‚ÄìMorris‚ÄìPratt Algorithm](src/algorithms/string/knuth-morris-pratt) (KMP Algorithm) - substring search (pattern matching)
  * `A` [Z Algorithm](src/algorithms/string/z-algorithm) - substring search (pattern matching)
  * `A` [Rabin Karp Algorithm](src/algorithms/string/rabin-karp) - substring search
  * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring)
  * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching)
* **Searches**
  * `B` [Linear Search](src/algorithms/search/linear-search)
  * `B` [Jump Search](src/algorithms/search/jump-search) (or Block Search) - search in sorted array
  * `B` [Binary Search](src/algorithms/search/binary-search) - search in sorted array
  * `B` [Interpolation Search](src/algorithms/search/interpolation-search) - search in uniformly distributed sorted array
* **Sorting**
  * `B` [Bubble Sort](src/algorithms/sorting/bubble-sort)
  * `B` [Selection Sort](src/algorithms/sorting/selection-sort)
  * `B` [Insertion Sort](src/algorithms/sorting/insertion-sort)
  * `B` [Heap Sort](src/algorithms/sorting/heap-sort)
  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)
  * `B` [Quicksort](src/algorithms/sorting/quick-sort) - in-place and non-in-place implementations
  * `B` [Shellsort](src/algorithms/sorting/shell-sort)
  * `B` [Counting Sort](src/algorithms/sorting/counting-sort)
  * `B` [Radix Sort](src/algorithms/sorting/radix-sort)
  * `B` [Bucket Sort](src/algorithms/sorting/bucket-sort)
* **Linked Lists**
  * `B` [Straight Traversal](src/algorithms/linked-list/traversal)
  * `B` [Reverse Traversal](src/algorithms/linked-list/reverse-traversal)
* **Trees**
  * `B` [Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)
  * `B` [Breadth-First Search](src/algorithms/tree/breadth-first-search) (BFS)
* **Graphs**
  * `B` [Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)
  * `B` [Breadth-First Search](src/algorithms/graph/breadth-first-search) (BFS)
  * `B` [Kruskal‚Äôs Algorithm](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - finding the shortest paths to all graph vertices from single vertex
  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - finding the shortest paths to all graph vertices from single vertex
  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - find the shortest paths between all pairs of vertices
  * `A` [Detect Cycle](src/algorithms/graph/detect-cycle) - for both directed and undirected graphs (DFS and Disjoint Set based versions)
  * `A` [Prim‚Äôs Algorithm](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Topological Sorting](src/algorithms/graph/topological-sorting) - DFS method
  * `A` [Articulation Points](src/algorithms/graph/articulation-points) - Tarjan&#039;s algorithm (DFS based)
  * `A` [Bridges](src/algorithms/graph/bridges) - DFS based algorithm
  * `A` [Eulerian Path and Eulerian Circuit](src/algorithms/graph/eulerian-path) - Fleury&#039;s algorithm - Visit every edge exactly once
  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once
  * `A` [Strongly Connected Components](src/algorithms/graph/strongly-connected-components) - Kosaraju&#039;s algorithm
  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city
* **Cryptography**
  * `B` [Polynomial Hash](src/algorithms/cryptography/polynomial-hash) - rolling hash function based on polynomial
  * `B` [Rail Fence Cipher](src/algorithms/cryptography/rail-fence-cipher) - a transposition cipher algorithm for encoding messages
  * `B` [Caesar Cipher](src/algorithms/cryptography/caesar-cipher) - simple substitution cipher
  * `B` [Hill Cipher](src/algorithms/cryptography/hill-cipher) - substitution cipher based on linear algebra
* **Machine Learning**
  * `B` [NanoNeuron](https://github.com/trekhleb/nano-neuron) - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)
  * `B` [k-NN](src/algorithms/ml/knn) - k-nearest neighbors classification algorithm
  * `B` [k-Means](src/algorithms/ml/k-means) - k-Means clustering algorithm
* **Image Processing**
  * `B` [Seam Carving](src/algorithms/image-processing/seam-carving) - content-aware image resizing algorithm
* **Statistics**
  * `B` [Weighted Random](src/algorithms/statistics/weighted-random) - select the random item from the list based on items&#039; weights
* **Evolutionary algorithms**
  * `A` [Genetic algorithm](https://github.com/trekhleb/self-parking-car-evolution) - example of how the genetic algorithm may be applied for training the self-parking cars
* **Uncategorized**
  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)
  * `B` [Square Matrix Rotation](src/algorithms/uncategorized/square-matrix-rotation) - in-place algorithm
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game) - backtracking, dynamic programming (top-down + bottom-up) and greedy examples
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths) - backtracking, dynamic programming and Pascal&#039;s Triangle based examples
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem (dynamic programming and brute force versions)
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach to the top (4 solutions)
  * `B` [Best Time To Buy Sell Stocks](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - divide and conquer and one-pass examples
  * `B` [Valid Parentheses](src/algorithms/stack/valid-parentheses) - check if a string has valid parentheses (using stack)
  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)
  * `A` [Knight&#039;s Tour](src/algorithms/uncategorized/knight-tour)

### Algorithms by Paradigm

An algorithmic paradigm is a generic method or approach which underlies the design of a class
of algorithms. It is an abstraction higher than the notion of an algorithm, just as an
algorithm is an abstraction higher than a computer program.

* **Brute Force** - look at all the possibilities and selects the best solution
  * `B` [Linear Search](src/algorithms/search/linear-search)
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach the top
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city
  * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - decompose a function of time (a signal) into the frequencies that make it up
* **Greedy** - choose the best option at the current time, without any consideration for the future
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `A` [Unbound Knapsack Problem](src/algorithms/sets/knapsack-problem)
  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - finding the shortest path to all graph vertices
  * `A` [Prim‚Äôs Algorithm](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Kruskal‚Äôs Algorithm](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph
* **Divide and Conquer** - divide the problem into smaller parts and then solve those parts
  * `B` [Binary Search](src/algorithms/search/binary-search)
  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)
  * `B` [Pascal&#039;s Triangle](src/algorithms/math/pascal-triangle)
  * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)
  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)
  * `B` [Quicksort](src/algorithms/sorting/quick-sort)
  * `B` [Tree Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)
  * `B` [Graph Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)
  * `B` [Matrices](src/algorithms/math/matrix) - generating and traversing the matrices of different shapes
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Fast Powering](src/algorithms/math/fast-powering)
  * `B` [Best Time To Buy Sell Stocks](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - divide and conquer and one-pass examples
  * `A` [Permutations](src/algorithms/sets/permutations) (with and without repetitions)
  * `A` [Combinations](src/algorithms/sets/combinations) (with and without repetitions)
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
* **Dynamic Programming** - build up a solution using previously found sub-solutions
  * `B` [Fibonacci Number](src/algorithms/math/fibonacci)
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach the top
  * `B` [Seam Carving](src/algorithms/image-processing/seam-carving) - content-aware image resizing algorithm
  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - minimum edit distance between two sequences
  * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS)
  * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring)
  * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence)
  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence)
  * `A` [0/1 Knapsack Problem](src/algorithms/sets/knapsack-problem)
  * `A` [Integer Partition](src/algorithms/math/integer-partition)
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - finding the shortest path to all graph vertices
  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - find the shortest paths between all pairs of vertices
  * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching)
* **Backtracking** - similarly to brute force, try to generate all possible solutions, but each time you generate the next solution, you test
if it satisfies all conditions and only then continue generating subsequent solutions. Otherwise, backtrack and go on a
different path to finding a solution. Normally the DFS traversal of state-space is being used.
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)
  * `B` [Power Set](src/algorithms/sets/power-set) - all subsets of a set
  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once
  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)
  * `A` [Knight&#039;s Tour](src/algorithms/uncategorized/knight-tour)
  * `A` [Combination Sum](src/algorithms/sets/combination-sum) - find all combinations that form specific sum
* **Branch &amp; Bound** - remember the lowest-cost solution found at each stage of the backtracking
search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of
a least-cost solution to the problem in order to discard partial solutions with costs larger than the
lowest-cost solution found so far. Normally, BFS traversal in combination with DFS traversal of state-space
tree is being used.

## How to use this repository

**Install all dependencies**

```
npm install
```

**Run ESLint**

You may want to run it to check code quality.

```
npm run lint
```

**Run all tests**

```
npm test
```

**Run tests by name**

```
npm test -- &#039;LinkedList&#039;
```

**Troubleshooting**

If linting or testing is failing, try to delete the `node_modules` folder and re-install npm packages:

```
rm -rf ./node_modules
npm i
```

Also, make sure that you&#039;re using the correct Node version (`&gt;=16`). If you&#039;re using [nvm](https://github.com/nvm-sh/nvm) for Node version management you may run `nvm use` from the root folde

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[GoogleChrome/lighthouse]]></title>
            <link>https://github.com/GoogleChrome/lighthouse</link>
            <guid>https://github.com/GoogleChrome/lighthouse</guid>
            <pubDate>Wed, 22 Oct 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[Automated auditing, performance metrics, and best practices for the web.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/GoogleChrome/lighthouse">GoogleChrome/lighthouse</a></h1>
            <p>Automated auditing, performance metrics, and best practices for the web.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 29,509</p>
            <p>Forks: 9,594</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[vanzan01/claude-code-sub-agent-collective]]></title>
            <link>https://github.com/vanzan01/claude-code-sub-agent-collective</link>
            <guid>https://github.com/vanzan01/claude-code-sub-agent-collective</guid>
            <pubDate>Wed, 22 Oct 2025 00:04:41 GMT</pubDate>
            <description><![CDATA[üß† Context Engineering Research - Not just another agent collection, but using research and context engineering to function as a collective. Hub-and-spoke coordination through Claude Code.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vanzan01/claude-code-sub-agent-collective">vanzan01/claude-code-sub-agent-collective</a></h1>
            <p>üß† Context Engineering Research - Not just another agent collection, but using research and context engineering to function as a collective. Hub-and-spoke coordination through Claude Code.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 401</p>
            <p>Forks: 45</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre># Claude Code Sub-Agent Collective

[![npm version](https://badge.fury.io/js/claude-code-collective.svg)](https://badge.fury.io/js/claude-code-collective)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)

**Experimental NPX installer for TDD-focused AI agents**

This installs a collection of AI agents designed for Test-Driven Development and rapid prototyping. It&#039;s experimental, opinionated, and I built it to speed up my own MVP development work.

## What this installs

```bash
npx claude-code-collective init
```

You get 30+ specialized agents that enforce TDD methodology and try to be smarter about using real documentation instead of guessing.

## Why this exists

I got tired of:
- AI giving me code without tests
- Having to manually look up library documentation
- Inconsistent development approaches across projects
- Breaking down complex features manually

So I built agents that:
1. Write tests first, always (RED ‚Üí GREEN ‚Üí REFACTOR)
2. Use Context7 to pull real documentation
3. Route work to specialists based on what needs doing
4. Break down complex requests intelligently

## What you get after installation

### Core Implementation Agents (TDD-enforced)
- **@component-implementation-agent** - UI components with tests and modern patterns
- **@feature-implementation-agent** - Business logic with comprehensive testing
- **@infrastructure-implementation-agent** - Build systems with testing setup
- **@testing-implementation-agent** - Test suites that actually test things
- **@polish-implementation-agent** - Performance optimization with preserved tests

### Quality &amp; Validation
- **@quality-agent** - Code review and standards checking
- **@devops-agent** - Deployment and CI/CD setup
- **@functional-testing-agent** - Browser testing with Playwright
- **@enhanced-quality-gate** - Comprehensive validation gates
- **@completion-gate** - Task validation and completion checks

### Research &amp; Intelligence (Experimental)
- **@research-agent** - Context7-powered documentation lookup
- **@prd-research-agent** - Intelligent requirement breakdown
- **@task-orchestrator** - Smart task parallelization

### System &amp; Coordination
- **`/van` command** - Entry point that routes to @task-orchestrator
- **@task-orchestrator** - Central routing hub that picks the right specialist
- **@behavioral-transformation-agent** - System behavioral setup
- **@hook-integration-agent** - TDD enforcement automation
- **@van-maintenance-agent** - System maintenance and updates

**Plus 20+ other specialized agents** for specific development tasks.

## Installation options

### Quick install (recommended for trying it out)
```bash
npx claude-code-collective init
```

### Other options if you want to be selective
```bash
# Just core agents for lightweight projects
npx claude-code-collective init --minimal

# Focus on testing framework only
npx claude-code-collective init --testing-only

# Just the behavioral system and hooks
npx claude-code-collective init --hooks-only

# Interactive setup with choices
npx claude-code-collective init --interactive
```

## What actually gets installed

```
your-project/
‚îú‚îÄ‚îÄ CLAUDE.md                    # Behavioral rules for agents
‚îú‚îÄ‚îÄ .claude/
‚îÇ   ‚îú‚îÄ‚îÄ settings.json           # Hook configuration
‚îÇ   ‚îú‚îÄ‚îÄ agents/                 # Agent definitions (30+ files)
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ prd-research-agent.md
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ task-orchestrator.md
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ lib/
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ research-analyzer.js  # Complexity analysis engine
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ ... (lots more agents)
‚îÇ   ‚îî‚îÄ‚îÄ hooks/                  # TDD enforcement scripts
‚îÇ       ‚îú‚îÄ‚îÄ test-driven-handoff.sh
‚îÇ       ‚îî‚îÄ‚îÄ collective-metrics.sh
‚îî‚îÄ‚îÄ .claude-collective/
    ‚îú‚îÄ‚îÄ tests/                  # Test framework templates
    ‚îú‚îÄ‚îÄ metrics/                # Usage tracking (for development)
    ‚îî‚îÄ‚îÄ package.json           # Testing setup (Vitest)
```

## How it works

1. **`/van` command** routes to **@task-orchestrator** (the routing hub) which analyzes requests and delegates to specialists
2. **Research phase** - agents use Context7 for real documentation  
3. **Tests written first** - before any implementation
4. **Implementation** - minimal code to make tests pass
5. **Refactoring** - clean up while keeping tests green
6. **Delivery** - you see what tests were added and results

### The TDD contract every agent follows

```
## DELIVERY COMPLETE
‚úÖ Tests written first (RED phase)
‚úÖ Implementation passes tests (GREEN phase)
‚úÖ Code refactored for quality (REFACTOR phase)
üìä Test Results: X/X passing
```

## Management commands

```bash
# Check what&#039;s installed and working
npx claude-code-collective status

# Validate installation integrity
npx claude-code-collective validate

# Fix broken installations
npx claude-code-collective repair

# Remove everything
npx claude-code-collective clean

# Get help
npx claude-code-collective --help
```

## Current state (honest assessment)

### What works well
- TDD enforcement prevents a lot of bugs
- Context7 integration is much better than agents guessing
- Routing usually picks the right agent for the job
- Breaking down complex tasks is genuinely helpful

### What&#039;s experimental/rough
- Some agents are still being refined
- Research phase can be slow sometimes
- Hook system requires restart (Claude Code limitation)
- Documentation is scattered across files

### Known limitations
- Requires Node.js &gt;= 16
- Need to restart Claude Code after installation
- Opinionated about TDD (if you don&#039;t like tests, skip this)
- Some agents might be too thorough/slow for simple tasks

## Testing your installation

After installing:

```bash
# 1. Validate everything installed correctly
npx claude-code-collective validate

# 2. Check status
npx claude-code-collective status

# 3. Restart Claude Code (required for hooks)

# 4. Try it out
# In Claude Code: &quot;Build a simple todo app with React&quot;
# Expected: routes to research ‚Üí breaks down task ‚Üí writes tests ‚Üí implements
```

## Troubleshooting

### Installation fails
- Check Node.js version: `node --version` (need &gt;= 16)
- Clear npm cache: `npm cache clean --force`
- Try force install: `npx claude-code-collective init --force`

### Agents don&#039;t work
- Restart Claude Code (hooks need to load)
- Check `.claude/settings.json` exists
- Run `npx claude-code-collective validate`

### Tests don&#039;t run
- Make sure your project has a test runner (Jest, Vitest, etc.)
- Check if tests are actually being written to files
- Look at the TDD completion reports from agents

### Research is slow
- Context7 might be having connectivity issues
- Agent might be being thorough (this varies)
- Check `.claude-collective/metrics/` for timing data

## Requirements

- **Node.js**: &gt;= 16.0.0
- **NPM**: &gt;= 8.0.0
- **Claude Code**: With MCP support and hook system
- **Restart**: Required after installation (hooks limitation)

## What this is and isn&#039;t

### What it is
- Experimental development aid for rapid prototyping
- Collection of TDD-focused AI agents
- Personal project that I use for my own MVPs
- Opinionated about test-first development

### What it isn&#039;t
- Production-ready enterprise software
- Guaranteed to work perfectly
- Following any official standards
- A replacement for thinking or understanding code

## Why TDD?

Because in my experience:
- Writing tests first forces better design thinking
- Tests catch bugs when they&#039;re cheap to fix
- Refactoring is safe with good test coverage
- Code with tests is easier to change later

The agents enforce this because I believe it leads to better outcomes. If you disagree with TDD philosophy, this tool probably isn&#039;t for you.

## Research features (experimental)

To make agents smarter about modern development:

- **Context7 integration** - real, current library documentation
- **ResearchDrivenAnalyzer** - intelligent complexity assessment
- **Smart task breakdown** - only creates subtasks when actually needed
- **Best practice application** - research-informed patterns

This stuff is experimental and sometimes overthinks things, but generally helpful.

## Solutions to common agent problems

AI agents can be unreliable. Here&#039;s what I built to deal with that:

**Agents ignoring TDD rules**: Hook system enforces test-first development before any code gets written.

**Agents bypassing directives**: CLAUDE.md behavioral operating system with prime directives that override default behavior.

**Agents stopping mid-task**: Test-driven handoff validation ensures work gets completed or explicitly handed off.

**Agents making up APIs**: Context7 integration forces agents to use real, current documentation.

**Agents taking wrong approach**: Central routing through **@task-orchestrator** hub prevents agents from self-selecting incorrectly.

**Agents breaking coordination**: Hub-and-spoke architecture eliminates peer-to-peer communication chaos.

**Agents skipping quality steps**: Quality gates that block completion until standards are met.

**Agents losing context**: Handoff contracts preserve required information across agent transitions.

**Agents providing inconsistent output**: Standardized TDD completion reporting from every implementation agent.

**Agents working on wrong priorities**: ResearchDrivenAnalyzer scores complexity to focus effort appropriately.

Most of these are enforced automatically through hooks and behavioral constraints, not just hoping agents follow instructions.

## Support

This is a personal project, but:
- **Issues welcome** if you find bugs or have suggestions
- **PRs welcome** for small fixes or better agent prompts  
- **Don&#039;t expect rapid responses** - this is a side project

**Get help**: Run `npx claude-code-collective validate` for diagnostics

## License

MIT License - Use it, break it, fix it, whatever works for you.

---

**Experimental** | **TDD-Focused** | **Personal Project** | **Use At Your Own Risk**

## Changelog

See [CHANGELOG.md](CHANGELOG.md) for detailed version history and release notes.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[meteor/meteor]]></title>
            <link>https://github.com/meteor/meteor</link>
            <guid>https://github.com/meteor/meteor</guid>
            <pubDate>Wed, 22 Oct 2025 00:04:40 GMT</pubDate>
            <description><![CDATA[Meteor, the JavaScript App Platform]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/meteor/meteor">meteor/meteor</a></h1>
            <p>Meteor, the JavaScript App Platform</p>
            <p>Language: JavaScript</p>
            <p>Stars: 44,739</p>
            <p>Forks: 5,263</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.meteor.com&quot; target=&quot;_blank&quot;&gt;
    &lt;img align=&quot;center&quot; width=&quot;225&quot; src=&quot;https://user-images.githubusercontent.com/841294/26841702-0902bbee-4af3-11e7-9805-0618da66a246.png&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;br&gt;

&lt;div align=&quot;center&quot;&gt;

[![Travis CI Status](https://api.travis-ci.com/meteor/meteor.svg?branch=devel)](https://app.travis-ci.com/github/meteor/meteor)
[![CircleCI Status](https://circleci.com/gh/meteor/meteor.svg?style=svg)](https://app.circleci.com/pipelines/github/meteor/meteor?branch=devel)
[![built with Meteor](https://img.shields.io/badge/Meteor-3.0.1-green?logo=meteor&amp;logoColor=white)](https://meteor.com)


&lt;/div&gt;

&lt;hr&gt;

Meteor is an **ultra-simple** environment for building **modern** web applications.

&lt;hr&gt;

- [Official Website](https://www.meteor.com)
- [Installation](https://www.meteor.com/developers/install)
- [Documentation](https://docs.meteor.com/#/full/)

&lt;hr&gt;

### üìö **Create your applications using modern JavaScript**

Benefit from the latest technology updates to rapidly prototype and develop your applications.

&lt;hr&gt;

### ‚ú® **Integrate technologies you already use**

Use popular frameworks and tools right out-of-the-box. Focus on building features instead of configuring disparate components yourself.

&lt;hr&gt;

### üíª **Build apps for any device**

Use the same code whether you‚Äôre developing for web, iOS, Android, or desktop for a seamless update experience for your users.

&lt;hr&gt;

# üî• Getting Started

How about trying a tutorial to get started with your favorite technology?

| [&lt;img align=&quot;left&quot; width=&quot;25&quot; src=&quot;https://upload.wikimedia.org/wikipedia/commons/a/a7/React-icon.svg&quot;&gt; React](https://react-tutorial.meteor.com/) |
| - |
| [&lt;img align=&quot;left&quot; width=&quot;25&quot; src=&quot;https://progsoft.net/images/blaze-css-icon-3e80acb3996047afd09f1150f53fcd78e98c1e1b.png&quot;&gt; Blaze](https://blaze-tutorial.meteor.com/) |
| [&lt;img align=&quot;left&quot; width=&quot;25&quot; src=&quot;https://vuejs.org/images/logo.png&quot;&gt; Vue](https://vue-tutorial.meteor.com/) |
| [&lt;img align=&quot;left&quot; width=&quot;25&quot; src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/Svelte_Logo.svg/1200px-Svelte_Logo.svg.png&quot;&gt; Svelte](https://svelte-tutorial.meteor.com/) |

Next, read the [documentation](https://docs.meteor.com/) and get some [examples](https://github.com/meteor/examples).

# üöÄ Quick Start

On your platform, use this line:

```shell
&gt; npm install -g meteor
```
 
üöÄ To create a project:

```shell
&gt; meteor create my-app
```

‚òÑÔ∏è Run it:

```shell
cd my-app
meteor
```

# üß± Developer Resources

**Building an application with Meteor?**

* Deploy on [Meteor Cloud](https://www.meteor.com/cloud)
* Discuss on [Forums](https://forums.meteor.com/)
* Join the Meteor community Slack by clicking this [invite link](https://join.slack.com/t/meteor-community/shared_invite/enQtODA0NTU2Nzk5MTA3LWY5NGMxMWRjZDgzYWMyMTEyYTQ3MTcwZmU2YjM5MTY3MjJkZjQ0NWRjOGZlYmIxZjFlYTA5Mjg4OTk3ODRiOTc).
* Announcement list. Subscribe in the [footer](https://www.meteor.com/).


Interested in helping or contributing to Meteor?  These resources will help:

* [Core development guide](DEVELOPMENT.md)
* [Contribution guidelines](CONTRIBUTING.md)
* [Feature requests](https://github.com/meteor/meteor/discussions/)
* [Issue tracker](https://github.com/meteor/meteor/issues)

To uninstall Meteor: 
  - If installed via npm, run:
      ```shell
      meteor-installer uninstall
      ```
  - If installed via curl, run:
    ```shell
    rm -rf ~/.meteor 
    sudo rm /usr/local/bin/meteor
    ```
To find more information about installation, [read here](https://docs.meteor.com/install.html#uninstall).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[Leaflet/Leaflet]]></title>
            <link>https://github.com/Leaflet/Leaflet</link>
            <guid>https://github.com/Leaflet/Leaflet</guid>
            <pubDate>Wed, 22 Oct 2025 00:04:39 GMT</pubDate>
            <description><![CDATA[üçÉ JavaScript library for mobile-friendly interactive maps üá∫üá¶]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Leaflet/Leaflet">Leaflet/Leaflet</a></h1>
            <p>üçÉ JavaScript library for mobile-friendly interactive maps üá∫üá¶</p>
            <p>Language: JavaScript</p>
            <p>Stars: 43,799</p>
            <p>Forks: 6,013</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>Leaflet was created 14 years ago by [Volodymyr Agafonkin](https://agafonkin.com), a Ukrainian citizen living in Kyiv.

Russian bombs are now falling over Volodymyr&#039;s hometown. His family, his friends, his neighbours, thousands and thousands of absolutely wonderful people, are either seeking refuge or fighting for their lives.

Russian soldiers have already killed tens of thousands of civilians, including women and children, and are committing mass war crimes like gang rapes, executions, looting, and targeted bombings of civilian shelters and places of cultural significance. The death toll keeps rising, and Ukraine needs your help.

As Volodymyr [expressed a few days before the invasion](https://twitter.com/LeafletJS/status/1496051256409919489):

&gt; If you want to help, educate yourself and others on the Russian threat, follow reputable journalists, demand severe Russian sanctions and Ukrainian support from your leaders, protest the war, reach out to Ukrainian friends, donate to Ukrainian charities. Just don&#039;t be silent.

Ukrainians recommend the [Come Back Alive](https://savelife.in.ua/en/) charity. For other options, see [StandWithUkraine](https://stand-with-ukraine.pp.ua).

If an appeal to humanity doesn&#039;t work for you, I&#039;ll appeal to your egoism: the future of Ukrainian citizens is the future of Leaflet.

It is chilling to see Leaflet being used for [documenting Russia&#039;s war crimes](https://ukraine.bellingcat.com/), [factual reporting of the war](https://liveuamap.com/) and for coordination of humanitarian efforts across Europe. We commend these uses of Leaflet.

If you support the actions of the Russian government (even after reading all this), do everyone else a favour and [carry some seeds in your pocket](https://www.theguardian.com/world/video/2022/feb/25/ukrainian-woman-sunflower-seeds-russian-soldiers-video).

Yours truly,&lt;br&gt;
Leaflet maintainers.

---

&lt;img width=&quot;600&quot; src=&quot;https://rawgit.com/Leaflet/Leaflet/main/src/images/logo.svg&quot; alt=&quot;Leaflet&quot; /&gt;

Leaflet is the leading open-source JavaScript library for **building powerful interactive maps**.

Weighing just about 40 kB of gzipped JS plus 3.2 kB of gzipped CSS code, it has all the mapping [features][] most developers ever need.

Leaflet is designed with *simplicity*, *performance* and *usability* in mind.
It works efficiently across all major desktop and mobile platforms out of the box,
taking advantage of modern browser features while being accessible on older ones too.
It can be extended with a huge amount of [plugins][],
has a beautiful, easy to use and [well-documented][] API
and a simple, readable [source code][] that is a joy to [contribute][] to.

For more info, docs and tutorials, check out the [official website][].&lt;br&gt;
For **Leaflet downloads** (including the built main version), check out the [download page][].

We&#039;re happy to meet new contributors.
If you want to **get involved** with Leaflet development, check out the [contribution guide][contribute].
Let&#039;s make the best mapping library that will ever exist,
and push the limits of what&#039;s possible with online maps!

[![CI](https://github.com/Leaflet/Leaflet/actions/workflows/main.yml/badge.svg)](https://github.com/Leaflet/Leaflet/actions/workflows/main.yml)

 [contributors]: https://github.com/Leaflet/Leaflet/graphs/contributors
 [features]: http://leafletjs.com/#features
 [plugins]: http://leafletjs.com/plugins.html
 [well-documented]: http://leafletjs.com/reference.html &quot;Leaflet API reference&quot;
 [source code]: https://github.com/Leaflet/Leaflet &quot;Leaflet GitHub repository&quot;
 [hosted on GitHub]: http://github.com/Leaflet/Leaflet
 [contribute]: https://github.com/Leaflet/Leaflet/blob/main/CONTRIBUTING.md &quot;A guide to contributing to Leaflet&quot;
 [official website]: http://leafletjs.com
 [download page]: http://leafletjs.com/download.html

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[gatsbyjs/gatsby]]></title>
            <link>https://github.com/gatsbyjs/gatsby</link>
            <guid>https://github.com/gatsbyjs/gatsby</guid>
            <pubDate>Wed, 22 Oct 2025 00:04:38 GMT</pubDate>
            <description><![CDATA[The best React-based framework with performance, scalability and security built in.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/gatsbyjs/gatsby">gatsbyjs/gatsby</a></h1>
            <p>The best React-based framework with performance, scalability and security built in.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 55,937</p>
            <p>Forks: 10,271</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.gatsbyjs.com&quot;&gt;
    &lt;img alt=&quot;Gatsby&quot; src=&quot;https://www.gatsbyjs.com/Gatsby-Monogram.svg&quot; width=&quot;60&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;
  Gatsby
&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;strong&gt;
    The future of web development is here.
  &lt;/strong&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  Gatsby is a free and open-source framework based on React that helps developers build blazing fast websites and apps. &lt;br /&gt; It combines the control and scalability of dynamically rendered sites with the speed of static-site generation, creating a whole new web of possibilities.
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/blob/master/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg&quot; alt=&quot;Gatsby is released under the MIT license.&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://circleci.com/gh/gatsbyjs/gatsby&quot;&gt;
    &lt;img src=&quot;https://circleci.com/gh/gatsbyjs/gatsby.svg?style=shield&quot; alt=&quot;Current CircleCI build status.&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/gatsby&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/v/gatsby.svg&quot; alt=&quot;Current npm package version.&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://npmcharts.com/compare/gatsby?minimal=true&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/dm/gatsby.svg&quot; alt=&quot;Downloads per month on npm.&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://npmcharts.com/compare/gatsby?minimal=true&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/dt/gatsby.svg&quot; alt=&quot;Total downloads on npm.&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://gatsbyjs.com/contributing/how-to-contribute/&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg&quot; alt=&quot;PRs welcome!&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h2 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.gatsbyjs.com/docs/quick-start/&quot;&gt;Quickstart&lt;/a&gt;
  &lt;span&gt; ¬∑ &lt;/span&gt;
  &lt;a href=&quot;https://www.gatsbyjs.com/docs/tutorial/getting-started/&quot;&gt;Tutorial&lt;/a&gt;
  &lt;span&gt; ¬∑ &lt;/span&gt;
  &lt;a href=&quot;https://www.gatsbyjs.com/plugins/&quot;&gt;Plugins&lt;/a&gt;
  &lt;span&gt; ¬∑ &lt;/span&gt;
  &lt;a href=&quot;https://www.gatsbyjs.com/starters/&quot;&gt;Starters&lt;/a&gt;
  &lt;span&gt; ¬∑ &lt;/span&gt;
  &lt;a href=&quot;https://www.gatsbyjs.com/showcase/&quot;&gt;Showcase&lt;/a&gt;
  &lt;span&gt; ¬∑ &lt;/span&gt;
  &lt;a href=&quot;https://www.gatsbyjs.com/contributing/how-to-contribute/&quot;&gt;Contribute&lt;/a&gt;
  &lt;br /&gt;
  Support: &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/discussions&quot;&gt;Discussions&lt;/a&gt;
&lt;/h2&gt;

Gatsby helps professional developers efficiently create maintainable, highly-performant, content-rich websites.

- **Load Data From Anywhere.** Gatsby pulls in data from any data source, whether it‚Äôs Markdown files, a headless CMS like Contentful or WordPress, or a REST or GraphQL API. Use source plugins to load your data, then develop using Gatsby‚Äôs uniform GraphQL interface.

- **Go Beyond Static Websites.** Get all the benefits of static websites with none of the limitations. Gatsby sites are fully functional React apps, so you can create high-quality, dynamic web apps, from blogs to e-commerce sites to user dashboards.

- **Choose your Rendering Options.** You can choose alternative [rendering options](https://gatsbyjs.com/docs/conceptual/rendering-options/), namely Deferred Static Generation (DSG) and Server-Side Rendering (SSR), in addition to Static Site Generation (SSG) ‚Äî on a per-page basis. This type of granular control allows you to optimize for performance and productivity without sacrificing one for the other.

- **Performance Is Baked In.** Ace your performance audits by default. Gatsby automates code splitting, image optimization, inlining critical styles, lazy-loading, prefetching resources, and more to ensure your site is fast ‚Äî no manual tuning required.

- **Use a Modern Stack for Every Site.** No matter where the data comes from, Gatsby sites are built using React and GraphQL. Build a uniform workflow for you and your team, regardless of whether the data is coming from the same backend.

- **Host at Scale for Pennies.** Gatsby sites don‚Äôt require servers, so you can host your entire site on a CDN for a fraction of the cost of a server-rendered site. Many Gatsby sites can be hosted entirely free on [Netlify](https://www.netlify.com/) and other similar services.

- **Use Gatsby&#039;s Centralized Data Layer Everywhere.** With Gatsby&#039;s [Valhalla Content Hub](https://www.gatsbyjs.com/products/valhalla-content-hub/) you can bring Gatsby&#039;s data layer to any project. Making it accessible via a unified GraphQL API for building content sites, eCommerce platforms, and both native and web applications.

[**Learn how to use Gatsby for your next project.**](https://www.gatsbyjs.com/docs/)

## üöÄ Ship your first Gatsby site in 5 Minutes

Click the link below to quickly try the workflow of developing, building, and deploying websites with Gatsby and Netlify.

[![Deploy to Netlify](https://www.netlify.com/img/deploy/button.svg)](https://app.netlify.com/start/deploy?repository=https://github.com/gatsbyjs/gatsby-starter-blog&amp;utm_source=github&amp;utm_medium=link&amp;utm_campaign=onboarding&amp;utm_content=oss)

At the end of this process, you&#039;ll have

1. a site working on Netlify
2. a new repository that is linked to that new site
3. as you push changes to your new repository, Netlify will automatically rebuild and redeploy your site!

## üíª Get started with Gatsby locally in 5 Minutes

You can get a new Gatsby site up and running on your local dev environment in 5 minutes with these four steps:

1. **Initialize a new project.**

   ```shell
   npm init gatsby
   ```

   Give it the name &quot;My Gatsby Site&quot;.

2. **Start the site in `develop` mode.**

   Next, move into your new site‚Äôs directory and start it up:

   ```shell
   cd my-gatsby-site/
   npm run develop
   ```

3. **Open the source code and start editing!**

   Your site is now running at `http://localhost:8000`. Open the `my-gatsby-site` directory in your code editor of choice and edit `src/pages/index.js`. Save your changes, and the browser will update in real time!

At this point, you‚Äôve got a fully functional Gatsby website. For additional information on how you can customize your Gatsby site, see our [plugins](https://gatsbyjs.com/plugins/) and [the official tutorial](https://www.gatsbyjs.com/docs/tutorial/getting-started/).

## üéì Learning Gatsby

Full documentation for Gatsby lives [on the website](https://www.gatsbyjs.com/).

- **For most developers, we recommend starting with our [in-depth tutorial for creating a site with Gatsby](https://www.gatsbyjs.com/docs/tutorial/getting-started/).** It starts with zero assumptions about your level of ability and walks through every step of the process.

- **To dive straight into code samples head [to our documentation](https://www.gatsbyjs.com/docs/).** In particular, check out the ‚Äú&lt;i&gt;How-to Guides&lt;/i&gt;‚Äù, ‚Äú&lt;i&gt;Reference&lt;/i&gt;‚Äù, and ‚Äú&lt;i&gt;Conceptual Guides&lt;/i&gt;‚Äù sections in the sidebar.

We welcome suggestions for improving our docs. See the [‚Äúhow to contribute‚Äù](https://www.gatsbyjs.com/contributing/how-to-contribute/) documentation for more details.

**Start Learning Gatsby: [Follow the Tutorial](https://www.gatsbyjs.com/docs/tutorial/getting-started/) ¬∑ [Read the Docs](https://www.gatsbyjs.com/docs/)**

## üö¢ Release Notes

Wondering what we&#039;ve shipped recently? Check out our [release notes](https://www.gatsbyjs.com/docs/reference/release-notes) for key highlights, performance improvements, new features, and notable bugfixes.

Also, read our [documentation on version support](https://www.gatsbyjs.com/docs/reference/release-notes/gatsby-version-support/) to understand our plans for each version of Gatsby.

## üíº Migration Guides

Already have a Gatsby site? These handy guides will help you add the improvements of Gatsby v5 to your site without starting from scratch!

- [Migrate from v4 to v5](https://www.gatsbyjs.com/docs/reference/release-notes/migrating-from-v4-to-v5/)
- [Migrate from v3 to v4](https://www.gatsbyjs.com/docs/reference/release-notes/migrating-from-v3-to-v4/)
- [Migrate from v2 to v3](https://www.gatsbyjs.com/docs/reference/release-notes/migrating-from-v2-to-v3/)

## ‚ùó Code of Conduct

Gatsby is dedicated to building a welcoming, diverse, safe community. We expect everyone participating in the Gatsby community to abide by our [**Code of Conduct**](https://www.gatsbyjs.com/contributing/code-of-conduct/). Please read it. Please follow it. In the Gatsby community, we work hard to build each other up and create amazing things together. üí™üíú

## ü§ù How to Contribute

Whether you&#039;re helping us fix bugs, improve the docs, or spread the word, we&#039;d love to have you as part of the Gatsby community!

Check out our [**Contributing Guide**](https://www.gatsbyjs.com/contributing/) for ideas on contributing and setup steps for getting our repositories up and running on your local machine.

### A note on how this repository is organized

This repository is a [monorepo](https://trunkbaseddevelopment.com/monorepos/) managed using [Lerna](https://github.com/lerna/lerna). This means there are [multiple packages](https://github.com/gatsbyjs/gatsby/tree/master/packages) managed in this codebase, even though we publish them to NPM as separate packages.

## üìù License

Licensed under the [MIT License](./LICENSE).

## üíú Thanks

Thanks go out to all our many contributors creating plugins, starters, videos, and blog posts. And a special appreciation for our community members helping with issues and PRs, or answering questions on GitHub Discussions.

A big part of what makes Gatsby great is each and every one of you in the community. Your contributions enrich the Gatsby experience and make it better every day.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>