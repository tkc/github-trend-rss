<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Thu, 20 Mar 2025 00:04:18 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[mendableai/firecrawl-mcp-server]]></title>
            <link>https://github.com/mendableai/firecrawl-mcp-server</link>
            <guid>https://github.com/mendableai/firecrawl-mcp-server</guid>
            <pubDate>Thu, 20 Mar 2025 00:04:18 GMT</pubDate>
            <description><![CDATA[Official Firecrawl MCP Server - Adds powerful web scraping to Cursor, Claude and any other LLM clients.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mendableai/firecrawl-mcp-server">mendableai/firecrawl-mcp-server</a></h1>
            <p>Official Firecrawl MCP Server - Adds powerful web scraping to Cursor, Claude and any other LLM clients.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,360</p>
            <p>Forks: 103</p>
            <p>Stars today: 137 stars today</p>
            <h2>README</h2><pre># Firecrawl MCP Server

A Model Context Protocol (MCP) server implementation that integrates with [Firecrawl](https://github.com/mendableai/firecrawl) for web scraping capabilities.

Big thanks to [@vrknetha](https://github.com/vrknetha), [@cawstudios](https://caw.tech) for the initial implementation!

## Features

- Scrape, crawl, search, extract, deep research and batch scrape support
- Web scraping with JS rendering
- URL discovery and crawling
- Web search with content extraction
- Automatic retries with exponential backoff
- - Efficient batch processing with built-in rate limiting
- Credit usage monitoring for cloud API
- Comprehensive logging system
- Support for cloud and self-hosted FireCrawl instances
- Mobile/Desktop viewport support
- Smart content filtering with tag inclusion/exclusion

## Installation

### Running with npx

```bash
env FIRECRAWL_API_KEY=fc-YOUR_API_KEY npx -y firecrawl-mcp
```

### Manual Installation

```bash
npm install -g firecrawl-mcp
```

### Running on Cursor

Configuring Cursor üñ•Ô∏è
Note: Requires Cursor version 0.45.6+

To configure FireCrawl MCP in Cursor:

1. Open Cursor Settings
2. Go to Features &gt; MCP Servers 
3. Click &quot;+ Add New MCP Server&quot;
4. Enter the following:
   - Name: &quot;firecrawl-mcp&quot; (or your preferred name)
   - Type: &quot;command&quot;
   - Command: `env FIRECRAWL_API_KEY=your-api-key npx -y firecrawl-mcp`

&gt; If you are using Windows and are running into issues, try `cmd /c &quot;set FIRECRAWL_API_KEY=your-api-key &amp;&amp; npx -y firecrawl-mcp&quot;`

Replace `your-api-key` with your FireCrawl API key.

After adding, refresh the MCP server list to see the new tools. The Composer Agent will automatically use FireCrawl MCP when appropriate, but you can explicitly request it by describing your web scraping needs. Access the Composer via Command+L (Mac), select &quot;Agent&quot; next to the submit button, and enter your query.

### Running on Windsurf

Add this to your `./codeium/windsurf/model_config.json`:

```json
{
  &quot;mcpServers&quot;: {
    &quot;mcp-server-firecrawl&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;firecrawl-mcp&quot;],
      &quot;env&quot;: {
        &quot;FIRECRAWL_API_KEY&quot;: &quot;YOUR_API_KEY_HERE&quot;
      }
    }
  }
}
```


### Installing via Smithery (Legacy)

To install FireCrawl for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@mendableai/mcp-server-firecrawl):

```bash
npx -y @smithery/cli install @mendableai/mcp-server-firecrawl --client claude
```

## Configuration

### Environment Variables

#### Required for Cloud API

- `FIRECRAWL_API_KEY`: Your FireCrawl API key
  - Required when using cloud API (default)
  - Optional when using self-hosted instance with `FIRECRAWL_API_URL`
- `FIRECRAWL_API_URL` (Optional): Custom API endpoint for self-hosted instances
  - Example: `https://firecrawl.your-domain.com`
  - If not provided, the cloud API will be used (requires API key)

#### Optional Configuration

##### Retry Configuration

- `FIRECRAWL_RETRY_MAX_ATTEMPTS`: Maximum number of retry attempts (default: 3)
- `FIRECRAWL_RETRY_INITIAL_DELAY`: Initial delay in milliseconds before first retry (default: 1000)
- `FIRECRAWL_RETRY_MAX_DELAY`: Maximum delay in milliseconds between retries (default: 10000)
- `FIRECRAWL_RETRY_BACKOFF_FACTOR`: Exponential backoff multiplier (default: 2)

##### Credit Usage Monitoring

- `FIRECRAWL_CREDIT_WARNING_THRESHOLD`: Credit usage warning threshold (default: 1000)
- `FIRECRAWL_CREDIT_CRITICAL_THRESHOLD`: Credit usage critical threshold (default: 100)

### Configuration Examples

For cloud API usage with custom retry and credit monitoring:

```bash
# Required for cloud API
export FIRECRAWL_API_KEY=your-api-key

# Optional retry configuration
export FIRECRAWL_RETRY_MAX_ATTEMPTS=5        # Increase max retry attempts
export FIRECRAWL_RETRY_INITIAL_DELAY=2000    # Start with 2s delay
export FIRECRAWL_RETRY_MAX_DELAY=30000       # Maximum 30s delay
export FIRECRAWL_RETRY_BACKOFF_FACTOR=3      # More aggressive backoff

# Optional credit monitoring
export FIRECRAWL_CREDIT_WARNING_THRESHOLD=2000    # Warning at 2000 credits
export FIRECRAWL_CREDIT_CRITICAL_THRESHOLD=500    # Critical at 500 credits
```

For self-hosted instance:

```bash
# Required for self-hosted
export FIRECRAWL_API_URL=https://firecrawl.your-domain.com

# Optional authentication for self-hosted
export FIRECRAWL_API_KEY=your-api-key  # If your instance requires auth

# Custom retry configuration
export FIRECRAWL_RETRY_MAX_ATTEMPTS=10
export FIRECRAWL_RETRY_INITIAL_DELAY=500     # Start with faster retries
```

### Usage with Claude Desktop

Add this to your `claude_desktop_config.json`:

```json
{
  &quot;mcpServers&quot;: {
    &quot;mcp-server-firecrawl&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;firecrawl-mcp&quot;],
      &quot;env&quot;: {
        &quot;FIRECRAWL_API_KEY&quot;: &quot;YOUR_API_KEY_HERE&quot;,

        &quot;FIRECRAWL_RETRY_MAX_ATTEMPTS&quot;: &quot;5&quot;,
        &quot;FIRECRAWL_RETRY_INITIAL_DELAY&quot;: &quot;2000&quot;,
        &quot;FIRECRAWL_RETRY_MAX_DELAY&quot;: &quot;30000&quot;,
        &quot;FIRECRAWL_RETRY_BACKOFF_FACTOR&quot;: &quot;3&quot;,

        &quot;FIRECRAWL_CREDIT_WARNING_THRESHOLD&quot;: &quot;2000&quot;,
        &quot;FIRECRAWL_CREDIT_CRITICAL_THRESHOLD&quot;: &quot;500&quot;
      }
    }
  }
}
```

### System Configuration

The server includes several configurable parameters that can be set via environment variables. Here are the default values if not configured:

```typescript
const CONFIG = {
  retry: {
    maxAttempts: 3, // Number of retry attempts for rate-limited requests
    initialDelay: 1000, // Initial delay before first retry (in milliseconds)
    maxDelay: 10000, // Maximum delay between retries (in milliseconds)
    backoffFactor: 2, // Multiplier for exponential backoff
  },
  credit: {
    warningThreshold: 1000, // Warn when credit usage reaches this level
    criticalThreshold: 100, // Critical alert when credit usage reaches this level
  },
};
```

These configurations control:

1. **Retry Behavior**

   - Automatically retries failed requests due to rate limits
   - Uses exponential backoff to avoid overwhelming the API
   - Example: With default settings, retries will be attempted at:
     - 1st retry: 1 second delay
     - 2nd retry: 2 seconds delay
     - 3rd retry: 4 seconds delay (capped at maxDelay)

2. **Credit Usage Monitoring**
   - Tracks API credit consumption for cloud API usage
   - Provides warnings at specified thresholds
   - Helps prevent unexpected service interruption
   - Example: With default settings:
     - Warning at 1000 credits remaining
     - Critical alert at 100 credits remaining

### Rate Limiting and Batch Processing

The server utilizes FireCrawl&#039;s built-in rate limiting and batch processing capabilities:

- Automatic rate limit handling with exponential backoff
- Efficient parallel processing for batch operations
- Smart request queuing and throttling
- Automatic retries for transient errors

## Available Tools

### 1. Scrape Tool (`firecrawl_scrape`)

Scrape content from a single URL with advanced options.

```json
{
  &quot;name&quot;: &quot;firecrawl_scrape&quot;,
  &quot;arguments&quot;: {
    &quot;url&quot;: &quot;https://example.com&quot;,
    &quot;formats&quot;: [&quot;markdown&quot;],
    &quot;onlyMainContent&quot;: true,
    &quot;waitFor&quot;: 1000,
    &quot;timeout&quot;: 30000,
    &quot;mobile&quot;: false,
    &quot;includeTags&quot;: [&quot;article&quot;, &quot;main&quot;],
    &quot;excludeTags&quot;: [&quot;nav&quot;, &quot;footer&quot;],
    &quot;skipTlsVerification&quot;: false
  }
}
```

### 2. Batch Scrape Tool (`firecrawl_batch_scrape`)

Scrape multiple URLs efficiently with built-in rate limiting and parallel processing.

```json
{
  &quot;name&quot;: &quot;firecrawl_batch_scrape&quot;,
  &quot;arguments&quot;: {
    &quot;urls&quot;: [&quot;https://example1.com&quot;, &quot;https://example2.com&quot;],
    &quot;options&quot;: {
      &quot;formats&quot;: [&quot;markdown&quot;],
      &quot;onlyMainContent&quot;: true
    }
  }
}
```

Response includes operation ID for status checking:

```json
{
  &quot;content&quot;: [
    {
      &quot;type&quot;: &quot;text&quot;,
      &quot;text&quot;: &quot;Batch operation queued with ID: batch_1. Use firecrawl_check_batch_status to check progress.&quot;
    }
  ],
  &quot;isError&quot;: false
}
```

### 3. Check Batch Status (`firecrawl_check_batch_status`)

Check the status of a batch operation.

```json
{
  &quot;name&quot;: &quot;firecrawl_check_batch_status&quot;,
  &quot;arguments&quot;: {
    &quot;id&quot;: &quot;batch_1&quot;
  }
}
```

### 4. Search Tool (`firecrawl_search`)

Search the web and optionally extract content from search results.

```json
{
  &quot;name&quot;: &quot;firecrawl_search&quot;,
  &quot;arguments&quot;: {
    &quot;query&quot;: &quot;your search query&quot;,
    &quot;limit&quot;: 5,
    &quot;lang&quot;: &quot;en&quot;,
    &quot;country&quot;: &quot;us&quot;,
    &quot;scrapeOptions&quot;: {
      &quot;formats&quot;: [&quot;markdown&quot;],
      &quot;onlyMainContent&quot;: true
    }
  }
}
```

### 5. Crawl Tool (`firecrawl_crawl`)

Start an asynchronous crawl with advanced options.

```json
{
  &quot;name&quot;: &quot;firecrawl_crawl&quot;,
  &quot;arguments&quot;: {
    &quot;url&quot;: &quot;https://example.com&quot;,
    &quot;maxDepth&quot;: 2,
    &quot;limit&quot;: 100,
    &quot;allowExternalLinks&quot;: false,
    &quot;deduplicateSimilarURLs&quot;: true
  }
}
```

### 6. Extract Tool (`firecrawl_extract`)

Extract structured information from web pages using LLM capabilities. Supports both cloud AI and self-hosted LLM extraction.

```json
{
  &quot;name&quot;: &quot;firecrawl_extract&quot;,
  &quot;arguments&quot;: {
    &quot;urls&quot;: [&quot;https://example.com/page1&quot;, &quot;https://example.com/page2&quot;],
    &quot;prompt&quot;: &quot;Extract product information including name, price, and description&quot;,
    &quot;systemPrompt&quot;: &quot;You are a helpful assistant that extracts product information&quot;,
    &quot;schema&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;name&quot;: { &quot;type&quot;: &quot;string&quot; },
        &quot;price&quot;: { &quot;type&quot;: &quot;number&quot; },
        &quot;description&quot;: { &quot;type&quot;: &quot;string&quot; }
      },
      &quot;required&quot;: [&quot;name&quot;, &quot;price&quot;]
    },
    &quot;allowExternalLinks&quot;: false,
    &quot;enableWebSearch&quot;: false,
    &quot;includeSubdomains&quot;: false
  }
}
```

Example response:

```json
{
  &quot;content&quot;: [
    {
      &quot;type&quot;: &quot;text&quot;,
      &quot;text&quot;: {
        &quot;name&quot;: &quot;Example Product&quot;,
        &quot;price&quot;: 99.99,
        &quot;description&quot;: &quot;This is an example product description&quot;
      }
    }
  ],
  &quot;isError&quot;: false
}
```

#### Extract Tool Options:

- `urls`: Array of URLs to extract information from
- `prompt`: Custom prompt for the LLM extraction
- `systemPrompt`: System prompt to guide the LLM
- `schema`: JSON schema for structured data extraction
- `allowExternalLinks`: Allow extraction from external links
- `enableWebSearch`: Enable web search for additional context
- `includeSubdomains`: Include subdomains in extraction

When using a self-hosted instance, the extraction will use your configured LLM. For cloud API, it uses FireCrawl&#039;s managed LLM service.

## Logging System

The server includes comprehensive logging:

- Operation status and progress
- Performance metrics
- Credit usage monitoring
- Rate limit tracking
- Error conditions

Example log messages:

```
[INFO] FireCrawl MCP Server initialized successfully
[INFO] Starting scrape for URL: https://example.com
[INFO] Batch operation queued with ID: batch_1
[WARNING] Credit usage has reached warning threshold
[ERROR] Rate limit exceeded, retrying in 2s...
```

## Error Handling

The server provides robust error handling:

- Automatic retries for transient errors
- Rate limit handling with backoff
- Detailed error messages
- Credit usage warnings
- Network resilience

Example error response:

```json
{
  &quot;content&quot;: [
    {
      &quot;type&quot;: &quot;text&quot;,
      &quot;text&quot;: &quot;Error: Rate limit exceeded. Retrying in 2 seconds...&quot;
    }
  ],
  &quot;isError&quot;: true
}
```

## Development

```bash
# Install dependencies
npm install

# Build
npm run build

# Run tests
npm test
```

### Contributing

1. Fork the repository
2. Create your feature branch
3. Run tests: `npm test`
4. Submit a pull request

## License

MIT License - see LICENSE file for details
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[stdlib-js/stdlib]]></title>
            <link>https://github.com/stdlib-js/stdlib</link>
            <guid>https://github.com/stdlib-js/stdlib</guid>
            <pubDate>Thu, 20 Mar 2025 00:04:17 GMT</pubDate>
            <description><![CDATA[‚ú® Standard library for JavaScript and Node.js. ‚ú®]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/stdlib-js/stdlib">stdlib-js/stdlib</a></h1>
            <p>‚ú® Standard library for JavaScript and Node.js. ‚ú®</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,006</p>
            <p>Forks: 733</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WordPress/gutenberg]]></title>
            <link>https://github.com/WordPress/gutenberg</link>
            <guid>https://github.com/WordPress/gutenberg</guid>
            <pubDate>Thu, 20 Mar 2025 00:04:16 GMT</pubDate>
            <description><![CDATA[The Block Editor project for WordPress and beyond. Plugin is available from the official repository.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WordPress/gutenberg">WordPress/gutenberg</a></h1>
            <p>The Block Editor project for WordPress and beyond. Plugin is available from the official repository.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 10,993</p>
            <p>Forks: 4,354</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre># Gutenberg

[![End-to-End Tests](https://github.com/WordPress/gutenberg/workflows/End-to-End%20Tests/badge.svg)](https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22End-to-End+Tests%22+branch%3Atrunk)
[![Static Analysis (Linting, License, Type checks...)](&lt;https://github.com/WordPress/gutenberg/workflows/Static%20Analysis%20(Linting,%20License,%20Type%20checks...)/badge.svg&gt;)](https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22Static+Analysis+%28Linting%2C+License%2C+Type+checks...%29%22+branch%3Atrunk)
[![Unit Tests](https://github.com/WordPress/gutenberg/workflows/Unit%20Tests/badge.svg)](https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22Unit+Tests%22+branch%3Atrunk)
[![Create Block](https://github.com/WordPress/gutenberg/workflows/Create%20Block/badge.svg)](https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22Create+Block%22+branch%3Atrunk)
[![React Native E2E Tests (iOS)](&lt;https://github.com/WordPress/gutenberg/workflows/React%20Native%20E2E%20Tests%20(iOS)/badge.svg&gt;)](https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22React+Native+E2E+Tests+%28iOS%29%22+branch%3Atrunk)
[![React Native E2E Tests (Android)](&lt;https://github.com/WordPress/gutenberg/workflows/React%20Native%20E2E%20Tests%20(Android)/badge.svg&gt;)](https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22React+Native+E2E+Tests+%28Android%29%22+branch%3Atrunk)

&lt;a href=&quot;https://wordpress.github.io/gutenberg/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/storybooks/brand/master/badge/badge-storybook.svg&quot; alt=&quot;Storybook Badge&quot; /&gt;&lt;/a&gt;

[![lerna](https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg)](https://lerna.js.org)

![Screenshot of the Gutenberg Editor, editing a post in WordPress](https://user-images.githubusercontent.com/1204802/100067796-fc3e8700-2e36-11eb-993b-6b80b4310b87.png)

Welcome to the development hub for the WordPress Gutenberg project!

&quot;Gutenberg&quot; is a codename for a whole new paradigm in WordPress site building and publishing, that aims to revolutionize the entire publishing experience as much as Gutenberg did the printed word. Right now, the project is in the second phase of a four-phase process that will touch every piece of WordPress -- Editing, Customization, **Collaboration** (which includes [Real-time collaboration](https://make.wordpress.org/core/2023/07/03/real-time-collaboration/), [Asynchronous collaboration](https://make.wordpress.org/core/2023/07/04/workflows/), [Publishing flows](https://make.wordpress.org/core/2023/07/04/workflows/), [Post revisions interface](https://make.wordpress.org/core/2023/07/05/revisions/), [Admin design](https://make.wordpress.org/core/2023/07/12/admin-design/), [Library](https://make.wordpress.org/core/2023/07/10/block-library/)), and Multilingual -- and is focused on a new editing experience, the block editor.

The block editor introduces a modular approach to pages and posts: each piece of content in the editor, from a paragraph to an image gallery to a headline, is its own block. And just like physical blocks, WordPress blocks can be added, arranged, and rearranged, allowing WordPress users to create media-rich pages in a visually intuitive way -- and without work-arounds like shortcodes or custom HTML.

The block editor first became available in December 2018, and we&#039;re still hard at work refining the experience, creating more and better blocks, and laying the groundwork for the next three phases of work. The Gutenberg plugin gives you the latest version of the block editor, so you can join us in testing bleeding-edge features, start playing with blocks, and maybe get inspired to build your own.

Check out the [Keeping up with Gutenberg Index](https://make.wordpress.org/core/handbook/references/keeping-up-with-gutenberg-index/)

## Getting Started

Get hands on: check out the [block editor live demo](https://wordpress.org/gutenberg/) to play with a test instance of the editor.

### Using Gutenberg

-   **Download:** To use the latest release of the Gutenberg plugin on your WordPress site: install from the plugins page in wp-admin, or [download from the WordPress.org plugins repository](https://wordpress.org/plugins/gutenberg/).

-   **User Documentation:** See the [WordPress Editor documentation](https://wordpress.org/documentation/article/wordpress-block-editor/) for detailed docs on using the editor as an author creating posts and pages.

-   **User Support:** If you have run into an issue, you should check the [Support Forums first](https://wordpress.org/support/forums/). The forums are a great place to get help. If you have a bug to report, please [submit it to the Gutenberg repository](https://github.com/wordpress/gutenberg/issues). Please search prior to creating a new bug to confirm it&#039;s not a duplicate.

### Developing for Gutenberg

Extending and customizing is at the heart of the WordPress platform, this is no different for the Gutenberg project. The editor and future products can be extended by third-party developers using plugins.

Review the [Quick Start Guide](https://developer.wordpress.org/block-editor/getting-started/quick-start-guide/) for the fastest way to get started extending the block editor. See the [Block Editor Handbook](https://developer.wordpress.org/block-editor/) for extensive tutorials, documentation, and API references. Also, check the [WordPress Developer Blog](https://developer.wordpress.org/blog/) for great articles about block development, among other topics.

### Contribute to Gutenberg

Gutenberg is an open-source project and welcomes all contributors from code to design, and from documentation to triage. The project is built by many contributors and volunteers, and we&#039;d love your help building it.

See the [Contributors Handbook](https://developer.wordpress.org/block-editor/contributors/) for all the details on how you can contribute.

To get up and running quickly with **code contribution** see [Getting Started With Code Contribution](/docs/contributors/code/getting-started-with-code-contribution.md). Also check out the other resources available on the [Code Contributions](/docs/contributors/code/README.md) page.

In whichever way you wish to contribute please be sure to read the [Contributing Guidelines](https://github.com/WordPress/gutenberg/blob/HEAD/CONTRIBUTING.md) first.

As with all WordPress projects, we want to ensure a welcoming environment for everyone. With that in mind, all contributors are expected to follow our [Code of Conduct](https://make.wordpress.org/handbook/community-code-of-conduct/).

## Get Involved

You can join us in the `#core-editor` channel in Slack, see the [WordPress Slack page](https://make.wordpress.org/chat/) for signup information; it is free to join.

## License

WordPress is free software, and is released under the terms of the GNU General Public License version 2 or (at your option) any later version. See [LICENSE.md](LICENSE.md) for complete license.

&lt;br/&gt;&lt;br/&gt;&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://s.w.org/style/images/codeispoetry.png?1&quot; alt=&quot;Code is Poetry.&quot; /&gt;&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[louislam/uptime-kuma]]></title>
            <link>https://github.com/louislam/uptime-kuma</link>
            <guid>https://github.com/louislam/uptime-kuma</guid>
            <pubDate>Thu, 20 Mar 2025 00:04:15 GMT</pubDate>
            <description><![CDATA[A fancy self-hosted monitoring tool]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/louislam/uptime-kuma">louislam/uptime-kuma</a></h1>
            <p>A fancy self-hosted monitoring tool</p>
            <p>Language: JavaScript</p>
            <p>Stars: 66,120</p>
            <p>Forks: 5,829</p>
            <p>Stars today: 64 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot; width=&quot;100%&quot;&gt;
    &lt;img src=&quot;./public/icon.svg&quot; width=&quot;128&quot; alt=&quot;&quot; /&gt;
&lt;/div&gt;

# Uptime Kuma

Uptime Kuma is an easy-to-use self-hosted monitoring tool.

&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/louislam/uptime-kuma?style=flat&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/louislam/uptime-kuma&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/v/louislam/uptime-kuma/latest?label=docker%20image%20ver.&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/louislam/uptime-kuma&quot; /&gt;&lt;/a&gt;  &lt;a target=&quot;_blank&quot; href=&quot;https://opencollective.com/uptime-kuma&quot;&gt;&lt;img src=&quot;https://opencollective.com/uptime-kuma/total/badge.svg?label=Open%20Collective%20Backers&amp;color=brightgreen&quot; /&gt;&lt;/a&gt;
[![GitHub Sponsors](https://img.shields.io/github/sponsors/louislam?label=GitHub%20Sponsors)](https://github.com/sponsors/louislam) &lt;a href=&quot;https://weblate.kuma.pet/projects/uptime-kuma/uptime-kuma/&quot;&gt;
&lt;img src=&quot;https://weblate.kuma.pet/widgets/uptime-kuma/-/svg-badge.svg&quot; alt=&quot;Translation status&quot; /&gt;
&lt;/a&gt;

&lt;img src=&quot;https://user-images.githubusercontent.com/1336778/212262296-e6205815-ad62-488c-83ec-a5b0d0689f7c.jpg&quot; width=&quot;700&quot; alt=&quot;&quot; /&gt;

## ü•î Live Demo

Try it!

Demo Server (Location: Frankfurt - Germany): https://demo.kuma.pet/start-demo

It is a temporary live demo, all data will be deleted after 10 minutes. Sponsored by [Uptime Kuma Sponsors](https://github.com/louislam/uptime-kuma#%EF%B8%8F-sponsors).

## ‚≠ê Features

- Monitoring uptime for HTTP(s) / TCP / HTTP(s) Keyword / HTTP(s) Json Query / Ping / DNS Record / Push / Steam Game Server / Docker Containers
- Fancy, Reactive, Fast UI/UX
- Notifications via Telegram, Discord, Gotify, Slack, Pushover, Email (SMTP), and [90+ notification services, click here for the full list](https://github.com/louislam/uptime-kuma/tree/master/src/components/notifications)
- 20-second intervals
- [Multi Languages](https://github.com/louislam/uptime-kuma/tree/master/src/lang)
- Multiple status pages
- Map status pages to specific domains
- Ping chart
- Certificate info
- Proxy support
- 2FA support

## üîß How to Install

### üê≥ Docker

```bash
docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
```

Uptime Kuma is now running on &lt;http://0.0.0.0:3001&gt;.

&gt; [!WARNING]
&gt; File Systems like **NFS** (Network File System) are **NOT** supported. Please map to a local directory or volume.

&gt; [!NOTE]
&gt; If you want to limit exposure to localhost (without exposing port for other users or to use a [reverse proxy](https://github.com/louislam/uptime-kuma/wiki/Reverse-Proxy)), you can expose the port like this:
&gt; 
&gt; ```bash
&gt; docker run -d --restart=always -p 127.0.0.1:3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
&gt; ```

### üí™üèª Non-Docker

Requirements:

- Platform
  - ‚úÖ Major Linux distros such as Debian, Ubuntu, CentOS, Fedora and ArchLinux etc.
  - ‚úÖ Windows 10 (x64), Windows Server 2012 R2 (x64) or higher
  - ‚ùå FreeBSD / OpenBSD / NetBSD
  - ‚ùå Replit / Heroku
- [Node.js](https://nodejs.org/en/download/) 18 / 20.4
- [npm](https://docs.npmjs.com/cli/) 9
- [Git](https://git-scm.com/downloads)
- [pm2](https://pm2.keymetrics.io/) - For running Uptime Kuma in the background

```bash
git clone https://github.com/louislam/uptime-kuma.git
cd uptime-kuma
npm run setup

# Option 1. Try it
node server/server.js

# (Recommended) Option 2. Run in the background using PM2
# Install PM2 if you don&#039;t have it:
npm install pm2 -g &amp;&amp; pm2 install pm2-logrotate

# Start Server
pm2 start server/server.js --name uptime-kuma
```

Uptime Kuma is now running on http://localhost:3001

More useful PM2 Commands

```bash
# If you want to see the current console output
pm2 monit

# If you want to add it to startup
pm2 save &amp;&amp; pm2 startup
```

### Advanced Installation

If you need more options or need to browse via a reverse proxy, please read:

https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install

## üÜô How to Update

Please read:

https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update

## üÜï What&#039;s Next?

I will assign requests/issues to the next milestone.

https://github.com/louislam/uptime-kuma/milestones

## ‚ù§Ô∏è Sponsors

Thank you so much! (GitHub Sponsors will be updated manually. OpenCollective sponsors will be updated automatically, the list will be cached by GitHub though. It may need some time to be updated)

&lt;img src=&quot;https://uptime.kuma.pet/sponsors?v=6&quot; alt /&gt;

## üñº More Screenshots

Light Mode:

&lt;img src=&quot;https://uptime.kuma.pet/img/light.jpg&quot; width=&quot;512&quot; alt=&quot;&quot; /&gt;

Status Page:

&lt;img src=&quot;https://user-images.githubusercontent.com/1336778/134628766-a3fe0981-0926-4285-ab46-891a21c3e4cb.png&quot; width=&quot;512&quot; alt=&quot;&quot; /&gt;

Settings Page:

&lt;img src=&quot;https://louislam.net/uptimekuma/2.jpg&quot; width=&quot;400&quot; alt=&quot;&quot; /&gt;

Telegram Notification Sample:

&lt;img src=&quot;https://louislam.net/uptimekuma/3.jpg&quot; width=&quot;400&quot; alt=&quot;&quot; /&gt;

## Motivation

- I was looking for a self-hosted monitoring tool like &quot;Uptime Robot&quot;, but it is hard to find a suitable one. One of the closest ones is statping. Unfortunately, it is not stable and no longer maintained.
- Wanted to build a fancy UI.
- Learn Vue 3 and vite.js.
- Show the power of Bootstrap 5.
- Try to use WebSocket with SPA instead of a REST API.
- Deploy my first Docker image to Docker Hub.

If you love this project, please consider giving it a ‚≠ê.

## üó£Ô∏è Discussion / Ask for Help

‚ö†Ô∏è For any general or technical questions, please don&#039;t send me an email, as I am unable to provide support in that manner. I will not respond if you ask questions there.

I recommend using Google, GitHub Issues, or Uptime Kuma&#039;s subreddit for finding answers to your question. If you cannot find the information you need, feel free to ask:

- [GitHub Issues](https://github.com/louislam/uptime-kuma/issues)
- [Subreddit (r/UptimeKuma)](https://www.reddit.com/r/UptimeKuma/)

My Reddit account: [u/louislamlam](https://reddit.com/u/louislamlam)
You can mention me if you ask a question on the subreddit.

## Contributions

### Create Pull Requests

We DO NOT accept all types of pull requests and do not want to waste your time. Please be sure that you have read and follow pull request rules:
[CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma](https://github.com/louislam/uptime-kuma/blob/master/CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma)

### Test Pull Requests

There are a lot of pull requests right now, but I don&#039;t have time to test them all.

If you want to help, you can check this:
https://github.com/louislam/uptime-kuma/wiki/Test-Pull-Requests

### Test Beta Version

Check out the latest beta release here: https://github.com/louislam/uptime-kuma/releases

### Bug Reports / Feature Requests

If you want to report a bug or request a new feature, feel free to open a [new issue](https://github.com/louislam/uptime-kuma/issues).

### Translations

If you want to translate Uptime Kuma into your language, please visit [Weblate Readme](https://github.com/louislam/uptime-kuma/blob/master/src/lang/README.md).

### Spelling &amp; Grammar

Feel free to correct the grammar in the documentation or code.
My mother language is not English and my grammar is not that great.


</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[jgraph/drawio]]></title>
            <link>https://github.com/jgraph/drawio</link>
            <guid>https://github.com/jgraph/drawio</guid>
            <pubDate>Thu, 20 Mar 2025 00:04:14 GMT</pubDate>
            <description><![CDATA[draw.io is a JavaScript, client-side editor for general diagramming.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/jgraph/drawio">jgraph/drawio</a></h1>
            <p>draw.io is a JavaScript, client-side editor for general diagramming.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 903</p>
            <p>Forks: 185</p>
            <p>Stars today: 23 stars today</p>
            <h2>README</h2><pre>About
-----
draw.io, this project, is a configurable diagramming/whiteboarding visualization application. draw.io is jointly owned and developed by JGraph Ltd and draw.io AG.

As well as running this project, we run a production-grade deployment of the diagramming interface at https://app.diagrams.net.

License
-----------------

The minified code authored by us in this repo is licensed under an Apache v2 license, but the sources to build those files are not in this repo. This is not an open source project. We do not accept PRs unless one of the maintainers specifically says it&#039;s OK (basically never).

The JGraph provided icons and diagram templates are licensed under the [CC BY 4.0](https://creativecommons.org/licenses/by/4.0/). Additional terms may also apply where the icons are originally defined by a third-party copyright holder. We have checked in all cases that the original license allows use in this project. Also see the terms for using the draw.io logo below.

Additional minified JavaScript files and Java libraries are used in this project. All of the licenses are deemed compatible with the Apache 2.0, nothing is GPL or AGPL, due diligence is performed on all third-party code.

We make no copyright claim on the content you create with this software, regardless of the copyright of individual icons used in such content.

Scope of the Project
--------------------

draw.io is a diagramming or whiteboarding application, depending on which theme is selected. It is not an SVG editing app, the SVG export is designed only for embedding in web pages, not for further editing in other tools.

The application is designed to be entirely as-is. draw.io is not suitable as a framework for building other products from, as source code is not provided. For this try either [Tldraw](https://github.com/tldraw/tldraw) or [Excalidraw](https://github.com/excalidraw/excalidraw).

Note, in particular, we don&#039;t have support for collaborative editing in this project. If this is important, one of the projects above is likely a better choice.

If you are using a draw.io project/product and have issues or questions about the editor itself, the issue tracker and discussion in this GitHub project are likely a good place to look.

Running
-------

One way to run draw.io is to fork this project, [publish the master branch to GitHub pages](https://help.github.com/categories/github-pages-basics/) and the [pages sites](https://jgraph.github.io/drawio/src/main/webapp/index.html) will have the full editor functionality (sans the integrations).

Another way is to use [the recommended Docker project](https://github.com/jgraph/docker-drawio) or to download [draw.io Desktop](https://get.diagrams.net).

The full packaged .war of the client and servlets is built when the project is tagged and available on the [releases page](https://github.com/jgraph/draw.io/releases).

Supported Browsers
------------------

draw.io supports Chrome 98+, Firefox 94+, Safari 15.4+, Opera 84+, WebView Android 98+, Safari iOS 15.4+ and Edge 98+.

Logo and trademark usage
------------------------

draw.io is a registered EU trademark, #018062448

Do not use the draw.io name or any draw.io logo in a way that suggests you are JGraph, your offering or project is by JGraph, or that JGraph is endorsing you or your offering or project.

Do not use any draw.io logo as the icon or logo for your business/organization, offering, project, domain name, social media account, or website.

Do not modify the permitted draw.io logos, including changing the color, dimensions, or combining with other words or design elements.

Do not use JGraph trademarks or logos without JGraph‚Äôs prior written permission.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[microsoft/Web-Dev-For-Beginners]]></title>
            <link>https://github.com/microsoft/Web-Dev-For-Beginners</link>
            <guid>https://github.com/microsoft/Web-Dev-For-Beginners</guid>
            <pubDate>Thu, 20 Mar 2025 00:04:13 GMT</pubDate>
            <description><![CDATA[24 Lessons, 12 Weeks, Get Started as a Web Developer]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/microsoft/Web-Dev-For-Beginners">microsoft/Web-Dev-For-Beginners</a></h1>
            <p>24 Lessons, 12 Weeks, Get Started as a Web Developer</p>
            <p>Language: JavaScript</p>
            <p>Stars: 85,696</p>
            <p>Forks: 12,777</p>
            <p>Stars today: 49 stars today</p>
            <h2>README</h2><pre>[![GitHub license](https://img.shields.io/github/license/microsoft/Web-Dev-For-Beginners.svg)](https://github.com/microsoft/Web-Dev-For-Beginners/blob/master/LICENSE)
[![GitHub contributors](https://img.shields.io/github/contributors/microsoft/Web-Dev-For-Beginners.svg)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/graphs/contributors/)
[![GitHub issues](https://img.shields.io/github/issues/microsoft/Web-Dev-For-Beginners.svg)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/issues/)
[![GitHub pull-requests](https://img.shields.io/github/issues-pr/microsoft/Web-Dev-For-Beginners.svg)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/pulls/)
[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)

[![GitHub watchers](https://img.shields.io/github/watchers/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;label=Watch&amp;maxAge=2592000)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/watchers/)
[![GitHub forks](https://img.shields.io/github/forks/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;label=Fork&amp;maxAge=2592000)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/network/)
[![GitHub stars](https://img.shields.io/github/stars/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;label=Star&amp;maxAge=2592000)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/stargazers/)

[![](https://dcbadge.vercel.app/api/server/ByRwuEEgH4)](https://discord.gg/zxKYvhSnVp?WT.mc_id=academic-000002-leestott)

[![Open in Visual Studio Code](https://img.shields.io/static/v1?logo=visualstudiocode&amp;label=&amp;message=Open%20in%20Visual%20Studio%20Code&amp;labelColor=2c2c32&amp;color=007acc&amp;logoColor=007acc)](https://open.vscode.dev/microsoft/Web-Dev-For-Beginners)

# Web Development for Beginners - A Curriculum

Learn the fundamentals of web development with our 12-week comprehensive course by Microsoft Cloud Advocates. Each of the 24 lessons dives into JavaScript, CSS, and HTML through hands-on projects like terrariums, browser extensions, and space games. Engage with quizzes, discussions, and practical assignments. Enhance your skills and optimize your knowledge retention with our effective project-based pedagogy. Start your coding journey today!

#### üßë‚Äçüéì _Are you a student?_

Visit [**Student Hub page**](https://docs.microsoft.com/learn/student-hub/?WT.mc_id=academic-77807-sagibbon) where you will find beginner resources, Student packs and even ways to get a free certificate voucher. This is the page you want to bookmark and check from time to time as we switch out content monthly.

### üì£ Announcement - _New Curriculum_ on Generative AI for JavaScript was just released

Don&#039;t miss our new Generative AI curriculum!

Visit [https://aka.ms/genai-js-course](https://aka.ms/genai-js-course) to get started!

&lt;div&gt;
  &lt;img src=&quot;./images/background.png&quot; width=&quot;600px&quot; /&gt;
&lt;/div&gt;

- Lessons covering everything from basics to RAG.
- Interact with historical characters using GenAI and our companion app.
- Fun and engaging narrative, you&#039;ll be time traveling!

&lt;div&gt;
  &lt;img src=&quot;./images/character.png&quot; width=&quot;600px&quot; /&gt;
&lt;/div&gt;

Each lesson includes an assignment to complete, a knowledge check and a challenge to guide you on learning topics like:
- Prompting and prompt engineering
- Text and image app generation
- Search apps

Visit [https://aka.ms/genai-js-course]([https://aka.ms/genai-js-course) to get started!



## üå± Getting Started

&gt; **Teachers**, we have [included some suggestions](for-teachers.md) on how to use this curriculum. We&#039;d love your feedback [in our discussion forum](https://github.com/microsoft/Web-Dev-For-Beginners/discussions/categories/teacher-corner)!

**[Learners](https://aka.ms/student-page/?WT.mc_id=academic-77807-sagibbon)**, for each lesson, start with a pre-lecture quiz and follow through with reading the lecture material, completing the various activities and check your understanding with the post-lecture quiz.

To enhance your learning experience, connect with your peers to work on the projects together! Discussions are encouraged in our [discussion forum](https://github.com/microsoft/Web-Dev-For-Beginners/discussions) where our team of moderators will be available to answer your questions.

To further your education, we highly recommend exploring [Microsoft Learn](https://learn.microsoft.com/users/wirelesslife/collections/p1ddcy5jwy0jkm?WT.mc_id=academic-77807-sagibbon) for additional study materials.

### üìã Setting up your environment

This curriculum has a development environment ready to go! As you get started you can choose to run the curriculum in a [Codespace](https://github.com/features/codespaces/) (_a browser-based, no installs needed environment_), or locally on your computer using a text editor such as [Visual Studio Code](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon).

#### Create your repository
For you to easily save your work, it is recommended that you create your own copy of this repository. You can do this by clicking the **Use this template** button at the top of the page. This will create a new repository in your GitHub account with a copy of the curriculum.

Follow these steps:
1. **Fork the Repository**: Click on the &quot;Fork&quot; button at the top-right corner of this page.
2. **Clone the Repository**:   `git clone https://github.com/microsoft/Web-Dev-For-Beginners.git`

#### Running the curriculum in a Codespace

In your copy of this repository that you created, click the **Code** button and select **Open with Codespaces**. This will create a new Codespace for you to work in.

&lt;img src=&quot;./images/createcodespace.png&quot; alt=&quot;Create codespace&quot; style=&quot;width:270px;&quot;/&gt;

#### Running the curriculum locally on your computer

To run this curriculum locally on your computer, you will need a text editor, a browser and a command line tool. Our first lesson, [Introduction to Programming Languages and Tools of the Trade](https://github.com/microsoft/Web-Dev-For-Beginners/tree/main/1-getting-started-lessons/1-intro-to-programming-languages), will walk you through various options for each of these tools for you to select what works best for you.

Our recommendation is to use [Visual Studio Code](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon) as your editor, which also has a built-in [Terminal](https://code.visualstudio.com/docs/terminal/basics/?WT.mc_id=academic-77807-sagibbon). You can download Visual Studio Code [here](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon).


1. Clone your repository to your computer. You can do this by clicking the **Code** button and copying the URL:

    &lt;img src=&quot;./images/createcodespace.png&quot; alt=&quot;Copy your repository URL&quot; style=&quot;width:270px;&quot;/&gt;

    Then, open [Terminal](https://code.visualstudio.com/docs/terminal/basics/?WT.mc_id=academic-77807-sagibbon) within [Visual Studio Code](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon) and run the following command, replacing `&lt;your-repository-url&gt;` with the URL you just copied:

    ```bash 
    git clone &lt;your-repository-url&gt;
    ```

2. Open the folder in Visual Studio Code. You can do this by clicking **File** &gt; **Open Folder** and selecting the folder you just cloned.


&gt;  Recommended Visual Studio Code extensions:
&gt;
&gt; * [Live Server](https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer&amp;WT.mc_id=academic-77807-sagibbon) - to preview HTML pages within Visual Studio Code
&gt; * [Copilot](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot&amp;WT.mc_id=academic-77807-sagibbon) - to help you write code faster

## üìÇ Each lesson includes:

- optional sketchnote
- optional supplemental video
- pre-lesson warmup quiz
- written lesson
- for project-based lessons, step-by-step guides on how to build the project
- knowledge checks
- a challenge
- supplemental reading
- assignment
- post-lesson quiz

&gt; **A note about quizzes**: All quizzes are contained in the Quiz-app folder, 48 total quizzes of three questions each. They are linked from within the lessons the quiz app can be run locally or deployed to Azure; follow the instruction in the `quiz-app` folder. They are gradually being localized.

## üóÉÔ∏è Lessons

|     |                       Project Name                       |                            Concepts Taught                             | Learning Objectives                                                                                                                 |                                                         Linked Lesson                                                          |         Author          |
| :-: | :------------------------------------------------------: | :--------------------------------------------------------------------: | ----------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------: | :---------------------: |
| 01  |                     Getting Started                      |           Introduction to Programming and Tools of the Trade           | Learn the basic underpinnings behind most programming languages and about software that helps professional developers do their jobs | [Intro to Programming Languages and Tools of the Trade](/1-getting-started-lessons/1-intro-to-programming-languages/README.md) |         Jasmine         |
| 02  |                     Getting Started                      |             Basics of GitHub, includes working with a team             | How to use GitHub in your project, how to collaborate with others on a code base                                                    |                            [Intro to GitHub](/1-getting-started-lessons/2-github-basics/README.md)                             |          Floor          |
| 03  |                     Getting Started                      |                             Accessibility                              | Learn the basics of web accessibility                                                                                               |                       [Accessibility Fundamentals](/1-getting-started-lessons/3-accessibility/README.md)                       |       Christopher       |
| 04  |                        JS Basics                         |                         JavaScript Data Types                          | The basics of JavaScript data types                                                                                                 |                                       [Data Types](/2-js-basics/1-data-types/README.md)                                        |         Jasmine         |
| 05  |                        JS Basics                         |                         Functions and Methods                          | Learn about functions and methods to manage an application&#039;s logic flow                                                             |                              [Functions and Methods](/2-js-basics/2-functions-methods/README.md)                               | Jasmine and Christopher |
| 06  |                        JS Basics                         |                        Making Decisions with JS                        | Learn how to create conditions in your code using decision-making methods                                                           |                                 [Making Decisions](/2-js-basics/3-making-decisions/README.md)                                  |         Jasmine         |
| 07  |                        JS Basics                         |                            Arrays and Loops                            | Work with data using arrays and loops in JavaScript                                                                                 |                                   [Arrays and Loops](/2-js-basics/4-arrays-loops/README.md)                                    |         Jasmine         |
| 08  |       [Terrarium](/3-terrarium/solution/README.md)       |                            HTML in Practice                            | Build the HTML to create an online terrarium, focusing on building a layout                                                         |                                 [Introduction to HTML](/3-terrarium/1-intro-to-html/README.md)                                 |           Jen           |
| 09  |       [Terrarium](/3-terrarium/solution/README.md)       |                            CSS in Practice                             | Build the CSS to style the online terrarium, focusing on the basics of CSS including making the page responsive                     |                                  [Introduction to CSS](/3-terrarium/2-intro-to-css/README.md)                                  |           Jen           |
| 10  |            [Terrarium](/3-terrarium/solution/README.md)            |                 JavaScript Closures, DOM manipulation                  | Build the JavaScript to make the terrarium function as a drag/drop interface, focusing on closures and DOM manipulation             |                  [JavaScript Closures, DOM manipulation](/3-terrarium/3-intro-to-DOM-and-closures/README.md)                   |           Jen           |
| 11  |          [Typing Game](/4-typing-game/solution/README.md)          |                          Build a Typing Game                           | Learn how to use keyboard events to drive the logic of your JavaScript app                                                          |                                [Event-Driven Programming](/4-typing-game/typing-game/README.md)                                |       Christopher       |
| 12  | [Green Browser Extension](/5-browser-extension/solution/README.md) |                         Working with Browsers                          | Learn how browsers work, their history, and how to scaffold the first elements of a browser extension                               |                               [About Browsers](/5-browser-extension/1-about-browsers/README.md)                                |           Jen           |
| 13  | [Green Browser Extension](/5-browser-extension/solution/README.md) | Building a form, calling an API and storing variables in local storage | Build the JavaScript elements of your browser extension to call an API using variables stored in local storage                      |                [APIs, Forms, and Local Storage](/5-browser-extension/2-forms-browsers-local-storage/README.md)                 |           Jen           |
| 14  | [Green Browser Extension](/5-browser-extension/solution/README.md) |          Background processes in the browser, web performance          | Use the browser&#039;s background processes to manage the extension&#039;s icon; learn about web performance and some optimizations to make   |             [Background Tasks and Performance](/5-browser-extension/3-background-tasks-and-performance/README.md)              |           Jen           |
| 15  |           [Space Game](/6-space-game/solution/README.md)           |             More Advanced Game Development with JavaScript             | Learn about Inheritance using both Classes and Composition and the Pub/Sub pattern, in preparation for building a game              |                      [Introduction to Advanced Game Development](/6-space-game/1-introduction/README.md)                       |          Chris          |
| 16  |           [Space Game](/6-space-game/solution/README.md)           |                           Drawing to canvas                            | Learn about the Canvas API, used to draw elements to a screen                                                                       |                                [Drawing to Canvas](/6-space-game/2-drawing-to-canvas/README.md)                                |          Chris          |
| 17  |           [Space Game](/6-space-game/solution/README.md)           |                   Moving elements around the screen                    | Discover how elements can gain motion using the cartesian coordinates and the Canvas API                                            |                           [Moving Elements Around](/6-space-game/3-moving-elements-around/README.md)                           |          Chris          |
| 18  |           [Space Game](/6-space-game/solution/README.md)           |                          Collision detection                           | Make elements collide and react to each other using keypresses and provide a cooldown function to ensure performance of the game    |                              [Collision Detection](/6-space-game/4-collision-detection/README.md)                              |          Chris          |
| 19  |           [Space Game](/6-space-game/solution/README.md)           |                             Keeping score                              | Perform math calculations based on the game&#039;s status and performance                                                                |                                    [Keeping Score](/6-space-game/5-keeping-score/README.md)                                    |          Chris          |
| 20  |           [Space Game](/6-space-game/solution/README.md)           |                     Ending and restarting the game                     | Learn about ending and restarting the game, including cleaning up assets and resetting variable values                              |                                [The Ending Condition](/6-space-game/6-end-condition/README.md)                                 |          Chris          |
| 21  |         [Banking App](/7-bank-project/solution/README.md)          |                 HTML Templates and Routes in a Web App                 | Learn how to create the scaffold of a multipage website&#039;s architecture using routing and HTML templates                             |                            [HTML Templates and Routes](/7-bank-project/1-template-route/README.md)                             |          Yohan          |
| 22  |         [Banking App](/7-bank-project/solution/README.md)          |                  Build a Login and Registration Form                   | Learn about building forms and handling validation routines                                                                          |                                           [Forms](/7-bank-project/2-forms/README.md)                                           |          Yohan          |
| 23  |         [Banking App](/7-bank-project/solution/README.md)          |                   Methods of Fetching and Using Data                   | How data flows in and out of your app, how to fetch it, store it, and dispose of it                                                 |                                            [Data](/7-bank-project/3-data/README.md)                                            |          Yohan          |
| 24  |         [Banking App](/7-bank-project/solution/README.md)          |                      Concepts of State Management                      | Learn how your app retains state and how to manage it programmatically                                                              |                                [State Management](/7-bank-project/4-state-management/README.md)                                |          Yohan          |


## üè´ Pedagogy

Our curriculum is designed with two key pedagogical principles in mind:
* project-based learning
* frequent quizzes

The program teaches the fundamentals of JavaScript, HTML, and CSS, as well as the latest tools and techniques used by today&#039;s web developers. Students will have the opportunity to develop hands-on experience by building a typing game, virtual terrarium, eco-friendly browser extension, space-invader-style game, and a banking app for businesses. By the end of the 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[twbs/bootstrap]]></title>
            <link>https://github.com/twbs/bootstrap</link>
            <guid>https://github.com/twbs/bootstrap</guid>
            <pubDate>Thu, 20 Mar 2025 00:04:12 GMT</pubDate>
            <description><![CDATA[The most popular HTML, CSS, and JavaScript framework for developing responsive, mobile first projects on the web.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/twbs/bootstrap">twbs/bootstrap</a></h1>
            <p>The most popular HTML, CSS, and JavaScript framework for developing responsive, mobile first projects on the web.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 171,793</p>
            <p>Forks: 79,056</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;
    &lt;img src=&quot;https://getbootstrap.com/docs/5.3/assets/brand/bootstrap-logo-shadow.png&quot; alt=&quot;Bootstrap logo&quot; width=&quot;200&quot; height=&quot;165&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;Bootstrap&lt;/h3&gt;

&lt;p align=&quot;center&quot;&gt;
  Sleek, intuitive, and powerful front-end framework for faster and easier web development.
  &lt;br&gt;
  &lt;a href=&quot;https://getbootstrap.com/docs/5.3/&quot;&gt;&lt;strong&gt;Explore Bootstrap docs ¬ª&lt;/strong&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://github.com/twbs/bootstrap/issues/new?assignees=-&amp;labels=bug&amp;template=bug_report.yml&quot;&gt;Report bug&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://github.com/twbs/bootstrap/issues/new?assignees=&amp;labels=feature&amp;template=feature_request.yml&quot;&gt;Request feature&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://themes.getbootstrap.com/&quot;&gt;Themes&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://blog.getbootstrap.com/&quot;&gt;Blog&lt;/a&gt;
&lt;/p&gt;


## Bootstrap 5

Our default branch is for development of our Bootstrap 5 release. Head to the [`v4-dev` branch](https://github.com/twbs/bootstrap/tree/v4-dev) to view the readme, documentation, and source code for Bootstrap 4.


## Table of contents

- [Quick start](#quick-start)
- [Status](#status)
- [What&#039;s included](#whats-included)
- [Bugs and feature requests](#bugs-and-feature-requests)
- [Documentation](#documentation)
- [Contributing](#contributing)
- [Community](#community)
- [Versioning](#versioning)
- [Creators](#creators)
- [Thanks](#thanks)
- [Copyright and license](#copyright-and-license)


## Quick start

Several quick start options are available:

- [Download the latest release](https://github.com/twbs/bootstrap/archive/v5.3.3.zip)
- Clone the repo: `git clone https://github.com/twbs/bootstrap.git`
- Install with [npm](https://www.npmjs.com/): `npm install bootstrap@v5.3.3`
- Install with [yarn](https://yarnpkg.com/): `yarn add bootstrap@v5.3.3`
- Install with [Composer](https://getcomposer.org/): `composer require twbs/bootstrap:5.3.3`
- Install with [NuGet](https://www.nuget.org/): CSS: `Install-Package bootstrap` Sass: `Install-Package bootstrap.sass`

Read the [Getting started page](https://getbootstrap.com/docs/5.3/getting-started/introduction/) for information on the framework contents, templates, examples, and more.


## Status

[![Build Status](https://img.shields.io/github/actions/workflow/status/twbs/bootstrap/js.yml?branch=main&amp;label=JS%20Tests&amp;logo=github)](https://github.com/twbs/bootstrap/actions/workflows/js.yml?query=workflow%3AJS+branch%3Amain)
[![npm version](https://img.shields.io/npm/v/bootstrap?logo=npm&amp;logoColor=fff)](https://www.npmjs.com/package/bootstrap)
[![Gem version](https://img.shields.io/gem/v/bootstrap?logo=rubygems&amp;logoColor=fff)](https://rubygems.org/gems/bootstrap)
[![Meteor Atmosphere](https://img.shields.io/badge/meteor-twbs%3Abootstrap-blue?logo=meteor&amp;logoColor=fff)](https://atmospherejs.com/twbs/bootstrap)
[![Packagist Prerelease](https://img.shields.io/packagist/vpre/twbs/bootstrap?logo=packagist&amp;logoColor=fff)](https://packagist.org/packages/twbs/bootstrap)
[![NuGet](https://img.shields.io/nuget/vpre/bootstrap?logo=nuget&amp;logoColor=fff)](https://www.nuget.org/packages/bootstrap/absoluteLatest)
[![Coverage Status](https://img.shields.io/coveralls/github/twbs/bootstrap/main?logo=coveralls&amp;logoColor=fff)](https://coveralls.io/github/twbs/bootstrap?branch=main)
[![CSS gzip size](https://img.badgesize.io/twbs/bootstrap/main/dist/css/bootstrap.min.css?compression=gzip&amp;label=CSS%20gzip%20size)](https://github.com/twbs/bootstrap/blob/main/dist/css/bootstrap.min.css)
[![CSS Brotli size](https://img.badgesize.io/twbs/bootstrap/main/dist/css/bootstrap.min.css?compression=brotli&amp;label=CSS%20Brotli%20size)](https://github.com/twbs/bootstrap/blob/main/dist/css/bootstrap.min.css)
[![JS gzip size](https://img.badgesize.io/twbs/bootstrap/main/dist/js/bootstrap.min.js?compression=gzip&amp;label=JS%20gzip%20size)](https://github.com/twbs/bootstrap/blob/main/dist/js/bootstrap.min.js)
[![JS Brotli size](https://img.badgesize.io/twbs/bootstrap/main/dist/js/bootstrap.min.js?compression=brotli&amp;label=JS%20Brotli%20size)](https://github.com/twbs/bootstrap/blob/main/dist/js/bootstrap.min.js)
[![Backers on Open Collective](https://img.shields.io/opencollective/backers/bootstrap?logo=opencollective&amp;logoColor=fff)](#backers)
[![Sponsors on Open Collective](https://img.shields.io/opencollective/sponsors/bootstrap?logo=opencollective&amp;logoColor=fff)](#sponsors)


## What&#039;s included

Within the download you&#039;ll find the following directories and files, logically grouping common assets and providing both compiled and minified variations.

&lt;details&gt;
  &lt;summary&gt;Download contents&lt;/summary&gt;

  ```text
  bootstrap/
  ‚îú‚îÄ‚îÄ css/
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.css
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.css.map
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.min.css
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.min.css.map
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.rtl.css
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.rtl.css.map
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.rtl.min.css
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.rtl.min.css.map
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.css
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.css.map
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.min.css
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.min.css.map
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.rtl.css
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.rtl.css.map
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.rtl.min.css
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.rtl.min.css.map
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.css
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.css.map
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.min.css
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.min.css.map
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.rtl.css
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.rtl.css.map
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.rtl.min.css
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.rtl.min.css.map
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.css
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.css.map
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.min.css
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.min.css.map
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.rtl.css
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.rtl.css.map
  ‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.rtl.min.css
  ‚îÇ   ‚îî‚îÄ‚îÄ bootstrap.rtl.min.css.map
  ‚îî‚îÄ‚îÄ js/
      ‚îú‚îÄ‚îÄ bootstrap.bundle.js
      ‚îú‚îÄ‚îÄ bootstrap.bundle.js.map
      ‚îú‚îÄ‚îÄ bootstrap.bundle.min.js
      ‚îú‚îÄ‚îÄ bootstrap.bundle.min.js.map
      ‚îú‚îÄ‚îÄ bootstrap.esm.js
      ‚îú‚îÄ‚îÄ bootstrap.esm.js.map
      ‚îú‚îÄ‚îÄ bootstrap.esm.min.js
      ‚îú‚îÄ‚îÄ bootstrap.esm.min.js.map
      ‚îú‚îÄ‚îÄ bootstrap.js
      ‚îú‚îÄ‚îÄ bootstrap.js.map
      ‚îú‚îÄ‚îÄ bootstrap.min.js
      ‚îî‚îÄ‚îÄ bootstrap.min.js.map
  ```
&lt;/details&gt;

We provide compiled CSS and JS (`bootstrap.*`), as well as compiled and minified CSS and JS (`bootstrap.min.*`). [Source maps](https://web.dev/articles/source-maps) (`bootstrap.*.map`) are available for use with certain browsers&#039; developer tools. Bundled JS files (`bootstrap.bundle.js` and minified `bootstrap.bundle.min.js`) include [Popper](https://popper.js.org/docs/v2/).


## Bugs and feature requests

Have a bug or a feature request? Please first read the [issue guidelines](https://github.com/twbs/bootstrap/blob/main/.github/CONTRIBUTING.md#using-the-issue-tracker) and search for existing and closed issues. If your problem or idea is not addressed yet, [please open a new issue](https://github.com/twbs/bootstrap/issues/new/choose).


## Documentation

Bootstrap&#039;s documentation, included in this repo in the root directory, is built with [Hugo](https://gohugo.io/) and publicly hosted on GitHub Pages at &lt;https://getbootstrap.com/&gt;. The docs may also be run locally.

Documentation search is powered by [Algolia&#039;s DocSearch](https://docsearch.algolia.com/).

### Running documentation locally

1. Run `npm install` to install the Node.js dependencies, including Hugo (the site builder).
2. Run `npm run test` (or a specific npm script) to rebuild distributed CSS and JavaScript files, as well as our docs assets.
3. From the root `/bootstrap` directory, run `npm run docs-serve` in the command line.
4. Open `http://localhost:9001/` in your browser, and voil√†.

Learn more about using Hugo by reading its [documentation](https://gohugo.io/documentation/).

### Documentation for previous releases

You can find all our previous releases docs on &lt;https://getbootstrap.com/docs/versions/&gt;.

[Previous releases](https://github.com/twbs/bootstrap/releases) and their documentation are also available for download.


## Contributing

Please read through our [contributing guidelines](https://github.com/twbs/bootstrap/blob/main/.github/CONTRIBUTING.md). Included are directions for opening issues, coding standards, and notes on development.

Moreover, if your pull request contains JavaScript patches or features, you must include [relevant unit tests](https://github.com/twbs/bootstrap/tree/main/js/tests). All HTML and CSS should conform to the [Code Guide](https://github.com/mdo/code-guide), maintained by [Mark Otto](https://github.com/mdo).

Editor preferences are available in the [editor config](https://github.com/twbs/bootstrap/blob/main/.editorconfig) for easy use in common text editors. Read more and download plugins at &lt;https://editorconfig.org/&gt;.


## Community

Get updates on Bootstrap&#039;s development and chat with the project maintainers and community members.

- Follow [@getbootstrap on Twitter](https://twitter.com/getbootstrap).
- Read and subscribe to [The Official Bootstrap Blog](https://blog.getbootstrap.com/).
- Ask questions and explore [our GitHub Discussions](https://github.com/twbs/bootstrap/discussions).
- Discuss, ask questions, and more on [the community Discord](https://discord.gg/bZUvakRU3M) or [Bootstrap subreddit](https://www.reddit.com/r/bootstrap/).
- Chat with fellow Bootstrappers in IRC. On the `irc.libera.chat` server, in the `#bootstrap` channel.
- Implementation help may be found at Stack Overflow (tagged [`bootstrap-5`](https://stackoverflow.com/questions/tagged/bootstrap-5)).
- Developers should use the keyword `bootstrap` on packages which modify or add to the functionality of Bootstrap when distributing through [npm](https://www.npmjs.com/browse/keyword/bootstrap) or similar delivery mechanisms for maximum discoverability.


## Versioning

For transparency into our release cycle and in striving to maintain backward compatibility, Bootstrap is maintained under [the Semantic Versioning guidelines](https://semver.org/). Sometimes we screw up, but we adhere to those rules whenever possible.

See [the Releases section of our GitHub project](https://github.com/twbs/bootstrap/releases) for changelogs for each release version of Bootstrap. Release announcement posts on [the official Bootstrap blog](https://blog.getbootstrap.com/) contain summaries of the most noteworthy changes made in each release.


## Creators

**Mark Otto**

- &lt;https://twitter.com/mdo&gt;
- &lt;https://github.com/mdo&gt;

**Jacob Thornton**

- &lt;https://twitter.com/fat&gt;
- &lt;https://github.com/fat&gt;


## Thanks

&lt;a href=&quot;https://www.browserstack.com/&quot;&gt;
  &lt;img src=&quot;https://live.browserstack.com/images/opensource/browserstack-logo.svg&quot; alt=&quot;BrowserStack&quot; width=&quot;192&quot; height=&quot;42&quot;&gt;
&lt;/a&gt;

Thanks to [BrowserStack](https://www.browserstack.com/) for providing the infrastructure that allows us to test in real browsers!

&lt;a href=&quot;https://www.netlify.com/&quot;&gt;
  &lt;img src=&quot;https://www.netlify.com/v3/img/components/full-logo-light.svg&quot; alt=&quot;Netlify&quot; width=&quot;147&quot; height=&quot;40&quot;&gt;
&lt;/a&gt;

Thanks to [Netlify](https://www.netlify.com/) for providing us with Deploy Previews!


## Sponsors

Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/bootstrap#sponsor)]

[![OC sponsor 0](https://opencollective.com/bootstrap/sponsor/0/avatar.svg)](https://opencollective.com/bootstrap/sponsor/0/website)
[![OC sponsor 1](https://opencollective.com/bootstrap/sponsor/1/avatar.svg)](https://opencollective.com/bootstrap/sponsor/1/website)
[![OC sponsor 2](https://opencollective.com/bootstrap/sponsor/2/avatar.svg)](https://opencollective.com/bootstrap/sponsor/2/website)
[![OC sponsor 3](https://opencollective.com/bootstrap/sponsor/3/avatar.svg)](https://opencollective.com/bootstrap/sponsor/3/website)
[![OC sponsor 4](https://opencollective.com/bootstrap/sponsor/4/avatar.svg)](https://opencollective.com/bootstrap/sponsor/4/website)
[![OC sponsor 5](https://opencollective.com/bootstrap/sponsor/5/avatar.svg)](https://opencollective.com/bootstrap/sponsor/5/website)
[![OC sponsor 6](https://opencollective.com/bootstrap/sponsor/6/avatar.svg)](https://opencollective.com/bootstrap/sponsor/6/website)
[![OC sponsor 7](https://opencollective.com/bootstrap/sponsor/7/avatar.svg)](https://opencollective.com/bootstrap/sponsor/7/website)
[![OC sponsor 8](https://opencollective.com/bootstrap/sponsor/8/avatar.svg)](https://opencollective.com/bootstrap/sponsor/8/website)
[![OC sponsor 9](https://opencollective.com/bootstrap/sponsor/9/avatar.svg)](https://opencollective.com/bootstrap/sponsor/9/website)


## Backers

Thank you to all our backers! üôè [[Become a backer](https://opencollective.com/bootstrap#backer)]

[![Backers](https://opencollective.com/bootstrap/backers.svg?width=890)](https://opencollective.com/bootstrap#backers)


## Copyright and license

Code and documentation copyright 2011-2025 the [Bootstrap Authors](https://github.com/twbs/bootstrap/graphs/contributors). Code released under the [MIT License](https://github.com/twbs/bootstrap/blob/main/LICENSE). Docs released under [Creative Commons](https://creativecommons.org/licenses/by/3.0/).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[Leaflet/Leaflet]]></title>
            <link>https://github.com/Leaflet/Leaflet</link>
            <guid>https://github.com/Leaflet/Leaflet</guid>
            <pubDate>Thu, 20 Mar 2025 00:04:11 GMT</pubDate>
            <description><![CDATA[üçÉ JavaScript library for mobile-friendly interactive maps üá∫üá¶]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Leaflet/Leaflet">Leaflet/Leaflet</a></h1>
            <p>üçÉ JavaScript library for mobile-friendly interactive maps üá∫üá¶</p>
            <p>Language: JavaScript</p>
            <p>Stars: 42,290</p>
            <p>Forks: 5,892</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre>Leaflet was created 14 years ago by [Volodymyr Agafonkin](https://agafonkin.com), a Ukrainian citizen living in Kyiv.

Russian bombs are now falling over Volodymyr&#039;s hometown. His family, his friends, his neighbours, thousands and thousands of absolutely wonderful people, are either seeking refuge or fighting for their lives.

Russian soldiers have already killed tens of thousands of civilians, including women and children, and are committing mass war crimes like gang rapes, executions, looting, and targeted bombings of civilian shelters and places of cultural significance. The death toll keeps rising, and Ukraine needs your help.

As Volodymyr [expressed a few days before the invasion](https://twitter.com/LeafletJS/status/1496051256409919489):

&gt; If you want to help, educate yourself and others on the Russian threat, follow reputable journalists, demand severe Russian sanctions and Ukrainian support from your leaders, protest the war, reach out to Ukrainian friends, donate to Ukrainian charities. Just don&#039;t be silent.

Ukrainians recommend the [Come Back Alive](https://savelife.in.ua/en/) charity. For other options, see [StandWithUkraine](https://stand-with-ukraine.pp.ua).

If an appeal to humanity doesn&#039;t work for you, I&#039;ll appeal to your egoism: the future of Ukrainian citizens is the future of Leaflet.

It is chilling to see Leaflet being used for [documenting Russia&#039;s war crimes](https://ukraine.bellingcat.com/), [factual reporting of the war](https://liveuamap.com/) and for coordination of humanitarian efforts across Europe. We commend these uses of Leaflet.

If you support the actions of the Russian government (even after reading all this), do everyone else a favour and [carry some seeds in your pocket](https://www.theguardian.com/world/video/2022/feb/25/ukrainian-woman-sunflower-seeds-russian-soldiers-video).

Yours truly,&lt;br&gt;
Leaflet maintainers.

---

&lt;img width=&quot;600&quot; src=&quot;https://rawgit.com/Leaflet/Leaflet/main/src/images/logo.svg&quot; alt=&quot;Leaflet&quot; /&gt;

Leaflet is the leading open-source JavaScript library for **building powerful interactive maps**.

Weighing just about 42 KB of gzipped JS plus 4 KB of gzipped CSS code, it has all the mapping [features][] most developers ever need.

Leaflet is designed with *simplicity*, *performance* and *usability* in mind.
It works efficiently across all major desktop and mobile platforms out of the box,
taking advantage of modern browser features while being accessible on older ones too.
It can be extended with a huge amount of [plugins][],
has a beautiful, easy to use and [well-documented][] API
and a simple, readable [source code][] that is a joy to [contribute][] to.

For more info, docs and tutorials, check out the [official website][].&lt;br&gt;
For **Leaflet downloads** (including the built main version), check out the [download page][].

We&#039;re happy to meet new contributors.
If you want to **get involved** with Leaflet development, check out the [contribution guide][contribute].
Let&#039;s make the best mapping library that will ever exist,
and push the limits of what&#039;s possible with online maps!

[![CI](https://github.com/Leaflet/Leaflet/actions/workflows/main.yml/badge.svg)](https://github.com/Leaflet/Leaflet/actions/workflows/main.yml)

 [contributors]: https://github.com/Leaflet/Leaflet/graphs/contributors
 [features]: http://leafletjs.com/#features
 [plugins]: http://leafletjs.com/plugins.html
 [well-documented]: http://leafletjs.com/reference.html &quot;Leaflet API reference&quot;
 [source code]: https://github.com/Leaflet/Leaflet &quot;Leaflet GitHub repository&quot;
 [hosted on GitHub]: http://github.com/Leaflet/Leaflet
 [contribute]: https://github.com/Leaflet/Leaflet/blob/main/CONTRIBUTING.md &quot;A guide to contributing to Leaflet&quot;
 [official website]: http://leafletjs.com
 [download page]: http://leafletjs.com/download.html

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[microsoft/generative-ai-with-javascript]]></title>
            <link>https://github.com/microsoft/generative-ai-with-javascript</link>
            <guid>https://github.com/microsoft/generative-ai-with-javascript</guid>
            <pubDate>Thu, 20 Mar 2025 00:04:10 GMT</pubDate>
            <description><![CDATA[Join a time-traveling adventure where you meet history‚Äôs legends while learning Generative AI technologies! ‚ú®]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/microsoft/generative-ai-with-javascript">microsoft/generative-ai-with-javascript</a></h1>
            <p>Join a time-traveling adventure where you meet history‚Äôs legends while learning Generative AI technologies! ‚ú®</p>
            <p>Language: JavaScript</p>
            <p>Stars: 294</p>
            <p>Forks: 120</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt; 

&lt;img src=&quot;./docs/images/logo.png&quot; alt=&quot;&quot; align=&quot;center&quot; height=&quot;128&quot; /&gt;

# Generative AI for beginners with JavaScript

[![License](https://img.shields.io/badge/License-MIT-blue?style=flat-square)](https://github.com/microsoft/generative-ai-with-javascript/blob/main/LICENSE)
[![Watch the video series](https://img.shields.io/badge/Videos-d95652.svg?style=flat-square&amp;logo=youtube)](https://aka.ms/genai-js)
[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)

[![Azure AI Discord](https://dcbadge.limes.pink/api/server/kzRShWzttr)](https://discord.gg/kzRShWzttr)

‚≠ê If you like this repo, star it on GitHub ‚Äî it helps a lot!

[Getting Started](#getting-started) ‚Ä¢ [Lessons](#lessons) ‚Ä¢ [Keep Learning](#keep-learning)

&lt;/div&gt;

Ready to integrate Generative AI into your JavaScript apps? 

This course throws you into a *time-traveling adventure*‚Äîmeet history‚Äôs legends with a fun twist, while learning Generative AI technologies ‚ú®
 
&gt; [!IMPORTANT]  
&gt; Open-source vibes! Reuse, tweak, and share this content freely.
 
![Character App Sneak Peek](./docs/images/background.png)
 

## Call for help - help us translate !

Help us translate this course. Each lesson in `lessons/` folder has a `translations/` directory. Add your translation file like so `README.&lt;language code&gt;.md`, for example *README.es.md*.  - Thank You.


## Step into history with AI magic! 
 
Dive into an immersive learning experience powered by Generative AI:  
- **Learn about Generative AI technologies**. If you&#039;ve wanted to understand Generative AI and the potential for your applications, you&#039;re in the right place!
 
- **Epic Time-Travel Stories**.
Dive into a fun tale, chatting with icons like Leonardo da Vinci, Ada Lovelace, or Montezuma in every lesson.
 
- **Companion App**. Interact with historical figures using Generative AI technologies ([see our Responsible AI disclaimer](#responsible-ai-disclaimer)).

  ![Interact with History through conversation](./docs/images/character-chat.png) 

  Check the [_app_](./app/) directory to run the [app locally](./docs/setup/README.md#option-2--running-the-app-locally) or use [GitHub Codespaces](./docs/setup/README.md) to run it online.

- **Accessibility FTW**. Read it, hear it‚Äîaudio tags bring it to life.
 
&gt; ‚ÄúIt‚Äôs like a comic book with code!‚Äù ‚Äî Happy User
 
## Getting started
 
Throughout this course you&#039;ll find many code examples and exercises, so we encourage you to run and experiment with the code in your own copy of this repository:
 
1. Select the **Fork** button in the upper right-hand corner of the repository or select this button:
   [![Fork](https://img.shields.io/badge/Fork-Repository-blue?style=flat-square)](https://github.com/microsoft/generative-ai-with-javascript/fork)
 
2. Click the **Code** button in your forked repository, go to the **Codespaces** tab, and then choose **Create codespace**.

   This will create a preconfigured online environment for you. You&#039;ll then be able to use [GitHub Models](https://github.com/marketplace/models) to run the code examples and interact with AI models for free, without any additional setup.

&gt; [!NOTE]
&gt;
&gt; While GitHub Codespaces provides a quick and easy starting point you can also run the code samples [locally](/docs/setup/README.md#option-2--running-the-app-locally).
&gt;
&gt; Learn more about [GitHub Codespaces and GitHub Models concepts here](/docs/setup/README.md).  

### Lesson description

üì¶ Each lesson includes:

- A **written lesson** with an assignment and quiz.
- A short **video** to help further your learning.
- **Solutions** for each assignment and quiz.
- **Characters** you can interact with using our [companion app](./app), demonstrating Generative AI.

## Lessons

üóÉÔ∏è Table of contents

| # | Lesson Link  | Description |
| ---- | ----------- | ----------- |
| 1 | [Introduction to Generative AI and LLMs for JavaScript Developers](./lessons/01-intro-to-genai) | Understand Generative AI and LLM fundamentals, their applications and limits in JavaScript, and how to use AI to enhance user experiences. |
| 2 | [Build your first AI app](./lessons/02-first-ai-app) | Set up your development environment, write a basic app, and understand system prompts. |
| 3 | [Prompt engineering](./lessons/03-prompt-engineering) | Learn Prompt engineering fundamentals, techniques, and meta-prompts for better AI outcomes. |
| 4 | [Structured output](./lessons/04-structured-output) | Learn structured output, how to extract data from prompts, and present it in various formats, such as JSON, for easier consumption. |
| 5 | [Retrieval augmented generation (RAG)](./lessons/05-rag) | Learn the basics of RAG, how to integrate external data, and how to leverage it for more relevant, accurate AI responses. |
| 6 | Additional chapters are coming soon! | ... |

New lessons will be added to the course over time, so stay tuned!

## Keep learning

üôå After completing this course, you can continue learning by exploring our additional resources.

&lt;details&gt;
&lt;summary&gt;üé¨Video Series&lt;/summary&gt;

| # | Session | Description | Slides | Demo | Script | Video |
|---|---------|-------------|--------|------|--------|-------|
| 0 | Series introduction | Introduces the series and its content. | [pptx](/videos/slides/00-intro.pptx) / [pdf](/videos/slides/pdf/00-intro.pdf) | - | [Script](/videos/sessions/00-intro.md) | [üì∫](https://www.youtube.com/watch?v=vLYtDgs_zx8&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=1) |
| 1 | What you need to know about LLMs | Explores what LLMs are, how they&#039;re trained, how they work and their limits. | [pptx](/videos/slides/01-llms.pptx) / [pdf](/videos/slides/pdf/01-llms.pdf) | [Demo](/videos/demos/01-llms/) | [Script](/videos/sessions/01-llms.md) | [üì∫](https://www.youtube.com/watch?v=GQ_2OjNZ9aA&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=2)  |
| 2 | Essential prompt engineering techniques | Practical prompt engineering techniques to get the best out of AI models. | [pptx](/videos/slides/02-prompt-engineering.pptx) / [pdf](/videos/slides/pdf/02-prompt-engineering.pdf) | [Demo](/videos/demos/02-prompt-engineering/) | [Script](/videos/sessions/02-prompt-engineering.md) | [üì∫](https://www.youtube.com/watch?v=gQ6TlyxBmWs&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=3)  |
| 3 | Improve AI accuracy and reliability with RAG | Introduces Retrieval-Augmented Generation, to use AI with your own data. | [pptx](/videos/slides/03-rag.pptx) / [pdf](/videos/slides/pdf/03-rag.pdf) | [Demo](/videos/demos/03-rag/) | [Script](/videos/sessions/03-rag.md) | [üì∫](https://www.youtube.com/watch?v=xkFOmx5yxIA&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=4) |
| 4 | Speed up your AI development with LangChain.js | Covers LangChain.js framework core concepts, and how to use it to accelerate AI developments. | [pptx](/videos/slides/04-langchainjs.pptx) / [pdf](/videos/slides/pdf/04-langchainjs.pdf) | [Demo](/videos/demos/04-langchainjs/) | [Script](/videos/sessions/04-langchainjs.md) | [üì∫](https://www.youtube.com/watch?v=02IDU8eCX8o&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=5) |
| 5 | Run AI models on your local machine with Ollama | Shows how to integrate local AI models into your development workflow. | [pptx](/videos/slides/05-local-models.pptx) / [pdf](/videos/slides/pdf/05-local-models.pdf) | [Demo](/videos/demos/05-local-models/) | [Script](/videos/sessions/05-local-models.md) | [üì∫](https://www.youtube.com/watch?v=dLfNnoPv4AQ&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=6) |
| 6 | Get started with AI for free using Phi-3 | Experiments with Ollama and Phi-3 model directly from your browser. | [pptx](/videos/slides/06-playground.pptx) / [pdf](/videos/slides/pdf/06-playground.pdf) | [Demo](/videos/demos/06-playground/) | [Script](/videos/sessions/06-playground.md) | [üì∫](https://www.youtube.com/watch?v=Ds32MS9SHzU&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=7) |
| 7 | Introduction to Azure AI Foundry | Kickstart your journey with Azure AI Foundry. | [pptx](/videos/slides/07-ai-foundry.pptx) / [pdf](/videos/slides/pdf/07-ai-foundry.pdf) | [Demo](/videos/demos/07-ai-foundry/) | [Script](/videos/sessions/07-ai-foundry.md) | [üì∫](https://www.youtube.com/watch?v=9Mo-VOGk8ng&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=8) |
| 8 | Building Generative AI Apps with Azure Cosmos DB | Build generative AI apps with Azure Cosmos DB and vector search. | [pptx](/videos/slides/08-cosmos-db.pptx) / [pdf](/videos/slides/pdf/08-cosmos-db.pdf) | [Demo](/videos/demos/08-cosmos-db/) | [Script](/videos/sessions/08-cosmos-db.md) | [üì∫](https://www.youtube.com/watch?v=-GQyaLbeqxQ&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=9)  |
| 9 | Azure tools &amp; services for hosting and storing AI apps | Build, deploy, and scale AI applications using Azure tools. | [pptx](/videos/slides/09-azure-tools.pptx) / [pdf](/videos/slides/pdf/09-azure-tools.pdf) | - | [Script](/videos/sessions/09-azure-tools.md) | [üì∫](https://www.youtube.com/watch?v=WB6Fpzhwyug&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=10) |
| 10 | Streaming Generative AI output with the AI Chat Protocol | Integrate streaming easily into your apps with the AI Chat Protocol. | [pptx](/videos/slides/10-chat-protocol.pptx) / [pdf](/videos/slides/pdf/10-chat-protocol.pdf) | [Demo](/videos/demos/10-chat-protocol/) | [Script](/videos/sessions/10-chat-protocol.md) | [üì∫](https://www.youtube.com/watch?v=fzDCW-6hMtU&amp;list=PLlrxD0HtieHi5ZpsHULPLxm839IrhmeDk&amp;index=11) |

To see the full page of resources, go to this [video overview page](/videos/README.md).

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;üéí Other Courses&lt;/summary&gt;

- [Generative AI for Beginners](https://aka.ms/genai-beginners)
- [Generative AI for Beginners .NET](https://github.com/microsoft/Generative-AI-for-beginners-dotnet)
- [Generative AI with JavaScript](https://github.com/microsoft/generative-ai-with-javascript)
- [AI for Beginners](https://aka.ms/ai-beginners)
- [AI Agents for Beginners - A Course](https://github.com/microsoft/ai-agents-for-beginners)
- [Data Science for Beginners](https://aka.ms/datascience-beginners)
- [ML for Beginners](https://aka.ms/ml-beginners)
- [Cybersecurity for Beginners](https://github.com/microsoft/Security-101) 
- [Web Dev for Beginners](https://aka.ms/webdev-beginners)
- [IoT for Beginners](https://aka.ms/iot-beginners)
- [XR Development for Beginners](https://github.com/microsoft/xr-development-for-beginners)
- [Mastering GitHub Copilot for Paired Programming](https://github.com/microsoft/Mastering-GitHub-Copilot-for-Paired-Programming)
- [Mastering GitHub Copilot for C#/.NET Developers](https://github.com/microsoft/mastering-github-copilot-for-dotnet-csharp-developers)
- [Choose Your Own Copilot Adventure](https://github.com/microsoft/CopilotAdventures)
&lt;/details&gt;

You&#039;ll also find additional resources in the form of [tutorials, code samples and more](/docs/additional-resources.md).

## Responsible AI Disclaimer

&gt; [!IMPORTANT]
&gt; DISCLAIMER: This repository contains fictional content generated by AI. The historical characters depicted here are generating responses thanks to generative AI, which is based on training data. Any responses generated by these characters do not represent their actual views or quotes. This content is intended solely for entertainment purposes. [Microsoft Responsible AI principles here](https://www.microsoft.com/en-us/ai/principles-and-approach/)


## Interact with community

[![Azure AI Discord](https://dcbadge.limes.pink/api/server/kzRShWzttr)](https://discord.gg/kzRShWzttr)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[NB-Group/NB_Music]]></title>
            <link>https://github.com/NB-Group/NB_Music</link>
            <guid>https://github.com/NB-Group/NB_Music</guid>
            <pubDate>Thu, 20 Mar 2025 00:04:09 GMT</pubDate>
            <description><![CDATA[A nearly perfect music player.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/NB-Group/NB_Music">NB-Group/NB_Music</a></h1>
            <p>A nearly perfect music player.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 118</p>
            <p>Forks: 15</p>
            <p>Stars today: 26 stars today</p>
            <h2>README</h2><pre># NB Music

![È°µÈù¢Êà™Âõæ](image.png)
![GitHub license](https://img.shields.io/github/license/NB-Group/NB_Music)
![GitHub last commit](https://img.shields.io/github/last-commit/NB-Group/NB_Music)
## ÁÆÄ‰ªã
Áî±NB-GroupÂíåUser782Tec‰∏§ÂêçÂàù‰∏≠ÁîüÂºÄÂèëÁöÑË∑®Âπ≥Âè∞Èü≥‰πêÊí≠ÊîæÂô®ÔºÅÊó†ÈúÄVIPÂ∞±ËÉΩÁïÖÂê¨ÂÖ®ÁΩëÈü≥‰πêÔºåÂõ†‰∏∫Êàë‰ª¨Áõ¥Êé•‰ªéÂìîÂì©ÂìîÂì©Ëé∑ÂèñÈü≥È¢ëËµÑÊ∫ê~ 
ËøôÈáåÊúâÔºö
- ÂÖ®ÁΩëÈü≥‰πêËá™Áî±Êí≠ÊîæÔºàÂåÖÊã¨ÂÖ∂‰ªñÂπ≥Âè∞Ë¶ÅVIPÁöÑÊ≠åÊõ≤ÔºÅÔºâ
- ‰∏ÄÈîÆÂØºÂÖ•BÁ´ôÊî∂ËóèÂ§πÂΩìÊ≠åÂçï
- Êô∫ËÉΩÊ≠åËØçÊçïÊçâÁ≥ªÁªüÔºàËá™Âä®ÂåπÈÖç+ÊâãÂä®Ë°•ÂÖ®Âèå‰øùÈô©Ôºâ

**Âàù‰∏≠Áîü„ÅÆÈªëÁßëÊäÄÂÆ£Ë®Ä**ÔºöÊàë‰ª¨Êâç‰∏çÊòØÂè™‰ºöÂÅöÈ¢òÁöÑÂ∞èÂèØÁà±ÔºÅÁî®Electron+ÂêÑÂ§ßAPIÔºåÂ∏¶‰Ω†‰ΩìÈ™åÁúüÊ≠£ÁöÑÁôΩÂ´ñÂê¨Ê≠åËá™Áî±œà(ÔΩÄ‚àá¬¥)œà

Âì¶ÔºåÂØπ‰∫ÜÔºÅÊàë‰ª¨Âü∫‰∫é‰ª•‰∏ãÂºÄÊ∫êÈ°πÁõÆÔºåÊÑüË∞¢‰ªñ‰ª¨ÔºÅ
- [neteasecloudmusicapi](https://gitlab.com/Binaryify/neteasecloudmusicapi) ÁΩëÊòì‰∫ëAPI(Github‰ªìÂ∫ìÂ∑≤ÁªèÂØÑ‰∫Ü)
- [BillBill Api Collect](https://github.com/SocialSisterYi/bilibili-API-collect) BÁ´ôAPI
---

## Áî®Êà∑ÊåáÂçó

### ‰∏ãËΩΩ
[Releases](https://github.com/NB-Group/NB_Music/releases)Êü•ÁúãÊúÄÊñ∞ÁâàÊú¨ÂñµÔºÅ
ËØùËØ¥Â∫îËØ•‰ºöÊúâËá™Âä®Êõ¥Êñ∞ÁöÑÔºå‰ª£Á†ÅÈáåÂÜô‰∫ÜÁöÑÔºàÔºâ
### ÁâπËâ≤ÂäüËÉΩËØ¥Êòé‰π¶
**BÁ´ôÁõ∏ÂÖ≥**  
- Êàë‰ª¨‰ªéBÁ´ôËá™Âä®ÊäìÂèñÊúÄÈ´òÈü≥Ë¥®ÁâàÊú¨ÔºàÊÇÑÊÇÑËØ¥ÔºöÁôªÂΩïÂ∏¶Â§ß‰ºöÂëòÁöÑË¥¶Âè∑ÊâçËÉΩÂê¨Hi-ResÁöÑQwQÔºâ
- Êî∂ËóèÂ§π‰∏ÄÈîÆÂØºÂÖ•Ê≠åÂçïÔºà‰∏ÄÁÇπËøÅÁßªÊàêÊú¨ÈÉΩÊ≤°ÊúâÂì¶Ôºâ

**Ê≠åËØçÁõ∏ÂÖ≥**
- ‰ªéÁΩëÊòì‰∫ëËá™Âä®ÊäìÂèñÊ≠åËØçÊçè„ÄÇ  
- Ëá™Âä®ÂåπÈÖçÊ≠åËØçÁöÑ‰∏çÂØπÔºü‰Ω†ÂèØ‰ª•ÊâãÂä®Ê≠åÂêçÔºàÁÑ∂ÂêéÊàë‰ª¨ÂÜçÂéªÂÖ®ÁΩëÊêúÂàÆ~ËÆ∞ÂæóÂú®ËÆæÁΩÆÈáåÊâìÂºÄÂì¶Ôºâ

**üõ†Ô∏è ÈÅáÂà∞ÈóÆÈ¢òÊÄé‰πàÂäûÔºü**  
- Ê≠åÊõ≤Âä†ËΩΩÂ§±Ë¥•‚ÜíÂ§öÁÇπÂá†Ê¨°Êí≠ÊîæÈîÆÔºàÊàë‰ª¨ÁöÑÈáçËØïÊú∫Âà∂Ë∂ÖÈ°ΩÂº∫ÔºÅÔºâ
- ÂÖ∂‰ªñbug‚ÜíÂØπÁùÄÂ±èÂπïËØ¥&quot;‰øÆÂ•ΩÂÆÉÔºÅ&quot;ÔºàÁÑ∂ÂêéÈáçÂêØÂ∫îÁî®Â∞±OKÂï¶~ÊâçÊÄ™ÔºÅË¶ÅËÆ∞ÂæóÂèçÈ¶àÁªôÊàë‰ª¨Âì¶Ôºâ
- ÂΩìÁÑ∂Ôºå‰øÆbugÊúÄÈáçË¶ÅÁöÑËøòÊòØÈáçÂêØÂ∫îÁî®Âï¶ÔºÅ

---

## ÂºÄÂèëËÄÖÊñáÊ°£

### Êû∂ÊûÑËÆæËÆ°


#### ÊäÄÊúØÊ†à

- üöÄ Electron - Ë∑®Âπ≥Âè∞Ê°åÈù¢Â∫îÁî®ÂºÄÂèëÊ°ÜÊû∂
- üéµ Html Dom API - Èü≥È¢ëÂ§ÑÁêÜ
- üé® ÂéüÁîü CSS - ÁïåÈù¢Ê†∑Âºè
- üì¶ Yarn - ÂåÖÁÆ°ÁêÜÂô®
- üîÑ GitHub Actions - CI/CD
#### Ê†∏ÂøÉÊ®°Âùó
```bash
‚îú‚îÄ‚îÄ  .git/                       # GitÁâàÊú¨ÊéßÂà∂Êñá‰ª∂Â§π
‚îú‚îÄ‚îÄ  .gitattributes               # GitÂ±ûÊÄßÈÖçÁΩÆ
‚îú‚îÄ‚îÄ  .github/                     # GitHubÂ∑•‰ΩúÊµÅÈÖçÁΩÆ
‚îÇ   ‚îú‚îÄ‚îÄ  workflows/               # CI/CDÂ∑•‰ΩúÊµÅÈÖçÁΩÆ
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  release.yml          # ÂèëÂ∏ÉÂ∑•‰ΩúÊµÅ
‚îú‚îÄ‚îÄ  .gitignore                   # GitÂøΩÁï•Êñá‰ª∂ÈÖçÁΩÆ
‚îú‚îÄ‚îÄ  .gitmodules                  # GitÂ≠êÊ®°ÂùóÈÖçÁΩÆ
‚îú‚îÄ‚îÄ  .prettierrc                  # PrettierÈÖçÁΩÆ
‚îú‚îÄ‚îÄ  .vscode/                     # VSCodeÈÖçÁΩÆÊñá‰ª∂Â§π
‚îÇ   ‚îú‚îÄ‚îÄ  launch.json              # Ë∞ÉËØïÈÖçÁΩÆÊñá‰ª∂
‚îú‚îÄ‚îÄ  LICENSE                      # È°πÁõÆËÆ∏ÂèØËØÅ
‚îú‚îÄ‚îÄ  README.md                    # È°πÁõÆËØ¥ÊòéÊñáÊ°£
‚îú‚îÄ‚îÄ  dist/                        # ÊûÑÂª∫ËæìÂá∫Êñá‰ª∂Â§π
‚îú‚îÄ‚îÄ  eslint.config.mjs            # ESLintÈÖçÁΩÆ
‚îú‚îÄ‚îÄ  icons/                       # È°πÁõÆÂõæÊ†áËµÑÊ∫ê
‚îÇ   ‚îú‚îÄ‚îÄ  NB Music.png             # Â∫îÁî®ÂõæÊ†á
‚îÇ   ‚îú‚îÄ‚îÄ  icon.icns                # macOSÂõæÊ†á
‚îÇ   ‚îú‚îÄ‚îÄ  icon.ico                 # WindowsÂõæÊ†á
‚îÇ   ‚îú‚îÄ‚îÄ  icon.png                 # PNGÊ†ºÂºèÂõæÊ†á
‚îú‚îÄ‚îÄ  image.png                    # Áî®‰∫éÂ±ïÁ§∫ÁöÑÂõæÁâá
‚îú‚îÄ‚îÄ  img/                         # È°πÁõÆÂõæÂÉèËµÑÊ∫ê
‚îÇ   ‚îú‚îÄ‚îÄ  NB_Music.png             # Â∞ÅÈù¢ÂõæÂÉè
‚îÇ   ‚îú‚îÄ‚îÄ  poster.jpeg              # Êµ∑Êä•ÂõæÂÉè
‚îú‚îÄ‚îÄ  package.json                 # È°πÁõÆ‰æùËµñÁÆ°ÁêÜ
‚îú‚îÄ‚îÄ  public/                      # ÂÖ¨ÂÖ±ËµÑÊ∫êÊñá‰ª∂Â§π
‚îú‚îÄ‚îÄ  src/                         # Ê∫ê‰ª£Á†ÅÊñá‰ª∂Â§π
‚îÇ   ‚îú‚îÄ‚îÄ  javascript/              # JavaScriptÊñá‰ª∂
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  AudioPlayer.js       # Èü≥È¢ëÊí≠ÊîæÂô®ÂäüËÉΩ
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  CacheManager.js      # ÁºìÂ≠òÁÆ°ÁêÜÂô®
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  FavoriteManager.js   # Êî∂ËóèÁÆ°ÁêÜÂô®
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  LoginManager.js      # ÁôªÂΩïÁÆ°ÁêÜÂô®
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  LyricsPlayer.js      # Ê≠åËØçÊí≠ÊîæÂô®
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  MusicSearcher.js     # Èü≥‰πêÊêúÁ¥¢Âô®
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  MusiclistManager.js  # Ê≠åÂçïÁÆ°ÁêÜÂô®
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  PlaylistManager.js   # Êí≠ÊîæÂàóË°®ÁÆ°ÁêÜÂô®
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  SettingManager.js    # ËÆæÁΩÆÁÆ°ÁêÜÂô®
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  UIManager.js         # UIÁÆ°ÁêÜÂô®
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  UpdateManager.js     # Êõ¥Êñ∞ÁÆ°ÁêÜÂô®
‚îÇ   ‚îú‚îÄ‚îÄ  main.html                # ‰∏ªË¶ÅHTMLÊñá‰ª∂
‚îÇ   ‚îú‚îÄ‚îÄ  main.js                  # ‰∏ªË¶ÅJavaScriptÊñá‰ª∂
‚îÇ   ‚îú‚îÄ‚îÄ  script.js                # ËæÖÂä©ËÑöÊú¨
‚îÇ   ‚îú‚îÄ‚îÄ  splash.html              # ÂêØÂä®ÁîªÈù¢HTML
‚îÇ   ‚îú‚îÄ‚îÄ  styles/                  # Ê†∑ÂºèÊñá‰ª∂Â§π
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  base.css             # Âü∫Á°ÄÊ†∑Âºè
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  components/          # ÁªÑ‰ª∂Ê†∑Âºè
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  animations.css   # Âä®ÁîªÊ†∑Âºè
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  controls.css     # Êéß‰ª∂Ê†∑Âºè
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  dialogs.css      # ÂØπËØùÊ°ÜÊ†∑Âºè
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  lyrics.css       # Ê≠åËØçÊ†∑Âºè
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  musiclist.css    # Ê≠åÂçïÊ†∑Âºè
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  notifications.css # ÈÄöÁü•Ê†∑Âºè
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  player.css       # Êí≠ÊîæÂô®Ê†∑Âºè
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  settings.css     # ËÆæÁΩÆÊ†∑Âºè
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  sidebar.css      # ‰æßËæπÊ†èÊ†∑Âºè
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  song.css         # Ê≠åÊõ≤Ê†∑Âºè
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  titlebar.css     # Ê†áÈ¢òÊ†èÊ†∑Âºè
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  index.css            # È¶ñÈ°µÊ†∑Âºè
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  utilities.css        # ËæÖÂä©Ê†∑Âºè
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ  variables.css        # ÂèòÈáèÊ†∑Âºè
‚îÇ   ‚îú‚îÄ‚îÄ  utils.js                 # Â∑•ÂÖ∑ÂáΩÊï∞
‚îú‚îÄ‚îÄ  yarn.lock                    # YarnÈîÅÊñá‰ª∂

```

#### Êï∞ÊçÆÊµÅÂêë
```mermaid
graph TD
    A[Áî®Êà∑Êìç‰Ωú] --&gt; B{‰∫ã‰ª∂‰∏≠ÂøÉ}
    
    %% Ê†∏ÂøÉÊí≠ÊîæÊéßÂà∂ÊµÅ
    B --&gt; C[AudioPlayer]
    C --&gt;|Êí≠ÊîæÁä∂ÊÄÅ| D[LyricsPlayer]
    C --&gt;|ËøõÂ∫¶ÂêåÊ≠•| E[ËßÜÈ¢ëËÉåÊôØ]
    
    %% Êí≠ÊîæÂàóË°®ÁÆ°ÁêÜÊµÅ
    B --&gt; F[PlaylistManager]
    F --&gt;|Ê≠åÂçïÊõ¥Êñ∞| G[MusiclistManager]
    G --&gt;|ÊåÅ‰πÖÂåñ| H[localStorage]
    
    %% ÊêúÁ¥¢‰∏éÁºìÂ≠òÊµÅ
    I[BÁ´ôAPI] --&gt;|Èü≥È¢ë/ËßÜÈ¢ëÈìæÊé•| J[MusicSearcher]
    J --&gt;|URLÁºìÂ≠ò| K[CacheManager]
    K --&gt;|ËøáÊúüÊ£ÄÊü•| F
    
    %% UIÊõ¥Êñ∞ÊµÅ
    F --&gt;|Êí≠ÊîæÁä∂ÊÄÅ| L[UIManager]
    L --&gt;|ÁïåÈù¢Êõ¥Êñ∞| M[DOM]
    
    %% Êî∂ËóèÁÆ°ÁêÜÊµÅ
    B --&gt; N[FavoriteManager]
    N --&gt;|Êî∂ËóèÂêåÊ≠•| H
    
    %% ËÆæÁΩÆÁÆ°ÁêÜÊµÅ
    O[SettingManager] --&gt;|ÈÖçÁΩÆ| F
    O --&gt;|‰∫ã‰ª∂Â§ÑÁêÜ| L

    %% Áä∂ÊÄÅ‰øùÂ≠òÊµÅ
    F --&gt;|Êí≠ÊîæËøõÂ∫¶| H
    C --&gt;|ÂΩìÂâçÊó∂Èó¥| H
```

### Ë¥°ÁåÆÊåáÂçó
1. ÂÖãÈöÜ‰ªìÂ∫ìÂêéÊâßË°å `yarn add --magic`ÔºàÂºÄÁé©Á¨ëÁöÑÔºåÊ≠£Â∏∏addÂ∞±Â•ΩÔºâ
2. Ë∞ÉËØï‰∏ªËøõÁ®ãÔºö`yarn run electron:debug`
3. Áõ¥Êé•ËøêË°å: `yarn run run`
4. ÊâìÂåÖ: `yarn run build`
5. ‰ª£Á†ÅËßÑËåÉÔºö
   - ‰∏ÄÂÆöË¶ÅÁªÑ‰ª∂ÂåñÂì¶ÔºÅÈù¢ÂêëÂØπË±°ÂêØÂä®ÔºÅ
   - Áî®yarnÔºÅ
   - ÂÖ∂ÂÆÉÊ≤°Âï•Ôºå‰ª£Á†ÅÂêàÁêÜÂç≥ÂèØ„ÄÇ
   - Ê±ÇÂ§ß‰Ω¨PRÔºàÈõæÔºâ
6. ÊèêPRÊó∂ËØ∑ÈôÑ‰∏äÁå´ËÄ≥Ë°®ÊÉÖÂåÖ‰ª•ÈÄöËøáÂÆ°Ê†∏ÔºàÂ§ßÈõæÔºâ

---

**ÁâàÊùÉËØ¥Êòé**  
ÂºÄÊ∫êÂçèËÆÆÔºö[GPL-3.0](LICENSE) 
ÂºÄÂèëÂõ¢ÈòüÔºöNB-GroupÂíåUser782TecËøô‰∏§ÂêçÂàù‰∏≠ÁîüÔºà‰Ωú‰∏öÊ≤°ÂÜôÂÆå‰πüË¶ÅÂÜô‰ª£Á†ÅÁöÑ‰º†ËØ¥ÔºÅÔºâÔºàÂÖ∂ÂÆûÊàë‰ª¨ÊàêÁª©ÈÉΩÂæàÂ•ΩÁöÑÂï¶Ôºâ

Â∞ΩÁÆ°Êàë‰ª¨‰ª£Á†ÅÂºÄÊ∫êÔºå‰ΩÜÊàë‰ª¨‰ªçÂèó„Ää‰∏≠Âçé‰∫∫Ê∞ëÂÖ±ÂíåÂõΩËëó‰ΩúÊùÉÊ≥ï„ÄãÁöÑ‰øùÊä§„ÄÇ
Á¶ÅÊ≠¢‰∏ÄÂàá‰ΩøÁî®Êàë‰ª¨Ê∫ê‰ª£Á†ÅÁöÑÂïÜ‰∏öË°å‰∏∫ÔºåÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÔºåÊâìÂåÖÂîÆÂçñ„ÄÅÊú™ÁªèÂÖÅËÆ∏ÁöÑÊê¨ËøêÁ≠â„ÄÇ
Ôºà‰∏äÊ¨°Êàë‰ª¨ÁöÑWin12Â∞±Ë¢´ÂÄíÂçñÊ∫êÁ†Å‰∫ÜQwQÔºâ
Â¶ÇÊûúÁî®‰∫éÂ≠¶‰π†‰∫§ÊµÅÔºåÈÇ£‰πàËØ∑‰æøÔºå‰ΩÜÊòØÂä°ÂøÖÊ†áÊ≥®‰ΩúËÄÖÂíåÈ°πÁõÆÈìæÊé•Âì¶„ÄÇ

ÂÖ∂ÂÆÉÊù°Ê¨æËØ∑ËßÅ [GPL-3.0](LICENSE) ÂçèËÆÆÊñáÊú¨„ÄÇ</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[trekhleb/javascript-algorithms]]></title>
            <link>https://github.com/trekhleb/javascript-algorithms</link>
            <guid>https://github.com/trekhleb/javascript-algorithms</guid>
            <pubDate>Thu, 20 Mar 2025 00:04:08 GMT</pubDate>
            <description><![CDATA[üìù Algorithms and data structures implemented in JavaScript with explanations and links to further readings]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/trekhleb/javascript-algorithms">trekhleb/javascript-algorithms</a></h1>
            <p>üìù Algorithms and data structures implemented in JavaScript with explanations and links to further readings</p>
            <p>Language: JavaScript</p>
            <p>Stars: 190,535</p>
            <p>Forks: 30,564</p>
            <p>Stars today: 27 stars today</p>
            <h2>README</h2><pre># JavaScript Algorithms and Data Structures

&gt; üá∫üá¶ UKRAINE [IS BEING ATTACKED](https://war.ukraine.ua/) BY RUSSIAN ARMY. CIVILIANS ARE GETTING KILLED. RESIDENTIAL AREAS ARE GETTING BOMBED.
&gt; - Help Ukraine via:
&gt;   - [Serhiy Prytula Charity Foundation](https://prytulafoundation.org/en/)
&gt;   - [Come Back Alive Charity Foundation](https://savelife.in.ua/en/donate-en/)
&gt;   - [National Bank of Ukraine](https://bank.gov.ua/en/news/all/natsionalniy-bank-vidkriv-spetsrahunok-dlya-zboru-koshtiv-na-potrebi-armiyi)
&gt; - More info on [war.ukraine.ua](https://war.ukraine.ua/) and [MFA of Ukraine](https://twitter.com/MFA_Ukraine)

&lt;hr/&gt;

[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)
[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)
![repo size](https://img.shields.io/github/repo-size/trekhleb/javascript-algorithms.svg)

This repository contains JavaScript based examples of many
popular algorithms and data structures.

Each algorithm and data structure has its own separate README
with related explanations and links for further reading (including ones
to YouTube videos).

_Read this in other languages:_
[_ÁÆÄ‰Ωì‰∏≠Êñá_](README.zh-CN.md),
[_ÁπÅÈ´î‰∏≠Êñá_](README.zh-TW.md),
[_ÌïúÍµ≠Ïñ¥_](README.ko-KR.md),
[_Êó•Êú¨Ë™û_](README.ja-JP.md),
[_Polski_](README.pl-PL.md),
[_Fran√ßais_](README.fr-FR.md),
[_Espa√±ol_](README.es-ES.md),
[_Portugu√™s_](README.pt-BR.md),
[_–†—É—Å—Å–∫–∏–π_](README.ru-RU.md),
[_T√ºrk√ße_](README.tr-TR.md),
[_Italiano_](README.it-IT.md),
[_Bahasa Indonesia_](README.id-ID.md),
[_–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞_](README.uk-UA.md),
[_Arabic_](README.ar-AR.md),
[_Ti·∫øng Vi·ªát_](README.vi-VN.md),
[_Deutsch_](README.de-DE.md),
[_Uzbek_](README.uz-UZ.md),
[_◊¢◊ë◊®◊ô◊™_](README.he-IL.md)

*‚òù Note that this project is meant to be used for learning and researching purposes
only, and it is **not** meant to be used for production.*

## Data Structures

A data structure is a particular way of organizing and storing data in a computer so that it can
be accessed and modified efficiently. More precisely, a data structure is a collection of data
values, the relationships among them, and the functions or operations that can be applied to
the data.

Remember that each data has its own trade-offs. And you need to pay attention more to why you&#039;re choosing a certain data structure than to how to implement it.

`B` - Beginner, `A` - Advanced

* `B` [Linked List](src/data-structures/linked-list)
* `B` [Doubly Linked List](src/data-structures/doubly-linked-list)
* `B` [Queue](src/data-structures/queue)
* `B` [Stack](src/data-structures/stack)
* `B` [Hash Table](src/data-structures/hash-table)
* `B` [Heap](src/data-structures/heap) - max and min heap versions
* `B` [Priority Queue](src/data-structures/priority-queue)
* `A` [Trie](src/data-structures/trie)
* `A` [Tree](src/data-structures/tree)
  * `A` [Binary Search Tree](src/data-structures/tree/binary-search-tree)
  * `A` [AVL Tree](src/data-structures/tree/avl-tree)
  * `A` [Red-Black Tree](src/data-structures/tree/red-black-tree)
  * `A` [Segment Tree](src/data-structures/tree/segment-tree) - with min/max/sum range queries examples
  * `A` [Fenwick Tree](src/data-structures/tree/fenwick-tree) (Binary Indexed Tree)
* `A` [Graph](src/data-structures/graph) (both directed and undirected)
* `A` [Disjoint Set](src/data-structures/disjoint-set) - a union‚Äìfind data structure or merge‚Äìfind set
* `A` [Bloom Filter](src/data-structures/bloom-filter)
* `A` [LRU Cache](src/data-structures/lru-cache/) - Least Recently Used (LRU) cache

## Algorithms

An algorithm is an unambiguous specification of how to solve a class of problems. It is
a set of rules that precisely define a sequence of operations.

`B` - Beginner, `A` - Advanced

### Algorithms by Topic

* **Math**
  * `B` [Bit Manipulation](src/algorithms/math/bits) - set/get/update/clear bits, multiplication/division by two, make negative etc.
  * `B` [Binary Floating Point](src/algorithms/math/binary-floating-point) - binary representation of the floating-point numbers.
  * `B` [Factorial](src/algorithms/math/factorial)
  * `B` [Fibonacci Number](src/algorithms/math/fibonacci) - classic and closed-form versions
  * `B` [Prime Factors](src/algorithms/math/prime-factors) - finding prime factors and counting them using Hardy-Ramanujan&#039;s theorem
  * `B` [Primality Test](src/algorithms/math/primality-test) (trial division method)
  * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)
  * `B` [Least Common Multiple](src/algorithms/math/least-common-multiple) (LCM)
  * `B` [Sieve of Eratosthenes](src/algorithms/math/sieve-of-eratosthenes) - finding all prime numbers up to any given limit
  * `B` [Is Power of Two](src/algorithms/math/is-power-of-two) - check if the number is power of two (naive and bitwise algorithms)
  * `B` [Pascal&#039;s Triangle](src/algorithms/math/pascal-triangle)
  * `B` [Complex Number](src/algorithms/math/complex-number) - complex numbers and basic operations with them
  * `B` [Radian &amp; Degree](src/algorithms/math/radian) - radians to degree and backwards conversion
  * `B` [Fast Powering](src/algorithms/math/fast-powering)
  * `B` [Horner&#039;s method](src/algorithms/math/horner-method) - polynomial evaluation
  * `B` [Matrices](src/algorithms/math/matrix) - matrices and basic matrix operations (multiplication, transposition, etc.)
  * `B` [Euclidean Distance](src/algorithms/math/euclidean-distance) - distance between two points/vectors/matrices
  * `A` [Integer Partition](src/algorithms/math/integer-partition)
  * `A` [Square Root](src/algorithms/math/square-root) - Newton&#039;s method
  * `A` [Liu Hui œÄ Algorithm](src/algorithms/math/liu-hui) - approximate œÄ calculations based on N-gons
  * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - decompose a function of time (a signal) into the frequencies that make it up
* **Sets**
  * `B` [Cartesian Product](src/algorithms/sets/cartesian-product) - product of multiple sets
  * `B` [Fisher‚ÄìYates Shuffle](src/algorithms/sets/fisher-yates) - random permutation of a finite sequence
  * `A` [Power Set](src/algorithms/sets/power-set) - all subsets of a set (bitwise, backtracking, and cascading solutions)
  * `A` [Permutations](src/algorithms/sets/permutations) (with and without repetitions)
  * `A` [Combinations](src/algorithms/sets/combinations) (with and without repetitions)
  * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS)
  * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence)
  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence) (SCS)
  * `A` [Knapsack Problem](src/algorithms/sets/knapsack-problem) - &quot;0/1&quot; and &quot;Unbound&quot; ones
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray) - &quot;Brute Force&quot; and &quot;Dynamic Programming&quot; (Kadane&#039;s) versions
  * `A` [Combination Sum](src/algorithms/sets/combination-sum) - find all combinations that form specific sum
* **Strings**
  * `B` [Hamming Distance](src/algorithms/string/hamming-distance) - number of positions at which the symbols are different
  * `B` [Palindrome](src/algorithms/string/palindrome) - check if the string is the same in reverse
  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - minimum edit distance between two sequences
  * `A` [Knuth‚ÄìMorris‚ÄìPratt Algorithm](src/algorithms/string/knuth-morris-pratt) (KMP Algorithm) - substring search (pattern matching)
  * `A` [Z Algorithm](src/algorithms/string/z-algorithm) - substring search (pattern matching)
  * `A` [Rabin Karp Algorithm](src/algorithms/string/rabin-karp) - substring search
  * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring)
  * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching)
* **Searches**
  * `B` [Linear Search](src/algorithms/search/linear-search)
  * `B` [Jump Search](src/algorithms/search/jump-search) (or Block Search) - search in sorted array
  * `B` [Binary Search](src/algorithms/search/binary-search) - search in sorted array
  * `B` [Interpolation Search](src/algorithms/search/interpolation-search) - search in uniformly distributed sorted array
* **Sorting**
  * `B` [Bubble Sort](src/algorithms/sorting/bubble-sort)
  * `B` [Selection Sort](src/algorithms/sorting/selection-sort)
  * `B` [Insertion Sort](src/algorithms/sorting/insertion-sort)
  * `B` [Heap Sort](src/algorithms/sorting/heap-sort)
  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)
  * `B` [Quicksort](src/algorithms/sorting/quick-sort) - in-place and non-in-place implementations
  * `B` [Shellsort](src/algorithms/sorting/shell-sort)
  * `B` [Counting Sort](src/algorithms/sorting/counting-sort)
  * `B` [Radix Sort](src/algorithms/sorting/radix-sort)
  * `B` [Bucket Sort](src/algorithms/sorting/bucket-sort)
* **Linked Lists**
  * `B` [Straight Traversal](src/algorithms/linked-list/traversal)
  * `B` [Reverse Traversal](src/algorithms/linked-list/reverse-traversal)
* **Trees**
  * `B` [Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)
  * `B` [Breadth-First Search](src/algorithms/tree/breadth-first-search) (BFS)
* **Graphs**
  * `B` [Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)
  * `B` [Breadth-First Search](src/algorithms/graph/breadth-first-search) (BFS)
  * `B` [Kruskal‚Äôs Algorithm](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - finding the shortest paths to all graph vertices from single vertex
  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - finding the shortest paths to all graph vertices from single vertex
  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - find the shortest paths between all pairs of vertices
  * `A` [Detect Cycle](src/algorithms/graph/detect-cycle) - for both directed and undirected graphs (DFS and Disjoint Set based versions)
  * `A` [Prim‚Äôs Algorithm](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Topological Sorting](src/algorithms/graph/topological-sorting) - DFS method
  * `A` [Articulation Points](src/algorithms/graph/articulation-points) - Tarjan&#039;s algorithm (DFS based)
  * `A` [Bridges](src/algorithms/graph/bridges) - DFS based algorithm
  * `A` [Eulerian Path and Eulerian Circuit](src/algorithms/graph/eulerian-path) - Fleury&#039;s algorithm - Visit every edge exactly once
  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once
  * `A` [Strongly Connected Components](src/algorithms/graph/strongly-connected-components) - Kosaraju&#039;s algorithm
  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city
* **Cryptography**
  * `B` [Polynomial Hash](src/algorithms/cryptography/polynomial-hash) - rolling hash function based on polynomial
  * `B` [Rail Fence Cipher](src/algorithms/cryptography/rail-fence-cipher) - a transposition cipher algorithm for encoding messages
  * `B` [Caesar Cipher](src/algorithms/cryptography/caesar-cipher) - simple substitution cipher
  * `B` [Hill Cipher](src/algorithms/cryptography/hill-cipher) - substitution cipher based on linear algebra
* **Machine Learning**
  * `B` [NanoNeuron](https://github.com/trekhleb/nano-neuron) - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)
  * `B` [k-NN](src/algorithms/ml/knn) - k-nearest neighbors classification algorithm
  * `B` [k-Means](src/algorithms/ml/k-means) - k-Means clustering algorithm
* **Image Processing**
  * `B` [Seam Carving](src/algorithms/image-processing/seam-carving) - content-aware image resizing algorithm
* **Statistics**
  * `B` [Weighted Random](src/algorithms/statistics/weighted-random) - select the random item from the list based on items&#039; weights
* **Evolutionary algorithms**
  * `A` [Genetic algorithm](https://github.com/trekhleb/self-parking-car-evolution) - example of how the genetic algorithm may be applied for training the self-parking cars
* **Uncategorized**
  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)
  * `B` [Square Matrix Rotation](src/algorithms/uncategorized/square-matrix-rotation) - in-place algorithm
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game) - backtracking, dynamic programming (top-down + bottom-up) and greedy examples
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths) - backtracking, dynamic programming and Pascal&#039;s Triangle based examples
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem (dynamic programming and brute force versions)
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach to the top (4 solutions)
  * `B` [Best Time To Buy Sell Stocks](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - divide and conquer and one-pass examples
  * `B` [Valid Parentheses](src/algorithms/stack/valid-parentheses) - check if a string has valid parentheses (using stack)
  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)
  * `A` [Knight&#039;s Tour](src/algorithms/uncategorized/knight-tour)

### Algorithms by Paradigm

An algorithmic paradigm is a generic method or approach which underlies the design of a class
of algorithms. It is an abstraction higher than the notion of an algorithm, just as an
algorithm is an abstraction higher than a computer program.

* **Brute Force** - look at all the possibilities and selects the best solution
  * `B` [Linear Search](src/algorithms/search/linear-search)
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach the top
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city
  * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - decompose a function of time (a signal) into the frequencies that make it up
* **Greedy** - choose the best option at the current time, without any consideration for the future
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `A` [Unbound Knapsack Problem](src/algorithms/sets/knapsack-problem)
  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - finding the shortest path to all graph vertices
  * `A` [Prim‚Äôs Algorithm](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Kruskal‚Äôs Algorithm](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph
* **Divide and Conquer** - divide the problem into smaller parts and then solve those parts
  * `B` [Binary Search](src/algorithms/search/binary-search)
  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)
  * `B` [Pascal&#039;s Triangle](src/algorithms/math/pascal-triangle)
  * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)
  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)
  * `B` [Quicksort](src/algorithms/sorting/quick-sort)
  * `B` [Tree Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)
  * `B` [Graph Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)
  * `B` [Matrices](src/algorithms/math/matrix) - generating and traversing the matrices of different shapes
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Fast Powering](src/algorithms/math/fast-powering)
  * `B` [Best Time To Buy Sell Stocks](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - divide and conquer and one-pass examples
  * `A` [Permutations](src/algorithms/sets/permutations) (with and without repetitions)
  * `A` [Combinations](src/algorithms/sets/combinations) (with and without repetitions)
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
* **Dynamic Programming** - build up a solution using previously found sub-solutions
  * `B` [Fibonacci Number](src/algorithms/math/fibonacci)
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach the top
  * `B` [Seam Carving](src/algorithms/image-processing/seam-carving) - content-aware image resizing algorithm
  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - minimum edit distance between two sequences
  * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS)
  * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring)
  * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence)
  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence)
  * `A` [0/1 Knapsack Problem](src/algorithms/sets/knapsack-problem)
  * `A` [Integer Partition](src/algorithms/math/integer-partition)
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - finding the shortest path to all graph vertices
  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - find the shortest paths between all pairs of vertices
  * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching)
* **Backtracking** - similarly to brute force, try to generate all possible solutions, but each time you generate the next solution, you test
if it satisfies all conditions and only then continue generating subsequent solutions. Otherwise, backtrack and go on a
different path to finding a solution. Normally the DFS traversal of state-space is being used.
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)
  * `B` [Power Set](src/algorithms/sets/power-set) - all subsets of a set
  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once
  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)
  * `A` [Knight&#039;s Tour](src/algorithms/uncategorized/knight-tour)
  * `A` [Combination Sum](src/algorithms/sets/combination-sum) - find all combinations that form specific sum
* **Branch &amp; Bound** - remember the lowest-cost solution found at each stage of the backtracking
search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of
a least-cost solution to the problem in order to discard partial solutions with costs larger than the
lowest-cost solution found so far. Normally, BFS traversal in combination with DFS traversal of state-space
tree is being used.

## How to use this repository

**Install all dependencies**

```
npm install
```

**Run ESLint**

You may want to run it to check code quality.

```
npm run lint
```

**Run all tests**

```
npm test
```

**Run tests by name**

```
npm test -- &#039;LinkedList&#039;
```

**Troubleshooting**

If linting or testing is failing, try to delete the `node_modules` folder and re-install npm packages:

```
rm -rf ./node_modules
npm i
```

Also, make sure that you&#039;re using the correct Node version (`&gt;=16`). If you&#039;re using [nvm](https://github.com/nvm-sh/nvm) for Node version management you may run `nvm use` from the root folde

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[devlikeapro/waha]]></title>
            <link>https://github.com/devlikeapro/waha</link>
            <guid>https://github.com/devlikeapro/waha</guid>
            <pubDate>Thu, 20 Mar 2025 00:04:07 GMT</pubDate>
            <description><![CDATA[WAHA - WhatsApp HTTP API (REST API) that you can configure in a click! 3 engines: WEBJS (browser based), NOWEB (websocket nodejs), GOWS (websocket go)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/devlikeapro/waha">devlikeapro/waha</a></h1>
            <p>WAHA - WhatsApp HTTP API (REST API) that you can configure in a click! 3 engines: WEBJS (browser based), NOWEB (websocket nodejs), GOWS (websocket go)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,267</p>
            <p>Forks: 362</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre># WAHA

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./logo.png&quot; style=&#039;border-radius: 50%&#039; width=&#039;150&#039;/&gt;
&lt;/p&gt;

**WAHA** - **W**hats**A**pp **H**TTP **A**PI (REST API) that you can install on your own server and run in less than 5 minutes!

[![Docker Pulls](https://img.shields.io/docker/pulls/devlikeapro/waha)](https://hub.docker.com/r/devlikeapro/waha)

- Documentation: [https://waha.devlike.pro/](https://waha.devlike.pro/)
- Dashboard Example: [https://waha.devlike.pro/dashboard](https://waha.devlike.pro/dashboard)
- Swagger Example: [https://waha.devlike.pro/swagger](https://waha.devlike.pro/swagger)

# Tables of Contents

&lt;!-- toc --&gt;

- [Quick start](#quick-start)
  * [Requirements](#requirements)
  * [Send your first message](#send-your-first-message)
    + [1. Download image](#1-download-image)
    + [2. Run WhatsApp HTTP API](#2-run-whatsapp-http-api)
    + [3. Start a new session](#3-start-a-new-session)
    + [4. Get and scan QR](#4-get-and-scan-qr)
    + [5. Get the screenshot](#5-get-the-screenshot)
    + [6. Send a text message](#6-send-a-text-message)
  * [What is next?](#what-is-next)
- [Development](#development)
  * [Start the project](#start-the-project)

&lt;!-- tocstop --&gt;

# Quick start

## Requirements

Only thing that you must have - installed docker. Please follow the original
instruction &lt;a href=&quot;https://docs.docker.com/get-docker/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;how to install docker -&gt;&lt;/a&gt;.

When you are ready - come back and follows the below steps to send the first text message to WhatsApp via HTTP API!

## Send your first message

Let&#039;s go over steps that allow you to send your first text message via WhatsApp HTTP API!

### 1. Download image

Assuming you have installed [Docker](https://docs.docker.com/get-docker/), let&#039;s download the image.


```bash
docker pull devlikeapro/waha
```


```bash
docker login -u devlikeapro -p {KEY}
docker pull devlikeapro/waha-plus
docker logout
```

Read more about how to get `PASSWORD` for [**‚ûï WAHA Plus**](https://waha.devlike.pro/docs/how-to/waha-plus/)

### 2. Run WhatsApp HTTP API

Run WhatsApp HTTP API:

```bash
docker run -it --rm -p 3000:3000/tcp --name waha devlikeapro/waha

# It prints logs and the last line must be
# WhatsApp HTTP API is running on: http://[::1]:3000
```

Open the link in your browser [http://localhost:3000/](http://localhost:3000/) and you&#039;ll see API documentation
(Swagger).


### 3. Start a new session

To start a new session you should have your mobile phone with installed WhatsApp application close to you.

Please go and read how what we&#039;ll need to a bit
later:
&lt;a href=&quot;https://faq.whatsapp.com/381777293328336/?helpref=hc_fnav&quot; target=&quot;_blank&quot;&gt;
How to log in - the instruction on WhatsApp site
&lt;/a&gt;

When your ready - find `POST /api/sessions`, click on **Try it out**, then **Execute** a bit below.


The example payload:
```json
{
  &quot;name&quot;: &quot;default&quot;
}
```


By using the request with `name` values you can start multiple session (WhatsApp accounts) inside the single docker container in Plus


### 4. Get and scan QR

Find `GET /api/screenshot` and execute it, it shows you QR code.


**Scan the QR with your cell phone&#039;s WhatsApp app.**


### 5. Get the screenshot

Execute `GET /api/screenshot` after a few seconds after scanning the QR - it&#039;ll show you the screenshot of you Whatsapp
instance. If you can get the actual screenshot - then you&#039;re ready to start sending messages!


### 6. Send a text message

Let&#039;s send a text message - find `POST /api/sendText`  in [swagger](http://localhost:3000/) and change `chatId` this
way: use a phone international phone number without `+` symbol and add `@c.us` at the end.

For phone number `12132132131` the `chatId` is  `12132132131@c.us`.

The example payload:
```json
{
  &quot;chatId&quot;: &quot;12132132130@c.us&quot;,
  &quot;text&quot;: &quot;Hi there!&quot;,
  &quot;session&quot;: &quot;default&quot;
}
```

Also, you can use `curl` and send POST request like this:

```bash
# Phone without +
export PHONE=12132132130
curl -d &quot;{\&quot;chatId\&quot;: \&quot;${PHONE}@c.us\&quot;, \&quot;text\&quot;: \&quot;Hello from WhatsApp HTTP API\&quot; }&quot; -H &quot;Content-Type: application/json&quot; -X POST http://localhost:3000/api/sendText
```

## What is next?
[Go and read the full documentation!](https://waha.devlike.pro/docs/overview/introduction/)

# Development

## Start the project
1. Clone the repository
2. Make sure you&#039;re using node&gt;=22
3. Run the following commands:
```bash
# Install dependencies
yarn install
# Fetch and compile proto files
yarn gows:proto
# Run
yarn start
# open http://localhost:3000
```</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[vercel/next.js]]></title>
            <link>https://github.com/vercel/next.js</link>
            <guid>https://github.com/vercel/next.js</guid>
            <pubDate>Thu, 20 Mar 2025 00:04:06 GMT</pubDate>
            <description><![CDATA[The React Framework]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vercel/next.js">vercel/next.js</a></h1>
            <p>The React Framework</p>
            <p>Language: JavaScript</p>
            <p>Stars: 130,352</p>
            <p>Forks: 27,931</p>
            <p>Stars today: 43 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[openlayers/openlayers]]></title>
            <link>https://github.com/openlayers/openlayers</link>
            <guid>https://github.com/openlayers/openlayers</guid>
            <pubDate>Thu, 20 Mar 2025 00:04:05 GMT</pubDate>
            <description><![CDATA[OpenLayers]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/openlayers/openlayers">openlayers/openlayers</a></h1>
            <p>OpenLayers</p>
            <p>Language: JavaScript</p>
            <p>Stars: 11,735</p>
            <p>Forks: 3,078</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre># OpenLayers

[OpenLayers](https://openlayers.org/) is a high-performance, feature-packed library for creating interactive maps on the web. It can display map tiles, vector data and markers loaded from any source on any web page. OpenLayers has been developed to further the use of geographic information of all kinds. It is completely free, Open Source JavaScript, released under the [BSD 2-Clause License](https://opensource.org/licenses/BSD-2-Clause).

## Getting Started

Install the [`ol` package](https://www.npmjs.com/package/ol):

```
npm install ol
```

Import just what you need for your application:

```js
import Map from &#039;ol/Map&#039;;
import View from &#039;ol/View&#039;;
import TileLayer from &#039;ol/layer/Tile&#039;;
import XYZ from &#039;ol/source/XYZ&#039;;

new Map({
  target: &#039;map&#039;,
  layers: [
    new TileLayer({
      source: new XYZ({
        url: &#039;https://tile.openstreetmap.org/{z}/{x}/{y}.png&#039;
      })
    })
  ],
  view: new View({
    center: [0, 0],
    zoom: 2
  })
});
```

See the following examples for more detail on bundling OpenLayers with your application:

 * Using [Vite](https://github.com/openlayers/ol-vite)
 * Using [Rollup](https://github.com/openlayers/ol-rollup)
 * Using [webpack](https://github.com/openlayers/ol-webpack)
 * Using [Parcel](https://github.com/openlayers/ol-parcel)

For more detail on quick prototyping without the use of a Node.js based setup, see the [Skypack](https://github.com/openlayers/ol-skypack) example.

## Sponsors

OpenLayers appreciates contributions of all kinds.  We especially want to thank our fiscal sponsors who contribute to ongoing project maintenance.

&lt;br&gt;

[![Pozi logo](./sponsor-logos/pozi.png)](https://pozi.com/)

&gt; Pozi helps connect communities through spatial thinking.
&gt; We love Openlayers and it forms a core part of our platform.
&gt; https://pozi.com/ https://app.pozi.com/

&lt;br&gt;

[![yey&#039;maps logo](./sponsor-logos/yeymaps.png)](https://www.yeymaps.io/)

&gt; yey&#039;maps is a scalable cloud GIS suite that is developed with the
&gt; powerful Openlayers API and the GDAL library.
&gt; https://www.yeymaps.io/

&lt;br&gt;

[![ela-compil logo](./sponsor-logos/ela-compil.png)](https://ela.pl/)

&gt; We develop leading Physical Security Information Management (PSIM) software.
&gt; OpenLayers is the core of our map engine and we love it! 
&gt; https://ela.pl/

&lt;br&gt;

[![Ubigu Oy logo](./sponsor-logos/ubigu-oy.svg)](https://www.ubigu.fi/)

&gt; We advance holistic utilization and availability of spatial information,
&gt; for a better planned, built and managed society.
&gt; https://www.ubigu.fi/

&lt;br&gt;

[![Scribble Maps logo](./sponsor-logos/scribble-maps.png)](https://www.scribblemaps.com/)

&gt; Build custom maps and identify insights across real estate, engineering, research, business, exploration, construction, manufacturing - and so much more.
&gt; https://www.scribblemaps.com/

&lt;br&gt;

See our [GitHub sponsors page](https://github.com/sponsors/openlayers) or [Open Collective](https://opencollective.com/openlayers/contribute/sponsors-214/checkout) if you too are interested in becoming a regular sponsor.

## TypeScript support

The [ol package](https://npmjs.com/package/ol) includes auto-generated TypeScript declarations as `*.d.ts` files.

## Supported Browsers

OpenLayers runs on all modern browsers (with greater than 1% global usage).  This includes Chrome, Firefox, Safari and Edge. For older browsers, polyfills ([Fastly](https://polyfill-fastly.io) or [Cloudflare](https://cdnjs.cloudflare.com/polyfill)) will likely need to be added.

## Documentation

Check out the [hosted examples](https://openlayers.org/en/latest/examples/), the [workshop](https://openlayers.org/workshop/) or the [API documentation](https://openlayers.org/en/latest/apidoc/).

## Bugs

Please use the [GitHub issue tracker](https://github.com/openlayers/openlayers/issues) for all bugs and feature requests. Before creating a new issue, do a quick search to see if the problem has been reported already.

## Contributing

Please see our guide on [contributing](CONTRIBUTING.md) if you&#039;re interested in getting involved.

## Community

- Need help? Find it on [Stack Overflow using the tag &#039;openlayers&#039;](https://stackoverflow.com/questions/tagged/openlayers)
- Follow [@openlayers](https://twitter.com/openlayers) on Twitter

![Test Status](https://github.com/openlayers/openlayers/workflows/Test/badge.svg)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[prebid/Prebid.js]]></title>
            <link>https://github.com/prebid/Prebid.js</link>
            <guid>https://github.com/prebid/Prebid.js</guid>
            <pubDate>Thu, 20 Mar 2025 00:04:04 GMT</pubDate>
            <description><![CDATA[Setup and manage header bidding advertising partners without writing code or confusing line items. Prebid.js is open source and free.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/prebid/Prebid.js">prebid/Prebid.js</a></h1>
            <p>Setup and manage header bidding advertising partners without writing code or confusing line items. Prebid.js is open source and free.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,414</p>
            <p>Forks: 2,130</p>
            <p>Stars today: 1 star today</p>
            <h2>README</h2><pre>[![Build Status](https://circleci.com/gh/prebid/Prebid.js.svg?style=svg)](https://circleci.com/gh/prebid/Prebid.js)
[![Percentage of issues still open](http://isitmaintained.com/badge/open/prebid/Prebid.js.svg)](https://isitmaintained.com/project/prebid/Prebid.js &quot;Percentage of issues still open&quot;)
[![Coverage Status](https://coveralls.io/repos/github/prebid/Prebid.js/badge.svg)](https://coveralls.io/github/prebid/Prebid.js)

# Prebid.js

&gt; A free and open source library for publishers to quickly implement header bidding.

This README is for developers who want to contribute to Prebid.js.
Additional documentation can be found at [the Prebid.js documentation homepage](https://docs.prebid.org/prebid/prebidjs.html).
Working examples can be found in [the developer docs](https://prebid.org/dev-docs/getting-started.html).

Prebid.js is open source software that is offered for free as a convenience. While it is designed to help companies address legal requirements associated with header bidding, we cannot and do not warrant that your use of Prebid.js will satisfy legal requirements. You are solely responsible for ensuring that your use of Prebid.js complies with all applicable laws.  We strongly encourage you to obtain legal advice when using Prebid.js to ensure your implementation complies with all laws where you operate.

**Table of Contents**

- [Usage](#Usage)
- [Install](#Install)
- [Build](#Build)
- [Run](#Run)
- [Contribute](#Contribute)

&lt;a name=&quot;Usage&quot;&gt;&lt;/a&gt;

## Usage (as a npm dependency)

*Note:* Requires Prebid.js v1.38.0+

Prebid.js depends on Babel and some Babel Plugins in order to run correctly in the browser.  Here are some examples for
configuring webpack to work with Prebid.js.

With Babel 7:
```javascript
// webpack.conf.js
let path = require(&#039;path&#039;);
module.exports = {
  mode: &#039;production&#039;,
  module: {
    rules: [

      // this rule can be excluded if you don&#039;t require babel-loader for your other application files
      {
        test: /\.m?js$/,
        exclude: /node_modules/,
        use: {
          loader: &#039;babel-loader&#039;,
        }
      },

      // this separate rule is required to make sure that the Prebid.js files are babel-ified.  this rule will
      // override the regular exclusion from above (for being inside node_modules).
      {
        test: /.js$/,
        include: new RegExp(`\\${path.sep}prebid\\.js`),
        use: {
          loader: &#039;babel-loader&#039;,
          // presets and plugins for Prebid.js must be manually specified separate from your other babel rule.
          // this can be accomplished by requiring prebid&#039;s .babelrc.js file (requires Babel 7 and Node v8.9.0+)
          // as of Prebid 6, babelrc.js only targets modern browsers. One can change the targets and build for
          // older browsers if they prefer, but integration tests on ie11 were removed in Prebid.js 6.0
          options: require(&#039;prebid.js/.babelrc.js&#039;)
        }
      }
    ]
  }
}
```

Or for Babel 6:
```javascript
            // you must manually install and specify the presets and plugins yourself
            options: {
              plugins: [
                &quot;transform-object-assign&quot;, // required (for IE support) and &quot;babel-plugin-transform-object-assign&quot;
                                           // must be installed as part of your package.
                require(&#039;prebid.js/plugins/pbjsGlobals.js&#039;) // required!
              ],
              presets: [
                [&quot;env&quot;, {                 // you can use other presets if you wish.
                  &quot;targets&quot;: {            // this example is using &quot;babel-presets-env&quot;, which must be installed if you
                    &quot;browsers&quot;: [         // follow this example.
                      ... // your browser targets. they should probably match the targets you&#039;re using for the rest
                          // of your application
                    ]
                  }
                }]
              ]
            }
```

Then you can use Prebid.js as any other npm dependency

```javascript
import pbjs from &#039;prebid.js&#039;;
import &#039;prebid.js/modules/rubiconBidAdapter&#039;; // imported modules will register themselves automatically with prebid
import &#039;prebid.js/modules/appnexusBidAdapter&#039;;
pbjs.processQueue();  // required to process existing pbjs.queue blocks and setup any further pbjs.queue execution

pbjs.requestBids({
  ...
})

```



&lt;a name=&quot;Install&quot;&gt;&lt;/a&gt;

## Install



    $ git clone https://github.com/prebid/Prebid.js.git
    $ cd Prebid.js
    $ npm ci

*Note:* You need to have `NodeJS` 12.16.1 or greater installed.

*Note:* In the 1.24.0 release of Prebid.js we have transitioned to using gulp 4.0 from using gulp 3.9.1.  To comply with gulp&#039;s recommended setup for 4.0, you&#039;ll need to have `gulp-cli` installed globally prior to running the general `npm ci`.  This shouldn&#039;t impact any other projects you may work on that use an earlier version of gulp in its setup.

If you have a previous version of `gulp` installed globally, you&#039;ll need to remove it before installing `gulp-cli`.  You can check if this is installed by running `gulp -v` and seeing the version that&#039;s listed in the `CLI` field of the output.  If you have the `gulp` package installed globally, it&#039;s likely the same version that you&#039;ll see in the `Local` field.  If you already have `gulp-cli` installed, it should be a lower major version (it&#039;s at version `2.0.1` at the time of the transition).

To remove the old package, you can use the command: `npm rm gulp -g`

Once setup, run the following command to globally install the `gulp-cli` package: `npm install gulp-cli -g`


&lt;a name=&quot;Build&quot;&gt;&lt;/a&gt;

## Build for Development

To build the project on your local machine we recommend, running:

    $ gulp serve-and-test --file &lt;spec_file.js&gt;

This will run testing but not linting. A web server will start at `http://localhost:9999` serving from the project root and generates the following files:

+ `./build/dev/prebid.js` - Full source code for dev and debug
+ `./build/dev/prebid.js.map` - Source map for dev and debug
+ `./build/dev/prebid-core.js`
+ `./build/dev/prebid-core.js.map`


Development may be a bit slower but if you prefer linting and additional watch files you can also still run just:

    $ gulp serve


### Build Optimization

The standard build output contains all the available modules from within the `modules` folder.  Note, however that there are bid adapters which support multiple bidders through aliases, so if you don&#039;t see a file in modules for a bid adapter, you may need to grep the repository to find the name of the module you need to include.

You might want to exclude some/most of them from the final bundle.  To make sure the build only includes the modules you want, you can specify the modules to be included with the `--modules` CLI argument.

For example, when running the serve command: `gulp serve --modules=openxBidAdapter,rubiconBidAdapter,sovrnBidAdapter`

Building with just these adapters will result in a smaller bundle which should allow your pages to load faster.

**Build standalone prebid.js**

- Clone the repo, run `npm ci`
- Then run the build:

        $ gulp build --modules=openxBidAdapter,rubiconBidAdapter,sovrnBidAdapter

Alternatively, a `.json` file can be specified that contains a list of modules you would like to include.

    $ gulp build --modules=modules.json

With `modules.json` containing the following
```json modules.json
[
  &quot;openxBidAdapter&quot;,
  &quot;rubiconBidAdapter&quot;,
  &quot;sovrnBidAdapter&quot;
]
```

**Build prebid.js using npm for bundling**

In case you&#039;d like to explicitly show that your project uses `prebid.js` and want a reproducible build, consider adding it as an `npm` dependency.

- Add `prebid.js` as a `npm` dependency of your project: `npm install prebid.js`
- Run the `prebid.js` build under the `node_modules/prebid.js/` folder

        $ gulp build --modules=path/to/your/list-of-modules.json

Most likely your custom `prebid.js` will only change when there&#039;s:

- A change in your list of modules
- A new release of `prebid.js`

Having said that, you are probably safe to check your custom bundle into your project.  You can also generate it in your build process.

**Build once, bundle multiple times**

If you need to generate multiple distinct bundles from the same Prebid version, you can reuse a single build with:

```
gulp build
gulp bundle --tag one --modules=one.json
gulp bundle --tag two --modules=two.json
```

This generates slightly larger files, but has the advantage of being much faster to run (after the initial `gulp build`). It&#039;s also the method used by [the Prebid.org download page](https://docs.prebid.org/download.html).

&lt;a name=&quot;Run&quot;&gt;&lt;/a&gt;

### Excluding particular features from the build

Since version 7.2.0, you may instruct the build to exclude code for some features - for example, if you don&#039;t need support for native ads:

```
gulp build --disable NATIVE --modules=openxBidAdapter,rubiconBidAdapter,sovrnBidAdapter # substitute your module list
```

Or, if you are consuming Prebid through npm, with the `disableFeatures` option in your Prebid rule:

```javascript
  {
    test: /.js$/,
    include: new RegExp(`\\${path.sep}prebid\\.js`),
    use: {
      loader: &#039;babel-loader&#039;,
      options: require(&#039;prebid.js/babelConfig.js&#039;)({disableFeatures: [&#039;NATIVE&#039;]})
    }
  }
```

Features that can be disabled this way are:

 - `VIDEO` - support for video bids;
 - `NATIVE` - support for native bids;
 - `UID2_CSTG` - support for UID2 client side token generation (see [Unified ID 2.0](https://docs.prebid.org/dev-docs/modules/userid-submodules/unified2.html))
 - `GREEDY` - disables the use blocking, &quot;greedy&quot; promises within Prebid (see below).    

#### Greedy promises

By default, Prebid attempts to hold control of the main thread when possible, using a [custom implementation of `Promise`](https://github.com/prebid/Prebid.js/blob/master/libraries/greedy/greedyPromise.js) that does not submit callbacks to the scheduler once the promise is resolved (running them immediately instead).
Disabling this behavior instructs Prebid to use the standard `window.Promise` instead; this has the effect of breaking up task execution, making them slower overall but giving the browser more chances to run other tasks in between, which can improve UX.         

You may also override the `Promise` constructor used by Prebid through `pbjs.Promise`, for example:

```javascript
var pbjs = pbjs || {};
pbjs.Promise = myCustomPromiseConstructor;
```

## Unminified code

You can get a version of the code that&#039;s unminified for debugging with `build-bundle-dev`:

```bash
gulp build-bundle-dev --modules=bidderA,module1,...
```

The results will be in build/dev/prebid.js.

## Test locally

To lint the code:

```bash
gulp lint
```

To lint and only show errors

```bash
gulp lint --no-lint-warnings
```

To run the unit tests:

```bash
gulp test
```

To run the unit tests for a particular file (example for pubmaticBidAdapter_spec.js):
```bash
gulp test --file &quot;test/spec/modules/pubmaticBidAdapter_spec.js&quot; --nolint
```

To generate and view the code coverage reports:

```bash
gulp test-coverage
gulp view-coverage
```

Local end-to-end testing can be done with:

```bash
gulp e2e-test --local
```

For Prebid.org members with access to BrowserStack, additional end-to-end testing can be done with:

```bash
gulp e2e-test --host=test.localhost
```

To run these tests, the following items are required:
- setup an alias of localhost in your `hosts` file (eg `127.0.0.1  test.localhost`); note - you can use any alias.  Use this alias in the command-line argument above.
- access to [BrowserStack](https://www.browserstack.com/) account.  Assign the following variables in your bash_profile:
```bash
export BROWSERSTACK_USERNAME=&#039;YourUserNameHere&#039;
export BROWSERSTACK_ACCESS_KEY=&#039;YourAccessKeyHere&#039;
```
You can get these BrowserStack values from your profile page.

For development:

```javascript
(function() {
    var d = document, pbs = d.createElement(&#039;script&#039;), pro = d.location.protocol;
    pbs.type = &#039;text/javascript&#039;;
    pbs.src = ((pro === &#039;https:&#039;) ? &#039;https&#039; : &#039;http&#039;) + &#039;./build/dev/prebid.js&#039;;
    var target = document.getElementsByTagName(&#039;head&#039;)[0];
    target.insertBefore(pbs, target.firstChild);
})();
```

For deployment:

```javascript
(function() {
    var d = document, pbs = d.createElement(&#039;script&#039;), pro = d.location.protocol;
    pbs.type = &#039;text/javascript&#039;;
    pbs.src = ((pro === &#039;https:&#039;) ? &#039;https&#039; : &#039;http&#039;) + &#039;./build/dist/prebid.js&#039;;
    var target = document.getElementsByTagName(&#039;head&#039;)[0];
    target.insertBefore(pbs, target.firstChild);
})();
```

Build and run the project locally with:

```bash
gulp serve
```

This runs `lint` and `test`, then starts a web server at `http://localhost:9999` serving from the project root.
Navigate to your example implementation to test, and if your `prebid.js` file is sourced from the `./build/dev`
directory you will have sourcemaps available in your browser&#039;s developer tools.

To run the example file, go to:

+ `http://localhost:9999/integrationExamples/gpt/hello_world.html`

As you make code changes, the bundles will be rebuilt and the page reloaded automatically.

&lt;a name=&quot;Contribute&quot;&gt;&lt;/a&gt;

## Contribute

Many SSPs, bidders, and publishers have contributed to this project. [Hundreds of bidders](https://github.com/prebid/Prebid.js/tree/master/modules) are supported by Prebid.js.

For guidelines, see [Contributing](./CONTRIBUTING.md).

Our PR review process can be found [here](https://github.com/prebid/Prebid.js/tree/master/PR_REVIEW.md).

### Add a Bidder Adapter

To add a bidder adapter module, see the instructions in [How to add a bidder adapter](https://docs.prebid.org/dev-docs/bidder-adaptor.html).

### Code Quality

Code quality is defined by `.eslintrc` and errors are reported in the terminal.

If you are contributing code, you should [configure your editor](http://eslint.org/docs/user-guide/integrations#editors) with the provided `.eslintrc` settings.

### Unit Testing with Karma

        $ gulp test --watch --browsers=chrome

This will run tests and keep the Karma test browser open. If your `prebid.js` file is sourced from the `./build/dev` directory you will also have sourcemaps available when using your browser&#039;s developer tools.

+ To access the Karma debug page, go to `http://localhost:9876/debug.html`

+ For test results, see the console

+ To set breakpoints in source code, see the developer tools

Detailed code coverage reporting can be generated explicitly with

        $ gulp test --coverage

The results will be in

        ./build/coverage

*Note*: Starting in June 2016, all pull requests to Prebid.js need to include tests with greater than 80% code coverage before they can be merged.  For more information, see [#421](https://github.com/prebid/Prebid.js/issues/421).

For instructions on writing tests for Prebid.js, see [Testing Prebid.js](https://prebid.org/dev-docs/testing-prebid.html).

### Supported Browsers

Prebid.js is supported on IE11 and modern browsers until 5.x. 6.x+ transpiles to target &gt;0.25%; not Opera Mini; not IE11.

### Governance
Review our governance model [here](https://github.com/prebid/Prebid.js/tree/master/governance.md).
### END
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>