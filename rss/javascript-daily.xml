<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Tue, 01 Jul 2025 00:05:44 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[Worklenz/worklenz]]></title>
            <link>https://github.com/Worklenz/worklenz</link>
            <guid>https://github.com/Worklenz/worklenz</guid>
            <pubDate>Tue, 01 Jul 2025 00:05:44 GMT</pubDate>
            <description><![CDATA[All in one project management tool for efficient teams]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Worklenz/worklenz">Worklenz/worklenz</a></h1>
            <p>All in one project management tool for efficient teams</p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,007</p>
            <p>Forks: 168</p>
            <p>Stars today: 38 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://worklenz.com&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;
        &lt;img src=&quot;https://s3.us-west-2.amazonaws.com/worklenz.com/assets/icon-144x144.png&quot; alt=&quot;Worklenz Logo&quot; width=&quot;75&quot;&gt;
    &lt;/a&gt;
    &lt;br&gt;
    Worklenz    
&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://worklenz.com/task-management/&quot;&gt;Task Management&lt;/a&gt; |
    &lt;a href=&quot;https://worklenz.com/time-tracking/&quot;&gt;Time Tracking&lt;/a&gt; |
    &lt;a href=&quot;https://worklenz.com/analytics/&quot;&gt;Analytics&lt;/a&gt; |
    &lt;a href=&quot;https://worklenz.com/resource-management/&quot;&gt;Resource Management&lt;/a&gt; |
    &lt;a href=&quot;https://worklenz.com/templates/&quot;&gt;Project Templates&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://worklenz.com&quot; target=&quot;_blank&quot;&gt;
      &lt;img
        src=&quot;https://worklenz.s3.amazonaws.com/assets/screenshots/hero-view.png&quot;
        alt=&quot;Worklenz&quot;
        width=&quot;1200&quot;
      /&gt;
    &lt;/a&gt;
&lt;/p&gt;

Worklenz is a project management tool designed to help organizations improve their efficiency. It provides a
comprehensive solution for managing projects, tasks, and collaboration within teams.

## Features

- **Project Planning**: Create and organize projects, assign tasks to team members.
- **Task Management**: Break down projects into smaller tasks, set due dates, priorities, and track progress.
- **Collaboration**: Share files, leave comments, and communicate seamlessly with your team members.
- **Time Tracking**: Monitor time spent on tasks and projects for better resource allocation and billing.
- **Reporting**: Generate detailed reports on project status, team workload, and performance metrics.

## Tech Stack

This repository contains the frontend and backend code for Worklenz.

- **Frontend**: Built using React with Ant Design as the UI library.
- **Backend**: Built using TypeScript, Express.js, with PostgreSQL as the database.

## Requirements

- Node.js version v18 or newer
- PostgreSQL version v15 or newer
- Docker and Docker Compose (for containerized setup)

## Getting Started

These instructions will help you set up and run the Worklenz project on your local machine for development and testing purposes.

### Prerequisites

- Node.js (version 18 or higher)
- PostgreSQL database
- An S3-compatible storage service (like MinIO) or Azure Blob Storage

### Option 1: Manual Installation

1. Clone the repository
```bash
git clone https://github.com/Worklenz/worklenz.git
cd worklenz
```

2. Set up environment variables
   - Copy the example environment files
   ```bash
   cp .env.example .env
   cp worklenz-backend/.env.example worklenz-backend/.env
   ```
   - Update the environment variables with your configuration

3. Install dependencies
```bash
# Install backend dependencies
cd worklenz-backend
npm install

# Install frontend dependencies
cd ../worklenz-frontend
npm install
```

4. Set up the database
```bash
# Create a PostgreSQL database named worklenz_db
cd worklenz-backend

# Execute the SQL setup files in the correct order
psql -U your_username -d worklenz_db -f database/sql/0_extensions.sql
psql -U your_username -d worklenz_db -f database/sql/1_tables.sql
psql -U your_username -d worklenz_db -f database/sql/indexes.sql
psql -U your_username -d worklenz_db -f database/sql/4_functions.sql
psql -U your_username -d worklenz_db -f database/sql/triggers.sql
psql -U your_username -d worklenz_db -f database/sql/3_views.sql
psql -U your_username -d worklenz_db -f database/sql/2_dml.sql
psql -U your_username -d worklenz_db -f database/sql/5_database_user.sql
```

5. Start the development servers
```bash
# In one terminal, start the backend
cd worklenz-backend
npm run dev

# In another terminal, start the frontend
cd worklenz-frontend
npm run dev
```

6. Access the application at http://localhost:5000

### Option 2: Docker Setup

The project includes a fully configured Docker setup with:
- Frontend React application
- Backend server
- PostgreSQL database
- MinIO for S3-compatible storage

1. Clone the repository:
```bash
git clone https://github.com/Worklenz/worklenz.git
cd worklenz
```

2. Start the Docker containers (choose one option):

**Using Docker Compose directly**
```bash
docker-compose up -d
```

3. The application will be available at:
   - Frontend: http://localhost:5000
   - Backend API: http://localhost:3000
   - MinIO Console: http://localhost:9001 (login with minioadmin/minioadmin)

4. To stop the services:
```bash
docker-compose down
```

## Configuration

### Environment Variables

Worklenz requires several environment variables to be configured for proper operation. These include:

- Database credentials
- Session secrets
- Storage configuration (S3 or Azure)
- Authentication settings

Please refer to the `.env.example` files for a full list of required variables.

### MinIO Integration

The project uses MinIO as an S3-compatible object storage service, which provides an open-source alternative to AWS S3 for development and production.

- **MinIO Console**: http://localhost:9001
  - Username: minioadmin
  - Password: minioadmin

- **Default Bucket**: worklenz-bucket (created automatically when the containers start)

### Security Considerations

For production deployments:

1. Use strong, unique passwords and keys for all services
2. Do not commit `.env` files to version control
3. Use a production-grade PostgreSQL setup with proper backup procedures
4. Enable HTTPS for all public endpoints
5. Review and update dependencies regularly

## Contributing

We welcome contributions from the community! If you&#039;d like to contribute, please follow our [contributing guidelines](CONTRIBUTING.md).

## Security

If you believe you have found a security vulnerability in Worklenz, we encourage you to responsibly disclose this and not open a public issue. We will investigate all legitimate reports.

Email [info@worklenz.com](mailto:info@worklenz.com) to disclose any security vulnerabilities.

## License

This project is licensed under the [MIT License](LICENSE).

## Analytics

Worklenz uses Google Analytics to understand how the application is being used. This helps us improve the application and make better decisions about future development.

### What We Track
- Anonymous usage statistics
- Page views and navigation patterns
- Feature usage
- Browser and device information

### Privacy
- Analytics is opt-in only
- No personal information is collected
- Users can opt-out at any time
- Data is stored according to Google&#039;s privacy policy

### How to Opt-Out
If you&#039;ve previously opted in and want to opt-out:
1. Clear your browser&#039;s local storage for the Worklenz domain
2. Or click the &quot;Decline&quot; button in the analytics notice if it appears

## Screenshots

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://worklenz.com/features/task-management/&quot; target=&quot;_blank&quot;&gt;
    &lt;img
      src=&quot;https://worklenz.s3.amazonaws.com/assets/screenshots/task-views-view.png&quot;
      alt=&quot;Worklenz task views&quot;
      width=&quot;1024&quot;
    /&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://worklenz.com/features/time-tracking/&quot; target=&quot;_blank&quot;&gt;
    &lt;img
      src=&quot;https://worklenz.s3.amazonaws.com/assets/screenshots/time-tracking-view.png&quot;
      alt=&quot;Worklenz time tracking&quot;
      width=&quot;1024&quot;
    /&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://worklenz.com/features/analytics/&quot; target=&quot;_blank&quot;&gt;
    &lt;img
      src=&quot;https://worklenz.s3.amazonaws.com/assets/screenshots/analytics-view.png&quot;
      alt=&quot;Worklenz analytics&quot;
      width=&quot;1024&quot;
    /&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://worklenz.com/features/resource-management/&quot; target=&quot;_blank&quot;&gt;
    &lt;img
      src=&quot;https://worklenz.s3.amazonaws.com/assets/screenshots/schedule-view.png&quot;
      alt=&quot;Worklenz scheduler&quot;
      width=&quot;1024&quot;
    /&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://worklenz.com/features/templates/&quot; target=&quot;_blank&quot;&gt;
    &lt;img
      src=&quot;https://worklenz.s3.amazonaws.com/assets/screenshots/templates-view.png&quot;
      alt=&quot;Worklenz templates&quot;
      width=&quot;1024&quot;
    /&gt;
  &lt;/a&gt;
&lt;/p&gt;

### Contributing

We welcome contributions from the community! If you&#039;d like to contribute, please follow
our [contributing guidelines](CONTRIBUTING.md).

### License

Worklenz is open source and released under the [GNU Affero General Public License Version 3 (AGPLv3)](LICENSE).

By contributing to Worklenz, you agree that your contributions will be licensed under its AGPL.

# Worklenz React

This repository contains the React version of Worklenz with a Docker setup for easy development and deployment.

## Getting Started with Docker

The project includes a fully configured Docker setup with:
- Frontend React application
- Backend server
- PostgreSQL database
- MinIO for S3-compatible storage

### Prerequisites

- Docker and Docker Compose installed on your system
- Git

### Quick Start

1. Clone the repository:
```bash
git clone https://github.com/Worklenz/worklenz.git
cd worklenz
```

2. Start the Docker containers (choose one option):

**Option 1: Using the provided scripts (easiest)**
- On Windows:
  ```
  start.bat
  ```
- On Linux/macOS:
  ```bash
  ./start.sh
  ```

**Option 2: Using Docker Compose directly**
```bash
docker-compose up -d
```

3. The application will be available at:
   - Frontend: http://localhost:5000
   - Backend API: http://localhost:3000
   - MinIO Console: http://localhost:9001 (login with minioadmin/minioadmin)

4. To stop the services (choose one option):

**Option 1: Using the provided scripts**
- On Windows:
  ```
  stop.bat
  ```
- On Linux/macOS:
  ```bash
  ./stop.sh
  ```

**Option 2: Using Docker Compose directly**
```bash
docker-compose down
```


## MinIO Integration

The project uses MinIO as an S3-compatible object storage service, which provides an open-source alternative to AWS S3 for development and production.

### Working with MinIO

MinIO provides an S3-compatible API, so any code that works with S3 will work with MinIO by simply changing the endpoint URL. The backend has been configured to use MinIO by default, with no additional configuration required.

- **MinIO Console**: http://localhost:9001
  - Username: minioadmin
  - Password: minioadmin

- **Default Bucket**: worklenz-bucket (created automatically when the containers start)

### Backend Storage Configuration

The backend is pre-configured to use MinIO with the following settings:

```javascript
// S3 credentials with MinIO defaults
export const REGION = process.env.AWS_REGION || &quot;us-east-1&quot;;
export const BUCKET = process.env.AWS_BUCKET || &quot;worklenz-bucket&quot;;
export const S3_URL = process.env.S3_URL || &quot;http://minio:9000/worklenz-bucket&quot;;
export const S3_ACCESS_KEY_ID = process.env.AWS_ACCESS_KEY_ID || &quot;minioadmin&quot;;
export const S3_SECRET_ACCESS_KEY = process.env.AWS_SECRET_ACCESS_KEY || &quot;minioadmin&quot;;
```

The S3 client is initialized with special MinIO configuration:

```javascript
const s3Client = new S3Client({
  region: REGION,
  credentials: {
    accessKeyId: S3_ACCESS_KEY_ID || &quot;&quot;,
    secretAccessKey: S3_SECRET_ACCESS_KEY || &quot;&quot;,
  },
  endpoint: getEndpointFromUrl(), // Extracts endpoint from S3_URL
  forcePathStyle: true, // Required for MinIO
});
```

### Environment Configuration

The project uses the following environment file structure:

- **Frontend**:
  - `worklenz-frontend/.env.development` - Development environment variables
  - `worklenz-frontend/.env.production` - Production build variables
  
- **Backend**:
  - `worklenz-backend/.env` - Backend environment variables

### Setting Up Environment Files

The Docker environment script will create or overwrite all environment files:

```bash
# For HTTP/WS
./update-docker-env.sh your-hostname

# For HTTPS/WSS
./update-docker-env.sh your-hostname true
```

This script generates properly configured environment files for both development and production environments.

## Docker Deployment

### Local Development with Docker

1. Set up the environment files:
   ```bash
   # For HTTP/WS
   ./update-docker-env.sh
   
   # For HTTPS/WSS
   ./update-docker-env.sh localhost true
   ```

2. Run the application using Docker Compose:
   ```bash
   docker-compose up -d
   ```

3. Access the application:
   - Frontend: http://localhost:5000
   - Backend API: http://localhost:3000 (or https://localhost:3000 with SSL)

4. Video Guide
   
   For a visual walkthrough of the local Docker deployment process, check out our [step-by-step video guide](https://www.youtube.com/watch?v=AfwAKxJbqLg).

### Remote Server Deployment

When deploying to a remote server:

1. Set up the environment files with your server&#039;s hostname:
   ```bash
   # For HTTP/WS
   ./update-docker-env.sh your-server-hostname
   
   # For HTTPS/WSS
   ./update-docker-env.sh your-server-hostname true
   ```
   
   This ensures that the frontend correctly connects to the backend API.

2. Pull and run the latest Docker images:
   ```bash
   docker-compose pull
   docker-compose up -d
   ```

3. Access the application through your server&#039;s hostname:
   - Frontend: http://your-server-hostname:5000
   - Backend API: http://your-server-hostname:3000

4. Video Guide
   
   For a complete walkthrough of deploying Worklenz to a remote server, check out our [deployment video guide](https://www.youtube.com/watch?v=CAZGu2iOXQs&amp;t=10s).

### Environment Configuration

The Docker setup uses environment variables to configure the services:

- Frontend:
  - `VITE_API_URL`: URL of the backend API (default: http://backend:3000 for container networking)
  - `VITE_SOCKET_URL`: WebSocket URL for real-time communication (default: ws://backend:3000)

- Backend:
  - Database connection parameters
  - Storage configuration
  - Other backend settings

For custom configuration, edit the `.env` file or the `update-docker-env.sh` script.

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[MHSanaei/3x-ui]]></title>
            <link>https://github.com/MHSanaei/3x-ui</link>
            <guid>https://github.com/MHSanaei/3x-ui</guid>
            <pubDate>Tue, 01 Jul 2025 00:05:43 GMT</pubDate>
            <description><![CDATA[Xray panel supporting multi-protocol multi-user expire day & traffic & IP limit (Vmess & Vless & Trojan & ShadowSocks & Wireguard)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/MHSanaei/3x-ui">MHSanaei/3x-ui</a></h1>
            <p>Xray panel supporting multi-protocol multi-user expire day & traffic & IP limit (Vmess & Vless & Trojan & ShadowSocks & Wireguard)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 20,909</p>
            <p>Forks: 4,524</p>
            <p>Stars today: 44 stars today</p>
            <h2>README</h2><pre>[English](/README.md) | [فارسی](/README.fa_IR.md) | [العربية](/README.ar_EG.md) |  [中文](/README.zh_CN.md) | [Español](/README.es_ES.md) | [Русский](/README.ru_RU.md)

&lt;p align=&quot;center&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./media/3x-ui-dark.png&quot;&gt;
    &lt;img alt=&quot;3x-ui&quot; src=&quot;./media/3x-ui-light.png&quot;&gt;
  &lt;/picture&gt;
&lt;/p&gt;

[![](https://img.shields.io/github/v/release/mhsanaei/3x-ui.svg?style=for-the-badge)](https://github.com/MHSanaei/3x-ui/releases)
[![](https://img.shields.io/github/actions/workflow/status/mhsanaei/3x-ui/release.yml.svg?style=for-the-badge)](https://github.com/MHSanaei/3x-ui/actions)
[![GO Version](https://img.shields.io/github/go-mod/go-version/mhsanaei/3x-ui.svg?style=for-the-badge)](#)
[![Downloads](https://img.shields.io/github/downloads/mhsanaei/3x-ui/total.svg?style=for-the-badge)](https://github.com/MHSanaei/3x-ui/releases/latest)
[![License](https://img.shields.io/badge/license-GPL%20V3-blue.svg?longCache=true&amp;style=for-the-badge)](https://www.gnu.org/licenses/gpl-3.0.en.html)

**3X-UI** — advanced, open-source web-based control panel designed for managing Xray-core server. It offers a user-friendly interface for configuring and monitoring various VPN and proxy protocols.

&gt; [!IMPORTANT]
&gt; This project is only for personal using, please do not use it for illegal purposes, please do not use it in a production environment.

As an enhanced fork of the original X-UI project, 3X-UI provides improved stability, broader protocol support, and additional features.

## Quick Start

```bash
bash &lt;(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)
```

For full documentation, please visit the [project Wiki](https://github.com/MHSanaei/3x-ui/wiki).

## A Special Thanks to

- [alireza0](https://github.com/alireza0/)

## Acknowledgment

- [Iran v2ray rules](https://github.com/chocolate4u/Iran-v2ray-rules) (License: **GPL-3.0**): _Enhanced v2ray/xray and v2ray/xray-clients routing rules with built-in Iranian domains and a focus on security and adblocking._
- [Russia v2ray rules](https://github.com/runetfreedom/russia-v2ray-rules-dat) (License: **GPL-3.0**): _This repository contains automatically updated V2Ray routing rules based on data on blocked domains and addresses in Russia._

## Support project

**If this project is helpful to you, you may wish to give it a**:star2:

&lt;p align=&quot;left&quot;&gt;
  &lt;a href=&quot;https://buymeacoffee.com/mhsanaei&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./media/buymeacoffe.png&quot; alt=&quot;Image&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

- USDT (TRC20): `TXncxkvhkDWGts487Pjqq1qT9JmwRUz8CC`
- MATIC (polygon): `0x41C9548675D044c6Bfb425786C765bc37427256A`
- LTC (Litecoin): `ltc1q2ach7x6d2zq0n4l0t4zl7d7xe2s6fs7a3vspwv`

## Stargazers over Time

[![Stargazers over time](https://starchart.cc/MHSanaei/3x-ui.svg?variant=adaptive)](https://starchart.cc/MHSanaei/3x-ui)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[GitSquared/edex-ui]]></title>
            <link>https://github.com/GitSquared/edex-ui</link>
            <guid>https://github.com/GitSquared/edex-ui</guid>
            <pubDate>Tue, 01 Jul 2025 00:05:42 GMT</pubDate>
            <description><![CDATA[A cross-platform, customizable science fiction terminal emulator with advanced monitoring & touchscreen support.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/GitSquared/edex-ui">GitSquared/edex-ui</a></h1>
            <p>A cross-platform, customizable science fiction terminal emulator with advanced monitoring & touchscreen support.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 42,387</p>
            <p>Forks: 2,742</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;br&gt;
  &lt;img alt=&quot;Logo&quot; src=&quot;media/logo.png&quot;&gt;
  &lt;br&gt;&lt;br&gt;
  &lt;a href=&quot;https://lgtm.com/projects/g/GitSquared/edex-ui/context:javascript&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://img.shields.io/lgtm/grade/javascript/g/GitSquared/edex-ui.svg?logo=lgtm&amp;logoWidth=18&quot;/&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/latest&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://img.shields.io/github/release/GitSquared/edex-ui.svg?style=popout&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;#featured-in&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://img.shields.io/github/downloads/GitSquared/edex-ui/total.svg?style=popout&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/GitSquared/edex-ui/blob/master/LICENSE&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://img.shields.io/github/license/GitSquared/edex-ui.svg?style=popout&quot;&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-Windows.exe&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/Download/Windows/?color=blue&amp;icon=windows&amp;label&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-macOS.dmg&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/Download/macOS/?color=grey&amp;icon=apple&amp;label&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-Linux-x86_64.AppImage&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/Download/Linux64/?color=orange&amp;icon=terminal&amp;label&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-Linux-arm64-AppImage&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/Download/LinuxArm64/?color=orange&amp;icon=terminal&amp;label&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://aur.archlinux.org/packages/edex-ui&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;undefined&quot; src=&quot;https://badgen.net/badge/AUR/Package/cyan&quot;&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://github.com/GitSquared/edex-ui/releases/tag/v2.2.8&quot;&gt;&lt;strong&gt;&lt;i&gt;(Project archived oct. 18th 2021)&lt;/i&gt;&lt;/strong&gt;&lt;/a&gt;
  &lt;br&gt;&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

eDEX-UI is a fullscreen, cross-platform terminal emulator and system monitor that looks and feels like a sci-fi computer interface.

---

&lt;a href=&quot;https://youtu.be/BGeY1rK19zA&quot;&gt;
  &lt;img align=&quot;right&quot; width=&quot;400&quot; alt=&quot;Demo on YouTube&quot; src=&quot;media/youtube-demo-teaser.gif&quot;&gt;
&lt;/a&gt;

Heavily inspired from the [TRON Legacy movie effects](https://web.archive.org/web/20170511000410/http://jtnimoy.com/blogs/projects/14881671) (especially the [Board Room sequence](https://gmunk.com/TRON-Board-Room)), the eDEX-UI project was originally meant to be *&quot;[DEX-UI](https://github.com/seenaburns/dex-ui) with less « art » and more « distributable software »&quot;*.

While keeping a futuristic look and feel, it strives to maintain a certain level of functionality and to be usable in real-life scenarios, with the larger goal of bringing science-fiction UXs to the mainstream.

&lt;br&gt;

It might or might not be a joke taken too seriously.


---

&lt;p align=&quot;center&quot;&gt;
  &lt;em&gt;Jump to: &lt;br&gt;&lt;a href=&quot;#features&quot;&gt;Features&lt;/a&gt; — &lt;a href=&quot;#screenshots&quot;&gt;Screenshots&lt;/a&gt; — &lt;a href=&quot;#qa&quot;&gt;Questions &amp; Answers&lt;/a&gt; — &lt;strong&gt;&lt;a href=&quot;#how-do-i-get-it&quot;&gt;Download&lt;/a&gt;&lt;/strong&gt; — &lt;a href=&quot;#featured-in&quot;&gt;Featured In&lt;/a&gt; — &lt;a href=&quot;#useful-commands-for-the-nerds&quot;&gt;Contributor Instructions&lt;/a&gt; — &lt;a href=&quot;#credits&quot;&gt;Credits&lt;/a&gt;&lt;/em&gt;
&lt;/p&gt;

## Sponsor

**Want to help support my open-source experiments and learn some cool JavaScript tricks at the same time?**

Click the banner below and sign up to **Bytes**, the only newsletter cool enough to be recommended by eDEX-UI.

[![Bytes by UI.dev](media/sponsor-uidev-bytes.jpg)](https://ui.dev/bytes/?r=gabriel)

## Features
- Fully featured terminal emulator with tabs, colors, mouse events, and support for `curses` and `curses`-like applications.
- Real-time system (CPU, RAM, swap, processes) and network (GeoIP, active connections, transfer rates) monitoring.
- Full support for touch-enabled displays, including an on-screen keyboard.
- Directory viewer that follows the CWD (current working directory) of the terminal.
- Advanced customization using themes, on-screen keyboard layouts, CSS injections. See the [wiki](https://github.com/GitSquared/edex-ui/wiki) for more info.
- Optional sound effects made by a talented sound designer for maximum hollywood hacking vibe.

## Screenshots
![Default screenshot](media/screenshot_default.png)

_[neofetch](https://github.com/dylanaraps/neofetch) on eDEX-UI 2.2 with the default &quot;tron&quot; theme &amp; QWERTY keyboard_

![Blade screenshot](media/screenshot_blade.png)

_Checking out available themes in [eDEX&#039;s config dir](https://github.com/GitSquared/edex-ui/wiki/userData) with [`ranger`](https://github.com/ranger/ranger) on eDEX-UI 2.2 with the &quot;blade&quot; theme_

![Disrupted screenshot](media/screenshot_disrupted.png)

_[cmatrix](https://github.com/abishekvashok/cmatrix) on eDEX-UI 2.2 with the experimental &quot;tron-disrupted&quot; theme, and the user-contributed DVORAK keyboard_

![Horizon screenshot](media/screenshot_horizon.png)

_Editing eDEX-UI source code with `nvim` on eDEX-UI 2.2 with the custom [`horizon-full`](https://github.com/GitSquared/horizon-edex-theme) theme_

## Q&amp;A
#### How do I get it?
Click on the little badges under the eDEX logo at the top of this page, or go to the [Releases](https://github.com/GitSquared/edex-ui/releases) tab, or download it through [one of the available repositories](https://repology.org/project/edex-ui/versions) (Homebrew, AUR...).

Public release binaries are unsigned ([why](https://gaby.dev/posts/code-signing)). On Linux, you will need to `chmod +x` the AppImage file in order to run it.
#### I have a problem!
Search through the [Issues](https://github.com/GitSquared/edex-ui/issues) to see if yours has already been reported. If you&#039;re confident it hasn&#039;t been reported yet, feel free to open up a new one. If you see your issue and it&#039;s been closed, it probably means that the fix for it will ship in the next version, and you&#039;ll have to wait a bit.
#### Can you disable the keyboard/the filesystem display?
You can&#039;t disable them (yet) but you can hide them. See the `tron-notype` theme.
#### Why is the file browser saying that &quot;Tracking Failed&quot;? (Windows only)
On Linux and macOS, eDEX tracks where you&#039;re going in your terminal tab to display the content of the current folder on-screen.
Sadly, this is technically impossible to do on Windows right now, so the file browser reverts back to a &quot;detached&quot; mode. You can still use it to browse files &amp; directories and click on files to input their path in the terminal.
#### Can this run on a Raspberry Pi / ARM device?
We provide prebuilt arm64 builds. For other platforms, see [this issue comment](https://github.com/GitSquared/edex-ui/issues/313#issuecomment-443465345), and the thread on issue [#818](https://github.com/GitSquared/edex-ui/issues/818).
#### Is this repo actively maintained?
No, after a 3 years run, this project has been archived. See the [announcement](https://github.com/GitSquared/edex-ui/releases/tag/v2.2.8).
#### How did you make this?
Glad you&#039;re interested! See [#272](https://github.com/GitSquared/edex-ui/issues/272).
#### This is so cool.
Thanks! If you feel like it, you can [follow me on Twitter](https://gaby.dev/twitter) to hear about new stuff I&#039;m making.

&lt;img width=&quot;220&quot; src=&quot;https://78.media.tumblr.com/35d4ef4447e0112f776b629bffd99188/tumblr_mk4gf8zvyC1s567uwo1_500.gif&quot; /&gt;


## Featured in...
- [Linux Uprising Blog](https://www.linuxuprising.com/2018/11/edex-ui-fully-functioning-sci-fi.html)
- [My post on r/unixporn](https://www.reddit.com/r/unixporn/comments/9ysbx7/oc_a_little_project_that_ive_been_working_on/)
- [Korben article (in french)](https://korben.info/une-interface-futuriste-pour-vos-ecrans-tactiles.html)
- [Hacker News](https://news.ycombinator.com/item?id=18509828)
- [This tweet that made me smile](https://twitter.com/mikemaccana/status/1065615451940667396)
- [BoingBoing article](https://boingboing.net/2018/11/23/simulacrum-sf.html) - Apparently i&#039;m a &quot;French hacker&quot;
- [OReilly 4 short links](https://www.oreilly.com/ideas/four-short-links-23-november-2018)
- [Hackaday](https://hackaday.com/2018/11/23/look-like-a-movie-hacker/)
- [Developpez.com (another french link)](https://www.developpez.com/actu/234808/Une-application-de-bureau-ressemble-a-une-interface-d-ordinateur-de-science-fiction-inspiree-des-effets-du-film-TRON-Legacy/)
- [GitHub Blog&#039;s Release Radar November 2018](https://blog.github.com/2018-12-21-release-radar-november-2018/)
- [opensource.com Productive Tools for 2019](https://opensource.com/article/19/1/productivity-tool-edex-ui)
- [O&#039;Reilly 4 short links (again)](https://www.oreilly.com/radar/four-short-links-7-july-2020/)
- [LinuxLinks](https://www.linuxlinks.com/linux-candy-edex-ui-sci-fi-computer-terminal-emulator-system-monitor/)
- [Linux For Everyone (Youtube)](https://www.youtube.com/watch?v=gbzqCAjm--g)
- [BestOfJS Rising Stars 2020](https://risingstars.js.org/2020/en#edex-ui)
- [The Geek Freaks (Youtube/German)](https://youtu.be/TSjMIeLG0Sk)
- [JSNation Open Source Awards 2021](https://osawards.com/javascript/#nominees) (Nominee - Fun Side Project of the Year)


## Useful commands for the nerds

**IMPORTANT NOTE:** the following instructions are meant for running eDEX from the latest unoptimized, unreleased, development version. If you&#039;d like to get stable software instead, refer to [these](#how-do-i-get-it) instructions.

#### Starting from source:
on *nix systems (You&#039;ll need the Xcode command line tools on macOS):
- clone the repository
- `npm run install-linux`
- `npm run start`

on Windows:
- start cmd or powershell **as administrator**
- clone the repository
- `npm run install-windows`
- `npm run start`

#### Building
Note: Due to native modules, you can only build targets for the host OS you are using.

- `npm install` (NOT `install-linux` or `install-windows`)
- `npm run build-linux` or `build-windows` or `build-darwin`

The script will minify the source code, recompile native dependencies and create distributable assets in the `dist` folder.

#### Getting the bleeding edge
If you&#039;re interested in running the latest in-development version but don&#039;t want to compile source code yourself, you can can get pre-built nightly binaries on [GitHub Actions](https://github.com/GitSquared/edex-ui/actions): click the latest commits, and download the artifacts bundle for your OS.

## Credits
eDEX-UI&#039;s source code was primarily written by me, [Squared](https://github.com/GitSquared). If you want to get in touch with me or find other projects I&#039;m involved in, check out [my website](https://gaby.dev).

[PixelyIon](https://github.com/PixelyIon) helped me get started with Windows compatibility and offered some precious advice when I started to work on this project seriously.

[IceWolf](https://soundcloud.com/iamicewolf) composed the sound effects on v2.1.x and above. He makes really cool stuff, check out his music!

## Thanks
Of course, eDEX would never have existed if I hadn&#039;t stumbled upon the amazing work of [Seena](https://github.com/seenaburns) on [r/unixporn](https://reddit.com/r/unixporn).

This project uses a bunch of open-source libraries, frameworks and tools, see [the full dependency graph](https://github.com/GitSquared/edex-ui/network/dependencies).

I want to namely thank the developers behind [xterm.js](https://github.com/xtermjs/xterm.js), [systeminformation](https://github.com/sebhildebrandt/systeminformation) and [SmoothieCharts](https://github.com/joewalnes/smoothie).

Huge thanks to [Rob &quot;Arscan&quot; Scanlon](https://github.com/arscan) for making the fantastic [ENCOM Globe](https://github.com/arscan/encom-globe), also inspired by the TRON: Legacy movie, and distributing it freely. His work really puts the icing on the cake.

## Licensing

Licensed under the [GPLv3.0](https://github.com/GitSquared/edex-ui/blob/master/LICENSE).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[is-a-dev/register]]></title>
            <link>https://github.com/is-a-dev/register</link>
            <guid>https://github.com/is-a-dev/register</guid>
            <pubDate>Tue, 01 Jul 2025 00:05:41 GMT</pubDate>
            <description><![CDATA[Grab your own sweet-looking '.is-a.dev' subdomain.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/is-a-dev/register">is-a-dev/register</a></h1>
            <p>Grab your own sweet-looking '.is-a.dev' subdomain.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,638</p>
            <p>Forks: 12,502</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
   &lt;img alt=&quot;is-a.dev Banner&quot; src=&quot;https://raw.githubusercontent.com/is-a-dev/register/main/media/banner.png&quot;&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
   &lt;img alt=&quot;Domains&quot; src=&quot;https://img.shields.io/github/directory-file-count/is-a-dev/register/domains?color=5c46eb&amp;label=domains&amp;style=for-the-badge&quot;&gt;
   &lt;img alt=&quot;Open Pull Requests&quot; src=&quot;https://img.shields.io/github/issues-raw/is-a-dev/register?color=5c46eb&amp;label=issues&amp;style=for-the-badge&quot;&gt;
   &lt;img alt=&quot;Open Issues&quot; src=&quot;https://img.shields.io/github/issues-pr-raw/is-a-dev/register?color=5c46eb&amp;label=pull%20requests&amp;style=for-the-badge&quot;&gt;
   &lt;br&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;is-a.dev&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;&lt;strong&gt;is-a.dev&lt;/strong&gt; is a service that allows developers to get a sweet-looking &lt;code&gt;.is-a.dev&lt;/code&gt; subdomain for their personal websites.&lt;/p&gt;

## Announcements &amp; Status Updates
Please join our [Discord server](https://discord.gg/is-a-dev-830872854677422150) for announcements, updates &amp; upgrades, and downtime notifications regarding the service.
Not all of these will be posted on GitHub[^1], however they will always be posted in our Discord server.

[^1]: We usually only post announcements on GitHub in the case of a serious incident. In that case, you&#039;ll likely see it at the top of this README file.

&lt;a href=&quot;https://discord.gg/is-a-dev-830872854677422150&quot;&gt;&lt;img alt=&quot;Discord Server&quot; src=&quot;https://invidget.wdh.app/is-a-dev-830872854677422150&quot;&gt;&lt;/a&gt;

# Register
&gt; If you want a visual guide, check out [this blog post](https://wdh.gg/tX3ghge).

- [Fork](https://github.com/is-a-dev/register/fork) this repository.
- [Read the documentation](https://docs.is-a.dev).
   - If you are applying for NS records please read [this](#ns-records).
- Your pull request will be reviewed and merged. *Keep an eye on it in case changes are needed!*
- After the pull request is merged, your DNS records should be published with-in a few minutes.
- Enjoy your new `.is-a.dev` subdomain! Please consider leaving us a star ⭐️ to help support us!

### NS Records
When applying for NS records, please be aware we already support a [wide range of DNS records](https://docs.is-a.dev/faq/#which-dns-record-types-are-supported), so likely do not not need them. 

In your PR, please explain why you need NS records, including examples, to help mitigate potential abuse. Refer to the [FAQ](https://docs.is-a.dev/faq/#who-can-use-ns-records) for guidelines on allowed usage.

***Pull requests adding NS records without sufficient reasoning will be closed.***

&gt; Also see: [Why are NS records restricted?](https://docs.is-a.dev/faq/#why-are-ns-records-restricted)?

## Report Abuse
If you find any subdomains being used for abusive purposes, please report them by [creating an issue](https://github.com/is-a-dev/register/issues/new?assignees=&amp;labels=report-abuse&amp;projects=&amp;template=report-abuse.md&amp;title=Report+abuse) with the relevant evidence.

---

We are proud to announce that we are supported by Cloudflare&#039;s [Project Alexandria](https://www.cloudflare.com/lp/project-alexandria) sponsorship program. We would not be able to operate without their help! 💖

&lt;a href=&quot;https://www.cloudflare.com&quot;&gt;
   &lt;img alt=&quot;Cloudflare Logo&quot; src=&quot;https://raw.githubusercontent.com/is-a-dev/register/main/media/cloudflare.png&quot; height=&quot;96&quot;&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[zloirock/core-js]]></title>
            <link>https://github.com/zloirock/core-js</link>
            <guid>https://github.com/zloirock/core-js</guid>
            <pubDate>Tue, 01 Jul 2025 00:05:40 GMT</pubDate>
            <description><![CDATA[Standard Library]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/zloirock/core-js">zloirock/core-js</a></h1>
            <p>Standard Library</p>
            <p>Language: JavaScript</p>
            <p>Stars: 25,091</p>
            <p>Forks: 1,683</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre>![logo](https://user-images.githubusercontent.com/2213682/146607186-8e13ddef-26a4-4ebf-befd-5aac9d77c090.png)

&lt;div align=&quot;center&quot;&gt;

[![fundraising](https://opencollective.com/core-js/all/badge.svg?label=fundraising)](https://opencollective.com/core-js) [![PRs welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://github.com/zloirock/core-js/blob/master/CONTRIBUTING.md) [![version](https://img.shields.io/npm/v/core-js.svg)](https://www.npmjs.com/package/core-js) [![core-js downloads](https://img.shields.io/npm/dm/core-js.svg?label=npm%20i%20core-js)](https://npm-stat.com/charts.html?package=core-js&amp;package=core-js-pure&amp;package=core-js-compat&amp;from=2014-11-18) [![core-js-pure downloads](https://img.shields.io/npm/dm/core-js-pure.svg?label=npm%20i%20core-js-pure)](https://npm-stat.com/charts.html?package=core-js&amp;package=core-js-pure&amp;package=core-js-compat&amp;from=2014-11-18) [![jsDelivr](https://data.jsdelivr.com/v1/package/npm/core-js-bundle/badge?style=rounded)](https://www.jsdelivr.com/package/npm/core-js-bundle)

&lt;/div&gt;

**I highly recommend reading this: [So, what&#039;s next?](https://github.com/zloirock/core-js/blob/master/docs/2023-02-14-so-whats-next.md)**
---

&gt; Modular standard library for JavaScript. Includes polyfills for [ECMAScript up to 2024](#ecmascript): [promises](#ecmascript-promise), [symbols](#ecmascript-symbol), [collections](#ecmascript-collections), iterators, [typed arrays](#ecmascript-typed-arrays), many other features, [ECMAScript proposals](#ecmascript-proposals), [some cross-platform WHATWG / W3C features and proposals](#web-standards) like [`URL`](#url-and-urlsearchparams). You can load only required features or use it without global namespace pollution.

**If you are looking for documentation for obsolete `core-js@2`, please, check [this branch](https://github.com/zloirock/core-js/tree/v2).**

## [core-js@3, babel and a look into the future](https://github.com/zloirock/core-js/tree/master/docs/2019-03-19-core-js-3-babel-and-a-look-into-the-future.md)

## Raising funds

`core-js` isn&#039;t backed by a company, so the future of this project depends on you. Become a sponsor or a backer if you are interested in `core-js`: [**Open Collective**](https://opencollective.com/core-js), [**Patreon**](https://patreon.com/zloirock), [**Boosty**](https://boosty.to/zloirock), **Bitcoin ( bc1qlea7544qtsmj2rayg0lthvza9fau63ux0fstcz )**, [**Alipay**](https://user-images.githubusercontent.com/2213682/219464783-c17ad329-17ce-4795-82a7-f609493345ed.png).

---

&lt;a href=&quot;https://opencollective.com/core-js/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/0/avatar.svg&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/1/avatar.svg&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/2/avatar.svg&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/3/avatar.svg&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/4/avatar.svg&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/5/avatar.svg&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/6/avatar.svg&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/7/avatar.svg&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/8/avatar.svg&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/9/avatar.svg&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/10/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/10/avatar.svg&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/11/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/11/avatar.svg&quot;&gt;&lt;/a&gt;

---

&lt;a href=&quot;https://opencollective.com/core-js#backers&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/backers.svg?width=890&quot;&gt;&lt;/a&gt;

---

[*Example of usage*](https://tinyurl.com/2mknex43):
```js
import &#039;core-js/actual&#039;;

Promise.resolve(42).then(it =&gt; console.log(it)); // =&gt; 42

Array.from(new Set([1, 2, 3]).union(new Set([3, 4, 5]))); // =&gt; [1, 2, 3, 4, 5]

[1, 2].flatMap(it =&gt; [it, it]); // =&gt; [1, 1, 2, 2]

(function * (i) { while (true) yield i++; })(1)
  .drop(1).take(5)
  .filter(it =&gt; it % 2)
  .map(it =&gt; it ** 2)
  .toArray(); // =&gt; [9, 25]

structuredClone(new Set([1, 2, 3])); // =&gt; new Set([1, 2, 3])
```

*You can load only required features*:
```js
import &#039;core-js/actual/promise&#039;;
import &#039;core-js/actual/set&#039;;
import &#039;core-js/actual/iterator&#039;;
import &#039;core-js/actual/array/from&#039;;
import &#039;core-js/actual/array/flat-map&#039;;
import &#039;core-js/actual/structured-clone&#039;;

Promise.resolve(42).then(it =&gt; console.log(it)); // =&gt; 42

Array.from(new Set([1, 2, 3]).union(new Set([3, 4, 5]))); // =&gt; [1, 2, 3, 4, 5]

[1, 2].flatMap(it =&gt; [it, it]); // =&gt; [1, 1, 2, 2]

(function * (i) { while (true) yield i++; })(1)
  .drop(1).take(5)
  .filter(it =&gt; it % 2)
  .map(it =&gt; it ** 2)
  .toArray(); // =&gt; [9, 25]

structuredClone(new Set([1, 2, 3])); // =&gt; new Set([1, 2, 3])
```

*Or use it without global namespace pollution*:
```js
import Promise from &#039;core-js-pure/actual/promise&#039;;
import Set from &#039;core-js-pure/actual/set&#039;;
import Iterator from &#039;core-js-pure/actual/iterator&#039;;
import from from &#039;core-js-pure/actual/array/from&#039;;
import flatMap from &#039;core-js-pure/actual/array/flat-map&#039;;
import structuredClone from &#039;core-js-pure/actual/structured-clone&#039;;

Promise.resolve(42).then(it =&gt; console.log(it)); // =&gt; 42

from(new Set([1, 2, 3]).union(new Set([3, 4, 5]))); // =&gt; [1, 2, 3, 4, 5]

flatMap([1, 2], it =&gt; [it, it]); // =&gt; [1, 1, 2, 2]

Iterator.from(function * (i) { while (true) yield i++; }(1))
  .drop(1).take(5)
  .filter(it =&gt; it % 2)
  .map(it =&gt; it ** 2)
  .toArray(); // =&gt; [9, 25]

structuredClone(new Set([1, 2, 3])); // =&gt; new Set([1, 2, 3])
```

### Index
- [Usage](#usage)
  - [Installation](#installation)
  - [`postinstall` message](#postinstall-message)
  - [CommonJS API](#commonjs-api)
  - [Babel](#babel)
    - [`@babel/polyfill`](#babelpolyfill)
    - [`@babel/preset-env`](#babelpreset-env)
    - [`@babel/runtime`](#babelruntime)
  - [swc](#swc)
  - [Configurable level of aggressiveness](#configurable-level-of-aggressiveness)
  - [Custom build](#custom-build)
- [Supported engines and compatibility data](#supported-engines-and-compatibility-data)
- [Features](#features)
  - [ECMAScript](#ecmascript)
    - [ECMAScript: Object](#ecmascript-object)
    - [ECMAScript: Function](#ecmascript-function)
    - [ECMAScript: Error](#ecmascript-error)
    - [ECMAScript: Array](#ecmascript-array)
    - [ECMAScript: Iterator](#ecmascript-iterator)
    - [ECMAScript: String and RegExp](#ecmascript-string-and-regexp)
    - [ECMAScript: Number](#ecmascript-number)
    - [ECMAScript: Math](#ecmascript-math)
    - [ECMAScript: Date](#ecmascript-date)
    - [ECMAScript: Promise](#ecmascript-promise)
    - [ECMAScript: Symbol](#ecmascript-symbol)
    - [ECMAScript: Collections](#ecmascript-collections)
    - [ECMAScript: Explicit Resource Management](#ecmascript-explicit-resource-management)
    - [ECMAScript: Typed Arrays](#ecmascript-typed-arrays)
    - [ECMAScript: Reflect](#ecmascript-reflect)
    - [ECMAScript: JSON](#ecmascript-json)
    - [ECMAScript: globalThis](#ecmascript-globalthis)
  - [ECMAScript proposals](#ecmascript-proposals)
    - [Finished proposals](#finished-proposals)
      - [`globalThis`](#globalthis)
      - [Relative indexing method](#relative-indexing-method)
      - [`Array.prototype.includes`](#arrayprototypeincludes)
      - [`Array.prototype.flat` / `Array.prototype.flatMap`](#arrayprototypeflat--arrayprototypeflatmap)
      - [`Array` find from last](#array-find-from-last)
      - [Change `Array` by copy](#change-array-by-copy)
      - [`Array` grouping](#array-grouping)
      - [`Array.fromAsync`](#arrayfromasync)
      - [`ArrayBuffer.prototype.transfer` and friends](#arraybufferprototypetransfer-and-friends)
      - [`Error.isError`](#erroriserror)
      - [Explicit Resource Management](#explicit-resource-management)
      - [`Float16` methods](#float16-methods)
      - [`Iterator` helpers](#iterator-helpers)
      - [`Object.values` / `Object.entries`](#objectvalues--objectentries)
      - [`Object.fromEntries`](#objectfromentries)
      - [`Object.getOwnPropertyDescriptors`](#objectgetownpropertydescriptors)
      - [Accessible `Object.prototype.hasOwnProperty`](#accessible-objectprototypehasownproperty)
      - [`String` padding](#string-padding)
      - [`String.prototype.matchAll`](#stringmatchall)
      - [`String.prototype.replaceAll`](#stringreplaceall)
      - [`String.prototype.trimStart` / `String.prototype.trimEnd`](#stringprototypetrimstart-stringprototypetrimend)
      - [`RegExp` `s` (`dotAll`) flag](#regexp-s-dotall-flag)
      - [`RegExp` named capture groups](#regexp-named-capture-groups)
      - [`RegExp` escaping](#regexp-escaping)
      - [`Promise.allSettled`](#promiseallsettled)
      - [`Promise.any`](#promiseany)
      - [`Promise.prototype.finally`](#promiseprototypefinally)
      - [`Promise.try`](#promisetry)
      - [`Promise.withResolvers`](#promisewithresolvers)
      - [`Symbol.asyncIterator` for asynchronous iteration](#symbolasynciterator-for-asynchronous-iteration)
      - [`Symbol.prototype.description`](#symbolprototypedescription)
      - [Well-formed `JSON.stringify`](#well-formed-jsonstringify)
      - [Well-formed unicode strings](#well-formed-unicode-strings)
      - [New `Set` methods](#new-set-methods)
    - [Stage 3 proposals](#stage-3-proposals)
      - [`JSON.parse` source text access](#jsonparse-source-text-access)
      - [`Uint8Array` to / from base64 and hex](#uint8array-to--from-base64-and-hex)
      - [`Math.sumPrecise`](#mathsumprecise)
      - [`Symbol.metadata` for decorators metadata proposal](#symbolmetadata-for-decorators-metadata-proposal)
    - [Stage 2.7 proposals](#stage-27-proposals)
      - [`Iterator` sequencing](#iterator-sequencing)
      - [Joint iteration](#joint-iteration)
      - [`Map` upsert](#map-upsert)
    - [Stage 2 proposals](#stage-2-proposals)
      - [`AsyncIterator` helpers](#asynciterator-helpers)
      - [`Iterator.range`](#iteratorrange)
      - [`Array.isTemplateObject`](#arrayistemplateobject)
      - [`Number.prototype.clamp`](#numberprototypeclamp)
      - [`String.dedent`](#stringdedent)
      - [`Symbol` predicates](#symbol-predicates)
      - [`Symbol.customMatcher` for extractors](#symbolcustommatcher-for-extractors)
      - [`Iterator` chunking](#iterator-chunking)
    - [Stage 1 proposals](#stage-1-proposals)
      - [`Observable`](#observable)
      - [New collections methods](#new-collections-methods)
      - [`.of` and `.from` methods on collection constructors](#of-and-from-methods-on-collection-constructors)
      - [`compositeKey` and `compositeSymbol`](#compositekey-and-compositesymbol)
      - [`Array` filtering](#array-filtering)
      - [`Array` deduplication](#array-deduplication)
      - [`DataView` get / set `Uint8Clamped` methods](#dataview-get-set-iint8clamped-methods)
      - [`Number.fromString`](#numberfromstring)
      - [`String.cooked`](#stringcooked)
      - [`String.prototype.codePoints`](#stringprototypecodepoints)
      - [`Symbol.customMatcher` for pattern matching](#symbolcustommatcher-for-pattern-matching)
    - [Stage 0 proposals](#stage-0-proposals)
      - [`Function.prototype.demethodize`](#functionprototypedemethodize)
      - [`Function.{ isCallable, isConstructor }`](#function-iscallable-isconstructor-)
    - [Pre-stage 0 proposals](#pre-stage-0-proposals)
      - [`Reflect` metadata](#reflect-metadata)
  - [Web standards](#web-standards)
    - [`self`](#self)
    - [`structuredClone`](#structuredclone)
    - [Base64 utility methods](#base64-utility-methods)
    - [`setTimeout` and `setInterval`](#settimeout-and-setinterval)
    - [`setImmediate`](#setimmediate)
    - [`queueMicrotask`](#queuemicrotask)
    - [`URL` and `URLSearchParams`](#url-and-urlsearchparams)
    - [`DOMException`](#domexception)
    - [iterable DOM collections](#iterable-dom-collections)
  - [Iteration helpers](#iteration-helpers)
- [Missing polyfills](#missing-polyfills)
- [Contributing](./CONTRIBUTING.md)
- [Security policy](https://github.com/zloirock/core-js/blob/master/SECURITY.md)
- [Changelog](./CHANGELOG.md)

## Usage[⬆](#index)
### Installation:[⬆](#index)
```sh
// global version
npm install --save core-js@3.43.0
// version without global namespace pollution
npm install --save core-js-pure@3.43.0
// bundled global version
npm install --save core-js-bundle@3.43.0
```

Or you can use `core-js` [from CDN](https://www.jsdelivr.com/package/npm/core-js-bundle).

### `postinstall` message[⬆](#index)
The `core-js` project needs your help, so the package shows a message about it after installation. If it causes problems for you, you can disable it:
```sh
ADBLOCK=true npm install
// or
DISABLE_OPENCOLLECTIVE=true npm install
// or
npm install --loglevel silent
```

### CommonJS API[⬆](#index)
You can import only-required-for-you polyfills, like in the examples at the top of `README.md`. Available CommonJS entry points for all polyfilled methods / constructors and namespaces. Just some examples:

```ts
// polyfill all `core-js` features, including early-stage proposals:
import &quot;core-js&quot;;
// or:
import &quot;core-js/full&quot;;
// polyfill all actual features - stable ES, web standards and stage 3 ES proposals:
import &quot;core-js/actual&quot;;
// polyfill only stable features - ES and web standards:
import &quot;core-js/stable&quot;;
// polyfill only stable ES features:
import &quot;core-js/es&quot;;

// if you want to polyfill `Set`:
// all `Set`-related features, with early-stage ES proposals:
import &quot;core-js/full/set&quot;;
// stable required for `Set` ES features, features from web standards and stage 3 ES proposals:
import &quot;core-js/actual/set&quot;;
// stable required for `Set` ES features and features from web standards
// (DOM collections iterator in this case):
import &quot;core-js/stable/set&quot;;
// only stable ES features required for `Set`:
import &quot;core-js/es/set&quot;;
// the same without global namespace pollution:
import Set from &quot;core-js-pure/full/set&quot;;
import Set from &quot;core-js-pure/actual/set&quot;;
import Set from &quot;core-js-pure/stable/set&quot;;
import Set from &quot;core-js-pure/es/set&quot;;

// if you want to polyfill just the required methods:
import &quot;core-js/full/set/intersection&quot;;
import &quot;core-js/actual/array/find-last&quot;;
import &quot;core-js/stable/queue-microtask&quot;;
import &quot;core-js/es/array/from&quot;;

// polyfill iterator helpers proposal:
import &quot;core-js/proposals/iterator-helpers&quot;;
// polyfill all stage 2+ proposals:
import &quot;core-js/stage/2&quot;;
```

&gt; [!TIP]
&gt; The usage of the `/actual/` namespace is recommended since it includes all actual JavaScript features and does not include unstable early-stage proposals that are available mainly for experiments.

&gt; [!WARNING]
&gt; - The `modules` path is an internal API, does not inject all required dependencies and can be changed in minor or patch releases. Use it only for a custom build and/or if you know what are you doing.
&gt; - If you use `core-js` with the extension of native objects, recommended to load all `core-js` modules at the top of the entry point of your application, otherwise, you can have conflicts.
&gt;   - For example, Google Maps use their own `Symbol.iterator`, conflicting with `Array.from`, `URLSearchParams` and / or something else from `core-js`, see [related issues](https://github.com/zloirock/core-js/search?q=Google+Maps&amp;type=Issues).
&gt;   - Such conflicts are also resolvable by discovering and manually adding each conflicting entry from `core-js`.
&gt; - `core-js` is extremely modular and uses a lot of very tiny modules, because of that for usage in browsers bundle up `core-js` instead of a usage loader for each file, otherwise, you will have hundreds of requests.

#### CommonJS and prototype methods without global namespace pollution[⬆](#index)
In the `pure` version, we can&#039;t pollute prototypes of native constructors. Because of that, prototype methods transformed into static methods like in examples above. But with transpilers, we can use one more trick - [bind operator and virtual methods](https://github.com/tc39/proposal-bind-operator). Special for that, available `/virtual/` entry points. Example:
```ts
import fill from &#039;core-js-pure/actual/array/virtual/fill&#039;;
import findIndex from &#039;core-js-pure/actual/array/virtual/find-index&#039;;

Array(10)::fill(0).map((a, b) =&gt; b * b)::findIndex(it =&gt; it &amp;&amp; !(it % 8)); // =&gt; 4
```

&gt; [!WARNING]
&gt; The bind operator is an early-stage ECMAScript proposal and usage of this syntax can be dangerous.

### Babel[⬆](#index)

`core-js` is integrated with `babel` and is the base for polyfilling-related `babel` features:

#### `@babel/polyfill`[⬆](#index)

[`@babel/polyfill`](https://babeljs.io/docs/usage/polyfill) [**IS** just the import of stable `core-js` features and `regenerator-runtime`](https://github.com/babel/babel/blob/c8bb4500326700e7dc68ce8c4b90b6482c48d82f/packages/babel-polyfill/src/index.js) for generators and async functions, so loading `@babel/polyfill` means loading the global version of `core-js` without ES proposals.

Now it&#039;s deprecated in favor of separate inclusion of required parts of `core-js` and `regenerator-runtime` and, for backward compatibility, `@babel/polyfill` is still based on `core-js@2`.

As a full equal of `@babel/polyfill`, you can use the following:
```js
import &#039;core-js/stable&#039;;
import &#039;regenerator-runtime/runtime&#039;;
```

#### `@babel/preset-env`[⬆](#index)

[`@babel/preset-env`](https://github.com/babel/babel/tree/master/packages/babel-preset-env) has `useBuiltIns` option, which optimizes the use of the global version of `core-js`. With `useBuiltIns` option, you should also set `corejs` option to the used version of `core-js`, like `corejs: &#039;3.43&#039;`.

&gt; [!IMPORTANT]
&gt; It is recommended to specify the used minor `core-js` version, like `corejs: &#039;3.43&#039;`, instead of `corejs: 3`, since with `corejs: 3` will not be injected modules which were added in minor `core-js` releases.

---

- `useBuiltIns: &#039;entry&#039;` replaces imports of `core-js` to import only required for a target environment modules. So, for example,
```js
import &#039;core-js/stable&#039;;
```
with `chrome 71` target will be replaced just to:
```js
import &#039;core-js/modules/es.array.unscopables.flat&#039;;
import &#039;core-js/modules/es.array.unscopables.flat-map&#039;;
import &#039;core-js/modules/es.object.from-entries&#039;;
import &#039;core-js/modules/web.immediate&#039;;
```
It works for all entry points of global version of `core-js` and their combinations, for example for
```js
import &#039;core-js/es&#039;;
import &#039;core-js/proposals/set-methods&#039;;
import &#039;core-js/full/set/map&#039;;
```
with `chrome 71` target you will have as the result:
```js
import &#039;core-js/modules/es.array.unscopables.flat&#039;;
import &#039;core-js/modules/es.array.unscopables.flat-map&#039;;
import &#039;core-js/modules/es.object.from-entries&#039;;
import &#039;core-js/modules/esnext.set.difference&#039;;
import &#039;core-js/modules/esnext.set.intersection&#039;;
import &#039;core-js/modules/esnext.set.is-disjoint-from&#039;;
import &#039;core-js/modules/esnext.set.is-subset-of&#039;;
import &#039;core-js/modules/esnext.set.is-superset-of&#039;;
import &#039;core-js/modules/esnext.set.map&#039;;
import &#039;core-js/modules/esnext.set.symmetric-difference&#039;;
import &#039;core-js/modules/esnext.set.union&#039;;
```

- `useBuiltIns: &#039;usage&#039;` adds to the top of each file import of polyfills for features used in thi

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[qist/tvbox]]></title>
            <link>https://github.com/qist/tvbox</link>
            <guid>https://github.com/qist/tvbox</guid>
            <pubDate>Tue, 01 Jul 2025 00:05:39 GMT</pubDate>
            <description><![CDATA[OK影视、tvbox配置文件，如果喜欢，请Fork自用。使用前请仔细阅读仓库说明，一旦使用将被视为你已了解。]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/qist/tvbox">qist/tvbox</a></h1>
            <p>OK影视、tvbox配置文件，如果喜欢，请Fork自用。使用前请仔细阅读仓库说明，一旦使用将被视为你已了解。</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,298</p>
            <p>Forks: 1,999</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>OK影视、TVBox、猫影视配置文件。所有资源均来自于各路大神无私分享，如有侵权，请联系删除。

所有以任何方式查看本仓库内容的人、或直接或间接使用本仓库内容的使用者都应仔细阅读此声明。本仓库管理者保留随时更改或补充此免责声明的权利。一旦使用、复制、修改了本仓库内容，则视为您已接受此免责声明。

本仓库管理者不能保证本仓库内容的合法性、准确性、完整性和有效性，请根据情况自行判断。本仓库内容，仅用于测试和学习研究，禁止用于商业用途，不得将其用于违反国家、地区、组织等的法律法规或相关规定的其他用途，禁止任何公众号、自媒体进行任何形式的转载、发布，请不要在中华人民共和国境内使用本仓库内容，否则后果自负。

本仓库内容中涉及的第三方硬件、软件等，与本仓库内容没有任何直接或间接的关系。本仓库内容仅对部署和使用过程进行客观描述，不代表支持使用任何第三方硬件、软件。使用任何第三方硬件、软件，所造成的一切后果由使用的个人或组织承担，与本仓库内容无关。

所有直接或间接使用本仓库内容的个人和组织，应 24 小时内完成学习和研究，并及时删除本仓库内容。如对本仓库内容的功能有需求，应自行开发相关功能。所有基于本仓库内容的源代码，进行的任何修改，为其他个人或组织的自发行为，与本仓库内容没有任何直接或间接的关系，所造成的一切后果亦与本仓库内容和本仓库管理者无关。

1. tvbox配置：

（1）0707.json  OK影视多线配置接口,仅适用于Fengmi影视；

（2）0821.json  大而全的配置，在饭太硬配置的基础上添加了若干优质点播源、直播线路和解析；

（3）0822.json  极简配置，OK大佬的jar，还包括几条路飞、俊于的源。

（4）0825.json  小而精的配置，jar包来源于Panda Groove的go包，其中泥巴、星星等，需要替换成自己的代理url；

（5）0826.json  完全来源于饭太硬的jar包和配置；

（6）0827.json  jar包和配置来源于fongmi；

（7）0828.json  jar包和配置来源于唐三；

（8）js.json  jar包来源于Panda Groove的go包，资源来源于道长drpy(js)仓库 添加 YouTube 直播；

（9）XBPQ.json  XBPQ源，jar包和配置来源于小米小爆脾气；

（10）XYQ.json  XYQ源，jar包和配置来源于香雅情；

（11）cat.json  cat源，资源来源于网络各路大佬。/cat/js配合猫影视可直接食用；

（12） jsm.json 来自js.json + 0826.json 合集 家庭电视可用 删除YouTube 直播，OK影视 可用 电视建议使用OK影视 https://github.com/FongMi/Release 支持多直播选择。
 

猫影视使用github 配置

 配置教程：&lt;https://omii.top/1296.html&gt;

`注意使用Gitee或Github导入，并设置为私有仓库，CatVodOpen仅支持私有仓库跟dav`

V1.1.3版本以上

`github://Token@github.com/xxxxx/tvbox/dist/index.js.md5`

改动

* quickjs改为nodejs，proxy设置修改
* 在ios上无法使用local，使用db替换local所有方法
* nodejs 的优势在于更加灵活

V1.1.2版本以下

`github://Token@gitee.com/xxxxx/tvbox/js/open_config.json`

1. APP推荐:

（1）OK影视版本  项目地址：&lt;https://github.com/FongMi/TV&gt; 支持直播多线路、自动换源、直播倍速，手机投屏；

（2）q215613905版本  项目地址：&lt;https://github.com/q215613905/TVBoxOS&gt; 支持直播回放；

（3）takagen99版本  项目地址：&lt;https://github.com/takagen99/Box&gt; 支持直播回放，界面美观；

（4）皮皮虾版本  发布频道：&lt;https://t.me/pipixiawerun&gt; 支持直播回放，支持弹幕；

（5）新版猫影视   项目地址：&lt;https://github.com/catvod/CatVodOpen&gt; 界面简洁，支持多平台。

（6）手机版本  项目地址：&lt;https://github.com/XiaoRanLiu3119/TVBoxOS-Mobile&gt; 竖屏

（7）q215613905 takagen99 编译apk 项目地址：https://github.com/o0HalfLife0o/TVBoxOSC

3. TVBox各路大佬配置（排名不分先后）：

（1）饭太硬：http://www.饭太硬.top/tv/

（2）okjack：https://jihulab.com/okcaptain/kko/raw/main/ok.txt

（3）王二小放牛娃：http://tvbox.王二小放牛娃.xyz

（4）摸鱼儿：http://我不是.摸鱼儿.top

（5）霜辉月明py：https://999740.xyz/raw.githubusercontent.com/lm317379829/PyramidStore/pyramid/py.json

（6）小米小爆脾气：http://xhww.fun/小米/DEMO.json

（7）南风：https://agit.ai/Yoursmile7/TVBox/raw/branch/master/XC.json

（8）神器：https://神器每日推送.tk/pz.json

（9）巧技：http://pandown.pro/tvbox/tvbox.json

（10）Ray：https://100km.top/0

（11）俊于：http://home.jundie.top:81/top98.json

（12）橘子柚：https://mirror.ghproxy.com/https://raw.githubusercontent.com/hackyjso/box/main/jzy.txt

（13）电视（自用）： &lt;https://github.moeyy.xyz/raw.githubusercontent.com/qist/tvbox/master/jsm.json&gt;

（14）github代理地址： `https://github.moeyy.xyz https://mirror.ghproxy.com/ https://gh-proxy.com https://ghproxy.net` 选择一个速度快使用

（15） 还可以使用域名: `https://qist.ugigc.dpdns.org/jsm.json` cloudflare Pages 构建
 
（16） 添加潇洒 接口： https://raw.githubusercontent.com/qist/tvbox/refs/heads/master/xiaosa/api.json 或者 https://qist.ugigc.dpdns.org/xiaosa/api.json

1. token.json格式说明：

模板文件json/tokentemplate.json

特别警告：据传阿里要求使用者不得使用多线程加速方式使用阿里云盘资源，若并发连接数超过10有可能导致被限制访问或封禁帐号的处理，所以下方线程限制设置超过10所需承担的风险请使用者自行斟酌。

特别警告2：迅雷云盘限制极为严格，不要尝试单token多用户异地使用，或多线程使用，随时可能封号。

可以透过配置中的“网盘及弹幕配置”的视频源来实现快捷方便的获取32位token及opentoken的功能。在“网盘及弹幕配置”中扫过任何一个OpenToken后，会自动激活“转存原画”功能

提示：如果遇到极速GO原画反复快速报错，不一定是被封号，可尝试杀掉播放器重启，或重启整个播放设备解决。

提示2：如果遇到“转存原画”速度被限制在2M左右，那麽请尝试在阿里云盘APP里退出登录，然后重新登录，然后删除播放设备SD卡的TV目


```json
{
&quot;token&quot;:&quot;这里填写阿里云盘的32位token,也可以不填写,在播放阿里云盘属性时会弹出窗口,点击QrCode,用阿里云盘app扫码&quot;,
&quot;open_token&quot;:&quot;这里填写通过alist或其他openapi提供方申请的280位aliyun openapi token,也可以不写,会自动隐藏转存原画&quot;,
&quot;thread_limit&quot;:32,//这里是阿里云盘的GO代理的并发协程数或java代理的并发线程数,若遇到账号被限制并发数,请将此数值改为10
&quot;is_vip&quot;:true,//是否是阿里云盘的VIP用户,设置为true后,使用vip_thread_limit设置的数值来并发加速。如本设置项目不是true,则自动隐藏&quot;转存原画&quot;
&quot;vip_thread_limit&quot;:10,//这里是阿里云盘的转存原画（OpenToken）并发线程数,若遇到账号被限制并发数,请将此数值改为10
&quot;quark_thread_limit&quot;:32,//这里是夸克网盘GO代理的并发协程数或java代理的并发线程数,若遇到账号被限制并发数,请将此数值改为10
&quot;quark_vip_thread_limit&quot;:16,//这里是夸克网盘设置quark_is_vip:true之后的并发线程数,若遇到账号被限制并发数,请将此数值改为10
&quot;quark_is_vip&quot;:false,//是否是夸克网盘的VIP用户,设置为true后,线程数受quark_vip_thread_limit控制
&quot;vod_flags&quot;:&quot;4k|4kz|auto&quot;,//这里是播放阿里云的画质选项,4k代表不转存原画（GO原画）,4kz代表转存原画,其他都代表预览画质,可选的预览画质包括qhd,fhd,hd,sd,ld,
&quot;quark_flags&quot;:&quot;4kz|auto&quot;,//这里是播放夸克网盘的画质选项,4kz代表转存原画（GO原画）,其他都代表转码画质,可选的预览画质包括4k,2k,super,high,low,normal
&quot;uc_thread_limit&quot;:0,
&quot;uc_is_vip&quot;:false,
&quot;uc_flags&quot;:&quot;4kz|auto&quot;,
&quot;uc_vip_thread_limit&quot;:0,
&quot;thunder_thread_limit&quot;:0,
&quot;thunder_is_vip&quot;:false,
&quot;thunder_vip_thread_limit&quot;:0,
&quot;thunder_flags&quot;:&quot;4k|4kz|auto&quot;,
&quot;aliproxy&quot;:&quot;这里填写外部的加速代理,用于在盒子性能不够的情况下,使用外部的加速代理来加速播放,可以不填写&quot;,
&quot;proxy&quot;:&quot;这里填写用于科学上网的地址,连接openapi或某些资源站可能会需要用到,可以不填写&quot;,
&quot;open_api_url&quot;:&quot;https://api.xhofe.top/alist/ali_open/token&quot;,//这是alist的openapi接口地址,也可使用其他openapi提供商的地址。
&quot;danmu&quot;:true,//是否全局开启阿里云盘所有csp的弹幕支持,聚合类CSP仍需单独设置,例如Wogg,Wobg
&quot;quark_danmu&quot;:true,//是否全局开启夸克网盘的所有csp的弹幕支持,聚合类CSP仍需单独设置,例如Wogg,Wobg
&quot;quark_cookie&quot;:&quot;这里填写通过https://pan.quark.cn网站获取到的cookie,会很长,全数填入即可。&quot;
&quot;uc_cookie&quot;:&quot;这里填写通过https://drive.uc.cn网站登录获取的cookie&quot;,
&quot;thunder_username&quot;:&quot;这里填入用户名或手机号,如果是手机号,记得是类似&#039;+86 139123457&#039;这样的格式,+86后有空格才对&quot;,
&quot;thunder_password&quot;:&quot;密码&quot;,
&quot;thunder_captchatoken&quot;:&quot;首次使用迅雷网盘时,需要使用app弹出的登陆地址去接码登录,并获取captchaToken,具体方法参考alist网站的文档:https://alist.nn.ci/zh/guide/drivers/thunder.html&quot;,
&quot;pikpak_username&quot;:&quot;PikPak网盘的用户名&quot;,
&quot;pikpak_password&quot;:&quot;PikPak网盘的密码&quot;,
&quot;pikpak_flags&quot;:&quot;4k|auto&quot;,
&quot;pikpak_thread_limit&quot;:2,
&quot;pikpak_vip_thread_limit&quot;:2,
&quot;pikpak_proxy&quot;:&quot;用于科学上网连接PikPak网盘的代理服务器地址&quot;
}
```

自用仓库，如果喜欢，请Fork自用，谢谢！

尽自己所能更新，不保证配置的有效性和时效性。
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[openwrt/luci]]></title>
            <link>https://github.com/openwrt/luci</link>
            <guid>https://github.com/openwrt/luci</guid>
            <pubDate>Tue, 01 Jul 2025 00:05:38 GMT</pubDate>
            <description><![CDATA[LuCI - OpenWrt Configuration Interface]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/openwrt/luci">openwrt/luci</a></h1>
            <p>LuCI - OpenWrt Configuration Interface</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,919</p>
            <p>Forks: 2,658</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre># OpenWrt luci feed

[![Translation status](https://hosted.weblate.org/widgets/openwrt/-/svg-badge.svg)](https://hosted.weblate.org/engage/openwrt/?utm_source=widget)

## Description

This is the OpenWrt &quot;luci&quot;-feed containing LuCI - OpenWrt Configuration Interface.

## Usage

This feed is enabled by default. Your feeds.conf.default (or feeds.conf) should contain a line like:
```
src-git luci https://github.com/openwrt/luci.git
```

To install all its package definitions, run:
```
./scripts/feeds update luci
./scripts/feeds install -a -p luci
```

## API Reference

You can browse the generated API documentation directly on Github.

 - [Server side Lua APIs](http://openwrt.github.io/luci/api/index.html)
 - [Client side JavaScript APIs](http://openwrt.github.io/luci/jsapi/index.html)

## Development

Documentation for developing and extending LuCI can be found [in the Wiki](https://github.com/openwrt/luci/wiki)

## License

See [LICENSE](LICENSE) file.
 
## Package Guidelines

See [CONTRIBUTING.md](CONTRIBUTING.md) file.

## Translation status

Use [Weblate](https://hosted.weblate.org/engage/openwrt/?utm_source=widget) instead of direct editing of the `*.po` files.

[![Translation status](https://hosted.weblate.org/widgets/openwrt/-/multi-auto.svg)](https://hosted.weblate.org/engage/openwrt/?utm_source=widget)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[nasa/openmct]]></title>
            <link>https://github.com/nasa/openmct</link>
            <guid>https://github.com/nasa/openmct</guid>
            <pubDate>Tue, 01 Jul 2025 00:05:37 GMT</pubDate>
            <description><![CDATA[A web based mission control framework.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nasa/openmct">nasa/openmct</a></h1>
            <p>A web based mission control framework.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 12,464</p>
            <p>Forks: 1,311</p>
            <p>Stars today: 1 star today</p>
            <h2>README</h2><pre># Open MCT [![license](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](http://www.apache.org/licenses/LICENSE-2.0) [![Language grade: JavaScript](https://img.shields.io/lgtm/grade/javascript/g/nasa/openmct.svg?logo=lgtm&amp;logoWidth=18)](https://lgtm.com/projects/g/nasa/openmct/context:javascript) [![codecov](https://codecov.io/gh/nasa/openmct/branch/master/graph/badge.svg?token=7DQIipp3ej)](https://codecov.io/gh/nasa/openmct) [![This project is using Percy.io for visual regression testing.](https://percy.io/static/images/percy-badge.svg)](https://percy.io/b2e34b17/openmct) [![npm version](https://img.shields.io/npm/v/openmct.svg)](https://www.npmjs.com/package/openmct) 

Open MCT (Open Mission Control Technologies) is a next-generation mission control framework for visualization of data on desktop and mobile devices. It is developed at NASA&#039;s Ames Research Center, and is being used by NASA for data analysis of spacecraft missions, as well as planning and operation of experimental rover systems. As a generalizable and open source framework, Open MCT could be used as the basis for building applications for planning, operation, and analysis of any systems producing telemetry data.

Please visit our [Official Site](https://nasa.github.io/openmct/) and [Getting Started Guide](https://nasa.github.io/openmct/getting-started/)

Once you&#039;ve created something amazing with Open MCT, showcase your work in our GitHub Discussions [Show and Tell](https://github.com/nasa/openmct/discussions/categories/show-and-tell) section. We love seeing unique and wonderful implementations of Open MCT!

## See Open MCT in Action

Try Open MCT now with our [live demo](https://openmct-demo.herokuapp.com/).
![Demo](https://nasa.github.io/openmct/static/res/images/Open-MCT.Browse.Layout.Mars-Weather-1.jpg)

## Open MCT v2.0.0
Support for our legacy bundle-based API, and the libraries that it was built on (like Angular 1.x), have now been removed entirely from this repository.

For now if you have an Open MCT application that makes use of the legacy API, [a plugin](https://github.com/nasa/openmct-legacy-plugin) is provided that bootstraps the legacy bundling mechanism and API. This plugin will not be maintained over the long term however, and the legacy support plugin will not be tested for compatibility with future versions of Open MCT. It is provided for convenience only.

### How do I know if I am using legacy API?
You might still be using legacy API if your source code

* Contains files named bundle.js, or bundle.json,
* Makes calls to `openmct.$injector()`, or `openmct.$angular`,
* Makes calls to `openmct.legacyRegistry`, `openmct.legacyExtension`, or `openmct.legacyBundle`.


### What should I do if I am using legacy API?
Please refer to [the modern Open MCT API](https://nasa.github.io/openmct/documentation/). Post any questions to the [Discussions section](https://github.com/nasa/openmct/discussions) of the Open MCT GitHub repository.

## Building and Running Open MCT Locally

Building and running Open MCT in your local dev environment is very easy. Be sure you have [Git](https://git-scm.com/downloads) and [Node.js](https://nodejs.org/) installed, then follow the directions below. Need additional information? Check out the [Getting Started](https://nasa.github.io/openmct/getting-started/) page on our website.
(These instructions assume you are installing as a non-root user; developers have [reported issues](https://github.com/nasa/openmct/issues/1151) running these steps with root privileges.)

1. Clone the source code

 `git clone https://github.com/nasa/openmct.git`

2. Install development dependencies. Note: Check the package.json engine for our tested and supported node versions.

 `npm install`

3. Run a local development server

 `npm start`

Open MCT is now running, and can be accessed by pointing a web browser at [http://localhost:8080/](http://localhost:8080/)

## Documentation

Documentation is available on the [Open MCT website](https://nasa.github.io/openmct/documentation/).

### Examples

The clearest examples for developing Open MCT plugins are in the
[tutorials](https://github.com/nasa/openmct-tutorial) provided in
our documentation.

We want Open MCT to be as easy to use, install, run, and develop for as
possible, and your feedback will help us get there! Feedback can be provided via [GitHub issues](https://github.com/nasa/openmct/issues/new/choose), [Starting a GitHub Discussion](https://github.com/nasa/openmct/discussions), or by emailing us at [arc-dl-openmct@mail.nasa.gov](mailto:arc-dl-openmct@mail.nasa.gov).

## Building Applications With Open MCT

Open MCT is built using [`npm`](http://npmjs.com/) and [`webpack`](https://webpack.js.org/).

See our documentation for a guide on [building Applications with Open MCT](https://github.com/nasa/openmct/blob/master/API.md#starting-an-open-mct-application).

## Compatibility

This is a fast moving project and we do our best to test and support the widest possible range of browsers, operating systems, and nodejs APIs. We have a published list of support available in our package.json&#039;s `browserslist` key.

If you encounter an issue with a particular browser, OS, or nodejs API, please file a [GitHub issue](https://github.com/nasa/openmct/issues/new/choose)

## Plugins

Open MCT can be extended via plugins that make calls to the Open MCT API. A plugin is a group 
of software components (including source code and resources such as images and HTML templates)
that is intended to be added or removed as a single unit.

As well as providing an extension mechanism, most of the core Open MCT codebase is also 
written as plugins.

For information on writing plugins, please see [our API documentation](https://github.com/nasa/openmct/blob/master/API.md#plugins).

## Tests

Tests are written for [Jasmine 3](https://jasmine.github.io/api/3.1/global)
and run by [Karma](http://karma-runner.github.io). To run:

`npm test`

The test suite is configured to load any scripts ending with `Spec.js` found
in the `src` hierarchy. Full configuration details are found in
`karma.conf.js`. By convention, unit test scripts should be located
alongside the units that they test; for example, `src/foo/Bar.js` would be
tested by `src/foo/BarSpec.js`. (For legacy reasons, some existing tests may
be located in separate `test` folders near the units they test, but the
naming convention is otherwise the same.)

### Test Reporting

When `npm test` is run, test results will be written as HTML to
`dist/reports/tests/`. Code coverage information is written to `dist/reports/coverage`.

Code Coverage Reports are available from [codecov.io](https://app.codecov.io/gh/nasa/openmct/)

# Glossary

Certain terms are used throughout Open MCT with consistent meanings
or conventions. Any deviations from the below are issues and should be
addressed (either by updating this glossary or changing code to reflect
correct usage.) Other developer documentation, particularly in-line
documentation, may presume an understanding of these terms.

* _plugin_: A plugin is a removable, reusable grouping of software elements.
  The application is composed of plugins.
* _composition_: In the context of a domain object, this refers to the set of
  other domain objects that compose or are contained by that object. A domain
  object&#039;s composition is the set of domain objects that should appear
  immediately beneath it in a tree hierarchy. A domain object&#039;s composition is
  described in its model as an array of id&#039;s; its composition capability
  provides a means to retrieve the actual domain object instances associated
  with these identifiers asynchronously.
* _description_: When used as an object property, this refers to the human-readable
  description of a thing; usually a single sentence or short paragraph.
  (Most often used in the context of extensions, domain
  object models, or other similar application-specific objects.)
* _domain object_: A meaningful object to the user; a distinct thing in
  the work support by Open MCT. Anything that appears in the left-hand
  tree is a domain object.
* _identifier_: A tuple consisting of a namespace and a key, which together uniquely
  identifies a domain object.
* _model_: The persistent state associated with a domain object. A domain
  object&#039;s model is a JavaScript object which can be converted to JSON
  without losing information (that is, it contains no methods.)
* _name_: When used as an object property, this refers to the human-readable
  name for a thing. (Most often used in the context of extensions, domain
  object models, or other similar application-specific objects.)
* _navigation_: Refers to the current state of the application with respect
  to the user&#039;s expressed interest in a specific domain object; e.g. when
  a user clicks on a domain object in the tree, they are _navigating_ to
  it, and it is thereafter considered the _navigated_ object (until the
  user makes another such choice.)
* _namespace_: A name used to identify a persistence store. A running open MCT 
application could potentially use multiple persistence stores, with the 
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[pot-app/pot-desktop]]></title>
            <link>https://github.com/pot-app/pot-desktop</link>
            <guid>https://github.com/pot-app/pot-desktop</guid>
            <pubDate>Tue, 01 Jul 2025 00:05:36 GMT</pubDate>
            <description><![CDATA[🌈一个跨平台的划词翻译和OCR软件 | A cross-platform software for text translation and recognition.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pot-app/pot-desktop">pot-app/pot-desktop</a></h1>
            <p>🌈一个跨平台的划词翻译和OCR软件 | A cross-platform software for text translation and recognition.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 13,391</p>
            <p>Forks: 616</p>
            <p>Stars today: 47 stars today</p>
            <h2>README</h2><pre>&lt;img width=&quot;200px&quot; src=&quot;public/icon.svg&quot; align=&quot;left&quot;/&gt;

# Pot (派了个萌的翻译器)

&gt; 🌈 一个跨平台的划词翻译软件 ([QQ 频道](https://pd.qq.com/s/akns94e1r))

![License](https://img.shields.io/github/license/pot-app/pot-desktop.svg)
![Tauri](https://img.shields.io/badge/Tauri-1.6.8-blue?logo=tauri)
![JavaScript](https://img.shields.io/badge/-JavaScript-yellow?logo=javascript&amp;logoColor=white)
![Rust](https://img.shields.io/badge/-Rust-orange?logo=rust&amp;logoColor=white)
![Windows](https://img.shields.io/badge/-Windows-blue?logo=windows&amp;logoColor=white)
![MacOS](https://img.shields.io/badge/-macOS-black?&amp;logo=apple&amp;logoColor=white)
![Linux](https://img.shields.io/badge/-Linux-yellow?logo=linux&amp;logoColor=white)

&lt;br/&gt;
&lt;hr/&gt;
&lt;div align=&quot;center&quot;&gt;

&lt;h3&gt;中文 | &lt;a href=&#039;./README_EN.md&#039;&gt;English&lt;/a&gt; | &lt;a href=&#039;./README_KR.md&#039;&gt; 한글 &lt;/a&gt;&lt;/h3&gt;

&lt;table&gt;
&lt;tr&gt;
    &lt;td&gt; &lt;img src=&quot;asset/1.png&quot;&gt;
    &lt;td&gt; &lt;img src=&quot;asset/2.png&quot;&gt;
    &lt;td&gt; &lt;img src=&quot;asset/3.png&quot;&gt;
&lt;/table&gt;

# 目录

&lt;/div&gt;

-   [使用说明](#使用说明)
-   [特色功能](#特色功能)
-   [支持接口](#支持接口)
-   [插件系统](#插件系统)
-   [安装指南](#安装指南)
-   [外部调用](#外部调用)
-   [Wayland 支持](#wayland-支持)
-   [国际化](#国际化weblate)
-   [贡献者](#贡献者)
-   [感谢](#感谢)

&lt;div align=&quot;center&quot;&gt;

# 使用说明

| 划词翻译                                             | 输入翻译                                                       | 外部调用                                                             |
| ---------------------------------------------------- | -------------------------------------------------------------- | -------------------------------------------------------------------- |
| 鼠标选中需要翻译的文本，按下设置的划词翻译快捷键即可 | 按下输入翻译快捷键呼出翻译窗口，输入待翻译文本后按下 回车 翻译 | 通过被其他软件调用实现更加方便高效的功能, 详见 [外部调用](#外部调用) |
| &lt;img src=&quot;asset/eg1.gif&quot;/&gt;                           | &lt;img src=&quot;asset/eg2.gif&quot;/&gt;                                     | &lt;img src=&quot;asset/eg3.gif&quot;/&gt;                                           |

| 剪切板监听模式                                                         | 截图 OCR                                          | 截图翻译                                         |
| ---------------------------------------------------------------------- | ------------------------------------------------- | ------------------------------------------------ |
| 在任意翻译面板上点击左上角图标启动剪切板监听默认，复制文字即可完成翻译 | 按下截图 OCR 快捷键后框选需要识别区域即可完成识别 | 按下截图翻译快捷键后框选需要识别区域即可完成翻译 |
| &lt;img src=&quot;asset/eg4.gif&quot;/&gt;                                             | &lt;img src=&quot;asset/eg5.gif&quot;/&gt;                        | &lt;img src=&quot;asset/eg6.gif&quot;/&gt;                       |

&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;

# 特色功能

&lt;/div&gt;

-   [x] 多接口并行翻译 ([支持接口](#支持接口))
-   [x] 多接口文字识别 ([支持接口](#支持接口))
-   [x] 多接口语音合成 ([支持接口](#支持接口))
-   [x] 导出到生词本 ([支持接口](#支持接口))
-   [x] 外部调用 ([详情](#外部调用))
-   [x] 支持插件系统 ([插件系统](#插件系统))
-   [x] 支持所有 PC 平台 (Windows, macOS, Linux)
-   [x] 支持 Wayland (在 KDE、Gnome 以及 Hyprland 上测试)
-   [x] 多语言支持

&lt;div align=&quot;center&quot;&gt;

# 支持接口

&lt;/div&gt;

## 翻译

-   [x] [OpenAI](https://platform.openai.com/)
-   [x] [智谱 AI](https://www.zhipuai.cn/)
-   [x] [Gemini Pro](https://gemini.google.com/)
-   [x] [Ollama](https://www.ollama.com/) (离线)
-   [x] [阿里翻译](https://www.aliyun.com/product/ai/alimt)
-   [x] [百度翻译](https://fanyi.baidu.com/)
-   [x] [彩云小译](https://fanyi.caiyunapp.com/)
-   [x] [腾讯翻译君](https://fanyi.qq.com/)
-   [x] [腾讯交互翻译](https://transmart.qq.com/)
-   [x] [火山翻译](https://translate.volcengine.com/)
-   [x] [小牛翻译](https://niutrans.com/)
-   [x] [Google](https://translate.google.com)
-   [x] [Bing](https://learn.microsoft.com/zh-cn/azure/cognitive-services/translator/)
-   [x] [Bing 词典](https://www.bing.com/dict)
-   [x] [DeepL](https://www.deepl.com/)
-   [x] [有道翻译](https://ai.youdao.com/)
-   [x] [剑桥词典](https://dictionary.cambridge.org/)
-   [x] [Yandex](https://translate.yandex.com/)
-   [x] [Lingva](https://github.com/TheDavidDelta/lingva-translate) ([插件](https://github.com/pot-app/pot-app-translate-plugin-template))
-   [x] [Tatoeba](https://tatoeba.org/) ([插件](https://github.com/pot-app/pot-app-translate-plugin-tatoeba))
-   [x] [ECDICT](https://github.com/skywind3000/ECDICT) ([插件](https://github.com/pot-app/pot-app-translate-plugin-ecdict))

更多接口支持见 [插件系统](#插件系统)

## 文字识别

-   [x] 系统 OCR (离线)
    -   [x] [Windows.Media.OCR](https://learn.microsoft.com/en-us/uwp/api/windows.media.ocr.ocrengine?view=winrt-22621) on Windows
    -   [x] [Apple Vision Framework](https://developer.apple.com/documentation/vision/recognizing_text_in_images) on MacOS
    -   [x] [Tesseract OCR](https://github.com/tesseract-ocr) on Linux
-   [x] [Tesseract.js](https://tesseract.projectnaptha.com/) (离线)
-   [x] [百度](https://ai.baidu.com/tech/ocr/general)
-   [x] [腾讯](https://cloud.tencent.com/product/ocr-catalog)
-   [x] [火山](https://www.volcengine.com/product/OCR)
-   [x] [迅飞](https://www.xfyun.cn/services/common-ocr)
-   [x] [腾讯图片翻译](https://cloud.tencent.com/document/product/551/17232)
-   [x] [百度图片翻译](https://fanyi-api.baidu.com/product/22)
-   [x] [Simple LaTeX](https://simpletex.cn/)
-   [x] [OCRSpace](https://ocr.space/) ([插件](https://github.com/pot-app/pot-app-recognize-plugin-template))
-   [x] [Rapid](https://github.com/RapidAI/RapidOcrOnnx) (离线 [插件](https://github.com/pot-app/pot-app-recognize-plugin-rapid))
-   [x] [Paddle](https://github.com/hiroi-sora/PaddleOCR-json) (离线 [插件](https://github.com/pot-app/pot-app-recognize-plugin-paddle))

更多接口支持见 [插件系统](#插件系统)

## 语音合成

-   [x] [Lingva](https://github.com/thedaviddelta/lingva-translate)

更多接口支持见 [插件系统](#插件系统)

## 生词本

-   [x] [Anki](https://apps.ankiweb.net/)
-   [x] [欧路词典](https://dict.eudic.net/)
-   [x] [有道](https://www.youdao.com/) ([插件](https://github.com/pot-app/pot-app-collection-plugin-youdao))
-   [x] [扇贝](https://web.shanbay.com/web/main) ([插件](https://github.com/pot-app/pot-app-collection-plugin-shanbay))

更多接口支持见 [插件系统](#插件系统)

&lt;div align=&quot;center&quot;&gt;

# 插件系统

&lt;/div&gt;

软件内置接口数量有限，但是您可以通过插件系统来扩展软件的功能。

## 插件安装

你可以在 [Plugin List](https://pot-app.com/plugin.html) 查找你需要的插件，然后前往插件仓库下载插件。

pot 插件的扩展名为 `.potext`, 下载得到`.potext`文件之后， 在 偏好设置-服务设置-添加外部插件-安装外部插件 选择对应的 `.potext` 即可安装成功，添加到服务列表中即可像内置服务一样正常使用了。

### 故障排除

-   找不到指定的模块 (Windows)

    出现类似这样的报错是因为系统缺少 C++库，前往[这里](https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist?view=msvc-170#visual-studio-2015-2017-2019-and-2022)安装即可解决问题。

-   不是有效的 Win32 应用程序 (Windows)

    出现类似这样的报错说明你没有下载对应系统或者架构的插件，前往插件仓库下载正确的插件即可解决问题。

## 插件开发

在 [Plugin List](https://pot-app.com/plugin.html) 中的 [模板](https://pot-app.com/plugin.html#%E6%A8%A1%E6%9D%BF) 章节提供了各种插件的开发模板，具体的开发文档请查看对应的模板仓库。

&lt;div align=&quot;center&quot;&gt;

# 安装指南

&lt;/div&gt;

## Windows

### 通过 Winget 安装

```powershell
winget install Pylogmon.pot
```

### 手动安装

1. 在 [Release](https://github.com/pot-app/pot-desktop/releases/latest) 页面下载最新 `exe` 安装包。

    - 64 位机器下载 `pot_{version}_x64-setup.exe`
    - 32 位机器下载 `pot_{version}_x86-setup.exe`
    - arm64 机器下载 `pot_{version}_arm64-setup.exe`

2. 双击安装包进行安装。

### 故障排除

-   启动后没有界面，点击托盘图标没有反应

    检查是否卸载/禁用了 WebView2，如果卸载/禁用了 WebView2，请手动安装 WebView2 或将其恢复。

    如果是企业版系统不方便安装或无法安装 WebView2，请尝试在 [Release](https://github.com/pot-app/pot-desktop/releases/latest) 下载内置 WebView2 的版本 `pot_{version}_{arch}_fix_webview2_runtime-setup.exe`

    若问题仍然存在请尝试使用 Windows7 兼容模式启动。

## MacOS

### 通过 Brew 安装

1. 添加我们的 tap:

```bash
brew tap pot-app/homebrew-tap
```

2. 安装 pot:

```bash
brew install --cask pot
```

3. 更新 pot

```bash
brew upgrade --cask pot
```

### 手动安装

1. 从 [Release](https://github.com/pot-app/pot-desktop/releases/latest) 页面下载最新的 `dmg` 安装包。（如果您使用的是 M1 芯片，请下载名为`pot_{version}_aarch64.dmg`的安装包，否则请下载名为`pot_{version}_x64.dmg`的安装包）
2. 双击下载的文件后将 pot 拖入 Applications 文件夹即可完成安装。

### 故障排除

-   由于开发者无法验证，“pot”无法打开。

    点击 取消 按钮，然后去 设置 -&gt; 隐私与安全性 页面，点击 仍要打开 按钮，然后在弹出窗口里点击 打开 按钮即可，以后打开 pot 就再也不会有任何弹窗告警了

    如果在 隐私与安全性 中找不到以上选项，或启动时提示文件损坏。打开 Terminal.app，并输入以下命令，然后重启 pot 即可：

    ```bash
    sudo xattr -d com.apple.quarantine /Applications/pot.app
    ```

-   如果每次打开时都遇到辅助功能权限提示，或者无法进行划词翻译，请前往设置 -&gt; 隐私与安全 -&gt; 辅助功能，移除 “pot”，并重新添加 “pot”。

## Linux

### Debian/Ubuntu

1. 从 [Release](https://github.com/pot-app/pot-desktop/releases/latest) 页面下载最新的对应架构的 `deb` 安装包。

2. 使用 `apt-get` 进行安装

    ```bash
    sudo apt-get install ./pot_{version}_amd64.deb
    ```

### Arch/Manjaro

&gt; [!WARNING]
&gt; 在最新版本的 [Webkit2Gtk](https://archlinux.org/packages/extra/x86_64/webkit2gtk) (2.42.0) 中，由于 Nvidia 专有驱动未完全实现 DMABUF，将导致无法启动和崩溃的情况发生。&lt;br&gt;
&gt; 请降级或在 `/etc/environment` （或者其他设置环境变量的地方）中加入 `WEBKIT_DISABLE_DMABUF_RENDERER=1` 环境变量关闭 DMABUF 的使用。

1. 在 [AUR](https://aur.archlinux.org/packages?O=0&amp;K=pot-translation) 查看

使用 `AUR helper` 安装：

```bash
yay -S pot-translation # 或 pot-translation-bin

# paru -S pot-translation # 或 pot-translation-bin
```

2. 如果你使用 `archlinuxcn` 源，可以直接使用 pacman 安装

```bash
sudo pacman -S pot-translation
```

### Flatpak

&gt; [!WARNING]
&gt; Flatpak 版本缺失托盘图标。

&lt;a href=&#039;https://flathub.org/apps/com.pot_app.pot&#039;&gt;
    &lt;img width=&#039;240&#039; alt=&#039;Download on Flathub&#039; src=&#039;https://flathub.org/api/badge?locale=zh-Hans&#039;/&gt;
&lt;/a&gt;

&lt;div align=&quot;center&quot;&gt;

# 外部调用

&lt;/div&gt;

Pot 提供了完整的 HTTP 接口，以便可以被其他软件调用。您可以通过向 `127.0.0.1:port` 发送 HTTP 请求来调用 pot，其中的`port`是 pot 监听的端口号，默认为`60828`,可以在软件设置中进行更改。

## API 文档:

```bash
POST &quot;/&quot; =&gt; 翻译指定文本(body为需要翻译的文本),
GET &quot;/config&quot; =&gt; 打开设置,
POST &quot;/translate&quot; =&gt; 翻译指定文本(同&quot;/&quot;),
GET &quot;/selection_translate&quot; =&gt; 划词翻译,
GET &quot;/input_translate&quot; =&gt; 输入翻译,
GET &quot;/ocr_recognize&quot; =&gt; 截图OCR,
GET &quot;/ocr_translate&quot; =&gt; 截图翻译,
GET &quot;/ocr_recognize?screenshot=false&quot; =&gt; 截图OCR(不使用软件内截图),
GET &quot;/ocr_translate?screenshot=false&quot; =&gt; 截图翻译(不使用软件内截图),
GET &quot;/ocr_recognize?screenshot=true&quot; =&gt; 截图OCR,
GET &quot;/ocr_translate?screenshot=true&quot; =&gt; 截图翻译,
```

## 示例：

-   调用划词翻译：

    如果想要调用 pot 划词翻译，只需向`127.0.0.1:port`发送请求即可。

    例如通过 curl 发送请求：

    ```bash
    curl &quot;127.0.0.1:60828/selection_translate&quot;
    ```

## 不使用软件内截图

这一功能可以让您在不使用软件内截图的情况下调用截图 OCR/截图翻译功能，这样您就可以使用您喜欢的截图工具来截图了，也可以解决在某些平台下 pot 自带的截图无法使用的问题。

### 调用流程

1. 使用其他截图工具截图
2. 将截图保存在 `$CACHE/com.pot-app.desktop/pot_screenshot_cut.png`
3. 向`127.0.0.1:port/ocr_recognize?screenshot=false`发送请求即可调用成功

&gt; `$CACHE`为系统缓存目录，例如在 Windows 上为`C:\Users\{用户名}\AppData\Local\com.pot-app.desktop\pot_screenshot_cut.png`

### 示例

在 Linux 下调用 Flameshot 进行截图 OCR:

```bash
rm ~/.cache/com.pot-app.desktop/pot_screenshot_cut.png &amp;&amp; flameshot gui -s -p ~/.cache/com.pot-app.desktop/pot_screenshot_cut.png &amp;&amp; curl &quot;127.0.0.1:60828/ocr_recognize?screenshot=false&quot;
```

## 现有用法 (快捷划词翻译)

### SnipDo (Windows)

1. 从 [Microsoft Store](https://apps.microsoft.com/store/detail/snipdo/9NPZ2TVKJVT7) 下载安装 SnipDo。
2. 从 [Release](https://github.com/pot-app/pot-desktop/releases/latest) 下载 pot 的 SnipDo 扩展 (pot.pbar)
3. 双击下载的扩展文件完成安装。
4. 选中文字，可以看到弹出的 SnipDo 工具条，点击翻译按钮即可翻译。

### PopClip (MacOS)

1. 从 [App Store](https://apps.apple.com/us/app/popclip/id445189367?mt=12) 下载安装 PopClip
2. 从 [Release](https://github.com/pot-app/pot-desktop/releases/latest) 下载 pot 的 PopClip 扩展 (pot.popclipextz)
3. 双击下载的扩展文件完成安装。
4. 在 PopClip 的扩展中启用 pot 扩展，选中文本即可点击翻译。

### Starry (Linux)

&gt; Starry 目前仍处于开发阶段，因此您只能手动编译它。

Github: [ccslykx/Starry](https://github.com/ccslykx/Starry)

&lt;div align=&quot;center&quot;&gt;

# Wayland 支持

&lt;/div&gt;

由于各大发行版对于 Wayland 的支持程度不同，所以 pot 本身没法做到特别完美的支持，这里可以提供一些常见问题的解决方案，通过合理的设置之后，pot 也可以在 Wayland 下完美运行。

## 快捷键无法使用

由于 Tauri 的快捷键方案并没有支持 Wayland，所以 pot 应用内的快捷键设置在 Wayland 下无法使用。 您可以设置系统快捷用 curl 发送请求来触发 pot，详见[外部调用](#外部调用)

## 截图无法使用

在一些纯 Wayland 桌面环境/窗口管理器(如 Hyprland)上，pot 内置的截图无法使用，这时可以通过使用其他截图工具代替，详见 [不使用软件内截图](#不使用软件内截图)

下面给出在 Hyprland 下的配置示例(通过 grim 和 slurp 实现截图)：

```conf
bind = ALT, X, exec, grim -g &quot;$(slurp)&quot; ~/.cache/com.pot-app.desktop/pot_screenshot_cut.png &amp;&amp; curl &quot;127.0.0.1:60828/ocr_recognize?screenshot=false&quot;
bind = ALT, C, exec, grim -g &quot;$(slurp)&quot; ~/.cache/com.pot-app.desktop/pot_screenshot_cut.png &amp;&amp; curl &quot;127.0.0.1:60828/ocr_translate?screenshot=false&quot;
```

其他桌面环境/窗口管理器也是类似的操作

## 划词翻译窗口跟随鼠标位置

由于目前 pot 在 Wayland 下还无法获取到正确的鼠标坐标，所以内部的实现无法工作。 对于某些桌面环境/窗口管理器，可以通过设置窗口规则来实现窗口跟随鼠标位置，这里以 Hyprland 为例：

```conf
windowrulev2 = float, class:(pot), title:(Translator|OCR|PopClip|Screenshot Translate) # Translation window floating
windowrulev2 = move cursor 0 0, class:(pot), title:(Translator|PopClip|Screenshot Translate) # Translation window follows the mouse position.
```

&lt;div align=&quot;center&quot;&gt;

# 国际化([Weblate](https://hosted.weblate.org/engage/pot-app/))

[![](https://hosted.weblate.org/widget/pot-app/pot-desktop/svg-badge.svg)](https://hosted.weblate.org/engage/pot-app/)

[![](https://hosted.weblate.org/widget/pot-app/pot-desktop/zh_Hans/multi-auto.svg)](https://hosted.weblate.org/engage/pot-app/)

&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;

# 贡献者

&lt;/div&gt;

&lt;img src=&quot;https://github.com/pot-app/.github/blob/master/pot-desktop-contributions.svg?raw=true&quot; width=&quot;100%&quot;/&gt;

## 手动编译

### 环境要求

Node.js &gt;= 18.0.0

pnpm &gt;= 8.5.0

Rust &gt;= 1.80.0

### 开始编译

1. Clone 仓库

    ```bash
    git clone https://github.com/pot-app/pot-desktop.git
    ```

2. 安装依赖

    ```bash
    cd pot-desktop
    pnpm install
    ```

3. 安装依赖(仅 Linux 需要)

    ```bash
    sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev patchelf libxdo-dev libxcb1 libxrandr2 libdbus-1-3
    ```

4. 开发调试

    ```bash
    pnpm tauri dev # Run the app in development mode
    ```

5. 打包构建
    ```bash
    pnpm tauri build # Build into installation package
    ```

&lt;div align=&quot;center&quot;&gt;

# 感谢

&lt;/div&gt;

-   [Bob](https://github.com/ripperhe/Bob) 灵感来源
-   [bob-plugin-openai-translator](https://github.com/yetone/bob-plugin-openai-translator) OpenAI 接口参考
-   [@uiYzzi](https://github.com/uiYzzi) 实现思路
-   [@Lichenkass](https://github.com/Lichenkass) 维护 Deepin 应用商店中的 pot
-   [Tauri](https://github.com/tauri-apps/tauri) 好用的 GUI 框架

&lt;div align=&quot;center&quot;&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[schlagmichdoch/PairDrop]]></title>
            <link>https://github.com/schlagmichdoch/PairDrop</link>
            <guid>https://github.com/schlagmichdoch/PairDrop</guid>
            <pubDate>Tue, 01 Jul 2025 00:05:35 GMT</pubDate>
            <description><![CDATA[PairDrop: Transfer Files Cross-Platform. No Setup, No Signup.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/schlagmichdoch/PairDrop">schlagmichdoch/PairDrop</a></h1>
            <p>PairDrop: Transfer Files Cross-Platform. No Setup, No Signup.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 7,831</p>
            <p>Forks: 449</p>
            <p>Stars today: 44 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/schlagmichdoch/PairDrop&quot;&gt;
    &lt;img src=&quot;public/images/android-chrome-512x512.png&quot; alt=&quot;Logo&quot;  width=&quot;150&quot; height=&quot;150&quot;&gt;
  &lt;/a&gt;
 
  # _Send it_, with [PairDrop](https://pairdrop.net)

  &lt;p&gt;
    Local file sharing &lt;a href=&quot;https://pairdrop.net&quot;&gt;&lt;strong&gt;in your web browser&lt;/strong&gt;&lt;/a&gt;. 
    &lt;br&gt;
    Inspired by Apple&#039;s AirDrop.
    &lt;br&gt; 
    Fork of Snapdrop.
    &lt;br&gt;
    &lt;br&gt;
    &lt;a href=&quot;https://github.com/schlagmichdoch/PairDrop/issues&quot;&gt;Report a bug&lt;/a&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://github.com/schlagmichdoch/PairDrop/issues&quot;&gt;Request feature&lt;/a&gt;
  &lt;/p&gt;
&lt;/div&gt;
&lt;br&gt;

## Features
File sharing on your local network that works on all platforms.

- A multi-platform AirDrop-like solution that works.
  - Send images, documents or text via peer-to-peer connection to devices on the same local network.
- Internet transfers
  - Join temporary public rooms to transfer files easily over the Internet.
- Web-app 
  - Works on all devices with a modern web-browser.
 
Send a file from your phone to your laptop?
&lt;br&gt;Share photos in original quality with friends using Android and iOS?
&lt;br&gt;Share private files peer-to-peer between Linux systems?

&lt;img src=&quot;docs/pairdrop_screenshot_mobile.gif&quot; alt=&quot;Screenshot GIF showing PairDrop in use&quot; style=&quot;width: 300px&quot;&gt;

## Differences to the [Snapdrop](https://github.com/RobinLinus/snapdrop) it is based on
&lt;details&gt;&lt;summary&gt;View all differences&lt;/summary&gt;

### Paired Devices and Public Rooms — Internet Transfer
* Transfer files over the Internet between paired devices or by entering temporary public rooms.
* Connect to devices in complex network environments (public Wi-Fi, company network, iCloud Private Relay, VPN, etc.).
* Connect to devices on your mobile hotspot.
* Devices outside of your local network that are behind a NAT are auto-connected via the PairDrop TURN server.
* Devices from the local network, in the same public room, or previously paired are shown.

#### Persistent Device Pairing

Always connect to known devices

* Pair devices via a 6-digit code or a QR-Code.
* Paired devices always find each other via shared secrets independently of their local network. 
* Pairing is persistent. You find your devices even after reopening PairDrop.
* You can edit and unpair devices easily.

#### Temporary Public Rooms

Connect to others in complex network situations, or over the Internet.

* Enter a public room via a 5-letter code or a QR-code.
* Enter a public room to temporarily connect to devices outside your local network.
* All devices in the same public room see each other.
* Public rooms are temporary. Closing PairDrop  leaves all rooms.

### [Improved UI for Sending/Receiving Files](https://github.com/RobinLinus/snapdrop/issues/560)
* Files are transferred after a request is accepted. Files are auto-downloaded upon completing a transfer, if possible.
* Multiple files are downloaded as a ZIP file
* Download, share or save to gallery via the &quot;Share&quot; menu on Android and iOS.
* Multiple files are transferred at once with an overall progress indicator.

### Send Files or Text Directly From Share Menu, Context Menu or CLI
* [Send files directly from context menu on Ubuntu (using Nautilus)](docs/how-to.md#send-multiple-files-and-directories-directly-from-context-menu-on-ubuntu-using-nautilus)
* [Send files directly from the context menu on Windows](docs/how-to.md#send-files-directly-from-context-menu-on-windows)
* [Send directly from the &quot;Share&quot; menu on iOS](docs/how-to.md#send-directly-from-share-menu-on-ios)
* [Send directly from the &quot;Share&quot; menu on Android](docs/how-to.md#send-directly-from-share-menu-on-android)
* [Send directly via the command-line interface](docs/how-to.md#send-directly-via-command-line-interface)

### Other Changes
* Change your display name to easily differentiate your devices.
* [Paste files/text and choose the recipient afterwards ](https://github.com/RobinLinus/snapdrop/pull/534)
* [Prevent devices from sleeping on file transfer](https://github.com/RobinLinus/snapdrop/pull/413)
* Warn user before PairDrop is closed on file transfer
* Open PairDrop on multiple tabs simultaneously (Thanks [@willstott101](https://github.com/willstott101))
* [Video and audio preview](https://github.com/RobinLinus/snapdrop/pull/455) (Thanks [@victorwads](https://github.com/victorwads))
* Switch theme back to auto/system after dark or light mode is on
* Node-only implementation (Thanks [@Bellisario](https://github.com/Bellisario))
* Auto-restart on error (Thanks [@KaKi87](https://github.com/KaKi87))
* Lots of stability fixes (Thanks [@MWY001](https://github.com/MWY001) [@skiby7](https://github.com/skiby7) and [@willstott101](https://github.com/willstott101))
* To host PairDrop on your local network (e.g. on Raspberry Pi): [All peers connected with private IPs are discoverable by each other](https://github.com/RobinLinus/snapdrop/pull/558)
* When hosting PairDrop yourself, you can [set your own STUN/TURN servers](docs/host-your-own.md#specify-stunturn-servers)
* Translations.

&lt;/details&gt;

## Translate PairDrop on [Hosted Weblate](https://hosted.weblate.org/engage/pairdrop/)
&lt;a href=&quot;https://hosted.weblate.org/engage/pairdrop/&quot;&gt;
&lt;img src=&quot;https://hosted.weblate.org/widget/pairdrop/horizontal-blue.svg&quot; alt=&quot;Translation status&quot; style=&quot;width: 300px&quot; /&gt;
&lt;/a&gt;

## Built with the following awesome technologies:
* Vanilla HTML5 / JS ES6 / CSS 3 frontend
* [WebRTC](http://webrtc.org/) / WebSockets
* [Node.js](https://nodejs.org/en/) backend
* [Progressive web app (PWA)](https://en.wikipedia.org/wiki/Progressive_web_app) unified functionality
* [IndexedDB API](https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API) storage handling
* [zip.js](https://gildas-lormeau.github.io/zip.js/) library
* [cyrb53](https://github.com/bryc/code/blob/master/jshash/experimental/cyrb53.js) super-fast hash function
* [NoSleep](https://github.com/richtr/NoSleep.js) display sleep, add wake lock ([MIT](licenses/MIT-NoSleep))
* [heic2any](https://github.com/alexcorvi/heic2any) HEIC/HEIF to PNG/GIF/JPEG ([MIT](licenses/MIT-heic2any))
* [Weblate](https://weblate.org/) web-based localization tool
* [BrowserStack](https://www.browserstack.com/) This project is tested with BrowserStack

[FAQ](docs/faq.md)

[Host your own instance with Docker or Node.js](docs/host-your-own.md).

## Support
&lt;a href=&quot;https://www.buymeacoffee.com/pairdrop&quot; target=&quot;_blank&quot;&gt;
&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/v2/default-blue.png&quot; alt=&quot;Buy me a coffee&quot; style=&quot;height: 60px !important;width: 217px !important;&quot; &gt;
&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;

PairDrop is libre, and always will be. \
If you find it useful and want to support free and open-source software, please consider donating using the button above. \
I footed the bill for the domain and the server, and you can help create and maintain great software by supporting me. \
Thank you very much for your contribution!

## Contributing
Feel free to [open an issue](https://github.com/schlagmichdoch/pairdrop/issues/new/choose) or a
[pull request](https://github.com/schlagmichdoch/pairdrop/pulls), following the
[Contributing Guidelines](CONTRIBUTING.md).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[agalwood/Motrix]]></title>
            <link>https://github.com/agalwood/Motrix</link>
            <guid>https://github.com/agalwood/Motrix</guid>
            <pubDate>Tue, 01 Jul 2025 00:05:34 GMT</pubDate>
            <description><![CDATA[A full-featured download manager.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/agalwood/Motrix">agalwood/Motrix</a></h1>
            <p>A full-featured download manager.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 48,257</p>
            <p>Forks: 4,674</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre># Motrix

&lt;p&gt;
  &lt;a href=&quot;https://motrix.app&quot;&gt;
    &lt;img src=&quot;./static/512x512.png&quot; width=&quot;256&quot; alt=&quot;Motrix App Icon&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

## A full-featured download manager

[![GitHub release](https://img.shields.io/github/v/release/agalwood/Motrix.svg)](https://github.com/agalwood/Motrix/releases) ![Build/release](https://github.com/agalwood/Motrix/workflows/Build/release/badge.svg) ![Total Downloads](https://img.shields.io/github/downloads/agalwood/Motrix/total.svg) ![Support Platforms](https://camo.githubusercontent.com/a50c47295f350646d08f2e1ccd797ceca3840e52/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d6d61634f5325323025374325323057696e646f77732532302537432532304c696e75782d6c69676874677265792e737667)

English | [简体中文](./README-CN.md)

Motrix is a full-featured download manager that supports downloading HTTP, FTP, BitTorrent, Magnet, etc.

Motrix has a clean and easy to use interface. I hope you will like it 👻.

✈️ [Official Website](https://motrix.app) | 📖 [Manual](https://github.com/agalwood/Motrix/wiki)

## 💽 Installation

Download from [GitHub Releases](https://github.com/agalwood/Motrix/releases) and install it.

### Windows

It is recommended to install Motrix using the installation package (Motrix-Setup-x.y.z.exe) to ensure a complete experience, such as associating torrent files, capturing magnet links, etc.

If you use package management tools to manage applications on Windows, such as [Chocolatey](https://chocolatey.org), [scoop](https://github.com/lukesampson/scoop). You can use them to install Motrix.

#### Chocolatey
Thanks to [@Yato](https://github.com/iYato) for continuing to maintain the [Motrix Chocolatey](https://community.chocolatey.org/packages/motrix) package. To install motrix, run the following command from the `command line` or from `PowerShell`:

```bash
# Install
choco install motrix

# Upgrade
choco upgrade motrix
```

#### scoop
If you prefer the portable version, you can use [scoop](https://github.com/lukesampson/scoop) (need Windows 7+) to install Motrix.

```bash
scoop bucket add extras
scoop install motrix
```

### macOS

The macOS users can install Motrix using `brew`, thanks to [PR](https://github.com/Homebrew/homebrew-cask/pull/59494) of [@Mitscherlich](https://github.com/Mitscherlich).

```bash
brew update &amp;&amp; brew install motrix
```

#### Auto Update

Since Motrix v1.8.0 and later versions changed the App BundleID ( `net.agalwood.Motrix` =&gt; `app.motrix.native` ), the automatic update of Motrix v1.6.11 will fail. [Motrix Install Assistant](https://github.com/motrixapp/motrix-install-assistant) will help you install the latest Motrix application.

&lt;p&gt;
  &lt;a href=&quot;https://github.com/motrixapp/motrix-install-assistant&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/motrixapp/motrix-install-assistant/main/build/256x256.png&quot; width=&quot;192&quot; alt=&quot;Motrix Install Assistant Icon&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

### Linux

You can download the `AppImage` (for all Linux distributions) or `snap` to install Motrix, see [GitHub/release](https://github.com/agalwood/Motrix/releases) for more Linux installation package formats.

Motrix may need to run with `sudo` for the first time in Linux because there is no permission to create the download session file (`/var/cache/aria2.session`).

If you want to build from source code, please read the **Build** section.

#### AppImage
The latest version of Motrix AppImage requires you to manually perform desktop integration. Please check the documentation of [AppImageLauncher](https://github.com/TheAssassin/AppImageLauncher) .

&gt; Desktop Integration
&gt; Since electron-builder 21 desktop integration is not a part of produced AppImage file.
&gt; [AppImageLauncher](https://github.com/TheAssassin/AppImageLauncher) is the recommended way to integrate AppImages.

Deepin 20 Beta users failed to install Motrix, please follow the steps below:

Open the `Terminal`, paste and run the following command to install Motrix again.

```bash
sudo apt --fix-broken install
```

#### Snap
Motrix has been listed on [Snapcraft](https://snapcraft.io/motrix) , Ubuntu users recommend downloading from the Snap Store.

Tips for v1.5.10

The tray may not display the indicator normally, which makes it inconvenient to exit the application.

Please unchecked Preferences--Basic Settings--Hide App Menu (Windows &amp; Linux Only), click Save &amp; Apply. Then click &quot;Exit&quot; in the File menu to exit the application.

Please update to v1.5.12 and above, you can use the keyboard shortcut &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;q&lt;/kbd&gt; to quickly exit the application.

#### AUR
For Arch Linux users, Motrix is available in [aur](https://aur.archlinux.org/packages/motrix/), thanks to the maintainer [@weearc](https://github.com/weearc).

Run the following command to install:

```bash
yay -S motrix
```

#### Flatpak
Thanks to the [PR](https://github.com/flathub/flathub/pull/2334) of [@proletarius101](https://github.com/proletarius101), Motrix has been listed [Flathub](https://flathub.org/apps/details/net.agalwood.Motrix), Linux users who like the Flatpak can try it.

```bash
# Install
flatpak install flathub net.agalwood.Motrix

# Run
flatpak run net.agalwood.Motrix
```

## ✨ Features

- 🕹 Simple and clear user interface
- 🦄 Supports BitTorrent &amp; Magnet
- ☑️ BitTorrent selective download
- 📡 Update tracker list every day automatically
- 🔌 UPnP &amp; NAT-PMP Port Mapping
- 🎛 Up to 10 concurrent download tasks
- 🚀 Supports 64 threads in a single task
- 🚥 Supports speed limit
- 🕶 Mock User-Agent
- 🔔 Download completed Notification
- 💻 Ready for Touch Bar (Mac only)
- 🤖 Resident system tray for quick operation
- 📟 Tray speed meter displays real-time speed (Mac only)
- 🌑 Dark mode
- 🗑 Delete related files when removing tasks (optional)
- 🌍 I18n, [View supported languages](#-internationalization).
- 🛠 More features in development

## 🖥 User Interface

![motrix-screenshot-task-en.png](https://cdn.nlark.com/yuque/0/2020/png/129147/1589782238501-e7b39166-da58-4152-ae34-65a061cafa48.png)

## ⌨️ Development

### Clone Code

```bash
git clone git@github.com:agalwood/Motrix.git
```

### Install Dependencies

```bash
cd Motrix
yarn
```

&gt; Error: Electron failed to install correctly, please delete node_modules/electron and try installing again

`Electron` failed to install correctly, please refer to https://github.com/electron/electron/issues/8466#issuecomment-571425574

### Dev Mode

```bash
yarn run dev
```

### Build Release

```bash
yarn run build
```
#### Build for Apple Silicon

```bash
yarn run build:applesilicon
```

After building, the application will be found in the project&#039;s `release` directory.

## 🛠 Technology Stack

- [Electron](https://electronjs.org/)
- [Vue](https://vuejs.org/) + [VueX](https://vuex.vuejs.org/) + [Element](https://element.eleme.io)
- [Aria2](https://aria2.github.io/)

## ☑️ TODO

Development Roadmap see: [Trello](https://trello.com/b/qNUzA0bv/motrix)

## 🤝 Contribute [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat)](http://makeapullrequest.com)

If you are interested in participating in joint development, PR and Forks are welcome!

## 🌍 Internationalization

Translations into versions for other languages are welcome 🧐! Please read the [translation guide](./CONTRIBUTING.md#-translation-guide) before starting translations.

| Key   | Name                | Status       |
|-------|:--------------------|:-------------|
| ar    | Arabic              | ✔️ [@hadialqattan](https://github.com/hadialqattan), [@AhmedElTabarani](https://github.com/AhmedElTabarani) |
| bg    | Българският език    | ✔️ [@null-none](https://github.com/null-none) |
| ca    | Català              | ✔️ [@marcizhu](https://github.com/marcizhu) |
| de    | Deutsch             | ✔️ [@Schloemicher](https://github.com/Schloemicher) |
| el    | Ελληνικά            | ✔️ [@Likecinema](https://github.com/Likecinema) |
| en-US | English             | ✔️           |
| es    | Español             | ✔️ [@Chofito](https://github.com/Chofito)|
| fa    | فارسی               | ✔️ [@Nima-Ra](https://github.com/Nima-Ra) |
| fr    | Français            | ✔️ [@gpatarin](https://github.com/gpatarin) |
| hu    | Hungarian           | ✔️ [@zalnaRs](https://github.com/zalnaRs) |
| id    | Indonesia           | ✔️ [@aarestu](https://github.com/aarestu) |
| it    | Italiano            | ✔️ [@blackcat-917](https://github.com/blackcat-917) |
| ja    | 日本語               | ✔️ [@hbkrkzk](https://github.com/hbkrkzk) |
| ko    | 한국어                | ✔️ [@KOZ39](https://github.com/KOZ39) |
| nb    | Norsk Bokmål        | ✔️ [@rubjo](https://github.com/rubjo) |
| nl    | Nederlands          | ✔️ [@nickbouwhuis](https://github.com/nickbouwhuis) |
| pl    | Polski              | ✔️ [@KanarekLife](https://github.com/KanarekLife) |
| pt-BR | Portuguese (Brazil) | ✔️ [@andrenoberto](https://github.com/andrenoberto) |
| ro    | Română              | ✔️ [@alyn3d](https://github.com/alyn3d) |
| ru    | Русский             | ✔️ [@bladeaweb](https://github.com/bladeaweb) |
| th    | แบบไทย              | ✔️ [@nxanywhere](https://github.com/nxanywhere) |
| tr    | Türkçe              | ✔️ [@abdullah](https://github.com/abdullah) |
| uk    | Українська          | ✔️ [@bladeaweb](https://github.com/bladeaweb) |
| vi    | Tiếng Việt          | ✔️ [@duythanhvn](https://github.com/duythanhvn) |
| zh-CN | 简体中文             | ✔️           |
| zh-TW | 繁體中文             | ✔️ [@Yukaii](https://github.com/Yukaii) [@5idereal](https://github.com/5idereal) |

## 📜 License

[MIT](https://opensource.org/licenses/MIT) Copyright (c) 2018-present Dr_rOot
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[CodeWithHarry/Sigma-Web-Dev-Course]]></title>
            <link>https://github.com/CodeWithHarry/Sigma-Web-Dev-Course</link>
            <guid>https://github.com/CodeWithHarry/Sigma-Web-Dev-Course</guid>
            <pubDate>Tue, 01 Jul 2025 00:05:33 GMT</pubDate>
            <description><![CDATA[Source Code for Sigma Web Development Course]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/CodeWithHarry/Sigma-Web-Dev-Course">CodeWithHarry/Sigma-Web-Dev-Course</a></h1>
            <p>Source Code for Sigma Web Development Course</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,976</p>
            <p>Forks: 2,641</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre># Welcome to Sigma&#039;s Web Development Course - Hindi Web Development Tutorials! 🚀

## What&#039;s Inside:

If you&#039;ve been itching to dive into the world of web development but feel lost in a sea of English tutorials, you&#039;re in the right place! Our course is exclusively in Hindi and is crafted to guide you from being an absolute beginner to a seasoned pro, one step at a time.

## Who Can Benefit?

### This course is a perfect fit for:

1. Beginners eager to start their web development journey
2. Intermediate developers looking to refine their skills
3. Individuals who prefer learning in Hindi

## What You&#039;ll Master:

### During this course, you&#039;ll delve into:

1. The fundamentals of HTML, CSS, and JavaScript
2. Both front-end and back-end development
3. How to seamlessly integrate databases
4. Real-world project implementation
5. And a whole lot more!

## The Schedule:

We&#039;re committed to your growth. Expect fresh source code additions nearly every day. Keep up the pace with our schedule and watch your skills soar! 📅

Get ready to embark on an exciting coding journey! 👨‍💻🌟

Ready to start? [Click here](https://www.youtube.com/playlist?list=PLu0W_9lII9agq5TrH9XLIKQvv0iaF2X3w) to access the complete YouTube playlist.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[SillyTavern/SillyTavern]]></title>
            <link>https://github.com/SillyTavern/SillyTavern</link>
            <guid>https://github.com/SillyTavern/SillyTavern</guid>
            <pubDate>Tue, 01 Jul 2025 00:05:32 GMT</pubDate>
            <description><![CDATA[LLM Frontend for Power Users.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/SillyTavern/SillyTavern">SillyTavern/SillyTavern</a></h1>
            <p>LLM Frontend for Power Users.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 15,674</p>
            <p>Forks: 3,499</p>
            <p>Stars today: 32 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[devlikeapro/waha]]></title>
            <link>https://github.com/devlikeapro/waha</link>
            <guid>https://github.com/devlikeapro/waha</guid>
            <pubDate>Tue, 01 Jul 2025 00:05:31 GMT</pubDate>
            <description><![CDATA[WAHA - WhatsApp HTTP API (REST API) that you can configure in a click! 3 engines: WEBJS (browser based), NOWEB (websocket nodejs), GOWS (websocket go)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/devlikeapro/waha">devlikeapro/waha</a></h1>
            <p>WAHA - WhatsApp HTTP API (REST API) that you can configure in a click! 3 engines: WEBJS (browser based), NOWEB (websocket nodejs), GOWS (websocket go)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,776</p>
            <p>Forks: 525</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre># WAHA

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./logo.png&quot; style=&#039;border-radius: 50%&#039; width=&#039;150&#039;/&gt;
&lt;/p&gt;

**WAHA** - **W**hats**A**pp **H**TTP **A**PI (REST API) that you can install on your own server and run in less than 5 minutes!

[![Docker Pulls](https://img.shields.io/docker/pulls/devlikeapro/waha)](https://hub.docker.com/r/devlikeapro/waha)

- Documentation: [https://waha.devlike.pro/](https://waha.devlike.pro/)
- Dashboard Example: [https://waha.devlike.pro/dashboard](https://waha.devlike.pro/dashboard)
- Swagger Example: [https://waha.devlike.pro/swagger](https://waha.devlike.pro/swagger)

# Tables of Contents

&lt;!-- toc --&gt;

- [Quick start](#quick-start)
  * [Requirements](#requirements)
  * [Send your first message](#send-your-first-message)
    + [1. Download image](#1-download-image)
    + [2. Run WhatsApp HTTP API](#2-run-whatsapp-http-api)
    + [3. Start a new session](#3-start-a-new-session)
    + [4. Get and scan QR](#4-get-and-scan-qr)
    + [5. Get the screenshot](#5-get-the-screenshot)
    + [6. Send a text message](#6-send-a-text-message)
  * [What is next?](#what-is-next)
- [Development](#development)
  * [Start the project](#start-the-project)

&lt;!-- tocstop --&gt;

# Quick start

## Requirements

Only thing that you must have - installed docker. Please follow the original
instruction &lt;a href=&quot;https://docs.docker.com/get-docker/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;how to install docker -&gt;&lt;/a&gt;.

When you are ready - come back and follows the below steps to send the first text message to WhatsApp via HTTP API!

## Send your first message

Let&#039;s go over steps that allow you to send your first text message via WhatsApp HTTP API!

### 1. Download image

Assuming you have installed [Docker](https://docs.docker.com/get-docker/), let&#039;s download the image.


```bash
docker pull devlikeapro/waha
```


```bash
docker login -u devlikeapro -p {KEY}
docker pull devlikeapro/waha-plus
docker logout
```

Read more about how to get `PASSWORD` for [**➕ WAHA Plus**](https://waha.devlike.pro/docs/how-to/waha-plus/)

### 2. Run WhatsApp HTTP API

Run WhatsApp HTTP API:

```bash
docker run -it --rm -p 3000:3000/tcp --name waha devlikeapro/waha

# It prints logs and the last line must be
# WhatsApp HTTP API is running on: http://[::1]:3000
```

Open the link in your browser [http://localhost:3000/](http://localhost:3000/) and you&#039;ll see API documentation
(Swagger).


### 3. Start a new session

To start a new session you should have your mobile phone with installed WhatsApp application close to you.

Please go and read how what we&#039;ll need to a bit
later:
&lt;a href=&quot;https://faq.whatsapp.com/381777293328336/?helpref=hc_fnav&quot; target=&quot;_blank&quot;&gt;
How to log in - the instruction on WhatsApp site
&lt;/a&gt;

When your ready - find `POST /api/sessions`, click on **Try it out**, then **Execute** a bit below.


The example payload:
```json
{
  &quot;name&quot;: &quot;default&quot;
}
```


By using the request with `name` values you can start multiple session (WhatsApp accounts) inside the single docker container in Plus


### 4. Get and scan QR

Find `GET /api/screenshot` and execute it, it shows you QR code.


**Scan the QR with your cell phone&#039;s WhatsApp app.**


### 5. Get the screenshot

Execute `GET /api/screenshot` after a few seconds after scanning the QR - it&#039;ll show you the screenshot of you Whatsapp
instance. If you can get the actual screenshot - then you&#039;re ready to start sending messages!


### 6. Send a text message

Let&#039;s send a text message - find `POST /api/sendText`  in [swagger](http://localhost:3000/) and change `chatId` this
way: use a phone international phone number without `+` symbol and add `@c.us` at the end.

For phone number `12132132131` the `chatId` is  `12132132131@c.us`.

The example payload:
```json
{
  &quot;chatId&quot;: &quot;12132132130@c.us&quot;,
  &quot;text&quot;: &quot;Hi there!&quot;,
  &quot;session&quot;: &quot;default&quot;
}
```

Also, you can use `curl` and send POST request like this:

```bash
# Phone without +
export PHONE=12132132130
curl -d &quot;{\&quot;chatId\&quot;: \&quot;${PHONE}@c.us\&quot;, \&quot;text\&quot;: \&quot;Hello from WhatsApp HTTP API\&quot; }&quot; -H &quot;Content-Type: application/json&quot; -X POST http://localhost:3000/api/sendText
```

## What is next?
[Go and read the full documentation!](https://waha.devlike.pro/docs/overview/introduction/)

# Development

## Start the project
1. Clone the repository
2. Make sure you&#039;re using node&gt;=22 (check [.nvmrc](/.nvmrc) to get the version)
3. Run the following commands:
```bash
# Install dependencies
yarn install
# Fetch and compile proto files
yarn gows:proto
# Run
yarn start
# open http://localhost:3000
```</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>