<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Fri, 11 Apr 2025 00:05:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[drawdb-io/drawdb]]></title>
            <link>https://github.com/drawdb-io/drawdb</link>
            <guid>https://github.com/drawdb-io/drawdb</guid>
            <pubDate>Fri, 11 Apr 2025 00:05:00 GMT</pubDate>
            <description><![CDATA[Free, simple, and intuitive online database diagram editor and SQL generator.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/drawdb-io/drawdb">drawdb-io/drawdb</a></h1>
            <p>Free, simple, and intuitive online database diagram editor and SQL generator.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 26,713</p>
            <p>Forks: 1,880</p>
            <p>Stars today: 71 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
    &lt;img width=&quot;64&quot; alt=&quot;drawdb logo&quot; src=&quot;./src/assets/icon-dark.png&quot;&gt;
    &lt;h1&gt;drawDB&lt;/h1&gt;
&lt;/div&gt;

&lt;h3 align=&quot;center&quot;&gt;Free, simple, and intuitive database schema editor and SQL generator.&lt;/h3&gt;

&lt;div align=&quot;center&quot; style=&quot;margin-bottom:12px;&quot;&gt;
    &lt;a href=&quot;https://drawdb.app/&quot; style=&quot;display: flex; align-items: center;&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Start%20building-grey&quot; alt=&quot;drawDB&quot;/&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://discord.gg/BrjZgNrmR6&quot; style=&quot;display: flex; align-items: center;&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/discord/1196658537208758412.svg?label=Join%20the%20Discord&amp;logo=discord&quot; alt=&quot;Discord&quot;/&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://x.com/drawDB_&quot; style=&quot;display: flex; align-items: center;&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Follow%20us%20on%20X-blue?logo=X&quot; alt=&quot;Follow us on X&quot;/&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;h3 align=&quot;center&quot;&gt;&lt;img width=&quot;700&quot; style=&quot;border-radius:5px;&quot; alt=&quot;demo&quot; src=&quot;drawdb.png&quot;&gt;&lt;/h3&gt;

DrawDB is a robust and user-friendly database entity relationship (DBER) editor right in your browser. Build diagrams with a few clicks, export sql scripts, customize your editor, and more without creating an account. See the full set of features [here](https://drawdb.app/).

## Getting Started

### Local Development

```bash
git clone https://github.com/drawdb-io/drawdb
cd drawdb
npm install
npm run dev
```

### Build

```bash
git clone https://github.com/drawdb-io/drawdb
cd drawdb
npm install
npm run build
```

### Docker Build

```bash
docker build -t drawdb .
docker run -p 3000:80 drawdb
```

Set up the [server](https://github.com/drawdb-io/drawdb-server) and environment variables according to `.env.sample` for the survey and bug report forms.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[goldbergyoni/nodejs-testing-best-practices]]></title>
            <link>https://github.com/goldbergyoni/nodejs-testing-best-practices</link>
            <guid>https://github.com/goldbergyoni/nodejs-testing-best-practices</guid>
            <pubDate>Fri, 11 Apr 2025 00:04:59 GMT</pubDate>
            <description><![CDATA[Beyond the basics of Node.js testing. Including a super-comprehensive best practices list and an example app (April 2025)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/goldbergyoni/nodejs-testing-best-practices">goldbergyoni/nodejs-testing-best-practices</a></h1>
            <p>Beyond the basics of Node.js testing. Including a super-comprehensive best practices list and an example app (April 2025)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 3,629</p>
            <p>Forks: 226</p>
            <p>Stars today: 44 stars today</p>
            <h2>README</h2><pre>![Header](./graphics/testing-best-practices-banner.png &#039;Node.js Testing Best Practices&#039;)

&lt;br/&gt;

## A detailed guide to modern testing with Node.js

**1. ‚úÖ 50+ Best Practices List -** Detailed instructions on how to write modern tests in the RIGHT way

**2. üìä Example application -** A Complete showcase of a typical Node.js backend with performant tests setup (40 tests in 5 seconds! including database!)

**3. üöÄ Advanced topics -** Go well beyond the basics. This guide covers hot topics like testing with data(base), testing interactions with external services including contracts, testing with message queues and more

&lt;br/&gt;&lt;br/&gt;

## Authors

&lt;img width=&quot;50&quot; height=&quot;50&quot; src=&quot;graphics/team/yoni.jpg&quot;/&gt;

**Yoni Goldberg**

Speaking about this soon at the following conferences: City.js Athens üá¨üá∑, React.Next Tel-Aviv üáÆüá±, Render Atlanta üá∫üá∏

&lt;img width=&quot;50&quot; height=&quot;50&quot; src=&quot;graphics/team/michael.jpg&quot;/&gt;

**Michael Salomon**
            
      
&lt;img width=&quot;50&quot; height=&quot;50&quot; src=&quot;graphics/team/daniel.jpg&quot;/&gt;

**Daniel Gluskin**

&lt;br/&gt;

_Lessons Written in Blood: Hard-Won Insights from Consulting with 50 Companies_

&lt;br/&gt;&lt;br/&gt;

# `Table of contents`

- [`Strategy &amp; Workflow`](https://github.com/testjavascript/nodejs-integration-tests-best-practices#section-1-strategy-and-workflow) - Which tests should you write in 2025? (5 best practices)
- [`Database And Infrastructure Setup`](https://github.com/testjavascript/nodejs-integration-tests-best-practices#section-2-infrastructure-and-database-setup) - Optimizing your DB, MQ and other infra for testing (6 best practices)
- [`Web Server Setup`](https://github.com/testjavascript/nodejs-integration-tests-best-practices#section-3-web-server-setup) - Good practices for starting and stopping the backend API (3 best practices)
- [`The Test Anatomy`](https://github.com/testjavascript/nodejs-integration-tests-best-practices#section-4-the-test-anatomy) - The bread and butter of a component test (6 best practices)
- [`Integration`](https://github.com/testjavascript/nodejs-integration-tests-best-practices#Section-5-integrations) - Techniques for testing collaborations with 3rd party components (8 best practices)
- [`Dealing With Data`](https://github.com/testjavascript/nodejs-integration-tests-best-practices#section-6-dealing-with-data) - Patterns and practices for testing the application data and database (8 best practices)
- [`Message Queue`](https://github.com/testjavascript/nodejs-integration-tests-best-practices#section-7-message-queues) - Correctly testing flows that start or end at a queue (8 best practices)
- [`Mocking`](https://github.com/testjavascript/nodejs-integration-tests-best-practices#section-8-mocking)(6 best practices)

&lt;br/&gt;&lt;br/&gt;

### Athens workshop + Online course

**- üßë‚Äçüè´ Online course:** Learn all of these patterns &amp; practices in a [comprehensive online course - On special sale until April 30th](https://testjavascript.com/)

**- üá¨üá∑ Athens workshop:** [Attend my workshop in City.js Athens](https://greece.cityjsconf.org/) + Bonus: Get royal access to my online course

&lt;br/&gt;&lt;br/&gt;

### Example Application

- [`Our Showcase`](https://github.com/testjavascript/nodejs-integration-tests-best-practices#-example-application) - An example Node.js component that embodies selected list of important best practices

### Other Recipes

- [`More Examples And Platforms`](https://github.com/testjavascript/nodejs-integration-tests-best-practices#-recipes) - A list of more examples that cover more platforms and topics

&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;

# ‚úÖ Best Practices

&lt;br/&gt;

## **Section 1: Strategy and Workflow**

&lt;br/&gt;

### ‚ö™Ô∏è 1. Always START with integration/component tests

üè∑&amp;nbsp; **Tags:** `#strategic`

:white_check_mark: **Do:** No matter when testing starts, the first tests to write should be component tests. But what exactly are component/integration tests? They focus on testing an entire component (e.g., a microservice) as-is, through its API, with all layers included‚Äîdatabase and all‚Äîwhile faking anything extraneous. This approach delivers both high confidence (it&#039;s like the production environment!) and a great developer experience.

Why start here? When a new sprint or feature begins, the first known details are about the component&#039;s expected behavior. Developers can immediately outline what the API/MQ will receive and what kind of response it should return. Naturally, testing this public interface first makes the most sense. This powerful testing approach brings immense value: it is realistic, demands less effort than covering every function with tests, requires close to zero mocking, triggers high coverage, and keeps the tester focused on what truly matters

On the other hand, writing unit tests for inner functions before the overall outcome is clear is a wasted effort. Even classic TDD books emphasize this approach‚Äîcheck out the [the double verification loop model](https://miro.medium.com/max/700/0*c5ahAZusp87Bo6Io.jpg).

At the end of the day, every input and output of a component must be covered with component tests. This is the bread and butter of your testing strategy‚Äîthe Swiss Army knife that catches 99% of the bugs. This strategy is known as the &#039;Testing Diamond&#039;

![Component tests](/graphics/component-diagram.jpg &#039;Component Tests&#039;)

&lt;br/&gt;&lt;br/&gt;

### ‚ö™Ô∏è 2. Run a very few E2E, selectively consider unit tests

üè∑&amp;nbsp; **Tags:** ``

:white\*check_mark: **Do:** Write just a tiny handful of E2E tests on top of component tests like 3-10, tests, maybe a couple more for larger components, but nothing beyond that. While &quot;E2E&quot; means different things to different testers, in a backend context, it refers to tests that run against live collaborators (i.e., multiple microservices) on a real infrastructure. Since component tests catch 99% of bugs, E2E tests should focus on different risks: configuration issues, misunderstandings with third-party services, infrastructure problems, and similar surprises. Catching these issues requires only a few well-placed tests

When are unit tests needed? Only when dealing with non-trivial logic or algorithms. If a module has significant complexity, isolating it from distractions can make testing easier. [This article greatly outlines when unit tests shine](https://blog.stevensanderson.com/2009/11/04/selective-unit-testing-costs-and-benefits/)

&lt;br/&gt;&lt;br/&gt;

### ‚ö™Ô∏è 3. Cover features, not functions

üè∑&amp;nbsp; **Tags:** ``

Focus your tests on features, not just functions. Features represent the core behavior of your application‚Äîoften reflected in API routes‚Äîand testing them ensures an automated focus on what truly matters. This approach also helps set the right priorities and often requires fewer tests than function-level testing.

Coverage reports are a great way to see which controllers, modules, and folders are exercised by tests. They help identify which critical features have been tested and, just as importantly, highlight gaps where essential functionality might still be missing. To verify meaningful coverage, compare test reports with requirements, check coverage reports to confirm key features are included, and ensure core routes and messages are covered by tests
&lt;br/&gt;&lt;br/&gt;

### ‚ö™Ô∏è 4. Write the tests _during_ coding, never after

üè∑&amp;nbsp; **Tags:** `#strategic`

:white_check_mark: **Do:** Write tests when it&#039;s most convenient‚Äîbefore or during coding‚Äîbut never after everything is built. Waiting too long means losing the anti-regression safety net that tests provide

Imagine a developer spends three hours writing great, fully working code (let‚Äôs call this point &quot;A&quot;). Then, she codes for six more hours, only to realize that a bug was introduced five hours ago. If she had written tests at point A, they would have caught the issue immediately, preventing wasted effort. Like in rock climbing, tests secure progress‚Äîthe earlier they are written, the less risk of falling back due to regressions

Tests should also be designed for frequent execution, running every few minutes like a robot assistant watching our back. They should constantly validate that recent changes haven‚Äôt broken anything, giving instant feedback and keeping development smooth

That said, writing tests too early (e.g., strict TDD) can lead to unnecessary refactoring as the design evolves. The sweet spot is when both requirements and implementation are clear enough‚Äînot necessarily perfect, but solid. For some modules, that clarity comes before writing code; for others, it follows some experimentation. Either way, the goal is simple: write tests early enough to provide a safety net without slowing development. Whether that&#039;s before coding or 45 minutes into it is a matter of personal style, not strategy

&lt;br/&gt;&lt;br/&gt;

---

### ‚ö™Ô∏è 5. Test the five known backend exit doors (outcomes)

üè∑&amp;nbsp; **Tags:** `#strategic`

:white_check_mark: &amp;nbsp; **Do:** When planning your tests, consider covering the five typical backend flow&#039;s outputs. That is, when your test is triggering some action (e.g., API call), a reaction is happening, something meaningful occurs and calls for testing. Note that we don&#039;t care about how things work. Our focus is on outcomes, things that are noticeable from the outside and might affect the user. These outcomes/reactions can be put in 5 categories:

**‚Ä¢ Response -** The test invokes an action (e.g., via API) and gets a response. It&#039;s now concerned with checking the response data correctness, schema, and HTTP status

**‚Ä¢ A new state -** After invoking an action, some data is probably modified. For example, when updating a user - It might be that the new data was not saved. Commonly and mistakenly, testers check only the response and not whether the data is updated correctly. Testing data and databases raises multiple interesting challenges that are greatly covered below in the üìó section &#039;Dealing with data&#039;

**‚Ä¢ Calls to external services -** After invoking an action, the app might call an external component via HTTP or any other transport. For example, a call to send SMS, email or charge a credit card. Anything that goes outside and might affect the user - Should be tested. Testing integrations is a broad topic which is discussed in the üìó section &#039;Testing integrations&#039; below

**‚Ä¢ Message queues -** The outcome of a flow might be a message in a queue. In our example application, once a new order was saved the app puts a message in some MQ product. Now other components can consume this message and continue the flow. This is very similar to testing integrations only working with message queues is different technically and tricky. The üìó section &#039;Message Queues&#039; below delve into this topic

**‚Ä¢ Observability -** Some things must be monitored, like errors or remarkable business events. When a transaction fails, not only we expect the right response but also correct error handling and proper logging/metrics. This information goes directly to a very important user - The ops user (i.e., production SRE/admin). Testing error handler is not very straightforward - Many types of errors might get thrown, some errors should lead to process crash, and there are many other corners to cover. We plan to write the üìó section on &#039;Observability and errors&#039; soon, but the example application already contains examples in the file &quot;createOrder.observabilityCheck.test.ts&quot;

![Component tests](/graphics/exit-doors.png &#039;Component Tests&#039;)

&lt;br/&gt;&lt;br/&gt;

## **Section 2: Infrastructure and database setup**

&lt;br/&gt;

### ‚ö™Ô∏è 1. Use Docker-Compose to host the database and other infrastructure

üè∑&amp;nbsp; **Tags:** `#strategic`

:white_check_mark: &amp;nbsp; **Do:** All the databases, message queues and infrastructure that is being used by the app should run in a docker-compose environment for testing purposes. Only this technology check all these boxes: A mature and popular technology that can be reused among developer machines and CI. One setup, same files, run everywhere. Sweet value but one remarkable caveat - It&#039;s different from the production runtime platform. Things like memory limits, deployment pipeline, graceful shutdown and a-like act differently in other environments - Make sure to test those using pre-production tests over the real environment. Note that the app under test should not necessarily be part of this docker-compose and can keep on running locally - This is usually more comfortable for developers.

&lt;br/&gt;

üëÄ &amp;nbsp; **Alternatives:** A popular option is manual installation of local database - This results in developers working hard to get in-sync with each other (&quot;Did you set the right permissions in the DB?&quot;) and configuring a different setup in CI ‚ùå; Some use local Kubernetes or Serverless emulators which act almost like the real-thing, sounds promising but it won&#039;t work over most CIs vendors and usually more complex to setup in developers machine‚ùå;

&lt;br/&gt;

&lt;details&gt;&lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;

```yml
# docker-compose.yml
version: &#039;3.6&#039;
services:
  database:
    image: postgres:11
    command: postgres -c fsync=off -c synchronous_commit=off -c full_page_writes=off -c random_page_cost=1.0
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=myuserpassword
      - POSTGRES_DB=shop
    container_name: &#039;postgres-for-testing&#039;
    ports:
      - &#039;54310:5432&#039;
    tmpfs: /var/lib/postgresql/data
```

‚û°Ô∏è [Full code here](https://github.com/testjavascript/nodejs-integration-tests-best-practices/blob/master/example-application/test/docker-compose.yml)

&lt;/details&gt;

&lt;br/&gt;&lt;br/&gt;

### ‚ö™Ô∏è 2. Start docker-compose using code in the global setup process

üè∑&amp;nbsp; **Tags:** `#strategic`

:white_check_mark: **Do:** In a typical multi-process test runner (e.g. Mocha, Jest), the infrastructure should be started in a global setup/hook ([Jest global setup](https://jestjs.io/docs/en/configuration#globalsetup-string)), [Mocha global fixture](https://mochajs.org/#global-setup-fixtures) using custom code that spin up the docker-compose file. This takes away common workflows pains - The DB is an explicit dependency of the test, no more tests failing because the DB is down. A new developer onboarded? Get them up to speed with nothing more than `git clone &amp;&amp; npm test`. Everything happens automatically, no tedious README.md, no developers wonder what setup steps did they miss. In addition, going with this approach maximizes the test performance: the DB is not instantiated per process or per file, rather once and only once. On the global teardown phase, all the containers should shutoff (See a dedicated bullet below).

&lt;br/&gt;

üëÄ &amp;nbsp; **Alternatives:** A popular option is manual installation of local database - This results in developers working hard to get in-sync with each other (&quot;Did you set the right permissions in the DB?&quot;) and configuring a different setup in CI ‚ùå; Some use local Kubernetes or Serverless emulators which act almost like the real-thing, sounds promising but it won&#039;t work over most CIs vendors and usually more complex to setup in developers machine‚ùå;

&lt;br/&gt;

&lt;details&gt;&lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;

```javascript
// jest.config.js
globalSetup: &#039;./example-application/test/global-setup.js&#039;;
```

```javascript
// global-setup.js
const dockerCompose = require(&#039;docker-compose&#039;);

module.exports = async () =&gt; {
  await dockerCompose.upAll();
};
```

‚û°Ô∏è [Full code here](https://github.com/testjavascript/nodejs-integration-tests-best-practices/blob/master/example-application/test/global-setup.js#L14-L25)

&lt;/details&gt;

&lt;br/&gt;&lt;br/&gt;

### ‚ö™Ô∏è 3. Shutoff the infrastructure only in the CI environment

üè∑&amp;nbsp; **Tags:** `#performance`

:white_check_mark: **Do:** Keep the database and other infrastructure always alive in developers&#039; machine so the next tests run will start at a glance, typically in 3-5ms. This super-fast start-up will encourage developers to run the tests continuously and treat them as a coding companion: It&#039;s an amazing coding experience to have the tests running all the time and watching your back as you type. Keeping the DB alive requires a clear data clean-up strategy, see our recommendation below. What about CI environment? This careful tune-up is mostly important in a developer machine where the test might get executed very frequently (e.g. after every editor save, once a minute), in a CI environnement the next tests execution might happen in a different machine and there is no motivation to keep the the docker-compose up.

&lt;br/&gt;

üëÄ &amp;nbsp; **Alternatives:** Should you teardown the docker-compose and restart in every tests execution, the startup time is likely to be 20x slower and is likely to kill this continuous-testing experience ‚ùå;

&lt;br/&gt;

&lt;details&gt;&lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;

```javascript
  // jest.config.js
  globalTeardown: &#039;./example-application/test/global-teardown.js&#039;,
```

```javascript
// global-teardown.js - clean-up after all tests
const isCI = require(&#039;is-ci&#039;);
const dockerCompose = require(&#039;docker-compose&#039;);

module.exports = async () =&gt; {
  // Check if running CI environment
  if (isCI) {
    dockerCompose.down();
  }
};
```

‚û°Ô∏è [Full code here](https://github.com/testjavascript/nodejs-integration-tests-best-practices/blob/master/example-application/test/global-teardown.js#L5-L8)

&lt;/details&gt;

&lt;br/&gt;&lt;br/&gt;

### ‚ö™Ô∏è 4. Optimize your real DB for testing, Don&#039;t fake it

üè∑&amp;nbsp; **Tags:** `#intermediate`

:white_check_mark: **Do:** Use the same DB product that is being used in production and configure it for faster execution. Typically, DBs accept flags that allow to trade durability (i.e., data safety) for performance. With just a few configuration flags ~20-40% performance gain is achieved and hundreds tests can be run in a few seconds. Our guide includes a recipe with examples of how to tune-up the popular DBs for testing

&lt;br/&gt;

üëÄ &amp;nbsp; **Alternatives:** Some memory-only DB engines (e.g. SQLLite) are tempting - Surprisingly they are likely to be even slower in a multi-process testing mode + Present noise due to unsupported features‚ùå; Some mock/stub the DB layer - Cutting off few seconds does not justify the greatly decreased risks coverage ‚ùå

&lt;br/&gt;

&lt;details&gt;&lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;

#### Postgres

```yml
# docker-compose file
version: &quot;3.6&quot;
services:
  db:
    image: postgres:13
    container_name: &#039;postgres-for-testing&#039;
    // fsync=off means don&#039;t wait for disc acknowledgement
    command: postgres -c fsync=off -c synchronous_commit=off -c full_page_writes=off -c random_page_cost=1.0
    tmpfs: /var/lib/postgresql/data
    # ...
```

‚û°Ô∏è [Full code here](https://github.com/testjavascript/nodejs-integration-tests-best-practices/blob/fb93b498d437aa6d0469485e648e74a6b9e719cc/example-application/test/docker-compose.yml#L1)

&lt;/details&gt;

&lt;br/&gt;&lt;br/&gt;

### ‚ö™Ô∏è 5. Store test data in RAM folder

üè∑&amp;nbsp; **Tags:** `#performance`

:white_check_mark: **Do:** Use your real DB product, just store the data in a RAM folder to reduce IO and gain some performance boost. In Linux machine, this can be done quickly by mapping the data to the built-in `tmpfs` directory - This particular folder&#039;s content is stored in memory without disc involvement. In Mac and Windows, one should generate a RAM folder using a script that can be done once or automated. [We have conducted multiple performance benchmarks](https://github.com/testjavascript/nodejs-integration-tests-best-practices/issues/9#issuecomment-710674437) and found that this only slightly improves the performance - The other optimizations that were covered above already minimize the IO work and modern SSD discs are blazing fast. Some specific databases like Mongo comes with a built-in memory engine, this is an additional option to consider.

&lt;br/&gt;

üëÄ &amp;nbsp; **Alternatives:** When configuring the DB for low-durability level (described in the bullet &#039;Optimize your real DB for testing, Don&#039;t fake it), this step may be omitted ‚úÖ;

&lt;br/&gt;

&lt;details&gt;&lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;

```yml
# docker-compose file
version: &quot;3.6&quot;
services:
  db:
    image: postgres:13
    container_name: &#039;po

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[atlassian/react-beautiful-dnd]]></title>
            <link>https://github.com/atlassian/react-beautiful-dnd</link>
            <guid>https://github.com/atlassian/react-beautiful-dnd</guid>
            <pubDate>Fri, 11 Apr 2025 00:04:58 GMT</pubDate>
            <description><![CDATA[Beautiful and accessible drag and drop for lists with React]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/atlassian/react-beautiful-dnd">atlassian/react-beautiful-dnd</a></h1>
            <p>Beautiful and accessible drag and drop for lists with React</p>
            <p>Language: JavaScript</p>
            <p>Stars: 33,815</p>
            <p>Forks: 2,699</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre>## ‚ö†Ô∏è Deprecated

Hey all,

We are taking the next step in saying thank you and goodbye to our friend `react-beautiful-dnd`.

- üîî We will be soon deprecating `react-beautiful-dnd` on [npm](https://www.npmjs.com/package/react-beautiful-dnd). When we do you will start to get console warnings in your build tools.
- üîí On Apr 30, 2025 (six months from posting) we will [archiving](https://docs.github.com/en/repositories/archiving-a-github-repository/archiving-repositories) the `react-beautiful-dnd` Github repository (it will become read only).

Thank you everybody for your support of this project.

[More information](https://github.com/atlassian/react-beautiful-dnd/issues/2672)

&lt;br&gt;

---

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://user-images.githubusercontent.com/2182637/53611918-54c1ff80-3c24-11e9-9917-66ac3cef513d.png&quot; alt=&quot;react beautiful dnd logo&quot; /&gt;
&lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;react-beautiful-dnd &lt;small&gt;&lt;sup&gt;(rbd)&lt;/sup&gt;&lt;/small&gt;&lt;/h1&gt;

&lt;div align=&quot;center&quot;&gt;

**Beautiful** and **accessible** drag and drop for lists with [`React`](https://facebook.github.io/react/)

[![CircleCI branch](https://img.shields.io/circleci/project/github/atlassian/react-beautiful-dnd/master.svg)](https://circleci.com/gh/atlassian/react-beautiful-dnd/tree/master)
[![npm](https://img.shields.io/npm/v/react-beautiful-dnd.svg)](https://www.npmjs.com/package/react-beautiful-dnd)

![quote application example](https://user-images.githubusercontent.com/2182637/53614150-efbed780-3c2c-11e9-9204-a5d2e746faca.gif)

[Play with this example if you want!](https://react-beautiful-dnd.netlify.app/iframe.html?selectedKind=board&amp;selectedStory=simple)

&lt;/div&gt;

## Core characteristics

- Beautiful and [natural movement](/docs/about/animations.md) of items üíê
- [Accessible](/docs/about/accessibility.md): powerful keyboard and screen reader support ‚ôøÔ∏è
- [Extremely performant](/docs/support/media.md) üöÄ
- Clean and powerful api which is simple to get started with
- Plays extremely well with standard browser interactions
- [Unopinionated styling](/docs/guides/preset-styles.md)
- No creation of additional wrapper dom nodes - flexbox and focus management friendly!

## Get started üë©‚Äçüè´

We have created [a free course on `egghead.io` ü•ö](https://egghead.io/courses/beautiful-and-accessible-drag-and-drop-with-react-beautiful-dnd) to help you get started with `react-beautiful-dnd` as quickly as possible.

[![course-logo](https://user-images.githubusercontent.com/2182637/43372837-8c72d3f8-93e8-11e8-9d92-a82adde7718f.png)](https://egghead.io/courses/beautiful-and-accessible-drag-and-drop-with-react-beautiful-dnd)

## Currently supported feature set ‚úÖ

- Vertical lists ‚Üï
- Horizontal lists ‚Üî
- Movement between lists (‚ñ§ ‚Üî ‚ñ§)
- [Virtual list support üëæ](/docs/patterns/virtual-lists.md) - unlocking 10,000 items @ 60fps
- [Combining items](/docs/guides/combining.md)
- Mouse üê≠, keyboard üéπ‚ôøÔ∏è and touch üëâüì± (mobile, tablet and so on) support
- [Multi drag support](/docs/patterns/multi-drag.md)
- Incredible screen reader support ‚ôøÔ∏è - we provide an amazing experience for english screen readers out of the box üì¶. We also provide complete customisation control and internationalisation support for those who need it üíñ
- [Conditional dragging](/docs/api/draggable.md#optional-props) and [conditional dropping](/docs/api/droppable.md#conditionally-dropping)
- Multiple independent lists on the one page
- Flexible item sizes - the draggable items can have different heights (vertical lists) or widths (horizontal lists)
- [Add and remove items during a drag](/docs/guides/changes-while-dragging.md)
- Compatible with semantic `&lt;table&gt;` reordering - [table pattern](/docs/patterns/tables.md)
- [Auto scrolling](/docs/guides/auto-scrolling.md) - automatically scroll containers and the window as required during a drag (even with keyboard üî•)
- Custom drag handles - you can drag a whole item by just a part of it
- Able to move the dragging item to another element while dragging (clone, portal) - [Reparenting your `&lt;Draggable /&gt;`](/docs/guides/reparenting.md)
- [Create scripted drag and drop experiences üéÆ](/docs/sensors/sensor-api.md)
- Allows extensions to support for [any input type you like üïπ](/docs/sensors/sensor-api.md)
- üå≤ Tree support through the [`@atlaskit/tree`](https://atlaskit.atlassian.com/packages/confluence/tree) package
- A `&lt;Droppable /&gt;` list can be a scroll container (without a scrollable parent) or be the child of a scroll container (that also does not have a scrollable parent)
- Independent nested lists - a list can be a child of another list, but you cannot drag items from the parent list into a child list
- Server side rendering (SSR) compatible - see [resetServerContext()](/docs/api/reset-server-context.md)
- Plays well with [nested interactive elements](/docs/api/draggable.md#interactive-child-elements-within-a-draggable-) by default

## Motivation ü§î

`react-beautiful-dnd` exists to create beautiful drag and drop for lists that anyone can use - even people who cannot see. For a good overview of the history and motivations of the project you can take a look at these external resources:

- üìñ [Rethinking drag and drop](https://medium.com/@alexandereardon/rethinking-drag-and-drop-d9f5770b4e6b)
- üéß [React podcast: fast, accessible and beautiful drag and drop](https://reactpodcast.simplecast.fm/17)

## Not for everyone ‚úåÔ∏è

There are a lot of libraries out there that allow for drag and drop interactions within React. Most notable of these is the amazing [`react-dnd`](https://github.com/react-dnd/react-dnd). It does an incredible job at providing a great set of drag and drop primitives which work especially well with the [wildly inconsistent](https://www.quirksmode.org/blog/archives/2009/09/the_html5_drag.html) html5 drag and drop feature. `react-beautiful-dnd` is a higher level abstraction specifically built for lists (vertical, horizontal, movement between lists, nested lists and so on). Within that subset of functionality `react-beautiful-dnd` offers a powerful, natural and beautiful drag and drop experience. However, it does not provide the breadth of functionality offered by `react-dnd`. So `react-beautiful-dnd` might not be for you depending on what your use case is.

## Documentation üìñ

### About üëã

- [Installation](/docs/about/installation.md)
- [Examples and samples](/docs/about/examples.md)
- [Get started](https://egghead.io/courses/beautiful-and-accessible-drag-and-drop-with-react-beautiful-dnd)
- [Design principles](/docs/about/design-principles.md)
- [Animations](/docs/about/animations.md)
- [Accessibility](/docs/about/accessibility.md)
- [Browser support](/docs/about/browser-support.md)

### Sensors üîâ

&gt; The ways in which somebody can start and control a drag

- [Mouse dragging üê≠](/docs/sensors/mouse.md)
- [Touch dragging üëâüì±](/docs/sensors/touch.md)
- [Keyboard dragging üéπ‚ôøÔ∏è](/docs/sensors/keyboard.md)
- [Create your own sensor](/docs/sensors/sensor-api.md) (allows for any input type as well as scripted experiences)

### API üèãÔ∏è‚Äç

![diagram](https://user-images.githubusercontent.com/2182637/53607406-c8f3a780-3c12-11e9-979c-7f3b5bd1bfbd.gif)

- [`&lt;DragDropContext /&gt;`](/docs/api/drag-drop-context.md) - _Wraps the part of your application you want to have drag and drop enabled for_
- [`&lt;Droppable /&gt;`](/docs/api/droppable.md) - _An area that can be dropped into. Contains `&lt;Draggable /&gt;`s_
- [`&lt;Draggable /&gt;`](/docs/api/draggable.md) - _What can be dragged around_
- [`resetServerContext()`](/docs/api/reset-server-context.md) - _Utility for server side rendering (SSR)_

### Guides üó∫

- [`&lt;DragDropContext /&gt;` responders](/docs/guides/responders.md) - _`onDragStart`, `onDragUpdate`, `onDragEnd` and `onBeforeDragStart`_
- [Combining `&lt;Draggable /&gt;`s](/docs/guides/combining.md)
- [Common setup issues](/docs/guides/common-setup-issues.md)
- [Using `innerRef`](/docs/guides/using-inner-ref.md)
- [Setup problem detection and error recovery](/docs/guides/setup-problem-detection-and-error-recovery.md)
- [Rules for `draggableId` and `droppableId`s](/docs/guides/identifiers.md)
- [Browser focus retention](/docs/guides/browser-focus.md)
- [Customising or skipping the drop animation](/docs/guides/drop-animation.md)
- [Auto scrolling](/docs/guides/auto-scrolling.md)
- [Controlling the screen reader](/docs/guides/screen-reader.md)
- [Use the html5 `doctype`](/docs/guides/doctype.md)
- [`TypeScript` and `flow`: type information](/docs/guides/types.md)
- [Dragging `&lt;svg&gt;`s](/docs/guides/dragging-svgs.md)
- [Avoiding image flickering](/docs/guides/avoiding-image-flickering.md)
- [Non-visible preset styles](/docs/guides/preset-styles.md)
- [How we detect scroll containers](/docs/guides/how-we-detect-scroll-containers.md)
- [How we use dom events](/docs/guides/how-we-use-dom-events.md) - _Useful if you need to build on top of `react-beautiful-dnd`_
- [Adding `&lt;Draggable /&gt;`s during a drag (11.x behaviour)](/docs/guides/changes-while-dragging.md) - _‚ö†Ô∏è Advanced_
- [Setting up Content Security Policy](/docs/guides/content-security-policy.md)

### Patterns üë∑‚Äç

- [Virtual lists üëæ](/docs/patterns/virtual-lists.md)
- [Multi drag](/docs/patterns/multi-drag.md)
- [Tables](/docs/patterns/tables.md)
- [Reparenting a `&lt;Draggable /&gt;`](/docs/guides/reparenting.md) - _Using our cloning API or your own portal_

### Support üë©‚Äç‚öïÔ∏è

- [Engineering health](/docs/support/engineering-health.md)
- [Community and addons](/docs/support/community-and-addons.md)
- [Release notes and changelog](https://github.com/atlassian/react-beautiful-dnd/releases)
- [Upgrading](/docs/support/upgrading.md)
- [Road map](https://github.com/atlassian/react-beautiful-dnd/issues)
- [Media](/docs/support/media.md)

## Read this in other languages üåé

- [![kr](https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png) **ÌïúÍ∏Ä/Korean**](https://github.com/LeeHyungGeun/react-beautiful-dnd-kr)
- [![ru](https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png) **–ù–∞ —Ä—É—Å—Å–∫–æ–º/Russian**](https://github.com/vtereshyn/react-beautiful-dnd-ru)
- [![pt](https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png) **Portugu√™s/Portuguese**](https://github.com/dudestein/react-beautiful-dnd-pt)
- [![gr](https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Greece.png) **ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨/Greek**](https://github.com/milvard/react-beautiful-dnd-gr)
- [![ja](https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Japan.png) **Êó•Êú¨Ë™û/Japanese**](https://github.com/eltociear/react-beautiful-dnd-ja)

## Creator ‚úçÔ∏è

Alex Reardon [@alexandereardon](https://twitter.com/alexandereardon)

&gt; Alex is no longer personally maintaning this project. The other wonderful maintainers are carrying this project forward.

## Maintainers

- [Daniel Del Core](https://twitter.com/danieldelcore)
- Many other [@Atlassian](https://twitter.com/Atlassian)&#039;s!

## Collaborators ü§ù

- Bogdan Chadkin [@IAmTrySound](https://twitter.com/IAmTrySound)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[microsoft/monaco-editor]]></title>
            <link>https://github.com/microsoft/monaco-editor</link>
            <guid>https://github.com/microsoft/monaco-editor</guid>
            <pubDate>Fri, 11 Apr 2025 00:04:57 GMT</pubDate>
            <description><![CDATA[A browser based code editor]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/microsoft/monaco-editor">microsoft/monaco-editor</a></h1>
            <p>A browser based code editor</p>
            <p>Language: JavaScript</p>
            <p>Stars: 42,068</p>
            <p>Forks: 3,709</p>
            <p>Stars today: 19 stars today</p>
            <h2>README</h2><pre># Monaco Editor

[![Versions](https://img.shields.io/npm/v/monaco-editor)](https://www.npmjs.com/package/monaco-editor)
[![Versions](https://img.shields.io/npm/v/monaco-editor/next)](https://www.npmjs.com/package/monaco-editor)
[![Feature Requests](https://img.shields.io/github/issues/microsoft/monaco-editor/feature-request.svg)](https://github.com/microsoft/monaco-editor/issues?q=is%3Aopen+is%3Aissue+label%3Afeature-request+sort%3Areactions-%2B1-desc)
[![Bugs](https://img.shields.io/github/issues/microsoft/monaco-editor/bug.svg)](https://github.com/microsoft/monaco-editor/issues?utf8=‚úì&amp;q=is%3Aissue+is%3Aopen+label%3Abug)

The Monaco Editor is the fully featured code editor from [VS Code](https://github.com/microsoft/vscode). Check out the [VS Code docs](https://code.visualstudio.com/docs/editor/editingevolved) to see some of the supported features.

![image](https://user-images.githubusercontent.com/5047891/94183711-290c0780-fea3-11ea-90e3-c88ff9d21bd6.png)

## Try it out

Try out the editor and see various examples [in our interactive playground](https://microsoft.github.io/monaco-editor/playground.html).

The playground is the best way to learn about how to use the editor, which features is supports, to try out different versions and to create minimal reproducible examples for bug reports.

## Installing

```
&gt; npm install monaco-editor
```

You will get:

- inside `/esm`: ESM version of the editor (compatible with e.g. webpack)
- inside `/dev`: AMD bundled, not minified
- inside `/min`: AMD bundled, and minified
- inside `/min-maps`: source maps for `min`
- `monaco.d.ts`: this specifies the API of the editor (this is what is actually versioned, everything else is considered private and might break with any release).

It is recommended to develop against the `dev` version, and in production to use the `min` version.

## Concepts

Monaco editor is best known for being the text editor that powers VS Code. However, it&#039;s a bit more nuanced. Some basic understanding about the underlying concepts is needed to use Monaco editor effectively.

### Models

Models are at the heart of Monaco editor. It&#039;s what you interact with when managing content. A model represents a file that has been opened. This could represent a file that exists on a file system, but it doesn&#039;t have to. For example, the model holds the text content, determines the language of the content, and tracks the edit history of the content.

### URIs

Each model is identified by a URI. This is why it&#039;s not possible for two models to have the same URI. Ideally when you represent content in Monaco editor, you should think of a virtual file system that matches the files your users are editing. For example, you could use `file:///` as a base path. If a model is created without a URI, its URI will be `inmemory://model/1`. The number increases as more models are created.

### Editors

An editor is a user facing view of the model. This is what gets attached to the DOM and what your users see visually. Typical editor operations are displaying a model, managing the view state, or executing actions or commands.

### Providers

Providers provide smart editor features. For example, this includes completion and hover information. It is not the same as, but often maps to [language server protocol](https://microsoft.github.io/language-server-protocol) features.

Providers work on models. Some smart features depends on the file URI. For example, for TypeScript to resolve imports, or for JSON IntelliSense to determine which JSON schema to apply to which model. So it&#039;s important to choose proper model URIs.

### Disposables

Many Monaco related objects often implement the `.dispose()` method. This method is intended to perform cleanups when a resource is no longer needed. For example, calling `model.dispose()` will unregister it, freeing up the URI for a new model. Editors should be disposed to free up resources and remove their model listeners.

## Documentation

- Learn how to integrate the editor with these [complete samples](./samples/).
  - [Integrate the AMD version](./docs/integrate-amd.md).
  - [Integrate the ESM version](./docs/integrate-esm.md)
- Learn how to use the editor API and try out your own customizations in the [playground](https://microsoft.github.io/monaco-editor/playground.html).
- Explore the [API docs](https://microsoft.github.io/monaco-editor/docs.html) or read them straight from [`monaco.d.ts`](https://github.com/microsoft/monaco-editor/blob/gh-pages/node_modules/monaco-editor/monaco.d.ts).
- Read [this guide](https://github.com/microsoft/monaco-editor/wiki/Accessibility-Guide-for-Integrators) to ensure the editor is accessible to all your users!
- Create a Monarch tokenizer for a new programming language [in the Monarch playground](https://microsoft.github.io/monaco-editor/monarch.html).
- Ask questions on [StackOverflow](https://stackoverflow.com/questions/tagged/monaco-editor)! Search open and closed issues, there are a lot of tips in there!

## Issues

Create [issues](https://github.com/microsoft/monaco-editor/issues) in this repository for anything related to the Monaco Editor. Please search for existing issues to avoid duplicates.

## FAQ

‚ùì **What is the relationship between VS Code and the Monaco Editor?**

The Monaco Editor is generated straight from VS Code&#039;s sources with some shims around services the code needs to make it run in a web browser outside of its home.

‚ùì **What is the relationship between VS Code&#039;s version and the Monaco Editor&#039;s version?**

None. The Monaco Editor is a library and it reflects directly the source code.

‚ùì **I&#039;ve written an extension for VS Code, will it work on the Monaco Editor in a browser?**

No.

&gt; Note: If the extension is fully based on the [LSP](https://microsoft.github.io/language-server-protocol/) and if the language server is authored in JavaScript, then it would be possible.

‚ùì **Why all these web workers and why should I care?**

Language services create web workers to compute heavy stuff outside of the UI thread. They cost hardly anything in terms of resource overhead and you shouldn&#039;t worry too much about them, as long as you get them to work (see above the cross-domain case).

‚ùì **What is this `loader.js`? Can I use `require.js`?**

It is an AMD loader that we use in VS Code. Yes.

‚ùì **I see the warning &quot;Could not create web worker&quot;. What should I do?**

HTML5 does not allow pages loaded on `file://` to create web workers. Please load the editor with a web server on `http://` or `https://` schemes.

‚ùì **Is the editor supported in mobile browsers or mobile web app frameworks?**

No.

‚ùì **Why doesn&#039;t the editor support TextMate grammars?**

- Please see https://github.com/bolinfest/monaco-tm which puts together `monaco-editor`, `vscode-oniguruma` and `vscode-textmate` to get TM grammar support in the editor.

## Contributing / Local Development

We are welcoming contributions from the community!
Please see [CONTRIBUTING](./CONTRIBUTING.md) for details how you can contribute effectively, how you can run the editor from sources and how you can debug and fix issues.

## Code of Conduct

This project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.

## License

Licensed under the [MIT](https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt) License.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[dream-num/Luckysheet]]></title>
            <link>https://github.com/dream-num/Luckysheet</link>
            <guid>https://github.com/dream-num/Luckysheet</guid>
            <pubDate>Fri, 11 Apr 2025 00:04:56 GMT</pubDate>
            <description><![CDATA[Luckysheet is an online spreadsheet like excel that is powerful, simple to configure, and completely open source.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/dream-num/Luckysheet">dream-num/Luckysheet</a></h1>
            <p>Luckysheet is an online spreadsheet like excel that is powerful, simple to configure, and completely open source.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 16,217</p>
            <p>Forks: 2,459</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

![logo](/docs/.vuepress/public/img/logo_text.png)

[![Join the chat at https://gitter.im/mengshukeji/Luckysheet](https://badges.gitter.im/mengshukeji/Luckysheet.svg)](https://gitter.im/mengshukeji/Luckysheet?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge)
&lt;a href=&quot;https://twitter.com/intent/follow?screen_name=luckysheet&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/twitter/follow/luckysheet?style=social&amp;logo=twitter&quot;
            alt=&quot;follow on Twitter&quot;&gt;&lt;/a&gt;

&lt;/div&gt;

English| [ÁÆÄ‰Ωì‰∏≠Êñá](./README-zh.md)

# Luckysheet is no longer maintained, please use [Univer](https://github.com/dream-num/univer) instead!

Follow the [#1454](https://github.com/dream-num/Luckysheet/issues/1454) issue for more details.

## Introduction
üöÄLuckysheet is an online spreadsheet like excel that is powerful, simple to configure, and completely open source.


## Links
 | Source Code   | Documentation | Demo | Plugins Demo | Forum |
 | ------ | -------- | ------ | ------ | ------ |
 | [Github](https://github.com/mengshukeji/Luckysheet)| [Online Documentation](https://dream-num.github.io/LuckysheetDocs/) | [Online Demo](https://dream-num.github.io/LuckysheetDemo) / [Cooperative editing demo](http://luckysheet.lashuju.com/demo/) | [Import Excel Demo](https://dream-num.github.io/LuckyexcelDemo/) | [Chinese Forum](https://support.qq.com/product/288322)  |
 | [Gitee Mirror](https://gitee.com/mengshukeji/Luckysheet)| [Gitee Online Documentation](https://mengshukeji.gitee.io/LuckysheetDocs/) | [Gitee Online Demo](https://mengshukeji.gitee.io/luckysheetdemo/) | [Gitee Import Excel Demo](https://mengshukeji.gitee.io/luckyexceldemo/) | [Google Group](https://groups.google.com/g/luckysheet) |

![Demo](/docs/.vuepress/public/img/LuckysheetDemo.gif)

## Plugins
- [Luckyexcel](https://github.com/mengshukeji/Luckyexcel): Excel import and export library
- [chartMix](https://github.com/mengshukeji/chartMix): Chart plugin

## Ecosystem

| Project | Description |
|---------|-------------|
| [Luckysheet Vue]          | Luckysheet and Luckyexcel in a vue cli3 project |
| [Luckysheet Vue3]          | Luckysheet and Luckyexcel in a vue3 project with vite|
| [Luckysheet React]          | Luckysheet in a React project |
| [Luckyexcel Node]          | Use Luckyexcel in koa2 |
| [Luckysheet Server]          | Java backend Luckysheet Server |
| [Luckysheet Server Starter]          | LuckysheetServer docker deployment startup template |

[Luckysheet Vue]: https://github.com/mengshukeji/luckysheet-vue
[Luckysheet Vue3]: https://github.com/hjwforever/luckysheet-vue3-vite
[Luckysheet React]: https://github.com/mengshukeji/luckysheet-react
[Luckyexcel Node]: https://github.com/mengshukeji/Luckyexcel-node
[Luckysheet Server]: https://github.com/mengshukeji/LuckysheetServer
[Luckysheet Server Starter]: https://github.com/mengshukeji/LuckysheetServerStarter


## Features

- **Formatting**: style, conditional formatting, text alignment and rotation, text truncation, overflow, automatic line wrapping, multiple data types, cell segmentation style
- **Cells**: drag and drop, fill handle, multiple selection, find and replace, location, merge cells, data verification
- **Row &amp; column**: hide, insert, delete rows or columns, freeze, and split text
- **Operation**: undo, redo, copy, paste, cut, hot key, format painter, drag and drop selection
- **Formulas &amp; Functions**: Built-in, remote and custom formulas
- **Tables**: filter, sort
- **Enhanced functions**: Pivot tables, charts, comments, cooperative editing, insert picture, matrix calculations, screenshots, copying to other formats, EXCEL import and export, etc.

For a more detailed feature list, please refer to: [Features](https://dream-num.github.io/LuckysheetDocs/guide/#features)

## üìñ Resources
- Priority reading for new users: [User Guide](https://github.com/mengshukeji/Luckysheet/wiki/User-Guide)
- For the tutorials, learning materials and supporting solutions provided by the community, please refer to: [Tutorials and Resources](https://dream-num.github.io/LuckysheetDocs/guide/resource.html)

## üìú Changelog

Detailed changes for each release are documented in the [CHANGELOG.md](CHANGELOG.md).

## ‚ùóÔ∏è Issues

Please make sure to read the [Issue Reporting Checklist](https://dream-num.github.io/LuckysheetDocs/guide/contribute.html#how-to-submit-issues) before opening an issue. Issues not conforming to the guidelines may be closed immediately.

## ‚úÖ TODO

Managed with [GitHub Projects](https://github.com/mengshukeji/Luckysheet/projects/1)

## üí™Contribution

Please make sure to read the[ Contributing Guide](https://dream-num.github.io/LuckysheetDocs/guide/contribute.html) before making a pull request.

## Usage

### First step
Introduce dependencies through CDN
```
&lt;link rel=&#039;stylesheet&#039; href=&#039;https://cdn.jsdelivr.net/npm/luckysheet@latest/dist/plugins/css/pluginsCss.css&#039; /&gt;
&lt;link rel=&#039;stylesheet&#039; href=&#039;https://cdn.jsdelivr.net/npm/luckysheet@latest/dist/plugins/plugins.css&#039; /&gt;
&lt;link rel=&#039;stylesheet&#039; href=&#039;https://cdn.jsdelivr.net/npm/luckysheet@latest/dist/css/luckysheet.css&#039; /&gt;
&lt;link rel=&#039;stylesheet&#039; href=&#039;https://cdn.jsdelivr.net/npm/luckysheet@latest/dist/assets/iconfont/iconfont.css&#039; /&gt;
&lt;script src=&quot;https://cdn.jsdelivr.net/npm/luckysheet@latest/dist/plugins/js/plugin.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;https://cdn.jsdelivr.net/npm/luckysheet@latest/dist/luckysheet.umd.js&quot;&gt;&lt;/script&gt;
```
### Second step
Specify a table container
```
&lt;div id=&quot;luckysheet&quot; style=&quot;margin:0px;padding:0px;position:absolute;width:100%;height:100%;left: 0px;top: 0px;&quot;&gt;&lt;/div&gt;
```
### Third step
Create a table
```
&lt;script&gt;
    $(function () {
        //Configuration item
        var options = {
            container: &#039;luckysheet&#039; //luckysheet is the container id
        }
        luckysheet.create(options)
    })
&lt;/script&gt;
```

## Development

### Requirements
[Node.js](https://nodejs.org/en/) Version &gt;= 6 

### Installation
```
npm install
npm install gulp -g
```
### Development
```
npm run dev
```
### Package
```
npm run build
```

## Partner project

- [h5-Dooring](https://github.com/MrXujiang/h5-Dooring)

## Communication

- [WebSite](http://lucky.lashuju.com/index.html)
- [Github Discussions](https://github.com/mengshukeji/Luckysheet/discussions)
- [Gitter](https://gitter.im/mengshukeji/Luckysheet)

[Chinese community](./README-zh.md)

## Sponsor

Luckysheet is an MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome [backers](https://dream-num.github.io/LuckysheetDocs/about/sponsor.html#sponsors-list). If you&#039;d like to join them, please consider:

- [Become a backer or sponsor on Patreon](https://www.patreon.com/mengshukeji).
- [Become a backer or sponsor on Open Collective](https://opencollective.com/luckysheet).
- One-time donation via PayPal, WeChat or Alipay

| PayPal |  WeChat  | Alipay |
|---|---|---|
| [Paypal Me](https://www.paypal.me/wbfsa) | &lt;img src=&quot;https://cdn.jsdelivr.net/gh/mengshukeji/LuckyResources@master/assets/img/wechat/wechat.jpg&quot; width=&quot;140&quot; /&gt;| &lt;img src=&quot;https://cdn.jsdelivr.net/gh/mengshukeji/LuckyResources@master/assets/img/wechat/alipay.jpg&quot; width=&quot;130&quot; /&gt; |

### What&#039;s the difference between Patreon and OpenCollective?

Funds donated via Patreon go directly to support mengshukeji&#039;s work on Luckysheet. Funds donated via OpenCollective are managed with transparent expenses and will be used for compensating work and expenses for core team members or sponsoring community events. Your name/logo will receive proper recognition and exposure by donating on either platform.

## Sponsors List

(Sort by time)
- *Ê∂õ ¬• 200
- popo ¬• 1
- Â≠îÂûÇÂñÑ ¬• 5
- ShawnÊñá ¬• 99
- Âπ∏ËøêÁöÑÂ∞èË∑ØÊòì ¬• 1
- ÂÜØÂêØ‰øä ¬• 88
- mxb ¬• 10
- Á•≠Èò≥ ¬• 20
- *Âãá ¬• 30
- ËôöÊàë ¬• 200
- ÁîúÂÖö ¬• 50
- Alphabet(Google)-gcf ¬• 1
- **Âπ≥ ¬• 100
- **‰∏ú ¬• 10
- debugger ¬• 20
- ÁÉ¶‰∫ÜÁÉ¶ ¬• 10
- ÊñáÈ°∂È°∂ ¬• 200
- yangxshn ¬• 10
- Áà±‰πê ¬• 100
- Â∞èÊùéÈ£ûÂàÄÂàÄ ¬• 66
- Âº†Èì≠ ¬• 200
- ÊõπÊ≤ªÂÜõ ¬• 1
- *Áâπ ¬• 10
- **ÊùÉ ¬• 9.9
- **sdmq ¬• 20
- *Êó≠ ¬• 10
- Quentin ¬• 20
- Âë®ÂÆáÂá° ¬• 100
- *Ë∂Ö ¬• 10
- Áª¥ÂÆÅ ¬• 100
- hyy ¬• 20
- Èõ®‰∫≠ÂØíÊ±üÊúà ¬• 50
- **Âäü ¬• 10
- **ÂÖâ ¬• 20
- terrywan ¬• 100
- ÁéãÊôìÊ¥™ ¬• 10
- Sun ¬• 10
- ÂøßÁª£ ¬• 100
- Jasonx ¬• 10
- ÂõΩÂãá ¬• 66.6
- ÈÉéÂøó ¬• 100
- ÂåøÂêç ¬• 1
- ni ¬• 100
- Ëãè ¬• 50
- Mads_chan ¬• 1
- LK ¬• 100
- Êô∫ËøûÊñπËàü ÊùéÊ±™Áü≥ ¬• 168
- **Âèë ¬• 260
- *Ë∂Ö ¬• 10
- *Âãá ¬• 10
- *ËÖæ ¬• 15
- ÂêçÂ≠óÂ•ΩÈöæËµ∑ ¬• 20
- Â§ßÂ±± ¬• 1
- waiting ¬• 1000
- **ÂÆá ¬• 10.00
- ÂàòÂ∞èÂ∏ÖÁöÑÂì•Âì• ¬• 20.00
- ÂÆÅÈùôËá¥Ëøú ¬• 10.00
- Eleven ¬• 1.00
- **Â∏Ü ¬• 188
- henry ¬• 100
- .Ê≥¢ÁΩó ¬• 50
- Ëä±ËêΩÊúâÂÆ∂ ¬• 50
- Ë∏èÈÅçÂçóÊ∞¥ÂåóÂ±± ¬• 1
- LC ¬• 5
- **Êòé ¬• 8.80
- *ÂÜõ ¬• 20
- Âº†ÂΩ™ ¬• 50
- ‰ºÅ‰∏öÊñáÊ°£‰∫ë@ËÇñÊïè ¬• 10
- ÂåøÂêç ¬• 50
- ÈÄçÈÅ•Ë°å ¬• 10
- z.wasaki ¬• 50
- Make Children ¬• 20
- Foam ¬• 20
- Â••ÁâπÊõº( o|o)„Éé‰∏â ¬• 50
- **ÂáØ ¬• 10
- **ÂÖµ ¬• 20
- **Â∑ù ¬• 1
- ‰∫å‰∏á ¬• 50
- ËîöÁÑ∂ÊàêÊûó ¬• 10
- ÈÇπÊù∞ ¬• 10
- Âº†Ê∞∏Âº∫ ¬• 50
- È±ºÂæóÊ∞¥ ¬• 50
- Ccther ¬• 1
- Eric Cheng ¬• 10
- ‰ΩöÂêç ¬• 1
- Ëä±Âè∂ ¬• 50
- GT ¬• 20
- ËèúËèúÂøÉ ¬• 10
- fisher ¬• 1
- JC ¬• 5
- ‰ΩöÂêç ¬• 20
- Áã¨Â≠§‰∏ÄÂâë ¬• 50
- mxt ¬• 20
- ‰∏ÄÂè∂Ëø∑Â±± ¬• 100
- Jeff ¬• 100
- ÂÖ´ÂçÉÂ§öÊù°Áãóüê∂ ¬• 100
- ÊôìÂ≥∞ ¬• 10
- Êàí ¬• 1
- Êµ™Èáå‰∏™Êµ™ ¬• 1
- ÂõûË∞ÉÂáΩÊï∞ ¬• 50
- ËµñÁìúÂ≠ê ¬• 5
- Milo‚Ä¢J ¬• 20
- ÂèØÈÅì‰∫ë ¬• 200
- *Á®ã ¬• 10
- Êù•‰∏ÄÊùØÂç°Â∏ÉÈÖ∏Â•∂ ¬• 5
- Âàò‰πÖËÉú ¬• 100
- Âø´ÊÑèÊ±üÊπñ ¬• 50
- *Êñ∞ ¬• 9.9
- **Èæô ¬• 100
- **Ê±ü ¬• 100
- **Â®Å ¬• 9.8
- **Ê∂õ ¬• 500
- **Âòâ ¬• 10
- *Ê∂õ ¬• 1
- *ÂÖµ ¬• 5
- *Èò≥ ¬• 200
- *Ëæâ ¬• 1
- *Â∏Ü ¬• 30
- **Êó∫ ¬• 10
- **È∫ü ¬• 20
- *Èúñ ¬• 9.9
- *Â∏Ö ¬• 10
- *Èë´ ¬• 6.66
- ~Êú¥:shu ¬• 29.79
- Êú™Êù• ¬• 1
- ÂõΩÂãá ¬• 0.1
- Áî®ÂøÉÁÅµÂê¨Èõ® ¬• 10
- Èíä ¬• 5
- ÊòüÁ®Ä ¬• 5

## Authors and acknowledgment

### Active Core Team Members
- [@wbfsa](https://github.com/wbfsa)
- [@eiji-th](https://github.com/eiji-th)
- [@fly-95](https://github.com/fly-95)
- [@tonytonychopper123](https://github.com/tonytonychopper123)
- [@Dushusir](https://github.com/Dushusir)
- [@iamxuchen800117](https://github.com/iamxuchen800117)
- [@wpxp123456](https://github.com/wpxp123456)
- [@c19c19i](https://weibo.com/u/3884623955)
- [@zhangchen915](https://github.com/zhangchen915)
- [@jerry-f](https://github.com/jerry-f)
- [@flowerField](https://github.com/flowerField)

### Community Partners
- [@yiwasheng](https://github.com/yiwasheng)
- [@danielcai1987](https://github.com/danielcai1987)
- [@qq6690876](https://github.com/qq6690876)
- [@javahuang](https://github.com/javahuang)
- [@TimerGang](https://github.com/TimerGang)
- [@gsw945](https://github.com/gsw945)
- [@swen-xiong](https://github.com/swen-xiong)
- [@lzmch](https://github.com/lzmch)
- [@kdevilpf](https://github.com/kdevilpf)
- [@WJWM0316](https://github.com/WJWM0316)

## License
[MIT](http://opensource.org/licenses/MIT)

Copyright (c) 2020-present, mengshukeji
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[juliangarnier/anime]]></title>
            <link>https://github.com/juliangarnier/anime</link>
            <guid>https://github.com/juliangarnier/anime</guid>
            <pubDate>Fri, 11 Apr 2025 00:04:55 GMT</pubDate>
            <description><![CDATA[JavaScript animation engine]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/juliangarnier/anime">juliangarnier/anime</a></h1>
            <p>JavaScript animation engine</p>
            <p>Language: JavaScript</p>
            <p>Stars: 56,359</p>
            <p>Forks: 3,885</p>
            <p>Stars today: 268 stars today</p>
            <h2>README</h2><pre># Anime.js

&lt;p align=&quot;center&quot;&gt;
  &lt;picture align=&quot;center&quot;&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./assets/images/animejs-v4-logo-animation-dark.gif&quot;&gt;
    &lt;img align=&quot;center&quot; alt=&quot;Anime.js V4 logo animation&quot; src=&quot;./assets/images/animejs-v4-logo-animation.gif&quot; width=&quot;560&quot;&gt;
  &lt;/picture&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;strong&gt;
  &lt;em&gt;Anime.js&lt;/em&gt; is a fast, multipurpose and lightweight JavaScript animation library with a simple, yet powerful API.&lt;br&gt;
  It works with CSS properties, SVG, DOM attributes and JavaScript Objects.
  &lt;/strong&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img alt=&quot;NPM Downloads&quot; src=&quot;https://img.shields.io/npm/dm/animejs?style=flat-square&amp;logo=npm&quot;&gt;
  &lt;img alt=&quot;jsDelivr hits (npm)&quot; src=&quot;https://img.shields.io/jsdelivr/npm/hm/animejs?style=flat-square&amp;logo=jsdeliver&quot;&gt;
  &lt;img alt=&quot;GitHub Sponsors&quot; src=&quot;https://img.shields.io/github/sponsors/juliangarnier?style=flat-square&amp;logo=github&quot;&gt;
&lt;/p&gt;

## Usage

Anime.js V4 works by importing ES modules like so:

&lt;table&gt;
&lt;tr&gt;
  &lt;td&gt;

```javascript
import {
  animate,
  stagger,
} from &#039;animejs&#039;;

animate(&#039;.square&#039;, {
  x: 320,
  rotate: { from: -180 },
  duration: 1250,
  delay: stagger(65, { from: &#039;center&#039; }),
  ease: &#039;inOutQuint&#039;,
  loop: true,
  alternate: true
});
```

  &lt;/td&gt;
  &lt;td&gt;
    &lt;img align=&quot;center&quot; alt=&quot;Anime.js code example&quot; src=&quot;./assets/images/usage-example-result.gif&quot;&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

## V4 Documentation

The full documentation is available [here](https://animejs.com/documentation).

## Our sponsors

Anime.js is 100% free and is only made possible with the help of our sponsors.
Help the project become sustainable by sponsoring us on &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/sponsors/juliangarnier&quot;&gt;GitHub Sponsors&lt;/a&gt;.

## Platinum sponsors

&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a target=&quot;_blank&quot; href=&quot;https://huly.io/?ref=animejs&quot;&gt;
        &lt;picture&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./assets/sponsors/huly-logomark.svg&quot;&gt;
          &lt;img align=&quot;center&quot; src=&quot;./assets/sponsors/huly-logomark-dark.svg&quot; width=&quot;128&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a target=&quot;_blank&quot; href=&quot;https://ice.io/?ref=animejs&quot;&gt;
        &lt;picture&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./assets/sponsors/ice-open-network-logomark.svg&quot;&gt;
          &lt;img align=&quot;center&quot; src=&quot;./assets/sponsors/ice-open-network-logomark-dark.svg&quot; width=&quot;128&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/sponsors/juliangarnier&quot;&gt;
        &lt;picture&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./assets/sponsors/placeholder.svg&quot;&gt;
          &lt;img align=&quot;center&quot; src=&quot;./assets/sponsors/placeholder-dark.svg&quot; width=&quot;128&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;a target=&quot;_blank&quot; href=&quot;https://huly.io/?ref=animejs&quot;&gt;Huly&lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;a target=&quot;_blank&quot; href=&quot;https://ice.io/?ref=animejs&quot;&gt;Ice Open Network&lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/sponsors/juliangarnier&quot;&gt;Your logo here&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

## NPM development scripts

First, run `npm i` to install all the necessary packages.
Then, execute the following scripts with `npm run &lt;script&gt;`.

| script | action |
| ------ | ------ |
| `dev` | Watch any changes in `src/` and compiles the esm version to `lib/anime.esm.js` |
| `dev-types` | Same as `dev`, but also run TypeScript and generate the `types/index.d.ts` file |
| `build` | Generate types definition and compiles ESM / UMD / IIFE versions to `lib/` |
| `test-browser` | Start a local server and start all browser related tests |
| `test-node` | Start all Node related tests |
| `open-examples` | Start a local server to browse the examples locally |

## V4 API breaking changes overview

### Animations

```diff
- import anime from &#039;animejs&#039;;
+ import { animate, createSpring, utils } from &#039;animejs&#039;;

- anime({
-   targets: &#039;div&#039;,
+ animate(&#039;div&#039;, {
    translateX: 100,
      rotate: {
-     value: 360,
+     to: 360,
-     easing: &#039;spring(.7, 80, 10, .5)&#039;,
+     ease: createSpring({ mass: .7, damping: 80, stiffness: 10, velocity: .5}),
    },
-   easing: &#039;easeinOutExpo&#039;,
+   ease: &#039;inOutExpo&#039;,
-   easing: () =&gt; t =&gt; Math.cos(t),
+   ease: t =&gt; Math.cos(t),
-   direction: &#039;reverse&#039;,
+   reversed: true,
-   direction: &#039;alternate&#039;,
+   alternate: true,
-   loop: 1,
+   loop: 0,
-   round: 100,
+   modifier: utils.round(2),
-   begin: () =&gt; {},
+   onBegin: () =&gt; {},
-   update: () =&gt; {},
+   onUpdate: () =&gt; {},
-   change: () =&gt; {},
+   onRender: () =&gt; {},
-   changeBegin: () =&gt; {},
-   changeComplete: () =&gt; {},
-   loopBegin: () =&gt; {},
-   loopComplete: () =&gt; {},
+   onLoop: () =&gt; {},
-   complete: () =&gt; {},
+   onComplete: () =&gt; {},
  });
```

### Promises

```diff
- import anime from &#039;animejs&#039;;
+ import { animate, utils } from &#039;animejs&#039;;

- anime({ targets: target, prop: x }).finished.then(() =&gt; {});
+ animate(target, { prop: x }).then(() =&gt; {});
```

### Timers

```diff
- import anime from &#039;animejs&#039;;
+ import { createTimer } from &#039;animejs&#039;;

- anime({
+ createTimer({
-   duration: Infinity,
-   update: () =&gt; {},
+   onUpdate: () =&gt; {},
  });
```

### Timelines

```diff
- import anime from &#039;animejs&#039;;
+ import { createTimeline, stagger } from &#039;animejs&#039;;

- anime.timeline({
+ createTimeline({
-   duration: 500,
-   easing: &#039;easeInOutQuad&#039;,
+   defaults: {
+     duration: 500,
+     ease: &#039;inOutQuad&#039;,
+   }
-   loop: 2,
+   loop: 1,
- }).add({
-   targets: &#039;div&#039;,
+ }).add(&#039;div&#039;, {
    rotate: 90,
  })
- .add(&#039;.target:nth-child(1)&#039;, { opacity: 0, onComplete }, 0)
- .add(&#039;.target:nth-child(2)&#039;, { opacity: 0, onComplete }, 100)
- .add(&#039;.target:nth-child(3)&#039;, { opacity: 0, onComplete }, 200)
- .add(&#039;.target:nth-child(4)&#039;, { opacity: 0, onComplete }, 300)
+ .add(&#039;.target&#039;, { opacity: 0, onComplete }, stagger(100))
```

### Stagger

```diff
- import anime from &#039;animejs&#039;;
+ import { animate, stagger } from &#039;animejs&#039;;

- anime({
-   targets: &#039;div&#039;,
+ animate(&#039;div&#039;, {
-   translateX: anime.stagger(100),
+   translateX: stagger(100),
-   delay: anime.stagger(100, { direction: &#039;reversed&#039; }),
+   translateX: stagger(100, { reversed: true }),
  });
```

### SVG

```diff
- import anime from &#039;animejs&#039;;
+ import { animate, svg } from &#039;animejs&#039;;

- const path = anime.path(&#039;path&#039;);
+ const { x, y, angle } = svg.createMotionPath(&#039;path&#039;);

- anime({
-   targets: &#039;#shape1&#039;,
+ animate(&#039;#shape1&#039;, {
-   points: &#039;70 41 118.574 59.369 111.145 132.631 60.855 84.631 20.426 60.369&#039;,
+   points: svg.morphTo(&#039;#shape2&#039;),
-   strokeDashoffset: [anime.setDashoffset, 0],
+   strokeDashoffset: svg.drawLine(),
-   translateX: path(&#039;x&#039;),
-   translateY: path(&#039;y&#039;),
-   rotate: path(&#039;angle&#039;),
+   translateX: x,
+   translateY: y,
+   rotate: angle,
  });
```

### Utils

```diff
- import anime from &#039;animejs&#039;;
+ import { utils } from &#039;animejs&#039;;

- const value = anime.get(&#039;#target1&#039;, &#039;translateX&#039;);
+ const value = utils.get(&#039;#target1&#039;, &#039;translateX&#039;);

- anime.set(&#039;#target1&#039;, { translateX: 100 });
+ utils.set(&#039;#target1&#039;, { translateX: 100 });

- anime.remove(&#039;#target1&#039;);
+ utils.remove(&#039;#target1&#039;);

- const rounded = anime.round(value);
+ const rounded = utils.round(value, 0);
```

### Engine

```diff
- import anime from &#039;animejs&#039;;
+ import { engine } from &#039;animejs&#039;;

- anime.suspendWhenDocumentHidden = false;
+ engine.pauseWhenHidden = false;

- anime.speed = .5;
+ engine.playbackRate = .5;
```</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WhiskeySockets/Baileys]]></title>
            <link>https://github.com/WhiskeySockets/Baileys</link>
            <guid>https://github.com/WhiskeySockets/Baileys</guid>
            <pubDate>Fri, 11 Apr 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[Lightweight full-featured typescript/javascript WhatsApp Web API]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WhiskeySockets/Baileys">WhiskeySockets/Baileys</a></h1>
            <p>Lightweight full-featured typescript/javascript WhatsApp Web API</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,094</p>
            <p>Forks: 1,714</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre>&lt;h1&gt;&lt;img alt=&quot;Baileys logo&quot; src=&quot;https://raw.githubusercontent.com/WhiskeySockets/Baileys/refs/heads/master/Media/logo.png&quot; height=&quot;75&quot;/&gt;&lt;/h1&gt;

![NPM Downloads](https://img.shields.io/npm/dw/%40whiskeysockets%2Fbaileys?label=npm&amp;color=%23CB3837)
![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/whiskeysockets/baileys)
![Discord](https://img.shields.io/discord/725839806084546610?label=discord&amp;color=%235865F2)

Baileys is a WebSockets-based TypeScript library for interacting with the WhatsApp Web API.

# Usage
A new guide has been posted at https://baileys.wiki.

# Sponsor
If you&#039;d like to financially support this project, you can do so by supporting the current maintainer [here](https://purpshell.dev/sponsor).

# Disclaimer
This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates.
The official WhatsApp website can be found at whatsapp.com. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners.

The maintainers of Baileys do not in any way condone the use of this application in practices that violate the Terms of Service of WhatsApp. The maintainers of this application call upon the personal responsibility of its users to use this application in a fair way, as it is intended to be used.
Use at your own discretion. Do not spam people with this. We discourage any stalkerware, bulk or automated messaging usage.

# License
Copyright (c) 2025 Rajeh Taher/WhiskeySockets

Licensed under the MIT License:
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &quot;Software&quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

Thus, the maintainers of the project can&#039;t be held liable for any potential misuse of this project.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[CesiumGS/cesium]]></title>
            <link>https://github.com/CesiumGS/cesium</link>
            <guid>https://github.com/CesiumGS/cesium</guid>
            <pubDate>Fri, 11 Apr 2025 00:04:53 GMT</pubDate>
            <description><![CDATA[An open-source JavaScript library for world-class 3D globes and maps üåé]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/CesiumGS/cesium">CesiumGS/cesium</a></h1>
            <p>An open-source JavaScript library for world-class 3D globes and maps üåé</p>
            <p>Language: JavaScript</p>
            <p>Stars: 13,533</p>
            <p>Forks: 3,580</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre># CesiumJS

[![Build Status](https://github.com/CesiumGS/cesium/actions/workflows/dev.yml/badge.svg)](https://github.com/CesiumGS/cesium/actions/workflows/dev.yml)
[![npm](https://img.shields.io/npm/v/cesium)](https://www.npmjs.com/package/cesium)
[![Docs](https://img.shields.io/badge/docs-online-orange.svg)](https://cesium.com/learn/)

![Cesium](https://github.com/CesiumGS/cesium/wiki/logos/Cesium_Logo_Color.jpg)

CesiumJS is a JavaScript library for creating 3D globes and 2D maps in a web browser without a plugin. It uses WebGL for hardware-accelerated graphics, and is cross-platform, cross-browser, and tuned for dynamic-data visualization.

Built on open formats, CesiumJS is designed for robust interoperability and scaling for massive datasets.

---

[**Examples**](https://sandcastle.cesium.com/) :earth_asia: [**Docs**](https://cesium.com/learn/cesiumjs-learn/) :earth_americas: [**Website**](https://cesium.com/cesiumjs) :earth_africa: [**Forum**](https://community.cesium.com/) :earth_asia: [**User Stories**](https://cesium.com/user-stories/)

---

## :rocket: Get started

Visit the [Downloads page](https://cesium.com/downloads/) to download a pre-built copy of CesiumJS.

### npm &amp; yarn

If you‚Äôre building your application using a module bundler such as Webpack, Parcel, or Rollup, you can install CesiumJS via the [`cesium` npm package](https://www.npmjs.com/package/cesium):

```sh
npm install cesium --save
```

Then, import CesiumJS in your app code. Import individual modules to benefit from tree shaking optimizations through most build tools:

```js
import { Viewer } from &quot;cesium&quot;;
import &quot;cesium/Build/Cesium/Widgets/widgets.css&quot;;

const viewer = new Viewer(&quot;cesiumContainer&quot;);
```

In addition to the `cesium` package, CesiumJS is also [distributed as scoped npm packages for better dependency management](https://cesium.com/blog/2022/12/07/modular-structure-in-cesiumjs/):

- [`@cesium/engine`](./packages/engine/README.md) - CesiumJS&#039;s core, rendering, and data APIs
- [`@cesium/widgets`](./packages/widgets/README.md) - A widgets library for use with CesiumJS

### What next?

See our [Quickstart Guide](https://cesium.com/learn/cesiumjs-learn/cesiumjs-quickstart/) for more information on getting a CesiumJS app up and running.

Instructions for serving local data are in the CesiumJS
[Offline Guide](./Documentation/OfflineGuide/README.md).

Interested in contributing? See [CONTRIBUTING.md](CONTRIBUTING.md). :heart:

## :green_book: License

[Apache 2.0](http://www.apache.org/licenses/LICENSE-2.0.html). CesiumJS is free for both commercial and non-commercial use.

## :earth_americas: Where does the Global 3D Content come from?

The Cesium platform follows an [open-core business model](https://cesium.com/why-cesium/open-ecosystem/cesium-business-model/) with open source runtime engines such as CesiumJS and optional commercial subscription to Cesium ion.

CesiumJS can stream [3D content such as terrain, imagery, and 3D Tiles from the commercial Cesium ion platform](https://cesium.com/platform/cesium-ion/content/) alongside open standards from other offline or online services. We provide Cesium ion as the quickest option for all users to get up and running, but you are free to use any combination of content sources with CesiumJS that you please.

Bring your own data for tiling, hosting, and streaming from Cesium ion. [Using Cesium ion](https://cesium.com/ion/signup/) helps support CesiumJS development.

## :white_check_mark: Features

- Stream in 3D Tiles and other standard formats from Cesium ion or another source
- Visualize and analyze on a high-precision WGS84 globe
- Share with users on desktop or mobile

See more in the [CesiumJS Features Checklist](https://github.com/CesiumGS/cesium/wiki/CesiumJS-Features-Checklist).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[NaiboWang/EasySpider]]></title>
            <link>https://github.com/NaiboWang/EasySpider</link>
            <guid>https://github.com/NaiboWang/EasySpider</guid>
            <pubDate>Fri, 11 Apr 2025 00:04:52 GMT</pubDate>
            <description><![CDATA[A visual no-code/code-free web crawler/spiderÊòìÈááÈõÜÔºö‰∏Ä‰∏™ÂèØËßÜÂåñÊµèËßàÂô®Ëá™Âä®ÂåñÊµãËØï/Êï∞ÊçÆÈááÈõÜ/Áà¨Ëô´ËΩØ‰ª∂ÔºåÂèØ‰ª•Êó†‰ª£Á†ÅÂõæÂΩ¢ÂåñÁöÑËÆæËÆ°ÂíåÊâßË°åÁà¨Ëô´‰ªªÂä°„ÄÇÂà´ÂêçÔºöServiceWrapperÈù¢ÂêëWebÂ∫îÁî®ÁöÑÊô∫ËÉΩÂåñÊúçÂä°Â∞ÅË£ÖÁ≥ªÁªü„ÄÇ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/NaiboWang/EasySpider">NaiboWang/EasySpider</a></h1>
            <p>A visual no-code/code-free web crawler/spiderÊòìÈááÈõÜÔºö‰∏Ä‰∏™ÂèØËßÜÂåñÊµèËßàÂô®Ëá™Âä®ÂåñÊµãËØï/Êï∞ÊçÆÈááÈõÜ/Áà¨Ëô´ËΩØ‰ª∂ÔºåÂèØ‰ª•Êó†‰ª£Á†ÅÂõæÂΩ¢ÂåñÁöÑËÆæËÆ°ÂíåÊâßË°åÁà¨Ëô´‰ªªÂä°„ÄÇÂà´ÂêçÔºöServiceWrapperÈù¢ÂêëWebÂ∫îÁî®ÁöÑÊô∫ËÉΩÂåñÊúçÂä°Â∞ÅË£ÖÁ≥ªÁªü„ÄÇ</p>
            <p>Language: JavaScript</p>
            <p>Stars: 38,388</p>
            <p>Forks: 4,721</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[SuperSimpleDev/javascript-course]]></title>
            <link>https://github.com/SuperSimpleDev/javascript-course</link>
            <guid>https://github.com/SuperSimpleDev/javascript-course</guid>
            <pubDate>Fri, 11 Apr 2025 00:04:51 GMT</pubDate>
            <description><![CDATA[Watch the course: https://youtu.be/EerdGm-ehJQ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/SuperSimpleDev/javascript-course">SuperSimpleDev/javascript-course</a></h1>
            <p>Watch the course: https://youtu.be/EerdGm-ehJQ</p>
            <p>Language: JavaScript</p>
            <p>Stars: 996</p>
            <p>Forks: 734</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre>## JavaScript Course Materials
üìö Watch the course here: https://youtu.be/EerdGm-ehJQ

1. [Exercise solutions](1-exercise-solutions)
2. [Copy of the code](2-copy-of-code) at the end of each lesson

üéì A certificate of completion is available for this course here: https://courses.supersimple.dev/courses/javascript</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[projectdiscovery/nuclei-templates]]></title>
            <link>https://github.com/projectdiscovery/nuclei-templates</link>
            <guid>https://github.com/projectdiscovery/nuclei-templates</guid>
            <pubDate>Fri, 11 Apr 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[Community curated list of templates for the nuclei engine to find security vulnerabilities.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/projectdiscovery/nuclei-templates">projectdiscovery/nuclei-templates</a></h1>
            <p>Community curated list of templates for the nuclei engine to find security vulnerabilities.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 9,960</p>
            <p>Forks: 2,779</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre>

&lt;h1 align=&quot;center&quot;&gt;
Nuclei Templates
&lt;/h1&gt;
&lt;h4 align=&quot;center&quot;&gt;Community curated list of templates for the nuclei engine to find security vulnerabilities in applications.&lt;/h4&gt;


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/projectdiscovery/nuclei-templates&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/pdnuclei&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/pdnuclei.svg?logo=twitter&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://discord.gg/projectdiscovery&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/695645237418131507.svg?logo=discord&quot;&gt;&lt;/a&gt;
&lt;/p&gt;
      
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://nuclei.projectdiscovery.io/templating-guide/&quot;&gt;Documentation&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;#-contributions&quot;&gt;Contributions&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;#-discussion&quot;&gt;Discussion&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;#-community&quot;&gt;Community&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;https://nuclei.projectdiscovery.io/faq/templates/&quot;&gt;FAQs&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;https://discord.gg/projectdiscovery&quot;&gt;Join Discord&lt;/a&gt;
&lt;/p&gt;

----

Templates are the core of the [nuclei scanner](https://github.com/projectdiscovery/nuclei) which powers the actual scanning engine.
This repository stores and houses various templates for the scanner provided by our team, as well as contributed by the community.
We hope that you also contribute by sending templates via **pull requests** or [Github issues](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=submit-template.md&amp;title=%5Bnuclei-template%5D+) to grow the list.


## Nuclei Templates overview


An overview of the nuclei template project, including statistics on unique tags, author, directory, severity, and type of templates. The table below contains the top ten statistics for each matrix; an expanded version of this is [available here](TEMPLATES-STATS.md), and also available in [JSON](TEMPLATES-STATS.json) format for integration.

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt; 

## Nuclei Templates Top 10 statistics

|    TAG    | COUNT |    AUTHOR     | COUNT | DIRECTORY  | COUNT | SEVERITY | COUNT | TYPE | COUNT |
|-----------|-------|---------------|-------|------------|-------|----------|-------|------|-------|
| cve       |  3027 | dhiyaneshdk   |  1805 | http       |  8506 | info     |  4039 | file |   417 |
| panel     |  1279 | daffainfo     |   868 | cloud      |   420 | high     |  2266 | dns  |    25 |
| xss       |  1223 | dwisiswant0   |   804 | file       |   417 | medium   |  2132 |      |       |
| wordpress |  1118 | ritikchaddha  |   573 | dast       |   255 | critical |  1266 |      |       |
| exposure  |  1071 | princechaddha |   571 | workflows  |   192 | low      |   304 |      |       |
| wp-plugin |   977 | pussycat0x    |   479 | code       |   167 | unknown  |    57 |      |       |
| osint     |   807 | pikpikcu      |   352 | network    |   140 |          |       |      |       |
| tech      |   767 | pdteam        |   304 | javascript |    78 |          |       |      |       |
| lfi       |   750 | ricardomaia   |   249 | ssl        |    36 |          |       |      |       |
| misconfig |   728 | geeknik       |   235 | dns        |    22 |          |       |      |       |

**797 directories, 10581 files**.

&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

üìñ Documentation
-----

Please navigate to https://nuclei.projectdiscovery.io for detailed documentation to **build** new or your own **custom** templates.
We have also added a set of templates to help you understand how things work.

üí™ Contributions
-----

Nuclei-templates is powered by major contributions from the community.
[Template contributions ](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=submit-template.md&amp;title=%5Bnuclei-template%5D+), [Feature Requests](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=feature_request.md&amp;title=%5BFeature%5D+) and [Bug Reports](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=bug_report.md&amp;title=%5BBug%5D+) are more than welcome.

![Alt](https://repobeats.axiom.co/api/embed/55ee65543bb9a0f9c797626c4e66d472a517d17c.svg &quot;Repobeats analytics image&quot;)

üí¨ Discussion
-----

Have questions / doubts / ideas to discuss?
Feel free to open a discussion on [Github discussions](https://github.com/projectdiscovery/nuclei-templates/discussions) board.

üë®‚Äçüíª Community
-----

You are welcome to join the active [Discord Community](https://discord.gg/projectdiscovery) to discuss directly with project maintainers and share things with others around security and automation.
Additionally, you may follow us on [Twitter](https://twitter.com/pdnuclei) to be updated on all the things about Nuclei.


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=projectdiscovery/nuclei-templates&amp;max=300&quot;&gt;
&lt;/a&gt;
&lt;/p&gt;


Thanks again for your contribution and keeping this community vibrant. :heart:
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[usebruno/bruno]]></title>
            <link>https://github.com/usebruno/bruno</link>
            <guid>https://github.com/usebruno/bruno</guid>
            <pubDate>Fri, 11 Apr 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[Opensource IDE For Exploring and Testing Api's (lightweight alternative to postman/insomnia)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/usebruno/bruno">usebruno/bruno</a></h1>
            <p>Opensource IDE For Exploring and Testing Api's (lightweight alternative to postman/insomnia)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 32,430</p>
            <p>Forks: 1,533</p>
            <p>Stars today: 27 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[brave/brave-browser]]></title>
            <link>https://github.com/brave/brave-browser</link>
            <guid>https://github.com/brave/brave-browser</guid>
            <pubDate>Fri, 11 Apr 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[Brave browser for Android, iOS, Linux, macOS, Windows.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/brave/brave-browser">brave/brave-browser</a></h1>
            <p>Brave browser for Android, iOS, Linux, macOS, Windows.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 19,049</p>
            <p>Forks: 2,534</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre>![Brave Browser](./docs/source/_static/Brave.svg)

## Overview

This repository holds the build tools needed to build the Brave desktop browser for macOS, Windows, and Linux.  In particular, it fetches and syncs code from the projects defined in `package.json` and `src/brave/DEPS`:

  - [Chromium](https://chromium.googlesource.com/chromium/src.git)
    - Fetches code via `depot_tools`.
    - Sets the branch for Chromium (ex: 65.0.3325.181).
  - [brave-core](https://github.com/brave/brave-core)
    - Mounted at `src/brave`.
    - Maintains patches for 3rd party Chromium code.
  - [adblock-rust](https://github.com/brave/adblock-rust)
    - Implements Brave&#039;s ad-block engine.
    - Linked through [brave/adblock-rust-ffi](https://github.com/brave/brave-core/tree/master/components/adblock_rust_ffi).

## Downloads

You can [visit our website](https://brave.com/download) to get the latest stable release.

## Contributing

Please see the [contributing guidelines](./CONTRIBUTING.md).

Our [Wiki](https://github.com/brave/brave-browser/wiki) also has some useful technical information.

## Community

[Join the Q&amp;A community](https://community.brave.com/) if you&#039;d like to get more involved with Brave. You can [ask for help](https://community.brave.com/c/support-and-troubleshooting),
[discuss features you&#039;d like to see](https://community.brave.com/c/brave-feature-requests), and a lot more. We&#039;d love to have your help so that we can continue improving Brave.

Help us translate Brave to your language by submitting translations at https://explore.transifex.com/brave/brave_en/.

Follow [@brave](https://x.com/brave) on X for important news and announcements.

## Install prerequisites

Follow the instructions for your platform:

- [macOS](https://github.com/brave/brave-browser/wiki/macOS-Development-Environment)
- [iOS](https://github.com/brave/brave-browser/wiki/iOS-Development-Environment)
- [Windows](https://github.com/brave/brave-browser/wiki/Windows-Development-Environment)
- [Linux](https://github.com/brave/brave-browser/wiki/Linux-Development-Environment)
- [Android](https://github.com/brave/brave-browser/wiki/Android-Development-Environment)

## Clone and initialize the repo

Once you have the prerequisites installed, you can get the code and initialize the build environment.

```bash
git clone git@github.com:brave/brave-core.git path-to-your-project-folder/src/brave
cd path-to-your-project-folder/src/brave
npm install

# the Chromium source is downloaded, which has a large history (gigabytes of data)
# this might take really long to finish depending on internet speed

npm run init
```
brave-core based android builds should use `npm run init -- --target_os=android --target_arch=arm` (or whichever CPU type you want to build for)
brave-core based iOS builds should use `npm run init -- --target_os=ios`

You can also set the target_os and target_arch for init and build using:

```
npm config set target_os android
npm config set target_arch arm
```

Additional parameters needed to build are documented at https://github.com/brave/brave-browser/wiki/Build-configuration

Internal developers can find more information at https://github.com/brave/devops/wiki/%60.env%60-config-for-Brave-Developers

## Build Brave
The default build type is component.

```
# start the component build compile
npm run build
```

To do a release build:

```
# start the release compile
npm run build Release
```

brave-core based android builds should use `npm run build -- --target_os=android --target_arch=arm` or set the npm config variables as specified above for `init`

brave-core based iOS builds should use the Xcode project found in `ios/brave-ios/App`. You can open this project directly or run `npm run ios_bootstrap -- --open_xcodeproj` to have it opened in Xcode. See the [iOS Developer Environment](https://github.com/brave/brave-browser/wiki/iOS-Development-Environment#Building) for more information on iOS builds.

### Build Configurations

Running a release build with `npm run build Release` can be very slow and use a lot of RAM, especially on Linux with the Gold LLVM plugin.

To run a statically linked build (takes longer to build, but starts faster):

```bash
npm run build -- Static
```

To run a debug build (Component build with is_debug=true):

```bash
npm run build -- Debug
```
NOTE: the build will take a while to complete. Depending on your processor and memory, it could potentially take a few hours.

## Run Brave
To start the build:

`npm start [Release|Component|Static|Debug]`

# Update Brave

`npm run sync -- [--force] [--init] [--create] [brave_core_ref]`

**This will attempt to stash your local changes in brave-core, but it&#039;s safer to commit local changes before running this**

`npm run sync` will (depending on the below flags):

1. üì• Update sub-projects (chromium, brave-core) to latest commit of a git ref (e.g. tag or branch)
2. ü§ï Apply patches
3. üîÑ Update gclient DEPS dependencies
4. ‚è© Run hooks (e.g. to perform `npm install` on child projects)

| flag | Description |
|---|---|
|`[no flags]`|updates chromium if needed and re-applies patches. If the chromium version did not change, it will only re-apply patches that have changed. Will update child dependencies **only if any project needed updating during this script run**. &lt;br&gt; **Use this if you want the script to manage keeping you up to date instead of pulling or switching branches manually. **|
|`--force`|updates both _Chromium_ and _brave-core_ to the latest remote commit for the current brave-core branch and the _Chromium_ ref specified in brave-browser/package.json (e.g. `master` or `74.0.0.103`). Will re-apply all patches. Will force update all child dependencies. &lt;br&gt; **Use this if you&#039;re having trouble and want to force the branches back to a known state. **|
|`--init`|force update both _Chromium_ and _brave-core_ to the versions specified in brave-browser/package.json and force updates all dependent repos - same as `npm run init`|
|`--sync_chromium (true/false)`|Will force or skip the chromium version update when applicable. Useful if you want to avoid a minor update when not ready for the larger build time a chromium update may result in. A warning will be output about the current code state expecting a different chromium version. Your build may fail as a result.|
|`-D, --delete_unused_deps`|Will delete from the working copy any dependencies that have been removed since the last sync. Mimics `gclient sync -D`.|

Run `npm run sync brave_core_ref` to checkout the specified _brave-core_ ref and update all dependent repos including chromium if needed.

## Scenarios

#### Create a new branch:
```bash
brave-browser&gt; cd src/brave
brave-browser/src/brave&gt; git checkout -b branch_name
```

#### Checkout an existing branch or tag:
```bash
brave-browser/src/brave&gt; git fetch origin
brave-browser/src/brave&gt; git checkout [-b] branch_name
brave-browser/src/brave&gt; npm run sync
...Updating 2 patches...
...Updating child dependencies...
...Running hooks...
```

#### Update the current branch to the latest remote:
```bash
brave-browser/src/brave&gt; git pull
brave-browser/src/brave&gt; npm run sync
...Updating 2 patches...
...Updating child dependencies...
...Running hooks...
```

#### Reset to latest brave-browser master and brave-core master (via `init`, will always result in a longer build and will remove any pending changes in your brave-core working directory):
```bash
brave-browser&gt; git checkout master
brave-browser&gt; git pull
brave-browser&gt; npm run sync -- --init
```

#### When you know that DEPS didn&#039;t change, but .patch files did (quickest attempt to perform a mini-sync before a build):
```bash
brave-browser/src/brave&gt; git checkout featureB
brave-browser/src/brave&gt; git pull
brave-browser/src/brave&gt; cd ../..
brave-browser&gt; npm run apply_patches
...Applying 2 patches...
```

# Enabling third-party APIs:

1. **Google Safe Browsing**: Get an API key with SafeBrowsing API enabled from https://console.developers.google.com/. Update the `GOOGLE_API_KEY` environment variable with your key as per https://www.chromium.org/developers/how-tos/api-keys to enable Google SafeBrowsing.

# Development

- [Security rules from Chromium](https://chromium.googlesource.com/chromium/src/+/refs/heads/main/docs/security/rules.md)
- [IPC review guidelines](https://chromium.googlesource.com/chromium/src/+/HEAD/docs/security/ipc-reviews.md) (in particular [this reference](https://docs.google.com/document/d/1Kw4aTuISF7csHnjOpDJGc7JYIjlvOAKRprCTBVWw_E4/edit#heading=h.84bpc1e9z1bg))
- [Brave&#039;s internal security guidelines](https://github.com/brave/internal/wiki/Pull-request-security-audit-checklist) (for employees only)
- [Rust usage](https://github.com/brave/brave-core/blob/master/docs/rust.md)

# Troubleshooting

See [Troubleshooting](https://github.com/brave/brave-browser/wiki/Troubleshooting) for solutions to common problems.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[vercel/next.js]]></title>
            <link>https://github.com/vercel/next.js</link>
            <guid>https://github.com/vercel/next.js</guid>
            <pubDate>Fri, 11 Apr 2025 00:04:47 GMT</pubDate>
            <description><![CDATA[The React Framework]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vercel/next.js">vercel/next.js</a></h1>
            <p>The React Framework</p>
            <p>Language: JavaScript</p>
            <p>Stars: 130,964</p>
            <p>Forks: 28,108</p>
            <p>Stars today: 47 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[openlayers/openlayers]]></title>
            <link>https://github.com/openlayers/openlayers</link>
            <guid>https://github.com/openlayers/openlayers</guid>
            <pubDate>Fri, 11 Apr 2025 00:04:46 GMT</pubDate>
            <description><![CDATA[OpenLayers]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/openlayers/openlayers">openlayers/openlayers</a></h1>
            <p>OpenLayers</p>
            <p>Language: JavaScript</p>
            <p>Stars: 11,788</p>
            <p>Forks: 3,080</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre># OpenLayers

[OpenLayers](https://openlayers.org/) is a high-performance, feature-packed library for creating interactive maps on the web. It can display map tiles, vector data and markers loaded from any source on any web page. OpenLayers has been developed to further the use of geographic information of all kinds. It is completely free, Open Source JavaScript, released under the [BSD 2-Clause License](https://opensource.org/licenses/BSD-2-Clause).

## Getting Started

Install the [`ol` package](https://www.npmjs.com/package/ol):

```
npm install ol
```

Import just what you need for your application:

```js
import Map from &#039;ol/Map&#039;;
import View from &#039;ol/View&#039;;
import TileLayer from &#039;ol/layer/Tile&#039;;
import XYZ from &#039;ol/source/XYZ&#039;;

new Map({
  target: &#039;map&#039;,
  layers: [
    new TileLayer({
      source: new XYZ({
        url: &#039;https://tile.openstreetmap.org/{z}/{x}/{y}.png&#039;
      })
    })
  ],
  view: new View({
    center: [0, 0],
    zoom: 2
  })
});
```

See the following examples for more detail on bundling OpenLayers with your application:

 * Using [Vite](https://github.com/openlayers/ol-vite)
 * Using [Rollup](https://github.com/openlayers/ol-rollup)
 * Using [webpack](https://github.com/openlayers/ol-webpack)
 * Using [Parcel](https://github.com/openlayers/ol-parcel)

For more detail on quick prototyping without the use of a Node.js based setup, see the [Skypack](https://github.com/openlayers/ol-skypack) example.

## Sponsors

OpenLayers appreciates contributions of all kinds.  We especially want to thank our fiscal sponsors who contribute to ongoing project maintenance.

&lt;br&gt;

[![Pozi logo](./sponsor-logos/pozi.png)](https://pozi.com/)

&gt; Pozi helps connect communities through spatial thinking.
&gt; We love Openlayers and it forms a core part of our platform.
&gt; https://pozi.com/ https://app.pozi.com/

&lt;br&gt;

[![yey&#039;maps logo](./sponsor-logos/yeymaps.png)](https://www.yeymaps.io/)

&gt; yey&#039;maps is a scalable cloud GIS suite that is developed with the
&gt; powerful Openlayers API and the GDAL library.
&gt; https://www.yeymaps.io/

&lt;br&gt;

[![ela-compil logo](./sponsor-logos/ela-compil.png)](https://ela.pl/)

&gt; We develop leading Physical Security Information Management (PSIM) software.
&gt; OpenLayers is the core of our map engine and we love it! 
&gt; https://ela.pl/

&lt;br&gt;

[![Ubigu Oy logo](./sponsor-logos/ubigu-oy.svg)](https://www.ubigu.fi/)

&gt; We advance holistic utilization and availability of spatial information,
&gt; for a better planned, built and managed society.
&gt; https://www.ubigu.fi/

&lt;br&gt;

[![Scribble Maps logo](./sponsor-logos/scribble-maps.png)](https://www.scribblemaps.com/)

&gt; Build custom maps and identify insights across real estate, engineering, research, business, exploration, construction, manufacturing - and so much more.
&gt; https://www.scribblemaps.com/

&lt;br&gt;

See our [GitHub sponsors page](https://github.com/sponsors/openlayers) or [Open Collective](https://opencollective.com/openlayers/contribute/sponsors-214/checkout) if you too are interested in becoming a regular sponsor.

## TypeScript support

The [ol package](https://npmjs.com/package/ol) includes auto-generated TypeScript declarations as `*.d.ts` files.

## Supported Browsers

OpenLayers runs on all modern browsers (with greater than 1% global usage).  This includes Chrome, Firefox, Safari and Edge. For older browsers, polyfills ([Fastly](https://polyfill-fastly.io) or [Cloudflare](https://cdnjs.cloudflare.com/polyfill)) will likely need to be added.

## Documentation

Check out the [hosted examples](https://openlayers.org/en/latest/examples/), the [workshop](https://openlayers.org/workshop/) or the [API documentation](https://openlayers.org/en/latest/apidoc/).

## Bugs

Please use the [GitHub issue tracker](https://github.com/openlayers/openlayers/issues) for all bugs and feature requests. Before creating a new issue, do a quick search to see if the problem has been reported already.

## Contributing

Please see our guide on [contributing](CONTRIBUTING.md) if you&#039;re interested in getting involved.

## Community

- Need help? Find it on [Stack Overflow using the tag &#039;openlayers&#039;](https://stackoverflow.com/questions/tagged/openlayers)
- Follow [@openlayers](https://twitter.com/openlayers) on Twitter

![Test Status](https://github.com/openlayers/openlayers/workflows/Test/badge.svg)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[marktext/marktext]]></title>
            <link>https://github.com/marktext/marktext</link>
            <guid>https://github.com/marktext/marktext</guid>
            <pubDate>Fri, 11 Apr 2025 00:04:45 GMT</pubDate>
            <description><![CDATA[üìùA simple and elegant markdown editor, available for Linux, macOS and Windows.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/marktext/marktext">marktext/marktext</a></h1>
            <p>üìùA simple and elegant markdown editor, available for Linux, macOS and Windows.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 49,225</p>
            <p>Forks: 3,610</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;static/logo-small.png&quot; alt=&quot;MarkText&quot; width=&quot;100&quot; height=&quot;100&quot;&gt;&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;MarkText&lt;/h1&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://twitter.com/intent/tweet?via=marktextme&amp;url=https://github.com/marktext/marktext/&amp;text=What%20do%20you%20want%20to%20say%20to%20app?&amp;hashtags=happyMarkText&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/twitter/url/https/github.com/marktext/marktext.svg?style=for-the-badge&quot; alt=&quot;twitter&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;div align=&quot;center&quot;&gt;
  &lt;strong&gt;:high_brightness: Next generation markdown editor :crescent_moon:&lt;/strong&gt;&lt;br&gt;
  A simple and elegant open-source markdown editor that focused on speed and usability.&lt;br&gt;
  &lt;sub&gt;Available for Linux, macOS and Windows.&lt;/sub&gt;
&lt;/div&gt;

&lt;br&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;!-- License --&gt;
  &lt;a href=&quot;LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/license/marktext/marktext.svg&quot; alt=&quot;LICENSE&quot;&gt;
  &lt;/a&gt;
  &lt;!-- Build Status --&gt;
  &lt;a href=&quot;https://travis-ci.org/marktext/marktext/&quot;&gt;
    &lt;img src=&quot;https://travis-ci.org/marktext/marktext.svg?branch=master&quot; alt=&quot;build&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://ci.appveyor.com/project/marktext/marktext/branch/master&quot;&gt;
    &lt;img src=&quot;https://ci.appveyor.com/api/projects/status/l4gxgydj0i95hmxg/branch/master?svg=true&quot; alt=&quot;build&quot;&gt;
  &lt;/a&gt;
  &lt;!-- Downloads total --&gt;
  &lt;a href=&quot;https://github.com/marktext/marktext/releases&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/downloads/marktext/marktext/total.svg&quot; alt=&quot;total download&quot;&gt;
  &lt;/a&gt;
  &lt;!-- Downloads latest release --&gt;
  &lt;a href=&quot;https://github.com/marktext/marktext/releases/latest&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/downloads/marktext/marktext/v0.17.1/total.svg&quot; alt=&quot;latest download&quot;&gt;
  &lt;/a&gt;
  &lt;!-- sponsors --&gt;
  &lt;a href=&quot;https://opencollective.com/marktext&quot;&gt;
    &lt;img src=&quot;https://opencollective.com/marktext/tiers/silver-sponsors/badge.svg?label=SilverSponsors&amp;color=brightgreen&quot; alt=&quot;sponsors&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;h3&gt;
    &lt;a href=&quot;https://github.com/marktext/marktext&quot;&gt;
      Website
    &lt;/a&gt;
    &lt;span&gt; | &lt;/span&gt;
    &lt;a href=&quot;https://github.com/marktext/marktext#features&quot;&gt;
      Features
    &lt;/a&gt;
    &lt;span&gt; | &lt;/span&gt;
    &lt;a href=&quot;https://github.com/marktext/marktext#download-and-installation&quot;&gt;
      Downloads
    &lt;/a&gt;
    &lt;span&gt; | &lt;/span&gt;
    &lt;a href=&quot;https://github.com/marktext/marktext#development&quot;&gt;
      Development
    &lt;/a&gt;
    &lt;span&gt; | &lt;/span&gt;
    &lt;a href=&quot;https://github.com/marktext/marktext#contribution&quot;&gt;
      Contribution
    &lt;/a&gt;
  &lt;/h3&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;sub&gt;Translations:&lt;/sub&gt;
  &lt;a href=&quot;docs/i18n/zh_cn.md#readme&quot;&gt;
    &lt;span&gt;:cn:&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;docs/i18n/zh_tw.md#readme&quot;&gt;
    &lt;span&gt;:taiwan:&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;docs/i18n/pl.md#readme&quot;&gt;
    &lt;span&gt;:poland:&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;docs/i18n/ja.md#readme&quot;&gt;
    &lt;span&gt;:jp:&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;docs/i18n/french.md#readme&quot;&gt;
    &lt;span&gt;:fr:&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;docs/i18n/tr.md#readme&quot;&gt;
    &lt;span&gt;:tr:&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;docs/i18n/spanish.md#readme&quot;&gt;
    &lt;span&gt;:es:&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;docs/i18n/pt.md#readme&quot;&gt;
    &lt;span&gt;:portugal:&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;docs/i18n/ko.md#readme&quot;&gt;
    &lt;span&gt;:kr:&lt;/span&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;sub&gt;This Markdown editor that could. Built with ‚ù§Ô∏é by
    &lt;a href=&quot;https://github.com/Jocs&quot;&gt;Jocs&lt;/a&gt; and
    &lt;a href=&quot;https://github.com/marktext/marktext/graphs/contributors&quot;&gt;
      contributors
    &lt;/a&gt;
    .
  &lt;/sub&gt;
&lt;/div&gt;

&lt;br /&gt;

&lt;h2 align=&quot;center&quot;&gt;Supporting MarkText&lt;/h2&gt;

MarkText is an MIT licensed open source project, and the latest version will always be downloadable for free from the GitHub release page. MarkText is still in development, and its development is inseparable from all sponsors. I hope you join them:

- [Become a backer or sponsor on Patreon](https://www.patreon.com/ranluo) or [One time donation](https://github.com/Jocs/sponsor.me)
- [Become a backer or sponsor on Open Collective](https://opencollective.com/marktext)

##### What&#039;s the difference between Patreon and Open Collective?

Patreon: Funds will be directly sponsored to Luo Ran (@jocs) who created MarkText and continues to maintain it.
Open Collective: All expenses are transparent. The funds will be used for the development and maintenance of MarkText, funding online and offline activities, and acquiring other necessary resources.
Names and company logos of all sponsors (from both Patreon and Open Collective) will appear on the official website for MarkText and in its README.md file.

**Special Sponsors**

&lt;a href=&quot;https://www.dogedoge.com/&quot;&gt;
 &lt;img src=&quot;https://www.dogedoge.com/assets/new_logo.min.png&quot; width=&quot;100&quot; height=&quot;100&quot;&gt;
&lt;/a&gt;

**Platinum Sponsors**

&lt;a href=&quot;https://opencollective.com/marktext#platinum-sponsors&quot;&gt;
 &lt;img src=&quot;https://opencollective.com/marktext/tiers/platinum-sponsors.svg?avatarHeight=36&amp;width=600&quot;&gt;
&lt;/a&gt;

**Gold Sponsors**

&lt;a href=&quot;https://opencollective.com/marktext#platinum-sponsors&quot;&gt;
  &lt;img src=&quot;https://opencollective.com/marktext/tiers/gold-sponsors.svg?avatarHeight=36&amp;width=600&quot;&gt;
&lt;/a&gt;

**Silver Sponsors**

&lt;a href=&quot;https://opencollective.com/marktext#platinum-sponsors&quot;&gt;
  &lt;img src=&quot;https://opencollective.com/marktext/tiers/silver-sponsors.svg?avatarHeight=36&amp;width=600&quot;&gt;
&lt;/a&gt;

**Bronze Sponsors**

&lt;a href=&quot;https://opencollective.com/marktext#platinum-sponsors&quot;&gt;
  &lt;img src=&quot;https://opencollective.com/marktext/tiers/bronze-sponsors.svg?avatarHeight=36&amp;width=600&quot;&gt;
&lt;/a&gt;

**Backers**

&lt;a href=&quot;https://opencollective.com/marktext#backers&quot;&gt;
  &lt;img src=&quot;https://opencollective.com/marktext/tiers/backer.svg?avatarHeight=36&amp;width=600&quot;&gt;
&lt;/a&gt;

## Screenshot

![](docs/marktext.png?raw=true)

## Features

- Realtime preview (WYSIWYG) and a clean and simple interface to get a distraction-free writing experience.
- Support [CommonMark Spec](https://spec.commonmark.org/0.29/), [GitHub Flavored Markdown Spec](https://github.github.com/gfm/) and selective support [Pandoc markdown](https://pandoc.org/MANUAL.html#pandocs-markdown).
- Markdown extensions such as math expressions (KaTeX), front matter and emojis.
- Support paragraphs and inline style shortcuts to improve your writing efficiency.
- Output **HTML** and **PDF** files.
- Various themes: **Cadmium Light**, **Material Dark** etc.
- Various editing modes: **Source Code mode**, **Typewriter mode**, **Focus mode**.
- Paste images directly from clipboard.

&lt;h4 align=&quot;center&quot;&gt;:crescent_moon:themes:high_brightness:&lt;/h4&gt;

| Cadmium Light                                     | Dark                                            |
|:-------------------------------------------------:|:-----------------------------------------------:|
| ![](docs/themeImages/cadmium-light.png?raw=true)  | ![](docs/themeImages/dark.png?raw=true)         |
| Graphite Light                                    | Material Dark                                   |
| ![](docs/themeImages/graphite-light.png?raw=true) | ![](docs/themeImages/materal-dark.png?raw=true) |
| Ulysses Light                                     | One Dark                                        |
| ![](docs/themeImages/ulysses-light.png?raw=true)  | ![](docs/themeImages/one-dark.png?raw=true)     |

&lt;h4 align=&quot;center&quot;&gt;:smile_cat:Edit modes:dog:&lt;/h4&gt;

| Source Code          | Typewriter               | Focus               |
|:--------------------:|:------------------------:|:-------------------:|
| ![](docs/source.gif) | ![](docs/typewriter.gif) | ![](docs/focus.gif) |

## Why make another editor?

1. I love writing. I have used a lot of markdown editors, yet there is still not an editor that can fully meet my needs. I don&#039;t like to be disturbed when I write by some unbearable bug. **MarkText** uses virtual DOM to render pages which has the added benefits of being highly efficient and being open source. That way anyone who loves markdown and writing can use MarkText.
2. As mentioned above, **MarkText** is completely free and open source and will be open source forever. We hope that all markdown lovers will contribute their own code and help develop **MarkText** into a popular markdown editor.
3. There are many markdown editors and all have their own merits, some have features which others don&#039;t. It&#039;s difficult to satisfy each markdown users&#039; needs but we hope **MarkText** will be able to satisfy each markdown user as much as possible. Although the latest **MarkText** is still not perfect, we will try to make it as best as we possibly can.

## Download and Installation

![platform](https://img.shields.io/static/v1.svg?label=Platform&amp;message=Linux-64%20|%20macOS-64%20|%20Win-32%20|%20Win-64&amp;style=for-the-badge)

| ![](https://raw.githubusercontent.com/wiki/ryanoasis/nerd-fonts/screenshots/v1.0.x/mac-pass-sm.png)                                                                                                  | ![](https://raw.githubusercontent.com/wiki/ryanoasis/nerd-fonts/screenshots/v1.0.x/windows-pass-sm.png)                                                                                                          | ![](https://raw.githubusercontent.com/wiki/ryanoasis/nerd-fonts/screenshots/v1.0.x/linux-pass-sm.png)                                                                                                                        |
|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|
| [![latest version](https://img.shields.io/github/downloads/marktext/marktext/latest/marktext-x64.dmg.svg)](https://github.com/marktext/marktext/releases/download/v0.17.1/marktext-x64.dmg) | [![latest version](https://img.shields.io/github/downloads/marktext/marktext/latest/marktext-setup.exe.svg)](https://github.com/marktext/marktext/releases/download/v0.17.1/marktext-setup.exe) | [![latest version](https://img.shields.io/github/downloads/marktext/marktext/latest/marktext-x86_64.AppImage.svg)](https://github.com/marktext/marktext/releases/download/v0.17.1/marktext-x86_64.AppImage) |

Want to see new features of the latest version? Please refer to [CHANGELOG](.github/CHANGELOG.md).

#### macOS

You can either download the latest `marktext-%version%.dmg` from the [release page](https://github.com/marktext/marktext/releases/latest) or install MarkText using [**homebrew cask**](https://github.com/caskroom/homebrew-cask). To use Homebrew-Cask you just need to have [Homebrew](https://brew.sh/) installed.

```bash
brew install --cask mark-text
```

#### Windows

Simply download and install MarkText via setup wizard (`marktext-setup-%version%.exe`) and choose whether to install per-user or machine wide. Alternatively, install MarkText using a package manager such as [Chocolatey](https://chocolatey.org/) or [Winget](https://docs.microsoft.com/en-us/windows/package-manager/winget/).

To use Chocolatey, you need to have [Chocolatey](https://chocolatey.org/install) installed:

```bash
choco install marktext
```

To use Winget, you need to have [Winget](https://docs.microsoft.com/en-us/windows/package-manager/winget/#install-winget) installed:

```bash
winget install marktext
```

#### Linux

Please follow the [Linux installation instructions](docs/LINUX.md).

#### Other

All binaries for Linux, macOS and Windows can be downloaded from the [release page](https://github.com/marktext/marktext/releases/latest). If a version is unavailable for your system, then please open an [issue](https://github.com/marktext/marktext/issues).

## Development

If you wish to build MarkText yourself, please check out our [build instructions](docs/dev/BUILD.md).

- [User documentation](docs/README.md)
- [Developer documentation](docs/dev/README.md)

If you have any questions regarding MarkText, you are welcome to write an issue. When doing so please use the default format found when opening an issue. Of course, if you submit a PR directly, it will be greatly appreciated.

## Integrations

- [Alfred Workflow](http://www.packal.org/workflow/mark-text): A Workflow for the macOS app Alfred: Use &quot;mt&quot; to open files/folder with MarkText.

## Contribution

MarkText is in development, please make sure to read the [Contributing Guide](CONTRIBUTING.md) before making a pull request. Want to add some features to MarkText? Refer to our [roadmap](https://github.com/marktext/marktext/projects) and open issues.


## Contributors

Thank you to all the people who have already contributed to MarkText[[contributors](https://github.com/marktext/marktext/graphs/contributors)].

Special thanks to @[Yasujizr](https://github.com/Yasujizr) who designed the MarkText logo.

&lt;a href=&quot;https://github.com/marktext/marktext/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/marktext/contributors.svg?width=890&quot; /&gt;&lt;/a&gt;

## License

[**MIT**](LICENSE).

[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fmarktext%2Fmarktext.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2Fmarktext%2Fmarktext?ref=badge_large)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>