<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Fri, 04 Jul 2025 00:04:40 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[mrdoob/three.js]]></title>
            <link>https://github.com/mrdoob/three.js</link>
            <guid>https://github.com/mrdoob/three.js</guid>
            <pubDate>Fri, 04 Jul 2025 00:04:40 GMT</pubDate>
            <description><![CDATA[JavaScript 3D Library.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mrdoob/three.js">mrdoob/three.js</a></h1>
            <p>JavaScript 3D Library.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 107,235</p>
            <p>Forks: 35,856</p>
            <p>Stars today: 190 stars today</p>
            <h2>README</h2><pre># three.js

[![NPM Package][npm]][npm-url]
[![Build Size][build-size]][build-size-url]
[![NPM Downloads][npm-downloads]][npmtrends-url]
[![Discord][discord]][discord-url]
[![DeepWiki][deepwiki]][deepwiki-url]

#### JavaScript 3D library

The aim of the project is to create an easy-to-use, lightweight, cross-browser, general-purpose 3D library. The current builds only include WebGL and WebGPU renderers but SVG and CSS3D renderers are also available as addons.

[Examples](https://threejs.org/examples/) &amp;mdash;
[Docs](https://threejs.org/docs/) &amp;mdash;
[Manual](https://threejs.org/manual/) &amp;mdash;
[Wiki](https://github.com/mrdoob/three.js/wiki) &amp;mdash;
[Migrating](https://github.com/mrdoob/three.js/wiki/Migration-Guide) &amp;mdash;
[Questions](https://stackoverflow.com/questions/tagged/three.js) &amp;mdash;
[Forum](https://discourse.threejs.org/) &amp;mdash;
[Discord](https://discord.gg/56GBJwAnUS)

### Usage

This code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a `WebGL` renderer for the scene and camera, and it adds that viewport to the `document.body` element. Finally, it animates the cube within the scene for the camera.

```javascript
import * as THREE from &#039;three&#039;;

const width = window.innerWidth, height = window.innerHeight;

// init

const camera = new THREE.PerspectiveCamera( 70, width / height, 0.01, 10 );
camera.position.z = 1;

const scene = new THREE.Scene();

const geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );
const material = new THREE.MeshNormalMaterial();

const mesh = new THREE.Mesh( geometry, material );
scene.add( mesh );

const renderer = new THREE.WebGLRenderer( { antialias: true } );
renderer.setSize( width, height );
renderer.setAnimationLoop( animate );
document.body.appendChild( renderer.domElement );

// animation

function animate( time ) {

	mesh.rotation.x = time / 2000;
	mesh.rotation.y = time / 1000;

	renderer.render( scene, camera );

}
```

If everything goes well, you should see [this](https://jsfiddle.net/v98k6oze/).

### Cloning this repository

Cloning the repo with all its history results in a ~2 GB download. If you don&#039;t need the whole history you can use the `depth` parameter to significantly reduce download size.

```sh
git clone --depth=1 https://github.com/mrdoob/three.js.git
```

### Change log

[Releases](https://github.com/mrdoob/three.js/releases)


[npm]: https://img.shields.io/npm/v/three
[npm-url]: https://www.npmjs.com/package/three
[build-size]: https://badgen.net/bundlephobia/minzip/three
[build-size-url]: https://bundlephobia.com/result?p=three
[npm-downloads]: https://img.shields.io/npm/dw/three
[npmtrends-url]: https://www.npmtrends.com/three
[discord]: https://img.shields.io/discord/685241246557667386
[discord-url]: https://discord.gg/56GBJwAnUS
[deepwiki]: https://deepwiki.com/badge.svg
[deepwiki-url]: https://deepwiki.com/mrdoob/three.js

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[swagger-api/swagger-ui]]></title>
            <link>https://github.com/swagger-api/swagger-ui</link>
            <guid>https://github.com/swagger-api/swagger-ui</guid>
            <pubDate>Fri, 04 Jul 2025 00:04:39 GMT</pubDate>
            <description><![CDATA[Swagger UI is a collection of HTML, JavaScript, and CSS assets that dynamically generate beautiful documentation from a Swagger-compliant API.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/swagger-api/swagger-ui">swagger-api/swagger-ui</a></h1>
            <p>Swagger UI is a collection of HTML, JavaScript, and CSS assets that dynamically generate beautiful documentation from a Swagger-compliant API.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 27,667</p>
            <p>Forks: 9,131</p>
            <p>Stars today: 38 stars today</p>
            <h2>README</h2><pre># &lt;img src=&quot;https://raw.githubusercontent.com/swagger-api/swagger.io/wordpress/images/assets/SWU-logo-clr.png&quot; width=&quot;300&quot;&gt;

[![NPM version](https://badge.fury.io/js/swagger-ui.svg)](http://badge.fury.io/js/swagger-ui)
[![Build Status](https://jenkins.swagger.io/view/OSS%20-%20JavaScript/job/oss-swagger-ui-master/badge/icon?subject=jenkins%20build)](https://jenkins.swagger.io/view/OSS%20-%20JavaScript/job/oss-swagger-ui-master/)
[![npm audit](https://jenkins.swagger.io/buildStatus/icon?job=oss-swagger-ui-security-audit&amp;subject=npm%20audit)](https://jenkins.swagger.io/job/oss-swagger-ui-security-audit/lastBuild/console)
[![total GitHub contributors](https://img.shields.io/github/contributors-anon/swagger-api/swagger-ui.svg)](https://github.com/swagger-api/swagger-ui/graphs/contributors)

[![monthly npm installs](https://img.shields.io/npm/dm/swagger-ui.svg?label=npm%20downloads)](https://www.npmjs.com/package/swagger-ui)
![docker registry](https://img.shields.io/badge/docker-docker.swagger.io%2Fswaggerapi%2Fswagger--ui-blue)
![monthly packagist installs](https://img.shields.io/packagist/dm/swagger-api/swagger-ui.svg?label=packagist%20installs)
[![gzip size](https://img.shields.io/bundlephobia/minzip/swagger-ui.svg?label=gzip%20size)](https://bundlephobia.com/package/swagger-ui)

## Introduction
[Swagger UI](https://swagger.io/tools/swagger-ui/) allows anyone ‚Äî be it your development team or your end consumers ‚Äî to visualize and interact with the API‚Äôs resources without having any of the implementation logic in place. It‚Äôs automatically generated from your OpenAPI (formerly known as Swagger) Specification, with the visual documentation making it easy for back end implementation and client side consumption.

## General
**üëâüèº Want to score an easy open-source contribution?** Check out our [Good first issue](https://github.com/swagger-api/swagger-ui/issues?q=is%3Aissue+is%3Aopen+label%3A%22Good+first+issue%22) label.

**üï∞Ô∏è Looking for the older version of Swagger UI?** Refer to the [*2.x* branch](https://github.com/swagger-api/swagger-ui/tree/2.x).


This repository publishes three different NPM modules:

* [swagger-ui](https://www.npmjs.com/package/swagger-ui) is a traditional npm module intended for use in single-page applications that are capable of resolving dependencies (via Webpack, Browserify, etc.).
* [swagger-ui-dist](https://www.npmjs.com/package/swagger-ui-dist) is a dependency-free module that includes everything you need to serve Swagger UI in a server-side project, or a single-page application that can&#039;t resolve npm module dependencies.
* [swagger-ui-react](https://www.npmjs.com/package/swagger-ui-react) is Swagger UI packaged as a React component for use in React applications.

We strongly suggest that you use `swagger-ui` instead of `swagger-ui-dist` if you&#039;re building a single-page application, since `swagger-ui-dist` is significantly larger.

If you are looking for plain ol&#039; HTML/JS/CSS, [download the latest release](https://github.com/swagger-api/swagger-ui/releases/latest) and copy the contents of the `/dist` folder to your server.


## Compatibility
The OpenAPI Specification has undergone 5 revisions since initial creation in 2010.  Compatibility between Swagger UI and the OpenAPI Specification is as follows:

| Swagger UI Version | Release Date | OpenAPI Spec compatibility                           | Notes                                                                 |
|--------------------|--------------|------------------------------------------------------|-----------------------------------------------------------------------|
| 5.19.0             | 2025-02-17   | 2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.0.4, 3.1.0, 3.1.1 | [tag v5.19.0](https://github.com/swagger-api/swagger-ui/tree/v5.19.0) |
| 5.0.0              | 2023-06-12   | 2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.1.0               | [tag v5.0.0](https://github.com/swagger-api/swagger-ui/tree/v5.0.0)   |
| 4.0.0              | 2021-11-03   | 2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3                      | [tag v4.0.0](https://github.com/swagger-api/swagger-ui/tree/v4.0.0)   |
| 3.18.3             | 2018-08-03   | 2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3                      | [tag v3.18.3](https://github.com/swagger-api/swagger-ui/tree/v3.18.3) |
| 3.0.21             | 2017-07-26   | 2.0                                                  | [tag v3.0.21](https://github.com/swagger-api/swagger-ui/tree/v3.0.21) |
| 2.2.10             | 2017-01-04   | 1.1, 1.2, 2.0                                        | [tag v2.2.10](https://github.com/swagger-api/swagger-ui/tree/v2.2.10) |
| 2.1.5              | 2016-07-20   | 1.1, 1.2, 2.0                                        | [tag v2.1.5](https://github.com/swagger-api/swagger-ui/tree/v2.1.5)   |
| 2.0.24             | 2014-09-12   | 1.1, 1.2                                             | [tag v2.0.24](https://github.com/swagger-api/swagger-ui/tree/v2.0.24) |
| 1.0.13             | 2013-03-08   | 1.1, 1.2                                             | [tag v1.0.13](https://github.com/swagger-api/swagger-ui/tree/v1.0.13) |
| 1.0.1              | 2011-10-11   | 1.0, 1.1                                             | [tag v1.0.1](https://github.com/swagger-api/swagger-ui/tree/v1.0.1)   |

## Anonymized analytics

SwaggerUI uses [Scarf](https://scarf.sh/) to collect [anonymized installation analytics](https://github.com/scarf-sh/scarf-js?tab=readme-ov-file#as-a-user-of-a-package-using-scarf-js-what-information-does-scarf-js-send-about-me). These analytics help support the maintainers of this library and ONLY run during installation. To [opt out](https://github.com/scarf-sh/scarf-js?tab=readme-ov-file#as-a-user-of-a-package-using-scarf-js-how-can-i-opt-out-of-analytics), you can set the `scarfSettings.enabled` field to `false` in your project&#039;s `package.json`:

```
// package.json
{
  // ...
  &quot;scarfSettings&quot;: {
    &quot;enabled&quot;: false
  }
  // ...
}
```

Alternatively, you can set the environment variable `SCARF_ANALYTICS` to `false` as part of the environment that installs your npm packages, e.g., `SCARF_ANALYTICS=false npm install`.

## Documentation

#### Usage
- [Installation](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/installation.md)
- [Configuration](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/configuration.md)
- [CORS](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/cors.md)
- [OAuth2](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/oauth2.md)
- [Deep Linking](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/deep-linking.md)
- [Limitations](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/limitations.md)
- [Version detection](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/version-detection.md)

#### Customization
- [Overview](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/customization/overview.md)
- [Plugin API](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/customization/plugin-api.md)
- [Custom layout](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/customization/custom-layout.md)

#### Development
- [Setting up](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/development/setting-up.md)
- [Scripts](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/development/scripts.md)

#### Contributing
- [Contributing](https://github.com/swagger-api/.github/blob/HEAD/CONTRIBUTING.md)

##### Integration Tests

You will need JDK of version 7 or higher as instructed here
https://nightwatchjs.org/guide/getting-started/installation.html#install-selenium-server

Integration tests can be run locally with `npm run e2e` - be sure you aren&#039;t running a dev server when testing!

### Browser support
Swagger UI works in the latest versions of Chrome, Safari, Firefox, and Edge.

### Known Issues

To help with the migration, here are the currently known issues with 3.X. This list will update regularly, and will not include features that were not implemented in previous versions.

- Only part of the parameters previously supported are available.
- The JSON Form Editor is not implemented.
- Support for `collectionFormat` is partial.
- l10n (translations) is not implemented.
- Relative path support for external files is not implemented.

## Security contact

Please disclose any security-related issues or vulnerabilities by emailing [security@swagger.io](mailto:security@swagger.io), instead of using the public issue tracker.

## License

SwaggerUI is licensed under [Apache 2.0 license](https://github.com/swagger-api/swagger-ui/blob/master/LICENSE).
SwaggerUI comes with an explicit [NOTICE](https://github.com/swagger-api/swagger-ui/blob/master/NOTICE) file
containing additional legal notices and information.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[upstash/context7]]></title>
            <link>https://github.com/upstash/context7</link>
            <guid>https://github.com/upstash/context7</guid>
            <pubDate>Fri, 04 Jul 2025 00:04:38 GMT</pubDate>
            <description><![CDATA[Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/upstash/context7">upstash/context7</a></h1>
            <p>Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors</p>
            <p>Language: JavaScript</p>
            <p>Stars: 17,369</p>
            <p>Forks: 850</p>
            <p>Stars today: 400 stars today</p>
            <h2>README</h2><pre># Context7 MCP - Up-to-date Code Docs For Any Prompt

[![Website](https://img.shields.io/badge/Website-context7.com-blue)](https://context7.com) [![smithery badge](https://smithery.ai/badge/@upstash/context7-mcp)](https://smithery.ai/server/@upstash/context7-mcp) [&lt;img alt=&quot;Install in VS Code (npx)&quot; src=&quot;https://img.shields.io/badge/VS_Code-VS_Code?style=flat-square&amp;label=Install%20Context7%20MCP&amp;color=0098FF&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)

[![ÁπÅÈ´î‰∏≠Êñá](https://img.shields.io/badge/docs-ÁπÅÈ´î‰∏≠Êñá-yellow)](./docs/README.zh-TW.md) [![ÁÆÄ‰Ωì‰∏≠Êñá](https://img.shields.io/badge/docs-ÁÆÄ‰Ωì‰∏≠Êñá-yellow)](./docs/README.zh-CN.md) [![Êó•Êú¨Ë™û](https://img.shields.io/badge/docs-Êó•Êú¨Ë™û-b7003a)](./docs/README.ja.md) [![ÌïúÍµ≠Ïñ¥ Î¨∏ÏÑú](https://img.shields.io/badge/docs-ÌïúÍµ≠Ïñ¥-green)](./docs/README.ko.md) [![Documentaci√≥n en Espa√±ol](https://img.shields.io/badge/docs-Espa√±ol-orange)](./docs/README.es.md) [![Documentation en Fran√ßais](https://img.shields.io/badge/docs-Fran√ßais-blue)](./docs/README.fr.md) [![Documenta√ß√£o em Portugu√™s (Brasil)](&lt;https://img.shields.io/badge/docs-Portugu√™s%20(Brasil)-purple&gt;)](./docs/README.pt-BR.md) [![Documentazione in italiano](https://img.shields.io/badge/docs-Italian-red)](./docs/README.it.md) [![Dokumentasi Bahasa Indonesia](https://img.shields.io/badge/docs-Bahasa%20Indonesia-pink)](./docs/README.id-ID.md) [![Dokumentation auf Deutsch](https://img.shields.io/badge/docs-Deutsch-darkgreen)](./docs/README.de.md) [![–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ](https://img.shields.io/badge/docs-–†—É—Å—Å–∫–∏–π-darkblue)](./docs/README.ru.md) [![T√ºrk√ße Dok√ºman](https://img.shields.io/badge/docs-T√ºrk√ße-blue)](./docs/README.tr.md) [![Arabic Documentation](https://img.shields.io/badge/docs-Arabic-white)](./docs/README.ar.md)

## ‚ùå Without Context7

LLMs rely on outdated or generic information about the libraries you use. You get:

- ‚ùå Code examples are outdated and based on year-old training data
- ‚ùå Hallucinated APIs don&#039;t even exist
- ‚ùå Generic answers for old package versions

## ‚úÖ With Context7

Context7 MCP pulls up-to-date, version-specific documentation and code examples straight from the source ‚Äî and places them directly into your prompt.

Add `use context7` to your prompt in Cursor:

```txt
Create a Next.js middleware that checks for a valid JWT in cookies and redirects unauthenticated users to `/login`. use context7
```

```txt
Configure a Cloudflare Worker script to cache JSON API responses for five minutes. use context7
```

Context7 fetches up-to-date code examples and documentation right into your LLM&#039;s context.

- 1Ô∏è‚É£ Write your prompt naturally
- 2Ô∏è‚É£ Tell the LLM to `use context7`
- 3Ô∏è‚É£ Get working code answers

No tab-switching, no hallucinated APIs that don&#039;t exist, no outdated code generations.

## üìö Adding Projects

Check out our [project addition guide](./docs/adding-projects.md) to learn how to add (or update) your favorite libraries to Context7.

## üõ†Ô∏è Installation

### Requirements

- Node.js &gt;= v18.0.0
- Cursor, Windsurf, Claude Desktop or another MCP Client

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Installing via Smithery&lt;/b&gt;&lt;/summary&gt;

To install Context7 MCP Server for any client automatically via [Smithery](https://smithery.ai/server/@upstash/context7-mcp):

```bash
npx -y @smithery/cli@latest install @upstash/context7-mcp --client &lt;CLIENT_NAME&gt; --key &lt;YOUR_SMITHERY_KEY&gt;
```

You can find your Smithery key in the [Smithery.ai webpage](https://smithery.ai/server/@upstash/context7-mcp).

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Cursor&lt;/b&gt;&lt;/summary&gt;

Go to: `Settings` -&gt; `Cursor Settings` -&gt; `MCP` -&gt; `Add new global MCP server`

Pasting the following configuration into your Cursor `~/.cursor/mcp.json` file is the recommended approach. You may also install in a specific project by creating `.cursor/mcp.json` in your project folder. See [Cursor MCP docs](https://docs.cursor.com/context/model-context-protocol) for more info.

&gt; Since Cursor 1.0, you can click the install button below for instant one-click installation.

#### Cursor Remote Server Connection

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/install-mcp?name=context7&amp;config=eyJ1cmwiOiJodHRwczovL21jcC5jb250ZXh0Ny5jb20vbWNwIn0%3D)

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

#### Cursor Local Server Connection

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/install-mcp?name=context7&amp;config=eyJjb21tYW5kIjoibnB4IC15IEB1cHN0YXNoL2NvbnRleHQ3LW1jcCJ9)

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;details&gt;
&lt;summary&gt;Alternative: Use Bun&lt;/summary&gt;

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/install-mcp?name=context7&amp;config=eyJjb21tYW5kIjoiYnVueCAteSBAdXBzdGFzaC9jb250ZXh0Ny1tY3AifQ%3D%3D)

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;bunx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Alternative: Use Deno&lt;/summary&gt;

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/install-mcp?name=context7&amp;config=eyJjb21tYW5kIjoiZGVubyBydW4gLS1hbGxvdy1lbnYgLS1hbGxvdy1uZXQgbnBtOkB1cHN0YXNoL2NvbnRleHQ3LW1jcCJ9)

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;deno&quot;,
      &quot;args&quot;: [&quot;run&quot;, &quot;--allow-env=NO_DEPRECATION,TRACE_DEPRECATION&quot;, &quot;--allow-net&quot;, &quot;npm:@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Windsurf&lt;/b&gt;&lt;/summary&gt;

Add this to your Windsurf MCP config file. See [Windsurf MCP docs](https://docs.windsurf.com/windsurf/mcp) for more info.

#### Windsurf Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;serverUrl&quot;: &quot;https://mcp.context7.com/sse&quot;
    }
  }
}
```

#### Windsurf Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Trae&lt;/b&gt;&lt;/summary&gt;

Use the Add manually feature and fill in the JSON configuration information for that MCP server.
For more details, visit the [Trae documentation](https://docs.trae.ai/ide/model-context-protocol?_lang=en).

#### Trae Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

#### Trae Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;-y&quot;,
        &quot;@upstash/context7-mcp&quot;
      ]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in VS Code&lt;/b&gt;&lt;/summary&gt;

[&lt;img alt=&quot;Install in VS Code (npx)&quot; src=&quot;https://img.shields.io/badge/VS_Code-VS_Code?style=flat-square&amp;label=Install%20Context7%20MCP&amp;color=0098FF&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)
[&lt;img alt=&quot;Install in VS Code Insiders (npx)&quot; src=&quot;https://img.shields.io/badge/VS_Code_Insiders-VS_Code_Insiders?style=flat-square&amp;label=Install%20Context7%20MCP&amp;color=24bfa5&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode-insiders%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)

Add this to your VS Code MCP config file. See [VS Code MCP docs](https://code.visualstudio.com/docs/copilot/chat/mcp-servers) for more info.

#### VS Code Remote Server Connection

```json
&quot;mcp&quot;: {
  &quot;servers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;http&quot;,
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

#### VS Code Local Server Connection

```json
&quot;mcp&quot;: {
  &quot;servers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;stdio&quot;,
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Visual Studio 2022&lt;/b&gt;&lt;/summary&gt;

You can configure Context7 MCP in Visual Studio 2022 by following the [Visual Studio MCP Servers documentation](https://learn.microsoft.com/visualstudio/ide/mcp-servers?view=vs-2022).

Add this to your Visual Studio MCP config file (see the [Visual Studio docs](https://learn.microsoft.com/visualstudio/ide/mcp-servers?view=vs-2022) for details):

```json
{
  &quot;mcp&quot;: {
    &quot;servers&quot;: {
      &quot;context7&quot;: {
        &quot;type&quot;: &quot;http&quot;,
        &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
      }
    }
  }
}
```

Or, for a local server:

```json
{
  &quot;mcp&quot;: {
    &quot;servers&quot;: {
      &quot;context7&quot;: {
        &quot;type&quot;: &quot;stdio&quot;,
        &quot;command&quot;: &quot;npx&quot;,
        &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
      }
    }
  }
}
```

For more information and troubleshooting, refer to the [Visual Studio MCP Servers documentation](https://learn.microsoft.com/visualstudio/ide/mcp-servers?view=vs-2022).
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Zed&lt;/b&gt;&lt;/summary&gt;

It can be installed via [Zed Extensions](https://zed.dev/extensions?query=Context7) or you can add this to your Zed `settings.json`. See [Zed Context Server docs](https://zed.dev/docs/assistant/context-servers) for more info.

```json
{
  &quot;context_servers&quot;: {
    &quot;Context7&quot;: {
      &quot;command&quot;: {
        &quot;path&quot;: &quot;npx&quot;,
        &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
      },
      &quot;settings&quot;: {}
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Gemini CLI&lt;/b&gt;&lt;/summary&gt;

See [Gemini CLI Configuration](https://github.com/google-gemini/gemini-cli/blob/main/docs/cli/configuration.md) for details.

1.  Open the Gemini CLI settings file. The location is `~/.gemini/settings.json` (where `~` is your home directory).
2.  Add the following to the `mcpServers` object in your `settings.json` file:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

If the `mcpServers` object does not exist, create it.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Claude Code&lt;/b&gt;&lt;/summary&gt;

Run this command. See [Claude Code MCP docs](https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/tutorials#set-up-model-context-protocol-mcp) for more info.

#### Claude Code Remote Server Connection

```sh
claude mcp add --transport http context7 https://mcp.context7.com/mcp
```

Or using SSE transport:

```sh
claude mcp add --transport sse context7 https://mcp.context7.com/sse
```

#### Claude Code Local Server Connection

```sh
claude mcp add context7 -- npx -y @upstash/context7-mcp
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Claude Desktop&lt;/b&gt;&lt;/summary&gt;

Add this to your Claude Desktop `claude_desktop_config.json` file. See [Claude Desktop MCP docs](https://modelcontextprotocol.io/quickstart/user) for more info.

```json
{
  &quot;mcpServers&quot;: {
    &quot;Context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;
&lt;b&gt;Install in Cline&lt;/b&gt;
&lt;/summary&gt;

You can easily install Context7 through the [Cline MCP Server Marketplace](https://cline.bot/mcp-marketplace) by following these instructions:

1. Open **Cline**.
1. Click the hamburger menu icon (‚ò∞) to enter the **MCP Servers** section.
2. Use the search bar within the **Marketplace** tab to find *Context7*.
3. Click the **Install** button.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in BoltAI&lt;/b&gt;&lt;/summary&gt;

Open the &quot;Settings&quot; page of the app, navigate to &quot;Plugins,&quot; and enter the following JSON:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

Once saved, enter in the chat `get-library-docs` followed by your Context7 documentation ID (e.g., `get-library-docs /nuxt/ui`). More information is available on [BoltAI&#039;s Documentation site](https://docs.boltai.com/docs/plugins/mcp-servers). For BoltAI on iOS, [see this guide](https://docs.boltai.com/docs/boltai-mobile/mcp-servers).

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Using Docker&lt;/b&gt;&lt;/summary&gt;

If you prefer to run the MCP server in a Docker container:

1. **Build the Docker Image:**

   First, create a `Dockerfile` in the project root (or anywhere you prefer):

   &lt;details&gt;
   &lt;summary&gt;Click to see Dockerfile content&lt;/summary&gt;

   ```Dockerfile
   FROM node:18-alpine

   WORKDIR /app

   # Install the latest version globally
   RUN npm install -g @upstash/context7-mcp

   # Expose default port if needed (optional, depends on MCP client interaction)
   # EXPOSE 3000

   # Default command to run the server
   CMD [&quot;context7-mcp&quot;]
   ```

   &lt;/details&gt;

   Then, build the image using a tag (e.g., `context7-mcp`). **Make sure Docker Desktop (or the Docker daemon) is running.** Run the following command in the same directory where you saved the `Dockerfile`:

   ```bash
   docker build -t context7-mcp .
   ```

2. **Configure Your MCP Client:**

   Update your MCP client&#039;s configuration to use the Docker command.

   _Example for a cline_mcp_settings.json:_

   ```json
   {
     &quot;mcpServers&quot;: {
       &quot;–°ontext7&quot;: {
         &quot;autoApprove&quot;: [],
         &quot;disabled&quot;: false,
         &quot;timeout&quot;: 60,
         &quot;command&quot;: &quot;docker&quot;,
         &quot;args&quot;: [&quot;run&quot;, &quot;-i&quot;, &quot;--rm&quot;, &quot;context7-mcp&quot;],
         &quot;transportType&quot;: &quot;stdio&quot;
       }
     }
   }
   ```

   _Note: This is an example configuration. Please refer to the specific examples for your MCP client (like Cursor, VS Code, etc.) earlier in this README to adapt the structure (e.g., `mcpServers` vs `servers`). Also, ensure the image name in `args` matches the tag used during the `docker build` command._

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Windows&lt;/b&gt;&lt;/summary&gt;

The configuration on Windows is slightly different compared to Linux or macOS (_`Cline` is used in the example_). The same principle applies to other editors; refer to the configuration of `command` and `args`.

```json
{
  &quot;mcpServers&quot;: {
    &quot;github.com/upstash/context7-mcp&quot;: {
      &quot;command&quot;: &quot;cmd&quot;,
      &quot;args&quot;: [&quot;/c&quot;, &quot;npx&quot;, &quot;-y&quot;, &quot;@upstash/context7-mcp@latest&quot;],
      &quot;disabled&quot;: false,
      &quot;autoApprove&quot;: []
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Augment Code&lt;/b&gt;&lt;/summary&gt;

To configure Context7 MCP in Augment Code, you can use either the graphical interface or manual configuration.

### **A. Using the Augment Code UI**

1. Click the hamburger menu.
2. Select **Settings**.
3. Navigate to the **Tools** section.
4. Click the **+ Add MCP** button.
5. Enter the following command:

   ```
   npx -y @upstash/context7-mcp@latest
   ```

6. Name the MCP: **Context7**.
7. Click the **Add** button.

Once the MCP server is added, you can start using Context7&#039;s up-to-date code documentation features directly within Augment Code.

---

### **B. Manual Configuration**

1. Press Cmd/Ctrl Shift P or go to the hamburger menu in the Augment panel
2. Select Edit Settings
3. Under Advanced, click Edit in settings.json
4. Add the server configuration to the `mcpServers` array in the `augment.advanced` object

&quot;augment.advanced&quot;: {
&quot;mcpServers&quot;: [
{
&quot;name&quot;: &quot;context7&quot;,
&quot;command&quot;: &quot;npx&quot;,
&quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
}
]
}

Once the MCP server is added, restart your editor. If you receive any errors, check the syntax to make sure closing brackets or commas are not missing.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Roo Code&lt;/b&gt;&lt;/summary&gt;

Add this to your Roo Code MCP configuration file. See [Roo Code MCP docs](https://docs.roocode.com/features/mcp/using-mcp-in-roo) for more info.

#### Roo Code Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;streamable-http&quot;,
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

#### Roo Code Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Zencoder&lt;/b&gt;&lt;/summary&gt;

To configure Context7 MCP in Zencoder, follow these steps:

1. Go to the Zencoder menu (...)
2. From the dropdown menu, select Agent tools
3. Click on the Add custom MCP
4. Add the name and server configuration from below, and make sure to hit the Install button

```json
{
    &quot;command&quot;: &quot;npx&quot;,
    &quot;args&quot;: [
        &quot;-y&quot;,
        &quot;@upstash/context7-mcp@latest&quot;
    ]
}
```

Once the MCP server is added, you can easily continue using it.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Amazon Q Developer CLI&lt;/b&gt;&lt;/summary&gt;

Add this to your Amazon Q Developer CLI configuration file. See [Amazon Q Developer CLI docs](https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line-mcp-configuration.html) for more details.

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp@latest&quot;]
    }
  }
}
```
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Qodo Gen&lt;/b&gt;&lt;/summary&gt;

See [Qodo Gen docs](https://docs.qodo.ai/qodo-documentation/qodo-gen/qodo-gen-chat/agentic-mode/agentic-tools-mcps) for more details.

1. Open Qodo Gen chat panel in VSCode or IntelliJ.
2. Click Connect more tools.
3. Click + Add new MCP.
4. Add the following configuration:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in JetBrains AI Assistant&lt;/b&gt;&lt;/summary&gt;

See [JetBrains AI Assistant Documentation](https://www.jetbrains.com/help/ai-assistant/configure-an-mcp-server.html) for more details.

1. In JetBrains IDEs go to `Settings` -&gt; `Tools` -&gt; `AI Assistant` -&gt; `Model Context Protocol (MCP)`
2. Click `+ Add`.
3. Click on `Command` in the top-left corner of the dialog and select the As JSON option from the list
4. Add this configuration and click `OK`

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

5. Click `Apply` to save changes.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Warp&lt;/b&gt;&lt;/summary&gt;

See [Warp Model Context Protocol Documentation](https://docs.warp.dev/knowledge-and-collaboration/mcp#adding-an-mcp-server) for details.

1. Navigate `Settings` &gt; `AI` &gt; `Manage MCP servers`.
2. Add a new MCP server by clicking the `+ Add` button.
3. Paste the configuration given below:

```json
{
  &quot;Context7&quot;: {
    &quot;command&quot;: &quot;npx&quot;,
    &quot;args&quot;: [
      &quot;-y&quot;,
      &quot;@upstash/context7-mcp&quot;
    ],
    &quot;env&quot;: {},
    &quot;working_directory&quot;: null,
    &quot;start_on_launch&quot;: true
  }
}
```

4. Click `Save` to apply the changes.

&lt;/details&gt;

## üî® Available Tools

Context7 MCP provides the following tools that LLMs can use:

- `resolve-library-id`: Resolves a general library name into a Context7-compatible library ID.

  - `libraryName` (required): The name of the library to search for

- `get-library-docs`: Fetches documentation for a library using a Context7-compatible library ID.
  - `context7CompatibleLibraryID` (required): Exact Context7-compatible library ID (e.g., `/mongodb/docs`, `/vercel/next.js`)
  - `topic` (optional): Focus the docs on a specific topic (e.g., &quot;routing&quot;, &quot;hooks&quot;)
  - `tokens` (optional, default 10000): Max number of tokens to return. Values less than the default value of 10000 are automatically increased to 10000.

## üõü Tips

### Add a Rule
&gt; If you don‚Äôt want to add `use context7` to every prompt, you can define a simple rule in your `.windsurfrules` file in Windsurf or from `Cursor Settings &gt; Rules` section in Cursor (or the equivalent in your MCP client) to auto-invoke Context7 on any code question:
&gt; ```toml
&gt; [[calls]]
&gt; match = &quot;when the user requests code examples, setup or configuration steps, or library/API documentation&quot;
&gt; tool  = &quot;context7&quot;
&gt; ```
&gt; From then on you‚Äôll get Context7‚Äôs docs in any related conversation without typing anything extra. You can add your use cases to the match part.

### 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[open-webui/open-webui]]></title>
            <link>https://github.com/open-webui/open-webui</link>
            <guid>https://github.com/open-webui/open-webui</guid>
            <pubDate>Fri, 04 Jul 2025 00:04:37 GMT</pubDate>
            <description><![CDATA[User-friendly AI Interface (Supports Ollama, OpenAI API, ...)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/open-webui/open-webui">open-webui/open-webui</a></h1>
            <p>User-friendly AI Interface (Supports Ollama, OpenAI API, ...)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 101,176</p>
            <p>Forks: 13,464</p>
            <p>Stars today: 145 stars today</p>
            <h2>README</h2><pre># Open WebUI üëã

![GitHub stars](https://img.shields.io/github/stars/open-webui/open-webui?style=social)
![GitHub forks](https://img.shields.io/github/forks/open-webui/open-webui?style=social)
![GitHub watchers](https://img.shields.io/github/watchers/open-webui/open-webui?style=social)
![GitHub repo size](https://img.shields.io/github/repo-size/open-webui/open-webui)
![GitHub language count](https://img.shields.io/github/languages/count/open-webui/open-webui)
![GitHub top language](https://img.shields.io/github/languages/top/open-webui/open-webui)
![GitHub last commit](https://img.shields.io/github/last-commit/open-webui/open-webui?color=red)
[![Discord](https://img.shields.io/badge/Discord-Open_WebUI-blue?logo=discord&amp;logoColor=white)](https://discord.gg/5rJgQTnV4s)
[![](https://img.shields.io/static/v1?label=Sponsor&amp;message=%E2%9D%A4&amp;logo=GitHub&amp;color=%23fe8e86)](https://github.com/sponsors/tjbck)

**Open WebUI is an [extensible](https://docs.openwebui.com/features/plugin/), feature-rich, and user-friendly self-hosted AI platform designed to operate entirely offline.** It supports various LLM runners like **Ollama** and **OpenAI-compatible APIs**, with **built-in inference engine** for RAG, making it a **powerful AI deployment solution**.

![Open WebUI Demo](./demo.gif)

&gt; [!TIP]  
&gt; **Looking for an [Enterprise Plan](https://docs.openwebui.com/enterprise)?** ‚Äì **[Speak with Our Sales Team Today!](mailto:sales@openwebui.com)**
&gt;
&gt; Get **enhanced capabilities**, including **custom theming and branding**, **Service Level Agreement (SLA) support**, **Long-Term Support (LTS) versions**, and **more!**

For more information, be sure to check out our [Open WebUI Documentation](https://docs.openwebui.com/).

## Key Features of Open WebUI ‚≠ê

- üöÄ **Effortless Setup**: Install seamlessly using Docker or Kubernetes (kubectl, kustomize or helm) for a hassle-free experience with support for both `:ollama` and `:cuda` tagged images.

- ü§ù **Ollama/OpenAI API Integration**: Effortlessly integrate OpenAI-compatible APIs for versatile conversations alongside Ollama models. Customize the OpenAI API URL to link with **LMStudio, GroqCloud, Mistral, OpenRouter, and more**.

- üõ°Ô∏è **Granular Permissions and User Groups**: By allowing administrators to create detailed user roles and permissions, we ensure a secure user environment. This granularity not only enhances security but also allows for customized user experiences, fostering a sense of ownership and responsibility amongst users.

- üì± **Responsive Design**: Enjoy a seamless experience across Desktop PC, Laptop, and Mobile devices.

- üì± **Progressive Web App (PWA) for Mobile**: Enjoy a native app-like experience on your mobile device with our PWA, providing offline access on localhost and a seamless user interface.

- ‚úíÔ∏èüî¢ **Full Markdown and LaTeX Support**: Elevate your LLM experience with comprehensive Markdown and LaTeX capabilities for enriched interaction.

- üé§üìπ **Hands-Free Voice/Video Call**: Experience seamless communication with integrated hands-free voice and video call features, allowing for a more dynamic and interactive chat environment.

- üõ†Ô∏è **Model Builder**: Easily create Ollama models via the Web UI. Create and add custom characters/agents, customize chat elements, and import models effortlessly through [Open WebUI Community](https://openwebui.com/) integration.

- üêç **Native Python Function Calling Tool**: Enhance your LLMs with built-in code editor support in the tools workspace. Bring Your Own Function (BYOF) by simply adding your pure Python functions, enabling seamless integration with LLMs.

- üìö **Local RAG Integration**: Dive into the future of chat interactions with groundbreaking Retrieval Augmented Generation (RAG) support. This feature seamlessly integrates document interactions into your chat experience. You can load documents directly into the chat or add files to your document library, effortlessly accessing them using the `#` command before a query.

- üîç **Web Search for RAG**: Perform web searches using providers like `SearXNG`, `Google PSE`, `Brave Search`, `serpstack`, `serper`, `Serply`, `DuckDuckGo`, `TavilySearch`, `SearchApi` and `Bing` and inject the results directly into your chat experience.

- üåê **Web Browsing Capability**: Seamlessly integrate websites into your chat experience using the `#` command followed by a URL. This feature allows you to incorporate web content directly into your conversations, enhancing the richness and depth of your interactions.

- üé® **Image Generation Integration**: Seamlessly incorporate image generation capabilities using options such as AUTOMATIC1111 API or ComfyUI (local), and OpenAI&#039;s DALL-E (external), enriching your chat experience with dynamic visual content.

- ‚öôÔ∏è **Many Models Conversations**: Effortlessly engage with various models simultaneously, harnessing their unique strengths for optimal responses. Enhance your experience by leveraging a diverse set of models in parallel.

- üîê **Role-Based Access Control (RBAC)**: Ensure secure access with restricted permissions; only authorized individuals can access your Ollama, and exclusive model creation/pulling rights are reserved for administrators.

- üåêüåç **Multilingual Support**: Experience Open WebUI in your preferred language with our internationalization (i18n) support. Join us in expanding our supported languages! We&#039;re actively seeking contributors!

- üß© **Pipelines, Open WebUI Plugin Support**: Seamlessly integrate custom logic and Python libraries into Open WebUI using [Pipelines Plugin Framework](https://github.com/open-webui/pipelines). Launch your Pipelines instance, set the OpenAI URL to the Pipelines URL, and explore endless possibilities. [Examples](https://github.com/open-webui/pipelines/tree/main/examples) include **Function Calling**, User **Rate Limiting** to control access, **Usage Monitoring** with tools like Langfuse, **Live Translation with LibreTranslate** for multilingual support, **Toxic Message Filtering** and much more.

- üåü **Continuous Updates**: We are committed to improving Open WebUI with regular updates, fixes, and new features.

Want to learn more about Open WebUI&#039;s features? Check out our [Open WebUI documentation](https://docs.openwebui.com/features) for a comprehensive overview!

## Sponsors üôå

#### Emerald

&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://n8n.io/&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/n8n.png&quot; alt=&quot;n8n&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt; ‚Ä¢ Does your interface have a backend yet?&lt;br&gt;Try &lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://warp.dev/open-webui&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/warp.png&quot; alt=&quot;Warp&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://warp.dev/open-webui&quot;&gt;Warp&lt;/a&gt; ‚Ä¢ The intelligent terminal for developers
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;utm_medium=paid-ad-placement&amp;utm_campaign=OpenWebUI-Docs&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/tailscale.png&quot; alt=&quot;Tailscale&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;utm_medium=paid-ad-placement&amp;utm_campaign=OpenWebUI-Docs&quot;&gt;Tailscale&lt;/a&gt; ‚Ä¢ Connect self-hosted AI to any device with Tailscale
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

---

We are incredibly grateful for the generous support of our sponsors. Their contributions help us to maintain and improve our project, ensuring we can continue to deliver quality work to our community. Thank you!

## How to Install üöÄ

### Installation via Python pip üêç

Open WebUI can be installed using pip, the Python package installer. Before proceeding, ensure you&#039;re using **Python 3.11** to avoid compatibility issues.

1. **Install Open WebUI**:
   Open your terminal and run the following command to install Open WebUI:

   ```bash
   pip install open-webui
   ```

2. **Running Open WebUI**:
   After installation, you can start Open WebUI by executing:

   ```bash
   open-webui serve
   ```

This will start the Open WebUI server, which you can access at [http://localhost:8080](http://localhost:8080)

### Quick Start with Docker üê≥

&gt; [!NOTE]  
&gt; Please note that for certain Docker environments, additional configurations might be needed. If you encounter any connection issues, our detailed guide on [Open WebUI Documentation](https://docs.openwebui.com/) is ready to assist you.

&gt; [!WARNING]
&gt; When using Docker to install Open WebUI, make sure to include the `-v open-webui:/app/backend/data` in your Docker command. This step is crucial as it ensures your database is properly mounted and prevents any loss of data.

&gt; [!TIP]  
&gt; If you wish to utilize Open WebUI with Ollama included or CUDA acceleration, we recommend utilizing our official images tagged with either `:cuda` or `:ollama`. To enable CUDA, you must install the [Nvidia CUDA container toolkit](https://docs.nvidia.com/dgx/nvidia-container-runtime-upgrade/) on your Linux/WSL system.

### Installation with Default Configuration

- **If Ollama is on your computer**, use this command:

  ```bash
  docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **If Ollama is on a Different Server**, use this command:

  To connect to Ollama on another server, change the `OLLAMA_BASE_URL` to the server&#039;s URL:

  ```bash
  docker run -d -p 3000:8080 -e OLLAMA_BASE_URL=https://example.com -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **To run Open WebUI with Nvidia GPU support**, use this command:

  ```bash
  docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda
  ```

### Installation for OpenAI API Usage Only

- **If you&#039;re only using OpenAI API**, use this command:

  ```bash
  docker run -d -p 3000:8080 -e OPENAI_API_KEY=your_secret_key -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

### Installing Open WebUI with Bundled Ollama Support

This installation method uses a single container image that bundles Open WebUI with Ollama, allowing for a streamlined setup via a single command. Choose the appropriate command based on your hardware setup:

- **With GPU Support**:
  Utilize GPU resources by running the following command:

  ```bash
  docker run -d -p 3000:8080 --gpus=all -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

- **For CPU Only**:
  If you&#039;re not using a GPU, use this command instead:

  ```bash
  docker run -d -p 3000:8080 -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

Both commands facilitate a built-in, hassle-free installation of both Open WebUI and Ollama, ensuring that you can get everything up and running swiftly.

After installation, you can access Open WebUI at [http://localhost:3000](http://localhost:3000). Enjoy! üòÑ

### Other Installation Methods

We offer various installation alternatives, including non-Docker native installation methods, Docker Compose, Kustomize, and Helm. Visit our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/) or join our [Discord community](https://discord.gg/5rJgQTnV4s) for comprehensive guidance.

Look at the [Local Development Guide](https://docs.openwebui.com/getting-started/advanced-topics/development) for instructions on setting up a local development environment.

### Troubleshooting

Encountering connection issues? Our [Open WebUI Documentation](https://docs.openwebui.com/troubleshooting/) has got you covered. For further assistance and to join our vibrant community, visit the [Open WebUI Discord](https://discord.gg/5rJgQTnV4s).

#### Open WebUI: Server Connection Error

If you&#039;re experiencing connection issues, it‚Äôs often due to the WebUI docker container not being able to reach the Ollama server at 127.0.0.1:11434 (host.docker.internal:11434) inside the container . Use the `--network=host` flag in your docker command to resolve this. Note that the port changes from 3000 to 8080, resulting in the link: `http://localhost:8080`.

**Example Docker Command**:

```bash
docker run -d --network=host -v open-webui:/app/backend/data -e OLLAMA_BASE_URL=http://127.0.0.1:11434 --name open-webui --restart always ghcr.io/open-webui/open-webui:main
```

### Keeping Your Docker Installation Up-to-Date

In case you want to update your local Docker installation to the latest version, you can do it with [Watchtower](https://containrrr.dev/watchtower/):

```bash
docker run --rm --volume /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --run-once open-webui
```

In the last part of the command, replace `open-webui` with your container name if it is different.

Check our Updating Guide available in our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/updating).

### Using the Dev Branch üåô

&gt; [!WARNING]
&gt; The `:dev` branch contains the latest unstable features and changes. Use it at your own risk as it may have bugs or incomplete features.

If you want to try out the latest bleeding-edge features and are okay with occasional instability, you can use the `:dev` tag like this:

```bash
docker run -d -p 3000:8080 -v open-webui:/app/backend/data --name open-webui --add-host=host.docker.internal:host-gateway --restart always ghcr.io/open-webui/open-webui:dev
```

### Offline Mode

If you are running Open WebUI in an offline environment, you can set the `HF_HUB_OFFLINE` environment variable to `1` to prevent attempts to download models from the internet.

```bash
export HF_HUB_OFFLINE=1
```

## What&#039;s Next? üåü

Discover upcoming features on our roadmap in the [Open WebUI Documentation](https://docs.openwebui.com/roadmap/).

## License üìú

This project is licensed under the [Open WebUI License](LICENSE), a revised BSD-3-Clause license. You receive all the same rights as the classic BSD-3 license: you can use, modify, and distribute the software, including in proprietary and commercial products, with minimal restrictions. The only additional requirement is to preserve the &quot;Open WebUI&quot; branding, as detailed in the LICENSE file. For full terms, see the [LICENSE](LICENSE) document. üìÑ

## Support üí¨

If you have any questions, suggestions, or need assistance, please open an issue or join our
[Open WebUI Discord community](https://discord.gg/5rJgQTnV4s) to connect with us! ü§ù

## Star History

&lt;a href=&quot;https://star-history.com/#open-webui/open-webui&amp;Date&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&amp;theme=dark&quot; /&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
    &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

---

Created by [Timothy Jaeryang Baek](https://github.com/tjbck) - Let&#039;s make Open WebUI even more amazing together! üí™
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[pcottle/learnGitBranching]]></title>
            <link>https://github.com/pcottle/learnGitBranching</link>
            <guid>https://github.com/pcottle/learnGitBranching</guid>
            <pubDate>Fri, 04 Jul 2025 00:04:36 GMT</pubDate>
            <description><![CDATA[An interactive git visualization and tutorial. Aspiring students of git can use this app to educate and challenge themselves towards mastery of git!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pcottle/learnGitBranching">pcottle/learnGitBranching</a></h1>
            <p>An interactive git visualization and tutorial. Aspiring students of git can use this app to educate and challenge themselves towards mastery of git!</p>
            <p>Language: JavaScript</p>
            <p>Stars: 31,996</p>
            <p>Forks: 5,858</p>
            <p>Stars today: 29 stars today</p>
            <h2>README</h2><pre># LearnGitBranching

[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?)](https://github.com/pcottle/learnGitBranching/pulls)

LearnGitBranching is a git repository visualizer, sandbox, and a series of educational tutorials and challenges. Its primary purpose is to help developers understand git through the power of visualization (something that&#039;s absent when working on the command line). This is achieved through a game with different levels to get acquainted with the different git commands.

You can input a variety of commands into LearnGitBranching (LGB) -- as commands are processed, the nearby commit tree will dynamically update to reflect the effects of each command:

![demo-gif](https://user-images.githubusercontent.com/6324814/108740487-02c3c400-7536-11eb-9dd1-53275cdf76fb.gif)

This visualization combined with tutorials and &quot;levels&quot; can help both beginners and intermediate developers polish their version control skills. A quick demo is available here:
https://pcottle.github.io/learnGitBranching/?demo

Or, you can launch the application normally here:
https://pcottle.github.io/learnGitBranching/

### Sandbox Mode

By default the application launches in &quot;sandbox mode&quot; with a basic repository already created. Here you can enter commands and mess around with a repository as much as you like. Keep in mind you can

* `undo` to undo the effects of the last command
* `reset` to start over with a clean slate (works in levels too)
* `git clone` to simulate remote repositories!

Sandbox mode can be great for demonstrating something to a friend, but the real learning is with levels...

## Levels

Type `levels` to see the available lessons / challenges (and which ones you have solved so far). Each level series aims to teach some high-level git concept, and each tab of levels separates major worlds of info (like remote repositories versus local).

For some added fun, there is a &quot;git golf&quot; concept where we keep track of how many commands you use to solve each level. See if you can match all of our records!

### Sharing permalinks

You can share a link to LearnGitBranching with an arbitrary set of commands that will execute upon load by using the `command` URL parameter. You will also likely want to disable the intro dialog for this case with the `NODEMO` url param; here is [an example](https://learngitbranching.js.org/?NODEMO&amp;command=echo%20%22hello%22;%20git%20commit) to get started.

### Level Builder

You can build levels with the `build level` command. A dialog will walk you through the process, and at the end it will show you a JSON blob that represents the level you just created. Paste that in a [gist](https://gist.github.com) or directly into an issue and I can check it out / merge in your changes! You can also share this level directly with friends by having them run `import level` and paste the JSON in the resulting text field, or simply send them a custom URL with the the gist ID in the parameters, like so:
https://pcottle.github.io/learnGitBranching/?gist_level_id=a84407351f9c9f0cb241

## Reporting Bugs / Opening Issues

When reporting bugs, try running the command `debug_copyTree()` in your JS console when in a state just before reproducing a bug. This can avoid having to copy all the commands you used to get into a specific state. (I can then use the `importTreeNow` command to get to that exact state)

## Building yourself / Contributing Functionality

For contributing core functionality in the app, you&#039;ll probably want to test your changes
at least once before submitting a pull request. That means you&#039;ll need the &quot;gulp.js&quot; build tool to build the app:

https://gulpjs.com/docs/en/getting-started/quick-start

You&#039;ll also need `yarn` to download all the dependencies of the project.

The general workflow / steps are below:

```bash
git clone &lt;your fork of the repo&gt;
cd learnGitBranching
yarn install

git checkout -b newAwesomeFeature
vim ./src/js/git/index.js # some changes
yarn gulp fastBuild # skips tests and linting, faster build

# after building you can open up your browser to the index.html
open ./index.html
# file generated and see your changes

vim ./src/js/git/index.js # more changes
yarn gulp build # runs tests and lint

git commit -am &quot;My new sweet feature!&quot;
git push
# go online and request a pull
```

Alternatively, you can also build and run the app in a pre-configured online workspace:

[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/pcottle/learnGitBranching/blob/main/src/js/git/index.js)
[![Open in Codeanywhere](https://codeanywhere.com/img/open-in-codeanywhere-btn.svg)](https://app.codeanywhere.com/#https://github.com/pcottle/learnGitBranching)


## Other Technical Details

LearnGitBranching is a pretty simple application (from a technical perspective). There&#039;s no backend database or any AJAX requests -- it&#039;s a 100% clientside application written in JavaScript. The production version (on github.io) literally just serves up an HTML page with some JS and CSS.

Here is the high-level process of the build:

* CSS is written into just one stylesheet (there is not a whole ton of styling)
* New HTML is written into a template HTML file (`template.index.html`). This is only needed
  for new views
* The app is &quot;built&quot;, which outputs:
  * `index.html` in the root directory
  * CSS and JS files in `./build` directory
* If the app is being built for production, then these CSS and JS files
  are hashed (to bust caches) and tests are run
* That&#039;s it!

Thus, if you build the app locally, all you have to do in order to run the app is just open up `index.html` in the root directory of the repo. Pretty simple

### Docker

You can run the most recently built stable image with `docker run -p 8080:80 ghcr.io/pcottle/learngitbranching:main`. Access your environment with at [http://localhost:8080/](&lt;http://localhost:8080/&gt;)

You can build the app and image with the command: `docker build -t ghcr.io/pcottle/learngitbranching:latest`. See the [Makefile](Makefile) for information on how to build locally with docker.

## Some of our amazing contributors

[//]: contributor-faces
&lt;a href=&quot;https://github.com/pcottle&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1135007?v=4&quot; title=&quot;pcottle&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/Hongarc&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/19208123?v=4&quot; title=&quot;Hongarc&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/twmht&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1567200?v=4&quot; title=&quot;twmht&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/JuhoKang&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/4745294?v=4&quot; title=&quot;JuhoKang&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/sunshowers&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/180618?v=4&quot; title=&quot;sunshowers&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/sPATROL&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/11875983?v=4&quot; title=&quot;sPATROL&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/coyl&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/274452?v=4&quot; title=&quot;coyl&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/alexeiberkov&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/4151345?v=4&quot; title=&quot;alexeiberkov&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/aschrab&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/39620?v=4&quot; title=&quot;aschrab&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/bcbcarl&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/135734?v=4&quot; title=&quot;bcbcarl&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/ahonorat&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/5851945?v=4&quot; title=&quot;ahonorat&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/nem75&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1327785?v=4&quot; title=&quot;nem75&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/eatdrinksleepcode&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2099560?v=4&quot; title=&quot;eatdrinksleepcode&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/nlehuby&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/919962?v=4&quot; title=&quot;nlehuby&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/alexandear&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/3228886?v=4&quot; title=&quot;alexandear&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/PanAeon&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/686076?v=4&quot; title=&quot;PanAeon&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/donkirkby&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1639148?v=4&quot; title=&quot;donkirkby&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/lroellin&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/3150983?v=4&quot; title=&quot;lroellin&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/ptsoccer&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1102725?v=4&quot; title=&quot;ptsoccer&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/jankeromnes&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/599268?v=4&quot; title=&quot;jankeromnes&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/qiansen1386&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1759658?v=4&quot; title=&quot;qiansen1386&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/renderf0x&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/6155643?v=4&quot; title=&quot;renderf0x&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/filipefilardi&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/7308241?v=4&quot; title=&quot;filipefilardi&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/rebangm&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1638136?v=4&quot; title=&quot;rebangm&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/marcolivierarsenault&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/2634090?v=4&quot; title=&quot;marcolivierarsenault&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/pengi&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1087673?v=4&quot; title=&quot;pengi&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/waldyrious&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/478237?v=4&quot; title=&quot;waldyrious&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/tym-network&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/2879545?v=4&quot; title=&quot;tym-network&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/zhyu&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1728523?v=4&quot; title=&quot;zhyu&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/mgarciaisaia&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1190974?v=4&quot; title=&quot;mgarciaisaia&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/YourSenseiCreeper&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/6324814?&amp;v=4&quot; title=&quot;YourSenseiCreeper&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/olsza&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/12556170?v=4&quot; title=&quot;Olsza&quot; width=&quot;80&quot; height=&quot;80&quot;&gt;&lt;/a&gt;

[//]: contributor-faces

## Helpful Folks
A big shoutout to these brave souls for extensively testing our sandbox and finding bugs and/or inconsistencies:

* Nikita Kouevda
* Maksim Ioffe
* Dan Miller

And the following heroes for assisting in translating:
* Jake Chen
* Ïö∞Î¶¨ÍπÉ (&quot;urigit&quot;)
* &quot;bcho&quot;
* &quot;scientific-coder&quot;
* &quot;ace-coder&quot;
* Jo√´l Thieffry
* Jens Bremmekamp (&quot;nem75&quot;)
* &quot;hilojack&quot;
* Ming-Hsuan-Tu (&quot;twmht&quot;)
* Mikhail Usov (&quot;mikhailusov&quot;)
* Matias Garcia Isaia (&quot;mgarciaisaia&quot;)
* Marc-Olivier Arsenault (&quot;marcolivierarsenault&quot;)
* Eroany H Leader (&quot;lhyqy5&quot;)
* Honorat (&quot;ahonorat&quot;)
* Vasil Kulakov (&quot;coyl&quot;) &amp; Lyubov Agadjanyan (&quot;shayenblue&quot;)
* Aliaksei Berkau (&quot;alexeiberkov&quot;)
* Mizunashi Mana (&quot;mizunashi-mana&quot;)
* YourSenseiCreeper
* Olsza

Also huge shoutout for everyone who has put up a pull request that was pulled! Check out the 30+ contributors we have in the [Contributors View](https://github.com/pcottle/learnGitBranching/graphs/contributors)

And everyone who has reported an issue that was successfully closed!
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[NginxProxyManager/nginx-proxy-manager]]></title>
            <link>https://github.com/NginxProxyManager/nginx-proxy-manager</link>
            <guid>https://github.com/NginxProxyManager/nginx-proxy-manager</guid>
            <pubDate>Fri, 04 Jul 2025 00:04:35 GMT</pubDate>
            <description><![CDATA[Docker container for managing Nginx proxy hosts with a simple, powerful interface]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/NginxProxyManager/nginx-proxy-manager">NginxProxyManager/nginx-proxy-manager</a></h1>
            <p>Docker container for managing Nginx proxy hosts with a simple, powerful interface</p>
            <p>Language: JavaScript</p>
            <p>Stars: 27,174</p>
            <p>Forks: 3,131</p>
            <p>Stars today: 206 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
	&lt;img src=&quot;https://nginxproxymanager.com/github.png&quot;&gt;
	&lt;br&gt;&lt;br&gt;
	&lt;img src=&quot;https://img.shields.io/badge/version-2.12.4-green.svg?style=for-the-badge&quot;&gt;
	&lt;a href=&quot;https://hub.docker.com/repository/docker/jc21/nginx-proxy-manager&quot;&gt;
		&lt;img src=&quot;https://img.shields.io/docker/stars/jc21/nginx-proxy-manager.svg?style=for-the-badge&quot;&gt;
	&lt;/a&gt;
	&lt;a href=&quot;https://hub.docker.com/repository/docker/jc21/nginx-proxy-manager&quot;&gt;
		&lt;img src=&quot;https://img.shields.io/docker/pulls/jc21/nginx-proxy-manager.svg?style=for-the-badge&quot;&gt;
	&lt;/a&gt;
&lt;/p&gt;

This project comes as a pre-built docker image that enables you to easily forward to your websites
running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.

- [Quick Setup](#quick-setup)
- [Full Setup](https://nginxproxymanager.com/setup/)
- [Screenshots](https://nginxproxymanager.com/screenshots/)

## Project Goal

I created this project to fill a personal need to provide users with an easy way to accomplish reverse
proxying hosts with SSL termination and it had to be so easy that a monkey could do it. This goal hasn&#039;t changed.
While there might be advanced options they are optional and the project should be as simple as possible
so that the barrier for entry here is low.

&lt;a href=&quot;https://www.buymeacoffee.com/jc21&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://public.jc21.com/github/by-me-a-coffee.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: 51px !important;width: 217px !important;&quot; &gt;&lt;/a&gt;


## Features

- Beautiful and Secure Admin Interface based on [Tabler](https://tabler.github.io/)
- Easily create forwarding domains, redirections, streams and 404 hosts without knowing anything about Nginx
- Free SSL using Let&#039;s Encrypt or provide your own custom SSL certificates
- Access Lists and basic HTTP Authentication for your hosts
- Advanced Nginx configuration available for super users
- User management, permissions and audit log


## Hosting your home network

I won&#039;t go in to too much detail here but here are the basics for someone new to this self-hosted world.

1. Your home router will have a Port Forwarding section somewhere. Log in and find it
2. Add port forwarding for port 80 and 443 to the server hosting this project
3. Configure your domain name details to point to your home, either with a static ip or a service like DuckDNS or [Amazon Route53](https://github.com/jc21/route53-ddns)
4. Use the Nginx Proxy Manager as your gateway to forward to your other web based services

## Quick Setup

1. Install Docker and Docker-Compose

- [Docker Install documentation](https://docs.docker.com/install/)
- [Docker-Compose Install documentation](https://docs.docker.com/compose/install/)

2. Create a docker-compose.yml file similar to this:

```yml
services:
  app:
    image: &#039;docker.io/jc21/nginx-proxy-manager:latest&#039;
    restart: unless-stopped
    ports:
      - &#039;80:80&#039;
      - &#039;81:81&#039;
      - &#039;443:443&#039;
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
```

This is the bare minimum configuration required. See the [documentation](https://nginxproxymanager.com/setup/) for more.

3. Bring up your stack by running

```bash
docker-compose up -d

# If using docker-compose-plugin
docker compose up -d

```

4. Log in to the Admin UI

When your docker container is running, connect to it on port `81` for the admin interface.
Sometimes this can take a little bit because of the entropy of keys.

[http://127.0.0.1:81](http://127.0.0.1:81)

Default Admin User:
```
Email:    admin@example.com
Password: changeme
```

Immediately after logging in with this default user you will be asked to modify your details and change your password.


## Contributing

All are welcome to create pull requests for this project, against the `develop` branch. Official releases are created from the `master` branch.

CI is used in this project. All PR&#039;s must pass before being considered. After passing,
docker builds for PR&#039;s are available on dockerhub for manual verifications.

Documentation within the `develop` branch is available for preview at
[https://develop.nginxproxymanager.com](https://develop.nginxproxymanager.com)


### Contributors

Special thanks to [all of our contributors](https://github.com/NginxProxyManager/nginx-proxy-manager/graphs/contributors).


## Getting Support

1. [Found a bug?](https://github.com/NginxProxyManager/nginx-proxy-manager/issues)
2. [Discussions](https://github.com/NginxProxyManager/nginx-proxy-manager/discussions)
3. [Reddit](https://reddit.com/r/nginxproxymanager)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[eyaltoledano/claude-task-master]]></title>
            <link>https://github.com/eyaltoledano/claude-task-master</link>
            <guid>https://github.com/eyaltoledano/claude-task-master</guid>
            <pubDate>Fri, 04 Jul 2025 00:04:34 GMT</pubDate>
            <description><![CDATA[An AI-powered task-management system you can drop into Cursor, Lovable, Windsurf, Roo, and others.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/eyaltoledano/claude-task-master">eyaltoledano/claude-task-master</a></h1>
            <p>An AI-powered task-management system you can drop into Cursor, Lovable, Windsurf, Roo, and others.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 17,469</p>
            <p>Forks: 1,751</p>
            <p>Stars today: 106 stars today</p>
            <h2>README</h2><pre># Task Master [![GitHub stars](https://img.shields.io/github/stars/eyaltoledano/claude-task-master?style=social)](https://github.com/eyaltoledano/claude-task-master/stargazers)

[![CI](https://github.com/eyaltoledano/claude-task-master/actions/workflows/ci.yml/badge.svg)](https://github.com/eyaltoledano/claude-task-master/actions/workflows/ci.yml) [![npm version](https://badge.fury.io/js/task-master-ai.svg)](https://badge.fury.io/js/task-master-ai) [![Discord](https://dcbadge.limes.pink/api/server/https://discord.gg/taskmasterai?style=flat)](https://discord.gg/taskmasterai) [![License: MIT with Commons Clause](https://img.shields.io/badge/license-MIT%20with%20Commons%20Clause-blue.svg)](LICENSE)

[![NPM Downloads](https://img.shields.io/npm/d18m/task-master-ai?style=flat)](https://www.npmjs.com/package/task-master-ai) [![NPM Downloads](https://img.shields.io/npm/dm/task-master-ai?style=flat)](https://www.npmjs.com/package/task-master-ai) [![NPM Downloads](https://img.shields.io/npm/dw/task-master-ai?style=flat)](https://www.npmjs.com/package/task-master-ai)

## By [@eyaltoledano](https://x.com/eyaltoledano), [@RalphEcom](https://x.com/RalphEcom) &amp; [@jasonzhou1993](https://x.com/jasonzhou1993)

[![Twitter Follow](https://img.shields.io/twitter/follow/eyaltoledano)](https://x.com/eyaltoledano)
[![Twitter Follow](https://img.shields.io/twitter/follow/RalphEcom)](https://x.com/RalphEcom)
[![Twitter Follow](https://img.shields.io/twitter/follow/jasonzhou1993)](https://x.com/jasonzhou1993)

A task management system for AI-driven development with Claude, designed to work seamlessly with Cursor AI.

## Documentation

For more detailed information, check out the documentation in the `docs` directory:

- [Configuration Guide](docs/configuration.md) - Set up environment variables and customize Task Master
- [Tutorial](docs/tutorial.md) - Step-by-step guide to getting started with Task Master
- [Command Reference](docs/command-reference.md) - Complete list of all available commands
- [Task Structure](docs/task-structure.md) - Understanding the task format and features
- [Example Interactions](docs/examples.md) - Common Cursor AI interaction examples
- [Migration Guide](docs/migration-guide.md) - Guide to migrating to the new project structure

#### Quick Install for Cursor 1.0+ (One-Click)

üìã Click the copy button (top-right of code block) then paste into your browser:

```text
cursor://anysphere.cursor-deeplink/mcp/install?name=taskmaster-ai&amp;config=eyJjb21tYW5kIjoibnB4IiwiYXJncyI6WyIteSIsIi0tcGFja2FnZT10YXNrLW1hc3Rlci1haSIsInRhc2stbWFzdGVyLWFpIl0sImVudiI6eyJBTlRIUk9QSUNfQVBJX0tFWSI6IllPVVJfQU5USFJPUElDX0FQSV9LRVlfSEVSRSIsIlBFUlBMRVhJVFlfQVBJX0tFWSI6IllPVVJfUEVSUExFWElUWV9BUElfS0VZX0hFUkUiLCJPUEVOQUlfQVBJX0tFWSI6IllPVVJfT1BFTkFJX0tFWV9IRVJFIiwiR09PR0xFX0FQSV9LRVkiOiJZT1VSX0dPT0dMRV9LRVlfSEVSRSIsIk1JU1RSQUxfQVBJX0tFWSI6IllPVVJfTUlTVFJBTF9LRVlfSEVSRSIsIk9QRU5ST1VURVJfQVBJX0tFWSI6IllPVVJfT1BFTlJPVVRFUl9LRVlfSEVSRSIsIlhBSV9BUElfS0VZIjoiWU9VUl9YQUlfS0VZX0hFUkUiLCJBWlVSRV9PUEVOQUlfQVBJX0tFWSI6IllPVVJfQVpVUkVfS0VZX0hFUkUiLCJPTExBTUFfQVBJX0tFWSI6IllPVVJfT0xMQU1BX0FQSV9LRVlfSEVSRSJ9fQo=
```

&gt; **Note:** After clicking the link, you&#039;ll still need to add your API keys to the configuration. The link installs the MCP server with placeholder keys that you&#039;ll need to replace with your actual API keys.

## Requirements

Taskmaster utilizes AI across several commands, and those require a separate API key. You can use a variety of models from different AI providers provided you add your API keys. For example, if you want to use Claude 3.7, you&#039;ll need an Anthropic API key.

You can define 3 types of models to be used: the main model, the research model, and the fallback model (in case either the main or research fail). Whatever model you use, its provider API key must be present in either mcp.json or .env.

At least one (1) of the following is required:

- Anthropic API key (Claude API)
- OpenAI API key
- Google Gemini API key
- Perplexity API key (for research model)
- xAI API Key (for research or main model)
- OpenRouter API Key (for research or main model)
- Claude Code (no API key required - requires Claude Code CLI)

Using the research model is optional but highly recommended. You will need at least ONE API key (unless using Claude Code). Adding all API keys enables you to seamlessly switch between model providers at will.

## Quick Start

### Option 1: MCP (Recommended)

MCP (Model Control Protocol) lets you run Task Master directly from your editor.

#### 1. Add your MCP config at the following path depending on your editor

| Editor       | Scope   | Linux/macOS Path                      | Windows Path                                      | Key          |
| ------------ | ------- | ------------------------------------- | ------------------------------------------------- | ------------ |
| **Cursor**   | Global  | `~/.cursor/mcp.json`                  | `%USERPROFILE%\.cursor\mcp.json`                  | `mcpServers` |
|              | Project | `&lt;project_folder&gt;/.cursor/mcp.json`   | `&lt;project_folder&gt;\.cursor\mcp.json`               | `mcpServers` |
| **Windsurf** | Global  | `~/.codeium/windsurf/mcp_config.json` | `%USERPROFILE%\.codeium\windsurf\mcp_config.json` | `mcpServers` |
| **VS Code**  | Project | `&lt;project_folder&gt;/.vscode/mcp.json`   | `&lt;project_folder&gt;\.vscode\mcp.json`               | `servers`    |

##### Manual Configuration

###### Cursor &amp; Windsurf (`mcpServers`)

```json
{
  &quot;mcpServers&quot;: {
    &quot;taskmaster-ai&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;--package=task-master-ai&quot;, &quot;task-master-ai&quot;],
      &quot;env&quot;: {
        &quot;ANTHROPIC_API_KEY&quot;: &quot;YOUR_ANTHROPIC_API_KEY_HERE&quot;,
        &quot;PERPLEXITY_API_KEY&quot;: &quot;YOUR_PERPLEXITY_API_KEY_HERE&quot;,
        &quot;OPENAI_API_KEY&quot;: &quot;YOUR_OPENAI_KEY_HERE&quot;,
        &quot;GOOGLE_API_KEY&quot;: &quot;YOUR_GOOGLE_KEY_HERE&quot;,
        &quot;MISTRAL_API_KEY&quot;: &quot;YOUR_MISTRAL_KEY_HERE&quot;,
        &quot;OPENROUTER_API_KEY&quot;: &quot;YOUR_OPENROUTER_KEY_HERE&quot;,
        &quot;XAI_API_KEY&quot;: &quot;YOUR_XAI_KEY_HERE&quot;,
        &quot;AZURE_OPENAI_API_KEY&quot;: &quot;YOUR_AZURE_KEY_HERE&quot;,
        &quot;OLLAMA_API_KEY&quot;: &quot;YOUR_OLLAMA_API_KEY_HERE&quot;
      }
    }
  }
}
```

&gt; üîë Replace `YOUR_‚Ä¶_KEY_HERE` with your real API keys. You can remove keys you don&#039;t use.

&gt; **Note**: If you see `0 tools enabled` in the MCP settings, try removing the `--package=task-master-ai` flag from `args`.

###### VS‚ÄØCode (`servers` + `type`)

```json
{
  &quot;servers&quot;: {
    &quot;taskmaster-ai&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;--package=task-master-ai&quot;, &quot;task-master-ai&quot;],
      &quot;env&quot;: {
        &quot;ANTHROPIC_API_KEY&quot;: &quot;YOUR_ANTHROPIC_API_KEY_HERE&quot;,
        &quot;PERPLEXITY_API_KEY&quot;: &quot;YOUR_PERPLEXITY_API_KEY_HERE&quot;,
        &quot;OPENAI_API_KEY&quot;: &quot;YOUR_OPENAI_KEY_HERE&quot;,
        &quot;GOOGLE_API_KEY&quot;: &quot;YOUR_GOOGLE_KEY_HERE&quot;,
        &quot;MISTRAL_API_KEY&quot;: &quot;YOUR_MISTRAL_KEY_HERE&quot;,
        &quot;OPENROUTER_API_KEY&quot;: &quot;YOUR_OPENROUTER_KEY_HERE&quot;,
        &quot;XAI_API_KEY&quot;: &quot;YOUR_XAI_KEY_HERE&quot;,
        &quot;AZURE_OPENAI_API_KEY&quot;: &quot;YOUR_AZURE_KEY_HERE&quot;
      },
      &quot;type&quot;: &quot;stdio&quot;
    }
  }
}
```

&gt; üîë Replace `YOUR_‚Ä¶_KEY_HERE` with your real API keys. You can remove keys you don&#039;t use.

#### 2. (Cursor-only) Enable Taskmaster MCP

Open Cursor Settings (Ctrl+Shift+J) ‚û° Click on MCP tab on the left ‚û° Enable task-master-ai with the toggle

#### 3. (Optional) Configure the models you want to use

In your editor&#039;s AI chat pane, say:

```txt
Change the main, research and fallback models to &lt;model_name&gt;, &lt;model_name&gt; and &lt;model_name&gt; respectively.
```

For example, to use Claude Code (no API key required):
```txt
Change the main model to claude-code/sonnet
```

[Table of available models](docs/models.md) | [Claude Code setup](docs/examples/claude-code-usage.md)

#### 4. Initialize Task Master

In your editor&#039;s AI chat pane, say:

```txt
Initialize taskmaster-ai in my project
```

#### 5. Make sure you have a PRD (Recommended)

For **new projects**: Create your PRD at `.taskmaster/docs/prd.txt`  
For **existing projects**: You can use `scripts/prd.txt` or migrate with `task-master migrate`

An example PRD template is available after initialization in `.taskmaster/templates/example_prd.txt`.

&gt; [!NOTE]
&gt; While a PRD is recommended for complex projects, you can always create individual tasks by asking &quot;Can you help me implement [description of what you want to do]?&quot; in chat.

**Always start with a detailed PRD.**

The more detailed your PRD, the better the generated tasks will be.

#### 6. Common Commands

Use your AI assistant to:

- Parse requirements: `Can you parse my PRD at scripts/prd.txt?`
- Plan next step: `What&#039;s the next task I should work on?`
- Implement a task: `Can you help me implement task 3?`
- View multiple tasks: `Can you show me tasks 1, 3, and 5?`
- Expand a task: `Can you help me expand task 4?`
- **Research fresh information**: `Research the latest best practices for implementing JWT authentication with Node.js`
- **Research with context**: `Research React Query v5 migration strategies for our current API implementation in src/api.js`

[More examples on how to use Task Master in chat](docs/examples.md)

### Option 2: Using Command Line

#### Installation

```bash
# Install globally
npm install -g task-master-ai

# OR install locally within your project
npm install task-master-ai
```

#### Initialize a new project

```bash
# If installed globally
task-master init

# If installed locally
npx task-master init

# Initialize project with specific rules
task-master init --rules cursor,windsurf,vscode
```

This will prompt you for project details and set up a new project with the necessary files and structure.

#### Common Commands

```bash
# Initialize a new project
task-master init

# Parse a PRD and generate tasks
task-master parse-prd your-prd.txt

# List all tasks
task-master list

# Show the next task to work on
task-master next

# Show specific task(s) - supports comma-separated IDs
task-master show 1,3,5

# Research fresh information with project context
task-master research &quot;What are the latest best practices for JWT authentication?&quot;

# Generate task files
task-master generate

# Add rules after initialization
task-master rules add windsurf,roo,vscode
```

## Claude Code Support

Task Master now supports Claude models through the Claude Code CLI, which requires no API key:

- **Models**: `claude-code/opus` and `claude-code/sonnet`
- **Requirements**: Claude Code CLI installed
- **Benefits**: No API key needed, uses your local Claude instance

[Learn more about Claude Code setup](docs/examples/claude-code-usage.md)

## Troubleshooting

### If `task-master init` doesn&#039;t respond

Try running it with Node directly:

```bash
node node_modules/claude-task-master/scripts/init.js
```

Or clone the repository and run:

```bash
git clone https://github.com/eyaltoledano/claude-task-master.git
cd claude-task-master
node scripts/init.js
```

## Contributors

&lt;a href=&quot;https://github.com/eyaltoledano/claude-task-master/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=eyaltoledano/claude-task-master&quot; alt=&quot;Task Master project contributors&quot; /&gt;
&lt;/a&gt;

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=eyaltoledano/claude-task-master&amp;type=Timeline)](https://www.star-history.com/#eyaltoledano/claude-task-master&amp;Timeline)

## Licensing

Task Master is licensed under the MIT License with Commons Clause. This means you can:

‚úÖ **Allowed**:

- Use Task Master for any purpose (personal, commercial, academic)
- Modify the code
- Distribute copies
- Create and sell products built using Task Master

‚ùå **Not Allowed**:

- Sell Task Master itself
- Offer Task Master as a hosted service
- Create competing products based on Task Master

See the [LICENSE](LICENSE) file for the complete license text and [licensing details](docs/licensing.md) for more information.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[birobirobiro/awesome-shadcn-ui]]></title>
            <link>https://github.com/birobirobiro/awesome-shadcn-ui</link>
            <guid>https://github.com/birobirobiro/awesome-shadcn-ui</guid>
            <pubDate>Fri, 04 Jul 2025 00:04:33 GMT</pubDate>
            <description><![CDATA[A curated list of awesome things related to shadcn/ui.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/birobirobiro/awesome-shadcn-ui">birobirobiro/awesome-shadcn-ui</a></h1>
            <p>A curated list of awesome things related to shadcn/ui.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 15,477</p>
            <p>Forks: 901</p>
            <p>Stars today: 34 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;br&gt;
  &lt;img width=&quot;400&quot; src=&quot;https://raw.githubusercontent.com/birobirobiro/awesome-shadcn-ui/64729b2c178e3fdcb42c0c7bf341bcde7ae502ea/assets/logo.svg&quot; alt=&quot;logo of awesome-shadcn/ui repository&quot;&gt;
  &lt;br&gt;
  &lt;br&gt;
&lt;/p&gt;

&lt;h2 align=&#039;center&#039;&gt;awesome-shadcn/ui&lt;/h2&gt;

&lt;p align=&#039;center&#039;&gt;
A curated list of awesome things related to &lt;a href=&#039;https://ui.shadcn.com/&#039; target=&quot;_blank&quot;&gt;shadcn/ui&lt;/a&gt;
&lt;br&gt;&lt;br&gt;

&lt;p align=&#039;center&#039;&gt;
&lt;i&gt;Created by: &lt;a href=&#039;https://birobirobiro.dev/&#039; target=&quot;_blank&quot;&gt;birobirobiro.dev&lt;/a&gt;&lt;/i&gt;
&lt;br&gt;&lt;br&gt;

&lt;a href=&#039;https://github.com/birobirobiro/awesome-shadcn-ui/&#039; target=&quot;_blank&quot;&gt;
&lt;img src=&#039;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg&#039; alt=&#039;Awesome&#039;&gt;
&lt;/a&gt;
&lt;/p&gt;

## Libs and Components

| Name | Description | Link | Date |
|------|-------------|------|------|
| 21st.dev                              | Open source npm for shadcn/ui components. Also: Dribble for design engineers. Install UI components via shadcn CLI, or publish your own.                                                                                                        | [Link](https://21st.dev/)                                                               | 2024-12-06 |
| 8bitcn.com                            | A set of retro-designed, accessible components and a code distribution platform. Open Source. Open Code.                                                                                                                                        | [Link](https://www.8bitcn.com/)                                                         | 2025-04-12 |
| aceternity-ui                         | Copy paste the most trending react components without having to worry about styling and animations.                                                                                                                                             | [Link](https://ui.aceternity.com/)                                                      | 2024-12-06 |
| animated-tabs                         | Vercel-like animated tabs.                                                                                                                                                                                                                      | [Link](https://github.com/mehrdadrafiee/animated-tabs)                                  | 2025-04-06 |
| assistant-ui                          | React Components for AI Chat.                                                                                                                                                                                                                   | [Link](https://github.com/Yonom/assistant-ui)                                           | 2024-09-23 |
| autocomplete-select-shadcn-ui         | Autocomplete component built with shadcn/ui and Fancy Multi Select by Maximilian Kaske.                                                                                                                                                         | [Link](https://www.armand-salle.fr/post/autocomplete-select-shadcn-ui)                  | 2024-04-07 |
| auto-form                             | A React component that automatically creates a shadcn/ui form based on a zod schema.                                                                                                                                                            | [Link](https://github.com/vantezzen/auto-form)                                          | 2024-04-29 |
| async-select                          | Async Select component built with shadcn/ui with debounce search.                                                                                                                                                                               | [Link](https://async.rdsx.dev)                                                          | 2024-07-22 |
| berlix                                | Animated components library built using Tailwind CSS and Motion                                                                                                                                                                                 | [Link](https://berlix.vercel.app)                                                       | 2025-06-10 |
| big-calendar                          | A modern, feature-rich calendar application with multiple viewing options built using Next.js, TypeScript, and Tailwind CSS.                                                                                                                    | [Link](https://github.com/lramos33/big-calendar)                                        | 2025-03-08 |
| buouui                                | A UI component library and template suite based on shadcn/ui with stunning landing pages, templates, and rich animations.                                                                                                                       | [Link](https://buouui.com)                                                              | 2025-04-06 |
| bundui                                | A collection of reusable animated components built with Tailwind CSS and Framer Motion.                                                                                                                                                         | [Link](https://bundui.io)                                                               | 2024-09-23 |
| calendar                              | React/shadcn full calendar like Google Calendar                                                                                                                                                                                                 | [Link](https://github.com/charlietlamb/calendar)                                        | 2024-05-03 |
| capture-photo                         | Browser-based React component for camera functionalities in web applications.                                                                                                                                                                   | [Link](https://github.com/UretzkyZvi/capture-photo)                                     | 2024-05-06 |
| clerk-elements                        | Composable components for building custom UIs on top of Clerk&#039;s APIs.                                                                                                                                                                           | [Link](https://clerk.com/docs/elements/examples/shadcn-ui)                              | 2024-06-07 |
| clerk-shadcn-theme                    | Synchronize Clerk SignIn/SignUp components with shadcn/ui styles.                                                                                                                                                                               | [Link](https://github.com/stormynight9/clerk-shadcn-theme)                              | 2024-06-07 |
| commerce-ui                           | Components, blocks and examples to build e-commerce storefronts and apps.                                                                                                                                                                       | [Link](https://github.com/stackzero-labs/ui)                                            | 2025-02-20 |
| confirm-dialog                        | A confirm dialog component built with shadcn/ui.                                                                                                                                                                                                | [Link](https://github.com/Aslam97/react-confirm-dialog)                                 | 2024-07-02 |
| country-state-dropdown                | Component built with Nextjs, Tailwindcss, shadcn/ui &amp; Zustand.                                                                                                                                                                                  | [Link](https://github.com/Jayprecode/country-state-dropdown)                            | 2024-02-22 |
| cult-ui                               | Curated set of animated shadcn-style React components.                                                                                                                                                                                          | [Link](https://www.cult-ui.com/)                                                        | 2024-05-29 |
| credenza                              | Ready-made responsive modal component for shadcn/ui.                                                                                                                                                                                            | [Link](https://github.com/redpangilinan/credenza)                                       | 2024-06-07 |
| crypto-charts                         | Crypto charts made for shadcn/ui using PythNetwork.                                                                                                                                                                                             | [Link](https://github.com/jstnw10/crypto-charts)                                        | 2024-07-16 |
| date-range-picker-for-shadcn          | Multi-month views, text entry, preset ranges, responsive design, and date range comparisons.                                                                                                                                                    | [Link](https://github.com/johnpolacek/date-range-picker-for-shadcn)                     | 2024-04-29 |
| date-time-picker-shadcn               | Datetime Picker for shadNext Project.                                                                                                                                                                                                           | [Link](https://shadcn-datetime-picker.vercel.app)                                       | 2024-07-16 |
| date-time-range-picker-shadcn         | Fully featured date-time range picker with multi-month views, timezone support, preset ranges, and modular components for date and time selection.                                                                                              | [Link](https://date-time-range-picker.vercel.app/)                                      | 2025-03-08 |
| datetime-picker                       | Datetime picker with timezone support, min/max dates, and month/year selection.                                                                                                                                                                 | [Link](https://shadcn-datetime-picker-xi.vercel.app)                                    | 2024-07-16 |
| dnd-dashboard                         | Dashboard with drop-to-swap layouts using Next.js, shadcn/ui, and swapy.                                                                                                                                                                        | [Link](https://github.com/olliethedev/dnd-dashboard)                                    | 2024-10-17 |
| downshift-shadcn-combobox             | Combobox/autocomplete component built with shadcn/ui and Downshift.                                                                                                                                                                             | [Link](https://github.com/TheOmer77/downshift-shadcn-combobox)                          | 2024-06-27 |
| drag-to-resize-sidebar                | Extended shadcn/ui sidebar component with persisted state drag-to-resize functionality.                                                                                                                                                         | [Link](https://github.com/lumpinif/drag-to-resize-sidebar)                              | 2024-11-21 |
| druid/ui                              | Intercom inspired AI chatbot and UI components built on shadcn/ui.                                                                                                                                                                              | [Link](https://druidui.com/)                                                            | 2024-11-21 |
| drop-drawer                           | A dropdown menu on desktop and a drawer on mobile devices.                                                                                                                                                                                      | [Link](https://github.com/jiaweing/DropDrawer)                                          | 2025-05-13 |
| dy-comps                              | shacn/ui &amp; Framer Motion React components ‚Äî flexible, responsive &amp; easy to drop into any project.                                                                                                                                               | [Link](https://dycomps.oimmi.com/)                                                      | 2025-03-08 |
| echo-editor                           | Modern WYSIWYG rich-text editor based on tiptap and shadcn/ui.                                                                                                                                                                                  | [Link](https://github.com/Seedsa/echo-editor)                                           | 2024-06-07 |
| edil-ozi                              | React components with Gsap, framer motion, and tailwind.                                                                                                                                                                                        | [Link](https://edilozi.pro/)                                                            | 2024-06-27 |
| emblor                                | Customizable, accessible tag input component with shadcn/ui.                                                                                                                                                                                    | [Link](https://github.com/JaleelB/emblor)                                               | 2024-04-29 |
| enhanced-button                       | Enhanced version of the default shadcn-button component.                                                                                                                                                                                        | [Link](https://github.com/jakobhoeg/enhanced-button)                                    | 2024-04-29 |
| eo-n/ui                               | Enhanced UI components built on shadcn‚Äôs robust foundation, integrated with Base UI and Tailwind CSS for a modern and customizable design system.                                                                                               | [Link](https://github.com/aeonzz/eo-n)                                                  | 2025-04-04 |
| event-timeline-roadmap                | A pair of customizable, animated event timeline and roadmap components                                                                                                                                                                          | [Link](https://roadmap.hncore.website/)                                                 | 2025-04-01 |
| extend-ui                             | Reusable components built on shadcn/ui for web applications.                                                                                                                                                                                    | [Link](https://www.extend-ui.com/)                                                      | 2024-11-28 |
| fancy-area                            | Textarea with @mention support inspired by GitHub&#039;s PR comment section.                                                                                                                                                                         | [Link](https://craft.mxkaske.dev/post/fancy-area)                                       | 2024-06-27 |
| fancy-box                             | GitHub PR label selector-inspired Combobox with radix-ui components.                                                                                                                                                                            | [Link](https://craft.mxkaske.dev/post/fancy-box)                                        | 2024-07-11 |
| fancy-multi-select                    | Multi Select Component inspired by campsite.design and cal.com.                                                                                                                                                                                 | [Link](https://craft.mxkaske.dev/post/fancy-multi-select)                               | 2024-04-29 |
| fancy-switch                          | Fancy switch component built with shadcn/ui.                                                                                                                                                                                                    | [Link](https://github.com/Aslam97/react-fancy-switch)                                   | 2024-07-11 |
| farmui                                | Styled and animated component library with npm package support.                                                                                                                                                                                 | [Link](https://farmui.com)                                                              | 2024-06-08 |
| file-uploader                         | File uploader with shadcn/ui and react-dropzone.                                                                                                                                                                                                | [Link](https://github.com/sadmann7/file-uploader)                                       | 2024-06-07 |
| file-vault                            | File upload component for React.                                                                                                                                                                                                                | [Link](https://github.com/ManishBisht777/file-vault)                                    | 2024-06-07 |
| floating-dragable-card                | Dragable and resizable card using shadcn/ui elements.                                                                                                                                                                                           | [Link](https://github.com/nishansanjuka/react-drag-card)                                | 2024-11-13 |
| fusion-ui                             | Library combining shadcn/ui and MagicUI.                                                                                                                                                                                                        | [Link](https://github.com/nyxb-ui/ui)                                                   | 2024-07-02 |
| glasscn-ui                            | shadcn/ui component library with glassmorphism variants, and many additional components.                                                                                                                                                        | [Link](https://github.com/itsjavi/glasscn-ui)                                           | 2025-06-10 |
| gluestack-ui                          | React &amp; React Native Components with Tailwind CSS.                                                                                              

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[ppl-ai/modelcontextprotocol]]></title>
            <link>https://github.com/ppl-ai/modelcontextprotocol</link>
            <guid>https://github.com/ppl-ai/modelcontextprotocol</guid>
            <pubDate>Fri, 04 Jul 2025 00:04:32 GMT</pubDate>
            <description><![CDATA[A Model Context Protocol Server connector for Perplexity API, to enable web search without leaving the MCP ecosystem.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ppl-ai/modelcontextprotocol">ppl-ai/modelcontextprotocol</a></h1>
            <p>A Model Context Protocol Server connector for Perplexity API, to enable web search without leaving the MCP ecosystem.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,327</p>
            <p>Forks: 176</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre># Perplexity Ask MCP Server

An MCP server implementation that integrates the Sonar API to provide Claude with unparalleled real-time, web-wide research.

Please refer to the official [DeepWiki page](https://deepwiki.com/ppl-ai/modelcontextprotocol) for assistance with implementation. 

# High-level System Architecture

*Credits: DeepWiki powered by Devin*

![System Architecture](perplexity-ask/assets/system_architecture.png)





![Demo](perplexity-ask/assets/demo_screenshot.png)


## Tools

- **perplexity_ask**
  - Engage in a conversation with the Sonar API for live web searches.
  - **Inputs:**
    - `messages` (array): An array of conversation messages.
      - Each message must include:
        - `role` (string): The role of the message (e.g., `system`, `user`, `assistant`).
        - `content` (string): The content of the message.

## Configuration

### Step 1: 

Clone this repository:

```bash
git clone git@github.com:ppl-ai/modelcontextprotocol.git
```

Navigate to the `perplexity-ask` directory and install the necessary dependencies:

```bash
cd modelcontextprotocol/perplexity-ask &amp;&amp; npm install
```

### Step 2: Get a Sonar API Key

1. Sign up for a [Sonar API account](https://docs.perplexity.ai/guides/getting-started).
2. Follow the account setup instructions and generate your API key from the developer dashboard.
3. Set the API key in your environment as `PERPLEXITY_API_KEY`.

### Step 3: Configure Claude Desktop

1. Download Claude desktop [here](https://claude.ai/download). 

2. Add this to your `claude_desktop_config.json`:

```json
{
  &quot;mcpServers&quot;: {
    &quot;perplexity-ask&quot;: {
      &quot;command&quot;: &quot;docker&quot;,
      &quot;args&quot;: [
        &quot;run&quot;,
        &quot;-i&quot;,
        &quot;--rm&quot;,
        &quot;-e&quot;,
        &quot;PERPLEXITY_API_KEY&quot;,
        &quot;mcp/perplexity-ask&quot;
      ],
      &quot;env&quot;: {
        &quot;PERPLEXITY_API_KEY&quot;: &quot;YOUR_API_KEY_HERE&quot;
      }
    }
  }
}
```

### NPX

```json
{
  &quot;mcpServers&quot;: {
    &quot;perplexity-ask&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;-y&quot;,
        &quot;server-perplexity-ask&quot;
      ],
      &quot;env&quot;: {
        &quot;PERPLEXITY_API_KEY&quot;: &quot;YOUR_API_KEY_HERE&quot;
      }
    }
  }
}
```

You can access the file using:

```bash
vim ~/Library/Application\ Support/Claude/claude_desktop_config.json
```

### Step 4: Build the Docker Image

Docker build:

```bash
docker build -t mcp/perplexity-ask:latest -f Dockerfile .
```

### Step 5: Testing

Let&#039;s make sure Claude for Desktop is picking up the two tools we&#039;ve exposed in our `perplexity-ask` server. You can do this by looking for the hammer icon:

![Claude Visual Tools](perplexity-ask/assets/visual-indicator-mcp-tools.png)

After clicking on the hammer icon, you should see the tools that come with the Filesystem MCP Server:

![Available Integration](perplexity-ask/assets/available_tools.png)

If you see both of these this means that the integration is active. Congratulations! This means Claude can now ask Perplexity. You can then simply use it as you would use the Perplexity web app.  

### Step 6: Advanced parameters

Currently, the search parameters used are the default ones. You can modify any search parameter in the API call directly in the `index.ts` script. For this, please refer to the official [API documentation](https://docs.perplexity.ai/api-reference/chat-completions).

### Troubleshooting 

The Claude documentation provides an excellent [troubleshooting guide](https://modelcontextprotocol.io/docs/tools/debugging) you can refer to. However, you can still reach out to us at api@perplexity.ai for any additional support or [file a bug](https://github.com/ppl-ai/api-discussion/issues). 


# Cursor integration

You can also use our MCP with Cursor (or any other app that supports this). To use Sonar with Cursor, you can follow the following steps. 

### Step 1: Navigate to your Cursor settings:

![Cursor Settings](perplexity-ask/assets/cursor-settings.png)

### Step 2: Navigate to the MCP directory

And click on `Add new global MCP server`

![Add Server](perplexity-ask/assets/cursor-mcp-directory.png)


### Step 3: Insert the MCP Server Configuration from above 

This is the same configuration you would use for any other application that supports MCP. 

You should then see the application being part of your available tools like this:

![Cursor MCP](perplexity-ask/assets/perplexity-ask-mcp-cursor.png)


## License

This MCP server is licensed under the MIT License. This means you are free to use, modify, and distribute the software, subject to the terms and conditions of the MIT License. For more details, please see the LICENSE file in the project repository.

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WhiskeySockets/Baileys]]></title>
            <link>https://github.com/WhiskeySockets/Baileys</link>
            <guid>https://github.com/WhiskeySockets/Baileys</guid>
            <pubDate>Fri, 04 Jul 2025 00:04:31 GMT</pubDate>
            <description><![CDATA[Lightweight full-featured typescript/javascript WhatsApp Web API]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WhiskeySockets/Baileys">WhiskeySockets/Baileys</a></h1>
            <p>Lightweight full-featured typescript/javascript WhatsApp Web API</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,961</p>
            <p>Forks: 1,981</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&#039;center&#039;&gt;&lt;img alt=&quot;Baileys logo&quot; src=&quot;https://raw.githubusercontent.com/WhiskeySockets/Baileys/refs/heads/master/Media/logo.png&quot; height=&quot;75&quot;/&gt;&lt;/h1&gt;

&lt;div align=&#039;center&#039;&gt;

![NPM Downloads](https://img.shields.io/npm/dw/%40whiskeysockets%2Fbaileys?label=npm&amp;color=%23CB3837)
![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/whiskeysockets/baileys)
![Discord](https://img.shields.io/discord/725839806084546610?label=discord&amp;color=%235865F2)

&lt;/div&gt;

&lt;div align=&#039;center&#039;&gt;Baileys is a WebSockets-based TypeScript library for interacting with the WhatsApp Web API.&lt;/div&gt;

# Important Note
This is a temporally README, the new guide is at development and will be fully released when it&#039;s finished.

New Guide: https://baileys.wiki

# Sponsor
If you&#039;d like to financially support this project, you can do so by supporting the current maintainer [here](https://purpshell.dev/sponsor).

# Disclaimer
This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates.
The official WhatsApp website can be found at whatsapp.com. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners.

The maintainers of Baileys do not in any way condone the use of this application in practices that violate the Terms of Service of WhatsApp. The maintainers of this application call upon the personal responsibility of its users to use this application in a fair way, as it is intended to be used.
Use at your own discretion. Do not spam people with this. We discourage any stalkerware, bulk or automated messaging usage.

##

- Baileys does not require Selenium or any other browser to be interface with WhatsApp Web, it does so directly using a **WebSocket**. 
- Not running Selenium or Chromium saves you like **half a gig** of ram :/ 
- Baileys supports interacting with the multi-device &amp; web versions of WhatsApp.
- Thank you to [@pokearaujo](https://github.com/pokearaujo/multidevice) for writing his observations on the workings of WhatsApp Multi-Device. Also, thank you to [@Sigalor](https://github.com/sigalor/whatsapp-web-reveng) for writing his observations on the workings of WhatsApp Web and thanks to [@Rhymen](https://github.com/Rhymen/go-whatsapp/) for the __go__ implementation.

&gt; [!IMPORTANT]
&gt; The original repository had to be removed by the original author - we now continue development in this repository here.
This is the only official repository and is maintained by the community.
&gt; **Join the Discord [here](https://discord.gg/WeJM5FP9GG)**
 
## Example

Do check out &amp; run [example.ts](Example/example.ts) to see an example usage of the library.
The script covers most common use cases.
To run the example script, download or clone the repo and then type the following in a terminal:
1. ``` cd path/to/Baileys ```
2. ``` yarn ```
3. ``` yarn example ```

## Install

Use the stable version:
```
yarn add @whiskeysockets/baileys
```

Use the edge version (no guarantee of stability, but latest fixes + features)
```
yarn add github:WhiskeySockets/Baileys
```

Then import your code using:
```ts 
import makeWASocket from &#039;@whiskeysockets/baileys&#039;
```

# Links

- [Discord](https://discord.gg/WeJM5FP9GG)
- [Docs](https://guide.whiskeysockets.io/)

# Index

- [Connecting Account](#connecting-account)
    - [Connect with QR-CODE](#starting-socket-with-qr-code)
    - [Connect with Pairing Code](#starting-socket-with-pairing-code)
    - [Receive Full History](#receive-full-history)
- [Important Notes About Socket Config](#important-notes-about-socket-config)
    - [Caching Group Metadata (Recommended)](#caching-group-metadata-recommended)
    - [Improve Retry System &amp; Decrypt Poll Votes](#improve-retry-system--decrypt-poll-votes)
    - [Receive Notifications in Whatsapp App](#receive-notifications-in-whatsapp-app)

- [Save Auth Info](#saving--restoring-sessions)
- [Handling Events](#handling-events)
    - [Example to Start](#example-to-start)
    - [Decrypt Poll Votes](#decrypt-poll-votes)
    - [Summary of Events on First Connection](#summary-of-events-on-first-connection)
- [Implementing a Data Store](#implementing-a-data-store)
- [Whatsapp IDs Explain](#whatsapp-ids-explain)
- [Utility Functions](#utility-functions)
- [Sending Messages](#sending-messages)
    - [Non-Media Messages](#non-media-messages)
        - [Text Message](#text-message)
        - [Quote Message](#quote-message-works-with-all-types)
        - [Mention User](#mention-user-works-with-most-types)
        - [Forward Messages](#forward-messages)
        - [Location Message](#location-message)
        - [Contact Message](#contact-message)
        - [Reaction Message](#reaction-message)
        - [Pin Message](#pin-message)
        - [Poll Message](#poll-message)
    - [Sending with Link Preview](#sending-messages-with-link-previews)
    - [Media Messages](#media-messages)
        - [Gif Message](#gif-message)
        - [Video Message](#video-message)
        - [Audio Message](#audio-message)
        - [Image Message](#image-message)
        - [ViewOnce Message](#view-once-message)
- [Modify Messages](#modify-messages)
    - [Delete Messages (for everyone)](#deleting-messages-for-everyone)
    - [Edit Messages](#editing-messages)
- [Manipulating Media Messages](#manipulating-media-messages)
    - [Thumbnail in Media Messages](#thumbnail-in-media-messages)
    - [Downloading Media Messages](#downloading-media-messages)
    - [Re-upload Media Message to Whatsapp](#re-upload-media-message-to-whatsapp)
- [Reject Call](#reject-call)
- [Send States in Chat](#send-states-in-chat)
    - [Reading Messages](#reading-messages)
    - [Update Presence](#update-presence)
- [Modifying Chats](#modifying-chats)
    - [Archive a Chat](#archive-a-chat)
    - [Mute/Unmute a Chat](#muteunmute-a-chat)
    - [Mark a Chat Read/Unread](#mark-a-chat-readunread)
    - [Delete a Message for Me](#delete-a-message-for-me)
    - [Delete a Chat](#delete-a-chat)
    - [Star/Unstar a Message](#starunstar-a-message)
    - [Disappearing Messages](#disappearing-messages)
- [User Querys](#user-querys)
    - [Check If ID Exists in Whatsapp](#check-if-id-exists-in-whatsapp)
    - [Query Chat History (groups too)](#query-chat-history-groups-too)
    - [Fetch Status](#fetch-status)
    - [Fetch Profile Picture (groups too)](#fetch-profile-picture-groups-too)
    - [Fetch Bussines Profile (such as description or category)](#fetch-bussines-profile-such-as-description-or-category)
    - [Fetch Someone&#039;s Presence (if they&#039;re typing or online)](#fetch-someones-presence-if-theyre-typing-or-online)
- [Change Profile](#change-profile)
    - [Change Profile Status](#change-profile-status)
    - [Change Profile Name](#change-profile-name)
    - [Change Display Picture (groups too)](#change-display-picture-groups-too)
    - [Remove display picture (groups too)](#remove-display-picture-groups-too)
- [Groups](#groups)
    - [Create a Group](#create-a-group)
    - [Add/Remove or Demote/Promote](#addremove-or-demotepromote)
    - [Change Subject (name)](#change-subject-name)
    - [Change Description](#change-description)
    - [Change Settings](#change-settings)
    - [Leave a Group](#leave-a-group)
    - [Get Invite Code](#get-invite-code)
    - [Revoke Invite Code](#revoke-invite-code)
    - [Join Using Invitation Code](#join-using-invitation-code)
    - [Get Group Info by Invite Code](#get-group-info-by-invite-code)
    - [Query Metadata (participants, name, description...)](#query-metadata-participants-name-description)
    - [Join using groupInviteMessage](#join-using-groupinvitemessage)
    - [Get Request Join List](#get-request-join-list)
    - [Approve/Reject Request Join](#approvereject-request-join)
    - [Get All Participating Groups Metadata](#get-all-participating-groups-metadata)
    - [Toggle Ephemeral](#toggle-ephemeral)
    - [Change Add Mode](#change-add-mode)
- [Privacy](#privacy)
    - [Block/Unblock User](#blockunblock-user)
    - [Get Privacy Settings](#get-privacy-settings)
    - [Get BlockList](#get-blocklist)
    - [Update LastSeen Privacy](#update-lastseen-privacy)
    - [Update Online Privacy](#update-online-privacy)
    - [Update Profile Picture Privacy](#update-profile-picture-privacy)
    - [Update Status Privacy](#update-status-privacy)
    - [Update Read Receipts Privacy](#update-read-receipts-privacy)
    - [Update Groups Add Privacy](#update-groups-add-privacy)
    - [Update Default Disappearing Mode](#update-default-disappearing-mode)
- [Broadcast Lists &amp; Stories](#broadcast-lists--stories)
    - [Send Broadcast &amp; Stories](#send-broadcast--stories)
    - [Query a Broadcast List&#039;s Recipients &amp; Name](#query-a-broadcast-lists-recipients--name)
- [Writing Custom Functionality](#writing-custom-functionality)
    - [Enabling Debug Level in Baileys Logs](#enabling-debug-level-in-baileys-logs)
    - [How Whatsapp Communicate With Us](#how-whatsapp-communicate-with-us)
    - [Register a Callback for Websocket Events](#register-a-callback-for-websocket-events)

## Connecting Account

WhatsApp provides a multi-device API that allows Baileys to be authenticated as a second WhatsApp client by scanning a **QR code** or **Pairing Code** with WhatsApp on your phone.

&gt; [!NOTE]
&gt; **[Here](#example-to-start) is a simple example of event handling**

&gt; [!TIP]
&gt; **You can see all supported socket configs [here](https://baileys.whiskeysockets.io/types/SocketConfig.html) (Recommended)**

### Starting socket with **QR-CODE**

&gt; [!TIP]
&gt; You can customize browser name if you connect with **QR-CODE**, with `Browser` constant, we have some browsers config, **see [here](https://baileys.whiskeysockets.io/types/BrowsersMap.html)**

```ts
import makeWASocket from &#039;@whiskeysockets/baileys&#039;

const sock = makeWASocket({
    // can provide additional config here
    browser: Browsers.ubuntu(&#039;My App&#039;),
    printQRInTerminal: true
})
```

If the connection is successful, you will see a QR code printed on your terminal screen, scan it with WhatsApp on your phone and you&#039;ll be logged in!

### Starting socket with **Pairing Code**


&gt; [!IMPORTANT]
&gt; Pairing Code isn&#039;t Mobile API, it&#039;s a method to connect Whatsapp Web without QR-CODE, you can connect only with one device, see [here](https://faq.whatsapp.com/1324084875126592/?cms_platform=web)

The phone number can&#039;t have `+` or `()` or `-`, only numbers, you must provide country code

```ts
import makeWASocket from &#039;@whiskeysockets/baileys&#039;

const sock = makeWASocket({
    // can provide additional config here
    printQRInTerminal: false //need to be false
})

if (!sock.authState.creds.registered) {
    const number = &#039;XXXXXXXXXXX&#039;
    const code = await sock.requestPairingCode(number)
    console.log(code)
}
```

### Receive Full History

1. Set `syncFullHistory` as `true`
2. Baileys, by default, use chrome browser config
    - If you&#039;d like to emulate a desktop connection (and receive more message history), this browser setting to your Socket config:

```ts
const sock = makeWASocket({
    ...otherOpts,
    // can use Windows, Ubuntu here too
    browser: Browsers.macOS(&#039;Desktop&#039;),
    syncFullHistory: true
})
```

## Important Notes About Socket Config

### Caching Group Metadata (Recommended)
- If you use baileys for groups, we recommend you to set `cachedGroupMetadata` in socket config, you need to implement a cache like this:

    ```ts
    const groupCache = new NodeCache({stdTTL: 5 * 60, useClones: false})

    const sock = makeWASocket({
        cachedGroupMetadata: async (jid) =&gt; groupCache.get(jid)
    })

    sock.ev.on(&#039;groups.update&#039;, async ([event]) =&gt; {
        const metadata = await sock.groupMetadata(event.id)
        groupCache.set(event.id, metadata)
    })

    sock.ev.on(&#039;group-participants.update&#039;, async (event) =&gt; {
        const metadata = await sock.groupMetadata(event.id)
        groupCache.set(event.id, metadata)
    })
    ```

### Improve Retry System &amp; Decrypt Poll Votes
- If you want to improve sending message, retrying when error occurs and decrypt poll votes, you need to have a store and set `getMessage` config in socket like this:
    ```ts
    const sock = makeWASocket({
        getMessage: async (key) =&gt; await getMessageFromStore(key)
    })
    ```

### Receive Notifications in Whatsapp App
- If you want to receive notifications in whatsapp app, set `markOnlineOnConnect` to `false`
    ```ts
    const sock = makeWASocket({
        markOnlineOnConnect: false
    })
    ```
## Saving &amp; Restoring Sessions

You obviously don&#039;t want to keep scanning the QR code every time you want to connect. 

So, you can load the credentials to log back in:
```ts
import makeWASocket, { useMultiFileAuthState } from &#039;@whiskeysockets/baileys&#039;

const { state, saveCreds } = await useMultiFileAuthState(&#039;auth_info_baileys&#039;)

// will use the given state to connect
// so if valid credentials are available -- it&#039;ll connect without QR
const sock = makeWASocket({ auth: state })

// this will be called as soon as the credentials are updated
sock.ev.on(&#039;creds.update&#039;, saveCreds)
```

&gt; [!IMPORTANT]
&gt; `useMultiFileAuthState` is a utility function to help save the auth state in a single folder, this function serves as a good guide to help write auth &amp; key states for SQL/no-SQL databases, which I would recommend in any production grade system.

&gt; [!NOTE]
&gt; When a message is received/sent, due to signal sessions needing updating, the auth keys (`authState.keys`) will update. Whenever that happens, you must save the updated keys (`authState.keys.set()` is called). Not doing so will prevent your messages from reaching the recipient &amp; cause other unexpected consequences. The `useMultiFileAuthState` function automatically takes care of that, but for any other serious implementation -- you will need to be very careful with the key state management.

## Handling Events

- Baileys uses the EventEmitter syntax for events. 
They&#039;re all nicely typed up, so you shouldn&#039;t have any issues with an Intellisense editor like VS Code.

&gt; [!IMPORTANT]
&gt; **The events are [these](https://baileys.whiskeysockets.io/types/BaileysEventMap.html)**, it&#039;s important you see all events

You can listen to these events like this:
```ts
const sock = makeWASocket()
sock.ev.on(&#039;messages.upsert&#039;, ({ messages }) =&gt; {
    console.log(&#039;got messages&#039;, messages)
})
```

### Example to Start

&gt; [!NOTE]
&gt; This example includes basic auth storage too

```ts
import makeWASocket, { DisconnectReason, useMultiFileAuthState } from &#039;@whiskeysockets/baileys&#039;
import { Boom } from &#039;@hapi/boom&#039;

async function connectToWhatsApp () {
    const { state, saveCreds } = await useMultiFileAuthState(&#039;auth_info_baileys&#039;)
    const sock = makeWASocket({
        // can provide additional config here
        auth: state,
        printQRInTerminal: true
    })
    sock.ev.on(&#039;connection.update&#039;, (update) =&gt; {
        const { connection, lastDisconnect } = update
        if(connection === &#039;close&#039;) {
            const shouldReconnect = (lastDisconnect.error as Boom)?.output?.statusCode !== DisconnectReason.loggedOut
            console.log(&#039;connection closed due to &#039;, lastDisconnect.error, &#039;, reconnecting &#039;, shouldReconnect)
            // reconnect if not logged out
            if(shouldReconnect) {
                connectToWhatsApp()
            }
        } else if(connection === &#039;open&#039;) {
            console.log(&#039;opened connection&#039;)
        }
    })
    sock.ev.on(&#039;messages.upsert&#039;, event =&gt; {
        for (const m of event.messages) {
            console.log(JSON.stringify(m, undefined, 2))

            console.log(&#039;replying to&#039;, m.key.remoteJid)
            await sock.sendMessage(m.key.remoteJid!, { text: &#039;Hello Word&#039; })
        }
    })

    // to storage creds (session info) when it updates
    sock.ev.on(&#039;creds.update&#039;, saveCreds)
}
// run in main file
connectToWhatsApp()
```

&gt; [!IMPORTANT]
&gt; In `messages.upsert` it&#039;s recommended to use a loop like `for (const message of event.messages)` to handle all messages in array

### Decrypt Poll Votes

- By default poll votes are encrypted and handled in `messages.update`
- That&#039;s a simple example
```ts
sock.ev.on(&#039;messages.update&#039;, event =&gt; {
    for(const { key, update } of event) {
        if(update.pollUpdates) {
            const pollCreation = await getMessage(key)
            if(pollCreation) {
                console.log(
                    &#039;got poll update, aggregation: &#039;,
                    getAggregateVotesInPollMessage({
                        message: pollCreation,
                        pollUpdates: update.pollUpdates,
                    })
                )
            }
        }
    }
})
```

- `getMessage` is a [store](#implementing-a-data-store) implementation (in your end)

### Summary of Events on First Connection

1. When you connect first time, `connection.update` will be fired requesting you to restart sock
2. Then, history messages will be received in `messaging.history-set`

## Implementing a Data Store

- Baileys does not come with a defacto storage for chats, contacts, or messages. However, a simple in-memory implementation has been provided. The store listens for chat updates, new messages, message updates, etc., to always have an up-to-date version of the data.

&gt; [!IMPORTANT]
&gt; I highly recommend building your own data store, as storing someone&#039;s entire chat history in memory is a terrible waste of RAM.

It can be used as follows:

```ts
import makeWASocket, { makeInMemoryStore } from &#039;@whiskeysockets/baileys&#039;
// the store maintains the data of the WA connection in memory
// can be written out to a file &amp; read from it
const store = makeInMemoryStore({ })
// can be read from a file
store.readFromFile(&#039;./baileys_store.json&#039;)
// saves the state to a file every 10s
setInterval(() =&gt; {
    store.writeToFile(&#039;./baileys_store.json&#039;)
}, 10_000)

const sock = makeWASocket({ })
// will listen from this socket
// the store can listen from a new socket once the current socket outlives its lifetime
store.bind(sock.ev)

sock.ev.on(&#039;chats.upsert&#039;, () =&gt; {
    // can use &#039;store.chats&#039; however you want, even after the socket dies out
    // &#039;chats&#039; =&gt; a KeyedDB instance
    console.log(&#039;got chats&#039;, store.chats.all())
})

sock.ev.on(&#039;contacts.upsert&#039;, () =&gt; {
    console.log(&#039;got contacts&#039;, Object.values(store.contacts))
})

```

The store also provides some simple functions such as `loadMessages` that utilize the store to speed up data retrieval.

## Whatsapp IDs Explain

- `id` is the WhatsApp ID, called `jid` too, of the person or group you&#039;re sending the message to. 
    - It must be in the format ```[country code][phone number]@s.whatsapp.net```
	    - Example for people: ```+19999999999@s.whatsapp.net```. 
	    - For groups, it must be in the format ``` 123456789-123345@g.us ```. 
    - For broadcast lists, it&#039;s `[timestamp of creation]@broadcast`.
    - For stories, the ID is `status@broadcast`.

## Utility Functions

- `getContentType`, returns the content type for any message
- `getDevice`, returns the device from message
- `makeCacheableSignalKeyStore`, make auth store more fast
- `downloadContentFromMessage`, download content from any message

## Sending Messages

- Send all types of messages with a single function
    - **[Here](https://baileys.whiskeysockets.io/types/AnyMessageContent.html) you can see all message contents supported, like text message**
    - **[Here](https://baileys.whiskeysockets.io/types/MiscMessageGenerationOptions.html) you can see all options supported, like quote message**

    ```ts
    const jid: string
    const content: AnyMessageContent
    const options: MiscMessageGenerationOptions

    sock.sendMessage(jid, content, options)
    ```

### Non-Media Messages

#### Text Message
```ts
await sock.sendMessage(jid, { text: &#039;hello word&#039; })
```

#### Quote Message (works with all types)
```ts
await sock.sendMessage(jid, { text: &#039;hello word&#039; }, { quoted: message })
```

#### Mention User 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[louislam/uptime-kuma]]></title>
            <link>https://github.com/louislam/uptime-kuma</link>
            <guid>https://github.com/louislam/uptime-kuma</guid>
            <pubDate>Fri, 04 Jul 2025 00:04:30 GMT</pubDate>
            <description><![CDATA[A fancy self-hosted monitoring tool]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/louislam/uptime-kuma">louislam/uptime-kuma</a></h1>
            <p>A fancy self-hosted monitoring tool</p>
            <p>Language: JavaScript</p>
            <p>Stars: 71,475</p>
            <p>Forks: 6,321</p>
            <p>Stars today: 52 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot; width=&quot;100%&quot;&gt;
    &lt;img src=&quot;./public/icon.svg&quot; width=&quot;128&quot; alt=&quot;&quot; /&gt;
&lt;/div&gt;

# Uptime Kuma

Uptime Kuma is an easy-to-use self-hosted monitoring tool.

&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/louislam/uptime-kuma?style=flat&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/louislam/uptime-kuma&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/v/louislam/uptime-kuma/latest?label=docker%20image%20ver.&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/louislam/uptime-kuma&quot; /&gt;&lt;/a&gt;  &lt;a target=&quot;_blank&quot; href=&quot;https://opencollective.com/uptime-kuma&quot;&gt;&lt;img src=&quot;https://opencollective.com/uptime-kuma/total/badge.svg?label=Open%20Collective%20Backers&amp;color=brightgreen&quot; /&gt;&lt;/a&gt;
[![GitHub Sponsors](https://img.shields.io/github/sponsors/louislam?label=GitHub%20Sponsors)](https://github.com/sponsors/louislam) &lt;a href=&quot;https://weblate.kuma.pet/projects/uptime-kuma/uptime-kuma/&quot;&gt;
&lt;img src=&quot;https://weblate.kuma.pet/widgets/uptime-kuma/-/svg-badge.svg&quot; alt=&quot;Translation status&quot; /&gt;
&lt;/a&gt;

&lt;img src=&quot;https://user-images.githubusercontent.com/1336778/212262296-e6205815-ad62-488c-83ec-a5b0d0689f7c.jpg&quot; width=&quot;700&quot; alt=&quot;&quot; /&gt;

## ü•î Live Demo

Try it!

Demo Server (Location: Frankfurt - Germany): https://demo.kuma.pet/start-demo

It is a temporary live demo, all data will be deleted after 10 minutes. Sponsored by [Uptime Kuma Sponsors](https://github.com/louislam/uptime-kuma#%EF%B8%8F-sponsors).

## ‚≠ê Features

- Monitoring uptime for HTTP(s) / TCP / HTTP(s) Keyword / HTTP(s) Json Query / Ping / DNS Record / Push / Steam Game Server / Docker Containers
- Fancy, Reactive, Fast UI/UX
- Notifications via Telegram, Discord, Gotify, Slack, Pushover, Email (SMTP), and [90+ notification services, click here for the full list](https://github.com/louislam/uptime-kuma/tree/master/src/components/notifications)
- 20-second intervals
- [Multi Languages](https://github.com/louislam/uptime-kuma/tree/master/src/lang)
- Multiple status pages
- Map status pages to specific domains
- Ping chart
- Certificate info
- Proxy support
- 2FA support

## üîß How to Install

### üê≥ Docker

```bash
docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
```

Uptime Kuma is now running on &lt;http://0.0.0.0:3001&gt;.

&gt; [!WARNING]
&gt; File Systems like **NFS** (Network File System) are **NOT** supported. Please map to a local directory or volume.

&gt; [!NOTE]
&gt; If you want to limit exposure to localhost (without exposing port for other users or to use a [reverse proxy](https://github.com/louislam/uptime-kuma/wiki/Reverse-Proxy)), you can expose the port like this:
&gt; 
&gt; ```bash
&gt; docker run -d --restart=always -p 127.0.0.1:3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
&gt; ```

### üí™üèª Non-Docker

Requirements:

- Platform
  - ‚úÖ Major Linux distros such as Debian, Ubuntu, CentOS, Fedora and ArchLinux etc.
  - ‚úÖ Windows 10 (x64), Windows Server 2012 R2 (x64) or higher
  - ‚ùå FreeBSD / OpenBSD / NetBSD
  - ‚ùå Replit / Heroku
- [Node.js](https://nodejs.org/en/download/) 18 / 20.4
- [npm](https://docs.npmjs.com/cli/) 9
- [Git](https://git-scm.com/downloads)
- [pm2](https://pm2.keymetrics.io/) - For running Uptime Kuma in the background

```bash
git clone https://github.com/louislam/uptime-kuma.git
cd uptime-kuma
npm run setup

# Option 1. Try it
node server/server.js

# (Recommended) Option 2. Run in the background using PM2
# Install PM2 if you don&#039;t have it:
npm install pm2 -g &amp;&amp; pm2 install pm2-logrotate

# Start Server
pm2 start server/server.js --name uptime-kuma
```

Uptime Kuma is now running on http://localhost:3001

More useful PM2 Commands

```bash
# If you want to see the current console output
pm2 monit

# If you want to add it to startup
pm2 save &amp;&amp; pm2 startup
```

### Advanced Installation

If you need more options or need to browse via a reverse proxy, please read:

https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install

## üÜô How to Update

Please read:

https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update

## üÜï What&#039;s Next?

I will assign requests/issues to the next milestone.

https://github.com/louislam/uptime-kuma/milestones

## ‚ù§Ô∏è Sponsors

Thank you so much! (GitHub Sponsors will be updated manually. OpenCollective sponsors will be updated automatically, the list will be cached by GitHub though. It may need some time to be updated)

&lt;img src=&quot;https://uptime.kuma.pet/sponsors?v=6&quot; alt /&gt;

## üñº More Screenshots

Light Mode:

&lt;img src=&quot;https://uptime.kuma.pet/img/light.jpg&quot; width=&quot;512&quot; alt=&quot;&quot; /&gt;

Status Page:

&lt;img src=&quot;https://user-images.githubusercontent.com/1336778/134628766-a3fe0981-0926-4285-ab46-891a21c3e4cb.png&quot; width=&quot;512&quot; alt=&quot;&quot; /&gt;

Settings Page:

&lt;img src=&quot;https://louislam.net/uptimekuma/2.jpg&quot; width=&quot;400&quot; alt=&quot;&quot; /&gt;

Telegram Notification Sample:

&lt;img src=&quot;https://louislam.net/uptimekuma/3.jpg&quot; width=&quot;400&quot; alt=&quot;&quot; /&gt;

## Motivation

- I was looking for a self-hosted monitoring tool like &quot;Uptime Robot&quot;, but it is hard to find a suitable one. One of the closest ones is statping. Unfortunately, it is not stable and no longer maintained.
- Wanted to build a fancy UI.
- Learn Vue 3 and vite.js.
- Show the power of Bootstrap 5.
- Try to use WebSocket with SPA instead of a REST API.
- Deploy my first Docker image to Docker Hub.

If you love this project, please consider giving it a ‚≠ê.

## üó£Ô∏è Discussion / Ask for Help

‚ö†Ô∏è For any general or technical questions, please don&#039;t send me an email, as I am unable to provide support in that manner. I will not respond if you ask questions there.

I recommend using Google, GitHub Issues, or Uptime Kuma&#039;s subreddit for finding answers to your question. If you cannot find the information you need, feel free to ask:

- [GitHub Issues](https://github.com/louislam/uptime-kuma/issues)
- [Subreddit (r/UptimeKuma)](https://www.reddit.com/r/UptimeKuma/)

My Reddit account: [u/louislamlam](https://reddit.com/u/louislamlam)
You can mention me if you ask a question on the subreddit.

## Contributions

### Create Pull Requests

We DO NOT accept all types of pull requests and do not want to waste your time. Please be sure that you have read and follow pull request rules:
[CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma](https://github.com/louislam/uptime-kuma/blob/master/CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma)

### Test Pull Requests

There are a lot of pull requests right now, but I don&#039;t have time to test them all.

If you want to help, you can check this:
https://github.com/louislam/uptime-kuma/wiki/Test-Pull-Requests

### Test Beta Version

Check out the latest beta release here: https://github.com/louislam/uptime-kuma/releases

### Bug Reports / Feature Requests

If you want to report a bug or request a new feature, feel free to open a [new issue](https://github.com/louislam/uptime-kuma/issues).

### Translations

If you want to translate Uptime Kuma into your language, please visit [Weblate Readme](https://github.com/louislam/uptime-kuma/blob/master/src/lang/README.md).

### Spelling &amp; Grammar

Feel free to correct the grammar in the documentation or code.
My mother language is not English and my grammar is not that great.


</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[h5bp/html5-boilerplate]]></title>
            <link>https://github.com/h5bp/html5-boilerplate</link>
            <guid>https://github.com/h5bp/html5-boilerplate</guid>
            <pubDate>Fri, 04 Jul 2025 00:04:29 GMT</pubDate>
            <description><![CDATA[A professional front-end template for building fast, robust, and adaptable web apps or sites.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/h5bp/html5-boilerplate">h5bp/html5-boilerplate</a></h1>
            <p>A professional front-end template for building fast, robust, and adaptable web apps or sites.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 57,049</p>
            <p>Forks: 12,294</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre># [HTML5 Boilerplate](https://html5boilerplate.com/)

[![Build status](https://github.com/h5bp/html5-boilerplate/workflows/Build%20status/badge.svg)](https://github.com/h5bp/html5-boilerplate/actions?query=workflow%3A%22Build+status%22+branch%3Amain)
[![LICENSE](https://img.shields.io/badge/license-MIT-lightgrey.svg)](https://github.com/h5bp/html5-boilerplate/blob/main/LICENSE.txt)
[![NPM Downloads](https://img.shields.io/npm/dt/html5-boilerplate.svg)](https://www.npmjs.com/package/html5-boilerplate)
[![github-stars-image](https://img.shields.io/github/stars/h5bp/html5-boilerplate.svg?label=github%20stars)](https://github.com/h5bp/html5-boilerplate)

HTML5 Boilerplate is a professional front-end template for building
fast, robust, and adaptable web apps or sites.

This project is the product of over 10 years of iterative development and
community knowledge. It does not impose a specific development
philosophy or framework, so you&#039;re free to architect your code in the
way that you want.

- [Homepage](https://html5boilerplate.com/)
- [Source Code](https://github.com/h5bp/html5-boilerplate)

## About This Repository

This repository is where HTML5-Boilerplate is authored. Some of the tools,
files and processes that you see here are solely for the _production_ of
HTML5 Boilerplate and are not _part_ of HTML5 Boilerplate. For one example, the
[gulpfile.mjs](https://github.com/h5bp/html5-boilerplate/blob/main/gulpfile.mjs)
script is used to _build_ the project. It&#039;s not part of the project itself.

The project we publish is represented by the contents of the `/dist/`
folder. Everything else in this repository is used to author the project.

Think of it this way, in the same way that you don&#039;t clone [vuejs/core](https://github.com/vuejs/core)
to create a Vue.js app, you don&#039;t need to clone this repository to start a new
site or app based on HTML5 Boilerplate.

So, if you&#039;re looking for a quick start template to build a website or
application, look at the options in the
[Quick Start](https://github.com/h5bp/html5-boilerplate#quick-start) section of this document.

If you want to help us _improve_ HTML5 Boilerplate then you can start with the documentation [here](.github/CONTRIBUTING.md), which includes steps to clone this repo in order to get it set up for development.

## Quick Start

Choose one of the following options:

- Using the [create-html5-boilerplate](https://github.com/h5bp/create-html5-boilerplate)
  script, instantly fetch the latest npm published package (or any version
  available on npm) with `npx`, `npm init` or `yarn create` without having to
  install any dependencies. Running the following `npx` command installs the
  latest version into a folder called `new-site`

  ```bash
  npx create-html5-boilerplate new-site
  cd new-site
  npm install
  npm run start
  ```

- Using our new [Template Repository](https://github.com/h5bp/html5-boilerplate-template)
  create a new GitHub repository based on the latest code from the main branch of HTML5
  Boilerplate.

- Install with [npm](https://www.npmjs.com/): `npm install html5-boilerplate`
  or [yarn](https://yarnpkg.com/): `yarn add html5-boilerplate`. The resulting
  `node_modules/html5-boilerplate/dist` folder represents the latest version of
  the project for end users. Depending on what you want to use and how you want
  to use it, you may have to copy and paste the contents of that folder into
  your project directory.

- Download the latest stable release from
  [here](https://github.com/h5bp/html5-boilerplate/releases/download/v9.0.0/html5-boilerplate_v9.0.0.zip). This zip file is a
  snapshot of the `dist` folder. On Windows, Mac and from the file manager on
  Linux unzipping this folder will output to a folder named something like
  `html5-boilerplate_v9.0.0`. From the command-line, you will need to create a
  folder and unzip the contents into that folder.

  ```bash
  mkdir html5-boilerplate
  unzip html5-boilerplate*.zip -d html5-boilerplate
  ```

## Features

- A finely-tuned starter template: Reap the benefits of 10 years of analysis,
  research and experimentation by over 200 contributors.
- Designed with progressive enhancement in mind.
- Includes:
  - Placeholder Open Graph elements and attributes.
  - An example package.json file with [WebPack](https://webpack.js.org/) commands
    built in to jumpstart application development.
  - Placeholder CSS Media Queries.
  - Useful CSS helper classes.
  - Default print styles, performance optimized.
  - &quot;Delete-key friendly.&quot; Easy to strip out parts you don&#039;t need.
  - Extensive documentation.

## Browser Support

HTML5-Boilerplate supports the latest, stable releases of all major browsers.

Check the `default` configuration from [Browserslist](https://browsersl.ist/#q=defaults)
for more details on browsers and versions covered.

## Documentation

Take a look at the [documentation table of contents](docs/TOC.md). This
documentation is bundled with the project which makes it available for offline
reading and provides a useful starting point for any documentation you want to
write about your project.

## Contributing

Hundreds of developers have helped to make the HTML5 Boilerplate. Anyone is
welcome to [contribute](.github/CONTRIBUTING.md). However, if you decide to get
involved, please take a moment to review the [guidelines](.github/CONTRIBUTING.md):

- [Bug reports](.github/CONTRIBUTING.md#bugs)
- [Feature requests](.github/CONTRIBUTING.md#features)
- [Pull requests](.github/CONTRIBUTING.md#pull-requests)

## License

The code is available under the [MIT license](LICENSE.txt).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[ConardLi/easy-dataset]]></title>
            <link>https://github.com/ConardLi/easy-dataset</link>
            <guid>https://github.com/ConardLi/easy-dataset</guid>
            <pubDate>Fri, 04 Jul 2025 00:04:28 GMT</pubDate>
            <description><![CDATA[A powerful tool for creating fine-tuning datasets for LLM]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ConardLi/easy-dataset">ConardLi/easy-dataset</a></h1>
            <p>A powerful tool for creating fine-tuning datasets for LLM</p>
            <p>Language: JavaScript</p>
            <p>Stars: 9,061</p>
            <p>Forks: 882</p>
            <p>Stars today: 39 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

![](./public//imgs/bg2.png)

&lt;img alt=&quot;GitHub Repo stars&quot; src=&quot;https://img.shields.io/github/stars/ConardLi/easy-dataset&quot;&gt;
&lt;img alt=&quot;GitHub Downloads (all assets, all releases)&quot; src=&quot;https://img.shields.io/github/downloads/ConardLi/easy-dataset/total&quot;&gt;
&lt;img alt=&quot;GitHub Release&quot; src=&quot;https://img.shields.io/github/v/release/ConardLi/easy-dataset&quot;&gt;
&lt;img src=&quot;https://img.shields.io/badge/license-AGPL--3.0-green.svg&quot; alt=&quot;AGPL 3.0 License&quot;/&gt;
&lt;img alt=&quot;GitHub contributors&quot; src=&quot;https://img.shields.io/github/contributors/ConardLi/easy-dataset&quot;&gt;
&lt;img alt=&quot;GitHub last commit&quot; src=&quot;https://img.shields.io/github/last-commit/ConardLi/easy-dataset&quot;&gt;

&lt;a href=&quot;https://trendshift.io/repositories/13944&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/13944&quot; alt=&quot;ConardLi%2Feasy-dataset | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;

**A powerful tool for creating fine-tuning datasets for Large Language Models**

[ÁÆÄ‰Ωì‰∏≠Êñá](./README.zh-CN.md) | [English](./README.md)

[Features](#features) ‚Ä¢ [Quick Start](#local-run) ‚Ä¢ [Documentation](https://docs.easy-dataset.com/ed/en) ‚Ä¢ [Contributing](#contributing) ‚Ä¢ [License](#license)

If you like this project, please give it a Star‚≠êÔ∏è, or buy the author a coffee =&gt; [Donate](./public/imgs/aw.jpg) ‚ù§Ô∏è!

&lt;/div&gt;

## Overview

Easy Dataset is an application specifically designed for creating fine-tuning datasets for Large Language Models (LLMs). It provides an intuitive interface for uploading domain-specific files, intelligently splitting content, generating questions, and producing high-quality training data for model fine-tuning.

With Easy Dataset, you can transform domain knowledge into structured datasets, compatible with all LLM APIs that follow the OpenAI format, making the fine-tuning process simple and efficient.

![](./public/imgs/en-arc.png)

## Features

- **Intelligent Document Processing**: Supports intelligent recognition and processing of multiple formats including PDF, Markdown, DOCX, etc.
- **Intelligent Text Splitting**: Supports multiple intelligent text splitting algorithms and customizable visual segmentation
- **Intelligent Question Generation**: Extracts relevant questions from each text segment
- **Domain Labels**: Intelligently builds global domain labels for datasets, with global understanding capabilities
- **Answer Generation**: Uses LLM API to generate comprehensive answers and Chain of Thought (COT)
- **Flexible Editing**: Edit questions, answers, and datasets at any stage of the process
- **Multiple Export Formats**: Export datasets in various formats (Alpaca, ShareGPT) and file types (JSON, JSONL)
- **Wide Model Support**: Compatible with all LLM APIs that follow the OpenAI format
- **User-Friendly Interface**: Intuitive UI designed for both technical and non-technical users
- **Custom System Prompts**: Add custom system prompts to guide model responses

## Quick Demo

https://github.com/user-attachments/assets/6ddb1225-3d1b-4695-90cd-aa4cb01376a8

## Local Run

### Download Client

&lt;table style=&quot;width: 100%&quot;&gt;
  &lt;tr&gt;
    &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt;
      &lt;b&gt;Windows&lt;/b&gt;
    &lt;/td&gt;
    &lt;td width=&quot;30%&quot; align=&quot;center&quot; colspan=&quot;2&quot;&gt;
      &lt;b&gt;MacOS&lt;/b&gt;
    &lt;/td&gt;
    &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt;
      &lt;b&gt;Linux&lt;/b&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;text-align: center&quot;&gt;
    &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
      &lt;a href=&#039;https://github.com/ConardLi/easy-dataset/releases/latest&#039;&gt;
        &lt;img src=&#039;./public/imgs/windows.png&#039; style=&quot;height:24px; width: 24px&quot; /&gt;
        &lt;br /&gt;
        &lt;b&gt;Setup.exe&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
      &lt;a href=&#039;https://github.com/ConardLi/easy-dataset/releases/latest&#039;&gt;
        &lt;img src=&#039;./public/imgs/mac.png&#039; style=&quot;height:24px; width: 24px&quot; /&gt;
        &lt;br /&gt;
        &lt;b&gt;Intel&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
      &lt;a href=&#039;https://github.com/ConardLi/easy-dataset/releases/latest&#039;&gt;
        &lt;img src=&#039;./public/imgs/mac.png&#039; style=&quot;height:24px; width: 24px&quot; /&gt;
        &lt;br /&gt;
        &lt;b&gt;M&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
      &lt;a href=&#039;https://github.com/ConardLi/easy-dataset/releases/latest&#039;&gt;
        &lt;img src=&#039;./public/imgs/linux.png&#039; style=&quot;height:24px; width: 24px&quot; /&gt;
        &lt;br /&gt;
        &lt;b&gt;AppImage&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

### Install with NPM

1. Clone the repository:

```bash
   git clone https://github.com/ConardLi/easy-dataset.git
   cd easy-dataset
```

2. Install dependencies:

```bash
   npm install
```

3. Start the development server:

```bash
   npm run build

   npm run start
```

4. Open your browser and visit `http://localhost:1717`

### Using the Official Docker Image

1. Clone the repository:

```bash
git clone https://github.com/ConardLi/easy-dataset.git
cd easy-dataset
```

2. Modify the `docker-compose.yml` file:

```yml
services:
  easy-dataset:
    image: ghcr.io/conardli/easy-dataset
    container_name: easy-dataset
    ports:
      - &#039;1717:1717&#039;
    volumes:
      - ${LOCAL_DB_PATH}:/app/local-db
      - ${LOCAL_PRISMA_PATH}:/app/prisma
    restart: unless-stopped
```

&gt; **Note:** Replace `{YOUR_LOCAL_DB_PATH}` and `{LOCAL_PRISMA_PATH}` with the actual paths where you want to store the local database. It is recommended to use the `local-db` and `prisma` folders in the current code repository directory to maintain consistency with the database paths when starting via NPM.

3. Start with docker-compose:

```bash
docker-compose up -d
```

4. Open a browser and visit `http://localhost:1717`

### Building with a Local Dockerfile

If you want to build the image yourself, use the Dockerfile in the project root directory:

1. Clone the repository:

```bash
git clone https://github.com/ConardLi/easy-dataset.git
cd easy-dataset
```

2. Build the Docker image:

```bash
docker build -t easy-dataset .
```

3. Run the container:

```bash
docker run -d \
  -p 1717:1717 \
  -v {YOUR_LOCAL_DB_PATH}:/app/local-db \
  -v {LOCAL_PRISMA_PATH}:/app/prisma \
  --name easy-dataset \
  easy-dataset
```

&gt; **Note:** Replace `{YOUR_LOCAL_DB_PATH}` and `{LOCAL_PRISMA_PATH}` with the actual paths where you want to store the local database. It is recommended to use the `local-db` and `prisma` folders in the current code repository directory to maintain consistency with the database paths when starting via NPM.

4. Open a browser and visit `http://localhost:1717`

## How to Use

### Create a Project

&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;&lt;img src=&quot;./public/imgs/1.png&quot;&gt;&lt;/td&gt;
        &lt;td&gt;&lt;img src=&quot;./public/imgs/2.png&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

1. Click the &quot;Create Project&quot; button on the homepage;
2. Enter a project name and description;
3. Configure your preferred LLM API settings

### Process Documents

&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;&lt;img src=&quot;./public/imgs/3.png&quot;&gt;&lt;/td&gt;
        &lt;td&gt;&lt;img src=&quot;./public/imgs/4.png&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

1. Upload your files in the &quot;Text Split&quot; section (supports PDF, Markdown, txt, DOCX);
2. View and adjust the automatically split text segments;
3. View and adjust the global domain tree

### Generate Questions

&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;&lt;img src=&quot;./public/imgs/5.png&quot;&gt;&lt;/td&gt;
        &lt;td&gt;&lt;img src=&quot;./public/imgs/6.png&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

2. Batch construct questions based on text blocks;
3. View and edit the generated questions;
4. Organize questions using the label tree

### Create Datasets

&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;&lt;img src=&quot;./public/imgs/7.png&quot;&gt;&lt;/td&gt;
        &lt;td&gt;&lt;img src=&quot;./public/imgs/8.png&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

1. Batch construct datasets based on questions;
2. Generate answers using the configured LLM;
3. View, edit, and optimize the generated answers

### Export Datasets

&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;&lt;img src=&quot;./public/imgs/9.png&quot;&gt;&lt;/td&gt;
        &lt;td&gt;&lt;img src=&quot;./public/imgs/10.png&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

1. Click the &quot;Export&quot; button in the Datasets section;
2. Choose your preferred format (Alpaca or ShareGPT);
3. Select the file format (JSON or JSONL);
4. Add custom system prompts as needed;
5. Export your dataset

## Documentation

- View the demo video of this project: [Easy Dataset Demo Video](https://www.bilibili.com/video/BV1y8QpYGE57/)
- For detailed documentation on all features and APIs, visit our [Documentation Site](https://docs.easy-dataset.com/ed/en)

## Community Practice

- [Easy Dataset √ó LLaMA Factory: Enabling LLMs to Efficiently Learn Domain Knowledge](https://buaa-act.feishu.cn/wiki/GVzlwYcRFiR8OLkHbL6cQpYin7g)
- [Easy Dataset Practical Guide: How to Build High-Quality Datasets?](https://www.bilibili.com/video/BV1MRMnz1EGW)
- [Interpretation of Key Feature Updates in Easy Dataset](https://www.bilibili.com/video/BV1fyJhzHEb7/)
- [Foundation Models Fine-tuning Datasets: Basic Knowledge Popularization](https://docs.easy-dataset.com/zhi-shi-ke-pu)

## Contributing

We welcome contributions from the community! If you&#039;d like to contribute to Easy Dataset, please follow these steps:

1. Fork the repository
2. Create a new branch (`git checkout -b feature/amazing-feature`)
3. Make your changes
4. Commit your changes (`git commit -m &#039;Add some amazing feature&#039;`)
5. Push to the branch (`git push origin feature/amazing-feature`)
6. Open a Pull Request (submit to the DEV branch)

Please ensure that tests are appropriately updated and adhere to the existing coding style.

## Join Discussion Group &amp; Contact the Author

https://docs.easy-dataset.com/geng-duo/lian-xi-wo-men

## License

This project is licensed under the AGPL 3.0 License - see the [LICENSE](LICENSE) file for details.

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=ConardLi/easy-dataset&amp;type=Date)](https://www.star-history.com/#ConardLi/easy-dataset&amp;Date)

&lt;div align=&quot;center&quot;&gt;
  &lt;sub&gt;Built with ‚ù§Ô∏è by &lt;a href=&quot;https://github.com/ConardLi&quot;&gt;ConardLi&lt;/a&gt; ‚Ä¢ Follow me: &lt;a href=&quot;./public/imgs/weichat.jpg&quot;&gt;WeChat Official Account&lt;/a&gt;ÔΩú&lt;a href=&quot;https://space.bilibili.com/474921808&quot;&gt;Bilibili&lt;/a&gt;ÔΩú&lt;a href=&quot;https://juejin.cn/user/3949101466785709&quot;&gt;Juejin&lt;/a&gt;ÔΩú&lt;a href=&quot;https://www.zhihu.com/people/wen-ti-chao-ji-duo-de-xiao-qi&quot;&gt;Zhihu&lt;/a&gt;ÔΩú&lt;a href=&quot;https://www.youtube.com/@garden-conard&quot;&gt;Youtube&lt;/a&gt;&lt;/sub&gt;
&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[sveltejs/svelte]]></title>
            <link>https://github.com/sveltejs/svelte</link>
            <guid>https://github.com/sveltejs/svelte</guid>
            <pubDate>Fri, 04 Jul 2025 00:04:27 GMT</pubDate>
            <description><![CDATA[web development for the rest of us]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/sveltejs/svelte">sveltejs/svelte</a></h1>
            <p>web development for the rest of us</p>
            <p>Language: JavaScript</p>
            <p>Stars: 83,281</p>
            <p>Forks: 4,559</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre>&lt;a href=&quot;https://svelte.dev&quot;&gt;
	&lt;picture&gt;
		&lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;assets/banner_dark.png&quot;&gt;
		&lt;img src=&quot;assets/banner.png&quot; alt=&quot;Svelte - web development for the rest of us&quot; /&gt;
	&lt;/picture&gt;
&lt;/a&gt;

[![License](https://img.shields.io/npm/l/svelte.svg)](LICENSE.md) [![Chat](https://img.shields.io/discord/457912077277855764?label=chat&amp;logo=discord)](https://svelte.dev/chat)

## What is Svelte?

Svelte is a new way to build web applications. It&#039;s a compiler that takes your declarative components and converts them into efficient JavaScript that surgically updates the DOM.

Learn more at the [Svelte website](https://svelte.dev), or stop by the [Discord chatroom](https://svelte.dev/chat).

## Supporting Svelte

Svelte is an MIT-licensed open source project with its ongoing development made possible entirely by fantastic volunteers. If you&#039;d like to support their efforts, please consider:

- [Becoming a backer on Open Collective](https://opencollective.com/svelte).

Funds donated via Open Collective will be used for compensating expenses related to Svelte&#039;s development such as hosting costs. If sufficient donations are received, funds may also be used to support Svelte&#039;s development more directly.

## Roadmap

You may view [our roadmap](https://svelte.dev/roadmap) if you&#039;d like to see what we&#039;re currently working on.

## Contributing

Please see the [Contributing Guide](CONTRIBUTING.md) and the [`svelte`](packages/svelte) package for information on contributing to Svelte.

## Is svelte.dev down?

Probably not, but it&#039;s possible. If you can&#039;t seem to access any `.dev` sites, check out [this SuperUser question and answer](https://superuser.com/q/1413402).

## License

[MIT](LICENSE.md)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[exceljs/exceljs]]></title>
            <link>https://github.com/exceljs/exceljs</link>
            <guid>https://github.com/exceljs/exceljs</guid>
            <pubDate>Fri, 04 Jul 2025 00:04:26 GMT</pubDate>
            <description><![CDATA[Excel Workbook Manager]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/exceljs/exceljs">exceljs/exceljs</a></h1>
            <p>Excel Workbook Manager</p>
            <p>Language: JavaScript</p>
            <p>Stars: 14,532</p>
            <p>Forks: 1,867</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre># ExcelJS

[![Build Status](https://github.com/exceljs/exceljs/actions/workflows/tests.yml/badge.svg?branch=master&amp;event=push)](https://github.com/exceljs/exceljs/actions/workflows/tests.yml)

Read, manipulate and write spreadsheet data and styles to XLSX and JSON.

Reverse engineered from Excel spreadsheet files as a project.

# Translations

* [‰∏≠ÊñáÊñáÊ°£](README_zh.md)

# Installation

```shell
npm install exceljs
```

# New Features!

* Merged [Add pivot table with limitations #2551](https://github.com/exceljs/exceljs/pull/2551). &lt;br/&gt; Many thanks to Protobi and &lt;a href=&quot;https://github.com/mikez&quot;&gt;Michael&lt;/a&gt; for this contribution!
* Merged [fix: styles rendering in case when &quot;numFmt&quot; is present in conditional formatting rules (resolves #1814) #1815](https://github.com/exceljs/exceljs/pull/1815). &lt;br/&gt; Many thanks to [@andreykrupskii](https://github.com/andreykrupskii) for this contribution!
* Merged [inlineStr cell type support #1575 #1576](https://github.com/exceljs/exceljs/pull/1576). &lt;br/&gt; Many thanks to [@drdmitry](https://github.com/drdmitry) for this contribution!
* Merged [Fix parsing of boolean attributes #1849](https://github.com/exceljs/exceljs/pull/1849). &lt;br/&gt; Many thanks to [@bno1](https://github.com/bno1) for this contribution!
* Merged [add optional custom auto-filter to table #1670](https://github.com/exceljs/exceljs/pull/1670). &lt;br/&gt; Many thanks to [@thambley](https://github.com/thambley) for this contribution!
* Merged [Deep copy inherited style #1850](https://github.com/exceljs/exceljs/pull/1850). &lt;br/&gt; Many thanks to [@ikzhr](https://github.com/ikzhr) for this contribution!
* Merged [Upgrade actions/cache and actions/setup-node #1846](https://github.com/exceljs/exceljs/pull/1846). &lt;br/&gt; Many thanks to [@cclauss](https://github.com/cclauss) for this contribution!
* Merged [Check object keys in isEqual #1831](https://github.com/exceljs/exceljs/pull/1831). &lt;br/&gt; Many thanks to [@bno1](https://github.com/bno1) for this contribution!
* Merged [Add v17 to testing workflow #1856](https://github.com/exceljs/exceljs/pull/1856). &lt;br/&gt; Many thanks to [@Siemienik](https://github.com/Siemienik) for this contribution!
* Merged [Upgrade jszip to its latest version to date. This version does not have any vulnerability found by Snyk so far #1895](https://github.com/exceljs/exceljs/pull/1895). &lt;br/&gt; Many thanks to [@ValerioSevilla](https://github.com/ValerioSevilla) for this contribution!
* Merged [Update README.md #1677](https://github.com/exceljs/exceljs/pull/1677). &lt;br/&gt; Many thanks to [@xjrcode](https://github.com/xjrcode) for this contribution!
* Merged [(docs): set prototype of RegExp correctly. #1700](https://github.com/exceljs/exceljs/pull/1700). &lt;br/&gt; Many thanks to [@joeldenning](https://github.com/joeldenning) for this contribution!
* Merged [Added timeouts to github actions #1733](https://github.com/exceljs/exceljs/pull/1733). &lt;br/&gt; Many thanks to [@alexbjorlig](https://github.com/alexbjorlig) for this contribution!
* Merged [fix issue 1676 #1701](https://github.com/exceljs/exceljs/pull/1701). &lt;br/&gt; Many thanks to [@skypesky](https://github.com/skypesky) for this contribution!
* Merged [ExcelJS/ExcelJS#2237 : Update CI Tests, Drop support for Node v8  #2242](https://github.com/exceljs/exceljs/pull/2242). &lt;br/&gt; Many thanks to [@Siemienik](https://github.com/Siemienik) for this contribution!
* Merged [Fix types for getWorksheet() #2223](https://github.com/exceljs/exceljs/pull/2223). &lt;br/&gt; Many thanks to [@hfhchan-plb](https://github.com/hfhchan-plb) for this contribution!
* Merged [add characters cannot be used for worksheet name #2126](https://github.com/exceljs/exceljs/pull/2126). &lt;br/&gt; Many thanks to [@tkm-kj](https://github.com/tkm-kj) for this contribution!
* Merged [Fix issue #1753 Reject promise when workbook reader is writing to temporary file stream and error occurs #1756](https://github.com/exceljs/exceljs/pull/1756). &lt;br/&gt; Many thanks to [@pauliusg](https://github.com/pauliusg) for this contribution!
* Merged [README.md to have correct link for Streaming XLSX #2186](https://github.com/exceljs/exceljs/pull/2186). &lt;br/&gt; Many thanks to [@wulfsolter](https://github.com/wulfsolter) for this contribution!
* Merged [Added a polyfill of promise.finally to support lower versions of Firefox. #1982](https://github.com/exceljs/exceljs/pull/1982). &lt;br/&gt; Many thanks to [@DemoJj](https://github.com/DemoJj) for this contribution!
* Merged [Fix read this.worksheet before assign it #1934](https://github.com/exceljs/exceljs/pull/1934). &lt;br/&gt; Many thanks to [@ZyqGitHub1](https://github.com/ZyqGitHub1) for this contribution!
* Merged [chore: upgrade jszip to ^3.10.1 #2211](https://github.com/exceljs/exceljs/pull/2211). &lt;br/&gt; Many thanks to [@jarrod-cocoon](https://github.com/jarrod-cocoon) for this contribution!
* Merged [fixed spelling error in README.md file #2208](https://github.com/exceljs/exceljs/pull/2208). &lt;br/&gt; Many thanks to [@HugoP27](https://github.com/HugoP27) for this contribution!
* Merged [fix: Fix xlsx.writeFile() not catching error when error occurs #2244](https://github.com/exceljs/exceljs/pull/2244). &lt;br/&gt; Many thanks to [@zurmokeeper](https://github.com/zurmokeeper) for this contribution!
* Merged [Improve worksheets&#039; naming validation logic. #2257](https://github.com/exceljs/exceljs/pull/2257). &lt;br/&gt; Many thanks to [@Siemienik](https://github.com/Siemienik) for this contribution!
* Merged [fix issue 2125 - spliceRows remove last row #2140](https://github.com/exceljs/exceljs/pull/2140). &lt;br/&gt; Many thanks to [@babu-ch](https://github.com/babu-ch) for this contribution!
* Merged [fix: fix the loss of column attributes due to incorrect column order #2222](https://github.com/exceljs/exceljs/pull/2222). &lt;br/&gt; Many thanks to [@cpaiyueyue](https://github.com/cpaiyueyue) for this contribution!
* Merged [Fix: Sheet Properties Types #2327](https://github.com/exceljs/exceljs/pull/2327). &lt;br/&gt; Many thanks to [@albeniraouf](https://github.com/albeniraouf) for this contribution!
* Merged [Use node 18 LTS for tsc, and benchmark. Add node 20. to test matrix. ‚Ä¶ #2354](https://github.com/exceljs/exceljs/pull/2354). &lt;br/&gt; Many thanks to [@Siemienik](https://github.com/Siemienik) for this contribution!
* Merged [Add missing tooltip attribute to CellHyperlinkValue index.d.ts #2350](https://github.com/exceljs/exceljs/pull/2350). &lt;br/&gt; Many thanks to [@NiklasPor](https://github.com/NiklasPor) for this contribution!
* Merged [Increase resilience to generating large workbooks #2320](https://github.com/exceljs/exceljs/pull/2320). &lt;br/&gt; Many thanks to [@hfhchan-plb](https://github.com/hfhchan-plb) for this contribution!
* Merged [repair all &#039;c2fo.io&#039; links (&#039;c2fo.github.io&#039;) #2324](https://github.com/exceljs/exceljs/pull/2324). &lt;br/&gt; Many thanks to [@justintunev7](https://github.com/justintunev7) for this contribution!
* Merged [fix: fix type definitions about last column, formula values and protection #2309](https://github.com/exceljs/exceljs/pull/2309). &lt;br/&gt; Many thanks to [@gltjk](https://github.com/gltjk) for this contribution!
* Merged [fix: add spinCount field for WorksheetProtection type #2284](https://github.com/exceljs/exceljs/pull/2284). &lt;br/&gt; Many thanks to [@damingerdai](https://github.com/damingerdai) for this contribution!
* Merged [Add type definition for WorksheetModel.merges #2281](https://github.com/exceljs/exceljs/pull/2281). &lt;br/&gt; Many thanks to [@ytjmt](https://github.com/ytjmt) for this contribution!

# Contributions

Contributions are very welcome! It helps me know what features are desired or what bugs are causing the most pain.

I have just one request; If you submit a pull request for a bugfix, please add a unit-test or integration-test (in the spec folder) that catches the problem.
 Even a PR that just has a failing test is fine - I can analyse what the test is doing and fix the code from that.

Note: Please try to avoid modifying the package version in a PR.
Versions are updated on release and any change will most likely result in merge collisions.

To be clear, all contributions added to this library will be included in the library&#039;s MIT licence.

### Let&#039;s chat together:

[![SiemaTeam](https://discordapp.com/api/guilds/976854442009825321/widget.png?style=banner2)](https://discord.gg/siema)

# Contents

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#importing&quot;&gt;Importing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;#interface&quot;&gt;Interface&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#create-a-workbook&quot;&gt;Create a Workbook&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#set-workbook-properties&quot;&gt;Set Workbook Properties&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#workbook-views&quot;&gt;Workbook Views&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#add-a-worksheet&quot;&gt;Add a Worksheet&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#remove-a-worksheet&quot;&gt;Remove a Worksheet&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#access-worksheets&quot;&gt;Access Worksheets&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#worksheet-state&quot;&gt;Worksheet State&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#worksheet-properties&quot;&gt;Worksheet Properties&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#page-setup&quot;&gt;Page Setup&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#headers-and-footers&quot;&gt;Headers and Footers&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;
        &lt;a href=&quot;#worksheet-views&quot;&gt;Worksheet Views&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#frozen-views&quot;&gt;Frozen Views&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#split-views&quot;&gt;Split Views&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#auto-filters&quot;&gt;Auto Filters&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#columns&quot;&gt;Columns&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#rows&quot;&gt;Rows&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#add-rows&quot;&gt;Add Rows&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#handling-individual-cells&quot;&gt;Handling Individual Cells&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#merged-cells&quot;&gt;Merged Cells&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#insert-rows&quot;&gt;Insert Rows&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#splice&quot;&gt;Splice&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#duplicate-a-row&quot;&gt;Duplicate Row&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#defined-names&quot;&gt;Defined Names&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#data-validations&quot;&gt;Data Validations&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cell-comments&quot;&gt;Cell Comments&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#tables&quot;&gt;Tables&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#styles&quot;&gt;Styles&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#number-formats&quot;&gt;Number Formats&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#fonts&quot;&gt;Fonts&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#alignment&quot;&gt;Alignment&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#borders&quot;&gt;Borders&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#fills&quot;&gt;Fills&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#rich-text&quot;&gt;Rich Text&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#conditional-formatting&quot;&gt;Conditional Formatting&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#outline-levels&quot;&gt;Outline Levels&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#images&quot;&gt;Images&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sheet-protection&quot;&gt;Sheet Protection&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#file-io&quot;&gt;File I/O&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#xlsx&quot;&gt;XLSX&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#reading-xlsx&quot;&gt;Reading XLSX&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#writing-xlsx&quot;&gt;Writing XLSX&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#csv&quot;&gt;CSV&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#reading-csv&quot;&gt;Reading CSV&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#writing-csv&quot;&gt;Writing CSV&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#streaming-io&quot;&gt;Streaming I/O&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#streaming-xlsx&quot;&gt;Streaming XLSX&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#browser&quot;&gt;Browser&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;#value-types&quot;&gt;Value Types&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#null-value&quot;&gt;Null Value&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#merge-cell&quot;&gt;Merge Cell&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#number-value&quot;&gt;Number Value&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#string-value&quot;&gt;String Value&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#date-value&quot;&gt;Date Value&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#hyperlink-value&quot;&gt;Hyperlink Value&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;
        &lt;a href=&quot;#formula-value&quot;&gt;Formula Value&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#shared-formula&quot;&gt;Shared Formula&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#formula-type&quot;&gt;Formula Type&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#array-formula&quot;&gt;Array Formula&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#rich-text-value&quot;&gt;Rich Text Value&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#boolean-value&quot;&gt;Boolean Value&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#error-value&quot;&gt;Error Value&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#config&quot;&gt;Config&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#known-issues&quot;&gt;Known Issues&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#release-history&quot;&gt;Release History&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

# Importing[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

```javascript
const ExcelJS = require(&#039;exceljs&#039;);
```

## ES5 Imports[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

To use the ES5 transpiled code, for example for node.js versions older than 10, use the dist/es5 path.

```javascript
const ExcelJS = require(&#039;exceljs/dist/es5&#039;);
```

**Note:** The ES5 build has an implicit dependency on a number of polyfills which are no longer
 explicitly added by exceljs.
 You will need to add &quot;core-js&quot; and &quot;regenerator-runtime&quot; to your dependencies and
 include the following requires in your code before the exceljs import:

```javascript
// polyfills required by exceljs
require(&#039;core-js/modules/es.promise&#039;);
require(&#039;core-js/modules/es.string.includes&#039;);
require(&#039;core-js/modules/es.object.assign&#039;);
require(&#039;core-js/modules/es.object.keys&#039;);
require(&#039;core-js/modules/es.symbol&#039;);
require(&#039;core-js/modules/es.symbol.async-iterator&#039;);
require(&#039;regenerator-runtime/runtime&#039;);

const ExcelJS = require(&#039;exceljs/dist/es5&#039;);
```

For IE 11, you&#039;ll also need a polyfill to support unicode regex patterns. For example,

```js
const rewritePattern = require(&#039;regexpu-core&#039;);
const {generateRegexpuOptions} = require(&#039;@babel/helper-create-regexp-features-plugin/lib/util&#039;);

const {RegExp} = global;
try {
  new RegExp(&#039;a&#039;, &#039;u&#039;);
} catch (err) {
  global.RegExp = function(pattern, flags) {
    if (flags &amp;&amp; flags.includes(&#039;u&#039;)) {
      return new RegExp(rewritePattern(pattern, flags, generateRegexpuOptions({flags, pattern})));
    }
    return new RegExp(pattern, flags);
  };
  global.RegExp.prototype = RegExp.prototype;
}
```

## Browserify[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

ExcelJS publishes two browserified bundles inside the dist/ folder:

One with implicit dependencies on core-js polyfills...
```html
&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/babel-polyfill/6.26.0/polyfill.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;exceljs.js&quot;&gt;&lt;/script&gt;
```

And one without...
```html
&lt;script src=&quot;--your-project&#039;s-pollyfills-here--&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;exceljs.bare.js&quot;&gt;&lt;/script&gt;
```


# Interface[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

## Create a Workbook[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

```javascript
const workbook = new ExcelJS.Workbook();
```

## Set Workbook Properties[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

```javascript
workbook.creator = &#039;Me&#039;;
workbook.lastModifiedBy = &#039;Her&#039;;
workbook.created = new Date(1985, 8, 30);
workbook.modified = new Date();
workbook.lastPrinted = new Date(2016, 9, 27);
```

```javascript
// Set workbook dates to 1904 date system
workbook.properties.date1904 = true;
```

## Set Calculation Properties[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

```javascript
// Force workbook calculation on load
workbook.calcProperties.fullCalcOnLoad = true;
```

## Workbook Views[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

The Workbook views controls how many separate windows Excel will open when viewing the workbook.

```javascript
workbook.views = [
  {
    x: 0, y: 0, width: 10000, height: 20000,
    firstSheet: 0, activeTab: 1, visibility: &#039;visible&#039;
  }
]
```

## Add a Worksheet[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

```javascript
const sheet = workbook.addWorksheet(&#039;My Sheet&#039;);
```

Use the second parameter of the addWorksheet function to specify options for the worksheet.

For Example:

```javascript
// create a sheet with red tab colour
const sheet = workbook.addWorksheet(&#039;My Sheet&#039;, {properties:{tabColor:{argb:&#039;FFC0000&#039;}}});

// create a sheet where the grid lines are hidden
const sheet = workbook.addWorksheet(&#039;My Sheet&#039;, {views: [{showGridLines: false}]});

// create a sheet with the first row and column frozen
const sheet = workbook.addWorksheet(&#039;My Sheet&#039;, {views:[{state: &#039;frozen&#039;, xSplit: 1, ySplit:1}]});

// Create worksheets with headers and footers
const sheet = workbook.addWorksheet(&#039;My Sheet&#039;, {
  headerFooter:{firstHeader: &quot;Hello Exceljs&quot;, firstFooter: &quot;Hello World&quot;}
});

// create new sheet with pageSetup settings for A4 - landscape
const worksheet =  workbook.addWorksheet(&#039;My Sheet&#039;, {
  pageSetup:{paperSize: 9, orientation:&#039;landscape&#039;}
});
```

## Remove a Worksheet[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

Use the worksheet `id` to remove the sheet from workbook.

For Example:

```javascript
// Create a worksheet
const sheet = workbook.addWorksheet(&#039;My Sheet&#039;);

// Remove the worksheet using worksheet id
workbook.removeWorksheet(sheet.id)
```

## Access Worksheets[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;
```javascript
// Iterate over all sheets
// Note: workbook.worksheets.forEach will still work but this is better
workbook.eachSheet(function(worksheet, sheetId) {
  // ...
});

// fetch sheet by name
const worksheet = workbook.getWorksheet(&#039;My Sheet&#039;);

// fetch sheet by id
// INFO: Be careful when using it!
// It tries to access to `worksheet.id` field. Sometimes (really very often) workbook has worksheets with id not starting from 1.
// For instance It happens when any worksheet has been deleted.
// It&#039;s much more safety when you assume that ids are random. And stop to use this function.
// If you need to access all worksheets in a loop please look to the next example.
const worksheet = workbook.getWorksheet(1);

// access by `worksheets` array:
workbook.worksheets[0]; //the first one;

```

It&#039;s important to know that `workbook.getWorksheet(1) != Workbook.worksheets[0]` and `workbook.getWorksheet(1) != Workbook.worksheets[1]`,
because `workbook.worksheets[0].id` may have any value.

## Worksheet State[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

```javascript
// make worksheet visible
worksheet.state = &#039;visible&#039;;

// make worksheet hidden
worksheet.state = &#039;hidden&#039;;

// make worksheet hidden from &#039;hide/unhide&#039; dialog
worksheet.state = &#039;veryHidden&#039;;
```

## Worksheet Properties[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

Worksheets support a property bucket to allow control over some features of the worksheet.

```javascript
// create new sheet with properties
const worksheet = workbook.addWorksheet(&#039;sheet&#039;, {properties:{tabColor:{argb:&#039;FF00FF00&#039;}}});

// create a new sheet writer with properties
const worksheetWriter = workbookWriter.addWorksheet(&#039;sheet&#039;, {properties:{outlineLevelCol:1}});

// adjust properties afterwards (not supported by worksheet-writer)
worksheet.properties.outlineLevelCol = 2;
worksheet.properties.defaultRowHeight = 15;
```

**Supported Properties**

| Name             | Default    | Description |
| ---------------- | ---------- | ----------- |
| tabColor         | undefined  | Color of the tabs |
| outlineLevelCol  | 0          | The worksheet column outline level |
| outlineLevelRow  | 0          | The worksheet row outline level |
| defaultRowHeight | 15         | Default row height |
| defaultColWidth  | (optional) | Default column width |
| dyDescent        | 55         | TBD |

### Worksheet Metrics[‚¨Ü](#contents)&lt;!-- Link generated with jump2header --&gt;

Some new metrics have been added to Worksheet...

| Name              | Description |
| ----------------- | ----------- |
| rowCount          | The total row size of the document. Equal to the row number of the last row that has values. |
| actualRowCount    | A count of the number of rows that have values. If a mid-document row is empty, it will not be included in the count. |
| columnCount       | The total column size of the document. Equal to the maximum cell count f

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mailcow/mailcow-dockerized]]></title>
            <link>https://github.com/mailcow/mailcow-dockerized</link>
            <guid>https://github.com/mailcow/mailcow-dockerized</guid>
            <pubDate>Fri, 04 Jul 2025 00:04:25 GMT</pubDate>
            <description><![CDATA[mailcow: dockerized - üêÆ + üêã = üíï]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mailcow/mailcow-dockerized">mailcow/mailcow-dockerized</a></h1>
            <p>mailcow: dockerized - üêÆ + üêã = üíï</p>
            <p>Language: JavaScript</p>
            <p>Stars: 10,639</p>
            <p>Forks: 1,379</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre># mailcow: dockerized - üêÆ + üêã = üíï

[![Translation status](https://translate.mailcow.email/widgets/mailcow-dockerized/-/translation/svg-badge.svg)](https://translate.mailcow.email/engage/mailcow-dockerized/)
[![Twitter URL](https://img.shields.io/twitter/url/https/twitter.com/mailcow_email.svg?style=social&amp;label=Follow%20%40mailcow_email)](https://twitter.com/mailcow_email)
![Mastodon Follow](https://img.shields.io/mastodon/follow/109388212176073348?domain=https%3A%2F%2Fmailcow.social&amp;label=Follow%20%40doncow%40mailcow.social&amp;link=https%3A%2F%2Fmailcow.social%2F%40doncow)


## Want to support mailcow?

Please [consider a support contract with Servercow](https://www.servercow.de/mailcow?lang=en#support) to support further development. _We_ support _you_ while _you_ support _us_. :)

You can also [get a SAL](https://www.servercow.de/mailcow?lang=en#sal) which is a one-time payment with no liabilities or returning fees.

Or just spread the word: moo.

## Many thanks to our GitHub Sponsors ‚ù§Ô∏è
A big thank you to everyone supporting us on GitHub Sponsors‚Äîyour contributions mean the world to us! Special thanks to the following amazing supporters:

### 100$/Month Sponsors
  &lt;a href=&quot;https://www.colba.net/&quot; target=_blank&gt;&lt;img
    src=&quot;https://avatars.githubusercontent.com/u/204464723&quot; height=&quot;58&quot;
  /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.maehdros.com/&quot; target=_blank&gt;&lt;img
    src=&quot;https://avatars.githubusercontent.com/u/173894712&quot; height=&quot;58&quot;
  /&gt;&lt;/a&gt;

### 50$/Month Sponsors
  &lt;a href=&quot;https://github.com/vnukhr&quot; target=_blank&gt;&lt;img
    src=&quot;https://avatars.githubusercontent.com/u/7805987?s=52&amp;v=4&quot; height=&quot;58&quot;
  /&gt;&lt;/a&gt;

## Info, documentation and support

Please see [the official documentation](https://docs.mailcow.email/) for installation and support instructions. üêÑ

üêõ **If you found a critical security issue, please mail us to [info at servercow.de](mailto:info@servercow.de).**

## Cowmunity

[mailcow community](https://community.mailcow.email)

[Telegram mailcow channel](https://telegram.me/mailcow)

[Telegram mailcow Off-Topic channel](https://t.me/mailcowOfftopic)

[Official ùïè (Twitter) Account](https://twitter.com/mailcow_email)

[Official Mastodon Account](https://mailcow.social/@doncow)

Telegram desktop clients are available for [multiple platforms](https://desktop.telegram.org). You can search the groups history for keywords.

## Misc

**Important**: mailcow makes use of various open-source software. Please assure you agree with their license before using mailcow.
Any part of mailcow itself is released under **GNU General Public License, Version 3**.

mailcow is a registered word mark of The Infrastructure Company GmbH, Parkstr. 42, 47877 Willich, Germany.

The project is managed and maintained by The Infrastructure Company GmbH.

Originated from @andryyy (Andr√©)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[xszyou/Fay]]></title>
            <link>https://github.com/xszyou/Fay</link>
            <guid>https://github.com/xszyou/Fay</guid>
            <pubDate>Fri, 04 Jul 2025 00:04:24 GMT</pubDate>
            <description><![CDATA[fayÊòØ‰∏Ä‰∏™Â∏ÆÂä©Êï∞Â≠ó‰∫∫Ôºà2.5d„ÄÅ3d„ÄÅÁßªÂä®„ÄÅpc„ÄÅÁΩëÈ°µÔºâÊàñÂ§ßËØ≠Ë®ÄÊ®°ÂûãÔºàopenaiÂÖºÂÆπ„ÄÅdeepseekÔºâËøûÈÄö‰∏öÂä°Á≥ªÁªüÁöÑmcpÊ°ÜÊû∂„ÄÇ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/xszyou/Fay">xszyou/Fay</a></h1>
            <p>fayÊòØ‰∏Ä‰∏™Â∏ÆÂä©Êï∞Â≠ó‰∫∫Ôºà2.5d„ÄÅ3d„ÄÅÁßªÂä®„ÄÅpc„ÄÅÁΩëÈ°µÔºâÊàñÂ§ßËØ≠Ë®ÄÊ®°ÂûãÔºàopenaiÂÖºÂÆπ„ÄÅdeepseekÔºâËøûÈÄö‰∏öÂä°Á≥ªÁªüÁöÑmcpÊ°ÜÊû∂„ÄÇ</p>
            <p>Language: JavaScript</p>
            <p>Stars: 11,462</p>
            <p>Forks: 2,098</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre>
&lt;div align=&quot;center&quot;&gt;
    &lt;br&gt;
    &lt;img src=&quot;readme/icon.png&quot; alt=&quot;Fay&quot;&gt;
    &lt;h1&gt;FAY&lt;/h1&gt;
	&lt;h3&gt;FayÊï∞Â≠ó‰∫∫Ê°ÜÊû∂&lt;/h3&gt;
&lt;/div&gt;

ÔºÅÔºÅÈáçË¶ÅÈÄöÁü•ÔºöÊàë‰ª¨Â∑≤ÁªèÊääFayÁöÑ‰∏â‰∏™ÁâàÊú¨ÂêàÂπ∂Êàê1‰∏™ÔºåÂπ∂Ëá¥ÂäõÊèê‰æõÊõ¥Á®≥ÂÆöÊõ¥ÂÖ®Èù¢ÁöÑÂäüËÉΩ„ÄÇ

Êàë‰ª¨Ëá¥Âäõ‰∫éÊÄùËÄÉÈù¢ÂêëÁªàÁ´ØÁöÑÊï∞Â≠ó‰∫∫ËêΩÂú∞Â∫îÁî®ÔºåÂπ∂ÈÄöËøáÂÆåÊï¥‰ª£Á†ÅÊääÊÄùËÄÉÁªìÊûúÂëàÁé∞ÁªôÂ§ßÂÆ∂„ÄÇFayÊï∞Â≠ó‰∫∫Ê°ÜÊû∂ÔºåÂêë‰∏äÈÄÇÈÖçÂêÑÁßçÊï∞Â≠ó‰∫∫Ê®°ÂûãÊäÄÊúØÔºåÂêë‰∏ãÊé•ÂÖ•ÂêÑÂºèÂ§ßËØ≠Ë®ÄÊ®°ÂûãÔºåÂπ∂‰∏î‰æø‰∫éÊõ¥Êç¢ËØ∏Â¶ÇTTS„ÄÅASRÁ≠âÊ®°ÂûãÔºå‰∏∫ÂçïÁâáÊú∫„ÄÅapp„ÄÅÁΩëÁ´ôÊèê‰æõÂÖ®Èù¢ÁöÑÊï∞Â≠ó‰∫∫Â∫îÁî®Êé•Âè£„ÄÇ      
Êõ¥Êñ∞Êó•ÂøóÔºöhttps://qqk9ntwbcit.feishu.cn/wiki/UlbZwfAXgiKSquk52AkcibhHngg
ÊñáÊ°£Ôºöhttps://qqk9ntwbcit.feishu.cn/wiki/JzMJw7AghiO8eHktMwlcxznenIg


## **ÂäüËÉΩÁâπÁÇπ**



- ÂÆåÂÖ®ÂºÄÊ∫êÔºåÂïÜÁî®ÂÖçË¥£
- ÊîØÊåÅÂÖ®Á¶ªÁ∫ø‰ΩøÁî®
- ÂÖ®Êó∂ÊµÅÂºèÁöÑÊîØÊåÅ
- Ëá™Áî±ÂåπÈÖçÊï∞Â≠ó‰∫∫Ê®°Âûã„ÄÅÂ§ßËØ≠Ë®ÄÊ®°Âûã„ÄÅASR„ÄÅTTSÊ®°Âûã
- ÊîØÊåÅÊï∞Â≠ó‰∫∫Ëá™Âä®Êí≠Êä•Ê®°ÂºèÔºàËôöÊãüÊïôÂ∏à„ÄÅËôöÊãü‰∏ªÊí≠„ÄÅÊñ∞ÈóªÊí≠Êä•Ôºâ
- ÊîØÊåÅ‰ªªÊÑèÁªàÁ´Ø‰ΩøÁî®ÔºöÂçïÁâáÊú∫„ÄÅapp„ÄÅÁΩëÁ´ô„ÄÅÂ§ßÂ±è„ÄÅÊàêÁÜüÁ≥ªÁªüÊé•ÂÖ•Á≠â
- ÊîØÊåÅÂ§öÁî®Êà∑Â§öË∑ØÂπ∂Âèë
- Êèê‰æõÊñáÂ≠ó‰∫§‰∫íÊé•Âè£„ÄÅËØ≠Èü≥‰∫§‰∫íÊé•Âè£„ÄÅÊï∞Â≠ó‰∫∫È©±Âä®Êé•Âè£„ÄÅÁÆ°ÁêÜÊéßÂà∂Êé•Âè£„ÄÅËá™Âä®Êí≠Êä•Êé•Âè£„ÄÅÊÑèÂõæÊé•Âè£
- ÊîØÊåÅËØ≠Èü≥Êåá‰ª§ÁÅµÊ¥ªÈÖçÁΩÆÊâßË°å
- ÊîØÊåÅËá™ÂÆö‰πâÁü•ËØÜÂ∫ì„ÄÅËá™ÂÆö‰πâÈóÆÁ≠îÂØπ„ÄÅËá™ÂÆö‰πâ‰∫∫ËÆæ‰ø°ÊÅØ
- ÊîØÊåÅÂî§ÈÜíÂèäÊâìÊñ≠ÂØπËØù
- ÊîØÊåÅÊúçÂä°Âô®ÂèäÂçïÊú∫Ê®°Âºè
- ÊîØÊåÅÊú∫Âô®‰∫∫Ë°®ÊÉÖËæìÂá∫
- ÊîØÊåÅreact agentËá™‰∏ªÂÜ≥Á≠ñÊâßË°å„ÄÅ‰∏ªÂä®ÂØπËØùÔºàÂáÜÂ§áÂçáÁ∫ßÂà∞MCPÂçèËÆÆÔºâ
- ÊîØÊåÅÂêéÂè∞ÈùôÈªòÂêØÂä®
- ÊîØÊåÅdeepseekÁ≠âthinking llm
- ËÆæËÆ°Áã¨ÁâπÁöÑËÆ§Áü•Ê®°Âûã
- ÊîØÊåÅMCP
- Êèê‰æõÈÖçÁΩÆÁÆ°ÁêÜ‰∏≠ÂøÉ

###               

## **FayÊï∞Â≠ó‰∫∫Ê°ÜÊû∂**

![](readme/chat.png)

![](readme/controller.png)

![](readme/mcp.png)






## **Ê∫êÁ†ÅÂêØÂä®**


### **ÁéØÂ¢É** 
- Python 3.12

- Windows„ÄÅmacos„ÄÅubuntu

- Ê≥®ÔºöubuntuÈúÄË¶ÅÂÖàÂÆâË£ÖgccÂèäportaudio

- ````bash
  sudo apt update
  sudo apt install build-essential
  sudo apt install portaudio19-dev
  ````

  

### **ÂÆâË£Ö‰æùËµñ**

```shell
pip install -r requirements.txt
```

### **ÈÖçÁΩÆ**
+ ‰æùÁÖßËØ¥Êòé‰øÆÊîπ `./system.conf` Êñá‰ª∂

### **ÂêØÂä®**
ÂêØÂä®FayÊéßÂà∂Âô®
```shell
python main.py
```



## **ÈïúÂÉèÂø´ÈÄüÂêØÂä®**

https://www.compshare.cn/images/compshareImage-1cft3sk9gvta?ytag=GPU_fay

## **È´òÁ∫ßÁé©Ê≥ï**

![](readme/interface.png)



### ***‰ΩøÁî®Êï∞Â≠ó‰∫∫ÔºàÈùûÂøÖÈ°ªÔºâ***

ue: https://github.com/xszyou/fay-ue5

unityÔºöhttps://qqk9ntwbcit.feishu.cn/wiki/Se9xw04hUiss00kb2Lmci1BVnM9

metahuman-streamÔºà2dÔºâÔºöhttps://qqk9ntwbcit.feishu.cn/wiki/Ik1kwO9X5iilnGkFwRhcnmtvn3e

duixÔºàandroid)Ôºöhttps://qqk9ntwbcit.feishu.cn/wiki/Ik1kwO9X5iilnGkFwRhcnmtvn3e()

aibote(windows cpuÂÖãÈöÜ‰∫∫)Ôºöhttps://qqk9ntwbcit.feishu.cn/wiki/ULaywzVRti0HXWkhCzacoSPAnIg



### ***ÈõÜÊàêÂà∞Ëá™ÂÆ∂‰∫ßÂìÅÔºàÈùûÂøÖÈ°ªÔºâ***
Êé•Âè£Ôºöhttps://qqk9ntwbcit.feishu.cn/wiki/Mcw3wbA3RiNZzwkexz6cnKCsnhh



### **ËÅîÁ≥ª**

**‰∫§ÊµÅÁæ§ÂèäËµÑÊñôÊïôÁ®ã**ÂÖ≥Ê≥®ÂÖ¨‰ºóÂè∑ **fayÊï∞Â≠ó‰∫∫**Ôºà**ËØ∑ÂÖàstarÊú¨‰ªìÂ∫ì**Ôºâ

![](readme/gzh.jpg)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>