<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Wed, 13 Aug 2025 00:04:38 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[songquanpeng/one-api]]></title>
            <link>https://github.com/songquanpeng/one-api</link>
            <guid>https://github.com/songquanpeng/one-api</guid>
            <pubDate>Wed, 13 Aug 2025 00:04:38 GMT</pubDate>
            <description><![CDATA[LLM API 管理 & 分发系统，支持 OpenAI、Azure、Anthropic Claude、Google Gemini、DeepSeek、字节豆包、ChatGLM、文心一言、讯飞星火、通义千问、360 智脑、腾讯混元等主流模型，统一 API 适配，可用于 key 管理与二次分发。单可执行文件，提供 Docker 镜像，一键部署，开箱即用。LLM API management & key redistribution system, unifying multiple providers under a single API. Single binary, Docker-ready, with an English UI.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/songquanpeng/one-api">songquanpeng/one-api</a></h1>
            <p>LLM API 管理 & 分发系统，支持 OpenAI、Azure、Anthropic Claude、Google Gemini、DeepSeek、字节豆包、ChatGLM、文心一言、讯飞星火、通义千问、360 智脑、腾讯混元等主流模型，统一 API 适配，可用于 key 管理与二次分发。单可执行文件，提供 Docker 镜像，一键部署，开箱即用。LLM API management & key redistribution system, unifying multiple providers under a single API. Single binary, Docker-ready, with an English UI.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 26,674</p>
            <p>Forks: 5,346</p>
            <p>Stars today: 25 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;right&quot;&gt;
   &lt;strong&gt;中文&lt;/strong&gt; | &lt;a href=&quot;./README.en.md&quot;&gt;English&lt;/a&gt; | &lt;a href=&quot;./README.ja.md&quot;&gt;日本語&lt;/a&gt;
&lt;/p&gt;


&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/songquanpeng/one-api&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/songquanpeng/one-api/main/web/default/public/logo.png&quot; width=&quot;150&quot; height=&quot;150&quot; alt=&quot;one-api logo&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;

# One API

_✨ 通过标准的 OpenAI API 格式访问所有的大模型，开箱即用 ✨_

&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://raw.githubusercontent.com/songquanpeng/one-api/main/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/license/songquanpeng/one-api?color=brightgreen&quot; alt=&quot;license&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/songquanpeng/one-api/releases/latest&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/v/release/songquanpeng/one-api?color=brightgreen&amp;include_prereleases&quot; alt=&quot;release&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://hub.docker.com/repository/docker/justsong/one-api&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/docker/pulls/justsong/one-api?color=brightgreen&quot; alt=&quot;docker pull&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/songquanpeng/one-api/releases/latest&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/downloads/songquanpeng/one-api/total?color=brightgreen&amp;include_prereleases&quot; alt=&quot;release&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://goreportcard.com/report/github.com/songquanpeng/one-api&quot;&gt;
    &lt;img src=&quot;https://goreportcard.com/badge/github.com/songquanpeng/one-api&quot; alt=&quot;GoReportCard&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#部署&quot;&gt;部署教程&lt;/a&gt;
  ·
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#使用方法&quot;&gt;使用方法&lt;/a&gt;
  ·
  &lt;a href=&quot;https://github.com/songquanpeng/one-api/issues&quot;&gt;意见反馈&lt;/a&gt;
  ·
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#截图展示&quot;&gt;截图展示&lt;/a&gt;
  ·
  &lt;a href=&quot;https://openai.justsong.cn/&quot;&gt;在线演示&lt;/a&gt;
  ·
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#常见问题&quot;&gt;常见问题&lt;/a&gt;
  ·
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#相关项目&quot;&gt;相关项目&lt;/a&gt;
  ·
  &lt;a href=&quot;https://iamazing.cn/page/reward&quot;&gt;赞赏支持&lt;/a&gt;
&lt;/p&gt;

&gt; [!NOTE]
&gt; 本项目为开源项目，使用者必须在遵循 OpenAI 的[使用条款](https://openai.com/policies/terms-of-use)以及**法律法规**的情况下使用，不得用于非法用途。
&gt;
&gt; 根据[《生成式人工智能服务管理暂行办法》](http://www.cac.gov.cn/2023-07/13/c_1690898327029107.htm)的要求，请勿对中国地区公众提供一切未经备案的生成式人工智能服务。

&gt; [!NOTE]
&gt; 稳定版 / 预览版镜像地址：[justsong/one-api](https://hub.docker.com/repository/docker/justsong/one-api)
&gt; 或者 [ghcr.io/songquanpeng/one-api](https://github.com/songquanpeng/one-api/pkgs/container/one-api)
&gt;
&gt; alpha 版镜像地址：[justsong/one-api-alpha](https://hub.docker.com/repository/docker/justsong/one-api-alpha)
&gt; 或者 [ghcr.io/songquanpeng/one-api-alpha](https://github.com/songquanpeng/one-api/pkgs/container/one-api-alpha)

&gt; [!WARNING]
&gt; 使用 root 用户初次登录系统后，务必修改默认密码 `123456`！

## 功能
1. 支持多种大模型：
   + [x] [OpenAI ChatGPT 系列模型](https://platform.openai.com/docs/guides/gpt/chat-completions-api)（支持 [Azure OpenAI API](https://learn.microsoft.com/en-us/azure/ai-services/openai/reference)）
   + [x] [Anthropic Claude 系列模型](https://anthropic.com) (支持 AWS Claude)
   + [x] [Google PaLM2/Gemini 系列模型](https://developers.generativeai.google)
   + [x] [Mistral 系列模型](https://mistral.ai/)
   + [x] [字节跳动豆包大模型（火山引擎）](https://www.volcengine.com/experience/ark?utm_term=202502dsinvite&amp;ac=DSASUQY5&amp;rc=2QXCA1VI)
   + [x] [百度文心一言系列模型](https://cloud.baidu.com/doc/WENXINWORKSHOP/index.html)
   + [x] [阿里通义千问系列模型](https://help.aliyun.com/document_detail/2400395.html)
   + [x] [讯飞星火认知大模型](https://www.xfyun.cn/doc/spark/Web.html)
   + [x] [智谱 ChatGLM 系列模型](https://bigmodel.cn)
   + [x] [360 智脑](https://ai.360.cn)
   + [x] [腾讯混元大模型](https://cloud.tencent.com/document/product/1729)
   + [x] [Moonshot AI](https://platform.moonshot.cn/)
   + [x] [百川大模型](https://platform.baichuan-ai.com)
   + [x] [MINIMAX](https://api.minimax.chat/)
   + [x] [Groq](https://wow.groq.com/)
   + [x] [Ollama](https://github.com/ollama/ollama)
   + [x] [零一万物](https://platform.lingyiwanwu.com/)
   + [x] [阶跃星辰](https://platform.stepfun.com/)
   + [x] [Coze](https://www.coze.com/)
   + [x] [Cohere](https://cohere.com/)
   + [x] [DeepSeek](https://www.deepseek.com/)
   + [x] [Cloudflare Workers AI](https://developers.cloudflare.com/workers-ai/)
   + [x] [DeepL](https://www.deepl.com/)
   + [x] [together.ai](https://www.together.ai/)
   + [x] [novita.ai](https://www.novita.ai/)
   + [x] [硅基流动 SiliconCloud](https://cloud.siliconflow.cn/i/rKXmRobW)
   + [x] [xAI](https://x.ai/)
2. 支持配置镜像以及众多[第三方代理服务](https://iamazing.cn/page/openai-api-third-party-services)。
3. 支持通过**负载均衡**的方式访问多个渠道。
4. 支持 **stream 模式**，可以通过流式传输实现打字机效果。
5. 支持**多机部署**，[详见此处](#多机部署)。
6. 支持**令牌管理**，设置令牌的过期时间、额度、允许的 IP 范围以及允许的模型访问。
7. 支持**兑换码管理**，支持批量生成和导出兑换码，可使用兑换码为账户进行充值。
8. 支持**渠道管理**，批量创建渠道。
9. 支持**用户分组**以及**渠道分组**，支持为不同分组设置不同的倍率。
10. 支持渠道**设置模型列表**。
11. 支持**查看额度明细**。
12. 支持**用户邀请奖励**。
13. 支持以美元为单位显示额度。
14. 支持发布公告，设置充值链接，设置新用户初始额度。
15. 支持模型映射，重定向用户的请求模型，如无必要请不要设置，设置之后会导致请求体被重新构造而非直接透传，会导致部分还未正式支持的字段无法传递成功。
16. 支持失败自动重试。
17. 支持绘图接口。
18. 支持 [Cloudflare AI Gateway](https://developers.cloudflare.com/ai-gateway/providers/openai/)，渠道设置的代理部分填写 `https://gateway.ai.cloudflare.com/v1/ACCOUNT_TAG/GATEWAY/openai` 即可。
19. 支持丰富的**自定义**设置，
    1. 支持自定义系统名称，logo 以及页脚。
    2. 支持自定义首页和关于页面，可以选择使用 HTML &amp; Markdown 代码进行自定义，或者使用一个单独的网页通过 iframe 嵌入。
20. 支持通过系统访问令牌调用管理 API，进而**在无需二开的情况下扩展和自定义** One API 的功能，详情请参考此处 [API 文档](./docs/API.md)。
21. 支持 Cloudflare Turnstile 用户校验。
22. 支持用户管理，支持**多种用户登录注册方式**：
    + 邮箱登录注册（支持注册邮箱白名单）以及通过邮箱进行密码重置。
    + 支持[飞书授权登录](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/authen-v1/authorize/get)（[这里有 One API 的实现细节阐述供参考](https://iamazing.cn/page/feishu-oauth-login)）。
    + 支持 [GitHub 授权登录](https://github.com/settings/applications/new)。
    + 微信公众号授权（需要额外部署 [WeChat Server](https://github.com/songquanpeng/wechat-server)）。
23. 支持主题切换，设置环境变量 `THEME` 即可，默认为 `default`，欢迎 PR 更多主题，具体参考[此处](./web/README.md)。
24. 配合 [Message Pusher](https://github.com/songquanpeng/message-pusher) 可将报警信息推送到多种 App 上。

## 部署
### 基于 Docker 进行部署
```shell
# 使用 SQLite 的部署命令：
docker run --name one-api -d --restart always -p 3000:3000 -e TZ=Asia/Shanghai -v /home/ubuntu/data/one-api:/data justsong/one-api
# 使用 MySQL 的部署命令，在上面的基础上添加 `-e SQL_DSN=&quot;root:123456@tcp(localhost:3306)/oneapi&quot;`，请自行修改数据库连接参数，不清楚如何修改请参见下面环境变量一节。
# 例如：
docker run --name one-api -d --restart always -p 3000:3000 -e SQL_DSN=&quot;root:123456@tcp(localhost:3306)/oneapi&quot; -e TZ=Asia/Shanghai -v /home/ubuntu/data/one-api:/data justsong/one-api
```

其中，`-p 3000:3000` 中的第一个 `3000` 是宿主机的端口，可以根据需要进行修改。

数据和日志将会保存在宿主机的 `/home/ubuntu/data/one-api` 目录，请确保该目录存在且具有写入权限，或者更改为合适的目录。

如果启动失败，请添加 `--privileged=true`，具体参考 https://github.com/songquanpeng/one-api/issues/482 。

如果上面的镜像无法拉取，可以尝试使用 GitHub 的 Docker 镜像，将上面的 `justsong/one-api` 替换为 `ghcr.io/songquanpeng/one-api` 即可。

如果你的并发量较大，**务必**设置 `SQL_DSN`，详见下面[环境变量](#环境变量)一节。

更新命令：`docker run --rm -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower -cR`

Nginx 的参考配置：
```
server{
   server_name openai.justsong.cn;  # 请根据实际情况修改你的域名

   location / {
          client_max_body_size  64m;
          proxy_http_version 1.1;
          proxy_pass http://localhost:3000;  # 请根据实际情况修改你的端口
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $remote_addr;
          proxy_cache_bypass $http_upgrade;
          proxy_set_header Accept-Encoding gzip;
          proxy_read_timeout 300s;  # GPT-4 需要较长的超时时间，请自行调整
   }
}
```

之后使用 Let&#039;s Encrypt 的 certbot 配置 HTTPS：
```bash
# Ubuntu 安装 certbot：
sudo snap install --classic certbot
sudo ln -s /snap/bin/certbot /usr/bin/certbot
# 生成证书 &amp; 修改 Nginx 配置
sudo certbot --nginx
# 根据指示进行操作
# 重启 Nginx
sudo service nginx restart
```

初始账号用户名为 `root`，密码为 `123456`。

### 通过宝塔面板进行一键部署
1. 安装宝塔面板9.2.0及以上版本，前往 [宝塔面板](https://www.bt.cn/new/download.html?r=dk_oneapi) 官网，选择正式版的脚本下载安装；
2. 安装后登录宝塔面板，在左侧菜单栏中点击 `Docker`，首次进入会提示安装 `Docker` 服务，点击立即安装，按提示完成安装；
3. 安装完成后在应用商店中搜索 `One-API`，点击安装，配置域名等基本信息即可完成安装；

### 基于 Docker Compose 进行部署

&gt; 仅启动方式不同，参数设置不变，请参考基于 Docker 部署部分

```shell
# 目前支持 MySQL 启动，数据存储在 ./data/mysql 文件夹内
docker-compose up -d

# 查看部署状态
docker-compose ps
```

### 手动部署
1. 从 [GitHub Releases](https://github.com/songquanpeng/one-api/releases/latest) 下载可执行文件或者从源码编译：
   ```shell
   git clone https://github.com/songquanpeng/one-api.git

   # 构建前端
   cd one-api/web/default
   npm install
   npm run build

   # 构建后端
   cd ../..
   go mod download
   go build -ldflags &quot;-s -w&quot; -o one-api
   ````
2. 运行：
   ```shell
   chmod u+x one-api
   ./one-api --port 3000 --log-dir ./logs
   ```
3. 访问 [http://localhost:3000/](http://localhost:3000/) 并登录。初始账号用户名为 `root`，密码为 `123456`。

更加详细的部署教程[参见此处](https://iamazing.cn/page/how-to-deploy-a-website)。

### 多机部署
1. 所有服务器 `SESSION_SECRET` 设置一样的值。
2. 必须设置 `SQL_DSN`，使用 MySQL 数据库而非 SQLite，所有服务器连接同一个数据库。
3. 所有从服务器必须设置 `NODE_TYPE` 为 `slave`，不设置则默认为主服务器。
4. 设置 `SYNC_FREQUENCY` 后服务器将定期从数据库同步配置，在使用远程数据库的情况下，推荐设置该项并启用 Redis，无论主从。
5. 从服务器可以选择设置 `FRONTEND_BASE_URL`，以重定向页面请求到主服务器。
6. 从服务器上**分别**装好 Redis，设置好 `REDIS_CONN_STRING`，这样可以做到在缓存未过期的情况下数据库零访问，可以减少延迟（Redis 集群或者哨兵模式的支持请参考环境变量说明）。
7. 如果主服务器访问数据库延迟也比较高，则也需要启用 Redis，并设置 `SYNC_FREQUENCY`，以定期从数据库同步配置。

环境变量的具体使用方法详见[此处](#环境变量)。

### 宝塔部署教程

详见 [#175](https://github.com/songquanpeng/one-api/issues/175)。

如果部署后访问出现空白页面，详见 [#97](https://github.com/songquanpeng/one-api/issues/97)。

### 部署第三方服务配合 One API 使用
&gt; 欢迎 PR 添加更多示例。

#### ChatGPT Next Web
项目主页：https://github.com/Yidadaa/ChatGPT-Next-Web

```bash
docker run --name chat-next-web -d -p 3001:3000 yidadaa/chatgpt-next-web
```

注意修改端口号，之后在页面上设置接口地址（例如：https://openai.justsong.cn/ ）和 API Key 即可。

#### ChatGPT Web
项目主页：https://github.com/Chanzhaoyu/chatgpt-web

```bash
docker run --name chatgpt-web -d -p 3002:3002 -e OPENAI_API_BASE_URL=https://openai.justsong.cn -e OPENAI_API_KEY=sk-xxx chenzhaoyu94/chatgpt-web
```

注意修改端口号、`OPENAI_API_BASE_URL` 和 `OPENAI_API_KEY`。

#### QChatGPT - QQ机器人
项目主页：https://github.com/RockChinQ/QChatGPT

根据[文档](https://qchatgpt.rockchin.top)完成部署后，在 `data/provider.json`设置`requester.openai-chat-completions.base-url`为 One API 实例地址，并填写 API Key 到 `keys.openai` 组中，设置 `model` 为要使用的模型名称。

运行期间可以通过`!model`命令查看、切换可用模型。

### 部署到第三方平台
&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;部署到 Sealos &lt;/strong&gt;&lt;/summary&gt;
&lt;div&gt;

&gt; Sealos 的服务器在国外，不需要额外处理网络问题，支持高并发 &amp; 动态伸缩。

点击以下按钮一键部署（部署后访问出现 404 请等待 3~5 分钟）：

[![Deploy-on-Sealos.svg](https://raw.githubusercontent.com/labring-actions/templates/main/Deploy-on-Sealos.svg)](https://cloud.sealos.io/?openapp=system-fastdeploy?templateName=one-api)

&lt;/div&gt;
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;部署到 Zeabur&lt;/strong&gt;&lt;/summary&gt;
&lt;div&gt;

&gt; Zeabur 的服务器在国外，自动解决了网络的问题，同时免费的额度也足够个人使用

[![Deploy on Zeabur](https://zeabur.com/button.svg)](https://zeabur.com/templates/7Q0KO3)

1. 首先 fork 一份代码。
2. 进入 [Zeabur](https://zeabur.com?referralCode=songquanpeng)，登录，进入控制台。
3. 新建一个 Project，在 Service -&gt; Add Service 选择 Marketplace，选择 MySQL，并记下连接参数（用户名、密码、地址、端口）。
4. 复制链接参数，运行 ```create database `one-api` ``` 创建数据库。
5. 然后在 Service -&gt; Add Service，选择 Git（第一次使用需要先授权），选择你 fork 的仓库。
6. Deploy 会自动开始，先取消。进入下方 Variable，添加一个 `PORT`，值为 `3000`，再添加一个 `SQL_DSN`，值为 `&lt;username&gt;:&lt;password&gt;@tcp(&lt;addr&gt;:&lt;port&gt;)/one-api` ，然后保存。 注意如果不填写 `SQL_DSN`，数据将无法持久化，重新部署后数据会丢失。
7. 选择 Redeploy。
8. 进入下方 Domains，选择一个合适的域名前缀，如 &quot;my-one-api&quot;，最终域名为 &quot;my-one-api.zeabur.app&quot;，也可以 CNAME 自己的域名。
9. 等待部署完成，点击生成的域名进入 One API。

&lt;/div&gt;
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;部署到 Render&lt;/strong&gt;&lt;/summary&gt;
&lt;div&gt;

&gt; Render 提供免费额度，绑卡后可以进一步提升额度

Render 可以直接部署 docker 镜像，不需要 fork 仓库：https://dashboard.render.com

&lt;/div&gt;
&lt;/details&gt;

## 配置
系统本身开箱即用。

你可以通过设置环境变量或者命令行参数进行配置。

等到系统启动后，使用 `root` 用户登录系统并做进一步的配置。

**Note**：如果你不知道某个配置项的含义，可以临时删掉值以看到进一步的提示文字。

## 使用方法
在`渠道`页面中添加你的 API Key，之后在`令牌`页面中新增访问令牌。

之后就可以使用你的令牌访问 One API 了，使用方式与 [OpenAI API](https://platform.openai.com/docs/api-reference/introduction) 一致。

你需要在各种用到 OpenAI API 的地方设置 API Base 为你的 One API 的部署地址，例如：`https://openai.justsong.cn`，API Key 则为你在 One API 中生成的令牌。

注意，具体的 API Base 的格式取决于你所使用的客户端。

例如对于 OpenAI 的官方库：
```bash
OPENAI_API_KEY=&quot;sk-xxxxxx&quot;
OPENAI_API_BASE=&quot;https://&lt;HOST&gt;:&lt;PORT&gt;/v1&quot;
```

```mermaid
graph LR
    A(用户)
    A ---&gt;|使用 One API 分发的 key 进行请求| B(One API)
    B --&gt;|中继请求| C(OpenAI)
    B --&gt;|中继请求| D(Azure)
    B --&gt;|中继请求| E(其他 OpenAI API 格式下游渠道)
    B --&gt;|中继并修改请求体和返回体| F(非 OpenAI API 格式下游渠道)
```

可以通过在令牌后面添加渠道 ID 的方式指定使用哪一个渠道处理本次请求，例如：`Authorization: Bearer ONE_API_KEY-CHANNEL_ID`。
注意，需要是管理员用户创建的令牌才能指定渠道 ID。

不加的话将会使用负载均衡的方式使用多个渠道。

### 环境变量
&gt; One API 支持从 `.env` 文件中读取环境变量，请参照 `.env.example` 文件，使用时请将其重命名为 `.env`。
1. `REDIS_CONN_STRING`：设置之后将使用 Redis 作为缓存使用。
   + 例子：`REDIS_CONN_STRING=redis://default:redispw@localhost:49153`
   + 如果数据库访问延迟很低，没有必要启用 Redis，启用后反而会出现数据滞后的问题。
   + 如果需要使用哨兵或者集群模式：
     + 则需要把该环境变量设置为节点列表，例如：`localhost:49153,localhost:49154,localhost:49155`。
     + 除此之外还需要设置以下环境变量：
       + `REDIS_PASSWORD`：Redis 集群或者哨兵模式下的密码设置。
       + `REDIS_MASTER_NAME`：Redis 哨兵模式下主节点的名称。
2. `SESSION_SECRET`：设置之后将使用固定的会话密钥，这样系统重新启动后已登录用户的 cookie 将依旧有效。
   + 例子：`SESSION_SECRET=random_string`
3. `SQL_DSN`：设置之后将使用指定数据库而非 SQLite，请使用 MySQL 或 PostgreSQL。
   + 例子：
     + MySQL：`SQL_DSN=root:123456@tcp(localhost:3306)/oneapi`
     + PostgreSQL：`SQL_DSN=postgres://postgres:123456@localhost:5432/oneapi`（适配中，欢迎反馈）
   + 注意需要提前建立数据库 `oneapi`，无需手动建表，程序将自动建表。
   + 如果使用本地数据库：部署命令可添加 `--network=&quot;host&quot;` 以使得容器内的程序可以访问到宿主机上的 MySQL。
   + 如果使用云数据库：如果云服务器需要验证身份，需要在连接参数中添加 `?tls=skip-verify`。
   + 请根据你的数据库配置修改下列参数（或者保持默认值）：
     + `SQL_MAX_IDLE_CONNS`：最大空闲连接数，默认为 `100`。
     + `SQL_MAX_OPEN_CONNS`：最大打开连接数，默认为 `1000`。
       + 如果报错 `Error 1040: Too many connections`，请适当减小该值。
     + `SQL_CONN_MAX_LIFETIME`：连接的最大生命周期，默认为 `60`，单位分钟。
4. `LOG_SQL_DSN`：设置之后将为 `logs` 表使用独立的数据库，请使用 MySQL 或 PostgreSQL。
5. `FRONTEND_BASE_URL`：设置之后将重定向页面请求到指定的地址，仅限从服务器设置。
   + 例子：`FRONTEND_BASE_URL=https://openai.justsong.cn`
6. `MEMORY_CACHE_ENABLED`：启用内存缓存，会导致用户额度的更新存在一定的延迟，可选值为 `true` 和 `false`，未设置则默认为 `false`。
   + 例子：`MEMORY_CACHE_ENABLED=true`
7. `SYNC_FREQUENCY`：在启用缓存的情况下与数据库同步配置的频率，单位为秒，默认为 `600` 秒。
   + 例子：`SYNC_FREQUENCY=60`
8. `NODE_TYPE`：设置之后将指定节点类型，可选值为 `master` 和 `slave`，未设置则默认为 `master`。
   + 例子：`NODE_TYPE=slave`
9. `CHANNEL_UPDATE_FREQUENCY`：设置之后将定期更新渠道余额，单位为分钟，未设置则不进行更新。
   + 例子：`CHANNEL_UPDATE_FREQUENCY=1440`
10. `CHANNEL_TEST_FREQUENCY`：设置之后将定期检查渠道，单位为分钟，未设置则不进行检查。 
   +例子：`CHANNEL_TEST_FREQUENCY=1440`
11. `POLLING_INTERVAL`：批量更新渠道余额以及测试可用性时的请求间隔，单位为秒，默认无间隔。
    + 例子：`POLLING_INTERVAL=5`
12. `BATCH_UPDATE_ENABLED`：启用数据库批量更新聚合，会导致用户额度的更新存在一定的延迟可选值为 `true` 和 `false`，未设置则默认为 `false`。
    + 例子：`BATCH_UPDATE_ENABLED=true`
    + 如果你遇到了数据库连接数过多的问题，可以尝试启用该选项。
13. `BATCH_UPDATE_INTERVAL=5`：批量更新聚合的时间间隔，单位为秒，默认为 `5`。
    + 例子：`BATCH_UPDATE_INTERVAL=5`
14. 请求频率限制：
    + `GLOBAL_API_RATE_LIMIT`：全局 API 速率限制（除中继请求外），单 ip 三分钟内的最大请求数，默认为 `180`。
    + `GLOBAL_WEB_RATE_LIMIT`：全局 Web 速率限制，单 ip 三分钟内的最大请求数，默认为 `60`。
15. 编码器缓存设置：
    + `TIKTOKEN_CACHE_DIR`：默认程序启动时会联网下载一些通用的词元的编码，如：`gpt-3.5-turbo`，在一些网络环境不稳定，或者离线情况，可能会导致启动有问题，可以配置此目录缓存数据，可迁移到离线环境。
    + `DATA_GYM_CACHE_DIR`：目前该配置作用与 `TIKTOKEN_CACHE_DIR` 一致，但是优先级没有它高。
16. `RELAY_TIMEOUT`：中继超时设置，单位为秒，默认不设置超时时间。
17. `RELAY_PROXY`：设置后使用该代理来请求 API。
18. `USER_CONTENT_REQUEST_TIMEOUT`：用户上传内容下载超时时间，单位为秒。
19. `USER_CONTENT_REQUEST_PROXY`：设置后使用该代理来请求用户上传的内容，例如图片。
20. `SQLITE_BUSY_TIMEOUT`：SQLite 锁等待超时设置，单位为毫秒，默认 `3000`。
21. `GEMINI_SAFETY_SETTING`：Gemini 的安全设置，默认 `BLOCK_NONE`。
22. `GEMINI_VERSION`：One API 所使用的 Gemini 版本，默认为 `v1`。
23. `THEME`：系统的主题设置，默认为 `default`，具体可选值参考[此处](./web/README.md)。
24. `ENABLE_METRIC`：是否根据请求成功率禁用渠道，默认不开启，可选值为 `true` 和 `false`。
25. `METRIC_QUEUE_SIZE`：请求成功率统计队列大小，默认为 `10`。
26. `METRIC_SUCCESS_RATE_THRESHOLD`：请求成功率阈值，默认为 `0.8`。
27. `INITIAL_ROOT_TOKEN`：如果设置了该值，则在系统首次启动时会自动创建一个值为该环境变量值的 root 用户令牌。
28. `INITIAL_ROOT_ACCESS_TOKEN`：如果设置了该值，则在系统首次启动时会自动创建一个值为该环境变量的 root 用户创建系统管理令牌。
29. `ENFORCE_INCLUDE_USAGE`：是否强制在 stream 模型下返回 usage，默认不开启，可选值为 `true` 和 `false`。
30. `TEST_PROMPT`：测试模型时的用户 prompt，默认为 `Print your model name exactly and do not output without any other text.`。

### 命令行参数
1. `--port &lt;port_number&gt;`: 指定服务器监听的端口号，默认为 `3000`。
   + 例子：`--port 3000`
2. `--log-dir &lt;log_dir&gt;`: 指定日志文件夹，如果没有设置，默认保存至工作目录的 `logs` 文件夹下。
   + 例子：`--log-dir ./logs`
3. `--version`: 打印系统版本号并退出。
4. `--help`: 查看命令的使用帮助和参数说明。

## 演示
### 在线演示
注意，该演示站不提供对外服务：
https://openai.justsong.cn

### 截图展示
![channel](https://user-images.githubusercontent.com/39998050/233837954-ae6683aa-5c4f-429f-a949-6645a83c9490.png)
![token](https://user-images.githubusercontent.com/39998050/233837971-dab488b7-6d96-43af-b640-a168e8d1c9bf.png)

## 常见问题
1. 额度是什么？怎么计算的？One API 的额度计算有问题？
   + 额度 = 分组倍率 * 模型倍率 * （提示 token 数 + 补全 token 数 * 补全倍率）
   + 其中补全倍率对于 GPT3.5 固定为 1.33，GPT4 为 2，与官方保持一致。
   + 如果是非流模式，官方接口会返回消耗的总 token，但是你要注意提示和补全的消耗倍率不一样。
   + 注意，One API 的默认倍率就是官方倍率，是已经调整过的。
2. 账户额度足够为什么提示额度不足？
   + 请检查你的令牌额度是否足够，这个和账户额度是分开的。
   + 令牌额度仅供用户设置最大使用量，用户可自由设置。
3. 提示无可用渠道？
   + 请检查的用户分组和渠道分组设置。
   + 以及渠道的模型设置。
4. 渠道测试报错：`invalid character &#039;&lt;&#039; looking for beginning of value`
   + 这是因为返回值不是合法的 JSON，而是一个 HTML 页面。
   + 大概率是你的部署站的 IP 或代理的节点被 CloudFlare 封禁了。
5. ChatGPT Next Web 报错：`Failed to fetch`
   + 部署的时候不要设置 `BASE_URL`。
   + 检查你的接口地址和 API Key 有没有填对。
   + 检查是否启用了 HTTPS，浏览器会拦截 HTTPS 域名下的 HTTP 请求。
6. 报错：`当前分组负载已饱和，请稍后再试`
   + 上游渠道 429 了。
7. 升级之后我的数据会丢失吗？
   + 如果使用 MySQL，不会。
   + 如果使用 SQLite，需要按照我所给的部署命令挂载 volume 持久化 one-api.db 数据库文件，否则容器重启后数据会丢失。
8. 升级之前数据库需要做变更吗？
   + 一般情况下不需要，系统将在初始化的时候自动调整。
   + 如果需要的话，我会在更新日志中说明，并给出脚本。
9. 手动修改数据库后报错：`数据库一致性已被破坏，请联系管理员`？
   + 这是检测到 ability 表里有些记录的渠道 id 是不存在的，这大概率是因为你删了 channel 表里的记录但是没有同步在 ability 表里清理无效的渠道。
   + 对于每一个渠道，其所支持的模型都需要有一个专门的 ability 表的记录，表示该渠道支持该模型。

## 相关项目
* [FastGPT](https://github.com/labring/FastGPT): 基于 LLM 大语言模型的知识库问答系统
* [ChatGPT Next Web](https://github.com/Yidadaa/ChatGPT-Next-Web):  一键拥有你自己的跨平台 ChatGPT 应用
* [VChart](https://github.com/VisActor/VChart):  不只是开箱即用的多端图表库，更是生动灵活的数据故事讲述者。
* [VMind](https://github.com/VisActor/VMind):  不仅自动，还很智能。开源智能可视化解决方案。
* [CherryStudio](https://github.com/CherryHQ/cherry-studio):  全平台支持的AI客户端, 多服务商集成管理、本地知识库支持。

## 注意

本项目使用 MIT 协议进行开源，**在此基础上**，必须在页面底部保留署名以及指向本项目的链接。如果不想保留署名，必须首先获得授权。

同样适用于基于本项目的二开项目。

依据 MIT 协议，使用者需自行承担使用本项目的风险与责任，本开源项目开发者与此无关。
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[microsoft/Web-Dev-For-Beginners]]></title>
            <link>https://github.com/microsoft/Web-Dev-For-Beginners</link>
            <guid>https://github.com/microsoft/Web-Dev-For-Beginners</guid>
            <pubDate>Wed, 13 Aug 2025 00:04:37 GMT</pubDate>
            <description><![CDATA[24 Lessons, 12 Weeks, Get Started as a Web Developer]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/microsoft/Web-Dev-For-Beginners">microsoft/Web-Dev-For-Beginners</a></h1>
            <p>24 Lessons, 12 Weeks, Get Started as a Web Developer</p>
            <p>Language: JavaScript</p>
            <p>Stars: 91,255</p>
            <p>Forks: 13,847</p>
            <p>Stars today: 78 stars today</p>
            <h2>README</h2><pre>[![GitHub license](https://img.shields.io/github/license/microsoft/Web-Dev-For-Beginners.svg)](https://github.com/microsoft/Web-Dev-For-Beginners/blob/master/LICENSE)
[![GitHub contributors](https://img.shields.io/github/contributors/microsoft/Web-Dev-For-Beginners.svg)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/graphs/contributors/)
[![GitHub issues](https://img.shields.io/github/issues/microsoft/Web-Dev-For-Beginners.svg)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/issues/)
[![GitHub pull-requests](https://img.shields.io/github/issues-pr/microsoft/Web-Dev-For-Beginners.svg)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/pulls/)
[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)

[![GitHub watchers](https://img.shields.io/github/watchers/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;label=Watch&amp;maxAge=2592000)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/watchers/)
[![GitHub forks](https://img.shields.io/github/forks/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;label=Fork&amp;maxAge=2592000)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/network/)
[![GitHub stars](https://img.shields.io/github/stars/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;label=Star&amp;maxAge=2592000)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/stargazers/)

[![](https://dcbadge.vercel.app/api/server/ByRwuEEgH4)](https://discord.gg/zxKYvhSnVp?WT.mc_id=academic-000002-leestott)

[![Open in Visual Studio Code](https://img.shields.io/static/v1?logo=visualstudiocode&amp;label=&amp;message=Open%20in%20Visual%20Studio%20Code&amp;labelColor=2c2c32&amp;color=007acc&amp;logoColor=007acc)](https://open.vscode.dev/microsoft/Web-Dev-For-Beginners)

# Web Development for Beginners - A Curriculum

Learn the fundamentals of web development with our 12-week comprehensive course by Microsoft Cloud Advocates. Each of the 24 lessons dives into JavaScript, CSS, and HTML through hands-on projects like terrariums, browser extensions, and space games. Engage with quizzes, discussions, and practical assignments. Enhance your skills and optimize your knowledge retention with our effective project-based pedagogy. Start your coding journey today!

#### 🧑‍🎓 _Are you a student?_

Visit [**Student Hub page**](https://docs.microsoft.com/learn/student-hub/?WT.mc_id=academic-77807-sagibbon) where you will find beginner resources, Student packs and even ways to get a free certificate voucher. This is the page you want to bookmark and check from time to time as we switch out content monthly.

### 📣 Announcement - _New Curriculum_ on Generative AI for JavaScript was just released

Don&#039;t miss our new Generative AI curriculum!

Visit [https://aka.ms/genai-js-course](https://aka.ms/genai-js-course) to get started!

&lt;div&gt;
  &lt;img src=&quot;./images/background.png&quot; width=&quot;600px&quot; /&gt;
&lt;/div&gt;

- Lessons covering everything from basics to RAG.
- Interact with historical characters using GenAI and our companion app.
- Fun and engaging narrative, you&#039;ll be time traveling!

&lt;div&gt;
  &lt;img src=&quot;./images/character.png&quot; width=&quot;600px&quot; /&gt;
&lt;/div&gt;

Each lesson includes an assignment to complete, a knowledge check and a challenge to guide you on learning topics like:
- Prompting and prompt engineering
- Text and image app generation
- Search apps

Visit [https://aka.ms/genai-js-course]([https://aka.ms/genai-js-course) to get started!



## 🌱 Getting Started

&gt; **Teachers**, we have [included some suggestions](for-teachers.md) on how to use this curriculum. We&#039;d love your feedback [in our discussion forum](https://github.com/microsoft/Web-Dev-For-Beginners/discussions/categories/teacher-corner)!

**[Learners](https://aka.ms/student-page/?WT.mc_id=academic-77807-sagibbon)**, for each lesson, start with a pre-lecture quiz and follow through with reading the lecture material, completing the various activities and check your understanding with the post-lecture quiz.

To enhance your learning experience, connect with your peers to work on the projects together! Discussions are encouraged in our [discussion forum](https://github.com/microsoft/Web-Dev-For-Beginners/discussions) where our team of moderators will be available to answer your questions.

To further your education, we highly recommend exploring [Microsoft Learn](https://learn.microsoft.com/users/wirelesslife/collections/p1ddcy5jwy0jkm?WT.mc_id=academic-77807-sagibbon) for additional study materials.

### 📋 Setting up your environment

This curriculum has a development environment ready to go! As you get started you can choose to run the curriculum in a [Codespace](https://github.com/features/codespaces/) (_a browser-based, no installs needed environment_), or locally on your computer using a text editor such as [Visual Studio Code](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon).

#### Create your repository
For you to easily save your work, it is recommended that you create your own copy of this repository. You can do this by clicking the **Use this template** button at the top of the page. This will create a new repository in your GitHub account with a copy of the curriculum.

Follow these steps:
1. **Fork the Repository**: Click on the &quot;Fork&quot; button at the top-right corner of this page.
2. **Clone the Repository**:   `git clone https://github.com/microsoft/Web-Dev-For-Beginners.git`

#### Running the curriculum in a Codespace

In your copy of this repository that you created, click the **Code** button and select **Open with Codespaces**. This will create a new Codespace for you to work in.

&lt;img src=&quot;./images/createcodespace.png&quot; alt=&quot;Create codespace&quot; style=&quot;width:270px;&quot;/&gt;

#### Running the curriculum locally on your computer

To run this curriculum locally on your computer, you will need a text editor, a browser and a command line tool. Our first lesson, [Introduction to Programming Languages and Tools of the Trade](https://github.com/microsoft/Web-Dev-For-Beginners/tree/main/1-getting-started-lessons/1-intro-to-programming-languages), will walk you through various options for each of these tools for you to select what works best for you.

Our recommendation is to use [Visual Studio Code](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon) as your editor, which also has a built-in [Terminal](https://code.visualstudio.com/docs/terminal/basics/?WT.mc_id=academic-77807-sagibbon). You can download Visual Studio Code [here](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon).


1. Clone your repository to your computer. You can do this by clicking the **Code** button and copying the URL:

    &lt;img src=&quot;./images/createcodespace.png&quot; alt=&quot;Copy your repository URL&quot; style=&quot;width:270px;&quot;/&gt;

    Then, open [Terminal](https://code.visualstudio.com/docs/terminal/basics/?WT.mc_id=academic-77807-sagibbon) within [Visual Studio Code](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon) and run the following command, replacing `&lt;your-repository-url&gt;` with the URL you just copied:

    ```bash 
    git clone &lt;your-repository-url&gt;
    ```

2. Open the folder in Visual Studio Code. You can do this by clicking **File** &gt; **Open Folder** and selecting the folder you just cloned.


&gt;  Recommended Visual Studio Code extensions:
&gt;
&gt; * [Live Server](https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer&amp;WT.mc_id=academic-77807-sagibbon) - to preview HTML pages within Visual Studio Code
&gt; * [Copilot](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot&amp;WT.mc_id=academic-77807-sagibbon) - to help you write code faster

## 📂 Each lesson includes:

- optional sketchnote
- optional supplemental video
- pre-lesson warmup quiz
- written lesson
- for project-based lessons, step-by-step guides on how to build the project
- knowledge checks
- a challenge
- supplemental reading
- assignment
- post-lesson quiz

&gt; **A note about quizzes**: All quizzes are contained in the Quiz-app folder, 48 total quizzes of three questions each. They are linked from within the lessons the quiz app can be run locally or deployed to Azure; follow the instruction in the `quiz-app` folder. They are gradually being localized.

## 🗃️ Lessons

|     |                       Project Name                       |                            Concepts Taught                             | Learning Objectives                                                                                                                 |                                                         Linked Lesson                                                          |         Author          |
| :-: | :------------------------------------------------------: | :--------------------------------------------------------------------: | ----------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------: | :---------------------: |
| 01  |                     Getting Started                      |           Introduction to Programming and Tools of the Trade           | Learn the basic underpinnings behind most programming languages and about software that helps professional developers do their jobs | [Intro to Programming Languages and Tools of the Trade](/1-getting-started-lessons/1-intro-to-programming-languages/README.md) |         Jasmine         |
| 02  |                     Getting Started                      |             Basics of GitHub, includes working with a team             | How to use GitHub in your project, how to collaborate with others on a code base                                                    |                            [Intro to GitHub](/1-getting-started-lessons/2-github-basics/README.md)                             |          Floor          |
| 03  |                     Getting Started                      |                             Accessibility                              | Learn the basics of web accessibility                                                                                               |                       [Accessibility Fundamentals](/1-getting-started-lessons/3-accessibility/README.md)                       |       Christopher       |
| 04  |                        JS Basics                         |                         JavaScript Data Types                          | The basics of JavaScript data types                                                                                                 |                                       [Data Types](/2-js-basics/1-data-types/README.md)                                        |         Jasmine         |
| 05  |                        JS Basics                         |                         Functions and Methods                          | Learn about functions and methods to manage an application&#039;s logic flow                                                             |                              [Functions and Methods](/2-js-basics/2-functions-methods/README.md)                               | Jasmine and Christopher |
| 06  |                        JS Basics                         |                        Making Decisions with JS                        | Learn how to create conditions in your code using decision-making methods                                                           |                                 [Making Decisions](/2-js-basics/3-making-decisions/README.md)                                  |         Jasmine         |
| 07  |                        JS Basics                         |                            Arrays and Loops                            | Work with data using arrays and loops in JavaScript                                                                                 |                                   [Arrays and Loops](/2-js-basics/4-arrays-loops/README.md)                                    |         Jasmine         |
| 08  |       [Terrarium](/3-terrarium/solution/README.md)       |                            HTML in Practice                            | Build the HTML to create an online terrarium, focusing on building a layout                                                         |                                 [Introduction to HTML](/3-terrarium/1-intro-to-html/README.md)                                 |           Jen           |
| 09  |       [Terrarium](/3-terrarium/solution/README.md)       |                            CSS in Practice                             | Build the CSS to style the online terrarium, focusing on the basics of CSS including making the page responsive                     |                                  [Introduction to CSS](/3-terrarium/2-intro-to-css/README.md)                                  |           Jen           |
| 10  |            [Terrarium](/3-terrarium/solution/README.md)            |                 JavaScript Closures, DOM manipulation                  | Build the JavaScript to make the terrarium function as a drag/drop interface, focusing on closures and DOM manipulation             |                  [JavaScript Closures, DOM manipulation](/3-terrarium/3-intro-to-DOM-and-closures/README.md)                   |           Jen           |
| 11  |          [Typing Game](/4-typing-game/solution/README.md)          |                          Build a Typing Game                           | Learn how to use keyboard events to drive the logic of your JavaScript app                                                          |                                [Event-Driven Programming](/4-typing-game/typing-game/README.md)                                |       Christopher       |
| 12  | [Green Browser Extension](/5-browser-extension/solution/README.md) |                         Working with Browsers                          | Learn how browsers work, their history, and how to scaffold the first elements of a browser extension                               |                               [About Browsers](/5-browser-extension/1-about-browsers/README.md)                                |           Jen           |
| 13  | [Green Browser Extension](/5-browser-extension/solution/README.md) | Building a form, calling an API and storing variables in local storage | Build the JavaScript elements of your browser extension to call an API using variables stored in local storage                      |                [APIs, Forms, and Local Storage](/5-browser-extension/2-forms-browsers-local-storage/README.md)                 |           Jen           |
| 14  | [Green Browser Extension](/5-browser-extension/solution/README.md) |          Background processes in the browser, web performance          | Use the browser&#039;s background processes to manage the extension&#039;s icon; learn about web performance and some optimizations to make   |             [Background Tasks and Performance](/5-browser-extension/3-background-tasks-and-performance/README.md)              |           Jen           |
| 15  |           [Space Game](/6-space-game/solution/README.md)           |             More Advanced Game Development with JavaScript             | Learn about Inheritance using both Classes and Composition and the Pub/Sub pattern, in preparation for building a game              |                      [Introduction to Advanced Game Development](/6-space-game/1-introduction/README.md)                       |          Chris          |
| 16  |           [Space Game](/6-space-game/solution/README.md)           |                           Drawing to canvas                            | Learn about the Canvas API, used to draw elements to a screen                                                                       |                                [Drawing to Canvas](/6-space-game/2-drawing-to-canvas/README.md)                                |          Chris          |
| 17  |           [Space Game](/6-space-game/solution/README.md)           |                   Moving elements around the screen                    | Discover how elements can gain motion using the cartesian coordinates and the Canvas API                                            |                           [Moving Elements Around](/6-space-game/3-moving-elements-around/README.md)                           |          Chris          |
| 18  |           [Space Game](/6-space-game/solution/README.md)           |                          Collision detection                           | Make elements collide and react to each other using keypresses and provide a cooldown function to ensure performance of the game    |                              [Collision Detection](/6-space-game/4-collision-detection/README.md)                              |          Chris          |
| 19  |           [Space Game](/6-space-game/solution/README.md)           |                             Keeping score                              | Perform math calculations based on the game&#039;s status and performance                                                                |                                    [Keeping Score](/6-space-game/5-keeping-score/README.md)                                    |          Chris          |
| 20  |           [Space Game](/6-space-game/solution/README.md)           |                     Ending and restarting the game                     | Learn about ending and restarting the game, including cleaning up assets and resetting variable values                              |                                [The Ending Condition](/6-space-game/6-end-condition/README.md)                                 |          Chris          |
| 21  |         [Banking App](/7-bank-project/solution/README.md)          |                 HTML Templates and Routes in a Web App                 | Learn how to create the scaffold of a multipage website&#039;s architecture using routing and HTML templates                             |                            [HTML Templates and Routes](/7-bank-project/1-template-route/README.md)                             |          Yohan          |
| 22  |         [Banking App](/7-bank-project/solution/README.md)          |                  Build a Login and Registration Form                   | Learn about building forms and handling validation routines                                                                          |                                           [Forms](/7-bank-project/2-forms/README.md)                                           |          Yohan          |
| 23  |         [Banking App](/7-bank-project/solution/README.md)          |                   Methods of Fetching and Using Data                   | How data flows in and out of your app, how to fetch it, store it, and dispose of it                                                 |                                            [Data](/7-bank-project/3-data/README.md)                                            |          Yohan          |
| 24  |         [Banking App](/7-bank-project/solution/README.md)          |                      Concepts of State Management                      | Learn how your app retains state and how to manage it programmatically                                                              |                                [State Management](/7-bank-project/4-state-management/README.md)                                |          Yohan          |


## 🏫 Pedagogy

Our curriculum is designed with two key pedagogical principles in mind:
* project-based learning
* frequent quizzes

The program teaches the fundamentals of JavaScript, HTML, and CSS, as well as the latest tools and techniques used by today&#039;s web developers. Students will have the opportunity to develop hands-on experience by building a typing game, virtual terrarium, eco-friendly browser extension, space-invader-style game, and a banking app for businesses. By the end of the 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[louislam/uptime-kuma]]></title>
            <link>https://github.com/louislam/uptime-kuma</link>
            <guid>https://github.com/louislam/uptime-kuma</guid>
            <pubDate>Wed, 13 Aug 2025 00:04:36 GMT</pubDate>
            <description><![CDATA[A fancy self-hosted monitoring tool]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/louislam/uptime-kuma">louislam/uptime-kuma</a></h1>
            <p>A fancy self-hosted monitoring tool</p>
            <p>Language: JavaScript</p>
            <p>Stars: 73,133</p>
            <p>Forks: 6,503</p>
            <p>Stars today: 59 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot; width=&quot;100%&quot;&gt;
    &lt;img src=&quot;./public/icon.svg&quot; width=&quot;128&quot; alt=&quot;&quot; /&gt;
&lt;/div&gt;

# Uptime Kuma

Uptime Kuma is an easy-to-use self-hosted monitoring tool.

&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/louislam/uptime-kuma?style=flat&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/louislam/uptime-kuma&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/v/louislam/uptime-kuma/latest?label=docker%20image%20ver.&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/louislam/uptime-kuma&quot; /&gt;&lt;/a&gt;  &lt;a target=&quot;_blank&quot; href=&quot;https://opencollective.com/uptime-kuma&quot;&gt;&lt;img src=&quot;https://opencollective.com/uptime-kuma/total/badge.svg?label=Open%20Collective%20Backers&amp;color=brightgreen&quot; /&gt;&lt;/a&gt;
[![GitHub Sponsors](https://img.shields.io/github/sponsors/louislam?label=GitHub%20Sponsors)](https://github.com/sponsors/louislam) &lt;a href=&quot;https://weblate.kuma.pet/projects/uptime-kuma/uptime-kuma/&quot;&gt;
&lt;img src=&quot;https://weblate.kuma.pet/widgets/uptime-kuma/-/svg-badge.svg&quot; alt=&quot;Translation status&quot; /&gt;
&lt;/a&gt;

&lt;img src=&quot;https://user-images.githubusercontent.com/1336778/212262296-e6205815-ad62-488c-83ec-a5b0d0689f7c.jpg&quot; width=&quot;700&quot; alt=&quot;&quot; /&gt;

## 🥔 Live Demo

Try it!

Demo Server (Location: Frankfurt - Germany): https://demo.kuma.pet/start-demo

It is a temporary live demo, all data will be deleted after 10 minutes. Sponsored by [Uptime Kuma Sponsors](https://github.com/louislam/uptime-kuma#%EF%B8%8F-sponsors).

## ⭐ Features

- Monitoring uptime for HTTP(s) / TCP / HTTP(s) Keyword / HTTP(s) Json Query / Ping / DNS Record / Push / Steam Game Server / Docker Containers
- Fancy, Reactive, Fast UI/UX
- Notifications via Telegram, Discord, Gotify, Slack, Pushover, Email (SMTP), and [90+ notification services, click here for the full list](https://github.com/louislam/uptime-kuma/tree/master/src/components/notifications)
- 20-second intervals
- [Multi Languages](https://github.com/louislam/uptime-kuma/tree/master/src/lang)
- Multiple status pages
- Map status pages to specific domains
- Ping chart
- Certificate info
- Proxy support
- 2FA support

## 🔧 How to Install

### 🐳 Docker

```bash
docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
```

Uptime Kuma is now running on &lt;http://0.0.0.0:3001&gt;.

&gt; [!WARNING]
&gt; File Systems like **NFS** (Network File System) are **NOT** supported. Please map to a local directory or volume.

&gt; [!NOTE]
&gt; If you want to limit exposure to localhost (without exposing port for other users or to use a [reverse proxy](https://github.com/louislam/uptime-kuma/wiki/Reverse-Proxy)), you can expose the port like this:
&gt; 
&gt; ```bash
&gt; docker run -d --restart=always -p 127.0.0.1:3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
&gt; ```

### 💪🏻 Non-Docker

Requirements:

- Platform
  - ✅ Major Linux distros such as Debian, Ubuntu, CentOS, Fedora and ArchLinux etc.
  - ✅ Windows 10 (x64), Windows Server 2012 R2 (x64) or higher
  - ❌ FreeBSD / OpenBSD / NetBSD
  - ❌ Replit / Heroku
- [Node.js](https://nodejs.org/en/download/) 18 / 20.4
- [npm](https://docs.npmjs.com/cli/) 9
- [Git](https://git-scm.com/downloads)
- [pm2](https://pm2.keymetrics.io/) - For running Uptime Kuma in the background

```bash
git clone https://github.com/louislam/uptime-kuma.git
cd uptime-kuma
npm run setup

# Option 1. Try it
node server/server.js

# (Recommended) Option 2. Run in the background using PM2
# Install PM2 if you don&#039;t have it:
npm install pm2 -g &amp;&amp; pm2 install pm2-logrotate

# Start Server
pm2 start server/server.js --name uptime-kuma
```

Uptime Kuma is now running on http://localhost:3001

More useful PM2 Commands

```bash
# If you want to see the current console output
pm2 monit

# If you want to add it to startup
pm2 save &amp;&amp; pm2 startup
```

### Advanced Installation

If you need more options or need to browse via a reverse proxy, please read:

https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install

## 🆙 How to Update

Please read:

https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update

## 🆕 What&#039;s Next?

I will assign requests/issues to the next milestone.

https://github.com/louislam/uptime-kuma/milestones

## ❤️ Sponsors

Thank you so much! (GitHub Sponsors will be updated manually. OpenCollective sponsors will be updated automatically, the list will be cached by GitHub though. It may need some time to be updated)

&lt;img src=&quot;https://uptime.kuma.pet/sponsors?v=6&quot; alt /&gt;

## 🖼 More Screenshots

Light Mode:

&lt;img src=&quot;https://uptime.kuma.pet/img/light.jpg&quot; width=&quot;512&quot; alt=&quot;&quot; /&gt;

Status Page:

&lt;img src=&quot;https://user-images.githubusercontent.com/1336778/134628766-a3fe0981-0926-4285-ab46-891a21c3e4cb.png&quot; width=&quot;512&quot; alt=&quot;&quot; /&gt;

Settings Page:

&lt;img src=&quot;https://louislam.net/uptimekuma/2.jpg&quot; width=&quot;400&quot; alt=&quot;&quot; /&gt;

Telegram Notification Sample:

&lt;img src=&quot;https://louislam.net/uptimekuma/3.jpg&quot; width=&quot;400&quot; alt=&quot;&quot; /&gt;

## Motivation

- I was looking for a self-hosted monitoring tool like &quot;Uptime Robot&quot;, but it is hard to find a suitable one. One of the closest ones is statping. Unfortunately, it is not stable and no longer maintained.
- Wanted to build a fancy UI.
- Learn Vue 3 and vite.js.
- Show the power of Bootstrap 5.
- Try to use WebSocket with SPA instead of a REST API.
- Deploy my first Docker image to Docker Hub.

If you love this project, please consider giving it a ⭐.

## 🗣️ Discussion / Ask for Help

⚠️ For any general or technical questions, please don&#039;t send me an email, as I am unable to provide support in that manner. I will not respond if you ask questions there.

I recommend using Google, GitHub Issues, or Uptime Kuma&#039;s subreddit for finding answers to your question. If you cannot find the information you need, feel free to ask:

- [GitHub Issues](https://github.com/louislam/uptime-kuma/issues)
- [Subreddit (r/UptimeKuma)](https://www.reddit.com/r/UptimeKuma/)

My Reddit account: [u/louislamlam](https://reddit.com/u/louislamlam)
You can mention me if you ask a question on the subreddit.

## Contributions

### Create Pull Requests

We DO NOT accept all types of pull requests and do not want to waste your time. Please be sure that you have read and follow pull request rules:
[CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma](https://github.com/louislam/uptime-kuma/blob/master/CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma)

### Test Pull Requests

There are a lot of pull requests right now, but I don&#039;t have time to test them all.

If you want to help, you can check this:
https://github.com/louislam/uptime-kuma/wiki/Test-Pull-Requests

### Test Beta Version

Check out the latest beta release here: https://github.com/louislam/uptime-kuma/releases

### Bug Reports / Feature Requests

If you want to report a bug or request a new feature, feel free to open a [new issue](https://github.com/louislam/uptime-kuma/issues).

### Translations

If you want to translate Uptime Kuma into your language, please visit [Weblate Readme](https://github.com/louislam/uptime-kuma/blob/master/src/lang/README.md).

### Spelling &amp; Grammar

Feel free to correct the grammar in the documentation or code.
My mother language is not English and my grammar is not that great.


</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[eyaltoledano/claude-task-master]]></title>
            <link>https://github.com/eyaltoledano/claude-task-master</link>
            <guid>https://github.com/eyaltoledano/claude-task-master</guid>
            <pubDate>Wed, 13 Aug 2025 00:04:35 GMT</pubDate>
            <description><![CDATA[An AI-powered task-management system you can drop into Cursor, Lovable, Windsurf, Roo, and others.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/eyaltoledano/claude-task-master">eyaltoledano/claude-task-master</a></h1>
            <p>An AI-powered task-management system you can drop into Cursor, Lovable, Windsurf, Roo, and others.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 20,429</p>
            <p>Forks: 2,003</p>
            <p>Stars today: 74 stars today</p>
            <h2>README</h2><pre># Task Master [![GitHub stars](https://img.shields.io/github/stars/eyaltoledano/claude-task-master?style=social)](https://github.com/eyaltoledano/claude-task-master/stargazers)

[![CI](https://github.com/eyaltoledano/claude-task-master/actions/workflows/ci.yml/badge.svg)](https://github.com/eyaltoledano/claude-task-master/actions/workflows/ci.yml) [![npm version](https://badge.fury.io/js/task-master-ai.svg)](https://badge.fury.io/js/task-master-ai) [![Discord](https://dcbadge.limes.pink/api/server/https://discord.gg/taskmasterai?style=flat)](https://discord.gg/taskmasterai) [![License: MIT with Commons Clause](https://img.shields.io/badge/license-MIT%20with%20Commons%20Clause-blue.svg)](LICENSE)

[![NPM Downloads](https://img.shields.io/npm/d18m/task-master-ai?style=flat)](https://www.npmjs.com/package/task-master-ai) [![NPM Downloads](https://img.shields.io/npm/dm/task-master-ai?style=flat)](https://www.npmjs.com/package/task-master-ai) [![NPM Downloads](https://img.shields.io/npm/dw/task-master-ai?style=flat)](https://www.npmjs.com/package/task-master-ai)

## By [@eyaltoledano](https://x.com/eyaltoledano), [@RalphEcom](https://x.com/RalphEcom) &amp; [@jasonzhou1993](https://x.com/jasonzhou1993)

[![Twitter Follow](https://img.shields.io/twitter/follow/eyaltoledano)](https://x.com/eyaltoledano)
[![Twitter Follow](https://img.shields.io/twitter/follow/RalphEcom)](https://x.com/RalphEcom)
[![Twitter Follow](https://img.shields.io/twitter/follow/jasonzhou1993)](https://x.com/jasonzhou1993)

A task management system for AI-driven development with Claude, designed to work seamlessly with Cursor AI.

## Documentation

📚 **[View Full Documentation](https://docs.task-master.dev)**

For detailed guides, API references, and comprehensive examples, visit our documentation site.

### Quick Reference

The following documentation is also available in the `docs` directory:

- [Configuration Guide](docs/configuration.md) - Set up environment variables and customize Task Master
- [Tutorial](docs/tutorial.md) - Step-by-step guide to getting started with Task Master
- [Command Reference](docs/command-reference.md) - Complete list of all available commands
- [Task Structure](docs/task-structure.md) - Understanding the task format and features
- [Example Interactions](docs/examples.md) - Common Cursor AI interaction examples
- [Migration Guide](docs/migration-guide.md) - Guide to migrating to the new project structure

#### Quick Install for Cursor 1.0+ (One-Click)

[![Add task-master-ai MCP server to Cursor](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/install-mcp?name=task-master-ai&amp;config=eyJjb21tYW5kIjoibnB4IC15IC0tcGFja2FnZT10YXNrLW1hc3Rlci1haSB0YXNrLW1hc3Rlci1haSIsImVudiI6eyJBTlRIUk9QSUNfQVBJX0tFWSI6IllPVVJfQU5USFJPUElDX0FQSV9LRVlfSEVSRSIsIlBFUlBMRVhJVFlfQVBJX0tFWSI6IllPVVJfUEVSUExFWElUWV9BUElfS0VZX0hFUkUiLCJPUEVOQUlfQVBJX0tFWSI6IllPVVJfT1BFTkFJX0tFWV9IRVJFIiwiR09PR0xFX0FQSV9LRVkiOiJZT1VSX0dPT0dMRV9LRVlfSEVSRSIsIk1JU1RSQUxfQVBJX0tFWSI6IllPVVJfTUlTVFJBTF9LRVlfSEVSRSIsIkdST1FfQVBJX0tFWSI6IllPVVJfR1JPUV9LRVlfSEVSRSIsIk9QRU5ST1VURVJfQVBJX0tFWSI6IllPVVJfT1BFTlJPVVRFUl9LRVlfSEVSRSIsIlhBSV9BUElfS0VZIjoiWU9VUl9YQUlfS0VZX0hFUkUiLCJBWlVSRV9PUEVOQUlfQVBJX0tFWSI6IllPVVJfQVpVUkVfS0VZX0hFUkUiLCJPTExBTUFfQVBJX0tFWSI6IllPVVJfT0xMQU1BX0FQSV9LRVlfSEVSRSJ9fQ%3D%3D)

&gt; **Note:** After clicking the link, you&#039;ll still need to add your API keys to the configuration. The link installs the MCP server with placeholder keys that you&#039;ll need to replace with your actual API keys.

## Requirements

Taskmaster utilizes AI across several commands, and those require a separate API key. You can use a variety of models from different AI providers provided you add your API keys. For example, if you want to use Claude 3.7, you&#039;ll need an Anthropic API key.

You can define 3 types of models to be used: the main model, the research model, and the fallback model (in case either the main or research fail). Whatever model you use, its provider API key must be present in either mcp.json or .env.

At least one (1) of the following is required:

- Anthropic API key (Claude API)
- OpenAI API key
- Google Gemini API key
- Perplexity API key (for research model)
- xAI API Key (for research or main model)
- OpenRouter API Key (for research or main model)
- Claude Code (no API key required - requires Claude Code CLI)

Using the research model is optional but highly recommended. You will need at least ONE API key (unless using Claude Code). Adding all API keys enables you to seamlessly switch between model providers at will.

## Quick Start

### Option 1: MCP (Recommended)

MCP (Model Control Protocol) lets you run Task Master directly from your editor.

#### 1. Add your MCP config at the following path depending on your editor

| Editor       | Scope   | Linux/macOS Path                      | Windows Path                                      | Key          |
| ------------ | ------- | ------------------------------------- | ------------------------------------------------- | ------------ |
| **Cursor**   | Global  | `~/.cursor/mcp.json`                  | `%USERPROFILE%\.cursor\mcp.json`                  | `mcpServers` |
|              | Project | `&lt;project_folder&gt;/.cursor/mcp.json`   | `&lt;project_folder&gt;\.cursor\mcp.json`               | `mcpServers` |
| **Windsurf** | Global  | `~/.codeium/windsurf/mcp_config.json` | `%USERPROFILE%\.codeium\windsurf\mcp_config.json` | `mcpServers` |
| **VS Code**  | Project | `&lt;project_folder&gt;/.vscode/mcp.json`   | `&lt;project_folder&gt;\.vscode\mcp.json`               | `servers`    |

##### Manual Configuration

###### Cursor &amp; Windsurf (`mcpServers`)

```json
{
  &quot;mcpServers&quot;: {
    &quot;task-master-ai&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;--package=task-master-ai&quot;, &quot;task-master-ai&quot;],
      &quot;env&quot;: {
        &quot;ANTHROPIC_API_KEY&quot;: &quot;YOUR_ANTHROPIC_API_KEY_HERE&quot;,
        &quot;PERPLEXITY_API_KEY&quot;: &quot;YOUR_PERPLEXITY_API_KEY_HERE&quot;,
        &quot;OPENAI_API_KEY&quot;: &quot;YOUR_OPENAI_KEY_HERE&quot;,
        &quot;GOOGLE_API_KEY&quot;: &quot;YOUR_GOOGLE_KEY_HERE&quot;,
        &quot;MISTRAL_API_KEY&quot;: &quot;YOUR_MISTRAL_KEY_HERE&quot;,
        &quot;GROQ_API_KEY&quot;: &quot;YOUR_GROQ_KEY_HERE&quot;,
        &quot;OPENROUTER_API_KEY&quot;: &quot;YOUR_OPENROUTER_KEY_HERE&quot;,
        &quot;XAI_API_KEY&quot;: &quot;YOUR_XAI_KEY_HERE&quot;,
        &quot;AZURE_OPENAI_API_KEY&quot;: &quot;YOUR_AZURE_KEY_HERE&quot;,
        &quot;OLLAMA_API_KEY&quot;: &quot;YOUR_OLLAMA_API_KEY_HERE&quot;
      }
    }
  }
}
```

&gt; 🔑 Replace `YOUR_…_KEY_HERE` with your real API keys. You can remove keys you don&#039;t use.

&gt; **Note**: If you see `0 tools enabled` in the MCP settings, try removing the `--package=task-master-ai` flag from `args`.

###### VS Code (`servers` + `type`)

```json
{
  &quot;servers&quot;: {
    &quot;task-master-ai&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;--package=task-master-ai&quot;, &quot;task-master-ai&quot;],
      &quot;env&quot;: {
        &quot;ANTHROPIC_API_KEY&quot;: &quot;YOUR_ANTHROPIC_API_KEY_HERE&quot;,
        &quot;PERPLEXITY_API_KEY&quot;: &quot;YOUR_PERPLEXITY_API_KEY_HERE&quot;,
        &quot;OPENAI_API_KEY&quot;: &quot;YOUR_OPENAI_KEY_HERE&quot;,
        &quot;GOOGLE_API_KEY&quot;: &quot;YOUR_GOOGLE_KEY_HERE&quot;,
        &quot;MISTRAL_API_KEY&quot;: &quot;YOUR_MISTRAL_KEY_HERE&quot;,
        &quot;GROQ_API_KEY&quot;: &quot;YOUR_GROQ_KEY_HERE&quot;,
        &quot;OPENROUTER_API_KEY&quot;: &quot;YOUR_OPENROUTER_KEY_HERE&quot;,
        &quot;XAI_API_KEY&quot;: &quot;YOUR_XAI_KEY_HERE&quot;,
        &quot;AZURE_OPENAI_API_KEY&quot;: &quot;YOUR_AZURE_KEY_HERE&quot;,
        &quot;OLLAMA_API_KEY&quot;: &quot;YOUR_OLLAMA_API_KEY_HERE&quot;
      },
      &quot;type&quot;: &quot;stdio&quot;
    }
  }
}
```

&gt; 🔑 Replace `YOUR_…_KEY_HERE` with your real API keys. You can remove keys you don&#039;t use.

#### 2. (Cursor-only) Enable Taskmaster MCP

Open Cursor Settings (Ctrl+Shift+J) ➡ Click on MCP tab on the left ➡ Enable task-master-ai with the toggle

#### 3. (Optional) Configure the models you want to use

In your editor&#039;s AI chat pane, say:

```txt
Change the main, research and fallback models to &lt;model_name&gt;, &lt;model_name&gt; and &lt;model_name&gt; respectively.
```

For example, to use Claude Code (no API key required):
```txt
Change the main model to claude-code/sonnet
```

[Table of available models](docs/models.md) | [Claude Code setup](docs/examples/claude-code-usage.md)

#### 4. Initialize Task Master

In your editor&#039;s AI chat pane, say:

```txt
Initialize taskmaster-ai in my project
```

#### 5. Make sure you have a PRD (Recommended)

For **new projects**: Create your PRD at `.taskmaster/docs/prd.txt`  
For **existing projects**: You can use `scripts/prd.txt` or migrate with `task-master migrate`

An example PRD template is available after initialization in `.taskmaster/templates/example_prd.txt`.

&gt; [!NOTE]
&gt; While a PRD is recommended for complex projects, you can always create individual tasks by asking &quot;Can you help me implement [description of what you want to do]?&quot; in chat.

**Always start with a detailed PRD.**

The more detailed your PRD, the better the generated tasks will be.

#### 6. Common Commands

Use your AI assistant to:

- Parse requirements: `Can you parse my PRD at scripts/prd.txt?`
- Plan next step: `What&#039;s the next task I should work on?`
- Implement a task: `Can you help me implement task 3?`
- View multiple tasks: `Can you show me tasks 1, 3, and 5?`
- Expand a task: `Can you help me expand task 4?`
- **Research fresh information**: `Research the latest best practices for implementing JWT authentication with Node.js`
- **Research with context**: `Research React Query v5 migration strategies for our current API implementation in src/api.js`

[More examples on how to use Task Master in chat](docs/examples.md)

### Option 2: Using Command Line

#### Installation

```bash
# Install globally
npm install -g task-master-ai

# OR install locally within your project
npm install task-master-ai
```

#### Initialize a new project

```bash
# If installed globally
task-master init

# If installed locally
npx task-master init

# Initialize project with specific rules
task-master init --rules cursor,windsurf,vscode
```

This will prompt you for project details and set up a new project with the necessary files and structure.

#### Common Commands

```bash
# Initialize a new project
task-master init

# Parse a PRD and generate tasks
task-master parse-prd your-prd.txt

# List all tasks
task-master list

# Show the next task to work on
task-master next

# Show specific task(s) - supports comma-separated IDs
task-master show 1,3,5

# Research fresh information with project context
task-master research &quot;What are the latest best practices for JWT authentication?&quot;

# Generate task files
task-master generate

# Add rules after initialization
task-master rules add windsurf,roo,vscode
```

## Claude Code Support

Task Master now supports Claude models through the Claude Code CLI, which requires no API key:

- **Models**: `claude-code/opus` and `claude-code/sonnet`
- **Requirements**: Claude Code CLI installed
- **Benefits**: No API key needed, uses your local Claude instance

[Learn more about Claude Code setup](docs/examples/claude-code-usage.md)

## Troubleshooting

### If `task-master init` doesn&#039;t respond

Try running it with Node directly:

```bash
node node_modules/claude-task-master/scripts/init.js
```

Or clone the repository and run:

```bash
git clone https://github.com/eyaltoledano/claude-task-master.git
cd claude-task-master
node scripts/init.js
```

## Contributors

&lt;a href=&quot;https://github.com/eyaltoledano/claude-task-master/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=eyaltoledano/claude-task-master&quot; alt=&quot;Task Master project contributors&quot; /&gt;
&lt;/a&gt;

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=eyaltoledano/claude-task-master&amp;type=Timeline)](https://www.star-history.com/#eyaltoledano/claude-task-master&amp;Timeline)

## Licensing

Task Master is licensed under the MIT License with Commons Clause. This means you can:

✅ **Allowed**:

- Use Task Master for any purpose (personal, commercial, academic)
- Modify the code
- Distribute copies
- Create and sell products built using Task Master

❌ **Not Allowed**:

- Sell Task Master itself
- Offer Task Master as a hosted service
- Create competing products based on Task Master

See the [LICENSE](LICENSE) file for the complete license text and [licensing details](docs/licensing.md) for more information.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[webpack/webpack]]></title>
            <link>https://github.com/webpack/webpack</link>
            <guid>https://github.com/webpack/webpack</guid>
            <pubDate>Wed, 13 Aug 2025 00:04:34 GMT</pubDate>
            <description><![CDATA[A bundler for javascript and friends. Packs many modules into a few bundled assets. Code Splitting allows for loading parts of the application on demand. Through "loaders", modules can be CommonJs, AMD, ES6 modules, CSS, Images, JSON, Coffeescript, LESS, ... and your custom stuff.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/webpack/webpack">webpack/webpack</a></h1>
            <p>A bundler for javascript and friends. Packs many modules into a few bundled assets. Code Splitting allows for loading parts of the application on demand. Through "loaders", modules can be CommonJs, AMD, ES6 modules, CSS, Images, JSON, Coffeescript, LESS, ... and your custom stuff.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 65,469</p>
            <p>Forks: 9,090</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/webpack/webpack&quot;&gt;
    &lt;img width=&quot;200&quot; height=&quot;200&quot; src=&quot;https://webpack.js.org/assets/icon-square-big.svg&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;br&gt;

[![npm][npm]][npm-url]

[![node][node]][node-url]
[![builds1][builds1]][builds1-url]
[![dependency-review][dependency-review]][dependency-review-url]
[![coverage][cover]][cover-url]
[![PR&#039;s welcome][prs]][prs-url]
[![compatibility-score](https://api.dependabot.com/badges/compatibility_score?dependency-name=webpack&amp;package-manager=npm_and_yarn&amp;previous-version=5.72.1&amp;new-version=5.73.0)](https://docs.github.com/en/code-security/dependabot/dependabot-security-updates/about-dependabot-security-updates#about-compatibility-scores)
[![downloads](https://img.shields.io/npm/dm/webpack.svg)](https://npmcharts.com/compare/webpack?minimal=true)
[![install-size](https://packagephobia.com/badge?p=webpack)](https://packagephobia.com/result?p=webpack)
[![backers](https://opencollective.com/webpack/backers/badge.svg)](https://opencollective.com/webpack#backer)
[![sponsors](https://opencollective.com/webpack/sponsors/badge.svg)](https://opencollective.com/webpack#sponsors)
[![contributors](https://img.shields.io/github/contributors/webpack/webpack.svg)](https://github.com/webpack/webpack/graphs/contributors)
[![discussions](https://img.shields.io/github/discussions/webpack/webpack)](https://github.com/webpack/webpack/discussions)
[![discord](https://img.shields.io/discord/1180618526436888586?label=discord&amp;logo=discord&amp;logoColor=white&amp;style=flat)](https://discord.gg/5sxFZPdx2k)

  &lt;h1&gt;webpack&lt;/h1&gt;
  &lt;p&gt;
    Webpack is a module bundler. Its main purpose is to bundle JavaScript files for usage in a browser, yet it is also capable of transforming, bundling, or packaging just about any resource or asset.
  &lt;/p&gt;
&lt;/div&gt;

## Table of Contents

- [Install](#install)
- [Introduction](#introduction)
- [Concepts](#concepts)
- [Contributing](#contributing)
- [Support](#support)
- [Current project members](#current-project-members)
  - [TSC (Technical Steering Committee)](#tsc-technical-steering-committee)
  - [Core Collaborators](#core-collaborators)
- [Sponsoring](#sponsoring)
  - [Premium Partners](#premium-partners)
  - [Gold Sponsors](#gold-sponsors)
  - [Silver Sponsors](#silver-sponsors)
  - [Bronze Sponsors](#bronze-sponsors)
  - [Backers](#backers)
- [Special Thanks](#special-thanks-to)

&lt;h2&gt;Install&lt;/h2&gt;

Install with npm:

```bash
npm install --save-dev webpack
```

Install with yarn:

```bash
yarn add webpack --dev
```

&lt;h2&gt;Introduction&lt;/h2&gt;

Webpack is a bundler for modules. The main purpose is to bundle JavaScript
files for usage in a browser, yet it is also capable of transforming, bundling,
or packaging just about any resource or asset.

**TL;DR**

- Bundles [ES Modules](https://www.2ality.com/2014/09/es6-modules-final.html), [CommonJS](http://wiki.commonjs.org/), and [AMD](https://github.com/amdjs/amdjs-api/wiki/AMD) modules (even combined).
- Can create a single bundle or multiple chunks that are asynchronously loaded at runtime (to reduce initial loading time).
- Dependencies are resolved during compilation, reducing the runtime size.
- Loaders can preprocess files while compiling, e.g. TypeScript to JavaScript, Handlebars strings to compiled functions, images to Base64, etc.
- Highly modular plugin system to do whatever else your application requires.

#### Learn about webpack through videos!

- [Understanding Webpack - Video 1](https://www.youtube.com/watch?v=xj93pvQIsRo)
- [Understanding Webpack - Video 2](https://www.youtube.com/watch?v=4tQiJaFzuJ8)

### Get Started

Check out webpack&#039;s quick [**Get Started**](https://webpack.js.org/guides/getting-started) guide and the [other guides](https://webpack.js.org/guides/).

### Browser Compatibility

Webpack supports all browsers that are [ES5-compliant](https://kangax.github.io/compat-table/es5/) (IE8 and below are not supported).
Webpack also needs `Promise` for `import()` and `require.ensure()`. If you want to support older browsers, you will need to [load a polyfill](https://webpack.js.org/guides/shimming/) before using these expressions.

&lt;h2&gt;Concepts&lt;/h2&gt;

### [Plugins](https://webpack.js.org/plugins/)

Webpack has a [rich plugin
interface](https://webpack.js.org/plugins/). Most of the features
within webpack itself use this plugin interface. This makes webpack very
**flexible**.

|                   Name                    |       Status       |    Install Size     | Description                                                                             |
| :---------------------------------------: | :----------------: | :-----------------: | :-------------------------------------------------------------------------------------- |
|    [mini-css-extract-plugin][mini-css]    |  ![mini-css-npm]   |  ![mini-css-size]   | Extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. |
| [compression-webpack-plugin][compression] | ![compression-npm] | ![compression-size] | Prepares compressed versions of assets to serve them with Content-Encoding              |
|  [html-bundler-webpack-plugin][bundler]   |   ![bundler-npm]   |   ![bundler-size]   | Renders a template (EJS, Handlebars, Pug) with referenced source asset files into HTML. |
|    [html-webpack-plugin][html-plugin]     | ![html-plugin-npm] | ![html-plugin-size] | Simplifies creation of HTML files (`index.html`) to serve your bundles                  |
|         [pug-plugin][pug-plugin]          | ![pug-plugin-npm]  | ![pug-plugin-size]  | Renders Pug files to HTML, extracts JS and CSS from sources specified directly in Pug.  |

[common-npm]: https://img.shields.io/npm/v/webpack.svg
[mini-css]: https://github.com/webpack-contrib/mini-css-extract-plugin
[mini-css-npm]: https://img.shields.io/npm/v/mini-css-extract-plugin.svg
[mini-css-size]: https://packagephobia.com/badge?p=mini-css-extract-plugin
[component]: https://github.com/webpack-contrib/component-webpack-plugin
[component-npm]: https://img.shields.io/npm/v/component-webpack-plugin.svg
[component-size]: https://packagephobia.com/badge?p=component-webpack-plugin
[compression]: https://github.com/webpack-contrib/compression-webpack-plugin
[compression-npm]: https://img.shields.io/npm/v/compression-webpack-plugin.svg
[compression-size]: https://packagephobia.com/badge?p=compression-webpack-plugin
[bundler]: https://github.com/webdiscus/html-bundler-webpack-plugin
[bundler-npm]: https://img.shields.io/npm/v/html-bundler-webpack-plugin.svg
[bundler-size]: https://packagephobia.com/badge?p=html-bundler-webpack-plugin
[html-plugin]: https://github.com/jantimon/html-webpack-plugin
[html-plugin-npm]: https://img.shields.io/npm/v/html-webpack-plugin.svg
[html-plugin-size]: https://packagephobia.com/badge?p=html-webpack-plugin
[pug-plugin]: https://github.com/webdiscus/pug-plugin
[pug-plugin-npm]: https://img.shields.io/npm/v/pug-plugin.svg
[pug-plugin-size]: https://packagephobia.com/badge?p=pug-plugin

### [Loaders](https://webpack.js.org/loaders/)

Webpack enables the use of loaders to preprocess files. This allows you to bundle
**any static resource** way beyond JavaScript. You can easily [write your own
loaders](https://webpack.js.org/api/loaders/) using Node.js.

Loaders are activated by using `loadername!` prefixes in `require()` statements,
or are automatically applied via regex from your webpack configuration.

#### JSON

|                                                                   Name                                                                    |   Status    | Install Size |           Description            |
| :---------------------------------------------------------------------------------------------------------------------------------------: | :---------: | :----------: | :------------------------------: |
| &lt;a href=&quot;https://github.com/awnist/cson-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/coffeescript.svg&quot;&gt;&lt;/a&gt; | ![cson-npm] | ![cson-size] | Loads and transpiles a CSON file |

[cson-npm]: https://img.shields.io/npm/v/cson-loader.svg
[cson-size]: https://packagephobia.com/badge?p=cson-loader

#### Transpiling

|                                                                                                                             Name                                                                                                                             |    Status     |  Install Size  | Description                                                                                       |
| :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: | :-----------: | :------------: | :------------------------------------------------------------------------------------------------ |
|                                                  &lt;a href=&quot;https://github.com/babel/babel-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; title=&quot;babel-loader&quot; src=&quot;https://worldvectorlogo.com/logos/babel-10.svg&quot;&gt;&lt;/a&gt;                                                  | ![babel-npm]  | ![babel-size]  | Loads ES2015+ code and transpiles to ES5 using &lt;a href=&quot;https://github.com/babel/babel&quot;&gt;Babel&lt;/a&gt; |
| &lt;a href=&quot;https://github.com/TypeStrong/ts-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://raw.githubusercontent.com/microsoft/TypeScript-Website/f407e1ae19e5e990d9901ac8064a32a8cc60edf0/packages/typescriptlang-org/static/branding/ts-logo-128.svg&quot;&gt;&lt;/a&gt; |  ![type-npm]  |  ![type-size]  | Loads TypeScript like JavaScript                                                                  |
|                                                     &lt;a href=&quot;https://github.com/webpack-contrib/coffee-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/coffeescript.svg&quot;&gt;&lt;/a&gt;                                                     | ![coffee-npm] | ![coffee-size] | Loads CoffeeScript like JavaScript                                                                |

[babel-npm]: https://img.shields.io/npm/v/babel-loader.svg
[babel-size]: https://packagephobia.com/badge?p=babel-loader
[coffee-npm]: https://img.shields.io/npm/v/coffee-loader.svg
[coffee-size]: https://packagephobia.com/badge?p=coffee-loader
[type-npm]: https://img.shields.io/npm/v/ts-loader.svg
[type-size]: https://packagephobia.com/badge?p=ts-loader

#### Templating

|                                                                                   Name                                                                                    |     Status      |   Install Size   | Description                                                                             |
| :-----------------------------------------------------------------------------------------------------------------------------------------------------------------------: | :-------------: | :--------------: | :-------------------------------------------------------------------------------------- |
|               &lt;a href=&quot;https://github.com/webpack-contrib/html-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/html5-2.svg&quot;&gt;&lt;/a&gt;               |   ![html-npm]   |   ![html-size]   | Exports HTML as string, requires references to static resources                         |
|   &lt;a href=&quot;https://github.com/pugjs/pug-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://cdn.rawgit.com/pugjs/pug-logo/master/SVG/pug-final-logo-_-colour-128.svg&quot;&gt;&lt;/a&gt;   |   ![pug-npm]    |   ![pug-size]    | Loads Pug templates and returns a function                                              |
| &lt;a href=&quot;https://github.com/webdiscus/pug-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://cdn.rawgit.com/pugjs/pug-logo/master/SVG/pug-final-logo-_-colour-128.svg&quot;&gt;&lt;/a&gt; |   ![pug3-npm]   |   ![pug3-size]   | Compiles Pug to a function or HTML string, useful for use with Vue, React, Angular      |
|                &lt;a href=&quot;https://github.com/peerigon/markdown-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/markdown.svg&quot;&gt;&lt;/a&gt;                |    ![md-npm]    |    ![md-size]    | Compiles Markdown to HTML                                                               |
|                 &lt;a href=&quot;https://github.com/posthtml/posthtml-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://posthtml.github.io/posthtml/logo.svg&quot;&gt;&lt;/a&gt;                 | ![posthtml-npm] | ![posthtml-size] | Loads and transforms a HTML file using [PostHTML](https://github.com/posthtml/posthtml) |
|             &lt;a href=&quot;https://github.com/pcardune/handlebars-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/handlebars-1.svg&quot;&gt;&lt;/a&gt;             |   ![hbs-npm]    |   ![hbs-size]    | Compiles Handlebars to HTML                                                             |

[html-npm]: https://img.shields.io/npm/v/html-loader.svg
[html-size]: https://packagephobia.com/badge?p=html-loader
[pug-npm]: https://img.shields.io/npm/v/pug-loader.svg
[pug-size]: https://packagephobia.com/badge?p=pug-loader
[pug3-npm]: https://img.shields.io/npm/v/@webdiscus/pug-loader.svg
[pug3-size]: https://packagephobia.com/badge?p=@webdiscus/pug-loader
[jade-npm]: https://img.shields.io/npm/v/jade-loader.svg
[jade-size]: https://packagephobia.com/badge?p=jade-loader
[md-npm]: https://img.shields.io/npm/v/markdown-loader.svg
[md-size]: https://packagephobia.com/badge?p=markdown-loader
[posthtml-npm]: https://img.shields.io/npm/v/posthtml-loader.svg
[posthtml-size]: https://packagephobia.com/badge?p=posthtml-loader
[hbs-npm]: https://img.shields.io/npm/v/handlebars-loader.svg
[hbs-size]: https://packagephobia.com/badge?p=handlebars-loader

#### Styling

|                                                                     Name                                                                      |     Status     |  Install Size   | Description                                                              |
| :-------------------------------------------------------------------------------------------------------------------------------------------: | :------------: | :-------------: | :----------------------------------------------------------------------- |
|                                    &lt;a href=&quot;https://github.com/webpack-contrib/style-loader&quot;&gt;`&lt;style&gt;`&lt;/a&gt;                                    |  ![style-npm]  |  ![style-size]  | Add exports of a module as style to DOM                                  |
|  &lt;a href=&quot;https://github.com/webpack-contrib/css-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/css-3.svg&quot;&gt;&lt;/a&gt;   |   ![css-npm]   |   ![css-size]   | Loads CSS file with resolved imports and returns CSS code                |
| &lt;a href=&quot;https://github.com/webpack-contrib/less-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/less-63.svg&quot;&gt;&lt;/a&gt; |  ![less-npm]   |  ![less-size]   | Loads and compiles a LESS file                                           |
| &lt;a href=&quot;https://github.com/webpack-contrib/sass-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/sass-1.svg&quot;&gt;&lt;/a&gt;  |  ![sass-npm]   |  ![sass-size]   | Loads and compiles a Sass/SCSS file                                      |
|     &lt;a href=&quot;https://github.com/shama/stylus-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/stylus.svg&quot;&gt;&lt;/a&gt;      | ![stylus-npm]  | ![stylus-size]  | Loads and compiles a Stylus file                                         |
|   &lt;a href=&quot;https://github.com/postcss/postcss-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/postcss.svg&quot;&gt;&lt;/a&gt;    | ![postcss-npm] | ![postcss-size] | Loads and transforms a CSS/SSS file using [PostCSS](https://postcss.org) |

[style-npm]: https://img.shields.io/npm/v/style-loader.svg
[style-size]: https://packagephobia.com/badge?p=style-loader
[css-npm]: https://img.shields.io/npm/v/css-loader.svg
[css-size]: https://packagephobia.com/badge?p=css-loader
[less-npm]: https://img.shields.io/npm/v/less-loader.svg
[less-size]: https://packagephobia.com/badge?p=less-loader
[sass-npm]: https://img.shields.io/npm/v/sass-loader.svg
[sass-size]: https://packagephobia.com/badge?p=sass-loader
[stylus-npm]: https://img.shields.io/npm/v/stylus-loader.svg
[stylus-size]: https://packagephobia.com/badge?p=stylus-loader
[postcss-npm]: https://img.shields.io/npm/v/postcss-loader.svg
[postcss-size]: https://packagephobia.com/badge?p=postcss-loader

#### Frameworks

|                                                                             Name                                                                             |     Status     |  Install Size   | Description                                                                                            |
| :----------------------------------------------------------------------------------------------------------------------------------------------------------: | :------------: | :-------------: | :----------------------------------------------------------------------------------------------------- |
|               &lt;a href=&quot;https://github.com/vuejs/vue-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/vue-9.svg&quot;&gt;&lt;/a&gt;               |   ![vue-npm]   |   ![vue-size]   | Loads and compiles Vue Components                                                                      |
|   &lt;a href=&quot;https://github.com/webpack-contrib/polymer-webpack-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/polymer.svg&quot;&gt;&lt;/a&gt;   | ![polymer-npm] | ![polymer-size] | Process HTML &amp; CSS with preprocessor of choice and `require()` Web Components like first-class modules |
| &lt;a href=&quot;https://github.com/TheLarkInn/angular2-template-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/angular-icon-1.svg&quot;&gt;&lt;/a&gt; | ![angular-npm] | ![angular-size] | Loads and compiles Angular 2 Components                                                                |
|              &lt;a href=&quot;https://github.com/riot/webpack-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/riot.svg&quot;&gt;&lt;/a&gt;              |  ![riot-npm]   |  ![riot-size]   | Riot official webpack loader                                                                           |
|          &lt;a href=&quot;https://github.com/sveltejs/svelte-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/svelte-1.svg&quot;&gt;&lt;/a&gt;           | ![svelte-npm]  | ![svelte-size]  | Official Svelte loader                                                                                 |

[vue-npm]: https://img.shields.io/npm/v/vue-loader.svg
[vue-size]: https://packagephobia.com/badge?p=vue-loader
[polymer-npm]: https://img.shields.io/npm/v/polymer-webpack-loader.svg
[polymer-size]: https://packagephobia.com/badge?p=polymer-webpack-loader
[angular-npm]: https://img.shields.io/npm/v/angular2-template-loader.svg
[angular-size]: https://packagephobia.com/badge?p=angular2-template-loader
[riot-npm]: https://img.shields.io/npm/v/riot-tag-loader.svg
[riot-size]: https://packagephobia.com/badge?p=riot-tag-loader
[svelte-npm]: https://img.shields.io/npm/v/svelte-loader.svg
[svelte-size]: https://packagephobia.com/badge?p=svelte-loader

### Performance

Webpack uses async I/O and has multiple caching levels. This makes webpack fast
and incredibly **fast** on incremental compilations.

### Module Formats

Webpack supports ES2015+, CommonJS and AMD modules **out of the box**. It performs clever static
analysis on the AST of your code. It even has an evaluation engine to evaluate
simple expressions. This allows you to **support most existing libraries** out of the box.

### [Code Splitting](https://webpack.js.org/guides/code-splitting/)

Webpack allows you to split your codebase into multiple chunks. Chunks are
loaded asynchronously at runtime. This reduces the initial loading time.

### [Optimizations]

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[dequelabs/axe-core]]></title>
            <link>https://github.com/dequelabs/axe-core</link>
            <guid>https://github.com/dequelabs/axe-core</guid>
            <pubDate>Wed, 13 Aug 2025 00:04:33 GMT</pubDate>
            <description><![CDATA[Accessibility engine for automated Web UI testing]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/dequelabs/axe-core">dequelabs/axe-core</a></h1>
            <p>Accessibility engine for automated Web UI testing</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,545</p>
            <p>Forks: 837</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre># axe-core

[![License](https://img.shields.io/npm/l/axe-core.svg?color=c41)](LICENSE)
[![Version](https://img.shields.io/npm/v/axe-core.svg)](https://www.npmjs.com/package/axe-core)
[![NPM downloads](https://img.shields.io/npm/dw/axe-core.svg?color=080)![](https://img.shields.io/npm/dy/axe-core.svg?color=080&amp;label=)](https://npm-stat.com/charts.html?package=axe-core&amp;from=2017-01-01)
[![Commits](https://img.shields.io/github/commit-activity/y/dequelabs/axe-core.svg)](https://github.com/dequelabs/axe-core/commits/develop)
[![GitHub contributors](https://img.shields.io/github/contributors/dequelabs/axe-core.svg?color=080)](https://github.com/dequelabs/axe-core/graphs/contributors)
[![Join our Slack chat](https://img.shields.io/badge/slack-chat-purple.svg?logo=slack)](https://accessibility.deque.com/axe-community)
[![Package Quality](https://npm.packagequality.com/shield/axe-core.svg)](https://packagequality.com/#?package=axe-core)

Axe is an accessibility testing engine for websites and other HTML-based user interfaces. It&#039;s fast, secure, lightweight, and was built to seamlessly integrate with any existing test environment so you can automate accessibility testing alongside your regular functional testing.

[Sign up for axe news](https://hubs.ly/H0fsN0b0) to get the latest on axe features, future releases, and events.

## The Accessibility Rules

Axe-core has different types of rules, for WCAG 2.0, 2.1, 2.2 on level A, AA and AAA as well as a number of best practices that help you identify common accessibility practices like ensuring every page has an `h1` heading, and to help you avoid &quot;gotchas&quot; in ARIA like where an ARIA attribute you used will get ignored. The complete list of rules, grouped WCAG level and best practice, can be found in [doc/rule-descriptions.md](./doc/rule-descriptions.md).

With axe-core, you can find **on average 57% of WCAG issues automatically**. Additionally, axe-core will return elements as &quot;incomplete&quot; where axe-core could not be certain, and manual review is needed.

To catch bugs earlier in the development cycle we recommend using the [axe-linter vscode extension](https://marketplace.visualstudio.com/items?itemName=deque-systems.vscode-axe-linter). To improve test coverage even further we recommend the [intelligent guided tests](https://www.youtube.com/watch?v=AtsX0dPCG_4&amp;feature=youtu.be&amp;ab_channel=DequeSystems) in the [axe Extension](https://www.deque.com/axe/browser-extensions/).

## Getting started

First download the package:

```console
npm install axe-core --save-dev
```

Now include the javascript file in each of your iframes in your fixtures or test systems:

```html
&lt;script src=&quot;node_modules/axe-core/axe.min.js&quot;&gt;&lt;/script&gt;
```

Now insert calls at each point in your tests where a new piece of UI becomes visible or exposed:

```js
axe
  .run()
  .then(results =&gt; {
    if (results.violations.length) {
      throw new Error(&#039;Accessibility issues found&#039;);
    }
  })
  .catch(err =&gt; {
    console.error(&#039;Something bad happened:&#039;, err.message);
  });
```

## Philosophy

The web can only become an accessible, inclusive space if developers are empowered to take responsibility for accessibility testing and accessible coding practices.

Automated accessibility testing is a huge timesaver, it doesn&#039;t require special expertise, and it allows teams to focus expert resources on the accessibility issues that really need them. Unfortunately, most accessibility tools are meant to be run on sites and applications that have reached the end of the development process and often don&#039;t give clear or consistent results, causing frustration and delays just when you thought your product was ready to ship.

Axe was built to reflect how web development actually works. It works with all modern browsers, tools, and testing environments a dev team might use. With axe, accessibility testing can be performed as part of your unit testing, integration testing, browser testing, and any other functional testing your team already performs on a day-to-day basis. Building accessibility testing into the early development process saves time, resources, and all kinds of frustration.

## About axe - our Manifesto

- Axe is open source.
- It returns zero false positives (bugs notwithstanding).
- It&#039;s designed to work on all modern browsers and with whatever tools, frameworks, libraries and environments you use today.
- It&#039;s actively supported by [Deque Systems](https://www.deque.com), a major accessibility vendor.
- It integrates with your existing functional/acceptance automated tests.
- It automatically determines which rules to run based on the evaluation context.
- Axe supports in-memory fixtures, static fixtures, integration tests, and iframes of infinite depth.
- Axe is highly configurable.

## Supported Browsers

The [axe-core API](doc/API.md) fully supports the following browsers:

- Microsoft Edge v40 and above
- Google Chrome v42 and above
- Mozilla Firefox v38 and above
- Apple Safari v7 and above
- Internet Explorer v11 (DEPRECATED)

Support means that we will fix bugs and attempt to test each browser regularly. Only Chrome and Firefox are currently tested on every pull request.

There is limited support for JSDOM. We will attempt to make all rules compatible with JSDOM but where this is not possible, we recommend turning those rules off. Currently the `color-contrast` rule is known not to work with JSDOM.

We can only support environments where features are either natively supported or polyfilled correctly. We do not support the deprecated v0 Shadow DOM implementation.

## Contents of the API Package

The [axe-core API](doc/API.md) package consists of:

- `axe.js` - the JavaScript file that should be included in your web site under test (API)
- `axe.min.js` - a minified version of the above file

## Localization

Axe can be built using your local language. To do so, a localization file must be added to the `./locales` directory. This file must be named in the following manner: `&lt;langcode&gt;.json`. To build axe using this locale, instead of the default, run axe with the `--lang` flag, like so:

`grunt build --lang=nl`

or equivalently:

`npm run build -- --lang=nl`

This will create a new build for axe, called `axe.&lt;lang&gt;.js` and `axe.&lt;lang&gt;.min.js`. If you want to build all localized versions, simply pass in `--all-lang` instead. If you want to build multiple localized versions (but not all of them), you can pass in a comma-separated list of languages to the `--lang` flag, like `--lang=nl,ja`.

To create a new translation for axe, start by running `grunt translate --lang=&lt;langcode&gt;`. This will create a json file in the `./locales` directory, with the default English text in it for you to translate. Alternatively, you could copy `./locales/_template.json`. We welcome any localization for axe-core. For details on how to contribute, see the Contributing section below. For details on the message syntax, see [Check Message Template](/doc/check-message-template.md).

To update an existing translation file, re-run `grunt translate --lang=&lt;langcode&gt;`. This will add new messages used in English and remove messages which were not used in English.

Additionally, locale can be applied at runtime by passing a `locale` object to `axe.configure()`. The locale object must be of the same shape as existing locales in the `./locales` directory. For example:

```js
axe.configure({
  locale: {
    lang: &#039;de&#039;,
    rules: {
      accesskeys: {
        help: &#039;Der Wert des accesskey-Attributes muss einzigartig sein.&#039;
      }
      // ...
    },
    checks: {
      abstractrole: {
        fail: &#039;Abstrakte ARIA-Rollen dürfen nicht direkt verwendet werden.&#039;
      },
      &#039;aria-errormessage&#039;: {
        // Note: doT (https://github.com/olado/dot) templates are supported here.
        fail: &#039;Der Wert der aria-errormessage ${data.values}` muss eine Technik verwenden, um die Message anzukündigen (z. B., aria-live, aria-describedby, role=alert, etc.).&#039;
      }
      // ...
    }
  }
});
```

### Supported Locales

Axe-core supports the following locales. Do note that since locales are contributed by our community, they are not guaranteed to include all translations needed in a release.

- Basque
- Danish
- Dutch
- French
- German
- Hebrew
- Japanese
- Korean
- Norwegian (Bokmål)
- Polish
- Portuguese (Brazilian)
- Spanish
- Greek
- Italian
- Simplified Chinese
- Traditional Chinese

## Updates &amp; Security

Axe-core has a new minor release every 3 to 5 months, which usually introduces new rules and features. We recommend scheduling time to upgrade to these versions. Security updates will be made available for minor version lines up to **18 months old**.

- See [release and support](doc/release-and-support.md) for details on the frequency of releases, long-term support and recommendations on upgrading axe-core.
- See [backward compatibility](doc/backwards-compatibility-doc.md) for details on the types of changes different releases may introduce.

## Deque Trademarks Policy

DEQUE, DEQUELABS, AXE®, and AXE-CORE® are trademarks of Deque Systems, Inc. Use of the Deque trademarks must be in accordance with [Deque&#039;s trademark policy](https://www.deque.com/legal/trademarks/).

## Supported ARIA Roles and Attributes.

Refer [axe-core ARIA support](./doc/aria-supported.md) for a complete list of ARIA supported roles and attributes by axe.

## Contributing

Read the [Proposing Axe-core Rules guide](./doc/rule-proposal.md)

Read the [documentation on the architecture](./doc/developer-guide.md)

Read the [documentation on contributing](CONTRIBUTING.md)

## Projects using axe-core

[List of projects using axe-core](doc/projects.md)

## Acknowledgements

Thanks to Marat Dulin for his [css-selector-parser](https://www.npmjs.com/package/css-selector-parser) implementation which is included for shadow DOM support. Another thank you to the [Slick Parser](https://github.com/mootools/slick/blob/master/Source/Slick.Parser.js) implementers for their contribution, we have used some of their algorithms in our shadow DOM support code. Thanks to Lea Verou and Chris Lilley for their [colorjs.io](https://colorjs.io/) library which we have used for converting between color formats.

## Licenses

Axe-core is distributed under the [Mozilla Public License, version 2.0](LICENSE). It comes bundled with several dependencies which are distributed under their own terms. (See [LICENSE-3RD-PARTY.txt](LICENSE-3RD-PARTY.txt))
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[vercel/next.js]]></title>
            <link>https://github.com/vercel/next.js</link>
            <guid>https://github.com/vercel/next.js</guid>
            <pubDate>Wed, 13 Aug 2025 00:04:32 GMT</pubDate>
            <description><![CDATA[The React Framework]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vercel/next.js">vercel/next.js</a></h1>
            <p>The React Framework</p>
            <p>Language: JavaScript</p>
            <p>Stars: 133,749</p>
            <p>Forks: 29,049</p>
            <p>Stars today: 30 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[fishjar/kiss-translator]]></title>
            <link>https://github.com/fishjar/kiss-translator</link>
            <guid>https://github.com/fishjar/kiss-translator</guid>
            <pubDate>Wed, 13 Aug 2025 00:04:31 GMT</pubDate>
            <description><![CDATA[A simple, open source bilingual translation extension & Greasemonkey script (一个简约、开源的 双语对照翻译扩展 & 油猴脚本)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/fishjar/kiss-translator">fishjar/kiss-translator</a></h1>
            <p>A simple, open source bilingual translation extension & Greasemonkey script (一个简约、开源的 双语对照翻译扩展 & 油猴脚本)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,607</p>
            <p>Forks: 242</p>
            <p>Stars today: 200 stars today</p>
            <h2>README</h2><pre># 简约翻译

[English](README.en.md) | 简体中文

一个简约、开源的 [双语对照翻译扩展 &amp; 油猴脚本](https://github.com/fishjar/kiss-translator)。

[kiss-translator.webm](https://github.com/fishjar/kiss-translator/assets/1157624/f7ba8a5c-e4a8-4d5a-823a-5c5c67a0a47f)

## 特性

- [x] 保持简约
- [x] 开放源代码
- [x] 适配常见浏览器
  - [x] Chrome/Edge
  - [x] Firefox
  - [x] Kiwi (Android)
  - [x] Orion (iOS)
  - [ ] Safari
    - [x] Safari (Mac)
  - [x] Thunderbird
- [x] 支持多种翻译服务
  - [x] Google/Microsoft
  - [x] Baidu/Tencent/Volcengine
  - [x] OpenAI/Gemini/Claude/Ollama/DeepSeek/CloudflareAI
  - [x] DeepL/DeepLX/NiuTrans
  - [x] 自定义翻译接口
- [x] 覆盖常见翻译场景
  - [x] 网页双语对照翻译
  - [x] 输入框翻译
  - [x] 划词翻译
    - [x] 收藏词汇
  - [x] 鼠标悬停翻译
  - [x] YouTube 字幕翻译
- [x] 跨客户端数据同步
  - [x] KISS-Worker（cloudflare/docker）
  - [x] WebDAV
- [x] 自定义翻译规则
  - [x] 规则订阅/规则分享
  - [x] 自定义专业术语
- [x] 自定义译文样式
- [x] 自定义快捷键
  - `Alt+Q` 开启翻译
  - `Alt+C` 切换样式
  - `Alt+K` 打开设置弹窗
  - `Alt+S` 打开翻译弹窗/翻译选中文字
  - `Alt+O` 打开设置页面
  - `Alt+I` 输入框翻译

## 安装

&gt; 注：基于以下原因，建议优先使用浏览器扩展
&gt;
&gt; - 浏览器扩展的功能更完整（本地语言识别、右键菜单等）
&gt; - 油猴脚本会遇到更多使用上的问题（跨域问题、脚本冲突等）

- [x] 浏览器扩展
  - [x] Chrome [安装地址](https://chrome.google.com/webstore/detail/kiss-translator/bdiifdefkgmcblbcghdlonllpjhhjgof?hl=zh-CN)
    - [x] Kiwi (Android)
    - [x] Orion (iOS)
  - [x] Edge [安装地址](https://microsoftedge.microsoft.com/addons/detail/%E7%AE%80%E7%BA%A6%E7%BF%BB%E8%AF%91/jemckldkclkinpjighnoilpbldbdmmlh?hl=zh-CN)
  - [x] Firefox [安装地址](https://addons.mozilla.org/zh-CN/firefox/addon/kiss-translator/)
  - [ ] Safari
    - [x] Safari (Mac) 第三方编译，未作验证，自行获取： https://www.nodeloc.com/t/topic/54245
  - [x] Thunderbird [下载地址](https://github.com/fishjar/kiss-translator/releases)
- [x] 油猴脚本
  - [x] Chrome/Edge/Firefox ([Tampermonkey](https://www.tampermonkey.net/)/[Violentmonkey](https://violentmonkey.github.io/)) [安装链接](https://fishjar.github.io/kiss-translator/kiss-translator.user.js)
    - [Greasy Fork](https://greasyfork.org/zh-CN/scripts/472840-kiss-translator)
  - [x] iOS Safari ([Userscripts Safari](https://github.com/quoid/userscripts)) [安装链接](https://fishjar.github.io/kiss-translator/kiss-translator-ios-safari.user.js)

## 关联项目

- 数据同步服务: [https://github.com/fishjar/kiss-worker](https://github.com/fishjar/kiss-worker)
  - 可用于本项目的数据同步服务。
  - 亦可用于分享个人的私有规则列表。
  - 自己部署，自己管理，数据私有。
- 社区订阅规则: [https://github.com/fishjar/kiss-rules](https://github.com/fishjar/kiss-rules)
  - 提供社区维护的，最新最全的订阅规则列表。
  - 求助规则相关的问题。
- 翻译接口代理: [https://github.com/fishjar/kiss-proxy](https://github.com/fishjar/kiss-proxy)
  - 如果访问某个翻译接口遇到网络问题，这个代理服务也许可以帮到你。
  - 自己部署，自己管理。

## 常见问题

### 如何关闭自动翻译

通过规则设置，以下方法均可实现：

- 个人规则：全局规则 -&gt; 开启翻译 -&gt; 默认关闭
- 订阅规则：选择第三个 `kiss-rules-off.json`
- 覆写订阅规则：开启翻译 -&gt; 默认关闭
- 添加一条针对某个网站的个人规则：开启翻译 -&gt; 默认关闭

### 如何设置快捷键

在插件管理那里设置，例如： 

- chrome [chrome://extensions/shortcuts](chrome://extensions/shortcuts)
- firefox [about:addons](about:addons)

### 如何关闭划词翻译

通过规则设置：个人规则 -&gt; 全局规则 -&gt; 是否启用划词翻译 -&gt; 禁用

### 如何设置仅显示译文

通过规则设置：个人规则 -&gt; 全局规则 -&gt; 仅显示译文 -&gt; 启用

### 如何设置鼠标悬停翻译

通过规则设置：个人规则 -&gt; 全局规则 -&gt; 触发方式

### 为什么有些网页翻译不全

本插件的网页翻译是基于CSS选择器的，通用规则不能适配所有网页，有时需要自行添加相应网站的单独规则。如果不会写规则，可以到这里求助： https://github.com/fishjar/kiss-rules/issues

### 规则设置的优先级是如何的

个人规则 &gt; 覆写订阅规则 &gt; 订阅规则 &gt; 全局规则

其中全局规则优先级最低，但非常重要，相当于默认规则。

### 为什么油管字幕一句话会断开翻译

本插件目前没有针对视频做特殊开发，对油管的支持也是当做网页翻译看待，自动生成字幕是流式生成并输出的，所以支持较差。

如果需要关闭本插件的字幕翻译，增加一条规则即可，参考：https://github.com/fishjar/kiss-translator/issues/62

### 本地的Ollama接口不能使用

如果出现403的情况，参考：https://github.com/fishjar/kiss-translator/issues/174

### 填写的接口在油猴脚本不能使用

油猴脚本需要增加域名白名单，否则不能发出请求。

### 如何设置自定义接口的hook函数

自定义接口功能非常灵活，理论可以接入任何翻译接口。

Request Hook 函数示例如下：

```js
/**
 * Request Hook
 * @param {string} text 需要翻译的原文
 * @param {string} from 原文语言
 * @param {string} to   译文语言
 * @param {string} url  翻译接口地址
 * @param {string} key  翻译接口密钥
 * @returns {Array[string, object]} [接口地址, 请求参数对象]
 */
(text, from, to, url, key) =&gt; [url, {
  headers: {
    &quot;Content-type&quot;: &quot;application/json&quot;,
    &quot;Authorization&quot;: `Bearer ${key}`
  },
  method: &quot;POST&quot;,
  body: { text, to },
}]
```

Response Hook 函数示例如下：

```js
/**
 * Request Hook
 * @param {string} res  接口返回的json数据
 * @param {string} text 需要翻译的原文
 * @param {string} from 原文语言
 * @param {string} to   译文语言
 * @returns {Array[string, boolean]} [译文, 译文语言与原文语言是否相同]
 * 注：如果返回值第二个值为true（译文语言与原文语言相同）则译文不会在页面显示，
 *     参数不全的情况建议直接返回false
 */
(res, text, from, to) =&gt; [res.text, to === res.src]
```

更多的自定义接口示例，请参考： [custom-api.md](https://github.com/fishjar/kiss-translator/blob/master/custom-api.md)

## 开发指引

```sh
git clone https://github.com/fishjar/kiss-translator.git
cd kiss-translator
git checkout dev # 提交PR建议推送到dev分支
pnpm install
pnpm build
```

## 交流

- 加入 [Telegram 群](https://t.me/+RRCu_4oNwrM2NmFl)

## 赞赏

![appreciate](https://github.com/fishjar/kiss-translator/assets/1157624/ebaecabe-2934-4172-8085-af236f5ee399)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[ethereumbook/ethereumbook]]></title>
            <link>https://github.com/ethereumbook/ethereumbook</link>
            <guid>https://github.com/ethereumbook/ethereumbook</guid>
            <pubDate>Wed, 13 Aug 2025 00:04:30 GMT</pubDate>
            <description><![CDATA[Mastering Ethereum, by Andreas M. Antonopoulos, Gavin Wood]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ethereumbook/ethereumbook">ethereumbook/ethereumbook</a></h1>
            <p>Mastering Ethereum, by Andreas M. Antonopoulos, Gavin Wood</p>
            <p>Language: JavaScript</p>
            <p>Stars: 20,719</p>
            <p>Forks: 5,098</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre># Mastering Ethereum

![Mastering Ethereum Cover](images/cover_thumb.png)

Mastering Ethereum is a book for developers, offering a guide to the operation and use of the Ethereum, Ethereum Classic, RootStock (RSK) and other compatible EVM-based open blockchains.

## Reading this book

To read this book, see [book.asciidoc](https://github.com/ethereumbook/ethereumbook/blob/develop/book.asciidoc). Click on each of the chapters to read in your browser. Other parties may choose to release PDFs of the book online.

## Chapters
+ Preface: &#039;[Preface](https://github.com/ethereumbook/ethereumbook/blob/develop/preface.asciidoc)&#039;
+ Chapter 1: &#039;[What Is Ethereum](https://github.com/ethereumbook/ethereumbook/blob/develop/01what-is.asciidoc)&#039;
+ Chapter 2: &#039;[Ethereum Basics](https://github.com/ethereumbook/ethereumbook/blob/develop/02intro.asciidoc)&#039;
+ Chapter 3: &#039;[Ethereum Clients](https://github.com/ethereumbook/ethereumbook/blob/develop/03clients.asciidoc)&#039;
+ Chapter 4: &#039;[Cryptography](https://github.com/ethereumbook/ethereumbook/blob/develop/04keys-addresses.asciidoc)&#039;
+ Chapter 5: &#039;[Wallets](https://github.com/ethereumbook/ethereumbook/blob/develop/05wallets.asciidoc)&#039;
+ Chapter 6: &#039;[Transactions](https://github.com/ethereumbook/ethereumbook/blob/develop/06transactions.asciidoc)&#039;
+ Chapter 7: &#039;[Smart Contracts and Solidity](https://github.com/ethereumbook/ethereumbook/blob/develop/07smart-contracts-solidity.asciidoc)&#039;
+ Chapter 8: &#039;[Smart Contracts and Vyper](https://github.com/ethereumbook/ethereumbook/blob/develop/08smart-contracts-vyper.asciidoc)&#039;
+ Chapter 9: &#039;[Smart Contract Security](https://github.com/ethereumbook/ethereumbook/blob/develop/09smart-contracts-security.asciidoc)&#039;
+ Chapter 10: &#039;[Tokens](https://github.com/ethereumbook/ethereumbook/blob/develop/10tokens.asciidoc)&#039;
+ Chapter 11: &#039;[Oracles](https://github.com/ethereumbook/ethereumbook/blob/develop/11oracles.asciidoc)&#039;
+ Chapter 12: &#039;[Decentralized Applications (DApps)](https://github.com/ethereumbook/ethereumbook/blob/develop/12dapps.asciidoc)&#039;
+ Chapter 13: &#039;[The Ethereum Virtual Machine](https://github.com/ethereumbook/ethereumbook/blob/develop/13evm.asciidoc)&#039;
+ Chapter 14: &#039;[Consensus](https://github.com/ethereumbook/ethereumbook/blob/develop/14consensus.asciidoc)&#039;

## Content

The content status is &quot;COMPLETE&quot;. The first edition of this book was published on December 1st, 2018. That edition is available in print and ebook format at many popular bookstores. It is tagged [&quot;first_edition_first_print&quot;](https://github.com/ethereumbook/ethereumbook/tree/first_edition_first_print) in the develop branch of this repository.

At this time, **only bug fix requests are accepted**. If you find a bug, start an issue or better yet, fix the problem with a pull request. We will start work on the second edition in late 2019.

## Source and license

The [first edition](https://github.com/ethereumbook/ethereumbook/tree/first_edition_first_print) of this book, as printed and sold by O&#039;Reilly Media, is available in this repository.

Mastering Ethereum is released under the *Creative Commons CC-BY-SA license*.

This &quot;Free Culture&quot; compliant license was approved by our publisher O&#039;Reilly Media (http://oreilly.com), who understands the value of open source. O&#039;Reilly Media is not just the world&#039;s best publisher of technical books, but is also a strong supporter of this open culture and the sharing of knowledge.

&lt;a rel=&quot;license&quot; href=&quot;http://creativecommons.org/licenses/by-sa/4.0/&quot;&gt;&lt;img alt=&quot;Creative Commons License&quot; style=&quot;border-width:0&quot; src=&quot;https://i.creativecommons.org/l/by-sa/4.0/88x31.png&quot; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;span xmlns:dct=&quot;http://purl.org/dc/terms/&quot; href=&quot;http://purl.org/dc/dcmitype/Text&quot; property=&quot;dct:title&quot; rel=&quot;dct:type&quot;&gt;Mastering Ethereum&lt;/span&gt; by &lt;a xmlns:cc=&quot;http://creativecommons.org/ns#&quot; href=&quot;https://ethereumbook.info&quot; property=&quot;cc:attributionName&quot; rel=&quot;cc:attributionURL&quot;&gt;Andreas M. Antonopoulos, Gavin Wood&lt;/a&gt; is licensed under a &lt;a rel=&quot;license&quot; href=&quot;http://creativecommons.org/licenses/by-sa/4.0/&quot;&gt;Creative Commons Attribution-ShareAlike 4.0 International License&lt;/a&gt;.&lt;br /&gt;Based on a work at &lt;a xmlns:dct=&quot;http://purl.org/dc/terms/&quot; href=&quot;https://github.com/ethereumbook/ethereumbook&quot; rel=&quot;dct:source&quot;&gt;https://github.com/ethereumbook/ethereumbook&lt;/a&gt;.

# Translate This Book!

If you are interested in translating this book, please join our team of volunteers at: https://www.transifex.com/aantonop/ethereumbook
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[lint-staged/lint-staged]]></title>
            <link>https://github.com/lint-staged/lint-staged</link>
            <guid>https://github.com/lint-staged/lint-staged</guid>
            <pubDate>Wed, 13 Aug 2025 00:04:29 GMT</pubDate>
            <description><![CDATA[🚫💩 — Run tasks like formatters and linters against staged git files]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/lint-staged/lint-staged">lint-staged/lint-staged</a></h1>
            <p>🚫💩 — Run tasks like formatters and linters against staged git files</p>
            <p>Language: JavaScript</p>
            <p>Stars: 14,079</p>
            <p>Forks: 449</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre># 🚫💩 lint-staged

[![npm version](https://badge.fury.io/js/lint-staged.svg)](https://badge.fury.io/js/lint-staged)

---

Run tasks like formatters and linters against staged git files and don&#039;t let :poop: slip into your code base!

```bash
npm install --save-dev lint-staged # requires further setup
```

```
$ git commit

✔ Backed up original state in git stash (5bda95f)
❯ Running tasks for staged files...
  ❯ packages/frontend/.lintstagedrc.json — 1 file
    ↓ *.js — no files [SKIPPED]
    ❯ *.{json,md} — 1 file
      ⠹ prettier --write
  ↓ packages/backend/.lintstagedrc.json — 2 files
    ❯ *.js — 2 files
      ⠼ eslint --fix
    ↓ *.{json,md} — no files [SKIPPED]
◼ Applying modifications from tasks...
◼ Cleaning up temporary files...
```

&lt;details&gt;
&lt;summary&gt;See asciinema video&lt;/summary&gt;

[![asciicast](https://asciinema.org/a/199934.svg)](https://asciinema.org/a/199934)

&lt;/details&gt;

## Table of Contents

- [Why](#why)
- [Installation and setup](#installation-and-setup)
- [Changelog](#changelog)
- [Command line flags](#command-line-flags)
- [Configuration](#configuration)
- [Filtering files](#filtering-files)
- [What commands are supported?](#what-commands-are-supported)
- [Running multiple commands in a sequence](#running-multiple-commands-in-a-sequence)
- [Using JS configuration files](#using-js-configuration-files)
- [Reformatting the code](#reformatting-the-code)
- [Examples](#examples)
- [Frequently Asked Questions](#frequently-asked-questions)

## Why

Code quality tasks like formatters and linters make more sense when run before committing your code. By doing so you can ensure no errors go into the repository and enforce code style. But running a task on a whole project can be slow, and opinionated tasks such as linting can sometimes produce irrelevant results. Ultimately you only want to check files that will be committed.

This project contains a script that will run arbitrary shell tasks with a list of staged files as an argument, filtered by a specified glob pattern.

### Related blog posts and talks

- [Introductory Medium post - Andrey Okonetchnikov, 2016](https://medium.com/@okonetchnikov/make-linting-great-again-f3890e1ad6b8#.8qepn2b5l)
- [Running Jest Tests Before Each Git Commit - Ben McCormick, 2017](https://benmccormick.org/2017/02/26/running-jest-tests-before-each-git-commit/)
- [AgentConf presentation - Andrey Okonetchnikov, 2018](https://www.youtube.com/watch?v=-mhY7e-EsC4)
- [SurviveJS interview - Juho Vepsäläinen and Andrey Okonetchnikov, 2018](https://survivejs.com/blog/lint-staged-interview/)
- [Prettier your CSharp with `dotnet-format` and `lint-staged`](https://johnnyreilly.com/2020/12/22/prettier-your-csharp-with-dotnet-format-and-lint-staged)

&gt; If you&#039;ve written one, please submit a PR with the link to it!

## Installation and setup

To install _lint-staged_ in the recommended way, you need to:

1. Install _lint-staged_ itself:
   - `npm install --save-dev lint-staged`
1. Set up the `pre-commit` git hook to run _lint-staged_
   - [Husky](https://github.com/typicode/husky) is a popular choice for configuring git hooks
   - Read more about git hooks [here](https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks)
1. Install some tools like [ESLint](https://eslint.org) or [Prettier](https://prettier.io)
1. Configure _lint-staged_ to run code checkers and other tasks:
   - for example: `{ &quot;*.js&quot;: &quot;eslint&quot; }` to run ESLint for all staged JS files
   - See [Configuration](#configuration) for more info

Don&#039;t forget to commit changes to `package.json` and `.husky` to share this setup with your team!

Now change a few files, `git add` or `git add --patch` some of them to your commit, and try to `git commit` them.

See [examples](#examples) and [configuration](#configuration) for more information.

&gt; [!CAUTION]  
&gt; _Lint-staged_ runs `git` operations affecting the files in your repository. By default _lint-staged_ creates a `git stash` as a backup of the original state before running any configured tasks to help prevent data loss.

## Changelog

See [Releases](https://github.com/okonet/lint-staged/releases).

### Migration

For breaking changes, see [MIGRATION.md](./MIGRATION.md).

## Command line flags

```
❯ npx lint-staged --help
Usage: lint-staged [options]

Options:
  -V, --version                      output the version number
  --allow-empty                      allow empty commits when tasks revert all staged changes (default: false)
  -p, --concurrent &lt;number|boolean&gt;  the number of tasks to run concurrently, or false for serial (default: true)
  -c, --config [path]                path to configuration file, or - to read from stdin
  --cwd [path]                       run all tasks in specific directory, instead of the current
  -d, --debug                        print additional debug information (default: false)
  --diff [string]                    override the default &quot;--staged&quot; flag of &quot;git diff&quot; to get list of files. Implies
                                     &quot;--no-stash&quot;.
  --diff-filter [string]             override the default &quot;--diff-filter=ACMR&quot; flag of &quot;git diff&quot; to get list of files
  --max-arg-length [number]          maximum length of the command-line argument string (default: 0)
  --no-revert                        do not revert to original state in case of errors.
  --no-stash                         disable the backup stash. Implies &quot;--no-revert&quot;.
  --no-hide-partially-staged         disable hiding unstaged changes from partially staged files
  -q, --quiet                        disable lint-staged’s own console output (default: false)
  -r, --relative                     pass relative filepaths to tasks (default: false)
  -v, --verbose                      show task output even when tasks succeed; by default only failed output is
                                     shown (default: false)
  -h, --help                         display help for command

Any lost modifications can be restored from a git stash:

  &gt; git stash list
  stash@{0}: automatic lint-staged backup
  &gt; git stash apply --index stash@{0}
```

- **`--allow-empty`**: By default, when tasks undo all staged changes, lint-staged will exit with an error and abort the commit. Use this flag to allow creating empty git commits.
- **`--concurrent [number|boolean]`**: Controls the [concurrency of tasks](#task-concurrency) being run by lint-staged. **NOTE**: This does NOT affect the concurrency of subtasks (they will always be run sequentially). Possible values are:
  - `false`: Run all tasks serially
  - `true` (default) : _Infinite_ concurrency. Runs as many tasks in parallel as possible.
  - `{number}`: Run the specified number of tasks in parallel, where `1` is equivalent to `false`.
- **`--config [path]`**: Manually specify a path to a config file or npm package name. Note: when used, lint-staged won&#039;t perform the config file search and will print an error if the specified file cannot be found. If &#039;-&#039; is provided as the filename then the config will be read from stdin, allowing piping in the config like `cat my-config.json | npx lint-staged --config -`.
- **`--cwd [path]`**: By default tasks run in the current working directory. Use the `--cwd some/directory` to override this. The path can be absolute or relative to the current working directory.
- **`--debug`**: Run in debug mode. When set, it does the following:
  - uses [debug](https://github.com/visionmedia/debug) internally to log additional information about staged files, commands being executed, location of binaries, etc. Debug logs, which are automatically enabled by passing the flag, can also be enabled by setting the environment variable `$DEBUG` to `lint-staged*`.
  - uses [`verbose` renderer](https://listr2.kilic.dev/renderers/verbose-renderer/) for `listr2`; this causes serial, uncoloured output to the terminal, instead of the default (beautified, dynamic) output.
    (the [`verbose` renderer](https://listr2.kilic.dev/renderers/verbose-renderer/) can also be activated by setting the `TERM=dumb` or `NODE_ENV=test` environment variables)
- **`--diff`**: By default tasks are filtered against all files staged in git, generated from `git diff --staged`. This option allows you to override the `--staged` flag with arbitrary revisions. For example to get a list of changed files between two branches, use `--diff=&quot;branch1...branch2&quot;`. You can also read more from about [git diff](https://git-scm.com/docs/git-diff) and [gitrevisions](https://git-scm.com/docs/gitrevisions). This option also implies `--no-stash`.
- **`--diff-filter`**: By default only files that are _added_, _copied_, _modified_, or _renamed_ are included. Use this flag to override the default `ACMR` value with something else: _added_ (`A`), _copied_ (`C`), _deleted_ (`D`), _modified_ (`M`), _renamed_ (`R`), _type changed_ (`T`), _unmerged_ (`U`), _unknown_ (`X`), or _pairing broken_ (`B`). See also the `git diff` docs for [--diff-filter](https://git-scm.com/docs/git-diff#Documentation/git-diff.txt---diff-filterACDMRTUXB82308203).
- **`--max-arg-length`**: long commands (a lot of files) are automatically split into multiple chunks when it detects the current shell cannot handle them. Use this flag to override the maximum length of the generated command string.
- **`--no-stash`**: By default a backup stash will be created before running the tasks, and all task modifications will be reverted in case of an error. This option will disable creating the stash, and instead leave all modifications in the index when aborting the commit.
- **`--no-hide-partially-staged`**: By default, unstaged changes from partially staged files will be hidden and applied back after running tasks. This option will disable this behavior, causing those changes to also be committed.
- **`--quiet`**: Suppress all CLI output, except from tasks.
- **`--relative`**: Pass filepaths relative to `process.cwd()` (where `lint-staged` runs) to tasks. Default is `false`.
- **`--no-revert`**: By default all task modifications will be reverted in case of an error. This option will disable the behavior, and apply task modifications to the index before aborting the commit.
- **`--verbose`**: Show task output even when tasks succeed. By default only failed output is shown.

## Configuration

_Lint-staged_ can be configured in many ways:

- `lint-staged` object in your `package.json`, or [`package.yaml`](https://github.com/pnpm/pnpm/pull/1799)
- `.lintstagedrc` file in JSON or YML format, or you can be explicit with the file extension:
  - `.lintstagedrc.json`
  - `.lintstagedrc.yaml`
  - `.lintstagedrc.yml`
- `.lintstagedrc.mjs` or `lint-staged.config.mjs` file in ESM format
  - the default export value should be a configuration: `export default { ... }`
- `.lintstagedrc.cjs` or `lint-staged.config.cjs` file in CommonJS format
  - the exports value should be a configuration: `module.exports = { ... }`
- `lint-staged.config.js` or `.lintstagedrc.js` in either ESM or CommonJS format, depending on
  whether your project&#039;s _package.json_ contains the `&quot;type&quot;: &quot;module&quot;` option or not.
- Pass a configuration file using the `--config` or `-c` flag

Configuration should be an object where each value is a **command** to run and its key is a glob pattern to use for this command. This package uses [micromatch](https://github.com/micromatch/micromatch) for glob patterns. JavaScript files can also export advanced configuration as a function. See [Using JS configuration files](#using-js-configuration-files) for more info.

You can also place multiple configuration files in different directories inside a project. For a given staged file, the closest configuration file will always be used. See [&quot;How to use `lint-staged` in a multi-package monorepo?&quot;](#how-to-use-lint-staged-in-a-multi-package-monorepo) for more info and an example.

#### `package.json` example:

```json
{
  &quot;lint-staged&quot;: {
    &quot;*&quot;: &quot;your-cmd&quot;
  }
}
```

#### `.lintstagedrc` example

```json
{
  &quot;*&quot;: &quot;your-cmd&quot;
}
```

This config will execute `your-cmd` with the list of currently staged files passed as arguments.

So, considering you did `git add file1.ext file2.ext`, lint-staged will run the following command:

`your-cmd file1.ext file2.ext`

### TypeScript

_Lint-staged_ provides TypeScript types for the configuration and main Node.js API. You can use the JSDoc syntax in your JS configuration files:

```js
/**
 * @filename: lint-staged.config.js
 * @type {import(&#039;lint-staged&#039;).Configuration}
 */
export default {
  &#039;*&#039;: &#039;prettier --write&#039;,
}
```

It&#039;s also possible to use the `.ts` file extension for the configuration if your Node.js version supports it. The `--experimental-strip-types` flag was introduced in [Node.js v22.6.0](https://github.com/nodejs/node/releases/tag/v22.6.0) and unflagged in [v23.6.0](https://github.com/nodejs/node/releases/tag/v23.6.0), enabling Node.js to execute TypeScript files without additional configuration.

```shell
export NODE_OPTIONS=&quot;--experimental-strip-types&quot;

npx lint-staged --config lint-staged.config.ts
```

### Task concurrency

By default _lint-staged_ will run configured tasks concurrently. This means that for every glob, all the commands will be started at the same time. With the following config, both `eslint` and `prettier` will run at the same time:

```json
{
  &quot;*.ts&quot;: &quot;eslint&quot;,
  &quot;*.md&quot;: &quot;prettier --list-different&quot;
}
```

This is typically not a problem since the globs do not overlap, and the commands do not make changes to the files, but only report possible errors (aborting the git commit). If you want to run multiple commands for the same set of files, you can use the array syntax to make sure commands are run in order. In the following example, `prettier` will run for both globs, and in addition `eslint` will run for `*.ts` files _after_ it. Both sets of commands (for each glob) are still started at the same time (but do not overlap).

```json
{
  &quot;*.ts&quot;: [&quot;prettier --list-different&quot;, &quot;eslint&quot;],
  &quot;*.md&quot;: &quot;prettier --list-different&quot;
}
```

Pay extra attention when the configured globs overlap, and tasks make edits to files. For example, in this configuration `prettier` and `eslint` might try to make changes to the same `*.ts` file at the same time, causing a _race condition_:

```json
{
  &quot;*&quot;: &quot;prettier --write&quot;,
  &quot;*.ts&quot;: &quot;eslint --fix&quot;
}
```

You can solve it using the negation pattern and the array syntax:

```json
{
  &quot;!(*.ts)&quot;: &quot;prettier --write&quot;,
  &quot;*.ts&quot;: [&quot;eslint --fix&quot;, &quot;prettier --write&quot;]
}
```

Another example in which tasks make edits to files and globs match multiple files but don&#039;t overlap:

```json
{
  &quot;*.css&quot;: [&quot;stylelint --fix&quot;, &quot;prettier --write&quot;],
  &quot;*.{js,jsx}&quot;: [&quot;eslint --fix&quot;, &quot;prettier --write&quot;],
  &quot;!(*.css|*.js|*.jsx)&quot;: [&quot;prettier --write&quot;]
}
```

Or, if necessary, you can limit the concurrency using `--concurrent &lt;number&gt;` or disable it entirely with `--concurrent false`.

## Filtering files

Task commands work on a subset of all staged files, defined by a _glob pattern_. lint-staged uses [micromatch](https://github.com/micromatch/micromatch) for matching files with the following rules:

- If the glob pattern contains no slashes (`/`), micromatch&#039;s `matchBase` option will be enabled, so globs match a file&#039;s basename regardless of directory:
  - `&quot;*.js&quot;` will match all JS files, like `/test.js` and `/foo/bar/test.js`
  - `&quot;!(*test).js&quot;` will match all JS files, except those ending in `test.js`, so `foo.js` but not `foo.test.js`
  - `&quot;!(*.css|*.js)&quot;` will match all files except CSS and JS files
- If the glob pattern does contain a slash (`/`), it will match for paths as well:
  - `&quot;./*.js&quot;` will match all JS files in the git repo root, so `/test.js` but not `/foo/bar/test.js`
  - `&quot;foo/**/*.js&quot;` will match all JS files inside the `/foo` directory, so `/foo/bar/test.js` but not `/test.js`

When matching, lint-staged will do the following

- Resolve the git root automatically, no configuration needed.
- Pick the staged files which are present inside the project directory.
- Filter them using the specified glob patterns.
- Pass absolute paths to the tasks as arguments.

**NOTE:** `lint-staged` will pass _absolute_ paths to the tasks to avoid any confusion in case they&#039;re executed in a different working directory (i.e. when your `.git` directory isn&#039;t the same as your `package.json` directory).

Also see [How to use `lint-staged` in a multi-package monorepo?](#how-to-use-lint-staged-in-a-multi-package-monorepo)

### Ignoring files

The concept of `lint-staged` is to run configured linter tasks (or other tasks) on files that are staged in git. `lint-staged` will always pass a list of all staged files to the task, and ignoring any files should be configured in the task itself.

Consider a project that uses [`prettier`](https://prettier.io/) to keep code format consistent across all files. The project also stores minified 3rd-party vendor libraries in the `vendor/` directory. To keep `prettier` from throwing errors on these files, the vendor directory should be added to prettier&#039;s ignore configuration, the `.prettierignore` file. Running `npx prettier .` will ignore the entire vendor directory, throwing no errors. When `lint-staged` is added to the project and configured to run prettier, all modified and staged files in the vendor directory will be ignored by prettier, even though it receives them as input.

In advanced scenarios, where it is impossible to configure the linter task itself to ignore files, but some staged files should still be ignored by `lint-staged`, it is possible to filter filepaths before passing them to tasks by using the function syntax. See [Example: Ignore files from match](#example-ignore-files-from-match).

## What commands are supported?

Supported are any executables installed locally or globally via `npm` as well as any executable from your \$PATH.

&gt; Using globally installed scripts is discouraged, since lint-staged may not work for someone who doesn&#039;t have it installed.

`lint-staged` uses [nano-spawn](https://github.com/sindresorhus/nano-spawn?tab=readme-ov-file#optionspreferlocal) to locate locally installed scripts. So in your `.lintstagedrc` you can write:

```json
{
  &quot;*.js&quot;: &quot;eslint --fix&quot;
}
```

This will result in _lint-staged_ running `eslint --fix file-1.js file-2.js`, when you have staged files `file-1.js`, `file-2.js` and `README.md`.

Pass arguments to your commands separated by space as you would do in the shell. See [examples](#examples) below.

## Running multiple commands in a sequence

You can run multiple commands in a sequence on every glob. To do so, pass an array of commands instead of a single one. This is useful for running autoformatting tools like `eslint --fix` or `stylefmt` but can be used for any arbitrary sequences.

For example:

```json
{
  &quot;*.js&quot;: [&quot;eslint&quot;, &quot;prettier --write&quot;]
}
```

going to execute `eslint` and if it exits with `0` code, it will execute `prettier --write` on all staged `*.js` files.

This will result in _lint-staged_ running `eslint file-1.js file-2.js`, when you have staged files `file-1.js`, `file-2.js` and `README.md`, and if it passes, `prettier --write file-1.js file-2.js`.

## Using JS configuration files

Writing the configuration file in JavaScript is the most powerful way to configure lint-staged (`lint-staged.config.js`, [similar](https://github.com/okonet/lint-staged#configuration), or passed via `--config`). From the configuration file, you can export either a single function or an object.

If the `exports` value is a function, it will receive an array of all staged filenames. You can then build your own matchers for the files and return a command string or an array of command strings. These strings are considered complete and should include the filename arguments, if wanted.

If the `exports` value is an object, its keys should be glob matches (like in the normal non-js config format). The values can either be like in the normal config or individual functions like described above. Instead of receiving all matched fil

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[DefiLlama/chainlist]]></title>
            <link>https://github.com/DefiLlama/chainlist</link>
            <guid>https://github.com/DefiLlama/chainlist</guid>
            <pubDate>Wed, 13 Aug 2025 00:04:28 GMT</pubDate>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/DefiLlama/chainlist">DefiLlama/chainlist</a></h1>
            <p></p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,697</p>
            <p>Forks: 2,874</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre># Chainlist

## Add a chain

Submit a PR that adds a new file to the [constants/additionalChainRegistry folder](https://github.com/DefiLlama/chainlist/tree/main/constants/additionalChainRegistry). The new file should be named `chainid-{chainid_number}.js` and the contents should follow this structure:
```
{
  &quot;name&quot;: &quot;Ethereum Mainnet&quot;,
  &quot;chain&quot;: &quot;ETH&quot;,
  &quot;rpc&quot;: [
    &quot;https://eth.llamarpc.com&quot;,
  ],
  &quot;faucets&quot;: [],
  &quot;nativeCurrency&quot;: {
    &quot;name&quot;: &quot;Ether&quot;,
    &quot;symbol&quot;: &quot;ETH&quot;,
    &quot;decimals&quot;: 18
  },
  &quot;features&quot;: [{ &quot;name&quot;: &quot;EIP155&quot; }, { &quot;name&quot;: &quot;EIP1559&quot; }],
  &quot;infoURL&quot;: &quot;https://ethereum.org&quot;,
  &quot;shortName&quot;: &quot;eth&quot;,
  &quot;chainId&quot;: 1,
  &quot;networkId&quot;: 1,
  &quot;icon&quot;: &quot;ethereum&quot;,
  &quot;explorers&quot;: [{
    &quot;name&quot;: &quot;etherscan&quot;,
    &quot;url&quot;: &quot;https://etherscan.io&quot;,
    &quot;icon&quot;: &quot;etherscan&quot;,
    &quot;standard&quot;: &quot;EIP3091&quot;
  }]
}
```

## Add an RPC to a chain that is already listed

If you wish to add your RPC, please submit a PR modifying [constants/extraRpcs.js](https://github.com/DefiLlama/chainlist/blob/main/constants/extraRpcs.js) to add your RPC to the given chains.

## API
The following API returns all the data in our website, including chain data along with all of their RPCs:

https://chainlist.org/rpcs.json
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[adrianhajdin/react-movies]]></title>
            <link>https://github.com/adrianhajdin/react-movies</link>
            <guid>https://github.com/adrianhajdin/react-movies</guid>
            <pubDate>Wed, 13 Aug 2025 00:04:27 GMT</pubDate>
            <description><![CDATA[Dive straight into React—from basic JSX to advanced hooks—and build a real, modern app in this hands-on crash course!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/adrianhajdin/react-movies">adrianhajdin/react-movies</a></h1>
            <p>Dive straight into React—from basic JSX to advanced hooks—and build a real, modern app in this hands-on crash course!</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,366</p>
            <p>Forks: 116</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;br /&gt;
    &lt;a href=&quot;https://www.youtube.com/watch?v=dCLhUialKPQ&quot; target=&quot;_blank&quot;&gt;
      &lt;img src=&quot;public/readme/hero.png&quot; alt=&quot;Project Banner&quot;&gt;
    &lt;/a&gt;
  &lt;br /&gt;
  
  &lt;div&gt;
    &lt;img src=&quot;https://img.shields.io/badge/-React_JS-black?style=for-the-badge&amp;logoColor=white&amp;logo=react&amp;color=61DAFB&quot; alt=&quot;react.js&quot; /&gt;
    &lt;img src=&quot;https://img.shields.io/badge/-Appwrite-black?style=for-the-badge&amp;logoColor=white&amp;logo=appwrite&amp;color=FD366E&quot; alt=&quot;appwrite&quot; /&gt;
    &lt;img src=&quot;https://img.shields.io/badge/-Tailwind_CSS-black?style=for-the-badge&amp;logoColor=white&amp;logo=tailwindcss&amp;color=06B6D4&quot; alt=&quot;tailwindcss&quot; /&gt;
  &lt;/div&gt;

  &lt;h3 align=&quot;center&quot;&gt;A Movie Application&lt;/h3&gt;

   &lt;div align=&quot;center&quot;&gt;
     Build this project step by step with our detailed tutorial on &lt;a href=&quot;https://www.youtube.com/@javascriptmastery/videos&quot; target=&quot;_blank&quot;&gt;&lt;b&gt;JavaScript Mastery&lt;/b&gt;&lt;/a&gt; YouTube. Join the JSM family!
    &lt;/div&gt;
&lt;/div&gt;

## 📋 &lt;a name=&quot;table&quot;&gt;Table of Contents&lt;/a&gt;

1. 🤖 [Introduction](#introduction)
2. ⚙️ [Tech Stack](#tech-stack)
3. 🔋 [Features](#features)
4. 🤸 [Quick Start](#quick-start)
5. 🕸️ [Snippets (Code to Copy)](#snippets)
6. 🔗 [Assets](#links)
7. 🚀 [More](#more)

## 🚨 Tutorial

This repository contains the code corresponding to an in-depth tutorial available on our YouTube channel, &lt;a href=&quot;https://www.youtube.com/@javascriptmastery/videos&quot; target=&quot;_blank&quot;&gt;&lt;b&gt;JavaScript Mastery&lt;/b&gt;&lt;/a&gt;.

If you prefer visual learning, this is the perfect resource for you. Follow our tutorial to learn how to build projects like these step-by-step in a beginner-friendly manner!

&lt;a href=&quot;https://www.youtube.com/watch?v=dCLhUialKPQ&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/sujatagunale/EasyRead/assets/151519281/1736fca5-a031-4854-8c09-bc110e3bc16d&quot; /&gt;&lt;/a&gt;

## &lt;a name=&quot;introduction&quot;&gt;🤖 Introduction&lt;/a&gt;

Built with React.js for the user interface, Appwrite for backend services, and styled with TailwindCSS, this Movie App lets users browse trending movies, search titles, and explore content using the TMDB API. It features a responsive layout and a sleek, modern design.

If you&#039;re getting started and need assistance or face any bugs, join our active Discord community with over **50k+** members. It&#039;s a place where people help each other out.

&lt;a href=&quot;https://discord.com/invite/n6EdbFJ&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/sujatagunale/EasyRead/assets/151519281/618f4872-1e10-42da-8213-1d69e486d02e&quot; /&gt;&lt;/a&gt;

## &lt;a name=&quot;tech-stack&quot;&gt;⚙️ Tech Stack&lt;/a&gt;

- **[Appwrite](https://appwrite.io/)** is an open-source Backend-as-a-Service (BaaS) platform that provides developers with a set of APIs to manage authentication, databases, storage, and more, enabling rapid development of secure and scalable applications.

- **[React.js](https://react.dev/reference/react)** is a JavaScript library developed by Meta for building user interfaces. It allows developers to create reusable UI components that manage their own state, leading to more efficient and predictable code. React is widely used for developing single-page applications (SPAs) due to its virtual DOM that improves performance and ease of maintenance.

- **[React-use](https://github.com/streamich/react-use)** is a collection of essential React hooks that simplify common tasks like managing state, side effects, and lifecycle events, promoting cleaner and more maintainable code in React applications.

- **[Tailwind CSS](https://tailwindcss.com/)** is a utility-first CSS framework that provides low-level utility classes to build custom designs without writing custom CSS, enabling rapid and responsive UI development.

- **[Vite](https://vite.dev/)** is a modern build tool that provides a fast development environment for frontend projects. It offers features like hot module replacement (HMR) and optimized builds, enhancing the development experience and performance.


## &lt;a name=&quot;features&quot;&gt;🔋 Features&lt;/a&gt;

👉 **Browse All Movies**: Explore a wide range of movies available on the platform.

👉 **Search Movies**: Easily search for specific movies using a search function.

👉 **Trending Movies Algorithm**: Displays trending movies based on a dynamic algorithm.

👉 **Modern UI/UX**: A sleek and user-friendly interface designed for a great experience.

👉 **Responsiveness**: Fully responsive design that works seamlessly across devices.

and many more, including code architecture and reusability

## &lt;a name=&quot;quick-start&quot;&gt;🤸 Quick Start&lt;/a&gt;

Follow these steps to set up the project locally on your machine.

**Prerequisites**

Make sure you have the following installed on your machine:

- [Git](https://git-scm.com/)
- [Node.js](https://nodejs.org/en)
- [npm](https://www.npmjs.com/) (Node Package Manager)

**Cloning the Repository**

```bash
git clone https://github.com/adrianhajdin/react-movies.git
cd react-movies

```

**Installation**

Install the project dependencies using npm:

```bash
npm install
```

**Set Up Environment Variables**

Create a new file named `.env.local` in the root of your project and add the following content:

```env
VITE_TMDB_API_KEY=

VITE_APPWRITE_PROJECT_ID=
VITE_APPWRITE_DATABASE_ID=
VITE_APPWRITE_COLLECTION_ID=
```

Replace the placeholder values with your actual **[TheMovieDatabase API](https://developer.themoviedb.org/reference/intro/getting-started)** and **[Appwrite](https://apwr.dev/JSM050)** credentials.

**Running the Project**

```bash
npm run dev
```

Open [http://localhost:5173](http://localhost:5173) in your browser to view the project.

## &lt;a name=&quot;snippets&quot;&gt;🕸️ Snippets&lt;/a&gt;

&lt;details&gt;
&lt;summary&gt;&lt;code&gt;index.css&lt;/code&gt;&lt;/summary&gt;

```css
@import url(&quot;https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&amp;display=swap&quot;);
@import url(&quot;https://fonts.googleapis.com/css2?family=Bebas+Neue&amp;display=swap&quot;);

@import &quot;tailwindcss&quot;;

@theme {
  --color-primary: #030014;

  --color-light-100: #cecefb;
  --color-light-200: #a8b5db;

  --color-gray-100: #9ca4ab;

  --color-dark-100: #0f0d23;

  --font-dm-sans: DM Sans, sans-serif;

  --breakpoint-xs: 480px;

  --background-image-hero-pattern: url(&quot;/hero-bg.png&quot;);
}

@layer base {
  body {
    font-family: &quot;DM Sans&quot;, serif;
    font-optical-sizing: auto;
    background: #030014;
  }

  h1 {
    @apply mx-auto max-w-4xl text-center text-5xl font-bold leading-tight tracking-[-1%] text-white sm:text-[64px] sm:leading-[76px];
  }

  h2 {
    @apply text-2xl font-bold text-white sm:text-3xl;
  }

  main {
    @apply min-h-screen relative bg-primary;
  }

  header {
    @apply sm:mt-10 mt-5;
  }

  header img {
    @apply w-full max-w-lg h-auto object-contain mx-auto drop-shadow-md;
  }
}

@layer components {
  .pattern {
    @apply bg-hero-pattern w-full h-screen bg-center bg-cover absolute z-0;
  }

  .wrapper {
    @apply px-5 py-12 xs:p-10 max-w-7xl mx-auto flex flex-col relative z-10;
  }

  .trending {
    @apply mt-20;

    &amp; ul {
      @apply flex flex-row overflow-y-auto gap-5 -mt-10 w-full hide-scrollbar;
    }

    &amp; ul li {
      @apply min-w-[230px] flex flex-row items-center;
    }

    &amp; ul li p {
      @apply fancy-text mt-[22px] text-nowrap;
    }

    &amp; ul li img {
      @apply w-[127px] h-[163px] rounded-lg object-cover -ml-3.5;
    }
  }

  .search {
    @apply w-full bg-light-100/5 px-4 py-3 rounded-lg mt-10 max-w-3xl mx-auto;

    &amp; div {
      @apply relative flex items-center;
    }

    &amp; img {
      @apply absolute left-2 h-5 w-5;
    }

    &amp; input {
      @apply w-full bg-transparent py-2 sm:pr-10 pl-10 text-base text-gray-200 placeholder-light-200 outline-hidden;
    }
  }

  .all-movies {
    @apply space-y-9;

    &amp; ul {
      @apply grid grid-cols-1 gap-5 xs:grid-cols-2 md:grid-cols-3 lg:grid-cols-4;
    }
  }

  .movie-card {
    @apply bg-dark-100 p-5 rounded-2xl shadow-inner shadow-light-100/10;

    &amp; img {
      @apply rounded-lg h-auto w-full;
    }

    &amp; h3 {
      @apply text-white font-bold text-base line-clamp-1;
    }

    &amp; .content {
      @apply mt-2 flex flex-row items-center flex-wrap gap-2;
    }

    &amp; .rating {
      @apply flex flex-row items-center gap-1;
    }

    &amp; .rating img {
      @apply size-4 object-contain;
    }

    &amp; .rating p {
      @apply font-bold text-base text-white;
    }

    &amp; .content span {
      @apply text-sm text-gray-100;
    }

    &amp; .content .lang {
      @apply capitalize text-gray-100 font-medium text-base;
    }

    &amp; .content .year {
      @apply text-gray-100 font-medium text-base;
    }
  }
}

@utility text-gradient {
  @apply bg-linear-to-r from-[#D6C7FF] to-[#AB8BFF] bg-clip-text text-transparent;
}

@utility fancy-text {
  -webkit-text-stroke: 5px rgba(206, 206, 251, 0.5);
  font-size: 190px;
  font-family: &quot;Bebas Neue&quot;, sans-serif;
}

@utility hide-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;

  &amp;::-webkit-scrollbar {
    display: none;
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;code&gt;components/Spinner.jsx&lt;/code&gt;&lt;/summary&gt;

```jsx
import React from &#039;react&#039;

const Spinner = () =&gt; {
  return (
    &lt;div role=&quot;status&quot;&gt;
      &lt;svg aria-hidden=&quot;true&quot;
           className=&quot;w-8 h-8 text-gray-200 animate-spin dark:text-gray-600 fill-indigo-600&quot;
           viewBox=&quot;0 0 100 101&quot; fill=&quot;none&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
        &lt;path
          d=&quot;M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z&quot;
          fill=&quot;currentColor&quot;/&gt;
        &lt;path
          d=&quot;M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z&quot;
          fill=&quot;currentFill&quot;/&gt;
      &lt;/svg&gt;
      &lt;span className=&quot;sr-only&quot;&gt;Loading...&lt;/span&gt;
    &lt;/div&gt;
  )
}
export default Spinner
```
&lt;/details&gt;


## &lt;a name=&quot;links&quot;&gt;🔗 Assets&lt;/a&gt;

Assets and snippets used in the project can be found in the **[video kit](https://jsm.dev/react25-kit)**.

&lt;a href=&quot;https://jsm.dev/react25-kit&quot; target=&quot;_blank&quot;&gt;
  &lt;img src=&quot;public/readme/videokit.png&quot; alt=&quot;Video Kit Banner&quot;&gt;
&lt;/a&gt;

## &lt;a name=&quot;more&quot;&gt;🚀 More&lt;/a&gt;

**Advance your skills with Next.js Pro Course**

Enjoyed creating this project? Dive deeper into our PRO courses for a richer learning adventure. They&#039;re packed with
detailed explanations, cool features, and exercises to boost your skills. Give it a go!

&lt;a href=&quot;https://jsm.dev/react25-jsmpro&quot; target=&quot;_blank&quot;&gt;
  &lt;img src=&quot;public/readme/jsmpro.png&quot; alt=&quot;Project Banner&quot;&gt;
&lt;/a&gt;</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[gaotianliuyun/gao]]></title>
            <link>https://github.com/gaotianliuyun/gao</link>
            <guid>https://github.com/gaotianliuyun/gao</guid>
            <pubDate>Wed, 13 Aug 2025 00:04:26 GMT</pubDate>
            <description><![CDATA[FongMi影视和tvbox配置文件，如果喜欢，请Fork自用。使用前请仔细阅读仓库说明，一旦使用将被视为你已了解。]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/gaotianliuyun/gao">gaotianliuyun/gao</a></h1>
            <p>FongMi影视和tvbox配置文件，如果喜欢，请Fork自用。使用前请仔细阅读仓库说明，一旦使用将被视为你已了解。</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,752</p>
            <p>Forks: 2,526</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre>FongMi影视、TVBox、猫影视配置文件。所有资源均来自于各路大神无私分享，如有侵权，请联系删除。

所有以任何方式查看本仓库内容的人、或直接或间接使用本仓库内容的使用者都应仔细阅读此声明。本仓库管理者保留随时更改或补充此免责声明的权利。一旦使用、复制、修改了本仓库内容，则视为您已接受此免责声明。

本仓库管理者不能保证本仓库内容的合法性、准确性、完整性和有效性，请根据情况自行判断。本仓库内容，仅用于测试和学习研究，禁止用于商业用途，不得将其用于违反国家、地区、组织等的法律法规或相关规定的其他用途，禁止任何公众号、自媒体进行任何形式的转载、发布，请不要在中华人民共和国境内使用本仓库内容，否则后果自负。

本仓库内容中涉及的第三方硬件、软件等，与本仓库内容没有任何直接或间接的关系。本仓库内容仅对部署和使用过程进行客观描述，不代表支持使用任何第三方硬件、软件。使用任何第三方硬件、软件，所造成的一切后果由使用的个人或组织承担，与本仓库内容无关。

所有直接或间接使用本仓库内容的个人和组织，应 24 小时内完成学习和研究，并及时删除本仓库内容。如对本仓库内容的功能有需求，应自行开发相关功能。所有基于本仓库内容的源代码，进行的任何修改，为其他个人或组织的自发行为，与本仓库内容没有任何直接或间接的关系，所造成的一切后果亦与本仓库内容和本仓库管理者无关。


1. tvbox配置：

（1）0707.json  Fengmi影视多线配置接口,仅适用于Fengmi影视；

（2）0821.json  在饭太硬配置的基础上添加了若干优质点播源、直播线路和解析；

（3）0825.json  jar包来源于Panda Groove的jar，PG网盘的用法请看https://github.com/gaotianliuyun/gao/blob/gaotianliuyun-patch-1/README.md ；

（4）0826.json  完全来源于饭太硬的jar包和配置；

（5）0827.json  jar包和配置来源于fongmi；

（6）js.json  jar包来源于Panda Groove的go包，资源来源于道长drpy(js)仓库；

（7）XYQ.json  XYQ源，jar包和配置来源于香雅情；

（8）/cat/js/config_open.json  cat源，资源暂停更新，如果有能力的大佬愿意发电，请联系我。

2. APP推荐:

（1）FongMi版本  项目地址：https://github.com/FongMi/TV 支持直播多线路、自动换源、直播倍速，手机投屏；

（2）q215613905版本  项目地址：https://github.com/q215613905/TVBoxOS 支持直播回放；

（3）takagen99版本  项目地址：https://github.com/takagen99/Box 支持直播回放，界面美观；

（4）猫影视   项目地址：https://github.com/catvod/CatVodOpen 界面简洁，支持多平台。

3. TVBox各路大佬配置（排名不分先后）：

（1）饭太硬：http://www.饭太硬.top/tv/

（2）okjack：https://jihulab.com/okcaptain/kko/raw/main/ok.txt

（3）王二小放牛娃：http://tvbox.王二小放牛娃.xyz

（4）摸鱼儿：http://我不是.摸鱼儿.top

（5）霜辉月明py：https://999740.xyz/raw.githubusercontent.com/lm317379829/PyramidStore/pyramid/py.json

（6）小米小爆脾气：http://xhww.fun/小米/DEMO.json

（7）南风：https://agit.ai/Yoursmile7/TVBox/raw/branch/master/XC.json

（8）神器：https://神器每日推送.tk/pz.json

（9）巧技：http://pandown.pro/tvbox/tvbox.json

（10）Ray：https://100km.top/0

（11）俊于：http://home.jundie.top:81/top98.json

4. 随机轮换壁纸：

（1）https://jianbian.chuqiuyu.workers.dev 自制极简渐变壁纸

（2）http://www.kf666888.cn/api/tvbox/img

（3）https://picsum.photos/1280/720/?blur=10

（4）http://刚刚.live/图 

（5）http://饭.eu.org/深色壁纸/api.php,

（6）https://www.dmoe.cc/random.php

（7）https://api.btstu.cn/sjbz/zsy.php

（8）https://api.btstu.cn/sjbz/?lx=dongman

（9）http://api.btstu.cn/sjbz/?lx=meizi

（10）http://api.btstu.cn/sjbz/?lx=suiji

（11）https://pictures.catvod.eu.org/

（12）https://bing.img.run/rand.php

自用仓库，如果喜欢，请Fork自用，谢谢！

尽自己所能更新，不保证配置的有效性和时效性。

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[f/awesome-chatgpt-prompts]]></title>
            <link>https://github.com/f/awesome-chatgpt-prompts</link>
            <guid>https://github.com/f/awesome-chatgpt-prompts</guid>
            <pubDate>Wed, 13 Aug 2025 00:04:25 GMT</pubDate>
            <description><![CDATA[This repo includes ChatGPT prompt curation to use ChatGPT and other LLM tools better.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/f/awesome-chatgpt-prompts">f/awesome-chatgpt-prompts</a></h1>
            <p>This repo includes ChatGPT prompt curation to use ChatGPT and other LLM tools better.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 132,428</p>
            <p>Forks: 17,567</p>
            <p>Stars today: 75 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
&lt;img width=&quot;395&quot; alt=&quot;prompts.chat&quot; src=&quot;https://github.com/user-attachments/assets/e0d0e32d-d2ce-4459-9f37-e951d9f4f5de&quot; /&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;Sponsors&lt;/h3&gt;

&lt;div align=&quot;center&quot;&gt;

  &lt;a href=&quot;https://clemta.com&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;50&quot; alt=&quot;Clemta logo&quot; src=&quot;https://clemta.com/wp-content/uploads/2023/03/logo-clemta-com-1.png.webp&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;sub&gt;With Clemta, you can run your company from the comfort of your home.&lt;/sub&gt;
&lt;hr&gt;
  &lt;a href=&quot;https://github.com/f/mcptools&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;60&quot; alt=&quot;Hugging Face logo&quot; src=&quot;https://github.com/f/mcptools/raw/master/.github/resources/logo.png&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;sub&gt;If you&#039;re building MCPs, &lt;a href=&quot;https://github.com/f/mcptools&quot;&gt;MCP Tools&lt;/a&gt; is a Swiss-army knife for MCP Servers.&lt;/sub&gt;
&lt;hr&gt;
  &lt;sub&gt;&lt;a href=&quot;https://github.com/sponsors/f/sponsorships?sponsor=f&amp;amp;tier_id=319423&quot;&gt;Be my sponsor and your logo will be here!&lt;/a&gt;&lt;/sub&gt;
&lt;/div&gt;

---
[![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)

Welcome to the &quot;Awesome ChatGPT Prompts&quot; repository! While this collection was originally created for [ChatGPT](https://chat.openai.com/chat), these prompts work great with other AI models like [Claude](https://claude.ai/new), [Gemini](https://gemini.google.com), [Hugging Face Chat](https://hf.co/chat), [Llama](https://meta.ai), [Mistral](https://chat.mistral.ai), and more.

[ChatGPT](https://chat.openai.com/chat) is a web interface created by [OpenAI](https://openai.com) that provides access to their GPT (Generative Pre-trained Transformer) language models. The underlying models, like GPT-4o and GPT-o1, are large language models trained on vast amounts of text data that can understand and generate human-like text. Like other AI chat interfaces, you can provide prompts and have natural conversations with the AI, which will generate contextual responses based on the conversation history and your inputs.

In this repository, you will find a variety of prompts that can be used with ChatGPT and other AI chat models. We encourage you to [add your own prompts](https://github.com/f/awesome-chatgpt-prompts/edit/main/README.md) to the list, and to use AI to help generate new prompts as well.

To get started, simply clone this repository and use the prompts in the README.md file as input for your preferred AI chat model. You can also use the prompts in this file as inspiration for creating your own.

We hope you find these prompts useful and have fun exploring AI chat models!

**[View on prompts.chat](https://prompts.chat)**

**[View on Hugging Face](https://huggingface.co/datasets/fka/awesome-chatgpt-prompts/)**
---

&gt; ℹ️ **NOTE:** Sometimes, some of the prompts may not be working as you expected
&gt; or may be rejected by the AI. Please try again, start a new thread, or log out
&gt; and log back in. If these solutions do not work, please try rewriting the
&gt; prompt using your own sentences while keeping the instructions same.

### Want to Write Effective Prompts?

I&#039;ve authored an e-book called **&quot;The Art of ChatGPT Prompting: A Guide to
Crafting Clear and Effective Prompts&quot;**.

📖 **[Read the e-book](https://fka.gumroad.com/l/art-of-chatgpt-prompting)**

### Want to Learn How to Make Money using ChatGPT Prompts?

I&#039;ve authored an e-book called **&quot;How to Make Money with ChatGPT: Strategies,
Tips, and Tactics&quot;**.

📖
**[Buy the e-book](https://fka.gumroad.com/l/how-to-make-money-with-chatgpt)**

### Want to Learn How to write image prompts for Midjourney AI?

I&#039;ve authored an e-book called **&quot;The Art of Midjourney AI: A Guide to Creating
Images from Text&quot;**.

📖
**[Read the e-book](https://fka.gumroad.com/l/the-art-of-midjourney-ai-guide-to-creating-images-from-text)**

---

### Using prompts.chat

[prompts.chat](https://prompts.chat) is designed to provide an enhanced UX when
working with prompts. With just a few clicks, you can easily edit and copy the
prompts on the site to fit your specific needs and preferences.

&lt;img width=&quot;1400&quot; alt=&quot;Screenshot 2025-01-05 at 22 17 19&quot; src=&quot;https://github.com/user-attachments/assets/272d2092-b651-452a-a049-f46b31c32889&quot; /&gt;

---

## Unmerged Prompts

There are many Pull Requests to this repository waiting to be merged. There are
many hidden gems there. Take a look!

📖
**[View Unmerged Prompts](https://github.com/f/awesome-chatgpt-prompts/pulls)**

---

# Prompts

## Act as an Ethereum Developer

Contributed by: [@ameya-2003](https://github.com/Ameya-2003) Reference:
[The BlockChain Messenger](https://github.com/Ameya-2003/BlockChain/blob/main/Projects/The%20BlockChain%20Messenger.sol)

&gt; Imagine you are an experienced Ethereum developer tasked with creating a smart
&gt; contract for a blockchain messenger. The objective is to save messages on the
&gt; blockchain, making them readable (public) to everyone, writable (private) only
&gt; to the person who deployed the contract, and to count how many times the
&gt; message was updated. Develop a Solidity smart contract for this purpose,
&gt; including the necessary functions and considerations for achieving the
&gt; specified goals. Please provide the code and any relevant explanations to
&gt; ensure a clear understanding of the implementation.

## Act as a Linux Terminal

Contributed by: [@f](https://github.com/f) Reference:
[https://www.engraved.blog/building-a-virtual-machine-inside/](https://www.engraved.blog/building-a-virtual-machine-inside/)

&gt; I want you to act as a linux terminal. I will type commands and you will reply
&gt; with what the terminal should show. I want you to only reply with the terminal
&gt; output inside one unique code block, and nothing else. do not write
&gt; explanations. do not type commands unless I instruct you to do so. When I need
&gt; to tell you something in English, I will do so by putting text inside curly
&gt; brackets {like this}. My first command is pwd

## Act as an English Translator and Improver

Contributed by: [@f](https://github.com/f) **Alternative to**: Grammarly, Google
Translate

&gt; I want you to act as an English translator, spelling corrector and improver. I
&gt; will speak to you in any language and you will detect the language, translate
&gt; it and answer in the corrected and improved version of my text, in English. I
&gt; want you to replace my simplified A0-level words and sentences with more
&gt; beautiful and elegant, upper level English words and sentences. Keep the
&gt; meaning same, but make them more literary. I want you to only reply the
&gt; correction, the improvements and nothing else, do not write explanations. My
&gt; first sentence is &quot;istanbulu cok seviyom burada olmak cok guzel&quot;

## Act as Job Interviewer

Contributed by: [@f](https://github.com/f) &amp;
[@iltekin](https://github.com/iltekin) **Examples**: Node.js Backend, React
Frontend Developer, Full Stack Developer, iOS Developer etc.

&gt; I want you to act as an interviewer. I will be the candidate and you will ask
&gt; me the interview questions for the ${Position:JavaScript Developer} position. I want you to only
&gt; reply as the interviewer. Do not write all the conversation at once. I want
&gt; you to only do the interview with me. Ask me the questions and wait for my
&gt; answers. Do not write explanations. Ask me the questions one by one like an
&gt; interviewer does and wait for my answers. My first sentence is &quot;Hi&quot;

## Act as a JavaScript Console

Contributed by: [@omerimzali](https://github.com/omerimzali)

&gt; I want you to act as a javascript console. I will type commands and you will
&gt; reply with what the javascript console should show. I want you to only reply
&gt; with the terminal output inside one unique code block, and nothing else. do
&gt; not write explanations. do not type commands unless I instruct you to do so.
&gt; when I need to tell you something in english, I will do so by putting text
&gt; inside curly brackets {like this}. My first command is console.log(&quot;Hello
&gt; World&quot;);

## Act as an Excel Sheet

Contributed by: [@f](https://github.com/f)

&gt; I want you to act as a text based excel. You&#039;ll only reply me the text-based
&gt; 10 rows excel sheet with row numbers and cell letters as columns (A to L).
&gt; First column header should be empty to reference row number. I will tell you
&gt; what to write into cells and you&#039;ll reply only the result of excel table as
&gt; text, and nothing else. Do not write explanations. I will write you formulas
&gt; and you&#039;ll execute formulas and you&#039;ll only reply the result of excel table as
&gt; text. First, reply me the empty sheet.

## Act as an English Pronunciation Helper

Contributed by: [@f](https://github.com/f)

&gt; I want you to act as an English pronunciation assistant for Turkish speaking
&gt; people. I will write you sentences and you will only answer their
&gt; pronunciations, and nothing else. The replies must not be translations of my
&gt; sentence but only pronunciations. Pronunciations should use Turkish Latin
&gt; letters for phonetics. Do not write explanations on replies. My first sentence
&gt; is &quot;how the weather is in Istanbul?&quot;

## Act as a Spoken English Teacher and Improver

Contributed by: [@ATX735](https://github.com/ATX735)

&gt; I want you to act as a spoken English teacher and improver. I will speak to
&gt; you in English and you will reply to me in English to practice my spoken
&gt; English. I want you to keep your reply neat, limiting the reply to 100 words.
&gt; I want you to strictly correct my grammar mistakes, typos, and factual errors.
&gt; I want you to ask me a question in your reply. Now let&#039;s start practicing, you
&gt; could ask me a question first. Remember, I want you to strictly correct my
&gt; grammar mistakes, typos, and factual errors.

## Act as a Travel Guide

Contributed by: [@koksalkapucuoglu](https://github.com/koksalkapucuoglu)

&gt; I want you to act as a travel guide. I will write you my location and you will
&gt; suggest a place to visit near my location. In some cases, I will also give you
&gt; the type of places I will visit. You will also suggest me places of similar
&gt; type that are close to my first location. My first suggestion request is &quot;I am
&gt; in Istanbul/Beyoğlu and I want to visit only museums.&quot;

## Act as a Plagiarism Checker

Contributed by: [@yetk1n](https://github.com/yetk1n)

&gt; I want you to act as a plagiarism checker. I will write you sentences and you
&gt; will only reply undetected in plagiarism checks in the language of the given
&gt; sentence, and nothing else. Do not write explanations on replies. My first
&gt; sentence is &quot;For computers to behave like humans, speech recognition systems
&gt; must be able to process nonverbal information, such as the emotional state of
&gt; the speaker.&quot;

## Act as Character

Contributed by: [@BRTZL](https://github.com/BRTZL)
[@mattsq](https://github.com/mattsq)

&gt; I want you to act like ${Character: Anakin Skywalker} from ${Series: Star Wars}. I want you to respond and
&gt; answer like ${Character: Anakin Skywalker} using the tone, manner and vocabulary ${Character: Anakin Skywalker}
&gt; would use. Do not write any explanations. Only answer like ${Character: Anakin Skywalker}. You
&gt; must know all of the knowledge of ${Character: Anakin Skywalker}. My first sentence is &quot;Hi
&gt; ${Character: Anakin Skywalker}.&quot;

## Act as an Advertiser

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as an advertiser. You will create a campaign to promote a
&gt; product or service of your choice. You will choose a target audience, develop
&gt; key messages and slogans, select the media channels for promotion, and decide
&gt; on any additional activities needed to reach your goals. My first suggestion
&gt; request is &quot;I need help creating an advertising campaign for a new type of
&gt; energy drink targeting young adults aged 18-30.&quot;

## Act as a Storyteller

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a storyteller. You will come up with entertaining stories
&gt; that are engaging, imaginative and captivating for the audience. It can be
&gt; fairy tales, educational stories or any other type of stories which has the
&gt; potential to capture people&#039;s attention and imagination. Depending on the
&gt; target audience, you may choose specific themes or topics for your
&gt; storytelling session e.g., if it’s children then you can talk about animals;
&gt; If it’s adults then history-based tales might engage them better etc. My first
&gt; request is &quot;I need an interesting story on perseverance.&quot;

## Act as a Football Commentator

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a football commentator. I will give you descriptions of
&gt; football matches in progress and you will commentate on the match, providing
&gt; your analysis on what has happened thus far and predicting how the game may
&gt; end. You should be knowledgeable of football terminology, tactics,
&gt; players/teams involved in each match, and focus primarily on providing
&gt; intelligent commentary rather than just narrating play-by-play. My first
&gt; request is &quot;I&#039;m watching Manchester United vs Chelsea - provide commentary for
&gt; this match.&quot;

## Act as a Stand-up Comedian

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a stand-up comedian. I will provide you with some topics
&gt; related to current events and you will use your wit, creativity, and
&gt; observational skills to create a routine based on those topics. You should
&gt; also be sure to incorporate personal anecdotes or experiences into the routine
&gt; in order to make it more relatable and engaging for the audience. My first
&gt; request is &quot;I want a humorous take on politics.&quot;

## Act as a Motivational Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a motivational coach. I will provide you with some
&gt; information about someone&#039;s goals and challenges, and it will be your job to
&gt; come up with strategies that can help this person achieve their goals. This
&gt; could involve providing positive affirmations, giving helpful advice or
&gt; suggesting activities they can do to reach their end goal. My first request is
&gt; &quot;I need help motivating myself to stay disciplined while studying for an
&gt; upcoming exam&quot;.

## Act as a Composer

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a composer. I will provide the lyrics to a song and you
&gt; will create music for it. This could include using various instruments or
&gt; tools, such as synthesizers or samplers, in order to create melodies and
&gt; harmonies that bring the lyrics to life. My first request is &quot;I have written a
&gt; poem named “Hayalet Sevgilim” and need music to go with it.&quot;

## Act as a Debater

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a debater. I will provide you with some topics related to
&gt; current events and your task is to research both sides of the debates, present
&gt; valid arguments for each side, refute opposing points of view, and draw
&gt; persuasive conclusions based on evidence. Your goal is to help people come
&gt; away from the discussion with increased knowledge and insight into the topic
&gt; at hand. My first request is &quot;I want an opinion piece about Deno.&quot;

## Act as a Debate Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a debate coach. I will provide you with a team of
&gt; debaters and the motion for their upcoming debate. Your goal is to prepare the
&gt; team for success by organizing practice rounds that focus on persuasive
&gt; speech, effective timing strategies, refuting opposing arguments, and drawing
&gt; in-depth conclusions from evidence provided. My first request is &quot;I want our
&gt; team to be prepared for an upcoming debate on whether front-end development is
&gt; easy.&quot;

## Act as a Screenwriter

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a screenwriter. You will develop an engaging and creative
&gt; script for either a feature length film, or a Web Series that can captivate
&gt; its viewers. Start with coming up with interesting characters, the setting of
&gt; the story, dialogues between the characters etc. Once your character
&gt; development is complete - create an exciting storyline filled with twists and
&gt; turns that keeps the viewers in suspense until the end. My first request is &quot;I
&gt; need to write a romantic drama movie set in Paris.&quot;

## Act as a Novelist

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a novelist. You will come up with creative and
&gt; captivating stories that can engage readers for long periods of time. You may
&gt; choose any genre such as fantasy, romance, historical fiction and so on - but
&gt; the aim is to write something that has an outstanding plotline, engaging
&gt; characters and unexpected climaxes. My first request is &quot;I need to write a
&gt; science-fiction novel set in the future.&quot;

## Act as a Movie Critic

Contributed by: [@nuc](https://github.com/nuc)

&gt; I want you to act as a movie critic. You will develop an engaging and creative
&gt; movie review. You can cover topics like plot, themes and tone, acting and
&gt; characters, direction, score, cinematography, production design, special
&gt; effects, editing, pace, dialog. The most important aspect though is to
&gt; emphasize how the movie has made you feel. What has really resonated with you.
&gt; You can also be critical about the movie. Please avoid spoilers. My first
&gt; request is &quot;I need to write a movie review for the movie Interstellar&quot;

## Act as a Relationship Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a relationship coach. I will provide some details about
&gt; the two people involved in a conflict, and it will be your job to come up with
&gt; suggestions on how they can work through the issues that are separating them.
&gt; This could include advice on communication techniques or different strategies
&gt; for improving their understanding of one another&#039;s perspectives. My first
&gt; request is &quot;I need help solving conflicts between my spouse and myself.&quot;

## Act as a Poet

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a poet. You will create poems that evoke emotions and
&gt; have the power to stir people’s soul. Write on any topic or theme but make
&gt; sure your words convey the feeling you are trying to express in beautiful yet
&gt; meaningful ways. You can also come up with short verses that are still
&gt; powerful enough to leave an imprint in readers&#039; minds. My first request is &quot;I
&gt; need a poem about love.&quot;

## Act as a Rapper

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a rapper. You will come up with powerful and meaningful
&gt; lyrics, beats and rhythm that can ‘wow’ the audience. Your lyrics should have
&gt; an intriguing meaning and message which people can relate too. When it comes
&gt; to choosing your beat, make sure it is catchy yet relevant to your words, so
&gt; that when combined they make an explosion of sound everytime! My first request
&gt; is &quot;I need a rap song about finding strength within yourself.&quot;

## Act as a Motivational Speaker

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a motivational speaker. Put together words that inspire
&gt; action and make people feel empowered to do something beyond their abilities.
&gt; You can talk about any topics but the aim is to make sure what you say
&gt; resonates with your audience, giving them an incentive to work on their goals
&gt; and strive for better possibilities. My first request is &quot;I need a speech
&gt; about how everyone should never give up.&quot;

## Act as a Philosophy Teacher

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a philosophy teacher. I will provide some topics related
&gt; to the study of philosophy, and it will be your job to explain these concepts
&gt; in an easy-to-understand manner. This could include providing examples, posing
&gt; questions or bre

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[pinojs/pino]]></title>
            <link>https://github.com/pinojs/pino</link>
            <guid>https://github.com/pinojs/pino</guid>
            <pubDate>Wed, 13 Aug 2025 00:04:24 GMT</pubDate>
            <description><![CDATA[🌲 super fast, all natural json logger]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pinojs/pino">pinojs/pino</a></h1>
            <p>🌲 super fast, all natural json logger</p>
            <p>Language: JavaScript</p>
            <p>Stars: 15,939</p>
            <p>Forks: 917</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>![banner](pino-banner.png)

# pino
[![npm version](https://img.shields.io/npm/v/pino)](https://www.npmjs.com/package/pino)
[![Build Status](https://img.shields.io/github/actions/workflow/status/pinojs/pino/ci.yml)](https://github.com/pinojs/pino/actions)
[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](https://standardjs.com/)

[Very low overhead](#low-overhead) Node.js logger.

## Documentation

* [Benchmarks ⇗](/docs/benchmarks.md)
* [API ⇗](/docs/api.md)
* [Browser API ⇗](/docs/browser.md)
* [Redaction ⇗](/docs/redaction.md)
* [Child Loggers ⇗](/docs/child-loggers.md)
* [Transports ⇗](/docs/transports.md)
* [Web Frameworks ⇗](/docs/web.md)
* [Pretty Printing ⇗](/docs/pretty.md)
* [Asynchronous Logging ⇗](/docs/asynchronous.md)
* [Ecosystem ⇗](/docs/ecosystem.md)
* [Help ⇗](/docs/help.md)
* [Long Term Support Policy ⇗](/docs/lts.md)

## Install

Using NPM:
```
$ npm install pino
```

Using YARN:
```
$ yarn add pino
```

If you would like to install pino v6, refer to https://github.com/pinojs/pino/tree/v6.x.

## Usage

```js
const logger = require(&#039;pino&#039;)()

logger.info(&#039;hello world&#039;)

const child = logger.child({ a: &#039;property&#039; })
child.info(&#039;hello child!&#039;)
```

This produces:

```
{&quot;level&quot;:30,&quot;time&quot;:1531171074631,&quot;msg&quot;:&quot;hello world&quot;,&quot;pid&quot;:657,&quot;hostname&quot;:&quot;Davids-MBP-3.fritz.box&quot;}
{&quot;level&quot;:30,&quot;time&quot;:1531171082399,&quot;msg&quot;:&quot;hello child!&quot;,&quot;pid&quot;:657,&quot;hostname&quot;:&quot;Davids-MBP-3.fritz.box&quot;,&quot;a&quot;:&quot;property&quot;}
```

For using Pino with a web framework see:

* [Pino with Fastify](docs/web.md#fastify)
* [Pino with Express](docs/web.md#express)
* [Pino with Hapi](docs/web.md#hapi)
* [Pino with Restify](docs/web.md#restify)
* [Pino with Koa](docs/web.md#koa)
* [Pino with Node core `http`](docs/web.md#http)
* [Pino with Nest](docs/web.md#nest)
* [Pino with Hono](docs/web.md#hono)

&lt;a name=&quot;essentials&quot;&gt;&lt;/a&gt;
## Essentials

### Development Formatting

The [`pino-pretty`](https://github.com/pinojs/pino-pretty) module can be used to
format logs during development:

![pretty demo](pretty-demo.png)

### Transports &amp; Log Processing

Due to Node&#039;s single-threaded event-loop, it&#039;s highly recommended that sending,
alert triggering, reformatting, and all forms of log processing
are conducted in a separate process or thread.

In Pino terminology, we call all log processors &quot;transports&quot; and recommend that the
transports be run in a worker thread using our `pino.transport` API.

For more details see our [Transports⇗](docs/transports.md) document.

### Low overhead

Using minimum resources for logging is very important. Log messages
tend to get added over time and this can lead to a throttling effect
on applications – such as reduced requests per second.

In many cases, Pino is over 5x faster than alternatives.

See the [Benchmarks](docs/benchmarks.md) document for comparisons.

### Bundling support

Pino supports being bundled using tools like webpack or esbuild. 

See [Bundling](docs/bundling.md) document for more information.

&lt;a name=&quot;team&quot;&gt;&lt;/a&gt;
## The Team

### Matteo Collina

&lt;https://github.com/mcollina&gt;

&lt;https://www.npmjs.com/~matteo.collina&gt;

&lt;https://twitter.com/matteocollina&gt;

### David Mark Clements

&lt;https://github.com/davidmarkclements&gt;

&lt;https://www.npmjs.com/~davidmarkclements&gt;

&lt;https://twitter.com/davidmarkclem&gt;

### James Sumners

&lt;https://github.com/jsumners&gt;

&lt;https://www.npmjs.com/~jsumners&gt;

&lt;https://twitter.com/jsumners79&gt;

### Thomas Watson Steen

&lt;https://github.com/watson&gt;

&lt;https://www.npmjs.com/~watson&gt;

&lt;https://twitter.com/wa7son&gt;

## Contributing

Pino is an **OPEN Open Source Project**. This means that:

&gt; Individuals making significant and valuable contributions are given commit-access to the project to contribute as they see fit. This project is more like an open wiki than a standard guarded open source project.

See the [CONTRIBUTING.md](https://github.com/pinojs/pino/blob/main/CONTRIBUTING.md) file for more details.

&lt;a name=&quot;acknowledgments&quot;&gt;&lt;/a&gt;
## Acknowledgments

This project was kindly sponsored by [nearForm](https://nearform.com).
This project is kindly sponsored by [Platformatic](https://platformatic.dev).

Logo and identity designed by Cosmic Fox Design: https://www.behance.net/cosmicfox.

## License

Licensed under [MIT](./LICENSE).

[elasticsearch]: https://www.elastic.co/products/elasticsearch
[kibana]: https://www.elastic.co/products/kibana
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[crocodilestick/Calibre-Web-Automated]]></title>
            <link>https://github.com/crocodilestick/Calibre-Web-Automated</link>
            <guid>https://github.com/crocodilestick/Calibre-Web-Automated</guid>
            <pubDate>Wed, 13 Aug 2025 00:04:23 GMT</pubDate>
            <description><![CDATA[Calibre-Web but automated and with Calibre features! Fully automate and simplify your eBook set up!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/crocodilestick/Calibre-Web-Automated">crocodilestick/Calibre-Web-Automated</a></h1>
            <p>Calibre-Web but automated and with Calibre features! Fully automate and simplify your eBook set up!</p>
            <p>Language: JavaScript</p>
            <p>Stars: 3,307</p>
            <p>Forks: 153</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre># Calibre-Web Automated _(formerly Calibre-Web Automator)_

![Calibre-Web Automated](README_images/CWA-banner.png &quot;Calibre-Web Automated&quot;)

## Making Calibre-Web your _dream_, all-in-one self-hosted digital library solution.

![Docker Pulls](https://img.shields.io/docker/pulls/crocodilestick/calibre-web-automated)
![GitHub Release](https://img.shields.io/github/v/release/crocodilestick/calibre-web-automated)
![GitHub commits since latest release](https://img.shields.io/github/commits-since/crocodilestick/calibre-web-automated/latest)


## _Quick Access_

- [Features](#features) 🪄
- [Releases](https://github.com/crocodilestick/Calibre-Web-Automated/releases) 🆕
- [Roadmap](#features-currently-under-active-development-and-on-our-roadmap-️️) 🛣️
- [How to Install](#how-to-install-): 📖
  - [Quick Install](#quick-install-) 🚀
  - [Docker-Compose](#using-docker-compose-recommended) 🐋⭐(Recommended)
  - [Users Migrating from stock Calibre Web](#users-migrating-from-stock-calibre-web) 🔄
  - [Post-Install Tasks](#post-install-tasks) 🏁
    - [Default Login Credentials 🔑](#default-admin-login)
- [Usage](#usage-) 🔧
  - [Adding Books to Your Library](#adding-books-to-your-library)
  - [KOReader Syncing (KOSync)](#koreader-syncing-kosync-) 📖⚡
- [For Developers](#for-developers---building-custom-docker-image) 🚀
- [Further Development](#further-development-️) 🏗️
- [Support / Buy me a Coffee](https://ko-fi.com/crocodilestick) ☕

## Why does it exist? 🔓

Calibre, while a fantastic tool for its age, has several problems when containerised, including its reliance on a KasmVNC server instance for the UI, which is near impossible to use on mobile and is relatively resource-heavy if you&#039;re running a small, lower power server like I am.

For many, Calibre-Web has really swooped in to save the day, offering an alternative to a containerised Calibre instance that&#039;s resource-light and with a much more modern UI to boot.

However, when compared to full-fat Calibre, it unfortunately lacks a few core features leading many to run both services in parallel, each serving to fill in where the other lacks, resulting in an often clunky, imperfect solution.

## Goal of the Project 🎯

Calibre-Web Automated aims to be an all-in-one solution, combining the modern lightweight web UI from Calibre-Web with the robust, versatile feature set of Calibre, with a slew of extra features and automations thrown in on top.

![Calibre-Web Automated Example Homepage](README_images/CWA-Homepage.png)
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;i&gt;CWA allows you to keep your ebook library accessible &amp; organised and looks good while doing it&lt;/i&gt; 😎🦚&lt;/p&gt;

## _Affiliated Projects_ 👬

### Calibre-Web Automated Book Downloader

- An intuitive web interface for searching and requesting book downloads, designed to work seamlessly with Calibre-Web-Automated. This project streamlines the process of downloading books and preparing them for integration into your Calibre library

[&lt;img src=&quot;https://raw.githubusercontent.com/vadret/android/master/assets/get-github.png&quot; alt=&quot;Get it on GitHub&quot; height=&quot;80&quot;&gt;](https://github.com/calibrain/calibre-web-automated-book-downloader)

___

### Calibre-Web Companion

- Built with **Flutter** and using **Material You**, [**Calibre Web Companion**](https://github.com/doen1el/calibre-web-companion) is an **unofficial companion application** for **Calibre Web** &amp; **Calibre Web Automated** that allows you to browse your book collection and download books directly on your device, providing a much **more modern, mobile-friendly UX** than either service can currently provide on its own

&lt;br&gt;

[![Calibre Web Companion Preview](README_images/cw-companion-screenshots.png)](https://github.com/doen1el/calibre-web-companion)

[&lt;img src=&quot;README_images/google-play.png&quot; alt=&quot;Get it on Google Play&quot; height=&quot;80&quot;&gt;](https://play.google.com/store/apps/details?id=de.doen1el.calibreWebCompanion)
[&lt;img src=&quot;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&quot; alt=&quot;Get it on F-Droid&quot; height=&quot;80&quot;&gt;](https://f-droid.org/en/packages/de.doen1el.calibreWebCompanion/)
[&lt;img src=&quot;https://raw.githubusercontent.com/vadret/android/master/assets/get-github.png&quot; alt=&quot;Get it on GitHub&quot; height=&quot;80&quot;&gt;](https://github.com/doen1el/calibre-web-companion)

## Join our Community! ❤️

- I want to say a **big thanks** 🙏 to all the members of this community that have taken the time to participate in the testing and development of this project and we encourage anyone who would like to to contribute in some way. Anyone of any level is welcome and every little helps!
- **For anyone that wish to contribute to this project in some way**, please reach out on our Discord Server and see how you can best get involved:\
    \
    [![](https://dcbadge.limes.pink/api/server/https://discord.gg/EjgSeek94R)](https://discord.gg/EjgSeek94R)

- Or alternativly make your own companion project, come hang out and or come get help if you&#039;re facing issues :)

## 🚨 To users planning to deploy via Network Shares (particularly NFS) 🚨

- Calibre, Calibre-Web and CWA are all SQLite3 based applications and as a result **don&#039;t like being run over network shares (especially NFS)**
    - SQLite is designed as a lightweight, file-based database system, and it assumes the underlying file system supports certain guarantees about **file locking, atomic writes, and consistency**
    - **Network file systems (e.g., NFS, SMB/CIFS, etc.) often do not meet these assumptions, which can lead to issues.**
  - Some users are successful in deploying CWA across NFS shares however doing so **can produce a lot of hard to diagnose issues** that take time away from users with actual issues
  - **Therefore as of V3.0.0, deployments over NFS shares are &quot;unsupported&quot;**, meaning **you are free to do so**, but **support will not be provided for users facing issues**

## **_Features:_**

### CWA supports all Stock CW Features:
| | | |
|     :---:    |     :---:      |     :---:     |
| Modern &amp; responsive Bootstrap 3 HTML5 interface | Comprehensive user management with per-user permissions | OPDS feed for ereader apps |
| eBook metadata editing and deletion support | Metadata download from various sources (extensible via plugins) | eBook download restriction to logged-in users |
| Public user registration support | Send eBooks to E-Readers with a single click | Sync Kobo devices with your Calibre library |
| In-browser eBook reading support for multiple formats | Content hiding based on categories and Custom Column content per user | &quot;Magic Link&quot; login for easy access on eReaders |
| LDAP, Google/GitHub OAuth, and proxy authentication support | Advanced search and filtering options | Multilingual user interface supporting 20+ [languages](https://github.com/janeczku/calibre-web/wiki/Translation-Status) |

## Plus these _**CWA Specific Features**_ on top:

#### Click a feature below to read about it in more detail:

| | | |
|     :---:    |     :---:      |     :---:     |
| [Automatic Ingest Service ✨](#automatic-ingest-service-) | [Automatic Conversion Service 🔃](#automatic-conversion-service-) | [Automatic Enforcement of Covers &amp; Metadata 👀📔](#automatic-enforcement-of-changes-made-to-covers--metadata-through-the-calibre-web-ui-) |
| [Batch Editing &amp; Deletion 🗂️](#batch-editing--deletion-️️) | [Automated Back Up Service 🔒](#automated-back-up-service-) | [Automated Setup Experience for New Users 🦮](#library-auto-detect-️) |
| [Automatic EPUB Fixer Service 🔨](#automatic-epub-fixer-service-) | [Multi-Format Conversion Service 🌌](#simple-to-use-multi-format-conversion-service-) | [Library Auto-Detect 📚🕵️](#library-auto-detect-️) |
| [Server Stats Tracking Page 📍](#server-stats-tracking-page-) | [Server Stats Tracking 📊](#server-stats-tracking-page-) | [Easy Dark/ Light Mode Switching ☀️🌙](#easy-dark-light-mode-switching-️) |
| [Internal Update Notification System 🛎️](#internal-update-notification-system-️) | [Auto-Compression of Backed Up Files 🤐](#auto-compression-of-backed-up-files-) | [Additional Metadata Providers 🗃️](#additional-metadata-providers-️) |
| [KOReader Syncing (KOSync) 📖⚡](#koreader-syncing-kosync-) | | |

#### **Automatic Ingest Service** ✨
- CWA currently supports automatic ingest of 27 different popular ebook formats
- Users can configure the services behavior to ignore and/or have certain formats automatically converted to other formats in the Admin Panel

&lt;!-- - A **Weighted Conversion Algorithm:** ⚖️
  - Using the information provided in the Calibre eBook-converter documentation on which formats convert best into epubs, CWA is able to determine from downloads containing multiple eBook formats, which format will convert most optimally, ignoring the other formats to ensure the **best possible quality** and no **duplicate imports** --&gt;

#### **Automatic Conversion Service** 🔃
- On by default though can be toggled of in the CWA Settings page, with EPUB as the default target format
  - _Available target formats include:_ **EPUB**, **MOBI**, **AZW3**, **KEPUB** &amp; **PDF**
- Upon detecting new files in the Ingest Directory, if any of the files are in formats the user has configured CWA to auto-convert to the current target format,
- The following **28 file types are currently supported:**
  - _.acsm, .azw, .azw3, .azw4, .mobi, .cbz, .cbr, .cb7, .cbc, .chm, .djvu, .docx, .epub, .fb2, .fbz, .html, .htmlz, .lit, .lrf, .odt, .pdf, .prc, .pdb, .pml, .rb, .rtf, .snb, .tcr, .txtz_
  - _Note: .acsm requires an additional Calibre plugin_

#### **Automatic Enforcement of Changes made to Covers &amp; Metadata through the Calibre-Web UI!** 👀📔
- In stock Calibre-Web, any changes made to a book&#039;s **Cover and/or Metadata** are only applied to how the book appears in the Calibre-Web UI, changing nothing in the ebook&#039;s files like you would expect
- This results in a frustrating situation for many CW users who utilise CW&#039;s Send-To-Kindle function, and are disappointed to find that the High-Quality Covers they picked out and carefully chosen Metadata they sourced are completely absent on all their other devices! UGH!
- CWA&#039;s **Automatic Cover &amp; Metadata Enforcement Feature** makes it so that **WHATEVER** you changes you make to **YOUR** books, **_are made to the books themselves_**, as well as in the Web UI, **making what you see, what you get.**

![Cover Enforcement CWA](README_images/cwa-enforcer-diagram.png &quot;CWA 1.2.0 Cover Enforcement Diagram&quot;)

#### **Batch Editing &amp; Deletion!** 🗂️🗄️
- Say goodbye to clicking that edit button again, and again, and again just to remove or edit a single series!
- To use, simply navigate to the `Books List`page on the left hand side of the Web UI, select the books you wish to edit/ delete and use the buttons either above the table or within the headers to do whatever you need!
- _Courtesy of [@jmarmstrong1207](https://github.com/jmarmstrong1207)_

![](/README_images/cwa-bulk-editting-diagram.png)

#### **Automated Back Up Service** 🔒
- Worried what will happen if something goes wrong during one of CWA&#039;s automated functions? Don&#039;t be!
- By default, the originals all files processed by CWA are stored in `/config/processed_books` though this can be toggled in the CWA Settings panel

#### **Automatic EPUB Fixer Service** 🔨
- Ever had it where you&#039;re super excited to start reading your next book but for some reason, Amazon&#039;s Send-to-Kindle service just keeps rejecting it? Well no more!

- Originally developed by [innocenat](https://github.com/innocenat/kindle-epub-fix), this tool corrects the following potential issues for every EPUB processed by CWA:
  - Fixes UTF-8 encoding problem by adding UTF-8 declaration if no encoding is specified
  - Fixes hyperlink problem (result in Amazon rejecting the EPUB) when NCX table of content link to `&lt;body&gt;` with ID hash.
  - Detect invalid and/or missing language tag in metadata, and prompt user to select new language.
  - Remove stray `&lt;img&gt;` tags with no source field.
  - Resolves several EPUB compatibility issues, such as UTF-8 encoding, hyperlink problems, invalid/missing language tags, and stray image tags.
- This **ensures maximum comparability** for each EPUB file with the Amazon **Send-to-Kindle** service and for those who don&#039;t use Amazon devices, has the side benefit of cleaning up your lower quality files!
- Enabled by default but can be toggled in settings.
- Files processed by the EPUB-Fixer service are by default automatically backed up to `/config/processed_books` however this can also be toggled in the settings.
- Bulk processing of whole library with progress tracking available in the Admin Panel
- Available via both the Web UI and CLI

#### **Simple to use Multi-Format Conversion Service** 🌌
- This utility gives the user the option to either keep a copy of the original of all converted files in `/config/processed_books` or to trust the process and have CWA simply convert and replace those files (not recommended)
- Full usage details can be found [here](#the-convert-library-tool)

![CWA Convert Library Web UI](/README_images/CWA-new-process-ui.gif)

#### **Additional Metadata Providers** 🗃️
- Users can now make use of [isbndb.com](https://isbndb.com/)&#039;s huge database when fetching metadata for the books in their library!
- Access is being provided via [ibdb.dev](https://ibdb.dev/) thanks to a generous donation to the community by [@chad3814](https://www.github.com/chad3814)
- [Hardcover](https://hardcover.app/) is also currently in the process of being added to CWA as a Metadata Provider

#### **KOReader Syncing (KOSync)** 📖⚡
- CWA now includes built-in KOReader syncing functionality, providing a modern alternative to traditional KOReader sync servers
- **Universal KOReader Syncer:** Works across all KOReader-compatible devices, storing sync data in a readable format for future CWA features
- **Modern Authentication:** Uses RFC 7617 compliant header-based authentication instead of legacy MD5 hashing for enhanced security
- **CWA Integration:** Leverages your existing CWA user accounts and permissions - no additional server setup required
- **Easy Installation:** Plugin and setup instructions are available directly from your CWA instance at `/kosync`

#### **Server Stats Tracking Page** 📍📊
  - Ever wondered how many times CWA has been there for you in the background? Check out the CWA Stats page to see a fun list of statistics showing how many times CWA has been there to make your life just that little bit easier
- A database also exists to keep track of any and all enforcements, imports, conversions &amp; fixes both for peace of mind and to make the checking of any bugs or weird behaviour easier
  &lt;!-- - Full documentation can be found below [here](#checking-the-cover-enforcement-logs) --&gt;

![CWA Server Stats Page](/README_images/cwa-server-stats-page.png)

#### **Library Auto-Detect** 📚🕵️
  - Made to **MASSIVELY** simplify the setup process for both **new and existing users** alike
  - **New Users without existing Libraries:** 🆕
    - **No library? No problem!**
    - New users without existing Calibre Libraries no longer need to copy and paste `metadata.db` files and point to their location in the Web UI, CWA will now automatically detect the lack of Library in your given bind and automatically create a new one for you! It will even automatically register it with the Web UI so you can really hit the ground running
  - **New or Existing Users with Existing Libraries:**
    - Simply bind a directory containing your Calibre Library (search is done recursively so it doesn&#039;t matter how deep in the directory it is) and CWA will now automatically find it and mount it to the Web UI
    - Should you bind a directory with more than 1 Calibre Library in it, CWA will intelligently compare the disk sizes of all discovered libraries and mount the largest one
      - _CWA supports only one library per instance though support for multiple libraries is being investigated for future releases_
      - _In the meantime, users with multiple libraries who don&#039;t want to consolidate them are advised to run multiple, parallel instances_

#### **Easy Dark/ Light Mode Switching** ☀️🌙
  - **Switch between Light &amp; Dark Modes in just one click from anywhere in the Web UI!**
  - Simply click/tap the 🕶️ icon on the  Web UI&#039;s navbar and switch between themes at your leisure

#### **Internal Update Notification System** 🛎️
  - Users will now be automatically notified of the availability of new updates from within the Web UI
  - Automatically triggered by a difference between the version number of the most recent GitHub release and the version installed
  - Set to only show once per calendar day until updated as to not be annoying
  - _Visible to Admin users only_

#### **Manual Library Refresh** ♻️
  - Ever had books get stuck in the ingest folder after an unexpected power-cut ect.? Well say goodbye to having to manually copy the books to be ingested back in and out of the ingest folder, simply press the `Refresh Library` button on the navbar of the Web UI and anything still sitting in the ingest folder will be automatically ingested!

#### **Auto-Compression of Backed Up Files** 🤐
  - Just before midnight each day, the CWA-Auto-Zipper service will automatically zip together all files processed that day.
  - Minimises disk space usage and helps keep back up files as organised as possible
  - __Enabled by default but can be disabled in the CWA Settings page in the Admin panel__

![Calibre-Web Automated](README_images/cwa-bulk-editting-diagram.png &quot;Calibre-Web Automated Bulk Editing &amp; Bulk Deletion&quot;)

# Features Currently Under Active Development and on our Roadmap 🏗️🛣️

#### High Priority 🚨

- Integration of CWA with [Hardcover](https://hardcover.app/) 📚
  - Ability to use Hardcover as a Metadata Provider
  - Ability to sync read progress with your Hardcover account! (Kobo users only)
- A companion project to integrate CWA with the Friendliest &amp; Warmest Place on the Internet 🐭🧀
- Support for Calibre Plugins e.g. deDRM 🔌
- Split Libraries (having your Calibre Library and books in separate locations)

#### Lower Priority 🌱

- Notification system integrations e.g. Telegram, Gotify, ntfy ect. 📧
- Possible Prowlarr Integration 🐯

Please suggest any ideas or wishes you might have! we&#039;re open to anything!

# How To Install 📖

## Quick Install 🚀

1. Download the Docker Compose template file using the command below:

```
curl -OL https://raw.githubusercontent.com/crocodilestick/calibre-web-automated/main/docker-compose.yml
```

2. Move the compose file to an empty folder (e.g. ~/docker/calibre-web-automated/docker-compose.yml). This will be used to store the server data and library

3. Edit the compose file using the comments to help, filling in your Timezone (optional) and desired binds

4. Navigate to where you downloaded the Compose file using `cd` and run:

```
docker compose up -d
```

And that&#039;s you off to the races! 🥳 HOWEVER to avoid potential problems and ensure maximum functionality, we recommend carrying out these [Post-Install Tasks Here](#post-install-tasks).

---
## Using Docker Compose 🐋⭐(Recommended)

### 1. Setup the container using the Docker Compose template below: 🐋📜

  ~~~ bash
---
services:
  calibre-web-automated:
    image: crocodilestick/calibre-web-automated:latest
    container_name: calibre-web-automated
    environment:
      # Only change these if you know what you&#039;re doing
      - PUID=1000
      - PGID=1000
      # Edit to match your current timezone https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
      - TZ=UTC
      # Hardcover API Key required for Hardcover as a Metadata Provider, get one here: https://docs.hardcover.app/api/getting-started/
      - HARDCOVER_TOKEN=your_hardcover_api_key_here
    volumes:
      # CW users migrating should stop their existing CW instance, make a copy of the config folder, and bind that here to carry over all of their user settings ect.
      - /path/to/config/folder:/config 
      # This i

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[bchiang7/v4]]></title>
            <link>https://github.com/bchiang7/v4</link>
            <guid>https://github.com/bchiang7/v4</guid>
            <pubDate>Wed, 13 Aug 2025 00:04:22 GMT</pubDate>
            <description><![CDATA[Fourth iteration of my personal website built with Gatsby]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/bchiang7/v4">bchiang7/v4</a></h1>
            <p>Fourth iteration of my personal website built with Gatsby</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,011</p>
            <p>Forks: 4,117</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;img alt=&quot;Logo&quot; src=&quot;https://raw.githubusercontent.com/bchiang7/v4/main/src/images/logo.png&quot; width=&quot;100&quot; /&gt;
&lt;/div&gt;
&lt;h1 align=&quot;center&quot;&gt;
  brittanychiang.com - v4
&lt;/h1&gt;
&lt;p align=&quot;center&quot;&gt;
  The fourth iteration of &lt;a href=&quot;https://brittanychiang.com&quot; target=&quot;_blank&quot;&gt;brittanychiang.com&lt;/a&gt; built with &lt;a href=&quot;https://www.gatsbyjs.org/&quot; target=&quot;_blank&quot;&gt;Gatsby&lt;/a&gt; and hosted with &lt;a href=&quot;https://www.netlify.com/&quot; target=&quot;_blank&quot;&gt;Netlify&lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  Previous iterations:
  &lt;a href=&quot;https://github.com/bchiang7/v1&quot; target=&quot;_blank&quot;&gt;v1&lt;/a&gt;,
  &lt;a href=&quot;https://github.com/bchiang7/v2&quot; target=&quot;_blank&quot;&gt;v2&lt;/a&gt;,
  &lt;a href=&quot;https://github.com/bchiang7/bchiang7.github.io&quot; target=&quot;_blank&quot;&gt;v3&lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://app.netlify.com/sites/brittanychiang/deploys&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://api.netlify.com/api/v1/badges/1963b488-7b78-48c9-9e2d-6fb5e47ab3af/deploy-status&quot; alt=&quot;Netlify Status&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

![demo](https://raw.githubusercontent.com/bchiang7/v4/main/src/images/demo.png)

## 🚨 Forking this repo (please read!)

Many people have contacted me asking me if they can use this code for their own website, and the answer to that question is usually **yes, with attribution**.

I value keeping my site open source, but as you all know, _**plagiarism is bad**_. It&#039;s always disheartening whenever I find that someone has copied my site without giving me credit. I spent a non-trivial amount of effort building and designing this iteration of my website, and I am proud of it! All I ask of you all is to not claim this effort as your own.

Please also note that I did not build this site with the intention of it being a starter theme, so if you have questions about implementation, please refer to the [Gatsby docs](https://www.gatsbyjs.org/docs/).

### TL;DR

Yes, you can fork this repo. Please give me proper credit by linking back to [brittanychiang.com](https://brittanychiang.com). Thanks!

## 🛠 Installation &amp; Set Up

1. Install the Gatsby CLI

   ```sh
   npm install -g gatsby-cli
   ```

2. Install and use the correct version of Node using [NVM](https://github.com/nvm-sh/nvm)

   ```sh
   nvm install
   ```

3. Install dependencies

   ```sh
   yarn
   ```

4. Start the development server

   ```sh
   npm start
   ```

## 🚀 Building and Running for Production

1. Generate a full static production build

   ```sh
   npm run build
   ```

1. Preview the site as it will appear once deployed

   ```sh
   npm run serve
   ```

## 🎨 Color Reference

| Color          | Hex                                                                |
| -------------- | ------------------------------------------------------------------ |
| Navy           | ![#0a192f](https://via.placeholder.com/10/0a192f?text=+) `#0a192f` |
| Light Navy     | ![#112240](https://via.placeholder.com/10/0a192f?text=+) `#112240` |
| Lightest Navy  | ![#233554](https://via.placeholder.com/10/303C55?text=+) `#233554` |
| Slate          | ![#8892b0](https://via.placeholder.com/10/8892b0?text=+) `#8892b0` |
| Light Slate    | ![#a8b2d1](https://via.placeholder.com/10/a8b2d1?text=+) `#a8b2d1` |
| Lightest Slate | ![#ccd6f6](https://via.placeholder.com/10/ccd6f6?text=+) `#ccd6f6` |
| White          | ![#e6f1ff](https://via.placeholder.com/10/e6f1ff?text=+) `#e6f1ff` |
| Green          | ![#64ffda](https://via.placeholder.com/10/64ffda?text=+) `#64ffda` |
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[iancoleman/bip39]]></title>
            <link>https://github.com/iancoleman/bip39</link>
            <guid>https://github.com/iancoleman/bip39</guid>
            <pubDate>Wed, 13 Aug 2025 00:04:21 GMT</pubDate>
            <description><![CDATA[A web tool for converting BIP39 mnemonic codes]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/iancoleman/bip39">iancoleman/bip39</a></h1>
            <p>A web tool for converting BIP39 mnemonic codes</p>
            <p>Language: JavaScript</p>
            <p>Stars: 3,916</p>
            <p>Forks: 1,557</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[jquery/jquery]]></title>
            <link>https://github.com/jquery/jquery</link>
            <guid>https://github.com/jquery/jquery</guid>
            <pubDate>Wed, 13 Aug 2025 00:04:20 GMT</pubDate>
            <description><![CDATA[jQuery JavaScript Library]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/jquery/jquery">jquery/jquery</a></h1>
            <p>jQuery JavaScript Library</p>
            <p>Language: JavaScript</p>
            <p>Stars: 59,542</p>
            <p>Forks: 20,557</p>
            <p>Stars today: 0 stars today</p>
            <h2>README</h2><pre># [jQuery](https://jquery.com/) — New Wave JavaScript

Meetings are currently held on the [matrix.org platform](https://matrix.to/#/#jquery_meeting:gitter.im).

Meeting minutes can be found at [meetings.jquery.org](https://meetings.jquery.org/category/core/).

The latest version of jQuery is available at [https://jquery.com/download/](https://jquery.com/download/).

## Version support

| Version | Branch     | Status   |
| ------- | ---------- | -------- |
| 4.x     | main       | Beta     |
| 3.x     | 3.x-stable | Active   |
| 2.x     | 2.x-stable | Inactive |
| 1.x     | 1.x-stable | Inactive |

Once 4.0.0 final is released, the 3.x branch will continue to receive updates for a limited time. The 2.x and 1.x branches are no longer supported.

Commercial support for inactive versions is available from [HeroDevs](https://herodevs.com/support/jquery-nes).

Learn more about our [version support](https://jquery.com/support/).

## Contribution Guides

In the spirit of open source software development, jQuery always encourages community code contribution. To help you get started and before you jump into writing code, be sure to read these important contribution guidelines thoroughly:

1. [Getting Involved](https://contribute.jquery.org/)
2. [Core Style Guide](https://contribute.jquery.org/style-guide/js/)
3. [Writing Code for jQuery Projects](https://contribute.jquery.org/code/)

### References to issues/PRs

GitHub issues/PRs are usually referenced via `gh-NUMBER`, where `NUMBER` is the numerical ID of the issue/PR. You can find such an issue/PR under `https://github.com/jquery/jquery/issues/NUMBER`.

jQuery has used a different bug tracker - based on Trac - in the past, available under [bugs.jquery.com](https://bugs.jquery.com/). It is being kept in read only mode so that referring to past discussions is possible. When jQuery source references one of those issues, it uses the pattern `trac-NUMBER`, where `NUMBER` is the numerical ID of the issue. You can find such an issue under `https://bugs.jquery.com/ticket/NUMBER`.

## Environments in which to use jQuery

- [Browser support](https://jquery.com/browser-support/)
- jQuery also supports Node, browser extensions, and other non-browser environments.

## What you need to build your own jQuery

To build jQuery, you need to have the latest Node.js/npm and git 1.7 or later. Earlier versions might work, but are not supported.

For Windows, you have to download and install [git](https://git-scm.com/downloads) and [Node.js](https://nodejs.org/en/download/).

macOS users should install [Homebrew](https://brew.sh/). Once Homebrew is installed, run `brew install git` to install git,
and `brew install node` to install Node.js.

Linux/BSD users should use their appropriate package managers to install git and Node.js, or build from source
if you swing that way. Easy-peasy.

## How to build your own jQuery

First, [clone the jQuery git repo](https://help.github.com/en/github/creating-cloning-and-archiving-repositories/cloning-a-repository).

Then, enter the jquery directory, install dependencies, and run the build script:

```bash
cd jquery
npm install
npm run build
```

The built version of jQuery will be placed in the `dist/` directory, along with a minified copy and associated map file.

## Build all jQuery release files

To build all variants of jQuery, run the following command:

```bash
npm run build:all
```

This will create all of the variants that jQuery includes in a release, including `jquery.js`, `jquery.slim.js`, `jquery.module.js`, and `jquery.slim.module.js` along their associated minified files and sourcemaps.

`jquery.module.js` and `jquery.slim.module.js` are [ECMAScript modules](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules) that export `jQuery` and `$` as named exports are placed in the `dist-module/` directory rather than the `dist/` directory.

## Building a Custom jQuery

The build script can be used to create a custom version of jQuery that includes only the modules you need.

Any module may be excluded except for `core`. When excluding `selector`, it is not removed but replaced with a small wrapper around native `querySelectorAll` (see below for more information).

### Build Script Help

To see the full list of available options for the build script, run the following:

```bash
npm run build -- --help
```

### Modules

To exclude a module, pass its path relative to the `src` folder (without the `.js` extension) to the `--exclude` option. When using the `--include` option, the default includes are dropped and a build is created with only those modules.

Some example modules that can be excluded or included are:

- **ajax**: All AJAX functionality: `$.ajax()`, `$.get()`, `$.post()`, `$.ajaxSetup()`, `.load()`, transports, and ajax event shorthands such as `.ajaxStart()`.
- **ajax/xhr**: The XMLHTTPRequest AJAX transport only.
- **ajax/script**: The `&lt;script&gt;` AJAX transport only; used to retrieve scripts.
- **ajax/jsonp**: The JSONP AJAX transport only; depends on the ajax/script transport.
- **css**: The `.css()` method. Also removes **all** modules depending on css (including **effects**, **dimensions**, and **offset**).
- **css/showHide**: Non-animated `.show()`, `.hide()` and `.toggle()`; can be excluded if you use classes or explicit `.css()` calls to set the `display` property. Also removes the **effects** module.
- **deprecated**: Methods documented as deprecated but not yet removed.
- **dimensions**: The `.width()` and `.height()` methods, including `inner-` and `outer-` variations.
- **effects**: The `.animate()` method and its shorthands such as `.slideUp()` or `.hide(&quot;slow&quot;)`.
- **event**: The `.on()` and `.off()` methods and all event functionality.
- **event/trigger**: The `.trigger()` and `.triggerHandler()` methods.
- **offset**: The `.offset()`, `.position()`, `.offsetParent()`, `.scrollLeft()`, and `.scrollTop()` methods.
- **wrap**: The `.wrap()`, `.wrapAll()`, `.wrapInner()`, and `.unwrap()` methods.
- **core/ready**: Exclude the ready module if you place your scripts at the end of the body. Any ready callbacks bound with `jQuery()` will simply be called immediately. However, `jQuery(document).ready()` will not be a function and `.on(&quot;ready&quot;, ...)` or similar will not be triggered.
- **deferred**: Exclude jQuery.Deferred. This also excludes all modules that rely on Deferred, including **ajax**, **effects**, and **queue**, but replaces **core/ready** with **core/ready-no-deferred**.
- **exports/global**: Exclude the attachment of global jQuery variables ($ and jQuery) to the window.
- **exports/amd**: Exclude the AMD definition.

- **selector**: The full jQuery selector engine. When this module is excluded, it is replaced with a rudimentary selector engine based on the browser&#039;s `querySelectorAll` method that does not support jQuery selector extensions or enhanced semantics. See the [selector-native.js](https://github.com/jquery/jquery/blob/main/src/selector-native.js) file for details.

*Note*: Excluding the full `selector` module will also exclude all jQuery selector extensions (such as `effects/animatedSelector` and `css/hiddenVisibleSelectors`).

##### AMD name

You can set the module name for jQuery&#039;s AMD definition. By default, it is set to &quot;jquery&quot;, which plays nicely with plugins and third-party libraries, but there may be cases where you&#039;d like to change this. Pass it to the `--amd` parameter:

```bash
npm run build -- --amd=&quot;custom-name&quot;
```

Or, to define anonymously, leave the name blank.

```bash
npm run build -- --amd
```

##### File name and directory

The default name for the built jQuery file is `jquery.js`; it is placed under the `dist/` directory. It&#039;s possible to change the file name using `--filename` and the directory using `--dir`. `--dir` is relative to the project root.

```bash
npm run build -- --slim --filename=&quot;jquery.slim.js&quot; --dir=&quot;/tmp&quot;
```

This would create a slim version of jQuery and place it under `tmp/jquery.slim.js`.

##### ECMAScript Module (ESM) mode

By default, jQuery generates a regular script JavaScript file. You can also generate an ECMAScript module exporting `jQuery` as the default export using the `--esm` parameter:

```bash
npm run build -- --filename=jquery.module.js --esm
```

##### Factory mode

By default, jQuery depends on a global `window`. For environments that don&#039;t have one, you can generate a factory build that exposes a function accepting `window` as a parameter that you can provide externally (see [`README` of the published package](build/fixtures/README.md) for usage instructions). You can generate such a factory using the `--factory` parameter:

```bash
npm run build -- --filename=jquery.factory.js --factory
```

This option can be mixed with others like `--esm` or `--slim`:

```bash
npm run build -- --filename=jquery.factory.slim.module.js --factory --esm --slim --dir=&quot;/dist-module&quot;
```

#### Custom Build Examples

Create a custom build using `npm run build`, listing the modules to be excluded. Excluding a top-level module also excludes its corresponding directory of modules.

Exclude all **ajax** functionality:

```bash
npm run build -- --exclude=ajax
```

Excluding **css** removes modules depending on CSS: **effects**, **offset**, **dimensions**.

```bash
npm run build -- --exclude=css
```

Exclude a bunch of modules (`-e` is an alias for `--exclude`):

```bash
npm run build -- -e ajax/jsonp -e css -e deprecated -e dimensions -e effects -e offset -e wrap
```

There is a special alias to generate a build with the same configuration as the official jQuery Slim build:

```bash
npm run build -- --filename=jquery.slim.js --slim
```

Or, to create the slim build as an esm module:

```bash
npm run build -- --filename=jquery.slim.module.js --slim --esm
```

*Non-official custom builds are not regularly tested. Use them at your own risk.*

## Running the Unit Tests

Make sure you have the necessary dependencies:

```bash
npm install
```

Start `npm start` to auto-build jQuery as you work:

```bash
npm start
```

Run the unit tests with a local server that supports PHP. Ensure that you run the site from the root directory, not the &quot;test&quot; directory. No database is required. Pre-configured php local servers are available for Windows and Mac. Here are some options:

- Windows: [WAMP download](https://www.wampserver.com/en/)
- Mac: [MAMP download](https://www.mamp.info/en/downloads/)
- Linux: [Setting up LAMP](https://www.linux.com/training-tutorials/easy-lamp-server-installation/)
- [Mongoose (most platforms)](https://code.google.com/p/mongoose/)

## Essential Git

As the source code is handled by the Git version control system, it&#039;s useful to know some features used.

### Cleaning

If you want to purge your working directory back to the status of upstream, the following commands can be used (remember everything you&#039;ve worked on is gone after these):

```bash
git reset --hard upstream/main
git clean -fdx
```

### Rebasing

For feature/topic branches, you should always use the `--rebase` flag to `git pull`, or if you are usually handling many temporary &quot;to be in a github pull request&quot; branches, run the following to automate this:

```bash
git config branch.autosetuprebase local
```

(see `man git-config` for more information)

### Handling merge conflicts

If you&#039;re getting merge conflicts when merging, instead of editing the conflicted files manually, you can use the feature
`git mergetool`. Even though the default tool `xxdiff` looks awful/old, it&#039;s rather useful.

The following are some commands that can be used there:

- `Ctrl + Alt + M` - automerge as much as possible
- `b` - jump to next merge conflict
- `s` - change the order of the conflicted lines
- `u` - undo a merge
- `left mouse button` - mark a block to be the winner
- `middle mouse button` - mark a line to be the winner
- `Ctrl + S` - save
- `Ctrl + Q` - quit

## [QUnit](https://api.qunitjs.com) Reference

### Test methods

```js
expect( numAssertions );
stop();
start();
```

*Note*: QUnit&#039;s eventual addition of an argument to stop/start is ignored in this test suite so that start and stop can be passed as callbacks without worrying about their parameters.

### Test assertions

```js
ok( value, [message] );
equal( actual, expected, [message] );
notEqual( actual, expected, [message] );
deepEqual( actual, expected, [message] );
notDeepEqual( actual, expected, [message] );
strictEqual( actual, expected, [message] );
notStrictEqual( actual, expected, [message] );
throws( block, [expected], [message] );
```

## Test Suite Convenience Methods Reference

See [test/data/testinit.js](https://github.com/jquery/jquery/blob/main/test/data/testinit.js).

### Returns an array of elements with the given IDs

```js
q( ... );
```

Example:

```js
q( &quot;main&quot;, &quot;foo&quot;, &quot;bar&quot; );

=&gt; [ div#main, span#foo, input#bar ]
```

### Asserts that a selection matches the given IDs

```js
t( testName, selector, [ &quot;array&quot;, &quot;of&quot;, &quot;ids&quot; ] );
```

Example:

```js
t(&quot;Check for something&quot;, &quot;//[a]&quot;, [&quot;foo&quot;, &quot;bar&quot;]);
```

### Fires a native DOM event without going through jQuery

```js
fireNative( node, eventType );
```

Example:

```js
fireNative( jQuery( &quot;#elem&quot; )[ 0 ], &quot;click&quot; );
```

### Add random number to url to stop caching

```js
url( &quot;some/url&quot; );
```

Example:

```js
url( &quot;index.html&quot; );

=&gt; &quot;data/index.html?10538358428943&quot;


url( &quot;mock.php?foo=bar&quot; );

=&gt; &quot;data/mock.php?foo=bar&amp;10538358345554&quot;
```

### Run tests in an iframe

Some tests may require a document other than the standard test fixture, and
these can be run in a separate iframe. The actual test code and assertions
remain in jQuery&#039;s main test files; only the minimal test fixture markup
and setup code should be placed in the iframe file.

```js
testIframe( testName, fileName,
  function testCallback(
      assert, jQuery, window, document,
	  [ additional args ] ) {
	...
  } );
```

This loads a page, constructing a url with fileName `&quot;./data/&quot; + fileName`.
The iframed page determines when the callback occurs in the test by
including the &quot;/test/data/iframeTest.js&quot; script and calling
`startIframeTest( [ additional args ] )` when appropriate. Often this
will be after either document ready or `window.onload` fires.

The `testCallback` receives the QUnit `assert` object created by `testIframe`
for this test, followed by the global `jQuery`, `window`, and `document` from
the iframe. If the iframe code passes any arguments to `startIframeTest`,
they follow the `document` argument.

## Questions?

If you have any questions, please feel free to ask on the
[Developing jQuery Core forum](https://forum.jquery.com/developing-jquery-core) or in #jquery on [libera](https://web.libera.chat/).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[advplyr/audiobookshelf]]></title>
            <link>https://github.com/advplyr/audiobookshelf</link>
            <guid>https://github.com/advplyr/audiobookshelf</guid>
            <pubDate>Wed, 13 Aug 2025 00:04:19 GMT</pubDate>
            <description><![CDATA[Self-hosted audiobook and podcast server]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/advplyr/audiobookshelf">advplyr/audiobookshelf</a></h1>
            <p>Self-hosted audiobook and podcast server</p>
            <p>Language: JavaScript</p>
            <p>Stars: 9,696</p>
            <p>Forks: 669</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>