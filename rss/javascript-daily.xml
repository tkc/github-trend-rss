<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Tue, 24 Jun 2025 00:04:43 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[microsoft/Web-Dev-For-Beginners]]></title>
            <link>https://github.com/microsoft/Web-Dev-For-Beginners</link>
            <guid>https://github.com/microsoft/Web-Dev-For-Beginners</guid>
            <pubDate>Tue, 24 Jun 2025 00:04:43 GMT</pubDate>
            <description><![CDATA[24 Lessons, 12 Weeks, Get Started as a Web Developer]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/microsoft/Web-Dev-For-Beginners">microsoft/Web-Dev-For-Beginners</a></h1>
            <p>24 Lessons, 12 Weeks, Get Started as a Web Developer</p>
            <p>Language: JavaScript</p>
            <p>Stars: 89,275</p>
            <p>Forks: 13,488</p>
            <p>Stars today: 383 stars today</p>
            <h2>README</h2><pre>[![GitHub license](https://img.shields.io/github/license/microsoft/Web-Dev-For-Beginners.svg)](https://github.com/microsoft/Web-Dev-For-Beginners/blob/master/LICENSE)
[![GitHub contributors](https://img.shields.io/github/contributors/microsoft/Web-Dev-For-Beginners.svg)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/graphs/contributors/)
[![GitHub issues](https://img.shields.io/github/issues/microsoft/Web-Dev-For-Beginners.svg)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/issues/)
[![GitHub pull-requests](https://img.shields.io/github/issues-pr/microsoft/Web-Dev-For-Beginners.svg)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/pulls/)
[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)

[![GitHub watchers](https://img.shields.io/github/watchers/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;label=Watch&amp;maxAge=2592000)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/watchers/)
[![GitHub forks](https://img.shields.io/github/forks/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;label=Fork&amp;maxAge=2592000)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/network/)
[![GitHub stars](https://img.shields.io/github/stars/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;label=Star&amp;maxAge=2592000)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/stargazers/)

[![](https://dcbadge.vercel.app/api/server/ByRwuEEgH4)](https://discord.gg/zxKYvhSnVp?WT.mc_id=academic-000002-leestott)

[![Open in Visual Studio Code](https://img.shields.io/static/v1?logo=visualstudiocode&amp;label=&amp;message=Open%20in%20Visual%20Studio%20Code&amp;labelColor=2c2c32&amp;color=007acc&amp;logoColor=007acc)](https://open.vscode.dev/microsoft/Web-Dev-For-Beginners)

# Web Development for Beginners - A Curriculum

Learn the fundamentals of web development with our 12-week comprehensive course by Microsoft Cloud Advocates. Each of the 24 lessons dives into JavaScript, CSS, and HTML through hands-on projects like terrariums, browser extensions, and space games. Engage with quizzes, discussions, and practical assignments. Enhance your skills and optimize your knowledge retention with our effective project-based pedagogy. Start your coding journey today!

#### üßë‚Äçüéì _Are you a student?_

Visit [**Student Hub page**](https://docs.microsoft.com/learn/student-hub/?WT.mc_id=academic-77807-sagibbon) where you will find beginner resources, Student packs and even ways to get a free certificate voucher. This is the page you want to bookmark and check from time to time as we switch out content monthly.

### üì£ Announcement - _New Curriculum_ on Generative AI for JavaScript was just released

Don&#039;t miss our new Generative AI curriculum!

Visit [https://aka.ms/genai-js-course](https://aka.ms/genai-js-course) to get started!

&lt;div&gt;
  &lt;img src=&quot;./images/background.png&quot; width=&quot;600px&quot; /&gt;
&lt;/div&gt;

- Lessons covering everything from basics to RAG.
- Interact with historical characters using GenAI and our companion app.
- Fun and engaging narrative, you&#039;ll be time traveling!

&lt;div&gt;
  &lt;img src=&quot;./images/character.png&quot; width=&quot;600px&quot; /&gt;
&lt;/div&gt;

Each lesson includes an assignment to complete, a knowledge check and a challenge to guide you on learning topics like:
- Prompting and prompt engineering
- Text and image app generation
- Search apps

Visit [https://aka.ms/genai-js-course]([https://aka.ms/genai-js-course) to get started!



## üå± Getting Started

&gt; **Teachers**, we have [included some suggestions](for-teachers.md) on how to use this curriculum. We&#039;d love your feedback [in our discussion forum](https://github.com/microsoft/Web-Dev-For-Beginners/discussions/categories/teacher-corner)!

**[Learners](https://aka.ms/student-page/?WT.mc_id=academic-77807-sagibbon)**, for each lesson, start with a pre-lecture quiz and follow through with reading the lecture material, completing the various activities and check your understanding with the post-lecture quiz.

To enhance your learning experience, connect with your peers to work on the projects together! Discussions are encouraged in our [discussion forum](https://github.com/microsoft/Web-Dev-For-Beginners/discussions) where our team of moderators will be available to answer your questions.

To further your education, we highly recommend exploring [Microsoft Learn](https://learn.microsoft.com/users/wirelesslife/collections/p1ddcy5jwy0jkm?WT.mc_id=academic-77807-sagibbon) for additional study materials.

### üìã Setting up your environment

This curriculum has a development environment ready to go! As you get started you can choose to run the curriculum in a [Codespace](https://github.com/features/codespaces/) (_a browser-based, no installs needed environment_), or locally on your computer using a text editor such as [Visual Studio Code](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon).

#### Create your repository
For you to easily save your work, it is recommended that you create your own copy of this repository. You can do this by clicking the **Use this template** button at the top of the page. This will create a new repository in your GitHub account with a copy of the curriculum.

Follow these steps:
1. **Fork the Repository**: Click on the &quot;Fork&quot; button at the top-right corner of this page.
2. **Clone the Repository**:   `git clone https://github.com/microsoft/Web-Dev-For-Beginners.git`

#### Running the curriculum in a Codespace

In your copy of this repository that you created, click the **Code** button and select **Open with Codespaces**. This will create a new Codespace for you to work in.

&lt;img src=&quot;./images/createcodespace.png&quot; alt=&quot;Create codespace&quot; style=&quot;width:270px;&quot;/&gt;

#### Running the curriculum locally on your computer

To run this curriculum locally on your computer, you will need a text editor, a browser and a command line tool. Our first lesson, [Introduction to Programming Languages and Tools of the Trade](https://github.com/microsoft/Web-Dev-For-Beginners/tree/main/1-getting-started-lessons/1-intro-to-programming-languages), will walk you through various options for each of these tools for you to select what works best for you.

Our recommendation is to use [Visual Studio Code](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon) as your editor, which also has a built-in [Terminal](https://code.visualstudio.com/docs/terminal/basics/?WT.mc_id=academic-77807-sagibbon). You can download Visual Studio Code [here](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon).


1. Clone your repository to your computer. You can do this by clicking the **Code** button and copying the URL:

    &lt;img src=&quot;./images/createcodespace.png&quot; alt=&quot;Copy your repository URL&quot; style=&quot;width:270px;&quot;/&gt;

    Then, open [Terminal](https://code.visualstudio.com/docs/terminal/basics/?WT.mc_id=academic-77807-sagibbon) within [Visual Studio Code](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon) and run the following command, replacing `&lt;your-repository-url&gt;` with the URL you just copied:

    ```bash 
    git clone &lt;your-repository-url&gt;
    ```

2. Open the folder in Visual Studio Code. You can do this by clicking **File** &gt; **Open Folder** and selecting the folder you just cloned.


&gt;  Recommended Visual Studio Code extensions:
&gt;
&gt; * [Live Server](https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer&amp;WT.mc_id=academic-77807-sagibbon) - to preview HTML pages within Visual Studio Code
&gt; * [Copilot](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot&amp;WT.mc_id=academic-77807-sagibbon) - to help you write code faster

## üìÇ Each lesson includes:

- optional sketchnote
- optional supplemental video
- pre-lesson warmup quiz
- written lesson
- for project-based lessons, step-by-step guides on how to build the project
- knowledge checks
- a challenge
- supplemental reading
- assignment
- post-lesson quiz

&gt; **A note about quizzes**: All quizzes are contained in the Quiz-app folder, 48 total quizzes of three questions each. They are linked from within the lessons the quiz app can be run locally or deployed to Azure; follow the instruction in the `quiz-app` folder. They are gradually being localized.

## üóÉÔ∏è Lessons

|     |                       Project Name                       |                            Concepts Taught                             | Learning Objectives                                                                                                                 |                                                         Linked Lesson                                                          |         Author          |
| :-: | :------------------------------------------------------: | :--------------------------------------------------------------------: | ----------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------: | :---------------------: |
| 01  |                     Getting Started                      |           Introduction to Programming and Tools of the Trade           | Learn the basic underpinnings behind most programming languages and about software that helps professional developers do their jobs | [Intro to Programming Languages and Tools of the Trade](/1-getting-started-lessons/1-intro-to-programming-languages/README.md) |         Jasmine         |
| 02  |                     Getting Started                      |             Basics of GitHub, includes working with a team             | How to use GitHub in your project, how to collaborate with others on a code base                                                    |                            [Intro to GitHub](/1-getting-started-lessons/2-github-basics/README.md)                             |          Floor          |
| 03  |                     Getting Started                      |                             Accessibility                              | Learn the basics of web accessibility                                                                                               |                       [Accessibility Fundamentals](/1-getting-started-lessons/3-accessibility/README.md)                       |       Christopher       |
| 04  |                        JS Basics                         |                         JavaScript Data Types                          | The basics of JavaScript data types                                                                                                 |                                       [Data Types](/2-js-basics/1-data-types/README.md)                                        |         Jasmine         |
| 05  |                        JS Basics                         |                         Functions and Methods                          | Learn about functions and methods to manage an application&#039;s logic flow                                                             |                              [Functions and Methods](/2-js-basics/2-functions-methods/README.md)                               | Jasmine and Christopher |
| 06  |                        JS Basics                         |                        Making Decisions with JS                        | Learn how to create conditions in your code using decision-making methods                                                           |                                 [Making Decisions](/2-js-basics/3-making-decisions/README.md)                                  |         Jasmine         |
| 07  |                        JS Basics                         |                            Arrays and Loops                            | Work with data using arrays and loops in JavaScript                                                                                 |                                   [Arrays and Loops](/2-js-basics/4-arrays-loops/README.md)                                    |         Jasmine         |
| 08  |       [Terrarium](/3-terrarium/solution/README.md)       |                            HTML in Practice                            | Build the HTML to create an online terrarium, focusing on building a layout                                                         |                                 [Introduction to HTML](/3-terrarium/1-intro-to-html/README.md)                                 |           Jen           |
| 09  |       [Terrarium](/3-terrarium/solution/README.md)       |                            CSS in Practice                             | Build the CSS to style the online terrarium, focusing on the basics of CSS including making the page responsive                     |                                  [Introduction to CSS](/3-terrarium/2-intro-to-css/README.md)                                  |           Jen           |
| 10  |            [Terrarium](/3-terrarium/solution/README.md)            |                 JavaScript Closures, DOM manipulation                  | Build the JavaScript to make the terrarium function as a drag/drop interface, focusing on closures and DOM manipulation             |                  [JavaScript Closures, DOM manipulation](/3-terrarium/3-intro-to-DOM-and-closures/README.md)                   |           Jen           |
| 11  |          [Typing Game](/4-typing-game/solution/README.md)          |                          Build a Typing Game                           | Learn how to use keyboard events to drive the logic of your JavaScript app                                                          |                                [Event-Driven Programming](/4-typing-game/typing-game/README.md)                                |       Christopher       |
| 12  | [Green Browser Extension](/5-browser-extension/solution/README.md) |                         Working with Browsers                          | Learn how browsers work, their history, and how to scaffold the first elements of a browser extension                               |                               [About Browsers](/5-browser-extension/1-about-browsers/README.md)                                |           Jen           |
| 13  | [Green Browser Extension](/5-browser-extension/solution/README.md) | Building a form, calling an API and storing variables in local storage | Build the JavaScript elements of your browser extension to call an API using variables stored in local storage                      |                [APIs, Forms, and Local Storage](/5-browser-extension/2-forms-browsers-local-storage/README.md)                 |           Jen           |
| 14  | [Green Browser Extension](/5-browser-extension/solution/README.md) |          Background processes in the browser, web performance          | Use the browser&#039;s background processes to manage the extension&#039;s icon; learn about web performance and some optimizations to make   |             [Background Tasks and Performance](/5-browser-extension/3-background-tasks-and-performance/README.md)              |           Jen           |
| 15  |           [Space Game](/6-space-game/solution/README.md)           |             More Advanced Game Development with JavaScript             | Learn about Inheritance using both Classes and Composition and the Pub/Sub pattern, in preparation for building a game              |                      [Introduction to Advanced Game Development](/6-space-game/1-introduction/README.md)                       |          Chris          |
| 16  |           [Space Game](/6-space-game/solution/README.md)           |                           Drawing to canvas                            | Learn about the Canvas API, used to draw elements to a screen                                                                       |                                [Drawing to Canvas](/6-space-game/2-drawing-to-canvas/README.md)                                |          Chris          |
| 17  |           [Space Game](/6-space-game/solution/README.md)           |                   Moving elements around the screen                    | Discover how elements can gain motion using the cartesian coordinates and the Canvas API                                            |                           [Moving Elements Around](/6-space-game/3-moving-elements-around/README.md)                           |          Chris          |
| 18  |           [Space Game](/6-space-game/solution/README.md)           |                          Collision detection                           | Make elements collide and react to each other using keypresses and provide a cooldown function to ensure performance of the game    |                              [Collision Detection](/6-space-game/4-collision-detection/README.md)                              |          Chris          |
| 19  |           [Space Game](/6-space-game/solution/README.md)           |                             Keeping score                              | Perform math calculations based on the game&#039;s status and performance                                                                |                                    [Keeping Score](/6-space-game/5-keeping-score/README.md)                                    |          Chris          |
| 20  |           [Space Game](/6-space-game/solution/README.md)           |                     Ending and restarting the game                     | Learn about ending and restarting the game, including cleaning up assets and resetting variable values                              |                                [The Ending Condition](/6-space-game/6-end-condition/README.md)                                 |          Chris          |
| 21  |         [Banking App](/7-bank-project/solution/README.md)          |                 HTML Templates and Routes in a Web App                 | Learn how to create the scaffold of a multipage website&#039;s architecture using routing and HTML templates                             |                            [HTML Templates and Routes](/7-bank-project/1-template-route/README.md)                             |          Yohan          |
| 22  |         [Banking App](/7-bank-project/solution/README.md)          |                  Build a Login and Registration Form                   | Learn about building forms and handling validation routines                                                                          |                                           [Forms](/7-bank-project/2-forms/README.md)                                           |          Yohan          |
| 23  |         [Banking App](/7-bank-project/solution/README.md)          |                   Methods of Fetching and Using Data                   | How data flows in and out of your app, how to fetch it, store it, and dispose of it                                                 |                                            [Data](/7-bank-project/3-data/README.md)                                            |          Yohan          |
| 24  |         [Banking App](/7-bank-project/solution/README.md)          |                      Concepts of State Management                      | Learn how your app retains state and how to manage it programmatically                                                              |                                [State Management](/7-bank-project/4-state-management/README.md)                                |          Yohan          |


## üè´ Pedagogy

Our curriculum is designed with two key pedagogical principles in mind:
* project-based learning
* frequent quizzes

The program teaches the fundamentals of JavaScript, HTML, and CSS, as well as the latest tools and techniques used by today&#039;s web developers. Students will have the opportunity to develop hands-on experience by building a typing game, virtual terrarium, eco-friendly browser extension, space-invader-style game, and a banking app for businesses. By the end of the 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[uBlockOrigin/uBOL-home]]></title>
            <link>https://github.com/uBlockOrigin/uBOL-home</link>
            <guid>https://github.com/uBlockOrigin/uBOL-home</guid>
            <pubDate>Tue, 24 Jun 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[uBO Lite home (MV3)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/uBlockOrigin/uBOL-home">uBlockOrigin/uBOL-home</a></h1>
            <p>uBO Lite home (MV3)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,044</p>
            <p>Forks: 74</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre># uBO Lite

| Browser | Install from ... | Browser | Install from ... |
| --- | --- | --- | --- |
| &lt;img src=&quot;https://github.com/user-attachments/assets/d5033882-0c94-424f-9e8b-e00ed832acf7&quot; alt=&quot;Get uBO Lite for Chromium&quot;&gt; | &lt;a href=&quot;https://chromewebstore.google.com/detail/ublock-origin-lite/ddkjiahejlhfcafbddmgiahcphecmpfh&quot;&gt;Chrome Web Store&lt;/a&gt; | &lt;img src=&quot;https://github.com/user-attachments/assets/8a33b8ba-57ee-4a54-a83c-7d21f9b2dafb&quot; alt=&quot;Get uBlock Origin Lite for Firefox&quot;&gt; | &lt;a href=&quot;https://github.com/uBlockOrigin/uBOL-home/releases/download/uBOLite_2025.5.7.895-beta/uBOLite.beta.firefox.signed.xpi&quot;&gt;Self-distributed&lt;/a&gt; (Beta) |
| &lt;img src=&quot;https://github.com/user-attachments/assets/acff1f85-d3f0-49eb-928e-7c43c5ef8f6c&quot; alt=&quot;Get uBlock Origin Lite for Microsoft Edge&quot;&gt; | &lt;a href=&quot;https://microsoftedge.microsoft.com/addons/detail/ublock-origin-lite/cimighlppcgcoapaliogpjjdehbnofhn&quot;&gt;Edge Add-ons&lt;/a&gt; | &lt;img src=&quot;https://github.com/user-attachments/assets/d267b13e-b403-4040-93ea-fff38fea8c1b&quot; alt=&quot;Get uBlock Origin Lite for Safari&quot;&gt; | &lt;a href=&quot;https://testflight.apple.com/join/JjTcThrV&quot;&gt;TestFlight&lt;/a&gt; (Beta) |

## Description

[Frequently asked questions (FAQ)](https://github.com/uBlockOrigin/uBOL-home/wiki/Frequently-asked-questions-(FAQ))

**uBO Lite** (uBOL) is an efficient content blocker based on the [MV3 API](https://developer.chrome.com/docs/extensions/develop/migrate/what-is-mv3).

uBOL operates entirely declaratively, meaning no permanent process is required for filtering. The browser handles CSS/JS injection for content filtering, ensuring that uBOL does not consume CPU or memory resources while blocking content. The service worker process is only active when interacting with the popup panel or options pages.

The default ruleset includes at least uBlock Origin&#039;s default filter set:

- uBlock Origin&#039;s built-in filter lists
- EasyList
- EasyPrivacy
- Peter Lowe‚Äôs Ad and tracking server list

You can enable additional rulesets by visiting the options page ‚Äî click the _Cogs_ icon in the popup panel.

## Changelog

See the [_Releases_ section](https://github.com/uBlockOrigin/uBOL-home/releases).

Previous releases can be found in the [_Releases_ section of the uBlock repo](https://github.com/gorhill/uBlock/releases?q=uBOL).

## Issues

All uBO Lite-related issues (including filter-related ones) can be reported [here](https://github.com/uBlockOrigin/uBOL-home/issues).

## Admin Policies

uBOL exposes settings that can be defined by administrators through [managed storage](https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/storage/managed). See [Managed settings](https://github.com/uBlockOrigin/uBOL-home/wiki/Managed-settings).

## Frequently Asked Questions (FAQ)

For more information, check the [_Wiki_](https://github.com/uBlockOrigin/uBOL-home/wiki/Frequently-asked-questions-(FAQ)).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[pixeltris/TwitchAdSolutions]]></title>
            <link>https://github.com/pixeltris/TwitchAdSolutions</link>
            <guid>https://github.com/pixeltris/TwitchAdSolutions</guid>
            <pubDate>Tue, 24 Jun 2025 00:04:41 GMT</pubDate>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pixeltris/TwitchAdSolutions">pixeltris/TwitchAdSolutions</a></h1>
            <p></p>
            <p>Language: JavaScript</p>
            <p>Stars: 9,402</p>
            <p>Forks: 539</p>
            <p>Stars today: 25 stars today</p>
            <h2>README</h2><pre># TwitchAdSolutions

This repo aims to provide multiple solutions for blocking Twitch ads.

**Don&#039;t combine Twitch specific ad blockers.**

## Recommendations

Proxies are the most reliable way of avoiding ads ([buffering / downtime info](full-list.md#proxy-issues)).

- `TTV LOL PRO` - [chrome](https://chrome.google.com/webstore/detail/ttv-lol-pro/bpaoeijjlplfjbagceilcgbkcdjbomjd) / [firefox](https://addons.mozilla.org/addon/ttv-lol-pro/) / [code](https://github.com/younesaassila/ttv-lol-pro)

Alternatively:

- `Alternate Player for Twitch.tv` - [chrome](https://chrome.google.com/webstore/detail/alternate-player-for-twit/bhplkbgoehhhddaoolmakpocnenplmhf) / [firefox](https://addons.mozilla.org/en-US/firefox/addon/twitch_5/)
- `Purple AdBlock` - [chrome](https://chrome.google.com/webstore/detail/purple-adblock/lkgcfobnmghhbhgekffaadadhmeoindg) / [firefox](https://addons.mozilla.org/en-US/firefox/addon/purpleadblock/) / [code](https://github.com/arthurbolsoni/Purple-adblock/)
- `AdGuard Extra` - [chrome](https://chrome.google.com/webstore/detail/adguard-extra-beta/mglpocjcjbekdckiahfhagndealpkpbj) / [firefox](https://github.com/AdguardTeam/AdGuardExtra/#firefox) / [userscript](https://userscripts.adtidy.org/release/adguard-extra/1.0/adguard-extra.user.js)
- `video-swap-new` - see below

[Read this for a full list and descriptions.](full-list.md)

[Also see this list maintained by @zGato.](https://github.com/zGato/ScrewTwitchAds)

## Scripts

**There are better / easier to use methods in the above recommendations.**

- video-swap-new - [userscript](https://github.com/pixeltris/TwitchAdSolutions/raw/master/video-swap-new/video-swap-new.user.js) / [ublock](https://raw.githubusercontent.com/pixeltris/TwitchAdSolutions/master/video-swap-new/video-swap-new-ublock-origin.js) / [ublock (permalink)](https://raw.githubusercontent.com/pixeltris/TwitchAdSolutions/0b5ea5ed8959a6b4eb4c1ea406aaa56313c9c907/video-swap-new/video-swap-new-ublock-origin.js)
  - Uses a lower resolution stream during ads.
- vaft - [userscript](https://github.com/pixeltris/TwitchAdSolutions/raw/master/vaft/vaft.user.js) / [ublock](https://raw.githubusercontent.com/pixeltris/TwitchAdSolutions/master/vaft/vaft-ublock-origin.js) / [ublock (permalink)](https://raw.githubusercontent.com/pixeltris/TwitchAdSolutions/0b5ea5ed8959a6b4eb4c1ea406aaa56313c9c907/vaft/vaft-ublock-origin.js)
  - The same as `video-swap-new` but attempts to get a clean stream faster (may suffer from more freezing / playback issues).

## Applying a script (uBlock Origin)

- Navigate to the uBlock Origin Dashboard (the extension options)
- Under the `My filters` tab add `twitch.tv##+js(twitch-videoad)`.
- Under the `Settings` tab, enable `I am an advanced user`, then click the cog that appears. Modify the value of `userResourcesLocation` from `unset` to the full url of the solution you wish to use (if a url is already in use, add a space after the existing url). e.g. `userResourcesLocation https://raw.githubusercontent.com/pixeltris/TwitchAdSolutions/master/video-swap-new/video-swap-new-ublock-origin.js` 
- To ensure uBlock Origin loads the script I recommend that you disable/enable the uBlock Origin extension (or restart your browser).

To stop using a script remove the filter and make the url `unset`.

*For the sake of security it&#039;s recommended to use a permalink when using uBlock Origin (permalinks do not auto update).*

*The scripts __may randomly stop being applied by uBlock Origin__ for unknown reasons ([#200](https://github.com/pixeltris/TwitchAdSolutions/issues/200)). It&#039;s recommended to use the userscript versions instead.*

## Applying a script (userscript)

- Viewing one of the userscript files should prompt the given script to be added (assuming you have a userscript manager).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mermaid-js/mermaid-cli]]></title>
            <link>https://github.com/mermaid-js/mermaid-cli</link>
            <guid>https://github.com/mermaid-js/mermaid-cli</guid>
            <pubDate>Tue, 24 Jun 2025 00:04:40 GMT</pubDate>
            <description><![CDATA[Command line tool for the Mermaid library]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mermaid-js/mermaid-cli">mermaid-js/mermaid-cli</a></h1>
            <p>Command line tool for the Mermaid library</p>
            <p>Language: JavaScript</p>
            <p>Stars: 3,283</p>
            <p>Forks: 301</p>
            <p>Stars today: 39 stars today</p>
            <h2>README</h2><pre># mermaid-cli

[![npm version](https://img.shields.io/npm/v/@mermaid-js/mermaid-cli)](https://www.npmjs.com/package/@mermaid-js/mermaid-cli)
[![node-lts (scoped)](https://img.shields.io/node/v-lts/@mermaid-js/mermaid-cli)](https://www.npmjs.com/package/@mermaid-js/mermaid-cli)
[![Docker Image Version (latest semver)](https://img.shields.io/docker/v/minlag/mermaid-cli?label=Dockerhub)](https://hub.docker.com/r/minlag/mermaid-cli)
[![Build, test and deploy mermaid-cli Docker image](https://github.com/mermaid-js/mermaid-cli/actions/workflows/compile-mermaid.yml/badge.svg)](https://github.com/mermaid-js/mermaid-cli/actions/workflows/compile-mermaid.yml)
[![This project is using Percy.io for visual regression testing.](https://percy.io/static/images/percy-badge.svg)](https://percy.io/Mermaid/mermaid-cli)
[![Join our Slack!](https://img.shields.io/static/v1?message=join%20chat&amp;color=9cf&amp;logo=slack&amp;label=slack)](https://join.slack.com/t/mermaid-talk/shared_invite/enQtNzc4NDIyNzk4OTAyLWVhYjQxOTI2OTg4YmE1ZmJkY2Y4MTU3ODliYmIwOTY3NDJlYjA0YjIyZTdkMDMyZTUwOGI0NjEzYmEwODcwOTE)

This is a command-line interface (CLI) for [mermaid](https://mermaid.js.org/). It takes a mermaid definition file as input and generates an SVG/PNG/PDF file as output.

## Installation

```sh
npm install -g @mermaid-js/mermaid-cli
```

## Usage

Convert Mermaid mmd Diagram File To SVG

```sh
mmdc -i input.mmd -o output.svg
```

&gt; **Note**
&gt;
&gt; See [Alternative installations](#alternative-installations) if you don&#039;t want to install the package globally.
&gt;
&gt; Locate how to call the mmdc executable for your preferred method
&gt; i.e. Docker, Yarn, NPM, local install, etc.

## Examples

### Create A PNG With A Dark Theme And Transparent Background

```sh
mmdc -i input.mmd -o output.png -t dark -b transparent
```

### Animating an SVG file with custom CSS

The `--cssFile` option can be used to inline some custom CSS.

Please see [./test-positive/flowchart1.css](test-positive/flowchart1.css) for an example of a CSS file that has animations.

**Warning**: If you want to override `mermaid`&#039;s [`themeCSS`](https://mermaid.js.org/config/schema-docs/config.html#themecss), we recommend instead adding `{&quot;themeCSS&quot;: &quot;...&quot;})` to your mermaid `--configFile`. You may also need to use [`!important`](https://developer.mozilla.org/en-US/docs/Web/CSS/important) to override mermaid&#039;s `themeCSS`.

**Warning**: Inline CSS files may be blocked by your browser, depending on the [HTTP Content-Security-Policy header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy) of the website that hosts your SVG.

```sh
mmdc --input test-positive/flowchart1.mmd --cssFile test-positive/flowchart1.css -o docs/animated-flowchart.svg
```

&lt;details&gt;
  &lt;summary&gt;Example output: docs/animated-flowchart.svg&lt;/summary&gt;

  ![docs/animated-flowchart.svg](docs/animated-flowchart.svg)
&lt;/details&gt;

### Transform a markdown file with mermaid diagrams

```sh
mmdc -i readme.template.md -o readme.md
```

This command transforms a markdown file itself. The mermaid-cli will find the mermaid diagrams, create SVG files from them and refer to those in the markdown output.

This:

~~~md
### Some markdown
```mermaid
graph
   [....]
```

### Some more markdown
```mermaid
sequenceDiagram
   [....]
```

### Mermaid with custom title/desc
```mermaid
graph
   accTitle: My title here
   accDescr: My description here
   A--&gt;B
```
~~~

Becomes:

```md
### Some markdown
![diagram](./readme-1.svg)

### Some more markdown
![diagram](./readme-2.svg)

### Mermaid with custom title/desc
![My description here](./readme-3.svg &quot;My title here&quot;)
```

### Piping from stdin

You can easily pipe input from stdin. This example shows how to use a heredoc to
send a diagram as stdin to mermaid-cli (mmdc).

```sh
cat &lt;&lt; EOF  | mmdc --input -
    graph TD
    A[Client] --&gt; B[Load Balancer]
EOF
```

### See All Available Options

```sh
mmdc -h
```

# Alternative installations

## Use Docker/Podman:

```sh
docker pull minlag/mermaid-cli
```

or pull from Github Container Registry

```sh
docker pull ghcr.io/mermaid-js/mermaid-cli/mermaid-cli
```

or e.g. version 8.8.0

```sh
docker pull minlag/mermaid-cli:8.8.0
```

The container looks for input files in `/data`. So for example, if you have a
diagram defined on your system in `/path/to/diagrams/diagram.mmd`, you can use
the container to generate an SVG file as follows:

```sh
docker run --rm -u `id -u`:`id -g` -v /path/to/diagrams:/data minlag/mermaid-cli -i diagram.mmd
```

Or, if using [Podman](https://podman.io/), instead do:

```sh
podman run --userns keep-id --user ${UID} --rm -v /path/to/diagrams:/data:z ghcr.io/mermaid-js/mermaid-cli/mermaid-cli -i diagram.mmd
```

The key differences in the podman command versus the docker command are:

- The addition of the `--userns keep-id` argument. This allows the container to keep the same UID as the current user&#039;s UID in the container namespace instead of mapping to a subuid. To learn more, see the [`userns=mode` documentation](https://docs.podman.io/en/v4.4/markdown/options/userns.container.html).
- The addition of `:z` to the end of the volume mapping. This instructs podman to relabel the files in the volume with the SELinux label `container_file_t`, which allows processes in the container to access the files. See the &quot;Labeling Volume Mounts&quot; section of [podman-run (1)](https://docs.podman.io/en/latest/markdown/podman-run.1.html#volume-v-source-volume-host-dir-container-dir-options) for more info.

In previous version, the input files were mounted in `/home/mermaidcli`. You can
restore this behaviour with the `--workdir` option:

```sh
docker run [...] --workdir=/home/mermaidcli minlag/mermaid-cli [...]
```


## Use Node.JS API

It&#039;s possible to call `mermaid-cli` via a Node.JS API.
Please be aware that **the NodeJS API is not covered by semver**, as `mermaid-cli` follows
`mermaid`&#039;s versioning.

```js
import { run } from &quot;@mermaid-js/mermaid-cli&quot;

await run(
   &quot;input.mmd&quot;, &quot;output.svg&quot;, // {optional options},
)
```

## Install locally

Some people are [having issues](https://github.com/mermaidjs/mermaid.cli/issues/15)
installing this tool globally. Installing it locally is an alternative solution:

```
npm install @mermaid-js/mermaid-cli
./node_modules/.bin/mmdc -h
```

### Run with npx

[`npx`](https://www.npmjs.com/package/npx) is installed by default with NPM. It
downloads and runs commands at the same time.  To use Mermaid CLI with npx, you
need to use the `-p` flag because the package name is different than the command
it installs (`mmdc`).  `npx -p @mermaid-js/mermaid-cli mmdc -h`


## Install with [brew](https://brew.sh)

&gt; **Warning**
&gt;
&gt; This method of installation is no longer supported.
&gt; For more details, see the [discussion](https://github.com/mermaid-js/mermaid-cli/issues/288).
&gt; An old version of mermaid-cli can be installed with brew.
&gt; ```sh
&gt; brew install mermaid-cli
&gt; ```


## Known issues

1. [Linux sandbox issue](docs/linux-sandbox-issue.md)
2. [Docker permission denied issue](docs/docker-permission-denied.md)
3. [How to setup up mermaid to use already installed chromium?](docs/already-installed-chromium.md)

## For contributors

Contributions are welcome. See the [contribution guide](CONTRIBUTING.md).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[OpenSignLabs/OpenSign]]></title>
            <link>https://github.com/OpenSignLabs/OpenSign</link>
            <guid>https://github.com/OpenSignLabs/OpenSign</guid>
            <pubDate>Tue, 24 Jun 2025 00:04:39 GMT</pubDate>
            <description><![CDATA[üî• The free & Open Source DocuSign alternative]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/OpenSignLabs/OpenSign">OpenSignLabs/OpenSign</a></h1>
            <p>üî• The free & Open Source DocuSign alternative</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,748</p>
            <p>Forks: 448</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;&lt;a href=&#039;https://www.opensignlabs.com&#039;&gt;&lt;img src=https://github.com/OpenSignLabs/OpenSign/assets/5486116/e518cc9c-5de3-47da-950b-f93336b9f14e&gt;&lt;/a&gt;
&lt;/h1&gt;&lt;div align=&quot;center&quot;&gt;

[The free and open source alternative to DocuSign](https://www.opensignlabs.com)

[![Average time to resolve an issue](http://isitmaintained.com/badge/resolution/opensignlabs/opensign.svg)](http://isitmaintained.com/project/opensignlabs/opensign &quot;Average time to resolve an issue&quot;)
[![All Contributors](https://img.shields.io/github/all-contributors/opensignlabs/opensign?color=ee8449&amp;style=flat-square)](#contributors)
![GitHub commit activity (branch)](https://img.shields.io/github/commit-activity/w/opensignlabs/opensign)
![GitHub last commit (by committer)](https://img.shields.io/github/last-commit/opensignlabs/opensign)


&lt;a href=&quot;https://www.opensignlabs.com/&quot;&gt;Website&lt;/a&gt;
  &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt;
  &lt;a href=&quot;https://docs.opensignlabs.com&quot;&gt;Help Docs&lt;/a&gt;
  &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt;
    &lt;a href=&quot;https://docs.opensignlabs.com/docs/API-docs/opensign-api-v-1&quot;&gt;API Docs&lt;/a&gt;
  &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt;
  &lt;a href=&quot;https://www.opensignlabs.com/blog&quot;&gt;Blog&lt;/a&gt;
  &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt;
  &lt;a href=&quot;https://discord.com/invite/xe9TDuyAyj&quot;&gt;Discord&lt;/a&gt;
  &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt;
  &lt;a href=&quot;https://twitter.com/opensignlabs&quot;&gt;Twitter&lt;/a&gt;
  &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt;
  &lt;a href=&quot;https://www.linkedin.com/company/opensign%E2%84%A2/about/&quot;&gt;LinkedIn&lt;/a&gt;


## The premier open source document signing solution(DocuSign alternative)

---
&lt;/div&gt;

### Table of Contents

1. [Introduction](#introduction)
2. [Features](#features)
3. [Installation](#installation)
4. [Usage](#usage)
5. [Contribution Guidelines](#contribution-guidelines)
6. [License](#license)
7. [Acknowledgments](#acknowledgments)

---
Please star ‚≠ê the repo to support us! üòÄ

### Introduction

Welcome to OpenSign, the premier open source docusign alternative - document e-signing solution designed to provide a secure, reliable and free alternative to commercial esign platforms like DocuSign, PandaDoc, SignNow, Adobe Sign, Smartwaiver, SignRequest, HelloSign &amp; Zoho sign. Our mission is to democratize the document signing process, making it accessible and straightforward for everyone.

---

### Features

- **Secure PDF E-Signing:** With the help of robust encryption algorithms, OpenSign‚Ñ¢ ensures maximum security, privacy &amp; compatibility. Now sign unlimited documents even on the [cloud hosted free version of OpenSign](https://www.opensignlabs.com/).
- **Annotate Documents:** OpenSign‚Ñ¢ allows you to annotate PDF documents with an advanced signing pad that allows hand drawn signatures, uploaded images, typed signatures &amp; saved signatures for the simplest open source document signing experience ever.
- **User-Friendly Interface:** OpenSign‚Ñ¢ was built while keeping Intuitive design in mind for ease of use. Features like &quot;Sign yourself&quot;, &quot;Templates&quot;, &quot;One click signatures&quot; and &quot;OpenSign‚Ñ¢ Drive&quot; makes it stand out of the crowd and even makes it better than a lot of so-called industry leaders. OpenSign intends to provide the best document signing experience in the open source ecosystem.
- **Multi-signer Support:** OpenSign&#039;s ability to invite multiple signers for signing along with the ability to invite by sharing signing links &amp; being able to enforce signing in a sequence makes it the only open source solution that is fully loaded and allows it to compete head-to-head with established players in e-signature space.
- **Email Unique Code(OTP) verification support for guest signers:** With OpenSign‚Ñ¢, your documents are fully secure even when being signed by guest users. Guest signers can only sign the document after entering a unique code sent to their email address.¬†
- **&quot;Expiring Docs&quot; &amp; &quot;Rejection&quot;:** You can set documents to expire after certain number of days after which nobody will be able to sign. Not just this, OpenSign‚Ñ¢ also allows signers to reject signing a document with a reason that will be promptly shared with the sender.
- **Beautiful email templates:** All document signing invitations, completion notifications &amp; reminders are formatted using great looking email templates. Not just this, you are even allowed to customise the email templates making your free document signing invitations look the way you always wanted them to be.
- **PDF Template Creation:** OpenSign‚Ñ¢ allows you to create and store PDF document templates for repeated use thereby saving you a lot of time &amp; collect e-signatures seamlessly.
- **OpenSign‚Ñ¢ Drive:** It is a centralised secure vault for your digital documents that makes storing, signing, organizing, sharing &amp; archieving your docs a breeze.
- **Audit Trails &amp; completion certificate:** Being a security focused solution, OpenSign‚Ñ¢ makes it a top priority to save detailed logs for tracking document activities along with time-stamps, IP addresses, email IDs &amp; phone numbers. A completion certificate is generated as soon as document is completed which contains all the document related logs for added safety.
- **API Support:** OpenSign‚Ñ¢ API allows seamless integration into existing systems and software. You can generate an API key from the app and refer the [official API docs](https://docs.opensignlabs.com/docs/API-docs/opensign-api-v-1) to start integrating it in your existing applications.
- **Integrations:** The open source document signing experience becomes even more seamless because of integrations with various Cloud storage systems, CRMs &amp; enterprise platforms. We also have a Zapier integration that allows you to integrate it with virtually any application.
&lt;img alt=&quot;Login page&quot; src=&quot;https://github.com/OpenSignLabs/OpenSign/assets/171803164/8016edb6-7d6e-4185-ab72-82d2c4a16032&quot; height=&#039;200&#039; &gt; 
&lt;img alt=&quot;Dash_board&quot; src=&quot;https://github.com/OpenSignLabs/OpenSign/assets/171803164/6e7b96f7-3154-4c25-bc1e-caf33925cc47&quot; height=&#039;200&#039;&gt;
&lt;img  alt=&quot;Widgets&quot; src=&quot;https://github.com/OpenSignLabs/OpenSign/assets/171803164/7edb65bd-c265-4b3d-9758-38e79766c5c2&quot; height=&#039;200&#039;&gt;
&lt;img  alt=&quot;Request Signature&quot; src=&quot;https://github.com/OpenSignLabs/OpenSign/assets/171803164/1697ae46-dcac-41c9-a081-aded25693846&quot; height=&#039;200&#039;&gt;
&lt;img  alt=&quot;Create template&quot; src=&quot;https://github.com/OpenSignLabs/OpenSign/assets/171803164/c2060fda-50f1-4116-a532-51b94b48463a&quot; height=&#039;200&#039;&gt;
&lt;img  alt=&quot;Manage_Template&quot; src=&quot;https://github.com/OpenSignLabs/OpenSign/assets/171803164/90310c74-8271-49bd-8c5f-89daa5a623c4&quot; height=&#039;200&#039;&gt;
&lt;img  alt=&quot;Folders&quot; src=&quot;https://github.com/OpenSignLabs/OpenSign/assets/171803164/a52207e7-3b0e-497c-b5f6-747bc4e67918&quot; height=&#039;200&#039;&gt;
&lt;img alt=&quot;OpenSign_Confetti&quot; src=&quot;https://github.com/OpenSignLabs/OpenSign/assets/171803164/8f4c6a6e-4a73-439c-9f34-f426044d0a7f&quot; height=&#039;200&#039;&gt;

---

### Deploy

Note: The default MongoDB instance used in deployment is not persistant and will be cleared on every restart. To retain your data, configure and supply your own MongoDB connection URL.

#### DigitalOcean
[![Deploy on DigitalOcean](https://www.deploytodo.com/do-btn-blue.svg)](https://cloud.digitalocean.com/apps/new?repo=https://github.com/OpenSignLabs/Deploy-OpenSign-to-Digital-Ocean/tree/main&amp;refcode=30db1c901ab0)

#### Docker
The simplest way to install OpenSign on your own server is using official docker images by running the following command -

**Command for linux/MacOS**
``` 
export HOST_URL=https://opensign.yourdomain.com &amp;&amp; curl --remote-name-all https://raw.githubusercontent.com/OpenSignLabs/OpenSign/main/docker-compose.yml https://raw.githubusercontent.com/OpenSignLabs/OpenSign/main/Caddyfile https://raw.githubusercontent.com/OpenSignLabs/OpenSign/main/.env.local_dev &amp;&amp; mv .env.local_dev .env.prod &amp;&amp; docker compose up --force-recreate
```
**Command for Windows (Powershell)**
```
$env:HOST_URL=&quot;https://opensign.yourdomain.com&quot;; Invoke-WebRequest -Uri https://raw.githubusercontent.com/OpenSignLabs/OpenSign/main/docker-compose.yml -OutFile docker-compose.yml; Invoke-WebRequest -Uri https://raw.githubusercontent.com/OpenSignLabs/OpenSign/main/Caddyfile -OutFile Caddyfile; Invoke-WebRequest -Uri https://raw.githubusercontent.com/OpenSignLabs/OpenSign/main/.env.local_dev -OutFile .env.local_dev; Rename-Item -Path .env.local_dev -NewName .env.prod; docker compose up --force-recreate
```
**Command for Windows (CMD/Terminal)**
```
set HOST_URL=https://opensign.yourdomain.com &amp;&amp; curl -O https://raw.githubusercontent.com/OpenSignLabs/OpenSign/main/docker-compose.yml &amp;&amp; curl -O https://raw.githubusercontent.com/OpenSignLabs/OpenSign/main/Caddyfile &amp;&amp; curl -O https://raw.githubusercontent.com/OpenSignLabs/OpenSign/main/.env.local_dev &amp;&amp; rename .env.local_dev .env.prod &amp;&amp; docker compose up --force-recreate
```
Make sure that you have `Docker` and `git` installed before you run this command -

Please refer to the [Installation Guide](https://docs.opensignlabs.com/docs/self-host/docker/run-locally/) for detailed instructions on how to install OpenSign on your system.

---

### Usage

For comprehensive guidelines on how to use OpenSign‚Ñ¢, please consult our [User Manual](USAGE.md).

---

### Contribution Guidelines

We welcome contributions from the open-source community. For more information on how to contribute, please read our [Contribution Guidelines](CONTRIBUTING.md).

---

### License

OpenSign is licensed under the AGPL-3 License. For more details, see the [LICENSE](LICENSE) file.

---

### Acknowledgments

We would like to thank all our contributors and users for their support and feedback. Special thanks to [OpenSignLabs](https://www.opensignlabs.com) for spearheading this initiative.

---

## Contributors

&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt;
&lt;!-- prettier-ignore-start --&gt;
&lt;!-- markdownlint-disable --&gt;
&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://aleksandarjakovljevic.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2115393?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Aleksandar Jakovljevic&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Aleksandar Jakovljevic&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-ajakov&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/BuilderPrid&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/106882895?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Priyanshu Dwivedi&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Priyanshu Dwivedi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-BuilderPrid&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Tashuuuu&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/85075827?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Akriti Sengar&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Akriti Sengar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-Tashuuuu&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/parthrc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/101104958?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Parth Chawande&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Parth Chawande&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-parthrc&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Rishabh-git10&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/107680241?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Rishabh Dewangan&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rishabh Dewangan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-Rishabh-git10&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/LemonDrop847&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/106615670?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Nitin Mishra&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Nitin Mishra&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-LemonDrop847&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://jobinselvanose.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/63976083?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Jobin Selvanose&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jobin Selvanose&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#doc-Jobin-S&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/HansF&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1503?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Hans Fraiponts&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Hans Fraiponts&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#doc-HansF&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://linktr.ee/monilprajapati&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/99136041?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Monil Prajapati&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Monil Prajapati&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-Monilprajapati&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://emm-dev0.github.io/portfolio/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/97445413?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Edogbanya Emmanuel&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Edogbanya Emmanuel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#bug-Emm-dev0&quot; title=&quot;Bug reports&quot;&gt;üêõ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/pranav514&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/76992202?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;pranav514&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;pranav514&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-pranav514&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/arianxq&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/122199576?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Aria&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Aria&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-arianxq&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/SoumyadiptoPal&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/119007659?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Soumyadipto Pal&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Soumyadipto Pal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-SoumyadiptoPal&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/AndreyCurious&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/105622604?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Andrey Didenko&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Andrey Didenko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-AndreyCurious&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/VishakhaSainani&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/113436770?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;VishakhaSainani&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;VishakhaSainani&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-VishakhaSainani&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/andrew-opensignlabs&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/148278535?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Andrew&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Andrew&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-andrew-opensignlabs&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/rishabjasrotia&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/33950743?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Rishab&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rishab&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-rishabjasrotia&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://session.it&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/327285?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Maurizio Pillitu&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Maurizio Pillitu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#bug-maoo&quot; title=&quot;Bug reports&quot;&gt;üêõ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://luisparra.dev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/16653744?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Luis Parra&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Luis Parra&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#a11y-lsprr&quot; title=&quot;Accessibility&quot;&gt;Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Govinda04&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/50038172?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Govinda Kocharekar&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Govinda Kocharekar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-Govinda04&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://bilal.cc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/55330484?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Bilal Ahmad Bhat&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Bilal Ahmad Bhat&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-crediblebilal&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/VikramNagwal&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/123088024?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Vikram&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Vikram&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-VikramNagwal&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/ugoconsonni&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13661702?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;ugoconsonni&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ugoconsonni&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-ugoconsonni&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/daniel-mutwiri&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8936960?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Daniel Mutwiri&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Daniel Mutwiri&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-daniel-mutwiri&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Zathiel&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/26553418?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Zathiel&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Zathiel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#code-Zathiel&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/1024mb&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9301204?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;1024mb&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;1024mb&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#translation-1024mb&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;!-- markdownlint-restore --&gt;
&lt;!-- prettier-ignore-end --&gt;

&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;

This project is tested with BrowserStack.

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[TheOdinProject/javascript-exercises]]></title>
            <link>https://github.com/TheOdinProject/javascript-exercises</link>
            <guid>https://github.com/TheOdinProject/javascript-exercises</guid>
            <pubDate>Tue, 24 Jun 2025 00:04:38 GMT</pubDate>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/TheOdinProject/javascript-exercises">TheOdinProject/javascript-exercises</a></h1>
            <p></p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,444</p>
            <p>Forks: 39,510</p>
            <p>Stars today: 0 stars today</p>
            <h2>README</h2><pre># JavaScript Exercises

These JavaScript exercises are intended to complement the JavaScript content on [The Odin Project](https://www.theodinproject.com/) (TOP). They should only be done when instructed during the course of the curriculum.

## Contributing

If you have a suggestion to improve an exercise, an idea for a new exercise, or notice an issue with an exercise, please feel free to open an issue after thoroughly reading our [contributing guide](https://github.com/TheOdinProject/javascript-exercises/blob/main/CONTRIBUTING.md).

## How To Use These Exercises

1. Fork and clone this repository. To learn how to fork a repository, see the GitHub documentation on how to [fork a repo](https://docs.github.com/en/get-started/quickstart/fork-a-repo).
   - Copies of repositories on your machine are called clones. If you need help cloning to your local environment you can learn how from the GitHub documentation on [cloning a repository](https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/cloning-a-repository-from-github/cloning-a-repository).
1. Before you start working on any exercises, you should first ensure you have the following installed:

   - **NPM**. You should have installed NPM already in our [Installing Node.js](https://www.theodinproject.com/paths/foundations/courses/foundations/lessons/installing-node-js) lesson. Just in case you need to check, type `npm --version` in your terminal. If you get back `Command &#039;npm&#039; not found, but can be installed with:`, **do not follow the instructions in the terminal** to install with `apt-get` as this causes permission issues. Instead, go back to the installation lesson and install Node with NVM by following the instructions there.
   - **Jest**. After cloning this repository to your local machine and installing NPM, go into the newly created directory (`cd javascript-exercises`) and run `npm install`. This will install Jest and set up the testing platform based on our preconfigured settings. (Note: if you get warnings that packages are out of date or contain vulnerabilities, you can safely ignore them for these exercises.)

1. Each exercise includes the following:

   - A markdown file with a description of the task, an empty (or mostly empty) JavaScript file, and a set of tests.
   - A `solutions` directory that contains a solution and the same test file with all of the tests unskipped.

   To complete an exercise, you will need to go to the exercise directory with `cd exerciseName` in the terminal and run `npm test exerciseName.spec.js`. This should run the test file and show you the output. When you run a test for the first time, it will fail. This is by design! You must open the exercise file and write the code needed to get the test to pass.

1. Some of the exercises have test conditions defined in their spec file as `test.skip` instead of `test`. This is intentional. Once all `test`s pass, you will change the next `test.skip` to `test` and test your code again. You will do this until all conditions are satisfied. **All tests must pass at the same time**, and you should not have any instances of `test.skip` in the spec file when you are finished with an exercise.
1. Once you successfully finish an exercise, check the `solutions` directory within each exercise to compare it with yours.
   - You should not be checking the solution for an exercise until you finish it!
   - If your solution differs wildly from TOP&#039;s solution (and still passes the exercise&#039;s requirements), that is completely fine. Feel free to ask about it in our Discord if there are parts you do not understand.

&gt; [!IMPORTANT]
&gt; Do not submit your solutions to this repo, as any PRs that do so will be closed without merging.

&gt; [!NOTE]
&gt; Due to the way Jest handles failed tests, it may return an exit code of 1 if any tests fail. NPM will interpret this as an error and you may see some `npm ERR!` messages after Jest runs. You can ignore these, or run your test with `npm test exerciseName.spec.js --silent` to suppress the errors.

The first exercise, `helloWorld`, will walk you through the process in-depth.

## Debugging

To debug functions, you can run the tests in the Visual Studio Code debugger terminal. You can open this by clicking the &quot;Run and Debug&quot; icon on the left or pressing &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;D&lt;/kbd&gt;, then clicking JavaScript Debug Terminal. You will be able to set breakpoints as you would in the Chrome DevTools debugger. You can run `npm test exerciseName.spec.js` to then execute your code up until your breakpoint and step through your code as necessary. **NOTE**: To take advantage of the debugger, you **MUST** run the script in the debugger terminal, not the bash or zsh terminal.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[manga-download/hakuneko]]></title>
            <link>https://github.com/manga-download/hakuneko</link>
            <guid>https://github.com/manga-download/hakuneko</guid>
            <pubDate>Tue, 24 Jun 2025 00:04:37 GMT</pubDate>
            <description><![CDATA[Manga & Anime Downloader for Linux, Windows & MacOS]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/manga-download/hakuneko">manga-download/hakuneko</a></h1>
            <p>Manga & Anime Downloader for Linux, Windows & MacOS</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,289</p>
            <p>Forks: 514</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[MHSanaei/3x-ui]]></title>
            <link>https://github.com/MHSanaei/3x-ui</link>
            <guid>https://github.com/MHSanaei/3x-ui</guid>
            <pubDate>Tue, 24 Jun 2025 00:04:36 GMT</pubDate>
            <description><![CDATA[Xray panel supporting multi-protocol multi-user expire day & traffic & IP limit (Vmess & Vless & Trojan & ShadowSocks & Wireguard)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/MHSanaei/3x-ui">MHSanaei/3x-ui</a></h1>
            <p>Xray panel supporting multi-protocol multi-user expire day & traffic & IP limit (Vmess & Vless & Trojan & ShadowSocks & Wireguard)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 20,617</p>
            <p>Forks: 4,377</p>
            <p>Stars today: 52 stars today</p>
            <h2>README</h2><pre>[English](/README.md) | [ŸÅÿßÿ±ÿ≥€å](/README.fa_IR.md) | [ÿßŸÑÿπÿ±ÿ®Ÿäÿ©](/README.ar_EG.md) |  [‰∏≠Êñá](/README.zh_CN.md) | [Espa√±ol](/README.es_ES.md) | [–†—É—Å—Å–∫–∏–π](/README.ru_RU.md)

&lt;p align=&quot;center&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./media/3x-ui-dark.png&quot;&gt;
    &lt;img alt=&quot;3x-ui&quot; src=&quot;./media/3x-ui-light.png&quot;&gt;
  &lt;/picture&gt;
&lt;/p&gt;

[![](https://img.shields.io/github/v/release/mhsanaei/3x-ui.svg?style=for-the-badge)](https://github.com/MHSanaei/3x-ui/releases)
[![](https://img.shields.io/github/actions/workflow/status/mhsanaei/3x-ui/release.yml.svg?style=for-the-badge)](https://github.com/MHSanaei/3x-ui/actions)
[![GO Version](https://img.shields.io/github/go-mod/go-version/mhsanaei/3x-ui.svg?style=for-the-badge)](#)
[![Downloads](https://img.shields.io/github/downloads/mhsanaei/3x-ui/total.svg?style=for-the-badge)](https://github.com/MHSanaei/3x-ui/releases/latest)
[![License](https://img.shields.io/badge/license-GPL%20V3-blue.svg?longCache=true&amp;style=for-the-badge)](https://www.gnu.org/licenses/gpl-3.0.en.html)

**3X-UI** ‚Äî advanced, open-source web-based control panel designed for managing Xray-core server. It offers a user-friendly interface for configuring and monitoring various VPN and proxy protocols.

&gt; [!IMPORTANT]
&gt; This project is only for personal using, please do not use it for illegal purposes, please do not use it in a production environment.

As an enhanced fork of the original X-UI project, 3X-UI provides improved stability, broader protocol support, and additional features.

## Quick Start

```bash
bash &lt;(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)
```

For full documentation, please visit the [project Wiki](https://github.com/MHSanaei/3x-ui/wiki).

## A Special Thanks to

- [alireza0](https://github.com/alireza0/)

## Acknowledgment

- [Iran v2ray rules](https://github.com/chocolate4u/Iran-v2ray-rules) (License: **GPL-3.0**): _Enhanced v2ray/xray and v2ray/xray-clients routing rules with built-in Iranian domains and a focus on security and adblocking._
- [Russia v2ray rules](https://github.com/runetfreedom/russia-v2ray-rules-dat) (License: **GPL-3.0**): _This repository contains automatically updated V2Ray routing rules based on data on blocked domains and addresses in Russia._

## Support project

**If this project is helpful to you, you may wish to give it a**:star2:

&lt;p align=&quot;left&quot;&gt;
  &lt;a href=&quot;https://buymeacoffee.com/mhsanaei&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./media/buymeacoffe.png&quot; alt=&quot;Image&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

- USDT (TRC20): `TXncxkvhkDWGts487Pjqq1qT9JmwRUz8CC`
- MATIC (polygon): `0x41C9548675D044c6Bfb425786C765bc37427256A`
- LTC (Litecoin): `ltc1q2ach7x6d2zq0n4l0t4zl7d7xe2s6fs7a3vspwv`

## Stargazers over Time

[![Stargazers over time](https://starchart.cc/MHSanaei/3x-ui.svg?variant=adaptive)](https://starchart.cc/MHSanaei/3x-ui)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[f/awesome-chatgpt-prompts]]></title>
            <link>https://github.com/f/awesome-chatgpt-prompts</link>
            <guid>https://github.com/f/awesome-chatgpt-prompts</guid>
            <pubDate>Tue, 24 Jun 2025 00:04:35 GMT</pubDate>
            <description><![CDATA[This repo includes ChatGPT prompt curation to use ChatGPT and other LLM tools better.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/f/awesome-chatgpt-prompts">f/awesome-chatgpt-prompts</a></h1>
            <p>This repo includes ChatGPT prompt curation to use ChatGPT and other LLM tools better.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 129,464</p>
            <p>Forks: 17,157</p>
            <p>Stars today: 80 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
&lt;img width=&quot;395&quot; alt=&quot;prompts.chat&quot; src=&quot;https://github.com/user-attachments/assets/e0d0e32d-d2ce-4459-9f37-e951d9f4f5de&quot; /&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;Sponsors&lt;/h3&gt;

&lt;div align=&quot;center&quot;&gt;

  &lt;a href=&quot;https://clemta.com&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;50&quot; alt=&quot;Clemta logo&quot; src=&quot;https://clemta.com/wp-content/uploads/2023/03/logo-clemta-com-1.png.webp&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;sub&gt;With Clemta, you can run your company from the comfort of your home.&lt;/sub&gt;
&lt;hr&gt;
   &lt;a href=&quot;https://www.warp.dev/awesome-chatgpt-prompts&quot;&gt;
      &lt;img alt=&quot;Warp sponsorship&quot; width=&quot;400&quot; src=&quot;https://github.com/user-attachments/assets/ab8dd143-b0fd-4904-bdc5-dd7ecac94eae&quot;&gt;
   &lt;/a&gt;

#### [Warp, the intelligent terminal for developers](https://www.warp.dev/awesome-chatgpt-prompts)
[Available for MacOS, Linux, &amp; Windows](https://www.warp.dev/awesome-chatgpt-prompts)&lt;br&gt;

&lt;hr&gt;
  &lt;a href=&quot;https://graphite.dev/?utm_source=github&amp;utm_medium=repo&amp;utm_campaign=awesome_chatgpt_prompts&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;100&quot; alt=&quot;Graphite logo&quot; src=&quot;https://github.com/user-attachments/assets/981a244b-4bc8-4884-98f7-dd1d425063ae&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;sub&gt;Graphite is the AI developer productivity platform helping teams on GitHub ship higher quality software, faster.&lt;/sub&gt;
&lt;hr&gt;
  &lt;a href=&quot;https://github.com/f/mcptools&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;60&quot; alt=&quot;Hugging Face logo&quot; src=&quot;https://github.com/f/mcptools/raw/master/.github/resources/logo.png&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;sub&gt;If you&#039;re building MCPs, &lt;a href=&quot;https://github.com/f/mcptools&quot;&gt;MCP Tools&lt;/a&gt; is a Swiss-army knife for MCP Servers.&lt;/sub&gt;
&lt;hr&gt;
  &lt;sub&gt;&lt;a href=&quot;https://github.com/sponsors/f/sponsorships?sponsor=f&amp;amp;tier_id=319423&quot;&gt;Be my sponsor and your logo will be here!&lt;/a&gt;&lt;/sub&gt;
&lt;/div&gt;

---
[![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)

Welcome to the &quot;Awesome ChatGPT Prompts&quot; repository! While this collection was originally created for [ChatGPT](https://chat.openai.com/chat), these prompts work great with other AI models like [Claude](https://claude.ai/new), [Gemini](https://gemini.google.com), [Hugging Face Chat](https://hf.co/chat), [Llama](https://meta.ai), [Mistral](https://chat.mistral.ai), and more.

[ChatGPT](https://chat.openai.com/chat) is a web interface created by [OpenAI](https://openai.com) that provides access to their GPT (Generative Pre-trained Transformer) language models. The underlying models, like GPT-4o and GPT-o1, are large language models trained on vast amounts of text data that can understand and generate human-like text. Like other AI chat interfaces, you can provide prompts and have natural conversations with the AI, which will generate contextual responses based on the conversation history and your inputs.

In this repository, you will find a variety of prompts that can be used with ChatGPT and other AI chat models. We encourage you to [add your own prompts](https://github.com/f/awesome-chatgpt-prompts/edit/main/README.md) to the list, and to use AI to help generate new prompts as well.

To get started, simply clone this repository and use the prompts in the README.md file as input for your preferred AI chat model. You can also use the prompts in this file as inspiration for creating your own.

We hope you find these prompts useful and have fun exploring AI chat models!

**[View on prompts.chat](https://prompts.chat)**

**[View on Hugging Face](https://huggingface.co/datasets/fka/awesome-chatgpt-prompts/)**
---

&gt; ‚ÑπÔ∏è **NOTE:** Sometimes, some of the prompts may not be working as you expected
&gt; or may be rejected by the AI. Please try again, start a new thread, or log out
&gt; and log back in. If these solutions do not work, please try rewriting the
&gt; prompt using your own sentences while keeping the instructions same.

### Want to Write Effective Prompts?

I&#039;ve authored an e-book called **&quot;The Art of ChatGPT Prompting: A Guide to
Crafting Clear and Effective Prompts&quot;**.

üìñ **[Read the e-book](https://fka.gumroad.com/l/art-of-chatgpt-prompting)**

### Want to Learn How to Make Money using ChatGPT Prompts?

I&#039;ve authored an e-book called **&quot;How to Make Money with ChatGPT: Strategies,
Tips, and Tactics&quot;**.

üìñ
**[Buy the e-book](https://fka.gumroad.com/l/how-to-make-money-with-chatgpt)**

### Want to Learn How to write image prompts for Midjourney AI?

I&#039;ve authored an e-book called **&quot;The Art of Midjourney AI: A Guide to Creating
Images from Text&quot;**.

üìñ
**[Read the e-book](https://fka.gumroad.com/l/the-art-of-midjourney-ai-guide-to-creating-images-from-text)**

---

### Using prompts.chat

[prompts.chat](https://prompts.chat) is designed to provide an enhanced UX when
working with prompts. With just a few clicks, you can easily edit and copy the
prompts on the site to fit your specific needs and preferences.

&lt;img width=&quot;1400&quot; alt=&quot;Screenshot 2025-01-05 at 22 17 19&quot; src=&quot;https://github.com/user-attachments/assets/272d2092-b651-452a-a049-f46b31c32889&quot; /&gt;

---

## Unmerged Prompts

There are many Pull Requests to this repository waiting to be merged. There are
many hidden gems there. Take a look!

üìñ
**[View Unmerged Prompts](https://github.com/f/awesome-chatgpt-prompts/pulls)**

---

# Prompts

## Act as an Ethereum Developer

Contributed by: [@ameya-2003](https://github.com/Ameya-2003) Reference:
[The BlockChain Messenger](https://github.com/Ameya-2003/BlockChain/blob/main/Projects/The%20BlockChain%20Messenger.sol)

&gt; Imagine you are an experienced Ethereum developer tasked with creating a smart
&gt; contract for a blockchain messenger. The objective is to save messages on the
&gt; blockchain, making them readable (public) to everyone, writable (private) only
&gt; to the person who deployed the contract, and to count how many times the
&gt; message was updated. Develop a Solidity smart contract for this purpose,
&gt; including the necessary functions and considerations for achieving the
&gt; specified goals. Please provide the code and any relevant explanations to
&gt; ensure a clear understanding of the implementation.

## Act as a Linux Terminal

Contributed by: [@f](https://github.com/f) Reference:
[https://www.engraved.blog/building-a-virtual-machine-inside/](https://www.engraved.blog/building-a-virtual-machine-inside/)

&gt; I want you to act as a linux terminal. I will type commands and you will reply
&gt; with what the terminal should show. I want you to only reply with the terminal
&gt; output inside one unique code block, and nothing else. do not write
&gt; explanations. do not type commands unless I instruct you to do so. When I need
&gt; to tell you something in English, I will do so by putting text inside curly
&gt; brackets {like this}. My first command is pwd

## Act as an English Translator and Improver

Contributed by: [@f](https://github.com/f) **Alternative to**: Grammarly, Google
Translate

&gt; I want you to act as an English translator, spelling corrector and improver. I
&gt; will speak to you in any language and you will detect the language, translate
&gt; it and answer in the corrected and improved version of my text, in English. I
&gt; want you to replace my simplified A0-level words and sentences with more
&gt; beautiful and elegant, upper level English words and sentences. Keep the
&gt; meaning same, but make them more literary. I want you to only reply the
&gt; correction, the improvements and nothing else, do not write explanations. My
&gt; first sentence is &quot;istanbulu cok seviyom burada olmak cok guzel&quot;

## Act as Job Interviewer

Contributed by: [@f](https://github.com/f) &amp;
[@iltekin](https://github.com/iltekin) **Examples**: Node.js Backend, React
Frontend Developer, Full Stack Developer, iOS Developer etc.

&gt; I want you to act as an interviewer. I will be the candidate and you will ask
&gt; me the interview questions for the ${Position:JavaScript Developer} position. I want you to only
&gt; reply as the interviewer. Do not write all the conversation at once. I want
&gt; you to only do the interview with me. Ask me the questions and wait for my
&gt; answers. Do not write explanations. Ask me the questions one by one like an
&gt; interviewer does and wait for my answers. My first sentence is &quot;Hi&quot;

## Act as a JavaScript Console

Contributed by: [@omerimzali](https://github.com/omerimzali)

&gt; I want you to act as a javascript console. I will type commands and you will
&gt; reply with what the javascript console should show. I want you to only reply
&gt; with the terminal output inside one unique code block, and nothing else. do
&gt; not write explanations. do not type commands unless I instruct you to do so.
&gt; when I need to tell you something in english, I will do so by putting text
&gt; inside curly brackets {like this}. My first command is console.log(&quot;Hello
&gt; World&quot;);

## Act as an Excel Sheet

Contributed by: [@f](https://github.com/f)

&gt; I want you to act as a text based excel. You&#039;ll only reply me the text-based
&gt; 10 rows excel sheet with row numbers and cell letters as columns (A to L).
&gt; First column header should be empty to reference row number. I will tell you
&gt; what to write into cells and you&#039;ll reply only the result of excel table as
&gt; text, and nothing else. Do not write explanations. I will write you formulas
&gt; and you&#039;ll execute formulas and you&#039;ll only reply the result of excel table as
&gt; text. First, reply me the empty sheet.

## Act as an English Pronunciation Helper

Contributed by: [@f](https://github.com/f)

&gt; I want you to act as an English pronunciation assistant for Turkish speaking
&gt; people. I will write you sentences and you will only answer their
&gt; pronunciations, and nothing else. The replies must not be translations of my
&gt; sentence but only pronunciations. Pronunciations should use Turkish Latin
&gt; letters for phonetics. Do not write explanations on replies. My first sentence
&gt; is &quot;how the weather is in Istanbul?&quot;

## Act as a Spoken English Teacher and Improver

Contributed by: [@ATX735](https://github.com/ATX735)

&gt; I want you to act as a spoken English teacher and improver. I will speak to
&gt; you in English and you will reply to me in English to practice my spoken
&gt; English. I want you to keep your reply neat, limiting the reply to 100 words.
&gt; I want you to strictly correct my grammar mistakes, typos, and factual errors.
&gt; I want you to ask me a question in your reply. Now let&#039;s start practicing, you
&gt; could ask me a question first. Remember, I want you to strictly correct my
&gt; grammar mistakes, typos, and factual errors.

## Act as a Travel Guide

Contributed by: [@koksalkapucuoglu](https://github.com/koksalkapucuoglu)

&gt; I want you to act as a travel guide. I will write you my location and you will
&gt; suggest a place to visit near my location. In some cases, I will also give you
&gt; the type of places I will visit. You will also suggest me places of similar
&gt; type that are close to my first location. My first suggestion request is &quot;I am
&gt; in Istanbul/Beyoƒülu and I want to visit only museums.&quot;

## Act as a Plagiarism Checker

Contributed by: [@yetk1n](https://github.com/yetk1n)

&gt; I want you to act as a plagiarism checker. I will write you sentences and you
&gt; will only reply undetected in plagiarism checks in the language of the given
&gt; sentence, and nothing else. Do not write explanations on replies. My first
&gt; sentence is &quot;For computers to behave like humans, speech recognition systems
&gt; must be able to process nonverbal information, such as the emotional state of
&gt; the speaker.&quot;

## Act as Character

Contributed by: [@BRTZL](https://github.com/BRTZL)
[@mattsq](https://github.com/mattsq)

&gt; I want you to act like ${Character: Anakin Skywalker} from ${Series: Star Wars}. I want you to respond and
&gt; answer like ${Character: Anakin Skywalker} using the tone, manner and vocabulary ${Character: Anakin Skywalker}
&gt; would use. Do not write any explanations. Only answer like ${Character: Anakin Skywalker}. You
&gt; must know all of the knowledge of ${Character: Anakin Skywalker}. My first sentence is &quot;Hi
&gt; ${Character: Anakin Skywalker}.&quot;

## Act as an Advertiser

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as an advertiser. You will create a campaign to promote a
&gt; product or service of your choice. You will choose a target audience, develop
&gt; key messages and slogans, select the media channels for promotion, and decide
&gt; on any additional activities needed to reach your goals. My first suggestion
&gt; request is &quot;I need help creating an advertising campaign for a new type of
&gt; energy drink targeting young adults aged 18-30.&quot;

## Act as a Storyteller

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a storyteller. You will come up with entertaining stories
&gt; that are engaging, imaginative and captivating for the audience. It can be
&gt; fairy tales, educational stories or any other type of stories which has the
&gt; potential to capture people&#039;s attention and imagination. Depending on the
&gt; target audience, you may choose specific themes or topics for your
&gt; storytelling session e.g., if it‚Äôs children then you can talk about animals;
&gt; If it‚Äôs adults then history-based tales might engage them better etc. My first
&gt; request is &quot;I need an interesting story on perseverance.&quot;

## Act as a Football Commentator

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a football commentator. I will give you descriptions of
&gt; football matches in progress and you will commentate on the match, providing
&gt; your analysis on what has happened thus far and predicting how the game may
&gt; end. You should be knowledgeable of football terminology, tactics,
&gt; players/teams involved in each match, and focus primarily on providing
&gt; intelligent commentary rather than just narrating play-by-play. My first
&gt; request is &quot;I&#039;m watching Manchester United vs Chelsea - provide commentary for
&gt; this match.&quot;

## Act as a Stand-up Comedian

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a stand-up comedian. I will provide you with some topics
&gt; related to current events and you will use your wit, creativity, and
&gt; observational skills to create a routine based on those topics. You should
&gt; also be sure to incorporate personal anecdotes or experiences into the routine
&gt; in order to make it more relatable and engaging for the audience. My first
&gt; request is &quot;I want a humorous take on politics.&quot;

## Act as a Motivational Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a motivational coach. I will provide you with some
&gt; information about someone&#039;s goals and challenges, and it will be your job to
&gt; come up with strategies that can help this person achieve their goals. This
&gt; could involve providing positive affirmations, giving helpful advice or
&gt; suggesting activities they can do to reach their end goal. My first request is
&gt; &quot;I need help motivating myself to stay disciplined while studying for an
&gt; upcoming exam&quot;.

## Act as a Composer

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a composer. I will provide the lyrics to a song and you
&gt; will create music for it. This could include using various instruments or
&gt; tools, such as synthesizers or samplers, in order to create melodies and
&gt; harmonies that bring the lyrics to life. My first request is &quot;I have written a
&gt; poem named ‚ÄúHayalet Sevgilim‚Äù and need music to go with it.&quot;

## Act as a Debater

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a debater. I will provide you with some topics related to
&gt; current events and your task is to research both sides of the debates, present
&gt; valid arguments for each side, refute opposing points of view, and draw
&gt; persuasive conclusions based on evidence. Your goal is to help people come
&gt; away from the discussion with increased knowledge and insight into the topic
&gt; at hand. My first request is &quot;I want an opinion piece about Deno.&quot;

## Act as a Debate Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a debate coach. I will provide you with a team of
&gt; debaters and the motion for their upcoming debate. Your goal is to prepare the
&gt; team for success by organizing practice rounds that focus on persuasive
&gt; speech, effective timing strategies, refuting opposing arguments, and drawing
&gt; in-depth conclusions from evidence provided. My first request is &quot;I want our
&gt; team to be prepared for an upcoming debate on whether front-end development is
&gt; easy.&quot;

## Act as a Screenwriter

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a screenwriter. You will develop an engaging and creative
&gt; script for either a feature length film, or a Web Series that can captivate
&gt; its viewers. Start with coming up with interesting characters, the setting of
&gt; the story, dialogues between the characters etc. Once your character
&gt; development is complete - create an exciting storyline filled with twists and
&gt; turns that keeps the viewers in suspense until the end. My first request is &quot;I
&gt; need to write a romantic drama movie set in Paris.&quot;

## Act as a Novelist

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a novelist. You will come up with creative and
&gt; captivating stories that can engage readers for long periods of time. You may
&gt; choose any genre such as fantasy, romance, historical fiction and so on - but
&gt; the aim is to write something that has an outstanding plotline, engaging
&gt; characters and unexpected climaxes. My first request is &quot;I need to write a
&gt; science-fiction novel set in the future.&quot;

## Act as a Movie Critic

Contributed by: [@nuc](https://github.com/nuc)

&gt; I want you to act as a movie critic. You will develop an engaging and creative
&gt; movie review. You can cover topics like plot, themes and tone, acting and
&gt; characters, direction, score, cinematography, production design, special
&gt; effects, editing, pace, dialog. The most important aspect though is to
&gt; emphasize how the movie has made you feel. What has really resonated with you.
&gt; You can also be critical about the movie. Please avoid spoilers. My first
&gt; request is &quot;I need to write a movie review for the movie Interstellar&quot;

## Act as a Relationship Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a relationship coach. I will provide some details about
&gt; the two people involved in a conflict, and it will be your job to come up with
&gt; suggestions on how they can work through the issues that are separating them.
&gt; This could include advice on communication techniques or different strategies
&gt; for improving their understanding of one another&#039;s perspectives. My first
&gt; request is &quot;I need help solving conflicts between my spouse and myself.&quot;

## Act as a Poet

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a poet. You will create poems that evoke emotions and
&gt; have the power to stir people‚Äôs soul. Write on any topic or theme but make
&gt; sure your words convey the feeling you are trying to express in beautiful yet
&gt; meaningful ways. You can also come up with short verses that are still
&gt; powerful enough to leave an imprint in readers&#039; minds. My first request is &quot;I
&gt; need a poem about love.&quot;

## Act as a Rapper

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a rapper. You will come up with powerful and meaningful
&gt; lyrics, beats and rhythm that can ‚Äòwow‚Äô the audience. Your lyrics should have
&gt; an intriguing meaning and message which people can relate too. When it comes
&gt; to choosing your beat, make sure it is catchy yet relevant to your words, so
&gt; that when combined they make an explosion of sound everytime! My first request
&gt; is &quot;I need a rap song about finding strength within yourself.&quot;

## Act as a Motivational Speaker

Contributed by: [@devisasari](https://git

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[stdlib-js/stdlib]]></title>
            <link>https://github.com/stdlib-js/stdlib</link>
            <guid>https://github.com/stdlib-js/stdlib</guid>
            <pubDate>Tue, 24 Jun 2025 00:04:34 GMT</pubDate>
            <description><![CDATA[‚ú® Standard library for JavaScript and Node.js. ‚ú®]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/stdlib-js/stdlib">stdlib-js/stdlib</a></h1>
            <p>‚ú® Standard library for JavaScript and Node.js. ‚ú®</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,234</p>
            <p>Forks: 837</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>