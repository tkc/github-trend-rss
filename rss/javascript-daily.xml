<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Tue, 14 Oct 2025 00:04:31 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[asgeirtj/system_prompts_leaks]]></title>
            <link>https://github.com/asgeirtj/system_prompts_leaks</link>
            <guid>https://github.com/asgeirtj/system_prompts_leaks</guid>
            <pubDate>Tue, 14 Oct 2025 00:04:31 GMT</pubDate>
            <description><![CDATA[Collection of extracted System Prompts from popular chatbots like ChatGPT, Claude & Gemini]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/asgeirtj/system_prompts_leaks">asgeirtj/system_prompts_leaks</a></h1>
            <p>Collection of extracted System Prompts from popular chatbots like ChatGPT, Claude & Gemini</p>
            <p>Language: JavaScript</p>
            <p>Stars: 22,284</p>
            <p>Forks: 3,438</p>
            <p>Stars today: 138 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[davila7/claude-code-templates]]></title>
            <link>https://github.com/davila7/claude-code-templates</link>
            <guid>https://github.com/davila7/claude-code-templates</guid>
            <pubDate>Tue, 14 Oct 2025 00:04:30 GMT</pubDate>
            <description><![CDATA[CLI tool for configuring and monitoring Claude Code]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/davila7/claude-code-templates">davila7/claude-code-templates</a></h1>
            <p>CLI tool for configuring and monitoring Claude Code</p>
            <p>Language: JavaScript</p>
            <p>Stars: 7,820</p>
            <p>Forks: 660</p>
            <p>Stars today: 394 stars today</p>
            <h2>README</h2><pre>[![npm version](https://img.shields.io/npm/v/claude-code-templates.svg)](https://www.npmjs.com/package/claude-code-templates)
[![npm downloads](https://img.shields.io/npm/dt/claude-code-templates.svg)](https://www.npmjs.com/package/claude-code-templates)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Open Source](https://badges.frapsoft.com/os/v1/open-source.svg?v=103)](https://opensource.org/)
[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](CONTRIBUTING.md)
[![GitHub stars](https://img.shields.io/github/stars/davila7/claude-code-templates.svg?style=social&amp;label=Star)](https://github.com/davila7/claude-code-templates)
[![Mentioned in Awesome Claude Code](https://awesome.re/mentioned-badge-flat.svg)](https://github.com/hesreallyhim/awesome-claude-code)
[![Buy Me a Coffee](https://img.shields.io/badge/‚òï-Buy%20me%20a%20coffee-ffdd00?style=flat&amp;logo=buy-me-a-coffee)](https://buymeacoffee.com/daniavila)



# Claude Code Templates (aitmpl.com)

**Ready-to-use configurations for Anthropic&#039;s Claude Code.** A comprehensive collection of AI agents, custom commands, settings, hooks, external integrations (MCPs), and project templates to enhance your development workflow.

## Browse &amp; Install Components and Templates

**[Browse All Templates](https://aitmpl.com)** - Interactive web interface to explore and install 100+ agents, commands, settings, hooks, and MCPs.

&lt;img width=&quot;1049&quot; height=&quot;855&quot; alt=&quot;Screenshot 2025-08-19 at 08 09 24&quot; src=&quot;https://github.com/user-attachments/assets/e3617410-9b1c-4731-87b7-a3858800b737&quot; /&gt;

## üöÄ Quick Installation

```bash
# Install a complete development stack
npx claude-code-templates@latest --agent development-team/frontend-developer --command testing/generate-tests --mcp development/github-integration

# Browse and install interactively
npx claude-code-templates@latest

# Install specific components
npx claude-code-templates@latest --agent business-marketing/security-auditor
npx claude-code-templates@latest --command performance/optimize-bundle
npx claude-code-templates@latest --setting performance/mcp-timeouts
npx claude-code-templates@latest --hook git/pre-commit-validation
npx claude-code-templates@latest --mcp database/postgresql-integration
```

## What You Get

| Component | Description | Examples |
|-----------|-------------|----------|
| **ü§ñ Agents** | AI specialists for specific domains | Security auditor, React performance optimizer, database architect |
| **‚ö° Commands** | Custom slash commands | `/generate-tests`, `/optimize-bundle`, `/check-security` |
| **üîå MCPs** | External service integrations | GitHub, PostgreSQL, Stripe, AWS, OpenAI |
| **‚öôÔ∏è Settings** | Claude Code configurations | Timeouts, memory settings, output styles |
| **ü™ù Hooks** | Automation triggers | Pre-commit validation, post-completion actions |
| **üì¶ Templates** | Complete project configurations with CLAUDE.md, .claude/* files and .mcp.json | Framework-specific setups, project best practices |

## üõ†Ô∏è Additional Tools

Beyond the template catalog, Claude Code Templates includes powerful development tools:

### üìä Claude Code Analytics
Monitor your AI-powered development sessions in real-time with live state detection and performance metrics.

```bash
npx claude-code-templates@latest --analytics
```

### üí¨ Conversation Monitor  
Mobile-optimized interface to view Claude responses in real-time with secure remote access.

```bash
# Local access
npx claude-code-templates@latest --chats

# Secure remote access via Cloudflare Tunnel
npx claude-code-templates@latest --chats --tunnel
```

### üîç Health Check
Comprehensive diagnostics to ensure your Claude Code installation is optimized.

```bash
npx claude-code-templates@latest --health-check
```

### üîå Plugin Dashboard
View marketplaces, installed plugins, and manage permissions from a unified interface.

```bash
npx claude-code-templates@latest --plugins
```

## üìñ Documentation

**[üìö docs.aitmpl.com](https://docs.aitmpl.com/)** - Complete guides, examples, and API reference for all components and tools.

## Contributing

We welcome contributions! **[Browse existing templates](https://aitmpl.com)** to see what&#039;s available, then check our [contributing guidelines](CONTRIBUTING.md) to add your own agents, commands, MCPs, settings, or hooks.

**Please read our [Code of Conduct](CODE_OF_CONDUCT.md) before contributing.**

## Attribution

This collection includes components from multiple sources:

**Agents Collection:**
- **wshobson/agents Collection** by [wshobson](https://github.com/wshobson/agents) - Licensed under MIT License (48 agents)

**Commands Collection:**
- **awesome-claude-code Commands** by [hesreallyhim](https://github.com/hesreallyhim/awesome-claude-code) - Licensed under CC0 1.0 Universal (21 commands)

## üìÑ License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## üîó Links

- **üåê Browse Templates**: [aitmpl.com](https://aitmpl.com)
- **üìö Documentation**: [docs.aitmpl.com](https://docs.aitmpl.com)
- **üí¨ Community**: [GitHub Discussions](https://github.com/davila7/claude-code-templates/discussions)
- **üêõ Issues**: [GitHub Issues](https://github.com/davila7/claude-code-templates/issues)

## ‚≠ê Star History

&lt;a href=&quot;https://star-history.com/#davila7/claude-code-templates&amp;Date&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=davila7/claude-code-templates&amp;type=Date&amp;theme=dark&quot; /&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=davila7/claude-code-templates&amp;type=Date&quot; /&gt;
    &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=davila7/claude-code-templates&amp;type=Date&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

---

**‚≠ê Found this useful? Give us a star to support the project!**

[![Buy Me A Coffee](https://img.buymeacoffee.com/button-api/?text=Buy%20me%20a%20coffee&amp;slug=daniavila&amp;button_colour=FFDD00&amp;font_colour=000000&amp;font_family=Cookie&amp;outline_colour=000000&amp;coffee_colour=ffffff)](https://buymeacoffee.com/daniavila)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[SillyTavern/SillyTavern]]></title>
            <link>https://github.com/SillyTavern/SillyTavern</link>
            <guid>https://github.com/SillyTavern/SillyTavern</guid>
            <pubDate>Tue, 14 Oct 2025 00:04:29 GMT</pubDate>
            <description><![CDATA[LLM Frontend for Power Users.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/SillyTavern/SillyTavern">SillyTavern/SillyTavern</a></h1>
            <p>LLM Frontend for Power Users.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 19,095</p>
            <p>Forks: 4,081</p>
            <p>Stars today: 28 stars today</p>
            <h2>README</h2><pre># SillyTavern

LLM Frontend for Power Users

## Resources

- GitHub: &lt;https://github.com/SillyTavern/SillyTavern&gt;
- Docs: &lt;https://docs.sillytavern.app/&gt;
- Discord: &lt;https://discord.gg/sillytavern&gt;
- Reddit: &lt;https://reddit.com/r/SillyTavernAI&gt;

## License

AGPL-3.0
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[clusterzx/paperless-ai]]></title>
            <link>https://github.com/clusterzx/paperless-ai</link>
            <guid>https://github.com/clusterzx/paperless-ai</guid>
            <pubDate>Tue, 14 Oct 2025 00:04:28 GMT</pubDate>
            <description><![CDATA[An automated document analyzer for Paperless-ngx using OpenAI API, Ollama, Deepseek-r1, Azure and all OpenAI API compatible Services to automatically analyze and tag your documents.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/clusterzx/paperless-ai">clusterzx/paperless-ai</a></h1>
            <p>An automated document analyzer for Paperless-ngx using OpenAI API, Ollama, Deepseek-r1, Azure and all OpenAI API compatible Services to automatically analyze and tag your documents.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,357</p>
            <p>Forks: 194</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre># üìÑ Paperless-AI

[![GitHub commit activity](https://img.shields.io/github/commit-activity/t/clusterzx/paperless-ai)](https://github.com/clusterzx/paperless-ai/commits/main)
[![Docker Pulls](https://img.shields.io/docker/pulls/clusterzx/paperless-ai)](https://hub.docker.com/r/clusterzx/paperless-ai)
[![GitHub Stars](https://img.shields.io/github/stars/clusterzx)](https://github.com/clusterzx)
[![License](https://img.shields.io/github/license/clusterzx/paperless-ai?cacheSeconds=1)](LICENSE)

---

**Paperless-AI** is an AI-powered extension for [Paperless-ngx](https://github.com/paperless-ngx/paperless-ngx) that brings automatic document classification, smart tagging, and semantic search using OpenAI-compatible APIs and Ollama.

It enables **fully automated document workflows**, **contextual chat**, and **powerful customization** ‚Äî all via an intuitive web interface.

&gt; üí° Just ask:  
&gt; ‚ÄúWhen did I sign my rental agreement?‚Äù  
&gt; ‚ÄúWhat was the amount of the last electricity bill?‚Äù  
&gt; ‚ÄúWhich documents mention my health insurance?‚Äù  

Powered by **Retrieval-Augmented Generation (RAG)**, you can now search semantically across your full archive and get precise, natural language answers.

---

## ‚ú® Features

### üîÑ Automated Document Processing
- Detects new documents in Paperless-ngx automatically
- Analyzes content using OpenAI API, Ollama, and other compatible backends
- Assigns title, tags, document type, and correspondent
- Built-in support for:
  - Ollama (Mistral, Llama, Phi-3, Gemma-2)
  - OpenAI
  - DeepSeek.ai
  - OpenRouter.ai
  - Perplexity.ai
  - Together.ai
  - LiteLLM
  - VLLM
  - Fastchat
  - Gemini (Google)
  - ...and more!

### üß† RAG-Based AI Chat
- Natural language document search and Q&amp;A
- Understands full document context (not just keywords)
- Semantic memory powered by your own data
- Fast, intelligent, privacy-friendly document queries  
![RAG_CHAT_DEMO](https://raw.githubusercontent.com/clusterzx/paperless-ai/refs/heads/main/ppairag.png)

### ‚öôÔ∏è Manual Processing
- Web interface for manual AI tagging
- Useful when reviewing sensitive documents
- Accessible via `/manual`

### üß© Smart Tagging &amp; Rules
- Define rules to limit which documents are processed
- Disable prompts and apply tags automatically
- Set custom output tags for tracked classification  
![PPAI_SHOWCASE3](https://github.com/user-attachments/assets/1fc9f470-6e45-43e0-a212-b8fa6225e8dd)

---

## üöÄ Installation

&gt; ‚ö†Ô∏è **First-time install:** Restart the container **after completing setup** (API keys, preferences) to build RAG index.  
&gt; üîÅ Not required for updates.

üìò [Installation Wiki](https://github.com/clusterzx/paperless-ai/wiki/2.-Installation)

---

## üê≥ Docker Support

- Health monitoring and auto-restart
- Persistent volumes and graceful shutdown
- Works out of the box with minimal setup

---

## üîß Local Development

```bash
# Install dependencies
npm install

# Start development/test mode
npm run test
```

---

## üß≠ Roadmap Highlights

- ‚úÖ Multi-AI model support
- ‚úÖ Multilingual document analysis
- ‚úÖ Tag rules and filters
- ‚úÖ Integrated document chat with RAG
- ‚úÖ Responsive web interface

---

## ü§ù Contributing

We welcome PRs and contributions!

```bash
# Fork, clone, then:
git checkout -b feature/YourFeature
# After changes:
git commit -m &quot;Add YourFeature&quot;
git push origin feature/YourFeature
```

Then open a Pull Request via GitHub.

---

## üÜò Support &amp; Community

- [Issues](https://github.com/clusterzx/paperless-ai/issues)
- [Discord](https://discord.gg/AvNekAfK38)

---

## üìÑ License

This project is licensed under the MIT License. See [LICENSE](LICENSE) for details.

---

## üôè Support Development

[![Patreon](https://img.shields.io/badge/Patreon-F96854?style=for-the-badge&amp;logo=patreon&amp;logoColor=white)](https://www.patreon.com/c/clusterzx)
[![PayPal](https://img.shields.io/badge/PayPal-00457C?style=for-the-badge&amp;logo=paypal&amp;logoColor=white)](https://www.paypal.com/paypalme/bech0r)
[![BuyMeACoffee](https://img.shields.io/badge/Buy%20Me%20a%20Coffee-ffdd00?style=for-the-badge&amp;logo=buy-me-a-coffee&amp;logoColor=black)](https://www.buymeacoffee.com/clusterzx)
[![Ko-Fi](https://img.shields.io/badge/Ko--fi-F16061?style=for-the-badge&amp;logo=ko-fi&amp;logoColor=white)](https://ko-fi.com/clusterzx)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[tangyoha/telegram_media_downloader]]></title>
            <link>https://github.com/tangyoha/telegram_media_downloader</link>
            <guid>https://github.com/tangyoha/telegram_media_downloader</guid>
            <pubDate>Tue, 14 Oct 2025 00:04:27 GMT</pubDate>
            <description><![CDATA[Âü∫‰∫éDineshkarthikÁöÑÈ°πÁõÆÔºå ÁîµÊä•ËßÜÈ¢ë‰∏ãËΩΩÔºåÁîµÊä•ËµÑÊ∫ê‰∏ãËΩΩÔºåË∑®Âπ≥Âè∞ÔºåÊîØÊåÅwebÊü•Áúã‰∏ãËΩΩËøõÂ∫¶ ÔºåÊîØÊåÅbot‰∏ãÂèëÊåá‰ª§‰∏ãËΩΩÔºåÊîØÊåÅ‰∏ãËΩΩÂ∑≤ÁªèÂä†ÂÖ•ÁöÑÁßÅÊúâÁæ§‰ΩÜÊòØÈôêÂà∂‰∏ãËΩΩÁöÑËµÑÊ∫êÔºå telegram media download,Download media files from a telegram conversation/chat/channel up to 2GiB per file]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/tangyoha/telegram_media_downloader">tangyoha/telegram_media_downloader</a></h1>
            <p>Âü∫‰∫éDineshkarthikÁöÑÈ°πÁõÆÔºå ÁîµÊä•ËßÜÈ¢ë‰∏ãËΩΩÔºåÁîµÊä•ËµÑÊ∫ê‰∏ãËΩΩÔºåË∑®Âπ≥Âè∞ÔºåÊîØÊåÅwebÊü•Áúã‰∏ãËΩΩËøõÂ∫¶ ÔºåÊîØÊåÅbot‰∏ãÂèëÊåá‰ª§‰∏ãËΩΩÔºåÊîØÊåÅ‰∏ãËΩΩÂ∑≤ÁªèÂä†ÂÖ•ÁöÑÁßÅÊúâÁæ§‰ΩÜÊòØÈôêÂà∂‰∏ãËΩΩÁöÑËµÑÊ∫êÔºå telegram media download,Download media files from a telegram conversation/chat/channel up to 2GiB per file</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,241</p>
            <p>Forks: 475</p>
            <p>Stars today: 32 stars today</p>
            <h2>README</h2><pre>
&lt;h1 align=&quot;center&quot;&gt;Telegram Media Downloader&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/tangyoha/telegram_media_downloader/actions&quot;&gt;&lt;img alt=&quot;Unittest&quot; src=&quot;https://github.com/tangyoha/telegram_media_downloader/workflows/Unittest/badge.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://codecov.io/gh/tangyoha/telegram_media_downloader&quot;&gt;&lt;img alt=&quot;Coverage Status&quot; src=&quot;https://codecov.io/gh/tangyoha/telegram_media_downloader/branch/master/graph/badge.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/tangyoha/telegram_media_downloader/blob/master/LICENSE&quot;&gt;&lt;img alt=&quot;License: MIT&quot; src=&quot;https://black.readthedocs.io/en/stable/_static/license.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/python/black&quot;&gt;&lt;img alt=&quot;Code style: black&quot; src=&quot;https://img.shields.io/badge/code%20style-black-000000.svg&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/tangyoha/telegram_media_downloader/releases&quot;&gt;
&lt;img alt=&quot;Code style: black&quot; src=&quot;https://img.shields.io/github/v/release/tangyoha/telegram_media_downloader?display_name=tag&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;
  &lt;a href=&quot;./README_CN.md&quot;&gt;‰∏≠Êñá&lt;/a&gt;&lt;span&gt; ¬∑ &lt;/span&gt;
  &lt;a href=&quot;https://github.com/tangyoha/telegram_media_downloader/discussions/categories/ideas&quot;&gt;Feature request&lt;/a&gt;
  &lt;span&gt; ¬∑ &lt;/span&gt;
  &lt;a href=&quot;https://github.com/tangyoha/telegram_media_downloader/issues&quot;&gt;Report a bug&lt;/a&gt;
  &lt;span&gt; ¬∑ &lt;/span&gt;
  Support: &lt;a href=&quot;https://github.com/tangyoha/telegram_media_downloader/discussions&quot;&gt;Discussions&lt;/a&gt;
  &lt;span&gt; &amp; &lt;/span&gt;
  &lt;a href=&quot;https://t.me/TeegramMediaDownload&quot;&gt;Telegram Community&lt;/a&gt;
&lt;/h3&gt;

## Overview
&gt; Support two default running

* The robot is running, and the command `download` or `forward` is issued from the robot

* Download as a one-time download tool

### UI

#### Web page

&gt; After running, open a browser and visit `localhost:5000`
&gt; If it is a remote machine, you need to configure web_host: 0.0.0.0


&lt;img alt=&quot;Code style: black&quot; style=&quot;width:100%; high:60%;&quot; src=&quot;./screenshot/web_ui.gif&quot;/&gt;

### Robot

&gt; Need to configure bot_token, please refer to [Documentation](https://github.com/tangyoha/telegram_media_downloader/wiki/How-to-Download-Using-Robots)

&lt;img alt=&quot;Code style: black&quot; style=&quot;width:60%; high:30%; &quot; src=&quot;./screenshot/bot.gif&quot;/&gt;

### Support

| Category             | Support                                          |
| -------------------- | ------------------------------------------------ |
| Language             | `Python 3.7` and above                           |
| Download media types | audio, document, photo, video, video_note, voice |

### Version release plan

* [v2.2.0](https://github.com/tangyoha/telegram_media_downloader/issues/2)

## Installation

For *nix os distributions with `make` availability

```sh
git clone https://github.com/tangyoha/telegram_media_downloader.git
cd telegram_media_downloader
make install
```

For Windows which doesn&#039;t have `make` inbuilt

```sh
git clone https://github.com/tangyoha/telegram_media_downloader.git
cd telegram_media_downloader
pip3 install -r requirements.txt
```

## Docker
&gt; For more detailed installation tutorial, please check the wiki

Make sure you have **docker** and **docker-compose** installed
```sh
docker pull tangyoha/telegram_media_downloader:latest
mkdir -p ~/app &amp;&amp; mkdir -p ~/app/log/ &amp;&amp; cd ~/app
wget https://raw.githubusercontent.com/tangyoha/telegram_media_downloader/master/docker-compose.yaml -O docker-compose.yaml
wget https://raw.githubusercontent.com/tangyoha/telegram_media_downloader/master/config.yaml -O config.yaml
wget https://raw.githubusercontent.com/tangyoha/telegram_media_downloader/master/data.yaml -O data.yaml
# vi config.yaml and docker-compose.yaml
vi config.yaml

# The first time you need to start the foreground
# enter your phone number and code, then exit(ctrl + c)
docker-compose run --rm telegram_media_downloader

# After performing the above operations, all subsequent startups will start in the background
docker-compose up -d

# Upgrade
docker pull tangyoha/telegram_media_downloader:latest
cd ~/app
docker-compose down
docker-compose up -d
```

## Upgrade installation

```sh
cd telegram_media_downloader
pip3 install -r requirements.txt
```

## Configuration

All the configurations are  passed to the Telegram Media Downloader via `config.yaml` file.

**Getting your API Keys:**
The very first step requires you to obtain a valid Telegram API key (API id/hash pair):

1. Visit  [https://my.telegram.org/apps](https://my.telegram.org/apps)  and log in with your Telegram Account.
2. Fill out the form to register a new Telegram application.
3. Done! The API key consists of two parts:  **api_id**  and  **api_hash**.

**Getting chat id:**

**1. Using web telegram:**

1. Open &lt;https://web.telegram.org/?legacy=1#/im&gt;

2. Now go to the chat/channel and you will see the URL as something like
   - `https://web.telegram.org/?legacy=1#/im?p=u853521067_2449618633394` here `853521067` is the chat id.
   - `https://web.telegram.org/?legacy=1#/im?p=@somename` here `somename` is the chat id.
   - `https://web.telegram.org/?legacy=1#/im?p=s1301254321_6925449697188775560` here take `1301254321` and add `-100` to the start of the id =&gt; `-1001301254321`.
   - `https://web.telegram.org/?legacy=1#/im?p=c1301254321_6925449697188775560` here take `1301254321` and add `-100` to the start of the id =&gt; `-1001301254321`.

**2. Using bot:**

1. Use [@username_to_id_bot](https://t.me/username_to_id_bot) to get the chat_id of
    - almost any telegram user: send username to the bot or just forward their message to the bot
    - any chat: send chat username or copy and send its joinchat link to the bot
    - public or private channel: same as chats, just copy and send to the bot
    - id of any telegram bot

### config.yaml

```yaml
api_hash: your_api_hash
api_id: your_api_id
chat:
- chat_id: telegram_chat_id
  last_read_message_id: 0
  download_filter: message_date &gt;= 2022-12-01 00:00:00 and message_date &lt;= 2023-01-17 00:00:00
- chat_id: telegram_chat_id_2
  last_read_message_id: 0
# note we remove ids_to_retry to data.yaml
ids_to_retry: []
media_types:
- audio
- document
- photo
- video
- voice
- animation #gif
file_formats:
  audio:
  - all
  document:
  - pdf
  - epub
  video:
  - mp4
save_path: D:\telegram_media_downloader
file_path_prefix:
- chat_title
- media_datetime
upload_drive:
  # required
  enable_upload_file: true
  # required
  remote_dir: drive:/telegram
  # required
  upload_adapter: rclone
  # option,when config upload_adapter rclone then this config are required
  rclone_path: D:\rclone\rclone.exe
  # option
  before_upload_file_zip: True
  # option
  after_upload_file_delete: True
hide_file_name: true
file_name_prefix:
- message_id
- file_name
file_name_prefix_split: &#039; - &#039;
max_download_task: 5
web_host: 127.0.0.1
web_port: 5000
language: EN
web_login_secret: 123
allowed_user_ids:
- &#039;me&#039;
date_format: &#039;%Y_%m&#039;
enable_download_txt: false
```

- **api_hash**  - The api_hash you got from telegram apps
- **api_id** - The api_id you got from telegram apps
- **bot_token** - Your bot token
- **chat** - Chat list
  - `chat_id` -  The id of the chat/channel you want to download media. Which you get from the above-mentioned steps.
  - `download_filter` - Download filter, see [How to use Filter](https://github.com/tangyoha/telegram_media_downloader/wiki/How-to-use-Filter)
  - `last_read_message_id` - If it is the first time you are going to read the channel let it be `0` or if you have already used this script to download media it will have some numbers which are auto-updated after the scripts successful execution. Don&#039;t change it.
  - `ids_to_retry` - `Leave it as it is.` This is used by the downloader script to keep track of all skipped downloads so that it can be downloaded during the next execution of the script.
- **media_types** - Type of media to download, you can update which type of media you want to download it can be one or any of the available types.
- **file_formats** - File types to download for supported media types which are `audio`, `document` and `video`. Default format is `all`, downloads all files.
- **save_path** - The root directory where you want to store downloaded files.
- **file_path_prefix** - Store file subfolders, the order of the list is not fixed, can be randomly combined.
  - `chat_title`      - Channel or group title, it will be chat id if not exist title.
  - `media_datetime`  - Media date.
  - `media_type`      - Media type, also see `media_types`.
- **upload_drive** - You can upload file to cloud drive.
  - `enable_upload_file` - Enable upload file, default `false`.
  - `remote_dir` - Where you upload, like `drive_id/drive_name`.
  - `upload_adapter` - Upload file adapter, which can be `rclone`, `aligo`. If it is `rclone`, it supports all `rclone` servers that support uploading. If it is `aligo`, it supports uploading `Ali cloud disk`.
  - `rclone_path` - RClone exe path, see [How to use rclone](https://github.com/tangyoha/telegram_media_downloader/wiki/Rclone)
  - `before_upload_file_zip` - Zip file before upload, default `false`.
  - `after_upload_file_delete` - Delete file after upload success, default `false`.
- **file_name_prefix** - Custom file name, use the same as **file_path_prefix**
  - `message_id` - Message id
  - `file_name` - File name (may be empty)
  - `caption` - The title of the message (may be empty)
- **file_name_prefix_split** - Custom file name prefix symbol, the default is `-`
- **max_download_task** - The maximum number of task download tasks, the default is 5.
- **hide_file_name** - Whether to hide the web interface file name, default `false`
- **web_host** - Web host
- **web_port** - Web port
- **language** - Application language, the default is English (`EN`), optional `ZH`(Chinese),`RU`,`UA`
- **web_login_secret** - Web page login password, if not configured, no login is required to access the web page
- **log_level** - see `logging._nameToLevel`.
- **forward_limit** - Limit the number of forwards per minute, the default is 33, please do not modify this parameter by default.
- **allowed_user_ids** - Who is allowed to use the robot? The default login account can be used. Please add single quotes to the name with @.
- **date_format** Support custom configuration of media_datetime format in file_path_prefix.see [python-datetime](https://docs.python.org/3/library/datetime.html)
- **enable_download_txt** Enable download txt file, default `false`

## Execution

```sh
python3 media_downloader.py
```

All downloaded media will be stored at the root of `save_path`.
The specific location reference is as follows:

The complete directory of video download is: `save_path`/`chat_title`/`media_datetime`/`media_type`.
The order of the list is not fixed and can be randomly combined.
If the configuration is empty, all files are saved under `save_path`.

## Proxy

`socks4, socks5, http` proxies are supported in this project currently. To use it, add the following to the bottom of your `config.yaml` file

```yaml
proxy:
  scheme: socks5
  hostname: 127.0.0.1
  port: 1234
  username: your_username(delete the line if none)
  password: your_password(delete the line if none)
```

If your proxy doesn‚Äôt require authorization you can omit username and password. Then the proxy will automatically be enabled.

## Contributing

### Contributing Guidelines

Read through our [contributing guidelines](https://github.com/tangyoha/telegram_media_downloader/blob/master/CONTRIBUTING.md) to learn about our submission process, coding rules and more.

### Want to Help?

Want to file a bug, contribute some code, or improve documentation? Excellent! Read up on our guidelines for [contributing](https://github.com/tangyoha/telegram_media_downloader/blob/master/CONTRIBUTING.md).

### Code of Conduct

Help us keep Telegram Media Downloader open and inclusive. Please read and follow our [Code of Conduct](https://github.com/tangyoha/telegram_media_downloader/blob/master/CODE_OF_CONDUCT.md).


### Sponsor

[PayPal](https://paypal.me/tangyoha?country.x=C2&amp;locale.x=zh_XC)

&lt;p&gt;
&lt;img alt=&quot;Code style: black&quot; style=&quot;width:30%&quot; src=&quot;./screenshot/alipay.JPG&quot;&gt;
&lt;img alt=&quot;Code style: black&quot; style=&quot;width:30%&quot; src=&quot;./screenshot/wechat.JPG&quot;&gt;
&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[blackmatrix7/ios_rule_script]]></title>
            <link>https://github.com/blackmatrix7/ios_rule_script</link>
            <guid>https://github.com/blackmatrix7/ios_rule_script</guid>
            <pubDate>Tue, 14 Oct 2025 00:04:26 GMT</pubDate>
            <description><![CDATA[ÂàÜÊµÅËßÑÂàô„ÄÅÈáçÂÜôÂÜôËßÑÂàôÂèäËÑöÊú¨„ÄÇ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/blackmatrix7/ios_rule_script">blackmatrix7/ios_rule_script</a></h1>
            <p>ÂàÜÊµÅËßÑÂàô„ÄÅÈáçÂÜôÂÜôËßÑÂàôÂèäËÑöÊú¨„ÄÇ</p>
            <p>Language: JavaScript</p>
            <p>Stars: 22,799</p>
            <p>Forks: 3,662</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre># Rules And Scripts

## ÂâçË®Ä

ÂêÑÂπ≥Âè∞ÁöÑÂàÜÊµÅËßÑÂàô„ÄÅÂ§çÂÜôËßÑÂàôÂèäËá™Âä®ÂåñËÑöÊú¨„ÄÇ

## ÁâπÂà´Â£∞Êòé

1. Êú¨È°πÁõÆÂÜÖÊâÄÊúâËµÑÊ∫êÊñá‰ª∂ÔºåÁ¶ÅÊ≠¢‰ªª‰ΩïÂÖ¨‰ºóÂè∑„ÄÅËá™Â™í‰ΩìËøõË°å‰ªª‰ΩïÂΩ¢ÂºèÁöÑËΩ¨ËΩΩ„ÄÅÂèëÂ∏É„ÄÇ
2. ÁºñÂÜôÊú¨È°πÁõÆ‰∏ªË¶ÅÁõÆÁöÑ‰∏∫Â≠¶‰π†ÂíåÁ†îÁ©∂ES6ÔºåÊó†Ê≥ï‰øùËØÅÈ°πÁõÆÂÜÖÂÆπÁöÑÂêàÊ≥ïÊÄß„ÄÅÂáÜÁ°ÆÊÄß„ÄÅÂÆåÊï¥ÊÄßÂíåÊúâÊïàÊÄß„ÄÇ
3. Êú¨È°πÁõÆÊ∂âÂèäÁöÑÊï∞ÊçÆÁî±‰ΩøÁî®ÁöÑ‰∏™‰∫∫ÊàñÁªÑÁªáËá™Ë°åÂ°´ÂÜôÔºåÊú¨È°πÁõÆ‰∏çÂØπÊï∞ÊçÆÂÜÖÂÆπË¥üË¥£ÔºåÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÊï∞ÊçÆÁöÑÁúüÂÆûÊÄß„ÄÅÂáÜÁ°ÆÊÄß„ÄÅÂêàÊ≥ïÊÄß„ÄÇ‰ΩøÁî®Êú¨È°πÁõÆÊâÄÈÄ†ÊàêÁöÑ‰∏ÄÂàáÂêéÊûúÔºå‰∏éÊú¨È°πÁõÆÁöÑÊâÄÊúâË¥°ÁåÆËÄÖÊó†ÂÖ≥ÔºåÁî±‰ΩøÁî®ÁöÑ‰∏™‰∫∫ÊàñÁªÑÁªáÂÆåÂÖ®ÊâøÊãÖ„ÄÇ
4. Êú¨È°πÁõÆ‰∏≠Ê∂âÂèäÁöÑÁ¨¨‰∏âÊñπÁ°¨‰ª∂„ÄÅËΩØ‰ª∂Á≠âÔºå‰∏éÊú¨È°πÁõÆÊ≤°Êúâ‰ªª‰ΩïÁõ¥Êé•ÊàñÈó¥Êé•ÁöÑÂÖ≥Á≥ª„ÄÇÊú¨È°πÁõÆ‰ªÖÂØπÈÉ®ÁΩ≤Âíå‰ΩøÁî®ËøáÁ®ãËøõË°åÂÆ¢ËßÇÊèèËø∞Ôºå‰∏ç‰ª£Ë°®ÊîØÊåÅ‰ΩøÁî®‰ªª‰ΩïÁ¨¨‰∏âÊñπÁ°¨‰ª∂„ÄÅËΩØ‰ª∂„ÄÇ‰ΩøÁî®‰ªª‰ΩïÁ¨¨‰∏âÊñπÁ°¨‰ª∂„ÄÅËΩØ‰ª∂ÔºåÊâÄÈÄ†ÊàêÁöÑ‰∏ÄÂàáÂêéÊûúÁî±‰ΩøÁî®ÁöÑ‰∏™‰∫∫ÊàñÁªÑÁªáÊâøÊãÖÔºå‰∏éÊú¨È°πÁõÆÊó†ÂÖ≥„ÄÇ
5. Êú¨È°πÁõÆ‰∏≠ÊâÄÊúâÂÜÖÂÆπÂè™‰æõÂ≠¶‰π†ÂíåÁ†îÁ©∂‰ΩøÁî®Ôºå‰∏çÂæóÂ∞ÜÊú¨È°πÁõÆ‰∏≠‰ªª‰ΩïÂÜÖÂÆπÁî®‰∫éËøùÂèçÂõΩÂÆ∂/Âú∞Âå∫/ÁªÑÁªáÁ≠âÁöÑÊ≥ïÂæãÊ≥ïËßÑÊàñÁõ∏ÂÖ≥ËßÑÂÆöÁöÑÂÖ∂‰ªñÁî®ÈÄî„ÄÇ
6. ÊâÄÊúâÂü∫‰∫éÊú¨È°πÁõÆÊ∫ê‰ª£Á†ÅÔºåËøõË°åÁöÑ‰ªª‰Ωï‰øÆÊîπÔºå‰∏∫ÂÖ∂‰ªñ‰∏™‰∫∫ÊàñÁªÑÁªáÁöÑËá™ÂèëË°å‰∏∫Ôºå‰∏éÊú¨È°πÁõÆÊ≤°Êúâ‰ªª‰ΩïÁõ¥Êé•ÊàñÈó¥Êé•ÁöÑÂÖ≥Á≥ªÔºåÊâÄÈÄ†ÊàêÁöÑ‰∏ÄÂàáÂêéÊûú‰∫¶‰∏éÊú¨È°πÁõÆÊó†ÂÖ≥„ÄÇ
7. ÊâÄÊúâÁõ¥Êé•ÊàñÈó¥Êé•‰ΩøÁî®Êú¨È°πÁõÆÁöÑ‰∏™‰∫∫ÂíåÁªÑÁªáÔºåÂ∫î24Â∞èÊó∂ÂÜÖÂÆåÊàêÂ≠¶‰π†ÂíåÁ†îÁ©∂ÔºåÂπ∂ÂèäÊó∂Âà†Èô§Êú¨È°πÁõÆ‰∏≠ÁöÑÊâÄÊúâÂÜÖÂÆπ„ÄÇÂ¶ÇÂØπÊú¨È°πÁõÆÁöÑÂäüËÉΩÊúâÈúÄÊ±ÇÔºåÂ∫îËá™Ë°åÂºÄÂèëÁõ∏ÂÖ≥ÂäüËÉΩ„ÄÇ
8. Êú¨È°πÁõÆ‰øùÁïôÈöèÊó∂ÂØπÂÖçË¥£Â£∞ÊòéËøõË°åË°•ÂÖÖÊàñÊõ¥ÊîπÁöÑÊùÉÂà©ÔºåÁõ¥Êé•ÊàñÈó¥Êé•‰ΩøÁî®Êú¨È°πÁõÆÂÜÖÂÆπÁöÑ‰∏™‰∫∫ÊàñÁªÑÁªáÔºåËßÜ‰∏∫Êé•ÂèóÊú¨È°πÁõÆÁöÑÁâπÂà´Â£∞Êòé„ÄÇ

## ËßÑÂàô

**Êàë‰ª¨Âπ∂‰∏çÁîü‰∫ßËßÑÂàôÔºåÊàë‰ª¨Âè™ÊòØÂºÄÊ∫êËßÑÂàôÁöÑÊê¨ËøêÂ∑•„ÄÇ**

ÂàÜÊµÅËßÑÂàô

https://github.com/blackmatrix7/ios_rule_script/tree/master/rule

Â§çÂÜôËßÑÂàô

https://github.com/blackmatrix7/ios_rule_script/tree/master/rewrite

ÊâÄÊúâËßÑÂàôÊï∞ÊçÆÈÉΩÊù•Ëá™‰∫íËÅîÁΩëÔºåÊÑüË∞¢ÂºÄÊ∫êËßÑÂàôÈ°πÁõÆ‰ΩúËÄÖÁöÑËæõÂã§‰ªòÂá∫„ÄÇ

## ËÑöÊú¨

### ËÑöÊú¨ËØ¥Êòé

| ËÑöÊú¨                                                         | ‰ªãÁªç                                 | Ê°ÜÊû∂        | Áª¥Êä§Áä∂ÊÄÅ |
| ------------------------------------------------------------ | ------------------------------------ | ----------- | -------- |
| [‰ªÄ‰πàÂÄºÂæó‰π∞](https://github.com/blackmatrix7/ios_rule_script/tree/master/script/smzdm) | ‰ªÄ‰πàÂÄºÂæó‰π∞‰ªªÂä°ÂíåÂéªÂπøÂëä               | MagicJS 2/3 | Ê≠£Â∏∏     |
| [ÁôæÂ∫¶Ë¥¥Âêß](https://github.com/blackmatrix7/ios_rule_script/tree/master/script/tieba) | Â∏¶ÈáçËØïÂäüËÉΩÁöÑË¥¥ÂêßÁ≠æÂà∞ÔºåÊèêÈ´òÁ≠æÂà∞ÊàêÂäüÁéá | MagicJS 3   | Ê≠£Â∏∏     |
| [ÂºÄÂ±èÂéªÂπøÂëä](https://github.com/blackmatrix7/ios_rule_script/tree/master/script/startup) | ÈÄöËøáËÑöÊú¨ÂéªÈô§ÁºìÂ≠òÂà∞Êú¨Âú∞ÁöÑAPPÂºÄÂ±èÂπøÂëä  | MagicJS 3   | Ê≠£Â∏∏     |
| [ÊÖ¢ÊÖ¢‰π∞](https://github.com/blackmatrix7/ios_rule_script/tree/master/script/manmanbuy) | ÊØèÊó•Ëá™Âä®Á≠æÂà∞                         | MagicJS 2   | Ê≠£Â∏∏     |
| [ÂèÆÂíö‰π∞Ëèú](https://github.com/blackmatrix7/ios_rule_script/tree/master/script/dingdong) | ÊØèÊó•Ëá™Âä®Á≠æÂà∞                         | MagicJS 3   | Ê≠£Â∏∏     |
| [FaÁ±≥ÂÆ∂](https://github.com/blackmatrix7/ios_rule_script/tree/master/script/famijia) | ÊØèÊó•Ëá™Âä®Á≠æÂà∞                         | MagicJS 2   | Ê≠£Â∏∏     |
| [Luka](https://github.com/blackmatrix7/ios_rule_script/tree/master/script/luka) | ÊØèÊó•Ëá™Âä®Á≠æÂà∞                         | MagicJS 2   | Ê≠£Â∏∏     |
| [Âì≤‰πüÂêåÂ≠¶](https://github.com/blackmatrix7/ios_rule_script/tree/master/script/zheye) | ‰πã‰πéËÄÖ‰πü                             | MagicJS 3   | Ê≠£Â∏∏     |
| [Synology](https://github.com/blackmatrix7/ios_rule_script/tree/master/script/synology) | Áæ§ÊôñDownload StationËµÑÊ∫êÁ¶ªÁ∫ø‰∏ãËΩΩ     | MagicJS 3   | Ê≠£Â∏∏     |
| [AppleStore](https://github.com/blackmatrix7/ios_rule_script/tree/master/script/applestore) | AppleStore ÂïÜÂìÅÂ∫ìÂ≠òÁõëÊéß              | MagicJS 3   | ÊöÇÂÅú     |

#### Quantumult X Gallery

ÈÉ®ÂàÜËÑöÊú¨Â∑≤ÈÖçÁΩÆ‰∏∫Quantumult X Gallery„ÄÇ

Âú∞ÂùÄÔºö https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/gallery.json

#### BoxJS

ÊÑüË∞¢ [@chouchoui](https://github.com/chouchoui) ‰∏∫Êú¨È°πÁõÆÊ∑ªÂä†BoxJSÁöÑËÆ¢ÈòÖ„ÄÇ

Âú∞ÂùÄÔºöhttps://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/boxjs.json

### Â§ñÈÉ®ËµÑÊ∫ê

È°πÁõÆ‰∏≠ËµÑÊ∫êÊù•Ëá™‰∫íËÅîÁΩë‰∏äÂÖ∂‰ªñÂºÄÊ∫êÈ°πÁõÆÔºàÂÖ∑‰Ωì‰ª•‰∏çÂêåÁõÆÂΩïÁöÑËØ¥Êòé‰∏∫ÂáÜÔºâÔºåËøôÈáå‰∏ªË¶ÅËøõË°å‰∏Ä‰∫õÊï¥ÂêàÂíåÂ§á‰ªΩ„ÄÇÂØπ‰∫éÊ≠§Á±ªËµÑÊ∫êÔºåÊó†Ê≥ïÂØπ‰ΩøÁî®ËøáÁ®ã‰∏≠Âá∫Áé∞ÁöÑ‰ªª‰ΩïÈóÆÈ¢òËøõË°åËß£Á≠îÔºåÊÇ®ÈúÄË¶ÅËÅîÁ≥ªÂéü‰ΩúËÄÖ„ÄÇ

Âú∞ÂùÄÔºöhttps://github.com/blackmatrix7/ios_rule_script/tree/master/external

# ÊÑüË∞¢

‰ª•‰∏ãÊéíÂêç‰∏çÂàÜÂÖàÂêé

[@BaileyZyp](https://github.com/BaileyZyp)   [@Mazeorz](https://github.com/Mazeorz)   [@LuzMasonj](https://github.com/LuzMasonj)  [@chouchoui](https://github.com/chouchoui)  [@ypannnn](https://github.com/ypannnn)  [@echizenryoma](https://github.com/echizenryoma)  [@zirawell](https://github.com/zirawell)  [@urzz](https://github.com/urzz)  [@ASD-max](https://github.com/ASD-max)

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[BaldissaraMatheus/Tasks.md]]></title>
            <link>https://github.com/BaldissaraMatheus/Tasks.md</link>
            <guid>https://github.com/BaldissaraMatheus/Tasks.md</guid>
            <pubDate>Tue, 14 Oct 2025 00:04:25 GMT</pubDate>
            <description><![CDATA[A self-hosted, Markdown file based task management board]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/BaldissaraMatheus/Tasks.md">BaldissaraMatheus/Tasks.md</a></h1>
            <p>A self-hosted, Markdown file based task management board</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,856</p>
            <p>Forks: 88</p>
            <p>Stars today: 24 stars today</p>
            <h2>README</h2><pre># ![logo](public/logo.png) Tasks.md
A self-hosted, Markdown file based task management board.


![Demo](./public/demo.gif)

## ‚≠ê Features
- Create cards, lanes and tags in a modern and responsive interface;
- Write cards as Markdown files;
- Easy to install with a single Docker image;
- Light and dark themes synced with operating system settings;
- Heavily customizable with 3 default color themes ([Adwaita](https://gnome.pages.gitlab.gnome.org/libadwaita/doc/main/named-colors.html), [Nord](https://www.nordtheme.com/) and [Catppuccin](https://github.com/catppuccin/catppuccin));
- Support for subpath based reverse-proxy with an environment variable for base path;
- Can be installed as PWA.

## Upgrade from 2.X.X to 3.X.X
If you&#039;re running a docker container with version 2 of Tasks.md and want to upgrade it to version 3, please follow up [those instructions](/migration-guide.md) as it requires some tweeks for it to work properly.

## üêã Installation
### Docker
Paste this command:
```
docker run -d \
  --name tasks.md \
  -e PUID=1000 \
  -e PGID=1000 \
  -e TITLE=&quot;&quot; \
  -e BASE_PATH=&quot;&quot; \
  -e LOCAL_IMAGES_CLEANUP_INTERVAL=1440 \
  -p 8080:8080 \
  -v /path/to/tasks/:/tasks/ \
  -v /path/to/config/:/config/ \
  --restart unless-stopped \
  baldissaramatheus/tasks.md
```
Remove the environment variables you don&#039;t want to keep (all of them are optional, PUID and PGID are recommended), replace `/path/to/something` with directories that exist in your filesystem and then execute it. The environment variables are the following:
- `PUID` and `PGID`: User ID and group ID that owns the files and directories. On linux distros you can find your user&#039;s UID and GID running `id` in the terminal, but it&#039;s usually `1000` for both variables. If no value is assigned for those variables, docker will create all the files and directories as root. You can read more about it [here](https://docs.linuxserver.io/general/understanding-puid-and-pgid/).
- `TITLE`: A given name that shows below the header and in the browser tab when accessing root path;
- `BASE_PATH`: Base path in the url. Use this variable if you are going to run the app under a subpath based reverse-proxy. Be aware that PWA does not work when BASE_PATH is set with anything other than &quot;/&quot;;
- `LOCAL_IMAGES_CLEANUP_INTERVAL`: After a given interval the app will remove all local images that aren&#039;t present in any task. This variable control the duration in minutes of this interval. The default value is 1440 (exactly 24h). Set it as 0 to disable it.


### docker-compose
```
version: &quot;3&quot;
services:
  tasks.md:
    image: baldissaramatheus/tasks.md
    container_name: tasks.md
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /path/to/tasks:/tasks
      - /path/to/config:/config
    restart: unless-stopped
    ports:
      - 8080:8080
```
Use the Docker section above as reference for setting up variables and volumes.


### Source code
Clone the repository with `git clone --recursive`, open a terminal instance in the `/frontend` directory and another one in the `/backend` directory, then in both of them run `npm install` and `npm start`. The env variables are set in `package.json` file for both directories, and are the same ones listed in the Docker section above, plus `CONFIG_DIR` and `TASKS_DIR` for config and tasks directories paths.

## üé® Customize
You can customize the application CSS through the `custom.css` (within `/config` directory if you&#039;re on Docker). You can replace the default `adwaita` theme with `nord` or `catppuccin`, or you can make your own changes. The easieste way to customize the application is to use the existing color variables (detailed [below](#color-variables)), but if you want to make changes other than color replacements you can use [index.css](frontend/src/stylesheets/index.css) file as a reference.

### Color variables
- `color-accent`: Highlight color;
- `color-foreground`: Anything that goes against background that needs contrast, text color;
- `color-background-1`: Main background color, used as background color for the app main page;
- `color-background-2`: 1 layer above main background color, used as background color for editor code-block, dialog, popovers, lanes and header;
- `color-background-3`: 2 layer above main background color, used as background color for cards;
- `color-background-4`: 3 layer above main background color, used as background color for buttons and inputs;
- `color-alt-1`: Used as tag color, input error and past due date;
- `color-alt-2`: Used as tag color;
- `color-alt-3`: Used as tag color and due date when it&#039;s current date;
- `color-alt-4`: Used as tag color;
- `color-alt-5`: Used as tag color;
- `color-alt-6`: Used as tag color;
- `color-alt-7`: Used as tag color;


## üìÅ Files structure
The way directories and files are organized in Tasks.md is quite simple. Every lane you add within the app is a directory in your filesystem and every task is file.

#### So if your tasks look like this:
![Screenshot of the app. There are 3 lanes, Backlog, Sprint and Done. Within Done there is one file named &quot;Something something&quot;](/public/directories-organization-1.png)

#### Your files should look like this:
![Screenshot of a file explorer showing 3 folders: Backlog, Sprint and Done](/public/directories-organization-2.png)
![Screenshot of file explorer within a folder called &quot;Done&quot;, containing one file named &quot;Something something&quot;](/public/directories-organization-3.png)

Sub-directories can also be opened as their own projects. In this example, by opening the app under `/backlog` path it will treat this directory as a different project, with its own lanes and tasks.

More details (and it how it looks within Obsidian) can be found [here](https://github.com/BaldissaraMatheus/Tasks.md/issues/49).

## üíª Technology stack
With the goal of having a good mix of performance and maintainability, the application was built with [SolidJS](https://github.com/solidjs/solid) and [Koa](https://github.com/koajs/koa). It also uses [Stacks-Editor](https://github.com/StackExchange/Stacks-Editor) for text editing and [serve-static](https://github.com/expressjs/serve-static) to serve the css files as-is.

## üî® Contribute
This is a low maintenance project. The scope of features and support are purposefully kept narrow to ensure longer term maintenance is viable. Issues and PRs raised for bugs and quality of life improvements are perfectly fine, just don‚Äôt do that for features that significantly increase the scope of the project.

### Sponsor
If you like the project, consider [becoming a sponsor](https://github.com/sponsors/BaldissaraMatheus) with a one-time donation!

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[tangly1024/NotionNext]]></title>
            <link>https://github.com/tangly1024/NotionNext</link>
            <guid>https://github.com/tangly1024/NotionNext</guid>
            <pubDate>Tue, 14 Oct 2025 00:04:24 GMT</pubDate>
            <description><![CDATA[‰ΩøÁî® NextJS + Notion API ÂÆûÁé∞ÁöÑÔºåÊîØÊåÅÂ§öÁßçÈÉ®ÁΩ≤ÊñπÊ°àÁöÑÈùôÊÄÅÂçöÂÆ¢ÔºåÊó†ÈúÄÊúçÂä°Âô®„ÄÅÈõ∂Èó®ÊßõÊê≠Âª∫ÁΩëÁ´ôÔºå‰∏∫NotionÂíåÊâÄÊúâÂàõ‰ΩúËÄÖËÆæËÆ°„ÄÇ (A static blog built with NextJS and Notion API, supporting multiple deployment options. No server required, zero threshold to set up a website. Designed for Notion and all creators.)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/tangly1024/NotionNext">tangly1024/NotionNext</a></h1>
            <p>‰ΩøÁî® NextJS + Notion API ÂÆûÁé∞ÁöÑÔºåÊîØÊåÅÂ§öÁßçÈÉ®ÁΩ≤ÊñπÊ°àÁöÑÈùôÊÄÅÂçöÂÆ¢ÔºåÊó†ÈúÄÊúçÂä°Âô®„ÄÅÈõ∂Èó®ÊßõÊê≠Âª∫ÁΩëÁ´ôÔºå‰∏∫NotionÂíåÊâÄÊúâÂàõ‰ΩúËÄÖËÆæËÆ°„ÄÇ (A static blog built with NextJS and Notion API, supporting multiple deployment options. No server required, zero threshold to set up a website. Designed for Notion and all creators.)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 10,400</p>
            <p>Forks: 13,594</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre># Â∏ÆÂä©ÊïôÁ®ã

ËÆøÈóÆÂ∏ÆÂä©Ôºö[NotionNextÂ∏ÆÂä©ÊâãÂÜå](https://docs.tangly1024.com/)

&gt; Êú¨È°πÁõÆÊïôÁ®ã‰∏∫ÂÖçË¥π„ÄÅÂÖ¨ÂºÄËµÑÊ∫êÔºå‰ªÖÈôê‰∏™‰∫∫Â≠¶‰π†‰ΩøÁî®ÔºåÁ¶ÅÊ≠¢Âà©Áî®Êú¨ÊïôÁ®ãÂª∫Á´ãÁöÑÂçöÂÆ¢ÂèëÂ∏ÉÈùûÊ≥ïÂÜÖÂÆπ„ÄÅËøõË°åËøùÊ≥ïÁäØÁΩ™Ê¥ªÂä®„ÄÇ‰∏•Á¶Å‰ªª‰Ωï‰∏™‰∫∫ÊàñÁªÑÁªáÂ∞ÜÊú¨ÊïôÁ®ãÁî®‰∫éÂïÜ‰∏öÁî®ÈÄîÔºåÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÁõ¥Êé•ÂîÆÂçñ„ÄÅÈó¥Êé•Êî∂Ë¥π„ÄÅÊàñÂÖ∂‰ªñÂèòÁõ∏ÁõàÂà©Ë°å‰∏∫„ÄÇËΩ¨ËΩΩ„ÄÅÂ§çÂà∂Êàñ‰ªãÁªçÊú¨ÊïôÁ®ãÂÜÖÂÆπÊó∂ÔºåÈ°ª‰øùÁïô‰ΩúËÄÖ‰ø°ÊÅØÂπ∂ÊòéÁ°ÆÊ≥®ÊòéÊù•Ê∫ê„ÄÇ 
&gt; Êú¨È°πÁõÆ‰ªÖÊèê‰æõÁî±‰ΩúËÄÖÂõ¢ÈòüÊéàÊùÉÁöÑ‰ªòË¥πÂí®ËØ¢ÊúçÂä°ÔºåËØ∑Ê≥®ÊÑèËæ®Âà´ÔºåË∞®Èò≤ËØàÈ™óË°å‰∏∫„ÄÇ‰ªª‰ΩïÊú™ÁªèÊéàÊùÉÁöÑÊî∂Ë¥πÊúçÂä°ÂùáÂèØËÉΩÂ≠òÂú®Ê≥ïÂæãÈ£éÈô©„ÄÇ

NotionÊòØ‰∏Ä‰∏™ËÉΩËÆ©ÊïàÁéáÊö¥Ê∂®ÁöÑÁîü‰∫ßÂäõÂºïÊìéÔºåÂèØ‰ª•Â∏Æ‰Ω†‰π¶ÂÜôÊñáÊ°£„ÄÅÁÆ°ÁêÜÁ¨îËÆ∞ÔºåÊê≠Âª∫Áü•ËØÜÂ∫ìÔºåÁîöËá≥ÂèØ‰ª•‰∏∫‰Ω†ËßÑÂàíÈ°πÁõÆ„ÄÅÊó∂Èó¥ÁÆ°ÁêÜ„ÄÅÁªÑÁªáÂõ¢Èòü„ÄÅÊèêÈ´òÁîü‰∫ßÂäõ„ÄÅËøòÊúâÂΩìÂâçÊúÄÂº∫Â§ßÁöÑAIÊäÄÊúØÂä†ÊåÅ„ÄÇ

&gt; Â¶ÇÊûúÂ∏åÊúõËøõ‰∏ÄÊ≠•Êé¢Á¥¢NotionÁöÑÂäüËÉΩÔºåÊ¨¢ËøéË¥≠‰π∞„Ää[NotionÁ¨îËÆ∞‰ªéÂÖ•Èó®Âà∞Á≤æÈÄöËøõÈò∂ËØæÁ®ã](https://docs.tangly1024.com/article/notion-tutorial)„Äã

# NotionNext

&lt;p&gt;
  &lt;a aria-label=&quot;GitHub commit activity&quot; href=&quot;https://github.com/tangly1024/NotionNext/commits/main&quot; title=&quot;GitHub commit activity&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/commit-activity/m/tangly1024/NotionNext?style=for-the-badge&quot;/&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;GitHub contributors&quot; href=&quot;https://github.com/tangly1024/NotionNext/graphs/contributors&quot; title=&quot;GitHub contributors&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/contributors/tangly1024/NotionNext?color=orange&amp;style=for-the-badge&quot;/&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;Build status&quot; href=&quot;#&quot; title=&quot;Build status&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/deployments/tangly1024/NotionNext/Production?logo=Vercel&amp;style=for-the-badge&quot;/&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;Powered by Vercel&quot; href=&quot;https://vercel.com?utm_source=Craigary&amp;utm_campaign=oss&quot; title=&quot;Powered by Vercel&quot;&gt;
    &lt;img src=&quot;https://www.datocms-assets.com/31049/1618983297-powered-by-vercel.svg&quot; height=&quot;28&quot;/&gt;
  &lt;/a&gt;
&lt;/p&gt;

‰∏≠ÊñáÊñáÊ°£ | [README in English](./README_EN.md)

&lt;hr/&gt;

‰∏Ä‰∏™‰ΩøÁî® NextJS + Notion API ÂÆûÁé∞ÁöÑÔºåÈÉ®ÁΩ≤Âú® Vercel ‰∏äÁöÑÈùôÊÄÅÂçöÂÆ¢Á≥ªÁªü„ÄÇ‰∏∫NotionÂíåÊâÄÊúâÂàõ‰ΩúËÄÖËÆæËÆ°„ÄÇ

ÊîØÊåÅÂ§öÁßçÈÉ®ÁΩ≤ÊñπÊ°à

## È¢ÑËßàÊïàÊûú

Âú®Á∫øÊºîÁ§∫Ôºö[https://preview.tangly1024.com/](https://preview.tangly1024.com/) ÔºåÁÇπÂáªÂ∑¶‰∏ãËßíÊåÇ‰ª∂ÂèØ‰ª•ÂàáÊç¢‰∏ªÈ¢òÔºåÊ≤°ÊâæÂà∞ÂñúÊ¨¢ÁöÑ‰∏ªÈ¢òÔºü[Ë¥°ÁåÆ](/CONTRIBUTING.md)‰∏Ä‰∏™Âêß~

| Next                                                                                                  | Medium                                                                                                      | Hexo                                                                                                  | Fukasawa                                                                                                          |
| ----------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------- |
| &lt;img src=&#039;./docs/theme-next.png&#039; width=&#039;300&#039;/&gt; [È¢ÑËßàNEXT](https://preview.tangly1024.com/?theme=next) | &lt;img src=&#039;./docs/theme-medium.png&#039; width=&#039;300&#039;/&gt; [È¢ÑËßàMEDIUM](https://preview.tangly1024.com/?theme=medium) | &lt;img src=&#039;./docs/theme-hexo.png&#039; width=&#039;300&#039;/&gt; [È¢ÑËßàHEXO](https://preview.tangly1024.com/?theme=hexo) | &lt;img src=&#039;./docs/theme-fukasawa.png&#039; width=&#039;300&#039;/&gt; [È¢ÑËßàFUKASAWA](https://preview.tangly1024.com/?theme=fukasawa) |

## Ëá¥Ë∞¢

ÊÑüË∞¢Craig HartÂèëËµ∑ÁöÑNobeliumÈ°πÁõÆ

&lt;table&gt;&lt;tr align=&quot;left&quot;&gt;
  &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/craigary&quot; title=&quot;Craig Hart&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10571717&quot; width=&quot;64px;&quot;alt=&quot;Craig Hart&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/craigary&quot; title=&quot;Craig Hart&quot;&gt;Craig Hart&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

## Ë¥°ÁåÆËÄÖ

Ëá¥Êï¨ÊØè‰∏Ä‰ΩçÂºÄÂèëËÄÖÔºÅ

[![Contributors](https://contrib.rocks/image?repo=tangly1024/NotionNext)](https://github.com/tangly1024/NotionNext/graphs/contributors)

## ÂºïÁî®ÊäÄÊúØ

- **Ê°ÜÊû∂**: [Next.js](https://nextjs.org)
- **Ê†∑Âºè**: [Tailwind CSS](https://www.tailwindcss.cn/)
- **Ê∏≤Êüì**: [React-notion-x](https://github.com/NotionX/react-notion-x)
- **ËØÑËÆ∫**: [Twikoo](https://github.com/imaegoo/twikoo), [Giscus](https://giscus.app/zh-CN), [Gitalk](https://gitalk.github.io), [Cusdis](https://cusdis.com), [Utterances](https://utteranc.es)
- **ÂõæÊ†á**: [Fontawesome](https://fontawesome.com/v6/icons/)

## üîó ÂèãÊÉÖÈìæÊé•

- [Elog](https://github.com/LetTTGACO/elog) Markdown ÊâπÈáèÂØºÂá∫Â∑•ÂÖ∑„ÄÅÂºÄÊîæÂºèË∑®Âπ≥Âè∞ÂçöÂÆ¢Ëß£ÂÜ≥ÊñπÊ°àÔºåÈöèÊÑèÁªÑÂêàÂÜô‰ΩúÂπ≥Âè∞(ËØ≠ÈõÄ/Notion/FlowUs/È£û‰π¶)ÂíåÂçöÂÆ¢Âπ≥Âè∞(Hexo/Vitepress/Halo/Confluence/WordPressÁ≠â)

## License

The MIT License.

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=tangly1024/NotionNext&amp;type=Date)](https://star-history.com/#tangly1024/NotionNext&amp;Date)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[zotero/zotero]]></title>
            <link>https://github.com/zotero/zotero</link>
            <guid>https://github.com/zotero/zotero</guid>
            <pubDate>Tue, 14 Oct 2025 00:04:23 GMT</pubDate>
            <description><![CDATA[Zotero is a free, easy-to-use tool to help you collect, organize, annotate, cite, and share your research sources.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/zotero/zotero">zotero/zotero</a></h1>
            <p>Zotero is a free, easy-to-use tool to help you collect, organize, annotate, cite, and share your research sources.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 12,601</p>
            <p>Forks: 892</p>
            <p>Stars today: 35 stars today</p>
            <h2>README</h2><pre>Zotero
======
[![CI](https://github.com/zotero/zotero/actions/workflows/ci.yml/badge.svg)](https://github.com/zotero/zotero/actions/workflows/ci.yml)

[Zotero](https://www.zotero.org/) is a free, easy-to-use tool to help you collect, organize, cite, and share your research sources.

Please post feature requests or bug reports to the [Zotero Forums](https://forums.zotero.org/). If you&#039;re having trouble with Zotero, see [Getting Help](https://www.zotero.org/support/getting_help).

For more information on how to use this source code, see the [Zotero documentation](https://www.zotero.org/support/dev/source_code).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[renmu123/biliLive-tools]]></title>
            <link>https://github.com/renmu123/biliLive-tools</link>
            <guid>https://github.com/renmu123/biliLive-tools</guid>
            <pubDate>Tue, 14 Oct 2025 00:04:22 GMT</pubDate>
            <description><![CDATA[Áõ¥Êí≠‰∏ÄÁ´ôÂºèÂ§ÑÁêÜÂ∑•ÂÖ∑ÔºåÊîØÊåÅÁõ¥Êí≠ÂΩïÂà∂&ËßÜÈ¢ëÂ§ÑÁêÜ&ÂºπÂπïÂ§ÑÁêÜ&ÂΩïÊí≠Âß¨Ëá™Âä®‰∏ä‰º†]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/renmu123/biliLive-tools">renmu123/biliLive-tools</a></h1>
            <p>Áõ¥Êí≠‰∏ÄÁ´ôÂºèÂ§ÑÁêÜÂ∑•ÂÖ∑ÔºåÊîØÊåÅÁõ¥Êí≠ÂΩïÂà∂&ËßÜÈ¢ëÂ§ÑÁêÜ&ÂºπÂπïÂ§ÑÁêÜ&ÂΩïÊí≠Âß¨Ëá™Âä®‰∏ä‰º†</p>
            <p>Language: JavaScript</p>
            <p>Stars: 810</p>
            <p>Forks: 48</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre># biliLive-tools

![Downloads](https://img.shields.io/github/downloads/renmu123/biliLive-tools/total)

ËøôÊòØ‰∏Ä‰∏™Áõ¥Êí≠ÁöÑ‰∏ÄÁ´ôÂºèÂ∑•ÂÖ∑ÔºåÊîØÊåÅÂºπÂπïËΩ¨Êç¢‰∏éËßÜÈ¢ëÂéãÂà∂Âπ∂‰∏ä‰º†Ëá≥BÁ´ôÔºåÊîØÊåÅÊñóÈ±º„ÄÅËôéÁâô„ÄÅBÁ´ô„ÄÅÊäñÈü≥Áõ¥Êí≠ÂΩïÂà∂ÔºåÊîØÊåÅ[BÁ´ôÂΩïÊí≠Âß¨](https://github.com/BililiveRecorder)„ÄÅ[blrec](https://github.com/acgnhiki/blrec)„ÄÅ[DDTV](https://github.com/CHKZL/DDTV)ÁöÑwebhook„ÄÇ  
Â¶ÇÊûú‰Ω†ÊòØÂΩïÊí≠manÊ≠£Âú®ÂØªÊâæxmlÂºπÂπïËΩ¨Êç¢„ÄÅÂºπÂπïÂéãÂà∂„ÄÅwebhook‰∏ä‰º†Â∑•ÂÖ∑ÔºåÂ¶ÇÊûú‰Ω†ÊòØÂàáÁâámanÊ≠£Âú®ÂØªÊâæ‰∏ãËΩΩÂΩïÊí≠ËßÜÈ¢ëÂ∑•ÂÖ∑ÔºåÂ¶ÇÊûú‰Ω†ÂéåÂÄ¶‰∫ÜbÁ´ôÁöÑÂ§öp‰∏ä‰º†Ôºå‰Ω†ÂèØ‰ª•Êù•ËØïËØïÊú¨ËΩØ‰ª∂„ÄÇ  
ÂÅöËøôÊ¨æÂ∑•ÂÖ∑ÁöÑÂàùË°∑ÊòØ‰∏∫‰∫ÜËß£ÂÜ≥ÂΩïÊí≠Â∑•ÂÖ∑ÁöÑÁ¢éÁâáÂåñÔºåÂæÄÂæÄÊÉ≥ÂÆåÊï¥Â§ÑÁêÜ‰∏ÄÂú∫Â∏¶ÊúâÂºπÂπïÁöÑÂΩïÊí≠Ë¶Å‰ΩøÁî®Â§ö‰∏™ËΩØ‰ª∂ÁöÑÈÖçÂêàÔºå‰∏Ä‰∫õÂ∑•ÂÖ∑Âè™ÊúâCLIÔºåÂä†Â§ß‰∫Ü‰ΩøÁî®ÈöæÂ∫¶„ÄÇ  
ËΩØ‰ª∂ÁöÑÁõÆÊ†áÊòØÂºÄÁÆ±Âç≥Áî®Ôºå‰ΩìÈ™å‰ºòÂÖàÔºåÈªòËÆ§ÈÖçÁΩÆ‰∏ãÊª°Ë∂≥Â§ßÈÉ®ÂàÜ‰∫∫‰ΩøÁî®ÈúÄÊ±ÇÔºåÂêåÊó∂ÊîØÊåÅ‰∏™ÊÄßÂåñÈúÄÊ±ÇÊù•Â¢ûÂä†ÂèØÁî®ÊÄß„ÄÇ  
‰Ω†ÂèØ‰ª•Âú®BÁ´ôÊü•Áúã[Á≥ªÂàóÊïôÁ®ã](https://www.bilibili.com/video/BV1Hs421M755/)

**Â¶ÇÊûú‰Ω†‰ΩøÁî®‰∫ÜÊú¨ËΩØ‰ª∂ÔºåÂ∏åÊúõ‰Ω†Âú®ÁÆÄ‰ªãÊ†áÊ≥®‰ªìÂ∫ìÂú∞ÂùÄÊàñ‰øùÁïôÈªòËÆ§tagÔºåÊú¨ËΩØ‰ª∂‰∏çÂ≠òÂú®‰ªª‰ΩïÊï∞ÊçÆËøΩË∏™ÔºåÊàëÊÉ≥Â§ßËá¥Áü•ÈÅì‰ΩøÁî®‰ΩøÁî®‰∫∫Áæ§ÂèäÊÉÖÂÜµ**

[Êõ¥Êñ∞ÂéÜÂè≤](https://github.com/renmu123/biliLive-tools/blob/master/CHANGELOG.md)

1. ÊîØÊåÅÂΩïÊí≠Âß¨‰∏éblrecÁöÑwebhookËá™Âä®ÂåñÂ§ÑÁêÜ
2. ÊîØÊåÅ Danmafactory GUI ÂºπÂπïxmlËΩ¨Êç¢
3. ÊîØÊåÅÊ†πÊçÆÂºπÂπïÂàáÁâá
4. ÊîØÊåÅbÁ´ôÂàÜPÊäïÁ®ø
5. ÊîØÊåÅËßÜÈ¢ë‰∏éÂºπÂπïÂéãÂà∂
6. ÊîØÊåÅ ffmpeg ËΩ¨Á†ÅÂèäËΩ¨Â∞ÅË£ÖÔºàÂê´ÈùûÊ†áflv‰∏ãÁöÑhevcÔºâ
7. ÊîØÊåÅBÁ´ôËßÜÈ¢ë„ÄÅÊñóÈ±º„ÄÅËôéÁâô„ÄÅÂø´ÊâãÂΩïÊí≠ÂèäÂÖ∂ÂºπÂπï‰∏ãËΩΩ
8. ÊîØÊåÅÊñóÈ±º„ÄÅËôéÁâô„ÄÅBÁ´ô„ÄÅÊäñÈü≥Áõ¥Êí≠ÂΩïÂà∂
9. ÊîØÊåÅËá™Âä®ÂêåÊ≠•Âà∞ÁôæÂ∫¶‰∫ë„ÄÅÈòøÈáå‰∫ë„ÄÅalistÂπ≥Âè∞

![preview](./docs/preview.png)

# ÂÆâË£Ö

**‰ªª‰ΩïÁâàÊú¨Êõ¥Êñ∞ÂâçËØ∑Êü•ÁúãÊõ¥Êñ∞ËÆ∞ÂΩïÔºåÈÅøÂÖçÁ†¥ÂùèÊÄßÊõ¥Êñ∞Â∏¶Êù•ÁöÑÈóÆÈ¢ò**

ÊúÄ‰ºòÂÖàÊîØÊåÅÁöÑÊòØÊ°åÈù¢Á®ãÂ∫èÔºåÂÖ∂‰ΩôÊàñÂ§öÊàñÂ∞ëÁº∫Â§±‰∫ÜÈÉ®ÂàÜÂäüËÉΩ

## Ê°åÈù¢Á®ãÂ∫è

‰∏çÊèê‰æõ MacOS ÂÆâË£ÖÂåÖÔºåÈúÄË¶ÅÁöÑÂèØ‰ª•Ëá™Ë°åÁºñËØëÔºåÁºñËØëÊó∂ÈúÄË¶ÅÊõøÊç¢Áî®Âà∞ÁöÑ‰∫åËøõÂà∂Êñá‰ª∂„ÄÇ  
Áî±‰∫éÊàë‰∏çÂú®LinuxÂºÄÂèëÔºåÊµãËØïË¶ÜÁõñ‰∏çÂπøÔºåÂ¶ÇÊûúÂ≠òÂú®ÈóÆÈ¢òÂèØ‰ª•Êèêissue„ÄÇ

‰∏ãËΩΩÂú∞ÂùÄÔºöhttps://github.com/renmu123/biliLive-tools/releases  
Â§áÁî®‰∏ãËΩΩÂú∞ÂùÄÔºöhttps://pan.quark.cn/s/6da253a1ecb8

## CLI

CLIÁöÑ‰ΩøÁî®ÂèÇËÄÉ[ÊñáÊ°£](https://github.com/renmu123/biliLive-tools/tree/master/packages/CLI)

‰πüÂèØ‰ª•‰ΩøÁî®`npm i bililive-cli -g`Êù•ËøõË°åÂÆâË£Ö

## docker

**Áî±‰∫éËΩØ‰ª∂Âπ∂ÈùûÈíàÂØπwebËÆæËÆ°ÔºåÊó†Ê≥ï‰øùËØÅÂÆâÂÖ®ÊÄßÔºåËØ∑Ë∞®ÊÖéÊö¥Èú≤Âú®ÂÖ¨ÁΩë‰∏≠**

‰Ω†ÂèØ‰ª•ÈÄöËøáËøêË°å`docker-compose up -d`Êù•Âø´ÈÄüÊê≠Âª∫Ôºå‰πüÂèØ‰ª•Êü•Áúã[ËßÜÈ¢ëÊïôÁ®ã](https://www.bilibili.com/video/BV1HVd5YdEGh)

```yaml
services:
  # UIÈïúÂÉè
  webui:
    image: renmu1234/bililive-tools-frontend
    ports:
      - &quot;3000:3000&quot;
  # Êé•Âè£ÈïúÂÉè
  api:
    image: renmu1234/bililive-tools-backend
    ports:
      - &quot;18010:18010&quot;
    volumes:
      # Êò†Â∞ÑÁöÑÈÖçÁΩÆÁõÆÂΩïÔºåÁî®‰∫éÊåÅ‰πÖÂåñÈÖçÁΩÆÊñá‰ª∂
      - ./data:/app/data
      # Â≠òÂÇ®Êñá‰ª∂ÁöÑÈªòËÆ§ÁõÆÂΩï
      - ./video:/app/video
      # Â≠ó‰ΩìÁõÆÂΩï
      - ./fonts:/usr/local/share/fonts
    environment:
      # ÁôªÂΩïÂØÜÈí•
      - BILILIVE_TOOLS_PASSKEY=your_passkey
      # Ë¥¶Êà∑Âä†ÂØÜÂØÜÈí•
      - BILILIVE_TOOLS_BILIKEY=your_bilikey
      # ‰∏≠ÂõΩÊó∂Âå∫
      - TZ=Asia/Shanghai
```

ÂÖ∑‰ΩìÊîØÊåÅÁöÑÁéØÂ¢ÉÂèòÈáèËßÅ[ÊñáÊ°£](./README.md#ÊîØÊåÅÁöÑÁéØÂ¢ÉÂèòÈáè)

### webhook

docker‰∏ãÁî±‰∫éÂ≠òÂÇ®ÂíåÁΩëÁªúÁöÑÈöîÁ¶ªÔºåwebhook‰ΩøÁî®ÂÖ∂‰ªñÂÆâË£ÖÊñπÂºèÂπ∂‰∏çÂÆåÂÖ®‰∏ÄËá¥ÔºåÊàë‰ª¨ËøôÈáå‰ª•ÂΩïÊí≠Âß¨‰∏∫‰æãÔºåÂÖ∂‰ªñÊúçÂä°Á±ª‰ººÔºö

ËøêË°å‰πãÂêéÊâìÂºÄÂΩïÊí≠Âß¨ÁöÑÈÖçÁΩÆwebhookV2‰∏∫`http://api:18010/webhook/bililiverecorder`ÔºåÊó†È°ªÂú®ËΩØ‰ª∂‰∏≠ËÆæÁΩÆ‚ÄúÂΩïÊí≠Âß¨Â∑•‰ΩúÁõÆÂΩï‚Äù

```yaml
services:
  # UIÈïúÂÉè
  webui:
    image: renmu1234/bililive-tools-frontend
    ports:
      # ÂâçËÄÖÊåâÈúÄÊîπÂä®
      - &quot;3000:3000&quot;
  # Êé•Âè£ÈïúÂÉè
  api:
    image: renmu1234/bililive-tools-backend
    ports:
      - &quot;18010:18010&quot;
    volumes:
      # Êò†Â∞ÑÁöÑÈÖçÁΩÆÁõÆÂΩïÔºåÁî®‰∫éÊåÅ‰πÖÂåñÈÖçÁΩÆÊñá‰ª∂
      - ./data:/app/data
      # Áî®‰∫éÂ§ÑÁêÜwebhookÊï∞ÊçÆÔºåÊåâÈúÄ‰øÆÊîπÔºå‰∏éÂΩïÊí≠Âß¨ÁöÑÂèÇÊï∞‰∏ÄËá¥
      - ./video:/app/video
      # Â≠ó‰ΩìÁõÆÂΩï
      - ./fonts:/usr/local/share/fonts
    environment:
      # ÁôªÂΩïÂØÜÈí•ÔºåËá™Ë°å‰øÆÊîπ
      - BILILIVE_TOOLS_PASSKEY=your_passkey
      # Ë¥¶Êà∑Âä†ÂØÜÂØÜÈí•ÔºåËá™Ë°å‰øÆÊîπ
      - BILILIVE_TOOLS_BILIKEY=your_bilikey
      # ‰∏≠ÂõΩÊó∂Âå∫
      - TZ=Asia/Shanghai
  # ÂΩïÊí≠Âß¨
  recorder:
    image: bililive/recorder:latest
    restart: unless-stopped
    volumes:
      # Áî®‰∫éÂ§ÑÁêÜwebhookÊï∞ÊçÆÔºåÊåâÈúÄ‰øÆÊîπÔºåÂíå‰∏äËø∞ÂèÇÊï∞‰∏ÄËá¥
      - ./video:/rec
    ports:
      - &quot;2356:2356&quot;
      # Á¨¨‰∏Ä‰∏™ 2356 ÊòØÂÆø‰∏ªÊú∫ÁöÑÁ´ØÂè£ÔºåÂèØ‰ª•Ê†πÊçÆËá™Â∑±ÈúÄÊ±ÇÊîπÂä®„ÄÇ
      # Á¨¨‰∫å‰∏™ 2356 ÊòØÂÆπÂô®ÂÜÖÁöÑÁ´ØÂè£Ôºå‰∏çË¶Å‰øÆÊîπ„ÄÇ
    environment:
      - BREC_HTTP_BASIC_USER=Áî®Êà∑Âêç
      - BREC_HTTP_BASIC_PASS=ÂØÜÁ†Å
      # Êõ¥Â§öÂèÇÊï∞ËßÅÂΩïÊí≠Âß¨ÊñáÊ°£
```

### Á°¨‰ª∂ÁºñÁ†Å

#### IntelÊ†∏Êòæ(qsv)

ÂèØ‰ª•ÂèÇËÄÉ [#59](https://github.com/renmu123/biliLive-tools/issues/59)

## webui

ÂèØÁî®‰∫éÂõΩÂÜÖÊú™Â§áÊ°àÊú∫Âô®ÔºåÊàñÊáíÂæóËá™ÈÉ®ÁΩ≤ÁöÑÊÉÖÂÜµÔºåÂ¶ÇÊûú‰Ω†ÁöÑÊé•Âè£ÊòØhttpÂçèËÆÆÔºåÁî±‰∫éÊµèËßàÂô®ÂÆâÂÖ®Êé™ÊñΩÔºåÈúÄË¶ÅÂÖ≥Èó≠httpsÂíåhttpÊ∑∑ÂêàÁöÑÂÆâÂÖ®ÈÄâÈ°πÔºåÊàñËÄÖËá™ÈÉ®ÁΩ≤ÔºåËá™ÈÉ®ÁΩ≤ÂèÇËÄÉ[È°πÁõÆ](https://github.com/renmu123/biliLive-webui)

ÂØÜÈí•‰∏∫`appConfig.json`ÁöÑ`passKey`Â≠óÊÆµ„ÄÇ

‰∏ç‰ºö‰øùËØÅwebÁöÑÂÖºÂÆπÊÄßÔºåËØ∑Ëá™Ë°å‰øùËØÅÁΩëÈ°µÁ´Ø‰∏éÊúçÂä°Á´ØÁâàÊú¨‰∏ÄËá¥ÔºåÊµèËßàÂô®ÂÖºÂÆπÊÄß‰∏∫ÊúÄÊñ∞chromeÁâàÊú¨

Á∫ø‰∏äÂú∞ÂùÄÔºöhttps://bililive.irenmu.com

# ÂäüËÉΩ‰ªãÁªç

## Áõ¥Êí≠ÂΩïÂà∂

| Âπ≥Âè∞ | ÂºπÂπï | ÁîªË¥® | Á∫øË∑Ø | Cookie | ÊµÅÊ†ºÂºè | ÊµÅÁºñÁ†Å | Âè™Èü≥È¢ë | ‰ªòË¥πÁõ¥Êí≠ |
| ---- | ---- | ---- | ---- | ------ | ------ | ------ | ------ | -------- |
| ÊñóÈ±º | ‚úÖ   | ‚úÖ   | ‚úÖ   | ‚ùå     | ‚ùå     | ‚ùå     | ‚úÖ     | ‚ùå       |
| BÁ´ô  | ‚úÖ   | ‚úÖ   | ‚ùå   | ‚úÖ     | ‚úÖ     | ‚úÖ     | ‚úÖ     | ‚ùå       |
| ÊäñÈü≥ | ‚úÖ   | ‚úÖ   | ‚ùå   | ‚úÖ     | ‚úÖ     | ‚ùå     | ‚úÖ     | ‚ùå       |
| ËôéÁâô | ‚úÖ   | ‚úÖ   | ‚úÖ   | ‚ùå     | ‚ùå     | ‚ùå     | ‚ùå     | ‚ùå       |

1. ÊîØÊåÅBÁ´ô„ÄÅÊñóÈ±º„ÄÅËôéÁâô„ÄÅÊäñÈü≥‰∏âÂπ≥Âè∞ÂΩïÂà∂ÔºåÂåÖÂê´ÂºπÂπïÂíåÁ§ºÁâ©ÔºåBÁ´ôÈ¢ùÂ§ñÊîØÊåÅËà∞Èïø‰ª•ÂèäSCÔºåÊñóÈ±ºÊîØÊåÅÈ´òËÉΩÂºπÂπï
2. ‰ª•ÊúÄÂ∞èÁöÑÊñá‰ª∂Â§ßÂ∞èÊîØÊåÅÊúÄÂÖ®ÁöÑdanmakufactoryÂÖºÂÆπÊÄß
3. BÁ´ôÂΩïÂà∂ÊîØÊåÅÊâÄÊúâÊµÅÔºå‰ª•ÂèäÊâπÈáèÊü•ËØ¢Êé•Âè£
4. Êõ¥Âä†Âø´Êç∑ÁöÑÂä†ÂÖ•ËΩØ‰ª∂‰∏≠ÁöÑËá™Âä®ÂåñËßÜÈ¢ëÂéãÂà∂‰∏éËá™Âä®‰∏ä‰º†

ÁõÆÂâçÊîØÊåÅÊñóÈ±º„ÄÅËôéÁâô„ÄÅBÁ´ô„ÄÅÊäñÈü≥Âá†‰∏™Âπ≥Âè∞Ôºå**Èô§ÈùûÊàëÊúâÈúÄÊ±ÇÔºåÂê¶Âàô‰∏ç‰ºöÂ¢ûÂä†Êõ¥Â§öÂπ≥Âè∞ÔºåÊîØÊåÅPR**ÔºåÊîØÊåÅÂΩïÂà∂ÂºπÂπïÂèäÁ§ºÁâ©ÔºåÊñóÈ±ºÂíåBÁ´ôÈ¢ùÂ§ñÊîØÊåÅÈ´òËÉΩÂºπÂπï„ÄÇ

ÊúÄ‰ºòÂÖàÁª¥Êä§ÊñóÈ±º„ÄÅÂÖ∂Ê¨°BÁ´ô„ÄÅËôéÁâôÂíåÊäñÈü≥ÈöèÂøÉ

ÂÆûÁé∞Áî± [LiveAutoRecord](https://github.com/WhiteMinds/LiveAutoRecord) ÊãìÂ±ïËÄåÊù•

### ÂΩïÂà∂Âô®

FFMPEG ÊòØÈªòËÆ§ÁöÑÂΩïÂà∂Âô®ÔºåÂá†‰πéÊîØÊåÅÊâÄÊúâÁöÑÊ†ºÂºè„ÄÇ

mesio ‰Ωú‰∏∫ÊµãËØïÂΩïÂà∂Âô®Ë¢´ÂºïÂÖ•ÔºåÁî®‰∫éÊîØÊåÅ flv ‰øÆÂ§çÁ≠âÂäüËÉΩÔºåÂΩì‰Ω†ÈÄâÊã©‰∫Ü mesio ‰∏çÊîØÊåÅÁöÑÈÖçÁΩÆÔºå‰ºöÂ∞ùËØï‰ΩøÁî® FFMPEG Êù•ËøõË°åÂΩïÂà∂Ôºå‰ª•ÂèØ‰ª•ÂΩïÂà∂‰Ωú‰∏∫Á¨¨‰∏Ä‰øùÈöú

| ÂäüËÉΩ     | ffmpeg     | mesio        |
| -------- | ---------- | ------------ |
| FLV ÂΩïÂà∂ | ‚úÖ         | ‚úÖ           |
| HLS ÂΩïÂà∂ | ‚úÖ         | ‚úÖ           |
| Êó∂ÈïøÂàÜÊÆµ | ‚úÖ         | ‚úÖ           |
| Âè™Èü≥È¢ë   | ‚úÖ         | ‚úÖ           |
| ÂÆπÂô®ÊîØÊåÅ | MP4,TS,MKV | Ë∑üÈöèÈìæÊé•ÂÆπÂô® |
| FLV ‰øÆÂ§ç | ‚ùå         | ‚úÖ           |

## webhook

### [BÁ´ôÂΩïÊí≠Âß¨](https://github.com/BililiveRecorder)

ÈªòËÆ§webhookÂú∞ÂùÄÔºöhttp://127.0.0.1:18010/webhook/bililiverecorder

**ÈúÄË¶ÅÂú®Êú¨ËΩØ‰ª∂ÁöÑ‚ÄúËÆæÁΩÆ-webhook-ÂΩïÊí≠Âß¨Â∑•‰ΩúÁõÆÂΩï‚ÄùËÆæÁΩÆÂΩïÊí≠ÁöÑÂ∑•‰ΩúÁõÆÂΩï**

### [blrec](https://github.com/acgnhiki/blrec)

ÈªòËÆ§webhookÂú∞ÂùÄÔºöhttp://127.0.0.1:18010/webhook/blrec

**‰æùËµñ‰∫é‚ÄúËßÜÈ¢ëÊñá‰ª∂ÂàõÂª∫‚Äù,‚ÄúËßÜÈ¢ëÊñá‰ª∂ÂÆåÊàê‚Äù‰∏§‰∏™webhhookÔºåÂª∫ËÆÆÁõ¥Êé•ÂãæÈÄâÂÖ®ÈÉ®‰∫ã‰ª∂„ÄÇ**

### [oneliverec](https://www.oneliverec.cc)

ÈªòËÆ§webhookÂú∞ÂùÄÔºöhttp://127.0.0.1:18010/webhook/oneliverec

Ê≥®ÊÑèÁÇπÔºö

1. ÂøÖÈ°ªÂêØÁî®‚ÄúÊ†ºÂºèËΩ¨Êç¢‚Äù
2. webhook‰∫ã‰ª∂ÂøÖÈ°ªÈÄâ‰∏≠‚ÄúËßÜÈ¢ëËΩ¨Êç¢ÂÆåÊàê‚Äù‰∫ã‰ª∂ÔºåÂª∫ËÆÆÁõ¥Êé•ÂãæÈÄâÂÖ®ÈÉ®‰∫ã‰ª∂„ÄÇ

### [DDTV](https://github.com/CHKZL/DDTV)

ÈªòËÆ§webhookÂú∞ÂùÄÔºöhttp://127.0.0.1:18010/webhook/ddtv

ÈúÄË¶ÅÂ∞ÜDDTVÁöÑËΩØ‰ª∂‚ÄúËÆæÁΩÆ-Êñá‰ª∂‰∏éË∑ØÂæÑËÆæÁΩÆ-ÂΩïÂà∂Êñá‰ª∂‰øùÂ≠òË∑ØÂæÑ‚ÄùËÆæÁΩÆ‰∏∫ÁªùÂØπË∑ØÂæÑÔºåÊâìÂºÄÂºπÂπïÂΩïÂà∂„ÄÇ

Áî±‰∫éDDTVÁöÑwebhookËøîÂõûÂèÇÊï∞ÁöÑÈùûÂ∏∏Êâ≠Êõ≤~~ÈöæÁî®~~ÔºåÊó†Ê≥ï‰øùËØÅ‰ªªÊÑèÈÖçÁΩÆ‰∏ãÁöÑÂèØÁî®ÊÄß

### Ëá™ÂÆö‰πâWebhook

Â¶ÇÊûúÊÉ≥Êé•ÂÖ•webhookÁõ∏ÂÖ≥ÂäüËÉΩÔºå‰Ω†ÂèØ‰ª•Ëá™Ë°åÊûÑÈÄ†ÂèÇÊï∞Âπ∂Ë∞ÉÁî®Êé•Âè£ÔºåÈááÁî®`post`ÊñπÊ≥ïÔºåÁ´ØÂè£‰∏∫`/webhook/custom`ÔºåÊé•Êî∂ÂêéÁ´ãÂàªËøîÂõûhttp code=200„ÄÇ

ÂèÇÊï∞Ôºö
`event`: `FileClosed`|`FileOpening`|`FileError` Â¶ÇÊûú‰Ω†ÊÉ≥‰ΩøÁî®Êñ≠Êí≠Áª≠‰º†ÂäüËÉΩÔºåËØ∑Âú®‰∏ä‰∏Ä‰∏™`FileClosed`‰∫ã‰ª∂ÂêéÂú®ËÆæÁΩÆÁöÑÊó∂Èó¥Èó¥ÈöîÂÜÖÂèëÈÄÅ`FileOpening`‰∫ã‰ª∂Ôºå`FileError` Áî®‰∫éÂ∞ÜËØ•ËßÜÈ¢ëÊ†áÊ≥®‰∏∫ÈîôËØØÔºåÈÅøÂÖçÈòªÂ°ûÊµÅÁ®ã„ÄÇ  
`filePath`: ËßÜÈ¢ëÊñá‰ª∂ÁöÑÁªùÂØπË∑ØÂæÑ
`coverPath`: ÂèØÈÄâÔºåËßÜÈ¢ëÂ∞ÅÈù¢ÁöÑÁªùÂØπË∑ØÂæÑÔºåÂ¶ÇÊûú‰∏∫Á©∫Ôºå‰ºöËØªÂèñ‰∏éËßÜÈ¢ëÊñá‰ª∂ÂêçÁõ∏ÂêåÁöÑÂêéÁºÄ‰∏∫`jpg`ÁöÑÊñá‰ª∂
`danmuPath`: ÂèØÈÄâÔºåËßÜÈ¢ëÂºπÂπï`xml`Êñá‰ª∂ÔºåÂ¶ÇÊûú‰∏∫Á©∫Ôºå‰ºöËØªÂèñ‰∏éËßÜÈ¢ëÊñá‰ª∂ÂêçÁõ∏ÂêåÁöÑ`xml`Êñá‰ª∂
`roomId`: Êï∞Â≠óÁ±ªÂûãÔºåÊàøÈó¥Âè∑ÔºåÁî®‰∫éÊñ≠Êí≠Áª≠‰º†  
`time`: Áî®‰∫éÊ†áÈ¢òÊ†ºÂºèÂåñÁöÑÊó∂Èó¥ÔºåÁ§∫‰æãÔºö&quot;2021-05-14T17:52:54.946&quot;  
`title`: Ê†áÈ¢òÔºåÁî®‰∫éÊ†ºÂºèÂåñËßÜÈ¢ëÊ†áÈ¢ò  
`username`Ôºö‰∏ªÊí≠ÂêçÁß∞ÔºåÁî®‰∫éÊ†ºÂºèÂåñËßÜÈ¢ëÊ†áÈ¢ò

**‰ª•‰∏ãÂèÇÊï∞Áî®‰∫éÂºπÂπïÂàÜÊûêÂäüËÉΩÔºåÈùûÂøÖË¶Å**
Êúâ‰∫õÂºπÂπï‰∏≠Â≠òÂú®ÂÖÉÊï∞ÊçÆ(ÂèÇËÄÉblrec)ÁöÑ‰ºöË¢´Ëá™Âä®Ëß£ÊûêÔºåÊØîÂ¶ÇÂºπÂπïÂß¨ÊàñblrecÊàñdouyu-cli(0.6.1Âèä‰ª•‰∏ä)ÁîüÊàêÁöÑÂºπÂπï
`platform`ÔºöÂπ≥Âè∞ÔºåÂ¶ÇÊûúÊòØbÁ´ôÊé®Ëçê‰∏∫`bilibili`ÔºåÊñóÈ±ºÊé®Ëçê‰∏∫`douyu`ÔºåÂÖ∂ÂÆûÂ°´Âï•ÈÉΩÂèØ‰ª•  
`live_start_time`ÔºöÁõ¥Êí≠ÂºÄÂßãÊó∂Èó¥ÔºåÁ§∫‰æãÔºö&quot;2021-05-14T17:52:54.946&quot;
`live_title`ÔºöÁõ¥Êí≠Ê†áÈ¢ò

Á§∫‰æãÔºö

```bash
curl --location &#039;http://127.0.0.1:18010/webhook/custom&#039; \
--header &#039;Content-Type: application/json&#039; \
--data &#039;{
    &quot;event&quot;:&quot;FileClosed&quot;,
    &quot;filePath&quot;:&quot;D:\\aa.mp4&quot;,
    &quot;coverPath&quot;:&quot;D:\\aa.jpg&quot;,
    &quot;danmuPath&quot;:&quot;D:\\aa.xml&quot;,
    &quot;roomId&quot;:93589,
    &quot;time&quot;:&quot;2021-05-14T17:52:54.946&quot;,
    &quot;title&quot;:&quot;ÊàëÊòØÁå™&quot;,
    &quot;username&quot;:&quot;djw&quot;
}&#039;
```

## Êñ≠Êí≠Áª≠‰º†

Ëøô‰∏™ÂäüËÉΩ‰∏ªË¶ÅÁî®‰∫éËß£ÂÜ≥ÔºöÁî±‰∫éÁΩëÁªúÊàñËÄÖËÆæÁΩÆÂàÜÊÆµÂéüÂõ†ÂØºËá¥ÂΩïÊí≠ÁâáÊÆµË¢´ÂàáÂâ≤ÊàêÂ§ö‰∏™„ÄÇ  
ÂºÄÂêØÂêéÔºå‰ºöÂ∞Ü‰∏ªÊí≠ÁöÑ‰∏ÄÂú∫Áõ¥Êí≠‰∏ä‰º†Âà∞Âêå‰∏Ä‰∏™ËßÜÈ¢ë‰∏≠  
‰∏ÄÂú∫Áõ¥Êí≠ÁöÑÂÆö‰πâÔºöÂêå‰∏Ä‰∏™‰∏ªÊí≠ÔºåÊú¨Ê¨°Êñá‰ª∂ÂàõÂª∫Êó∂Èó¥‰∏é‰∏ä‰∏Ä‰∏™Êñá‰ª∂ÁªìÊùüÂÜôÂÖ•Êó∂Èó¥Â¶ÇÊûúÁõ∏Â∑ÆnÂàÜÈíüÔºà‰ΩøÁî®ÈÖçÁΩÆÔºâÔºåÈÇ£‰πà‰ºöË¢´ÂÆö‰πâ‰∏∫‰∏ÄÂú∫Áõ¥Êí≠Ôºå‰∏ç‰ºö‰ΩøÁî®webhook‰∏≠ÊØîÂ¶ÇÂΩïÊí≠Âß¨ÁöÑsessionÂÆö‰πâ„ÄÇ  
ÂºÄÂêØÂΩïÂà∂ÂêéÔºåÊàñÂèçÂ§çÂàáÊç¢ÂºÄÂÖ≥ÔºåÂèØËÉΩ‰ºöÊúâÂ•áÊÄ™ÁöÑÈîôËØØ„ÄÇ

## xmlÂºπÂπïËΩ¨Êç¢

xmlÂºπÂπïËΩ¨Êç¢Â∫ïÂ±Ç‰ΩøÁî®[DanmakuFactory](https://github.com/hihkm/DanmakuFactory)ÔºåBÁ´ôÂºπÂπïÁ°ÆËÆ§ÂèØ‰ª•‰ΩøÁî®ÔºåÂÖ∂‰ΩôÁ±ªÂûãËØ∑Ëá™Ë°åÊµãËØï„ÄÇ  
ÈÉ®ÂàÜÂäüËÉΩÂ¶ÇËá™ÈÄÇÂ∫îÂàÜËæ®Áéá

## ÂàáÁâáÂäüËÉΩ

ÊîØÊåÅÈÄöËøáÂºπÂπï‰ª•ÂèäÈ´òËÉΩËøõÂ∫¶Êù°Êù•Âø´ÈÄüÊâæÂà∞‰Ω†ÊâÄÈúÄË¶ÅÁöÑÁâáÊÆµÔºåÊîØÊåÅÂØºÂÖ•[lossless-cut](https://github.com/mifi/lossless-cut)È°πÁõÆ

### ÊîØÊåÅÂì™‰∫õÂø´Êç∑ÈîÆ

- `ctrl+s` ‰øùÂ≠òÂà∞llcÈ°πÁõÆ
- `ctrl+shift+s` Âè¶Â≠ò‰∏∫llcÈ°πÁõÆ
- `ctrl+enter` ÂØºÂá∫
- `ctrl+z` Êí§ÈîÄ
- `ctrl+shift+z` ÈáçÂÅö
- `I` Âú®ÂΩìÂâçÊó∂Èó¥ÂºÄÂßãÂΩìÂâçÁâáÊÆµ
- `O` Âú®ÂΩìÂâçÊó∂Èó¥ÁªìÊùüÂΩìÂâçÁâáÊÆµ
- `up` ‰∏ä‰∏Ä‰∏™ÁâáÊÆµ
- `down` ‰∏ã‰∏Ä‰∏™ÁâáÊÆµ
- `del` Âà†Èô§ÁâáÊÆµ
- `space` Êí≠Êîæ/ÊöÇÂÅú
- `ctrl+left` ÂêéÈÄÄ1Áßí
- `ctrl+right` ÂâçËøõ1Áßí
- `ctrl+k` Âî§Ëµ∑ÂºπÂπïÊêúÁ¥¢
- `ctrl+shift+k` ÂÖ≥Èó≠ÂºπÂπïÊêúÁ¥¢

## ÈÄöÁü•

**‰ΩøÁî®ÈÄöÁü•ÂäüËÉΩÊó∂ÔºåËØ∑Â¶•ÂñÑ‰øùÂ≠òÊâÄÊúâ‰ø°ÊÅØÔºåËØ∑ÂãøÂàÜ‰∫´Áªô‰ªñ‰∫∫ÔºåÊú¨ËΩØ‰ª∂‰∏ç‰ºöÂèëÈÄÅ‰ªª‰Ωï‰ø°ÊÅØÂà∞‰ªª‰ΩïÊúçÂä°Âô®**

### ÈÇÆÁÆ±

‰ΩøÁî®smtpÊúçÂä°Êù•ÂèëÈÄÅÈÇÆ‰ª∂ÔºåÊØè‰∏™ÈÇÆ‰ª∂ÊúçÂä°ÂïÜÁöÑÂèÇÊï∞ÂêÑ‰∏çÁõ∏ÂêåÔºå‰ΩøÁî®ËØ∑Ëá™Ë°åÂèÇÁÖßÂêÑÊúçÂä°ÂïÜÁöÑÊïôÁ®ã„ÄÇ

### serverÈÖ±

sererÈÖ±ÊîØÊåÅÂÖçË¥πÊé®ÈÄÅ‰ø°ÊÅØÂà∞ÊâãÊú∫ÂæÆ‰ø°ÔºåÂÖçË¥πË¥¶Êà∑ÊúâÈôêÂà∂„ÄÇ

ÂÆòÁΩëÔºöhttps://sct.ftqq.com/

### tg bot

tg bot ÁöÑÊê≠Âª∫ËØ∑Ëá™Ë°åÂØªÊâæÊïôÁ®ã

### ntfy

ÂÆòÁΩëÔºöhttps://docs.ntfy.sh/

### push-all-in-cloud

ËøôÊòØ‰∏Ä‰∏™ÊîØÊåÅÂ§öÁßçÊé®ÈÄÅÊñπÂºèÁöÑÂ∑•ÂÖ∑ÔºåÂèØ‰ª•ËÆ©‰Ω†Áªü‰∏ÄÁÆ°ÁêÜÊé®ÈÄÅ‰ª•ÂèäÂáèÂ∞ëÂú®ÂÆ¢Êà∑Á´ØÊö¥Èú≤Áõ∏ÂÖ≥keyÁöÑÊú∫‰ºö

È°πÁõÆÂú∞ÂùÄÔºöhttps://github.com/CaoMeiYouRen/push-all-in-cloud

## ÂêåÊ≠•

### Â¶Ç‰Ωï‰ΩøÁî®

ÊâìÂºÄ‚ÄúËÆæÁΩÆ-Êñá‰ª∂ÂêåÊ≠•‚ÄùÈÄâÊã©‰Ω†ÈúÄË¶ÅÁöÑÂêåÊ≠•ÁöÑÁΩëÁõòÔºå**‰ΩøÁî®ÂâçËØ∑‰ªîÁªÜÊü•ÁúãÁõ∏ÂÖ≥ÊñáÊ°£**ÔºåÂÆ¢Êà∑Á´ØÈúÄÈÖçÁΩÆ‰∫åËøõÂà∂ÂåÖÔºåÂπ∂ËøõË°åÁôªÂΩïÁ≠âÁõ∏ÂÖ≥Êìç‰Ωú„ÄÇ

‰πãÂêéÂéª‚ÄúÂêåÊ≠•Âô®‚Äù‰∏≠Â¢ûÂä†‰∏Ä‰∏™‰Ω†ÈúÄË¶Å‰ΩøÁî®ÁöÑÂêåÊ≠•Âô®ÔºåÂπ∂ËÆæÁΩÆÁõ∏ÂÖ≥ÈÖçÁΩÆ„ÄÇ

Âéª‚Äúwebhook‚ÄùÈÖçÁΩÆ‰∏≠‰∏∫ÈúÄË¶ÅÂêåÊ≠•ÁöÑÁõ¥Êí≠Èó¥ËÆæÁΩÆ‚ÄúÂêåÊ≠•Âô®‚ÄùÈÖçÁΩÆ

### BaiduPCS-Go(ÁôæÂ∫¶ÁΩëÁõò)

È°πÁõÆÂú∞ÂùÄÔºöhttps://github.com/qjfoidnh/BaiduPCS-Go

ÊµãËØïÁâàÊú¨Ôºö3.9.9

### aliyunpan(ÈòøÈáå‰∫ëÁõò)

È°πÁõÆÂú∞ÂùÄÔºöhttps://github.com/tickstep/aliyunpan

ÊµãËØïÁâàÊú¨Ôºö0.3.7

### alist

È°πÁõÆÂú∞ÂùÄÔºöhttps://alistgo.com

# Â∏∏ËßÅÈóÆÈ¢ò

## ÊîØÊåÅÁöÑÁéØÂ¢ÉÂèòÈáè

windows‰∏ãÁéØÂ¢ÉÂèòÈáè‰øÆÊîπÂêéÂèØËÉΩÈúÄË¶ÅÈáçÂêØÁîµËÑëÊñπËÉΩÁîüÊïà

### BÁ´ôÁôªÂΩïËá™ÂÆö‰πâÂØÜÈí•Âä†ÂØÜ

ÂèØ‰ª•‰ΩøÁî®ÁéØÂ¢ÉÂèòÈáè`BILILIVE_TOOLS_BILIKEY`Ëá™ÂÆö‰πâË¥¶Âè∑ÂØÜÈí•ÔºåËá™ÂÆö‰πâÂâçËØ∑ÂÖàÈÄÄÂá∫ÂéüÊúâÂÖ®ÈÉ®Ë¥¶Âè∑„ÄÇ

### Èâ¥ÊùÉÂØÜÈí•

ÈÄöËøáÁéØÂ¢ÉÂèòÈáè`BILILIVE_TOOLS_PASSKEY`Ëá™ÂÆö‰πâÁôªÂΩïÂØÜÈí•

## WebhookÊ†áÈ¢òÊ®°ÂùóÂºïÊìéÂ¶Ç‰Ωï‰ΩøÁî®

1.5.0Ëµ∑ Webhook Ê†áÈ¢òÊîØÊåÅ[ejsÊ®°ÊùøÂºïÊìé](https://github.com/mde/ejs)ÔºåÂÖ∑‰ΩìËØ≠Ê≥ïÂèÇËÄÉÊñáÊ°£Ôºå**Â¶ÇÊûúÊ†áÈ¢òË∂ÖËøá80Â≠óÔºå‰ºöË¢´Ëá™Âä®Êà™Êñ≠**Ôºå‰ºö‰ºòÂÖàÊâßË°åÊ®°ÊùøÂºïÊìéÔºå‰πãÂêé‰ºöÂØπ`{{}}`Âç†‰ΩçÁ¨¶ËøõË°åÊõøÊç¢ÔºåÂ¶ÇÊûúÊúâËØ≠Ê≥ïÈîôËØØÔºå‰ºöË¢´Ë∑≥ËøáÔºå‰ºòÂÖà‰øùËØÅ‰∏ä‰º†„ÄÇ

```ts
// ‰ª•‰∏ã‰∏∫ÊîØÊåÅÊ≥®ÂÖ•ÁöÑÂèÇÊï∞
{
  title: string; // Áõ¥Êí≠Èó¥Ê†áÈ¢ò
  user: string; // ‰∏ªÊí≠ÂêçÁß∞
  time: Date; // Áõ¥Êí≠ÂºÄÂßãÊó∂Èó¥
  roomId: number | string; // ÊàøÈó¥Âè∑
}
```

Á§∫‰æãÔºö`&lt;%= user %&gt;-&lt;%= time.getFullYear() %&gt;&lt;%= String(time.getMonth() + 1).padStart(2, &quot;0&quot;) %&gt;Áõ¥Êí≠ÂΩïÂÉè`
Ê∏≤ÊüìÁªìÊûúÔºö`djw-202408Áõ¥Êí≠ÂΩïÂÉè`

## ÂéãÂà∂È¢ÑËÆæÂ¶Ç‰ΩïËÆæÁΩÆ

~~Êàë‰πü‰∏çÁü•ÈÅì~~  
Â¶ÇÊûú‰Ω†ÊòØ‰∏Ä‰∏™Â∞èÁôΩÔºåÂÖàÊ†πÊçÆËá™Â∑±ÁöÑÁ°¨‰ª∂ÈÄâÊã©ÂØπÂ∫îÁöÑÁºñÁ†ÅÔºåÊé®Ëçê‰ΩøÁî®crfÊàñcqÁ≠âË¥®ÈáèÊ®°ÂºèÁöÑÈªòËÆ§ÂèÇÊï∞ÔºåÂéãÂà∂ÂêéÊü•ÁúãËßÜÈ¢ëÂ§ßÂ∞èÔºåÂéãÂà∂Êó∂Èó¥ÔºåÁîªË¥®ÔºåÊé•‰∏ãÊù•Ë∞ÉÊï¥ÂèÇÊï∞Ôºå‰ª•Êª°Ë∂≥‰Ω†ÁöÑÈúÄÊ±ÇÔºåÊ≤°ÊúâÊúÄÂ•ΩÁöÑÂèÇÊï∞ÔºåÂè™ÊúâÊúÄÂêàÈÄÇÁöÑÂèÇÊï∞Ôºå‰∏çÂêåËßÜÈ¢ëÔºå‰∏çÂêåÂú∫ÊôØÂèØËÉΩÂêàÈÄÇÁöÑÂèÇÊï∞ÈÉΩ‰∏ç‰∏ÄËá¥„ÄÇ  
ËøõÈò∂ËØ∑Ëá™Ë°åÊêúÁ¥¢ffmpegÁõ∏ÂÖ≥ÁöÑÊïôÁ®ã

## nvnecÊàñÂÖ∂‰ªñÁ°¨‰ª∂ËΩ¨Á†ÅÊó†Ê≥ïÊ≠£Â∏∏‰ΩøÁî®

ËØ∑Â∞ùËØïÊõ¥Êñ∞ÊòæÂç°È©±Âä®ÔºåÂ¶ÇÊûúÊõ¥Êñ∞Âà∞ÊúÄÊñ∞ÂêéËøòÊó†Ê≥ï‰ΩøÁî®ÔºåËØ∑Â∞ùËØïÊâãÂä®Êõ¥Êç¢ffmpegÂèØÊâßË°åÊñá‰ª∂‰∏∫6.0ÔºåËá™ÂÆö‰πâÂêéÈÉ®ÂàÜÂäüËÉΩÂèØËÉΩ‰ºöÊó†Ê≥ï‰ΩøÁî®

## blrecÂºÄÂêØËΩ¨Êç¢‰∏∫mp4ÂêéÊó†Ê≥ï‰ΩøÁî®

ËØ∑ÂÖ≥Èó≠ËØ•ÂäüËÉΩÔºå‰ΩøÁî®Êú¨ËΩØ‰ª∂ÁöÑ‚ÄúËΩ¨Â∞ÅË£Ö‰∏∫mp4‚ÄùÂäüËÉΩ

## ‰∏ä‰º†ÊèêÁ§∫ËæìÂÖ•È™åËØÅÁ†Å

ËØ¥Êòé‰Ω†‰∏ä‰º†ËøáÂ§öË£Ö‰∏äÈ£éÊéß‰∫ÜÔºåËØ∑ÂéªwebÁ´ØÁ´ØÊäïÁ®øËß£Èô§È£éÊéß

## ÊúâÊó∂‰∏ä‰º†Âíå‰∏ãËΩΩ‰ªªÂä°ÁÇπÂáªÊöÇÂÅúÊó†Êïà

‰∏ä‰º†‰ªªÂä°ÂàÜ‰∏∫‰∏â‰∏™Èò∂ÊÆµÔºåÂè™ÊúâÁ¨¨‰∫å‰∏™Èò∂ÊÆµÊòØÊîØÊåÅÊöÇÂÅúÁöÑÔºåÁ¨¨‰∏âËäÇÈò∂ÊÆµ‰∏çÊîØÊåÅÂèñÊ∂àÔºö

1. Ëé∑Âèñ‰∏ä‰º†Âü∫Á°Ä‰ø°ÊÅØ
2. Êñá‰ª∂ÂàáÁâá‰∏ä‰º†
3. Êñá‰ª∂ÂêàÂπ∂ÔºåË∞ÉÁî®Êèê‰∫§Êé•Âè£

‰∏ãËΩΩ‰ªªÂä°ÂàÜ‰∏∫‰∏â‰∏™Èò∂ÊÆµÔºåÂè™ÊúâÁ¨¨‰∫å‰∏™Èò∂ÊÆµÊòØÊîØÊåÅÊöÇÂÅúÁöÑÔºö

1. Ëé∑Âèñ‰∏ãËΩΩÊñá‰ª∂Âü∫Á°Ä‰ø°ÊÅØ
2. Êñá‰ª∂ÂàáÁâá‰∏ãËΩΩ
3. Êñá‰ª∂ÂêàÂπ∂

## ÊÄé‰πàËØÑ‰º∞ÂéãÂà∂ÁöÑÈÄüÂ∫¶

ËøõÂÖ•ÈòüÂàóÔºåÊü•Áúã‰ªªÂä°ÊúÄÂêé‰∏ÄÊ†èÁöÑÈÄüÁéáÔºåÂèØ‰ª•Ê†πÊçÆÈÄüÁéáË∞ÉÊï¥ÂéãÂà∂ÂèÇÊï∞

## Â¶Ç‰ΩïÊü•ÁúãÂéüÂßãffmpegÂëΩ‰ª§ËæìÂá∫

ÂéãÂà∂‰πãÂêéÊü•Áúãlog

## ÊúÄÂ§ß‰ªªÂä°Êï∞

1. ÊâãÂä®ÊöÇÂÅúÁöÑ‰ªªÂä°‰∏ç‰ºöË¢´Ëá™Âä®ÂêØÂä®
2. È´òËÉΩËøõÂ∫¶Êù°‰ªªÂä°‰ºöËá™Âä®ËøõË°åÔºåÂõ†‰∏∫ÈÄüÂ∫¶‰ºöÂæàÂø´

## ‰ΩøÁî®zipÂåÖÂêéÂÆâË£ÖÂåÖÊó†Ê≥ï‰ΩøÁî®

zipÂåÖÂπ∂Èùû‰º†ÁªüÊÑè‰πâ‰∏äÁöÑÁªøËâ≤ÂåÖÔºåÊï∞ÊçÆÂíåÂÆâË£ÖÂåÖÊñá‰ª∂ÁöÑ‰∏ç‰ºöÂ≠òÊîæÂú®Âêå‰∏Ä‰∏™Êñá‰ª∂Â§π‰∏≠ÔºåÂ¶ÇÊûú‰Ω†Â∞ùËØï‰ΩøÁî®ÂÆâË£ÖÂåÖÂêé‰ΩøÁî®ÂéãÁº©ÂåÖÔºåÂèØËÉΩ‰ºöÂØºËá¥‰∫åËøõÂà∂Êñá‰ª∂ÁöÑË∑ØÂæÑÈîôËØØ‰ªéËÄåÊó†Ê≥ï‰ΩøÁî®ÔºåËØ∑Â∞ùËØïÂú®ËÆæÁΩÆ‰∏≠ÊâãÂä®‰øÆÊîπ‰∫åËøõÂà∂Êñá‰ª∂Ë∑ØÂæÑ„ÄÇ

Â¶ÇÊûú‰Ω†ÊÉ≥Â∞ÜÊï∞ÊçÆÊîæÂú®Âêå‰∏Ä‰∏™Êñá‰ª∂Â§πÂÜÖÔºåËØ∑Âú®ÂèØÊâßË°åÊñá‰ª∂ÊâÄÂú®Êñá‰ª∂Â§πÂàõÂª∫‰∏Ä‰∏™`portable`Êñá‰ª∂ÔºåÊó†ÊãìÂ±ïÂêçÂ¶Ç`.txt`ÔºåÊõ¥ÊîπÂêéÈáçÂêØÂ∫îÁî®ÔºåÂ¶ÇÊúâÈúÄË¶ÅÂèØ‰ª•Êñ∞Âª∫Êñá‰ª∂ÂâçÂú®ËÆæÁΩÆ‰∏≠Â§á‰ªΩËÆæÁΩÆ„ÄÇ

## Êõ¥ÊîπÈÉ®ÂàÜÈÖçÁΩÆ‰∏çÁîüÊïà

ÁªùÂ§ßÈÉ®ÂàÜÈÖçÁΩÆ‰øÆÊîπÂêéÁîüÊïà„ÄÅÊüêÈÉ®ÂàÜÈÖçÁΩÆÂè™ÂØπÂΩìÂú∫Áõ¥Êí≠ÁîüÊïà„ÄÅÂ∞èÈÉ®ÂàÜÈÖçÁΩÆÈáçÂêØÂêéÁîüÊïà

## È¢ëÁπÅ‰∏ä‰º†Â§±Ë¥•ÊÄé‰πàÂäû

1. ÂçáÁ∫ßËΩØ‰ª∂Âà∞ÊúÄÊñ∞ÁâàÊú¨
2. Â¢ûÂä†ÈáçËØïÊ¨°Êï∞ÂíåÊó∂Èó¥
3. Â∞ùËØïÊâãÂä®ÈÄâÊã©Âπ∂ÊµãËØï‰∏ä‰º†Ë∑ØÁ∫ø
4. Â∞ùËØïÂÖ≥Èó≠ipv6
5. Â∞ùËØïÊâãÂä®‰øÆÊîπdns
6. ‰Ω†Â∑≤ÁªèË¢´ËøêËê•ÂïÜÈôêÈÄü‰∫Ü
7. ÂõΩÂ§ñÊúçÂä°Âô®ËØ∑Â∞ùËØï‰ΩøÁî® `qn` Á∫øË∑Ø

## Â¶Ç‰ΩïÂ§á‰ªΩÊñá‰ª∂

ÁõÆÂâçÊúâ‰∏§ÁßçÊñπÂºèÂ§á‰ªΩÊÅ¢Â§çÊñá‰ª∂ÔºåÂØºÂÖ•ÂêéÈáçÂêØÂ∫îÁî®ÁîüÊïàÔºåÂ∞ΩÈáè‰øùÊåÅÁâàÊú¨‰∏ÄËá¥,**ÊÅ¢Â§çÂ§á‰ªΩÊó∂ËØ∑ÂØπÂéüÊñá‰ª∂Â§á‰ªΩ**Ôºö

1. ÊâìÂºÄËÆæÁΩÆÔºåÁÇπÂáª‚ÄúÂØºÂá∫ÈÖçÁΩÆ‚ÄùÔºåÂú®ÈúÄË¶ÅÊÅ¢Â§çÊó∂ÁÇπÂáª‚ÄúÂØºÂÖ•ÈÖçÁΩÆ‚ÄùÔºåÂ¶ÇÊûúËøôÁßçÊñπÂºèÂ§±Ë¥•ÔºåËØ∑Â∞ùËØï‰ΩøÁî®Á¨¨Á¨¨‰∫åÁßçÊñπÂºèËøõË°åÊâãÂä®Â§á‰ªΩ
2. ÊâæÂà∞ÈÖçÁΩÆÊñá‰ª∂Â§πÔºåÊâæÂà∞`appConfig.json`„ÄÅ`presets.json`„ÄÅ`danmu_presets.json`„ÄÅ`ffmpeg_presets.json`„ÄÅ`app.db`ÔºåÂ¶ÇÊûú‰Ω†ËøòÊÉ≥Â§á‰ªΩÂ∞ÅÈù¢ÔºåÊâæÂà∞`cover`Êñá‰ª∂Â§πÔºåÊÅ¢Â§çÊó∂Áõ¥Êé•Ë¶ÜÁõñÂç≥ÂèØ

## Â≠ó‰ΩìÈóÆÈ¢ò

webÂíåÂÆ¢Êà∑Á´Ø‰ΩøÁî®ÁöÑÂ≠ó‰ΩìÊñπÂºèÂπ∂‰∏çÁõ∏ÂêåÔºå‰ºöÊúâÂ∑ÆÂºÇÔºåÂÜçÂä†‰∏äËé∑ÂèñÂ≠ó‰Ωì `postscriptName` ÁöÑÂæÆÂ¶ôÁöÑÊúâ‰∫õ‰∏çÂêåÔºåÂØºËá¥Êüê‰∫õÂ≠ó‰Ωìweb‰∏≠ÈÄâÊã©ÂêéÊó†Ê≥ï‰ΩøÁî®„ÄÇ

docker‰∏ãÁöÑemojiÊñáÊú¨Ê∏≤ÊüìÈîôËØØÔºåÁåúÊµãÂíåfontconfigÊúâÂÖ≥Ôºå‰ΩÜÊòØÊàë‰∏ç‰ºöÊîπÔºåÂ¶ÇÊûú‰Ω†‰ºöÊ¨¢ËøéÂèëissue

## ÊòæÁ§∫ÁöÑ‰∏ä‰º†‰∏ãËΩΩÈÄüÂ∫¶‰∏çÂáÜÁ°Æ

ÊâÄÊúâÁõ∏ÂÖ≥ÈÄüÂ∫¶‰ªÖÈôêÂèÇËÄÉ~

## ÊäñÈü≥ÂèåÂ±èÂΩïÊí≠ÂàÜÂâ≤‰∏ªÁîªÈù¢

ÂÅáËÆæ‰Ω†Â∑≤ÁªèÂºÄÂßã‚ÄúÂèåÂ±èÁõ¥Êí≠ÊµÅÈÄâÈ°π‚ÄùÔºå‰∏ªÁîªÈù¢ÁöÑÂàÜËæ®Áéá‰∏∫1920x1080„ÄÇ

Âú® `ffmpegËÆæÁΩÆ` ÁöÑ `ËßÜÈ¢ëÊª§Èïú` ‰∏≠ËæìÂÖ• `crop=1920:1080:0:0;$origin`ÔºåÂç≥ÂèØÂàÜÁ¶ªÂá∫‰∏ªÁîªÈù¢ÔºåÂâØÁîªÈù¢ÂêåÁêÜ

## ÂΩïÂà∂Â¶Ç‰Ωï‰∏∫‰∏çÂêåÁõ¥Êí≠Èó¥ÈÖçÁΩÆ‰∏çÂêåÂ≠òÂÇ®Ë∑ØÂæÑ

ÊîØÊåÅ‰∏∫ `Êñá‰ª∂ÂëΩÂêçËßÑÂàô` ÈÖçÁΩÆÈ°πÊîØÊåÅ‰∫Ü [ejs](https://ejs.co/) Ê®°ÊùøÂºïÊìéÔºå‰Ω†ÂèØ‰ª•Â∞Ü `‰øùÂ≠òÊñá‰ª∂Â§π` ÁΩÆÁ©∫ÔºåÂ∞Ü‰øùÂ≠òË∑ØÂæÑÂèäÂëΩÂêçËßÑÂàôÔºåÂÖ®ÈÉ®ÈÖçÁΩÆÂú® `Êñá‰ª∂ÂëΩÂêçËßÑÂàô` ÈÖçÁΩÆÈ°π‰∏≠„ÄÇ**‰øÆÊîπÂêéÂèäÊó∂ËøõË°åÊµãËØï**

ÂèÇËÄÉÁ§∫‰æãÔºöÊñóÈ±º‰∏éÂÖ∂‰ªñÁ´ôÁÇπ‰øùÂ≠òÂú®‰∏çÂêåÁõòÁ¨¶‰∏≠  
`&lt;% if (platform==&#039;ÊñóÈ±º&#039;) { %&gt;C&lt;% } %&gt;&lt;% if (platform!=&#039;ÊñóÈ±º&#039;) { %&gt;D&lt;% } %&gt;:\ÂΩïÂà∂\{platform}/{owner}/{year}-{month}-{date} {hour}-{min}-{sec} {title}`

## Ê∑ªÂä†‰∫ÜÂá†ÂçÅ‰∏™ÁîöËá≥‰∏äÁôæ‰∏™Áõ¥Êí≠Èó¥ÂêéÊó†Ê≥ïÂΩïÂà∂

‰Ω†ÂæàÊúâÂèØËÉΩÂ∑≤ÁªèË¢´Âπ≥Âè∞È£éÊéßÔºåËØ∑Â∞ùËØïÂÖ≥Èó≠ËΩØ‰ª∂Á≠âÂæÖÈ£éÊéßËß£Èô§Ôºå‰πãÂêéÂ∞ùËØïÂáèÂ∞ëÊï∞ÈáèÔºåÊàñÂä†Â§ßÊ£ÄÊü•Èó¥ÈöîÔºåÊàñÊ£ÄÊü•ÁΩëÁªúÔºåÊàñÊ£ÄÊü•Á°¨ÁõòËØªÂÜô„ÄÇ

## ÂΩïÂà∂ÁîµÂè∞Áõ¥Êí≠Êó∂Â∏ßÊï∞Ëøá‰Ωé

Â¶ÇÊûúÈúÄË¶ÅÂéãÂà∂ÂºπÂπïÔºåËØ∑Â∞ùËØïÊâãÂä®ÊåáÂÆöÂ∏ßÊï∞ÂèÇÊï∞

## ÂàÜËæ®ÁéáÂèòÂåñÂêé‰∏ç‰ºöËøõË°åÂàáÂâ≤

ËÆæËÆ°Â¶ÇÊ≠§ÔºåÂ¶ÇÊûú‰Ω†ÁöÑÊí≠ÊîæÂô®‰∏çÊîØÊåÅÂ§öÂàÜËæ®ÁéáÔºåËØ∑Â∞ùËØï‰ΩøÁî®vlc

## ÂºπÂπïËΩ¨Êç¢Â§±Ë¥•

Â¶ÇÊûú‰Ω†ÊòØÊñ∞Á≥ªÁªüÔºåËØ∑Â∞ùËØïÂÆâË£ÖÁ≥ªÁªüÁõ∏ÂÖ≥ËøêË°åÂ∫ìÔºåÂ¶ÇÊûú‰∏çÊòØÔºå‰πüËØ∑ÂÆâË£ÖËØïËØï„ÄÇ

# TODO

- [x] ÊîØÊåÅ‰ΩøÁî®ffmpegÂéãÂà∂ÂºπÂπïËá≥ËßÜÈ¢ëÊñá‰ª∂
- [ ] Â∑•ÂÖ∑È°µÈù¢
  - [x] ÊîØÊåÅffmpeg‰∏çÂêåcpuÔºågpu‰ª•ÂèäÁõ∏ÂÖ≥ÈÖçÁΩÆ
  - [x] ÊîØÊåÅ‰ΩøÁî®danmufactoryËá™Âä®Â§ÑÁêÜxmlÊñá‰ª∂Âπ∂ËøõË°åÂéãÂà∂
  - [x] Â∑•ÂÖ∑È°µÈù¢ÔºådanmufactoryÁöÑGUI
  - [x] Â∑•ÂÖ∑È°µÈù¢ÔºåflvÁöÑËΩ¨Â∞ÅË£Ö
  - [x] ÊîØÊåÅËßÜÈ¢ëÂêàÂπ∂
  - [x] ‰∏ãËΩΩÈ°µÈù¢
  - [x] ÊîØÊåÅÂàáÁâá
- [x] logËÆ∞ÂΩïÂèäÂÖ∂Â±ïÁ§∫
- [x] ÈÖçÁΩÆÊåÅ‰πÖÂåñÔºåÂéãÂà∂È´òËÉΩËøõÂ∫¶Êù°
- [x] BÁ´ô‰∏ä‰º†ÊîØÊåÅ
  - [x] ÁßªÈô§biliup‰∫åËøõÂà∂Êñá‰ª∂‰æùËµñ
  - [x] ÊîØÊåÅÂàÜp
  - [x] Â§öË¥¶Êà∑ÊîØÊåÅ
- [ ] webhookÊîØÊåÅ
  - [x] ÂΩïÊí≠Âß¨webhookÊîØÊåÅ
  - [x] blrec webhookÊîØÊåÅ
  - [x] ÊîØÊåÅËá™Âä®‰∏ä‰º†
  - [x] ÊîØÊåÅÂºπÂπïÂéãÂà∂
  - [x] Êñ≠Êí≠Áª≠‰º†
- [x] ÊîØÊåÅËá™ÂÆö‰πâffmpeg‰ª•Âèäffprobe
- [ ] Áõ¥Êí≠ÂΩïÂà∂
  - [x] ÊñóÈ±º
  - [x] ËôéÁâô
  - [x] BÁ´ô
  - [x] ÊäñÈü≥
- [ ] ÂºπÂπïÂàÜÊûê&amp;ÁúãÊùøÊîØÊåÅ
- [x] ÊîØÊåÅÊñóÈ±º&amp;ËôéÁâôÂΩïÊí≠Ëá™Âä®Êê¨Ëøê
- [x] web&amp;dockerÁâàÊú¨ÊîØÊåÅ

# ‰∫§ÊµÅÂú∞ÂùÄ

‰∫§ÊµÅ QQ Áæ§Ôºö872011161

# ÂºÄÂèë

nodeÁâàÊú¨Ê†πÊçÆ`.node-version`Êù•ËøõË°åÈÄâÊã©

## Install

```bash
$ pnpm install
$ pnpm run install:bin
```

### better-sqlite3

`ÂºπÂπïÂàÜÊûê`ÂäüËÉΩ‰æùËµñ‰∫é`better-sqlite3`ÔºåÂ¶ÇÊûú‰Ω†Êó†Ê≥ïÁºñËØëÂÆâË£ÖÔºåÂ∞ùËØïÂÆâË£Ö[visual-studio2022](https://visualstudio.microsoft.com/zh-hans/thank-you-downloading-visual-studio/?sku=Community)‰∏≠ÁöÑc++Áõ∏ÂÖ≥Â∑•ÂÖ∑Ôºå‰ª•Âèäpython3(‰πüËÆ∏)„ÄÇ
Â¶ÇÊûú‰Ω†ÊòØWinÔºå‰Ω†ËøòÂèØËÉΩÈÅáÂà∞Êä•ÈîôÊØîÂ¶Ç`cause=fork/exec %1 is not a valid Win32 application.`ÔºåÊ†πÊçÆ[ÊèêÁ§∫](https://github.com/pnpm/pnpm/issues/5638#issuecomment-1327988206)‰øÆÊîπpnpmÊ∫êÊñá‰ª∂ÔºåÂ¶ÇÊûú‰Ω†ÊúÄÂêéËøòÊòØÊó†Ê≥ïÂÆâË£ÖÔºåÂ∞ùËØïÂú®È°πÁõÆÊ†πÁõÆÂΩïËøêË°å`node scripts\github-ci-better-sqlite3.js`ÊâãÂä®ÂÆâË£Ö‰æùËµñ„ÄÇ

### ÂÖ∂‰ªñ‰æùËµñ

Â¶ÇÊûú‰∫åËøõÂà∂‰æùËµñÂÆâË£ÖÂ§±Ë¥•ÊàñËÄÖ‰∏çÊîØÊåÅ‰Ω†ÁöÑÂπ≥Âè∞ÔºåËØ∑Â∞ùËØï[ÊâãÂä®‰∏ãËΩΩÂÆâË£Ö](https://github.com/renmu123/biliLive-tools/releases/tag/0.2.1)‰∫åËøõÂà∂‰æùËµñÔºåÊúÄÊñ∞ÁâàÊú¨‰∏∫Ë∑ùÁ¶ªÂΩìÂâçÁâàÊú¨ÊúÄËøëÁöÑÁâàÊú¨„ÄÇ

Êñ∞Âª∫`packages\app\resources\bin`Êñá‰ª∂Â§πÔºåÈáåÈù¢ÈúÄË¶Å‰∏â‰∏™Êñá‰ª∂„ÄÇ
ÂêåÊó∂ÈúÄË¶ÅÂú®Â∫îÁî®ÁöÑËÆæÁΩÆÈáåËÆæÁΩÆÁõ∏ÂÖ≥ÂèØÊâßË°åÊñá‰ª∂Âú∞ÂùÄ„ÄÇ

1. `DanmukuFactory.exe` [Ëá™ÁºñËØëÁâàÊú¨](https://github.com/renmu123/DanmakuFactory/tree/test)
2. `ffmpeg.exe` [n7.0](https://github.com/BtbN/FFmpeg-Builds/releases)
3. `ffprobe.exe` [n7.0](https://github.com/BtbN/FFmpeg-Builds/releases)

## Development

`pnpm run dev`

## ÂÖ≥‰∫éPR

Êèê PR ÂâçÔºåÊúÄÂ•ΩÂÖàÊèê‰∏Ä‰∏™ issueÔºå‰ª•Èò≤ÈáçÂ§çÊàñËÄÖ PR ‰∏çË¢´Êé•Êî∂

## Build

```bash
# APPÂ∫îÁî®ÔºåÂ¶ÇÊûúÈúÄË¶ÅÂàÜÂèë‰πüÂèØ‰ª•Âú®github actionËøõË°åËá™Âä®ÁºñËØë
$ pnpm run build:app
# CLIÂ∫îÁî®
$ pnpm run build:cli
# docker
# Áõ∏ÂÖ≥Êñá‰ª∂Âú®`docker`Êñá‰ª∂Â§π‰∏ã
```

## WebUIÈ°πÁõÆÂú∞ÂùÄ

‰∏∫github actionsËá™Âä®ÁºñËØë

Âú∞ÂùÄÔºöhttps://github.com/renmu123/biliLive-webui

## Áõ¥Êí≠ÂΩïÂà∂Áõ∏ÂÖ≥Â∫ì

- [ÂΩïÂà∂ÁÆ°ÁêÜ](https://www.npmjs.com/package/@bililive-tools/manager)
- [BÁ´ôÂΩïÂà∂](https://www.npmjs.com/package/@bililive-tools/bilibili-recorder)
- [ÊñóÈ±ºÂΩïÂà∂](https://www.npmjs.com/package/@bililive-tools/douyu-recorder)
- [ËôéÁâôÂΩïÂà∂](https://www.npmjs.com/package/@bililive-tools/huya-recorder)
- [ÊäñÈü≥ÂΩïÂà∂](https://www.npmjs.com/package/@bililive-tools/douyin-recorder)
- [ËôéÁâôÂºπÂπïÁõëÂê¨](https://www.npmjs.com/package/huya-danma-listener)
- [ÊäñÈü≥ÂºπÂπïÁõëÂê¨](https://www.npmjs.com/package/huya-danma-listener)

# ËµûËµè

Â¶ÇÊûúÊú¨È°πÁõÆÂØπ‰Ω†ÊúâÂ∏ÆÂä©ÔºåËØ∑ÊàëÂñùÁì∂Âø´‰πêÊ∞¥ÂêßÔºåÊúâÂä©‰∫éÈ°πÁõÆÊõ¥Â•ΩÁª¥Êä§„ÄÇ  
Áà±ÂèëÁîµÔºö[https://afdian.com/a/renmu123](https://afdian.com/a/renmu123)  
‰Ω†‰πüÂèØ‰ª•ÁªôÊàëÁöÑ B Á´ôÂ∏êÂè∑ [ÂÖÖÁîµ](https://space.bilibili.com/10995238)

# License

GPLv3

# ÂèÇËÄÉËµÑÊñô &amp; È∏£Ë∞¢

&lt;ul&gt;
  &lt;li&gt;
    &lt;a href=&quot;https://github.com/hihkm/DanmakuFactory&quot; class=&quot;external&quot; target=&quot;_blank&quot;
      &gt;DanmakuFactory&lt;/a
    &gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;https://github.com/biliup/biliup-rs&quot; class=&quot;external&quot; target=&quot;_blank&quot;
      &gt;biliup-rs&lt;/a
    &gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a
      href=&quot;https://github.com/BililiveRecorder/BililiveRecorder&quot;
      class=&quot;external&quot;
      target=&quot;_blank&quot;
      &gt;BililiveRecorder&lt;/a
    &gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;https://github.com/renmu123/biliAPI&quot; class=&quot;external&quot; target=&quot;_blank&quot;&gt;biliAPI&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;https://github.com/WhiteMinds/LiveAutoRecord&quot; class=&quot;external&quot; target=&quot;_blank&quot;
      &gt;LiveAutoRecord&lt;/a
    &gt;
  &lt;/li&gt;
&lt;/ul&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[upstash/context7]]></title>
            <link>https://github.com/upstash/context7</link>
            <guid>https://github.com/upstash/context7</guid>
            <pubDate>Tue, 14 Oct 2025 00:04:21 GMT</pubDate>
            <description><![CDATA[Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/upstash/context7">upstash/context7</a></h1>
            <p>Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors</p>
            <p>Language: JavaScript</p>
            <p>Stars: 33,570</p>
            <p>Forks: 1,673</p>
            <p>Stars today: 166 stars today</p>
            <h2>README</h2><pre>![Cover](public/cover.png)

# Context7 MCP - Up-to-date Code Docs For Any Prompt

[![Website](https://img.shields.io/badge/Website-context7.com-blue)](https://context7.com) [![smithery badge](https://smithery.ai/badge/@upstash/context7-mcp)](https://smithery.ai/server/@upstash/context7-mcp) [![NPM Version](https://img.shields.io/npm/v/%40upstash%2Fcontext7-mcp?color=red)](https://www.npmjs.com/package/@upstash/context7-mcp) [![MIT licensed](https://img.shields.io/npm/l/%40upstash%2Fcontext7-mcp)](./LICENSE)

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=context7&amp;config=eyJ1cmwiOiJodHRwczovL21jcC5jb250ZXh0Ny5jb20vbWNwIn0%3D) [&lt;img alt=&quot;Install in VS Code (npx)&quot; src=&quot;https://img.shields.io/badge/Install%20in%20VS%20Code-0098FF?style=for-the-badge&amp;logo=visualstudiocode&amp;logoColor=white&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)

[![ÁπÅÈ´î‰∏≠Êñá](https://img.shields.io/badge/docs-ÁπÅÈ´î‰∏≠Êñá-yellow)](./docs/README.zh-TW.md) [![ÁÆÄ‰Ωì‰∏≠Êñá](https://img.shields.io/badge/docs-ÁÆÄ‰Ωì‰∏≠Êñá-yellow)](./docs/README.zh-CN.md) [![Êó•Êú¨Ë™û](https://img.shields.io/badge/docs-Êó•Êú¨Ë™û-b7003a)](./docs/README.ja.md) [![ÌïúÍµ≠Ïñ¥ Î¨∏ÏÑú](https://img.shields.io/badge/docs-ÌïúÍµ≠Ïñ¥-green)](./docs/README.ko.md) [![Documentaci√≥n en Espa√±ol](https://img.shields.io/badge/docs-Espa√±ol-orange)](./docs/README.es.md) [![Documentation en Fran√ßais](https://img.shields.io/badge/docs-Fran√ßais-blue)](./docs/README.fr.md) [![Documenta√ß√£o em Portugu√™s (Brasil)](&lt;https://img.shields.io/badge/docs-Portugu√™s%20(Brasil)-purple&gt;)](./docs/README.pt-BR.md) [![Documentazione in italiano](https://img.shields.io/badge/docs-Italian-red)](./docs/README.it.md) [![Dokumentasi Bahasa Indonesia](https://img.shields.io/badge/docs-Bahasa%20Indonesia-pink)](./docs/README.id-ID.md) [![Dokumentation auf Deutsch](https://img.shields.io/badge/docs-Deutsch-darkgreen)](./docs/README.de.md) [![–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ](https://img.shields.io/badge/docs-–†—É—Å—Å–∫–∏–π-darkblue)](./docs/README.ru.md) [![–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è](https://img.shields.io/badge/docs-–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞-lightblue)](./docs/README.uk.md) [![T√ºrk√ße Dok√ºman](https://img.shields.io/badge/docs-T√ºrk√ße-blue)](./docs/README.tr.md) [![Arabic Documentation](https://img.shields.io/badge/docs-Arabic-white)](./docs/README.ar.md) [![Ti·∫øng Vi·ªát](https://img.shields.io/badge/docs-Ti·∫øng%20Vi·ªát-red)](./docs/README.vi.md)

## ‚ùå Without Context7

LLMs rely on outdated or generic information about the libraries you use. You get:

- ‚ùå Code examples are outdated and based on year-old training data
- ‚ùå Hallucinated APIs that don&#039;t even exist
- ‚ùå Generic answers for old package versions

## ‚úÖ With Context7

Context7 MCP pulls up-to-date, version-specific documentation and code examples straight from the source ‚Äî and places them directly into your prompt.

Add `use context7` to your prompt in Cursor:

```txt
Create a Next.js middleware that checks for a valid JWT in cookies and redirects unauthenticated users to `/login`. use context7
```

```txt
Configure a Cloudflare Worker script to cache JSON API responses for five minutes. use context7
```

Context7 fetches up-to-date code examples and documentation right into your LLM&#039;s context.

- 1Ô∏è‚É£ Write your prompt naturally
- 2Ô∏è‚É£ Tell the LLM to `use context7`
- 3Ô∏è‚É£ Get working code answers

No tab-switching, no hallucinated APIs that don&#039;t exist, no outdated code generation.

## üìö Adding Projects

Check out our [project addition guide](./docs/adding-projects.md) to learn how to add (or update) your favorite libraries to Context7.

## üõ†Ô∏è Installation

### Requirements

- Node.js &gt;= v18.0.0
- Cursor, Claude Code, VSCode, Windsurf or another MCP Client
- Context7 API Key (Optional) for higher rate limits and private repositories (Get yours by creating an account at [context7.com/dashboard](https://context7.com/dashboard))

&gt; [!WARNING]
&gt; **SSE Protocol Deprecation Notice**
&gt;
&gt; The Server-Sent Events (SSE) transport protocol is deprecated and its endpoint will be removed in upcoming releases. Please use HTTP or stdio transport methods instead.

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Installing via Smithery&lt;/b&gt;&lt;/summary&gt;

To install Context7 MCP Server for any client automatically via [Smithery](https://smithery.ai/server/@upstash/context7-mcp):

```bash
npx -y @smithery/cli@latest install @upstash/context7-mcp --client &lt;CLIENT_NAME&gt; --key &lt;YOUR_SMITHERY_KEY&gt;
```

You can find your Smithery key in the [Smithery.ai webpage](https://smithery.ai/server/@upstash/context7-mcp).

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Cursor&lt;/b&gt;&lt;/summary&gt;

Go to: `Settings` -&gt; `Cursor Settings` -&gt; `MCP` -&gt; `Add new global MCP server`

Pasting the following configuration into your Cursor `~/.cursor/mcp.json` file is the recommended approach. You may also install in a specific project by creating `.cursor/mcp.json` in your project folder. See [Cursor MCP docs](https://docs.cursor.com/context/model-context-protocol) for more info.

&gt; Since Cursor 1.0, you can click the install button below for instant one-click installation.

#### Cursor Remote Server Connection

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=context7&amp;config=eyJ1cmwiOiJodHRwczovL21jcC5jb250ZXh0Ny5jb20vbWNwIn0%3D)

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
      }
    }
  }
}
```

#### Cursor Local Server Connection

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=context7&amp;config=eyJjb21tYW5kIjoibnB4IC15IEB1cHN0YXNoL2NvbnRleHQ3LW1jcCJ9)

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Claude Code&lt;/b&gt;&lt;/summary&gt;

Run this command. See [Claude Code MCP docs](https://docs.anthropic.com/en/docs/claude-code/mcp) for more info.

#### Claude Code Remote Server Connection

```sh
claude mcp add --transport http context7 https://mcp.context7.com/mcp --header &quot;CONTEXT7_API_KEY: YOUR_API_KEY&quot;
```

#### Claude Code Local Server Connection

```sh
claude mcp add context7 -- npx -y @upstash/context7-mcp --api-key YOUR_API_KEY
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Amp&lt;/b&gt;&lt;/summary&gt;

Run this command in your terminal. See [Amp MCP docs](https://ampcode.com/manual#mcp) for more info.

#### Without API Key (Basic Usage)

```sh
amp mcp add context7 https://mcp.context7.com/mcp
```

#### With API Key (Higher Rate Limits &amp; Private Repos)

```sh
amp mcp add context7 --header &quot;CONTEXT7_API_KEY=YOUR_API_KEY&quot; https://mcp.context7.com/mcp
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Windsurf&lt;/b&gt;&lt;/summary&gt;

Add this to your Windsurf MCP config file. See [Windsurf MCP docs](https://docs.windsurf.com/windsurf/cascade/mcp) for more info.

#### Windsurf Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;serverUrl&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
      }
    }
  }
}
```

#### Windsurf Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in VS Code&lt;/b&gt;&lt;/summary&gt;

[&lt;img alt=&quot;Install in VS Code (npx)&quot; src=&quot;https://img.shields.io/badge/VS_Code-VS_Code?style=flat-square&amp;label=Install%20Context7%20MCP&amp;color=0098FF&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)
[&lt;img alt=&quot;Install in VS Code Insiders (npx)&quot; src=&quot;https://img.shields.io/badge/VS_Code_Insiders-VS_Code_Insiders?style=flat-square&amp;label=Install%20Context7%20MCP&amp;color=24bfa5&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode-insiders%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)

Add this to your VS Code MCP config file. See [VS Code MCP docs](https://code.visualstudio.com/docs/copilot/chat/mcp-servers) for more info.

#### VS Code Remote Server Connection

```json
&quot;mcp&quot;: {
  &quot;servers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;http&quot;,
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
      }
    }
  }
}
```

#### VS Code Local Server Connection

```json
&quot;mcp&quot;: {
  &quot;servers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;stdio&quot;,
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;
&lt;b&gt;Install in Cline&lt;/b&gt;
&lt;/summary&gt;

You can easily install Context7 through the [Cline MCP Server Marketplace](https://cline.bot/mcp-marketplace) by following these instructions:

1. Open **Cline**.
2. Click the hamburger menu icon (‚ò∞) to enter the **MCP Servers** section.
3. Use the search bar within the **Marketplace** tab to find _Context7_.
4. Click the **Install** button.

Or you can directly edit MCP servers configuration:

1. Open **Cline**.
2. Click the hamburger menu icon (‚ò∞) to enter the **MCP Servers** section.
3. Choose **Remote Servers** tab.
4. Click the **Edit Configuration** button.
5. Add context7 to `mcpServers`:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;type&quot;: &quot;streamableHttp&quot;,
      &quot;headers&quot;: {
        &quot;Authorization&quot;: &quot;Bearer YOUR_API_KEY&quot;
      }
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Zed&lt;/b&gt;&lt;/summary&gt;

It can be installed via [Zed Extensions](https://zed.dev/extensions?query=Context7) or you can add this to your Zed `settings.json`. See [Zed Context Server docs](https://zed.dev/docs/assistant/context-servers) for more info.

```json
{
  &quot;context_servers&quot;: {
    &quot;Context7&quot;: {
      &quot;source&quot;: &quot;custom&quot;,
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Augment Code&lt;/b&gt;&lt;/summary&gt;

To configure Context7 MCP in Augment Code, you can use either the graphical interface or manual configuration.

### **A. Using the Augment Code UI**

1. Click the hamburger menu.
2. Select **Settings**.
3. Navigate to the **Tools** section.
4. Click the **+ Add MCP** button.
5. Enter the following command:

   ```
   npx -y @upstash/context7-mcp@latest
   ```

6. Name the MCP: **Context7**.
7. Click the **Add** button.

Once the MCP server is added, you can start using Context7&#039;s up-to-date code documentation features directly within Augment Code.

---

### **B. Manual Configuration**

1. Press Cmd/Ctrl Shift P or go to the hamburger menu in the Augment panel
2. Select Edit Settings
3. Under Advanced, click Edit in settings.json
4. Add the server configuration to the `mcpServers` array in the `augment.advanced` object

```json
&quot;augment.advanced&quot;: {
  &quot;mcpServers&quot;: [
    {
      &quot;name&quot;: &quot;context7&quot;,
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  ]
}
```

Once the MCP server is added, restart your editor. If you receive any errors, check the syntax to make sure closing brackets or commas are not missing.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Roo Code&lt;/b&gt;&lt;/summary&gt;

Add this to your Roo Code MCP configuration file. See [Roo Code MCP docs](https://docs.roocode.com/features/mcp/using-mcp-in-roo) for more info.

#### Roo Code Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;streamable-http&quot;,
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
      }
    }
  }
}
```

#### Roo Code Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Gemini CLI&lt;/b&gt;&lt;/summary&gt;

See [Gemini CLI Configuration](https://google-gemini.github.io/gemini-cli/docs/tools/mcp-server.html) for details.

1.  Open the Gemini CLI settings file. The location is `~/.gemini/settings.json` (where `~` is your home directory).
2.  Add the following to the `mcpServers` object in your `settings.json` file:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;httpUrl&quot;: &quot;https://mcp.context7.com/mcp&quot;,
      &quot;headers&quot;: {
        &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;,
        &quot;Accept&quot;: &quot;application/json, text/event-stream&quot;
      }
    }
  }
}
```

Or, for a local server:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

If the `mcpServers` object does not exist, create it.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Claude Desktop&lt;/b&gt;&lt;/summary&gt;

#### Remote Server Connection

Open Claude Desktop and navigate to Settings &gt; Connectors &gt; Add Custom Connector. Enter the name as `Context7` and the remote MCP server URL as `https://mcp.context7.com/mcp`.

#### Local Server Connection

Open Claude Desktop developer settings and edit your `claude_desktop_config.json` file to add the following configuration. See [Claude Desktop MCP docs](https://modelcontextprotocol.io/quickstart/user) for more info.

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Opencode&lt;/b&gt;&lt;/summary&gt;

Add this to your Opencode configuration file. See [Opencode MCP docs](https://opencode.ai/docs/mcp-servers) for more info.

#### Opencode Remote Server Connection

```json
&quot;mcp&quot;: {
  &quot;context7&quot;: {
    &quot;type&quot;: &quot;remote&quot;,
    &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;,
    &quot;headers&quot;: {
      &quot;CONTEXT7_API_KEY&quot;: &quot;YOUR_API_KEY&quot;
    },
    &quot;enabled&quot;: true
  }
}
```

#### Opencode Local Server Connection

```json
{
  &quot;mcp&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;local&quot;,
      &quot;command&quot;: [&quot;npx&quot;, &quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;],
      &quot;enabled&quot;: true
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in OpenAI Codex&lt;/b&gt;&lt;/summary&gt;

See [OpenAI Codex](https://github.com/openai/codex) for more information.

Add the following configuration to your OpenAI Codex MCP server settings:

```toml
[mcp_servers.context7]
args = [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
command = &quot;npx&quot;
```

‚ö†Ô∏è Windows Notes

On Windows, some users may encounter request timed out errors with the default configuration.
In that case, explicitly configure the MCP server with the full path to Node.js and the installed package:

```toml
[mcp_servers.context7]
command = &quot;C:\\Program Files\\nodejs\\node.exe&quot;
args = [
  &quot;C:\\Users\\yourname\\AppData\\Roaming\\npm\\node_modules\\@upstash\\context7-mcp\\dist\\index.js&quot;,
  &quot;--transport&quot;,
  &quot;stdio&quot;,
  &quot;--api-key&quot;,
  &quot;YOUR_API_KEY&quot;
]
```

Alternatively, you can use the following configuration:

```toml
[mcp_servers.context7]
command = &quot;cmd&quot;
args = [
    &quot;/c&quot;,
    &quot;npx&quot;,
    &quot;-y&quot;,
    &quot;@upstash/context7-mcp&quot;,
    &quot;--api-key&quot;,
    &quot;YOUR_API_KEY&quot;
]
env = { SystemRoot=&quot;C:\\Windows&quot; }
startup_timeout_ms = 20_000
```

This ensures Codex CLI works reliably on Windows.

‚ö†Ô∏è MacOS Notes

On MacOS, some users may encounter the same request timed out errors like Windows,
it also can be solved with the full path to Node.js and the installed package:

```toml
[mcp_servers.context7]
command = &quot;/Users/yourname/.nvm/versions/node/v22.14.0/bin/node&quot;  # Node.js full path
args = [&quot;/Users/yourname/.nvm/versions/node/v22.14.0/lib/node_modules/@upstash/context7-mcp/dist/index.js&quot;,
  &quot;--transport&quot;,
  &quot;stdio&quot;,
  &quot;--api-key&quot;,
  &quot;YOUR_API_KEY&quot;
]
```

This ensures Codex CLI works reliably on MacOS.

&lt;/details&gt;

&lt;details&gt;

&lt;summary&gt;&lt;b&gt;Install in JetBrains AI Assistant&lt;/b&gt;&lt;/summary&gt;

See [JetBrains AI Assistant Documentation](https://www.jetbrains.com/help/ai-assistant/configure-an-mcp-server.html) for more details.

1. In JetBrains IDEs, go to `Settings` -&gt; `Tools` -&gt; `AI Assistant` -&gt; `Model Context Protocol (MCP)`
2. Click `+ Add`.
3. Click on `Command` in the top-left corner of the dialog and select the As JSON option from the list
4. Add this configuration and click `OK`

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

5. Click `Apply` to save changes.
6. The same way context7 could be added for JetBrains Junie in `Settings` -&gt; `Tools` -&gt; `Junie` -&gt; `MCP Settings`

&lt;/details&gt;

&lt;details&gt;
  
&lt;summary&gt;&lt;b&gt;Install in Kiro&lt;/b&gt;&lt;/summary&gt;

See [Kiro Model Context Protocol Documentation](https://kiro.dev/docs/mcp/configuration/) for details.

1. Navigate `Kiro` &gt; `MCP Servers`
2. Add a new MCP server by clicking the `+ Add` button.
3. Paste the configuration given below:

```json
{
  &quot;mcpServers&quot;: {
    &quot;Context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;],
      &quot;env&quot;: {},
      &quot;disabled&quot;: false,
      &quot;autoApprove&quot;: []
    }
  }
}
```

4. Click `Save` to apply the changes.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Trae&lt;/b&gt;&lt;/summary&gt;

Use the Add manually feature and fill in the JSON configuration information for that MCP server.
For more details, visit the [Trae documentation](https://docs.trae.ai/ide/model-context-protocol?_lang=en).

#### Trae Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

#### Trae Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Using Bun or Deno&lt;/b&gt;&lt;/summary&gt;

Use these alternatives to run the local Context7 MCP server with other runtimes. These examples work for any client that supports launching a local MCP server via command + args.

#### Bun

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;bunx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}
```

#### Deno

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;deno&quot;,
      &quot;args&quot;: [
        &quot;run&quot;,
        &quot;--allow-env=NO_DEPRECATION,TRACE_DEPRECATION&quot;,
        &quot;--allow-net&quot;,
        &quot;npm:@upstash/context7-mcp&quot;
      ]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Using Docker&lt;/b&gt;&lt;/summary&gt;

If you prefer to run the MCP server in a Docker container:

1. **Build the Docker Image:**

   First, create a `Dockerfile` in the project root (or anywhere you prefer):

   &lt;details&gt;
   &lt;summary&gt;Click to see Dockerfile content&lt;/summary&gt;

   ```Dockerfile
   FROM node:18-alpine

   WORKDIR /app

   # Install the latest version globally
   RUN npm install -g @upstash/context7-mcp

   # Expose default port if needed (optional, depends on MCP client interaction)
   # EXPOSE 3000

   # Default command to run the server
   CMD [&quot;context7-mcp&quot;]
   ```

   &lt;/details&gt;

   Then, build the image using a tag (e.g., `context7-mcp`). **Make sure Docker Desktop (or the Docker daemon) is running.** Run the following command in the same directory where you saved the `Dockerfile`:

   ```bash
   docker build -t context7-mcp .
   ```

2. **Configure Your MCP Client:**

   Update your MCP client&#039;s configuration to use the Docker command.

   _Example for a cline_mcp_settings.json:_

   ```json
   {
     &quot;mcpServers&quot;: {
       &quot;–°ontext7&quot;: {
         &quot;autoApprove&quot;: [],
         &quot;disabled&quot;: false,
         &quot;timeout&quot;: 60,
         &quot;command&quot;: &quot;docker&quot;,
         &quot;args&quot;: [&quot;run&quot;, &quot;-i&quot;, &quot;--rm&quot;, &quot;context7

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[trueadm/ripple]]></title>
            <link>https://github.com/trueadm/ripple</link>
            <guid>https://github.com/trueadm/ripple</guid>
            <pubDate>Tue, 14 Oct 2025 00:04:20 GMT</pubDate>
            <description><![CDATA[the elegant TypeScript UI framework]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/trueadm/ripple">trueadm/ripple</a></h1>
            <p>the elegant TypeScript UI framework</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,662</p>
            <p>Forks: 225</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre>&lt;a href=&quot;https://ripplejs.com&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(min-width: 768px)&quot; srcset=&quot;assets/ripple-desktop.png&quot;&gt;
    &lt;img src=&quot;assets/ripple-mobile.png&quot; alt=&quot;Ripple - the elegant TypeScript UI framework&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

[![CI](https://github.com/trueadm/ripple/actions/workflows/ci.yml/badge.svg)](https://github.com/trueadm/ripple/actions/workflows/ci.yml)
[![Discord](https://img.shields.io/badge/Discord-Join%20Server-7289da?logo=discord&amp;logoColor=white)](https://discord.gg/JBF2ySrh2W)
[![Open in StackBlitz](https://developer.stackblitz.com/img/open_in_stackblitz_small.svg)](https://stackblitz.com/github/trueadm/ripple/tree/main/templates/basic)

# What is RippleJS?

&gt; Currently, this project is still in early development, and should not be used in production.

Ripple is a TypeScript UI framework that takes the best parts of React, Solid and Svelte and combines them into one package.

I wrote Ripple as a love letter for frontend web.

Personally, I ([@trueadm](https://github.com/trueadm)) have been involved in some truly amazing frontend frameworks along their journeys ‚Äì from [Inferno](https://github.com/infernojs/inferno), where it all began, to [React](https://github.com/facebook/react) and the journey of React Hooks, to creating [Lexical](https://github.com/facebook/lexical), to [Svelte 5](https://github.com/sveltejs/svelte) and its new compiler and signal-based reactivity runtime. Along that journey, I collected ideas, and intriguing thoughts that may or may not pay off. Given my time between roles, I decided it was the best opportunity to try them out, and for open source to see what I was cooking.

Ripple was designed to be a JS/TS-first framework, rather than HTML-first. Ripple modules have their own `.ripple` extension, and these modules
fully support TypeScript. By introducing a new extension, it allows Ripple to invent its own superset language, which plays really nicely with
TypeScript and JSX, but with a few interesting touches. In my experience, this has led to better DX not only for humans, but also for LLMs.

## Features

- **Reactive Primitives**: Built-in reactivity with `track` and `@` reactive syntax on primitives
- **Reactive Objects**: You can create fully reactive arrays/objects using shorthand syntax `#[]` `#{}`
- **Component-Based Architecture**: Clean, reusable components with props and children
- **Template Syntax**: Familiar templating with Ripple-specific enhancements
- **Performance**: Fine-grain rendering, with industry-leading performance, bundle-size and memory usage
- **TypeScript Support**: Full TypeScript integration with type checking
- **VSCode Integration**: Rich editor support with diagnostics, syntax highlighting, and IntelliSense
- **Prettier Support**: Full Prettier formatting support for `.ripple` modules
- **ESLint Support**: Full ESLint integration for `.ripple` modules

## Missing Features

- **SSR**: Ripple is currently an SPA only. It will have SSR soon! Hydration to follow after.

## Getting Started

### Try Ripple

&gt; We&#039;re working hard on getting an online playground available. Watch this space!

You can try Ripple now by using our basic Vite template either via [StackBlitz](https://stackblitz.com/github/trueadm/ripple/tree/main/templates/basic), or by running these commands in your terminal:

```bash
npx degit trueadm/ripple/templates/basic my-app
cd my-app
npm i # or yarn or pnpm
npm run dev # or yarn or pnpm
```

or use create-ripple interactive CLI tool for creating new Ripple applications with features like Tailwind CSS or Bootstrap setup.

```
npx create-ripple  # or yarn create ripple or pnpm create ripple
```

If you want to install the RippleJS package directly, it is `ripple` on npm:

```bash
npm i --save ripple # or yarn or pnpm
```

## VSCode Extension

The [Ripple VSCode extension](https://marketplace.visualstudio.com/items?itemName=ripplejs.ripple-vscode-plugin) provides:

- **Syntax Highlighting** for `.ripple` files
- **Real-time Diagnostics** for compilation errors
- **TypeScript Integration** for type checking
- **IntelliSense** for autocompletion

You can find the extension on the VS Code Marketplace as [`Ripple for VS Code`](https://marketplace.visualstudio.com/items?itemName=ripplejs.ripple-vscode-plugin).

You can also [manually install the extension](https://github.com/trueadm/ripple/raw/refs/heads/main/packages/ripple-vscode-plugin/published/ripple-vscode-plugin.vsix) `.vsix` that have been manually packaged.

### Mounting your app

You can use the `mount` API from the `ripple` package to render your Ripple component, using the `target`
option to specify what DOM element you want to render the component.

```ts
// index.ts
import { mount } from &#039;ripple&#039;;
import { App } from &#039;/App.ripple&#039;;

mount(App, {
  props: {
    title: &#039;Hello world!&#039;,
  },
  target: document.getElementById(&#039;root&#039;),
});
```

## Key Concepts

### Components

Define reusable components with the `component` keyword. These are similar to functions in that they have `props`, but crucially,
they allow for a JSX-like syntax to be defined alongside standard TypeScript. That means you do not _return JSX_ like in other frameworks, but you instead use it like a JavaScript statement, as shown:

```jsx
component Button(props: { text: string, onClick: () =&gt; void }) {
  &lt;button onClick={props.onClick}&gt;
    {props.text}
  &lt;/button&gt;
}

// Usage
export component App() {
  &lt;Button text=&quot;Click me&quot; onClick={() =&gt; console.log(&quot;Clicked!&quot;)} /&gt;
}
```

Ripple&#039;s templating language also supports shorthands and object spreads too:

```svelte
// you can do a normal prop
&lt;div onClick={onClick}&gt;{text}&lt;/div&gt;

// or using the shorthand prop
&lt;div {onClick}&gt;{text}&lt;/div&gt;

// and you can spread props
&lt;div {...properties}&gt;{text}&lt;/div&gt;
```

### Reactivity

You use `track` to create a single tracked value. The `track` function will created a boxed `Tracked&lt;V&gt;` object that
is not accessible from the outside, and instead you must use `@` to unbox the `Tracked&lt;V&gt;` object to read or write its underlying value. You can pass the `Tracked&lt;V&gt;` object between components, functions and context
to read and write to the value in different parts of your codebase.

```ts
import { track } from &#039;ripple&#039;;

let name = track(&#039;World&#039;);
let count = track(0);

// Updates automatically trigger re-renders
@count++;
```

Objects can also contain tracked values with `@` to access the reactive object property:

```ts
import { track } from &#039;ripple&#039;;

let counter = { current: track(0) };

// Updates automatically trigger re-renders
counter.@current++;
```

Tracked derived values are also `Tracked&lt;V&gt;` objects, except you pass a function to `track` rather than a value:

```ts
let count = track(0);
let double = track(() =&gt; @count * 2);
let quadruple = track(() =&gt; @double * 2);

console.log(@quadruple);
```

If you want to use a tracked value inside a reactive context, such as an effect but you don&#039;t want that value to be a tracked dependency, you can use `untrack`:

```ts
let count = track(0);
let double = track(() =&gt; @count * 2);
let quadruple = track(() =&gt; @double * 2);

effect(() =&gt; {
  // This effect will never fire again, as we&#039;ve untracked the only dependency it has
  console.log(untrack(() =&gt; @quadruple));
})
```

&gt; Note: you cannot create `Tracked` objects in module/global scope, they have to be created on access from an active component context.

#### track with get / set

The optional get and set parameters of the `track` function let you customize how a tracked value is read or written, similar to property accessors but expressed as pure functions. The get function receives the current stored value and its return value is exposed when the tracked value is accessed / unboxed with `@`. The set function should return the value that will actually be stored and receives two parameters: the first is the one being assigned and the second with the previous value. The get and set functions may be useful for tasks such as logging, validating, or transforming values before they are exposed or stored.

```jsx
import { track } from &#039;ripple&#039;;

export component App() {
  let count = track(0,
    (current) =&gt; {
      console.log(current);
      return current;
    },
    (next, prev) =&gt; {
      console.log(prev);
      if (typeof next === &#039;string&#039;) {
        next = Number(next);
      }

      return next;
    }
  );
}
```

&gt; Note: If no value is returned from either `get` or `set`, `undefined` is either exposed (for get) or stored (for set). Also, if only supplying the `set`, the `get` parameter must be set to `undefined`.

#### trackSplit Function

The `trackSplit` &quot;splits&quot; a plain object ‚Äî such as component props ‚Äî into specified tracked variables and an extra `rest` property containing the remaining unspecified object properties.

```jsx
const [children, count, rest] = trackSplit(props, [&#039;children&#039;, &#039;count&#039;]);
```

When working with component props, destructuring is often useful ‚Äî both for direct use as variables and for collecting remaining properties into a `rest` object (which can be named arbitrarily). If destructuring happens in the component argument, e.g. `component Child({ children, value, ...rest })`, Ripple automatically links variable access to the original props ‚Äî for example, `value` is compiled to `props.value`, preserving reactivity.

However, destructuring inside the component body, e.g. `const { children, value, ...rest } = props`, for read-only reactive props, does not preserve reactivity (too complicated to implement due to many edge cases). To ensure destructured read-only reactive props remain reactive in this case, use the `trackSplit` function.

&gt; Note: boxed / wrapped Tracked objects are always reactive since they cross function boundaries by reference. Props that were not declared with `track()` are never reactive and always render the same value that was initially passed in.

A full example utilizing various Ripple constructs demonstrates the `split` option usage:

```jsx
import { track, trackSplit } from &#039;ripple&#039;;
import type { PropsWithChildren, Tracked } from &#039;ripple&#039;;

component Child(props: PropsWithChildren&lt;{ count: Tracked&lt;number&gt;, className: string }&gt;) {
  // children, count are always reactive
  // but className is passed in as a read-only reactive value
  const [children, count, className, rest] = trackSplit(props, [&#039;children&#039;, &#039;count&#039;, &#039;class&#039;]);

  &lt;button class={@className} {...@rest}&gt;&lt;@children /&gt;&lt;/button&gt;
  &lt;pre&gt;{`Count is: ${@count}`}&lt;/pre&gt;
  &lt;button onClick={() =&gt; @count++}&gt;{&#039;Increment Count&#039;}&lt;/button&gt;
}

export component App() {
    let count = track(0,
    (current) =&gt; {
      console.log(&#039;getter&#039;, current);
      return current;
    },
    (next) =&gt; {
      console.log(&#039;setter&#039;, next);
      return next;
    }
  );
  let className = track(&#039;shadow&#039;);
  let name = track(&#039;Click Me&#039;);

  function buttonRef(el) {
    console.log(&#039;ref called with&#039;, el);
    return () =&gt; {
      console.log(&#039;cleanup ref for&#039;, el);
    };
  }

  &lt;Child
    class={@className}
    onClick={() =&gt; { @name === &#039;Click Me&#039; ? @name = &#039;Clicked&#039; : @name = &#039;Click Me&#039;; @className = &#039;&#039;}}
    {count}
    {ref buttonRef}
  &gt;{@name}&lt;/Child&gt;;
}
```

With the regular destructuring, such as the one below, the `class` property would lose its reactivity:

```jsx
// ‚ùå WRONG class / className reactivity would be lost
let { children, count, class: className, ...rest } = props;
```

&gt; Note: Make sure the resulting `rest`, if it&#039;s going to be spread onto a dom element, does not contain `Tracked` values. Otherwise, you&#039;d be spreading not the actual values but the boxed ones, which are objects that will appear as `[object Object]` on the dom element.

#### Transporting Reactivity

Ripple doesn&#039;t constrain reactivity to components only. `Tracked&lt;V&gt;` objects can simply be passed by reference between boundaries:

```jsx
import { effect, track } from &#039;ripple&#039;;

function createDouble(count) {
  const double = track(() =&gt; @count * 2);

  effect(() =&gt; {
    console.log(&#039;Count:&#039;, @count)
  });

  return double;
}

export component App() {
  let count = track(0);

  const double = createDouble(count);

  &lt;div&gt;{&#039;Double: &#039; + @double}&lt;/div&gt;
  &lt;button onClick={() =&gt; { @count++; }}&gt;{&#039;Increment&#039;}&lt;/button&gt;
}
```

#### Dynamic Components

Ripple has built-in support for dynamic components, a way to render different components based on reactive state. Instead of hardcoding which component to show, you can store a component in a `Tracked` via `track()`, and update it at runtime. When the tracked value changes, Ripple automatically unmounts the previous component and mounts the new one. Dynamic components are written with the `&lt;@Component /&gt;` tag, where the @ both unwraps the tracked reference and tells the compiler that the component is dynamic. This makes it straightforward to pass components as props or swap them directly within a component, enabling flexible, state-driven UIs with minimal boilerplate.

```jsx
export component App() {
  let swapMe = track(() =&gt; Child1);

  &lt;Child {swapMe} /&gt;

  &lt;button onClick={() =&gt; @swapMe = @swapMe === Child1 ? Child2 : Child1}&gt;{&#039;Swap Component&#039;}&lt;/button&gt;
}

component Child({ swapMe }: {swapMe: Tracked&lt;Component&gt;}) {
  &lt;@swapMe /&gt;
}

component Child1(props) {
  &lt;pre&gt;{&#039;I am child 1&#039;}&lt;/pre&gt;
}

component Child2(props) {
  &lt;pre&gt;{&#039;I am child 2&#039;}&lt;/pre&gt;
}
```

#### Dynamic Elements

You can render dynamic HTML elements by storing the tag name in a tracked variable and using the `&lt;@tagName&gt;` syntax:

```jsx
export component App() {
  let tag = track(&#039;div&#039;);

  &lt;@tag class=&quot;dynamic&quot;&gt;{&#039;Hello World&#039;}&lt;/@tag&gt;
  &lt;button onClick={() =&gt; @tag = @tag === &#039;div&#039; ? &#039;span&#039; : &#039;div&#039;}&gt;{&#039;Toggle Element&#039;}&lt;/button&gt;
}
```

#### Simple Reactive Arrays

Just like objects, you can use the `Tracked&lt;V&gt;` objects in any standard JavaScript object, like arrays:

```js
let first = track(0);
let second = track(0);
const arr = [first, second];

const total = track(() =&gt; arr.reduce((a, b) =&gt; a + @b, 0));

console.log(@total);
```

Like shown in the above example, you can compose normal arrays with reactivity and pass them through props or boundaries.

However, if you need the entire array to be fully reactive, including when new elements get added, you should use the reactive array that Ripple provides.

#### Fully Reactive Array

`TrackedArray` class from Ripple extends the standard JS `Array` class, and supports all of its methods and properties. Import it from the `&#039;ripple&#039;` namespace or use the provided syntactic sugar for a quick creation via the bracketed notation. All elements existing or new of the `TrackedArray` are reactive and respond to the various array operations such as push, pop, shift, unshift, etc. Even if you reference a non-existent element, once it added, the original reference will react to the change. You do NOT need to use the unboxing `@` with the elements of the array.

```jsx
import { TrackedArray } from &#039;ripple&#039;;

// using syntactic sugar `#`
const arr = #[1, 2, 3];

// using the new constructor
const arr = new TrackedArray(1, 2, 3);

// using static from method
const arr = TrackedArray.from([1, 2, 3]);

// using static of method
const arr = TrackedArray.of(1, 2, 3);
```

Usage Example:

```jsx
export component App() {
  const items = #[1, 2, 3];

  &lt;div&gt;
    &lt;p&gt;{&quot;Length: &quot;}{items.length}&lt;/p&gt;  // Reactive length
    for (const item of items) {
      &lt;div&gt;{item}&lt;/div&gt;
    }
    &lt;button onClick={() =&gt; items.push(items.length + 1)}&gt;{&quot;Add&quot;}&lt;/button&gt;
  &lt;/div&gt;
}
```

#### Reactive Object

`TrackedObject` class extends the standard JS `Object` class, and supports all of its methods and properties. Import it from the `&#039;ripple&#039;` namespace or use the provided syntactic sugar for a quick creation via the curly brace notation. `TrackedObject` fully supports shallow reactivity and any property on the root level is reactive. You can even reference non-existent properties and once added the original reference reacts to the change. You do NOT need to use the unboxing `@` with the properties of the `TrackedObject`.

```jsx
import { TrackedObject } from &#039;ripple&#039;;

// using syntactic sugar `#`
const arr = #{a: 1, b: 2, c: 3};

// using the new constructor
const arr = new TrackedObject({a: 1, b: 2, c: 3});
```

Usage Example:

```jsx
export component App() {
  const obj = #{a: 0}

  obj.a = 0;

  &lt;pre&gt;{&#039;obj.a is: &#039;}{obj.a}&lt;/pre&gt;
  &lt;pre&gt;{&#039;obj.b is: &#039;}{obj.b}&lt;/pre&gt;
  &lt;button onClick={() =&gt; { obj.a++; obj.b = obj.b ?? 5; obj.b++; }}&gt;{&#039;Increment&#039;}&lt;/button&gt;
}
```

#### Reactive Set

The `TrackedSet` extends the standard JS `Set` class, and supports all of its methods and properties.

```js
import { TrackedSet } from &#039;ripple&#039;;

const set = new TrackedSet([1, 2, 3]);
```

TrackedSet&#039;s reactive methods or properties can be used directly or assigned to reactive variables.

```jsx
import { TrackedSet, track } from &#039;ripple&#039;;

export component App() {
  const set = new TrackedSet([1, 2, 3]);

  // direct usage
  &lt;p&gt;{&quot;Direct usage: set contains 2: &quot;}{set.has(2)}&lt;/p&gt;

  // reactive assignment
  let has = track(() =&gt; set.has(2));
  &lt;p&gt;{&quot;Assigned usage: set contains 2: &quot;}{@has}&lt;/p&gt;

  &lt;button onClick={() =&gt; set.delete(2)}&gt;{&quot;Delete 2&quot;}&lt;/button&gt;
  &lt;button onClick={() =&gt; set.add(2)}&gt;{&quot;Add 2&quot;}&lt;/button&gt;
}
```

#### Reactive Map

The `TrackedMap` extends the standard JS `Map` class, and supports all of its methods and properties.

&lt;!-- prettier-ignore --&gt;
```js
import { TrackedMap, track } from &#039;ripple&#039;;

const map = new TrackedMap([[1,1], [2,2], [3,3], [4,4]]);
```

TrackedMap&#039;s reactive methods or properties can be used directly or assigned to reactive variables.

```jsx
import { TrackedMap, track } from &#039;ripple&#039;;

export component App() {
  const map = new TrackedMap([[1,1], [2,2], [3,3], [4,4]]);

  // direct usage
  &lt;p&gt;{&quot;Direct usage: map has an item with key 2: &quot;}{map.has(2)}&lt;/p&gt;

  // reactive assignment
  let has = track(() =&gt; map.has(2));
  &lt;p&gt;{&quot;Assigned usage: map has an item with key 2: &quot;}{@has}&lt;/p&gt;

  &lt;button onClick={() =&gt; map.delete(2)}&gt;{&quot;Delete item with key 2&quot;}&lt;/button&gt;
  &lt;button onClick={() =&gt; map.set(2, 2)}&gt;{&quot;Add key 2 with value 2&quot;}&lt;/button&gt;
}
```

#### Reactive Date

The `TrackedDate` extends the standard JS `Date` class, and supports all of its methods and properties.

```js
import { TrackedDate } from &#039;ripple&#039;;

const date = new TrackedDate(2026, 0, 1); // January 1, 2026
```

TrackedDate&#039;s reactive methods or properties can be used directly or assigned to reactive variables. All getter methods (`getFullYear()`, `getMonth()`, `getDate()`, etc.) and formatting methods (`toISOString()`, `toDateString()`, etc.) are reactive and will update when the date is modified.

```jsx
import { TrackedDate, track } from &#039;ripple&#039;;

export component App() {
  const date = new TrackedDate(2025, 0, 1, 12, 0, 0);

  // direct usage
  &lt;p&gt;{&quot;Direct usage: Current year is &quot;}{date.getFullYear()}&lt;/p&gt;
  &lt;p&gt;{&quot;ISO String: &quot;}{date.toISOString()}&lt;/p&gt;

  // reactive assignment
  let year = track(() =&gt; date.getFullYear());
  let month = track(() =&gt; date.getMonth());
  &lt;p&gt;{&quot;Assigned usage: Year &quot;}{@year}{&quot;, Month &quot;}{@month}&lt;/p&gt;

  &lt;button onClick={() =&gt; date.setFullYear(2027)}&gt;{&quot;Change to 2026&quot;}&lt;/button&gt;
  &lt;button onClick={() =&gt; date.setMonth(11)}&gt;{&quot;Change to December&quot;}&lt;/button&gt;
}
```

### Effects

When dealing with reactive state, you might want to be able to create side-effects based upon changes that happen upon updates.
To do this, you can use `effect`:

```jsx
import { effect, track } from &#039;ripple&#039;;

export component App() {
  let count = track(0);

  effect(() =&gt; {
    console.log(@count);
  });

  &lt;button onClick={() =&gt; @count++}&gt;{&#039;Increment&#039;}&lt;/button&gt;
}
```

### After Update tick()

The `tick()` function returns a Promise that resolves after all pending reactive updates have been applied to the DOM. This is useful when you need to ensure that DOM changes are complete before executing subsequent code, similar to Vue&#039;s `nextTick()` or Svelte&#039;s `tick()`.

```jsx
import { effect, track, tick } from &#039;ripple&#039;;

export component App() {
  let count = track(0);

  effect(() =&gt; {
    

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[be5invis/Iosevka]]></title>
            <link>https://github.com/be5invis/Iosevka</link>
            <guid>https://github.com/be5invis/Iosevka</guid>
            <pubDate>Tue, 14 Oct 2025 00:04:19 GMT</pubDate>
            <description><![CDATA[Versatile typeface for code, from code.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/be5invis/Iosevka">be5invis/Iosevka</a></h1>
            <p>Versatile typeface for code, from code.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 20,903</p>
            <p>Forks: 627</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;images/grand-title.light.svg#gh-light-mode-only&quot; title=&quot;Iosevka Grand Title&quot;&gt;&lt;img src=&quot;images/grand-title.dark.svg#gh-dark-mode-only&quot; title=&quot;Iosevka Grand Title&quot;/&gt; &lt;/p&gt;

------------

&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/be5invis/Iosevka/releases#gh-light-mode-only&quot;&gt;&lt;img src=&quot;images/button-release.light.svg#gh-light-mode-only&quot; title=&quot;Release&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/be5invis/Iosevka/releases#gh-dark-mode-only&quot;&gt;&lt;img src=&quot;images/button-release.dark.svg#gh-dark-mode-only&quot; title=&quot;Release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://be5invis.github.io/Iosevka/customizer#gh-light-mode-only&quot;&gt;&lt;img src=&quot;images/button-customize.light.svg#gh-light-mode-only&quot; title=&quot;Customizer&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://be5invis.github.io/Iosevka/customizer#gh-dark-mode-only&quot;&gt;&lt;img src=&quot;images/button-customize.dark.svg#gh-dark-mode-only&quot; title=&quot;Customizer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://be5invis.github.io/Iosevka/specimen#gh-light-mode-only&quot;&gt;&lt;img src=&quot;images/button-specimen.light.svg#gh-light-mode-only&quot; title=&quot;Specimen&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://be5invis.github.io/Iosevka/specimen#gh-dark-mode-only&quot;&gt;&lt;img src=&quot;images/button-specimen.dark.svg#gh-dark-mode-only&quot; title=&quot;Specimen&quot;&gt;&lt;/a&gt;&lt;/p&gt;

**Iosevka** \[Àåj…îÀàseŒ≤.k ∞a\] is an *open-source*, *sans-serif* + *slab-serif*, *monospace* + *quasi‚Äëproportional* typeface family, designed for *writing code*, using in *terminals*, and preparing *technical documents*.

## Installation

### Installing from GitHub Releases

1. Download your font package from [releases](https://github.com/be5invis/Iosevka/releases).
  * For Linux users you could use the following command to download all the TTC packages in the latest release:
    ```bash
    curl -s &#039;https://api.github.com/repos/be5invis/Iosevka/releases/latest&#039; | jq -r &quot;.assets[] | .browser_download_url&quot; | grep PkgTTC-Iosevka | xargs -n 1 curl -L -O --fail --silent --show-error
    ```
2. Quit all your editors / programs.
3. Unarchive the font package and you will see the font files.
4. Take actions depending on your OS:
    * **Windows**: Select the font files and drag into font [settings](ms-settings:fonts) / font control panel page.  
      * On Windows 10 1809 or newer, the default font installation is per-user, and it may cause compatibility issues for some applications, mostly written in Java. To cope with this, right click and select ‚ÄúInstall for all users‚Äù instead. [Ref.](https://youtrack.jetbrains.com/issue/JRE-1166?p=IDEA-200145)
    * **macOS**: [Follow instructions here](http://support.apple.com/kb/HT2509).
    * **Linux** : Copy the font files to your fonts directory then run `sudo fc-cache`.

### Installing via Package Managers

*Disclaimer: This repository does not maintain any package manager distribution. The packages listed below may not always be up-to-date.*

  * **macOS**
    * Standard distribution in Homebrew:
      ```bash
      brew install --cask font-iosevka
      ```
    * Search for other variants using `brew search font-iosevka` and install what you want.
    * Customizable install using Homebrew: see [robertgzr/homebrew-tap](https://github.com/robertgzr/homebrew-tap).
  * **Linux**
    * Arch Linux: Install one of the [ttc-iosevka packages](https://archlinux.org/packages/?q=ttc-iosevka).
    * Ubuntu Linux: Install one of the [fonts-iosevka packages](http://sid.ethz.ch/debian/fonts-iosevka/).
    * Void Linux: Install the font with `xbps-install font-iosevka`.
    * Fedora: Install the font(s) from [the COPR here](https://copr.fedorainfracloud.org/coprs/peterwu/iosevka/). Run `dnf search iosevka` to discover available fonts and `dnf install` to install the chosen one(s).
  * **FreeBSD**: The font can be installed with `pkg install iosevka`.
  * **OpenBSD**: Run `pkg_info -Q iosevka` to see which Iosevka packages are available. Use `pkg_add` to install the chosen package(s).

## Features

In the official package, Iosevka provides 6 monospace subfamilies (sans-serif and slab-serif, each in the 3 spacings Default, Term and Fixed) and 2 quasi-proportional subfamilies (Aile (sans-serif) and Etoile (slab-serif)). In all the monospace subfamilies, 9 weights (Thin to Heavy), 2 widths (Normal and Extended), and 3 slopes (Upright, Italic and Oblique) are included. In the quasi-proportional subfamilies, the quantity of widths is reduced to 1.

![Weights sample](images/weights.light.svg#gh-light-mode-only)![Weights sample](images/weights.dark.svg#gh-dark-mode-only)

All versions include the same ranges of characters: Latin letters, Greek letters (including Polytonic), some Cyrillic letters, IPA symbols and common punctuations and some symbols. You can check out the full list [here](http://be5invis.github.io/Iosevka/specimen).

![Languages Sample](images/languages.light.svg#gh-light-mode-only)![Languages Sample](images/languages.dark.svg#gh-dark-mode-only)

&lt;!-- BEGIN Section-Language-List --&gt;
&lt;!-- THIS SECTION IS AUTOMATICALLY GENERATED. DO NOT EDIT. --&gt;

241 Supported Languages: 

Abkhazian, Afar, Afrikaans, Aghem, Akan, Akoose, Albanian, Anii, Aragonese, Armenian, Asturian, Asu, Atsam, Azerbaijani, Bafia, Baluchi¬†(bal_latn), Bambara, Basaa, Bashkir, Basque, Belarusian, Bemba, Bena, Betawi, Bosnian, Breton, Bulgarian, Caddo, Catalan, Cebuano, Central Atlas Tamazight, Chechen, Chickasaw, Chiga, Chinese¬†(zh_latn), Choctaw, Church Slavic, Chuvash, Colognian, Cornish, Corsican, Croatian, Czech, Danish, Duala, Dutch, Embu, English, Erzya, Esperanto, Estonian, Ewe, Ewondo, Faroese, Filipino, Finnish, French, Friulian, Fula, Ga, Galician, Ganda, German, Greek, Guarani, Gusii, Haitian Creole, Hausa, Hawaiian, Hindi (Latin), Hungarian, Icelandic, Ido, Igbo, Inari Sami, Indonesian, Interlingua, Interlingue, Inuktitut¬†(iu_latn), Irish, Italian, Javanese, Jju, Jola-Fonyi, Kabuverdianu, Kabyle, Kaingang, Kako, Kalaallisut, Kalenjin, Kamba, Kara-Kalpak, Kazakh, Kenyang, Kikuyu, Kinyarwanda, Konkani¬†(kok_latn), Koyra Chiini, Koyraboro Senni, Kpelle, Kurdish, Kuvi, Kwasio, Kyrgyz, K ºiche º, Lakota, Langi, Latgalian, Latin, Latvian, Ligurian, Lingala, Lithuanian, Lojban, Lombard, Low German, Lower Sorbian, Luba-Katanga, Lule Sami, Luo, Luxembourgish, Luyia, Macedonian, Machame, Makhuwa, Makhuwa-Meetto, Makonde, Malagasy, Malay, Maltese, Manx, Mapuche, Masai, Meru, Meta º, Mi&#039;kmaw, Mohawk, Moksha, Mongolian, Morisyen, Mundang, Muscogee, MƒÅori, Nama, Navajo, Ngiemboon, Ngomba, Nheengatu, Nigerian Pidgin, North Ndebele, Northern Frisian, Northern Sami, Northern Sotho, Norwegian, Norwegian Bokm√•l, Norwegian Nynorsk, Nuer, Nyanja, Nyankole, Obolo, Occitan, Oromo, Ossetic, Papiamento, Pijin, Polish, Portuguese, Prussian, Quechua, Riffian, Romanian, Romansh, Rombo, Rundi, Russian, Rwa, Saho, Samburu, Sango, Sangu, Sardinian, Scottish Gaelic, Sena, Serbian, Shambala, Shona, Sicilian, Sidamo, Silesian, Skolt Sami, Slovak, Slovenian, Soga, Somali, South Ndebele, Southern Sami, Southern Sotho, Spanish, Sundanese, Swahili, Swati, Swedish, Swiss German, Tachelhit¬†(shi_latn), Taita, Tajik, Taroko, Tasawaq, Tatar, Teso, Tok Pisin, Toki Pona, Tongan, Tsonga, Tswana, Turkish, Turkmen, Tuvinian, Tyap, Ukrainian, Upper Sorbian, Uzbek, Vai¬†(vai_latn), Venda, Venetian, Vietnamese, Volap√ºk, Vunjo, Walloon, Walser, Warlpiri, Welsh, Western Frisian, Wolof, Xhosa, Yakut, Yangben, Yoruba, Zarma, Zhuang, Zulu

&lt;!-- END Section-Language-List --&gt;

### Stylistic Sets

Monospace Iosevka contains various stylistic sets to change the shape of certain characters. Enabling corresponded OpenType feature to enable.

&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;h2&gt;&lt;a href=&quot;doc/stylistic-sets.md&quot;&gt;View list of stylistic sets of Iosevka.&lt;/a&gt;&lt;/h2&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;


### Character Variants

Alongside stylistic sets, Monospace Iosevka can also be configured to cherry-pick variants for each character using OpenType. The variants are shown below. To enable, assign the feature tag to the variant index. For example, setting `cv26` to `6` will enable single-storey `a`.

**Caution :**  Certain software may limit the quantity of OpenType features and drop some of them if the feature list is too long. Please validate your feature configuration to ensure that it worked in your software.

&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;h2&gt;&lt;a href=&quot;doc/character-variants.md&quot;&gt;View list of character variants of Iosevka.&lt;/a&gt;&lt;/h2&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

### Ligations

Monospace subfamilies support ligations. Iosevka‚Äôs default ligation set is assigned to `calt` feature, though not all of them are enabled by default.

&lt;!-- BEGIN Section-OT-Ligation-Tags-1 --&gt;
&lt;!-- THIS SECTION IS AUTOMATICALLY GENERATED. DO NOT EDIT. --&gt;

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;calt off&lt;/td&gt;
&lt;td&gt;Ligation Off&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td colspan=&quot;2&quot;&gt;&lt;img src=&quot;images/ligset-calt-0.light.svg#gh-light-mode-only&quot;/&gt;&lt;img src=&quot;images/ligset-calt-0.dark.svg#gh-dark-mode-only&quot;/&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;calt&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Default setting in text editors&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td colspan=&quot;2&quot;&gt;&lt;img src=&quot;images/ligset-calt-1.light.svg#gh-light-mode-only&quot;/&gt;&lt;img src=&quot;images/ligset-calt-1.dark.svg#gh-dark-mode-only&quot;/&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dlig&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Discretionary ligatures&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td colspan=&quot;2&quot;&gt;&lt;img src=&quot;images/ligset-dlig-1.light.svg#gh-light-mode-only&quot;/&gt;&lt;img src=&quot;images/ligset-dlig-1.dark.svg#gh-dark-mode-only&quot;/&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;!-- END Section-OT-Ligation-Tags-1 --&gt;

Iosevka supports Language-Specific Ligations, which is the ligation set enabled only under certain languages. These ligation sets are assigned to custom feature tags. To use them, you need to turn **off** `calt` and enable the corresponded feature. The feature list is:

&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;h2&gt;&lt;a href=&quot;doc/language-specific-ligation-sets.md&quot;&gt;View list of language-specific ligations.&lt;/a&gt;&lt;/h2&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

Please note that, due to the complex interactions when forming ligations, cherry-picking ligation groups will require a custom Iosevka build. The instructions could be seen below.

## Building from Source

&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;h2&gt;&lt;a href=&quot;doc/custom-build.md&quot;&gt;Read instructions.&lt;/a&gt;&lt;/h2&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

## For Chinese, Japanese and Korean (CJK) users...

‚Üí [Sarasa Gothic](https://github.com/be5invis/Sarasa-Gothic).

## Mirrors

- TUNA (CN): https://mirrors.tuna.tsinghua.edu.cn/github-release/be5invis/Iosevka
- NJU (CN): https://mirrors.nju.edu.cn/github-release/be5invis/Iosevka
---

![Family Matrix](images/matrix.light.svg#gh-light-mode-only)![Family Matrix](images/matrix.dark.svg#gh-dark-mode-only)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[nodejs/node]]></title>
            <link>https://github.com/nodejs/node</link>
            <guid>https://github.com/nodejs/node</guid>
            <pubDate>Tue, 14 Oct 2025 00:04:18 GMT</pubDate>
            <description><![CDATA[Node.js JavaScript runtime ‚ú®üê¢üöÄ‚ú®]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nodejs/node">nodejs/node</a></h1>
            <p>Node.js JavaScript runtime ‚ú®üê¢üöÄ‚ú®</p>
            <p>Language: JavaScript</p>
            <p>Stars: 113,752</p>
            <p>Forks: 33,472</p>
            <p>Stars today: 25 stars today</p>
            <h2>README</h2><pre># Node.js

Node.js is an open-source, cross-platform JavaScript runtime environment.

For information on using Node.js, see the [Node.js website][].

The Node.js project uses an [open governance model](./GOVERNANCE.md). The
[OpenJS Foundation][] provides support for the project.

Contributors are expected to act in a collaborative manner to move
the project forward. We encourage the constructive exchange of contrary
opinions and compromise. The [TSC](./GOVERNANCE.md#technical-steering-committee)
reserves the right to limit or block contributors who repeatedly act in ways
that discourage, exhaust, or otherwise negatively affect other participants.

**This project has a [Code of Conduct][].**

## Table of contents

* [Support](#support)
* [Release types](#release-types)
  * [Download](#download)
    * [Current and LTS releases](#current-and-lts-releases)
    * [Nightly releases](#nightly-releases)
    * [API documentation](#api-documentation)
  * [Verifying binaries](#verifying-binaries)
* [Building Node.js](#building-nodejs)
* [Security](#security)
* [Contributing to Node.js](#contributing-to-nodejs)
* [Current project team members](#current-project-team-members)
  * [TSC (Technical Steering Committee)](#tsc-technical-steering-committee)
  * [Collaborators](#collaborators)
  * [Triagers](#triagers)
  * [Release keys](#release-keys)
* [License](#license)

## Support

Looking for help? Check out the
[instructions for getting support](.github/SUPPORT.md).

## Release types

* **Current**: Under active development. Code for the Current release is in the
  branch for its major version number (for example,
  [v22.x](https://github.com/nodejs/node/tree/v22.x)). Node.js releases a new
  major version every 6 months, allowing for breaking changes. This happens in
  April and October every year. Releases appearing each October have a support
  life of 8 months. Releases appearing each April convert to LTS (see below)
  each October.
* **LTS**: Releases that receive Long Term Support, with a focus on stability
  and security. Every even-numbered major version will become an LTS release.
  LTS releases receive 12 months of _Active LTS_ support and a further 18 months
  of _Maintenance_. LTS release lines have alphabetically-ordered code names,
  beginning with v4 Argon. There are no breaking changes or feature additions,
  except in some special circumstances.
* **Nightly**: Code from the Current branch built every 24-hours when there are
  changes. Use with caution.

Current and LTS releases follow [semantic versioning](https://semver.org). A
member of the Release Team [signs](#release-keys) each Current and LTS release.
For more information, see the
[Release README](https://github.com/nodejs/Release#readme).

### Download

Binaries, installers, and source tarballs are available at
&lt;https://nodejs.org/en/download/&gt;.

#### Current and LTS releases

&lt;https://nodejs.org/download/release/&gt;

The [latest](https://nodejs.org/download/release/latest/) directory is an
alias for the latest Current release. The latest-_codename_ directory is an
alias for the latest release from an LTS line. For example, the
[latest-hydrogen](https://nodejs.org/download/release/latest-hydrogen/)
directory contains the latest Hydrogen (Node.js 18) release.

#### Nightly releases

&lt;https://nodejs.org/download/nightly/&gt;

Each directory and filename includes the version (e.g., `v22.0.0`),
followed by the UTC date (e.g., `20240424` for April 24, 2024),
and the short commit SHA of the HEAD of the release (e.g., `ddd0a9e494`).
For instance, a full directory name might look like `v22.0.0-nightly20240424ddd0a9e494`.

#### API documentation

Documentation for the latest Current release is at &lt;https://nodejs.org/api/&gt;.
Version-specific documentation is available in each release directory in the
_docs_ subdirectory. Version-specific documentation is also at
&lt;https://nodejs.org/download/docs/&gt;.

### Verifying binaries

Download directories contain a `SHASUMS256.txt.asc` file with SHA checksums for the
files and the releaser PGP signature.

You can get a trusted keyring from nodejs/release-keys, e.g. using `curl`:

```bash
curl -fsLo &quot;/path/to/nodejs-keyring.kbx&quot; &quot;https://github.com/nodejs/release-keys/raw/HEAD/gpg/pubring.kbx&quot;
```

Alternatively, you can import the releaser keys in your default keyring, see
[Release keys](#release-keys) for commands to how to do that.

Then, you can verify the files you&#039;ve downloaded locally
(if you&#039;re using your default keyring, pass `--keyring=&quot;${GNUPGHOME:-~/.gnupg}/pubring.kbx&quot;`):

```bash
curl -fsO &quot;https://nodejs.org/dist/${VERSION}/SHASUMS256.txt.asc&quot; \
&amp;&amp; gpgv --keyring=&quot;/path/to/nodejs-keyring.kbx&quot; --output SHASUMS256.txt &lt; SHASUMS256.txt.asc \
&amp;&amp; shasum --check SHASUMS256.txt --ignore-missing
```

## Building Node.js

See [BUILDING.md](BUILDING.md) for instructions on how to build Node.js from
source and a list of supported platforms.

## Security

For information on reporting security vulnerabilities in Node.js, see
[SECURITY.md](./SECURITY.md).

## Contributing to Node.js

* [Contributing to the project][]
* [Working Groups][]
* [Strategic initiatives][]
* [Technical values and prioritization][]

## Current project team members

For information about the governance of the Node.js project, see
[GOVERNANCE.md](./GOVERNANCE.md).

&lt;!-- node-core-utils and find-inactive-tsc.mjs depend on the format of the TSC
     list. If the format changes, those utilities need to be tested and
     updated. --&gt;

### TSC (Technical Steering Committee)

#### TSC voting members

&lt;!--lint disable prohibited-strings--&gt;

* [aduh95](https://github.com/aduh95) -
  **Antoine du Hamel** &lt;&lt;duhamelantoine1995@gmail.com&gt;&gt; (he/him)
* [anonrig](https://github.com/anonrig) -
  **Yagiz Nizipli** &lt;&lt;yagiz@nizipli.com&gt;&gt; (he/him)
* [benjamingr](https://github.com/benjamingr) -
  **Benjamin Gruenbaum** &lt;&lt;benjamingr@gmail.com&gt;&gt;
* [BridgeAR](https://github.com/BridgeAR) -
  **Ruben Bridgewater** &lt;&lt;ruben@bridgewater.de&gt;&gt; (he/him)
* [gireeshpunathil](https://github.com/gireeshpunathil) -
  **Gireesh Punathil** &lt;&lt;gpunathi@in.ibm.com&gt;&gt; (he/him)
* [jasnell](https://github.com/jasnell) -
  **James M Snell** &lt;&lt;jasnell@gmail.com&gt;&gt; (he/him)
* [joyeecheung](https://github.com/joyeecheung) -
  **Joyee Cheung** &lt;&lt;joyeec9h3@gmail.com&gt;&gt; (she/her)
* [legendecas](https://github.com/legendecas) -
  **Chengzhong Wu** &lt;&lt;legendecas@gmail.com&gt;&gt; (he/him)
* [marco-ippolito](https://github.com/marco-ippolito) -
  **Marco Ippolito** &lt;&lt;marcoippolito54@gmail.com&gt;&gt; (he/him)
* [mcollina](https://github.com/mcollina) -
  **Matteo Collina** &lt;&lt;matteo.collina@gmail.com&gt;&gt; (he/him)
* [panva](https://github.com/panva) -
  **Filip Skokan** &lt;&lt;panva.ip@gmail.com&gt;&gt; (he/him)
* [RafaelGSS](https://github.com/RafaelGSS) -
  **Rafael Gonzaga** &lt;&lt;rafael.nunu@hotmail.com&gt;&gt; (he/him)
* [RaisinTen](https://github.com/RaisinTen) -
  **Darshan Sen** &lt;&lt;raisinten@gmail.com&gt;&gt; (he/him)
* [richardlau](https://github.com/richardlau) -
  **Richard Lau** &lt;&lt;richard.lau@ibm.com&gt;&gt;
* [ronag](https://github.com/ronag) -
  **Robert Nagy** &lt;&lt;ronagy@icloud.com&gt;&gt;
* [ruyadorno](https://github.com/ruyadorno) -
  **Ruy Adorno** &lt;&lt;ruy@vlt.sh&gt;&gt; (he/him)
* [ShogunPanda](https://github.com/ShogunPanda) -
  **Paolo Insogna** &lt;&lt;paolo@cowtech.it&gt;&gt; (he/him)
* [targos](https://github.com/targos) -
  **Micha√´l Zasso** &lt;&lt;targos@protonmail.com&gt;&gt; (he/him)
* [tniessen](https://github.com/tniessen) -
  **Tobias Nie√üen** &lt;&lt;tniessen@tnie.de&gt;&gt; (he/him)

#### TSC regular members

* [BethGriggs](https://github.com/BethGriggs) -
  **Beth Griggs** &lt;&lt;bethanyngriggs@gmail.com&gt;&gt; (she/her)
* [bnoordhuis](https://github.com/bnoordhuis) -
  **Ben Noordhuis** &lt;&lt;info@bnoordhuis.nl&gt;&gt;
* [cjihrig](https://github.com/cjihrig) -
  **Colin Ihrig** &lt;&lt;cjihrig@gmail.com&gt;&gt; (he/him)
* [codebytere](https://github.com/codebytere) -
  **Shelley Vohr** &lt;&lt;shelley.vohr@gmail.com&gt;&gt; (she/her)
* [GeoffreyBooth](https://github.com/GeoffreyBooth) -
  **Geoffrey Booth** &lt;&lt;webadmin@geoffreybooth.com&gt;&gt; (he/him)
* [MoLow](https://github.com/MoLow) -
  **Moshe Atlow** &lt;&lt;moshe@atlow.co.il&gt;&gt; (he/him)
* [Trott](https://github.com/Trott) -
  **Rich Trott** &lt;&lt;rtrott@gmail.com&gt;&gt; (he/him)

&lt;details&gt;

&lt;summary&gt;TSC emeriti members&lt;/summary&gt;

#### TSC emeriti members

* [addaleax](https://github.com/addaleax) -
  **Anna Henningsen** &lt;&lt;anna@addaleax.net&gt;&gt; (she/her)
* [apapirovski](https://github.com/apapirovski) -
  **Anatoli Papirovski** &lt;&lt;apapirovski@mac.com&gt;&gt; (he/him)
* [ChALkeR](https://github.com/ChALkeR) -
  **–°–∫–æ–≤–æ—Ä–æ–¥–∞ –ù–∏–∫–∏—Ç–∞ –ê–Ω–¥—Ä–µ–µ–≤–∏—á** &lt;&lt;chalkerx@gmail.com&gt;&gt; (he/him)
* [chrisdickinson](https://github.com/chrisdickinson) -
  **Chris Dickinson** &lt;&lt;christopher.s.dickinson@gmail.com&gt;&gt;
* [danbev](https://github.com/danbev) -
  **Daniel Bevenius** &lt;&lt;daniel.bevenius@gmail.com&gt;&gt; (he/him)
* [danielleadams](https://github.com/danielleadams) -
  **Danielle Adams** &lt;&lt;adamzdanielle@gmail.com&gt;&gt; (she/her)
* [evanlucas](https://github.com/evanlucas) -
  **Evan Lucas** &lt;&lt;evanlucas@me.com&gt;&gt; (he/him)
* [fhinkel](https://github.com/fhinkel) -
  **Franziska Hinkelmann** &lt;&lt;franziska.hinkelmann@gmail.com&gt;&gt; (she/her)
* [Fishrock123](https://github.com/Fishrock123) -
  **Jeremiah Senkpiel** &lt;&lt;fishrock123@rocketmail.com&gt;&gt; (he/they)
* [gabrielschulhof](https://github.com/gabrielschulhof) -
  **Gabriel Schulhof** &lt;&lt;gabrielschulhof@gmail.com&gt;&gt;
* [gibfahn](https://github.com/gibfahn) -
  **Gibson Fahnestock** &lt;&lt;gibfahn@gmail.com&gt;&gt; (he/him)
* [indutny](https://github.com/indutny) -
  **Fedor Indutny** &lt;&lt;fedor@indutny.com&gt;&gt;
* [isaacs](https://github.com/isaacs) -
  **Isaac Z. Schlueter** &lt;&lt;i@izs.me&gt;&gt;
* [joshgav](https://github.com/joshgav) -
  **Josh Gavant** &lt;&lt;josh.gavant@outlook.com&gt;&gt;
* [mhdawson](https://github.com/mhdawson) -
  **Michael Dawson** &lt;&lt;midawson@redhat.com&gt;&gt; (he/him)
* [mmarchini](https://github.com/mmarchini) -
  **Mary Marchini** &lt;&lt;oss@mmarchini.me&gt;&gt; (she/her)
* [mscdex](https://github.com/mscdex) -
  **Brian White** &lt;&lt;mscdex@mscdex.net&gt;&gt;
* [MylesBorins](https://github.com/MylesBorins) -
  **Myles Borins** &lt;&lt;myles.borins@gmail.com&gt;&gt; (he/him)
* [nebrius](https://github.com/nebrius) -
  **Bryan Hughes** &lt;&lt;bryan@nebri.us&gt;&gt;
* [ofrobots](https://github.com/ofrobots) -
  **Ali Ijaz Sheikh** &lt;&lt;ofrobots@google.com&gt;&gt; (he/him)
* [orangemocha](https://github.com/orangemocha) -
  **Alexis Campailla** &lt;&lt;orangemocha@nodejs.org&gt;&gt;
* [piscisaureus](https://github.com/piscisaureus) -
  **Bert Belder** &lt;&lt;bertbelder@gmail.com&gt;&gt;
* [rvagg](https://github.com/rvagg) -
  **Rod Vagg** &lt;&lt;r@va.gg&gt;&gt;
* [sam-github](https://github.com/sam-github) -
  **Sam Roberts** &lt;&lt;vieuxtech@gmail.com&gt;&gt;
* [shigeki](https://github.com/shigeki) -
  **Shigeki Ohtsu** &lt;&lt;ohtsu@ohtsu.org&gt;&gt; (he/him)
* [thefourtheye](https://github.com/thefourtheye) -
  **Sakthipriyan Vairamani** &lt;&lt;thechargingvolcano@gmail.com&gt;&gt; (he/him)
* [TimothyGu](https://github.com/TimothyGu) -
  **Tiancheng &quot;Timothy&quot; Gu** &lt;&lt;timothygu99@gmail.com&gt;&gt; (he/him)
* [trevnorris](https://github.com/trevnorris) -
  **Trevor Norris** &lt;&lt;trev.norris@gmail.com&gt;&gt;

&lt;/details&gt;

&lt;!-- node-core-utils and find-inactive-collaborators.mjs depend on the format
     of the collaborator list. If the format changes, those utilities need to be
     tested and updated. --&gt;

### Collaborators

* [abmusse](https://github.com/abmusse) -
  **Abdirahim Musse** &lt;&lt;abdirahim.musse@ibm.com&gt;&gt;
* [addaleax](https://github.com/addaleax) -
  **Anna Henningsen** &lt;&lt;anna@addaleax.net&gt;&gt; (she/her)
* [Aditi-1400](https://github.com/Aditi-1400) -
  **Aditi Singh** &lt;&lt;aditisingh1400@gmail.com&gt;&gt; (she/her)
* [aduh95](https://github.com/aduh95) -
  **Antoine du Hamel** &lt;&lt;duhamelantoine1995@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/aduh95)
* [anonrig](https://github.com/anonrig) -
  **Yagiz Nizipli** &lt;&lt;yagiz@nizipli.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/anonrig)
* [atlowChemi](https://github.com/atlowChemi) -
  **Chemi Atlow** &lt;&lt;chemi@atlow.co.il&gt;&gt; (he/him)
* [Ayase-252](https://github.com/Ayase-252) -
  **Qingyu Deng** &lt;&lt;i@ayase-lab.com&gt;&gt;
* [bengl](https://github.com/bengl) -
  **Bryan English** &lt;&lt;bryan@bryanenglish.com&gt;&gt; (he/him)
* [benjamingr](https://github.com/benjamingr) -
  **Benjamin Gruenbaum** &lt;&lt;benjamingr@gmail.com&gt;&gt;
* [BethGriggs](https://github.com/BethGriggs) -
  **Beth Griggs** &lt;&lt;bethanyngriggs@gmail.com&gt;&gt; (she/her)
* [bnb](https://github.com/bnb) -
  **Tierney Cyren** &lt;&lt;hello@bnb.im&gt;&gt; (they/them)
* [bnoordhuis](https://github.com/bnoordhuis) -
  **Ben Noordhuis** &lt;&lt;info@bnoordhuis.nl&gt;&gt;
* [BridgeAR](https://github.com/BridgeAR) -
  **Ruben Bridgewater** &lt;&lt;ruben@bridgewater.de&gt;&gt; (he/him)
* [cclauss](https://github.com/cclauss) -
  **Christian Clauss** &lt;&lt;cclauss@me.com&gt;&gt; (he/him)
* [cjihrig](https://github.com/cjihrig) -
  **Colin Ihrig** &lt;&lt;cjihrig@gmail.com&gt;&gt; (he/him)
* [codebytere](https://github.com/codebytere) -
  **Shelley Vohr** &lt;&lt;shelley.vohr@gmail.com&gt;&gt; (she/her)
* [cola119](https://github.com/cola119) -
  **Kohei Ueno** &lt;&lt;kohei.ueno119@gmail.com&gt;&gt; (he/him)
* [daeyeon](https://github.com/daeyeon) -
  **Daeyeon Jeong** &lt;&lt;daeyeon.dev@gmail.com&gt;&gt; (he/him)
* [dario-piotrowicz](https://github.com/dario-piotrowicz) -
  **Dario Piotrowicz** &lt;&lt;dario.piotrowicz@gmail.com&gt;&gt; (he/him)
* [debadree25](https://github.com/debadree25) -
  **Debadree Chatterjee** &lt;&lt;debadree333@gmail.com&gt;&gt; (he/him)
* [deokjinkim](https://github.com/deokjinkim) -
  **Deokjin Kim** &lt;&lt;deokjin81.kim@gmail.com&gt;&gt; (he/him)
* [edsadr](https://github.com/edsadr) -
  **Adrian Estrada** &lt;&lt;edsadr@gmail.com&gt;&gt; (he/him)
* [ErickWendel](https://github.com/ErickWendel) -
  **Erick Wendel** &lt;&lt;erick.workspace@gmail.com&gt;&gt; (he/him)
* [Ethan-Arrowood](https://github.com/Ethan-Arrowood) -
  **Ethan Arrowood** &lt;&lt;ethan@arrowood.dev&gt;&gt; (he/him)
* [F3n67u](https://github.com/F3n67u) -
  **Feng Yu** &lt;&lt;F3n67u@outlook.com&gt;&gt; (he/him)
* [fhinkel](https://github.com/fhinkel) -
  **Franziska Hinkelmann** &lt;&lt;franziska.hinkelmann@gmail.com&gt;&gt; (she/her)
* [Flarna](https://github.com/Flarna) -
  **Gerhard St√∂bich** &lt;&lt;deb2001-github@yahoo.de&gt;&gt; (he/they)
* [gabrielschulhof](https://github.com/gabrielschulhof) -
  **Gabriel Schulhof** &lt;&lt;gabrielschulhof@gmail.com&gt;&gt;
* [geeksilva97](https://github.com/geeksilva97) -
  **Edy Silva** &lt;&lt;edigleyssonsilva@gmail.com&gt;&gt; (he/him)
* [gengjiawen](https://github.com/gengjiawen) -
  **Jiawen Geng** &lt;&lt;technicalcute@gmail.com&gt;&gt;
* [GeoffreyBooth](https://github.com/GeoffreyBooth) -
  **Geoffrey Booth** &lt;&lt;webadmin@geoffreybooth.com&gt;&gt; (he/him)
* [gireeshpunathil](https://github.com/gireeshpunathil) -
  **Gireesh Punathil** &lt;&lt;gpunathi@in.ibm.com&gt;&gt; (he/him)
* [guybedford](https://github.com/guybedford) -
  **Guy Bedford** &lt;&lt;guybedford@gmail.com&gt;&gt; (he/him)
* [H4ad](https://github.com/H4ad) -
  **Vin√≠cius Louren√ßo Claro Cardoso** &lt;&lt;contact@viniciusl.com.br&gt;&gt; (he/him)
* [HarshithaKP](https://github.com/HarshithaKP) -
  **Harshitha K P** &lt;&lt;harshitha014@gmail.com&gt;&gt; (she/her)
* [himself65](https://github.com/himself65) -
  **Zeyu &quot;Alex&quot; Yang** &lt;&lt;himself65@outlook.com&gt;&gt; (he/him)
* [IlyasShabi](https://github.com/IlyasShabi) -
  **Ilyas Shabi** &lt;&lt;ilyasshabi94@gmail.com&gt;&gt; (he/him)
* [islandryu](https://github.com/islandryu) -
  **Ryuhei Shima** &lt;&lt;shimaryuhei@gmail.com&gt;&gt; (he/him)
* [jakecastelli](https://github.com/jakecastelli) -
  **Jake Yuesong Li** &lt;&lt;jake.yuesong@gmail.com&gt;&gt; (he/him)
* [JakobJingleheimer](https://github.com/JakobJingleheimer) -
  **Jacob Smith** &lt;&lt;jacob@frende.me&gt;&gt; (he/him)
* [jasnell](https://github.com/jasnell) -
  **James M Snell** &lt;&lt;jasnell@gmail.com&gt;&gt; (he/him)
* [jazelly](https://github.com/jazelly) -
  **Jason Zhang** &lt;&lt;xzha4350@gmail.com&gt;&gt; (he/him)
* [jkrems](https://github.com/jkrems) -
  **Jan Martin** &lt;&lt;jan.krems@gmail.com&gt;&gt; (he/him)
* [JonasBa](https://github.com/JonasBa) -
  **Jonas Badalic** &lt;&lt;jonas.badalic@gmail.com&gt;&gt; (he/him)
* [joyeecheung](https://github.com/joyeecheung) -
  **Joyee Cheung** &lt;&lt;joyeec9h3@gmail.com&gt;&gt; (she/her)
* [juanarbol](https://github.com/juanarbol) -
  **Juan Jos√© Arboleda** &lt;&lt;soyjuanarbol@gmail.com&gt;&gt; (he/him)
* [JungMinu](https://github.com/JungMinu) -
  **Minwoo Jung** &lt;&lt;nodecorelab@gmail.com&gt;&gt; (he/him)
* [KhafraDev](https://github.com/KhafraDev) -
  **Matthew Aitken** &lt;&lt;maitken033380023@gmail.com&gt;&gt; (he/him)
* [legendecas](https://github.com/legendecas) -
  **Chengzhong Wu** &lt;&lt;legendecas@gmail.com&gt;&gt; (he/him)
* [lemire](https://github.com/lemire) -
  **Daniel Lemire** &lt;&lt;daniel@lemire.me&gt;&gt;
* [LiviaMedeiros](https://github.com/LiviaMedeiros) -
  **LiviaMedeiros** &lt;&lt;livia@cirno.name&gt;&gt;
* [ljharb](https://github.com/ljharb) -
  **Jordan Harband** &lt;&lt;ljharb@gmail.com&gt;&gt;
* [lpinca](https://github.com/lpinca) -
  **Luigi Pinca** &lt;&lt;luigipinca@gmail.com&gt;&gt; (he/him)
* [lukekarrys](https://github.com/lukekarrys) -
  **Luke Karrys** &lt;&lt;luke@lukekarrys.com&gt;&gt; (he/him)
* [Lxxyx](https://github.com/Lxxyx) -
  **Zijian Liu** &lt;&lt;lxxyxzj@gmail.com&gt;&gt; (he/him)
* [marco-ippolito](https://github.com/marco-ippolito) -
  **Marco Ippolito** &lt;&lt;marcoippolito54@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/marco-ippolito)
* [marsonya](https://github.com/marsonya) -
  **Akhil Marsonya** &lt;&lt;akhil.marsonya27@gmail.com&gt;&gt; (he/him)
* [MattiasBuelens](https://github.com/MattiasBuelens) -
  **Mattias Buelens** &lt;&lt;mattias@buelens.com&gt;&gt; (he/him)
* [mcollina](https://github.com/mcollina) -
  **Matteo Collina** &lt;&lt;matteo.collina@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/mcollina)
* [meixg](https://github.com/meixg) -
  **Xuguang Mei** &lt;&lt;meixuguang@gmail.com&gt;&gt; (he/him)
* [mhdawson](https://github.com/mhdawson) -
  **Michael Dawson** &lt;&lt;midawson@redhat.com&gt;&gt; (he/him)
* [MoLow](https://github.com/MoLow) -
  **Moshe Atlow** &lt;&lt;moshe@atlow.co.il&gt;&gt; (he/him)
* [MrJithil](https://github.com/MrJithil) -
  **Jithil P Ponnan** &lt;&lt;jithil@outlook.com&gt;&gt; (he/him)
* [ovflowd](https://github.com/ovflowd) -
  **Claudio Wunder** &lt;&lt;cwunder@gnome.org&gt;&gt; (he/they)
* [panva](https://github.com/panva) -
  **Filip Skokan** &lt;&lt;panva.ip@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/panva)
* [pimterry](https://github.com/pimterry) -
  **Tim Perry** &lt;&lt;pimterry@gmail.com&gt;&gt; (he/him)
* [pmarchini](https://github.com/pmarchini) -
  **Pietro Marchini** &lt;&lt;pietro.marchini94@gmail.com&gt;&gt; (he/him)
* [puskin](https://github.com/puskin) -
  **Giovanni Bucci** &lt;&lt;github@puskin.it&gt;&gt; (he/him)
* [Qard](https://github.com/Qard) -
  **Stephen Belanger** &lt;&lt;admin@stephenbelanger.com&gt;&gt; (he/him)
* [RafaelGSS](https://github.com/RafaelGSS) -
  **Rafael Gonzaga** &lt;&lt;rafael.nunu@hotmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/RafaelGSS)
* [RaisinTen](https://github.com/RaisinTen) -
  **Darshan Sen** &lt;&lt;raisinten@gmail.com&gt;&gt; (he/him) - [Support me](https://github.com/sponsors/RaisinTen)
* [richardlau](https://github.com/richardlau) -
  **Richard Lau** &lt;&lt;richard.lau@ibm.com&gt;&gt;
* [rluvaton](https://github.com/rluvaton) -
  **Raz Luvaton** &lt;&lt;rluvaton@gmail.com&gt;&gt; (he/him)
* [ronag](https://github.com/ronag) -
  **Robert Nagy** &lt;&lt;ronagy@icloud.com&gt;&gt;
* [ruyadorno](https://github.com/ruyadorno) -
  **Ruy Adorno** &lt;&lt;ruy@vlt.sh&gt;&gt; (he/him)
* [santigimeno](https://github.com/santigimeno) -
  **Santiago Gimeno** &lt;&lt;santiago.gimeno@gmail.com&gt;&gt;
* [ShogunPanda](https://github.com/ShogunPanda) -
  **Paolo Insogna** &lt;&lt;paolo@cowtech.it&gt;&gt; (he/him)
* [srl295](https://github.com/srl295) -
  **Steven R Loomis** &lt;&lt;srl295@gmail.com&gt;&gt;
* [StefanStojanovic](https://github.com/StefanStojanovic) -
  **Stefan Stojanovic** &lt;&lt;stefan.stojanovic@janeasystems.com&gt;&gt; (he/him)
* [sxa](https://github.com/sxa) -
  **Stewart X Addison** &lt;&lt;sxa@redhat.com&gt;&gt; (he/him)
* [targos](https://github.com/targos) -
  **Micha√´l Zasso** &lt;&lt;targos@protonmail.com&gt;&gt; (he/him)
* [theanarkh](https://github.com/theanarkh) -
  **theanarkh** &lt;&lt;theratliter@gmail.com&gt;&gt; (he/him)
* [tniessen](https://github.com/tniessen) -
  **Tobias Nie√üen** &lt;&lt;tniessen@tnie.de&gt;&gt; (he/him)
* [trivikr](https://github.com/trivikr) -
  **Trivikram Kamat** &lt;&lt;trivikr.dev@gmail.com&gt;&gt;
* [Trott](https://github.com/Trott) -
  **Rich Trott** &lt;&lt;rtrott@gmail.com&gt;&gt; (he/him)
* [UlisesGascon](https://github.com/Ulis

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>