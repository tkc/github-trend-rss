<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Thu, 12 Jun 2025 00:04:48 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[pedroslopez/whatsapp-web.js]]></title>
            <link>https://github.com/pedroslopez/whatsapp-web.js</link>
            <guid>https://github.com/pedroslopez/whatsapp-web.js</guid>
            <pubDate>Thu, 12 Jun 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[A WhatsApp client library for NodeJS that connects through the WhatsApp Web browser app]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pedroslopez/whatsapp-web.js">pedroslopez/whatsapp-web.js</a></h1>
            <p>A WhatsApp client library for NodeJS that connects through the WhatsApp Web browser app</p>
            <p>Language: JavaScript</p>
            <p>Stars: 17,024</p>
            <p>Forks: 4,143</p>
            <p>Stars today: 26 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
    &lt;br /&gt;
    &lt;p&gt;
        &lt;a href=&quot;https://wwebjs.dev&quot;&gt;&lt;img src=&quot;https://github.com/wwebjs/logos/blob/main/4_Full%20Logo%20Lockup_Small/small_banner_blue.png?raw=true&quot; title=&quot;whatsapp-web.js&quot; alt=&quot;WWebJS Website&quot; width=&quot;500&quot; /&gt;&lt;/a&gt;
    &lt;/p&gt;
    &lt;br /&gt;
    &lt;p&gt;
		&lt;a href=&quot;https://www.npmjs.com/package/whatsapp-web.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/whatsapp-web.js.svg&quot; alt=&quot;npm&quot; /&gt;&lt;/a&gt;
        &lt;a href=&quot;https://depfu.com/github/pedroslopez/whatsapp-web.js?project_id=9765&quot;&gt;&lt;img src=&quot;https://badges.depfu.com/badges/4a65a0de96ece65fdf39e294e0c8dcba/overview.svg&quot; alt=&quot;Depfu&quot; /&gt;&lt;/a&gt;
        &lt;img src=&quot;https://img.shields.io/badge/WhatsApp_Web-2.3000.1017054665-brightgreen.svg&quot; alt=&quot;WhatsApp_Web 2.2346.52&quot; /&gt;
        &lt;a href=&quot;https://discord.gg/H7DqQs4&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/698610475432411196.svg?logo=discord&quot; alt=&quot;Discord server&quot; /&gt;&lt;/a&gt;
	&lt;/p&gt;
    &lt;br /&gt;
&lt;/div&gt;

## About
**A WhatsApp API client that connects through the WhatsApp Web browser app**

The library works by launching the WhatsApp Web browser application and managing it using Puppeteer to create an instance of WhatsApp Web, thereby mitigating the risk of being blocked. The WhatsApp API client connects through the WhatsApp Web browser app, accessing its internal functions. This grants you access to nearly all the features available on WhatsApp Web, enabling dynamic handling similar to any other Node.js application.

&gt; [!IMPORTANT]
&gt; **It is not guaranteed you will not be blocked by using this method. WhatsApp does not allow bots or unofficial clients on their platform, so this shouldn&#039;t be considered totally safe.**

## Links

* [Website][website]
* [Guide][guide] ([source][guide-source]) _(work in progress)_
* [Documentation][documentation] ([source][documentation-source])
* [WWebJS Discord][discord]
* [GitHub][gitHub]
* [npm][npm]

## Installation

The module is now available on npm! `npm i whatsapp-web.js`

&gt; [!NOTE]
&gt; **Node ``v18+`` is required.**

## QUICK STEPS TO UPGRADE NODE

### Windows

#### Manual
Just get the latest LTS from the [official node website][nodejs].

#### npm
```powershell
sudo npm install -g n
sudo n stable
```

#### Choco
```powershell
choco install nodejs-lts
```

#### Winget
```powershell
winget install OpenJS.NodeJS.LTS
```

### Ubuntu / Debian
```bash
curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash - &amp;&amp;\
sudo apt-get install -y nodejs
```

## Example usage

```js
const { Client } = require(&#039;whatsapp-web.js&#039;);

const client = new Client();

client.on(&#039;qr&#039;, (qr) =&gt; {
    // Generate and scan this code with your phone
    console.log(&#039;QR RECEIVED&#039;, qr);
});

client.on(&#039;ready&#039;, () =&gt; {
    console.log(&#039;Client is ready!&#039;);
});

client.on(&#039;message&#039;, msg =&gt; {
    if (msg.body == &#039;!ping&#039;) {
        msg.reply(&#039;pong&#039;);
    }
});

client.initialize();
```

Take a look at [example.js][examples] for another examples with additional use cases.  
For further details on saving and restoring sessions, explore the provided [Authentication Strategies][auth-strategies].


## Supported features

| Feature  | Status |
| ------------- | ------------- |
| Multi Device  | ‚úÖ  |
| Send messages  | ‚úÖ  |
| Receive messages  | ‚úÖ  |
| Send media (images/audio/documents)  | ‚úÖ  |
| Send media (video)  | ‚úÖ [(requires Google Chrome)][google-chrome]  |
| Send stickers | ‚úÖ |
| Receive media (images/audio/video/documents)  | ‚úÖ  |
| Send contact cards | ‚úÖ |
| Send location | ‚úÖ |
| Send buttons | ‚ùå  [(DEPRECATED)][deprecated-video] |
| Send lists | ‚ùå  [(DEPRECATED)][deprecated-video] |
| Receive location | ‚úÖ | 
| Message replies | ‚úÖ |
| Join groups by invite  | ‚úÖ |
| Get invite for group  | ‚úÖ |
| Modify group info (subject, description)  | ‚úÖ  |
| Modify group settings (send messages, edit info)  | ‚úÖ  |
| Add group participants  | ‚úÖ  |
| Kick group participants  | ‚úÖ  |
| Promote/demote group participants | ‚úÖ |
| Mention users | ‚úÖ |
| Mention groups | ‚úÖ |
| Mute/unmute chats | ‚úÖ |
| Block/unblock contacts | ‚úÖ |
| Get contact info | ‚úÖ |
| Get profile pictures | ‚úÖ |
| Set user status message | ‚úÖ |
| React to messages | ‚úÖ |
| Create polls | ‚úÖ |
| Channels | ‚úÖ |
| Vote in polls | üîú |
| Communities | üîú |

Something missing? Make an issue and let us know!

## Contributing

Feel free to open pull requests; we welcome contributions! However, for significant changes, it&#039;s best to open an issue beforehand. Make sure to review our [contribution guidelines][contributing] before creating a pull request. Before creating your own issue or pull request, always check to see if one already exists!

## Supporting the project

You can support the maintainer of this project through the links below

- [Support via GitHub Sponsors][gitHub-sponsors]
- [Support via PayPal][support-payPal]
- [Sign up for DigitalOcean][digitalocean] and get $200 in credit when you sign up (Referral)

## Disclaimer

This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates. The official WhatsApp website can be found at [whatsapp.com][whatsapp]. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners. Also it is not guaranteed you will not be blocked by using this method. WhatsApp does not allow bots or unofficial clients on their platform, so this shouldn&#039;t be considered totally safe.

## License

Copyright 2019 Pedro S Lopez  

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);  
you may not use this project except in compliance with the License.  
You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.  


[website]: https://wwebjs.dev
[guide]: https://guide.wwebjs.dev/guide
[guide-source]: https://github.com/wwebjs/wwebjs.dev/tree/main
[documentation]: https://docs.wwebjs.dev/
[documentation-source]: https://github.com/pedroslopez/whatsapp-web.js/tree/main/docs
[discord]: https://discord.gg/H7DqQs4
[gitHub]: https://github.com/pedroslopez/whatsapp-web.js
[npm]: https://npmjs.org/package/whatsapp-web.js
[nodejs]: https://nodejs.org/en/download/
[examples]: https://github.com/pedroslopez/whatsapp-web.js/blob/master/example.js
[auth-strategies]: https://wwebjs.dev/guide/creating-your-bot/authentication.html
[google-chrome]: https://wwebjs.dev/guide/creating-your-bot/handling-attachments.html#caveat-for-sending-videos-and-gifs
[deprecated-video]: https://www.youtube.com/watch?v=hv1R1rLeVVE
[gitHub-sponsors]: https://github.com/sponsors/pedroslopez
[support-payPal]: https://www.paypal.me/psla/
[digitalocean]: https://m.do.co/c/73f906a36ed4
[contributing]: https://github.com/pedroslopez/whatsapp-web.js/blob/main/CODE_OF_CONDUCT.md
[whatsapp]: https://whatsapp.com
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[alexlenail/NN-SVG]]></title>
            <link>https://github.com/alexlenail/NN-SVG</link>
            <guid>https://github.com/alexlenail/NN-SVG</guid>
            <pubDate>Thu, 12 Jun 2025 00:04:47 GMT</pubDate>
            <description><![CDATA[Publication-ready NN-architecture schematics.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/alexlenail/NN-SVG">alexlenail/NN-SVG</a></h1>
            <p>Publication-ready NN-architecture schematics.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,533</p>
            <p>Forks: 739</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre># [NN-SVG](https://alexlenail.me/NN-SVG/)

[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![status](https://joss.theoj.org/papers/52b511ab107595a805107aa4ad70161d/status.svg)](https://joss.theoj.org/papers/52b511ab107595a805107aa4ad70161d)
| [Docs](https://github.com/zfrenchee/NN-SVG/wiki) | [Contributing](https://github.com/zfrenchee/NN-SVG/wiki/Contributing)

Illustrations of Neural Network architectures are often time-consuming to produce, and machine learning researchers all too often find themselves constructing these diagrams from scratch by hand.

NN-SVG is a tool for creating Neural Network (NN) architecture drawings parametrically rather than manually. It also provides the ability to export those drawings to Scalable Vector Graphics (SVG) files, suitable for inclusion in academic papers or web pages.

The tool provides the ability to generate figures of three kinds: classic Fully-Connected Neural Network (FCNN) figures, Convolutional Neural Network (CNN) figures of the sort introduced in [the LeNet paper](http://yann.lecun.com/exdb/publis/pdf/lecun-01a.pdf), and Deep Neural Network figures following the style introduced in [the AlexNet paper](https://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf). The former two are accomplished using the [D3 javascript library](https://d3js.org/) and the latter with the javascript library [Three.js](https://threejs.org/). NN-SVG provides the ability to style the figure to the user&#039;s liking via many size, color, and layout parameters.

I hope this tool will save machine learning researchers time, and I hope this software might also serve as a pedagogical tool in some contexts.

&lt;img src=&quot;./example.svg&quot;&gt;


### Citation

&gt; LeNail, (2019). NN-SVG: Publication-Ready Neural Network Architecture Schematics. &lt;br&gt;
&gt; Journal of Open Source Software, 4(33), 747, https://doi.org/10.21105/joss.00747

### Related

- [vdumoulin/conv_arithmetic](https://github.com/vdumoulin/conv_arithmetic)
- [TensorSpace](https://github.com/tensorspace-team/tensorspace)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[eyaltoledano/claude-task-master]]></title>
            <link>https://github.com/eyaltoledano/claude-task-master</link>
            <guid>https://github.com/eyaltoledano/claude-task-master</guid>
            <pubDate>Thu, 12 Jun 2025 00:04:46 GMT</pubDate>
            <description><![CDATA[An AI-powered task-management system you can drop into Cursor, Lovable, Windsurf, Roo, and others.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/eyaltoledano/claude-task-master">eyaltoledano/claude-task-master</a></h1>
            <p>An AI-powered task-management system you can drop into Cursor, Lovable, Windsurf, Roo, and others.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 14,118</p>
            <p>Forks: 1,448</p>
            <p>Stars today: 343 stars today</p>
            <h2>README</h2><pre># Task Master [![GitHub stars](https://img.shields.io/github/stars/eyaltoledano/claude-task-master?style=social)](https://github.com/eyaltoledano/claude-task-master/stargazers)

[![CI](https://github.com/eyaltoledano/claude-task-master/actions/workflows/ci.yml/badge.svg)](https://github.com/eyaltoledano/claude-task-master/actions/workflows/ci.yml) [![npm version](https://badge.fury.io/js/task-master-ai.svg)](https://badge.fury.io/js/task-master-ai) [![Discord](https://dcbadge.limes.pink/api/server/https://discord.gg/taskmasterai?style=flat)](https://discord.gg/taskmasterai) [![License: MIT with Commons Clause](https://img.shields.io/badge/license-MIT%20with%20Commons%20Clause-blue.svg)](LICENSE)

[![NPM Downloads](https://img.shields.io/npm/d18m/task-master-ai?style=flat)](https://www.npmjs.com/package/task-master-ai) [![NPM Downloads](https://img.shields.io/npm/dm/task-master-ai?style=flat)](https://www.npmjs.com/package/task-master-ai) [![NPM Downloads](https://img.shields.io/npm/dw/task-master-ai?style=flat)](https://www.npmjs.com/package/task-master-ai)

## By [@eyaltoledano](https://x.com/eyaltoledano), [@RalphEcom](https://x.com/RalphEcom) &amp; [@jasonzhou1993](https://x.com/jasonzhou1993)

[![Twitter Follow](https://img.shields.io/twitter/follow/eyaltoledano)](https://x.com/eyaltoledano)
[![Twitter Follow](https://img.shields.io/twitter/follow/RalphEcom)](https://x.com/RalphEcom)
[![Twitter Follow](https://img.shields.io/twitter/follow/jasonzhou1993)](https://x.com/jasonzhou1993)

A task management system for AI-driven development with Claude, designed to work seamlessly with Cursor AI.

## Documentation

For more detailed information, check out the documentation in the `docs` directory:

- [Configuration Guide](docs/configuration.md) - Set up environment variables and customize Task Master
- [Tutorial](docs/tutorial.md) - Step-by-step guide to getting started with Task Master
- [Command Reference](docs/command-reference.md) - Complete list of all available commands
- [Task Structure](docs/task-structure.md) - Understanding the task format and features
- [Example Interactions](docs/examples.md) - Common Cursor AI interaction examples
- [Migration Guide](docs/migration-guide.md) - Guide to migrating to the new project structure

##### Quick Install for Cursor 1.0+ (One-Click)

[&lt;img src=&quot;https://cursor.com/deeplink/mcp-install-dark.png&quot; alt=&quot;Add Task Master MCP server to Cursor&quot; style=&quot;max-height: 26px;&quot;&gt;](cursor://anysphere.cursor-deeplink/mcp/install?name=taskmaster-ai&amp;config=eyJjb21tYW5kIjoibnB4IiwiYXJncyI6WyIteSIsIi0tcGFja2FnZT10YXNrLW1hc3Rlci1haSIsInRhc2stbWFzdGVyLWFpIl0sImVudiI6eyJBTlRIUk9QSUNfQVBJX0tFWSI6IllPVVJfQU5USFJPUElDX0FQSV9LRVlfSEVSRSIsIlBFUlBMRVhJVFlfQVBJX0tFWSI6IllPVVJfUEVSUExFWElUWV9BUElfS0VZX0hFUkUiLCJPUEVOQUlfQVBJX0tFWSI6IllPVVJfT1BFTkFJX0tFWV9IRVJFIiwiR09PR0xFX0FQSV9LRVkiOiJZT1VSX0dPT0dMRV9LRVlfSEVSRSIsIk1JU1RSQUxfQVBJX0tFWSI6IllPVVJfTUlTVFJBTF9LRVlfSEVSRSIsIk9QRU5ST1VURVJfQVBJX0tFWSI6IllPVVJfT1BFTlJPVVRFUl9LRVlfSEVSRSIsIlhBSV9BUElfS0VZIjoiWU9VUl9YQUlfS0VZX0hFUkUiLCJBWlVSRV9PUEVOQUJFX0FQSV9LRVkiOiJZT1VSX0FaVVJFX0tFWV9IRVJFIiwiT0xMQU1BX0FQSV9LRVkiOiJZT1VSX09MTEFNQV9BUElfS0VZX0hFUkUifX0%3D)

&gt; **Note:** After clicking the install button, you&#039;ll still need to add your API keys to the configuration. The button installs the MCP server with placeholder keys that you&#039;ll need to replace with your actual API keys.

## Requirements

Taskmaster utilizes AI across several commands, and those require a separate API key. You can use a variety of models from different AI providers provided you add your API keys. For example, if you want to use Claude 3.7, you&#039;ll need an Anthropic API key.

You can define 3 types of models to be used: the main model, the research model, and the fallback model (in case either the main or research fail). Whatever model you use, its provider API key must be present in either mcp.json or .env.

At least one (1) of the following is required:

- Anthropic API key (Claude API)
- OpenAI API key
- Google Gemini API key
- Perplexity API key (for research model)
- xAI API Key (for research or main model)
- OpenRouter API Key (for research or main model)

Using the research model is optional but highly recommended. You will need at least ONE API key. Adding all API keys enables you to seamlessly switch between model providers at will.

## Quick Start

### Option 1: MCP (Recommended)

MCP (Model Control Protocol) lets you run Task Master directly from your editor.

#### 1. Add your MCP config at the following path depending on your editor

| Editor       | Scope   | Linux/macOS Path                      | Windows Path                                      | Key          |
| ------------ | ------- | ------------------------------------- | ------------------------------------------------- | ------------ |
| **Cursor**   | Global  | `~/.cursor/mcp.json`                  | `%USERPROFILE%\.cursor\mcp.json`                  | `mcpServers` |
|              | Project | `&lt;project_folder&gt;/.cursor/mcp.json`   | `&lt;project_folder&gt;\.cursor\mcp.json`               | `mcpServers` |
| **Windsurf** | Global  | `~/.codeium/windsurf/mcp_config.json` | `%USERPROFILE%\.codeium\windsurf\mcp_config.json` | `mcpServers` |
| **VS Code**  | Project | `&lt;project_folder&gt;/.vscode/mcp.json`   | `&lt;project_folder&gt;\.vscode\mcp.json`               | `servers`    |

##### Manual Configuration

###### Cursor &amp; Windsurf (`mcpServers`)

```json
{
  &quot;mcpServers&quot;: {
    &quot;taskmaster-ai&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;--package=task-master-ai&quot;, &quot;task-master-ai&quot;],
      &quot;env&quot;: {
        &quot;ANTHROPIC_API_KEY&quot;: &quot;YOUR_ANTHROPIC_API_KEY_HERE&quot;,
        &quot;PERPLEXITY_API_KEY&quot;: &quot;YOUR_PERPLEXITY_API_KEY_HERE&quot;,
        &quot;OPENAI_API_KEY&quot;: &quot;YOUR_OPENAI_KEY_HERE&quot;,
        &quot;GOOGLE_API_KEY&quot;: &quot;YOUR_GOOGLE_KEY_HERE&quot;,
        &quot;MISTRAL_API_KEY&quot;: &quot;YOUR_MISTRAL_KEY_HERE&quot;,
        &quot;OPENROUTER_API_KEY&quot;: &quot;YOUR_OPENROUTER_KEY_HERE&quot;,
        &quot;XAI_API_KEY&quot;: &quot;YOUR_XAI_KEY_HERE&quot;,
        &quot;AZURE_OPENAI_API_KEY&quot;: &quot;YOUR_AZURE_KEY_HERE&quot;,
        &quot;OLLAMA_API_KEY&quot;: &quot;YOUR_OLLAMA_API_KEY_HERE&quot;
      }
    }
  }
}
```

&gt; üîë Replace `YOUR_‚Ä¶_KEY_HERE` with your real API keys. You can remove keys you don&#039;t use.

###### VS‚ÄØCode (`servers` + `type`)

```json
{
  &quot;servers&quot;: {
    &quot;taskmaster-ai&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;--package=task-master-ai&quot;, &quot;task-master-ai&quot;],
      &quot;env&quot;: {
        &quot;ANTHROPIC_API_KEY&quot;: &quot;YOUR_ANTHROPIC_API_KEY_HERE&quot;,
        &quot;PERPLEXITY_API_KEY&quot;: &quot;YOUR_PERPLEXITY_API_KEY_HERE&quot;,
        &quot;OPENAI_API_KEY&quot;: &quot;YOUR_OPENAI_KEY_HERE&quot;,
        &quot;GOOGLE_API_KEY&quot;: &quot;YOUR_GOOGLE_KEY_HERE&quot;,
        &quot;MISTRAL_API_KEY&quot;: &quot;YOUR_MISTRAL_KEY_HERE&quot;,
        &quot;OPENROUTER_API_KEY&quot;: &quot;YOUR_OPENROUTER_KEY_HERE&quot;,
        &quot;XAI_API_KEY&quot;: &quot;YOUR_XAI_KEY_HERE&quot;,
        &quot;AZURE_OPENAI_API_KEY&quot;: &quot;YOUR_AZURE_KEY_HERE&quot;
      },
      &quot;type&quot;: &quot;stdio&quot;
    }
  }
}
```

&gt; üîë Replace `YOUR_‚Ä¶_KEY_HERE` with your real API keys. You can remove keys you don&#039;t use.

#### 2. (Cursor-only) Enable Taskmaster MCP

Open Cursor Settings (Ctrl+Shift+J) ‚û° Click on MCP tab on the left ‚û° Enable task-master-ai with the toggle

#### 3. (Optional) Configure the models you want to use

In your editor&#039;s AI chat pane, say:

```txt
Change the main, research and fallback models to &lt;model_name&gt;, &lt;model_name&gt; and &lt;model_name&gt; respectively.
```

[Table of available models](docs/models.md)

#### 4. Initialize Task Master

In your editor&#039;s AI chat pane, say:

```txt
Initialize taskmaster-ai in my project
```

#### 5. Make sure you have a PRD (Recommended)

For **new projects**: Create your PRD at `.taskmaster/docs/prd.txt`  
For **existing projects**: You can use `scripts/prd.txt` or migrate with `task-master migrate`

An example PRD template is available after initialization in `.taskmaster/templates/example_prd.txt`.

&gt; [!NOTE]
&gt; While a PRD is recommended for complex projects, you can always create individual tasks by asking &quot;Can you help me implement [description of what you want to do]?&quot; in chat.

**Always start with a detailed PRD.**

The more detailed your PRD, the better the generated tasks will be.

#### 6. Common Commands

Use your AI assistant to:

- Parse requirements: `Can you parse my PRD at scripts/prd.txt?`
- Plan next step: `What&#039;s the next task I should work on?`
- Implement a task: `Can you help me implement task 3?`
- Expand a task: `Can you help me expand task 4?`

[More examples on how to use Task Master in chat](docs/examples.md)

### Option 2: Using Command Line

#### Installation

```bash
# Install globally
npm install -g task-master-ai

# OR install locally within your project
npm install task-master-ai
```

#### Initialize a new project

```bash
# If installed globally
task-master init

# If installed locally
npx task-master init
```

This will prompt you for project details and set up a new project with the necessary files and structure.

#### Common Commands

```bash
# Initialize a new project
task-master init

# Parse a PRD and generate tasks
task-master parse-prd your-prd.txt

# List all tasks
task-master list

# Show the next task to work on
task-master next

# Generate task files
task-master generate
```

## Troubleshooting

### If `task-master init` doesn&#039;t respond

Try running it with Node directly:

```bash
node node_modules/claude-task-master/scripts/init.js
```

Or clone the repository and run:

```bash
git clone https://github.com/eyaltoledano/claude-task-master.git
cd claude-task-master
node scripts/init.js
```

## Contributors

&lt;a href=&quot;https://github.com/eyaltoledano/claude-task-master/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=eyaltoledano/claude-task-master&quot; alt=&quot;Task Master project contributors&quot; /&gt;
&lt;/a&gt;

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=eyaltoledano/claude-task-master&amp;type=Timeline)](https://www.star-history.com/#eyaltoledano/claude-task-master&amp;Timeline)

## Licensing

Task Master is licensed under the MIT License with Commons Clause. This means you can:

‚úÖ **Allowed**:

- Use Task Master for any purpose (personal, commercial, academic)
- Modify the code
- Distribute copies
- Create and sell products built using Task Master

‚ùå **Not Allowed**:

- Sell Task Master itself
- Offer Task Master as a hosted service
- Create competing products based on Task Master

See the [LICENSE](LICENSE) file for the complete license text and [licensing details](docs/licensing.md) for more information.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[juliangarnier/anime]]></title>
            <link>https://github.com/juliangarnier/anime</link>
            <guid>https://github.com/juliangarnier/anime</guid>
            <pubDate>Thu, 12 Jun 2025 00:04:45 GMT</pubDate>
            <description><![CDATA[JavaScript animation engine]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/juliangarnier/anime">juliangarnier/anime</a></h1>
            <p>JavaScript animation engine</p>
            <p>Language: JavaScript</p>
            <p>Stars: 61,429</p>
            <p>Forks: 4,104</p>
            <p>Stars today: 78 stars today</p>
            <h2>README</h2><pre># Anime.js

&lt;p align=&quot;center&quot;&gt;
  &lt;picture align=&quot;center&quot;&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./assets/images/animejs-v4-logo-animation-dark.gif&quot;&gt;
    &lt;img align=&quot;center&quot; alt=&quot;Anime.js V4 logo animation&quot; src=&quot;./assets/images/animejs-v4-logo-animation.gif&quot; width=&quot;560&quot;&gt;
  &lt;/picture&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;strong&gt;
  &lt;em&gt;Anime.js&lt;/em&gt; is a fast, multipurpose and lightweight JavaScript animation library with a simple, yet powerful API.&lt;br&gt;
  It works with CSS properties, SVG, DOM attributes and JavaScript Objects.
  &lt;/strong&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img alt=&quot;NPM Downloads&quot; src=&quot;https://img.shields.io/npm/dm/animejs?style=flat-square&amp;logo=npm&quot;&gt;
  &lt;img alt=&quot;jsDelivr hits (npm)&quot; src=&quot;https://img.shields.io/jsdelivr/npm/hm/animejs?style=flat-square&amp;logo=jsdeliver&quot;&gt;
  &lt;img alt=&quot;GitHub Sponsors&quot; src=&quot;https://img.shields.io/github/sponsors/juliangarnier?style=flat-square&amp;logo=github&quot;&gt;
&lt;/p&gt;

## Usage

Anime.js V4 works by importing ES modules like so:

&lt;table&gt;
&lt;tr&gt;
  &lt;td&gt;

```javascript
import {
  animate,
  stagger,
} from &#039;animejs&#039;;

animate(&#039;.square&#039;, {
  x: 320,
  rotate: { from: -180 },
  duration: 1250,
  delay: stagger(65, { from: &#039;center&#039; }),
  ease: &#039;inOutQuint&#039;,
  loop: true,
  alternate: true
});
```

  &lt;/td&gt;
  &lt;td&gt;
    &lt;img align=&quot;center&quot; alt=&quot;Anime.js code example&quot; src=&quot;./assets/images/usage-example-result.gif&quot;&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

## V4 Documentation

The full documentation is available [here](https://animejs.com/documentation).

## V3 Migration guide

You can find the v3 to v4 migration guide [here](https://github.com/juliangarnier/anime/wiki/Migrating-from-v3-to-v4).

## NPM development scripts

First, run `npm i` to install all the necessary packages.
Then, execute the following scripts with `npm run &lt;script&gt;`.

| script | action |
| ------ | ------ |
| `dev` | Watch any changes in `src/` and compiles the esm version to `lib/anime.esm.js` |
| `dev-types` | Same as `dev`, but also run TypeScript and generate the `types/index.d.ts` file |
| `build` | Generate types definition and compiles ESM / UMD / IIFE versions to `lib/` |
| `test-browser` | Start a local server and start all browser related tests |
| `test-node` | Start all Node related tests |
| `open-examples` | Start a local server to browse the examples locally |

## Our sponsors

Anime.js is 100% free and is only made possible with the help of our sponsors.
Help the project become sustainable by sponsoring us on &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/sponsors/juliangarnier&quot;&gt;GitHub Sponsors&lt;/a&gt;.

### Platinum sponsors

&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a target=&quot;_blank&quot; href=&quot;https://huly.io/?ref=animejs&quot;&gt;
        &lt;picture&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./assets/sponsors/huly-logomark.svg&quot;&gt;
          &lt;img align=&quot;center&quot; src=&quot;./assets/sponsors/huly-logomark-dark.svg&quot; width=&quot;128&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a target=&quot;_blank&quot; href=&quot;https://ice.io/?ref=animejs&quot;&gt;
        &lt;picture&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./assets/sponsors/ice-open-network-logomark.svg&quot;&gt;
          &lt;img align=&quot;center&quot; src=&quot;./assets/sponsors/ice-open-network-logomark-dark.svg&quot; width=&quot;128&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/sponsors/juliangarnier&quot;&gt;
        &lt;picture&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./assets/sponsors/placeholder.svg&quot;&gt;
          &lt;img align=&quot;center&quot; src=&quot;./assets/sponsors/placeholder-dark.svg&quot; width=&quot;128&quot;&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;a target=&quot;_blank&quot; href=&quot;https://huly.io/?ref=animejs&quot;&gt;Huly&lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;a target=&quot;_blank&quot; href=&quot;https://ice.io/?ref=animejs&quot;&gt;Ice Open Network&lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;
      &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/sponsors/juliangarnier&quot;&gt;Your logo here&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

¬© [Julian Garnier](http://juliangarnier.com) | [MIT License](LICENSE.md)</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[swagger-api/swagger-ui]]></title>
            <link>https://github.com/swagger-api/swagger-ui</link>
            <guid>https://github.com/swagger-api/swagger-ui</guid>
            <pubDate>Thu, 12 Jun 2025 00:04:44 GMT</pubDate>
            <description><![CDATA[Swagger UI is a collection of HTML, JavaScript, and CSS assets that dynamically generate beautiful documentation from a Swagger-compliant API.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/swagger-api/swagger-ui">swagger-api/swagger-ui</a></h1>
            <p>Swagger UI is a collection of HTML, JavaScript, and CSS assets that dynamically generate beautiful documentation from a Swagger-compliant API.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 27,436</p>
            <p>Forks: 9,103</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre># &lt;img src=&quot;https://raw.githubusercontent.com/swagger-api/swagger.io/wordpress/images/assets/SWU-logo-clr.png&quot; width=&quot;300&quot;&gt;

[![NPM version](https://badge.fury.io/js/swagger-ui.svg)](http://badge.fury.io/js/swagger-ui)
[![Build Status](https://jenkins.swagger.io/view/OSS%20-%20JavaScript/job/oss-swagger-ui-master/badge/icon?subject=jenkins%20build)](https://jenkins.swagger.io/view/OSS%20-%20JavaScript/job/oss-swagger-ui-master/)
[![npm audit](https://jenkins.swagger.io/buildStatus/icon?job=oss-swagger-ui-security-audit&amp;subject=npm%20audit)](https://jenkins.swagger.io/job/oss-swagger-ui-security-audit/lastBuild/console)
[![total GitHub contributors](https://img.shields.io/github/contributors-anon/swagger-api/swagger-ui.svg)](https://github.com/swagger-api/swagger-ui/graphs/contributors)

[![monthly npm installs](https://img.shields.io/npm/dm/swagger-ui.svg?label=npm%20downloads)](https://www.npmjs.com/package/swagger-ui)
![docker registry](https://img.shields.io/badge/docker-docker.swagger.io%2Fswaggerapi%2Fswagger--ui-blue)
![monthly packagist installs](https://img.shields.io/packagist/dm/swagger-api/swagger-ui.svg?label=packagist%20installs)
![gzip size](https://img.shields.io/bundlephobia/minzip/swagger-ui.svg?label=gzip%20size)

## Introduction
[Swagger UI](https://swagger.io/tools/swagger-ui/) allows anyone ‚Äî be it your development team or your end consumers ‚Äî to visualize and interact with the API‚Äôs resources without having any of the implementation logic in place. It‚Äôs automatically generated from your OpenAPI (formerly known as Swagger) Specification, with the visual documentation making it easy for back end implementation and client side consumption.

## General
**üëâüèº Want to score an easy open-source contribution?** Check out our [Good first issue](https://github.com/swagger-api/swagger-ui/issues?q=is%3Aissue+is%3Aopen+label%3A%22Good+first+issue%22) label.

**üï∞Ô∏è Looking for the older version of Swagger UI?** Refer to the [*2.x* branch](https://github.com/swagger-api/swagger-ui/tree/2.x).


This repository publishes three different NPM modules:

* [swagger-ui](https://www.npmjs.com/package/swagger-ui) is a traditional npm module intended for use in single-page applications that are capable of resolving dependencies (via Webpack, Browserify, etc.).
* [swagger-ui-dist](https://www.npmjs.com/package/swagger-ui-dist) is a dependency-free module that includes everything you need to serve Swagger UI in a server-side project, or a single-page application that can&#039;t resolve npm module dependencies.
* [swagger-ui-react](https://www.npmjs.com/package/swagger-ui-react) is Swagger UI packaged as a React component for use in React applications.

We strongly suggest that you use `swagger-ui` instead of `swagger-ui-dist` if you&#039;re building a single-page application, since `swagger-ui-dist` is significantly larger.

If you are looking for plain ol&#039; HTML/JS/CSS, [download the latest release](https://github.com/swagger-api/swagger-ui/releases/latest) and copy the contents of the `/dist` folder to your server.


## Compatibility
The OpenAPI Specification has undergone 5 revisions since initial creation in 2010.  Compatibility between Swagger UI and the OpenAPI Specification is as follows:

| Swagger UI Version | Release Date | OpenAPI Spec compatibility                           | Notes                                                                 |
|--------------------|--------------|------------------------------------------------------|-----------------------------------------------------------------------|
| 5.19.0             | 2025-02-17   | 2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.0.4, 3.1.0, 3.1.1 | [tag v5.19.0](https://github.com/swagger-api/swagger-ui/tree/v5.19.0) |
| 5.0.0              | 2023-06-12   | 2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.1.0               | [tag v5.0.0](https://github.com/swagger-api/swagger-ui/tree/v5.0.0)   |
| 4.0.0              | 2021-11-03   | 2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3                      | [tag v4.0.0](https://github.com/swagger-api/swagger-ui/tree/v4.0.0)   |
| 3.18.3             | 2018-08-03   | 2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3                      | [tag v3.18.3](https://github.com/swagger-api/swagger-ui/tree/v3.18.3) |
| 3.0.21             | 2017-07-26   | 2.0                                                  | [tag v3.0.21](https://github.com/swagger-api/swagger-ui/tree/v3.0.21) |
| 2.2.10             | 2017-01-04   | 1.1, 1.2, 2.0                                        | [tag v2.2.10](https://github.com/swagger-api/swagger-ui/tree/v2.2.10) |
| 2.1.5              | 2016-07-20   | 1.1, 1.2, 2.0                                        | [tag v2.1.5](https://github.com/swagger-api/swagger-ui/tree/v2.1.5)   |
| 2.0.24             | 2014-09-12   | 1.1, 1.2                                             | [tag v2.0.24](https://github.com/swagger-api/swagger-ui/tree/v2.0.24) |
| 1.0.13             | 2013-03-08   | 1.1, 1.2                                             | [tag v1.0.13](https://github.com/swagger-api/swagger-ui/tree/v1.0.13) |
| 1.0.1              | 2011-10-11   | 1.0, 1.1                                             | [tag v1.0.1](https://github.com/swagger-api/swagger-ui/tree/v1.0.1)   |

## Anonymized analytics

SwaggerUI uses [Scarf](https://scarf.sh/) to collect [anonymized installation analytics](https://github.com/scarf-sh/scarf-js?tab=readme-ov-file#as-a-user-of-a-package-using-scarf-js-what-information-does-scarf-js-send-about-me). These analytics help support the maintainers of this library and ONLY run during installation. To [opt out](https://github.com/scarf-sh/scarf-js?tab=readme-ov-file#as-a-user-of-a-package-using-scarf-js-how-can-i-opt-out-of-analytics), you can set the `scarfSettings.enabled` field to `false` in your project&#039;s `package.json`:

```
// package.json
{
  // ...
  &quot;scarfSettings&quot;: {
    &quot;enabled&quot;: false
  }
  // ...
}
```

Alternatively, you can set the environment variable `SCARF_ANALYTICS` to `false` as part of the environment that installs your npm packages, e.g., `SCARF_ANALYTICS=false npm install`.

## Documentation

#### Usage
- [Installation](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/installation.md)
- [Configuration](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/configuration.md)
- [CORS](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/cors.md)
- [OAuth2](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/oauth2.md)
- [Deep Linking](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/deep-linking.md)
- [Limitations](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/limitations.md)
- [Version detection](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/version-detection.md)

#### Customization
- [Overview](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/customization/overview.md)
- [Plugin API](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/customization/plugin-api.md)
- [Custom layout](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/customization/custom-layout.md)

#### Development
- [Setting up](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/development/setting-up.md)
- [Scripts](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/development/scripts.md)

#### Contributing
- [Contributing](https://github.com/swagger-api/.github/blob/HEAD/CONTRIBUTING.md)

##### Integration Tests

You will need JDK of version 7 or higher as instructed here
https://nightwatchjs.org/guide/getting-started/installation.html#install-selenium-server

Integration tests can be run locally with `npm run e2e` - be sure you aren&#039;t running a dev server when testing!

### Browser support
Swagger UI works in the latest versions of Chrome, Safari, Firefox, and Edge.

### Known Issues

To help with the migration, here are the currently known issues with 3.X. This list will update regularly, and will not include features that were not implemented in previous versions.

- Only part of the parameters previously supported are available.
- The JSON Form Editor is not implemented.
- Support for `collectionFormat` is partial.
- l10n (translations) is not implemented.
- Relative path support for external files is not implemented.

## Security contact

Please disclose any security-related issues or vulnerabilities by emailing [security@swagger.io](mailto:security@swagger.io), instead of using the public issue tracker.

## License

SwaggerUI is licensed under [Apache 2.0 license](https://github.com/swagger-api/swagger-ui/blob/master/LICENSE).
SwaggerUI comes with an explicit [NOTICE](https://github.com/swagger-api/swagger-ui/blob/master/NOTICE) file
containing additional legal notices and information.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[HumanSignal/label-studio]]></title>
            <link>https://github.com/HumanSignal/label-studio</link>
            <guid>https://github.com/HumanSignal/label-studio</guid>
            <pubDate>Thu, 12 Jun 2025 00:04:43 GMT</pubDate>
            <description><![CDATA[Label Studio is a multi-type data labeling and annotation tool with standardized output format]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/HumanSignal/label-studio">HumanSignal/label-studio</a></h1>
            <p>Label Studio is a multi-type data labeling and annotation tool with standardized output format</p>
            <p>Language: JavaScript</p>
            <p>Stars: 22,468</p>
            <p>Forks: 2,803</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre>&lt;img src=&quot;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/ls_github_header.png&quot;/&gt;

![GitHub](https://img.shields.io/github/license/heartexlabs/label-studio?logo=heartex) ![label-studio:build](https://github.com/heartexlabs/label-studio/workflows/label-studio:build/badge.svg) ![GitHub release](https://img.shields.io/github/v/release/heartexlabs/label-studio?include_prereleases)

[Website](https://labelstud.io/) ‚Ä¢ [Docs](https://labelstud.io/guide/) ‚Ä¢ [Twitter](https://twitter.com/heartexlabs) ‚Ä¢ [Join Slack Community &lt;img src=&quot;https://app.heartex.ai/docs/images/slack-mini.png&quot; width=&quot;18px&quot;/&gt;](https://slack.labelstudio.heartex.com/?source=github-1)


## What is Label Studio?

&lt;!-- &lt;a href=&quot;https://labelstud.io/blog/release-130.html&quot;&gt;&lt;img src=&quot;https://github.com/heartexlabs/label-studio/raw/master/docs/themes/htx/source/images/release-130/LS-Hits-v1.3.png&quot; align=&quot;right&quot; /&gt;&lt;/a&gt; --&gt;

Label Studio is an open source data labeling tool. It lets you label data types like audio, text, images, videos, and time series with a simple and straightforward UI and export to various model formats. It can be used to prepare raw data or improve existing training data to get more accurate ML models.

- [Try out Label Studio](#try-out-label-studio)
- [What you get from Label Studio](#what-you-get-from-label-studio)
- [Included templates for labeling data in Label Studio](#included-templates-for-labeling-data-in-label-studio)
- [Set up machine learning models with Label Studio](#set-up-machine-learning-models-with-Label-Studio)
- [Integrate Label Studio with your existing tools](#integrate-label-studio-with-your-existing-tools)

![Gif of Label Studio annotating different types of data](https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/annotation_examples.gif)

Have a custom dataset? You can customize Label Studio to fit your needs. Read an [introductory blog post](https://towardsdatascience.com/introducing-label-studio-a-swiss-army-knife-of-data-labeling-140c1be92881) to learn more. 

## Try out Label Studio

Install Label Studio locally, or deploy it in a cloud instance. Also you can try [Label Studio Teams](https://app.heartex.com).

- [Install locally with Docker](#install-locally-with-docker)
- [Run with Docker Compose (Label Studio + Nginx + PostgreSQL)](#run-with-docker-compose)
- [Install locally with pip](#install-locally-with-pip)
- [Install locally with Anaconda](#install-locally-with-anaconda)
- [Install for local development](#install-for-local-development)
- [Deploy in a cloud instance](#deploy-in-a-cloud-instance)

### Install locally with Docker
Official Label Studio docker image is [here](https://hub.docker.com/r/heartexlabs/label-studio) and it can be downloaded with `docker pull`. 
Run Label Studio in a Docker container and access it at `http://localhost:8080`.


```bash
docker pull heartexlabs/label-studio:latest
docker run -it -p 8080:8080 -v `pwd`/mydata:/label-studio/data heartexlabs/label-studio:latest
```
You can find all the generated assets, including SQLite3 database storage `label_studio.sqlite3` and uploaded files, in the `./mydata` directory.

#### Override default Docker install
You can override the default launch command by appending the new arguments:
```bash
docker run -it -p 8080:8080 -v `pwd`/mydata:/label-studio/data heartexlabs/label-studio:latest label-studio --log-level DEBUG
```

#### Build a local image with Docker
If you want to build a local image, run:
```bash
docker build -t heartexlabs/label-studio:latest .
```

### Run with Docker Compose
Docker Compose script provides production-ready stack consisting of the following components:

- Label Studio
- [Nginx](https://www.nginx.com/) - proxy web server used to load various static data, including uploaded audio, images, etc.
- [PostgreSQL](https://www.postgresql.org/) - production-ready database that replaces less performant SQLite3.

To start using the app from `http://localhost` run this command:
```bash
docker-compose up
```

### Install locally with pip

```bash
# Requires Python &gt;=3.7 &lt;=3.9
pip install label-studio

# Start the server at http://localhost:8080
label-studio
```

### Install locally with Anaconda

```bash
conda create --name label-studio
conda activate label-studio
pip install label-studio
```

### Install for local development

You can run the latest Label Studio version locally without installing the package with pip. 

```bash
# Install all package dependencies
pip install -e .
# Run database migrations
python label_studio/manage.py migrate
# Start the server in development mode at http://localhost:8080
python label_studio/manage.py runserver
```

### Deploy in a cloud instance

You can deploy Label Studio with one click in Heroku, Microsoft Azure, or Google Cloud Platform: 

[&lt;img src=&quot;https://www.herokucdn.com/deploy/button.svg&quot; height=&quot;30px&quot;&gt;](https://heroku.com/deploy?template=https://github.com/heartexlabs/label-studio/tree/heroku-persistent-pg)
[&lt;img src=&quot;https://aka.ms/deploytoazurebutton&quot; height=&quot;30px&quot;&gt;](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2Fheartexlabs%2Flabel-studio%2Fmaster%2Fazuredeploy.json)
[&lt;img src=&quot;https://deploy.cloud.run/button.svg&quot; height=&quot;30px&quot;&gt;](https://deploy.cloud.run)


#### Apply frontend changes

The frontend part of Label Studio app lies in the `frontend/` folder and written in React JSX. In case you&#039;ve made some changes there, the following commands should be run before building / starting the instance:

```
cd label_studio/frontend/
npm ci
npx webpack
cd ../..
python label_studio/manage.py collectstatic --no-input
```

### Troubleshoot installation
If you see any errors during installation, try to rerun the installation

```bash
pip install --ignore-installed label-studio
```

#### Install dependencies on Windows 
To run Label Studio on Windows, download and install the following wheel packages from [Gohlke builds](https://www.lfd.uci.edu/~gohlke/pythonlibs) to ensure you&#039;re using the correct version of Python:
- [lxml](https://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml)

```bash
# Upgrade pip 
pip install -U pip

# If you&#039;re running Win64 with Python 3.8, install the packages downloaded from Gohlke:
pip install lxml‚Äë4.5.0‚Äëcp38‚Äëcp38‚Äëwin_amd64.whl

# Install label studio
pip install label-studio
```

#### Run test suite
```bash
pip install -r deploy/requirements-test.txt
cd label_studio

# postgres (assumes default postgres user,db,pass)
DJANGO_DB=default DJANGO_SETTINGS_MODULE=core.settings.label_studio python -m pytest -vv -n auto

# sqlite3
DJANGO_DB=sqlite DJANGO_SETTINGS_MODULE=core.settings.label_studio python -m pytest -vv -n auto
```


## What you get from Label Studio

![Screenshot of Label Studio data manager grid view with images](https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/labelstudio-ui.gif)

- **Multi-user labeling** sign up and login, when you create an annotation it&#039;s tied to your account.
- **Multiple projects** to work on all your datasets in one instance.
- **Streamlined design** helps you focus on your task, not how to use the software.
- **Configurable label formats** let you customize the visual interface to meet your specific labeling needs.
- **Support for multiple data types** including images, audio, text, HTML, time-series, and video. 
- **Import from files or from cloud storage** in Amazon AWS S3, Google Cloud Storage, or JSON, CSV, TSV, RAR, and ZIP archives. 
- **Integration with machine learning models** so that you can visualize and compare predictions from different models and perform pre-labeling.
- **Embed it in your data pipeline** REST API makes it easy to make it a part of your pipeline

## Included templates for labeling data in Label Studio 

Label Studio includes a variety of templates to help you label your data, or you can create your own using specifically designed configuration language. The most common templates and use cases for labeling include the following cases:

&lt;img src=&quot;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/templates-categories.jpg&quot; /&gt;

## Set up machine learning models with Label Studio

Connect your favorite machine learning model using the Label Studio Machine Learning SDK. Follow these steps:

1. Start your own machine learning backend server. See [more detailed instructions](https://github.com/heartexlabs/label-studio-ml-backend).
2. Connect Label Studio to the server on the model page found in project settings.

This lets you:

- **Pre-label** your data using model predictions. 
- Do **online learning** and retrain your model while new annotations are being created. 
- Do **active learning** by labeling only the most complex examples in your data.

## Integrate Label Studio with your existing tools

You can use Label Studio as an independent part of your machine learning workflow or integrate the frontend or backend into your existing tools.  

* Use the [Label Studio Frontend](https://github.com/heartexlabs/label-studio-frontend) as a separate React library. See more in the [Frontend Library documentation](https://labelstud.io/guide/frontend.html). 

## Ecosystem

| Project | Description |
|-|-|
| label-studio | Server, distributed as a pip package |
| [label-studio-frontend](https://github.com/heartexlabs/label-studio-frontend) | React and JavaScript frontend and can run standalone in a web browser or be embedded into your application. |  
| [data-manager](https://github.com/heartexlabs/dm2) | React and JavaScript frontend for managing data. Includes the Label Studio Frontend. Relies on the label-studio server or a custom backend with the expected API methods. | 
| [label-studio-converter](https://github.com/heartexlabs/label-studio-converter) | Encode labels in the format of your favorite machine learning library | 
| [label-studio-transformers](https://github.com/heartexlabs/label-studio-transformers) | Transformers library connected and configured for use with Label Studio |


## Roadmap

Want to use **The Coolest Feature X** but Label Studio doesn&#039;t support it? Check out [our public roadmap](roadmap.md)!

## Citation

```tex
@misc{Label Studio,
  title={{Label Studio}: Data labeling software},
  url={https://github.com/heartexlabs/label-studio},
  note={Open source software available from https://github.com/heartexlabs/label-studio},
  author={
    Maxim Tkachenko and
    Mikhail Malyuk and
    Andrey Holmanyuk and
    Nikolai Liubimov},
  year={2020-2022},
}
```

## License

This software is licensed under the [Apache 2.0 LICENSE](/LICENSE) ¬© [Heartex](https://www.heartex.ai/). 2020-2021

&lt;img src=&quot;https://github.com/heartexlabs/label-studio/blob/master/images/opossum_looking.png?raw=true&quot; title=&quot;Hey everyone!&quot; height=&quot;140&quot; width=&quot;140&quot; /&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WhiskeySockets/Baileys]]></title>
            <link>https://github.com/WhiskeySockets/Baileys</link>
            <guid>https://github.com/WhiskeySockets/Baileys</guid>
            <pubDate>Thu, 12 Jun 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[Lightweight full-featured typescript/javascript WhatsApp Web API]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WhiskeySockets/Baileys">WhiskeySockets/Baileys</a></h1>
            <p>Lightweight full-featured typescript/javascript WhatsApp Web API</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,802</p>
            <p>Forks: 1,935</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&#039;center&#039;&gt;&lt;img alt=&quot;Baileys logo&quot; src=&quot;https://raw.githubusercontent.com/WhiskeySockets/Baileys/refs/heads/master/Media/logo.png&quot; height=&quot;75&quot;/&gt;&lt;/h1&gt;

&lt;div align=&#039;center&#039;&gt;

![NPM Downloads](https://img.shields.io/npm/dw/%40whiskeysockets%2Fbaileys?label=npm&amp;color=%23CB3837)
![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/whiskeysockets/baileys)
![Discord](https://img.shields.io/discord/725839806084546610?label=discord&amp;color=%235865F2)

&lt;/div&gt;

&lt;div align=&#039;center&#039;&gt;Baileys is a WebSockets-based TypeScript library for interacting with the WhatsApp Web API.&lt;/div&gt;

# Important Note
This is a temporally README, the new guide is at development and will be fully released when it&#039;s finished.

New Guide: https://baileys.wiki

# Sponsor
If you&#039;d like to financially support this project, you can do so by supporting the current maintainer [here](https://purpshell.dev/sponsor).

# Disclaimer
This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates.
The official WhatsApp website can be found at whatsapp.com. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners.

The maintainers of Baileys do not in any way condone the use of this application in practices that violate the Terms of Service of WhatsApp. The maintainers of this application call upon the personal responsibility of its users to use this application in a fair way, as it is intended to be used.
Use at your own discretion. Do not spam people with this. We discourage any stalkerware, bulk or automated messaging usage.

##

- Baileys does not require Selenium or any other browser to be interface with WhatsApp Web, it does so directly using a **WebSocket**. 
- Not running Selenium or Chromimum saves you like **half a gig** of ram :/ 
- Baileys supports interacting with the multi-device &amp; web versions of WhatsApp.
- Thank you to [@pokearaujo](https://github.com/pokearaujo/multidevice) for writing his observations on the workings of WhatsApp Multi-Device. Also, thank you to [@Sigalor](https://github.com/sigalor/whatsapp-web-reveng) for writing his observations on the workings of WhatsApp Web and thanks to [@Rhymen](https://github.com/Rhymen/go-whatsapp/) for the __go__ implementation.

&gt; [!IMPORTANT]
&gt; The original repository had to be removed by the original author - we now continue development in this repository here.
This is the only official repository and is maintained by the community.
&gt; **Join the Discord [here](https://discord.gg/WeJM5FP9GG)**
 
## Example

Do check out &amp; run [example.ts](Example/example.ts) to see an example usage of the library.
The script covers most common use cases.
To run the example script, download or clone the repo and then type the following in a terminal:
1. ``` cd path/to/Baileys ```
2. ``` yarn ```
3. ``` yarn example ```

## Install

Use the stable version:
```
yarn add @whiskeysockets/baileys
```

Use the edge version (no guarantee of stability, but latest fixes + features)
```
yarn add github:WhiskeySockets/Baileys
```

Then import your code using:
```ts 
import makeWASocket from &#039;@whiskeysockets/baileys&#039;
```

# Links

- [Discord](https://discord.gg/WeJM5FP9GG)
- [Docs](https://guide.whiskeysockets.io/)

# Index

- [Connecting Account](#connecting-account)
    - [Connect with QR-CODE](#starting-socket-with-qr-code)
    - [Connect with Pairing Code](#starting-socket-with-pairing-code)
    - [Receive Full History](#receive-full-history)
- [Important Notes About Socket Config](#important-notes-about-socket-config)
    - [Caching Group Metadata (Recommended)](#caching-group-metadata-recommended)
    - [Improve Retry System &amp; Decrypt Poll Votes](#improve-retry-system--decrypt-poll-votes)
    - [Receive Notifications in Whatsapp App](#receive-notifications-in-whatsapp-app)

- [Save Auth Info](#saving--restoring-sessions)
- [Handling Events](#handling-events)
    - [Example to Start](#example-to-start)
    - [Decrypt Poll Votes](#decrypt-poll-votes)
    - [Summary of Events on First Connection](#summary-of-events-on-first-connection)
- [Implementing a Data Store](#implementing-a-data-store)
- [Whatsapp IDs Explain](#whatsapp-ids-explain)
- [Utility Functions](#utility-functions)
- [Sending Messages](#sending-messages)
    - [Non-Media Messages](#non-media-messages)
        - [Text Message](#text-message)
        - [Quote Message](#quote-message-works-with-all-types)
        - [Mention User](#mention-user-works-with-most-types)
        - [Forward Messages](#forward-messages)
        - [Location Message](#location-message)
        - [Contact Message](#contact-message)
        - [Reaction Message](#reaction-message)
        - [Pin Message](#pin-message)
        - [Poll Message](#poll-message)
    - [Sending with Link Preview](#sending-messages-with-link-previews)
    - [Media Messages](#media-messages)
        - [Gif Message](#gif-message)
        - [Video Message](#video-message)
        - [Audio Message](#audio-message)
        - [Image Message](#image-message)
        - [ViewOnce Message](#view-once-message)
- [Modify Messages](#modify-messages)
    - [Delete Messages (for everyone)](#deleting-messages-for-everyone)
    - [Edit Messages](#editing-messages)
- [Manipulating Media Messages](#manipulating-media-messages)
    - [Thumbnail in Media Messages](#thumbnail-in-media-messages)
    - [Downloading Media Messages](#downloading-media-messages)
    - [Re-upload Media Message to Whatsapp](#re-upload-media-message-to-whatsapp)
- [Reject Call](#reject-call)
- [Send States in Chat](#send-states-in-chat)
    - [Reading Messages](#reading-messages)
    - [Update Presence](#update-presence)
- [Modifying Chats](#modifying-chats)
    - [Archive a Chat](#archive-a-chat)
    - [Mute/Unmute a Chat](#muteunmute-a-chat)
    - [Mark a Chat Read/Unread](#mark-a-chat-readunread)
    - [Delete a Message for Me](#delete-a-message-for-me)
    - [Delete a Chat](#delete-a-chat)
    - [Star/Unstar a Message](#starunstar-a-message)
    - [Disappearing Messages](#disappearing-messages)
- [User Querys](#user-querys)
    - [Check If ID Exists in Whatsapp](#check-if-id-exists-in-whatsapp)
    - [Query Chat History (groups too)](#query-chat-history-groups-too)
    - [Fetch Status](#fetch-status)
    - [Fetch Profile Picture (groups too)](#fetch-profile-picture-groups-too)
    - [Fetch Bussines Profile (such as description or category)](#fetch-bussines-profile-such-as-description-or-category)
    - [Fetch Someone&#039;s Presence (if they&#039;re typing or online)](#fetch-someones-presence-if-theyre-typing-or-online)
- [Change Profile](#change-profile)
    - [Change Profile Status](#change-profile-status)
    - [Change Profile Name](#change-profile-name)
    - [Change Display Picture (groups too)](#change-display-picture-groups-too)
    - [Remove display picture (groups too)](#remove-display-picture-groups-too)
- [Groups](#groups)
    - [Create a Group](#create-a-group)
    - [Add/Remove or Demote/Promote](#addremove-or-demotepromote)
    - [Change Subject (name)](#change-subject-name)
    - [Change Description](#change-description)
    - [Change Settings](#change-settings)
    - [Leave a Group](#leave-a-group)
    - [Get Invite Code](#get-invite-code)
    - [Revoke Invite Code](#revoke-invite-code)
    - [Join Using Invitation Code](#join-using-invitation-code)
    - [Get Group Info by Invite Code](#get-group-info-by-invite-code)
    - [Query Metadata (participants, name, description...)](#query-metadata-participants-name-description)
    - [Join using groupInviteMessage](#join-using-groupinvitemessage)
    - [Get Request Join List](#get-request-join-list)
    - [Approve/Reject Request Join](#approvereject-request-join)
    - [Get All Participating Groups Metadata](#get-all-participating-groups-metadata)
    - [Toggle Ephemeral](#toggle-ephemeral)
    - [Change Add Mode](#change-add-mode)
- [Privacy](#privacy)
    - [Block/Unblock User](#blockunblock-user)
    - [Get Privacy Settings](#get-privacy-settings)
    - [Get BlockList](#get-blocklist)
    - [Update LastSeen Privacy](#update-lastseen-privacy)
    - [Update Online Privacy](#update-online-privacy)
    - [Update Profile Picture Privacy](#update-profile-picture-privacy)
    - [Update Status Privacy](#update-status-privacy)
    - [Update Read Receipts Privacy](#update-read-receipts-privacy)
    - [Update Groups Add Privacy](#update-groups-add-privacy)
    - [Update Default Disappearing Mode](#update-default-disappearing-mode)
- [Broadcast Lists &amp; Stories](#broadcast-lists--stories)
    - [Send Broadcast &amp; Stories](#send-broadcast--stories)
    - [Query a Broadcast List&#039;s Recipients &amp; Name](#query-a-broadcast-lists-recipients--name)
- [Writing Custom Functionality](#writing-custom-functionality)
    - [Enabling Debug Level in Baileys Logs](#enabling-debug-level-in-baileys-logs)
    - [How Whatsapp Communicate With Us](#how-whatsapp-communicate-with-us)
    - [Register a Callback for Websocket Events](#register-a-callback-for-websocket-events)

## Connecting Account

WhatsApp provides a multi-device API that allows Baileys to be authenticated as a second WhatsApp client by scanning a **QR code** or **Pairing Code** with WhatsApp on your phone.

&gt; [!NOTE]
&gt; **[Here](#example-to-start) is a simple example of event handling**

&gt; [!TIP]
&gt; **You can see all supported socket configs [here](https://baileys.whiskeysockets.io/types/SocketConfig.html) (Recommended)**

### Starting socket with **QR-CODE**

&gt; [!TIP]
&gt; You can customize browser name if you connect with **QR-CODE**, with `Browser` constant, we have some browsers config, **see [here](https://baileys.whiskeysockets.io/types/BrowsersMap.html)**

```ts
import makeWASocket from &#039;@whiskeysockets/baileys&#039;

const sock = makeWASocket({
    // can provide additional config here
    browser: Browsers.ubuntu(&#039;My App&#039;),
    printQRInTerminal: true
})
```

If the connection is successful, you will see a QR code printed on your terminal screen, scan it with WhatsApp on your phone and you&#039;ll be logged in!

### Starting socket with **Pairing Code**


&gt; [!IMPORTANT]
&gt; Pairing Code isn&#039;t Mobile API, it&#039;s a method to connect Whatsapp Web without QR-CODE, you can connect only with one device, see [here](https://faq.whatsapp.com/1324084875126592/?cms_platform=web)

The phone number can&#039;t have `+` or `()` or `-`, only numbers, you must provide country code

```ts
import makeWASocket from &#039;@whiskeysockets/baileys&#039;

const sock = makeWASocket({
    // can provide additional config here
    printQRInTerminal: false //need to be false
})

if (!sock.authState.creds.registered) {
    const number = &#039;XXXXXXXXXXX&#039;
    const code = await sock.requestPairingCode(number)
    console.log(code)
}
```

### Receive Full History

1. Set `syncFullHistory` as `true`
2. Baileys, by default, use chrome browser config
    - If you&#039;d like to emulate a desktop connection (and receive more message history), this browser setting to your Socket config:

```ts
const sock = makeWASocket({
    ...otherOpts,
    // can use Windows, Ubuntu here too
    browser: Browsers.macOS(&#039;Desktop&#039;),
    syncFullHistory: true
})
```

## Important Notes About Socket Config

### Caching Group Metadata (Recommended)
- If you use baileys for groups, we recommend you to set `cachedGroupMetadata` in socket config, you need to implement a cache like this:

    ```ts
    const groupCache = new NodeCache({stdTTL: 5 * 60, useClones: false})

    const sock = makeWASocket({
        cachedGroupMetadata: async (jid) =&gt; groupCache.get(jid)
    })

    sock.ev.on(&#039;groups.update&#039;, async ([event]) =&gt; {
        const metadata = await sock.groupMetadata(event.id)
        groupCache.set(event.id, metadata)
    })

    sock.ev.on(&#039;group-participants.update&#039;, async (event) =&gt; {
        const metadata = await sock.groupMetadata(event.id)
        groupCache.set(event.id, metadata)
    })
    ```

### Improve Retry System &amp; Decrypt Poll Votes
- If you want to improve sending message, retrying when error occurs and decrypt poll votes, you need to have a store and set `getMessage` config in socket like this:
    ```ts
    const sock = makeWASocket({
        getMessage: async (key) =&gt; await getMessageFromStore(key)
    })
    ```

### Receive Notifications in Whatsapp App
- If you want to receive notifications in whatsapp app, set `markOnlineOnConnect` to `false`
    ```ts
    const sock = makeWASocket({
        markOnlineOnConnect: false
    })
    ```
## Saving &amp; Restoring Sessions

You obviously don&#039;t want to keep scanning the QR code every time you want to connect. 

So, you can load the credentials to log back in:
```ts
import makeWASocket, { useMultiFileAuthState } from &#039;@whiskeysockets/baileys&#039;

const { state, saveCreds } = await useMultiFileAuthState(&#039;auth_info_baileys&#039;)

// will use the given state to connect
// so if valid credentials are available -- it&#039;ll connect without QR
const sock = makeWASocket({ auth: state })

// this will be called as soon as the credentials are updated
sock.ev.on(&#039;creds.update&#039;, saveCreds)
```

&gt; [!IMPORTANT]
&gt; `useMultiFileAuthState` is a utility function to help save the auth state in a single folder, this function serves as a good guide to help write auth &amp; key states for SQL/no-SQL databases, which I would recommend in any production grade system.

&gt; [!NOTE]
&gt; When a message is received/sent, due to signal sessions needing updating, the auth keys (`authState.keys`) will update. Whenever that happens, you must save the updated keys (`authState.keys.set()` is called). Not doing so will prevent your messages from reaching the recipient &amp; cause other unexpected consequences. The `useMultiFileAuthState` function automatically takes care of that, but for any other serious implementation -- you will need to be very careful with the key state management.

## Handling Events

- Baileys uses the EventEmitter syntax for events. 
They&#039;re all nicely typed up, so you shouldn&#039;t have any issues with an Intellisense editor like VS Code.

&gt; [!IMPORTANT]
&gt; **The events are [these](https://baileys.whiskeysockets.io/types/BaileysEventMap.html)**, it&#039;s important you see all events

You can listen to these events like this:
```ts
const sock = makeWASocket()
sock.ev.on(&#039;messages.upsert&#039;, ({ messages }) =&gt; {
    console.log(&#039;got messages&#039;, messages)
})
```

### Example to Start

&gt; [!NOTE]
&gt; This example includes basic auth storage too

```ts
import makeWASocket, { DisconnectReason, useMultiFileAuthState } from &#039;@whiskeysockets/baileys&#039;
import { Boom } from &#039;@hapi/boom&#039;

async function connectToWhatsApp () {
    const { state, saveCreds } = await useMultiFileAuthState(&#039;auth_info_baileys&#039;)
    const sock = makeWASocket({
        // can provide additional config here
        auth: state,
        printQRInTerminal: true
    })
    sock.ev.on(&#039;connection.update&#039;, (update) =&gt; {
        const { connection, lastDisconnect } = update
        if(connection === &#039;close&#039;) {
            const shouldReconnect = (lastDisconnect.error as Boom)?.output?.statusCode !== DisconnectReason.loggedOut
            console.log(&#039;connection closed due to &#039;, lastDisconnect.error, &#039;, reconnecting &#039;, shouldReconnect)
            // reconnect if not logged out
            if(shouldReconnect) {
                connectToWhatsApp()
            }
        } else if(connection === &#039;open&#039;) {
            console.log(&#039;opened connection&#039;)
        }
    })
    sock.ev.on(&#039;messages.upsert&#039;, event =&gt; {
        for (const m of event.messages) {
            console.log(JSON.stringify(m, undefined, 2))

            console.log(&#039;replying to&#039;, m.key.remoteJid)
            await sock.sendMessage(m.key.remoteJid!, { text: &#039;Hello Word&#039; })
        }
    })

    // to storage creds (session info) when it updates
    sock.ev.on(&#039;creds.update&#039;, saveCreds)
}
// run in main file
connectToWhatsApp()
```

&gt; [!IMPORTANT]
&gt; In `messages.upsert` it&#039;s recommended to use a loop like `for (const message of event.messages)` to handle all messages in array

### Decrypt Poll Votes

- By default poll votes are encrypted and handled in `messages.update`
- That&#039;s a simple example
```ts
sock.ev.on(&#039;messages.update&#039;, event =&gt; {
    for(const { key, update } of event) {
        if(update.pollUpdates) {
            const pollCreation = await getMessage(key)
            if(pollCreation) {
                console.log(
                    &#039;got poll update, aggregation: &#039;,
                    getAggregateVotesInPollMessage({
                        message: pollCreation,
                        pollUpdates: update.pollUpdates,
                    })
                )
            }
        }
    }
})
```

- `getMessage` is a [store](#implementing-a-data-store) implementation (in your end)

### Summary of Events on First Connection

1. When you connect first time, `connection.update` will be fired requesting you to restart sock
2. Then, history messages will be received in `messaging.history-set`

## Implementing a Data Store

- Baileys does not come with a defacto storage for chats, contacts, or messages. However, a simple in-memory implementation has been provided. The store listens for chat updates, new messages, message updates, etc., to always have an up-to-date version of the data.

&gt; [!IMPORTANT]
&gt; I highly recommend building your own data store, as storing someone&#039;s entire chat history in memory is a terrible waste of RAM.

It can be used as follows:

```ts
import makeWASocket, { makeInMemoryStore } from &#039;@whiskeysockets/baileys&#039;
// the store maintains the data of the WA connection in memory
// can be written out to a file &amp; read from it
const store = makeInMemoryStore({ })
// can be read from a file
store.readFromFile(&#039;./baileys_store.json&#039;)
// saves the state to a file every 10s
setInterval(() =&gt; {
    store.writeToFile(&#039;./baileys_store.json&#039;)
}, 10_000)

const sock = makeWASocket({ })
// will listen from this socket
// the store can listen from a new socket once the current socket outlives its lifetime
store.bind(sock.ev)

sock.ev.on(&#039;chats.upsert&#039;, () =&gt; {
    // can use &#039;store.chats&#039; however you want, even after the socket dies out
    // &#039;chats&#039; =&gt; a KeyedDB instance
    console.log(&#039;got chats&#039;, store.chats.all())
})

sock.ev.on(&#039;contacts.upsert&#039;, () =&gt; {
    console.log(&#039;got contacts&#039;, Object.values(store.contacts))
})

```

The store also provides some simple functions such as `loadMessages` that utilize the store to speed up data retrieval.

## Whatsapp IDs Explain

- `id` is the WhatsApp ID, called `jid` too, of the person or group you&#039;re sending the message to. 
    - It must be in the format ```[country code][phone number]@s.whatsapp.net```
	    - Example for people: ```+19999999999@s.whatsapp.net```. 
	    - For groups, it must be in the format ``` 123456789-123345@g.us ```. 
    - For broadcast lists, it&#039;s `[timestamp of creation]@broadcast`.
    - For stories, the ID is `status@broadcast`.

## Utility Functions

- `getContentType`, returns the content type for any message
- `getDevice`, returns the device from message
- `makeCacheableSignalKeyStore`, make auth store more fast
- `downloadContentFromMessage`, download content from any message

## Sending Messages

- Send all types of messages with a single function
    - **[Here](https://baileys.whiskeysockets.io/types/AnyMessageContent.html) you can see all message contents supported, like text message**
    - **[Here](https://baileys.whiskeysockets.io/types/MiscMessageGenerationOptions.html) you can see all options supported, like quote message**

    ```ts
    const jid: string
    const content: AnyMessageContent
    const options: MiscMessageGenerationOptions

    sock.sendMessage(jid, content, options)
    ```

### Non-Media Messages

#### Text Message
```ts
await sock.sendMessage(jid, { text: &#039;hello word&#039; })
```

#### Quote Message (works with all types)
```ts
await sock.sendMessage(jid, { text: &#039;hello word&#039; }, { quoted: message })
```

#### Mention User

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[f/awesome-chatgpt-prompts]]></title>
            <link>https://github.com/f/awesome-chatgpt-prompts</link>
            <guid>https://github.com/f/awesome-chatgpt-prompts</guid>
            <pubDate>Thu, 12 Jun 2025 00:04:41 GMT</pubDate>
            <description><![CDATA[This repo includes ChatGPT prompt curation to use ChatGPT and other LLM tools better.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/f/awesome-chatgpt-prompts">f/awesome-chatgpt-prompts</a></h1>
            <p>This repo includes ChatGPT prompt curation to use ChatGPT and other LLM tools better.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 128,591</p>
            <p>Forks: 17,045</p>
            <p>Stars today: 141 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
&lt;img width=&quot;395&quot; alt=&quot;prompts.chat&quot; src=&quot;https://github.com/user-attachments/assets/e0d0e32d-d2ce-4459-9f37-e951d9f4f5de&quot; /&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;Sponsors&lt;/h3&gt;

&lt;div align=&quot;center&quot;&gt;

  &lt;a href=&quot;https://clemta.com&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;50&quot; alt=&quot;Clemta logo&quot; src=&quot;https://clemta.com/wp-content/uploads/2023/03/logo-clemta-com-1.png.webp&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;sub&gt;With Clemta, you can run your company from the comfort of your home.&lt;/sub&gt;
&lt;hr&gt;
   &lt;a href=&quot;https://www.warp.dev/awesome-chatgpt-prompts&quot;&gt;
      &lt;img alt=&quot;Warp sponsorship&quot; width=&quot;400&quot; src=&quot;https://github.com/user-attachments/assets/ab8dd143-b0fd-4904-bdc5-dd7ecac94eae&quot;&gt;
   &lt;/a&gt;

#### [Warp, the intelligent terminal for developers](https://www.warp.dev/awesome-chatgpt-prompts)
[Available for MacOS, Linux, &amp; Windows](https://www.warp.dev/awesome-chatgpt-prompts)&lt;br&gt;

&lt;hr&gt;
  &lt;a href=&quot;https://graphite.dev/?utm_source=github&amp;utm_medium=repo&amp;utm_campaign=awesome_chatgpt_prompts&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;100&quot; alt=&quot;Graphite logo&quot; src=&quot;https://github.com/user-attachments/assets/981a244b-4bc8-4884-98f7-dd1d425063ae&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;sub&gt;Graphite is the AI developer productivity platform helping teams on GitHub ship higher quality software, faster.&lt;/sub&gt;
&lt;hr&gt;
  &lt;a href=&quot;https://github.com/f/mcptools&quot; align=&quot;center&quot; target=&quot;_blank&quot;&gt;
    &lt;img height=&quot;60&quot; alt=&quot;Hugging Face logo&quot; src=&quot;https://github.com/f/mcptools/raw/master/.github/resources/logo.png&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;sub&gt;If you&#039;re building MCPs, &lt;a href=&quot;https://github.com/f/mcptools&quot;&gt;MCP Tools&lt;/a&gt; is a Swiss-army knife for MCP Servers.&lt;/sub&gt;
&lt;hr&gt;
  &lt;sub&gt;&lt;a href=&quot;https://github.com/sponsors/f/sponsorships?sponsor=f&amp;amp;tier_id=319423&quot;&gt;Be my sponsor and your logo will be here!&lt;/a&gt;&lt;/sub&gt;
&lt;/div&gt;

---
[![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)

Welcome to the &quot;Awesome ChatGPT Prompts&quot; repository! While this collection was originally created for [ChatGPT](https://chat.openai.com/chat), these prompts work great with other AI models like [Claude](https://claude.ai/new), [Gemini](https://gemini.google.com), [Hugging Face Chat](https://hf.co/chat), [Llama](https://meta.ai), [Mistral](https://chat.mistral.ai), and more.

[ChatGPT](https://chat.openai.com/chat) is a web interface created by [OpenAI](https://openai.com) that provides access to their GPT (Generative Pre-trained Transformer) language models. The underlying models, like GPT-4o and GPT-o1, are large language models trained on vast amounts of text data that can understand and generate human-like text. Like other AI chat interfaces, you can provide prompts and have natural conversations with the AI, which will generate contextual responses based on the conversation history and your inputs.

In this repository, you will find a variety of prompts that can be used with ChatGPT and other AI chat models. We encourage you to [add your own prompts](https://github.com/f/awesome-chatgpt-prompts/edit/main/README.md) to the list, and to use AI to help generate new prompts as well.

To get started, simply clone this repository and use the prompts in the README.md file as input for your preferred AI chat model. You can also use the prompts in this file as inspiration for creating your own.

We hope you find these prompts useful and have fun exploring AI chat models!

**[View on prompts.chat](https://prompts.chat)**

**[View on Hugging Face](https://huggingface.co/datasets/fka/awesome-chatgpt-prompts/)**
---

&gt; ‚ÑπÔ∏è **NOTE:** Sometimes, some of the prompts may not be working as you expected
&gt; or may be rejected by the AI. Please try again, start a new thread, or log out
&gt; and log back in. If these solutions do not work, please try rewriting the
&gt; prompt using your own sentences while keeping the instructions same.

### Want to Write Effective Prompts?

I&#039;ve authored an e-book called **&quot;The Art of ChatGPT Prompting: A Guide to
Crafting Clear and Effective Prompts&quot;**.

üìñ **[Read the e-book](https://fka.gumroad.com/l/art-of-chatgpt-prompting)**

### Want to Learn How to Make Money using ChatGPT Prompts?

I&#039;ve authored an e-book called **&quot;How to Make Money with ChatGPT: Strategies,
Tips, and Tactics&quot;**.

üìñ
**[Buy the e-book](https://fka.gumroad.com/l/how-to-make-money-with-chatgpt)**

### Want to Learn How to write image prompts for Midjourney AI?

I&#039;ve authored an e-book called **&quot;The Art of Midjourney AI: A Guide to Creating
Images from Text&quot;**.

üìñ
**[Read the e-book](https://fka.gumroad.com/l/the-art-of-midjourney-ai-guide-to-creating-images-from-text)**

---

### Using prompts.chat

[prompts.chat](https://prompts.chat) is designed to provide an enhanced UX when
working with prompts. With just a few clicks, you can easily edit and copy the
prompts on the site to fit your specific needs and preferences.

&lt;img width=&quot;1400&quot; alt=&quot;Screenshot 2025-01-05 at 22 17 19&quot; src=&quot;https://github.com/user-attachments/assets/272d2092-b651-452a-a049-f46b31c32889&quot; /&gt;

---

## Unmerged Prompts

There are many Pull Requests to this repository waiting to be merged. There are
many hidden gems there. Take a look!

üìñ
**[View Unmerged Prompts](https://github.com/f/awesome-chatgpt-prompts/pulls)**

---

# Prompts

## Act as an Ethereum Developer

Contributed by: [@ameya-2003](https://github.com/Ameya-2003) Reference:
[The BlockChain Messenger](https://github.com/Ameya-2003/BlockChain/blob/main/Projects/The%20BlockChain%20Messenger.sol)

&gt; Imagine you are an experienced Ethereum developer tasked with creating a smart
&gt; contract for a blockchain messenger. The objective is to save messages on the
&gt; blockchain, making them readable (public) to everyone, writable (private) only
&gt; to the person who deployed the contract, and to count how many times the
&gt; message was updated. Develop a Solidity smart contract for this purpose,
&gt; including the necessary functions and considerations for achieving the
&gt; specified goals. Please provide the code and any relevant explanations to
&gt; ensure a clear understanding of the implementation.

## Act as a Linux Terminal

Contributed by: [@f](https://github.com/f) Reference:
[https://www.engraved.blog/building-a-virtual-machine-inside/](https://www.engraved.blog/building-a-virtual-machine-inside/)

&gt; I want you to act as a linux terminal. I will type commands and you will reply
&gt; with what the terminal should show. I want you to only reply with the terminal
&gt; output inside one unique code block, and nothing else. do not write
&gt; explanations. do not type commands unless I instruct you to do so. When I need
&gt; to tell you something in English, I will do so by putting text inside curly
&gt; brackets {like this}. My first command is pwd

## Act as an English Translator and Improver

Contributed by: [@f](https://github.com/f) **Alternative to**: Grammarly, Google
Translate

&gt; I want you to act as an English translator, spelling corrector and improver. I
&gt; will speak to you in any language and you will detect the language, translate
&gt; it and answer in the corrected and improved version of my text, in English. I
&gt; want you to replace my simplified A0-level words and sentences with more
&gt; beautiful and elegant, upper level English words and sentences. Keep the
&gt; meaning same, but make them more literary. I want you to only reply the
&gt; correction, the improvements and nothing else, do not write explanations. My
&gt; first sentence is &quot;istanbulu cok seviyom burada olmak cok guzel&quot;

## Act as Job Interviewer

Contributed by: [@f](https://github.com/f) &amp;
[@iltekin](https://github.com/iltekin) **Examples**: Node.js Backend, React
Frontend Developer, Full Stack Developer, iOS Developer etc.

&gt; I want you to act as an interviewer. I will be the candidate and you will ask
&gt; me the interview questions for the ${Position:JavaScript Developer} position. I want you to only
&gt; reply as the interviewer. Do not write all the conversation at once. I want
&gt; you to only do the interview with me. Ask me the questions and wait for my
&gt; answers. Do not write explanations. Ask me the questions one by one like an
&gt; interviewer does and wait for my answers. My first sentence is &quot;Hi&quot;

## Act as a JavaScript Console

Contributed by: [@omerimzali](https://github.com/omerimzali)

&gt; I want you to act as a javascript console. I will type commands and you will
&gt; reply with what the javascript console should show. I want you to only reply
&gt; with the terminal output inside one unique code block, and nothing else. do
&gt; not write explanations. do not type commands unless I instruct you to do so.
&gt; when I need to tell you something in english, I will do so by putting text
&gt; inside curly brackets {like this}. My first command is console.log(&quot;Hello
&gt; World&quot;);

## Act as an Excel Sheet

Contributed by: [@f](https://github.com/f)

&gt; I want you to act as a text based excel. You&#039;ll only reply me the text-based
&gt; 10 rows excel sheet with row numbers and cell letters as columns (A to L).
&gt; First column header should be empty to reference row number. I will tell you
&gt; what to write into cells and you&#039;ll reply only the result of excel table as
&gt; text, and nothing else. Do not write explanations. I will write you formulas
&gt; and you&#039;ll execute formulas and you&#039;ll only reply the result of excel table as
&gt; text. First, reply me the empty sheet.

## Act as an English Pronunciation Helper

Contributed by: [@f](https://github.com/f)

&gt; I want you to act as an English pronunciation assistant for Turkish speaking
&gt; people. I will write you sentences and you will only answer their
&gt; pronunciations, and nothing else. The replies must not be translations of my
&gt; sentence but only pronunciations. Pronunciations should use Turkish Latin
&gt; letters for phonetics. Do not write explanations on replies. My first sentence
&gt; is &quot;how the weather is in Istanbul?&quot;

## Act as a Spoken English Teacher and Improver

Contributed by: [@ATX735](https://github.com/ATX735)

&gt; I want you to act as a spoken English teacher and improver. I will speak to
&gt; you in English and you will reply to me in English to practice my spoken
&gt; English. I want you to keep your reply neat, limiting the reply to 100 words.
&gt; I want you to strictly correct my grammar mistakes, typos, and factual errors.
&gt; I want you to ask me a question in your reply. Now let&#039;s start practicing, you
&gt; could ask me a question first. Remember, I want you to strictly correct my
&gt; grammar mistakes, typos, and factual errors.

## Act as a Travel Guide

Contributed by: [@koksalkapucuoglu](https://github.com/koksalkapucuoglu)

&gt; I want you to act as a travel guide. I will write you my location and you will
&gt; suggest a place to visit near my location. In some cases, I will also give you
&gt; the type of places I will visit. You will also suggest me places of similar
&gt; type that are close to my first location. My first suggestion request is &quot;I am
&gt; in Istanbul/Beyoƒülu and I want to visit only museums.&quot;

## Act as a Plagiarism Checker

Contributed by: [@yetk1n](https://github.com/yetk1n)

&gt; I want you to act as a plagiarism checker. I will write you sentences and you
&gt; will only reply undetected in plagiarism checks in the language of the given
&gt; sentence, and nothing else. Do not write explanations on replies. My first
&gt; sentence is &quot;For computers to behave like humans, speech recognition systems
&gt; must be able to process nonverbal information, such as the emotional state of
&gt; the speaker.&quot;

## Act as Character

Contributed by: [@BRTZL](https://github.com/BRTZL)
[@mattsq](https://github.com/mattsq)

&gt; I want you to act like ${Character: Anakin Skywalker} from ${Series: Star Wars}. I want you to respond and
&gt; answer like ${Character: Anakin Skywalker} using the tone, manner and vocabulary ${Character: Anakin Skywalker}
&gt; would use. Do not write any explanations. Only answer like ${Character: Anakin Skywalker}. You
&gt; must know all of the knowledge of ${Character: Anakin Skywalker}. My first sentence is &quot;Hi
&gt; ${Character: Anakin Skywalker}.&quot;

## Act as an Advertiser

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as an advertiser. You will create a campaign to promote a
&gt; product or service of your choice. You will choose a target audience, develop
&gt; key messages and slogans, select the media channels for promotion, and decide
&gt; on any additional activities needed to reach your goals. My first suggestion
&gt; request is &quot;I need help creating an advertising campaign for a new type of
&gt; energy drink targeting young adults aged 18-30.&quot;

## Act as a Storyteller

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a storyteller. You will come up with entertaining stories
&gt; that are engaging, imaginative and captivating for the audience. It can be
&gt; fairy tales, educational stories or any other type of stories which has the
&gt; potential to capture people&#039;s attention and imagination. Depending on the
&gt; target audience, you may choose specific themes or topics for your
&gt; storytelling session e.g., if it‚Äôs children then you can talk about animals;
&gt; If it‚Äôs adults then history-based tales might engage them better etc. My first
&gt; request is &quot;I need an interesting story on perseverance.&quot;

## Act as a Football Commentator

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a football commentator. I will give you descriptions of
&gt; football matches in progress and you will commentate on the match, providing
&gt; your analysis on what has happened thus far and predicting how the game may
&gt; end. You should be knowledgeable of football terminology, tactics,
&gt; players/teams involved in each match, and focus primarily on providing
&gt; intelligent commentary rather than just narrating play-by-play. My first
&gt; request is &quot;I&#039;m watching Manchester United vs Chelsea - provide commentary for
&gt; this match.&quot;

## Act as a Stand-up Comedian

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a stand-up comedian. I will provide you with some topics
&gt; related to current events and you will use your wit, creativity, and
&gt; observational skills to create a routine based on those topics. You should
&gt; also be sure to incorporate personal anecdotes or experiences into the routine
&gt; in order to make it more relatable and engaging for the audience. My first
&gt; request is &quot;I want a humorous take on politics.&quot;

## Act as a Motivational Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a motivational coach. I will provide you with some
&gt; information about someone&#039;s goals and challenges, and it will be your job to
&gt; come up with strategies that can help this person achieve their goals. This
&gt; could involve providing positive affirmations, giving helpful advice or
&gt; suggesting activities they can do to reach their end goal. My first request is
&gt; &quot;I need help motivating myself to stay disciplined while studying for an
&gt; upcoming exam&quot;.

## Act as a Composer

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a composer. I will provide the lyrics to a song and you
&gt; will create music for it. This could include using various instruments or
&gt; tools, such as synthesizers or samplers, in order to create melodies and
&gt; harmonies that bring the lyrics to life. My first request is &quot;I have written a
&gt; poem named ‚ÄúHayalet Sevgilim‚Äù and need music to go with it.&quot;

## Act as a Debater

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a debater. I will provide you with some topics related to
&gt; current events and your task is to research both sides of the debates, present
&gt; valid arguments for each side, refute opposing points of view, and draw
&gt; persuasive conclusions based on evidence. Your goal is to help people come
&gt; away from the discussion with increased knowledge and insight into the topic
&gt; at hand. My first request is &quot;I want an opinion piece about Deno.&quot;

## Act as a Debate Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a debate coach. I will provide you with a team of
&gt; debaters and the motion for their upcoming debate. Your goal is to prepare the
&gt; team for success by organizing practice rounds that focus on persuasive
&gt; speech, effective timing strategies, refuting opposing arguments, and drawing
&gt; in-depth conclusions from evidence provided. My first request is &quot;I want our
&gt; team to be prepared for an upcoming debate on whether front-end development is
&gt; easy.&quot;

## Act as a Screenwriter

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a screenwriter. You will develop an engaging and creative
&gt; script for either a feature length film, or a Web Series that can captivate
&gt; its viewers. Start with coming up with interesting characters, the setting of
&gt; the story, dialogues between the characters etc. Once your character
&gt; development is complete - create an exciting storyline filled with twists and
&gt; turns that keeps the viewers in suspense until the end. My first request is &quot;I
&gt; need to write a romantic drama movie set in Paris.&quot;

## Act as a Novelist

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a novelist. You will come up with creative and
&gt; captivating stories that can engage readers for long periods of time. You may
&gt; choose any genre such as fantasy, romance, historical fiction and so on - but
&gt; the aim is to write something that has an outstanding plotline, engaging
&gt; characters and unexpected climaxes. My first request is &quot;I need to write a
&gt; science-fiction novel set in the future.&quot;

## Act as a Movie Critic

Contributed by: [@nuc](https://github.com/nuc)

&gt; I want you to act as a movie critic. You will develop an engaging and creative
&gt; movie review. You can cover topics like plot, themes and tone, acting and
&gt; characters, direction, score, cinematography, production design, special
&gt; effects, editing, pace, dialog. The most important aspect though is to
&gt; emphasize how the movie has made you feel. What has really resonated with you.
&gt; You can also be critical about the movie. Please avoid spoilers. My first
&gt; request is &quot;I need to write a movie review for the movie Interstellar&quot;

## Act as a Relationship Coach

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a relationship coach. I will provide some details about
&gt; the two people involved in a conflict, and it will be your job to come up with
&gt; suggestions on how they can work through the issues that are separating them.
&gt; This could include advice on communication techniques or different strategies
&gt; for improving their understanding of one another&#039;s perspectives. My first
&gt; request is &quot;I need help solving conflicts between my spouse and myself.&quot;

## Act as a Poet

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a poet. You will create poems that evoke emotions and
&gt; have the power to stir people‚Äôs soul. Write on any topic or theme but make
&gt; sure your words convey the feeling you are trying to express in beautiful yet
&gt; meaningful ways. You can also come up with short verses that are still
&gt; powerful enough to leave an imprint in readers&#039; minds. My first request is &quot;I
&gt; need a poem about love.&quot;

## Act as a Rapper

Contributed by: [@devisasari](https://github.com/devisasari)

&gt; I want you to act as a rapper. You will come up with powerful and meaningful
&gt; lyrics, beats and rhythm that can ‚Äòwow‚Äô the audience. Your lyrics should have
&gt; an intriguing meaning and message which people can relate too. When it comes
&gt; to choosing your beat, make sure it is catchy yet relevant to your words, so
&gt; that when combined they make an explosion of sound everytime! My first request
&gt; is &quot;I need a rap song about finding strength within yourself.&quot;

## Act as a Motivational Speaker

Contributed by: [@devisasari](https://git

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[tidalcycles/strudel]]></title>
            <link>https://github.com/tidalcycles/strudel</link>
            <guid>https://github.com/tidalcycles/strudel</guid>
            <pubDate>Thu, 12 Jun 2025 00:04:40 GMT</pubDate>
            <description><![CDATA[Web-based environment for live coding algorithmic patterns, incorporating a faithful port of TidalCycles to JavaScript]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/tidalcycles/strudel">tidalcycles/strudel</a></h1>
            <p>Web-based environment for live coding algorithmic patterns, incorporating a faithful port of TidalCycles to JavaScript</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,423</p>
            <p>Forks: 183</p>
            <p>Stars today: 46 stars today</p>
            <h2>README</h2><pre># strudel

[![Strudel test status](https://github.com/tidalcycles/strudel/actions/workflows/test.yml/badge.svg)](https://github.com/tidalcycles/strudel/actions) [![DOI](https://zenodo.org/badge/450927247.svg)](https://doi.org/10.5281/zenodo.6659278)

An experiment in making a [Tidal](https://github.com/tidalcycles/tidal/) using web technologies. This software is a bit more stable now, but please continue to tread carefully.

- Try it here: &lt;https://strudel.cc&gt;
- Docs: &lt;https://strudel.cc/learn&gt;
- Technical Blog Post: &lt;https://loophole-letters.vercel.app/strudel&gt;
- 1 Year of Strudel Blog Post: &lt;https://loophole-letters.vercel.app/strudel1year&gt;
- 2 Years of Strudel Blog Post: &lt;https://strudel.cc/blog/#year-2&gt;

## Running Locally

After cloning the project, you can run the REPL locally:

1. Install [Node.js](https://nodejs.org/)
2. Install [pnpm](https://pnpm.io/installation)
3. Install dependencies by running the following command:
   ```bash
   pnpm i
   ```
4. Run the development server:
   ```bash
   pnpm dev
   ```

## Using Strudel In Your Project

This project is organized into many [packages](./packages), which are also available on [npm](https://www.npmjs.com/search?q=%40strudel).

Read more about how to use these in your own project [here](https://strudel.cc/technical-manual/project-start).

You will need to abide by the terms of the [GNU Affero Public Licence v3](LICENSE.md). As such, Strudel code can only be shared within free/open source projects under the same license -- see the license for details.

Licensing info for the default sound banks can be found over on the [dough-samples](https://github.com/felixroos/dough-samples/blob/main/README.md) repository.

## Contributing

There are many ways to contribute to this project! See [contribution guide](./CONTRIBUTING.md).

&lt;a href=&quot;https://github.com/tidalcycles/strudel/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=tidalcycles/strudel&quot; /&gt;
&lt;/a&gt;

Made with [contrib.rocks](https://contrib.rocks).

## Community

There is a #strudel channel on the TidalCycles discord: &lt;https://discord.com/invite/HGEdXmRkzT&gt;

You can also ask questions and find related discussions on the tidal club forum: &lt;https://club.tidalcycles.org/&gt;

The discord and forum is shared with the haskell (tidal) and python (vortex) siblings of this project.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[CesiumGS/cesium]]></title>
            <link>https://github.com/CesiumGS/cesium</link>
            <guid>https://github.com/CesiumGS/cesium</guid>
            <pubDate>Thu, 12 Jun 2025 00:04:39 GMT</pubDate>
            <description><![CDATA[An open-source JavaScript library for world-class 3D globes and maps üåé]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/CesiumGS/cesium">CesiumGS/cesium</a></h1>
            <p>An open-source JavaScript library for world-class 3D globes and maps üåé</p>
            <p>Language: JavaScript</p>
            <p>Stars: 13,780</p>
            <p>Forks: 3,613</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre># CesiumJS

[![Build Status](https://github.com/CesiumGS/cesium/actions/workflows/dev.yml/badge.svg)](https://github.com/CesiumGS/cesium/actions/workflows/dev.yml)
[![npm](https://img.shields.io/npm/v/cesium)](https://www.npmjs.com/package/cesium)
[![Docs](https://img.shields.io/badge/docs-online-orange.svg)](https://cesium.com/learn/)

![Cesium](https://github.com/CesiumGS/cesium/wiki/logos/Cesium_Logo_Color.jpg)

CesiumJS is a JavaScript library for creating 3D globes and 2D maps in a web browser without a plugin. It uses WebGL for hardware-accelerated graphics, and is cross-platform, cross-browser, and tuned for dynamic-data visualization.

Built on open formats, CesiumJS is designed for robust interoperability and scaling for massive datasets.

---

[**Examples**](https://sandcastle.cesium.com/) :earth_asia: [**Docs**](https://cesium.com/learn/cesiumjs-learn/) :earth_americas: [**Website**](https://cesium.com/cesiumjs) :earth_africa: [**Forum**](https://community.cesium.com/) :earth_asia: [**User Stories**](https://cesium.com/user-stories/)

---

## :rocket: Get started

Visit the [Downloads page](https://cesium.com/downloads/) to download a pre-built copy of CesiumJS.

### npm &amp; yarn

If you‚Äôre building your application using a module bundler such as Webpack, Parcel, or Rollup, you can install CesiumJS via the [`cesium` npm package](https://www.npmjs.com/package/cesium):

```sh
npm install cesium --save
```

Then, import CesiumJS in your app code. Import individual modules to benefit from tree shaking optimizations through most build tools:

```js
import { Viewer } from &quot;cesium&quot;;
import &quot;cesium/Build/Cesium/Widgets/widgets.css&quot;;

const viewer = new Viewer(&quot;cesiumContainer&quot;);
```

In addition to the `cesium` package, CesiumJS is also [distributed as scoped npm packages for better dependency management](https://cesium.com/blog/2022/12/07/modular-structure-in-cesiumjs/):

- [`@cesium/engine`](./packages/engine/README.md) - CesiumJS&#039;s core, rendering, and data APIs
- [`@cesium/widgets`](./packages/widgets/README.md) - A widgets library for use with CesiumJS

### What next?

See our [Quickstart Guide](https://cesium.com/learn/cesiumjs-learn/cesiumjs-quickstart/) for more information on getting a CesiumJS app up and running.

Instructions for serving local data are in the CesiumJS
[Offline Guide](./Documentation/OfflineGuide/README.md).

Interested in contributing? See [CONTRIBUTING.md](CONTRIBUTING.md). :heart:

## :green_book: License

[Apache 2.0](http://www.apache.org/licenses/LICENSE-2.0.html). CesiumJS is free for both commercial and non-commercial use.

## :earth_americas: Where does the Global 3D Content come from?

The Cesium platform follows an [open-core business model](https://cesium.com/why-cesium/open-ecosystem/cesium-business-model/) with open source runtime engines such as CesiumJS and optional commercial subscription to Cesium ion.

CesiumJS can stream [3D content such as terrain, imagery, and 3D Tiles from the commercial Cesium ion platform](https://cesium.com/platform/cesium-ion/content/) alongside open standards from other offline or online services. We provide Cesium ion as the quickest option for all users to get up and running, but you are free to use any combination of content sources with CesiumJS that you please.

Bring your own data for tiling, hosting, and streaming from Cesium ion. [Using Cesium ion](https://cesium.com/ion/signup/) helps support CesiumJS development.

## :white_check_mark: Features

- Stream in 3D Tiles and other standard formats from Cesium ion or another source
- Visualize and analyze on a high-precision WGS84 globe
- Share with users on desktop or mobile

See more in the [CesiumJS Features Checklist](https://github.com/CesiumGS/cesium/wiki/CesiumJS-Features-Checklist).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[seanprashad/leetcode-patterns]]></title>
            <link>https://github.com/seanprashad/leetcode-patterns</link>
            <guid>https://github.com/seanprashad/leetcode-patterns</guid>
            <pubDate>Thu, 12 Jun 2025 00:04:38 GMT</pubDate>
            <description><![CDATA[A pattern-based approach for learning technical interview questions]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/seanprashad/leetcode-patterns">seanprashad/leetcode-patterns</a></h1>
            <p>A pattern-based approach for learning technical interview questions</p>
            <p>Language: JavaScript</p>
            <p>Stars: 10,726</p>
            <p>Forks: 1,838</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre># Leetcode Patterns [![github-pages](https://github.com/seanprashad/leetcode-patterns/actions/workflows/github-pages.yml/badge.svg)](https://github.com/seanprashad/leetcode-patterns/actions/workflows/github-pages.yml) [![run-cron](https://github.com/seanprashad/leetcode-patterns/actions/workflows/run-cron.yml/badge.svg)](https://github.com/seanprashad/leetcode-patterns/actions/workflows/run-cron.yml)

## Table of Contents

- [Background](#background)
- [Fundamentals](#fundamentals)
- [Notes](#notes)
- [Question List](#question-list)
- [Solutions](#solutions)
- [Suggestions](#suggestions)
- [Acknowledgements](#acknowledgements)

## Background

This repo is intended for any individual wanting to improve their problem
solving skills for software engineering interviews.

Problems are grouped under their respective subtopic, in order to focus on
repeatedly applying common patterns rather than randomly tackling questions.

All questions are available on [leetcode.com] with some requiring [leetcode premium].

## Fundamentals

To find the greatest amount of success when practicing, it is highly recommended
to know the methods and runtimes of the following data structures and their
operations:

- Arrays
- Maps
- Linked Lists
- Queues
- Heaps
- Stacks
- Trees
- Graphs

In addition, you should have a good grasp on common algorithms such as:

- Breadth-first search
- Depth-first search
- Binary search
- Recursion

## Notes

[This pdf] contains information for the main data structures in Java.

Other useful methods to know include [`substring()`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#substring-int-int-), [`toCharArray()`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#toCharArray--), [`Math.max()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#max-int-int-),
[`Math.min()`](https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#min-int-int-), and [`Arrays.fill()`](https://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html#fill-int:A-int-).

## Question List

The entire question list can be found here:
https://seanprashad.com/leetcode-patterns/.

## Solutions

Solutions written in Java can be found in the [solutions] branch.

## Suggestions

Think a question should/shouldn&#039;t be included? Wish there was another feature?
Feel free to open an [issue] with your suggestion!

## Acknowledgements

This list is heavily inspired from [Grokking the Coding Interview] with
additional problems extracted from the [Blind 75 list] and this hackernoon article
on [14 patterns to ace any coding interview question].

[leetcode.com]: https://leetcode.com
[leetcode premium]: https://leetcode.com/subscribe/
[this pdf]: https://drive.google.com/open?id=1ao4ZA28zzBttDkuS6MLQI52gDs_CJZEm
[solutions]: https://github.com/SeanPrashad/leetcode-patterns/tree/solutions
[grokking the coding interview]: https://www.educative.io/courses/grokking-the-coding-interview
[issue]: https://github.com/SeanPrashad/leetcode-patterns/issues/new
[blind 75 list]: https://www.teamblind.com/article/New-Year-Gift---Curated-List-of-Top-100-LeetCode-Questions-to-Save-Your-Time-OaM1orEU?utm_source=share&amp;utm_medium=ios_app
[14 patterns to ace any coding interview question]: https://hackernoon.com/14-patterns-to-ace-any-coding-interview-question-c5bb3357f6ed
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[quasarframework/quasar]]></title>
            <link>https://github.com/quasarframework/quasar</link>
            <guid>https://github.com/quasarframework/quasar</guid>
            <pubDate>Thu, 12 Jun 2025 00:04:37 GMT</pubDate>
            <description><![CDATA[Quasar Framework - Build high-performance VueJS user interfaces in record time]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/quasarframework/quasar">quasarframework/quasar</a></h1>
            <p>Quasar Framework - Build high-performance VueJS user interfaces in record time</p>
            <p>Language: JavaScript</p>
            <p>Stars: 26,642</p>
            <p>Forks: 3,615</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre>![Quasar Framework logo](https://cdn.quasar.dev/logo-v2/header.png)

# Quasar Framework

&gt; Build high-performance VueJS user interfaces in record time: responsive Single Page Apps, SSR Apps, PWAs, Browser extensions, Hybrid Mobile Apps and Electron Apps. If you want, all using the same codebase!

&lt;img src=&quot;https://img.shields.io/npm/v/quasar?label=quasar&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/app-webpack?label=@quasar/app-webpack&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/app-vite?label=@quasar/app-vite&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/cli?label=@quasar/cli&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/extras.svg?label=@quasar/extras&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/icongenie.svg?label=@quasar/icongenie&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/vite-plugin.svg?label=@quasar/vite-plugin&quot;&gt;

[![Join the chat at https://chat.quasar.dev](https://img.shields.io/badge/chat-on%20discord-7289da.svg)](https://chat.quasar.dev)
&lt;a href=&quot;https://forum.quasar.dev&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/community-forum-brightgreen.svg&quot;&gt;&lt;/a&gt;
[![https://good-labs.github.io/greater-good-affirmation/assets/images/badge.svg](https://good-labs.github.io/greater-good-affirmation/assets/images/badge.svg)](https://good-labs.github.io/greater-good-affirmation)

[![UI Tests](https://github.com/quasarframework/quasar/actions/workflows/tests-on-pr.yml/badge.svg?branch=dev)](https://github.com/quasarframework/quasar/actions/workflows/tests-on-pr.yml)

Please submit a PR to https://github.com/quasarframework/quasar-awesome with your website/app/Quasar tutorial/video etc. Thank you!

## Supporting Quasar
Quasar Framework is an MIT-licensed open source project. Its ongoing development is made possible thanks to the support by these awesome [backers](https://github.com/rstoenescu/quasar-framework/blob/dev/backers.md).

**Please read our manifest on [Why donations are important](https://quasar.dev/why-donate)**. If you&#039;d like to become a donator, check out [Quasar Framework&#039;s Donator campaign](https://donate.quasar.dev).

### Proudly sponsored by:

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://dreamonkey.com/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/Dreamonkey.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://www.hapag-lloyd.com/en/landingpage/quasar.html&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/HapagLloyd.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;&lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://irewind.com&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/iRewind.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td&gt;&amp;nbsp;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;&lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://qintil.com/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/Qintil.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://synestia.pl/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/Synestia.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;&lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://letsbutterfly.com/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/Letsbutterfly.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://kalisio.com/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/Kalisio.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;&lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://comcomservices.com/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/COMCOMService.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://digitalocean.com/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/DigitalOcean.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;&lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://www.projectfinance.io/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/ProjectFinance.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://ib-langenthal.ch/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/iBL.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;&lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://jugglestreet.com.au/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/JuggleSt.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://www.nodesol.com/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/Nodesol.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;&lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://www.acornfinance.com&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/AcornFinance.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://www.certible.com/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/Certible.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;&lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;
        &lt;a href=&quot;https://www.bairesdev.com/sponsoring-open-source-projects/&quot; target=&quot;_blank&quot;&gt;
          &lt;img width=&quot;200px&quot; height=&quot;100px&quot; src=&quot;https://cdn.quasar.dev/logo-sponsors-v2/light/BairesDev.svg&quot;&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td&gt;&amp;nbsp;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

## Documentation

Head on to the Quasar Framework official website: [https://quasar.dev](https://quasar.dev)

## Stay in Touch

For latest releases and announcements, follow us on our Twitter account: [@quasarframework](https://twitter.com/quasarframework)

## Chat Support

Ask questions at the official community Discord server: [https://chat.quasar.dev](https://chat.quasar.dev)

## Community Forum

Ask questions at the official community forum: [https://forum.quasar.dev](https://forum.quasar.dev)

## Contributing

Please make sure to read the [Contributing Guide](./CONTRIBUTING.md) before making a pull request. If you have a Quasar-related project/component/tool, add it with a pull request to [this curated list](https://github.com/quasarframework/quasar-awesome)!

Thank you to all the people who already [contributed to Quasar](https://github.com/quasarframework/quasar/graphs/contributors)!

## Semver
Quasar is following [Semantic Versioning 2.0](https://semver.org/).

## License

Copyright (c) 2015-present Razvan Stoenescu

[MIT License](http://en.wikipedia.org/wiki/MIT_License)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[open-webui/open-webui]]></title>
            <link>https://github.com/open-webui/open-webui</link>
            <guid>https://github.com/open-webui/open-webui</guid>
            <pubDate>Thu, 12 Jun 2025 00:04:36 GMT</pubDate>
            <description><![CDATA[User-friendly AI Interface (Supports Ollama, OpenAI API, ...)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/open-webui/open-webui">open-webui/open-webui</a></h1>
            <p>User-friendly AI Interface (Supports Ollama, OpenAI API, ...)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 98,480</p>
            <p>Forks: 12,926</p>
            <p>Stars today: 156 stars today</p>
            <h2>README</h2><pre># Open WebUI üëã

![GitHub stars](https://img.shields.io/github/stars/open-webui/open-webui?style=social)
![GitHub forks](https://img.shields.io/github/forks/open-webui/open-webui?style=social)
![GitHub watchers](https://img.shields.io/github/watchers/open-webui/open-webui?style=social)
![GitHub repo size](https://img.shields.io/github/repo-size/open-webui/open-webui)
![GitHub language count](https://img.shields.io/github/languages/count/open-webui/open-webui)
![GitHub top language](https://img.shields.io/github/languages/top/open-webui/open-webui)
![GitHub last commit](https://img.shields.io/github/last-commit/open-webui/open-webui?color=red)
[![Discord](https://img.shields.io/badge/Discord-Open_WebUI-blue?logo=discord&amp;logoColor=white)](https://discord.gg/5rJgQTnV4s)
[![](https://img.shields.io/static/v1?label=Sponsor&amp;message=%E2%9D%A4&amp;logo=GitHub&amp;color=%23fe8e86)](https://github.com/sponsors/tjbck)

**Open WebUI is an [extensible](https://docs.openwebui.com/features/plugin/), feature-rich, and user-friendly self-hosted AI platform designed to operate entirely offline.** It supports various LLM runners like **Ollama** and **OpenAI-compatible APIs**, with **built-in inference engine** for RAG, making it a **powerful AI deployment solution**.

![Open WebUI Demo](./demo.gif)

&gt; [!TIP]  
&gt; **Looking for an [Enterprise Plan](https://docs.openwebui.com/enterprise)?** ‚Äì **[Speak with Our Sales Team Today!](mailto:sales@openwebui.com)**
&gt;
&gt; Get **enhanced capabilities**, including **custom theming and branding**, **Service Level Agreement (SLA) support**, **Long-Term Support (LTS) versions**, and **more!**

For more information, be sure to check out our [Open WebUI Documentation](https://docs.openwebui.com/).

## Key Features of Open WebUI ‚≠ê

- üöÄ **Effortless Setup**: Install seamlessly using Docker or Kubernetes (kubectl, kustomize or helm) for a hassle-free experience with support for both `:ollama` and `:cuda` tagged images.

- ü§ù **Ollama/OpenAI API Integration**: Effortlessly integrate OpenAI-compatible APIs for versatile conversations alongside Ollama models. Customize the OpenAI API URL to link with **LMStudio, GroqCloud, Mistral, OpenRouter, and more**.

- üõ°Ô∏è **Granular Permissions and User Groups**: By allowing administrators to create detailed user roles and permissions, we ensure a secure user environment. This granularity not only enhances security but also allows for customized user experiences, fostering a sense of ownership and responsibility amongst users.

- üì± **Responsive Design**: Enjoy a seamless experience across Desktop PC, Laptop, and Mobile devices.

- üì± **Progressive Web App (PWA) for Mobile**: Enjoy a native app-like experience on your mobile device with our PWA, providing offline access on localhost and a seamless user interface.

- ‚úíÔ∏èüî¢ **Full Markdown and LaTeX Support**: Elevate your LLM experience with comprehensive Markdown and LaTeX capabilities for enriched interaction.

- üé§üìπ **Hands-Free Voice/Video Call**: Experience seamless communication with integrated hands-free voice and video call features, allowing for a more dynamic and interactive chat environment.

- üõ†Ô∏è **Model Builder**: Easily create Ollama models via the Web UI. Create and add custom characters/agents, customize chat elements, and import models effortlessly through [Open WebUI Community](https://openwebui.com/) integration.

- üêç **Native Python Function Calling Tool**: Enhance your LLMs with built-in code editor support in the tools workspace. Bring Your Own Function (BYOF) by simply adding your pure Python functions, enabling seamless integration with LLMs.

- üìö **Local RAG Integration**: Dive into the future of chat interactions with groundbreaking Retrieval Augmented Generation (RAG) support. This feature seamlessly integrates document interactions into your chat experience. You can load documents directly into the chat or add files to your document library, effortlessly accessing them using the `#` command before a query.

- üîç **Web Search for RAG**: Perform web searches using providers like `SearXNG`, `Google PSE`, `Brave Search`, `serpstack`, `serper`, `Serply`, `DuckDuckGo`, `TavilySearch`, `SearchApi` and `Bing` and inject the results directly into your chat experience.

- üåê **Web Browsing Capability**: Seamlessly integrate websites into your chat experience using the `#` command followed by a URL. This feature allows you to incorporate web content directly into your conversations, enhancing the richness and depth of your interactions.

- üé® **Image Generation Integration**: Seamlessly incorporate image generation capabilities using options such as AUTOMATIC1111 API or ComfyUI (local), and OpenAI&#039;s DALL-E (external), enriching your chat experience with dynamic visual content.

- ‚öôÔ∏è **Many Models Conversations**: Effortlessly engage with various models simultaneously, harnessing their unique strengths for optimal responses. Enhance your experience by leveraging a diverse set of models in parallel.

- üîê **Role-Based Access Control (RBAC)**: Ensure secure access with restricted permissions; only authorized individuals can access your Ollama, and exclusive model creation/pulling rights are reserved for administrators.

- üåêüåç **Multilingual Support**: Experience Open WebUI in your preferred language with our internationalization (i18n) support. Join us in expanding our supported languages! We&#039;re actively seeking contributors!

- üß© **Pipelines, Open WebUI Plugin Support**: Seamlessly integrate custom logic and Python libraries into Open WebUI using [Pipelines Plugin Framework](https://github.com/open-webui/pipelines). Launch your Pipelines instance, set the OpenAI URL to the Pipelines URL, and explore endless possibilities. [Examples](https://github.com/open-webui/pipelines/tree/main/examples) include **Function Calling**, User **Rate Limiting** to control access, **Usage Monitoring** with tools like Langfuse, **Live Translation with LibreTranslate** for multilingual support, **Toxic Message Filtering** and much more.

- üåü **Continuous Updates**: We are committed to improving Open WebUI with regular updates, fixes, and new features.

Want to learn more about Open WebUI&#039;s features? Check out our [Open WebUI documentation](https://docs.openwebui.com/features) for a comprehensive overview!

## Sponsors üôå

#### Emerald

&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://n8n.io/&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/n8n.png&quot; alt=&quot;n8n&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt; ‚Ä¢ Does your interface have a backend yet?&lt;br&gt;Try &lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://warp.dev/open-webui&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/warp.png&quot; alt=&quot;Warp&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://warp.dev/open-webui&quot;&gt;Warp&lt;/a&gt; ‚Ä¢ The intelligent terminal for developers
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;utm_medium=paid-ad-placement&amp;utm_campaign=OpenWebUI-Docs&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/tailscale.png&quot; alt=&quot;Tailscale&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;utm_medium=paid-ad-placement&amp;utm_campaign=OpenWebUI-Docs&quot;&gt;Tailscale&lt;/a&gt; ‚Ä¢ Connect self-hosted AI to any device with Tailscale
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

---

We are incredibly grateful for the generous support of our sponsors. Their contributions help us to maintain and improve our project, ensuring we can continue to deliver quality work to our community. Thank you!

## How to Install üöÄ

### Installation via Python pip üêç

Open WebUI can be installed using pip, the Python package installer. Before proceeding, ensure you&#039;re using **Python 3.11** to avoid compatibility issues.

1. **Install Open WebUI**:
   Open your terminal and run the following command to install Open WebUI:

   ```bash
   pip install open-webui
   ```

2. **Running Open WebUI**:
   After installation, you can start Open WebUI by executing:

   ```bash
   open-webui serve
   ```

This will start the Open WebUI server, which you can access at [http://localhost:8080](http://localhost:8080)

### Quick Start with Docker üê≥

&gt; [!NOTE]  
&gt; Please note that for certain Docker environments, additional configurations might be needed. If you encounter any connection issues, our detailed guide on [Open WebUI Documentation](https://docs.openwebui.com/) is ready to assist you.

&gt; [!WARNING]
&gt; When using Docker to install Open WebUI, make sure to include the `-v open-webui:/app/backend/data` in your Docker command. This step is crucial as it ensures your database is properly mounted and prevents any loss of data.

&gt; [!TIP]  
&gt; If you wish to utilize Open WebUI with Ollama included or CUDA acceleration, we recommend utilizing our official images tagged with either `:cuda` or `:ollama`. To enable CUDA, you must install the [Nvidia CUDA container toolkit](https://docs.nvidia.com/dgx/nvidia-container-runtime-upgrade/) on your Linux/WSL system.

### Installation with Default Configuration

- **If Ollama is on your computer**, use this command:

  ```bash
  docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **If Ollama is on a Different Server**, use this command:

  To connect to Ollama on another server, change the `OLLAMA_BASE_URL` to the server&#039;s URL:

  ```bash
  docker run -d -p 3000:8080 -e OLLAMA_BASE_URL=https://example.com -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **To run Open WebUI with Nvidia GPU support**, use this command:

  ```bash
  docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda
  ```

### Installation for OpenAI API Usage Only

- **If you&#039;re only using OpenAI API**, use this command:

  ```bash
  docker run -d -p 3000:8080 -e OPENAI_API_KEY=your_secret_key -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

### Installing Open WebUI with Bundled Ollama Support

This installation method uses a single container image that bundles Open WebUI with Ollama, allowing for a streamlined setup via a single command. Choose the appropriate command based on your hardware setup:

- **With GPU Support**:
  Utilize GPU resources by running the following command:

  ```bash
  docker run -d -p 3000:8080 --gpus=all -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

- **For CPU Only**:
  If you&#039;re not using a GPU, use this command instead:

  ```bash
  docker run -d -p 3000:8080 -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

Both commands facilitate a built-in, hassle-free installation of both Open WebUI and Ollama, ensuring that you can get everything up and running swiftly.

After installation, you can access Open WebUI at [http://localhost:3000](http://localhost:3000). Enjoy! üòÑ

### Other Installation Methods

We offer various installation alternatives, including non-Docker native installation methods, Docker Compose, Kustomize, and Helm. Visit our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/) or join our [Discord community](https://discord.gg/5rJgQTnV4s) for comprehensive guidance.

Look at the [Local Development Guide](https://docs.openwebui.com/getting-started/advanced-topics/development) for instructions on setting up a local development environment.

### Troubleshooting

Encountering connection issues? Our [Open WebUI Documentation](https://docs.openwebui.com/troubleshooting/) has got you covered. For further assistance and to join our vibrant community, visit the [Open WebUI Discord](https://discord.gg/5rJgQTnV4s).

#### Open WebUI: Server Connection Error

If you&#039;re experiencing connection issues, it‚Äôs often due to the WebUI docker container not being able to reach the Ollama server at 127.0.0.1:11434 (host.docker.internal:11434) inside the container . Use the `--network=host` flag in your docker command to resolve this. Note that the port changes from 3000 to 8080, resulting in the link: `http://localhost:8080`.

**Example Docker Command**:

```bash
docker run -d --network=host -v open-webui:/app/backend/data -e OLLAMA_BASE_URL=http://127.0.0.1:11434 --name open-webui --restart always ghcr.io/open-webui/open-webui:main
```

### Keeping Your Docker Installation Up-to-Date

In case you want to update your local Docker installation to the latest version, you can do it with [Watchtower](https://containrrr.dev/watchtower/):

```bash
docker run --rm --volume /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --run-once open-webui
```

In the last part of the command, replace `open-webui` with your container name if it is different.

Check our Updating Guide available in our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/updating).

### Using the Dev Branch üåô

&gt; [!WARNING]
&gt; The `:dev` branch contains the latest unstable features and changes. Use it at your own risk as it may have bugs or incomplete features.

If you want to try out the latest bleeding-edge features and are okay with occasional instability, you can use the `:dev` tag like this:

```bash
docker run -d -p 3000:8080 -v open-webui:/app/backend/data --name open-webui --add-host=host.docker.internal:host-gateway --restart always ghcr.io/open-webui/open-webui:dev
```

### Offline Mode

If you are running Open WebUI in an offline environment, you can set the `HF_HUB_OFFLINE` environment variable to `1` to prevent attempts to download models from the internet.

```bash
export HF_HUB_OFFLINE=1
```

## What&#039;s Next? üåü

Discover upcoming features on our roadmap in the [Open WebUI Documentation](https://docs.openwebui.com/roadmap/).

## License üìú

This project is licensed under the [Open WebUI License](LICENSE), a revised BSD-3-Clause license. You receive all the same rights as the classic BSD-3 license: you can use, modify, and distribute the software, including in proprietary and commercial products, with minimal restrictions. The only additional requirement is to preserve the &quot;Open WebUI&quot; branding, as detailed in the LICENSE file. For full terms, see the [LICENSE](LICENSE) document. üìÑ

## Support üí¨

If you have any questions, suggestions, or need assistance, please open an issue or join our
[Open WebUI Discord community](https://discord.gg/5rJgQTnV4s) to connect with us! ü§ù

## Star History

&lt;a href=&quot;https://star-history.com/#open-webui/open-webui&amp;Date&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&amp;theme=dark&quot; /&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
    &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

---

Created by [Timothy Jaeryang Baek](https://github.com/tjbck) - Let&#039;s make Open WebUI even more amazing together! üí™
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[ruvnet/rUv-dev]]></title>
            <link>https://github.com/ruvnet/rUv-dev</link>
            <guid>https://github.com/ruvnet/rUv-dev</guid>
            <pubDate>Thu, 12 Jun 2025 00:04:35 GMT</pubDate>
            <description><![CDATA[Ai power Dev using the rUv approach]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ruvnet/rUv-dev">ruvnet/rUv-dev</a></h1>
            <p>Ai power Dev using the rUv approach</p>
            <p>Language: JavaScript</p>
            <p>Stars: 364</p>
            <p>Forks: 68</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre># create-sparc

&gt; **Transform your development workflow with SPARC methodology, AI-driven code generation, and AI-powered assistance**

`create-sparc` is a powerful agentic toolkit that changes how you build software by integrating the structured SPARC methodology, AI-driven code generation (AIGI), and advanced AI assistance through Roo Code and Model Context Protocol (MCP) capabilities. This comprehensive platform enables AI agents to securely connect with external services like databases, APIs, and cloud resources, allowing developers to create modular, secure, and maintainable applications with unprecedented efficiency while seamlessly bridging the gap between AI and real-world systems.
 
## Installation

You don&#039;t need to install this package directly. Use npx to run it:

```bash
npx create-sparc init
```

## Why SPARC?

The SPARC methodology (Specification, Pseudocode, Architecture, Refinement, Completion) breaks down complex development tasks into manageable phases, each handled by specialized AI assistants. This approach ensures:

- **Structured Development**: Clear progression through well-defined phases
- **Modular Architecture**: Code naturally organized into maintainable components
- **Security by Design**: No hard-coded secrets, proper configuration management
- **Comprehensive Testing**: Built-in test-driven development practices
- **Thorough Documentation**: Automatically generated, always up-to-date

## Prerequisites

### Roo Code VS Code Extension

To fully leverage the SPARC methodology, you&#039;ll need the Roo Code extension for Visual Studio Code. This powerful extension provides:

- **AI-powered coding assistance** with specialized modes for different development phases
- **Context-aware interactions** that understand your project structure
- **Integrated task management** with the Boomerang task concept
- **Seamless file operations** directly within your editor

You can install the Roo Code extension from the [VS Code Marketplace](https://marketplace.visualstudio.com/items?itemName=RooVeterinaryInc.roo-cline).

## Core Features

- Scaffolds new projects with SPARC methodology structure
- Creates AI-driven code generation (AIGI) projects with specialized components
- Provides minimal Roo mode framework for custom mode development
- Sets up .roo directory and .roomodes file for SPARC modes
- Supports TypeScript projects
- Configurable templates
- Symlink support for efficient file management
- MCP (Model Context Protocol) integration for external services
- Secure credential management
- Comprehensive documentation generation

## What is MCP?

MCP (Model-Context Protocol) is a powerful bridge between your applications and external services that enables AI-assisted interactions with databases, APIs, and cloud resources. With MCP integration in create-sparc, you can:

### Seamless Service Integration

MCP allows your AI assistants to directly interact with external services like Supabase, OpenAI, GitHub, AWS, and Firebase through a standardized protocol. This means your Roo Code assistant can:

- **Query databases** without you writing SQL
- **Deploy applications** to cloud providers
- **Manage infrastructure** across multiple platforms
- **Interact with APIs** using natural language requests
- **Generate and analyze data** from various sources

### Secure by Design

MCP prioritizes security through:

- **Environment variable references** for all sensitive credentials
- **Permission scoping** that follows the principle of least privilege
- **No hardcoded secrets** in any configuration files
- **Automatic security auditing** to detect potential vulnerabilities
- **Secure credential management** with clear separation from code

### Easy Configuration

The MCP Wizard makes setup simple:

- **Interactive configuration** guides you through connecting services
- **Automatic discovery** of available MCP servers
- **Validation and verification** of all configurations
- **Clear documentation** for each integration step
- **Seamless updates** when service requirements change

## Usage

### Create a new project

You can create a new project in two ways:

```bash
# Create a full project with a specific name
npx create-sparc init my-project

# Create only .roo and .roomodes files in the current directory
npx create-sparc init
```

You can also use the shorthand version:

```bash
npx create-sparc my-project
```

### Create an AI-driven Code Generation (AIGI) project

If you want to create a project focused on AI-driven code generation with specialized components:

```bash
# Create a new AIGI project with a specific name
npx create-sparc aigi init my-project

# Initialize AIGI files in the current directory
npx create-sparc aigi init
```

The AIGI project provides specialized components for prompt engineering, code quality assessment, and iterative refinement of AI-generated code.

### Create a minimal Roo mode framework

If you want to create a lightweight framework for custom Roo modes without the full SPARC structure:

```bash
# Create a new minimal Roo mode framework with a specific name
npx create-sparc minimal init my-project

# Initialize minimal Roo mode files in the current directory
npx create-sparc minimal init
```

The minimal Roo mode framework provides just the essential files and structure needed to get started with Roo mode development, making it ideal for developers who want to create their own custom modes.

### Running with Node directly

If you&#039;re running the CLI directly with Node (instead of using npx), use the following format:

```bash
# When running with Node directly
node bin/index.js init my-project
node bin/index.js aigi init my-project
node bin/index.js minimal init my-project

# IMPORTANT: Do not include &#039;create-sparc&#039; in the command when running with Node
# Incorrect: node bin/index.js create-sparc init
# Correct:   node bin/index.js init
```

The `create-sparc` prefix is only used when running through npx, as it&#039;s the package name.

Options for init command:
- `--template &lt;name&gt;` - Template to use (default: &quot;default&quot;)
- `--skip-install` - Skip dependency installation
- `--use-npm` - Use npm as package manager
- `--use-yarn` - Use yarn as package manager
- `--use-pnpm` - Use pnpm as package manager
- `--no-git` - Skip git initialization
- `--typescript` - Use TypeScript
- `--no-symlink` - Disable symlink creation

Options for aigi command:
- `-f, --force` - Allow initialization in non-empty directories
- `--skip-install` - Skip dependency installation
- `--use-npm` - Use npm as package manager
- `--use-yarn` - Use yarn as package manager
- `--use-pnpm` - Use pnpm as package manager
- `--no-git` - Skip git initialization
- `--typescript` - Use TypeScript
- `--no-symlink` - Disable symlink creation

Options for minimal command:
- `-f, --force` - Allow initialization in non-empty directories
- `--skip-install` - Skip dependency installation
- `--use-npm` - Use npm as package manager
- `--use-yarn` - Use yarn as package manager
- `--use-pnpm` - Use pnpm as package manager
- `--no-git` - Skip git initialization
- `--typescript` - Use TypeScript
- `--no-symlink` - Disable symlink creation

### Initialize SPARC files in an existing project

If you want to add SPARC methodology to an existing project, you can run:

```bash
# Navigate to your project directory
cd my-existing-project

# Initialize SPARC files (.roo and .roomodes) without creating project structure
npx create-sparc init

# Or if running with Node directly
node path/to/bin/index.js init
```

This will only create the necessary SPARC files in your current directory without modifying your existing project structure.

### Add a component to an existing project

```bash
npx create-sparc add component --name MyComponent
```

Options:
- `--name &lt;name&gt;` - Component name
- `--type &lt;type&gt;` - Component type (default: &quot;component&quot;)
- `--path &lt;path&gt;` - Custom path for component

### Get help

```bash
npx create-sparc help
```

To get help for a specific command:

```bash
# Get help for the init command
npx create-sparc help init

# Get help for the minimal command
npx create-sparc help minimal

# Get help for the aigi command
npx create-sparc help aigi
```

## SPARC Methodology

SPARC stands for:

- **S**pecification
- **P**seudocode
- **A**rchitecture
- **R**efinement
- **C**ompletion

This methodology provides a structured approach to software development, ensuring high-quality, maintainable code. SPARC enables you to deconstruct large, intricate projects into manageable subtasks, each delegated to a specialized mode.

### SPARC with Roo Code Integration

The SPARC methodology is fully integrated with Roo Code through the Boomerang task concept. This integration empowers you to build complex, production-ready, secure, and scalable applications by leveraging specialized AI assistants for different phases of development.

By using advanced reasoning models such as Claude 3.7 Sonnet, GPT-4o, and DeepSeek for analytical tasks, alongside instructive models for coding, DevOps, testing, and implementation, you create a robust, automated, and secure workflow.

### SPARC Modes

When you initialize a project with `npx create-sparc init`, the following specialized modes become available in your Roo Code environment:

- **‚ö°Ô∏è SPARC Orchestrator**: Breaks down large objectives into delegated subtasks aligned to the SPARC methodology
- **üìã Specification Writer**: Captures full project context and translates it into modular pseudocode with TDD anchors
- **üèóÔ∏è Architect**: Designs scalable, secure, and modular architectures based on requirements
- **üß† Auto-Coder**: Writes clean, efficient, modular code based on pseudocode and architecture
- **üß™ Tester (TDD)**: Implements Test-Driven Development by writing tests first and refactoring after minimal implementation
- **ü™≤ Debugger**: Troubleshoots runtime bugs, logic errors, or integration failures
- **üõ°Ô∏è Security Reviewer**: Performs static and dynamic audits to ensure secure code practices
- **üìö Documentation Writer**: Writes concise, clear, and modular Markdown documentation
- **üîó System Integrator**: Merges the outputs of all modes into a working, tested, production-ready system
- **üìà Deployment Monitor**: Observes the system post-launch, collecting performance, logs, and user feedback
- **üßπ Optimizer**: Refactors, modularizes, and improves system performance
- **‚ùì Ask**: Guides users in formulating precise, modular requests to delegate tasks
- **üöÄ DevOps**: Manages deployments and infrastructure operations across cloud providers
- **üìò SPARC Tutorial**: Guides new users through the SPARC development process
- **üîê Supabase Admin**: Designs and implements database schemas, RLS policies, triggers, and functions for Supabase projects
- **‚ôæÔ∏è MCP Integration**: Connects to and manages external services through MCP interfaces

Each mode operates within its own isolated context, ensuring focused and efficient task management while adhering to best practices‚Äîavoiding hard-coded environment variables, maintaining files under 500 lines, and ensuring a modular, extensible design.

## MCP Wizard

The MCP (Model Context Protocol) Wizard is a powerful feature that simplifies the configuration and management of external service integrations in your SPARC projects.

### What is the MCP Wizard?

The MCP Wizard is a configuration system that enables seamless integration between your SPARC projects and external services like databases, AI models, cloud providers, and more. It provides:

- **Simplified Service Configuration**: Easily connect to external services with guided setup
- **Secure Credential Management**: Store API keys and tokens as environment variable references
- **Permission Scoping**: Configure appropriate access levels for each service
- **AI Assistant Integration**: Enable Roo Code to interact with external services

The MCP Configuration Wizard consists of the following components:

1. **MCP Wizard** - Main entry point that orchestrates the configuration process
2. **Configuration Generator** - Creates MCP.json configurations and roomode definitions
3. **Registry Client** - Interacts with the MCP Registry API to discover available servers
4. **Security Module** - Ensures proper handling of sensitive information
5. **File Manager** - Provides safe and reliable file system operations for configurations

### MCP Configuration Files

The MCP Wizard manages two main configuration files:

1. **MCP Configuration File** (`.roo/mcp.json`): Contains server configurations, including command, arguments, and permission scopes.

2. **Roomodes File** (`.roomodes`): Contains roomode definitions for MCP servers, enabling AI assistants to interact with the servers.

Example MCP configuration:
```json
{
  &quot;mcpServers&quot;: {
    &quot;supabase&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;-y&quot;,
        &quot;@supabase/mcp-server-supabase@latest&quot;,
        &quot;--access-token&quot;,
        &quot;${env:SUPABASE_ACCESS_TOKEN}&quot;
      ],
      &quot;alwaysAllow&quot;: [
        &quot;list_tables&quot;,
        &quot;execute_sql&quot;
      ]
    }
  }
}
```

The MCP.json file follows this schema:

```json
{
  &quot;mcpServers&quot;: {
    &quot;[server-id]&quot;: {
      &quot;command&quot;: &quot;string&quot;,
      &quot;args&quot;: [&quot;string&quot;],
      &quot;alwaysAllow&quot;: [&quot;string&quot;],
      &quot;env&quot;: {
        &quot;ENV_VAR&quot;: &quot;value&quot;
      }
    }
  }
}
```

MCP integration roomodes follow this structure:

```json
{
  &quot;slug&quot;: &quot;mcp-[server-id]&quot;,
  &quot;name&quot;: &quot;Server Name Integration&quot;,
  &quot;model&quot;: &quot;claude-3-7-sonnet-20250219&quot;,
  &quot;roleDefinition&quot;: &quot;You are a specialized assistant...&quot;,
  &quot;customInstructions&quot;: &quot;Server-specific instructions...&quot;,
  &quot;groups&quot;: [&quot;read&quot;, &quot;edit&quot;, &quot;mcp&quot;],
  &quot;source&quot;: &quot;project&quot;
}
```

### Using the MCP Wizard

You can configure MCP servers using the interactive wizard:

```bash
npx create-sparc configure-mcp
```

This will guide you through the process of:
1. Discovering available MCP servers
2. Configuring server parameters and credentials
3. Setting appropriate permission scopes
4. Generating and updating configuration files

#### Interactive Mode Workflow

1. Run `npx create-sparc configure-mcp`
2. Select &quot;Add a new MCP server&quot;
3. Choose the server from the list or enter a server ID
4. Provide the required parameters (API keys, project IDs, etc.)
5. Review and confirm the configuration
6. Set up the necessary environment variables

#### Updating an Existing Server

1. Run `npx create-sparc configure-mcp`
2. Select &quot;Update an existing MCP server&quot;
3. Choose the server to update
4. Modify the parameters as needed
5. Review and confirm the changes

#### Removing a Server

1. Run `npx create-sparc configure-mcp`
2. Select &quot;Remove an MCP server&quot;
3. Choose the server to remove
4. Confirm the removal

### MCP Wizard CLI Commands

The MCP Wizard provides several command-line options:

```bash
# Start the interactive wizard
npx create-sparc configure-mcp

# List configured MCP servers
npx create-sparc configure-mcp --list

# Discover available MCP servers
npx create-sparc configure-mcp --discover

# Add a specific MCP server
npx create-sparc configure-mcp --add &lt;server-id&gt;

# Update a configured MCP server
npx create-sparc configure-mcp --update &lt;server-id&gt;

# Remove a configured MCP server
npx create-sparc configure-mcp --remove &lt;server-id&gt;

# Validate current MCP configuration
npx create-sparc configure-mcp --validate

# Create a backup of current configuration
npx create-sparc configure-mcp --backup

# Perform security audit on MCP configuration
npx create-sparc configure-mcp --security-audit

# Automatically fix security issues
npx create-sparc configure-mcp --security-audit --auto-fix

# Validate environment variable references
npx create-sparc configure-mcp --validate-env
```

### Advanced MCP Configuration Options

For more advanced use cases, you can customize the MCP configuration:

```bash
# Use a custom registry URL
npx create-sparc configure-mcp --registry https://your-custom-registry.com/api

# Specify custom paths for configuration files
npx create-sparc configure-mcp --config-path custom/path/mcp.json --roomodes-path custom/path/roomodes

# Run in non-interactive mode (for CI/CD pipelines)
npx create-sparc configure-mcp --add supabase --no-interactive
```

### MCP Security Features

The MCP Wizard includes comprehensive security features:

1. **Secure Credential Management**
   - Automatically detects sensitive parameters (API keys, tokens, passwords)
   - Converts hardcoded values to environment variable references
   - Provides clear instructions for setting up environment variables
   - Warning when sensitive information is detected in configuration files

2. **Permission Scoping**
   - Default permissions are set to the minimum required
   - Clear warnings are provided when expanding beyond recommended permissions
   - Detailed explanations of each permission&#039;s implications
   - Validation against recommended permission sets

3. **Security Auditing**
   - Scans configurations for security issues
   - Categorizes issues by severity (critical, warning, info)
   - Provides specific recommendations for each issue
   - Generates an overall security report

4. **Configuration Protection**
   - Existing configurations are backed up before modification
   - All configurations are validated before saving
   - Hash-based file integrity verification
   - Automatic recovery from failed operations

5. **Warning System**
   - Alerts about potentially insecure configurations
   - Provides clear explanations of security risks
   - Offers actionable recommendations
   - Can automatically fix common security issues

### MCP Registry Integration

The MCP Wizard integrates with the MCP Registry API to discover and retrieve information about available MCP servers. The Registry Client provides:

- **Server Discovery**: Find available MCP servers from the registry
- **Detailed Information**: Get comprehensive details about each server
- **Search Capabilities**: Find servers by name, tags, or other criteria
- **Caching**: Automatic caching for improved performance
- **Error Handling**: Robust error handling with retry mechanisms

Available MCP servers include:
- `supabase` - Supabase database server
- `openai` - OpenAI AI operations server
- `github` - GitHub repository operations server
- `aws` - AWS cloud operations server
- `firebase` - Firebase app development server

Each server includes:
- Basic metadata (name, description, version, etc.)
- Required and optional arguments
- Recommended permissions
- Example configurations
- Roomode templates

For testing purposes, a mock implementation of the Registry Client is available, which simulates all Registry API endpoints without requiring an actual registry server.

### MCP Integration Best Practices

1. **Version Control**: Add `.roo/mcp.json` to version control but exclude any files containing actual secrets.

2. **Environment Variables**: Use a `.env` file for local development (added to `.gitignore`) and proper environment variable management for production.

3. **Regular Updates**: Periodically check for updates to MCP servers and update your configurations.

4. **Permission Auditing**: Regularly review the permissions granted to each server and remove any that are no longer needed.

5. **Documentation**: Document the MCP servers used in your project and their configuration requirements for team members.

6. **Secure Storage of Environment Variables**:
   - For development: Use `.env` files (but don&#039;t commit them to version control)
   - For production: Use a secrets management solution (AWS Secrets Manager, HashiCorp Vault, etc.)

7. **Follow the principle of least privilege**: Grant only the permissions that are necessary

8. **Use specific package versions**: Avoid using &quot;latest&quot; to prevent supply chain attacks

## Benefits of SPARC with Roo Code

### Enhanced Development Workflow

- **Specialized AI Assistance**: Each development phase is handled by a dedicated AI mode optimized for that specific task
- **Context Isolation**: Tasks run in isolated contexts, ensuring focused

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[pmndrs/drei]]></title>
            <link>https://github.com/pmndrs/drei</link>
            <guid>https://github.com/pmndrs/drei</guid>
            <pubDate>Thu, 12 Jun 2025 00:04:34 GMT</pubDate>
            <description><![CDATA[ü•â useful helpers for react-three-fiber]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pmndrs/drei">pmndrs/drei</a></h1>
            <p>ü•â useful helpers for react-three-fiber</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,987</p>
            <p>Forks: 752</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre>[![Storybook](https://img.shields.io/static/v1?message=Storybook&amp;style=flat&amp;colorA=000000&amp;colorB=000000&amp;label=&amp;logo=storybook&amp;logoColor=ffffff)](https://drei.pmnd.rs/)
[![Version](https://img.shields.io/npm/v/@react-three/drei?style=flat&amp;colorA=000000&amp;colorB=000000)](https://www.npmjs.com/package/@react-three/drei)
[![Downloads](https://img.shields.io/npm/dt/@react-three/drei.svg?style=flat&amp;colorA=000000&amp;colorB=000000)](https://www.npmjs.com/package/@react-three/drei)
[![Discord Shield](https://img.shields.io/discord/740090768164651008?style=flat&amp;colorA=000000&amp;colorB=000000&amp;label=discord&amp;logo=discord&amp;logoColor=ffffff)](https://discord.com/channels/740090768164651008/741751532592038022)
[![Open in GitHub Codespaces](https://img.shields.io/static/v1?&amp;message=Open%20in%20%20Codespaces&amp;style=flat&amp;colorA=000000&amp;colorB=000000&amp;label=GitHub&amp;logo=github&amp;logoColor=ffffff)](https://github.com/codespaces/new?template_repository=pmndrs%2Fdrei)

[![logo](docs/logo.jpg)](https://codesandbox.io/s/bfplr)

A growing collection of useful helpers and fully functional, ready-made abstractions for [@react-three/fiber](https://github.com/pmndrs/react-three-fiber).

If you make a component that is generic enough to be useful to others, think about [CONTRIBUTING](CONTRIBUTING.md)!

```bash
npm install @react-three/drei
```

&gt; [!IMPORTANT]
&gt; this package is using the stand-alone [`three-stdlib`](https://github.com/pmndrs/three-stdlib) instead of [`three/examples/jsm`](https://github.com/mrdoob/three.js/tree/master/examples/jsm).

## Basic usage

```jsx
import { PerspectiveCamera, PositionalAudio, ... } from &#039;@react-three/drei&#039;
```

## React-native

```jsx
import { PerspectiveCamera, PositionalAudio, ... } from &#039;@react-three/drei/native&#039;
```

The `native` route of the library **does not** export `Html` or `Loader`. The default export of the library is `web` which **does** export `Html` and `Loader`.

## Documentation

https://pmndrs.github.io/drei

&lt;details&gt;
  &lt;summary&gt;Old doc&lt;/summary&gt;

&gt; [!WARNING]
&gt; Below is an archive of the anchors links with their new respective locations to the documentation website.
&gt; Do not update the links below, they are for reference only.

&lt;!-- &lt;table&gt;
  &lt;tr&gt;
    &lt;td valign=&quot;top&quot;&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&quot;#cameras&quot;&gt;Cameras&lt;/a&gt;&lt;/li&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#perspectivecamera&quot;&gt;PerspectiveCamera&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#orthographiccamera&quot;&gt;OrthographicCamera&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#cubecamera&quot;&gt;CubeCamera&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
        &lt;li&gt;&lt;a href=&quot;#controls&quot;&gt;Controls&lt;/a&gt;&lt;/li&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#cameracontrols&quot;&gt;CameraControls&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#controls&quot;&gt;FlyControls&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#controls&quot;&gt;MapControls&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#controls&quot;&gt;DeviceOrientationControls&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#controls&quot;&gt;TrackballControls&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#controls&quot;&gt;ArcballControls&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#controls&quot;&gt;PointerLockControls&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#controls&quot;&gt;FirstPersonControls&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#scrollcontrols&quot;&gt;ScrollControls&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#presentationcontrols&quot;&gt;PresentationControls&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#keyboardcontrols&quot;&gt;KeyboardControls&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#FaceControls&quot;&gt;FaceControls&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#motionpathcontrols&quot;&gt;MotionPathControls&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
        &lt;li&gt;&lt;a href=&quot;#gizmos&quot;&gt;Gizmos&lt;/a&gt;&lt;/li&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#gizmohelper&quot;&gt;GizmoHelper&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#pivotcontrols&quot;&gt;PivotControls&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#dragcontrols&quot;&gt;DragControls&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#transformcontrols&quot;&gt;TransformControls&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#grid&quot;&gt;Grid&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#helper--usehelper&quot;&gt;Helper / useHelper&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#helper&quot;&gt;Helper&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
        &lt;li&gt;&lt;a href=&quot;#abstractions&quot;&gt;Abstractions&lt;/a&gt;&lt;/li&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#image&quot;&gt;Image&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#text&quot;&gt;Text&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#text3d&quot;&gt;Text3D&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#positionalaudio&quot;&gt;PositionalAudio&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#billboard&quot;&gt;Billboard&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#screenspace&quot;&gt;ScreenSpace&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#screensizer&quot;&gt;ScreenSizer&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#effects&quot;&gt;Effects&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#gradienttexture&quot;&gt;GradientTexture&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#edges&quot;&gt;Edges&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#outlines&quot;&gt;Outlines&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#trail&quot;&gt;Trail&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#sampler&quot;&gt;Sampler&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#computedattribute&quot;&gt;ComputedAttribute&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#clone&quot;&gt;Clone&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#useanimations&quot;&gt;useAnimations&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#marchingcubes&quot;&gt;MarchingCubes&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#decal&quot;&gt;Decal&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#svg&quot;&gt;Svg&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#gltf&quot;&gt;Gltf&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#asciirenderer&quot;&gt;AsciiRenderer&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#splat&quot;&gt;Splat&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
        &lt;li&gt;&lt;a href=&quot;#shaders&quot;&gt;Shaders&lt;/a&gt;&lt;/li&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#meshreflectormaterial&quot;&gt;MeshReflectorMaterial&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#meshwobblematerial&quot;&gt;MeshWobbleMaterial&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#meshdistortmaterial&quot;&gt;MeshDistortMaterial&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#meshrefractionmaterial&quot;&gt;MeshRefractionMaterial&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#meshtransmissionmaterial&quot;&gt;MeshTransmissionMaterial&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#meshdiscardmaterial&quot;&gt;MeshDiscardMaterial&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#pointmaterial&quot;&gt;PointMaterial&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#softshadows&quot;&gt;SoftShadows&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#shadermaterial&quot;&gt;shaderMaterial&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td valign=&quot;top&quot;&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&quot;#misc&quot;&gt;Misc&lt;/a&gt;&lt;/li&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#example&quot;&gt;Example&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#html&quot;&gt;Html&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#cycleraycast&quot;&gt;CycleRaycast&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#select&quot;&gt;Select&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#sprite-animator&quot;&gt;Sprite Animator&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#stats&quot;&gt;Stats&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#stats-gl&quot;&gt;StatsGl&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#wireframe&quot;&gt;Wireframe&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#usedepthbuffer&quot;&gt;useDepthBuffer&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#usecontextbridge&quot;&gt;useContextBridge&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#fbo--usefbo&quot;&gt;Fbo / useFBO&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#usecamera&quot;&gt;useCamera&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#cubecamera--usecubecamera&quot;&gt;CubeCamera / useCubeCamera&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#detectgpu--usedetectgpu&quot;&gt;DetectGPU / useDetectGPU&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#useaspect&quot;&gt;useAspect&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#usecursor&quot;&gt;useCursor&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#useintersect&quot;&gt;useIntersect&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#useboxprojectedenv&quot;&gt;useBoxProjectedEnv&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#trail--useTrail&quot;&gt;Trail / useTrail&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#useSurfaceSampler&quot;&gt;useSurfaceSampler&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#facelandmarker&quot;&gt;FaceLandmarker&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
        &lt;li&gt;&lt;a href=&quot;#loading&quot;&gt;Loaders&lt;/a&gt;&lt;/li&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#loader&quot;&gt;Loader&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#progress--useprogress&quot;&gt;Progress / useProgress&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#gltf--usegltf&quot;&gt;Gltf / useGLTF&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#fbx--usefbx&quot;&gt;FBX / useFBX&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#texture--usetexture&quot;&gt;Texture / useTexture&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#ktx2--usektx2&quot;&gt;Ktx2 / useKTX2&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#cubetexture--usecubetexture&quot;&gt;CubeTexture / useCubeTexture&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#videotexture--usevideotexture&quot;&gt;VideoTexture / useVideoTexture&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#trailtexture--usetrailtexture&quot;&gt;TrailTexture / useTrailTexture&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#usefont&quot;&gt;useFont&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#usespriteloader&quot;&gt;useSpriteLoader&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
        &lt;li&gt;&lt;a href=&quot;#performance&quot;&gt;Performance&lt;/a&gt;&lt;/li&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#instances&quot;&gt;Instances&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#merged&quot;&gt;Merged&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#points&quot;&gt;Points&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#segments&quot;&gt;Segments&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#detailed&quot;&gt;Detailed&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#preload&quot;&gt;Preload&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#bakeshadows&quot;&gt;BakeShadows&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#meshbounds&quot;&gt;meshBounds&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#adaptivedpr&quot;&gt;AdaptiveDpr&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#adaptiveevents&quot;&gt;AdaptiveEvents&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#bvh&quot;&gt;Bvh&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#performancemonitor&quot;&gt;PerformanceMonitor&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
        &lt;li&gt;&lt;a href=&quot;#portals&quot;&gt;Portals&lt;/a&gt;&lt;/li&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#hud&quot;&gt;Hud&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#view&quot;&gt;View&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#rendertexture&quot;&gt;RenderTexture&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#rendercubetexture&quot;&gt;RenderCubeTexture&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#fisheye&quot;&gt;Fisheye&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#mask&quot;&gt;Mask&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#meshportalmaterial&quot;&gt;MeshPortalMaterial&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
        &lt;li&gt;&lt;a href=&quot;#modifiers&quot;&gt;Modifiers&lt;/a&gt;&lt;/li&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#curvemodifier&quot;&gt;CurveModifier&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td valign=&quot;top&quot;&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&quot;#shapes&quot;&gt;Shapes&lt;/a&gt;&lt;/li&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#shapes&quot;&gt;Plane&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#shapes&quot;&gt;Box&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#shapes&quot;&gt;Sphere&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#shapes&quot;&gt;Circle&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#shapes&quot;&gt;Cone&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#shapes&quot;&gt;Cylinder&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#shapes&quot;&gt;Tube&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#shapes&quot;&gt;Torus&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#shapes&quot;&gt;TorusKnot&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#shapes&quot;&gt;Ring&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#shapes&quot;&gt;Tetrahedron&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#shapes&quot;&gt;Polyhedron&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#shapes&quot;&gt;Icosahedron&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#shapes&quot;&gt;Octahedron&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#shapes&quot;&gt;Dodecahedron&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#shapes&quot;&gt;Extrude&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#shapes&quot;&gt;Lathe&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#shapes&quot;&gt;Shape&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#roundedbox&quot;&gt;RoundedBox&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#screenquad&quot;&gt;Screenquad&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#line&quot;&gt;Line&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#quadraticbezierline&quot;&gt;QuadraticBezierLine&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#cubicbezierline&quot;&gt;CubicBezierLine&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#catmullromline&quot;&gt;CatmullRomLine&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#facemesh&quot;&gt;Facemesh&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
        &lt;li&gt;&lt;a href=&quot;#staging&quot;&gt;Staging&lt;/a&gt;&lt;/li&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#center&quot;&gt;Center&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#resize&quot;&gt;Resize&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#BBAnchor&quot;&gt;BBAnchor&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#bounds&quot;&gt;Bounds&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#camerashake&quot;&gt;CameraShake&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#float&quot;&gt;Float&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#stage&quot;&gt;Stage&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#backdrop&quot;&gt;Backdrop&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#environment&quot;&gt;Environment&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#lightformer&quot;&gt;Lightformer&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#spotlight&quot;&gt;SpotLight&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#spotlightshadow&quot;&gt;SpotLightShadow&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#shadow&quot;&gt;Shadow&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#caustics&quot;&gt;Caustics&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#contactshadows&quot;&gt;ContactShadows&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#randomizedlight&quot;&gt;RandomizedLight&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#accumulativeshadows&quot;&gt;AccumulativeShadows&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#sky&quot;&gt;Sky&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#stars&quot;&gt;Stars&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#sparkles&quot;&gt;Sparkles&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#cloud&quot;&gt;Cloud&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#useenvironment&quot;&gt;useEnvironment&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#matcaptexture--usematcaptexture&quot;&gt;MatcapTexture / useMatcapTexture&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#normaltexture--usenormaltexture&quot;&gt;NormalTexture / useNormalTexture&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#shadowalpha&quot;&gt;ShadowAlpha&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt; --&gt;

### Cameras

#### PerspectiveCamera

[Documentation has moved here](https://pmndrs.github.io/drei/cameras/perspective-camera)

#### OrthographicCamera

[Documentation has moved here](https://pmndrs.github.io/drei/cameras/orthographic-camera)

#### CubeCamera

[Documentation has moved here](https://pmndrs.github.io/drei/cameras/cube-camera)

### Controls

#### CameraControls

[Documentation has moved here](https://pmndrs.github.io/drei/controls/camera-controls)

#### ScrollControls

[Documentation has moved here](https://pmndrs.github.io/drei/controls/scroll-controls)

#### PresentationControls

[Documentation has moved here](https://pmndrs.github.io/drei/controls/presentation-controls)

#### KeyboardControls

[Documentation has moved here](https://pmndrs.github.io/drei/controls/keyboard-controls)

#### FaceControls

[Documentation has moved here](https://pmndrs.github.io/drei/controls/face-controls)

#### MotionPathControls

[Documentation has moved here](https://pmndrs.github.io/drei/controls/motion-path-controls)

### Gizmos

#### GizmoHelper

[Documentation has moved here](https://pmndrs.github.io/drei/gizmos/gizmo-helper)

#### PivotControls

[Documentation has moved here](https://pmndrs.github.io/drei/gizmos/pivot-controls)

#### DragControls

[Documentation has moved here](https://pmndrs.github.io/drei/gizmos/drag-controls)

#### TransformControls

[Documentation has moved here](https://pmndrs.github.io/drei/gizmos/transform-controls)

#### Grid

[Documentation has moved here](https://pmndrs.github.io/drei/gizmos/grid)

#### Helper / useHelper

[Documentation has moved here](https://pmndrs.github.io/drei/gizmos/helper-use-helper)

### Shapes

#### Plane, Box, Sphere, Circle, Cone, Cylinder, Tube, Torus, TorusKnot, Ring, Tetrahedron, Polyhedron, Icosahedron, Octahedron, Dodecahedron, Extrude, Lathe, Shape

[Documentation has moved here](https://pmndrs.github.io/drei/shapes/mesh)

#### RoundedBox

[Documentation has moved here](https://pmndrs.github.io/drei/shapes/rounded-box)

#### ScreenQuad

[Documentation has moved here](https://pmndrs.github.io/drei/shapes/screen-quad)

#### Line

[Documentation has moved here](https://pmndrs.github.io/drei/shapes/line)

#### QuadraticBezierLine

[Documentation has moved here](https://pmndrs.github.io/drei/shapes/quadratic-bezier-line)

#### CubicBezierLine

[Documentation has moved here](https://pmndrs.github.io/drei/shapes/cubic-bezier-line)

#### CatmullRomLine

[Documentation has moved here](https://pmndrs.github.io/drei/shapes/catmull-rom-line)

#### Facemesh

[Documentation has moved here](https://pmndrs.github.io/drei/shapes/facemesh)

### Abstractions

#### Image

[Documentation has moved here](https://pmndrs.github.io/drei/abstractions/image)

#### Text

[Documentation has moved here](https://pmndrs.github.io/drei/abstractions/text)

#### Text3D

[Documentation has moved here](https://pmndrs.github.io/drei/abstractions/text3d)

#### Effects

[Documentation has moved here](https://pmndrs.github.io/drei/abstractions/effects)

#### PositionalAudio

[Documentation has moved here](https://pmndrs.github.io/drei/abstractions/positional-audio)

#### Billboard

[Documentation has moved here](https://pmndrs.github.io/drei/abstractions/billboard)

#### ScreenSpace

[Documentation has moved here](https://pmndrs.github.io/drei/abstractions/screen-space)

#### ScreenSizer

[Documentation has moved here](https://pmndrs.github.io/drei/abstractions/screen-sizer)

#### GradientTexture

[Documentation has moved here](https://pmndrs.github.io/drei/abstractions/gradient-texture)

#### Edges

[Documentation has moved here](https://pmndrs.github.io/drei/abstractions/edges)

#### Outlines

[Documentation has moved here](https://pmndrs.github.io/drei/abstractions/outlines)

#### Trail

[Documentation has moved here](https://pmndrs.github.io/drei/abstractions/trail)

#### Sampler

[Documentation has moved here](https://pmndrs.github.io/drei/abstractions/sampler)

#### ComputedAttribute

[Documentation has moved here](https://pmndrs.github.io/drei/abstractions/computed-attribute)

#### Clone

[Documentation has moved here](https://pmndrs.github.io/drei/abstractions/clone)

#### useAnimations

[Documentation has moved here](https://pmndrs.github.io/drei/abstractions/use-animations)

#### MarchingCubes

[Documentation has moved here](https://pmndrs.github.io/drei/abstractions/marching-cubes)

#### Decal

[Documentation has moved here](https://pmndrs.github.io/drei/abstractions/decal)

#### Svg

[Documentation has moved here](https://pmndrs.github.io/drei/abstractions/svg)

#### AsciiRenderer

[Documentation has moved here](https://pmndrs.github.io/drei/abstractions/ascii-renderer)

#### Splat

[Documentation has moved here](https://pmndrs.github.io/drei/abstractions/splat)

### Shaders

#### MeshReflectorMaterial

[Documentation has moved here](https://pmndrs.github.io/drei/shaders/mesh-reflector-material)

#### MeshWobbleMaterial

[Documentation has moved here](https://pmndrs.github.io/drei/shaders/mesh-wobble-material)

#### MeshDistortMaterial

[Documentation has moved here](https://pmndrs.github.io/drei/shaders/mesh-distort-material)

#### MeshRefractionMaterial

[Documentation has moved here](https://pmndrs.github.io/drei/shaders/mesh-refraction-material)

#### MeshTransmissionMaterial

[Documentation has moved here](https://pmndrs.github.io/drei/shaders/mesh-transmission-material)

#### MeshDiscardMaterial

[Documentation has moved here](https://pmndrs.github.io/drei/shaders/mesh-discard-material)

#### PointMaterial

[Documentation has moved here](https://pmndrs.github.io/drei/shaders/point-material)

#### SoftShadows

[Documentation has moved here](https://pmndrs.github.io/drei/shaders/soft-shadows)

#### shaderMaterial

[Documentation has moved here](https://pmndrs.github.io/drei/shaders/shader-material)

### Modifiers

#### CurveModifier

[Documentation has moved here](https://pmndrs.github.io/drei/modifiers/curve-modifier)

### Misc

#### useContextBridge

[Documentation has moved here](https://pmndrs.github.io/drei/misc/use-context-bridge)

#### Example

[Documentation has moved here](https://pmndrs.github.io/drei/misc/example)

#### Html

[Documentation has moved here](https://pmndrs.github.io/drei/misc/html)

#### CycleRaycast

[Documentation has moved here](https://pmndrs.github.io/drei/misc/cycle-raycast)

#### Select

[Documentation has moved here](https://pmndrs.github.io/drei/misc/select)

#### Sprite Animator

[Documentation has moved here](https://pmndrs.github.io/drei/misc/sprite-animator)

#### Stats

[Documentation has moved here](https://pmndrs.github.io/drei/misc/stats)

#### StatsGl

[Documentation has moved here](https://pmndrs.github.io/drei/misc/stats-gl)

#### Wireframe

[Documentation has moved here](https://pmndrs.github.io/drei/misc/wireframe)

#### useDepthBuffer

[Documentation has moved here](https://pmndrs.github.io/drei/misc/use-depth-buffer)

#### Fbo / useFBO

[Documentation has moved here](https://pmndrs.github.io/drei/misc/fbo-use-fbo)

#### useCamera

[Documentation has moved here](https://pmndrs.github.io/drei/misc/use-camera)

#### CubeCamera / useCubeCamera

[Documentation has moved here](https://pmndrs.github.io/drei/misc/cube-camera-use-cube-camera)

#### DetectGPU / useDetectGPU

[Documentation has moved here](https://pmndrs.github.io/drei/misc/detect-gpu-use-detect-gpu)

#### useAspect

[Documentation has moved here](https://pmndrs.github.io/drei/misc/use-aspect)

#### useCursor

[Documentation has moved here](https://pmndrs.github.io/d

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>