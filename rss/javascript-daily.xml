<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Thu, 16 Oct 2025 00:05:03 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[asgeirtj/system_prompts_leaks]]></title>
            <link>https://github.com/asgeirtj/system_prompts_leaks</link>
            <guid>https://github.com/asgeirtj/system_prompts_leaks</guid>
            <pubDate>Thu, 16 Oct 2025 00:05:03 GMT</pubDate>
            <description><![CDATA[Collection of extracted System Prompts from popular chatbots like ChatGPT, Claude & Gemini]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/asgeirtj/system_prompts_leaks">asgeirtj/system_prompts_leaks</a></h1>
            <p>Collection of extracted System Prompts from popular chatbots like ChatGPT, Claude & Gemini</p>
            <p>Language: JavaScript</p>
            <p>Stars: 22,793</p>
            <p>Forks: 3,483</p>
            <p>Stars today: 229 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[usebruno/bruno]]></title>
            <link>https://github.com/usebruno/bruno</link>
            <guid>https://github.com/usebruno/bruno</guid>
            <pubDate>Thu, 16 Oct 2025 00:05:02 GMT</pubDate>
            <description><![CDATA[Opensource IDE For Exploring and Testing API's (lightweight alternative to Postman/Insomnia)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/usebruno/bruno">usebruno/bruno</a></h1>
            <p>Opensource IDE For Exploring and Testing API's (lightweight alternative to Postman/Insomnia)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 37,562</p>
            <p>Forks: 1,897</p>
            <p>Stars today: 44 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[davila7/claude-code-templates]]></title>
            <link>https://github.com/davila7/claude-code-templates</link>
            <guid>https://github.com/davila7/claude-code-templates</guid>
            <pubDate>Thu, 16 Oct 2025 00:05:01 GMT</pubDate>
            <description><![CDATA[CLI tool for configuring and monitoring Claude Code]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/davila7/claude-code-templates">davila7/claude-code-templates</a></h1>
            <p>CLI tool for configuring and monitoring Claude Code</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,273</p>
            <p>Forks: 692</p>
            <p>Stars today: 229 stars today</p>
            <h2>README</h2><pre>[![npm version](https://img.shields.io/npm/v/claude-code-templates.svg)](https://www.npmjs.com/package/claude-code-templates)
[![npm downloads](https://img.shields.io/npm/dt/claude-code-templates.svg)](https://www.npmjs.com/package/claude-code-templates)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Open Source](https://badges.frapsoft.com/os/v1/open-source.svg?v=103)](https://opensource.org/)
[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](CONTRIBUTING.md)
[![GitHub stars](https://img.shields.io/github/stars/davila7/claude-code-templates.svg?style=social&amp;label=Star)](https://github.com/davila7/claude-code-templates)
[![Mentioned in Awesome Claude Code](https://awesome.re/mentioned-badge-flat.svg)](https://github.com/hesreallyhim/awesome-claude-code)
[![Buy Me a Coffee](https://img.shields.io/badge/‚òï-Buy%20me%20a%20coffee-ffdd00?style=flat&amp;logo=buy-me-a-coffee)](https://buymeacoffee.com/daniavila)



# Claude Code Templates (aitmpl.com)

**Ready-to-use configurations for Anthropic&#039;s Claude Code.** A comprehensive collection of AI agents, custom commands, settings, hooks, external integrations (MCPs), and project templates to enhance your development workflow.

## Browse &amp; Install Components and Templates

**[Browse All Templates](https://aitmpl.com)** - Interactive web interface to explore and install 100+ agents, commands, settings, hooks, and MCPs.

&lt;img width=&quot;1049&quot; height=&quot;855&quot; alt=&quot;Screenshot 2025-08-19 at 08 09 24&quot; src=&quot;https://github.com/user-attachments/assets/e3617410-9b1c-4731-87b7-a3858800b737&quot; /&gt;

## üöÄ Quick Installation

```bash
# Install a complete development stack
npx claude-code-templates@latest --agent development-team/frontend-developer --command testing/generate-tests --mcp development/github-integration

# Browse and install interactively
npx claude-code-templates@latest

# Install specific components
npx claude-code-templates@latest --agent business-marketing/security-auditor
npx claude-code-templates@latest --command performance/optimize-bundle
npx claude-code-templates@latest --setting performance/mcp-timeouts
npx claude-code-templates@latest --hook git/pre-commit-validation
npx claude-code-templates@latest --mcp database/postgresql-integration
```

## What You Get

| Component | Description | Examples |
|-----------|-------------|----------|
| **ü§ñ Agents** | AI specialists for specific domains | Security auditor, React performance optimizer, database architect |
| **‚ö° Commands** | Custom slash commands | `/generate-tests`, `/optimize-bundle`, `/check-security` |
| **üîå MCPs** | External service integrations | GitHub, PostgreSQL, Stripe, AWS, OpenAI |
| **‚öôÔ∏è Settings** | Claude Code configurations | Timeouts, memory settings, output styles |
| **ü™ù Hooks** | Automation triggers | Pre-commit validation, post-completion actions |
| **üì¶ Templates** | Complete project configurations with CLAUDE.md, .claude/* files and .mcp.json | Framework-specific setups, project best practices |

## üõ†Ô∏è Additional Tools

Beyond the template catalog, Claude Code Templates includes powerful development tools:

### üìä Claude Code Analytics
Monitor your AI-powered development sessions in real-time with live state detection and performance metrics.

```bash
npx claude-code-templates@latest --analytics
```

### üí¨ Conversation Monitor  
Mobile-optimized interface to view Claude responses in real-time with secure remote access.

```bash
# Local access
npx claude-code-templates@latest --chats

# Secure remote access via Cloudflare Tunnel
npx claude-code-templates@latest --chats --tunnel
```

### üîç Health Check
Comprehensive diagnostics to ensure your Claude Code installation is optimized.

```bash
npx claude-code-templates@latest --health-check
```

### üîå Plugin Dashboard
View marketplaces, installed plugins, and manage permissions from a unified interface.

```bash
npx claude-code-templates@latest --plugins
```

## üìñ Documentation

**[üìö docs.aitmpl.com](https://docs.aitmpl.com/)** - Complete guides, examples, and API reference for all components and tools.

## Contributing

We welcome contributions! **[Browse existing templates](https://aitmpl.com)** to see what&#039;s available, then check our [contributing guidelines](CONTRIBUTING.md) to add your own agents, commands, MCPs, settings, or hooks.

**Please read our [Code of Conduct](CODE_OF_CONDUCT.md) before contributing.**

## Attribution

This collection includes components from multiple sources:

**Agents Collection:**
- **wshobson/agents Collection** by [wshobson](https://github.com/wshobson/agents) - Licensed under MIT License (48 agents)

**Commands Collection:**
- **awesome-claude-code Commands** by [hesreallyhim](https://github.com/hesreallyhim/awesome-claude-code) - Licensed under CC0 1.0 Universal (21 commands)

## üìÑ License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## üîó Links

- **üåê Browse Templates**: [aitmpl.com](https://aitmpl.com)
- **üìö Documentation**: [docs.aitmpl.com](https://docs.aitmpl.com)
- **üí¨ Community**: [GitHub Discussions](https://github.com/davila7/claude-code-templates/discussions)
- **üêõ Issues**: [GitHub Issues](https://github.com/davila7/claude-code-templates/issues)

## ‚≠ê Star History

&lt;a href=&quot;https://star-history.com/#davila7/claude-code-templates&amp;Date&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=davila7/claude-code-templates&amp;type=Date&amp;theme=dark&quot; /&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=davila7/claude-code-templates&amp;type=Date&quot; /&gt;
    &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=davila7/claude-code-templates&amp;type=Date&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

---

**‚≠ê Found this useful? Give us a star to support the project!**

[![Buy Me A Coffee](https://img.buymeacoffee.com/button-api/?text=Buy%20me%20a%20coffee&amp;slug=daniavila&amp;button_colour=FFDD00&amp;font_colour=000000&amp;font_family=Cookie&amp;outline_colour=000000&amp;coffee_colour=ffffff)](https://buymeacoffee.com/daniavila)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[chartjs/Chart.js]]></title>
            <link>https://github.com/chartjs/Chart.js</link>
            <guid>https://github.com/chartjs/Chart.js</guid>
            <pubDate>Thu, 16 Oct 2025 00:05:00 GMT</pubDate>
            <description><![CDATA[Simple HTML5 Charts using the <canvas> tag]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/chartjs/Chart.js">chartjs/Chart.js</a></h1>
            <p>Simple HTML5 Charts using the <canvas> tag</p>
            <p>Language: JavaScript</p>
            <p>Stars: 66,646</p>
            <p>Forks: 11,978</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.chartjs.org/&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://www.chartjs.org/media/logo-title.svg&quot; alt=&quot;https://www.chartjs.org/&quot;&gt;&lt;br/&gt;
  &lt;/a&gt;
    Simple yet flexible JavaScript charting for designers &amp; developers
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://www.chartjs.org/docs/latest/getting-started/installation.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/chartjs/Chart.js.svg?style=flat-square&amp;maxAge=600&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/chartjs/Chart.js/actions?query=workflow%3ACI+branch%3Amaster&quot;&gt;&lt;img alt=&quot;GitHub Workflow Status&quot; src=&quot;https://img.shields.io/github/actions/workflow/status/chartjs/Chart.js/ci.yml?branch=master&amp;style=flat-square&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://coveralls.io/github/chartjs/Chart.js?branch=master&quot;&gt;&lt;img src=&quot;https://img.shields.io/coveralls/chartjs/Chart.js.svg?style=flat-square&amp;maxAge=600&quot; alt=&quot;Coverage&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/chartjs/awesome&quot;&gt;&lt;img src=&quot;https://awesome.re/badge-flat2.svg&quot; alt=&quot;Awesome&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://discord.gg/HxEguTK6av&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/discord-chartjs-blue?style=flat-square&amp;maxAge=3600&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

## Documentation

All the links point to the new version 4 of the lib.

* [Introduction](https://www.chartjs.org/docs/latest/)
* [Getting Started](https://www.chartjs.org/docs/latest/getting-started/index)
* [General](https://www.chartjs.org/docs/latest/general/data-structures)
* [Configuration](https://www.chartjs.org/docs/latest/configuration/index)
* [Charts](https://www.chartjs.org/docs/latest/charts/line)
* [Axes](https://www.chartjs.org/docs/latest/axes/index)
* [Developers](https://www.chartjs.org/docs/latest/developers/index)
* [Popular Extensions](https://github.com/chartjs/awesome)
* [Samples](https://www.chartjs.org/samples/)

In case you are looking for an older version of the docs, you will have to specify the specific version in the url like this: [https://www.chartjs.org/docs/2.9.4/](https://www.chartjs.org/docs/2.9.4/)

## Contributing

Instructions on building and testing Chart.js can be found in [the documentation](https://www.chartjs.org/docs/master/developers/contributing.html#building-and-testing). Before submitting an issue or a pull request, please take a moment to look over the [contributing guidelines](https://www.chartjs.org/docs/master/developers/contributing) first. For support, please post questions on [Stack Overflow](https://stackoverflow.com/questions/tagged/chart.js) with the `chart.js` tag.

## License

Chart.js is available under the [MIT license](LICENSE.md).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mozilla/pdf.js]]></title>
            <link>https://github.com/mozilla/pdf.js</link>
            <guid>https://github.com/mozilla/pdf.js</guid>
            <pubDate>Thu, 16 Oct 2025 00:04:59 GMT</pubDate>
            <description><![CDATA[PDF Reader in JavaScript]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mozilla/pdf.js">mozilla/pdf.js</a></h1>
            <p>PDF Reader in JavaScript</p>
            <p>Language: JavaScript</p>
            <p>Stars: 52,073</p>
            <p>Forks: 10,483</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre># PDF.js [![CI](https://github.com/mozilla/pdf.js/actions/workflows/ci.yml/badge.svg?query=branch%3Amaster)](https://github.com/mozilla/pdf.js/actions/workflows/ci.yml?query=branch%3Amaster)

[PDF.js](https://mozilla.github.io/pdf.js/) is a Portable Document Format (PDF) viewer that is built with HTML5.

PDF.js is community-driven and supported by Mozilla. Our goal is to
create a general-purpose, web standards-based platform for parsing and
rendering PDFs.

## Contributing

PDF.js is an open source project and always looking for more contributors. To
get involved, visit:

+ [Issue Reporting Guide](https://github.com/mozilla/pdf.js/blob/master/.github/CONTRIBUTING.md)
+ [Code Contribution Guide](https://github.com/mozilla/pdf.js/wiki/Contributing)
+ [Frequently Asked Questions](https://github.com/mozilla/pdf.js/wiki/Frequently-Asked-Questions)
+ [Good Beginner Bugs](https://github.com/mozilla/pdf.js/issues?q=is%3Aissue%20state%3Aopen%20label%3Agood-beginner-bug)
+ [Projects](https://github.com/mozilla/pdf.js/projects)

Feel free to stop by our [Matrix room](https://chat.mozilla.org/#/room/#pdfjs:mozilla.org) for questions or guidance.

## Getting Started

### Online demo

Please note that the &quot;Modern browsers&quot; version assumes native support for the
latest JavaScript features; please also see [this wiki page](https://github.com/mozilla/pdf.js/wiki/Frequently-Asked-Questions#faq-support).

+ Modern browsers: https://mozilla.github.io/pdf.js/web/viewer.html

+ Older browsers: https://mozilla.github.io/pdf.js/legacy/web/viewer.html

### Browser Extensions

#### Firefox

PDF.js is built into version 19+ of Firefox.

#### Chrome

+ The official extension for Chrome can be installed from the [Chrome Web Store](https://chrome.google.com/webstore/detail/pdf-viewer/oemmndcbldboiebfnladdacbdfmadadm).
*This extension is maintained by [@Rob--W](https://github.com/Rob--W).*
+ Build Your Own - Get the code as explained below and issue `npx gulp chromium`. Then open
Chrome, go to `Tools &gt; Extension` and load the (unpackaged) extension from the
directory `build/chromium`.

## Getting the Code

To get a local copy of the current code, clone it using git:

    $ git clone https://github.com/mozilla/pdf.js.git
    $ cd pdf.js

Next, install Node.js via the [official package](https://nodejs.org) or via
[nvm](https://github.com/creationix/nvm). If everything worked out, install
all dependencies for PDF.js:

    $ npm install

Finally, you need to start a local web server as some browsers do not allow opening
PDF files using a `file://` URL. Run:

    $ npx gulp server

and then you can open:

+ http://localhost:8888/web/viewer.html

Please keep in mind that this assumes the latest version of Mozilla Firefox; refer to [Building PDF.js](https://github.com/mozilla/pdf.js/blob/master/README.md#building-pdfjs) for non-development usage of the PDF.js library.

It is also possible to view all test PDF files on the right side by opening:

+ http://localhost:8888/test/pdfs/?frame

## Building PDF.js

In order to bundle all `src/` files into two production scripts and build the generic
viewer, run:

    $ npx gulp generic

If you need to support older browsers, run:

    $ npx gulp generic-legacy

This will generate `pdf.js` and `pdf.worker.js` in the `build/generic/build/` directory (respectively `build/generic-legacy/build/`).
Both scripts are needed but only `pdf.js` needs to be included since `pdf.worker.js` will
be loaded by `pdf.js`. The PDF.js files are large and should be minified for production.

## Using PDF.js in a web application

To use PDF.js in a web application you can choose to use a pre-built version of the library
or to build it from source. We supply pre-built versions for usage with NPM under
the `pdfjs-dist` name. For more information and examples please refer to the
[wiki page](https://github.com/mozilla/pdf.js/wiki/Setup-pdf.js-in-a-website) on this subject.

## Including via a CDN

PDF.js is hosted on several free CDNs:
 - https://www.jsdelivr.com/package/npm/pdfjs-dist
 - https://cdnjs.com/libraries/pdf.js
 - https://unpkg.com/pdfjs-dist/

## Learning

You can play with the PDF.js API directly from your browser using the live demos below:

+ [Interactive examples](https://mozilla.github.io/pdf.js/examples/index.html#interactive-examples)

More examples can be found in the [examples folder](https://github.com/mozilla/pdf.js/tree/master/examples/). Some of them are using the pdfjs-dist package, which can be built and installed in this repo directory via `npx gulp dist-install` command.

For an introduction to the PDF.js code, check out the presentation by our
contributor Julian Viereck:

+ https://www.youtube.com/watch?v=Iv15UY-4Fg8

More learning resources can be found at:

+ https://github.com/mozilla/pdf.js/wiki/Additional-Learning-Resources

The API documentation can be found at:

+ https://mozilla.github.io/pdf.js/api/

## Questions

Check out our FAQs and get answers to common questions:

+ https://github.com/mozilla/pdf.js/wiki/Frequently-Asked-Questions

Talk to us on Matrix:

+ https://chat.mozilla.org/#/room/#pdfjs:mozilla.org

File an issue:

+ https://github.com/mozilla/pdf.js/issues/new/choose
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[Wei-Shaw/claude-relay-service]]></title>
            <link>https://github.com/Wei-Shaw/claude-relay-service</link>
            <guid>https://github.com/Wei-Shaw/claude-relay-service</guid>
            <pubDate>Thu, 16 Oct 2025 00:04:58 GMT</pubDate>
            <description><![CDATA[CRS-Ëá™Âª∫Claude CodeÈïúÂÉèÔºå‰∏ÄÁ´ôÂºèÂºÄÊ∫ê‰∏≠ËΩ¨ÊúçÂä°ÔºåËÆ© Claude„ÄÅOpenAI„ÄÅGemini„ÄÅDroid ËÆ¢ÈòÖÁªü‰∏ÄÊé•ÂÖ•ÔºåÊîØÊåÅÊãºËΩ¶ÂÖ±‰∫´ÔºåÊõ¥È´òÊïàÂàÜÊëäÊàêÊú¨ÔºåÂéüÁîüÂ∑•ÂÖ∑Êó†Áºù‰ΩøÁî®„ÄÇ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Wei-Shaw/claude-relay-service">Wei-Shaw/claude-relay-service</a></h1>
            <p>CRS-Ëá™Âª∫Claude CodeÈïúÂÉèÔºå‰∏ÄÁ´ôÂºèÂºÄÊ∫ê‰∏≠ËΩ¨ÊúçÂä°ÔºåËÆ© Claude„ÄÅOpenAI„ÄÅGemini„ÄÅDroid ËÆ¢ÈòÖÁªü‰∏ÄÊé•ÂÖ•ÔºåÊîØÊåÅÊãºËΩ¶ÂÖ±‰∫´ÔºåÊõ¥È´òÊïàÂàÜÊëäÊàêÊú¨ÔºåÂéüÁîüÂ∑•ÂÖ∑Êó†Áºù‰ΩøÁî®„ÄÇ</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,143</p>
            <p>Forks: 680</p>
            <p>Stars today: 36 stars today</p>
            <h2>README</h2><pre># Claude Relay Service

&lt;div align=&quot;center&quot;&gt;

[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Node.js](https://img.shields.io/badge/Node.js-18+-green.svg)](https://nodejs.org/)
[![Redis](https://img.shields.io/badge/Redis-6+-red.svg)](https://redis.io/)
[![Docker](https://img.shields.io/badge/Docker-Ready-blue.svg)](https://www.docker.com/)
[![Docker Build](https://github.com/Wei-Shaw/claude-relay-service/actions/workflows/auto-release-pipeline.yml/badge.svg)](https://github.com/Wei-Shaw/claude-relay-service/actions/workflows/auto-release-pipeline.yml)
[![Docker Pulls](https://img.shields.io/docker/pulls/weishaw/claude-relay-service)](https://hub.docker.com/r/weishaw/claude-relay-service)

**üîê Ëá™Ë°åÊê≠Âª∫Claude API‰∏≠ËΩ¨ÊúçÂä°ÔºåÊîØÊåÅÂ§öË¥¶Êà∑ÁÆ°ÁêÜ**

[English](README_EN.md) ‚Ä¢ [Âø´ÈÄüÂºÄÂßã](https://pincc.ai/) ‚Ä¢ [ÊºîÁ§∫Á´ôÁÇπ](https://demo.pincc.ai/admin-next/login) ‚Ä¢ [ÂÖ¨ÂëäÈ¢ëÈÅì](https://t.me/claude_relay_service)

&lt;/div&gt;

---

## üíé Claude/Codex ÊãºËΩ¶ÊúçÂä°Êé®Ëçê

&lt;div align=&quot;center&quot;&gt;

| Âπ≥Âè∞ | Á±ªÂûã | ÊúçÂä° | ‰ªãÁªç |
|:---|:---|:---|:---|
| **[pincc.ai](https://pincc.ai/)** | üèÜ **ÂÆòÊñπËøêËê•** | &lt;small&gt;‚úÖ Claude Code&lt;br&gt;‚úÖ Codex CLI&lt;/small&gt; | È°πÁõÆÁõ¥Ëê•ÔºåÊèê‰æõÁ®≥ÂÆöÁöÑ Claude Code / Codex CLI ÊãºËΩ¶ÊúçÂä° |
| **[ctok.ai](https://ctok.ai/)** | ü§ù Âêà‰Ωú‰ºô‰º¥ | &lt;small&gt;‚úÖ Claude Code&lt;br&gt;‚úÖ Codex CLI&lt;/small&gt; | Á§æÂå∫ËÆ§ËØÅÔºåÊèê‰æõ Claude Code / Codex CLI ÊãºËΩ¶ |


&lt;/div&gt;

---

## ‚ö†Ô∏è ÈáçË¶ÅÊèêÈÜí

**‰ΩøÁî®Êú¨È°πÁõÆÂâçËØ∑‰ªîÁªÜÈòÖËØªÔºö**

üö® **ÊúçÂä°Êù°Ê¨æÈ£éÈô©**: ‰ΩøÁî®Êú¨È°πÁõÆÂèØËÉΩËøùÂèçAnthropicÁöÑÊúçÂä°Êù°Ê¨æ„ÄÇËØ∑Âú®‰ΩøÁî®Ââç‰ªîÁªÜÈòÖËØªAnthropicÁöÑÁî®Êà∑ÂçèËÆÆÔºå‰ΩøÁî®Êú¨È°πÁõÆÁöÑ‰∏ÄÂàáÈ£éÈô©Áî±Áî®Êà∑Ëá™Ë°åÊâøÊãÖ„ÄÇ

üìñ **ÂÖçË¥£Â£∞Êòé**: Êú¨È°πÁõÆ‰ªÖ‰æõÊäÄÊúØÂ≠¶‰π†ÂíåÁ†îÁ©∂‰ΩøÁî®Ôºå‰ΩúËÄÖ‰∏çÂØπÂõ†‰ΩøÁî®Êú¨È°πÁõÆÂØºËá¥ÁöÑË¥¶Êà∑Â∞ÅÁ¶Å„ÄÅÊúçÂä°‰∏≠Êñ≠ÊàñÂÖ∂‰ªñÊçüÂ§±ÊâøÊãÖ‰ªª‰ΩïË¥£‰ªª„ÄÇ


## ü§î Ëøô‰∏™È°πÁõÆÈÄÇÂêà‰Ω†ÂêóÔºü

- üåç **Âú∞Âå∫ÈôêÂà∂**: ÊâÄÂú®Âú∞Âå∫Êó†Ê≥ïÁõ¥Êé•ËÆøÈóÆClaude CodeÊúçÂä°Ôºü
- üîí **ÈöêÁßÅÊãÖÂøß**: ÊãÖÂøÉÁ¨¨‰∏âÊñπÈïúÂÉèÊúçÂä°‰ºöËÆ∞ÂΩïÊàñÊ≥ÑÈú≤‰Ω†ÁöÑÂØπËØùÂÜÖÂÆπÔºü
- üë• **ÊàêÊú¨ÂàÜÊëä**: ÊÉ≥ÂíåÊúãÂèã‰∏ÄËµ∑ÂàÜÊëäClaude Code MaxËÆ¢ÈòÖË¥πÁî®Ôºü
- ‚ö° **Á®≥ÂÆöÊÄß**: Á¨¨‰∏âÊñπÈïúÂÉèÁ´ôÁªèÂ∏∏ÊïÖÈöú‰∏çÁ®≥ÂÆöÔºåÂΩ±ÂìçÊïàÁéá Ôºü

Â¶ÇÊûúÊúâ‰ª•‰∏äÂõ∞ÊÉëÔºåÈÇ£Ëøô‰∏™È°πÁõÆÂèØËÉΩÈÄÇÂêà‰Ω†„ÄÇ

### ÈÄÇÂêàÁöÑÂú∫ÊôØ

‚úÖ **ÊâæÊúãÂèãÊãºËΩ¶**: ‰∏â‰∫îÂ•ΩÂèã‰∏ÄËµ∑ÂàÜÊëäClaude Code MaxËÆ¢ÈòÖ  
‚úÖ **ÈöêÁßÅÊïèÊÑü**: ‰∏çÊÉ≥ËÆ©Á¨¨‰∏âÊñπÈïúÂÉèÁúãÂà∞‰Ω†ÁöÑÂØπËØùÂÜÖÂÆπ  
‚úÖ **ÊäÄÊúØÊäòËÖæ**: ÊúâÂü∫Êú¨ÁöÑÊäÄÊúØÂü∫Á°ÄÔºåÊÑøÊÑèËá™Â∑±Êê≠Âª∫ÂíåÁª¥Êä§  
‚úÖ **Á®≥ÂÆöÈúÄÊ±Ç**: ÈúÄË¶ÅÈïøÊúüÁ®≥ÂÆöÁöÑClaudeËÆøÈóÆÔºå‰∏çÊÉ≥ÂèóÂà∂‰∫éÈïúÂÉèÁ´ô  
‚úÖ **Âú∞Âå∫ÂèóÈôê**: Êó†Ê≥ïÁõ¥Êé•ËÆøÈóÆClaudeÂÆòÊñπÊúçÂä°

---

## üí≠ ‰∏∫‰ªÄ‰πàË¶ÅËá™Â∑±Êê≠Ôºü

### Áé∞ÊúâÈïúÂÉèÁ´ôÂèØËÉΩÁöÑÈóÆÈ¢ò

- üïµÔ∏è **ÈöêÁßÅÈ£éÈô©**: ‰Ω†ÁöÑÂØπËØùÂÜÖÂÆπÈÉΩË¢´‰∫∫ÂÆ∂ÁúãÂæó‰∏ÄÊ∏Ö‰∫åÊ•öÔºåÂïÜ‰∏öÊú∫ÂØÜ‰ªÄ‰πàÁöÑÂ∞±Âà´ÊÉ≥‰∫Ü
- üêå **ÊÄßËÉΩ‰∏çÁ®≥**: Áî®ÁöÑ‰∫∫Â§ö‰∫ÜÂ∞±ÊÖ¢ÔºåÈ´òÂ≥∞ÊúüÁªèÂ∏∏Âç°Ê≠ª
- üí∞ **‰ª∑Ê†º‰∏çÈÄèÊòé**: ‰∏çÁü•ÈÅìÂÆûÈôÖÊàêÊú¨

### Ëá™Âª∫ÁöÑÂ•ΩÂ§Ñ

- üîê **Êï∞ÊçÆÂÆâÂÖ®**: ÊâÄÊúâÊé•Âè£ËØ∑Ê±ÇÈÉΩÂè™ÁªèËøá‰Ω†Ëá™Â∑±ÁöÑÊúçÂä°Âô®ÔºåÁõ¥ËøûAnthropic API
- ‚ö° **ÊÄßËÉΩÂèØÊéß**: Â∞±‰Ω†‰ª¨Âá†‰∏™‰∫∫Áî®ÔºåMax 200ÂàÄÂ•óÈ§êÂü∫Êú¨‰∏äÂèØ‰ª•ÁàΩÁî®Opus
- üí∞ **ÊàêÊú¨ÈÄèÊòé**: Áî®‰∫ÜÂ§öÂ∞ëtoken‰∏ÄÁõÆ‰∫ÜÁÑ∂ÔºåÊåâÂÆòÊñπ‰ª∑Ê†ºÊç¢ÁÆó‰∫ÜÂÖ∑‰ΩìË¥πÁî®
- üìä **ÁõëÊéßÂÆåÊï¥**: ‰ΩøÁî®ÊÉÖÂÜµ„ÄÅÊàêÊú¨ÂàÜÊûê„ÄÅÊÄßËÉΩÁõëÊéßÂÖ®ÈÉΩÊúâ

---

## üöÄ Ê†∏ÂøÉÂäüËÉΩ

### Âü∫Á°ÄÂäüËÉΩ

- ‚úÖ **Â§öË¥¶Êà∑ÁÆ°ÁêÜ**: ÂèØ‰ª•Ê∑ªÂä†Â§ö‰∏™ClaudeË¥¶Êà∑Ëá™Âä®ËΩÆÊç¢
- ‚úÖ **Ëá™ÂÆö‰πâAPI Key**: ÁªôÊØè‰∏™‰∫∫ÂàÜÈÖçÁã¨Á´ãÁöÑKey
- ‚úÖ **‰ΩøÁî®ÁªüËÆ°**: ËØ¶ÁªÜËÆ∞ÂΩïÊØè‰∏™‰∫∫Áî®‰∫ÜÂ§öÂ∞ëtoken

### È´òÁ∫ßÂäüËÉΩ

- üîÑ **Êô∫ËÉΩÂàáÊç¢**: Ë¥¶Êà∑Âá∫ÈóÆÈ¢òËá™Âä®Êç¢‰∏ã‰∏Ä‰∏™
- üöÄ **ÊÄßËÉΩ‰ºòÂåñ**: ËøûÊé•Ê±†„ÄÅÁºìÂ≠òÔºåÂáèÂ∞ëÂª∂Ëøü
- üìä **ÁõëÊéßÈù¢Êùø**: WebÁïåÈù¢Êü•ÁúãÊâÄÊúâÊï∞ÊçÆ
- üõ°Ô∏è **ÂÆâÂÖ®ÊéßÂà∂**: ËÆøÈóÆÈôêÂà∂„ÄÅÈÄüÁéáÊéßÂà∂„ÄÅÂÆ¢Êà∑Á´ØÈôêÂà∂
- üåê **‰ª£ÁêÜÊîØÊåÅ**: ÊîØÊåÅHTTP/SOCKS5‰ª£ÁêÜ

---

## üìã ÈÉ®ÁΩ≤Ë¶ÅÊ±Ç

### Á°¨‰ª∂Ë¶ÅÊ±ÇÔºàÊúÄ‰ΩéÈÖçÁΩÆÔºâ

- **CPU**: 1Ê†∏ÂøÉÂ∞±Â§ü‰∫Ü
- **ÂÜÖÂ≠ò**: 512MBÔºàÂª∫ËÆÆ1GBÔºâ
- **Á°¨Áõò**: 30GBÂèØÁî®Á©∫Èó¥
- **ÁΩëÁªú**: ËÉΩËÆøÈóÆÂà∞Anthropic APIÔºàÂª∫ËÆÆ‰ΩøÁî®USÂú∞Âå∫ÁöÑÊú∫Âô®Ôºâ
- **Âª∫ËÆÆ**: 2Ê†∏4GÁöÑÂü∫Êú¨Â§ü‰∫ÜÔºåÁΩëÁªúÂ∞ΩÈáèÈÄâÂõûÂõΩÁ∫øË∑ØÂø´‰∏ÄÁÇπÁöÑÔºà‰∏∫‰∫ÜÊèêÈ´òÈÄüÂ∫¶ÔºåÂª∫ËÆÆ‰∏çË¶ÅÂºÄ‰ª£ÁêÜÊàñËÄÖËÆæÁΩÆÊúçÂä°Âô®ÁöÑIPÁõ¥ËøûÔºâ
- **ÁªèÈ™å**: ÈòøÈáå‰∫ë„ÄÅËÖæËÆØ‰∫ëÁöÑÊµ∑Â§ñ‰∏ªÊú∫ÁªèÊµãËØï‰ºöË¢´CloudflareÊã¶Êà™ÔºåÊó†Ê≥ïÁõ¥Êé•ËÆøÈóÆclaude api

### ËΩØ‰ª∂Ë¶ÅÊ±Ç

- **Node.js** 18ÊàñÊõ¥È´òÁâàÊú¨
- **Redis** 6ÊàñÊõ¥È´òÁâàÊú¨
- **Êìç‰ΩúÁ≥ªÁªü**: Âª∫ËÆÆLinux

### Ë¥πÁî®‰º∞ÁÆó

- **ÊúçÂä°Âô®**: ËΩªÈáè‰∫ëÊúçÂä°Âô®Ôºå‰∏Ä‰∏™Êúà30-60Âùó
- **ClaudeËÆ¢ÈòÖ**: Áúã‰Ω†ÊÄé‰πàÂàÜÊëä‰∫Ü
- **ÂÖ∂‰ªñ**: ÂüüÂêçÔºàÂèØÈÄâÔºâ

---

## üöÄ ËÑöÊú¨ÈÉ®ÁΩ≤ÔºàÊé®ËçêÔºâ

Êé®Ëçê‰ΩøÁî®ÁÆ°ÁêÜËÑöÊú¨ËøõË°å‰∏ÄÈîÆÈÉ®ÁΩ≤ÔºåÁÆÄÂçïÂø´Êç∑ÔºåËá™Âä®Â§ÑÁêÜÊâÄÊúâ‰æùËµñÂíåÈÖçÁΩÆ„ÄÇ

### Âø´ÈÄüÂÆâË£Ö

```bash
curl -fsSL https://pincc.ai/manage.sh -o manage.sh &amp;&amp; chmod +x manage.sh &amp;&amp; ./manage.sh install
```

### ËÑöÊú¨ÂäüËÉΩ

- ‚úÖ **‰∏ÄÈîÆÂÆâË£Ö**: Ëá™Âä®Ê£ÄÊµãÁ≥ªÁªüÁéØÂ¢ÉÔºåÂÆâË£Ö Node.js 18+„ÄÅRedis Á≠â‰æùËµñ
- ‚úÖ **‰∫§‰∫íÂºèÈÖçÁΩÆ**: ÂèãÂ•ΩÁöÑÈÖçÁΩÆÂêëÂØºÔºåËÆæÁΩÆÁ´ØÂè£„ÄÅRedis ËøûÊé•Á≠â
- ‚úÖ **Ëá™Âä®ÂêØÂä®**: ÂÆâË£ÖÂÆåÊàêÂêéËá™Âä®ÂêØÂä®ÊúçÂä°Âπ∂ÊòæÁ§∫ËÆøÈóÆÂú∞ÂùÄ
- ‚úÖ **‰æøÊç∑ÁÆ°ÁêÜ**: ÈÄöËøá `crs` ÂëΩ‰ª§ÈöèÊó∂ÁÆ°ÁêÜÊúçÂä°Áä∂ÊÄÅ

### ÁÆ°ÁêÜÂëΩ‰ª§

```bash
crs install   # ÂÆâË£ÖÊúçÂä°
crs start     # ÂêØÂä®ÊúçÂä°
crs stop      # ÂÅúÊ≠¢ÊúçÂä°
crs restart   # ÈáçÂêØÊúçÂä°
crs status    # Êü•ÁúãÁä∂ÊÄÅ
crs update    # Êõ¥Êñ∞ÊúçÂä°
crs uninstall # Âç∏ËΩΩÊúçÂä°
```

### ÂÆâË£ÖÁ§∫‰æã

```bash
$ crs install

# ‰ºö‰æùÊ¨°ËØ¢ÈóÆÔºö
ÂÆâË£ÖÁõÆÂΩï (ÈªòËÆ§: ~/claude-relay-service):
ÊúçÂä°Á´ØÂè£ (ÈªòËÆ§: 3000): 8080
Redis Âú∞ÂùÄ (ÈªòËÆ§: localhost):
Redis Á´ØÂè£ (ÈªòËÆ§: 6379):
Redis ÂØÜÁ†Å (ÈªòËÆ§: Êó†ÂØÜÁ†Å):

# ÂÆâË£ÖÂÆåÊàêÂêéËá™Âä®ÂêØÂä®Âπ∂ÊòæÁ§∫Ôºö
ÊúçÂä°Â∑≤ÊàêÂäüÂÆâË£ÖÂπ∂ÂêØÂä®ÔºÅ

ËÆøÈóÆÂú∞ÂùÄÔºö
  Êú¨Âú∞ Web: http://localhost:8080/web
  ÂÖ¨ÁΩë Web: http://YOUR_IP:8080/web

ÁÆ°ÁêÜÂëòË¥¶Âè∑‰ø°ÊÅØÂ∑≤‰øùÂ≠òÂà∞: data/init.json
```

### Á≥ªÁªüË¶ÅÊ±Ç

- ÊîØÊåÅÁ≥ªÁªü: Ubuntu/Debian„ÄÅCentOS/RedHat„ÄÅArch Linux„ÄÅmacOS
- Ëá™Âä®ÂÆâË£Ö Node.js 18+ Âíå Redis
- Redis ‰ΩøÁî®Á≥ªÁªüÈªòËÆ§‰ΩçÁΩÆÔºåÊï∞ÊçÆÁã¨Á´ã‰∫éÂ∫îÁî®

---

## üì¶ ÊâãÂä®ÈÉ®ÁΩ≤

### Á¨¨‰∏ÄÊ≠•ÔºöÁéØÂ¢ÉÂáÜÂ§á

**Ubuntu/DebianÁî®Êà∑Ôºö**

```bash
# ÂÆâË£ÖNode.js
curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
sudo apt-get install -y nodejs

# ÂÆâË£ÖRedis
sudo apt update
sudo apt install redis-server
sudo systemctl start redis-server
```

**CentOS/RHELÁî®Êà∑Ôºö**

```bash
# ÂÆâË£ÖNode.js
curl -fsSL https://rpm.nodesource.com/setup_18.x | sudo bash -
sudo yum install -y nodejs

# ÂÆâË£ÖRedis
sudo yum install redis
sudo systemctl start redis
```

### Á¨¨‰∫åÊ≠•Ôºö‰∏ãËΩΩÂíåÈÖçÁΩÆ

```bash
# ‰∏ãËΩΩÈ°πÁõÆ
git clone https://github.com/Wei-Shaw//claude-relay-service.git
cd claude-relay-service

# ÂÆâË£Ö‰æùËµñ
npm install

# Â§çÂà∂ÈÖçÁΩÆÊñá‰ª∂ÔºàÈáçË¶ÅÔºÅÔºâ
cp config/config.example.js config/config.js
cp .env.example .env
```

### Á¨¨‰∏âÊ≠•ÔºöÈÖçÁΩÆÊñá‰ª∂ËÆæÁΩÆ

**ÁºñËæë `.env` Êñá‰ª∂Ôºö**

```bash
# Ëøô‰∏§‰∏™ÂØÜÈí•Èöè‰æøÁîüÊàêÔºå‰ΩÜË¶ÅËÆ∞‰Ωè
JWT_SECRET=‰Ω†ÁöÑË∂ÖÁ∫ßÁßòÂØÜÂØÜÈí•
ENCRYPTION_KEY=32‰ΩçÁöÑÂä†ÂØÜÂØÜÈí•Èöè‰æøÂÜô

# RedisÈÖçÁΩÆ
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=

```

**ÁºñËæë `config/config.js` Êñá‰ª∂Ôºö**

```javascript
module.exports = {
  server: {
    port: 3000, // ÊúçÂä°Á´ØÂè£ÔºåÂèØ‰ª•Êîπ
    host: &#039;0.0.0.0&#039; // ‰∏çÁî®Êîπ
  },
  redis: {
    host: &#039;127.0.0.1&#039;, // RedisÂú∞ÂùÄ
    port: 6379 // RedisÁ´ØÂè£
  }
  // ÂÖ∂‰ªñÈÖçÁΩÆ‰øùÊåÅÈªòËÆ§Â∞±Ë°å
}
```

### Á¨¨ÂõõÊ≠•ÔºöÂÆâË£ÖÂâçÁ´Ø‰æùËµñÂπ∂ÊûÑÂª∫

```bash
# ÂÆâË£ÖÂâçÁ´Ø‰æùËµñ
npm run install:web

# ÊûÑÂª∫ÂâçÁ´ØÔºàÁîüÊàê dist ÁõÆÂΩïÔºâ
npm run build:web
```

### Á¨¨‰∫îÊ≠•ÔºöÂêØÂä®ÊúçÂä°

```bash
# ÂàùÂßãÂåñ
npm run setup # ‰ºöÈöèÊú∫ÁîüÊàêÂêéÂè∞Ë¥¶Âè∑ÂØÜÁ†Å‰ø°ÊÅØÔºåÂ≠òÂÇ®Âú® data/init.json
# ÊàñËÄÖÈÄöËøáÁéØÂ¢ÉÂèòÈáèÈ¢ÑËÆæÁÆ°ÁêÜÂëòÂá≠ÊçÆÔºö
# export ADMIN_USERNAME=cr_admin_custom
# export ADMIN_PASSWORD=your-secure-password

# ÂêØÂä®ÊúçÂä°
npm run service:start:daemon   # ÂêéÂè∞ËøêË°å

# Êü•ÁúãÁä∂ÊÄÅ
npm run service:status
```

---

## üê≥ Docker ÈÉ®ÁΩ≤

### Docker compose

#### Á¨¨‰∏ÄÊ≠•Ôºö‰∏ãËΩΩÊûÑÂª∫docker-compose.ymlÊñá‰ª∂ÁöÑËÑöÊú¨Âπ∂ÊâßË°å
```bash
curl -fsSL https://pincc.ai/crs-compose.sh -o crs-compose.sh &amp;&amp; chmod +x crs-compose.sh &amp;&amp; ./crs-compose.sh
```

#### Á¨¨‰∫åÊ≠•ÔºöÂêØÂä®
```bash
docker-compose up -d
```

### Docker Compose ÈÖçÁΩÆ

docker-compose.yml Â∑≤ÂåÖÂê´Ôºö

- ‚úÖ Ëá™Âä®ÂàùÂßãÂåñÁÆ°ÁêÜÂëòË¥¶Âè∑
- ‚úÖ Êï∞ÊçÆÊåÅ‰πÖÂåñÔºàlogsÂíådataÁõÆÂΩïËá™Âä®ÊåÇËΩΩÔºâ
- ‚úÖ RedisÊï∞ÊçÆÂ∫ì
- ‚úÖ ÂÅ•Â∫∑Ê£ÄÊü•
- ‚úÖ Ëá™Âä®ÈáçÂêØ

### ÁéØÂ¢ÉÂèòÈáèËØ¥Êòé

#### ÂøÖÂ°´È°π

- `JWT_SECRET`: JWTÂØÜÈí•ÔºåËá≥Â∞ë32‰∏™Â≠óÁ¨¶
- `ENCRYPTION_KEY`: Âä†ÂØÜÂØÜÈí•ÔºåÂøÖÈ°ªÊòØ32‰∏™Â≠óÁ¨¶

#### ÂèØÈÄâÈ°π

- `ADMIN_USERNAME`: ÁÆ°ÁêÜÂëòÁî®Êà∑ÂêçÔºà‰∏çËÆæÁΩÆÂàôËá™Âä®ÁîüÊàêÔºâ
- `ADMIN_PASSWORD`: ÁÆ°ÁêÜÂëòÂØÜÁ†ÅÔºà‰∏çËÆæÁΩÆÂàôËá™Âä®ÁîüÊàêÔºâ
- `LOG_LEVEL`: Êó•ÂøóÁ∫ßÂà´ÔºàÈªòËÆ§ÔºöinfoÔºâ
- Êõ¥Â§öÈÖçÁΩÆÈ°πËØ∑ÂèÇËÄÉ `.env.example` Êñá‰ª∂

### ÁÆ°ÁêÜÂëòÂá≠ÊçÆËé∑ÂèñÊñπÂºè

1. **Êü•ÁúãÂÆπÂô®Êó•Âøó**

   ```bash
   docker logs claude-relay-service
   ```

2. **Êü•ÁúãÊåÇËΩΩÁöÑÊñá‰ª∂**

   ```bash
   cat ./data/init.json
   ```

3. **‰ΩøÁî®ÁéØÂ¢ÉÂèòÈáèÈ¢ÑËÆæ**
   ```bash
   # Âú® .env Êñá‰ª∂‰∏≠ËÆæÁΩÆ
   ADMIN_USERNAME=cr_admin_custom
   ADMIN_PASSWORD=your-secure-password
   ```

---

## üéÆ ÂºÄÂßã‰ΩøÁî®

### 1. ÊâìÂºÄÁÆ°ÁêÜÁïåÈù¢

ÊµèËßàÂô®ËÆøÈóÆÔºö`http://‰Ω†ÁöÑÊúçÂä°Âô®IP:3000/web`

ÁÆ°ÁêÜÂëòË¥¶Âè∑Ôºö

- Ëá™Âä®ÁîüÊàêÔºöÊü•Áúã data/init.json
- ÁéØÂ¢ÉÂèòÈáèÈ¢ÑËÆæÔºöÈÄöËøá ADMIN_USERNAME Âíå ADMIN_PASSWORD ËÆæÁΩÆ
- Docker ÈÉ®ÁΩ≤ÔºöÊü•ÁúãÂÆπÂô®Êó•Âøó `docker logs claude-relay-service`

### 2. Ê∑ªÂä†ClaudeË¥¶Êà∑

Ëøô‰∏ÄÊ≠•ÊØîËæÉÂÖ≥ÈîÆÔºåÈúÄË¶ÅOAuthÊéàÊùÉÔºö

1. ÁÇπÂáª„ÄåClaudeË¥¶Êà∑„ÄçÊ†áÁ≠æ
2. Â¶ÇÊûú‰Ω†ÊãÖÂøÉÂ§ö‰∏™Ë¥¶Âè∑ÂÖ±Áî®1‰∏™IPÊÄïË¢´Â∞ÅÁ¶ÅÔºåÂèØ‰ª•ÈÄâÊã©ËÆæÁΩÆÈùôÊÄÅ‰ª£ÁêÜIPÔºàÂèØÈÄâÔºâ
3. ÁÇπÂáª„ÄåÊ∑ªÂä†Ë¥¶Êà∑„Äç
4. ÁÇπÂáª„ÄåÁîüÊàêÊéàÊùÉÈìæÊé•„ÄçÔºå‰ºöÊâìÂºÄ‰∏Ä‰∏™Êñ∞È°µÈù¢
5. Âú®Êñ∞È°µÈù¢ÂÆåÊàêClaudeÁôªÂΩïÂíåÊéàÊùÉ
6. Â§çÂà∂ËøîÂõûÁöÑAuthorization Code
7. Á≤òË¥¥Âà∞È°µÈù¢ÂÆåÊàêÊ∑ªÂä†

**Ê≥®ÊÑè**: Â¶ÇÊûú‰Ω†Âú®ÂõΩÂÜÖÔºåËøô‰∏ÄÊ≠•ÂèØËÉΩÈúÄË¶ÅÁßëÂ≠¶‰∏äÁΩë„ÄÇ

### 3. ÂàõÂª∫API Key

ÁªôÊØè‰∏™‰ΩøÁî®ËÄÖÂàÜÈÖç‰∏Ä‰∏™KeyÔºö

1. ÁÇπÂáª„ÄåAPI Keys„ÄçÊ†áÁ≠æ
2. ÁÇπÂáª„ÄåÂàõÂª∫Êñ∞Key„Äç
3. ÁªôKeyËµ∑‰∏™ÂêçÂ≠óÔºåÊØîÂ¶Ç„ÄåÂº†‰∏âÁöÑKey„Äç
4. ËÆæÁΩÆ‰ΩøÁî®ÈôêÂà∂ÔºàÂèØÈÄâÔºâÔºö
   - **ÈÄüÁéáÈôêÂà∂**: ÈôêÂà∂ÊØè‰∏™Êó∂Èó¥Á™óÂè£ÁöÑËØ∑Ê±ÇÊ¨°Êï∞ÂíåToken‰ΩøÁî®Èáè
   - **Âπ∂ÂèëÈôêÂà∂**: ÈôêÂà∂ÂêåÊó∂Â§ÑÁêÜÁöÑËØ∑Ê±ÇÊï∞
   - **Ê®°ÂûãÈôêÂà∂**: ÈôêÂà∂ÂèØËÆøÈóÆÁöÑÊ®°ÂûãÂàóË°®
   - **ÂÆ¢Êà∑Á´ØÈôêÂà∂**: ÈôêÂà∂Âè™ÂÖÅËÆ∏ÁâπÂÆöÂÆ¢Êà∑Á´Ø‰ΩøÁî®ÔºàÂ¶ÇClaudeCode„ÄÅGemini-CLIÁ≠âÔºâ
5. ‰øùÂ≠òÔºåËÆ∞‰∏ãÁîüÊàêÁöÑKey

### 4. ÂºÄÂßã‰ΩøÁî® Claude Code Âíå Gemini CLI

Áé∞Âú®‰Ω†ÂèØ‰ª•Áî®Ëá™Â∑±ÁöÑÊúçÂä°ÊõøÊç¢ÂÆòÊñπAPI‰∫ÜÔºö

**Claude Code ËÆæÁΩÆÁéØÂ¢ÉÂèòÈáèÔºö**

ÈªòËÆ§‰ΩøÁî®Ê†áÂáÜ Claude Ë¥¶Âè∑Ê±†Ôºö

```bash
export ANTHROPIC_BASE_URL=&quot;http://127.0.0.1:3000/api/&quot; # Ê†πÊçÆÂÆûÈôÖÂ°´ÂÜô‰Ω†ÊúçÂä°Âô®ÁöÑipÂú∞ÂùÄÊàñËÄÖÂüüÂêç
export ANTHROPIC_AUTH_TOKEN=&quot;ÂêéÂè∞ÂàõÂª∫ÁöÑAPIÂØÜÈí•&quot;
```

**VSCode Claude Êèí‰ª∂ÈÖçÁΩÆÔºö**

Â¶ÇÊûú‰ΩøÁî® VSCode ÁöÑ Claude Êèí‰ª∂ÔºåÈúÄË¶ÅÂú® `~/.claude/config.json` Êñá‰ª∂‰∏≠ÈÖçÁΩÆÔºö

```json
{
    &quot;primaryApiKey&quot;: &quot;crs&quot;
}
```

Â¶ÇÊûúËØ•Êñá‰ª∂‰∏çÂ≠òÂú®ÔºåËØ∑ÊâãÂä®ÂàõÂª∫„ÄÇWindows Áî®Êà∑Ë∑ØÂæÑ‰∏∫ `C:\Users\‰Ω†ÁöÑÁî®Êà∑Âêç\.claude\config.json`„ÄÇ

**Gemini CLI ËÆæÁΩÆÁéØÂ¢ÉÂèòÈáèÔºö**

```bash
GEMINI_MODEL=&quot;gemini-2.5-pro&quot;
GOOGLE_GEMINI_BASE_URL=&quot;http://127.0.0.1:3000/gemini&quot; # Ê†πÊçÆÂÆûÈôÖÂ°´ÂÜô‰Ω†ÊúçÂä°Âô®ÁöÑipÂú∞ÂùÄÊàñËÄÖÂüüÂêç
GEMINI_API_KEY=&quot;ÂêéÂè∞ÂàõÂª∫ÁöÑAPIÂØÜÈí•&quot;  # ‰ΩøÁî®Áõ∏ÂêåÁöÑAPIÂØÜÈí•Âç≥ÂèØ
```
**‰ΩøÁî® Claude CodeÔºö**

```bash
claude
```

**‰ΩøÁî® Gemini CLIÔºö**

```bash
gemini  # ÊàñÂÖ∂‰ªñ Gemini CLI ÂëΩ‰ª§
```

**Codex ÈÖçÁΩÆÔºö**

Âú® `~/.codex/config.toml` Êñá‰ª∂**ÂºÄÂ§¥**Ê∑ªÂä†‰ª•‰∏ãÈÖçÁΩÆÔºö

```toml
model_provider = &quot;crs&quot;
model = &quot;gpt-5-codex&quot;
model_reasoning_effort = &quot;high&quot;
disable_response_storage = true
preferred_auth_method = &quot;apikey&quot;

[model_providers.crs]
name = &quot;crs&quot;
base_url = &quot;http://127.0.0.1:3000/openai&quot;  # Ê†πÊçÆÂÆûÈôÖÂ°´ÂÜô‰Ω†ÊúçÂä°Âô®ÁöÑipÂú∞ÂùÄÊàñËÄÖÂüüÂêç
wire_api = &quot;responses&quot;
requires_openai_auth = true
env_key = &quot;CRS_OAI_KEY&quot;
```

Âú® `~/.codex/auth.json` Êñá‰ª∂‰∏≠ÈÖçÁΩÆAPIÂØÜÈí•‰∏∫ nullÔºö

```json
{
    &quot;OPENAI_API_KEY&quot;: null  
}
```

ÁéØÂ¢ÉÂèòÈáèËÆæÁΩÆÔºö

```bash
export CRS_OAI_KEY=&quot;ÂêéÂè∞ÂàõÂª∫ÁöÑAPIÂØÜÈí•&quot;
```

&gt; ‚ö†Ô∏è Âú®ÈÄöËøá Nginx ÂèçÂêë‰ª£ÁêÜ CRS ÊúçÂä°Âπ∂‰ΩøÁî® Codex CLI Êó∂ÔºåÈúÄË¶ÅÂú® http Âùó‰∏≠Ê∑ªÂä† underscores_in_headers on;„ÄÇÂõ†‰∏∫ Nginx ÈªòËÆ§‰ºöÁßªÈô§Â∏¶‰∏ãÂàíÁ∫øÁöÑËØ∑Ê±ÇÂ§¥ÔºàÂ¶Ç session_idÔºâÔºå‰∏ÄÊó¶ËØ•Â§¥Ë¢´‰∏¢ÂºÉÔºåÂ§öË¥¶Âè∑ÁéØÂ¢É‰∏ãÁöÑÁ≤òÊÄß‰ºöËØùÂäüËÉΩÂ∞ÜÂ§±Êïà„ÄÇ

**Droid CLI ÈÖçÁΩÆÔºö**

Droid CLI ËØªÂèñ `~/.factory/config.json`„ÄÇÂèØ‰ª•Âú®ËØ•Êñá‰ª∂‰∏≠Ê∑ªÂä†Ëá™ÂÆö‰πâÊ®°Âûã‰ª•ÊåáÂêëÊú¨ÊúçÂä°ÁöÑÊñ∞Á´ØÁÇπÔºö

```json
{
  &quot;custom_models&quot;: [
    {
      &quot;model_display_name&quot;: &quot;Sonnet 4.5 [crs]&quot;,
      &quot;model&quot;: &quot;claude-sonnet-4-5-20250929&quot;,
      &quot;base_url&quot;: &quot;http://127.0.0.1:3000/droid/claude&quot;,
      &quot;api_key&quot;: &quot;ÂêéÂè∞ÂàõÂª∫ÁöÑAPIÂØÜÈí•&quot;,
      &quot;provider&quot;: &quot;anthropic&quot;,
      &quot;max_tokens&quot;: 8192
    },
    {
      &quot;model_display_name&quot;: &quot;GPT5-Codex [crs]&quot;,
      &quot;model&quot;: &quot;gpt-5-codex&quot;,
      &quot;base_url&quot;: &quot;http://127.0.0.1:3000/droid/openai&quot;,
      &quot;api_key&quot;: &quot;ÂêéÂè∞ÂàõÂª∫ÁöÑAPIÂØÜÈí•&quot;,
      &quot;provider&quot;: &quot;openai&quot;,
      &quot;max_tokens&quot;: 16384
    }
  ]
}
```

&gt; üí° Â∞ÜÁ§∫‰æã‰∏≠ÁöÑ `http://127.0.0.1:3000` ÊõøÊç¢‰∏∫‰Ω†ÁöÑÊúçÂä°ÂüüÂêçÊàñÂÖ¨ÁΩëÂú∞ÂùÄÔºåÂπ∂ÂÜôÂÖ•ÂêéÂè∞ÁîüÊàêÁöÑ API ÂØÜÈí•Ôºàcr_ ÂºÄÂ§¥Ôºâ„ÄÇ

### 5. Á¨¨‰∏âÊñπÂ∑•ÂÖ∑APIÊé•ÂÖ•

Êú¨ÊúçÂä°ÊîØÊåÅÂ§öÁßçAPIÁ´ØÁÇπÊ†ºÂºèÔºåÊñπ‰æøÊé•ÂÖ•‰∏çÂêåÁöÑÁ¨¨‰∏âÊñπÂ∑•ÂÖ∑ÔºàÂ¶ÇCherry StudioÁ≠âÔºâ„ÄÇ

#### Cherry Studio Êé•ÂÖ•Á§∫‰æã

Cherry StudioÊîØÊåÅÂ§öÁßçAIÊúçÂä°ÁöÑÊé•ÂÖ•Ôºå‰∏ãÈù¢ÊòØ‰∏çÂêåË¥¶Âè∑Á±ªÂûãÁöÑËØ¶ÁªÜÈÖçÁΩÆÔºö

**1. ClaudeË¥¶Âè∑Êé•ÂÖ•Ôºö**

```
# APIÂú∞ÂùÄ
http://‰Ω†ÁöÑÊúçÂä°Âô®:3000/claude

# Ê®°ÂûãIDÁ§∫‰æã
claude-sonnet-4-5-20250929 # Claude Sonnet 4.5
claude-opus-4-20250514     # Claude Opus 4
```

ÈÖçÁΩÆÊ≠•È™§Ôºö
- ‰æõÂ∫îÂïÜÁ±ªÂûãÈÄâÊã©&quot;Anthropic&quot;
- APIÂú∞ÂùÄÂ°´ÂÖ•Ôºö`http://‰Ω†ÁöÑÊúçÂä°Âô®:3000/claude`
- API KeyÂ°´ÂÖ•ÔºöÂêéÂè∞ÂàõÂª∫ÁöÑAPIÂØÜÈí•Ôºàcr_ÂºÄÂ§¥Ôºâ

**2. GeminiË¥¶Âè∑Êé•ÂÖ•Ôºö**

```
# APIÂú∞ÂùÄ
http://‰Ω†ÁöÑÊúçÂä°Âô®:3000/gemini

# Ê®°ÂûãIDÁ§∫‰æã
gemini-2.5-pro             # Gemini 2.5 Pro
```

ÈÖçÁΩÆÊ≠•È™§Ôºö
- ‰æõÂ∫îÂïÜÁ±ªÂûãÈÄâÊã©&quot;Gemini&quot;
- APIÂú∞ÂùÄÂ°´ÂÖ•Ôºö`http://‰Ω†ÁöÑÊúçÂä°Âô®:3000/gemini`
- API KeyÂ°´ÂÖ•ÔºöÂêéÂè∞ÂàõÂª∫ÁöÑAPIÂØÜÈí•Ôºàcr_ÂºÄÂ§¥Ôºâ

**3. CodexÊé•ÂÖ•Ôºö**

```
# APIÂú∞ÂùÄ
http://‰Ω†ÁöÑÊúçÂä°Âô®:3000/openai

# Ê®°ÂûãIDÔºàÂõ∫ÂÆöÔºâ
gpt-5                      # Codex‰ΩøÁî®Âõ∫ÂÆöÊ®°ÂûãID
```

ÈÖçÁΩÆÊ≠•È™§Ôºö
- ‰æõÂ∫îÂïÜÁ±ªÂûãÈÄâÊã©&quot;Openai-Response&quot;
- APIÂú∞ÂùÄÂ°´ÂÖ•Ôºö`http://‰Ω†ÁöÑÊúçÂä°Âô®:3000/openai`
- API KeyÂ°´ÂÖ•ÔºöÂêéÂè∞ÂàõÂª∫ÁöÑAPIÂØÜÈí•Ôºàcr_ÂºÄÂ§¥Ôºâ
- **ÈáçË¶Å**ÔºöCodexÂè™ÊîØÊåÅOpenai-ResponseÊ†áÂáÜ


**Cherry Studio Âú∞ÂùÄÊ†ºÂºèÈáçË¶ÅËØ¥ÊòéÔºö**

- ‚úÖ **Êé®ËçêÊ†ºÂºè**Ôºö`http://‰Ω†ÁöÑÊúçÂä°Âô®:3000/claude`Ôºà‰∏çÂä†ÁªìÂ∞æ `/`ÔºåËÆ© Cherry Studio Ëá™Âä®Âä†‰∏ä v1Ôºâ
- ‚úÖ **Á≠âÊïàÊ†ºÂºè**Ôºö`http://‰Ω†ÁöÑÊúçÂä°Âô®:3000/claude/v1/`ÔºàÊâãÂä®ÊåáÂÆö v1 Âπ∂Âä†ÁªìÂ∞æ `/`Ôºâ
- üí° **ËØ¥Êòé**ÔºöËøô‰∏§ÁßçÊ†ºÂºèÂú® Cherry Studio ‰∏≠ÊòØÂÆåÂÖ®Á≠âÊïàÁöÑ
- ‚ùå **ÈîôËØØÊ†ºÂºè**Ôºö`http://‰Ω†ÁöÑÊúçÂä°Âô®:3000/claude/`ÔºàÂçïÁã¨ÁöÑ `/` ÁªìÂ∞æ‰ºöË¢´ Cherry Studio ÂøΩÁï• v1 ÁâàÊú¨Ôºâ

#### ÂÖ∂‰ªñÁ¨¨‰∏âÊñπÂ∑•ÂÖ∑Êé•ÂÖ•

**Êé•ÂÖ•Ë¶ÅÁÇπÔºö**

- ÊâÄÊúâË¥¶Âè∑Á±ªÂûãÈÉΩ‰ΩøÁî®Áõ∏ÂêåÁöÑAPIÂØÜÈí•ÔºàÂú®ÂêéÂè∞Áªü‰∏ÄÂàõÂª∫Ôºâ
- Ê†πÊçÆ‰∏çÂêåÁöÑË∑ØÁî±ÂâçÁºÄËá™Âä®ËØÜÂà´Ë¥¶Âè∑Á±ªÂûã
- `/claude/` - ‰ΩøÁî®ClaudeË¥¶Âè∑Ê±†
- `/droid/claude/` - ‰ΩøÁî®DroidÁ±ªÂûãClaudeË¥¶Âè∑Ê±†ÔºàÂè™Âª∫ËÆÆapiË∞ÉÁî®ÊàñDroid Cli‰∏≠‰ΩøÁî®Ôºâ
- `/gemini/` - ‰ΩøÁî®GeminiË¥¶Âè∑Ê±†  
- `/openai/` - ‰ΩøÁî®CodexË¥¶Âè∑ÔºàÂè™ÊîØÊåÅOpenai-ResponseÊ†ºÂºèÔºâ
- `/droid/openai/` - ‰ΩøÁî®DroidÁ±ªÂûãOpenAIÂÖºÂÆπË¥¶Âè∑Ê±†ÔºàÂè™Âª∫ËÆÆapiË∞ÉÁî®ÊàñDroid Cli‰∏≠‰ΩøÁî®Ôºâ
- ÊîØÊåÅÊâÄÊúâÊ†áÂáÜAPIÁ´ØÁÇπÔºàmessages„ÄÅmodelsÁ≠âÔºâ

**ÈáçË¶ÅËØ¥ÊòéÔºö**

- Á°Æ‰øùÂú®ÂêéÂè∞Â∑≤Ê∑ªÂä†ÂØπÂ∫îÁ±ªÂûãÁöÑË¥¶Âè∑ÔºàClaude/Gemini/CodexÔºâ
- APIÂØÜÈí•ÂèØ‰ª•ÈÄöÁî®ÔºåÁ≥ªÁªü‰ºöÊ†πÊçÆË∑ØÁî±Ëá™Âä®ÈÄâÊã©Ë¥¶Âè∑Á±ªÂûã
- Âª∫ËÆÆ‰∏∫‰∏çÂêåÁî®Êà∑ÂàõÂª∫‰∏çÂêåÁöÑAPIÂØÜÈí•‰æø‰∫é‰ΩøÁî®ÁªüËÆ°

---

## üîß Êó•Â∏∏Áª¥Êä§

### ÊúçÂä°ÁÆ°ÁêÜ

```bash
# Êü•ÁúãÊúçÂä°Áä∂ÊÄÅ
npm run service:status

# Êü•ÁúãÊó•Âøó
npm run service:logs

# ÈáçÂêØÊúçÂä°
npm run service:restart:daemon

# ÂÅúÊ≠¢ÊúçÂä°
npm run service:stop
```

### ÁõëÊéß‰ΩøÁî®ÊÉÖÂÜµ

- **WebÁïåÈù¢**: `http://‰Ω†ÁöÑÂüüÂêç:3000/web` - Êü•Áúã‰ΩøÁî®ÁªüËÆ°
- **ÂÅ•Â∫∑Ê£ÄÊü•**: `http://‰Ω†ÁöÑÂüüÂêç:3000/health` - Á°ÆËÆ§ÊúçÂä°Ê≠£Â∏∏
- **Êó•ÂøóÊñá‰ª∂**: `logs/` ÁõÆÂΩï‰∏ãÁöÑÂêÑÁßçÊó•ÂøóÊñá‰ª∂

### ÂçáÁ∫ßÊåáÂçó

ÂΩìÊúâÊñ∞ÁâàÊú¨ÂèëÂ∏ÉÊó∂ÔºåÊåâÁÖß‰ª•‰∏ãÊ≠•È™§ÂçáÁ∫ßÊúçÂä°Ôºö

```bash
# 1. ËøõÂÖ•È°πÁõÆÁõÆÂΩï
cd claude-relay-service

# 2. ÊãâÂèñÊúÄÊñ∞‰ª£Á†Å
git pull origin main

# Â¶ÇÊûúÈÅáÂà∞ package-lock.json ÂÜ≤Á™ÅÔºå‰ΩøÁî®ËøúÁ®ãÁâàÊú¨
git checkout --theirs package-lock.json
git add package-lock.json

# 3. ÂÆâË£ÖÊñ∞ÁöÑ‰æùËµñÔºàÂ¶ÇÊûúÊúâÔºâ
npm install

# 4. ÂÆâË£ÖÂπ∂ÊûÑÂª∫ÂâçÁ´Ø
npm run install:web
npm run build:web

# 5. ÈáçÂêØÊúçÂä°
npm run service:restart:daemon

# 6. Ê£ÄÊü•ÊúçÂä°Áä∂ÊÄÅ
npm run service:status
```

**Ê≥®ÊÑè‰∫ãÈ°πÔºö**

- ÂçáÁ∫ßÂâçÂª∫ËÆÆÂ§á‰ªΩÈáçË¶ÅÈÖçÁΩÆÊñá‰ª∂Ôºà.env, config/config.jsÔºâ
- Êü•ÁúãÊõ¥Êñ∞Êó•Âøó‰∫ÜËß£ÊòØÂê¶ÊúâÁ†¥ÂùèÊÄßÂèòÊõ¥
- Â¶ÇÊûúÊúâÊï∞ÊçÆÂ∫ìÁªìÊûÑÂèòÊõ¥Ôºå‰ºöËá™Âä®ËøÅÁßª

---

## üîí ÂÆ¢Êà∑Á´ØÈôêÂà∂ÂäüËÉΩ

### ÂäüËÉΩËØ¥Êòé

ÂÆ¢Êà∑Á´ØÈôêÂà∂ÂäüËÉΩÂÖÅËÆ∏‰Ω†ÊéßÂà∂ÊØè‰∏™API KeyÂèØ‰ª•Ë¢´Âì™‰∫õÂÆ¢Êà∑Á´Ø‰ΩøÁî®ÔºåÈÄöËøáUser-AgentËØÜÂà´ÂÆ¢Êà∑Á´ØÔºåÊèêÈ´òAPIÁöÑÂÆâÂÖ®ÊÄß„ÄÇ

### ‰ΩøÁî®ÊñπÊ≥ï

1. **Âú®ÂàõÂª∫ÊàñÁºñËæëAPI KeyÊó∂ÂêØÁî®ÂÆ¢Êà∑Á´ØÈôêÂà∂**Ôºö
   - ÂãæÈÄâ&quot;ÂêØÁî®ÂÆ¢Êà∑Á´ØÈôêÂà∂&quot;
   - ÈÄâÊã©ÂÖÅËÆ∏ÁöÑÂÆ¢Êà∑Á´ØÔºàÊîØÊåÅÂ§öÈÄâÔºâ

2. **È¢ÑÂÆö‰πâÂÆ¢Êà∑Á´Ø**Ôºö
   - **ClaudeCode**: ÂÆòÊñπClaude CLIÔºàÂåπÈÖç `claude-cli/x.x.x (external, cli)` Ê†ºÂºèÔºâ
   - **Gemini-CLI**: GeminiÂëΩ‰ª§Ë°åÂ∑•ÂÖ∑ÔºàÂåπÈÖç `GeminiCLI/vx.x.x (platform; arch)` Ê†ºÂºèÔºâ

3. **Ë∞ÉËØïÂíåËØäÊñ≠**Ôºö
   - Á≥ªÁªü‰ºöÂú®Êó•Âøó‰∏≠ËÆ∞ÂΩïÊâÄÊúâËØ∑Ê±ÇÁöÑUser-Agent
   - ÂÆ¢Êà∑Á´ØÈ™åËØÅÂ§±Ë¥•Êó∂‰ºöËøîÂõû403ÈîôËØØÂπ∂ËÆ∞ÂΩïËØ¶ÁªÜ‰ø°ÊÅØ
   - ÈÄöËøáÊó•ÂøóÂèØ‰ª•Êü•ÁúãÂÆûÈôÖÁöÑUser-AgentÊ†ºÂºèÔºåÊñπ‰æøÈÖçÁΩÆËá™ÂÆö‰πâÂÆ¢Êà∑Á´Ø


### Êó•ÂøóÁ§∫‰æã

ËÆ§ËØÅÊàêÂäüÊó∂ÁöÑÊó•ÂøóÔºö

```
üîì Authenticated request from key: ÊµãËØïKey (key-id) in 5ms
   User-Agent: &quot;claude-cli/1.0.58 (external, cli)&quot;
```

ÂÆ¢Êà∑Á´ØÈôêÂà∂Ê£ÄÊü•Êó•ÂøóÔºö

```
üîç Checking client restriction for key: key-id (ÊµãËØïKey)
   User-Agent: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64)&quot;
   Allowed clients: claude_code, gemini_cli
üö´ Client restriction failed for key: key-id (ÊµãËØïKey) from 127.0.0.1, User-Agent: Mozilla/5.0...
```

### Â∏∏ËßÅÈóÆÈ¢òÂ§ÑÁêÜ

**RedisËøû‰∏ç‰∏äÔºü**

```bash
# Ê£ÄÊü•RedisÊòØÂê¶ÂêØÂä®
redis-cli ping

# Â∫îËØ•ËøîÂõû PONG
```

**OAuthÊéàÊùÉÂ§±Ë¥•Ôºü**

- Ê£ÄÊü•‰ª£ÁêÜËÆæÁΩÆÊòØÂê¶Ê≠£Á°Æ
- Á°Æ‰øùËÉΩÊ≠£Â∏∏ËÆøÈóÆ claude.ai
- Ê∏ÖÈô§ÊµèËßàÂô®ÁºìÂ≠òÈáçËØï

**APIËØ∑Ê±ÇÂ§±Ë¥•Ôºü**

- Ê£ÄÊü•API KeyÊòØÂê¶Ê≠£Á°Æ
- Êü•ÁúãÊó•ÂøóÊñá‰ª∂ÊâæÈîôËØØ‰ø°ÊÅØ
- Á°ÆËÆ§ClaudeË¥¶Êà∑Áä∂ÊÄÅÊ≠£Â∏∏

---

## üõ†Ô∏è ËøõÈò∂

### ÂèçÂêë‰ª£ÁêÜÈÉ®ÁΩ≤ÊåáÂçó

Âú®Áîü‰∫ßÁéØÂ¢É‰∏≠ÔºåÂª∫ËÆÆÈÄöËøáÂèçÂêë‰ª£ÁêÜËøõË°åËøûÊé•Ôºå‰ª•‰æø‰ΩøÁî®Ëá™Âä® HTTPS„ÄÅÂÆâÂÖ®Â§¥ÈÉ®ÂíåÊÄßËÉΩ‰ºòÂåñ„ÄÇ‰∏ãÈù¢Êèê‰æõ‰∏§ÁßçÂ∏∏Áî®ÊñπÊ°àÔºö **Caddy** Âíå **Nginx Proxy Manager (NPM)**„ÄÇ

---

## Caddy ÊñπÊ°à

Caddy ÊòØ‰∏ÄÊ¨æËá™Âä®ÁÆ°ÁêÜ HTTPS ËØÅ‰π¶ÁöÑ Web ÊúçÂä°Âô®ÔºåÈÖçÁΩÆÁÆÄÂçï„ÄÅÊÄßËÉΩ‰ºòÁßÄÔºåÂæàÈÄÇÂêà‰∏çÈúÄË¶Å Docker ÁéØÂ¢ÉÁöÑÈÉ®ÁΩ≤ÊñπÊ°à„ÄÇ

**1. ÂÆâË£Ö Caddy**

```bash
# Ubuntu/Debian
sudo apt install -y debian-keyring debian-archive-keyring apt-transport-https
curl -1sLf &#039;https://dl.cloudsmith.io/public/caddy/stable/gpg.key&#039; | sudo gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg
curl -1sLf &#039;https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt&#039; | sudo tee /etc/apt/sources.list.d/caddy-stable.list
sudo apt update
sudo apt install caddy

# CentOS/RHEL/Fedora
sudo yum install yum-plugin-copr
sudo yum copr enable @caddy/caddy
sudo yum install caddy
```

**2. Caddy ÈÖçÁΩÆ**

ÁºñËæë `/etc/caddy/Caddyfile` Ôºö

```caddy
your-domain.com {
    # ÂèçÂêë‰ª£ÁêÜÂà∞Êú¨Âú∞ÊúçÂä°
    reverse_proxy 127.0.0.1:3000 {
        # ÊîØÊåÅÊµÅÂºèÂìçÂ∫îÊàñ SSE
        flush_interval -1

        # ‰º†ÈÄíÁúüÂÆû IP
        header_up X-Real-IP {remote_host}
        header_up X-Forwarded-For {remote_host}
        header_up X-Forwarded-Proto {scheme}

        # ÈïøËØª/ÂÜôË∂ÖÊó∂ÈÖçÁΩÆ
        transport http {
            read_timeout 300s
            write_timeout 300s
            dial_timeout 30s
        }
    }

    # ÂÆâÂÖ®Â§¥ÈÉ®
    header {
        Strict-Transport-Security &quot;max-age=31536000; includeSubDomains&quot;
        X-Frame-Options &quot;DENY&quot;
        X-Content-Type-Options &quot;nosniff&quot;
        -Server
    }
}
```

**3. ÂêØÂä® Caddy**

```bash
sudo caddy validate --config /etc/caddy/Caddyfile
sudo systemctl start caddy
sudo systemctl enable caddy
sudo systemctl status caddy
```

**4. ÊúçÂä°ÈÖçÁΩÆ**

Caddy ‰ºöËá™Âä®ÁÆ°ÁêÜ HTTPSÔºåÂõ†Ê≠§ÂèØ‰ª•Â∞ÜÊúçÂä°ÈôêÂà∂Âú®Êú¨Âú∞ËøõË°åÁõëÂê¨Ôºö

```javascript
// config/config.js
module.exports = {
  server: {
    port: 3000,
    host: &#039;127.0.0.1&#039; // Âè™ÁõëÂê¨Êú¨Âú∞
  }
}
```

**Caddy ÁâπÁÇπ**

* üîí Ëá™Âä® HTTPSÔºåÈõ∂ÈÖçÁΩÆËØÅ‰π¶ÁÆ°ÁêÜ
* üõ°Ô∏è ÂÆâÂÖ®ÈªòËÆ§ÈÖçÁΩÆÔºåÂêØÁî®Áé∞‰ª£ TLS Â•ó‰ª∂
* ‚ö° HTTP/2 ÂíåÊµÅÂºè‰º†ËæìÊîØÊåÅ
* üîß ÈÖçÁΩÆÊñá‰ª∂ÁÆÄÊ¥ÅÔºåÊòì‰∫éÁª¥Êä§

---

## Nginx Proxy Manager (NPM) ÊñπÊ°à

Nginx Proxy Manager ÈÄöËøáÂõæÂΩ¢ÂåñÁïåÈù¢ÁÆ°ÁêÜÂèçÂêë‰ª£ÁêÜÂíå HTTPS ËØÅ‰π¶Ôºå‰∏¶‰ª• Docker ÂÆπÂô®ÈÉ®ÁΩ≤„ÄÇ

**1. Âú® NPM ÂàõÂª∫Êñ∞ÁöÑ Proxy Host**

Details ÈÖçÁΩÆÂ¶Ç‰∏ãÔºö

| È°πÁõÆ                    | ËÆæÁΩÆ                      |
| --------------------- | ----------------------- |
| Domain Names          | relay.example.com       |
| Scheme                | http                    |
| Forward Hostname / IP | 192.168.0.1 (docker Êú∫Âô® IP) |
| Forward Port          | 3000                    |
| Block Common Exploits | ‚òëÔ∏è                      |
| Websockets Support    | ‚ùå **ÂÖ≥Èó≠**                |
| Cache Assets          | ‚ùå **ÂÖ≥Èó≠**                |
| Access List           | Publicly Accessible     |

&gt; Ê≥®ÊÑèÔºö
&gt; - ËØ∑Á°Æ‰øù Claude Relay Service **ÁõëÂê¨ host ‰∏∫ `0.0.0.0` „ÄÅÂÆπÂô® IP ÊàñÊú¨Êú∫ IP**Ôºå‰ª•‰æø NPM ÂÆûÁé∞ÂÜÖÁΩëËøûÊé•„ÄÇ
&gt; - **Websockets Support Âíå Cache Assets ÂøÖÈ°ªÂÖ≥Èó≠**ÔºåÂê¶Âàô‰ºöÂØºËá¥ SSE / ÊµÅÂºèÂìçÂ∫îÂ§±Ë¥•„ÄÇ

**2. Custom locations**

ÁÑ°ÈúÄÊ∑ªÂä†‰ªª‰ΩïÂÜÖÂÆπÔºå‰øùÊåÅ‰∏∫Á©∫„ÄÇ

**3. SSL ËÆæÁΩÆ**

* **SSL Certificate**: Request a new SSL Certificate (Let&#039;s Encrypt) ÊàñÂ∑≤ÊúâËØÅ‰π¶
* ‚òëÔ∏è **Force SSL**
* ‚òëÔ∏è **HTTP/2 Support**
* ‚òëÔ∏è **HSTS Enabled**
* ‚òëÔ∏è **HSTS Subdomains**

**4. Advanced ÈÖçÁΩÆ**

Custom Nginx Configuration ‰∏≠Ê∑ªÂä†‰ª•‰∏ãÂÜÖÂÆπÔºö

```nginx
# ‰º†ÈÄíÁúüÂÆûÁî®Êà∑ IP
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;

# ÊîØÊåÅ WebSocket / SSE Á≠âÊµÅÂºèÈÄö‰ø°
proxy_http_version 1.1;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection &quot;upgrade&quot;;
proxy_buffering off;

# ÈïøËøûÊé• / Ë∂ÖÊó∂ËÆæÁΩÆÔºàÈÄÇÂêà AI ËÅäÂ§©ÊµÅÂºè‰º†ËæìÔºâ
proxy_read_timeout 300s;
proxy_send_timeout 300s;
proxy_connect_timeout 30s;

# ---- ÂÆâÂÖ®ÊÄßËÆæÁΩÆ ----
# ‰∏•Ê†º HTTPS Á≠ñÁï• (HSTS)
add_header Strict-Transport-Security &quot;max-age=31536000; includeSubDomains&quot; always;

# ÈòªÊå°ÁÇπÂáªÂä´ÊåÅ‰∏éÂÜÖÂÆπÂóÖÊé¢
add_header X-Frame-Options &quot;DENY&quot; always;
add_header X-Content-Type-Options &quot;nosniff&quot; always;

# Referrer / Permissions ÈôêÂà∂Á≠ñÁï•
add_header Referrer-Policy &quot;no-referrer-when-downgrade&quot; always;
add_header Permissions-Policy &quot;camera=(), microphone=(), geolocation=()&quot; always;

# ÈöêËóèÊúçÂä°Âô®‰ø°ÊÅØÔºàÁ≠âÊïà‰∫é Caddy ÁöÑ `-Server`Ôºâ
proxy_hide_header Server;

# ---- ÊÄßËÉΩÂæÆË∞É ----
# ÂÖ≥Èó≠‰ª£ÁêÜÁ´ØÁºìÂ≠òÔºåÁ°Æ‰øùÂç≥Êó∂ÂìçÂ∫îÔºàSSE / StreamingÔºâ
proxy_cache_bypass $http_upgrade;
proxy_no_cache $http_upgrade;
proxy_request_buffering off;
```

**4. ÂêØÂä®ÂíåÈ™åËØÅ**

* ‰øùÂ≠òÂêéÁ≠âÂæÖ NPM Ëá™Âä®Áî≥ËØ∑ Let&#039;s Encrypt ËØÅ‰π¶ÔºàÂ¶ÇÊûúÊúâÔºâ„ÄÇ
* Dashboard ‰∏≠Êü•Áúã Proxy Host Áä∂ÊÄÅÔºåÁ°Æ‰øùÊòæÁ§∫‰∏∫ &quot;Online&quot;„ÄÇ
* ËÆøÈóÆ `https://relay.example.com`ÔºåÂ¶ÇÊûúÊòæÁ§∫ÁªøËâ≤ÈîÅÂõæÊ†áÂç≥Ë°®Á§∫ HTTPS Ê≠£Â∏∏„ÄÇ

**NPM ÁâπÁÇπ**

* üîí Ëá™Âä®Áî≥ËØ∑ÂíåÁª≠ÊúüËØÅ‰π¶
* üîß ÂõæÂΩ¢ÂåñÁïåÈù¢ÔºåÊñπ‰æøÁÆ°ÁêÜÂ§öÊúçÂä°
* ‚ö° ÂéüÁîüÊîØÊåÅ HTTP/2 / HTTPS
* üöÄ ÈÄÇÂêà Docker ÂÆπÂô®ÈÉ®ÁΩ≤

---

‰∏äËø∞‰∏§ÁßçÊñπÊ°àÂùáÂèØÁî®‰∫éÁîü‰∫ßÈÉ®ÁΩ≤„ÄÇ

---

## üí° ‰ΩøÁî®Âª∫ËÆÆ

### Ë¥¶Êà∑ÁÆ°ÁêÜ

- **ÂÆöÊúüÊ£ÄÊü•**: ÊØèÂë®ÁúãÁúãË¥¶Êà∑Áä∂ÊÄÅÔºåÂèäÊó∂Â§ÑÁêÜÂºÇÂ∏∏
- **ÂêàÁêÜÂàÜÈÖç**: ÂèØ‰ª•Áªô‰∏çÂêåÁöÑ‰∫∫ÂàÜÈÖç‰∏çÂêåÁöÑapikeyÔºåÂèØ‰ª•Ê†πÊçÆ‰∏çÂêåÁöÑapikeyÊù•ÂàÜÊûêÁî®Èáè

### ÂÆâÂÖ®Âª∫ËÆÆ

- **‰ΩøÁî®HTTPS**: Âº∫ÁÉàÂª∫ËÆÆ‰ΩøÁî®CaddyÂèçÂêë‰ª£ÁêÜÔºàËá™Âä®HTTPSÔºâÔºåÁ°Æ‰øùÊï∞ÊçÆ‰º†ËæìÂÆâÂÖ®
- **ÂÆöÊúüÂ§á‰ªΩ**: ÈáçË¶ÅÈÖçÁΩÆÂíåÊï∞ÊçÆË¶ÅÂ§á‰ªΩ
- **ÁõëÊéßÊó•Âøó**: ÂÆöÊúüÊü•ÁúãÂºÇÂ∏∏Êó•Âøó
- **Êõ¥Êñ∞ÂØÜÈí•**: ÂÆöÊúüÊõ¥Êç¢JWTÂíåÂä†ÂØÜÂØÜÈí•
- **Èò≤ÁÅ´Â¢ôËÆæÁΩÆ**: Âè™ÂºÄÊîæÂøÖË¶ÅÁöÑÁ´ØÂè£Ôºà80, 443ÔºâÔºåÈöêËóèÁõ¥Êé•ÊúçÂä°Á´ØÂè£

---

## üÜò ÈÅáÂà∞ÈóÆÈ¢òÊÄé‰πàÂäûÔºü

### Ëá™Âä©ÊéíÊü•

1. **Êü•ÁúãÊó•Âøó**: `logs/` ÁõÆÂΩï‰∏ãÁöÑÊó•ÂøóÊñá‰ª∂
2. **Ê£ÄÊü•ÈÖçÁΩÆ**: Á°ÆËÆ§ÈÖçÁΩÆÊñá‰ª∂ËÆæÁΩÆÊ≠£Á°Æ
3. **ÊµãËØïËøûÈÄöÊÄß**: Áî® curl ÊµãËØïAPIÊòØÂê¶Ê≠£Â∏∏
4. **ÈáçÂêØÊúçÂä°**: ÊúâÊó∂ÂÄôÈáçÂêØ‰∏Ä‰∏ãÂ∞±Â•Ω‰∫Ü

### ÂØªÊ±ÇÂ∏ÆÂä©

- **GitHub Issues**: Êèê‰∫§ËØ¶ÁªÜÁöÑÈîôËØØ‰ø°ÊÅØ
- **Êü•ÁúãÊñáÊ°£**: ‰ªîÁªÜÈòÖËØªÈîôËØØ‰ø°ÊÅØÂíåÊñáÊ°£
- **Á§æÂå∫ËÆ®ËÆ∫**: ÁúãÁúãÂÖ∂‰ªñ‰∫∫ÊòØÂê¶ÈÅáÂà∞Á±ª‰ººÈóÆÈ¢ò

---

## üìÑ ËÆ∏ÂèØËØÅ

Êú¨È°πÁõÆÈááÁî® [MITËÆ∏ÂèØËØÅ](LICENSE)„ÄÇ

---

&lt;div align=&quot;center&quot;&gt;

**‚≠ê ËßâÂæóÊúâÁî®ÁöÑËØùÁªô‰∏™StarÂëóÔºåËøôÊòØÂØπ‰ΩúËÄÖÊúÄÂ§ßÁöÑÈºìÂä±ÔºÅ**

**ü§ù ÊúâÈóÆÈ¢òÊ¨¢ËøéÊèêIssueÔºåÊúâÊîπËøõÂª∫ËÆÆÊ¨¢ËøéPR**

&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[zumerlab/snapdom]]></title>
            <link>https://github.com/zumerlab/snapdom</link>
            <guid>https://github.com/zumerlab/snapdom</guid>
            <pubDate>Thu, 16 Oct 2025 00:04:57 GMT</pubDate>
            <description><![CDATA[snapDOM captures HTML elements to images with exceptional speed and accuracy.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/zumerlab/snapdom">zumerlab/snapdom</a></h1>
            <p>snapDOM captures HTML elements to images with exceptional speed and accuracy.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,413</p>
            <p>Forks: 209</p>
            <p>Stars today: 19 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;http://zumerlab.github.io/snapdom&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/zumerlab/snapdom/main/docs/assets/newhero.png&quot; width=&quot;80%&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
 &lt;a href=&quot;https://www.npmjs.com/package/@zumer/snapdom&quot;&gt;
    &lt;img alt=&quot;NPM version&quot; src=&quot;https://img.shields.io/npm/v/@zumer/snapdom?style=flat-square&amp;label=Version&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@zumer/snapdom&quot;&gt;
    &lt;img alt=&quot;NPM version&quot; src=&quot;https://img.shields.io/npm/v/@zumer/snapdom/dev?style=flat-square&amp;label=Dev&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/zumerlab/snapdom/graphs/contributors&quot;&gt;
    &lt;img alt=&quot;GitHub contributors&quot; src=&quot;https://img.shields.io/github/contributors/zumerlab/snapdom?style=flat-square&amp;label=Contributors&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/zumerlab/snapdom/stargazers&quot;&gt;
    &lt;img alt=&quot;GitHub stars&quot; src=&quot;https://img.shields.io/github/stars/zumerlab/snapdom?style=flat-square&amp;label=Stars&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/zumerlab/snapdom/network/members&quot;&gt;
    &lt;img alt=&quot;GitHub forks&quot; src=&quot;https://img.shields.io/github/forks/zumerlab/snapdom?style=flat-square&amp;label=Forks&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/sponsors/tinchox5&quot;&gt;
    &lt;img alt=&quot;Sponsor tinchox5&quot; src=&quot;https://img.shields.io/github/sponsors/tinchox5?style=flat-square&amp;label=Sponsor&quot;&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/zumerlab/snapdom/blob/main/LICENSE&quot;&gt;
    &lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/github/license/zumerlab/snapdom?style=flat-square&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

# snapDOM

**snapDOM** is a fast and accurate DOM-to-image capture tool built for **Zumly**, a zoom-based view transition framework.

It captures any HTML element as a scalable SVG image, preserving styles, fonts, background images, pseudo-elements, and even shadow DOM. It also supports export to raster image formats and canvas.

* Full DOM capture
* Embedded styles, pseudo-elements, and fonts
* Export to SVG, PNG, JPG, WebP, `canvas`, or Blob
* ‚ö° Ultra fast, no dependencies
* 100% based on standard Web APIs
* Support same-origin `√¨frame`
* Support CSS counter() and CSS counters()
* Support `...` line-clamp

## Demo

[https://snapdom.dev](https://snapdom.dev)


## Table of Contents

- [Installation](#installation)
  - [NPM / Yarn (stable)](#npm--yarn-stable)
  - [NPM / Yarn (dev builds)](#npm--yarn-dev-builds)
  - [CDN (stable)](#cdn-stable)
  - [CDN (dev builds)](#cdn-dev-builds)
- [Basic usage](#basic-usage)
  - [Reusable capture](#reusable-capture)
  - [One-step shortcuts](#one-step-shortcuts)
- [API](#api)
  - [snapdom(el, options?)](#snapdomel-options)
  - [Shortcut methods](#shortcut-methods)
- [Options](#options)
  - [Fallback image on `&lt;img&gt;` load failure](#fallback-image-on-img-load-failure)
  - [Dimensions (`scale`, `width`, `height`)](#dimensions-scale-width-height)
  - [Cross-Origin Images &amp; Fonts (`useProxy`)](#cross-origin-images--fonts-useproxy)
  - [Fonts](#fonts)
    - [embedFonts](#embedfonts)
    - [localFonts](#localfonts)
    - [iconFonts](#iconfonts)
    - [excludeFonts](#excludefonts)
  - [Filtering nodes: `exclude` vs `filter`](#filtering-nodes-exclude-vs-filter)
  - [straighten](#straighten)
  - [noShadows](#no-shadows)
  - [Cache control](#cache-control)
- [preCache](#precache--optional-helper)
- [Plugins (BETA)](#plugins-beta)
  - [Registering Plugins](#registering-plugins)
  - [Plugin Lifecycle Hooks](#plugin-lifecycle-hooks)
  - [Context Object](#context-object)
  - [Custom Exports via Plugins](#custom-exports-via-plugins)
  - [Example: Overlay Filter Plugin](#example-overlay-filter-plugin)
  - [Full Plugin Template](#full-plugin-template)
- [Limitations](#limitations)
- [‚ö° Performance Benchmarks (Chromium)](#performance-benchmarks)
  - [Simple elements](#simple-elements)
  - [Complex elements](#complex-elements)
  - [Run the benchmarks](#run-the-benchmarks)
- [Roadmap](#roadmap)
- [Development](#development)
- [Contributors üôå](#contributors)
- [üíñ Sponsors](#sponsors)
- [Star History](#star-history)
- [License](#license)



## Installation

### NPM / Yarn (stable)

```bash
npm i @zumer/snapdom
yarn add @zumer/snapdom
```

### NPM / Yarn (dev builds)

For early access to new features and fixes:

```bash
npm i @zumer/snapdom@dev
yarn add @zumer/snapdom@dev
```

‚ö†Ô∏è The `@dev` tag usually includes improvements before they reach production, but may be less stable.


### CDN (stable)

```html
&lt;!-- Minified UMD build --&gt;
&lt;script src=&quot;https://unpkg.com/@zumer/snapdom/dist/snapdom.min.js&quot;&gt;&lt;/script&gt;

&lt;!-- ES Module build --&gt;
&lt;script type=&quot;module&quot;&gt;
  import { snapdom } from &quot;https://unpkg.com/@zumer/snapdom/dist/snapdom.mjs&quot;;
&lt;/script&gt;
```

### CDN (dev builds)

```html
&lt;!-- Minified UMD build (dev) --&gt;
&lt;script src=&quot;https://unpkg.com/@zumer/snapdom@dev/dist/snapdom.min.js&quot;&gt;&lt;/script&gt;

&lt;!-- ES Module build (dev) --&gt;
&lt;script type=&quot;module&quot;&gt;
  import { snapdom } from &quot;https://unpkg.com/@zumer/snapdom@dev/dist/snapdom.mjs&quot;;
&lt;/script&gt;
```


## Basic usage

### Reusable capture
```js
const el = document.querySelector(&#039;#target&#039;);
const result = await snapdom(el);

const img = await result.toPng();
document.body.appendChild(img);

await result.download({ format: &#039;jpg&#039;, filename: &#039;my-capture&#039; });
```

### One-step shortcuts
```js
const el = document.querySelector(&#039;#target&#039;);
const png = await snapdom.toPng(el);
document.body.appendChild(png);

const blob = await snapdom.toBlob(el);
```

## API

### `snapdom(el, options?)`

Returns an object with reusable export methods:

```js
{
  url: string;
  toRaw(): string;
  toImg(): Promise&lt;HTMLImageElement&gt;; // deprecated 
  toSvg(): Promise&lt;HTMLImageElement&gt;;
  toCanvas(): Promise&lt;HTMLCanvasElement&gt;;
  toBlob(options?): Promise&lt;Blob&gt;;
  toPng(options?): Promise&lt;HTMLImageElement&gt;;
  toJpg(options?): Promise&lt;HTMLImageElement&gt;;
  toWebp(options?): Promise&lt;HTMLImageElement&gt;;
  download(options?): Promise&lt;void&gt;;
}
```

### Shortcut methods

| Method                         | Description                       |
| ------------------------------ | --------------------------------- |
| `snapdom.toImg(el, options?)`  | Returns an SVG `HTMLImageElement` (deprecated) |
| `snapdom.toSvg(el, options?)`  | Returns an SVG `HTMLImageElement` |
| `snapdom.toCanvas(el, options?)` | Returns a `Canvas`               |
| `snapdom.toBlob(el, options?)` | Returns an SVG or raster `Blob`   |
| `snapdom.toPng(el, options?)`  | Returns a PNG image               |
| `snapdom.toJpg(el, options?)`  | Returns a JPG image               |
| `snapdom.toWebp(el, options?)` | Returns a WebP image              |
| `snapdom.download(el, options?)` | Triggers a download              |

## Options

&gt; ‚úÖ **Note:** Style compression is now always on internally. The `compress` option has been removed.

All capture methods accept an `options` object:


| Option            | Type     | Default  | Description                                     |
| ----------------- | -------- | -------- | ----------------------------------------------- |
| `fast`            | boolean  | `true`   | Skips small idle delays for faster results      |
| `embedFonts`      | boolean  | `false`  | Inlines non-icon fonts (icon fonts always on)   |
| `localFonts`      | array    | `[]`     | Local fonts `{ family, src, weight?, style? }`  |
| `iconFonts`       | string\|RegExp\|Array | `[]` | Extra icon font matchers                      |
| `excludeFonts`    | object   | `{}`     | Exclude families/domains/subsets during embedding |
| `scale`           | number   | `1`      | Output scale multiplier                         |
| `dpr`             | number   | `devicePixelRatio` | Device pixel ratio                     |
| `width`           | number   | -        | Output width                                    |
| `height`          | number   | -        | Output height                                   |
| `backgroundColor` | string   | `&quot;#fff&quot;` | Fallback color for JPG/WebP                     |
| `quality`         | number   | `1`      | Quality for JPG/WebP (0 to 1)                   |
| `useProxy`        | string   | `&#039;&#039;`     | Proxy base for CORS fallbacks                   |
| `type`            | string   | `svg`    | Default Blob type (`svg`\|`png`\|`jpg`\|`webp`) |
| `exclude`         | string[] | -        | CSS selectors to exclude                        |
| `excludeMode`     | `&quot;hide&quot;`\|`&quot;remove&quot;` | `&quot;hide&quot;` | How `exclude` is applied                  |
| `filter`          | function | -        | Custom predicate `(el) =&gt; boolean`              |
| `filterMode`      | `&quot;hide&quot;`\|`&quot;remove&quot;` | `&quot;hide&quot;` | How `filter` is applied                   |
| `cache`           | string   | `&quot;soft&quot;` | `disabled` \| `soft` \| `auto` \| `full`        |
| `placeholders`    | boolean  | `true`   | Show placeholders for images/CORS iframes       |
| `fallbackURL`     | string \| function  | - | Fallback image for `&lt;img&gt;` load failure |
| `straighten`      | boolean  | `false`  | Straightens the root: removes `translate/rotate` but preserves `scale/skew`, producing a flat, reusable capture |
| `noShadows`       | boolean  | `false`  | Do not expand the root‚Äôs bounding box for shadows/blur/outline, and strip those visual effects from the cloned root |

### Fallback image on `&lt;img&gt;` load failure

Provide a default image for failed `&lt;img&gt;` loads. You can pass a fixed URL or a callback that receives measured dimensions and returns a URL (handy to generate dynamic placeholders).

```js
// 1) Fixed URL fallback
await snapdom.toSvg(element, {
  fallbackURL: &#039;/images/fallback.png&#039;
});

// 2) Dynamic placeholder via callback
await snapdom.toSvg(element, {
  fallbackURL: ({ width: 300, height: 150 }) =&gt;
    `https://placehold.co/${width}x${height}`
});

// 3) With proxy (if your fallback host has no CORS)
await snapdom.toSvg(element, {
  fallbackURL: ({ width = 300, height = 150 }) =&gt;
    `https://dummyimage.com/${width}x${height}/cccccc/666.png&amp;text=img`,
  useProxy: &#039;https://proxy.corsfix.com/?&#039;
});
```

Notes:
- If the fallback image also fails to load, snapDOM replaces the `&lt;img&gt;` with a placeholder block preserving width/height.
- Width/height used by the callback are gathered from the original element (dataset, style/attrs, etc.) when available.


### Dimensions (`scale`, `width`, `height`)

* If `scale` is provided, it **takes precedence** over `width`/`height`.
* If only `width` is provided, height scales proportionally (and vice versa).
* Providing both `width` and `height` forces an exact size (may distort).

### Cross-Origin Images &amp; Fonts (`useProxy`)

By default snapDOM tries `crossOrigin=&quot;anonymous&quot;` (or `use-credentials` for same-origin). If an asset is CORS-blocked, you can set `useProxy` to a prefix URL that forwards the actual `src`:

```js
await snapdom.toPng(el, {
  useProxy: &#039;https://proxy.corsfix.com/?&#039; // Note: Any cors proxy could be used &#039;https://proxy.corsfix.com/?&#039;
});
```


* The proxy is only used as a **fallback**; same-origin and CORS-enabled assets skip it.

### Fonts

#### `embedFonts`
When `true`, snapDOM embeds **non-icon** `@font-face` rules detected as used within the captured subtree. Icon fonts (Font Awesome, Material Icons, etc.) are embedded **always**.

#### `localFonts`
If you serve fonts yourself or have data URLs, you can declare them here to avoid extra CSS discovery:

```js
await snapdom.toPng(el, {
  embedFonts: true,
  localFonts: [
    { family: &#039;Inter&#039;, src: &#039;/fonts/Inter-Variable.woff2&#039;, weight: 400, style: &#039;normal&#039; },
    { family: &#039;Inter&#039;, src: &#039;/fonts/Inter-Italic.woff2&#039;, style: &#039;italic&#039; }
  ]
});
```

#### `iconFonts`
Add custom icon families (names or regex matchers). Useful for private icon sets:

```js
await snapdom.toPng(el, {
  iconFonts: [&#039;MyIcons&#039;, /^(Remix|Feather) Icons?$/i]
});
```

#### `excludeFonts`
Skip specific non-icon fonts to speed up capture or avoid unnecessary downloads.

```js
await snapdom.toPng(el, {
  embedFonts: true,
  excludeFonts: {
    families: [&#039;Noto Serif&#039;, &#039;SomeHeavyFont&#039;],     // skip by family name
    domains: [&#039;fonts.gstatic.com&#039;, &#039;cdn.example&#039;], // skip by source host
    subsets: [&#039;cyrillic-ext&#039;]                      // skip by unicode-range subset tag
  }
});
```
*Notes*
- `excludeFonts` only applies to **non-icon** fonts. Icon fonts are always embedded.
- Matching is case-insensitive for `families`. Hosts are matched by substring against the resolved URL.


#### Filtering nodes: `exclude` vs `filter`

* `exclude`: remove by **selector**.
* `excludeMode`: `hide` applies `visibility:hidden` CSS rule on excluded nodes and the layout remains as the original. `remove` do not clone excluded nodes at all.
* `filter`: advanced predicate per element (return `false` to drop).
* `filterMode`: `hide` applies `visibility:hidden` CSS rule on filtered nodes and the layout remains as the original. `remove` do not clone filtered nodes at all.

**Example: filter out elements with `display:none`:**
```js
/**
 * Example filter: skip elements with display:none
 * @param {Element} el
 * @returns {boolean} true = keep, false = exclude
 */
function filterHidden(el) {
  const cs = window.getComputedStyle(el);
  if (cs.display === &#039;none&#039;) return false;
  return true;
}

await snapdom.toPng(document.body, { filter: filterHidden });
```

**Example with `exclude`:** remove banners or tooltips by selector
```js
await snapdom.toPng(el, {
  exclude: [&#039;.cookie-banner&#039;, &#039;.tooltip&#039;, &#039;[data-test=&quot;debug&quot;]&#039;]
});
```

### Straighten 

When capturing rotated or translated elements, you may want to **straighten** the root so the snapshot can be reused in another layout without inheriting those transforms.

- **`straighten: true`**  
  Straightens the cloned root: **removes `translate` and `rotate`** but **keeps `scale/skew`** to preserve proportions.  
  The output is **flat, upright, and ready** to embed elsewhere.


### noShadows
- **`noShadows: true`**  
  Prevents expanding the bounding box for shadows, blur, or outline on the root, and also strips `box-shadow`, `text-shadow`, `filter: blur()/drop-shadow()`, and `outline` from the cloned root.  

&gt; üí° **Tip:** Using both (`straighten` + `noShadows`) produces a strict, minimal bounding box with no visual bleed.

**Example**

```js
// Straighten and remove shadow bleed
await snapdom.toSvg(el, { straighten: true, noShadows: true });
```

## Cache control

SnapDOM maintains internal caches for images, backgrounds, resources, styles, and fonts.
You can control how they are cleared between captures using the `cache` option:

| Mode        | Description                                                                 |
| ----------- | --------------------------------------------------------------------------- |
| `&quot;disabled&quot;`| No cache                   |
| `&quot;soft&quot;`    | Clears session caches (`styleMap`, `nodeMap`, `styleCache`) _(default)_      |
| `&quot;auto&quot;`    | Minimal cleanup: only clears transient maps                                 |
| `&quot;full&quot;`    | Keeps all caches (nothing is cleared, maximum performance)                  |

**Examples:**

```js
// Use minimal but fast cache
await snapdom.toPng(el, { cache: &#039;auto&#039; });

// Keep everything in memory between captures
await snapdom.toPng(el, { cache: &#039;full&#039; });

// Force a full cleanup on every capture
await snapdom.toPng(el, { cache: &#039;disabled&#039; });
```

## `preCache()` ‚Äì Optional helper

Preloads external resources to avoid first-capture stalls (helpful for big/complex trees).

```js
import { preCache } from &#039;@zumer/snapdom&#039;;

await preCache({
  root: document.body,
  embedFonts: true,
  localFonts: [{ family: &#039;Inter&#039;, src: &#039;/fonts/Inter.woff2&#039;, weight: 400 }],
  useProxy: &#039;https://proxy.corsfix.com/?&#039;
});
```

## Plugins (BETA)

SnapDOM includes a lightweight **plugin system** that allows you to extend or override behavior at any stage of the capture and export process ‚Äî without touching the core library.

A plugin is a simple object with a unique `name` and one or more lifecycle **hooks**.
Hooks can be synchronous or `async`, and they receive a shared **`context`** object.

### Registering Plugins

**Global registration** (applies to all captures):

```js
import { snapdom } from &#039;@zumer/snapdom&#039;;

// You can register instances, factories, or [factory, options]
snapdom.plugins(
  myPluginInstance,
  [myPluginFactory, { optionA: true }],
  { plugin: anotherFactory, options: { level: 2 } }
);
```

**Per-capture registration** (only for that specific call):

```js
const out = await snapdom(element, {
  plugins: [
    [overlayFilterPlugin, { color: &#039;rgba(0,0,0,0.25)&#039; }],
    [myFullPlugin, { providePdf: true }]
  ]
});
```

* **Execution order = registration order** (first registered, first executed).
* **Per-capture plugins** run **before** global ones.
* Duplicates are automatically skipped by `name`; a per-capture plugin with the same `name` overrides its global version.

### Plugin Lifecycle Hooks

| Hook                           | Purpose                                                                              |
| ------------------------------ | ------------------------------------------------------------------------------------ |
| `beforeSnap(context)`          | Before any clone/style work. Ideal for adjusting global capture options.             |
| `beforeClone(context)`         | Before DOM cloning. Can modify live DOM (use carefully).                             |
| `afterClone(context)`          | After the element subtree has been cloned. Safe to modify styles in the cloned tree. |
| `beforeRender(context)`        | Right before SVG/dataURL serialization.                                              |
| `afterRender(context)`         | After serialization (you can inspect `context.svgString` or `context.dataURL`).      |
| `beforeExport(context)`        | Before each export call (`toPng`, `toSvg`, etc.).                                    |
| `afterExport(context, result)` | After each export call ‚Äî can transform the returned result.                          |
| `afterSnap(context)`           | Runs **once**, after the **first export** finishes. Perfect for cleanup.             |
| `defineExports(context)`       | Returns a map of **custom exporters**, e.g. `{ pdf: async (ctx, opts) =&gt; Blob }`.    |

&gt; Returned values from `afterExport` are chained to the next plugin (transform pipeline).

### Context Object

Every hook receives a single `context` object that contains normalized capture state:

* **Input &amp; options:**
  `element`, `debug`, `fast`, `scale`, `dpr`, `width`, `height`, `backgroundColor`, `quality`, `useProxy`, `cache`, `straighten`, `noShadows`, `embedFonts`, `localFonts`, `iconFonts`, `excludeFonts`, `exclude`, `excludeMode`, `filter`, `filterMode`, `fallbackURL`.

* **Intermediate values (depending on stage):**
  `clone`, `classCSS`, `styleCache`, `fontsCSS`, `baseCSS`, `svgString`, `dataURL`.

* **During export:**
  `context.export = { type, options, url }`
  where `type` is the exporter name (`&quot;png&quot;`, `&quot;jpeg&quot;`, `&quot;svg&quot;`, `&quot;blob&quot;`, etc.), and `url` is the serialized SVG base.

&gt; You may safely modify `context` (e.g., override `backgroundColor` or `quality`) ‚Äî but do so early (`beforeSnap`) for global effects or in `beforeExport` for single-export changes.


## Custom Exports via Plugins

Plugins can add new exports using `defineExports(context)`.
For each export key you return (e.g., `&quot;pdf&quot;`), SnapDOM automatically exposes a helper method named **`toPdf()`** on the capture result.

**Register the plugin (global or per capture):**

```js
import { snapdom } from &#039;@zumer/snapdom&#039;;

// global
snapdom.plugins(pdfExportPlugin());

// or per capture
const out = await snapdom(element, { plugins: [pdfExportPlugin()] });
```

**Call the custom export:**

```js
const out = await snapdom(document.querySelector(&#039;#report&#039;));

// because the plugin returns { pdf: async (ctx, opts) =&gt; ... }
const pdfBlob = await out.toPdf({
  // exporter-specific options (width, height, quality, filename, etc.)
});
```

### Example: Overlay Filter Plugin

Adds a translucent overlay or color filter **only** to the captured cl

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[eyaltoledano/claude-task-master]]></title>
            <link>https://github.com/eyaltoledano/claude-task-master</link>
            <guid>https://github.com/eyaltoledano/claude-task-master</guid>
            <pubDate>Thu, 16 Oct 2025 00:04:56 GMT</pubDate>
            <description><![CDATA[An AI-powered task-management system you can drop into Cursor, Lovable, Windsurf, Roo, and others.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/eyaltoledano/claude-task-master">eyaltoledano/claude-task-master</a></h1>
            <p>An AI-powered task-management system you can drop into Cursor, Lovable, Windsurf, Roo, and others.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 22,926</p>
            <p>Forks: 2,223</p>
            <p>Stars today: 50 stars today</p>
            <h2>README</h2><pre>&lt;a name=&quot;readme-top&quot;&gt;&lt;/a&gt;

&lt;div align=&#039;center&#039;&gt;
&lt;a href=&quot;https://trendshift.io/repositories/13971&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/13971&quot; alt=&quot;eyaltoledano%2Fclaude-task-master | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://task-master.dev&quot;&gt;&lt;img src=&quot;./images/logo.png?raw=true&quot; alt=&quot;Taskmaster logo&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;b&gt;Taskmaster&lt;/b&gt;: A task management system for AI-driven development, designed to work seamlessly with any AI chat.
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://discord.gg/taskmasterai&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://dcbadge.limes.pink/api/server/https://discord.gg/taskmasterai?style=flat&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; |
  &lt;a href=&quot;https://docs.task-master.dev&quot; target=&quot;_blank&quot;&gt;Docs&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/eyaltoledano/claude-task-master/actions/workflows/ci.yml&quot;&gt;&lt;img src=&quot;https://github.com/eyaltoledano/claude-task-master/actions/workflows/ci.yml/badge.svg&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/eyaltoledano/claude-task-master/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/eyaltoledano/claude-task-master?style=social&quot; alt=&quot;GitHub stars&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://badge.fury.io/js/task-master-ai&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/task-master-ai.svg&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT%20with%20Commons%20Clause-blue.svg&quot; alt=&quot;License&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/task-master-ai&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/d18m/task-master-ai?style=flat&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/task-master-ai&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/task-master-ai?style=flat&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/task-master-ai&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dw/task-master-ai?style=flat&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

## By [@eyaltoledano](https://x.com/eyaltoledano) &amp; [@RalphEcom](https://x.com/RalphEcom)

[![Twitter Follow](https://img.shields.io/twitter/follow/eyaltoledano)](https://x.com/eyaltoledano)
[![Twitter Follow](https://img.shields.io/twitter/follow/RalphEcom)](https://x.com/RalphEcom)

A task management system for AI-driven development with Claude, designed to work seamlessly with Cursor AI.

## Documentation

üìö **[View Full Documentation](https://docs.task-master.dev)**

For detailed guides, API references, and comprehensive examples, visit our documentation site.

### Quick Reference

The following documentation is also available in the `docs` directory:

- [Configuration Guide](docs/configuration.md) - Set up environment variables and customize Task Master
- [Tutorial](docs/tutorial.md) - Step-by-step guide to getting started with Task Master
- [Command Reference](docs/command-reference.md) - Complete list of all available commands
- [Task Structure](docs/task-structure.md) - Understanding the task format and features
- [Example Interactions](docs/examples.md) - Common Cursor AI interaction examples
- [Migration Guide](docs/migration-guide.md) - Guide to migrating to the new project structure

#### Quick Install for Cursor 1.0+ (One-Click)

[![Add task-master-ai MCP server to Cursor](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=task-master-ai&amp;config=eyJjb21tYW5kIjoibnB4IC15IC0tcGFja2FnZT10YXNrLW1hc3Rlci1haSB0YXNrLW1hc3Rlci1haSIsImVudiI6eyJBTlRIUk9QSUNfQVBJX0tFWSI6IllPVVJfQU5USFJPUElDX0FQSV9LRVlfSEVSRSIsIlBFUlBMRVhJVFlfQVBJX0tFWSI6IllPVVJfUEVSUExFWElUWV9BUElfS0VZX0hFUkUiLCJPUEVOQUlfQVBJX0tFWSI6IllPVVJfT1BFTkFJX0tFWV9IRVJFIiwiR09PR0xFX0FQSV9LRVkiOiJZT1VSX0dPT0dMRV9LRVlfSEVSRSIsIk1JU1RSQUxfQVBJX0tFWSI6IllPVVJfTUlTVFJBTF9LRVlfSEVSRSIsIkdST1FfQVBJX0tFWSI6IllPVVJfR1JPUV9LRVlfSEVSRSIsIk9QRU5ST1VURVJfQVBJX0tFWSI6IllPVVJfT1BFTlJPVVRFUl9LRVlfSEVSRSIsIlhBSV9BUElfS0VZIjoiWU9VUl9YQUlfS0VZX0hFUkUiLCJBWlVSRV9PUEVOQUlfQVBJX0tFWSI6IllPVVJfQVpVUkVfS0VZX0hFUkUiLCJPTExBTUFfQVBJX0tFWSI6IllPVVJfT0xMQU1BX0FQSV9LRVlfSEVSRSJ9fQ%3D%3D)

&gt; **Note:** After clicking the link, you&#039;ll still need to add your API keys to the configuration. The link installs the MCP server with placeholder keys that you&#039;ll need to replace with your actual API keys.

#### Claude Code Quick Install

For Claude Code users:

```bash
claude mcp add taskmaster-ai -- npx -y task-master-ai
```

Don&#039;t forget to add your API keys to the configuration:
- in the root .env of your Project
- in the &quot;env&quot; section of your mcp config for taskmaster-ai


## Requirements

Taskmaster utilizes AI across several commands, and those require a separate API key. You can use a variety of models from different AI providers provided you add your API keys. For example, if you want to use Claude 3.7, you&#039;ll need an Anthropic API key.

You can define 3 types of models to be used: the main model, the research model, and the fallback model (in case either the main or research fail). Whatever model you use, its provider API key must be present in either mcp.json or .env.

At least one (1) of the following is required:

- Anthropic API key (Claude API)
- OpenAI API key
- Google Gemini API key
- Perplexity API key (for research model)
- xAI API Key (for research or main model)
- OpenRouter API Key (for research or main model)
- Claude Code (no API key required - requires Claude Code CLI)
- Codex CLI (OAuth via ChatGPT subscription - requires Codex CLI)

Using the research model is optional but highly recommended. You will need at least ONE API key (unless using Claude Code or Codex CLI with OAuth). Adding all API keys enables you to seamlessly switch between model providers at will.

## Quick Start

### Option 1: MCP (Recommended)

MCP (Model Control Protocol) lets you run Task Master directly from your editor.

#### 1. Add your MCP config at the following path depending on your editor

| Editor       | Scope   | Linux/macOS Path                      | Windows Path                                      | Key          |
| ------------ | ------- | ------------------------------------- | ------------------------------------------------- | ------------ |
| **Cursor**   | Global  | `~/.cursor/mcp.json`                  | `%USERPROFILE%\.cursor\mcp.json`                  | `mcpServers` |
|              | Project | `&lt;project_folder&gt;/.cursor/mcp.json`   | `&lt;project_folder&gt;\.cursor\mcp.json`               | `mcpServers` |
| **Windsurf** | Global  | `~/.codeium/windsurf/mcp_config.json` | `%USERPROFILE%\.codeium\windsurf\mcp_config.json` | `mcpServers` |
| **VS Code**  | Project | `&lt;project_folder&gt;/.vscode/mcp.json`   | `&lt;project_folder&gt;\.vscode\mcp.json`               | `servers`    |
| **Q CLI**    | Global  | `~/.aws/amazonq/mcp.json`             |                                                   | `mcpServers` |

##### Manual Configuration

###### Cursor &amp; Windsurf &amp; Q Developer CLI (`mcpServers`)

```json
{
  &quot;mcpServers&quot;: {
    &quot;task-master-ai&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;task-master-ai&quot;],
      &quot;env&quot;: {
        &quot;ANTHROPIC_API_KEY&quot;: &quot;YOUR_ANTHROPIC_API_KEY_HERE&quot;,
        &quot;PERPLEXITY_API_KEY&quot;: &quot;YOUR_PERPLEXITY_API_KEY_HERE&quot;,
        &quot;OPENAI_API_KEY&quot;: &quot;YOUR_OPENAI_KEY_HERE&quot;,
        &quot;GOOGLE_API_KEY&quot;: &quot;YOUR_GOOGLE_KEY_HERE&quot;,
        &quot;MISTRAL_API_KEY&quot;: &quot;YOUR_MISTRAL_KEY_HERE&quot;,
        &quot;GROQ_API_KEY&quot;: &quot;YOUR_GROQ_KEY_HERE&quot;,
        &quot;OPENROUTER_API_KEY&quot;: &quot;YOUR_OPENROUTER_KEY_HERE&quot;,
        &quot;XAI_API_KEY&quot;: &quot;YOUR_XAI_KEY_HERE&quot;,
        &quot;AZURE_OPENAI_API_KEY&quot;: &quot;YOUR_AZURE_KEY_HERE&quot;,
        &quot;OLLAMA_API_KEY&quot;: &quot;YOUR_OLLAMA_API_KEY_HERE&quot;
      }
    }
  }
}
```

&gt; üîë Replace `YOUR_‚Ä¶_KEY_HERE` with your real API keys. You can remove keys you don&#039;t use.

&gt; **Note**: If you see `0 tools enabled` in the MCP settings, restart your editor and check that your API keys are correctly configured.

###### VS‚ÄØCode (`servers` + `type`)

```json
{
  &quot;servers&quot;: {
    &quot;task-master-ai&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;task-master-ai&quot;],
      &quot;env&quot;: {
        &quot;ANTHROPIC_API_KEY&quot;: &quot;YOUR_ANTHROPIC_API_KEY_HERE&quot;,
        &quot;PERPLEXITY_API_KEY&quot;: &quot;YOUR_PERPLEXITY_API_KEY_HERE&quot;,
        &quot;OPENAI_API_KEY&quot;: &quot;YOUR_OPENAI_KEY_HERE&quot;,
        &quot;GOOGLE_API_KEY&quot;: &quot;YOUR_GOOGLE_KEY_HERE&quot;,
        &quot;MISTRAL_API_KEY&quot;: &quot;YOUR_MISTRAL_KEY_HERE&quot;,
        &quot;GROQ_API_KEY&quot;: &quot;YOUR_GROQ_KEY_HERE&quot;,
        &quot;OPENROUTER_API_KEY&quot;: &quot;YOUR_OPENROUTER_KEY_HERE&quot;,
        &quot;XAI_API_KEY&quot;: &quot;YOUR_XAI_KEY_HERE&quot;,
        &quot;AZURE_OPENAI_API_KEY&quot;: &quot;YOUR_AZURE_KEY_HERE&quot;,
        &quot;OLLAMA_API_KEY&quot;: &quot;YOUR_OLLAMA_API_KEY_HERE&quot;
      },
      &quot;type&quot;: &quot;stdio&quot;
    }
  }
}
```

&gt; üîë Replace `YOUR_‚Ä¶_KEY_HERE` with your real API keys. You can remove keys you don&#039;t use.

#### 2. (Cursor-only) Enable Taskmaster MCP

Open Cursor Settings (Ctrl+Shift+J) ‚û° Click on MCP tab on the left ‚û° Enable task-master-ai with the toggle

#### 3. (Optional) Configure the models you want to use

In your editor&#039;s AI chat pane, say:

```txt
Change the main, research and fallback models to &lt;model_name&gt;, &lt;model_name&gt; and &lt;model_name&gt; respectively.
```

For example, to use Claude Code (no API key required):
```txt
Change the main model to claude-code/sonnet
```

[Table of available models](docs/models.md) | [Claude Code setup](docs/examples/claude-code-usage.md)

#### 4. Initialize Task Master

In your editor&#039;s AI chat pane, say:

```txt
Initialize taskmaster-ai in my project
```

#### 5. Make sure you have a PRD (Recommended)

For **new projects**: Create your PRD at `.taskmaster/docs/prd.txt`  
For **existing projects**: You can use `scripts/prd.txt` or migrate with `task-master migrate`

An example PRD template is available after initialization in `.taskmaster/templates/example_prd.txt`.

&gt; [!NOTE]
&gt; While a PRD is recommended for complex projects, you can always create individual tasks by asking &quot;Can you help me implement [description of what you want to do]?&quot; in chat.

**Always start with a detailed PRD.**

The more detailed your PRD, the better the generated tasks will be.

#### 6. Common Commands

Use your AI assistant to:

- Parse requirements: `Can you parse my PRD at scripts/prd.txt?`
- Plan next step: `What&#039;s the next task I should work on?`
- Implement a task: `Can you help me implement task 3?`
- View multiple tasks: `Can you show me tasks 1, 3, and 5?`
- Expand a task: `Can you help me expand task 4?`
- **Research fresh information**: `Research the latest best practices for implementing JWT authentication with Node.js`
- **Research with context**: `Research React Query v5 migration strategies for our current API implementation in src/api.js`

[More examples on how to use Task Master in chat](docs/examples.md)

### Option 2: Using Command Line

#### Installation

```bash
# Install globally
npm install -g task-master-ai

# OR install locally within your project
npm install task-master-ai
```

#### Initialize a new project

```bash
# If installed globally
task-master init

# If installed locally
npx task-master init

# Initialize project with specific rules
task-master init --rules cursor,windsurf,vscode
```

This will prompt you for project details and set up a new project with the necessary files and structure.

#### Common Commands

```bash
# Initialize a new project
task-master init

# Parse a PRD and generate tasks
task-master parse-prd your-prd.txt

# List all tasks
task-master list

# Show the next task to work on
task-master next

# Show specific task(s) - supports comma-separated IDs
task-master show 1,3,5

# Research fresh information with project context
task-master research &quot;What are the latest best practices for JWT authentication?&quot;

# Move tasks between tags (cross-tag movement)
task-master move --from=5 --from-tag=backlog --to-tag=in-progress
task-master move --from=5,6,7 --from-tag=backlog --to-tag=done --with-dependencies
task-master move --from=5 --from-tag=backlog --to-tag=in-progress --ignore-dependencies

# Generate task files
task-master generate

# Add rules after initialization
task-master rules add windsurf,roo,vscode
```

## Claude Code Support

Task Master now supports Claude models through the Claude Code CLI, which requires no API key:

- **Models**: `claude-code/opus` and `claude-code/sonnet`
- **Requirements**: Claude Code CLI installed
- **Benefits**: No API key needed, uses your local Claude instance

[Learn more about Claude Code setup](docs/examples/claude-code-usage.md)

## Troubleshooting

### If `task-master init` doesn&#039;t respond

Try running it with Node directly:

```bash
node node_modules/claude-task-master/scripts/init.js
```

Or clone the repository and run:

```bash
git clone https://github.com/eyaltoledano/claude-task-master.git
cd claude-task-master
node scripts/init.js
```

## Join Our Team

&lt;a href=&quot;https://tryhamster.com&quot; target=&quot;_blank&quot;&gt;
  &lt;img src=&quot;./images/hamster-hiring.png&quot; alt=&quot;Join Hamster&#039;s founding team&quot; /&gt;
&lt;/a&gt;

## Contributors

&lt;a href=&quot;https://github.com/eyaltoledano/claude-task-master/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=eyaltoledano/claude-task-master&quot; alt=&quot;Task Master project contributors&quot; /&gt;
&lt;/a&gt;

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=eyaltoledano/claude-task-master&amp;type=Timeline)](https://www.star-history.com/#eyaltoledano/claude-task-master&amp;Timeline)

## Licensing

Task Master is licensed under the MIT License with Commons Clause. This means you can:

‚úÖ **Allowed**:

- Use Task Master for any purpose (personal, commercial, academic)
- Modify the code
- Distribute copies
- Create and sell products built using Task Master

‚ùå **Not Allowed**:

- Sell Task Master itself
- Offer Task Master as a hosted service
- Create competing products based on Task Master

See the [LICENSE](LICENSE) file for the complete license text and [licensing details](docs/licensing.md) for more information.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mrdoob/three.js]]></title>
            <link>https://github.com/mrdoob/three.js</link>
            <guid>https://github.com/mrdoob/three.js</guid>
            <pubDate>Thu, 16 Oct 2025 00:04:55 GMT</pubDate>
            <description><![CDATA[JavaScript 3D Library.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mrdoob/three.js">mrdoob/three.js</a></h1>
            <p>JavaScript 3D Library.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 108,975</p>
            <p>Forks: 36,036</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre># three.js

[![NPM Package][npm]][npm-url]
[![Build Size][build-size]][build-size-url]
[![NPM Downloads][npm-downloads]][npmtrends-url]
[![Discord][discord]][discord-url]
[![DeepWiki][deepwiki]][deepwiki-url]

#### JavaScript 3D library

The aim of the project is to create an easy-to-use, lightweight, cross-browser, general-purpose 3D library. The current builds only include WebGL and WebGPU renderers but SVG and CSS3D renderers are also available as addons.

[Examples](https://threejs.org/examples/) &amp;mdash;
[Docs](https://threejs.org/docs/) &amp;mdash;
[Manual](https://threejs.org/manual/) &amp;mdash;
[Wiki](https://github.com/mrdoob/three.js/wiki) &amp;mdash;
[Migrating](https://github.com/mrdoob/three.js/wiki/Migration-Guide) &amp;mdash;
[Questions](https://stackoverflow.com/questions/tagged/three.js) &amp;mdash;
[Forum](https://discourse.threejs.org/) &amp;mdash;
[Discord](https://discord.gg/56GBJwAnUS)

### Usage

This code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a `WebGL` renderer for the scene and camera, and it adds that viewport to the `document.body` element. Finally, it animates the cube within the scene for the camera.

```javascript
import * as THREE from &#039;three&#039;;

const width = window.innerWidth, height = window.innerHeight;

// init

const camera = new THREE.PerspectiveCamera( 70, width / height, 0.01, 10 );
camera.position.z = 1;

const scene = new THREE.Scene();

const geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );
const material = new THREE.MeshNormalMaterial();

const mesh = new THREE.Mesh( geometry, material );
scene.add( mesh );

const renderer = new THREE.WebGLRenderer( { antialias: true } );
renderer.setSize( width, height );
renderer.setAnimationLoop( animate );
document.body.appendChild( renderer.domElement );

// animation

function animate( time ) {

	mesh.rotation.x = time / 2000;
	mesh.rotation.y = time / 1000;

	renderer.render( scene, camera );

}
```

If everything goes well, you should see [this](https://jsfiddle.net/w43x5Lgh/).

### Cloning this repository

Cloning the repo with all its history results in a ~2 GB download. If you don&#039;t need the whole history you can use the `depth` parameter to significantly reduce download size.

```sh
git clone --depth=1 https://github.com/mrdoob/three.js.git
```

### Change log

[Releases](https://github.com/mrdoob/three.js/releases)


[npm]: https://img.shields.io/npm/v/three
[npm-url]: https://www.npmjs.com/package/three
[build-size]: https://badgen.net/bundlephobia/minzip/three
[build-size-url]: https://bundlephobia.com/result?p=three
[npm-downloads]: https://img.shields.io/npm/dw/three
[npmtrends-url]: https://www.npmtrends.com/three
[discord]: https://img.shields.io/discord/685241246557667386
[discord-url]: https://discord.gg/56GBJwAnUS
[deepwiki]: https://deepwiki.com/badge.svg
[deepwiki-url]: https://deepwiki.com/mrdoob/three.js

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[WhiskeySockets/Baileys]]></title>
            <link>https://github.com/WhiskeySockets/Baileys</link>
            <guid>https://github.com/WhiskeySockets/Baileys</guid>
            <pubDate>Thu, 16 Oct 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[Socket-based TS/JavaScript API for WhatsApp Web]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WhiskeySockets/Baileys">WhiskeySockets/Baileys</a></h1>
            <p>Socket-based TS/JavaScript API for WhatsApp Web</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,850</p>
            <p>Forks: 2,339</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&#039;center&#039;&gt;&lt;img alt=&quot;Baileys logo&quot; src=&quot;https://raw.githubusercontent.com/WhiskeySockets/Baileys/refs/heads/master/Media/logo.png&quot; height=&quot;75&quot;/&gt;&lt;/h1&gt;

&lt;div align=&#039;center&#039;&gt;Baileys is a WebSockets-based TypeScript library for interacting with the WhatsApp Web API.&lt;/div&gt;


&gt; [!CAUTION]
&gt; NOTICE OF BREAKING CHANGE.
&gt; 
&gt; As of 7.0.0, multiple breaking changes were introduced into the library.
&gt; 
&gt; Please check out https://whiskey.so/migrate-latest for more information.

&gt; [!IMPORTANT]
&gt; I made a survey for users of the project to ask questions, and provide Baileys valuable insights regarding its users. I will be publishing the results of this form (after filtering) as well so we can study and understand where we need to work.
&gt; 
&gt; The survey is anonymous and requires no personal info at all. You are required to sign-in with Google to keep responses to one person. You are able to edit your response after you submit. The deadline for this form is September 30, 2025.
&gt; 
&gt; I encourage you to put the effort, all it takes is 5-10 minutes and you get to ask me any questions you have.
&gt; 
&gt; \- Rajeh (purpshell)
&gt; 
&gt; Fill in the survey via the link: https://whiskey.so/survey 


# Important Note
This is a temporary README.md, the new guide is in development and will this file will be replaced with .github/README.md (already a default on GitHub).

New guide link: https://baileys.wiki

# Sponsor
If you&#039;d like to financially support this project, you can do so by supporting the current maintainer [here](https://purpshell.dev/sponsor).

# Disclaimer
This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates.
The official WhatsApp website can be found at whatsapp.com. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners.

The maintainers of Baileys do not in any way condone the use of this application in practices that violate the Terms of Service of WhatsApp. The maintainers of this application call upon the personal responsibility of its users to use this application in a fair way, as it is intended to be used.
Use at your own discretion. Do not spam people with this. We discourage any stalkerware, bulk or automated messaging usage.

##

- Baileys does not require Selenium or any other browser to be interface with WhatsApp Web, it does so directly using a **WebSocket**. 
- Not running Selenium or Chromium saves you like **half a gig** of ram :/ 
- Baileys supports interacting with the multi-device &amp; web versions of WhatsApp.
- Thank you to [@pokearaujo](https://github.com/pokearaujo/multidevice) for writing his observations on the workings of WhatsApp Multi-Device. Also, thank you to [@Sigalor](https://github.com/sigalor/whatsapp-web-reveng) for writing his observations on the workings of WhatsApp Web and thanks to [@Rhymen](https://github.com/Rhymen/go-whatsapp/) for the __go__ implementation.

&gt; [!IMPORTANT]
&gt; The original repository had to be removed by the original author - we now continue development in this repository here.
This is the only official repository and is maintained by the community.
&gt; **Join the Discord [here](https://discord.gg/WeJM5FP9GG)**
 
## Example

Do check out &amp; run [example.ts](Example/example.ts) to see an example usage of the library.
The script covers most common use cases.
To run the example script, download or clone the repo and then type the following in a terminal:
1. ``` cd path/to/Baileys ```
2. ``` yarn ```
3. ``` yarn example ```

## Install

Use the stable version:
```
yarn add @whiskeysockets/baileys
```

Use the edge version (no guarantee of stability, but latest fixes + features)
```
yarn add github:WhiskeySockets/Baileys
```

Then import your code using:
```ts 
import makeWASocket from &#039;@whiskeysockets/baileys&#039;
```

# Links

- [Discord](https://discord.gg/WeJM5FP9GG)
- [Docs](https://guide.whiskeysockets.io/)

# Index

- [Connecting Account](#connecting-account)
    - [Connect with QR-CODE](#starting-socket-with-qr-code)
    - [Connect with Pairing Code](#starting-socket-with-pairing-code)
    - [Receive Full History](#receive-full-history)
- [Important Notes About Socket Config](#important-notes-about-socket-config)
    - [Caching Group Metadata (Recommended)](#caching-group-metadata-recommended)
    - [Improve Retry System &amp; Decrypt Poll Votes](#improve-retry-system--decrypt-poll-votes)
    - [Receive Notifications in Whatsapp App](#receive-notifications-in-whatsapp-app)

- [Save Auth Info](#saving--restoring-sessions)
- [Handling Events](#handling-events)
    - [Example to Start](#example-to-start)
    - [Decrypt Poll Votes](#decrypt-poll-votes)
    - [Summary of Events on First Connection](#summary-of-events-on-first-connection)
- [Implementing a Data Store](#implementing-a-data-store)
- [Whatsapp IDs Explain](#whatsapp-ids-explain)
- [Utility Functions](#utility-functions)
- [Sending Messages](#sending-messages)
    - [Non-Media Messages](#non-media-messages)
        - [Text Message](#text-message)
        - [Quote Message](#quote-message-works-with-all-types)
        - [Mention User](#mention-user-works-with-most-types)
        - [Forward Messages](#forward-messages)
        - [Location Message](#location-message)
        - [Contact Message](#contact-message)
        - [Reaction Message](#reaction-message)
        - [Pin Message](#pin-message)
        - [Poll Message](#poll-message)
    - [Sending with Link Preview](#sending-messages-with-link-previews)
    - [Media Messages](#media-messages)
        - [Gif Message](#gif-message)
        - [Video Message](#video-message)
        - [Audio Message](#audio-message)
        - [Image Message](#image-message)
        - [ViewOnce Message](#view-once-message)
- [Modify Messages](#modify-messages)
    - [Delete Messages (for everyone)](#deleting-messages-for-everyone)
    - [Edit Messages](#editing-messages)
- [Manipulating Media Messages](#manipulating-media-messages)
    - [Thumbnail in Media Messages](#thumbnail-in-media-messages)
    - [Downloading Media Messages](#downloading-media-messages)
    - [Re-upload Media Message to Whatsapp](#re-upload-media-message-to-whatsapp)
- [Reject Call](#reject-call)
- [Send States in Chat](#send-states-in-chat)
    - [Reading Messages](#reading-messages)
    - [Update Presence](#update-presence)
- [Modifying Chats](#modifying-chats)
    - [Archive a Chat](#archive-a-chat)
    - [Mute/Unmute a Chat](#muteunmute-a-chat)
    - [Mark a Chat Read/Unread](#mark-a-chat-readunread)
    - [Delete a Message for Me](#delete-a-message-for-me)
    - [Delete a Chat](#delete-a-chat)
    - [Star/Unstar a Message](#starunstar-a-message)
    - [Disappearing Messages](#disappearing-messages)
- [User Querys](#user-querys)
    - [Check If ID Exists in Whatsapp](#check-if-id-exists-in-whatsapp)
    - [Query Chat History (groups too)](#query-chat-history-groups-too)
    - [Fetch Status](#fetch-status)
    - [Fetch Profile Picture (groups too)](#fetch-profile-picture-groups-too)
    - [Fetch Bussines Profile (such as description or category)](#fetch-bussines-profile-such-as-description-or-category)
    - [Fetch Someone&#039;s Presence (if they&#039;re typing or online)](#fetch-someones-presence-if-theyre-typing-or-online)
- [Change Profile](#change-profile)
    - [Change Profile Status](#change-profile-status)
    - [Change Profile Name](#change-profile-name)
    - [Change Display Picture (groups too)](#change-display-picture-groups-too)
    - [Remove display picture (groups too)](#remove-display-picture-groups-too)
- [Groups](#groups)
    - [Create a Group](#create-a-group)
    - [Add/Remove or Demote/Promote](#addremove-or-demotepromote)
    - [Change Subject (name)](#change-subject-name)
    - [Change Description](#change-description)
    - [Change Settings](#change-settings)
    - [Leave a Group](#leave-a-group)
    - [Get Invite Code](#get-invite-code)
    - [Revoke Invite Code](#revoke-invite-code)
    - [Join Using Invitation Code](#join-using-invitation-code)
    - [Get Group Info by Invite Code](#get-group-info-by-invite-code)
    - [Query Metadata (participants, name, description...)](#query-metadata-participants-name-description)
    - [Join using groupInviteMessage](#join-using-groupinvitemessage)
    - [Get Request Join List](#get-request-join-list)
    - [Approve/Reject Request Join](#approvereject-request-join)
    - [Get All Participating Groups Metadata](#get-all-participating-groups-metadata)
    - [Toggle Ephemeral](#toggle-ephemeral)
    - [Change Add Mode](#change-add-mode)
- [Privacy](#privacy)
    - [Block/Unblock User](#blockunblock-user)
    - [Get Privacy Settings](#get-privacy-settings)
    - [Get BlockList](#get-blocklist)
    - [Update LastSeen Privacy](#update-lastseen-privacy)
    - [Update Online Privacy](#update-online-privacy)
    - [Update Profile Picture Privacy](#update-profile-picture-privacy)
    - [Update Status Privacy](#update-status-privacy)
    - [Update Read Receipts Privacy](#update-read-receipts-privacy)
    - [Update Groups Add Privacy](#update-groups-add-privacy)
    - [Update Default Disappearing Mode](#update-default-disappearing-mode)
- [Broadcast Lists &amp; Stories](#broadcast-lists--stories)
    - [Send Broadcast &amp; Stories](#send-broadcast--stories)
    - [Query a Broadcast List&#039;s Recipients &amp; Name](#query-a-broadcast-lists-recipients--name)
- [Writing Custom Functionality](#writing-custom-functionality)
    - [Enabling Debug Level in Baileys Logs](#enabling-debug-level-in-baileys-logs)
    - [How Whatsapp Communicate With Us](#how-whatsapp-communicate-with-us)
    - [Register a Callback for Websocket Events](#register-a-callback-for-websocket-events)

## Connecting Account

WhatsApp provides a multi-device API that allows Baileys to be authenticated as a second WhatsApp client by scanning a **QR code** or **Pairing Code** with WhatsApp on your phone.

&gt; [!NOTE]
&gt; **[Here](#example-to-start) is a simple example of event handling**

&gt; [!TIP]
&gt; **You can see all supported socket configs [here](https://baileys.whiskeysockets.io/types/SocketConfig.html) (Recommended)**

### Starting socket with **QR-CODE**

&gt; [!TIP]
&gt; You can customize browser name if you connect with **QR-CODE**, with `Browser` constant, we have some browsers config, **see [here](https://baileys.whiskeysockets.io/types/BrowsersMap.html)**

```ts
import makeWASocket from &#039;@whiskeysockets/baileys&#039;

const sock = makeWASocket({
    // can provide additional config here
    browser: Browsers.ubuntu(&#039;My App&#039;),
    printQRInTerminal: true
})
```

If the connection is successful, you will see a QR code printed on your terminal screen, scan it with WhatsApp on your phone and you&#039;ll be logged in!

### Starting socket with **Pairing Code**


&gt; [!IMPORTANT]
&gt; Pairing Code isn&#039;t Mobile API, it&#039;s a method to connect Whatsapp Web without QR-CODE, you can connect only with one device, see [here](https://faq.whatsapp.com/1324084875126592/?cms_platform=web)

The phone number can&#039;t have `+` or `()` or `-`, only numbers, you must provide country code

```ts
import makeWASocket from &#039;@whiskeysockets/baileys&#039;

const sock = makeWASocket({
    // can provide additional config here
    printQRInTerminal: false //need to be false
})

if (!sock.authState.creds.registered) {
    const number = &#039;XXXXXXXXXXX&#039;
    const code = await sock.requestPairingCode(number)
    console.log(code)
}
```

### Receive Full History

1. Set `syncFullHistory` as `true`
2. Baileys, by default, use chrome browser config
    - If you&#039;d like to emulate a desktop connection (and receive more message history), this browser setting to your Socket config:

```ts
const sock = makeWASocket({
    ...otherOpts,
    // can use Windows, Ubuntu here too
    browser: Browsers.macOS(&#039;Desktop&#039;),
    syncFullHistory: true
})
```

## Important Notes About Socket Config

### Caching Group Metadata (Recommended)
- If you use baileys for groups, we recommend you to set `cachedGroupMetadata` in socket config, you need to implement a cache like this:

    ```ts
    const groupCache = new NodeCache({stdTTL: 5 * 60, useClones: false})

    const sock = makeWASocket({
        cachedGroupMetadata: async (jid) =&gt; groupCache.get(jid)
    })

    sock.ev.on(&#039;groups.update&#039;, async ([event]) =&gt; {
        const metadata = await sock.groupMetadata(event.id)
        groupCache.set(event.id, metadata)
    })

    sock.ev.on(&#039;group-participants.update&#039;, async (event) =&gt; {
        const metadata = await sock.groupMetadata(event.id)
        groupCache.set(event.id, metadata)
    })
    ```

### Improve Retry System &amp; Decrypt Poll Votes
- If you want to improve sending message, retrying when error occurs and decrypt poll votes, you need to have a store and set `getMessage` config in socket like this:
    ```ts
    const sock = makeWASocket({
        getMessage: async (key) =&gt; await getMessageFromStore(key)
    })
    ```

### Receive Notifications in Whatsapp App
- If you want to receive notifications in whatsapp app, set `markOnlineOnConnect` to `false`
    ```ts
    const sock = makeWASocket({
        markOnlineOnConnect: false
    })
    ```
## Saving &amp; Restoring Sessions

You obviously don&#039;t want to keep scanning the QR code every time you want to connect. 

So, you can load the credentials to log back in:
```ts
import makeWASocket, { useMultiFileAuthState } from &#039;@whiskeysockets/baileys&#039;

const { state, saveCreds } = await useMultiFileAuthState(&#039;auth_info_baileys&#039;)

// will use the given state to connect
// so if valid credentials are available -- it&#039;ll connect without QR
const sock = makeWASocket({ auth: state })

// this will be called as soon as the credentials are updated
sock.ev.on(&#039;creds.update&#039;, saveCreds)
```

&gt; [!IMPORTANT]
&gt; `useMultiFileAuthState` is a utility function to help save the auth state in a single folder, this function serves as a good guide to help write auth &amp; key states for SQL/no-SQL databases, which I would recommend in any production grade system.

&gt; [!NOTE]
&gt; When a message is received/sent, due to signal sessions needing updating, the auth keys (`authState.keys`) will update. Whenever that happens, you must save the updated keys (`authState.keys.set()` is called). Not doing so will prevent your messages from reaching the recipient &amp; cause other unexpected consequences. The `useMultiFileAuthState` function automatically takes care of that, but for any other serious implementation -- you will need to be very careful with the key state management.

## Handling Events

- Baileys uses the EventEmitter syntax for events. 
They&#039;re all nicely typed up, so you shouldn&#039;t have any issues with an Intellisense editor like VS Code.

&gt; [!IMPORTANT]
&gt; **The events are [these](https://baileys.whiskeysockets.io/types/BaileysEventMap.html)**, it&#039;s important you see all events

You can listen to these events like this:
```ts
const sock = makeWASocket()
sock.ev.on(&#039;messages.upsert&#039;, ({ messages }) =&gt; {
    console.log(&#039;got messages&#039;, messages)
})
```

### Example to Start

&gt; [!NOTE]
&gt; This example includes basic auth storage too

&gt; [!NOTE]
&gt; For reliable serialization of the authentication state, especially when storing as JSON, always use the BufferJSON utility.

```ts
import makeWASocket, { DisconnectReason, useMultiFileAuthState } from &#039;@whiskeysockets/baileys&#039;
import { Boom } from &#039;@hapi/boom&#039;

async function connectToWhatsApp () {
    const { state, saveCreds } = await useMultiFileAuthState(&#039;auth_info_baileys&#039;)
    const sock = makeWASocket({
        // can provide additional config here
        auth: state,
        printQRInTerminal: true
    })
    sock.ev.on(&#039;connection.update&#039;, (update) =&gt; {
        const { connection, lastDisconnect } = update
        if(connection === &#039;close&#039;) {
            const shouldReconnect = (lastDisconnect.error as Boom)?.output?.statusCode !== DisconnectReason.loggedOut
            console.log(&#039;connection closed due to &#039;, lastDisconnect.error, &#039;, reconnecting &#039;, shouldReconnect)
            // reconnect if not logged out
            if(shouldReconnect) {
                connectToWhatsApp()
            }
        } else if(connection === &#039;open&#039;) {
            console.log(&#039;opened connection&#039;)
        }
    })
    sock.ev.on(&#039;messages.upsert&#039;, event =&gt; {
        for (const m of event.messages) {
            console.log(JSON.stringify(m, undefined, 2))

            console.log(&#039;replying to&#039;, m.key.remoteJid)
            await sock.sendMessage(m.key.remoteJid!, { text: &#039;Hello Word&#039; })
        }
    })

    // to storage creds (session info) when it updates
    sock.ev.on(&#039;creds.update&#039;, saveCreds)
}
// run in main file
connectToWhatsApp()
```

&gt; [!IMPORTANT]
&gt; In `messages.upsert` it&#039;s recommended to use a loop like `for (const message of event.messages)` to handle all messages in array

### Decrypt Poll Votes

- By default poll votes are encrypted and handled in `messages.update`
- That&#039;s a simple example
```ts
sock.ev.on(&#039;messages.update&#039;, event =&gt; {
    for(const { key, update } of event) {
        if(update.pollUpdates) {
            const pollCreation = await getMessage(key)
            if(pollCreation) {
                console.log(
                    &#039;got poll update, aggregation: &#039;,
                    getAggregateVotesInPollMessage({
                        message: pollCreation,
                        pollUpdates: update.pollUpdates,
                    })
                )
            }
        }
    }
})
```

- `getMessage` is a [store](#implementing-a-data-store) implementation (in your end)

### Summary of Events on First Connection

1. When you connect first time, `connection.update` will be fired requesting you to restart sock
2. Then, history messages will be received in `messaging.history-set`

## Implementing a Data Store

- Baileys does not come with a defacto storage for chats, contacts, or messages. However, a simple in-memory implementation has been provided. The store listens for chat updates, new messages, message updates, etc., to always have an up-to-date version of the data.

&gt; [!IMPORTANT]
&gt; I highly recommend building your own data store, as storing someone&#039;s entire chat history in memory is a terrible waste of RAM.

It can be used as follows:

```ts
import makeWASocket, { makeInMemoryStore } from &#039;@whiskeysockets/baileys&#039;
// the store maintains the data of the WA connection in memory
// can be written out to a file &amp; read from it
const store = makeInMemoryStore({ })
// can be read from a file
store.readFromFile(&#039;./baileys_store.json&#039;)
// saves the state to a file every 10s
setInterval(() =&gt; {
    store.writeToFile(&#039;./baileys_store.json&#039;)
}, 10_000)

const sock = makeWASocket({ })
// will listen from this socket
// the store can listen from a new socket once the current socket outlives its lifetime
store.bind(sock.ev)

sock.ev.on(&#039;chats.upsert&#039;, () =&gt; {
    // can use &#039;store.chats&#039; however you want, even after the socket dies out
    // &#039;chats&#039; =&gt; a KeyedDB instance
    console.log(&#039;got chats&#039;, store.chats.all())
})

sock.ev.on(&#039;contacts.upsert&#039;, () =&gt; {
    console.log(&#039;got contacts&#039;, Object.values(store.contacts))
})

```

The store also provides some simple functions such as `loadMessages` that utilize the store to speed up data retrieval.

## Whatsapp IDs Explain

- `id` is the WhatsApp ID, called `jid` too, of the person or group you&#039;re sending the message to. 
    - It must be in the format ```[country code][phone number]@s.whatsapp.net```
	    - Example for people: ```+19999999999@s.whatsapp.net```. 
	    - For groups, it must be in the format ``` 123456789-123345@g.us ```. 
    - For broadcast lists, it&#039;s `[timestamp of creation]@broadcast`.
    - For stories, the ID is `status@broadcast`.

## Utility Functions

- `getContentType`, returns the content type for any message
- `getDevice`, returns the device from message
- `makeCacheableSignalKeyStore`, make auth store more fast
- `downloadContentFromMessage`, download content from any message

## Sending M

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[MagicMirrorOrg/MagicMirror]]></title>
            <link>https://github.com/MagicMirrorOrg/MagicMirror</link>
            <guid>https://github.com/MagicMirrorOrg/MagicMirror</guid>
            <pubDate>Thu, 16 Oct 2025 00:04:53 GMT</pubDate>
            <description><![CDATA[MagicMirror¬≤ is an open source modular smart mirror platform. With a growing list of installable modules, the MagicMirror¬≤ allows you to convert your hallway or bathroom mirror into your personal assistant.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/MagicMirrorOrg/MagicMirror">MagicMirrorOrg/MagicMirror</a></h1>
            <p>MagicMirror¬≤ is an open source modular smart mirror platform. With a growing list of installable modules, the MagicMirror¬≤ allows you to convert your hallway or bathroom mirror into your personal assistant.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 22,126</p>
            <p>Forks: 4,423</p>
            <p>Stars today: 38 stars today</p>
            <h2>README</h2><pre># ![MagicMirror¬≤: The open source modular smart mirror platform.](.github/header.png)

&lt;p style=&quot;text-align: center&quot;&gt;
  &lt;a href=&quot;https://choosealicense.com/licenses/mit&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg&quot; alt=&quot;License&quot;&gt;
 &lt;/a&gt;
 &lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/magicmirrororg/magicmirror/automated-tests.yaml&quot; alt=&quot;GitHub Actions&quot;&gt;
 &lt;img src=&quot;https://img.shields.io/github/check-runs/magicmirrororg/magicmirror/master&quot; alt=&quot;Build Status&quot;&gt;
 &lt;a href=&quot;https://github.com/MagicMirrorOrg/MagicMirror&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/stars/magicmirrororg/magicmirror?style=social&quot; alt=&quot;GitHub Stars&quot;&gt;
 &lt;/a&gt;
&lt;/p&gt;

**MagicMirror¬≤** is an open source modular smart mirror platform. With a growing list of installable modules, the **MagicMirror¬≤** allows you to convert your hallway or bathroom mirror into your personal assistant. **MagicMirror¬≤** is built by the creator of [the original MagicMirror](https://michaelteeuw.nl/tagged/magicmirror) with the incredible help of a [growing community of contributors](https://github.com/MagicMirrorOrg/MagicMirror/graphs/contributors).

MagicMirror¬≤ focuses on a modular plugin system and uses [Electron](https://www.electronjs.org/) as an application wrapper. So no more web server or browser installs necessary!

## Documentation

For the full documentation including **[installation instructions](https://docs.magicmirror.builders/getting-started/installation.html)**, please visit our dedicated documentation website: [https://docs.magicmirror.builders](https://docs.magicmirror.builders).

## Links

- Website: [https://magicmirror.builders](https://magicmirror.builders)
- Documentation: [https://docs.magicmirror.builders](https://docs.magicmirror.builders)
- Forum: [https://forum.magicmirror.builders](https://forum.magicmirror.builders)
  - Technical discussions: &lt;https://forum.magicmirror.builders/category/11/core-system&gt;
- Discord: [https://discord.gg/J5BAtvx](https://discord.gg/J5BAtvx)
- Blog: [https://michaelteeuw.nl/tagged/magicmirror](https://michaelteeuw.nl/tagged/magicmirror)
- Donations: [https://magicmirror.builders/#donate](https://magicmirror.builders/#donate)

## Contributing Guidelines

Contributions of all kinds are welcome, not only in the form of code but also with regards to

- bug reports
- documentation
- translations

For the full contribution guidelines, check out: [https://docs.magicmirror.builders/about/contributing.html](https://docs.magicmirror.builders/about/contributing.html)

## Enjoying MagicMirror? Consider a donation!

MagicMirror¬≤ is Open Source and free. That doesn&#039;t mean we don&#039;t need any money.

Please consider a donation to help us cover the ongoing costs like webservers and email services.
If we receive enough donations we might even be able to free up some working hours and spend some extra time improving the MagicMirror¬≤ core.

To donate, please follow [this](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=G5D8E9MR5DTD2&amp;source=url) link.

&lt;p style=&quot;text-align: center&quot;&gt;
  &lt;a href=&quot;https://forum.magicmirror.builders/topic/728/magicmirror-is-voted-number-1-in-the-magpi-top-50&quot;&gt;&lt;img src=&quot;https://magicmirror.builders/img/magpi-best-watermark-custom.png&quot; width=&quot;150&quot; alt=&quot;MagPi Top 50&quot;&gt;&lt;/a&gt;
&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[wanglin2/mind-map]]></title>
            <link>https://github.com/wanglin2/mind-map</link>
            <guid>https://github.com/wanglin2/mind-map</guid>
            <pubDate>Thu, 16 Oct 2025 00:04:52 GMT</pubDate>
            <description><![CDATA[SimpleMindMapÔºàÊÄùÁª™ÊÄùÁª¥ÂØºÂõæÔºâÔºö‰∏Ä‰∏™Âº∫Â§ßÁöÑWebÊÄùÁª¥ÂØºÂõæ„ÄÇA powerful web mind map.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/wanglin2/mind-map">wanglin2/mind-map</a></h1>
            <p>SimpleMindMapÔºàÊÄùÁª™ÊÄùÁª¥ÂØºÂõæÔºâÔºö‰∏Ä‰∏™Âº∫Â§ßÁöÑWebÊÄùÁª¥ÂØºÂõæ„ÄÇA powerful web mind map.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 10,776</p>
            <p>Forks: 1,442</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;Simple mind map&lt;/h1&gt;

[![npm-version](https://img.shields.io/npm/v/simple-mind-map)](https://www.npmjs.com/package/simple-mind-map)
![npm download](https://img.shields.io/npm/dm/simple-mind-map)
[![GitHub issues](https://img.shields.io/github/issues/wanglin2/mind-map)](https://github.com/wanglin2/mind-map/issues)
![license](https://img.shields.io/npm/l/express.svg)
[![GitHub stars](https://img.shields.io/github/stars/wanglin2/mind-map)](https://github.com/wanglin2/mind-map/stargazers)
[![GitHub forks](https://img.shields.io/github/forks/wanglin2/mind-map)](https://github.com/wanglin2/mind-map/network/members)

&gt; ‰∏≠ÊñáÂêçÔºöÊÄùÁª™ÊÄùÁª¥ÂØºÂõæ„ÄÇ‰∏Ä‰∏™ÁÆÄÂçï&amp;Âº∫Â§ßÁöÑ Web ÊÄùÁª¥ÂØºÂõæÂ∫ìÂíåÊÄùÁª¥ÂØºÂõæËΩØ‰ª∂„ÄÇ

# ÂÆ¢Êà∑Á´ØÂíåÊèí‰ª∂

- ÊÄùÁª™ÊÄùÁª¥ÂØºÂõæÂÆ¢Êà∑Á´Ø

ÊîØÊåÅWindows„ÄÅMacÂèäLinuxÁ≥ªÁªü„ÄÇ‰∏ãËΩΩÂú∞ÂùÄÔºö[Github](https://github.com/wanglin2/mind-map/releases)„ÄÅ[ÁôæÂ∫¶ÁΩëÁõò](https://pan.baidu.com/s/1C8phEJ5pagAAa-o1tU42Uw?pwd=jqfb)„ÄÅ[Â§∏ÂÖãÁΩëÁõò](https://pan.quark.cn/s/2733982f1976)

- ObsidianÊèí‰ª∂

‰∏ãËΩΩÂú∞ÂùÄÔºö[Github](https://github.com/wanglin2/obsidian-simplemindmap/releases)

- UToolsÊèí‰ª∂

Â∑≤‰∏äÊû∂[uTools](https://www.u.tools/)Êèí‰ª∂Â∫îÁî®Â∏ÇÂú∫ÔºåÂèØÁõ¥Êé•Âú®`uTools`Êèí‰ª∂Â∫îÁî®Â∏ÇÂú∫‰∏≠ÊêúÁ¥¢`ÊÄùÁª™`ËøõË°åÂÆâË£ÖÔºå‰πüÂèØ‰ª•Áõ¥Êé•ËÆøÈóÆËØ•Âú∞ÂùÄÔºö[‰∏ªÈ°µ](https://www.u-tools.cn/plugins/detail/%E6%80%9D%E7%BB%AA%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/)ÔºåÁÇπÂáªÂè≥‰æßÁöÑ„ÄêÂêØÂä®„ÄëÊåâÈíÆËøõË°åÂÆâË£Ö

# Â∫ì

- ‰∏Ä‰∏™ `js` ÊÄùÁª¥ÂØºÂõæÂ∫ìÔºå‰∏ç‰æùËµñ‰ªª‰ΩïÊ°ÜÊû∂ÔºåÂèØ‰ª•Áî®Êù•Âø´ÈÄüÂÆåÊàê Web ÊÄùÁª¥ÂØºÂõæ‰∫ßÂìÅÁöÑÂºÄÂèë„ÄÇ

&gt;  ÂºÄÂèëÊñáÊ°£Ôºö[https://wanglin2.github.io/mind-map-docs/](https://wanglin2.github.io/mind-map-docs/)

- ‰∏Ä‰∏™ Web ÊÄùÁª¥ÂØºÂõæÔºåÂü∫‰∫éÊÄùÁª¥ÂØºÂõæÂ∫ì„ÄÅ`Vue2.x`„ÄÅ`ElementUI` ÂºÄÂèëÔºåÊîØÊåÅÊìç‰ΩúÁîµËÑëÊú¨Âú∞Êñá‰ª∂ÔºåÂèØ‰ª•ÂΩìÂÅö‰∏Ä‰∏™Âú®Á∫øÁâàÊÄùÁª¥ÂØºÂõæÂ∫îÁî®‰ΩøÁî®Ôºå‰πüÂèØ‰ª•Ëá™ÈÉ®ÁΩ≤Âíå‰∫åÊ¨°ÂºÄÂèë„ÄÇ

&gt;  Âú®Á∫øÂú∞ÂùÄÔºö[https://wanglin2.github.io/mind-map/](https://wanglin2.github.io/mind-map/)

- ‰∫ëÂ≠òÂÇ®ÁâàÊú¨ÔºåÂ¶ÇÊûú‰Ω†ÈúÄË¶ÅÂ∏¶ÂêéÁ´ØÁöÑ‰∫ëÂ≠òÂÇ®ÁâàÊú¨ÔºåÂèØ‰ª•Â∞ùËØïÊàë‰ª¨ÂºÄÂèëÁöÑÂè¶‰∏Ä‰∏™È°πÁõÆ[ÁêÜÊÉ≥ÊñáÊ°£](https://github.com/wanglin2/lx-doc)„ÄÇ

# ÁâπÊÄß

- [x] Êèí‰ª∂ÂåñÊû∂ÊûÑÔºåÈô§Ê†∏ÂøÉÂäüËÉΩÂ§ñÔºåÂÖ∂‰ªñÂäüËÉΩ‰Ωú‰∏∫Êèí‰ª∂Êèê‰æõÔºåÊåâÈúÄ‰ΩøÁî®ÔºåÂáèÂ∞èÊâìÂåÖ‰ΩìÁßØ
- [x] ÊîØÊåÅÈÄªËæëÁªìÊûÑÂõæÔºàÂêëÂ∑¶„ÄÅÂêëÂè≥ÈÄªËæëÁªìÊûÑÂõæÔºâ„ÄÅÊÄùÁª¥ÂØºÂõæ„ÄÅÁªÑÁªáÁªìÊûÑÂõæ„ÄÅÁõÆÂΩïÁªÑÁªáÂõæ„ÄÅÊó∂Èó¥ËΩ¥ÔºàÊ®™Âêë„ÄÅÁ´ñÂêëÔºâ„ÄÅÈ±ºÈ™®ÂõæÁ≠âÁªìÊûÑ
- [x] ÂÜÖÁΩÆÂ§öÁßç‰∏ªÈ¢òÔºåÂÖÅËÆ∏È´òÂ∫¶Ëá™ÂÆö‰πâÊ†∑ÂºèÔºåÊîØÊåÅÊ≥®ÂÜåÊñ∞‰∏ªÈ¢ò
- [x] ËäÇÁÇπÂÜÖÂÆπÊîØÊåÅÊñáÊú¨ÔºàÊôÆÈÄöÊñáÊú¨„ÄÅÂØåÊñáÊú¨Ôºâ„ÄÅÂõæÁâá„ÄÅÂõæÊ†á„ÄÅË∂ÖÈìæÊé•„ÄÅÂ§áÊ≥®„ÄÅÊ†áÁ≠æ„ÄÅÊ¶ÇË¶Å„ÄÅÊï∞Â≠¶ÂÖ¨Âºè
- [x] ËäÇÁÇπÊîØÊåÅÊãñÊãΩÔºàÊãñÊãΩÁßªÂä®„ÄÅËá™Áî±Ë∞ÉÊï¥Ôºâ„ÄÅÂ§öÁßçËäÇÁÇπÂΩ¢Áä∂ÔºõÊîØÊåÅÊâ©Â±ïËäÇÁÇπÂÜÖÂÆπ„ÄÅÊîØÊåÅ‰ΩøÁî® DDM ÂÆåÂÖ®Ëá™ÂÆö‰πâËäÇÁÇπÂÜÖÂÆπ
- [x] ÊîØÊåÅÁîªÂ∏ÉÊãñÂä®„ÄÅÁº©Êîæ
- [x] ÊîØÊåÅÈº†Ê†áÊåâÈîÆÊãñÂä®ÈÄâÊã©Âíå Ctrl+Â∑¶ÈîÆ‰∏§ÁßçÂ§öÈÄâËäÇÁÇπÊñπÂºè
- [x] ÊîØÊåÅÂØºÂá∫‰∏∫`json`„ÄÅ`png`„ÄÅ`svg`„ÄÅ`pdf`„ÄÅ`markdown`„ÄÅ`xmind`„ÄÅ`txt`ÔºåÊîØÊåÅ‰ªé`json`„ÄÅ`xmind`„ÄÅ`markdown`ÂØºÂÖ•
- [x] ÊîØÊåÅÂø´Êç∑ÈîÆ„ÄÅÂâçËøõÂêéÈÄÄ„ÄÅÂÖ≥ËÅîÁ∫ø„ÄÅÊêúÁ¥¢ÊõøÊç¢„ÄÅÂ∞èÂú∞Âõæ„ÄÅÊ∞¥Âç∞„ÄÅÊªöÂä®Êù°„ÄÅÊâãÁªòÈ£éÊ†º„ÄÅÂΩ©ËôπÁ∫øÊù°„ÄÅÊ†áËÆ∞„ÄÅÂ§ñÊ°Ü
- [x] Êèê‰æõ‰∏∞ÂØåÁöÑÈÖçÁΩÆÔºåÊª°Ë∂≥ÂêÑÁßçÂú∫ÊôØÂêÑÁßç‰ΩøÁî®‰π†ÊÉØ
- [x] ÊîØÊåÅÂçèÂêåÁºñËæë
- [x] ÊîØÊåÅÊºîÁ§∫Ê®°Âºè
- [x] Êõ¥Â§öÂäüËÉΩÁ≠â‰Ω†Êù•ÂèëÁé∞

ÂÆòÊñπÊèê‰æõ‰∫ÜÂ¶Ç‰∏ãÊèí‰ª∂ÔºåÂèØÊ†πÊçÆÈúÄÊ±ÇÊåâÈúÄÂºïÂÖ•ÔºàÊüê‰∏™ÂäüËÉΩ‰∏çÁîüÊïàÂ§ßÊ¶ÇÁéáÊòØÂõ†‰∏∫‰Ω†Ê≤°ÊúâÂºïÂÖ•ÂØπÂ∫îÁöÑÊèí‰ª∂ÔºâÔºåÂÖ∑‰Ωì‰ΩøÁî®ÊñπÂºèËØ∑Êü•ÁúãÊñáÊ°£Ôºö

| RichTextÔºàËäÇÁÇπÂØåÊñáÊú¨Êèí‰ª∂Ôºâ           | SelectÔºàÈº†Ê†áÂ§öÈÄâËäÇÁÇπÊèí‰ª∂Ôºâ                | DragÔºàËäÇÁÇπÊãñÊãΩÊèí‰ª∂Ôºâ                 | AssociativeLineÔºàÂÖ≥ËÅîÁ∫øÊèí‰ª∂Ôºâ        |
| ------------------------------------ | ----------------------------------------- | ------------------------------------ | ------------------------------------ |
| ExportÔºàÂØºÂá∫Êèí‰ª∂Ôºâ                   | KeyboardNavigationÔºàÈîÆÁõòÂØºËà™Êèí‰ª∂Ôºâ        | MiniMapÔºàÂ∞èÂú∞ÂõæÊèí‰ª∂Ôºâ                | WatermarkÔºàÊ∞¥Âç∞Êèí‰ª∂Ôºâ                |
| TouchEventÔºàÁßªÂä®Á´ØËß¶Êë∏‰∫ã‰ª∂ÊîØÊåÅÊèí‰ª∂Ôºâ | NodeImgAdjustÔºàÊãñÊãΩË∞ÉÊï¥ËäÇÁÇπÂõæÁâáÂ§ßÂ∞èÊèí‰ª∂Ôºâ | SearchÔºàÊêúÁ¥¢Êèí‰ª∂Ôºâ                   | PainterÔºàËäÇÁÇπÊ†ºÂºèÂà∑Êèí‰ª∂Ôºâ            |
| ScrollbarÔºàÊªöÂä®Êù°Êèí‰ª∂Ôºâ              | FormulaÔºàÊï∞Â≠¶ÂÖ¨ÂºèÊèí‰ª∂Ôºâ                   | CooperateÔºàÂçèÂêåÁºñËæëÊèí‰ª∂Ôºâ            | RainbowLinesÔºàÂΩ©ËôπÁ∫øÊù°Êèí‰ª∂Ôºâ         |
| DemonstrateÔºàÊºîÁ§∫Ê®°ÂºèÊèí‰ª∂Ôºâ          | OuterFrameÔºàÂ§ñÊ°ÜÊèí‰ª∂Ôºâ                    | MindMapLayoutProÔºàÊÄùÁª¥ÂØºÂõæÂ∏ÉÂ±ÄÊèí‰ª∂Ôºâ |                                      |


Êú¨È°πÁõÆ‰∏ç‰ºöÂÆûÁé∞ÁöÑÁâπÊÄßÔºö

&gt; 1.Ëá™Áî±ËäÇÁÇπÔºåÂç≥Â§ö‰∏™Ê†πËäÇÁÇπÔºõ
&gt;
&gt; 2.Ê¶ÇË¶ÅËäÇÁÇπÂêéÈù¢ÁªßÁª≠Ê∑ªÂä†ËäÇÁÇπÔºõ
&gt;
&gt; Â¶ÇÊûú‰Ω†ÈúÄË¶Å‰ª•‰∏äÁâπÊÄßÔºåÈÇ£‰πàÊú¨Â∫ìÂèØËÉΩÊó†Ê≥ïÊª°Ë∂≥‰Ω†ÁöÑÈúÄÊ±Ç„ÄÇ

# ÂÆâË£Ö

```bash
npm i simple-mind-map
```

# ‰ΩøÁî®

Êèê‰æõ‰∏Ä‰∏™ÂÆΩÈ´ò‰∏ç‰∏∫ 0 ÁöÑÂÆπÂô®ÂÖÉÁ¥†Ôºö

```html
&lt;div id=&quot;mindMapContainer&quot;&gt;&lt;/div&gt;
```

Âè¶Â§ñÂÜçËÆæÁΩÆ‰∏Ä‰∏ã`css`Ê†∑ÂºèÔºö

```css
#mindMapContainer * {
  margin: 0;
  padding: 0;
}
```

ÁÑ∂ÂêéÂàõÂª∫‰∏Ä‰∏™ÂÆû‰æãÔºö

```js
import MindMap from &quot;simple-mind-map&quot;;

const mindMap = new MindMap({
  el: document.getElementById(&quot;mindMapContainer&quot;),
  data: {
    data: {
      text: &quot;Ê†πËäÇÁÇπ&quot;,
    },
    children: [],
  },
});
```

Âç≥ÂèØÂæóÂà∞‰∏Ä‰∏™ÊÄùÁª¥ÂØºÂõæ„ÄÇÊÉ≥Ë¶ÅÂÆûÁé∞Êõ¥Â§öÂäüËÉΩÔºüÂèØ‰ª•Êü•Áúã[ÂºÄÂèëÊñáÊ°£](https://wanglin2.github.io/mind-map-docs/)„ÄÇ

# License

[MIT](./LICENSE)„ÄÇ‰øùÁïô`simple-mind-map`ÁâàÊùÉÂ£∞ÊòéÂíåÊ≥®ÊòéÊù•Ê∫êÁöÑÊÉÖÂÜµ‰∏ãÂèØÈöèÊÑèÂïÜÁî®ÔºåÂ¶ÇÊúâÁñëÈóÆÊàñ‰∏çÊÉ≥‰øùÁïôÂèØËÅîÁ≥ª‰ΩúËÄÖÔºàÂæÆ‰ø°ÔºöwanglinguanfangÔºâÈÄöËøá‰ªòË¥πÁöÑÊñπÂºèÂéªÈô§„ÄÇ

&gt; Á§∫‰æãÔºöÂèØ‰ª•Âú®‰Ω†Â∫îÁî®‰∏≠ÁöÑÂÖ≥‰∫éÈ°µÈù¢„ÄÅÂ∏ÆÂä©È°µÈù¢„ÄÅÊñáÊ°£È°µÈù¢„ÄÅÂºÄÊ∫êÂ£∞ÊòéÁ≠â‰ªª‰ΩïÈ°µÈù¢Ê∑ªÂä†‰ª•‰∏ãÂÜÖÂÆπÔºö
&gt;
&gt; Êú¨‰∫ßÂìÅÊÄùÁª¥ÂØºÂõæÂü∫‰∫éSimpleMindMapÈ°πÁõÆÂºÄÂèëÔºåÁâàÊùÉÂΩíÊ∫êÈ°πÁõÆÊâÄÊúâÔºå[ÂºÄÊ∫êÂçèËÆÆ](https://github.com/wanglin2/mind-map/blob/main/LICENSE)„ÄÇ

# ÂºÄÂèëÂ∏ÆÂä©/ÊäÄÊúØÊîØÊåÅ/Âí®ËØ¢Á≠â

Âõ†Á≤æÂäõÊúâÈôêÔºåÂèäÈáçÂøÉËΩ¨ÂèòÔºåÊöÇ‰∏çÊèê‰æõ‰ªª‰ΩïÂºÄÂèëÊîØÊåÅÔºàÂåÖÊã¨ÊúâÂÅøÔºâÔºåËØ∑ËßÅË∞ÖÔºÅ

# star

Â¶ÇÊûúÂñúÊ¨¢Êú¨È°πÁõÆÔºåÊ¨¢ËøéÁÇπ‰∏™ starÔºåËøôÂØπÊàë‰ª¨ÂæàÈáçË¶Å„ÄÇ

[![Star History Chart](https://api.star-history.com/svg?repos=wanglin2/mind-map&amp;type=Date)](https://star-history.com/#wanglin2/mind-map&amp;Date)

# ÂÖ≥‰∫éÂÆöÂà∂

Â¶ÇÊûú‰Ω†Êúâ‰∏™ÊÄßÂåñÁöÑÂïÜÁî®ÂÆöÂà∂ÈúÄÊ±ÇÔºåÂèØ‰ª•ËÅîÁ≥ªÊàë‰ª¨ÔºåÊàë‰ª¨Êèê‰æõ‰ªòË¥πÂºÄÂèëÊúçÂä°ÔºåÊó†ËÆ∫ÂâçÁ´Ø„ÄÅÂêéÁ´Ø„ÄÅËøòÊòØÈÉ®ÁΩ≤ÔºåÈÉΩÂèØ‰ª•Â∏Æ‰Ω†‰∏ÄÁ´ôÂºèÊêûÂÆö„ÄÇ

# Ë∞ÅÂú®‰ΩøÁî®

&lt;table&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;http://drawon.cn/&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Ê°åÊ°à.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;drawon.cn(Ê°åÊ°à)&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

# ÊÑüË∞¢ËµûËµèËøáÊú¨È°πÁõÆÁöÑ‰∫∫

## ÊúÄÂº∫ÁéãËÄÖ

&lt;table&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/hi.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;hi&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

## ÈíªÁü≥ËµûÂä©

&lt;table&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/ÈªÑÊô∫ÂΩ™@‰∏ÄÁ±≥‰∏ÄÊ†óÁßëÊäÄ.png&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;ÈªÑÊô∫ÂΩ™@‰∏ÄÁ±≥‰∏ÄÊ†óÁßëÊäÄ&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Ê≤®Ê≤Ñ.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Ê≤®Ê≤Ñ&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Ë°å.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Ë°å&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

## ÈªÑÈáëËµûÂä©

&lt;table&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Â∞èÂúüÊ∏£ÁöÑÂÆáÂÆô.jpeg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Â∞èÂúüÊ∏£ÁöÑÂÆáÂÆô&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Chris.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Chris&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/‰ªìÈº†.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;‰ªìÈº†&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/È£éÊ†º.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;È£éÊ†º&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/default.png&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;LiuJL&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Kyle.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Kyle&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/ÁßÄÊ†ëÂõ†È¶®Èõ®.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;ÁßÄÊ†ëÂõ†È¶®Èõ®&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/default.png&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;ÈªÑÊ≥≥&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/ccccs.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;ccccs&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/ÁÇ´.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;ÁÇ´&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/default.png&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;ÊôèÊ±ü&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Ê¢ÅËæâ.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Ê¢ÅËæâ&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/ÂçÉÂ∏Ü.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;ÂçÉÂ∏Ü&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Â∏ÉÊûó.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Â∏ÉÊûó&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Ëææ‰ªÅÁßëÊäÄ.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Ëææ‰ªÅÁßëÊäÄ&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Ê≤êÈ£éÁâßËçâ.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Ê≤êÈ£éÁâßËçâ&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/‰øäÂ•á.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;‰øäÂ•á&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Â∫ÜÂõΩ.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Â∫ÜÂõΩ&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/default.png&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Matt&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Èõ®È¶®.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Èõ®È¶®&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Â≥∞.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Â≥∞&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Âæ°È£é.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Âæ°È£é&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/ÂÖîÂ≠êÂø´Ë∑ë.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;ÂÖîÂ≠êÂø´Ë∑ë&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/default.png&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;LSHM&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/default.png&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;newplayer&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

## ÈùíÈìúËµûÂä©

&lt;table&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Think.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Think&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/ÂøóÊñå.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;ÂøóÊñå&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/qp.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;qp&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/ZXR.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;ZXR&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Ëä±ÂÑøÊúµÊúµ.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Ëä±ÂÑøÊúµÊúµ&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/suka.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;suka&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Ê∞¥ËΩ¶.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Ê∞¥ËΩ¶&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/ÊâçÈïá.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;ÊâçÈïá&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Â∞èÁ±≥.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[pinojs/pino]]></title>
            <link>https://github.com/pinojs/pino</link>
            <guid>https://github.com/pinojs/pino</guid>
            <pubDate>Thu, 16 Oct 2025 00:04:51 GMT</pubDate>
            <description><![CDATA[üå≤ super fast, all natural json logger]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pinojs/pino">pinojs/pino</a></h1>
            <p>üå≤ super fast, all natural json logger</p>
            <p>Language: JavaScript</p>
            <p>Stars: 16,542</p>
            <p>Forks: 934</p>
            <p>Stars today: 23 stars today</p>
            <h2>README</h2><pre>![banner](pino-banner.png)

# pino
[![npm version](https://img.shields.io/npm/v/pino)](https://www.npmjs.com/package/pino)
[![Build Status](https://img.shields.io/github/actions/workflow/status/pinojs/pino/ci.yml)](https://github.com/pinojs/pino/actions)
[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](https://standardjs.com/)

[Very low overhead](#low-overhead) JavaScript logger.

## Documentation

* [Benchmarks ‚áó](/docs/benchmarks.md)
* [API ‚áó](/docs/api.md)
* [Browser API ‚áó](/docs/browser.md)
* [Redaction ‚áó](/docs/redaction.md)
* [Child Loggers ‚áó](/docs/child-loggers.md)
* [Transports ‚áó](/docs/transports.md)
* [Diagnostics ‚áó](/docs/diagnostics.md)
* [Web Frameworks ‚áó](/docs/web.md)
* [Pretty Printing ‚áó](/docs/pretty.md)
* [Asynchronous Logging ‚áó](/docs/asynchronous.md)
* [Ecosystem ‚áó](/docs/ecosystem.md)
* [Help ‚áó](/docs/help.md)
* [Long Term Support Policy ‚áó](/docs/lts.md)

## Runtimes

### Node.js

Pino is built to run on [Node.js](http://nodejs.org).

### Bare

Pino works on [Bare](https://github.com/holepunchto/bare) with the [`pino-bare`](https://github.com/pinojs/pino-bare) compatability module.

### Pear

Pino works on [Pear](https://docs.pears.com), which is built on [Bare](https://github.com/holepunchto/bare), with the [`pino-bare`](https://github.com/pinojs/pino-bare) compatibility module.


## Install

Using NPM:
```
$ npm install pino
```

Using YARN:
```
$ yarn add pino
```

If you would like to install pino v6, refer to https://github.com/pinojs/pino/tree/v6.x.

## Usage

```js
const logger = require(&#039;pino&#039;)()

logger.info(&#039;hello world&#039;)

const child = logger.child({ a: &#039;property&#039; })
child.info(&#039;hello child!&#039;)
```

This produces:

```
{&quot;level&quot;:30,&quot;time&quot;:1531171074631,&quot;msg&quot;:&quot;hello world&quot;,&quot;pid&quot;:657,&quot;hostname&quot;:&quot;Davids-MBP-3.fritz.box&quot;}
{&quot;level&quot;:30,&quot;time&quot;:1531171082399,&quot;msg&quot;:&quot;hello child!&quot;,&quot;pid&quot;:657,&quot;hostname&quot;:&quot;Davids-MBP-3.fritz.box&quot;,&quot;a&quot;:&quot;property&quot;}
```

For using Pino with a web framework see:

* [Pino with Fastify](docs/web.md#fastify)
* [Pino with Express](docs/web.md#express)
* [Pino with Hapi](docs/web.md#hapi)
* [Pino with Restify](docs/web.md#restify)
* [Pino with Koa](docs/web.md#koa)
* [Pino with Node core `http`](docs/web.md#http)
* [Pino with Nest](docs/web.md#nest)
* [Pino with Hono](docs/web.md#hono)

&lt;a name=&quot;essentials&quot;&gt;&lt;/a&gt;
## Essentials

### Development Formatting

The [`pino-pretty`](https://github.com/pinojs/pino-pretty) module can be used to
format logs during development:

![pretty demo](pretty-demo.png)

### Transports &amp; Log Processing

Due to Node&#039;s single-threaded event-loop, it&#039;s highly recommended that sending,
alert triggering, reformatting, and all forms of log processing
are conducted in a separate process or thread.

In Pino terminology, we call all log processors &quot;transports&quot; and recommend that the
transports be run in a worker thread using our `pino.transport` API.

For more details see our [Transports‚áó](docs/transports.md) document.

### Low overhead

Using minimum resources for logging is very important. Log messages
tend to get added over time and this can lead to a throttling effect
on applications ‚Äì¬†such as reduced requests per second.

In many cases, Pino is over 5x faster than alternatives.

See the [Benchmarks](docs/benchmarks.md) document for comparisons.

### Bundling support

Pino supports being bundled using tools like webpack or esbuild. 

See [Bundling](docs/bundling.md) document for more information.

&lt;a name=&quot;team&quot;&gt;&lt;/a&gt;
## The Team

### Matteo Collina

&lt;https://github.com/mcollina&gt;

&lt;https://www.npmjs.com/~matteo.collina&gt;

&lt;https://twitter.com/matteocollina&gt;

### David Mark Clements

&lt;https://github.com/davidmarkclements&gt;

&lt;https://www.npmjs.com/~davidmarkclements&gt;

&lt;https://twitter.com/davidmarkclem&gt;

### James Sumners

&lt;https://github.com/jsumners&gt;

&lt;https://www.npmjs.com/~jsumners&gt;

&lt;https://twitter.com/jsumners79&gt;

### Thomas Watson Steen

&lt;https://github.com/watson&gt;

&lt;https://www.npmjs.com/~watson&gt;

&lt;https://twitter.com/wa7son&gt;

## Contributing

Pino is an **OPEN Open Source Project**. This means that:

&gt; Individuals making significant and valuable contributions are given commit-access to the project to contribute as they see fit. This project is more like an open wiki than a standard guarded open source project.

See the [CONTRIBUTING.md](https://github.com/pinojs/pino/blob/main/CONTRIBUTING.md) file for more details.

&lt;a name=&quot;acknowledgments&quot;&gt;&lt;/a&gt;
## Acknowledgments

This project was kindly sponsored by [nearForm](https://nearform.com).
This project is kindly sponsored by [Platformatic](https://platformatic.dev).

Logo and identity designed by Cosmic Fox Design: https://www.behance.net/cosmicfox.

## License

Licensed under [MIT](./LICENSE).

[elasticsearch]: https://www.elastic.co/products/elasticsearch
[kibana]: https://www.elastic.co/products/kibana
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[validatorjs/validator.js]]></title>
            <link>https://github.com/validatorjs/validator.js</link>
            <guid>https://github.com/validatorjs/validator.js</guid>
            <pubDate>Thu, 16 Oct 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[String validation]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/validatorjs/validator.js">validatorjs/validator.js</a></h1>
            <p>String validation</p>
            <p>Language: JavaScript</p>
            <p>Stars: 23,626</p>
            <p>Forks: 2,367</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre># validator.js
[![NPM version][npm-image]][npm-url]
[![CI][ci-image]][ci-url]
[![Coverage][codecov-image]][codecov-url]
[![Downloads][downloads-image]][npm-url]
[![Backers on Open Collective](https://opencollective.com/validatorjs/backers/badge.svg)](#backers)
[![Sponsors on Open Collective](https://opencollective.com/validatorjs/sponsors/badge.svg)](#sponsors)
[![License](https://img.shields.io/badge/License-MIT-red.svg)](https://github.com/alguerocode/validator.js/blob/master/LICENSE)
[![Gitter][gitter-image]][gitter-url]

A library of string validators and sanitizers.

## Strings only

**This library validates and sanitizes strings only.**

If you&#039;re not sure if your input is a string, coerce it using `input + &#039;&#039;`.
Passing anything other than a string will result in an error.

## Installation and Usage

### Server-side usage

Install the `validator` package as:

```sh
npm i validator
yarn add validator
pnpm i validator
```

#### No ES6

```javascript
var validator = require(&#039;validator&#039;);

validator.isEmail(&#039;foo@bar.com&#039;); //=&gt; true
```

#### ES6

```javascript
import validator from &#039;validator&#039;;
```

Or, import only a subset of the library:

```javascript
import isEmail from &#039;validator/lib/isEmail&#039;;
```

#### Tree-shakeable ES imports

```javascript
import isEmail from &#039;validator/es/lib/isEmail&#039;;
```

### Client-side usage

The library can be loaded either as a standalone script, or through an [AMD][amd]-compatible loader

```html
&lt;script type=&quot;text/javascript&quot; src=&quot;validator.min.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
  validator.isEmail(&#039;foo@bar.com&#039;); //=&gt; true
&lt;/script&gt;
```

The library can also be installed through [bower][bower]

```bash
$ bower install validator-js
```

CDN

```html
&lt;script src=&quot;https://unpkg.com/validator@latest/validator.min.js&quot;&gt;&lt;/script&gt;
```

## Validators

Here is a list of the validators currently available.

Validator                               | Description
--------------------------------------- | --------------------------------------
**contains(str, seed [, options])**    | check if the string contains the seed.&lt;br/&gt;&lt;br/&gt;`options` is an object that defaults to `{ ignoreCase: false, minOccurrences: 1 }`.&lt;br /&gt;Options: &lt;br/&gt; `ignoreCase`: Ignore case when doing comparison, default false.&lt;br/&gt;`minOccurrences`: Minimum number of occurrences for the seed in the string. Defaults to 1.
**equals(str, comparison)**             | check if the string matches the comparison.
**isAbaRouting(str)**               | check if the string is an ABA routing number for US bank account / cheque.
**isAfter(str [, options])**            | check if the string is a date that is after the specified date.&lt;br/&gt;&lt;br/&gt;`options` is an object that defaults to `{ comparisonDate: Date().toString() }`.&lt;br/&gt;**Options:**&lt;br/&gt;`comparisonDate`: Date to compare to. Defaults to `Date().toString()` (now).
**isAlpha(str [, locale, options])**    | check if the string contains only letters (a-zA-Z).&lt;br/&gt;&lt;br/&gt;`locale` is one of `[&#039;ar&#039;, &#039;ar-AE&#039;, &#039;ar-BH&#039;, &#039;ar-DZ&#039;, &#039;ar-EG&#039;, &#039;ar-IQ&#039;, &#039;ar-JO&#039;, &#039;ar-KW&#039;, &#039;ar-LB&#039;, &#039;ar-LY&#039;, &#039;ar-MA&#039;, &#039;ar-QA&#039;, &#039;ar-QM&#039;, &#039;ar-SA&#039;, &#039;ar-SD&#039;, &#039;ar-SY&#039;, &#039;ar-TN&#039;, &#039;ar-YE&#039;, &#039;bg-BG&#039;, &#039;bn&#039;, &#039;bn-IN&#039;, &#039;cs-CZ&#039;, &#039;da-DK&#039;, &#039;de-DE&#039;, &#039;el-GR&#039;, &#039;en-AU&#039;, &#039;en-GB&#039;, &#039;en-HK&#039;, &#039;en-IN&#039;, &#039;en-NZ&#039;, &#039;en-US&#039;, &#039;en-ZA&#039;, &#039;en-ZM&#039;, &#039;eo&#039;, &#039;es-ES&#039;, &#039;fa-IR&#039;, &#039;fi-FI&#039;, &#039;fr-CA&#039;, &#039;fr-FR&#039;, &#039;gu-IN&#039;, &#039;he&#039;, &#039;hi-IN&#039;, &#039;hu-HU&#039;, &#039;it-IT&#039;, &#039;ja-JP&#039;, &#039;kk-KZ&#039;, &#039;kn-IN&#039;, &#039;ko-KR&#039;, &#039;ku-IQ&#039;, &#039;ml-IN&#039;, &#039;nb-NO&#039;, &#039;nl-NL&#039;, &#039;nn-NO&#039;, &#039;or-IN&#039;, &#039;pa-IN&#039;, &#039;pl-PL&#039;, &#039;pt-BR&#039;, &#039;pt-PT&#039;, &#039;ru-RU&#039;, &#039;si-LK&#039;, &#039;sk-SK&#039;, &#039;sl-SI&#039;, &#039;sr-RS&#039;, &#039;sr-RS@latin&#039;, &#039;sv-SE&#039;, &#039;ta-IN&#039;, &#039;te-IN&#039;, &#039;th-TH&#039;, &#039;tr-TR&#039;, &#039;uk-UA&#039;]` and defaults to `en-US`. Locale list is `validator.isAlphaLocales`. `options` is an optional object that can be supplied with the following key(s): `ignore` which can either be a String or RegExp of characters to be ignored e.g. &quot; -&quot; will ignore spaces and -&#039;s.
**isAlphanumeric(str [, locale, options])**      | check if the string contains only letters and numbers (a-zA-Z0-9).&lt;br/&gt;&lt;br/&gt;`locale` is one of `[&#039;ar&#039;, &#039;ar-AE&#039;, &#039;ar-BH&#039;, &#039;ar-DZ&#039;, &#039;ar-EG&#039;, &#039;ar-IQ&#039;, &#039;ar-JO&#039;, &#039;ar-KW&#039;, &#039;ar-LB&#039;, &#039;ar-LY&#039;, &#039;ar-MA&#039;, &#039;ar-QA&#039;, &#039;ar-QM&#039;, &#039;ar-SA&#039;, &#039;ar-SD&#039;, &#039;ar-SY&#039;, &#039;ar-TN&#039;, &#039;ar-YE&#039;, &#039;bg-BG&#039;, &#039;bn&#039;, &#039;bn-IN&#039;, &#039;cs-CZ&#039;, &#039;da-DK&#039;, &#039;de-DE&#039;, &#039;el-GR&#039;, &#039;en-AU&#039;, &#039;en-GB&#039;, &#039;en-HK&#039;, &#039;en-IN&#039;, &#039;en-NZ&#039;, &#039;en-US&#039;, &#039;en-ZA&#039;, &#039;en-ZM&#039;, &#039;eo&#039;, &#039;es-ES&#039;, &#039;fa-IR&#039;, &#039;fi-FI&#039;, &#039;fr-CA&#039;, &#039;fr-FR&#039;, &#039;gu-IN&#039;, &#039;he&#039;, &#039;hi-IN&#039;, &#039;hu-HU&#039;, &#039;it-IT&#039;, &#039;ja-JP&#039;, &#039;kk-KZ&#039;, &#039;kn-IN&#039;, &#039;ko-KR&#039;, &#039;ku-IQ&#039;, &#039;ml-IN&#039;, &#039;nb-NO&#039;, &#039;nl-NL&#039;, &#039;nn-NO&#039;, &#039;or-IN&#039;, &#039;pa-IN&#039;, &#039;pl-PL&#039;, &#039;pt-BR&#039;, &#039;pt-PT&#039;, &#039;ru-RU&#039;, &#039;si-LK&#039;, &#039;sk-SK&#039;, &#039;sl-SI&#039;, &#039;sr-RS&#039;, &#039;sr-RS@latin&#039;, &#039;sv-SE&#039;, &#039;ta-IN&#039;, &#039;te-IN&#039;, &#039;th-TH&#039;, &#039;tr-TR&#039;, &#039;uk-UA&#039;]`) and defaults to `en-US`. Locale list is `validator.isAlphanumericLocales`. `options` is an optional object that can be supplied with the following key(s): `ignore` which can either be a String or RegExp of characters to be ignored e.g. &quot; -&quot; will ignore spaces and -&#039;s.
**isAscii(str)**                        | check if the string contains ASCII chars only.
**isBase32(str [, options])**           | check if the string is base32 encoded. `options` is optional and defaults to `{ crockford: false }`.&lt;br/&gt; When `crockford` is true it tests the given base32 encoded string using [Crockford&#039;s base32 alternative][Crockford Base32].
**isBase58(str)**                       | check if the string is base58 encoded.
**isBase64(str [, options])**          | check if the string is base64 encoded. `options` is optional and defaults to `{ urlSafe: false, padding: true }`&lt;br/&gt; when `urlSafe` is true default value for `padding` is false and it tests the given base64 encoded string is [url safe][Base64 URL Safe].
**isBefore(str [, options])**              | check if the string is a date that is before the specified date.&lt;br/&gt;&lt;br/&gt;`options` is an object that defaults to `{ comparisonDate: Date().toString() }`.&lt;br/&gt;&lt;br/&gt;**Options:**&lt;br/&gt;`comparisonDate`: Date to compare to. Defaults to `Date().toString()` (now).
**isBIC(str)**                          | check if the string is a BIC (Bank Identification Code) or SWIFT code.
**isBoolean(str [, options])**          | check if the string is a boolean.&lt;br/&gt;`options` is an object which defaults to `{ loose: false }`. If `loose` is set to false, the validator will strictly match [&#039;true&#039;, &#039;false&#039;, &#039;0&#039;, &#039;1&#039;]. If `loose` is set to true, the validator will also match &#039;yes&#039;, &#039;no&#039;, and will match a valid boolean string of any case. (e.g.: [&#039;true&#039;, &#039;True&#039;, &#039;TRUE&#039;]).
**isBtcAddress(str)**            | check if the string is a valid BTC address.
**isByteLength(str [, options])**          | check if the string&#039;s length (in UTF-8 bytes) falls in a range.&lt;br/&gt;&lt;br/&gt;`options` is an object which defaults to `{ min: 0, max: undefined }`.
**isCreditCard(str [, options])**                   | check if the string is a credit card number.&lt;br/&gt;&lt;br/&gt; `options` is an optional object that can be supplied with the following key(s): `provider` is an optional key whose value should be a string, and defines the company issuing the credit card. Valid values include `[&#039;amex&#039;, &#039;dinersclub&#039;, &#039;discover&#039;, &#039;jcb&#039;, &#039;mastercard&#039;, &#039;unionpay&#039;, &#039;visa&#039;]` or blank will check for any provider.
**isCurrency(str [, options])**            | check if the string is a valid currency amount.&lt;br/&gt;&lt;br/&gt;`options` is an object which defaults to `{ symbol: &#039;$&#039;, require_symbol: false, allow_space_after_symbol: false, symbol_after_digits: false, allow_negatives: true, parens_for_negatives: false, negative_sign_before_digits: false, negative_sign_after_digits: false, allow_negative_sign_placeholder: false, thousands_separator: &#039;,&#039;, decimal_separator: &#039;.&#039;, allow_decimal: true, require_decimal: false, digits_after_decimal: [2], allow_space_after_digits: false }`.&lt;br/&gt;**Note:** The array `digits_after_decimal` is filled with the exact number of digits allowed not a range, for example a range 1 to 3 will be given as [1, 2, 3].
**isDataURI(str)**                      | check if the string is a [data uri format][Data URI Format].
**isDate(str [, options])**          | check if the string is a valid date. e.g. [`2002-07-15`, new Date()].&lt;br/&gt;&lt;br/&gt; `options` is an object which can contain the keys `format`, `strictMode` and/or `delimiters`.&lt;br/&gt;&lt;br/&gt;`format` is a string and defaults to `YYYY/MM/DD`.&lt;br/&gt;&lt;br/&gt;`strictMode` is a boolean and defaults to `false`. If `strictMode` is set to true, the validator will reject strings different from `format`.&lt;br/&gt;&lt;br/&gt; `delimiters` is an array of allowed date delimiters and defaults to `[&#039;/&#039;, &#039;-&#039;]`.
**isDecimal(str [, options])**             | check if the string represents a decimal number, such as 0.1, .3, 1.1, 1.00003, 4.0, etc.&lt;br/&gt;&lt;br/&gt;`options` is an object which defaults to `{force_decimal: false, decimal_digits: &#039;1,&#039;, locale: &#039;en-US&#039;}`.&lt;br/&gt;&lt;br/&gt;`locale` determines the decimal separator and is one of `[&#039;ar&#039;, &#039;ar-AE&#039;, &#039;ar-BH&#039;, &#039;ar-DZ&#039;, &#039;ar-EG&#039;, &#039;ar-IQ&#039;, &#039;ar-JO&#039;, &#039;ar-KW&#039;, &#039;ar-LB&#039;, &#039;ar-LY&#039;, &#039;ar-MA&#039;, &#039;ar-QA&#039;, &#039;ar-QM&#039;, &#039;ar-SA&#039;, &#039;ar-SD&#039;, &#039;ar-SY&#039;, &#039;ar-TN&#039;, &#039;ar-YE&#039;, &#039;bg-BG&#039;, &#039;cs-CZ&#039;, &#039;da-DK&#039;, &#039;de-DE&#039;, &#039;el-GR&#039;, &#039;en-AU&#039;, &#039;en-GB&#039;, &#039;en-HK&#039;, &#039;en-IN&#039;, &#039;en-NZ&#039;, &#039;en-US&#039;, &#039;en-ZA&#039;, &#039;en-ZM&#039;, &#039;eo&#039;, &#039;es-ES&#039;, &#039;fa&#039;, &#039;fa-AF&#039;, &#039;fa-IR&#039;, &#039;fr-FR&#039;, &#039;fr-CA&#039;, &#039;hu-HU&#039;, &#039;id-ID&#039;, &#039;it-IT&#039;, &#039;ku-IQ&#039;, &#039;nb-NO&#039;, &#039;nl-NL&#039;, &#039;nn-NO&#039;, &#039;pl-PL&#039;, &#039;pl-Pl&#039;, &#039;pt-BR&#039;, &#039;pt-PT&#039;, &#039;ru-RU&#039;, &#039;sl-SI&#039;, &#039;sr-RS&#039;, &#039;sr-RS@latin&#039;, &#039;sv-SE&#039;, &#039;tr-TR&#039;, &#039;uk-UA&#039;, &#039;vi-VN&#039;]`.&lt;br/&gt;**Note:** `decimal_digits` is given as a range like &#039;1,3&#039;, a specific value like &#039;3&#039; or min like &#039;1,&#039;.
**isDivisibleBy(str, number)**          | check if the string is a number that is divisible by another.
**isEAN(str)**                          | check if the string is an [EAN (European Article Number)][European Article Number].
**isEmail(str [, options])**            | check if the string is an email.&lt;br/&gt;&lt;br/&gt;`options` is an object which defaults to `{ allow_display_name: false, require_display_name: false, allow_utf8_local_part: true, require_tld: true, allow_ip_domain: false, allow_underscores: false, domain_specific_validation: false, blacklisted_chars: &#039;&#039;, host_blacklist: [] }`. If `allow_display_name` is set to true, the validator will also match `Display Name &lt;email-address&gt;`. If `require_display_name` is set to true, the validator will reject strings without the format `Display Name &lt;email-address&gt;`. If `allow_utf8_local_part` is set to false, the validator will not allow any non-English UTF8 character in email address&#039; local part. If `require_tld` is set to false, email addresses without a TLD in their domain will also be matched. If `ignore_max_length` is set to true, the validator will not check for the standard max length of an email. If `allow_ip_domain` is set to true, the validator will allow IP addresses in the host part. If `domain_specific_validation` is true, some additional validation will be enabled, e.g. disallowing certain syntactically valid email addresses that are rejected by Gmail. If `blacklisted_chars` receives a string, then the validator will reject emails that include any of the characters in the string, in the name part. If `host_blacklist` is set to an array of strings or regexp, and the part of the email after the `@` symbol matches one of the strings defined in it, the validation fails. If `host_whitelist` is set to an array of strings or regexp, and the part of the email after the `@` symbol matches none of the strings defined in it, the validation fails.
**isEmpty(str [, options])**            | check if the string has a length of zero.&lt;br/&gt;&lt;br/&gt;`options` is an object which defaults to `{ ignore_whitespace: false }`.
**isEthereumAddress(str)**              | check if the string is an [Ethereum][Ethereum] address. Does not validate address checksums.
**isFloat(str [, options])**            | check if the string is a float.&lt;br/&gt;&lt;br/&gt;`options` is an object which can contain the keys `min`, `max`, `gt`, and/or `lt` to validate the float is within boundaries (e.g. `{ min: 7.22, max: 9.55 }`) it also has `locale` as an option.&lt;br/&gt;&lt;br/&gt;`min` and `max` are equivalent to &#039;greater or equal&#039; and &#039;less or equal&#039;, respectively while `gt` and `lt` are their strict counterparts.&lt;br/&gt;&lt;br/&gt;`locale` determines the decimal separator and is one of `[&#039;ar&#039;, &#039;ar-AE&#039;, &#039;ar-BH&#039;, &#039;ar-DZ&#039;, &#039;ar-EG&#039;, &#039;ar-IQ&#039;, &#039;ar-JO&#039;, &#039;ar-KW&#039;, &#039;ar-LB&#039;, &#039;ar-LY&#039;, &#039;ar-MA&#039;, &#039;ar-QA&#039;, &#039;ar-QM&#039;, &#039;ar-SA&#039;, &#039;ar-SD&#039;, &#039;ar-SY&#039;, &#039;ar-TN&#039;, &#039;ar-YE&#039;, &#039;bg-BG&#039;, &#039;cs-CZ&#039;, &#039;da-DK&#039;, &#039;de-DE&#039;, &#039;en-AU&#039;, &#039;en-GB&#039;, &#039;en-HK&#039;, &#039;en-IN&#039;, &#039;en-NZ&#039;, &#039;en-US&#039;, &#039;en-ZA&#039;, &#039;en-ZM&#039;, &#039;eo&#039;, &#039;es-ES&#039;, &#039;fr-CA&#039;, &#039;fr-FR&#039;, &#039;hu-HU&#039;, &#039;it-IT&#039;, &#039;nb-NO&#039;, &#039;nl-NL&#039;, &#039;nn-NO&#039;, &#039;pl-PL&#039;, &#039;pt-BR&#039;, &#039;pt-PT&#039;, &#039;ru-RU&#039;, &#039;sl-SI&#039;, &#039;sr-RS&#039;, &#039;sr-RS@latin&#039;, &#039;sv-SE&#039;, &#039;tr-TR&#039;, &#039;uk-UA&#039;]`. Locale list is `validator.isFloatLocales`.
**isFQDN(str [, options])**             | check if the string is a fully qualified domain name (e.g. domain.com).&lt;br/&gt;&lt;br/&gt;`options` is an object which defaults to `{ require_tld: true, allow_underscores: false, allow_trailing_dot: false, allow_numeric_tld: false, allow_wildcard: false, ignore_max_length: false }`.&lt;br/&gt;&lt;br/&gt;`require_tld` - If set to false the validator will not check if the domain includes a TLD.&lt;br/&gt;`allow_underscores` - if set to true, the validator will allow underscores in the domain.&lt;br/&gt;`allow_trailing_dot` - if set to true, the validator will allow the domain to end with a `.` character.&lt;br/&gt;`allow_numeric_tld` - if set to true, the validator will allow the TLD of the domain to be made up solely of numbers.&lt;br /&gt;`allow_wildcard` - if set to true, the validator will allow domains starting with `*.` (e.g. `*.example.com` or `*.shop.example.com`).&lt;br/&gt;`ignore_max_length` - if set to true, the validator will not check for the standard max length of a domain.&lt;br/&gt;
**isFreightContainerID(str)**                      | alias for `isISO6346`, check if the string is a valid [ISO 6346](https://en.wikipedia.org/wiki/ISO_6346) shipping container identification.
**isFullWidth(str)**                    | check if the string contains any full-width chars.
**isHalfWidth(str)**                    | check if the string contains any half-width chars.
**isHash(str, algorithm)**              | check if the string is a hash of type algorithm.&lt;br/&gt;&lt;br/&gt;Algorithm is one of `[&#039;crc32&#039;, &#039;crc32b&#039;, &#039;md4&#039;, &#039;md5&#039;, &#039;ripemd128&#039;, &#039;ripemd160&#039;, &#039;sha1&#039;, &#039;sha256&#039;, &#039;sha384&#039;, &#039;sha512&#039;, &#039;tiger128&#039;, &#039;tiger160&#039;, &#039;tiger192&#039;]`.
**isHexadecimal(str)**                  | check if the string is a hexadecimal number.
**isHexColor(str)**                     | check if the string is a hexadecimal color.
**isHSL(str)**                          | check if the string is an HSL (hue, saturation, lightness, optional alpha) color based on [CSS Colors Level 4 specification][CSS Colors Level 4 Specification].&lt;br/&gt;&lt;br/&gt;Comma-separated format supported. Space-separated format supported with the exception of a few edge cases (ex: `hsl(200grad+.1%62%/1)`).
**isIBAN(str, [, options])**                  | check if the string is an IBAN (International Bank Account Number).&lt;br/&gt;&lt;br/&gt;`options` is an object which accepts two attributes: `whitelist`: where you can restrict IBAN codes you want to receive data from and `blacklist`: where you can remove some of the countries from the current list. For both you can use an array with the following values `[&#039;AD&#039;,&#039;AE&#039;,&#039;AL&#039;,&#039;AT&#039;,&#039;AZ&#039;,&#039;BA&#039;,&#039;BE&#039;,&#039;BG&#039;,&#039;BH&#039;,&#039;BR&#039;,&#039;BY&#039;,&#039;CH&#039;,&#039;CR&#039;,&#039;CY&#039;,&#039;CZ&#039;,&#039;DE&#039;,&#039;DK&#039;,&#039;DO&#039;,&#039;EE&#039;,&#039;EG&#039;,&#039;ES&#039;,&#039;FI&#039;,&#039;FO&#039;,&#039;FR&#039;,&#039;GB&#039;,&#039;GE&#039;,&#039;GI&#039;,&#039;GL&#039;,&#039;GR&#039;,&#039;GT&#039;,&#039;HR&#039;,&#039;HU&#039;,&#039;IE&#039;,&#039;IL&#039;,&#039;IQ&#039;,&#039;IR&#039;,&#039;IS&#039;,&#039;IT&#039;,&#039;JO&#039;,&#039;KW&#039;,&#039;KZ&#039;,&#039;LB&#039;,&#039;LC&#039;,&#039;LI&#039;,&#039;LT&#039;,&#039;LU&#039;,&#039;LV&#039;,&#039;MC&#039;,&#039;MD&#039;,&#039;ME&#039;,&#039;MK&#039;,&#039;MR&#039;,&#039;MT&#039;,&#039;MU&#039;,&#039;MZ&#039;,&#039;NL&#039;,&#039;NO&#039;,&#039;PK&#039;,&#039;PL&#039;,&#039;PS&#039;,&#039;PT&#039;,&#039;QA&#039;,&#039;RO&#039;,&#039;RS&#039;,&#039;SA&#039;,&#039;SC&#039;,&#039;SE&#039;,&#039;SI&#039;,&#039;SK&#039;,&#039;SM&#039;,&#039;SV&#039;,&#039;TL&#039;,&#039;TN&#039;,&#039;TR&#039;,&#039;UA&#039;,&#039;VA&#039;,&#039;VG&#039;,&#039;XK&#039;]`.
**isIdentityCard(str [, locale])**      | check if the string is a valid identity card code.&lt;br/&gt;&lt;br/&gt;`locale` is one of `[&#039;LK&#039;, &#039;PL&#039;, &#039;ES&#039;, &#039;FI&#039;, &#039;IN&#039;, &#039;IT&#039;, &#039;IR&#039;, &#039;MZ&#039;, &#039;NO&#039;, &#039;TH&#039;, &#039;zh-TW&#039;, &#039;he-IL&#039;, &#039;ar-LY&#039;, &#039;ar-TN&#039;, &#039;zh-CN&#039;, &#039;zh-HK&#039;, &#039;PK&#039;]` OR `&#039;any&#039;`. If &#039;any&#039; is used, function will check if any of the locales match.&lt;br/&gt;&lt;br/&gt;Defaults to &#039;any&#039;.
**isIMEI(str [, options]))**                         | check if the string is a valid [IMEI number][IMEI]. IMEI should be of format `###############` or `##-######-######-#`.&lt;br/&gt;&lt;br/&gt;`options` is an object which can contain the keys `allow_hyphens`. Defaults to first format. If `allow_hyphens` is set to true, the validator will validate the second format.
**isIn(str, values)**                   | check if the string is in an array of allowed values.
**isInt(str [, options])**              | check if the string is an integer.&lt;br/&gt;&lt;br/&gt;`options` is an object which can contain the keys `min` and/or `max` to check the integer is within boundaries (e.g. `{ min: 10, max: 99 }`). `options` can also contain the key `allow_leading_zeroes`, which when set to false will disallow integer values with leading zeroes (e.g. `{ allow_leading_zeroes: false }`). Finally, `options` can contain the keys `gt` and/or `lt` which will enforce integers being greater than or less than, respectively, the value provided (e.g. `{gt: 1, lt: 4}` for a number between 1 and 4).
**isIP(str [, options])**               | check if the string is an IP address (version 4 or 6).&lt;br/&gt;&lt;br/&gt;`options` is an object that defaults to `{ version: &#039;&#039; }`.&lt;br/&gt;&lt;br/&gt;**Options:**&lt;br/&gt;`version`: defines which IP version to compare to. Accepted values: `4`, `6`, `&#039;4&#039;`, `&#039;6&#039;`.
**isIPRange(str [, version])**          | check if the string is an IP Range (version 4 or 6).
**isISBN(str [, options])**             | check if the string is an [ISBN][ISBN].&lt;br/&gt;&lt;br/&gt;`options` is an object that has no default.&lt;br/&gt;**Options:**&lt;br/&gt;`version`: ISBN version to compare to. Accepted values are &#039;10&#039; and &#039;13&#039;. If none provided, both will be tested.
**isISIN(str)**                         | check if the string is an [ISIN][ISIN] (stock/security identifier).
**isISO6346(str)**                      | check if the string is a valid [ISO 6346](https://en.wikipedia.org/wiki/ISO_6346) shipping container identification.
**isISO6391(str)**                      | check if the string is a valid [ISO 639-1][ISO 639-1] language code.
**isISO8601(str [, options])**          | check if the string is a valid [ISO 8601][ISO 8601] date. &lt;br/&gt;`options` is an object which defaults to `{ strict: false, strictSeparator: false }`. If `strict` is true, date strings with invalid dates like `2009-02-29` will be invalid. If `strictSeparator` is true, date strings with date and time separated by anything other than a T will be invalid.
**isISO15924(str)**               | check if the string is a valid [ISO 15924][ISO 15924] officially assigned script code.
**isISO31661Alpha2(str)**               | check if the string is a valid [ISO 3166-1 alpha-2][ISO 3166-1 alpha-2] officially assigned country code.
**isISO31661Alpha3(str)**               | check if the string is a valid [ISO 3166-1 alpha-3][ISO 3166-1 alpha-3] officially assigned country code.
**isISO31661Numeric(str)**              | check if the string is a valid [ISO 3166-1 numeric][ISO 3166-1 numeric] officially assigned country code.
**isISO4217(str)**                      | check if the string is a valid [ISO 4217][ISO 4217] officially assigned currency code.
**isISRC(str)**                         | check if the string is an [ISRC][ISRC].
**isISSN(str [, options])**             | check if the string is an [ISSN][ISSN].&lt;br/&gt;&lt;br/&gt;`options` is an object which defaults to `{ case_sensitive: false, require_hyphen: false }`. If `case_sensitive` is true, ISSNs with a lowercase `&#039;x&#039;` as the check digit are rejected.
**isJSON(str [, options])**             | check if the string is valid JSON (note: uses JSON.parse).&lt;br/&gt;&lt;br/&gt;`options` is an object which defaults to `{ allow_primitives: false }`. If `allow_primitives` is true, the primitives &#039;true&#039;, &#039;false&#039; and &#039;null&#039; are accepted as valid JSON values.
**isJWT(str)**                         | check if the string is valid JWT token.
**isLatLong(str [, options])**                      | check if the string is a valid latitude-longitude coordinate in the format `lat,long` or `lat, l

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[zereight/gitlab-mcp]]></title>
            <link>https://github.com/zereight/gitlab-mcp</link>
            <guid>https://github.com/zereight/gitlab-mcp</guid>
            <pubDate>Thu, 16 Oct 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[First gitlab mcp for you]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/zereight/gitlab-mcp">zereight/gitlab-mcp</a></h1>
            <p>First gitlab mcp for you</p>
            <p>Language: JavaScript</p>
            <p>Stars: 652</p>
            <p>Forks: 158</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre># GitLab MCP Server

[![Star History Chart](https://api.star-history.com/svg?repos=zereight/gitlab-mcp&amp;type=Date)](https://www.star-history.com/#zereight/gitlab-mcp&amp;Date)

## @zereight/mcp-gitlab

[![smithery badge](https://smithery.ai/badge/@zereight/gitlab-mcp)](https://smithery.ai/server/@zereight/gitlab-mcp)

GitLab MCP(Model Context Protocol) Server. **Includes bug fixes and improvements over the original GitLab MCP server.**

&lt;a href=&quot;https://glama.ai/mcp/servers/7jwbk4r6d7&quot;&gt;&lt;img width=&quot;380&quot; height=&quot;200&quot; src=&quot;https://glama.ai/mcp/servers/7jwbk4r6d7/badge&quot; alt=&quot;gitlab mcp MCP server&quot; /&gt;&lt;/a&gt;

## Usage

### Using with Claude App, Cline, Roo Code, Cursor, Kilo Code

When using with the Claude App, you need to set up your API key and URLs directly.

#### npx

```json
{
  &quot;mcpServers&quot;: {
    &quot;gitlab&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@zereight/mcp-gitlab&quot;],
      &quot;env&quot;: {
        &quot;GITLAB_PERSONAL_ACCESS_TOKEN&quot;: &quot;your_gitlab_token&quot;,
        &quot;GITLAB_API_URL&quot;: &quot;your_gitlab_api_url&quot;,
        &quot;GITLAB_PROJECT_ID&quot;: &quot;your_project_id&quot;, // Optional: default project
        &quot;GITLAB_ALLOWED_PROJECT_IDS&quot;: &quot;&quot;, // Optional: comma-separated list of allowed project IDs
        &quot;GITLAB_READ_ONLY_MODE&quot;: &quot;false&quot;,
        &quot;USE_GITLAB_WIKI&quot;: &quot;false&quot;, // use wiki api?
        &quot;USE_MILESTONE&quot;: &quot;false&quot;, // use milestone api?
        &quot;USE_PIPELINE&quot;: &quot;false&quot; // use pipeline api?
      }
    }
  }
}
```

#### vscode .vscode/mcp.json

```json
{
  &quot;inputs&quot;: [
    {
      &quot;type&quot;: &quot;promptString&quot;,
      &quot;id&quot;: &quot;gitlab-token&quot;,
      &quot;description&quot;: &quot;Gitlab Token to read API&quot;,
      &quot;password&quot;: true
    }
  ],
  &quot;servers&quot;: {
    &quot;GitLab-MCP&quot;: {
      &quot;type&quot;: &quot;stdio&quot;,
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@zereight/mcp-gitlab&quot;],
      &quot;env&quot;: {
        &quot;GITLAB_PERSONAL_ACCESS_TOKEN&quot;: &quot;${input:gitlab-token}&quot;,
        &quot;GITLAB_API_URL&quot;: &quot;your-fancy-gitlab-url&quot;,
        &quot;GITLAB_READ_ONLY_MODE&quot;: &quot;true&quot;,
        ...
      }
    }
  }
}
```

#### Docker

- stdio mcp.json

```json
{
  &quot;mcpServers&quot;: {
    &quot;gitlab&quot;: {
      &quot;command&quot;: &quot;docker&quot;,
      &quot;args&quot;: [
        &quot;run&quot;,
        &quot;-i&quot;,
        &quot;--rm&quot;,
        &quot;-e&quot;,
        &quot;GITLAB_PERSONAL_ACCESS_TOKEN&quot;,
        &quot;-e&quot;,
        &quot;GITLAB_API_URL&quot;,
        &quot;-e&quot;,
        &quot;GITLAB_READ_ONLY_MODE&quot;,
        &quot;-e&quot;,
        &quot;USE_GITLAB_WIKI&quot;,
        &quot;-e&quot;,
        &quot;USE_MILESTONE&quot;,
        &quot;-e&quot;,
        &quot;USE_PIPELINE&quot;,
        &quot;iwakitakuma/gitlab-mcp&quot;
      ],
      &quot;env&quot;: {
        &quot;GITLAB_PERSONAL_ACCESS_TOKEN&quot;: &quot;your_gitlab_token&quot;,
        &quot;GITLAB_API_URL&quot;: &quot;https://gitlab.com/api/v4&quot;, // Optional, for self-hosted GitLab
        &quot;GITLAB_READ_ONLY_MODE&quot;: &quot;false&quot;,
        &quot;USE_GITLAB_WIKI&quot;: &quot;true&quot;,
        &quot;USE_MILESTONE&quot;: &quot;true&quot;,
        &quot;USE_PIPELINE&quot;: &quot;true&quot;
      }
    }
  }
}
```

- sse

```shell
docker run -i --rm \
  -e GITLAB_PERSONAL_ACCESS_TOKEN=your_gitlab_token \
  -e GITLAB_API_URL=&quot;https://gitlab.com/api/v4&quot; \
  -e GITLAB_READ_ONLY_MODE=true \
  -e USE_GITLAB_WIKI=true \
  -e USE_MILESTONE=true \
  -e USE_PIPELINE=true \
  -e SSE=true \
  -p 3333:3002 \
  iwakitakuma/gitlab-mcp
```

```json
{
  &quot;mcpServers&quot;: {
    &quot;gitlab&quot;: {
      &quot;type&quot;: &quot;sse&quot;,
      &quot;url&quot;: &quot;http://localhost:3333/sse&quot;
    }
  }
}
```

- streamable-http

```shell
docker run -i --rm \
  -e GITLAB_PERSONAL_ACCESS_TOKEN=your_gitlab_token \
  -e GITLAB_API_URL=&quot;https://gitlab.com/api/v4&quot; \
  -e GITLAB_READ_ONLY_MODE=true \
  -e USE_GITLAB_WIKI=true \
  -e USE_MILESTONE=true \
  -e USE_PIPELINE=true \
  -e STREAMABLE_HTTP=true \
  -p 3333:3002 \
  iwakitakuma/gitlab-mcp
```

```json
{
  &quot;mcpServers&quot;: {
    &quot;gitlab&quot;: {
      &quot;type&quot;: &quot;streamable-http&quot;,
      &quot;url&quot;: &quot;http://localhost:3333/mcp&quot;
    }
  }
}
```

### Environment Variables

- `GITLAB_PERSONAL_ACCESS_TOKEN`: Your GitLab personal access token.
- `GITLAB_API_URL`: Your GitLab API URL. (Default: `https://gitlab.com/api/v4`)
- `GITLAB_PROJECT_ID`: Default project ID. If set, Overwrite this value when making an API request.
- `GITLAB_ALLOWED_PROJECT_IDS`: Optional comma-separated list of allowed project IDs. When set with a single value, acts as a default project (like the old &quot;lock&quot; mode). When set with multiple values, restricts access to only those projects. Examples:
  - Single value `123`: MCP server can only access project 123 and uses it as default
  - Multiple values `123,456,789`: MCP server can access projects 123, 456, and 789 but requires explicit project ID in requests
- `GITLAB_READ_ONLY_MODE`: When set to &#039;true&#039;, restricts the server to only expose read-only operations. Useful for enhanced security or when write access is not needed. Also useful for using with Cursor and it&#039;s 40 tool limit.
- `GITLAB_DENIED_TOOLS_REGEX`: When set as a regular expression, it excludes the matching tools.
- `USE_GITLAB_WIKI`: When set to &#039;true&#039;, enables the wiki-related tools (list_wiki_pages, get_wiki_page, create_wiki_page, update_wiki_page, delete_wiki_page). By default, wiki features are disabled.
- `USE_MILESTONE`: When set to &#039;true&#039;, enables the milestone-related tools (list_milestones, get_milestone, create_milestone, edit_milestone, delete_milestone, get_milestone_issue, get_milestone_merge_requests, promote_milestone, get_milestone_burndown_events). By default, milestone features are disabled.
- `USE_PIPELINE`: When set to &#039;true&#039;, enables the pipeline-related tools (list_pipelines, get_pipeline, list_pipeline_jobs, list_pipeline_trigger_jobs, get_pipeline_job, get_pipeline_job_output, create_pipeline, retry_pipeline, cancel_pipeline, play_pipeline_job, retry_pipeline_job, cancel_pipeline_job). By default, pipeline features are disabled.
- `GITLAB_AUTH_COOKIE_PATH`: Path to an authentication cookie file for GitLab instances that require cookie-based authentication. When provided, the cookie will be included in all GitLab API requests.
- `SSE`: When set to &#039;true&#039;, enables the Server-Sent Events transport.
- `STREAMABLE_HTTP`: When set to &#039;true&#039;, enables the Streamable HTTP transport. If both **SSE** and **STREAMABLE_HTTP** are set to &#039;true&#039;, the server will prioritize Streamable HTTP over SSE transport.
- `GITLAB_COMMIT_FILES_PER_PAGE`: The number of files per page that GitLab returns for commit diffs. This value should match the server-side GitLab setting. Adjust this if your GitLab instance uses a custom per-page value for commit diffs.

## Tools üõ†Ô∏è

&lt;details&gt;
&lt;summary&gt;Click to expand&lt;/summary&gt;

&lt;!-- TOOLS-START --&gt;

1. `merge_merge_request` - Merge a merge request in a GitLab project
2. `create_or_update_file` - Create or update a single file in a GitLab project
3. `search_repositories` - Search for GitLab projects
4. `create_repository` - Create a new GitLab project
5. `get_file_contents` - Get the contents of a file or directory from a GitLab project
6. `push_files` - Push multiple files to a GitLab project in a single commit
7. `create_issue` - Create a new issue in a GitLab project
8. `create_merge_request` - Create a new merge request in a GitLab project
9. `fork_repository` - Fork a GitLab project to your account or specified namespace
10. `create_branch` - Create a new branch in a GitLab project
11. `get_merge_request` - Get details of a merge request (Either mergeRequestIid or branchName must be provided)
12. `get_merge_request_diffs` - Get the changes/diffs of a merge request (Either mergeRequestIid or branchName must be provided)
13. `list_merge_request_diffs` - List merge request diffs with pagination support (Either mergeRequestIid or branchName must be provided)
14. `get_branch_diffs` - Get the changes/diffs between two branches or commits in a GitLab project
15. `update_merge_request` - Update a merge request (Either mergeRequestIid or branchName must be provided)
16. `create_note` - Create a new note (comment) to an issue or merge request
17. `create_merge_request_thread` - Create a new thread on a merge request
18. `mr_discussions` - List discussion items for a merge request
19. `update_merge_request_note` - Modify an existing merge request thread note
20. `create_merge_request_note` - Add a new note to an existing merge request thread
21. `get_draft_note` - Get a single draft note from a merge request
22. `list_draft_notes` - List draft notes for a merge request
23. `create_draft_note` - Create a draft note for a merge request
24. `update_draft_note` - Update an existing draft note
25. `delete_draft_note` - Delete a draft note
26. `publish_draft_note` - Publish a single draft note
27. `bulk_publish_draft_notes` - Publish all draft notes for a merge request
28. `update_issue_note` - Modify an existing issue thread note
29. `create_issue_note` - Add a new note to an existing issue thread
30. `list_issues` - List issues (default: created by current user only; use scope=&#039;all&#039; for all accessible issues)
31. `my_issues` - List issues assigned to the authenticated user (defaults to open issues)
32. `get_issue` - Get details of a specific issue in a GitLab project
33. `update_issue` - Update an issue in a GitLab project
34. `delete_issue` - Delete an issue from a GitLab project
35. `list_issue_links` - List all issue links for a specific issue
36. `list_issue_discussions` - List discussions for an issue in a GitLab project
37. `get_issue_link` - Get a specific issue link
38. `create_issue_link` - Create an issue link between two issues
39. `delete_issue_link` - Delete an issue link
40. `list_namespaces` - List all namespaces available to the current user
41. `get_namespace` - Get details of a namespace by ID or path
42. `verify_namespace` - Verify if a namespace path exists
43. `get_project` - Get details of a specific project
44. `list_projects` - List projects accessible by the current user
45. `list_project_members` - List members of a GitLab project
46. `list_labels` - List labels for a project
47. `get_label` - Get a single label from a project
48. `create_label` - Create a new label in a project
49. `update_label` - Update an existing label in a project
50. `delete_label` - Delete a label from a project
51. `list_group_projects` - List projects in a GitLab group with filtering options
52. `list_wiki_pages` - List wiki pages in a GitLab project
53. `get_wiki_page` - Get details of a specific wiki page
54. `create_wiki_page` - Create a new wiki page in a GitLab project
55. `update_wiki_page` - Update an existing wiki page in a GitLab project
56. `delete_wiki_page` - Delete a wiki page from a GitLab project
57. `get_repository_tree` - Get the repository tree for a GitLab project (list files and directories)
58. `list_pipelines` - List pipelines in a GitLab project with filtering options
59. `get_pipeline` - Get details of a specific pipeline in a GitLab project
60. `list_pipeline_jobs` - List all jobs in a specific pipeline
61. `list_pipeline_trigger_jobs` - List all trigger jobs (bridges) in a specific pipeline that trigger downstream pipelines
62. `get_pipeline_job` - Get details of a GitLab pipeline job number
63. `get_pipeline_job_output` - Get the output/trace of a GitLab pipeline job with optional pagination to limit context window usage
64. `create_pipeline` - Create a new pipeline for a branch or tag
65. `retry_pipeline` - Retry a failed or canceled pipeline
66. `cancel_pipeline` - Cancel a running pipeline
67. `play_pipeline_job` - Run a manual pipeline job
68. `retry_pipeline_job` - Retry a failed or canceled pipeline job
69. `cancel_pipeline_job` - Cancel a running pipeline job
70. `list_merge_requests` - List merge requests in a GitLab project with filtering options
71. `list_milestones` - List milestones in a GitLab project with filtering options
72. `get_milestone` - Get details of a specific milestone
73. `create_milestone` - Create a new milestone in a GitLab project
74. `edit_milestone` - Edit an existing milestone in a GitLab project
75. `delete_milestone` - Delete a milestone from a GitLab project
76. `get_milestone_issue` - Get issues associated with a specific milestone
77. `get_milestone_merge_requests` - Get merge requests associated with a specific milestone
78. `promote_milestone` - Promote a milestone to the next stage
79. `get_milestone_burndown_events` - Get burndown events for a specific milestone
80. `get_users` - Get GitLab user details by usernames
81. `list_commits` - List repository commits with filtering options
82. `get_commit` - Get details of a specific commit
83. `get_commit_diff` - Get changes/diffs of a specific commit
84. `list_group_iterations` - List group iterations with filtering options
85. `upload_markdown` - Upload a file to a GitLab project for use in markdown content
86. `download_attachment` - Download an uploaded file from a GitLab project by secret and filename
87. `list_events` - List all events for the currently authenticated user
88. `get_project_events` - List all visible events for a specified project
&lt;!-- TOOLS-END --&gt;

&lt;/details&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[electerm/electerm]]></title>
            <link>https://github.com/electerm/electerm</link>
            <guid>https://github.com/electerm/electerm</guid>
            <pubDate>Thu, 16 Oct 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[üìªTerminal/ssh/sftp/ftp/telnet/serialport/RDP/VNC client(linux, mac, win)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/electerm/electerm">electerm/electerm</a></h1>
            <p>üìªTerminal/ssh/sftp/ftp/telnet/serialport/RDP/VNC client(linux, mac, win)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 13,116</p>
            <p>Forks: 1,070</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot; style=&quot;padding-top: 60px;padding-bottom: 40px;&quot;&gt;
    &lt;a href=&quot;https://electerm.html5beta.com&quot;&gt;
        &lt;img src=&quot;https://github.com/electerm/electerm-resource/raw/master/static/images/electerm.png&quot;, alt=&quot;&quot; /&gt;
    &lt;/a&gt;
&lt;/h1&gt;

[‰∏≠Êñá](README_cn.md)

# electerm [![Tweet](https://img.shields.io/twitter/url/http/shields.io.svg?style=social)](https://twitter.com/intent/tweet?text=Open%20sourced%20terminal%2Fssh%2Fsftp%20client(linux%2C%20mac%2C%20win)&amp;url=https%3A%2F%2Fgithub.com%2Felecterm%2Felecterm&amp;hashtags=electerm,ssh,terminal,sftp)

[![GitHub version](https://img.shields.io/github/release/electerm/electerm/all.svg)](https://github.com/electerm/electerm/releases)
[![Build Status](https://github.com/electerm/electerm/actions/workflows/mac-test-1.yml/badge.svg)](https://github.com/electerm/electerm/actions)
[![license](https://img.shields.io/github/license/electerm/electerm.svg)](https://github.com/electerm/electerm/blob/master/LICENSE)
[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)
[![Get it from the Snap Store](https://img.shields.io/badge/Snap-Store-green)](https://snapcraft.io/electerm)
[![Get it from the Microsoft Store](https://img.shields.io/badge/Microsoft-Store-blue)](https://www.microsoft.com/store/apps/9NCN7272GTFF)
[![Debian Repository](https://img.shields.io/badge/Debian-Repository-red)](https://electerm-repos.html5beta.com/deb)
[![GitHub Sponsors](https://img.shields.io/github/sponsors/electerm?label=Sponsors)](https://github.com/sponsors/electerm)

[![DigitalOcean Referral Badge](https://web-platforms.sfo2.cdn.digitaloceanspaces.com/WWW/Badge%202.svg)](https://www.digitalocean.com/?refcode=c10bcb28b846&amp;utm_campaign=Referral_Invite&amp;utm_medium=Referral_Program&amp;utm_source=badge)

[![Vercel OSS Program](https://vercel.com/oss/program-badge.svg)](https://vercel.com/oss)

Open-sourced terminal/ssh/telnet/serialport/RDP/VNC/sftp/ftp client(linux, mac, win).

Powered by [manate](https://github.com/tylerlong/manate)

For experienced developers, you may try the web app version running in browser(including mobile device): [electerm-web](https://github.com/electerm/electerm-web) or [docker image for electerm-web](https://github.com/electerm/electerm-web-docker)

Online demo: [https://electerm-demo.html5beta.com](https://electerm-demo.html5beta.com)

&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://github.com/electerm/electerm-resource/raw/master/static/images/electerm.gif&quot;, alt=&quot;&quot; /&gt;
&lt;/div&gt;

## Features

- Works as a terminal/file manager or ssh/sftp/ftp/telnet/serialport/RDP/VNC client
- Global hotkey to toggle window visibility (similar to guake, default is `ctrl + 2`)
- Multi platform(linux, mac, win)
- üá∫üá∏ üá®üá≥ üáßüá∑ üá∑üá∫ üá™üá∏ üá´üá∑ üáπüá∑ üá≠üá∞ üáØüáµ üá∏üá¶ üá©üá™ üá∞üá∑ üáÆüá© üáµüá± Multi-language support([electerm-locales](https://github.com/electerm/electerm-locales), contributions/fixes welcome)
- Double click to directly edit (small) remote files.
- Auth with publicKey + password.
- Support Zmodem(rz, sz).
- Support ssh tunnel.
- Support [Trzsz](https://github.com/trzsz/trzsz)(trz/tsz), similar to rz/sz, and compatible with tmux.
- Transparent window(Mac, win).
- Terminal background image.
- Global/session proxy.
- Quick commands
- UI/terminal theme
- Sync bookmarks/themes/quick commands to github/gitee secret gist
- Quick input to one or all terminals.
- AI assistant integration (supporting [DeepSeek](https://www.deepseek.com), OpenAI, and other AI APIs) to help with command suggestions, script writing, and explaining selected terminal content
- Command line usage: check [wiki](https://github.com/electerm/electerm/wiki/Command-line-usage)

## Download

- [Homepage](https://electerm.html5beta.com)
- [sourceforge](https://sourceforge.net/projects/electerm.mirror/files/)
- [github releases](https://github.com/electerm/electerm/releases)

## Install

- For Mac user: `brew install --cask electerm`
- With snap: `sudo snap install electerm --classic`
- For some Linux distribution, you can find it from OS default App store(Ubuntu, Deepin, Mint...).
- For some linux OS, the `rpm`, `deb`, or `snap` release may not work, you can try the `tar.gz` or `.appImage` release.
- For Windows users, you can install it from [windows store](https://www.microsoft.com/store/apps/9NCN7272GTFF), command-line installer [winget](https://github.com/microsoft/winget-cli) and [scoop](https://github.com/lukesampson/scoop) is also recommended:

```powershell
# winget https://github.com/microsoft/winget-cli
winget install electerm.electerm

# scoop https://github.com/lukesampson/scoop
scoop bucket add dorado https://github.com/chawyehsu/dorado
scoop install dorado/electerm
```

- Install from Debian repository (for Debian/Ubuntu-based systems) with `apt` command

Check [https://electerm-repos.html5beta.com/deb](https://electerm-repos.html5beta.com/deb)

- Install from npm

```bash
npm i -g electerm

# After installation, it will immediately open for windows and linux,
# For macOS, it will open the drag to install panel

```

## Upgrade

- Auto upgrade: When a new version is released, you will get an upgrade notification after you start electerm again. You can then click the upgrade button to upgrade.
- Download: Just download the latest edition, reinstall.
- Npm: If you install from npm, just run `npm i -g electerm` again.
- If use Snap or some other distribution system, these systems may provide upgrades.

## Themes

- https://github.com/mbadolato/iTerm2-Color-Schemes/tree/master/electerm
- https://github.com/Hope-IT-Works/electerm-theme-termius

## Known issues

[https://github.com/electerm/electerm/wiki/Know-issues](https://github.com/electerm/electerm/wiki/Know-issues)

## Troubleshoot

[https://github.com/electerm/electerm/wiki/Troubleshoot](https://github.com/electerm/electerm/wiki/Troubleshoot)

## Discussion

[Discussion board](https://github.com/electerm/electerm/discussions)

![electerm-wechat-group-qr.jpg](https://electerm.html5beta.com/electerm-wechat-group-qr.jpg)

## Support

Would love to hear from you, please tell me what you think, [submit an issue](https://github.com/electerm/electerm/issues), [Start a new discussion](https://github.com/electerm/electerm/discussions/new), [create/fix language files](https://github.com/electerm/electerm-locales) or create pull requests, all welcome.

## Sponsor this project

github sponsor

[https://github.com/sponsors/electerm](https://github.com/sponsors/electerm)

kofi

[https://ko-fi.com/zhaoxudong](https://ko-fi.com/zhaoxudong)

wechat donate

[![wechat donate](https://electerm.html5beta.com/electerm-wechat-donate.png)](https://github.com/electerm)

## Dev

```bash
# tested in ubuntu20.04+/mac os 10.13+ only
# needs nodejs/npm, suggest using fnm to install nodejs/npm
# with nodejs 22.x

git clone git@github.com:electerm/electerm.git
cd electerm
npm i

# start vite dev server, requires port 5570
npm start

# in a separate terminal session run app
npm run app

# code format check
npm run lint

# code format fix
npm run fix
```

## Test

```bash
npm run b
npm run prepare-test
cp .sample.env .env

# edit .env, fill your test host/username/password, may only works in mac OS
npm run test
```

## Test build

```bash
# Tested only in ubuntu 16.04 x64+
# Install yarn first(to do yarn autoclean)
# See https://yarnpkg.com/en/docs/install

# Build linux only with -l
npm i
npm run b
npm run pb
./node_modules/.bin/electron-builder --linux tar.gz
# or replace tar.gz to rpm/deb/AppImage
# check dist/ folder

# build for linux arm/
./node_modules/.bin/electron-builder --linux --arm64
```

## Video guides

- [bilibili](https://space.bilibili.com/14001525/channel/series?sid=5461229&amp;spm_id_from=333.788.0.0)

## Change log

Visit [Releases](https://github.com/electerm/electerm/releases).

## License

MIT

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=electerm/electerm&amp;type=Date)](https://www.star-history.com/#electerm/electerm&amp;Date)</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[airbnb/javascript]]></title>
            <link>https://github.com/airbnb/javascript</link>
            <guid>https://github.com/airbnb/javascript</guid>
            <pubDate>Thu, 16 Oct 2025 00:04:47 GMT</pubDate>
            <description><![CDATA[JavaScript Style Guide]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/airbnb/javascript">airbnb/javascript</a></h1>
            <p>JavaScript Style Guide</p>
            <p>Language: JavaScript</p>
            <p>Stars: 147,637</p>
            <p>Forks: 26,794</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre># Airbnb JavaScript Style Guide() {

*A mostly reasonable approach to JavaScript*

&gt; **Note**: this guide assumes you are using [Babel](https://babeljs.io), and requires that you use [babel-preset-airbnb](https://npmjs.com/babel-preset-airbnb) or the equivalent. It also assumes you are installing shims/polyfills in your app, with [airbnb-browser-shims](https://npmjs.com/airbnb-browser-shims) or the equivalent.

[![Downloads](https://img.shields.io/npm/dm/eslint-config-airbnb.svg)](https://www.npmjs.com/package/eslint-config-airbnb)
[![Downloads](https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg)](https://www.npmjs.com/package/eslint-config-airbnb-base)
[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/airbnb/javascript?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge)

This guide is available in other languages too. See [Translation](#translation)

Other Style Guides

  - [ES5 (Deprecated)](https://github.com/airbnb/javascript/tree/es5-deprecated/es5)
  - [React](react/)
  - [CSS-in-JavaScript](css-in-javascript/)
  - [CSS &amp; Sass](https://github.com/airbnb/css)
  - [Ruby](https://github.com/airbnb/ruby)

## Table of Contents

  1. [Types](#types)
  1. [References](#references)
  1. [Objects](#objects)
  1. [Arrays](#arrays)
  1. [Destructuring](#destructuring)
  1. [Strings](#strings)
  1. [Functions](#functions)
  1. [Arrow Functions](#arrow-functions)
  1. [Classes &amp; Constructors](#classes--constructors)
  1. [Modules](#modules)
  1. [Iterators and Generators](#iterators-and-generators)
  1. [Properties](#properties)
  1. [Variables](#variables)
  1. [Hoisting](#hoisting)
  1. [Comparison Operators &amp; Equality](#comparison-operators--equality)
  1. [Blocks](#blocks)
  1. [Control Statements](#control-statements)
  1. [Comments](#comments)
  1. [Whitespace](#whitespace)
  1. [Commas](#commas)
  1. [Semicolons](#semicolons)
  1. [Type Casting &amp; Coercion](#type-casting--coercion)
  1. [Naming Conventions](#naming-conventions)
  1. [Accessors](#accessors)
  1. [Events](#events)
  1. [jQuery](#jquery)
  1. [ECMAScript 5 Compatibility](#ecmascript-5-compatibility)
  1. [ECMAScript 6+ (ES 2015+) Styles](#ecmascript-6-es-2015-styles)
  1. [Standard Library](#standard-library)
  1. [Testing](#testing)
  1. [Performance](#performance)
  1. [Resources](#resources)
  1. [In the Wild](#in-the-wild)
  1. [Translation](#translation)
  1. [The JavaScript Style Guide Guide](#the-javascript-style-guide-guide)
  1. [Chat With Us About JavaScript](#chat-with-us-about-javascript)
  1. [Contributors](#contributors)
  1. [License](#license)
  1. [Amendments](#amendments)

## Types

  &lt;a name=&quot;types--primitives&quot;&gt;&lt;/a&gt;&lt;a name=&quot;1.1&quot;&gt;&lt;/a&gt;
  - [1.1](#types--primitives) **Primitives**: When you access a primitive type you work directly on its value.

    - `string`
    - `number`
    - `boolean`
    - `null`
    - `undefined`
    - `symbol`
    - `bigint`

    &lt;br /&gt;

    ```javascript
    const foo = 1;
    let bar = foo;

    bar = 9;

    console.log(foo, bar); // =&gt; 1, 9
    ```

    - Symbols and BigInts cannot be faithfully polyfilled, so they should not be used when targeting browsers/environments that don‚Äôt support them natively.

  &lt;a name=&quot;types--complex&quot;&gt;&lt;/a&gt;&lt;a name=&quot;1.2&quot;&gt;&lt;/a&gt;
  - [1.2](#types--complex)  **Complex**: When you access a complex type you work on a reference to its value.

    - `object`
    - `array`
    - `function`

    &lt;br /&gt;

    ```javascript
    const foo = [1, 2];
    const bar = foo;

    bar[0] = 9;

    console.log(foo[0], bar[0]); // =&gt; 9, 9
    ```

**[‚¨Ü back to top](#table-of-contents)**

## References

  &lt;a name=&quot;references--prefer-const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.1&quot;&gt;&lt;/a&gt;
  - [2.1](#references--prefer-const) Use `const` for all of your references; avoid using `var`. eslint: [`prefer-const`](https://eslint.org/docs/rules/prefer-const), [`no-const-assign`](https://eslint.org/docs/rules/no-const-assign)

    &gt; Why? This ensures that you can‚Äôt reassign your references, which can lead to bugs and difficult to comprehend code.

    ```javascript
    // bad
    var a = 1;
    var b = 2;

    // good
    const a = 1;
    const b = 2;
    ```

  &lt;a name=&quot;references--disallow-var&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.2&quot;&gt;&lt;/a&gt;
  - [2.2](#references--disallow-var) If you must reassign references, use `let` instead of `var`. eslint: [`no-var`](https://eslint.org/docs/rules/no-var)

    &gt; Why? `let` is block-scoped rather than function-scoped like `var`.

    ```javascript
    // bad
    var count = 1;
    if (true) {
      count += 1;
    }

    // good, use the let.
    let count = 1;
    if (true) {
      count += 1;
    }
    ```

  &lt;a name=&quot;references--block-scope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.3&quot;&gt;&lt;/a&gt;
  - [2.3](#references--block-scope) Note that both `let` and `const` are block-scoped, whereas `var` is function-scoped.

    ```javascript
    // const and let only exist in the blocks they are defined in.
    {
      let a = 1;
      const b = 1;
      var c = 1;
    }
    console.log(a); // ReferenceError
    console.log(b); // ReferenceError
    console.log(c); // Prints 1
    ```

    In the above code, you can see that referencing `a` and `b` will produce a ReferenceError, while `c` contains the number. This is because `a` and `b` are block scoped, while `c` is scoped to the containing function.

**[‚¨Ü back to top](#table-of-contents)**

## Objects

  &lt;a name=&quot;objects--no-new&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.1&quot;&gt;&lt;/a&gt;
  - [3.1](#objects--no-new) Use the literal syntax for object creation. eslint: [`no-new-object`](https://eslint.org/docs/rules/no-new-object)

    ```javascript
    // bad
    const item = new Object();

    // good
    const item = {};
    ```

  &lt;a name=&quot;es6-computed-properties&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.4&quot;&gt;&lt;/a&gt;
  - [3.2](#es6-computed-properties) Use computed property names when creating objects with dynamic property names.

    &gt; Why? They allow you to define all the properties of an object in one place.

    ```javascript

    function getKey(k) {
      return `a key named ${k}`;
    }

    // bad
    const obj = {
      id: 5,
      name: &#039;San Francisco&#039;,
    };
    obj[getKey(&#039;enabled&#039;)] = true;

    // good
    const obj = {
      id: 5,
      name: &#039;San Francisco&#039;,
      [getKey(&#039;enabled&#039;)]: true,
    };
    ```

  &lt;a name=&quot;es6-object-shorthand&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.5&quot;&gt;&lt;/a&gt;
  - [3.3](#es6-object-shorthand) Use object method shorthand. eslint: [`object-shorthand`](https://eslint.org/docs/rules/object-shorthand)

    ```javascript
    // bad
    const atom = {
      value: 1,

      addValue: function (value) {
        return atom.value + value;
      },
    };

    // good
    const atom = {
      value: 1,

      addValue(value) {
        return atom.value + value;
      },
    };
    ```

  &lt;a name=&quot;es6-object-concise&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.6&quot;&gt;&lt;/a&gt;
  - [3.4](#es6-object-concise) Use property value shorthand. eslint: [`object-shorthand`](https://eslint.org/docs/rules/object-shorthand)

    &gt; Why? It is shorter and descriptive.

    ```javascript
    const lukeSkywalker = &#039;Luke Skywalker&#039;;

    // bad
    const obj = {
      lukeSkywalker: lukeSkywalker,
    };

    // good
    const obj = {
      lukeSkywalker,
    };
    ```

  &lt;a name=&quot;objects--grouped-shorthand&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.7&quot;&gt;&lt;/a&gt;
  - [3.5](#objects--grouped-shorthand) Group your shorthand properties at the beginning of your object declaration.

    &gt; Why? It‚Äôs easier to tell which properties are using the shorthand.

    ```javascript
    const anakinSkywalker = &#039;Anakin Skywalker&#039;;
    const lukeSkywalker = &#039;Luke Skywalker&#039;;

    // bad
    const obj = {
      episodeOne: 1,
      twoJediWalkIntoACantina: 2,
      lukeSkywalker,
      episodeThree: 3,
      mayTheFourth: 4,
      anakinSkywalker,
    };

    // good
    const obj = {
      lukeSkywalker,
      anakinSkywalker,
      episodeOne: 1,
      twoJediWalkIntoACantina: 2,
      episodeThree: 3,
      mayTheFourth: 4,
    };
    ```

  &lt;a name=&quot;objects--quoted-props&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.8&quot;&gt;&lt;/a&gt;
  - [3.6](#objects--quoted-props) Only quote properties that are invalid identifiers. eslint: [`quote-props`](https://eslint.org/docs/rules/quote-props)

    &gt; Why? In general we consider it subjectively easier to read. It improves syntax highlighting, and is also more easily optimized by many JS engines.

    ```javascript
    // bad
    const bad = {
      &#039;foo&#039;: 3,
      &#039;bar&#039;: 4,
      &#039;data-blah&#039;: 5,
    };

    // good
    const good = {
      foo: 3,
      bar: 4,
      &#039;data-blah&#039;: 5,
    };
    ```

  &lt;a name=&quot;objects--prototype-builtins&quot;&gt;&lt;/a&gt;
  - [3.7](#objects--prototype-builtins) Do not call `Object.prototype` methods directly, such as `hasOwnProperty`, `propertyIsEnumerable`, and `isPrototypeOf`. eslint: [`no-prototype-builtins`](https://eslint.org/docs/rules/no-prototype-builtins)

    &gt; Why? These methods may be shadowed by properties on the object in question - consider `{ hasOwnProperty: false }` - or, the object may be a null object (`Object.create(null)`). In modern browsers that support ES2022, or with a polyfill such as &lt;https://npmjs.com/object.hasown&gt;, `Object.hasOwn` can also be used as an alternative to `Object.prototype.hasOwnProperty.call`.

    ```javascript
    // bad
    console.log(object.hasOwnProperty(key));

    // good
    console.log(Object.prototype.hasOwnProperty.call(object, key));

    // better
    const has = Object.prototype.hasOwnProperty; // cache the lookup once, in module scope.
    console.log(has.call(object, key));

    // best
    console.log(Object.hasOwn(object, key)); // only supported in browsers that support ES2022

    /* or */
    import has from &#039;has&#039;; // https://www.npmjs.com/package/has
    console.log(has(object, key));
    /* or */
    console.log(Object.hasOwn(object, key)); // https://www.npmjs.com/package/object.hasown
    ```

  &lt;a name=&quot;objects--rest-spread&quot;&gt;&lt;/a&gt;
  - [3.8](#objects--rest-spread) Prefer the object spread syntax over [`Object.assign`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign) to shallow-copy objects. Use the object rest parameter syntax to get a new object with certain properties omitted. eslint: [`prefer-object-spread`](https://eslint.org/docs/rules/prefer-object-spread)

    ```javascript
    // very bad
    const original = { a: 1, b: 2 };
    const copy = Object.assign(original, { c: 3 }); // this mutates `original` ‡≤†_‡≤†
    delete copy.a; // so does this

    // bad
    const original = { a: 1, b: 2 };
    const copy = Object.assign({}, original, { c: 3 }); // copy =&gt; { a: 1, b: 2, c: 3 }

    // good
    const original = { a: 1, b: 2 };
    const copy = { ...original, c: 3 }; // copy =&gt; { a: 1, b: 2, c: 3 }

    const { a, ...noA } = copy; // noA =&gt; { b: 2, c: 3 }
    ```

**[‚¨Ü back to top](#table-of-contents)**

## Arrays

  &lt;a name=&quot;arrays--literals&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.1&quot;&gt;&lt;/a&gt;
  - [4.1](#arrays--literals) Use the literal syntax for array creation. eslint: [`no-array-constructor`](https://eslint.org/docs/rules/no-array-constructor)

    ```javascript
    // bad
    const items = new Array();

    // good
    const items = [];
    ```

  &lt;a name=&quot;arrays--push&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.2&quot;&gt;&lt;/a&gt;
  - [4.2](#arrays--push) Use [Array#push](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push) instead of direct assignment to add items to an array.

    ```javascript
    const someStack = [];

    // bad
    someStack[someStack.length] = &#039;abracadabra&#039;;

    // good
    someStack.push(&#039;abracadabra&#039;);
    ```

  &lt;a name=&quot;es6-array-spreads&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.3&quot;&gt;&lt;/a&gt;
  - [4.3](#es6-array-spreads) Use array spreads `...` to copy arrays.

    ```javascript
    // bad
    const len = items.length;
    const itemsCopy = [];
    let i;

    for (i = 0; i &lt; len; i += 1) {
      itemsCopy[i] = items[i];
    }

    // good
    const itemsCopy = [...items];
    ```

  &lt;a name=&quot;arrays--from&quot;&gt;&lt;/a&gt;
  &lt;a name=&quot;arrays--from-iterable&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.4&quot;&gt;&lt;/a&gt;
  - [4.4](#arrays--from-iterable) To convert an iterable object to an array, use spreads `...` instead of [`Array.from`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from)

    ```javascript
    const foo = document.querySelectorAll(&#039;.foo&#039;);

    // good
    const nodes = Array.from(foo);

    // best
    const nodes = [...foo];
    ```

  &lt;a name=&quot;arrays--from-array-like&quot;&gt;&lt;/a&gt;
  - [4.5](#arrays--from-array-like) Use [`Array.from`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from) for converting an array-like object to an array.

    ```javascript
    const arrLike = { 0: &#039;foo&#039;, 1: &#039;bar&#039;, 2: &#039;baz&#039;, length: 3 };

    // bad
    const arr = Array.prototype.slice.call(arrLike);

    // good
    const arr = Array.from(arrLike);
    ```

  &lt;a name=&quot;arrays--mapping&quot;&gt;&lt;/a&gt;
  - [4.6](#arrays--mapping) Use [`Array.from`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from) instead of spread `...` for mapping over iterables, because it avoids creating an intermediate array.

    ```javascript
    // bad
    const baz = [...foo].map(bar);

    // good
    const baz = Array.from(foo, bar);
    ```

  &lt;a name=&quot;arrays--callback-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.5&quot;&gt;&lt;/a&gt;
  - [4.7](#arrays--callback-return) Use return statements in array method callbacks. It‚Äôs ok to omit the return if the function body consists of a single statement returning an expression without side effects, following [8.2](#arrows--implicit-return). eslint: [`array-callback-return`](https://eslint.org/docs/rules/array-callback-return)

    ```javascript
    // good
    [1, 2, 3].map((x) =&gt; {
      const y = x + 1;
      return x * y;
    });

    // good
    [1, 2, 3].map((x) =&gt; x + 1);

    // bad - no returned value means `acc` becomes undefined after the first iteration
    [[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&gt; {
      const flatten = acc.concat(item);
    });

    // good
    [[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&gt; {
      const flatten = acc.concat(item);
      return flatten;
    });

    // bad
    inbox.filter((msg) =&gt; {
      const { subject, author } = msg;
      if (subject === &#039;Mockingbird&#039;) {
        return author === &#039;Harper Lee&#039;;
      } else {
        return false;
      }
    });

    // good
    inbox.filter((msg) =&gt; {
      const { subject, author } = msg;
      if (subject === &#039;Mockingbird&#039;) {
        return author === &#039;Harper Lee&#039;;
      }

      return false;
    });
    ```

  &lt;a name=&quot;arrays--bracket-newline&quot;&gt;&lt;/a&gt;
  - [4.8](#arrays--bracket-newline) Use line breaks after opening array brackets and before closing array brackets, if an array has multiple lines

    ```javascript
    // bad
    const arr = [
      [0, 1], [2, 3], [4, 5],
    ];

    const objectInArray = [{
      id: 1,
    }, {
      id: 2,
    }];

    const numberInArray = [
      1, 2,
    ];

    // good
    const arr = [[0, 1], [2, 3], [4, 5]];

    const objectInArray = [
      {
        id: 1,
      },
      {
        id: 2,
      },
    ];

    const numberInArray = [
      1,
      2,
    ];
    ```

**[‚¨Ü back to top](#table-of-contents)**

## Destructuring

  &lt;a name=&quot;destructuring--object&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.1&quot;&gt;&lt;/a&gt;
  - [5.1](#destructuring--object) Use object destructuring when accessing and using multiple properties of an object. eslint: [`prefer-destructuring`](https://eslint.org/docs/rules/prefer-destructuring)

    &gt; Why? Destructuring saves you from creating temporary references for those properties, and from repetitive access of the object. Repeating object access creates more repetitive code, requires more reading, and creates more opportunities for mistakes. Destructuring objects also provides a single site of definition of the object structure that is used in the block, rather than requiring reading the entire block to determine what is used.

    ```javascript
    // bad
    function getFullName(user) {
      const firstName = user.firstName;
      const lastName = user.lastName;

      return `${firstName} ${lastName}`;
    }

    // good
    function getFullName(user) {
      const { firstName, lastName } = user;
      return `${firstName} ${lastName}`;
    }

    // best
    function getFullName({ firstName, lastName }) {
      return `${firstName} ${lastName}`;
    }
    ```

  &lt;a name=&quot;destructuring--array&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.2&quot;&gt;&lt;/a&gt;
  - [5.2](#destructuring--array) Use array destructuring. eslint: [`prefer-destructuring`](https://eslint.org/docs/rules/prefer-destructuring)

    ```javascript
    const arr = [1, 2, 3, 4];

    // bad
    const first = arr[0];
    const second = arr[1];

    // good
    const [first, second] = arr;
    ```

  &lt;a name=&quot;destructuring--object-over-array&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.3&quot;&gt;&lt;/a&gt;
  - [5.3](#destructuring--object-over-array) Use object destructuring for multiple return values, not array destructuring.

    &gt; Why? You can add new properties over time or change the order of things without breaking call sites.

    ```javascript
    // bad
    function processInput(input) {
      // then a miracle occurs
      return [left, right, top, bottom];
    }

    // the caller needs to think about the order of return data
    const [left, __, top] = processInput(input);

    // good
    function processInput(input) {
      // then a miracle occurs
      return { left, right, top, bottom };
    }

    // the caller selects only the data they need
    const { left, top } = processInput(input);
    ```

**[‚¨Ü back to top](#table-of-contents)**

## Strings

  &lt;a name=&quot;strings--quotes&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.1&quot;&gt;&lt;/a&gt;
  - [6.1](#strings--quotes) Use single quotes `&#039;&#039;` for strings. eslint: [`quotes`](https://eslint.org/docs/rules/quotes)

    ```javascript
    // bad
    const name = &quot;Capt. Janeway&quot;;

    // bad - template literals should contain interpolation or newlines
    const name = `Capt. Janeway`;

    // good
    const name = &#039;Capt. Janeway&#039;;
    ```

  &lt;a name=&quot;strings--line-length&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.2&quot;&gt;&lt;/a&gt;
  - [6.2](#strings--line-length) Strings that cause the line to go over 100 characters should not be written across multiple lines using string concatenation.

    &gt; Why? Broken strings are painful to work with and make code less searchable.

    ```javascript
    // bad
    const errorMessage = &#039;This is a super long error that was thrown because \
    of Batman. When you stop to think about how Batman had anything to do \
    with this, you would get nowhere \
    fast.&#039;;

    // bad
    const errorMessage = &#039;This is a super long error that was thrown because &#039; +
      &#039;of Batman. When you stop to think about how Batman had anything to do &#039; +
      &#039;with this, you would get nowhere fast.&#039;;

    // good
    const errorMessage = &#039;This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.&#039;;
    ```

  &lt;a name=&quot;es6-template-literals&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.4&quot;&gt;&lt;/a&gt;
  - [6.3](#es6-template-literals) When programmatically building up strings, use template strings instead of concatenation. eslint: [`prefer-template`](https://eslint.org/docs/rules/prefer-template) [`template-curly-spacing`](https://eslint.org/docs/rules/template-curly-spacing)

    &gt; Why? Template strings give you a readable, concise syntax with proper newlines and string interpolation features.

    ```javascript
    // bad
    function sayHi(name) {
      return &#039;How are you, &#039; + name + &#039;?&#039;;
    }

    // bad
    function sayHi(name) {
      return [&#039;How are you, &#039;, name, &#039;?&#039;].join();
    }

    // bad
    function sayHi(name) {
      return `How are you, ${ name }?`;
    }

    // good
    function sayHi(name) {
      return `How are you, ${name}?`;
    }
    ```

  &lt;a name=&quot;strings--eval&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.5&quot;&gt;&lt;/a&gt;
  - [6.4](#strings--eval) Never use `eval()` on a string; it opens too many vulnerabilities. eslint: [`no-eval`](https://eslint.org/docs/rules/no-eval)

  &lt;a name=&quot;strings--escaping&quot;&gt;&lt;/a&gt;
  - [6.5](#strings--escaping) Do not unnecessarily escape characters in strings. eslint: [`no-useless-esca

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[JannisX11/blockbench]]></title>
            <link>https://github.com/JannisX11/blockbench</link>
            <guid>https://github.com/JannisX11/blockbench</guid>
            <pubDate>Thu, 16 Oct 2025 00:04:46 GMT</pubDate>
            <description><![CDATA[Blockbench - A low poly 3D model editor]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/JannisX11/blockbench">JannisX11/blockbench</a></h1>
            <p>Blockbench - A low poly 3D model editor</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,521</p>
            <p>Forks: 357</p>
            <p>Stars today: 26 stars today</p>
            <h2>README</h2><pre># Blockbench

Blockbench is a free and open source model editor for low-poly models with pixel art textures.
Models can be exported into standardized formats, to be shared, rendered, 3D-printed, or used in game engines. There are also multiple dedicated formats for Minecraft Java and Bedrock Edition with format-specific features. 

Blockbench features a modern and beginner friendly interface, but also offers lots of customization and advanced features for experienced 3D artists. Plugins can extend the functionality of the program even further.

Website and download: [blockbench.net](https://www.blockbench.net)


![Interface](https://web.blockbench.net/content/front_page_app.png)



## Contribution

[![Contributor Covenant](https://img.shields.io/badge/Contributor%20Covenant-2.0-4baaaa.svg)](CODE_OF_CONDUCT.MD)

Check out the [Contribution Guidelines](CONTRIBUTING.md).



## Launching Blockbench

To launch Blockbench from source, you can clone the repository, navigate to the correct branch and launch the program in development mode using the instructions below.
If you just want to use the latest version, please download the app from the website.

### Setup Repository
* Install [NodeJS](https://nodejs.org/en/).
* Then install all dependencies via
`npm install`


### Run in Electron
Use this command or press Ctrl + Shift + B to launch Blockbench in Electron:

`npm run dev`

To enable debugging in VS Code, switch to the **Run &amp; Debug** tab, select the **&quot;Debug Renderer&quot;** configuration, and press the green arrow button to launch.
Now you can set breakpoints and debug inside VSCode.


### Run the web app
Use this command to launch the web app locally:

`npm run serve`

Now you can open the web app in your browser under http://localhost:3000


## Plugins

Blockbench supports Javascript-based plugins. Learn more about creating plugins on [https://www.blockbench.net/wiki/docs/plugin](https://www.blockbench.net/wiki/docs/plugin).



## License

* The Blockbench source-code is licensed under the GPL license version 3. See `LICENSE.MD`.
* Modifications to the source code can be made under the terms of that license.
* Blockbench plugins (external scripts) and themes (theme files to customize the design) that interact with the Blockbench API are an exception. Plugins and themes can be created and/or published as open source, proprietary or paid software.
* All assets created with Blockbench (models, textures, animations, screenshots etc.) are your own!
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[grab/cursor-talk-to-figma-mcp]]></title>
            <link>https://github.com/grab/cursor-talk-to-figma-mcp</link>
            <guid>https://github.com/grab/cursor-talk-to-figma-mcp</guid>
            <pubDate>Thu, 16 Oct 2025 00:04:45 GMT</pubDate>
            <description><![CDATA[CTTF: MCP integration between Cursor and Figma, allowing Cursor Agentic AI to communicate with Figma for reading designs and modifying them programmatically.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/grab/cursor-talk-to-figma-mcp">grab/cursor-talk-to-figma-mcp</a></h1>
            <p>CTTF: MCP integration between Cursor and Figma, allowing Cursor Agentic AI to communicate with Figma for reading designs and modifying them programmatically.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,519</p>
            <p>Forks: 570</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[module-federation/core]]></title>
            <link>https://github.com/module-federation/core</link>
            <guid>https://github.com/module-federation/core</guid>
            <pubDate>Thu, 16 Oct 2025 00:04:44 GMT</pubDate>
            <description><![CDATA[Module Federation is a concept that allows developers to share code and resources across multiple JavaScript applications]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/module-federation/core">module-federation/core</a></h1>
            <p>Module Federation is a concept that allows developers to share code and resources across multiple JavaScript applications</p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,222</p>
            <p>Forks: 358</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img alt=&quot;Module federation Banner&quot;  width=&quot;260&quot; src=&quot;https://github.com/module-federation/core/assets/27547179/11234712-40fc-4696-a7fd-16e0c631005a&quot;&gt;
&lt;/p&gt;

# Module Federation

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@module-federation/runtime?activeTab=readme&quot;&gt;
   &lt;img src=&quot;https://img.shields.io/npm/v/@module-federation/runtime?style=flat-square&amp;colorA=564341&amp;colorB=EDED91&quot; alt=&quot;npm version&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://npmcharts.com/compare/@module-federation/runtime?minimal=true&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/dm/@module-federation/runtime.svg?style=flat-square&amp;colorA=564341&amp;colorB=EDED91&quot; alt=&quot;downloads&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/web-infra-dev/rspack/blob/main/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/l/@module-federation/runtime?style=flat-square&amp;colorA=564341&amp;colorB=EDED91&quot; alt=&quot;license&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

You can consider the module federation capabilities provided by this repository as &quot;module federation 2.0&quot;. &quot;Module Federation 2.0&quot; differs from the &quot;Module Federation&quot; built into webpack 5 by offering not only the core features of module export, loading, and dependency sharing but also additional dynamic type hinting, a &quot;Manifest&quot;, a &quot;Federation Runtime&quot;, and a &quot;Runtime Plugin System&quot;. These features make &quot;Module Federation&quot; more suitable for use as a micro-frontend architecture in large-scale web applications.

## üí° What is Module Federation?

- Module Federation is a concept that allows developers to share code and resources across multiple JavaScript applications

- Module Federation can be used to split monolithic applications into micro-front-end architectures

- Module Federation reuses common dependencies between modules as much as possible

## ‚ú® What new features does Module Federation provide?

- üé® Module Federation Runtime
- üß© Runtime Plugins System
- üìù Manifest
- üöÄ Dynamic type prompt
- üõ†Ô∏è Chrome Devtool

## üìö Getting Started

To get started with Module Federation, see the [Quick Start](https://module-federation.io/guide/start/quick-start.html).

## üßë‚Äçüíª Community

Come and chat with us on [Discussions](https://github.com/module-federation/universe/discussions) or [Discord](https://discord.gg/n69NnT3ACV)! The Module federation team and users are active there, and we&#039;re always looking for contributions.

## ü§ù Contribution

&gt; New contributors welcome!

Please read the [Contributing Guide](https://github.com/module-federation/core/blob/main/CONTRIBUTING.md).

![Alt](https://repobeats.axiom.co/api/embed/856dc1d4a6965d225232b1bd2da5d54549dc169e.svg &#039;Repobeats analytics image&#039;)

## üôå Code of Conduct

This repo has adopted the Code of Conduct. Please check [Code of Conduct](./CODE_OF_CONDUCT.md) for more details.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[lockfale/OSINT-Framework]]></title>
            <link>https://github.com/lockfale/OSINT-Framework</link>
            <guid>https://github.com/lockfale/OSINT-Framework</guid>
            <pubDate>Thu, 16 Oct 2025 00:04:43 GMT</pubDate>
            <description><![CDATA[OSINT Framework]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/lockfale/OSINT-Framework">lockfale/OSINT-Framework</a></h1>
            <p>OSINT Framework</p>
            <p>Language: JavaScript</p>
            <p>Stars: 9,637</p>
            <p>Forks: 1,593</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre># OSINT Framework

http://osintframework.com

## Notes
OSINT framework focused on gathering information from free tools or resources. The intention is to help people find free OSINT resources. Some of the sites included might require registration or offer more data for $$$, but you should be able to get at least a portion of the available information for no cost.

I originally created this framework with an information security point of view. Since then, the response from other fields and disciplines has been incredible. I would love to be able to include any other OSINT resources, especially from fields outside of infosec. Please let me know about anything that might be missing!

Please visit the framework at the link below and good hunting!

https://osintframework.com

### Legend
(T) - Indicates a link to a tool that must be installed and run locally  
(D) - Google Dork, for more information: &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_hacking&quot;&gt;Google Hacking&lt;/a&gt;  
(R) - Requires registration  
(M) - Indicates a URL that contains the search term and the URL itself must be edited manually  

### For Update Notifications
Follow me on Twitter: @jnordine - https://twitter.com/jnordine  
Watch or star the project on Github: https://github.com/lockfale/osint-framework

### Suggestions, Comments, Feedback
Feedback or new tool suggestions are extremely welcome!  Please feel free to submit a pull request or open an issue on github or reach out on Twitter.

### Contribute with a GitHub Pull Request
For new resources, please ensure that the site is available for public and free use.
&lt;ol start=&quot;1&quot;&gt;
  &lt;li&gt;Update the arf.json file in the format shown below. If this isn&#039;t the first entry for a folder, add a comma to the last closing brace of the previous entry.&lt;/li&gt;
&lt;/ol&gt;

```
{
  &quot;name&quot;: &quot;Example Name&quot;,
  &quot;type&quot;: &quot;url&quot;,
  &quot;url&quot;: &quot;http://example.com&quot;
}
```

&lt;ol start=&quot;2&quot;&gt;
  &lt;li&gt;Submit pull request!&lt;/li&gt;
&lt;/ol&gt;

Thank you!

## OSINT Framework Website

https://osintframework.com

Happy Hunting!</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[rollup/rollup]]></title>
            <link>https://github.com/rollup/rollup</link>
            <guid>https://github.com/rollup/rollup</guid>
            <pubDate>Thu, 16 Oct 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[Next-generation ES module bundler]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/rollup/rollup">rollup/rollup</a></h1>
            <p>Next-generation ES module bundler</p>
            <p>Language: JavaScript</p>
            <p>Stars: 26,055</p>
            <p>Forks: 1,632</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
	&lt;a href=&quot;https://rollupjs.org/&quot;&gt;&lt;img src=&quot;https://rollupjs.org/rollup-logo.svg&quot; width=&quot;150&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/rollup&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/v/rollup.svg&quot; alt=&quot;npm version&quot; &gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://nodejs.org/en/about/previous-releases&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/node/v/rollup.svg&quot; alt=&quot;node compatibility&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://packagephobia.now.sh/result?p=rollup&quot;&gt;
    &lt;img src=&quot;https://packagephobia.now.sh/badge?p=rollup&quot; alt=&quot;install size&quot; &gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://codecov.io/gh/rollup/rollup&quot;&gt;
    &lt;img src=&quot;https://codecov.io/gh/rollup/rollup/graph/badge.svg&quot; alt=&quot;code coverage&quot; &gt;
  &lt;/a&gt;
  &lt;a href=&quot;#backers&quot; alt=&quot;sponsors on Open Collective&quot;&gt;
    &lt;img src=&quot;https://opencollective.com/rollup/backers/badge.svg&quot; alt=&quot;backers&quot; &gt;
  &lt;/a&gt; 
  &lt;a href=&quot;#sponsors&quot; alt=&quot;Sponsors on Open Collective&quot;&gt;
    &lt;img src=&quot;https://opencollective.com/rollup/sponsors/badge.svg&quot; alt=&quot;sponsors&quot; &gt;
  &lt;/a&gt; 
  &lt;a href=&quot;https://github.com/rollup/rollup/blob/master/LICENSE.md&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/l/rollup.svg&quot; alt=&quot;license&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&#039;https://is.gd/rollup_chat?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge&#039;&gt;
    &lt;img src=&#039;https://img.shields.io/discord/466787075518365708?color=778cd1&amp;label=chat&#039; alt=&#039;Join the chat at https://is.gd/rollup_chat&#039;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;Rollup&lt;/h1&gt;

## Overview

Rollup is a module bundler for JavaScript which compiles small pieces of code into something larger and more complex, such as a library or application. It uses the standardized ES module format for code, instead of previous idiosyncratic solutions such as CommonJS and AMD. ES modules let you freely and seamlessly combine the most useful individual functions from your favorite libraries. Rollup can optimize ES modules for faster native loading in modern browsers, or output a legacy module format allowing ES module workflows today.

## Quick Start Guide

Install with `npm install --global rollup`. Rollup can be used either through a [command line interface](https://rollupjs.org/command-line-interface/) with an optional configuration file or else through its [JavaScript API](https://rollupjs.org/javascript-api/). Run `rollup --help` to see the available options and parameters. The starter project templates, [rollup-starter-lib](https://github.com/rollup/rollup-starter-lib) and [rollup-starter-app](https://github.com/rollup/rollup-starter-app), demonstrate common configuration options, and more detailed instructions are available throughout the [user guide](https://rollupjs.org/introduction/).

### Commands

These commands assume the entry point to your application is named main.js, and that you&#039;d like all imports compiled into a single file named bundle.js.

For browsers:

```bash
# compile to a &lt;script&gt; containing a self-executing function
rollup main.js --format iife --name &quot;myBundle&quot; --file bundle.js
```

For Node.js:

```bash
# compile to a CommonJS module
rollup main.js --format cjs --file bundle.js
```

For both browsers and Node.js:

```bash
# UMD format requires a bundle name
rollup main.js --format umd --name &quot;myBundle&quot; --file bundle.js
```

## Why

Developing software is usually easier if you break your project into smaller separate pieces, since that often removes unexpected interactions and dramatically reduces the complexity of the problems you&#039;ll need to solve, and simply writing smaller projects in the first place [isn&#039;t necessarily the answer](https://medium.com/@Rich_Harris/small-modules-it-s-not-quite-that-simple-3ca532d65de4). Unfortunately, JavaScript has not historically included this capability as a core feature in the language.

This finally changed with ES modules support in JavaScript, which provides a syntax for importing and exporting functions and data so they can be shared between separate scripts. Most browsers and Node.js support ES modules. However, Node.js releases before 12.17 support ES modules only behind the `--experimental-modules` flag, and older browsers like Internet Explorer do not support ES modules at all. Rollup allows you to write your code using ES modules, and run your application even in environments that do not support ES modules natively. For environments that support them, Rollup can output optimized ES modules; for environments that don&#039;t, Rollup can compile your code to other formats such as CommonJS modules, AMD modules, and IIFE-style scripts. This means that you get to _write future-proof code_, and you also get the tremendous benefits of...

## Tree Shaking

In addition to enabling the use of ES modules, Rollup also statically analyzes and optimizes the code you are importing, and will exclude anything that isn&#039;t actually used. This allows you to build on top of existing tools and modules without adding extra dependencies or bloating the size of your project.

For example, with CommonJS, the _entire tool or library must be imported_.

```js
// import the entire utils object with CommonJS
var utils = require(&#039;node:utils&#039;);
var query = &#039;Rollup&#039;;
// use the ajax method of the utils object
utils.ajax(&#039;https://api.example.com?search=&#039; + query).then(handleResponse);
```

But with ES modules, instead of importing the whole `utils` object, we can just import the one `ajax` function we need:

```js
// import the ajax function with an ES import statement
import { ajax } from &#039;node:utils&#039;;

var query = &#039;Rollup&#039;;
// call the ajax function
ajax(&#039;https://api.example.com?search=&#039; + query).then(handleResponse);
```

Because Rollup includes the bare minimum, it results in lighter, faster, and less complicated libraries and applications. Since this approach is based on explicit `import` and `export` statements, it is vastly more effective than simply running an automated minifier to detect unused variables in the compiled output code.

## Compatibility

### Importing CommonJS

Rollup can import existing CommonJS modules [through a plugin](https://github.com/rollup/plugins/tree/master/packages/commonjs).

### Publishing ES Modules

To make sure your ES modules are immediately usable by tools that work with CommonJS such as Node.js and webpack, you can use Rollup to compile to UMD or CommonJS format, and then point to that compiled version with the `main` property in your `package.json` file. If your `package.json` file also has a `module` field, ES-module-aware tools like Rollup and [webpack](https://webpack.js.org/) will [import the ES module version](https://github.com/rollup/rollup/wiki/pkg.module) directly.

## Contributors

This project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)]. &lt;a href=&quot;https://github.com/rollup/rollup/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/rollup/contributors.svg?width=890&quot; /&gt;&lt;/a&gt;. If you want to contribute yourself, head over to the [contribution guidelines](CONTRIBUTING.md).

## Backers

Thank you to all our backers! üôè [[Become a backer](https://opencollective.com/rollup#backer)]

&lt;a href=&quot;https://opencollective.com/rollup#backers&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/rollup/backers.svg?width=890&quot;&gt;&lt;/a&gt;

## Sponsors

Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/rollup#sponsor)]

&lt;a href=&quot;https://opencollective.com/rollup/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/rollup/sponsor/0/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/rollup/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/rollup/sponsor/1/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/rollup/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/rollup/sponsor/2/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/rollup/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/rollup/sponsor/3/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/rollup/sponsor/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/rollup/sponsor/4/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/rollup/sponsor/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/rollup/sponsor/5/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/rollup/sponsor/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/rollup/sponsor/6/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/rollup/sponsor/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/rollup/sponsor/7/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/rollup/sponsor/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/rollup/sponsor/8/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/rollup/sponsor/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/rollup/sponsor/9/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/rollup/sponsor/10/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/rollup/sponsor/10/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/rollup/sponsor/11/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/rollup/sponsor/11/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/rollup/sponsor/12/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/rollup/sponsor/12/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/rollup/sponsor/13/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/rollup/sponsor/13/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/rollup/sponsor/14/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/rollup/sponsor/14/avatar.svg&quot;&gt;&lt;/a&gt;

## Special Sponsor

&lt;a href=&quot;https://www.tngtech.com/en/index.html&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/432256?s=200&amp;v=4&quot; alt=&quot;TNG Logo&quot;/&gt;&lt;/a&gt;

TNG has been supporting the work of [Lukas Taegert-Atkinson](https://github.com/lukastaegert) on Rollup since 2017.

## License

[MIT](https://github.com/rollup/rollup/blob/master/LICENSE.md)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>