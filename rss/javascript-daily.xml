<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Sat, 19 Apr 2025 00:04:41 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[netptop/siteproxy]]></title>
            <link>https://github.com/netptop/siteproxy</link>
            <guid>https://github.com/netptop/siteproxy</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:41 GMT</pubDate>
            <description><![CDATA[reverse proxy, online proxy, 反向代理,免翻墙访问Youtube/twitter/Google, 支持github和telegram web登录(请注意不要通过不信任的代理进行登录)。支持DuckDuckGo AI Chat(可免费访问chatGPT3.5和Claude3)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/netptop/siteproxy">netptop/siteproxy</a></h1>
            <p>reverse proxy, online proxy, 反向代理,免翻墙访问Youtube/twitter/Google, 支持github和telegram web登录(请注意不要通过不信任的代理进行登录)。支持DuckDuckGo AI Chat(可免费访问chatGPT3.5和Claude3)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,500</p>
            <p>Forks: 1,235</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre>## SiteProxy 2.0
 - [English ver](README_english.md)

SiteProxy 是一个**功能强大的在线代理工具**，采用了最新的技术，提升了代理的稳定性和兼容性。我们致力于提供 **简单、高效、安全** 的代理服务，为用户提供最佳的互联网访问体验。

- **超高速性能**：采用 Hono 替代传统的Express 服务器，性能提升 4 倍，带来更流畅的使用体验。
- **云端部署**：完美支持 Cloudflare Worker 部署，快速且高效。
- **AI 智能聊天**：集成 DuckDuckGo AI Chat，免费提供 GPT-3.5 和 Claude 3，让你的代理服务更加智能。
- **高级安全保护**：支持密码控制代理，只有授权用户才能访问，大幅提升安全性。
- **零配置使用**：用户无需进行任何客户端配置，只需访问代理网址即可畅游全球互联网。
- **便捷登录**：全面支持 GitHub 和 Telegram Web 登录，操作简单快捷。
- **强力加密**：采用 `RSA + AES` 双重加密技术，保护用户登录密码，防止中间人攻击。
- **隐私保护**：通过代理网址访问全球互联网，同时隐藏用户真实 IP，保护隐私。
- **无缝体验**：无需任何软件安装和浏览器配置，即可立即使用，提供极致便利的用户体验。

&lt;details&gt;
  &lt;summary&gt;查看原理&lt;/summary&gt;

```
                                                 +----&gt; google/youtube
                             +----------------+  |
                             |                |  |
user browser +--------------&gt;+ siteproxy      +-------&gt; wikipedia
                             |                |  |
                             +----------------+  |
                                                 +----&gt; chinese forums
```

&lt;/details&gt;

&gt; [!CAUTION]
&gt; 严禁将本项目用于任何非法用途，否则后果自负

&gt; [!WARNING]
&gt; 由于支持多个网站的 Login，为了减少钓鱼风险，Siteproxy 在 2.0 版本对代码进行了混淆，同时禁止了默认主页网址的修改。

## 展示

来自 Telegram 的网友的展示 Siteproxy 部署后，加上优选IP的速度测试： 
![Download Speed test](https://raw.githubusercontent.com/netptop/siteproxy/master/test.png)


## 部署到 Cloudflare Pages
1. **确保域名管理**：
   - 确保你的域名已经在 Cloudflare 名下进行管理。
2. **克隆仓库**：
   - 执行命令：`git clone https://github.com/netptop/siteproxy.git`
3. **编辑配置文件**：
   - 使用文本编辑器打开 `siteproxy/build/cf_page/_worker.js` 文件。
   - 搜索并替换字符串 `http://localhost:5006` 为你的代理服务器域名, 必须替换为HTTPS，例如 `https://your-proxy-domain.com`（请使用 `https`）。
   - 搜索并替换字符串 `user22334455` 为你想设置的访问密码。如果密码为空，则表示不需要密码即可访问。保存文件。
4. **登录 Cloudflare**：
   - 进入 **Workers 和 Pages** 部分，选择 **使用直接上传创建** 一个 Page，上传 `siteproxy/build/cf_page` 目录进行部署。
5. **配置自定义域**：
   - 在 **Workers &amp; Pages** 页面，打开刚才部署的 Page。
   - 点击顶部的 **自定义域**，然后选择 **添加自定义域**，设置为你的代理域名并激活域名。
6. **访问代理服务**：
   - 现在可以通过 `https://your-proxy-domain.com/your-password/` 访问代理服务（确保最后的斜杠存在）。注意将域名和密码替换为你自己的。

## 部署到 Cloudflare Workers
1. **确保域名管理**：
   - 确保你的域名已经在 Cloudflare 名下进行管理。
2. **下载并编辑 Worker 文件**：
   - 下载 `build/worker.js` 文件：[链接](https://raw.githubusercontent.com/netptop/siteproxy/master/build/worker.js)，并使用文本编辑器打开。
   - 搜索并替换字符串 `http://localhost:5006` 为你的代理服务器域名，必须替换为HTTPS，例如 `https://your-worker-domain.com`（请使用 `https`）。
   - 搜索并替换字符串 `user22334455` 为你想设置的访问密码。如果密码为空，则表示不需要密码即可访问。
3. **创建 Worker**：
   - 登录 Cloudflare，进入 **Workers 和 Pages** 部分，创建一个 Worker。
   - 编辑刚才创建的 Worker，将编辑过的 `worker.js` 文件内容复制粘贴到 Worker 内部，保存并部署。
4. **配置自定义域**：
   - 在 **Workers &amp; Pages** 页面，打开刚才保存的 Worker。
   - 点击顶部的 **设置 -&gt; 触发器**，然后选择 **添加自定义域**，设置为你的代理域名。自定义域名设置成功后，DNS 页面应显示对应的 DNS 类型为 Worker。
5. **访问代理服务**：
   - 现在可以通过 `https://your-worker-domain.com/your-password/` 访问代理服务（确保最后的斜杠存在，并替换为你自己的域名和密码）。

## 部署到 VPS 或者云服务器

1. **创建 SSL 网站**：
   - 使用 `certbot` 和 `nginx` 创建 SSL 网站。具体用法可以 Google 搜索。
   - 配置 `nginx`，确保 `/etc/nginx/conf.d/default.conf` 文件包含以下内容：
     ```nginx
     server {
        server_name your-proxy.domain.name; #请替换为你的实际域名
        location / {
          proxy_pass http://localhost:5006;
        }
     }
     ```
2. **重启 nginx**：
   - 执行命令：`sudo systemctl restart nginx`
3. **安装 Node.js v21 或更高版本**：
   - 执行以下命令：
     ```bash
     curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
     source ~/.bashrc
     nvm install v21
     ```
4. **克隆仓库**：
   - 执行命令：`git clone https://github.com/netptop/siteproxy.git`
5. **进入项目目录**：
   - 执行命令：`cd siteproxy`
6. **测试运行**：
   - 执行命令：`node bundle.js`
   - 如果没有错误，按 `Ctrl+C` 结束程序。
7. **配置文件修改**：
   - 打开并修改 `config.json` 文件，内容如下：
     ```json
     {
        &quot;proxy_url&quot;: &quot;https://your-proxy.domain.name&quot;, // 替换为HTTPS加你的代理服务器域名，确保使用 https
        &quot;token_prefix&quot;: &quot;/user-SetYourPasswordHere/&quot;,  // 设置网站密码，用于防止非法访问，保留首尾的斜杠。为空表示不设置密码
        &quot;local_listen_port&quot;: 5006, // 不要修改，以确保与 nginx 配置一致
        &quot;description&quot;: &quot;注意：token_prefix 相当于网站密码，请谨慎设置。 proxy_url 和 token_prefix 合起来就是访问网址。&quot;
     }
     ```
8. **安装 Forever**：
   - 执行命令：`npm install -g forever`
9. **启动应用**：
   - 执行命令：`forever stopall &amp;&amp; forever start bundle.js`
10. **访问代理服务**：
    - 在浏览器中访问你的域名，网址为 `proxy_url` 加 `token_prefix`。
11. **使用 Cloudflare 加速（可选）**：
    - 参考 Cloudflare 的官方说明进行设置。

现在，你的代理服务已经成功部署并可以通过浏览器访问。


## Docker 部署
1. **配置 SSL 证书和 Nginx**：
   - 配置域名对应的 SSL 证书和 Nginx，将其指向本地的 5006 端口。
2. **克隆仓库**：
   - 执行命令：`git clone https://github.com/netptop/siteproxy.git`
3. **编辑配置文件**：
   - 打开并修改 `config.json` 文件，内容如下：
     ```json
     {
        &quot;proxy_url&quot;: &quot;https://your-proxy-domain.com&quot;, // 替换为你申请到的代理服务器域名
        &quot;token_prefix&quot;: &quot;/user-SetYourPasswordHere/&quot;,  // 设置网站密码，用于防止非法访问，保留首尾的斜杠
        &quot;description&quot;: &quot;注意：token_prefix 相当于网站密码，请谨慎设置。 proxy_url 和 token_prefix 合起来就是访问网址。&quot;
     }
     ```
   - 保存文件。
4. **启动 Docker 容器**：
   - 进入 `docker-node` 子目录。
   - 执行命令：`sudo docker compose up`
5. **访问代理服务**：
   - 现在可以通过 `https://your-proxy-domain.com/user-your-password/` 访问代理服务。请将域名和密码替换为你自己的域名和密码。

## 感谢
 - netptop.com 默认主页由 Telgram 网友 SenZyo 设计, 感谢贡献！
 - 文档由 [LAGSNES](https://github.com/SNESNya) 编写

## 联系方式
Telegram群: https://siteproxy.t.me
E-mail: [netptop@gmail.com](mailto:netptop@gmail.com)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[wanglin2/mind-map]]></title>
            <link>https://github.com/wanglin2/mind-map</link>
            <guid>https://github.com/wanglin2/mind-map</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:40 GMT</pubDate>
            <description><![CDATA[一个还算强大的Web思维导图。A relatively powerful web mind map.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/wanglin2/mind-map">wanglin2/mind-map</a></h1>
            <p>一个还算强大的Web思维导图。A relatively powerful web mind map.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,523</p>
            <p>Forks: 1,202</p>
            <p>Stars today: 145 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;Simple mind map&lt;/h1&gt;

[![npm-version](https://img.shields.io/npm/v/simple-mind-map)](https://www.npmjs.com/package/simple-mind-map)
![npm download](https://img.shields.io/npm/dm/simple-mind-map)
[![GitHub issues](https://img.shields.io/github/issues/wanglin2/mind-map)](https://github.com/wanglin2/mind-map/issues)
![license](https://img.shields.io/npm/l/express.svg)
[![GitHub stars](https://img.shields.io/github/stars/wanglin2/mind-map)](https://github.com/wanglin2/mind-map/stargazers)
[![GitHub forks](https://img.shields.io/github/forks/wanglin2/mind-map)](https://github.com/wanglin2/mind-map/network/members)

&gt; 中文名：思绪思维导图。一个简单&amp;强大的 Web 思维导图库和思维导图软件。

本项目主要包含以下内容：

- 一个 `js` 思维导图库，不依赖任何框架，可以用来快速完成 Web 思维导图产品的开发。

&gt;  开发文档：[https://wanglin2.github.io/mind-map-docs/](https://wanglin2.github.io/mind-map-docs/)

- 一个 Web 思维导图，基于思维导图库、`Vue2.x`、`ElementUI` 开发，支持操作电脑本地文件，可以当做一个在线版思维导图应用使用，也可以自部署和二次开发。

&gt;  在线地址：[https://wanglin2.github.io/mind-map/](https://wanglin2.github.io/mind-map/)

- 客户端和插件

&gt; 1.独立客户端，支持Windows、Mac及Linux系统。
&gt;
&gt; 下载地址：[Github](https://github.com/wanglin2/mind-map/releases)、[百度云盘](https://pan.baidu.com/s/1huasEbKsGNH2Af68dvWiOg?pwd=3bp3)

&gt; 2.`uTools`插件，现已上架[uTools](https://www.u.tools/)插件应用市场。
&gt;
&gt; 可直接在`uTools`插件应用市场中搜索`思绪`进行安装，也可以直接访问该地址：[主页](https://www.u-tools.cn/plugins/detail/%E6%80%9D%E7%BB%AA%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/)，点击右侧的【启动】按钮进行安装。

- 云存储版本，如果你需要带后端的云存储版本，可以尝试我们开发的另一个项目[理想文档](https://github.com/wanglin2/lx-doc)。

# 特性

- [x] 插件化架构，除核心功能外，其他功能作为插件提供，按需使用，减小打包体积
- [x] 支持逻辑结构图（向左、向右逻辑结构图）、思维导图、组织结构图、目录组织图、时间轴（横向、竖向）、鱼骨图等结构
- [x] 内置多种主题，允许高度自定义样式，支持注册新主题
- [x] 节点内容支持文本（普通文本、富文本）、图片、图标、超链接、备注、标签、概要、数学公式
- [x] 节点支持拖拽（拖拽移动、自由调整）、多种节点形状；支持扩展节点内容、支持使用 DDM 完全自定义节点内容
- [x] 支持画布拖动、缩放
- [x] 支持鼠标按键拖动选择和 Ctrl+左键两种多选节点方式
- [x] 支持导出为`json`、`png`、`svg`、`pdf`、`markdown`、`xmind`、`txt`，支持从`json`、`xmind`、`markdown`导入
- [x] 支持快捷键、前进后退、关联线、搜索替换、小地图、水印、滚动条、手绘风格、彩虹线条、标记、外框
- [x] 提供丰富的配置，满足各种场景各种使用习惯
- [x] 支持协同编辑
- [x] 支持演示模式
- [x] 更多功能等你来发现

官方提供了如下插件，可根据需求按需引入（某个功能不生效大概率是因为你没有引入对应的插件），具体使用方式请查看文档：

| RichText（节点富文本插件）           | Select（鼠标多选节点插件）                | Drag（节点拖拽插件）                 | AssociativeLine（关联线插件）        |
| ------------------------------------ | ----------------------------------------- | ------------------------------------ | ------------------------------------ |
| Export（导出插件）                   | KeyboardNavigation（键盘导航插件）        | MiniMap（小地图插件）                | Watermark（水印插件）                |
| TouchEvent（移动端触摸事件支持插件） | NodeImgAdjust（拖拽调整节点图片大小插件） | Search（搜索插件）                   | Painter（节点格式刷插件）            |
| Scrollbar（滚动条插件）              | Formula（数学公式插件）                   | Cooperate（协同编辑插件）            | RainbowLines（彩虹线条插件）         |
| Demonstrate（演示模式插件）          | OuterFrame（外框插件）                    | MindMapLayoutPro（思维导图布局插件） |                                      |
| HandDrawnLikeStyle（手绘风格插件）   | Notation（节点标记插件）                  | Numbers（节点编号插件）[收费]        | Freemind（Freemind格式导入导出插件） |
| Excel（Excel格式导入导出插件）       | Checkbox（待办插件）                      | Lineflow（节点连线流动插件）         | Momentum（动量效果插件）             |
| RightFishbone（向右鱼骨图插件）      | NodeLink（节点链接插件）                  |                                      |                                      |


本项目不会实现的特性：

&gt; 1.自由节点，即多个根节点；
&gt;
&gt; 2.概要节点后面继续添加节点；
&gt;
&gt; 如果你需要以上特性，那么本库可能无法满足你的需求。

# 安装

```bash
npm i simple-mind-map
```

# 使用

提供一个宽高不为 0 的容器元素：

```html
&lt;div id=&quot;mindMapContainer&quot;&gt;&lt;/div&gt;
```

另外再设置一下`css`样式：

```css
#mindMapContainer * {
  margin: 0;
  padding: 0;
}
```

然后创建一个实例：

```js
import MindMap from &quot;simple-mind-map&quot;;

const mindMap = new MindMap({
  el: document.getElementById(&quot;mindMapContainer&quot;),
  data: {
    data: {
      text: &quot;根节点&quot;,
    },
    children: [],
  },
});
```

即可得到一个思维导图。想要实现更多功能？可以查看[开发文档](https://wanglin2.github.io/mind-map-docs/)。

# License

[MIT](./LICENSE)。保留`mind-map`版权声明和注明来源的情况下可随意商用，如有疑问或不想保留可联系作者通过付费的方式去除。

# 微信交流群

微信添加`wanglinguanfang`拉你入群。根据过往的经验，大部分问题都可以通过查看issue列表或文档解决，所以提问前请确保你已经阅读完了所有文档，文档里没有的可在群里提问，不必私聊作者，如果你一定要私聊，请先发红包（￥9.9+每次）。

如果你在杭州，也欢迎来找我面基。

# star

如果喜欢本项目，欢迎点个 star，这对我们很重要。

[![Star History Chart](https://api.star-history.com/svg?repos=wanglin2/mind-map&amp;type=Date)](https://star-history.com/#wanglin2/mind-map&amp;Date)

# 关于定制

如果你有个性化的商用定制需求，可以联系我们，我们提供付费开发服务，无论前端、后端、还是部署，都可以帮你一站式搞定。

# 谁在使用

&lt;table&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;http://drawon.cn/&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/桌案.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;drawon.cn(桌案)&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

# 请作者喝杯咖啡

开源不易，如果本项目有帮助到你的话，可以考虑请作者喝杯咖啡~你的赞助对项目的可持续发展非常重要，是作者持续维护的最大动力。

&gt; 推荐使用支付宝，微信获取不到头像。转账请备注【思维导图】。
&gt;
&gt; 也可以通过购买付费插件来支持我们：[付费插件](https://wanglin2.github.io/mind-map-docs/plugins/about.html)。
&gt;
&gt; 赞助等级：最强王者（￥500+）、星耀赞助（￥300+）、钻石赞助（￥150+）、黄金赞助（￥50+）、青铜赞助

&lt;p&gt;
  &lt;img src=&quot;./web/src/assets/img/alipay.jpg&quot; style=&quot;width: 300px&quot; /&gt;
  &lt;img src=&quot;./web/src/assets/img/wechat.jpg&quot; style=&quot;width: 300px&quot; /&gt;
&lt;/p&gt;

## 最强王者

&lt;table&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/hi.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;hi&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

## 钻石赞助

&lt;table&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/黄智彪@一米一栗科技.png&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;黄智彪@一米一栗科技&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/沨沄.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;沨沄&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

## 黄金赞助

&lt;table&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/小土渣的宇宙.jpeg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;小土渣的宇宙&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Chris.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Chris&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/仓鼠.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;仓鼠&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/风格.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;风格&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/default.png&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;LiuJL&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Kyle.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Kyle&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/秀树因馨雨.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;秀树因馨雨&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/default.png&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;黄泳&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/ccccs.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;ccccs&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/炫.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;炫&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/default.png&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;晏江&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/梁辉.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;梁辉&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/千帆.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;千帆&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/布林.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;布林&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/达仁科技.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;达仁科技&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/沐风牧草.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;沐风牧草&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/俊奇.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;俊奇&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/庆国.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;庆国&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/default.png&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Matt&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/雨馨.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;雨馨&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/峰.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;峰&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/御风.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;御风&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/兔子快跑.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;兔子快跑&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

## 青铜赞助

&lt;table&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/Think.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Think&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/志斌.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;志斌&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/qp.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;qp&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/ZXR.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;ZXR&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/花儿朵朵.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;花儿朵朵&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/suka.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;suka&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/水车.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;水车&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/才镇.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;才镇&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/小米.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;小米bbᯤ²ᴳ&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./web/src/assets/avatar/棐.jpg&quot; width=&quot;50;&quot;  style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot;/&gt;
                &lt;br /&gt;
                &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;*棐&lt;/b&gt;&lt;/sub&gt;
            &lt;/a&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 75.0; height: 75.0&quot;&gt;
            &lt;a href=&quot;#&quot;&gt;
                &lt;img src=&quot;./we

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[projectdiscovery/nuclei-templates]]></title>
            <link>https://github.com/projectdiscovery/nuclei-templates</link>
            <guid>https://github.com/projectdiscovery/nuclei-templates</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:39 GMT</pubDate>
            <description><![CDATA[Community curated list of templates for the nuclei engine to find security vulnerabilities.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/projectdiscovery/nuclei-templates">projectdiscovery/nuclei-templates</a></h1>
            <p>Community curated list of templates for the nuclei engine to find security vulnerabilities.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 9,999</p>
            <p>Forks: 2,794</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>

&lt;h1 align=&quot;center&quot;&gt;
Nuclei Templates
&lt;/h1&gt;
&lt;h4 align=&quot;center&quot;&gt;Community curated list of templates for the nuclei engine to find security vulnerabilities in applications.&lt;/h4&gt;


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/projectdiscovery/nuclei-templates&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/pdnuclei&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/pdnuclei.svg?logo=twitter&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://discord.gg/projectdiscovery&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/695645237418131507.svg?logo=discord&quot;&gt;&lt;/a&gt;
&lt;/p&gt;
      
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://nuclei.projectdiscovery.io/templating-guide/&quot;&gt;Documentation&lt;/a&gt; •
  &lt;a href=&quot;#-contributions&quot;&gt;Contributions&lt;/a&gt; •
  &lt;a href=&quot;#-discussion&quot;&gt;Discussion&lt;/a&gt; •
  &lt;a href=&quot;#-community&quot;&gt;Community&lt;/a&gt; •
  &lt;a href=&quot;https://nuclei.projectdiscovery.io/faq/templates/&quot;&gt;FAQs&lt;/a&gt; •
  &lt;a href=&quot;https://discord.gg/projectdiscovery&quot;&gt;Join Discord&lt;/a&gt;
&lt;/p&gt;

----

Templates are the core of the [nuclei scanner](https://github.com/projectdiscovery/nuclei) which powers the actual scanning engine.
This repository stores and houses various templates for the scanner provided by our team, as well as contributed by the community.
We hope that you also contribute by sending templates via **pull requests** or [Github issues](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=submit-template.md&amp;title=%5Bnuclei-template%5D+) to grow the list.


## Nuclei Templates overview


An overview of the nuclei template project, including statistics on unique tags, author, directory, severity, and type of templates. The table below contains the top ten statistics for each matrix; an expanded version of this is [available here](TEMPLATES-STATS.md), and also available in [JSON](TEMPLATES-STATS.json) format for integration.

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt; 

## Nuclei Templates Top 10 statistics

|    TAG    | COUNT |    AUTHOR     | COUNT | DIRECTORY  | COUNT | SEVERITY | COUNT | TYPE | COUNT |
|-----------|-------|---------------|-------|------------|-------|----------|-------|------|-------|
| cve       |  3055 | dhiyaneshdk   |  1811 | http       |  8547 | info     |  4048 | file |   434 |
| panel     |  1284 | daffainfo     |   868 | file       |   434 | high     |  2283 | dns  |    25 |
| xss       |  1228 | dwisiswant0   |   805 | cloud      |   420 | medium   |  2152 |      |       |
| wordpress |  1129 | ritikchaddha  |   581 | dast       |   255 | critical |  1277 |      |       |
| exposure  |  1075 | princechaddha |   571 | workflows  |   192 | low      |   302 |      |       |
| wp-plugin |   988 | pussycat0x    |   489 | code       |   167 | unknown  |    51 |      |       |
| osint     |   807 | pikpikcu      |   352 | network    |   139 |          |       |      |       |
| tech      |   768 | pdteam        |   304 | javascript |    70 |          |       |      |       |
| lfi       |   757 | ricardomaia   |   249 | ssl        |    36 |          |       |      |       |
| misconfig |   729 | geeknik       |   235 | dns        |    22 |          |       |      |       |

**799 directories, 10630 files**.

&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

📖 Documentation
-----

Please navigate to https://nuclei.projectdiscovery.io for detailed documentation to **build** new or your own **custom** templates.
We have also added a set of templates to help you understand how things work.

💪 Contributions
-----

Nuclei-templates is powered by major contributions from the community.
[Template contributions ](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=submit-template.md&amp;title=%5Bnuclei-template%5D+), [Feature Requests](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=feature_request.md&amp;title=%5BFeature%5D+) and [Bug Reports](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=bug_report.md&amp;title=%5BBug%5D+) are more than welcome.

![Alt](https://repobeats.axiom.co/api/embed/55ee65543bb9a0f9c797626c4e66d472a517d17c.svg &quot;Repobeats analytics image&quot;)

💬 Discussion
-----

Have questions / doubts / ideas to discuss?
Feel free to open a discussion on [Github discussions](https://github.com/projectdiscovery/nuclei-templates/discussions) board.

👨‍💻 Community
-----

You are welcome to join the active [Discord Community](https://discord.gg/projectdiscovery) to discuss directly with project maintainers and share things with others around security and automation.
Additionally, you may follow us on [Twitter](https://twitter.com/pdnuclei) to be updated on all the things about Nuclei.


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=projectdiscovery/nuclei-templates&amp;max=300&quot;&gt;
&lt;/a&gt;
&lt;/p&gt;


Thanks again for your contribution and keeping this community vibrant. :heart:
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[Superalgos/Superalgos]]></title>
            <link>https://github.com/Superalgos/Superalgos</link>
            <guid>https://github.com/Superalgos/Superalgos</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:38 GMT</pubDate>
            <description><![CDATA[Free, open-source crypto trading bot, automated bitcoin / cryptocurrency trading software, algorithmic trading bots. Visually design your crypto trading bot, leveraging an integrated charting system, data-mining, backtesting, paper trading, and multi-server crypto bot deployments.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Superalgos/Superalgos">Superalgos/Superalgos</a></h1>
            <p>Free, open-source crypto trading bot, automated bitcoin / cryptocurrency trading software, algorithmic trading bots. Visually design your crypto trading bot, leveraging an integrated charting system, data-mining, backtesting, paper trading, and multi-server crypto bot deployments.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,586</p>
            <p>Forks: 5,783</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre># :small_orange_diamond: Superalgos 1.6.1

![contributors](https://img.shields.io/github/contributors-anon/Superalgos/Superalgos?label=Contributors)
![pull-activity](https://img.shields.io/github/issues-pr-closed-raw/Superalgos/Superalgos?color=blueviolet)
![last-commit](https://img.shields.io/github/last-commit/Superalgos/Superalgos/develop?label=last%20commit%20to%20develop)
![bot-friendliness](https://img.shields.io/badge/Bot%20Friendliness%20Level-119%25-yellow)

# :small_orange_diamond: Table of Contents

## Main Topics

- [Introduction](#small_orange_diamond-introduction)
- [Before You Begin](#small_orange_diamond-before-you-begin)
- [Getting Started](#small_orange_diamond-getting-started)
- [Installation Options](#small_orange_diamond-installation-options)
- [Installation for Developers and Contributors](#small_orange_diamond-installation-for-developers-and-contributors)
  - [Prerequisites](#prerequisites)
  - [Superalgos Platform Client Installation](#superalgos-platform-client-installation)
- [Usage](#small_orange_diamond-usage)
- [Uninstall](#small_orange_diamond-uninstall)
- [Get In Touch](#small_orange_diamond-get-in-touch)
- [Other Resources](#small_orange_diamond-other-resources)
- [Contributing](#small_orange_diamond-contributing)
- [License](#small_orange_diamond-license)

## Appendix

- [Prerequisites Notes](#small_orange_diamond-prerequisites-notes)
- [Troubleshooting Dependencies Installation](#small_orange_diamond-troubleshooting-dependencies-installation)
- [WSL2 VSCode IDE Environment Setup](#small_orange_diamond-wsl2-vscode-ide-environment-setup)
- [Running Superalgos on a Headless Linux Server as a Daemon](#small_orange_diamond-running-superalgos-on-a-headless-linux-server-as-a-daemon)


# :small_orange_diamond: Introduction

**[Superalgos](https://superalgos.org/) is a community-owned open-source project with a decentralized and token-incentivized Social Trading Network crowdsourcing superpowers for retail traders.**

We are an open and welcoming community nurtured and incentivized with the project&#039;s native [Superalgos (SA) Token](https://superalgos.org/token-overview.shtml), which is distributed among contributors to accelerate development.

&gt; :white_check_mark: Join the [Telegram Community Group](https://t.me/superalgoscommunity) or the new [Discord Server](https://discord.gg/CGeKC6WQQb) to connect with other users!

Superalgos is a vast project. The focus of this README file is the Superalgos Platform. Please, visit [the platform&#039;s page on the website](https://superalgos.org/crypto-trading-bots-platform.shtml) for an overview of features and functionality.

![superalgos-readme](https://user-images.githubusercontent.com/13994516/106380124-844d8980-63b0-11eb-9bd9-4f977b6c183b.gif)

# :small_orange_diamond: Before You Begin

Worth noting before you start:

* Online Demo | To get a feel of what Superalgos is about without installing anything, take the (limited) [online demo](https://superalgos.org/crypto-trading-bots-platform-demo.shtml) for a spin!

* System requirements | Learn about the [minimum hardware](https://superalgos.org/crypto-trading-bots-system-requirements.shtml) required to run the platform on different settings.

* FAQS:

  * [Before you begin](https://superalgos.org/faqs-crypto-trading-bots-before-you-being.shtml)

  * [Trust and safety](https://superalgos.org/faqs-crypto-trading-bots-trust-and-safety.shtml)

  * [Trading with Superalgos](https://superalgos.org/faqs-crypto-trading-bots-trading-with-superalgos.shtml)

  * [Open-source strategies](https://superalgos.org/faqs-crypto-trading-bots-open-source-crypto-trading-bots-strategies.shtml)

* Documentation | The platform features interactive and searchable documentation counting over 1500 pages. The Docs are available [on the website](https://superalgos.org/Docs/Foundations/Book/user-manual.shtml) and within the app. The in-app version of the Docs interacts with the app itself and is likely more up-to-date than the web version.

# :small_orange_diamond: Getting Started

Superalgos is an ever-growing ecosystem of tools and applications. This guide will walk you through the main ways to install the Superalgos Platform — the flagship application of the ecosystem.

Once you install and launch the app, a series of interactive tutorials take you by the hand and walk you around the system while you learn the basic skills required to use the interface, mine data, backtest strategies, and even run a live trading session. It is highly recommended to do all tutorials, as they are carefully crafted to make your onboarding as easy as possible. 

&gt; :white_check_mark: **NOTE:** Tutorials are the absolute best way to tackle the learning curve. You should do all tutorials before you start exploring other avenues on your own.

![welcome-tutorial-00](https://user-images.githubusercontent.com/13994516/107038771-4a6bf100-67bd-11eb-92e0-353525a972a9.gif)

The tutorial uses Binance or Binance US as the exchange of choice. If you don&#039;t have an account with Binance or Binance US, you will still be able to follow 100% of the tutorial. When you get to the live trading section, keep going even if you don&#039;t intend to run the session. You will learn how to work with other exchanges later on. If both Binance and Binance US are blocked in your region, you will need to set up a different exchange from the get-go. 

# :small_orange_diamond: Installation Options

There are a few methods to install the Superalgos Platform.

We will briefly describe the options available. Click the link to go to the specific README file with further instructions for the installation method of your choice.

1. [Developers and Contributors](#small_orange_diamond-installation-for-developers-and-contributors) | This is the default installation for developers that wish to dive into the codebase and contribute to making Superalgos better. It is also the recommended installation for non-developers who wish to contribute improvements to the Docs, translations, design work, and so on. Instructions are available further down this same file.

2. [Docker deployments](README_Docker.md) | Docker offers the ability to install the platform in a clean and isolated environment. The standard Docker installation is not optimized for development or contributions, but some workarounds are offered.

3. [Raspberry Pi](README_RaspberryPi.md) | Raspberry Pi installations are a great economical option for running live trading sessions. You will need to be comfortable with either options 1 or 2 above to proceed here.

4. [Public Cloud](README_PublicCloud.md) | This is a great option for those who wish to run live trading sessions in the cloud. You will need to be comfortable with option 3 above to proceed here.

&gt; :white_check_mark: **ABOUT REMOTE INSTALLATIONS AND MINIMALIST HARDWARE:** Remote installations and minimalist hardware — both virtual and physical — are better suited for production deployments, where the use of the GUI is minimal. We highly recommend learning Superalgos in a local installation, on a full-size PC. Mastering the system takes time, and the use of the GUI to go through in-app tutorials is crucial during the learning process. Your experience will be orders of magnitude better if you follow this advice: leave remote installations and minimalist hardware for when you are ready to start trading live.

&gt; :white_check_mark: **EXPERIENCING ISSUES INSTALLING SUPERALGOS?** If you&#039;re having trouble installing or running the app for the first time, do not open an issue. Instead, join the [Support Telegram Group](https://t.me/superalgossupport) and follow the instructions on the pinned message to ask for help. You may also join the [new Discord Server](https://discord.gg/CGeKC6WQQb), but bear in mind that the response time tends to be longer. Online support is provided by volunteers — please provide clear information and sufficient context about the issue you are facing, and be mindful of people&#039;s time.

If you opt for the Developers and Contributors Installation (recommended), please keep on reading. Otherwise, click one of the other options above.

# :small_orange_diamond: Installation for Developers and Contributors

This is the purest way of installing Superalgos. It has no limitations to contributing, which is highly appreciated and rewarded with SA tokens, and gives you the most freedom for custom configurations.

All procedures (other than prerequisites) are the same for Windows, Linux, or Mac OS. Raspberry Pi terminal commands have been included for ease of use. Some edge cases are covered separately, further down this README.

## Prerequisites

### :one: Install Node.JS, Git, and Chrome

You will need the latest versions of Node JS and Git installed. You will also need a web browser to access the interface. Google Chrome is recommended because it is the most tested browser being used by the development team and power users.

Follow the installation wizards to install the latest NodeJS and Git. Make sure to follow all the default and recommended settings while installing Git. If desired also install Chrome.

- [Node.js download page](https://nodejs.org/en/download/)

- [Git download page](https://git-scm.com/downloads)

- [Google Chrome download page](https://www.google.com/chrome/)

If you are running headless (i.e. as a server without a monitor attached) then you do not need to install a web browser and you can follow the tutorial for information on connecting remotely to the server.

&gt; :white_check_mark: **ENVIRONMENT-SPECIFIC NOTES**: Additional notes about installing prerequisites on specific environments, distributions and edge cases can be found in the [Prerequisites Notes](#small_orange_diamond-prerequisites-notes) section in the Appendix. We recommend checking these instructions before installing prerequisites manually from the above websites.

&gt; :white_check_mark: **TENSORFLOW NOTE**: If you wish to test the (partial and incomplete) TensorFlow integration, you will also need Python 3.

### :two: Get Your Github.com Personal Access Token

You will need to get an access token from Github.com so that you may authenticate with the service from within the app and the terminal/command line.

If you don&#039;t have a Github.com account, please open one! Once you are logged in, go to the [New Github Personal Access Token Page](https://github.com/settings/tokens/new) and create a new token.

Make sure you give it the repo and workflow scopes. Check the clip below for clarity:

![github-personal-access-token](https://user-images.githubusercontent.com/13994516/161605002-734ddc2a-9cb1-49ec-ac6a-d127850ab64a.gif)

Once you get the token, copy it and save it somewhere on your local machine. You will need it for later steps of the installation process and from time to time also when using Superalgos.

## Superalgos Platform Client Installation

Now that you have all the prerequisites and optional environment configurations set up, we can get to the core installation of Superalgos!

There are four steps required to install Superalgos:

1. Fork the Superalgos Repository

2. Clone Your Fork

3. Install Node Dependencies

4. Install Community Plugins 

Let&#039;s get on with it!

### :one: Fork the Superalgos Repository

Scroll this page to the top. Find and click the **Fork** button to create your fork/copy of this repository. 

&gt; :white_check_mark: **NOTE**: On the page that opens when you click the fork button, Github gives you the option to fork only the master branch by default. You must remove the selection so that you fork all branches instead. Play the following video for clarity.

![fork](https://user-images.githubusercontent.com/83468174/184506791-83a00c44-ddc4-4fa3-9bec-d738532555d7.gif)

To fork Superalgos, you need a Github account. If you don&#039;t have one, go ahead and create it. This was one of the listed pre-requirements.

&gt; :white_check_mark: **NOTE**: A Fork is required so that the setup scripts may build the app from multiple repositories, and also for your contributions to the project. The reason why Superalgos is free and open-source is that the project has set up a collective business in which all users may participate. The way to participate is to [contribute](https://superalgos.org/community-contribute.shtml) to making Superalgos better. The project&#039;s [native SA token](https://superalgos.org/token-overview.shtml) is distributed among contributors as rewards for the value each adds to the project.

### :two: Clone Your Fork

&gt; :white_check_mark: **NOTE**: You will need your Github username and the API token you created earlier.

Once the fork is created, you will land on the page of your fork. Copy the complete URL from your browser&#039;s address bar.

&gt; :white_check_mark: **NOTE**: Notice it is your fork you will be cloning, not the upstream repository.

In your computer/laptop/server, open a command prompt or terminal. Make sure you are in a directory where you have write permissions. 

&gt; :white_check_mark: **NOTE**: On most systems, the terminal will open in your user&#039;s home directory. It&#039;s better to install Superalgos in the root folder of any of your drives, or at least in a path that is not too long. Some systems may experience issues with long paths.

Clone the git repository using the command:

```sh
git clone &lt;URL of your Superalgos fork&gt;
```

For example, if your Github username is John, the command will look like this:

```sh
git clone https://github.com/John/Superalgos
```

This creates the `Superalgos` folder in the current directory, which contains the whole installation.

### :three: Install Node Dependencies

After the Superalgos directory has been installed, you need to set up the necessary node dependencies. In the same command prompt or terminal you just used, type the following:

```sh
cd Superalgos
```

That should take you inside the Superalgos folder created by the `git clone` command earlier. The `node setup` command installs the dependencies (notice there are a few options you may use).

```sh
node setup
```

Available Options:

```sh
node setup &lt;options&gt;
```

| Option | Description |
| --- | --- |
| `shortcuts` | Use this option to create desktop shortcuts. Otherwise, you will launch the app from the command line/terminal. |
| `tensorflow` | Use this option to include the TensorFlow dependencies, only if you intend to test the (partial and incomplete) TensorFlow integration. |

If you experience any issues installing dependencies, check the [Troubleshooting Dependencies Installation](#small_orange_diamond-troubleshooting-dependencies-installation) section in the Appendix below.

### :four: Install Community Plugins 

Before using the software, you will need to install the plugins built by the community. To do so, just run this command from the Superalgos main folder:

```sh
node setupPlugins &lt;Your-Github-Username&gt; &lt;Your-Github-Personal-Access-Token&gt;
```

For example:

```sh
node setupPlugins John ghz_2pBD4Sas0iYtwQGPjTq1Xlm3Ot4KpH3RLcr5
```

&gt; :white_check_mark: **NOTE**: This is the token you created during earlier steps!

This script is going to fork all Community Plugins repositories into your own Github account, and then it will clone each of these repositories into your local `Superalgos/Plugins` folder. The process is designed in a way that if someday a new type of plugin is added, you just need to run this command again and it will fork the new repo and clone it. This script will also find any missing forks needed and clone them too. You are safe running this script whenever you think is good.

&gt; :white_check_mark: **NOTE**: If you ever have issues with your Plugins repos, you can delete individual folders inside `Superalgos/Plugins` and run this script to fix the problems for you. Also, if you have any issues with any of your plugin forks in your Github account, you can delete the offending fork and run this script again to fix the problem. 

**Congratulations! Your setup is complete. Now you may finally run the app for the first time. Please, follow the usage instructions below!**

### **OPTIONAL:** Update Forked Repositories from The Superalgos Upstream Repositories

In case you are re-installing the platform from an older fork, you may want to update your fork&#039;s repositories.

Prerequisites:
`node setup` and `node setupPlugins` commands must be executed beforehand.

```sh
node updateGithubRepos
```

# :small_orange_diamond: Usage

## Run the Client and GUI

### Using the shortcuts

If you ran `node setup shortcuts` while installing dependencies, then you should have a desktop icon that you can double-click to launch the Superalgos application. A terminal window will show the server is running, and a browser window will open with the GUI.

### Using the Command Line

To run Superalgos, go to the Superalgos directory/folder and run this command:

```sh
node platform
```

Options usage:

```sh
node platform &lt;options&gt; &lt;project&gt; &lt;workspace&gt;
```

| Option | Description |
| --- | --- |
| `minMemo` | Run with minimal memory footprint. This is critical for running on platforms with 8GB of RAM or less, like a Raspberry Pi. |
| `noBrowser` | Do not open the GUI in a browser. This is useful on headless servers where a UI is not available. |

To load a specific workspace on launch, add any option you may require, then the project, then the workspace. For example, to load the Blank-Template workspace of the Foundations project with no options:

```sh
node platform Foundations Blank-Template
```

The Client will run on your terminal and the GUI will launch on your default browser. If Chrome/Safari is not your default browser, copy the URL, close the browser, open Chrome/Safari, and paste the URL. Be patient... it takes a few seconds to fully load the GUI.

## Usage Notes

We are testing the UI on Google Chrome and Safari on macOS only. It may work on other browsers as well — or not. If you are running on a different browser and ever need support, make sure you mention that fact upfront, or even better, try on Chrome/Safari first.

&gt; :white_check_mark: **TIP**: If your computer has 8 GB of RAM or less, use `node platform minMemo` to run the system with minimal RAM requirements.

# :small_orange_diamond: Uninstall

Superalgos writes nothing outside of the `Superalgos` folder other than shortcut files. To quickly remove the shortcut files, open a terminal or command prompt, navigate to your main Superalgos directory, and type the following command:

```sh
node uninstall
```

Then simply delete the `Superalgos` folder to completely remove the application.

# :small_orange_diamond: Get In Touch!

&gt; :warning: **BEWARE OF IMPERSONATORS — SCAMMERS ARE LURKING!**
&gt;
&gt; Superalgos Admins, the Founding Team, and Community Mods will never contact you directly unless you contact them first. We will never ask you for API keys, coins, or cash. We will never ask you to trust us in any way. Our [Community Safety Policy](https://superalgos.org/community-safety-policy.shtml) explains why. 
&gt; 
&gt; **In short, we want to make it clear that if someone contacts you directly claiming to work with or for the project, it is a scam.**
&gt;
&gt; Please report scammers in the Community group so that they may be banned and to increase awareness of the problem, but also block them and report them to Telegram if the option is available.

We just opened a brand new [Discord server for Support and the Community](https://discord.gg/CGeKC6WQQb).

That said, support questions tend to get faster responses in the [Support Telegram Group](https://t.me/superalgossupport).

We also meet on other [Telegram groups](https://superalgos.org/community-join.shtml), where it all started!

# :small_orange_diamond: Other Resources

- Web Site

  - For an overview of what Superalgos can do for you, check the [Superalgos Website](https://superalgos.org/).

  - [List of community resources](https://superalgos.org/community-resources.shtml) featuring written, audiovisual, and interactive content.

- Telegram

  - For official

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[gradio-app/fastrtc]]></title>
            <link>https://github.com/gradio-app/fastrtc</link>
            <guid>https://github.com/gradio-app/fastrtc</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:37 GMT</pubDate>
            <description><![CDATA[The python library for real-time communication]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/gradio-app/fastrtc">gradio-app/fastrtc</a></h1>
            <p>The python library for real-time communication</p>
            <p>Language: JavaScript</p>
            <p>Stars: 3,607</p>
            <p>Forks: 313</p>
            <p>Stars today: 36 stars today</p>
            <h2>README</h2><pre>&lt;div style=&#039;text-align: center; margin-bottom: 1rem; display: flex; justify-content: center; align-items: center;&#039;&gt;
    &lt;h1 style=&#039;color: white; margin: 0;&#039;&gt;FastRTC&lt;/h1&gt;
    &lt;img src=&#039;https://huggingface.co/datasets/freddyaboulton/bucket/resolve/main/fastrtc_logo_small.png&#039;
         alt=&quot;FastRTC Logo&quot; 
         style=&quot;margin-right: 10px;&quot;&gt;
&lt;/div&gt;

&lt;div style=&quot;display: flex; flex-direction: row; justify-content: center&quot;&gt;
&lt;img style=&quot;display: block; padding-right: 5px; height: 20px;&quot; alt=&quot;Static Badge&quot; src=&quot;https://img.shields.io/pypi/v/fastrtc&quot;&gt; 
&lt;a href=&quot;https://github.com/gradio-app/fastrtc&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Static Badge&quot; src=&quot;https://img.shields.io/badge/github-white?logo=github&amp;logoColor=black&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;h3 style=&#039;text-align: center&#039;&gt;
The Real-Time Communication Library for Python. 
&lt;/h3&gt;

Turn any python function into a real-time audio and video stream over WebRTC or WebSockets.

## Installation

```bash
pip install fastrtc
```

to use built-in pause detection (see [ReplyOnPause](https://fastrtc.org/userguide/audio/#reply-on-pause)), and text to speech (see [Text To Speech](https://fastrtc.org/userguide/audio/#text-to-speech)), install the `vad` and `tts` extras:

```bash
pip install &quot;fastrtc[vad, tts]&quot;
```

## Key Features

- 🗣️ Automatic Voice Detection and Turn Taking built-in, only worry about the logic for responding to the user.
- 💻 Automatic UI - Use the `.ui.launch()` method to launch the webRTC-enabled built-in Gradio UI.
- 🔌 Automatic WebRTC Support - Use the `.mount(app)` method to mount the stream on a FastAPI app and get a webRTC endpoint for your own frontend! 
- ⚡️ Websocket Support - Use the `.mount(app)` method to mount the stream on a FastAPI app and get a websocket endpoint for your own frontend! 
- 📞 Automatic Telephone Support - Use the `fastphone()` method of the stream to launch the application and get a free temporary phone number!
- 🤖 Completely customizable backend - A `Stream` can easily be mounted on a FastAPI app so you can easily extend it to fit your production application. See the [Talk To Claude](https://huggingface.co/spaces/fastrtc/talk-to-claude) demo for an example on how to serve a custom JS frontend.

## Docs

[https://fastrtc.org](https://fastrtc.org)

## Examples
See the [Cookbook](https://fastrtc.org/cookbook/) for examples of how to use the library.

&lt;table&gt;
&lt;tr&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🗣️👀 Gemini Audio Video Chat&lt;/h3&gt;
&lt;p&gt;Stream BOTH your webcam video and audio feeds to Google Gemini. You can also upload images to augment your conversation!&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/9636dc97-4fee-46bb-abb8-b92e69c08c71&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/freddyaboulton/gemini-audio-video-chat&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/freddyaboulton/gemini-audio-video-chat/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🗣️ Google Gemini Real Time Voice API&lt;/h3&gt;
&lt;p&gt;Talk to Gemini in real time using Google&#039;s voice API.&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/ea6d18cb-8589-422b-9bba-56332d9f61de&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/talk-to-gemini&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/talk-to-gemini/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🗣️ OpenAI Real Time Voice API&lt;/h3&gt;
&lt;p&gt;Talk to ChatGPT in real time using OpenAI&#039;s voice API.&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/178bdadc-f17b-461a-8d26-e915c632ff80&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/talk-to-openai&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/talk-to-openai/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🤖 Hello Computer&lt;/h3&gt;
&lt;p&gt;Say computer before asking your question!&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/afb2a3ef-c1ab-4cfb-872d-578f895a10d5&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/hello-computer&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/hello-computer/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🤖 Llama Code Editor&lt;/h3&gt;
&lt;p&gt;Create and edit HTML pages with just your voice! Powered by SambaNova systems.&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/98523cf3-dac8-4127-9649-d91a997e3ef5&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/llama-code-editor&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/llama-code-editor/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🗣️ Talk to Claude&lt;/h3&gt;
&lt;p&gt;Use the Anthropic and Play.Ht APIs to have an audio conversation with Claude.&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/fb6ef07f-3ccd-444a-997b-9bc9bdc035d3&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/talk-to-claude&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/talk-to-claude/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🎵 Whisper Transcription&lt;/h3&gt;
&lt;p&gt;Have whisper transcribe your speech in real time!&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/87603053-acdc-4c8a-810f-f618c49caafb&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/whisper-realtime&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/whisper-realtime/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;📷 Yolov10 Object Detection&lt;/h3&gt;
&lt;p&gt;Run the Yolov10 model on a user webcam stream in real time!&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/f82feb74-a071-4e81-9110-a01989447ceb&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/object-detection&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/fastrtc/object-detection/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🗣️ Kyutai Moshi&lt;/h3&gt;
&lt;p&gt;Kyutai&#039;s moshi is a novel speech-to-speech model for modeling human conversations.&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/becc7a13-9e89-4a19-9df2-5fb1467a0137&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/freddyaboulton/talk-to-moshi&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/freddyaboulton/talk-to-moshi/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;50%&quot;&gt;
&lt;h3&gt;🗣️ Hello Llama: Stop Word Detection&lt;/h3&gt;
&lt;p&gt;A code editor built with Llama 3.3 70b that is triggered by the phrase &quot;Hello Llama&quot;. Build a Siri-like coding assistant in 100 lines of code!&lt;/p&gt;
&lt;video width=&quot;100%&quot; src=&quot;https://github.com/user-attachments/assets/3e10cb15-ff1b-4b17-b141-ff0ad852e613&quot; controls&gt;&lt;/video&gt;
&lt;p&gt;
&lt;a href=&quot;https://huggingface.co/spaces/freddyaboulton/hey-llama-code-editor&quot;&gt;Demo&lt;/a&gt; |
&lt;a href=&quot;https://huggingface.co/spaces/freddyaboulton/hey-llama-code-editor/blob/main/app.py&quot;&gt;Code&lt;/a&gt;
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

## Usage

This is an shortened version of the official [usage guide](https://freddyaboulton.github.io/gradio-webrtc/user-guide/). 

- `.ui.launch()`: Launch a built-in UI for easily testing and sharing your stream. Built with [Gradio](https://www.gradio.app/).
- `.fastphone()`: Get a free temporary phone number to call into your stream. Hugging Face token required.
- `.mount(app)`: Mount the stream on a [FastAPI](https://fastapi.tiangolo.com/) app. Perfect for integrating with your already existing production system.


## Quickstart

### Echo Audio

```python
from fastrtc import Stream, ReplyOnPause
import numpy as np

def echo(audio: tuple[int, np.ndarray]):
    # The function will be passed the audio until the user pauses
    # Implement any iterator that yields audio
    # See &quot;LLM Voice Chat&quot; for a more complete example
    yield audio

stream = Stream(
    handler=ReplyOnPause(echo),
    modality=&quot;audio&quot;, 
    mode=&quot;send-receive&quot;,
)
```

### LLM Voice Chat

```py
from fastrtc import (
    ReplyOnPause, AdditionalOutputs, Stream,
    audio_to_bytes, aggregate_bytes_to_16bit
)
import gradio as gr
from groq import Groq
import anthropic
from elevenlabs import ElevenLabs

groq_client = Groq()
claude_client = anthropic.Anthropic()
tts_client = ElevenLabs()


# See &quot;Talk to Claude&quot; in Cookbook for an example of how to keep 
# track of the chat history.
def response(
    audio: tuple[int, np.ndarray],
):
    prompt = groq_client.audio.transcriptions.create(
        file=(&quot;audio-file.mp3&quot;, audio_to_bytes(audio)),
        model=&quot;whisper-large-v3-turbo&quot;,
        response_format=&quot;verbose_json&quot;,
    ).text
    response = claude_client.messages.create(
        model=&quot;claude-3-5-haiku-20241022&quot;,
        max_tokens=512,
        messages=[{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: prompt}],
    )
    response_text = &quot; &quot;.join(
        block.text
        for block in response.content
        if getattr(block, &quot;type&quot;, None) == &quot;text&quot;
    )
    iterator = tts_client.text_to_speech.convert_as_stream(
        text=response_text,
        voice_id=&quot;JBFqnCBsd6RMkjVDRZzb&quot;,
        model_id=&quot;eleven_multilingual_v2&quot;,
        output_format=&quot;pcm_24000&quot;
        
    )
    for chunk in aggregate_bytes_to_16bit(iterator):
        audio_array = np.frombuffer(chunk, dtype=np.int16).reshape(1, -1)
        yield (24000, audio_array)

stream = Stream(
    modality=&quot;audio&quot;,
    mode=&quot;send-receive&quot;,
    handler=ReplyOnPause(response),
)
```

### Webcam Stream

```python
from fastrtc import Stream
import numpy as np


def flip_vertically(image):
    return np.flip(image, axis=0)


stream = Stream(
    handler=flip_vertically,
    modality=&quot;video&quot;,
    mode=&quot;send-receive&quot;,
)
```

### Object Detection

```python
from fastrtc import Stream
import gradio as gr
import cv2
from huggingface_hub import hf_hub_download
from .inference import YOLOv10

model_file = hf_hub_download(
    repo_id=&quot;onnx-community/yolov10n&quot;, filename=&quot;onnx/model.onnx&quot;
)

# git clone https://huggingface.co/spaces/fastrtc/object-detection
# for YOLOv10 implementation
model = YOLOv10(model_file)

def detection(image, conf_threshold=0.3):
    image = cv2.resize(image, (model.input_width, model.input_height))
    new_image = model.detect_objects(image, conf_threshold)
    return cv2.resize(new_image, (500, 500))

stream = Stream(
    handler=detection,
    modality=&quot;video&quot;, 
    mode=&quot;send-receive&quot;,
    additional_inputs=[
        gr.Slider(minimum=0, maximum=1, step=0.01, value=0.3)
    ]
)
```

## Running the Stream

Run:

### Gradio

```py
stream.ui.launch()
```

### Telephone (Audio Only)

    ```py
    stream.fastphone()
    ```

### FastAPI

```py
app = FastAPI()
stream.mount(app)

# Optional: Add routes
@app.get(&quot;/&quot;)
async def _():
    return HTMLResponse(content=open(&quot;index.html&quot;).read())

# uvicorn app:app --host 0.0.0.0 --port 8000
```
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[CodeWithHarry/Sigma-Web-Dev-Course]]></title>
            <link>https://github.com/CodeWithHarry/Sigma-Web-Dev-Course</link>
            <guid>https://github.com/CodeWithHarry/Sigma-Web-Dev-Course</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:36 GMT</pubDate>
            <description><![CDATA[Source Code for Sigma Web Development Course]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/CodeWithHarry/Sigma-Web-Dev-Course">CodeWithHarry/Sigma-Web-Dev-Course</a></h1>
            <p>Source Code for Sigma Web Development Course</p>
            <p>Language: JavaScript</p>
            <p>Stars: 8,125</p>
            <p>Forks: 2,451</p>
            <p>Stars today: 20 stars today</p>
            <h2>README</h2><pre># Welcome to Sigma&#039;s Web Development Course - Hindi Web Development Tutorials! 🚀

## What&#039;s Inside:

If you&#039;ve been itching to dive into the world of web development but feel lost in a sea of English tutorials, you&#039;re in the right place! Our course is exclusively in Hindi and is crafted to guide you from being an absolute beginner to a seasoned pro, one step at a time.

## Who Can Benefit?

### This course is a perfect fit for:

1. Beginners eager to start their web development journey
2. Intermediate developers looking to refine their skills
3. Individuals who prefer learning in Hindi

## What You&#039;ll Master:

### During this course, you&#039;ll delve into:

1. The fundamentals of HTML, CSS, and JavaScript
2. Both front-end and back-end development
3. How to seamlessly integrate databases
4. Real-world project implementation
5. And a whole lot more!

## The Schedule:

We&#039;re committed to your growth. Expect fresh source code additions nearly every day. Keep up the pace with our schedule and watch your skills soar! 📅

Get ready to embark on an exciting coding journey! 👨‍💻🌟

Ready to start? [Click here](https://www.youtube.com/playlist?list=PLu0W_9lII9agq5TrH9XLIKQvv0iaF2X3w) to access the complete YouTube playlist.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[trekhleb/javascript-algorithms]]></title>
            <link>https://github.com/trekhleb/javascript-algorithms</link>
            <guid>https://github.com/trekhleb/javascript-algorithms</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:35 GMT</pubDate>
            <description><![CDATA[📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/trekhleb/javascript-algorithms">trekhleb/javascript-algorithms</a></h1>
            <p>📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings</p>
            <p>Language: JavaScript</p>
            <p>Stars: 190,974</p>
            <p>Forks: 30,644</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre># JavaScript Algorithms and Data Structures

&gt; 🇺🇦 UKRAINE [IS BEING ATTACKED](https://war.ukraine.ua/) BY RUSSIAN ARMY. CIVILIANS ARE GETTING KILLED. RESIDENTIAL AREAS ARE GETTING BOMBED.
&gt; - Help Ukraine via:
&gt;   - [Serhiy Prytula Charity Foundation](https://prytulafoundation.org/en/)
&gt;   - [Come Back Alive Charity Foundation](https://savelife.in.ua/en/donate-en/)
&gt;   - [National Bank of Ukraine](https://bank.gov.ua/en/news/all/natsionalniy-bank-vidkriv-spetsrahunok-dlya-zboru-koshtiv-na-potrebi-armiyi)
&gt; - More info on [war.ukraine.ua](https://war.ukraine.ua/) and [MFA of Ukraine](https://twitter.com/MFA_Ukraine)

&lt;hr/&gt;

[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)
[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)
![repo size](https://img.shields.io/github/repo-size/trekhleb/javascript-algorithms.svg)

This repository contains JavaScript based examples of many
popular algorithms and data structures.

Each algorithm and data structure has its own separate README
with related explanations and links for further reading (including ones
to YouTube videos).

_Read this in other languages:_
[_简体中文_](README.zh-CN.md),
[_繁體中文_](README.zh-TW.md),
[_한국어_](README.ko-KR.md),
[_日本語_](README.ja-JP.md),
[_Polski_](README.pl-PL.md),
[_Français_](README.fr-FR.md),
[_Español_](README.es-ES.md),
[_Português_](README.pt-BR.md),
[_Русский_](README.ru-RU.md),
[_Türkçe_](README.tr-TR.md),
[_Italiano_](README.it-IT.md),
[_Bahasa Indonesia_](README.id-ID.md),
[_Українська_](README.uk-UA.md),
[_Arabic_](README.ar-AR.md),
[_Tiếng Việt_](README.vi-VN.md),
[_Deutsch_](README.de-DE.md),
[_Uzbek_](README.uz-UZ.md),
[_עברית_](README.he-IL.md)

*☝ Note that this project is meant to be used for learning and researching purposes
only, and it is **not** meant to be used for production.*

## Data Structures

A data structure is a particular way of organizing and storing data in a computer so that it can
be accessed and modified efficiently. More precisely, a data structure is a collection of data
values, the relationships among them, and the functions or operations that can be applied to
the data.

Remember that each data has its own trade-offs. And you need to pay attention more to why you&#039;re choosing a certain data structure than to how to implement it.

`B` - Beginner, `A` - Advanced

* `B` [Linked List](src/data-structures/linked-list)
* `B` [Doubly Linked List](src/data-structures/doubly-linked-list)
* `B` [Queue](src/data-structures/queue)
* `B` [Stack](src/data-structures/stack)
* `B` [Hash Table](src/data-structures/hash-table)
* `B` [Heap](src/data-structures/heap) - max and min heap versions
* `B` [Priority Queue](src/data-structures/priority-queue)
* `A` [Trie](src/data-structures/trie)
* `A` [Tree](src/data-structures/tree)
  * `A` [Binary Search Tree](src/data-structures/tree/binary-search-tree)
  * `A` [AVL Tree](src/data-structures/tree/avl-tree)
  * `A` [Red-Black Tree](src/data-structures/tree/red-black-tree)
  * `A` [Segment Tree](src/data-structures/tree/segment-tree) - with min/max/sum range queries examples
  * `A` [Fenwick Tree](src/data-structures/tree/fenwick-tree) (Binary Indexed Tree)
* `A` [Graph](src/data-structures/graph) (both directed and undirected)
* `A` [Disjoint Set](src/data-structures/disjoint-set) - a union–find data structure or merge–find set
* `A` [Bloom Filter](src/data-structures/bloom-filter)
* `A` [LRU Cache](src/data-structures/lru-cache/) - Least Recently Used (LRU) cache

## Algorithms

An algorithm is an unambiguous specification of how to solve a class of problems. It is
a set of rules that precisely define a sequence of operations.

`B` - Beginner, `A` - Advanced

### Algorithms by Topic

* **Math**
  * `B` [Bit Manipulation](src/algorithms/math/bits) - set/get/update/clear bits, multiplication/division by two, make negative etc.
  * `B` [Binary Floating Point](src/algorithms/math/binary-floating-point) - binary representation of the floating-point numbers.
  * `B` [Factorial](src/algorithms/math/factorial)
  * `B` [Fibonacci Number](src/algorithms/math/fibonacci) - classic and closed-form versions
  * `B` [Prime Factors](src/algorithms/math/prime-factors) - finding prime factors and counting them using Hardy-Ramanujan&#039;s theorem
  * `B` [Primality Test](src/algorithms/math/primality-test) (trial division method)
  * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)
  * `B` [Least Common Multiple](src/algorithms/math/least-common-multiple) (LCM)
  * `B` [Sieve of Eratosthenes](src/algorithms/math/sieve-of-eratosthenes) - finding all prime numbers up to any given limit
  * `B` [Is Power of Two](src/algorithms/math/is-power-of-two) - check if the number is power of two (naive and bitwise algorithms)
  * `B` [Pascal&#039;s Triangle](src/algorithms/math/pascal-triangle)
  * `B` [Complex Number](src/algorithms/math/complex-number) - complex numbers and basic operations with them
  * `B` [Radian &amp; Degree](src/algorithms/math/radian) - radians to degree and backwards conversion
  * `B` [Fast Powering](src/algorithms/math/fast-powering)
  * `B` [Horner&#039;s method](src/algorithms/math/horner-method) - polynomial evaluation
  * `B` [Matrices](src/algorithms/math/matrix) - matrices and basic matrix operations (multiplication, transposition, etc.)
  * `B` [Euclidean Distance](src/algorithms/math/euclidean-distance) - distance between two points/vectors/matrices
  * `A` [Integer Partition](src/algorithms/math/integer-partition)
  * `A` [Square Root](src/algorithms/math/square-root) - Newton&#039;s method
  * `A` [Liu Hui π Algorithm](src/algorithms/math/liu-hui) - approximate π calculations based on N-gons
  * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - decompose a function of time (a signal) into the frequencies that make it up
* **Sets**
  * `B` [Cartesian Product](src/algorithms/sets/cartesian-product) - product of multiple sets
  * `B` [Fisher–Yates Shuffle](src/algorithms/sets/fisher-yates) - random permutation of a finite sequence
  * `A` [Power Set](src/algorithms/sets/power-set) - all subsets of a set (bitwise, backtracking, and cascading solutions)
  * `A` [Permutations](src/algorithms/sets/permutations) (with and without repetitions)
  * `A` [Combinations](src/algorithms/sets/combinations) (with and without repetitions)
  * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS)
  * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence)
  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence) (SCS)
  * `A` [Knapsack Problem](src/algorithms/sets/knapsack-problem) - &quot;0/1&quot; and &quot;Unbound&quot; ones
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray) - &quot;Brute Force&quot; and &quot;Dynamic Programming&quot; (Kadane&#039;s) versions
  * `A` [Combination Sum](src/algorithms/sets/combination-sum) - find all combinations that form specific sum
* **Strings**
  * `B` [Hamming Distance](src/algorithms/string/hamming-distance) - number of positions at which the symbols are different
  * `B` [Palindrome](src/algorithms/string/palindrome) - check if the string is the same in reverse
  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - minimum edit distance between two sequences
  * `A` [Knuth–Morris–Pratt Algorithm](src/algorithms/string/knuth-morris-pratt) (KMP Algorithm) - substring search (pattern matching)
  * `A` [Z Algorithm](src/algorithms/string/z-algorithm) - substring search (pattern matching)
  * `A` [Rabin Karp Algorithm](src/algorithms/string/rabin-karp) - substring search
  * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring)
  * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching)
* **Searches**
  * `B` [Linear Search](src/algorithms/search/linear-search)
  * `B` [Jump Search](src/algorithms/search/jump-search) (or Block Search) - search in sorted array
  * `B` [Binary Search](src/algorithms/search/binary-search) - search in sorted array
  * `B` [Interpolation Search](src/algorithms/search/interpolation-search) - search in uniformly distributed sorted array
* **Sorting**
  * `B` [Bubble Sort](src/algorithms/sorting/bubble-sort)
  * `B` [Selection Sort](src/algorithms/sorting/selection-sort)
  * `B` [Insertion Sort](src/algorithms/sorting/insertion-sort)
  * `B` [Heap Sort](src/algorithms/sorting/heap-sort)
  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)
  * `B` [Quicksort](src/algorithms/sorting/quick-sort) - in-place and non-in-place implementations
  * `B` [Shellsort](src/algorithms/sorting/shell-sort)
  * `B` [Counting Sort](src/algorithms/sorting/counting-sort)
  * `B` [Radix Sort](src/algorithms/sorting/radix-sort)
  * `B` [Bucket Sort](src/algorithms/sorting/bucket-sort)
* **Linked Lists**
  * `B` [Straight Traversal](src/algorithms/linked-list/traversal)
  * `B` [Reverse Traversal](src/algorithms/linked-list/reverse-traversal)
* **Trees**
  * `B` [Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)
  * `B` [Breadth-First Search](src/algorithms/tree/breadth-first-search) (BFS)
* **Graphs**
  * `B` [Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)
  * `B` [Breadth-First Search](src/algorithms/graph/breadth-first-search) (BFS)
  * `B` [Kruskal’s Algorithm](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - finding the shortest paths to all graph vertices from single vertex
  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - finding the shortest paths to all graph vertices from single vertex
  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - find the shortest paths between all pairs of vertices
  * `A` [Detect Cycle](src/algorithms/graph/detect-cycle) - for both directed and undirected graphs (DFS and Disjoint Set based versions)
  * `A` [Prim’s Algorithm](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Topological Sorting](src/algorithms/graph/topological-sorting) - DFS method
  * `A` [Articulation Points](src/algorithms/graph/articulation-points) - Tarjan&#039;s algorithm (DFS based)
  * `A` [Bridges](src/algorithms/graph/bridges) - DFS based algorithm
  * `A` [Eulerian Path and Eulerian Circuit](src/algorithms/graph/eulerian-path) - Fleury&#039;s algorithm - Visit every edge exactly once
  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once
  * `A` [Strongly Connected Components](src/algorithms/graph/strongly-connected-components) - Kosaraju&#039;s algorithm
  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city
* **Cryptography**
  * `B` [Polynomial Hash](src/algorithms/cryptography/polynomial-hash) - rolling hash function based on polynomial
  * `B` [Rail Fence Cipher](src/algorithms/cryptography/rail-fence-cipher) - a transposition cipher algorithm for encoding messages
  * `B` [Caesar Cipher](src/algorithms/cryptography/caesar-cipher) - simple substitution cipher
  * `B` [Hill Cipher](src/algorithms/cryptography/hill-cipher) - substitution cipher based on linear algebra
* **Machine Learning**
  * `B` [NanoNeuron](https://github.com/trekhleb/nano-neuron) - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)
  * `B` [k-NN](src/algorithms/ml/knn) - k-nearest neighbors classification algorithm
  * `B` [k-Means](src/algorithms/ml/k-means) - k-Means clustering algorithm
* **Image Processing**
  * `B` [Seam Carving](src/algorithms/image-processing/seam-carving) - content-aware image resizing algorithm
* **Statistics**
  * `B` [Weighted Random](src/algorithms/statistics/weighted-random) - select the random item from the list based on items&#039; weights
* **Evolutionary algorithms**
  * `A` [Genetic algorithm](https://github.com/trekhleb/self-parking-car-evolution) - example of how the genetic algorithm may be applied for training the self-parking cars
* **Uncategorized**
  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)
  * `B` [Square Matrix Rotation](src/algorithms/uncategorized/square-matrix-rotation) - in-place algorithm
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game) - backtracking, dynamic programming (top-down + bottom-up) and greedy examples
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths) - backtracking, dynamic programming and Pascal&#039;s Triangle based examples
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem (dynamic programming and brute force versions)
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach to the top (4 solutions)
  * `B` [Best Time To Buy Sell Stocks](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - divide and conquer and one-pass examples
  * `B` [Valid Parentheses](src/algorithms/stack/valid-parentheses) - check if a string has valid parentheses (using stack)
  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)
  * `A` [Knight&#039;s Tour](src/algorithms/uncategorized/knight-tour)

### Algorithms by Paradigm

An algorithmic paradigm is a generic method or approach which underlies the design of a class
of algorithms. It is an abstraction higher than the notion of an algorithm, just as an
algorithm is an abstraction higher than a computer program.

* **Brute Force** - look at all the possibilities and selects the best solution
  * `B` [Linear Search](src/algorithms/search/linear-search)
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach the top
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city
  * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - decompose a function of time (a signal) into the frequencies that make it up
* **Greedy** - choose the best option at the current time, without any consideration for the future
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `A` [Unbound Knapsack Problem](src/algorithms/sets/knapsack-problem)
  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - finding the shortest path to all graph vertices
  * `A` [Prim’s Algorithm](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph
  * `A` [Kruskal’s Algorithm](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph
* **Divide and Conquer** - divide the problem into smaller parts and then solve those parts
  * `B` [Binary Search](src/algorithms/search/binary-search)
  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)
  * `B` [Pascal&#039;s Triangle](src/algorithms/math/pascal-triangle)
  * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)
  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)
  * `B` [Quicksort](src/algorithms/sorting/quick-sort)
  * `B` [Tree Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)
  * `B` [Graph Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)
  * `B` [Matrices](src/algorithms/math/matrix) - generating and traversing the matrices of different shapes
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Fast Powering](src/algorithms/math/fast-powering)
  * `B` [Best Time To Buy Sell Stocks](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - divide and conquer and one-pass examples
  * `A` [Permutations](src/algorithms/sets/permutations) (with and without repetitions)
  * `A` [Combinations](src/algorithms/sets/combinations) (with and without repetitions)
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
* **Dynamic Programming** - build up a solution using previously found sub-solutions
  * `B` [Fibonacci Number](src/algorithms/math/fibonacci)
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)
  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem
  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach the top
  * `B` [Seam Carving](src/algorithms/image-processing/seam-carving) - content-aware image resizing algorithm
  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - minimum edit distance between two sequences
  * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS)
  * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring)
  * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence)
  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence)
  * `A` [0/1 Knapsack Problem](src/algorithms/sets/knapsack-problem)
  * `A` [Integer Partition](src/algorithms/math/integer-partition)
  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)
  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - finding the shortest path to all graph vertices
  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - find the shortest paths between all pairs of vertices
  * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching)
* **Backtracking** - similarly to brute force, try to generate all possible solutions, but each time you generate the next solution, you test
if it satisfies all conditions and only then continue generating subsequent solutions. Otherwise, backtrack and go on a
different path to finding a solution. Normally the DFS traversal of state-space is being used.
  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)
  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)
  * `B` [Power Set](src/algorithms/sets/power-set) - all subsets of a set
  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once
  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)
  * `A` [Knight&#039;s Tour](src/algorithms/uncategorized/knight-tour)
  * `A` [Combination Sum](src/algorithms/sets/combination-sum) - find all combinations that form specific sum
* **Branch &amp; Bound** - remember the lowest-cost solution found at each stage of the backtracking
search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of
a least-cost solution to the problem in order to discard partial solutions with costs larger than the
lowest-cost solution found so far. Normally, BFS traversal in combination with DFS traversal of state-space
tree is being used.

## How to use this repository

**Install all dependencies**

```
npm install
```

**Run ESLint**

You may want to run it to check code quality.

```
npm run lint
```

**Run all tests**

```
npm test
```

**Run tests by name**

```
npm test -- &#039;LinkedList&#039;
```

**Troubleshooting**

If linting or testing is failing, try to delete the `node_modules` folder and re-install npm packages:

```
rm -rf ./node_modules
npm i
```

Also, make sure that you&#039;re using the correct Node version (`&gt;=16`). If you&#039;re using [nvm](https://github.com/nvm-sh/nvm) for Node version management you may run `nvm use` from the root folde

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[microsoft/monaco-editor]]></title>
            <link>https://github.com/microsoft/monaco-editor</link>
            <guid>https://github.com/microsoft/monaco-editor</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:34 GMT</pubDate>
            <description><![CDATA[A browser based code editor]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/microsoft/monaco-editor">microsoft/monaco-editor</a></h1>
            <p>A browser based code editor</p>
            <p>Language: JavaScript</p>
            <p>Stars: 42,158</p>
            <p>Forks: 3,715</p>
            <p>Stars today: 21 stars today</p>
            <h2>README</h2><pre># Monaco Editor

[![Versions](https://img.shields.io/npm/v/monaco-editor)](https://www.npmjs.com/package/monaco-editor)
[![Versions](https://img.shields.io/npm/v/monaco-editor/next)](https://www.npmjs.com/package/monaco-editor)
[![Feature Requests](https://img.shields.io/github/issues/microsoft/monaco-editor/feature-request.svg)](https://github.com/microsoft/monaco-editor/issues?q=is%3Aopen+is%3Aissue+label%3Afeature-request+sort%3Areactions-%2B1-desc)
[![Bugs](https://img.shields.io/github/issues/microsoft/monaco-editor/bug.svg)](https://github.com/microsoft/monaco-editor/issues?utf8=✓&amp;q=is%3Aissue+is%3Aopen+label%3Abug)

The Monaco Editor is the fully featured code editor from [VS Code](https://github.com/microsoft/vscode). Check out the [VS Code docs](https://code.visualstudio.com/docs/editor/editingevolved) to see some of the supported features.

![image](https://user-images.githubusercontent.com/5047891/94183711-290c0780-fea3-11ea-90e3-c88ff9d21bd6.png)

## Try it out

Try out the editor and see various examples [in our interactive playground](https://microsoft.github.io/monaco-editor/playground.html).

The playground is the best way to learn about how to use the editor, which features is supports, to try out different versions and to create minimal reproducible examples for bug reports.

## Installing

```
&gt; npm install monaco-editor
```

You will get:

- inside `/esm`: ESM version of the editor (compatible with e.g. webpack)
- inside `/dev`: AMD bundled, not minified
- inside `/min`: AMD bundled, and minified
- inside `/min-maps`: source maps for `min`
- `monaco.d.ts`: this specifies the API of the editor (this is what is actually versioned, everything else is considered private and might break with any release).

It is recommended to develop against the `dev` version, and in production to use the `min` version.

## Concepts

Monaco editor is best known for being the text editor that powers VS Code. However, it&#039;s a bit more nuanced. Some basic understanding about the underlying concepts is needed to use Monaco editor effectively.

### Models

Models are at the heart of Monaco editor. It&#039;s what you interact with when managing content. A model represents a file that has been opened. This could represent a file that exists on a file system, but it doesn&#039;t have to. For example, the model holds the text content, determines the language of the content, and tracks the edit history of the content.

### URIs

Each model is identified by a URI. This is why it&#039;s not possible for two models to have the same URI. Ideally when you represent content in Monaco editor, you should think of a virtual file system that matches the files your users are editing. For example, you could use `file:///` as a base path. If a model is created without a URI, its URI will be `inmemory://model/1`. The number increases as more models are created.

### Editors

An editor is a user facing view of the model. This is what gets attached to the DOM and what your users see visually. Typical editor operations are displaying a model, managing the view state, or executing actions or commands.

### Providers

Providers provide smart editor features. For example, this includes completion and hover information. It is not the same as, but often maps to [language server protocol](https://microsoft.github.io/language-server-protocol) features.

Providers work on models. Some smart features depends on the file URI. For example, for TypeScript to resolve imports, or for JSON IntelliSense to determine which JSON schema to apply to which model. So it&#039;s important to choose proper model URIs.

### Disposables

Many Monaco related objects often implement the `.dispose()` method. This method is intended to perform cleanups when a resource is no longer needed. For example, calling `model.dispose()` will unregister it, freeing up the URI for a new model. Editors should be disposed to free up resources and remove their model listeners.

## Documentation

- Learn how to integrate the editor with these [complete samples](./samples/).
  - [Integrate the AMD version](./docs/integrate-amd.md).
  - [Integrate the ESM version](./docs/integrate-esm.md)
- Learn how to use the editor API and try out your own customizations in the [playground](https://microsoft.github.io/monaco-editor/playground.html).
- Explore the [API docs](https://microsoft.github.io/monaco-editor/docs.html) or read them straight from [`monaco.d.ts`](https://github.com/microsoft/monaco-editor/blob/gh-pages/node_modules/monaco-editor/monaco.d.ts).
- Read [this guide](https://github.com/microsoft/monaco-editor/wiki/Accessibility-Guide-for-Integrators) to ensure the editor is accessible to all your users!
- Create a Monarch tokenizer for a new programming language [in the Monarch playground](https://microsoft.github.io/monaco-editor/monarch.html).
- Ask questions on [StackOverflow](https://stackoverflow.com/questions/tagged/monaco-editor)! Search open and closed issues, there are a lot of tips in there!

## Issues

Create [issues](https://github.com/microsoft/monaco-editor/issues) in this repository for anything related to the Monaco Editor. Please search for existing issues to avoid duplicates.

## FAQ

❓ **What is the relationship between VS Code and the Monaco Editor?**

The Monaco Editor is generated straight from VS Code&#039;s sources with some shims around services the code needs to make it run in a web browser outside of its home.

❓ **What is the relationship between VS Code&#039;s version and the Monaco Editor&#039;s version?**

None. The Monaco Editor is a library and it reflects directly the source code.

❓ **I&#039;ve written an extension for VS Code, will it work on the Monaco Editor in a browser?**

No.

&gt; Note: If the extension is fully based on the [LSP](https://microsoft.github.io/language-server-protocol/) and if the language server is authored in JavaScript, then it would be possible.

❓ **Why all these web workers and why should I care?**

Language services create web workers to compute heavy stuff outside of the UI thread. They cost hardly anything in terms of resource overhead and you shouldn&#039;t worry too much about them, as long as you get them to work (see above the cross-domain case).

❓ **What is this `loader.js`? Can I use `require.js`?**

It is an AMD loader that we use in VS Code. Yes.

❓ **I see the warning &quot;Could not create web worker&quot;. What should I do?**

HTML5 does not allow pages loaded on `file://` to create web workers. Please load the editor with a web server on `http://` or `https://` schemes.

❓ **Is the editor supported in mobile browsers or mobile web app frameworks?**

No.

❓ **Why doesn&#039;t the editor support TextMate grammars?**

- Please see https://github.com/bolinfest/monaco-tm which puts together `monaco-editor`, `vscode-oniguruma` and `vscode-textmate` to get TM grammar support in the editor.

## Contributing / Local Development

We are welcoming contributions from the community!
Please see [CONTRIBUTING](./CONTRIBUTING.md) for details how you can contribute effectively, how you can run the editor from sources and how you can debug and fix issues.

## Code of Conduct

This project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.

## License

Licensed under the [MIT](https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt) License.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[swagger-api/swagger-editor]]></title>
            <link>https://github.com/swagger-api/swagger-editor</link>
            <guid>https://github.com/swagger-api/swagger-editor</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:33 GMT</pubDate>
            <description><![CDATA[Swagger Editor]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/swagger-api/swagger-editor">swagger-api/swagger-editor</a></h1>
            <p>Swagger Editor</p>
            <p>Language: JavaScript</p>
            <p>Stars: 9,104</p>
            <p>Forks: 2,296</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre># &lt;img src=&quot;https://raw.githubusercontent.com/swagger-api/swagger.io/wordpress/images/assets/SWE-logo-clr.png&quot; height=&quot;80&quot;&gt;
[![NPM version](https://badge.fury.io/js/swagger-editor.svg)](http://badge.fury.io/js/swagger-editor)
[![Build Status](https://jenkins.swagger.io/buildStatus/icon?job=oss-swagger-editor-master)](https://jenkins.swagger.io/job/oss-swagger-editor-master/)
[![Code Climate](https://codeclimate.com/github/swagger-api/swagger-editor/badges/gpa.svg)](https://codeclimate.com/github/swagger-api/swagger-editor)
[![Build Status](https://jenkins.swagger.io/view/OSS%20-%20JavaScript/job/oss-swagger-editor-master/badge/icon?subject=jenkins%20build)](https://jenkins.swagger.io/view/OSS%20-%20JavaScript/job/oss-swagger-editor-master/)

**⏰️ Looking for the next generation version of Swagger Editor?**

SwaggerEditor is now released under two major release channels:

1. [SwaggerEditor@4](https://github.com/swagger-api/swagger-editor/releases?q=v4&amp;expanded=true) - released from [master](https://github.com/swagger-api/swagger-editor/tree/master) branch and deployed at https://editor.swagger.io/
2. [SwaggerEditor@5](https://github.com/swagger-api/swagger-editor/releases?q=v5&amp;expanded=true) - released from [next](https://github.com/swagger-api/swagger-editor/tree/next) branch and deployed at https://editor-next.swagger.io/

Only **SwaggerEditor@5** supports [OpenAPI 3.1.0](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md). 
SwaggerEditor@4 will not receive OpenAPI 3.1.0 support and is considered legacy at this point.
The plan is to continually migrate fully to SwaggerEditor@5 and deprecate the SwaggerEditor@4 in the future.

---

**🕰️ Looking for the older version of Swagger Editor?** Refer to the [*2.x*](https://github.com/swagger-api/swagger-editor/tree/2.x) or [*3.x*](https://github.com/swagger-api/swagger-editor/tree/3.x) branches.

---

Swagger Editor lets you edit **OpenAPI API definitions** ([OpenAPI 2.0](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/2.0.md) and [OpenAPI 3.0.3](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md)) 
in JSON or YAML format inside your browser and to preview documentations in real time.
Valid OpenAPI definitions can then be generated and used with the full Swagger tooling (code generation, documentation, etc).

As a brand-new version, written from the ground up, there are some known issues and unimplemented features. Check out the [Known Issues](#known-issues) section for more details.

This repository publishes to two different NPM modules:

* [swagger-editor](https://www.npmjs.com/package/swagger-editor) is a traditional npm module intended for use in single-page applications that are capable of resolving dependencies (via Webpack, Browserify, etc).
* [swagger-editor-dist](https://www.npmjs.com/package/swagger-editor-dist) is a dependency-free module that includes everything you need to serve Swagger Editor in a server-side project, or a web project that can&#039;t resolve npm module dependencies.

If you&#039;re building a single-page application, using `swagger-editor` is strongly recommended, since `swagger-editor-dist` is significantly larger.

## Anonymized analytics

Swagger Editor uses [Scarf](https://scarf.sh/) to collect [anonymized installation analytics](https://github.com/scarf-sh/scarf-js?tab=readme-ov-file#as-a-user-of-a-package-using-scarf-js-what-information-does-scarf-js-send-about-me). These analytics help support the maintainers of this library and ONLY run during installation. To [opt out](https://github.com/scarf-sh/scarf-js?tab=readme-ov-file#as-a-user-of-a-package-using-scarf-js-how-can-i-opt-out-of-analytics), you can set the `scarfSettings.enabled` field to `false` in your project&#039;s `package.json`:

```
// package.json
{
  // ...
  &quot;scarfSettings&quot;: {
    &quot;enabled&quot;: false
  }
  // ...
}
```

Alternatively, you can set the environment variable `SCARF_ANALYTICS` to `false` as part of the environment that installs your npm packages, e.g., `SCARF_ANALYTICS=false npm install`.

## Helpful scripts

Any of the scripts below can be run by typing `npm run &lt;script name&gt;` in the project&#039;s root directory.

### Developing
Script name | Description
--- | ---
`dev` | Spawn a hot-reloading dev server on port 3200.
`deps-check` | Generate a size and licensing report on Swagger Editors&#039;s dependencies.
`lint` | Report ESLint style errors and warnings.
`lint-errors` | Report ESLint style errors, without warnings.
`lint-fix` | Attempt to fix style errors automatically.
`watch` | Rebuild the core files in `/dist` when the source code changes. Useful for `npm link`.

### Building
Script name | Description
--- | ---
`build` | Build a new set of JS and CSS assets, and output them to `/dist`.
`build:bundle` | Build `swagger-editor-bundle.js` only (commonJS).
`build:core` | Build `swagger-editor.(js\|css)` only (commonJS).
`build:standalone` | Build `swagger-editor-standalone-preset.js` only (commonJS).
`build:stylesheets` | Build `swagger-editor.css` only.
`build:es:bundle` | Build `swagger-editor-es-bundle.js` only (es2015).
`build:es:bundle:core` | Build `swagger-editor-es-bundle-core.js` only (es2015).

### Testing
Script name | Description
--- | ---
`test` | Run unit tests in Node, run Cypress end-to-end tests, and run ESLint in errors-only mode.
`test:unit-mocha` | Run Mocha-based unit tests in Node.
`test:unit-jest` | Run Jest-based unit tests in Node.
`e2e` | Run end-to-end browser tests with Cypress.
`lint` | Run ESLint test
`test:artifact` | Run list of bundle artifact tests in Jest
`test:artifact:umd:bundle` | Run unit test that confirms `swagger-editor-bundle` exports as a Function
`test:artifact:es:bundle` | Run unit test that confirms `swagger-editor-es-bundle` exports as a Function
`test:artifact:es:bundle:core` | Run unit test that confirms `swagger-editor-es-bundle-core` exports as a Function


## Running locally

### Prerequisites

- git, any version
- **Node.js &gt;=20.3.0** and **npm &gt;=9.6.7** are the minimum required versions that this repo runs on, but we always recommend using the latest version of Node.js.

```shell
 $ npm i --legacy-peer-deps
```

If you have Node.js and npm installed, you can run `npm start` to spin up a static server.

Otherwise, you can open `index.html` directly from your filesystem in your browser.

If you&#039;d like to make code changes to Swagger Editor, you can start up a Webpack hot-reloading dev server via `npm run dev`.

##### Browser support

Swagger Editor works in the latest versions of Chrome, Safari, Firefox, and Edge.

### Known Issues

To help with the migration, here are the currently known issues with 3.X. This list will update regularly, and will not include features that were not implemented in previous versions.

- Everything listed in [Swagger UI&#039;s Known Issues](https://github.com/swagger-api/swagger-ui/blob/master/README.md#known-issues).
- The integration with the codegen is still missing.

## Docker

### Running the image from DockerHub

There is a docker image published in **docker.swagger.io** registry.

To use this, run the following:

```
docker pull docker.swagger.io/swaggerapi/swagger-editor
docker run -d -p 80:8080 docker.swagger.io/swaggerapi/swagger-editor
```

This will run Swagger Editor (in detached mode) on port 80 on your machine, so you can open it by navigating to `http://localhost` in your browser.  

* You can provide a URL pointing to an API definition (may not be available if some security policies such as CSP or CORS are enforced):

```
docker run -d -p 80:8080 -e URL=&quot;https://petstore3.swagger.io/api/v3/openapi.json&quot; docker.swagger.io/swaggerapi/swagger-editor
```

* You can provide your own `json` or `yaml` definition file from your local host:

```
docker run -d -p 80:8080 -v $(pwd):/tmp -e SWAGGER_FILE=/tmp/swagger.json docker.swagger.io/swaggerapi/swagger-editor
```

**Note:** When both `URL` and `SWAGGER_FILE` environment variables are set, `URL` has priority and `SWAGGER_FILE` is ignored.

* You can specify a different base url via `BASE_URL` variable for accessing the application - for example if you want the application to be available at `http://localhost/swagger-editor/`:

```
docker run -d -p 80:8080 -e BASE_URL=/swagger-editor docker.swagger.io/swaggerapi/swagger-editor
```

* You can specify a different port via `PORT` variable for accessing the application, default is `8080`.

```
docker run -d -p 80:80 -e PORT=80 docker.swagger.io/swaggerapi/swagger-editor
```

* You can specify Google Tag Manager ID via `GTM` variable for tracking the usage of the swagger-editor.

```
docker run -d -p 80:8080 -e GTM=GTM-XXXXXX docker.swagger.io/swaggerapi/swagger-editor
```

You can also customize the different endpoints used by the Swagger Editor with the following environment variables. For instance, this can be useful if you have your own Swagger generator server:

Environment variable | Default value
--- | ---
`URL_SWAGGER2_GENERATOR` | `https://generator.swagger.io/api/swagger.json`
`URL_OAS3_GENERATOR` | `https://generator3.swagger.io/openapi.json`
`URL_SWAGGER2_CONVERTER` | `https://converter.swagger.io/api/convert`

If you want to run the Swagger Editor locally without the Codegen features (Generate Server and Generate Client) you can set the above environment variables to `null` (`URL_SWAGGER2_CONVERTER=null`).

### Building and running an image locally

To build and run a docker image with the code checked out on your machine, run the following from the root directory of the project:

```
# Install npm packages (if needed)
npm install

# Build the app
npm run build

# Build an image
docker build -t swagger-editor .

# Run the container
docker run -d -p 80:8080 swagger-editor
```

You can then view the app by navigating to `http://localhost` in your browser.

## Documentation

* [Importing your OpenAPI document](docs/import.md)

* [Contributing](https://github.com/swagger-api/.github/blob/master/CONTRIBUTING.md)

### Using older version of React

&gt; [!IMPORTANT]
&gt; By older versions we specifically refer to `React &gt;=17 &lt;18`.

By default [swagger-editor@4](https://www.npmjs.com/package/swagger-editor) npm package comes with latest version of [React@18](https://react.dev/blog/2022/03/29/react-v18).
It&#039;s possible to use _swagger-editor@4_ npm package with older version of React.

Let&#039;s say my application integrates with _swagger-editor@4_ npm package and uses [React@17.0.2](https://www.npmjs.com/package/react/v/17.0.2).

### npm

In order to inform `swagger-editor@4` npm package that I require it to use my React version, I need to use [npm overrides](https://docs.npmjs.com/cli/v9/configuring-npm/package-json#overrides).

```json
{
  &quot;dependencies&quot;: {
    &quot;react&quot;: &quot;=17.0.2&quot;,
    &quot;react-dom&quot;: &quot;=17.0.2&quot;
  },
  &quot;overrides&quot;: {
    &quot;swagger-editor&quot;: {
      &quot;react&quot;: &quot;$react&quot;,
      &quot;react&quot;: &quot;$react-dom&quot;,
      &quot;react-redux&quot;: &quot;^8&quot;
    }
  }
}
```

&gt; [!NOTE]
&gt; The React and ReactDOM override are defined as a reference to the dependency. Since _react-redux@9_ only supports `React &gt;= 18`, we need to use _react-redux@8_.


### yarn

In order to inform `swagger-editor@4` npm package that I require it to use my specific React version, I need to use [yarn resolutions](https://yarnpkg.com/cli/set/resolution).


```json
{
  &quot;dependencies&quot;: {
    &quot;react&quot;: &quot;17.0.2&quot;,
    &quot;react-dom&quot;: &quot;17.0.2&quot;
  },
  &quot;resolutions&quot;: {
    &quot;swagger-editor/react&quot;: &quot;17.0.2&quot;,
    &quot;swagger-editor/react-dom&quot;: &quot;17.0.2&quot;,
    &quot;swagger-editor/react-redux&quot;: &quot;^8&quot;
  }
}
```

&gt; [!NOTE]
&gt; The React and ReactDOM resolution cannot be defined as a reference to the dependency. Unfortunately *yarn* does not support aliasing like `$react` or `$react-dom` as *npm* does. You&#039;ll need to specify the exact versions.

## Security contact

Please disclose any security-related issues or vulnerabilities by emailing [security@swagger.io](mailto:security@swagger.io), instead of using the public issue tracker.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[4ian/GDevelop]]></title>
            <link>https://github.com/4ian/GDevelop</link>
            <guid>https://github.com/4ian/GDevelop</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:32 GMT</pubDate>
            <description><![CDATA[🎮 Open-source, cross-platform 2D/3D/multiplayer game engine designed for everyone.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/4ian/GDevelop">4ian/GDevelop</a></h1>
            <p>🎮 Open-source, cross-platform 2D/3D/multiplayer game engine designed for everyone.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 13,727</p>
            <p>Forks: 967</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre>![GDevelop logo](https://raw.githubusercontent.com/4ian/GDevelop/master/newIDE/GDevelop%20banner.png &quot;GDevelop logo&quot;)

GDevelop is a **full-featured, no-code, open-source** game development software. You can build **2D, 3D and multiplayer games** for mobile (iOS, Android), desktop and the web. GDevelop is fast and easy to use: the game logic is built up using an intuitive and powerful event-based system and reusable behaviors.

![The GDevelop editor when editing a game level](https://raw.githubusercontent.com/4ian/GDevelop/master/newIDE/GDevelop%20screenshot.png &quot;The GDevelop editor when editing a game level&quot;)

## Getting started

| ❔ I want to...                                   | 🚀 What to do                                                                                                                                                     |
| ------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| 🎮 Use GDevelop to make games                     | Go to [GDevelop homepage](https://gdevelop.io) to download the app!                                                                                               |
| ⚙️ Create/improve an extension                    | Read about [creating an extension](https://wiki.gdevelop.io/gdevelop5/extensions/create), with no-code or code.                                                   |
| 🧑‍💻 Contribute to the editor or game engine        | Follow this [README](newIDE/README.md).                                                                                                                           |
| 👾 Create or sell a game template                 | Submit a [free example or a paid template on the Asset Store](https://wiki.gdevelop.io/gdevelop5/community/guide-for-submitting-an-example/).                     |
| 🎨 Share or sell an asset pack                    | Submit a [free or paid asset pack on the Asset Store](https://wiki.gdevelop.io/gdevelop5/community/sell-asset-pack-store).                                        |
| 🌐 Help translate GDevelop                        | Go on the [GDevelop project on Crowdin](https://crowdin.com/project/gdevelop) or translate [in-app tutorials](https://github.com/GDevelopApp/GDevelop-tutorials). |
| 👥 Get online game services or commercial support | See offers for [professionals, teams or individual creators](https://gdevelop.io/pricing).                                                                        |

&gt; Are you interested in contributing to GDevelop for the first time? Take a look at the list of **[good first issues](https://github.com/4ian/GDevelop/issues?q=is%3Aissue+is%3Aopen+label%3A%22%F0%9F%91%8Cgood+first+issue%22)**, **[good first contributions](https://github.com/4ian/GDevelop/discussions/categories/good-first-contribution)** or the **[&quot;🏐 not too hard&quot; cards](https://trello.com/b/qf0lM7k8/gdevelop-roadmap?menu=filter&amp;filter=label:Not%20too%20hard%20%E2%9A%BD%EF%B8%8F)** on the Roadmap.

## Games made with GDevelop

- Find GDevelop games on [gd.games](https://gd.games), the gaming platform for games powered by GDevelop.
- See the [showcase of games](https://gdevelop.io/games) created with GDevelop and published on Steam, iOS (App Store), Android (Google Play), Itch.io, Newgrounds, CrazyGames, Poki...
  - Suggest your game to be [added to the showcase here](https://docs.google.com/forms/d/e/1FAIpQLSfjiOnkbODuPifSGuzxYY61vB5kyMWdTZSSqkJsv3H6ePRTQA/viewform).

[![Some games made with GDevelop](https://raw.githubusercontent.com/4ian/GDevelop/master/newIDE/GDevelop%20games.png &quot;Some games made with GDevelop&quot;)](https://gdevelop.io/games)

## Technical architecture

GDevelop is composed of an **editor**, a **game engine**, an **ecosystem** of extensions as well as **online services** and commercial support.

| Directory     | ℹ️ Description                                                                                                                                                                                                                                                                                           |
| ------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `Core`        | Core classes, describing the structure of a game and tools to implement the IDE and work with GDevelop games.                                                                                                                                                                                            |
| `GDJS`        | The game engine, written in TypeScript, using PixiJS and Three.js for 2D and 3D rendering (WebGL), powering all GDevelop games.                                                                                                                                                                          |
| `GDevelop.js` | Bindings of `Core`, `GDJS` and `Extensions` to JavaScript (with WebAssembly), used by the IDE.                                                                                                                                                                                                           |
| `newIDE`      | The game editor, written in JavaScript with React, Electron, PixiJS and Three.js.js.                                                                                                                                                                                                                     |
| `Extensions`  | Built-in extensions for the game engine, providing objects, behaviors and new features. For example, this includes the physics engines running in WebAssembly (Box2D or Jolt Physics for 3D). All the [community extensions are on this repository](https://github.com/GDevelopApp/GDevelop-extensions). |

To learn more about GDevelop Architecture, read the [architecture overview here](Core/GDevelop-Architecture-Overview.md).

Pre-generated documentation of the game engine is [available here](https://docs.gdevelop.io).

Status of the tests and builds: [![macOS and Linux build status](https://circleci.com/gh/4ian/GDevelop.svg?style=shield)](https://app.circleci.com/pipelines/github/4ian/GDevelop) [![Fast tests status](https://gdevelop.semaphoreci.com/badges/GDevelop/branches/master.svg?style=shields)](https://gdevelop.semaphoreci.com/projects/GDevelop) [![Windows Build status](https://ci.appveyor.com/api/projects/status/84uhtdox47xp422x/branch/master?svg=true)](https://ci.appveyor.com/project/4ian/gdevelop/branch/master) [![https://good-labs.github.io/greater-good-affirmation/assets/images/badge.svg](https://good-labs.github.io/greater-good-affirmation/assets/images/badge.svg)](https://good-labs.github.io/greater-good-affirmation)

## Links

### Community

- [GDevelop forums](https://forum.gdevelop.io) and [Discord chat](https://discord.gg/gdevelop).
- [GDevelop homepage](https://gdevelop.io).
- [GDevelop wiki (documentation)](https://wiki.gdevelop.io/gdevelop5/start).
- Help translate GDevelop in your language: [GDevelop project on Crowdin](https://crowdin.com/project/gdevelop).
- Open-source [extensions](https://github.com/GDevelopApp/GDevelop-extensions), [examples](https://github.com/GDevelopApp/GDevelop-examples), [tutorials](https://github.com/GDevelopApp/GDevelop-tutorials) are on GitHub.

### Development Roadmap

- [GDevelop Roadmap on Trello.com](https://trello.com/b/qf0lM7k8/gdevelop-roadmap), for a global view of the features that could be added. Please vote and comment here for new features/requests.
- [GitHub issue page](https://github.com/4ian/GDevelop/issues), for technical issues and bugs.
- [Github discussions](https://github.com/4ian/GDevelop/discussions) to talk about new features and ideas.

## License

- The Core library, the native and HTML5 game engines, the IDE, and all extensions (respectively `Core`, `GDJS`, `newIDE` and `Extensions` folders) are under the **MIT license**.
- The name, GDevelop, and its logo are the exclusive property of Florian Rival.

Games exported with GDevelop are based on the GDevelop game engine (see `Core` and `GDJS` folders): this engine is distributed under the MIT license so that you can **distribute, sell or do anything** with the games you created with GDevelop. In particular, you are not forced to make your game open-source.

[node.js]: https://nodejs.org

## Star History

Help us spread the word about GDevelop by starring the repository on GitHub!

[![Star History Chart](https://api.star-history.com/svg?repos=4ian/gdevelop&amp;type=Date)](https://star-history.com/#4ian/gdevelop&amp;Date)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[zombieyang/sd-ppp]]></title>
            <link>https://github.com/zombieyang/sd-ppp</link>
            <guid>https://github.com/zombieyang/sd-ppp</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:31 GMT</pubDate>
            <description><![CDATA[Simplify ComfyUI and Connect with Photoshop]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/zombieyang/sd-ppp">zombieyang/sd-ppp</a></h1>
            <p>Simplify ComfyUI and Connect with Photoshop</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,297</p>
            <p>Forks: 62</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[yokoffing/Betterfox]]></title>
            <link>https://github.com/yokoffing/Betterfox</link>
            <guid>https://github.com/yokoffing/Betterfox</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:30 GMT</pubDate>
            <description><![CDATA[Firefox user.js for speed, privacy, and security. Your favorite browser, but better.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/yokoffing/Betterfox">yokoffing/Betterfox</a></h1>
            <p>Firefox user.js for speed, privacy, and security. Your favorite browser, but better.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 7,942</p>
            <p>Forks: 197</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>![GitHub Maintained](https://img.shields.io/badge/maintained-yes-green)![GitHub last commit](https://img.shields.io/github/last-commit/yokoffing/betterfox)![GitHub issues](https://img.shields.io/github/issues/yokoffing/betterfox)![GitHub closed issues](https://img.shields.io/github/issues-closed/yokoffing/betterfox)![GitHub repo size](https://img.shields.io/github/repo-size/yokoffing/betterfox)[![shields.io Stars](https://img.shields.io/github/stars/yokoffing/betterfox)](https://github.com/yokoffing/betterfox/stargazers)

# Betterfox
[about:config](https://support.mozilla.org/en-US/kb/about-config-editor-firefox) tweaks to enhance [Mozilla Firefox](https://www.mozilla.org/en-US/firefox/new/).

## Made for everyday browsing
[Faster](https://medium.com/@mihirgrand/comparing-popular-firefox-forks-6fa83fdfdaad#:~:text=31%25%20more%20than%20vanilla%20Firefox), more private and secure — without using third-party code.

Betterfox is an opinionated preference list inspired by the [law of diminishing returns](https://miro.medium.com/v2/resize:fit:1206/1*lcOcxriV_II_lZuXQYLoXg.jpeg) and the [minimum effective dose](https://medium.com/the-mission/less-is-more-the-minimum-effective-dose-e6d56625931e).

## Required reading
0) Create a [backup profile](https://github.com/yokoffing/Betterfox/wiki/Backup).
1) Download the user.js file [here](https://raw.githubusercontent.com/yokoffing/Betterfox/main/user.js) (Right click &gt; `Save Link As…`).
2) Review both [Common Overrides](https://github.com/yokoffing/Betterfox/wiki/Common-Overrides) and [Optional Hardening](https://github.com/yokoffing/Betterfox/wiki/Optional-Hardening) to make any necessary changes.
3) Open Firefox. In the URL bar, type `about:profiles` and press **Enter**.
4) For the profile you want to use, click **Open Folder** in the **Root Directory** section.
5) Move the `user.js` file into the folder.

*After restarting Firefox:*
1) Get an **ad blocker** like [uBlock Origin](https://addons.mozilla.org/blog/ublock-origin-everything-you-need-to-know-about-the-ad-blocker/) with our [recommended filters](https://github.com/yokoffing/filterlists#guidelines).
2) Enable **DNS-level protection** with your chosen [provider](https://github.com/yokoffing/Betterfox/wiki/Optional-Hardening#secure-dns) to further protect against security threats, ads, and trackers.

## Simple goals
1) **Minimalism:** get what isn&#039;t needed out of the way
2) **Efficiency:** unleash Firefox&#039;s ability to be fast and performant
3) **Privacy:** protect your data without causing site breakage

## Simple configs

`Fastfox`, `Securefox`, `Peskyfox`, and `Smoothfox` are guides to settings within Firefox.

The `user.js` — a configuration file that controls Firefox settings — is curated from these guides.

| List      | Description |
|:---------:|-------------|
| [Fastfox](https://github.com/yokoffing/Betterfox/blob/main/Fastfox.js)   | Increase Firefox&#039;s browsing speed. Give Chrome a run for its money!|
| [Securefox](https://github.com/yokoffing/Betterfox/blob/main/Securefox.js) | Protect user data without causing site breakage. |
| [Peskyfox](https://github.com/yokoffing/Betterfox/blob/main/Peskyfox.js)  | Provide a clean, distraction-free browsing experience. |
| [Smoothfox](https://github.com/yokoffing/Betterfox/blob/main/Smoothfox.js) | Get Edge-like smooth scrolling on your favorite browser — or choose something more your style. |
| [user.js](https://github.com/yokoffing/Betterfox/blob/main/user.js) | All the essentials. None of the breakage. This is your `user.js`. |

## Recognition

### Browser Integration
&gt; [!IMPORTANT]
&gt; While the browsers listed below incorporate Betterfox to some extent, they often modify it in ways that reduce its effectiveness. For optimal results, apply the `user.js` file even when using Firefox forks.

* [Zen](https://github.com/zen-browser/desktop?tab=readme-ov-file) | [files](https://github.com/zen-browser/desktop/blob/stable/src/browser/app/profile/zen-browser.js) (July 2024)
* [Midori](https://github.com/goastian/midori-desktop/blob/ESR115/README.md) | [files](https://github.com/goastian/midori-desktop/blob/f3d8d96eb8e08f35a64e3c957bea4e839d7c7730/floorp/browser/components/userjsUtils.sys.mjs#L28-L33) (Dec 2023?)
* [Mercury](https://github.com/Alex313031/Mercury/releases/tag/v.115.3.0) | [files](https://github.com/Alex313031/Mercury/commit/eb9600f9fb8f48c8f5b5c6f3264fbcdb5caff7f5) (Sep 2023)
* [Waterfox](https://www.waterfox.net/en-US/docs/releases/G6.0/) | [files](https://github.com/WaterfoxCo/Waterfox/tree/current/waterfox/browser/app/profile) (Sep 2023)
* [Floorp](https://github.com/Floorp-Projects/Floorp#-betterfox) &lt;sup&gt;[1](https://github.com/Floorp-Projects/Floorp/issues/233#issuecomment-1543557167) [2](https://blog.ablaze.one/3135/2023-04-01/)&lt;/sup&gt; | [files](https://github.com/Floorp-Projects/Floorp/blob/ESR115/floorp/browser/components/preferences/userjs.inc.xhtml) (Apr 2023)
* [Pulse](https://github.com/pulse-browser/browser#%EF%B8%8F-credits) | [files](https://github.com/pulse-browser/browser/tree/alpha/src/browser/app/profile) (Dec 2021)
* [Ghostery Private Browser](https://github.com/ghostery/user-agent-desktop#community) &lt;sup&gt;[1](https://web.archive.org/web/20210509171835/https://www.ghostery.com/ghostery-dawn-update-more/) [2](https://web.archive.org/web/20210921114333/https://www.ghostery.com/ghostery-dawn-product-update/)&lt;/sup&gt; | [files](https://github.com/ghostery/user-agent-desktop/tree/main/brands/ghostery/branding/pref) (Feb 2021)

### YouTube
* [A Better Firefox](https://youtu.be/JuHIwCFx34Q?si=1dx39t3HX5kzNVj-&amp;t=133) (Mar 2025)
* [Ditch Chrome for One Of These BETTER BROWSERS!](https://youtu.be/ygkxFc8SZlc?si=m5NQe-b_oFXs5crb&amp;t=230) (Aug 2024)
* [The ULTIMATE Browser Tier List](https://youtu.be/j5r6jFE8gic?t=560) (Mar 2023)
* [I Hate Firefox. But I&#039;m Still Switching Back to It.](https://youtu.be/w0SJFED5xK0?t=220) (Nov 2022)
* [Español] [Optimize and Accelerate Firefox](https://www.youtube.com/watch?v=3XtoONmq5_Q) (Nov 2022) 
* [How To Improve Firefox Performance](https://www.youtube.com/watch?v=N8IOJiOFVEk) (Dec 2021)

### Podcasts
* [Italian] [Digitalia.fm](https://digitalia.fm/684/) | 1:41:35–1:42:41 (July 2023)
* [GhoSTORIES with Franz &amp; Pete](https://anchor.fm/ghostories/episodes/S2E6-We-Talking-Ghostery-Dawn----Again-er0q02/a-a4o5vmh) | 17:05–18:40 (Feb 2021)

### Articles
* [Español] [Firefox is an excellent browser, but this small modification makes it much faster and more private](https://www.genbeta.com/a-fondo/firefox-excelente-navegador-esta-pequena-modificacion-hace-mucho-rapido-privado-asi-funciona-betterfox) (Jan 2025)
* [Browsers for Daily Use](https://anhkhoakz.neocities.org/blog/browsers-for-daily-using/#firefox-but-hardened) (Jan 2024)
* [Avoiding Manifest V3 – Escaping the Ad-Pocalypse](https://www.xbitlabs.com/avoiding-manifest-v3/) (Dec 2023)
* [German] [Pulse Browser Review: Firefox fork with Turbo tweaks and Opera sidebar](https://www.computerbild.de/artikel/cb-Tipps-Software-Pulse-Browser-Review-ein-Firefox-Fork-mit-Seitenleiste-wie-bei-Opera-35644139.html#:~:text=Noch%20mehr%20Speed%2DFeatures) (Apr 2023)
* [2023 Browser Showdown: Comparing Chrome, Brave, Firefox, Vivaldi, and Opera](https://www.appdate.lk/technology/2023-browser-showdown/) (Jan 2023)

### Guides
* [FMHY Browser Tools: Privacy Tweaks](https://www.reddit.com/r/FREEMEDIAHECKYEAH/wiki/storage/#wiki_privacy_based_browsers)
* [Firefox-UI-Fix](https://github.com/black7375/Firefox-UI-Fix/wiki/Tips#privacy)
* [Narsil/desktop_user.js](https://git.nixnet.services/Narsil/desktop_user.js#thanks)
* [pyllyukko/user.js](https://github.com/pyllyukko/user.js) [comparator](https://jm42.github.io/compare-user.js/)

### Reviews
* “I use this one ... The performance is absolutely amazing. There’s definitely a huge difference when it comes to loading sites.” - [DIRIKtv](https://youtu.be/N8IOJiOFVEk?t=16)
* &quot;BetterFox ... will provide good-enough privacy and help with performance.&quot; - [Qdoit12Super](https://old.reddit.com/r/browsers/comments/139h4my/suggestion_for_finding_3_good_privacy_focus/jj3n3qn/?context=2)
* &quot;...drastically changed the experience with Firefox for me. Improved speed, security, smoothness, and removed clutter.&quot; - [AppDate](https://www.appdate.lk/technology/2023-browser-showdown/#:~:text=Used%20the%20BetterFox%20user%20config%20settings%20with%20some%20overrides%20which%20drastically%20changed%20the%20experience)
* &quot;Firefox with uBlock Origin extension and tuned with Betterfox is faster than Safari.&quot;  - [cugeloid](https://elephas.app/blog/best-browsers-mac#what-is-the-best-browser-for-mac-according-to-redditandnbsp)
* &quot;I don&#039;t think I could use Firefox without Betterfox.&quot; - [Professional_Fun4616](https://old.reddit.com/r/nextdns/comments/15y815f/the_people_behind_betterfox_have_this_awesome/jxb7cir/?context=3)
* &quot;The best collection of tweaks available.&quot; - [AuRiMaS](https://old.reddit.com/r/MozillaFirefox/comments/15cc1vk/about_changes_in_aboutconfig/jtyx910/?context=3)
* &quot;FF is now much snappier!&quot; - [whotheff](https://old.reddit.com/r/firefox/comments/z5auzi/firefox_not_properly_usingrecognizing_gpu_poor/iy36hyz/)
* &quot;...the experience is so good now I don’t think I’ll go back to any of the chromium based browsers.&quot; - [Mr_Compromise](https://old.reddit.com/r/pcmasterrace/comments/zwioe1/what_browser_will_you_be_using_in_2023_please/j1wmbxo/)

## Support

If you like the project, leave a :star: (top right) and become a [stargazer](https://github.com/yokoffing/Betterfox/stargazers)!

[![Stargazers repo roster for @yokoffing/Betterfox](https://reporoster.com/stars/dark/yokoffing/Betterfox)](https://github.com/yokoffing/Betterfox/stargazers)

&lt;a href=&#039;https://ko-fi.com/Q5Q5G8EPH&#039; target=&#039;_blank&#039;&gt;&lt;img height=&#039;36&#039; style=&#039;border:0px;height:36px;&#039; src=&#039;https://storage.ko-fi.com/cdn/kofi2.png?v=3&#039; border=&#039;0&#039; alt=&#039;Buy Me a Coffee at ko-fi.com&#039; /&gt;&lt;/a&gt;
&lt;noscript&gt;&lt;a href=&quot;https://liberapay.com/yokoffing/donate&quot;&gt;&lt;img alt=&quot;Donate using Liberapay&quot; src=&quot;https://liberapay.com/assets/widgets/donate.svg&quot;&gt;&lt;/a&gt;&lt;/noscript&gt;

## Credit
* Betterfox mirrors the ongoing work provided by [arkenfox](https://github.com/arkenfox/user.js). Additionally, this repository includes content reproduced or adapted from other sources. Credit for overlapping material goes to the original authors.
* Appreciation goes to the [Firefox](https://www.mozilla.org/en-US/firefox/new/) team and developers working on [Bugzilla](https://bugzilla.mozilla.org/home), fighting for the open web.
* Thanks to [Denperidge](https://github.com/Denperidge) for adding [`install.py`](https://github.com/yokoffing/Betterfox/blob/main/install.py) for advanced users in v.131.
* A special thanks to [Alex Kontos](https://github.com/MrAlex94) of [Waterfox](https://github.com/WaterfoxCo/Waterfox) for his collaboration in v.116.
* Many thanks to the 2021 [Ghostery](https://github.com/ghostery) team for testing Betterfox at scale in its early days.

&lt;div align=&#039;center&#039;&gt;
  &lt;a href=&#039;https://www.websitecounterfree.com&#039;&gt;&lt;img src=&#039;https://www.websitecounterfree.com/c.php?d=9&amp;id=19653&amp;s=1&#039; border=&#039;0&#039; alt=&#039;Free Website Counter&#039;&gt;&lt;/a&gt;&lt;br / &gt;
since 23 July 2022&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[potree/potree]]></title>
            <link>https://github.com/potree/potree</link>
            <guid>https://github.com/potree/potree</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:29 GMT</pubDate>
            <description><![CDATA[WebGL point cloud viewer for large datasets]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/potree/potree">potree/potree</a></h1>
            <p>WebGL point cloud viewer for large datasets</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,848</p>
            <p>Forks: 1,236</p>
            <p>Stars today: 0 stars today</p>
            <h2>README</h2><pre>

# About

* Potree is a free open-source WebGL based point cloud renderer for large point clouds. It is based on the [TU Wien Scanopy project](https://www.cg.tuwien.ac.at/research/projects/Scanopy/) and research projects [Harvest4D](https://harvest4d.org/), [GCD Doctoral College](https://gcd.tuwien.ac.at/) and [Superhumans](https://www.cg.tuwien.ac.at/research/projects/Superhumans/).
* Newest information and work in progress is usually available on [twitter](https://twitter.com/m_schuetz)
* Contact: Markus Schütz (mschuetz@potree.org)
* References: 
    * [Potree: Rendering Large Point Clouds in Web Browsers](https://www.cg.tuwien.ac.at/research/publications/2016/SCHUETZ-2016-POT/SCHUETZ-2016-POT-thesis.pdf) (2016)
    * [Fast Out-of-Core Octree Generation for Massive Point Clouds](https://www.cg.tuwien.ac.at/research/publications/2020/SCHUETZ-2020-MPC/) (2020)
    
&lt;a href=&quot;http://potree.org/wp/demo/&quot; target=&quot;_blank&quot;&gt; ![](./docs/images/potree_screens.png) &lt;/a&gt;

# Getting Started

### Install on your PC

Install [node.js](http://nodejs.org/)

Install dependencies, as specified in package.json, and create a build in ./build/potree.

```bash
npm install
```

### Run on your PC

Use the `npm start` command to 

* create ./build/potree 
* watch for changes to the source code and automatically create a new build on change
* start a web server at localhost:1234. 

Go to http://localhost:1234/examples/ to test the examples.

### Deploy to a server

* Simply upload the Potree folderm with all your point clouds, the build directory, and your html files to a web server.
* It is not required to install node.js on your webserver. All you need is to host your files online. 

### Convert Point Clouds to Potree Format

Download [PotreeConverter](https://github.com/potree/PotreeConverter) and run it like this:

    ./PotreeConverter.exe C:/pointclouds/data.las -o C:/pointclouds/data_converted

Copy the converted directory into &amp;lt;potreeDirectory&amp;gt;/pointclouds/data_converted. Then, duplicate and rename one of the examples and modify the path in the html file to your own point cloud.

# Downloads

* [Potree](https://github.com/potree/potree/releases)
* [PotreeConverter ](https://github.com/potree/PotreeConverter/releases) - Convert your point cloud to the Potree format.
* [PotreeDesktop ](https://github.com/potree/PotreeDesktop/releases) - Desktop version of Potree. Allows drag&amp;drop of point clouds into the viewer.

# Examples

&lt;table&gt;
	&lt;tr&gt;
		&lt;td style=&quot;padding: 0px&quot;&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/viewer.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/viewer.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/ca13.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/ca13.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/cesium_retz.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/cesium_retz.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/classifications.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/classifications.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/features_sorvilier.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/features_sorvilier.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/toolbar.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/toolbar.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;Basic Viewer&lt;/th&gt;&lt;th&gt;CA13 (18 billion Points)&lt;/th&gt;&lt;th&gt;Retz (Potree + Cesium)&lt;/th&gt;&lt;th&gt;Classifications&lt;/th&gt;&lt;th&gt;Various Features&lt;/th&gt;&lt;th&gt;Toolbar&lt;/th&gt;
	&lt;/tr&gt;
&lt;/table&gt;

&lt;details&gt;
&lt;summary&gt;More Examples&lt;/summary&gt;


&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/load_project.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/load_project.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/matcap.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/matcap.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;https://potree.org/potree/examples/vr_heidentor.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/heidentor.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/heidentor.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/heidentor.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/lion.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/lion.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/lion_las.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/lion_las.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;Load Project&lt;/th&gt;&lt;th&gt;Matcap&lt;/th&gt;&lt;th&gt;Virtual Reality&lt;/th&gt;&lt;th&gt;Heidentor&lt;/th&gt;&lt;th&gt;Lion&lt;/th&gt;&lt;th&gt;Lion LAS&lt;/th&gt;
	&lt;/tr&gt;&lt;tr&gt;
		&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/lion_laz.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/lion_las.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/ept.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/lion.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/ept_binary.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/lion_las.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/ept_zstandard.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/lion_las.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/clipping_volume.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/clipping_volume.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/oriented_images.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/oriented_images.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;Lion LAZ&lt;/th&gt;&lt;th&gt;EPT&lt;/th&gt;&lt;th&gt;EPT Binary&lt;/th&gt;&lt;th&gt;EPT zstandard&lt;/th&gt;&lt;th&gt;Clipping Volume&lt;/th&gt;&lt;th&gt;Oriented Images&lt;/th&gt;
	&lt;/tr&gt;&lt;tr&gt;
		&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/elevation_profile.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/elevation_profile.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/measurements.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/measurements.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/meshes.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/meshes.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/multiple_pointclouds.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/multiple_point_clouds.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/camera_animation.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/camera_animation.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/features_ca13.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/features_ca13.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;Elevation Profile&lt;/th&gt;&lt;th&gt;Measurements&lt;/th&gt;&lt;th&gt;Meshes&lt;/th&gt;&lt;th&gt;Multiple Point Clouds&lt;/th&gt;&lt;th&gt;Camera Animation&lt;/th&gt;&lt;th&gt;Features (CA13)&lt;/th&gt;
	&lt;/tr&gt;&lt;tr&gt;
		&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/annotations.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/annotations.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/annotation_hierarchy.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/annotation_hierarchy.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/animation_paths.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/animation_paths.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/shapefiles.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/shapefiles.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/cesium_ca13.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/cesium_ca13.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/geopackage.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/geopackage.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;Annotations&lt;/th&gt;&lt;th&gt;Hierarchical Annotations&lt;/th&gt;&lt;th&gt;Animation Path&lt;/th&gt;&lt;th&gt;Shapefiles&lt;/th&gt;&lt;th&gt;Cesium CA13&lt;/th&gt;&lt;th&gt;Geopackage&lt;/th&gt;
	&lt;/tr&gt;&lt;tr&gt;
		&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/cesium_sorvilier.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/cesium_sorvilier.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/custom_sidebar_section.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/custom_sidebar_section.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/embedded_iframe.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/embedded_iframe.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/gradient_colors.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/gradient_colors.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;Cesium Sorvilier&lt;/th&gt;&lt;th&gt;Custom Sidebar Section&lt;/th&gt;&lt;th&gt;Embedded Iframe&lt;/th&gt;&lt;th&gt;Gradient Colors&lt;/th&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;/details&gt;

# VR

&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;
			&lt;a href=&quot;https://potree.org/potree/examples/vr_heidentor.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/heidentor.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;https://potree.org/potree/examples/vr_eclepens.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/eclepens.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;https://potree.org/potree/examples/vr_morro_bay.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/ca13.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;https://potree.org/potree/examples/vr_lion.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/lion.png&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;https://potree.org/potree/examples/vr_dechen_cave.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/dechen_cave.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;Heidentor&lt;/th&gt;&lt;th&gt;Eclepens&lt;/th&gt;&lt;th&gt;Morro Bay&lt;/th&gt;&lt;th&gt;Lion&lt;/th&gt;&lt;th&gt;Dechen Cave&lt;/th&gt;
	&lt;/tr&gt;
&lt;/table&gt;

# Showcase

&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/matterhorn.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/matterhorn.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/retz.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/retz.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/lake_tahoe.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/lake_tahoe.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/sorvilier.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/vol_total.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/grab_15.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/grab_15.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/tern_auscover_chowilla.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/chowilla.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;Matterhorn&lt;/th&gt;&lt;th&gt;Retz&lt;/th&gt;&lt;th&gt;Lake Tahoe&lt;/th&gt;&lt;th&gt;Sorvilier&lt;/th&gt;&lt;th&gt;Grave&lt;/th&gt;&lt;th&gt;Chowilla&lt;/th&gt;
	&lt;/tr&gt;
&lt;/table&gt;

&lt;details&gt;
&lt;summary&gt;More&lt;/summary&gt;

&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/chiller.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/chiller.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/cooler_tower.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/cooler_tower.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/dechen_cave.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/dechen_cave.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/doverMillRuins.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/DoverMillRuins.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/eclepens.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/eclepens.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/heidentor.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/heidentor.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;Chiller&lt;/th&gt;&lt;th&gt;Cooler&lt;/th&gt;&lt;th&gt;Dechen Cave&lt;/th&gt;&lt;th&gt;Ruins&lt;/th&gt;&lt;th&gt;Eclepens&lt;/th&gt;&lt;th&gt;Heidentor&lt;/th&gt;
	&lt;/tr&gt;&lt;tr&gt;
		&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/land_building.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/land_building.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/LDHI_module.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/LDHI_module.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/lion_head_simone_garagnani.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/lion_head.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/overpass.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/overpass.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/pielach.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/pielach.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/pompei.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/pompei.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;Building&lt;/th&gt;&lt;th&gt;LDHI&lt;/th&gt;&lt;th&gt;Lion Head&lt;/th&gt;&lt;th&gt;Overpass&lt;/th&gt;&lt;th&gt;Pielach&lt;/th&gt;&lt;th&gt;pompei&lt;/th&gt;
	&lt;/tr&gt;&lt;tr&gt;
		&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/santorini.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/santorini.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/skatepark.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/skatepark.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/subsea_equipment.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/subsea_equipment.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/subsea_manifold.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/subseamanifold.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/westend_palais.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/westend_palais.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;&lt;td&gt;
			&lt;a href=&quot;http://potree.org/potree/examples/showcase/whitby.html&quot; target=&quot;_blank&quot;&gt;
				&lt;img src=&quot;examples/thumbnails/whitby.jpg&quot; width=&quot;100%&quot; /&gt;
			&lt;/a&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;Santorini&lt;/th&gt;&lt;th&gt;Skatepark&lt;/th&gt;&lt;th&gt;Subsea Eq.&lt;/th&gt;&lt;th&gt;Subsea Man.&lt;/th&gt;&lt;th&gt;Westend Palais&lt;/th&gt;&lt;th&gt;Whitby&lt;/th&gt;
	&lt;/tr&gt;
&lt;/table&gt;

&lt;/details&gt;

# Funding

Potree is funded by a combination of research projects, companies and institutions. 

Research projects who&#039;s funding contributes to Potree:

&lt;table&gt;
	&lt;tr&gt;
		&lt;th&gt;Project Name&lt;/th&gt;
		&lt;th&gt;Funding Agency&lt;/th&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;&lt;a href=&quot;https://projekte.ffg.at/projekt/3851914&quot;&gt;LargeClouds2BIM&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;https://www.ffg.at/&quot;&gt;FFG&lt;/a&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;&lt;a href=&quot;https://harvest4d.org/&quot;&gt;Harvest4D&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;https://ec.europa.eu/transport/themes/research/fp7_en&quot;&gt;EU 7th Framework Program 323567&lt;/a&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;&lt;a href=&quot;https://gcd.tuwien.ac.at/&quot;&gt;GCD Doctoral College&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;https://www.tuwien.at/en/&quot;&gt;TU Wien&lt;/a&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;&lt;a href=&quot;https://www.cg.tuwien.ac.at/research/projects/Superhumans/&quot;&gt;Superhumans&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;https://www.fwf.ac.at/&quot;&gt;FWF&lt;/a&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;

We would like to thank our sponsors for their financial contributions that keep this project up and running!

&lt;table&gt;
	&lt;tr&gt;
		&lt;th&gt;
			Diamond&lt;br&gt;
			€ 15,000+
		&lt;/th&gt;
		&lt;td&gt;
			&lt;a href=&quot;http://www.ne.ch/autorites/DDTE/SGRF/SITN/Pages/accueil.aspx&quot;&gt;
				&lt;img src=&quot;docs/sponsors/sitn_logo.png&quot; height=&quot;80px&quot;/&gt; &amp;nbsp;
			&lt;/a&gt; &amp;nbsp;
			&lt;a href=&quot;http://www.synth3d.co&quot;&gt;
				&lt;img src=&quot;docs/sponsors/synth.png&quot; height=&quot;120&quot;/&gt;
			&lt;/a&gt; &amp;nbsp;
			&lt;a href=&quot;http://www.geocue.com&quot;&gt;
				&lt;img src=&quot;docs/sponsors/geocue.png&quot; height=&quot;120px&quot;/&gt;
			&lt;/a&gt; &amp;nbsp;
			&lt;a href=&quot;http://rapidlasso.com&quot;&gt;
				&lt;img src=&quot;./docs/sponsors/rapidlasso_square_256x2561.png&quot; width=&quot;150&quot; height=&quot;150&quot;/&gt;
			&lt;/a&gt; &amp;nbsp;
		&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;
			Gold&lt;br&gt;
			€ 10,000+
		&lt;/th&gt;
		&lt;td&gt;
			&lt;a href=&quot;https://www.bart.gov&quot;&gt;
				&lt;img src=&quot;docs/sponsors/bart.png&quot; height=&quot;100&quot;/&gt;
			&lt;/a&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;
			Silver&lt;br&gt;
			€ 5,000+
		&lt;/th&gt;
		&lt;td&gt;
			&lt;a href=&quot;https://biology.anu.edu.au/research/facilities/australian-plant-phenomics-facility-anu&quot;&gt;
				&lt;img src=&quot;docs/sponsors/APPF full logo.png&quot; height=&quot;70&quot;/&gt; &amp;nbsp;
			&lt;/a&gt;
			&lt;a href=&quot;https://www.limit-addict.fr/&quot;&gt;
				&lt;img src=&quot;docs/sponsors/limitaddict.png&quot; height=&quot;45&quot;/&gt;
			&lt;/a&gt;
			&lt;a href=&quot;http://georepublic.info&quot;&gt;
				&lt;img src=&quot;docs/sponsors/georepublic.png&quot; height=&quot;45&quot;/&gt;
			&lt;/a&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;
			Bronze&lt;br&gt;
			€ 1,000+
		&lt;/th&gt;
		&lt;td&gt;
			&lt;a href=&quot;https://www.eventart.at/&quot;&gt;
				&lt;img src=&quot;docs/sponsors/eventart.png&quot; height=&quot;55&quot;/&gt; &amp;nbsp;
			&lt;/a&gt;
			&lt;a href=&quot;https://www.geodelta.com/&quot;&gt;
				&lt;img src=&quot;docs/sponsors/geodelta.png&quot; height=&quot;35&quot;/&gt; &amp;nbsp;
			&lt;/a&gt;
			&lt;a href=&quot;https://www.e-cassini.fr/&quot;&gt;
				&lt;img src=&quot;docs/sponsors/e_cassini.jpg&quot; height=&quot;70&quot;/&gt; &amp;nbsp;
			&lt;/a&gt;
			&lt;a href=&quot;https://www.sogelink.fr/&quot;&gt;
				&lt;img src=&quot;docs/sponsors/SOGELINK_SO-EASY.png&quot; height=&quot;40&quot;/&gt; &amp;nbsp;
			&lt;/a&gt;
			&lt;b&gt;Data-viewer&lt;/b&gt;
			&lt;a href=&quot;http://www.helimap.com/&quot;&gt;
				&lt;img src=&quot;docs/sponsors/helimap.gif&quot; height=&quot;60&quot;/&gt; &amp;nbsp;
			&lt;/a&gt;
			&lt;a href=&quot;http://www.vevey.ch/&quot;&gt;
				&lt;img src=&quot;docs/sponsors/vevey.png&quot; height=&quot;60&quot;/&gt; &amp;nbsp;
			&lt;/a&gt;
			&lt;a href=&quot;https://www.yverdon-les-bains.ch/&quot;&gt;
				&lt;img src=&quot;docs/sponsors/Logo-YLB.png&quot; height=&quot;60&quot;/&gt; &amp;nbsp;
			&lt;/a&gt;
			&lt;a href=&quot;http://archpro.lbg.ac.at&quot;&gt;
				&lt;img src=&quot;docs/sponsors/archpro_EN_small.png&quot; height=&quot;60&quot;/&gt; 
			&lt;/a&gt; &amp;nbsp;
			&lt;br&gt;
			&lt;a href=&quot;http://www.kts.co.jp&quot;&gt;
				&lt;img src=&quot;docs/sponsors/kts.png&quot; height=&quot;32&quot;/&gt; &amp;nbsp;
			&lt;/a&gt;
			&lt;a href=&quot;http://veesus.com&quot;&gt;
				&lt;img src=&quot;docs/sponsors/veesus_small.png&quot; height=&quot;40&quot;/&gt; &amp;nbsp;
			&lt;/a&gt;
			&lt;a href=&quot;http://www.sigeom.ch&quot;&gt;
				&lt;img src=&quot;docs/sponsors/logo_sigeom.png&quot; height=&quot;40&quot;/&gt; &amp;nbsp;
			&lt;/a&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;



# Credits

* The multi-res-octree algorithms used by this viewer were developed at the Vienna University of Technology by Michael Wimmer and Claus Scheiblauer as part of the [Scanopy Project](http://www.cg.tuwien.ac.at/research/projects/Scanopy/).
* [Three.js](https://github.com/mrdoob/three.js), the WebGL 3D rendering library on which potree is built.
* [plas.io](http://plas.io/) point cloud viewer. LAS and LAZ support have been taken from the laslaz.js implementation of plas.io. Thanks to [Uday Verma](https://twitter.com/udaykverma) and [Howard Butler](https://twitter.com/howardbutler) for this!
* [Harvest4D](https://harvest4d.org/) Potree currently runs as Master Thesis under the Harvest4D Project
* Christian Boucheny (EDL developer) and Daniel Girardeau-Montaut ([CloudCompare](http://www.danielgm.net/cc/)). The EDL shader was adapted from the CloudCompare source code!
* [Martin Isenburg](http://rapidlasso.com/), [Georepublic](http://georepublic.de/en/),
[Veesus](http://veesus.com/), [Sigeom Sa](http://www.sigeom.ch/), [SITN](http://www.ne.ch/sitn), [LBI ArchPro](http://archpro.lbg.ac.at/),  [Pix4D](http://pix4d.com/) as well as all the contributers to potree and PotreeConverter and many more for their support.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[bia-pain-bache/BPB-Worker-Panel]]></title>
            <link>https://github.com/bia-pain-bache/BPB-Worker-Panel</link>
            <guid>https://github.com/bia-pain-bache/BPB-Worker-Panel</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:28 GMT</pubDate>
            <description><![CDATA[A GUI Panel providing Worker subscriptions for VLESS, Trojan and Warp configs alongside chain proxies, offering full DNS, clean IP, Fragment, Warp, Warp pro and routing settings for cross-platform clients using Amnezia, Wireguard, Sing-box, Clash/Mihomo and Xray cores.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/bia-pain-bache/BPB-Worker-Panel">bia-pain-bache/BPB-Worker-Panel</a></h1>
            <p>A GUI Panel providing Worker subscriptions for VLESS, Trojan and Warp configs alongside chain proxies, offering full DNS, clean IP, Fragment, Warp, Warp pro and routing settings for cross-platform clients using Amnezia, Wireguard, Sing-box, Clash/Mihomo and Xray cores.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 7,062</p>
            <p>Forks: 30,911</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;BPB Panel 💦&lt;/h1&gt;

### 🌏 Readme in [Farsi](README_fa.md)

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;docs/assets/images/Panel.jpg&quot;&gt;
&lt;/p&gt;
&lt;br&gt;

## Introduction
This project is dedicated to developing a user panel to access VLESS, Trojan and Warp configs and stay conntected even with a blocked domain or blocked Warp on ISP, offering two deployment options: 
- **Workers** deployment
- **Pages** deployment
&lt;br&gt;

🌟 If you found **BPB Panel** valuable, Your donations make all the difference 🌟
- **USDT (BEP20):** `0x111EFF917E7cf4b0BfC99Edffd8F1AbC2b23d158`

## Features

1. **Free**: No cost involved.
2. **User-Friendly Panel:** Designed for easy navigation, configuration and usage.
3. **Protocols:** Provides VLESS, Trojan and Wireguard (Warp) protocols.
4. **Warp Pro configs:** Optimized Warp for crucial circumstances.
5. **Support Fragment:** Supports Fragment functionality for crucial network situations.
6. **Full routing rules:** Bypassing Iran/China/Russia and LAN, Blocking QUIC, Porn, Ads, Malwares, Phishing...
7. **Chain Proxy:** Capable of adding a chain proxy to fix IP.
8. **Supports Wide Range of Clients:** Offers subscription links for Xray, Sing-box and Clash core clients.
9. **Password-Protected Panel:** Secure your panel with password protection.
10. **Fully customizable:** Ability to use online scanner and setting up clean IP-domains, Proxy IP, setting DNS servers, choosing ports and protocols, Warp endpoints...
&lt;br&gt;

## How to use:
- [Installation (Pages - New recommended method)](docs/pages_upload_installation_fa.md)

- [Installation (Worker)](docs/worker_installation_fa.md)

- [How to use](docs/configuration_fa.md)

- [FAQ](docs/faq.md)
&lt;br&gt;

## Supported Clients
| Client  | Version | Fragment | Warp Pro |
| :-------------: | :-------------: | :-------------: | :-------------: |
| **v2rayNG**  | 1.9.33 or higher  | :heavy_check_mark: | :heavy_check_mark: |
| **v2rayN**  | 7.8.3 or higher  | :heavy_check_mark: | :heavy_check_mark: |
| **v2rayN-PRO**  | 1.8 or higher  | :heavy_check_mark: | :heavy_check_mark: |
| **Husi**  |   | :x: | :x: |
| **Sing-box**  | 1.11.2 or higher  | :x: | :x: |
| **Streisand**  | 1.6.48 or higher  | :heavy_check_mark: | :heavy_check_mark: |
| **V2Box**  |   | :x: | :x: |
| **Shadowrocket**  |   | :x: | :x: |
| **Nekoray**  |   | :heavy_check_mark: | :x: |
| **Hiddify**  | 2.5.7 or higher  | :heavy_check_mark: | :heavy_check_mark: |
| **NikaNG**  |   | :heavy_check_mark: | :heavy_check_mark: |
| **Clash Meta**  |   | :x: | :x: |
| **Clash Verge Rev**  |   | :x: | :x: |
| **FLClash**  |   | :x: | :x: |

## Environment variables
| Variable  | Usage |
| :-------------: | :-------------: |
| **UUID**  | VLESS UUID  |
| **TR_PASS**  | Trojan Password  |
| **PROXY_IP**  | Proxy IP or domain (VLESS, Trojan)  |
| **SUB_PATH**  | Subscriptions&#039; URI  |
| **FALLBACK**  | Fallback domain (VLESS, Trojan) |
| **DOH_URL**  | Core DOH |

---

## Stargazers Over Time
[![Stargazers Over Time](https://starchart.cc/bia-pain-bache/BPB-Worker-Panel.svg?variant=adaptive)](https://starchart.cc/bia-pain-bache/BPB-Worker-Panel)

---

### Special Thanks
- VLESS, Trojan [Cloudflare-workers/pages proxy script](https://github.com/yonggekkk/Cloudflare-workers-pages-vless) created by [yonggekkk](https://github.com/yonggekkk)
- CF-vless code author [3Kmfi6HP](https://github.com/3Kmfi6HP/EDtunnel)
- CF preferred IP program author [badafans](https://github.com/badafans/Cloudflare-IP-SpeedTest), [XIU2](https://github.com/XIU2/CloudflareSpeedTest)

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[louislam/uptime-kuma]]></title>
            <link>https://github.com/louislam/uptime-kuma</link>
            <guid>https://github.com/louislam/uptime-kuma</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:27 GMT</pubDate>
            <description><![CDATA[A fancy self-hosted monitoring tool]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/louislam/uptime-kuma">louislam/uptime-kuma</a></h1>
            <p>A fancy self-hosted monitoring tool</p>
            <p>Language: JavaScript</p>
            <p>Stars: 67,351</p>
            <p>Forks: 5,918</p>
            <p>Stars today: 69 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot; width=&quot;100%&quot;&gt;
    &lt;img src=&quot;./public/icon.svg&quot; width=&quot;128&quot; alt=&quot;&quot; /&gt;
&lt;/div&gt;

# Uptime Kuma

Uptime Kuma is an easy-to-use self-hosted monitoring tool.

&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/louislam/uptime-kuma?style=flat&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/louislam/uptime-kuma&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/v/louislam/uptime-kuma/latest?label=docker%20image%20ver.&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/louislam/uptime-kuma&quot; /&gt;&lt;/a&gt;  &lt;a target=&quot;_blank&quot; href=&quot;https://opencollective.com/uptime-kuma&quot;&gt;&lt;img src=&quot;https://opencollective.com/uptime-kuma/total/badge.svg?label=Open%20Collective%20Backers&amp;color=brightgreen&quot; /&gt;&lt;/a&gt;
[![GitHub Sponsors](https://img.shields.io/github/sponsors/louislam?label=GitHub%20Sponsors)](https://github.com/sponsors/louislam) &lt;a href=&quot;https://weblate.kuma.pet/projects/uptime-kuma/uptime-kuma/&quot;&gt;
&lt;img src=&quot;https://weblate.kuma.pet/widgets/uptime-kuma/-/svg-badge.svg&quot; alt=&quot;Translation status&quot; /&gt;
&lt;/a&gt;

&lt;img src=&quot;https://user-images.githubusercontent.com/1336778/212262296-e6205815-ad62-488c-83ec-a5b0d0689f7c.jpg&quot; width=&quot;700&quot; alt=&quot;&quot; /&gt;

## 🥔 Live Demo

Try it!

Demo Server (Location: Frankfurt - Germany): https://demo.kuma.pet/start-demo

It is a temporary live demo, all data will be deleted after 10 minutes. Sponsored by [Uptime Kuma Sponsors](https://github.com/louislam/uptime-kuma#%EF%B8%8F-sponsors).

## ⭐ Features

- Monitoring uptime for HTTP(s) / TCP / HTTP(s) Keyword / HTTP(s) Json Query / Ping / DNS Record / Push / Steam Game Server / Docker Containers
- Fancy, Reactive, Fast UI/UX
- Notifications via Telegram, Discord, Gotify, Slack, Pushover, Email (SMTP), and [90+ notification services, click here for the full list](https://github.com/louislam/uptime-kuma/tree/master/src/components/notifications)
- 20-second intervals
- [Multi Languages](https://github.com/louislam/uptime-kuma/tree/master/src/lang)
- Multiple status pages
- Map status pages to specific domains
- Ping chart
- Certificate info
- Proxy support
- 2FA support

## 🔧 How to Install

### 🐳 Docker

```bash
docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
```

Uptime Kuma is now running on &lt;http://0.0.0.0:3001&gt;.

&gt; [!WARNING]
&gt; File Systems like **NFS** (Network File System) are **NOT** supported. Please map to a local directory or volume.

&gt; [!NOTE]
&gt; If you want to limit exposure to localhost (without exposing port for other users or to use a [reverse proxy](https://github.com/louislam/uptime-kuma/wiki/Reverse-Proxy)), you can expose the port like this:
&gt; 
&gt; ```bash
&gt; docker run -d --restart=always -p 127.0.0.1:3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
&gt; ```

### 💪🏻 Non-Docker

Requirements:

- Platform
  - ✅ Major Linux distros such as Debian, Ubuntu, CentOS, Fedora and ArchLinux etc.
  - ✅ Windows 10 (x64), Windows Server 2012 R2 (x64) or higher
  - ❌ FreeBSD / OpenBSD / NetBSD
  - ❌ Replit / Heroku
- [Node.js](https://nodejs.org/en/download/) 18 / 20.4
- [npm](https://docs.npmjs.com/cli/) 9
- [Git](https://git-scm.com/downloads)
- [pm2](https://pm2.keymetrics.io/) - For running Uptime Kuma in the background

```bash
git clone https://github.com/louislam/uptime-kuma.git
cd uptime-kuma
npm run setup

# Option 1. Try it
node server/server.js

# (Recommended) Option 2. Run in the background using PM2
# Install PM2 if you don&#039;t have it:
npm install pm2 -g &amp;&amp; pm2 install pm2-logrotate

# Start Server
pm2 start server/server.js --name uptime-kuma
```

Uptime Kuma is now running on http://localhost:3001

More useful PM2 Commands

```bash
# If you want to see the current console output
pm2 monit

# If you want to add it to startup
pm2 save &amp;&amp; pm2 startup
```

### Advanced Installation

If you need more options or need to browse via a reverse proxy, please read:

https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install

## 🆙 How to Update

Please read:

https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update

## 🆕 What&#039;s Next?

I will assign requests/issues to the next milestone.

https://github.com/louislam/uptime-kuma/milestones

## ❤️ Sponsors

Thank you so much! (GitHub Sponsors will be updated manually. OpenCollective sponsors will be updated automatically, the list will be cached by GitHub though. It may need some time to be updated)

&lt;img src=&quot;https://uptime.kuma.pet/sponsors?v=6&quot; alt /&gt;

## 🖼 More Screenshots

Light Mode:

&lt;img src=&quot;https://uptime.kuma.pet/img/light.jpg&quot; width=&quot;512&quot; alt=&quot;&quot; /&gt;

Status Page:

&lt;img src=&quot;https://user-images.githubusercontent.com/1336778/134628766-a3fe0981-0926-4285-ab46-891a21c3e4cb.png&quot; width=&quot;512&quot; alt=&quot;&quot; /&gt;

Settings Page:

&lt;img src=&quot;https://louislam.net/uptimekuma/2.jpg&quot; width=&quot;400&quot; alt=&quot;&quot; /&gt;

Telegram Notification Sample:

&lt;img src=&quot;https://louislam.net/uptimekuma/3.jpg&quot; width=&quot;400&quot; alt=&quot;&quot; /&gt;

## Motivation

- I was looking for a self-hosted monitoring tool like &quot;Uptime Robot&quot;, but it is hard to find a suitable one. One of the closest ones is statping. Unfortunately, it is not stable and no longer maintained.
- Wanted to build a fancy UI.
- Learn Vue 3 and vite.js.
- Show the power of Bootstrap 5.
- Try to use WebSocket with SPA instead of a REST API.
- Deploy my first Docker image to Docker Hub.

If you love this project, please consider giving it a ⭐.

## 🗣️ Discussion / Ask for Help

⚠️ For any general or technical questions, please don&#039;t send me an email, as I am unable to provide support in that manner. I will not respond if you ask questions there.

I recommend using Google, GitHub Issues, or Uptime Kuma&#039;s subreddit for finding answers to your question. If you cannot find the information you need, feel free to ask:

- [GitHub Issues](https://github.com/louislam/uptime-kuma/issues)
- [Subreddit (r/UptimeKuma)](https://www.reddit.com/r/UptimeKuma/)

My Reddit account: [u/louislamlam](https://reddit.com/u/louislamlam)
You can mention me if you ask a question on the subreddit.

## Contributions

### Create Pull Requests

We DO NOT accept all types of pull requests and do not want to waste your time. Please be sure that you have read and follow pull request rules:
[CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma](https://github.com/louislam/uptime-kuma/blob/master/CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma)

### Test Pull Requests

There are a lot of pull requests right now, but I don&#039;t have time to test them all.

If you want to help, you can check this:
https://github.com/louislam/uptime-kuma/wiki/Test-Pull-Requests

### Test Beta Version

Check out the latest beta release here: https://github.com/louislam/uptime-kuma/releases

### Bug Reports / Feature Requests

If you want to report a bug or request a new feature, feel free to open a [new issue](https://github.com/louislam/uptime-kuma/issues).

### Translations

If you want to translate Uptime Kuma into your language, please visit [Weblate Readme](https://github.com/louislam/uptime-kuma/blob/master/src/lang/README.md).

### Spelling &amp; Grammar

Feel free to correct the grammar in the documentation or code.
My mother language is not English and my grammar is not that great.


</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[hexgrad/kokoro]]></title>
            <link>https://github.com/hexgrad/kokoro</link>
            <guid>https://github.com/hexgrad/kokoro</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:26 GMT</pubDate>
            <description><![CDATA[https://hf.co/hexgrad/Kokoro-82M]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/hexgrad/kokoro">hexgrad/kokoro</a></h1>
            <p>https://hf.co/hexgrad/Kokoro-82M</p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,378</p>
            <p>Forks: 257</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre># kokoro

An inference library for [Kokoro-82M](https://huggingface.co/hexgrad/Kokoro-82M). You can [`pip install kokoro`](https://pypi.org/project/kokoro/).

&gt; **Kokoro** is an open-weight TTS model with 82 million parameters. Despite its lightweight architecture, it delivers comparable quality to larger models while being significantly faster and more cost-efficient. With Apache-licensed weights, Kokoro can be deployed anywhere from production environments to personal projects.

### Usage
You can run this basic cell on [Google Colab](https://colab.research.google.com/). [Listen to samples](https://huggingface.co/hexgrad/Kokoro-82M/blob/main/SAMPLES.md).
```py
!pip install -q kokoro&gt;=0.9.4 soundfile
!apt-get -qq -y install espeak-ng &gt; /dev/null 2&gt;&amp;1
from kokoro import KPipeline
from IPython.display import display, Audio
import soundfile as sf
import torch
pipeline = KPipeline(lang_code=&#039;a&#039;)
text = &#039;&#039;&#039;
[Kokoro](/kˈOkəɹO/) is an open-weight TTS model with 82 million parameters. Despite its lightweight architecture, it delivers comparable quality to larger models while being significantly faster and more cost-efficient. With Apache-licensed weights, [Kokoro](/kˈOkəɹO/) can be deployed anywhere from production environments to personal projects.
&#039;&#039;&#039;
generator = pipeline(text, voice=&#039;af_heart&#039;)
for i, (gs, ps, audio) in enumerate(generator):
    print(i, gs, ps)
    display(Audio(data=audio, rate=24000, autoplay=i==0))
    sf.write(f&#039;{i}.wav&#039;, audio, 24000)
```
Under the hood, `kokoro` uses [`misaki`](https://pypi.org/project/misaki/), a G2P library at https://github.com/hexgrad/misaki

### Advanced Usage
You can run this advanced cell on [Google Colab](https://colab.research.google.com/).
```py
# 1️⃣ Install kokoro
!pip install -q kokoro&gt;=0.9.4 soundfile
# 2️⃣ Install espeak, used for English OOD fallback and some non-English languages
!apt-get -qq -y install espeak-ng &gt; /dev/null 2&gt;&amp;1

# 3️⃣ Initalize a pipeline
from kokoro import KPipeline
from IPython.display import display, Audio
import soundfile as sf
import torch
# 🇺🇸 &#039;a&#039; =&gt; American English, 🇬🇧 &#039;b&#039; =&gt; British English
# 🇪🇸 &#039;e&#039; =&gt; Spanish es
# 🇫🇷 &#039;f&#039; =&gt; French fr-fr
# 🇮🇳 &#039;h&#039; =&gt; Hindi hi
# 🇮🇹 &#039;i&#039; =&gt; Italian it
# 🇯🇵 &#039;j&#039; =&gt; Japanese: pip install misaki[ja]
# 🇧🇷 &#039;p&#039; =&gt; Brazilian Portuguese pt-br
# 🇨🇳 &#039;z&#039; =&gt; Mandarin Chinese: pip install misaki[zh]
pipeline = KPipeline(lang_code=&#039;a&#039;) # &lt;= make sure lang_code matches voice, reference above.

# This text is for demonstration purposes only, unseen during training
text = &#039;&#039;&#039;
The sky above the port was the color of television, tuned to a dead channel.
&quot;It&#039;s not like I&#039;m using,&quot; Case heard someone say, as he shouldered his way through the crowd around the door of the Chat. &quot;It&#039;s like my body&#039;s developed this massive drug deficiency.&quot;
It was a Sprawl voice and a Sprawl joke. The Chatsubo was a bar for professional expatriates; you could drink there for a week and never hear two words in Japanese.

These were to have an enormous impact, not only because they were associated with Constantine, but also because, as in so many other areas, the decisions taken by Constantine (or in his name) were to have great significance for centuries to come. One of the main issues was the shape that Christian churches were to take, since there was not, apparently, a tradition of monumental church buildings when Constantine decided to help the Christian church build a series of truly spectacular structures. The main form that these churches took was that of the basilica, a multipurpose rectangular structure, based ultimately on the earlier Greek stoa, which could be found in most of the great cities of the empire. Christianity, unlike classical polytheism, needed a large interior space for the celebration of its religious services, and the basilica aptly filled that need. We naturally do not know the degree to which the emperor was involved in the design of new churches, but it is tempting to connect this with the secular basilica that Constantine completed in the Roman forum (the so-called Basilica of Maxentius) and the one he probably built in Trier, in connection with his residence in the city at a time when he was still caesar.

[Kokoro](/kˈOkəɹO/) is an open-weight TTS model with 82 million parameters. Despite its lightweight architecture, it delivers comparable quality to larger models while being significantly faster and more cost-efficient. With Apache-licensed weights, [Kokoro](/kˈOkəɹO/) can be deployed anywhere from production environments to personal projects.
&#039;&#039;&#039;
# text = &#039;「もしおれがただ偶然、そしてこうしようというつもりでなくここに立っているのなら、ちょっとばかり絶望するところだな」と、そんなことが彼の頭に思い浮かんだ。&#039;
# text = &#039;中國人民不信邪也不怕邪，不惹事也不怕事，任何外國不要指望我們會拿自己的核心利益做交易，不要指望我們會吞下損害我國主權、安全、發展利益的苦果！&#039;
# text = &#039;Los partidos políticos tradicionales compiten con los populismos y los movimientos asamblearios.&#039;
# text = &#039;Le dromadaire resplendissant déambulait tranquillement dans les méandres en mastiquant de petites feuilles vernissées.&#039;
# text = &#039;ट्रांसपोर्टरों की हड़ताल लगातार पांचवें दिन जारी, दिसंबर से इलेक्ट्रॉनिक टोल कलेक्शनल सिस्टम&#039;
# text = &quot;Allora cominciava l&#039;insonnia, o un dormiveglia peggiore dell&#039;insonnia, che talvolta assumeva i caratteri dell&#039;incubo.&quot;
# text = &#039;Elabora relatórios de acompanhamento cronológico para as diferentes unidades do Departamento que propõem contratos.&#039;

# 4️⃣ Generate, display, and save audio files in a loop.
generator = pipeline(
    text, voice=&#039;af_heart&#039;, # &lt;= change voice here
    speed=1, split_pattern=r&#039;\n+&#039;
)
# Alternatively, load voice tensor directly:
# voice_tensor = torch.load(&#039;path/to/voice.pt&#039;, weights_only=True)
# generator = pipeline(
#     text, voice=voice_tensor,
#     speed=1, split_pattern=r&#039;\n+&#039;
# )

for i, (gs, ps, audio) in enumerate(generator):
    print(i)  # i =&gt; index
    print(gs) # gs =&gt; graphemes/text
    print(ps) # ps =&gt; phonemes
    display(Audio(data=audio, rate=24000, autoplay=i==0))
    sf.write(f&#039;{i}.wav&#039;, audio, 24000) # save each audio file
```

### Windows Installation
To install espeak-ng on Windows:
1. Go to [espeak-ng releases](https://github.com/espeak-ng/espeak-ng/releases)
2. Click on **Latest release** 
3. Download the appropriate `*.msi` file (e.g. **espeak-ng-20191129-b702b03-x64.msi**)
4. Run the downloaded installer

For advanced configuration and usage on Windows, see the [official espeak-ng Windows guide](https://github.com/espeak-ng/espeak-ng/blob/master/docs/guide.md)

### MacOS Apple Silicon GPU Acceleration

On Mac M1/M2/M3/M4 devices, you can explicitly specify the environment variable `PYTORCH_ENABLE_MPS_FALLBACK=1` to enable GPU acceleration.

```bash
PYTORCH_ENABLE_MPS_FALLBACK=1 python run-your-kokoro-script.py
```

### Conda Environment
Use the following conda `environment.yml` if you&#039;re facing any dependency issues.
```yaml
name: kokoro
channels:
  - defaults
dependencies:
  - python==3.9       
  - libstdcxx~=12.4.0 # Needed to load espeak correctly. Try removing this if you&#039;re facing issues with Espeak fallback. 
  - pip:
      - kokoro&gt;=0.3.1
      - soundfile
      - misaki[en]
```

### Acknowledgements
- 🛠️ [@yl4579](https://huggingface.co/yl4579) for architecting StyleTTS 2.
- 🏆 [@Pendrokar](https://huggingface.co/Pendrokar) for adding Kokoro as a contender in the TTS Spaces Arena.
- 📊 Thank you to everyone who contributed synthetic training data.
- ❤️ Special thanks to all compute sponsors.
- 👾 Discord server: https://discord.gg/QuGxSWBfQy
- 🪽 Kokoro is a Japanese word that translates to &quot;heart&quot; or &quot;spirit&quot;. Kokoro is also a [character in the Terminator franchise](https://terminator.fandom.com/wiki/Kokoro) along with [Misaki](https://github.com/hexgrad/misaki?tab=readme-ov-file#acknowledgements).

&lt;img src=&quot;https://static0.gamerantimages.com/wordpress/wp-content/uploads/2024/08/terminator-zero-41-1.jpg&quot; width=&quot;400&quot; alt=&quot;kokoro&quot; /&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[poteto/hiring-without-whiteboards]]></title>
            <link>https://github.com/poteto/hiring-without-whiteboards</link>
            <guid>https://github.com/poteto/hiring-without-whiteboards</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:25 GMT</pubDate>
            <description><![CDATA[⭐️ Companies that don't have a broken hiring process]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/poteto/hiring-without-whiteboards">poteto/hiring-without-whiteboards</a></h1>
            <p>⭐️ Companies that don't have a broken hiring process</p>
            <p>Language: JavaScript</p>
            <p>Stars: 48,155</p>
            <p>Forks: 3,750</p>
            <p>Stars today: 36 stars today</p>
            <h2>README</h2><pre># Hiring Without Whiteboards

A list of companies (or teams) that don&#039;t do &quot;whiteboard&quot; interviews. &quot;Whiteboards&quot; is used as a metaphor, and is a _symbol_ for the kinds of CS trivia questions that are associated with bad interview practices. Whiteboards are not bad – CS trivia questions are. Using sites like HackerRank/LeetCode _probably_ fall into a similar category.

The companies and teams listed here use interview techniques and questions that resemble day-to-day work. For example, pairing on a real world problem or a paid/unpaid take home exercise. Read (and contribute to) [our recommendations](RECOMMENDATIONS.md) for ways to conduct better interviews.

### tl;dr

- Discussing a real world problem (with or without whiteboard) is 👍
- Solving CS trivia, technical puzzles, riddles, brainteasers (with or without whiteboard) is 👎

Please open a [PR](https://github.com/poteto/hiring-without-whiteboards/pull/new/master) to be added.

### Duds

If you&#039;ve been through an interview with one of these companies recently, and your experience suggests otherwise from their description, please open a [PR](https://github.com/poteto/hiring-without-whiteboards/pull/new/master) to remove them from this list.

### I want to search/sort/filter/group by X!

Check out our [Airtable](https://airtable.com/shr3eGPDm3wGjT2gA)!

Additions to this document that are properly formatted will automatically be pushed and added to Airtable. Keywords from the description will also be extracted. You can see (and contribute!) to the [API here](https://github.com/poteto/hww-api).

Also check out [No Whiteboards](https://www.nowhiteboard.org) to search for jobs at these companies.

### Discussion and other reads

&lt;!--lint disable--&gt;

- Discussion
  - [HackerNews (2017)](https://news.ycombinator.com/item?id=13874026)
  - [HackerNews (2020)](https://news.ycombinator.com/item?id=23981795)
- [Finding a better alternative to the whiteboard interview](https://theoutline.com/post/1256/finding-a-better-alternative-to-the-whiteboard-interview)
- [How to hire engineering talent without the BS](https://jes.al//2023/03/how-to-hire-engineering-talent-without-the-bs/)
- [How I Hire Programmers](http://www.aaronsw.com/weblog/hiring.en) by Aaron Swartz

&lt;!--lint enable--&gt;

---

## 0 - 9

- [1000.software](https://www.1000.software/careers) | Krakow, Poland / Remote | Series of 2 interviews first on soft skills, second on technical skills (how to build things, how to solve specific, real world problem, best practice) and meeting with a team leader. Sometimes a take home, simple project.

## A - C

- [Aalyria](https://www.aalyria.com/jobs) | Remote | Timeboxed design exercise and related coding exercise, followed by a technical/behavioral discussion with the team, and behavioral interview with leadership
- [Able](https://able.co/careers) | Lima, PE / Remote | Coding interview, Technical interview (Backlog Refinement + System Design), Leadership interview (Behavioural)
- [Abstract](https://angel.co/abstract/jobs) | San Francisco, CA
- [Accenture](https://www.accenture.com/us-en/careers) | San Francisco, CA / Los Angeles, CA / New York, NY / Kuala Lumpur, Malaysia | Technical phone discussion with architecture manager, followed by behavioral interview focusing on soft skills
- [Accredible](https://www.accredible.com/careers) | Cambridge, UK / San Francisco, CA / Remote | Take home project, then a pair-programming and discussion onsite / Skype round.
- [Acko](https://www.acko.com/careers) | Mumbai, India | Phone interview, followed by a small take home problem. Finally a F2F or skype pair programming session
- [Acumen](https://www.acumenci.com/careers/) | London, UK | Small take home test, and sit in on some sprint rituals on-site
- [Ad Hoc](https://adhoc.team) | Remote / Washington, DC | Technical take-home assignment, followed by multiple video calls that are discussions of technical background and experience.
- [Adaface](https://www.adaface.com) | Remote/ Singapore, Singapore / Bangalore, India | Conversational on-the-job technical assessment, followed by video calls with technical lead and founders
- [AdCellerant](https://adcellerant.com/career-job-listing/) | Denver, CO | Technical phone screen, 5-day take home code challenge, then on-site interview comprised of cultural and technical discussions
- [Adeva](https://adevait.com) | New York, USA | 4 steps interviewing process that includes online coding assignment + lead engineer call.
- [AdEx Network](https://www.adex.network) | Sofia, Bulgaria / Remote | Email screening process, followed by a take-home assignment
- [Admiral](https://getadmiral.com) | Gainesville, FL / Remote | Intro phone call with hiring manager, take-home assignment, (mostly) non-technical on-site with team/leadership
- [Adnymics](https://adnymics.com) | Munich, DE | Take home project, then work with the team for a day
- [Adthena](https://adthena.com) | London, UK | Takehome project and discussion on-site
- [Adyen](https://www.adyen.com) | Amsterdam, NL | Take-home assignment, design discussion based on take home, culture fit etc. Provides visa sponsorship to the Netherlands.
- [Affinipay](https://www.affinipay.com) | Austin, TX | Short takehome project + video interview about coding with engineering manager
- [Agency Enterprise Studio](https://ae.studio) | Remote / Los Angeles, CA / Florianópolis, Brazil | Live coding of a task you&#039;d do daily
- [Ageno](https://ageno.pl) | Bielsko-Biala, Poland | Simple Magento Take-home project and discussion on the real world problems.
- [AgileMD](https://angel.co/agilemd/jobs) | San Francisco, CA | Takehome project
- [AImotive](https://aimotive.com/career/) | Budapest, Hungary | Small take-home project, then in-person interview about technical background
- [Airbase](https://www.airbase.com/careers) | San Francisco, CA; Bangalore, India; Remote | Intro Call with HR or EMs, small take-home project, two tech rounds with Airbase Engineers (based on real world engineering problems), followed by a final values round with the Founder or Director of Engineering.
- [Airtable](https://airtable.com/careers) | San Francisco, CA; Austin, TX; Mountain View, CA; New York, NY; Remote | Take home project that resembles a problem Airtable solves for. Five hour on-site which includes a discussion of the project, UI design, discussing architectural tradeoffs, and code debugging.
- [Aiwip](https://aiwip.com) | London, UK | Skype/phone interview followed by takehome project or worksample (or whiteboard)
- [Albert](https://jobs.lever.co/meetalbert/) | Los Angeles, CA | Discussion with senior engineer, and then practical pair programming related to my experience + the position
- [Algolia](https://www.algolia.com/careers) | Paris, France / San Francisco, CA | Takehome project &amp; Onsite discussions and presentation
- [all about apps GmbH](https://www.allaboutapps.at/jobs) | Vienna, Austria | 2-phase technical discussion &amp; examination with department heads and management.
- [Allegro](https://allegro.pl/praca) | Warsaw, Poland; Poznan, Poland; Torun, Poland; Wroclaw, Poland; Krakow, Poland | Take home, simple project. Series of 2 technical interviews (how to build things, how to solve specific, real world problem) and meeting with a team leader.
- [Alluxi](https://www.alluxi.mx) | Monterrey, Mexico | Initial skype interview, technical interview with Senior engineer and work sample review.
- [Almabase](https://www.almabase.com/careers#believe) | Bengaluru, India | Take-home assignment, design discussion based on take home, low level and high level design rounds based on real life problems, culture fit etc. during onsite.
- [AlphaSights](https://www.alphasights.com/careers/open-roles/) | London, UK / New York, NY / Remote | Initial interview, pair programming then final round with general technical questions
- [AMAGI](https://amagi.io) | Makati, Philippines | 1) Review of your resume, portfolio, and/or GitHub profile; 2) 1 hour discussion (in-person or Skype) about your goals, experience, personal culture, and how to apply technical solutions to real problems;
- [Analytical Flavor Systems](https://gastrograph.com) | Manhattan, New York | Code sample or take-home project, both with discussion.
- [Anderson Merchandisers](https://amerch.com) | Remote / Dallas, TX | Technical discussion about the technologies they are currently using. Going over background and resume.
- [Angaza](https://www.angaza.com/careers/) | San Francisco, CA | Take-home assignment with guaranteed feedback, on-site interviews involving actual day-to-day work
- [Animech](https://careers.animech.com) | Uppsala, Sweden | Multiple interviews with technical staff with real problem discussions.
- [Anyfin](https://career.anyfin.com) | Stockholm, Sweden | Takehome project &amp; Onsite discussions and presentation.
- [Aparkado](https://aparkado.de) | Cologne, Germany / Remote | Intro with Co-Founder, team fit with the team plus a small real-world problem to solve, followed by final round with CEO / Co-Founder.
- [Apollo Agriculture](https://apolloagriculture.com) | Nairobi, Kenya / Remote | Takehome project or Worksample (or whiteboard)
- [Applied](https://www.beapplied.com) | London, UK | Situational judgement tests focusing on real-world soft skills (online then in structured interview)
- [Arachnys](https://angel.co/arachnys/jobs/220465-software-engineer) | London, UK | Take home test, real world pair programming
- [Articulate](https://www.articulate.com/about/careers/) | Remote | Take-home project &amp; pair program on a problem similar to daily work
- [Artsy](https://www.artsy.net/jobs#engineering) | New York, NY / London, UK / Berlin, Germany / Los Angeles, CA / Hong Kong, Hong Kong / Remote | Our process: 1) Informal chat 2) Application 3) Phone screen 4) In-person interview with 1 lead, 2 individual contributors and 1 non-engineer (30-45 mins each), focusing on your work habits and expertise as demonstrated in your previous work 5) ~4 in-depth professional reference calls (30-45 mins each).
- [ASI Data Science](https://www.asidatascience.com/careers) | London, UK | Project to work at home, general technical questions, pair programming with engineers
- [ASOS](https://www.asoscareers.com) | London, UK | Take home or in-person code refactoring exercise, in-person walk-though of solution including software craftsmanship principles and design decisions, in-person freestyle architecture walk-through
- [Ataccama](https://jobs.ataccama.com) | Prague, Czech Republic | Face to face interview (skype or onsite), coding task for 30 min, meeting with team members
- [aTech Media](https://atech.media) | London, UK | Face to face interview, review of existing open source contributions or, if none are available, asked to write a library for something that interests them
- [Atlan](https://atlan.com) | New Delhi, India | A mini project (to be done within 8 days), followed by a discussion with the team you&#039;re applying to. Then as the final step, a call with one of the founders.
- [Aura Frames](https://auraframes.com/jobs?gh_src=2ef5cfa32) | New York, NY / San Francisco, CA | Simplified real-world coding task on Coderpad.io, followed by a few hours onsite writing code in our actual codebase.
- [Auto1](https://www.auto1-group.com/jobs) | Berlin, DE | Series of Skype interviews which covers general technical questions, followed by a take-home assignment
- [Automattic](https://automattic.com/work-with-us/) | Remote | short take-home code test, then a part-time, paid project.
- [AutoScout24](https://github.com/AutoScout24/hiring) | Munich, Germany | Skype interview followed by home assignment from our day-to-day business and then on-site interview including lunch with a team
- [Avant](https://avant.com/jobs) | Chicago, IL | Pair programming interviews.
- [Avarteq GmbH](https://www.avarteq.com/career) | Berlin, Germany / Saarbrücken, Germany | Technical interview with our developers on-site or remote followed by a work sample in a pair programming session or a previous take-home project with a follow-up discussion and detailed feedback.
- [Axelerant](https://www.axelerant.com/careers) | Remote | Take-home project, interviews with hr and engineering team.
- [Axiacore](https://axiacore.com) | Bogota, Colombia | We talk about on how is your process when solving problems.
- [Axios](https://www.axios.com/careers) | Arlington, VA / New York, NY / San Francisco, CA / Remote | Take-home project, with discussion.
- [B12](https://boards.greenhouse.io/b12#.WMlLfRIrJTa) | New York, NY | Take-home exercises and pair-programming with the team.
- [Babylon Health iOS Team](https://github.com/Babylonpartners/iOS-Interview-Demo) | London, UK | Take-home project, on-site presentation and discussion, design and product interview.
- [Backbase](https://workatbackbase.com) | Amsterdam, Netherlands; Cardiff, Wales; London, UK; Atlanta, GA | Takehome project, interviews
- [Badi](https://jobs.badi.com) | Barcelona, Spain | Phone Screen, Take-home project, then a discussion onsite round.
- [Badoo](https://team.badoo.com/jobs) | London, UK | Take-home project, then a discussion onsite round.
- [BAE Systems Digital Intelligence](https://cybercareers.baesystems.com) | London, UK / Manchester, UK / Guildford, UK / Gloucester, UK | Initial interview with experience based technical questions, second interview pair programming on problem similar to daily work
- [Bakken &amp; Bæck](https://bakkenbaeck.com/jobs) | Oslo, Norway; Amsterdam, Netherlands; Bonn, Germany | Skype interview followed by take-home assignment and a visit to one of our offices
- [Balabit](https://career.balabit.com) | Budapest, Hungary | Take-home project (medium size, with restrictions, e.g. only stdlib may be used), then discussion on-site
- [Barracuda View Team](https://www.barracuda.com/company/careers) | Chelmsford, MA / Remote | Phone screen, remote pair programming session, technical discussion interview, culture fit interview
- [Basecamp](https://basecamp.com/about/jobs) | Chicago, IL / Remote
- [BCW Group](https://www.bcw.group) | Remote | Behavioral interview with the technical lead and hiring manager, followed by a take-home project, and finally a brief discussion about how the exercise went.
- [Beam Dental](https://jobs.lever.co/beam) | Columbus, OH / Remote | Phone Screen, Take Home Project, In-Person or remote Pairing and Cross-Functional Interview
- [Belka](https://www.belkadigital.com) | Trento, Italy; Munich, Germany | We give you a small task that you can do alone and then we evaluate your work with you
- [Bemind](https://www.bemind.me) | Biella, Italy / Latina, Italy / Remote | Series of interviews, discussion about technical background and past experiences, take-home project &amp; pair programming
- [Bendyworks](https://bendyworks.com/careers) | Madison, WI | Interviews and pair programming on personal projects
- [Benefex](https://hellobenefex.com/about-us/careers) | Southampton, UK / Remote | A short, 3-stages interview process. The first stage is with HR. The second stage is a take-home assignment. The third stage is discussing the take-home assignment solution with two engineers.
- [Benshi.ai](https://www.benshi.ai) | Barcelona, Spain | Initial 15-30 mins interview with HR, followed by 15-30 mins chat with hiring manager to clear out basic concepts, then followed by take-home task for 5 days
- [Betterment](https://www.betterment.com/careers) | New York, NY | Phone interview followed by on-site pair programming to simulate a Betterment feature build.
- [BetterPT](https://www.betterhealthcare.co/careers) | New York, NY | Initial phone interview, project using our tech stack, on-site code review/pair programming and &quot;meet the team&quot;.
- [bevelop](https://bevelop.de) | Aschaffenburg, BY / Remote | Initial introductory call, on-sight or remote trial day with project
- [Big Nerd Ranch](https://bignerdranch.com/careers) | Atlanta, GA &amp; Remote | Interviews and pair programming on an internal project or problem.
- [BigaBid](https://www.bigabid.com/careers) | Tel Aviv, Israel | Design a real time solution to a problem relevant to the business, followed by a take home project implementing a lean version of the solution
- [BigBinary](https://www.bigbinary.com/jobs) | Remote | Phone discussion with a developer and the CEO
- [BioConnect](https://bioconnect.com) | Toronto, Canada | Take-home assignment &amp; discussion
- [Bitchief Technology Services](https://www.bitchief.com) | India, Gurgaon | Screening Round: General comms and aptitude, Technical Round: Questions related to required technology, Home Assignments
- [bitExpert AG](https://www.bitexpert.de/karriere) | Mannheim, Germany | Interview with experience based technical questions
- [Bitpanda](https://www.bitpanda.com/en/career) | Cracow, Poland / Remote | HR talk, take-home task, tech interview, culture fit interview
- [Bits of Love](https://www.bitsoflove.be/careers) | Bruges, Belgium | In-person interview to evaluate experience and motivation, potentially followed by take-home project.
- [Bitso](https://bitso.com/jobs) | Mexico City, Mexico / Remote | Intro phone or hangouts/skype call with People team, take home project followed by walkthrough of your code and some tech questions focused on your experience, founders video call with one of the founders
- [Blackdot Solutions](https://blackdotsolutions.com) | Cambridge, UK | Take-home project followed by on-site face-to-face walkthru of your code focusing on decisions/reasoning/technology used.
- [BlackTech](https://blacktech.com.np) | Pokhara, NP | Take-home project followed by on-site face to face or remote video conference interview.
- [Bleacher Report](https://bleacherreport.com) | San Francisco, CA, USA | Take-home project; on-site discussion about the project and meeting with different teams
- [Blendle](https://blendle.homerun.co/?lang=en) | Utrecht, The Netherlands | Take-home project &amp; pair program on a problem similar to daily work
- [blogfoster](https://github.com/blogfoster/join-the-engineering-team) | Berlin, Germany | Take-home project, discussion on-site
- [Bloom Works](https://bloomworks.digital/jobs) | Remote | Discussion, pair-programming exercise
- [Blue Bottle Coffee](https://www.bluebottlecoffee.com) | Oakland, CA | Technical Phone Screen, Take Home Challenge, Technical in-persons.
- [Bluesoft](http://www.bluesoft.com.br) | São Paulo, Brazil | Takehome project and an interview to evaluate the candidate&#039;s previous experience.
- [Bocoup](https://bocoup.com/careers) | Boston, MA / Remote | Pair programming with personal laptop on typical problem seen at work
- [Bonusly](https://bonus.ly/careers) | Boulder, CO | Values &amp; Tech focused interview - Process: 30 minute with HR, 45 minute Google Meet interview with 2 team members, ~2-4 hour take-home project, on-site interview involving 2 values-alignment interviews and 1 technical interview going over your take home project
- [BookingSync](https://www.bookingsync.com/en/jobs) | Remote | Small takehome project, interviews over skype with team members.
- [BoomTown](https://boomtownroi.com) | Charleston, SC / Atlanta, GA / Remote | Conversational in-person interviews with potential team members and managers that revolve around past experience and how that could be applied to future work
- [Botika](https://botika.ai) | San Marino, RSM | View code, projects, libraries or any other open source story that you have been a part of, take-home project followed by on-site face-to-face walkthru of your code focusing on decisions/reasoning/technology used.
- [Bouvet](https://www.bouvet.no) | Bergen, Norway | Pair programming with senior engineers
- [brainn.co](https://brainn.co) | São Paulo, BR | Zoom/On-site interview, take-home project and interview with a team leader.
- [BrainStation-23](https://brainstation-23.com) | Dhaka, BD | A practical project followed by series of in-person interview sessions
- [Bramble](https://www.brmbl.io) | Remote | Slack interview, take home test, pairing, culture-fit interview.
- [Breather

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[sudheerj/reactjs-interview-questions]]></title>
            <link>https://github.com/sudheerj/reactjs-interview-questions</link>
            <guid>https://github.com/sudheerj/reactjs-interview-questions</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:24 GMT</pubDate>
            <description><![CDATA[List of top 500 ReactJS Interview Questions & Answers....Coding exercise questions are coming soon!!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/sudheerj/reactjs-interview-questions">sudheerj/reactjs-interview-questions</a></h1>
            <p>List of top 500 ReactJS Interview Questions & Answers....Coding exercise questions are coming soon!!</p>
            <p>Language: JavaScript</p>
            <p>Stars: 41,776</p>
            <p>Forks: 9,823</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre># React Interview Questions &amp; Answers

&gt; Click :star: if you like the project. Pull Requests are highly appreciated. Follow me [@SudheerJonna](https://twitter.com/SudheerJonna) for technical updates.

---

&lt;div&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.greatfrontend.com/questions/react?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=sudheerj-react&amp;gnrs=sudheerj&quot;&gt;
    &lt;img src=&quot;./images/collab/greatfrontend-banner4x.png&quot; alt=&quot;GreatFrontEnd React Interview Questions&quot; width=&quot;100%&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;

&gt; 💡 Nail React interviews with questions and solutions from ex-interviewers! [Try GreatFrontEnd →](https://www.greatfrontend.com/questions/react?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=sudheerj-react&amp;gnrs=sudheerj) 💡

---

&lt;div&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.frontendlead.com/coding-questions?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=sudheerj-react&quot; rel=&quot;dofollow&quot;&gt;
    &lt;img src=&quot;./images/collab/frontendlead-banner.png&quot; alt=&quot;React interview&quot; width=&quot;100%&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;

&gt; 🚀 Ace React interview questions with solutions from FAANG+ companies! [Try FrontendLead →](https://www.frontendlead.com/coding-questions?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=sudheerj-react) 🚀

---

&lt;div&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://zerotomastery.io/?utm_source=github&amp;utm_medium=sponsor&amp;utm_campaign=reactjs-interview-questions&quot;&gt;
    &lt;img src=&quot;https://process.fs.teachablecdn.com/ADNupMnWyR7kCWRvm76Laz/resize=height:70/https://www.filepicker.io/api/file/AKYtjj5SSGyJuyZrkAB2&quot; alt=&quot;ZTM Logo&quot; width=&quot;100&quot; height=&quot;50&quot;&gt;
  &lt;/a&gt;
    &lt;ol&gt;
      &lt;li&gt;I recommend this &lt;a href=&quot;https://links.zerotomastery.io/react_sudheer&quot;&gt;React course&lt;/a&gt; if you’re serious about learning React and want to go beyond the basics.&lt;/li&gt;
      &lt;li&gt;Want to ace your coding interview and get hired at your dream company? &lt;a href=&quot;http://links.zerotomastery.io/mci_sudheer&quot;&gt;Take this coding interview bootcamp&lt;/a&gt;.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/p&gt;
&lt;/div&gt;

---

**Note:** This repository is specific to ReactJS. Please check [JavaScript Interview Questions](https://github.com/sudheerj/javascript-interview-questions) for core JavaScript questions and [Data Structures and Algorithms](https://github.com/sudheerj/datastructures-algorithms) for DSA-related questions or problems.

### Table of Contents

&lt;details open&gt;
&lt;summary&gt;
Hide/Show table of contents
&lt;/summary&gt;

| No. | Questions                                                                                                                                                                                                                        |
| --- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
|     | **Core React**                                                                                                                                                                                                                   |
| 1   | [What is React?](#what-is-react)                                                                                                                                                                                                 |
| 2   | [What is the history behind React’s evolution?](#what-is-the-history-behind-react-evolution)                                                                                                                                      |
| 3   | [What are the major features of React?](#what-are-the-major-features-of-react)                                                                                                                                                   |
| 4   | [What is JSX?](#what-is-jsx)                                                                                                                                                                                                     |
| 5   | [What is the difference between an Element and a Component?](#what-is-the-difference-between-element-and-component)                                                                                                              |
| 6   | [How do you create components in React?](#how-to-create-components-in-react)                                                                                                                                                     |
| 7   | [When should you use a Class Component over a Function Component?](#when-to-use-a-class-component-over-a-function-component)                                                                                                    |
| 8   | [What are Pure Components?](#what-are-pure-components)                                                                                                                                                                           |
| 9   | [What is state in React?](#what-is-state-in-react)                                                                                                                                                                               |
| 10  | [What are props in React?](#what-are-props-in-react)                                                                                                                                                                             |
| 11  | [What is the difference between state and props?](#what-is-the-difference-between-state-and-props)                                                                                                                               |
| 12  | [What is the difference between HTML and React event handling?](#what-is-the-difference-between-html-and-react-event-handling)                                                                                                   |
| 13  | [What are synthetic events in React?](#what-are-synthetic-events-in-react)                                                                                                                                                       |
| 14  | [What are inline conditional expressions?](#what-are-inline-conditional-expressions)                                                                                                                                             |
| 15  | [What is the &quot;key&quot; prop and what is its benefit when used in arrays of elements?](#what-is-key-prop-and-what-is-the-benefit-of-using-it-in-arrays-of-elements)                                                                    |
| 16  | [What is the Virtual DOM?](#what-is-virtual-dom)                                                                                                                                                                                 |
| 17  | [How does the Virtual DOM work?](#how-virtual-dom-works)                                                                                                                                                                         |
| 18  | [What is the difference between Shadow DOM and Virtual DOM?](#what-is-the-difference-between-shadow-dom-and-virtual-dom)                                                                                                         |
| 19  | [What is React Fiber?](#what-is-react-fiber)                                                                                                                                                                                     |
| 20  | [What is the main goal of React Fiber?](#what-is-the-main-goal-of-react-fiber)                                                                                                                                                   |
| 21  | [What are controlled components?](#what-are-controlled-components)                                                                                                                                                               |
| 22  | [What are uncontrolled components?](#what-are-uncontrolled-components)                                                                                                                                                           |
| 23  | [What is the difference between createElement and cloneElement?](#what-is-the-difference-between-createelement-and-cloneelement)                                                                                                 |
| 24  | [What is Lifting State Up in React?](#what-is-lifting-state-up-in-react)                                                                                                                                                         |
| 25  | [What are Higher-Order Components?](#what-are-higher-order-components)                                                                                                                                                           |
| 26  | [What is the children prop?](#what-is-children-prop)                                                                                                                                                                             |
| 27  | [How do you write comments in React?](#how-to-write-comments-in-react)                                                                                                                                                           |
| 28  | [What is reconciliation?](#what-is-reconciliation)                                                                                                                                                                               |
| 29  | [Does the lazy function support named exports?](#does-the-lazy-function-support-named-exports)                                                                                                                                   |
| 30  | [Why does React use className instead of the class attribute?](#why-react-uses-classname-over-class-attribute)                                                                                                                   |
| 31  | [What are Fragments?](#what-are-fragments)                                                                                                                                                                                       |
| 32  | [Why are Fragments better than container divs?](#why-fragments-are-better-than-container-divs)                                                                                                                                   |
| 33  | [What are portals in React?](#what-are-portals-in-react)                                                                                                                                                                         |
| 34  | [What are stateless components?](#what-are-stateless-components)                                                                                                                                                                 |
| 35  | [What are stateful components?](#what-are-stateful-components)                                                                                                                                                                   |
| 36  | [How do you apply validation to props in React?](#how-to-apply-validation-on-props-in-react)                                                                                                                                     |
| 37  | [What are the advantages of React?](#what-are-the-advantages-of-react)                                                                                                                                                           |
| 38  | [What are the limitations of React?](#what-are-the-limitations-of-react)                                                                                                                                                         |
| 39  | [What are the recommended ways for static type checking?](#what-are-the-recommended-ways-for-static-type-checking)                                                                                                               |
| 40  | [What is the use of the react-dom package?](#what-is-the-use-of-react-dom-package)                                                                                                                                               |
| 41  | [What is ReactDOMServer?](#what-is-reactdomserver)                                                                                                                                                                               |
| 42  | [How do you use innerHTML in React?](#how-to-use-innerhtml-in-react)                                                                                                                                                             |
| 43  | [How do you apply styles in React?](#how-to-use-styles-in-react)                                                                                                                                                                 |
| 44  | [How are events different in React?](#how-events-are-different-in-react)                                                                                                                                                         |
| 45  | [What is the impact of using indexes as keys?](#what-is-the-impact-of-indexes-as-keys)                                                                                                                                          |
| 46  | [How do you conditionally render components?](#how-do-you-conditionally-render-components)                                                                                                                                       |
| 47  | [Why do we need to be careful when spreading props on DOM elements?](#why-we-need-to-be-careful-when-spreading-props-on-dom-elements)                                                                                             |
| 48  | [How do you memoize a component?](#how-do-you-memoize-a-component)                                                                                                                                                               |
| 49  | [How do you implement Server-Side Rendering (SSR)?](#how-you-implement-server-side-rendering-or-ssr)                                                                                                                              |
| 50  | [How do you enable production mode in React?](#how-to-enable-production-mode-in-react)                                                                                                                                           |
| 51  | [Do Hooks replace render props and higher-order components?](#do-hooks-replace-render-props-and-higher-order-components)                                                                                                         |
| 52  | [What is a switching component?](#what-is-a-switching-component)                                                                                                                                                                 |
| 53  | [What are React Mixins?](#what-are-react-mixins)                                                                                                                                                                                 |
| 54  | [What are the pointer events supported in React?](#what-are-the-pointer-events-supported-in-react)                                                                                                                               |
| 55  | [Why should component names start with a capital letter?](#why-should-component-names-start-with-capital-letter)                                                                                                                  |
| 56  | [Are custom DOM attributes supported in React v16?](#are-custom-dom-attributes-supported-in-react-v16)                                                                                                                           |
| 57  | [How do you loop inside JSX?](#how-to-loop-inside-jsx)                                                                                                                                                                           |
| 58  | [How do you access props within attribute quotes?](#how-do-you-access-props-in-attribute-quotes)                                                                                                                                 |
| 59  | [What is a React PropType array with shape?](#what-is-react-proptype-array-with-shape)                                                                                                                                           |
| 60  | [How do you conditionally apply class attributes?](#how-to-conditionally-apply-class-attributes)                                                                                                                                 |
| 61  | [What is the difference between React and ReactDOM?](#what-is-the-difference-between-react-and-reactdom)                                                                                                                         |
| 62  | [Why is ReactDOM separated from React?](#why-reactdom-is-separated-from-react)                                                                                                                                                   |
| 63  | [How do you use the React label element?](#how-to-use-react-label-element)                                                                                                                                                       |
| 64  | [How do you combine multiple inline style objects?](#how-to-combine-multiple-inline-style-objects)                                                                                                                               |
| 65  | [How do you re-render the view when the browser is resized?](#how-to-re-render-the-view-when-the-browser-is-resized)                                                                                                             |
| 66  | [How do you pretty-print JSON with React?](#how-to-pretty-print-json-with-react)                                                                                                                                                 |
| 67  | [Why can’t you update props in React?](#why-you-cant-update-props-in-react)                                                                                                                                                      |
| 68  | [How do you focus an input element on page load?](#how-to-focus-an-input-element-on-page-load)                                                                                                                                   |
| 69  | [How can you find the version of React at runtime in the browser?](#how-can-we-find-the-version-of-react-at-runtime-in-the-browser)                                                                                              |
| 70  | [How do you add Google Analytics for React Router?](#how-to-add-google-analytics-for-react-router)                                                                                                                               |
| 71  | [How do you apply vendor prefixes to inline styles in React?](#how-do-you-apply-vendor-prefixes-to-inline-styles-in-react)                                                                                                       |
| 72  | [How do you import and export components using React and ES6?](#how-to-import-and-export-components-using-react-and-es6)                                                                                                         |

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[bigskysoftware/htmx]]></title>
            <link>https://github.com/bigskysoftware/htmx</link>
            <guid>https://github.com/bigskysoftware/htmx</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:23 GMT</pubDate>
            <description><![CDATA[</> htmx - high power tools for HTML]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/bigskysoftware/htmx">bigskysoftware/htmx</a></h1>
            <p></> htmx - high power tools for HTML</p>
            <p>Language: JavaScript</p>
            <p>Stars: 44,307</p>
            <p>Forks: 1,431</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>[![&lt;/&gt; htmx](https://raw.githubusercontent.com/bigskysoftware/htmx/master/www/static/img/htmx_logo.1.png &quot;high power tools for HTML&quot;)](https://htmx.org)

*high power tools for HTML*

[![Discord](https://img.shields.io/discord/725789699527933952)](https://htmx.org/discord)
[![Netlify](https://img.shields.io/netlify/dba3fc85-d9c9-476a-a35a-e52a632cef78)](https://app.netlify.com/sites/htmx/deploys)
[![Bundlephobia](https://badgen.net/bundlephobia/dependency-count/htmx.org)](https://bundlephobia.com/result?p=htmx.org)
[![Bundlephobia](https://badgen.net/bundlephobia/minzip/htmx.org)](https://bundlephobia.com/result?p=htmx.org)

## introduction

htmx allows you to access  [AJAX](https://htmx.org/docs#ajax), [CSS Transitions](https://htmx.org/docs#css_transitions),
[WebSockets](https://htmx.org/docs#websockets) and [Server Sent Events](https://htmx.org/docs#sse)
directly in HTML, using [attributes](https://htmx.org/reference#attributes), so you can build
[modern user interfaces](https://htmx.org/examples) with the [simplicity](https://en.wikipedia.org/wiki/HATEOAS) and
[power](https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm) of hypertext

htmx is small ([~14k min.gz&#039;d](https://unpkg.com/htmx.org/dist/)),
[dependency-free](https://github.com/bigskysoftware/htmx/blob/master/package.json) &amp;
[extendable](https://htmx.org/extensions)

## motivation

* Why should only `&lt;a&gt;` and `&lt;form&gt;` be able to make HTTP requests?
* Why should only `click` &amp; `submit` events trigger them?
* Why should only GET &amp; POST be available?
* Why should you only be able to replace the *entire* screen?

By removing these arbitrary constraints htmx completes HTML as a
[hypertext](https://en.wikipedia.org/wiki/Hypertext)

## quick start

```html
  &lt;script src=&quot;https://unpkg.com/htmx.org@2.0.4&quot;&gt;&lt;/script&gt;
  &lt;!-- have a button POST a click via AJAX --&gt;
  &lt;button hx-post=&quot;/clicked&quot; hx-swap=&quot;outerHTML&quot;&gt;
    Click Me
  &lt;/button&gt;
```

The [`hx-post`](https://htmx.org/attributes/hx-post) and [`hx-swap`](https://htmx.org/attributes/hx-swap) attributes tell htmx:

&gt; &quot;When a user clicks on this button, issue an AJAX request to /clicked, and replace the entire button with the response&quot;

htmx is the successor to [intercooler.js](http://intercoolerjs.org)

### installing as a node package

To install using npm:

```
npm install htmx.org --save
```

Note there is an old broken package called `htmx`.  This is `htmx.org`.

## website &amp; docs

* &lt;https://htmx.org&gt;
* &lt;https://htmx.org/docs&gt;

## contributing
Want to contribute? Check out our [contribution guidelines](CONTRIBUTING.md)

No time? Then [become a sponsor](https://github.com/sponsors/bigskysoftware#sponsors)

### hacking guide

To develop htmx locally, you will need to install the development dependencies.

Run:

```
npm install
```

Then, run a web server in the root.

This is easiest with:

```
npx serve
```

You can then run the test suite by navigating to:

&lt;http://0.0.0.0:3000/test/&gt;

At this point you can modify `/src/htmx.js` to add features, and then add tests in the appropriate area under `/test`.

* `/test/index.html` - the root test page from which all other tests are included
* `/test/attributes` - attribute specific tests
* `/test/core` - core functionality tests
* `/test/core/regressions.js` - regression tests
* `/test/ext` - extension tests
* `/test/manual` - manual tests that cannot be automated

htmx uses the [mocha](https://mochajs.org/) testing framework, the [chai](https://www.chaijs.com/) assertion framework
and [sinon](https://sinonjs.org/releases/v9/fake-xhr-and-server/) to mock out AJAX requests.  They are all OK.

You can also run live tests and demo of the WebSockets and Server-Side Events extensions with `npm run ws-tests`

## haiku

*javascript fatigue:&lt;br/&gt;
longing for a hypertext&lt;br/&gt;
already in hand*
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[songquanpeng/one-api]]></title>
            <link>https://github.com/songquanpeng/one-api</link>
            <guid>https://github.com/songquanpeng/one-api</guid>
            <pubDate>Sat, 19 Apr 2025 00:04:22 GMT</pubDate>
            <description><![CDATA[LLM API 管理 & 分发系统，支持 OpenAI、Azure、Anthropic Claude、Google Gemini、DeepSeek、字节豆包、ChatGLM、文心一言、讯飞星火、通义千问、360 智脑、腾讯混元等主流模型，统一 API 适配，可用于 key 管理与二次分发。单可执行文件，提供 Docker 镜像，一键部署，开箱即用。LLM API management & key redistribution system, unifying multiple providers under a single API. Single binary, Docker-ready, with an English UI.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/songquanpeng/one-api">songquanpeng/one-api</a></h1>
            <p>LLM API 管理 & 分发系统，支持 OpenAI、Azure、Anthropic Claude、Google Gemini、DeepSeek、字节豆包、ChatGLM、文心一言、讯飞星火、通义千问、360 智脑、腾讯混元等主流模型，统一 API 适配，可用于 key 管理与二次分发。单可执行文件，提供 Docker 镜像，一键部署，开箱即用。LLM API management & key redistribution system, unifying multiple providers under a single API. Single binary, Docker-ready, with an English UI.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 24,687</p>
            <p>Forks: 5,108</p>
            <p>Stars today: 25 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;right&quot;&gt;
   &lt;strong&gt;中文&lt;/strong&gt; | &lt;a href=&quot;./README.en.md&quot;&gt;English&lt;/a&gt; | &lt;a href=&quot;./README.ja.md&quot;&gt;日本語&lt;/a&gt;
&lt;/p&gt;


&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/songquanpeng/one-api&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/songquanpeng/one-api/main/web/default/public/logo.png&quot; width=&quot;150&quot; height=&quot;150&quot; alt=&quot;one-api logo&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;

# One API

_✨ 通过标准的 OpenAI API 格式访问所有的大模型，开箱即用 ✨_

&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://raw.githubusercontent.com/songquanpeng/one-api/main/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/license/songquanpeng/one-api?color=brightgreen&quot; alt=&quot;license&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/songquanpeng/one-api/releases/latest&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/v/release/songquanpeng/one-api?color=brightgreen&amp;include_prereleases&quot; alt=&quot;release&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://hub.docker.com/repository/docker/justsong/one-api&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/docker/pulls/justsong/one-api?color=brightgreen&quot; alt=&quot;docker pull&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/songquanpeng/one-api/releases/latest&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/downloads/songquanpeng/one-api/total?color=brightgreen&amp;include_prereleases&quot; alt=&quot;release&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://goreportcard.com/report/github.com/songquanpeng/one-api&quot;&gt;
    &lt;img src=&quot;https://goreportcard.com/badge/github.com/songquanpeng/one-api&quot; alt=&quot;GoReportCard&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#部署&quot;&gt;部署教程&lt;/a&gt;
  ·
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#使用方法&quot;&gt;使用方法&lt;/a&gt;
  ·
  &lt;a href=&quot;https://github.com/songquanpeng/one-api/issues&quot;&gt;意见反馈&lt;/a&gt;
  ·
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#截图展示&quot;&gt;截图展示&lt;/a&gt;
  ·
  &lt;a href=&quot;https://openai.justsong.cn/&quot;&gt;在线演示&lt;/a&gt;
  ·
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#常见问题&quot;&gt;常见问题&lt;/a&gt;
  ·
  &lt;a href=&quot;https://github.com/songquanpeng/one-api#相关项目&quot;&gt;相关项目&lt;/a&gt;
  ·
  &lt;a href=&quot;https://iamazing.cn/page/reward&quot;&gt;赞赏支持&lt;/a&gt;
&lt;/p&gt;

&gt; [!NOTE]
&gt; 本项目为开源项目，使用者必须在遵循 OpenAI 的[使用条款](https://openai.com/policies/terms-of-use)以及**法律法规**的情况下使用，不得用于非法用途。
&gt;
&gt; 根据[《生成式人工智能服务管理暂行办法》](http://www.cac.gov.cn/2023-07/13/c_1690898327029107.htm)的要求，请勿对中国地区公众提供一切未经备案的生成式人工智能服务。

&gt; [!NOTE]
&gt; 稳定版 / 预览版镜像地址：[justsong/one-api](https://hub.docker.com/repository/docker/justsong/one-api)
&gt; 或者 [ghcr.io/songquanpeng/one-api](https://github.com/songquanpeng/one-api/pkgs/container/one-api)
&gt;
&gt; alpha 版镜像地址：[justsong/one-api-alpha](https://hub.docker.com/repository/docker/justsong/one-api-alpha)
&gt; 或者 [ghcr.io/songquanpeng/one-api-alpha](https://github.com/songquanpeng/one-api/pkgs/container/one-api-alpha)

&gt; [!WARNING]
&gt; 使用 root 用户初次登录系统后，务必修改默认密码 `123456`！

## 功能
1. 支持多种大模型：
   + [x] [OpenAI ChatGPT 系列模型](https://platform.openai.com/docs/guides/gpt/chat-completions-api)（支持 [Azure OpenAI API](https://learn.microsoft.com/en-us/azure/ai-services/openai/reference)）
   + [x] [Anthropic Claude 系列模型](https://anthropic.com) (支持 AWS Claude)
   + [x] [Google PaLM2/Gemini 系列模型](https://developers.generativeai.google)
   + [x] [Mistral 系列模型](https://mistral.ai/)
   + [x] [字节跳动豆包大模型（火山引擎）](https://www.volcengine.com/experience/ark?utm_term=202502dsinvite&amp;ac=DSASUQY5&amp;rc=2QXCA1VI)
   + [x] [百度文心一言系列模型](https://cloud.baidu.com/doc/WENXINWORKSHOP/index.html)
   + [x] [阿里通义千问系列模型](https://help.aliyun.com/document_detail/2400395.html)
   + [x] [讯飞星火认知大模型](https://www.xfyun.cn/doc/spark/Web.html)
   + [x] [智谱 ChatGLM 系列模型](https://bigmodel.cn)
   + [x] [360 智脑](https://ai.360.cn)
   + [x] [腾讯混元大模型](https://cloud.tencent.com/document/product/1729)
   + [x] [Moonshot AI](https://platform.moonshot.cn/)
   + [x] [百川大模型](https://platform.baichuan-ai.com)
   + [x] [MINIMAX](https://api.minimax.chat/)
   + [x] [Groq](https://wow.groq.com/)
   + [x] [Ollama](https://github.com/ollama/ollama)
   + [x] [零一万物](https://platform.lingyiwanwu.com/)
   + [x] [阶跃星辰](https://platform.stepfun.com/)
   + [x] [Coze](https://www.coze.com/)
   + [x] [Cohere](https://cohere.com/)
   + [x] [DeepSeek](https://www.deepseek.com/)
   + [x] [Cloudflare Workers AI](https://developers.cloudflare.com/workers-ai/)
   + [x] [DeepL](https://www.deepl.com/)
   + [x] [together.ai](https://www.together.ai/)
   + [x] [novita.ai](https://www.novita.ai/)
   + [x] [硅基流动 SiliconCloud](https://cloud.siliconflow.cn/i/rKXmRobW)
   + [x] [xAI](https://x.ai/)
2. 支持配置镜像以及众多[第三方代理服务](https://iamazing.cn/page/openai-api-third-party-services)。
3. 支持通过**负载均衡**的方式访问多个渠道。
4. 支持 **stream 模式**，可以通过流式传输实现打字机效果。
5. 支持**多机部署**，[详见此处](#多机部署)。
6. 支持**令牌管理**，设置令牌的过期时间、额度、允许的 IP 范围以及允许的模型访问。
7. 支持**兑换码管理**，支持批量生成和导出兑换码，可使用兑换码为账户进行充值。
8. 支持**渠道管理**，批量创建渠道。
9. 支持**用户分组**以及**渠道分组**，支持为不同分组设置不同的倍率。
10. 支持渠道**设置模型列表**。
11. 支持**查看额度明细**。
12. 支持**用户邀请奖励**。
13. 支持以美元为单位显示额度。
14. 支持发布公告，设置充值链接，设置新用户初始额度。
15. 支持模型映射，重定向用户的请求模型，如无必要请不要设置，设置之后会导致请求体被重新构造而非直接透传，会导致部分还未正式支持的字段无法传递成功。
16. 支持失败自动重试。
17. 支持绘图接口。
18. 支持 [Cloudflare AI Gateway](https://developers.cloudflare.com/ai-gateway/providers/openai/)，渠道设置的代理部分填写 `https://gateway.ai.cloudflare.com/v1/ACCOUNT_TAG/GATEWAY/openai` 即可。
19. 支持丰富的**自定义**设置，
    1. 支持自定义系统名称，logo 以及页脚。
    2. 支持自定义首页和关于页面，可以选择使用 HTML &amp; Markdown 代码进行自定义，或者使用一个单独的网页通过 iframe 嵌入。
20. 支持通过系统访问令牌调用管理 API，进而**在无需二开的情况下扩展和自定义** One API 的功能，详情请参考此处 [API 文档](./docs/API.md)。
21. 支持 Cloudflare Turnstile 用户校验。
22. 支持用户管理，支持**多种用户登录注册方式**：
    + 邮箱登录注册（支持注册邮箱白名单）以及通过邮箱进行密码重置。
    + 支持[飞书授权登录](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/authen-v1/authorize/get)（[这里有 One API 的实现细节阐述供参考](https://iamazing.cn/page/feishu-oauth-login)）。
    + 支持 [GitHub 授权登录](https://github.com/settings/applications/new)。
    + 微信公众号授权（需要额外部署 [WeChat Server](https://github.com/songquanpeng/wechat-server)）。
23. 支持主题切换，设置环境变量 `THEME` 即可，默认为 `default`，欢迎 PR 更多主题，具体参考[此处](./web/README.md)。
24. 配合 [Message Pusher](https://github.com/songquanpeng/message-pusher) 可将报警信息推送到多种 App 上。

## 部署
### 基于 Docker 进行部署
```shell
# 使用 SQLite 的部署命令：
docker run --name one-api -d --restart always -p 3000:3000 -e TZ=Asia/Shanghai -v /home/ubuntu/data/one-api:/data justsong/one-api
# 使用 MySQL 的部署命令，在上面的基础上添加 `-e SQL_DSN=&quot;root:123456@tcp(localhost:3306)/oneapi&quot;`，请自行修改数据库连接参数，不清楚如何修改请参见下面环境变量一节。
# 例如：
docker run --name one-api -d --restart always -p 3000:3000 -e SQL_DSN=&quot;root:123456@tcp(localhost:3306)/oneapi&quot; -e TZ=Asia/Shanghai -v /home/ubuntu/data/one-api:/data justsong/one-api
```

其中，`-p 3000:3000` 中的第一个 `3000` 是宿主机的端口，可以根据需要进行修改。

数据和日志将会保存在宿主机的 `/home/ubuntu/data/one-api` 目录，请确保该目录存在且具有写入权限，或者更改为合适的目录。

如果启动失败，请添加 `--privileged=true`，具体参考 https://github.com/songquanpeng/one-api/issues/482 。

如果上面的镜像无法拉取，可以尝试使用 GitHub 的 Docker 镜像，将上面的 `justsong/one-api` 替换为 `ghcr.io/songquanpeng/one-api` 即可。

如果你的并发量较大，**务必**设置 `SQL_DSN`，详见下面[环境变量](#环境变量)一节。

更新命令：`docker run --rm -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower -cR`

Nginx 的参考配置：
```
server{
   server_name openai.justsong.cn;  # 请根据实际情况修改你的域名

   location / {
          client_max_body_size  64m;
          proxy_http_version 1.1;
          proxy_pass http://localhost:3000;  # 请根据实际情况修改你的端口
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $remote_addr;
          proxy_cache_bypass $http_upgrade;
          proxy_set_header Accept-Encoding gzip;
          proxy_read_timeout 300s;  # GPT-4 需要较长的超时时间，请自行调整
   }
}
```

之后使用 Let&#039;s Encrypt 的 certbot 配置 HTTPS：
```bash
# Ubuntu 安装 certbot：
sudo snap install --classic certbot
sudo ln -s /snap/bin/certbot /usr/bin/certbot
# 生成证书 &amp; 修改 Nginx 配置
sudo certbot --nginx
# 根据指示进行操作
# 重启 Nginx
sudo service nginx restart
```

初始账号用户名为 `root`，密码为 `123456`。

### 通过宝塔面板进行一键部署
1. 安装宝塔面板9.2.0及以上版本，前往 [宝塔面板](https://www.bt.cn/new/download.html?r=dk_oneapi) 官网，选择正式版的脚本下载安装；
2. 安装后登录宝塔面板，在左侧菜单栏中点击 `Docker`，首次进入会提示安装 `Docker` 服务，点击立即安装，按提示完成安装；
3. 安装完成后在应用商店中搜索 `One-API`，点击安装，配置域名等基本信息即可完成安装；

### 基于 Docker Compose 进行部署

&gt; 仅启动方式不同，参数设置不变，请参考基于 Docker 部署部分

```shell
# 目前支持 MySQL 启动，数据存储在 ./data/mysql 文件夹内
docker-compose up -d

# 查看部署状态
docker-compose ps
```

### 手动部署
1. 从 [GitHub Releases](https://github.com/songquanpeng/one-api/releases/latest) 下载可执行文件或者从源码编译：
   ```shell
   git clone https://github.com/songquanpeng/one-api.git

   # 构建前端
   cd one-api/web/default
   npm install
   npm run build

   # 构建后端
   cd ../..
   go mod download
   go build -ldflags &quot;-s -w&quot; -o one-api
   ````
2. 运行：
   ```shell
   chmod u+x one-api
   ./one-api --port 3000 --log-dir ./logs
   ```
3. 访问 [http://localhost:3000/](http://localhost:3000/) 并登录。初始账号用户名为 `root`，密码为 `123456`。

更加详细的部署教程[参见此处](https://iamazing.cn/page/how-to-deploy-a-website)。

### 多机部署
1. 所有服务器 `SESSION_SECRET` 设置一样的值。
2. 必须设置 `SQL_DSN`，使用 MySQL 数据库而非 SQLite，所有服务器连接同一个数据库。
3. 所有从服务器必须设置 `NODE_TYPE` 为 `slave`，不设置则默认为主服务器。
4. 设置 `SYNC_FREQUENCY` 后服务器将定期从数据库同步配置，在使用远程数据库的情况下，推荐设置该项并启用 Redis，无论主从。
5. 从服务器可以选择设置 `FRONTEND_BASE_URL`，以重定向页面请求到主服务器。
6. 从服务器上**分别**装好 Redis，设置好 `REDIS_CONN_STRING`，这样可以做到在缓存未过期的情况下数据库零访问，可以减少延迟（Redis 集群或者哨兵模式的支持请参考环境变量说明）。
7. 如果主服务器访问数据库延迟也比较高，则也需要启用 Redis，并设置 `SYNC_FREQUENCY`，以定期从数据库同步配置。

环境变量的具体使用方法详见[此处](#环境变量)。

### 宝塔部署教程

详见 [#175](https://github.com/songquanpeng/one-api/issues/175)。

如果部署后访问出现空白页面，详见 [#97](https://github.com/songquanpeng/one-api/issues/97)。

### 部署第三方服务配合 One API 使用
&gt; 欢迎 PR 添加更多示例。

#### ChatGPT Next Web
项目主页：https://github.com/Yidadaa/ChatGPT-Next-Web

```bash
docker run --name chat-next-web -d -p 3001:3000 yidadaa/chatgpt-next-web
```

注意修改端口号，之后在页面上设置接口地址（例如：https://openai.justsong.cn/ ）和 API Key 即可。

#### ChatGPT Web
项目主页：https://github.com/Chanzhaoyu/chatgpt-web

```bash
docker run --name chatgpt-web -d -p 3002:3002 -e OPENAI_API_BASE_URL=https://openai.justsong.cn -e OPENAI_API_KEY=sk-xxx chenzhaoyu94/chatgpt-web
```

注意修改端口号、`OPENAI_API_BASE_URL` 和 `OPENAI_API_KEY`。

#### QChatGPT - QQ机器人
项目主页：https://github.com/RockChinQ/QChatGPT

根据[文档](https://qchatgpt.rockchin.top)完成部署后，在 `data/provider.json`设置`requester.openai-chat-completions.base-url`为 One API 实例地址，并填写 API Key 到 `keys.openai` 组中，设置 `model` 为要使用的模型名称。

运行期间可以通过`!model`命令查看、切换可用模型。

### 部署到第三方平台
&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;部署到 Sealos &lt;/strong&gt;&lt;/summary&gt;
&lt;div&gt;

&gt; Sealos 的服务器在国外，不需要额外处理网络问题，支持高并发 &amp; 动态伸缩。

点击以下按钮一键部署（部署后访问出现 404 请等待 3~5 分钟）：

[![Deploy-on-Sealos.svg](https://raw.githubusercontent.com/labring-actions/templates/main/Deploy-on-Sealos.svg)](https://cloud.sealos.io/?openapp=system-fastdeploy?templateName=one-api)

&lt;/div&gt;
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;部署到 Zeabur&lt;/strong&gt;&lt;/summary&gt;
&lt;div&gt;

&gt; Zeabur 的服务器在国外，自动解决了网络的问题，同时免费的额度也足够个人使用

[![Deploy on Zeabur](https://zeabur.com/button.svg)](https://zeabur.com/templates/7Q0KO3)

1. 首先 fork 一份代码。
2. 进入 [Zeabur](https://zeabur.com?referralCode=songquanpeng)，登录，进入控制台。
3. 新建一个 Project，在 Service -&gt; Add Service 选择 Marketplace，选择 MySQL，并记下连接参数（用户名、密码、地址、端口）。
4. 复制链接参数，运行 ```create database `one-api` ``` 创建数据库。
5. 然后在 Service -&gt; Add Service，选择 Git（第一次使用需要先授权），选择你 fork 的仓库。
6. Deploy 会自动开始，先取消。进入下方 Variable，添加一个 `PORT`，值为 `3000`，再添加一个 `SQL_DSN`，值为 `&lt;username&gt;:&lt;password&gt;@tcp(&lt;addr&gt;:&lt;port&gt;)/one-api` ，然后保存。 注意如果不填写 `SQL_DSN`，数据将无法持久化，重新部署后数据会丢失。
7. 选择 Redeploy。
8. 进入下方 Domains，选择一个合适的域名前缀，如 &quot;my-one-api&quot;，最终域名为 &quot;my-one-api.zeabur.app&quot;，也可以 CNAME 自己的域名。
9. 等待部署完成，点击生成的域名进入 One API。

&lt;/div&gt;
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;部署到 Render&lt;/strong&gt;&lt;/summary&gt;
&lt;div&gt;

&gt; Render 提供免费额度，绑卡后可以进一步提升额度

Render 可以直接部署 docker 镜像，不需要 fork 仓库：https://dashboard.render.com

&lt;/div&gt;
&lt;/details&gt;

## 配置
系统本身开箱即用。

你可以通过设置环境变量或者命令行参数进行配置。

等到系统启动后，使用 `root` 用户登录系统并做进一步的配置。

**Note**：如果你不知道某个配置项的含义，可以临时删掉值以看到进一步的提示文字。

## 使用方法
在`渠道`页面中添加你的 API Key，之后在`令牌`页面中新增访问令牌。

之后就可以使用你的令牌访问 One API 了，使用方式与 [OpenAI API](https://platform.openai.com/docs/api-reference/introduction) 一致。

你需要在各种用到 OpenAI API 的地方设置 API Base 为你的 One API 的部署地址，例如：`https://openai.justsong.cn`，API Key 则为你在 One API 中生成的令牌。

注意，具体的 API Base 的格式取决于你所使用的客户端。

例如对于 OpenAI 的官方库：
```bash
OPENAI_API_KEY=&quot;sk-xxxxxx&quot;
OPENAI_API_BASE=&quot;https://&lt;HOST&gt;:&lt;PORT&gt;/v1&quot;
```

```mermaid
graph LR
    A(用户)
    A ---&gt;|使用 One API 分发的 key 进行请求| B(One API)
    B --&gt;|中继请求| C(OpenAI)
    B --&gt;|中继请求| D(Azure)
    B --&gt;|中继请求| E(其他 OpenAI API 格式下游渠道)
    B --&gt;|中继并修改请求体和返回体| F(非 OpenAI API 格式下游渠道)
```

可以通过在令牌后面添加渠道 ID 的方式指定使用哪一个渠道处理本次请求，例如：`Authorization: Bearer ONE_API_KEY-CHANNEL_ID`。
注意，需要是管理员用户创建的令牌才能指定渠道 ID。

不加的话将会使用负载均衡的方式使用多个渠道。

### 环境变量
&gt; One API 支持从 `.env` 文件中读取环境变量，请参照 `.env.example` 文件，使用时请将其重命名为 `.env`。
1. `REDIS_CONN_STRING`：设置之后将使用 Redis 作为缓存使用。
   + 例子：`REDIS_CONN_STRING=redis://default:redispw@localhost:49153`
   + 如果数据库访问延迟很低，没有必要启用 Redis，启用后反而会出现数据滞后的问题。
   + 如果需要使用哨兵或者集群模式：
     + 则需要把该环境变量设置为节点列表，例如：`localhost:49153,localhost:49154,localhost:49155`。
     + 除此之外还需要设置以下环境变量：
       + `REDIS_PASSWORD`：Redis 集群或者哨兵模式下的密码设置。
       + `REDIS_MASTER_NAME`：Redis 哨兵模式下主节点的名称。
2. `SESSION_SECRET`：设置之后将使用固定的会话密钥，这样系统重新启动后已登录用户的 cookie 将依旧有效。
   + 例子：`SESSION_SECRET=random_string`
3. `SQL_DSN`：设置之后将使用指定数据库而非 SQLite，请使用 MySQL 或 PostgreSQL。
   + 例子：
     + MySQL：`SQL_DSN=root:123456@tcp(localhost:3306)/oneapi`
     + PostgreSQL：`SQL_DSN=postgres://postgres:123456@localhost:5432/oneapi`（适配中，欢迎反馈）
   + 注意需要提前建立数据库 `oneapi`，无需手动建表，程序将自动建表。
   + 如果使用本地数据库：部署命令可添加 `--network=&quot;host&quot;` 以使得容器内的程序可以访问到宿主机上的 MySQL。
   + 如果使用云数据库：如果云服务器需要验证身份，需要在连接参数中添加 `?tls=skip-verify`。
   + 请根据你的数据库配置修改下列参数（或者保持默认值）：
     + `SQL_MAX_IDLE_CONNS`：最大空闲连接数，默认为 `100`。
     + `SQL_MAX_OPEN_CONNS`：最大打开连接数，默认为 `1000`。
       + 如果报错 `Error 1040: Too many connections`，请适当减小该值。
     + `SQL_CONN_MAX_LIFETIME`：连接的最大生命周期，默认为 `60`，单位分钟。
4. `LOG_SQL_DSN`：设置之后将为 `logs` 表使用独立的数据库，请使用 MySQL 或 PostgreSQL。
5. `FRONTEND_BASE_URL`：设置之后将重定向页面请求到指定的地址，仅限从服务器设置。
   + 例子：`FRONTEND_BASE_URL=https://openai.justsong.cn`
6. `MEMORY_CACHE_ENABLED`：启用内存缓存，会导致用户额度的更新存在一定的延迟，可选值为 `true` 和 `false`，未设置则默认为 `false`。
   + 例子：`MEMORY_CACHE_ENABLED=true`
7. `SYNC_FREQUENCY`：在启用缓存的情况下与数据库同步配置的频率，单位为秒，默认为 `600` 秒。
   + 例子：`SYNC_FREQUENCY=60`
8. `NODE_TYPE`：设置之后将指定节点类型，可选值为 `master` 和 `slave`，未设置则默认为 `master`。
   + 例子：`NODE_TYPE=slave`
9. `CHANNEL_UPDATE_FREQUENCY`：设置之后将定期更新渠道余额，单位为分钟，未设置则不进行更新。
   + 例子：`CHANNEL_UPDATE_FREQUENCY=1440`
10. `CHANNEL_TEST_FREQUENCY`：设置之后将定期检查渠道，单位为分钟，未设置则不进行检查。 
   +例子：`CHANNEL_TEST_FREQUENCY=1440`
11. `POLLING_INTERVAL`：批量更新渠道余额以及测试可用性时的请求间隔，单位为秒，默认无间隔。
    + 例子：`POLLING_INTERVAL=5`
12. `BATCH_UPDATE_ENABLED`：启用数据库批量更新聚合，会导致用户额度的更新存在一定的延迟可选值为 `true` 和 `false`，未设置则默认为 `false`。
    + 例子：`BATCH_UPDATE_ENABLED=true`
    + 如果你遇到了数据库连接数过多的问题，可以尝试启用该选项。
13. `BATCH_UPDATE_INTERVAL=5`：批量更新聚合的时间间隔，单位为秒，默认为 `5`。
    + 例子：`BATCH_UPDATE_INTERVAL=5`
14. 请求频率限制：
    + `GLOBAL_API_RATE_LIMIT`：全局 API 速率限制（除中继请求外），单 ip 三分钟内的最大请求数，默认为 `180`。
    + `GLOBAL_WEB_RATE_LIMIT`：全局 Web 速率限制，单 ip 三分钟内的最大请求数，默认为 `60`。
15. 编码器缓存设置：
    + `TIKTOKEN_CACHE_DIR`：默认程序启动时会联网下载一些通用的词元的编码，如：`gpt-3.5-turbo`，在一些网络环境不稳定，或者离线情况，可能会导致启动有问题，可以配置此目录缓存数据，可迁移到离线环境。
    + `DATA_GYM_CACHE_DIR`：目前该配置作用与 `TIKTOKEN_CACHE_DIR` 一致，但是优先级没有它高。
16. `RELAY_TIMEOUT`：中继超时设置，单位为秒，默认不设置超时时间。
17. `RELAY_PROXY`：设置后使用该代理来请求 API。
18. `USER_CONTENT_REQUEST_TIMEOUT`：用户上传内容下载超时时间，单位为秒。
19. `USER_CONTENT_REQUEST_PROXY`：设置后使用该代理来请求用户上传的内容，例如图片。
20. `SQLITE_BUSY_TIMEOUT`：SQLite 锁等待超时设置，单位为毫秒，默认 `3000`。
21. `GEMINI_SAFETY_SETTING`：Gemini 的安全设置，默认 `BLOCK_NONE`。
22. `GEMINI_VERSION`：One API 所使用的 Gemini 版本，默认为 `v1`。
23. `THEME`：系统的主题设置，默认为 `default`，具体可选值参考[此处](./web/README.md)。
24. `ENABLE_METRIC`：是否根据请求成功率禁用渠道，默认不开启，可选值为 `true` 和 `false`。
25. `METRIC_QUEUE_SIZE`：请求成功率统计队列大小，默认为 `10`。
26. `METRIC_SUCCESS_RATE_THRESHOLD`：请求成功率阈值，默认为 `0.8`。
27. `INITIAL_ROOT_TOKEN`：如果设置了该值，则在系统首次启动时会自动创建一个值为该环境变量值的 root 用户令牌。
28. `INITIAL_ROOT_ACCESS_TOKEN`：如果设置了该值，则在系统首次启动时会自动创建一个值为该环境变量的 root 用户创建系统管理令牌。
29. `ENFORCE_INCLUDE_USAGE`：是否强制在 stream 模型下返回 usage，默认不开启，可选值为 `true` 和 `false`。
30. `TEST_PROMPT`：测试模型时的用户 prompt，默认为 `Print your model name exactly and do not output without any other text.`。

### 命令行参数
1. `--port &lt;port_number&gt;`: 指定服务器监听的端口号，默认为 `3000`。
   + 例子：`--port 3000`
2. `--log-dir &lt;log_dir&gt;`: 指定日志文件夹，如果没有设置，默认保存至工作目录的 `logs` 文件夹下。
   + 例子：`--log-dir ./logs`
3. `--version`: 打印系统版本号并退出。
4. `--help`: 查看命令的使用帮助和参数说明。

## 演示
### 在线演示
注意，该演示站不提供对外服务：
https://openai.justsong.cn

### 截图展示
![channel](https://user-images.githubusercontent.com/39998050/233837954-ae6683aa-5c4f-429f-a949-6645a83c9490.png)
![token](https://user-images.githubusercontent.com/39998050/233837971-dab488b7-6d96-43af-b640-a168e8d1c9bf.png)

## 常见问题
1. 额度是什么？怎么计算的？One API 的额度计算有问题？
   + 额度 = 分组倍率 * 模型倍率 * （提示 token 数 + 补全 token 数 * 补全倍率）
   + 其中补全倍率对于 GPT3.5 固定为 1.33，GPT4 为 2，与官方保持一致。
   + 如果是非流模式，官方接口会返回消耗的总 token，但是你要注意提示和补全的消耗倍率不一样。
   + 注意，One API 的默认倍率就是官方倍率，是已经调整过的。
2. 账户额度足够为什么提示额度不足？
   + 请检查你的令牌额度是否足够，这个和账户额度是分开的。
   + 令牌额度仅供用户设置最大使用量，用户可自由设置。
3. 提示无可用渠道？
   + 请检查的用户分组和渠道分组设置。
   + 以及渠道的模型设置。
4. 渠道测试报错：`invalid character &#039;&lt;&#039; looking for beginning of value`
   + 这是因为返回值不是合法的 JSON，而是一个 HTML 页面。
   + 大概率是你的部署站的 IP 或代理的节点被 CloudFlare 封禁了。
5. ChatGPT Next Web 报错：`Failed to fetch`
   + 部署的时候不要设置 `BASE_URL`。
   + 检查你的接口地址和 API Key 有没有填对。
   + 检查是否启用了 HTTPS，浏览器会拦截 HTTPS 域名下的 HTTP 请求。
6. 报错：`当前分组负载已饱和，请稍后再试`
   + 上游渠道 429 了。
7. 升级之后我的数据会丢失吗？
   + 如果使用 MySQL，不会。
   + 如果使用 SQLite，需要按照我所给的部署命令挂载 volume 持久化 one-api.db 数据库文件，否则容器重启后数据会丢失。
8. 升级之前数据库需要做变更吗？
   + 一般情况下不需要，系统将在初始化的时候自动调整。
   + 如果需要的话，我会在更新日志中说明，并给出脚本。
9. 手动修改数据库后报错：`数据库一致性已被破坏，请联系管理员`？
   + 这是检测到 ability 表里有些记录的渠道 id 是不存在的，这大概率是因为你删了 channel 表里的记录但是没有同步在 ability 表里清理无效的渠道。
   + 对于每一个渠道，其所支持的模型都需要有一个专门的 ability 表的记录，表示该渠道支持该模型。

## 相关项目
* [FastGPT](https://github.com/labring/FastGPT): 基于 LLM 大语言模型的知识库问答系统
* [ChatGPT Next Web](https://github.com/Yidadaa/ChatGPT-Next-Web):  一键拥有你自己的跨平台 ChatGPT 应用
* [VChart](https://github.com/VisActor/VChart):  不只是开箱即用的多端图表库，更是生动灵活的数据故事讲述者。
* [VMind](https://github.com/VisActor/VMind):  不仅自动，还很智能。开源智能可视化解决方案。
* [CherryStudio](https://github.com/CherryHQ/cherry-studio):  全平台支持的AI客户端, 多服务商集成管理、本地知识库支持。

## 注意

本项目使用 MIT 协议进行开源，**在此基础上**，必须在页面底部保留署名以及指向本项目的链接。如果不想保留署名，必须首先获得授权。

同样适用于基于本项目的二开项目。

依据 MIT 协议，使用者需自行承担使用本项目的风险与责任，本开源项目开发者与此无关。
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>