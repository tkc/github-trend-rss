<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Sat, 09 Aug 2025 00:04:40 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[open-webui/open-webui]]></title>
            <link>https://github.com/open-webui/open-webui</link>
            <guid>https://github.com/open-webui/open-webui</guid>
            <pubDate>Sat, 09 Aug 2025 00:04:40 GMT</pubDate>
            <description><![CDATA[User-friendly AI Interface (Supports Ollama, OpenAI API, ...)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/open-webui/open-webui">open-webui/open-webui</a></h1>
            <p>User-friendly AI Interface (Supports Ollama, OpenAI API, ...)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 105,874</p>
            <p>Forks: 14,256</p>
            <p>Stars today: 195 stars today</p>
            <h2>README</h2><pre># Open WebUI üëã

![GitHub stars](https://img.shields.io/github/stars/open-webui/open-webui?style=social)
![GitHub forks](https://img.shields.io/github/forks/open-webui/open-webui?style=social)
![GitHub watchers](https://img.shields.io/github/watchers/open-webui/open-webui?style=social)
![GitHub repo size](https://img.shields.io/github/repo-size/open-webui/open-webui)
![GitHub language count](https://img.shields.io/github/languages/count/open-webui/open-webui)
![GitHub top language](https://img.shields.io/github/languages/top/open-webui/open-webui)
![GitHub last commit](https://img.shields.io/github/last-commit/open-webui/open-webui?color=red)
[![Discord](https://img.shields.io/badge/Discord-Open_WebUI-blue?logo=discord&amp;logoColor=white)](https://discord.gg/5rJgQTnV4s)
[![](https://img.shields.io/static/v1?label=Sponsor&amp;message=%E2%9D%A4&amp;logo=GitHub&amp;color=%23fe8e86)](https://github.com/sponsors/tjbck)

**Open WebUI is an [extensible](https://docs.openwebui.com/features/plugin/), feature-rich, and user-friendly self-hosted AI platform designed to operate entirely offline.** It supports various LLM runners like **Ollama** and **OpenAI-compatible APIs**, with **built-in inference engine** for RAG, making it a **powerful AI deployment solution**.

Passionate about open-source AI? [Join our team ‚Üí](https://careers.openwebui.com/)

![Open WebUI Demo](./demo.gif)

&gt; [!TIP]  
&gt; **Looking for an [Enterprise Plan](https://docs.openwebui.com/enterprise)?** ‚Äì **[Speak with Our Sales Team Today!](mailto:sales@openwebui.com)**
&gt;
&gt; Get **enhanced capabilities**, including **custom theming and branding**, **Service Level Agreement (SLA) support**, **Long-Term Support (LTS) versions**, and **more!**

For more information, be sure to check out our [Open WebUI Documentation](https://docs.openwebui.com/).

## Key Features of Open WebUI ‚≠ê

- üöÄ **Effortless Setup**: Install seamlessly using Docker or Kubernetes (kubectl, kustomize or helm) for a hassle-free experience with support for both `:ollama` and `:cuda` tagged images.

- ü§ù **Ollama/OpenAI API Integration**: Effortlessly integrate OpenAI-compatible APIs for versatile conversations alongside Ollama models. Customize the OpenAI API URL to link with **LMStudio, GroqCloud, Mistral, OpenRouter, and more**.

- üõ°Ô∏è **Granular Permissions and User Groups**: By allowing administrators to create detailed user roles and permissions, we ensure a secure user environment. This granularity not only enhances security but also allows for customized user experiences, fostering a sense of ownership and responsibility amongst users.

- üì± **Responsive Design**: Enjoy a seamless experience across Desktop PC, Laptop, and Mobile devices.

- üì± **Progressive Web App (PWA) for Mobile**: Enjoy a native app-like experience on your mobile device with our PWA, providing offline access on localhost and a seamless user interface.

- ‚úíÔ∏èüî¢ **Full Markdown and LaTeX Support**: Elevate your LLM experience with comprehensive Markdown and LaTeX capabilities for enriched interaction.

- üé§üìπ **Hands-Free Voice/Video Call**: Experience seamless communication with integrated hands-free voice and video call features, allowing for a more dynamic and interactive chat environment.

- üõ†Ô∏è **Model Builder**: Easily create Ollama models via the Web UI. Create and add custom characters/agents, customize chat elements, and import models effortlessly through [Open WebUI Community](https://openwebui.com/) integration.

- üêç **Native Python Function Calling Tool**: Enhance your LLMs with built-in code editor support in the tools workspace. Bring Your Own Function (BYOF) by simply adding your pure Python functions, enabling seamless integration with LLMs.

- üìö **Local RAG Integration**: Dive into the future of chat interactions with groundbreaking Retrieval Augmented Generation (RAG) support. This feature seamlessly integrates document interactions into your chat experience. You can load documents directly into the chat or add files to your document library, effortlessly accessing them using the `#` command before a query.

- üîç **Web Search for RAG**: Perform web searches using providers like `SearXNG`, `Google PSE`, `Brave Search`, `serpstack`, `serper`, `Serply`, `DuckDuckGo`, `TavilySearch`, `SearchApi` and `Bing` and inject the results directly into your chat experience.

- üåê **Web Browsing Capability**: Seamlessly integrate websites into your chat experience using the `#` command followed by a URL. This feature allows you to incorporate web content directly into your conversations, enhancing the richness and depth of your interactions.

- üé® **Image Generation Integration**: Seamlessly incorporate image generation capabilities using options such as AUTOMATIC1111 API or ComfyUI (local), and OpenAI&#039;s DALL-E (external), enriching your chat experience with dynamic visual content.

- ‚öôÔ∏è **Many Models Conversations**: Effortlessly engage with various models simultaneously, harnessing their unique strengths for optimal responses. Enhance your experience by leveraging a diverse set of models in parallel.

- üîê **Role-Based Access Control (RBAC)**: Ensure secure access with restricted permissions; only authorized individuals can access your Ollama, and exclusive model creation/pulling rights are reserved for administrators.

- üåêüåç **Multilingual Support**: Experience Open WebUI in your preferred language with our internationalization (i18n) support. Join us in expanding our supported languages! We&#039;re actively seeking contributors!

- üß© **Pipelines, Open WebUI Plugin Support**: Seamlessly integrate custom logic and Python libraries into Open WebUI using [Pipelines Plugin Framework](https://github.com/open-webui/pipelines). Launch your Pipelines instance, set the OpenAI URL to the Pipelines URL, and explore endless possibilities. [Examples](https://github.com/open-webui/pipelines/tree/main/examples) include **Function Calling**, User **Rate Limiting** to control access, **Usage Monitoring** with tools like Langfuse, **Live Translation with LibreTranslate** for multilingual support, **Toxic Message Filtering** and much more.

- üåü **Continuous Updates**: We are committed to improving Open WebUI with regular updates, fixes, and new features.

Want to learn more about Open WebUI&#039;s features? Check out our [Open WebUI documentation](https://docs.openwebui.com/features) for a comprehensive overview!

## Sponsors üôå

#### Emerald

&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://n8n.io/&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/n8n.png&quot; alt=&quot;n8n&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt; ‚Ä¢ Does your interface have a backend yet?&lt;br&gt;Try &lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;utm_medium=paid-ad-placement&amp;utm_campaign=OpenWebUI-Docs&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/tailscale.png&quot; alt=&quot;Tailscale&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;utm_medium=paid-ad-placement&amp;utm_campaign=OpenWebUI-Docs&quot;&gt;Tailscale&lt;/a&gt; ‚Ä¢ Connect self-hosted AI to any device with Tailscale
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

---

We are incredibly grateful for the generous support of our sponsors. Their contributions help us to maintain and improve our project, ensuring we can continue to deliver quality work to our community. Thank you!

## How to Install üöÄ

### Installation via Python pip üêç

Open WebUI can be installed using pip, the Python package installer. Before proceeding, ensure you&#039;re using **Python 3.11** to avoid compatibility issues.

1. **Install Open WebUI**:
   Open your terminal and run the following command to install Open WebUI:

   ```bash
   pip install open-webui
   ```

2. **Running Open WebUI**:
   After installation, you can start Open WebUI by executing:

   ```bash
   open-webui serve
   ```

This will start the Open WebUI server, which you can access at [http://localhost:8080](http://localhost:8080)

### Quick Start with Docker üê≥

&gt; [!NOTE]  
&gt; Please note that for certain Docker environments, additional configurations might be needed. If you encounter any connection issues, our detailed guide on [Open WebUI Documentation](https://docs.openwebui.com/) is ready to assist you.

&gt; [!WARNING]
&gt; When using Docker to install Open WebUI, make sure to include the `-v open-webui:/app/backend/data` in your Docker command. This step is crucial as it ensures your database is properly mounted and prevents any loss of data.

&gt; [!TIP]  
&gt; If you wish to utilize Open WebUI with Ollama included or CUDA acceleration, we recommend utilizing our official images tagged with either `:cuda` or `:ollama`. To enable CUDA, you must install the [Nvidia CUDA container toolkit](https://docs.nvidia.com/dgx/nvidia-container-runtime-upgrade/) on your Linux/WSL system.

### Installation with Default Configuration

- **If Ollama is on your computer**, use this command:

  ```bash
  docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **If Ollama is on a Different Server**, use this command:

  To connect to Ollama on another server, change the `OLLAMA_BASE_URL` to the server&#039;s URL:

  ```bash
  docker run -d -p 3000:8080 -e OLLAMA_BASE_URL=https://example.com -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **To run Open WebUI with Nvidia GPU support**, use this command:

  ```bash
  docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda
  ```

### Installation for OpenAI API Usage Only

- **If you&#039;re only using OpenAI API**, use this command:

  ```bash
  docker run -d -p 3000:8080 -e OPENAI_API_KEY=your_secret_key -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

### Installing Open WebUI with Bundled Ollama Support

This installation method uses a single container image that bundles Open WebUI with Ollama, allowing for a streamlined setup via a single command. Choose the appropriate command based on your hardware setup:

- **With GPU Support**:
  Utilize GPU resources by running the following command:

  ```bash
  docker run -d -p 3000:8080 --gpus=all -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

- **For CPU Only**:
  If you&#039;re not using a GPU, use this command instead:

  ```bash
  docker run -d -p 3000:8080 -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

Both commands facilitate a built-in, hassle-free installation of both Open WebUI and Ollama, ensuring that you can get everything up and running swiftly.

After installation, you can access Open WebUI at [http://localhost:3000](http://localhost:3000). Enjoy! üòÑ

### Other Installation Methods

We offer various installation alternatives, including non-Docker native installation methods, Docker Compose, Kustomize, and Helm. Visit our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/) or join our [Discord community](https://discord.gg/5rJgQTnV4s) for comprehensive guidance.

Look at the [Local Development Guide](https://docs.openwebui.com/getting-started/advanced-topics/development) for instructions on setting up a local development environment.

### Troubleshooting

Encountering connection issues? Our [Open WebUI Documentation](https://docs.openwebui.com/troubleshooting/) has got you covered. For further assistance and to join our vibrant community, visit the [Open WebUI Discord](https://discord.gg/5rJgQTnV4s).

#### Open WebUI: Server Connection Error

If you&#039;re experiencing connection issues, it‚Äôs often due to the WebUI docker container not being able to reach the Ollama server at 127.0.0.1:11434 (host.docker.internal:11434) inside the container . Use the `--network=host` flag in your docker command to resolve this. Note that the port changes from 3000 to 8080, resulting in the link: `http://localhost:8080`.

**Example Docker Command**:

```bash
docker run -d --network=host -v open-webui:/app/backend/data -e OLLAMA_BASE_URL=http://127.0.0.1:11434 --name open-webui --restart always ghcr.io/open-webui/open-webui:main
```

### Keeping Your Docker Installation Up-to-Date

In case you want to update your local Docker installation to the latest version, you can do it with [Watchtower](https://containrrr.dev/watchtower/):

```bash
docker run --rm --volume /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --run-once open-webui
```

In the last part of the command, replace `open-webui` with your container name if it is different.

Check our Updating Guide available in our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/updating).

### Using the Dev Branch üåô

&gt; [!WARNING]
&gt; The `:dev` branch contains the latest unstable features and changes. Use it at your own risk as it may have bugs or incomplete features.

If you want to try out the latest bleeding-edge features and are okay with occasional instability, you can use the `:dev` tag like this:

```bash
docker run -d -p 3000:8080 -v open-webui:/app/backend/data --name open-webui --add-host=host.docker.internal:host-gateway --restart always ghcr.io/open-webui/open-webui:dev
```

### Offline Mode

If you are running Open WebUI in an offline environment, you can set the `HF_HUB_OFFLINE` environment variable to `1` to prevent attempts to download models from the internet.

```bash
export HF_HUB_OFFLINE=1
```

## What&#039;s Next? üåü

Discover upcoming features on our roadmap in the [Open WebUI Documentation](https://docs.openwebui.com/roadmap/).

## License üìú

This project is licensed under the [Open WebUI License](LICENSE), a revised BSD-3-Clause license. You receive all the same rights as the classic BSD-3 license: you can use, modify, and distribute the software, including in proprietary and commercial products, with minimal restrictions. The only additional requirement is to preserve the &quot;Open WebUI&quot; branding, as detailed in the LICENSE file. For full terms, see the [LICENSE](LICENSE) document. üìÑ

## Support üí¨

If you have any questions, suggestions, or need assistance, please open an issue or join our
[Open WebUI Discord community](https://discord.gg/5rJgQTnV4s) to connect with us! ü§ù

## Star History

&lt;a href=&quot;https://star-history.com/#open-webui/open-webui&amp;Date&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&amp;theme=dark&quot; /&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
    &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

---

Created by [Timothy Jaeryang Baek](https://github.com/tjbck) - Let&#039;s make Open WebUI even more amazing together! üí™
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[upstash/context7]]></title>
            <link>https://github.com/upstash/context7</link>
            <guid>https://github.com/upstash/context7</guid>
            <pubDate>Sat, 09 Aug 2025 00:04:39 GMT</pubDate>
            <description><![CDATA[Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/upstash/context7">upstash/context7</a></h1>
            <p>Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors</p>
            <p>Language: JavaScript</p>
            <p>Stars: 24,751</p>
            <p>Forks: 1,257</p>
            <p>Stars today: 189 stars today</p>
            <h2>README</h2><pre># Context7 MCP - Up-to-date Code Docs For Any Prompt

[![Website](https://img.shields.io/badge/Website-context7.com-blue)](https://context7.com) [![smithery badge](https://smithery.ai/badge/@upstash/context7-mcp)](https://smithery.ai/server/@upstash/context7-mcp) [&lt;img alt=&quot;Install in VS Code (npx)&quot; src=&quot;https://img.shields.io/badge/VS_Code-VS_Code?style=flat-square&amp;label=Install%20Context7%20MCP&amp;color=0098FF&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)
[![ÁπÅÈ´î‰∏≠Êñá](https://img.shields.io/badge/docs-ÁπÅÈ´î‰∏≠Êñá-yellow)](./docs/README.zh-TW.md) [![ÁÆÄ‰Ωì‰∏≠Êñá](https://img.shields.io/badge/docs-ÁÆÄ‰Ωì‰∏≠Êñá-yellow)](./docs/README.zh-CN.md) [![Êó•Êú¨Ë™û](https://img.shields.io/badge/docs-Êó•Êú¨Ë™û-b7003a)](./docs/README.ja.md) [![ÌïúÍµ≠Ïñ¥ Î¨∏ÏÑú](https://img.shields.io/badge/docs-ÌïúÍµ≠Ïñ¥-green)](./docs/README.ko.md) [![Documentaci√≥n en Espa√±ol](https://img.shields.io/badge/docs-Espa√±ol-orange)](./docs/README.es.md) [![Documentation en Fran√ßais](https://img.shields.io/badge/docs-Fran√ßais-blue)](./docs/README.fr.md) [![Documenta√ß√£o em Portugu√™s (Brasil)](&lt;https://img.shields.io/badge/docs-Portugu√™s%20(Brasil)-purple&gt;)](./docs/README.pt-BR.md) [![Documentazione in italiano](https://img.shields.io/badge/docs-Italian-red)](./docs/README.it.md) [![Dokumentasi Bahasa Indonesia](https://img.shields.io/badge/docs-Bahasa%20Indonesia-pink)](./docs/README.id-ID.md) [![Dokumentation auf Deutsch](https://img.shields.io/badge/docs-Deutsch-darkgreen)](./docs/README.de.md) [![–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ](https://img.shields.io/badge/docs-–†—É—Å—Å–∫–∏–π-darkblue)](./docs/README.ru.md) [![–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è](https://img.shields.io/badge/docs-–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞-lightblue)](./docs/README.uk.md) [![T√ºrk√ße Dok√ºman](https://img.shields.io/badge/docs-T√ºrk√ße-blue)](./docs/README.tr.md) [![Arabic Documentation](https://img.shields.io/badge/docs-Arabic-white)](./docs/README.ar.md) [![Ti·∫øng Vi·ªát](https://img.shields.io/badge/docs-Ti·∫øng%20Vi·ªát-red)](./docs/README.vi.md)

## ‚ùå Without Context7

LLMs rely on outdated or generic information about the libraries you use. You get:

- ‚ùå Code examples are outdated and based on year-old training data
- ‚ùå Hallucinated APIs don&#039;t even exist
- ‚ùå Generic answers for old package versions

## ‚úÖ With Context7

Context7 MCP pulls up-to-date, version-specific documentation and code examples straight from the source ‚Äî and places them directly into your prompt.

Add `use context7` to your prompt in Cursor:

```txt
Create a Next.js middleware that checks for a valid JWT in cookies and redirects unauthenticated users to `/login`. use context7
```

```txt
Configure a Cloudflare Worker script to cache JSON API responses for five minutes. use context7
```

Context7 fetches up-to-date code examples and documentation right into your LLM&#039;s context.

- 1Ô∏è‚É£ Write your prompt naturally
- 2Ô∏è‚É£ Tell the LLM to `use context7`
- 3Ô∏è‚É£ Get working code answers

No tab-switching, no hallucinated APIs that don&#039;t exist, no outdated code generations.

## üìö Adding Projects

Check out our [project addition guide](./docs/adding-projects.md) to learn how to add (or update) your favorite libraries to Context7.

## üõ†Ô∏è Installation

### Requirements

- Node.js &gt;= v18.0.0
- Cursor, Windsurf, Claude Desktop or another MCP Client

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Installing via Smithery&lt;/b&gt;&lt;/summary&gt;

To install Context7 MCP Server for any client automatically via [Smithery](https://smithery.ai/server/@upstash/context7-mcp):

```bash
npx -y @smithery/cli@latest install @upstash/context7-mcp --client &lt;CLIENT_NAME&gt; --key &lt;YOUR_SMITHERY_KEY&gt;
```

You can find your Smithery key in the [Smithery.ai webpage](https://smithery.ai/server/@upstash/context7-mcp).

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Cursor&lt;/b&gt;&lt;/summary&gt;

Go to: `Settings` -&gt; `Cursor Settings` -&gt; `MCP` -&gt; `Add new global MCP server`

Pasting the following configuration into your Cursor `~/.cursor/mcp.json` file is the recommended approach. You may also install in a specific project by creating `.cursor/mcp.json` in your project folder. See [Cursor MCP docs](https://docs.cursor.com/context/model-context-protocol) for more info.

&gt; Since Cursor 1.0, you can click the install button below for instant one-click installation.

#### Cursor Remote Server Connection

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=context7&amp;config=eyJ1cmwiOiJodHRwczovL21jcC5jb250ZXh0Ny5jb20vbWNwIn0%3D)

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

#### Cursor Local Server Connection

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/en/install-mcp?name=context7&amp;config=eyJjb21tYW5kIjoibnB4IC15IEB1cHN0YXNoL2NvbnRleHQ3LW1jcCJ9)

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;details&gt;
&lt;summary&gt;Alternative: Use Bun&lt;/summary&gt;

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/install-mcp?name=context7&amp;config=eyJjb21tYW5kIjoiYnVueCAteSBAdXBzdGFzaC9jb250ZXh0Ny1tY3AifQ%3D%3D)

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;bunx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Alternative: Use Deno&lt;/summary&gt;

[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](https://cursor.com/install-mcp?name=context7&amp;config=eyJjb21tYW5kIjoiZGVubyBydW4gLS1hbGxvdy1lbnYgLS1hbGxvdy1uZXQgbnBtOkB1cHN0YXNoL2NvbnRleHQ3LW1jcCJ9)

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;deno&quot;,
      &quot;args&quot;: [&quot;run&quot;, &quot;--allow-env=NO_DEPRECATION,TRACE_DEPRECATION&quot;, &quot;--allow-net&quot;, &quot;npm:@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Windsurf&lt;/b&gt;&lt;/summary&gt;

Add this to your Windsurf MCP config file. See [Windsurf MCP docs](https://docs.windsurf.com/windsurf/mcp) for more info.

#### Windsurf Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;serverUrl&quot;: &quot;https://mcp.context7.com/sse&quot;
    }
  }
}
```

#### Windsurf Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Trae&lt;/b&gt;&lt;/summary&gt;

Use the Add manually feature and fill in the JSON configuration information for that MCP server.
For more details, visit the [Trae documentation](https://docs.trae.ai/ide/model-context-protocol?_lang=en).

#### Trae Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

#### Trae Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;-y&quot;,
        &quot;@upstash/context7-mcp&quot;
      ]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in VS Code&lt;/b&gt;&lt;/summary&gt;

[&lt;img alt=&quot;Install in VS Code (npx)&quot; src=&quot;https://img.shields.io/badge/VS_Code-VS_Code?style=flat-square&amp;label=Install%20Context7%20MCP&amp;color=0098FF&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)
[&lt;img alt=&quot;Install in VS Code Insiders (npx)&quot; src=&quot;https://img.shields.io/badge/VS_Code_Insiders-VS_Code_Insiders?style=flat-square&amp;label=Install%20Context7%20MCP&amp;color=24bfa5&quot;&gt;](https://insiders.vscode.dev/redirect?url=vscode-insiders%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D)

Add this to your VS Code MCP config file. See [VS Code MCP docs](https://code.visualstudio.com/docs/copilot/chat/mcp-servers) for more info.

#### VS Code Remote Server Connection

```json
&quot;mcp&quot;: {
  &quot;servers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;http&quot;,
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

#### VS Code Local Server Connection

```json
&quot;mcp&quot;: {
  &quot;servers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;stdio&quot;,
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Visual Studio 2022&lt;/b&gt;&lt;/summary&gt;

You can configure Context7 MCP in Visual Studio 2022 by following the [Visual Studio MCP Servers documentation](https://learn.microsoft.com/visualstudio/ide/mcp-servers?view=vs-2022).

Add this to your Visual Studio MCP config file (see the [Visual Studio docs](https://learn.microsoft.com/visualstudio/ide/mcp-servers?view=vs-2022) for details):

```json
{
  &quot;mcp&quot;: {
    &quot;servers&quot;: {
      &quot;context7&quot;: {
        &quot;type&quot;: &quot;http&quot;,
        &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
      }
    }
  }
}
```

Or, for a local server:

```json
{
  &quot;mcp&quot;: {
    &quot;servers&quot;: {
      &quot;context7&quot;: {
        &quot;type&quot;: &quot;stdio&quot;,
        &quot;command&quot;: &quot;npx&quot;,
        &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
      }
    }
  }
}
```

For more information and troubleshooting, refer to the [Visual Studio MCP Servers documentation](https://learn.microsoft.com/visualstudio/ide/mcp-servers?view=vs-2022).
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Zed&lt;/b&gt;&lt;/summary&gt;

It can be installed via [Zed Extensions](https://zed.dev/extensions?query=Context7) or you can add this to your Zed `settings.json`. See [Zed Context Server docs](https://zed.dev/docs/assistant/context-servers) for more info.

```json
{
  &quot;context_servers&quot;: {
    &quot;Context7&quot;: {
      &quot;command&quot;: {
        &quot;path&quot;: &quot;npx&quot;,
        &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
      },
      &quot;settings&quot;: {}
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Gemini CLI&lt;/b&gt;&lt;/summary&gt;

See [Gemini CLI Configuration](https://github.com/google-gemini/gemini-cli/blob/main/docs/cli/configuration.md) for details.

1.  Open the Gemini CLI settings file. The location is `~/.gemini/settings.json` (where `~` is your home directory).
2.  Add the following to the `mcpServers` object in your `settings.json` file:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;httpUrl&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

Or, for a local server:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

If the `mcpServers` object does not exist, create it.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Claude Code&lt;/b&gt;&lt;/summary&gt;

Run this command. See [Claude Code MCP docs](https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/tutorials#set-up-model-context-protocol-mcp) for more info.

#### Claude Code Remote Server Connection

```sh
claude mcp add --transport http context7 https://mcp.context7.com/mcp
```

Or using SSE transport:

```sh
claude mcp add --transport sse context7 https://mcp.context7.com/sse
```

#### Claude Code Local Server Connection

```sh
claude mcp add context7 -- npx -y @upstash/context7-mcp
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Claude Desktop&lt;/b&gt;&lt;/summary&gt;

Add this to your Claude Desktop `claude_desktop_config.json` file. See [Claude Desktop MCP docs](https://modelcontextprotocol.io/quickstart/user) for more info.

```json
{
  &quot;mcpServers&quot;: {
    &quot;Context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Crush&lt;/b&gt;&lt;/summary&gt;

Add this to your Crush configuration file. See [Crush MCP docs](https://github.com/charmbracelet/crush#mcps) for more info.

#### Crush Remote Server Connection (HTTP)

```json
{
  &quot;$schema&quot;: &quot;https://charm.land/crush.json&quot;,
  &quot;mcp&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;http&quot;,
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

#### Crush Remote Server Connection (SSE)

```json
{
  &quot;$schema&quot;: &quot;https://charm.land/crush.json&quot;,
  &quot;mcp&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;sse&quot;,
      &quot;url&quot;: &quot;https://mcp.context7.com/sse&quot;
    }
  }
}
```

#### Crush Local Server Connection

```json
{
  &quot;$schema&quot;: &quot;https://charm.land/crush.json&quot;,
  &quot;mcp&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;stdio&quot;,
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;
&lt;b&gt;Install in Cline&lt;/b&gt;
&lt;/summary&gt;

You can easily install Context7 through the [Cline MCP Server Marketplace](https://cline.bot/mcp-marketplace) by following these instructions:

1. Open **Cline**.
2. Click the hamburger menu icon (‚ò∞) to enter the **MCP Servers** section.
3. Use the search bar within the **Marketplace** tab to find *Context7*.
4. Click the **Install** button.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in BoltAI&lt;/b&gt;&lt;/summary&gt;

Open the &quot;Settings&quot; page of the app, navigate to &quot;Plugins,&quot; and enter the following JSON:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

Once saved, enter in the chat `get-library-docs` followed by your Context7 documentation ID (e.g., `get-library-docs /nuxt/ui`). More information is available on [BoltAI&#039;s Documentation site](https://docs.boltai.com/docs/plugins/mcp-servers). For BoltAI on iOS, [see this guide](https://docs.boltai.com/docs/boltai-mobile/mcp-servers).

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Using Docker&lt;/b&gt;&lt;/summary&gt;

If you prefer to run the MCP server in a Docker container:

1. **Build the Docker Image:**

   First, create a `Dockerfile` in the project root (or anywhere you prefer):

   &lt;details&gt;
   &lt;summary&gt;Click to see Dockerfile content&lt;/summary&gt;

   ```Dockerfile
   FROM node:18-alpine

   WORKDIR /app

   # Install the latest version globally
   RUN npm install -g @upstash/context7-mcp

   # Expose default port if needed (optional, depends on MCP client interaction)
   # EXPOSE 3000

   # Default command to run the server
   CMD [&quot;context7-mcp&quot;]
   ```

   &lt;/details&gt;

   Then, build the image using a tag (e.g., `context7-mcp`). **Make sure Docker Desktop (or the Docker daemon) is running.** Run the following command in the same directory where you saved the `Dockerfile`:

   ```bash
   docker build -t context7-mcp .
   ```

2. **Configure Your MCP Client:**

   Update your MCP client&#039;s configuration to use the Docker command.

   _Example for a cline_mcp_settings.json:_

   ```json
   {
     &quot;mcpServers&quot;: {
       &quot;–°ontext7&quot;: {
         &quot;autoApprove&quot;: [],
         &quot;disabled&quot;: false,
         &quot;timeout&quot;: 60,
         &quot;command&quot;: &quot;docker&quot;,
         &quot;args&quot;: [&quot;run&quot;, &quot;-i&quot;, &quot;--rm&quot;, &quot;context7-mcp&quot;],
         &quot;transportType&quot;: &quot;stdio&quot;
       }
     }
   }
   ```

   _Note: This is an example configuration. Please refer to the specific examples for your MCP client (like Cursor, VS Code, etc.) earlier in this README to adapt the structure (e.g., `mcpServers` vs `servers`). Also, ensure the image name in `args` matches the tag used during the `docker build` command._

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Windows&lt;/b&gt;&lt;/summary&gt;

The configuration on Windows is slightly different compared to Linux or macOS (_`Cline` is used in the example_). The same principle applies to other editors; refer to the configuration of `command` and `args`.

```json
{
  &quot;mcpServers&quot;: {
    &quot;github.com/upstash/context7-mcp&quot;: {
      &quot;command&quot;: &quot;cmd&quot;,
      &quot;args&quot;: [&quot;/c&quot;, &quot;npx&quot;, &quot;-y&quot;, &quot;@upstash/context7-mcp@latest&quot;],
      &quot;disabled&quot;: false,
      &quot;autoApprove&quot;: []
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Augment Code&lt;/b&gt;&lt;/summary&gt;

To configure Context7 MCP in Augment Code, you can use either the graphical interface or manual configuration.

### **A. Using the Augment Code UI**

1. Click the hamburger menu.
2. Select **Settings**.
3. Navigate to the **Tools** section.
4. Click the **+ Add MCP** button.
5. Enter the following command:

   ```
   npx -y @upstash/context7-mcp@latest
   ```

6. Name the MCP: **Context7**.
7. Click the **Add** button.

Once the MCP server is added, you can start using Context7&#039;s up-to-date code documentation features directly within Augment Code.

---

### **B. Manual Configuration**

1. Press Cmd/Ctrl Shift P or go to the hamburger menu in the Augment panel
2. Select Edit Settings
3. Under Advanced, click Edit in settings.json
4. Add the server configuration to the `mcpServers` array in the `augment.advanced` object

&quot;augment.advanced&quot;: {
&quot;mcpServers&quot;: [
{
&quot;name&quot;: &quot;context7&quot;,
&quot;command&quot;: &quot;npx&quot;,
&quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
}
]
}

Once the MCP server is added, restart your editor. If you receive any errors, check the syntax to make sure closing brackets or commas are not missing.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Roo Code&lt;/b&gt;&lt;/summary&gt;

Add this to your Roo Code MCP configuration file. See [Roo Code MCP docs](https://docs.roocode.com/features/mcp/using-mcp-in-roo) for more info.

#### Roo Code Remote Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;type&quot;: &quot;streamable-http&quot;,
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```

#### Roo Code Local Server Connection

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Zencoder&lt;/b&gt;&lt;/summary&gt;

To configure Context7 MCP in Zencoder, follow these steps:

1. Go to the Zencoder menu (...)
2. From the dropdown menu, select Agent tools
3. Click on the Add custom MCP
4. Add the name and server configuration from below, and make sure to hit the Install button

```json
{
    &quot;command&quot;: &quot;npx&quot;,
    &quot;args&quot;: [
        &quot;-y&quot;,
        &quot;@upstash/context7-mcp@latest&quot;
    ]
}
```

Once the MCP server is added, you can easily continue using it.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Amazon Q Developer CLI&lt;/b&gt;&lt;/summary&gt;

Add this to your Amazon Q Developer CLI configuration file. See [Amazon Q Developer CLI docs](https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line-mcp-configuration.html) for more details.

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp@latest&quot;]
    }
  }
}
```
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Qodo Gen&lt;/b&gt;&lt;/summary&gt;

See [Qodo Gen docs](https://docs.qodo.ai/qodo-documentation/qodo-gen/qodo-gen-chat/agentic-mode/agentic-tools-mcps) for more details.

1. Open Qodo Gen chat panel in VSCode or IntelliJ.
2. Click Connect more tools.
3. Click + Add new MCP.
4. Add the following configuration:

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;url&quot;: &quot;https://mcp.context7.com/mcp&quot;
    }
  }
}
```
&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in JetBrains AI Assistant&lt;/b&gt;&lt;/summary&gt;

See [JetBrains AI Assistant Documentation](https://www.jetbrains.com/help/ai-assistant/configure-an-mcp-server.html) for more details.

1. In JetBrains IDEs go to `Settings` -&gt; `Tools` -&gt; `AI Assistant` -&gt; `Model Context Protocol (MCP)`
2. Click `+ Add`.
3. Click on `Command` in the top-left corner of the dialog and select the As JSON option from the list
4. Add this configuration and click `OK`

```json
{
  &quot;mcpServers&quot;: {
    &quot;context7&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;@upstash/context7-mcp&quot;]
    }
  }
}
```

5. Click `Apply` to save changes.
6. The same way context7 could be added for JetBrains Junie in `Settings` -&gt; `Tools` -&gt; `Junie` -&gt; `MCP Settings`

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Install in Warp&lt;/b&gt;&lt;/summary&gt;

See [Warp Model Context Protocol Documentation](https://docs.warp.dev/knowledge-and-collaboration/mcp#adding-an-mcp-server) for details.

1. Navigate `Settings` &gt; `AI` &gt; `Manage MCP servers`.
2. Add a new MCP server by clicking the `+ Add` button.
3. Paste the configuration given below:

```json
{
  &quot;Context7&quot;: {
    &quot;command&quot;: &quot;npx&quot;,
    &quot;args&quot;: [
      &quot;-y&quot;,
      &quot;@upstash/context7-mcp&quot;
    ],
    &quot;env&quot;: {},
    &quot;working_directory&quot;: null,
    &quot;start_on_launch&quot;: true
  }
}
```

4. Click `Save` to apply the changes.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Ins

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[module-federation/core]]></title>
            <link>https://github.com/module-federation/core</link>
            <guid>https://github.com/module-federation/core</guid>
            <pubDate>Sat, 09 Aug 2025 00:04:38 GMT</pubDate>
            <description><![CDATA[Module Federation is a concept that allows developers to share code and resources across multiple JavaScript applications]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/module-federation/core">module-federation/core</a></h1>
            <p>Module Federation is a concept that allows developers to share code and resources across multiple JavaScript applications</p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,115</p>
            <p>Forks: 357</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img alt=&quot;Module federation Banner&quot;  width=&quot;260&quot; src=&quot;https://github.com/module-federation/core/assets/27547179/11234712-40fc-4696-a7fd-16e0c631005a&quot;&gt;
&lt;/p&gt;

# Module Federation

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@module-federation/runtime?activeTab=readme&quot;&gt;
   &lt;img src=&quot;https://img.shields.io/npm/v/@module-federation/runtime?style=flat-square&amp;colorA=564341&amp;colorB=EDED91&quot; alt=&quot;npm version&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://npmcharts.com/compare/@module-federation/runtime?minimal=true&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/dm/@module-federation/runtime.svg?style=flat-square&amp;colorA=564341&amp;colorB=EDED91&quot; alt=&quot;downloads&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/web-infra-dev/rspack/blob/main/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/l/@module-federation/runtime?style=flat-square&amp;colorA=564341&amp;colorB=EDED91&quot; alt=&quot;license&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

You can consider the module federation capabilities provided by this repository as &quot;module federation 2.0&quot;. &quot;Module Federation 2.0&quot; differs from the &quot;Module Federation&quot; built into Webpack 5 by offering not only the core features of module export, loading, and dependency sharing but also additional dynamic type hinting, a &quot;Manifest&quot;, a &quot;Federation Runtime&quot;, and a &quot;Runtime Plugin System&quot;. These features make &quot;Module Federation&quot; more suitable for use as a micro-frontend architecture in large-scale web applications.

## üí° What is Module Federation?

- Module Federation is a concept that allows developers to share code and resources across multiple JavaScript applications

- Module Federation can be used to split monolithic applications into micro-front-end architectures

- Module Federation reuses common dependencies between modules as much as possible

## ‚ú® What new features does Module Federation provide?

- üé® Module Federation Runtime
- üß© Runtime Plugins System
- üìù Manifest
- üöÄ Dynamic type prompt
- üõ†Ô∏è Chrome Devtool

## üìö Getting Started

To get started with Module Federation, see the [Quick Start](https://module-federation.io/guide/start/quick-start.html).

## üßë‚Äçüíª Community

Come and chat with us on [Discussions](https://github.com/module-federation/universe/discussions) or [Discord](https://discord.gg/n69NnT3ACV)! The Module federation team and users are active there, and we&#039;re always looking for contributions.

## ü§ù Contribution

&gt; New contributors welcome!

Please read the [Contributing Guide](https://github.com/module-federation/core/blob/main/CONTRIBUTING.md).

![Alt](https://repobeats.axiom.co/api/embed/856dc1d4a6965d225232b1bd2da5d54549dc169e.svg &quot;Repobeats analytics image&quot;)

## üôå Code of Conduct

This repo has adopted the Code of Conduct. Please check [Code of Conduct](./CODE_OF_CONDUCT.md) for more details.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[frappe/gantt]]></title>
            <link>https://github.com/frappe/gantt</link>
            <guid>https://github.com/frappe/gantt</guid>
            <pubDate>Sat, 09 Aug 2025 00:04:37 GMT</pubDate>
            <description><![CDATA[Open Source Javascript Gantt]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/frappe/gantt">frappe/gantt</a></h1>
            <p>Open Source Javascript Gantt</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,459</p>
            <p>Forks: 1,174</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot; markdown=&quot;1&quot;&gt;
    &lt;img src=&quot;.github/gantt-logo.jpg&quot; width=&quot;80&quot;&gt;
    &lt;h1&gt;Frappe Gantt&lt;/h1&gt;

**A modern, configurable, Gantt library for the web.**
&lt;/div&gt;

![Hero Image](.github/hero-image.png)

## Frappe Gantt
Gantt charts are bar charts that visually illustrate a project&#039;s tasks, schedule, and dependencies. With Frappe Gantt, you can build beautiful, customizable, Gantt charts with ease.

You can use it anywhere from hobby projects to tracking the goals of your team at the worksplace.

[ERPNext](https://erpnext.com/) uses Frappe Gantt.


### Motivation
We needed a Gantt View for ERPNext. Surprisingly, we couldn&#039;t find a visually appealing Gantt library that was open source - so we decided to build it. Initially, the design was heavily inspired by Google Gantt and DHTMLX.


### Key Features
- **Customizable Views**: customize the timeline based on various time periods - day, hour, or year, you have it. You can also create your own views.
- **Ignore Periods**: exclude weekends and other holidays from your tasks&#039; progress calculation.
- **Configure Anything**: spacing, edit access, labels, you can control it all. Change both the style and functionality to meet your needs.
- **Multi-lingual Support**: suitable for companies with an international base.

## Usage

Install with:
```bash
npm install frappe-gantt
```

Include it in your HTML:

```html
&lt;script src=&quot;frappe-gantt.umd.js&quot;&gt;&lt;/script&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;frappe-gantt.css&quot;&gt;
```

Or from the CDN:
```html
&lt;script src=&quot;https://cdn.jsdelivr.net/npm/frappe-gantt/dist/frappe-gantt.umd.js&quot;&gt;&lt;/script&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/frappe-gantt/dist/frappe-gantt.css&quot;&gt;
```

Start using Gantt:
```js
let tasks = [
  {
    id: &#039;1&#039;,
    name: &#039;Redesign website&#039;,
    start: &#039;2016-12-28&#039;,
    end: &#039;2016-12-31&#039;,
    progress: 20
  },
  ...
]
let gantt = new Gantt(&quot;#gantt&quot;, tasks);
```

### Configuration
Frappe Gantt offers a wide range of options to customize your chart.


| **Option**               | **Description**                                                                 | **Possible Values**                                 | **Default**                        |
|---------------------------|---------------------------------------------------------------------------------|----------------------------------------------------|------------------------------------|
| `arrow_curve`            | Curve radius of arrows connecting dependencies.                                        | Any positive integer.                              | `5`                                |
| `auto_move_label`        | Move task labels when user scrolls horizontally.                                 | `true`, `false`                                    | `false`                            |
| `bar_corner_radius`      | Radius of the task bar corners (in pixels).                                         | Any positive integer.                              | `3`                                |
| `bar_height`             | Height of task bars (in pixels).                                                 | Any positive integer.                              | `30`                               |
| `container_height`       | Height of the container.                                                       | `auto` - dynamic container height to fit all tasks - _or_ any positive integer (for pixels).            | `auto`                           |
| `column_width`           | Width of each column in the timeline.                                          | Any positive integer.                  | 45                             |
| `date_format`            | Format for displaying dates.                                                   | Any valid JS date format string.                     | `YYYY-MM-DD`                     |
| `upper_header_height`    | Height of the upper header in the timeline (in pixels).                                     | Any positive integer.                              | `45`                               |
| `lower_header_height`    | Height of the lower header in the timeline (in pixels).                                     | Any positive integer.                              | `30`                               |
| `snap_at`                | Snap tasks at particular intervel while resizing or dragging.                                              | Any _interval_ (see below)                  | `1d`                             |
| `infinite_padding`       | Whether to extend timeline infinitely when user scrolls.                                   | `true`, `false`                                    | `true`                             |
| `holidays`               | Highlighted holidays on the timeline.                                           | Object mapping CSS colors to holiday types. Types can either be a) &#039;weekend&#039;, or b) array of _strings_ or _date objects_ or _objects_ in the format `{date: ..., label: ...}`          | `{ &#039;var(--g-weekend-highlight-color)&#039;: &#039;weekend&#039; }` |
| `ignore`                 | Ignored areas in the rendering                  | `weekend` _or_ Array of strings or date objects (`weekend` can be present to the array also).                      | `[]`                               |
| `language`               | Language for localization.                                                     | ISO 639-1 codes like `en`, `fr`, `es`.            | `en`                             |
| `lines`                  | Determines which grid lines to display.                                   | `none` for no lines, `vertical` for only vertical lines, `horizontal` for only horizontal lines, `both` for complete grid.      | `both`                           |
| `move_dependencies`      | Whether moving a task automatically moves its dependencies.                                   | `true`, `false`                                    | `true`                             |
| `padding`                | Padding around task bars (in pixels).                                                | Any positive integer.                              | `18`                               |
| `popup_on`               | Event to trigger the popup display.                                             | `click` _or_ `hover`     | `click`                          |
| `readonly_progress`      | Disables editing task progress.                                                 | `true`, `false`                                    | `false`                            |
| `readonly_dates`         | Disables editing task dates.                                                    | `true`, `false`                                    | `false`                            |
| `readonly`               | Disables all editing features.                                                  | `true`, `false`                                    | `false`                            |
| `scroll_to`              | Determines the starting point when chart is rendered.                                           | `today`, `start`, `end`, or a date string.  | `today`                          |
| `show_expected_progress` | Shows expected progress for tasks.                                              | `true`, `false`                                    | `false`                            |
| `today_button`           | Adds a button to navigate to today‚Äôs date.                                      | `true`, `false`                                    | `true`                             |
| `view_mode`              | The initial view mode of the Gantt chart.                                          | `Day`, `Week`, `Month`, `Year`.           | `Day`                            |
| `view_mode_select`       | Allows selecting the view mode from a dropdown.                                 | `true`, `false`                                    | `false`                            |

Apart from these ones, two options - `popup` and `view_modes` (plural, not singular) - are available. They have &quot;sub&quot;-APIs, and thus are listed separately.

#### View Mode Configuration
The `view_modes` option determines all the available view modes for the chart. It should be an array of objects.

Each object can have the following properties:
- `name` (string) - the name of view mode.
- `padding` (interval) - the time above.
- `step` - the interval of each column
- `lower_text` (date format string _or_ function) - the format for text in lower header. Blank string for none. The function takes in `currentDate`, `previousDate`, and `lang`, and should return a string.
- `upper_text` (date format string _or_ function) - the format for text in upper header. Blank string for none. The function takes in `currentDate`, `previousDate`, and `lang`, and should return a string.
- `upper_text_frequency` (number) - how often the upper text has a value. Utilized in internal calculation to improve performance.
- `thick_line` (function) - takes in `currentDate`, returns Boolean determining whether the line for that date should be thicker than the others.

Three other options allow you to override general configuration for this view mode alone:
- `date_format`
- `column_width`
- `snap_at`
For details, see the above table.

#### Popup Configuration
`popup` is a function. If it returns
- `false`, there will be no popup.
- `undefined`, the popup will be rendered based on manipulation within the function
- a HTML string, the popup will be that string.

The function receives one object as an argument, containing:
- `task` - the task as an object
- `chart` - the entire Gantt chart
- `get_title`, `get_subtitle`, `get_details` (functions) - get the relevant section as a HTML node.
- `set_title`, `set_subtitle`, `set_details` (functions) - take in the HTML of the relevant section
- `add_action` (function) - accepts two parameters, `html` and `func` - respectively determining the HTML of the action and the callback when the action is pressed.

### API
Frappe Gantt exposes a few helpful methods for you to interact with the chart:

| **Name**               | **Description**                                                                 | **Parameters**                            |
|---------------------------|---------------------------------------------------------------------------------|------------------------------------------|
| `.update_options` | Re-renders the chart after updating specific options. | `new_options` - object containing new options. |
| `.change_view_mode` | Updates the view mode. | `view_mode` - Name of view mode _or_ view mode object (see above) and `maintain_pos` - whether to go back to current scroll position after rerendering, defaults to `false`. |
| `.scroll_current` | Scrolls to the current date | No parameters. |
| `.update_task` | Re-renders a specific task bar alone | `task_id` - id of task and `new_details` - object containing the task properties to be updated. |

## Development Setup
If you want to contribute enhancements or fixes:

1. Clone this repo.
2. `cd` into project directory.
3. Run `pnpm i` to install dependencies.
4. `pnpm run build` to build files - or `pnpm run build-dev` to build and watch for changes.
5. Open `index.html` in your browser.
6. Make your code changes and test them.

&lt;br /&gt;
&lt;br /&gt;
&lt;div align=&quot;center&quot; style=&quot;padding-top: 0.75rem;&quot;&gt;
	&lt;a href=&quot;https://frappe.io&quot; target=&quot;_blank&quot;&gt;
		&lt;picture&gt;
			&lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://frappe.io/files/Frappe-white.png&quot;&gt;
			&lt;img src=&quot;https://frappe.io/files/Frappe-black.png&quot; alt=&quot;Frappe Technologies&quot; height=&quot;28&quot;/&gt;
		&lt;/picture&gt;
	&lt;/a&gt;
&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[plotly/plotly.js]]></title>
            <link>https://github.com/plotly/plotly.js</link>
            <guid>https://github.com/plotly/plotly.js</guid>
            <pubDate>Sat, 09 Aug 2025 00:04:36 GMT</pubDate>
            <description><![CDATA[Open-source JavaScript charting library behind Plotly and Dash]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/plotly/plotly.js">plotly/plotly.js</a></h1>
            <p>Open-source JavaScript charting library behind Plotly and Dash</p>
            <p>Language: JavaScript</p>
            <p>Stars: 17,778</p>
            <p>Forks: 1,918</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre>&lt;a href=&quot;https://plotly.com/javascript/&quot;&gt;&lt;img src=&quot;https://images.plot.ly/logo/plotlyjs-logo@2x.png&quot; height=&quot;70&quot;&gt;&lt;/a&gt;

[![npm version](https://badge.fury.io/js/plotly.js.svg)](https://badge.fury.io/js/plotly.js)
[![circle ci](https://circleci.com/gh/plotly/plotly.js.svg?style=shield)](https://circleci.com/gh/plotly/plotly.js)
[![MIT License](https://img.shields.io/badge/License-MIT-brightgreen.svg)](https://github.com/plotly/plotly.js/blob/master/LICENSE)

[Plotly.js](https://plotly.com/javascript) is a standalone Javascript data visualization library, and it also powers the Python and R modules named `plotly` in those respective ecosystems (referred to as [Plotly.py](https://plotly.com/python) and [Plotly.R](http://plotly.com/r)).

Plotly.js can be used to produce dozens of chart types and visualizations, including statistical charts, 3D graphs, scientific charts, SVG and tile maps, financial charts and more.

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://plotly.com/javascript/&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://raw.githubusercontent.com/cldougl/plot_images/add_r_img/plotly_2017.png&quot;&gt;
    &lt;/a&gt;
&lt;/p&gt;

[Contact us](https://plotly.com/products/consulting-and-oem/) for Plotly.js consulting, dashboard development, application integration, and feature additions.

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://dash.plotly.com/project-maintenance&quot;&gt;
    &lt;img src=&quot;https://dash.plotly.com/assets/images/maintained-by-plotly.png&quot; width=&quot;400px&quot; alt=&quot;Maintained by Plotly&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;


## Table of contents

* [Load as a node module](#load-as-a-node-module)
* [Load via script tag](#load-via-script-tag)
* [Bundles](#bundles)
* [Alternative ways to load and build plotly.js](#alternative-ways-to-load-and-build-plotlyjs)
* [Documentation](#documentation)
* [Bugs and feature requests](#bugs-and-feature-requests)
* [Contributing](#contributing)
* [Notable contributors](#notable-contributors)
* [Copyright and license](#copyright-and-license)
* [Community](#community)

---
## Load as a node module
Install [a ready-to-use distributed bundle](https://github.com/plotly/plotly.js/blob/master/dist/README.md)
```sh
npm i --save plotly.js-dist-min
```

and use import or require in node.js
```js
// ES6 module
import Plotly from &#039;plotly.js-dist-min&#039;

// CommonJS
var Plotly = require(&#039;plotly.js-dist-min&#039;)
```

You may also consider using [`plotly.js-dist`](https://www.npmjs.com/package/plotly.js-dist) if you prefer using an unminified package.

---
## Load via script tag

### The script HTML element
&gt; In the examples below `Plotly` object is added to the window scope by `script`. The `newPlot` method is then used to draw an interactive figure as described by `data` and `layout` into the desired `div` here named `gd`. As demonstrated in the example above basic knowledge of `html` and [JSON](https://en.wikipedia.org/wiki/JSON) syntax is enough to get started i.e. with/without JavaScript! To learn and build more with plotly.js please visit [plotly.js documentation](https://plotly.com/javascript).

```html
&lt;head&gt;
    &lt;script src=&quot;https://cdn.plot.ly/plotly-3.1.0.min.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div id=&quot;gd&quot;&gt;&lt;/div&gt;

    &lt;script&gt;
        Plotly.newPlot(&quot;gd&quot;, /* JSON object */ {
            &quot;data&quot;: [{ &quot;y&quot;: [1, 2, 3] }],
            &quot;layout&quot;: { &quot;width&quot;: 600, &quot;height&quot;: 400}
        })
    &lt;/script&gt;
&lt;/body&gt;
```

Alternatively you may consider using [native ES6 import](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules) in the script tag.
```html
&lt;script type=&quot;module&quot;&gt;
    import &quot;https://cdn.plot.ly/plotly-3.1.0.min.js&quot;
    Plotly.newPlot(&quot;gd&quot;, [{ y: [1, 2, 3] }])
&lt;/script&gt;
```

Fastly supports Plotly.js with free CDN service. Read more at &lt;https://www.fastly.com/open-source&gt;.

### Un-minified versions are also available on CDN
While non-minified source files may contain characters outside UTF-8, it is recommended that you specify the `charset` when loading those bundles.
```html
&lt;script src=&quot;https://cdn.plot.ly/plotly-3.1.0.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
```

&gt; Please note that as of v2 the &quot;plotly-latest&quot; outputs (e.g. https://cdn.plot.ly/plotly-latest.min.js) will no longer be updated on the CDN, and will stay at the last v1 patch v1.58.5. Therefore, to use the CDN with plotly.js v2 and higher, you must specify an exact plotly.js version.

### MathJax
You could load either version two or version three of MathJax files, for example:
```html
&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG.js&quot;&gt;&lt;/script&gt;
```

```html
&lt;script src=&quot;https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-svg.js&quot;&gt;&lt;/script&gt;
```

&gt; When using MathJax version 3, it is also possible to use `chtml` output on the other parts of the page in addition to `svg` output for the plotly graph.
Please refer to `devtools/test_dashboard/index-mathjax3chtml.html` to see an example.

### Need to have several WebGL graphs on a page?
You may simply load [virtual-webgl](https://github.com/greggman/virtual-webgl) script for WebGL 1 (not WebGL 2) before loading other scripts.
```html
&lt;script src=&quot;https://unpkg.com/virtual-webgl@1.0.6/src/virtual-webgl.js&quot;&gt;&lt;/script&gt;
```

## Bundles
There are two kinds of plotly.js bundles:
1. Complete and partial official bundles that are distributed to `npm` and the `CDN`, described in [the dist README](https://github.com/plotly/plotly.js/blob/master/dist/README.md).
2. Custom bundles you can create yourself to optimize the size of bundle depending on your needs. Please visit [CUSTOM_BUNDLE](https://github.com/plotly/plotly.js/blob/master/CUSTOM_BUNDLE.md) for more information.

---
## Alternative ways to load and build plotly.js
If your library needs to bundle or directly load [plotly.js/lib/index.js](https://github.com/plotly/plotly.js/blob/master/lib/index.js) or parts of its modules similar to [index-basic](https://github.com/plotly/plotly.js/blob/master/lib/index-basic.js) in some other way than via an official or a custom bundle, or in case you want to tweak the default build configurations, then please visit [`BUILDING.md`](https://github.com/plotly/plotly.js/blob/master/BUILDING.md).

---
## Documentation

Official plotly.js documentation is hosted at [https://plotly.com/javascript](https://plotly.com/javascript).

These pages are generated by the Plotly [graphing-library-docs repo](https://github.com/plotly/graphing-library-docs) built with [Jekyll](https://jekyllrb.com/) and publicly hosted on GitHub Pages.
For more info about contributing to Plotly documentation, please read through [contributing guidelines](https://github.com/plotly/graphing-library-docs/blob/master/README.md).

---
## Bugs and feature requests

Have a bug or a feature request? Please [open a Github issue](https://github.com/plotly/plotly.js/issues/new) keeping in mind the [issue guidelines](https://github.com/plotly/plotly.js/blob/master/.github/ISSUE_TEMPLATE.md). You may also want to read about [how changes get made to Plotly.js](https://github.com/plotly/plotly.js/blob/master/CONTRIBUTING.md)

---
## Contributing

Please read through our [contributing guidelines](https://github.com/plotly/plotly.js/blob/master/CONTRIBUTING.md). Included are directions for opening issues, using plotly.js in your project and notes on development.

---
## Notable contributors

Plotly.js is at the core of a large and dynamic ecosystem with many contributors who file issues, reproduce bugs, suggest improvements, write code in this repo (and other upstream or downstream ones) and help users in the Plotly community forum. The following people deserve special recognition for their outsized contributions to this ecosystem:

|   | GitHub | Twitter | Status |
|---|--------|---------|--------|
|**Alex C. Johnson**| [@alexcjohnson](https://github.com/alexcjohnson) | | Active, Maintainer |
|**Mojtaba Samimi** | [@archmoj](https://github.com/archmoj) | [@solarchvision](https://twitter.com/solarchvision) | Active, Maintainer |
|**Emily Kellison-Linn** | [@emilykl](https://github.com/emilykl) | | Active, Maintainer |
|**My-Tien Nguyen**| [@my-tien](https://github.com/my-tien) | | Active, Community Contributor |
|**Birk Skyum**| [@birkskyum](https://github.com/birkskyum) | | Active, Community Contributor |
|**√âtienne T√©treault-Pinard**| [@etpinard](https://github.com/etpinard) | [@etpinard](https://twitter.com/etpinard) | Hall of Fame |
|**Antoine Roy-Gobeil** | [@antoinerg](https://github.com/antoinerg) | | Hall of Fame |
|**Jack Parmer**| [@jackparmer](https://github.com/jackparmer) | | Hall of Fame |
|**Nicolas Kruchten** | [@nicolaskruchten](https://github.com/nicolaskruchten) | [@nicolaskruchten](https://twitter.com/nicolaskruchten) | Hall of Fame |
|**Mikola Lysenko**| [@mikolalysenko](https://github.com/mikolalysenko) | [@MikolaLysenko](https://twitter.com/MikolaLysenko) | Hall of Fame |
|**Ricky Reusser**| [@rreusser](https://github.com/rreusser) | [@rickyreusser](https://twitter.com/rickyreusser) | Hall of Fame |
|**Dmitry Yv.** | [@dy](https://github.com/dy) | [@DimaYv](https://twitter.com/dimayv)| Hall of Fame |
|**Jon Mease** | [@jonmmease](https://github.com/jonmmease) | [@jonmmease](https://twitter.com/jonmmease) | Hall of Fame |
|**Robert Monfera**| [@monfera](https://github.com/monfera) | [@monfera](https://twitter.com/monfera) | Hall of Fame |
|**Robert M√∂stl** | [@rmoestl](https://github.com/rmoestl) | [@rmoestl](https://twitter.com/rmoestl) | Hall of Fame |
|**Nicolas Riesco**| [@n-riesco](https://github.com/n-riesco) | | Hall of Fame |
|**Mikl√≥s Tusz**| [@mdtusz](https://github.com/mdtusz) | [@mdtusz](https://twitter.com/mdtusz)| Hall of Fame |
|**Chelsea Douglas**| [@cldougl](https://github.com/cldougl) | | Hall of Fame |
|**Ben Postlethwaite**| [@bpostlethwaite](https://github.com/bpostlethwaite) | | Hall of Fame |
|**Hannah Ker** | [@hannahker](https://github.com/hannahker) | [@hannahker11](https://twitter.com/hannahker11)| Hall of Fame |
|**Chris Parmer**| [@chriddyp](https://github.com/chriddyp) | | Hall of Fame |
|**Alex Vados**| [@alexander-daniel](https://github.com/alexander-daniel) | | Hall of Fame |

---
## Copyright and license

Code and documentation copyright 2021 Plotly, Inc.

Code released under the [MIT license](https://github.com/plotly/plotly.js/blob/master/LICENSE).

### Versioning

This project is maintained under the [Semantic Versioning guidelines](https://semver.org/).

See the [Releases section](https://github.com/plotly/plotly.js/releases) of our GitHub project for changelogs for each release version of plotly.js.

---
## Community

* Follow [@plotlygraphs](https://twitter.com/plotlygraphs) on Twitter for the latest Plotly news.
* Implementation help may be found on community.plot.com (tagged [`plotly-js`](https://community.plotly.com/c/plotly-js)) or
  on Stack Overflow (tagged [`plotly`](https://stackoverflow.com/questions/tagged/plotly)).
* Developers should use the keyword `plotly` on packages which modify or add to the functionality of plotly.js when distributing through [npm](https://www.npmjs.com/browse/keyword/plotly).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[modood/Administrative-divisions-of-China]]></title>
            <link>https://github.com/modood/Administrative-divisions-of-China</link>
            <guid>https://github.com/modood/Administrative-divisions-of-China</guid>
            <pubDate>Sat, 09 Aug 2025 00:04:35 GMT</pubDate>
            <description><![CDATA[‰∏≠Âçé‰∫∫Ê∞ëÂÖ±ÂíåÂõΩË°åÊîøÂå∫ÂàíÔºöÁúÅÁ∫ßÔºàÁúÅ‰ªΩÔºâ„ÄÅ Âú∞Á∫ßÔºàÂüéÂ∏ÇÔºâ„ÄÅ ÂéøÁ∫ßÔºàÂå∫ÂéøÔºâ„ÄÅ ‰π°Á∫ßÔºà‰π°ÈïáË°óÈÅìÔºâ„ÄÅ ÊùëÁ∫ßÔºàÊùëÂßî‰ºöÂ±ÖÂßî‰ºöÔºâ Ôºå‰∏≠ÂõΩÁúÅÂ∏ÇÂå∫ÈïáÊùë‰∫åÁ∫ß‰∏âÁ∫ßÂõõÁ∫ß‰∫îÁ∫ßËÅîÂä®Âú∞ÂùÄÊï∞ÊçÆ„ÄÇ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/modood/Administrative-divisions-of-China">modood/Administrative-divisions-of-China</a></h1>
            <p>‰∏≠Âçé‰∫∫Ê∞ëÂÖ±ÂíåÂõΩË°åÊîøÂå∫ÂàíÔºöÁúÅÁ∫ßÔºàÁúÅ‰ªΩÔºâ„ÄÅ Âú∞Á∫ßÔºàÂüéÂ∏ÇÔºâ„ÄÅ ÂéøÁ∫ßÔºàÂå∫ÂéøÔºâ„ÄÅ ‰π°Á∫ßÔºà‰π°ÈïáË°óÈÅìÔºâ„ÄÅ ÊùëÁ∫ßÔºàÊùëÂßî‰ºöÂ±ÖÂßî‰ºöÔºâ Ôºå‰∏≠ÂõΩÁúÅÂ∏ÇÂå∫ÈïáÊùë‰∫åÁ∫ß‰∏âÁ∫ßÂõõÁ∫ß‰∫îÁ∫ßËÅîÂä®Âú∞ÂùÄÊï∞ÊçÆ„ÄÇ</p>
            <p>Language: JavaScript</p>
            <p>Stars: 19,806</p>
            <p>Forks: 7,168</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre># Administrative-divisions-of-China

[![code style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)
[![npm](https://img.shields.io/npm/v/china-division.svg)](https://www.npmjs.com/package/china-division)
[![downloads](https://img.shields.io/npm/dt/china-division.svg)](https://www.npmjs.com/package/china-division)
[![license](https://img.shields.io/badge/license-WTFPL%20--%20Do%20What%20the%20Fuck%20You%20Want%20to%20Public%20License-green.svg)](https://raw.githubusercontent.com/modood/Administrative-divisions-of-China/master/LICENSE)

‰∏≠Âçé‰∫∫Ê∞ëÂÖ±ÂíåÂõΩË°åÊîøÂå∫ÂàíÔºà‰∫îÁ∫ßÔºâÔºöÁúÅÁ∫ß„ÄÅÂú∞Á∫ß„ÄÅÂéøÁ∫ß„ÄÅ‰π°Á∫ßÂíåÊùëÁ∫ß„ÄÇ

## Êï∞ÊçÆÊù•Ê∫ê

*   ÂõΩÂÆ∂ÁªüËÆ°Â±ÄÔºö
    * ‰∏≠Âçé‰∫∫Ê∞ëÂÖ±ÂíåÂõΩÂõΩÂÆ∂ÁªüËÆ°Â±Ä-ÁªüËÆ°Áî®Âå∫ÂàíÂíåÂüé‰π°ÂàíÂàÜ‰ª£Á†Å
    * [‰∏≠Âçé‰∫∫Ê∞ëÂÖ±ÂíåÂõΩÂõΩÂÆ∂ÁªüËÆ°Â±Ä-ÁªüËÆ°Áî®Âå∫Âàí‰ª£Á†ÅÂíåÂüé‰π°ÂàíÂàÜ‰ª£Á†ÅÁºñÂà∂ËßÑÂàô](http://www.stats.gov.cn/sj/tjbz/gjtjbz/202302/t20230213_1902741.html)
*   Êú¨È°πÁõÆÂ∑≤Êõ¥Êñ∞Ëá≥Ôºö
    * 2023Âπ¥ÁªüËÆ°Áî®Âå∫Âàí‰ª£Á†ÅÂíåÂüé‰π°ÂàíÂàÜ‰ª£Á†ÅÔºàÊà™Ê≠¢Êó∂Èó¥Ôºö2023-06-30ÔºåÂèëÂ∏ÉÊó∂Èó¥Ôºö2023-09-11Ôºâ

## Êï∞ÊçÆ‰∏ãËΩΩ

| Êñá‰ª∂ÂàóË°®                     | JSON | CSV |
|:-----------------------------|:-----|:----|
| ÁúÅÁ∫ßÔºàÁúÅ‰ªΩ„ÄÅÁõ¥ËæñÂ∏Ç„ÄÅËá™Ê≤ªÂå∫Ôºâ | [provinces.json](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/provinces.json) | [provinces.csv](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/provinces.csv) |
| Âú∞Á∫ßÔºàÂüéÂ∏ÇÔºâ                 | [cities.json](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/cities.json) | [cities.csv](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/cities.csv) |
| ÂéøÁ∫ßÔºàÂå∫ÂéøÔºâ                 | [areas.json](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/areas.json) | [areas.csv](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/areas.csv) |
| ‰π°Á∫ßÔºà‰π°Èïá„ÄÅË°óÈÅìÔºâ           | [streets.json](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/streets.json) | [streets.csv](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/streets.csv) |
| ÊùëÁ∫ßÔºàÊùëÂßî‰ºö„ÄÅÂ±ÖÂßî‰ºöÔºâ       | [villages.json](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/villages.json) | [villages.csv](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/villages.csv) |

| Êñá‰ª∂ÂàóË°®                                    | ÊôÆÈÄö | Â∏¶ÁºñÁ†Å |
|:--------------------------------------------|:-----|:-------|
| ‚ÄúÁúÅ‰ªΩ„ÄÅÂüéÂ∏Ç‚Äù ‰∫åÁ∫ßËÅîÂä®Êï∞ÊçÆ                   | [pc.json](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/pc.json) | [pc-code.json](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/pc-code.json) |
| ‚ÄúÁúÅ‰ªΩ„ÄÅÂüéÂ∏Ç„ÄÅÂå∫Âéø‚Äù ‰∏âÁ∫ßËÅîÂä®Êï∞ÊçÆ             | [pca.json](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/pca.json) | [pca-code.json](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/pca-code.json) |
| ‚ÄúÁúÅ‰ªΩ„ÄÅÂüéÂ∏Ç„ÄÅÂå∫Âéø„ÄÅ‰π°Èïá‚Äù ÂõõÁ∫ßËÅîÂä®Êï∞ÊçÆ       | [pcas.json](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/pcas.json) | [pcas-code.json](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/pcas-code.json) |
| ‚ÄúÁúÅ‰ªΩ„ÄÅÂüéÂ∏Ç„ÄÅÂå∫Âéø„ÄÅ‰π°Èïá„ÄÅÊùëÂ∫Ñ‚Äù ‰∫îÁ∫ßËÅîÂä®Êï∞ÊçÆ | - | - |

&gt; ÊèêÁ§∫ÔºöÈúÄË¶ÅÊâìÂåÖ‰∏ãËΩΩÂÖ®ÈÉ®Êñá‰ª∂ÔºåËØ∑Áúã [Releases](https://github.com/modood/Administrative-divisions-of-China/releases)„ÄÇ

## Êï∞ÊçÆÂ∫ìÊîØÊåÅ

ÁõÆÂâçÊú¨È°πÁõÆÊï∞ÊçÆ‰øùÂ≠òÂú® sqlite3ÔºåÊï∞ÊçÆÊñá‰ª∂‰∏ãËΩΩÔºö[data.sqlite](https://github.com/modood/Administrative-divisions-of-China/blob/master/dist/data.sqlite)„ÄÇ

ÂèØ‰ª•Ëá™Â∑±Â∞ÜÊï∞ÊçÆËøÅÁßªÂà∞ÂÖ∂‰ªñÊï∞ÊçÆÂ∫ìÁÆ°ÁêÜÁ≥ªÁªü‰∏≠ÔºàMySQL, Oracle, MSSQL Á≠âÔºâ„ÄÇ

**ÁúÅÁ∫ßÊï∞ÊçÆÈ¢ÑËßà**

| code | name           |
|:-----|:---------------|
| 13   | Ê≤≥ÂåóÁúÅ         |
| 14   | Â±±Ë•øÁúÅ         |
| 15   | ÂÜÖËíôÂè§Ëá™Ê≤ªÂå∫   |
| 45   | ÂπøË•øÂ£ÆÊóèËá™Ê≤ªÂå∫ |

**Âú∞Á∫ßÊï∞ÊçÆÈ¢ÑËßà**

| code | name       | provinceCode |
|:-----|:-----------|:-------------|
| 1301 | Áü≥ÂÆ∂Â∫ÑÂ∏Ç   | 13           |
| 1401 | Â§™ÂéüÂ∏Ç     | 14           |
| 1525 | Èî°ÊûóÈÉ≠ÂãíÁõü | 15           |
| 4503 | Ê°ÇÊûóÂ∏Ç     | 45           |

**ÂéøÁ∫ßÊï∞ÊçÆÈ¢ÑËßà**

| code   | name     | cityCode | provinceCode |
|:-------|:---------|:---------|:-------------|
| 130111 | Ê†æÂüéÂå∫   | 1301     | 13           |
| 140121 | Ê∏ÖÂæêÂéø   | 1401     | 14           |
| 152527 | Â§™‰ªÜÂØ∫Êóó | 1525     | 15           |
| 450305 | ‰∏ÉÊòüÂå∫   | 4503     | 45           |

**‰π°Á∫ßÊï∞ÊçÆÈ¢ÑËßà**

| code      | name           | areaCode | cityCode | provinceCode |
|:----------|:---------------|:---------|:---------|:-------------|
| 130111200 | ÂçóÈ´ò‰π°         | 130111   | 1301     | 13           |
| 140121102 | ‰∏ú‰∫éÈïá         | 140121   | 1401     | 14           |
| 152527201 | Ë¥°ÂÆùÊãâÊ†ºËãèÊú®   | 152527   | 1525     | 15           |
| 450305004 | Êºì‰∏úË°óÈÅìÂäû‰∫ãÂ§Ñ | 450305   | 4503     | 45           |

**ÊùëÁ∫ßÊï∞ÊçÆÈ¢ÑËßà**

| code         | name           | streetCode | areaCode | cityCode | provinceCode |
|:-------------|:---------------|:-----------|:---------|:---------|:-------------|
| 130111200201 | ÂçóÈ´òÊùëÂßî‰ºö     | 130111200  | 130111   | 1301     | 13           |
| 140121102001 | ‰∏ú‰∫éÁ§æÂå∫Â±ÖÂßî‰ºö | 140121102  | 140121   | 1401     | 14           |
| 152527201206 | Êï¶Ëææ‰πåËãèÂòéÊü•   | 152527201  | 152527   | 1525     | 15           |
| 450305004006 | Ê®™Â°òÁ§æÂå∫       | 450305004  | 450305   | 4503     | 45           |

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[uBlockOrigin/uBOL-home]]></title>
            <link>https://github.com/uBlockOrigin/uBOL-home</link>
            <guid>https://github.com/uBlockOrigin/uBOL-home</guid>
            <pubDate>Sat, 09 Aug 2025 00:04:34 GMT</pubDate>
            <description><![CDATA[uBO Lite home (MV3)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/uBlockOrigin/uBOL-home">uBlockOrigin/uBOL-home</a></h1>
            <p>uBO Lite home (MV3)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,448</p>
            <p>Forks: 86</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre># uBO Lite

| Browser | Install from ... | Browser | Install from ... |
| --- | --- | --- | --- |
| &lt;img src=&quot;https://github.com/user-attachments/assets/d5033882-0c94-424f-9e8b-e00ed832acf7&quot; alt=&quot;Get uBO Lite for Chromium&quot;&gt; | &lt;a href=&quot;https://chromewebstore.google.com/detail/ublock-origin-lite/ddkjiahejlhfcafbddmgiahcphecmpfh&quot;&gt;Chrome Web Store&lt;/a&gt; | &lt;img src=&quot;https://github.com/user-attachments/assets/8a33b8ba-57ee-4a54-a83c-7d21f9b2dafb&quot; alt=&quot;Get uBlock Origin Lite for Firefox&quot;&gt; | &lt;a href=&quot;https://github.com/uBlockOrigin/uBOL-home/releases/download/uBOLite_2025.709.1525-beta/uBOLite.beta.firefox.signed.xpi&quot;&gt;Self-distributed&lt;/a&gt; (Beta) |
| &lt;img src=&quot;https://github.com/user-attachments/assets/acff1f85-d3f0-49eb-928e-7c43c5ef8f6c&quot; alt=&quot;Get uBlock Origin Lite for Microsoft Edge&quot;&gt; | &lt;a href=&quot;https://microsoftedge.microsoft.com/addons/detail/ublock-origin-lite/cimighlppcgcoapaliogpjjdehbnofhn&quot;&gt;Edge Add-ons&lt;/a&gt; | &lt;img src=&quot;https://github.com/user-attachments/assets/d267b13e-b403-4040-93ea-fff38fea8c1b&quot; alt=&quot;Get uBlock Origin Lite for Safari&quot;&gt; | &lt;a href=&quot;https://apps.apple.com/us/app/ublock-origin-lite/id6745342698&quot;&gt;Safari App Store&lt;/a&gt; |

## Description

[Frequently asked questions (FAQ)](https://github.com/uBlockOrigin/uBOL-home/wiki/Frequently-asked-questions-(FAQ))

**uBO Lite** (uBOL) is an efficient content blocker based on the [MV3 API](https://developer.chrome.com/docs/extensions/develop/migrate/what-is-mv3).

uBOL operates entirely declaratively, meaning no permanent process is required for filtering. The browser handles CSS/JS injection for content filtering, ensuring that uBOL does not consume CPU or memory resources while blocking content. The service worker process is only active when interacting with the popup panel or options pages.

The default ruleset includes at least uBlock Origin&#039;s default filter set:

- uBlock Origin&#039;s built-in filter lists
- EasyList
- EasyPrivacy
- Peter Lowe‚Äôs Ad and tracking server list

You can enable additional rulesets by visiting the options page ‚Äî click the _Cogs_ icon in the popup panel.

## Changelog

See the [_Releases_ section](https://github.com/uBlockOrigin/uBOL-home/releases).

Previous releases can be found in the [_Releases_ section of the uBlock repo](https://github.com/gorhill/uBlock/releases?q=uBOL).

## Issues

All uBO Lite-related issues (including filter-related ones) can be reported [here](https://github.com/uBlockOrigin/uBOL-home/issues).

## Admin Policies

uBOL exposes settings that can be defined by administrators through [managed storage](https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/storage/managed). See [Managed settings](https://github.com/uBlockOrigin/uBOL-home/wiki/Managed-settings).

## Frequently Asked Questions (FAQ)

For more information, check the [_Wiki_](https://github.com/uBlockOrigin/uBOL-home/wiki/Frequently-asked-questions-(FAQ)).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[birobirobiro/awesome-shadcn-ui]]></title>
            <link>https://github.com/birobirobiro/awesome-shadcn-ui</link>
            <guid>https://github.com/birobirobiro/awesome-shadcn-ui</guid>
            <pubDate>Sat, 09 Aug 2025 00:04:33 GMT</pubDate>
            <description><![CDATA[A curated list of awesome things related to shadcn/ui.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/birobirobiro/awesome-shadcn-ui">birobirobiro/awesome-shadcn-ui</a></h1>
            <p>A curated list of awesome things related to shadcn/ui.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 16,653</p>
            <p>Forks: 967</p>
            <p>Stars today: 24 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;br&gt;
  &lt;img width=&quot;400&quot; src=&quot;https://raw.githubusercontent.com/birobirobiro/awesome-shadcn-ui/64729b2c178e3fdcb42c0c7bf341bcde7ae502ea/assets/logo.svg&quot; alt=&quot;logo of awesome-shadcn/ui repository&quot;&gt;
  &lt;br&gt;
  &lt;br&gt;
&lt;/p&gt;

&lt;h2 align=&#039;center&#039;&gt;awesome-shadcn/ui&lt;/h2&gt;

&lt;p align=&#039;center&#039;&gt;
A curated list of awesome things related to &lt;a href=&#039;https://ui.shadcn.com/&#039; target=&quot;_blank&quot;&gt;shadcn/ui&lt;/a&gt;
&lt;br&gt;&lt;br&gt;

&lt;p align=&#039;center&#039;&gt;
&lt;i&gt;Created by: &lt;a href=&#039;https://birobirobiro.dev/&#039; target=&quot;_blank&quot;&gt;birobirobiro.dev&lt;/a&gt;&lt;/i&gt;
&lt;br&gt;&lt;br&gt;

&lt;a href=&#039;https://github.com/birobirobiro/awesome-shadcn-ui/&#039; target=&quot;_blank&quot;&gt;
&lt;img src=&#039;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg&#039; alt=&#039;Awesome&#039;&gt;
&lt;/a&gt;
&lt;/p&gt;

## Libs and Components

| Name | Description | Link | Date |
|------|-------------|------|------|
| 21st.dev                              | Open source npm for shadcn/ui components. Also: Dribble for design engineers. Install UI components via shadcn CLI, or publish your own.                                                                                                        | [Link](https://21st.dev/)                                                               | 2024-12-06 
| 8bitcn.com                            | A set of retro-designed, accessible components and a code distribution platform. Open Source. Open Code.                                                                                                                                        | [Link](https://www.8bitcn.com/)                                                         | 2025-04-12 
| aceternity-ui                         | Copy paste the most trending react components without having to worry about styling and animations.                                                                                                                                             | [Link](https://ui.aceternity.com/)                                                      | 2024-12-06 
| animated-tabs                         | Vercel-like animated tabs.                                                                                                                                                                                                                      | [Link](https://github.com/mehrdadrafiee/animated-tabs)                                  | 2025-04-06 
| assistant-ui                          | React Components for AI Chat.                                                                                                                                                                                                                   | [Link](https://github.com/Yonom/assistant-ui)                                           | 2024-09-23 
| autocomplete-select-shadcn-ui         | Autocomplete component built with shadcn/ui and Fancy Multi Select by Maximilian Kaske.                                                                                                                                                         | [Link](https://www.armand-salle.fr/post/autocomplete-select-shadcn-ui)                  | 2024-04-07 
| auto-form                             | A React component that automatically creates a shadcn/ui form based on a zod schema.                                                                                                                                                            | [Link](https://github.com/vantezzen/auto-form)                                          | 2024-04-29 
| async-select                          | Async Select component built with shadcn/ui with debounce search.                                                                                                                                                                               | [Link](https://async.rdsx.dev)                                                          | 2024-07-22 
| berlix                                | Animated components library built using Tailwind CSS and Motion                                                                                                                                                                                 | [Link](https://berlix.vercel.app)                                                       | 2025-06-10 
| big-calendar                          | A modern, feature-rich calendar application with multiple viewing options built using Next.js, TypeScript, and Tailwind CSS.                                                                                                                    | [Link](https://github.com/lramos33/big-calendar)                                        | 2025-03-08 
| buouui                                | A UI component library and template suite based on shadcn/ui with stunning landing pages, templates, and rich animations.                                                                                                                       | [Link](https://buouui.com)                                                              | 2025-04-06 
| bundui                                | A collection of reusable animated components built with Tailwind CSS and Framer Motion.                                                                                                                                                         | [Link](https://bundui.io)                                                               | 2024-09-23 
| calendar                              | React/shadcn full calendar like Google Calendar                                                                                                                                                                                                 | [Link](https://github.com/charlietlamb/calendar)                                        | 2024-05-03 
| capture-photo                         | Browser-based React component for camera functionalities in web applications.                                                                                                                                                                   | [Link](https://github.com/UretzkyZvi/capture-photo)                                     | 2024-05-06 
| clerk-elements                        | Composable components for building custom UIs on top of Clerk&#039;s APIs.                                                                                                                                                                           | [Link](https://clerk.com/docs/elements/examples/shadcn-ui)                              | 2024-06-07 
| clerk-shadcn-theme                    | Synchronize Clerk SignIn/SignUp components with shadcn/ui styles.                                                                                                                                                                               | [Link](https://github.com/stormynight9/clerk-shadcn-theme)                              | 2024-06-07 
| commerce-ui                           | Components, blocks and examples to build e-commerce storefronts and apps.                                                                                                                                                                       | [Link](https://github.com/stackzero-labs/ui)                                            | 2025-02-20 
| confirm-dialog                        | A confirm dialog component built with shadcn/ui.                                                                                                                                                                                                | [Link](https://github.com/Aslam97/react-confirm-dialog)                                 | 2024-07-02 
| country-state-dropdown                | Component built with Nextjs, Tailwindcss, shadcn/ui &amp; Zustand.                                                                                                                                                                                  | [Link](https://github.com/Jayprecode/country-state-dropdown)                            | 2024-02-22 
| cult-ui                               | Curated set of animated shadcn-style React components.                                                                                                                                                                                          | [Link](https://www.cult-ui.com/)                                                        | 2024-05-29 
| credenza                              | Ready-made responsive modal component for shadcn/ui.                                                                                                                                                                                            | [Link](https://github.com/redpangilinan/credenza)                                       | 2024-06-07 
| crypto-charts                         | Crypto charts made for shadcn/ui using PythNetwork.                                                                                                                                                                                             | [Link](https://github.com/jstnw10/crypto-charts)                                        | 2024-07-16 
| date-range-picker-for-shadcn          | Multi-month views, text entry, preset ranges, responsive design, and date range comparisons.                                                                                                                                                    | [Link](https://github.com/johnpolacek/date-range-picker-for-shadcn)                     | 2024-04-29 
| date-time-picker-shadcn               | Datetime Picker for shadNext Project.                                                                                                                                                                                                           | [Link](https://shadcn-datetime-picker.vercel.app)                                       | 2024-07-16 
| date-time-range-picker-shadcn         | Fully featured date-time range picker with multi-month views, timezone support, preset ranges, and modular components for date and time selection.                                                                                              | [Link](https://date-time-range-picker.vercel.app/)                                      | 2025-03-08 
| datetime-picker                       | Datetime picker with timezone support, min/max dates, and month/year selection.                                                                                                                                                                 | [Link](https://shadcn-datetime-picker-xi.vercel.app)                                    | 2024-07-16 
| dnd-dashboard                         | Dashboard with drop-to-swap layouts using Next.js, shadcn/ui, and swapy.                                                                                                                                                                        | [Link](https://github.com/olliethedev/dnd-dashboard)                                    | 2024-10-17 
| downshift-shadcn-combobox             | Combobox/autocomplete component built with shadcn/ui and Downshift.                                                                                                                                                                             | [Link](https://github.com/TheOmer77/downshift-shadcn-combobox)                          | 2024-06-27 
| drag-to-resize-sidebar                | Extended shadcn/ui sidebar component with persisted state drag-to-resize functionality.                                                                                                                                                         | [Link](https://github.com/lumpinif/drag-to-resize-sidebar)                              | 2024-11-21 
| druid/ui                              | Intercom inspired AI chatbot and UI components built on shadcn/ui.                                                                                                                                                                              | [Link](https://druidui.com/)                                                            | 2024-11-21 
| drop-drawer                           | A dropdown menu on desktop and a drawer on mobile devices.                                                                                                                                                                                      | [Link](https://github.com/jiaweing/DropDrawer)                                          | 2025-05-13 
| dy-comps                              | shacn/ui &amp; Framer Motion React components ‚Äî flexible, responsive &amp; easy to drop into any project.                                                                                                                                               | [Link](https://dycomps.oimmi.com/)                                                      | 2025-03-08 
| echo-editor                           | Modern WYSIWYG rich-text editor based on tiptap and shadcn/ui.                                                                                                                                                                                  | [Link](https://github.com/Seedsa/echo-editor)                                           | 2024-06-07 
| edil-ozi                              | React components with Gsap, framer motion, and tailwind.                                                                                                                                                                                        | [Link](https://edilozi.pro/)                                                            | 2024-06-27 
| emblor                                | Customizable, accessible tag input component with shadcn/ui.                                                                                                                                                                                    | [Link](https://github.com/JaleelB/emblor)                                               | 2024-04-29 
| enhanced-button                       | Enhanced version of the default shadcn-button component.                                                                                                                                                                                        | [Link](https://github.com/jakobhoeg/enhanced-button)                                    | 2024-04-29 
|envin|Framework-agnostic, type-safe tool to validate and preview your environment variables - powered by your favorite schema validator.|[Link](https://envin.turbostarter.dev)| 2025-07-07 
| eo-n/ui                               | Enhanced UI components built on shadcn‚Äôs robust foundation, integrated with Base UI and Tailwind CSS for a modern and customizable design system.                                                                                               | [Link](https://github.com/aeonzz/eo-n)                                                  | 2025-04-04 
| event-timeline-roadmap                | A pair of customizable, animated event timeline and roadmap components                                                                                                                                                                          | [Link](https://roadmap.hncore.website/)                                                 | 2025-04-01 
| extend-ui                             | Reusable components built on shadcn/ui for web applications.                                                                                                                                                                                    | [Link](https://www.extend-ui.com/)                                                      | 2024-11-28 
| fancy-area                            | Textarea with @mention support inspired by GitHub&#039;s PR comment section.                                                                                                                                                                         | [Link](https://craft.mxkaske.dev/post/fancy-area)                                       | 2024-06-27 
| fancy-box                             | GitHub PR label selector-inspired Combobox with radix-ui components.                                                                                                                                                                            | [Link](https://craft.mxkaske.dev/post/fancy-box)                                        | 2024-07-11 
| fancy-multi-select                    | Multi Select Component inspired by campsite.design and cal.com.                                                                                                                                                                                 | [Link](https://craft.mxkaske.dev/post/fancy-multi-select)                               | 2024-04-29 
| fancy-switch                          | Fancy switch component built with shadcn/ui.                                                                                                                                                                                                    | [Link](https://github.com/Aslam97/react-fancy-switch)                                   | 2024-07-11 
| farmui                                | Styled and animated component library with npm package support.                                                                                                                                                                                 | [Link](https://farmui.com)                                                              | 2024-06-08 
| file-uploader                         | File uploader with shadcn/ui and react-dropzone.                                                                                                                                                                                                | [Link](https://github.com/sadmann7/file-uploader)                                       | 2024-06-07 
| file-vault                            | File upload component for React.                                                                                                                                                                                                                | [Link](https://github.com/ManishBisht777/file-vault)                                    | 2024-06-07 
| floating-dragable-card                | Dragable and resizable card using shadcn/ui elements.                                                                                                                                                                                           | [Link](https://github.com/nishansanjuka/react-drag-card)                                | 2024-11-13 
| fusion-ui                             | Library combining shadcn/ui and MagicUI.                                                                                                                                                                                                        | [Link](https://github.com/nyxb-ui/ui)                                                   | 2024-07-02 
| glasscn-ui                            | shadcn/ui component library with glassmorphism variants, and many additional components.                                                                                                                                                        | [Link](https://github.com/itsjavi/glasscn-ui)                                           | 2025-06-10 
| gluestack-ui                          | Rea

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[danielmiessler/Fabric]]></title>
            <link>https://github.com/danielmiessler/Fabric</link>
            <guid>https://github.com/danielmiessler/Fabric</guid>
            <pubDate>Sat, 09 Aug 2025 00:04:32 GMT</pubDate>
            <description><![CDATA[Fabric is an open-source framework for augmenting humans using AI. It provides a modular system for solving specific problems using a crowdsourced set of AI prompts that can be used anywhere.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/danielmiessler/Fabric">danielmiessler/Fabric</a></h1>
            <p>Fabric is an open-source framework for augmenting humans using AI. It provides a modular system for solving specific problems using a crowdsourced set of AI prompts that can be used anywhere.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 32,969</p>
            <p>Forks: 3,389</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
Fabric is graciously supported by‚Ä¶

[![Github Repo Tagline](https://github.com/user-attachments/assets/96ab3d81-9b13-4df4-ba09-75dee7a5c3d2)](https://warp.dev/fabric)

&lt;img src=&quot;./docs/images/fabric-logo-gif.gif&quot; alt=&quot;fabriclogo&quot; width=&quot;400&quot; height=&quot;400&quot;/&gt;

# `fabric`

![Static Badge](https://img.shields.io/badge/mission-human_flourishing_via_AI_augmentation-purple)
&lt;br /&gt;
![GitHub top language](https://img.shields.io/github/languages/top/danielmiessler/fabric)
![GitHub last commit](https://img.shields.io/github/last-commit/danielmiessler/fabric)
[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](https://opensource.org/licenses/MIT)
[![Ask DeepWiki](https://deepwiki.com/badge.svg)](https://deepwiki.com/danielmiessler/fabric)

&lt;div align=&quot;center&quot;&gt;
&lt;h4&gt;&lt;code&gt;fabric&lt;/code&gt; is an open-source framework for augmenting humans using AI.&lt;/h4&gt;
&lt;/div&gt;

[Updates](#updates) ‚Ä¢
[What and Why](#what-and-why) ‚Ä¢
[Philosophy](#philosophy) ‚Ä¢
[Installation](#installation) ‚Ä¢
[Usage](#usage) ‚Ä¢
[Examples](#examples) ‚Ä¢
[Just Use the Patterns](#just-use-the-patterns) ‚Ä¢
[Custom Patterns](#custom-patterns) ‚Ä¢
[Helper Apps](#helper-apps) ‚Ä¢
[Meta](#meta)

![Screenshot of fabric](./docs/images/fabric-summarize.png)

&lt;/div&gt;

## What and why

Since the start of modern AI in late 2022 we&#039;ve seen an **_extraordinary_** number of AI applications for accomplishing tasks. There are thousands of websites, chat-bots, mobile apps, and other interfaces for using all the different AI out there.

It&#039;s all really exciting and powerful, but _it&#039;s not easy to integrate this functionality into our lives._

&lt;div class=&quot;align center&quot;&gt;
&lt;h4&gt;In other words, AI doesn&#039;t have a capabilities problem‚Äîit has an &lt;em&gt;integration&lt;/em&gt; problem.&lt;/h4&gt;
&lt;/div&gt;

**Fabric was created to address this by creating and organizing the fundamental units of AI‚Äîthe prompts themselves!**

Fabric organizes prompts by real-world task, allowing people to create, collect, and organize their most important AI solutions in a single place for use in their favorite tools. And if you&#039;re command-line focused, you can use Fabric itself as the interface!

## Intro videos

Keep in mind that many of these were recorded when Fabric was Python-based, so remember to use the current [install instructions](#installation) below.

- [Network Chuck](https://www.youtube.com/watch?v=UbDyjIIGaxQ)
- [David Bombal](https://www.youtube.com/watch?v=vF-MQmVxnCs)
- [My Own Intro to the Tool](https://www.youtube.com/watch?v=wPEyyigh10g)
- [More Fabric YouTube Videos](https://www.youtube.com/results?search_query=fabric+ai)

## Navigation

- [`fabric`](#fabric)
  - [What and why](#what-and-why)
  - [Intro videos](#intro-videos)
  - [Navigation](#navigation)
  - [Updates](#updates)
  - [Philosophy](#philosophy)
    - [Breaking problems into components](#breaking-problems-into-components)
    - [Too many prompts](#too-many-prompts)
  - [Installation](#installation)
    - [Get Latest Release Binaries](#get-latest-release-binaries)
      - [Windows](#windows)
      - [macOS (arm64)](#macos-arm64)
      - [macOS (amd64)](#macos-amd64)
      - [Linux (amd64)](#linux-amd64)
      - [Linux (arm64)](#linux-arm64)
    - [Using package managers](#using-package-managers)
      - [macOS (Homebrew)](#macos-homebrew)
      - [Arch Linux (AUR)](#arch-linux-aur)
    - [From Source](#from-source)
    - [Environment Variables](#environment-variables)
    - [Setup](#setup)
    - [Add aliases for all patterns](#add-aliases-for-all-patterns)
      - [Save your files in markdown using aliases](#save-your-files-in-markdown-using-aliases)
    - [Migration](#migration)
    - [Upgrading](#upgrading)
    - [Shell Completions](#shell-completions)
      - [Zsh Completion](#zsh-completion)
      - [Bash Completion](#bash-completion)
      - [Fish Completion](#fish-completion)
  - [Usage](#usage)
  - [Our approach to prompting](#our-approach-to-prompting)
  - [Examples](#examples)
  - [Just use the Patterns](#just-use-the-patterns)
    - [Prompt Strategies](#prompt-strategies)
  - [Custom Patterns](#custom-patterns)
    - [Setting Up Custom Patterns](#setting-up-custom-patterns)
    - [Using Custom Patterns](#using-custom-patterns)
    - [How It Works](#how-it-works)
  - [Helper Apps](#helper-apps)
    - [`to_pdf`](#to_pdf)
    - [`to_pdf` Installation](#to_pdf-installation)
    - [`code_helper`](#code_helper)
  - [pbpaste](#pbpaste)
  - [Web Interface](#web-interface)
    - [Installing](#installing)
    - [Streamlit UI](#streamlit-ui)
      - [Clipboard Support](#clipboard-support)
  - [Meta](#meta)
    - [Primary contributors](#primary-contributors)
    - [Contributors](#contributors)

&lt;br /&gt;

## Updates

Fabric is evolving rapidly.

Stay current with the latest features by reviewing the [CHANGELOG](./CHANGELOG.md) for all recent changes.

## Philosophy

&gt; AI isn&#039;t a thing; it&#039;s a _magnifier_ of a thing. And that thing is **human creativity**.

We believe the purpose of technology is to help humans flourish, so when we talk about AI we start with the **human** problems we want to solve.

### Breaking problems into components

Our approach is to break problems into individual pieces (see below) and then apply AI to them one at a time. See below for some examples.

&lt;img width=&quot;2078&quot; alt=&quot;augmented_challenges&quot; src=&quot;https://github.com/danielmiessler/fabric/assets/50654/31997394-85a9-40c2-879b-b347e4701f06&quot;&gt;

### Too many prompts

Prompts are good for this, but the biggest challenge I faced in 2023‚Äî‚Äîwhich still exists today‚Äîis **the sheer number of AI prompts out there**. We all have prompts that are useful, but it&#039;s hard to discover new ones, know if they are good or not, _and manage different versions of the ones we like_.

One of `fabric`&#039;s primary features is helping people collect and integrate prompts, which we call _Patterns_, into various parts of their lives.

Fabric has Patterns for all sorts of life and work activities, including:

- Extracting the most interesting parts of YouTube videos and podcasts
- Writing an essay in your own voice with just an idea as an input
- Summarizing opaque academic papers
- Creating perfectly matched AI art prompts for a piece of writing
- Rating the quality of content to see if you want to read/watch the whole thing
- Getting summaries of long, boring content
- Explaining code to you
- Turning bad documentation into usable documentation
- Creating social media posts from any content input
- And a million more‚Ä¶

## Installation

To install Fabric, you can use the latest release binaries or install it from the source.

### Get Latest Release Binaries

#### Windows

`https://github.com/danielmiessler/fabric/releases/latest/download/fabric-windows-amd64.exe`

#### macOS (arm64)

`curl -L https://github.com/danielmiessler/fabric/releases/latest/download/fabric-darwin-arm64 &gt; fabric &amp;&amp; chmod +x fabric &amp;&amp; ./fabric --version`

#### macOS (amd64)

`curl -L https://github.com/danielmiessler/fabric/releases/latest/download/fabric-darwin-amd64 &gt; fabric &amp;&amp; chmod +x fabric &amp;&amp; ./fabric --version`

#### Linux (amd64)

`curl -L https://github.com/danielmiessler/fabric/releases/latest/download/fabric-linux-amd64 &gt; fabric &amp;&amp; chmod +x fabric &amp;&amp; ./fabric --version`

#### Linux (arm64)

`curl -L https://github.com/danielmiessler/fabric/releases/latest/download/fabric-linux-arm64 &gt; fabric &amp;&amp; chmod +x fabric &amp;&amp; ./fabric --version`

### Using package managers

**NOTE:** using Homebrew or the Arch Linux package managers makes `fabric` available as `fabric-ai`, so add
the following alias to your shell startup files to account for this:

```bash
alias fabric=&#039;fabric-ai&#039;
```

#### macOS (Homebrew)

`brew install fabric-ai`

#### Arch Linux (AUR)

`yay -S fabric-ai`

### From Source

To install Fabric, [make sure Go is installed](https://go.dev/doc/install), and then run the following command.

```bash
# Install Fabric directly from the repo
go install github.com/danielmiessler/fabric/cmd/fabric@latest
```

### Environment Variables

You may need to set some environment variables in your `~/.bashrc` on linux or `~/.zshrc` file on mac to be able to run the `fabric` command. Here is an example of what you can add:

For Intel based macs or linux

```bash
# Golang environment variables
export GOROOT=/usr/local/go
export GOPATH=$HOME/go

# Update PATH to include GOPATH and GOROOT binaries
export PATH=$GOPATH/bin:$GOROOT/bin:$HOME/.local/bin:$PATH
```

for Apple Silicon based macs

```bash
# Golang environment variables
export GOROOT=$(brew --prefix go)/libexec
export GOPATH=$HOME/go
export PATH=$GOPATH/bin:$GOROOT/bin:$HOME/.local/bin:$PATH
```

### Setup

Now run the following command

```bash
# Run the setup to set up your directories and keys
fabric --setup
```

If everything works you are good to go.

### Add aliases for all patterns

In order to add aliases for all your patterns and use them directly as commands ie. `summarize` instead of `fabric --pattern summarize`
You can add the following to your `.zshrc` or `.bashrc` file.

```bash
# Loop through all files in the ~/.config/fabric/patterns directory
for pattern_file in $HOME/.config/fabric/patterns/*; do
    # Get the base name of the file (i.e., remove the directory path)
    pattern_name=$(basename &quot;$pattern_file&quot;)

    # Create an alias in the form: alias pattern_name=&quot;fabric --pattern pattern_name&quot;
    alias_command=&quot;alias $pattern_name=&#039;fabric --pattern $pattern_name&#039;&quot;

    # Evaluate the alias command to add it to the current shell
    eval &quot;$alias_command&quot;
done

yt() {
    if [ &quot;$#&quot; -eq 0 ] || [ &quot;$#&quot; -gt 2 ]; then
        echo &quot;Usage: yt [-t | --timestamps] youtube-link&quot;
        echo &quot;Use the &#039;-t&#039; flag to get the transcript with timestamps.&quot;
        return 1
    fi

    transcript_flag=&quot;--transcript&quot;
    if [ &quot;$1&quot; = &quot;-t&quot; ] || [ &quot;$1&quot; = &quot;--timestamps&quot; ]; then
        transcript_flag=&quot;--transcript-with-timestamps&quot;
        shift
    fi
    local video_link=&quot;$1&quot;
    fabric -y &quot;$video_link&quot; $transcript_flag
}
```

You can add the below code for the equivalent aliases inside PowerShell by running `notepad $PROFILE` inside a PowerShell window:

```powershell
# Path to the patterns directory
$patternsPath = Join-Path $HOME &quot;.config/fabric/patterns&quot;
foreach ($patternDir in Get-ChildItem -Path $patternsPath -Directory) {
    $patternName = $patternDir.Name

    # Dynamically define a function for each pattern
    $functionDefinition = @&quot;
function $patternName {
    [CmdletBinding()]
    param(
        [Parameter(ValueFromPipeline = `$true)]
        [string] `$InputObject,

        [Parameter(ValueFromRemainingArguments = `$true)]
        [String[]] `$patternArgs
    )

    begin {
        # Initialize an array to collect pipeline input
        `$collector = @()
    }

    process {
        # Collect pipeline input objects
        if (`$InputObject) {
            `$collector += `$InputObject
        }
    }

    end {
        # Join all pipeline input into a single string, separated by newlines
        `$pipelineContent = `$collector -join &quot;`n&quot;

        # If there&#039;s pipeline input, include it in the call to fabric
        if (`$pipelineContent) {
            `$pipelineContent | fabric --pattern $patternName `$patternArgs
        } else {
            # No pipeline input; just call fabric with the additional args
            fabric --pattern $patternName `$patternArgs
        }
    }
}
&quot;@
    # Add the function to the current session
    Invoke-Expression $functionDefinition
}

# Define the &#039;yt&#039; function as well
function yt {
    [CmdletBinding()]
    param(
        [Parameter()]
        [Alias(&quot;timestamps&quot;)]
        [switch]$t,

        [Parameter(Position = 0, ValueFromPipeline = $true)]
        [string]$videoLink
    )

    begin {
        $transcriptFlag = &quot;--transcript&quot;
        if ($t) {
            $transcriptFlag = &quot;--transcript-with-timestamps&quot;
        }
    }

    process {
        if (-not $videoLink) {
            Write-Error &quot;Usage: yt [-t | --timestamps] youtube-link&quot;
            return
        }
    }

    end {
        if ($videoLink) {
            # Execute and allow output to flow through the pipeline
            fabric -y $videoLink $transcriptFlag
        }
    }
}
```

This also creates a `yt` alias that allows you to use `yt https://www.youtube.com/watch?v=4b0iet22VIk` to get transcripts, comments, and metadata.

#### Save your files in markdown using aliases

If in addition to the above aliases you would like to have the option to save the output to your favorite markdown note vault like Obsidian then instead of the above add the following to your `.zshrc` or `.bashrc` file:

```bash
# Define the base directory for Obsidian notes
obsidian_base=&quot;/path/to/obsidian&quot;

# Loop through all files in the ~/.config/fabric/patterns directory
for pattern_file in ~/.config/fabric/patterns/*; do
    # Get the base name of the file (i.e., remove the directory path)
    pattern_name=$(basename &quot;$pattern_file&quot;)

    # Remove any existing alias with the same name
    unalias &quot;$pattern_name&quot; 2&gt;/dev/null

    # Define a function dynamically for each pattern
    eval &quot;
    $pattern_name() {
        local title=\$1
        local date_stamp=\$(date +&#039;%Y-%m-%d&#039;)
        local output_path=\&quot;\$obsidian_base/\${date_stamp}-\${title}.md\&quot;

        # Check if a title was provided
        if [ -n \&quot;\$title\&quot; ]; then
            # If a title is provided, use the output path
            fabric --pattern \&quot;$pattern_name\&quot; -o \&quot;\$output_path\&quot;
        else
            # If no title is provided, use --stream
            fabric --pattern \&quot;$pattern_name\&quot; --stream
        fi
    }
    &quot;
done
```

This will allow you to use the patterns as aliases like in the above for example `summarize` instead of `fabric --pattern summarize --stream`, however if you pass in an extra argument like this `summarize &quot;my_article_title&quot;` your output will be saved in the destination that you set in `obsidian_base=&quot;/path/to/obsidian&quot;` in the following format `YYYY-MM-DD-my_article_title.md` where the date gets autogenerated for you.
You can tweak the date format by tweaking the `date_stamp` format.

### Migration

If you have the Legacy (Python) version installed and want to migrate to the Go version, here&#039;s how you do it. It&#039;s basically two steps: 1) uninstall the Python version, and 2) install the Go version.

```bash
# Uninstall Legacy Fabric
pipx uninstall fabric

# Clear any old Fabric aliases
(check your .bashrc, .zshrc, etc.)
# Install the Go version
go install github.com/danielmiessler/fabric/cmd/fabric@latest
# Run setup for the new version. Important because things have changed
fabric --setup
```

Then [set your environmental variables](#environment-variables) as shown above.

### Upgrading

The great thing about Go is that it&#039;s super easy to upgrade. Just run the same command you used to install it in the first place and you&#039;ll always get the latest version.

```bash
go install github.com/danielmiessler/fabric/cmd/fabric@latest
```

### Shell Completions

Fabric provides shell completion scripts for Zsh, Bash, and Fish
shells, making it easier to use the CLI by providing tab completion
for commands and options.

#### Zsh Completion

To enable Zsh completion:

```bash
# Copy the completion file to a directory in your $fpath
mkdir -p ~/.zsh/completions
cp completions/_fabric ~/.zsh/completions/

# Add the directory to fpath in your .zshrc before compinit
echo &#039;fpath=(~/.zsh/completions $fpath)&#039; &gt;&gt; ~/.zshrc
echo &#039;autoload -Uz compinit &amp;&amp; compinit&#039; &gt;&gt; ~/.zshrc
```

#### Bash Completion

To enable Bash completion:

```bash
# Source the completion script in your .bashrc
echo &#039;source /path/to/fabric/completions/fabric.bash&#039; &gt;&gt; ~/.bashrc

# Or copy to the system-wide bash completion directory
sudo cp completions/fabric.bash /etc/bash_completion.d/
```

#### Fish Completion

To enable Fish completion:

```bash
# Copy the completion file to the fish completions directory
mkdir -p ~/.config/fish/completions
cp completions/fabric.fish ~/.config/fish/completions/
```

## Usage

Once you have it all set up, here&#039;s how to use it.

```bash
fabric -h
```

```plaintext
Usage:
  fabric [OPTIONS]

Application Options:
  -p, --pattern=                    Choose a pattern from the available patterns
  -v, --variable=                   Values for pattern variables, e.g. -v=#role:expert -v=#points:30
  -C, --context=                    Choose a context from the available contexts
      --session=                    Choose a session from the available sessions
  -a, --attachment=                 Attachment path or URL (e.g. for OpenAI image recognition messages)
  -S, --setup                       Run setup for all reconfigurable parts of fabric
  -t, --temperature=                Set temperature (default: 0.7)
  -T, --topp=                       Set top P (default: 0.9)
  -s, --stream                      Stream
  -P, --presencepenalty=            Set presence penalty (default: 0.0)
  -r, --raw                         Use the defaults of the model without sending chat options (like
                                    temperature etc.) and use the user role instead of the system role for
                                    patterns.
  -F, --frequencypenalty=           Set frequency penalty (default: 0.0)
  -l, --listpatterns                List all patterns
  -L, --listmodels                  List all available models
  -x, --listcontexts                List all contexts
  -X, --listsessions                List all sessions
  -U, --updatepatterns              Update patterns
  -c, --copy                        Copy to clipboard
  -m, --model=                      Choose model
      --modelContextLength=         Model context length (only affects ollama)
  -o, --output=                     Output to file
      --output-session              Output the entire session (also a temporary one) to the output file
  -n, --latest=                     Number of latest patterns to list (default: 0)
  -d, --changeDefaultModel          Change default model
  -y, --youtube=                    YouTube video or play list &quot;URL&quot; to grab transcript, comments from it
                                    and send to chat or print it put to the console and store it in the
                                    output file
      --playlist                    Prefer playlist over video if both ids are present in the URL
      --transcript                  Grab transcript from YouTube video and send to chat (it is used per
                                    default).
      --transcript-with-timestamps  Grab transcript from YouTube video with timestamps and send to chat
      --comments                    Grab comments from YouTube video and send to chat
      --metadata                    Output video metadata
  -g, --language=                   Specify the Language Code for the chat, e.g. -g=en -g=zh
  -u, --scrape_url=                 Scrape website URL to markdown using Jina AI
  -q, --scrape_question=            Search question using Jina AI
  -e, --seed=                       Seed to be used for LMM generation
  -w, --wipecontext=                Wipe context
  -W, --wipesession=                Wipe session
      --printcontext=               Print context
      --printsession=               Print session
      --readability                 Convert HTML input into a clean, readable view
      --input-has-vars              Apply variables to user input
      --dry-run                     Show what would be sent to the model without actually sending it
      --serve                       Serve the Fabric Rest API
      --serveOllama                 Serve the Fabric Rest API with ollama endpoints
      --address=                    The address to bind the REST API (default: :8080)
      --api-key=                    API key used to secure server routes
      --config=                     Path to YAML config file
      --version                     Print current version
      --listextensions              List all registered extensions


... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[fchollet/ARC-AGI]]></title>
            <link>https://github.com/fchollet/ARC-AGI</link>
            <guid>https://github.com/fchollet/ARC-AGI</guid>
            <pubDate>Sat, 09 Aug 2025 00:04:31 GMT</pubDate>
            <description><![CDATA[The Abstraction and Reasoning Corpus]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/fchollet/ARC-AGI">fchollet/ARC-AGI</a></h1>
            <p>The Abstraction and Reasoning Corpus</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,511</p>
            <p>Forks: 680</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre># Abstraction and Reasoning Corpus for Artificial General Intelligence v1 (ARC-AGI-1)

This repository contains the ARC-AGI-1 task data, as well as a browser-based interface for humans to try their hand at solving the tasks manually.

See also the [ARC-AGI-2 repository](https://github.com/arcprize/ARC-AGI-2).

*&quot;ARC can be seen as a general artificial intelligence benchmark, as a program synthesis benchmark, or as a psychometric intelligence test. It is targeted at both humans and artificially intelligent systems that aim at emulating a human-like form of general fluid intelligence.&quot;*

A complete description of the dataset, its goals, and its underlying logic, can be found in: [On the Measure of Intelligence](https://arxiv.org/abs/1911.01547).

As a reminder, a test-taker is said to solve a task when, upon seeing the task for the first time, they are able to produce the correct output grid for *all* test inputs in the task (this includes picking the dimensions of the output grid). For each test input, the test-taker is allowed 3 trials (this holds for all test-takers, either humans or AI).


## Task file format

The `data` directory contains two subdirectories:

- `data/training`: contains the task files for training (400 tasks). Use these to prototype your algorithm or to train your algorithm to acquire ARC-relevant cognitive priors.
- `data/evaluation`: contains the task files for evaluation (400 tasks). Use these to evaluate your final algorithm. To ensure fair evaluation results, do not leak information from the evaluation set into your algorithm (e.g. by looking at the evaluation tasks yourself during development, or by repeatedly modifying an algorithm while using its evaluation score as feedback).

The tasks are stored in JSON format. Each task JSON file contains a dictionary with two fields:

- `&quot;train&quot;`: demonstration input/output pairs. It is a list of &quot;pairs&quot; (typically 3 pairs).
- `&quot;test&quot;`: test input/output pairs. It is a list of &quot;pairs&quot; (typically 1 pair).

A &quot;pair&quot; is a dictionary with two fields:

- `&quot;input&quot;`: the input &quot;grid&quot; for the pair.
- `&quot;output&quot;`: the output &quot;grid&quot; for the pair.

A &quot;grid&quot; is a rectangular matrix (list of lists) of integers between 0 and 9 (inclusive). The smallest possible grid size is 1x1 and the largest is 30x30.

When looking at a task, a test-taker has access to inputs &amp; outputs of the demonstration pairs, plus the input(s) of the test pair(s). The goal is to construct the output grid(s) corresponding to the test input grid(s), using 3 trials for each test input. &quot;Constructing the output grid&quot; involves picking the height and width of the output grid, then filling each cell in the grid with a symbol (integer between 0 and 9, which are visualized as colors). Only *exact* solutions (all cells match the expected answer) can be said to be correct.


## Usage of the testing interface

The testing interface is located at `apps/testing_interface.html`. Open it in a web browser (Chrome recommended). It will prompt you to select a task JSON file.

After loading a task, you will enter the test space, which looks like this:

![test space](https://arc-benchmark.s3.amazonaws.com/figs/arc_test_space.png)

On the left, you will see the input/output pairs demonstrating the nature of the task. In the middle, you will see the current test input grid. On the right, you will see the controls you can use to construct the corresponding output grid.

You have access to the following tools:

### Grid controls

- Resize: input a grid size (e.g. &quot;10x20&quot; or &quot;4x4&quot;) and click &quot;Resize&quot;. This preserves existing grid content (in the top left corner).
- Copy from input: copy the input grid to the output grid. This is useful for tasks where the output consists of some modification of the input.
- Reset grid: fill the grid with 0s.

### Symbol controls

- Edit: select a color (symbol) from the color picking bar, then click on a cell to set its color.
- Select: click and drag on either the output grid or the input grid to select cells.
    - After selecting cells on the output grid, you can select a color from the color picking to set the color of the selected cells. This is useful to draw solid rectangles or lines.
    - After selecting cells on either the input grid or the output grid, you can press C to copy their content. After copying, you can select a cell on the output grid and press &quot;V&quot; to paste the copied content. You should select the cell in the top left corner of the zone you want to paste into.
- Floodfill: click on a cell from the output grid to color all connected cells to the selected color. &quot;Connected cells&quot; are contiguous cells with the same color.

### Answer validation

When your output grid is ready, click the green &quot;Submit!&quot; button to check your answer. We do not enforce the 3-trials rule.

After you&#039;ve obtained the correct answer for the current test input grid, you can switch to the next test input grid for the task using the &quot;Next test input&quot; button (if there is any available; most tasks only have one test input).

When you&#039;re done with a task, use the &quot;load task&quot; button to open a new task.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[usebruno/bruno]]></title>
            <link>https://github.com/usebruno/bruno</link>
            <guid>https://github.com/usebruno/bruno</guid>
            <pubDate>Sat, 09 Aug 2025 00:04:30 GMT</pubDate>
            <description><![CDATA[Opensource IDE For Exploring and Testing API's (lightweight alternative to Postman/Insomnia)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/usebruno/bruno">usebruno/bruno</a></h1>
            <p>Opensource IDE For Exploring and Testing API's (lightweight alternative to Postman/Insomnia)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 36,104</p>
            <p>Forks: 1,782</p>
            <p>Stars today: 21 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[benborla/mcp-server-mysql]]></title>
            <link>https://github.com/benborla/mcp-server-mysql</link>
            <guid>https://github.com/benborla/mcp-server-mysql</guid>
            <pubDate>Sat, 09 Aug 2025 00:04:29 GMT</pubDate>
            <description><![CDATA[A Model Context Protocol server that provides read-only access to MySQL databases. This server enables LLMs to inspect database schemas and execute read-only queries.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/benborla/mcp-server-mysql">benborla/mcp-server-mysql</a></h1>
            <p>A Model Context Protocol server that provides read-only access to MySQL databases. This server enables LLMs to inspect database schemas and execute read-only queries.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 703</p>
            <p>Forks: 97</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>
# MCP Server for MySQL based on NodeJS


A Model Context Protocol server that provides access to MySQL databases. This server enables LLMs to inspect database schemas and execute SQL queries.

## Table of Contents
- [Requirements](#requirements)
- [Installation](#installation)
  - [Smithery](#using-smithery)
  - [Clone to Local Repository](#running-from-local-repository)
  - [Remote mode](#run-in-remote-mode)
- [Components](#components)
- [Configuration](#configuration)
- [Environment Variables](#environment-variables)
- [Multi-DB Mode](#multi-db-mode)
- [Schema-Specific Permissions](#schema-specific-permissions)
- [Testing](#testing)
- [Troubleshooting](#troubleshooting)
- [Contributing](#contributing)
- [License](#license)

## Requirements

- Node.js v20 or higher
- MySQL 5.7 or higher (MySQL 8.0+ recommended)
- MySQL user with appropriate permissions for the operations you need
- For write operations: MySQL user with INSERT, UPDATE, and/or DELETE privileges

## Installation

There are several ways to install and configure the MCP server but the most common would be checking this website https://smithery.ai/server/@benborla29/mcp-server-mysql

### Cursor

For Cursor IDE, you can install this MCP server with the following command in your project:

1. Visit https://smithery.ai/server/@benborla29/mcp-server-mysql
2. Follow the instruction for Cursor


MCP Get provides a centralized registry of MCP servers and simplifies the installation process.

### Claude Code

#### Option 1: Import from Claude Desktop (Recommended if already configured)

If you already have this MCP server configured in Claude Desktop, you can import it automatically:

```bash
claude mcp add-from-claude-desktop
```

This will show an interactive dialog where you can select your `mcp_server_mysql` server to import with all existing configuration.

#### Option 2: Manual Configuration

**Using NPM/PNPM Global Installation:**

First, install the package globally:
```bash
# Using npm
npm install -g @benborla29/mcp-server-mysql

# Using pnpm
pnpm add -g @benborla29/mcp-server-mysql
```

Then add the server to Claude Code:
```bash
claude mcp add mcp_server_mysql \
  -e MYSQL_HOST=&quot;127.0.0.1&quot; \
  -e MYSQL_PORT=&quot;3306&quot; \
  -e MYSQL_USER=&quot;root&quot; \
  -e MYSQL_PASS=&quot;your_password&quot; \
  -e MYSQL_DB=&quot;your_database&quot; \
  -e ALLOW_INSERT_OPERATION=&quot;false&quot; \
  -e ALLOW_UPDATE_OPERATION=&quot;false&quot; \
  -e ALLOW_DELETE_OPERATION=&quot;false&quot; \
  -- npx @benborla29/mcp-server-mysql
```

**Using Local Repository (for development):**

If you&#039;re running from a cloned repository:
```bash
claude mcp add mcp_server_mysql \
  -e MYSQL_HOST=&quot;127.0.0.1&quot; \
  -e MYSQL_PORT=&quot;3306&quot; \
  -e MYSQL_USER=&quot;root&quot; \
  -e MYSQL_PASS=&quot;your_password&quot; \
  -e MYSQL_DB=&quot;your_database&quot; \
  -e ALLOW_INSERT_OPERATION=&quot;false&quot; \
  -e ALLOW_UPDATE_OPERATION=&quot;false&quot; \
  -e ALLOW_DELETE_OPERATION=&quot;false&quot; \
  -e PATH=&quot;/path/to/node/bin:/usr/bin:/bin&quot; \
  -e NODE_PATH=&quot;/path/to/node/lib/node_modules&quot; \
  -- /path/to/node /full/path/to/mcp-server-mysql/dist/index.js
```

Replace:
- `/path/to/node` with your Node.js binary path (find with `which node`)
- `/full/path/to/mcp-server-mysql` with the full path to your cloned repository
- Update MySQL credentials to match your environment

**Using Unix Socket Connection:**

For local MySQL instances using Unix sockets:
```bash
claude mcp add mcp_server_mysql \
  -e MYSQL_SOCKET_PATH=&quot;/tmp/mysql.sock&quot; \
  -e MYSQL_USER=&quot;root&quot; \
  -e MYSQL_PASS=&quot;your_password&quot; \
  -e MYSQL_DB=&quot;your_database&quot; \
  -e ALLOW_INSERT_OPERATION=&quot;false&quot; \
  -e ALLOW_UPDATE_OPERATION=&quot;false&quot; \
  -e ALLOW_DELETE_OPERATION=&quot;false&quot; \
  -- npx @benborla29/mcp-server-mysql
```

#### Choosing the Right Scope

Consider which scope to use based on your needs:

```bash
# Local scope (default) - only available in current project
claude mcp add mcp_server_mysql [options...]

# User scope - available across all your projects
claude mcp add mcp_server_mysql -s user [options...]

# Project scope - shared with team members via .mcp.json
claude mcp add mcp_server_mysql -s project [options...]
```

For database servers with credentials, **local** or **user** scope is recommended to keep credentials private.

#### Verification

After adding the server, verify it&#039;s configured correctly:

```bash
# List all configured servers
claude mcp list

# Get details for your MySQL server
claude mcp get mcp_server_mysql

# Check server status within Claude Code
/mcp
```

#### Multi-Database Configuration

For multi-database mode, omit the `MYSQL_DB` environment variable:

```bash
claude mcp add mcp_server_mysql_multi \
  -e MYSQL_HOST=&quot;127.0.0.1&quot; \
  -e MYSQL_PORT=&quot;3306&quot; \
  -e MYSQL_USER=&quot;root&quot; \
  -e MYSQL_PASS=&quot;your_password&quot; \
  -e MULTI_DB_WRITE_MODE=&quot;false&quot; \
  -- npx @benborla29/mcp-server-mysql
```

#### Advanced Configuration

For advanced features, add additional environment variables:

```bash
claude mcp add mcp_server_mysql \
  -e MYSQL_HOST=&quot;127.0.0.1&quot; \
  -e MYSQL_PORT=&quot;3306&quot; \
  -e MYSQL_USER=&quot;root&quot; \
  -e MYSQL_PASS=&quot;your_password&quot; \
  -e MYSQL_DB=&quot;your_database&quot; \
  -e MYSQL_POOL_SIZE=&quot;10&quot; \
  -e MYSQL_QUERY_TIMEOUT=&quot;30000&quot; \
  -e MYSQL_CACHE_TTL=&quot;60000&quot; \
  -e MYSQL_RATE_LIMIT=&quot;100&quot; \
  -e MYSQL_SSL=&quot;true&quot; \
  -e ALLOW_INSERT_OPERATION=&quot;false&quot; \
  -e ALLOW_UPDATE_OPERATION=&quot;false&quot; \
  -e ALLOW_DELETE_OPERATION=&quot;false&quot; \
  -e MYSQL_ENABLE_LOGGING=&quot;true&quot; \
  -- npx @benborla29/mcp-server-mysql
```

#### Troubleshooting Claude Code Setup

1. **Server Connection Issues**: Use `/mcp` command in Claude Code to check server status and authenticate if needed.

2. **Path Issues**: If using a local repository, ensure Node.js paths are correctly set:
   ```bash
   # Find your Node.js path
   which node

   # For PATH environment variable
   echo &quot;$(which node)/../&quot;

   # For NODE_PATH environment variable
   echo &quot;$(which node)/../../lib/node_modules&quot;
   ```

3. **Permission Errors**: Ensure your MySQL user has appropriate permissions for the operations you&#039;ve enabled.

4. **Server Not Starting**: Check Claude Code logs or run the server directly to debug:
   ```bash
   # Test the server directly
   npx @benborla29/mcp-server-mysql
   ```

### Using NPM/PNPM

For manual installation:

```bash
# Using npm
npm install -g @benborla29/mcp-server-mysql

# Using pnpm
pnpm add -g @benborla29/mcp-server-mysql
```

After manual installation, you&#039;ll need to configure your LLM application to use the MCP server (see Configuration section below).

### Running from Local Repository

If you want to clone and run this MCP server directly from the source code, follow these steps:

1. **Clone the repository**
   ```bash
   git clone https://github.com/benborla/mcp-server-mysql.git
   cd mcp-server-mysql
   ```

2. **Install dependencies**
   ```bash
   npm install
   # or
   pnpm install
   ```

3. **Build the project**
   ```bash
   npm run build
   # or
   pnpm run build
   ```

4. **Configure Claude Desktop**

   Add the following to your Claude Desktop configuration file (`claude_desktop_config.json`):

   ```json
   {
     &quot;mcpServers&quot;: {
       &quot;mcp_server_mysql&quot;: {
         &quot;command&quot;: &quot;/path/to/node&quot;,
         &quot;args&quot;: [
           &quot;/full/path/to/mcp-server-mysql/dist/index.js&quot;
         ],
         &quot;env&quot;: {
           &quot;MYSQL_HOST&quot;: &quot;127.0.0.1&quot;,
           &quot;MYSQL_PORT&quot;: &quot;3306&quot;,
           &quot;MYSQL_USER&quot;: &quot;root&quot;,
           &quot;MYSQL_PASS&quot;: &quot;your_password&quot;,
           &quot;MYSQL_DB&quot;: &quot;your_database&quot;,
           &quot;ALLOW_INSERT_OPERATION&quot;: &quot;false&quot;,
           &quot;ALLOW_UPDATE_OPERATION&quot;: &quot;false&quot;,
           &quot;ALLOW_DELETE_OPERATION&quot;: &quot;false&quot;,
           &quot;PATH&quot;: &quot;/Users/atlasborla/Library/Application Support/Herd/config/nvm/versions/node/v22.9.0/bin:/usr/bin:/bin&quot;, // &lt;--- Important to add the following, run in your terminal `echo &quot;$(which node)/../&quot;` to get the path
           &quot;NODE_PATH&quot;: &quot;/Users/atlasborla/Library/Application Support/Herd/config/nvm/versions/node/v22.9.0/lib/node_modules&quot; // &lt;--- Important to add the following, run in your terminal `echo &quot;$(which node)/../../lib/node_modules&quot;`
         }
       }
     }
   }
   ```

   Replace:
   - `/path/to/node` with the full path to your Node.js binary (find it with `which node`)
   - `/full/path/to/mcp-server-mysql` with the full path to where you cloned the repository
   - Set the MySQL credentials to match your environment

5. **Test the server**
   ```bash
   # Run the server directly to test
   node dist/index.js
   ```

   If it connects to MySQL successfully, you&#039;re ready to use it with Claude Desktop.

### Run in remote mode

To run in remote mode, you&#039;ll need to provide [environment variables](https://github.com/benborla/mcp-server-mysql?tab=readme-ov-file#environment-variables) to the npx script. 
1. Create env file in preferred directory
   ```bash
   # create .env file
   touch .env
   ```
2. Copy-paste [example file](https://github.com/benborla/mcp-server-mysql/blob/main/.env) from this repository
3. Set the MySQL credentials to match your environment
4. Set `IS_REMOTE_MCP=true`
5. Set `REMOTE_SECRET_KEY` to a secure string.
6. Provide custom `PORT` if needed. Default is 3000.
7. Load variables in current session:
   ```bash
   source .env
   ```
8. Run the server
   ```bash
   npx @benborla29/mcp-server-mysql
   ```
9. Configure your agent to connect to the MCP with the next configuration:
```json
{
  &quot;mcpServers&quot;: {
    &quot;mysql&quot;: {
      &quot;url&quot;: &quot;http://your-host:3000/mcp&quot;,
      &quot;type&quot;: &quot;streamableHttp&quot;,
      &quot;headers&quot;: {
        &quot;Authorization&quot;: &quot;Bearer &lt;REMOTE_SECRET_KEY&gt;&quot;
      }
    }
  }
}
```


## Components

### Tools

- **mysql_query**
  - Execute SQL queries against the connected database
  - Input: `sql` (string): The SQL query to execute
  - By default, limited to READ ONLY operations
  - Optional write operations (when enabled via configuration):
    - INSERT: Add new data to tables (requires `ALLOW_INSERT_OPERATION=true`)
    - UPDATE: Modify existing data (requires `ALLOW_UPDATE_OPERATION=true`)
    - DELETE: Remove data (requires `ALLOW_DELETE_OPERATION=true`)
  - All operations are executed within a transaction with proper commit/rollback handling
  - Supports prepared statements for secure parameter handling
  - Configurable query timeouts and result pagination
  - Built-in query execution statistics

### Resources

The server provides comprehensive database information:

- **Table Schemas**
  - JSON schema information for each table
  - Column names and data types
  - Index information and constraints
  - Foreign key relationships
  - Table statistics and metrics
  - Automatically discovered from database metadata

### Security Features

- SQL injection prevention through prepared statements
- Query whitelisting/blacklisting capabilities
- Rate limiting for query execution
- Query complexity analysis
- Configurable connection encryption
- Read-only transaction enforcement

### Performance Optimizations

- Optimized connection pooling
- Query result caching
- Large result set streaming
- Query execution plan analysis
- Configurable query timeouts

### Monitoring and Debugging

- Comprehensive query logging
- Performance metrics collection
- Error tracking and reporting
- Health check endpoints
- Query execution statistics

## Configuration

### Automatic Configuration with Smithery
If you installed using Smithery, your configuration is already set up. You can view or modify it with:

```bash
smithery configure @benborla29/mcp-server-mysql
```

When reconfiguring, you can update any of the MySQL connection details as well as the write operation settings:

- **Basic connection settings**:
  - MySQL Host, Port, User, Password, Database
  - SSL/TLS configuration (if your database requires secure connections)

- **Write operation permissions**:
  - Allow INSERT Operations: Set to true if you want to allow adding new data
  - Allow UPDATE Operations: Set to true if you want to allow updating existing data
  - Allow DELETE Operations: Set to true if you want to allow deleting data

For security reasons, all write operations are disabled by default. Only enable these settings if you specifically need Claude to modify your database data.

### Advanced Configuration Options
For more control over the MCP server&#039;s behavior, you can use these advanced configuration options:

```json
{
  &quot;mcpServers&quot;: {
    &quot;mcp_server_mysql&quot;: {
      &quot;command&quot;: &quot;/path/to/npx/binary/npx&quot;,
      &quot;args&quot;: [
        &quot;-y&quot;,
        &quot;@benborla29/mcp-server-mysql&quot;
      ],
      &quot;env&quot;: {
        // Basic connection settings
        &quot;MYSQL_HOST&quot;: &quot;127.0.0.1&quot;,
        &quot;MYSQL_PORT&quot;: &quot;3306&quot;,
        &quot;MYSQL_USER&quot;: &quot;root&quot;,
        &quot;MYSQL_PASS&quot;: &quot;&quot;,
        &quot;MYSQL_DB&quot;: &quot;db_name&quot;,
        &quot;PATH&quot;: &quot;/path/to/node/bin:/usr/bin:/bin&quot;,

        // Performance settings
        &quot;MYSQL_POOL_SIZE&quot;: &quot;10&quot;,
        &quot;MYSQL_QUERY_TIMEOUT&quot;: &quot;30000&quot;,
        &quot;MYSQL_CACHE_TTL&quot;: &quot;60000&quot;,

        // Security settings
        &quot;MYSQL_RATE_LIMIT&quot;: &quot;100&quot;,
        &quot;MYSQL_MAX_QUERY_COMPLEXITY&quot;: &quot;1000&quot;,
        &quot;MYSQL_SSL&quot;: &quot;true&quot;,

        // Monitoring settings
        &quot;ENABLE_LOGGING&quot;: &quot;true&quot;,
        &quot;MYSQL_LOG_LEVEL&quot;: &quot;info&quot;,
        &quot;MYSQL_METRICS_ENABLED&quot;: &quot;true&quot;,

        // Write operation flags
        &quot;ALLOW_INSERT_OPERATION&quot;: &quot;false&quot;,
        &quot;ALLOW_UPDATE_OPERATION&quot;: &quot;false&quot;,
        &quot;ALLOW_DELETE_OPERATION&quot;: &quot;false&quot;
      }
    }
  }
}
```

## Environment Variables

### Basic Connection
- `MYSQL_SOCKET_PATH`: Unix socket path for local connections (e.g., &quot;/tmp/mysql.sock&quot;)
- `MYSQL_HOST`: MySQL server host (default: &quot;127.0.0.1&quot;) - ignored if MYSQL_SOCKET_PATH is set
- `MYSQL_PORT`: MySQL server port (default: &quot;3306&quot;) - ignored if MYSQL_SOCKET_PATH is set
- `MYSQL_USER`: MySQL username (default: &quot;root&quot;)
- `MYSQL_PASS`: MySQL password
- `MYSQL_DB`: Target database name (leave empty for multi-DB mode)

### Performance Configuration
- `MYSQL_POOL_SIZE`: Connection pool size (default: &quot;10&quot;)
- `MYSQL_QUERY_TIMEOUT`: Query timeout in milliseconds (default: &quot;30000&quot;)
- `MYSQL_CACHE_TTL`: Cache time-to-live in milliseconds (default: &quot;60000&quot;)

### Security Configuration
- `MYSQL_RATE_LIMIT`: Maximum queries per minute (default: &quot;100&quot;)
- `MYSQL_MAX_QUERY_COMPLEXITY`: Maximum query complexity score (default: &quot;1000&quot;)
- `MYSQL_SSL`: Enable SSL/TLS encryption (default: &quot;false&quot;)
- `ALLOW_INSERT_OPERATION`: Enable INSERT operations (default: &quot;false&quot;)
- `ALLOW_UPDATE_OPERATION`: Enable UPDATE operations (default: &quot;false&quot;)
- `ALLOW_DELETE_OPERATION`: Enable DELETE operations (default: &quot;false&quot;)
- `ALLOW_DDL_OPERATION`: Enable DDL operations (default: &quot;false&quot;)
- `SCHEMA_INSERT_PERMISSIONS`: Schema-specific INSERT permissions
- `SCHEMA_UPDATE_PERMISSIONS`: Schema-specific UPDATE permissions
- `SCHEMA_DELETE_PERMISSIONS`: Schema-specific DELETE permissions
- `SCHEMA_DDL_PERMISSIONS`: Schema-specific DDL permissions
- `MULTI_DB_WRITE_MODE`: Enable write operations in multi-DB mode (default: &quot;false&quot;)

### Monitoring Configuration
- `MYSQL_ENABLE_LOGGING`: Enable query logging (default: &quot;false&quot;)
- `MYSQL_LOG_LEVEL`: Logging level (default: &quot;info&quot;)
- `MYSQL_METRICS_ENABLED`: Enable performance metrics (default: &quot;false&quot;)

### Remote MCP Configuration
- `IS_REMOTE_MCP`: Enable remote MCP mode (default: &quot;false&quot;)
- `REMOTE_SECRET_KEY`: Secret key for remote MCP authentication (default: &quot;&quot;). If not provided, remote MCP mode will be disabled.
- `PORT`: Port number for the remote MCP server (default: 3000)

## Multi-DB Mode

MCP-Server-MySQL supports connecting to multiple databases when no specific database is set. This allows the LLM to query any database the MySQL user has access to. For full details, see [README-MULTI-DB.md](./README-MULTI-DB.md).

### Enabling Multi-DB Mode

To enable multi-DB mode, simply leave the `MYSQL_DB` environment variable empty. In multi-DB mode, queries require schema qualification:

```sql
-- Use fully qualified table names
SELECT * FROM database_name.table_name;

-- Or use USE statements to switch between databases
USE database_name;
SELECT * FROM table_name;
```

## Schema-Specific Permissions

For fine-grained control over database operations, MCP-Server-MySQL now supports schema-specific permissions. This allows different databases to have different levels of access (read-only, read-write, etc.).

### Configuration Example

```
SCHEMA_INSERT_PERMISSIONS=development:true,test:true,production:false
SCHEMA_UPDATE_PERMISSIONS=development:true,test:true,production:false
SCHEMA_DELETE_PERMISSIONS=development:false,test:true,production:false
SCHEMA_DDL_PERMISSIONS=development:false,test:true,production:false
```

For complete details and security recommendations, see [README-MULTI-DB.md](./README-MULTI-DB.md).

## Testing

### Database Setup

Before running tests, you need to set up the test database and seed it with test data:

1. **Create Test Database and User**
   ```sql
   -- Connect as root and create test database
   CREATE DATABASE IF NOT EXISTS mcp_test;

   -- Create test user with appropriate permissions
   CREATE USER IF NOT EXISTS &#039;mcp_test&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;mcp_test_password&#039;;
   GRANT ALL PRIVILEGES ON mcp_test.* TO &#039;mcp_test&#039;@&#039;localhost&#039;;
   FLUSH PRIVILEGES;
   ```

2. **Run Database Setup Script**
   ```bash
   # Run the database setup script
   pnpm run setup:test:db
   ```

   This will create the necessary tables and seed data. The script is located in `scripts/setup-test-db.ts`

3. **Configure Test Environment**
   Create a `.env.test` file in the project root (if not existing):
   ```env
   MYSQL_HOST=127.0.0.1
   MYSQL_PORT=3306
   MYSQL_USER=mcp_test
   MYSQL_PASS=mcp_test_password
   MYSQL_DB=mcp_test
   ```

4. **Update package.json Scripts**
   Add these scripts to your package.json:
   ```json
   {
     &quot;scripts&quot;: {
       &quot;setup:test:db&quot;: &quot;ts-node scripts/setup-test-db.ts&quot;,
       &quot;pretest&quot;: &quot;pnpm run setup:test:db&quot;,
       &quot;test&quot;: &quot;vitest run&quot;,
       &quot;test:watch&quot;: &quot;vitest&quot;,
       &quot;test:coverage&quot;: &quot;vitest run --coverage&quot;
     }
   }
   ```

### Running Tests

The project includes a comprehensive test suite to ensure functionality and reliability:

```bash
# First-time setup
pnpm run setup:test:db

# Run all tests
pnpm test
```



## Running evals

The evals package loads an mcp client that then runs the index.ts file, so there is no need to rebuild between tests. You can load environment variables by prefixing the npx command. Full documentation can be found [here](https://www.mcpevals.io/docs).

```bash
OPENAI_API_KEY=your-key  npx mcp-eval evals.ts index.ts
```
## Troubleshooting

### Common Issues

1. **Connection Issues**
   - Verify MySQL server is running and accessible
   - Check credentials and permissions
   - Ensure SSL/TLS configuration is correct if enabled
   - Try connecting with a MySQL client to confirm access

2. **Performance Issues**
   - Adjust connection pool size
   - Configure query timeout values
   - Enable query caching if needed
   - Check query complexity settings
   - Monitor server resource usage

3. **Security Restrictions**
   - Review rate limiting configuration
   - Check query whitelist/blacklist settings
   - Verify SSL/TLS settings
   - Ensure the user has appropriate MySQL permissions

4. **Path Resolution**
If you encounter an error &quot;Could not connect to MCP server mcp-server-mysql&quot;, explicitly set the path of all required binaries:
```json
{
  &quot;env&quot;: {
    &quot;PATH&quot;: &quot;/path/to/node/bin:/usr/bin:/bin&quot;
  }
}
```

*Where can I find my `node` bin path*
Run the following command to get it:

For **PATH**
```bash
echo &quot;$(which node)/../&quot;
```

For **NODE_PATH**
```bash
echo &quot;$(which node)/../../lib/node_modules&quot;
```

5. **Claude Desktop Specific Issues**
   - If you see &quot;Server disconnected&quot; logs in Claude Desktop, check the logs at `~/Library/Logs/Claude/mcp-server-mcp_server_mysql.log`
   - Ensure you&#039;re using the absolute path to both the Node binary and the server script
   - Check if your `.env` file is being properly loaded; use explicit environment variables in the configuration
   - Try running the server directly from the command line to see if t

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[CesiumGS/cesium]]></title>
            <link>https://github.com/CesiumGS/cesium</link>
            <guid>https://github.com/CesiumGS/cesium</guid>
            <pubDate>Sat, 09 Aug 2025 00:04:28 GMT</pubDate>
            <description><![CDATA[An open-source JavaScript library for world-class 3D globes and maps üåé]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/CesiumGS/cesium">CesiumGS/cesium</a></h1>
            <p>An open-source JavaScript library for world-class 3D globes and maps üåé</p>
            <p>Language: JavaScript</p>
            <p>Stars: 14,114</p>
            <p>Forks: 3,641</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre># CesiumJS

[![Build Status](https://github.com/CesiumGS/cesium/actions/workflows/dev.yml/badge.svg)](https://github.com/CesiumGS/cesium/actions/workflows/dev.yml)
[![npm](https://img.shields.io/npm/v/cesium)](https://www.npmjs.com/package/cesium)
[![Docs](https://img.shields.io/badge/docs-online-orange.svg)](https://cesium.com/learn/)

![Cesium](https://github.com/CesiumGS/cesium/wiki/logos/Cesium_Logo_Color.jpg)

CesiumJS is a JavaScript library for creating 3D globes and 2D maps in a web browser without a plugin. It uses WebGL for hardware-accelerated graphics, and is cross-platform, cross-browser, and tuned for dynamic-data visualization.

Built on open formats, CesiumJS is designed for robust interoperability and scaling for massive datasets.

---

[**Examples**](https://sandcastle.cesium.com/) :earth_asia: [**Docs**](https://cesium.com/learn/cesiumjs-learn/) :earth_americas: [**Website**](https://cesium.com/cesiumjs) :earth_africa: [**Forum**](https://community.cesium.com/) :earth_asia: [**User Stories**](https://cesium.com/user-stories/)

---

## :rocket: Get started

Visit the [Downloads page](https://cesium.com/downloads/) to download a pre-built copy of CesiumJS.

### npm &amp; yarn

If you‚Äôre building your application using a module bundler such as Webpack, Parcel, or Rollup, you can install CesiumJS via the [`cesium` npm package](https://www.npmjs.com/package/cesium):

```sh
npm install cesium --save
```

Then, import CesiumJS in your app code. Import individual modules to benefit from tree shaking optimizations through most build tools:

```js
import { Viewer } from &quot;cesium&quot;;
import &quot;cesium/Build/Cesium/Widgets/widgets.css&quot;;

const viewer = new Viewer(&quot;cesiumContainer&quot;);
```

In addition to the `cesium` package, CesiumJS is also [distributed as scoped npm packages for better dependency management](https://cesium.com/blog/2022/12/07/modular-structure-in-cesiumjs/):

- [`@cesium/engine`](./packages/engine/README.md) - CesiumJS&#039;s core, rendering, and data APIs
- [`@cesium/widgets`](./packages/widgets/README.md) - A widgets library for use with CesiumJS

### What next?

See our [Quickstart Guide](https://cesium.com/learn/cesiumjs-learn/cesiumjs-quickstart/) for more information on getting a CesiumJS app up and running.

Instructions for serving local data are in the CesiumJS
[Offline Guide](./Documentation/OfflineGuide/README.md).

Interested in contributing? See [CONTRIBUTING.md](CONTRIBUTING.md). :heart:

## :green_book: License

[Apache 2.0](http://www.apache.org/licenses/LICENSE-2.0.html). CesiumJS is free for both commercial and non-commercial use.

## :earth_americas: Where does the Global 3D Content come from?

The Cesium platform follows an [open-core business model](https://cesium.com/why-cesium/open-ecosystem/cesium-business-model/) with open source runtime engines such as CesiumJS and optional commercial subscription to Cesium ion.

CesiumJS can stream [3D content such as terrain, imagery, and 3D Tiles from the commercial Cesium ion platform](https://cesium.com/platform/cesium-ion/content/) alongside open standards from other offline or online services. We provide Cesium ion as the quickest option for all users to get up and running, but you are free to use any combination of content sources with CesiumJS that you please.

Bring your own data for tiling, hosting, and streaming from Cesium ion. [Using Cesium ion](https://cesium.com/ion/signup/) helps support CesiumJS development.

## :white_check_mark: Features

- Stream in 3D Tiles and other standard formats from Cesium ion or another source
- Visualize and analyze on a high-precision WGS84 globe
- Share with users on desktop or mobile

See more in the [CesiumJS Features Checklist](https://github.com/CesiumGS/cesium/wiki/CesiumJS-Features-Checklist).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[Kaliiiiiiiiii-Vinyzu/patchright]]></title>
            <link>https://github.com/Kaliiiiiiiiii-Vinyzu/patchright</link>
            <guid>https://github.com/Kaliiiiiiiiii-Vinyzu/patchright</guid>
            <pubDate>Sat, 09 Aug 2025 00:04:27 GMT</pubDate>
            <description><![CDATA[Undetected version of the Playwright testing and automation library.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Kaliiiiiiiiii-Vinyzu/patchright">Kaliiiiiiiiii-Vinyzu/patchright</a></h1>
            <p>Undetected version of the Playwright testing and automation library.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 1,258</p>
            <p>Forks: 37</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;
    üé≠ Patchright
&lt;/h1&gt;


&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/Kaliiiiiiiiii-Vinyzu/patchright/blob/main/LICENSE&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/License-Apache%202.0-green&quot;&gt;
    &lt;/a&gt;
    &lt;a&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Based%20on-Playwright-goldenrod&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/Kaliiiiiiiiii-Vinyzu/patchright-python/actions/workflows/patchright_tests.yml&quot;&gt;
        &lt;img src=&quot;https://github.com/Kaliiiiiiiiii-Vinyzu/patchright-python/actions/workflows/patchright_tests.yml/badge.svg&quot;&gt;
    &lt;/a&gt;
    &lt;a&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Driver-Patched-blue&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/Kaliiiiiiiiii-Vinyzu/patchright/releases/latest&quot;&gt;
        &lt;img alt=&quot;Patchright Version&quot; src=&quot;https://img.shields.io/github/v/release/microsoft/playwright?display_name=release&amp;label=Version&quot;&gt;
    &lt;/a&gt;
&lt;br/&gt;
    &lt;a href=&quot;https://github.com/Kaliiiiiiiiii-Vinyzu/patchright-python&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Package-Python-seagreen&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/Kaliiiiiiiiii-Vinyzu/patchright-python/releases&quot;&gt;
        &lt;img alt=&quot;GitHub Downloads (all assets, all releases)&quot; src=&quot;https://img.shields.io/pepy/dt/patchright?color=red&amp;label=Python%20Downloads&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/Kaliiiiiiiiii-Vinyzu/patchright-nodejs&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Package-NodeJS-seagreen&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/Kaliiiiiiiiii-Vinyzu/patchright-nodejs/releases&quot;&gt;
        &lt;img alt=&quot;GitHub Downloads (all assets, all releases)&quot; src=&quot;https://img.shields.io/npm/d18m/patchright?color=red&amp;label=NodeJS%20Downloads&quot;&gt;
    &lt;/a&gt;
&lt;/p&gt;

#### Patchright is a patched and undetected version of the Playwright Testing and Automation Framework. &lt;/br&gt; It can be used as a drop-in replacement for Playwright.

&gt; [!NOTE]  
&gt; This repository serves the Patchright Driver. To use Patchright, check out the [Python Package](https://github.com/Kaliiiiiiiiii-Vinyzu/patchright-python) or the [NodeJS Package](https://github.com/Kaliiiiiiiiii-Vinyzu/patchright-nodejs).

&gt; [!IMPORTANT]  
&gt; Patchright only patches CHROMIUM based browsers. Firefox and Webkit are not supported.

---

## Patches

### [Runtime.enable](https://vanilla.aslushnikov.com/?Runtime.enable) Leak
This is the biggest Patch Patchright uses. To avoid detection by this leak, patchright avoids using [Runtime.enable](https://vanilla.aslushnikov.com/?Runtime.enable) by executing Javascript in (isolated) ExecutionContexts.

### [Console.enable](https://vanilla.aslushnikov.com/?Console.enable) Leak
Patchright patches this leak by disabling the Console API all together. This means, console functionality will not work in Patchright. If you really need the console, you might be better off using Javascript loggers, although they also can be easily detected.

### Command Flags Leaks
Patchright tweaks the Playwright Default Args to avoid detection by Command Flag Leaks. This (most importantly) affects:
- `--disable-blink-features=AutomationControlled` (added) to avoid navigator.webdriver detection.
- `--enable-automation` (removed) to avoid navigator.webdriver detection.
- `--disable-popup-blocking` (removed) to avoid popup crashing.
- `--disable-component-update` (removed) to avoid detection as a Stealth Driver.
- `--disable-default-apps` (removed) to enable default apps.
- `--disable-extensions` (removed) to enable extensions

### General Leaks
Patchright patches some general leaks in the Playwright codebase. This mainly includes poor setups and obvious detection points.

### Closed Shadow Roots
Patchright is able to interact with elements in Closed Shadow Roots. Just use normal locators and Patchright will do the rest.
&lt;br/&gt;
Patchright is now also able to use XPaths in Closed Shadow Roots.

---

## Stealth

With the right setup, Patchright currently is considered undetectable.
Patchright passes:
- [Brotector](https://kaliiiiiiiiii.github.io/brotector/) ‚úÖ (with [CDP-Patches](https://github.com/Kaliiiiiiiiii-Vinyzu/CDP-Patches/))
- [Cloudflare](https://cloudflare.com/) ‚úÖ
- [Kasada](https://www.kasada.io/) ‚úÖ
- [Akamai](https://www.akamai.com/products/bot-manager/) ‚úÖ
- [Shape/F5](https://www.f5.com/) ‚úÖ
- [Bet365](https://bet365.com/) ‚úÖ
- [Datadome](https://datadome.co/products/bot-protection/) ‚úÖ
- [Fingerprint.com](https://fingerprint.com/products/bot-detection/) ‚úÖ
- [CreepJS](https://abrahamjuliot.github.io/creepjs/) ‚úÖ
- [Sannysoft](https://bot.sannysoft.com/) ‚úÖ
- [Incolumitas](https://bot.incolumitas.com/) ‚úÖ
- [IPHey](https://iphey.com/) ‚úÖ
- [Browserscan](https://browserscan.net/) ‚úÖ
- [Pixelscan](https://pixelscan.net/) ‚úÖ

---

## Bugs
#### Even though we have spent a lot of time to make Patchright as stable as possible, bugs may still occur. If you encounter any bugs, please report them in the [Issues](https://github.com/Kaliiiiiiiiii-Vinyzu/patchright/issues).
#### Patchright is now tested against the Playwright Tests after every release. See [here](https://github.com/Kaliiiiiiiiii-Vinyzu/patchright-python/actions/workflows/patchright_tests.yml)

&gt; [!WARNING]  
&gt; Patchright passes most, but not all the Playwright tests. Some bugs are considered impossible to solve, some are just not relevant. See the list of bugs and their explanation [here](https://github.com/Kaliiiiiiiiii-Vinyzu/patchright/issues/30).

#### Based on the Playwright Tests, we concluded that its highly unlikely that you will be affected by these bugs in regular usecases.

&lt;details&gt;
    &lt;summary&gt;&lt;b&gt;Init Script Shenanigans&lt;/b&gt;&lt;/summary&gt;

### Explanation
To be able to use InitScripts without [Runtime.enable](https://vanilla.aslushnikov.com/?Runtime.enable), Patchright uses Playwright Routes to inject JavaScript into HTML requests.

### Bugs
Playwright Routes may cause some bugs in other parts of your code. Patchright InitScripts won&#039;t cause any bugs that wouldn&#039;t be caused by normal Playwright Routes. &lt;/br&gt; If you want any of these bugs fixed, you&#039;ll have to contact the Playwright team.

### Leaks
Patchright InitScripts can be detected by Timing Attacks. However, no antibot currently checks for this kind of Timing Attack and they probably won&#039;t for a good amount of time. &lt;/br&gt; We consider them not to be a big risk of detection.

&lt;/details&gt;

---

### TODO
- [x] Implement Option to choose Execution Context (Main/Isolated).
- [ ] Fix Fixable Bugs.
- [x] Implement .patch Updater to easily show Patchright&#039;s patches.
- [x] Setup Automated Testing on new Release.
- [ ] Implement Patchright on .NET and Java.

---

## Development

Deployment of new Patchright versions are automatic, but bugs due to Playwright codebase changes may occur. Fixes for these bugs might take a few days to be released. 

---

## Support our work

If you choose to support our work, please contact [@vinyzu](https://discord.com/users/935224495126487150) or [@steve_abcdef](https://discord.com/users/936292409426477066) on Discord.

---

## Copyright and License
¬© [Vinyzu](https://github.com/Vinyzu/)

Patchright is licensed [Apache 2.0](https://choosealicense.com/licenses/apache-2.0/)

[Some Parts](https://github.com/Kaliiiiiiiiii-Vinyzu/patchright/blob/main/patchright_driver_patch.js#L435-L448) of the Codebase are inspired by [Driverless](https://github.com/kaliiiiiiiiii/Selenium-Driverless).
Thanks to [Nick Webson](https://github.com/rebrowser/rebrowser-patches) for the idea of .patch-File Documentation.

---

## Disclaimer

This repository is provided for **educational purposes only**. \
No warranties are provided regarding accuracy, completeness, or suitability for any purpose. **Use at your own risk**‚Äîthe authors and maintainers assume **no liability** for **any damages**, **legal issues**, or **warranty breaches** resulting from use, modification, or distribution of this code.\
**Any misuse or legal violations are the sole responsibility of the user**. 

---

## Authors

#### Active Maintainer: [Vinyzu](https://github.com/Vinyzu/) &lt;/br&gt; Co-Maintainer: [Kaliiiiiiiiii](https://github.com/kaliiiiiiiiii/)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[LedgerHQ/ledger-live]]></title>
            <link>https://github.com/LedgerHQ/ledger-live</link>
            <guid>https://github.com/LedgerHQ/ledger-live</guid>
            <pubDate>Sat, 09 Aug 2025 00:04:26 GMT</pubDate>
            <description><![CDATA[Mono-repository for packages related to Ledger Live and its JavaScript ecosystem.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/LedgerHQ/ledger-live">LedgerHQ/ledger-live</a></h1>
            <p>Mono-repository for packages related to Ledger Live and its JavaScript ecosystem.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 508</p>
            <p>Forks: 421</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre>&lt;h3 align=&quot;center&quot;&gt;
  &lt;image src=&quot;https://user-images.githubusercontent.com/3428394/165078916-06fe0b1b-c11d-4c6f-9c1a-ac9291333852.png&quot; alt=&quot;ledger-logo&quot; height=&quot;100&quot; /&gt;
  &amp;nbsp;
  &lt;image src=&quot;https://user-images.githubusercontent.com/3428394/165078595-1b2a55ae-783a-4c8f-8548-c4f050ae5e76.png&quot; alt=&quot;js-logo&quot; height=&quot;100&quot; /&gt;
  &lt;br/&gt;
  &lt;h3 align=&quot;center&quot;&gt;The Ledger Live JavaScript Ecosystem&lt;/h3&gt;
  &lt;h4 align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://jobs.lever.co/ledger/?department=Tech&quot;&gt;
      We are hiring, join us! üë®‚Äçüíªüë©‚Äçüíª
    &lt;/a&gt;
  &lt;/h4&gt;
&lt;/h3&gt;

[![gitpoap badge](https://public-api.gitpoap.io/v1/repo/LedgerHQ/ledger-live/badge)](https://www.gitpoap.io/gh/LedgerHQ/ledger-live)

## About

`ledger-live` is a **monorepository** whose purpose is to centralize all the JavaScript code related to the [**Ledger Live**](https://www.ledger.com/ledger-live) applications in one place.

[**Ledger Live**](https://www.ledger.com/ledger-live) is our platform of apps and services designed specifically for seamless integration with your Ledger device. Acting as a secure gateway to the crypto ecosystem, it allows direct access to a diverse range of crypto, NFT and DeFi services. This integration ensures a safer and more user-friendly experience that address a common security issue known as &#039;blind signing&#039;.

Developers looking to integrate their blockchain in Ledger Live are invited to head to the [**Developer Portal**](https://developers.ledger.com) where they will find the section [**Blockchain Support**](https://developers.ledger.com/docs/coin/general-process).

## Installation

&gt; üí° **This is only a minimal setup. You will need to perform additional installation steps depending on the package you want to work on, please refer to its nested readme file.**

### Cloning

```bash
git clone git@github.com:LedgerHQ/ledger-live.git
cd ledger-live
```

### Proto

**‚ö†Ô∏è Important**: In order to install the right version of the tools you will need to install the [`proto`](https://moonrepo.dev/proto) toolchain manager.
Please follow the instructions on the [**proto**](https://moonrepo.dev/docs/proto/install) website to install it.

Once you have installed `proto`, please run the following command:

```bash
# Will download and install the supported versions of nodejs, npm and pnpm.
# Run it from the root or a subfolder of the repository.
proto use
```

### Dependencies

#### Pre-requisites

1. Install a newer ruby version

We recommend to use [homebrew](https://brew.sh/) to install packages on your MacOs computer.

Make sure to install Ruby in its `3.3.X` version
```sh
brew install ruby@3.3
```
Put the following content to your `~/.zshrc` file
```
if [ -d &quot;/opt/homebrew/opt/ruby@3.3/bin&quot; ]; then
  export PATH=/opt/homebrew/opt/ruby@3.3/bin:$PATH
  export PATH=`gem environment gemdir`/bin:$PATH
fi
```
Reload the configuration
```sh
source ~/.zshrc
```
And check the ruby version
```sh
ruby --version
```
It displays the latest stable version among the one you&#039;ve selected (`3.3.7` at the time writing)
```sh
ruby 3.3.7 (2025-01-15 revision be31f993d7) [arm64-darwin24]
```

2. Install `bundler` and `cocoapods` for `ledger-live-mobile` on iOS
```sh
gem install bundler:2.5.7
gem install cocoapods
```

3. Downgrade the version of the `activesupport` gem

There is known bug on the activesupport version with cocoapods (we did not dig into it), so we need to downgrade it to make it works
```sh
gem uninstall activesupport
```
You will have the following output
```sh
cocoapods-core-1.16.2 depends on activesupport (&gt;= 5.0, &lt; 8)
If you remove this gem, these dependencies will not be met.
Continue with Uninstall? [yN]
```
Type `y`, then
```sh
gem install activesupport -v  7.0.8 # this version was working for the install, an other may work also
``` 
And you are done !

#### Install dependencies
Use the [pnpm](https://pnpm.io/fr/) package manager to install the dependencies in the whole workspace:

```bash
pnpm i
# Alternatively, if you want to bypass the postinstall scripts which can be long to run
# pnpm i --ignore-scripts
```

&gt; Note: multiple postinstall steps will be triggered and fail if the applications prerequisites are not met.
&gt; You can safely ignore the errors if you do not plan to work on those apps.

## Common setup errors

### Out of sync Podfile.lock

You may encounter this error when running `pnpm i`. Try:

```sh
rm -rf ~/.cocoapods/
pnpm clean &amp;&amp; pnpm store prune &amp;&amp; proto use &amp;&amp; pnpm i &amp;&amp; pnpm build:llm:deps
pnpm mobile pod
```

&gt; Note: If prompted to run `bundle install` do this in the [ledger-live-mobile](apps/ledger-live-mobile) directory. Restart terminal if the error persists.

## Usage

**Important: All the commands should be run at the root of the monorepo.**

### Tools

We use [**pnpm workspaces**](https://pnpm.io/) and [**turborepo**](https://turborepo.org/) under the hood to handle local and external dependencies, orchestrate tasks and perform various optimizations like package hoisting or [**remote caching**](https://turbo.build/repo/docs/core-concepts/remote-caching).

For changelog generation releases and package publishing we rely on the [**changesets**](https://github.com/changesets/changesets) library.

### Root scripts

The scripts that are defined inside the root [`/package.json`](https://github.com/LedgerHQ/ledger-live/blob/develop/package.json) file will use _turborepo_ under the hood and automatically perform needed tasks before running the action.

```sh
# This command will first build all the local dependencies needed in the right order.
# Only then it will attempt to build the `Ledger Live Desktop` app.
pnpm build:lld
```

### Aliases

To run nested scripts which are not covered at the root, you should **not** change your working directory.
Every package has an **alias** defined (see application or library tables or check out the [`package.json`](https://github.com/LedgerHQ/ledger-live/blob/develop/package.json) file) that you can use as a prefix when running the script from the root.

```sh
# `pnpm desktop` is one of the shorthands written to avoid changing the working directory.

# The following command will run the nested `test` script.
# `test` is defined inside the `./apps/ledger-live-desktop/package.json` file.
pnpm desktop test
```

**Note that when using these kinds of scripts you will have to make sure that the dependencies are built beforehand.**

### Scoping

You can scope any _pnpm_ or _turborepo_ based script by using the `--filter` flag.

**This is a very powerful feature that you should look into if you are a frequent contributor.**

Please check out the [_pnpm_](https://pnpm.io/filtering) or [_turborepo_](https://turborepo.org/docs/core-concepts/filtering) documentation for more details (the syntax is almost similar albeit _pnpm_ being a bit more powerful).

Here are some examples:

```sh
# Install all the dependencies needed for the packages under ./libs
pnpm i -F &quot;{libs/**}...&quot;
# Run lint only on packages that have been changed compared to origin/develop
pnpm lint --filter=[origin/develop]
# Test every package that has been changed since the last commit excluding the applications
pnpm run test --continue --filter=&quot;!./apps/*&quot; --filter=&quot;...[HEAD~1]&quot;
# Run typechecks for the Ledger Live Mobile project
pnpm typecheck --filter=&quot;live-mobile&quot;
```

## Documentation

Each project folder has a `README.md` file which contains basic documentation.
It includes background information about the project and how to setup, run and build it.

Please check the [**wiki**](https://github.com/LedgerHQ/ledger-live/wiki) for additional documentation.

## Structure

The sub-packages are (roughly) split into three categories.

### `/app` - Applications

The applications are user-facing programs which depend on one or more libraries.

&lt;details&gt;&lt;summary&gt;&lt;b&gt;Ledger Live Applications&lt;/b&gt;&lt;/summary&gt;
&lt;br/&gt;
&lt;p&gt;

| Name                                                                                                     | Alias          | Download                                                                                                                                                         |
| -------------------------------------------------------------------------------------------------------- | -------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| [**Ledger Live Desktop**](https://github.com/LedgerHQ/ledger-live/tree/develop/apps/ledger-live-desktop) | `pnpm desktop` | [Website](https://www.ledger.com/ledger-live/download)                                                                                                           |
| [**Ledger Live Mobile**](https://github.com/LedgerHQ/ledger-live/tree/develop/apps/ledger-live-mobile)   | `pnpm mobile`  | [Android](https://play.google.com/store/apps/details?id=com.ledger.live&amp;hl=fr&amp;gl=US) / [iOS](https://apps.apple.com/fr/app/ledger-live-web3-wallet/id1361671700) |

&lt;/p&gt;
&lt;/details&gt;

### `/libs` - Libraries

Libraries serve as publicly available packages, designed for integration with other libraries or applications.
These packages are deployed to the official npm repository under the `@ledgerhq` organization.

&lt;details&gt;&lt;summary&gt;&lt;b&gt;Ledger Live Libraries&lt;/b&gt;&lt;/summary&gt;
&lt;br/&gt;
&lt;p&gt;

| Name                                                                                                                                                         | Alias                          | Umbrella                                                                       | Package                                                                                                                                                       |
| ------------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------------------ | ------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| [**@ledgerhq/ledger-live-common**](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledger-live-common)                                             | `pnpm common`                  | -----                                                                          |
| ----                                                                                                                                                         | -----                          | -----                                                                          | -------                                                                                                                                                       |
| [**@ledgerhq/cryptoassets**](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs/packages/cryptoassets)                                       | `pnpm ljs:cryoptoassets`       | [ledgerjs](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs) | [![npm](https://img.shields.io/npm/v/@ledgerhq/cryptoassets.svg)](https://www.npmjs.com/package/@ledgerhq/cryptoassets)                                       |
| [**@ledgerhq/devices**](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs/packages/devices)                                                 | `pnpm ljs:devices`             | [ledgerjs](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs) | [![npm](https://img.shields.io/npm/v/@ledgerhq/devices.svg)](https://www.npmjs.com/package/@ledgerhq/devices)                                                 |
| [**@ledgerhq/errors**](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs/packages/errors)                                                   | `pnpm ljs:errors`              | [ledgerjs](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs) | [![npm](https://img.shields.io/npm/v/@ledgerhq/errors.svg)](https://www.npmjs.com/package/@ledgerhq/errors)                                                   |
| [**@ledgerhq/hw-app-algorand**](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs/packages/hw-app-algorand)                                 | `pnpm ljs:hw-app-algorand`     | [ledgerjs](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs) | [![npm](https://img.shields.io/npm/v/@ledgerhq/hw-app-algorand.svg)](https://www.npmjs.com/package/@ledgerhq/hw-app-algorand)                                 |
| [**@ledgerhq/hw-app-btc**](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs/packages/hw-app-btc)                                           | `pnpm ljs:hw-app-btc`          | [ledgerjs](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs) | [![npm](https://img.shields.io/npm/v/@ledgerhq/hw-app-btc.svg)](https://www.npmjs.com/package/@ledgerhq/hw-app-btc)                                           |
| [**@ledgerhq/hw-app-cosmos**](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs/packages/hw-app-cosmos)                                     | `pnpm ljs:hw-app-cosmos`       | [ledgerjs](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs) | [![npm](https://img.shields.io/npm/v/@ledgerhq/hw-app-cosmos.svg)](https://www.npmjs.com/package/@ledgerhq/hw-app-cosmos)                                     |
| [**@ledgerhq/hw-app-eth**](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs/packages/hw-app-eth)                                           | `pnpm ljs:hw-app-eth`          | [ledgerjs](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs) | [![npm](https://img.shields.io/npm/v/@ledgerhq/hw-app-eth.svg)](https://www.npmjs.com/package/@ledgerhq/hw-app-eth)                                           |
| [**@ledgerhq/hw-app-helium**](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs/packages/hw-app-helium)                                     | `pnpm ljs:hw-app-helium`       | [ledgerjs](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs) | [![npm](https://img.shields.io/npm/v/@ledgerhq/hw-app-helium.svg)](https://www.npmjs.com/package/@ledgerhq/hw-app-helium)                                     |
| [**@ledgerhq/hw-app-polkadot**](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs/packages/hw-app-polkadot)                                 | `pnpm ljs:hw-app-polkadot`     | [ledgerjs](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs) | [![npm](https://img.shields.io/npm/v/@ledgerhq/hw-app-polkadot.svg)](https://www.npmjs.com/package/@ledgerhq/hw-app-polkadot)                                 |
| [**@ledgerhq/hw-app-solana**](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs/packages/hw-app-solana)                                     | `pnpm ljs:hw-app-solana`       | [ledgerjs](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs) | [![npm](https://img.shields.io/npm/v/@ledgerhq/hw-app-solana.svg)](https://www.npmjs.com/package/@ledgerhq/hw-app-solana)                                     |
| [**@ledgerhq/hw-app-str**](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs/packages/hw-app-str)                                           | `pnpm ljs:hw-app-str`          | [ledgerjs](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs) | [![npm](https://img.shields.io/npm/v/@ledgerhq/hw-app-str.svg)](https://www.npmjs.com/package/@ledgerhq/hw-app-str)                                           |
| [**@ledgerhq/hw-app-tezos**](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs/packages/hw-app-tezos)                                       | `pnpm ljs:hw-app-tezos`        | [ledgerjs](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs) | [![npm](https://img.shields.io/npm/v/@ledgerhq/hw-app-tezos.svg)](https://www.npmjs.com/package/@ledgerhq/hw-app-tezos)                                       |
| [**@ledgerhq/hw-app-trx**](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs/packages/hw-app-trx)                                           | `pnpm ljs:hw-app-trx`          | [ledgerjs](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs) | [![npm](https://img.shields.io/npm/v/@ledgerhq/hw-app-trx.svg)](https://www.npmjs.com/package/@ledgerhq/hw-app-trx)                                           |
| [**@ledgerhq/hw-app-xrp**](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs/packages/hw-app-xrp)                                           | `pnpm ljs:hw-app-xrp`          | [ledgerjs](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs) | [![npm](https://img.shields.io/npm/v/@ledgerhq/hw-app-xrp.svg)](https://www.npmjs.com/package/@ledgerhq/hw-app-xrp)                                           |
| [**@ledgerhq/hw-transport**](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs/packages/hw-transport)                                       | `pnpm ljs:hw-transport`        | [ledgerjs](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs) | [![npm](https://img.shields.io/npm/v/@ledgerhq/hw-transport.svg)](https://www.npmjs.com/package/@ledgerhq/hw-transport)                                       |
| [**@ledgerhq/hw-transport-http**](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs/packages/hw-transport-http)                             | `pnpm ljs:hw-transport-http`   | [ledgerjs](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs) | [![npm](https://img.shields.io/npm/v/@ledgerhq/hw-transport-http.svg)](https://www.npmjs.com/package/@ledgerhq/hw-transport-http)                             |
| [**@ledgerhq/hw-transport-mocker**](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs/packages/hw-transport-mocker)                         | `pnpm ljs:hw-transport-mocker` | [ledgerjs](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs) | [![npm](https://img.shields.io/npm/v/@ledgerhq/hw-transport-mocker.svg)](https://www.npmjs.com/package/@ledgerhq/hw-transport-mocker)                         |
| [**@ledgerhq/hw-transport-node-hid**](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs/packages/hw-transport-node-hid)                     | `pnpm ljs:hw-transport-node`   | [ledgerjs](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs) | [![npm](https://img.shields.io/npm/v/@ledgerhq/hw-transport-node-hid.svg)](https://www.npmjs.com/package/@ledgerhq/hw-transport-node-hid)                     |
| [**@ledgerhq/hw-transport-node-hid-noevents**](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs/packages/hw-transport-node-hid-noevents)   | `pnpm ljs:hw-transport-node`   | [ledgerjs](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs) | [![npm](https://img.shields.io/npm/v/@ledgerhq/hw-transport-node-hid-noevents.svg)](https://www.npmjs.com/package/@ledgerhq/hw-transport-node-hid-noevents)   |
| [**@ledgerhq/hw-transport-node-hid-singleton**](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs/packages/hw-transport-node-hid-singleton) | `pnpm ljs:hw-transport-node`   | [ledgerjs](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs) | [![npm](https://img.shields.io/npm/v/@ledgerhq/hw-transport-node-hid-singleton.svg)](https://www.npmjs.com/package/@ledgerhq/hw-transport-node-hid-singleton) |
| [**@ledgerhq/hw-transport-node-speculos**](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs/packages/hw-transport-node-speculos)           | `pnpm ljs:hw-transport-node`   | [ledgerjs](https://github.com/LedgerHQ/ledger-live/tree/develop/libs/ledgerjs) | [![npm](https://img.shields.io/npm/v/@ledgerhq/hw-transport-node-speculos.svg)](https://www.npmjs.com/package/@ledgerhq/hw-transport-node-specu

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[automerge/automerge]]></title>
            <link>https://github.com/automerge/automerge</link>
            <guid>https://github.com/automerge/automerge</guid>
            <pubDate>Sat, 09 Aug 2025 00:04:25 GMT</pubDate>
            <description><![CDATA[A JSON-like data structure (a CRDT) that can be modified concurrently by different users, and merged again automatically.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/automerge/automerge">automerge/automerge</a></h1>
            <p>A JSON-like data structure (a CRDT) that can be modified concurrently by different users, and merged again automatically.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,277</p>
            <p>Forks: 211</p>
            <p>Stars today: 29 stars today</p>
            <h2>README</h2><pre># Automerge

&lt;img src=&#039;./img/sign.svg&#039; width=&#039;500&#039; alt=&#039;Automerge logo&#039; /&gt;

[![homepage](https://img.shields.io/badge/homepage-published-informational)](https://automerge.org/)
[![main docs](https://img.shields.io/badge/docs-main-informational)](https://automerge.org/automerge/automerge/)
[![latest docs](https://img.shields.io/badge/docs-latest-informational)](https://docs.rs/automerge/latest/automerge)
[![ci](https://github.com/automerge/automerge/actions/workflows/ci.yaml/badge.svg)](https://github.com/automerge/automerge/actions/workflows/ci.yaml)

Automerge is a library which provides fast implementations of several different
CRDTs, a compact compression format for these CRDTs, and a sync protocol for
efficiently transmitting those changes over the network. The objective of the
project is to support [local-first](https://www.inkandswitch.com/local-first/) applications in the same way that relational
databases support server applications - by providing mechanisms for persistence
which allow application developers to avoid thinking about hard distributed
computing problems. Automerge aims to be PostgreSQL for your local-first app.

If you&#039;re looking for documentation on the JavaScript implementation take a look
at https://automerge.org/docs/hello/. This repository also contains the core
Rust library which is compiled to WebAssembly and exposed in JavaScript. The
docs for this library can be found on
[docs.rs](https://docs.rs/automerge/latest/automerge/). Finally, there is a C
library in `rust/automerge-c`, take a look at the README there for more details.

If you&#039;re familiar with CRDTs and interested in the design of Automerge in
particular take a look at https://automerge.org/automerge-binary-format-spec.

Finally, if you want to talk to us about this project please [join our Discord
server](https://discord.gg/HrpnPAU5zx)!

## Status

This project is formed of a core Rust implementation which is exposed via FFI in
javascript+WASM, C, and soon other languages. Alex
([@alexjg](https://github.com/alexjg/)) and Orion
([@orionz](https://github.com/orionz)) are working full time on maintaining
automerge, other members of Ink and Switch are also contributing time and there
are several other maintainers. We are currently focusing on a new implementation
of the internals (with no API change) which achieves around a 100x reduction in
memory usage.

In general we try and respect semver.

### JavaScript

A stable release of the javascript package is currently available as
`@automerge/automerge@2.0.0` where. pre-release verisions of the `2.0.1` are
available as `2.0.1-alpha.n`.

### Rust

The rust codebase is currently oriented around producing a performant backend
for the Javascript wrapper and as such the API for Rust code is low level and
not well documented. We will be returning to this over the next few months but
for now you will need to be comfortable reading the tests and asking questions
to figure out how to use it. If you are looking to build rust applications which
use automerge you may want to look into
[autosurgeon](https://github.com/automerge/autosurgeon)

## Repository Organisation

- `./rust` - the rust implementation and also the Rust components of
  platform specific wrappers (e.g. `automerge-wasm` for the WASM API or
  `automerge-c` for the C FFI bindings)
- `./javascript` - The javascript library which uses `automerge-wasm`
  internally but presents a more idiomatic javascript interface
- `./scripts` - scripts which are useful to maintenance of the repository.
  This includes the scripts which are run in CI.
- `./img` - static assets for use in `.md` files

## Building

To build this codebase you will need:

- `rust`
- `node`
- `yarn`

And if you are interested in building the automerge-c library

- `cmake`
- `cmocka`
- `doxygen`
- `ninja`

You will also need to install the following with `cargo install`

- `wasm-bindgen-cli`
- `wasm-opt`
- `cargo-deny`

And ensure you have added the `wasm32-unknown-unknown` target for rust cross-compilation.

The various subprojects (the rust code, the wrapper projects) have their own
build instructions, but to run the tests that will be run in CI you can run
`./scripts/ci/run`.

### For macOS

These instructions worked to build locally on macOS 13.1 (arm64) as of
Nov 29th 2022.

```bash
# clone the repo
git clone https://github.com/automerge/automerge
cd automerge

# install rustup
curl --proto &#039;=https&#039; --tlsv1.2 -sSf https://sh.rustup.rs | sh

# install homebrew
/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;

# install cmake, node, cmocka
brew install cmake node cmocka

# install yarn
npm install --global yarn

# install javascript dependencies
yarn --cwd ./javascript

# install rust dependencies
cargo install wasm-bindgen-cli wasm-opt cargo-deny

# get nightly rust to produce optimized automerge-c builds
rustup toolchain install nightly
rustup component add rust-src --toolchain nightly

# add wasm target in addition to current architecture
rustup target add wasm32-unknown-unknown

# Run ci script
./scripts/ci/run
```

If your build fails to find `cmocka.h` you may need to teach it about homebrew&#039;s
installation location:

```
export CPATH=/opt/homebrew/include
export LIBRARY_PATH=/opt/homebrew/lib
./scripts/ci/run
```

## Nix Flake

If you have [Nix](https://nixos.org/) installed, there is a flake available with all
of the dependencies configured and some helper scripts.

``` console
$ nix develop

  ____                                          _
 / ___|___  _ __ ___  _ __ ___   __ _ _ __   __| |___
| |   / _ \| &#039;_ ` _ \| &#039;_ ` _ \ / _` | &#039;_ \ / _` / __|
| |__| (_) | | | | | | | | | | | (_| | | | | (_| \__ \
 \____\___/|_| |_| |_|_| |_| |_|\__,_|_| |_|\__,_|___/


build:deno          | Build Deno-wrapped Wasm library
build:host          | Build for aarch64-darwin
build:node          | Build JS-wrapped Wasm library
build:wasi          | Build for Wasm32-WASI
build:wasm:nodejs   | Build for wasm32-unknown-unknown with Node.js bindgings
build:wasm:web      | Build for wasm32-unknown-unknown with web bindings
docs:build:host     | Refresh the docs
docs:build:wasm     | Refresh the docs with the wasm32-unknown-unknown target
docs:open:host      | Open refreshed docs
docs:open:wasm      | Open refreshed docs
# ‚úÇÔ∏è  SNIP ‚úÇÔ∏è

$ rustc --version
rustc 1.82.0 (f6e511eec 2024-10-15) # latest at time of writing
```

## Contributing

Please try and split your changes up into relatively independent commits which
change one subsystem at a time and add good commit messages which describe what
the change is and why you&#039;re making it (err on the side of longer commit
messages). `git blame` should give future maintainers a good idea of why
something is the way it is.

### Releasing

There are four artefacts in this repository which need releasing:

* The `@automerge/automerge` NPM package
* The `@automerge/automerge-wasm` NPM package
* The automerge deno crate
* The `automerge` rust crate

#### JS Packages

The NPM package is released automatically by CI tooling whenever a new Github release
is created. This means that the process for releasing an ew JS version is:

1. Bump the version in `@automerge/automerge` also in `javascript/package.json`
2. Put in a PR to main with the version bump, wait for tests to run and merge to `main`
3. Once merged to main, create a tag of the form `js/automerge-&lt;version&gt;`
4. Create a new release on Github referring to the tag in question

This does depend on an access token available as `NPM_TOKEN` in the
actions environment, this token is generated with a 30 day expiry date so needs
(manually) refreshing every so often.

#### Rust Package

This is much easier, but less automatic. The steps to release are:

1. Bump the version in `automerge/Cargo.toml`
2. Push a PR and merge once clean
3. Tag the release as `rust/automerge@&lt;version&gt;`
4. Push the tag to the repository
5. Publish the release with `cargo publish`
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>