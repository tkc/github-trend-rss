<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Sun, 02 Nov 2025 00:52:51 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[microsoft/Web-Dev-For-Beginners]]></title>
            <link>https://github.com/microsoft/Web-Dev-For-Beginners</link>
            <guid>https://github.com/microsoft/Web-Dev-For-Beginners</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:51 GMT</pubDate>
            <description><![CDATA[24 Lessons, 12 Weeks, Get Started as a Web Developer]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/microsoft/Web-Dev-For-Beginners">microsoft/Web-Dev-For-Beginners</a></h1>
            <p>24 Lessons, 12 Weeks, Get Started as a Web Developer</p>
            <p>Language: JavaScript</p>
            <p>Stars: 93,733</p>
            <p>Forks: 14,549</p>
            <p>Stars today: 331 stars today</p>
            <h2>README</h2><pre>[![GitHub license](https://img.shields.io/github/license/microsoft/Web-Dev-For-Beginners.svg)](https://github.com/microsoft/Web-Dev-For-Beginners/blob/master/LICENSE)
[![GitHub contributors](https://img.shields.io/github/contributors/microsoft/Web-Dev-For-Beginners.svg)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/graphs/contributors/)
[![GitHub issues](https://img.shields.io/github/issues/microsoft/Web-Dev-For-Beginners.svg)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/issues/)
[![GitHub pull-requests](https://img.shields.io/github/issues-pr/microsoft/Web-Dev-For-Beginners.svg)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/pulls/)
[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)

[![GitHub watchers](https://img.shields.io/github/watchers/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;label=Watch&amp;maxAge=2592000)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/watchers/)
[![GitHub forks](https://img.shields.io/github/forks/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;label=Fork&amp;maxAge=2592000)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/network/)
[![GitHub stars](https://img.shields.io/github/stars/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;label=Star&amp;maxAge=2592000)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/stargazers/)

[![](https://dcbadge.vercel.app/api/server/ByRwuEEgH4)](https://discord.gg/zxKYvhSnVp?WT.mc_id=academic-000002-leestott)

# Web Development for Beginners - A Curriculum

Learn the fundamentals of web development with our 12-week comprehensive course by Microsoft Cloud Advocates. Each of the 24 lessons dives into JavaScript, CSS, and HTML through hands-on projects like terrariums, browser extensions, and space games. Engage with quizzes, discussions, and practical assignments. Enhance your skills and optimize your knowledge retention with our effective project-based pedagogy. Start your coding journey today!

Join the Azure AI Foundry Discord Community

[![Microsoft Azure AI Foundry Discord](https://dcbadge.limes.pink/api/server/ByRwuEEgH4)](https://discord.com/invite/ByRwuEEgH4)

Follow these steps to get started using these resources:
1. **Fork the Repository**: Click [![GitHub forks](https://img.shields.io/github/forks/microsoft/Web-Dev-For-beginners.svg?style=social&amp;label=Fork)](https://GitHub.com/microsoft/Web-Dev-For-Beginners/fork)
2. **Clone the Repository**:   `git clone https://github.com/microsoft/Web-Dev-For-Beginners.git`
3. [**Join The Azure AI Foundry Discord and meet experts and fellow developers**](https://discord.com/invite/ByRwuEEgH4)

### üåê Multi-Language Support

#### Supported via GitHub Action (Automated &amp; Always Up-to-Date)

&lt;!-- CO-OP TRANSLATOR LANGUAGES TABLE START --&gt;
[Arabic](./translations/ar/README.md) | [Bengali](./translations/bn/README.md) | [Bulgarian](./translations/bg/README.md) | [Burmese (Myanmar)](./translations/my/README.md) | [Chinese (Simplified)](./translations/zh/README.md) | [Chinese (Traditional, Hong Kong)](./translations/hk/README.md) | [Chinese (Traditional, Macau)](./translations/mo/README.md) | [Chinese (Traditional, Taiwan)](./translations/tw/README.md) | [Croatian](./translations/hr/README.md) | [Czech](./translations/cs/README.md) | [Danish](./translations/da/README.md) | [Dutch](./translations/nl/README.md) | [Estonian](./translations/et/README.md) | [Finnish](./translations/fi/README.md) | [French](./translations/fr/README.md) | [German](./translations/de/README.md) | [Greek](./translations/el/README.md) | [Hebrew](./translations/he/README.md) | [Hindi](./translations/hi/README.md) | [Hungarian](./translations/hu/README.md) | [Indonesian](./translations/id/README.md) | [Italian](./translations/it/README.md) | [Japanese](./translations/ja/README.md) | [Korean](./translations/ko/README.md) | [Lithuanian](./translations/lt/README.md) | [Malay](./translations/ms/README.md) | [Marathi](./translations/mr/README.md) | [Nepali](./translations/ne/README.md) | [Norwegian](./translations/no/README.md) | [Persian (Farsi)](./translations/fa/README.md) | [Polish](./translations/pl/README.md) | [Portuguese (Brazil)](./translations/br/README.md) | [Portuguese (Portugal)](./translations/pt/README.md) | [Punjabi (Gurmukhi)](./translations/pa/README.md) | [Romanian](./translations/ro/README.md) | [Russian](./translations/ru/README.md) | [Serbian (Cyrillic)](./translations/sr/README.md) | [Slovak](./translations/sk/README.md) | [Slovenian](./translations/sl/README.md) | [Spanish](./translations/es/README.md) | [Swahili](./translations/sw/README.md) | [Swedish](./translations/sv/README.md) | [Tagalog (Filipino)](./translations/tl/README.md) | [Tamil](./translations/ta/README.md) | [Thai](./translations/th/README.md) | [Turkish](./translations/tr/README.md) | [Ukrainian](./translations/uk/README.md) | [Urdu](./translations/ur/README.md) | [Vietnamese](./translations/vi/README.md)
&lt;!-- CO-OP TRANSLATOR LANGUAGES TABLE END --&gt;

**If you wish to have additional translations languages supported are listed [here](https://github.com/Azure/co-op-translator/blob/main/getting_started/supported-languages.md)**

[![Open in Visual Studio Code](https://img.shields.io/static/v1?logo=visualstudiocode&amp;label=&amp;message=Open%20in%20Visual%20Studio%20Code&amp;labelColor=2c2c32&amp;color=007acc&amp;logoColor=007acc)](https://open.vscode.dev/microsoft/Web-Dev-For-Beginners)

#### üßë‚Äçüéì _Are you a student?_

Visit [**Student Hub page**](https://docs.microsoft.com/learn/student-hub/?WT.mc_id=academic-77807-sagibbon) where you will find beginner resources, Student packs and even ways to get a free certificate voucher. This is the page you want to bookmark and check from time to time as we switch out content monthly.

### üì£ Announcement - New GitHub Copilot Agent mode challenges to complete!

New Challenge added, look for &quot;GitHub Copilot Agent Challenge üöÄ&quot; in most chapters. That&#039;s a new challenge for you to complete using GitHub Copilot and Agent mode. If you haven&#039;t used Agent mode before it&#039;s capable of not just generating text but can also create and edit files, run commands and more.

### üì£ Announcement - _New Project to build using Generative AI_ 

New AI Assistant project just added, check it out [project](./09-chat-project/README.md)

### üì£ Announcement - _New Curriculum_ on Generative AI for JavaScript was just released

Don&#039;t miss our new Generative AI curriculum!

Visit [https://aka.ms/genai-js-course](https://aka.ms/genai-js-course) to get started!

![Background](./images/background.png)

- Lessons covering everything from basics to RAG.
- Interact with historical characters using GenAI and our companion app.
- Fun and engaging narrative, you&#039;ll be time traveling!

![character](./images/character.png)


Each lesson includes an assignment to complete, a knowledge check and a challenge to guide you on learning topics like:
- Prompting and prompt engineering
- Text and image app generation
- Search apps

Visit [https://aka.ms/genai-js-course]([https://aka.ms/genai-js-course) to get started!



## üå± Getting Started

&gt; **Teachers**, we have [included some suggestions](for-teachers.md) on how to use this curriculum. We&#039;d love your feedback [in our discussion forum](https://github.com/microsoft/Web-Dev-For-Beginners/discussions/categories/teacher-corner)!

**[Learners](https://aka.ms/student-page/?WT.mc_id=academic-77807-sagibbon)**, for each lesson, start with a pre-lecture quiz and follow through with reading the lecture material, completing the various activities and check your understanding with the post-lecture quiz.

To enhance your learning experience, connect with your peers to work on the projects together! Discussions are encouraged in our [discussion forum](https://github.com/microsoft/Web-Dev-For-Beginners/discussions) where our team of moderators will be available to answer your questions.

To further your education, we highly recommend exploring [Microsoft Learn](https://learn.microsoft.com/users/wirelesslife/collections/p1ddcy5jwy0jkm?WT.mc_id=academic-77807-sagibbon) for additional study materials.

### üìã Setting up your environment

This curriculum has a development environment ready to go! As you get started you can choose to run the curriculum in a [Codespace](https://github.com/features/codespaces/) (_a browser-based, no installs needed environment_), or locally on your computer using a text editor such as [Visual Studio Code](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon).

#### Create your repository
For you to easily save your work, it is recommended that you create your own copy of this repository. You can do this by clicking the **Use this template** button at the top of the page. This will create a new repository in your GitHub account with a copy of the curriculum.

Follow these steps:
1. **Fork the Repository**: Click on the &quot;Fork&quot; button at the top-right corner of this page.
2. **Clone the Repository**:   `git clone https://github.com/microsoft/Web-Dev-For-Beginners.git`

#### Running the curriculum in a Codespace

In your copy of this repository that you created, click the **Code** button and select **Open with Codespaces**. This will create a new Codespace for you to work in.

![Codespace](./images/createcodespace.png)

#### Running the curriculum locally on your computer

To run this curriculum locally on your computer, you will need a text editor, a browser and a command line tool. Our first lesson, [Introduction to Programming Languages and Tools of the Trade](./1-getting-started-lessons/1-intro-to-programming-languages), will walk you through various options for each of these tools for you to select what works best for you.

Our recommendation is to use [Visual Studio Code](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon) as your editor, which also has a built-in [Terminal](https://code.visualstudio.com/docs/terminal/basics/?WT.mc_id=academic-77807-sagibbon). You can download Visual Studio Code [here](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon).


1. Clone your repository to your computer. You can do this by clicking the **Code** button and copying the URL:

    [CodeSpace](./images/createcodespace.png)

    Then, open [Terminal](https://code.visualstudio.com/docs/terminal/basics/?WT.mc_id=academic-77807-sagibbon) within [Visual Studio Code](https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon) and run the following command, replacing `&lt;your-repository-url&gt;` with the URL you just copied:

    ```bash 
    git clone &lt;your-repository-url&gt;
    ```

2. Open the folder in Visual Studio Code. You can do this by clicking **File** &gt; **Open Folder** and selecting the folder you just cloned.


&gt;  Recommended Visual Studio Code extensions:
&gt;
&gt; * [Live Server](https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer&amp;WT.mc_id=academic-77807-sagibbon) - to preview HTML pages within Visual Studio Code
&gt; * [Copilot](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot&amp;WT.mc_id=academic-77807-sagibbon) - to help you write code faster

## üìÇ Each lesson includes:

- optional sketchnote
- optional supplemental video
- pre-lesson warmup quiz
- written lesson
- for project-based lessons, step-by-step guides on how to build the project
- knowledge checks
- a challenge
- supplemental reading
- assignment
- [post-lesson quiz](https://ff-quizzes.netlify.app/web/)

&gt; **A note about quizzes**: All quizzes are contained in the Quiz-app folder, 48 total quizzes of three questions each. They are available [here](https://ff-quizzes.netlify.app/web/) the quiz app can be run locally or deployed to Azure; follow the instruction in the `quiz-app` folder.

## üóÉÔ∏è Lessons

|     |                       Project Name                       |                            Concepts Taught                             | Learning Objectives                                                                                                                 |                                                         Linked Lesson                                                          |         Author          |
| :-: | :------------------------------------------------------: | :--------------------------------------------------------------------: | ----------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------: | :---------------------: |
| 01  |                     Getting Started                      |           Introduction to Programming and Tools of the Trade           | Learn the basic underpinnings behind most programming languages and about software that helps professional developers do their jobs | [Intro to Programming Languages and Tools of the Trade](./1-getting-started-lessons/1-intro-to-programming-languages/README.md) |         Jasmine         |
| 02  |                     Getting Started                      |             Basics of GitHub, includes working with a team             | How to use GitHub in your project, how to collaborate with others on a code base                                                    |                            [Intro to GitHub](./1-getting-started-lessons/2-github-basics/README.md)                             |          Floor          |
| 03  |                     Getting Started                      |                             Accessibility                              | Learn the basics of web accessibility                                                                                               |                       [Accessibility Fundamentals](./1-getting-started-lessons/3-accessibility/README.md)                       |       Christopher       |
| 04  |                        JS Basics                         |                         JavaScript Data Types                          | The basics of JavaScript data types                                                                                                 |                                       [Data Types](./2-js-basics/1-data-types/README.md)                                        |         Jasmine         |
| 05  |                        JS Basics                         |                         Functions and Methods                          | Learn about functions and methods to manage an application&#039;s logic flow                                                             |                              [Functions and Methods](./2-js-basics/2-functions-methods/README.md)                               | Jasmine and Christopher |
| 06  |                        JS Basics                         |                        Making Decisions with JS                        | Learn how to create conditions in your code using decision-making methods                                                           |                                 [Making Decisions](./2-js-basics/3-making-decisions/README.md)                                  |         Jasmine         |
| 07  |                        JS Basics                         |                            Arrays and Loops                            | Work with data using arrays and loops in JavaScript                                                                                 |                                   [Arrays and Loops](./2-js-basics/4-arrays-loops/README.md)                                    |         Jasmine         |
| 08  |       [Terrarium](./3-terrarium/solution/README.md)       |                            HTML in Practice                            | Build the HTML to create an online terrarium, focusing on building a layout                                                         |                                 [Introduction to HTML](./3-terrarium/1-intro-to-html/README.md)                                 |           Jen           |
| 09  |       [Terrarium](./3-terrarium/solution/README.md)       |                            CSS in Practice                             | Build the CSS to style the online terrarium, focusing on the basics of CSS including making the page responsive                     |                                  [Introduction to CSS](./3-terrarium/2-intro-to-css/README.md)                                  |           Jen           |
| 10  |            [Terrarium](./3-terrarium/solution/README.md)            |                 JavaScript Closures, DOM manipulation                  | Build the JavaScript to make the terrarium function as a drag/drop interface, focusing on closures and DOM manipulation             |                  [JavaScript Closures, DOM manipulation](./3-terrarium/3-intro-to-DOM-and-closures/README.md)                   |           Jen           |
| 11  |          [Typing Game](./4-typing-game/solution/README.md)          |                          Build a Typing Game                           | Learn how to use keyboard events to drive the logic of your JavaScript app                                                          |                                [Event-Driven Programming](./4-typing-game/typing-game/README.md)                                |       Christopher       |
| 12  | [Green Browser Extension](./5-browser-extension/solution/README.md) |                         Working with Browsers                          | Learn how browsers work, their history, and how to scaffold the first elements of a browser extension                               |                               [About Browsers](./5-browser-extension/1-about-browsers/README.md)                                |           Jen           |
| 13  | [Green Browser Extension](./5-browser-extension/solution/README.md) | Building a form, calling an API and storing variables in local storage | Build the JavaScript elements of your browser extension to call an API using variables stored in local storage                      |                [APIs, Forms, and Local Storage](./5-browser-extension/2-forms-browsers-local-storage/README.md)                 |           Jen           |
| 14  | [Green Browser Extension](./5-browser-extension/solution/README.md) |          Background processes in the browser, web performance          | Use the browser&#039;s background processes to manage the extension&#039;s icon; learn about web performance and some optimizations to make   |             [Background Tasks and Performance](./5-browser-extension/3-background-tasks-and-performance/README.md)              |           Jen           |
| 15  |           [Space Game](./6-space-game/solution/README.md)           |             More Advanced Game Development with JavaScript             | Learn about Inheritance using both Classes and Composition and the Pub/Sub pattern, in preparation for building a game              |                      [Introduction to Advanced Game Development](./6-space-game/1-introduction/README.md)                       |          Chris          |
| 16  |           [Space Game](./6-space-game/solution/README.md)           |                           Drawing to canvas                            | Learn about the Canvas API, used to draw elements to a screen                                                                       |                                [Drawing to Canvas](./6-space-game/2-drawing-to-canvas/README.md)                                |          Chris          |
| 17  |           [Space Game](./6-space-game/solution/README.md)           |                   Moving elements around the screen                    | Discover how elements can gain motion using the cartesian coordinates and the Canvas API                                            |                           [Moving Elements Around](./6-space-game/3-moving-elements-around/README.md)                           |          Chris          |
| 1

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[ToolJet/ToolJet]]></title>
            <link>https://github.com/ToolJet/ToolJet</link>
            <guid>https://github.com/ToolJet/ToolJet</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:50 GMT</pubDate>
            <description><![CDATA[ToolJet is the open-source foundation of ToolJet AI - the AI-native platform for building internal tools, dashboard, business applications, workflows and AI agents üöÄ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ToolJet/ToolJet">ToolJet/ToolJet</a></h1>
            <p>ToolJet is the open-source foundation of ToolJet AI - the AI-native platform for building internal tools, dashboard, business applications, workflows and AI agents üöÄ</p>
            <p>Language: JavaScript</p>
            <p>Stars: 36,848</p>
            <p>Forks: 4,867</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre>ToolJet is an **open-source low-code framework** to build and deploy internal tools with minimal engineering effort. ToolJet&#039;s drag-and-drop frontend builder allows you to create complex, responsive frontends within minutes. Additionally, you can integrate various data sources, including databases like PostgreSQL, MongoDB, and Elasticsearch; API endpoints with OpenAPI spec and OAuth2 support; SaaS tools such as Stripe, Slack, Google Sheets, Airtable, and Notion; as well as object storage services like S3, GCS, and Minio, to fetch and write data.

 :star: If you find ToolJet useful, please consider giving us a star on GitHub! Your support helps us continue to innovate and deliver exciting features.

![Docker Cloud Build Status](https://img.shields.io/docker/cloud/build/tooljet/tooljet-ce)
![Number of GitHub contributors](https://img.shields.io/github/contributors/tooljet/tooljet)
[![Number of GitHub issues that are open](https://img.shields.io/github/issues/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet/issues)
[![Number of GitHub stars](https://img.shields.io/github/stars/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet/stargazers)
![Number of GitHub closed issues](https://img.shields.io/github/issues-closed/tooljet/tooljet)
![Number of GitHub pull requests that are open](https://img.shields.io/github/issues-pr-raw/tooljet/tooljet)
![GitHub release; latest by date](https://img.shields.io/github/v/release/tooljet/tooljet)
![GitHub commit activity](https://img.shields.io/github/commit-activity/m/tooljet/tooljet)
[![GitHub license which is AGPL license](https://img.shields.io/github/license/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet)
[![Follow us on X, formerly Twitter](https://img.shields.io/twitter/follow/ToolJet?style=social)](https://twitter.com/ToolJet)

&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://user-images.githubusercontent.com/7828962/211444352-4d6d2e4a-13c9-4980-9e16-4aed4af9811b.png&quot; alt=&quot;Tooljet dashboard showing inventory and orders&quot;/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://github.com/ToolJet/ToolJet/assets/25361949/0e711f3a-edb7-496b-8833-107de3826933&quot;/&gt;
&lt;/p&gt;

## All features

- **Visual App Builder:** 45+ built-in responsive components, including Tables, Charts, Lists, Forms, and Progress Bars.
- **ToolJet Database:** Built-in no-code database.
- **Multi-Page:** Build an application with multiple pages.
- **Multiplayer editing:** Allows simultaneous app building by multiple developers.
- **50+ data sources:** Integrate with external databases, cloud storage, and APIs.
- **Desktop &amp; mobile:** Customize layout widths to fit various screen sizes.
- **Self-host:** Supports Docker, Kubernetes, AWS EC2, Google Cloud Run, and more.
- **Collaborate:** Add comments anywhere on the canvas and tag your team members.
- **Extend with plugins:** Use our [command-line tool](https://www.npmjs.com/package/@tooljet/cli) to easily bootstrap new connectors.
- **Version control:** Manage multiple application versions with a structured release cycle.
- **Run JS &amp; Python code:** Execute custom JavaScript and Python snippets.
- **Granular access control:** Set permissions at both group and app levels.
- **Low-code:** Use JS code almost anywhere within the builder, such as setting text color based on status with 
`status === &#039;success&#039; ? &#039;green&#039; : &#039;red&#039;`.
- **No-code query editors:** Query Editors are available for all supported data sources.
- **Join and transform data:** Transform query results using JavaScript or Python code.
- **Secure:** All the credentials are securely encrypted using `aes-256-gcm`.
- **Data Privacy:** ToolJet serves solely as a proxy and does not store data.
- **SSO:** Supports multiple Single Sign-On providers.

&lt;hr&gt;

## Quickstart
The easiest way to get started with ToolJet is by creating a [ToolJet Cloud](https://tooljet.ai) account. ToolJet Cloud offers a hosted solution of ToolJet. If you want to self-host ToolJet, kindly proceed to [deployment documentation](https://docs.tooljet.ai/docs/setup/).

### Try using Docker
Want to give ToolJet a quick spin on your local machine? You can run the following command from your terminal to have ToolJet up and running right away.


```bash
docker run \
  --name tooljet \
  --restart unless-stopped \
  -p 80:80 \
  --platform linux/amd64 \
  -v tooljet_data:/var/lib/postgresql/13/main \
  tooljet/try:ee-lts-latest
```

*For users upgrading their ToolJet version, we recommend choosing the LTS version over the latest version. The LTS version ensures stability with production bug fixes, security patches, and performance enhancements.*

## Tutorials and examples

[Time Tracker Application](https://docs.tooljet.ai/docs/#quickstart-guide)&lt;br&gt;
[Build your own CMS using low-code](https://blog.tooljet.ai/build-cms-using-lowcode-and-mongodb/)&lt;br&gt;
[AWS S3 Browser](https://blog.tooljet.ai/build-an-aws-s3-broswer-with-tooljet/)&lt;br&gt;

## Documentation
Documentation is available at https://docs.tooljet.ai.

- [Getting Started](https://docs.tooljet.ai)&lt;br&gt;
- [Data source Reference](https://docs.tooljet.ai/docs/data-sources/airtable/)&lt;br&gt;
- [Component Reference](https://docs.tooljet.ai/docs/widgets/button)

## Self-hosted
You can use ToolJet Cloud for a fully managed solution. If you want to self-host ToolJet, we have guides on deploying ToolJet on Kubernetes, AWS EC2, Docker, and more.

| Provider  | Documentation |
| :------------- | :------------- |
| Digital Ocean | [Link](https://docs.tooljet.ai/docs/setup/digitalocean)  |
| Docker  | [Link](https://docs.tooljet.ai/docs/setup/docker)   |
| AWS EC2 | [Link](https://docs.tooljet.ai/docs/setup/ec2)  |
| AWS ECS | [Link](https://docs.tooljet.ai/docs/setup/ecs)   |
| OpenShift | [Link](https://docs.tooljet.ai/docs/setup/openshift)   |
| Helm | [Link](https://docs.tooljet.ai/docs/setup/helm)   |
| AWS EKS (Kubernetes) | [Link](https://docs.tooljet.ai/docs/setup/kubernetes)   |
| GCP GKE (Kubernetes) | [Link](https://docs.tooljet.ai/docs/setup/kubernetes-gke)   |
| Azure AKS (Kubernetes) | [Link](https://docs.tooljet.ai/docs/setup/kubernetes-aks)   |
| Azure Container | [Link](https://docs.tooljet.ai/docs/setup/azure-container)   |
| Google Cloud Run  | [Link](https://docs.tooljet.ai/docs/setup/google-cloud-run)   |
| Deploying ToolJet client  | [Link](https://docs.tooljet.ai/docs/setup/client)   |
| Deploying ToolJet on a Subpath  | [Link](https://docs.tooljet.ai/docs/setup/tooljet-subpath/)   |

## Marketplace 
ToolJet can now be found on both AWS and Azure Marketplaces, making it simpler than ever to access and deploy our app-building platform.

Find ToolJet on AWS Marketplace [here](https://aws.amazon.com/marketplace/pp/prodview-fxjto27jkpqfg?sr=0-1&amp;ref_=beagle&amp;applicationId=AWSMPContessa) and explore seamless integration on Azure Marketplace [here](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/tooljetsolutioninc1679496832216.tooljet?tab=Overview).

## Community support
For general help using ToolJet, please refer to the official [documentation](https://docs.tooljet.ai/docs/). For additional help, you can use one of these channels to ask a question:

- [Slack](https://tooljet.ai/slack) - Discussions with the community and the team.
- [GitHub](https://github.com/ToolJet/ToolJet/issues) - For bug reports and feature requests.
- [ùïè (Twitter)](https://twitter.com/ToolJet) - Get the product updates quickly.

## Roadmap
Check out our [roadmap](https://github.com/orgs/ToolJet/projects/15) to stay updated on recently released features and learn about what&#039;s coming next.

## Branching model
We use the git-flow branching model. The base branch is `develop`. If you are looking for a stable version, please use the main branch or tags labeled as v1.x.x.

## Contributing
Kindly read our [Contributing Guide](CONTRIBUTING.md) to familiarize yourself with ToolJet&#039;s development process, how to suggest bug fixes and improvements, and the steps for building and testing your changes. &lt;br&gt;

## Contributors
&lt;a href=&quot;https://github.com/tooljet/tooljet/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=tooljet/tooljet&amp;max=400&amp;columns=20&quot; /&gt;
  &lt;img src=&quot;https://us-central1-tooljet-hub.cloudfunctions.net/github&quot; width=&quot;0&quot; height=&quot;0&quot; /&gt;
&lt;/a&gt;

## License
ToolJet ¬© 2023, ToolJet Solutions Inc - Released under the GNU Affero General Public License v3.0.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[github/awesome-copilot]]></title>
            <link>https://github.com/github/awesome-copilot</link>
            <guid>https://github.com/github/awesome-copilot</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:49 GMT</pubDate>
            <description><![CDATA[Community-contributed instructions, prompts, and configurations to help you make the most of GitHub Copilot.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/github/awesome-copilot">github/awesome-copilot</a></h1>
            <p>Community-contributed instructions, prompts, and configurations to help you make the most of GitHub Copilot.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 11,009</p>
            <p>Forks: 1,268</p>
            <p>Stars today: 60 stars today</p>
            <h2>README</h2><pre># ü§ñ Awesome GitHub Copilot Customizations

[![Powered by Awesome Copilot](https://img.shields.io/badge/Powered_by-Awesome_Copilot-blue?logo=githubcopilot)](https://aka.ms/awesome-github-copilot)
&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt;
[![All Contributors](https://img.shields.io/badge/all_contributors-90-orange.svg?style=flat-square)](#contributors-)
&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt;

A curated collection of prompts, instructions, and chat modes to supercharge your GitHub Copilot experience across different domains, languages, and use cases.

## üöÄ What is Awesome GitHub Copilot?

This repository provides a comprehensive toolkit for enhancing GitHub Copilot with specialized:

- **üëâ [Awesome Agents](docs/README.agents.md)** - Specialized GitHub Copilot agents that integrate with MCP servers to provide enhanced capabilities for specific workflows and tools
- **üëâ [Awesome Prompts](docs/README.prompts.md)** - Focused, task-specific prompts for generating code, documentation, and solving specific problems
- **üëâ [Awesome Instructions](docs/README.instructions.md)** - Comprehensive coding standards and best practices that apply to specific file patterns or entire projects
- **üëâ [Awesome Chat Modes](docs/README.chatmodes.md)** - Specialized AI personas and conversation modes for different roles and contexts
- **üëâ [Awesome Collections](docs/README.collections.md)** - Curated collections of related prompts, instructions, and chat modes organized around specific themes and workflows

## üåü Featured Collections

Discover our curated collections of prompts, instructions, and chat modes organized around specific themes and workflows.

| Name | Description | Items | Tags |
| ---- | ----------- | ----- | ---- |
| [Awesome Copilot](collections/awesome-copilot.md) | Meta prompts that help you discover and generate curated GitHub Copilot chat modes, collections, instructions, prompts, and agents. | 6 items | github-copilot, discovery, meta, prompt-engineering, agents |
| [Partners](collections/partners.md) | Custom agents that have been created by GitHub partners | 11 items | devops, security, database, cloud, infrastructure, observability, feature-flags, cicd, migration, performance |


## MCP Server

To make it easy to add these customizations to your editor, we have created a [MCP Server](https://developer.microsoft.com/blog/announcing-awesome-copilot-mcp-server) that provides a prompt for searching and installing prompts, instructions, and chat modes directly from this repository. You&#039;ll need to have Docker installed and running to run the server.

[![Install in VS Code](https://img.shields.io/badge/VS_Code-Install-0098FF?logo=visualstudiocode&amp;logoColor=white)](https://aka.ms/awesome-copilot/mcp/vscode) [![Install in VS Code Insiders](https://img.shields.io/badge/VS_Code_Insiders-Install-24bfa5?logo=visualstudiocode&amp;logoColor=white)](https://aka.ms/awesome-copilot/mcp/vscode-insiders) [![Install in Visual Studio](https://img.shields.io/badge/Visual_Studio-Install-C16FDE?logo=visualstudio&amp;logoColor=white)](https://aka.ms/awesome-copilot/mcp/vs)

&lt;details&gt;
&lt;summary&gt;Show MCP Server JSON configuration&lt;/summary&gt;

```json
{
  &quot;servers&quot;: {
    &quot;awesome-copilot&quot;: {
      &quot;type&quot;: &quot;stdio&quot;,
      &quot;command&quot;: &quot;docker&quot;,
      &quot;args&quot;: [
        &quot;run&quot;,
        &quot;-i&quot;,
        &quot;--rm&quot;,
        &quot;ghcr.io/microsoft/mcp-dotnet-samples/awesome-copilot:latest&quot;
      ]
    }
  }
}
```

&lt;/details&gt;

## üîß How to Use

### ü§ñ Custom Agents

Custom agents can be used in Copilot coding agent (CCA), VS Code, and Copilot CLI (coming soon). For CCA, when assigning an issue to Copilot, select the custom agent from the provided list. In VS Code, you can activate the custom agent in the agents session, alongside built-in agents like Plan and Agent.

### üéØ Prompts

Use the `/` command in GitHub Copilot Chat to access prompts:

```plaintext
/awesome-copilot create-readme
```

### üìã Instructions

Instructions automatically apply to files based on their patterns and provide contextual guidance for coding standards, frameworks, and best practices.

### üí≠ Chat Modes

Activate chat modes to get specialized assistance from AI personas tailored for specific roles like architects, DBAs, or security experts.

## ü§ù Contributing

We welcome contributions! Please see our [Contributing Guidelines](CONTRIBUTING.md) for details on how to:

- Add new prompts, instructions, or chat modes
- Improve existing content
- Report issues or suggest enhancements

### Quick Contribution Guide

1. Follow our file naming conventions and frontmatter requirements
2. Test your contributions thoroughly
3. Update the appropriate README tables
4. Submit a pull request with a clear description

## üìñ Repository Structure

```plaintext
‚îú‚îÄ‚îÄ prompts/          # Task-specific prompts (.prompt.md)
‚îú‚îÄ‚îÄ instructions/     # Coding standards and best practices (.instructions.md)
‚îú‚îÄ‚îÄ chatmodes/        # AI personas and specialized modes (.chatmode.md)
‚îú‚îÄ‚îÄ collections/      # Curated collections of related items (.collection.yml)
‚îî‚îÄ‚îÄ scripts/          # Utility scripts for maintenance
```

## üåü Getting Started

1. **Browse the Collections**: Check out our comprehensive lists of [prompts](docs/README.prompts.md), [instructions](docs/README.instructions.md), [chat modes](docs/README.chatmodes.md), and [collections](docs/README.collections.md).
2. **Add to your editor**: Click the &quot;Install&quot; button to install to VS Code, or copy the file contents for other editors.
3. **Start Using**: Copy prompts to use with `/` commands, let instructions enhance your coding experience, or activate chat modes for specialized assistance.

## üìÑ License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## üõ°Ô∏è Security &amp; Support

- **Security Issues**: Please see our [Security Policy](SECURITY.md)
- **Support**: Check our [Support Guide](SUPPORT.md) for getting help
- **Code of Conduct**: We follow the [Contributor Covenant](CODE_OF_CONDUCT.md)

## üéØ Why Use Awesome GitHub Copilot?

- **Productivity**: Pre-built prompts and instructions save time and provide consistent results
- **Best Practices**: Benefit from community-curated coding standards and patterns
- **Specialized Assistance**: Access expert-level guidance through specialized chat modes
- **Continuous Learning**: Stay updated with the latest patterns and practices across technologies

---

**Ready to supercharge your coding experience?** Start exploring our [prompts](docs/README.prompts.md), [instructions](docs/README.instructions.md), and [chat modes](docs/README.chatmodes.md)!

## Contributors ‚ú®

Thanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):

&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt;
&lt;!-- prettier-ignore-start --&gt;
&lt;!-- markdownlint-disable --&gt;
&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.aaron-powell.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/434140?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Aaron Powell&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Aaron Powell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=aaronpowell&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;#maintenance-aaronpowell&quot; title=&quot;Maintenance&quot;&gt;üöß&lt;/a&gt; &lt;a href=&quot;#projectManagement-aaronpowell&quot; title=&quot;Project Management&quot;&gt;üìÜ&lt;/a&gt; &lt;a href=&quot;#promotion-aaronpowell&quot; title=&quot;Promotion&quot;&gt;üì£&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://mubaidr.js.org/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2222702?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Muhammad Ubaid Raza&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Muhammad Ubaid Raza&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=mubaidr&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://digitarald.de/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8599?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Harald Kirschner&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Harald Kirschner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=digitarald&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/mbianchidev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/37507190?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Matteo Bianchi&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Matteo Bianchi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=mbianchidev&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/AungMyoKyaw&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9404824?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Aung Myo Kyaw&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Aung Myo Kyaw&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=AungMyoKyaw&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://danielscottraynsford.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7589164?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Daniel Scott-Raynsford&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Daniel Scott-Raynsford&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=PlagueHO&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/burkeholland&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/686963?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Burke Holland&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Burke Holland&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=burkeholland&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://calva.io/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/30010?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Peter Str√∂mberg&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Peter Str√∂mberg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=PEZ&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.devprodlogs.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/51440732?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Daniel Meppiel&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Daniel Meppiel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=danielmeppiel&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://montemagno.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1676321?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;James Montemagno&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;James Montemagno&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=jamesmontemagno&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/VamshiVerma&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/21999324?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Vamshi Verma&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Vamshi Verma&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=VamshiVerma&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/sinedied&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/593151?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Yohan Lasorsa&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Yohan Lasorsa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=sinedied&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/OrenMe&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5461862?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Oren Me&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Oren Me&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=OrenMe&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/mjrousos&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10077254?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Mike Rousos&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mike Rousos&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=mjrousos&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/guiopen&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/94094527?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Guilherme do Amaral Alves &quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Guilherme do Amaral Alves &lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=guiopen&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.buymeacoffee.com/troystaylor&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/44444967?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Troy Simeon Taylor&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Troy Simeon Taylor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=troystaylor&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/ambilykk/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10282550?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Ambily&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ambily&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=ambilykk&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://tgrall.github.io/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/541250?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Tugdual Grall&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tugdual Grall&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=tgrall&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/TianqiZhang&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5326582?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Tianqi Zhang&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tianqi Zhang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=TianqiZhang&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/shubham070&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5480589?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Shubham Gaikwad&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Shubham Gaikwad&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=shubham070&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/sdolgin&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/576449?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Saul Dolgin&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Saul Dolgin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=sdolgin&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/nullchimp&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/58362593?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;NULLchimp&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;NULLchimp&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=nullchimp&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/MattVevang&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/20714898?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Matt Vevang&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Matt Vevang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=MattVevang&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://devkimchi.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1538528?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Justin Yoo&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Justin Yoo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=justinyoo&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://hachyderm.io/@0gis0&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/175379?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Gisela Torres&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Gisela Torres&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=0GiS0&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://debbie.codes/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13063165?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Debbie O&#039;Brien&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Debbie O&#039;Brien&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=debs-obrien&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/agreaves-ms&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/111466195?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Allen Greaves&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Allen Greaves&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=agreaves-ms&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/AmeliaRose802&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/26167931?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Amelia Payne&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Amelia Payne&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=AmeliaRose802&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/SebastienDegodez&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2349146?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Sebastien DEGODEZ&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Sebastien DEGODEZ&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=SebastienDegodez&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://graef.io/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/19261257?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Sebastian Gr√§f&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Sebastian Gr√§f&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=segraef&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://9ssi7.dev/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/76786120?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Salih ƒ∞brahimba≈ü&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Salih ƒ∞brahimba≈ü&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=9ssi7&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/inquinity&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/406234?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Robert Altman&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Robert Altman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=inquinity&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/pertrai1&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/442374?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Rob Simpson&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rob Simpson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=pertrai1&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://ricksm.it/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7207783?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Rick Smit&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rick Smit&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=ricksmit3000&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://dotneteers.net/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/28162552?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Peter Smulovics&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Peter Smulovics&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=psmulovics&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/pelikhan&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4175913?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Peli de Halleux&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Peli de Halleux&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=pelikhan&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.paulomorgado.net/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/470455?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Paulo Morgado&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Paulo Morgado&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/github/awesome-copilot/commits?author=paulo

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[Neet-Nestor/Telegram-Media-Downloader]]></title>
            <link>https://github.com/Neet-Nestor/Telegram-Media-Downloader</link>
            <guid>https://github.com/Neet-Nestor/Telegram-Media-Downloader</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:48 GMT</pubDate>
            <description><![CDATA[A script allowing you to download images and videos from Telegram web even if the group restricts downloading.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Neet-Nestor/Telegram-Media-Downloader">Neet-Nestor/Telegram-Media-Downloader</a></h1>
            <p>A script allowing you to download images and videos from Telegram web even if the group restricts downloading.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 3,030</p>
            <p>Forks: 274</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

# Telegram Video Downloader / Telegram Media Downloader

**Unlock Telegram: Download Anything You Like.**

[![GitHub License](https://img.shields.io/github/license/Neet-Nestor/Telegram-Media-Downloader)](./LICENSE)
[![Greasy Fork Version](https://img.shields.io/greasyfork/v/446342-telegram-media-downloader)](https://greasyfork.org/scripts/446342-telegram-media-downloader)
[![Greasy Fork Downloads](https://img.shields.io/greasyfork/dt/446342-telegram-media-downloader)](https://greasyfork.org/scripts/446342-telegram-media-downloader)

&lt;/div&gt;

## Overview
This user script unlocks and enables download of images, GIFs, audios, and videos in Telegram webapps from chats, stories, and even private channels where downloading is disabled or restricted.

(Note: some features are only available for specific Telegram webapp version. e.g. Audio message download is only available for the K webapp version.)

### What are user scripts?
User scripts put you in control of your  browsing experience. Once installed, they automatically make the sites you visit better by adding features, making them easier to use, or taking out the annoying bits. The user scripts on Greasy Fork were written by other users and posted to share with the world. They&#039;re free to install and easy to use.

## Installation
### Greasy Fork
1. install a user script manager

    To use user scripts you need to first install a user script manager. Which user script manager you can use depends on which browser you use.

    - Chrome: [Tampermonkey](https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo) or [Violentmonkey](https://chrome.google.com/webstore/detail/violent-monkey/jinjaccalgkegednnccohejagnlnfdag)
    - Firefox: [Greasemonkey](https://addons.mozilla.org/firefox/addon/greasemonkey/), [Tampermonkey](https://addons.mozilla.org/firefox/addon/tampermonkey/), or [Violentmonkey](https://addons.mozilla.org/firefox/addon/violentmonkey/)
    - Safari: [Tampermonkey](https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo) or [Userscripts](https://apps.apple.com/app/userscripts/id1463298887)
    - Microsoft Edge: [Tampermonkey](https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo) or [Violentmonkey](https://chrome.google.com/webstore/detail/violent-monkey/jinjaccalgkegednnccohejagnlnfdag)
    - Opera: [Tampermonkey](https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo) or [Violentmonkey](https://chrome.google.com/webstore/detail/violent-monkey/jinjaccalgkegednnccohejagnlnfdag)
    - Maxthon: [Violentmonkey](https://chrome.google.com/webstore/detail/violent-monkey/jinjaccalgkegednnccohejagnlnfdag)

    (Note, If you are using Tampermonkey extension in a Chrome-based browser, following [instructions](https://www.tampermonkey.net/faq.php#Q209) to enable Developer Mode.)

2. Install this script by visiting Greasy Fork:
    https://greasyfork.org/scripts/446342-telegram-media-downloader

### Manual Installation
1. install a user script manager

    To use user scripts you need to first install a user script manager. Which user script manager you can use depends on which browser you use.

    - Chrome: [Tampermonkey](https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo) or [Violentmonkey](https://chrome.google.com/webstore/detail/violent-monkey/jinjaccalgkegednnccohejagnlnfdag)
    - Firefox: [Greasemonkey](https://addons.mozilla.org/firefox/addon/greasemonkey/), [Tampermonkey](https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo), or [Violentmonkey](https://chrome.google.com/webstore/detail/violent-monkey/jinjaccalgkegednnccohejagnlnfdag)
    - Safari: [Tampermonkey](https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo) or [Userscripts](https://apps.apple.com/app/userscripts/id1463298887)
    - Microsoft Edge: [Tampermonkey](https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo) or [Violentmonkey](https://chrome.google.com/webstore/detail/violent-monkey/jinjaccalgkegednnccohejagnlnfdag)
    - Opera: [Tampermonkey](https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo) or [Violentmonkey](https://chrome.google.com/webstore/detail/violent-monkey/jinjaccalgkegednnccohejagnlnfdag)
    - Maxthon: [Violentmonkey](https://chrome.google.com/webstore/detail/violent-monkey/jinjaccalgkegednnccohejagnlnfdag)

    (Note, If you are using Tampermonkey extension in a Chrome-based browser, following [instructions](https://www.tampermonkey.net/faq.php#Q209) to enable Developer Mode.)
    
2. Open Tampermonkey Dashboard, drag &amp; drop src/tel_download.js into it and clicks the &quot;install&quot; button

## How to Use
This script only works on Telegram Webapp.

For channels and chats that allow saving content, this script will have no effect. Please just use the official download button provided by the telegram webapp instead.

For channels and chats that disable downloading and restrict saving content, this script will add the download button back for images, GIFs and videos.

![Image Download](https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExY2VjNmU2ZDM0YTFlOWY4YTMzZDZmNjVlMDE2ODQ4OGY4N2E3MDFkNSZlcD12MV9pbnRlcm5hbF9naWZzX2dpZklkJmN0PWc/lqCVcw0pCd2VA3zqoE/giphy.gif)
![GIF Download](https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExMzYwMzM3ZTMzYmI1MzA4M2EyYmY0NTFlOTg4OWFhNjhjNDk5YTkzYiZlcD12MV9pbnRlcm5hbF9naWZzX2dpZklkJmN0PWc/wnYzW4vwpPdeuo62nQ/giphy.gif)
![Video Download](https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExMXcxYnJxaXMxcW05YW5rZ2YzZzE0bTU4aTBwYXI1N3pmdnVzbDFrdSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/EEPbblwmSpteAmwLls/giphy.gif)
![Story Download](https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExZ3Z5Y2VzM2QzbW1xc3ZwNTQ2N3Q0a3lnanpxdW55c2Qzajl5NXZsaCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/xJFjBGi8isHPR5cuHl/giphy.gif)

For videos, a progress bar will show on the bottom-right corder after you started downloading. For images and audios, there won&#039;t be a progress bar.

### Supported Webapp Versions
There are 2 different versions of telegram webapps:
- https://webk.telegram.org / https://web.telegram.org/k/ (**Recommended**)
- https://webz.telegram.org / https://web.telegram.org/a/

This script should work on both versions of webapp, but some features are only available in the /k/ version (such as voice message downloads). If certain features are not working, switching to the /k/ version is recommended.

### Check Downloading Progress
A progress bar will show on the bottom-right of the screen for videos. You can also check [DevTools console](https://developer.chrome.com/docs/devtools/open/) for logs.

## Contributing

We welcome contributions from the community! If you‚Äôd like to contribute to Telegram Media Downloader, follow these steps:

### Reporting Issues
If you find a bug, compatibility issue, or have a feature request, please:

1. Check if the issue has already been reported in the Issues tab.
2. If not, create a new issue with a clear title and description. Attach screenshots or logs if applicable.

### Submitting Pull Requests

1. **Fork the repository**: Click on the &quot;Fork&quot; button in the top-right of the repo.

2. **Clone your fork**:

    ```bash
    git clone https://github.com/YOUR-USERNAME/Telegram-Media-Downloader.git
    cd Telegram-Media-Downloader
    ```

3. **Create a new branch** for your feature or bugfix:

    ```bash
    git checkout -b feature-or-bugfix-name
    ```

    Make your changes and ensure the script still works correctly on supported Telegram webapps.

4. **Make your changes** and ensure the script still works correctly on supported Telegram webapps.

5. **Commit your changes** with a descriptive message:

    ```bash
    git commit -m &quot;Add feature/fix issue: Brief description&quot;
    ```

6. **Push to your fork:**

    ```bash
    git push origin feature-or-bugfix-name
    ```

7. **Submit a Pull Request (PR):**

    - Go to the original repository: [Neet-Nestor/Telegram-Media-Downloader](https://github.com/Neet-Nestor/Telegram-Media-Downloader).

    - Click &quot;New Pull Request&quot; and select your branch.

    - Add a description of your changes and submit.

### Development Guidelines
- Keep your code clean and well-documented.
- Follow the existing coding style.
- Test your changes on both Telegram WebK and WebZ versions.
- Ensure compatibility with major user script managers like Tampermonkey and Violentmonkey.

### Help with Translations
We want Telegram Media Downloader to be accessible to users worldwide! If you‚Äôd like to help translate the script‚Äôs Greasy Fork page, follow these steps:

#### How to Contribute a Translation

Check for existing translations in the [`docs/greasyfork`](/docs/greasyfork/) folder of the repository.

Add a new file in docs/&lt;language-code&gt;.md, using the appropriate language code (e.g., docs/fr-FR.md for French, docs/de-DE.md for German).

Translate the content from [`docs/greasyfork/en-US.md`](/docs/greasyfork/en-US.md) into your language while keeping the formatting intact. Submit a Pull Request following the steps in the [Submitting Pull Requests](#submitting-pull-requests) section above.

#### Language Codes
Use standard IETF Language Tag (e.g., `es-ES` for Spanish, `ja-JP` for Japanese). You can find a full list of codes [here](https://docs.dyspatch.io/localization/supported_languages/).

## Support Author
If you like this script, you can support me via [Venmo](https://venmo.com/u/NeetNestor) or [buy me a coffee](https://ko-fi.com/neetnestor) :)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[Wei-Shaw/claude-relay-service]]></title>
            <link>https://github.com/Wei-Shaw/claude-relay-service</link>
            <guid>https://github.com/Wei-Shaw/claude-relay-service</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:47 GMT</pubDate>
            <description><![CDATA[CRS-Ëá™Âª∫Claude CodeÈïúÂÉèÔºå‰∏ÄÁ´ôÂºèÂºÄÊ∫ê‰∏≠ËΩ¨ÊúçÂä°ÔºåËÆ© Claude„ÄÅOpenAI„ÄÅGemini„ÄÅDroid ËÆ¢ÈòÖÁªü‰∏ÄÊé•ÂÖ•ÔºåÊîØÊåÅÊãºËΩ¶ÂÖ±‰∫´ÔºåÊõ¥È´òÊïàÂàÜÊëäÊàêÊú¨ÔºåÂéüÁîüÂ∑•ÂÖ∑Êó†Áºù‰ΩøÁî®„ÄÇ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Wei-Shaw/claude-relay-service">Wei-Shaw/claude-relay-service</a></h1>
            <p>CRS-Ëá™Âª∫Claude CodeÈïúÂÉèÔºå‰∏ÄÁ´ôÂºèÂºÄÊ∫ê‰∏≠ËΩ¨ÊúçÂä°ÔºåËÆ© Claude„ÄÅOpenAI„ÄÅGemini„ÄÅDroid ËÆ¢ÈòÖÁªü‰∏ÄÊé•ÂÖ•ÔºåÊîØÊåÅÊãºËΩ¶ÂÖ±‰∫´ÔºåÊõ¥È´òÊïàÂàÜÊëäÊàêÊú¨ÔºåÂéüÁîüÂ∑•ÂÖ∑Êó†Áºù‰ΩøÁî®„ÄÇ</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,747</p>
            <p>Forks: 787</p>
            <p>Stars today: 113 stars today</p>
            <h2>README</h2><pre># Claude Relay Service

&lt;div align=&quot;center&quot;&gt;

[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Node.js](https://img.shields.io/badge/Node.js-18+-green.svg)](https://nodejs.org/)
[![Redis](https://img.shields.io/badge/Redis-6+-red.svg)](https://redis.io/)
[![Docker](https://img.shields.io/badge/Docker-Ready-blue.svg)](https://www.docker.com/)
[![Docker Build](https://github.com/Wei-Shaw/claude-relay-service/actions/workflows/auto-release-pipeline.yml/badge.svg)](https://github.com/Wei-Shaw/claude-relay-service/actions/workflows/auto-release-pipeline.yml)
[![Docker Pulls](https://img.shields.io/docker/pulls/weishaw/claude-relay-service)](https://hub.docker.com/r/weishaw/claude-relay-service)

**üîê Ëá™Ë°åÊê≠Âª∫Claude API‰∏≠ËΩ¨ÊúçÂä°ÔºåÊîØÊåÅÂ§öË¥¶Êà∑ÁÆ°ÁêÜ**

[English](README_EN.md) ‚Ä¢ [Âø´ÈÄüÂºÄÂßã](https://pincc.ai/) ‚Ä¢ [ÊºîÁ§∫Á´ôÁÇπ](https://demo.pincc.ai/admin-next/login) ‚Ä¢ [ÂÖ¨ÂëäÈ¢ëÈÅì](https://t.me/claude_relay_service)

&lt;/div&gt;

---

## üíé Claude/Codex ÊãºËΩ¶ÊúçÂä°Êé®Ëçê

&lt;div align=&quot;center&quot;&gt;

| Âπ≥Âè∞ | Á±ªÂûã | ÊúçÂä° | ‰ªãÁªç |
|:---|:---|:---|:---|
| **[pincc.ai](https://pincc.ai/)** | üèÜ **ÂÆòÊñπËøêËê•** | &lt;small&gt;‚úÖ Claude Code&lt;br&gt;‚úÖ Codex CLI&lt;/small&gt; | È°πÁõÆÁõ¥Ëê•ÔºåÊèê‰æõÁ®≥ÂÆöÁöÑ Claude Code / Codex CLI ÊãºËΩ¶ÊúçÂä° |
| **[ctok.ai](https://ctok.ai/)** | ü§ù Âêà‰Ωú‰ºô‰º¥ | &lt;small&gt;‚úÖ Claude Code&lt;br&gt;‚úÖ Codex CLI&lt;/small&gt; | Á§æÂå∫ËÆ§ËØÅÔºåÊèê‰æõ Claude Code / Codex CLI ÊãºËΩ¶ |


&lt;/div&gt;

---

## ‚ö†Ô∏è ÈáçË¶ÅÊèêÈÜí

**‰ΩøÁî®Êú¨È°πÁõÆÂâçËØ∑‰ªîÁªÜÈòÖËØªÔºö**

üö® **ÊúçÂä°Êù°Ê¨æÈ£éÈô©**: ‰ΩøÁî®Êú¨È°πÁõÆÂèØËÉΩËøùÂèçAnthropicÁöÑÊúçÂä°Êù°Ê¨æ„ÄÇËØ∑Âú®‰ΩøÁî®Ââç‰ªîÁªÜÈòÖËØªAnthropicÁöÑÁî®Êà∑ÂçèËÆÆÔºå‰ΩøÁî®Êú¨È°πÁõÆÁöÑ‰∏ÄÂàáÈ£éÈô©Áî±Áî®Êà∑Ëá™Ë°åÊâøÊãÖ„ÄÇ

üìñ **ÂÖçË¥£Â£∞Êòé**: Êú¨È°πÁõÆ‰ªÖ‰æõÊäÄÊúØÂ≠¶‰π†ÂíåÁ†îÁ©∂‰ΩøÁî®Ôºå‰ΩúËÄÖ‰∏çÂØπÂõ†‰ΩøÁî®Êú¨È°πÁõÆÂØºËá¥ÁöÑË¥¶Êà∑Â∞ÅÁ¶Å„ÄÅÊúçÂä°‰∏≠Êñ≠ÊàñÂÖ∂‰ªñÊçüÂ§±ÊâøÊãÖ‰ªª‰ΩïË¥£‰ªª„ÄÇ


## ü§î Ëøô‰∏™È°πÁõÆÈÄÇÂêà‰Ω†ÂêóÔºü

- üåç **Âú∞Âå∫ÈôêÂà∂**: ÊâÄÂú®Âú∞Âå∫Êó†Ê≥ïÁõ¥Êé•ËÆøÈóÆClaude CodeÊúçÂä°Ôºü
- üîí **ÈöêÁßÅÊãÖÂøß**: ÊãÖÂøÉÁ¨¨‰∏âÊñπÈïúÂÉèÊúçÂä°‰ºöËÆ∞ÂΩïÊàñÊ≥ÑÈú≤‰Ω†ÁöÑÂØπËØùÂÜÖÂÆπÔºü
- üë• **ÊàêÊú¨ÂàÜÊëä**: ÊÉ≥ÂíåÊúãÂèã‰∏ÄËµ∑ÂàÜÊëäClaude Code MaxËÆ¢ÈòÖË¥πÁî®Ôºü
- ‚ö° **Á®≥ÂÆöÊÄß**: Á¨¨‰∏âÊñπÈïúÂÉèÁ´ôÁªèÂ∏∏ÊïÖÈöú‰∏çÁ®≥ÂÆöÔºåÂΩ±ÂìçÊïàÁéá Ôºü

Â¶ÇÊûúÊúâ‰ª•‰∏äÂõ∞ÊÉëÔºåÈÇ£Ëøô‰∏™È°πÁõÆÂèØËÉΩÈÄÇÂêà‰Ω†„ÄÇ

### ÈÄÇÂêàÁöÑÂú∫ÊôØ

‚úÖ **ÊâæÊúãÂèãÊãºËΩ¶**: ‰∏â‰∫îÂ•ΩÂèã‰∏ÄËµ∑ÂàÜÊëäClaude Code MaxËÆ¢ÈòÖ  
‚úÖ **ÈöêÁßÅÊïèÊÑü**: ‰∏çÊÉ≥ËÆ©Á¨¨‰∏âÊñπÈïúÂÉèÁúãÂà∞‰Ω†ÁöÑÂØπËØùÂÜÖÂÆπ  
‚úÖ **ÊäÄÊúØÊäòËÖæ**: ÊúâÂü∫Êú¨ÁöÑÊäÄÊúØÂü∫Á°ÄÔºåÊÑøÊÑèËá™Â∑±Êê≠Âª∫ÂíåÁª¥Êä§  
‚úÖ **Á®≥ÂÆöÈúÄÊ±Ç**: ÈúÄË¶ÅÈïøÊúüÁ®≥ÂÆöÁöÑClaudeËÆøÈóÆÔºå‰∏çÊÉ≥ÂèóÂà∂‰∫éÈïúÂÉèÁ´ô  
‚úÖ **Âú∞Âå∫ÂèóÈôê**: Êó†Ê≥ïÁõ¥Êé•ËÆøÈóÆClaudeÂÆòÊñπÊúçÂä°

---

## üí≠ ‰∏∫‰ªÄ‰πàË¶ÅËá™Â∑±Êê≠Ôºü

### Áé∞ÊúâÈïúÂÉèÁ´ôÂèØËÉΩÁöÑÈóÆÈ¢ò

- üïµÔ∏è **ÈöêÁßÅÈ£éÈô©**: ‰Ω†ÁöÑÂØπËØùÂÜÖÂÆπÈÉΩË¢´‰∫∫ÂÆ∂ÁúãÂæó‰∏ÄÊ∏Ö‰∫åÊ•öÔºåÂïÜ‰∏öÊú∫ÂØÜ‰ªÄ‰πàÁöÑÂ∞±Âà´ÊÉ≥‰∫Ü
- üêå **ÊÄßËÉΩ‰∏çÁ®≥**: Áî®ÁöÑ‰∫∫Â§ö‰∫ÜÂ∞±ÊÖ¢ÔºåÈ´òÂ≥∞ÊúüÁªèÂ∏∏Âç°Ê≠ª
- üí∞ **‰ª∑Ê†º‰∏çÈÄèÊòé**: ‰∏çÁü•ÈÅìÂÆûÈôÖÊàêÊú¨

### Ëá™Âª∫ÁöÑÂ•ΩÂ§Ñ

- üîê **Êï∞ÊçÆÂÆâÂÖ®**: ÊâÄÊúâÊé•Âè£ËØ∑Ê±ÇÈÉΩÂè™ÁªèËøá‰Ω†Ëá™Â∑±ÁöÑÊúçÂä°Âô®ÔºåÁõ¥ËøûAnthropic API
- ‚ö° **ÊÄßËÉΩÂèØÊéß**: Â∞±‰Ω†‰ª¨Âá†‰∏™‰∫∫Áî®ÔºåMax 200ÂàÄÂ•óÈ§êÂü∫Êú¨‰∏äÂèØ‰ª•ÁàΩÁî®Opus
- üí∞ **ÊàêÊú¨ÈÄèÊòé**: Áî®‰∫ÜÂ§öÂ∞ëtoken‰∏ÄÁõÆ‰∫ÜÁÑ∂ÔºåÊåâÂÆòÊñπ‰ª∑Ê†ºÊç¢ÁÆó‰∫ÜÂÖ∑‰ΩìË¥πÁî®
- üìä **ÁõëÊéßÂÆåÊï¥**: ‰ΩøÁî®ÊÉÖÂÜµ„ÄÅÊàêÊú¨ÂàÜÊûê„ÄÅÊÄßËÉΩÁõëÊéßÂÖ®ÈÉΩÊúâ

---

## üöÄ Ê†∏ÂøÉÂäüËÉΩ

### Âü∫Á°ÄÂäüËÉΩ

- ‚úÖ **Â§öË¥¶Êà∑ÁÆ°ÁêÜ**: ÂèØ‰ª•Ê∑ªÂä†Â§ö‰∏™ClaudeË¥¶Êà∑Ëá™Âä®ËΩÆÊç¢
- ‚úÖ **Ëá™ÂÆö‰πâAPI Key**: ÁªôÊØè‰∏™‰∫∫ÂàÜÈÖçÁã¨Á´ãÁöÑKey
- ‚úÖ **‰ΩøÁî®ÁªüËÆ°**: ËØ¶ÁªÜËÆ∞ÂΩïÊØè‰∏™‰∫∫Áî®‰∫ÜÂ§öÂ∞ëtoken

### È´òÁ∫ßÂäüËÉΩ

- üîÑ **Êô∫ËÉΩÂàáÊç¢**: Ë¥¶Êà∑Âá∫ÈóÆÈ¢òËá™Âä®Êç¢‰∏ã‰∏Ä‰∏™
- üöÄ **ÊÄßËÉΩ‰ºòÂåñ**: ËøûÊé•Ê±†„ÄÅÁºìÂ≠òÔºåÂáèÂ∞ëÂª∂Ëøü
- üìä **ÁõëÊéßÈù¢Êùø**: WebÁïåÈù¢Êü•ÁúãÊâÄÊúâÊï∞ÊçÆ
- üõ°Ô∏è **ÂÆâÂÖ®ÊéßÂà∂**: ËÆøÈóÆÈôêÂà∂„ÄÅÈÄüÁéáÊéßÂà∂„ÄÅÂÆ¢Êà∑Á´ØÈôêÂà∂
- üåê **‰ª£ÁêÜÊîØÊåÅ**: ÊîØÊåÅHTTP/SOCKS5‰ª£ÁêÜ

---

## üìã ÈÉ®ÁΩ≤Ë¶ÅÊ±Ç

### Á°¨‰ª∂Ë¶ÅÊ±ÇÔºàÊúÄ‰ΩéÈÖçÁΩÆÔºâ

- **CPU**: 1Ê†∏ÂøÉÂ∞±Â§ü‰∫Ü
- **ÂÜÖÂ≠ò**: 512MBÔºàÂª∫ËÆÆ1GBÔºâ
- **Á°¨Áõò**: 30GBÂèØÁî®Á©∫Èó¥
- **ÁΩëÁªú**: ËÉΩËÆøÈóÆÂà∞Anthropic APIÔºàÂª∫ËÆÆ‰ΩøÁî®USÂú∞Âå∫ÁöÑÊú∫Âô®Ôºâ
- **Âª∫ËÆÆ**: 2Ê†∏4GÁöÑÂü∫Êú¨Â§ü‰∫ÜÔºåÁΩëÁªúÂ∞ΩÈáèÈÄâÂõûÂõΩÁ∫øË∑ØÂø´‰∏ÄÁÇπÁöÑÔºà‰∏∫‰∫ÜÊèêÈ´òÈÄüÂ∫¶ÔºåÂª∫ËÆÆ‰∏çË¶ÅÂºÄ‰ª£ÁêÜÊàñËÄÖËÆæÁΩÆÊúçÂä°Âô®ÁöÑIPÁõ¥ËøûÔºâ
- **ÁªèÈ™å**: ÈòøÈáå‰∫ë„ÄÅËÖæËÆØ‰∫ëÁöÑÊµ∑Â§ñ‰∏ªÊú∫ÁªèÊµãËØï‰ºöË¢´CloudflareÊã¶Êà™ÔºåÊó†Ê≥ïÁõ¥Êé•ËÆøÈóÆclaude api

### ËΩØ‰ª∂Ë¶ÅÊ±Ç

- **Node.js** 18ÊàñÊõ¥È´òÁâàÊú¨
- **Redis** 6ÊàñÊõ¥È´òÁâàÊú¨
- **Êìç‰ΩúÁ≥ªÁªü**: Âª∫ËÆÆLinux

### Ë¥πÁî®‰º∞ÁÆó

- **ÊúçÂä°Âô®**: ËΩªÈáè‰∫ëÊúçÂä°Âô®Ôºå‰∏Ä‰∏™Êúà30-60Âùó
- **ClaudeËÆ¢ÈòÖ**: Áúã‰Ω†ÊÄé‰πàÂàÜÊëä‰∫Ü
- **ÂÖ∂‰ªñ**: ÂüüÂêçÔºàÂèØÈÄâÔºâ

---

## üöÄ ËÑöÊú¨ÈÉ®ÁΩ≤ÔºàÊé®ËçêÔºâ

Êé®Ëçê‰ΩøÁî®ÁÆ°ÁêÜËÑöÊú¨ËøõË°å‰∏ÄÈîÆÈÉ®ÁΩ≤ÔºåÁÆÄÂçïÂø´Êç∑ÔºåËá™Âä®Â§ÑÁêÜÊâÄÊúâ‰æùËµñÂíåÈÖçÁΩÆ„ÄÇ

### Âø´ÈÄüÂÆâË£Ö

```bash
curl -fsSL https://pincc.ai/manage.sh -o manage.sh &amp;&amp; chmod +x manage.sh &amp;&amp; ./manage.sh install
```

### ËÑöÊú¨ÂäüËÉΩ

- ‚úÖ **‰∏ÄÈîÆÂÆâË£Ö**: Ëá™Âä®Ê£ÄÊµãÁ≥ªÁªüÁéØÂ¢ÉÔºåÂÆâË£Ö Node.js 18+„ÄÅRedis Á≠â‰æùËµñ
- ‚úÖ **‰∫§‰∫íÂºèÈÖçÁΩÆ**: ÂèãÂ•ΩÁöÑÈÖçÁΩÆÂêëÂØºÔºåËÆæÁΩÆÁ´ØÂè£„ÄÅRedis ËøûÊé•Á≠â
- ‚úÖ **Ëá™Âä®ÂêØÂä®**: ÂÆâË£ÖÂÆåÊàêÂêéËá™Âä®ÂêØÂä®ÊúçÂä°Âπ∂ÊòæÁ§∫ËÆøÈóÆÂú∞ÂùÄ
- ‚úÖ **‰æøÊç∑ÁÆ°ÁêÜ**: ÈÄöËøá `crs` ÂëΩ‰ª§ÈöèÊó∂ÁÆ°ÁêÜÊúçÂä°Áä∂ÊÄÅ

### ÁÆ°ÁêÜÂëΩ‰ª§

```bash
crs install   # ÂÆâË£ÖÊúçÂä°
crs start     # ÂêØÂä®ÊúçÂä°
crs stop      # ÂÅúÊ≠¢ÊúçÂä°
crs restart   # ÈáçÂêØÊúçÂä°
crs status    # Êü•ÁúãÁä∂ÊÄÅ
crs update    # Êõ¥Êñ∞ÊúçÂä°
crs uninstall # Âç∏ËΩΩÊúçÂä°
```

### ÂÆâË£ÖÁ§∫‰æã

```bash
$ crs install

# ‰ºö‰æùÊ¨°ËØ¢ÈóÆÔºö
ÂÆâË£ÖÁõÆÂΩï (ÈªòËÆ§: ~/claude-relay-service):
ÊúçÂä°Á´ØÂè£ (ÈªòËÆ§: 3000): 8080
Redis Âú∞ÂùÄ (ÈªòËÆ§: localhost):
Redis Á´ØÂè£ (ÈªòËÆ§: 6379):
Redis ÂØÜÁ†Å (ÈªòËÆ§: Êó†ÂØÜÁ†Å):

# ÂÆâË£ÖÂÆåÊàêÂêéËá™Âä®ÂêØÂä®Âπ∂ÊòæÁ§∫Ôºö
ÊúçÂä°Â∑≤ÊàêÂäüÂÆâË£ÖÂπ∂ÂêØÂä®ÔºÅ

ËÆøÈóÆÂú∞ÂùÄÔºö
  Êú¨Âú∞ Web: http://localhost:8080/web
  ÂÖ¨ÁΩë Web: http://YOUR_IP:8080/web

ÁÆ°ÁêÜÂëòË¥¶Âè∑‰ø°ÊÅØÂ∑≤‰øùÂ≠òÂà∞: data/init.json
```

### Á≥ªÁªüË¶ÅÊ±Ç

- ÊîØÊåÅÁ≥ªÁªü: Ubuntu/Debian„ÄÅCentOS/RedHat„ÄÅArch Linux„ÄÅmacOS
- Ëá™Âä®ÂÆâË£Ö Node.js 18+ Âíå Redis
- Redis ‰ΩøÁî®Á≥ªÁªüÈªòËÆ§‰ΩçÁΩÆÔºåÊï∞ÊçÆÁã¨Á´ã‰∫éÂ∫îÁî®

---

## üì¶ ÊâãÂä®ÈÉ®ÁΩ≤

### Á¨¨‰∏ÄÊ≠•ÔºöÁéØÂ¢ÉÂáÜÂ§á

**Ubuntu/DebianÁî®Êà∑Ôºö**

```bash
# ÂÆâË£ÖNode.js
curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
sudo apt-get install -y nodejs

# ÂÆâË£ÖRedis
sudo apt update
sudo apt install redis-server
sudo systemctl start redis-server
```

**CentOS/RHELÁî®Êà∑Ôºö**

```bash
# ÂÆâË£ÖNode.js
curl -fsSL https://rpm.nodesource.com/setup_18.x | sudo bash -
sudo yum install -y nodejs

# ÂÆâË£ÖRedis
sudo yum install redis
sudo systemctl start redis
```

### Á¨¨‰∫åÊ≠•Ôºö‰∏ãËΩΩÂíåÈÖçÁΩÆ

```bash
# ‰∏ãËΩΩÈ°πÁõÆ
git clone https://github.com/Wei-Shaw//claude-relay-service.git
cd claude-relay-service

# ÂÆâË£Ö‰æùËµñ
npm install

# Â§çÂà∂ÈÖçÁΩÆÊñá‰ª∂ÔºàÈáçË¶ÅÔºÅÔºâ
cp config/config.example.js config/config.js
cp .env.example .env
```

### Á¨¨‰∏âÊ≠•ÔºöÈÖçÁΩÆÊñá‰ª∂ËÆæÁΩÆ

**ÁºñËæë `.env` Êñá‰ª∂Ôºö**

```bash
# Ëøô‰∏§‰∏™ÂØÜÈí•Èöè‰æøÁîüÊàêÔºå‰ΩÜË¶ÅËÆ∞‰Ωè
JWT_SECRET=‰Ω†ÁöÑË∂ÖÁ∫ßÁßòÂØÜÂØÜÈí•
ENCRYPTION_KEY=32‰ΩçÁöÑÂä†ÂØÜÂØÜÈí•Èöè‰æøÂÜô

# RedisÈÖçÁΩÆ
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=

```

**ÁºñËæë `config/config.js` Êñá‰ª∂Ôºö**

```javascript
module.exports = {
  server: {
    port: 3000, // ÊúçÂä°Á´ØÂè£ÔºåÂèØ‰ª•Êîπ
    host: &#039;0.0.0.0&#039; // ‰∏çÁî®Êîπ
  },
  redis: {
    host: &#039;127.0.0.1&#039;, // RedisÂú∞ÂùÄ
    port: 6379 // RedisÁ´ØÂè£
  }
  // ÂÖ∂‰ªñÈÖçÁΩÆ‰øùÊåÅÈªòËÆ§Â∞±Ë°å
}
```

### Á¨¨ÂõõÊ≠•ÔºöÂÆâË£ÖÂâçÁ´Ø‰æùËµñÂπ∂ÊûÑÂª∫

```bash
# ÂÆâË£ÖÂâçÁ´Ø‰æùËµñ
npm run install:web

# ÊûÑÂª∫ÂâçÁ´ØÔºàÁîüÊàê dist ÁõÆÂΩïÔºâ
npm run build:web
```

### Á¨¨‰∫îÊ≠•ÔºöÂêØÂä®ÊúçÂä°

```bash
# ÂàùÂßãÂåñ
npm run setup # ‰ºöÈöèÊú∫ÁîüÊàêÂêéÂè∞Ë¥¶Âè∑ÂØÜÁ†Å‰ø°ÊÅØÔºåÂ≠òÂÇ®Âú® data/init.json
# ÊàñËÄÖÈÄöËøáÁéØÂ¢ÉÂèòÈáèÈ¢ÑËÆæÁÆ°ÁêÜÂëòÂá≠ÊçÆÔºö
# export ADMIN_USERNAME=cr_admin_custom
# export ADMIN_PASSWORD=your-secure-password

# ÂêØÂä®ÊúçÂä°
npm run service:start:daemon   # ÂêéÂè∞ËøêË°å

# Êü•ÁúãÁä∂ÊÄÅ
npm run service:status
```

---

## üê≥ Docker ÈÉ®ÁΩ≤

### Docker compose

#### Á¨¨‰∏ÄÊ≠•Ôºö‰∏ãËΩΩÊûÑÂª∫docker-compose.ymlÊñá‰ª∂ÁöÑËÑöÊú¨Âπ∂ÊâßË°å
```bash
curl -fsSL https://pincc.ai/crs-compose.sh -o crs-compose.sh &amp;&amp; chmod +x crs-compose.sh &amp;&amp; ./crs-compose.sh
```

#### Á¨¨‰∫åÊ≠•ÔºöÂêØÂä®
```bash
docker-compose up -d
```

### Docker Compose ÈÖçÁΩÆ

docker-compose.yml Â∑≤ÂåÖÂê´Ôºö

- ‚úÖ Ëá™Âä®ÂàùÂßãÂåñÁÆ°ÁêÜÂëòË¥¶Âè∑
- ‚úÖ Êï∞ÊçÆÊåÅ‰πÖÂåñÔºàlogsÂíådataÁõÆÂΩïËá™Âä®ÊåÇËΩΩÔºâ
- ‚úÖ RedisÊï∞ÊçÆÂ∫ì
- ‚úÖ ÂÅ•Â∫∑Ê£ÄÊü•
- ‚úÖ Ëá™Âä®ÈáçÂêØ

### ÁéØÂ¢ÉÂèòÈáèËØ¥Êòé

#### ÂøÖÂ°´È°π

- `JWT_SECRET`: JWTÂØÜÈí•ÔºåËá≥Â∞ë32‰∏™Â≠óÁ¨¶
- `ENCRYPTION_KEY`: Âä†ÂØÜÂØÜÈí•ÔºåÂøÖÈ°ªÊòØ32‰∏™Â≠óÁ¨¶

#### ÂèØÈÄâÈ°π

- `ADMIN_USERNAME`: ÁÆ°ÁêÜÂëòÁî®Êà∑ÂêçÔºà‰∏çËÆæÁΩÆÂàôËá™Âä®ÁîüÊàêÔºâ
- `ADMIN_PASSWORD`: ÁÆ°ÁêÜÂëòÂØÜÁ†ÅÔºà‰∏çËÆæÁΩÆÂàôËá™Âä®ÁîüÊàêÔºâ
- `LOG_LEVEL`: Êó•ÂøóÁ∫ßÂà´ÔºàÈªòËÆ§ÔºöinfoÔºâ
- Êõ¥Â§öÈÖçÁΩÆÈ°πËØ∑ÂèÇËÄÉ `.env.example` Êñá‰ª∂

### ÁÆ°ÁêÜÂëòÂá≠ÊçÆËé∑ÂèñÊñπÂºè

1. **Êü•ÁúãÂÆπÂô®Êó•Âøó**

   ```bash
   docker logs claude-relay-service
   ```

2. **Êü•ÁúãÊåÇËΩΩÁöÑÊñá‰ª∂**

   ```bash
   cat ./data/init.json
   ```

3. **‰ΩøÁî®ÁéØÂ¢ÉÂèòÈáèÈ¢ÑËÆæ**
   ```bash
   # Âú® .env Êñá‰ª∂‰∏≠ËÆæÁΩÆ
   ADMIN_USERNAME=cr_admin_custom
   ADMIN_PASSWORD=your-secure-password
   ```

---

## üéÆ ÂºÄÂßã‰ΩøÁî®

### 1. ÊâìÂºÄÁÆ°ÁêÜÁïåÈù¢

ÊµèËßàÂô®ËÆøÈóÆÔºö`http://‰Ω†ÁöÑÊúçÂä°Âô®IP:3000/web`

ÁÆ°ÁêÜÂëòË¥¶Âè∑Ôºö

- Ëá™Âä®ÁîüÊàêÔºöÊü•Áúã data/init.json
- ÁéØÂ¢ÉÂèòÈáèÈ¢ÑËÆæÔºöÈÄöËøá ADMIN_USERNAME Âíå ADMIN_PASSWORD ËÆæÁΩÆ
- Docker ÈÉ®ÁΩ≤ÔºöÊü•ÁúãÂÆπÂô®Êó•Âøó `docker logs claude-relay-service`

### 2. Ê∑ªÂä†ClaudeË¥¶Êà∑

Ëøô‰∏ÄÊ≠•ÊØîËæÉÂÖ≥ÈîÆÔºåÈúÄË¶ÅOAuthÊéàÊùÉÔºö

1. ÁÇπÂáª„ÄåClaudeË¥¶Êà∑„ÄçÊ†áÁ≠æ
2. Â¶ÇÊûú‰Ω†ÊãÖÂøÉÂ§ö‰∏™Ë¥¶Âè∑ÂÖ±Áî®1‰∏™IPÊÄïË¢´Â∞ÅÁ¶ÅÔºåÂèØ‰ª•ÈÄâÊã©ËÆæÁΩÆÈùôÊÄÅ‰ª£ÁêÜIPÔºàÂèØÈÄâÔºâ
3. ÁÇπÂáª„ÄåÊ∑ªÂä†Ë¥¶Êà∑„Äç
4. ÁÇπÂáª„ÄåÁîüÊàêÊéàÊùÉÈìæÊé•„ÄçÔºå‰ºöÊâìÂºÄ‰∏Ä‰∏™Êñ∞È°µÈù¢
5. Âú®Êñ∞È°µÈù¢ÂÆåÊàêClaudeÁôªÂΩïÂíåÊéàÊùÉ
6. Â§çÂà∂ËøîÂõûÁöÑAuthorization Code
7. Á≤òË¥¥Âà∞È°µÈù¢ÂÆåÊàêÊ∑ªÂä†

**Ê≥®ÊÑè**: Â¶ÇÊûú‰Ω†Âú®ÂõΩÂÜÖÔºåËøô‰∏ÄÊ≠•ÂèØËÉΩÈúÄË¶ÅÁßëÂ≠¶‰∏äÁΩë„ÄÇ

### 3. ÂàõÂª∫API Key

ÁªôÊØè‰∏™‰ΩøÁî®ËÄÖÂàÜÈÖç‰∏Ä‰∏™KeyÔºö

1. ÁÇπÂáª„ÄåAPI Keys„ÄçÊ†áÁ≠æ
2. ÁÇπÂáª„ÄåÂàõÂª∫Êñ∞Key„Äç
3. ÁªôKeyËµ∑‰∏™ÂêçÂ≠óÔºåÊØîÂ¶Ç„ÄåÂº†‰∏âÁöÑKey„Äç
4. ËÆæÁΩÆ‰ΩøÁî®ÈôêÂà∂ÔºàÂèØÈÄâÔºâÔºö
   - **ÈÄüÁéáÈôêÂà∂**: ÈôêÂà∂ÊØè‰∏™Êó∂Èó¥Á™óÂè£ÁöÑËØ∑Ê±ÇÊ¨°Êï∞ÂíåToken‰ΩøÁî®Èáè
   - **Âπ∂ÂèëÈôêÂà∂**: ÈôêÂà∂ÂêåÊó∂Â§ÑÁêÜÁöÑËØ∑Ê±ÇÊï∞
   - **Ê®°ÂûãÈôêÂà∂**: ÈôêÂà∂ÂèØËÆøÈóÆÁöÑÊ®°ÂûãÂàóË°®
   - **ÂÆ¢Êà∑Á´ØÈôêÂà∂**: ÈôêÂà∂Âè™ÂÖÅËÆ∏ÁâπÂÆöÂÆ¢Êà∑Á´Ø‰ΩøÁî®ÔºàÂ¶ÇClaudeCode„ÄÅGemini-CLIÁ≠âÔºâ
5. ‰øùÂ≠òÔºåËÆ∞‰∏ãÁîüÊàêÁöÑKey

### 4. ÂºÄÂßã‰ΩøÁî® Claude Code Âíå Gemini CLI

Áé∞Âú®‰Ω†ÂèØ‰ª•Áî®Ëá™Â∑±ÁöÑÊúçÂä°ÊõøÊç¢ÂÆòÊñπAPI‰∫ÜÔºö

**Claude Code ËÆæÁΩÆÁéØÂ¢ÉÂèòÈáèÔºö**

ÈªòËÆ§‰ΩøÁî®Ê†áÂáÜ Claude Ë¥¶Âè∑Ê±†Ôºö

```bash
export ANTHROPIC_BASE_URL=&quot;http://127.0.0.1:3000/api/&quot; # Ê†πÊçÆÂÆûÈôÖÂ°´ÂÜô‰Ω†ÊúçÂä°Âô®ÁöÑipÂú∞ÂùÄÊàñËÄÖÂüüÂêç
export ANTHROPIC_AUTH_TOKEN=&quot;ÂêéÂè∞ÂàõÂª∫ÁöÑAPIÂØÜÈí•&quot;
```

**VSCode Claude Êèí‰ª∂ÈÖçÁΩÆÔºö**

Â¶ÇÊûú‰ΩøÁî® VSCode ÁöÑ Claude Êèí‰ª∂ÔºåÈúÄË¶ÅÂú® `~/.claude/config.json` Êñá‰ª∂‰∏≠ÈÖçÁΩÆÔºö

```json
{
    &quot;primaryApiKey&quot;: &quot;crs&quot;
}
```

Â¶ÇÊûúËØ•Êñá‰ª∂‰∏çÂ≠òÂú®ÔºåËØ∑ÊâãÂä®ÂàõÂª∫„ÄÇWindows Áî®Êà∑Ë∑ØÂæÑ‰∏∫ `C:\Users\‰Ω†ÁöÑÁî®Êà∑Âêç\.claude\config.json`„ÄÇ

**Gemini CLI ËÆæÁΩÆÁéØÂ¢ÉÂèòÈáèÔºö**

```bash
GEMINI_MODEL=&quot;gemini-2.5-pro&quot;
GOOGLE_GEMINI_BASE_URL=&quot;http://127.0.0.1:3000/gemini&quot; # Ê†πÊçÆÂÆûÈôÖÂ°´ÂÜô‰Ω†ÊúçÂä°Âô®ÁöÑipÂú∞ÂùÄÊàñËÄÖÂüüÂêç
GEMINI_API_KEY=&quot;ÂêéÂè∞ÂàõÂª∫ÁöÑAPIÂØÜÈí•&quot;  # ‰ΩøÁî®Áõ∏ÂêåÁöÑAPIÂØÜÈí•Âç≥ÂèØ
```
**‰ΩøÁî® Claude CodeÔºö**

```bash
claude
```

**‰ΩøÁî® Gemini CLIÔºö**

```bash
gemini  # ÊàñÂÖ∂‰ªñ Gemini CLI ÂëΩ‰ª§
```

**Codex ÈÖçÁΩÆÔºö**

Âú® `~/.codex/config.toml` Êñá‰ª∂**ÂºÄÂ§¥**Ê∑ªÂä†‰ª•‰∏ãÈÖçÁΩÆÔºö

```toml
model_provider = &quot;crs&quot;
model = &quot;gpt-5-codex&quot;
model_reasoning_effort = &quot;high&quot;
disable_response_storage = true
preferred_auth_method = &quot;apikey&quot;

[model_providers.crs]
name = &quot;crs&quot;
base_url = &quot;http://127.0.0.1:3000/openai&quot;  # Ê†πÊçÆÂÆûÈôÖÂ°´ÂÜô‰Ω†ÊúçÂä°Âô®ÁöÑipÂú∞ÂùÄÊàñËÄÖÂüüÂêç
wire_api = &quot;responses&quot;
requires_openai_auth = true
env_key = &quot;CRS_OAI_KEY&quot;
```

Âú® `~/.codex/auth.json` Êñá‰ª∂‰∏≠ÈÖçÁΩÆAPIÂØÜÈí•‰∏∫ nullÔºö

```json
{
    &quot;OPENAI_API_KEY&quot;: null  
}
```

ÁéØÂ¢ÉÂèòÈáèËÆæÁΩÆÔºö

```bash
export CRS_OAI_KEY=&quot;ÂêéÂè∞ÂàõÂª∫ÁöÑAPIÂØÜÈí•&quot;
```

&gt; ‚ö†Ô∏è Âú®ÈÄöËøá Nginx ÂèçÂêë‰ª£ÁêÜ CRS ÊúçÂä°Âπ∂‰ΩøÁî® Codex CLI Êó∂ÔºåÈúÄË¶ÅÂú® http Âùó‰∏≠Ê∑ªÂä† underscores_in_headers on;„ÄÇÂõ†‰∏∫ Nginx ÈªòËÆ§‰ºöÁßªÈô§Â∏¶‰∏ãÂàíÁ∫øÁöÑËØ∑Ê±ÇÂ§¥ÔºàÂ¶Ç session_idÔºâÔºå‰∏ÄÊó¶ËØ•Â§¥Ë¢´‰∏¢ÂºÉÔºåÂ§öË¥¶Âè∑ÁéØÂ¢É‰∏ãÁöÑÁ≤òÊÄß‰ºöËØùÂäüËÉΩÂ∞ÜÂ§±Êïà„ÄÇ

**Droid CLI ÈÖçÁΩÆÔºö**

Droid CLI ËØªÂèñ `~/.factory/config.json`„ÄÇÂèØ‰ª•Âú®ËØ•Êñá‰ª∂‰∏≠Ê∑ªÂä†Ëá™ÂÆö‰πâÊ®°Âûã‰ª•ÊåáÂêëÊú¨ÊúçÂä°ÁöÑÊñ∞Á´ØÁÇπÔºö

```json
{
  &quot;custom_models&quot;: [
    {
      &quot;model_display_name&quot;: &quot;Sonnet 4.5 [crs]&quot;,
      &quot;model&quot;: &quot;claude-sonnet-4-5-20250929&quot;,
      &quot;base_url&quot;: &quot;http://127.0.0.1:3000/droid/claude&quot;,
      &quot;api_key&quot;: &quot;ÂêéÂè∞ÂàõÂª∫ÁöÑAPIÂØÜÈí•&quot;,
      &quot;provider&quot;: &quot;anthropic&quot;,
      &quot;max_tokens&quot;: 8192
    },
    {
      &quot;model_display_name&quot;: &quot;GPT5-Codex [crs]&quot;,
      &quot;model&quot;: &quot;gpt-5-codex&quot;,
      &quot;base_url&quot;: &quot;http://127.0.0.1:3000/droid/openai&quot;,
      &quot;api_key&quot;: &quot;ÂêéÂè∞ÂàõÂª∫ÁöÑAPIÂØÜÈí•&quot;,
      &quot;provider&quot;: &quot;openai&quot;,
      &quot;max_tokens&quot;: 16384
    }
  ]
}
```

&gt; üí° Â∞ÜÁ§∫‰æã‰∏≠ÁöÑ `http://127.0.0.1:3000` ÊõøÊç¢‰∏∫‰Ω†ÁöÑÊúçÂä°ÂüüÂêçÊàñÂÖ¨ÁΩëÂú∞ÂùÄÔºåÂπ∂ÂÜôÂÖ•ÂêéÂè∞ÁîüÊàêÁöÑ API ÂØÜÈí•Ôºàcr_ ÂºÄÂ§¥Ôºâ„ÄÇ

### 5. Á¨¨‰∏âÊñπÂ∑•ÂÖ∑APIÊé•ÂÖ•

Êú¨ÊúçÂä°ÊîØÊåÅÂ§öÁßçAPIÁ´ØÁÇπÊ†ºÂºèÔºåÊñπ‰æøÊé•ÂÖ•‰∏çÂêåÁöÑÁ¨¨‰∏âÊñπÂ∑•ÂÖ∑ÔºàÂ¶ÇCherry StudioÁ≠âÔºâ„ÄÇ

#### Cherry Studio Êé•ÂÖ•Á§∫‰æã

Cherry StudioÊîØÊåÅÂ§öÁßçAIÊúçÂä°ÁöÑÊé•ÂÖ•Ôºå‰∏ãÈù¢ÊòØ‰∏çÂêåË¥¶Âè∑Á±ªÂûãÁöÑËØ¶ÁªÜÈÖçÁΩÆÔºö

**1. ClaudeË¥¶Âè∑Êé•ÂÖ•Ôºö**

```
# APIÂú∞ÂùÄ
http://‰Ω†ÁöÑÊúçÂä°Âô®:3000/claude

# Ê®°ÂûãIDÁ§∫‰æã
claude-sonnet-4-5-20250929 # Claude Sonnet 4.5
claude-opus-4-20250514     # Claude Opus 4
```

ÈÖçÁΩÆÊ≠•È™§Ôºö
- ‰æõÂ∫îÂïÜÁ±ªÂûãÈÄâÊã©&quot;Anthropic&quot;
- APIÂú∞ÂùÄÂ°´ÂÖ•Ôºö`http://‰Ω†ÁöÑÊúçÂä°Âô®:3000/claude`
- API KeyÂ°´ÂÖ•ÔºöÂêéÂè∞ÂàõÂª∫ÁöÑAPIÂØÜÈí•Ôºàcr_ÂºÄÂ§¥Ôºâ

**2. GeminiË¥¶Âè∑Êé•ÂÖ•Ôºö**

```
# APIÂú∞ÂùÄ
http://‰Ω†ÁöÑÊúçÂä°Âô®:3000/gemini

# Ê®°ÂûãIDÁ§∫‰æã
gemini-2.5-pro             # Gemini 2.5 Pro
```

ÈÖçÁΩÆÊ≠•È™§Ôºö
- ‰æõÂ∫îÂïÜÁ±ªÂûãÈÄâÊã©&quot;Gemini&quot;
- APIÂú∞ÂùÄÂ°´ÂÖ•Ôºö`http://‰Ω†ÁöÑÊúçÂä°Âô®:3000/gemini`
- API KeyÂ°´ÂÖ•ÔºöÂêéÂè∞ÂàõÂª∫ÁöÑAPIÂØÜÈí•Ôºàcr_ÂºÄÂ§¥Ôºâ

**3. CodexÊé•ÂÖ•Ôºö**

```
# APIÂú∞ÂùÄ
http://‰Ω†ÁöÑÊúçÂä°Âô®:3000/openai

# Ê®°ÂûãIDÔºàÂõ∫ÂÆöÔºâ
gpt-5                      # Codex‰ΩøÁî®Âõ∫ÂÆöÊ®°ÂûãID
```

ÈÖçÁΩÆÊ≠•È™§Ôºö
- ‰æõÂ∫îÂïÜÁ±ªÂûãÈÄâÊã©&quot;Openai-Response&quot;
- APIÂú∞ÂùÄÂ°´ÂÖ•Ôºö`http://‰Ω†ÁöÑÊúçÂä°Âô®:3000/openai`
- API KeyÂ°´ÂÖ•ÔºöÂêéÂè∞ÂàõÂª∫ÁöÑAPIÂØÜÈí•Ôºàcr_ÂºÄÂ§¥Ôºâ
- **ÈáçË¶Å**ÔºöCodexÂè™ÊîØÊåÅOpenai-ResponseÊ†áÂáÜ


**Cherry Studio Âú∞ÂùÄÊ†ºÂºèÈáçË¶ÅËØ¥ÊòéÔºö**

- ‚úÖ **Êé®ËçêÊ†ºÂºè**Ôºö`http://‰Ω†ÁöÑÊúçÂä°Âô®:3000/claude`Ôºà‰∏çÂä†ÁªìÂ∞æ `/`ÔºåËÆ© Cherry Studio Ëá™Âä®Âä†‰∏ä v1Ôºâ
- ‚úÖ **Á≠âÊïàÊ†ºÂºè**Ôºö`http://‰Ω†ÁöÑÊúçÂä°Âô®:3000/claude/v1/`ÔºàÊâãÂä®ÊåáÂÆö v1 Âπ∂Âä†ÁªìÂ∞æ `/`Ôºâ
- üí° **ËØ¥Êòé**ÔºöËøô‰∏§ÁßçÊ†ºÂºèÂú® Cherry Studio ‰∏≠ÊòØÂÆåÂÖ®Á≠âÊïàÁöÑ
- ‚ùå **ÈîôËØØÊ†ºÂºè**Ôºö`http://‰Ω†ÁöÑÊúçÂä°Âô®:3000/claude/`ÔºàÂçïÁã¨ÁöÑ `/` ÁªìÂ∞æ‰ºöË¢´ Cherry Studio ÂøΩÁï• v1 ÁâàÊú¨Ôºâ

#### ÂÖ∂‰ªñÁ¨¨‰∏âÊñπÂ∑•ÂÖ∑Êé•ÂÖ•

**Êé•ÂÖ•Ë¶ÅÁÇπÔºö**

- ÊâÄÊúâË¥¶Âè∑Á±ªÂûãÈÉΩ‰ΩøÁî®Áõ∏ÂêåÁöÑAPIÂØÜÈí•ÔºàÂú®ÂêéÂè∞Áªü‰∏ÄÂàõÂª∫Ôºâ
- Ê†πÊçÆ‰∏çÂêåÁöÑË∑ØÁî±ÂâçÁºÄËá™Âä®ËØÜÂà´Ë¥¶Âè∑Á±ªÂûã
- `/claude/` - ‰ΩøÁî®ClaudeË¥¶Âè∑Ê±†
- `/droid/claude/` - ‰ΩøÁî®DroidÁ±ªÂûãClaudeË¥¶Âè∑Ê±†ÔºàÂè™Âª∫ËÆÆapiË∞ÉÁî®ÊàñDroid Cli‰∏≠‰ΩøÁî®Ôºâ
- `/gemini/` - ‰ΩøÁî®GeminiË¥¶Âè∑Ê±†  
- `/openai/` - ‰ΩøÁî®CodexË¥¶Âè∑ÔºàÂè™ÊîØÊåÅOpenai-ResponseÊ†ºÂºèÔºâ
- `/droid/openai/` - ‰ΩøÁî®DroidÁ±ªÂûãOpenAIÂÖºÂÆπË¥¶Âè∑Ê±†ÔºàÂè™Âª∫ËÆÆapiË∞ÉÁî®ÊàñDroid Cli‰∏≠‰ΩøÁî®Ôºâ
- ÊîØÊåÅÊâÄÊúâÊ†áÂáÜAPIÁ´ØÁÇπÔºàmessages„ÄÅmodelsÁ≠âÔºâ

**ÈáçË¶ÅËØ¥ÊòéÔºö**

- Á°Æ‰øùÂú®ÂêéÂè∞Â∑≤Ê∑ªÂä†ÂØπÂ∫îÁ±ªÂûãÁöÑË¥¶Âè∑ÔºàClaude/Gemini/CodexÔºâ
- APIÂØÜÈí•ÂèØ‰ª•ÈÄöÁî®ÔºåÁ≥ªÁªü‰ºöÊ†πÊçÆË∑ØÁî±Ëá™Âä®ÈÄâÊã©Ë¥¶Âè∑Á±ªÂûã
- Âª∫ËÆÆ‰∏∫‰∏çÂêåÁî®Êà∑ÂàõÂª∫‰∏çÂêåÁöÑAPIÂØÜÈí•‰æø‰∫é‰ΩøÁî®ÁªüËÆ°

---

## üîß Êó•Â∏∏Áª¥Êä§

### ÊúçÂä°ÁÆ°ÁêÜ

```bash
# Êü•ÁúãÊúçÂä°Áä∂ÊÄÅ
npm run service:status

# Êü•ÁúãÊó•Âøó
npm run service:logs

# ÈáçÂêØÊúçÂä°
npm run service:restart:daemon

# ÂÅúÊ≠¢ÊúçÂä°
npm run service:stop
```

### ÁõëÊéß‰ΩøÁî®ÊÉÖÂÜµ

- **WebÁïåÈù¢**: `http://‰Ω†ÁöÑÂüüÂêç:3000/web` - Êü•Áúã‰ΩøÁî®ÁªüËÆ°
- **ÂÅ•Â∫∑Ê£ÄÊü•**: `http://‰Ω†ÁöÑÂüüÂêç:3000/health` - Á°ÆËÆ§ÊúçÂä°Ê≠£Â∏∏
- **Êó•ÂøóÊñá‰ª∂**: `logs/` ÁõÆÂΩï‰∏ãÁöÑÂêÑÁßçÊó•ÂøóÊñá‰ª∂

### ÂçáÁ∫ßÊåáÂçó

ÂΩìÊúâÊñ∞ÁâàÊú¨ÂèëÂ∏ÉÊó∂ÔºåÊåâÁÖß‰ª•‰∏ãÊ≠•È™§ÂçáÁ∫ßÊúçÂä°Ôºö

```bash
# 1. ËøõÂÖ•È°πÁõÆÁõÆÂΩï
cd claude-relay-service

# 2. ÊãâÂèñÊúÄÊñ∞‰ª£Á†Å
git pull origin main

# Â¶ÇÊûúÈÅáÂà∞ package-lock.json ÂÜ≤Á™ÅÔºå‰ΩøÁî®ËøúÁ®ãÁâàÊú¨
git checkout --theirs package-lock.json
git add package-lock.json

# 3. ÂÆâË£ÖÊñ∞ÁöÑ‰æùËµñÔºàÂ¶ÇÊûúÊúâÔºâ
npm install

# 4. ÂÆâË£ÖÂπ∂ÊûÑÂª∫ÂâçÁ´Ø
npm run install:web
npm run build:web

# 5. ÈáçÂêØÊúçÂä°
npm run service:restart:daemon

# 6. Ê£ÄÊü•ÊúçÂä°Áä∂ÊÄÅ
npm run service:status
```

**Ê≥®ÊÑè‰∫ãÈ°πÔºö**

- ÂçáÁ∫ßÂâçÂª∫ËÆÆÂ§á‰ªΩÈáçË¶ÅÈÖçÁΩÆÊñá‰ª∂Ôºà.env, config/config.jsÔºâ
- Êü•ÁúãÊõ¥Êñ∞Êó•Âøó‰∫ÜËß£ÊòØÂê¶ÊúâÁ†¥ÂùèÊÄßÂèòÊõ¥
- Â¶ÇÊûúÊúâÊï∞ÊçÆÂ∫ìÁªìÊûÑÂèòÊõ¥Ôºå‰ºöËá™Âä®ËøÅÁßª

---

## üîí ÂÆ¢Êà∑Á´ØÈôêÂà∂ÂäüËÉΩ

### ÂäüËÉΩËØ¥Êòé

ÂÆ¢Êà∑Á´ØÈôêÂà∂ÂäüËÉΩÂÖÅËÆ∏‰Ω†ÊéßÂà∂ÊØè‰∏™API KeyÂèØ‰ª•Ë¢´Âì™‰∫õÂÆ¢Êà∑Á´Ø‰ΩøÁî®ÔºåÈÄöËøáUser-AgentËØÜÂà´ÂÆ¢Êà∑Á´ØÔºåÊèêÈ´òAPIÁöÑÂÆâÂÖ®ÊÄß„ÄÇ

### ‰ΩøÁî®ÊñπÊ≥ï

1. **Âú®ÂàõÂª∫ÊàñÁºñËæëAPI KeyÊó∂ÂêØÁî®ÂÆ¢Êà∑Á´ØÈôêÂà∂**Ôºö
   - ÂãæÈÄâ&quot;ÂêØÁî®ÂÆ¢Êà∑Á´ØÈôêÂà∂&quot;
   - ÈÄâÊã©ÂÖÅËÆ∏ÁöÑÂÆ¢Êà∑Á´ØÔºàÊîØÊåÅÂ§öÈÄâÔºâ

2. **È¢ÑÂÆö‰πâÂÆ¢Êà∑Á´Ø**Ôºö
   - **ClaudeCode**: ÂÆòÊñπClaude CLIÔºàÂåπÈÖç `claude-cli/x.x.x (external, cli)` Ê†ºÂºèÔºâ
   - **Gemini-CLI**: GeminiÂëΩ‰ª§Ë°åÂ∑•ÂÖ∑ÔºàÂåπÈÖç `GeminiCLI/vx.x.x (platform; arch)` Ê†ºÂºèÔºâ

3. **Ë∞ÉËØïÂíåËØäÊñ≠**Ôºö
   - Á≥ªÁªü‰ºöÂú®Êó•Âøó‰∏≠ËÆ∞ÂΩïÊâÄÊúâËØ∑Ê±ÇÁöÑUser-Agent
   - ÂÆ¢Êà∑Á´ØÈ™åËØÅÂ§±Ë¥•Êó∂‰ºöËøîÂõû403ÈîôËØØÂπ∂ËÆ∞ÂΩïËØ¶ÁªÜ‰ø°ÊÅØ
   - ÈÄöËøáÊó•ÂøóÂèØ‰ª•Êü•ÁúãÂÆûÈôÖÁöÑUser-AgentÊ†ºÂºèÔºåÊñπ‰æøÈÖçÁΩÆËá™ÂÆö‰πâÂÆ¢Êà∑Á´Ø


### Êó•ÂøóÁ§∫‰æã

ËÆ§ËØÅÊàêÂäüÊó∂ÁöÑÊó•ÂøóÔºö

```
üîì Authenticated request from key: ÊµãËØïKey (key-id) in 5ms
   User-Agent: &quot;claude-cli/1.0.58 (external, cli)&quot;
```

ÂÆ¢Êà∑Á´ØÈôêÂà∂Ê£ÄÊü•Êó•ÂøóÔºö

```
üîç Checking client restriction for key: key-id (ÊµãËØïKey)
   User-Agent: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64)&quot;
   Allowed clients: claude_code, gemini_cli
üö´ Client restriction failed for key: key-id (ÊµãËØïKey) from 127.0.0.1, User-Agent: Mozilla/5.0...
```

### Â∏∏ËßÅÈóÆÈ¢òÂ§ÑÁêÜ

**RedisËøû‰∏ç‰∏äÔºü**

```bash
# Ê£ÄÊü•RedisÊòØÂê¶ÂêØÂä®
redis-cli ping

# Â∫îËØ•ËøîÂõû PONG
```

**OAuthÊéàÊùÉÂ§±Ë¥•Ôºü**

- Ê£ÄÊü•‰ª£ÁêÜËÆæÁΩÆÊòØÂê¶Ê≠£Á°Æ
- Á°Æ‰øùËÉΩÊ≠£Â∏∏ËÆøÈóÆ claude.ai
- Ê∏ÖÈô§ÊµèËßàÂô®ÁºìÂ≠òÈáçËØï

**APIËØ∑Ê±ÇÂ§±Ë¥•Ôºü**

- Ê£ÄÊü•API KeyÊòØÂê¶Ê≠£Á°Æ
- Êü•ÁúãÊó•ÂøóÊñá‰ª∂ÊâæÈîôËØØ‰ø°ÊÅØ
- Á°ÆËÆ§ClaudeË¥¶Êà∑Áä∂ÊÄÅÊ≠£Â∏∏

---

## üõ†Ô∏è ËøõÈò∂

### ÂèçÂêë‰ª£ÁêÜÈÉ®ÁΩ≤ÊåáÂçó

Âú®Áîü‰∫ßÁéØÂ¢É‰∏≠ÔºåÂª∫ËÆÆÈÄöËøáÂèçÂêë‰ª£ÁêÜËøõË°åËøûÊé•Ôºå‰ª•‰æø‰ΩøÁî®Ëá™Âä® HTTPS„ÄÅÂÆâÂÖ®Â§¥ÈÉ®ÂíåÊÄßËÉΩ‰ºòÂåñ„ÄÇ‰∏ãÈù¢Êèê‰æõ‰∏§ÁßçÂ∏∏Áî®ÊñπÊ°àÔºö **Caddy** Âíå **Nginx Proxy Manager (NPM)**„ÄÇ

---

## Caddy ÊñπÊ°à

Caddy ÊòØ‰∏ÄÊ¨æËá™Âä®ÁÆ°ÁêÜ HTTPS ËØÅ‰π¶ÁöÑ Web ÊúçÂä°Âô®ÔºåÈÖçÁΩÆÁÆÄÂçï„ÄÅÊÄßËÉΩ‰ºòÁßÄÔºåÂæàÈÄÇÂêà‰∏çÈúÄË¶Å Docker ÁéØÂ¢ÉÁöÑÈÉ®ÁΩ≤ÊñπÊ°à„ÄÇ

**1. ÂÆâË£Ö Caddy**

```bash
# Ubuntu/Debian
sudo apt install -y debian-keyring debian-archive-keyring apt-transport-https
curl -1sLf &#039;https://dl.cloudsmith.io/public/caddy/stable/gpg.key&#039; | sudo gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg
curl -1sLf &#039;https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt&#039; | sudo tee /etc/apt/sources.list.d/caddy-stable.list
sudo apt update
sudo apt install caddy

# CentOS/RHEL/Fedora
sudo yum install yum-plugin-copr
sudo yum copr enable @caddy/caddy
sudo yum install caddy
```

**2. Caddy ÈÖçÁΩÆ**

ÁºñËæë `/etc/caddy/Caddyfile` Ôºö

```caddy
your-domain.com {
    # ÂèçÂêë‰ª£ÁêÜÂà∞Êú¨Âú∞ÊúçÂä°
    reverse_proxy 127.0.0.1:3000 {
        # ÊîØÊåÅÊµÅÂºèÂìçÂ∫îÊàñ SSE
        flush_interval -1

        # ‰º†ÈÄíÁúüÂÆû IP
        header_up X-Real-IP {remote_host}
        header_up X-Forwarded-For {remote_host}
        header_up X-Forwarded-Proto {scheme}

        # ÈïøËØª/ÂÜôË∂ÖÊó∂ÈÖçÁΩÆ
        transport http {
            read_timeout 300s
            write_timeout 300s
            dial_timeout 30s
        }
    }

    # ÂÆâÂÖ®Â§¥ÈÉ®
    header {
        Strict-Transport-Security &quot;max-age=31536000; includeSubDomains&quot;
        X-Frame-Options &quot;DENY&quot;
        X-Content-Type-Options &quot;nosniff&quot;
        -Server
    }
}
```

**3. ÂêØÂä® Caddy**

```bash
sudo caddy validate --config /etc/caddy/Caddyfile
sudo systemctl start caddy
sudo systemctl enable caddy
sudo systemctl status caddy
```

**4. ÊúçÂä°ÈÖçÁΩÆ**

Caddy ‰ºöËá™Âä®ÁÆ°ÁêÜ HTTPSÔºåÂõ†Ê≠§ÂèØ‰ª•Â∞ÜÊúçÂä°ÈôêÂà∂Âú®Êú¨Âú∞ËøõË°åÁõëÂê¨Ôºö

```javascript
// config/config.js
module.exports = {
  server: {
    port: 3000,
    host: &#039;127.0.0.1&#039; // Âè™ÁõëÂê¨Êú¨Âú∞
  }
}
```

**Caddy ÁâπÁÇπ**

* üîí Ëá™Âä® HTTPSÔºåÈõ∂ÈÖçÁΩÆËØÅ‰π¶ÁÆ°ÁêÜ
* üõ°Ô∏è ÂÆâÂÖ®ÈªòËÆ§ÈÖçÁΩÆÔºåÂêØÁî®Áé∞‰ª£ TLS Â•ó‰ª∂
* ‚ö° HTTP/2 ÂíåÊµÅÂºè‰º†ËæìÊîØÊåÅ
* üîß ÈÖçÁΩÆÊñá‰ª∂ÁÆÄÊ¥ÅÔºåÊòì‰∫éÁª¥Êä§

---

## Nginx Proxy Manager (NPM) ÊñπÊ°à

Nginx Proxy Manager ÈÄöËøáÂõæÂΩ¢ÂåñÁïåÈù¢ÁÆ°ÁêÜÂèçÂêë‰ª£ÁêÜÂíå HTTPS ËØÅ‰π¶Ôºå‰∏¶‰ª• Docker ÂÆπÂô®ÈÉ®ÁΩ≤„ÄÇ

**1. Âú® NPM ÂàõÂª∫Êñ∞ÁöÑ Proxy Host**

Details ÈÖçÁΩÆÂ¶Ç‰∏ãÔºö

| È°πÁõÆ                    | ËÆæÁΩÆ                      |
| --------------------- | ----------------------- |
| Domain Names          | relay.example.com       |
| Scheme                | http                    |
| Forward Hostname / IP | 192.168.0.1 (docker Êú∫Âô® IP) |
| Forward Port          | 3000                    |
| Block Common Exploits | ‚òëÔ∏è                      |
| Websockets Support    | ‚ùå **ÂÖ≥Èó≠**                |
| Cache Assets          | ‚ùå **ÂÖ≥Èó≠**                |
| Access List           | Publicly Accessible     |

&gt; Ê≥®ÊÑèÔºö
&gt; - ËØ∑Á°Æ‰øù Claude Relay Service **ÁõëÂê¨ host ‰∏∫ `0.0.0.0` „ÄÅÂÆπÂô® IP ÊàñÊú¨Êú∫ IP**Ôºå‰ª•‰æø NPM ÂÆûÁé∞ÂÜÖÁΩëËøûÊé•„ÄÇ
&gt; - **Websockets Support Âíå Cache Assets ÂøÖÈ°ªÂÖ≥Èó≠**ÔºåÂê¶Âàô‰ºöÂØºËá¥ SSE / ÊµÅÂºèÂìçÂ∫îÂ§±Ë¥•„ÄÇ

**2. Custom locations**

ÁÑ°ÈúÄÊ∑ªÂä†‰ªª‰ΩïÂÜÖÂÆπÔºå‰øùÊåÅ‰∏∫Á©∫„ÄÇ

**3. SSL ËÆæÁΩÆ**

* **SSL Certificate**: Request a new SSL Certificate (Let&#039;s Encrypt) ÊàñÂ∑≤ÊúâËØÅ‰π¶
* ‚òëÔ∏è **Force SSL**
* ‚òëÔ∏è **HTTP/2 Support**
* ‚òëÔ∏è **HSTS Enabled**
* ‚òëÔ∏è **HSTS Subdomains**

**4. Advanced ÈÖçÁΩÆ**

Custom Nginx Configuration ‰∏≠Ê∑ªÂä†‰ª•‰∏ãÂÜÖÂÆπÔºö

```nginx
# ‰º†ÈÄíÁúüÂÆûÁî®Êà∑ IP
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;

# ÊîØÊåÅ WebSocket / SSE Á≠âÊµÅÂºèÈÄö‰ø°
proxy_http_version 1.1;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection &quot;upgrade&quot;;
proxy_buffering off;

# ÈïøËøûÊé• / Ë∂ÖÊó∂ËÆæÁΩÆÔºàÈÄÇÂêà AI ËÅäÂ§©ÊµÅÂºè‰º†ËæìÔºâ
proxy_read_timeout 300s;
proxy_send_timeout 300s;
proxy_connect_timeout 30s;

# ---- ÂÆâÂÖ®ÊÄßËÆæÁΩÆ ----
# ‰∏•Ê†º HTTPS Á≠ñÁï• (HSTS)
add_header Strict-Transport-Security &quot;max-age=31536000; includeSubDomains&quot; always;

# ÈòªÊå°ÁÇπÂáªÂä´ÊåÅ‰∏éÂÜÖÂÆπÂóÖÊé¢
add_header X-Frame-Options &quot;DENY&quot; always;
add_header X-Content-Type-Options &quot;nosniff&quot; always;

# Referrer / Permissions ÈôêÂà∂Á≠ñÁï•
add_header Referrer-Policy &quot;no-referrer-when-downgrade&quot; always;
add_header Permissions-Policy &quot;camera=(), microphone=(), geolocation=()&quot; always;

# ÈöêËóèÊúçÂä°Âô®‰ø°ÊÅØÔºàÁ≠âÊïà‰∫é Caddy ÁöÑ `-Server`Ôºâ
proxy_hide_header Server;

# ---- ÊÄßËÉΩÂæÆË∞É ----
# ÂÖ≥Èó≠‰ª£ÁêÜÁ´ØÁºìÂ≠òÔºåÁ°Æ‰øùÂç≥Êó∂ÂìçÂ∫îÔºàSSE / StreamingÔºâ
proxy_cache_bypass $http_upgrade;
proxy_no_cache $http_upgrade;
proxy_request_buffering off;
```

**4. ÂêØÂä®ÂíåÈ™åËØÅ**

* ‰øùÂ≠òÂêéÁ≠âÂæÖ NPM Ëá™Âä®Áî≥ËØ∑ Let&#039;s Encrypt ËØÅ‰π¶ÔºàÂ¶ÇÊûúÊúâÔºâ„ÄÇ
* Dashboard ‰∏≠Êü•Áúã Proxy Host Áä∂ÊÄÅÔºåÁ°Æ‰øùÊòæÁ§∫‰∏∫ &quot;Online&quot;„ÄÇ
* ËÆøÈóÆ `https://relay.example.com`ÔºåÂ¶ÇÊûúÊòæÁ§∫ÁªøËâ≤ÈîÅÂõæÊ†áÂç≥Ë°®Á§∫ HTTPS Ê≠£Â∏∏„ÄÇ

**NPM ÁâπÁÇπ**

* üîí Ëá™Âä®Áî≥ËØ∑ÂíåÁª≠ÊúüËØÅ‰π¶
* üîß ÂõæÂΩ¢ÂåñÁïåÈù¢ÔºåÊñπ‰æøÁÆ°ÁêÜÂ§öÊúçÂä°
* ‚ö° ÂéüÁîüÊîØÊåÅ HTTP/2 / HTTPS
* üöÄ ÈÄÇÂêà Docker ÂÆπÂô®ÈÉ®ÁΩ≤

---

‰∏äËø∞‰∏§ÁßçÊñπÊ°àÂùáÂèØÁî®‰∫éÁîü‰∫ßÈÉ®ÁΩ≤„ÄÇ

---

## üí° ‰ΩøÁî®Âª∫ËÆÆ

### Ë¥¶Êà∑ÁÆ°ÁêÜ

- **ÂÆöÊúüÊ£ÄÊü•**: ÊØèÂë®ÁúãÁúãË¥¶Êà∑Áä∂ÊÄÅÔºåÂèäÊó∂Â§ÑÁêÜÂºÇÂ∏∏
- **ÂêàÁêÜÂàÜÈÖç**: ÂèØ‰ª•Áªô‰∏çÂêåÁöÑ‰∫∫ÂàÜÈÖç‰∏çÂêåÁöÑapikeyÔºåÂèØ‰ª•Ê†πÊçÆ‰∏çÂêåÁöÑapikeyÊù•ÂàÜÊûêÁî®Èáè

### ÂÆâÂÖ®Âª∫ËÆÆ

- **‰ΩøÁî®HTTPS**: Âº∫ÁÉàÂª∫ËÆÆ‰ΩøÁî®CaddyÂèçÂêë‰ª£ÁêÜÔºàËá™Âä®HTTPSÔºâÔºåÁ°Æ‰øùÊï∞ÊçÆ‰º†ËæìÂÆâÂÖ®
- **ÂÆöÊúüÂ§á‰ªΩ**: ÈáçË¶ÅÈÖçÁΩÆÂíåÊï∞ÊçÆË¶ÅÂ§á‰ªΩ
- **ÁõëÊéßÊó•Âøó**: ÂÆöÊúüÊü•ÁúãÂºÇÂ∏∏Êó•Âøó
- **Êõ¥Êñ∞ÂØÜÈí•**: ÂÆöÊúüÊõ¥Êç¢JWTÂíåÂä†ÂØÜÂØÜÈí•
- **Èò≤ÁÅ´Â¢ôËÆæÁΩÆ**: Âè™ÂºÄÊîæÂøÖË¶ÅÁöÑÁ´ØÂè£Ôºà80, 443ÔºâÔºåÈöêËóèÁõ¥Êé•ÊúçÂä°Á´ØÂè£

---

## üÜò ÈÅáÂà∞ÈóÆÈ¢òÊÄé‰πàÂäûÔºü

### Ëá™Âä©ÊéíÊü•

1. **Êü•ÁúãÊó•Âøó**: `logs/` ÁõÆÂΩï‰∏ãÁöÑÊó•ÂøóÊñá‰ª∂
2. **Ê£ÄÊü•ÈÖçÁΩÆ**: Á°ÆËÆ§ÈÖçÁΩÆÊñá‰ª∂ËÆæÁΩÆÊ≠£Á°Æ
3. **ÊµãËØïËøûÈÄöÊÄß**: Áî® curl ÊµãËØïAPIÊòØÂê¶Ê≠£Â∏∏
4. **ÈáçÂêØÊúçÂä°**: ÊúâÊó∂ÂÄôÈáçÂêØ‰∏Ä‰∏ãÂ∞±Â•Ω‰∫Ü

### ÂØªÊ±ÇÂ∏ÆÂä©

- **GitHub Issues**: Êèê‰∫§ËØ¶ÁªÜÁöÑÈîôËØØ‰ø°ÊÅØ
- **Êü•ÁúãÊñáÊ°£**: ‰ªîÁªÜÈòÖËØªÈîôËØØ‰ø°ÊÅØÂíåÊñáÊ°£
- **Á§æÂå∫ËÆ®ËÆ∫**: ÁúãÁúãÂÖ∂‰ªñ‰∫∫ÊòØÂê¶ÈÅáÂà∞Á±ª‰ººÈóÆÈ¢ò

---

## üìÑ ËÆ∏ÂèØËØÅ

Êú¨È°πÁõÆÈááÁî® [MITËÆ∏ÂèØËØÅ](LICENSE)„ÄÇ

---

&lt;div align=&quot;center&quot;&gt;

**‚≠ê ËßâÂæóÊúâÁî®ÁöÑËØùÁªô‰∏™StarÂëóÔºåËøôÊòØÂØπ‰ΩúËÄÖÊúÄÂ§ßÁöÑÈºìÂä±ÔºÅ**

**ü§ù ÊúâÈóÆÈ¢òÊ¨¢ËøéÊèêIssueÔºåÊúâÊîπËøõÂª∫ËÆÆÊ¨¢ËøéPR**

&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[swagger-api/swagger-ui]]></title>
            <link>https://github.com/swagger-api/swagger-ui</link>
            <guid>https://github.com/swagger-api/swagger-ui</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:46 GMT</pubDate>
            <description><![CDATA[Swagger UI is a collection of HTML, JavaScript, and CSS assets that dynamically generate beautiful documentation from a Swagger-compliant API.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/swagger-api/swagger-ui">swagger-api/swagger-ui</a></h1>
            <p>Swagger UI is a collection of HTML, JavaScript, and CSS assets that dynamically generate beautiful documentation from a Swagger-compliant API.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 28,292</p>
            <p>Forks: 9,237</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre># &lt;img src=&quot;https://raw.githubusercontent.com/swagger-api/swagger.io/wordpress/images/assets/SWU-logo-clr.png&quot; width=&quot;300&quot;&gt;

[![NPM version](https://badge.fury.io/js/swagger-ui.svg)](http://badge.fury.io/js/swagger-ui)
[![Build Status](https://jenkins.swagger.io/view/OSS%20-%20JavaScript/job/oss-swagger-ui-master/badge/icon?subject=jenkins%20build)](https://jenkins.swagger.io/view/OSS%20-%20JavaScript/job/oss-swagger-ui-master/)
[![npm audit](https://jenkins.swagger.io/buildStatus/icon?job=oss-swagger-ui-security-audit&amp;subject=npm%20audit)](https://jenkins.swagger.io/job/oss-swagger-ui-security-audit/lastBuild/console)
[![total GitHub contributors](https://img.shields.io/github/contributors-anon/swagger-api/swagger-ui.svg)](https://github.com/swagger-api/swagger-ui/graphs/contributors)

[![monthly npm installs](https://img.shields.io/npm/dm/swagger-ui.svg?label=npm%20downloads)](https://www.npmjs.com/package/swagger-ui)
![docker registry](https://img.shields.io/badge/docker-docker.swagger.io%2Fswaggerapi%2Fswagger--ui-blue)
![monthly packagist installs](https://img.shields.io/packagist/dm/swagger-api/swagger-ui.svg?label=packagist%20installs)
[![gzip size](https://img.shields.io/bundlephobia/minzip/swagger-ui.svg?label=gzip%20size)](https://bundlephobia.com/package/swagger-ui)

## Introduction
[Swagger UI](https://swagger.io/tools/swagger-ui/) allows anyone ‚Äî be it your development team or your end consumers ‚Äî to visualize and interact with the API‚Äôs resources without having any of the implementation logic in place. It‚Äôs automatically generated from your OpenAPI (formerly known as Swagger) Specification, with the visual documentation making it easy for back end implementation and client side consumption.

## General
**üëâüèº Want to score an easy open-source contribution?** Check out our [Good first issue](https://github.com/swagger-api/swagger-ui/issues?q=is%3Aissue+is%3Aopen+label%3A%22Good+first+issue%22) label.

**üï∞Ô∏è Looking for the older version of Swagger UI?** Refer to the [*2.x* branch](https://github.com/swagger-api/swagger-ui/tree/2.x).


This repository publishes three different NPM modules:

* [swagger-ui](https://www.npmjs.com/package/swagger-ui) is a traditional npm module intended for use in single-page applications that are capable of resolving dependencies (via Webpack, Browserify, etc.).
* [swagger-ui-dist](https://www.npmjs.com/package/swagger-ui-dist) is a dependency-free module that includes everything you need to serve Swagger UI in a server-side project, or a single-page application that can&#039;t resolve npm module dependencies.
* [swagger-ui-react](https://www.npmjs.com/package/swagger-ui-react) is Swagger UI packaged as a React component for use in React applications.

We strongly suggest that you use `swagger-ui` instead of `swagger-ui-dist` if you&#039;re building a single-page application, since `swagger-ui-dist` is significantly larger.

If you are looking for plain ol&#039; HTML/JS/CSS, [download the latest release](https://github.com/swagger-api/swagger-ui/releases/latest) and copy the contents of the `/dist` folder to your server.


## Compatibility
The OpenAPI Specification has undergone 5 revisions since initial creation in 2010.  Compatibility between Swagger UI and the OpenAPI Specification is as follows:

| Swagger UI Version | Release Date | OpenAPI Spec compatibility                           | Notes                                                                 |
|--------------------|--------------|------------------------------------------------------|-----------------------------------------------------------------------|
| 5.19.0             | 2025-02-17   | 2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.0.4, 3.1.0, 3.1.1 | [tag v5.19.0](https://github.com/swagger-api/swagger-ui/tree/v5.19.0) |
| 5.0.0              | 2023-06-12   | 2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.1.0               | [tag v5.0.0](https://github.com/swagger-api/swagger-ui/tree/v5.0.0)   |
| 4.0.0              | 2021-11-03   | 2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3                      | [tag v4.0.0](https://github.com/swagger-api/swagger-ui/tree/v4.0.0)   |
| 3.18.3             | 2018-08-03   | 2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3                      | [tag v3.18.3](https://github.com/swagger-api/swagger-ui/tree/v3.18.3) |
| 3.0.21             | 2017-07-26   | 2.0                                                  | [tag v3.0.21](https://github.com/swagger-api/swagger-ui/tree/v3.0.21) |
| 2.2.10             | 2017-01-04   | 1.1, 1.2, 2.0                                        | [tag v2.2.10](https://github.com/swagger-api/swagger-ui/tree/v2.2.10) |
| 2.1.5              | 2016-07-20   | 1.1, 1.2, 2.0                                        | [tag v2.1.5](https://github.com/swagger-api/swagger-ui/tree/v2.1.5)   |
| 2.0.24             | 2014-09-12   | 1.1, 1.2                                             | [tag v2.0.24](https://github.com/swagger-api/swagger-ui/tree/v2.0.24) |
| 1.0.13             | 2013-03-08   | 1.1, 1.2                                             | [tag v1.0.13](https://github.com/swagger-api/swagger-ui/tree/v1.0.13) |
| 1.0.1              | 2011-10-11   | 1.0, 1.1                                             | [tag v1.0.1](https://github.com/swagger-api/swagger-ui/tree/v1.0.1)   |

## Anonymized analytics

SwaggerUI uses [Scarf](https://scarf.sh/) to collect [anonymized installation analytics](https://github.com/scarf-sh/scarf-js?tab=readme-ov-file#as-a-user-of-a-package-using-scarf-js-what-information-does-scarf-js-send-about-me). These analytics help support the maintainers of this library and ONLY run during installation. To [opt out](https://github.com/scarf-sh/scarf-js?tab=readme-ov-file#as-a-user-of-a-package-using-scarf-js-how-can-i-opt-out-of-analytics), you can set the `scarfSettings.enabled` field to `false` in your project&#039;s `package.json`:

```
// package.json
{
  // ...
  &quot;scarfSettings&quot;: {
    &quot;enabled&quot;: false
  }
  // ...
}
```

Alternatively, you can set the environment variable `SCARF_ANALYTICS` to `false` as part of the environment that installs your npm packages, e.g., `SCARF_ANALYTICS=false npm install`.

## Documentation

#### Usage
- [Installation](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/installation.md)
- [Configuration](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/configuration.md)
- [CORS](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/cors.md)
- [OAuth2](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/oauth2.md)
- [Deep Linking](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/deep-linking.md)
- [Limitations](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/limitations.md)
- [Version detection](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/version-detection.md)

#### Customization
- [Overview](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/customization/overview.md)
- [Plugin API](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/customization/plugin-api.md)
- [Custom layout](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/customization/custom-layout.md)

#### Development
- [Setting up](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/development/setting-up.md)
- [Scripts](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/development/scripts.md)

#### Contributing
- [Contributing](https://github.com/swagger-api/.github/blob/HEAD/CONTRIBUTING.md)

##### Integration Tests

You will need JDK of version 7 or higher as instructed here
https://nightwatchjs.org/guide/getting-started/installation.html#install-selenium-server

Integration tests can be run locally with `npm run e2e` - be sure you aren&#039;t running a dev server when testing!

### Browser support
Swagger UI works in the latest versions of Chrome, Safari, Firefox, and Edge.

### Known Issues

To help with the migration, here are the currently known issues with 3.X. This list will update regularly, and will not include features that were not implemented in previous versions.

- Only part of the parameters previously supported are available.
- The JSON Form Editor is not implemented.
- Support for `collectionFormat` is partial.
- l10n (translations) is not implemented.
- Relative path support for external files is not implemented.

## Security contact

Please disclose any security-related issues or vulnerabilities by emailing [security@swagger.io](mailto:security@swagger.io), instead of using the public issue tracker.

## License

SwaggerUI is licensed under [Apache 2.0 license](https://github.com/swagger-api/swagger-ui/blob/master/LICENSE).
SwaggerUI comes with an explicit [NOTICE](https://github.com/swagger-api/swagger-ui/blob/master/NOTICE) file
containing additional legal notices and information.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[qeeqbox/social-analyzer]]></title>
            <link>https://github.com/qeeqbox/social-analyzer</link>
            <guid>https://github.com/qeeqbox/social-analyzer</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:45 GMT</pubDate>
            <description><![CDATA[API, CLI, and Web App for analyzing and finding a person's profile in 1000 social media \ websites]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/qeeqbox/social-analyzer">qeeqbox/social-analyzer</a></h1>
            <p>API, CLI, and Web App for analyzing and finding a person's profile in 1000 social media \ websites</p>
            <p>Language: JavaScript</p>
            <p>Stars: 16,983</p>
            <p>Forks: 1,381</p>
            <p>Stars today: 300 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/socialanalyzerlogo_.png&quot;&gt;&lt;/p&gt;

Social Analyzer - API, CLI, and Web App for analyzing &amp; finding a person&#039;s profile across +1000 social media \ websites. It includes different analysis and detection modules, and you can choose which modules to use during the investigation process.

The detection modules utilize a rating mechanism based on different detection techniques, which produces a rate value that starts from 0 to 100 (No-Maybe-Yes). This module is intended to have fewer false positives.

The analysis and public extracted information from this OSINT tool could help investigate profiles related to suspicious or malicious activities such as cyberbullying, cyber grooming, cyberstalking, and spreading misinformation.

`This project is currently used by some law enforcement agencies in countries where resources are limited - The detection database is different than the one shared here..`

## So¬∑cial Me¬∑di¬∑a
Websites and applications that enable users to create and share content or to participate in social networking - Oxford Dictionary

## Structure
&lt;img src=&quot;https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/structure.png&quot;&gt;


## APP (Preferred!)
Standard localhost WEB APP url: http://0.0.0.0:9005/app.html

&lt;img src=&quot;https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/intro_fast.gif&quot; style=&quot;max-width:768px&quot;/&gt;

## CLI 
&lt;img src=&quot;https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/cli.gif&quot; style=&quot;max-width:768px&quot;/&gt;

## Features
- String &amp; name analysis (Permutations and Combinations)
- Find a profile using multiple techniques (HTTPS library &amp; Webdriver)
- Multi profile search (Used for correlation - any combination separated with &quot;,&quot; )
- Multilayers detections (OCR, normal, advanced &amp; special)
- Visualized profile information using Ixora (Metadata &amp; Patterns)
- Metadata &amp; Patterns extraction (Added from Qeeqbox OSINT project)
- Force-directed Graph for Metadata (Needs ExtractPatterns)
- Search by top ranking or by country (Alexa Ranking)
- Search by type (adult, music, etc.. - automated websites stats)
- Profiles stats and static info (Category country)
- Cross Metadata stats (Added from Qeeqbox OSINT project)
- Auto-flirtation to unnecessary output (Enable javascript etc..)
- Search engine lookup (Google API - optional)
- Custom search queries (Google API &amp; DuckDuckGo API - optional)
- Profile screenshot, title, info, and website description
- Find name origins, name similarity &amp; common words by language
- Find possible profile\person age (Limited analysis)
- Custom user-agent, proxy, timeout &amp; implicit wait
- Python CLI &amp; NodeJS CLI (limited to FindUserProfilesFast option)
- Screenshots of detected profile (The latest version of Chrome must be installed)
- Grid option for faster checking (limited to docker-compose)
- Dump logs to folder or terminal (prettified)
- Adjust finding\getting profile workers (default 15)
- Re-checking option for failed profiles
- Filter profiles by good, maybe, and bad
- Save the analysis as a JSON file
- Simplified web interface and CLI
- And, more!!

## Special Detections
- Facebook (Phone number, name, or profile name)
- Gmail (example@gmail.com)
- Google (example@example.com)

## Install &amp; Run
### Linux (As Node WebApp)
```bash
sudo apt-get update
#Depedning on your Linux distro, you may or may not need these 2 lines
sudo DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common
sudo add-apt-repository ppa:mozillateam/ppa -y
sudo apt-get install -y firefox-esr tesseract-ocr git nodejs npm
git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
npm update
npm install
npm start
```

### Linux (As Node CLI)
```bash
sudo apt-get update
#Depedning on your Linux distro, you may or may not need these 2 lines
sudo DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common
sudo add-apt-repository ppa:mozillateam/ppa -y
sudo apt-get install -y firefox-esr tesseract-ocr git nodejs npm
git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
npm install
nodejs app.js --username &quot;johndoe&quot;
#or
nodejs app.js --username &quot;johndoe,janedoe&quot; --metadata
#or
nodejs app.js --username &quot;johndoe,janedoe&quot; --metadata --top 100
#or
nodejs app.js --username &quot;johndoe&quot; --type &quot;adult&quot;
```

### Linux (As python package)
```bash
sudo apt-get update
sudo apt-get install python3 python3-pip
pip3 install social-analyzer
python3 -m social-analyzer --username &quot;johndoe&quot;
#or
python3 -m social-analyzer --username &quot;johndoe&quot; --metadata
#or
python3 -m social-analyzer --username &quot;johndoe&quot; --metadata --top 100
#or
python3 -m social-analyzer --username &quot;johndoe&quot; --type &quot;adult&quot;
#or
python3 -m social-analyzer --username &quot;johndoe&quot; --websites &quot;car&quot; --logs --screenshots
```

### Linux (As python script)
```bash
sudo apt-get update
sudo apt-get install git python3 python3-pip
git clone https://github.com/qeeqbox/social-analyzer
cd social-analyzer
pip3 install -r requirements.txt
python3 app.py --username &quot;janedoe&quot;
#or
python3 app.py --username &quot;johndoe&quot; --metadata
#or
python3 app.py --username &quot;johndoe&quot; --metadata --top 100
#or
python3 app.py --username &quot;johndoe&quot; --type &quot;adult&quot;
#or
python3 app.py --username &quot;johndoe&quot; --websites &quot;car&quot; --logs --screenshots
```

### Importing as object (python)
```python

#E.g. #1
from importlib import import_module
SocialAnalyzer = import_module(&quot;social-analyzer&quot;).SocialAnalyzer()
results = SocialAnalyzer.run_as_object(username=&quot;johndoe&quot;,silent=True)
print(results)

#E.g. #2
from importlib import import_module
SocialAnalyzer = import_module(&quot;social-analyzer&quot;).SocialAnalyzer()
results = SocialAnalyzer.run_as_object(username=&quot;johndoe,janedoe&quot;,silent=True,output=&quot;json&quot;,filter=&quot;good&quot;,metadata=False,timeout=10, profiles=&quot;detected&quot;)
print(results)
```

### Linux, Windows, MacOS, Raspberry pi..
- check this [wiki](https://github.com/qeeqbox/social-analyzer/wiki/install) for all possible installation methods
- check this [wiki](https://github.com/qeeqbox/social-analyzer/wiki/integration) for integrating social-analyzer with your OSINT tools, feeds, etc...

## social-analyzer --h
```
Required Arguments:
  --username   E.g. johndoe, john_doe or johndoe9999

Optional Arguments:
  --websites    A website or websites separated by space E.g. youtube, tiktokor tumblr
  --mode        Analysis mode E.g.fast -&gt; FindUserProfilesFast, slow -&gt; FindUserProfilesSlow or special -&gt; FindUserProfilesSpecial
  --output      Show the output in the following format: json -&gt; json outputfor integration or pretty -&gt; prettify the output
  --options     Show the following when a profile is found: link, rate, titleor text
  --method      find -&gt; show detected profiles, get -&gt; show all profiles regardless detected or not, all -&gt; combine find &amp; get
  --filter      Filter detected profiles by good, maybe or bad, you can do combine them with comma (good,bad) or use all
  --profiles    Filter profiles by detected, unknown or failed, you can do combine them with comma (detected,failed) or use all
  --countries   select websites by country or countries separated by space as: us br ru
  --type        Select websites by type (Adult, Music etc)
  --top         select top websites as 10, 50 etc...[--websites is not needed]
  --extract     Extract profiles, urls &amp; patterns if possible
  --metadata    Extract metadata if possible (pypi QeeqBox OSINT)
  --trim        Trim long strings
  --gui         Reserved for a gui (Not implemented)
  --cli         Reserved for a cli (Not needed)

Listing websites &amp; detections:
  --list        List all available websites

Setting:
  --headers     Headers as dict
  --logs_dir    Change logs directory
  --timeout     Change timeout between each request
  --silent      Disable output to screen
```

## Open Shell
[![Open in Cloud Shell](https://img.shields.io/static/v1?label=%3E_&amp;message=Open%20in%20Cloud%20Shell&amp;color=3267d6&amp;style=flat-square)](https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https://github.com/qeeqbox/social-analyzer&amp;tutorial=README.md) [![Open in repl.it Shell](https://img.shields.io/static/v1?label=%3E_&amp;message=Open%20in%20repl.it%20Shell&amp;color=606c74&amp;style=flat-square)](https://repl.it/github/qeeqbox/social-analyzer)

## Resources
- DuckDuckGo API, Google API, NodeJS, bootstrap, selectize, jQuery, Wikipedia, font-awesome, selenium-webdriver &amp; tesseract.js
- Let me know if I missed a reference or resource!

## Disclaimer\Notes
- Download this project from GitHub and treat it as a security project
- If you want your website to be excluded from this project list, please reach out to me
- This tool is meant to be used locally, not as a service (It does not have any Access Control)
- For issues related to modules that end with -private or under the private group ![](https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/modules.png), reach out directly to me (do not open an issue on GitHub)

## Other Projects
[![](https://github.com/qeeqbox/.github/blob/main/data/analyzer.png)](https://github.com/qeeqbox/analyzer) [![](https://github.com/qeeqbox/.github/blob/main/data/chameleon.png)](https://github.com/qeeqbox/chameleon) [![](https://github.com/qeeqbox/.github/blob/main/data/honeypots.png)](https://github.com/qeeqbox/honeypots) [![](https://github.com/qeeqbox/.github/blob/main/data/osint.png)](https://github.com/qeeqbox/osint) [![](https://github.com/qeeqbox/.github/blob/main/data/url-sandbox.png)](https://github.com/qeeqbox/url-sandbox) [![](https://github.com/qeeqbox/.github/blob/main/data/mitre-visualizer.png)](https://github.com/qeeqbox/mitre-visualizer) [![](https://github.com/qeeqbox/.github/blob/main/data/woodpecker.png)](https://github.com/qeeqbox/woodpecker) [![](https://github.com/qeeqbox/.github/blob/main/data/docker-images.png)](https://github.com/qeeqbox/docker-images) [![](https://github.com/qeeqbox/.github/blob/main/data/seahorse.png)](https://github.com/qeeqbox/seahorse) [![](https://github.com/qeeqbox/.github/blob/main/data/rhino.png)](https://github.com/qeeqbox/rhino) [![](https://github.com/qeeqbox/.github/blob/main/data/raven.png)](https://github.com/qeeqbox/raven) [![](https://github.com/qeeqbox/.github/blob/main/data/image-analyzer.png)](https://github.com/qeeqbox/image-analyzer)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[projectdiscovery/nuclei-templates]]></title>
            <link>https://github.com/projectdiscovery/nuclei-templates</link>
            <guid>https://github.com/projectdiscovery/nuclei-templates</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:44 GMT</pubDate>
            <description><![CDATA[Community curated list of templates for the nuclei engine to find security vulnerabilities.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/projectdiscovery/nuclei-templates">projectdiscovery/nuclei-templates</a></h1>
            <p>Community curated list of templates for the nuclei engine to find security vulnerabilities.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 11,258</p>
            <p>Forks: 3,120</p>
            <p>Stars today: 62 stars today</p>
            <h2>README</h2><pre>

&lt;h1 align=&quot;center&quot;&gt;
Nuclei Templates
&lt;/h1&gt;
&lt;h4 align=&quot;center&quot;&gt;Community curated list of templates for the nuclei engine to find security vulnerabilities in applications.&lt;/h4&gt;


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/projectdiscovery/nuclei-templates&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/pdnuclei&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/pdnuclei.svg?logo=twitter&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://discord.gg/projectdiscovery&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/695645237418131507.svg?logo=discord&quot;&gt;&lt;/a&gt;
&lt;/p&gt;
      
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://nuclei.projectdiscovery.io/templating-guide/&quot;&gt;Documentation&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;#-contributions&quot;&gt;Contributions&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;#-discussion&quot;&gt;Discussion&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;#-community&quot;&gt;Community&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;https://nuclei.projectdiscovery.io/faq/templates/&quot;&gt;FAQs&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;https://discord.gg/projectdiscovery&quot;&gt;Join Discord&lt;/a&gt;
&lt;/p&gt;

----

Templates are the core of the [nuclei scanner](https://github.com/projectdiscovery/nuclei) which powers the actual scanning engine.
This repository stores and houses various templates for the scanner provided by our team, as well as contributed by the community.
We hope that you also contribute by sending templates via **pull requests** or [Github issues](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=submit-template.md&amp;title=%5Bnuclei-template%5D+) to grow the list.


## Nuclei Templates overview


An overview of the nuclei template project, including statistics on unique tags, author, directory, severity, and type of templates. The table below contains the top ten statistics for each matrix; an expanded version of this is [available here](TEMPLATES-STATS.md), and also available in [JSON](TEMPLATES-STATS.json) format for integration.

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt; 

## Nuclei Templates Top 10 statistics

|    TAG    | COUNT |    AUTHOR     | COUNT | DIRECTORY  | COUNT | SEVERITY | COUNT | TYPE | COUNT |
|-----------|-------|---------------|-------|------------|-------|----------|-------|------|-------|
| cve       |  3288 | dhiyaneshdk   |  1882 | http       |  8967 | info     |  4190 | file |   435 |
| panel     |  1342 | daffainfo     |   868 | cloud      |   657 | high     |  2446 | dns  |    26 |
| xss       |  1257 | princechaddha |   854 | file       |   435 | medium   |  2379 |      |       |
| wordpress |  1181 | dwisiswant0   |   806 | dast       |   255 | critical |  1425 |      |       |
| exposure  |  1107 | ritikchaddha  |   649 | workflows  |   202 | low      |   318 |      |       |
| wp-plugin |  1032 | pussycat0x    |   532 | code       |   198 | unknown  |    56 |      |       |
| osint     |   841 | pikpikcu      |   352 | network    |   145 |          |       |      |       |
| tech      |   803 | pdteam        |   310 | javascript |    71 |          |       |      |       |
| rce       |   786 | pdresearch    |   269 | ssl        |    38 |          |       |      |       |
| lfi       |   777 | iamnoooob     |   257 | dns        |    23 |          |       |      |       |

**848 directories, 11344 files**.

&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

üìñ Documentation
-----

Please navigate to https://nuclei.projectdiscovery.io for detailed documentation to **build** new or your own **custom** templates.
We have also added a set of templates to help you understand how things work.

üí™ Contributions
-----

Nuclei-templates is powered by major contributions from the community.
[Template contributions ](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=submit-template.md&amp;title=%5Bnuclei-template%5D+), [Feature Requests](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=feature_request.md&amp;title=%5BFeature%5D+) and [Bug Reports](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=bug_report.md&amp;title=%5BBug%5D+) are more than welcome.

![Alt](https://repobeats.axiom.co/api/embed/55ee65543bb9a0f9c797626c4e66d472a517d17c.svg &quot;Repobeats analytics image&quot;)

üí¨ Discussion
-----

Have questions / doubts / ideas to discuss?
Feel free to open a discussion on [Github discussions](https://github.com/projectdiscovery/nuclei-templates/discussions) board.

üë®‚Äçüíª Community
-----

You are welcome to join the active [Discord Community](https://discord.gg/projectdiscovery) to discuss directly with project maintainers and share things with others around security and automation.
Additionally, you may follow us on [Twitter](https://twitter.com/pdnuclei) to be updated on all the things about Nuclei.


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=projectdiscovery/nuclei-templates&amp;max=300&quot;&gt;
&lt;/a&gt;
&lt;/p&gt;


Thanks again for your contribution and keeping this community vibrant. :heart:
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[danielmiessler/Fabric]]></title>
            <link>https://github.com/danielmiessler/Fabric</link>
            <guid>https://github.com/danielmiessler/Fabric</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:43 GMT</pubDate>
            <description><![CDATA[Fabric is an open-source framework for augmenting humans using AI. It provides a modular system for solving specific problems using a crowdsourced set of AI prompts that can be used anywhere.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/danielmiessler/Fabric">danielmiessler/Fabric</a></h1>
            <p>Fabric is an open-source framework for augmenting humans using AI. It provides a modular system for solving specific problems using a crowdsourced set of AI prompts that can be used anywhere.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 34,085</p>
            <p>Forks: 3,482</p>
            <p>Stars today: 21 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://go.warp.dev/fabric&quot; target=&quot;_blank&quot;&gt;
        &lt;sup&gt;Special thanks to:&lt;/sup&gt;
        &lt;br&gt;
        &lt;img alt=&quot;Warp sponsorship&quot; width=&quot;400&quot; src=&quot;https://raw.githubusercontent.com/warpdotdev/brand-assets/refs/heads/main/Github/Sponsor/Warp-Github-LG-02.png&quot;&gt;
        &lt;br&gt;
        &lt;h&gt;Warp, built for coding with multiple AI agents&lt;/b&gt;
        &lt;br&gt;
        &lt;sup&gt;Available for macOS, Linux and Windows&lt;/sup&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;br&gt;

&lt;div align=&quot;center&quot;&gt;

&lt;img src=&quot;./docs/images/fabric-logo-gif.gif&quot; alt=&quot;fabriclogo&quot; width=&quot;400&quot; height=&quot;400&quot;/&gt;

# `fabric`

![Static Badge](https://img.shields.io/badge/mission-human_flourishing_via_AI_augmentation-purple)
&lt;br /&gt;
![GitHub top language](https://img.shields.io/github/languages/top/danielmiessler/fabric)
![GitHub last commit](https://img.shields.io/github/last-commit/danielmiessler/fabric)
[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](https://opensource.org/licenses/MIT)
[![Ask DeepWiki](https://deepwiki.com/badge.svg)](https://deepwiki.com/danielmiessler/fabric)

&lt;div align=&quot;center&quot;&gt;
&lt;h4&gt;&lt;code&gt;fabric&lt;/code&gt; is an open-source framework for augmenting humans using AI.&lt;/h4&gt;
&lt;/div&gt;

![Screenshot of fabric](./docs/images/fabric-summarize.png)

&lt;/div&gt;

[Updates](#updates) ‚Ä¢
[What and Why](#what-and-why) ‚Ä¢
[Philosophy](#philosophy) ‚Ä¢
[Installation](#installation) ‚Ä¢
[Usage](#usage) ‚Ä¢
[Examples](#examples) ‚Ä¢
[Just Use the Patterns](#just-use-the-patterns) ‚Ä¢
[Custom Patterns](#custom-patterns) ‚Ä¢
[Helper Apps](#helper-apps) ‚Ä¢
[Meta](#meta)

&lt;/div&gt;

## What and why

Since the start of modern AI in late 2022 we&#039;ve seen an **_extraordinary_** number of AI applications for accomplishing tasks. There are thousands of websites, chat-bots, mobile apps, and other interfaces for using all the different AI out there.

It&#039;s all really exciting and powerful, but _it&#039;s not easy to integrate this functionality into our lives._

&lt;div class=&quot;align center&quot;&gt;
&lt;h4&gt;In other words, AI doesn&#039;t have a capabilities problem‚Äîit has an &lt;em&gt;integration&lt;/em&gt; problem.&lt;/h4&gt;
&lt;/div&gt;

**Fabric was created to address this by creating and organizing the fundamental units of AI‚Äîthe prompts themselves!**

Fabric organizes prompts by real-world task, allowing people to create, collect, and organize their most important AI solutions in a single place for use in their favorite tools. And if you&#039;re command-line focused, you can use Fabric itself as the interface!

## Updates

&lt;details&gt;
&lt;summary&gt;Click to view recent updates&lt;/summary&gt;

Dear Users,

We&#039;ve been doing so many exciting things here at Fabric, I wanted to give a quick summary here to give you a sense of our development velocity!

Below are the **new features and capabilities** we&#039;ve added (newest first):

### Recent Major Features

- [v1.4.311](https://github.com/danielmiessler/fabric/releases/tag/v1.4.311) (Sep 13, 2025) ‚Äî **More internationalization support**: Adds de (German), fa (Persian / Farsi), fr (French), it (Italian),
  ja (Japanese), pt (Portuguese), zh (Chinese)
- [v1.4.309](https://github.com/danielmiessler/fabric/releases/tag/v1.4.309) (Sep 9, 2025) ‚Äî **Comprehensive internationalization support**: Includes English and Spanish locale files.
- [v1.4.303](https://github.com/danielmiessler/fabric/releases/tag/v1.4.303) (Aug 29, 2025) ‚Äî **New Binary Releases**: Linux ARM and Windows ARM targets. You can run Fabric on the Raspberry PI and on your Windows Surface!
- [v1.4.294](https://github.com/danielmiessler/fabric/releases/tag/v1.4.294) (Aug 20, 2025) ‚Äî **Venice AI Support**: Added the Venice AI provider. Venice is a Privacy-First, Open-Source AI provider. See their [&quot;About Venice&quot;](https://docs.venice.ai/overview/about-venice) page for details.
- [v1.4.291](https://github.com/danielmiessler/fabric/releases/tag/v1.4.291) (Aug 18, 2025) ‚Äî **Speech To Text**: Add OpenAI speech-to-text support with `--transcribe-file`, `--transcribe-model`, and `--split-media-file` flags.
- [v1.4.287](https://github.com/danielmiessler/fabric/releases/tag/v1.4.287) (Aug 16, 2025) ‚Äî **AI Reasoning**: Add Thinking to Gemini models and introduce `readme_updates` python script
- [v1.4.286](https://github.com/danielmiessler/fabric/releases/tag/v1.4.286) (Aug 14, 2025) ‚Äî **AI Reasoning**: Introduce Thinking Config Across Anthropic and OpenAI Providers
- [v1.4.285](https://github.com/danielmiessler/fabric/releases/tag/v1.4.285) (Aug 13, 2025) ‚Äî **Extended Context**: Enable One Million Token Context Beta Feature for Sonnet-4
- [v1.4.284](https://github.com/danielmiessler/fabric/releases/tag/v1.4.284) (Aug 12, 2025) ‚Äî **Easy Shell Completions Setup**: Introduce One-Liner Curl Install for Completions
- [v1.4.283](https://github.com/danielmiessler/fabric/releases/tag/v1.4.283) (Aug 12, 2025) ‚Äî **Model Management**: Add Vendor Selection Support for Models
- [v1.4.282](https://github.com/danielmiessler/fabric/releases/tag/v1.4.282) (Aug 11, 2025) ‚Äî **Enhanced Shell Completions**: Enhanced Shell Completions for Fabric CLI Binaries
- [v1.4.281](https://github.com/danielmiessler/fabric/releases/tag/v1.4.281) (Aug 11, 2025) ‚Äî **Gemini Search Tool**: Add Web Search Tool Support for Gemini Models
- [v1.4.278](https://github.com/danielmiessler/fabric/releases/tag/v1.4.278) (Aug 9, 2025) ‚Äî **Enhance YouTube Transcripts**: Enhance YouTube Support with Custom yt-dlp Arguments
- [v1.4.277](https://github.com/danielmiessler/fabric/releases/tag/v1.4.277) (Aug 8, 2025) ‚Äî **Desktop Notifications**: Add cross-platform desktop notifications to Fabric CLI
- [v1.4.274](https://github.com/danielmiessler/fabric/releases/tag/v1.4.274) (Aug 7, 2025) ‚Äî **Claude 4.1 Added**: Add Support for Claude Opus 4.1 Model
- [v1.4.271](https://github.com/danielmiessler/fabric/releases/tag/v1.4.271) (Jul 28, 2025) ‚Äî **AI Summarized Release Notes**: Enable AI summary updates for GitHub releases
- [v1.4.268](https://github.com/danielmiessler/fabric/releases/tag/v1.4.268) (Jul 26, 2025) ‚Äî **Gemini TTS Voice Selection**: add Gemini TTS voice selection and listing functionality
- [v1.4.267](https://github.com/danielmiessler/fabric/releases/tag/v1.4.267) (Jul 26, 2025) ‚Äî **Text-to-Speech**: Update Gemini Plugin to New SDK with TTS Support
- [v1.4.258](https://github.com/danielmiessler/fabric/releases/tag/v1.4.258) (Jul 17, 2025) ‚Äî **Onboarding Improved**: Add startup check to initialize config and .env file automatically
- [v1.4.257](https://github.com/danielmiessler/fabric/releases/tag/v1.4.257) (Jul 17, 2025) ‚Äî **OpenAI Routing Control**: Introduce CLI Flag to Disable OpenAI Responses API
- [v1.4.252](https://github.com/danielmiessler/fabric/releases/tag/v1.4.252) (Jul 16, 2025) ‚Äî **Hide Thinking Block**: Optional Hiding of Model Thinking Process with Configurable Tags
- [v1.4.246](https://github.com/danielmiessler/fabric/releases/tag/v1.4.246) (Jul 14, 2025) ‚Äî **Automatic ChangeLog Updates**: Add AI-powered changelog generation with high-performance Go tool and comprehensive caching
- [v1.4.245](https://github.com/danielmiessler/fabric/releases/tag/v1.4.245) (Jul 11, 2025) ‚Äî **Together AI**: Together AI Support with OpenAI Fallback Mechanism Added
- [v1.4.232](https://github.com/danielmiessler/fabric/releases/tag/v1.4.232) (Jul 6, 2025) ‚Äî **Add Custom**: Add Custom Patterns Directory Support
- [v1.4.231](https://github.com/danielmiessler/fabric/releases/tag/v1.4.231) (Jul 5, 2025) ‚Äî **OAuth Auto-Auth**: OAuth Authentication Support for Anthropic (Use your Max Subscription)
- [v1.4.230](https://github.com/danielmiessler/fabric/releases/tag/v1.4.230) (Jul 5, 2025) ‚Äî **Model Management**: Add advanced image generation parameters for OpenAI models with four new CLI flags
- [v1.4.227](https://github.com/danielmiessler/fabric/releases/tag/v1.4.227) (Jul 4, 2025) ‚Äî **Add Image**: Add Image Generation Support to Fabric
- [v1.4.226](https://github.com/danielmiessler/fabric/releases/tag/v1.4.226) (Jul 4, 2025) ‚Äî **Web Search**: OpenAI Plugin Now Supports Web Search Functionality
- [v1.4.225](https://github.com/danielmiessler/fabric/releases/tag/v1.4.225) (Jul 4, 2025) ‚Äî **Web Search**: Runtime Web Search Control via Command-Line `--search` Flag
- [v1.4.224](https://github.com/danielmiessler/fabric/releases/tag/v1.4.224) (Jul 1, 2025) ‚Äî **Add code_review**: Add code_review pattern and updates in Pattern_Descriptions
- [v1.4.222](https://github.com/danielmiessler/fabric/releases/tag/v1.4.222) (Jul 1, 2025) ‚Äî **OpenAI Plugin**: OpenAI Plugin Migrates to New Responses API
- [v1.4.218](https://github.com/danielmiessler/fabric/releases/tag/v1.4.218) (Jun 27, 2025) ‚Äî **Model Management**: Add Support for OpenAI Search and Research Model Variants
- [v1.4.217](https://github.com/danielmiessler/fabric/releases/tag/v1.4.217) (Jun 26, 2025) ‚Äî **New YouTube**: New YouTube Transcript Endpoint Added to REST API
- [v1.4.212](https://github.com/danielmiessler/fabric/releases/tag/v1.4.212) (Jun 23, 2025) ‚Äî **Add Langdock**: Add Langdock AI and enhance generic OpenAI compatible support
- [v1.4.211](https://github.com/danielmiessler/fabric/releases/tag/v1.4.211) (Jun 19, 2025) ‚Äî **REST API**: REST API and Web UI Now Support Dynamic Pattern Variables
- [v1.4.210](https://github.com/danielmiessler/fabric/releases/tag/v1.4.210) (Jun 18, 2025) ‚Äî **Add Citations**: Add Citation Support to Perplexity Response
- [v1.4.208](https://github.com/danielmiessler/fabric/releases/tag/v1.4.208) (Jun 17, 2025) ‚Äî **Add Perplexity**: Add Perplexity AI Provider with Token Limits Support
- [v1.4.203](https://github.com/danielmiessler/fabric/releases/tag/v1.4.203) (Jun 14, 2025) ‚Äî **Add Amazon Bedrock**: Add support for Amazon Bedrock

These features represent our commitment to making Fabric the most powerful and flexible AI augmentation framework available!

&lt;/details&gt;

## Intro videos

Keep in mind that many of these were recorded when Fabric was Python-based, so remember to use the current [install instructions](#installation) below.

- [Network Chuck](https://www.youtube.com/watch?v=UbDyjIIGaxQ)
- [David Bombal](https://www.youtube.com/watch?v=vF-MQmVxnCs)
- [My Own Intro to the Tool](https://www.youtube.com/watch?v=wPEyyigh10g)
- [More Fabric YouTube Videos](https://www.youtube.com/results?search_query=fabric+ai)

## Navigation

- [`fabric`](#fabric)
  - [What and why](#what-and-why)
  - [Updates](#updates)
    - [Recent Major Features](#recent-major-features)
  - [Intro videos](#intro-videos)
  - [Navigation](#navigation)
  - [Changelog](#changelog)
  - [Philosophy](#philosophy)
    - [Breaking problems into components](#breaking-problems-into-components)
    - [Too many prompts](#too-many-prompts)
  - [Installation](#installation)
    - [One-Line Install (Recommended)](#one-line-install-recommended)
    - [Manual Binary Downloads](#manual-binary-downloads)
    - [Using package managers](#using-package-managers)
      - [macOS (Homebrew)](#macos-homebrew)
      - [Arch Linux (AUR)](#arch-linux-aur)
      - [Windows](#windows)
    - [From Source](#from-source)
    - [Docker](#docker)
    - [Environment Variables](#environment-variables)
    - [Setup](#setup)
    - [Per-Pattern Model Mapping](#per-pattern-model-mapping)
    - [Add aliases for all patterns](#add-aliases-for-all-patterns)
      - [Save your files in markdown using aliases](#save-your-files-in-markdown-using-aliases)
    - [Migration](#migration)
    - [Upgrading](#upgrading)
    - [Shell Completions](#shell-completions)
      - [Quick install (no clone required)](#quick-install-no-clone-required)
      - [Zsh Completion](#zsh-completion)
      - [Bash Completion](#bash-completion)
      - [Fish Completion](#fish-completion)
  - [Usage](#usage)
    - [Debug Levels](#debug-levels)
  - [Our approach to prompting](#our-approach-to-prompting)
  - [Examples](#examples)
  - [Just use the Patterns](#just-use-the-patterns)
    - [Prompt Strategies](#prompt-strategies)
  - [Custom Patterns](#custom-patterns)
    - [Setting Up Custom Patterns](#setting-up-custom-patterns)
    - [Using Custom Patterns](#using-custom-patterns)
    - [How It Works](#how-it-works)
  - [Helper Apps](#helper-apps)
    - [`to_pdf`](#to_pdf)
    - [`to_pdf` Installation](#to_pdf-installation)
    - [`code_helper`](#code_helper)
  - [pbpaste](#pbpaste)
  - [Web Interface (Fabric Web App)](#web-interface-fabric-web-app)
  - [Meta](#meta)
    - [Primary contributors](#primary-contributors)
    - [Contributors](#contributors)

&lt;br /&gt;

## Changelog

Fabric is evolving rapidly.

Stay current with the latest features by reviewing the [CHANGELOG](./CHANGELOG.md) for all recent changes.

## Philosophy

&gt; AI isn&#039;t a thing; it&#039;s a _magnifier_ of a thing. And that thing is **human creativity**.

We believe the purpose of technology is to help humans flourish, so when we talk about AI we start with the **human** problems we want to solve.

### Breaking problems into components

Our approach is to break problems into individual pieces (see below) and then apply AI to them one at a time. See below for some examples.

&lt;img width=&quot;2078&quot; alt=&quot;augmented_challenges&quot; src=&quot;https://github.com/danielmiessler/fabric/assets/50654/31997394-85a9-40c2-879b-b347e4701f06&quot;&gt;

### Too many prompts

Prompts are good for this, but the biggest challenge I faced in 2023‚Äî‚Äîwhich still exists today‚Äîis **the sheer number of AI prompts out there**. We all have prompts that are useful, but it&#039;s hard to discover new ones, know if they are good or not, _and manage different versions of the ones we like_.

One of `fabric`&#039;s primary features is helping people collect and integrate prompts, which we call _Patterns_, into various parts of their lives.

Fabric has Patterns for all sorts of life and work activities, including:

- Extracting the most interesting parts of YouTube videos and podcasts
- Writing an essay in your own voice with just an idea as an input
- Summarizing opaque academic papers
- Creating perfectly matched AI art prompts for a piece of writing
- Rating the quality of content to see if you want to read/watch the whole thing
- Getting summaries of long, boring content
- Explaining code to you
- Turning bad documentation into usable documentation
- Creating social media posts from any content input
- And a million more‚Ä¶

## Installation

### One-Line Install (Recommended)

**Unix/Linux/macOS:**

```bash
curl -fsSL https://raw.githubusercontent.com/danielmiessler/fabric/main/scripts/installer/install.sh | bash
```

**Windows PowerShell:**

```powershell
iwr -useb https://raw.githubusercontent.com/danielmiessler/fabric/main/scripts/installer/install.ps1 | iex
```

&gt; See [scripts/installer/README.md](./scripts/installer/README.md) for custom installation options and troubleshooting.

### Manual Binary Downloads

The latest release binary archives and their expected SHA256 hashes can be found at &lt;https://github.com/danielmiessler/fabric/releases/latest&gt;

### Using package managers

**NOTE:** using Homebrew or the Arch Linux package managers makes `fabric` available as `fabric-ai`, so add
the following alias to your shell startup files to account for this:

```bash
alias fabric=&#039;fabric-ai&#039;
```

#### macOS (Homebrew)

`brew install fabric-ai`

#### Arch Linux (AUR)

`yay -S fabric-ai`

#### Windows

Use the official Microsoft supported `Winget` tool:

`winget install danielmiessler.Fabric`

### From Source

To install Fabric, [make sure Go is installed](https://go.dev/doc/install), and then run the following command.

```bash
# Install Fabric directly from the repo
go install github.com/danielmiessler/fabric/cmd/fabric@latest
```

### Docker

Run Fabric using pre-built Docker images:

```bash
# Use latest image from Docker Hub
docker run --rm -it kayvan/fabric:latest --version

# Use specific version from GHCR
docker run --rm -it ghcr.io/ksylvan/fabric:v1.4.305 --version

# Run setup (first time)
mkdir -p $HOME/.fabric-config
docker run --rm -it -v $HOME/.fabric-config:/root/.config/fabric kayvan/fabric:latest --setup

# Use Fabric with your patterns
docker run --rm -it -v $HOME/.fabric-config:/root/.config/fabric kayvan/fabric:latest -p summarize

# Run the REST API server
docker run --rm -it -p 8080:8080 -v $HOME/.fabric-config:/root/.config/fabric kayvan/fabric:latest --serve
```

**Images available at:**

- Docker Hub: [kayvan/fabric](https://hub.docker.com/repository/docker/kayvan/fabric/general)
- GHCR: [ksylvan/fabric](https://github.com/ksylvan/fabric/pkgs/container/fabric)

See [scripts/docker/README.md](./scripts/docker/README.md) for building custom images and advanced configuration.

### Environment Variables

You may need to set some environment variables in your `~/.bashrc` on linux or `~/.zshrc` file on mac to be able to run the `fabric` command. Here is an example of what you can add:

For Intel based macs or linux

```bash
# Golang environment variables
export GOROOT=/usr/local/go
export GOPATH=$HOME/go

# Update PATH to include GOPATH and GOROOT binaries
export PATH=$GOPATH/bin:$GOROOT/bin:$HOME/.local/bin:$PATH
```

for Apple Silicon based macs

```bash
# Golang environment variables
export GOROOT=$(brew --prefix go)/libexec
export GOPATH=$HOME/go
export PATH=$GOPATH/bin:$GOROOT/bin:$HOME/.local/bin:$PATH
```

### Setup

Now run the following command

```bash
# Run the setup to set up your directories and keys
fabric --setup
```

If everything works you are good to go.

### Per-Pattern Model Mapping

 You can configure specific models for individual patterns using environment variables
 like `FABRIC_MODEL_PATTERN_NAME=vendor|model`

 This makes it easy to maintain these per-pattern model mappings in your shell startup files.

### Add aliases for all patterns

In order to add aliases for all your patterns and use them directly as commands, for example, `summarize` instead of `fabric --pattern summarize`
You can add the following to your `.zshrc` or `.bashrc` file. You
can also optionally set the `FABRIC_ALIAS_PREFIX` environment variable
before, if you&#039;d prefer all the fabric aliases to start with the same prefix.

```bash
# Loop through all files in the ~/.config/fabric/patterns directory
for pattern_file in $HOME/.config/fabric/patterns/*; do
    # Get the base name of the file (i.e., remove the directory path)
    pattern_name=&quot;$(basename &quot;$pattern_file&quot;)&quot;
    alias_name=&quot;${FABRIC_ALIAS_PREFIX:-}${pattern_name}&quot;

    # Create an alias in the form: alias pattern_name=&quot;fabric --pattern pattern_name&quot;
    alias_command=&quot;alias $alias_name=&#039;fabric --pattern $pattern_name&#039;&quot;

    # Evaluate the alias command to add it to the current shell
    eval &quot;$alias_command&quot;
done

yt() {
    if [ &quot;$#&quot; -eq 0 ] || [ &quot;$#&quot; -gt 2 ]; then
        echo &quot;Usage: yt [-t | --timestamps] youtube-link&quot;
        echo &quot;Use the &#039;-t&#039; flag to get the transcript with timestamps.&quot;
        return 1
    fi

    transcript_flag=&quot;--transcript&quot;
    if [ &quot;$1&quot; = &quot;-t&quot; ] || [ &quot;$1&quot; = &quot;--timestamps&quot; ]; then
        transcript_flag=&quot;--transcript-with-timestamps&quot;
        shift
    fi
    local video_link=&quot;$1&quot;
    fabric -y &quot;$video_link&quot; $transcript_flag
}
```

You can add the below code for the equivalent aliases inside PowerShell by running `notepad $PROFILE` inside a PowerShell window:

```powershell
# Path to the patterns directory
$patternsPath = Join-Path $HOME &quot;.config/fabric/patterns&quot;
foreach ($patternDir in Get-ChildItem -Path $patternsPath -Directory) {
    # Prepend FABRIC_ALIAS_PREFIX if set; otherwise use empty string
    $prefix = $env:FABRIC_ALIAS_PREFIX ?? &#039;&#039;
    $patternName = &quot;$($patternDir.Name)&quot;
    $aliasName = &quot;$prefix$patternName&quot;
    # Dynamically define a function for each pattern
    $functionDefinition = @&quot;
function $aliasName {
    [CmdletBinding()]
    param(
        [Parameter(ValueFromPipeline = `$true)]
        [string] `$InputObject,

        [Parameter(ValueFromRemainingArguments = `$true)]
        [String[]] `$patternArgs
    )

    begin {
        # Initialize an array to collect pipeline input
        `$collector = @()
    }

    process {
        # Collect pipeline input objects
        if (`$InputObject) {
            `$coll

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[plankanban/planka]]></title>
            <link>https://github.com/plankanban/planka</link>
            <guid>https://github.com/plankanban/planka</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:42 GMT</pubDate>
            <description><![CDATA[PLANKA is the kanban-style project mastering tool for everyone.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/plankanban/planka">plankanban/planka</a></h1>
            <p>PLANKA is the kanban-style project mastering tool for everyone.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 10,886</p>
            <p>Forks: 1,113</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre># PLANKA

**Project mastering driven by fun**

![Version](https://img.shields.io/github/package-json/v/plankanban/planka?style=flat-square) [![Docker Pulls](https://img.shields.io/badge/docker_pulls-6M%2B-%23066da5?style=flat-square&amp;color=red)](https://github.com/plankanban/planka/pkgs/container/planka) [![Contributors](https://img.shields.io/github/contributors/plankanban/planka?style=flat-square&amp;color=blue)](https://github.com/plankanban/planka/graphs/contributors) [![Chat](https://img.shields.io/discord/1041440072953765979?style=flat-square&amp;logo=discord&amp;logoColor=white)](https://discord.gg/WqqYNd7Jvt)

![Demo](https://raw.githubusercontent.com/plankanban/planka/master/assets/demo.gif)

[**Client demo**](https://plankanban.github.io/planka) (without server features).

&gt; ‚ö†Ô∏è The demo GIF and client demo are based on **v1** and will be updated soon.

## Key Features

- **Collaborative Kanban Boards**: Create projects, boards, lists, cards, and manage tasks with an intuitive drag-and-drop interface
- **Real-Time Updates**: Instant syncing across all users, no refresh needed
- **Rich Markdown Support**: Write beautifully formatted card descriptions with a powerful markdown editor
- **Flexible Notifications**: Get alerts through 100+ providers, fully customizable to your workflow
- **Seamless Authentication**: Single sign-on with OpenID Connect integration
- **Multilingual &amp; Easy to Translate**: Full internationalization support for a global audience

## How to Deploy

PLANKA is easy to install using multiple methods - learn more in the [installation guide](https://docs.planka.cloud/docs/welcome/).

For configuration and environment settings, see the [configuration section](https://docs.planka.cloud/docs/category/configuration/).

## Contact

Interested in a hosted version of PLANKA? Email us at [github@planka.group](mailto:github@planka.group).

For any security issues, please do not create a public issue on GitHub - instead, report it privately by emailing [security@planka.group](mailto:security@planka.group).

**Note:** We do NOT offer any public support via email, please use GitHub.

**Join our community:** Get help, share ideas, or contribute on our [Discord server](https://discord.gg/WqqYNd7Jvt).

## License

PLANKA is [fair-code](https://faircode.io) distributed under the [Fair Use License](https://github.com/plankanban/planka/blob/master/LICENSES/PLANKA%20Community%20License%20EN.md) and [PLANKA Pro/Enterprise License](https://github.com/plankanban/planka/blob/master/LICENSES/PLANKA%20Commercial%20License%20EN.md).

- **Source Available**: The source code is always visible
- **Self-Hostable**: Deploy and host it anywhere
- **Extensible**: Customize with your own functionality
- **Enterprise Licenses**: Available for additional features and support

For more details, check the [License Guide](https://github.com/plankanban/planka/blob/master/LICENSES/PLANKA%20License%20Guide%20EN.md).

## Contributing

Found a bug or have a feature request? Check out our [Contributing Guide](https://github.com/plankanban/planka/blob/master/CONTRIBUTING.md) to get started.

For setting up the project locally, see the [development section](https://docs.planka.cloud/docs/category/development/).

**Thanks to all our contributors!**

[![Contributors](https://contrib.rocks/image?repo=plankanban/planka)](https://github.com/plankanban/planka/graphs/contributors)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[cv-cat/Spider_XHS]]></title>
            <link>https://github.com/cv-cat/Spider_XHS</link>
            <guid>https://github.com/cv-cat/Spider_XHS</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:41 GMT</pubDate>
            <description><![CDATA[Â∞èÁ∫¢‰π¶Áà¨Ëô´Êï∞ÊçÆÈááÈõÜÔºåÂ∞èÁ∫¢‰π¶ÂÖ®ÂüüËøêËê•Ëß£ÂÜ≥ÊñπÊ°à]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/cv-cat/Spider_XHS">cv-cat/Spider_XHS</a></h1>
            <p>Â∞èÁ∫¢‰π¶Áà¨Ëô´Êï∞ÊçÆÈááÈõÜÔºåÂ∞èÁ∫¢‰π¶ÂÖ®ÂüüËøêËê•Ëß£ÂÜ≥ÊñπÊ°à</p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,965</p>
            <p>Forks: 500</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/cv-cat/Spider_XHS&quot; target=&quot;_blank&quot; align=&quot;center&quot; alt=&quot;Go to XHS_Spider Website&quot;&gt;
    &lt;picture&gt;
      &lt;img width=&quot;220&quot; src=&quot;https://github.com/user-attachments/assets/b817a5d2-4ca6-49e9-b7b1-efb07a4fb325&quot; alt=&quot;Spider_XHS logo&quot;&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
&lt;/p&gt;


&lt;div align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://www.python.org/&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/python-3.7%2B-blue&quot; alt=&quot;Python 3.7+&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://nodejs.org/zh-cn/&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/nodejs-18%2B-blue&quot; alt=&quot;NodeJS 18+&quot;&gt;
    &lt;/a&gt;
&lt;/div&gt;



# Spider_XHS

**‚ú® ‰∏ì‰∏öÁöÑÂ∞èÁ∫¢‰π¶Êï∞ÊçÆÈááÈõÜËß£ÂÜ≥ÊñπÊ°àÔºåÊîØÊåÅÁ¨îËÆ∞Áà¨ÂèñÔºå‰øùÂ≠òÊ†ºÂºè‰∏∫excelÊàñËÄÖmedia**

**‚ú® Â∞èÁ∫¢‰π¶ÂÖ®ÂüüËøêËê•Ëß£ÂÜ≥ÊñπÊ≥ïÔºåAI‰∏ÄÈîÆÊîπÂÜôÁ¨îËÆ∞ÔºàÂõæÊñáÔºåËßÜÈ¢ëÔºâÁõ¥Êé•‰∏ä‰º†**

## ‚≠êÂäüËÉΩÂàóË°®

**‚ö†Ô∏è ‰ªª‰ΩïÊ∂âÂèäÊï∞ÊçÆÊ≥®ÂÖ•ÁöÑÊìç‰ΩúÈÉΩÊòØ‰∏çË¢´ÂÖÅËÆ∏ÁöÑÔºåÊú¨È°πÁõÆ‰ªÖ‰æõÂ≠¶‰π†‰∫§ÊµÅ‰ΩøÁî®ÔºåÂ¶ÇÊúâËøùÂèçÔºåÂêéÊûúËá™Ë¥ü**

| Ê®°Âùó           | Â∑≤ÂÆûÁé∞                                                                             |
|---------------|---------------------------------------------------------------------------------|
| Â∞èÁ∫¢‰π¶Âàõ‰ΩúËÄÖÂπ≥Âè∞ | ‚úÖ ‰∫åÁª¥Á†ÅÁôªÂΩï&lt;br/&gt;‚úÖ ÊâãÊú∫È™åËØÅÁ†ÅÁôªÂΩï&lt;br/&gt;‚úÖ ‰∏ä‰º†ÔºàÂõæÈõÜ„ÄÅËßÜÈ¢ëÔºâ‰ΩúÂìÅ&lt;br/&gt;‚úÖÊü•ÁúãËá™Â∑±‰∏ä‰º†ÁöÑ‰ΩúÂìÅ      |
|    Â∞èÁ∫¢‰π¶PC    | ‚úÖ ‰∫åÁª¥Á†ÅÁôªÂΩï&lt;br/&gt; ‚úÖ ÊâãÊú∫È™åËØÅÁ†ÅÁôªÂΩï&lt;br/&gt; ‚úÖ Ëé∑ÂèñÊó†Ê∞¥Âç∞ÂõæÁâá&lt;br/&gt; ‚úÖ Ëé∑ÂèñÊó†Ê∞¥Âç∞ËßÜÈ¢ë&lt;br/&gt; ‚úÖ Ëé∑Âèñ‰∏ªÈ°µÁöÑÊâÄÊúâÈ¢ëÈÅì&lt;br/&gt;‚úÖ Ëé∑Âèñ‰∏ªÈ°µÊé®ËçêÁ¨îËÆ∞&lt;br/&gt;‚úÖ Ëé∑ÂèñÊüê‰∏™Áî®Êà∑ÁöÑ‰ø°ÊÅØ&lt;br/&gt;‚úÖ Áî®Êà∑Ëá™Â∑±ÁöÑ‰ø°ÊÅØ&lt;br/&gt;‚úÖ Ëé∑ÂèñÊüê‰∏™Áî®Êà∑‰∏ä‰º†ÁöÑÁ¨îËÆ∞&lt;br/&gt;‚úÖ Ëé∑ÂèñÊüê‰∏™Áî®Êà∑ÊâÄÊúâÁöÑÂñúÊ¨¢Á¨îËÆ∞&lt;br/&gt;‚úÖ Ëé∑ÂèñÊüê‰∏™Áî®Êà∑ÊâÄÊúâÁöÑÊî∂ËóèÁ¨îËÆ∞&lt;br/&gt;‚úÖ Ëé∑ÂèñÊüê‰∏™Á¨îËÆ∞ÁöÑËØ¶ÁªÜÂÜÖÂÆπ&lt;br/&gt;‚úÖ ÊêúÁ¥¢Á¨îËÆ∞ÂÜÖÂÆπ&lt;br/&gt;‚úÖ ÊêúÁ¥¢Áî®Êà∑ÂÜÖÂÆπ&lt;br/&gt;‚úÖ Ëé∑ÂèñÊüê‰∏™Á¨îËÆ∞ÁöÑËØÑËÆ∫&lt;br/&gt;‚úÖ Ëé∑ÂèñÊú™ËØªÊ∂àÊÅØ‰ø°ÊÅØ&lt;br/&gt;‚úÖ Ëé∑ÂèñÊî∂Âà∞ÁöÑËØÑËÆ∫Âíå@ÊèêÈÜí‰ø°ÊÅØ&lt;br/&gt;‚úÖ Ëé∑ÂèñÊî∂Âà∞ÁöÑÁÇπËµûÂíåÊî∂Ëóè‰ø°ÊÅØ&lt;br/&gt;‚úÖ Ëé∑ÂèñÊñ∞Â¢ûÂÖ≥Ê≥®‰ø°ÊÅØ|


## üåü ÂäüËÉΩÁâπÊÄß

- ‚úÖ **Â§öÁª¥Â∫¶Êï∞ÊçÆÈááÈõÜ**
  - Áî®Êà∑‰∏ªÈ°µ‰ø°ÊÅØ
  - Á¨îËÆ∞ËØ¶ÁªÜÂÜÖÂÆπ
  - Êô∫ËÉΩÊêúÁ¥¢ÁªìÊûúÊäìÂèñ
- üöÄ **È´òÊÄßËÉΩÊû∂ÊûÑ**
  - Ëá™Âä®ÈáçËØïÊú∫Âà∂
- üîí **ÂÆâÂÖ®Á®≥ÂÆö**
  - Â∞èÁ∫¢‰π¶ÊúÄÊñ∞APIÈÄÇÈÖç
  - ÂºÇÂ∏∏Â§ÑÁêÜÊú∫Âà∂
  - proxy‰ª£ÁêÜ
- üé® **‰æøÊç∑ÁÆ°ÁêÜ**
  - ÁªìÊûÑÂåñÁõÆÂΩïÂ≠òÂÇ®
  - Ê†ºÂºèÂåñËæìÂá∫ÔºàJSON/EXCEL/MEDIAÔºâ
  
## üé®ÊïàÊûúÂõæ
### Â§ÑÁêÜÂêéÁöÑÊâÄÊúâÁî®Êà∑
![image](https://github.com/cv-cat/Spider_XHS/assets/94289429/00902dbd-4da1-45bc-90bb-19f5856a04ad)
### Êüê‰∏™Áî®Êà∑ÊâÄÊúâÁöÑÁ¨îËÆ∞
![image](https://github.com/cv-cat/Spider_XHS/assets/94289429/880884e8-4a1d-4dc1-a4dc-e168dd0e9896)
### Êüê‰∏™Á¨îËÆ∞ÂÖ∑‰ΩìÁöÑÂÜÖÂÆπ
![image](https://github.com/cv-cat/Spider_XHS/assets/94289429/d17f3f4e-cd44-4d3a-b9f6-d880da626cc8)
### ‰øùÂ≠òÁöÑexcel
![image](https://github.com/user-attachments/assets/707f20ed-be27-4482-89b3-a5863bc360e7)

## üõ†Ô∏è Âø´ÈÄüÂºÄÂßã
### ‚õ≥ËøêË°åÁéØÂ¢É
- Python 3.7+
- Node.js 18+

### üéØÂÆâË£Ö‰æùËµñ
```
pip install -r requirements.txt
npm install
```

### üé®ÈÖçÁΩÆÊñá‰ª∂
ÈÖçÁΩÆÊñá‰ª∂Âú®È°πÁõÆÊ†πÁõÆÂΩï.envÊñá‰ª∂‰∏≠ÔºåÂ∞Ü‰∏ãÂõæËá™Â∑±ÁöÑÁôªÂΩïcookieÊîæÂÖ•ÂÖ∂‰∏≠ÔºåcookieËé∑Âèñ‚û°Ô∏èÂú®ÊµèËßàÂô®f12ÊâìÂºÄÊéßÂà∂Âè∞ÔºåÁÇπÂáªÁΩëÁªúÔºåÁÇπÂáªfetchÔºåÊâæ‰∏Ä‰∏™Êé•Âè£ÁÇπÂºÄ
![image](https://github.com/user-attachments/assets/6a7e4ecb-0432-4581-890a-577e0eae463d)

Â§çÂà∂cookieÂà∞.envÊñá‰ª∂‰∏≠ÔºàÊ≥®ÊÑèÔºÅÁôªÂΩïÂ∞èÁ∫¢‰π¶ÂêéÁöÑcookieÊâçÊòØÊúâÊïàÁöÑÔºå‰∏çÁôªÈôÜÊ≤°ÊúâÁî®Ôºâ
![image](https://github.com/user-attachments/assets/5e62bc35-d758-463e-817c-7dcaacbee13c)

### üöÄËøêË°åÈ°πÁõÆ
```
python main.py
```

### üóùÔ∏èÊ≥®ÊÑè‰∫ãÈ°π
- main.py‰∏≠ÁöÑ‰ª£Á†ÅÊòØÁà¨Ëô´ÁöÑÂÖ•Âè£ÔºåÂèØ‰ª•Ê†πÊçÆËá™Â∑±ÁöÑÈúÄÊ±ÇËøõË°å‰øÆÊîπ
- apis/xhs_pc_apis.py ‰∏≠ÁöÑ‰ª£Á†ÅÂåÖÂê´‰∫ÜÊâÄÊúâÁöÑapiÊé•Âè£ÔºåÂèØ‰ª•Ê†πÊçÆËá™Â∑±ÁöÑÈúÄÊ±ÇËøõË°å‰øÆÊîπ
- apis/xhs_creator_apis.py ‰∏≠ÁöÑ‰ª£Á†ÅÂåÖÂê´‰∫ÜÂ∞èÁ∫¢‰π¶Âàõ‰ΩúËÄÖÂπ≥Âè∞ÁöÑapiÊé•Âè£ÔºåÂèØ‰ª•Ê†πÊçÆËá™Â∑±ÁöÑÈúÄÊ±ÇËøõË°å‰øÆÊîπ


## üç•Êó•Âøó
   
| Êó•Êúü       | ËØ¥Êòé                                        |
|----------|-------------------------------------------|
| 23/08/09 | - È¶ñÊ¨°Êèê‰∫§                                    |
| 23/09/13 | - apiÊõ¥ÊîπparamsÂ¢ûÂä†‰∏§‰∏™Â≠óÊÆµÔºå‰øÆÂ§çÂõæÁâáÊó†Ê≥ï‰∏ãËΩΩÔºåÊúâ‰∫õÈ°µÈù¢Êó†Ê≥ïËÆøÈóÆÂØºËá¥Êä•Èîô |
| 23/09/16 | - ËæÉÂ§ßËßÜÈ¢ëÂá∫Áé∞ÁºñÁ†ÅÈóÆÈ¢òÔºå‰øÆÂ§çËßÜÈ¢ëÁºñÁ†ÅÈóÆÈ¢òÔºåÂä†ÂÖ•ÂºÇÂ∏∏Â§ÑÁêÜ              |
| 23/09/18 | - ‰ª£Á†ÅÈáçÊûÑÔºåÂä†ÂÖ•Â§±Ë¥•ÈáçËØï                             |
| 23/09/19 | - Êñ∞Â¢û‰∏ãËΩΩÊêúÁ¥¢ÁªìÊûúÂäüËÉΩ                              |
| 23/10/05 | - Êñ∞Â¢ûË∑≥ËøáÂ∑≤‰∏ãËΩΩÂäüËÉΩÔºåËé∑ÂèñÊõ¥ËØ¶ÁªÜÁöÑÁ¨îËÆ∞ÂíåÁî®Êà∑‰ø°ÊÅØ                 |
| 23/10/08 | - ‰∏ä‰º†‰ª£Á†Å‚òûPypiÔºåÂèØÈÄöËøápip installÂÆâË£ÖÊú¨È°πÁõÆ           |
| 23/10/17 | - ÊêúÁ¥¢‰∏ãËΩΩÊñ∞Â¢ûÊéíÂ∫èÊñπÂºèÈÄâÈ°πÔºà1„ÄÅÁªºÂêàÊéíÂ∫è 2„ÄÅÁÉ≠Èó®ÊéíÂ∫è 3„ÄÅÊúÄÊñ∞ÊéíÂ∫èÔºâ      |
| 23/10/21 | - Êñ∞Â¢ûÂõæÂΩ¢ÂåñÁïåÈù¢,‰∏ä‰º†Ëá≥release v2.1.0               |
| 23/10/28 | - Fix Bug ‰øÆÂ§çÊêúÁ¥¢ÂäüËÉΩÂá∫Áé∞ÁöÑÈöêËóèÈóÆÈ¢ò                   |
| 25/03/18 | - Êõ¥Êñ∞APIÔºå‰øÆÂ§çÈÉ®ÂàÜÈóÆÈ¢ò                            |
| 25/06/07 | - Êõ¥Êñ∞searchÊé•Âè£ÔºåÂå∫ÂàÜËßÜÈ¢ëÂíåÂõæÈõÜ‰∏ãËΩΩÔºåÂ¢ûÂä†Â∞èÁ∫¢‰π¶Âàõ‰ΩúËÄÖapi        |
| 25/07/15 | - Êõ¥Êñ∞ xs version56 &amp; Â∞èÁ∫¢‰π¶Âàõ‰ΩúËÄÖÊé•Âè£              |


## üß∏È¢ùÂ§ñËØ¥Êòé
1. ÊÑüË∞¢star‚≠êÂíåfollowüì∞ÔºÅ‰∏çÊó∂Êõ¥Êñ∞
2. ‰ΩúËÄÖÁöÑËÅîÁ≥ªÊñπÂºèÂú®‰∏ªÈ°µÈáåÔºåÊúâÈóÆÈ¢òÂèØ‰ª•ÈöèÊó∂ËÅîÁ≥ªÊàë
3. ÂèØ‰ª•ÂÖ≥Ê≥®‰∏ã‰ΩúËÄÖÁöÑÂÖ∂‰ªñÈ°πÁõÆÔºåÊ¨¢Ëøé PR Âíå issue
4. ÊÑüË∞¢ËµûÂä©ÔºÅÂ¶ÇÊûúÊ≠§È°πÁõÆÂØπÊÇ®ÊúâÂ∏ÆÂä©ÔºåËØ∑‰ΩúËÄÖÂñù‰∏ÄÊùØÂ•∂Ëå∂~~ ÔºàÂºÄÂøÉ‰∏ÄÊï¥Â§©üòäüòäÔºâ
5. thank you~~~

&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;./author/wx_pay.png&quot; width=&quot;400px&quot; alt=&quot;ÂæÆ‰ø°ËµûËµèÁ†Å&quot;&gt;‚ÄÉ
  &lt;img src=&quot;./author/zfb_pay.jpg&quot; width=&quot;400px&quot; alt=&quot;ÊîØ‰ªòÂÆùÊî∂Ê¨æÁ†Å&quot;&gt;
&lt;/div&gt;


## üìà Star Ë∂ãÂäø
&lt;a href=&quot;https://www.star-history.com/#cv-cat/Spider_XHS&amp;Date&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=cv-cat/Spider_XHS&amp;type=Date&amp;theme=dark&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=cv-cat/Spider_XHS&amp;type=Date&quot; /&gt;
   &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=cv-cat/Spider_XHS&amp;type=Date&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;

## üçî ‰∫§ÊµÅÁæ§
&lt;img width=&quot;1031&quot; height=&quot;1449&quot; alt=&quot;5355a0f82398ee2052f2e659328d737b&quot; src=&quot;https://github.com/user-attachments/assets/ea690f33-0c5f-4941-9332-de9feff838e7&quot; /&gt;


</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[hexgrad/kokoro]]></title>
            <link>https://github.com/hexgrad/kokoro</link>
            <guid>https://github.com/hexgrad/kokoro</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:40 GMT</pubDate>
            <description><![CDATA[https://hf.co/hexgrad/Kokoro-82M]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/hexgrad/kokoro">hexgrad/kokoro</a></h1>
            <p>https://hf.co/hexgrad/Kokoro-82M</p>
            <p>Language: JavaScript</p>
            <p>Stars: 4,691</p>
            <p>Forks: 526</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre># kokoro

An inference library for [Kokoro-82M](https://huggingface.co/hexgrad/Kokoro-82M). You can [`pip install kokoro`](https://pypi.org/project/kokoro/).

&gt; **Kokoro** is an open-weight TTS model with 82 million parameters. Despite its lightweight architecture, it delivers comparable quality to larger models while being significantly faster and more cost-efficient. With Apache-licensed weights, Kokoro can be deployed anywhere from production environments to personal projects.

### Usage
You can run this basic cell on [Google Colab](https://colab.research.google.com/). [Listen to samples](https://huggingface.co/hexgrad/Kokoro-82M/blob/main/SAMPLES.md).
```py
!pip install -q kokoro&gt;=0.9.4 soundfile
!apt-get -qq -y install espeak-ng &gt; /dev/null 2&gt;&amp;1
from kokoro import KPipeline
from IPython.display import display, Audio
import soundfile as sf
import torch
pipeline = KPipeline(lang_code=&#039;a&#039;)
text = &#039;&#039;&#039;
[Kokoro](/kÀàOk…ô…πO/) is an open-weight TTS model with 82 million parameters. Despite its lightweight architecture, it delivers comparable quality to larger models while being significantly faster and more cost-efficient. With Apache-licensed weights, [Kokoro](/kÀàOk…ô…πO/) can be deployed anywhere from production environments to personal projects.
&#039;&#039;&#039;
generator = pipeline(text, voice=&#039;af_heart&#039;)
for i, (gs, ps, audio) in enumerate(generator):
    print(i, gs, ps)
    display(Audio(data=audio, rate=24000, autoplay=i==0))
    sf.write(f&#039;{i}.wav&#039;, audio, 24000)
```
Under the hood, `kokoro` uses [`misaki`](https://pypi.org/project/misaki/), a G2P library at https://github.com/hexgrad/misaki

### Advanced Usage
You can run this advanced cell on [Google Colab](https://colab.research.google.com/).
```py
# 1Ô∏è‚É£ Install kokoro
!pip install -q kokoro&gt;=0.9.4 soundfile
# 2Ô∏è‚É£ Install espeak, used for English OOD fallback and some non-English languages
!apt-get -qq -y install espeak-ng &gt; /dev/null 2&gt;&amp;1

# 3Ô∏è‚É£ Initalize a pipeline
from kokoro import KPipeline
from IPython.display import display, Audio
import soundfile as sf
import torch
# üá∫üá∏ &#039;a&#039; =&gt; American English, üá¨üáß &#039;b&#039; =&gt; British English
# üá™üá∏ &#039;e&#039; =&gt; Spanish es
# üá´üá∑ &#039;f&#039; =&gt; French fr-fr
# üáÆüá≥ &#039;h&#039; =&gt; Hindi hi
# üáÆüáπ &#039;i&#039; =&gt; Italian it
# üáØüáµ &#039;j&#039; =&gt; Japanese: pip install misaki[ja]
# üáßüá∑ &#039;p&#039; =&gt; Brazilian Portuguese pt-br
# üá®üá≥ &#039;z&#039; =&gt; Mandarin Chinese: pip install misaki[zh]
pipeline = KPipeline(lang_code=&#039;a&#039;) # &lt;= make sure lang_code matches voice, reference above.

# This text is for demonstration purposes only, unseen during training
text = &#039;&#039;&#039;
The sky above the port was the color of television, tuned to a dead channel.
&quot;It&#039;s not like I&#039;m using,&quot; Case heard someone say, as he shouldered his way through the crowd around the door of the Chat. &quot;It&#039;s like my body&#039;s developed this massive drug deficiency.&quot;
It was a Sprawl voice and a Sprawl joke. The Chatsubo was a bar for professional expatriates; you could drink there for a week and never hear two words in Japanese.

These were to have an enormous impact, not only because they were associated with Constantine, but also because, as in so many other areas, the decisions taken by Constantine (or in his name) were to have great significance for centuries to come. One of the main issues was the shape that Christian churches were to take, since there was not, apparently, a tradition of monumental church buildings when Constantine decided to help the Christian church build a series of truly spectacular structures. The main form that these churches took was that of the basilica, a multipurpose rectangular structure, based ultimately on the earlier Greek stoa, which could be found in most of the great cities of the empire. Christianity, unlike classical polytheism, needed a large interior space for the celebration of its religious services, and the basilica aptly filled that need. We naturally do not know the degree to which the emperor was involved in the design of new churches, but it is tempting to connect this with the secular basilica that Constantine completed in the Roman forum (the so-called Basilica of Maxentius) and the one he probably built in Trier, in connection with his residence in the city at a time when he was still caesar.

[Kokoro](/kÀàOk…ô…πO/) is an open-weight TTS model with 82 million parameters. Despite its lightweight architecture, it delivers comparable quality to larger models while being significantly faster and more cost-efficient. With Apache-licensed weights, [Kokoro](/kÀàOk…ô…πO/) can be deployed anywhere from production environments to personal projects.
&#039;&#039;&#039;
# text = &#039;„Äå„ÇÇ„Åó„Åä„Çå„Åå„Åü„Å†ÂÅ∂ÁÑ∂„ÄÅ„Åù„Åó„Å¶„Åì„ÅÜ„Åó„Çà„ÅÜ„Å®„ÅÑ„ÅÜ„Å§„ÇÇ„Çä„Åß„Å™„Åè„Åì„Åì„Å´Á´ã„Å£„Å¶„ÅÑ„Çã„ÅÆ„Å™„Çâ„ÄÅ„Å°„Çá„Å£„Å®„Å∞„Åã„ÇäÁµ∂Êúõ„Åô„Çã„Å®„Åì„Çç„Å†„Å™„Äç„Å®„ÄÅ„Åù„Çì„Å™„Åì„Å®„ÅåÂΩº„ÅÆÈ†≠„Å´ÊÄù„ÅÑÊµÆ„Åã„Çì„Å†„ÄÇ&#039;
# text = &#039;‰∏≠Âúã‰∫∫Ê∞ë‰∏ç‰ø°ÈÇ™‰πü‰∏çÊÄïÈÇ™Ôºå‰∏çÊÉπ‰∫ã‰πü‰∏çÊÄï‰∫ãÔºå‰ªª‰ΩïÂ§ñÂúã‰∏çË¶ÅÊåáÊúõÊàëÂÄëÊúÉÊãøËá™Â∑±ÁöÑÊ†∏ÂøÉÂà©ÁõäÂÅö‰∫§ÊòìÔºå‰∏çË¶ÅÊåáÊúõÊàëÂÄëÊúÉÂêû‰∏ãÊêçÂÆ≥ÊàëÂúã‰∏ªÊ¨ä„ÄÅÂÆâÂÖ®„ÄÅÁôºÂ±ïÂà©ÁõäÁöÑËã¶ÊûúÔºÅ&#039;
# text = &#039;Los partidos pol√≠ticos tradicionales compiten con los populismos y los movimientos asamblearios.&#039;
# text = &#039;Le dromadaire resplendissant d√©ambulait tranquillement dans les m√©andres en mastiquant de petites feuilles verniss√©es.&#039;
# text = &#039;‡§ü‡•ç‡§∞‡§æ‡§Ç‡§∏‡§™‡•ã‡§∞‡•ç‡§ü‡§∞‡•ã‡§Ç ‡§ï‡•Ä ‡§π‡§°‡§º‡§§‡§æ‡§≤ ‡§≤‡§ó‡§æ‡§§‡§æ‡§∞ ‡§™‡§æ‡§Ç‡§ö‡§µ‡•á‡§Ç ‡§¶‡§ø‡§® ‡§ú‡§æ‡§∞‡•Ä, ‡§¶‡§ø‡§∏‡§Ç‡§¨‡§∞ ‡§∏‡•á ‡§á‡§≤‡•á‡§ï‡•ç‡§ü‡•ç‡§∞‡•â‡§®‡§ø‡§ï ‡§ü‡•ã‡§≤ ‡§ï‡§≤‡•á‡§ï‡•ç‡§∂‡§®‡§≤ ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ&#039;
# text = &quot;Allora cominciava l&#039;insonnia, o un dormiveglia peggiore dell&#039;insonnia, che talvolta assumeva i caratteri dell&#039;incubo.&quot;
# text = &#039;Elabora relat√≥rios de acompanhamento cronol√≥gico para as diferentes unidades do Departamento que prop√µem contratos.&#039;

# 4Ô∏è‚É£ Generate, display, and save audio files in a loop.
generator = pipeline(
    text, voice=&#039;af_heart&#039;, # &lt;= change voice here
    speed=1, split_pattern=r&#039;\n+&#039;
)
# Alternatively, load voice tensor directly:
# voice_tensor = torch.load(&#039;path/to/voice.pt&#039;, weights_only=True)
# generator = pipeline(
#     text, voice=voice_tensor,
#     speed=1, split_pattern=r&#039;\n+&#039;
# )

for i, (gs, ps, audio) in enumerate(generator):
    print(i)  # i =&gt; index
    print(gs) # gs =&gt; graphemes/text
    print(ps) # ps =&gt; phonemes
    display(Audio(data=audio, rate=24000, autoplay=i==0))
    sf.write(f&#039;{i}.wav&#039;, audio, 24000) # save each audio file
```

### Windows Installation
To install espeak-ng on Windows:
1. Go to [espeak-ng releases](https://github.com/espeak-ng/espeak-ng/releases)
2. Click on **Latest release** 
3. Download the appropriate `*.msi` file (e.g. **espeak-ng-20191129-b702b03-x64.msi**)
4. Run the downloaded installer

For advanced configuration and usage on Windows, see the [official espeak-ng Windows guide](https://github.com/espeak-ng/espeak-ng/blob/master/docs/guide.md)

### MacOS Apple Silicon GPU Acceleration

On Mac M1/M2/M3/M4 devices, you can explicitly specify the environment variable `PYTORCH_ENABLE_MPS_FALLBACK=1` to enable GPU acceleration.

```bash
PYTORCH_ENABLE_MPS_FALLBACK=1 python run-your-kokoro-script.py
```

### Conda Environment
Use the following conda `environment.yml` if you&#039;re facing any dependency issues.
```yaml
name: kokoro
channels:
  - defaults
dependencies:
  - python==3.9       
  - libstdcxx~=12.4.0 # Needed to load espeak correctly. Try removing this if you&#039;re facing issues with Espeak fallback. 
  - pip:
      - kokoro&gt;=0.3.1
      - soundfile
      - misaki[en]
```

### Acknowledgements
- üõ†Ô∏è [@yl4579](https://huggingface.co/yl4579) for architecting StyleTTS 2.
- üèÜ [@Pendrokar](https://huggingface.co/Pendrokar) for adding Kokoro as a contender in the TTS Spaces Arena.
- üìä Thank you to everyone who contributed synthetic training data.
- ‚ù§Ô∏è Special thanks to all compute sponsors.
- üëæ Discord server: https://discord.gg/QuGxSWBfQy
- ü™Ω Kokoro is a Japanese word that translates to &quot;heart&quot; or &quot;spirit&quot;. Kokoro is also a [character in the Terminator franchise](https://terminator.fandom.com/wiki/Kokoro) along with [Misaki](https://github.com/hexgrad/misaki?tab=readme-ov-file#acknowledgements).

&lt;img src=&quot;https://static0.gamerantimages.com/wordpress/wp-content/uploads/2024/08/terminator-zero-41-1.jpg&quot; width=&quot;400&quot; alt=&quot;kokoro&quot; /&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[zumerlab/snapdom]]></title>
            <link>https://github.com/zumerlab/snapdom</link>
            <guid>https://github.com/zumerlab/snapdom</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:39 GMT</pubDate>
            <description><![CDATA[SnapDOM is a next-generation DOM capture engine that transforms HTML into almost any format all powered by a flexible plugin system]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/zumerlab/snapdom">zumerlab/snapdom</a></h1>
            <p>SnapDOM is a next-generation DOM capture engine that transforms HTML into almost any format all powered by a flexible plugin system</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,765</p>
            <p>Forks: 223</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;http://zumerlab.github.io/snapdom&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/zumerlab/snapdom/main/docs/assets/newhero.png&quot; width=&quot;80%&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
 &lt;a href=&quot;https://www.npmjs.com/package/@zumer/snapdom&quot;&gt;
    &lt;img alt=&quot;NPM version&quot; src=&quot;https://img.shields.io/npm/v/@zumer/snapdom?style=flat-square&amp;label=Version&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@zumer/snapdom&quot;&gt;
    &lt;img alt=&quot;NPM version&quot; src=&quot;https://img.shields.io/npm/v/@zumer/snapdom/dev?style=flat-square&amp;label=Dev&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/zumerlab/snapdom/graphs/contributors&quot;&gt;
    &lt;img alt=&quot;GitHub contributors&quot; src=&quot;https://img.shields.io/github/contributors/zumerlab/snapdom?style=flat-square&amp;label=Contributors&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/zumerlab/snapdom/stargazers&quot;&gt;
    &lt;img alt=&quot;GitHub stars&quot; src=&quot;https://img.shields.io/github/stars/zumerlab/snapdom?style=flat-square&amp;label=Stars&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/zumerlab/snapdom/network/members&quot;&gt;
    &lt;img alt=&quot;GitHub forks&quot; src=&quot;https://img.shields.io/github/forks/zumerlab/snapdom?style=flat-square&amp;label=Forks&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/sponsors/tinchox5&quot;&gt;
    &lt;img alt=&quot;Sponsor tinchox5&quot; src=&quot;https://img.shields.io/github/sponsors/tinchox5?style=flat-square&amp;label=Sponsor&quot;&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/zumerlab/snapdom/blob/main/LICENSE&quot;&gt;
    &lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/github/license/zumerlab/snapdom?style=flat-square&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

# snapDOM

**snapDOM** is a fast and accurate DOM-to-image capture tool built for **Zumly**, a zoom-based view transition framework.

It captures any HTML element as a scalable SVG image, preserving styles, fonts, background images, pseudo-elements, and even shadow DOM. It also supports export to raster image formats and canvas.

* Full DOM capture
* Embedded styles, pseudo-elements, and fonts
* Export to SVG, PNG, JPG, WebP, `canvas`, or Blob
* ‚ö° Ultra fast, no dependencies
* 100% based on standard Web APIs
* Support same-origin `√¨frame`
* Support CSS counter() and CSS counters()
* Support `...` line-clamp

## Demo

[https://snapdom.dev](https://snapdom.dev)


## Table of Contents

- [Installation](#installation)
  - [NPM / Yarn (stable)](#npm--yarn-stable)
  - [NPM / Yarn (dev builds)](#npm--yarn-dev-builds)
  - [CDN (stable)](#cdn-stable)
  - [CDN (dev builds)](#cdn-dev-builds)
- [Basic usage](#basic-usage)
  - [Reusable capture](#reusable-capture)
  - [One-step shortcuts](#one-step-shortcuts)
- [API](#api)
  - [snapdom(el, options?)](#snapdomel-options)
  - [Shortcut methods](#shortcut-methods)
- [Options](#options)
  - [Fallback image on `&lt;img&gt;` load failure](#fallback-image-on-img-load-failure)
  - [Dimensions (`scale`, `width`, `height`)](#dimensions-scale-width-height)
  - [Cross-Origin Images &amp; Fonts (`useProxy`)](#cross-origin-images--fonts-useproxy)
  - [Fonts](#fonts)
    - [embedFonts](#embedfonts)
    - [localFonts](#localfonts)
    - [iconFonts](#iconfonts)
    - [excludeFonts](#excludefonts)
  - [Filtering nodes: `exclude` vs `filter`](#filtering-nodes-exclude-vs-filter)
  - [straighten](#straighten)
  - [noShadows](#no-shadows)
  - [Cache control](#cache-control)
- [preCache](#precache--optional-helper)
- [Plugins (BETA)](#plugins-beta)
  - [Registering Plugins](#registering-plugins)
  - [Plugin Lifecycle Hooks](#plugin-lifecycle-hooks)
  - [Context Object](#context-object)
  - [Custom Exports via Plugins](#custom-exports-via-plugins)
  - [Example: Overlay Filter Plugin](#example-overlay-filter-plugin)
  - [Full Plugin Template](#full-plugin-template)
- [Limitations](#limitations)
- [‚ö° Performance Benchmarks (Chromium)](#performance-benchmarks)
  - [Simple elements](#simple-elements)
  - [Complex elements](#complex-elements)
  - [Run the benchmarks](#run-the-benchmarks)
- [Roadmap](#roadmap)
- [Development](#development)
- [Contributors üôå](#contributors)
- [üíñ Sponsors](#sponsors)
- [Star History](#star-history)
- [License](#license)



## Installation

### NPM / Yarn (stable)

```bash
npm i @zumer/snapdom
yarn add @zumer/snapdom
```

### NPM / Yarn (dev builds)

For early access to new features and fixes:

```bash
npm i @zumer/snapdom@dev
yarn add @zumer/snapdom@dev
```

‚ö†Ô∏è The `@dev` tag usually includes improvements before they reach production, but may be less stable.


### CDN (stable)

```html
&lt;!-- Minified UMD build --&gt;
&lt;script src=&quot;https://unpkg.com/@zumer/snapdom/dist/snapdom.min.js&quot;&gt;&lt;/script&gt;

&lt;!-- ES Module build --&gt;
&lt;script type=&quot;module&quot;&gt;
  import { snapdom } from &quot;https://unpkg.com/@zumer/snapdom/dist/snapdom.mjs&quot;;
&lt;/script&gt;
```

### CDN (dev builds)

```html
&lt;!-- Minified UMD build (dev) --&gt;
&lt;script src=&quot;https://unpkg.com/@zumer/snapdom@dev/dist/snapdom.min.js&quot;&gt;&lt;/script&gt;

&lt;!-- ES Module build (dev) --&gt;
&lt;script type=&quot;module&quot;&gt;
  import { snapdom } from &quot;https://unpkg.com/@zumer/snapdom@dev/dist/snapdom.mjs&quot;;
&lt;/script&gt;
```


## Basic usage

### Reusable capture
```js
const el = document.querySelector(&#039;#target&#039;);
const result = await snapdom(el);

const img = await result.toPng();
document.body.appendChild(img);

await result.download({ format: &#039;jpg&#039;, filename: &#039;my-capture&#039; });
```

### One-step shortcuts
```js
const el = document.querySelector(&#039;#target&#039;);
const png = await snapdom.toPng(el);
document.body.appendChild(png);

const blob = await snapdom.toBlob(el);
```

## API

### `snapdom(el, options?)`

Returns an object with reusable export methods:

```js
{
  url: string;
  toRaw(): string;
  toImg(): Promise&lt;HTMLImageElement&gt;; // deprecated 
  toSvg(): Promise&lt;HTMLImageElement&gt;;
  toCanvas(): Promise&lt;HTMLCanvasElement&gt;;
  toBlob(options?): Promise&lt;Blob&gt;;
  toPng(options?): Promise&lt;HTMLImageElement&gt;;
  toJpg(options?): Promise&lt;HTMLImageElement&gt;;
  toWebp(options?): Promise&lt;HTMLImageElement&gt;;
  download(options?): Promise&lt;void&gt;;
}
```

### Shortcut methods

| Method                         | Description                       |
| ------------------------------ | --------------------------------- |
| `snapdom.toImg(el, options?)`  | Returns an SVG `HTMLImageElement` (deprecated) |
| `snapdom.toSvg(el, options?)`  | Returns an SVG `HTMLImageElement` |
| `snapdom.toCanvas(el, options?)` | Returns a `Canvas`               |
| `snapdom.toBlob(el, options?)` | Returns an SVG or raster `Blob`   |
| `snapdom.toPng(el, options?)`  | Returns a PNG image               |
| `snapdom.toJpg(el, options?)`  | Returns a JPG image               |
| `snapdom.toWebp(el, options?)` | Returns a WebP image              |
| `snapdom.download(el, options?)` | Triggers a download              |

## Options

&gt; ‚úÖ **Note:** Style compression is now always on internally. The `compress` option has been removed.

All capture methods accept an `options` object:


| Option            | Type     | Default  | Description                                     |
| ----------------- | -------- | -------- | ----------------------------------------------- |
| `fast`            | boolean  | `true`   | Skips small idle delays for faster results      |
| `embedFonts`      | boolean  | `false`  | Inlines non-icon fonts (icon fonts always on)   |
| `localFonts`      | array    | `[]`     | Local fonts `{ family, src, weight?, style? }`  |
| `iconFonts`       | string\|RegExp\|Array | `[]` | Extra icon font matchers                      |
| `excludeFonts`    | object   | `{}`     | Exclude families/domains/subsets during embedding |
| `scale`           | number   | `1`      | Output scale multiplier                         |
| `dpr`             | number   | `devicePixelRatio` | Device pixel ratio                     |
| `width`           | number   | -        | Output width                                    |
| `height`          | number   | -        | Output height                                   |
| `backgroundColor` | string   | `&quot;#fff&quot;` | Fallback color for JPG/WebP                     |
| `quality`         | number   | `1`      | Quality for JPG/WebP (0 to 1)                   |
| `useProxy`        | string   | `&#039;&#039;`     | Proxy base for CORS fallbacks                   |
| `type`            | string   | `svg`    | Default Blob type (`svg`\|`png`\|`jpg`\|`webp`) |
| `exclude`         | string[] | -        | CSS selectors to exclude                        |
| `excludeMode`     | `&quot;hide&quot;`\|`&quot;remove&quot;` | `&quot;hide&quot;` | How `exclude` is applied                  |
| `filter`          | function | -        | Custom predicate `(el) =&gt; boolean`              |
| `filterMode`      | `&quot;hide&quot;`\|`&quot;remove&quot;` | `&quot;hide&quot;` | How `filter` is applied                   |
| `cache`           | string   | `&quot;soft&quot;` | `disabled` \| `soft` \| `auto` \| `full`        |
| `placeholders`    | boolean  | `true`   | Show placeholders for images/CORS iframes       |
| `fallbackURL`     | string \| function  | - | Fallback image for `&lt;img&gt;` load failure |
| `straighten`      | boolean  | `false`  | Straightens the root: removes `translate/rotate` but preserves `scale/skew`, producing a flat, reusable capture |
| `noShadows`       | boolean  | `false`  | Do not expand the root‚Äôs bounding box for shadows/blur/outline, and strip those visual effects from the cloned root |

### Fallback image on `&lt;img&gt;` load failure

Provide a default image for failed `&lt;img&gt;` loads. You can pass a fixed URL or a callback that receives measured dimensions and returns a URL (handy to generate dynamic placeholders).

```js
// 1) Fixed URL fallback
await snapdom.toSvg(element, {
  fallbackURL: &#039;/images/fallback.png&#039;
});

// 2) Dynamic placeholder via callback
await snapdom.toSvg(element, {
  fallbackURL: ({ width: 300, height: 150 }) =&gt;
    `https://placehold.co/${width}x${height}`
});

// 3) With proxy (if your fallback host has no CORS)
await snapdom.toSvg(element, {
  fallbackURL: ({ width = 300, height = 150 }) =&gt;
    `https://dummyimage.com/${width}x${height}/cccccc/666.png&amp;text=img`,
  useProxy: &#039;https://proxy.corsfix.com/?&#039;
});
```

Notes:
- If the fallback image also fails to load, snapDOM replaces the `&lt;img&gt;` with a placeholder block preserving width/height.
- Width/height used by the callback are gathered from the original element (dataset, style/attrs, etc.) when available.


### Dimensions (`scale`, `width`, `height`)

* If `scale` is provided, it **takes precedence** over `width`/`height`.
* If only `width` is provided, height scales proportionally (and vice versa).
* Providing both `width` and `height` forces an exact size (may distort).

### Cross-Origin Images &amp; Fonts (`useProxy`)

By default snapDOM tries `crossOrigin=&quot;anonymous&quot;` (or `use-credentials` for same-origin). If an asset is CORS-blocked, you can set `useProxy` to a prefix URL that forwards the actual `src`:

```js
await snapdom.toPng(el, {
  useProxy: &#039;https://proxy.corsfix.com/?&#039; // Note: Any cors proxy could be used &#039;https://proxy.corsfix.com/?&#039;
});
```


* The proxy is only used as a **fallback**; same-origin and CORS-enabled assets skip it.

### Fonts

#### `embedFonts`
When `true`, snapDOM embeds **non-icon** `@font-face` rules detected as used within the captured subtree. Icon fonts (Font Awesome, Material Icons, etc.) are embedded **always**.

#### `localFonts`
If you serve fonts yourself or have data URLs, you can declare them here to avoid extra CSS discovery:

```js
await snapdom.toPng(el, {
  embedFonts: true,
  localFonts: [
    { family: &#039;Inter&#039;, src: &#039;/fonts/Inter-Variable.woff2&#039;, weight: 400, style: &#039;normal&#039; },
    { family: &#039;Inter&#039;, src: &#039;/fonts/Inter-Italic.woff2&#039;, style: &#039;italic&#039; }
  ]
});
```

#### `iconFonts`
Add custom icon families (names or regex matchers). Useful for private icon sets:

```js
await snapdom.toPng(el, {
  iconFonts: [&#039;MyIcons&#039;, /^(Remix|Feather) Icons?$/i]
});
```

#### `excludeFonts`
Skip specific non-icon fonts to speed up capture or avoid unnecessary downloads.

```js
await snapdom.toPng(el, {
  embedFonts: true,
  excludeFonts: {
    families: [&#039;Noto Serif&#039;, &#039;SomeHeavyFont&#039;],     // skip by family name
    domains: [&#039;fonts.gstatic.com&#039;, &#039;cdn.example&#039;], // skip by source host
    subsets: [&#039;cyrillic-ext&#039;]                      // skip by unicode-range subset tag
  }
});
```
*Notes*
- `excludeFonts` only applies to **non-icon** fonts. Icon fonts are always embedded.
- Matching is case-insensitive for `families`. Hosts are matched by substring against the resolved URL.


#### Filtering nodes: `exclude` vs `filter`

* `exclude`: remove by **selector**.
* `excludeMode`: `hide` applies `visibility:hidden` CSS rule on excluded nodes and the layout remains as the original. `remove` do not clone excluded nodes at all.
* `filter`: advanced predicate per element (return `false` to drop).
* `filterMode`: `hide` applies `visibility:hidden` CSS rule on filtered nodes and the layout remains as the original. `remove` do not clone filtered nodes at all.

**Example: filter out elements with `display:none`:**
```js
/**
 * Example filter: skip elements with display:none
 * @param {Element} el
 * @returns {boolean} true = keep, false = exclude
 */
function filterHidden(el) {
  const cs = window.getComputedStyle(el);
  if (cs.display === &#039;none&#039;) return false;
  return true;
}

await snapdom.toPng(document.body, { filter: filterHidden });
```

**Example with `exclude`:** remove banners or tooltips by selector
```js
await snapdom.toPng(el, {
  exclude: [&#039;.cookie-banner&#039;, &#039;.tooltip&#039;, &#039;[data-test=&quot;debug&quot;]&#039;]
});
```

### Straighten 

When capturing rotated or translated elements, you may want to **straighten** the root so the snapshot can be reused in another layout without inheriting those transforms.

- **`straighten: true`**  
  Straightens the cloned root: **removes `translate` and `rotate`** but **keeps `scale/skew`** to preserve proportions.  
  The output is **flat, upright, and ready** to embed elsewhere.


### noShadows
- **`noShadows: true`**  
  Prevents expanding the bounding box for shadows, blur, or outline on the root, and also strips `box-shadow`, `text-shadow`, `filter: blur()/drop-shadow()`, and `outline` from the cloned root.  

&gt; üí° **Tip:** Using both (`straighten` + `noShadows`) produces a strict, minimal bounding box with no visual bleed.

**Example**

```js
// Straighten and remove shadow bleed
await snapdom.toSvg(el, { straighten: true, noShadows: true });
```

## Cache control

SnapDOM maintains internal caches for images, backgrounds, resources, styles, and fonts.
You can control how they are cleared between captures using the `cache` option:

| Mode        | Description                                                                 |
| ----------- | --------------------------------------------------------------------------- |
| `&quot;disabled&quot;`| No cache                   |
| `&quot;soft&quot;`    | Clears session caches (`styleMap`, `nodeMap`, `styleCache`) _(default)_      |
| `&quot;auto&quot;`    | Minimal cleanup: only clears transient maps                                 |
| `&quot;full&quot;`    | Keeps all caches (nothing is cleared, maximum performance)                  |

**Examples:**

```js
// Use minimal but fast cache
await snapdom.toPng(el, { cache: &#039;auto&#039; });

// Keep everything in memory between captures
await snapdom.toPng(el, { cache: &#039;full&#039; });

// Force a full cleanup on every capture
await snapdom.toPng(el, { cache: &#039;disabled&#039; });
```

## `preCache()` ‚Äì Optional helper

Preloads external resources to avoid first-capture stalls (helpful for big/complex trees).

```js
import { preCache } from &#039;@zumer/snapdom&#039;;

await preCache({
  root: document.body,
  embedFonts: true,
  localFonts: [{ family: &#039;Inter&#039;, src: &#039;/fonts/Inter.woff2&#039;, weight: 400 }],
  useProxy: &#039;https://proxy.corsfix.com/?&#039;
});
```

## Plugins (BETA)

SnapDOM includes a lightweight **plugin system** that allows you to extend or override behavior at any stage of the capture and export process ‚Äî without touching the core library.

A plugin is a simple object with a unique `name` and one or more lifecycle **hooks**.
Hooks can be synchronous or `async`, and they receive a shared **`context`** object.

### Registering Plugins

**Global registration** (applies to all captures):

```js
import { snapdom } from &#039;@zumer/snapdom&#039;;

// You can register instances, factories, or [factory, options]
snapdom.plugins(
  myPluginInstance,
  [myPluginFactory, { optionA: true }],
  { plugin: anotherFactory, options: { level: 2 } }
);
```

**Per-capture registration** (only for that specific call):

```js
const out = await snapdom(element, {
  plugins: [
    [overlayFilterPlugin, { color: &#039;rgba(0,0,0,0.25)&#039; }],
    [myFullPlugin, { providePdf: true }]
  ]
});
```

* **Execution order = registration order** (first registered, first executed).
* **Per-capture plugins** run **before** global ones.
* Duplicates are automatically skipped by `name`; a per-capture plugin with the same `name` overrides its global version.

### Plugin Lifecycle Hooks

| Hook                           | Purpose                                                                              |
| ------------------------------ | ------------------------------------------------------------------------------------ |
| `beforeSnap(context)`          | Before any clone/style work. Ideal for adjusting global capture options.             |
| `beforeClone(context)`         | Before DOM cloning. Can modify live DOM (use carefully).                             |
| `afterClone(context)`          | After the element subtree has been cloned. Safe to modify styles in the cloned tree. |
| `beforeRender(context)`        | Right before SVG/dataURL serialization.                                              |
| `afterRender(context)`         | After serialization (you can inspect `context.svgString` or `context.dataURL`).      |
| `beforeExport(context)`        | Before each export call (`toPng`, `toSvg`, etc.).                                    |
| `afterExport(context, result)` | After each export call ‚Äî can transform the returned result.                          |
| `afterSnap(context)`           | Runs **once**, after the **first export** finishes. Perfect for cleanup.             |
| `defineExports(context)`       | Returns a map of **custom exporters**, e.g. `{ pdf: async (ctx, opts) =&gt; Blob }`.    |

&gt; Returned values from `afterExport` are chained to the next plugin (transform pipeline).

### Context Object

Every hook receives a single `context` object that contains normalized capture state:

* **Input &amp; options:**
  `element`, `debug`, `fast`, `scale`, `dpr`, `width`, `height`, `backgroundColor`, `quality`, `useProxy`, `cache`, `straighten`, `noShadows`, `embedFonts`, `localFonts`, `iconFonts`, `excludeFonts`, `exclude`, `excludeMode`, `filter`, `filterMode`, `fallbackURL`.

* **Intermediate values (depending on stage):**
  `clone`, `classCSS`, `styleCache`, `fontsCSS`, `baseCSS`, `svgString`, `dataURL`.

* **During export:**
  `context.export = { type, options, url }`
  where `type` is the exporter name (`&quot;png&quot;`, `&quot;jpeg&quot;`, `&quot;svg&quot;`, `&quot;blob&quot;`, etc.), and `url` is the serialized SVG base.

&gt; You may safely modify `context` (e.g., override `backgroundColor` or `quality`) ‚Äî but do so early (`beforeSnap`) for global effects or in `beforeExport` for single-export changes.


## Custom Exports via Plugins

Plugins can add new exports using `defineExports(context)`.
For each export key you return (e.g., `&quot;pdf&quot;`), SnapDOM automatically exposes a helper method named **`toPdf()`** on the capture result.

**Register the plugin (global or per capture):**

```js
import { snapdom } from &#039;@zumer/snapdom&#039;;

// global
snapdom.plugins(overlayFilterPlugin());

// or per capture
const out = await snapdom(element, { plugins: [overlayFilterPlugin()] });
```

**Call the custom export:**

```js
const out = await snapdom(document.querySelector(&#039;#report&#039;));

// because the plugin returns { pdf: async (ctx, opts) =&gt; ... }
const pdfBlob = await out.toPdf({
  // exporter-specific options (width, height, quality, filename, etc.)
});
```

### Example: Overlay Filter Plugin

Adds a translucent overlay or color filter **only** to the cap

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[pickle-com/glass]]></title>
            <link>https://github.com/pickle-com/glass</link>
            <guid>https://github.com/pickle-com/glass</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:38 GMT</pubDate>
            <description><![CDATA[Digital Mind Extension]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pickle-com/glass">pickle-com/glass</a></h1>
            <p>Digital Mind Extension</p>
            <p>Language: JavaScript</p>
            <p>Stars: 6,814</p>
            <p>Forks: 1,047</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://pickle.com/glass&quot;&gt;
   &lt;img src=&quot;./public/assets/banner.gif&quot; alt=&quot;Logo&quot;&gt;
  &lt;/a&gt;

  &lt;h1 align=&quot;center&quot;&gt;Glass by Pickle: Digital Mind Extension üß†&lt;/h1&gt;

&lt;/p&gt;


&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://discord.gg/UCZH5B5Hpd&quot;&gt;&lt;img src=&quot;./public/assets/button_dc.png&quot; width=&quot;80&quot; alt=&quot;Pickle Discord&quot;&gt;&lt;/a&gt;&amp;ensp;&lt;a href=&quot;https://pickle.com&quot;&gt;&lt;img src=&quot;./public/assets/button_we.png&quot; width=&quot;105&quot; alt=&quot;Pickle Website&quot;&gt;&lt;/a&gt;&amp;ensp;&lt;a href=&quot;https://x.com/intent/user?screen_name=leinadpark&quot;&gt;&lt;img src=&quot;./public/assets/button_xe.png&quot; width=&quot;109&quot; alt=&quot;Follow Daniel&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&gt; This project is a fork of [CheatingDaddy](https://github.com/sohzm/cheating-daddy) with modifications and enhancements. Thanks to [Soham](https://x.com/soham_btw) and all the open-source contributors who made this possible!

ü§ñ **Fast, light &amp; open-source**‚ÄîGlass lives on your desktop, sees what you see, listens in real time, understands your context, and turns every moment into structured knowledge.

üí¨ **Proactive in meetings**‚Äîit surfaces action items, summaries, and answers the instant you need them.

ü´•Ô∏è **Truly invisible**‚Äînever shows up in screen recordings, screenshots, or your dock; no always-on capture or hidden sharing.

To have fun building with us, join our [Discord](https://discord.gg/UCZH5B5Hpd)!

## Instant Launch

‚ö°Ô∏è ¬†Skip the setup‚Äîlaunch instantly with our ready-to-run macOS app.  [[Download Here]](https://www.dropbox.com/scl/fi/znid09apxiwtwvxer6oc9/Glass_latest.dmg?rlkey=gwvvyb3bizkl25frhs4k1zwds&amp;st=37q31b4w&amp;dl=1)

## Quick Start (Local Build)

### Prerequisites

First download &amp; install [Python](https://www.python.org/downloads/) and [Node](https://nodejs.org/en/download).
If you are using Windows, you need to also install [Build Tools for Visual Studio](https://visualstudio.microsoft.com/downloads/)

Ensure you&#039;re using Node.js version 20.x.x to avoid build errors with native dependencies.

```bash
# Check your Node.js version
node --version

# If you need to install Node.js 20.x.x, we recommend using nvm:
# curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
# nvm install 20
# nvm use 20
```

### Installation

```bash
npm run setup
```

## Highlights


### Ask: get answers based on all your previous screen actions &amp; audio

&lt;img width=&quot;100%&quot; alt=&quot;booking-screen&quot; src=&quot;./public/assets/00.gif&quot;&gt;

### Meetings: real-time meeting notes, live summaries, session records

&lt;img width=&quot;100%&quot; alt=&quot;booking-screen&quot; src=&quot;./public/assets/01.gif&quot;&gt;

### Use your own API key, or sign up to use ours (free)

&lt;img width=&quot;100%&quot; alt=&quot;booking-screen&quot; src=&quot;./public/assets/02.gif&quot;&gt;

**Currently Supporting:**
- OpenAI API: Get OpenAI API Key [here](https://platform.openai.com/api-keys)
- Gemini API: Get Gemini API Key [here](https://aistudio.google.com/apikey)
- Local LLM Ollama &amp; Whisper

### Liquid Glass Design (coming soon)

&lt;img width=&quot;100%&quot; alt=&quot;booking-screen&quot; src=&quot;./public/assets/03.gif&quot;&gt;

&lt;p&gt;
  for a more detailed guide, please refer to this &lt;a href=&quot;https://www.youtube.com/watch?v=qHg3_4bU1Dw&quot;&gt;video.&lt;/a&gt;
  &lt;i style=&quot;color:gray; font-weight:300;&quot;&gt;
    we don&#039;t waste money on fancy vids; we just code.
  &lt;/i&gt;
&lt;/p&gt;


## Keyboard Shortcuts

`Ctrl/Cmd + \` : show and hide main window

`Ctrl/Cmd + Enter` : ask AI using all your previous screen and audio

`Ctrl/Cmd + Arrows` : move main window position

## Repo Activity

![Alt](https://repobeats.axiom.co/api/embed/a23e342faafa84fa8797fa57762885d82fac1180.svg &quot;Repobeats analytics image&quot;)

## Contributing

We love contributions! Feel free to open issues for bugs or feature requests. For detailed guide, please see our [contributing guide](/CONTRIBUTING.md).
&gt; Currently, we&#039;re working on a full code refactor and modularization. Once that&#039;s completed, we&#039;ll jump into addressing the major issues.

### Contributors

&lt;a href=&quot;https://github.com/pickle-com/glass/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=pickle-com/glass&quot; /&gt;
&lt;/a&gt;

### Help Wanted Issues

We have a list of [help wanted](https://github.com/pickle-com/glass/issues?q=is%3Aissue%20state%3Aopen%20label%3A%22%F0%9F%99%8B%E2%80%8D%E2%99%82%EF%B8%8Fhelp%20wanted%22) that contain small features and bugs which have a relatively limited scope. This is a great place to get started, gain experience, and get familiar with our contribution process.


### üõ† Current Issues &amp; Improvements

| Status | Issue                          | Description                                       |
|--------|--------------------------------|---------------------------------------------------|
| üöß WIP      | Liquid Glass                    | Liquid Glass UI for MacOS 26 |

### Changelog

- Jul 5: Now support Gemini, Intel Mac supported
- Jul 6: Full code refactoring has done.
- Jul 7: Now support Claude, LLM/STT model selection
- Jul 8: Now support Windows(beta), Improved AEC by Rust(to seperate mic/system audio), shortcut editing(beta)
- Jul 8: Now support Local LLM &amp; STT, Firebase Data Storage 


## About Pickle

**Our mission is to build a living digital clone for everyone.** Glass is part of Step 1‚Äîa trusted pipeline that transforms your daily data into a scalable clone. Visit [pickle.com](https://pickle.com) to learn more.

## Star History
[![Star History Chart](https://api.star-history.com/svg?repos=pickle-com/glass&amp;type=Date)](https://www.star-history.com/#pickle-com/glass&amp;Date)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[xixu-me/Xget]]></title>
            <link>https://github.com/xixu-me/Xget</link>
            <guid>https://github.com/xixu-me/Xget</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:37 GMT</pubDate>
            <description><![CDATA[Ultra-high-performance, secure, all-in-one acceleration engine for developer resources whose performance far surpasses traditional accelerators, delivering a unified, efficient acceleration experience across multiple platforms | Ë∂ÖÈ´òÊÄßËÉΩ„ÄÅÂÆâÂÖ®ÁöÑ‰∏ÄÁ´ôÂºèÂºÄÂèëËÄÖËµÑÊ∫êÂä†ÈÄüÂºïÊìéÔºåÂÖ∂ÊÄßËÉΩËøúË∂Ö‰º†ÁªüÂä†ÈÄüÂô®ÔºåÊèê‰æõË∑®Â§ö‰∏™Âπ≥Âè∞ÁöÑÁªü‰∏ÄÈ´òÊïàÁöÑÂä†ÈÄü‰ΩìÈ™åÔºåÊ∂µÁõñ‰ª£Á†ÅÂÇ®Â≠òÂ∫ì„ÄÅÂåÖÁÆ°ÁêÜ„ÄÅAI Êé®ÁêÜ API„ÄÅÂÆπÂô®ÈïúÂÉè„ÄÅÊ®°ÂûãÂèäÊï∞ÊçÆÈõÜÁ≠â]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/xixu-me/Xget">xixu-me/Xget</a></h1>
            <p>Ultra-high-performance, secure, all-in-one acceleration engine for developer resources whose performance far surpasses traditional accelerators, delivering a unified, efficient acceleration experience across multiple platforms | Ë∂ÖÈ´òÊÄßËÉΩ„ÄÅÂÆâÂÖ®ÁöÑ‰∏ÄÁ´ôÂºèÂºÄÂèëËÄÖËµÑÊ∫êÂä†ÈÄüÂºïÊìéÔºåÂÖ∂ÊÄßËÉΩËøúË∂Ö‰º†ÁªüÂä†ÈÄüÂô®ÔºåÊèê‰æõË∑®Â§ö‰∏™Âπ≥Âè∞ÁöÑÁªü‰∏ÄÈ´òÊïàÁöÑÂä†ÈÄü‰ΩìÈ™åÔºåÊ∂µÁõñ‰ª£Á†ÅÂÇ®Â≠òÂ∫ì„ÄÅÂåÖÁÆ°ÁêÜ„ÄÅAI Êé®ÁêÜ API„ÄÅÂÆπÂô®ÈïúÂÉè„ÄÅÊ®°ÂûãÂèäÊï∞ÊçÆÈõÜÁ≠â</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,902</p>
            <p>Forks: 589</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre># Xget

***[English](README.en.md)***

&lt;a href=&quot;https://trendshift.io/repositories/14768&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/14768&quot; alt=&quot;xixu-me%2FXget | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;

[![Ask Zread](https://img.shields.io/badge/Ask_Zread-_.svg?style=flat&amp;color=00b0aa&amp;labelColor=000000&amp;logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB3aWR0aD0iMTYiIGhlaWdodD0iMTYiIHZpZXdCb3g9IjAgMCAxNiAxNiIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KPHBhdGggZD0iTTQuOTYxNTYgMS42MDAxSDIuMjQxNTZDMS44ODgxIDEuNjAwMSAxLjYwMTU2IDEuODg2NjQgMS42MDE1NiAyLjI0MDFWNC45NjAxQzEuNjAxNTYgNS4zMTM1NiAxLjg4ODEgNS42MDAxIDIuMjQxNTYgNS42MDAxSDQuOTYxNTZDNS4zMTUwMiA1LjYwMDEgNS42MDE1NiA1LjMxMzU2IDUuNjAxNTYgNC45NjAxVjIuMjQwMUM1LjYwMTU2IDEuODg2NjQgNS4zMTUwMiAxLjYwMDEgNC45NjE1NiAxLjYwMDFaIiBmaWxsPSIjZmZmIi8%2BCjxwYXRoIGQ9Ik00Ljk2MTU2IDEwLjM5OTlIMi4yNDE1NkMxLjg4ODEgMTAuMzk5OSAxLjYwMTU2IDEwLjY4NjQgMS42MDE1NiAxMS4wMzk5VjEzLjc1OTlDMS42MDE1NiAxNC4xMTM0IDEuODg4MSAxNC4zOTk5IDIuMjQxNTYgMTQuMzk5OUg0Ljk2MTU2QzUuMzE1MDIgMTQuMzk5OSA1LjYwMTU2IDE0LjExMzQgNS42MDE1NiAxMy43NTk5VjExLjAzOTlDNS42MDE1NiAxMC42ODY0IDUuMzE1MDIgMTAuMzk5OSA0Ljk2MTU2IDEwLjM5OTlaIiBmaWxsPSIjZmZmIi8%2BCjxwYXRoIGQ9Ik0xMy43NTg0IDEuNjAwMUgxMS4wMzg0QzEwLjY4NSAxLjYwMDEgMTAuMzk4NCAxLjg4NjY0IDEwLjM5ODQgMi4yNDAxVjQuOTYwMUMxMC4zOTg0IDUuMzEzNTYgMTAuNjg1IDUuNjAwMSAxMS4wMzg0IDUuNjAwMUgxMy43NTg0QzE0LjExMTkgNS42MDAxIDE0LjM5ODQgNS4zMTM1NiAxNC4zOTg0IDQuOTYwMVYyLjI0MDFDMTQuMzk4NCAxLjg4NjY0IDE0LjExMTkgMS42MDAxIDEzLjc1ODQgMS42MDAxWiIgZmlsbD0iI2ZmZiIvPgo8cGF0aCBkPSJNNCAxMkwxMiA0TDQgMTJaIiBmaWxsPSIjZmZmIi8%2BCjxwYXRoIGQ9Ik00IDEyTDEyIDQiIHN0cm9rZT0iI2ZmZiIgc3Ryb2tlLXdpZHRoPSIxLjUiIHN0cm9rZS1saW5lY2FwPSJyb3VuZCIvPgo8L3N2Zz4K&amp;logoColor=ffffff)](https://zread.ai/xixu-me/Xget)
[![Ask DeepWiki](https://deepwiki.com/badge.svg)](https://deepwiki.com/xixu-me/Xget)

[![Chromium Êâ©Â±ï](https://img.shields.io/badge/Chromium%20Êâ©Â±ï-4285F4?logo=googlechrome&amp;logoColor=white)](#-ÁîüÊÄÅÁ≥ªÁªüÈõÜÊàê)
[![Firefox Êâ©Â±ï](https://img.shields.io/badge/Firefox%20Êâ©Â±ï-582ACB?logo=Firefox&amp;logoColor=white)](#-ÁîüÊÄÅÁ≥ªÁªüÈõÜÊàê)
[![Cloudflare Workers](https://img.shields.io/badge/Cloudflare%20Workers-F38020?&amp;logo=cloudflare&amp;logoColor=white)](#-ÈÉ®ÁΩ≤)

[![GitHub](https://img.shields.io/badge/GitHub-181717?&amp;logo=github&amp;logoColor=white)](#github)
[![GitLab](https://img.shields.io/badge/GitLab-FC6D26?&amp;logo=gitlab&amp;logoColor=white)](#gitlab)
[![Gitea](https://img.shields.io/badge/Gitea-609926?&amp;logo=gitea&amp;logoColor=white)](#gitea)
[![Codeberg](https://img.shields.io/badge/Codeberg-2185D0?&amp;logo=codeberg&amp;logoColor=white)](#codeberg)
[![SourceForge](https://img.shields.io/badge/SourceForge-FF6600?&amp;logo=sourceforge&amp;logoColor=white)](#sourceforge)
[![AOSP](https://img.shields.io/badge/AOSP-3DDC84?&amp;logo=android&amp;logoColor=white)](#aosp-android-%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE)
[![Hugging Face](https://img.shields.io/badge/Hugging%20Face-FFD21E?&amp;logo=huggingface&amp;logoColor=white)](#hugging-face-ÈïúÂÉè)
[![Civitai](https://img.shields.io/badge/Civitai-0066CC)](#civitai-ai-Ê®°ÂûãÂπ≥Âè∞)
[![npm](https://img.shields.io/badge/npm-CB3837?logo=npm&amp;logoColor=white)](#npm-ÂåÖÁÆ°ÁêÜÂä†ÈÄü)
[![PyPI](https://img.shields.io/badge/PyPI-3775A9?logo=pypi&amp;logoColor=white)](#python-ÂåÖÁÆ°ÁêÜÂä†ÈÄü)
[![conda](https://img.shields.io/badge/conda-44A833?logo=anaconda&amp;logoColor=white)](#conda-ÂåÖÁÆ°ÁêÜÂä†ÈÄü)
[![Maven](https://img.shields.io/badge/Maven-C71A36?logo=apachemaven&amp;logoColor=white)](#maven-ÂåÖÁÆ°ÁêÜÂä†ÈÄü)
[![Apache](https://img.shields.io/badge/Apache-D22128?logo=apache&amp;logoColor=white)](#apache-ËΩØ‰ª∂‰∏ãËΩΩÂä†ÈÄü)
[![Gradle](https://img.shields.io/badge/Gradle-02303A?logo=gradle&amp;logoColor=white)](#gradle-ÂåÖÁÆ°ÁêÜÂä†ÈÄü)
[![Homebrew](https://img.shields.io/badge/Homebrew-FBB040?logo=homebrew&amp;logoColor=black)](#homebrew-ÂåÖÁÆ°ÁêÜÂä†ÈÄü)
[![RubyGems](https://img.shields.io/badge/RubyGems-CC342D?logo=rubygems&amp;logoColor=white)](#ruby-ÂåÖÁÆ°ÁêÜÂä†ÈÄü)
[![CRAN](https://img.shields.io/badge/CRAN-276DC3?logo=r&amp;logoColor=white)](#r-ÂåÖÁÆ°ÁêÜÂä†ÈÄü)
[![CPAN](https://img.shields.io/badge/CPAN-39457E?logo=perl&amp;logoColor=white)](#perl-ÂåÖÁÆ°ÁêÜÂä†ÈÄü)
[![CTAN](https://img.shields.io/badge/CTAN-008080?logo=latex&amp;logoColor=white)](#texlatex-ÂåÖÁÆ°ÁêÜÂä†ÈÄü)
[![Go](https://img.shields.io/badge/Go-00ADD8?logo=go&amp;logoColor=white)](#go-Ê®°ÂùóÂä†ÈÄü)
[![NuGet](https://img.shields.io/badge/NuGet-004880?logo=nuget&amp;logoColor=white)](#nuget-ÂåÖÁÆ°ÁêÜÂä†ÈÄü)
[![Rust](https://img.shields.io/badge/Rust-000000?logo=rust&amp;logoColor=white)](#rust-ÂåÖÁÆ°ÁêÜÂä†ÈÄü)
[![Packagist](https://img.shields.io/badge/Packagist-F28D1A?logo=packagist&amp;logoColor=white)](#php-ÂåÖÁÆ°ÁêÜÂä†ÈÄü)
[![Debian](https://img.shields.io/badge/Debian-A81D33?logo=debian&amp;logoColor=white)](#debianubuntu-apt-ÈÖçÁΩÆ)
[![Ubuntu](https://img.shields.io/badge/Ubuntu-E95420?logo=ubuntu&amp;logoColor=white)](#debianubuntu-apt-ÈÖçÁΩÆ)
[![Fedora](https://img.shields.io/badge/Fedora-294172?logo=fedora&amp;logoColor=white)](#fedora-dnf-ÈÖçÁΩÆ)
[![Rocky Linux](https://img.shields.io/badge/Rocky%20Linux-10B981?logo=rockylinux&amp;logoColor=white)](#rocky-linux-dnf-ÈÖçÁΩÆ)
[![openSUSE](https://img.shields.io/badge/openSUSE-73BA25?logo=opensuse&amp;logoColor=white)](#opensuse-zypper-ÈÖçÁΩÆ)
[![Arch Linux](https://img.shields.io/badge/Arch%20Linux-1793D1?logo=archlinux&amp;logoColor=white)](#arch-linux-pacman-ÈÖçÁΩÆ)
[![arXiv](https://img.shields.io/badge/arXiv-B31B1B?logo=arxiv&amp;logoColor=white)](#arxiv-ËÆ∫Êñá‰∏ãËΩΩ)
[![F-Droid](https://img.shields.io/badge/F--Droid-1976D2?logo=f-droid&amp;logoColor=white)](#f-droid-Â≠òÂÇ®Â∫ìÈïúÂÉè)
[![Jenkins](https://img.shields.io/badge/Jenkins-D33833?logo=jenkins&amp;logoColor=white)](#jenkins-Êèí‰ª∂‰∏ãËΩΩ)
[![AI Êé®ÁêÜÊèê‰æõÂïÜ](https://img.shields.io/badge/AI%20Êé®ÁêÜÊèê‰æõÂïÜ-412991?logo=openai&amp;logoColor=white)](#ai-Êé®ÁêÜÊèê‰æõÂïÜ)
[![ÂÆπÂô®Ê≥®ÂÜåË°®](https://img.shields.io/badge/ÂÆπÂô®Ê≥®ÂÜåË°®-%23007EC6.svg?logo=docker&amp;logoColor=white)](#ÂÆπÂô®Ê≥®ÂÜåË°®)

Ë∂ÖÈ´òÊÄßËÉΩ„ÄÅÂÆâÂÖ®ÁöÑ‰∏ÄÁ´ôÂºèÂºÄÂèëËÄÖËµÑÊ∫êÂä†ÈÄüÂºïÊìéÔºåÂÖ∂ÊÄßËÉΩËøúË∂Ö‰º†ÁªüÂä†ÈÄüÂô®ÔºåÊèê‰æõË∑®Â§ö‰∏™Âπ≥Âè∞ÁöÑÁªü‰∏ÄÈ´òÊïàÁöÑÂä†ÈÄü‰ΩìÈ™åÔºåÊ∂µÁõñ‰ª£Á†ÅÂÇ®Â≠òÂ∫ì„ÄÅÂåÖÁÆ°ÁêÜ„ÄÅAI Êé®ÁêÜ API„ÄÅÂÆπÂô®ÈïúÂÉè„ÄÅÊ®°ÂûãÂèäÊï∞ÊçÆÈõÜÁ≠â„ÄÇ

ÊäÄÊúØÊ∑±Â∫¶Ëß£ÊûêÊñáÁ´†Â∑≤ÂèëÂ∏ÉÔºö**[„ÄäÊ∑±ÂÖ•ÂâñÊûê XgetÔºö‰∏Ä‰∏™È´òÊÄßËÉΩ„ÄÅÂ§öÂçèËÆÆ„ÄÅÈ´òÂÆâÂÖ®ÊÄßÁöÑÂºÄÂèëËÄÖËµÑÊ∫êÂä†ÈÄüÂºïÊìé„Äã](https://blog.xi-xu.me/2025/10/07/deep-dive-into-xget-technology.html)**„ÄÇ

## üí° Â≠òÂÇ®Â∫ìÂàùË°∑

Êú¨Â≠òÂÇ®Â∫ìÁöÑÂàùË°∑ÊòØ‰∏∫‰∫ÜÂä†ÈÄüÂú®‰∏≠ÂõΩÂ§ßÈôÜÂ¢ÉÂÜÖËÆøÈóÆ‰∏çËøùÂèçÁõ∏ÂÖ≥Ê≥ïÂæãÊ≥ïËßÑÁöÑÂπ≥Âè∞‰∏äÁöÑÂºÄÂèëËÄÖËµÑÊ∫êÔºå‰ªéËÄå‰∏∫ÂπøÂ§ßÂºÄÂèëËÄÖÊèê‰æõ‰∏Ä‰∏™Á®≥ÂÆö„ÄÅÂêàÊ≥ïÁöÑÂä†ÈÄü‰ΩìÈ™å„ÄÇÊàë‰ª¨Ëá¥Âäõ‰∫éÔºö

- **üåç Ê∂àÈô§Âú∞ÁêÜÈôêÂà∂**ÔºöÂ∏ÆÂä©‰∏≠ÂõΩÂ§ßÈôÜÂºÄÂèëËÄÖÂø´ÈÄüËÆøÈóÆÊµ∑Â§ñÂºÄÂèëËÄÖËµÑÊ∫ê
- **‚öñÔ∏è ÂêàËßÑÂêàÊ≥ï**Ôºö‰∏•Ê†ºÈÅµÂÆàÁõ∏ÂÖ≥Ê≥ïÂæãÊ≥ïËßÑÔºå‰ªÖÂä†ÈÄüÂêàÊ≥ïÁöÑÂÖ¨ÂºÄËµÑÊ∫ê
- **üöÄ ÊèêÂçáÊïàÁéá**ÔºöÊòæËëóÊèêÈ´òÂºÄÂèëËÄÖÁöÑÂ∑•‰ΩúÊïàÁéáÂíåÂºÄÂèë‰ΩìÈ™å
- **üÜì ÊôÆÊÉ†ÂºÄÊ∫ê**Ôºö‰∏∫ÂºÄÊ∫êÁ§æÂå∫Ë¥°ÁåÆÂäõÈáèÔºå‰øÉËøõÊäÄÊúØ‰∫§ÊµÅ‰∏éÂèëÂ±ï

## üéØ Âø´ÈÄü‰ΩøÁî®

**È¢ÑÈÉ®ÁΩ≤ÂÆû‰æãÔºà‰∏ç‰øùËØÅÂèØÈù†ÊÄßÔºâÔºö`xget.xi-xu.me`** - ÂºÄÁÆ±Âç≥Áî®ÔºåÊó†ÈúÄÈÉ®ÁΩ≤ÔºÅ

**URL ËΩ¨Êç¢Âô®Ôºö**[**`xuc.xi-xu.me`**](https://xuc.xi-xu.me) - ‰∏ÄÈîÆËΩ¨Êç¢‰ªªÊÑèÊîØÊåÅÂπ≥Âè∞ÁöÑ URL ‰∏∫ Xget ÁöÑÂä†ÈÄüÊ†ºÂºèÔºÅ

&gt; **‚ö° Á´ãÂç≥‰ΩìÈ™åÊûÅÈÄü‰∏ãËΩΩ**ÔºöÊó†ÈúÄÊ≥®ÂÜåÔºåÊó†ÈúÄÈÖçÁΩÆÔºåÁõ¥Êé•‰ΩøÁî®Âç≥ÂèØÊÑüÂèóÈ£û‰∏ÄËà¨ÁöÑ‰∏ãËΩΩÈÄüÂ∫¶ÔºÅ

## üåü Ê†∏ÂøÉ‰ºòÂäø - ‰∏∫‰ªÄ‰πàÈÄâÊã© XgetÔºü

### ‚ö° ÊûÅÈÄüÊÄßËÉΩ - Á™ÅÁ†¥‰º†ÁªüÂä†ÈÄüÂô®Áì∂È¢à

- **‚ö° ÊØ´ÁßíÁ∫ßÂìçÂ∫î**ÔºöCloudflare ÂÖ®ÁêÉ 330+ ËæπÁºòËäÇÁÇπÔºåÂπ≥ÂùáÂìçÂ∫îÊó∂Èó¥ &lt; 50ms
- **üåê HTTP/3 ÊûÅÈÄüÂçèËÆÆ**ÔºöÂêØÁî®ÊúÄÊñ∞ HTTP/3 ÂçèËÆÆÔºåËøûÊé•Âª∂ËøüÈôç‰Ωé 40%Ôºå‰º†ËæìÈÄüÂ∫¶ÊèêÂçá 30%
- **üì¶ Êô∫ËÉΩÂ§öÈáçÂéãÁº©**Ôºögzip„ÄÅdeflate„ÄÅbrotli ‰∏âÈáçÂéãÁº©ÁÆóÊ≥ïÔºå‰º†ËæìÊïàÁéáÊèêÂçá 60%
- **üîó Èõ∂Âª∂ËøüÈ¢ÑËøûÊé•**ÔºöËøûÊé•È¢ÑÁÉ≠Âíå‰øùÊåÅÊ¥ªË∑ÉÔºåÊ∂àÈô§Êè°ÊâãÂºÄÈîÄÔºåÂÆûÁé∞ÁßíÁ∫ßÂìçÂ∫î
- **‚ö° Âπ∂Ë°åÂàÜÁâá‰∏ãËΩΩ**ÔºöÂÆåÊï¥ÊîØÊåÅ HTTP Range ËØ∑Ê±ÇÔºåÂ§öÁ∫øÁ®ã‰∏ãËΩΩÈÄüÂ∫¶ÂÄçÂ¢û
- **üéØ Êô∫ËÉΩË∑ØÁî±‰ºòÂåñ**ÔºöËá™Âä®ÈÄâÊã©ÊúÄ‰ºò‰º†ËæìË∑ØÂæÑÔºåÈÅøÂºÄÁΩëÁªúÊã•Â†µËäÇÁÇπ

### üåê Â§öÂπ≥Âè∞Ê∑±Â∫¶ÈõÜÊàê

- **‰∏ÄÁ´ôÂºèÂ§öÂπ≥Âè∞ÊîØÊåÅ**ÔºöÁªü‰∏ÄÊîØÊåÅ‰ª£Á†ÅÂ≠òÂÇ®Â∫ì„ÄÅÂåÖÁÆ°ÁêÜÂô®„ÄÅAI Êé®ÁêÜÊèê‰æõÂïÜ„ÄÅÂÆπÂô®Ê≥®ÂÜåË°®„ÄÅÊ®°Âûã‰∏éÊï∞ÊçÆÈõÜÊâòÁÆ°Âπ≥Âè∞
- **Êô∫ËÉΩËØÜÂà´‰∏éËΩ¨Êç¢**ÔºöËá™Âä®ËØÜÂà´Âπ≥Âè∞ÂâçÁºÄÂπ∂ËΩ¨Êç¢‰∏∫ÁõÆÊ†áÂπ≥Âè∞ÁöÑÊ≠£Á°Æ URL ÁªìÊûÑ
- **‰∏ÄËá¥ÁöÑÂä†ÈÄü‰ΩìÈ™å**ÔºöÊó†ËÆ∫Êñá‰ª∂Á±ªÂûãÊàñÊù•Ê∫êÔºåÂùáÂèØ‰∫´ÂèóÁªü‰∏Ä‰∏îÁ®≥ÂÆöÁöÑÊûÅÈÄü‰∏ãËΩΩ‰ΩìÈ™å

### üîí ‰ºÅ‰∏öÁ∫ßÂÆâÂÖ®‰øùÈöú

- **Â§öÂ±ÇÂÆâÂÖ®Ê†áÂ§¥**Ôºö
  - `Strict-Transport-Security`ÔºöÂº∫Âà∂ HTTPS ‰º†ËæìÔºåÈ¢ÑÈò≤‰∏≠Èó¥‰∫∫ÊîªÂáª
  - `X-Frame-Options: DENY`ÔºöÈò≤Ê≠¢ÁÇπÂáªÂä´ÊåÅÊîªÂáª
  - `X-XSS-Protection`ÔºöÂÜÖÁΩÆ XSS Èò≤Êä§Êú∫Âà∂
  - `Content-Security-Policy`Ôºö‰∏•Ê†ºÁöÑÂÜÖÂÆπÂÆâÂÖ®Á≠ñÁï•
  - `Referrer-Policy`ÔºöÊéßÂà∂ÂºïÁî®‰ø°ÊÅØÊ≥ÑÈú≤
- **ËØ∑Ê±ÇÈ™åËØÅÊú∫Âà∂**Ôºö
  - HTTP ÊñπÊ≥ïÁôΩÂêçÂçïÔºöÂ∏∏ËßÑËØ∑Ê±ÇÈôêÂà∂‰∏∫ GET/HEADÔºåGit Êìç‰ΩúÂä®ÊÄÅÂÖÅËÆ∏ POST
  - Ë∑ØÂæÑÈïøÂ∫¶ÈôêÂà∂ÔºöÈò≤Ê≠¢Ë∂ÖÈïø URL ÊîªÂáªÔºàÊúÄÂ§ß 2048 Â≠óÁ¨¶Ôºâ
  - ËæìÂÖ•Ê∏ÖÁêÜÔºöÈò≤Ê≠¢Ë∑ØÂæÑÈÅçÂéÜÂíåÊ≥®ÂÖ•ÊîªÂáª
- **Ë∂ÖÊó∂‰øùÊä§**Ôºö30 ÁßíËØ∑Ê±ÇË∂ÖÊó∂ÔºåÈò≤Ê≠¢ËµÑÊ∫êËÄóÂ∞ΩÂíåÊÅ∂ÊÑèËØ∑Ê±Ç

### üöÄ Áé∞‰ª£Êû∂ÊûÑ‰∏éÂèØÈù†ÊÄß

- **Êô∫ËÉΩÈáçËØïÊú∫Âà∂**Ôºö
  - ÊúÄÂ§ß 3 Ê¨°ÈáçËØïÔºåÁ∫øÊÄßÂª∂ËøüÁ≠ñÁï•Ôºà1000ms √ó ÈáçËØïÊ¨°Êï∞Ôºâ
  - Ëá™Âä®ÈîôËØØÊÅ¢Â§çÔºåÊèêÈ´ò‰∏ãËΩΩÊàêÂäüÁéá
  - Ë∂ÖÊó∂Ê£ÄÊµãÂíå‰∏≠Êñ≠Â§ÑÁêÜ
- **È´òÊïàÁºìÂ≠òÁ≠ñÁï•**Ôºö
  - 1800 ÁßíÔºà30 ÂàÜÈíüÔºâÈªòËÆ§ÁºìÂ≠òÊó∂ÈïøÔºåÊòæËëóÂáèÂ∞ëÊ∫êÁ´ôÂéãÂäõ
  - Git Êìç‰ΩúË∑≥ËøáÁºìÂ≠òÔºåÁ°Æ‰øùÂÆûÊó∂ÊÄß
  - Âü∫‰∫é Cloudflare Cache API ÁöÑËæπÁºòÁºìÂ≠ò
- **ÊÄßËÉΩÁõëÊéßÁ≥ªÁªü**Ôºö
  - ÂÜÖÁΩÆ `PerformanceMonitor` Á±ªÔºåÂÆûÊó∂ËøΩË∏™ËØ∑Ê±ÇÂêÑÈò∂ÊÆµËÄóÊó∂
  - ÈÄöËøá `X-Performance-Metrics` ÂìçÂ∫îÂ§¥Êèê‰æõËØ¶ÁªÜÊÄßËÉΩÊï∞ÊçÆ
  - ÊîØÊåÅÁºìÂ≠òÂëΩ‰∏≠ÁéáÁªüËÆ°Âíå‰ºòÂåñÂª∫ËÆÆ

### üéØ Git ÂçèËÆÆÂÆåÂÖ®ÂÖºÂÆπ

- **Êô∫ËÉΩÂçèËÆÆÊ£ÄÊµã**Ôºö
  - Ëá™Âä®ËØÜÂà´ Git ÁâπÂÆöÁ´ØÁÇπÔºà`/info/refs`„ÄÅ`/git-upload-pack`„ÄÅ`/git-receive-pack`Ôºâ
  - Ê£ÄÊµã Git ÂÆ¢Êà∑Á´Ø User-Agent Ê®°Âºè
  - ÊîØÊåÅ `service=git-upload-pack` Á≠âÊü•ËØ¢ÂèÇÊï∞
- **ÂÆåÊï¥Êìç‰ΩúÊîØÊåÅ**Ôºö
  - `git clone`ÔºöÂÆåÊï¥Â≠òÂÇ®Â∫ìÂÖãÈöÜÔºåÊîØÊåÅÊµÖÂÖãÈöÜÂíåÂàÜÊîØÊåáÂÆö
  - `git push`Ôºö‰ª£Á†ÅÊé®ÈÄÅÂíåÂàÜÊîØÁÆ°ÁêÜ
  - `git pull/fetch`ÔºöÂ¢ûÈáèÊõ¥Êñ∞ÂíåËøúÁ®ãÂêåÊ≠•
  - `git submodule`ÔºöÂ≠êÊ®°ÂùóÈÄíÂΩíÂÖãÈöÜ
- **ÂçèËÆÆ‰ºòÂåñ**Ôºö
  - ‰øùÊåÅ Git ‰∏ìÁî®ËØ∑Ê±ÇÂ§¥ÂíåËÆ§ËØÅ‰ø°ÊÅØ
  - Êô∫ËÉΩ User-Agent Â§ÑÁêÜÔºàÈªòËÆ§ `git/2.34.1`Ôºâ
  - ÊîØÊåÅ Git LFS Â§ßÊñá‰ª∂‰º†Ëæì

### üì± ÁîüÊÄÅÁ≥ªÁªüÈõÜÊàê

- **‰∏ìÁî®ÊµèËßàÂô®Êâ©Â±ï**Ôºö[Xget Now](https://github.com/xixu-me/Xget-Now) Êèê‰æõÊó†Áºù‰ΩìÈ™å
  - Ëá™Âä® URL ÈáçÂÆöÂêëÔºåÊó†ÈúÄÊâãÂä®‰øÆÊîπ URL
  - ÊîØÊåÅËá™ÂÆö‰πâ Xget ÂÆû‰æãÂüüÂêç
  - Â§öÂπ≥Âè∞ÂÅèÂ•ΩËÆæÁΩÆÂíåÈªëÁôΩÂêçÂçïÁÆ°ÁêÜ
  - Êú¨Âú∞Â§ÑÁêÜÔºåÁ°Æ‰øùÈöêÁßÅÂÆâÂÖ®
- **‰∏ãËΩΩÂ∑•ÂÖ∑ÂÖºÂÆπ**ÔºöÂÆåÁæéÊîØÊåÅ wget„ÄÅcURL„ÄÅaria2„ÄÅIDM Á≠â‰∏ªÊµÅ‰∏ãËΩΩÂ∑•ÂÖ∑
- **CI/CD ÈõÜÊàê**ÔºöÂèØÁõ¥Êé•Âú® GitHub Actions„ÄÅGitLab CI Á≠âÁéØÂ¢É‰∏≠‰ΩøÁî®

## üìñ URL ËΩ¨Êç¢ËßÑÂàô

‰ΩøÁî®È¢ÑÈÉ®ÁΩ≤ÂÆû‰æã **`xget.xi-xu.me`** Êàñ‰Ω†Ëá™Â∑±ÈÉ®ÁΩ≤ÁöÑÂÆû‰æãÔºåÂè™ÈúÄÁÆÄÂçïÊõøÊç¢ÂüüÂêçÂπ∂Ê∑ªÂä†Âπ≥Âè∞ÂâçÁºÄÔºö

### ËΩ¨Êç¢Ê†ºÂºè

| Âπ≥Âè∞ | Âπ≥Âè∞ÂâçÁºÄ | ÂéüÂßã URL Ê†ºÂºè | Âä†ÈÄü URL Ê†ºÂºè |
|------|----------|--------------|--------------|
| GitHub | `gh` | `https://github.com/...` | `https://xget.xi-xu.me/gh/...` |
| GitLab | `gl` | `https://gitlab.com/...` | `https://xget.xi-xu.me/gl/...` |
| Gitea | `gitea` | `https://gitea.com/...` | `https://xget.xi-xu.me/gitea/...` |
| Codeberg | `codeberg` | `https://codeberg.org/...` | `https://xget.xi-xu.me/codeberg/...` |
| SourceForge | `sf` | `https://sourceforge.net/...` | `https://xget.xi-xu.me/sf/...` |
| AOSP | `aosp` | `https://android.googlesource.com/...` | `https://xget.xi-xu.me/aosp/...` |
| Hugging Face | `hf` | `https://huggingface.co/...` | `https://xget.xi-xu.me/hf/...` |
| Civitai | `civitai` | `https://civitai.com/...` | `https://xget.xi-xu.me/civitai/...` |
| npm | `npm` | `https://registry.npmjs.org/...` | `https://xget.xi-xu.me/npm/...` |
| PyPI | `pypi` | `https://pypi.org/...` | `https://xget.xi-xu.me/pypi/...` |
| conda | `conda` | `https://repo.anaconda.com/...` Âíå `https://conda.anaconda.org/...` | `https://xget.xi-xu.me/conda/...` Âíå `https://xget.xi-xu.me/conda/community/...` |
| Maven | `maven` | `https://repo1.maven.org/...` | `https://xget.xi-xu.me/maven/...` |
| Apache | `apache` | `https://downloads.apache.org/...` | `https://xget.xi-xu.me/apache/...` |
| Gradle | `gradle` | `https://plugins.gradle.org/...` | `https://xget.xi-xu.me/gradle/...` |
| Homebrew | `homebrew` | `https://github.com/Homebrew/...` | `https://xget.xi-xu.me/homebrew/...` |
| RubyGems | `rubygems` | `https://rubygems.org/...` | `https://xget.xi-xu.me/rubygems/...` |
| CRAN | `cran` | `https://cran.r-project.org/...` | `https://xget.xi-xu.me/cran/...` |
| CPAN | `cpan` | `https://www.cpan.org/...` | `https://xget.xi-xu.me/cpan/...` |
| CTAN | `ctan` | `https://tug.ctan.org/...` | `https://xget.xi-xu.me/ctan/...` |
| Go Ê®°Âùó | `golang` | `https://proxy.golang.org/...` | `https://xget.xi-xu.me/golang/...` |
| NuGet | `nuget` | `https://api.nuget.org/...` | `https://xget.xi-xu.me/nuget/...` |
| Rust Crates | `crates` | `https://crates.io/...` | `https://xget.xi-xu.me/crates/...` |
| Packagist | `packagist` | `https://repo.packagist.org/...` | `https://xget.xi-xu.me/packagist/...` |
| Debian | `debian` | `https://deb.debian.org/...` | `https://xget.xi-xu.me/debian/...` |
| Ubuntu | `ubuntu` | `https://archive.ubuntu.com/...` | `https://xget.xi-xu.me/ubuntu/...` |
| Fedora | `fedora` | `https://dl.fedoraproject.org/...` | `https://xget.xi-xu.me/fedora/...` |
| Rocky Linux | `rocky` | `https://download.rockylinux.org/...` | `https://xget.xi-xu.me/rocky/...` |
| openSUSE | `opensuse` | `https://download.opensuse.org/...` | `https://xget.xi-xu.me/opensuse/...` |
| Arch Linux | `arch` | `https://geo.mirror.pkgbuild.com/...` | `https://xget.xi-xu.me/arch/...` |
| arXiv | `arxiv` | `https://arxiv.org/...` | `https://xget.xi-xu.me/arxiv/...` |
| F-Droid | `fdroid` | `https://f-droid.org/...` | `https://xget.xi-xu.me/fdroid/...` |
| Jenkins Êèí‰ª∂ | `jenkins` | `https://updates.jenkins.io/...` | `https://xget.xi-xu.me/jenkins/...` |
| AI Êé®ÁêÜÊèê‰æõÂïÜ | `ip` | ËßÅ [AI Êé®ÁêÜÊèê‰æõÂïÜ](#ai-Êé®ÁêÜÊèê‰æõÂïÜ) | ËßÅ [AI Êé®ÁêÜÊèê‰æõÂïÜ](#ai-Êé®ÁêÜÊèê‰æõÂïÜ) |
| ÂÆπÂô®Ê≥®ÂÜåË°® | `cr` | ËßÅ[ÂÆπÂô®Ê≥®ÂÜåË°®](#ÂÆπÂô®Ê≥®ÂÜåË°®) | ËßÅ[ÂÆπÂô®Ê≥®ÂÜåË°®](#ÂÆπÂô®Ê≥®ÂÜåË°®) |

### ÂêÑÂπ≥Âè∞ËΩ¨Êç¢Á§∫‰æã

#### GitHub

```url
# ÂéüÂßã URL
https://github.com/microsoft/vscode/archive/refs/heads/main.zip

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† gh ÂâçÁºÄÔºâ
https://xget.xi-xu.me/gh/microsoft/vscode/archive/refs/heads/main.zip
```

#### GitLab

```url
# ÂéüÂßã URL
https://gitlab.com/gitlab-org/gitlab/-/archive/master/gitlab-master.zip

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† gl ÂâçÁºÄÔºâ
https://xget.xi-xu.me/gl/gitlab-org/gitlab/-/archive/master/gitlab-master.zip
```

#### Gitea

```url
# ÂéüÂßã URL
https://gitea.com/gitea/gitea/archive/master.zip

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† gitea ÂâçÁºÄÔºâ
https://xget.xi-xu.me/gitea/gitea/gitea/archive/master.zip
```

#### Codeberg

```url
# ÂéüÂßã URL
https://codeberg.org/forgejo/forgejo/archive/forgejo.zip

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† codeberg ÂâçÁºÄÔºâ
https://xget.xi-xu.me/codeberg/forgejo/forgejo/archive/forgejo.zip
```

#### SourceForge

```url
# ÂéüÂßã URL
https://sourceforge.net/projects/sevenzip/files/7-Zip/23.01/7z2301-x64.exe/download

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† sf ÂâçÁºÄÔºâ
https://xget.xi-xu.me/sf/projects/sevenzip/files/7-Zip/23.01/7z2301-x64.exe/download
```

#### AOSP (Android ÂºÄÊ∫êÈ°πÁõÆ)

```url
# AOSP È°πÁõÆÂéüÂßã URL
https://android.googlesource.com/platform/frameworks/base

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† aosp ÂâçÁºÄÔºâ
https://xget.xi-xu.me/aosp/platform/frameworks/base

# AOSP ËÆæÂ§áÊ†ëÂéüÂßã URL
https://android.googlesource.com/device/google/pixel

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† aosp ÂâçÁºÄÔºâ
https://xget.xi-xu.me/aosp/device/google/pixel
```

#### Hugging Face

```url
# Ê®°ÂûãÊñá‰ª∂ÂéüÂßã URL
https://huggingface.co/microsoft/DialoGPT-medium/resolve/main/pytorch_model.bin

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† hf ÂâçÁºÄÔºâ
https://xget.xi-xu.me/hf/microsoft/DialoGPT-medium/resolve/main/pytorch_model.bin

# Êï∞ÊçÆÈõÜÊñá‰ª∂ÂéüÂßã URL
https://huggingface.co/datasets/rajpurkar/squad/resolve/main/plain_text/train-00000-of-00001.parquet

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† hf ÂâçÁºÄÔºâ
https://xget.xi-xu.me/hf/datasets/rajpurkar/squad/resolve/main/plain_text/train-00000-of-00001.parquet
```

#### Civitai

```url
# AI Ê®°Âûã‰∏ãËΩΩÂéüÂßã URL
https://civitai.com/api/download/models/128713

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† civitai ÂâçÁºÄÔºâ
https://xget.xi-xu.me/civitai/api/download/models/128713

# Ê®°Âûã API ÂéüÂßã URL
https://civitai.com/api/v1/models/7240

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† civitai ÂâçÁºÄÔºâ
https://xget.xi-xu.me/civitai/api/v1/models/7240

# Ê®°ÂûãÁâàÊú¨ API ÂéüÂßã URL
https://civitai.com/api/v1/model-versions/128713

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† civitai ÂâçÁºÄÔºâ
https://xget.xi-xu.me/civitai/api/v1/model-versions/128713
```

#### npm

```url
# ÂåÖÊñá‰ª∂ÂéüÂßã URL
https://registry.npmjs.org/react/-/react-18.2.0.tgz

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† npm ÂâçÁºÄÔºâ
https://xget.xi-xu.me/npm/react/-/react-18.2.0.tgz

# ÂåÖÂÖÉÊï∞ÊçÆÂéüÂßã URL
https://registry.npmjs.org/lodash

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† npm ÂâçÁºÄÔºâ
https://xget.xi-xu.me/npm/lodash
```

#### PyPI

```url
# Python ÂåÖÊñá‰ª∂ÂéüÂßã URL
https://pypi.org/packages/source/r/requests/requests-2.31.0.tar.gz

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† pypi ÂâçÁºÄÔºâ
https://xget.xi-xu.me/pypi/packages/source/r/requests/requests-2.31.0.tar.gz

# Wheel Êñá‰ª∂ÂéüÂßã URL
https://pypi.org/packages/py3/r/requests/requests-2.31.0-py3-none-any.whl

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† pypi ÂâçÁºÄÔºâ
https://xget.xi-xu.me/pypi/packages/py3/r/requests/requests-2.31.0-py3-none-any.whl
```

#### conda

```url
# ÈªòËÆ§È¢ëÈÅìÂåÖÊñá‰ª∂ÂéüÂßã URL
https://repo.anaconda.com/pkgs/main/linux-64/numpy-1.24.3-py311h08b1b3b_1.conda

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† conda ÂâçÁºÄÔºâ
https://xget.xi-xu.me/conda/pkgs/main/linux-64/numpy-1.24.3-py311h08b1b3b_1.conda

# Á§æÂå∫È¢ëÈÅìÂÖÉÊï∞ÊçÆÂéüÂßã URL
https://conda.anaconda.org/conda-forge/linux-64/repodata.json

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† conda/community ÂâçÁºÄÔºâ
https://xget.xi-xu.me/conda/community/conda-forge/linux-64/repodata.json
```

#### Maven

```url
# Maven ‰∏≠Â§ÆÂ≠òÂÇ®Â∫ì JAR Êñá‰ª∂ÂéüÂßã URL
https://repo1.maven.org/maven2/org/springframework/spring-core/5.3.21/spring-core-5.3.21.jar

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† maven ÂâçÁºÄÔºâ
https://xget.xi-xu.me/maven/maven2/org/springframework/spring-core/5.3.21/spring-core-5.3.21.jar

# Maven ÂÖÉÊï∞ÊçÆÂéüÂßã URL
https://repo1.maven.org/maven2/org/apache/commons/commons-lang3/maven-metadata.xml

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† maven ÂâçÁºÄÔºâ
https://xget.xi-xu.me/maven/maven2/org/apache/commons/commons-lang3/maven-metadata.xml
```

#### Apache ËΩØ‰ª∂‰∏ãËΩΩ

```url
# Apache ËΩØ‰ª∂‰∏ãËΩΩÂéüÂßã URL
https://downloads.apache.org/kafka/3.6.1/kafka_2.13-3.6.1.tgz

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† apache ÂâçÁºÄÔºâ
https://xget.xi-xu.me/apache/kafka/3.6.1/kafka_2.13-3.6.1.tgz

# Apache Maven ‰∏ãËΩΩÂéüÂßã URL
https://downloads.apache.org/maven/maven-3/3.9.5/binaries/apache-maven-3.9.5-bin.tar.gz

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† apache ÂâçÁºÄÔºâ
https://xget.xi-xu.me/apache/maven/maven-3/3.9.5/binaries/apache-maven-3.9.5-bin.tar.gz

# Apache Spark ‰∏ãËΩΩÂéüÂßã URL
https://downloads.apache.org/spark/spark-3.5.0/spark-3.5.0-bin-hadoop3.tgz

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† apache ÂâçÁºÄÔºâ
https://xget.xi-xu.me/apache/spark/spark-3.5.0/spark-3.5.0-bin-hadoop3.tgz
```

#### Gradle

```url
# Gradle Êèí‰ª∂Èó®Êà∑ JAR Êñá‰ª∂ÂéüÂßã URL
https://plugins.gradle.org/m2/org/gradle/gradle-hello-world-plugin/0.2/gradle-hello-world-plugin-0.2.jar

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† gradle ÂâçÁºÄÔºâ
https://xget.xi-xu.me/gradle/m2/org/gradle/gradle-hello-world-plugin/0.2/gradle-hello-world-plugin-0.2.jar

# Gradle Êèí‰ª∂ÂÖÉÊï∞ÊçÆÂéüÂßã URL
https://plugins.gradle.org/m2/com/github/ben-manes/gradle-versions-plugin/0.51.0/gradle-versions-plugin-0.51.0.module

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† gradle ÂâçÁºÄÔºâ
https://xget.xi-xu.me/gradle/m2/com/github/ben-manes/gradle-versions-plugin/0.51.0/gradle-versions-plugin-0.51.0.module
```

#### Homebrew

```url
# Homebrew ÂÖ¨ÂºèÂ≠òÂÇ®Â∫ìÂéüÂßã URL
https://github.com/Homebrew/homebrew-core/raw/HEAD/Formula/g/git.rb

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† homebrew ÂâçÁºÄÔºâ
https://xget.xi-xu.me/homebrew/homebrew-core/raw/HEAD/Formula/g/git.rb

# Homebrew API ÂéüÂßã URL
https://formulae.brew.sh/api/formula/git.json

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† homebrew/api ÂâçÁºÄÔºâ
https://xget.xi-xu.me/homebrew/api/formula/git.json

# Homebrew Bottles ÂéüÂßã URL
https://ghcr.io/v2/homebrew/core/git/manifests/2.39.0

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† homebrew/bottles ÂâçÁºÄÔºâ
https://xget.xi-xu.me/homebrew/bottles/v2/homebrew/core/git/manifests/2.39.0
```

#### RubyGems

```url
# RubyGems ÂåÖÊñá‰ª∂ÂéüÂßã URL
https://rubygems.org/gems/rails-7.0.4.gem

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† rubygems ÂâçÁºÄÔºâ
https://xget.xi-xu.me/rubygems/gems/rails-7.0.4.gem

# RubyGems API ÂéüÂßã URL
https://rubygems.org/api/v1/gems/nokogiri.json

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† rubygems ÂâçÁºÄÔºâ
https://xget.xi-xu.me/rubygems/api/v1/gems/nokogiri.json
```

#### CRAN

```url
# CRAN ÂåÖÊñá‰ª∂ÂéüÂßã URL
https://cran.r-project.org/src/contrib/ggplot2_3.5.2.tar.gz

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† cran ÂâçÁºÄÔºâ
https://xget.xi-xu.me/cran/src/contrib/ggplot2_3.5.2.tar.gz

# CRAN ÂåÖÂÖÉÊï∞ÊçÆÂéüÂßã URL
https://cran.r-project.org/web/packages/dplyr/DESCRIPTION

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† cran ÂâçÁºÄÔºâ
https://xget.xi-xu.me/cran/web/packages/dplyr/DESCRIPTION
```

#### CPAN (Perl ÂåÖÁÆ°ÁêÜ)

```url
# CPAN Ê®°ÂùóÂéüÂßã URL
https://www.cpan.org/modules/by-module/DBI/DBI-1.643.tar.gz

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† cpan ÂâçÁºÄÔºâ
https://xget.xi-xu.me/cpan/modules/by-module/DBI/DBI-1.643.tar.gz

# CPAN ‰ΩúËÄÖÂåÖÂéüÂßã URL
https://www.cpan.org/authors/id/T/TI/TIMB/DBI-1.643.tar.gz

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† cpan ÂâçÁºÄÔºâ
https://xget.xi-xu.me/cpan/authors/id/T/TI/TIMB/DBI-1.643.tar.gz
```

#### CTAN (TeX/LaTeX ÂåÖÁÆ°ÁêÜ)

```url
# CTAN ÂåÖÊñá‰ª∂ÂéüÂßã URL
https://tug.ctan.org/tex-archive/macros/latex/contrib/beamer.zip

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† ctan ÂâçÁºÄÔºâ
https://xget.xi-xu.me/ctan/tex-archive/macros/latex/contrib/beamer.zip

# CTAN Â≠ó‰ΩìÊñá‰ª∂ÂéüÂßã URL
https://tug.ctan.org/tex-archive/fonts/cm/pk/ljfour/public/cm/dpi600/cmr10.pk

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† ctan ÂâçÁºÄÔºâ
https://xget.xi-xu.me/ctan/tex-archive/fonts/cm/pk/ljfour/public/cm/dpi600/cmr10.pk
```

#### Go Ê®°Âùó

```url
# Go Ê®°Âùó‰ª£ÁêÜÂéüÂßã URL
https://proxy.golang.org/github.com/gin-gonic/gin/@v/v1.9.1.zip

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† golang ÂâçÁºÄÔºâ
https://xget.xi-xu.me/golang/github.com/gin-gonic/gin/@v/v1.9.1.zip

# Go Ê®°Âùó‰ø°ÊÅØÂéüÂßã URL
https://proxy.golang.org/github.com/gorilla/mux/@v/list

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† golang ÂâçÁºÄÔºâ
https://xget.xi-xu.me/golang/github.com/gorilla/mux/@v/list
```

#### NuGet

```url
# NuGet ÂåÖ‰∏ãËΩΩÂéüÂßã URL
https://api.nuget.org/v3-flatcontainer/newtonsoft.json/13.0.3/newtonsoft.json.13.0.3.nupkg

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† nuget ÂâçÁºÄÔºâ
https://xget.xi-xu.me/nuget/v3-flatcontainer/newtonsoft.json/13.0.3/newtonsoft.json.13.0.3.nupkg

# NuGet ÂåÖÂÖÉÊï∞ÊçÆÂéüÂßã URL
https://api.nuget.org/v3/registration5-semver1/microsoft.aspnetcore.app/index.json

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† nuget ÂâçÁºÄÔºâ
https://xget.xi-xu.me/nuget/v3/registration5-semver1/microsoft.aspnetcore.app/index.json
```

#### Rust Crates

```url
# Crate ‰∏ãËΩΩÂéüÂßã URL
https://crates.io/api/v1/crates/serde/1.0.0/download

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† crates ÂâçÁºÄÔºâ
https://xget.xi-xu.me/crates/serde/1.0.0/download

# Crate ÂÖÉÊï∞ÊçÆÂéüÂßã URL
https://crates.io/api/v1/crates/serde

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† crates ÂâçÁºÄÔºâ
https://xget.xi-xu.me/crates/serde

# Crate ÊêúÁ¥¢ÂéüÂßã URL
https://crates.io/api/v1/crates?q=serde

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† crates ÂâçÁºÄÔºâ
https://xget.xi-xu.me/crates/?q=serde
```

#### Packagist

```url
# Packagist ÂåÖÂÖÉÊï∞ÊçÆÂéüÂßã URL
https://repo.packagist.org/p2/symfony/console.json

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† packagist ÂâçÁºÄÔºâ
https://xget.xi-xu.me/packagist/p2/symfony/console.json

# Packagist ÂåÖÂàóË°®ÂéüÂßã URL
https://repo.packagist.org/packages/list.json

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† packagist ÂâçÁºÄÔºâ
https://xget.xi-xu.me/packagist/packages/list.json
```

#### Linux ÂèëË°åÁâà

```url
# Debian ÂåÖÂéüÂßã URL
https://deb.debian.org/debian/pool/main/c/curl/curl_7.88.1-10+deb12u4_amd64.deb

# ËΩ¨Êç¢ÂêéÔºàÊ∑ªÂä† debian ÂâçÁºÄÔºâ
https://xget.xi-xu.me/debian/debian/pool/main/c/curl/curl_7.88.1-10

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mrdoob/three.js]]></title>
            <link>https://github.com/mrdoob/three.js</link>
            <guid>https://github.com/mrdoob/three.js</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:36 GMT</pubDate>
            <description><![CDATA[JavaScript 3D Library.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mrdoob/three.js">mrdoob/three.js</a></h1>
            <p>JavaScript 3D Library.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 109,196</p>
            <p>Forks: 36,057</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre># three.js

[![NPM Package][npm]][npm-url]
[![Build Size][build-size]][build-size-url]
[![NPM Downloads][npm-downloads]][npmtrends-url]
[![Discord][discord]][discord-url]
[![DeepWiki][deepwiki]][deepwiki-url]

#### JavaScript 3D library

The aim of the project is to create an easy-to-use, lightweight, cross-browser, general-purpose 3D library. The current builds only include WebGL and WebGPU renderers but SVG and CSS3D renderers are also available as addons.

[Examples](https://threejs.org/examples/) &amp;mdash;
[Docs](https://threejs.org/docs/) &amp;mdash;
[Manual](https://threejs.org/manual/) &amp;mdash;
[Wiki](https://github.com/mrdoob/three.js/wiki) &amp;mdash;
[Migrating](https://github.com/mrdoob/three.js/wiki/Migration-Guide) &amp;mdash;
[Questions](https://stackoverflow.com/questions/tagged/three.js) &amp;mdash;
[Forum](https://discourse.threejs.org/) &amp;mdash;
[Discord](https://discord.gg/56GBJwAnUS)

### Usage

This code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a `WebGL` renderer for the scene and camera, and it adds that viewport to the `document.body` element. Finally, it animates the cube within the scene for the camera.

```javascript
import * as THREE from &#039;three&#039;;

const width = window.innerWidth, height = window.innerHeight;

// init

const camera = new THREE.PerspectiveCamera( 70, width / height, 0.01, 10 );
camera.position.z = 1;

const scene = new THREE.Scene();

const geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );
const material = new THREE.MeshNormalMaterial();

const mesh = new THREE.Mesh( geometry, material );
scene.add( mesh );

const renderer = new THREE.WebGLRenderer( { antialias: true } );
renderer.setSize( width, height );
renderer.setAnimationLoop( animate );
document.body.appendChild( renderer.domElement );

// animation

function animate( time ) {

	mesh.rotation.x = time / 2000;
	mesh.rotation.y = time / 1000;

	renderer.render( scene, camera );

}
```

If everything goes well, you should see [this](https://jsfiddle.net/w43x5Lgh/).

### Cloning this repository

Cloning the repo with all its history results in a ~2 GB download. If you don&#039;t need the whole history you can use the `depth` parameter to significantly reduce download size.

```sh
git clone --depth=1 https://github.com/mrdoob/three.js.git
```

### Change log

[Releases](https://github.com/mrdoob/three.js/releases)


[npm]: https://img.shields.io/npm/v/three
[npm-url]: https://www.npmjs.com/package/three
[build-size]: https://badgen.net/bundlephobia/minzip/three
[build-size-url]: https://bundlephobia.com/result?p=three
[npm-downloads]: https://img.shields.io/npm/dw/three
[npmtrends-url]: https://www.npmtrends.com/three
[discord]: https://img.shields.io/discord/685241246557667386
[discord-url]: https://discord.gg/56GBJwAnUS
[deepwiki]: https://deepwiki.com/badge.svg
[deepwiki-url]: https://deepwiki.com/mrdoob/three.js

</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[meteor/meteor]]></title>
            <link>https://github.com/meteor/meteor</link>
            <guid>https://github.com/meteor/meteor</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:35 GMT</pubDate>
            <description><![CDATA[Meteor, the JavaScript App Platform]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/meteor/meteor">meteor/meteor</a></h1>
            <p>Meteor, the JavaScript App Platform</p>
            <p>Language: JavaScript</p>
            <p>Stars: 44,750</p>
            <p>Forks: 5,262</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.meteor.com&quot; target=&quot;_blank&quot;&gt;
    &lt;img align=&quot;center&quot; width=&quot;225&quot; src=&quot;https://user-images.githubusercontent.com/841294/26841702-0902bbee-4af3-11e7-9805-0618da66a246.png&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;br&gt;

&lt;div align=&quot;center&quot;&gt;

[![Travis CI Status](https://api.travis-ci.com/meteor/meteor.svg?branch=devel)](https://app.travis-ci.com/github/meteor/meteor)
[![CircleCI Status](https://circleci.com/gh/meteor/meteor.svg?style=svg)](https://app.circleci.com/pipelines/github/meteor/meteor?branch=devel)
[![built with Meteor](https://img.shields.io/badge/Meteor-3.0.1-green?logo=meteor&amp;logoColor=white)](https://meteor.com)


&lt;/div&gt;

&lt;hr&gt;

Meteor is an **ultra-simple** environment for building **modern** web applications.

&lt;hr&gt;

- [Official Website](https://www.meteor.com)
- [Installation](https://www.meteor.com/developers/install)
- [Documentation](https://docs.meteor.com/#/full/)

&lt;hr&gt;

### üìö **Create your applications using modern JavaScript**

Benefit from the latest technology updates to rapidly prototype and develop your applications.

&lt;hr&gt;

### ‚ú® **Integrate technologies you already use**

Use popular frameworks and tools right out-of-the-box. Focus on building features instead of configuring disparate components yourself.

&lt;hr&gt;

### üíª **Build apps for any device**

Use the same code whether you‚Äôre developing for web, iOS, Android, or desktop for a seamless update experience for your users.

&lt;hr&gt;

# üî• Getting Started

How about trying a tutorial to get started with your favorite technology?

| [&lt;img align=&quot;left&quot; width=&quot;25&quot; src=&quot;https://upload.wikimedia.org/wikipedia/commons/a/a7/React-icon.svg&quot;&gt; React](https://react-tutorial.meteor.com/) |
| - |
| [&lt;img align=&quot;left&quot; width=&quot;25&quot; src=&quot;https://progsoft.net/images/blaze-css-icon-3e80acb3996047afd09f1150f53fcd78e98c1e1b.png&quot;&gt; Blaze](https://blaze-tutorial.meteor.com/) |
| [&lt;img align=&quot;left&quot; width=&quot;25&quot; src=&quot;https://vuejs.org/images/logo.png&quot;&gt; Vue](https://vue-tutorial.meteor.com/) |
| [&lt;img align=&quot;left&quot; width=&quot;25&quot; src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/Svelte_Logo.svg/1200px-Svelte_Logo.svg.png&quot;&gt; Svelte](https://svelte-tutorial.meteor.com/) |

Next, read the [documentation](https://docs.meteor.com/) and get some [examples](https://github.com/meteor/examples).

# üöÄ Quick Start

On your platform, use this line:

```shell
&gt; npm install -g meteor
```
 
üöÄ To create a project:

```shell
&gt; meteor create my-app
```

‚òÑÔ∏è Run it:

```shell
cd my-app
meteor
```

# üß± Developer Resources

**Building an application with Meteor?**

* Deploy on [Meteor Cloud](https://www.meteor.com/cloud)
* Discuss on [Forums](https://forums.meteor.com/)
* Join the Meteor community Slack by clicking this [invite link](https://join.slack.com/t/meteor-community/shared_invite/enQtODA0NTU2Nzk5MTA3LWY5NGMxMWRjZDgzYWMyMTEyYTQ3MTcwZmU2YjM5MTY3MjJkZjQ0NWRjOGZlYmIxZjFlYTA5Mjg4OTk3ODRiOTc).
* Announcement list. Subscribe in the [footer](https://www.meteor.com/).


Interested in helping or contributing to Meteor?  These resources will help:

* [Core development guide](DEVELOPMENT.md)
* [Contribution guidelines](CONTRIBUTING.md)
* [Feature requests](https://github.com/meteor/meteor/discussions/)
* [Issue tracker](https://github.com/meteor/meteor/issues)

To uninstall Meteor: 
  - If installed via npm, run:
      ```shell
      meteor-installer uninstall
      ```
  - If installed via curl, run:
    ```shell
    rm -rf ~/.meteor 
    sudo rm /usr/local/bin/meteor
    ```
To find more information about installation, [read here](https://docs.meteor.com/install.html#uninstall).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[open-webui/open-webui]]></title>
            <link>https://github.com/open-webui/open-webui</link>
            <guid>https://github.com/open-webui/open-webui</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:34 GMT</pubDate>
            <description><![CDATA[User-friendly AI Interface (Supports Ollama, OpenAI API, ...)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/open-webui/open-webui">open-webui/open-webui</a></h1>
            <p>User-friendly AI Interface (Supports Ollama, OpenAI API, ...)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 113,959</p>
            <p>Forks: 15,847</p>
            <p>Stars today: 80 stars today</p>
            <h2>README</h2><pre># Open WebUI üëã

![GitHub stars](https://img.shields.io/github/stars/open-webui/open-webui?style=social)
![GitHub forks](https://img.shields.io/github/forks/open-webui/open-webui?style=social)
![GitHub watchers](https://img.shields.io/github/watchers/open-webui/open-webui?style=social)
![GitHub repo size](https://img.shields.io/github/repo-size/open-webui/open-webui)
![GitHub language count](https://img.shields.io/github/languages/count/open-webui/open-webui)
![GitHub top language](https://img.shields.io/github/languages/top/open-webui/open-webui)
![GitHub last commit](https://img.shields.io/github/last-commit/open-webui/open-webui?color=red)
[![Discord](https://img.shields.io/badge/Discord-Open_WebUI-blue?logo=discord&amp;logoColor=white)](https://discord.gg/5rJgQTnV4s)
[![](https://img.shields.io/static/v1?label=Sponsor&amp;message=%E2%9D%A4&amp;logo=GitHub&amp;color=%23fe8e86)](https://github.com/sponsors/tjbck)

**Open WebUI is an [extensible](https://docs.openwebui.com/features/plugin/), feature-rich, and user-friendly self-hosted AI platform designed to operate entirely offline.** It supports various LLM runners like **Ollama** and **OpenAI-compatible APIs**, with **built-in inference engine** for RAG, making it a **powerful AI deployment solution**.

Passionate about open-source AI? [Join our team ‚Üí](https://careers.openwebui.com/)

![Open WebUI Demo](./demo.gif)

&gt; [!TIP]  
&gt; **Looking for an [Enterprise Plan](https://docs.openwebui.com/enterprise)?** ‚Äì **[Speak with Our Sales Team Today!](mailto:sales@openwebui.com)**
&gt;
&gt; Get **enhanced capabilities**, including **custom theming and branding**, **Service Level Agreement (SLA) support**, **Long-Term Support (LTS) versions**, and **more!**

For more information, be sure to check out our [Open WebUI Documentation](https://docs.openwebui.com/).

## Key Features of Open WebUI ‚≠ê

- üöÄ **Effortless Setup**: Install seamlessly using Docker or Kubernetes (kubectl, kustomize or helm) for a hassle-free experience with support for both `:ollama` and `:cuda` tagged images.

- ü§ù **Ollama/OpenAI API Integration**: Effortlessly integrate OpenAI-compatible APIs for versatile conversations alongside Ollama models. Customize the OpenAI API URL to link with **LMStudio, GroqCloud, Mistral, OpenRouter, and more**.

- üõ°Ô∏è **Granular Permissions and User Groups**: By allowing administrators to create detailed user roles and permissions, we ensure a secure user environment. This granularity not only enhances security but also allows for customized user experiences, fostering a sense of ownership and responsibility amongst users.

- üîÑ **SCIM 2.0 Support**: Enterprise-grade user and group provisioning through SCIM 2.0 protocol, enabling seamless integration with identity providers like Okta, Azure AD, and Google Workspace for automated user lifecycle management.

- üì± **Responsive Design**: Enjoy a seamless experience across Desktop PC, Laptop, and Mobile devices.

- üì± **Progressive Web App (PWA) for Mobile**: Enjoy a native app-like experience on your mobile device with our PWA, providing offline access on localhost and a seamless user interface.

- ‚úíÔ∏èüî¢ **Full Markdown and LaTeX Support**: Elevate your LLM experience with comprehensive Markdown and LaTeX capabilities for enriched interaction.

- üé§üìπ **Hands-Free Voice/Video Call**: Experience seamless communication with integrated hands-free voice and video call features, allowing for a more dynamic and interactive chat environment.

- üõ†Ô∏è **Model Builder**: Easily create Ollama models via the Web UI. Create and add custom characters/agents, customize chat elements, and import models effortlessly through [Open WebUI Community](https://openwebui.com/) integration.

- üêç **Native Python Function Calling Tool**: Enhance your LLMs with built-in code editor support in the tools workspace. Bring Your Own Function (BYOF) by simply adding your pure Python functions, enabling seamless integration with LLMs.

- üìö **Local RAG Integration**: Dive into the future of chat interactions with groundbreaking Retrieval Augmented Generation (RAG) support. This feature seamlessly integrates document interactions into your chat experience. You can load documents directly into the chat or add files to your document library, effortlessly accessing them using the `#` command before a query.

- üîç **Web Search for RAG**: Perform web searches using providers like `SearXNG`, `Google PSE`, `Brave Search`, `serpstack`, `serper`, `Serply`, `DuckDuckGo`, `TavilySearch`, `SearchApi` and `Bing` and inject the results directly into your chat experience.

- üåê **Web Browsing Capability**: Seamlessly integrate websites into your chat experience using the `#` command followed by a URL. This feature allows you to incorporate web content directly into your conversations, enhancing the richness and depth of your interactions.

- üé® **Image Generation Integration**: Seamlessly incorporate image generation capabilities using options such as AUTOMATIC1111 API or ComfyUI (local), and OpenAI&#039;s DALL-E (external), enriching your chat experience with dynamic visual content.

- ‚öôÔ∏è **Many Models Conversations**: Effortlessly engage with various models simultaneously, harnessing their unique strengths for optimal responses. Enhance your experience by leveraging a diverse set of models in parallel.

- üîê **Role-Based Access Control (RBAC)**: Ensure secure access with restricted permissions; only authorized individuals can access your Ollama, and exclusive model creation/pulling rights are reserved for administrators.

- üåêüåç **Multilingual Support**: Experience Open WebUI in your preferred language with our internationalization (i18n) support. Join us in expanding our supported languages! We&#039;re actively seeking contributors!

- üß© **Pipelines, Open WebUI Plugin Support**: Seamlessly integrate custom logic and Python libraries into Open WebUI using [Pipelines Plugin Framework](https://github.com/open-webui/pipelines). Launch your Pipelines instance, set the OpenAI URL to the Pipelines URL, and explore endless possibilities. [Examples](https://github.com/open-webui/pipelines/tree/main/examples) include **Function Calling**, User **Rate Limiting** to control access, **Usage Monitoring** with tools like Langfuse, **Live Translation with LibreTranslate** for multilingual support, **Toxic Message Filtering** and much more.

- üåü **Continuous Updates**: We are committed to improving Open WebUI with regular updates, fixes, and new features.

Want to learn more about Open WebUI&#039;s features? Check out our [Open WebUI documentation](https://docs.openwebui.com/features) for a comprehensive overview!

## Sponsors üôå

#### Emerald

&lt;table&gt;
  &lt;!-- &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://n8n.io/&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/n8n.png&quot; alt=&quot;n8n&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt; ‚Ä¢ Does your interface have a backend yet?&lt;br&gt;Try &lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt; --&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;utm_medium=paid-ad-placement&amp;utm_campaign=OpenWebUI-Docs&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/tailscale.png&quot; alt=&quot;Tailscale&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;utm_medium=paid-ad-placement&amp;utm_campaign=OpenWebUI-Docs&quot;&gt;Tailscale&lt;/a&gt; ‚Ä¢ Connect self-hosted AI to any device with Tailscale
    &lt;/td&gt;
  &lt;/tr&gt;
   &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://warp.dev/open-webui&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/warp.png&quot; alt=&quot;Warp&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://warp.dev/open-webui&quot;&gt;Warp&lt;/a&gt; ‚Ä¢ The intelligent terminal for developers
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

---

We are incredibly grateful for the generous support of our sponsors. Their contributions help us to maintain and improve our project, ensuring we can continue to deliver quality work to our community. Thank you!

## How to Install üöÄ

### Installation via Python pip üêç

Open WebUI can be installed using pip, the Python package installer. Before proceeding, ensure you&#039;re using **Python 3.11** to avoid compatibility issues.

1. **Install Open WebUI**:
   Open your terminal and run the following command to install Open WebUI:

   ```bash
   pip install open-webui
   ```

2. **Running Open WebUI**:
   After installation, you can start Open WebUI by executing:

   ```bash
   open-webui serve
   ```

This will start the Open WebUI server, which you can access at [http://localhost:8080](http://localhost:8080)

### Quick Start with Docker üê≥

&gt; [!NOTE]  
&gt; Please note that for certain Docker environments, additional configurations might be needed. If you encounter any connection issues, our detailed guide on [Open WebUI Documentation](https://docs.openwebui.com/) is ready to assist you.

&gt; [!WARNING]
&gt; When using Docker to install Open WebUI, make sure to include the `-v open-webui:/app/backend/data` in your Docker command. This step is crucial as it ensures your database is properly mounted and prevents any loss of data.

&gt; [!TIP]  
&gt; If you wish to utilize Open WebUI with Ollama included or CUDA acceleration, we recommend utilizing our official images tagged with either `:cuda` or `:ollama`. To enable CUDA, you must install the [Nvidia CUDA container toolkit](https://docs.nvidia.com/dgx/nvidia-container-runtime-upgrade/) on your Linux/WSL system.

### Installation with Default Configuration

- **If Ollama is on your computer**, use this command:

  ```bash
  docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **If Ollama is on a Different Server**, use this command:

  To connect to Ollama on another server, change the `OLLAMA_BASE_URL` to the server&#039;s URL:

  ```bash
  docker run -d -p 3000:8080 -e OLLAMA_BASE_URL=https://example.com -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **To run Open WebUI with Nvidia GPU support**, use this command:

  ```bash
  docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda
  ```

### Installation for OpenAI API Usage Only

- **If you&#039;re only using OpenAI API**, use this command:

  ```bash
  docker run -d -p 3000:8080 -e OPENAI_API_KEY=your_secret_key -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

### Installing Open WebUI with Bundled Ollama Support

This installation method uses a single container image that bundles Open WebUI with Ollama, allowing for a streamlined setup via a single command. Choose the appropriate command based on your hardware setup:

- **With GPU Support**:
  Utilize GPU resources by running the following command:

  ```bash
  docker run -d -p 3000:8080 --gpus=all -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

- **For CPU Only**:
  If you&#039;re not using a GPU, use this command instead:

  ```bash
  docker run -d -p 3000:8080 -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

Both commands facilitate a built-in, hassle-free installation of both Open WebUI and Ollama, ensuring that you can get everything up and running swiftly.

After installation, you can access Open WebUI at [http://localhost:3000](http://localhost:3000). Enjoy! üòÑ

### Other Installation Methods

We offer various installation alternatives, including non-Docker native installation methods, Docker Compose, Kustomize, and Helm. Visit our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/) or join our [Discord community](https://discord.gg/5rJgQTnV4s) for comprehensive guidance.

Look at the [Local Development Guide](https://docs.openwebui.com/getting-started/advanced-topics/development) for instructions on setting up a local development environment.

### Troubleshooting

Encountering connection issues? Our [Open WebUI Documentation](https://docs.openwebui.com/troubleshooting/) has got you covered. For further assistance and to join our vibrant community, visit the [Open WebUI Discord](https://discord.gg/5rJgQTnV4s).

#### Open WebUI: Server Connection Error

If you&#039;re experiencing connection issues, it‚Äôs often due to the WebUI docker container not being able to reach the Ollama server at 127.0.0.1:11434 (host.docker.internal:11434) inside the container . Use the `--network=host` flag in your docker command to resolve this. Note that the port changes from 3000 to 8080, resulting in the link: `http://localhost:8080`.

**Example Docker Command**:

```bash
docker run -d --network=host -v open-webui:/app/backend/data -e OLLAMA_BASE_URL=http://127.0.0.1:11434 --name open-webui --restart always ghcr.io/open-webui/open-webui:main
```

### Keeping Your Docker Installation Up-to-Date

In case you want to update your local Docker installation to the latest version, you can do it with [Watchtower](https://containrrr.dev/watchtower/):

```bash
docker run --rm --volume /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --run-once open-webui
```

In the last part of the command, replace `open-webui` with your container name if it is different.

Check our Updating Guide available in our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/updating).

### Using the Dev Branch üåô

&gt; [!WARNING]
&gt; The `:dev` branch contains the latest unstable features and changes. Use it at your own risk as it may have bugs or incomplete features.

If you want to try out the latest bleeding-edge features and are okay with occasional instability, you can use the `:dev` tag like this:

```bash
docker run -d -p 3000:8080 -v open-webui:/app/backend/data --name open-webui --add-host=host.docker.internal:host-gateway --restart always ghcr.io/open-webui/open-webui:dev
```

### Offline Mode

If you are running Open WebUI in an offline environment, you can set the `HF_HUB_OFFLINE` environment variable to `1` to prevent attempts to download models from the internet.

```bash
export HF_HUB_OFFLINE=1
```

## What&#039;s Next? üåü

Discover upcoming features on our roadmap in the [Open WebUI Documentation](https://docs.openwebui.com/roadmap/).

## License üìú

This project contains code under multiple licenses. The current codebase includes components licensed under the Open WebUI License with an additional requirement to preserve the &quot;Open WebUI&quot; branding, as well as prior contributions under their respective original licenses. For a detailed record of license changes and the applicable terms for each section of the code, please refer to [LICENSE_HISTORY](./LICENSE_HISTORY). For complete and updated licensing details, please see the [LICENSE](./LICENSE) and [LICENSE_HISTORY](./LICENSE_HISTORY) files.

## Support üí¨

If you have any questions, suggestions, or need assistance, please open an issue or join our
[Open WebUI Discord community](https://discord.gg/5rJgQTnV4s) to connect with us! ü§ù

## Star History

&lt;a href=&quot;https://star-history.com/#open-webui/open-webui&amp;Date&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&amp;theme=dark&quot; /&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
    &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

---

Created by [Timothy Jaeryang Baek](https://github.com/tjbck) - Let&#039;s make Open WebUI even more amazing together! üí™
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[badges/shields]]></title>
            <link>https://github.com/badges/shields</link>
            <guid>https://github.com/badges/shields</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:33 GMT</pubDate>
            <description><![CDATA[Concise, consistent, and legible badges in SVG and raster format]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/badges/shields">badges/shields</a></h1>
            <p>Concise, consistent, and legible badges in SVG and raster format</p>
            <p>Language: JavaScript</p>
            <p>Stars: 25,585</p>
            <p>Forks: 5,562</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://raw.githubusercontent.com/badges/shields/master/readme-logo.svg?sanitize=true&quot;
        height=&quot;130&quot;&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://shields.io/community#backers&quot; alt=&quot;Backers on Open Collective&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/opencollective/backers/shields&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://shields.io/community#sponsors&quot; alt=&quot;Sponsors on Open Collective&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/opencollective/sponsors/shields&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/badges/shields/pulse&quot; alt=&quot;Activity&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/github/commit-activity/m/badges/shields&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/badges/shields/discussions&quot; alt=&quot;Discussions&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/github/discussions/badges/shields&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/badges/shields/actions/workflows/daily-tests.yml&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/badges/shields/daily-tests.yml?label=daily%20tests&quot;
            alt=&quot;Daily Tests Status&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://coveralls.io/github/badges/shields&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/coveralls/github/badges/shields&quot;
            alt=&quot;Code Coverage&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://discord.gg/HjJCwm5&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/discord/308323056592486420?logo=discord&amp;logoColor=white&quot;
            alt=&quot;Chat on Discord&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

This is home to [Shields.io][shields.io], a service for concise, consistent,
and legible badges in SVG and raster format, which can easily be included in
GitHub readmes or any other web page. The service supports dozens of
continuous integration services, package registries, distributions, app
stores, social networks, code coverage services, and code analysis services.
Every month it serves over 1.6 billion images and is used by some of the
world&#039;s most popular open-source projects, [VS Code][vscode], [Vue.js][vue]
and [Bootstrap][bootstrap] to name a few.

[vscode]: https://github.com/Microsoft/vscode
[vue]: https://github.com/vuejs/vue
[bootstrap]: https://github.com/twbs/bootstrap

This repo hosts:

- The [Shields.io][shields.io] frontend and server code
- An [NPM library for generating badges][badge-maker]
  - [documentation][badge-maker-docs]
  - [changelog][badge-maker-changelog]
- The [badge design specification][badge-spec]

[shields.io]: https://shields.io/
[badge-maker]: https://www.npmjs.com/package/badge-maker
[badge-spec]: https://github.com/badges/shields/tree/master/spec
[badge-maker-docs]: https://github.com/badges/shields/tree/master/badge-maker/README.md
[badge-maker-changelog]: https://github.com/badges/shields/tree/master/badge-maker/CHANGELOG.md

## Examples

- code coverage percentage: ![coverage](https://img.shields.io/badge/coverage-80%25-yellowgreen)
- stable release version: ![version](https://img.shields.io/badge/version-1.2.3-blue)
- package manager release: ![gem](https://img.shields.io/badge/gem-2.2.0-blue)
- status of third-party dependencies: ![dependencies](https://img.shields.io/badge/dependencies-out%20of%20date-orange)
- static code analysis grade: ![codacy](https://img.shields.io/badge/codacy-B-green)
- [SemVer](https://semver.org/) version observance: ![semver](https://img.shields.io/badge/semver-2.0.0-blue)
- amount of [Liberapay](https://liberapay.com/) donations per week: ![receives](https://img.shields.io/badge/receives-2.00%20USD%2Fweek-yellow)
- Python package downloads: ![downloads](https://img.shields.io/badge/downloads-13k%2Fmonth-brightgreen)
- Chrome Web Store extension rating: ![rating](https://img.shields.io/badge/rating-‚òÖ‚òÖ‚òÖ‚òÖ‚òÜ-brightgreen)
- Uptime Robot uptime percentage: ![uptime](https://img.shields.io/badge/uptime-100%25-brightgreen)

[Make your own badges!][custom badges]
(Quick example: `https://img.shields.io/badge/left-right-f39f37`)

[custom badges]: https://img.shields.io/badges/static-badge

### Quickstart

Browse a [complete list of badges][shields.io] and locate a particular badge by using the search bar or by browsing the categories. Click on the badge to fill in required data elements for that badge type (like your username or repo) and optionally customize (label, colors etc.). And it&#039;s ready for use!

Use the button at the bottom to copy your badge url or snippet, which can then be added to places like your GitHub readme files or other web pages.

## Contributing

Shields is a community project. We invite your participation through issues
and pull requests! You can peruse the [contributing guidelines][contributing].

When adding or changing a service [please add tests][service-tests].

This project has quite a backlog of suggestions! If you&#039;re new to the project,
maybe you&#039;d like to open a pull request to address one of them.

You can read a [tutorial on how to add a badge][tutorial].

[![GitHub issues by-label](https://img.shields.io/github/issues/badges/shields/good%20first%20issue)](https://github.com/badges/shields/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22)

If you intend on reporting or contributing a fix related to security vulnerabilities, please first refer to our [security policy][security].

[service-tests]: https://github.com/badges/shields/blob/master/doc/service-tests.md
[tutorial]: https://github.com/badges/shields/blob/master/doc/TUTORIAL.md
[contributing]: https://github.com/badges/shields/blob/master/CONTRIBUTING.md
[security]: https://github.com/badges/shields/blob/master/SECURITY.md

## Development

[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/badges/shields?quickstart=1)

1. Install Node 22. You can use the [package manager][] of your choice.
2. Clone this repository.
3. Run `npm ci` to install the dependencies.
4. Run `npm start` to start the badge server and the frontend dev server.
5. Open `http://localhost:3000/` to view the frontend.

When server source files change, the badge server should automatically restart
itself (using [nodemon][]). When the frontend files change, the frontend dev
server (`docusaurus start`) should also automatically reload. However the badge
definitions are built only before the server first starts. To regenerate those,
either run `npm run prestart` or manually restart the server.

To debug a badge from the command line, run `npm run badge -- /npm/v/nock`.
It also works with full URLs like
`npm run badge -- https://img.shields.io/npm/v/nock`.

Use `npm run debug:server` to start server in debug mode.
[This recipe][nodemon debug] shows how to debug Node.js application in [VS Code][].

[Snapshot tests][] ensure we don&#039;t inadvertently make changes that affect the
SVG or JSON output. When deliberately changing the output, run
`SNAPSHOT_DRY=1 npm run test:package` to preview changes to the saved
snapshots, and `SNAPSHOT_UPDATE=1 npm run test:package` to update them.

The server can be configured to use [Sentry][] ([configuration][sentry configuration]) and [Prometheus][] ([configuration][prometheus configuration]).

Our [full test suite][full test suite] as well as [code coverage][code coverage] are run on a daily basis.

[package manager]: https://nodejs.org/en/download/package-manager/
[snapshot tests]: https://glebbahmutov.com/blog/snapshot-testing/
[prometheus]: https://prometheus.io/
[prometheus configuration]: https://github.com/badges/shields/blob/master/doc/self-hosting.md#prometheus
[sentry]: https://sentry.io/
[sentry configuration]: https://github.com/badges/shields/blob/master/doc/self-hosting.md#sentry
[nodemon]: https://nodemon.io/
[nodemon debug]: https://github.com/Microsoft/vscode-recipes/tree/master/nodemon
[vs code]: https://code.visualstudio.com/
[full test suite]: https://github.com/badges/shields/actions/workflows/daily-tests.yml
[code coverage]: https://coveralls.io/github/badges/shields

## Hosting your own server

There is documentation about [hosting your own server][self-hosting].

[self-hosting]: https://github.com/badges/shields/blob/master/doc/self-hosting.md

## Related projects

[![Awesome](https://awesome.re/badge.svg)](https://awesome.re)

Status badges are used widely across open-source and private software projects.
Academics have studied the &quot;signal&quot; badges provide about software project
quality. There are many existing libraries for rendering these badges, and
alternatives to the hosted Shields badge service. [awesome-badges][] is a
curated collection of such resources.
[Contributions][contributing to awesome-badges] may be considered there.
(The presence of a project in that collection should not be interpreted as an endorsement nor promotion from the Shields project)

[awesome-badges]: https://github.com/badges/awesome-badges
[contributing to awesome-badges]: https://github.com/badges/awesome-badges/blob/main/CONTRIBUTING.md

## History

b.adge.me was the original website for this service. Heroku back then had a
thing which made it hard to use a toplevel domain with it, hence the odd
domain. It used code developed in 2013 from a library called
[gh-badges][old-gh-badges], both developed by [Thadd√©e Tyl][espadrine].
The project merged with shields.io by making it use the b.adge.me code
and closed b.adge.me.

The original badge specification was developed in 2013 by
[Olivier Lacan][olivierlacan]. It was inspired by the Travis CI and similar
badges (there were a lot fewer, back then). In 2014 Thadd√©e Tyl redesigned
it with help from a Travis CI employee and convinced everyone to switch to
it. The old design is what today is called the plastic style; the new one
is the flat style.

You can read more about [the project&#039;s inception][thread],
[the motivation of the SVG badge specification][motivation], and
[the specification itself][spec].

[olivierlacan]: https://github.com/olivierlacan
[espadrine]: https://github.com/espadrine
[old-gh-badges]: https://github.com/badges/gh-badges
[motivation]: https://github.com/badges/shields/blob/master/spec/motivation.md
[spec]: https://github.com/badges/shields/blob/master/spec/SPECIFICATION.md
[thread]: https://github.com/h5bp/lazyweb-requests/issues/150

## Project leaders

Maintainers:

- [calebcartwright](https://github.com/calebcartwright)
- [jNullj](https://github.com/jnullj)
- [paulmelnikow](https://github.com/paulmelnikow)
- [PyvesB](https://github.com/PyvesB)

Alumni:

- [chris48s](https://github.com/chris48s)
- [Daniel15](https://github.com/Daniel15)
- [espadrine](https://github.com/espadrine)
- [olivierlacan](https://github.com/olivierlacan)
- [platan](https://github.com/platan)
- [RedSparr0w](https://github.com/RedSparr0w)

## License

All assets and code are under the [CC0 LICENSE](LICENSE) and in the public
domain unless specified otherwise.

## Community

Thanks to the people and companies who donate money, services or time to keep the project running. [https://shields.io/community](https://shields.io/community)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[prettier/prettier]]></title>
            <link>https://github.com/prettier/prettier</link>
            <guid>https://github.com/prettier/prettier</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:32 GMT</pubDate>
            <description><![CDATA[Prettier is an opinionated code formatter.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/prettier/prettier">prettier/prettier</a></h1>
            <p>Prettier is an opinionated code formatter.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 51,134</p>
            <p>Forks: 4,600</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre>[![Prettier Banner](https://unpkg.com/prettier-logo@1.0.3/images/prettier-banner-light.svg)](https://prettier.io)

&lt;h2 align=&quot;center&quot;&gt;Opinionated Code Formatter&lt;/h2&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;em&gt;
    JavaScript
    ¬∑ TypeScript
    ¬∑ Flow
    ¬∑ JSX
    ¬∑ JSON
  &lt;/em&gt;
  &lt;br /&gt;
  &lt;em&gt;
    CSS
    ¬∑ SCSS
    ¬∑ Less
  &lt;/em&gt;
  &lt;br /&gt;
  &lt;em&gt;
    HTML
    ¬∑ Vue
    ¬∑ Angular
  &lt;/em&gt;
  &lt;br /&gt;
  &lt;em&gt;
    GraphQL
    ¬∑ Markdown
    ¬∑ YAML
  &lt;/em&gt;
  &lt;br /&gt;
  &lt;em&gt;
    &lt;a href=&quot;https://prettier.io/docs/plugins&quot;&gt;
      Your favorite language?
    &lt;/a&gt;
  &lt;/em&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/prettier/prettier/actions?query=branch%3Amain&quot;&gt;
    &lt;img alt=&quot;CI Status&quot; src=&quot;https://img.shields.io/github/check-runs/prettier/prettier/main?style=flat-square&amp;label=CI&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://codecov.io/gh/prettier/prettier&quot;&gt;
    &lt;img alt=&quot;Coverage Status&quot; src=&quot;https://img.shields.io/codecov/c/github/prettier/prettier.svg?style=flat-square&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://x.com/acdlite/status/974390255393505280&quot;&gt;
    &lt;img alt=&quot;Blazing Fast&quot; src=&quot;https://img.shields.io/badge/speed-blazing%20%F0%9F%94%A5-brightgreen.svg?style=flat-square&quot;&gt;&lt;/a&gt;
  &lt;br/&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/prettier&quot;&gt;
    &lt;img alt=&quot;npm version&quot; src=&quot;https://img.shields.io/npm/v/prettier.svg?style=flat-square&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/prettier&quot;&gt;
    &lt;img alt=&quot;weekly downloads from npm&quot; src=&quot;https://img.shields.io/npm/dw/prettier.svg?style=flat-square&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/prettier/prettier#badge&quot;&gt;
    &lt;img alt=&quot;code style: prettier&quot; src=&quot;https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://x.com/intent/follow?screen_name=PrettierCode&quot;&gt;
    &lt;img alt=&quot;Follow Prettier on X&quot; src=&quot;https://img.shields.io/badge/%40PrettierCode-9f9f9f?style=flat-square&amp;logo=x&amp;labelColor=555&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

## Intro

Prettier is an opinionated code formatter. It enforces a consistent style by parsing your code and re-printing it with its own rules that take the maximum line length into account, wrapping code when necessary.

### Input

&lt;!-- prettier-ignore --&gt;
```js
foo(reallyLongArg(), omgSoManyParameters(), IShouldRefactorThis(), isThereSeriouslyAnotherOne());
```

### Output

```js
foo(
  reallyLongArg(),
  omgSoManyParameters(),
  IShouldRefactorThis(),
  isThereSeriouslyAnotherOne(),
);
```

Prettier can be run [in your editor](https://prettier.io/docs/editors) on-save, in a [pre-commit hook](https://prettier.io/docs/precommit), or in [CI environments](https://prettier.io/docs/cli#list-different) to ensure your codebase has a consistent style without devs ever having to post a nit-picky comment on a code review ever again!

---

**[Documentation](https://prettier.io/docs/)**

[Install](https://prettier.io/docs/install) ¬∑
[Options](https://prettier.io/docs/options) ¬∑
[CLI](https://prettier.io/docs/cli) ¬∑
[API](https://prettier.io/docs/api)

**[Playground](https://prettier.io/playground/)**

---

## Badge

Show the world you&#039;re using _Prettier_ ‚Üí [![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)

```md
[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)
```

## Contributing

See [CONTRIBUTING.md](CONTRIBUTING.md).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[n00bcodr/Jellyfin-Enhanced]]></title>
            <link>https://github.com/n00bcodr/Jellyfin-Enhanced</link>
            <guid>https://github.com/n00bcodr/Jellyfin-Enhanced</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:31 GMT</pubDate>
            <description><![CDATA[A Jellyfin Plugin to enhance your Jellyfin Web experience.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/n00bcodr/Jellyfin-Enhanced">n00bcodr/Jellyfin-Enhanced</a></h1>
            <p>A Jellyfin Plugin to enhance your Jellyfin Web experience.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 431</p>
            <p>Forks: 22</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre># Jellyfin Enhanced

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/last-commit/n00bcodr/Jellyfin-Enhanced/main?logo=semantic-release&amp;logoColor=white&amp;label=Last%20Updated&amp;labelColor=black&amp;color=AA5CC3&amp;cacheSeconds=3600&quot; alt=&quot;Last Updated&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/commit-activity/w/n00bcodr/Jellyfin-Enhanced?logo=git&amp;label=Commit%20Activity&amp;labelColor=black&amp;color=00A4DC&amp;cacheSeconds=600&quot; alt=&quot;Commit Activity&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/badge/Jellyfin%20Version-10.10, 10.11-AA5CC3?logo=jellyfin&amp;logoColor=00A4DC&amp;labelColor=black&quot; alt=&quot;Jellyfin Version&quot;&gt;
&lt;/p&gt;
&lt;br&gt;

The essential enhancement suite for Jellyfin, bundling advanced features and customizations into one convenient plugin.

&lt;div align=&quot;center&quot;&gt;
  &lt;video 
    src=&quot;https://github.com/user-attachments/assets/c3fed9fe-63c4-4e26-b2b6-73c4817613aa&quot;
  &gt;
  &lt;/video&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;p align=&quot;center&quot;&gt;
--------------------------------------------------
&lt;/p&gt;
&lt;br&gt;

## üìë Table of Contents

- [Jellyfin Enhanced](#jellyfin-enhanced)
  - [üîß Installation](#-installation)
    - [üê≥ Docker Installation Workaround](#docker-installation)
  - [‚ú® Features](#-features)
    - [ü™º Jellyseerr Search](#jellyseerr-search-integration)
        - [Setup](#setup)
        - [Icon States](#icon-states)
      - [How It Works?](#how-it-works)
  - [üåê Internationalization &amp; Translations](#-internationalization--translations)
  - [üé® Custom Styling](#-custom-styling)
    - [Pause Screen CSS](#pause-screen-css)
    - [Quality Tags CSS](#quality-tags-css)
    - [Genre Tags CSS](#genre-tags-css)
    - [Language Tags CSS](#language-tags-css)
    - [Enhanced Panel CSS](#panel-css)
  - [ü´ö Project Structure](#-project-structure)
    - [File Structure](#file-structure)
    - [Component Breakdown](#component-breakdown)
  - [üß™ Compatibility](#-compatibility)
  - [üí° FAQ \&amp; Troubleshooting](#-faq--troubleshooting)
    - [FAQ](#faq)
    - [Troubleshooting](#troubleshooting)
    - [Common Errors](#common-errors)
  - [üì∏ Screenshots](#-screenshots)
  - [üìÑ License](#-license)
- [Enjoying Jellyfin Enhanced?](#enjoying-jellyfin-enhanced)


## üîß Installation

1.  In Jellyfin, go to **Dashboard** &gt; **Plugins** &gt; **Catalog** &gt; ‚öôÔ∏è
2.  Click **‚ûï** and give the repository a name (e.g., &quot;Jellyfin Enhanced&quot;).
3.  Set the **Repository URL** to:

&gt; [!IMPORTANT]
&gt; **If you are on Jellyfin version 10.11 use the 10.11 manifest**
&gt; ```
&gt; https://raw.githubusercontent.com/n00bcodr/jellyfin-plugins/main/10.11/manifest.json
&gt; ```
&gt; If you are on 10.10.7, use the below manifest
&gt; ```
&gt; https://raw.githubusercontent.com/n00bcodr/jellyfin-plugins/main/10.10/manifest.json
&gt; ```

4.  Click **Save**.
5.  Go to the **Catalog** tab, find **Jellyfin Enhanced** in the list, and click **Install**.
6.  **Restart** your Jellyfin server to complete the installation.


&gt; [!NOTE]
&gt; It is highly recommended to have [file-transformation](https://github.com/IAmParadox27/jellyfin-plugin-file-transformation) installed. It helps avoid permission issues while modifying index.html on any kind of installation!
&gt;
&gt; **Only if you do not have file-transformation plugin installed - proceed with the below workaround!**


#### &lt;a id=&quot;docker-installation&quot;&gt;&lt;/a&gt;
&lt;details&gt;
&lt;summary style=&quot;font-size: 1.25em;&quot;&gt;üê≥ Docker Installation Workaround&lt;/summary&gt;
&lt;br&gt;

&gt; **IMPORTANT**!
&gt;
&gt; If you have [file-transformation](https://github.com/IAmParadox27/jellyfin-plugin-file-transformation) plugin installed, DO NOT proceed.

If you&#039;re running Jellyfin through Docker, the plugin may not have permission to modify jellyfin-web to inject the script. If you see permission errors such as `&#039;System.UnauthorizedAccessException: Access to the path &#039;/jellyfin/jellyfin-web/index.html &#039; is denied.` in your logs, you will need to map the `index.html` file manually:

1. Copy the index.html file from your container:

   ```bash
   docker cp jellyfin:/jellyfin/jellyfin-web/index.html /path/to/your/jellyfin/config/index.html
   ```

2. Add a volume mapping to your Docker run command:

   ```yaml
   -v /path/to/your/jellyfin/config/index.html:/jellyfin/jellyfin-web/index.html
   ```

3. Or for Docker Compose, add this to your volumes section:
   ```yaml
   services:
     jellyfin:
       # ... other config
       volumes:
         - /path/to/your/jellyfin/config:/config
         - /path/to/your/jellyfin/config/index.html:/jellyfin/jellyfin-web/index.html
         # ... other volumes
   ```

This gives the plugin the necessary permissions to inject JavaScript into the web interface.

&lt;/details&gt;
&lt;br&gt;

&lt;p align=&quot;center&quot;&gt;
--------------------------------------------------
&lt;/p&gt;

## ‚ú® Features

- **‚å®Ô∏è Advanced Keyboard Shortcuts:** A comprehensive set of hotkeys for navigation, playback control, and more.
- **üìù Customizable Subtitles:** Fine-tune the appearance of subtitles with presets for style, size, and font.
- **‚èØÔ∏è Smart Playback:** Auto-pause when you switch tabs and auto-resume when you return.
- **‚Ü™Ô∏è Auto-Skip Intros/Outros:** Binge-watch seamlessly without interruption (requires Intro Skipper plugin).
- **üé≤ Random Item Button:** Discover something new in your library with a single click.
- **üëÅÔ∏è Remove from Continue Watching:** Easily clean up your home screen.
- **üîç Streaming Provider Lookup:** See where else your media is available to stream across multiple regions.
- **‚úíÔ∏è Show Reviews from TMDB:** Option to show TMDB reviews of an item in Jellyfin.
- **üñºÔ∏è Auto Picture-in-Picture:** Automatically enter Picture-in-Picture mode when switching to another tab.
- **üìÅ Show File Sizes:** Display the total file size of media on its detail page.
- **üó£Ô∏è Show Audio Languages:** See available audio languages with country flags on the item detail page.
- **üé¨ Custom Pause Screen:** A beautifully designed, informative overlay when you pause a video. This feature is a modified version of the original script by [BobHasNoSoul](https://github.com/BobHasNoSoul/Jellyfin-PauseScreen).
- **üè∑Ô∏è Quality Tags:** See media quality (4K, HDR, Atmos) at a glance directly on the posters. This is a modified and rewritten version of the original script by [BobHasNoSoul](https://github.com/BobHasNoSoul/Jellyfin-Qualitytags/).
- **üé≠ Genre Tags:** Identify genres instantly with themed icons on posters.
- **üåê Language Tags:** Displays available audio languages as flags on posters.
- **üîó .arr Links Integration:** For administrators, quickly jump to the Sonarr, Radarr, or Bazarr page for any item.
- **üîñ Watchlist** Watchlist any item and access your watchlist using a [CustomTab](https://github.com/IAmParadox27/jellyfin-plugin-custom-tabs/tree/main/src) from [KefinTweaks](https://github.com/ranaldsgift/KefinTweaks)
- **üåç Multi-language Support:** The interface is available in multiple languages, with more on the way.
- **üñºÔ∏è Custom Splash Screen:** A configurable splash screen that appears while Jellyfin is loading.

&lt;br&gt;

&lt;p align=&quot;center&quot;&gt;
--------------------------------------------------
&lt;/p&gt;

## Jellyseerr Search Integration &lt;a name=&quot;jellyseerr-search-integration&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://cdn.jsdelivr.net/gh/selfhst/icons/svg/jellyseerr.svg&quot; width=&quot;40&quot; height=&quot;50&quot; align=&quot;center&quot;&gt;

The Jellyfin Enhanced plugin can integrate with your Jellyseerr instance, allowing users to search for and request media directly from the Jellyfin search interface.

#### Setup

To enable the Jellyseerr integration, you must first configure it in the plugin settings:

1. Navigate to **Dashboard &gt; Plugins &gt; Jellyfin Enhanced**.
2. Go to the **Jellyseerr Settings** tab.
3. Check the **Show Jellyseerr Results in Search** box to enable the feature.
4. Enter your **Jellyseerr URL(s)**, one per line. The plugin will use the first one that connects successfully. Should be the same Jellyseerr Instance. Intended for providing internal and external urls, ideally just internal URL should work.
5. Enter your **Jellyseerr API Key**. You can find this in Jellyseerr under **Settings &gt; General &gt; API Key**.
6. You can use the test button to see if your Jellyseerr instance is reachable.
7. Click **Save**.

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;images/jellyseerr.png&quot; width=&quot;600&quot; style=&quot;border-radius:25px;&quot; /&gt;
&lt;/p&gt;

&gt; [!IMPORTANT]
&gt; For the integration to work, you must also enable **&quot;Enable Jellyfin Sign-In&quot;** in your Jellyseerr User Settings (`/settings/users`).
&gt; \
&gt; &lt;img src=&quot;images/jellyfin-signin.png&quot; width=&quot;500&quot; style=&quot;border-radius:25px;&quot; /&gt; \
&gt; \
&gt; All users who need access to request content must be imported into Jellyseerr as Jellyfin users.
&gt; &lt;table align=&quot;center&quot;&gt;
&gt; &lt;tr&gt;&lt;th style=&quot;text-align:center&quot;&gt;Users that have access&lt;/th&gt;&lt;th style=&quot;text-align:center&quot;&gt;Users that don&#039;t have access (import them)&lt;/th&gt;  &lt;/tr&gt;  &lt;tr&gt;    &lt;td&gt;&lt;img src=&quot;images/users-with-access.png&quot; width=&quot;300&quot;/&gt;&lt;/td&gt;    &lt;td&gt;&lt;img src=&quot;images/users-no-access.png&quot; width=&quot;300&quot;/&gt;&lt;/td&gt;  &lt;/tr&gt;  &lt;/table&gt;

#### Icon States

When on the search page, a Jellyseerr icon will appear to indicate the connection status. This is the first thing to check when troubleshooting issues.

| **Icon** | **State** | **Description** |
| :---: | :--- | :--- |
|&lt;img width=&quot;32&quot; alt=&quot;active&quot; src=&quot;https://github.com/user-attachments/assets/09124764-5132-4474-83e7-c09399630b13&quot; /&gt; | **Active** | Jellyseerr is successfully connected, and the current Jellyfin user is correctly linked to a Jellyseerr user. &lt;br&gt; Results from Jellyseerr will load along with Jellyfin and requests can be made. |
| &lt;img width=&quot;32&quot; alt=&quot;noaccess&quot; src=&quot;https://github.com/user-attachments/assets/0db72189-04fc-4ec1-bdf1-50dd5e36d2ef&quot; /&gt; | **User Not Found** | Jellyseerr is successfully connected, but the current Jellyfin user is not linked to a Jellyseerr account. &lt;br&gt;Ensure the user has been imported into Jellyseerr from Jellyfin. Results will not load. |
| &lt;img width=&quot;32&quot; alt=&quot;offline&quot; src=&quot;https://github.com/user-attachments/assets/0e109ec3-038c-4471-97c1-9cc38bcd26c5&quot; /&gt; | **Offline** | The plugin could not connect to any of the configured Jellyseerr URLs. &lt;br&gt; Check your plugin settings and ensure Jellyseerr is running and accessible. Results will not load. |


---


&lt;br&gt;

#### How It Works?

To ensure security and prevent browser-related Cross-Origin Resource Sharing (CORS) errors, the Jellyfin Enhanced plugin does not communicate directly with the Jellyseerr API from your browser. Instead, it uses the Jellyfin server as a proxy. This method keeps your Jellyseerr API key safe on the server and avoids security issues.

In doing so, the plugin exposes a few proxy endpoints for its own use and for troubleshooting.

&lt;br&gt;
&lt;details&gt;
&lt;summary style=&quot;font-size: 1.2em; font-weight: 600;&quot;&gt;üîå Jellyseerr API Endpoints&lt;/summary&gt;
&lt;br&gt;

You can use these `curl` commands to directly interact with the plugin&#039;s API for troubleshooting. You will need to replace the placeholder values with your own.

#### Get Plugin Version

This endpoint checks the installed version of the Jellyfin Enhanced plugin.

```bash
curl -X GET\
  &quot;&lt;JELLYFIN_ADDRESS&gt;/JellyfinEnhanced/version&quot;
```

&lt;br/&gt;

#### Get Jellyseerr Connection Status

Checks if the plugin can connect to any of the configured Jellyseerr URLs using the provided API key.

```bash
curl -X GET\
  -H &quot;X-Emby-Token: &lt;JELLYFIN_API_KEY&gt;&quot;\
  &quot;&lt;JELLYFIN_ADDRESS&gt;/JellyfinEnhanced/jellyseerr/status&quot;
```

&lt;br/&gt;

#### Get Jellyseerr User Status

Verifies that the currently logged-in Jellyfin user is successfully linked to a Jellyseerr user account.

```bash
curl -X GET\
  -H &quot;X-Emby-Token: &lt;JELLYFIN_API_KEY&gt;&quot;\
  -H &quot;X-Jellyfin-User-Id: &lt;JELLYFIN_USER_ID&gt;&quot;\
  &quot;&lt;JELLYFIN_ADDRESS&gt;/JellyfinEnhanced/jellyseerr/user-status&quot;
```

&lt;br/&gt;

#### Perform a Jellyseerr Search

Executes a search query through the Jellyseerr instance for the specified user.

```bash
curl -X GET\
  -H &quot;X-Emby-Token: &lt;JELLYFIN_API_KEY&gt;&quot;\
  -H &quot;X-Jellyfin-User-Id: &lt;JELLYFIN_USER_ID&gt;&quot;\
  &quot;&lt;JELLYFIN_ADDRESS&gt;/JellyfinEnhanced/jellyseerr/search?query=Inception&quot;
```

&lt;br/&gt;

#### Make a Request on Jellyseerr

Submits a media request to Jellyseerr on behalf of the specified user. \
mediaType can be `tv` or `movie` \
mediaId is the TMDB ID of the item

```bash
curl -X POST\
  -H &quot;X-Emby-Token: &lt;JELLYFIN_API_KEY&gt;&quot;\
  -H &quot;X-Jellyfin-User-Id: &lt;JELLYFIN_USER_ID&gt;&quot;\
  -H &quot;Content-Type: application/json&quot;\
  -d &#039;{&quot;mediaType&quot;: &quot;movie&quot;, &quot;mediaId&quot;: 27205}&#039;\
  &quot;&lt;JELLYFIN_ADDRESS&gt;/JellyfinEnhanced/jellyseerr/request&quot;
```

&lt;/details&gt;

&lt;p align=&quot;center&quot;&gt;
--------------------------------------------------
&lt;/p&gt;

&lt;br&gt;

## üîß Customization &amp; Advanced Use

### üåê Internationalization &amp; Translations

The plugin detects the Jellyfin user profile language automatically. List of currently supported languages [here](Jellyfin.Plugin.JellyfinEnhanced\js\locales).

Is your language missing or incorrect? You can help translate Jellyfin Enhanced for the community!

- Find the Translation Files: Navigate to the `Jellyfin.Plugin.JellyfinEnhanced/js/locales/` directory in this repository.
- Make a copy of `en.json` and rename it to your language&#039;s two-letter ISO 639-1 code (e.g., `es.json` for Spanish, `pl.json` for Polish).
- Translate: Open your new file and translate the English text on the right side of the colons (:).
- Submit a Pull Request: Once you&#039;re done, submit a pull request with your new translation file.



&lt;br&gt;
&lt;p align=&quot;center&quot;&gt;
--------------------------------------------------
&lt;/p&gt;

### üé® Custom Styling

### &lt;a id=&quot;pause-screen-css&quot;&gt;&lt;/a&gt;
&lt;details&gt;
&lt;summary style=&quot;font-size: 1.2em;&quot;&gt;Pause Screen&lt;/summary&gt;
&lt;br&gt;

If you do not want an element in the pause screen, you can customize by hiding them to your liking.

| Element | CSS Selector | Example CSS to Hide |
| --- | --- | --- |
| **Logo** | `#pause-screen-logo` | `#pause-screen-logo { display: none; }` |
| **Details** (Year, Rating, Runtime) | `#pause-screen-details` | `#pause-screen-details { display: none; }` |
| **Plot/Description** | `#pause-screen-plot` | `#pause-screen-plot { display: none; }` |
| **Entire Progress Bar** | `#pause-screen-progress-wrap` | `#pause-screen-progress-wrap { display: none; }` |
| **Spinning Disc** | `#pause-screen-disc` | `#pause-screen-disc { display: none; }` |
| **Blurred Backdrop** | `#pause-screen-backdrop` | `#pause-screen-backdrop { display: none; }` |
| **Time Display** (Current / Total) | `.progress-time` | `.progress-time { display: none; }` |
| **&quot;Ends At&quot; Time** | `.progress-ends-at` | `.progress-ends-at { display: none; }` |
| **Percentage Watched** | `.progress-percentage` | `.progress-percentage { display: none; }` |

&lt;/details&gt;

### &lt;a id=&quot;quality-tags-css&quot;&gt;&lt;/a&gt;
&lt;details&gt;
&lt;summary style=&quot;font-size: 1.2em;&quot;&gt;Quality Tags&lt;/summary&gt;
&lt;br&gt;

Quality tags are injected into each card/poster with this structure:

```html
&lt;div class=&quot;cardImageContainer&quot; style=&quot;position: relative;&quot;&gt;
    &lt;div class=&quot;quality-overlay-container&quot;&gt;
        &lt;div class=&quot;quality-overlay-label resolution&quot; data-quality=&quot;4K&quot;&gt;4K&lt;/div&gt;
        &lt;div class=&quot;quality-overlay-label video-codec&quot; data-quality=&quot;HDR&quot;&gt;HDR&lt;/div&gt;
        &lt;div class=&quot;quality-overlay-label audio-codec&quot; data-quality=&quot;ATMOS&quot;&gt;ATMOS&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
```

**Classes &amp; Attributes**

* **`.quality-overlay-container`** ‚Üí Wrapper for all tags (positioned top-left by default).
* **`.quality-overlay-label`** ‚Üí Base class for each tag.
* **Category classes**:
  * `.resolution` ‚Äì resolution tags (`8K`, `4K`, `1080p`, `LOW-RES`, etc.)
  * `.video-codec` ‚Äì video features (`HDR`, `Dolby Vision`, etc.)
  * `.audio-codec` ‚Äì audio formats/channels (`ATMOS`, `DTS`, `5.1`, etc.)
* **`data-quality=&quot;...&quot;`** ‚Üí Exact tag text (e.g. `data-quality=&quot;HDR10+&quot;`).

&lt;br&gt;

**Customization Examples**
----------------------


| Element                     | CSS Selector                                     | Example CSS                                                                                                      |
| --------------------------- | ------------------------------------------------ | ---------------------------------------------------------------------------------------------------------------- |
| **All Tags**                | `.quality-overlay-label`                         | `.quality-overlay-label { font-size: 0.8rem !important; padding: 3px 10px !important; }`                         |
| **Tag Container Position**  | `.quality-overlay-container`                     | `.quality-overlay-container { left: auto !important; right: 6px !important; align-items: flex-end !important; }` |
| **Specific Tag (e.g., 4K)** | `.quality-overlay-label[data-quality=&quot;4K&quot;]`      | `.quality-overlay-label[data-quality=&quot;4K&quot;] { background-color: purple !important; }`                             |
| **HDR Tag**                 | `.quality-overlay-label[data-quality=&quot;HDR&quot;]`     | `.quality-overlay-label[data-quality=&quot;HDR&quot;] { border: 2px solid gold !important; }`                              |
| **Low Resolution Tag**      | `.quality-overlay-label[data-quality=&quot;LOW-RES&quot;]` | `.quality-overlay-label[data-quality=&quot;LOW-RES&quot;] { opacity: 0.7 !important; }`                                    |
| **Stack Tags Horizontally** | `.quality-overlay-container`                     | `.quality-overlay-container { flex-direction: row !important; flex-wrap: wrap !important; }`                     |

&lt;br&gt;

**CSS Examples**
---------------------

* **Style all tags**

  ```css
  .quality-overlay-label {
      font-size: 0.8rem !important;
      border-radius: 4px !important;
  }
  ```

* **Target a category**

  ```css
  .quality-overlay-label.resolution { background: blue !important; }
  .quality-overlay-label.audio-codec { background: green !important; }
  ```

* **Target a specific tag**

  ```css
  .quality-overlay-label[data-quality=&quot;HDR&quot;] {
      border: 2px solid gold !important;
  }
  ```

  ```css
  .quality-overlay-label[data-quality=&quot;4K&quot;] {
      background: linear-gradient(45deg, #c0392b, #e74c3c) !important;
      color: white !important;
      order: -1; /* Appear first */
  }
  ```


* **Hide unwanted tags**

  ```css
  /* Hide all low-res */
  .quality-overlay-label[data-quality=&quot;LOW-RES&quot;] { display: none !important; }

    /* Only show resolution tags */
  .quality-overlay-label.video-codec,
  .quality-overlay-label.audio-codec{ display: none !important; }
  ```

&gt; **Note:**
&gt;- Always use `!important` to ensure your custom styles override the defaults.
&gt;- Only the **best resolution** tag per item is shown (e.g. you won‚Äôt see both 4K and 1080p).
&gt;- `LOW-RES` is the fallback for anything below 480p.
&gt;- Tags are sorted automatically with resolution first, then video features, then audio.
&gt;- Position can be controlled via the Enhanced Panel settings under.
&gt;

&lt;/details&gt;

### &lt;a id=&quot;genre-tags-css&quot;&gt;&lt;/a&gt;

&lt;details&gt; &lt;summary style=&quot;font-size: 1.2em;&quot;&gt;Genre Tags&lt;/summary&gt; &lt;br&gt;

Genre tags appear on the top right of posters. By default, they are circular icons that expand on hover to show the genre name.

The HTML structure for the tags is as follows:


```html
&lt;div class=&quot;cardImageContainer&quot;&gt;
    &lt;div class=&quot;genre-overlay-container&quot;&gt;
        &lt;div class=&quot;genre-tag&quot; title=&quot;Action&quot;&gt;
            &lt;span class=&quot;material-icons&quot;&gt;local_fire_department&lt;/span&gt;
            &lt;span class=&quot;genre-text&quot;&gt;Action&lt;/span&gt;
        &lt;/div&gt;
        &lt;/div&gt;
&lt;/div&gt;

```

**Classes**

-   **`.genre-overlay-container`**: The main container for all genre tags on a card.

-   **`.genre-tag`**: The individual tag for a single genre.

-   **`.genre-text`**: The text part of the tag, which is hidden by default.

-   **`.card:hover .genre-tag`**: This selector is used to define the expanded style when a user hovers over the card.

&lt;br&gt;

**Customization Examples**
--------------------------

| Element | CSS Selector | Example CSS |
| --- | --- | --- |
| **All Tags** | `.genre-tag` | `.genre-tag { background-color: #007bff !important; }` |
| **Icon Size** | `.genre-tag .material-icons` | `.genre-tag .material-icons { font-size: 22px !important; }` |
| **Text Style** | `.genre-tag .genre-text` | `.genre-tag .genre-text { font-weight: bold !important; }` |
| **Remove Hover Animation** | `.card:hover .

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>