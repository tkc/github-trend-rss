<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for javascript - JavaScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for javascript.</description>
        <lastBuildDate>Wed, 18 Jun 2025 00:04:33 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[automatisch/automatisch]]></title>
            <link>https://github.com/automatisch/automatisch</link>
            <guid>https://github.com/automatisch/automatisch</guid>
            <pubDate>Wed, 18 Jun 2025 00:04:33 GMT</pubDate>
            <description><![CDATA[The open source Zapier alternative. Build workflow automation without spending time and money.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/automatisch/automatisch">automatisch/automatisch</a></h1>
            <p>The open source Zapier alternative. Build workflow automation without spending time and money.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 9,212</p>
            <p>Forks: 701</p>
            <p>Stars today: 67 stars today</p>
            <h2>README</h2><pre># Automatisch - Open Source Zapier Alternative

![Automatisch - Screenshot](https://user-images.githubusercontent.com/2501931/191562539-e42f6c34-03c7-4dc4-bcf9-7f9473a9c64f.png)

üßê Automatisch is a business automation tool that lets you connect different services like Twitter, Slack, and more to automate your business processes.

üí∏ Automating your workflows doesn&#039;t have to be a difficult or expensive process. You also don&#039;t need any programming knowledge to use Automatisch.

## Advantages

There are other existing solutions in the market, like Zapier and Integromat, so you might be wondering why you should use Automatisch.

‚úÖ One of the main benefits of using Automatisch is that it allows you to store your data on your own servers, which is essential for businesses that handle sensitive user information and cannot risk sharing it with external cloud services. This is especially relevant for industries such as healthcare and finance, as well as for European companies that must adhere to the General Data Protection Regulation (GDPR).

ü§ì Your contributions are vital to the development of Automatisch. As an open-source software, anyone can have an impact on how it is being developed.

üíô No vendor lock-in. If you ever decide that Automatisch is no longer helpful for your business, you can switch to any other provider, which will be easier than switching from the one cloud provider to another since you have all data and flexibility.

## Documentation

The official documentation can be found here: [https://automatisch.io/docs](https://automatisch.io/docs)

## Installation

```bash
# Clone the repository
git clone https://github.com/automatisch/automatisch.git

# Go to the repository folder
cd automatisch

# Start
docker compose up
```

You can use `user@automatisch.io` email address and `sample` password to login to Automatisch. Please do not forget to change your email and password from the settings page.

For other installation types, you can check the [installation](https://automatisch.io/docs/guide/installation) guide.

## Community Links

- [Discord](https://discord.gg/dJSah9CVrC)
- [Twitter](https://twitter.com/automatischio)

## Support

If you have any questions or problems, please visit our GitHub issues page, and we&#039;ll try to help you as soon as possible.

[https://github.com/automatisch/automatisch/issues](https://github.com/automatisch/automatisch/issues)

## License

Automatisch Community Edition (Automatisch CE) is an open-source software with the [AGPL-3.0 license](LICENSE.agpl).

Automatisch Enterprise Edition (Automatisch EE) is a commercial offering with the [Enterprise license](LICENSE.enterprise).

The Automatisch repository contains both AGPL-licensed and Enterprise-licensed files. We maintain a single repository to make development easier.

All files that contain &quot;.ee.&quot; in their name fall under the [Enterprise license](LICENSE.enterprise). All other files fall under the [AGPL-3.0 license](LICENSE.agpl).

See the [LICENSE](LICENSE) file for more information.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[sampotts/plyr]]></title>
            <link>https://github.com/sampotts/plyr</link>
            <guid>https://github.com/sampotts/plyr</guid>
            <pubDate>Wed, 18 Jun 2025 00:04:32 GMT</pubDate>
            <description><![CDATA[A simple HTML5, YouTube and Vimeo player]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/sampotts/plyr">sampotts/plyr</a></h1>
            <p>A simple HTML5, YouTube and Vimeo player</p>
            <p>Language: JavaScript</p>
            <p>Stars: 28,787</p>
            <p>Forks: 3,080</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre>| üéâ  | [Plyr is merging into Vidstack](https://github.com/sampotts/plyr/issues/2408) | üéâ  |
| :-: | :---------------------------------------------------------------------------: | :-- |

Plyr is a simple, lightweight, accessible and customizable HTML5, YouTube and Vimeo media player that supports [_modern_](#browser-support) browsers.

[Checkout the demo](https://plyr.io) - [Donate](#donate) - [Slack](https://bit.ly/plyr--chat)

[![npm version](https://badge.fury.io/js/plyr.svg)](https://badge.fury.io/js/plyr) [![Gitpod Ready-to-Code](https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod)](https://gitpod.io/#https://github.com/sampotts/plyr) [![Financial Contributors on Open Collective](https://opencollective.com/plyr/all/badge.svg?label=financial+contributors)](https://opencollective.com/plyr)

[![Screenshot of Plyr](https://cdn.plyr.io/static/screenshot.webp)](https://plyr.io)

# Features

- üìº **HTML Video &amp; Audio, YouTube &amp; Vimeo** - support for the major formats
- üí™ **Accessible** - full support for VTT captions and screen readers
- üîß **[Customizable](#html)** - make the player look how you want with the markup you want
- üòé **Clean HTML** - uses the _right_ elements. `&lt;input type=&quot;range&quot;&gt;` for volume and `&lt;progress&gt;` for progress and well, `&lt;button&gt;`s for buttons. There&#039;s no
  `&lt;span&gt;` or `&lt;a href=&quot;#&quot;&gt;` button hacks
- üì± **Responsive** - works with any screen size
- üíµ **[Monetization](#ads)** - make money from your videos
- üìπ **[Streaming](#demos)** - support for hls.js, Shaka and dash.js streaming playback
- üéõ **[API](#api)** - toggle playback, volume, seeking, and more through a standardized API
- üé§ **[Events](#events)** - no messing around with Vimeo and YouTube APIs, all events are standardized across formats
- üîé **[Fullscreen](#fullscreen)** - supports native fullscreen with fallback to &quot;full window&quot; modes
- ‚å®Ô∏è **[Shortcuts](#shortcuts)** - supports keyboard shortcuts
- üñ• **Picture-in-Picture** - supports picture-in-picture mode
- üì± **Playsinline** - supports the `playsinline` attribute
- üèé **Speed controls** - adjust speed on the fly
- üìñ **Multiple captions** - support for multiple caption tracks
- üåé **i18n support** - support for internationalization of controls
- üëå **[Preview thumbnails](#preview-thumbnails)** - support for displaying preview thumbnails
- ü§ü **No frameworks** - written in &quot;vanilla&quot; ES6 JavaScript, no jQuery required
- üíÅ‚Äç‚ôÄÔ∏è **Sass** - to include in your build processes

## Demos

You can try Plyr in Codepen using our minimal templates: [HTML5 video](https://codepen.io/pen?template=bKeqpr), [HTML5 audio](https://codepen.io/pen?template=rKLywR), [YouTube](https://codepen.io/pen?template=GGqbbJ), [Vimeo](https://codepen.io/pen?template=bKeXNq). For Streaming we also have example integrations with: [Dash.js](https://codepen.io/pen?template=GRoogML), [Hls.js](https://codepen.io/pen?template=oyLKQb) and [Shaka Player](https://codepen.io/pen?template=ZRpzZO)

# Quick setup

## HTML

Plyr extends upon the standard [HTML5 media element](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement) markup so that&#039;s all you need for those types.

### HTML5 Video

```html
&lt;video id=&quot;player&quot; playsinline controls data-poster=&quot;/path/to/poster.jpg&quot;&gt;
  &lt;source src=&quot;/path/to/video.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;source src=&quot;/path/to/video.webm&quot; type=&quot;video/webm&quot; /&gt;

  &lt;!-- Captions are optional --&gt;
  &lt;track kind=&quot;captions&quot; label=&quot;English captions&quot; src=&quot;/path/to/captions.vtt&quot; srclang=&quot;en&quot; default /&gt;
&lt;/video&gt;
```

**Note**: The poster image should be specified using `data-poster`. This is to prevent it [being downloaded twice](https://github.com/sampotts/plyr/issues/1531). If you&#039;re sure the image will be cached, you can still use the `poster` attribute for true progressive enhancement.

### HTML5 Audio

```html
&lt;audio id=&quot;player&quot; controls&gt;
  &lt;source src=&quot;/path/to/audio.mp3&quot; type=&quot;audio/mp3&quot; /&gt;
  &lt;source src=&quot;/path/to/audio.ogg&quot; type=&quot;audio/ogg&quot; /&gt;
&lt;/audio&gt;
```

For YouTube and Vimeo players, Plyr uses progressive enhancement to enhance the default `&lt;iframe&gt;` embeds. Below are some examples. The `plyr__video-embed` classname will make the embed responsive. You can add the `autoplay`, `loop`, `hl` (YouTube only) and `playsinline` (YouTube only) query parameters to the URL and they will be set as config options automatically. For YouTube, the `origin` should be updated to reflect the domain you&#039;re hosting the embed on, or you can opt to omit it.

### YouTube

We recommend [progressive enhancement](https://www.smashingmagazine.com/2009/04/progressive-enhancement-what-it-is-and-how-to-use-it/) with the embedded players. You can elect to use an `&lt;iframe&gt;` as the source element (which Plyr will progressively enhance) or a bog standard `&lt;div&gt;` with two essential data attributes - `data-plyr-provider` and `data-plyr-embed-id`.

```html
&lt;div class=&quot;plyr__video-embed&quot; id=&quot;player&quot;&gt;
  &lt;iframe
    src=&quot;https://www.youtube.com/embed/bTqVqk7FSmY?origin=https://plyr.io&amp;amp;iv_load_policy=3&amp;amp;modestbranding=1&amp;amp;playsinline=1&amp;amp;showinfo=0&amp;amp;rel=0&amp;amp;enablejsapi=1&quot;
    allowfullscreen
    allowtransparency
    allow=&quot;autoplay&quot;
  &gt;&lt;/iframe&gt;
&lt;/div&gt;
```

_Note_: The `plyr__video-embed` classname will make the player a responsive 16:9 (most common) iframe embed. When plyr itself kicks in, your custom `ratio` config option will be used.

Or the `&lt;div&gt;` non progressively enhanced method:

```html
&lt;div id=&quot;player&quot; data-plyr-provider=&quot;youtube&quot; data-plyr-embed-id=&quot;bTqVqk7FSmY&quot;&gt;&lt;/div&gt;
```

_Note_: The `data-plyr-embed-id` can either be the video ID or URL for the media.

### Vimeo

Much the same as YouTube above.

```html
&lt;div class=&quot;plyr__video-embed&quot; id=&quot;player&quot;&gt;
  &lt;iframe
    src=&quot;https://player.vimeo.com/video/76979871?loop=false&amp;amp;byline=false&amp;amp;portrait=false&amp;amp;title=false&amp;amp;speed=true&amp;amp;transparent=0&amp;amp;gesture=media&quot;
    allowfullscreen
    allowtransparency
    allow=&quot;autoplay&quot;
  &gt;&lt;/iframe&gt;
&lt;/div&gt;
```

Or the `&lt;div&gt;` non progressively enhanced method:

```html
&lt;div id=&quot;player&quot; data-plyr-provider=&quot;vimeo&quot; data-plyr-embed-id=&quot;76979871&quot;&gt;&lt;/div&gt;
```

## JavaScript

You can use Plyr as an ES6 module as follows:

```js
import Plyr from &#039;plyr&#039;;

const player = new Plyr(&#039;#player&#039;);
```

Alternatively you can include the `plyr.js` script before the closing `&lt;/body&gt;` tag and then in your JS create a new instance of Plyr as below.

```html
&lt;script src=&quot;path/to/plyr.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  const player = new Plyr(&#039;#player&#039;);
&lt;/script&gt;
```

See [initialising](#initializing) for more information on advanced setups.

You can use our CDN (provided by [Cloudflare](https://www.cloudflare.com/)) for the JavaScript. There&#039;s 2 versions; one with and one without [polyfills](#polyfills). My recommendation would be to manage polyfills separately as part of your application but to make life easier you can use the polyfilled build.

```html
&lt;script src=&quot;https://cdn.plyr.io/3.7.8/plyr.js&quot;&gt;&lt;/script&gt;
```

...or...

```html
&lt;script src=&quot;https://cdn.plyr.io/3.7.8/plyr.polyfilled.js&quot;&gt;&lt;/script&gt;
```

## CSS

Include the `plyr.css` stylesheet into your `&lt;head&gt;`.

```html
&lt;link rel=&quot;stylesheet&quot; href=&quot;path/to/plyr.css&quot; /&gt;
```

If you want to use our CDN (provided by [Cloudflare](https://www.cloudflare.com/)) for the default CSS, you can use the following:

```html
&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.plyr.io/3.7.8/plyr.css&quot; /&gt;
```

## SVG Sprite

The SVG sprite is loaded automatically from our CDN (provided by [Cloudflare](https://www.cloudflare.com/)). To change this, see the [options](#options) below. For
reference, the CDN hosted SVG sprite can be found at `https://cdn.plyr.io/3.7.8/plyr.svg`.

### Self hosting

If you don&#039;t want to create a build system to include Plyr as an npm module, you can use the pre-built files. You have a few options:

- Download the files from the CDN links above, they&#039;re already minified.
- Download the files from [unpkg](https://unpkg.com/browse/plyr/dist/) or similar services.
- Build the project yourself using `npm i &amp;&amp; npm run build`, which installs the dependencies and spits out a build to `dist`.

# Ads

Plyr has partnered up with [vi.ai](https://vi.ai/publisher-video-monetization/?aid=plyrio) to offer monetization options for your videos. Getting setup is easy:

- [Sign up for a vi.ai account](https://vi.ai/publisher-video-monetization/?aid=plyrio)
- Grab your publisher ID from the code snippet
- Enable ads in the [config options](#options) and enter your publisher ID

Any questions regarding the ads can be sent straight to vi.ai and any issues with rendering raised through GitHub issues.

If you do not wish to use Vi, you can set your own `ads.tagUrl` [option](#options).

# Advanced

## Customizing the CSS

If you want to change any design tokens used for the rendering of the player, you can do so using [CSS Custom Properties](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties).

Here&#039;s a list of the properties and what they are used for:

| Name                                           | Description                                                                                             | Default / Fallback                                                    |
| ---------------------------------------------- | ------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------- |
| `--plyr-color-main`                            | The primary UI color.                                                                                   | ![#f03c15](https://place-hold.it/15/00b3ff/000000?text=+) `#00b3ff`   |
| `--plyr-video-background`                      | The background color of video and poster wrappers for using alpha channel videos and poster images.     | `rgba(0, 0, 0, 1)`                                                    |
| `--plyr-focus-visible-color`                   | The color used for the focus styles when an element is `:focus-visible` (keyboard focused).             | `--plyr-color-main`                                                   |
| `--plyr-badge-background`                      | The background color for badges in the menu.                                                            | ![#4a5464](https://place-hold.it/15/4a5464/000000?text=+) `#4a5464`   |
| `--plyr-badge-text-color`                      | The text color for badges.                                                                              | ![#ffffff](https://place-hold.it/15/ffffff/000000?text=+) `#ffffff`   |
| `--plyr-badge-border-radius`                   | The border radius used for badges.                                                                      | `2px`                                                                 |
| `--plyr-captions-background`                   | The color for the background of captions.                                                               | `rgba(0, 0, 0, 0.8)`                                                  |
| `--plyr-captions-text-color`                   | The color used for the captions text.                                                                   | ![#ffffff](https://place-hold.it/15/ffffff/000000?text=+) `#ffffff`   |
| `--plyr-control-icon-size`                     | The size of the icons used in the controls.                                                             | `18px`                                                                |
| `--plyr-control-spacing`                       | The space between controls (sometimes used in a multiple - e.g. `10px / 2 = 5px`).                      | `10px`                                                                |
| `--plyr-control-padding`                       | The padding inside controls.                                                                            | `--plyr-control-spacing * 0.7` (`7px`)                                |
| `--plyr-control-radius`                        | The border radius used on controls.                                                                     | `3px`                                                                 |
| `--plyr-control-toggle-checked-background`     | The background color used for checked menu items.                                                       | `--plyr-color-main`                                                   |
| `--plyr-video-controls-background`             | The background for the video controls.                                                                  | `linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.75))`              |
| `--plyr-video-control-color`                   | The text/icon color for video controls.                                                                 | ![#ffffff](https://place-hold.it/15/ffffff/000000?text=+) `#ffffff`   |
| `--plyr-video-control-color-hover`             | The text/icon color used when video controls are `:hover`, `:focus` and `:focus-visible` (equivalent).  | ![#ffffff](https://place-hold.it/15/ffffff/000000?text=+) `#ffffff`   |
| `--plyr-video-control-background-hover`        | The background color used when video controls are `:hover`, `:focus` and `:focus-visible` (equivalent). | `--plyr-color-main`                                                   |
| `--plyr-audio-controls-background`             | The background for the audio controls.                                                                  | ![#ffffff](https://place-hold.it/15/ffffff/000000?text=+) `#ffffff`   |
| `--plyr-audio-control-color`                   | The text/icon color for audio controls.                                                                 | ![#4a5464](https://place-hold.it/15/4a5464/000000?text=+) `#4a5464`   |
| `--plyr-audio-control-color-hover`             | The text/icon color used when audio controls are `:hover`, `:focus` and `:focus-visible` (equivalent).  | ![#ffffff](https://place-hold.it/15/ffffff/000000?text=+) `#ffffff`   |
| `--plyr-audio-control-background-hover`        | The background color used when video controls are `:hover`, `:focus` and `:focus-visible` (equivalent). | `--plyr-color-main`                                                   |
| `--plyr-menu-background`                       | The background color for menus.                                                                         | `rgba(255, 255, 255, 0.9)`                                            |
| `--plyr-menu-color`                            | The text/icon color for menu items.                                                                     | ![#4a5464](https://place-hold.it/15/4a5464/000000?text=+) `#4a5464`   |
| `--plyr-menu-shadow`                           | The shadow used on menus.                                                                               | `0 1px 2px rgba(0, 0, 0, 0.15)`                                       |
| `--plyr-menu-radius`                           | The border radius on the menu.                                                                          | `4px`                                                                 |
| `--plyr-menu-arrow-size`                       | The size of the arrow on the bottom of the menu.                                                        | `6px`                                                                 |
| `--plyr-menu-item-arrow-color`                 | The color of the arrows in the menu.                                                                    | ![#728197](https://place-hold.it/15/728197/000000?text=+) `#728197`   |
| `--plyr-menu-item-arrow-size`                  | The size of the arrows in the menu.                                                                     | `4px`                                                                 |
| `--plyr-menu-border-color`                     | The border color for the bottom of the back button in the top of the sub menu pages.                    | ![#dcdfe5](https://place-hold.it/15/dcdfe5/000000?text=+) `#dcdfe5`   |
| `--plyr-menu-border-shadow-color`              | The shadow below the border of the back button in the top of the sub menu pages.                        | ![#ffffff](https://place-hold.it/15/ffffff/000000?text=+) `#ffffff`   |
| `--plyr-progress-loading-size`                 | The size of the stripes in the loading state in the scrubber.                                           | `25px`                                                                |
| `--plyr-progress-loading-background`           | The background color on the loading state in the scrubber.                                              | `rgba(35, 40, 47, 0.6)`                                               |
| `--plyr-video-progress-buffered-background`    | The fill color for the buffer indication in the scrubber for video.                                     | `rgba(255, 255, 255, 0.25)`                                           |
| `--plyr-audio-progress-buffered-background`    | The fill color for the buffer indication in the scrubber for audio.                                     | `rgba(193, 200, 209, 0.6)`                                            |
| `--plyr-range-thumb-height`                    | The height of the scrubber handle/thumb.                                                                | `13px`                                                                |
| `--plyr-range-thumb-background`                | The background of the scrubber handle/thumb.                                                            | ![#ffffff](https://place-hold.it/15/ffffff/000000?text=+) `#ffffff`   |
| `--plyr-range-thumb-shadow`                    | The shadow of the scrubber handle/thumb.                                                                | `0 1px 1px rgba(215, 26, 18, 0.15), 0 0 0 1px rgba(215, 26, 18, 0.2)` |
| `--plyr-range-thumb-active-shadow-width`       | The width of the shadow when the scrubber handle/thumb is `:active` (pressed).                          | `3px`                                                                 |
| `--plyr-range-track-height`                    | The height of the scrubber/progress track.                                                              | `5px`                                                                 |
| `--plyr-range-fill-background`                 | The fill color of the scrubber/progress.                                                                | `--plyr-color-main`                                                   |
| `--plyr-video-range-track-background`          | The background of the scrubber/progress.                                                                | `--plyr-video-progress-buffered-background`                           |
| `--plyr-video-range-thumb-active-shadow-color` | The color of the shadow when the video scrubber handle/thumb is `:active` (pressed).                    | `rgba(255, 255, 255, 0.5)`                                            |
| `--plyr-audio-range-track-background`          | The background of the scrubber/progress.                                                                | `--plyr-video-progress-buffered-background`                           |
| `--plyr-audio-range-thumb-active-shadow-color` | The color of the shadow when the audio scrubber handle/thumb is `:active` (pressed).                    | `rgba(215, 26, 18, 0.1)`                                              |
| `--plyr-tooltip-background`                    | The background color for tooltips.                                                                      | `rgba(255, 255, 255, 0.9)`                                            |
| `--plyr-tooltip-color`                         | The text color for tooltips.                                                                            | ![#4a5464](https://place-hold.it/15/4a5464/000000?text=+) `#4a5464`   |
| `--plyr-tooltip-padding

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[ToolJet/ToolJet]]></title>
            <link>https://github.com/ToolJet/ToolJet</link>
            <guid>https://github.com/ToolJet/ToolJet</guid>
            <pubDate>Wed, 18 Jun 2025 00:04:31 GMT</pubDate>
            <description><![CDATA[Low-code platform for building business applications. Connect to databases, cloud storages, GraphQL, API endpoints, Airtable, Google sheets, OpenAI, etc and build apps using drag and drop application builder. Built using JavaScript/TypeScript. üöÄ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ToolJet/ToolJet">ToolJet/ToolJet</a></h1>
            <p>Low-code platform for building business applications. Connect to databases, cloud storages, GraphQL, API endpoints, Airtable, Google sheets, OpenAI, etc and build apps using drag and drop application builder. Built using JavaScript/TypeScript. üöÄ</p>
            <p>Language: JavaScript</p>
            <p>Stars: 35,868</p>
            <p>Forks: 4,647</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>ToolJet is an **open-source low-code framework** to build and deploy internal tools with minimal engineering effort. ToolJet&#039;s drag-and-drop frontend builder allows you to create complex, responsive frontends within minutes. Additionally, you can integrate various data sources, including databases like PostgreSQL, MongoDB, and Elasticsearch; API endpoints with OpenAPI spec and OAuth2 support; SaaS tools such as Stripe, Slack, Google Sheets, Airtable, and Notion; as well as object storage services like S3, GCS, and Minio, to fetch and write data.

 :star: If you find ToolJet useful, please consider giving us a star on GitHub! Your support helps us continue to innovate and deliver exciting features.

![Docker Cloud Build Status](https://img.shields.io/docker/cloud/build/tooljet/tooljet-ce)
![Number of GitHub contributors](https://img.shields.io/github/contributors/tooljet/tooljet)
[![Number of GitHub issues that are open](https://img.shields.io/github/issues/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet/issues)
[![Number of GitHub stars](https://img.shields.io/github/stars/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet/stargazers)
![Number of GitHub closed issues](https://img.shields.io/github/issues-closed/tooljet/tooljet)
![Number of GitHub pull requests that are open](https://img.shields.io/github/issues-pr-raw/tooljet/tooljet)
![GitHub release; latest by date](https://img.shields.io/github/v/release/tooljet/tooljet)
![GitHub commit activity](https://img.shields.io/github/commit-activity/m/tooljet/tooljet)
[![GitHub license which is AGPL license](https://img.shields.io/github/license/ToolJet/ToolJet)](https://github.com/ToolJet/ToolJet)
[![Follow us on X, formerly Twitter](https://img.shields.io/twitter/follow/ToolJet?style=social)](https://twitter.com/ToolJet)

&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://user-images.githubusercontent.com/7828962/211444352-4d6d2e4a-13c9-4980-9e16-4aed4af9811b.png&quot; alt=&quot;Tooljet dashboard showing inventory and orders&quot;/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://github.com/ToolJet/ToolJet/assets/25361949/0e711f3a-edb7-496b-8833-107de3826933&quot;/&gt;
&lt;/p&gt;

## All features

- **Visual App Builder:** 45+ built-in responsive components, including Tables, Charts, Lists, Forms, and Progress Bars.
- **ToolJet Database:** Built-in no-code database.
- **Multi-Page:** Build an application with multiple pages.
- **Multiplayer editing:** Allows simultaneous app building by multiple developers.
- **50+ data sources:** Integrate with external databases, cloud storage, and APIs.
- **Desktop &amp; mobile:** Customize layout widths to fit various screen sizes.
- **Self-host:** Supports Docker, Kubernetes, AWS EC2, Google Cloud Run, and more.
- **Collaborate:** Add comments anywhere on the canvas and tag your team members.
- **Extend with plugins:** Use our [command-line tool](https://www.npmjs.com/package/@tooljet/cli) to easily bootstrap new connectors.
- **Version control:** Manage multiple application versions with a structured release cycle.
- **Run JS &amp; Python code:** Execute custom JavaScript and Python snippets.
- **Granular access control:** Set permissions at both group and app levels.
- **Low-code:** Use JS code almost anywhere within the builder, such as setting text color based on status with 
`status === &#039;success&#039; ? &#039;green&#039; : &#039;red&#039;`.
- **No-code query editors:** Query Editors are available for all supported data sources.
- **Join and transform data:** Transform query results using JavaScript or Python code.
- **Secure:** All the credentials are securely encrypted using `aes-256-gcm`.
- **Data Privacy:** ToolJet serves solely as a proxy and does not store data.
- **SSO:** Supports multiple Single Sign-On providers.

&lt;hr&gt;

## Quickstart
The easiest way to get started with ToolJet is by creating a [ToolJet Cloud](https://tooljet.ai) account. ToolJet Cloud offers a hosted solution of ToolJet. If you want to self-host ToolJet, kindly proceed to [deployment documentation](https://docs.tooljet.ai/docs/setup/).

### Try using Docker
Want to give ToolJet a quick spin on your local machine? You can run the following command from your terminal to have ToolJet up and running right away.


```bash
docker run \
  --name tooljet \
  --restart unless-stopped \
  -p 80:80 \
  --platform linux/amd64 \
  -v tooljet_data:/var/lib/postgresql/13/main \
  tooljet/try:ee-lts-latest
```

*For users upgrading their ToolJet version, we recommend choosing the LTS version over the latest version. The LTS version ensures stability with production bug fixes, security patches, and performance enhancements.*

## Tutorials and examples

[Time Tracker Application](https://docs.tooljet.ai/docs/#quickstart-guide)&lt;br&gt;
[Build your own CMS using low-code](https://blog.tooljet.ai/build-cms-using-lowcode-and-mongodb/)&lt;br&gt;
[AWS S3 Browser](https://blog.tooljet.ai/build-an-aws-s3-broswer-with-tooljet/)&lt;br&gt;

## Documentation
Documentation is available at https://docs.tooljet.ai.

- [Getting Started](https://docs.tooljet.ai)&lt;br&gt;
- [Data source Reference](https://docs.tooljet.ai/docs/data-sources/airtable/)&lt;br&gt;
- [Component Reference](https://docs.tooljet.ai/docs/widgets/button)

## Self-hosted
You can use ToolJet Cloud for a fully managed solution. If you want to self-host ToolJet, we have guides on deploying ToolJet on Kubernetes, AWS EC2, Docker, and more.

| Provider  | Documentation |
| :------------- | :------------- |
| Digital Ocean | [Link](https://docs.tooljet.ai/docs/setup/digitalocean)  |
| Docker  | [Link](https://docs.tooljet.ai/docs/setup/docker)   |
| AWS EC2 | [Link](https://docs.tooljet.ai/docs/setup/ec2)  |
| AWS ECS | [Link](https://docs.tooljet.ai/docs/setup/ecs)   |
| OpenShift | [Link](https://docs.tooljet.ai/docs/setup/openshift)   |
| Helm | [Link](https://docs.tooljet.ai/docs/setup/helm)   |
| AWS EKS (Kubernetes) | [Link](https://docs.tooljet.ai/docs/setup/kubernetes)   |
| GCP GKE (Kubernetes) | [Link](https://docs.tooljet.ai/docs/setup/kubernetes-gke)   |
| Azure AKS (Kubernetes) | [Link](https://docs.tooljet.ai/docs/setup/kubernetes-aks)   |
| Azure Container | [Link](https://docs.tooljet.ai/docs/setup/azure-container)   |
| Google Cloud Run  | [Link](https://docs.tooljet.ai/docs/setup/google-cloud-run)   |
| Deploying ToolJet client  | [Link](https://docs.tooljet.ai/docs/setup/client)   |
| Deploying ToolJet on a Subpath  | [Link](https://docs.tooljet.ai/docs/setup/tooljet-subpath/)   |

## Marketplace 
ToolJet can now be found on both AWS and Azure Marketplaces, making it simpler than ever to access and deploy our app-building platform.

Find ToolJet on AWS Marketplace [here](https://aws.amazon.com/marketplace/pp/prodview-fxjto27jkpqfg?sr=0-1&amp;ref_=beagle&amp;applicationId=AWSMPContessa) and explore seamless integration on Azure Marketplace [here](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/tooljetsolutioninc1679496832216.tooljet?tab=Overview).

## Community support
For general help using ToolJet, please refer to the official [documentation](https://docs.tooljet.ai/docs/). For additional help, you can use one of these channels to ask a question:

- [Slack](https://tooljet.ai/slack) - Discussions with the community and the team.
- [GitHub](https://github.com/ToolJet/ToolJet/issues) - For bug reports and feature requests.
- [ùïè (Twitter)](https://twitter.com/ToolJet) - Get the product updates quickly.

## Roadmap
Check out our [roadmap](https://github.com/orgs/ToolJet/projects/15) to stay updated on recently released features and learn about what&#039;s coming next.

## Branching model
We use the git-flow branching model. The base branch is `develop`. If you are looking for a stable version, please use the main branch or tags labeled as v1.x.x.

## Contributing
Kindly read our [Contributing Guide](CONTRIBUTING.md) to familiarize yourself with ToolJet&#039;s development process, how to suggest bug fixes and improvements, and the steps for building and testing your changes. &lt;br&gt;

## Contributors
&lt;a href=&quot;https://github.com/tooljet/tooljet/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=tooljet/tooljet&amp;max=400&amp;columns=20&quot; /&gt;
  &lt;img src=&quot;https://us-central1-tooljet-hub.cloudfunctions.net/github&quot; width=&quot;0&quot; height=&quot;0&quot; /&gt;
&lt;/a&gt;

## License
ToolJet ¬© 2023, ToolJet Solutions Inc - Released under the GNU Affero General Public License v3.0.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[rcourtman/Pulse]]></title>
            <link>https://github.com/rcourtman/Pulse</link>
            <guid>https://github.com/rcourtman/Pulse</guid>
            <pubDate>Wed, 18 Jun 2025 00:04:30 GMT</pubDate>
            <description><![CDATA[A responsive monitoring application for Proxmox VE that displays real-time metrics across multiple nodes]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/rcourtman/Pulse">rcourtman/Pulse</a></h1>
            <p>A responsive monitoring application for Proxmox VE that displays real-time metrics across multiple nodes</p>
            <p>Language: JavaScript</p>
            <p>Stars: 406</p>
            <p>Forks: 13</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre># &lt;img src=&quot;src/public/logos/pulse-logo-256x256.png&quot; alt=&quot;Pulse Logo&quot; width=&quot;32&quot; height=&quot;32&quot; style=&quot;vertical-align: middle&quot;&gt; Pulse for Proxmox VE

[![GitHub release (latest by date)](https://img.shields.io/github/v/release/rcourtman/Pulse)](https://github.com/rcourtman/Pulse/releases/latest)
[![License](https://img.shields.io/github/license/rcourtman/Pulse)](LICENSE)
[![Docker Pulls](https://img.shields.io/docker/pulls/rcourtman/pulse)](https://hub.docker.com/r/rcourtman/pulse)

A lightweight monitoring application for Proxmox VE that displays real-time status for VMs and containers via a simple web interface.

![Pulse Dashboard](docs/images/01-dashboard.png)

### üì∏ Screenshots

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;Click to view more screenshots&lt;/strong&gt;&lt;/summary&gt;

**Desktop Views:**
&lt;div align=&quot;center&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;&lt;strong&gt;PBS Tab&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;strong&gt;Backups Tab&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;docs/images/02-pbs-view.png&quot; alt=&quot;PBS View&quot; width=&quot;400&quot;/&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;docs/images/03-backups-view.png&quot; alt=&quot;Backups View&quot; width=&quot;400&quot;/&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;&lt;strong&gt;Storage Tab&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;strong&gt;Line Graph Toggle&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;docs/images/04-storage-view.png&quot; alt=&quot;Storage View&quot; width=&quot;400&quot;/&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;docs/images/05-line-graph-toggle.png&quot; alt=&quot;Line Graph Toggle View&quot; width=&quot;400&quot;/&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;

**Mobile Views:**
&lt;div align=&quot;center&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;&lt;strong&gt;Mobile Dashboard&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;strong&gt;Mobile PBS View&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;strong&gt;Mobile Backups View&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;docs/images/06-mobile-dashboard.png&quot; alt=&quot;Mobile Dashboard&quot; width=&quot;250&quot;/&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;docs/images/07-mobile-pbs-view.png&quot; alt=&quot;Mobile PBS View&quot; width=&quot;250&quot;/&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;docs/images/08-mobile-backups-view.png&quot; alt=&quot;Mobile Backups View&quot; width=&quot;250&quot;/&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;/details&gt;

[![ko-fi](https://ko-fi.com/img/githubbutton_sm.svg)](https://ko-fi.com/rcourtman)

## üöÄ Quick Start

Choose your preferred installation method:

### üì¶ **Easiest: Proxmox Community Scripts (Recommended)**
**One-command installation in a new LXC container:**
```bash
bash -c &quot;$(wget -qLO - https://github.com/community-scripts/ProxmoxVE/raw/main/ct/pulse.sh)&quot;
```
This will create a new LXC container and install Pulse automatically. Visit the [Community Scripts page](https://community-scripts.github.io/ProxmoxVE/scripts?id=pulse) for details.

### üê≥ **Docker Compose (Pre-built Image)**
**For existing Docker hosts:**
```bash
mkdir pulse-config &amp;&amp; cd pulse-config
# Create docker-compose.yml (see Docker section)
docker compose up -d
# Configure via web interface at http://localhost:7655
```

### üõ†Ô∏è **Manual LXC Installation**
**For existing LXC containers:**
```bash
curl -sLO https://raw.githubusercontent.com/rcourtman/Pulse/main/scripts/install-pulse.sh
chmod +x install-pulse.sh
sudo ./install-pulse.sh
```

---

## üìã Table of Contents
- [Quick Start](#-quick-start)
- [Prerequisites](#-prerequisites)
- [Configuration](#Ô∏è-configuration)
  - [Environment Variables](#environment-variables)
  - [Alert System Configuration](#alert-system-configuration-optional)
  - [Custom Per-VM/LXC Alert Thresholds](#custom-per-vmlxc-alert-thresholds-optional)
  - [Webhook Notifications](#webhook-notifications-optional)
  - [Email Notifications](#email-notifications-optional)
  - [Creating a Proxmox API Token](#creating-a-proxmox-api-token)
  - [Creating a Proxmox Backup Server API Token](#creating-a-proxmox-backup-server-api-token)
  - [Required Permissions](#required-permissions)
- [Deployment Options](#-deployment-options)
  - [Proxmox Community Scripts](#proxmox-community-scripts-automated-lxc)
  - [Docker Compose](#docker-compose-recommended-for-existing-hosts)
  - [Manual LXC Installation](#manual-lxc-installation)
  - [Development Setup](#development-setup-docker-compose)
  - [Node.js (Development)](#Ô∏è-running-the-application-nodejs-development)
- [Features](#-features)
- [System Requirements](#-system-requirements)
- [Updating Pulse](#-updating-pulse)
- [Contributing](#-contributing)
- [Privacy](#-privacy)
- [License](#-license)
- [Trademark Notice](#trademark-notice)
- [Support](#-support)
- [Troubleshooting](#-troubleshooting)
  - [Quick Fixes](#-quick-fixes)
  - [Diagnostic Tool](#diagnostic-tool)
  - [Common Issues](#common-issues)
  - [Notification Troubleshooting](#notification-troubleshooting)

## ‚úÖ Prerequisites

Before installing Pulse, ensure you have:

**For Proxmox VE:**
- [ ] Proxmox VE 7.x or 8.x running
- [ ] Admin access to create API tokens
- [ ] Network connectivity between Pulse and Proxmox (ports 8006/8007)

**For Pulse Installation:**
- [ ] **Community Scripts**: Just a Proxmox host (handles everything automatically)
- [ ] **Docker**: Docker &amp; Docker Compose installed
- [ ] **Manual LXC**: Existing Debian/Ubuntu LXC with internet access

---

## üöÄ Deployment Options

### Proxmox Community Scripts (Automated LXC)

**‚ú® Easiest method - fully automated LXC creation and setup:**

```bash
bash -c &quot;$(wget -qLO - https://github.com/community-scripts/ProxmoxVE/raw/main/ct/pulse.sh)&quot;
```

This script will:
- Create a new LXC container automatically
- Install all dependencies (Node.js, npm, etc.)
- Download and set up Pulse
- Set up systemd service

**After installation:** Access Pulse at `http://&lt;lxc-ip&gt;:7655` and configure via the web interface

Visit the [Community Scripts page](https://community-scripts.github.io/ProxmoxVE/scripts?id=pulse) for more details.

---

### Docker Compose (Recommended for Existing Hosts)

**For existing Docker hosts - uses pre-built image:**

**Prerequisites:**
- Docker ([Install Docker](https://docs.docker.com/engine/install/))
- Docker Compose ([Install Docker Compose](https://docs.docker.com/compose/install/))

**Steps:**

1.  **Create a Directory:** Make a directory for your Docker configuration files:
    ```bash
    mkdir pulse-config
    cd pulse-config
    ```
2.  **Create `docker-compose.yml` file:** Create a file named `docker-compose.yml` in this directory with the following content:
    ```yaml
    # docker-compose.yml
    services:
      pulse-server:
        image: rcourtman/pulse:latest # Pulls the latest pre-built image
        container_name: pulse
        restart: unless-stopped
        ports:
          # Map host port 7655 to container port 7655
          # Change the left side (e.g., &quot;8081:7655&quot;) if 7655 is busy on your host
          - &quot;7655:7655&quot;
        volumes:
          # Persistent volume for configuration data
          # Configuration persists across container updates
          - pulse_config:/usr/src/app/config

    # Define persistent volumes
    volumes:
      pulse_config:
        driver: local
    ```
3.  **Run:** Start the container:
    ```bash
    docker compose up -d
    ```
4.  **Access and Configure:** Open your browser to `http://&lt;your-docker-host-ip&gt;:7655` and configure through the web interface.

---

### Manual LXC Installation

**For existing Debian/Ubuntu LXC containers:**

**Prerequisites:**
- A running Proxmox VE host
- An existing Debian or Ubuntu LXC container with network access to Proxmox
    - *Tip: Use [Community Scripts](https://community-scripts.github.io/ProxmoxVE/scripts?id=debian) to easily create one: `bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/community-scripts/ProxmoxVE/main/ct/debian.sh)&quot;`*

**Steps:**

1.  **Access LXC Console:** Log in to your LXC container (usually as `root`).
2.  **Download and Run Script:**
    ```bash
    # Ensure you are in a suitable directory, like /root or /tmp
    curl -sLO https://raw.githubusercontent.com/rcourtman/Pulse/main/scripts/install-pulse.sh
    chmod +x install-pulse.sh
    ./install-pulse.sh
    ```
3.  **Follow Prompts:** The script guides you through:
    *   Installing dependencies (`git`, `curl`, `nodejs`, `npm`, `sudo`).
    *   Setting up Pulse as a `systemd` service (`pulse-monitor.service`).
    *   Optionally enabling automatic updates via cron.
4.  **Access and Configure:** The script will display the URL (e.g., `http://&lt;LXC-IP-ADDRESS&gt;:7655`). Open this URL and configure via the web interface.

For update instructions, see the [Updating Pulse](#-updating-pulse) section.

---

### Development Setup (Docker Compose)

Use this method if you have cloned the repository and want to build and run the application from the local source code.

1.  **Get Files:** Clone the repository (`git clone https://github.com/rcourtman/Pulse.git &amp;&amp; cd Pulse`)
2.  **Run:** `docker compose up --build -d` (The included `docker-compose.yml` uses the `build:` context by default).
3.  **Access and Configure:** Open your browser to `http://localhost:7655` (or your host IP if Docker runs remotely) and configure via the web interface.

## üõ†Ô∏è Configuration

Pulse features a comprehensive web-based configuration system accessible through the settings menu. No manual file editing required!

### Web Interface Configuration (Recommended)

**First-time Setup:**
- Access Pulse at `http://your-host:7655`
- The settings modal will automatically open for initial configuration
- Configure all your Proxmox VE and PBS servers through the intuitive web interface
- Test connections with built-in connectivity verification
- Save and reload configuration without restarting the application

**Ongoing Management:**
- Click the settings icon (‚öôÔ∏è) in the top-right corner anytime
- Add/modify multiple PVE and PBS endpoints
- Configure alert thresholds and service intervals
- All changes are applied immediately

### Environment Variables (Development/Advanced)

**Note:** Most users should use the web-based configuration interface. Environment variables are primarily for development and advanced deployment scenarios.

For development setups or infrastructure-as-code deployments, Pulse can also be configured using environment variables in a `.env` file.

#### Proxmox VE (Primary Environment)

These are the minimum required variables:
-   `PROXMOX_HOST`: URL of your Proxmox server (e.g., `https://192.168.1.10:8006`).
-   `PROXMOX_TOKEN_ID`: Your API Token ID (e.g., `user@pam!tokenid`).
-   `PROXMOX_TOKEN_SECRET`: Your API Token Secret.

Optional variables:
-   `PROXMOX_NODE_NAME`: A display name for this endpoint in the UI (defaults to `PROXMOX_HOST`).
-   `PROXMOX_ALLOW_SELF_SIGNED_CERTS`: Set to `true` if your Proxmox server uses self-signed SSL certificates. Defaults to `false`.
-   `PORT`: Port for the Pulse server to listen on. Defaults to `7655`.
-   `BACKUP_HISTORY_DAYS`: Number of days of backup history to display (defaults to `365` for full year calendar view).
-   *(Username/Password fallback exists but API Token is strongly recommended)*

#### Alert System Configuration (Optional)

Pulse includes a comprehensive alert system that monitors resource usage and system status:

```env
# Alert System Configuration
ALERT_CPU_ENABLED=true
ALERT_MEMORY_ENABLED=true
ALERT_DISK_ENABLED=true
ALERT_DOWN_ENABLED=true

# Alert thresholds (percentages)
ALERT_CPU_THRESHOLD=85
ALERT_MEMORY_THRESHOLD=90
ALERT_DISK_THRESHOLD=95

# Alert durations (milliseconds - how long condition must persist)
ALERT_CPU_DURATION=300000       # 5 minutes
ALERT_MEMORY_DURATION=300000    # 5 minutes  
ALERT_DISK_DURATION=600000      # 10 minutes
ALERT_DOWN_DURATION=60000       # 1 minute
```

Alert features include:
- Real-time notifications with toast messages
- Multi-severity alerts (Critical, Warning, Resolved)
- Duration-based triggering (alerts only fire after conditions persist)
- Automatic resolution when conditions normalize
- Alert history tracking
- Webhook and email notification support
- Alert acknowledgment and escalation

#### Custom Per-VM/LXC Alert Thresholds (Optional)

For advanced monitoring scenarios, Pulse supports custom alert thresholds on a per-VM/LXC basis through the web interface:

**Use Cases:**
- **Storage/NAS VMs**: Set higher memory thresholds (e.g., 95%/99%) for VMs that naturally use high memory for disk caching
- **Application Servers**: Set lower CPU thresholds (e.g., 70%/85%) for performance-critical applications  
- **Development VMs**: Set custom disk thresholds (e.g., 75%/90%) for early storage warnings

**Configuration:**
1. Navigate to **Settings ‚Üí Custom Thresholds** tab
2. Click **&quot;Add Custom Threshold&quot;**
3. Select your VM/LXC from the dropdown
4. Configure custom CPU, Memory, and/or Disk thresholds
5. Save configuration

**Features:**
- **Migration-aware**: Thresholds follow VMs when they migrate between cluster nodes
- **Per-metric control**: Configure only the metrics you need (CPU, Memory, Disk)
- **Visual indicators**: VMs with custom thresholds show a blue &quot;T&quot; badge in the dashboard
- **Fallback behavior**: VMs without custom thresholds use global settings

***Note:** For a Proxmox cluster, you only need to provide connection details for **one** node. Pulse automatically discovers other cluster members.*

#### Webhook Notifications (Optional)

Pulse supports webhook notifications for alerts, compatible with Discord, Slack, and Microsoft Teams:

**Configuration via Web Interface:**
1. Navigate to **Settings ‚Üí Alerts** tab
2. Enable &quot;Webhook Notifications&quot;
3. Enter your webhook URL
4. Click &quot;Test Webhook&quot; to verify connectivity
5. Save configuration

**Webhook URL Examples:**
- **Discord**: `https://discord.com/api/webhooks/YOUR_WEBHOOK_ID/YOUR_WEBHOOK_TOKEN`
- **Slack**: `https://hooks.slack.com/services/YOUR/WEBHOOK/URL`
- **Teams**: `https://outlook.office.com/webhook/YOUR-WEBHOOK-URL`

**Features:**
- Rich embed formatting with color-coded severity levels
- Automatic retry on failure
- Dual payload format supporting multiple platforms
- Real-time alert notifications for:
  - Resource threshold violations (CPU, Memory, Disk)
  - VM/Container availability changes
  - Alert escalations
  - Alert resolutions

#### Email Notifications (Optional)

Configure SMTP email notifications for alerts:

**Configuration via Web Interface:**
1. Navigate to **Settings ‚Üí Alerts** tab
2. Enable &quot;Email Notifications&quot;
3. Configure SMTP settings:
   - **SMTP Host**: Your email server (e.g., `smtp.gmail.com`)
   - **SMTP Port**: Usually 587 for TLS, 465 for SSL, 25 for unencrypted
   - **Username**: Your email address or username
   - **Password**: Your email password (use App Password for Gmail)
   - **From Address**: Sender email address
   - **To Addresses**: Recipient(s), comma-separated for multiple
   - **Use SSL**: Enable for SSL/TLS encryption
4. Click &quot;Test Email&quot; to verify configuration
5. Save settings

**Gmail Configuration Example:**
1. Enable 2-factor authentication on your Google account
2. Generate an App Password: Google Account ‚Üí Security ‚Üí App passwords
3. Use settings:
   - Host: `smtp.gmail.com`
   - Port: `587`
   - Username: Your Gmail address
   - Password: Your App Password (not regular password)
   - Use SSL: Enabled


#### Multiple Proxmox Environments (Optional)

To monitor separate Proxmox environments (e.g., different clusters, sites) in one Pulse instance, add numbered variables:

-   `PROXMOX_HOST_2`, `PROXMOX_TOKEN_ID_2`, `PROXMOX_TOKEN_SECRET_2`
-   `PROXMOX_HOST_3`, `PROXMOX_TOKEN_ID_3`, `PROXMOX_TOKEN_SECRET_3`
-   ...and so on.

Optional numbered variables also exist (e.g., `PROXMOX_ALLOW_SELF_SIGNED_CERTS_2`, `PROXMOX_NODE_NAME_2`).

#### Advanced Configuration Options

For performance tuning and specialized deployments:

```env
# Performance &amp; Retention
BACKUP_HISTORY_DAYS=365          # Backup history retention (default: 365 days)

# Update System Configuration
UPDATE_CHANNEL_PREFERENCE=stable  # Force specific update channel (stable/rc)
UPDATE_TEST_MODE=false            # Enable test mode for update system

# Development Variables
NODE_ENV=development              # Enable development mode features
DEBUG=pulse:*                     # Enable debug logging for specific modules

# Docker Detection (automatically set)
DOCKER_DEPLOYMENT=true            # Automatically detected in Docker environments
```

**Performance Notes:**
- `BACKUP_HISTORY_DAYS` affects calendar heatmap visualization and memory usage
- Lower values improve performance for environments with extensive backup histories
- Debug logging should only be enabled for troubleshooting as it increases log verbosity

#### Proxmox Backup Server (PBS) (Optional)

To monitor PBS instances:

**Primary PBS Instance:**
-   `PBS_HOST`: URL of your PBS server (e.g., `https://192.168.1.11:8007`).
-   `PBS_TOKEN_ID`: Your PBS API Token ID (e.g., `user@pbs!tokenid`). See [Creating a Proxmox Backup Server API Token](#creating-a-proxmox-backup-server-api-token).
-   `PBS_TOKEN_SECRET`: Your PBS API Token Secret.
-   `PBS_NODE_NAME`: **Important!** The internal hostname of your PBS server (e.g., `pbs-server-01`). This is usually required for API token auth because the token might lack permission to auto-discover the node name. See details below.
-   `PBS_ALLOW_SELF_SIGNED_CERTS`: Set to `true` for self-signed certificates. Defaults to `false`.
-   `PBS_PORT`: PBS API port. Defaults to `8007`.

**Additional PBS Instances:**

To monitor multiple PBS instances, add numbered variables, starting with `_2`:

-   `PBS_HOST_2`, `PBS_TOKEN_ID_2`, `PBS_TOKEN_SECRET_2`
-   `PBS_HOST_3`, `PBS_TOKEN_ID_3`, `PBS_TOKEN_SECRET_3`
-   ...and so on.

Optional numbered variables also exist for additional PBS instances (e.g., `PBS_NODE_NAME_2`, `PBS_ALLOW_SELF_SIGNED_CERTS_2`, `PBS_PORT_2`). Each PBS instance, whether primary or additional, requires its respective `PBS_NODE_NAME` or `PBS_NODE_NAME_n` to be set if API token authentication is used and the token cannot automatically discover the node name.

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;Why &lt;code&gt;PBS_NODE_NAME&lt;/code&gt; (or &lt;code&gt;PBS_NODE_NAME_n&lt;/code&gt;) is Required (Click to Expand)&lt;/strong&gt;&lt;/summary&gt;

Pulse needs to query task lists specific to the PBS node (e.g., `/api2/json/nodes/{nodeName}/tasks`). It attempts to discover this node name automatically by querying `/api2/json/nodes`. However, this endpoint is often restricted for API tokens (returning a 403 Forbidden error), even for tokens with high privileges, unless the `Sys.Audit` permission is granted on the root path (`/`).

Therefore, **setting `PBS_NODE_NAME` in your `.env` file is the standard and recommended way** to ensure Pulse can correctly query task endpoints when using API token authentication. If it&#039;s not set and automatic discovery fails due to permissions, Pulse will be unable to fetch task data (backups, verifications, etc.).

**How to find your PBS Node Name:**
1.  **SSH:** Log into your PBS server via SSH and run `hostname`.
2.  **UI:** Log into the PBS web interface. The hostname is typically displayed on the Dashboard under Server Status.

Example: If your PBS connects via `https://minipc-pbs.lan:8007` but its internal hostname is `proxmox-backup-server`, set:
```env
PBS_HOST=https://minipc-pbs.lan:8007
PBS_NODE_NAME=proxmox-backup-server
```
&lt;/details&gt;

### Creating a Proxmox API Token

Using an API token is the recommended authentication method.

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;Steps to Create a PVE API Token (Click to Expand)&lt;/strong&gt;&lt;/summary&gt;

1.  **Log in to the Proxmox VE web interface.**
2.  **Create a dedicated user** (optional but recommended):
    *   Go to `Datacenter` ‚Üí `Permissions` ‚Üí `Users`.
    *   Click `Add`. Enter a `User name` (e.g., &quot;pulse-monitor&quot;), set Realm to `Proxmox VE authentication server` (`pam`), set a password, ensure `Enabled`. Click `Add`.
3.  **Create an API token:**
    *   Go to `Datacenter` ‚Üí `Permissions` ‚Üí `API Tokens`.
    *   Click `Add`.
    *   Select the `User` (e.g., &quot;pulse-monitor@pam&quot;) or `root@pam`.
    *   Enter a `Token ID` (e.g., &quot;pulse&quot;).
    *   Leave `Privilege Separation` checked. Click `Add`.
    *   **Important:** Copy the `Secret` value immediately. It&#039;s shown only once.
4.  **Assign permissions (to User and Token):**
    *   Go 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[frankmcsherry/blog]]></title>
            <link>https://github.com/frankmcsherry/blog</link>
            <guid>https://github.com/frankmcsherry/blog</guid>
            <pubDate>Wed, 18 Jun 2025 00:04:29 GMT</pubDate>
            <description><![CDATA[Some notes on things I find interesting and important.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/frankmcsherry/blog">frankmcsherry/blog</a></h1>
            <p>Some notes on things I find interesting and important.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 2,063</p>
            <p>Forks: 180</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre>I am a researcher and computer scientist. I used to work in San Francisco, then I traveled a bit, and I&#039;m now in NYC starting [Materialize.io](http://materialize.io/).

The following posts are in reverse chronological order: newest posts are first. The content of the oldest posts may no longer be correct (mostly those about pieces of software I&#039;ve worked on, and their state at some time in the past), but they have been retained for posterity (and some humility).

---

| topics | date | title |
|:-------|:-----|:------|
| Materialize | 2024-11-25 | [Understanding Consistency in Materialize](https://github.com/frankmcsherry/blog/blob/master/posts/2024-11-25.md)
| E-Graphs | 2024-10-19 | [Understanding E-Graphs](https://github.com/frankmcsherry/blog/blob/master/posts/2024-10-19.md)
| Columnar, Timely | 2024-10-11 | [Dataflow and Columns and WASM, Oh My!](https://github.com/frankmcsherry/blog/blob/master/posts/2024-10-11.md)
| Columnar | 2024-09-10 | [A Fascinating Diversion into Compression](https://github.com/frankmcsherry/blog/blob/master/posts/2024-09-10.md)
| Columnar | 2024-08-25 | [More serial layout in Rust](https://github.com/frankmcsherry/blog/blob/master/posts/2024-08-25.md)
| Columnar | 2024-08-24 | [A less unsafe serial layout in Rust](https://github.com/frankmcsherry/blog/blob/master/posts/2024-08-24.md)
| Materialize | 2024-08-13 | [Zero-staleness: Like using your primary, but faster](https://github.com/frankmcsherry/blog/blob/master/posts/2024-08-13.md)
| Materialize | 2024-05-19 | [Demonstrating Operational Data with SQL](https://github.com/frankmcsherry/blog/blob/master/posts/2024-05-19.md)
| Materialize | 2024-03-18 | [Computing and Maintaining Weird (Outer) Joins](https://github.com/frankmcsherry/blog/blob/master/posts/2024-03-18.md)
| Materialize | 2024-01-02 | [Materialize and Advent of Code (50/50)](https://github.com/frankmcsherry/blog/blob/master/posts/2024-01-02.md)
| Materialize | 2023-12-20 | [Materialize and Memory](https://github.com/frankmcsherry/blog/blob/master/posts/2023-12-20.md)
| Materialize | 2023-12-19 | [Doing Business with Recursive SQL](https://github.com/frankmcsherry/blog/blob/master/posts/2023-12-19.md)
| Materialize | 2023-10-10 | [Responsiveness and Operational Agility](https://github.com/frankmcsherry/blog/blob/master/posts/2023-10-10.md)
| Materialize | 2023-09-29 | [Freshness and Operational Autonomy](https://github.com/frankmcsherry/blog/blob/master/posts/2023-09-29.md)
| Materialize | 2023-09-19 | [Consistency and Operational Confidence](https://github.com/frankmcsherry/blog/blob/master/posts/2023-09-19.md)
| Materialize | 2023-09-17 | [A Guided Tour of Materialize&#039;s Product Principles](https://github.com/frankmcsherry/blog/blob/master/posts/2023-09-17.md)
| Materialize | 2023-07-21 | [Capturing Change Data Capture (CDC) Data](https://github.com/frankmcsherry/blog/blob/master/posts/2023-07-21.md)
| Materialize | 2023-01-04 | [Advent of Code 2022: In SQL](https://github.com/frankmcsherry/blog/blob/master/posts/2023-01-04.md)
| Materialize | 2022-12-28 | [Reasons for Recursion](https://github.com/frankmcsherry/blog/blob/master/posts/2022-12-28.md)
| Materialize | 2022-12-25 | [Recursion in Materialize](https://github.com/frankmcsherry/blog/blob/master/posts/2022-12-25.md)
| Materialize | 2022-07-06 | [Minesweeping in Materialize](https://github.com/frankmcsherry/blog/blob/master/posts/2022-07-06.md)
| Materialize | 2021-05-14 | [Maintaining Joins using Few Resources](https://github.com/frankmcsherry/blog/blob/master/posts/2021-05-14.md)
| Differential | 2021-04-26 | [Generalizing Linear Operators](https://github.com/frankmcsherry/blog/blob/master/posts/2021-04-26.md)
| Materialize | 2021-02-11 | [Windows enough, and Time](https://github.com/frankmcsherry/blog/blob/master/posts/2021-02-11.md)
| Materialize | 2020-12-29 | [Slicing up Temporal Aggregates in Materialize](https://github.com/frankmcsherry/blog/blob/master/posts/2020-12-29.md)
| Materialize | 2020-11-18 | [Joins in Materialize](https://github.com/frankmcsherry/blog/blob/master/posts/2020-11-18.md)
| Materialize | 2020-09-24 | [Materialize Under the Hood](https://github.com/frankmcsherry/blog/blob/master/posts/2020-09-24.md)
| Materialize | 2020-08-13 | [Lateral Joins and Demand-Driven Queries](https://github.com/frankmcsherry/blog/blob/master/posts/2020-08-13.md)
| Differential | 2020-08-01 | [Change Data Capture (part 1)](https://github.com/frankmcsherry/blog/blob/master/posts/2020-08-01.md)
| Materialize | 2020-04-01 | [Robust Reductions in Materialize](https://github.com/frankmcsherry/blog/blob/master/posts/2020-04-01.md)
| Materialize | 2020-06-19 | [Eventual Consistency isn&#039;t for Streaming](https://github.com/frankmcsherry/blog/blob/master/posts/2020-06-19.md)
| Timely, Differential | 2020-06-09 | [Rust for Data-Intensive Computation](https://github.com/frankmcsherry/blog/blob/master/posts/2020-06-09.md)
| Differential | 2020-06-06 | [Sudoku in Differential Dataflow](https://github.com/frankmcsherry/blog/blob/master/posts/2020-06-06.md)
| Differential | 2020-05-01 | [Managing Memory in Differential Dataflow](https://github.com/frankmcsherry/blog/blob/master/posts/2020-05-01.md)
| Differential | 2020-03-26 | [Upserts in Differential Dataflow](https://github.com/frankmcsherry/blog/blob/master/posts/2020-03-26.md)
| Materialize  | 2020-03-16 | [Materialize on NYC taxi data](https://github.com/frankmcsherry/blog/blob/master/posts/2020-03-16.md)
| Differential  | 2020-02-15 | [Differential Dataflow and Calculus](https://github.com/frankmcsherry/blog/blob/master/posts/2020-02-15.md)
| Datalog, Differential  | 2019-09-06 | [Datalog at SIGMOD and VLDB](https://github.com/frankmcsherry/blog/blob/master/posts/2019-09-06.md)
| Timely | 2019-08-17 | [Tracking progress in timely dataflow](https://github.com/frankmcsherry/blog/blob/master/posts/2019-08-17.md)
| Materialize  | 2019-08-03 | [Debugging dataflows with `materialized`](https://github.com/frankmcsherry/blog/blob/master/posts/2019-08-03.md)
| Differential | 2019-06-13 | [LDBC BI Query 25, developed](https://github.com/frankmcsherry/blog/blob/master/posts/2019-06-13.md)
| Differential | 2019-05-20 | [Programming with time](https://github.com/frankmcsherry/blog/blob/master/posts/2019-05-20.md) |
| Privacy | 2019-04-12 | [Differential privacy and Demographics](https://github.com/frankmcsherry/blog/blob/master/posts/2019-04-12.md) |
| Differential | 2019-02-09 | [Monoids and Graph Processing](https://github.com/frankmcsherry/blog/blob/master/posts/2019-02-09.md) |
| Differential | 2018-12-30 | [Tensorflow in Differential Dataflow](https://github.com/frankmcsherry/blog/blob/master/posts/2018-12-30.md) |
| Differential | 2018-11-20 | [Strings (and beyond) in differential dataflow](https://github.com/frankmcsherry/blog/blob/master/posts/2018-11-20.md) |
| Timely | 2018-09-26 | [Timely Dataflow Architecture](https://github.com/frankmcsherry/blog/blob/master/posts/2018-09-26.md) |
| Timely | 2018-08-18 | [Synchronization via Timely Dataflow](https://github.com/frankmcsherry/blog/blob/master/posts/2018-08-19.md) |
| Datalog, Rust | 2018-05-19 | [A Datalog engine in Rust](https://github.com/frankmcsherry/blog/blob/master/posts/2018-05-19.md) |
| Differential | 2018-05-06 | [A differential dataflow query processor](https://github.com/frankmcsherry/blog/blob/master/posts/2018-05-06.md) |
| Privacy | 2018-03-11 | [Things that count](https://github.com/frankmcsherry/blog/blob/master/posts/2018-03-11.md) |
| Privacy | 2018-02-25 | [Uber&#039;s differential privacy .. probably isn&#039;t](https://github.com/frankmcsherry/blog/blob/master/posts/2018-02-25.md) |
| Differential | 2018-02-19 | [World enough, and timely dataflow](https://github.com/frankmcsherry/blog/blob/master/posts/2018-02-19.md)
| Differential | 2018-02-11 | [Yahoo&#039;s Steaming Benchmark](https://github.com/frankmcsherry/blog/blob/master/posts/2018-02-11.md) |
| Differential | 2017-12-10 | [Advent of Code](https://github.com/frankmcsherry/blog/blob/master/posts/2017-12-10.md) |
| Timely | 2017-11-08 |  [Timely on Kafka](https://github.com/frankmcsherry/blog/blob/master/posts/2017-11-08.md) |
| Privacy | 2017-10-27 | [Deep learnings about differential privacy](https://github.com/frankmcsherry/blog/blob/master/posts/2017-10-27.md) |
| COST, Differential | 2017-10-23 | [COST in the land of differential dataflow](https://github.com/frankmcsherry/blog/blob/master/posts/2017-10-23.md) |
| Privacy | 2017-09-28 | [The Moral Character of Privacy Technology](https://github.com/frankmcsherry/blog/blob/master/posts/2017-09-28.md)
| COST | 2017-09-23 | [COST in the land of databases](https://github.com/frankmcsherry/blog/blob/master/posts/2017-09-23.md) |
| Differential | 2017-09-05 | [Big Data Stream Managers (BDSM)](https://github.com/frankmcsherry/blog/blob/master/posts/2017-09-05.md) |
| Differential | 2017-08-21 | [Live PageRanking](https://github.com/frankmcsherry/blog/blob/master/posts/2017-08-21.md) |
| Timely | 2017-07-27 | [Memory management for big data](https://github.com/frankmcsherry/blog/blob/master/posts/2017-07-27.md) |
| Differential | 2017-07-24 | [Throughput and latency in differential dataflow](https://github.com/frankmcsherry/blog/blob/master/posts/2017-07-24.md) |
| Differential | 2017-05-06 | [Specialization in differential dataflow](https://github.com/frankmcsherry/blog/blob/master/posts/2017-05-06.md) |
| Differential | 2017-05-01 | [Arrangement in differential dataflow](https://github.com/frankmcsherry/blog/blob/master/posts/2017-05-01.md) |
| Differential | 2017-04-24 | [A TPC-H-like evaluation of differential dataflow](https://github.com/frankmcsherry/blog/blob/master/posts/2017-04-24.md) |
| Differential | 2017-03-28 | [Differential dataflow 2017 roadmap](https://github.com/frankmcsherry/blog/blob/master/posts/2017-03-28.md) |
| Differential | 2017-03-22 | [What I&#039;m stuck on](https://github.com/frankmcsherry/blog/blob/master/posts/2017-03-22.md) |
| Differential | 2017-03-01 | [High-resolution timestamps](https://github.com/frankmcsherry/blog/blob/master/posts/2017-03-01.md) |
| Differential | 2017-02-21 | [Modular data organization](https://github.com/frankmcsherry/blog/blob/master/posts/2017-02-21.md) |
| Differential | 2017-02-11 | [Differential dataflow status report](https://github.com/frankmcsherry/blog/blob/master/posts/2017-02-11.md) |
| Privacy | 2017-02-08 | [Two flavors of differential privacy](https://github.com/frankmcsherry/blog/blob/master/posts/2017-02-08.md) |
| Privacy | 2017-01-26 | [Differential privacy as a mutual information constraint](https://github.com/frankmcsherry/blog/blob/master/posts/2017-01-26.md) |
| Timely | 2016-09-17 | [Tracking motifs in evolving graphs](https://github.com/frankmcsherry/blog/blob/master/posts/2016-09-17.md) |
| Privacy | 2016-08-29 | [Differential privacy and correlated data](https://github.com/frankmcsherry/blog/blob/master/posts/2016-08-29.md) |
| Privacy | 2016-08-16 | [Lunchtime for data privacy](https://github.com/frankmcsherry/blog/blob/master/posts/2016-08-16.md) |
| Differential | 2016-08-03 | [Differential Dataflow internals](https://github.com/frankmcsherry/blog/blob/master/posts/2016-08-03.md) |
| Differential | 2016-07-26 | [Differential Dataflow Roadmap](https://github.com/frankmcsherry/blog/blob/master/posts/2016-07-26.md) |
| Differential | 2016-07-17 | [Dataflow as Database](https://github.com/frankmcsherry/blog/blob/master/posts/2016-07-17.md) |
| Datalog, Differential | 2016-06-21 | [Differential Dataflog](https://github.com/frankmcsherry/blog/blob/master/posts/2016-06-21.md) |
| Privacy | 2016-06-14 | [Statistical inference considered harmful](https://github.com/frankmcsherry/blog/blob/master/posts/2016-06-14.md) |
| Privacy | 2016-05-19 | [Differential privacy for dummies, redux](https://github.com/frankmcsherry/blog/blob/master/posts/2016-05-19.md) |
| Differential | 2016-03-27 | [Explaining outputs in modern computations](https://github.com/frankmcsherry/blog/blob/master/posts/2016-03-27.md) |
| Privacy | 2016-02-06 | [Differential privacy: an illustrated primer](https://github.com/frankmcsherry/blog/blob/master/posts/2016-02-06.md) |
| Privacy | 2016-02-03 | [Differential privacy for dummies](https://github.com/frankmcsherry/blog/blob/master/posts/2016-02-03.md) |
| COST | 2015-12-24 | [Graph processing in 2016](https://github.com/frankmcsherry/blog/blob/master/posts/2015-12-24.md) |
| Timely | 2015-12-19 | [Progress tracking in Timely Dataflow](https://github.com/frankmcsherry/blog/blob/master/posts/2015-12-19.md) |
| Differential | 2015-11-27 | [An introduction to Differential Dataflow, part 2](https://github.com/frankmcsherry/blog/blob/master/posts/2015-11-27.md) |
| Differential | 2015-09-29 | [An introduction to Differential Dataflow, part 1](https://github.com/frankmcsherry/blog/blob/master/posts/2015-09-29.md) |
| Timely | 2015-09-21 | [An introduction to Timely Dataflow in Rust, part 3](https://github.com/frankmcsherry/blog/blob/master/posts/2015-09-21.md) |
| Timely | 2015-09-18 | [An introduction to Timely Dataflow in Rust, part 2](https://github.com/frankmcsherry/blog/blob/master/posts/2015-09-18.md) |
| Timely | 2015-09-14 | [An introduction to Timely Dataflow in Rust, part 1](https://github.com/frankmcsherry/blog/blob/master/posts/2015-09-14.md) |
| COST | 2015-08-20 | [Epic Graph Battle of History: Chaos vs Order](https://github.com/frankmcsherry/blog/blob/master/posts/2015-08-20.md) |
| COST | 2015-08-15 | [Sorting out graph processing](https://github.com/frankmcsherry/blog/blob/master/posts/2015-08-15.md) |
| COST, Timely | 2015-07-31 | [The impact of fast networks on graph analytics, part 2.](https://github.com/frankmcsherry/blog/blob/master/posts/2015-07-31.md) |
| COST, Timely | 2015-07-08 | [The impact of fast networks on graph analytics, part 1.](https://github.com/frankmcsherry/blog/blob/master/posts/2015-07-08.md) |
| Differential | 2015-05-12 | [Differential graph computation](https://github.com/frankmcsherry/blog/blob/master/posts/2015-05-12.md) |
| Timely | 2015-05-04 | [Abomonation: terrifying serialization](https://github.com/frankmcsherry/blog/blob/master/posts/2015-05-04.md) |
| Timely | 2015-04-19 | [Data-parallelism in timely dataflow](https://github.com/frankmcsherry/blog/blob/master/posts/2015-04-19.md) |
| Timely | 2015-04-11 | [Worst-case optimal joins, in dataflow](https://github.com/frankmcsherry/blog/blob/master/posts/2015-04-11.md) |
| Differential | 2015-04-07 | [Differential dataflow](https://github.com/frankmcsherry/blog/blob/master/posts/2015-04-07.md) |
| COST | 2015-02-04 | [Bigger data; same laptop](https://github.com/frankmcsherry/blog/blob/master/posts/2015-02-04.md) |
| COST | 2015-01-15 | [Scalability! But at what COST?](https://github.com/frankmcsherry/blog/blob/master/posts/2015-01-15.md) |
| Timely | 2014-12-29 | [Timely dataflow: core concepts](https://github.com/frankmcsherry/blog/blob/master/posts/2014-12-29.md) |
| Timely | 2014-12-27 | [Timely dataflow: reboot](https://github.com/frankmcsherry/blog/blob/master/posts/2014-12-27.md) |
| Rust | 2014-12-16 | [Columnarization in Rust, part 2](https://github.com/frankmcsherry/blog/blob/master/posts/2014-12-16.md) |
| Rust | 2014-12-15 | [Columnarization in Rust](https://github.com/frankmcsherry/blog/blob/master/posts/2014-12-15.md) |
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[louislam/uptime-kuma]]></title>
            <link>https://github.com/louislam/uptime-kuma</link>
            <guid>https://github.com/louislam/uptime-kuma</guid>
            <pubDate>Wed, 18 Jun 2025 00:04:28 GMT</pubDate>
            <description><![CDATA[A fancy self-hosted monitoring tool]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/louislam/uptime-kuma">louislam/uptime-kuma</a></h1>
            <p>A fancy self-hosted monitoring tool</p>
            <p>Language: JavaScript</p>
            <p>Stars: 70,887</p>
            <p>Forks: 6,257</p>
            <p>Stars today: 54 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot; width=&quot;100%&quot;&gt;
    &lt;img src=&quot;./public/icon.svg&quot; width=&quot;128&quot; alt=&quot;&quot; /&gt;
&lt;/div&gt;

# Uptime Kuma

Uptime Kuma is an easy-to-use self-hosted monitoring tool.

&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/louislam/uptime-kuma?style=flat&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/louislam/uptime-kuma&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/v/louislam/uptime-kuma/latest?label=docker%20image%20ver.&quot; /&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/louislam/uptime-kuma&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/louislam/uptime-kuma&quot; /&gt;&lt;/a&gt;  &lt;a target=&quot;_blank&quot; href=&quot;https://opencollective.com/uptime-kuma&quot;&gt;&lt;img src=&quot;https://opencollective.com/uptime-kuma/total/badge.svg?label=Open%20Collective%20Backers&amp;color=brightgreen&quot; /&gt;&lt;/a&gt;
[![GitHub Sponsors](https://img.shields.io/github/sponsors/louislam?label=GitHub%20Sponsors)](https://github.com/sponsors/louislam) &lt;a href=&quot;https://weblate.kuma.pet/projects/uptime-kuma/uptime-kuma/&quot;&gt;
&lt;img src=&quot;https://weblate.kuma.pet/widgets/uptime-kuma/-/svg-badge.svg&quot; alt=&quot;Translation status&quot; /&gt;
&lt;/a&gt;

&lt;img src=&quot;https://user-images.githubusercontent.com/1336778/212262296-e6205815-ad62-488c-83ec-a5b0d0689f7c.jpg&quot; width=&quot;700&quot; alt=&quot;&quot; /&gt;

## ü•î Live Demo

Try it!

Demo Server (Location: Frankfurt - Germany): https://demo.kuma.pet/start-demo

It is a temporary live demo, all data will be deleted after 10 minutes. Sponsored by [Uptime Kuma Sponsors](https://github.com/louislam/uptime-kuma#%EF%B8%8F-sponsors).

## ‚≠ê Features

- Monitoring uptime for HTTP(s) / TCP / HTTP(s) Keyword / HTTP(s) Json Query / Ping / DNS Record / Push / Steam Game Server / Docker Containers
- Fancy, Reactive, Fast UI/UX
- Notifications via Telegram, Discord, Gotify, Slack, Pushover, Email (SMTP), and [90+ notification services, click here for the full list](https://github.com/louislam/uptime-kuma/tree/master/src/components/notifications)
- 20-second intervals
- [Multi Languages](https://github.com/louislam/uptime-kuma/tree/master/src/lang)
- Multiple status pages
- Map status pages to specific domains
- Ping chart
- Certificate info
- Proxy support
- 2FA support

## üîß How to Install

### üê≥ Docker

```bash
docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
```

Uptime Kuma is now running on &lt;http://0.0.0.0:3001&gt;.

&gt; [!WARNING]
&gt; File Systems like **NFS** (Network File System) are **NOT** supported. Please map to a local directory or volume.

&gt; [!NOTE]
&gt; If you want to limit exposure to localhost (without exposing port for other users or to use a [reverse proxy](https://github.com/louislam/uptime-kuma/wiki/Reverse-Proxy)), you can expose the port like this:
&gt; 
&gt; ```bash
&gt; docker run -d --restart=always -p 127.0.0.1:3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
&gt; ```

### üí™üèª Non-Docker

Requirements:

- Platform
  - ‚úÖ Major Linux distros such as Debian, Ubuntu, CentOS, Fedora and ArchLinux etc.
  - ‚úÖ Windows 10 (x64), Windows Server 2012 R2 (x64) or higher
  - ‚ùå FreeBSD / OpenBSD / NetBSD
  - ‚ùå Replit / Heroku
- [Node.js](https://nodejs.org/en/download/) 18 / 20.4
- [npm](https://docs.npmjs.com/cli/) 9
- [Git](https://git-scm.com/downloads)
- [pm2](https://pm2.keymetrics.io/) - For running Uptime Kuma in the background

```bash
git clone https://github.com/louislam/uptime-kuma.git
cd uptime-kuma
npm run setup

# Option 1. Try it
node server/server.js

# (Recommended) Option 2. Run in the background using PM2
# Install PM2 if you don&#039;t have it:
npm install pm2 -g &amp;&amp; pm2 install pm2-logrotate

# Start Server
pm2 start server/server.js --name uptime-kuma
```

Uptime Kuma is now running on http://localhost:3001

More useful PM2 Commands

```bash
# If you want to see the current console output
pm2 monit

# If you want to add it to startup
pm2 save &amp;&amp; pm2 startup
```

### Advanced Installation

If you need more options or need to browse via a reverse proxy, please read:

https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install

## üÜô How to Update

Please read:

https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update

## üÜï What&#039;s Next?

I will assign requests/issues to the next milestone.

https://github.com/louislam/uptime-kuma/milestones

## ‚ù§Ô∏è Sponsors

Thank you so much! (GitHub Sponsors will be updated manually. OpenCollective sponsors will be updated automatically, the list will be cached by GitHub though. It may need some time to be updated)

&lt;img src=&quot;https://uptime.kuma.pet/sponsors?v=6&quot; alt /&gt;

## üñº More Screenshots

Light Mode:

&lt;img src=&quot;https://uptime.kuma.pet/img/light.jpg&quot; width=&quot;512&quot; alt=&quot;&quot; /&gt;

Status Page:

&lt;img src=&quot;https://user-images.githubusercontent.com/1336778/134628766-a3fe0981-0926-4285-ab46-891a21c3e4cb.png&quot; width=&quot;512&quot; alt=&quot;&quot; /&gt;

Settings Page:

&lt;img src=&quot;https://louislam.net/uptimekuma/2.jpg&quot; width=&quot;400&quot; alt=&quot;&quot; /&gt;

Telegram Notification Sample:

&lt;img src=&quot;https://louislam.net/uptimekuma/3.jpg&quot; width=&quot;400&quot; alt=&quot;&quot; /&gt;

## Motivation

- I was looking for a self-hosted monitoring tool like &quot;Uptime Robot&quot;, but it is hard to find a suitable one. One of the closest ones is statping. Unfortunately, it is not stable and no longer maintained.
- Wanted to build a fancy UI.
- Learn Vue 3 and vite.js.
- Show the power of Bootstrap 5.
- Try to use WebSocket with SPA instead of a REST API.
- Deploy my first Docker image to Docker Hub.

If you love this project, please consider giving it a ‚≠ê.

## üó£Ô∏è Discussion / Ask for Help

‚ö†Ô∏è For any general or technical questions, please don&#039;t send me an email, as I am unable to provide support in that manner. I will not respond if you ask questions there.

I recommend using Google, GitHub Issues, or Uptime Kuma&#039;s subreddit for finding answers to your question. If you cannot find the information you need, feel free to ask:

- [GitHub Issues](https://github.com/louislam/uptime-kuma/issues)
- [Subreddit (r/UptimeKuma)](https://www.reddit.com/r/UptimeKuma/)

My Reddit account: [u/louislamlam](https://reddit.com/u/louislamlam)
You can mention me if you ask a question on the subreddit.

## Contributions

### Create Pull Requests

We DO NOT accept all types of pull requests and do not want to waste your time. Please be sure that you have read and follow pull request rules:
[CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma](https://github.com/louislam/uptime-kuma/blob/master/CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma)

### Test Pull Requests

There are a lot of pull requests right now, but I don&#039;t have time to test them all.

If you want to help, you can check this:
https://github.com/louislam/uptime-kuma/wiki/Test-Pull-Requests

### Test Beta Version

Check out the latest beta release here: https://github.com/louislam/uptime-kuma/releases

### Bug Reports / Feature Requests

If you want to report a bug or request a new feature, feel free to open a [new issue](https://github.com/louislam/uptime-kuma/issues).

### Translations

If you want to translate Uptime Kuma into your language, please visit [Weblate Readme](https://github.com/louislam/uptime-kuma/blob/master/src/lang/README.md).

### Spelling &amp; Grammar

Feel free to correct the grammar in the documentation or code.
My mother language is not English and my grammar is not that great.


</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[bia-pain-bache/BPB-Worker-Panel]]></title>
            <link>https://github.com/bia-pain-bache/BPB-Worker-Panel</link>
            <guid>https://github.com/bia-pain-bache/BPB-Worker-Panel</guid>
            <pubDate>Wed, 18 Jun 2025 00:04:27 GMT</pubDate>
            <description><![CDATA[A GUI Panel providing Worker subscriptions for VLESS, Trojan and Warp configs alongside chain proxies, offering full DNS, clean IP, Fragment, Warp, Warp pro and routing settings for cross-platform clients using Amnezia, Wireguard, Sing-box, Clash/Mihomo and Xray cores.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/bia-pain-bache/BPB-Worker-Panel">bia-pain-bache/BPB-Worker-Panel</a></h1>
            <p>A GUI Panel providing Worker subscriptions for VLESS, Trojan and Warp configs alongside chain proxies, offering full DNS, clean IP, Fragment, Warp, Warp pro and routing settings for cross-platform clients using Amnezia, Wireguard, Sing-box, Clash/Mihomo and Xray cores.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 7,802</p>
            <p>Forks: 30,983</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;BPB Panel üí¶&lt;/h1&gt;

### üåè Readme in [Farsi](README_fa.md)

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;docs/assets/images/panel-overview.jpg&quot;&gt;
&lt;/p&gt;
&lt;br&gt;

## Introduction

This project is aimed to provide a user panel to access FREE, SECURE and PRIVATE **VLESS**, **Trojan** and **Warp** configs, It ensures connectivity even when domains or Warp services are blocked by ISPs, offering two deployment options:

- **Workers** deployment
- **Pages** deployment

üåü If you found **BPB Panel** valuable, Your donations make all the difference üåü

### USDT (BEP20)

```text
0x111EFF917E7cf4b0BfC99Edffd8F1AbC2b23d158
```

## Features

1. **Free and Private**: No costs involved and the server is private.
2. **Intuitive Panel:** Streamlined for effortless navigation, configuration and use.
3. **Versatile Protocols:** Provides VLESS, Trojan and Wireguard (Warp) protocols.
4. **Warp Pro configs:** Optimized Warp for crucial circumstances.
5. **Fragment support:** Supports Fragment functionality for crucial network situations.
6. **Comprehensive Routing Rules:** Bypassing Iran/China/Russia and LAN, Blocking QUIC, Porn, Ads, Malwares, Phishing and also bypassing sanctions.
7. **Chain Proxy:** Capable of adding a chain proxy to fix IP.
8. **Broad client compatibility:** Offers subscription links for Xray, Sing-box and Clash-Mihomo core clients.
9. **Password-protected panel:** Provides secure and private panel with password protection.
10. **Fully customizable:** Supports setting up clean IP-domains, Proxy IPs, DNS servers, choosing ports and protocols, Warp endpoints and more.

## Limitations

1. **UDP transport**: VLESS and Trojan protocols on workers do not handle **UDP** properly, so it is disabled by default (affecting features like Telegram video calls), UDP DNS is also unsupported. DoH is enabled by default for enhanced security.
2. **Request limit**: each worker supports 100K requests per day for VLESS and Trojan, suitable for 2-3 users. You can use custom personal domains to bypass limitation on VLESS/Trojan (Workers deployment) or opt for limitless Warp configurations.

## Getting started

- [Installation methods](https://bia-pain-bache.github.io/BPB-Worker-Panel/installation/wizard/)
- [Configuration](https://bia-pain-bache.github.io/BPB-Worker-Panel/configuration/)
- [How to use](https://bia-pain-bache.github.io/BPB-Worker-Panel/usage/)
- [FAQ](https://bia-pain-bache.github.io/BPB-Worker-Panel/faq/)

## Supported Clients

|       Client        |     Version      |      Fragment      |      Warp Pro      |
| :-----------------: | :--------------: | :----------------: | :----------------: |
|     **v2rayNG**     | 1.10.2 or higher | :heavy_check_mark: | :heavy_check_mark: |
|     **v2rayN**      | 7.12.5 or higher | :heavy_check_mark: | :heavy_check_mark: |
|   **v2rayN-PRO**    |  1.9 or higher   | :heavy_check_mark: | :heavy_check_mark: |
|      **Husi**       |                  |        :x:         |        :x:         |
|    **Sing-box**     | 1.11.2 or higher |        :x:         |        :x:         |
|    **Streisand**    | 1.6.48 or higher | :heavy_check_mark: | :heavy_check_mark: |
|      **V2Box**      |                  |        :x:         |        :x:         |
|  **Shadowrocket**   |                  |        :x:         |        :x:         |
|     **Nekoray**     |                  | :heavy_check_mark: |        :x:         |
|     **Hiddify**     | 2.5.7 or higher  | :heavy_check_mark: | :heavy_check_mark: |
|     **MahsaNG**     |   13 or higher   | :heavy_check_mark: | :heavy_check_mark: |
|   **Clash Meta**    |                  |        :x:         |        :x:         |
| **Clash Verge Rev** |                  |        :x:         |        :x:         |
|     **FLClash**     |                  |        :x:         |        :x:         |
|   **AmneziaVPN**    |                  |        :x:         | :heavy_check_mark: |
|    **WG Tunnel**    |                  |        :x:         | :heavy_check_mark: |


## Environment variables

|   Variable   |               Usage                |
| :----------: | :--------------------------------: |
|   **UUID**   |             VLESS UUID             |
| **TR_PASS**  |          Trojan Password           |
| **PROXY_IP** | Proxy IP or domain (VLESS, Trojan) |
| **SUB_PATH** |         Subscriptions&#039; URI         |
| **FALLBACK** |  Fallback domain (VLESS, Trojan)   |
| **DOH_URL**  |              Core DOH              |

---

## Stargazers Over Time

[![Stargazers Over Time](https://starchart.cc/bia-pain-bache/BPB-Worker-Panel.svg?variant=adaptive)](https://starchart.cc/bia-pain-bache/BPB-Worker-Panel)

---

### Special Thanks

- VLESS, Trojan [Cloudflare-workers/pages proxy script](https://github.com/yonggekkk/Cloudflare-workers-pages-vless) created by [yonggekkk](https://github.com/yonggekkk)
- CF-vless code author [3Kmfi6HP](https://github.com/3Kmfi6HP/EDtunnel)
- CF preferred IP program author [badafans](https://github.com/badafans/Cloudflare-IP-SpeedTest), [XIU2](https://github.com/XIU2/CloudflareSpeedTest)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[airbnb/javascript]]></title>
            <link>https://github.com/airbnb/javascript</link>
            <guid>https://github.com/airbnb/javascript</guid>
            <pubDate>Wed, 18 Jun 2025 00:04:26 GMT</pubDate>
            <description><![CDATA[JavaScript Style Guide]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/airbnb/javascript">airbnb/javascript</a></h1>
            <p>JavaScript Style Guide</p>
            <p>Language: JavaScript</p>
            <p>Stars: 146,871</p>
            <p>Forks: 26,760</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre># Airbnb JavaScript Style Guide() {

*A mostly reasonable approach to JavaScript*

&gt; **Note**: this guide assumes you are using [Babel](https://babeljs.io), and requires that you use [babel-preset-airbnb](https://npmjs.com/babel-preset-airbnb) or the equivalent. It also assumes you are installing shims/polyfills in your app, with [airbnb-browser-shims](https://npmjs.com/airbnb-browser-shims) or the equivalent.

[![Downloads](https://img.shields.io/npm/dm/eslint-config-airbnb.svg)](https://www.npmjs.com/package/eslint-config-airbnb)
[![Downloads](https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg)](https://www.npmjs.com/package/eslint-config-airbnb-base)
[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/airbnb/javascript?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge)

This guide is available in other languages too. See [Translation](#translation)

Other Style Guides

  - [ES5 (Deprecated)](https://github.com/airbnb/javascript/tree/es5-deprecated/es5)
  - [React](react/)
  - [CSS-in-JavaScript](css-in-javascript/)
  - [CSS &amp; Sass](https://github.com/airbnb/css)
  - [Ruby](https://github.com/airbnb/ruby)

## Table of Contents

  1. [Types](#types)
  1. [References](#references)
  1. [Objects](#objects)
  1. [Arrays](#arrays)
  1. [Destructuring](#destructuring)
  1. [Strings](#strings)
  1. [Functions](#functions)
  1. [Arrow Functions](#arrow-functions)
  1. [Classes &amp; Constructors](#classes--constructors)
  1. [Modules](#modules)
  1. [Iterators and Generators](#iterators-and-generators)
  1. [Properties](#properties)
  1. [Variables](#variables)
  1. [Hoisting](#hoisting)
  1. [Comparison Operators &amp; Equality](#comparison-operators--equality)
  1. [Blocks](#blocks)
  1. [Control Statements](#control-statements)
  1. [Comments](#comments)
  1. [Whitespace](#whitespace)
  1. [Commas](#commas)
  1. [Semicolons](#semicolons)
  1. [Type Casting &amp; Coercion](#type-casting--coercion)
  1. [Naming Conventions](#naming-conventions)
  1. [Accessors](#accessors)
  1. [Events](#events)
  1. [jQuery](#jquery)
  1. [ECMAScript 5 Compatibility](#ecmascript-5-compatibility)
  1. [ECMAScript 6+ (ES 2015+) Styles](#ecmascript-6-es-2015-styles)
  1. [Standard Library](#standard-library)
  1. [Testing](#testing)
  1. [Performance](#performance)
  1. [Resources](#resources)
  1. [In the Wild](#in-the-wild)
  1. [Translation](#translation)
  1. [The JavaScript Style Guide Guide](#the-javascript-style-guide-guide)
  1. [Chat With Us About JavaScript](#chat-with-us-about-javascript)
  1. [Contributors](#contributors)
  1. [License](#license)
  1. [Amendments](#amendments)

## Types

  &lt;a name=&quot;types--primitives&quot;&gt;&lt;/a&gt;&lt;a name=&quot;1.1&quot;&gt;&lt;/a&gt;
  - [1.1](#types--primitives) **Primitives**: When you access a primitive type you work directly on its value.

    - `string`
    - `number`
    - `boolean`
    - `null`
    - `undefined`
    - `symbol`
    - `bigint`

    &lt;br /&gt;

    ```javascript
    const foo = 1;
    let bar = foo;

    bar = 9;

    console.log(foo, bar); // =&gt; 1, 9
    ```

    - Symbols and BigInts cannot be faithfully polyfilled, so they should not be used when targeting browsers/environments that don‚Äôt support them natively.

  &lt;a name=&quot;types--complex&quot;&gt;&lt;/a&gt;&lt;a name=&quot;1.2&quot;&gt;&lt;/a&gt;
  - [1.2](#types--complex)  **Complex**: When you access a complex type you work on a reference to its value.

    - `object`
    - `array`
    - `function`

    &lt;br /&gt;

    ```javascript
    const foo = [1, 2];
    const bar = foo;

    bar[0] = 9;

    console.log(foo[0], bar[0]); // =&gt; 9, 9
    ```

**[‚¨Ü back to top](#table-of-contents)**

## References

  &lt;a name=&quot;references--prefer-const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.1&quot;&gt;&lt;/a&gt;
  - [2.1](#references--prefer-const) Use `const` for all of your references; avoid using `var`. eslint: [`prefer-const`](https://eslint.org/docs/rules/prefer-const), [`no-const-assign`](https://eslint.org/docs/rules/no-const-assign)

    &gt; Why? This ensures that you can‚Äôt reassign your references, which can lead to bugs and difficult to comprehend code.

    ```javascript
    // bad
    var a = 1;
    var b = 2;

    // good
    const a = 1;
    const b = 2;
    ```

  &lt;a name=&quot;references--disallow-var&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.2&quot;&gt;&lt;/a&gt;
  - [2.2](#references--disallow-var) If you must reassign references, use `let` instead of `var`. eslint: [`no-var`](https://eslint.org/docs/rules/no-var)

    &gt; Why? `let` is block-scoped rather than function-scoped like `var`.

    ```javascript
    // bad
    var count = 1;
    if (true) {
      count += 1;
    }

    // good, use the let.
    let count = 1;
    if (true) {
      count += 1;
    }
    ```

  &lt;a name=&quot;references--block-scope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.3&quot;&gt;&lt;/a&gt;
  - [2.3](#references--block-scope) Note that both `let` and `const` are block-scoped, whereas `var` is function-scoped.

    ```javascript
    // const and let only exist in the blocks they are defined in.
    {
      let a = 1;
      const b = 1;
      var c = 1;
    }
    console.log(a); // ReferenceError
    console.log(b); // ReferenceError
    console.log(c); // Prints 1
    ```

    In the above code, you can see that referencing `a` and `b` will produce a ReferenceError, while `c` contains the number. This is because `a` and `b` are block scoped, while `c` is scoped to the containing function.

**[‚¨Ü back to top](#table-of-contents)**

## Objects

  &lt;a name=&quot;objects--no-new&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.1&quot;&gt;&lt;/a&gt;
  - [3.1](#objects--no-new) Use the literal syntax for object creation. eslint: [`no-new-object`](https://eslint.org/docs/rules/no-new-object)

    ```javascript
    // bad
    const item = new Object();

    // good
    const item = {};
    ```

  &lt;a name=&quot;es6-computed-properties&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.4&quot;&gt;&lt;/a&gt;
  - [3.2](#es6-computed-properties) Use computed property names when creating objects with dynamic property names.

    &gt; Why? They allow you to define all the properties of an object in one place.

    ```javascript

    function getKey(k) {
      return `a key named ${k}`;
    }

    // bad
    const obj = {
      id: 5,
      name: &#039;San Francisco&#039;,
    };
    obj[getKey(&#039;enabled&#039;)] = true;

    // good
    const obj = {
      id: 5,
      name: &#039;San Francisco&#039;,
      [getKey(&#039;enabled&#039;)]: true,
    };
    ```

  &lt;a name=&quot;es6-object-shorthand&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.5&quot;&gt;&lt;/a&gt;
  - [3.3](#es6-object-shorthand) Use object method shorthand. eslint: [`object-shorthand`](https://eslint.org/docs/rules/object-shorthand)

    ```javascript
    // bad
    const atom = {
      value: 1,

      addValue: function (value) {
        return atom.value + value;
      },
    };

    // good
    const atom = {
      value: 1,

      addValue(value) {
        return atom.value + value;
      },
    };
    ```

  &lt;a name=&quot;es6-object-concise&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.6&quot;&gt;&lt;/a&gt;
  - [3.4](#es6-object-concise) Use property value shorthand. eslint: [`object-shorthand`](https://eslint.org/docs/rules/object-shorthand)

    &gt; Why? It is shorter and descriptive.

    ```javascript
    const lukeSkywalker = &#039;Luke Skywalker&#039;;

    // bad
    const obj = {
      lukeSkywalker: lukeSkywalker,
    };

    // good
    const obj = {
      lukeSkywalker,
    };
    ```

  &lt;a name=&quot;objects--grouped-shorthand&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.7&quot;&gt;&lt;/a&gt;
  - [3.5](#objects--grouped-shorthand) Group your shorthand properties at the beginning of your object declaration.

    &gt; Why? It‚Äôs easier to tell which properties are using the shorthand.

    ```javascript
    const anakinSkywalker = &#039;Anakin Skywalker&#039;;
    const lukeSkywalker = &#039;Luke Skywalker&#039;;

    // bad
    const obj = {
      episodeOne: 1,
      twoJediWalkIntoACantina: 2,
      lukeSkywalker,
      episodeThree: 3,
      mayTheFourth: 4,
      anakinSkywalker,
    };

    // good
    const obj = {
      lukeSkywalker,
      anakinSkywalker,
      episodeOne: 1,
      twoJediWalkIntoACantina: 2,
      episodeThree: 3,
      mayTheFourth: 4,
    };
    ```

  &lt;a name=&quot;objects--quoted-props&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.8&quot;&gt;&lt;/a&gt;
  - [3.6](#objects--quoted-props) Only quote properties that are invalid identifiers. eslint: [`quote-props`](https://eslint.org/docs/rules/quote-props)

    &gt; Why? In general we consider it subjectively easier to read. It improves syntax highlighting, and is also more easily optimized by many JS engines.

    ```javascript
    // bad
    const bad = {
      &#039;foo&#039;: 3,
      &#039;bar&#039;: 4,
      &#039;data-blah&#039;: 5,
    };

    // good
    const good = {
      foo: 3,
      bar: 4,
      &#039;data-blah&#039;: 5,
    };
    ```

  &lt;a name=&quot;objects--prototype-builtins&quot;&gt;&lt;/a&gt;
  - [3.7](#objects--prototype-builtins) Do not call `Object.prototype` methods directly, such as `hasOwnProperty`, `propertyIsEnumerable`, and `isPrototypeOf`. eslint: [`no-prototype-builtins`](https://eslint.org/docs/rules/no-prototype-builtins)

    &gt; Why? These methods may be shadowed by properties on the object in question - consider `{ hasOwnProperty: false }` - or, the object may be a null object (`Object.create(null)`). In modern browsers that support ES2022, or with a polyfill such as &lt;https://npmjs.com/object.hasown&gt;, `Object.hasOwn` can also be used as an alternative to `Object.prototype.hasOwnProperty.call`.

    ```javascript
    // bad
    console.log(object.hasOwnProperty(key));

    // good
    console.log(Object.prototype.hasOwnProperty.call(object, key));

    // better
    const has = Object.prototype.hasOwnProperty; // cache the lookup once, in module scope.
    console.log(has.call(object, key));

    // best
    console.log(Object.hasOwn(object, key)); // only supported in browsers that support ES2022

    /* or */
    import has from &#039;has&#039;; // https://www.npmjs.com/package/has
    console.log(has(object, key));
    /* or */
    console.log(Object.hasOwn(object, key)); // https://www.npmjs.com/package/object.hasown
    ```

  &lt;a name=&quot;objects--rest-spread&quot;&gt;&lt;/a&gt;
  - [3.8](#objects--rest-spread) Prefer the object spread syntax over [`Object.assign`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign) to shallow-copy objects. Use the object rest parameter syntax to get a new object with certain properties omitted. eslint: [`prefer-object-spread`](https://eslint.org/docs/rules/prefer-object-spread)

    ```javascript
    // very bad
    const original = { a: 1, b: 2 };
    const copy = Object.assign(original, { c: 3 }); // this mutates `original` ‡≤†_‡≤†
    delete copy.a; // so does this

    // bad
    const original = { a: 1, b: 2 };
    const copy = Object.assign({}, original, { c: 3 }); // copy =&gt; { a: 1, b: 2, c: 3 }

    // good
    const original = { a: 1, b: 2 };
    const copy = { ...original, c: 3 }; // copy =&gt; { a: 1, b: 2, c: 3 }

    const { a, ...noA } = copy; // noA =&gt; { b: 2, c: 3 }
    ```

**[‚¨Ü back to top](#table-of-contents)**

## Arrays

  &lt;a name=&quot;arrays--literals&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.1&quot;&gt;&lt;/a&gt;
  - [4.1](#arrays--literals) Use the literal syntax for array creation. eslint: [`no-array-constructor`](https://eslint.org/docs/rules/no-array-constructor)

    ```javascript
    // bad
    const items = new Array();

    // good
    const items = [];
    ```

  &lt;a name=&quot;arrays--push&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.2&quot;&gt;&lt;/a&gt;
  - [4.2](#arrays--push) Use [Array#push](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push) instead of direct assignment to add items to an array.

    ```javascript
    const someStack = [];

    // bad
    someStack[someStack.length] = &#039;abracadabra&#039;;

    // good
    someStack.push(&#039;abracadabra&#039;);
    ```

  &lt;a name=&quot;es6-array-spreads&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.3&quot;&gt;&lt;/a&gt;
  - [4.3](#es6-array-spreads) Use array spreads `...` to copy arrays.

    ```javascript
    // bad
    const len = items.length;
    const itemsCopy = [];
    let i;

    for (i = 0; i &lt; len; i += 1) {
      itemsCopy[i] = items[i];
    }

    // good
    const itemsCopy = [...items];
    ```

  &lt;a name=&quot;arrays--from&quot;&gt;&lt;/a&gt;
  &lt;a name=&quot;arrays--from-iterable&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.4&quot;&gt;&lt;/a&gt;
  - [4.4](#arrays--from-iterable) To convert an iterable object to an array, use spreads `...` instead of [`Array.from`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from)

    ```javascript
    const foo = document.querySelectorAll(&#039;.foo&#039;);

    // good
    const nodes = Array.from(foo);

    // best
    const nodes = [...foo];
    ```

  &lt;a name=&quot;arrays--from-array-like&quot;&gt;&lt;/a&gt;
  - [4.5](#arrays--from-array-like) Use [`Array.from`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from) for converting an array-like object to an array.

    ```javascript
    const arrLike = { 0: &#039;foo&#039;, 1: &#039;bar&#039;, 2: &#039;baz&#039;, length: 3 };

    // bad
    const arr = Array.prototype.slice.call(arrLike);

    // good
    const arr = Array.from(arrLike);
    ```

  &lt;a name=&quot;arrays--mapping&quot;&gt;&lt;/a&gt;
  - [4.6](#arrays--mapping) Use [`Array.from`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from) instead of spread `...` for mapping over iterables, because it avoids creating an intermediate array.

    ```javascript
    // bad
    const baz = [...foo].map(bar);

    // good
    const baz = Array.from(foo, bar);
    ```

  &lt;a name=&quot;arrays--callback-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.5&quot;&gt;&lt;/a&gt;
  - [4.7](#arrays--callback-return) Use return statements in array method callbacks. It‚Äôs ok to omit the return if the function body consists of a single statement returning an expression without side effects, following [8.2](#arrows--implicit-return). eslint: [`array-callback-return`](https://eslint.org/docs/rules/array-callback-return)

    ```javascript
    // good
    [1, 2, 3].map((x) =&gt; {
      const y = x + 1;
      return x * y;
    });

    // good
    [1, 2, 3].map((x) =&gt; x + 1);

    // bad - no returned value means `acc` becomes undefined after the first iteration
    [[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&gt; {
      const flatten = acc.concat(item);
    });

    // good
    [[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&gt; {
      const flatten = acc.concat(item);
      return flatten;
    });

    // bad
    inbox.filter((msg) =&gt; {
      const { subject, author } = msg;
      if (subject === &#039;Mockingbird&#039;) {
        return author === &#039;Harper Lee&#039;;
      } else {
        return false;
      }
    });

    // good
    inbox.filter((msg) =&gt; {
      const { subject, author } = msg;
      if (subject === &#039;Mockingbird&#039;) {
        return author === &#039;Harper Lee&#039;;
      }

      return false;
    });
    ```

  &lt;a name=&quot;arrays--bracket-newline&quot;&gt;&lt;/a&gt;
  - [4.8](#arrays--bracket-newline) Use line breaks after opening array brackets and before closing array brackets, if an array has multiple lines

    ```javascript
    // bad
    const arr = [
      [0, 1], [2, 3], [4, 5],
    ];

    const objectInArray = [{
      id: 1,
    }, {
      id: 2,
    }];

    const numberInArray = [
      1, 2,
    ];

    // good
    const arr = [[0, 1], [2, 3], [4, 5]];

    const objectInArray = [
      {
        id: 1,
      },
      {
        id: 2,
      },
    ];

    const numberInArray = [
      1,
      2,
    ];
    ```

**[‚¨Ü back to top](#table-of-contents)**

## Destructuring

  &lt;a name=&quot;destructuring--object&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.1&quot;&gt;&lt;/a&gt;
  - [5.1](#destructuring--object) Use object destructuring when accessing and using multiple properties of an object. eslint: [`prefer-destructuring`](https://eslint.org/docs/rules/prefer-destructuring)

    &gt; Why? Destructuring saves you from creating temporary references for those properties, and from repetitive access of the object. Repeating object access creates more repetitive code, requires more reading, and creates more opportunities for mistakes. Destructuring objects also provides a single site of definition of the object structure that is used in the block, rather than requiring reading the entire block to determine what is used.

    ```javascript
    // bad
    function getFullName(user) {
      const firstName = user.firstName;
      const lastName = user.lastName;

      return `${firstName} ${lastName}`;
    }

    // good
    function getFullName(user) {
      const { firstName, lastName } = user;
      return `${firstName} ${lastName}`;
    }

    // best
    function getFullName({ firstName, lastName }) {
      return `${firstName} ${lastName}`;
    }
    ```

  &lt;a name=&quot;destructuring--array&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.2&quot;&gt;&lt;/a&gt;
  - [5.2](#destructuring--array) Use array destructuring. eslint: [`prefer-destructuring`](https://eslint.org/docs/rules/prefer-destructuring)

    ```javascript
    const arr = [1, 2, 3, 4];

    // bad
    const first = arr[0];
    const second = arr[1];

    // good
    const [first, second] = arr;
    ```

  &lt;a name=&quot;destructuring--object-over-array&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.3&quot;&gt;&lt;/a&gt;
  - [5.3](#destructuring--object-over-array) Use object destructuring for multiple return values, not array destructuring.

    &gt; Why? You can add new properties over time or change the order of things without breaking call sites.

    ```javascript
    // bad
    function processInput(input) {
      // then a miracle occurs
      return [left, right, top, bottom];
    }

    // the caller needs to think about the order of return data
    const [left, __, top] = processInput(input);

    // good
    function processInput(input) {
      // then a miracle occurs
      return { left, right, top, bottom };
    }

    // the caller selects only the data they need
    const { left, top } = processInput(input);
    ```

**[‚¨Ü back to top](#table-of-contents)**

## Strings

  &lt;a name=&quot;strings--quotes&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.1&quot;&gt;&lt;/a&gt;
  - [6.1](#strings--quotes) Use single quotes `&#039;&#039;` for strings. eslint: [`quotes`](https://eslint.org/docs/rules/quotes)

    ```javascript
    // bad
    const name = &quot;Capt. Janeway&quot;;

    // bad - template literals should contain interpolation or newlines
    const name = `Capt. Janeway`;

    // good
    const name = &#039;Capt. Janeway&#039;;
    ```

  &lt;a name=&quot;strings--line-length&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.2&quot;&gt;&lt;/a&gt;
  - [6.2](#strings--line-length) Strings that cause the line to go over 100 characters should not be written across multiple lines using string concatenation.

    &gt; Why? Broken strings are painful to work with and make code less searchable.

    ```javascript
    // bad
    const errorMessage = &#039;This is a super long error that was thrown because \
    of Batman. When you stop to think about how Batman had anything to do \
    with this, you would get nowhere \
    fast.&#039;;

    // bad
    const errorMessage = &#039;This is a super long error that was thrown because &#039; +
      &#039;of Batman. When you stop to think about how Batman had anything to do &#039; +
      &#039;with this, you would get nowhere fast.&#039;;

    // good
    const errorMessage = &#039;This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.&#039;;
    ```

  &lt;a name=&quot;es6-template-literals&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.4&quot;&gt;&lt;/a&gt;
  - [6.3](#es6-template-literals) When programmatically building up strings, use template strings instead of concatenation. eslint: [`prefer-template`](https://eslint.org/docs/rules/prefer-template) [`template-curly-spacing`](https://eslint.org/docs/rules/template-curly-spacing)

    &gt; Why? Template strings give you a readable, concise syntax with proper newlines and string interpolation features.

    ```javascript
    // bad
    function sayHi(name) {
      return &#039;How are you, &#039; + name + &#039;?&#039;;
    }

    // bad
    function sayHi(name) {
      return [&#039;How are you, &#039;, name, &#039;?&#039;].join();
    }

    // bad
    function sayHi(name) {
      return `How are you, ${ name }?`;
    }

    // good
    function sayHi(name) {
      return `How are you, ${name}?`;
    }
    ```

  &lt;a name=&quot;strings--eval&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.5&quot;&gt;&lt;/a&gt;
  - [6.4](#strings--eval) Never use `eval()` on a string; it opens too many vulnerabilities. eslint: [`no-eval`](https://eslint.org/docs/rules/no-eval)

  &lt;a name=&quot;strings--escaping&quot;&gt;&lt;/a&gt;
  - [6.5](#strings--escaping) Do not unnecessarily escape characters in strings. eslint: [`no-useless-esca

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[viarotel-org/escrcpy]]></title>
            <link>https://github.com/viarotel-org/escrcpy</link>
            <guid>https://github.com/viarotel-org/escrcpy</guid>
            <pubDate>Wed, 18 Jun 2025 00:04:25 GMT</pubDate>
            <description><![CDATA[üì± Display and control your Android device graphically with scrcpy.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/viarotel-org/escrcpy">viarotel-org/escrcpy</a></h1>
            <p>üì± Display and control your Android device graphically with scrcpy.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 5,218</p>
            <p>Forks: 392</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre>&lt;div style=&quot;display:flex;&quot;&gt;
  &lt;img src=&quot;https://cdn.jsdelivr.net/gh/viarotel-org/escrcpy@main/electron/resources/build/logo.png&quot; alt=&quot;viarotel-escrcpy&quot; width=&quot;108px&quot;&gt;
&lt;/div&gt;

# Escrcpy

[![GitCode](https://gitcode.com/viarotel-org/escrcpy/star/badge.svg)](https://gitcode.com/viarotel-org/escrcpy)
[![Gitee](https://gitee.com/viarotel-org/escrcpy/badge/star.svg?theme=dark)](https://gitee.com/viarotel-org/escrcpy)
[![GitHub](https://img.shields.io/github/stars/viarotel-org/escrcpy?label=Github%20Stars)](https://github.com/viarotel-org/escrcpy)
[![Ask DeepWiki](https://deepwiki.com/badge.svg)](https://deepwiki.com/viarotel-org/escrcpy)

üì± Display and control your Android device graphically with scrcpy, powered by Electron. [‰∏≠ÊñáÊñáÊ°£](https://github.com/viarotel-org/escrcpy/blob/main/README-CN.md)

&lt;div style=&quot;display:flex;&quot;&gt;
  &lt;img src=&quot;./screenshots/zh-CN/overview.jpg&quot; alt=&quot;viarotel-escrcpy&quot; width=&quot;100%&quot;&gt;
&lt;/div&gt;

## Features

- üèÉ Synchronization: Faster synchronization with Scrcpy thanks to web technology
- ü§ñ Automation: Auto-connect devices, auto-execute mirroring, custom scripts, scheduled tasks
- üí° Customization: Multi-device management, independent configurations, custom notes, config import/export
- üì° Wireless: Quick connection via QR code scanning
- üîó Reverse Tethering: Gnirehtet reverse tethering
- üé® Themes: Light mode, dark mode, system theme following
- üòé Lightweight: Native support, displays only the device screen
- ‚ö°Ô∏è Performance: 30~120 FPS, depending on the device
- üåü Quality: 1920√ó1080 or higher
- üïí Low Latency: 35~70 ms
- üöÄ Fast Startup: First image displayed in about 1 second
- üôÖ‚Äç‚ôÇÔ∏è Non-intrusive: No installation files left on Android devices
- ü§© User Benefits: No accounts, no ads, no internet connection required
- üóΩ Freedom: Free and open-source software

## Installation

### Manual Installation via Released Packages

Check the [Releases Page](https://github.com/viarotel-org/escrcpy/releases)

### macOS Installation via Homebrew

Refer to [homebrew-escrcpy](https://github.com/viarotel-org/homebrew-escrcpy)

## Documentation

- [Getting Started](https://escrcpy.viarotel.eu.org/guide/started)
- [Shortcuts](https://escrcpy.viarotel.eu.org/reference/scrcpy/shortcuts)
- [Device Operations](https://escrcpy.viarotel.eu.org/guide/operation)
- [Preferences](https://escrcpy.viarotel.eu.org/guide/preferences)
- [Reverse Tethering](https://escrcpy.viarotel.eu.org/reference/gnirehtet/)

## For Developers

If you are a developer and wish to run or help improve this project, refer to the [Development Documentation](https://github.com/viarotel-org/escrcpy/blob/main/develop.md)

## Get Help

As an open-source project powered by passion, support is limited, and updates are irregular.

- [FAQ](https://escrcpy.viarotel.eu.org/help/escrcpy)
- [Report Issues](https://github.com/viarotel-org/escrcpy/issues)
- [Contact Email](viarotel@qq.com)

## What&#039;s Next?

[Milestones](https://escrcpy.viarotel.eu.org/guide/milestones)

## Acknowledgments

This project owes its existence to the following open-source projects:

- [scrcpy](https://github.com/Genymobile/scrcpy)
- [adbkit](https://github.com/DeviceFarmer/adbkit)
- [electron](https://www.electronjs.org/)
- [vue](https://vuejs.org/)
- [gnirehtet](https://github.com/Genymobile/gnirehtet/)

## Donate

If this project has helped you, consider buying me a coffee to keep me motivated for further improvements üòõ

&lt;div style=&quot;display:flex;&quot;&gt;
  &lt;img src=&quot;https://cdn.jsdelivr.net/gh/viarotel-org/escrcpy@main/src/assets/sponsor/viarotel-wepay.png&quot; alt=&quot;viarotel-wepay&quot; width=&quot;30%&quot;&gt;
  &lt;img src=&quot;https://cdn.jsdelivr.net/gh/viarotel-org/escrcpy@main/src/assets/sponsor/viarotel-alipay.png&quot; alt=&quot;viarotel-alipay&quot; width=&quot;30%&quot;&gt;
  &lt;a href=&quot;https://www.paypal.com/paypalme/viarotel&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;
    &lt;img src=&quot;https://cdn.jsdelivr.net/gh/viarotel-org/escrcpy@main/src/assets/sponsor/viarotel-paypal.png&quot; alt=&quot;viarotel-paypal&quot; width=&quot;30%&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;

## Contributors

Thanks to all who contributed!

[Contributors](https://github.com/viarotel/escrcpy/graphs/contributors)

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=viarotel-org/escrcpy&amp;type=Date)](https://star-history.com/#viarotel-org/escrcpy&amp;Date)</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[webpack/webpack]]></title>
            <link>https://github.com/webpack/webpack</link>
            <guid>https://github.com/webpack/webpack</guid>
            <pubDate>Wed, 18 Jun 2025 00:04:24 GMT</pubDate>
            <description><![CDATA[A bundler for javascript and friends. Packs many modules into a few bundled assets. Code Splitting allows for loading parts of the application on demand. Through "loaders", modules can be CommonJs, AMD, ES6 modules, CSS, Images, JSON, Coffeescript, LESS, ... and your custom stuff.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/webpack/webpack">webpack/webpack</a></h1>
            <p>A bundler for javascript and friends. Packs many modules into a few bundled assets. Code Splitting allows for loading parts of the application on demand. Through "loaders", modules can be CommonJs, AMD, ES6 modules, CSS, Images, JSON, Coffeescript, LESS, ... and your custom stuff.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 65,375</p>
            <p>Forks: 9,079</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/webpack/webpack&quot;&gt;
    &lt;img width=&quot;200&quot; height=&quot;200&quot; src=&quot;https://webpack.js.org/assets/icon-square-big.svg&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;br&gt;

[![npm][npm]][npm-url]

[![node][node]][node-url]
[![builds1][builds1]][builds1-url]
[![dependency-review][dependency-review]][dependency-review-url]
[![coverage][cover]][cover-url]
[![PR&#039;s welcome][prs]][prs-url]
[![compatibility-score](https://api.dependabot.com/badges/compatibility_score?dependency-name=webpack&amp;package-manager=npm_and_yarn&amp;previous-version=5.72.1&amp;new-version=5.73.0)](https://docs.github.com/en/code-security/dependabot/dependabot-security-updates/about-dependabot-security-updates#about-compatibility-scores)
[![downloads](https://img.shields.io/npm/dm/webpack.svg)](https://npmcharts.com/compare/webpack?minimal=true)
[![install-size](https://packagephobia.com/badge?p=webpack)](https://packagephobia.com/result?p=webpack)
[![backers](https://opencollective.com/webpack/backers/badge.svg)](https://opencollective.com/webpack#backer)
[![sponsors](https://opencollective.com/webpack/sponsors/badge.svg)](https://opencollective.com/webpack#sponsors)
[![contributors](https://img.shields.io/github/contributors/webpack/webpack.svg)](https://github.com/webpack/webpack/graphs/contributors)
[![discussions](https://img.shields.io/github/discussions/webpack/webpack)](https://github.com/webpack/webpack/discussions)
[![discord](https://img.shields.io/discord/1180618526436888586?label=discord&amp;logo=discord&amp;logoColor=white&amp;style=flat)](https://discord.gg/5sxFZPdx2k)

  &lt;h1&gt;webpack&lt;/h1&gt;
  &lt;p&gt;
    Webpack is a module bundler. Its main purpose is to bundle JavaScript files for usage in a browser, yet it is also capable of transforming, bundling, or packaging just about any resource or asset.
  &lt;/p&gt;
&lt;/div&gt;

## Table of Contents

- [Install](#install)
- [Introduction](#introduction)
- [Concepts](#concepts)
- [Contributing](#contributing)
- [Support](#support)
- [Current project members](#current-project-members)
  - [TSC (Technical Steering Committee)](#tsc-technical-steering-committee)
  - [Core Collaborators](#core-collaborators)
- [Sponsoring](#sponsoring)
  - [Premium Partners](#premium-partners)
  - [Gold Sponsors](#gold-sponsors)
  - [Silver Sponsors](#silver-sponsors)
  - [Bronze Sponsors](#bronze-sponsors)
  - [Backers](#backers)
- [Special Thanks](#special-thanks-to)

&lt;h2&gt;Install&lt;/h2&gt;

Install with npm:

```bash
npm install --save-dev webpack
```

Install with yarn:

```bash
yarn add webpack --dev
```

&lt;h2&gt;Introduction&lt;/h2&gt;

Webpack is a bundler for modules. The main purpose is to bundle JavaScript
files for usage in a browser, yet it is also capable of transforming, bundling,
or packaging just about any resource or asset.

**TL;DR**

- Bundles [ES Modules](https://www.2ality.com/2014/09/es6-modules-final.html), [CommonJS](http://wiki.commonjs.org/), and [AMD](https://github.com/amdjs/amdjs-api/wiki/AMD) modules (even combined).
- Can create a single bundle or multiple chunks that are asynchronously loaded at runtime (to reduce initial loading time).
- Dependencies are resolved during compilation, reducing the runtime size.
- Loaders can preprocess files while compiling, e.g. TypeScript to JavaScript, Handlebars strings to compiled functions, images to Base64, etc.
- Highly modular plugin system to do whatever else your application requires.

#### Learn about webpack through videos!

- [Understanding Webpack - Video 1](https://www.youtube.com/watch?v=xj93pvQIsRo)
- [Understanding Webpack - Video 2](https://www.youtube.com/watch?v=4tQiJaFzuJ8)

### Get Started

Check out webpack&#039;s quick [**Get Started**](https://webpack.js.org/guides/getting-started) guide and the [other guides](https://webpack.js.org/guides/).

### Browser Compatibility

Webpack supports all browsers that are [ES5-compliant](https://kangax.github.io/compat-table/es5/) (IE8 and below are not supported).
Webpack also needs `Promise` for `import()` and `require.ensure()`. If you want to support older browsers, you will need to [load a polyfill](https://webpack.js.org/guides/shimming/) before using these expressions.

&lt;h2&gt;Concepts&lt;/h2&gt;

### [Plugins](https://webpack.js.org/plugins/)

Webpack has a [rich plugin
interface](https://webpack.js.org/plugins/). Most of the features
within webpack itself use this plugin interface. This makes webpack very
**flexible**.

|                   Name                    |       Status       |    Install Size     | Description                                                                             |
| :---------------------------------------: | :----------------: | :-----------------: | :-------------------------------------------------------------------------------------- |
|    [mini-css-extract-plugin][mini-css]    |  ![mini-css-npm]   |  ![mini-css-size]   | Extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. |
| [compression-webpack-plugin][compression] | ![compression-npm] | ![compression-size] | Prepares compressed versions of assets to serve them with Content-Encoding              |
|  [html-bundler-webpack-plugin][bundler]   |   ![bundler-npm]   |   ![bundler-size]   | Renders a template (EJS, Handlebars, Pug) with referenced source asset files into HTML. |
|    [html-webpack-plugin][html-plugin]     | ![html-plugin-npm] | ![html-plugin-size] | Simplifies creation of HTML files (`index.html`) to serve your bundles                  |
|         [pug-plugin][pug-plugin]          | ![pug-plugin-npm]  | ![pug-plugin-size]  | Renders Pug files to HTML, extracts JS and CSS from sources specified directly in Pug.  |

[common-npm]: https://img.shields.io/npm/v/webpack.svg
[mini-css]: https://github.com/webpack-contrib/mini-css-extract-plugin
[mini-css-npm]: https://img.shields.io/npm/v/mini-css-extract-plugin.svg
[mini-css-size]: https://packagephobia.com/badge?p=mini-css-extract-plugin
[component]: https://github.com/webpack-contrib/component-webpack-plugin
[component-npm]: https://img.shields.io/npm/v/component-webpack-plugin.svg
[component-size]: https://packagephobia.com/badge?p=component-webpack-plugin
[compression]: https://github.com/webpack-contrib/compression-webpack-plugin
[compression-npm]: https://img.shields.io/npm/v/compression-webpack-plugin.svg
[compression-size]: https://packagephobia.com/badge?p=compression-webpack-plugin
[bundler]: https://github.com/webdiscus/html-bundler-webpack-plugin
[bundler-npm]: https://img.shields.io/npm/v/html-bundler-webpack-plugin.svg
[bundler-size]: https://packagephobia.com/badge?p=html-bundler-webpack-plugin
[html-plugin]: https://github.com/jantimon/html-webpack-plugin
[html-plugin-npm]: https://img.shields.io/npm/v/html-webpack-plugin.svg
[html-plugin-size]: https://packagephobia.com/badge?p=html-webpack-plugin
[pug-plugin]: https://github.com/webdiscus/pug-plugin
[pug-plugin-npm]: https://img.shields.io/npm/v/pug-plugin.svg
[pug-plugin-size]: https://packagephobia.com/badge?p=pug-plugin

### [Loaders](https://webpack.js.org/loaders/)

Webpack enables the use of loaders to preprocess files. This allows you to bundle
**any static resource** way beyond JavaScript. You can easily [write your own
loaders](https://webpack.js.org/api/loaders/) using Node.js.

Loaders are activated by using `loadername!` prefixes in `require()` statements,
or are automatically applied via regex from your webpack configuration.

#### Files

|       Name        |   Status   | Install Size | Description                                              |
| :---------------: | :--------: | :----------: | :------------------------------------------------------- |
| [val-loader][val] | ![val-npm] | ![val-size]  | Executes code as module and considers exports as JS code |

[val]: https://github.com/webpack-contrib/val-loader
[val-npm]: https://img.shields.io/npm/v/val-loader.svg
[val-size]: https://packagephobia.com/badge?p=val-loader

#### JSON

|                                                                   Name                                                                    |   Status    | Install Size |           Description            |
| :---------------------------------------------------------------------------------------------------------------------------------------: | :---------: | :----------: | :------------------------------: |
| &lt;a href=&quot;https://github.com/awnist/cson-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/coffeescript.svg&quot;&gt;&lt;/a&gt; | ![cson-npm] | ![cson-size] | Loads and transpiles a CSON file |

[cson-npm]: https://img.shields.io/npm/v/cson-loader.svg
[cson-size]: https://packagephobia.com/badge?p=cson-loader

#### Transpiling

|                                                                                                                             Name                                                                                                                             |    Status     |  Install Size  | Description                                                                                       |
| :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: | :-----------: | :------------: | :------------------------------------------------------------------------------------------------ |
|                                                  &lt;a href=&quot;https://github.com/babel/babel-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; title=&quot;babel-loader&quot; src=&quot;https://worldvectorlogo.com/logos/babel-10.svg&quot;&gt;&lt;/a&gt;                                                  | ![babel-npm]  | ![babel-size]  | Loads ES2015+ code and transpiles to ES5 using &lt;a href=&quot;https://github.com/babel/babel&quot;&gt;Babel&lt;/a&gt; |
| &lt;a href=&quot;https://github.com/TypeStrong/ts-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://raw.githubusercontent.com/microsoft/TypeScript-Website/f407e1ae19e5e990d9901ac8064a32a8cc60edf0/packages/typescriptlang-org/static/branding/ts-logo-128.svg&quot;&gt;&lt;/a&gt; |  ![type-npm]  |  ![type-size]  | Loads TypeScript like JavaScript                                                                  |
|                                                     &lt;a href=&quot;https://github.com/webpack-contrib/coffee-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/coffeescript.svg&quot;&gt;&lt;/a&gt;                                                     | ![coffee-npm] | ![coffee-size] | Loads CoffeeScript like JavaScript                                                                |

[babel-npm]: https://img.shields.io/npm/v/babel-loader.svg
[babel-size]: https://packagephobia.com/badge?p=babel-loader
[coffee-npm]: https://img.shields.io/npm/v/coffee-loader.svg
[coffee-size]: https://packagephobia.com/badge?p=coffee-loader
[type-npm]: https://img.shields.io/npm/v/ts-loader.svg
[type-size]: https://packagephobia.com/badge?p=ts-loader

#### Templating

|                                                                                   Name                                                                                    |     Status      |   Install Size   | Description                                                                             |
| :-----------------------------------------------------------------------------------------------------------------------------------------------------------------------: | :-------------: | :--------------: | :-------------------------------------------------------------------------------------- |
|               &lt;a href=&quot;https://github.com/webpack-contrib/html-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/html5-2.svg&quot;&gt;&lt;/a&gt;               |   ![html-npm]   |   ![html-size]   | Exports HTML as string, requires references to static resources                         |
|   &lt;a href=&quot;https://github.com/pugjs/pug-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://cdn.rawgit.com/pugjs/pug-logo/master/SVG/pug-final-logo-_-colour-128.svg&quot;&gt;&lt;/a&gt;   |   ![pug-npm]    |   ![pug-size]    | Loads Pug templates and returns a function                                              |
| &lt;a href=&quot;https://github.com/webdiscus/pug-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://cdn.rawgit.com/pugjs/pug-logo/master/SVG/pug-final-logo-_-colour-128.svg&quot;&gt;&lt;/a&gt; |   ![pug3-npm]   |   ![pug3-size]   | Compiles Pug to a function or HTML string, useful for use with Vue, React, Angular      |
|                &lt;a href=&quot;https://github.com/peerigon/markdown-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/markdown.svg&quot;&gt;&lt;/a&gt;                |    ![md-npm]    |    ![md-size]    | Compiles Markdown to HTML                                                               |
|                 &lt;a href=&quot;https://github.com/posthtml/posthtml-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://posthtml.github.io/posthtml/logo.svg&quot;&gt;&lt;/a&gt;                 | ![posthtml-npm] | ![posthtml-size] | Loads and transforms a HTML file using [PostHTML](https://github.com/posthtml/posthtml) |
|             &lt;a href=&quot;https://github.com/pcardune/handlebars-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/handlebars-1.svg&quot;&gt;&lt;/a&gt;             |   ![hbs-npm]    |   ![hbs-size]    | Compiles Handlebars to HTML                                                             |

[html-npm]: https://img.shields.io/npm/v/html-loader.svg
[html-size]: https://packagephobia.com/badge?p=html-loader
[pug-npm]: https://img.shields.io/npm/v/pug-loader.svg
[pug-size]: https://packagephobia.com/badge?p=pug-loader
[pug3-npm]: https://img.shields.io/npm/v/@webdiscus/pug-loader.svg
[pug3-size]: https://packagephobia.com/badge?p=@webdiscus/pug-loader
[jade-npm]: https://img.shields.io/npm/v/jade-loader.svg
[jade-size]: https://packagephobia.com/badge?p=jade-loader
[md-npm]: https://img.shields.io/npm/v/markdown-loader.svg
[md-size]: https://packagephobia.com/badge?p=markdown-loader
[posthtml-npm]: https://img.shields.io/npm/v/posthtml-loader.svg
[posthtml-size]: https://packagephobia.com/badge?p=posthtml-loader
[hbs-npm]: https://img.shields.io/npm/v/handlebars-loader.svg
[hbs-size]: https://packagephobia.com/badge?p=handlebars-loader

#### Styling

|                                                                     Name                                                                      |     Status     |  Install Size   | Description                                                              |
| :-------------------------------------------------------------------------------------------------------------------------------------------: | :------------: | :-------------: | :----------------------------------------------------------------------- |
|                                    &lt;a href=&quot;https://github.com/webpack-contrib/style-loader&quot;&gt;`&lt;style&gt;`&lt;/a&gt;                                    |  ![style-npm]  |  ![style-size]  | Add exports of a module as style to DOM                                  |
|  &lt;a href=&quot;https://github.com/webpack-contrib/css-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/css-3.svg&quot;&gt;&lt;/a&gt;   |   ![css-npm]   |   ![css-size]   | Loads CSS file with resolved imports and returns CSS code                |
| &lt;a href=&quot;https://github.com/webpack-contrib/less-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/less-63.svg&quot;&gt;&lt;/a&gt; |  ![less-npm]   |  ![less-size]   | Loads and compiles a LESS file                                           |
| &lt;a href=&quot;https://github.com/webpack-contrib/sass-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/sass-1.svg&quot;&gt;&lt;/a&gt;  |  ![sass-npm]   |  ![sass-size]   | Loads and compiles a Sass/SCSS file                                      |
|     &lt;a href=&quot;https://github.com/shama/stylus-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/stylus.svg&quot;&gt;&lt;/a&gt;      | ![stylus-npm]  | ![stylus-size]  | Loads and compiles a Stylus file                                         |
|   &lt;a href=&quot;https://github.com/postcss/postcss-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/postcss.svg&quot;&gt;&lt;/a&gt;    | ![postcss-npm] | ![postcss-size] | Loads and transforms a CSS/SSS file using [PostCSS](https://postcss.org) |

[style-npm]: https://img.shields.io/npm/v/style-loader.svg
[style-size]: https://packagephobia.com/badge?p=style-loader
[css-npm]: https://img.shields.io/npm/v/css-loader.svg
[css-size]: https://packagephobia.com/badge?p=css-loader
[less-npm]: https://img.shields.io/npm/v/less-loader.svg
[less-size]: https://packagephobia.com/badge?p=less-loader
[sass-npm]: https://img.shields.io/npm/v/sass-loader.svg
[sass-size]: https://packagephobia.com/badge?p=sass-loader
[stylus-npm]: https://img.shields.io/npm/v/stylus-loader.svg
[stylus-size]: https://packagephobia.com/badge?p=stylus-loader
[postcss-npm]: https://img.shields.io/npm/v/postcss-loader.svg
[postcss-size]: https://packagephobia.com/badge?p=postcss-loader

#### Frameworks

|                                                                             Name                                                                             |     Status     |  Install Size   | Description                                                                                            |
| :----------------------------------------------------------------------------------------------------------------------------------------------------------: | :------------: | :-------------: | :----------------------------------------------------------------------------------------------------- |
|               &lt;a href=&quot;https://github.com/vuejs/vue-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/vue-9.svg&quot;&gt;&lt;/a&gt;               |   ![vue-npm]   |   ![vue-size]   | Loads and compiles Vue Components                                                                      |
|   &lt;a href=&quot;https://github.com/webpack-contrib/polymer-webpack-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/polymer.svg&quot;&gt;&lt;/a&gt;   | ![polymer-npm] | ![polymer-size] | Process HTML &amp; CSS with preprocessor of choice and `require()` Web Components like first-class modules |
| &lt;a href=&quot;https://github.com/TheLarkInn/angular2-template-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/angular-icon-1.svg&quot;&gt;&lt;/a&gt; | ![angular-npm] | ![angular-size] | Loads and compiles Angular 2 Components                                                                |
|              &lt;a href=&quot;https://github.com/riot/webpack-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/riot.svg&quot;&gt;&lt;/a&gt;              |  ![riot-npm]   |  ![riot-size]   | Riot official webpack loader                                                                           |
|          &lt;a href=&quot;https://github.com/sveltejs/svelte-loader&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;48&quot; src=&quot;https://worldvectorlogo.com/logos/svelte-1.svg&quot;&gt;&lt;/a&gt;           | ![svelte-npm]  | ![svelte-size]  | Official Svelte loader                                                                                 |

[vue-npm]: https://img.shields.io/npm/v/vue-loader.svg
[vue-size]: https://packagephobia.com/badge?p=vue-loader
[polymer-npm]: https://img.shields.io/npm/v/polymer-webpack-loader.svg
[polymer-size]: https://packagephobia.com/badge?p=polymer-webpack-loader
[angular-npm]: https://img.shields.io/npm/v/angular2-template-loader.svg
[angular-size]: https://packagephobia.com/badge?p=angular2-template-loader
[riot-npm]: https://img.shields.io/npm/v/riot-tag-loader.svg
[riot-size]: https://packagephobia.com/badge?p=riot-tag-loader
[svelte-npm]: https://img.shields.io/npm/v/svelte-loader.svg
[svelte-size]: https://packagephobia.com/badge?p=svelte-loader

### Performance

Webpack uses async I/O and has multiple caching levels. This makes webpack fast
and incredibly **fast** on incremental compilations.

### Module Formats


... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[rabbitmq/rabbitmq-server]]></title>
            <link>https://github.com/rabbitmq/rabbitmq-server</link>
            <guid>https://github.com/rabbitmq/rabbitmq-server</guid>
            <pubDate>Wed, 18 Jun 2025 00:04:23 GMT</pubDate>
            <description><![CDATA[Open source RabbitMQ: core server and tier 1 (built-in) plugins]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/rabbitmq/rabbitmq-server">rabbitmq/rabbitmq-server</a></h1>
            <p>Open source RabbitMQ: core server and tier 1 (built-in) plugins</p>
            <p>Language: JavaScript</p>
            <p>Stars: 12,883</p>
            <p>Forks: 3,945</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>[![Test](https://github.com/rabbitmq/rabbitmq-server/actions/workflows/test.yaml/badge.svg)](https://github.com/rabbitmq/rabbitmq-server/actions/workflows/test.yaml)

# RabbitMQ Server

[RabbitMQ](https://rabbitmq.com) is a [feature rich](https://www.rabbitmq.com/docs),
multi-protocol messaging and streaming broker. It supports:

 * AMQP 1.0
 * AMQP 0-9-1
 * [RabbitMQ Stream Protocol](https://www.rabbitmq.com/docs/streams)
 * MQTT 3.1, 3.1.1, and 5.0
 * STOMP 1.0 through 1.2
 * [MQTT over WebSocket](https://www.rabbitmq.com/docs/web-mqtt)
 * [STOMP over WebSocket](https://www.rabbitmq.com/docs/web-stomp)
 * AMQP 1.0 over WebSocket (supported in [VMware Tanzu RabbitMQ](https://www.vmware.com/products/app-platform/tanzu-rabbitmq))


## Installation

 * [Currently supported](https://www.rabbitmq.com/release-information) released series
 * [Installation guides](https://www.rabbitmq.com/docs/download) for various platforms
 * [Kubernetes Cluster Operator](https://www.rabbitmq.com/kubernetes/operator/operator-overview)
 * [Changelog](https://www.rabbitmq.com/release-information)
 * [Releases](https://github.com/rabbitmq/rabbitmq-server/releases) on GitHub
 * [Community Support Eligibility Policy](https://github.com/rabbitmq/rabbitmq-server/blob/main/COMMUNITY_SUPPORT.md)
 * [Supported Erlang versions](https://www.rabbitmq.com/docs/which-erlang)


## Tutorials and Documentation

 * [RabbitMQ tutorials](https://www.rabbitmq.com/tutorials) and their [executable versions on GitHub](https://github.com/rabbitmq/rabbitmq-tutorials)
 * [Documentation guides](https://rabbitmq.com/docs/)
 * [RabbitMQ blog](https://blog.rabbitmq.com/)

Some key doc guides include

 * [CLI tools guide](https://www.rabbitmq.com/docs/cli)
 * [Clustering](https://www.rabbitmq.com/docs/clustering) and [Cluster Formation](https://www.rabbitmq.com/docs/cluster-formation)
 * [Configuration guide](https://www.rabbitmq.com/docs/configure)
 * [Client libraries and tools](https://www.rabbitmq.com/client-libraries/devtools)
 * [Monitoring](https://www.rabbitmq.com/docs/monitoring) and [Prometheus/Grafana](https://www.rabbitmq.com/docs/prometheus)
 * [Upgrading](https://www.rabbitmq.com/docs/upgrade)
 * [Kubernetes Cluster Operator](https://www.rabbitmq.com/kubernetes/operator/operator-overview)
 * [Production checklist](https://www.rabbitmq.com/docs/production-checklist)
 * [Quorum queues](https://www.rabbitmq.com/docs/quorum-queues): a replicated, data safety- and consistency-oriented queue type
 * [Streams](https://www.rabbitmq.com/docs/streams): a persistent and replicated append-only log with non-destructive consumer semantics
 * [Runtime Parameters and Policies](https://www.rabbitmq.com/docs/parameters)
 * [Runnable tutorials](https://github.com/rabbitmq/rabbitmq-tutorials/)

RabbitMQ documentation is also [developed on GitHub](https://github.com/rabbitmq/rabbitmq-website/).

## Commercial Features and Support

 * [Commercial editions of RabbitMQ](https://tanzu.vmware.com/rabbitmq)
 * [Commercial edition for Kubernetes](https://docs.vmware.com/en/VMware-RabbitMQ-for-Kubernetes/1/rmq/installation.html)
 * [Commercial support](https://tanzu.vmware.com/rabbitmq/oss) from [Broadcom](https://vmware.com) for open source RabbitMQ

## Getting Help from the Community

Please read the [Community Support Eligibility Policy](https://github.com/rabbitmq/rabbitmq-server/blob/main/COMMUNITY_SUPPORT.md) document
first.

The recommended community forums are

 * [GitHub Discussions](https://github.com/rabbitmq/rabbitmq-server/discussions/)
 * [Community Discord server](https://rabbitmq.com/discord/)
 * `#rabbitmq` on [Libera Chat](https://libera.chat/)


## Contributing

See [CONTRIBUTING.md](./CONTRIBUTING.md) and our [development process overview](https://www.rabbitmq.com/github).

Questions about contributing, internals and so on are very welcome in [GitHub Discussions](https://github.com/rabbitmq/rabbitmq-server/discussions)
or [community Discord server](https://www.rabbitmq.com/discord/) in the `core-and-plugin-dev` channel.


## Licensing

RabbitMQ server is [licensed under the MPL 2.0](LICENSE-MPL-RabbitMQ).

[Community Support Eligibility Policy](https://github.com/rabbitmq/rabbitmq-server/blob/main/COMMUNITY_SUPPORT.md)
document explains the open source RabbitMQ support policy adopted by the RabbitMQ Core Team.


## Building From Source and Packaging

 * [Contributor resources](https://github.com/rabbitmq/contribute)
 * [Building RabbitMQ from Source](https://www.rabbitmq.com/docs/build-server)
 * [Building RabbitMQ Distribution Packages](https://www.rabbitmq.com/docs/build-server)


## Copyright

(c) 2007-2025 Broadcom. All Rights Reserved. The term ‚ÄúBroadcom‚Äù refers to Broadcom Inc. and/or its subsidiaries.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[UnblockNeteaseMusic/server]]></title>
            <link>https://github.com/UnblockNeteaseMusic/server</link>
            <guid>https://github.com/UnblockNeteaseMusic/server</guid>
            <pubDate>Wed, 18 Jun 2025 00:04:22 GMT</pubDate>
            <description><![CDATA[Revive unavailable songs for Netease Cloud Music (Refactored & Enhanced version)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/UnblockNeteaseMusic/server">UnblockNeteaseMusic/server</a></h1>
            <p>Revive unavailable songs for Netease Cloud Music (Refactored & Enhanced version)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 7,038</p>
            <p>Forks: 681</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre>&lt;img src=&quot;https://user-images.githubusercontent.com/26399680/47980314-0e3f1700-e102-11e8-8857-e3436ecc8beb.png&quot; alt=&quot;logo&quot; width=&quot;140&quot; height=&quot;140&quot; align=&quot;right&quot;&gt;

# UnblockNeteaseMusic

Ëß£ÈîÅÁΩëÊòì‰∫ëÈü≥‰πêÂÆ¢Êà∑Á´ØÂèòÁÅ∞Ê≠åÊõ≤

## ÁâπÊÄß

- ‰ΩøÁî® QQ / ËôæÁ±≥ / ÁôæÂ∫¶ / ÈÖ∑Áãó / ÈÖ∑Êàë / Âí™Âíï / JOOX Èü≥Ê∫êÊõøÊç¢ÂèòÁÅ∞Ê≠åÊõ≤ÈìæÊé• (ÈªòËÆ§‰ªÖÂêØÁî®‰∏Ä„ÄÅ‰∫î„ÄÅÂÖ≠)
- ‰∏∫ËØ∑Ê±ÇÂ¢ûÂä† `X-Real-IP` ÂèÇÊï∞Ëß£ÈîÅÊµ∑Â§ñÈôêÂà∂ÔºåÊîØÊåÅÊåáÂÆöÁΩëÊòì‰∫ëÊúçÂä°Âô® IPÔºåÊîØÊåÅËÆæÁΩÆ‰∏äÊ∏∏ HTTP / HTTPS ‰ª£ÁêÜ
- ÂÆåÊï¥ÁöÑÊµÅÈáè‰ª£ÁêÜÂäüËÉΩ (HTTP / HTTPS)ÔºåÂèØÁõ¥Êé•‰Ωú‰∏∫Á≥ªÁªü‰ª£ÁêÜ (ÂêåÊó∂ÊîØÊåÅ PAC)

## ËøêË°å

‰ΩøÁî® npx

```
$ npx @nondanee/unblockneteasemusic
```

Êàñ‰ΩøÁî® Docker

```
$ docker run nondanee/unblockneteasemusic
```

```
$ docker-compose up
```

### ÈÖçÁΩÆÂèÇÊï∞

```
$ unblockneteasemusic -h
usage: unblockneteasemusic [-v] [-p port] [-a address] [-u url] [-f host]
                           [-o source [source ...]] [-t token] [-e url] [-s]
                           [-h]

optional arguments:
  -v, --version                   output the version number
  -p port, --port port            specify server port
  -a address, --address address   specify server host
  -u url, --proxy-url url         request through upstream proxy
  -f host, --force-host host      force the netease server ip
  -o source [source ...], --match-order source [source ...]
                                  set priority of sources
  -t token, --token token         set up proxy authentication
  -e url, --endpoint url          replace virtual endpoint with public host
  -s, --strict                    enable proxy limitation
  -h, --help                      output usage information
```

## ‰ΩøÁî®

**Ë≠¶ÂëäÔºöÊú¨È°πÁõÆ‰∏çÊèê‰æõÁ∫ø‰∏ä demoÔºåËØ∑‰∏çË¶ÅËΩªÊòì‰ø°‰ªª‰ΩøÁî®‰ªñ‰∫∫Êèê‰æõÁöÑÂÖ¨ÂºÄ‰ª£ÁêÜÊúçÂä°Ôºå‰ª•ÂÖçÂèëÁîüÂÆâÂÖ®ÈóÆÈ¢ò**

**Ëã•Â∞ÜÊúçÂä°ÈÉ®ÁΩ≤Âà∞ÂÖ¨ÁΩëÔºåÂº∫ÁÉàÂª∫ËÆÆ‰ΩøÁî®‰∏•Ê†ºÊ®°Âºè (Ê≠§Ê®°Âºè‰∏ã‰ªÖÊîæË°åÁΩëÊòì‰∫ëÈü≥‰πêÊâÄÂ±ûÂüüÂêçÁöÑËØ∑Ê±Ç) `-s`  ÈôêÂà∂‰ª£ÁêÜËåÉÂõ¥ (ÈúÄ‰ΩøÁî® PAC Êàñ hosts)Ôºå~~ÊàñÂêØÁî® Proxy Authentication `-t &lt;name&gt;:&lt;password&gt;` ËÆæÁΩÆ‰ª£ÁêÜÁî®Êà∑ÂêçÂØÜÁ†Å~~ (ÁõÆÂâçÂØÜÁ†ÅËÆ§ËØÅÂú® Windows ÂÆ¢Êà∑Á´ØËÆæÁΩÆÂíå macOS Á≥ªÁªüËÆæÁΩÆÈÉΩÊó†Ê≥ïÁîüÊïàÔºåËØ∑‰∏çË¶Å‰ΩøÁî®)Ôºå‰ª•Èò≤‰ª£ÁêÜË¢´‰ªñ‰∫∫Êª•Áî®**

ÊîØÊåÅ Windows ÂÆ¢Êà∑Á´ØÔºåUWP ÂÆ¢Êà∑Á´ØÔºåAndroid ÂÆ¢Êà∑Á´ØÔºåLinux ÂÆ¢Êà∑Á´Ø (1.2 ÁâàÊú¨‰ª•‰∏äÈúÄË¶ÅËá™Á≠æËØÅ‰π¶ MITMÔºåÂêØÂä®ÂÆ¢Êà∑Á´ØÈúÄË¶ÅÂ¢ûÂä† `--ignore-certificate-errors` ÂèÇÊï∞)ÔºåmacOS ÂÆ¢Êà∑Á´Ø (726 ÁâàÊú¨‰ª•‰∏äÈúÄË¶ÅËá™Á≠æËØÅ‰π¶)ÔºåiOS ÂÆ¢Êà∑Á´Ø (ÈÖçÁΩÆ https endpoint Êàñ‰ΩøÁî®Ëá™Á≠æËØÅ‰π¶) ÂíåÁΩëÈ°µÁâà (ÈúÄË¶ÅËá™Á≠æËØÅ‰π¶ÔºåÈúÄË¶ÅËÑöÊú¨ÈÖçÂêà)

ÁõÆÂâçÈô§ UWP Â§ñÂÖ∂ÂÆÉÂÆ¢Êà∑Á´ØÂùá‰ºòÂÖàËØ∑Ê±Ç HTTPS Êé•Âè£ÔºåÈªòËÆ§ÈÖçÁΩÆ‰∏ãÊú¨‰ª£ÁêÜÂØπÁΩëÊòì‰∫ëÊâÄÊúâ HTTPS API ËøûÊé•ËøîÂõûÁ©∫Êï∞ÊçÆÔºå‰øÉ‰ΩøÂÆ¢Êà∑Á´ØÈôçÁ∫ß‰ΩøÁî® HTTP Êé•Âè£ (Êñ∞Áâà Linux ÂÆ¢Êà∑Á´ØÂíå macOS ÂÆ¢Êà∑Á´ØÂ∑≤Êó†Ê≥ïÈôçÁ∫ß)

Âõ† UWP Â∫îÁî®Â≠òÂú®ÁΩëÁªúÈöîÁ¶ªÔºåÈôêÂà∂ÊµÅÈáèÂèëÈÄÅÂà∞Êú¨Êú∫ÔºåËã•‰ΩøÁî®ÁöÑ‰ª£ÁêÜÂú® localhostÔºåÊàñ‰øÆÊîπÁöÑ hosts ÊåáÂêë localhostÔºåÈúÄ‰∏∫ &quot;ÁΩëÊòì‰∫ëÈü≥‰πê UWP&quot; ÊâãÂä®ÂºÄÂêØ loopback ÊâçËÉΩ‰ΩøÁî®ÔºåËØ∑‰ª•**ÁÆ°ÁêÜÂëòË∫´‰ªΩ**ÊâßË°åÂëΩ‰ª§

```powershell
checknetisolation loopbackexempt -a -n=&quot;1F8B0F94.122165AE053F_j2p0p5q0044a6&quot;
```

### ÊñπÊ≥ï 1. ‰øÆÊîπ hosts

Âêë hosts Êñá‰ª∂Ê∑ªÂä†‰∏§Êù°ËßÑÂàô

```
&lt;Server IP&gt; music.163.com
&lt;Server IP&gt; interface.music.163.com
```

&gt; ‰ΩøÁî®Ê≠§ÊñπÊ≥ïÂøÖÈ°ªÁõëÂê¨ 80 Á´ØÂè£ `-p 80` 
&gt;
&gt; **Ëã•Âú®Êú¨Êú∫ËøêË°åÁ®ãÂ∫è**ÔºåËØ∑ÊåáÂÆöÁΩëÊòì‰∫ëÊúçÂä°Âô® IP `-f xxx.xxx.xxx.xxx` (ÂèØÂú®‰øÆÊîπ hosts ÂâçÈÄöËøá `ping music.163.com` Ëé∑Âæó) **Êàñ** ‰ΩøÁî®‰ª£ÁêÜ `-u http(s)://xxx.xxx.xxx.xxx:xxx`Ôºå‰ª•Èò≤ËØ∑Ê±ÇÊ≠ªÂæ™ÁéØ
&gt;
&gt; **Android ÂÆ¢Êà∑Á´Ø‰∏ã‰øÆÊîπ hosts Êó†Ê≥ïÁõ¥Êé•‰ΩøÁî®**ÔºåÂéüÂõ†ÂíåËß£ÂÜ≥ÊñπÊ≥ïËØ¶ËßÅ[‰∫ëÈü≥‰πêÂÆâÂçìÂèàÊêû‰∫ãÂï¶](https://jixun.moe/post/netease-android-hosts-bypass/)Ôºå[ÂÆâÂçìÂÖç root ÁªïËøáÁΩëÊòì‰∫ëÈü≥‰πê IP ÈôêÂà∂](https://jixun.moe/post/android-block-netease-without-root/)

### ÊñπÊ≥ï 2. ËÆæÁΩÆ‰ª£ÁêÜ

PAC Ëá™Âä®‰ª£ÁêÜËÑöÊú¨Âú∞ÂùÄ `http://&lt;Server Name:PORT&gt;/proxy.pac`

ÂÖ®Â±Ä‰ª£ÁêÜÂú∞ÂùÄÂ°´ÂÜôÊúçÂä°Âô®Âú∞ÂùÄÂíåÁ´ØÂè£Âè∑Âç≥ÂèØ

| Âπ≥Âè∞    | Âü∫Á°ÄËÆæÁΩÆ |
| :------ | :------------------------------- |
| Windows | ËÆæÁΩÆ &gt; Â∑•ÂÖ∑ &gt; Ëá™ÂÆö‰πâ‰ª£ÁêÜ (ÂÆ¢Êà∑Á´ØÂÜÖ) |
| UWP     | Windows ËÆæÁΩÆ &gt; ÁΩëÁªúÂíå Internet &gt; ‰ª£ÁêÜ |
| Linux   | Á≥ªÁªüËÆæÁΩÆ &gt; ÁΩëÁªú &gt; ÁΩëÁªú‰ª£ÁêÜ |
| macOS   | Á≥ªÁªüÂÅèÂ•ΩËÆæÁΩÆ &gt; ÁΩëÁªú &gt; È´òÁ∫ß &gt; ‰ª£ÁêÜ |
| Android | WLAN &gt; ‰øÆÊîπÁΩëÁªú &gt; È´òÁ∫ßÈÄâÈ°π &gt; ‰ª£ÁêÜ |
| iOS     | Êó†Á∫øÂ±ÄÂüüÁΩë &gt; HTTP ‰ª£ÁêÜ &gt; ÈÖçÁΩÆ‰ª£ÁêÜ |

&gt; ‰ª£ÁêÜÂ∑•ÂÖ∑ÂíåÊñπÊ≥ïÊúâÂæàÂ§öËØ∑Ëá™Ë°åÊé¢Á¥¢ÔºåÊ¨¢ËøéÂú® issues ËÆ®ËÆ∫

### ‚ú≥ÊñπÊ≥ï 3. Ë∞ÉÁî®Êé•Âè£

‰Ωú‰∏∫‰æùËµñÂ∫ì‰ΩøÁî®

```
$ npm install @nondanee/unblockneteasemusic
```

```javascript
const match = require(&#039;@nondanee/unblockneteasemusic&#039;)

/** 
 * Set proxy or hosts if needed
 */
global.proxy = require(&#039;url&#039;).parse(&#039;http://127.0.0.1:1080&#039;)
global.hosts = {&#039;i.y.qq.com&#039;: &#039;59.37.96.220&#039;}

/**
 * Find matching song from other platforms
 * @param {Number} id netease song id
 * @param {Array&lt;String&gt;||undefined} source support qq, xiami, baidu, kugou, kuwo, migu, joox
 * @return {Promise&lt;Object&gt;}
 */
match(418602084, [&#039;qq&#039;, &#039;kuwo&#039;, &#039;migu&#039;]).then(console.log)
```

## ÊïàÊûú

#### Windows ÂÆ¢Êà∑Á´Ø

&lt;img src=&quot;https://user-images.githubusercontent.com/26399680/60316017-87de8a80-999b-11e9-9381-16d40efbe7f6.png&quot; width=&quot;100%&quot;&gt;

#### UWP ÂÆ¢Êà∑Á´Ø

&lt;img src=&quot;https://user-images.githubusercontent.com/26399680/52215123-5a028780-28ce-11e9-8491-08c4c5dac3b4.png&quot; width=&quot;100%&quot;&gt;

#### Linux ÂÆ¢Êà∑Á´Ø

&lt;img src=&quot;https://user-images.githubusercontent.com/26399680/60316169-18b56600-999c-11e9-8ae5-5cd168b0edae.png&quot; width=&quot;100%&quot;&gt;

#### macOS ÂÆ¢Êà∑Á´Ø

&lt;img src=&quot;https://user-images.githubusercontent.com/26399680/52196035-51418f80-2895-11e9-8f33-78a631cdf151.png&quot; width=&quot;100%&quot;&gt;

#### Android ÂÆ¢Êà∑Á´Ø

&lt;img src=&quot;https://user-images.githubusercontent.com/26399680/57972549-eabd2900-79ce-11e9-8fef-95cb60906298.png&quot; width=&quot;50%&quot;&gt;

#### iOS ÂÆ¢Êà∑Á´Ø

&lt;img src=&quot;https://user-images.githubusercontent.com/26399680/57972440-f90a4580-79cc-11e9-8dbf-6150ee299b9c.jpg&quot; width=&quot;50%&quot;&gt;

## Ëá¥Ë∞¢

ÊÑüË∞¢Â§ß‰Ω¨‰ª¨‰∏∫ÈÄÜÂêë eapi ÊâÄÂÅöÁöÑÂä™Âäõ

‰ΩøÁî®ÁöÑÂÖ∂ÂÆÉÂπ≥Âè∞Èü≥Ê∫ê API Âá∫Ëá™

[trazyn/ieaseMusic](https://github.com/trazyn/ieaseMusic)

[listen1/listen1_chrome_extension](https://github.com/listen1/listen1_chrome_extension)

ÂêëÊâÄÊúâÂêåÁ±ªÈ°πÁõÆËá¥Êï¨

[EraserKing/CloudMusicGear](https://github.com/EraserKing/CloudMusicGear)

[EraserKing/Unblock163MusicClient](https://github.com/EraserKing/Unblock163MusicClient)

[ITJesse/UnblockNeteaseMusic](https://github.com/ITJesse/UnblockNeteaseMusic/)

[bin456789/Unblock163MusicClient-Xposed](https://github.com/bin456789/Unblock163MusicClient-Xposed)

[YiuChoi/Unlock163Music](https://github.com/YiuChoi/Unlock163Music)

[yi-ji/NeteaseMusicAbroad](https://github.com/yi-ji/NeteaseMusicAbroad)

[stomakun/NeteaseReverseLadder](https://github.com/stomakun/NeteaseReverseLadder/)

[fengjueming/unblock-NetEaseMusic](https://github.com/fengjueming/unblock-NetEaseMusic)

[acgotaku/NetEaseMusicWorld](https://github.com/acgotaku/NetEaseMusicWorld)

[mengskysama/163-Cloud-Music-Unlock](https://github.com/mengskysama/163-Cloud-Music-Unlock)

[azureplus/163-music-unlock](https://github.com/azureplus/163-music-unlock)

[typcn/163music-mac-client-unlock](https://github.com/typcn/163music-mac-client-unlock)

## ËÆ∏ÂèØ

The MIT License</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[projectdiscovery/nuclei-templates]]></title>
            <link>https://github.com/projectdiscovery/nuclei-templates</link>
            <guid>https://github.com/projectdiscovery/nuclei-templates</guid>
            <pubDate>Wed, 18 Jun 2025 00:04:21 GMT</pubDate>
            <description><![CDATA[Community curated list of templates for the nuclei engine to find security vulnerabilities.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/projectdiscovery/nuclei-templates">projectdiscovery/nuclei-templates</a></h1>
            <p>Community curated list of templates for the nuclei engine to find security vulnerabilities.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 10,315</p>
            <p>Forks: 2,870</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>

&lt;h1 align=&quot;center&quot;&gt;
Nuclei Templates
&lt;/h1&gt;
&lt;h4 align=&quot;center&quot;&gt;Community curated list of templates for the nuclei engine to find security vulnerabilities in applications.&lt;/h4&gt;


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/projectdiscovery/nuclei-templates&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/pdnuclei&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/pdnuclei.svg?logo=twitter&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://discord.gg/projectdiscovery&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/695645237418131507.svg?logo=discord&quot;&gt;&lt;/a&gt;
&lt;/p&gt;
      
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://nuclei.projectdiscovery.io/templating-guide/&quot;&gt;Documentation&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;#-contributions&quot;&gt;Contributions&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;#-discussion&quot;&gt;Discussion&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;#-community&quot;&gt;Community&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;https://nuclei.projectdiscovery.io/faq/templates/&quot;&gt;FAQs&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;https://discord.gg/projectdiscovery&quot;&gt;Join Discord&lt;/a&gt;
&lt;/p&gt;

----

Templates are the core of the [nuclei scanner](https://github.com/projectdiscovery/nuclei) which powers the actual scanning engine.
This repository stores and houses various templates for the scanner provided by our team, as well as contributed by the community.
We hope that you also contribute by sending templates via **pull requests** or [Github issues](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=submit-template.md&amp;title=%5Bnuclei-template%5D+) to grow the list.


## Nuclei Templates overview


An overview of the nuclei template project, including statistics on unique tags, author, directory, severity, and type of templates. The table below contains the top ten statistics for each matrix; an expanded version of this is [available here](TEMPLATES-STATS.md), and also available in [JSON](TEMPLATES-STATS.json) format for integration.

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt; 

## Nuclei Templates Top 10 statistics

|    TAG    | COUNT |    AUTHOR     | COUNT | DIRECTORY  | COUNT | SEVERITY | COUNT | TYPE | COUNT |
|-----------|-------|---------------|-------|------------|-------|----------|-------|------|-------|
| cve       |  3197 | dhiyaneshdk   |  1865 | http       |  8767 | info     |  4101 | file |   435 |
| panel     |  1317 | daffainfo     |   868 | cloud      |   655 | high     |  2406 | dns  |    25 |
| xss       |  1245 | princechaddha |   806 | file       |   435 | medium   |  2332 |      |       |
| wordpress |  1165 | dwisiswant0   |   805 | dast       |   255 | critical |  1368 |      |       |
| exposure  |  1089 | ritikchaddha  |   617 | workflows  |   202 | low      |   318 |      |       |
| wp-plugin |  1019 | pussycat0x    |   516 | code       |   172 | unknown  |    54 |      |       |
| osint     |   809 | pikpikcu      |   352 | network    |   140 |          |       |      |       |
| tech      |   779 | pdteam        |   304 | javascript |    71 |          |       |      |       |
| lfi       |   770 | ricardomaia   |   249 | ssl        |    38 |          |       |      |       |
| rce       |   754 | pdresearch    |   244 | dns        |    22 |          |       |      |       |

**840 directories, 11107 files**.

&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

üìñ Documentation
-----

Please navigate to https://nuclei.projectdiscovery.io for detailed documentation to **build** new or your own **custom** templates.
We have also added a set of templates to help you understand how things work.

üí™ Contributions
-----

Nuclei-templates is powered by major contributions from the community.
[Template contributions ](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=submit-template.md&amp;title=%5Bnuclei-template%5D+), [Feature Requests](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=feature_request.md&amp;title=%5BFeature%5D+) and [Bug Reports](https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;labels=&amp;template=bug_report.md&amp;title=%5BBug%5D+) are more than welcome.

![Alt](https://repobeats.axiom.co/api/embed/55ee65543bb9a0f9c797626c4e66d472a517d17c.svg &quot;Repobeats analytics image&quot;)

üí¨ Discussion
-----

Have questions / doubts / ideas to discuss?
Feel free to open a discussion on [Github discussions](https://github.com/projectdiscovery/nuclei-templates/discussions) board.

üë®‚Äçüíª Community
-----

You are welcome to join the active [Discord Community](https://discord.gg/projectdiscovery) to discuss directly with project maintainers and share things with others around security and automation.
Additionally, you may follow us on [Twitter](https://twitter.com/pdnuclei) to be updated on all the things about Nuclei.


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/projectdiscovery/nuclei-templates/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=projectdiscovery/nuclei-templates&amp;max=300&quot;&gt;
&lt;/a&gt;
&lt;/p&gt;


Thanks again for your contribution and keeping this community vibrant. :heart:
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[MHSanaei/3x-ui]]></title>
            <link>https://github.com/MHSanaei/3x-ui</link>
            <guid>https://github.com/MHSanaei/3x-ui</guid>
            <pubDate>Wed, 18 Jun 2025 00:04:20 GMT</pubDate>
            <description><![CDATA[Xray panel supporting multi-protocol multi-user expire day & traffic & IP limit (Vmess & Vless & Trojan & ShadowSocks & Wireguard)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/MHSanaei/3x-ui">MHSanaei/3x-ui</a></h1>
            <p>Xray panel supporting multi-protocol multi-user expire day & traffic & IP limit (Vmess & Vless & Trojan & ShadowSocks & Wireguard)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 20,370</p>
            <p>Forks: 4,262</p>
            <p>Stars today: 37 stars today</p>
            <h2>README</h2><pre>[English](/README.md) | [ŸÅÿßÿ±ÿ≥€å](/README.fa_IR.md) | [ÿßŸÑÿπÿ±ÿ®Ÿäÿ©](/README.ar_EG.md) |  [‰∏≠Êñá](/README.zh_CN.md) | [Espa√±ol](/README.es_ES.md) | [–†—É—Å—Å–∫–∏–π](/README.ru_RU.md)

&lt;p align=&quot;center&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./media/3x-ui-dark.png&quot;&gt;
    &lt;img alt=&quot;3x-ui&quot; src=&quot;./media/3x-ui-light.png&quot;&gt;
  &lt;/picture&gt;
&lt;/p&gt;

[![](https://img.shields.io/github/v/release/mhsanaei/3x-ui.svg?style=for-the-badge)](https://github.com/MHSanaei/3x-ui/releases)
[![](https://img.shields.io/github/actions/workflow/status/mhsanaei/3x-ui/release.yml.svg?style=for-the-badge)](https://github.com/MHSanaei/3x-ui/actions)
[![GO Version](https://img.shields.io/github/go-mod/go-version/mhsanaei/3x-ui.svg?style=for-the-badge)](#)
[![Downloads](https://img.shields.io/github/downloads/mhsanaei/3x-ui/total.svg?style=for-the-badge)](https://github.com/MHSanaei/3x-ui/releases/latest)
[![License](https://img.shields.io/badge/license-GPL%20V3-blue.svg?longCache=true&amp;style=for-the-badge)](https://www.gnu.org/licenses/gpl-3.0.en.html)

**3X-UI** ‚Äî advanced, open-source web-based control panel designed for managing Xray-core server. It offers a user-friendly interface for configuring and monitoring various VPN and proxy protocols.

&gt; [!IMPORTANT]
&gt; This project is only for personal using, please do not use it for illegal purposes, please do not use it in a production environment.

As an enhanced fork of the original X-UI project, 3X-UI provides improved stability, broader protocol support, and additional features.

## Quick Start

```bash
bash &lt;(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)
```

For full documentation, please visit the [project Wiki](https://github.com/MHSanaei/3x-ui/wiki).

## A Special Thanks to

- [alireza0](https://github.com/alireza0/)

## Acknowledgment

- [Iran v2ray rules](https://github.com/chocolate4u/Iran-v2ray-rules) (License: **GPL-3.0**): _Enhanced v2ray/xray and v2ray/xray-clients routing rules with built-in Iranian domains and a focus on security and adblocking._
- [Russia v2ray rules](https://github.com/runetfreedom/russia-v2ray-rules-dat) (License: **GPL-3.0**): _This repository contains automatically updated V2Ray routing rules based on data on blocked domains and addresses in Russia._

## Support project

**If this project is helpful to you, you may wish to give it a**:star2:

&lt;p align=&quot;left&quot;&gt;
  &lt;a href=&quot;https://buymeacoffee.com/mhsanaei&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./media/buymeacoffe.png&quot; alt=&quot;Image&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

- USDT (TRC20): `TXncxkvhkDWGts487Pjqq1qT9JmwRUz8CC`
- MATIC (polygon): `0x41C9548675D044c6Bfb425786C765bc37427256A`
- LTC (Litecoin): `ltc1q2ach7x6d2zq0n4l0t4zl7d7xe2s6fs7a3vspwv`

## Stargazers over Time

[![Stargazers over time](https://starchart.cc/MHSanaei/3x-ui.svg?variant=adaptive)](https://starchart.cc/MHSanaei/3x-ui)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[HumanSignal/label-studio]]></title>
            <link>https://github.com/HumanSignal/label-studio</link>
            <guid>https://github.com/HumanSignal/label-studio</guid>
            <pubDate>Wed, 18 Jun 2025 00:04:19 GMT</pubDate>
            <description><![CDATA[Label Studio is a multi-type data labeling and annotation tool with standardized output format]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/HumanSignal/label-studio">HumanSignal/label-studio</a></h1>
            <p>Label Studio is a multi-type data labeling and annotation tool with standardized output format</p>
            <p>Language: JavaScript</p>
            <p>Stars: 22,558</p>
            <p>Forks: 2,819</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre>&lt;img src=&quot;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/ls_github_header.png&quot;/&gt;

![GitHub](https://img.shields.io/github/license/heartexlabs/label-studio?logo=heartex) ![label-studio:build](https://github.com/heartexlabs/label-studio/workflows/label-studio:build/badge.svg) ![GitHub release](https://img.shields.io/github/v/release/heartexlabs/label-studio?include_prereleases)

[Website](https://labelstud.io/) ‚Ä¢ [Docs](https://labelstud.io/guide/) ‚Ä¢ [Twitter](https://twitter.com/heartexlabs) ‚Ä¢ [Join Slack Community &lt;img src=&quot;https://app.heartex.ai/docs/images/slack-mini.png&quot; width=&quot;18px&quot;/&gt;](https://slack.labelstudio.heartex.com/?source=github-1)


## What is Label Studio?

&lt;!-- &lt;a href=&quot;https://labelstud.io/blog/release-130.html&quot;&gt;&lt;img src=&quot;https://github.com/heartexlabs/label-studio/raw/master/docs/themes/htx/source/images/release-130/LS-Hits-v1.3.png&quot; align=&quot;right&quot; /&gt;&lt;/a&gt; --&gt;

Label Studio is an open source data labeling tool. It lets you label data types like audio, text, images, videos, and time series with a simple and straightforward UI and export to various model formats. It can be used to prepare raw data or improve existing training data to get more accurate ML models.

- [Try out Label Studio](#try-out-label-studio)
- [What you get from Label Studio](#what-you-get-from-label-studio)
- [Included templates for labeling data in Label Studio](#included-templates-for-labeling-data-in-label-studio)
- [Set up machine learning models with Label Studio](#set-up-machine-learning-models-with-Label-Studio)
- [Integrate Label Studio with your existing tools](#integrate-label-studio-with-your-existing-tools)

![Gif of Label Studio annotating different types of data](https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/annotation_examples.gif)

Have a custom dataset? You can customize Label Studio to fit your needs. Read an [introductory blog post](https://towardsdatascience.com/introducing-label-studio-a-swiss-army-knife-of-data-labeling-140c1be92881) to learn more. 

## Try out Label Studio

Install Label Studio locally, or deploy it in a cloud instance. Also you can try [Label Studio Teams](https://app.heartex.com).

- [Install locally with Docker](#install-locally-with-docker)
- [Run with Docker Compose (Label Studio + Nginx + PostgreSQL)](#run-with-docker-compose)
- [Install locally with pip](#install-locally-with-pip)
- [Install locally with Anaconda](#install-locally-with-anaconda)
- [Install for local development](#install-for-local-development)
- [Deploy in a cloud instance](#deploy-in-a-cloud-instance)

### Install locally with Docker
Official Label Studio docker image is [here](https://hub.docker.com/r/heartexlabs/label-studio) and it can be downloaded with `docker pull`. 
Run Label Studio in a Docker container and access it at `http://localhost:8080`.


```bash
docker pull heartexlabs/label-studio:latest
docker run -it -p 8080:8080 -v `pwd`/mydata:/label-studio/data heartexlabs/label-studio:latest
```
You can find all the generated assets, including SQLite3 database storage `label_studio.sqlite3` and uploaded files, in the `./mydata` directory.

#### Override default Docker install
You can override the default launch command by appending the new arguments:
```bash
docker run -it -p 8080:8080 -v `pwd`/mydata:/label-studio/data heartexlabs/label-studio:latest label-studio --log-level DEBUG
```

#### Build a local image with Docker
If you want to build a local image, run:
```bash
docker build -t heartexlabs/label-studio:latest .
```

### Run with Docker Compose
Docker Compose script provides production-ready stack consisting of the following components:

- Label Studio
- [Nginx](https://www.nginx.com/) - proxy web server used to load various static data, including uploaded audio, images, etc.
- [PostgreSQL](https://www.postgresql.org/) - production-ready database that replaces less performant SQLite3.

To start using the app from `http://localhost` run this command:
```bash
docker-compose up
```

### Install locally with pip

```bash
# Requires Python &gt;=3.7 &lt;=3.9
pip install label-studio

# Start the server at http://localhost:8080
label-studio
```

### Install locally with Anaconda

```bash
conda create --name label-studio
conda activate label-studio
pip install label-studio
```

### Install for local development

You can run the latest Label Studio version locally without installing the package with pip. 

```bash
# Install all package dependencies
pip install -e .
# Run database migrations
python label_studio/manage.py migrate
# Start the server in development mode at http://localhost:8080
python label_studio/manage.py runserver
```

### Deploy in a cloud instance

You can deploy Label Studio with one click in Heroku, Microsoft Azure, or Google Cloud Platform: 

[&lt;img src=&quot;https://www.herokucdn.com/deploy/button.svg&quot; height=&quot;30px&quot;&gt;](https://heroku.com/deploy?template=https://github.com/heartexlabs/label-studio/tree/heroku-persistent-pg)
[&lt;img src=&quot;https://aka.ms/deploytoazurebutton&quot; height=&quot;30px&quot;&gt;](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2Fheartexlabs%2Flabel-studio%2Fmaster%2Fazuredeploy.json)
[&lt;img src=&quot;https://deploy.cloud.run/button.svg&quot; height=&quot;30px&quot;&gt;](https://deploy.cloud.run)


#### Apply frontend changes

The frontend part of Label Studio app lies in the `frontend/` folder and written in React JSX. In case you&#039;ve made some changes there, the following commands should be run before building / starting the instance:

```
cd label_studio/frontend/
npm ci
npx webpack
cd ../..
python label_studio/manage.py collectstatic --no-input
```

### Troubleshoot installation
If you see any errors during installation, try to rerun the installation

```bash
pip install --ignore-installed label-studio
```

#### Install dependencies on Windows 
To run Label Studio on Windows, download and install the following wheel packages from [Gohlke builds](https://www.lfd.uci.edu/~gohlke/pythonlibs) to ensure you&#039;re using the correct version of Python:
- [lxml](https://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml)

```bash
# Upgrade pip 
pip install -U pip

# If you&#039;re running Win64 with Python 3.8, install the packages downloaded from Gohlke:
pip install lxml‚Äë4.5.0‚Äëcp38‚Äëcp38‚Äëwin_amd64.whl

# Install label studio
pip install label-studio
```

#### Run test suite
```bash
pip install -r deploy/requirements-test.txt
cd label_studio

# postgres (assumes default postgres user,db,pass)
DJANGO_DB=default DJANGO_SETTINGS_MODULE=core.settings.label_studio python -m pytest -vv -n auto

# sqlite3
DJANGO_DB=sqlite DJANGO_SETTINGS_MODULE=core.settings.label_studio python -m pytest -vv -n auto
```


## What you get from Label Studio

![Screenshot of Label Studio data manager grid view with images](https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/labelstudio-ui.gif)

- **Multi-user labeling** sign up and login, when you create an annotation it&#039;s tied to your account.
- **Multiple projects** to work on all your datasets in one instance.
- **Streamlined design** helps you focus on your task, not how to use the software.
- **Configurable label formats** let you customize the visual interface to meet your specific labeling needs.
- **Support for multiple data types** including images, audio, text, HTML, time-series, and video. 
- **Import from files or from cloud storage** in Amazon AWS S3, Google Cloud Storage, or JSON, CSV, TSV, RAR, and ZIP archives. 
- **Integration with machine learning models** so that you can visualize and compare predictions from different models and perform pre-labeling.
- **Embed it in your data pipeline** REST API makes it easy to make it a part of your pipeline

## Included templates for labeling data in Label Studio 

Label Studio includes a variety of templates to help you label your data, or you can create your own using specifically designed configuration language. The most common templates and use cases for labeling include the following cases:

&lt;img src=&quot;https://raw.githubusercontent.com/heartexlabs/label-studio/master/images/templates-categories.jpg&quot; /&gt;

## Set up machine learning models with Label Studio

Connect your favorite machine learning model using the Label Studio Machine Learning SDK. Follow these steps:

1. Start your own machine learning backend server. See [more detailed instructions](https://github.com/heartexlabs/label-studio-ml-backend).
2. Connect Label Studio to the server on the model page found in project settings.

This lets you:

- **Pre-label** your data using model predictions. 
- Do **online learning** and retrain your model while new annotations are being created. 
- Do **active learning** by labeling only the most complex examples in your data.

## Integrate Label Studio with your existing tools

You can use Label Studio as an independent part of your machine learning workflow or integrate the frontend or backend into your existing tools.  

* Use the [Label Studio Frontend](https://github.com/heartexlabs/label-studio-frontend) as a separate React library. See more in the [Frontend Library documentation](https://labelstud.io/guide/frontend.html). 

## Ecosystem

| Project | Description |
|-|-|
| label-studio | Server, distributed as a pip package |
| [label-studio-frontend](https://github.com/heartexlabs/label-studio-frontend) | React and JavaScript frontend and can run standalone in a web browser or be embedded into your application. |  
| [data-manager](https://github.com/heartexlabs/dm2) | React and JavaScript frontend for managing data. Includes the Label Studio Frontend. Relies on the label-studio server or a custom backend with the expected API methods. | 
| [label-studio-converter](https://github.com/heartexlabs/label-studio-converter) | Encode labels in the format of your favorite machine learning library | 
| [label-studio-transformers](https://github.com/heartexlabs/label-studio-transformers) | Transformers library connected and configured for use with Label Studio |


## Roadmap

Want to use **The Coolest Feature X** but Label Studio doesn&#039;t support it? Check out [our public roadmap](roadmap.md)!

## Citation

```tex
@misc{Label Studio,
  title={{Label Studio}: Data labeling software},
  url={https://github.com/heartexlabs/label-studio},
  note={Open source software available from https://github.com/heartexlabs/label-studio},
  author={
    Maxim Tkachenko and
    Mikhail Malyuk and
    Andrey Holmanyuk and
    Nikolai Liubimov},
  year={2020-2022},
}
```

## License

This software is licensed under the [Apache 2.0 LICENSE](/LICENSE) ¬© [Heartex](https://www.heartex.ai/). 2020-2021

&lt;img src=&quot;https://github.com/heartexlabs/label-studio/blob/master/images/opossum_looking.png?raw=true&quot; title=&quot;Hey everyone!&quot; height=&quot;140&quot; width=&quot;140&quot; /&gt;
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[drawdb-io/drawdb]]></title>
            <link>https://github.com/drawdb-io/drawdb</link>
            <guid>https://github.com/drawdb-io/drawdb</guid>
            <pubDate>Wed, 18 Jun 2025 00:04:18 GMT</pubDate>
            <description><![CDATA[Free, simple, and intuitive online database diagram editor and SQL generator.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/drawdb-io/drawdb">drawdb-io/drawdb</a></h1>
            <p>Free, simple, and intuitive online database diagram editor and SQL generator.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 30,640</p>
            <p>Forks: 2,182</p>
            <p>Stars today: 16 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;sup&gt;Special thanks to:&lt;/sup&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://www.warp.dev/drawdb/&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Warp sponsorship&quot; width=&quot;280&quot; src=&quot;https://github.com/user-attachments/assets/c7f141e7-9751-407d-bb0e-d6f2c487b34f&quot;&gt;
    &lt;br&gt;
    &lt;b&gt;Next-gen AI-powered intelligent terminal for all platforms&lt;/b&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;br/&gt;
&lt;br/&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img width=&quot;64&quot; alt=&quot;drawdb logo&quot; src=&quot;./src/assets/icon-dark.png&quot;&gt;
    &lt;h1&gt;drawDB&lt;/h1&gt;
&lt;/div&gt;

&lt;h3 align=&quot;center&quot;&gt;Free, simple, and intuitive database schema editor and SQL generator.&lt;/h3&gt;

&lt;div align=&quot;center&quot; style=&quot;margin-bottom:12px;&quot;&gt;
    &lt;a href=&quot;https://drawdb.app/&quot; style=&quot;display: flex; align-items: center;&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Start%20building-grey&quot; alt=&quot;drawDB&quot;/&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://discord.gg/BrjZgNrmR6&quot; style=&quot;display: flex; align-items: center;&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/discord/1196658537208758412.svg?label=Join%20the%20Discord&amp;logo=discord&quot; alt=&quot;Discord&quot;/&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://x.com/drawDB_&quot; style=&quot;display: flex; align-items: center;&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Follow%20us%20on%20X-blue?logo=X&quot; alt=&quot;Follow us on X&quot;/&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;h3 align=&quot;center&quot;&gt;&lt;img width=&quot;700&quot; style=&quot;border-radius:5px;&quot; alt=&quot;demo&quot; src=&quot;drawdb.png&quot;&gt;&lt;/h3&gt;

DrawDB is a robust and user-friendly database entity relationship (DBER) editor right in your browser. Build diagrams with a few clicks, export sql scripts, customize your editor, and more without creating an account. See the full set of features [here](https://drawdb.app/).

## Getting Started

### Local Development

```bash
git clone https://github.com/drawdb-io/drawdb
cd drawdb
npm install
npm run dev
```

### Build

```bash
git clone https://github.com/drawdb-io/drawdb
cd drawdb
npm install
npm run build
```

### Docker Build

```bash
docker build -t drawdb .
docker run -p 3000:80 drawdb
```

If you wish to work with sharing, set up [server](https://github.com/drawdb-io/drawdb-server) and environment variables according to `.env.sample`. This is not required unless you want to share files.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[swagger-api/swagger-ui]]></title>
            <link>https://github.com/swagger-api/swagger-ui</link>
            <guid>https://github.com/swagger-api/swagger-ui</guid>
            <pubDate>Wed, 18 Jun 2025 00:04:17 GMT</pubDate>
            <description><![CDATA[Swagger UI is a collection of HTML, JavaScript, and CSS assets that dynamically generate beautiful documentation from a Swagger-compliant API.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/swagger-api/swagger-ui">swagger-api/swagger-ui</a></h1>
            <p>Swagger UI is a collection of HTML, JavaScript, and CSS assets that dynamically generate beautiful documentation from a Swagger-compliant API.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 27,477</p>
            <p>Forks: 9,107</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre># &lt;img src=&quot;https://raw.githubusercontent.com/swagger-api/swagger.io/wordpress/images/assets/SWU-logo-clr.png&quot; width=&quot;300&quot;&gt;

[![NPM version](https://badge.fury.io/js/swagger-ui.svg)](http://badge.fury.io/js/swagger-ui)
[![Build Status](https://jenkins.swagger.io/view/OSS%20-%20JavaScript/job/oss-swagger-ui-master/badge/icon?subject=jenkins%20build)](https://jenkins.swagger.io/view/OSS%20-%20JavaScript/job/oss-swagger-ui-master/)
[![npm audit](https://jenkins.swagger.io/buildStatus/icon?job=oss-swagger-ui-security-audit&amp;subject=npm%20audit)](https://jenkins.swagger.io/job/oss-swagger-ui-security-audit/lastBuild/console)
[![total GitHub contributors](https://img.shields.io/github/contributors-anon/swagger-api/swagger-ui.svg)](https://github.com/swagger-api/swagger-ui/graphs/contributors)

[![monthly npm installs](https://img.shields.io/npm/dm/swagger-ui.svg?label=npm%20downloads)](https://www.npmjs.com/package/swagger-ui)
![docker registry](https://img.shields.io/badge/docker-docker.swagger.io%2Fswaggerapi%2Fswagger--ui-blue)
![monthly packagist installs](https://img.shields.io/packagist/dm/swagger-api/swagger-ui.svg?label=packagist%20installs)
[![gzip size](https://img.shields.io/bundlephobia/minzip/swagger-ui.svg?label=gzip%20size)](https://bundlephobia.com/package/swagger-ui)

## Introduction
[Swagger UI](https://swagger.io/tools/swagger-ui/) allows anyone ‚Äî be it your development team or your end consumers ‚Äî to visualize and interact with the API‚Äôs resources without having any of the implementation logic in place. It‚Äôs automatically generated from your OpenAPI (formerly known as Swagger) Specification, with the visual documentation making it easy for back end implementation and client side consumption.

## General
**üëâüèº Want to score an easy open-source contribution?** Check out our [Good first issue](https://github.com/swagger-api/swagger-ui/issues?q=is%3Aissue+is%3Aopen+label%3A%22Good+first+issue%22) label.

**üï∞Ô∏è Looking for the older version of Swagger UI?** Refer to the [*2.x* branch](https://github.com/swagger-api/swagger-ui/tree/2.x).


This repository publishes three different NPM modules:

* [swagger-ui](https://www.npmjs.com/package/swagger-ui) is a traditional npm module intended for use in single-page applications that are capable of resolving dependencies (via Webpack, Browserify, etc.).
* [swagger-ui-dist](https://www.npmjs.com/package/swagger-ui-dist) is a dependency-free module that includes everything you need to serve Swagger UI in a server-side project, or a single-page application that can&#039;t resolve npm module dependencies.
* [swagger-ui-react](https://www.npmjs.com/package/swagger-ui-react) is Swagger UI packaged as a React component for use in React applications.

We strongly suggest that you use `swagger-ui` instead of `swagger-ui-dist` if you&#039;re building a single-page application, since `swagger-ui-dist` is significantly larger.

If you are looking for plain ol&#039; HTML/JS/CSS, [download the latest release](https://github.com/swagger-api/swagger-ui/releases/latest) and copy the contents of the `/dist` folder to your server.


## Compatibility
The OpenAPI Specification has undergone 5 revisions since initial creation in 2010.  Compatibility between Swagger UI and the OpenAPI Specification is as follows:

| Swagger UI Version | Release Date | OpenAPI Spec compatibility                           | Notes                                                                 |
|--------------------|--------------|------------------------------------------------------|-----------------------------------------------------------------------|
| 5.19.0             | 2025-02-17   | 2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.0.4, 3.1.0, 3.1.1 | [tag v5.19.0](https://github.com/swagger-api/swagger-ui/tree/v5.19.0) |
| 5.0.0              | 2023-06-12   | 2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.1.0               | [tag v5.0.0](https://github.com/swagger-api/swagger-ui/tree/v5.0.0)   |
| 4.0.0              | 2021-11-03   | 2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3                      | [tag v4.0.0](https://github.com/swagger-api/swagger-ui/tree/v4.0.0)   |
| 3.18.3             | 2018-08-03   | 2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3                      | [tag v3.18.3](https://github.com/swagger-api/swagger-ui/tree/v3.18.3) |
| 3.0.21             | 2017-07-26   | 2.0                                                  | [tag v3.0.21](https://github.com/swagger-api/swagger-ui/tree/v3.0.21) |
| 2.2.10             | 2017-01-04   | 1.1, 1.2, 2.0                                        | [tag v2.2.10](https://github.com/swagger-api/swagger-ui/tree/v2.2.10) |
| 2.1.5              | 2016-07-20   | 1.1, 1.2, 2.0                                        | [tag v2.1.5](https://github.com/swagger-api/swagger-ui/tree/v2.1.5)   |
| 2.0.24             | 2014-09-12   | 1.1, 1.2                                             | [tag v2.0.24](https://github.com/swagger-api/swagger-ui/tree/v2.0.24) |
| 1.0.13             | 2013-03-08   | 1.1, 1.2                                             | [tag v1.0.13](https://github.com/swagger-api/swagger-ui/tree/v1.0.13) |
| 1.0.1              | 2011-10-11   | 1.0, 1.1                                             | [tag v1.0.1](https://github.com/swagger-api/swagger-ui/tree/v1.0.1)   |

## Anonymized analytics

SwaggerUI uses [Scarf](https://scarf.sh/) to collect [anonymized installation analytics](https://github.com/scarf-sh/scarf-js?tab=readme-ov-file#as-a-user-of-a-package-using-scarf-js-what-information-does-scarf-js-send-about-me). These analytics help support the maintainers of this library and ONLY run during installation. To [opt out](https://github.com/scarf-sh/scarf-js?tab=readme-ov-file#as-a-user-of-a-package-using-scarf-js-how-can-i-opt-out-of-analytics), you can set the `scarfSettings.enabled` field to `false` in your project&#039;s `package.json`:

```
// package.json
{
  // ...
  &quot;scarfSettings&quot;: {
    &quot;enabled&quot;: false
  }
  // ...
}
```

Alternatively, you can set the environment variable `SCARF_ANALYTICS` to `false` as part of the environment that installs your npm packages, e.g., `SCARF_ANALYTICS=false npm install`.

## Documentation

#### Usage
- [Installation](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/installation.md)
- [Configuration](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/configuration.md)
- [CORS](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/cors.md)
- [OAuth2](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/oauth2.md)
- [Deep Linking](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/deep-linking.md)
- [Limitations](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/limitations.md)
- [Version detection](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/usage/version-detection.md)

#### Customization
- [Overview](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/customization/overview.md)
- [Plugin API](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/customization/plugin-api.md)
- [Custom layout](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/customization/custom-layout.md)

#### Development
- [Setting up](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/development/setting-up.md)
- [Scripts](https://github.com/swagger-api/swagger-ui/blob/HEAD/docs/development/scripts.md)

#### Contributing
- [Contributing](https://github.com/swagger-api/.github/blob/HEAD/CONTRIBUTING.md)

##### Integration Tests

You will need JDK of version 7 or higher as instructed here
https://nightwatchjs.org/guide/getting-started/installation.html#install-selenium-server

Integration tests can be run locally with `npm run e2e` - be sure you aren&#039;t running a dev server when testing!

### Browser support
Swagger UI works in the latest versions of Chrome, Safari, Firefox, and Edge.

### Known Issues

To help with the migration, here are the currently known issues with 3.X. This list will update regularly, and will not include features that were not implemented in previous versions.

- Only part of the parameters previously supported are available.
- The JSON Form Editor is not implemented.
- Support for `collectionFormat` is partial.
- l10n (translations) is not implemented.
- Relative path support for external files is not implemented.

## Security contact

Please disclose any security-related issues or vulnerabilities by emailing [security@swagger.io](mailto:security@swagger.io), instead of using the public issue tracker.

## License

SwaggerUI is licensed under [Apache 2.0 license](https://github.com/swagger-api/swagger-ui/blob/master/LICENSE).
SwaggerUI comes with an explicit [NOTICE](https://github.com/swagger-api/swagger-ui/blob/master/NOTICE) file
containing additional legal notices and information.
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[facebook/react]]></title>
            <link>https://github.com/facebook/react</link>
            <guid>https://github.com/facebook/react</guid>
            <pubDate>Wed, 18 Jun 2025 00:04:16 GMT</pubDate>
            <description><![CDATA[The library for web and native user interfaces.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/facebook/react">facebook/react</a></h1>
            <p>The library for web and native user interfaces.</p>
            <p>Language: JavaScript</p>
            <p>Stars: 236,472</p>
            <p>Forks: 48,761</p>
            <p>Stars today: 55 stars today</p>
            <h2>README</h2><pre># [React](https://react.dev/) &amp;middot; [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/facebook/react/blob/main/LICENSE) [![npm version](https://img.shields.io/npm/v/react.svg?style=flat)](https://www.npmjs.com/package/react) [![(Runtime) Build and Test](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml/badge.svg)](https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml) [![(Compiler) TypeScript](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml/badge.svg?branch=main)](https://github.com/facebook/react/actions/workflows/compiler_typescript.yml) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://legacy.reactjs.org/docs/how-to-contribute.html#your-first-pull-request)

React is a JavaScript library for building user interfaces.

* **Declarative:** React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.
* **Component-Based:** Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep the state out of the DOM.
* **Learn Once, Write Anywhere:** We don&#039;t make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using [Node](https://nodejs.org/en) and power mobile apps using [React Native](https://reactnative.dev/).

[Learn how to use React in your project](https://react.dev/learn).

## Installation

React has been designed for gradual adoption from the start, and **you can use as little or as much React as you need**:

* Use [Quick Start](https://react.dev/learn) to get a taste of React.
* [Add React to an Existing Project](https://react.dev/learn/add-react-to-an-existing-project) to use as little or as much React as you need.
* [Create a New React App](https://react.dev/learn/start-a-new-react-project) if you&#039;re looking for a powerful JavaScript toolchain.

## Documentation

You can find the React documentation [on the website](https://react.dev/).

Check out the [Getting Started](https://react.dev/learn) page for a quick overview.

The documentation is divided into several sections:

* [Quick Start](https://react.dev/learn)
* [Tutorial](https://react.dev/learn/tutorial-tic-tac-toe)
* [Thinking in React](https://react.dev/learn/thinking-in-react)
* [Installation](https://react.dev/learn/installation)
* [Describing the UI](https://react.dev/learn/describing-the-ui)
* [Adding Interactivity](https://react.dev/learn/adding-interactivity)
* [Managing State](https://react.dev/learn/managing-state)
* [Advanced Guides](https://react.dev/learn/escape-hatches)
* [API Reference](https://react.dev/reference/react)
* [Where to Get Support](https://react.dev/community)
* [Contributing Guide](https://legacy.reactjs.org/docs/how-to-contribute.html)

You can improve it by sending pull requests to [this repository](https://github.com/reactjs/react.dev).

## Examples

We have several examples [on the website](https://react.dev/). Here is the first one to get you started:

```jsx
import { createRoot } from &#039;react-dom/client&#039;;

function HelloMessage({ name }) {
  return &lt;div&gt;Hello {name}&lt;/div&gt;;
}

const root = createRoot(document.getElementById(&#039;container&#039;));
root.render(&lt;HelloMessage name=&quot;Taylor&quot; /&gt;);
```

This example will render &quot;Hello Taylor&quot; into a container on the page.

You&#039;ll notice that we used an HTML-like syntax; [we call it JSX](https://react.dev/learn#writing-markup-with-jsx). JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML.

## Contributing

The main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.

### [Code of Conduct](https://code.fb.com/codeofconduct)

Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read [the full text](https://code.fb.com/codeofconduct) so that you can understand what actions will and will not be tolerated.

### [Contributing Guide](https://legacy.reactjs.org/docs/how-to-contribute.html)

Read our [contributing guide](https://legacy.reactjs.org/docs/how-to-contribute.html) to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.

### [Good First Issues](https://github.com/facebook/react/labels/good%20first%20issue)

To help you get your feet wet and get you familiar with our contribution process, we have a list of [good first issues](https://github.com/facebook/react/labels/good%20first%20issue) that contain bugs that have a relatively limited scope. This is a great place to get started.

### License

React is [MIT licensed](./LICENSE).
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[mailcow/mailcow-dockerized]]></title>
            <link>https://github.com/mailcow/mailcow-dockerized</link>
            <guid>https://github.com/mailcow/mailcow-dockerized</guid>
            <pubDate>Wed, 18 Jun 2025 00:04:15 GMT</pubDate>
            <description><![CDATA[mailcow: dockerized - üêÆ + üêã = üíï]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mailcow/mailcow-dockerized">mailcow/mailcow-dockerized</a></h1>
            <p>mailcow: dockerized - üêÆ + üêã = üíï</p>
            <p>Language: JavaScript</p>
            <p>Stars: 10,533</p>
            <p>Forks: 1,363</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre># mailcow: dockerized - üêÆ + üêã = üíï

[![Translation status](https://translate.mailcow.email/widgets/mailcow-dockerized/-/translation/svg-badge.svg)](https://translate.mailcow.email/engage/mailcow-dockerized/)
[![Twitter URL](https://img.shields.io/twitter/url/https/twitter.com/mailcow_email.svg?style=social&amp;label=Follow%20%40mailcow_email)](https://twitter.com/mailcow_email)
![Mastodon Follow](https://img.shields.io/mastodon/follow/109388212176073348?domain=https%3A%2F%2Fmailcow.social&amp;label=Follow%20%40doncow%40mailcow.social&amp;link=https%3A%2F%2Fmailcow.social%2F%40doncow)


## Want to support mailcow?

Please [consider a support contract with Servercow](https://www.servercow.de/mailcow?lang=en#support) to support further development. _We_ support _you_ while _you_ support _us_. :)

You can also [get a SAL](https://www.servercow.de/mailcow?lang=en#sal) which is a one-time payment with no liabilities or returning fees.

Or just spread the word: moo.

## Many thanks to our GitHub Sponsors ‚ù§Ô∏è
A big thank you to everyone supporting us on GitHub Sponsors‚Äîyour contributions mean the world to us! Special thanks to the following amazing supporters:

### 100$/Month Sponsors
  &lt;a href=&quot;https://www.colba.net/&quot; target=_blank&gt;&lt;img
    src=&quot;https://avatars.githubusercontent.com/u/204464723&quot; height=&quot;58&quot;
  /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.maehdros.com/&quot; target=_blank&gt;&lt;img
    src=&quot;https://avatars.githubusercontent.com/u/173894712&quot; height=&quot;58&quot;
  /&gt;&lt;/a&gt;

### 50$/Month Sponsors
  &lt;a href=&quot;https://github.com/vnukhr&quot; target=_blank&gt;&lt;img
    src=&quot;https://avatars.githubusercontent.com/u/7805987?s=52&amp;v=4&quot; height=&quot;58&quot;
  /&gt;&lt;/a&gt;

## Info, documentation and support

Please see [the official documentation](https://docs.mailcow.email/) for installation and support instructions. üêÑ

üêõ **If you found a critical security issue, please mail us to [info at servercow.de](mailto:info@servercow.de).**

## Cowmunity

[mailcow community](https://community.mailcow.email)

[Telegram mailcow channel](https://telegram.me/mailcow)

[Telegram mailcow Off-Topic channel](https://t.me/mailcowOfftopic)

[Official ùïè (Twitter) Account](https://twitter.com/mailcow_email)

[Official Mastodon Account](https://mailcow.social/@doncow)

Telegram desktop clients are available for [multiple platforms](https://desktop.telegram.org). You can search the groups history for keywords.

## Misc

**Important**: mailcow makes use of various open-source software. Please assure you agree with their license before using mailcow.
Any part of mailcow itself is released under **GNU General Public License, Version 3**.

mailcow is a registered word mark of The Infrastructure Company GmbH, Parkstr. 42, 47877 Willich, Germany.

The project is managed and maintained by The Infrastructure Company GmbH.

Originated from @andryyy (Andr√©)
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[open-webui/open-webui]]></title>
            <link>https://github.com/open-webui/open-webui</link>
            <guid>https://github.com/open-webui/open-webui</guid>
            <pubDate>Wed, 18 Jun 2025 00:04:14 GMT</pubDate>
            <description><![CDATA[User-friendly AI Interface (Supports Ollama, OpenAI API, ...)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/open-webui/open-webui">open-webui/open-webui</a></h1>
            <p>User-friendly AI Interface (Supports Ollama, OpenAI API, ...)</p>
            <p>Language: JavaScript</p>
            <p>Stars: 99,235</p>
            <p>Forks: 13,090</p>
            <p>Stars today: 154 stars today</p>
            <h2>README</h2><pre># Open WebUI üëã

![GitHub stars](https://img.shields.io/github/stars/open-webui/open-webui?style=social)
![GitHub forks](https://img.shields.io/github/forks/open-webui/open-webui?style=social)
![GitHub watchers](https://img.shields.io/github/watchers/open-webui/open-webui?style=social)
![GitHub repo size](https://img.shields.io/github/repo-size/open-webui/open-webui)
![GitHub language count](https://img.shields.io/github/languages/count/open-webui/open-webui)
![GitHub top language](https://img.shields.io/github/languages/top/open-webui/open-webui)
![GitHub last commit](https://img.shields.io/github/last-commit/open-webui/open-webui?color=red)
[![Discord](https://img.shields.io/badge/Discord-Open_WebUI-blue?logo=discord&amp;logoColor=white)](https://discord.gg/5rJgQTnV4s)
[![](https://img.shields.io/static/v1?label=Sponsor&amp;message=%E2%9D%A4&amp;logo=GitHub&amp;color=%23fe8e86)](https://github.com/sponsors/tjbck)

**Open WebUI is an [extensible](https://docs.openwebui.com/features/plugin/), feature-rich, and user-friendly self-hosted AI platform designed to operate entirely offline.** It supports various LLM runners like **Ollama** and **OpenAI-compatible APIs**, with **built-in inference engine** for RAG, making it a **powerful AI deployment solution**.

![Open WebUI Demo](./demo.gif)

&gt; [!TIP]  
&gt; **Looking for an [Enterprise Plan](https://docs.openwebui.com/enterprise)?** ‚Äì **[Speak with Our Sales Team Today!](mailto:sales@openwebui.com)**
&gt;
&gt; Get **enhanced capabilities**, including **custom theming and branding**, **Service Level Agreement (SLA) support**, **Long-Term Support (LTS) versions**, and **more!**

For more information, be sure to check out our [Open WebUI Documentation](https://docs.openwebui.com/).

## Key Features of Open WebUI ‚≠ê

- üöÄ **Effortless Setup**: Install seamlessly using Docker or Kubernetes (kubectl, kustomize or helm) for a hassle-free experience with support for both `:ollama` and `:cuda` tagged images.

- ü§ù **Ollama/OpenAI API Integration**: Effortlessly integrate OpenAI-compatible APIs for versatile conversations alongside Ollama models. Customize the OpenAI API URL to link with **LMStudio, GroqCloud, Mistral, OpenRouter, and more**.

- üõ°Ô∏è **Granular Permissions and User Groups**: By allowing administrators to create detailed user roles and permissions, we ensure a secure user environment. This granularity not only enhances security but also allows for customized user experiences, fostering a sense of ownership and responsibility amongst users.

- üì± **Responsive Design**: Enjoy a seamless experience across Desktop PC, Laptop, and Mobile devices.

- üì± **Progressive Web App (PWA) for Mobile**: Enjoy a native app-like experience on your mobile device with our PWA, providing offline access on localhost and a seamless user interface.

- ‚úíÔ∏èüî¢ **Full Markdown and LaTeX Support**: Elevate your LLM experience with comprehensive Markdown and LaTeX capabilities for enriched interaction.

- üé§üìπ **Hands-Free Voice/Video Call**: Experience seamless communication with integrated hands-free voice and video call features, allowing for a more dynamic and interactive chat environment.

- üõ†Ô∏è **Model Builder**: Easily create Ollama models via the Web UI. Create and add custom characters/agents, customize chat elements, and import models effortlessly through [Open WebUI Community](https://openwebui.com/) integration.

- üêç **Native Python Function Calling Tool**: Enhance your LLMs with built-in code editor support in the tools workspace. Bring Your Own Function (BYOF) by simply adding your pure Python functions, enabling seamless integration with LLMs.

- üìö **Local RAG Integration**: Dive into the future of chat interactions with groundbreaking Retrieval Augmented Generation (RAG) support. This feature seamlessly integrates document interactions into your chat experience. You can load documents directly into the chat or add files to your document library, effortlessly accessing them using the `#` command before a query.

- üîç **Web Search for RAG**: Perform web searches using providers like `SearXNG`, `Google PSE`, `Brave Search`, `serpstack`, `serper`, `Serply`, `DuckDuckGo`, `TavilySearch`, `SearchApi` and `Bing` and inject the results directly into your chat experience.

- üåê **Web Browsing Capability**: Seamlessly integrate websites into your chat experience using the `#` command followed by a URL. This feature allows you to incorporate web content directly into your conversations, enhancing the richness and depth of your interactions.

- üé® **Image Generation Integration**: Seamlessly incorporate image generation capabilities using options such as AUTOMATIC1111 API or ComfyUI (local), and OpenAI&#039;s DALL-E (external), enriching your chat experience with dynamic visual content.

- ‚öôÔ∏è **Many Models Conversations**: Effortlessly engage with various models simultaneously, harnessing their unique strengths for optimal responses. Enhance your experience by leveraging a diverse set of models in parallel.

- üîê **Role-Based Access Control (RBAC)**: Ensure secure access with restricted permissions; only authorized individuals can access your Ollama, and exclusive model creation/pulling rights are reserved for administrators.

- üåêüåç **Multilingual Support**: Experience Open WebUI in your preferred language with our internationalization (i18n) support. Join us in expanding our supported languages! We&#039;re actively seeking contributors!

- üß© **Pipelines, Open WebUI Plugin Support**: Seamlessly integrate custom logic and Python libraries into Open WebUI using [Pipelines Plugin Framework](https://github.com/open-webui/pipelines). Launch your Pipelines instance, set the OpenAI URL to the Pipelines URL, and explore endless possibilities. [Examples](https://github.com/open-webui/pipelines/tree/main/examples) include **Function Calling**, User **Rate Limiting** to control access, **Usage Monitoring** with tools like Langfuse, **Live Translation with LibreTranslate** for multilingual support, **Toxic Message Filtering** and much more.

- üåü **Continuous Updates**: We are committed to improving Open WebUI with regular updates, fixes, and new features.

Want to learn more about Open WebUI&#039;s features? Check out our [Open WebUI documentation](https://docs.openwebui.com/features) for a comprehensive overview!

## Sponsors üôå

#### Emerald

&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://n8n.io/&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/n8n.png&quot; alt=&quot;n8n&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt; ‚Ä¢ Does your interface have a backend yet?&lt;br&gt;Try &lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://warp.dev/open-webui&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/warp.png&quot; alt=&quot;Warp&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://warp.dev/open-webui&quot;&gt;Warp&lt;/a&gt; ‚Ä¢ The intelligent terminal for developers
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;utm_medium=paid-ad-placement&amp;utm_campaign=OpenWebUI-Docs&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://docs.openwebui.com/sponsors/logos/tailscale.png&quot; alt=&quot;Tailscale&quot; style=&quot;width: 8rem; height: 8rem; border-radius: .75rem;&quot; /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;utm_medium=paid-ad-placement&amp;utm_campaign=OpenWebUI-Docs&quot;&gt;Tailscale&lt;/a&gt; ‚Ä¢ Connect self-hosted AI to any device with Tailscale
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

---

We are incredibly grateful for the generous support of our sponsors. Their contributions help us to maintain and improve our project, ensuring we can continue to deliver quality work to our community. Thank you!

## How to Install üöÄ

### Installation via Python pip üêç

Open WebUI can be installed using pip, the Python package installer. Before proceeding, ensure you&#039;re using **Python 3.11** to avoid compatibility issues.

1. **Install Open WebUI**:
   Open your terminal and run the following command to install Open WebUI:

   ```bash
   pip install open-webui
   ```

2. **Running Open WebUI**:
   After installation, you can start Open WebUI by executing:

   ```bash
   open-webui serve
   ```

This will start the Open WebUI server, which you can access at [http://localhost:8080](http://localhost:8080)

### Quick Start with Docker üê≥

&gt; [!NOTE]  
&gt; Please note that for certain Docker environments, additional configurations might be needed. If you encounter any connection issues, our detailed guide on [Open WebUI Documentation](https://docs.openwebui.com/) is ready to assist you.

&gt; [!WARNING]
&gt; When using Docker to install Open WebUI, make sure to include the `-v open-webui:/app/backend/data` in your Docker command. This step is crucial as it ensures your database is properly mounted and prevents any loss of data.

&gt; [!TIP]  
&gt; If you wish to utilize Open WebUI with Ollama included or CUDA acceleration, we recommend utilizing our official images tagged with either `:cuda` or `:ollama`. To enable CUDA, you must install the [Nvidia CUDA container toolkit](https://docs.nvidia.com/dgx/nvidia-container-runtime-upgrade/) on your Linux/WSL system.

### Installation with Default Configuration

- **If Ollama is on your computer**, use this command:

  ```bash
  docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **If Ollama is on a Different Server**, use this command:

  To connect to Ollama on another server, change the `OLLAMA_BASE_URL` to the server&#039;s URL:

  ```bash
  docker run -d -p 3000:8080 -e OLLAMA_BASE_URL=https://example.com -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

- **To run Open WebUI with Nvidia GPU support**, use this command:

  ```bash
  docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda
  ```

### Installation for OpenAI API Usage Only

- **If you&#039;re only using OpenAI API**, use this command:

  ```bash
  docker run -d -p 3000:8080 -e OPENAI_API_KEY=your_secret_key -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
  ```

### Installing Open WebUI with Bundled Ollama Support

This installation method uses a single container image that bundles Open WebUI with Ollama, allowing for a streamlined setup via a single command. Choose the appropriate command based on your hardware setup:

- **With GPU Support**:
  Utilize GPU resources by running the following command:

  ```bash
  docker run -d -p 3000:8080 --gpus=all -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

- **For CPU Only**:
  If you&#039;re not using a GPU, use this command instead:

  ```bash
  docker run -d -p 3000:8080 -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
  ```

Both commands facilitate a built-in, hassle-free installation of both Open WebUI and Ollama, ensuring that you can get everything up and running swiftly.

After installation, you can access Open WebUI at [http://localhost:3000](http://localhost:3000). Enjoy! üòÑ

### Other Installation Methods

We offer various installation alternatives, including non-Docker native installation methods, Docker Compose, Kustomize, and Helm. Visit our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/) or join our [Discord community](https://discord.gg/5rJgQTnV4s) for comprehensive guidance.

Look at the [Local Development Guide](https://docs.openwebui.com/getting-started/advanced-topics/development) for instructions on setting up a local development environment.

### Troubleshooting

Encountering connection issues? Our [Open WebUI Documentation](https://docs.openwebui.com/troubleshooting/) has got you covered. For further assistance and to join our vibrant community, visit the [Open WebUI Discord](https://discord.gg/5rJgQTnV4s).

#### Open WebUI: Server Connection Error

If you&#039;re experiencing connection issues, it‚Äôs often due to the WebUI docker container not being able to reach the Ollama server at 127.0.0.1:11434 (host.docker.internal:11434) inside the container . Use the `--network=host` flag in your docker command to resolve this. Note that the port changes from 3000 to 8080, resulting in the link: `http://localhost:8080`.

**Example Docker Command**:

```bash
docker run -d --network=host -v open-webui:/app/backend/data -e OLLAMA_BASE_URL=http://127.0.0.1:11434 --name open-webui --restart always ghcr.io/open-webui/open-webui:main
```

### Keeping Your Docker Installation Up-to-Date

In case you want to update your local Docker installation to the latest version, you can do it with [Watchtower](https://containrrr.dev/watchtower/):

```bash
docker run --rm --volume /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --run-once open-webui
```

In the last part of the command, replace `open-webui` with your container name if it is different.

Check our Updating Guide available in our [Open WebUI Documentation](https://docs.openwebui.com/getting-started/updating).

### Using the Dev Branch üåô

&gt; [!WARNING]
&gt; The `:dev` branch contains the latest unstable features and changes. Use it at your own risk as it may have bugs or incomplete features.

If you want to try out the latest bleeding-edge features and are okay with occasional instability, you can use the `:dev` tag like this:

```bash
docker run -d -p 3000:8080 -v open-webui:/app/backend/data --name open-webui --add-host=host.docker.internal:host-gateway --restart always ghcr.io/open-webui/open-webui:dev
```

### Offline Mode

If you are running Open WebUI in an offline environment, you can set the `HF_HUB_OFFLINE` environment variable to `1` to prevent attempts to download models from the internet.

```bash
export HF_HUB_OFFLINE=1
```

## What&#039;s Next? üåü

Discover upcoming features on our roadmap in the [Open WebUI Documentation](https://docs.openwebui.com/roadmap/).

## License üìú

This project is licensed under the [Open WebUI License](LICENSE), a revised BSD-3-Clause license. You receive all the same rights as the classic BSD-3 license: you can use, modify, and distribute the software, including in proprietary and commercial products, with minimal restrictions. The only additional requirement is to preserve the &quot;Open WebUI&quot; branding, as detailed in the LICENSE file. For full terms, see the [LICENSE](LICENSE) document. üìÑ

## Support üí¨

If you have any questions, suggestions, or need assistance, please open an issue or join our
[Open WebUI Discord community](https://discord.gg/5rJgQTnV4s) to connect with us! ü§ù

## Star History

&lt;a href=&quot;https://star-history.com/#open-webui/open-webui&amp;Date&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&amp;theme=dark&quot; /&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
    &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=open-webui/open-webui&amp;type=Date&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

---

Created by [Timothy Jaeryang Baek](https://github.com/tjbck) - Let&#039;s make Open WebUI even more amazing together! üí™
</pre>
          ]]></content:encoded>
            <category>JavaScript</category>
        </item>
    </channel>
</rss>