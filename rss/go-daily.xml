<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for go - Go Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for go.</description>
        <lastBuildDate>Mon, 21 Apr 2025 00:05:44 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[1Panel-dev/1Panel]]></title>
            <link>https://github.com/1Panel-dev/1Panel</link>
            <guid>https://github.com/1Panel-dev/1Panel</guid>
            <pubDate>Mon, 21 Apr 2025 00:05:44 GMT</pubDate>
            <description><![CDATA[üî• 1Panel provides an intuitive web interface and MCP Server to manage websites, files, containers, databases, and LLMs on a Linux server.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/1Panel-dev/1Panel">1Panel-dev/1Panel</a></h1>
            <p>üî• 1Panel provides an intuitive web interface and MCP Server to manage websites, files, containers, databases, and LLMs on a Linux server.</p>
            <p>Language: Go</p>
            <p>Stars: 27,644</p>
            <p>Forks: 2,407</p>
            <p>Stars today: 233 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://1panel.pro&quot;&gt;&lt;img src=&quot;https://resource.1panel.pro/img/1panel-logo.png&quot; alt=&quot;1Panel&quot; width=&quot;300&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;b&gt;Top-Rated Web-based Linux Server Management Tool&lt;/b&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://trendshift.io/repositories/2462&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/2462&quot; alt=&quot;1Panel-dev%2F1Panel | Trendshift&quot; style=&quot;width: 240px; height: auto;&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.gnu.org/licenses/gpl-3.0.html&quot;&gt;&lt;img src=&quot;https://shields.io/github/license/1Panel-dev/1Panel?color=%231890FF&quot; alt=&quot;License: GPL v3&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://app.codacy.com/gh/1Panel-dev/1Panel?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=1Panel-dev/1Panel&amp;utm_campaign=Badge_Grade_Dashboard&quot;&gt;&lt;img src=&quot;https://app.codacy.com/project/badge/Grade/da67574fd82b473992781d1386b937ef&quot; alt=&quot;Codacy&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/bUpUqWqdRr&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/discord/1318846410149335080?logo=discord&amp;labelColor=%20%235462eb&amp;logoColor=%20%23f5f5f5&amp;color=%20%235462eb&quot;
            alt=&quot;chat on Discord&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/1Panel-dev/1Panel/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/1Panel-dev/1Panel&quot; alt=&quot;GitHub release&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/1Panel-dev/1Panel&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/1Panel-dev/1Panel?color=%231890FF&amp;style=flat-square&quot; alt=&quot;Stars&quot;&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;/README.md&quot;&gt;&lt;img alt=&quot;English&quot; src=&quot;https://img.shields.io/badge/English-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/docs/README.zh-Hans.md&quot;&gt;&lt;img alt=&quot;‰∏≠Êñá(ÁÆÄ‰Ωì)&quot; src=&quot;https://img.shields.io/badge/‰∏≠Êñá(ÁÆÄ‰Ωì)-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/docs/README.ja.md&quot;&gt;&lt;img alt=&quot;Êó•Êú¨Ë™û&quot; src=&quot;https://img.shields.io/badge/Êó•Êú¨Ë™û-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/docs/README.pt-br.md&quot;&gt;&lt;img alt=&quot;Portugu√™s (Brasil)&quot; src=&quot;https://img.shields.io/badge/Portugu√™s (Brasil)-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/docs/README.ar.md&quot;&gt;&lt;img alt=&quot;ÿßŸÑÿπÿ±ÿ®Ÿäÿ©&quot; src=&quot;https://img.shields.io/badge/ÿßŸÑÿπÿ±ÿ®Ÿäÿ©-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/docs/README.de.md&quot;&gt;&lt;img alt=&quot;Deutsch&quot; src=&quot;https://img.shields.io/badge/Deutsch-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/docs/README.es.md&quot;&gt;&lt;img alt=&quot;Espa√±ol&quot; src=&quot;https://img.shields.io/badge/Espa√±ol-d9d9d9&quot;&gt;&lt;/a&gt;&lt;br&gt;
  &lt;a href=&quot;/docs/README.fr.md&quot;&gt;&lt;img alt=&quot;fran√ßais&quot; src=&quot;https://img.shields.io/badge/fran√ßais-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/docs/README.ko.md&quot;&gt;&lt;img alt=&quot;ÌïúÍµ≠Ïñ¥&quot; src=&quot;https://img.shields.io/badge/ÌïúÍµ≠Ïñ¥-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/docs/README.id.md&quot;&gt;&lt;img alt=&quot;Bahasa Indonesia&quot; src=&quot;https://img.shields.io/badge/Bahasa Indonesia-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/docs/README.zh-Hant.md&quot;&gt;&lt;img alt=&quot;‰∏≠Êñá(ÁπÅÈ´î)&quot; src=&quot;https://img.shields.io/badge/‰∏≠Êñá(ÁπÅÈ´î)-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/docs/README.tr.md&quot;&gt;&lt;img alt=&quot;T√ºrk√ße&quot; src=&quot;https://img.shields.io/badge/T√ºrk√ße-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/docs/README.ru.md&quot;&gt;&lt;img alt=&quot;–†—É—Å—Å–∫–∏–π&quot; src=&quot;https://img.shields.io/badge/%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;/docs/README.ms.md&quot;&gt;&lt;img alt=&quot;Bahasa Melayu&quot; src=&quot;https://img.shields.io/badge/Bahasa Melayu-d9d9d9&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

------------------------------

1Panel provides an intuitive web interface and MCP Server to manage websites, files, containers, databases, and LLMs on a Linux server.

- **Efficient Management**: Through a user-friendly web graphical interface, 1Panel enables users to effortlessly manage their Linux servers. Key features include host monitoring, file management, database administration, container management, LLMs management.
- **Rapid Website Deployment**: With deep integration of the popular open-source website building software WordPress, 1Panel streamlines the process of domain binding and SSL certificate configuration, all achievable with just one click.
- **Application Store**: 1Panel curates a wide range of high-quality open-source tools and applications, facilitating easy installation and updates for its users.
- **Security and Reliability**: By leveraging containerization and secure application deployment practices, 1Panel minimizes vulnerability exposure. It further enhances security through integrated firewall management and log auditing capabilities.
- **One-Click Backup &amp; Restore**: Data protection is made simple with 1Panel&#039;s one-click backup and restore functionality, supporting various cloud storage solutions to ensure data integrity and availability.
- **MCP Server**: [1Panel MCP Server](https://github.com/1Panel-dev/mcp-1panel) allow user to execute server operations via natural language.

## Quick Start

Execute the script below and follow the prompts to install 1Panel:

```bash
curl -sSL https://resource.1panel.pro/quick_start.sh -o quick_start.sh &amp;&amp; bash quick_start.sh
```

Please refer to our [documentation](https://docs.1panel.pro/quick_start/) for more details.

‰∏≠ÂõΩÁî®Êà∑ËØ∑‰ΩøÁî®Ëøô‰∏™ [ÂÆâË£ÖËÑöÊú¨](https://1panel.cn/docs/installation/online_installation/)ÔºåÂÖ∂Â∫îÁî®Êï∞ÈáèÊØîÂõΩÈôÖÁâàÊú¨Êõ¥‰∏∞ÂØå„ÄÇ

## Screenshot

![UI Display](https://resource.1panel.pro/img/1panel.png)

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=1Panel-dev/1Panel&amp;type=Date)](https://star-history.com/#1Panel-dev/1Panel&amp;Date)

## Pro Edition

Compared to the OSS Edition, 1Panel Pro Edition provides users with a wealth of enhanced features and technical support services. Enhanced features include WAF enhancement, Website monitoring, Mobile APP, custom logo and theme, etc. 

[Click to see Pro Edition details](https://1panel.pro/pricing).

## Security Information

If you discover any security issues, please refer to [SECURITY.md](/SECURITY.md).

## License

Licensed under The GNU General Public License version 3 (GPLv3)  (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at

&lt;https://www.gnu.org/licenses/gpl-3.0.html&gt;

Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[cloudwego/eino]]></title>
            <link>https://github.com/cloudwego/eino</link>
            <guid>https://github.com/cloudwego/eino</guid>
            <pubDate>Mon, 21 Apr 2025 00:05:43 GMT</pubDate>
            <description><![CDATA[The ultimate LLM/AI application development framework in Golang.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/cloudwego/eino">cloudwego/eino</a></h1>
            <p>The ultimate LLM/AI application development framework in Golang.</p>
            <p>Language: Go</p>
            <p>Stars: 2,993</p>
            <p>Forks: 214</p>
            <p>Stars today: 27 stars today</p>
            <h2>README</h2><pre># Eino

![coverage](https://raw.githubusercontent.com/cloudwego/eino/badges/.badges/main/coverage.svg)
[![Release](https://img.shields.io/github/v/release/cloudwego/eino)](https://github.com/cloudwego/eino/releases)
[![WebSite](https://img.shields.io/website?up_message=cloudwego&amp;url=https%3A%2F%2Fwww.cloudwego.io%2F)](https://www.cloudwego.io/)
[![License](https://img.shields.io/github/license/cloudwego/eino)](https://github.com/cloudwego/eino/blob/main/LICENSE)
[![Go Report Card](https://goreportcard.com/badge/github.com/cloudwego/eino)](https://goreportcard.com/report/github.com/cloudwego/eino)
[![OpenIssue](https://img.shields.io/github/issues/cloudwego/eino)](https://github.com/cloudwego/kitex/eino)
[![ClosedIssue](https://img.shields.io/github/issues-closed/cloudwego/eino)](https://github.com/cloudwego/eino/issues?q=is%3Aissue+is%3Aclosed)
![Stars](https://img.shields.io/github/stars/cloudwego/eino)
![Forks](https://img.shields.io/github/forks/cloudwego/eino)

English | [‰∏≠Êñá](README.zh_CN.md)

# Overview

**Eino[&#039;aino]** (pronounced similarly to &quot;I know&quot;) aims to be the ultimate LLM application development framework in Golang. Drawing inspirations from many excellent LLM application development frameworks in the open-source community such as LangChain &amp; LlamaIndex, etc., as well as learning from cutting-edge research and real world applications, Eino offers an LLM application development framework that emphasizes on simplicity, scalability, reliability and effectiveness that better aligns with Golang programming conventions.

What Eino provides are:
- a carefully curated list of **component** abstractions and implementations that can be easily reused and combined to build LLM applications
- a powerful **composition** framework that does the heavy lifting of strong type checking, stream processing, concurrency management, aspect injection, option assignment, etc. for the user.
- a set of meticulously designed **API** that obsesses on simplicity and clarity.
- an ever-growing collection of best practices in the form of bundled **flows** and **examples**.
- a useful set of tools that covers the entire development cycle, from visualized development and debugging to online tracing and evaluation.

With the above arsenal, Eino can standardize, simplify, and improve efficiency at different stages of the AI application development cycle:
![](.github/static/img/eino/eino_concept.jpeg)

# A quick walkthrough

Use a component directly:
```Go
model, _ := openai.NewChatModel(ctx, config) // create an invokable LLM instance
message, _ := model.Generate(ctx, []*Message{
    SystemMessage(&quot;you are a helpful assistant.&quot;),
    UserMessage(&quot;what does the future AI App look like?&quot;)})
```

Of course, you can do that, Eino provides lots of useful components to use out of the box. But you can do more by using orchestration, for three reasons:
- orchestration encapsulates common patterns of LLM application.
- orchestration solves the difficult problem of processing stream response by the LLM.
- orchestration handles type safety, concurrency management, aspect injection and option assignment for you.

Eino provides two set of APIs for orchestration

| API      | Characteristics and usage                                             |
| -------- |-----------------------------------------------------------------------|
| Chain    | Simple chained directed graph that can only go forward.               |
| Graph    | Cyclic or Acyclic directed graph. Powerful and flexible.              |

Let&#039;s create a simple chain: a ChatTemplate followed by a ChatModel.

![](.github/static/img/eino/simple_chain.png)

```Go
chain, _ := NewChain[map[string]any, *Message]().
           AppendChatTemplate(prompt).
           AppendChatModel(model).
           Compile(ctx)

chain.Invoke(ctx, map[string]any{&quot;query&quot;: &quot;what&#039;s your name?&quot;})
```

Now let&#039;s create a graph that uses a ChatModel to generate answer or tool calls, then uses a ToolsNode to execute those tools if needed.

![](.github/static/img/eino/tool_call_graph.png)

```Go
graph := NewGraph[map[string]any, *schema.Message]()

_ = graph.AddChatTemplateNode(&quot;node_template&quot;, chatTpl)
_ = graph.AddChatModelNode(&quot;node_model&quot;, chatModel)
_ = graph.AddToolsNode(&quot;node_tools&quot;, toolsNode)
_ = graph.AddLambdaNode(&quot;node_converter&quot;, takeOne)

_ = graph.AddEdge(START, &quot;node_template&quot;)
_ = graph.AddEdge(&quot;node_template&quot;, &quot;node_model&quot;)
_ = graph.AddBranch(&quot;node_model&quot;, branch)
_ = graph.AddEdge(&quot;node_tools&quot;, &quot;node_converter&quot;)
_ = graph.AddEdge(&quot;node_converter&quot;, END)

compiledGraph, err := graph.Compile(ctx)
if err != nil {
return err
}
out, err := r.Invoke(ctx, map[string]any{&quot;query&quot;:&quot;Beijing&#039;s weather this weekend&quot;})
```

Now let&#039;s create a &#039;ReAct&#039; agent: A ChatModel binds to Tools. It receives input Messages and decides independently whether to call the Tool or output the final result. The execution result of the Tool will again become the input Message for the ChatModel and serve as the context for the next round of independent judgment.

![](.github/static/img/eino/react.png)

We provide a complete implementation for ReAct Agent out of the box in the `flow` package. Check out the code here: [flow/agent/react](https://github.com/cloudwego/eino/blob/main/flow/agent/react/react.go)

Our implementation of ReAct Agent uses Eino&#039;s **graph orchestration** exclusively, which provides the following benefits out of the box:
- Type checking: it makes sure the two nodes&#039; input and output types match at compile time.
- Stream processing: concatenates message stream before passing to chatModel and toolsNode if needed, and copies the stream into callback handlers.
- Concurrency management: the shared state can be safely read and written because the StatePreHandler is concurrency safe.
- Aspect injection: injects callback aspects before and after the execution of ChatModel if the specified ChatModel implementation hasn&#039;t injected itself.
- Option assignment: call options are assigned either globally, to specific component type or to specific node.

For example, you could easily extend the compiled graph with callbacks:
```Go
handler := NewHandlerBuilder().
  OnStartFn(
    func(ctx context.Context, info *RunInfo, input CallbackInput) context.Context) {
        log.Infof(&quot;onStart, runInfo: %v, input: %v&quot;, info, input)
    }).
  OnEndFn(
    func(ctx context.Context, info *RunInfo, output CallbackOutput) context.Context) {
        log.Infof(&quot;onEnd, runInfo: %v, out: %v&quot;, info, output)
    }).
  Build()
  
compiledGraph.Invoke(ctx, input, WithCallbacks(handler))
```

or you could easily assign options to different nodes:
```Go
// assign to All nodes
compiledGraph.Invoke(ctx, input, WithCallbacks(handler))

// assign only to ChatModel nodes
compiledGraph.Invoke(ctx, input, WithChatModelOption(WithTemperature(0.5))

// assign only to node_1
compiledGraph.Invoke(ctx, input, WithCallbacks(handler).DesignateNode(&quot;node_1&quot;))
```

# Key Features

## Rich Components

- Encapsulates common building blocks into **component abstractions**, each have multiple **component implementations** that are ready to be used out of the box.
    - component abstractions such as ChatModel, Tool, ChatTemplate, Retriever, Document Loader, Lambda, etc.
    - each component type has an interface of its own: defined Input &amp; Output Type, defined Option type, and streaming paradigms that make sense.
    - implementations are transparent. Abstractions are all you care about when orchestrating components together.

- Implementations can be nested and captures complex business logic.
    - ReAct Agent, MultiQueryRetriever, Host MultiAgent, etc. They consist of multiple components and non-trivial business logic.
    - They are still transparent from the outside. A MultiQueryRetriever can be used anywhere that accepts a Retriever.

## Powerful Orchestration

- Data flows from Retriever / Document Loaders / ChatTemplate to ChatModel, then flows to Tools and parsed as Final Answer. This directed, controlled flow of data through multiple components can be implemented through **graph orchestration**.
- Component instances are graph nodes, and edges are data flow channels.
- Graph orchestration is powerful and flexible enough to implement complex business logic:
  - type checking, stream processing, concurrency management, aspect injection and option assignment are handled by the framework.
  - branch out execution at runtime, read and write global state, or do field level data mapping using workflow(currently in alpha stage).


## Complete Stream Processing

- Stream processing is important because ChatModel outputs chunks of messages in real time as it generates them. It&#039;s especially important with orchestration because more components need to handle streaming data.
- Eino automatically **concatenates** stream chunks for downstream nodes that only accepts non-stream input, such as ToolsNode.
- Eino automatically **boxes** non stream into stream when stream is needed during graph execution.  
- Eino automatically **merges** multiple streams as they converge into a single downward node.
- Eino automatically **copies** stream as they fan out to different downward node, or is passed to callback handlers.
- Orchestration elements such as **branch** and **state handlers** are also stream aware.
- With these streaming processing abilities, the streaming paradigms of components themselves become transparent to the user. 
- A compiled Graph can run with 4 different streaming paradigms:

| Streaming Paradigm | Explanation                                                                 |
| ------------------ | --------------------------------------------------------------------------- |
| Invoke             | Accepts non-stream type I and returns non-stream type O                     |
| Stream             | Accepts non-stream type I and returns stream type StreamReader[O]           |
| Collect            | Accepts stream type StreamReader[I] and returns non-stream type O           |
| Transform          | Accepts stream type StreamReader[I] and returns stream type StreamReader[O] |

## Highly Extensible Aspects (Callbacks)

- Aspects handle cross-cutting concerns such as logging, tracing, metrics, etc., as well as exposing internal details of component implementations.
- Five aspects are supported: **OnStart, OnEnd, OnError, OnStartWithStreamInput, OnEndWithStreamOutput**.
- Developers can easily create custom callback handlers, add them during graph run via options, and they will be invoked during graph run.
- Graph can also inject aspects to those component implementations that do not support callbacks on their own.

# Eino Framework Structure

![](.github/static/img/eino/eino_framework.jpeg)

The Eino framework consists of several parts:

- Eino(this repo): Contains Eino&#039;s type definitions, streaming mechanism, component abstractions, orchestration capabilities, aspect mechanisms, etc.

- [EinoExt](https://github.com/cloudwego/eino-ext): Component implementations, callback handlers implementations, component usage examples, and various tools such as evaluators, prompt optimizers.

- [Eino Devops](https://github.com/cloudwego/eino-ext/tree/main/devops): visualized developing, visualized debugging
  etc.

- [EinoExamples](https://github.com/cloudwego/eino-examples) is the repo containing example applications and best practices for Eino.

## Detailed Documentation

For learning and using Eino, we provide a comprehensive Eino User Manual to help you quickly understand the concepts in Eino and master the skills of developing AI applications based on Eino. Start exploring through the [Eino User Manual](https://www.cloudwego.io/zh/docs/eino/) now!

For a quick introduction to building AI applications with Eino, we recommend starting with [Eino: Quick Start](https://www.cloudwego.io/zh/docs/eino/quick_start/)

## Dependencies
- Go 1.18 and above.
- Eino relies on [kin-openapi](https://github.com/getkin/kin-openapi) &#039;s OpenAPI JSONSchema implementation. In order to remain compatible with Go 1.18, we have fixed kin-openapi&#039;s version to be v0.118.0.

## Security

If you discover a potential security issue in this project, or think you may
have discovered a security issue, we ask that you notify Bytedance Security via our [security center](https://security.bytedance.com/src) or [vulnerability reporting email](sec@bytedance.com).

Please do **not** create a public GitHub issue.

## Contact US
- How to become a member: [COMMUNITY MEMBERSHIP](https://github.com/cloudwego/community/blob/main/COMMUNITY_MEMBERSHIP.md)
- Issues: [Issues](https://github.com/cloudwego/eino/issues)
- Lark: Scan the QR code below with [Register Feishu](https://www.feishu.cn/en/) to join our CloudWeGo/eino user group.

&amp;ensp;&amp;ensp;&amp;ensp; &lt;img src=&quot;.github/static/img/eino/lark_group_zh.png&quot; alt=&quot;LarkGroup&quot; width=&quot;200&quot;/&gt;

## License

This project is licensed under the [Apache-2.0 License](LICENSE-APACHE).</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[SagerNet/sing-box]]></title>
            <link>https://github.com/SagerNet/sing-box</link>
            <guid>https://github.com/SagerNet/sing-box</guid>
            <pubDate>Mon, 21 Apr 2025 00:05:42 GMT</pubDate>
            <description><![CDATA[The universal proxy platform]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/SagerNet/sing-box">SagerNet/sing-box</a></h1>
            <p>The universal proxy platform</p>
            <p>Language: Go</p>
            <p>Stars: 23,268</p>
            <p>Forks: 2,796</p>
            <p>Stars today: 24 stars today</p>
            <h2>README</h2><pre># sing-box

The universal proxy platform.

[![Packaging status](https://repology.org/badge/vertical-allrepos/sing-box.svg)](https://repology.org/project/sing-box/versions)

## Documentation

https://sing-box.sagernet.org

## License

```
Copyright (C) 2022 by nekohasekai &lt;contact-sagernet@sekai.icu&gt;

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.

In addition, no derivative work may use the name or imply association
with this application without prior consent.
```</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[henrygd/beszel]]></title>
            <link>https://github.com/henrygd/beszel</link>
            <guid>https://github.com/henrygd/beszel</guid>
            <pubDate>Mon, 21 Apr 2025 00:05:41 GMT</pubDate>
            <description><![CDATA[Lightweight server monitoring hub with historical data, docker stats, and alerts.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/henrygd/beszel">henrygd/beszel</a></h1>
            <p>Lightweight server monitoring hub with historical data, docker stats, and alerts.</p>
            <p>Language: Go</p>
            <p>Stars: 10,898</p>
            <p>Forks: 331</p>
            <p>Stars today: 53 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[trustwallet/assets]]></title>
            <link>https://github.com/trustwallet/assets</link>
            <guid>https://github.com/trustwallet/assets</guid>
            <pubDate>Mon, 21 Apr 2025 00:05:40 GMT</pubDate>
            <description><![CDATA[A comprehensive, up-to-date collection of information about several thousands (!) of crypto tokens.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/trustwallet/assets">trustwallet/assets</a></h1>
            <p>A comprehensive, up-to-date collection of information about several thousands (!) of crypto tokens.</p>
            <p>Language: Go</p>
            <p>Stars: 4,855</p>
            <p>Forks: 23,654</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre># Trust Wallet Assets Info

![Check](https://github.com/trustwallet/assets/workflows/Check/badge.svg)

## Overview

Trust Wallet token repository is a comprehensive, up-to-date collection of information about several thousands (!) of crypto tokens.

[Trust Wallet](https://trustwallet.com) uses token logos from this source, alongside a number of other projects.

The repository contains token info from several blockchains, info on dApps, staking validators, etc.
For every token a logo and optional additional information is available (such data is not available on-chain).

Such a large collection can be maintained only through a community effort, so _feel free to add your token_.

&lt;center&gt;&lt;img src=&#039;https://trustwallet.com/assets/images/media/assets/horizontal_blue.png&#039; height=&quot;200&quot;&gt;&lt;/center&gt;

## How to add token

Please note that __brand new tokens are not accepted__,
the projects have to be sound, with information available, and __non-minimal circulation__
(for limit details see &lt;https://developer.trustwallet.com/listing-new-assets/requirements&gt;).

### Assets App

The [Assets web app](https://assets.trustwallet.com) can be used for most new token additions (Github account is needed).

### Quick starter

Details of the repository structure and contribution guidelines are listed on the
[Developers site](https://developer.trustwallet.com/listing-new-assets/new-asset).
Here is a quick starter summary for the most common use case.


## Documentation

For details, see the [Developers site](https://developer.trustwallet.com):

- [Contribution guidelines](https://developer.trustwallet.com/listing-new-assets/repository_details)

- [FAQ](https://developer.trustwallet.com/listing-new-assets/faq)

## Scripts

There are several scripts available for maintainers:

- `make check` -- Execute validation checks; also used in continuous integration.
- `make fix` -- Perform automatic fixes where possible
- `make update-auto` -- Run automatic updates from external sources, executed regularly (GitHub action)
- `make add-token asset_id=c60_t0x4Fabb145d64652a948d72533023f6E7A623C7C53` -- Create `info.json` file as asset template.
- `make add-tokenlist asset_id=c60_t0x4Fabb145d64652a948d72533023f6E7A623C7C53` -- Adds a token to tokenlist.json.
- `make add-tokenlist-extended asset_id=c60_t0x4Fabb145d64652a948d72533023f6E7A623C7C53` -- Adds a token to tokenlist-extended.json.

## On Checks

This repo contains a set of scripts for verification of all the information. Implemented as Golang scripts, available through `make check`, and executed in CI build; checks the whole repo.
There are similar check logic implemented:

- in assets-management app; for checking changed token files in PRs, or when creating a PR.  Checks diffs, can be run from browser environment.
- in merge-fee-bot, which runs as a GitHub app shows result in PR comment. Executes in a non-browser environment.

## Trading pair maintenance

Info on supported trading pairs are stored in `tokenlist.json` files.
Trading pairs can be updated --
from Uniswap/Ethereum and PancakeSwap/Smartchain -- using update script (and checking in changes).
Minimal limit values for trading pair inclusion are set in the [config file](https://github.com/trustwallet/assets/blob/master/.github/assets.config.yaml).
There are also options for force-include and force-exclude in the config.

## Disclaimer

Trust Wallet team allows anyone to submit new assets to this repository. However, this does not mean that we are in direct partnership with all of the projects.

Trust Wallet team will reject projects that are deemed as scam or fraudulent after careful review.
Trust Wallet team reserves the right to change the terms of asset submissions at any time due to changing market conditions, risk of fraud, or any other factors we deem relevant.

Additionally, spam-like behavior, including but not limited to mass distribution of tokens to random addresses will result in the asset being flagged as spam and possible removal from the repository.

## License

The scripts and documentation in this project are released under the [MIT License](LICENSE)
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[usual2970/certimate]]></title>
            <link>https://github.com/usual2970/certimate</link>
            <guid>https://github.com/usual2970/certimate</guid>
            <pubDate>Mon, 21 Apr 2025 00:05:39 GMT</pubDate>
            <description><![CDATA[ÂºÄÊ∫êÁöÑSSLËØÅ‰π¶ÁÆ°ÁêÜÂ∑•ÂÖ∑ÔºåÂèØ‰ª•Â∏ÆÂä©‰Ω†Ëá™Âä®Áî≥ËØ∑„ÄÅÈÉ®ÁΩ≤SSLËØÅ‰π¶ÔºåÂπ∂Âú®ËØÅ‰π¶Âç≥Â∞ÜËøáÊúüÊó∂Ëá™Âä®Áª≠Êúü„ÄÇAn open-source SSL certificate management tool that helps you automatically apply for and deploy SSL certificates, as well as automatically renew them when they are about to expire.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/usual2970/certimate">usual2970/certimate</a></h1>
            <p>ÂºÄÊ∫êÁöÑSSLËØÅ‰π¶ÁÆ°ÁêÜÂ∑•ÂÖ∑ÔºåÂèØ‰ª•Â∏ÆÂä©‰Ω†Ëá™Âä®Áî≥ËØ∑„ÄÅÈÉ®ÁΩ≤SSLËØÅ‰π¶ÔºåÂπ∂Âú®ËØÅ‰π¶Âç≥Â∞ÜËøáÊúüÊó∂Ëá™Âä®Áª≠Êúü„ÄÇAn open-source SSL certificate management tool that helps you automatically apply for and deploy SSL certificates, as well as automatically renew them when they are about to expire.</p>
            <p>Language: Go</p>
            <p>Stars: 6,317</p>
            <p>Forks: 580</p>
            <p>Stars today: 29 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;üîí Certimate&lt;/h1&gt;

&lt;div align=&quot;center&quot;&gt;

[![Stars](https://img.shields.io/github/stars/usual2970/certimate?style=flat)](https://github.com/usual2970/certimate)
[![Forks](https://img.shields.io/github/forks/usual2970/certimate?style=flat)](https://github.com/usual2970/certimate)
[![Docker Pulls](https://img.shields.io/docker/pulls/usual2970/certimate?style=flat)](https://hub.docker.com/r/usual2970/certimate)
[![Release](https://img.shields.io/github/v/release/usual2970/certimate?sort=semver)](https://github.com/usual2970/certimate/releases)
[![License](https://img.shields.io/github/license/usual2970/certimate)](https://mit-license.org/)

&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;

‰∏≠Êñá ÔΩú [English](README_EN.md)

&lt;/div&gt;

---

## üö© È°πÁõÆÁÆÄ‰ªã

ÂÅö‰∏™‰∫∫‰∫ßÂìÅÊàñËÄÖÂú®‰∏≠Â∞è‰ºÅ‰∏öÈáåË¥üË¥£ËøêÁª¥ÁöÑÂêåÂ≠¶Ôºå‰ºöÈÅáÂà∞Ë¶ÅÁÆ°ÁêÜÂ§ö‰∏™ÂüüÂêçÁöÑÊÉÖÂÜµÔºåÈúÄË¶ÅÁªôÂüüÂêçÁî≥ËØ∑ËØÅ‰π¶„ÄÇ‰ΩÜÊòØÊâãÂä®Áî≥ËØ∑ËØÅ‰π¶Êúâ‰ª•‰∏ãÁº∫ÁÇπÔºö

- üò± È∫ªÁÉ¶ÔºöÁî≥ËØ∑ËØÅ‰π¶Âπ∂ÈÉ®ÁΩ≤Âà∞ÊúçÂä°ÁöÑÊµÅÁ®ãËôΩ‰∏çÂ§çÊùÇÔºå‰ΩÜ‰πüÊå∫È∫ªÁÉ¶ÁöÑÔºåÁäπÂÖ∂ÊòØ‰Ω†ÊúâÂ§ö‰∏™ÂüüÂêçÈúÄË¶ÅÁª¥Êä§ÁöÑÊó∂ÂÄô„ÄÇ
- üò≠ ÊòìÂøòÔºöÂè¶Â§ñÂΩìÂâçÂÖçË¥πËØÅ‰π¶ÁöÑÊúâÊïàÊúüÂè™Êúâ 90 Â§©ÔºåËøôÂ∞±Ë¶ÅÊ±Ç‰Ω†ÂÆöÊúüÁöÑÊìç‰ΩúÔºåÂ¢ûÂä†‰∫ÜÂ∑•‰ΩúÈáèÁöÑÂêåÊó∂Ôºå‰Ω†‰πüÂæàÂÆπÊòìÂøòÊéâÁª≠ÊúüÔºå‰ªéËÄåÂØºËá¥ÁΩëÁ´ôËÆøÈóÆ‰∏ç‰∫Ü„ÄÇ

Certimate Â∞±ÊòØ‰∏∫‰∫ÜËß£ÂÜ≥‰∏äËø∞ÈóÆÈ¢òËÄå‰∫ßÁîüÁöÑÔºåÂÆÉÂÖ∑Êúâ‰ª•‰∏ã‰ºòÂäøÔºö

- **Êú¨Âú∞ÈÉ®ÁΩ≤**Ôºö‰∏ÄÈîÆÂÆâË£ÖÔºåÂè™ÈúÄË¶Å‰∏ãËΩΩ‰∫åËøõÂà∂Êñá‰ª∂ÔºåÁÑ∂ÂêéÁõ¥Êé•ËøêË°åÂç≥ÂèØ„ÄÇÂêåÊó∂‰πüÊîØÊåÅ Docker ÈÉ®ÁΩ≤„ÄÅÊ∫ê‰ª£Á†ÅÈÉ®ÁΩ≤Á≠âÊñπÂºè„ÄÇ‚Äã
- **Êï∞ÊçÆÂÆâÂÖ®**ÔºöÁî±‰∫éÊòØÁßÅÊúâÈÉ®ÁΩ≤ÔºåÊâÄÊúâÊï∞ÊçÆÂùáÂ≠òÂÇ®Âú®Ëá™Â∑±ÁöÑÊúçÂä°Âô®‰∏äÔºå‰∏ç‰ºöÁªèËøáÁ¨¨‰∏âÊñπÔºåÁ°Æ‰øùÊï∞ÊçÆÁöÑÈöêÁßÅÂíåÂÆâÂÖ®„ÄÇ‚Äã
- **Êìç‰ΩúÁÆÄÂçï**ÔºöÁÆÄÂçïÈÖçÁΩÆÂç≥ÂèØËΩªÊùæÁî≥ËØ∑ SSL ËØÅ‰π¶Âπ∂ÈÉ®ÁΩ≤Âà∞ÊåáÂÆöÁöÑÁõÆÊ†á‰∏äÔºåÂú®ËØÅ‰π¶Âç≥Â∞ÜËøáÊúüÂâçËá™Âä®Áª≠ÊúüÔºå‰ªéÁî≥ËØ∑ËØÅ‰π¶Âà∞‰ΩøÁî®ËØÅ‰π¶ÂÆåÂÖ®Ëá™Âä®ÂåñÔºåÊó†ÈúÄ‰∫∫Â∑•Êìç‰Ωú„ÄÇ‚Äã

Certimate Êó®Âú®‰∏∫Áî®Êà∑Êèê‰æõ‰∏Ä‰∏™ÂÆâÂÖ®„ÄÅÁÆÄ‰æøÁöÑ SSL ËØÅ‰π¶ÁÆ°ÁêÜËß£ÂÜ≥ÊñπÊ°à„ÄÇ

## üí° ÂäüËÉΩÁâπÊÄß

- ÁÅµÊ¥ªÁöÑÂ∑•‰ΩúÊµÅÁºñÊéíÊñπÂºèÔºåËØÅ‰π¶‰ªéÁî≥ËØ∑Âà∞ÈÉ®ÁΩ≤ÂÆåÂÖ®Ëá™Âä®ÂåñÔºõ
- ÊîØÊåÅÂçïÂüüÂêç„ÄÅÂ§öÂüüÂêç„ÄÅÊ≥õÂüüÂêçËØÅ‰π¶ÔºåÂèØÈÄâ RSA„ÄÅECC Á≠æÂêçÁÆóÊ≥ïÔºõ
- ÊîØÊåÅ PEM„ÄÅPFX„ÄÅJKS Á≠âÂ§öÁßçÊ†ºÂºèËæìÂá∫ËØÅ‰π¶Ôºõ
- ÊîØÊåÅ 20+ ÂüüÂêçÊâòÁÆ°ÂïÜÔºàÂ¶ÇÈòøÈáå‰∫ë„ÄÅËÖæËÆØ‰∫ë„ÄÅCloudflare Á≠âÔºå[ÁÇπÊ≠§Êü•ÁúãÂÆåÊï¥Ê∏ÖÂçï](https://docs.certimate.me/docs/reference/providers#supported-dns-providers)ÔºâÔºõ
- ÊîØÊåÅ 70+ ÈÉ®ÁΩ≤ÁõÆÊ†áÔºàÂ¶Ç Kubernetes„ÄÅCDN„ÄÅWAF„ÄÅË¥üËΩΩÂùáË°°Á≠âÔºå[ÁÇπÊ≠§Êü•ÁúãÂÆåÊï¥Ê∏ÖÂçï](https://docs.certimate.me/docs/reference/providers#supported-host-providers)ÔºâÔºõ
- ÊîØÊåÅÈÇÆ‰ª∂„ÄÅÈíâÈíâ„ÄÅÈ£û‰π¶„ÄÅ‰ºÅ‰∏öÂæÆ‰ø°„ÄÅWebhook Á≠âÂ§öÁßçÈÄöÁü•Ê∏†ÈÅìÔºõ
- ÊîØÊåÅ Let&#039;s Encrypt„ÄÅBuypass„ÄÅGoogle Trust Services„ÄÅSSL.com„ÄÅZeroSSL Á≠âÂ§öÁßç ACME ËØÅ‰π¶È¢ÅÂèëÊú∫ÊûÑÔºõ
- Êõ¥Â§öÁâπÊÄßÁ≠âÂæÖÊé¢Á¥¢„ÄÇ

## ‚è±Ô∏è Âø´ÈÄüÂêØÂä®

**5 ÂàÜÈíüÈÉ®ÁΩ≤ CertimateÔºÅ**

‰ª•‰∫åËøõÂà∂ÈÉ®ÁΩ≤‰∏∫‰æãÔºå‰ªé [GitHub Releases](https://github.com/usual2970/certimate/releases) È°µÈù¢‰∏ãËΩΩÈ¢ÑÂÖàÁºñËØëÂ•ΩÁöÑ‰∫åËøõÂà∂ÂèØÊâßË°åÊñá‰ª∂ÂéãÁº©ÂåÖÔºåËß£ÂéãÁº©ÂêéÂú®ÁªàÁ´Ø‰∏≠ÊâßË°åÔºö

```bash
./certimate serve
```

ÊµèËßàÂô®‰∏≠ËÆøÈóÆ `http://127.0.0.1:8090`„ÄÇ

ÂàùÂßãÁöÑÁÆ°ÁêÜÂëòË¥¶Âè∑ÂèäÂØÜÁ†ÅÔºö

- Ë¥¶Âè∑Ôºö`admin@certimate.fun`
- ÂØÜÁ†ÅÔºö`1234567890`

Âç≥Âàª‰ΩøÁî® Certimate„ÄÇ

Â¶Ç‰Ωï‰ΩøÁî® Docker ÊàñÂÖ∂‰ªñÈÉ®ÁΩ≤ÊñπÂºèËØ∑ÂèÇËÄÉÊñáÊ°£„ÄÇ

## üìÑ ‰ΩøÁî®ÊâãÂÜå

ËØ∑ËÆøÈóÆÊñáÊ°£Á´ô [docs.certimate.me](https://docs.certimate.me/) ‰ª•ÈòÖËØª‰ΩøÁî®ÊâãÂÜå„ÄÇ

Áõ∏ÂÖ≥ÊñáÁ´†Ôºö

- [‰ΩøÁî® CNAME ÂÆåÊàê ACME DNS-01 Ë¥®ËØ¢](https://docs.certimate.me/blog/cname)
- [v0.3.0ÔºöÁ¨¨‰∫å‰∏™‰∏çÂêëÂêéÂÖºÂÆπÁöÑÂ§ßÁâàÊú¨](https://docs.certimate.me/blog/v0.3.0)
- [v0.2.0ÔºöÁ¨¨‰∏Ä‰∏™‰∏çÂêëÂêéÂÖºÂÆπÁöÑÂ§ßÁâàÊú¨](https://docs.certimate.me/blog/v0.2.0)
- [Why Certimate?](https://docs.certimate.me/blog/why-certimate)

## ‚≠ê ËøêË°åÁïåÈù¢

[![Screenshot](https://i.imgur.com/4DAUKEE.gif)](https://www.bilibili.com/video/BV1xockeZEm2)

## ü§ù ÂèÇ‰∏éË¥°ÁåÆ

Certimate ÊòØ‰∏Ä‰∏™ÂÖçË¥π‰∏îÂºÄÊ∫êÁöÑÈ°πÁõÆÔºåÈááÁî® [MIT License](./LICENSE.md)„ÄÇ‰Ω†ÂèØ‰ª•‰ΩøÁî®ÂÆÉÂÅö‰ªª‰Ωï‰Ω†ÊÉ≥ÂÅöÁöÑ‰∫ãÔºåÁîöËá≥ÊääÂÆÉÂΩì‰Ωú‰∏Ä‰∏™‰ªòË¥πÊúçÂä°Êèê‰æõÁªôÁî®Êà∑„ÄÇ

‰Ω†ÂèØ‰ª•ÈÄöËøá‰ª•‰∏ãÊñπÂºèÊù•ÊîØÊåÅ Certimate ÁöÑÂºÄÂèëÔºö

- Êèê‰∫§‰ª£Á†ÅÔºöÂ¶ÇÊûú‰Ω†ÂèëÁé∞‰∫Ü Bug ÊàñÊúâÊñ∞ÁöÑÂäüËÉΩÈúÄÊ±ÇÔºåËÄå‰Ω†ÂèàÊúâÁõ∏ÂÖ≥ÁªèÈ™åÔºåÂèØ‰ª•[Êèê‰∫§‰ª£Á†Å](CONTRIBUTING.md)ÁªôÊàë‰ª¨„ÄÇ
- Êèê‰∫§ IssueÔºöÂäüËÉΩÂª∫ËÆÆÊàñËÄÖ Bug ÂèØ‰ª•[Êèê‰∫§ Issue](https://github.com/usual2970/certimate/issues) ÁªôÊàë‰ª¨„ÄÇ

ÊîØÊåÅÊõ¥Â§öÊèê‰æõÂïÜ„ÄÅUI ÁöÑ‰ºòÂåñÊîπËøõ„ÄÅBug ‰øÆÂ§ç„ÄÅÊñáÊ°£ÂÆåÂñÑÁ≠âÔºåÊ¨¢ËøéÂ§ßÂÆ∂ÂèÇ‰∏éË¥°ÁåÆ„ÄÇ

## ‚õî ÂÖçË¥£Â£∞Êòé

Certimate Âü∫‰∫é [MIT License](https://opensource.org/licenses/MIT) ÂèëÂ∏ÉÔºåÂÆåÂÖ®ÂÖçË¥πÊèê‰æõÔºåÊó®Âú®‚ÄúÊåâÁé∞Áä∂‚Äù‰æõÁî®Êà∑‰ΩøÁî®„ÄÇ‰ΩúËÄÖÂèäË¥°ÁåÆËÄÖ‰∏çÂØπ‰ΩøÁî®Êú¨ËΩØ‰ª∂ÊâÄ‰∫ßÁîüÁöÑ‰ªª‰ΩïÁõ¥Êé•ÊàñÈó¥Êé•ÂêéÊûúÊâøÊãÖË¥£‰ªªÔºåÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÊÄßËÉΩ‰∏ãÈôç„ÄÅÊï∞ÊçÆ‰∏¢Â§±„ÄÅÊúçÂä°‰∏≠Êñ≠„ÄÅÊàñ‰ªª‰ΩïÂÖ∂‰ªñÁ±ªÂûãÁöÑÊçüÂÆ≥„ÄÇ

**Êó†‰ªª‰Ωï‰øùËØÅ**ÔºöÊú¨ËΩØ‰ª∂‰∏çÊèê‰æõ‰ªª‰ΩïÊòéÁ§∫ÊàñÊöóÁ§∫ÁöÑ‰øùËØÅÔºåÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÂØπÁâπÂÆöÁî®ÈÄîÁöÑÈÄÇÁî®ÊÄß„ÄÅÊó†‰æµÊùÉÊÄß„ÄÅÂïÜÁî®ÊÄßÂèäÂèØÈù†ÊÄßÁöÑ‰øùËØÅ„ÄÇ

**Áî®Êà∑Ë¥£‰ªª**Ôºö‰ΩøÁî®Êú¨ËΩØ‰ª∂Âç≥Ë°®Á§∫ÊÇ®ÁêÜËß£Âπ∂ÂêåÊÑèÊâøÊãÖÁî±Ê≠§‰∫ßÁîüÁöÑ‰∏ÄÂàáÈ£éÈô©ÂèäË¥£‰ªª„ÄÇ

## üåê Âä†ÂÖ•Á§æÁæ§

- [Telegram](https://t.me/+ZXphsppxUg41YmVl)
- ÂæÆ‰ø°Áæ§ËÅäÔºàË∂Ö 200 ‰∫∫ÈúÄÈÇÄËØ∑ÂÖ•Áæ§ÔºåÂèØÂÖàÂä†‰ΩúËÄÖÂ•ΩÂèãÔºâ

  &lt;img src=&quot;https://i.imgur.com/8xwsLTA.png&quot; width=&quot;240&quot;/&gt;

## üöÄ Star Ë∂ãÂäøÂõæ

[![Stargazers over time](https://starchart.cc/usual2970/certimate.svg?variant=adaptive)](https://starchart.cc/usual2970/certimate)
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[IceWhaleTech/CasaOS]]></title>
            <link>https://github.com/IceWhaleTech/CasaOS</link>
            <guid>https://github.com/IceWhaleTech/CasaOS</guid>
            <pubDate>Mon, 21 Apr 2025 00:05:38 GMT</pubDate>
            <description><![CDATA[CasaOS - A simple, easy-to-use, elegant open-source Personal Cloud system.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/IceWhaleTech/CasaOS">IceWhaleTech/CasaOS</a></h1>
            <p>CasaOS - A simple, easy-to-use, elegant open-source Personal Cloud system.</p>
            <p>Language: Go</p>
            <p>Stars: 29,418</p>
            <p>Forks: 1,599</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre># CasaOS - Your Personal Cloud 
&lt;!-- Readme i18n links --&gt;
&lt;!-- &gt; English | [‰∏≠Êñá](#) | [Fran√ßais](#) --&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;!-- CasaOS Banner --&gt;
    &lt;picture&gt;
        &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/IceWhaleTech/logo/main/casaos/casaos_banner_dark_night_800x300.png&quot;&gt;
        &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/IceWhaleTech/logo/main/casaos/casaos_banner_twilight_blue_800x300.png&quot;&gt;
        &lt;img alt=&quot;CasaOS&quot; src=&quot;https://raw.githubusercontent.com/IceWhaleTech/logo/main/casaos/casaos_banner_twilight_blue_800x300.png&quot;&gt;
    &lt;/picture&gt;
    &lt;br/&gt;
    &lt;i&gt;Connect with the community, establish autonomy, reduce the cost of SaaS, and MAXIMIZE the potential for a personalized copilot.&lt;/i&gt;
    &lt;br/&gt;
    &lt;br/&gt;
    &lt;!-- CasaOS Badges --&gt;
    &lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;CasaOS Version&quot; src=&quot;https://img.shields.io/github/v/release/IceWhaleTech/CasaOS?color=162453&amp;style=flat-square&amp;label=CasaOS&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/blob/main/LICENSE&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;CasaOS License&quot; src=&quot;https://img.shields.io/github/license/IceWhaleTech/CasaOS?color=162453&amp;style=flat-square&amp;label=License&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/pulls&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;CasaOS Pull Requests&quot; src=&quot;https://img.shields.io/github/issues-pr/IceWhaleTech/CasaOS?color=162453&amp;style=flat-square&amp;label=PRs&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/issues&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;CasaOS Issues&quot; src=&quot;https://img.shields.io/github/issues/IceWhaleTech/CasaOS?color=162453&amp;style=flat-square&amp;label=Issues&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://codecov.io/gh/IceWhaleTech/CasaOS&quot; &gt; 
    &lt;img src=&quot;https://codecov.io/gh/IceWhaleTech/CasaOS/branch/main/graph/badge.svg?token=l9uMKGlkxM&quot;/&gt; 
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/stargazers&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;CasaOS Stargazers&quot; src=&quot;https://img.shields.io/github/stars/IceWhaleTech/CasaOS?color=162453&amp;style=flat-square&amp;label=Stars&quot; /&gt;
    &lt;/a&gt;
    &lt;!-- &lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/releases&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;CasaOS Downloads&quot; src=&quot;https://img.shields.io/github/downloads/IceWhaleTech/CasaOS/total?color=162453&amp;style=flat-square&quot; /&gt;
    &lt;/a&gt; --&gt;
    &lt;br/&gt;
    &lt;!-- CasaOS Community --&gt;
    &lt;a href=&quot;https://discord.gg/knqAbbBbeX&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;IceWhale Discord&quot; src=&quot;https://img.shields.io/discord/884667213326463016?color=162453&amp;style=flat-square&amp;label=Discord&amp;logo=discord&amp;logoColor=fff&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/discussions&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;CasaOS GitHub Discussions&quot; src=&quot;https://img.shields.io/github/discussions/IceWhaleTech/CasaOS?color=162453&amp;style=flat-square&amp;label=Discussions&amp;logo=github&quot; /&gt;
    &lt;/a&gt;
&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt;
&lt;a href=&quot;#credits&quot;&gt;&lt;img alt=&quot;All Contributors&quot; src=&quot;https://img.shields.io/static/v1?label=All%20Contributors&amp;message=15&amp;color=162453&amp;style=flat-square&amp;logo=Handshake&amp;logoColor=fff&quot; /&gt;&lt;/a&gt;
&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt;
    &lt;br/&gt;
    &lt;!-- CasaOS YouTube --&gt;
    &lt;a href=&quot;https://www.youtube.com/channel/UC2zMrUYT17AJhIl9XWZzT8g&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;YouTube Tutorial Views&quot; src=&quot;https://img.shields.io/youtube/channel/views/UC2zMrUYT17AJhIl9XWZzT8g?style=for-the-badge&amp;logo=youtube&amp;logoColor=red&amp;label=YouTube%20Tutorial%20Views&quot; /&gt;
    &lt;/a&gt;
    &lt;br/&gt;
    &lt;!-- CasaOS Links --&gt;
    &lt;a href=&quot;https://www.casaos.io&quot; target=&quot;_blank&quot;&gt;Website&lt;/a&gt; |
    &lt;a href=&quot;http://demo.casaos.io&quot; target=&quot;_blank&quot;&gt;Demo&lt;/a&gt; |
    &lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;
    &lt;br/&gt;
    &lt;br/&gt;
    &lt;!-- CasaOS Snapshots --&gt;
    &lt;kbd&gt;
      &lt;picture&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;snapshot-dark.jpg&quot;&gt;
          &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;snapshot-light.jpg&quot;&gt;
          &lt;img alt=&quot;CasaOS Snapshot&quot; src=&quot;snapshot-light.jpg&quot;&gt;
      &lt;/picture&gt;
    &lt;/kbd&gt;
&lt;/p&gt;

## Why do you need Personal Cloud?

In 2020, the team noticed three important trends:
- The cost of computing power and storage was decreasing fast.
- A part of cloud computing was moving towards edge computing.
- The issue of consumer data asset ownership and attribution had been ignored.

Based on these trends, the team proposed a thought experiment internally: what if personal clouds were available under $100 in next five years? This personal cloud would provide a low-cost data collaboration solution as a personal data center, storing and managing data for creators and small organizations. A distributed collaborative computing network can be formed by personal servers located around the world. It could also control and connect all smart devices, providing cross-ecosystem local intelligent services.

Furthermore, the personal cloud could combine personal data to train personalized AI assistants. The idea is that this technology would be an effective way to solve the issue of consumer data asset ownership and , as well as provide a more affordable and efficient computing solution for individuals and small organizations.

&gt; If you think what we are doing is valuable. Please **give us a star ‚≠ê** and **fork it ü§û**!

## Features

- Friendly UI designed for home scenarios
  - No code, no forms, intuitive, design for humanity
- Multiple hardware and base system support
  - ZimaBoard, NUC, RPi, old computers, whatever is available.
- Selected apps in the app store, one-click installation
  - Nextcloud, HomeAssistant, AdGuard, Jellyfin, *arr and more!
- Easily install numerous Docker apps
  - Over 100,000 apps from the Docker ecosystem can be easily installed
- Elegant drive and file management
  - What you see is what you get. No technical background required.
- Well-designed system/app widgets
  - What you care about, at a glance. Resource usage, app status, and more!

## Getting Started

CasaOS fully supports ZimaBoard, Intel NUC, and Raspberry Pi. Also, more computers and development boards and fully compatible with Ubuntu, Debian, Raspberry Pi OS, and CentOS with one-liner installation.

### Hardware Compatibility

- amd64 / x86-64
- arm64
- armv7

### System Compatibility

Official Support
- Debian 12 (‚úÖ Tested, Recommended)
- Ubuntu Server 20.04 (‚úÖ Tested)
- Raspberry Pi OS (‚úÖ Tested)

Community Support
- Elementary 6.1 (‚úÖ Tested)
- Armbian 22.04 (‚úÖ Tested)
- Alpine (üöß Not Fully Tested Yet)
- OpenWrt (üöß Not Fully Tested Yet)
- ArchLinux (üöß Not Fully Tested Yet)

### Quick Setup CasaOS

Freshly install a system from the list above and run this command:

```sh
wget -qO- https://get.casaos.io | sudo bash
```

or

```sh
curl -fsSL https://get.casaos.io | sudo bash
```

### Update CasaOS

CasaOS can be updated from the User Interface (UI), via `Settings ... Update`.  

Alternatively it can be updated from a terminal session.  To update from a terminal session, it must be done either from a secure shell (ssh) session to the device or from a directly attached terminal and keyboard to the device running CasaOS, this cannot be done from the terminal via the CasaOS User Interface (UI).  To update to the latest release of CasaOS from a terminal session run this command:

```sh
wget -qO- https://get.casaos.io/update | sudo bash
```

or

```sh
curl -fsSL https://get.casaos.io/update | sudo bash
```

To determine version of CasaOS from a terminal session run this command:

```sh
casaos -v
```



### Uninstall CasaOS


v0.3.3 or newer

```sh
casaos-uninstall
```

Before v0.3.3

```sh
curl -fsSL https://get.icewhale.io/casaos-uninstall.sh | sudo bash
```

## Community 

The word Casa comes from the Spanish word for &quot;home&quot;. Project CasaOS originated as a pre-installed system for the crowdfunded product [ZimaBoard](https://www.zimaboard.com) on Kickstarter.

After looking at many systems and software on the market, the team found no server system designed for home scenarios, sadly true.

So, we set out to build this open-source project to develop CasaOS with our own hands, everyone in the community, and you.

We believe that through community-driven collaborative innovation and open communication with global developers, we can reshape the digital home experience like never before.

**A warm welcome for you to get help or share great ideas in the [Discord](https://discord.gg/knqAbbBbeX)!**

[![Discord Card](https://discordapp.com/api/guilds/884667213326463016/widget.png?style=banner2)](https://discord.gg/knqAbbBbeX)

## Contributing

CasaOS is a community-driven open source project and the people involved are CasaOS users. That means CasaOS will always need contributions from community members just like you!

- See &lt;https://wiki.casaos.io/en/contribute&gt; for ways of contributing to CasaOS
- See &lt;https://wiki.casaos.io/en/contribute/development&gt; if you want to be involved in code contribution specifically


## Credits

Many thanks to everyone who has helped CasaOS so far!

Everyone&#039;s contribution is greatly appreciated. ([Emoji Key](https://allcontributors.org/docs/en/emoji-key))

&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt;
&lt;!-- prettier-ignore-start --&gt;
&lt;!-- markdownlint-disable --&gt;
&lt;table&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jerrykuku&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9485680?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ËÄÅÁ´≠Âäõ&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/commits?author=jerrykuku&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/commits?author=jerrykuku&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;#ideas-jerrykuku&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;ü§î&lt;/a&gt; &lt;a href=&quot;#infra-jerrykuku&quot; title=&quot;Infrastructure (Hosting, Build-Tools, etc)&quot;&gt;üöá&lt;/a&gt; &lt;a href=&quot;#maintenance-jerrykuku&quot; title=&quot;Maintenance&quot;&gt;üöß&lt;/a&gt; &lt;a href=&quot;#platform-jerrykuku&quot; title=&quot;Packaging/porting to new platform&quot;&gt;üì¶&lt;/a&gt; &lt;a href=&quot;#question-jerrykuku&quot; title=&quot;Answering Questions&quot;&gt;üí¨&lt;/a&gt; &lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/pulls?q=is%3Apr+reviewed-by%3Ajerrykuku&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/LinkLeong&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13556972?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;link&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/commits?author=LinkLeong&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/commits?author=LinkLeong&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;#ideas-LinkLeong&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;ü§î&lt;/a&gt; &lt;a href=&quot;#infra-LinkLeong&quot; title=&quot;Infrastructure (Hosting, Build-Tools, etc)&quot;&gt;üöá&lt;/a&gt; &lt;a href=&quot;#maintenance-LinkLeong&quot; title=&quot;Maintenance&quot;&gt;üöß&lt;/a&gt; &lt;a href=&quot;#question-LinkLeong&quot; title=&quot;Answering Questions&quot;&gt;üí¨&lt;/a&gt; &lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/pulls?q=is%3Apr+reviewed-by%3ALinkLeong&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/tigerinus&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7172560?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Â§™Êàà&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/commits?author=tigerinus&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/commits?author=tigerinus&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;#ideas-tigerinus&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;ü§î&lt;/a&gt; &lt;a href=&quot;#infra-tigerinus&quot; title=&quot;Infrastructure (Hosting, Build-Tools, etc)&quot;&gt;üöá&lt;/a&gt; &lt;a href=&quot;#maintenance-tigerinus&quot; title=&quot;Maintenance&quot;&gt;üöß&lt;/a&gt; &lt;a href=&quot;#mentoring-tigerinus&quot; title=&quot;Mentoring&quot;&gt;üßë‚Äçüè´&lt;/a&gt; &lt;a href=&quot;#security-tigerinus&quot; title=&quot;Security&quot;&gt;üõ°Ô∏è&lt;/a&gt; &lt;a href=&quot;#question-tigerinus&quot; title=&quot;Answering Questions&quot;&gt;üí¨&lt;/a&gt; &lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/pulls?q=is%3Apr+reviewed-by%3Atigerinus&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Lauren-ED209&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8243355?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Lauren&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#ideas-Lauren-ED209&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;ü§î&lt;/a&gt; &lt;a href=&quot;#fundingFinding-Lauren-ED209&quot; title=&quot;Funding Finding&quot;&gt;üîç&lt;/a&gt; &lt;a href=&quot;#projectManagement-Lauren-ED209&quot; title=&quot;Project Management&quot;&gt;üìÜ&lt;/a&gt; &lt;a href=&quot;#question-Lauren-ED209&quot; title=&quot;Answering Questions&quot;&gt;üí¨&lt;/a&gt; &lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/commits?author=Lauren-ED209&quot; title=&quot;Tests&quot;&gt;‚ö†Ô∏è&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://JohnGuan.Cn&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3358477?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;John Guan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#blog-JohnGuan&quot; title=&quot;Blogposts&quot;&gt;üìù&lt;/a&gt; &lt;a href=&quot;#content-JohnGuan&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/commits?author=JohnGuan&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;#ideas-JohnGuan&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;ü§î&lt;/a&gt; &lt;a href=&quot;#eventOrganizing-JohnGuan&quot; title=&quot;Event Organizing&quot;&gt;üìã&lt;/a&gt; &lt;a href=&quot;#mentoring-JohnGuan&quot; title=&quot;Mentoring&quot;&gt;üßë‚Äçüè´&lt;/a&gt; &lt;a href=&quot;#question-JohnGuan&quot; title=&quot;Answering Questions&quot;&gt;üí¨&lt;/a&gt; &lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/pulls?q=is%3Apr+reviewed-by%3AJohnGuan&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://blog.tippybits.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/17506770?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;David Tippett&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/commits?author=dtaivpp&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;#ideas-dtaivpp&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;ü§î&lt;/a&gt; &lt;a href=&quot;#question-dtaivpp&quot; title=&quot;Answering Questions&quot;&gt;üí¨&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/zarevskaya&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/60230221?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Skaya&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#mentoring-zarevskaya&quot; title=&quot;Mentoring&quot;&gt;üßë‚Äçüè´&lt;/a&gt; &lt;a href=&quot;#question-zarevskaya&quot; title=&quot;Answering Questions&quot;&gt;üí¨&lt;/a&gt; &lt;a href=&quot;#tutorial-zarevskaya&quot; title=&quot;Tutorials&quot;&gt;‚úÖ&lt;/a&gt; &lt;a href=&quot;#translation-zarevskaya&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AuthorShin&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4959043?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;AuthorShin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/commits?author=AuthorShin&quot; title=&quot;Tests&quot;&gt;‚ö†Ô∏è&lt;/a&gt; &lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/issues?q=author%3AAuthorShin&quot; title=&quot;Bug reports&quot;&gt;üêõ&lt;/a&gt; &lt;a href=&quot;#question-AuthorShin&quot; title=&quot;Answering Questions&quot;&gt;üí¨&lt;/a&gt; &lt;a href=&quot;#ideas-AuthorShin&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;ü§î&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/baptiste313&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/93325157?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;baptiste313&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#translation-baptiste313&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/DrMxrcy&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/58747968?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;DrMxrcy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/commits?author=DrMxrcy&quot; title=&quot;Tests&quot;&gt;‚ö†Ô∏è&lt;/a&gt; &lt;a href=&quot;#ideas-DrMxrcy&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;ü§î&lt;/a&gt; &lt;a href=&quot;#question-DrMxrcy&quot; title=&quot;Answering Questions&quot;&gt;üí¨&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Joooost&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/12090673?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Joooost&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#ideas-Joooost&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;ü§î&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://potyarkin.ml&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/334908?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Vitaly Potyarkin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#ideas-sio&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;ü§î&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bearfrieze&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1023813?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Bj√∏rn Friese&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#ideas-bearfrieze&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;ü§î&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Protektor-Desura&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1195496?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Protektor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/issues?q=author%3AProtektor-Desura&quot; title=&quot;Bug reports&quot;&gt;üêõ&lt;/a&gt; &lt;a href=&quot;#ideas-Protektor-Desura&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;ü§î&lt;/a&gt; &lt;a href=&quot;#question-Protektor-Desura&quot; title=&quot;Answering Questions&quot;&gt;üí¨&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/llwaini&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/59589857?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;llwaini&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#projectManagement-llwaini&quot; title=&quot;Project Management&quot;&gt;üìÜ&lt;/a&gt; &lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/commits?author=llwaini&quot; title=&quot;Tests&quot;&gt;‚ö†Ô∏è&lt;/a&gt; &lt;a href=&quot;#tutorial-llwaini&quot; title=&quot;Tutorials&quot;&gt;‚úÖ&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/CorrectRoadH&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/29306285?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;CorrectRoadH&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/commits?author=correctroadh&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/commits?author=correctroadh&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/zhanghengxin&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/24197448?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;zhanghengxin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/commits?author=zhanghengxin&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/IceWhaleTech/CasaOS/commits?author=zhanghengxin&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;!-- markdownlint-restore --&gt;
&lt;!-- prettier-ignore-end --&gt;

&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;

This project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind are welcome!

## Changelog

Detailed changes for each release are documented in the [release notes](https://github.com/IceWhaleTech/CasaOS/releases).

---

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://dashboard.trackgit.com/token/l5q8egi92tfhlxd70l2l&quot;&gt;
        &lt;img src=&quot;https://us-central1-trackgit-analytics.cloudfunctions.net/token/ping/l5q8egi92tfhlxd70l2l&quot; alt=&quot;trackgit-views&quot; /&gt;
    &lt;/a&gt;
&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[opentofu/opentofu]]></title>
            <link>https://github.com/opentofu/opentofu</link>
            <guid>https://github.com/opentofu/opentofu</guid>
            <pubDate>Mon, 21 Apr 2025 00:05:37 GMT</pubDate>
            <description><![CDATA[OpenTofu lets you declaratively manage your cloud infrastructure.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/opentofu/opentofu">opentofu/opentofu</a></h1>
            <p>OpenTofu lets you declaratively manage your cloud infrastructure.</p>
            <p>Language: Go</p>
            <p>Stars: 25,028</p>
            <p>Forks: 988</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre># OpenTofu

- [Manifesto](https://opentofu.org/manifesto)
- [About the OpenTofu fork](https://opentofu.org/fork)
- [How to install](https://opentofu.org/docs/intro/install)
- [Join our Slack community!](https://opentofu.org/slack)
- [Weekly OpenTofu Status Updates](WEEKLY_UPDATES.md)

![](https://raw.githubusercontent.com/opentofu/brand-artifacts/main/full/transparent/SVG/on-dark.svg#gh-dark-mode-only)
![](https://raw.githubusercontent.com/opentofu/brand-artifacts/main/full/transparent/SVG/on-light.svg#gh-light-mode-only)

OpenTofu is an OSS tool for building, changing, and versioning infrastructure safely and efficiently. OpenTofu can manage existing and popular service providers as well as custom in-house solutions.

The key features of OpenTofu are:

- **Infrastructure as Code**: Infrastructure is described using a high-level configuration syntax. This allows a blueprint of your datacenter to be versioned and treated as you would any other code. Additionally, infrastructure can be shared and re-used.

- **Execution Plans**: OpenTofu has a &quot;planning&quot; step where it generates an execution plan. The execution plan shows what OpenTofu will do when you call apply. This lets you avoid any surprises when OpenTofu manipulates infrastructure.

- **Resource Graph**: OpenTofu builds a graph of all your resources, and parallelizes the creation and modification of any non-dependent resources. Because of this, OpenTofu builds infrastructure as efficiently as possible, and operators get insight into dependencies in their infrastructure.

- **Change Automation**: Complex changesets can be applied to your infrastructure with minimal human interaction. With the previously mentioned execution plan and resource graph, you know exactly what OpenTofu will change and in what order, avoiding many possible human errors.

## Getting help and contributing

- Have a question? Post it in [GitHub Discussions](https://github.com/orgs/opentofu/discussions) or on the [OpenTofu Slack](https://opentofu.org/slack/)!
- Want to contribute? Please read the [Contribution Guide](CONTRIBUTING.md).
- Want to stay up to date? Read the [weekly updates](WEEKLY_UPDATES.md), [TSC summary](TSC_SUMMARY.md), or join the [community meetings](https://meet.google.com/xfm-cgms-has) on Wednesdays at 14:30 CET / 8:30 AM Eastern / 5:30 AM Western / 19:00 India time on this link: https://meet.google.com/xfm-cgms-has ([üìÖ calendar link](https://calendar.google.com/calendar/event?eid=NDg0aWl2Y3U1aHFva3N0bGhyMHBhNzdpZmsgY18zZjJkZDNjMWZlMGVmNGU5M2VmM2ZjNDU2Y2EyZGQyMTlhMmU4ZmQ4NWY2YjQwNzUwYWYxNmMzZGYzNzBiZjkzQGc))

&gt; [!TIP]
&gt; For more OpenTofu events, subscribe to the [OpenTofu Events Calendar](https://calendar.google.com/calendar/embed?src=c_3f2dd3c1fe0ef4e93ef3fc456ca2dd219a2e8fd85f6b40750af16c3df370bf93%40group.calendar.google.com)!

## Reporting security vulnerabilities
If you&#039;ve found a vulnerability or a potential vulnerability in OpenTofu please follow [Security Policy](https://github.com/opentofu/opentofu/security/policy). We&#039;ll send a confirmation email to acknowledge your report, and we&#039;ll send an additional email when we&#039;ve identified the issue positively or negatively.

## Reporting possible copyright issues

If you believe you have found any possible copyright or intellectual property issues, please contact liaison@opentofu.org. We&#039;ll send a confirmation email to acknowledge your report.

## Registry Access

In an effort to comply with applicable sanctions, we block access from specific countries of origin.

## License

[Mozilla Public License v2.0](https://github.com/opentofu/opentofu/blob/main/LICENSE)

</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[lima-vm/lima]]></title>
            <link>https://github.com/lima-vm/lima</link>
            <guid>https://github.com/lima-vm/lima</guid>
            <pubDate>Mon, 21 Apr 2025 00:05:36 GMT</pubDate>
            <description><![CDATA[Linux virtual machines, with a focus on running containers]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/lima-vm/lima">lima-vm/lima</a></h1>
            <p>Linux virtual machines, with a focus on running containers</p>
            <p>Language: Go</p>
            <p>Stars: 16,790</p>
            <p>Forks: 649</p>
            <p>Stars today: 31 stars today</p>
            <h2>README</h2><pre>[[üåé**Web site**]](https://lima-vm.io/)
[[üìñ**Documentation**]](https://lima-vm.io/docs/)
[[üë§**Slack (`#lima`)**]](https://slack.cncf.io)

&lt;picture&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;website/static/images/logo-dark.svg&quot;&gt;
  &lt;img alt=&quot;Shows a stylized &#039;Lima&#039; text in bold, modern font&quot; src=&quot;website/static/images/logo.svg&quot; width=400 /&gt;
&lt;/picture&gt;

# Lima: Linux Machines

[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/6505/badge)](https://www.bestpractices.dev/projects/6505)
[![OpenSSF Scorecard](https://api.scorecard.dev/projects/github.com/lima-vm/lima/badge)](https://scorecard.dev/viewer/?uri=github.com/lima-vm/lima)

[Lima](https://lima-vm.io/) launches Linux virtual machines with automatic file sharing and port forwarding (similar to WSL2).

The original goal of Lima was to promote [containerd](https://containerd.io) including [nerdctl (contaiNERD ctl)](https://github.com/containerd/nerdctl)
to Mac users, but Lima can be used for non-container applications as well.

Lima also supports other container engines (Docker, Podman, Kubernetes, etc.) and non-macOS hosts (Linux, NetBSD, etc.).

## Getting started
Set up (on macOS):
```bash
brew install lima
limactl start
```

To run Linux commands:
```bash
lima sudo apt-get install -y neofetch
lima neofetch
```

To run containers with containerd:
```bash
lima nerdctl run --rm hello-world
```

To run containers with Docker:
```bash
limactl start template://docker
export DOCKER_HOST=$(limactl list docker --format &#039;unix://{{.Dir}}/sock/docker.sock&#039;)
docker run --rm hello-world
```

To run containers with Kubernetes:
```bash
limactl start template://k8s
export KUBECONFIG=$(limactl list k8s --format &#039;unix://{{.Dir}}/copied-from-guest/kubeconfig.yaml&#039;)
kubectl apply -f ...
```

See &lt;https://lima-vm.io/docs/&gt; for the further information.

## Community
### Adopters

Container environments:
- [Rancher Desktop](https://rancherdesktop.io/): Kubernetes and container management to the desktop
- [Colima](https://github.com/abiosoft/colima): Docker (and Kubernetes) on macOS with minimal setup
- [Finch](https://github.com/runfinch/finch): Finch is a command line client for local container development
- [Podman Desktop](https://podman-desktop.io/): Podman Desktop GUI has a plug-in for Lima virtual machines

GUI:
- [Lima xbar plugin](https://github.com/unixorn/lima-xbar-plugin): [xbar](https://xbarapp.com/) plugin to start/stop VMs from the menu bar and see their running status.
- [lima-gui](https://github.com/afbjorklund/lima-gui): Qt GUI for Lima

### Communication channels
- [GitHub Discussions](https://github.com/lima-vm/lima/discussions)
- `#lima` channel in the CNCF Slack
  - New account: &lt;https://slack.cncf.io/&gt;
  - Login: &lt;https://cloud-native.slack.com/&gt;

### Code of Conduct
Lima follows the [CNCF Code of Conduct](https://github.com/cncf/foundation/blob/master/code-of-conduct.md).

- - -
**We are a [Cloud Native Computing Foundation](https://cncf.io/) sandbox project.**

&lt;picture&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://www.cncf.io/wp-content/uploads/2022/07/cncf-white-logo.svg&quot;&gt;
  &lt;img src=&quot;https://www.cncf.io/wp-content/uploads/2022/07/cncf-color-bg.svg&quot; width=300 /&gt;
&lt;/picture&gt;

The Linux Foundation¬Æ (TLF) has registered trademarks and uses trademarks. For a list of TLF trademarks, see [Trademark Usage](https://www.linuxfoundation.org/legal/trademark-usage).
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[Kethsar/ytarchive]]></title>
            <link>https://github.com/Kethsar/ytarchive</link>
            <guid>https://github.com/Kethsar/ytarchive</guid>
            <pubDate>Mon, 21 Apr 2025 00:05:35 GMT</pubDate>
            <description><![CDATA[Garbage Youtube livestream downloader]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Kethsar/ytarchive">Kethsar/ytarchive</a></h1>
            <p>Garbage Youtube livestream downloader</p>
            <p>Language: Go</p>
            <p>Stars: 1,390</p>
            <p>Forks: 110</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre># ytarchive

Attempt to archive a given Youtube livestream from the start. This is most useful for streams that have already started and you want to download, but can also be used to wait for a scheduled stream and start downloading as soon as it starts. If you want to download a VOD, I recommend [yt-dlp](https://github.com/yt-dlp/yt-dlp), which is an actively maintained fork of youtube-dl with more features.

## Dependencies

- [FFmpeg](https://ffmpeg.org/) needs to be installed to mux the final file.

## Installation

Download the latest pre-release from [the releases page](https://github.com/Kethsar/ytarchive/releases)

Alternatively, if you have Go properly installed and set up, run `go install github.com/Kethsar/ytarchive@dev`

## Usage

```
usage: ytarchive [OPTIONS] [url] [quality]

	[url] is a youtube livestream URL. If not provided, you will be
	prompted to enter one.

	[quality] is a slash-delimited list of video qualities you want
	to be selected for download, from most to least wanted. If not
	provided, you will be prompted for one, with a list of available
	qualities to choose from. The following values are valid:
	audio_only, 144p, 240p, 360p, 480p, 720p, 720p60, 1080p, 1080p60, 1440p, 1440p60, 2160p, 2160p60, best

Options:
	-h
	--help
		Show this help message.

	-4
	--ipv4
		Make all connections using IPv4.

	-6
	--ipv6
		Make all connections using IPv6.

	--info-only
		Print stream information such as Video title, Selected quality
		Stream start time and duration and then exits.

	--add-metadata
		Write some basic metadata information to the final file.

	--audio-url GOOGLEVIDEO_URL
		Pass in the given url as the audio fragment url. Must be a
		Google Video url with an itag parameter of 140.

	--capture-duration DURATION or TIMESTRING
		Captures a livestream for the specified length of time 
		and then exits and finalizes the video.
		Supports time durations (e.g. 1d8h10m) or time strings (e.g. 12:30:05).

	-c
	--cookies COOKIES_FILE
		Give a cookies.txt file that has your youtube cookies. Allows
		the script to access members-only content if you are a member
		for the given stream&#039;s user. Must be netscape cookie format.

	--debug
		Print a lot of extra information.

	--disable-save-state
		Disable saving state for resumable downloads. Useful if you are
		archiving the same stream multiple times in the same directory
		for some reason.

	-dp
	--directory-permissions PERMISSIONS
		Set the filesystem permissions for created directories. Uses unix
		numeric notation. Be aware of umask settings for your directory.
		Default is 0755.

	--error
		Print only errors and general information.

	--ffmpeg-path FFMPEG_PATH
		Set a specific ffmpeg location, including program name.
		e.g. &quot;C:\ffmpeg\ffmpeg.exe&quot; or &quot;/opt/ffmpeg/ffmpeg&quot;

	-fp
	--file-permissions PERMISSIONS
		Set the filesystem permissions for created files. Uses unix
		numeric notation. Be aware of umask settings for your directory.
		Default is 0644.

	--h264
		Only download h264 video, skipping VP9 if it would have been used.

	-k
	--keep-ts-files
		Keep the final stream audio and video files after muxing them
		instead of deleting them.

	-l
	--lookalike-chars
		Use lookalikes for forbidden characters in the filename output format.
		Emulates forbidden characters by using the same replacement characters as yt-dlp.
		This will make the filenames look closer to the original titles.

	--members-only
		Only download members-only streams. Can only be used with channel URLs
		such as /live, /streams, etc, and requires cookies.
		Useful when monitoring channels and you only want membership streams.

	--merge
		Automatically run the ffmpeg command for the downloaded streams
		when manually cancelling the download. You will be prompted otherwise.

	--metadata KEY=VALUE
		If writing metadata, overwrite/add metadata key-value entry.
		KEY is a metadata key that ffmpeg recognizes. If invalid, ffmpeg may ignore it or error.
		VALUE is a format template. If empty string (&#039;&#039;), omit writing metadata for the key.
		See FORMAT TEMPLATE OPTIONS below for a list of available format keys.
		Can be used multiple times.

	--mkv
		Mux the final file into an mkv container instead of an mp4 container.
		Ignored when downloading audio only.

	--monitor-channel
		Continually monitor a channel for streams. Requires using a /live URL.
		This will go back to checking for a stream after it finishes downloading
		the current one. Implies &#039;-r 60 --merge&#039; unless set separately. Minimum
		30 second wait time, 60 or more recommended. Using &#039;best&#039; for quality or
		setting a decently exhaustive list recommended to prevent waiting for
		input if selected quality is not available for certain streams.
		Be careful to monitor your disk usage when using this to avoid filling
		your drive while away.

	--newline
		Print every message to a new line, instead of some messages reusing one
		line.

	--no-audio
		Do not download the audio stream

	--no-frag-files
		Keep fragment data in memory instead of writing to an intermediate file.
		This has the possibility to drastically increase RAM usage if a fragment
		downloads particularly slowly as more fragments after it finish first.
		This is only an issue when --threads &gt;1
		Highly recommended if you don&#039;t have strict RAM limitations. Especially
		on Wangblows, which has caused issues with file locking when trying to
		delete fragment files.

	--no-merge
		Do not run the ffmpeg command for the downloaded streams
		when manually cancelling the download. You will be prompted otherwise.

	--no-save
		Do not save any downloaded data and files if not having ffmpeg
		run when manually cancelling the download. You will be prompted otherwise.
		Does nothing if --merge is set.

	--no-save-state
		Do not leave files required for resuming downloads when manually
		cancelling the download. You will be prompted otherwise.
		Does nothing if --merge or --save are set.

	--no-video
		If a googlevideo url is given or passed with --audio-url, do not
		prompt for a video url. If a video url is given with --video-url
		then this is effectively ignored.

	-n
	--no-wait
		Do not wait for a livestream if it&#039;s a future scheduled stream.

	-o
	--output FILENAME_FORMAT
		Set the output file name EXCLUDING THE EXTENSION. Can include
		formatting similar to youtube-dl, albeit much more limited.
		See FORMAT OPTIONS below for a list of available format keys.
		Default is &#039;%(title)s-%(id)s&#039;

	--potoken &lt;PO TOKEN&gt;
		PO Token from your browser, basically required along with cookies these days.
		Refer to https://github.com/yt-dlp/yt-dlp/wiki/Extractors#po-token-guide

	--proxy &lt;SCHEME&gt;://[&lt;USER&gt;:&lt;PASS&gt;@]&lt;HOST&gt;:&lt;PORT&gt;
		Specify a proxy to use for downloading. e.g.
			- socks5://127.0.0.1:1080
			- http://192.168.1.1:8080
			- http://user:password@proxy.example.com:8080

		HTTP, HTTPS and SOCKS5 proxy servers are supported.

	-q
	--quiet
		Print nothing to the console except information relevant for user input.

	--retry-frags ATTEMPTS
		Set the number of attempts to make when downloading a stream fragment.
		Set to 0 to retry indefinitely, or until we are completely unable to.
		Default is 10.

	-r
	--retry-stream SECONDS
		If waiting for a scheduled livestream, re-check if the stream is
		up every SECONDS instead of waiting for the initial scheduled time.
		If SECONDS is less than the poll delay youtube gives (typically
		15 seconds), then this will be set to the value youtube provides.

	--save
		Automatically save any downloaded data and files if not having
		ffmpeg run when manually cancelling the download. You will be prompted
		otherwise. Does nothing if --merge is set.

	--save-state
		Automatically leave files alone and do not delete anything when manually
		cancelling the download, allowing for resuming a download later when
		possible. You will be prompted otherwise.
		Resuming requires the stream be available to download as normal.
		Does nothing if --merge or --save are set.

	--separate-audio
		Save the audio to a separate file, similar to when downloading
		audio_only, alongside the final muxed file. This includes embedding
		metadata and the thumbnail if set.

	--start-delay DURATION or TIMESTRING
		Waits for a specified length of time before starting to capture a stream from that time.
		Supports time durations (e.g. 1d8h10m) or time strings (e.g. 12:30:05).
		
		Note: * NOT supported when using also using &#039;--live-from&#039;.
		      * If the stream is scheduled and has not yet begun then
		        the delay does not start counting until the stream has begun.
		      * Ignored when resuming a download.

	-td
	--temporary-dir DIRECTORY
		Set the working directory for the download. This is where the
		temporary files will be stored. If not set, the output directory
		will be used.

	--threads THREAD_COUNT
		Set the number of threads to use for downloading audio and video
		fragments. The total number of threads running will be
		THREAD_COUNT * 2 + 3. Main thread, a thread for each audio and
		video download, and THREAD_COUNT number of fragment downloaders
		for both audio and video.
		
		Setting this to a large number has a chance at causing the download
		to start failing with HTTP 401. Restarting the download with a smaller
		thread count until you no longer get 401s should work. Default is 1.

	-t
	--thumbnail
		Download and embed the stream thumbnail in the finished file.
		Whether the thumbnail shows properly depends on your file browser.
		Windows&#039; seems to work. Nemo on Linux seemingly does not.

	--trace
		Print just about any information that might have reason to be printed.
		Very spammy, do not use this unless you have good reason.

	-v
	--verbose
		Print extra information.

	-V
	--version
		Print the version number and exit.

	--video-url GOOGLEVIDEO_URL
		Pass in the given url as the video fragment url. Must be a
		Google Video url with an itag parameter that is not 140.

	--vp9
		If there is a VP9 version of your selected video quality,
		download that instead of the usual h264.

	-w
	--wait
		Wait for a livestream if it&#039;s a future scheduled stream.
		If this option is not used when a scheduled stream is provided,
		you will be asked if you want to wait or not.

	--warn
		Print warning, errors, and general information. This is the default log
		level.

	--write-description
		Write the video description to a separate .description file.
	
	--write-mux-file
		Write the ffmpeg command that would mux audio and video or put audio
		into an mp4 container instead of running the command automatically.
		Useful if you want to tweak the command, want a higher log level, etc.

	--write-thumbnail
		Write the thumbnail to a separate file.

	--live-from DURATION, TIMESTRING or NOW
		Starts the download from the specified time in the future, the past or &#039;now&#039;.
		Use a negative time value to skip back in time from now.
		Use a positive time value to specify the timestamp in the stream to start 
		capturing from (from the start of the stream).

		Supports time durations (e.g. 1d8h30m5s) or time strings (e.g. 32:30:05).
		Examples: * &#039;--live-from -01:10:00&#039; will seek backwards 1 hour and 10 minutes from now
					and then start downloading from that time.
		          * &#039;--live-from 1h10mm00s&#039; will begin downloading from 1 hour 10 minutes 
				    after the stream started.
		          * &#039;--live-from now&#039; will start recording from the current stream time.

Examples:
	ytarchive -w
		Waits for a stream. Will prompt for a URL and quality.

	ytarchive -w https://www.youtube.com/watch?v=CnWDmKx9cQQ 1080p60/best
		Waits for the given stream URL. Will prioritize downloading in 1080p60.
		If 1080p60 is not an available quality, it will choose the best of what
		is available.

	ytarchive --threads 3 https://www.youtube.com/watch?v=ZK1GXnz-1Lw best
		Downloads the given stream with 3 threads in the best available quality.
		Will ask if you want to wait if the stream is scheduled but not started.

	ytarchive -r 30 https://www.youtube.com/channel/UCZlDXzGoo7d44bwdNObFacg/live best
		Will wait for a livestream at the given URL, checking every 30 seconds.

	ytarchive -c cookies-youtube-com.txt https://www.youtube.com/watch?v=_touw1GND-M best
		Loads the given cookies file and attempts to download the given stream.
		Will ask if you want to wait.

	ytarchive --no-wait --add-metadata https://www.youtube.com/channel/UCvaTdHTWBGv3MKj3KVqJVCw/live best
		Attempts to download the given stream, and will add metadata to the
		final muxed file. Will not wait if there is no stream or if it has not
		started.

	ytarchive -o &#039;%(channel)s/%(upload_date)s_%(title)s&#039; https://www.youtube.com/watch?v=HxV9UAMN12o best
		Download the given stream to a directory with the channel name, and a
		file that will have the upload date and stream title. Will prompt to
		wait.

	ytarchive -w -k -t --vp9 --merge --no-frag-files https://www.youtube.com/watch?v=LE8V5iNemBA best
		Waits, keeps the final .ts files, embeds the stream thumbnail, merges
		the downloaded files if download is stopped manually, and keeps
		fragments in memory instead of writing to intermediate files.
		Downloads the stream video in VP9 if available. This set of flags will
		not require any extra user input if something goes wrong.

	ytarchive -k -t --vp9 --monitor-channel --no-frag-files https://www.youtube.com/channel/UCvaTdHTWBGv3MKj3KVqJVCw/live best
		Same as above, but waits for a stream on the given channel, and will
		repeat the cycle after downloading each stream.

	ytarchive --proxy http://127.0.0.1:9050 https://www.youtube.com/watch?v=2aIdHTuyYMA best
		Downloads the given stream with a local HTTP proxy.

FORMAT TEMPLATE OPTIONS
	Format template keys provided are made to be the same as they would be for
	youtube-dl. See https://github.com/ytdl-org/youtube-dl#output-template

	For file names, each template substitution is sanitized by replacing invalid file name
	characters with an underscore (_). If &#039;--lookalike-chars&#039; is used, invalid file name
	characters get replaced by the same lookalike characters that yt-dlp uses instead.

	id (string): Video identifier
	url (string): Video URL
	title (string): Video title
	channel_id (string): ID of the channel
	channel (string): Full name of the channel the livestream is on
	upload_date (string: YYYYMMDD): Technically stream start date, UTC timezone - see note below
	start_date (string: YYYYMMDD): Stream start date, UTC timezone
	publish_date (string: YYYYMMDD): Stream publish date, UTC timezone
	description (string): Video description [disallowed for file name format template]

	Note on upload_date: rather than the actual upload date, stream start date is used to
	provide a better default date for youtube-dl output templates that use upload_date.
	To get the actual upload date, publish date seems to be the same as upload date for streams.
```
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[XIU2/CloudflareSpeedTest]]></title>
            <link>https://github.com/XIU2/CloudflareSpeedTest</link>
            <guid>https://github.com/XIU2/CloudflareSpeedTest</guid>
            <pubDate>Mon, 21 Apr 2025 00:05:34 GMT</pubDate>
            <description><![CDATA[üå©„ÄåËá™ÈÄâ‰ºòÈÄâ IP„ÄçÊµãËØï Cloudflare CDN Âª∂ËøüÂíåÈÄüÂ∫¶ÔºåËé∑ÂèñÊúÄÂø´ IP ÔºÅÂΩìÁÑ∂‰πüÊîØÊåÅÂÖ∂‰ªñ CDN / ÁΩëÁ´ô IP ~]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/XIU2/CloudflareSpeedTest">XIU2/CloudflareSpeedTest</a></h1>
            <p>üå©„ÄåËá™ÈÄâ‰ºòÈÄâ IP„ÄçÊµãËØï Cloudflare CDN Âª∂ËøüÂíåÈÄüÂ∫¶ÔºåËé∑ÂèñÊúÄÂø´ IP ÔºÅÂΩìÁÑ∂‰πüÊîØÊåÅÂÖ∂‰ªñ CDN / ÁΩëÁ´ô IP ~</p>
            <p>Language: Go</p>
            <p>Stars: 21,526</p>
            <p>Forks: 4,258</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre># XIU2/CloudflareSpeedTest

[![Go Version](https://img.shields.io/github/go-mod/go-version/XIU2/CloudflareSpeedTest.svg?style=flat-square&amp;label=Go&amp;color=00ADD8&amp;logo=go)](https://github.com/XIU2/CloudflareSpeedTest/)
[![Release Version](https://img.shields.io/github/v/release/XIU2/CloudflareSpeedTest.svg?style=flat-square&amp;label=Release&amp;color=00ADD8&amp;logo=github)](https://github.com/XIU2/CloudflareSpeedTest/releases/latest)
[![GitHub license](https://img.shields.io/github/license/XIU2/CloudflareSpeedTest.svg?style=flat-square&amp;label=License&amp;color=00ADD8&amp;logo=github)](https://github.com/XIU2/CloudflareSpeedTest/)
[![GitHub Star](https://img.shields.io/github/stars/XIU2/CloudflareSpeedTest.svg?style=flat-square&amp;label=Star&amp;color=00ADD8&amp;logo=github)](https://github.com/XIU2/CloudflareSpeedTest/)
[![GitHub Fork](https://img.shields.io/github/forks/XIU2/CloudflareSpeedTest.svg?style=flat-square&amp;label=Fork&amp;color=00ADD8&amp;logo=github)](https://github.com/XIU2/CloudflareSpeedTest/)

ÂõΩÂ§ñÂæàÂ§öÁΩëÁ´ôÈÉΩÂú®‰ΩøÁî® Cloudflare CDNÔºå‰ΩÜÂàÜÈÖçÁªô‰∏≠ÂõΩÂÜÖÂú∞ËÆøÂÆ¢ÁöÑ IP Âπ∂‰∏çÂèãÂ•ΩÔºàÂª∂ËøüÈ´ò„ÄÅ‰∏¢ÂåÖÂ§ö„ÄÅÈÄüÂ∫¶ÊÖ¢Ôºâ„ÄÇ  
ËôΩÁÑ∂ Cloudflare ÂÖ¨ÂºÄ‰∫ÜÊâÄÊúâ [IP ÊÆµ](https://www.cloudflare.com/zh-cn/ips/) Ôºå‰ΩÜÊÉ≥Ë¶ÅÂú®Ëøô‰πàÂ§ö IP ‰∏≠ÊâæÂà∞ÈÄÇÂêàËá™Â∑±ÁöÑÔºåÊÄïÊòØË¶ÅÁ¥ØÊ≠ªÔºå‰∫éÊòØÂ∞±Êúâ‰∫ÜËøô‰∏™ËΩØ‰ª∂„ÄÇ

**„ÄåËá™ÈÄâ‰ºòÈÄâ IP„ÄçÊµãËØï Cloudflare CDN Âª∂ËøüÂíåÈÄüÂ∫¶ÔºåËé∑ÂèñÊúÄÂø´ IP (IPv4+IPv6)**ÔºÅÂ•ΩÁî®ÁöÑËØù**ÁÇπ‰∏™`‚≠ê`ÈºìÂä±‰∏Ä‰∏ãÂè≠~**

&gt; _ÂàÜ‰∫´ÊàëÂÖ∂‰ªñÂºÄÊ∫êÈ°πÁõÆÔºö[**TrackersList.com** - ÂÖ®ÁΩëÁÉ≠Èó® BT Tracker ÂàóË°®ÔºÅÊúâÊïàÊèêÈ´ò BT ‰∏ãËΩΩÈÄüÂ∫¶~](https://github.com/XIU2/TrackersListCollection) &lt;img src=&quot;https://img.shields.io/github/stars/XIU2/TrackersListCollection.svg?style=flat-square&amp;label=Star&amp;color=4285dd&amp;logo=github&quot; height=&quot;16px&quot; /&gt;_  
&gt; _[**UserScript** - üêµ Github È´òÈÄü‰∏ãËΩΩ„ÄÅÁü•‰πéÂ¢ûÂº∫„ÄÅËá™Âä®Êó†ÁºùÁøªÈ°µ„ÄÅÊä§ÁúºÊ®°Âºè Á≠âÂçÅÂá†‰∏™**Ê≤πÁå¥ËÑöÊú¨**~](https://github.com/XIU2/UserScript) &lt;img src=&quot;https://img.shields.io/github/stars/XIU2/UserScript.svg?style=flat-square&amp;label=Star&amp;color=4285dd&amp;logo=github&quot; height=&quot;16px&quot; /&gt;_  
&gt; _[**SNIProxy** - üß∑ Ëá™Áî®ÁöÑÁÆÄÂçï SNI ProxyÔºàÊîØÊåÅÂÖ®Âπ≥Âè∞„ÄÅÂÖ®Á≥ªÁªü„ÄÅÂâçÁΩÆ‰ª£ÁêÜ„ÄÅÈÖçÁΩÆÁÆÄÂçïÁ≠â~](https://github.com/XIU2/SNIProxy) &lt;img src=&quot;https://img.shields.io/github/stars/XIU2/SNIProxy.svg?style=flat-square&amp;label=Star&amp;color=4285dd&amp;logo=github&quot; height=&quot;16px&quot; /&gt;_  

&gt; Êú¨È°πÁõÆ‰πüÊîØÊåÅÂØπ**ÂÖ∂‰ªñ CDN / ÁΩëÁ´ô IP** Âª∂ËøüÊµãÈÄüÔºàÂ¶ÇÔºö[CloudFront](https://github.com/XIU2/CloudflareSpeedTest/discussions/304)„ÄÅ[Gcore](https://github.com/XIU2/CloudflareSpeedTest/discussions/303) CDNÔºâÔºå‰ΩÜ‰∏ãËΩΩÊµãÈÄüÈúÄËá™Ë°åÂØªÊâæÂú∞ÂùÄ

&gt; [!IMPORTANT]
&gt; Cloudflare CDN Â∑≤**ÊòéÊñáÁ¶ÅÊ≠¢‰ª£ÁêÜ**ÊñπÂºè‰ΩøÁî®ÔºåÂØπ‰∫é**‰ª£ÁêÜÂ•ó CDN** ÁöÑËá™Ë°åÊâøÊãÖÈ£éÈô©ÔºåËØ∑ÂãøËøáÂ∫¶‰æùËµñ [#382](https://github.com/XIU2/CloudflareSpeedTest/discussions/382) [#383](https://github.com/XIU2/CloudflareSpeedTest/discussions/383)

****
## \# Âø´ÈÄü‰ΩøÁî®

### ‰∏ãËΩΩËøêË°å

1. ‰∏ãËΩΩÁºñËØëÂ•ΩÁöÑÂèØÊâßË°åÊñá‰ª∂Ôºà [Github Releases](https://github.com/XIU2/CloudflareSpeedTest/releases) / [ËìùÂ•è‰∫ë](https://pan.lanpw.com/b0742hkxe) ÔºâÂπ∂Ëß£Âéã„ÄÇ  
2. ÂèåÂáªËøêË°å `CloudflareST.exe` Êñá‰ª∂ÔºàWindows Á≥ªÁªüÔºâÔºåÁ≠âÂæÖÊµãÈÄüÂÆåÊàê...

&lt;details&gt;
&lt;summary&gt;&lt;code&gt;&lt;strong&gt;„Äå ÁÇπÂáªÊü•Áúã Linux Á≥ªÁªü‰∏ãÁöÑ‰ΩøÁî®Á§∫‰æã „Äç&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt;

****

‰ª•‰∏ãÂëΩ‰ª§‰ªÖ‰∏∫Á§∫‰æãÔºåÁâàÊú¨Âè∑ÂíåÊñá‰ª∂ÂêçËØ∑ÂâçÂæÄ [**Releases**](https://github.com/XIU2/CloudflareSpeedTest/releases) Êü•Áúã„ÄÇ

``` yaml
# Â¶ÇÊûúÊòØÁ¨¨‰∏ÄÊ¨°‰ΩøÁî®ÔºåÂàôÂª∫ËÆÆÂàõÂª∫Êñ∞Êñá‰ª∂Â§πÔºàÂêéÁª≠Êõ¥Êñ∞Êó∂ÔºåË∑≥ËøáËØ•Ê≠•È™§Ôºâ
mkdir CloudflareST

# ËøõÂÖ•Êñá‰ª∂Â§πÔºàÂêéÁª≠Êõ¥Êñ∞ÔºåÂè™ÈúÄË¶Å‰ªéËøôÈáåÈáçÂ§ç‰∏ãÈù¢ÁöÑ‰∏ãËΩΩ„ÄÅËß£ÂéãÂëΩ‰ª§Âç≥ÂèØÔºâ
cd CloudflareST

# ‰∏ãËΩΩ CloudflareST ÂéãÁº©ÂåÖÔºàËá™Ë°åÊ†πÊçÆÈúÄÊ±ÇÊõøÊç¢ URL ‰∏≠ [ÁâàÊú¨Âè∑] Âíå [Êñá‰ª∂Âêç]Ôºâ
wget -N https://github.com/XIU2/CloudflareSpeedTest/releases/download/v2.2.5/CloudflareST_linux_amd64.tar.gz
# Â¶ÇÊûú‰Ω†ÊòØÂú®ÂõΩÂÜÖÁΩëÁªúÁéØÂ¢É‰∏≠‰∏ãËΩΩÔºåÈÇ£‰πàËØ∑‰ΩøÁî®‰∏ãÈù¢ËøôÂá†‰∏™ÈïúÂÉèÂä†ÈÄü‰πã‰∏ÄÔºö
# wget -N https://ghp.ci/https://github.com/XIU2/CloudflareSpeedTest/releases/download/v2.2.5/CloudflareST_linux_amd64.tar.gz
# wget -N https://ghproxy.cc/https://github.com/XIU2/CloudflareSpeedTest/releases/download/v2.2.5/CloudflareST_linux_amd64.tar.gz
# wget -N https://ghproxy.net/https://github.com/XIU2/CloudflareSpeedTest/releases/download/v2.2.5/CloudflareST_linux_amd64.tar.gz
# wget -N https://gh-proxy.com/https://github.com/XIU2/CloudflareSpeedTest/releases/download/v2.2.5/CloudflareST_linux_amd64.tar.gz
# Â¶ÇÊûú‰∏ãËΩΩÂ§±Ë¥•ÁöÑËØùÔºåÂ∞ùËØïÂà†Èô§ -N ÂèÇÊï∞ÔºàÂ¶ÇÊûúÊòØ‰∏∫‰∫ÜÊõ¥Êñ∞ÔºåÂàôËÆ∞ÂæóÊèêÂâçÂà†Èô§ÊóßÂéãÁº©ÂåÖ rm CloudflareST_linux_amd64.tar.gz Ôºâ

# Ëß£ÂéãÔºà‰∏çÈúÄË¶ÅÂà†Èô§ÊóßÊñá‰ª∂Ôºå‰ºöÁõ¥Êé•Ë¶ÜÁõñÔºåËá™Ë°åÊ†πÊçÆÈúÄÊ±ÇÊõøÊç¢ Êñá‰ª∂ÂêçÔºâ
tar -zxf CloudflareST_linux_amd64.tar.gz

# Ëµã‰∫àÊâßË°åÊùÉÈôê
chmod +x CloudflareST

# ËøêË°åÔºà‰∏çÂ∏¶ÂèÇÊï∞Ôºâ
./CloudflareST

# ËøêË°åÔºàÂ∏¶ÂèÇÊï∞Á§∫‰æãÔºâ
./CloudflareST -dd -tll 90
```

&gt; Â¶ÇÊûúÂπ≥**ÂùáÂª∂ËøüÈùûÂ∏∏‰Ωé**ÔºàÂ¶Ç 0.xxÔºâÔºåÂàôËØ¥Êòé CloudflareST **ÊµãÈÄüÊó∂Ëµ∞‰∫Ü‰ª£ÁêÜ**ÔºåËØ∑ÂÖàÂÖ≥Èó≠‰ª£ÁêÜËΩØ‰ª∂ÂêéÂÜçÊµãÈÄü„ÄÇ  
&gt; Â¶ÇÊûúÂú®**Ë∑ØÁî±Âô®**‰∏äËøêË°åÔºåÂª∫ËÆÆÂÖàÂÖ≥Èó≠Ë∑ØÁî±Âô®ÂÜÖÁöÑ‰ª£ÁêÜÔºàÊàñÂ∞ÜÂÖ∂ÊéíÈô§ÔºâÔºåÂê¶ÂàôÊµãÈÄüÁªìÊûúÂèØËÉΩ‰ºö**‰∏çÂáÜÁ°Æ/Êó†Ê≥ï‰ΩøÁî®**„ÄÇ

&lt;/details&gt;

****

&gt; _Âú®**ÊâãÊú∫**‰∏äÁã¨Á´ãËøêË°å CloudflareST ÊµãÈÄüÁöÑÁÆÄÂçïÊïôÁ®ãÔºö**[Android](https://github.com/XIU2/CloudflareSpeedTest/discussions/61)„ÄÅ[Android APP](https://github.com/xianshenglu/cloudflare-ip-tester-app)„ÄÅ[IOS](https://github.com/XIU2/CloudflareSpeedTest/discussions/321)**_

&gt; [!NOTE]
&gt; Ê≥®ÊÑèÔºÅÊú¨ËΩØ‰ª∂‰ªÖÈÄÇÁî®‰∫éÁΩëÁ´ôÔºå**‰∏çÊîØÊåÅÁªô‰ΩøÁî® UDP ÂçèËÆÆÁöÑ Cloudflare WARP ‰ºòÈÄâ IP**ÔºåÂÖ∑‰ΩìËßÅÔºö[#392](https://github.com/XIU2/CloudflareSpeedTest/discussions/392)

### ÁªìÊûúÁ§∫‰æã

ÊµãÈÄüÂÆåÊØïÂêéÔºåÈªòËÆ§‰ºöÊòæÁ§∫**ÊúÄÂø´ÁöÑ 10 ‰∏™ IP**ÔºåÁ§∫‰æãÔºö

``` bash
IP Âú∞ÂùÄ           Â∑≤ÂèëÈÄÅ  Â∑≤Êé•Êî∂  ‰∏¢ÂåÖÁéá  Âπ≥ÂùáÂª∂Ëøü  ‰∏ãËΩΩÈÄüÂ∫¶ (MB/s)
104.27.200.69     4       4       0.00    146.23    28.64
172.67.60.78      4       4       0.00    139.82    15.02
104.25.140.153    4       4       0.00    146.49    14.90
104.27.192.65     4       4       0.00    140.28    14.07
172.67.62.214     4       4       0.00    139.29    12.71
104.27.207.5      4       4       0.00    145.92    11.95
172.67.54.193     4       4       0.00    146.71    11.55
104.22.66.8       4       4       0.00    147.42    11.11
104.27.197.63     4       4       0.00    131.29    10.26
172.67.58.91      4       4       0.00    140.19    9.14
...

# Â¶ÇÊûúÂπ≥ÂùáÂª∂ËøüÈùûÂ∏∏‰ΩéÔºàÂ¶Ç 0.xxÔºâÔºåÂàôËØ¥Êòé CloudflareST ÊµãÈÄüÊó∂Ëµ∞‰∫Ü‰ª£ÁêÜÔºåËØ∑ÂÖàÂÖ≥Èó≠‰ª£ÁêÜËΩØ‰ª∂ÂêéÂÜçÊµãÈÄü„ÄÇ
# Â¶ÇÊûúÂú®Ë∑ØÁî±Âô®‰∏äËøêË°åÔºåËØ∑ÂÖàÂÖ≥Èó≠Ë∑ØÁî±Âô®ÂÜÖÁöÑ‰ª£ÁêÜÔºàÊàñÂ∞ÜÂÖ∂ÊéíÈô§ÔºâÔºåÂê¶ÂàôÊµãÈÄüÁªìÊûúÂèØËÉΩ‰ºö‰∏çÂáÜÁ°Æ/Êó†Ê≥ï‰ΩøÁî®„ÄÇ

# Âõ†‰∏∫ÊØèÊ¨°ÊµãÈÄüÈÉΩÊòØÂú®ÊØè‰∏™ IP ÊÆµ‰∏≠ÈöèÊú∫ IPÔºåÊâÄ‰ª•ÊØèÊ¨°ÁöÑÊµãÈÄüÁªìÊûúÈÉΩ‰∏çÂèØËÉΩÁõ∏ÂêåÔºåËøôÊòØÊ≠£Â∏∏ÁöÑÔºÅ

# Ê≥®ÊÑèÔºÅÊàëÂèëÁé∞ÁîµËÑëÂºÄÊú∫ÂêéÁ¨¨‰∏ÄÊ¨°ÊµãÈÄüÂª∂Ëøü‰ºöÊòéÊòæÂÅèÈ´òÔºàÊâãÂä® TCPing ‰πü‰∏ÄÊ†∑ÔºâÔºåÂêéÁª≠ÊµãÈÄüÈÉΩÊ≠£Â∏∏
# Âõ†Ê≠§Âª∫ËÆÆÂ§ßÂÆ∂ÂºÄÊú∫ÂêéÁ¨¨‰∏ÄÊ¨°Ê≠£ÂºèÊµãÈÄüÂâçÔºåÂÖàÈöè‰æøÊµãÂá†‰∏™ IPÔºàÊó†ÈúÄÁ≠âÂæÖÂª∂ËøüÊµãÈÄüÂÆåÊàêÔºåÂè™Ë¶ÅËøõÂ∫¶Êù°Âä®‰∫ÜÂ∞±ÂèØ‰ª•Áõ¥Êé•ÂÖ≥‰∫ÜÔºâ

# ËΩØ‰ª∂Âú® ÈªòËÆ§ÂèÇÊï∞ ‰∏ãÁöÑÊï¥‰∏™ÊµÅÁ®ãÂ§ßÊ¶ÇÊ≠•È™§Ôºö
# 1. Âª∂ËøüÊµãÈÄüÔºàÈªòËÆ§ TCPing Ê®°ÂºèÔºåHTTPing Ê®°ÂºèÈúÄË¶ÅÊâãÂä®Âä†‰∏äÂèÇÊï∞Ôºâ
# 2. Âª∂ËøüÊéíÂ∫èÔºàÂª∂Ëøü ‰ªé‰ΩéÂà∞È´ò ÊéíÂ∫èÂπ∂ÊåâÊù°‰ª∂ËøáÊª§Ôºå‰∏çÂêå‰∏¢ÂåÖÁéá‰ºöÂàÜÂºÄÊéíÂ∫èÔºåÂõ†Ê≠§ÂèØËÉΩ‰ºöÊúâ‰∏Ä‰∫õÂª∂Ëøü‰Ωé‰ΩÜ‰∏¢ÂåÖÁöÑ IP ÊéíÂà∞ÂêéÈù¢Ôºâ
# 3. ‰∏ãËΩΩÊµãÈÄüÔºà‰ªéÂª∂ËøüÊúÄ‰ΩéÁöÑ IP ÂºÄÂßã‰æùÊ¨°‰∏ãËΩΩÊµãÈÄüÔºåÈªòËÆ§ÊµãÂ§ü 10 ‰∏™Â∞±‰ºöÂÅúÊ≠¢Ôºâ
# 4. ÈÄüÂ∫¶ÊéíÂ∫èÔºàÈÄüÂ∫¶‰ªéÈ´òÂà∞‰ΩéÊéíÂ∫èÔºâ
# 5. ËæìÂá∫ÁªìÊûúÔºàÈÄöËøáÂèÇÊï∞ÊéßÂà∂ÊòØÂê¶ËæìÂá∫Âà∞ÂëΩ‰ª§Ë°å(-p 0)ÊàñËæìÂá∫Âà∞Êñá‰ª∂(-o &quot;&quot;)Ôºâ

# Ê≥®ÊÑèÔºöËæìÂá∫ÁöÑÁªìÊûúÊñá‰ª∂ result.csv ÈÄöËøáÂæÆËΩØ Excel Ë°®Ê†ºÊâìÂºÄ‰ºö‰∏≠Êñá‰π±Á†ÅÔºåËøôÊòØÊ≠£Â∏∏ÁöÑÔºåÂÖ∂‰ªñË°®Ê†ºËΩØ‰ª∂/ËÆ∞‰∫ãÊú¨ÈÉΩÊòæÁ§∫Ê≠£Â∏∏
```

ÊµãÈÄüÁªìÊûúÁ¨¨‰∏ÄË°åÂ∞±ÊòØ**Êó¢‰∏ãËΩΩÈÄüÂ∫¶ÊúÄÂø´„ÄÅÂèàÂπ≥ÂùáÂª∂ËøüÊúÄ‰ΩéÁöÑÊúÄÂø´ IP**ÔºÅ

ÂÆåÊï¥ÁªìÊûú‰øùÂ≠òÂú®ÂΩìÂâçÁõÆÂΩï‰∏ãÁöÑ `result.csv` Êñá‰ª∂‰∏≠ÔºåÁî®**ËÆ∞‰∫ãÊú¨/Ë°®Ê†ºËΩØ‰ª∂**ÊâìÂºÄÔºåÊ†ºÂºèÂ¶Ç‰∏ãÔºö

```
IP Âú∞ÂùÄ,Â∑≤ÂèëÈÄÅ,Â∑≤Êé•Êî∂,‰∏¢ÂåÖÁéá,Âπ≥ÂùáÂª∂Ëøü,‰∏ãËΩΩÈÄüÂ∫¶ (MB/s)
104.27.200.69,4,4,0.00,146.23,28.64
```

&gt; _Â§ßÂÆ∂ÂèØ‰ª•ÊåâËá™Â∑±ÈúÄÊ±ÇÔºåÂØπÂÆåÊï¥ÁªìÊûú**Ëøõ‰∏ÄÊ≠•Á≠õÈÄâÂ§ÑÁêÜ**ÔºåÊàñËÄÖÂéªÁúã‰∏ÄÁúãËøõÈò∂‰ΩøÁî®**ÊåáÂÆöËøáÊª§Êù°‰ª∂**ÔºÅ_

****
## \# ËøõÈò∂‰ΩøÁî®

Áõ¥Êé•ËøêË°å‰ΩøÁî®ÁöÑÊòØÈªòËÆ§ÂèÇÊï∞ÔºåÂ¶ÇÊûúÊÉ≥Ë¶ÅÊµãÈÄüÁªìÊûúÊõ¥ÂÖ®Èù¢„ÄÅÊõ¥Á¨¶ÂêàËá™Â∑±ÁöÑË¶ÅÊ±ÇÔºåÂèØ‰ª•Ëá™ÂÆö‰πâÂèÇÊï∞„ÄÇ

```Dart
C:\&gt;CloudflareST.exe -h

CloudflareSpeedTest vX.X.X
ÊµãËØï Cloudflare CDN ÊâÄÊúâ IP ÁöÑÂª∂ËøüÂíåÈÄüÂ∫¶ÔºåËé∑ÂèñÊúÄÂø´ IP (IPv4+IPv6)ÔºÅ
https://github.com/XIU2/CloudflareSpeedTest

ÂèÇÊï∞Ôºö
    -n 200
        Âª∂ËøüÊµãÈÄüÁ∫øÁ®ãÔºõË∂äÂ§öÂª∂ËøüÊµãÈÄüË∂äÂø´ÔºåÊÄßËÉΩÂº±ÁöÑËÆæÂ§á (Â¶ÇË∑ØÁî±Âô®) ËØ∑ÂãøÂ§™È´òÔºõ(ÈªòËÆ§ 200 ÊúÄÂ§ö 1000)
    -t 4
        Âª∂ËøüÊµãÈÄüÊ¨°Êï∞ÔºõÂçï‰∏™ IP Âª∂ËøüÊµãÈÄüÁöÑÊ¨°Êï∞Ôºõ(ÈªòËÆ§ 4 Ê¨°)
    -dn 10
        ‰∏ãËΩΩÊµãÈÄüÊï∞ÈáèÔºõÂª∂ËøüÊµãÈÄüÂπ∂ÊéíÂ∫èÂêéÔºå‰ªéÊúÄ‰ΩéÂª∂ËøüËµ∑‰∏ãËΩΩÊµãÈÄüÁöÑÊï∞ÈáèÔºõ(ÈªòËÆ§ 10 ‰∏™)
    -dt 10
        ‰∏ãËΩΩÊµãÈÄüÊó∂Èó¥ÔºõÂçï‰∏™ IP ‰∏ãËΩΩÊµãÈÄüÊúÄÈïøÊó∂Èó¥Ôºå‰∏çËÉΩÂ§™Áü≠Ôºõ(ÈªòËÆ§ 10 Áßí)
    -tp 443
        ÊåáÂÆöÊµãÈÄüÁ´ØÂè£ÔºõÂª∂ËøüÊµãÈÄü/‰∏ãËΩΩÊµãÈÄüÊó∂‰ΩøÁî®ÁöÑÁ´ØÂè£Ôºõ(ÈªòËÆ§ 443 Á´ØÂè£)
    -url https://cf.xiu2.xyz/url
        ÊåáÂÆöÊµãÈÄüÂú∞ÂùÄÔºõÂª∂ËøüÊµãÈÄü(HTTPing)/‰∏ãËΩΩÊµãÈÄüÊó∂‰ΩøÁî®ÁöÑÂú∞ÂùÄÔºåÈªòËÆ§Âú∞ÂùÄ‰∏ç‰øùËØÅÂèØÁî®ÊÄßÔºåÂª∫ËÆÆËá™Âª∫Ôºõ

    -httping
        ÂàáÊç¢ÊµãÈÄüÊ®°ÂºèÔºõÂª∂ËøüÊµãÈÄüÊ®°ÂºèÊîπ‰∏∫ HTTP ÂçèËÆÆÔºåÊâÄÁî®ÊµãËØïÂú∞ÂùÄ‰∏∫ [-url] ÂèÇÊï∞Ôºõ(ÈªòËÆ§ TCPing)
        Ê≥®ÊÑèÔºöHTTPing Êú¨Ë¥®‰∏ä‰πüÁÆó‰∏ÄÁßç ÁΩëÁªúÊâ´Êèè Ë°å‰∏∫ÔºåÂõ†Ê≠§Â¶ÇÊûú‰Ω†Âú®ÊúçÂä°Âô®‰∏äÈù¢ËøêË°åÔºåÈúÄË¶ÅÈôç‰ΩéÂπ∂Âèë(-n)ÔºåÂê¶ÂàôÂèØËÉΩ‰ºöË¢´‰∏Ä‰∫õ‰∏•Ê†ºÁöÑÂïÜÂÆ∂ÊöÇÂÅúÊúçÂä°„ÄÇ
        Â¶ÇÊûú‰Ω†ÈÅáÂà∞ HTTPing È¶ñÊ¨°ÊµãÈÄüÂèØÁî® IP Êï∞ÈáèÊ≠£Â∏∏ÔºåÂêéÁª≠ÊµãÈÄüË∂äÊù•Ë∂äÂ∞ëÁîöËá≥Áõ¥Êé•‰∏∫ 0Ôºå‰ΩÜÂÅú‰∏ÄÊÆµÊó∂Èó¥ÂêéÂèàÊÅ¢Â§ç‰∫ÜÁöÑÊÉÖÂÜµÔºåÈÇ£‰πà‰πüÂèØËÉΩÊòØË¢´ ËøêËê•ÂïÜ„ÄÅCloudflare CDN ËÆ§‰∏∫‰Ω†Âú®ÁΩëÁªúÊâ´ÊèèËÄå Ëß¶Âèë‰∏¥Êó∂ÈôêÂà∂Êú∫Âà∂ÔºåÂõ†Ê≠§Êâç‰ºöËøá‰∏Ä‰ºöÂÑøÂ∞±ÊÅ¢Â§ç‰∫ÜÔºåÂª∫ËÆÆÈôç‰ΩéÂπ∂Âèë(-n)ÂáèÂ∞ëËøôÁßçÊÉÖÂÜµÁöÑÂèëÁîü„ÄÇ
    -httping-code 200
        ÊúâÊïàÁä∂ÊÄÅ‰ª£Á†ÅÔºõHTTPing Âª∂ËøüÊµãÈÄüÊó∂ÁΩëÈ°µËøîÂõûÁöÑÊúâÊïà HTTP Áä∂ÊÄÅÁ†ÅÔºå‰ªÖÈôê‰∏Ä‰∏™Ôºõ(ÈªòËÆ§ 200 301 302)
    -cfcolo HKG,KHH,NRT,LAX,SEA,SJC,FRA,MAD
        ÂåπÈÖçÊåáÂÆöÂú∞Âå∫ÔºõÂú∞Âå∫Âêç‰∏∫ÂΩìÂú∞Êú∫Âú∫‰∏âÂ≠óÁ†ÅÔºåËã±ÊñáÈÄóÂè∑ÂàÜÈöîÔºåÊîØÊåÅÂ∞èÂÜôÔºåÊîØÊåÅ Cloudflare„ÄÅAWS CloudFrontÔºå‰ªÖ HTTPing Ê®°ÂºèÂèØÁî®Ôºõ(ÈªòËÆ§ ÊâÄÊúâÂú∞Âå∫)

    -tl 200
        Âπ≥ÂùáÂª∂Ëøü‰∏äÈôêÔºõÂè™ËæìÂá∫‰Ωé‰∫éÊåáÂÆöÂπ≥ÂùáÂª∂ËøüÁöÑ IPÔºåÂêÑ‰∏ä‰∏ãÈôêÊù°‰ª∂ÂèØÊê≠ÈÖç‰ΩøÁî®Ôºõ(ÈªòËÆ§ 9999 ms)
    -tll 40
        Âπ≥ÂùáÂª∂Ëøü‰∏ãÈôêÔºõÂè™ËæìÂá∫È´ò‰∫éÊåáÂÆöÂπ≥ÂùáÂª∂ËøüÁöÑ IPÔºõ(ÈªòËÆ§ 0 ms)
    -tlr 0.2
        ‰∏¢ÂåÖÂá†Áéá‰∏äÈôêÔºõÂè™ËæìÂá∫‰Ωé‰∫é/Á≠â‰∫éÊåáÂÆö‰∏¢ÂåÖÁéáÁöÑ IPÔºåËåÉÂõ¥ 0.00~1.00Ôºå0 ËøáÊª§Êéâ‰ªª‰Ωï‰∏¢ÂåÖÁöÑ IPÔºõ(ÈªòËÆ§ 1.00)
    -sl 5
        ‰∏ãËΩΩÈÄüÂ∫¶‰∏ãÈôêÔºõÂè™ËæìÂá∫È´ò‰∫éÊåáÂÆö‰∏ãËΩΩÈÄüÂ∫¶ÁöÑ IPÔºåÂáëÂ§üÊåáÂÆöÊï∞Èáè [-dn] Êâç‰ºöÂÅúÊ≠¢ÊµãÈÄüÔºõ(ÈªòËÆ§ 0.00 MB/s)

    -p 10
        ÊòæÁ§∫ÁªìÊûúÊï∞ÈáèÔºõÊµãÈÄüÂêéÁõ¥Êé•ÊòæÁ§∫ÊåáÂÆöÊï∞ÈáèÁöÑÁªìÊûúÔºå‰∏∫ 0 Êó∂‰∏çÊòæÁ§∫ÁªìÊûúÁõ¥Êé•ÈÄÄÂá∫Ôºõ(ÈªòËÆ§ 10 ‰∏™)
    -f ip.txt
        IPÊÆµÊï∞ÊçÆÊñá‰ª∂ÔºõÂ¶ÇË∑ØÂæÑÂê´ÊúâÁ©∫Ê†ºËØ∑Âä†‰∏äÂºïÂè∑ÔºõÊîØÊåÅÂÖ∂‰ªñ CDN IPÊÆµÔºõ(ÈªòËÆ§ ip.txt)
    -ip 1.1.1.1,2.2.2.2/24,2606:4700::/32
        ÊåáÂÆöIPÊÆµÊï∞ÊçÆÔºõÁõ¥Êé•ÈÄöËøáÂèÇÊï∞ÊåáÂÆöË¶ÅÊµãÈÄüÁöÑ IP ÊÆµÊï∞ÊçÆÔºåËã±ÊñáÈÄóÂè∑ÂàÜÈöîÔºõ(ÈªòËÆ§ Á©∫)
    -o result.csv
        ÂÜôÂÖ•ÁªìÊûúÊñá‰ª∂ÔºõÂ¶ÇË∑ØÂæÑÂê´ÊúâÁ©∫Ê†ºËØ∑Âä†‰∏äÂºïÂè∑ÔºõÂÄº‰∏∫Á©∫Êó∂‰∏çÂÜôÂÖ•Êñá‰ª∂ [-o &quot;&quot;]Ôºõ(ÈªòËÆ§ result.csv)

    -dd
        Á¶ÅÁî®‰∏ãËΩΩÊµãÈÄüÔºõÁ¶ÅÁî®ÂêéÊµãÈÄüÁªìÊûú‰ºöÊåâÂª∂ËøüÊéíÂ∫è (ÈªòËÆ§Êåâ‰∏ãËΩΩÈÄüÂ∫¶ÊéíÂ∫è)Ôºõ(ÈªòËÆ§ ÂêØÁî®)
    -allip
        ÊµãÈÄüÂÖ®ÈÉ®ÁöÑIPÔºõÂØπ IP ÊÆµ‰∏≠ÁöÑÊØè‰∏™ IP (‰ªÖÊîØÊåÅ IPv4) ËøõË°åÊµãÈÄüÔºõ(ÈªòËÆ§ ÊØè‰∏™ /24 ÊÆµÈöèÊú∫ÊµãÈÄü‰∏Ä‰∏™ IP)

    -v
        ÊâìÂç∞Á®ãÂ∫èÁâàÊú¨ + Ê£ÄÊü•ÁâàÊú¨Êõ¥Êñ∞
    -h
        ÊâìÂç∞Â∏ÆÂä©ËØ¥Êòé
```

### ÁïåÈù¢Ëß£Èáä

‰∏∫‰∫ÜÈÅøÂÖçÂ§ßÂÆ∂ÂØπÊµãÈÄüËøáÁ®ã‰∏≠ÁöÑ**ËæìÂá∫ÂÜÖÂÆπ‰∫ßÁîüËØØËß£ÔºàÂèØÁî®„ÄÅÈòüÂàóÁ≠âÊï∞Â≠óÔºå‰∏ãËΩΩÊµãÈÄü‰∏ÄÂçäÂ∞±&quot;‰∏≠Êñ≠&quot;Ôºü‰∏ãËΩΩÊµãÈÄü&quot;Âç°‰Ωè&quot;‰∏çÂä®ÔºüÔºâ**ÔºåÊàëÁâπÊÑèËß£Èáä‰∏ã„ÄÇ

&lt;details&gt;
&lt;summary&gt;&lt;code&gt;&lt;strong&gt;„Äå ÁÇπÂáªÂ±ïÂºÄ Êü•ÁúãÂÜÖÂÆπ „Äç&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt;

****

&gt; ËØ•Á§∫‰æãÊääÂ∏∏Áî®ÂèÇÊï∞ÈÉΩÁªôÂä†‰∏ä‰∫ÜÔºåÂç≥‰∏∫Ôºö`-tll 40 -tl 150 -sl 1 -dn 5`ÔºåÊúÄÂêéËæìÂá∫ÁªìÊûúÂ¶Ç‰∏ãÔºö

```python
# XIU2/CloudflareSpeedTest vX.X.X

ÂºÄÂßãÂª∂ËøüÊµãÈÄüÔºàÊ®°ÂºèÔºöTCP, Á´ØÂè£Ôºö443, ËåÉÂõ¥Ôºö40 ~ 150 ms, ‰∏¢ÂåÖÔºö1.00)
321 / 321 [-----------------------------------------------------------] ÂèØÁî®: 30
ÂºÄÂßã‰∏ãËΩΩÊµãÈÄüÔºà‰∏ãÈôêÔºö1.00 MB/s, Êï∞ÈáèÔºö5, ÈòüÂàóÔºö10Ôºâ
3 / 5 [-----------------------------------------‚Üó--------------------]
IP Âú∞ÂùÄ           Â∑≤ÂèëÈÄÅ  Â∑≤Êé•Êî∂  ‰∏¢ÂåÖÁéá  Âπ≥ÂùáÂª∂Ëøü  ‰∏ãËΩΩÈÄüÂ∫¶ (MB/s)
XXX.XXX.XXX.XXX   4       4      0.00    83.32    3.66
XXX.XXX.XXX.XXX   4       4      0.00    107.81   2.49
XXX.XXX.XXX.XXX   4       3      0.25    149.59   1.04

ÂÆåÊï¥ÊµãÈÄüÁªìÊûúÂ∑≤ÂÜôÂÖ• result.csv Êñá‰ª∂ÔºåÂèØ‰ΩøÁî®ËÆ∞‰∫ãÊú¨/Ë°®Ê†ºËΩØ‰ª∂Êü•Áúã„ÄÇ
Êåâ‰∏ã ÂõûËΩ¶ÈîÆ Êàñ Ctrl+C ÈÄÄÂá∫„ÄÇ
```

****

&gt; ÂàöÊé•Ëß¶ CloudflareST ÁöÑ‰∫∫ÔºåÂèØËÉΩ‰ºöËø∑ÊÉë**ÊòéÊòéÂª∂ËøüÊµãÈÄüÂèØÁî® IP Êúâ 30 ‰∏™ÔºåÊÄé‰πàÊúÄÂêéÂè™Ââ©‰∏ã 3 ‰∏™‰∫ÜÂë¢Ôºü**  
&gt; ‰∏ãËΩΩÊµãÈÄüÈáåÁöÑÈòüÂàóÂèàÊòØ‰ªÄ‰πàÊÑèÊÄùÔºüÈöæÈÅìÊàë‰∏ãËΩΩÊµãÈÄüËøòË¶ÅÊéíÈòüÔºü

CloudflareST ‰ºöÂÖàÂª∂ËøüÊµãÈÄüÔºåÂú®ËøôËøáÁ®ã‰∏≠ËøõÂ∫¶Êù°Âè≥‰æß‰ºöÂÆûÊó∂ÊòæÁ§∫ÂèØÁî® IP Êï∞ÈáèÔºà`ÂèØÁî®: 30`ÔºâÔºå‰ΩÜÊ≥®ÊÑèËØ•ÂèØÁî®Êï∞ÈáèÊåáÁöÑÊòØ**ÊµãËØïÈÄöËøáÊ≤°ÊúâË∂ÖÊó∂ÁöÑ IP Êï∞Èáè**ÔºåÂíåÂª∂Ëøü‰∏ä‰∏ãÈôê„ÄÅ‰∏¢ÂåÖÊù°‰ª∂Êó†ÂÖ≥„ÄÇÂΩìÂª∂ËøüÊµãÈÄüÂÆåÊàêÂêéÔºåÂõ†‰∏∫ËøòÊåáÂÆö‰∫Ü**Âª∂Ëøü‰∏ä‰∏ãÈôê„ÄÅ‰∏¢ÂåÖ**ÁöÑÊù°‰ª∂ÔºåÊâÄ‰ª•ÊåâÁÖßÊù°‰ª∂ËøáÊª§ÂêéÂè™Ââ©‰∏ã `10` ‰∏™‰∫ÜÔºà‰πüÂ∞±ÊòØÁ≠âÂæÖ‰∏ãËΩΩÊµãÈÄüÁöÑ `ÈòüÂàóÔºö10`Ôºâ„ÄÇ

Âç≥‰ª•‰∏äÁ§∫‰æã‰∏≠Ôºå`321` ‰∏™ IP Âª∂ËøüÊµãÈÄüÂÆåÊàêÂêéÔºåÂè™Êúâ `30` ‰∏™ IP ÊµãËØïÈÄöËøáÊ≤°ÊúâË∂ÖÊó∂ÔºåÁÑ∂ÂêéÊ†πÊçÆÂª∂Ëøü‰∏ä‰∏ãÈôêËåÉÂõ¥Ôºö`40 ~ 150 ms` Âèä‰∏¢ÂåÖ‰∏äÈôêÊù°‰ª∂ËøáÊª§ÂêéÔºåÂè™Ââ©‰∏ã `10` ‰∏™Êª°Ë∂≥Ë¶ÅÊ±ÇÁöÑ IP ‰∫Ü„ÄÇÂ¶ÇÊûú‰Ω† `-dd` Á¶ÅÁî®‰∫Ü‰∏ãËΩΩÊµãÈÄüÔºåÈÇ£‰πàÂ∞±‰ºöÁõ¥Êé•ËæìÂá∫Ëøô `10` ‰∏™ IP ‰∫Ü„ÄÇÂΩìÁÑ∂ËØ•Á§∫‰æãÂπ∂Êú™Á¶ÅÁî®ÔºåÂõ†Ê≠§Êé•‰∏ãÊù•ËΩØ‰ª∂‰ºöÁªßÁª≠ÂØπËøô `10` ‰∏™ IP ËøõË°å‰∏ãËΩΩÊµãÈÄüÔºà`ÈòüÂàóÔºö10`Ôºâ„ÄÇ

&gt; Âõ†‰∏∫‰∏ãËΩΩÊµãÈÄüÊòØÂçïÁ∫øÁ®ã‰∏Ä‰∏™‰∏™ IP Êå®ÁùÄÊéíÈòüÊµãÈÄüÁöÑÔºåÂõ†Ê≠§Á≠âÂæÖ‰∏ãËΩΩÊµãÈÄüÁöÑ IP Êï∞ÈáèÊâç‰ºöÂè´ÂÅö `ÈòüÂàó`„ÄÇ

****

&gt; ‰Ω†ÂèØËÉΩÊ≥®ÊÑèÂà∞‰∫ÜÔºå**ÊòéÊòéÊåáÂÆö‰∫ÜË¶ÅÊâæÂà∞ 5 ‰∏™Êª°Ë∂≥‰∏ãËΩΩÈÄüÂ∫¶Êù°‰ª∂ÁöÑ IPÔºåÊÄé‰πàÊâç 3 ‰∏™Â∞± ‚Äú‰∏≠Êñ≠‚Äù ‰∫ÜÂë¢Ôºü**

‰∏ãËΩΩÊµãÈÄüËøõÂ∫¶Êù°‰∏≠ÁöÑ `3 / 5`ÔºåÂâçËÄÖÊåáÁöÑÊòØÊâæÂà∞‰∫Ü `3` ‰∏™Êª°Ë∂≥‰∏ãËΩΩÈÄüÂ∫¶‰∏ãÈôêÊù°‰ª∂ÁöÑ IPÔºàÂç≥‰∏ãËΩΩÈÄüÂ∫¶È´ò‰∫é `1 MB/s` ÔºâÔºåÂêéËÄÖ `5` ÊåáÁöÑÊòØ‰Ω†Ë¶ÅÊ±ÇÊâæÂà∞ `5` ‰∏™Êª°Ë∂≥‰∏ãËΩΩÈÄüÂ∫¶‰∏ãÈôêÊù°‰ª∂ÁöÑ IPÔºà`-dn 5`Ôºâ„ÄÇ

&gt; Âè¶Â§ñÔºåÊèêÈÜí‰∏Ä‰∏ãÔºåÂ¶ÇÊûú‰Ω†ÊåáÂÆöÁöÑ `-dn` Â§ß‰∫é‰∏ãËΩΩÊµãÈÄüÈòüÂàóÔºåÊØîÂ¶Ç‰Ω†Âª∂ËøüÊµãÈÄüÂêéÂè™Ââ©‰∏ã `4` ‰∏™ IP ‰∫ÜÔºåÈÇ£‰πà‰∏ãËΩΩÊµãÈÄüËøõÂ∫¶Êù°‰∏≠ÂêéÈù¢ÁöÑÊï∞Â≠óÂ∞±‰ºöÂíå‰∏ãËΩΩÊµãÈÄüÈòüÂàó‰∏ÄÊ†∑ÈÉΩÊòØ `4` ‰∏™ÔºåËÄåÈùû‰Ω† `-dn` ÊåáÂÆöÁöÑ `5` ‰∏™‰∫Ü„ÄÇ

ËΩØ‰ª∂Âú®ÊµãÈÄüÂÆåËøô `10` ‰∏™ IP ÂêéÔºåÂè™ÊâæÂà∞‰∫Ü `3` ‰∏™‰∏ãËΩΩÈÄüÂ∫¶È´ò‰∫é `1 MB/s` ÁöÑ IPÔºåÂâ©‰∏ãÁöÑ `7` ‰∏™ IP ÈÉΩÊòØ ‚Äú‰∏çÂèäÊ†º‚Äù ÁöÑ„ÄÇ

Âõ†Ê≠§ÔºåËøô‰∏çÊòØ `‚ÄúÊØèÊ¨°ÊµãÈÄüÈÉΩ‰∏çÂà∞ 5 Â∞±‰∏≠Êñ≠‰∫Ü‚Äù`ÔºåËÄåÊòØÊâÄÊúâ IP ÈÉΩ‰∏ãËΩΩÊµãÈÄüÂÆå‰∫ÜÔºå‰ΩÜÂç¥Âè™ÊâæÂà∞‰∫Ü `3` ‰∏™Êª°Ë∂≥Êù°‰ª∂ÁöÑ„ÄÇ

****

ËøòÊúâ‰∏ÄÁßçÊÉÖÂÜµÔºåÈÇ£Â∞±ÊòØÂΩìÂèØÁî® IP ÂæàÂ§öÊó∂ÔºàÂá†ÁôæÂá†ÂçÉÔºâÔºå‰Ω†ËøòËÆæÁΩÆ‰∫Ü‰∏ãËΩΩÈÄüÂ∫¶Êù°‰ª∂ÔºåÈÇ£‰πàÂèØËÉΩÂ∞±‰ºöÈÅáÂà∞Ôºö**ÊÄé‰πà‰∏ãËΩΩÊµãÈÄüËøõÂ∫¶Êù°ËÄÅÊòØÂç°Âú® `X / 5` ‰∫ÜÂë¢Ôºü**

ËøôÂÖ∂ÂÆûÂπ∂‰∏çÊòØÂç°‰Ωè‰∫ÜÔºåËÄåÊòØÂè™ÊúâÂΩìÊâæÂà∞‰∏Ä‰∏™Êª°Ë∂≥Êù°‰ª∂ÁöÑ IP Êó∂ÔºåËøõÂ∫¶Êù°Êâç‰ºö +1ÔºåÂõ†Ê≠§Â¶ÇÊûú‰∏ÄÁõ¥Êâæ‰∏çÂà∞ÔºåÈÇ£‰πà CloudflareST Â∞±‰ºö‰∏ÄÁõ¥‰∏ãËΩΩÊµãÈÄü‰∏ãÂéªÔºåÂõ†Ê≠§Âú®Ë°®Áé∞‰∏∫ËøõÂ∫¶Êù°Âç°‰Ωè‰∏çÂä®Ôºå‰ΩÜËøô‰πüÊòØÂú®ÊèêÈÜí‰Ω†Ôºö‰Ω†ËÆæÁΩÆÁöÑ‰∏ãËΩΩÈÄüÂ∫¶Êù°‰ª∂ÂØπ‰Ω†Êù•ËØ¥Â∑≤ÁªèÈ´ò‰∫éÂÆûÈôÖ‰∫ÜÔºå‰Ω†ÈúÄË¶ÅÈÄÇÂΩìË∞É‰ΩéÈ¢ÑÊúü„ÄÇ

****

Â¶ÇÊûú‰∏çÊÉ≥ÈÅáÂà∞ËøôÁßçÂÖ®ÈÉ®ÊµãÈÄü‰∏ÄÈÅçÈÉΩÊ≤°Âá†‰∏™Êª°Ë∂≥Êù°‰ª∂ÁöÑÊÉÖÂÜµÔºåÈÇ£‰πàÂ∞±Ë¶Å**Ë∞É‰Ωé‰∏ãËΩΩÈÄüÂ∫¶‰∏äÈôêÂèÇÊï∞ `-sl`**ÔºåÊàñËÄÖÁßªÈô§„ÄÇ

Âõ†‰∏∫Âè™Ë¶ÅÊåáÂÆö‰∫Ü `-sl` ÂèÇÊï∞ÔºåÈÇ£‰πàÂè™Ë¶ÅÊ≤°ÊúâÂáëÂ§ü `-dn` ÁöÑÊï∞ÈáèÔºàÈªòËÆ§ 10 ‰∏™ÔºâÔºåÂ∞±‰ºö‰∏ÄÁõ¥ÊµãÈÄü‰∏ãÂéªÔºåÁõ¥Âà∞ÂáëÂ§üÊàñÂÖ®ÈÉ®ÊµãÈÄüÂÆå„ÄÇÁßªÈô§ `-sl` Âπ∂Ê∑ªÂä† `-dn 20` ÂèÇÊï∞ÔºåËøôÊ†∑Â∞±ÊòØÂè™ÊµãÈÄüÂª∂ËøüÊúÄ‰ΩéÁöÑÂâç 20 ‰∏™ IPÔºåÊµãÈÄüÂÆåÂ∞±ÂÅúÊ≠¢ÔºåËäÇÁúÅÊó∂Èó¥„ÄÇ

****

Âè¶Â§ñÔºåÂ¶ÇÊûúÂÖ®ÈÉ®ÈòüÂàó IP ÈÉΩÊµãÈÄüÂÆå‰∫ÜÔºå‰ΩÜ‰∏Ä‰∏™Êª°Ë∂≥‰∏ãËΩΩÈÄüÂ∫¶Êù°‰ª∂ÁöÑ IP ÈÉΩÊ≤°ÊúâÔºåÈÇ£‰πàÂ∞±‰ºö**Áõ¥Êé•ËæìÂá∫ÂÖ®ÈÉ®ÈòüÂàó IP ÁöÑ‰∏ãËΩΩÊµãÈÄüÁªìÊûú**ÔºåËøôÊ†∑‰Ω†Â∞±ËÉΩÁúãÂà∞Ëøô‰∫õ IP ÁöÑ‰∏ãËΩΩÈÄüÂ∫¶ÈÉΩÊúâÂ§öÂ∞ëÔºåÂøÉÈáå‰πüÂ∞±ÊúâÊï∞‰∫ÜÔºåÁÑ∂Âêé**ÈÄÇÂΩìË∞É‰Ωé `-sl` ÂÜçËØïËØï**„ÄÇ

ÂêåÊ†∑ÔºåÂª∂ËøüÊµãÈÄüÊñπÈù¢Ôºå`ÂèØÁî®: 30`„ÄÅ`ÈòüÂàóÔºö10` Ëøô‰∏§‰∏™Êï∞ÂÄº‰πüÂèØ‰ª•ËÆ©‰Ω†Ê∏ÖÊ•öÔºå‰Ω†ËÆæÁΩÆÁöÑÂª∂ËøüÊù°‰ª∂ÂØπ‰Ω†Êù•ËØ¥ÊòØÂê¶Ëøá‰∫éËãõÂàª„ÄÇÂ¶ÇÊûúÂèØÁî® IP ‰∏ÄÂ§ßÂ†ÜÔºå‰ΩÜÊù°‰ª∂ËøáÊª§ÂêéÂè™Ââ©‰∏ã 2„ÄÅ3 ‰∏™ÔºåÈÇ£‰∏çÁî®ËØ¥Â∞±Áü•ÈÅìÈúÄË¶Å**Ë∞É‰ΩéÈ¢ÑÊúüÁöÑÂª∂Ëøü/‰∏¢ÂåÖÊù°‰ª∂**‰∫Ü„ÄÇ

Ëøô‰∏§‰∏™Êú∫Âà∂Ôºå‰∏Ä‰∏™ÊòØÂëäËØâ‰Ω†**Âª∂Ëøü‰∏¢ÂåÖÊù°‰ª∂**ÊòØÂê¶ÂêàÈÄÇÁöÑÔºå‰∏Ä‰∏™ÊòØÂëäËØâ‰Ω†**‰∏ãËΩΩÈÄüÂ∫¶Êù°‰ª∂**ÊòØÂê¶ÂêàÈÄÇÁöÑ„ÄÇ

&lt;/details&gt;

****

### ‰ΩøÁî®Á§∫‰æã

Windows Ë¶ÅÊåáÂÆöÂèÇÊï∞ÈúÄË¶ÅÂú® CMD ‰∏≠ËøêË°åÔºåÊàñËÄÖÊääÂèÇÊï∞Ê∑ªÂä†Âà∞Âø´Êç∑ÊñπÂºèÁõÆÊ†á‰∏≠„ÄÇ

&gt; [!TIP]
&gt; - ÂêÑÂèÇÊï∞ÂùáÊúâ**ÈªòËÆ§ÂÄº**Ôºå‰ΩøÁî®ÈªòËÆ§ÂÄºÁöÑÂèÇÊï∞ÊòØÂèØ‰ª•ÁúÅÁï•ÁöÑÔºà**ÊåâÈúÄÈÄâÊã©**ÔºâÔºåÂèÇÊï∞**‰∏çÂàÜÂâçÂêéÈ°∫Â∫è**„ÄÇ  
&gt; - Windows **PowerShell** Âè™ÈúÄÊää‰∏ãÈù¢ÂëΩ‰ª§‰∏≠ÁöÑ `CloudflareST.exe` Êîπ‰∏∫ `.\CloudflareST.exe` Âç≥ÂèØ„ÄÇ  
&gt; - Linux Á≥ªÁªüÂè™ÈúÄË¶ÅÊää‰∏ãÈù¢ÂëΩ‰ª§‰∏≠ÁöÑ `CloudflareST.exe` Êîπ‰∏∫ `./CloudflareST` Âç≥ÂèØ„ÄÇ

****

#### \# CMD Â∏¶ÂèÇÊï∞ËøêË°å CloudflareST

ÂØπÂëΩ‰ª§Ë°åÁ®ãÂ∫è‰∏çÁÜüÊÇâÁöÑ‰∫∫ÔºåÂèØËÉΩ‰∏çÁü•ÈÅìËØ•Â¶Ç‰ΩïÂ∏¶ÂèÇÊï∞ËøêË°åÔºåÊàëÂ∞±ÁÆÄÂçïËØ¥‰∏Ä‰∏ã„ÄÇ

&lt;details&gt;
&lt;summary&gt;&lt;code&gt;&lt;strong&gt;„Äå ÁÇπÂáªÂ±ïÂºÄ Êü•ÁúãÂÜÖÂÆπ „Äç&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt;

****

ÂæàÂ§ö‰∫∫ÊâìÂºÄ CMD ‰ª•**ÁªùÂØπË∑ØÂæÑ**ËøêË°å CloudflareST ‰ºöÊä•ÈîôÔºåËøôÊòØÂõ†‰∏∫ÈªòËÆ§ÁöÑ `-f ip.txt` ÂèÇÊï∞ÊòØÁõ∏ÂØπË∑ØÂæÑÔºåÈúÄË¶ÅÊåáÂÆöÁªùÂØπË∑ØÂæÑÁöÑ ip.txt ÊâçË°åÔºå‰ΩÜËøôÊ†∑ÊØïÁ´üÂ§™È∫ªÁÉ¶‰∫ÜÔºåÂõ†Ê≠§ËøòÊòØÂª∫ËÆÆËøõÂÖ• CloudflareST Á®ãÂ∫èÁõÆÂΩï‰∏ãÔºå‰ª•**Áõ∏ÂØπË∑ØÂæÑ**ÊñπÂºèËøêË°åÔºö

**ÊñπÂºè ‰∏Ä**Ôºö
1. ÊâìÂºÄ CloudflareST Á®ãÂ∫èÊâÄÂú®ÁõÆÂΩï  
2. Á©∫ÁôΩÂ§ÑÊåâ‰∏ã &lt;kbd&gt;Shift + Èº†Ê†áÂè≥ÈîÆ&lt;/kbd&gt; ÊòæÁ§∫Âè≥ÈîÆËèúÂçï  
3. ÈÄâÊã© **\[Âú®Ê≠§Â§ÑÊâìÂºÄÂëΩ‰ª§Á™óÂè£\]** Êù•ÊâìÂºÄ CMD Á™óÂè£ÔºåÊ≠§Êó∂ÈªòËÆ§Â∞±‰Ωç‰∫éÂΩìÂâçÁõÆÂΩï‰∏ã  
4. ËæìÂÖ•Â∏¶ÂèÇÊï∞ÁöÑÂëΩ‰ª§ÔºåÂ¶ÇÔºö`CloudflareST.exe -tll 50 -tl 200`Âç≥ÂèØËøêË°å

**ÊñπÂºè ‰∫å**Ôºö
1. ÊâìÂºÄ CloudflareST Á®ãÂ∫èÊâÄÂú®ÁõÆÂΩï  
2. Áõ¥Êé•Âú®Êñá‰ª∂Â§πÂú∞ÂùÄÊ†è‰∏≠ÂÖ®ÈÄâÂπ∂ËæìÂÖ• `cmd` ÂõûËΩ¶Êù•ÊâìÂºÄ CMD Á™óÂè£ÔºåÊ≠§Êó∂ÈªòËÆ§Â∞±‰Ωç‰∫éÂΩìÂâçÁõÆÂΩï‰∏ã  
4. ËæìÂÖ•Â∏¶ÂèÇÊï∞ÁöÑÂëΩ‰ª§ÔºåÂ¶ÇÔºö`CloudflareST.exe -tll 50 -tl 200`Âç≥ÂèØËøêË°å

&gt; ÂΩìÁÑ∂‰Ω†‰πüÂèØ‰ª•Èöè‰æøÊâìÂºÄ‰∏Ä‰∏™ CMD Á™óÂè£ÔºåÁÑ∂ÂêéËæìÂÖ•Â¶Ç `cd /d &quot;D:\Program Files\CloudflareST&quot;` Êù•ËøõÂÖ•Á®ãÂ∫èÁõÆÂΩï

&gt; **ÊèêÁ§∫**ÔºöÂ¶ÇÊûúÁî®ÁöÑÊòØ **PowerShell** Âè™ÈúÄÊääÂëΩ‰ª§‰∏≠ÁöÑ `CloudflareST.exe` Êîπ‰∏∫ `.\CloudflareST.exe` Âç≥ÂèØ„ÄÇ

&lt;/details&gt;

****

#### \# Windows Âø´Êç∑ÊñπÂºèÂ∏¶ÂèÇÊï∞ËøêË°å CloudflareST

Â¶ÇÊûú‰∏çÁªèÂ∏∏‰øÆÊîπËøêË°åÂèÇÊï∞ÔºàÊØîÂ¶ÇÂπ≥Êó∂ÈÉΩÊòØÁõ¥Êé•ÂèåÂáªËøêË°åÔºâÁöÑ‰∫∫ÔºåÂª∫ËÆÆ‰ΩøÁî®Âø´Êç∑ÊñπÂºèÔºåÊõ¥Êñπ‰æøÁÇπ„ÄÇ

&lt;details&gt;
&lt;summary&gt;&lt;code&gt;&lt;strong&gt;„Äå ÁÇπÂáªÂ±ïÂºÄ Êü•ÁúãÂÜÖÂÆπ „Äç&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt;

****

Âè≥ÈîÆ `CloudflareST.exe` Êñá‰ª∂ - **\[ÂàõÂª∫Âø´Êç∑ÊñπÂºè\]**ÔºåÁÑ∂ÂêéÂè≥ÈîÆËØ•Âø´Êç∑ÊñπÂºè - **\[Â±ûÊÄß\]**Ôºå‰øÆÊîπÂÖ∂**ÁõÆÊ†á**Ôºö

``` bash
# Â¶ÇÊûúË¶Å‰∏çËæìÂá∫ÁªìÊûúÊñá‰ª∂ÔºåÈÇ£‰πàËØ∑Âä†‰∏ä -o &quot; &quot;ÔºåÂºïÂè∑ÈáåÁöÑÊòØÁ©∫Ê†ºÔºàÊ≤°ÊúâÁ©∫Ê†º‰ºöÂØºËá¥ËØ•ÂèÇÊï∞Ë¢´ÁúÅÁï•Ôºâ„ÄÇ
D:\ABC\CloudflareST\CloudflareST.exe -n 500 -t 4 -dn 20 -dt 5 -o &quot; &quot;

# Â¶ÇÊûúÊñá‰ª∂Ë∑ØÂæÑÂåÖÂê´ÂºïÂè∑ÔºåÂàôÈúÄË¶ÅÊääÂêØÂä®ÂèÇÊï∞ÊîæÂú®ÂºïÂè∑Â§ñÈù¢ÔºåËÆ∞ÂæóÂºïÂè∑Âíå - ‰πãÈó¥ÊúâÁ©∫Ê†º„ÄÇ
&quot;D:\Program Files\CloudflareST\CloudflareST.exe&quot; -n 500 -t 4 -dn 20 -dt 5 -o &quot; &quot;

# Ê≥®ÊÑèÔºÅÂø´Êç∑ÊñπÂºè - Ëµ∑Âßã‰ΩçÁΩÆ ‰∏çËÉΩÊòØÁ©∫ÁöÑÔºåÂê¶ÂàôÂ∞±‰ºöÂõ†‰∏∫ÁªùÂØπË∑ØÂæÑËÄåÊâæ‰∏çÂà∞ ip.txt Êñá‰ª∂
```

&lt;/details&gt;

****

#### \# IPv4/IPv6

&lt;details&gt;
&lt;summary&gt;&lt;code&gt;&lt;strong&gt;„Äå ÁÇπÂáªÂ±ïÂºÄ Êü•ÁúãÂÜÖÂÆπ „Äç&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt;

****
``` bash
# ÊåáÂÆöËá™Â∏¶ÁöÑ IPv4 Êï∞ÊçÆÊñá‰ª∂ÂèØÊµãÈÄüËøô‰∫õ IPv4 Âú∞ÂùÄÔºà-f ÈªòËÆ§ÂÄºÂ∞±ÊòØ ip.txtÔºåÊâÄ‰ª•ËØ•ÂèÇÊï∞ÂèØÁúÅÁï•Ôºâ
CloudflareST.exe -f ip.txt

# ÊåáÂÆöËá™Â∏¶ÁöÑ IPv6 Êï∞ÊçÆÊñá‰ª∂ÂèØÊµãÈÄüËøô‰∫õ IPv6 Âú∞ÂùÄ
# Âè¶Â§ñÔºåv2.1.0 ÁâàÊú¨ÂêéÊîØÊåÅ IPv4+IPv6 Ê∑∑ÂêàÊµãÈÄüÂπ∂ÁßªÈô§‰∫Ü -ipv6 ÂèÇÊï∞ÔºåÂõ†Ê≠§‰∏Ä‰∏™Êñá‰ª∂ÂÜÖÂèØ‰ª•ÂêåÊó∂ÂåÖÂê´ IPv4+IPv6 Âú∞ÂùÄ
CloudflareST.exe -f ipv6.txt

# ‰πüÂèØ‰ª•Áõ¥Êé•ÈÄöËøáÂèÇÊï∞ÊåáÂÆöË¶ÅÊµãÈÄüÁöÑ IP
CloudflareST.exe -ip 1.1.1.1,2606:4700::/32
```

&gt; ÊµãÈÄü IPv6 Êó∂ÔºåÂèØËÉΩ‰ºöÊ≥®ÊÑèÂà∞ÊØèÊ¨°ÊµãÈÄüÊï∞ÈáèÈÉΩ‰∏ç‰∏ÄÊ†∑Ôºå‰∫ÜËß£ÂéüÂõ†Ôºö [#120](https://github.com/XIU2/CloudflareSpeedTest/issues/120)  
&gt; Âõ†‰∏∫ IPv6 Â§™Â§öÔºà‰ª•‰∫ø‰∏∫Âçï‰ΩçÔºâÔºå‰∏îÁªùÂ§ßÈÉ®ÂàÜ IP ÊÆµÂéãÊ†πÊú™ÂêØÁî®ÔºåÊâÄ‰ª•ÊàëÂè™Êâ´‰∫Ü‰∏ÄÈÉ®ÂàÜÂèØÁî®ÁöÑ IPv6 ÊÆµÂÜôÂà∞ `ipv6.txt` Êñá‰ª∂‰∏≠ÔºåÊúâÂÖ¥Ë∂£ÁöÑÂèØ‰ª•Ëá™Ë°åÊâ´ÊèèÂ¢ûÂà†ÔºåASN Êï∞ÊçÆÊ∫êÊù•Ëá™Ôºö[bgp.he.net](https://bgp.he.net/AS13335#_prefixes6)

&lt;/details&gt;

****

#### \# HTTPing

&lt;details&gt;
&lt;summary&gt;&lt;code&gt;&lt;strong&gt;„Äå ÁÇπÂáªÂ±ïÂºÄ Êü•ÁúãÂÜÖÂÆπ „Äç&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt;

****

ÁõÆÂâçÊúâ‰∏§ÁßçÂª∂ËøüÊµãÈÄüÊ®°ÂºèÔºåÂàÜÂà´‰∏∫ **TCP ÂçèËÆÆ„ÄÅHTTP ÂçèËÆÆ**„ÄÇ  
TCP ÂçèËÆÆËÄóÊó∂Êõ¥Áü≠„ÄÅÊ∂àËÄóËµÑÊ∫êÊõ¥Â∞ëÔºåË∂ÖÊó∂Êó∂Èó¥‰∏∫ 1 ÁßíÔºåËØ•ÂçèËÆÆ‰∏∫ÈªòËÆ§Ê®°Âºè„ÄÇ  
HTTP ÂçèËÆÆÈÄÇÁî®‰∫éÂø´ÈÄüÊµãËØïÊüêÂüüÂêçÊåáÂêëÊüê IP Êó∂ÊòØÂê¶ÂèØ‰ª•ËÆøÈóÆÔºåË∂ÖÊó∂Êó∂Èó¥‰∏∫ 2 Áßí„ÄÇ  
Âêå‰∏Ä‰∏™ IPÔºåÂêÑÂçèËÆÆÂéª Ping ÂæóÂà∞ÁöÑÂª∂Ëøü‰∏ÄËà¨‰∏∫Ôºö**ICMP &lt; TCP &lt; HTTP**ÔºåË∂äÈù†Âè≥ÂØπ‰∏¢ÂåÖÁ≠âÁΩëÁªúÊ≥¢Âä®Ë∂äÊïèÊÑü„ÄÇ

&gt; Ê≥®ÊÑèÔºöHTTPing Êú¨Ë¥®‰∏ä‰πüÁÆó‰∏ÄÁßç**ÁΩëÁªúÊâ´Êèè**Ë°å‰∏∫ÔºåÂõ†Ê≠§Â¶ÇÊûú‰Ω†Âú®ÊúçÂä°Âô®‰∏äÈù¢ËøêË°åÔºåÈúÄË¶Å**Èôç‰ΩéÂπ∂Âèë**(`-n`)ÔºåÂê¶ÂàôÂèØËÉΩ‰ºöË¢´‰∏Ä‰∫õ‰∏•Ê†ºÁöÑÂïÜÂÆ∂ÊöÇÂÅúÊúçÂä°„ÄÇÂ¶ÇÊûú‰Ω†ÈÅáÂà∞ HTTPing È¶ñÊ¨°ÊµãÈÄüÂèØÁî® IP Êï∞ÈáèÊ≠£Â∏∏ÔºåÂêéÁª≠ÊµãÈÄüË∂äÊù•Ë∂äÂ∞ëÁîöËá≥Áõ¥Êé•‰∏∫ 0Ôºå‰ΩÜÂÅú‰∏ÄÊÆµÊó∂Èó¥ÂêéÂèàÊÅ¢Â§ç‰∫ÜÁöÑÊÉÖÂÜµÔºåÈÇ£‰πà‰πüÂèØËÉΩÊòØË¢´ ËøêËê•ÂïÜ„ÄÅCloudflare CDN ËÆ§‰∏∫‰Ω†Âú®ÁΩëÁªúÊâ´ÊèèËÄå**Ëß¶Âèë‰∏¥Êó∂ÈôêÂà∂Êú∫Âà∂**ÔºåÂõ†Ê≠§Êâç‰ºöËøá‰∏Ä‰ºöÂÑøÂ∞±ÊÅ¢Â§ç‰∫ÜÔºåÂª∫ËÆÆ**Èôç‰ΩéÂπ∂Âèë**(`-n`)ÂáèÂ∞ëËøôÁßçÊÉÖÂÜµÁöÑÂèëÁîü„ÄÇ

&gt; Âè¶Â§ñÔºåÊú¨ËΩØ‰ª∂ HTTPing ‰ªÖËé∑Âèñ**ÂìçÂ∫îÂ§¥(response headers)**ÔºåÂπ∂‰∏çËé∑ÂèñÊ≠£ÊñáÂÜÖÂÆπÔºàÂç≥ URL Êñá‰ª∂Â§ßÂ∞è‰∏çÂΩ±Âìç HTTPing ÊµãËØïÔºå‰ΩÜÂ¶ÇÊûú‰Ω†ËøòË¶Å‰∏ãËΩΩÊµãÈÄüÁöÑËØùÔºåÈÇ£‰πàËøòÊòØÈúÄË¶Å‰∏Ä‰∏™Â§ßÊñá‰ª∂ÁöÑÔºâÔºåÁ±ª‰ºº‰∫é curl -i ÂäüËÉΩ„ÄÇ

``` bash
# Âè™ÈúÄÂä†‰∏ä -httping ÂèÇÊï∞Âç≥ÂèØÂàáÊç¢Âà∞ HTTP ÂçèËÆÆÂª∂ËøüÊµãÈÄüÊ®°Âºè
CloudflareST.exe -httping

# ËΩØ‰ª∂‰ºöÊ†πÊçÆËÆøÈóÆÊó∂ÁΩëÈ°µËøîÂõûÁöÑÊúâÊïà HTTP Áä∂ÊÄÅÁ†ÅÊù•Âà§Êñ≠ÂèØÁî®ÊÄßÔºàÂΩìÁÑ∂Ë∂ÖÊó∂‰πüÁÆóÔºâÔºåÈªòËÆ§ÂØπËøîÂõû 200 301 302 Ëøô‰∏â‰∏™ HTTP Áä∂ÊÄÅÁ†ÅÁöÑËßÜ‰∏∫ÊúâÊïàÔºåÂèØ‰ª•ÊâãÂä®ÊåáÂÆöËÆ§‰∏∫ÊúâÊïàÁöÑ HTTP Áä∂ÊÄÅÁ†ÅÔºå‰ΩÜÂè™ËÉΩÊåáÂÆö‰∏Ä‰∏™Ôºà‰Ω†ÈúÄË¶ÅÊèêÂâçÁ°ÆÂÆöÊµãËØïÂú∞ÂùÄÊ≠£Â∏∏ÊÉÖÂÜµ‰∏ã‰ºöËøîÂõûÂì™‰∏™Áä∂ÊÄÅÁ†ÅÔºâ
CloudflareST.exe -httping -httping-code 200

# ÈÄöËøá -url ÂèÇÊï∞Êù•ÊåáÂÆö HTTPing ÊµãËØïÂú∞ÂùÄÔºàÂèØ‰ª•ÊòØ‰ªªÊÑèÁΩëÈ°µ URLÔºå‰∏çÂ±ÄÈôê‰∫éÂÖ∑‰ΩìÊñá‰ª∂Âú∞ÂùÄÔºâ
CloudflareST.exe -httping -url https://cf.xiu2.xyz/url
# Â¶ÇÊûú‰Ω†Ë¶Å HTTPing ÊµãËØïÂÖ∂‰ªñÁΩëÁ´ô/CDNÔºåÈÇ£‰πàÊåáÂÆö‰∏Ä‰∏™ËØ•ÁΩëÁ´ô/‰ΩøÁî®ËØ• CDN ÁöÑÂú∞ÂùÄÔºàÂõ†‰∏∫ËΩØ‰ª∂ÈªòËÆ§Âú∞ÂùÄÊòØ Cloudflare ÁöÑÔºåÂè™ËÉΩÁî®‰∫éÊµãËØï Cloudflare ÁöÑ IPÔºâ

# Ê≥®ÊÑèÔºöÂ¶ÇÊûúÊµãÈÄüÂú∞ÂùÄ‰∏∫ HTTP ÂçèËÆÆÔºåËÆ∞ÂæóÂä†‰∏ä -tp 80ÔºàËøô‰∏™ÂèÇÊï∞‰ºöÂΩ±Âìç Âª∂ËøüÊµãÈÄü/‰∏ãËΩΩÊµãÈÄü Êó∂‰ΩøÁî®ÁöÑÁ´ØÂè£Ôºâ
# ÂêåÁêÜÔºåÂ¶ÇÊûúË¶ÅÊµãÈÄü 80 Á´ØÂè£ÔºåÈÇ£‰πà‰πüÈúÄË¶ÅÂä†‰∏ä -url ÂèÇÊï∞Êù•ÊåáÂÆö‰∏Ä‰∏™ http:// ÂçèËÆÆÁöÑÂú∞ÂùÄÊâçË°åÔºà‰∏îËØ•Âú∞ÂùÄ‰∏ç‰ºöÂº∫Âà∂ÈáçÂÆöÂêëËá≥ HTTPSÔºâÔºåÂ¶ÇÊûúÊòØÈùû 80 443 Á´ØÂè£ÔºåÈÇ£‰πàÈúÄË¶ÅÁ°ÆÂÆöËØ•‰∏ãËΩΩÊµãÈÄüÂú∞ÂùÄÊòØÂê¶ÊîØÊåÅÈÄöËøáËØ•Á´ØÂè£ËÆøÈóÆ„ÄÇ
CloudflareST.exe -httping -tp 80 -url http://cdn.cloudflare.steamstatic.com/steam/apps/5952/movie_max.webm
```

&lt;/details&gt;

****

#### \# ÂåπÈÖçÊåáÂÆöÂú∞Âå∫(colo Êú∫Âú∫‰∏âÂ≠óÁ†Å)

&lt;details&gt;
&lt;summary&gt;&lt;code&gt;&lt;strong&gt;„Äå ÁÇπÂáªÂ±ïÂºÄ Êü•ÁúãÂÜÖÂÆπ „Äç&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt;

****

Cloudflare CDN ÁöÑËäÇÁÇπ IP ÊòØ Anycast IPÔºåÂç≥ÊØè‰∏™ IP ÂØπÂ∫îÁöÑÊúçÂä°Âô®ËäÇÁÇπÂèäÂú∞Âå∫‰∏çÊòØÂõ∫ÂÆöÁöÑÔºåËÄåÊòØÂä®ÊÄÅÂèòÂåñÁöÑÔºå**‰∏çÂêåÂú∞Âå∫„ÄÅ‰∏çÂêåËøêËê•ÂïÜ„ÄÅ‰∏çÂêåÊó∂Èó¥ÊÆµ**ËÆøÈóÆ**Âêå‰∏Ä‰∏™ IP** ÂàÜÈÖçÂà∞ÁöÑÊúçÂä°Âô®ËäÇÁÇπÂú∞Âå∫ÂíåË∑ØÁ∫ø‰πüÈÉΩÊòØ‰∏ç‰∏ÄÊ†∑ÁöÑÔºàÊØîÂ¶ÇÂêå‰∏Ä‰∏™ IPÔºåÁæéÂõΩ‰∫∫ËÆøÈóÆÂ∞±ÊòØÂàÜÈÖçÂà∞Â∞±ËøëÁöÑÁæéÂõΩËäÇÁÇπÊúçÂä°Âô®ÔºåÊó•Êú¨‰∫∫ËÆøÈóÆÂàôÂ∞±ÂèàÂèòÊàê‰∫ÜÂ∞±ËøëÁöÑÊó•Êú¨ËäÇÁÇπÊúçÂä°Âô®‰∫ÜÔºåÂõΩÂÜÖÂÜÖÂú∞Â∞±ÊØîËæÉÁâπÊÆä‰∫ÜÔºåÂè™ËÉΩÁªô‰Ω†ÂàÜÈÖçÂà∞ÂÖ∂‰ªñÂõΩÂÆ∂ÔºåÂΩìÁÑ∂‰∏çÂêåÁöÑ IP ÊÆµË∑ØÁî±ÂèòÂåñ/ÂàÜÈÖçÈÄªËæë‰πüÊòØ‰∏çÂêåÁöÑÔºåÊúâÁöÑ IP ÊÆµ‰ºöËæÉ‰∏∫Âõ∫ÂÆöÔºâ„ÄÇ

&gt; **Ê≥®ÊÑè**ÔºÅËôΩÁÑ∂ Cloudflare CDN ÊúâÂæàÂ§ö‰∫öÊ¥≤ËäÇÁÇπÔºå‰ΩÜ**‰∏ç‰ª£Ë°®‰Ω†Â∞±ËÉΩÁî®‰∏ä**ÔºåÊñ∞Âä†Âù°‰∫∫ÊµãÈÄüÂèØËÉΩÈöè‰æø‰∏ÄÊäì‰∏ÄÂ§ßÊääÁöÑÊñ∞Âä†Âù°ËäÇÁÇπÔºå‰ΩÜ‰Ω†ÂÖ®ÈÉ®Êâ´‰∏ÄÈÅçÂèØËÉΩÈÉΩÈÅá‰∏çÂà∞‰∏Ä‰∏™ÔºåÂõ†‰∏∫ËøôÊòØÁî± CDN ÊéßÂà∂ÁöÑ„ÄÇAnycast IP ÁöÑË∑ØÁî±ÊòØÁªèÂ∏∏ÂèòÁöÑÔºåÂêå‰∏Ä‰∏™ IP ‰ªäÂ§©ÂèØËÉΩÊòØÁæéÂõΩÔºåÊòéÂ§©‰Ω†ÂÜçËÆøÈóÆÂèØËÉΩÂ∞±ÂèàÂàÜÈÖçÂà∞Ê¨ßÊ¥≤ËäÇÁÇπ‰∫ÜÔºàÂΩìÁÑ∂ËøôÂè™ÊòØ‰∏™‰æãÂ≠êÔºå‰∏ÄËà¨Ê≤°ÊúâÈÇ£‰πàÈ¢ëÁπÅÔºåËøô‰πüÂíåÂæàÂ§öÂõ†Á¥†ÊúâÂÖ≥ÔºåÊØîÂ¶ÇÁ∫øË∑ØÊã•Â°ûÁ®ãÂ∫¶ÔºåÊàêÊú¨ÂèòÂä®Á≠âÔºâÔºåÂõ†Ê≠§**‰∏çË¶ÅÂØπËØ•ÂäüËÉΩÊúâËøáÈ´òÊúüÂæÖ**~

ÊàñËÄÖ‰Ω†Èöè‰æøÊâæ‰∏™ Cloudflare CDN ÁöÑ IPÔºàÊØîÂ¶ÇÂÆòÁΩëÂüüÂêçÁöÑËß£Êûê IP `104.16.123.96`ÔºâÔºåÁÑ∂ÂêéÂéªÈÇ£‰∫õÊúâÂÖ®ÁêÉËäÇÁÇπÁöÑ[Âú®Á∫ø Ping ÊµãËØï](https://ping.sx/ping?t=104.16.123.96)ÁΩëÁ´ôÔºå‰Ω†Â∞±‰ºöÂèëÁé∞Ëøô‰∏™ IP Âú®ÂÖ®ÁêÉÂ§ßÈÉ®ÂàÜÂú∞Âå∫ÁöÑÂª∂ËøüÈÉΩÊòØ‰∏™‰ΩçÊï∞ÔºàËÄå‰∏îÂæàÂ§öÈÉΩÊòØ 0.X msÔºâÔºåÂ∞±ÁÆó‰∏Ä‰∫õÂú∞ÊñπÂª∂ËøüÈ´ò‰∏Ä‰∫õ‰ΩÜ‰πüÂü∫Êú¨ÈÉΩÊéßÂà∂Âú® Âá†ÂçÅmsÔºåÂè™ÊúâÂú®ÂõΩÂÜÖÊâç‰ºöÂèëÁé∞Á™ÅÁÑ∂ÂèòÊàê‰∫Ü ‰∏äÁôæms ‰∫Ü„ÄÇ

ËøôÂ∞±ÊòØ Anycast ÊäÄÊúØÔºå‰πüÂ∞±Âè™ÊúâÂõΩÂÜÖÂ§ßÈôÜËøôÁßçÁâπÊÆäÁöÑÁΩëÁªúÊÉÖÂÜµÔºåÊâçÈúÄË¶ÅÂØπ Anycast ÁöÑ CDN IP ËøõË°å‰ºòÈÄâ„ÄÇ

Âõ†Ê≠§ÔºåÂØπ‰∫éËøôÁßç Anycast IP ÁöÑÂÆûÈôÖÊúçÂä°Âô®‰ΩçÁΩÆÔºåÂ∞±‰∏çËÉΩÈù†ÈÇ£‰∫õÂú®Á∫ø IP Âú∞ÂùÄ‰ΩçÁΩÆÊü•ËØ¢ÁΩëÁ´ôÊù•Âà§Êñ≠‰∫Ü„ÄÇ

Èô§‰∫ÜÈÄöËøá **HTTP ÂìçÂ∫îÂ§¥**Ëé∑ÂèñÊú∫Âú∫‰∏âÂ≠óÁ†ÅÂ§ñÔºàËØ•ÂäüËÉΩÁöÑÂÆûÁé∞ÊñπÂºèÔºâÔºåËøòÂèØ‰ª•ÊâãÂä®ËÆøÈóÆ `http://CloudflareIP/cdn-cgi/trace` Êù•Ëé∑Áü• CDN ÂàÜÈÖçÁªô‰Ω†ÁöÑÂÆûÈôÖËäÇÁÇπÂú∞Âå∫Êú∫Âú∫‰∏âÂ≠óÁ†Å„ÄÇ

&gt; ËØ•ÂäüËÉΩÊîØÊåÅ Cloudflare CDN Âíå AWS CloudFront CDNÔºå‰∏îËøô‰∏§‰∏™ CDN ÁöÑÊú∫Âú∫‰∏âÂ≠óÁ†ÅÊòØÈÄöÁî®ÁöÑÔºàÁÆóÊòØÊÉØ‰æãÔºâ„ÄÇ  
&gt; **Ê≥®ÊÑè**ÔºöÂ¶ÇÊûú‰Ω†Ë¶ÅÁî®‰∫éÁ≠õÈÄâ AWS CloudFront CDN Âú∞Âå∫ÔºåÈÇ£‰πàË¶ÅÈÄöËøá `-url` ÂèÇÊï∞ÊåáÂÆö‰∏Ä‰∏™‰ΩøÁî® AWS CloudFront CDN ÁöÑ‰∏ãËΩΩÊµãÈÄüÂú∞ÂùÄÔºàÂõ†‰∏∫ËΩØ‰ª∂ÈªòËÆ§‰∏ãËΩΩÊµãÈÄüÂú∞ÂùÄÊòØ Cloudflare CDN ÁöÑÔºâ

``` bash
# ÊåáÂÆöÂú∞Âå∫ÂêçÂêéÔºåÂª∂ËøüÊµãÈÄüÂêéÂæóÂà∞ÁöÑÁªìÊûúÂ∞±ÈÉΩÊòØÊåáÂÆöÂú∞Âå∫ÁöÑ IP ‰∫ÜÔºàÂ¶ÇÊûúÊ≤°ÊúâÊåáÂÆö -dd ÁöÑËØùÂàô‰ºöÁªßÁª≠ËøõË°å‰∏ãËΩΩÊµãÈÄüÔºâ
# Â¶ÇÊûúÂª∂ËøüÊµãÈÄüÂêéÁªìÊûú‰∏∫ 0ÔºåÂàôËØ¥ÊòéÊ≤°ÊúâÊâæÂà∞‰ªª‰Ωï‰∏Ä‰∏™ÔºàÊú™Ë∂ÖÊó∂ÂèØÁî®ÁöÑÔºâÊåáÂÆöÂú∞Âå∫ÁöÑ IP„ÄÇ
# ËäÇÁÇπÂú∞Âå∫Âêç‰∏∫ÂΩìÂú∞ Êú∫Âú∫‰∏âÂ≠óÁ†ÅÔºåÊåáÂÆöÂ§ö‰∏™Êó∂Áî®Ëã±ÊñáÈÄóÂè∑ÂàÜÈöîÔºåv2.2.3 ÁâàÊú¨ÂêéÊîØÊåÅÂ∞èÂÜô

CloudflareST.exe -httping -cfcolo HKG,KHH,NRT,LAX,SEA,SJC,FRA,MAD

# Ê≥®ÊÑèÔºåËØ•ÂèÇÊï∞Âè™ÊúâÂú® HTTPing Âª∂ËøüÊµãÈÄüÊ®°Âºè‰∏ãÊâçÂèØÁî®ÔºàÂõ†‰∏∫ËΩØ‰ª∂ÊòØÈÄöËøá HTTP ÈìæÊé•‰∏≠ÁöÑÂìçÂ∫îÂ§¥Êù•Ëé∑ÂæóËØ• IP ÁöÑÂÆûÈôÖÂú∞Âå∫Êú∫Âú∫‰∏âÂ≠óÁ†ÅÔºâ
```

&gt; ‰∏§‰∏™ CDN Êú∫Âú∫‰∏âÂ≠óÁ†ÅÈÄöÁî®ÔºåÂõ†Ê≠§ÂêÑÂú∞Âå∫ÂêçÂèØËßÅÔºöhttps://www.cloudflarestatus.com/

&lt;/details&gt;

****

#### \# Êñá‰ª∂Áõ∏ÂØπ/ÁªùÂØπË∑ØÂæÑ

&lt;details&gt;
&lt;summary&gt;&lt;code&gt;&lt;strong&gt;„Äå ÁÇπÂáªÂ±ïÂºÄ Êü•ÁúãÂÜÖÂÆπ „Äç&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt;

****

``` bash
# ÊåáÂÆö IPv4 Êï∞ÊçÆÊñá‰ª∂Ôºå‰∏çÊòæÁ§∫ÁªìÊûúÁõ¥Êé•ÈÄÄÂá∫ÔºåËæìÂá∫ÁªìÊûúÂà∞Êñá‰ª∂Ôºà-p ÂÄº‰∏∫ 0Ôºâ
CloudflareST.exe -f 1.txt -p 0 -dd

# ÊåáÂÆö IPv4 Êï∞ÊçÆÊñá‰ª∂Ôºå‰∏çËæìÂá∫ÁªìÊûúÂà∞Êñá‰ª∂ÔºåÁõ¥Êé•ÊòæÁ§∫ÁªìÊûúÔºà-p ÂÄº‰∏∫ 10 Êù°Ôºå-o ÂÄº‰∏∫Á©∫‰ΩÜÂºïÂè∑‰∏çËÉΩÂ∞ëÔºâ
CloudflareST.exe -f 2.txt -o &quot;&quot; -p 10 -dd

# ÊåáÂÆö IPv4 Êï∞ÊçÆÊñá‰ª∂ Âèä ËæìÂá∫ÁªìÊûúÂà∞Êñá‰ª∂ÔºàÁõ∏ÂØπË∑ØÂæÑÔºåÂç≥ÂΩìÂâçÁõÆÂΩï‰∏ãÔºåÂ¶ÇÂê´Á©∫Ê†ºËØ∑Âä†‰∏äÂºïÂè∑Ôºâ
CloudflareST.exe -f 3.txt -o result.txt -dd


# ÊåáÂÆö IPv4 Êï∞ÊçÆÊñá‰ª∂ Âèä ËæìÂá∫ÁªìÊûúÂà∞Êñá‰ª∂ÔºàÁõ∏ÂØπË∑ØÂæÑÔºåÂç≥ÂΩìÂâçÁõÆÂΩïÂÜÖÁöÑ abc Êñá‰ª∂Â§π‰∏ãÔºåÂ¶ÇÂê´Á©∫Ê†ºËØ∑Âä†‰∏äÂºïÂè∑Ôºâ
# LinuxÔºàCloudflareST Á®ãÂ∫èÊâÄÂú®ÁõÆÂΩïÂÜÖÁöÑ abc Êñá‰ª∂Â§π‰∏ãÔºâ
./CloudflareST -f abc/3.txt -o abc/result.txt -dd

# WindowsÔºàÊ≥®ÊÑèÊòØÂèçÊñúÊù†Ôºâ
CloudflareST.exe -f abc\3.txt -o abc\result.txt -dd


# ÊåáÂÆö IPv4 Êï∞ÊçÆÊñá‰ª∂ Âèä ËæìÂá∫ÁªìÊûúÂà∞Êñá‰ª∂ÔºàÁªùÂØπË∑ØÂæÑÔºåÂç≥ C:\abc\ ÁõÆÂΩï‰∏ãÔºåÂ¶ÇÂê´Á©∫Ê†ºËØ∑Âä†‰∏äÂºïÂè∑Ôºâ
# LinuxÔºà/abc/ ÁõÆÂΩï‰∏ãÔºâ
./CloudflareST -f /abc/4.txt -o /abc/result.csv -dd

# WindowsÔºàÊ≥®ÊÑèÊòØÂèçÊñúÊù†Ôºâ
CloudflareST.exe -f C:\abc\4.txt -o C:\abc\result.csv -dd


# Â¶ÇÊûúË¶Å‰ª•„ÄêÁªùÂØπË∑ØÂæÑ„ÄëËøêË°å CloudflareSTÔºåÈÇ£‰πà -f / -o ÂèÇÊï∞‰∏≠ÁöÑÊñá‰ª∂Âêç‰πüÂøÖÈ°ªÊòØ„ÄêÁªùÂØπË∑ØÂæÑ„ÄëÔºåÂê¶Âàô‰ºöÊä•ÈîôÊâæ‰∏çÂà∞Êñá‰ª∂ÔºÅ
# LinuxÔºà/abc/ ÁõÆÂΩï‰∏ãÔºâ
/abc/CloudflareST -f /abc/4.txt -o /abc/result.csv -dd

# WindowsÔºàÊ≥®ÊÑèÊòØÂèçÊñúÊù†Ôºâ
C:\abc\CloudflareST.exe -f C:\abc\4.txt -o C:\abc\result.csv -dd
```
&lt;/details&gt;

****

#### \# ÊµãÈÄüÂÖ∂‰ªñÁ´ØÂè£

&lt;details&gt;
&lt;summary&gt;&lt;code&gt;&lt;strong&gt;„Äå ÁÇπÂáªÂ±ïÂºÄ Êü•ÁúãÂÜÖÂÆπ „Äç&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt;

****

``` bash
# Â¶ÇÊûú‰Ω†ÊÉ≥Ë¶ÅÊµãÈÄüÈùûÈªòËÆ§ 443 ÁöÑÂÖ∂‰ªñÁ´ØÂè£ÔºåÂàôÈúÄË¶ÅÈÄöËøá -tp ÂèÇÊï∞ÊåáÂÆöÔºàËØ•ÂèÇÊï∞‰ºöÂΩ±Âìç Âª∂ËøüÊµãÈÄü/‰∏ãËΩΩÊµãÈÄü Êó∂‰ΩøÁî®ÁöÑÁ´ØÂè£Ôºâ

# Â¶ÇÊûúË¶ÅÂª∂ËøüÊµãÈÄü 80 Á´ØÂè£+‰∏ãËΩΩÊµãÈÄüÔºàÂ¶ÇÊûú -dd Á¶ÅÁî®‰∫Ü‰∏ãËΩΩÊµãÈÄüÂàô‰∏çÈúÄË¶ÅÔºâÔºåÈÇ£‰πàËøòÈúÄË¶ÅÊåáÂÆö http:// ÂçèËÆÆÁöÑ‰∏ãËΩΩÊµãÈÄüÂú∞ÂùÄÊâçË°åÔºà‰∏îËØ•Âú∞ÂùÄ‰∏ç‰ºöÂº∫Âà∂ÈáçÂÆöÂêëËá≥ HTTPSÔºåÂõ†‰∏∫ÈÇ£Ê†∑Â∞±ÂèòÊàê 443 Á´ØÂè£‰∫ÜÔºâ
CloudflareST.exe -tp 80 -url http://cdn.cloudflare.steamstatic.com/steam/apps/5952/movie_max.webm

# Â¶ÇÊûúÊòØÈùû 80 443 ÁöÑÂÖ∂‰ªñÁ´ØÂè£ÔºåÈÇ£‰πàÈúÄË¶ÅÁ°ÆÂÆö‰Ω†‰ΩøÁî®ÁöÑ‰∏ãËΩΩÊµãÈÄüÂú∞ÂùÄÊòØÂê¶ÊîØÊåÅÈÄöËøáËØ•ÈùûÊ†áÁ´ØÂè£ËÆøÈóÆ„ÄÇ
```

&lt;/details&gt;

****

#### \# Ëá™ÂÆö‰πâÊµãÈÄüÂú∞ÂùÄ

&lt;details&gt;
&lt;summary&gt;&lt;code&gt;&lt;strong&gt;„Äå ÁÇπÂáªÂ±ïÂºÄ Êü•ÁúãÂÜÖÂÆπ „Äç&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt;

****

``` bash
# ËØ•ÂèÇÊï∞ÈÄÇÁî®‰∫é‰∏ãËΩΩÊµãÈÄü Âèä HTTP ÂçèËÆÆÁöÑÂª∂ËøüÊµãÈÄüÔºåÂØπ‰∫éÂêéËÄÖËØ•Âú∞ÂùÄÂèØ‰ª•ÊòØ‰ªªÊÑèÁΩëÈ°µ URLÔºà‰∏çÂ±ÄÈôê‰∫éÂÖ∑‰ΩìÊñá‰ª∂Âú∞ÂùÄÔºâ

# Âú∞ÂùÄË¶ÅÊ±ÇÔºöÂèØ‰ª•Áõ¥Êé•‰∏ãËΩΩ„ÄÅÊñá‰ª∂Â§ßÂ∞èË∂ÖËøá 200MB„ÄÅÁî®ÁöÑÊòØ Cloudflare CDN
CloudflareST.exe -url https://cf.xiu2.xyz/url

# Ê≥®ÊÑèÔºöÂ¶ÇÊûúÊµãÈÄüÂú∞ÂùÄ‰∏∫ HTTP ÂçèËÆÆÔºàËØ•Âú∞ÂùÄ‰∏çËÉΩÂº∫Âà∂ÈáçÂÆöÂêëËá≥ HTTPSÔºâÔºåËÆ∞ÂæóÂä†‰∏ä -tp 80ÔºàËøô‰∏™ÂèÇÊï∞‰ºöÂΩ±Âìç Âª∂ËøüÊµãÈÄü/‰∏ãËΩΩÊµãÈÄü Êó∂‰ΩøÁî®ÁöÑÁ´ØÂè£ÔºâÔºåÂ¶ÇÊûúÊòØÈùû 80 443 Á´ØÂè£ÔºåÈÇ£‰πàÈúÄË¶ÅÁ°ÆÂÆö‰∏ãËΩΩÊµãÈÄüÂú∞ÂùÄÊòØÂê¶ÊîØÊåÅÈÄöËøáËØ•Á´ØÂè£ËÆøÈóÆ„ÄÇ
CloudflareST.exe -tp 80 -url http://cdn.cloudflare.steamstatic.com/steam/apps/5952/movie_max.webm
```

&lt;/details&gt;

****

#### \# Ëá™ÂÆö‰πâÊµãÈÄüÊù°‰ª∂ÔºàÊåáÂÆö Âª∂Ëøü/‰∏¢ÂåÖ/‰∏ãËΩΩÈÄüÂ∫¶ ÁöÑÁõÆÊ†áËåÉÂõ¥Ôºâ

&lt;details&gt;
&lt;summary&gt;&lt;code&gt;&lt;strong&gt;„Äå ÁÇπÂáªÂ±ïÂºÄ Êü•ÁúãÂÜÖÂÆπ „Äç&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt;

****

&gt; Ê≥®ÊÑèÔºöÂª∂ËøüÊµãÈÄüËøõÂ∫¶Êù°Âè≥ËæπÁöÑ**ÂèØÁî®Êï∞Èáè**Ôºå‰ªÖÊåáÂª∂ËøüÊµãÈÄüËøáÁ®ã‰∏≠**Êú™Ë∂ÖÊó∂ÁöÑ IP Êï∞Èáè**ÔºåÂíåÂª∂Ëøü‰∏ä‰∏ãÈôêÊù°‰ª∂Êó†ÂÖ≥„ÄÇ

- ‰ªÖÊåáÂÆö **[Âπ≥ÂùáÂª∂Ëøü‰∏äÈôê]** Êù°‰ª∂

``` bash
# Âπ≥ÂùáÂª∂Ëøü‰∏äÈôêÔºö200 msÔºå‰∏ãËΩΩÈÄüÂ∫¶‰∏ãÈôêÔºö0 MB/s
# Âç≥ÊâæÂà∞Âπ≥ÂùáÂª∂Ëøü‰Ωé‰∫é 200 ms ÁöÑ IPÔºåÁÑ∂ÂêéÂÜçÊåâÂª∂Ëøü‰ªé‰ΩéÂà∞È´òËøõË°å 10 Ê¨°‰∏ãËΩΩÊµãÈÄü
CloudflareST.exe -tl 200
```

&gt; Â¶ÇÊûú**Ê≤°ÊúâÊâæÂà∞‰∏Ä‰∏™Êª°Ë∂≥Âª∂Ëøü**Êù°‰ª∂ÁöÑ IPÔºåÈÇ£‰πà‰∏ç‰ºöËæìÂá∫‰ªª‰ΩïÂÜÖÂÆπ„ÄÇ

****

- ‰ªÖÊåáÂÆö **[Âπ≥ÂùáÂª∂Ëøü‰∏äÈôê]** Êù°‰ª∂Ôºå‰∏î**Âè™Âª∂ËøüÊµãÈÄüÔºå‰∏ç‰∏ãËΩΩÊµãÈÄü**

``` bash
# Âπ≥ÂùáÂª∂Ëøü‰∏äÈôêÔºö200 msÔºå‰∏ãËΩΩÈÄüÂ∫¶‰∏ãÈôêÔºö0 MB/sÔºåÊï∞ÈáèÔºö‰∏çÁü•ÈÅìÂ§öÂ∞ë ‰∏™
# Âç≥Âè™ËæìÂá∫‰Ωé‰∫é 200ms ÁöÑ IPÔºå‰∏î‰∏çÂÜç‰∏ãËΩΩÊµãÈÄüÔºàÂõ†‰∏∫‰∏çÂÜç‰∏ãËΩΩÊµãÈÄüÔºåÊâÄ‰ª• -dn ÂèÇÊï∞Â∞±Êó†Êïà‰∫ÜÔºâ
CloudflareST.exe -tl 200 -dd
```

- ‰ªÖÊåáÂÆö **[‰∏¢ÂåÖÂá†Áéá‰∏äÈôê]** Êù°‰ª∂

``` bash
# ‰∏¢ÂåÖÂá†Áéá‰∏äÈôêÔºö0.25
# Âç≥ÊâæÂà∞‰∏¢ÂåÖÁéá‰Ωé‰∫éÁ≠â‰∫é 0.25 ÁöÑ IPÔºåËåÉÂõ¥ 0.00~1.00ÔºåÂ¶ÇÊûú -tlr 0 Âàô‰ª£Ë°®ËøáÊª§Êéâ‰ªª‰Ωï‰∏¢ÂåÖÁöÑ IP
CloudflareST.exe -tlr 0.25
```

****

- ‰ªÖÊåáÂÆö **[‰∏ãËΩΩÈÄüÂ∫¶‰∏ãÈôê]** Êù°‰ª∂

``` bash
# Âπ≥ÂùáÂª∂Ëøü‰∏äÈôêÔºö9999 msÔºå‰∏ãËΩΩÈÄüÂ∫¶‰∏ãÈôêÔºö5 MB/sÔºåÊï∞ÈáèÔºö10 ‰∏™ÔºàÂèØÈÄâÔºâ
# Âç≥ÈúÄË¶ÅÊâæÂà∞ 10 ‰∏™Âπ≥ÂùáÂª∂Ëøü‰Ωé‰∫é 9999 ms ‰∏î‰∏ãËΩΩÈÄüÂ∫¶È´ò‰∫é 5 MB/s ÁöÑ IP Êâç‰ºöÂÅúÊ≠¢ÊµãÈÄü
CloudflareST.exe -sl 5 -dn 10
```

&gt; Â¶ÇÊûú**Ê≤°ÊúâÊâæÂà∞‰∏Ä‰∏™Êª°Ë∂≥ÈÄüÂ∫¶**Êù°‰ª∂ÁöÑ IPÔºåÈÇ£‰πà‰ºö**ÂøΩÁï•Êù°‰ª∂ËæìÂá∫ÊâÄÊúâ IP ÊµãÈÄüÁªìÊûú**ÔºàÊñπ‰æø‰Ω†‰∏ãÊ¨°ÊµãÈÄüÊó∂Ë∞ÉÊï¥Êù°‰ª∂Ôºâ„ÄÇ

&gt; Ê≤°ÊúâÊåáÂÆöÂπ≥ÂùáÂª∂Ëøü‰∏äÈôêÊó∂ÔºåÂ¶ÇÊûú‰∏ÄÁõ¥**Âáë‰∏çÂ§ü**Êª°Ë∂≥Êù°‰ª∂ÁöÑ IP Êï∞ÈáèÔºåÂ∞±‰ºö**‰∏ÄÁõ¥ÊµãÈÄü**‰∏ãÂéª„ÄÇ  
&gt; ÊâÄ‰ª•Âª∫ËÆÆ**ÂêåÊó∂ÊåáÂÆö [‰∏ãËΩΩÈÄüÂ∫¶‰∏ãÈôê] + [Âπ≥ÂùáÂª∂Ëøü‰∏äÈôê]**ÔºåËøôÊ†∑ÊµãÈÄüÂà∞ÊåáÂÆöÂª∂Ëøü‰∏äÈôêËøòÊ≤°ÂáëÂ§üÊï∞ÈáèÔºåÂ∞±‰ºöÁªàÊ≠¢ÊµãÈÄü„ÄÇ

****

- ÂêåÊó∂ÊåáÂÆö **[Âπ≥ÂùáÂª∂Ëøü‰∏äÈôê] + [‰∏ãËΩΩÈÄüÂ∫¶‰∏ãÈôê]** Êù°‰ª∂

``` bash
# Âπ≥ÂùáÂª∂Ëøü‰∏äÈôê„ÄÅ‰∏ãËΩΩÈÄüÂ∫¶‰∏ãÈôêÂùáÊîØÊåÅÂ∞èÊï∞ÔºàÂ¶Ç -sl 0.5Ôºâ
# Âπ≥ÂùáÂª∂Ëøü‰∏äÈôêÔºö200 msÔºå‰∏ãËΩΩÈÄüÂ∫¶‰∏ãÈôêÔºö5.6 MB/sÔºåÊï∞ÈáèÔºö10 ‰∏™ÔºàÂèØÈÄâÔºâ
# Âç≥ÈúÄË¶ÅÊâæÂà∞ 10 ‰∏™Âπ≥ÂùáÂª∂Ëøü‰Ωé‰∫é 200 ms ‰∏î‰∏ãËΩΩÈÄüÂ∫¶È´ò‰∫é 5 .6MB/s ÁöÑ IP Êâç‰ºöÂÅúÊ≠¢ÊµãÈÄü
CloudflareST.exe -tl 200 -sl 5.6 -dn 10
```

&gt; Â¶ÇÊûú**Ê≤°ÊúâÊâæÂà∞‰∏Ä‰∏™Êª°Ë∂≥Âª∂Ëøü**Êù°‰ª∂ÁöÑ IPÔºåÈÇ£‰πà‰∏ç‰ºöËæìÂá∫‰ªª‰ΩïÂÜÖÂÆπ„ÄÇ  
&gt; Â¶ÇÊûú**Ê≤°ÊúâÊâæÂà∞‰∏Ä‰∏™Êª°Ë∂≥ÈÄüÂ∫¶**Êù°‰ª∂ÁöÑ IPÔºåÈÇ£‰πà‰ºöÂøΩÁï•Êù°‰ª∂ËæìÂá∫ÊâÄÊúâ IP ÊµãÈÄüÁªìÊûúÔºàÊñπ‰æø‰Ω†‰∏ãÊ¨°ÊµãÈÄüÊó∂Ë∞ÉÊï¥Êù°‰ª∂Ôºâ„ÄÇ  
&gt; ÊâÄ‰ª•Âª∫ËÆÆÂÖà‰∏çÊåáÂÆöÊù°‰ª∂ÊµãÈÄü‰∏ÄÈÅçÔºåÁúãÁúãÂπ≥ÂùáÂª∂ËøüÂíå‰∏ãËΩΩÈÄüÂ∫¶Â§ßÊ¶ÇÂú®‰ªÄ‰πàËåÉÂõ¥ÔºåÈÅøÂÖçÊåáÂÆöÊù°‰ª∂**Ëøá‰Ωé/ËøáÈ´ò**ÔºÅ

&gt; Âõ†‰∏∫ Cloudflare ÂÖ¨ÂºÄÁöÑ IP ÊÆµÊòØ**ÂõûÊ∫ê IP+‰ªªÊí≠ IP**ÔºåËÄå**ÂõûÊ∫ê IP**ÊòØÊó†Ê≥ï‰ΩøÁî®ÁöÑÔºåÊâÄ‰ª•‰∏ãËΩΩÊµãÈÄüÊòØ 0.00„ÄÇ  
&gt; ËøêË°åÊó∂ÂèØ‰ª•Âä†‰∏ä `-sl 0.01`Ôºà‰∏ãËΩΩÈÄüÂ∫¶‰∏ãÈôêÔºâÔºåËøáÊª§Êéâ**ÂõûÊ∫ê IP**Ôºà‰∏ãËΩΩÊµãÈÄü‰Ωé‰∫é 0.01MB/s ÁöÑÁªìÊûúÔºâ„ÄÇ

&lt;/details&gt;

****

#### \# ÂçïÁã¨ÂØπ‰∏Ä‰∏™ÊàñÂ§ö‰∏™ IP ÊµãÈÄü

&lt;details&gt;
&lt;summary&gt;&lt;code&gt;&lt;strong&gt;„Äå ÁÇπÂáªÂ±ïÂºÄ Êü•ÁúãÂÜÖÂÆπ „Äç&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt;

****

**ÊñπÂºè ‰∏Ä**Ôºö
Áõ¥Êé•ÈÄöËøáÂèÇÊï∞ÊåáÂÆöË¶ÅÊµãÈÄüÁöÑ IP ÊÆµÊï∞ÊçÆ„ÄÇ
``` bash
# ÂÖàËøõÂÖ• CloudflareST ÊâÄÂú®ÁõÆÂΩïÔºåÁÑ∂ÂêéËøêË°åÔºö
# Windows Á≥ªÁªüÔºàÂú® CMD ‰∏≠ËøêË°åÔºâ
CloudflareST.exe -ip 1.1.1.1,2.2.2.2/24,2606:4700::/32

# Linux Á≥ªÁªü
./CloudflareST -

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[tulir/whatsmeow]]></title>
            <link>https://github.com/tulir/whatsmeow</link>
            <guid>https://github.com/tulir/whatsmeow</guid>
            <pubDate>Mon, 21 Apr 2025 00:05:33 GMT</pubDate>
            <description><![CDATA[Go library for the WhatsApp web multidevice API]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/tulir/whatsmeow">tulir/whatsmeow</a></h1>
            <p>Go library for the WhatsApp web multidevice API</p>
            <p>Language: Go</p>
            <p>Stars: 3,489</p>
            <p>Forks: 543</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre># whatsmeow
[![Go Reference](https://pkg.go.dev/badge/go.mau.fi/whatsmeow.svg)](https://pkg.go.dev/go.mau.fi/whatsmeow)

whatsmeow is a Go library for the WhatsApp web multidevice API.

## Discussion
Matrix room: [#whatsmeow:maunium.net](https://matrix.to/#/#whatsmeow:maunium.net)

For questions about the WhatsApp protocol (like how to send a specific type of
message), you can also use the [WhatsApp protocol Q&amp;A] section on GitHub
discussions.

[WhatsApp protocol Q&amp;A]: https://github.com/tulir/whatsmeow/discussions/categories/whatsapp-protocol-q-a

## Usage
The [godoc](https://pkg.go.dev/go.mau.fi/whatsmeow) includes docs for all methods and event types.
There&#039;s also a [simple example](https://pkg.go.dev/go.mau.fi/whatsmeow#example-package) at the top.

## Features
Most core features are already present:

* Sending messages to private chats and groups (both text and media)
* Receiving all messages
* Managing groups and receiving group change events
* Joining via invite messages, using and creating invite links
* Sending and receiving typing notifications
* Sending and receiving delivery and read receipts
* Reading and writing app state (contact list, chat pin/mute status, etc)
* Sending and handling retry receipts if message decryption fails
* Sending status messages (experimental, may not work for large contact lists)

Things that are not yet implemented:

* Sending broadcast list messages (this is not supported on WhatsApp web either)
* Calls
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[pocketbase/pocketbase]]></title>
            <link>https://github.com/pocketbase/pocketbase</link>
            <guid>https://github.com/pocketbase/pocketbase</guid>
            <pubDate>Mon, 21 Apr 2025 00:05:32 GMT</pubDate>
            <description><![CDATA[Open Source realtime backend in 1 file]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pocketbase/pocketbase">pocketbase/pocketbase</a></h1>
            <p>Open Source realtime backend in 1 file</p>
            <p>Language: Go</p>
            <p>Stars: 45,455</p>
            <p>Forks: 2,228</p>
            <p>Stars today: 30 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://pocketbase.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;
        &lt;img src=&quot;https://i.imgur.com/5qimnm5.png&quot; alt=&quot;PocketBase - open source backend in 1 file&quot; /&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/pocketbase/pocketbase/actions/workflows/release.yaml&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img src=&quot;https://github.com/pocketbase/pocketbase/actions/workflows/release.yaml/badge.svg&quot; alt=&quot;build&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/pocketbase/pocketbase/releases&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/pocketbase/pocketbase.svg&quot; alt=&quot;Latest releases&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://pkg.go.dev/github.com/pocketbase/pocketbase&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img src=&quot;https://godoc.org/github.com/pocketbase/pocketbase?status.svg&quot; alt=&quot;Go package documentation&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

[PocketBase](https://pocketbase.io) is an open source Go backend that includes:

- embedded database (_SQLite_) with **realtime subscriptions**
- built-in **files and users management**
- convenient **Admin dashboard UI**
- and simple **REST-ish API**

**For documentation and examples, please visit https://pocketbase.io/docs.**

&gt; [!WARNING]
&gt; Please keep in mind that PocketBase is still under active development
&gt; and therefore full backward compatibility is not guaranteed before reaching v1.0.0.

## API SDK clients

The easiest way to interact with the PocketBase Web APIs is to use one of the official SDK clients:

- **JavaScript - [pocketbase/js-sdk](https://github.com/pocketbase/js-sdk)** (_Browser, Node.js, React Native_)
- **Dart - [pocketbase/dart-sdk](https://github.com/pocketbase/dart-sdk)** (_Web, Mobile, Desktop, CLI_)

You could also check the recommendations in https://pocketbase.io/docs/how-to-use/.


## Overview

### Use as standalone app

You could download the prebuilt executable for your platform from the [Releases page](https://github.com/pocketbase/pocketbase/releases).
Once downloaded, extract the archive and run `./pocketbase serve` in the extracted directory.

The prebuilt executables are based on the [`examples/base/main.go` file](https://github.com/pocketbase/pocketbase/blob/master/examples/base/main.go) and comes with the JS VM plugin enabled by default which allows to extend PocketBase with JavaScript (_for more details please refer to [Extend with JavaScript](https://pocketbase.io/docs/js-overview/)_).

### Use as a Go framework/toolkit

PocketBase is distributed as a regular Go library package which allows you to build
your own custom app specific business logic and still have a single portable executable at the end.

Here is a minimal example:

0. [Install Go 1.23+](https://go.dev/doc/install) (_if you haven&#039;t already_)

1. Create a new project directory with the following `main.go` file inside it:
    ```go
    package main

    import (
        &quot;log&quot;

        &quot;github.com/pocketbase/pocketbase&quot;
        &quot;github.com/pocketbase/pocketbase/core&quot;
    )

    func main() {
        app := pocketbase.New()

        app.OnServe().BindFunc(func(se *core.ServeEvent) error {
            // registers new &quot;GET /hello&quot; route
            se.Router.GET(&quot;/hello&quot;, func(re *core.RequestEvent) error {
                return re.String(200, &quot;Hello world!&quot;)
            })

            return se.Next()
        })

        if err := app.Start(); err != nil {
            log.Fatal(err)
        }
    }
    ```

2. To init the dependencies, run `go mod init myapp &amp;&amp; go mod tidy`.

3. To start the application, run `go run main.go serve`.

4. To build a statically linked executable, you can run `CGO_ENABLED=0 go build` and then start the created executable with `./myapp serve`.

_For more details please refer to [Extend with Go](https://pocketbase.io/docs/go-overview/)._

### Building and running the repo main.go example

To build the minimal standalone executable, like the prebuilt ones in the releases page, you can simply run `go build` inside the `examples/base` directory:

0. [Install Go 1.23+](https://go.dev/doc/install) (_if you haven&#039;t already_)
1. Clone/download the repo
2. Navigate to `examples/base`
3. Run `GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build`
   (_https://go.dev/doc/install/source#environment_)
4. Start the created executable by running `./base serve`.

Note that the supported build targets by the pure Go SQLite driver at the moment are:

```
darwin  amd64
darwin  arm64
freebsd amd64
freebsd arm64
linux   386
linux   amd64
linux   arm
linux   arm64
linux   ppc64le
linux   riscv64
linux   s390x
windows amd64
windows arm64
```

### Testing

PocketBase comes with mixed bag of unit and integration tests.
To run them, use the standard `go test` command:

```sh
go test ./...
```

Check also the [Testing guide](http://pocketbase.io/docs/testing) to learn how to write your own custom application tests.

## Security

If you discover a security vulnerability within PocketBase, please send an e-mail to **support at pocketbase.io**.

All reports will be promptly addressed and you&#039;ll be credited in the fix release notes.

## Contributing

PocketBase is free and open source project licensed under the [MIT License](LICENSE.md).
You are free to do whatever you want with it, even offering it as a paid service.

You could help continuing its development by:

- [Contribute to the source code](CONTRIBUTING.md)
- [Suggest new features and report issues](https://github.com/pocketbase/pocketbase/issues)

PRs for new OAuth2 providers, bug fixes, code optimizations and documentation improvements are more than welcome.

But please refrain creating PRs for _new features_ without previously discussing the implementation details.
PocketBase has a [roadmap](https://github.com/orgs/pocketbase/projects/2) and I try to work on issues in specific order and such PRs often come in out of nowhere and skew all initial planning with tedious back-and-forth communication.

Don&#039;t get upset if I close your PR, even if it is well executed and tested. This doesn&#039;t mean that it will never be merged.
Later we can always refer to it and/or take pieces of your implementation when the time comes to work on the issue (don&#039;t worry you&#039;ll be credited in the release notes).
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[ncruces/go-sqlite3]]></title>
            <link>https://github.com/ncruces/go-sqlite3</link>
            <guid>https://github.com/ncruces/go-sqlite3</guid>
            <pubDate>Mon, 21 Apr 2025 00:05:31 GMT</pubDate>
            <description><![CDATA[Go bindings to SQLite using wazero]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ncruces/go-sqlite3">ncruces/go-sqlite3</a></h1>
            <p>Go bindings to SQLite using wazero</p>
            <p>Language: Go</p>
            <p>Stars: 657</p>
            <p>Forks: 22</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre># Go bindings to SQLite using wazero

[![Go Reference](https://pkg.go.dev/badge/image)](https://pkg.go.dev/github.com/ncruces/go-sqlite3)
[![Go Report](https://goreportcard.com/badge/github.com/ncruces/go-sqlite3)](https://goreportcard.com/report/github.com/ncruces/go-sqlite3)
[![Go Coverage](https://github.com/ncruces/go-sqlite3/wiki/coverage.svg)](https://github.com/ncruces/go-sqlite3/wiki/Test-coverage-report)

Go module `github.com/ncruces/go-sqlite3` is a `cgo`-free [SQLite](https://sqlite.org/) wrapper.\
It provides a [`database/sql`](https://pkg.go.dev/database/sql) compatible driver,
as well as direct access to most of the [C SQLite API](https://sqlite.org/cintro.html).

It wraps a [Wasm](https://webassembly.org/) [build](embed/) of SQLite,
and uses [wazero](https://wazero.io/) as the runtime.\
Go, wazero and [`x/sys`](https://pkg.go.dev/golang.org/x/sys) are the _only_ direct dependencies.

### Getting started

Using the [`database/sql`](https://pkg.go.dev/database/sql) driver:
```go

import &quot;database/sql&quot;
import _ &quot;github.com/ncruces/go-sqlite3/driver&quot;
import _ &quot;github.com/ncruces/go-sqlite3/embed&quot;

var version string
db, _ := sql.Open(&quot;sqlite3&quot;, &quot;file:demo.db&quot;)
db.QueryRow(`SELECT sqlite_version()`).Scan(&amp;version)
```

### Packages

- [`github.com/ncruces/go-sqlite3`](https://pkg.go.dev/github.com/ncruces/go-sqlite3)
  wraps the [C SQLite API](https://sqlite.org/cintro.html)
  ([example usage](https://pkg.go.dev/github.com/ncruces/go-sqlite3#example-package)).
- [`github.com/ncruces/go-sqlite3/driver`](https://pkg.go.dev/github.com/ncruces/go-sqlite3/driver)
  provides a [`database/sql`](https://pkg.go.dev/database/sql) driver
  ([example usage](https://pkg.go.dev/github.com/ncruces/go-sqlite3/driver#example-package)).
- [`github.com/ncruces/go-sqlite3/embed`](https://pkg.go.dev/github.com/ncruces/go-sqlite3/embed)
  embeds a build of SQLite into your application.
- [`github.com/ncruces/go-sqlite3/vfs`](https://pkg.go.dev/github.com/ncruces/go-sqlite3/vfs)
  wraps the [C SQLite VFS API](https://sqlite.org/vfs.html) and provides a pure Go implementation.
- [`github.com/ncruces/go-sqlite3/gormlite`](https://pkg.go.dev/github.com/ncruces/go-sqlite3/gormlite)
  provides a [GORM](https://gorm.io) driver.

### Advanced features

- [incremental BLOB I/O](https://sqlite.org/c3ref/blob_open.html)
- [nested transactions](https://sqlite.org/lang_savepoint.html)
- [custom functions](https://sqlite.org/c3ref/create_function.html)
- [virtual tables](https://sqlite.org/vtab.html)
- [custom VFSes](https://sqlite.org/vfs.html)
- [online backup](https://sqlite.org/backup.html)
- [JSON support](https://sqlite.org/json1.html)
- [math functions](https://sqlite.org/lang_mathfunc.html)
- [full-text search](https://sqlite.org/fts5.html)
- [geospatial search](https://sqlite.org/geopoly.html)
- [Unicode support](https://pkg.go.dev/github.com/ncruces/go-sqlite3/ext/unicode)
- [statistics functions](https://pkg.go.dev/github.com/ncruces/go-sqlite3/ext/stats)
- [encryption at rest](vfs/adiantum/README.md)
- [many extensions](ext/README.md)
- [custom VFSes](vfs/README.md#custom-vfses)
- [and more‚Ä¶](embed/README.md)

### Caveats

This module replaces the SQLite [OS Interface](https://sqlite.org/vfs.html)
(aka VFS) with a [pure Go](vfs/) implementation,
which has advantages and disadvantages.
Read more about the Go VFS design [here](vfs/README.md).

Because each database connection executes within a Wasm sandboxed environment,
memory usage will be higher than alternatives.

### Testing

This project aims for [high test coverage](https://github.com/ncruces/go-sqlite3/wiki/Test-coverage-report).
It also benefits greatly from [SQLite&#039;s](https://sqlite.org/testing.html) and
[wazero&#039;s](https://tetrate.io/blog/introducing-wazero-from-tetrate/#:~:text=Rock%2Dsolid%20test%20approach)
thorough testing.

Every commit is [tested](https://github.com/ncruces/go-sqlite3/wiki/Support-matrix) on
Linux (amd64/arm64/386/riscv64/ppc64le/s390x), macOS (arm64/amd64),
Windows (amd64), FreeBSD (amd64/arm64), OpenBSD (amd64), NetBSD (amd64/arm64),
DragonFly BSD (amd64), illumos (amd64), and Solaris (amd64).

The Go VFS is tested by running SQLite&#039;s
[mptest](https://github.com/sqlite/sqlite/blob/master/mptest/mptest.c).

### Performance

Performance of the [`database/sql`](https://pkg.go.dev/database/sql) driver is
[competitive](https://github.com/cvilsmeier/go-sqlite-bench) with alternatives.

The Wasm and VFS layers are also benchmarked by running SQLite&#039;s
[speedtest1](https://github.com/sqlite/sqlite/blob/master/test/speedtest1.c).

### Concurrency

This module behaves similarly to SQLite in [multi-thread](https://sqlite.org/threadsafe.html) mode:
it is goroutine-safe, provided that no single database connection, or object derived from it,
is used concurrently by multiple goroutines.

The [`database/sql`](https://pkg.go.dev/database/sql) API is safe to use concurrently,
according to its documentation.

### FAQ, issues, new features

For questions, please see [Discussions](https://github.com/ncruces/go-sqlite3/discussions/categories/q-a).

Also, post there if you used this driver for something interesting
([_&quot;Show and tell&quot;_](https://github.com/ncruces/go-sqlite3/discussions/categories/show-and-tell)),
have an [idea](https://github.com/ncruces/go-sqlite3/discussions/categories/ideas)‚Ä¶

The [Issue](https://github.com/ncruces/go-sqlite3/issues) tracker is for bugs,
and features we&#039;re working on, planning to work on, or asking for help with.

### Alternatives

- [`modernc.org/sqlite`](https://pkg.go.dev/modernc.org/sqlite)
- [`crawshaw.io/sqlite`](https://pkg.go.dev/crawshaw.io/sqlite)
- [`github.com/mattn/go-sqlite3`](https://pkg.go.dev/github.com/mattn/go-sqlite3)
- [`github.com/zombiezen/go-sqlite`](https://pkg.go.dev/github.com/zombiezen/go-sqlite)</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[WireGuard/wireguard-go]]></title>
            <link>https://github.com/WireGuard/wireguard-go</link>
            <guid>https://github.com/WireGuard/wireguard-go</guid>
            <pubDate>Mon, 21 Apr 2025 00:05:30 GMT</pubDate>
            <description><![CDATA[Mirror only. Official repository is at https://git.zx2c4.com/wireguard-go]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/WireGuard/wireguard-go">WireGuard/wireguard-go</a></h1>
            <p>Mirror only. Official repository is at https://git.zx2c4.com/wireguard-go</p>
            <p>Language: Go</p>
            <p>Stars: 3,395</p>
            <p>Forks: 1,164</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre># Go Implementation of [WireGuard](https://www.wireguard.com/)

This is an implementation of WireGuard in Go.

## Usage

Most Linux kernel WireGuard users are used to adding an interface with `ip link add wg0 type wireguard`. With wireguard-go, instead simply run:

```
$ wireguard-go wg0
```

This will create an interface and fork into the background. To remove the interface, use the usual `ip link del wg0`, or if your system does not support removing interfaces directly, you may instead remove the control socket via `rm -f /var/run/wireguard/wg0.sock`, which will result in wireguard-go shutting down.

To run wireguard-go without forking to the background, pass `-f` or `--foreground`:

```
$ wireguard-go -f wg0
```

When an interface is running, you may use [`wg(8)`](https://git.zx2c4.com/wireguard-tools/about/src/man/wg.8) to configure it, as well as the usual `ip(8)` and `ifconfig(8)` commands.

To run with more logging you may set the environment variable `LOG_LEVEL=debug`.

## Platforms

### Linux

This will run on Linux; however you should instead use the kernel module, which is faster and better integrated into the OS. See the [installation page](https://www.wireguard.com/install/) for instructions.

### macOS

This runs on macOS using the utun driver. It does not yet support sticky sockets, and won&#039;t support fwmarks because of Darwin limitations. Since the utun driver cannot have arbitrary interface names, you must either use `utun[0-9]+` for an explicit interface name or `utun` to have the kernel select one for you. If you choose `utun` as the interface name, and the environment variable `WG_TUN_NAME_FILE` is defined, then the actual name of the interface chosen by the kernel is written to the file specified by that variable.

### Windows

This runs on Windows, but you should instead use it from the more [fully featured Windows app](https://git.zx2c4.com/wireguard-windows/about/), which uses this as a module.

### FreeBSD

This will run on FreeBSD. It does not yet support sticky sockets. Fwmark is mapped to `SO_USER_COOKIE`.

### OpenBSD

This will run on OpenBSD. It does not yet support sticky sockets. Fwmark is mapped to `SO_RTABLE`. Since the tun driver cannot have arbitrary interface names, you must either use `tun[0-9]+` for an explicit interface name or `tun` to have the program select one for you. If you choose `tun` as the interface name, and the environment variable `WG_TUN_NAME_FILE` is defined, then the actual name of the interface chosen by the kernel is written to the file specified by that variable.

## Building

This requires an installation of the latest version of [Go](https://go.dev/).

```
$ git clone https://git.zx2c4.com/wireguard-go
$ cd wireguard-go
$ make
```

## License

    Copyright (C) 2017-2023 WireGuard LLC. All Rights Reserved.
    
    Permission is hereby granted, free of charge, to any person obtaining a copy of
    this software and associated documentation files (the &quot;Software&quot;), to deal in
    the Software without restriction, including without limitation the rights to
    use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
    of the Software, and to permit persons to whom the Software is furnished to do
    so, subject to the following conditions:
    
    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.
    
    THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[syncthing/syncthing]]></title>
            <link>https://github.com/syncthing/syncthing</link>
            <guid>https://github.com/syncthing/syncthing</guid>
            <pubDate>Mon, 21 Apr 2025 00:05:29 GMT</pubDate>
            <description><![CDATA[Open Source Continuous File Synchronization]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/syncthing/syncthing">syncthing/syncthing</a></h1>
            <p>Open Source Continuous File Synchronization</p>
            <p>Language: Go</p>
            <p>Stars: 69,536</p>
            <p>Forks: 4,484</p>
            <p>Stars today: 22 stars today</p>
            <h2>README</h2><pre>[![Syncthing][14]][15]

---

[![MPLv2 License](https://img.shields.io/badge/license-MPLv2-blue.svg?style=flat-square)](https://www.mozilla.org/MPL/2.0/)
[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/88/badge)](https://bestpractices.coreinfrastructure.org/projects/88)
[![Go Report Card](https://goreportcard.com/badge/github.com/syncthing/syncthing)](https://goreportcard.com/report/github.com/syncthing/syncthing)

## Goals

Syncthing is a **continuous file synchronization program**. It synchronizes
files between two or more computers. We strive to fulfill the goals below.
The goals are listed in order of importance, the most important ones first.
This is the summary version of the goal list - for more
commentary, see the full [Goals document][13].

Syncthing should be:

1. **Safe From Data Loss**

   Protecting the user&#039;s data is paramount. We take every reasonable
   precaution to avoid corrupting the user&#039;s files.

2. **Secure Against Attackers**

   Again, protecting the user&#039;s data is paramount. Regardless of our other
   goals, we must never allow the user&#039;s data to be susceptible to
   eavesdropping or modification by unauthorized parties.

3. **Easy to Use**

   Syncthing should be approachable, understandable, and inclusive.

4. **Automatic**

   User interaction should be required only when absolutely necessary.

5. **Universally Available**

   Syncthing should run on every common computer. We are mindful that the
   latest technology is not always available to every individual.

6. **For Individuals**

   Syncthing is primarily about empowering the individual user with safe,
   secure, and easy to use file synchronization.

7. **Everything Else**

   There are many things we care about that don&#039;t make it on to the list. It
   is fine to optimize for these values, as long as they are not in conflict
   with the stated goals above.

## Getting Started

Take a look at the [getting started guide][2].

There are a few examples for keeping Syncthing running in the background
on your system in [the etc directory][3]. There are also several [GUI
implementations][11] for Windows, Mac, and Linux.

## Docker

To run Syncthing in Docker, see [the Docker README][16].

## Getting in Touch

The first and best point of contact is the [Forum][8].
If you&#039;ve found something that is clearly a
bug, feel free to report it in the [GitHub issue tracker][10].

If you believe that you‚Äôve found a Syncthing-related security vulnerability,
please report it by emailing security@syncthing.net. Do not report it in the
Forum or issue tracker.

## Building

Building Syncthing from source is easy. After extracting the source bundle from
a release or checking out git, you just need to run `go run build.go` and the
binaries are created in `./bin`. There&#039;s [a guide][5] with more details on the
build process.

## Signed Releases

Release binaries are GPG signed with the key available from
https://syncthing.net/security/. There is also a built-in automatic
upgrade mechanism (disabled in some distribution channels) which uses a
compiled in ECDSA signature. macOS and Windows binaries are also
code-signed.

## Documentation

Please see the Syncthing [documentation site][6] [[source]][17].

All code is licensed under the [MPLv2 License][7].

[1]: https://docs.syncthing.net/specs/bep-v1.html
[2]: https://docs.syncthing.net/intro/getting-started.html
[3]: https://github.com/syncthing/syncthing/blob/main/etc
[5]: https://docs.syncthing.net/dev/building.html
[6]: https://docs.syncthing.net/
[7]: https://github.com/syncthing/syncthing/blob/main/LICENSE
[8]: https://forum.syncthing.net/
[10]: https://github.com/syncthing/syncthing/issues
[11]: https://docs.syncthing.net/users/contrib.html#gui-wrappers
[13]: https://github.com/syncthing/syncthing/blob/main/GOALS.md
[14]: assets/logo-text-128.png
[15]: https://syncthing.net/
[16]: https://github.com/syncthing/syncthing/blob/main/README-Docker.md
[17]: https://github.com/syncthing/docs
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[mudler/LocalAI]]></title>
            <link>https://github.com/mudler/LocalAI</link>
            <guid>https://github.com/mudler/LocalAI</guid>
            <pubDate>Mon, 21 Apr 2025 00:05:28 GMT</pubDate>
            <description><![CDATA[ü§ñ The free, Open Source alternative to OpenAI, Claude and others. Self-hosted and local-first. Drop-in replacement for OpenAI, running on consumer-grade hardware. No GPU required. Runs gguf, transformers, diffusers and many more models architectures. Features: Generate Text, Audio, Video, Images, Voice Cloning, Distributed, P2P inference]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mudler/LocalAI">mudler/LocalAI</a></h1>
            <p>ü§ñ The free, Open Source alternative to OpenAI, Claude and others. Self-hosted and local-first. Drop-in replacement for OpenAI, running on consumer-grade hardware. No GPU required. Runs gguf, transformers, diffusers and many more models architectures. Features: Generate Text, Audio, Video, Images, Voice Cloning, Distributed, P2P inference</p>
            <p>Language: Go</p>
            <p>Stars: 31,928</p>
            <p>Forks: 2,433</p>
            <p>Stars today: 33 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;
  &lt;br&gt;
  &lt;img height=&quot;300&quot; src=&quot;./core/http/static/logo.png&quot;&gt; &lt;br&gt;
&lt;br&gt;
&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/go-skynet/LocalAI/fork&quot; target=&quot;blank&quot;&gt;
&lt;img src=&quot;https://img.shields.io/github/forks/go-skynet/LocalAI?style=for-the-badge&quot; alt=&quot;LocalAI forks&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/go-skynet/LocalAI/stargazers&quot; target=&quot;blank&quot;&gt;
&lt;img src=&quot;https://img.shields.io/github/stars/go-skynet/LocalAI?style=for-the-badge&quot; alt=&quot;LocalAI stars&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/go-skynet/LocalAI/pulls&quot; target=&quot;blank&quot;&gt;
&lt;img src=&quot;https://img.shields.io/github/issues-pr/go-skynet/LocalAI?style=for-the-badge&quot; alt=&quot;LocalAI pull-requests&quot;/&gt;
&lt;/a&gt;
&lt;a href=&#039;https://github.com/go-skynet/LocalAI/releases&#039;&gt;
&lt;img src=&#039;https://img.shields.io/github/release/go-skynet/LocalAI?&amp;label=Latest&amp;style=for-the-badge&#039;&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://hub.docker.com/r/localai/localai&quot; target=&quot;blank&quot;&gt;
&lt;img src=&quot;https://img.shields.io/badge/dockerhub-images-important.svg?logo=Docker&quot; alt=&quot;LocalAI Docker hub&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://quay.io/repository/go-skynet/local-ai?tab=tags&amp;tag=latest&quot; target=&quot;blank&quot;&gt;
&lt;img src=&quot;https://img.shields.io/badge/quay.io-images-important.svg?&quot; alt=&quot;LocalAI Quay.io&quot;/&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://twitter.com/LocalAI_API&quot; target=&quot;blank&quot;&gt;
&lt;img src=&quot;https://img.shields.io/twitter/follow/LocalAI_API?label=Follow: LocalAI_API&amp;style=social&quot; alt=&quot;Follow LocalAI_API&quot;/&gt;
&lt;/a&gt;
&lt;a href=&quot;https://discord.gg/uJAeKSAGDy&quot; target=&quot;blank&quot;&gt;
&lt;img src=&quot;https://dcbadge.vercel.app/api/server/uJAeKSAGDy?style=flat-square&amp;theme=default-inverted&quot; alt=&quot;Join LocalAI Discord Community&quot;/&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://trendshift.io/repositories/5539&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/5539&quot; alt=&quot;mudler%2FLocalAI | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;

&gt; :bulb: Get help - [‚ùìFAQ](https://localai.io/faq/) [üí≠Discussions](https://github.com/go-skynet/LocalAI/discussions) [:speech_balloon: Discord](https://discord.gg/uJAeKSAGDy) [:book: Documentation website](https://localai.io/)
&gt;
&gt; [üíª Quickstart](https://localai.io/basics/getting_started/) [üñºÔ∏è Models](https://models.localai.io/) [üöÄ Roadmap](https://github.com/mudler/LocalAI/issues?q=is%3Aissue+is%3Aopen+label%3Aroadmap) [ü•Ω Demo](https://demo.localai.io) [üåç Explorer](https://explorer.localai.io) [üõ´ Examples](https://github.com/mudler/LocalAI-examples) 

[![tests](https://github.com/go-skynet/LocalAI/actions/workflows/test.yml/badge.svg)](https://github.com/go-skynet/LocalAI/actions/workflows/test.yml)[![Build and Release](https://github.com/go-skynet/LocalAI/actions/workflows/release.yaml/badge.svg)](https://github.com/go-skynet/LocalAI/actions/workflows/release.yaml)[![build container images](https://github.com/go-skynet/LocalAI/actions/workflows/image.yml/badge.svg)](https://github.com/go-skynet/LocalAI/actions/workflows/image.yml)[![Bump dependencies](https://github.com/go-skynet/LocalAI/actions/workflows/bump_deps.yaml/badge.svg)](https://github.com/go-skynet/LocalAI/actions/workflows/bump_deps.yaml)[![Artifact Hub](https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/localai)](https://artifacthub.io/packages/search?repo=localai)

**LocalAI** is the free, Open Source OpenAI alternative. LocalAI act as a drop-in replacement REST API that&#039;s compatible with OpenAI (Elevenlabs, Anthropic... ) API specifications for local AI inferencing. It allows you to run LLMs, generate images, audio (and not only) locally or on-prem with consumer grade hardware, supporting multiple model families. Does not require GPU. It is created and maintained by [Ettore Di Giacinto](https://github.com/mudler).


## üìöüÜï Local Stack Family

üÜï LocalAI is now part of a comprehensive suite of AI tools designed to work together:

&lt;table&gt;
  &lt;tr&gt;
    &lt;td width=&quot;50%&quot; valign=&quot;top&quot;&gt;
      &lt;a href=&quot;https://github.com/mudler/LocalAGI&quot;&gt;
        &lt;img src=&quot;https://raw.githubusercontent.com/mudler/LocalAGI/refs/heads/main/webui/react-ui/public/logo_2.png&quot; width=&quot;300&quot; alt=&quot;LocalAGI Logo&quot;&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td width=&quot;50%&quot; valign=&quot;top&quot;&gt;
      &lt;h3&gt;&lt;a href=&quot;https://github.com/mudler/LocalAGI&quot;&gt;LocalAGI&lt;/a&gt;&lt;/h3&gt;
      &lt;p&gt;A powerful Local AI agent management platform that serves as a drop-in replacement for OpenAI&#039;s Responses API, enhanced with advanced agentic capabilities.&lt;/p&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td width=&quot;50%&quot; valign=&quot;top&quot;&gt;
      &lt;a href=&quot;https://github.com/mudler/LocalRecall&quot;&gt;
        &lt;img src=&quot;https://raw.githubusercontent.com/mudler/LocalRecall/refs/heads/main/static/localrecall_horizontal.png&quot; width=&quot;300&quot; alt=&quot;LocalRecall Logo&quot;&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td width=&quot;50%&quot; valign=&quot;top&quot;&gt;
      &lt;h3&gt;&lt;a href=&quot;https://github.com/mudler/LocalRecall&quot;&gt;LocalRecall&lt;/a&gt;&lt;/h3&gt;
      &lt;p&gt;A REST-ful API and knowledge base management system that provides persistent memory and storage capabilities for AI agents.&lt;/p&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

## Screenshots


| Talk Interface | Generate Audio |
| --- | --- |
| ![Screenshot 2025-03-31 at 12-01-36 LocalAI - Talk](./docs/assets/images/screenshots/screenshot_tts.png) | ![Screenshot 2025-03-31 at 12-01-29 LocalAI - Generate audio with voice-en-us-ryan-low](./docs/assets/images/screenshots/screenshot_tts.png) |

| Models Overview | Generate Images |
| --- | --- |
| ![Screenshot 2025-03-31 at 12-01-20 LocalAI - Models](./docs/assets/images/screenshots/screenshot_gallery.png) | ![Screenshot 2025-03-31 at 12-31-41 LocalAI - Generate images with flux 1-dev](./docs/assets/images/screenshots/screenshot_image.png) |

| Chat Interface | Home |
| --- | --- |
| ![Screenshot 2025-03-31 at 11-57-44 LocalAI - Chat with localai-functioncall-qwen2 5-7b-v0 5](./docs/assets/images/screenshots/screenshot_chat.png) | ![Screenshot 2025-03-31 at 11-57-23 LocalAI API - c2a39e3 (c2a39e3639227cfd94ffffe9f5691239acc275a8)](./docs/assets/images/screenshots/screenshot_home.png) |

| Login | Swarm |
| --- | --- |
|![Screenshot 2025-03-31 at 12-09-59 ](./docs/assets/images/screenshots/screenshot_login.png) | ![Screenshot 2025-03-31 at 12-10-39 LocalAI - P2P dashboard](./docs/assets/images/screenshots/screenshot_p2p.png) |

## üíª Quickstart

Run the installer script:

```bash
curl https://localai.io/install.sh | sh
```

Or run with docker:

### CPU only image:
```bash
docker run -ti --name local-ai -p 8080:8080 localai/localai:latest-cpu
```
### Nvidia GPU:
```bash
docker run -ti --name local-ai -p 8080:8080 --gpus all localai/localai:latest-gpu-nvidia-cuda-12
```
### CPU and GPU image (bigger size):
```bash
docker run -ti --name local-ai -p 8080:8080 localai/localai:latest
```
### AIO images (it will pre-download a set of models ready for use, see https://localai.io/basics/container/)
```bash
docker run -ti --name local-ai -p 8080:8080 localai/localai:latest-aio-cpu
```

To load models:

```bash
# From the model gallery (see available models with `local-ai models list`, in the WebUI from the model tab, or visiting https://models.localai.io)
local-ai run llama-3.2-1b-instruct:q4_k_m
# Start LocalAI with the phi-2 model directly from huggingface
local-ai run huggingface://TheBloke/phi-2-GGUF/phi-2.Q8_0.gguf
# Install and run a model from the Ollama OCI registry
local-ai run ollama://gemma:2b
# Run a model from a configuration file
local-ai run https://gist.githubusercontent.com/.../phi-2.yaml
# Install and run a model from a standard OCI registry (e.g., Docker Hub)
local-ai run oci://localai/phi-2:latest
```

For more information, see [üíª Getting started](https://localai.io/basics/getting_started/index.html)

## üì∞ Latest project news

- Apr 2025: [LocalAGI](https://github.com/mudler/LocalAGI) and [LocalRecall](https://github.com/mudler/LocalRecall) join the LocalAI family stack.
- Apr 2025: WebUI overhaul, AIO images updates
- Feb 2025: Backend cleanup, Breaking changes, new backends (kokoro, OutelTTS, faster-whisper), Nvidia L4T images
- Jan 2025: LocalAI model release: https://huggingface.co/mudler/LocalAI-functioncall-phi-4-v0.3, SANA support in diffusers: https://github.com/mudler/LocalAI/pull/4603
- Dec 2024: stablediffusion.cpp backend (ggml) added ( https://github.com/mudler/LocalAI/pull/4289 )
- Nov 2024: Bark.cpp backend added ( https://github.com/mudler/LocalAI/pull/4287 )
- Nov 2024: Voice activity detection models (**VAD**) added to the API: https://github.com/mudler/LocalAI/pull/4204
- Oct 2024: examples moved to [LocalAI-examples](https://github.com/mudler/LocalAI-examples)
- Aug 2024:  üÜï FLUX-1, [P2P Explorer](https://explorer.localai.io)
- July 2024: üî•üî• üÜï P2P Dashboard, LocalAI Federated mode and AI Swarms: https://github.com/mudler/LocalAI/pull/2723. P2P Global community pools: https://github.com/mudler/LocalAI/issues/3113
- May 2024: üî•üî• Decentralized P2P llama.cpp:  https://github.com/mudler/LocalAI/pull/2343 (peer2peer llama.cpp!) üëâ Docs  https://localai.io/features/distribute/
- May 2024: üî•üî• Distributed inferencing: https://github.com/mudler/LocalAI/pull/2324
- April 2024: Reranker API: https://github.com/mudler/LocalAI/pull/2121

Roadmap items: [List of issues](https://github.com/mudler/LocalAI/issues?q=is%3Aissue+is%3Aopen+label%3Aroadmap)

## üöÄ [Features](https://localai.io/features/)

- üìñ [Text generation with GPTs](https://localai.io/features/text-generation/) (`llama.cpp`, `transformers`, `vllm` ... [:book: and more](https://localai.io/model-compatibility/index.html#model-compatibility-table))
- üó£ [Text to Audio](https://localai.io/features/text-to-audio/)
- üîà [Audio to Text](https://localai.io/features/audio-to-text/) (Audio transcription with `whisper.cpp`)
- üé® [Image generation](https://localai.io/features/image-generation)
- üî• [OpenAI-alike tools API](https://localai.io/features/openai-functions/) 
- üß† [Embeddings generation for vector databases](https://localai.io/features/embeddings/)
- ‚úçÔ∏è [Constrained grammars](https://localai.io/features/constrained_grammars/)
- üñºÔ∏è [Download Models directly from Huggingface ](https://localai.io/models/)
- ü•Ω [Vision API](https://localai.io/features/gpt-vision/)
- üìà [Reranker API](https://localai.io/features/reranker/)
- üÜïüñß [P2P Inferencing](https://localai.io/features/distribute/)
- [Agentic capabilities](https://github.com/mudler/LocalAGI)
- üîä Voice activity detection (Silero-VAD support)
- üåç Integrated WebUI!


### üîó Community and integrations

Build and deploy custom containers:
- https://github.com/sozercan/aikit

WebUIs:
- https://github.com/Jirubizu/localai-admin
- https://github.com/go-skynet/LocalAI-frontend
- QA-Pilot(An interactive chat project that leverages LocalAI LLMs for rapid understanding and navigation of GitHub code repository) https://github.com/reid41/QA-Pilot

Model galleries
- https://github.com/go-skynet/model-gallery

Other:
- Helm chart https://github.com/go-skynet/helm-charts
- VSCode extension https://github.com/badgooooor/localai-vscode-plugin
- Langchain: https://python.langchain.com/docs/integrations/providers/localai/
- Terminal utility https://github.com/djcopley/ShellOracle
- Local Smart assistant https://github.com/mudler/LocalAGI
- Home Assistant https://github.com/sammcj/homeassistant-localai / https://github.com/drndos/hass-openai-custom-conversation / https://github.com/valentinfrlch/ha-gpt4vision
- Discord bot https://github.com/mudler/LocalAGI/tree/main/examples/discord
- Slack bot https://github.com/mudler/LocalAGI/tree/main/examples/slack
- Shell-Pilot(Interact with LLM using LocalAI models via pure shell scripts on your Linux or MacOS system) https://github.com/reid41/shell-pilot
- Telegram bot https://github.com/mudler/LocalAI/tree/master/examples/telegram-bot
- Another Telegram Bot https://github.com/JackBekket/Hellper
- Auto-documentation https://github.com/JackBekket/Reflexia
- Github bot which answer on issues, with code and documentation as context https://github.com/JackBekket/GitHelper
- Github Actions: https://github.com/marketplace/actions/start-localai
- Examples: https://github.com/mudler/LocalAI/tree/master/examples/
  

### üîó Resources

- [LLM finetuning guide](https://localai.io/docs/advanced/fine-tuning/)
- [How to build locally](https://localai.io/basics/build/index.html)
- [How to install in Kubernetes](https://localai.io/basics/getting_started/index.html#run-localai-in-kubernetes)
- [Projects integrating LocalAI](https://localai.io/docs/integrations/)
- [How tos section](https://io.midori-ai.xyz/howtos/) (curated by our community)

## :book: üé• [Media, Blogs, Social](https://localai.io/basics/news/#media-blogs-social)

- [Run Visual studio code with LocalAI (SUSE)](https://www.suse.com/c/running-ai-locally/)
- üÜï [Run LocalAI on Jetson Nano Devkit](https://mudler.pm/posts/local-ai-jetson-nano-devkit/)
- [Run LocalAI on AWS EKS with Pulumi](https://www.pulumi.com/blog/low-code-llm-apps-with-local-ai-flowise-and-pulumi/)
- [Run LocalAI on AWS](https://staleks.hashnode.dev/installing-localai-on-aws-ec2-instance)
- [Create a slackbot for teams and OSS projects that answer to documentation](https://mudler.pm/posts/smart-slackbot-for-teams/)
- [LocalAI meets k8sgpt](https://www.youtube.com/watch?v=PKrDNuJ_dfE)
- [Question Answering on Documents locally with LangChain, LocalAI, Chroma, and GPT4All](https://mudler.pm/posts/localai-question-answering/)
- [Tutorial to use k8sgpt with LocalAI](https://medium.com/@tyler_97636/k8sgpt-localai-unlock-kubernetes-superpowers-for-free-584790de9b65)

## Citation

If you utilize this repository, data in a downstream project, please consider citing it with:

```
@misc{localai,
  author = {Ettore Di Giacinto},
  title = {LocalAI: The free, Open source OpenAI alternative},
  year = {2023},
  publisher = {GitHub},
  journal = {GitHub repository},
  howpublished = {\url{https://github.com/go-skynet/LocalAI}},
```

## ‚ù§Ô∏è Sponsors

&gt; Do you find LocalAI useful?

Support the project by becoming [a backer or sponsor](https://github.com/sponsors/mudler). Your logo will show up here with a link to your website.

A huge thank you to our generous sponsors who support this project covering CI expenses, and our [Sponsor list](https://github.com/sponsors/mudler):

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.spectrocloud.com/&quot; target=&quot;blank&quot;&gt;
    &lt;img height=&quot;200&quot; src=&quot;https://github.com/user-attachments/assets/72eab1dd-8b93-4fc0-9ade-84db49f24962&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://www.premai.io/&quot; target=&quot;blank&quot;&gt;
    &lt;img height=&quot;200&quot; src=&quot;https://github.com/mudler/LocalAI/assets/2420543/42e4ca83-661e-4f79-8e46-ae43689683d6&quot;&gt; &lt;br&gt;
  &lt;/a&gt;
&lt;/p&gt;

## üåü Star history

[![LocalAI Star history Chart](https://api.star-history.com/svg?repos=go-skynet/LocalAI&amp;type=Date)](https://star-history.com/#go-skynet/LocalAI&amp;Date)

## üìñ License

LocalAI is a community-driven project created by [Ettore Di Giacinto](https://github.com/mudler/).

MIT - Author Ettore Di Giacinto &lt;mudler@localai.io&gt;

## üôá Acknowledgements

LocalAI couldn&#039;t have been built without the help of great software already available from the community. Thank you!

- [llama.cpp](https://github.com/ggerganov/llama.cpp)
- https://github.com/tatsu-lab/stanford_alpaca
- https://github.com/cornelk/llama-go for the initial ideas
- https://github.com/antimatter15/alpaca.cpp
- https://github.com/EdVince/Stable-Diffusion-NCNN
- https://github.com/ggerganov/whisper.cpp
- https://github.com/rhasspy/piper

## ü§ó Contributors

This is a community project, a special thanks to our contributors! ü§ó
&lt;a href=&quot;https://github.com/go-skynet/LocalAI/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=go-skynet/LocalAI&quot; /&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[OWASP/Go-SCP]]></title>
            <link>https://github.com/OWASP/Go-SCP</link>
            <guid>https://github.com/OWASP/Go-SCP</guid>
            <pubDate>Mon, 21 Apr 2025 00:05:27 GMT</pubDate>
            <description><![CDATA[Golang Secure Coding Practices guide]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/OWASP/Go-SCP">OWASP/Go-SCP</a></h1>
            <p>Golang Secure Coding Practices guide</p>
            <p>Language: Go</p>
            <p>Stars: 5,094</p>
            <p>Forks: 381</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre>You can download this book in the following formats: [PDF][9], [Mobi][10] and
[ePub][11].

# Introduction

Go Language - Web Application Secure Coding Practices is a guide written for
anyone who is using the [Go Programming Language][1] and aims to use it for web
development.

It was originally created by [Checkmarx Security Research Team][2] and later
donated to the OWASP Foundation: see the [project page][13]. The book follows
the [OWASP Secure Coding Practices - Quick Reference Guide v2 (stable)][3]
release.

The main goal of this book is to help developers avoid common mistakes while at
the same time, learning a new programming language through a &quot;hands-on
approach&quot;. This book provides a good level of detail on &quot;how to do it securely&quot;
showing what kind of security problems could arise during development.

## The Audience for this Book

The primary audience of the Go Secure Coding Practices Guide is developers,
particularly the ones with previous experience with other programming languages.

The book is also a great reference to those learning programming for the first
time, who have already finish the [Go tour][7].

## What You Will Learn

This book covers the [OWASP Secure Coding Practices Guide][12] topic-by-topic,
providing examples and recommendations using Go, to help developers avoid common
mistakes and pitfalls.

After reading this book, you&#039;ll be more confident you&#039;re developing secure Go
applications.

## About OWASP Secure Coding Practices

This book was adapted for Go Language from The [Secure Coding Practices Quick
Reference Guide][3], an [OWASP][4] - Open Web Application Security Project. It
is a &quot;_technology agnostic set of general software security coding practices, in
a comprehensive checklist format, that can be integrated into the development
lifecycle_&quot; ([source][12]).

[OWASP][4] itself is &quot;_an open community dedicated to enabling organizations to
conceive, develop, acquire, operate, and maintain applications that can be
trusted. All of the OWASP tools, documents, forums, and chapters are free and
open to anyone interested in improving application security_&quot; ([source][5]).

## How to Contribute

This book was created using a few open source tools.
If you&#039;re curious about how we built it from scratch, read the
[How To contribute section][6].

## License

This document is released under the Creative Commons Attribution-ShareAlike 4.0
International license (CC BY-SA 4.0). For any reuse or distribution, you must
make clear to others the license terms of this work.
[https://creativecommons.org/licenses/by-sa/4.0/][8]

[1]: https://golang.org
[2]: http://chkmrx.co/2sffXFr
[3]: https://owasp.org/www-project-secure-coding-practices-quick-reference-guide/
[4]: https://owasp.org/
[5]: https://owasp.org/about/
[6]: src/howto-contribute.md
[7]: https://go.dev/tour/
[8]: https://creativecommons.org/licenses/by-sa/4.0/
[9]: dist/go-webapp-scp.pdf
[10]: dist/go-webapp-scp.mobi
[11]: dist/go-webapp-scp.epub
[12]: https://owasp.org/www-project-secure-coding-practices-quick-reference-guide/#div-download
[13]: https://owasp.org/www-project-go-secure-coding-practices-guide/
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[restic/restic]]></title>
            <link>https://github.com/restic/restic</link>
            <guid>https://github.com/restic/restic</guid>
            <pubDate>Mon, 21 Apr 2025 00:05:26 GMT</pubDate>
            <description><![CDATA[Fast, secure, efficient backup program]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/restic/restic">restic/restic</a></h1>
            <p>Fast, secure, efficient backup program</p>
            <p>Language: Go</p>
            <p>Stars: 28,311</p>
            <p>Forks: 1,599</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre>[![Documentation](https://readthedocs.org/projects/restic/badge/?version=latest)](https://restic.readthedocs.io/en/latest/?badge=latest)
[![Build Status](https://github.com/restic/restic/workflows/test/badge.svg)](https://github.com/restic/restic/actions?query=workflow%3Atest)
[![Go Report Card](https://goreportcard.com/badge/github.com/restic/restic)](https://goreportcard.com/report/github.com/restic/restic)

# Introduction

restic is a backup program that is fast, efficient and secure. It supports the three major operating systems (Linux, macOS, Windows) and a few smaller ones (FreeBSD, OpenBSD).

For detailed usage and installation instructions check out the [documentation](https://restic.readthedocs.io/en/latest).

You can ask questions in our [Discourse forum](https://forum.restic.net).

## Quick start

Once you&#039;ve [installed](https://restic.readthedocs.io/en/latest/020_installation.html) restic, start
off with creating a repository for your backups:

    $ restic init --repo /tmp/backup
    enter password for new backend:
    enter password again:
    created restic backend 085b3c76b9 at /tmp/backup
    Please note that knowledge of your password is required to access the repository.
    Losing your password means that your data is irrecoverably lost.

and add some data:

    $ restic --repo /tmp/backup backup ~/work
    enter password for repository:
    scan [/home/user/work]
    scanned 764 directories, 1816 files in 0:00
    [0:29] 100.00%  54.732 MiB/s  1.582 GiB / 1.582 GiB  2580 / 2580 items  0 errors  ETA 0:00
    duration: 0:29, 54.47MiB/s
    snapshot 40dc1520 saved

Next you can either use `restic restore` to restore files or use `restic
mount` to mount the repository via fuse and browse the files from previous
snapshots.

For more options check out the [online documentation](https://restic.readthedocs.io/en/latest/).

# Backends

Saving a backup on the same machine is nice but not a real backup strategy.
Therefore, restic supports the following backends for storing backups natively:

- [Local directory](https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#local)
- [sftp server (via SSH)](https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#sftp)
- [HTTP REST server](https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#rest-server) ([protocol](https://restic.readthedocs.io/en/latest/100_references.html#rest-backend), [rest-server](https://github.com/restic/rest-server))
- [Amazon S3](https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#amazon-s3) (either from Amazon or using the [Minio](https://minio.io) server)
- [OpenStack Swift](https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#openstack-swift)
- [BackBlaze B2](https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#backblaze-b2)
- [Microsoft Azure Blob Storage](https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#microsoft-azure-blob-storage)
- [Google Cloud Storage](https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#google-cloud-storage)
- And many other services via the [rclone](https://rclone.org) [Backend](https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#other-services-via-rclone)

# Design Principles

Restic is a program that does backups right and was designed with the
following principles in mind:

-  **Easy**: Doing backups should be a frictionless process, otherwise
   you might be tempted to skip it. Restic should be easy to configure
   and use, so that, in the event of a data loss, you can just restore
   it. Likewise, restoring data should not be complicated.

-  **Fast**: Backing up your data with restic should only be limited by
   your network or hard disk bandwidth so that you can backup your files
   every day. Nobody does backups if it takes too much time. Restoring
   backups should only transfer data that is needed for the files that
   are to be restored, so that this process is also fast.

-  **Verifiable**: Much more important than backup is restore, so restic
   enables you to easily verify that all data can be restored.

-  **Secure**: Restic uses cryptography to guarantee confidentiality and
   integrity of your data. The location the backup data is stored is
   assumed not to be a trusted environment (e.g. a shared space where
   others like system administrators are able to access your backups).
   Restic is built to secure your data against such attackers.

-  **Efficient**: With the growth of data, additional snapshots should
   only take the storage of the actual increment. Even more, duplicate
   data should be de-duplicated before it is actually written to the
   storage back end to save precious backup space.

# Reproducible Builds

The binaries released with each restic version starting at 0.6.1 are
[reproducible](https://reproducible-builds.org/), which means that you can
reproduce a byte identical version from the source code for that
release. Instructions on how to do that are contained in the
[builder repository](https://github.com/restic/builder).

## News

You can follow the restic project on Mastodon [@resticbackup](https://fosstodon.org/@restic) or subscribe to
the [project blog](https://restic.net/blog/).

## License

Restic is licensed under [BSD 2-Clause License](https://opensource.org/licenses/BSD-2-Clause). You can find the
complete text in [`LICENSE`](LICENSE).

## Sponsorship

Backend integration tests for Google Cloud Storage and Microsoft Azure Blob
Storage are sponsored by [AppsCode](https://appscode.com)!

[![Sponsored by AppsCode](https://cdn.appscode.com/images/logo/appscode/ac-logo-color.png)](https://appscode.com)
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[kubernetes/minikube]]></title>
            <link>https://github.com/kubernetes/minikube</link>
            <guid>https://github.com/kubernetes/minikube</guid>
            <pubDate>Mon, 21 Apr 2025 00:05:25 GMT</pubDate>
            <description><![CDATA[Run Kubernetes locally]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/kubernetes/minikube">kubernetes/minikube</a></h1>
            <p>Run Kubernetes locally</p>
            <p>Language: Go</p>
            <p>Stars: 30,265</p>
            <p>Forks: 4,966</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre># minikube

[![Actions Status](https://github.com/kubernetes/minikube/workflows/build/badge.svg)](https://github.com/kubernetes/minikube/actions)
[![GoReport Widget]][GoReport Status]
[![GitHub All Releases](https://img.shields.io/github/downloads/kubernetes/minikube/total.svg)](https://github.com/kubernetes/minikube/releases/latest)
[![Latest Release](https://img.shields.io/github/v/release/kubernetes/minikube?include_prereleases)](https://github.com/kubernetes/minikube/releases/latest)
[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/5015/badge)](https://www.bestpractices.dev/en/projects/5015)
[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/kubernetes/minikube/badge)](https://api.securityscorecards.dev/projects/github.com/kubernetes/minikube)
 

[GoReport Status]: https://goreportcard.com/report/github.com/kubernetes/minikube
[GoReport Widget]: https://goreportcard.com/badge/github.com/kubernetes/minikube

&lt;img src=&quot;https://github.com/kubernetes/minikube/raw/master/images/logo/logo.png&quot; width=&quot;100&quot; alt=&quot;minikube logo&quot;&gt;

minikube implements a local Kubernetes cluster on macOS, Linux, and Windows. minikube&#039;s [primary goals](https://minikube.sigs.k8s.io/docs/concepts/principles/) are to be the best tool for local Kubernetes application development and to support all Kubernetes features that fit. 

&lt;img src=&quot;https://raw.githubusercontent.com/kubernetes/minikube/master/site/static/images/screenshot.png&quot; width=&quot;575&quot; height=&quot;322&quot; alt=&quot;screenshot&quot;&gt;

## Features

minikube runs the latest stable release of Kubernetes, with support for standard Kubernetes features like:

* [LoadBalancer](https://minikube.sigs.k8s.io/docs/handbook/accessing/#loadbalancer-access) - using `minikube tunnel`
* Multi-cluster - using `minikube start -p &lt;name&gt;`
* [NodePorts](https://minikube.sigs.k8s.io/docs/handbook/accessing/#nodeport-access) - using `minikube service`
* [Persistent Volumes](https://minikube.sigs.k8s.io/docs/handbook/persistent_volumes/)
* [Ingress](https://kubernetes.io/docs/tasks/access-application-cluster/ingress-minikube/)
* [Dashboard](https://minikube.sigs.k8s.io/docs/handbook/dashboard/) - `minikube dashboard`
* [Container runtimes](https://minikube.sigs.k8s.io/docs/handbook/config/#runtime-configuration) - `minikube start --container-runtime`
* [Configure apiserver and kubelet options](https://minikube.sigs.k8s.io/docs/handbook/config/#modifying-kubernetes-defaults) via command-line flags
* Supports common [CI environments](https://github.com/minikube-ci/examples)

As well as developer-friendly features:

* [Addons](https://minikube.sigs.k8s.io/docs/handbook/deploying/#addons) - a marketplace for developers to share configurations for running services on minikube
* [NVIDIA GPU support](https://minikube.sigs.k8s.io/docs/tutorials/nvidia/) - for machine learning
* [AMD GPU support](https://minikube.sigs.k8s.io/docs/tutorials/amd/) - for machine learning
* [Filesystem mounts](https://minikube.sigs.k8s.io/docs/handbook/mount/)

**For more information, see the official [minikube website](https://minikube.sigs.k8s.io)**

## Installation

See the [Getting Started Guide](https://minikube.sigs.k8s.io/docs/start/)

:mega: **Please fill out our [fast 5-question survey](https://forms.gle/Gg3hG5ZySw8c1C24A)** so that we can learn how &amp; why you use minikube, and what improvements we should make. Thank you! :dancers:

## Documentation

See https://minikube.sigs.k8s.io/docs/

## More Examples

See minikube in action [here](https://minikube.sigs.k8s.io/docs/handbook/controls/)

## Governance

Kubernetes project is governed by a framework of principles, values, policies and processes to help our community and constituents towards our shared goals.

The [Kubernetes Community](https://github.com/kubernetes/community/blob/master/governance.md) is the launching point for learning about how we organize ourselves.

The [Kubernetes Steering community repo](https://github.com/kubernetes/steering) is used by the Kubernetes Steering Committee, which oversees governance of the Kubernetes project.

## Community

minikube is a Kubernetes [#sig-cluster-lifecycle](https://github.com/kubernetes/community/tree/master/sig-cluster-lifecycle)  project.

* [**#minikube on Kubernetes Slack**](https://kubernetes.slack.com/messages/minikube) - Live chat with minikube developers!
* [minikube-users mailing list](https://groups.google.com/g/minikube-users)
* [minikube-dev mailing list](https://groups.google.com/g/minikube-dev)

* [Contributing](https://minikube.sigs.k8s.io/docs/contrib/)
* [Development Roadmap](https://minikube.sigs.k8s.io/docs/contrib/roadmap/)

Join our community meetings:
* [Bi-weekly office hours, Mondays @ 11am PST](https://tinyurl.com/minikube-oh)
* [Triage Party](https://minikube.sigs.k8s.io/docs/contrib/triage/)
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[rqlite/rqlite]]></title>
            <link>https://github.com/rqlite/rqlite</link>
            <guid>https://github.com/rqlite/rqlite</guid>
            <pubDate>Mon, 21 Apr 2025 00:05:24 GMT</pubDate>
            <description><![CDATA[The lightweight, user-friendly, distributed relational database built on SQLite.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/rqlite/rqlite">rqlite/rqlite</a></h1>
            <p>The lightweight, user-friendly, distributed relational database built on SQLite.</p>
            <p>Language: Go</p>
            <p>Stars: 16,486</p>
            <p>Forks: 737</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre>&lt;picture&gt;
 &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;DOC/logo-text.png&quot;&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;DOC/logo-text-dark.png&quot;&gt;
 &lt;img alt=&quot;rqlite logo&quot; src=&quot;DOC/logo-text.png&quot; height=100&gt;
&lt;/picture&gt;

[![Circle CI](https://circleci.com/gh/rqlite/rqlite/tree/master.svg?style=svg)](https://circleci.com/gh/rqlite/rqlite/tree/master)
[![AppVeyor](https://ci.appveyor.com/api/projects/status/github/rqlite/rqlite?branch=master&amp;svg=true)](https://ci.appveyor.com/project/otoolep/rqlite)
[![Go Report Card](https://goreportcard.com/badge/github.com/rqlite/rqlite)](https://goreportcard.com/report/github.com/rqlite/rqlite/v8)
[![Release](https://img.shields.io/github/release/rqlite/rqlite.svg)](https://github.com/rqlite/rqlite/releases)
[![Docker](https://img.shields.io/docker/pulls/rqlite/rqlite?style=plastic)](https://hub.docker.com/r/rqlite/rqlite/)
[![Office Hours](https://img.shields.io/badge/Office%20Hours--yellow.svg)](https://rqlite.io/office-hours)
[![Slack](https://img.shields.io/badge/Slack--purple.svg)](https://www.rqlite.io/join-slack)
[![Google Group](https://img.shields.io/badge/Google%20Group--blue.svg)](https://groups.google.com/group/rqlite)

*rqlite* is a relational database which combines SQLite&#039;s simplicity with the power of a robust, fault-tolerant, distributed system. It&#039;s designed for easy deployment and lightweight operation, offering a developer-friendly and operator-centric solution for [Linux, macOS, and Windows, as well as various CPU platforms](https://github.com/rqlite/rqlite/releases).

- [_Quick Start_ guide](https://rqlite.io/docs/quick-start/)
- [Developer guide](https://www.rqlite.io/docs/api)

_Check out the [rqlite FAQ](https://rqlite.io/docs/faq)_.

## Why run rqlite?
rqlite is your solution for a [rock](https://www.sqlite.org/testing.html)-[solid](https://philipotoole.com/how-is-rqlite-tested/), fault-tolerant, relational database with **effortless installation, deployment, and operation**. It&#039;s ideal as a lightweight, distributed relational data store for both developers and operators. Think [Consul](https://www.consul.io/) or [etcd](https://etcd.io/), but with relational modeling available.

**Use rqlite to reliably store your most important data, ensuring it&#039;s always available to your applications**. If you&#039;re interested in understanding how distributed systems actually work, it&#039;s a good example to study. A lot of thought has gone into its [design](https://rqlite.io/docs/design/), separating storage, consensus, and API clearly.

### Key features
- **Easy Deployment**: Up and running in seconds, with no separate SQLite installation.
- **Developer-Friendly**: Straightforward [HTTP API](https://rqlite.io/docs/api/), [CLI](https://rqlite.io/docs/cli/), and [client libraries](https://rqlite.io/docs/api/client-libraries/).
- **Rich feature set**: [Full-text search](https://www.sqlite.org/fts5.html), [JSON support](https://www.sqlite.org/json1.html), and [SQLite extensions support](https://rqlite.io/docs/guides/extensions/) including [Vector Search](https://github.com/asg017/sqlite-vec) and [Crypto](https://github.com/nalgeon/sqlean).
- **Large data set support**: rqlite works well, even when managing multi-GB data sets.
- **Reliable**: Fully replicated SQL database provides fault-tolerance and high-availability.
- **Dynamic Clustering**: Integrates with [Kubernetes](https://rqlite.io/docs/guides/kubernetes/), Consul, etcd, and DNS for [automatic clustering](https://rqlite.io/docs/clustering/automatic-clustering/).
- **Robust Security**: [Extensive encryption and TLS support](https://rqlite.io/docs/guides/security/).
- **Flexible Consistency**: Customize [read/write performance](https://rqlite.io/docs/api/read-consistency/) and [durability](https://rqlite.io/docs/api/queued-writes/).
- **Scalable Reads**: [Read-only nodes](https://rqlite.io/docs/clustering/read-only-nodes/) for enhanced scalability.
- **Transactions**: Supports a **form** of transactions.
- **Easy Backups**: Hot [backups](https://rqlite.io/docs/guides/backup/), including [automatic backups to AWS S3 and MinIO](https://rqlite.io/docs/guides/backup/#automatic-backups), as well as [restore directly from SQLite](https://rqlite.io/docs/guides/backup/#restoring-from-sqlite).

## More questions?
- [Join the rqlite Slack channel](https://rqlite.io/join-slack)
- [Sign up for Office Hours](https://rqlite.io/office-hours)


## Pronunciation
Common pronunciations of rqlite include &quot;R Q lite&quot; and &quot;ree-qwell-lite&quot;.
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[sundowndev/phoneinfoga]]></title>
            <link>https://github.com/sundowndev/phoneinfoga</link>
            <guid>https://github.com/sundowndev/phoneinfoga</guid>
            <pubDate>Mon, 21 Apr 2025 00:05:23 GMT</pubDate>
            <description><![CDATA[Information gathering framework for phone numbers]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/sundowndev/phoneinfoga">sundowndev/phoneinfoga</a></h1>
            <p>Information gathering framework for phone numbers</p>
            <p>Language: Go</p>
            <p>Stars: 14,131</p>
            <p>Forks: 3,987</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./docs/images/banner.png&quot; width=500  alt=&quot;project logo&quot;/&gt;
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/sundowndev/phoneinfoga/actions&quot;&gt;
    &lt;img src=&quot;https://github.com/sundowndev/phoneinfoga/workflows/Build/badge.svg&quot; alt=&quot;build status&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://goreportcard.com/report/github.com/sundowndev/phoneinfoga/v2&quot;&gt;
    &lt;img src=&quot;https://goreportcard.com/badge/github.com/sundowndev/phoneinfoga/v2&quot; alt=&quot;go report&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://codeclimate.com/github/sundowndev/phoneinfoga/maintainability&quot;&gt;
    &lt;img src=&quot;https://api.codeclimate.com/v1/badges/3259feb1c68df1cd4f71/maintainability&quot;  alt=&quot;code climate badge&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&#039;https://coveralls.io/github/sundowndev/phoneinfoga&#039;&gt;
    &lt;img src=&#039;https://coveralls.io/repos/github/sundowndev/phoneinfoga/badge.svg&#039; alt=&#039;Coverage Status&#039; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/sundowndev/phoneinfoga/releases&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/release/SundownDEV/phoneinfoga.svg&quot; alt=&quot;Latest version&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://hub.docker.com/r/sundowndev/phoneinfoga&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/docker/pulls/sundowndev/phoneinfoga.svg&quot; alt=&quot;Docker pulls&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;h4 align=&quot;center&quot;&gt;Information gathering framework for phone numbers&lt;/h4&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://sundowndev.github.io/phoneinfoga/&quot;&gt;Documentation&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;https://petstore.swagger.io/?url=https://raw.githubusercontent.com/sundowndev/phoneinfoga/master/web/docs/swagger.yaml&quot;&gt;API documentation&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;https://medium.com/@SundownDEV/phone-number-scanning-osint-recon-tool-6ad8f0cac27b&quot;&gt;Related blog post&lt;/a&gt;
&lt;/p&gt;

## About

PhoneInfoga is one of the most advanced tools to scan international phone numbers. It allows you to first gather basic information such as country, area, carrier and line type, then use various techniques to try to find the VoIP provider or identify the owner. It works with a collection of scanners that must be configured in order for the tool to be effective. PhoneInfoga doesn&#039;t automate everything, it&#039;s just there to help investigating on phone numbers.

## Current status

This project is stable and production-ready.

#### Demo instance termination

The demo instance has been terminated on December 21th, 2023. It&#039;s been expensive to maintain this instance throughout the years given the number of requests it received (~20K/month), without bringing much value to users compared to using it locally. Use it locally with your own API keys for a better experience.

## Features

- Check if phone number exists
- Gather basic information such as country, line type and carrier
- OSINT footprinting using external APIs, phone books &amp; search engines
- Check for reputation reports, social media, disposable numbers and more
- Use the graphical user interface to run scans from the browser
- Programmatic usage with the [REST API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/sundowndev/phoneinfoga/master/web/docs/swagger.yaml) and [Go modules](https://pkg.go.dev/github.com/sundowndev/phoneinfoga/v2)

## Anti-features

- Does not claim to provide relevant or verified data, it&#039;s just a tool !
- Does not allow to &quot;track&quot; a phone or its owner in real time
- Does not allow to get the precise phone location
- Does not allow to hack a phone

## License

[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fsundowndev%2FPhoneInfoga.svg?type=shield)](https://app.fossa.com/projects/git%2Bgithub.com%2Fsundowndev%2FPhoneInfoga?ref=badge_shield)

This tool is licensed under the GNU General Public License v3.0.

[Icon](https://www.flaticon.com/free-icon/fingerprint-search-symbol-of-secret-service-investigation_48838) made by &lt;a href=&quot;https://www.freepik.com/&quot; title=&quot;Freepik&quot;&gt;Freepik&lt;/a&gt; from &lt;a href=&quot;https://www.flaticon.com/&quot; title=&quot;Flaticon&quot;&gt;flaticon.com&lt;/a&gt; is licensed by &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot; title=&quot;Creative Commons BY 3.0&quot; target=&quot;_blank&quot;&gt;CC 3.0 BY&lt;/a&gt;.

## Support

Support me by signing up to DigitalOcean using my link ($200 free credits)

[![DigitalOcean Referral Badge](https://web-platforms.sfo2.cdn.digitaloceanspaces.com/WWW/Badge%203.svg)](https://www.digitalocean.com/?refcode=31f5ef768eb3&amp;utm_campaign=Referral_Invite&amp;utm_medium=Referral_Program&amp;utm_source=badge)

&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://github.com/sundowndev/static/raw/main/sponsors.svg?v=c68eba9&quot; width=&quot;100%&quot; heigh=&quot;auto&quot; /&gt;
&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
    </channel>
</rss>