<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for go - Go Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for go.</description>
        <lastBuildDate>Fri, 16 May 2025 00:05:22 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[gitleaks/gitleaks]]></title>
            <link>https://github.com/gitleaks/gitleaks</link>
            <guid>https://github.com/gitleaks/gitleaks</guid>
            <pubDate>Fri, 16 May 2025 00:05:22 GMT</pubDate>
            <description><![CDATA[Find secrets with Gitleaks üîë]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/gitleaks/gitleaks">gitleaks/gitleaks</a></h1>
            <p>Find secrets with Gitleaks üîë</p>
            <p>Language: Go</p>
            <p>Stars: 19,842</p>
            <p>Forks: 1,601</p>
            <p>Stars today: 31 stars today</p>
            <h2>README</h2><pre># Gitleaks

```
‚îå‚îÄ‚óã‚îÄ‚îÄ‚îÄ‚îê
‚îÇ ‚îÇ‚ï≤  ‚îÇ
‚îÇ ‚îÇ ‚óã ‚îÇ
‚îÇ ‚óã ‚ñë ‚îÇ
‚îî‚îÄ‚ñë‚îÄ‚îÄ‚îÄ‚îò
```

[license]: ./LICENSE
[badge-license]: https://img.shields.io/github/license/gitleaks/gitleaks.svg
[go-docs-badge]: https://pkg.go.dev/badge/github.com/gitleaks/gitleaks/v8?status
[go-docs]: https://pkg.go.dev/github.com/zricethezav/gitleaks/v8
[badge-build]: https://github.com/gitleaks/gitleaks/actions/workflows/test.yml/badge.svg
[build]: https://github.com/gitleaks/gitleaks/actions/workflows/test.yml
[go-report-card-badge]: https://goreportcard.com/badge/github.com/gitleaks/gitleaks/v8
[go-report-card]: https://goreportcard.com/report/github.com/gitleaks/gitleaks/v8
[dockerhub]: https://hub.docker.com/r/zricethezav/gitleaks
[dockerhub-badge]: https://img.shields.io/docker/pulls/zricethezav/gitleaks.svg
[gitleaks-action]: https://github.com/gitleaks/gitleaks-action
[gitleaks-badge]: https://img.shields.io/badge/protected%20by-gitleaks-blue
[gitleaks-playground-badge]: https://img.shields.io/badge/gitleaks%20-playground-blue
[gitleaks-playground]: https://gitleaks.io/playground


[![Github Action Test][badge-build]][build]
[![Docker Hub][dockerhub-badge]][dockerhub]
[![Gitleaks Playground][gitleaks-playground-badge]][gitleaks-playground]
[![Gitleaks Action][gitleaks-badge]][gitleaks-action]
[![GoDoc][go-docs-badge]][go-docs]
[![GoReportCard][go-report-card-badge]][go-report-card]
[![License][badge-license]][license]


### Join our Discord! [![Discord](https://img.shields.io/discord/1102689410522284044.svg?label=&amp;logo=discord&amp;logoColor=ffffff&amp;color=7389D8&amp;labelColor=6A7EC2)](https://discord.gg/8Hzbrnkr7E)

Gitleaks is a tool for **detecting** secrets like passwords, API keys, and tokens in git repos, files, and whatever else you wanna throw at it via `stdin`.

```
‚ûú  ~/code(master) gitleaks git -v

    ‚óã
    ‚îÇ‚ï≤
    ‚îÇ ‚óã
    ‚óã ‚ñë
    ‚ñë    gitleaks


Finding:     &quot;export BUNDLE_ENTERPRISE__CONTRIBSYS__COM=cafebabe:deadbeef&quot;,
Secret:      cafebabe:deadbeef
RuleID:      sidekiq-secret
Entropy:     2.609850
File:        cmd/generate/config/rules/sidekiq.go
Line:        23
Commit:      cd5226711335c68be1e720b318b7bc3135a30eb2
Author:      John
Email:       john@users.noreply.github.com
Date:        2022-08-03T12:31:40Z
Fingerprint: cd5226711335c68be1e720b318b7bc3135a30eb2:cmd/generate/config/rules/sidekiq.go:sidekiq-secret:23
```

## Getting Started

Gitleaks can be installed using Homebrew, Docker, or Go. Gitleaks is also available in binary form for many popular platforms and OS types on the [releases page](https://github.com/gitleaks/gitleaks/releases). In addition, Gitleaks can be implemented as a pre-commit hook directly in your repo or as a GitHub action using [Gitleaks-Action](https://github.com/gitleaks/gitleaks-action).

### Installing

```bash
# MacOS
brew install gitleaks

# Docker (DockerHub)
docker pull zricethezav/gitleaks:latest
docker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]

# Docker (ghcr.io)
docker pull ghcr.io/gitleaks/gitleaks:latest
docker run -v ${path_to_host_folder_to_scan}:/path ghcr.io/gitleaks/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]

# From Source (make sure `go` is installed)
git clone https://github.com/gitleaks/gitleaks.git
cd gitleaks
make build
```

### GitHub Action

Check out the official [Gitleaks GitHub Action](https://github.com/gitleaks/gitleaks-action)

```
name: gitleaks
on: [pull_request, push, workflow_dispatch]
jobs:
  scan:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}} # Only required for Organizations, not personal accounts.
```

### Pre-Commit

1. Install pre-commit from https://pre-commit.com/#install
2. Create a `.pre-commit-config.yaml` file at the root of your repository with the following content:

   ```
   repos:
     - repo: https://github.com/gitleaks/gitleaks
       rev: v8.24.2
       hooks:
         - id: gitleaks
   ```

   for a [native execution of GitLeaks](https://github.com/gitleaks/gitleaks/releases) or use the [`gitleaks-docker` pre-commit ID](https://github.com/gitleaks/gitleaks/blob/master/.pre-commit-hooks.yaml) for executing GitLeaks using the [official Docker images](#docker)

3. Auto-update the config to the latest repos&#039; versions by executing `pre-commit autoupdate`
4. Install with `pre-commit install`
5. Now you&#039;re all set!

```
‚ûú git commit -m &quot;this commit contains a secret&quot;
Detect hardcoded secrets.................................................Failed
```

Note: to disable the gitleaks pre-commit hook you can prepend `SKIP=gitleaks` to the commit command
and it will skip running gitleaks

```
‚ûú SKIP=gitleaks git commit -m &quot;skip gitleaks check&quot;
Detect hardcoded secrets................................................Skipped
```

## Usage

```
Usage:
  gitleaks [command]

Available Commands:
  dir         scan directories or files for secrets
  git         scan git repositories for secrets
  help        Help about any command
  stdin       detect secrets from stdin
  version     display gitleaks version

Flags:
  -b, --baseline-path string          path to baseline with issues that can be ignored
  -c, --config string                 config file path
                                      order of precedence:
                                      1. --config/-c
                                      2. env var GITLEAKS_CONFIG
                                      3. env var GITLEAKS_CONFIG_TOML with the file content
                                      4. (target path)/.gitleaks.toml
                                      If none of the four options are used, then gitleaks will use the default config
      --diagnostics string            enable diagnostics (comma-separated list: cpu,mem,trace). cpu=CPU profiling, mem=memory profiling, trace=execution tracing
      --diagnostics-dir string        directory to store diagnostics output files (defaults to current directory)
      --enable-rule strings           only enable specific rules by id
      --exit-code int                 exit code when leaks have been encountered (default 1)
  -i, --gitleaks-ignore-path string   path to .gitleaksignore file or folder containing one (default &quot;.&quot;)
  -h, --help                          help for gitleaks
      --ignore-gitleaks-allow         ignore gitleaks:allow comments
  -l, --log-level string              log level (trace, debug, info, warn, error, fatal) (default &quot;info&quot;)
      --max-decode-depth int          allow recursive decoding up to this depth (default &quot;0&quot;, no decoding is done)
      --max-target-megabytes int      files larger than this will be skipped
      --no-banner                     suppress banner
      --no-color                      turn off color for verbose output
      --redact uint[=100]             redact secrets from logs and stdout. To redact only parts of the secret just apply a percent value from 0..100. For example --redact=20 (default 100%)
  -f, --report-format string          output format (json, csv, junit, sarif, template)
  -r, --report-path string            report file
      --report-template string        template file used to generate the report (implies --report-format=template)
  -v, --verbose                       show verbose output from scan
      --version                       version for gitleaks

Use &quot;gitleaks [command] --help&quot; for more information about a command.
```

### Commands

‚ö†Ô∏è v8.19.0 introduced a change that deprecated `detect` and `protect`. Those commands are still available but
are hidden in the `--help` menu. Take a look at this [gist](https://gist.github.com/zricethezav/b325bb93ebf41b9c0b0507acf12810d2) for easy command translations.
If you find v8.19.0 broke an existing command (`detect`/`protect`), please open an issue.

There are three scanning modes: `git`, `dir`, and `stdin`.

#### Git
The `git` command lets you scan local git repos. Under the hood, gitleaks uses the `git log -p` command to scan patches.
You can configure the behavior of `git log -p` with the `log-opts` option.
For example, if you wanted to run gitleaks on a range of commits you could use the following
command: `gitleaks git -v --log-opts=&quot;--all commitA..commitB&quot; path_to_repo`. See the [git log](https://git-scm.com/docs/git-log) documentation for more information.
If there is no target specified as a positional argument, then gitleaks will attempt to scan the current working directory as a git repo.

#### Dir
The `dir` (aliases include `files`, `directory`) command lets you scan directories and files. Example: `gitleaks dir -v path_to_directory_or_file`.
If there is no target specified as a positional argument, then gitleaks will scan the current working directory.

#### Stdin
You can also stream data to gitleaks with the `stdin` command. Example: `cat some_file | gitleaks -v stdin`

### Creating a baseline

When scanning large repositories or repositories with a long history, it can be convenient to use a baseline. When using a baseline,
gitleaks will ignore any old findings that are present in the baseline. A baseline can be any gitleaks report. To create a gitleaks report, run gitleaks with the `--report-path` parameter.

```
gitleaks git --report-path gitleaks-report.json # This will save the report in a file called gitleaks-report.json
```

Once as baseline is created it can be applied when running the detect command again:

```
gitleaks git --baseline-path gitleaks-report.json --report-path findings.json
```

After running the detect command with the --baseline-path parameter, report output (findings.json) will only contain new issues.

## Pre-Commit hook

You can run Gitleaks as a pre-commit hook by copying the example `pre-commit.py` script into
your `.git/hooks/` directory.

## Load Configuration

The order of precedence is:

1. `--config/-c` option:
      ```bash
      gitleaks git --config /home/dev/customgitleaks.toml .
      ```
2. Environment variable `GITLEAKS_CONFIG` with the file path:
      ```bash
      export GITLEAKS_CONFIG=&quot;/home/dev/customgitleaks.toml&quot;
      gitleaks git .
      ```
3. Environment variable `GITLEAKS_CONFIG_TOML` with the file content:
      ```bash
      export GITLEAKS_CONFIG_TOML=`cat customgitleaks.toml`
      gitleaks git .
      ```
4. A `.gitleaks.toml` file within the target path:
      ```bash
      gitleaks git .
      ```

If none of the four options are used, then gitleaks will use the default config.

## Configuration

Gitleaks offers a configuration format you can follow to write your own secret detection rules:

```toml
# Title for the gitleaks configuration file.
title = &quot;Custom Gitleaks configuration&quot;

# You have basically two options for your custom configuration:
#
# 1. define your own configuration, default rules do not apply
#
#    use e.g., the default configuration as starting point:
#    https://github.com/gitleaks/gitleaks/blob/master/config/gitleaks.toml
#
# 2. extend a configuration, the rules are overwritten or extended
#
#    When you extend a configuration the extended rules take precedence over the
#    default rules. I.e., if there are duplicate rules in both the extended
#    configuration and the default configuration the extended rules or
#    attributes of them will override the default rules.
#    Another thing to know with extending configurations is you can chain
#    together multiple configuration files to a depth of 2. Allowlist arrays are
#    appended and can contain duplicates.

# useDefault and path can NOT be used at the same time. Choose one.
[extend]
# useDefault will extend the default gitleaks config built in to the binary
# the latest version is located at:
# https://github.com/gitleaks/gitleaks/blob/master/config/gitleaks.toml
useDefault = true
# or you can provide a path to a configuration to extend from.
# The path is relative to where gitleaks was invoked,
# not the location of the base config.
# path = &quot;common_config.toml&quot;
# If there are any rules you don&#039;t want to inherit, they can be specified here.
disabledRules = [ &quot;generic-api-key&quot;]

# An array of tables that contain information that define instructions
# on how to detect secrets
[[rules]]
# Unique identifier for this rule
id = &quot;awesome-rule-1&quot;

# Short human-readable description of the rule.
description = &quot;awesome rule 1&quot;

# Golang regular expression used to detect secrets. Note Golang&#039;s regex engine
# does not support lookaheads.
regex = &#039;&#039;&#039;one-go-style-regex-for-this-rule&#039;&#039;&#039;

# Int used to extract secret from regex match and used as the group that will have
# its entropy checked if `entropy` is set.
secretGroup = 3

# Float representing the minimum shannon entropy a regex group must have to be considered a secret.
entropy = 3.5

# Golang regular expression used to match paths. This can be used as a standalone rule or it can be used
# in conjunction with a valid `regex` entry.
path = &#039;&#039;&#039;a-file-path-regex&#039;&#039;&#039;

# Keywords are used for pre-regex check filtering. Rules that contain
# keywords will perform a quick string compare check to make sure the
# keyword(s) are in the content being scanned. Ideally these values should
# either be part of the identiifer or unique strings specific to the rule&#039;s regex
# (introduced in v8.6.0)
keywords = [
  &quot;auth&quot;,
  &quot;password&quot;,
  &quot;token&quot;,
]

# Array of strings used for metadata and reporting purposes.
tags = [&quot;tag&quot;,&quot;another tag&quot;]

    # ‚ö†Ô∏è In v8.21.0 `[rules.allowlist]` was replaced with `[[rules.allowlists]]`.
    # This change was backwards-compatible: instances of `[rules.allowlist]` still  work.
    #
    # You can define multiple allowlists for a rule to reduce false positives.
    # A finding will be ignored if _ANY_ `[[rules.allowlists]]` matches.
    [[rules.allowlists]]
    description = &quot;ignore commit A&quot;
    # When multiple criteria are defined the default condition is &quot;OR&quot;.
    # e.g., this can match on |commits| OR |paths| OR |stopwords|.
    condition = &quot;OR&quot;
    commits = [ &quot;commit-A&quot;, &quot;commit-B&quot;]
    paths = [
      &#039;&#039;&#039;go\.mod&#039;&#039;&#039;,
      &#039;&#039;&#039;go\.sum&#039;&#039;&#039;
    ]
    # note: stopwords targets the extracted secret, not the entire regex match
    # like &#039;regexes&#039; does. (stopwords introduced in 8.8.0)
    stopwords = [
      &#039;&#039;&#039;client&#039;&#039;&#039;,
      &#039;&#039;&#039;endpoint&#039;&#039;&#039;,
    ]

    [[rules.allowlists]]
    # The &quot;AND&quot; condition can be used to make sure all criteria match.
    # e.g., this matches if |regexes| AND |paths| are satisfied.
    condition = &quot;AND&quot;
    # note: |regexes| defaults to check the _Secret_ in the finding.
    # Acceptable values for |regexTarget| are &quot;secret&quot; (default), &quot;match&quot;, and &quot;line&quot;.
    regexTarget = &quot;match&quot;
    regexes = [ &#039;&#039;&#039;(?i)parseur[il]&#039;&#039;&#039; ]
    paths = [ &#039;&#039;&#039;package-lock\.json&#039;&#039;&#039; ]

# You can extend a particular rule from the default config. e.g., gitlab-pat
# if you have defined a custom token prefix on your GitLab instance
[[rules]]
id = &quot;gitlab-pat&quot;
# all the other attributes from the default rule are inherited

    [[rules.allowlists]]
    regexTarget = &quot;line&quot;
    regexes = [ &#039;&#039;&#039;MY-glpat-&#039;&#039;&#039; ]


# ‚ö†Ô∏è In v8.25.0 `[allowlist]` was replaced with `[[allowlists]]`.
# 
# Global allowlists have a higher order of precedence than rule-specific allowlists.
# If a commit listed in the `commits` field below is encountered then that commit will be skipped and no
# secrets will be detected for said commit. The same logic applies for regexes and paths.
[[allowlists]]
description = &quot;global allow list&quot;
commits = [ &quot;commit-A&quot;, &quot;commit-B&quot;, &quot;commit-C&quot;]
paths = [
  &#039;&#039;&#039;gitleaks\.toml&#039;&#039;&#039;,
  &#039;&#039;&#039;(.*?)(jpg|gif|doc)&#039;&#039;&#039;
]
# note: (global) regexTarget defaults to check the _Secret_ in the finding.
# Acceptable values for regexTarget are &quot;match&quot; and &quot;line&quot;
regexTarget = &quot;match&quot;
regexes = [
  &#039;&#039;&#039;219-09-9999&#039;&#039;&#039;,
  &#039;&#039;&#039;078-05-1120&#039;&#039;&#039;,
  &#039;&#039;&#039;(9[0-9]{2}|666)-\d{2}-\d{4}&#039;&#039;&#039;,
]
# note: stopwords targets the extracted secret, not the entire regex match
# like &#039;regexes&#039; does. (stopwords introduced in 8.8.0)
stopwords = [
  &#039;&#039;&#039;client&#039;&#039;&#039;,
  &#039;&#039;&#039;endpoint&#039;&#039;&#039;,
]

# ‚ö†Ô∏è In v8.25.0, `[[allowlists]]` have a new field called |targetRules|.
#
# Common allowlists can be defined once and assigned to multiple rules using |targetRules|.
# This will only run on the specified rules, not globally.
[[allowlists]]
targetRules = [&quot;awesome-rule-1&quot;, &quot;awesome-rule-2&quot;]
description = &quot;Our test assets trigger false-positives in a couple rules.&quot;
paths = [&#039;&#039;&#039;tests/expected/._\.json$&#039;&#039;&#039;]
```

Refer to the default [gitleaks config](https://github.com/gitleaks/gitleaks/blob/master/config/gitleaks.toml) for examples or follow the [contributing guidelines](https://github.com/gitleaks/gitleaks/blob/master/CONTRIBUTING.md) if you would like to contribute to the default configuration. Additionally, you can check out [this gitleaks blog post](https://blog.gitleaks.io/stop-leaking-secrets-configuration-2-3-aeed293b1fbf) which covers advanced configuration setups.

### Additional Configuration

#### gitleaks:allow

If you are knowingly committing a test secret that gitleaks will catch you can add a `gitleaks:allow` comment to that line which will instruct gitleaks
to ignore that secret. Ex:

```
class CustomClass:
    discord_client_secret = &#039;8dyfuiRyq=vVc3RRr_edRk-fK__JItpZ&#039;  #gitleaks:allow

```

#### .gitleaksignore

You can ignore specific findings by creating a `.gitleaksignore` file at the root of your repo. In release v8.10.0 Gitleaks added a `Fingerprint` value to the Gitleaks report. Each leak, or finding, has a Fingerprint that uniquely identifies a secret. Add this fingerprint to the `.gitleaksignore` file to ignore that specific secret. See Gitleaks&#039; [.gitleaksignore](https://github.com/gitleaks/gitleaks/blob/master/.gitleaksignore) for an example. Note: this feature is experimental and is subject to change in the future.

#### Decoding

Sometimes secrets are encoded in a way that can make them difficult to find
with just regex. Now you can tell gitleaks to automatically find and decode
encoded text. The flag `--max-decode-depth` enables this feature (the default
value &quot;0&quot; means the feature is disabled by default).

Recursive decoding is supported since decoded text can also contain encoded
text.  The flag `--max-decode-depth` sets the recursion limit. Recursion stops
when there are no new segments of encoded text to decode, so setting a really
high max depth doesn&#039;t mean it will make that many passes. It will only make as
many as it needs to decode the text. Overall, decoding only minimally increases
scan times.

The findings for encoded text differ from normal findings in the following
ways:

- The location points the bounds of the encoded text
  - If the rule matches outside the encoded text, the bounds are adjusted to
    include that as well
- The match and secret contain the decoded value
- Two tags are added `decoded:&lt;encoding&gt;` and `decode-depth:&lt;depth&gt;`

Currently supported encodings:

- **percent** - Any printable ASCII percent encoded values
- **hex** - Any printable ASCII hex encoded values &gt;= 32 characters 
- **base64** - Any printable ASCII base64 encoded values &gt;= 16 characters 

#### Reporting

Gitleaks has built-in support for several report formats: [`json`](https://github.com/gitleaks/gitleaks/blob/master/testdata/expected/report/json_simple.json), [`csv`](https://github.com/gitleaks/gitleaks/blob/master/testdata/expected/report/csv_simple.csv?plain=1), [`junit`](https://github.com/gitleaks/gitleaks/blob/master/testdata/expected/report/junit_simple.xml), and [`sarif`](https://github.com/gitleaks/gitleaks/blob/master/testdata/expected/report/sarif_simple.sarif).

If none of these formats fit your need, you can create your own report format with a [Go `text/template` .tmpl file](https://www.digitalocean.com/community/tutorials/how-to-use-templates-in-go#step-4-writing-a-template) and the `--report-template` flag. The template can use [extended functionality from the `Masterminds/sprig` 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[plandex-ai/plandex]]></title>
            <link>https://github.com/plandex-ai/plandex</link>
            <guid>https://github.com/plandex-ai/plandex</guid>
            <pubDate>Fri, 16 May 2025 00:05:21 GMT</pubDate>
            <description><![CDATA[Open source AI coding agent. Designed for large projects and real world tasks.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/plandex-ai/plandex">plandex-ai/plandex</a></h1>
            <p>Open source AI coding agent. Designed for large projects and real world tasks.</p>
            <p>Language: Go</p>
            <p>Stars: 13,371</p>
            <p>Forks: 903</p>
            <p>Stars today: 68 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;
 &lt;a href=&quot;https://plandex.ai&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;images/plandex-logo-dark-v2.png&quot;/&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;images/plandex-logo-light-v2.png&quot;/&gt;
    &lt;img width=&quot;400&quot; src=&quot;images/plandex-logo-dark-bg-v2.png&quot;/&gt;
 &lt;/a&gt;
 &lt;br /&gt;
&lt;/h1&gt;
&lt;br /&gt;

&lt;div align=&quot;center&quot;&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;!-- Call to Action Links --&gt;
  &lt;a href=&quot;#install&quot;&gt;
    &lt;b&gt;30-Second Install&lt;/b&gt;
  &lt;/a&gt;
   ¬∑ 
  &lt;a href=&quot;https://plandex.ai&quot;&gt;
    &lt;b&gt;Website&lt;/b&gt;
  &lt;/a&gt;
   ¬∑ 
  &lt;a href=&quot;https://docs.plandex.ai/&quot;&gt;
    &lt;b&gt;Docs&lt;/b&gt;
  &lt;/a&gt;
   ¬∑ 
  &lt;a href=&quot;#examples-&quot;&gt;
    &lt;b&gt;Examples&lt;/b&gt;
  &lt;/a&gt;
   ¬∑ 
  &lt;a href=&quot;https://docs.plandex.ai/hosting/self-hosting/local-mode-quickstart&quot;&gt;
    &lt;b&gt;Local Self-Hosted Mode&lt;/b&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;br&gt;

[![Discord](https://img.shields.io/discord/1214825831973785600.svg?style=flat&amp;logo=discord&amp;label=Discord&amp;refresh=1)](https://discord.gg/plandex-ai)
[![GitHub Repo stars](https://img.shields.io/github/stars/plandex-ai/plandex?style=social)](https://github.com/plandex-ai/plandex)
[![Twitter Follow](https://img.shields.io/twitter/follow/PlandexAI?style=social)](https://twitter.com/PlandexAI)

&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;!-- Badges --&gt;
&lt;a href=&quot;https://github.com/plandex-ai/plandex/pulls&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg&quot; alt=&quot;PRs Welcome&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/plandex-ai/plandex/releases?q=cli&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/plandex-ai/plandex?filter=cli*&quot; alt=&quot;Release&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/plandex-ai/plandex/releases?q=server&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/plandex-ai/plandex?filter=server*&quot; alt=&quot;Release&quot; /&gt;&lt;/a&gt;

  &lt;!-- &lt;a href=&quot;https://github.com/your_username/your_project/issues&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/issues-closed/your_username/your_project.svg&quot; alt=&quot;Issues Closed&quot; /&gt;
  &lt;/a&gt; --&gt;

&lt;/p&gt;

&lt;br /&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://trendshift.io/repositories/8994&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/8994&quot; alt=&quot;plandex-ai%2Fplandex | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;br&gt;

&lt;h1 align=&quot;center&quot; &gt;
  An AI coding agent designed for large tasks and real world projects.&lt;br/&gt;&lt;br/&gt;
&lt;/h1&gt;

&lt;!-- &lt;h2 align=&quot;center&quot;&gt;
  Designed for large tasks and real world projects.&lt;br/&gt;&lt;br/&gt;
  &lt;/h2&gt; --&gt;
  &lt;br/&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=SFSu2vNmlLk&quot;&gt;
    &lt;img src=&quot;images/plandex-v2-yt.png&quot; alt=&quot;Plandex v2 Demo Video&quot; width=&quot;800&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;br/&gt;

üíª¬† Plandex is a terminal-based AI development tool that can **plan and execute** large coding tasks that span many steps and touch dozens of files. It can handle up to 2M tokens of context directly (~100k per file), and can index directories with 20M tokens or more using tree-sitter project maps. 

üî¨¬† **A cumulative diff review sandbox** keeps AI-generated changes separate from your project files until they are ready to go. Command execution is controlled so you can easily roll back and debug. Plandex helps you get the most out of AI without leaving behind a mess in your project.

üß†¬† **Combine the best models** from Anthropic, OpenAI, Google, and open source providers to build entire features and apps with a robust terminal-based workflow.

üöÄ¬† Plandex is capable of &lt;strong&gt;full autonomy&lt;/strong&gt;‚Äîit can load relevant files, plan and implement changes, execute commands, and automatically debug‚Äîbut it&#039;s also highly flexible and configurable, giving developers fine-grained control and a step-by-step review process when needed.

üí™¬† Plandex is designed to be resilient to &lt;strong&gt;large projects and files&lt;/strong&gt;. If you&#039;ve found that others tools struggle once your project gets past a certain size or the changes are too complex, give Plandex a shot.

## Smart context management that works in big projects

- üêò **2M token effective context window** with default model pack. Plandex loads only what&#039;s needed for each step.

- üóÑÔ∏è **Reliable in large projects and files.** Easily generate, review, revise, and apply changes spanning dozens of files.

- üó∫Ô∏è **Fast project map generation** and syntax validation with tree-sitter. Supports 30+ languages.

- üí∞ **Context caching** is used across the board for OpenAI, Anthropic, and Google models, reducing costs and latency.

## Tight control or full autonomy‚Äîit&#039;s up to you

- üö¶ **Configurable autonomy:** go from full auto mode to fine-grained control depending on the task.

- üêû **Automated debugging** of terminal commands (like builds, linters, tests, deployments, and scripts). If you have Chrome installed, you can also automatically debug browser applications.

## Tools that help you get production-ready results

- üí¨ **A project-aware chat mode** that helps you flesh out ideas before moving to implementation. Also great for asking questions and learning about a codebase.

- üß† **Easily try + combine models** from multiple providers. Curated model packs offer different tradeoffs of capability, cost, and speed, as well as open source and provider-specific packs.

- üõ°Ô∏è **Reliable file edits** that prioritize correctness. While most edits are quick and cheap, Plandex validates both syntax and logic as needed, with multiple fallback layers when there are problems.

- üîÄ **Full-fledged version control** for every update to the plan, including branches for exploring multiple paths or comparing different models.

- üìÇ **Git integration** with commit message generation and optional automatic commits.

## Dev-friendly, easy to install

- üßë‚Äçüíª **REPL mode** with fuzzy auto-complete for commands and file loading. Just run `plandex` in any project to get started.

- üõ†Ô∏è **CLI interface** for scripting or piping data into context.

- üì¶ **One-line, zero dependency CLI install**. Dockerized local mode for easily self-hosting the server. Cloud-hosting options for extra reliability and convenience.


## Workflow¬†¬†üîÑ

&lt;img src=&quot;images/plandex-workflow.png&quot; alt=&quot;Plandex workflow&quot; width=&quot;100%&quot;/&gt;

## Examples¬† üé•

  &lt;br/&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=g-_76U_nK0Y&quot;&gt;
    &lt;img src=&quot;images/plandex-browser-debug-yt.png&quot; alt=&quot;Plandex Browser Debugging Example&quot; width=&quot;800&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;br/&gt;

## Install¬†¬†üì•

```bash
curl -sL https://plandex.ai/install.sh | bash
```

**Note:** Windows is supported via [WSL](https://learn.microsoft.com/en-us/windows/wsl/install). Plandex only works correctly on Windows in the WSL shell. It doesn&#039;t work in the Windows CMD prompt or PowerShell.

[More installation options.](https://docs.plandex.ai/install)

## Hosting¬†¬†‚öñÔ∏è

| Option                                | Description                                                                                                                                                                                                                                                 |
| ------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| **Plandex Cloud (Integrated Models)** | ‚Ä¢ No separate accounts or API keys.&lt;br/&gt;‚Ä¢ Easy multi-device usage.&lt;br/&gt;‚Ä¢ Centralized billing, budgeting, usage tracking, and cost reporting.&lt;br/&gt;‚Ä¢ Quickest way to [get started.](https://app.plandex.ai/start?modelsMode=integrated)                                                        |
| **Plandex Cloud (BYO API Key)**       | ‚Ä¢ Use Plandex Cloud with your own [OpenRouter.ai](https://openrouter.ai) key (and **optionally** your own [OpenAI](https://platform.openai.com) key).&lt;br/&gt;‚Ä¢ [Get started](https://app.plandex.ai/start?modelsMode=byo)                                                                   |
| **Self-hosted/Local Mode**            | ‚Ä¢ Run Plandex locally with Docker or host on your own server.&lt;br/&gt;‚Ä¢ Use your own [OpenRouter.ai](https://openrouter.ai) key (and **optionally** your own [OpenAI](https://platform.openai.com) key).&lt;br/&gt;‚Ä¢ Follow the [local-mode quickstart](./hosting/self-hosting.md) to get started. |

## Provider keys¬† üîë

If you&#039;re going with a &#039;BYO API Key&#039; option above (whether cloud or self-hosted), you&#039;ll need to set the `OPENROUTER_API_KEY` environment variable before continuing:

```bash
export OPENROUTER_API_KEY=...
```

You can also **optionally** set a `OPENAI_API_KEY` environment variable if you want OpenAI models to use the OpenAI API directly instead of OpenRouter (for slightly lower latency and costs):

```bash
export OPENAI_API_KEY=...
```

&lt;br/&gt;

## Get started¬† üöÄ

First, `cd` into a **project directory** where you want to get something done or chat about the project. Make a new directory first with `mkdir your-project-dir` if you&#039;re starting on a new project.

```bash
cd your-project-dir
```

For a new project, you might also want to initialize a git repo. Plandex doesn&#039;t require that your project is in a git repo, but it does integrate well with git if you use it.

```bash
git init
```

Now start the Plandex REPL in your project:

```bash
plandex
```

or for short:

```bash
pdx
```

‚òÅÔ∏è _If you&#039;re using Plandex Cloud, you&#039;ll be prompted at this point to start a trial._

Then just give the REPL help text a quick read, and you&#039;re ready go. The REPL starts in _chat mode_ by default, which is good for fleshing out ideas before moving to implementation. Once the task is clear, Plandex will prompt you to switch to _tell mode_ to make a detailed plan and start writing code.

&lt;br/&gt;

## Docs¬† üõ†Ô∏è

### [üëâ¬†¬†Full documentation.](https://docs.plandex.ai/)

&lt;br/&gt;

## Discussion and discord ¬†üí¨

Please feel free to give your feedback, ask questions, report a bug, or just hang out:

- [Discord](https://discord.gg/plandex-ai)
- [Discussions](https://github.com/plandex-ai/plandex/discussions)
- [Issues](https://github.com/plandex-ai/plandex/issues)

## Follow and subscribe

- [Follow @PlandexAI](https://x.com/PlandexAI)
- [Follow @Danenania](https://x.com/Danenania) (Plandex&#039;s creator)
- [Subscribe on YouTube](https://x.com/PlandexAI)

&lt;br/&gt;

## Contributors ¬†üë•

‚≠êÔ∏è¬†¬†Please star, fork, explore, and contribute to Plandex. There&#039;s a lot of work to do and so much that can be improved.

[Here&#039;s an overview on setting up a development environment.](https://docs.plandex.ai/development)
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[aquasecurity/trivy]]></title>
            <link>https://github.com/aquasecurity/trivy</link>
            <guid>https://github.com/aquasecurity/trivy</guid>
            <pubDate>Fri, 16 May 2025 00:05:20 GMT</pubDate>
            <description><![CDATA[Find vulnerabilities, misconfigurations, secrets, SBOM in containers, Kubernetes, code repositories, clouds and more]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/aquasecurity/trivy">aquasecurity/trivy</a></h1>
            <p>Find vulnerabilities, misconfigurations, secrets, SBOM in containers, Kubernetes, code repositories, clouds and more</p>
            <p>Language: Go</p>
            <p>Stars: 26,648</p>
            <p>Forks: 2,549</p>
            <p>Stars today: 47 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;docs/imgs/logo.png&quot; width=&quot;200&quot;&gt;

[![GitHub Release][release-img]][release]
[![Test][test-img]][test]
[![Go Report Card][go-report-img]][go-report]
[![License: Apache-2.0][license-img]][license]
[![GitHub Downloads][github-downloads-img]][release]
![Docker Pulls][docker-pulls]

[üìñ Documentation][docs]
&lt;/div&gt;

Trivy ([pronunciation][pronunciation]) is a comprehensive and versatile security scanner.
Trivy has *scanners* that look for security issues, and *targets* where it can find those issues.

Targets (what Trivy can scan):

- Container Image
- Filesystem
- Git Repository (remote)
- Virtual Machine Image
- Kubernetes

Scanners (what Trivy can find there):

- OS packages and software dependencies in use (SBOM)
- Known vulnerabilities (CVEs)
- IaC issues and misconfigurations
- Sensitive information and secrets
- Software licenses

Trivy supports most popular programming languages, operating systems, and platforms. For a complete list, see the [Scanning Coverage] page.

To learn more, go to the [Trivy homepage][homepage] for feature highlights, or to the [Documentation site][docs] for detailed information.

## Quick Start

### Get Trivy

Trivy is available in most common distribution channels. The full list of installation options is available in the [Installation] page. Here are a few popular examples:

- `brew install trivy`
- `docker run aquasec/trivy`
- Download binary from &lt;https://github.com/aquasecurity/trivy/releases/latest/&gt;
- See [Installation] for more

Trivy is integrated with many popular platforms and applications. The complete list of integrations is available in the [Ecosystem] page. Here are a few popular examples:

- [GitHub Actions](https://github.com/aquasecurity/trivy-action)
- [Kubernetes operator](https://github.com/aquasecurity/trivy-operator)
- [VS Code plugin](https://github.com/aquasecurity/trivy-vscode-extension)
- See [Ecosystem] for more

### Canary builds
There are canary builds ([Docker Hub](https://hub.docker.com/r/aquasec/trivy/tags?page=1&amp;name=canary), [GitHub](https://github.com/aquasecurity/trivy/pkgs/container/trivy/75776514?tag=canary), [ECR](https://gallery.ecr.aws/aquasecurity/trivy#canary) images and [binaries](https://github.com/aquasecurity/trivy/actions/workflows/canary.yaml)) as generated every push to main branch.

Please be aware: canary builds might have critical bugs, it&#039;s not recommended for use in production.

### General usage

```bash
trivy &lt;target&gt; [--scanners &lt;scanner1,scanner2&gt;] &lt;subject&gt;
```

Examples:

```bash
trivy image python:3.4-alpine
```

&lt;details&gt;
&lt;summary&gt;Result&lt;/summary&gt;

https://user-images.githubusercontent.com/1161307/171013513-95f18734-233d-45d3-aaf5-d6aec687db0e.mov

&lt;/details&gt;

```bash
trivy fs --scanners vuln,secret,misconfig myproject/
```

&lt;details&gt;
&lt;summary&gt;Result&lt;/summary&gt;

https://user-images.githubusercontent.com/1161307/171013917-b1f37810-f434-465c-b01a-22de036bd9b3.mov

&lt;/details&gt;

```bash
trivy k8s --report summary cluster
```

&lt;details&gt;
&lt;summary&gt;Result&lt;/summary&gt;

![k8s summary](docs/imgs/trivy-k8s.png)

&lt;/details&gt;

## FAQ

### How to pronounce the name &quot;Trivy&quot;?

`tri` is pronounced like **tri**gger, `vy` is pronounced like en**vy**.

## Want more? Check out Aqua

If you liked Trivy, you will love Aqua which builds on top of Trivy to provide even more enhanced capabilities for a complete security management offering.  
You can find a high level comparison table specific to Trivy users [here](https://trivy.dev/latest/commercial/compare/).
In addition check out the &lt;https://aquasec.com&gt; website for more information about our products and services.
If you&#039;d like to contact Aqua or request a demo, please use this form: &lt;https://www.aquasec.com/demo&gt;

## Community

Trivy is an [Aqua Security][aquasec] open source project.  
Learn about our open source work and portfolio [here][oss].  
Contact us about any matter by opening a GitHub Discussion [here][discussions]

Please ensure to abide by our [Code of Conduct][code-of-conduct] during all interactions.

[test]: https://github.com/aquasecurity/trivy/actions/workflows/test.yaml
[test-img]: https://github.com/aquasecurity/trivy/actions/workflows/test.yaml/badge.svg
[go-report]: https://goreportcard.com/report/github.com/aquasecurity/trivy
[go-report-img]: https://goreportcard.com/badge/github.com/aquasecurity/trivy
[release]: https://github.com/aquasecurity/trivy/releases
[release-img]: https://img.shields.io/github/release/aquasecurity/trivy.svg?logo=github
[github-downloads-img]: https://img.shields.io/github/downloads/aquasecurity/trivy/total?logo=github
[docker-pulls]: https://img.shields.io/docker/pulls/aquasec/trivy?logo=docker&amp;label=docker%20pulls%20%2F%20trivy
[license]: https://github.com/aquasecurity/trivy/blob/main/LICENSE
[license-img]: https://img.shields.io/badge/License-Apache%202.0-blue.svg
[homepage]: https://trivy.dev
[docs]: https://trivy.dev/latest/docs/
[pronunciation]: #how-to-pronounce-the-name-trivy
[code-of-conduct]: https://github.com/aquasecurity/community/blob/main/CODE_OF_CONDUCT.md

[Installation]:https://trivy.dev/latest/getting-started/installation/
[Ecosystem]: https://trivy.dev/latest/ecosystem/
[Scanning Coverage]: https://trivy.dev/latest/docs/coverage/

[alpine]: https://ariadne.space/2021/06/08/the-vulnerability-remediation-lifecycle-of-alpine-containers/
[rego]: https://www.openpolicyagent.org/docs/latest/#rego
[sigstore]: https://www.sigstore.dev/

[aquasec]: https://aquasec.com
[oss]: https://www.aquasec.com/products/open-source-projects/
[discussions]: https://github.com/aquasecurity/trivy/discussions
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[oauth2-proxy/oauth2-proxy]]></title>
            <link>https://github.com/oauth2-proxy/oauth2-proxy</link>
            <guid>https://github.com/oauth2-proxy/oauth2-proxy</guid>
            <pubDate>Fri, 16 May 2025 00:05:19 GMT</pubDate>
            <description><![CDATA[A reverse proxy that provides authentication with Google, Azure, OpenID Connect and many more identity providers.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/oauth2-proxy/oauth2-proxy">oauth2-proxy/oauth2-proxy</a></h1>
            <p>A reverse proxy that provides authentication with Google, Azure, OpenID Connect and many more identity providers.</p>
            <p>Language: Go</p>
            <p>Stars: 11,120</p>
            <p>Forks: 1,698</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>[![Continuous Integration](https://github.com/oauth2-proxy/oauth2-proxy/actions/workflows/ci.yml/badge.svg)](https://github.com/oauth2-proxy/oauth2-proxy/actions/workflows/ci.yml)
[![Go Report Card](https://goreportcard.com/badge/github.com/oauth2-proxy/oauth2-proxy)](https://goreportcard.com/report/github.com/oauth2-proxy/oauth2-proxy)
[![GoDoc](https://godoc.org/github.com/oauth2-proxy/oauth2-proxy?status.svg)](https://godoc.org/github.com/oauth2-proxy/oauth2-proxy)
[![MIT licensed](https://img.shields.io/badge/license-MIT-blue.svg)](./LICENSE)
[![Maintainability](https://api.codeclimate.com/v1/badges/a58ff79407212e2beacb/maintainability)](https://codeclimate.com/github/oauth2-proxy/oauth2-proxy/maintainability)
[![Test Coverage](https://api.codeclimate.com/v1/badges/a58ff79407212e2beacb/test_coverage)](https://codeclimate.com/github/oauth2-proxy/oauth2-proxy/test_coverage)

![OAuth2 Proxy](docs/static/img/logos/OAuth2_Proxy_horizontal.svg)

OAuth2-Proxy is a flexible, open-source tool that can act as either a standalone reverse proxy or a middleware component integrated into existing reverse proxy or load balancer setups. It provides a simple and secure way to protect your web applications with OAuth2 / OIDC authentication. As a reverse proxy, it intercepts requests to your application and redirects users to an OAuth2 provider for authentication. As a middleware, it can be seamlessly integrated into your existing infrastructure to handle authentication for multiple applications.

OAuth2-Proxy supports a lot of OAuth2 as well as OIDC providers. Either through a generic OIDC client or a specific implementation for Google, Microsoft Entra ID, GitHub, login.gov and others. Through specialised provider implementations oauth2-proxy can extract more details about the user like preferred usernames and groups. Those details can then be forwarded as HTTP headers to your upstream applications.

![Simplified Architecture](docs/static/img/simplified-architecture.svg)

## Get Started

OAuth2-Proxy&#039;s [Installation Docs](https://oauth2-proxy.github.io/oauth2-proxy/installation) cover how to install and configure your setup. Additionally you can take a further look at the [example setup files](https://github.com/oauth2-proxy/oauth2-proxy/tree/master/contrib/local-environment).

## Releases

### Binaries
We publish oauth2-proxy as compiled binaries on GitHub for all major architectures as well as more exotic ones like `ppc64le` as well as `s390x`.

Check out the [latest release](https://github.com/oauth2-proxy/oauth2-proxy/releases/latest).

### Images

From `v7.6.0` and up the base image has been changed from Alpine to [GoogleContainerTools/distroless](https://github.com/GoogleContainerTools/distroless).
This image comes with even fewer installed dependencies and thus should improve security. The image therefore is also slightly smaller than Alpine.
For debugging purposes (and those who really need it. e.g. `armv6`) we still provide images based on Alpine. The tags of these images are suffixed with `-alpine`.

Since 2023-11-18 we build nightly images directly from the `master` branch and provide them at `quay.io/oauth2-proxy/oauth2-proxy-nightly`.
These images are considered unstable and therefore should **NOT** be used for production purposes unless you know what you&#039;re doing.

## Sponsors

![Microsoft](https://upload.wikimedia.org/wikipedia/commons/9/96/Microsoft_logo_%282012%29.svg)
Microsoft Azure credits for open source projects

Would you like to sponsor the project then please contact us at [sponsors@oauth2-proxy.dev](mailto:sponsors@oauth2-proxy.dev)

## Getting Involved
[![Slack](https://img.shields.io/badge/slack-Gopher_%23oauth2--proxy-red?logo=slack)](https://gophers.slack.com/archives/CM2RSS25N)

Join the #oauth2-proxy [Slack channel](https://gophers.slack.com/archives/CM2RSS25N) to chat with other users of oauth2-proxy or reach out to the maintainers directly. Use the [public invite link](https://invite.slack.golangbridge.org/) to get an invite for the Gopher Slack space.

OAuth2-Proxy is a community-driven project. We rely on the contributÔ∏èions of our users to continually improve it. While review times can vary, we appreciate your patience and understanding. As a volunteer-driven project, we strive to keep this project stable and might take longer to merge changes.

If you want to contribute to the project. Please see our [Contributing](https://oauth2-proxy.github.io/oauth2-proxy/community/contribution) guide.

Who uses OAuth2-Proxy? Have a look at our new [ADOPTERS](ADOPTERS.md) file and
feel free to open a PR to add your organisation.

Thanks to all the people who already contributed ‚ù§

&lt;a href=&quot;https://github.com/oauth2-proxy/oauth2-proxy/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=oauth2-proxy/oauth2-proxy&amp;columns=15&amp;max=75&quot; /&gt;
  &lt;img src=&quot;https://img.shields.io/github/contributors/oauth2-proxy/oauth2-proxy&quot; /&gt;
&lt;/a&gt;

Made with [contrib.rocks](https://contrib.rocks).

## Security

If you believe you have found a vulnerability within OAuth2 Proxy or any of its dependencies, please do **NOT** open an issue or PR on GitHub, please do **NOT** post any details publicly.

Security disclosures **MUST** be done in private. If you have found an issue that you would like to bring to the attention of the maintainers, please compose an email and send it to the list of people listed in our [MAINTAINERS](MAINTAINERS) file.

For more details read our full [Security Docs](https://oauth2-proxy.github.io/oauth2-proxy/community/security#security-disclosures)

### Security Notice for v6.0.0 and older

If you are running a version older than v6.0.0 we **strongly recommend** to the current version.

See [open redirect vulnerability](https://github.com/oauth2-proxy/oauth2-proxy/security/advisories/GHSA-5m6c-jp6f-2vcv) for details.

## Repository History

**2018-11-27:** This repository was forked from [bitly/OAuth2_Proxy](https://github.com/bitly/oauth2_proxy). Versions v3.0.0 and up are from this fork and will have diverged from any changes in the original fork. A list of changes can be seen in the [CHANGELOG](CHANGELOG.md).

**2020-03-29:** This project was formerly hosted as `pusher/oauth2_proxy` but has been renamed to `oauth2-proxy/oauth2-proxy`. Going forward, all images shall be available at `quay.io/oauth2-proxy/oauth2-proxy` and binaries will be named `oauth2-proxy`.

## License

OAuth2-Proxy is distributed under [The MIT License](LICENSE).
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[thanos-io/thanos]]></title>
            <link>https://github.com/thanos-io/thanos</link>
            <guid>https://github.com/thanos-io/thanos</guid>
            <pubDate>Fri, 16 May 2025 00:05:18 GMT</pubDate>
            <description><![CDATA[Highly available Prometheus setup with long term storage capabilities. A CNCF Incubating project.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/thanos-io/thanos">thanos-io/thanos</a></h1>
            <p>Highly available Prometheus setup with long term storage capabilities. A CNCF Incubating project.</p>
            <p>Language: Go</p>
            <p>Stars: 13,513</p>
            <p>Forks: 2,160</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;docs/img/Thanos-logo_fullmedium.png&quot; alt=&quot;Thanos Logo&quot;&gt;&lt;/p&gt;

[![Latest Release](https://img.shields.io/github/release/thanos-io/thanos.svg?style=flat-square)](https://github.com/thanos-io/thanos/releases/latest) [![Go Report Card](https://goreportcard.com/badge/github.com/thanos-io/thanos)](https://goreportcard.com/report/github.com/thanos-io/thanos) [![Go Code reference](https://img.shields.io/badge/code%20reference-go.dev-darkblue.svg)](https://pkg.go.dev/github.com/thanos-io/thanos?tab=subdirectories) [![Slack](https://img.shields.io/badge/join%20slack-%23thanos-brightgreen.svg)](https://slack.cncf.io/) [![Netlify Status](https://api.netlify.com/api/v1/badges/664a5091-934c-4b0e-a7b6-bc12f822a590/deploy-status)](https://app.netlify.com/sites/thanos-io/deploys) [![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/3048/badge)](https://bestpractices.coreinfrastructure.org/projects/3048)

[![CI](https://github.com/thanos-io/thanos/workflows/CI/badge.svg)](https://github.com/thanos-io/thanos/actions?query=workflow%3ACI) [![CI](https://circleci.com/gh/thanos-io/thanos.svg?style=svg)](https://circleci.com/gh/thanos-io/thanos) [![go](https://github.com/thanos-io/thanos/workflows/go/badge.svg)](https://github.com/thanos-io/thanos/actions?query=workflow%3Ago) [![react](https://github.com/thanos-io/thanos/workflows/react/badge.svg)](https://github.com/thanos-io/thanos/actions?query=workflow%3Areact) [![docs](https://github.com/thanos-io/thanos/workflows/docs/badge.svg)](https://github.com/thanos-io/thanos/actions?query=workflow%3Adocs) [![Gitpod ready-to-code](https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod)](https://gitpod.io/#https://github.com/thanos-io/thanos) [![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://github.com/codespaces/new?hide_repo_select=true&amp;ref=main&amp;repo=109162639)

&gt; üì¢ [ThanosCon](https://events.linuxfoundation.org/kubecon-cloudnativecon-europe/co-located-events/thanoscon/) happened on 19th March 2024 as a co-located half-day on KubeCon EU in Paris.

## Overview

Thanos is a set of components that can be composed into a highly available metric system with unlimited storage capacity, which can be added seamlessly on top of existing Prometheus deployments.

Thanos is a [CNCF](https://www.cncf.io/) Incubating project.

Thanos leverages the Prometheus 2.0 storage format to cost-efficiently store historical metric data in any object storage while retaining fast query latencies. Additionally, it provides a global query view across all Prometheus installations and can merge data from Prometheus HA pairs on the fly.

Concretely the aims of the project are:

1. Global query view of metrics.
2. Unlimited retention of metrics.
3. High availability of components, including Prometheus.

## Getting Started

* **[Getting Started](https://thanos.io/tip/thanos/getting-started.md/)**
* [Design](https://thanos.io/tip/thanos/design.md/)
* [Blog posts](docs/getting-started.md#blog-posts)
* [Talks](docs/getting-started.md#talks)
* [Proposals](docs/proposals-done)
* [Integrations](docs/integrations.md)

## Features

* Global querying view across all connected Prometheus servers
* Deduplication and merging of metrics collected from Prometheus HA pairs
* Seamless integration with existing Prometheus setups
* Any object storage as its only, optional dependency
* Downsampling historical data for massive query speedup
* Cross-cluster federation
* Fault-tolerant query routing
* Simple gRPC &quot;Store API&quot; for unified data access across all metric data
* Easy integration points for custom metric providers

## Architecture Overview

Deployment with Sidecar for Kubernetes:

&lt;!---
Source file to copy and edit: https://docs.google.com/drawings/d/1AiMc1qAjASMbtqL6PNs0r9-ynGoZ9LIAtf0b9PjILxw/edit?usp=sharing
--&gt;

![Sidecar](https://docs.google.com/drawings/d/e/2PACX-1vSJd32gPh8-MC5Ko0-P-v1KQ0Xnxa0qmsVXowtkwVGlczGfVW-Vd415Y6F129zvh3y0vHLBZcJeZEoz/pub?w=960&amp;h=720)

Deployment with Receive in order to scale out or implement with other remote write compatible sources:

&lt;!---
Source file to copy and edit: https://docs.google.com/drawings/d/1iimTbcicKXqz0FYtSfz04JmmVFLVO9BjAjEzBm5538w/edit?usp=sharing
--&gt;

![Receive](https://docs.google.com/drawings/d/e/2PACX-1vRdYP__uDuygGR5ym1dxBzU6LEx5v7Rs1cAUKPsl5BZrRGVl5YIj5lsD_FOljeIVOGWatdAI9pazbCP/pub?w=960&amp;h=720)

## Thanos Philosophy

The philosophy of Thanos and our community is borrowing much from UNIX philosophy and the golang programming language.

* Each subcommand should do one thing and do it well
  * e.g. thanos query proxies incoming calls to known store API endpoints merging the result
* Write components that work together
  * e.g. blocks should be stored in native prometheus format
* Make it easy to read, write, and, run components
  * e.g. reduce complexity in system design and implementation

## Releases

Main branch should be stable and usable. Every commit to main builds docker image named `main-&lt;date&gt;-&lt;sha&gt;` in [quay.io/thanos/thanos](https://quay.io/repository/thanos/thanos) and [thanosio/thanos dockerhub (mirror)](https://hub.docker.com/r/thanosio/thanos)

We also perform minor releases every 6 weeks.

During that, we build tarballs for major platforms and release docker images.

See [release process docs](docs/release-process.md) for details.

## Contributing

Contributions are very welcome! See our [CONTRIBUTING.md](CONTRIBUTING.md) for more information.

## Community

Thanos is an open source project and we value and welcome new contributors and members of the community. Here are ways to get in touch with the community:

* Slack: [#thanos](https://slack.cncf.io/)
* Issue Tracker: [GitHub Issues](https://github.com/thanos-io/thanos/issues)

## Adopters

See [`Adopters List`](website/data/adopters.yml).

## Maintainers

See [MAINTAINERS.md](MAINTAINERS.md)
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[hashicorp/golang-lru]]></title>
            <link>https://github.com/hashicorp/golang-lru</link>
            <guid>https://github.com/hashicorp/golang-lru</guid>
            <pubDate>Fri, 16 May 2025 00:05:17 GMT</pubDate>
            <description><![CDATA[Golang LRU cache]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/hashicorp/golang-lru">hashicorp/golang-lru</a></h1>
            <p>Golang LRU cache</p>
            <p>Language: Go</p>
            <p>Stars: 4,613</p>
            <p>Forks: 516</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>golang-lru
==========

This provides the `lru` package which implements a fixed-size
thread safe LRU cache. It is based on the cache in Groupcache.

Documentation
=============

Full docs are available on [Go Packages](https://pkg.go.dev/github.com/hashicorp/golang-lru/v2)

LRU cache example
=================

```go
package main

import (
	&quot;fmt&quot;
	&quot;github.com/hashicorp/golang-lru/v2&quot;
)

func main() {
	l, _ := lru.New[int, any](128)
	for i := 0; i &lt; 256; i++ {
		l.Add(i, nil)
	}
	if l.Len() != 128 {
		panic(fmt.Sprintf(&quot;bad len: %v&quot;, l.Len()))
	}
}
```

Expirable LRU cache example
===========================

```go
package main

import (
	&quot;fmt&quot;
	&quot;time&quot;

	&quot;github.com/hashicorp/golang-lru/v2/expirable&quot;
)

func main() {
	// make cache with 10ms TTL and 5 max keys
	cache := expirable.NewLRU[string, string](5, nil, time.Millisecond*10)


	// set value under key1.
	cache.Add(&quot;key1&quot;, &quot;val1&quot;)

	// get value under key1
	r, ok := cache.Get(&quot;key1&quot;)

	// check for OK value
	if ok {
		fmt.Printf(&quot;value before expiration is found: %v, value: %q\n&quot;, ok, r)
	}

	// wait for cache to expire
	time.Sleep(time.Millisecond * 12)

	// get value under key1 after key expiration
	r, ok = cache.Get(&quot;key1&quot;)
	fmt.Printf(&quot;value after expiration is found: %v, value: %q\n&quot;, ok, r)

	// set value under key2, would evict old entry because it is already expired.
	cache.Add(&quot;key2&quot;, &quot;val2&quot;)

	fmt.Printf(&quot;Cache len: %d\n&quot;, cache.Len())
	// Output:
	// value before expiration is found: true, value: &quot;val1&quot;
	// value after expiration is found: false, value: &quot;&quot;
	// Cache len: 1
}
```
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[pdfcpu/pdfcpu]]></title>
            <link>https://github.com/pdfcpu/pdfcpu</link>
            <guid>https://github.com/pdfcpu/pdfcpu</guid>
            <pubDate>Fri, 16 May 2025 00:05:16 GMT</pubDate>
            <description><![CDATA[A PDF processor written in Go.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pdfcpu/pdfcpu">pdfcpu/pdfcpu</a></h1>
            <p>A PDF processor written in Go.</p>
            <p>Language: Go</p>
            <p>Stars: 7,586</p>
            <p>Forks: 528</p>
            <p>Stars today: 21 stars today</p>
            <h2>README</h2><pre># pdfcpu: a Go PDF processor and CLI

[![Test](https://github.com/pdfcpu/pdfcpu/workflows/Test/badge.svg)](https://github.com/pdfcpu/pdfcpu/actions)
[![Coverage Status](https://coveralls.io/repos/github/pdfcpu/pdfcpu/badge.svg?branch=master)](https://coveralls.io/github/pdfcpu/pdfcpu?branch=master)
[![GoDoc](https://godoc.org/github.com/pdfcpu/pdfcpu?status.svg)](https://pkg.go.dev/github.com/pdfcpu/pdfcpu)
[![Go Report Card](https://goreportcard.com/badge/github.com/pdfcpu/pdfcpu)](https://goreportcard.com/report/github.com/pdfcpu/pdfcpu)
[![Hex.pm](https://img.shields.io/hexpm/l/plug.svg)](https://opensource.org/licenses/Apache-2.0)
[![Gurubase](https://img.shields.io/badge/Gurubase-Ask%20pdfcpu%20Guru-006BFF)](https://gurubase.io/g/pdfcpu)

[![Latest release](https://img.shields.io/github/release/pdfcpu/pdfcpu.svg)](https://github.com/pdfcpu/pdfcpu/releases)
[![](https://img.shields.io/static/v1?label=Sponsor&amp;message=%E2%9D%A4&amp;logo=GitHub&amp;color=%23fe8e86)](https://github.com/sponsors/hhrutter)


&lt;a href=&quot;https://pdfcpu.io&quot;&gt;&lt;img src=&quot;resources/logoSmall.png&quot; width=&quot;150&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://pdfa.org&quot;&gt;&lt;img src=&quot;resources/pdfa.png&quot; width=&quot;75&quot;&gt;&lt;/a&gt;

pdfcpu is a PDF processing library written in [Go](https://go.dev/) that supports encryption and offers both an API and a command-line interface (CLI). It is compatible with all PDF versions with basic support and ongoing improvement for PDF 2.0 (ISO-32000-2).


## Motivation

This is an effort to build a comprehensive PDF processing library from the ground up written in Go. Over time pdfcpu aims to support the standard range of PDF processing features and also any interesting use cases that may present themselves along the way.

&lt;p align=&quot;center&quot;&gt;
  &lt;kbd&gt;&lt;a href=&quot;https://pdfcpu.io/generate/grid&quot;&gt;&lt;img src=&quot;resources/gridpdf.png&quot; height=&quot;150&quot;&gt;&lt;/a&gt;&lt;/kbd&gt;&amp;nbsp;
  &lt;kbd&gt;&lt;a href=&quot;https://pdfcpu.io/core/watermark&quot;&gt;&lt;img src=&quot;resources/wmi1abs.png&quot; height=&quot;150&quot;&gt;&lt;/a&gt;&lt;/kbd&gt;&amp;nbsp;
  &lt;kbd&gt;&lt;a href=&quot;https://pdfcpu.io/generate/nup&quot;&gt;&lt;img src=&quot;resources/nup9pdf.png&quot; height=&quot;150&quot;&gt;&lt;/a&gt;&lt;/kbd&gt;&amp;nbsp;
  &lt;kbd&gt;&lt;a href=&quot;https://pdfcpu.io/fonts/fonts&quot;&gt;&lt;img src=&quot;resources/cjkv.png&quot; height=&quot;150&quot;&gt;&lt;/a&gt;&lt;/kbd&gt;&amp;nbsp;
  &lt;kbd&gt;&lt;a href=&quot;https://pdfcpu.io/core/stamp&quot;&gt;&lt;img src=&quot;resources/4exp.png&quot; height=&quot;150&quot;&gt;&lt;/a&gt;&lt;/kbd&gt;&amp;nbsp;
  &lt;kbd&gt;&lt;a href=&quot;https://pdfcpu.io/form/form&quot;&gt;&lt;img src=&quot;resources/form.png&quot; height=&quot;150&quot;&gt;&lt;/a&gt;&lt;/kbd&gt;&lt;br&gt;&lt;br&gt;
  &lt;kbd&gt;&lt;a href=&quot;https://pdfcpu.io/generate/create&quot;&gt;&lt;img src=&quot;resources/table.png&quot; height=&quot;100&quot;&gt;&lt;/a&gt;&lt;/kbd&gt;&amp;nbsp;
  &lt;kbd&gt;&lt;a href=&quot;https://pdfcpu.io/core/stamp&quot;&gt;&lt;img src=&quot;resources/sti.png&quot; height=&quot;150&quot;&gt;&lt;/a&gt;&lt;/kbd&gt;&amp;nbsp;
  &lt;kbd&gt;&lt;img src=&quot;resources/hold3.png&quot; height=&quot;150&quot;&gt;&lt;/kbd&gt;&amp;nbsp;
  &lt;kbd&gt;&lt;a href=&quot;https://pdfcpu.io/core/watermark&quot;&gt;&lt;img src=&quot;resources/wmi4.png&quot; height=&quot;150&quot;&gt;&lt;/a&gt;&lt;/kbd&gt;&amp;nbsp;
  &lt;kbd&gt;&lt;a href=&quot;https://pdfcpu.io/generate/create&quot;&gt;&lt;img src=&quot;resources/imagebox.png&quot; height=&quot;100&quot;&gt;&lt;/a&gt;&lt;/kbd&gt;&amp;nbsp;&lt;br&gt;&lt;br&gt;
  &lt;kbd&gt;&lt;a href=&quot;https://pdfcpu.io/generate/booklet&quot;&gt;&lt;img src=&quot;resources/book2A4p1.png&quot; height=&quot;150&quot;&gt;&lt;/a&gt;&lt;/kbd&gt;
  &lt;kbd&gt;&lt;a href=&quot;https://pdfcpu.io/core/stamp&quot;&gt;&lt;img src=&quot;resources/stp.png&quot; height=&quot;150&quot;&gt;&lt;/a&gt;&lt;/kbd&gt;&amp;nbsp;
  &lt;kbd&gt;&lt;a href=&quot;https://pdfcpu.io/generate/grid&quot;&gt;&lt;img src=&quot;resources/gridimg.png&quot; height=&quot;150&quot;&gt;&lt;/a&gt;&lt;/kbd&gt;
  &lt;kbd&gt;&lt;a href=&quot;https://pdfcpu.io/core/stamp&quot;&gt;&lt;img src=&quot;resources/stRoundBorder.png&quot; height=&quot;150&quot;&gt;&lt;/a&gt;&lt;/kbd&gt;
  &lt;kbd&gt;&lt;a href=&quot;https://pdfcpu.io/generate/booklet&quot;&gt;&lt;img src=&quot;resources/book4A4p1.png&quot; height=&quot;150&quot;&gt;&lt;/a&gt;&lt;/kbd&gt;
&lt;/p&gt;

## Focus

The primary emphasis is on providing robust assistance for batch processing and scripting through a comprehensive command-line interface.
Simultaneously, pdfcpu aims to simplify the integration of PDF processing into your Go-based backend system by offering a versatile set of commands.

## Command Set

* [annotations](https://pdfcpu.io/annot/annot)
* [attachments](https://pdfcpu.io/attach/attach)
* [booklet](https://pdfcpu.io/generate/booklet)
* [bookmarks](https://pdfcpu.io/bookmarks/bookmarks)
* [boxes](https://pdfcpu.io/boxes/boxes)
* [certificates](https://pdfcpu.io/core/certs)
* [change owner password](https://pdfcpu.io/encrypt/change_opw)
* [change user password](https://pdfcpu.io/encrypt/change_upw)
* [collect](https://pdfcpu.io/core/collect)
* [config](https://pdfcpu.io/config/config)
* [create](https://pdfcpu.io/create/create)
* [crop](https://pdfcpu.io/core/crop)
* [cut](https://pdfcpu.io/generate/cut)
* [decrypt](https://pdfcpu.io/encrypt/decryptPDF)
* [encrypt](https://pdfcpu.io/encrypt/encryptPDF)
* [extract](https://pdfcpu.io/extract/extract)
* [fonts](https://pdfcpu.io/fonts/fonts)
* [form](https://pdfcpu.io/form/form)
* [grid](https://pdfcpu.io/generate/grid)
* [images](https://pdfcpu.io/images/images)
* [import](https://pdfcpu.io/generate/import)
* [info](https://pdfcpu.io/info)
* [keywords](https://pdfcpu.io/keywords/keywords)
* [merge](https://pdfcpu.io/core/merge)
* [ndown](https://pdfcpu.io/generate/ndown)
* [nup](https://pdfcpu.io/generate/nup)
* [optimize](https://pdfcpu.io/core/optimize)
* [pagelayout](https://pdfcpu.io/pagelayout/pagelayout)
* [pagemode](https://pdfcpu.io/pagemode/pagemode)
* [pages](https://pdfcpu.io/pages/pages)
* [permissions](https://pdfcpu.io/encrypt/perm_set)
* [portfolio](https://pdfcpu.io/portfolio/portfolio)
* [poster](https://pdfcpu.io/generate/poster)
* [properties](https://pdfcpu.io/properties/properties)
* [resize](https://pdfcpu.io/core/resize)
* [rotate](https://pdfcpu.io/core/rotate)
* [signatures](http://pdfcpu.io/core/sign)
* [split](https://pdfcpu.io/core/split)
* [stamp](https://pdfcpu.io/core/stamp)
* [trim](https://pdfcpu.io/core/trim)
* [validate](https://pdfcpu.io/core/validate)
* [viewerpref](https://pdfcpu.io/viewerpref/viewerpref)
* [watermark](https://pdfcpu.io/core/watermark)
* [zoom](https://pdfcpu.io/core/zoom)

## Documentation

* [pdfcpu.io](https://pdfcpu.io)
* [API tests](https://github.com/pdfcpu/pdfcpu/tree/master/pkg/api/test)
* [API samples](https://github.com/pdfcpu/pdfcpu/tree/master/pkg/samples) 
* CLI usage: `$ pdfcpu help cmd`

### GoDoc

* [pdfcpu package](https://pkg.go.dev/github.com/pdfcpu/pdfcpu)
* [pdfcpu API](https://pkg.go.dev/github.com/pdfcpu/pdfcpu/pkg/api)
* [pdfcpu CLI](https://pkg.go.dev/github.com/pdfcpu/pdfcpu/pkg/cli)

## Reminder

* Always make sure your work is based on the latest commit!&lt;br&gt;
* pdfcpu is still *Alpha* - bugfixes are committed on the fly and will be mentioned in the next release notes.&lt;br&gt;
* Follow [pdfcpu](https://twitter.com/pdfcpu) for news and release announcements.
* For quick questions or discussions get in touch on the [Gopher Slack](https://invite.slack.golangbridge.org/) in the #pdfcpu channel.


## Demo Screencast

(using older version with a smaller command set)

[![asciicast](resources/demo.png)](https://asciinema.org/a/P5jaAo9kgZXKj2iSA1OqIdLAU)

## Installation

### Download
Get the latest binary [here](https://github.com/pdfcpu/pdfcpu/releases).


### Using Go Modules

```
$ git clone https://github.com/pdfcpu/pdfcpu
$ cd pdfcpu/cmd/pdfcpu
$ go install
$ pdfcpu version
```
or directly through Go install:

```
$ go install github.com/pdfcpu/pdfcpu/cmd/pdfcpu@latest
```

### Using Homebrew (macOS)
```
$ brew install pdfcpu
$ pdfcpu version
```

### Using DNF/YUM (Fedora)
```
$ sudo dnf install golang-github-pdfcpu
$ pdfcpu version
```

### Run in a Docker container

```shell
$ docker build -t pdfcpu .
# mount current host folder into container as /app to process files in the local host folder
$ docker run -it -v &quot;$(pwd)&quot;:/app pdfcpu validate a.pdf
```

## Contributing

### What

* Please [create](https://github.com/pdfcpu/pdfcpu/issues/new/choose) an issue if you find a bug or want to propose a change.
* Feature requests - always welcome!
* Bug fixes - always welcome!
* PRs - let&#039;s [discuss](https://github.com/pdfcpu/pdfcpu/discussions) first or [create](https://github.com/pdfcpu/pdfcpu/issues/new/choose) an issue.
* pdfcpu is stable but still *Alpha* and occasionally undergoing heavy changes.

### How

* The pdfcpu [discussion board](https://github.com/pdfcpu/pdfcpu/discussions) is open! Please engage in any form helpful for the community.
* If you want to report a bug please attach the *very verbose* (`pdfcpu cmd -vv ...`) output and ideally a test PDF that you can share.
* Always make sure your contribution is based on the latest commit.
* Please sign your commits.

### Reporting Crashes

Unfortunately crashes do happen :(
For the majority of the cases this is due to a diverse pool of PDF Writers out there and millions of PDF files using different versions waiting to be processed by pdfcpu. Sometimes these PDFs were written more than 20(!) years ago. Often there is an issue with validation - sometimes a bug in the parser. Many times even using relaxed validation with pdfcpu does not work. In these cases we need to extend relaxed validation and for this we are relying on your help. By reporting crashes you are helping to improve the stability of pdfcpu. If you happen to crash on any pdfcpu operation be it on the command line or in your Go backend these are the steps to report this:

Regardless of the pdfcpu operation, please start using the pdfcpu command line to validate your file:

``` sh
$ pdfcpu validate -v &amp;&gt; crash.log
```

 or to produce very verbose output

 ``` sh
 $ pdfcpu validate -vv &amp;&gt; crash.log
 ```

will produce what&#039;s needed to investigate a crash. Then open an issue and post `crash.log` or its contents. Ideally post a test PDF you can share to reproduce this. You can also email to hhrutter@gmail.com or if you prefer Slack you can get in touch on the Gopher slack #pdfcpu channel.

If processing your PDF with pdfcpu crashes during validation and can be opened by Adobe Reader and Mac Preview chances are we can extend relaxed validation and provide a fix. If the file in question cannot be opened by both Adobe Reader and Mac Preview we cannot help you!

## Contributors

Thanks üíö goes to these wonderful people:

&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt;
||||||||
| :---: | :---: | :---: | :---: | :---: |  :---: | :---: |
| [&lt;img src=&quot;https://avatars1.githubusercontent.com/u/11322155?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Horst Rutter&lt;/b&gt;&lt;/sub&gt;](https://github.com/hhrutter) | [&lt;img src=&quot;https://avatars0.githubusercontent.com/u/5140211?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;haldyr&lt;/b&gt;&lt;/sub&gt;](https://github.com/haldyr) | [&lt;img src=&quot;https://avatars3.githubusercontent.com/u/20608155?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Vyacheslav&lt;/b&gt;&lt;/sub&gt;](https://github.com/SimePel) | [&lt;img src=&quot;https://avatars1.githubusercontent.com/u/617459?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Erik Unger&lt;/b&gt;&lt;/sub&gt;](https://github.com/ungerik) | [&lt;img src=&quot;https://avatars1.githubusercontent.com/u/13079058?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Richard Wilkes&lt;/b&gt;&lt;/sub&gt;](https://github.com/richardwilkes) | [&lt;img src=&quot;https://avatars1.githubusercontent.com/u/16303386?s=400&amp;v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;minenok-tutu&lt;/b&gt;&lt;/sub&gt;](https://github.com/minenok-tutu) | [&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1965445?s=400&amp;v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Mateusz Burniak&lt;/b&gt;&lt;/sub&gt;](https://github.com/matbur) |
| [&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1175110?s=400&amp;v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Dmitry Harnitski&lt;/b&gt;&lt;/sub&gt;](https://github.com/dharnitski) | [&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1074083?s=400&amp;v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;ryarnyah&lt;/b&gt;&lt;/sub&gt;](https://github.com/ryarnyah) | [&lt;img src=&quot;https://avatars0.githubusercontent.com/u/13267?s=400&amp;v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Sam Giffney&lt;/b&gt;&lt;/sub&gt;](https://github.com/s01ipsist) | [&lt;img src=&quot;https://avatars3.githubusercontent.com/u/32948066?s=400&amp;v=4&quot; width=&quot;100px&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Carlos Eduardo Witte&lt;/b&gt;&lt;/sub&gt;](https://github.com/cewitte) | [&lt;img src=&quot;https://avatars1.githubusercontent.com/u/2374948?s=400&amp;u=a36e5f8da8dc1c102bc4d283f25e4c61cae7f985&amp;v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;minusworld&lt;/b&gt;&lt;/sub&gt;](https://github.com/minusworld) | [&lt;img src=&quot;https://avatars0.githubusercontent.com/u/18538487?s=400&amp;u=b9e628dfc60f672a887be2ed04a791195829943e&amp;v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Witold Konior&lt;/b&gt;&lt;/sub&gt;](https://github.com/jozuenoon) | [&lt;img src=&quot;https://avatars0.githubusercontent.com/u/630151?s=400&amp;v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;joonas.fi&lt;/b&gt;&lt;/sub&gt;](https://github.com/joonas-fi) |
| [&lt;img src=&quot;https://avatars3.githubusercontent.com/u/10349817?s=400&amp;u=93bacb23bd2909d5b6c5b644a8d4cdd947422ee1&amp;v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Henrik Reinst√§dtler&lt;/b&gt;&lt;/sub&gt;](https://github.com/henrixapp) | [&lt;img src=&quot;https://avatars1.githubusercontent.com/u/72016286?s=400&amp;v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;VMorozov-wh&lt;/b&gt;&lt;/sub&gt;](https://github.com/VMorozov-wh) | [&lt;img src=&quot;https://avatars0.githubusercontent.com/u/31929422?s=400&amp;v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Benoit KUGLER&lt;/b&gt;&lt;/sub&gt;](https://github.com/benoitkugler) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/704919?s=400&amp;v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Adam Greenhall&lt;/b&gt;&lt;/sub&gt;](https://github.com/adamgreenhall) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/5201812?s=400&amp;u=8a0a9fca4560be71d4923299ddebf877854eea54&amp;v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;moritamori&lt;/b&gt;&lt;/sub&gt;](https://github.com/moritamori) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/41904529?s=400&amp;u=044396494285ad806e86d1936c390b3071ce57c0&amp;v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;JanBaryla&lt;/b&gt;&lt;/sub&gt;](https://github.com/JanBaryla) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/43145244?s=400&amp;u=89a689f1a854ce0f57ae2a0333c82bfdc5723bb9&amp;v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;TheDiscordian&lt;/b&gt;&lt;/sub&gt;](https://github.com/TheDiscordian) |
| [&lt;img src=&quot;https://avatars.githubusercontent.com/u/15472552?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Rafael Garcia Argente&lt;/b&gt;&lt;/sub&gt;](https://github.com/rgargente) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/710057?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;truyet&lt;/b&gt;&lt;/sub&gt;](https://github.com/truyet) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/5031217?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Christian Nicola&lt;/b&gt;&lt;/sub&gt;](https://github.com/christiannicola) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/3233970?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Benjamin Krill&lt;/b&gt;&lt;/sub&gt;](https://github.com/kben) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/26521615?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Peter Wyatt&lt;/b&gt;&lt;/sub&gt;](https://github.com/petervwyatt) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/3142701?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Kroum Tzanev&lt;/b&gt;&lt;/sub&gt;](https://github.com/kpym) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/992878?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Stefan Huber&lt;/b&gt;&lt;/sub&gt;](https://github.com/signalwerk) |
| [&lt;img src=&quot;https://avatars.githubusercontent.com/u/59667587?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Juan Iscar&lt;/b&gt;&lt;/sub&gt;](https://github.com/juaismar) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/20135478?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Eng Zer Jun&lt;/b&gt;&lt;/sub&gt;](https://github.com/Juneezee) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/28459131?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Dmitry Ivanov&lt;/b&gt;&lt;/sub&gt;](https://github.com/hant0508)|[&lt;img src=&quot;https://avatars.githubusercontent.com/u/16866547?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Rene Kaufmann&lt;/b&gt;&lt;/sub&gt;](https://github.com/HeavyHorst)|[&lt;img src=&quot;https://avatars.githubusercontent.com/u/26827864?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Christian Heusel&lt;/b&gt;&lt;/sub&gt;](https://github.com/christian-heusel) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/305673?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Chris&lt;/b&gt;&lt;/sub&gt;](https://github.com/freshteapot) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/2892794?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Lukasz Czaplinski&lt;/b&gt;&lt;/sub&gt;](https://github.com/scoiatael) |
[&lt;img src=&quot;https://avatars.githubusercontent.com/u/49206635?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Joel Silva Schutz&lt;/b&gt;&lt;/sub&gt;](https://github.com/joelschutz) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/28219076?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;semvis123&lt;/b&gt;&lt;/sub&gt;](https://github.com/semvis123) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/8717479?v=4&quot;  width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;guangwu&lt;/b&gt;&lt;/sub&gt;](https://github.com/testwill) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/4014912?v=4&quot;  width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Yoshiki Nakagawa&lt;/b&gt;&lt;/sub&gt;](https://github.com/yyoshiki41) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/432860?v=4&quot;  width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Steve van Loben Sels&lt;/b&gt;&lt;/sub&gt;](https://github.com/stevevls) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/6083533?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Yaofu&lt;/b&gt;&lt;/sub&gt;](https://github.com/mygityf) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/15724278?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;vsenko&lt;/b&gt;&lt;/sub&gt;](https://github.com/vsenko) |
[&lt;img src=&quot;https://avatars.githubusercontent.com/u/16507?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Alexis Hildebrandt&lt;/b&gt;&lt;/sub&gt;](https://github.com/afh) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/1395040?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Sivukhin Nikita&lt;/b&gt;&lt;/sub&gt;](https://github.com/sivukhin)  | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/247730?v=4&quot;  width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Joachim Bauch&lt;/b&gt;&lt;/sub&gt;](https://github.com/fancycode) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/127291996?v=4&quot;  width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;kalimit&lt;/b&gt;&lt;/sub&gt;](https://github.com/kalimit) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/5080535?v=4&quot;  width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Andreas Erhard&lt;/b&gt;&lt;/sub&gt;](https://github.com/xelan) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/32378535?v=4&quot;  width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Matsumoto Toshi&lt;/b&gt;&lt;/sub&gt;](https://github.com/toshi1127) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/440634?v=4&quot;  width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Carl Wilson&lt;/b&gt;&lt;/sub&gt;](https://github.com/carlwilson) |
[&lt;img src=&quot;https://avatars.githubusercontent.com/u/9918222?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;LNAhri&lt;/b&gt;&lt;/sub&gt;](https://github.com/LNAhri) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/142796877?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;vishal&lt;/b&gt;&lt;/sub&gt;](https://github.com/vishal-at) | [&lt;img src=&quot;https://avatars.githubusercontent.com/u/18169566?v=4&quot; width=&quot;100px&quot;/&gt;&lt;br/&gt;&lt;sub&gt;&lt;b&gt;Andreas Deininger&lt;/b&gt;&lt;/sub&gt;](https://github.com/deining) |  | | | 











&lt;!-- ALL-CONTRIBUTORS-LIST:END - Do not remove or modify this section --&gt;

## Code of Conduct

Please note that this project is released with a Contributor [Code of Conduct](CODE_OF_CONDUCT.md). By participating in this project you agree to abide by its terms.

## Disclaimer

Usage of pdfcpu assumes you know about and respect all copyrights of any PDF content you may be processing. This applies to the PDF files as such, their content and in particular all embedded resources like font files or images. Credit goes to [Renee French](https://instagram.com/reneefrench) for creating our beloved Gopher.

## License

Apache-2.0

</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[ltaoo/wx_channels_download]]></title>
            <link>https://github.com/ltaoo/wx_channels_download</link>
            <guid>https://github.com/ltaoo/wx_channels_download</guid>
            <pubDate>Fri, 16 May 2025 00:05:15 GMT</pubDate>
            <description><![CDATA[ÂæÆ‰ø°ËßÜÈ¢ëÂè∑‰∏ãËΩΩÂô®]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ltaoo/wx_channels_download">ltaoo/wx_channels_download</a></h1>
            <p>ÂæÆ‰ø°ËßÜÈ¢ëÂè∑‰∏ãËΩΩÂô®</p>
            <p>Language: Go</p>
            <p>Stars: 1,763</p>
            <p>Forks: 257</p>
            <p>Stars today: 35 stars today</p>
            <h2>README</h2><pre># ÂæÆ‰ø°ËßÜÈ¢ëÂè∑‰∏ãËΩΩÂô®

‰ΩìÁßØÂ∞è„ÄÅ‰ΩøÁî®ÁÆÄÂçï„ÄÅÊîØÊåÅ macOS Âíå Windows Á≥ªÁªü„ÄÇ

## 250514 Êõ¥Êñ∞

1„ÄÅ‰øÆÂ§çÊó†Ê≥ï‰∏ãËΩΩÂõæÁâáËßÜÈ¢ëÁöÑÈóÆÈ¢ò

## 25042501 Êõ¥Êñ∞

1„ÄÅ‰øÆÂ§ç‰∫Ü‰∏ãËΩΩÁöÑËßÜÈ¢ëÊó†Ê≥ïÊí≠ÊîæÁöÑÈóÆÈ¢ò

&lt;details&gt;&lt;summary&gt;ÁÇπÂáªÊü•ÁúãÊõ¥Â§öÊõ¥Êñ∞ÂÜÖÂÆπ&lt;/summary&gt;

## 250425 Êõ¥Êñ∞

1„ÄÅ‰øÆÂ§ç‰∫ÜÊó†Ê≥ï‰∏ãËΩΩËßÜÈ¢ëÁöÑÈóÆÈ¢ò

## 250424 Êõ¥Êñ∞

1„ÄÅ‰øÆÂ§ç‰∫Ü ‰∏ãËΩΩÊåâÈíÆÊ†∑Âºè‰∏ç‰∏ÄËá¥ÁöÑÈóÆÈ¢ò
&lt;br/&gt;
2„ÄÅ‰øÆÂ§ç‰∫Ü Êõ¥Â§öÊåâÈíÆÁÇπÂáª‰∏çÊòæÁ§∫Êõ¥Â§öËèúÂçïÁöÑÈóÆÈ¢ò
&lt;br/&gt;
3„ÄÅÂ¢ûÂä†‰∫Ü windows ÂêØÂä®Â§±Ë¥•Êó∂ÊèêÁ§∫ÊòØÂê¶‰ª•ÁÆ°ÁêÜÂëòË∫´‰ªΩËøêË°å


## 250215 Êõ¥Êñ∞

1„ÄÅÂú®ÊéßÂà∂Âè∞ÊòæÁ§∫‰∏ãËΩΩËøõÂ∫¶ÔºåÂΩìËé∑Âèñ‰∏çÂà∞ËøõÂ∫¶Êó∂ÊòæÁ§∫Â∑≤‰∏ãËΩΩÁöÑÂ≠óËäÇÊï∞
&lt;br/&gt;
2„ÄÅÂú®„ÄåÊõ¥Â§ö„ÄçËèúÂçï‰∏≠Â¢ûÂä†Â∞ÅÈù¢ÂõæÁâá‰∏ãËΩΩ
&lt;br/&gt;
3„ÄÅËá™Âä®Ê£ÄÊµãÂΩìÂâçÁΩëÁªúËÆæÂ§áÂπ∂‰ª£ÁêÜ
&lt;br/&gt;
4„ÄÅÊîØÊåÅÂëΩ‰ª§Ë°åÂèÇÊï∞ÊåáÂÆöË¶Å‰ª£ÁêÜÁöÑÁΩëÁªúËÆæÂ§áÂíåÁ®ãÂ∫è‰ΩøÁî®ÁöÑÁ´ØÂè£Âè∑

```bash
./wx_video_download_xxx --dev=Wi-Fi --port=1080
```

&gt; ‰∏ÄËà¨ÊÉÖÂÜµ‰∏ãÊó†ÈúÄÊâãÂä®ÊåáÂÆöËÆæÂ§á‰∏éÁ´ØÂè£Âè∑ÔºåÁõ¥Êé• ./wx_video_download_xxx Âç≥ÂèØ

## 241216 Êõ¥Êñ∞

1„ÄÅÊîØÊåÅ‰∏ãËΩΩÁõ¥Êí≠ÂõûÊîæ
&lt;br/&gt;
2„ÄÅÊîØÊåÅ macOS Á≥ªÁªü
&lt;br/&gt;
Âú®ÂæÆ‰ø° Version 3.8.9 (28564) ÊµãËØïÂèØÁî®

macOS ‰∏ã‰ΩøÁî®ËØ¥Êòé

```bash
chmod +x ./wx_video_download_drawin_xxx
sudo ./wx_video_download_drawin_xxx
```

Ê≠§Êó∂‰ºöÊèêÁ§∫Êñá‰ª∂‰∏çËÉΩÊâìÂºÄÔºåÈúÄË¶ÅÂà∞Á≥ªÁªüËÆæÁΩÆ‰∏≠ÂÖÅËÆ∏ÔºåÁÑ∂ÂêéÈáçÊñ∞ÊâßË°å `sudo ./wx_video_download_drawin_xxx`„ÄÇ
&lt;br/&gt;

Âú®ÂÆâË£ÖËØÅ‰π¶ÁöÑËøáÁ®ã‰∏≠‰ºöÁî≥ËØ∑ÊùÉÈôêÔºåÂêåÊÑèÂç≥ÂèØ„ÄÇÂêéÁª≠ÊâìÂºÄÊó†ÈúÄ‰ΩøÁî® `sudo`ÔºåÂè™ÈúÄË¶ÅÂèåÂáªËøêË°å
&lt;br/&gt;

ÂÖ≥Èó≠ `macOS` ÁªàÁ´ØÊó∂ËØ∑‰ΩøÁî® `Command + c` ÁöÑÊñπÂºèÔºåÂê¶ÂàôÂèØËÉΩ‰ºöÂá∫Áé∞Á≥ªÁªü‰ª£ÁêÜÊú™ÂèñÊ∂àÔºåÂØºËá¥ÁΩëÁªúÊó†Ê≥ïËÆøÈóÆÁöÑÈóÆÈ¢ò
&lt;br/&gt;

&gt; ÂΩìÂá∫Áé∞ÁΩëÁªúÊó†Ê≥ïËÆøÈóÆÊó∂ËØ∑Ê£ÄÊü•Á≥ªÁªü‰ª£ÁêÜÂπ∂ÊâãÂä®ÂèñÊ∂àÂç≥ÂèØ„ÄÇ

&lt;br/&gt;


## 241106 Êõ¥Êñ∞

1„ÄÅ‰øÆÂ§ç‰∫Ü ÈùûÈ¶ñÊ¨°ÊâìÂºÄÁöÑËßÜÈ¢ëÔºå‰∏ãËΩΩ‰∏ãÊù•ÈÉΩÊó†Ê≥ïÊí≠ÊîæÁöÑÈóÆÈ¢ò

Áé∞Âú®ÁÇπÂáªÈ°µÈù¢‰∏ä„ÄåÊõ¥Â§öÊé®Ëçê„ÄçËßÜÈ¢ëÔºå‰∏ãËΩΩ‰∏ãÊù•ÁöÑËßÜÈ¢ëÂèØ‰ª•Ê≠£Â∏∏ÊâìÂºÄÊí≠Êîæ‰∫Ü„ÄÇ
&lt;br&gt;
ÂΩìÂá∫Áé∞„ÄåËß£ÂØÜÂ§±Ë¥•ÔºåÂÅúÊ≠¢‰∏ãËΩΩ„ÄçÁöÑÊèêÁ§∫ÔºåÂÖ≥Èó≠ÂÖ®ÈÉ®ËßÜÈ¢ëÈ°µÈù¢„ÄÅÁ™óÂè£„ÄÇÈáçÊñ∞ÊâìÂºÄÔºåÂ∞±ÂèØ‰ª•‰∏ãËΩΩ„ÄÇ

## 241104 Êõ¥Êñ∞

1„ÄÅ ÊîØÊåÅ‰∏ãËΩΩ‰∏çÂêåË¥®ÈáèÁöÑËßÜÈ¢ë
&lt;br&gt;
2„ÄÅ ‰øÆÂ§ç‰∫Ü‰∏ãËΩΩÁöÑËßÜÈ¢ëÊó†Ê≥ïÊãñÂä®ËøõÂ∫¶Êù°ÁöÑÈóÆÈ¢ò
&lt;br&gt;
3„ÄÅ ‰øÆÂ§ç‰∫ÜÈïøËßÜÈ¢ëÂÜÖÂÆπËøõÂ∫¶Êú™Âä†ËΩΩÂ∞±‰∏ãËΩΩÔºåÂØºËá¥ËßÜÈ¢ëÊó†Ê≥ïÊí≠ÊîæÊàñ‰∏çÂÆåÊï¥ÁöÑÈóÆÈ¢ò
&lt;br&gt;
4„ÄÅ ‰øÆÂ§ç‰∫ÜÊüê‰∫õËßÜÈ¢ëËØØÂà§Êñ≠‰∏∫ÂõæÁâáÂØºËá¥Êó†Ê≥ï‰∏ãËΩΩÁöÑÈóÆÈ¢ò
&lt;br&gt;
5„ÄÅ ‰øÆÂ§ç‰∫ÜÁõ¥Êí≠Èó¥‰∏ÄÁõ¥Âä†ËΩΩ‰∏≠ÁöÑÈóÆÈ¢ò

![‰∏ãËΩΩÊåâÈíÆ2](assets/screenshot13.png)

ÂÖ≥‰∫é‰∏çÂêåË¥®ÈáèÁöÑËßÜÈ¢ëÔºåËØ¶ÊÉÖËßÅ‰∏ãÊñπ‰ΩøÁî®ËØ¥Êòé„ÄÇ

## 241102 Êõ¥Êñ∞

Âú®„ÄåÊõ¥Â§ö„Äç‰∏ãÊãâËèúÂçïÂ¢ûÂä†„Äå‰∏ãËΩΩËßÜÈ¢ë„ÄçÊåâÈíÆÔºåÂÖºÂÆπ‰∏çÂêåËØ¶ÊÉÖÈ°µÂ∏ÉÂ±Ä‰∏çÂêåÂØºËá¥Ê≤°Êúâ‰∏ãËΩΩÊåâÈíÆÁöÑÈóÆÈ¢ò„ÄÇ

![‰∏ãËΩΩÊåâÈíÆ2](assets/screenshot10.png)

## 241101 Êõ¥Êñ∞

Áé∞Âú®Êó†ÈúÄÊâãÂä®‰∏ãËΩΩËØÅ‰π¶Âπ∂ÂÆâË£Ö‰∫Ü„ÄÇ
&lt;br&gt;
‰øÆÂ§ç‰∫Ü‰∏ãËΩΩÊó∂ÊèêÁ§∫Êâæ‰∏çÂà∞ `lib/jszip.min.js` ÁöÑÈóÆÈ¢ò„ÄÇ

## 241031 Êõ¥Êñ∞

ÂèàÈÅáÂà∞‰πãÂâçÊó†Ê≥ïÂú®È°µÈù¢‰∏ãËΩΩÁöÑÈóÆÈ¢òÔºåËøôÊ¨°ÊîπÊàê‰∫Ü‰∏ãËΩΩÂéãÁº©ÂåÖÔºåËßÜÈ¢ëÂú®ÂéãÁº©ÂåÖÂÜÖÁöÑÂΩ¢Âºè„ÄÇ
ÁõÆÂâçÊòØÂèØË°åÁöÑÔºå‰ΩÜÊó†Ê≥ï‰øùËØÅ‰πãÂêé‰ªçÁÑ∂ÂèØË°å„ÄÇ

Âª∫ËÆÆ‰ΩøÁî® [WechatVideoSniffer2.0](https://github.com/kanadeblisst00/WechatVideoSniffer2.0) Á®≥ÂÆöÊÄßÊõ¥È´ò„ÄÇ

## 241030 Êõ¥Êñ∞

ÂΩìËßÜÈ¢ëÂè∑ÂÜÖÂÆπÊòØÂ§öÂº†ÂõæÁâáÊó∂Ôºå‰πü‰ºöÂá∫Áé∞‰∏ãËΩΩÊåâÈíÆ„ÄÇÁÇπÂáªÂ∞Ü‰ºö‰∏ãËΩΩ‰∏Ä‰∏™ÂåÖÂê´‰∫ÜÂÖ®ÈÉ®ÂõæÁâáÁöÑÂéãÁº©ÂåÖ„ÄÇ

## 241022 Êõ¥Êñ∞

ÂΩìËßÜÈ¢ëË¢´Âà†Èô§Êó∂Ê≤°ÊúâÊ≠£Á°ÆÂú∞ÊòæÁ§∫„ÄåË¢´Âà†Èô§„ÄçËÄåÊòØ‰∏ÄÁõ¥Â§Ñ‰∫éÂä†ËΩΩ‰∏≠Áä∂ÊÄÅ„ÄÇ
‰∏ãËΩΩÊåâÈíÆ‰øÆÊîπÊàêÂíåÂÖ∂‰ªñÊìç‰ΩúÊåâÈíÆÁõ∏ÂêåÁöÑÊ†∑Âºè„ÄÇ

## 241016 Êõ¥Êñ∞

Ââç‰∏Ä‰∏™ÁâàÊú¨Âèà‰∏ãËΩΩ‰∏ç‰∫ÜÔºåÊîπÂõûÂú®È°µÈù¢Áõ¥Êé•‰∏ãËΩΩÂèàÊ≠£Â∏∏‰∫ÜÔºåÊòØÂíåÂæÆ‰ø°ÂÆ¢Êà∑Á´ØÁâàÊú¨ÊúâÂÖ≥ÂêóÔºåÂØπËøôÂùó‰∏ç‰∫ÜËß£„ÄÇ
Â¶ÇÊûú 241016 Ëøô‰∏™ÁâàÊú¨Áî®‰∏ç‰∫ÜÔºåÂèØ‰ª•ËØïËØïÂÖ∂‰ªñÁâàÊú¨„ÄÇ
ÊàëÁõÆÂâçÂæÆ‰ø°ÂÆ¢Êà∑Á´ØÁâàÊú¨ÊòØ `Weixin 3.9.12.17`ÔºåÂèØ‰ª•Ê≠£Â∏∏‰∏ãËΩΩÁöÑ„ÄÇ

## 241011 Êõ¥Êñ∞

Â∫îËØ•ÊòØËßÜÈ¢ëÂè∑ÂèàÊîπÁâà‰∫ÜÔºå‰∏çËÉΩÁõ¥Êé•Âú®È°µÈù¢‰∏ãËΩΩ‰∫Ü„ÄÇÊîπÊàêÁÇπÂáª‰∏ãËΩΩÊåâÈíÆÂ§çÂà∂ËßÜÈ¢ëÈìæÊé•Âà∞Á≤òË¥¥ÊùøÔºåÁÑ∂ÂêéÂà∞Ë∞∑Ê≠åÊàñÂÖ∂‰ªñÊµèËßàÂô®ÊâìÂºÄ‰∏ãËΩΩ„ÄÇ
Âè¶Â§ñÊµãËØï‰∫ÜÂæàÂ§öËßÜÈ¢ëÈÉΩÂèØ‰ª•Áõ¥Êé•‰∏ãËΩΩÔºåÊ≤°ÊúâÂä†ÂØÜ‰∫Ü„ÄÇÊâÄ‰ª•Â¶ÇÊûúÊúâÂä†ÂØÜËßÜÈ¢ëÔºåÊñ∞ÁâàÊú¨ÂèØËÉΩ‰ºö‰∏ãËΩΩÂ§±Ë¥•„ÄÇ

&gt; Âú®È°µÈù¢Áõ¥Êé•‰∏ãËΩΩÔºåÁêÜËÆ∫‰∏äËøòÊòØËÉΩÂÆûÁé∞ÔºåÂÆûÁé∞‰∏äË¶ÅÈ∫ªÁÉ¶ËÆ∏Â§öÔºåÂêéÈù¢ÂÜçÁ†îÁ©∂„ÄÇ

&lt;/details&gt;

## ‰ΩøÁî®ËØ¥Êòé

‰∏ãËΩΩ[‰∫åËøõÂà∂Êñá‰ª∂](https://github.com/ltaoo/wx_channels_download/releases)Ôºå**‰ª•ÁÆ°ÁêÜÂëòË∫´‰ªΩËøêË°å**ÔºåÈ¶ñÊ¨°ÊâìÂºÄ‰ºöËá™Âä®ÂÆâË£ÖËØÅ‰π¶ÔºåÁÑ∂ÂêéÂêØÂä®ÊúçÂä°„ÄÇ

ÂΩìÁªàÁ´ØÊèêÁ§∫„ÄåÊúçÂä°Â∑≤Ê≠£Á°ÆÂêØÂä®„ÄçÂ∞±ËØ¥ÊòéÂèØ‰ª•‰ΩøÁî®‰∫Ü„ÄÇ

![Ê≠£Â∏∏‰ΩøÁî®](assets/screenshot8.png)

&gt; Â∑≤ÂÆâË£ÖËØÅ‰π¶‰ºöË∑≥ËøáÂÆâË£ÖËØÅ‰π¶Ê≠•È™§„ÄÇ

ÊâìÂºÄÂæÆ‰ø° PC Á´ØÔºåÁÇπÂáªÈúÄË¶Å‰∏ãËΩΩÁöÑËßÜÈ¢ëÔºåÂú®ËßÜÈ¢ë‰∏ãÊñπÁöÑÊìç‰ΩúÊåâÈíÆ‰∏ÄÊ†èÔºå‰ºöÂ§öÂá∫‰∏Ä‰∏™‰∏ãËΩΩÊåâÈíÆÔºåÂ¶Ç‰∏ãÊâÄÁ§∫

![ËßÜÈ¢ë‰∏ãËΩΩÊåâÈíÆ](assets/screenshot1.png)

&gt; Â¶ÇÊûúÊ≤°ÊúâÔºåÂèØ‰ª•ÁúãÁúã„ÄåÊõ¥Â§ö„ÄçËøôÈáåÊòØÂê¶Êúâ„Äå‰∏ãËΩΩËßÜÈ¢ë„ÄçÊåâÈíÆ„ÄÇ&lt;br&gt; &gt; ![‰∏ãËΩΩÊåâÈíÆ2](assets/screenshot10.png)

Á≠âÂæÖËßÜÈ¢ëÂºÄÂßãÊí≠ÊîæÔºåÁÑ∂ÂêéÊöÇÂÅúËßÜÈ¢ëÔºåÁÇπÂáª‰∏ãËΩΩÊåâÊâ≠Âç≥ÂèØ‰∏ãËΩΩËßÜÈ¢ë„ÄÇ‰∏ãËΩΩÊàêÂäüÂêéÔºå‰ºöÂú®‰∏äÊñπÊòæÁ§∫Â∑≤‰∏ãËΩΩÁöÑÊñá‰ª∂Ôºå‰∏ãËΩΩÊñá‰ª∂ÂêçÊúÄÂêéÈù¢‰ºöÊ†áÂøóËØ•ËßÜÈ¢ëË¥®Èáè„ÄÇ

![ËßÜÈ¢ë‰∏ãËΩΩÊàêÂäü](assets/screenshot2.png)

ÈªòËÆ§‰ºö‰∏ãËΩΩ‰∏ãÊãâËèúÂçï‰∏≠Á¨¨‰∏Ä‰∏™Ë¥®ÈáèËßÜÈ¢ë„ÄÇÁÇπÂºÄÊõ¥Â§öÔºåÂèØ‰ª•‰∏ãËΩΩÂÖ∂‰ªñË¥®ÈáèÁöÑËßÜÈ¢ëÔºåÂåÖÊã¨ÂéüÂßãËßÜÈ¢ë„ÄÇ

![‰∏ãËΩΩ‰∏çÂêåË¥®ÈáèÁöÑËßÜÈ¢ë](assets/screenshot13.png)
&lt;br&gt;

‰∏çÂêåËßÜÈ¢ëËøôÈáåÊòæÁ§∫ÁöÑÈÄâÈ°πÊòØ‰∏çÂêåÁöÑÔºåÊ≤°ÊúâÊâæÂà∞ÂØπ xWT111 ÂÖ∑‰ΩìÁöÑËØ¥ÊòéÔºåÂ±û‰∫é‰ªÄ‰πàÂàÜËæ®Áéá„ÄÅÂ∞∫ÂØ∏Â§öÂ§ßÁ≠âÁ≠â„ÄÇ
&lt;br&gt;
ÁªèËøáÊµãËØïÔºåÂ¶ÇÊûúÂéüÂßãËßÜÈ¢ëÊúâ 104MBÔºåËøôÈáåÂ∞∫ÂØ∏ÊúÄÂ§ßÁöÑÊòØ xWT111 ‰∏∫ 17MBÔºåÊúÄÂ∞èÁöÑÊòØ xWT98 ‰∏∫ 7MB„ÄÇ

![‰∏çÂêåË¥®ÈáèËßÜÈ¢ëÂ∞∫ÂØ∏ÁªüËÆ°](assets/screenshot14.png)

‰ªÖ‰æõÂèÇËÄÉ„ÄÇ

## Â∏∏ËßÅÈóÆÈ¢ò

1„ÄÅÊúçÂä°ÂêØÂä®‰∫ÜÔºåÊâìÂºÄËßÜÈ¢ëËØ¶ÊÉÖÂêé‰∏ÄÁõ¥Âú®Âä†ËΩΩÔºåËÄå‰∏îÁªàÁ´ØÊ≤°ÊúâÊó•Âøó‰ø°ÊÅØ„ÄÇ
&lt;br&gt;
Â∞ùËØïÂú®ÁªàÁ´Ø `Ctrl+C`ÔºåÊåâ‰∏ÄÊ¨°Âç≥ÂèØ„ÄÇ

2„ÄÅËß£ÂØÜÂ§±Ë¥•ÔºåÂÅúÊ≠¢‰∏ãËΩΩ
&lt;br&gt;
ÂÖ≥Èó≠ÂÖ®ÈÉ®ËßÜÈ¢ëÈ°µÈù¢„ÄÅÁ™óÂè£„ÄÇÈáçÊñ∞ÊâìÂºÄÔºåÂ∞±ÂèØ‰ª•‰∏ãËΩΩ„ÄÇ

## ÂºÄÂèëËØ¥Êòé

ÂÖà‰ª• ÁÆ°ÁêÜÂëòË∫´‰ªΩ ÂêØÂä®ÁªàÁ´ØÔºåÁÑ∂Âêé `go run main.go` Âç≥ÂèØ„ÄÇ

## ÊâìÂåÖ

```bash
go build -o wx_video_download.exe main.go
```

ÊâìÂåÖÂêéÂèØ‰ª•‰ΩøÁî® `upx` ÂéãÁº©Ôºå‰ΩìÁßØÂèØ‰ª•‰ªé 17MB ÂéãÁº©Âà∞ 5MB„ÄÇ

## ÂÖ∂‰ªñ

Ê≠§Á®ãÂ∫èÂ§ßÈÉ®ÂàÜÂèÇËÄÉËá™‰ª•‰∏ãÈ°πÁõÆ‰ª£Á†Å
&lt;br&gt;
https://github.com/kanadeblisst00/WechatVideoSniffer2.0

Ê≠§Á®ãÂ∫èÁöÑÊ†∏ÂøÉÂÆûÁé∞‰æùËµñ‰ª•‰∏ãÂ∫ì
&lt;br&gt;
https://github.com/qtgolang/SunnyNet

## ÊàëÁöÑËµûËµèÁ†Å

Â¶ÇÊûúÊàëÁöÑÈ°πÁõÆÂØπ‰Ω†ÊúâÊâÄÂ∏ÆÂä©ÔºåÂèØ‰ª•ËØ∑ÊàëÂñùÊùØÂíñÂï° ‚òïÔ∏è

[![Sponsors](https://sponsorkit-iota.vercel.app/api/sponsors)](https://sponsorkit-iota.vercel.app/api/sponsors)
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[GoogleCloudPlatform/microservices-demo]]></title>
            <link>https://github.com/GoogleCloudPlatform/microservices-demo</link>
            <guid>https://github.com/GoogleCloudPlatform/microservices-demo</guid>
            <pubDate>Fri, 16 May 2025 00:05:14 GMT</pubDate>
            <description><![CDATA[Sample cloud-first application with 10 microservices showcasing Kubernetes, Istio, and gRPC.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/GoogleCloudPlatform/microservices-demo">GoogleCloudPlatform/microservices-demo</a></h1>
            <p>Sample cloud-first application with 10 microservices showcasing Kubernetes, Istio, and gRPC.</p>
            <p>Language: Go</p>
            <p>Stars: 17,992</p>
            <p>Forks: 8,079</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre>&lt;!-- &lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/src/frontend/static/icons/Hipster_HeroLogoMaroon.svg&quot; width=&quot;300&quot; alt=&quot;Online Boutique&quot; /&gt;
&lt;/p&gt; --&gt;
![Continuous Integration](https://github.com/GoogleCloudPlatform/microservices-demo/workflows/Continuous%20Integration%20-%20Main/Release/badge.svg)

**Online Boutique** is a cloud-first microservices demo application.  The application is a
web-based e-commerce app where users can browse items, add them to the cart, and purchase them.

Google uses this application to demonstrate how developers can modernize enterprise applications using Google Cloud products, including: [Google Kubernetes Engine (GKE)](https://cloud.google.com/kubernetes-engine), [Cloud Service Mesh (CSM)](https://cloud.google.com/service-mesh), [gRPC](https://grpc.io/), [Cloud Operations](https://cloud.google.com/products/operations), [Spanner](https://cloud.google.com/spanner), [Memorystore](https://cloud.google.com/memorystore), [AlloyDB](https://cloud.google.com/alloydb), and [Gemini](https://ai.google.dev/). This application works on any Kubernetes cluster.

If you‚Äôre using this demo, please **‚òÖStar** this repository to show your interest!

**Note to Googlers:** Please fill out the form at [go/microservices-demo](http://go/microservices-demo).

## Architecture

**Online Boutique** is composed of 11 microservices written in different
languages that talk to each other over gRPC.

[![Architecture of
microservices](/docs/img/architecture-diagram.png)](/docs/img/architecture-diagram.png)

Find **Protocol Buffers Descriptions** at the [`./protos` directory](/protos).

| Service                                              | Language      | Description                                                                                                                       |
| ---------------------------------------------------- | ------------- | --------------------------------------------------------------------------------------------------------------------------------- |
| [frontend](/src/frontend)                           | Go            | Exposes an HTTP server to serve the website. Does not require signup/login and generates session IDs for all users automatically. |
| [cartservice](/src/cartservice)                     | C#            | Stores the items in the user&#039;s shopping cart in Redis and retrieves it.                                                           |
| [productcatalogservice](/src/productcatalogservice) | Go            | Provides the list of products from a JSON file and ability to search products and get individual products.                        |
| [currencyservice](/src/currencyservice)             | Node.js       | Converts one money amount to another currency. Uses real values fetched from European Central Bank. It&#039;s the highest QPS service. |
| [paymentservice](/src/paymentservice)               | Node.js       | Charges the given credit card info (mock) with the given amount and returns a transaction ID.                                     |
| [shippingservice](/src/shippingservice)             | Go            | Gives shipping cost estimates based on the shopping cart. Ships items to the given address (mock)                                 |
| [emailservice](/src/emailservice)                   | Python        | Sends users an order confirmation email (mock).                                                                                   |
| [checkoutservice](/src/checkoutservice)             | Go            | Retrieves user cart, prepares order and orchestrates the payment, shipping and the email notification.                            |
| [recommendationservice](/src/recommendationservice) | Python        | Recommends other products based on what&#039;s given in the cart.                                                                      |
| [adservice](/src/adservice)                         | Java          | Provides text ads based on given context words.                                                                                   |
| [loadgenerator](/src/loadgenerator)                 | Python/Locust | Continuously sends requests imitating realistic user shopping flows to the frontend.                                              |

## Screenshots

| Home Page                                                                                                         | Checkout Screen                                                                                                    |
| ----------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------ |
| [![Screenshot of store homepage](/docs/img/online-boutique-frontend-1.png)](/docs/img/online-boutique-frontend-1.png) | [![Screenshot of checkout screen](/docs/img/online-boutique-frontend-2.png)](/docs/img/online-boutique-frontend-2.png) |

## Quickstart (GKE)

1. Ensure you have the following requirements:
   - [Google Cloud project](https://cloud.google.com/resource-manager/docs/creating-managing-projects#creating_a_project).
   - Shell environment with `gcloud`, `git`, and `kubectl`.

2. Clone the latest major version.

   ```sh
   git clone --depth 1 --branch v0 https://github.com/GoogleCloudPlatform/microservices-demo.git
   cd microservices-demo/
   ```

   The `--depth 1` argument skips downloading git history.

3. Set the Google Cloud project and region and ensure the Google Kubernetes Engine API is enabled.

   ```sh
   export PROJECT_ID=&lt;PROJECT_ID&gt;
   export REGION=us-central1
   gcloud services enable container.googleapis.com \
     --project=${PROJECT_ID}
   ```

   Substitute `&lt;PROJECT_ID&gt;` with the ID of your Google Cloud project.

4. Create a GKE cluster and get the credentials for it.

   ```sh
   gcloud container clusters create-auto online-boutique \
     --project=${PROJECT_ID} --region=${REGION}
   ```

   Creating the cluster may take a few minutes.

5. Deploy Online Boutique to the cluster.

   ```sh
   kubectl apply -f ./release/kubernetes-manifests.yaml
   ```

6. Wait for the pods to be ready.

   ```sh
   kubectl get pods
   ```

   After a few minutes, you should see the Pods in a `Running` state:

   ```
   NAME                                     READY   STATUS    RESTARTS   AGE
   adservice-76bdd69666-ckc5j               1/1     Running   0          2m58s
   cartservice-66d497c6b7-dp5jr             1/1     Running   0          2m59s
   checkoutservice-666c784bd6-4jd22         1/1     Running   0          3m1s
   currencyservice-5d5d496984-4jmd7         1/1     Running   0          2m59s
   emailservice-667457d9d6-75jcq            1/1     Running   0          3m2s
   frontend-6b8d69b9fb-wjqdg                1/1     Running   0          3m1s
   loadgenerator-665b5cd444-gwqdq           1/1     Running   0          3m
   paymentservice-68596d6dd6-bf6bv          1/1     Running   0          3m
   productcatalogservice-557d474574-888kr   1/1     Running   0          3m
   recommendationservice-69c56b74d4-7z8r5   1/1     Running   0          3m1s
   redis-cart-5f59546cdd-5jnqf              1/1     Running   0          2m58s
   shippingservice-6ccc89f8fd-v686r         1/1     Running   0          2m58s
   ```

7. Access the web frontend in a browser using the frontend&#039;s external IP.

   ```sh
   kubectl get service frontend-external | awk &#039;{print $4}&#039;
   ```

   Visit `http://EXTERNAL_IP` in a web browser to access your instance of Online Boutique.

8. Congrats! You&#039;ve deployed the default Online Boutique. To deploy a different variation of Online Boutique (e.g., with Google Cloud Operations tracing, Istio, etc.), see [Deploy Online Boutique variations with Kustomize](#deploy-online-boutique-variations-with-kustomize).

9. Once you are done with it, delete the GKE cluster.

   ```sh
   gcloud container clusters delete online-boutique \
     --project=${PROJECT_ID} --region=${REGION}
   ```

   Deleting the cluster may take a few minutes.

## Additional deployment options

- **Terraform**: [See these instructions](/terraform) to learn how to deploy Online Boutique using [Terraform](https://www.terraform.io/intro).
- **Istio / Cloud Service Mesh**: [See these instructions](/kustomize/components/service-mesh-istio/README.md) to deploy Online Boutique alongside an Istio-backed service mesh.
- **Non-GKE clusters (Minikube, Kind, etc)**: See the [Development guide](/docs/development-guide.md) to learn how you can deploy Online Boutique on non-GKE clusters.
- **AI assistant using Gemini**: [See these instructions](/kustomize/components/shopping-assistant/README.md) to deploy a Gemini-powered AI assistant that suggests products to purchase based on an image.
- **And more**: The [`/kustomize` directory](/kustomize) contains instructions for customizing the deployment of Online Boutique with other variations.

## Documentation

- [Development](/docs/development-guide.md) to learn how to run and develop this app locally.

## Demos featuring Online Boutique

- [Platform Engineering in action: Deploy the Online Boutique sample apps with Score and Humanitec](https://medium.com/p/d99101001e69)
- [The new Kubernetes Gateway API with Istio and Anthos Service Mesh (ASM)](https://medium.com/p/9d64c7009cd)
- [Use Azure Redis Cache with the Online Boutique sample on AKS](https://medium.com/p/981bd98b53f8)
- [Sail Sharp, 8 tips to optimize and secure your .NET containers for Kubernetes](https://medium.com/p/c68ba253844a)
- [Deploy multi-region application with Anthos and Google cloud Spanner](https://medium.com/google-cloud/a2ea3493ed0)
- [Use Google Cloud Memorystore (Redis) with the Online Boutique sample on GKE](https://medium.com/p/82f7879a900d)
- [Use Helm to simplify the deployment of Online Boutique, with a Service Mesh, GitOps, and more!](https://medium.com/p/246119e46d53)
- [How to reduce microservices complexity with Apigee and Anthos Service Mesh](https://cloud.google.com/blog/products/application-modernization/api-management-and-service-mesh-go-together)
- [gRPC health probes with Kubernetes 1.24+](https://medium.com/p/b5bd26253a4c)
- [Use Google Cloud Spanner with the Online Boutique sample](https://medium.com/p/f7248e077339)
- [Seamlessly encrypt traffic from any apps in your Mesh to Memorystore (redis)](https://medium.com/google-cloud/64b71969318d)
- [Strengthen your app&#039;s security with Cloud Service Mesh and Anthos Config Management](https://cloud.google.com/service-mesh/docs/strengthen-app-security)
- [From edge to mesh: Exposing service mesh applications through GKE Ingress](https://cloud.google.com/architecture/exposing-service-mesh-apps-through-gke-ingress)
- [Take the first step toward SRE with Cloud Operations Sandbox](https://cloud.google.com/blog/products/operations/on-the-road-to-sre-with-cloud-operations-sandbox)
- [Deploying the Online Boutique sample application on Cloud Service Mesh](https://cloud.google.com/service-mesh/docs/onlineboutique-install-kpt)
- [Anthos Service Mesh Workshop: Lab Guide](https://codelabs.developers.google.com/codelabs/anthos-service-mesh-workshop)
- [KubeCon EU 2019 - Reinventing Networking: A Deep Dive into Istio&#039;s Multicluster Gateways - Steve Dake, Independent](https://youtu.be/-t2BfT59zJA?t=982)
- Google Cloud Next&#039;18 SF
  - [Day 1 Keynote](https://youtu.be/vJ9OaAqfxo4?t=2416) showing GKE On-Prem
  - [Day 3 Keynote](https://youtu.be/JQPOPV_VH5w?t=815) showing Stackdriver
    APM (Tracing, Code Search, Profiler, Google Cloud Build)
  - [Introduction to Service Management with Istio](https://www.youtube.com/watch?v=wCJrdKdD6UM&amp;feature=youtu.be&amp;t=586)
- [Google Cloud Next&#039;18 London ‚Äì Keynote](https://youtu.be/nIq2pkNcfEI?t=3071)
  showing Stackdriver Incident Response Management
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[kyverno/kyverno]]></title>
            <link>https://github.com/kyverno/kyverno</link>
            <guid>https://github.com/kyverno/kyverno</guid>
            <pubDate>Fri, 16 May 2025 00:05:13 GMT</pubDate>
            <description><![CDATA[Cloud Native Policy Management]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/kyverno/kyverno">kyverno/kyverno</a></h1>
            <p>Cloud Native Policy Management</p>
            <p>Language: Go</p>
            <p>Stars: 6,318</p>
            <p>Forks: 1,002</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>&lt;!--
Copyright 2024 The Kyverno Authors

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
--&gt;

# Kyverno [![Tweet](https://img.shields.io/twitter/url/http/shields.io.svg?style=social)](https://twitter.com/intent/tweet?text=Cloud%20Native%20Policy%20Management.%20No%20new%20language%20required%1&amp;url=https://github.com/kyverno/kyverno/&amp;hashtags=kubernetes,devops)

**Cloud Native Policy Management üéâ**

[![Go Report Card](https://goreportcard.com/badge/github.com/kyverno/kyverno)](https://goreportcard.com/report/github.com/kyverno/kyverno)
![License: Apache-2.0](https://img.shields.io/github/license/kyverno/kyverno?color=blue)
[![GitHub Repo stars](https://img.shields.io/github/stars/kyverno/kyverno)](https://github.com/kyverno/kyverno/stargazers)
[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/5327/badge)](https://bestpractices.coreinfrastructure.org/projects/5327)
[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/kyverno/kyverno/badge)](https://securityscorecards.dev/viewer/?uri=github.com/kyverno/kyverno)
[![SLSA 3](https://slsa.dev/images/gh-badge-level3.svg)](https://slsa.dev)
[![Artifact HUB](https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/kyverno)](https://artifacthub.io/packages/search?repo=kyverno)
[![codecov](https://codecov.io/gh/kyverno/kyverno/branch/main/graph/badge.svg)](https://app.codecov.io/gh/kyverno/kyverno/branch/main)
[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fkyverno%2Fkyverno.svg?type=shield)](https://app.fossa.com/projects/git%2Bgithub.com%2Fkyverno%2Fkyverno?ref=badge_shield)


&lt;a href=&quot;https://kyverno.io&quot; rel=&quot;kyverno.io&quot;&gt;![logo](img/Kyverno_Horizontal.png)&lt;/a&gt;

&lt;p class=&quot;callout info&quot; style=&quot;font-size: 100%;&quot;&gt;
Kyverno is a policy engine designed for cloud native platform engineering teams. It enables security, automation, compliance, and governance using policy-as-code. Kyverno can validate, mutate, generate, and cleanup configurations using Kubernetes admission controls, background scans, and source code respository scans. Kyverno policies can also be used to verify OCI images, for software supply chain security. Kyverno policies can be managed as Kubernetes resources and do not require learning a new language. Kyverno is designed to work nicely with tools you already use like kubectl, kustomize, and Git.
&lt;/p&gt;

&lt;a href=&quot;https://opensourcesecurityindex.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt; &lt;img
        style=&quot;width: 282px; height: 56px&quot;
        src=&quot;https://opensourcesecurityindex.io/badge.svg&quot;
        alt=&quot;Open Source Security Index - Fastest Growing Open Source Security Projects&quot;
        width=&quot;282&quot;
        height=&quot;56&quot;
    /&gt;
&lt;/a&gt;

## üìô Documentation

Kyverno installation and reference documents are available at [kyverno.io](https://kyverno.io).

üëâ **[Quick Start](https://kyverno.io/docs/introduction/#quick-start)**

üëâ **[Installation](https://kyverno.io/docs/installation/)**

üëâ **[Sample Policies](https://kyverno.io/policies/)**

## üéØ Popular Use Cases

Kyverno helps platform teams enforce best practices and security policies. Here are some common use cases:

1. **Security &amp; Compliance**
   - Enforce pod security standards
   - Require specific security contexts
   - Validate image sources and signatures
   - Ensure resource limits and requests

2. **Operational Excellence**
   - Automatically add labels and annotations
   - Enforce naming conventions
   - Generate default network policies
   - Validate resource configurations

3. **Cost Optimization**
   - Enforce resource quotas
   - Require cost allocation labels
   - Clean up unused resources
   - Validate instance types

4. **Developer Guardrails**
   - Enforce ingress/egress rules
   - Require liveness/readiness probes
   - Validate container images
   - Auto-mount configuration

Each use case includes ready-to-use policies in our [policy library](https://kyverno.io/policies/).

## üôã‚Äç‚ôÇÔ∏è Getting Help

We are here to help!

üëâ For feature requests and bugs, file an [issue](https://github.com/kyverno/kyverno/issues).

üëâ For discussions or questions, join the [Kyverno Slack channel](https://slack.k8s.io/#kyverno).

üëâ For community meeting access, see [mailing list](https://kyverno.io/community/#community-meetings).

üëâ To get follow updates ‚≠êÔ∏è [star this repository](https://github.com/kyverno/kyverno/stargazers).

## ‚ûï Contributing

Thanks for your interest in contributing to Kyverno! Here are some steps to help get you started:

‚úî Read and agree to the [Contribution Guidelines](/CONTRIBUTING.md).

‚úî Browse through the [GitHub discussions](https://github.com/kyverno/kyverno/discussions).

‚úî Read Kyverno design and development details on the [GitHub Wiki](https://github.com/kyverno/kyverno/wiki).

‚úî Check out the [good first issues](https://github.com/kyverno/kyverno/labels/good%20first%20issue) list. Add a comment with `/assign` to request assignment of the issue.

‚úî Check out the Kyverno [Community page](https://kyverno.io/community/) for other ways to get involved.

## Software Bill of Materials

All Kyverno images include a Software Bill of Materials (SBOM) in [CycloneDX](https://cyclonedx.org/) JSON format. SBOMs for Kyverno images are stored in a separate repository at `ghcr.io/kyverno/sbom`. More information on this is available at [Fetching the SBOM for Kyverno](https://kyverno.io/docs/security/#fetching-the-sbom-for-kyverno). 

## Contributors

Kyverno is built and maintained by our growing community of contributors!

&lt;a href=&quot;https://github.com/kyverno/kyverno/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=kyverno/kyverno&quot; /&gt;
&lt;/a&gt;

Made with [contributors-img](https://contrib.rocks).

## License

Copyright 2025, the Kyverno project. All rights reserved. Kyverno is licensed under the [Apache License 2.0](LICENSE).

Kyverno is a [Cloud Native Computing Foundation (CNCF) Incubating project](https://www.cncf.io/projects/) and was contributed by [Nirmata](https://nirmata.com/?utm_source=github&amp;utm_medium=repository).
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[helm/helm]]></title>
            <link>https://github.com/helm/helm</link>
            <guid>https://github.com/helm/helm</guid>
            <pubDate>Fri, 16 May 2025 00:05:12 GMT</pubDate>
            <description><![CDATA[The Kubernetes Package Manager]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/helm/helm">helm/helm</a></h1>
            <p>The Kubernetes Package Manager</p>
            <p>Language: Go</p>
            <p>Stars: 27,876</p>
            <p>Forks: 7,230</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre># Helm

[![Build Status](https://github.com/helm/helm/workflows/release/badge.svg)](https://github.com/helm/helm/actions?workflow=release)
[![Go Report Card](https://goreportcard.com/badge/helm.sh/helm/v4)](https://goreportcard.com/report/helm.sh/helm/v4)
[![GoDoc](https://img.shields.io/static/v1?label=godoc&amp;message=reference&amp;color=blue)](https://pkg.go.dev/helm.sh/helm/v4)
[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/3131/badge)](https://bestpractices.coreinfrastructure.org/projects/3131)
[![OpenSSF Scorecard](https://api.scorecard.dev/projects/github.com/helm/helm/badge)](https://scorecard.dev/viewer/?uri=github.com/helm/helm)

Helm is a tool for managing Charts. Charts are packages of pre-configured Kubernetes resources.

Use Helm to:

- Find and use [popular software packaged as Helm Charts](https://artifacthub.io/packages/search?kind=0) to run in Kubernetes
- Share your own applications as Helm Charts
- Create reproducible builds of your Kubernetes applications
- Intelligently manage your Kubernetes manifest files
- Manage releases of Helm packages

## Helm in a Handbasket

Helm is a tool that streamlines installing and managing Kubernetes applications.
Think of it like apt/yum/homebrew for Kubernetes.

- Helm renders your templates and communicates with the Kubernetes API
- Helm runs on your laptop, CI/CD, or wherever you want it to run.
- Charts are Helm packages that contain at least two things:
  - A description of the package (`Chart.yaml`)
  - One or more templates, which contain Kubernetes manifest files
- Charts can be stored on disk, or fetched from remote chart repositories
  (like Debian or RedHat packages)

## Helm Development and Stable Versions

Helm v4 is currently under development on the `main` branch. This is unstable and the APIs within the Go SDK and at the command line are changing.
Helm v3 (current stable) is maintained on the `dev-v3` branch. APIs there follow semantic versioning.

## Install

Binary downloads of the Helm client can be found on [the Releases page](https://github.com/helm/helm/releases/latest).

Unpack the `helm` binary and add it to your PATH and you are good to go!

If you want to use a package manager:

- [Homebrew](https://brew.sh/) users can use `brew install helm`.
- [Chocolatey](https://chocolatey.org/) users can use `choco install kubernetes-helm`.
- [Winget](https://learn.microsoft.com/en-us/windows/package-manager/) users can use `winget install Helm.Helm`.
- [Scoop](https://scoop.sh/) users can use `scoop install helm`.
- [Snapcraft](https://snapcraft.io/) users can use `snap install helm --classic`.
- [Flox](https://flox.dev) users can use `flox install kubernetes-helm`.

To rapidly get Helm up and running, start with the [Quick Start Guide](https://helm.sh/docs/intro/quickstart/).

See the [installation guide](https://helm.sh/docs/intro/install/) for more options,
including installing pre-releases.

## Docs

Get started with the [Quick Start guide](https://helm.sh/docs/intro/quickstart/) or plunge into the [complete documentation](https://helm.sh/docs)

## Roadmap

The [Helm roadmap uses GitHub milestones](https://github.com/helm/helm/milestones) to track the progress of the project.

The development of Helm v4 is currently happening on the `main` branch while the development of Helm v3, the stable branch, is happening on the `dev-v3` branch. Changes should be made to the `main` branch prior to being added to the `dev-v3` branch so that all changes are carried along to Helm v4.

## Community, discussion, contribution, and support

You can reach the Helm community and developers via the following channels:

- [Kubernetes Slack](https://kubernetes.slack.com):
  - [#helm-users](https://kubernetes.slack.com/messages/helm-users)
  - [#helm-dev](https://kubernetes.slack.com/messages/helm-dev)
  - [#charts](https://kubernetes.slack.com/messages/charts)
- Mailing List:
  - [Helm Mailing List](https://lists.cncf.io/g/cncf-helm)
- Developer Call: Thursdays at 9:30-10:00 Pacific ([meeting details](https://github.com/helm/community/blob/master/communication.md#meetings))

### Contribution

If you&#039;re interested in contributing, please refer to the [Contributing Guide](CONTRIBUTING.md) **before submitting a pull request**.

### Code of conduct

Participation in the Helm community is governed by the [Code of Conduct](code-of-conduct.md).
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[go-playground/validator]]></title>
            <link>https://github.com/go-playground/validator</link>
            <guid>https://github.com/go-playground/validator</guid>
            <pubDate>Fri, 16 May 2025 00:05:11 GMT</pubDate>
            <description><![CDATA[üíØGo Struct and Field validation, including Cross Field, Cross Struct, Map, Slice and Array diving]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/go-playground/validator">go-playground/validator</a></h1>
            <p>üíØGo Struct and Field validation, including Cross Field, Cross Struct, Map, Slice and Array diving</p>
            <p>Language: Go</p>
            <p>Stars: 18,323</p>
            <p>Forks: 1,371</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>Package validator
=================
&lt;img align=&quot;right&quot; src=&quot;logo.png&quot;&gt;[![GitHub release (latest SemVer)](https://img.shields.io/github/v/release/go-playground/validator)](https://github.com/go-playground/validator/releases)
[![Build Status](https://github.com/go-playground/validator/actions/workflows/workflow.yml/badge.svg)](https://github.com/go-playground/validator/actions)
[![Coverage Status](https://coveralls.io/repos/go-playground/validator/badge.svg?branch=master&amp;service=github)](https://coveralls.io/github/go-playground/validator?branch=master)
[![Go Report Card](https://goreportcard.com/badge/github.com/go-playground/validator)](https://goreportcard.com/report/github.com/go-playground/validator)
[![GoDoc](https://godoc.org/github.com/go-playground/validator?status.svg)](https://pkg.go.dev/github.com/go-playground/validator/v10)
![License](https://img.shields.io/dub/l/vibe-d.svg)

Package validator implements value validations for structs and individual fields based on tags.

It has the following **unique** features:

-   Cross Field and Cross Struct validations by using validation tags or custom validators.
-   Slice, Array and Map diving, which allows any or all levels of a multidimensional field to be validated.
-   Ability to dive into both map keys and values for validation
-   Handles type interface by determining it&#039;s underlying type prior to validation.
-   Handles custom field types such as sql driver Valuer see [Valuer](https://golang.org/src/database/sql/driver/types.go?s=1210:1293#L29)
-   Alias validation tags, which allows for mapping of several validations to a single tag for easier defining of validations on structs
-   Extraction of custom defined Field Name e.g. can specify to extract the JSON name while validating and have it available in the resulting FieldError
-   Customizable i18n aware error messages.
-   Default validator for the [gin](https://github.com/gin-gonic/gin) web framework; upgrading from v8 to v9 in gin see [here](https://github.com/go-playground/validator/tree/master/_examples/gin-upgrading-overriding)

A Call for Maintainers
----------------------

Please read the discussiong started [here](https://github.com/go-playground/validator/discussions/1330) if you are interested in contributing/helping maintain this package.

Installation
------------

Use go get.

	go get github.com/go-playground/validator/v10

Then import the validator package into your own code.

	import &quot;github.com/go-playground/validator/v10&quot;

Error Return Value
-------

Validation functions return type error

They return type error to avoid the issue discussed in the following, where err is always != nil:

* http://stackoverflow.com/a/29138676/3158232
* https://github.com/go-playground/validator/issues/134

Validator returns only InvalidValidationError for bad validation input, nil or ValidationErrors as type error; so, in your code all you need to do is check if the error returned is not nil, and if it&#039;s not check if error is InvalidValidationError ( if necessary, most of the time it isn&#039;t ) type cast it to type ValidationErrors like so:

```go
err := validate.Struct(mystruct)
validationErrors := err.(validator.ValidationErrors)
 ```

Usage and documentation
------

Please see https://pkg.go.dev/github.com/go-playground/validator/v10 for detailed usage docs.

##### Examples:

- [Simple](https://github.com/go-playground/validator/blob/master/_examples/simple/main.go)
- [Custom Field Types](https://github.com/go-playground/validator/blob/master/_examples/custom/main.go)
- [Struct Level](https://github.com/go-playground/validator/blob/master/_examples/struct-level/main.go)
- [Translations &amp; Custom Errors](https://github.com/go-playground/validator/blob/master/_examples/translations/main.go)
- [Gin upgrade and/or override validator](https://github.com/go-playground/validator/tree/v9/_examples/gin-upgrading-overriding)
- [wash - an example application putting it all together](https://github.com/bluesuncorp/wash)

Baked-in Validations
------

### Special Notes:
- If new to using validator it is highly recommended to initialize it using the `WithRequiredStructEnabled` option which is opt-in to new behaviour that will become the default behaviour in v11+. See documentation for more details.
```go
validate := validator.New(validator.WithRequiredStructEnabled())
```

### Fields:

| Tag | Description |
| - | - |
| eqcsfield | Field Equals Another Field (relative)|
| eqfield | Field Equals Another Field |
| fieldcontains | Check the indicated characters are present in the Field |
| fieldexcludes | Check the indicated characters are not present in the field |
| gtcsfield | Field Greater Than Another Relative Field |
| gtecsfield | Field Greater Than or Equal To Another Relative Field |
| gtefield | Field Greater Than or Equal To Another Field |
| gtfield | Field Greater Than Another Field |
| ltcsfield | Less Than Another Relative Field |
| ltecsfield | Less Than or Equal To Another Relative Field |
| ltefield | Less Than or Equal To Another Field |
| ltfield | Less Than Another Field |
| necsfield | Field Does Not Equal Another Field (relative) |
| nefield | Field Does Not Equal Another Field |

### Network:

| Tag | Description |
| - | - |
| cidr | Classless Inter-Domain Routing CIDR |
| cidrv4 | Classless Inter-Domain Routing CIDRv4 |
| cidrv6 | Classless Inter-Domain Routing CIDRv6 |
| datauri | Data URL |
| fqdn | Full Qualified Domain Name (FQDN) |
| hostname | Hostname RFC 952 |
| hostname_port | HostPort |
| hostname_rfc1123 | Hostname RFC 1123 |
| ip | Internet Protocol Address IP |
| ip4_addr | Internet Protocol Address IPv4 |
| ip6_addr | Internet Protocol Address IPv6 |
| ip_addr | Internet Protocol Address IP |
| ipv4 | Internet Protocol Address IPv4 |
| ipv6 | Internet Protocol Address IPv6 |
| mac | Media Access Control Address MAC |
| tcp4_addr | Transmission Control Protocol Address TCPv4 |
| tcp6_addr | Transmission Control Protocol Address TCPv6 |
| tcp_addr | Transmission Control Protocol Address TCP |
| udp4_addr | User Datagram Protocol Address UDPv4 |
| udp6_addr | User Datagram Protocol Address UDPv6 |
| udp_addr | User Datagram Protocol Address UDP |
| unix_addr | Unix domain socket end point Address |
| uri | URI String |
| url | URL String |
| http_url | HTTP URL String |
| url_encoded | URL Encoded |
| urn_rfc2141 | Urn RFC 2141 String |

### Strings:

| Tag | Description |
| - | - |
| alpha | Alpha Only |
| alphanum | Alphanumeric |
| alphanumunicode | Alphanumeric Unicode |
| alphaunicode | Alpha Unicode |
| ascii | ASCII |
| boolean | Boolean |
| contains | Contains |
| containsany | Contains Any |
| containsrune | Contains Rune |
| endsnotwith | Ends Not With |
| endswith | Ends With |
| excludes | Excludes |
| excludesall | Excludes All |
| excludesrune | Excludes Rune |
| lowercase | Lowercase |
| multibyte | Multi-Byte Characters |
| number | Number |
| numeric | Numeric |
| printascii | Printable ASCII |
| startsnotwith | Starts Not With |
| startswith | Starts With |
| uppercase | Uppercase |

### Format:
| Tag | Description |
| - | - |
| base64 | Base64 String |
| base64url | Base64URL String |
| base64rawurl | Base64RawURL String |
| bic | Business Identifier Code (ISO 9362) |
| bcp47_language_tag | Language tag (BCP 47) |
| btc_addr | Bitcoin Address |
| btc_addr_bech32 | Bitcoin Bech32 Address (segwit) |
| credit_card | Credit Card Number |
| mongodb | MongoDB ObjectID |
| mongodb_connection_string | MongoDB Connection String |
| cron | Cron |
| spicedb | SpiceDb ObjectID/Permission/Type |
| datetime | Datetime |
| e164 | e164 formatted phone number |
| ein | U.S. Employeer Identification Number |
| email | E-mail String
| eth_addr | Ethereum Address |
| hexadecimal | Hexadecimal String |
| hexcolor | Hexcolor String |
| hsl | HSL String |
| hsla | HSLA String |
| html | HTML Tags |
| html_encoded | HTML Encoded |
| isbn | International Standard Book Number |
| isbn10 | International Standard Book Number 10 |
| isbn13 | International Standard Book Number 13 |
| issn | International Standard Serial Number |
| iso3166_1_alpha2 | Two-letter country code (ISO 3166-1 alpha-2) |
| iso3166_1_alpha3 | Three-letter country code (ISO 3166-1 alpha-3) |
| iso3166_1_alpha_numeric | Numeric country code (ISO 3166-1 numeric) |
| iso3166_2 | Country subdivision code (ISO 3166-2) |
| iso4217 | Currency code (ISO 4217) |
| json | JSON |
| jwt | JSON Web Token (JWT) |
| latitude | Latitude |
| longitude | Longitude |
| luhn_checksum | Luhn Algorithm Checksum (for strings and (u)int) |
| postcode_iso3166_alpha2 | Postcode |
| postcode_iso3166_alpha2_field | Postcode |
| rgb | RGB String |
| rgba | RGBA String |
| ssn | Social Security Number SSN |
| timezone | Timezone |
| uuid | Universally Unique Identifier UUID |
| uuid3 | Universally Unique Identifier UUID v3 |
| uuid3_rfc4122 | Universally Unique Identifier UUID v3 RFC4122 |
| uuid4 | Universally Unique Identifier UUID v4 |
| uuid4_rfc4122 | Universally Unique Identifier UUID v4 RFC4122 |
| uuid5 | Universally Unique Identifier UUID v5 |
| uuid5_rfc4122 | Universally Unique Identifier UUID v5 RFC4122 |
| uuid_rfc4122 | Universally Unique Identifier UUID RFC4122 |
| md4 | MD4 hash |
| md5 | MD5 hash |
| sha256 | SHA256 hash |
| sha384 | SHA384 hash |
| sha512 | SHA512 hash |
| ripemd128 | RIPEMD-128 hash |
| ripemd128 | RIPEMD-160 hash |
| tiger128 | TIGER128 hash |
| tiger160 | TIGER160 hash |
| tiger192 | TIGER192 hash |
| semver | Semantic Versioning 2.0.0 |
| ulid | Universally Unique Lexicographically Sortable Identifier ULID |
| cve | Common Vulnerabilities and Exposures Identifier (CVE id) |

### Comparisons:
| Tag | Description |
| - | - |
| eq | Equals |
| eq_ignore_case | Equals ignoring case |
| gt | Greater than|
| gte | Greater than or equal |
| lt | Less Than |
| lte | Less Than or Equal |
| ne | Not Equal |
| ne_ignore_case | Not Equal ignoring case |

### Other:
| Tag | Description |
| - | - |
| dir | Existing Directory |
| dirpath | Directory Path |
| file | Existing File |
| filepath | File Path |
| image | Image |
| isdefault | Is Default |
| len | Length |
| max | Maximum |
| min | Minimum |
| oneof | One Of |
| required | Required |
| required_if | Required If |
| required_unless | Required Unless |
| required_with | Required With |
| required_with_all | Required With All |
| required_without | Required Without |
| required_without_all | Required Without All |
| excluded_if | Excluded If |
| excluded_unless | Excluded Unless |
| excluded_with | Excluded With |
| excluded_with_all | Excluded With All |
| excluded_without | Excluded Without |
| excluded_without_all | Excluded Without All |
| unique | Unique |
| validateFn | Verify if the method `Validate() error` does not return an error (or any specified method) |


#### Aliases:
| Tag | Description |
| - | - |
| iscolor | hexcolor\|rgb\|rgba\|hsl\|hsla |
| country_code | iso3166_1_alpha2\|iso3166_1_alpha3\|iso3166_1_alpha_numeric |

Benchmarks
------
###### Run on MacBook Pro Max M3
```go
go version go1.23.3 darwin/arm64
goos: darwin
goarch: arm64
cpu: Apple M3 Max
pkg: github.com/go-playground/validator/v10
BenchmarkFieldSuccess-16                                                42461943                27.88 ns/op            0 B/op          0 allocs/op
BenchmarkFieldSuccessParallel-16                                        486632887                2.289 ns/op           0 B/op          0 allocs/op
BenchmarkFieldFailure-16                                                 9566167               121.3 ns/op           200 B/op          4 allocs/op
BenchmarkFieldFailureParallel-16                                        17551471                83.68 ns/op          200 B/op          4 allocs/op
BenchmarkFieldArrayDiveSuccess-16                                        7602306               155.6 ns/op            97 B/op          5 allocs/op
BenchmarkFieldArrayDiveSuccessParallel-16                               20664610                59.80 ns/op           97 B/op          5 allocs/op
BenchmarkFieldArrayDiveFailure-16                                        4659756               252.9 ns/op           301 B/op         10 allocs/op
BenchmarkFieldArrayDiveFailureParallel-16                                8010116               152.9 ns/op           301 B/op         10 allocs/op
BenchmarkFieldMapDiveSuccess-16                                          2834575               421.2 ns/op           288 B/op         14 allocs/op
BenchmarkFieldMapDiveSuccessParallel-16                                  7179700               171.8 ns/op           288 B/op         14 allocs/op
BenchmarkFieldMapDiveFailure-16                                          3081728               384.4 ns/op           376 B/op         13 allocs/op
BenchmarkFieldMapDiveFailureParallel-16                                  6058137               204.0 ns/op           377 B/op         13 allocs/op
BenchmarkFieldMapDiveWithKeysSuccess-16                                  2544975               464.8 ns/op           288 B/op         14 allocs/op
BenchmarkFieldMapDiveWithKeysSuccessParallel-16                          6661954               181.4 ns/op           288 B/op         14 allocs/op
BenchmarkFieldMapDiveWithKeysFailure-16                                  2435484               490.7 ns/op           553 B/op         16 allocs/op
BenchmarkFieldMapDiveWithKeysFailureParallel-16                          4249617               282.0 ns/op           554 B/op         16 allocs/op
BenchmarkFieldCustomTypeSuccess-16                                      14943525                77.35 ns/op           32 B/op          2 allocs/op
BenchmarkFieldCustomTypeSuccessParallel-16                              64051954                20.61 ns/op           32 B/op          2 allocs/op
BenchmarkFieldCustomTypeFailure-16                                      10721384               107.1 ns/op           184 B/op          3 allocs/op
BenchmarkFieldCustomTypeFailureParallel-16                              18714495                69.77 ns/op          184 B/op          3 allocs/op
BenchmarkFieldOrTagSuccess-16                                            4063124               294.3 ns/op            16 B/op          1 allocs/op
BenchmarkFieldOrTagSuccessParallel-16                                   31903756                41.22 ns/op           18 B/op          1 allocs/op
BenchmarkFieldOrTagFailure-16                                            7748558               146.8 ns/op           216 B/op          5 allocs/op
BenchmarkFieldOrTagFailureParallel-16                                   13139854                92.05 ns/op          216 B/op          5 allocs/op
BenchmarkStructLevelValidationSuccess-16                                16808389                70.25 ns/op           16 B/op          1 allocs/op
BenchmarkStructLevelValidationSuccessParallel-16                        90686955                14.47 ns/op           16 B/op          1 allocs/op
BenchmarkStructLevelValidationFailure-16                                 5818791               200.2 ns/op           264 B/op          7 allocs/op
BenchmarkStructLevelValidationFailureParallel-16                        11115874               107.5 ns/op           264 B/op          7 allocs/op
BenchmarkStructSimpleCustomTypeSuccess-16                                7764956               151.9 ns/op            32 B/op          2 allocs/op
BenchmarkStructSimpleCustomTypeSuccessParallel-16                       52316265                30.37 ns/op           32 B/op          2 allocs/op
BenchmarkStructSimpleCustomTypeFailure-16                                4195429               277.2 ns/op           416 B/op          9 allocs/op
BenchmarkStructSimpleCustomTypeFailureParallel-16                        7305661               164.6 ns/op           432 B/op         10 allocs/op
BenchmarkStructFilteredSuccess-16                                        6312625               186.1 ns/op           216 B/op          5 allocs/op
BenchmarkStructFilteredSuccessParallel-16                               13684459                93.42 ns/op          216 B/op          5 allocs/op
BenchmarkStructFilteredFailure-16                                        6751482               171.2 ns/op           216 B/op          5 allocs/op
BenchmarkStructFilteredFailureParallel-16                               14146070                86.93 ns/op          216 B/op          5 allocs/op
BenchmarkStructPartialSuccess-16                                         6544448               177.3 ns/op           224 B/op          4 allocs/op
BenchmarkStructPartialSuccessParallel-16                                13951946                88.73 ns/op          224 B/op          4 allocs/op
BenchmarkStructPartialFailure-16                                         4075833               287.5 ns/op           440 B/op          9 allocs/op
BenchmarkStructPartialFailureParallel-16                                 7490805               161.3 ns/op           440 B/op          9 allocs/op
BenchmarkStructExceptSuccess-16                                          4107187               281.4 ns/op           424 B/op          8 allocs/op
BenchmarkStructExceptSuccessParallel-16                                 15979173                80.86 ns/op          208 B/op          3 allocs/op
BenchmarkStructExceptFailure-16                                          4434372               264.3 ns/op           424 B/op          8 allocs/op
BenchmarkStructExceptFailureParallel-16                                  8081367               154.1 ns/op           424 B/op          8 allocs/op
BenchmarkStructSimpleCrossFieldSuccess-16                                6459542               183.4 ns/op            56 B/op          3 allocs/op
BenchmarkStructSimpleCrossFieldSuccessParallel-16                       41013781                37.95 ns/op           56 B/op          3 allocs/op
BenchmarkStructSimpleCrossFieldFailure-16                                4034998               292.1 ns/op           272 B/op          8 allocs/op
BenchmarkStructSimpleCrossFieldFailureParallel-16                       11348446               115.3 ns/op           272 B/op          8 allocs/op
BenchmarkStructSimpleCrossStructCrossFieldSuccess-16                     4448528               267.7 ns/op            64 B/op          4 allocs/op
BenchmarkStructSimpleCrossStructCrossFieldSuccessParallel-16            26813619                48.33 ns/op           64 B/op          4 allocs/op
BenchmarkStructSimpleCrossStructCrossFieldFailure-16                     3090646               384.5 ns/op           288 B/op          9 allocs/op
BenchmarkStructSimpleCrossStructCrossFieldFailureParallel-16             9870906               129.5 ns/op           288 B/op          9 allocs/op
BenchmarkStructSimpleSuccess-16                                         10675562               109.5 ns/op             0 B/op          0 allocs/op
BenchmarkStructSimpleSuccessParallel-16                                 131159784                8.932 ns/op           0 B/op          0 allocs/op
BenchmarkStructSimpleFailure-16                                          4094979               286.6 ns/op           416 B/op          9 allocs/op
BenchmarkStructSimpleFailureParallel-16                                  7606663               157.9 ns/op           416 B/op          9 allocs/op
BenchmarkStructComplexSuccess-16                                         2073470               576.0 ns/op           224 B/op          5 allocs/op
BenchmarkStructComplexSuccessParallel-16                                 7821831               161.3 ns/op           224 B/op          5 allocs/op
BenchmarkStructComplexFailure-16                                          576358              2001 ns/op            3042 B/op         48 allocs/op
BenchmarkStructComplexFailureParallel-16                                 1000000              1171 ns/op            3041 B/op         48 allocs/op
BenchmarkOneof

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[moby/moby]]></title>
            <link>https://github.com/moby/moby</link>
            <guid>https://github.com/moby/moby</guid>
            <pubDate>Fri, 16 May 2025 00:05:10 GMT</pubDate>
            <description><![CDATA[The Moby Project - a collaborative project for the container ecosystem to assemble container-based systems]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/moby/moby">moby/moby</a></h1>
            <p>The Moby Project - a collaborative project for the container ecosystem to assemble container-based systems</p>
            <p>Language: Go</p>
            <p>Stars: 69,731</p>
            <p>Forks: 18,744</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre>The Moby Project
================

[![PkgGoDev](https://pkg.go.dev/badge/github.com/docker/docker)](https://pkg.go.dev/github.com/docker/docker)
[![Go Report Card](https://goreportcard.com/badge/github.com/docker/docker)](https://goreportcard.com/report/github.com/docker/docker)
[![OpenSSF Scorecard](https://api.scorecard.dev/projects/github.com/moby/moby/badge)](https://scorecard.dev/viewer/?uri=github.com/moby/moby)


![Moby Project logo](docs/static_files/moby-project-logo.png &quot;The Moby Project&quot;)

Moby is an open-source project created by Docker to enable and accelerate software containerization.

It provides a &quot;Lego set&quot; of toolkit components, the framework for assembling them into custom container-based systems, and a place for all container enthusiasts and professionals to experiment and exchange ideas.
Components include container build tools, a container registry, orchestration tools, a runtime and more, and these can be used as building blocks in conjunction with other tools and projects.

## Principles

Moby is an open project guided by strong principles, aiming to be modular, flexible and without too strong an opinion on user experience.
It is open to the community to help set its direction.

- Modular: the project includes lots of components that have well-defined functions and APIs that work together.
- Batteries included but swappable: Moby includes enough components to build fully featured container systems, but its modular architecture ensures that most of the components can be swapped by different implementations.
- Usable security: Moby provides secure defaults without compromising usability.
- Developer focused: The APIs are intended to be functional and useful to build powerful tools.
They are not necessarily intended as end user tools but as components aimed at developers.
Documentation and UX is aimed at developers not end users.

## Audience

The Moby Project is intended for engineers, integrators and enthusiasts looking to modify, hack, fix, experiment, invent and build systems based on containers.
It is not for people looking for a commercially supported system, but for people who want to work and learn with open source code.

## Relationship with Docker

The components and tools in the Moby Project are initially the open source components that Docker and the community have built for the Docker Project.
New projects can be added if they fit with the community goals. Docker is committed to using Moby as the upstream for the Docker Product.
However, other projects are also encouraged to use Moby as an upstream, and to reuse the components in diverse ways, and all these uses will be treated in the same way. External maintainers and contributors are welcomed.

The Moby project is not intended as a location for support or feature requests for Docker products, but as a place for contributors to work on open source code, fix bugs, and make the code more useful.
The releases are supported by the maintainers, community and users, on a best efforts basis only. For customers who want enterprise or commercial support, [Docker Desktop](https://www.docker.com/products/docker-desktop/) and [Mirantis Container Runtime](https://www.mirantis.com/software/mirantis-container-runtime/) are the appropriate products for these use cases.

-----

Legal
=====

*Brought to you courtesy of our legal counsel. For more context,
please see the [NOTICE](https://github.com/moby/moby/blob/master/NOTICE) document in this repo.*

Use and transfer of Moby may be subject to certain restrictions by the
United States and other governments.

It is your responsibility to ensure that your use and/or transfer does not
violate applicable laws.

For more information, please see https://www.bis.doc.gov

Licensing
=========
Moby is licensed under the Apache License, Version 2.0. See
[LICENSE](https://github.com/moby/moby/blob/master/LICENSE) for the full
license text.
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[kubernetes-sigs/external-dns]]></title>
            <link>https://github.com/kubernetes-sigs/external-dns</link>
            <guid>https://github.com/kubernetes-sigs/external-dns</guid>
            <pubDate>Fri, 16 May 2025 00:05:09 GMT</pubDate>
            <description><![CDATA[Configure external DNS servers dynamically from Kubernetes resources]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/kubernetes-sigs/external-dns">kubernetes-sigs/external-dns</a></h1>
            <p>Configure external DNS servers dynamically from Kubernetes resources</p>
            <p>Language: Go</p>
            <p>Stars: 8,182</p>
            <p>Forks: 2,681</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>---
hide:
  - toc
  - navigation
---

&lt;p align=&quot;center&quot;&gt;
 &lt;img src=&quot;docs/img/external-dns.png&quot; width=&quot;40%&quot; align=&quot;center&quot; alt=&quot;ExternalDNS&quot;&gt;
&lt;/p&gt;

# ExternalDNS

[![Build Status](https://github.com/kubernetes-sigs/external-dns/workflows/Go/badge.svg)](https://github.com/kubernetes-sigs/external-dns/actions)
[![Coverage Status](https://coveralls.io/repos/github/kubernetes-sigs/external-dns/badge.svg)](https://coveralls.io/github/kubernetes-sigs/external-dns)
[![GitHub release](https://img.shields.io/github/release/kubernetes-sigs/external-dns.svg)](https://github.com/kubernetes-sigs/external-dns/releases)
[![go-doc](https://godoc.org/github.com/kubernetes-sigs/external-dns?status.svg)](https://godoc.org/github.com/kubernetes-sigs/external-dns)
[![Go Report Card](https://goreportcard.com/badge/github.com/kubernetes-sigs/external-dns)](https://goreportcard.com/report/github.com/kubernetes-sigs/external-dns)
[![ExternalDNS docs](https://img.shields.io/badge/docs-external--dns-blue)](https://kubernetes-sigs.github.io/external-dns/)

ExternalDNS synchronizes exposed Kubernetes Services and Ingresses with DNS providers.

## Documentation

This README is a part of the complete documentation, available [here](https://kubernetes-sigs.github.io/external-dns/).

## What It Does

Inspired by [Kubernetes DNS](https://github.com/kubernetes/dns), Kubernetes&#039; cluster-internal DNS server, ExternalDNS makes Kubernetes resources discoverable via public DNS servers.
Like KubeDNS, it retrieves a list of resources (Services, Ingresses, etc.) from the [Kubernetes API](https://kubernetes.io/docs/api/) to determine a desired list of DNS records.
*Unlike* KubeDNS, however, it&#039;s not a DNS server itself, but merely configures other DNS providers accordingly‚Äîe.g. [AWS Route 53](https://aws.amazon.com/route53/) or [Google Cloud DNS](https://cloud.google.com/dns/docs/).

In a broader sense, ExternalDNS allows you to control DNS records dynamically via Kubernetes resources in a DNS provider-agnostic way.

The [FAQ](docs/faq.md) contains additional information and addresses several questions about key concepts of ExternalDNS.

To see ExternalDNS in action, have a look at this [video](https://www.youtube.com/watch?v=9HQ2XgL9YVI) or read this [blogpost](https://codemine.be/posts/20190125-devops-eks-externaldns/).

## The Latest Release

- [current release process](./docs/release.md)

ExternalDNS allows you to keep selected zones (via `--domain-filter`) synchronized with Ingresses and Services of `type=LoadBalancer` and nodes in various DNS providers:

- [Google Cloud DNS](https://cloud.google.com/dns/docs/)
- [AWS Route 53](https://aws.amazon.com/route53/)
- [AWS Cloud Map](https://docs.aws.amazon.com/cloud-map/)
- [AzureDNS](https://azure.microsoft.com/en-us/services/dns)
- [Civo](https://www.civo.com)
- [CloudFlare](https://www.cloudflare.com/dns)
- [DigitalOcean](https://www.digitalocean.com/products/networking)
- [DNSimple](https://dnsimple.com/)
- [PowerDNS](https://www.powerdns.com/)
- [CoreDNS](https://coredns.io/)
- [Exoscale](https://www.exoscale.com/dns/)
- [Oracle Cloud Infrastructure DNS](https://docs.cloud.oracle.com/iaas/Content/DNS/Concepts/dnszonemanagement.htm)
- [Linode DNS](https://www.linode.com/docs/networking/dns/)
- [RFC2136](https://tools.ietf.org/html/rfc2136)
- [NS1](https://ns1.com/)
- [TransIP](https://www.transip.eu/domain-name/)
- [OVHcloud](https://www.ovhcloud.com)
- [Scaleway](https://www.scaleway.com)
- [Akamai Edge DNS](https://learn.akamai.com/en-us/products/cloud_security/edge_dns.html)
- [GoDaddy](https://www.godaddy.com)
- [Gandi](https://www.gandi.net)
- [IBM Cloud DNS](https://www.ibm.com/cloud/dns)
- [TencentCloud PrivateDNS](https://cloud.tencent.com/product/privatedns)
- [TencentCloud DNSPod](https://cloud.tencent.com/product/cns)
- [Plural](https://www.plural.sh/)
- [Pi-hole](https://pi-hole.net/)

ExternalDNS is, by default, aware of the records it is managing, therefore it can safely manage non-empty hosted zones.
We strongly encourage you to set `--txt-owner-id` to a unique value that doesn&#039;t change for the lifetime of your cluster.
You might also want to run ExternalDNS in a dry run mode (`--dry-run` flag) to see the changes to be submitted to your DNS Provider API.

Note that all flags can be replaced with environment variables; for instance,
`--dry-run` could be replaced with `EXTERNAL_DNS_DRY_RUN=1`.

## New providers

No new provider will be added to ExternalDNS *in-tree*.

ExternalDNS has introduced a webhook system, which can be used to add a new provider.
See PR #3063 for all the discussions about it.

Known providers using webhooks:

| Provider              | Repo                                                                 |
| --------------------- | -------------------------------------------------------------------- |
| Abion                 | https://github.com/abiondevelopment/external-dns-webhook-abion       |
| Adguard Home Provider | https://github.com/muhlba91/external-dns-provider-adguard            |
| Anexia                | https://github.com/anexia/k8s-external-dns-webhook                   |
| Bizfly Cloud          | https://github.com/bizflycloud/external-dns-bizflycloud-webhook      |
| ClouDNS               | https://github.com/rwunderer/external-dns-cloudns-webhook            |
| Dreamhost             | https://github.com/asymingt/external-dns-dreamhost-webhook           |
| Efficient IP          | https://github.com/EfficientIP-Labs/external-dns-efficientip-webhook |
| Gcore                 | https://github.com/G-Core/external-dns-gcore-webhook                 |
| GleSYS                | https://github.com/glesys/external-dns-glesys                        |
| Hetzner               | https://github.com/mconfalonieri/external-dns-hetzner-webhook        |
| Huawei Cloud          | https://github.com/setoru/external-dns-huaweicloud-webhook           |
| IONOS                 | https://github.com/ionos-cloud/external-dns-ionos-webhook            |
| Infoblox              | https://github.com/AbsaOSS/external-dns-infoblox-webhook             |
| Mikrotik              | https://github.com/mirceanton/external-dns-provider-mikrotik         |
| Netcup                | https://github.com/mrueg/external-dns-netcup-webhook                 |
| Netic                 | https://github.com/neticdk/external-dns-tidydns-webhook              |
| OpenStack Designate   | https://github.com/inovex/external-dns-designate-webhook             |
| OpenWRT               | https://github.com/renanqts/external-dns-openwrt-webhook             |
| RouterOS              | https://github.com/benfiola/external-dns-routeros-provider           |
| STACKIT               | https://github.com/stackitcloud/external-dns-stackit-webhook         |
| Unifi                 | https://github.com/kashalls/external-dns-unifi-webhook               |
| Vultr                 | https://github.com/vultr/external-dns-vultr-webhook                  |
| Yandex Cloud          | https://github.com/ismailbaskin/external-dns-yandex-webhook/         |

## Status of in-tree providers

ExternalDNS supports multiple DNS providers which have been implemented by the [ExternalDNS contributors](https://github.com/kubernetes-sigs/external-dns/graphs/contributors).
Maintaining all of those in a central repository is a challenge, which introduces lots of toil and potential risks.

This mean that `external-dns` has begun the process to move providers out of tree. See #4347 for more details.
Those who are interested can create a webhook provider based on an *in-tree* provider and after submit a PR to reference it here.

We define the following stability levels for providers:

- **Stable**: Used for smoke tests before a release, used in production and maintainers are active.
- **Beta**: Community supported, well tested, but maintainers have no access to resources to execute integration tests on the real platform and/or are not using it in production.
- **Alpha**: Community provided with no support from the maintainers apart from reviewing PRs.

The following table clarifies the current status of the providers according to the aforementioned stability levels:

| Provider | Status | Maintainers |
| -------- | ------ | ----------- |
| Google Cloud DNS | Stable | |
| AWS Route 53 | Stable | |
| AWS Cloud Map | Beta | |
| Akamai Edge DNS | Beta | |
| AzureDNS | Stable | |
| Civo | Alpha | @alejandrojnm |
| CloudFlare | Beta | |
| DigitalOcean | Alpha | |
| DNSimple | Alpha | |
| PowerDNS | Alpha | |
| CoreDNS | Alpha | |
| Exoscale | Alpha | |
| Oracle Cloud Infrastructure DNS | Alpha | |
| Linode DNS | Alpha | |
| RFC2136 | Alpha | |
| NS1 | Alpha | |
| TransIP | Alpha | |
| OVHcloud | Beta | @rbeuque74 |
| Scaleway DNS | Alpha | @Sh4d1 |
| UltraDNS | Alpha | |
| GoDaddy | Alpha | |
| Gandi | Alpha | @packi |
| IBMCloud | Alpha | @hughhuangzh |
| TencentCloud | Alpha | @Hyzhou |
| Plural | Alpha | @michaeljguarino |
| Pi-hole | Alpha | @tinyzimmer |

## Kubernetes version compatibility

A [breaking change](https://github.com/kubernetes-sigs/external-dns/pull/2281) was added in external-dns v0.10.0.

| ExternalDNS                    |      &lt;= 0.9.x      |     &gt;= 0.10.0      |
| ------------------------------ | :----------------: | :----------------: |
| Kubernetes &lt;= 1.18             | :white_check_mark: |        :x:         |
| Kubernetes &gt;= 1.19 and &lt;= 1.21 | :white_check_mark: | :white_check_mark: |
| Kubernetes &gt;= 1.22             |        :x:         | :white_check_mark: |

## Running ExternalDNS

The are two ways of running ExternalDNS:

- Deploying to a Cluster
- Running Locally

### Deploying to a Cluster

The following tutorials are provided:

- [Akamai Edge DNS](docs/tutorials/akamai-edgedns.md)
- [Alibaba Cloud](docs/tutorials/alibabacloud.md)
- AWS
  - [AWS Load Balancer Controller](docs/tutorials/aws-load-balancer-controller.md)
  - [Route53](docs/tutorials/aws.md)
    - [Same domain for public and private Route53 zones](docs/tutorials/aws-public-private-route53.md)
  - [Cloud Map](docs/tutorials/aws-sd.md)
  - [Kube Ingress AWS Controller](docs/tutorials/kube-ingress-aws.md)
- [Azure DNS](docs/tutorials/azure.md)
- [Azure Private DNS](docs/tutorials/azure-private-dns.md)
- [Civo](docs/tutorials/civo.md)
- [Cloudflare](docs/tutorials/cloudflare.md)
- [CoreDNS](docs/tutorials/coredns.md)
- [DigitalOcean](docs/tutorials/digitalocean.md)
- [DNSimple](docs/tutorials/dnsimple.md)
- [Exoscale](docs/tutorials/exoscale.md)
- [ExternalName Services](docs/tutorials/externalname.md)
- Google Kubernetes Engine
  - [Using Google&#039;s Default Ingress Controller](docs/tutorials/gke.md)
  - [Using the Nginx Ingress Controller](docs/tutorials/gke-nginx.md)
- [Headless Services](docs/tutorials/hostport.md)
- [Istio Gateway Source](docs/sources/istio.md)
- [Linode](docs/tutorials/linode.md)
- [NS1](docs/tutorials/ns1.md)
- [NS Record Creation with CRD Source](docs/sources/ns-record.md)
- [MX Record Creation with CRD Source](docs/sources/mx-record.md)
- [TXT Record Creation with CRD Source](docs/sources/txt-record.md)
- [Oracle Cloud Infrastructure (OCI) DNS](docs/tutorials/oracle.md)
- [PowerDNS](docs/tutorials/pdns.md)
- [RFC2136](docs/tutorials/rfc2136.md)
- [TransIP](docs/tutorials/transip.md)
- [OVHcloud](docs/tutorials/ovh.md)
- [Scaleway](docs/tutorials/scaleway.md)
- [UltraDNS](docs/tutorials/ultradns.md)
- [GoDaddy](docs/tutorials/godaddy.md)
- [Gandi](docs/tutorials/gandi.md)
- [IBM Cloud](docs/tutorials/ibmcloud.md)
- [Nodes as source](docs/sources/nodes.md)
- [TencentCloud](docs/tutorials/tencentcloud.md)
- [Plural](docs/tutorials/plural.md)
- [Pi-hole](docs/tutorials/pihole.md)

### Running Locally

See the [contributor guide](docs/contributing/getting-started.md) for details on compiling
from source.

#### Setup Steps

Next, run an application and expose it via a Kubernetes Service:

```console
kubectl run nginx --image=nginx --port=80
kubectl expose pod nginx --port=80 --target-port=80 --type=LoadBalancer
```

Annotate the Service with your desired external DNS name. Make sure to change `example.org` to your domain.

```console
kubectl annotate service nginx &quot;external-dns.alpha.kubernetes.io/hostname=nginx.example.org.&quot;
```

Optionally, you can customize the TTL value of the resulting DNS record by using the `external-dns.alpha.kubernetes.io/ttl` annotation:

```console
kubectl annotate service nginx &quot;external-dns.alpha.kubernetes.io/ttl=10&quot;
```

For more details on configuring TTL, see [here](docs/ttl.md).

Use the internal-hostname annotation to create DNS records with ClusterIP as the target.

```console
kubectl annotate service nginx &quot;external-dns.alpha.kubernetes.io/internal-hostname=nginx.internal.example.org.&quot;
```

If the service is not of type Loadbalancer you need the --publish-internal-services flag.

Locally run a single sync loop of ExternalDNS.

```console
external-dns --txt-owner-id my-cluster-id --provider google --google-project example-project --source service --once --dry-run
```

This should output the DNS records it will modify to match the managed zone with the DNS records you desire.
It also assumes you are running in the `default` namespace. See the [FAQ](docs/faq.md) for more information regarding namespaces.

Note: TXT records will have the `my-cluster-id` value embedded. Those are used to ensure that ExternalDNS is aware of the records it manages.

Once you&#039;re satisfied with the result, you can run ExternalDNS like you would run it in your cluster: as a control loop, and **not in dry-run** mode:

```console
external-dns --txt-owner-id my-cluster-id --provider google --google-project example-project --source service
```

Check that ExternalDNS has created the desired DNS record for your Service and that it points to its load balancer&#039;s IP. Then try to resolve it:

```console
dig +short nginx.example.org.
104.155.60.49
```

Now you can experiment and watch how ExternalDNS makes sure that your DNS records are configured as desired. Here are a couple of things you can try out:

- Change the desired hostname by modifying the Service&#039;s annotation.
- Recreate the Service and see that the DNS record will be updated to point to the new load balancer IP.
- Add another Service to create more DNS records.
- Remove Services to clean up your managed zone.

The **tutorials** section contains examples, including Ingress resources, and shows you how to set up ExternalDNS in different environments such as other cloud providers and alternative Ingress controllers.

# Note

If using a txt registry and attempting to use a CNAME the `--txt-prefix` must be set to avoid conflicts.  Changing `--txt-prefix` will result in lost ownership over previously created records.

If `externalIPs` list is defined for a `LoadBalancer` service, this list will be used instead of an assigned load balancer IP to create a DNS record.
It&#039;s useful when you run bare metal Kubernetes clusters behind NAT or in a similar setup, where a load balancer IP differs from a public IP (e.g. with [MetalLB](https://metallb.universe.tf)).

## Contributing

Are you interested in contributing to external-dns? We, the maintainers and community, would love your
suggestions, contributions, and help! Also, the maintainers can be contacted at any time to learn more
about how to get involved.

We also encourage ALL active community participants to act as if they are maintainers, even if you don&#039;t have
&quot;official&quot; write permissions. This is a community effort, we are here to serve the Kubernetes community. If you
have an active interest and you want to get involved, you have real power! Don&#039;t assume that the only people who
can get things done around here are the &quot;maintainers&quot;. We also would love to add more &quot;official&quot; maintainers, so
show us what you can do!

The external-dns project is currently in need of maintainers for specific DNS providers. Ideally each provider
would have at least two maintainers. It would be nice if the maintainers run the provider in production, but it
is not strictly required. Provider listed [here](https://github.com/kubernetes-sigs/external-dns#status-of-in-tree-providers)
that do not have a maintainer listed are in need of assistance.

Read the [contributing guidelines](CONTRIBUTING.md) and have a look at [the contributing docs](docs/contributing/dev-guide.md) to learn about building the project, the project structure, and the purpose of each package.

For an overview on how to write new Sources and Providers check out [Sources and Providers](docs/contributing/sources-and-providers.md).

## Heritage

ExternalDNS is an effort to unify the following similar projects in order to bring the Kubernetes community an easy and predictable way of managing DNS records across cloud providers based on their Kubernetes resources:

- Kops&#039; [DNS Controller](https://github.com/kubernetes/kops/tree/HEAD/dns-controller)
- Zalando&#039;s [Mate](https://github.com/linki/mate)
- Molecule Software&#039;s [route53-kubernetes](https://github.com/wearemolecule/route53-kubernetes)

### User Demo How-To Blogs and Examples

- A full demo on GKE Kubernetes. See [How-to Kubernetes with DNS management (ssl-manager pre-req)](https://medium.com/@jpantjsoha/how-to-kubernetes-with-dns-management-for-gitops-31239ea75d8d)
- Run external-dns on GKE with workload identity. See [Kubernetes, ingress-nginx, cert-manager &amp; external-dns](https://blog.atomist.com/kubernetes-ingress-nginx-cert-manager-external-dns/)
- [ExternalDNS integration with Azure DNS using workload identity](https://cloudchronicles.blog/blog/ExternalDNS-integration-with-Azure-DNS-using-workload-identity/)
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[golang-jwt/jwt]]></title>
            <link>https://github.com/golang-jwt/jwt</link>
            <guid>https://github.com/golang-jwt/jwt</guid>
            <pubDate>Fri, 16 May 2025 00:05:08 GMT</pubDate>
            <description><![CDATA[Go implementation of JSON Web Tokens (JWT).]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/golang-jwt/jwt">golang-jwt/jwt</a></h1>
            <p>Go implementation of JSON Web Tokens (JWT).</p>
            <p>Language: Go</p>
            <p>Stars: 8,022</p>
            <p>Forks: 381</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre># jwt-go

[![build](https://github.com/golang-jwt/jwt/actions/workflows/build.yml/badge.svg)](https://github.com/golang-jwt/jwt/actions/workflows/build.yml)
[![Go
Reference](https://pkg.go.dev/badge/github.com/golang-jwt/jwt/v5.svg)](https://pkg.go.dev/github.com/golang-jwt/jwt/v5)
[![Coverage Status](https://coveralls.io/repos/github/golang-jwt/jwt/badge.svg?branch=main)](https://coveralls.io/github/golang-jwt/jwt?branch=main)

A [go](http://www.golang.org) (or &#039;golang&#039; for search engine friendliness)
implementation of [JSON Web
Tokens](https://datatracker.ietf.org/doc/html/rfc7519).

Starting with [v4.0.0](https://github.com/golang-jwt/jwt/releases/tag/v4.0.0)
this project adds Go module support, but maintains backward compatibility with
older `v3.x.y` tags and upstream `github.com/dgrijalva/jwt-go`. See the
[`MIGRATION_GUIDE.md`](./MIGRATION_GUIDE.md) for more information. Version
v5.0.0 introduces major improvements to the validation of tokens, but is not
entirely backward compatible. 

&gt; After the original author of the library suggested migrating the maintenance
&gt; of `jwt-go`, a dedicated team of open source maintainers decided to clone the
&gt; existing library into this repository. See
&gt; [dgrijalva/jwt-go#462](https://github.com/dgrijalva/jwt-go/issues/462) for a
&gt; detailed discussion on this topic.


**SECURITY NOTICE:** Some older versions of Go have a security issue in the
crypto/elliptic. The recommendation is to upgrade to at least 1.15 See issue
[dgrijalva/jwt-go#216](https://github.com/dgrijalva/jwt-go/issues/216) for more
detail.

**SECURITY NOTICE:** It&#039;s important that you [validate the `alg` presented is
what you
expect](https://auth0.com/blog/critical-vulnerabilities-in-json-web-token-libraries/).
This library attempts to make it easy to do the right thing by requiring key
types to match the expected alg, but you should take the extra step to verify it in
your usage.  See the examples provided.

### Supported Go versions

Our support of Go versions is aligned with Go&#039;s [version release
policy](https://golang.org/doc/devel/release#policy). So we will support a major
version of Go until there are two newer major releases. We no longer support
building jwt-go with unsupported Go versions, as these contain security
vulnerabilities that will not be fixed.

## What the heck is a JWT?

JWT.io has [a great introduction](https://jwt.io/introduction) to JSON Web
Tokens.

In short, it&#039;s a signed JSON object that does something useful (for example,
authentication).  It&#039;s commonly used for `Bearer` tokens in Oauth 2.  A token is
made of three parts, separated by `.`&#039;s.  The first two parts are JSON objects,
that have been [base64url](https://datatracker.ietf.org/doc/html/rfc4648)
encoded.  The last part is the signature, encoded the same way.

The first part is called the header.  It contains the necessary information for
verifying the last part, the signature.  For example, which encryption method
was used for signing and what key was used.

The part in the middle is the interesting bit.  It&#039;s called the Claims and
contains the actual stuff you care about.  Refer to [RFC
7519](https://datatracker.ietf.org/doc/html/rfc7519) for information about
reserved keys and the proper way to add your own.

## What&#039;s in the box?

This library supports the parsing and verification as well as the generation and
signing of JWTs.  Current supported signing algorithms are HMAC SHA, RSA,
RSA-PSS, and ECDSA, though hooks are present for adding your own.

## Installation Guidelines

1. To install the jwt package, you first need to have
   [Go](https://go.dev/doc/install) installed, then you can use the command
   below to add `jwt-go` as a dependency in your Go program.

```sh
go get -u github.com/golang-jwt/jwt/v5
```

2. Import it in your code:

```go
import &quot;github.com/golang-jwt/jwt/v5&quot;
```

## Usage

A detailed usage guide, including how to sign and verify tokens can be found on
our [documentation website](https://golang-jwt.github.io/jwt/usage/create/).

## Examples

See [the project documentation](https://pkg.go.dev/github.com/golang-jwt/jwt/v5)
for examples of usage:

* [Simple example of parsing and validating a
  token](https://pkg.go.dev/github.com/golang-jwt/jwt/v5#example-Parse-Hmac)
* [Simple example of building and signing a
  token](https://pkg.go.dev/github.com/golang-jwt/jwt/v5#example-New-Hmac)
* [Directory of
  Examples](https://pkg.go.dev/github.com/golang-jwt/jwt/v5#pkg-examples)

## Compliance

This library was last reviewed to comply with [RFC
7519](https://datatracker.ietf.org/doc/html/rfc7519) dated May 2015 with a few
notable differences:

* In order to protect against accidental use of [Unsecured
  JWTs](https://datatracker.ietf.org/doc/html/rfc7519#section-6), tokens using
  `alg=none` will only be accepted if the constant
  `jwt.UnsafeAllowNoneSignatureType` is provided as the key.

## Project Status &amp; Versioning

This library is considered production ready.  Feedback and feature requests are
appreciated.  The API should be considered stable.  There should be very few
backward-incompatible changes outside of major version updates (and only with
good reason).

This project uses [Semantic Versioning 2.0.0](http://semver.org).  Accepted pull
requests will land on `main`.  Periodically, versions will be tagged from
`main`.  You can find all the releases on [the project releases
page](https://github.com/golang-jwt/jwt/releases).

**BREAKING CHANGES:** A full list of breaking changes is available in
`VERSION_HISTORY.md`.  See [`MIGRATION_GUIDE.md`](./MIGRATION_GUIDE.md) for more information on updating
your code.

## Extensions

This library publishes all the necessary components for adding your own signing
methods or key functions.  Simply implement the `SigningMethod` interface and
register a factory method using `RegisterSigningMethod` or provide a
`jwt.Keyfunc`.

A common use case would be integrating with different 3rd party signature
providers, like key management services from various cloud providers or Hardware
Security Modules (HSMs) or to implement additional standards.

| Extension | Purpose                                                                                                  | Repo                                       |
| --------- | -------------------------------------------------------------------------------------------------------- | ------------------------------------------ |
| GCP       | Integrates with multiple Google Cloud Platform signing tools (AppEngine, IAM API, Cloud KMS)             | https://github.com/someone1/gcp-jwt-go     |
| AWS       | Integrates with AWS Key Management Service, KMS                                                          | https://github.com/matelang/jwt-go-aws-kms |
| JWKS      | Provides support for JWKS ([RFC 7517](https://datatracker.ietf.org/doc/html/rfc7517)) as a `jwt.Keyfunc` | https://github.com/MicahParks/keyfunc      |

*Disclaimer*: Unless otherwise specified, these integrations are maintained by
third parties and should not be considered as a primary offer by any of the
mentioned cloud providers

## More

Go package documentation can be found [on
pkg.go.dev](https://pkg.go.dev/github.com/golang-jwt/jwt/v5). Additional
documentation can be found on [our project
page](https://golang-jwt.github.io/jwt/).

The command line utility included in this project (cmd/jwt) provides a
straightforward example of token creation and parsing as well as a useful tool
for debugging your own integration. You&#039;ll also find several implementation
examples in the documentation.

[golang-jwt](https://github.com/orgs/golang-jwt) incorporates a modified version
of the JWT logo, which is distributed under the terms of the [MIT
License](https://github.com/jsonwebtoken/jsonwebtoken.github.io/blob/master/LICENSE.txt).
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[anchore/syft]]></title>
            <link>https://github.com/anchore/syft</link>
            <guid>https://github.com/anchore/syft</guid>
            <pubDate>Fri, 16 May 2025 00:05:07 GMT</pubDate>
            <description><![CDATA[CLI tool and library for generating a Software Bill of Materials from container images and filesystems]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/anchore/syft">anchore/syft</a></h1>
            <p>CLI tool and library for generating a Software Bill of Materials from container images and filesystems</p>
            <p>Language: Go</p>
            <p>Stars: 6,988</p>
            <p>Forks: 651</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://user-images.githubusercontent.com/5199289/136844524-1527b09f-c5cb-4aa9-be54-5aa92a6086c1.png&quot; width=&quot;271&quot; alt=&quot;Cute pink owl syft logo&quot;&gt;
&lt;/p&gt;

# Syft

**A CLI tool and Go library for generating a Software Bill of Materials (SBOM) from container images and filesystems. Exceptional for vulnerability detection when used with a scanner like [Grype](https://github.com/anchore/grype).**

&lt;p align=&quot;center&quot;&gt;
 &amp;nbsp;&lt;a href=&quot;https://github.com/anchore/syft/actions/workflows/validations.yaml&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Validations&quot; src=&quot;https://github.com/anchore/syft/actions/workflows/validations.yaml/badge.svg&quot;&gt;&lt;/a&gt;&amp;nbsp;
 &amp;nbsp;&lt;a href=&quot;https://goreportcard.com/report/github.com/anchore/syft&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Go Report Card&quot; src=&quot;https://goreportcard.com/badge/github.com/anchore/syft&quot;&gt;&lt;/a&gt;&amp;nbsp;
 &amp;nbsp;&lt;a href=&quot;https://github.com/anchore/syft/releases/latest&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;GitHub release&quot; src=&quot;https://img.shields.io/github/release/anchore/syft.svg&quot;&gt;&lt;/a&gt;&amp;nbsp;
 &amp;nbsp;&lt;a href=&quot;https://github.com/anchore/syft&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;GitHub go.mod Go version&quot; src=&quot;https://img.shields.io/github/go-mod/go-version/anchore/syft.svg&quot;&gt;&lt;/a&gt;&amp;nbsp;
 &amp;nbsp;&lt;a href=&quot;&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;License: Apache-2.0&quot; src=&quot;https://img.shields.io/badge/License-Apache%202.0-blue.svg&quot;&gt;&lt;/a&gt;&amp;nbsp;
 &amp;nbsp;&lt;a href=&quot;https://anchore.com/discourse&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Join our Discourse&quot; src=&quot;https://img.shields.io/badge/Discourse-Join-blue?logo=discourse&quot;/&gt;&lt;/a&gt;&amp;nbsp;
 &amp;nbsp;&lt;a rel=&quot;me&quot; href=&quot;https://fosstodon.org/@syft&quot;&gt;&lt;img alt=&quot;Follow on Mastodon&quot; src=&quot;https://img.shields.io/badge/Mastodon-Follow-blue?logoColor=white&amp;logo=mastodon&quot;/&gt;&lt;/a&gt;&amp;nbsp;
&lt;/p&gt;

![syft-demo](https://user-images.githubusercontent.com/590471/90277200-2a253000-de33-11ea-893f-32c219eea11a.gif)

## Introduction

Syft is a powerful and easy-to-use open-source tool for generating Software Bill of Materials (SBOMs) for container images and filesystems. It provides detailed visibility into the packages and dependencies in your software, helping you manage vulnerabilities, license compliance, and software supply chain security.

Syft development is sponsored by [Anchore](https://anchore.com/), and is released under the [Apache-2.0 License](https://github.com/anchore/syft?tab=Apache-2.0-1-ov-file). For commercial support options with Syft or Grype, please [contact Anchore](https://get.anchore.com/contact/).

## Features
- Generates SBOMs for container images, filesystems, archives, and more to discover packages and libraries
- Supports OCI, Docker and [Singularity](https://github.com/sylabs/singularity) image formats
- Linux distribution identification
- Works seamlessly with [Grype](https://github.com/anchore/grype) (a fast, modern vulnerability scanner)
- Able to create signed SBOM attestations using the [in-toto specification](https://github.com/in-toto/attestation/blob/main/spec/README.md)
- Convert between SBOM formats, such as CycloneDX, SPDX, and Syft&#039;s own format.

## Installation

Syft binaries are provided for Linux, macOS and Windows.

### Recommended
&gt; ```bash 
&gt; curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
&gt; ```

Install script options:
-	`-b`: Specify a custom installation directory (defaults to `./bin`)
-	`-d`: More verbose logging levels (`-d` for debug, `-dd` for trace)
-	`-v`: Verify the signature of the downloaded artifact before installation (requires [`cosign`](https://github.com/sigstore/cosign) to be installed)

### Homebrew
```bash
brew install syft
```

### Scoop

```powershell
scoop install syft
```

### Chocolatey

The chocolatey distribution of Syft is community-maintained and not distributed by the Anchore team

```powershell
choco install syft -y
```

### Nix

**Note**: Nix packaging of Syft is [community maintained](https://github.com/NixOS/nixpkgs/blob/master/pkgs/by-name/sy/syft/package.nix). Syft is available in the [stable channel](https://wiki.nixos.org/wiki/Nix_channels#The_official_channels) since NixOS `22.05`.

```bash
nix-env -i syft
```

... or, just try it out in an ephemeral nix shell:

```bash
nix-shell -p syft
```

## Getting started

### SBOM

To generate an SBOM for a container image:

```bash
syft &lt;image&gt;
```

The above output includes only software that is visible in the container (i.e., the squashed representation of the image). To include software from all image layers in the SBOM, regardless of its presence in the final image, provide `--scope all-layers`:

```bash
syft &lt;image&gt; --scope all-layers
```

### Output formats

The output format for Syft is configurable as well using the `-o` (or `--output`) option:

```
syft &lt;image&gt; -o &lt;format&gt;
```

Where the `formats` available are:
- `syft-json`: Use this to get as much information out of Syft as possible!
- `syft-text`: A row-oriented, human-and-machine-friendly output.
- `cyclonedx-xml`: A XML report conforming to the [CycloneDX 1.6 specification](https://cyclonedx.org/specification/overview/).
- `cyclonedx-xml@1.5`: A XML report conforming to the [CycloneDX 1.5 specification](https://cyclonedx.org/specification/overview/).
- `cyclonedx-json`: A JSON report conforming to the [CycloneDX 1.6 specification](https://cyclonedx.org/specification/overview/).
- `cyclonedx-json@1.5`: A JSON report conforming to the [CycloneDX 1.5 specification](https://cyclonedx.org/specification/overview/).
- `spdx-tag-value`: A tag-value formatted report conforming to the [SPDX 2.3 specification](https://spdx.github.io/spdx-spec/v2.3/).
- `spdx-tag-value@2.2`: A tag-value formatted report conforming to the [SPDX 2.2 specification](https://spdx.github.io/spdx-spec/v2.2.2/).
- `spdx-json`: A JSON report conforming to the [SPDX 2.3 JSON Schema](https://github.com/spdx/spdx-spec/blob/v2.3/schemas/spdx-schema.json).
- `spdx-json@2.2`: A JSON report conforming to the [SPDX 2.2 JSON Schema](https://github.com/spdx/spdx-spec/blob/v2.2/schemas/spdx-schema.json).
- `github-json`: A JSON report conforming to GitHub&#039;s dependency snapshot format.
- `syft-table`: A columnar summary (default).
- `template`: Lets the user specify the output format. See [&quot;Using templates&quot;](#using-templates) below.

Note that flags using the @&lt;version&gt; can be used for earlier versions of each specification as well.

### Supported Ecosystems

- Alpine (apk)
- Bitnami packages
- C (conan)
- C++ (conan)
- Dart (pubs)
- Debian (dpkg)
- Dotnet (deps.json)
- Objective-C (cocoapods)
- Elixir (mix)
- Erlang (rebar3)
- Go (go.mod, Go binaries)
- Haskell (cabal, stack)
- Java (jar, ear, war, par, sar, nar, native-image)
- JavaScript (npm, yarn)
- Jenkins Plugins (jpi, hpi)
- Linux kernel archives (vmlinz)
- Linux kernel modules (ko)
- Nix (outputs in /nix/store)
- PHP (composer, PECL, Pear)
- Python (wheel, egg, poetry, requirements.txt)
- Red Hat (rpm)
- Ruby (gem)
- Rust (cargo.lock, auditable binary)
- Swift (cocoapods, swift-package-manager)
- Wordpress plugins
- Terraform providers (.terraform.lock.hcl)

## Documentation

Our [wiki](https://github.com/anchore/syft/wiki) contains further details on the following topics:

* [Supported Sources](https://github.com/anchore/syft/wiki/supported-sources)
* [File Selection](https://github.com/anchore/syft/wiki/file-selection)
* [Excluding file paths](https://github.com/anchore/syft/wiki/excluding-file-paths)
* [Output formats](https://github.com/anchore/syft/wiki/output-formats)
* [Package Cataloger Selection](https://github.com/anchore/syft/wiki/package-cataloger-selection) 
  * [Concepts](https://github.com/anchore/syft/wiki/package-cataloger-selection#concepts)
  * [Examples](https://github.com/anchore/syft/wiki/package-cataloger-selection#examples)
* [Using templates](https://github.com/anchore/syft/wiki/using-templates)
* [Multiple outputs](https://github.com/anchore/syft/wiki/multiple-outputs)
* [Private Registry Authentication](https://github.com/anchore/syft/wiki/private-registry-authentication)
  * [Local Docker Credentials](https://github.com/anchore/syft/wiki/private-registry-authentication#local-docker)
  * [Docker Credentials in Kubernetes](https://github.com/anchore/syft/wiki/private-registry-authentication#docker-credentials-in-kubernetes)
* [Attestation (experimental)](https://github.com/anchore/syft/wiki/attestation)
  * [Keyless Support](https://github.com/anchore/syft/wiki/attestation#keyless-support)
  * [Local private key support](https://github.com/anchore/syft/wiki/attestation#local-private-key-support)
  * [Adding an SBOM to an image as an attestation using Syft](https://github.com/anchore/syft/wiki/attestation#adding-an-sbom-to-an-image-as-an-attestation-using-syft)
* [Configuration](https://github.com/anchore/syft/wiki/configuration)

## Contributing

Check out our [contributing](/CONTRIBUTING.md) guide and [developer](/DEVELOPING.md) docs.

## Syft Team Meetings

The Syft Team hold regular community meetings online. All are welcome to join to bring topics for discussion. 
- Check the [calendar](https://calendar.google.com/calendar/u/0/r?cid=Y182OTM4dGt0MjRtajI0NnNzOThiaGtnM29qNEBncm91cC5jYWxlbmRhci5nb29nbGUuY29t) for the next meeting date. 
- Add items to the [agenda](https://docs.google.com/document/d/1ZtSAa6fj2a6KRWviTn3WoJm09edvrNUp4Iz_dOjjyY8/edit?usp=sharing) (join [this group](https://groups.google.com/g/anchore-oss-community) for write access to the [agenda](https://docs.google.com/document/d/1ZtSAa6fj2a6KRWviTn3WoJm09edvrNUp4Iz_dOjjyY8/edit?usp=sharing))
- See you there!

## Syft Logo

&lt;p xmlns:cc=&quot;http://creativecommons.org/ns#&quot; xmlns:dct=&quot;http://purl.org/dc/terms/&quot;&gt;&lt;a property=&quot;dct:title&quot; rel=&quot;cc:attributionURL&quot; href=&quot;https://anchore.com/wp-content/uploads/2024/11/syft-logo.svg&quot;&gt;Syft Logo&lt;/a&gt; by &lt;a rel=&quot;cc:attributionURL dct:creator&quot; property=&quot;cc:attributionName&quot; href=&quot;https://anchore.com/&quot;&gt;Anchore&lt;/a&gt; is licensed under &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot; target=&quot;_blank&quot; rel=&quot;license noopener noreferrer&quot; style=&quot;display:inline-block;&quot;&gt;CC BY 4.0&lt;img style=&quot;height:22px!important;margin-left:3px;vertical-align:text-bottom;&quot; src=&quot;https://mirrors.creativecommons.org/presskit/icons/cc.svg&quot; alt=&quot;&quot;&gt;&lt;img style=&quot;height:22px!important;margin-left:3px;vertical-align:text-bottom;&quot; src=&quot;https://mirrors.creativecommons.org/presskit/icons/by.svg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[hashicorp/terraform-provider-azurerm]]></title>
            <link>https://github.com/hashicorp/terraform-provider-azurerm</link>
            <guid>https://github.com/hashicorp/terraform-provider-azurerm</guid>
            <pubDate>Fri, 16 May 2025 00:05:06 GMT</pubDate>
            <description><![CDATA[Terraform provider for Azure Resource Manager]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/hashicorp/terraform-provider-azurerm">hashicorp/terraform-provider-azurerm</a></h1>
            <p>Terraform provider for Azure Resource Manager</p>
            <p>Language: Go</p>
            <p>Stars: 4,744</p>
            <p>Forks: 4,759</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>&lt;a href=&quot;https://terraform.io&quot;&gt;
    &lt;img src=&quot;.github/tf.png&quot; alt=&quot;Terraform logo&quot; title=&quot;Terraform&quot; align=&quot;left&quot; height=&quot;50&quot; /&gt;
&lt;/a&gt;

# Terraform Provider for Azure (Resource Manager)

The AzureRM Terraform Provider allows managing resources within Azure Resource Manager.

When using version 4.0 of the AzureRM Provider we recommend using the latest version of Terraform Core ([the latest version can be found here](https://developer.hashicorp.com/terraform/install)). 

* [Terraform Website](https://www.terraform.io)
* [AzureRM Provider Documentation](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs)
* [AzureRM Provider Usage Examples](https://github.com/hashicorp/terraform-provider-azurerm/tree/main/examples)
* [Slack Workspace for Contributors](https://terraform-azure.slack.com) ([Request Invite](https://join.slack.com/t/terraform-azure/shared_invite/enQtNDMzNjQ5NzcxMDc3LWNiY2ZhNThhNDgzNmY0MTM0N2MwZjE4ZGU0MjcxYjUyMzRmN2E5NjZhZmQ0ZTA1OTExMGNjYzA4ZDkwZDYxNDE))

## Usage Example

```hcl
# 1. Specify the version of the AzureRM Provider to use
terraform {
  required_providers {
    azurerm = {
      source = &quot;hashicorp/azurerm&quot;
      version = &quot;=4.0.0&quot;
    }
  }
}

# 2. Configure the AzureRM Provider
provider &quot;azurerm&quot; {
  # The AzureRM Provider supports authenticating using via the Azure CLI, a Managed Identity
  # and a Service Principal. More information on the authentication methods supported by
  # the AzureRM Provider can be found here:
  # https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs#authenticating-to-azure

  # The features block allows changing the behaviour of the Azure Provider, more
  # information can be found here:
  # https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/guides/features-block
  features {}
}

# 3. Create a resource group
resource &quot;azurerm_resource_group&quot; &quot;example&quot; {
  name     = &quot;example-resources&quot;
  location = &quot;West Europe&quot;
}

# 4. Create a virtual network within the resource group
resource &quot;azurerm_virtual_network&quot; &quot;example&quot; {
  name                = &quot;example-network&quot;
  resource_group_name = azurerm_resource_group.example.name
  location            = azurerm_resource_group.example.location
  address_space       = [&quot;10.0.0.0/16&quot;]
}
```

* [Usage documentation for the AzureRM Provider can be found in the Terraform Registry](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs).
* [Learn more about Terraform and the AzureRM Provider on HashiCorp Learn](https://learn.hashicorp.com/collections/terraform/azure-get-started).
* [Additional examples can be found in the `./examples` folder within this repository](https://github.com/hashicorp/terraform-provider-azurerm/tree/main/examples).

## Developing &amp; Contributing to the Provider

The [DEVELOPER.md](DEVELOPER.md) file is a basic outline on how to build and develop the provider while more detailed guides geared towards contributors can be found in the [`/contributing`](https://github.com/hashicorp/terraform-provider-azurerm/tree/main/contributing) directory of this repository.
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[jeessy2/ddns-go]]></title>
            <link>https://github.com/jeessy2/ddns-go</link>
            <guid>https://github.com/jeessy2/ddns-go</guid>
            <pubDate>Fri, 16 May 2025 00:05:05 GMT</pubDate>
            <description><![CDATA[Simple and easy to use DDNS. Support Aliyun, Tencent Cloud, Dnspod, Cloudflare, Callback, Huawei Cloud, Baidu Cloud, Porkbun, GoDaddy, Namecheap, NameSilo...]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/jeessy2/ddns-go">jeessy2/ddns-go</a></h1>
            <p>Simple and easy to use DDNS. Support Aliyun, Tencent Cloud, Dnspod, Cloudflare, Callback, Huawei Cloud, Baidu Cloud, Porkbun, GoDaddy, Namecheap, NameSilo...</p>
            <p>Language: Go</p>
            <p>Stars: 14,224</p>
            <p>Forks: 1,618</p>
            <p>Stars today: 24 stars today</p>
            <h2>README</h2><pre># ddns-go

[![GitHub release](https://img.shields.io/github/release/jeessy2/ddns-go.svg?logo=github&amp;style=flat-square) ![GitHub release downloads](https://img.shields.io/github/downloads/jeessy2/ddns-go/total?logo=github)](https://github.com/jeessy2/ddns-go/releases/latest) [![Go version](https://img.shields.io/github/go-mod/go-version/jeessy2/ddns-go)](https://github.com/jeessy2/ddns-go/blob/master/go.mod) [![](https://goreportcard.com/badge/github.com/jeessy2/ddns-go/v6)](https://goreportcard.com/report/github.com/jeessy2/ddns-go/v6) [![](https://img.shields.io/docker/image-size/jeessy/ddns-go)](https://registry.hub.docker.com/r/jeessy/ddns-go) [![](https://img.shields.io/docker/pulls/jeessy/ddns-go)](https://registry.hub.docker.com/r/jeessy/ddns-go)

‰∏≠Êñá | [English](https://github.com/jeessy2/ddns-go/blob/master/README_EN.md)

Ëá™Âä®Ëé∑Âæó‰Ω†ÁöÑÂÖ¨ÁΩë IPv4 Êàñ IPv6 Âú∞ÂùÄÔºåÂπ∂Ëß£ÊûêÂà∞ÂØπÂ∫îÁöÑÂüüÂêçÊúçÂä°„ÄÇ

- [ÁâπÊÄß](#ÁâπÊÄß)
- [Á≥ªÁªü‰∏≠‰ΩøÁî®](#Á≥ªÁªü‰∏≠‰ΩøÁî®)
- [Docker‰∏≠‰ΩøÁî®](#docker‰∏≠‰ΩøÁî®)
- [‰ΩøÁî®IPv6](#‰ΩøÁî®ipv6)
- [Webhook](#webhook)
- [Callback](#callback)
- [ÁïåÈù¢](#ÁïåÈù¢)
- [ÂºÄÂèë&amp;Ëá™Ë°åÁºñËØë](#ÂºÄÂèëËá™Ë°åÁºñËØë)

## ÁâπÊÄß

- ÊîØÊåÅMac„ÄÅWindows„ÄÅLinuxÁ≥ªÁªüÔºåÊîØÊåÅARM„ÄÅx86Êû∂ÊûÑ
- ÊîØÊåÅÁöÑÂüüÂêçÊúçÂä°ÂïÜ `ÈòøÈáå‰∫ë` `ËÖæËÆØ‰∫ë` `Dnspod` `Cloudflare` `Âçé‰∏∫‰∫ë` `Callback` `ÁôæÂ∫¶‰∫ë` `Porkbun` `GoDaddy` `Namecheap` `NameSilo` `Dynadot`
- ÊîØÊåÅÊé•Âè£/ÁΩëÂç°/[ÂëΩ‰ª§](https://github.com/jeessy2/ddns-go/wiki/ÈÄöËøáÂëΩ‰ª§Ëé∑ÂèñIPÂèÇËÄÉ)Ëé∑ÂèñIP
- ÊîØÊåÅ‰ª•ÊúçÂä°ÁöÑÊñπÂºèËøêË°å
- ÈªòËÆ§Èó¥Èöî5ÂàÜÈíüÂêåÊ≠•‰∏ÄÊ¨°
- ÊîØÊåÅÂêåÊó∂ÈÖçÁΩÆÂ§ö‰∏™DNSÊúçÂä°ÂïÜ
- ÊîØÊåÅÂ§ö‰∏™ÂüüÂêçÂêåÊó∂Ëß£Êûê
- ÊîØÊåÅÂ§öÁ∫ßÂüüÂêç
- ÁΩëÈ°µ‰∏≠ÈÖçÁΩÆÔºåÁÆÄÂçïÂèàÊñπ‰æøÔºåÈªòËÆ§ÂãæÈÄâ`Á¶ÅÊ≠¢‰ªéÂÖ¨ÁΩëËÆøÈóÆ`
- ÁΩëÈ°µ‰∏≠Êñπ‰æøÂø´ÈÄüÊü•ÁúãÊúÄËøë50Êù°Êó•Âøó
- ÊîØÊåÅWebhookÈÄöÁü•
- ÊîØÊåÅTTL
- ÊîØÊåÅÈÉ®ÂàÜDNSÊúçÂä°ÂïÜ[‰º†ÈÄíËá™ÂÆö‰πâÂèÇÊï∞](https://github.com/jeessy2/ddns-go/wiki/‰º†ÈÄíËá™ÂÆö‰πâÂèÇÊï∞)ÔºåÂÆûÁé∞Âú∞ÂüüËß£Êûê/Â§öIPÁ≠âÂäüËÉΩ

&gt; [!NOTE]
&gt; Âª∫ËÆÆÂú®ÂêØÁî®ÂÖ¨ÁΩëËÆøÈóÆÊó∂Ôºå‰ΩøÁî® Nginx Á≠âÂèçÂêë‰ª£ÁêÜËΩØ‰ª∂ÂêØÁî® HTTPS ËÆøÈóÆÔºå‰ª•‰øùËØÅÂÆâÂÖ®ÊÄß„ÄÇ[FAQ](https://github.com/jeessy2/ddns-go/wiki/FAQ)

## Á≥ªÁªü‰∏≠‰ΩøÁî®

- ‰ªé [Releases](https://github.com/jeessy2/ddns-go/releases) ‰∏ãËΩΩÂπ∂Ëß£Âéã ddns-go
- ÂÆâË£ÖÊúçÂä°
  - Mac/Linux: `sudo ./ddns-go -s install`
  - Win(‰ª•ÁÆ°ÁêÜÂëòÊâìÂºÄcmd): `.\ddns-go.exe -s install`
- ÈÖçÁΩÆ
  - ÊâìÂºÄÊµèËßàÂô®Âπ∂ËÆøÈóÆ`http://localhost:9876`ËøõË°åÂàùÂßãÂåñÈÖçÁΩÆ
- [ÂèØÈÄâ] ÊúçÂä°Âç∏ËΩΩ
  - Mac/Linux: `sudo ./ddns-go -s uninstall`
  - Win(‰ª•ÁÆ°ÁêÜÂëòÊâìÂºÄcmd): `.\ddns-go.exe -s uninstall`
- [ÂèØÈÄâ] ÊîØÊåÅÂÆâË£ÖÂ∏¶ÂèÇÊï∞
  - `-l` ÁõëÂê¨Âú∞ÂùÄ
  - `-f` ÂêåÊ≠•Èó¥ÈöîÊó∂Èó¥(Áßí)
  - `-cacheTimes` Èó¥ÈöîNÊ¨°‰∏éÊúçÂä°ÂïÜÊØîÂØπ
  - `-c` Ëá™ÂÆö‰πâÈÖçÁΩÆÊñá‰ª∂Ë∑ØÂæÑ
  - `-noweb` ‰∏çÂêØÂä®webÊúçÂä°
  - `-skipVerify` Ë∑≥ËøáËØÅ‰π¶È™åËØÅ
  - `-dns` Ëá™ÂÆö‰πâ DNS ÊúçÂä°Âô®
  - `-resetPassword` ÈáçÁΩÆÂØÜÁ†Å
- [ÂèØÈÄâ] ÂèÇËÄÉÁ§∫‰æã
  - 10ÂàÜÈíüÂêåÊ≠•‰∏ÄÊ¨°, Âπ∂ÊåáÂÆö‰∫ÜÈÖçÁΩÆÊñá‰ª∂Âú∞ÂùÄ
    ```bash
    ./ddns-go -s install -f 600 -c /Users/name/.ddns_go_config.yaml
    ```
  - ÊØè 10 ÁßíÊ£ÄÊü•‰∏ÄÊ¨°Êú¨Âú∞ IP ÂèòÂåñ, ÊØè 30 ÂàÜÈíüÂØπÊØî‰∏Ä‰∏ã IP ÂèòÂåñ, ÂÆûÁé∞ IP ÂèòÂåñÂç≥Êó∂Ëß¶ÂèëÊõ¥Êñ∞‰∏î‰∏ç‰ºöË¢´ÊúçÂä°ÂïÜÈôêÊµÅ, Â¶ÇÊûú‰ΩøÁî®Êé•Âè£Ëé∑ÂèñIP, ÈúÄË¶ÅÊ≥®ÊÑèÊé•Âè£ÈôêÊµÅ
    ```bash
    ./ddns-go -s install -f 10 -cacheTimes 180
    ```
  - ÈáçÁΩÆÂØÜÁ†Å
    ```bash
    ./ddns-go -resetPassword 123456
    ./ddns-go -resetPassword 123456 -c /Users/name/.ddns_go_config.yaml
    ```

## Docker‰∏≠‰ΩøÁî®

- ÊåÇËΩΩ‰∏ªÊú∫ÁõÆÂΩï, ‰ΩøÁî®docker hostÊ®°Âºè„ÄÇÂèØÊää `/opt/ddns-go` ÊõøÊç¢‰∏∫‰Ω†‰∏ªÊú∫‰ªªÊÑèÁõÆÂΩï, ÈÖçÁΩÆÊñá‰ª∂‰∏∫ÈöêËóèÊñá‰ª∂

  ```bash
  docker run -d --name ddns-go --restart=always --net=host -v /opt/ddns-go:/root jeessy/ddns-go
  ```

- ÊâìÂºÄÊµèËßàÂô®Âπ∂ËÆøÈóÆ`http://Docker‰∏ªÊú∫IP:9876`ËøõË°åÂàùÂßãÂåñÈÖçÁΩÆ

- [ÂèØÈÄâ] ‰ΩøÁî® `ghcr.io` ÈïúÂÉè

  ```bash
  docker run -d --name ddns-go --restart=always --net=host -v /opt/ddns-go:/root ghcr.io/jeessy2/ddns-go
  ```

- [ÂèØÈÄâ] ÊîØÊåÅÂêØÂä®Â∏¶ÂèÇÊï∞ `-l`ÁõëÂê¨Âú∞ÂùÄ `-f`Èó¥ÈöîÊó∂Èó¥(Áßí)

  ```bash
  docker run -d --name ddns-go --restart=always --net=host -v /opt/ddns-go:/root jeessy/ddns-go -l :9877 -f 600
  ```

- [ÂèØÈÄâ] ‰∏ç‰ΩøÁî®docker hostÊ®°Âºè

  ```bash
  docker run -d --name ddns-go --restart=always -p 9876:9876 -v /opt/ddns-go:/root jeessy/ddns-go
  ```

- [ÂèØÈÄâ] ÈáçÁΩÆÂØÜÁ†Å

  ```bash
  docker exec ddns-go ./ddns-go -resetPassword 123456
  docker restart ddns-go
  ```

## ‰ΩøÁî®IPv6

- ÂâçÊèêÔºö‰Ω†ÁöÑÁîµËÑëÊàñÁªàÁ´ØËÉΩÊ≠£Â∏∏Ëé∑ÂèñIPv6ÔºåÂπ∂ËÉΩÊ≠£Â∏∏ËÆøÈóÆIPv6
- Windows/MacÔºöÊé®Ëçê [Á≥ªÁªü‰∏≠‰ΩøÁî®](#Á≥ªÁªü‰∏≠‰ΩøÁî®)ÔºåWindows/MacÊ°åÈù¢ÁâàÁöÑdocker‰∏çÊîØÊåÅ`--net=host`
- Áæ§ÊôñÔºö
  - Â•ó‰ª∂‰∏≠ÂøÉ‰∏ãËΩΩdockerÂπ∂ÊâìÂºÄ
  - Ê≥®ÂÜåË°®‰∏≠ÊêúÁ¥¢`ddns-go`Âπ∂‰∏ãËΩΩ
  - Êò†ÂÉè -&gt; ÈÄâÊã©`jeessy/ddns-go` -&gt; ÂêØÂä® -&gt; È´òÁ∫ßËÆæÁΩÆ -&gt; ÁΩëÁªú‰∏≠ÂãæÈÄâ`‰ΩøÁî®‰∏é Docker Host Áõ∏ÂêåÁöÑÁΩëÁªú`ÔºåÈ´òÁ∫ßËÆæÁΩÆ‰∏≠ÂãæÈÄâ`ÂêØÂä®Ëá™Âä®ÈáçÊñ∞ÂêØÂä®`
  - Âú®ÊµèËßàÂô®‰∏≠ÊâìÂºÄ`http://Áæ§ÊôñIP:9876`Ôºå‰øÆÊîπ‰Ω†ÁöÑÈÖçÁΩÆÔºåÊàêÂäü
- LinuxÁöÑx86ÊàñarmÊû∂ÊûÑÔºåÊé®Ëçê‰ΩøÁî®DockerÁöÑ`--net=host`Ê®°Âºè„ÄÇÂèÇËÄÉ [Docker‰∏≠‰ΩøÁî®](#Docker‰∏≠‰ΩøÁî®)
- ËôöÊãüÊú∫‰∏≠‰ΩøÁî®ÊúâÂèØËÉΩÊ≠£Â∏∏Ëé∑ÂèñIPv6Ôºå‰ΩÜ‰∏çËÉΩÊ≠£Â∏∏ËÆøÈóÆIPv6

## Webhook

- ÊîØÊåÅwebhook, ÂüüÂêçÊõ¥Êñ∞ÊàêÂäüÊàñ‰∏çÊàêÂäüÊó∂, ‰ºöÂõûË∞ÉÂ°´ÂÜôÁöÑURL
- ÊîØÊåÅÁöÑÂèòÈáè

  |  ÂèòÈáèÂêç   | ËØ¥Êòé  |
  |  ----  | ----  |
  | #{ipv4Addr}  | Êñ∞ÁöÑIPv4Âú∞ÂùÄ |
  | #{ipv4Result}  | IPv4Âú∞ÂùÄÊõ¥Êñ∞ÁªìÊûú: `Êú™ÊîπÂèò` `Â§±Ë¥•` `ÊàêÂäü`|
  | #{ipv4Domains}  | IPv4ÁöÑÂüüÂêçÔºåÂ§ö‰∏™‰ª•`,`ÂàÜÂâ≤ |
  | #{ipv6Addr}  | Êñ∞ÁöÑIPv6Âú∞ÂùÄ |
  | #{ipv6Result}  | IPv6Âú∞ÂùÄÊõ¥Êñ∞ÁªìÊûú: `Êú™ÊîπÂèò` `Â§±Ë¥•` `ÊàêÂäü`|
  | #{ipv6Domains}  | IPv6ÁöÑÂüüÂêçÔºåÂ§ö‰∏™‰ª•`,`ÂàÜÂâ≤ |

- Â¶Ç RequestBody ‰∏∫Á©∫Âàô‰∏∫ GET ËØ∑Ê±ÇÔºåÂê¶Âàô‰∏∫ POST ËØ∑Ê±Ç
- &lt;details&gt;&lt;summary&gt;ServerÈÖ±&lt;/summary&gt;

  ```
  https://sctapi.ftqq.com/[SendKey].send?title=‰Ω†ÁöÑÂÖ¨ÁΩëIPÂèò‰∫Ü&amp;desp=‰∏ª‰∫∫IPv4Âèò‰∫Ü#{ipv4Addr},ÂüüÂêçÊõ¥Êñ∞ÁªìÊûú:#{ipv4Result}
  ```
- &lt;details&gt;&lt;summary&gt;Bark&lt;/summary&gt;

  ```
  https://api.day.app/[YOUR_KEY]/‰∏ª‰∫∫IPv4Âèò‰∫Ü#{ipv4Addr},ÂüüÂêçÊõ¥Êñ∞ÁªìÊûú:#{ipv4Result}
  ```
  &lt;/details&gt;
- &lt;details&gt;&lt;summary&gt;ÈíâÈíâ&lt;/summary&gt;

  - ÈíâÈíâÁîµËÑëÁ´Ø -&gt; Áæ§ËÆæÁΩÆ -&gt; Êô∫ËÉΩÁæ§Âä©Êâã -&gt; Ê∑ªÂä†Êú∫Âô®‰∫∫ -&gt; Ëá™ÂÆö‰πâ
  - Âè™ÂãæÈÄâ `Ëá™ÂÆö‰πâÂÖ≥ÈîÆËØç`, ËæìÂÖ•ÁöÑÂÖ≥ÈîÆÂ≠óÂøÖÈ°ªÂåÖÂê´Âú®RequestBodyÁöÑcontent‰∏≠, Â¶ÇÔºö`‰Ω†ÁöÑÂÖ¨ÁΩëIPÂèò‰∫Ü`
  - URL‰∏≠ËæìÂÖ•ÈíâÈíâÁªô‰Ω†ÁöÑ `WebhookÂú∞ÂùÄ`
  - RequestBody‰∏≠ËæìÂÖ•
    ```json
    {
        &quot;msgtype&quot;: &quot;markdown&quot;,
        &quot;markdown&quot;: {
            &quot;title&quot;: &quot;‰Ω†ÁöÑÂÖ¨ÁΩëIPÂèò‰∫Ü&quot;,
            &quot;text&quot;: &quot;#### ‰Ω†ÁöÑÂÖ¨ÁΩëIPÂèò‰∫Ü \n - IPv4Âú∞ÂùÄÔºö#{ipv4Addr} \n - ÂüüÂêçÊõ¥Êñ∞ÁªìÊûúÔºö#{ipv4Result} \n&quot;
        }
    }
    ```
  &lt;/details&gt;
- &lt;details&gt;&lt;summary&gt;È£û‰π¶&lt;/summary&gt;

  - È£û‰π¶ÁîµËÑëÁ´Ø -&gt; Áæ§ËÆæÁΩÆ -&gt; Ê∑ªÂä†Êú∫Âô®‰∫∫ -&gt; Ëá™ÂÆö‰πâÊú∫Âô®‰∫∫
  - ÂÆâÂÖ®ËÆæÁΩÆÂè™ÂãæÈÄâ `Ëá™ÂÆö‰πâÂÖ≥ÈîÆËØç`, ËæìÂÖ•ÁöÑÂÖ≥ÈîÆÂ≠óÂøÖÈ°ªÂåÖÂê´Âú®RequestBodyÁöÑcontent‰∏≠, Â¶ÇÔºö`‰Ω†ÁöÑÂÖ¨ÁΩëIPÂèò‰∫Ü`
  - URL‰∏≠ËæìÂÖ•È£û‰π¶Áªô‰Ω†ÁöÑ `WebhookÂú∞ÂùÄ`
  - RequestBody‰∏≠ËæìÂÖ•
    ```json
    {
        &quot;msg_type&quot;: &quot;post&quot;,
        &quot;content&quot;: {
            &quot;post&quot;: {
                &quot;zh_cn&quot;: {
                    &quot;title&quot;: &quot;‰Ω†ÁöÑÂÖ¨ÁΩëIPÂèò‰∫Ü&quot;,
                    &quot;content&quot;: [
                        [
                            {
                                &quot;tag&quot;: &quot;text&quot;,
                                &quot;text&quot;: &quot;IPv4Âú∞ÂùÄÔºö#{ipv4Addr}&quot;
                            }
                        ],
                        [
                            {
                                &quot;tag&quot;: &quot;text&quot;,
                                &quot;text&quot;: &quot;ÂüüÂêçÊõ¥Êñ∞ÁªìÊûúÔºö#{ipv4Result}&quot;
                            }
                        ]
                    ]
                }
            }
        }
    }
    ```
  &lt;/details&gt;
- &lt;details&gt;&lt;summary&gt;Telegram&lt;/summary&gt;

  [ddns-telegram-bot](https://github.com/WingLim/ddns-telegram-bot)
  &lt;/details&gt;
- &lt;details&gt;&lt;summary&gt;plusplus Êé®ÈÄÅÂä†&lt;/summary&gt;

  - [Ëé∑Âèñtoken](https://www.pushplus.plus/push1.html)
  - URL‰∏≠ËæìÂÖ• `https://www.pushplus.plus/send`
  - RequestBody‰∏≠ËæìÂÖ•
    ```json
    {
        &quot;token&quot;: &quot;your token&quot;,
        &quot;title&quot;: &quot;‰Ω†ÁöÑÂÖ¨ÁΩëIPÂèò‰∫Ü&quot;,
        &quot;content&quot;: &quot;‰Ω†ÁöÑÂÖ¨ÁΩëIPÂèò‰∫Ü \n - IPv4Âú∞ÂùÄÔºö#{ipv4Addr} \n - ÂüüÂêçÊõ¥Êñ∞ÁªìÊûúÔºö#{ipv4Result} \n&quot;
    }
    ```
  &lt;/details&gt;
- &lt;details&gt;&lt;summary&gt;Discord&lt;/summary&gt;

  - Discord‰ªªÊÑèÂÆ¢Êà∑Á´Ø -&gt; ‰º∫ÊúçÂô® -&gt; È¢ëÈÅìËÆæÁΩÆ -&gt; Êï¥Âêà -&gt; Êü•ÁúãWebhook -&gt; Êñ∞Webhook -&gt; Â§çÂà∂WebhookÁΩëÂùÄ
  - URL‰∏≠ËæìÂÖ•DiscordÂ§çÂà∂ÁöÑ `WebhookÁΩëÂùÄ`
  - RequestBody‰∏≠ËæìÂÖ•
    ```json
    {
        &quot;content&quot;: &quot;ÂüüÂêç #{ipv4Domains} Âä®ÊÄÅËß£Êûê #{ipv4Result}.&quot;,
        &quot;embeds&quot;: [
            {
                &quot;description&quot;: &quot;#{ipv4Domains} ÁöÑÂä®ÊÄÅËß£Êûê #{ipv4Result}, IP: #{ipv4Addr}&quot;,
                &quot;color&quot;: 15258703,
                &quot;author&quot;: {
                    &quot;name&quot;: &quot;DDNS&quot;
                },
                &quot;footer&quot;: {
                    &quot;text&quot;: &quot;DDNS #{ipv4Result}&quot;
                }
            }
        ]
    }
    ```
  &lt;/details&gt;

- [Êü•ÁúãÊõ¥Â§öWebhookÈÖçÁΩÆÂèÇËÄÉ](https://github.com/jeessy2/ddns-go/issues/327)

## Callback

- ÈÄöËøáËá™ÂÆö‰πâÂõûË∞ÉÂèØÊîØÊåÅÊõ¥Â§öÁöÑÁ¨¨‰∏âÊñπDNSÊúçÂä°ÂïÜ
- ÈÖçÁΩÆÁöÑÂüüÂêçÊúâÂá†Ë°å, Â∞±‰ºöÂõûË∞ÉÂá†Ê¨°
- ÊîØÊåÅÁöÑÂèòÈáè

  |  ÂèòÈáèÂêç   | ËØ¥Êòé  |
  |  ----  | ----  |
  | #{ip}  | Êñ∞ÁöÑIPv4/IPv6Âú∞ÂùÄ |
  | #{domain}  | ÂΩìÂâçÂüüÂêç |
  | #{recordType}  | ËÆ∞ÂΩïÁ±ªÂûã `A`Êàñ`AAAA` |
  | #{ttl}  | TTL |
- Â¶Ç RequestBody ‰∏∫Á©∫Âàô‰∏∫ GET ËØ∑Ê±ÇÔºåÂê¶Âàô‰∏∫ POST ËØ∑Ê±Ç
- [CallbackÈÖçÁΩÆÂèÇËÄÉ](https://github.com/jeessy2/ddns-go/wiki/CallbackÈÖçÁΩÆÂèÇËÄÉ)

## ÁïåÈù¢

![screenshots](https://raw.githubusercontent.com/jeessy2/ddns-go/master/ddns-web.png)

## ÂºÄÂèë&amp;Ëá™Ë°åÁºñËØë

- Â¶ÇÊûúÂñúÊ¨¢‰ªéÊ∫ê‰ª£Á†ÅÁºñËØëËá™Â∑±ÁöÑÁâàÊú¨ÔºåÂèØ‰ª•‰ΩøÁî®Êú¨È°πÁõÆÊèê‰æõÁöÑ Makefile ÊûÑÂª∫
- ‰ΩøÁî® `make build` ÁîüÊàêÊú¨Âú∞ÁºñËØëÂêéÁöÑ `ddns-go` ÂèØÊâßË°åÊñá‰ª∂
- ‰ΩøÁî® `make build_docker_image` Ëá™Ë°åÁºñËØë Docker ÈïúÂÉè
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[gruntwork-io/terragrunt]]></title>
            <link>https://github.com/gruntwork-io/terragrunt</link>
            <guid>https://github.com/gruntwork-io/terragrunt</guid>
            <pubDate>Fri, 16 May 2025 00:05:04 GMT</pubDate>
            <description><![CDATA[Terragrunt is a flexible orchestration tool that allows Infrastructure as Code written in OpenTofu/Terraform to scale.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/gruntwork-io/terragrunt">gruntwork-io/terragrunt</a></h1>
            <p>Terragrunt is a flexible orchestration tool that allows Infrastructure as Code written in OpenTofu/Terraform to scale.</p>
            <p>Language: Go</p>
            <p>Stars: 8,639</p>
            <p>Forks: 1,041</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre># Terragrunt

[![Maintained by Gruntwork.io](https://img.shields.io/badge/maintained%20by-gruntwork.io-%235849a6.svg)](https://gruntwork.io/?ref=repo_terragrunt)
[![Go Report Card](https://goreportcard.com/badge/github.com/gruntwork-io/terragrunt)](https://goreportcard.com/report/github.com/gruntwork-io/terragrunt)
[![GoDoc](https://godoc.org/github.com/gruntwork-io/terragrunt?status.svg)](https://godoc.org/github.com/gruntwork-io/terragrunt)
![OpenTofu Version](https://img.shields.io/badge/tofu-%3E%3D1.6.0-blue.svg)
![Terraform Version](https://img.shields.io/badge/tf-%3E%3D0.12.0-blue.svg)

Terragrunt is a flexible orchestration tool that allows Infrastructure as Code written in [OpenTofu](https://opentofu.org)/[Terraform](https://www.terraform.io) to scale.

Please see the following for more info, including install instructions and complete documentation:

* [Terragrunt Website](https://terragrunt.gruntwork.io)
* [Getting started with Terragrunt](https://terragrunt.gruntwork.io/docs/getting-started/quick-start/)
* [Terragrunt Documentation](https://terragrunt.gruntwork.io/docs)
* [Contributing to Terragrunt](https://terragrunt.gruntwork.io/docs/community/contributing)
* [Commercial Support](https://gruntwork.io/support/)

## Join the Discord!

Join [our community](https://discord.gg/YENaT9h8jh) for discussions, support, and contributions:

[![](https://dcbadge.limes.pink/api/server/https://discord.gg/YENaT9h8jh)](https://discord.gg/YENaT9h8jh)

## License

This code is released under the MIT License. See [LICENSE.txt](LICENSE.txt).

</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[lejianwen/rustdesk-api]]></title>
            <link>https://github.com/lejianwen/rustdesk-api</link>
            <guid>https://github.com/lejianwen/rustdesk-api</guid>
            <pubDate>Fri, 16 May 2025 00:05:03 GMT</pubDate>
            <description><![CDATA[Custom Rustdesk Api Server, include web admin ,web client, web client v2 preview and oidc login]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/lejianwen/rustdesk-api">lejianwen/rustdesk-api</a></h1>
            <p>Custom Rustdesk Api Server, include web admin ,web client, web client v2 preview and oidc login</p>
            <p>Language: Go</p>
            <p>Stars: 1,083</p>
            <p>Forks: 236</p>
            <p>Stars today: 50 stars today</p>
            <h2>README</h2><pre># RustDesk API

[English Doc](README_EN.md)

Êú¨È°πÁõÆ‰ΩøÁî® Go ÂÆûÁé∞‰∫Ü RustDesk ÁöÑ APIÔºåÂπ∂ÂåÖÂê´‰∫Ü Web Admin Âíå Web ÂÆ¢Êà∑Á´Ø„ÄÇRustDesk ÊòØ‰∏Ä‰∏™ËøúÁ®ãÊ°åÈù¢ËΩØ‰ª∂ÔºåÊèê‰æõ‰∫ÜËá™ÊâòÁÆ°ÁöÑËß£ÂÜ≥ÊñπÊ°à„ÄÇ

&lt;div align=center&gt;
&lt;img src=&quot;https://img.shields.io/badge/golang-1.22-blue&quot;/&gt;
&lt;img src=&quot;https://img.shields.io/badge/gin-v1.9.0-lightBlue&quot;/&gt;
&lt;img src=&quot;https://img.shields.io/badge/gorm-v1.25.7-green&quot;/&gt;
&lt;img src=&quot;https://img.shields.io/badge/swag-v1.16.3-yellow&quot;/&gt;
&lt;img src=&quot;https://goreportcard.com/badge/github.com/lejianwen/rustdesk-api/v2&quot;/&gt;
&lt;img src=&quot;https://github.com/lejianwen/rustdesk-api/actions/workflows/build.yml/badge.svg&quot;/&gt;
&lt;/div&gt;

# ÁâπÊÄß

- PCÁ´ØAPI
    - ‰∏™‰∫∫ÁâàAPI
    - ÁôªÂΩï
    - Âú∞ÂùÄÁ∞ø
    - Áæ§ÁªÑ
    - ÊéàÊùÉÁôªÂΩï
      - ÊîØÊåÅ`github`, `google` Âíå `OIDC` ÁôªÂΩïÔºå
      - ÊîØÊåÅ`webÂêéÂè∞`ÊéàÊùÉÁôªÂΩï
      - ÊîØÊåÅ`LDAP`(ADÂíåOpenLDAPÂ∑≤ÊµãËØï), Â¶ÇÊûúAPI ServerÈÖçÁΩÆ‰∫ÜLDAP
    - i18n
- Web Admin
    - Áî®Êà∑ÁÆ°ÁêÜ
    - ËÆæÂ§áÁÆ°ÁêÜ
    - Âú∞ÂùÄÁ∞øÁÆ°ÁêÜ
    - Ê†áÁ≠æÁÆ°ÁêÜ
    - Áæ§ÁªÑÁÆ°ÁêÜ
    - Oauth ÁÆ°ÁêÜ
    - ÈÖçÁΩÆLDAP, ÈÖçÁΩÆÊñá‰ª∂ÊàñËÄÖÁéØÂ¢ÉÂèòÈáè
    - ÁôªÂΩïÊó•Âøó
    - ÈìæÊé•Êó•Âøó
    - Êñá‰ª∂‰º†ËæìÊó•Âøó
    - Âø´ÈÄü‰ΩøÁî®web client
    - i18n
    - ÈÄöËøá web client ÂàÜ‰∫´ÁªôÊ∏∏ÂÆ¢
    - serverÊéßÂà∂(‰∏Ä‰∫õÂÆòÊñπÁöÑÁÆÄÂçïÁöÑÊåá‰ª§ [WIKI](https://github.com/lejianwen/rustdesk-api/wiki/Rustdesk-Command))
- Web Client
    - Ëá™Âä®Ëé∑ÂèñAPI server
    - Ëá™Âä®Ëé∑ÂèñIDÊúçÂä°Âô®ÂíåKEY
    - Ëá™Âä®Ëé∑ÂèñÂú∞ÂùÄÁ∞ø
    - Ê∏∏ÂÆ¢ÈÄöËøá‰∏¥Êó∂ÂàÜ‰∫´ÈìæÊé•Áõ¥Êé•ËøúÁ®ãÂà∞ËÆæÂ§á
    - v2 Preview
- CLI
    - ÈáçÁΩÆÁÆ°ÁêÜÂëòÂØÜÁ†Å

## ÂäüËÉΩ


### API ÊúçÂä° 
Âü∫Êú¨ÂÆûÁé∞‰∫ÜPCÁ´ØÂü∫Á°ÄÁöÑÊé•Âè£„ÄÇÊîØÊåÅPersonalÁâàÊú¨Êé•Âè£ÔºåÂèØ‰ª•ÈÄöËøáÈÖçÁΩÆÊñá‰ª∂`rustdesk.personal`ÊàñÁéØÂ¢ÉÂèòÈáè`RUSTDESK_API_RUSTDESK_PERSONAL`Êù•ÊéßÂà∂ÊòØÂê¶ÂêØÁî®

&lt;table&gt;
    &lt;tr&gt;
      &lt;td width=&quot;50%&quot; align=&quot;center&quot; colspan=&quot;2&quot;&gt;&lt;b&gt;ÁôªÂΩï&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td width=&quot;50%&quot; align=&quot;center&quot; colspan=&quot;2&quot;&gt;&lt;img src=&quot;docs/pc_login.png&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td width=&quot;50%&quot; align=&quot;center&quot;&gt;&lt;b&gt;Âú∞ÂùÄÁ∞ø&lt;/b&gt;&lt;/td&gt;
      &lt;td width=&quot;50%&quot; align=&quot;center&quot;&gt;&lt;b&gt;Áæ§ÁªÑ&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td width=&quot;50%&quot; align=&quot;center&quot;&gt;&lt;img src=&quot;docs/pc_ab.png&quot;&gt;&lt;/td&gt;
        &lt;td width=&quot;50%&quot; align=&quot;center&quot;&gt;&lt;img src=&quot;docs/pc_gr.png&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

### Web Admin:

* ‰ΩøÁî®ÂâçÂêéÁ´ØÂàÜÁ¶ªÔºåÊèê‰æõÁî®Êà∑ÂèãÂ•ΩÁöÑÁÆ°ÁêÜÁïåÈù¢Ôºå‰∏ªË¶ÅÁî®Êù•ÁÆ°ÁêÜÂíåÂ±ïÁ§∫„ÄÇÂâçÁ´Ø‰ª£Á†ÅÂú®[rustdesk-api-web](https://github.com/lejianwen/rustdesk-api-web)

* ÂêéÂè∞ËÆøÈóÆÂú∞ÂùÄÊòØ`http://&lt;your server&gt;[:port]/_admin/`
* ÂàùÊ¨°ÂÆâË£ÖÁÆ°ÁêÜÂëò‰∏∫Áî®Êà∑Âêç‰∏∫`admin`ÔºåÂØÜÁ†ÅÂ∞ÜÂú®ÊéßÂà∂Âè∞ÊâìÂç∞ÔºåÂèØ‰ª•ÈÄöËøá[ÂëΩ‰ª§Ë°å](#CLI)Êõ¥ÊîπÂØÜÁ†Å

  ![img.png](./docs/init_admin_pwd.png)

1. ÁÆ°ÁêÜÂëòÁïåÈù¢
   ![web_admin](docs/web_admin.png)
2. ÊôÆÈÄöÁî®Êà∑ÁïåÈù¢
   ![web_user](docs/web_admin_user.png)

3. ÊØè‰∏™Áî®Êà∑ÂèØ‰ª•Â§ö‰∏™Âú∞ÂùÄÁ∞øÔºå‰πüÂèØ‰ª•Â∞ÜÂú∞ÂùÄÁ∞øÂÖ±‰∫´ÁªôÂÖ∂‰ªñÁî®Êà∑
4. ÂàÜÁªÑÂèØ‰ª•Ëá™ÂÆö‰πâÔºåÊñπ‰æøÁÆ°ÁêÜÔºåÊöÇÊó∂ÊîØÊåÅ‰∏§ÁßçÁ±ªÂûã: `ÂÖ±‰∫´ÁªÑ` Âíå `ÊôÆÈÄöÁªÑ`
5. ÂèØ‰ª•Áõ¥Êé•ÊâìÂºÄwebclientÔºåÊñπ‰æø‰ΩøÁî®Ôºõ‰πüÂèØ‰ª•ÂàÜ‰∫´ÁªôÊ∏∏ÂÆ¢ÔºåÊ∏∏ÂÆ¢ÂèØ‰ª•Áõ¥Êé•ÈÄöËøáwebclientËøúÁ®ãÂà∞ËÆæÂ§á
6. Oauth,ÊîØÊåÅ‰∫Ü`Github`, `Google` ‰ª•Âèä `OIDC`, ÈúÄË¶ÅÂàõÂª∫‰∏Ä‰∏™`OAuth App`ÔºåÁÑ∂ÂêéÈÖçÁΩÆÂà∞ÂêéÂè∞
    - ÂØπ‰∫é`Google` Âíå `Github`, `Issuer` Âíå `Scopes`‰∏çÈúÄË¶ÅÂ°´ÂÜô.
    - ÂØπ‰∫é`OIDC`, `Issuer`ÊòØÂøÖÈ°ªÁöÑ„ÄÇ`Scopes`ÊòØÂèØÈÄâÁöÑÔºåÈªòËÆ§‰∏∫ `openid,profile,email`. Á°Æ‰øùÂèØ‰ª•Ëé∑Âèñ `sub`,`email` Âíå`preferred_username`
    - `github oauth app`Âú®`Settings`-&gt;`Developer settings`-&gt;`OAuth Apps`-&gt;`New OAuth App`
      ‰∏≠ÂàõÂª∫,Âú∞ÂùÄ [https://github.com/settings/developers](https://github.com/settings/developers)
    - `Authorization callback URL`Â°´ÂÜô`http://&lt;your server[:port]&gt;/api/oauth/callback`
      ÔºåÊØîÂ¶Ç`http://127.0.0.1:21114/api/oauth/callback`
7. ÁôªÂΩïÊó•Âøó
8. ÈìæÊé•Êó•Âøó
9. Êñá‰ª∂‰º†ËæìÊó•Âøó
10. serverÊéßÂà∂

  - `ÁÆÄÊòìÊ®°Âºè`,Â∑≤ÁªèÁïåÈù¢Âåñ‰∫Ü‰∏Ä‰∫õÁÆÄÂçïÁöÑÊåá‰ª§ÔºåÂèØ‰ª•Áõ¥Êé•Âú®ÂêéÂè∞ÊâßË°å
    ![rustdesk_command_simple](./docs/rustdesk_command_simple.png)

  - `È´òÁ∫ßÊ®°Âºè`,Áõ¥Êé•Âú®ÂêéÂè∞ÊâßË°åÊåá‰ª§
      * ÂèØ‰ª•ÂÆòÊñπÊåá‰ª§
      * ÂèØ‰ª•Ê∑ªÂä†Ëá™ÂÆö‰πâÊåá‰ª§
      * ÂèØ‰ª•ÊâßË°åËá™ÂÆö‰πâÊåá‰ª§

 
11. **LDAP ÊîØÊåÅ**, ÂΩìÂú®API Server‰∏äËÆæÁΩÆ‰∫ÜLDAP(Â∑≤ÊµãËØïADÂíåLDAP),ÂèØ‰ª•ÈÄöËøáLDAP‰∏≠ÁöÑÁî®Êà∑‰ø°ÊÅØËøõË°åÁôªÂΩï https://github.com/lejianwen/rustdesk-api/issues/114 ,Â¶ÇÊûúLDAPÈ™åËØÅÂ§±Ë¥•ÔºåËøîÂõûÊú¨Âú∞Áî®Êà∑

### Web Client:

1. Â¶ÇÊûúÂ∑≤ÁªèÁôªÂΩï‰∫ÜÂêéÂè∞Ôºåweb clientÂ∞ÜËá™Âä®Áõ¥Êé•ÁôªÂΩï
2. Â¶ÇÊûúÊ≤°ÁôªÂΩïÂêéÂè∞ÔºåÁÇπÂáªÂè≥‰∏äËßíÁôªÂΩïÂç≥ÂèØÔºåapi serverÂ∑≤ÁªèËá™Âä®ÈÖçÁΩÆÂ•Ω‰∫Ü
3. ÁôªÂΩïÂêéÔºå‰ºöËá™Âä®ÂêåÊ≠•IDÊúçÂä°Âô®ÂíåKEY
4. ÁôªÂΩïÂêéÔºå‰ºöÂ∞ÜÂú∞ÂùÄÁ∞øËá™Âä®‰øùÂ≠òÂà∞web client‰∏≠ÔºåÊñπ‰æø‰ΩøÁî®
5. Áé∞Â∑≤ÊîØÊåÅ`v2 Preview`ÔºåËÆøÈóÆË∑ØÂæÑÊòØ`/webclient2`
   ![webclientv2](./docs/webclientv2.png)
6. `v2 preview` ÈÉ®ÁΩ≤ÔºåÂèÇËÄÉ[WIKI](https://github.com/lejianwen/rustdesk-api/wiki)


### Ëá™Âä®ÂåñÊñáÊ°£: ‰ΩøÁî® Swag ÁîüÊàê API ÊñáÊ°£ÔºåÊñπ‰æøÂºÄÂèëËÄÖÁêÜËß£Âíå‰ΩøÁî® API„ÄÇ

1. ÂêéÂè∞ÊñáÊ°£ `&lt;youer server[:port]&gt;/admin/swagger/index.html`
2. PCÁ´ØÊñáÊ°£ `&lt;youer server[:port]&gt;/swagger/index.html`
   ![api_swag](docs/api_swag.png)

### CLI

```bash
# Êü•ÁúãÂ∏ÆÂä©
./apimain -h
```

#### ÈáçÁΩÆÁÆ°ÁêÜÂëòÂØÜÁ†Å
```bash
./apimain reset-admin-pwd &lt;pwd&gt;
```

## ÂÆâË£Ö‰∏éËøêË°å

### Áõ∏ÂÖ≥ÈÖçÁΩÆ

* [ÈÖçÁΩÆÊñá‰ª∂](./conf/config.yaml)
* ÂèÇËÄÉ`conf/config.yaml`ÈÖçÁΩÆÊñá‰ª∂Ôºå‰øÆÊîπÁõ∏ÂÖ≥ÈÖçÁΩÆ„ÄÇ
* Â¶ÇÊûú`gorm.type`ÊòØ`sqlite`ÔºåÂàô‰∏çÈúÄË¶ÅÈÖçÁΩÆmysqlÁõ∏ÂÖ≥ÈÖçÁΩÆ„ÄÇ
* ËØ≠Ë®ÄÂ¶ÇÊûú‰∏çËÆæÁΩÆÈªòËÆ§‰∏∫`zh-CN`

### ÁéØÂ¢ÉÂèòÈáè
ÁéØÂ¢ÉÂèòÈáèÂíåÈÖçÁΩÆÊñá‰ª∂`conf/config.yaml`‰∏≠ÁöÑÈÖçÁΩÆ‰∏Ä‰∏ÄÂØπÂ∫îÔºåÂèòÈáèÂêçÂâçÁºÄÊòØ`RUSTDESK_API`
‰∏ãÈù¢Ë°®Ê†ºÂπ∂Êú™ÂÖ®ÈÉ®ÂàóÂá∫ÔºåÂèØ‰ª•ÂèÇËÄÉ`conf/config.yaml`‰∏≠ÁöÑÈÖçÁΩÆ„ÄÇ

| ÂèòÈáèÂêç                                                    | ËØ¥Êòé                                                                             | Á§∫‰æã                           |
|--------------------------------------------------------|--------------------------------------------------------------------------------|------------------------------|
| TZ                                                     | Êó∂Âå∫                                                                             | Asia/Shanghai                |
| RUSTDESK_API_LANG                                      | ËØ≠Ë®Ä                                                                             | `en`,`zh-CN`                 |
| RUSTDESK_API_APP_WEB_CLIENT                            | ÊòØÂê¶ÂêØÁî®web-client; 1:ÂêØÁî®,0:‰∏çÂêØÁî®; ÈªòËÆ§ÂêØÁî®                                               | 1                            |
| RUSTDESK_API_APP_REGISTER                              | ÊòØÂê¶ÂºÄÂêØÊ≥®ÂÜå; `true`, `false`  ÈªòËÆ§`false`                                             | `false`                      |
| RUSTDESK_API_APP_SHOW_SWAGGER                          | ÊòØÂê¶ÂèØËßÅswaggerÊñáÊ°£;`1`ÊòæÁ§∫Ôºå`0`‰∏çÊòæÁ§∫ÔºåÈªòËÆ§`0`‰∏çÊòæÁ§∫                                            | `1`                          |
| RUSTDESK_API_APP_TOKEN_EXPIRE                          | tokenÊúâÊïàÊó∂Èïø                                                                      | `168h`                       |
| RUSTDESK_API_APP_DISABLE_PWD_LOGIN                     | ÊòØÂê¶Á¶ÅÁî®ÂØÜÁ†ÅÁôªÂΩï;  `true`, `false`  ÈªòËÆ§`false`                                          | `false`                      |
| -----ADMINÈÖçÁΩÆ-----                                      | ----------                                                                     | ----------                   |
| RUSTDESK_API_ADMIN_TITLE                               | ÂêéÂè∞Ê†áÈ¢ò                                                                           | `RustDesk Api Admin`         |
| RUSTDESK_API_ADMIN_HELLO                               | ÂêéÂè∞Ê¨¢ËøéËØ≠ÔºåÂèØ‰ª•‰ΩøÁî®`html`                                                               |                              |
| RUSTDESK_API_ADMIN_HELLO_FILE                          | ÂêéÂè∞Ê¨¢ËøéËØ≠Êñá‰ª∂ÔºåÂ¶ÇÊûúÂÜÖÂÆπÂ§öÔºå‰ΩøÁî®Êñá‰ª∂Êõ¥Êñπ‰æø„ÄÇ&lt;br&gt;‰ºöË¶ÜÁõñ`RUSTDESK_API_ADMIN_HELLO`                        | `./conf/admin/hello.html`    |
| -----GINÈÖçÁΩÆ-----                                        | ----------                                                                     | ----------                   |
| RUSTDESK_API_GIN_TRUST_PROXY                           | ‰ø°‰ªªÁöÑ‰ª£ÁêÜIPÂàóË°®Ôºå‰ª•`,`ÂàÜÂâ≤ÔºåÈªòËÆ§‰ø°‰ªªÊâÄÊúâ                                                        | 192.168.1.2,192.168.1.3      |
| -----GORMÈÖçÁΩÆ-----                                       | ----------                                                                     | ---------------------------  |
| RUSTDESK_API_GORM_TYPE                                 | Êï∞ÊçÆÂ∫ìÁ±ªÂûãsqliteÊàñËÄÖmysqlÔºåÈªòËÆ§sqlite                                                    | sqlite                       |
| RUSTDESK_API_GORM_MAX_IDLE_CONNS                       | Êï∞ÊçÆÂ∫ìÊúÄÂ§ßÁ©∫Èó≤ËøûÊé•Êï∞                                                                     | 10                           |
| RUSTDESK_API_GORM_MAX_OPEN_CONNS                       | Êï∞ÊçÆÂ∫ìÊúÄÂ§ßÊâìÂºÄËøûÊé•Êï∞                                                                     | 100                          |
| RUSTDESK_API_RUSTDESK_PERSONAL                         | ÊòØÂê¶ÂêØÁî®‰∏™‰∫∫ÁâàAPIÔºå 1:ÂêØÁî®,0:‰∏çÂêØÁî®Ôºõ ÈªòËÆ§ÂêØÁî®                                                   | 1                            |
| -----MYSQLÈÖçÁΩÆ-----                                      | ----------                                                                     | ----------                   |
| RUSTDESK_API_MYSQL_USERNAME                            | mysqlÁî®Êà∑Âêç                                                                       | root                         |
| RUSTDESK_API_MYSQL_PASSWORD                            | mysqlÂØÜÁ†Å                                                                        | 111111                       |
| RUSTDESK_API_MYSQL_ADDR                                | mysqlÂú∞ÂùÄ                                                                        | 192.168.1.66:3306            |
| RUSTDESK_API_MYSQL_DBNAME                              | mysqlÊï∞ÊçÆÂ∫ìÂêç                                                                      | rustdesk                     |
| -----RUSTDESKÈÖçÁΩÆ-----                                   | ----------                                                                     | ----------                   |
| RUSTDESK_API_RUSTDESK_ID_SERVER                        | RustdeskÁöÑidÊúçÂä°Âô®Âú∞ÂùÄ                                                               | 192.168.1.66:21116           |
| RUSTDESK_API_RUSTDESK_RELAY_SERVER                     | RustdeskÁöÑrelayÊúçÂä°Âô®Âú∞ÂùÄ                                                            | 192.168.1.66:21117           |
| RUSTDESK_API_RUSTDESK_API_SERVER                       | RustdeskÁöÑapiÊúçÂä°Âô®Âú∞ÂùÄ                                                              | http://192.168.1.66:21114    |
| RUSTDESK_API_RUSTDESK_KEY                              | RustdeskÁöÑkey                                                                   | 123456789                    |
| RUSTDESK_API_RUSTDESK_KEY_FILE                         | RustdeskÂ≠òÊîækeyÁöÑÊñá‰ª∂                                                               | `./conf/data/id_ed25519.pub` |
| RUSTDESK_API_RUSTDESK_WEBCLIENT&lt;br/&gt;_MAGIC_QUERYONLINE | Web client v2 ‰∏≠ÊòØÂê¶ÂêØÁî®Êñ∞ÁöÑÂú®Á∫øÁä∂ÊÄÅÊü•ËØ¢ÊñπÊ≥ï; `1`:ÂêØÁî®,`0`:‰∏çÂêØÁî®,ÈªòËÆ§‰∏çÂêØÁî®                            | `0`                          |
| RUSTDESK_API_RUSTDESK_WS_HOST                          | Ëá™ÂÆö‰πâWebsocket Host                                                              | `wss://192.168.1.123:1234`   |
| ----PROXYÈÖçÁΩÆ-----                                       | ----------                                                                     | ----------                   |
| RUSTDESK_API_PROXY_ENABLE                              | ÊòØÂê¶ÂêØÁî®‰ª£ÁêÜ:`false`, `true`                                                         | `false`                      |
| RUSTDESK_API_PROXY_HOST                                | ‰ª£ÁêÜÂú∞ÂùÄ                                                                           | `http://127.0.0.1:1080`      |
| ----JWTÈÖçÁΩÆ----                                          | --------                                                                       | --------                     |
| RUSTDESK_API_JWT_KEY                                   | Ëá™ÂÆö‰πâJWT KEY,‰∏∫Á©∫Âàô‰∏çÂêØÁî®JWT&lt;br/&gt;Â¶ÇÊûúÊ≤°‰ΩøÁî®`lejianwen/rustdesk-server`‰∏≠ÁöÑ`MUST_LOGIN`ÔºåÂª∫ËÆÆËÆæÁΩÆ‰∏∫Á©∫ |                              |
| RUSTDESK_API_JWT_EXPIRE_DURATION                       | JWTÊúâÊïàÊó∂Èó¥                                                                        | `168h`                       |


### ËøêË°å

#### dockerËøêË°å

1. Áõ¥Êé•dockerËøêË°å,ÈÖçÁΩÆÂèØ‰ª•ÈÄöËøáÊåÇËΩΩÈÖçÁΩÆÊñá‰ª∂`/app/conf/config.yaml`Êù•‰øÆÊîπ,ÊàñËÄÖÈÄöËøáÁéØÂ¢ÉÂèòÈáèË¶ÜÁõñÈÖçÁΩÆÊñá‰ª∂‰∏≠ÁöÑÈÖçÁΩÆ

    ```bash
    docker run -d --name rustdesk-api -p 21114:21114 \
    -v /data/rustdesk/api:/app/data \
    -e TZ=Asia/Shanghai \
    -e RUSTDESK_API_LANG=zh-CN \
    -e RUSTDESK_API_RUSTDESK_ID_SERVER=192.168.1.66:21116 \
    -e RUSTDESK_API_RUSTDESK_RELAY_SERVER=192.168.1.66:21117 \
    -e RUSTDESK_API_RUSTDESK_API_SERVER=http://192.168.1.66:21114 \
    -e RUSTDESK_API_RUSTDESK_KEY=&lt;key&gt; \
    lejianwen/rustdesk-api
    ```

2. ‰ΩøÁî®`docker compose`ÔºåÂèÇËÄÉ[WIKI](https://github.com/lejianwen/rustdesk-api/wiki)

#### ‰∏ãËΩΩreleaseÁõ¥Êé•ËøêË°å

[‰∏ãËΩΩÂú∞ÂùÄ](https://github.com/lejianwen/rustdesk-api/releases)

#### Ê∫êÁ†ÅÂÆâË£Ö

1. ÂÖãÈöÜ‰ªìÂ∫ì
   ```bash
   git clone https://github.com/lejianwen/rustdesk-api.git
   cd rustdesk-api
   ```

2. ÂÆâË£Ö‰æùËµñ

    ```bash
    go mod tidy
    #ÂÆâË£ÖswagÔºåÂ¶ÇÊûú‰∏çÈúÄË¶ÅÁîüÊàêÊñáÊ°£ÔºåÂèØ‰ª•‰∏çÂÆâË£Ö
    go install github.com/swaggo/swag/cmd/swag@latest
    ```

3. ÁºñËØëÂêéÂè∞ÂâçÁ´ØÔºåÂâçÁ´Ø‰ª£Á†ÅÂú®[rustdesk-api-web](https://github.com/lejianwen/rustdesk-api-web)‰∏≠
   ```bash
   cd resources
   mkdir -p admin
   git clone https://github.com/lejianwen/rustdesk-api-web
   cd rustdesk-api-web
   npm install
   npm run build
   cp -ar dist/* ../admin/
   ```
4. ËøêË°å
    ```bash
    #Áõ¥Êé•ËøêË°å
    go run cmd/apimain.go
    #ÊàñËÄÖ‰ΩøÁî®generate_api.goÁîüÊàêapiÂπ∂ËøêË°å
    go generate generate_api.go
    ```
5. ÁºñËØëÔºåÂ¶ÇÊûúÊÉ≥Ëá™Â∑±ÁºñËØë,ÂÖàcdÂà∞È°πÁõÆÊ†πÁõÆÂΩïÔºåÁÑ∂Âêéwindows‰∏ãÁõ¥Êé•ËøêË°å`build.bat`,linux‰∏ãËøêË°å`build.sh`,ÁºñËØëÂêé‰ºöÂú®`release`
   ÁõÆÂΩï‰∏ãÁîüÊàêÂØπÂ∫îÁöÑÂèØÊâßË°åÊñá‰ª∂„ÄÇÁõ¥Êé•ËøêË°åÁºñËØëÂêéÁöÑÂèØÊâßË°åÊñá‰ª∂Âç≥ÂèØ„ÄÇ

6. ÊâìÂºÄÊµèËßàÂô®ËÆøÈóÆ`http://&lt;your server[:port]&gt;/_admin/`ÔºåÈªòËÆ§Áî®Êà∑ÂêçÂØÜÁ†Å‰∏∫`admin`ÔºåËØ∑ÂèäÊó∂Êõ¥ÊîπÂØÜÁ†Å„ÄÇ


#### ‰ΩøÁî®`lejianwen/server-s6`ÈïúÂÉèËøêË°å

- Â∑≤Ëß£ÂÜ≥ÈìæÊé•Ë∂ÖÊó∂ÈóÆÈ¢ò
- ÂèØ‰ª•Âº∫Âà∂ÁôªÂΩïÂêéÊâçËÉΩÂèëËµ∑ÈìæÊé•
- github https://github.com/lejianwen/rustdesk-server

```yaml
 networks:
   rustdesk-net:
     external: false
 services:
   rustdesk:
     ports:
       - 21114:21114
       - 21115:21115
       - 21116:21116
       - 21116:21116/udp
       - 21117:21117
       - 21118:21118
       - 21119:21119
     image: lejianwen/rustdesk-server-s6:latest
     environment:
       - RELAY=&lt;relay_server[:port]&gt;
       - ENCRYPTED_ONLY=1
       - MUST_LOGIN=N
       - TZ=Asia/Shanghai
       - RUSTDESK_API_RUSTDESK_ID_SERVER=&lt;id_server[:21116]&gt;
       - RUSTDESK_API_RUSTDESK_RELAY_SERVER=&lt;relay_server[:21117]&gt;
       - RUSTDESK_API_RUSTDESK_API_SERVER=http://&lt;api_server[:21114]&gt;
       - RUSTDESK_API_KEY_FILE=/data/id_ed25519.pub
       - RUSTDESK_API_JWT_KEY=xxxxxx # jwt key
     volumes:
       - /data/rustdesk/server:/data
       - /data/rustdesk/api:/app/data #Â∞ÜÊï∞ÊçÆÂ∫ìÊåÇËΩΩ
     networks:
       - rustdesk-net
     restart: unless-stopped
       
```


## ÂÖ∂‰ªñ

- [WIKI](https://github.com/lejianwen/rustdesk-api/wiki)
- [ÈìæÊé•Ë∂ÖÊó∂ÈóÆÈ¢ò](https://github.com/lejianwen/rustdesk-api/issues/92)
- [‰øÆÊîπÂÆ¢Êà∑Á´ØID](https://github.com/abdullah-erturk/RustDesk-ID-Changer)
- [webclientÊù•Ê∫ê](https://hub.docker.com/r/keyurbhole/flutter_web_desk)


## È∏£Ë∞¢

ÊÑüË∞¢ÊâÄÊúâÂÅöËøáË¥°ÁåÆÁöÑ‰∫∫!

&lt;a href=&quot;https://github.com/lejianwen/rustdesk-api/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=lejianwen/rustdesk-api&quot; /&gt;
&lt;/a&gt;

## ÊÑüË∞¢‰Ω†ÁöÑÊîØÊåÅÔºÅÂ¶ÇÊûúËøô‰∏™È°πÁõÆÂØπ‰Ω†ÊúâÂ∏ÆÂä©ÔºåËØ∑ÁÇπ‰∏™‚≠êÔ∏èÈºìÂä±‰∏Ä‰∏ãÔºåË∞¢Ë∞¢ÔºÅ
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[influxdata/telegraf]]></title>
            <link>https://github.com/influxdata/telegraf</link>
            <guid>https://github.com/influxdata/telegraf</guid>
            <pubDate>Fri, 16 May 2025 00:05:02 GMT</pubDate>
            <description><![CDATA[Agent for collecting, processing, aggregating, and writing metrics, logs, and other arbitrary data.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/influxdata/telegraf">influxdata/telegraf</a></h1>
            <p>Agent for collecting, processing, aggregating, and writing metrics, logs, and other arbitrary data.</p>
            <p>Language: Go</p>
            <p>Stars: 15,580</p>
            <p>Forks: 5,644</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre># ![tiger](assets/TelegrafTigerSmall.png &quot;tiger&quot;) Telegraf

[![GoDoc](https://img.shields.io/badge/doc-reference-00ADD8.svg?logo=go)](https://godoc.org/github.com/influxdata/telegraf)
[![Docker pulls](https://img.shields.io/docker/pulls/library/telegraf.svg)](https://hub.docker.com/_/telegraf/)
[![Go Report Card](https://goreportcard.com/badge/github.com/influxdata/telegraf)](https://goreportcard.com/report/github.com/influxdata/telegraf)
[![Circle CI](https://circleci.com/gh/influxdata/telegraf.svg?style=svg)](https://circleci.com/gh/influxdata/telegraf)

Telegraf is an agent for collecting, processing, aggregating, and writing
metrics, logs, and other arbitrary data.

* Offers a comprehensive suite of over 300 plugins, covering a wide range of
  functionalities including system monitoring, cloud services, and message
  passing
* Enables the integration of user-defined code to collect, transform, and
  transmit data efficiently
* Compiles into a standalone static binary without any external dependencies,
  ensuring a streamlined deployment process
* Utilizes TOML for configuration, providing a user-friendly and unambiguous
  setup experience
* Developed with contributions from a diverse community of over 1,200
  contributors

Users can choose plugins from a wide range of topics, including but not limited
to:

* Devices: [OPC UA][], [Modbus][]
* Logs: [File][], [Tail][], [Directory Monitor][]
* Messaging: [AMQP][], [Kafka][], [MQTT][]
* Monitoring: [OpenTelemetry][], [Prometheus][]
* Networking: [Cisco TelemetryMDT][], [gNMI][]
* System monitoring: [CPU][], [Memory][], [Disk][], [Network][], [SMART][],
  [Docker][], [Nvidia SMI][], etc.
* Universal: [Exec][], [HTTP][], [HTTP Listener][], [SNMP][], [SQL][]
* Windows: [Event Log][], [Management Instrumentation][],
  [Performance Counters][]

## üî® Installation

For binary builds, Docker images, RPM &amp; DEB packages, and other builds of
Telegraf, please see the [install guide](/docs/INSTALL_GUIDE.md).

See the [releases documentation](/docs/RELEASES.md) for details on versioning
and when releases are made.

## üíª Usage

Users define a TOML configuration with the plugins and settings they wish to
use, then pass that configuration to Telegraf. The Telegraf agent then
collects data from inputs at each interval and sends data to outputs at each
flush interval.

For a basic walkthrough see [quick start](/docs/QUICK_START.md).

## üìñ Documentation

For a full list of documentation including tutorials, reference and other
material, start with the [/docs directory](/docs/README.md).

Additionally, each plugin has its own README that includes details about how to
configure, use, and sometimes debug or troubleshoot. Look under the
[/plugins directory](/plugins/) for specific plugins.

Here are some commonly used documents:

* [Changelog](/CHANGELOG.md)
* [Configuration](/docs/CONFIGURATION.md)
* [FAQ](/docs/FAQ.md)
* [Releases](https://github.com/influxdata/telegraf/releases)
* [Security](/SECURITY.md)

## ‚ù§Ô∏è Contribute

[![Contribute](https://img.shields.io/badge/contribute-to_telegraf-blue.svg?logo=influxdb)](https://github.com/influxdata/telegraf/blob/master/CONTRIBUTING.md)

We love our community of over 1,200 contributors! Many of the plugins included
in Telegraf were originally contributed by community members. Check out
our [contributing guide](CONTRIBUTING.md) if you are interested in helping out.
Also, join us on our [Community Slack](https://influxdata.com/slack) or
[Community Forums](https://community.influxdata.com/) if you have questions or
comments for our engineering teams.

If you are completely new to Telegraf and InfluxDB, you can also enroll for free
at [InfluxDB university](https://www.influxdata.com/university/) to take courses
to learn more.

## ‚ÑπÔ∏è Support

[![Slack](https://img.shields.io/badge/slack-join_chat-blue.svg?logo=slack)](https://www.influxdata.com/slack)
[![Forums](https://img.shields.io/badge/discourse-join_forums-blue.svg?logo=discourse)](https://community.influxdata.com/)

Please use the [Community Slack](https://influxdata.com/slack) or
[Community Forums](https://community.influxdata.com/) if you have questions or
comments for our engineering teams. GitHub issues are limited to actual issues
and feature requests only.

## üìú License

[![MIT](https://img.shields.io/badge/license-MIT-blue)](https://github.com/influxdata/telegraf/blob/master/LICENSE)

[OPC UA]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/opcua
[Modbus]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/modbus
[File]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/file
[Tail]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/tail
[Directory Monitor]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/directory_monitor
[AMQP]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/amqp_consumer
[Kafka]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/kafka_consumer
[MQTT]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/mqtt_consumer
[OpenTelemetry]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/opentelemetry
[Prometheus]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/prometheus
[Cisco TelemetryMDT]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/cisco_telemetry_mdt
[gNMI]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/gnmi
[CPU]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/cpu
[Memory]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/mem
[Disk]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/disk
[Network]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/net
[SMART]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/smartctl
[Docker]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/docker
[Nvidia SMI]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/nvidia_smi
[Exec]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/exec
[HTTP]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/http
[HTTP Listener]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/http_listener_v2
[SNMP]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/snmp
[SQL]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/sql
[Event Log]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/win_eventlog
[Management Instrumentation]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/win_wmi
[Performance Counters]: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/win_perf_counters
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[cloudwego/eino]]></title>
            <link>https://github.com/cloudwego/eino</link>
            <guid>https://github.com/cloudwego/eino</guid>
            <pubDate>Fri, 16 May 2025 00:05:01 GMT</pubDate>
            <description><![CDATA[The ultimate LLM/AI application development framework in Golang.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/cloudwego/eino">cloudwego/eino</a></h1>
            <p>The ultimate LLM/AI application development framework in Golang.</p>
            <p>Language: Go</p>
            <p>Stars: 3,683</p>
            <p>Forks: 276</p>
            <p>Stars today: 23 stars today</p>
            <h2>README</h2><pre># Eino

![coverage](https://raw.githubusercontent.com/cloudwego/eino/badges/.badges/main/coverage.svg)
[![Release](https://img.shields.io/github/v/release/cloudwego/eino)](https://github.com/cloudwego/eino/releases)
[![WebSite](https://img.shields.io/website?up_message=cloudwego&amp;url=https%3A%2F%2Fwww.cloudwego.io%2F)](https://www.cloudwego.io/)
[![License](https://img.shields.io/github/license/cloudwego/eino)](https://github.com/cloudwego/eino/blob/main/LICENSE)
[![Go Report Card](https://goreportcard.com/badge/github.com/cloudwego/eino)](https://goreportcard.com/report/github.com/cloudwego/eino)
[![OpenIssue](https://img.shields.io/github/issues/cloudwego/eino)](https://github.com/cloudwego/kitex/eino)
[![ClosedIssue](https://img.shields.io/github/issues-closed/cloudwego/eino)](https://github.com/cloudwego/eino/issues?q=is%3Aissue+is%3Aclosed)
![Stars](https://img.shields.io/github/stars/cloudwego/eino)
![Forks](https://img.shields.io/github/forks/cloudwego/eino)

English | [‰∏≠Êñá](README.zh_CN.md)

# Overview

**Eino[&#039;aino]** (pronounced similarly to &quot;I know&quot;) aims to be the ultimate LLM application development framework in Golang. Drawing inspirations from many excellent LLM application development frameworks in the open-source community such as LangChain &amp; LlamaIndex, etc., as well as learning from cutting-edge research and real world applications, Eino offers an LLM application development framework that emphasizes on simplicity, scalability, reliability and effectiveness that better aligns with Golang programming conventions.

What Eino provides are:
- a carefully curated list of **component** abstractions and implementations that can be easily reused and combined to build LLM applications
- a powerful **composition** framework that does the heavy lifting of strong type checking, stream processing, concurrency management, aspect injection, option assignment, etc. for the user.
- a set of meticulously designed **API** that obsesses on simplicity and clarity.
- an ever-growing collection of best practices in the form of bundled **flows** and **examples**.
- a useful set of tools that covers the entire development cycle, from visualized development and debugging to online tracing and evaluation.

With the above arsenal, Eino can standardize, simplify, and improve efficiency at different stages of the AI application development cycle:
![](.github/static/img/eino/eino_concept.jpeg)

# A quick walkthrough

Use a component directly:
```Go
model, _ := openai.NewChatModel(ctx, config) // create an invokable LLM instance
message, _ := model.Generate(ctx, []*Message{
    SystemMessage(&quot;you are a helpful assistant.&quot;),
    UserMessage(&quot;what does the future AI App look like?&quot;)})
```

Of course, you can do that, Eino provides lots of useful components to use out of the box. But you can do more by using orchestration, for three reasons:
- orchestration encapsulates common patterns of LLM application.
- orchestration solves the difficult problem of processing stream response by the LLM.
- orchestration handles type safety, concurrency management, aspect injection and option assignment for you.

Eino provides two set of APIs for orchestration

| API      | Characteristics and usage                                             |
| -------- |-----------------------------------------------------------------------|
| Chain    | Simple chained directed graph that can only go forward.               |
| Graph    | Cyclic or Acyclic directed graph. Powerful and flexible.              |

Let&#039;s create a simple chain: a ChatTemplate followed by a ChatModel.

![](.github/static/img/eino/simple_chain.png)

```Go
chain, _ := NewChain[map[string]any, *Message]().
           AppendChatTemplate(prompt).
           AppendChatModel(model).
           Compile(ctx)

chain.Invoke(ctx, map[string]any{&quot;query&quot;: &quot;what&#039;s your name?&quot;})
```

Now let&#039;s create a graph that uses a ChatModel to generate answer or tool calls, then uses a ToolsNode to execute those tools if needed.

![](.github/static/img/eino/tool_call_graph.png)

```Go
graph := NewGraph[map[string]any, *schema.Message]()

_ = graph.AddChatTemplateNode(&quot;node_template&quot;, chatTpl)
_ = graph.AddChatModelNode(&quot;node_model&quot;, chatModel)
_ = graph.AddToolsNode(&quot;node_tools&quot;, toolsNode)
_ = graph.AddLambdaNode(&quot;node_converter&quot;, takeOne)

_ = graph.AddEdge(START, &quot;node_template&quot;)
_ = graph.AddEdge(&quot;node_template&quot;, &quot;node_model&quot;)
_ = graph.AddBranch(&quot;node_model&quot;, branch)
_ = graph.AddEdge(&quot;node_tools&quot;, &quot;node_converter&quot;)
_ = graph.AddEdge(&quot;node_converter&quot;, END)

compiledGraph, err := graph.Compile(ctx)
if err != nil {
return err
}
out, err := r.Invoke(ctx, map[string]any{&quot;query&quot;:&quot;Beijing&#039;s weather this weekend&quot;})
```

Now let&#039;s create a &#039;ReAct&#039; agent: A ChatModel binds to Tools. It receives input Messages and decides independently whether to call the Tool or output the final result. The execution result of the Tool will again become the input Message for the ChatModel and serve as the context for the next round of independent judgment.

![](.github/static/img/eino/react.png)

We provide a complete implementation for ReAct Agent out of the box in the `flow` package. Check out the code here: [flow/agent/react](https://github.com/cloudwego/eino/blob/main/flow/agent/react/react.go)

Our implementation of ReAct Agent uses Eino&#039;s **graph orchestration** exclusively, which provides the following benefits out of the box:
- Type checking: it makes sure the two nodes&#039; input and output types match at compile time.
- Stream processing: concatenates message stream before passing to chatModel and toolsNode if needed, and copies the stream into callback handlers.
- Concurrency management: the shared state can be safely read and written because the StatePreHandler is concurrency safe.
- Aspect injection: injects callback aspects before and after the execution of ChatModel if the specified ChatModel implementation hasn&#039;t injected itself.
- Option assignment: call options are assigned either globally, to specific component type or to specific node.

For example, you could easily extend the compiled graph with callbacks:
```Go
handler := NewHandlerBuilder().
  OnStartFn(
    func(ctx context.Context, info *RunInfo, input CallbackInput) context.Context) {
        log.Infof(&quot;onStart, runInfo: %v, input: %v&quot;, info, input)
    }).
  OnEndFn(
    func(ctx context.Context, info *RunInfo, output CallbackOutput) context.Context) {
        log.Infof(&quot;onEnd, runInfo: %v, out: %v&quot;, info, output)
    }).
  Build()
  
compiledGraph.Invoke(ctx, input, WithCallbacks(handler))
```

or you could easily assign options to different nodes:
```Go
// assign to All nodes
compiledGraph.Invoke(ctx, input, WithCallbacks(handler))

// assign only to ChatModel nodes
compiledGraph.Invoke(ctx, input, WithChatModelOption(WithTemperature(0.5))

// assign only to node_1
compiledGraph.Invoke(ctx, input, WithCallbacks(handler).DesignateNode(&quot;node_1&quot;))
```

# Key Features

## Rich Components

- Encapsulates common building blocks into **component abstractions**, each have multiple **component implementations** that are ready to be used out of the box.
    - component abstractions such as ChatModel, Tool, ChatTemplate, Retriever, Document Loader, Lambda, etc.
    - each component type has an interface of its own: defined Input &amp; Output Type, defined Option type, and streaming paradigms that make sense.
    - implementations are transparent. Abstractions are all you care about when orchestrating components together.

- Implementations can be nested and captures complex business logic.
    - ReAct Agent, MultiQueryRetriever, Host MultiAgent, etc. They consist of multiple components and non-trivial business logic.
    - They are still transparent from the outside. A MultiQueryRetriever can be used anywhere that accepts a Retriever.

## Powerful Orchestration

- Data flows from Retriever / Document Loaders / ChatTemplate to ChatModel, then flows to Tools and parsed as Final Answer. This directed, controlled flow of data through multiple components can be implemented through **graph orchestration**.
- Component instances are graph nodes, and edges are data flow channels.
- Graph orchestration is powerful and flexible enough to implement complex business logic:
  - type checking, stream processing, concurrency management, aspect injection and option assignment are handled by the framework.
  - branch out execution at runtime, read and write global state, or do field level data mapping using workflow(currently in alpha stage).


## Complete Stream Processing

- Stream processing is important because ChatModel outputs chunks of messages in real time as it generates them. It&#039;s especially important with orchestration because more components need to handle streaming data.
- Eino automatically **concatenates** stream chunks for downstream nodes that only accepts non-stream input, such as ToolsNode.
- Eino automatically **boxes** non stream into stream when stream is needed during graph execution.  
- Eino automatically **merges** multiple streams as they converge into a single downward node.
- Eino automatically **copies** stream as they fan out to different downward node, or is passed to callback handlers.
- Orchestration elements such as **branch** and **state handlers** are also stream aware.
- With these streaming processing abilities, the streaming paradigms of components themselves become transparent to the user. 
- A compiled Graph can run with 4 different streaming paradigms:

| Streaming Paradigm | Explanation                                                                 |
| ------------------ | --------------------------------------------------------------------------- |
| Invoke             | Accepts non-stream type I and returns non-stream type O                     |
| Stream             | Accepts non-stream type I and returns stream type StreamReader[O]           |
| Collect            | Accepts stream type StreamReader[I] and returns non-stream type O           |
| Transform          | Accepts stream type StreamReader[I] and returns stream type StreamReader[O] |

## Highly Extensible Aspects (Callbacks)

- Aspects handle cross-cutting concerns such as logging, tracing, metrics, etc., as well as exposing internal details of component implementations.
- Five aspects are supported: **OnStart, OnEnd, OnError, OnStartWithStreamInput, OnEndWithStreamOutput**.
- Developers can easily create custom callback handlers, add them during graph run via options, and they will be invoked during graph run.
- Graph can also inject aspects to those component implementations that do not support callbacks on their own.

# Eino Framework Structure

![](.github/static/img/eino/eino_framework.jpeg)

The Eino framework consists of several parts:

- Eino(this repo): Contains Eino&#039;s type definitions, streaming mechanism, component abstractions, orchestration capabilities, aspect mechanisms, etc.

- [EinoExt](https://github.com/cloudwego/eino-ext): Component implementations, callback handlers implementations, component usage examples, and various tools such as evaluators, prompt optimizers.

- [Eino Devops](https://github.com/cloudwego/eino-ext/tree/main/devops): visualized developing, visualized debugging
  etc.

- [EinoExamples](https://github.com/cloudwego/eino-examples) is the repo containing example applications and best practices for Eino.

## Detailed Documentation

For learning and using Eino, we provide a comprehensive Eino User Manual to help you quickly understand the concepts in Eino and master the skills of developing AI applications based on Eino. Start exploring through the [Eino User Manual](https://www.cloudwego.io/zh/docs/eino/) now!

For a quick introduction to building AI applications with Eino, we recommend starting with [Eino: Quick Start](https://www.cloudwego.io/zh/docs/eino/quick_start/)

## Dependencies
- Go 1.18 and above.
- Eino relies on [kin-openapi](https://github.com/getkin/kin-openapi) &#039;s OpenAPI JSONSchema implementation. In order to remain compatible with Go 1.18, we have fixed kin-openapi&#039;s version to be v0.118.0.

## Security

If you discover a potential security issue in this project, or think you may
have discovered a security issue, we ask that you notify Bytedance Security via our [security center](https://security.bytedance.com/src) or [vulnerability reporting email](sec@bytedance.com).

Please do **not** create a public GitHub issue.

## Contact US
- How to become a member: [COMMUNITY MEMBERSHIP](https://github.com/cloudwego/community/blob/main/COMMUNITY_MEMBERSHIP.md)
- Issues: [Issues](https://github.com/cloudwego/eino/issues)
- Lark: Scan the QR code below with [Register Feishu](https://www.feishu.cn/en/) to join our CloudWeGo/eino user group.

&amp;ensp;&amp;ensp;&amp;ensp; &lt;img src=&quot;.github/static/img/eino/lark_group_zh.png&quot; alt=&quot;LarkGroup&quot; width=&quot;200&quot;/&gt;

## License

This project is licensed under the [Apache-2.0 License](LICENSE-APACHE).</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[VictoriaMetrics/VictoriaMetrics]]></title>
            <link>https://github.com/VictoriaMetrics/VictoriaMetrics</link>
            <guid>https://github.com/VictoriaMetrics/VictoriaMetrics</guid>
            <pubDate>Fri, 16 May 2025 00:05:00 GMT</pubDate>
            <description><![CDATA[VictoriaMetrics: fast, cost-effective monitoring solution and time series database]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/VictoriaMetrics/VictoriaMetrics">VictoriaMetrics/VictoriaMetrics</a></h1>
            <p>VictoriaMetrics: fast, cost-effective monitoring solution and time series database</p>
            <p>Language: Go</p>
            <p>Stars: 14,015</p>
            <p>Forks: 1,368</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre># VictoriaMetrics

![Latest Release](https://img.shields.io/github/v/release/VictoriaMetrics/VictoriaMetrics?sort=semver&amp;label=&amp;filter=!*-victorialogs&amp;logo=github&amp;labelColor=gray&amp;color=gray&amp;link=https%3A%2F%2Fgithub.com%2FVictoriaMetrics%2FVictoriaMetrics%2Freleases%2Flatest)
![Docker Pulls](https://img.shields.io/docker/pulls/victoriametrics/victoria-metrics?label=&amp;logo=docker&amp;logoColor=white&amp;labelColor=2496ED&amp;color=2496ED&amp;link=https%3A%2F%2Fhub.docker.com%2Fr%2Fvictoriametrics%2Fvictoria-metrics)
![Go Report](https://goreportcard.com/badge/github.com/VictoriaMetrics/VictoriaMetrics?link=https%3A%2F%2Fgoreportcard.com%2Freport%2Fgithub.com%2FVictoriaMetrics%2FVictoriaMetrics)
![Build Status](https://github.com/VictoriaMetrics/VictoriaMetrics/actions/workflows/main.yml/badge.svg?branch=master&amp;link=https%3A%2F%2Fgithub.com%2FVictoriaMetrics%2FVictoriaMetrics%2Factions)
![codecov](https://codecov.io/gh/VictoriaMetrics/VictoriaMetrics/branch/master/graph/badge.svg?link=https%3A%2F%2Fcodecov.io%2Fgh%2FVictoriaMetrics%2FVictoriaMetrics)
![License](https://img.shields.io/github/license/VictoriaMetrics/VictoriaMetrics?labelColor=green&amp;label=&amp;link=https%3A%2F%2Fgithub.com%2FVictoriaMetrics%2FVictoriaMetrics%2Fblob%2Fmaster%2FLICENSE)
![Slack](https://img.shields.io/badge/Join-4A154B?logo=slack&amp;link=https%3A%2F%2Fslack.victoriametrics.com)
![X](https://img.shields.io/twitter/follow/VictoriaMetrics?style=flat&amp;label=Follow&amp;color=black&amp;logo=x&amp;labelColor=black&amp;link=https%3A%2F%2Fx.com%2FVictoriaMetrics)
![Reddit](https://img.shields.io/reddit/subreddit-subscribers/VictoriaMetrics?style=flat&amp;label=Join&amp;labelColor=red&amp;logoColor=white&amp;logo=reddit&amp;link=https%3A%2F%2Fwww.reddit.com%2Fr%2FVictoriaMetrics)

&lt;picture&gt;
  &lt;source srcset=&quot;docs/victoriametrics/logo_white.webp&quot; media=&quot;(prefers-color-scheme: dark)&quot;&gt;
  &lt;source srcset=&quot;docs/victoriametrics/logo.webp&quot; media=&quot;(prefers-color-scheme: light)&quot;&gt;
  &lt;img src=&quot;docs/victoriametrics/logo.webp&quot; width=&quot;300&quot; alt=&quot;VictoriaMetrics logo&quot;&gt;
&lt;/picture&gt;

VictoriaMetrics is a fast, cost-saving, and scalable solution for monitoring and managing time series data. It delivers high performance and reliability, making it an ideal choice for businesses of all sizes.

Here are some resources and information about VictoriaMetrics:

- Documentation: [docs.victoriametrics.com](https://docs.victoriametrics.com)
- Case studies: [Grammarly, Roblox, Wix,...](https://docs.victoriametrics.com/victoriametrics/casestudies/).
- Available: [Binary releases](https://github.com/VictoriaMetrics/VictoriaMetrics/releases/latest), docker images [Docker Hub](https://hub.docker.com/r/victoriametrics/victoria-metrics/) and [Quay](https://quay.io/repository/victoriametrics/victoria-metrics), [Source code](https://github.com/VictoriaMetrics/VictoriaMetrics)
- Deployment types: [Single-node version](https://docs.victoriametrics.com/), [Cluster version](https://docs.victoriametrics.com/victoriametrics/cluster-victoriametrics/), and [Enterprise version](https://docs.victoriametrics.com/victoriametrics/enterprise/)
- Changelog: [CHANGELOG](https://docs.victoriametrics.com/victoriametrics/changelog/), and [How to upgrade](https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#how-to-upgrade-victoriametrics)
- Community: [Slack](https://slack.victoriametrics.com/), [X (Twitter)](https://x.com/VictoriaMetrics), [LinkedIn](https://www.linkedin.com/company/victoriametrics/), [YouTube](https://www.youtube.com/@VictoriaMetrics)

Yes, we open-source both the single-node VictoriaMetrics and the cluster version.

## Prominent features

VictoriaMetrics is optimized for timeseries data, even when old time series are constantly replaced by new ones at a high rate, it offers a lot of features:

* **Long-term storage for Prometheus** or as a drop-in replacement for Prometheus and Graphite in Grafana.
* **Powerful stream aggregation**: Can be used as a StatsD alternative.
* **Ideal for big data**: Works well with large amounts of time series data from APM, Kubernetes, IoT sensors, connected cars, industrial telemetry, financial data and various [Enterprise workloads](https://docs.victoriametrics.com/victoriametrics/enterprise/).
* **Query language**: Supports both PromQL and the more performant MetricsQL.
* **Easy to setup**: No dependencies, single [small binary](https://medium.com/@valyala/stripping-dependency-bloat-in-victoriametrics-docker-image-983fb5912b0d), configuration through command-line flags, but the default is also fine-tuned; backup and restore with [instant snapshots](https://medium.com/@valyala/how-victoriametrics-makes-instant-snapshots-for-multi-terabyte-time-series-data-e1f3fb0e0282).
* **Global query view**: Multiple Prometheus instances or any other data sources may ingest data into VictoriaMetrics and queried via a single query.
* **Various Protocols**: Support metric scraping, ingestion and backfilling in various protocol.
    * [Prometheus exporters](https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#how-to-scrape-prometheus-exporters-such-as-node-exporter), [Prometheus remote write API](https://docs.victoriametrics.com/victoriametrics/integrations/prometheus), [Prometheus exposition format](https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#how-to-import-data-in-prometheus-exposition-format).
    * [InfluxDB line protocol](https://docs.victoriametrics.com/victoriametrics/integrations/influxdb) over HTTP, TCP and UDP.
    * [Graphite plaintext protocol](https://docs.victoriametrics.com/victoriametrics/integrations/graphite/#ingesting) with [tags](https://graphite.readthedocs.io/en/latest/tags.html#carbon).
    * [OpenTSDB put message](https://docs.victoriametrics.com/victoriametrics/integrations/opentsdb#sending-data-via-telnet).
    * [HTTP OpenTSDB /api/put requests](https://docs.victoriametrics.com/victoriametrics/integrations/opentsdb#sending-data-via-http).
    * [JSON line format](https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#how-to-import-data-in-json-line-format).
    * [Arbitrary CSV data](https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#how-to-import-csv-data).
    * [Native binary format](https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#how-to-import-data-in-native-format).
    * [DataDog agent or DogStatsD](https://docs.victoriametrics.com/victoriametrics/integrations/datadog).
    * [NewRelic infrastructure agent](https://docs.victoriametrics.com/victoriametrics/integrations/newrelic#sending-data-from-agent).
    * [OpenTelemetry metrics format](https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#sending-data-via-opentelemetry).
* **NFS-based storages**: Supports storing data on NFS-based storages such as Amazon EFS, Google Filestore.
* And many other features such as metrics relabeling, cardinality limiter, etc.

## Enterprise version

In addition, the Enterprise version includes extra features:

- **Anomaly detection**: Automation and simplification of your alerting rules, covering complex anomalies found in metrics data.
- **Backup automation**: Automates regular backup procedures.
- **Multiple retentions**: Reducing storage costs by specifying different retentions for different datasets.
- **Downsampling**: Reducing storage costs and increasing performance for queries over historical data.
- **Stable releases** with long-term support lines ([LTS](https://docs.victoriametrics.com/victoriametrics/lts-releases/)).
- **Comprehensive support**: First-class consulting, feature requests and technical support provided by the core VictoriaMetrics dev team.
- Many other features, which you can read about on [the Enterprise page](https://docs.victoriametrics.com/victoriametrics/enterprise/).

[Contact us](mailto:info@victoriametrics.com) if you need enterprise support for VictoriaMetrics. Or you can request a free trial license [here](https://victoriametrics.com/products/enterprise/trial/), downloaded Enterprise binaries are available at [Github Releases](https://github.com/VictoriaMetrics/VictoriaMetrics/releases/latest).

We strictly apply security measures in everything we do. VictoriaMetrics has achieved security certifications for Database Software Development and Software-Based Monitoring Services. See [Security page](https://victoriametrics.com/security/) for more details.

## Benchmarks 

Some good benchmarks VictoriaMetrics achieved:

* **Minimal memory footprint**: handling millions of unique timeseries with [10x less RAM](https://medium.com/@valyala/insert-benchmarks-with-inch-influxdb-vs-victoriametrics-e31a41ae2893) than InfluxDB, up to [7x less RAM](https://valyala.medium.com/prometheus-vs-victoriametrics-benchmark-on-node-exporter-metrics-4ca29c75590f) than Prometheus, Thanos or Cortex.
* **Highly scalable and performance** for [data ingestion](https://medium.com/@valyala/high-cardinality-tsdb-benchmarks-victoriametrics-vs-timescaledb-vs-influxdb-13e6ee64dd6b) and [querying](https://medium.com/@valyala/when-size-matters-benchmarking-victoriametrics-vs-timescale-and-influxdb-6035811952d4), [20x outperforms](https://medium.com/@valyala/insert-benchmarks-with-inch-influxdb-vs-victoriametrics-e31a41ae2893) InfluxDB and TimescaleDB.
* **High data compression**: [70x more data points](https://medium.com/@valyala/when-size-matters-benchmarking-victoriametrics-vs-timescale-and-influxdb-6035811952d4) may be stored into limited storage than TimescaleDB, [7x less storage](https://valyala.medium.com/prometheus-vs-victoriametrics-benchmark-on-node-exporter-metrics-4ca29c75590f) space is required than Prometheus, Thanos or Cortex.
* **Reducing storage costs**: [10x more effective](https://docs.victoriametrics.com/victoriametrics/casestudies/#grammarly) than Graphite according to the Grammarly case study.
* **A single-node VictoriaMetrics** can replace medium-sized clusters built with competing solutions such as Thanos, M3DB, Cortex, InfluxDB or TimescaleDB. See [VictoriaMetrics vs Thanos](https://medium.com/@valyala/comparing-thanos-to-victoriametrics-cluster-b193bea1683), [Measuring vertical scalability](https://medium.com/@valyala/measuring-vertical-scalability-for-time-series-databases-in-google-cloud-92550d78d8ae), [Remote write storage wars - PromCon 2019](https://promcon.io/2019-munich/talks/remote-write-storage-wars/).
* **Optimized for storage**: [Works well with high-latency IO](https://medium.com/@valyala/high-cardinality-tsdb-benchmarks-victoriametrics-vs-timescaledb-vs-influxdb-13e6ee64dd6b) and low IOPS (HDD and network storage in AWS, Google Cloud, Microsoft Azure, etc.).

## Community and contributions

Feel free asking any questions regarding VictoriaMetrics:

* [Slack Inviter](https://slack.victoriametrics.com/) and [Slack channel](https://victoriametrics.slack.com/)
* [X (Twitter)](https://x.com/VictoriaMetrics/)
* [Linkedin](https://www.linkedin.com/company/victoriametrics/)
* [Reddit](https://www.reddit.com/r/VictoriaMetrics/)
* [Telegram-en](https://t.me/VictoriaMetrics_en)
* [Telegram-ru](https://t.me/VictoriaMetrics_ru1)
* [Mastodon](https://mastodon.social/@victoriametrics/)

If you like VictoriaMetrics and want to contribute, then please [read these docs](https://docs.victoriametrics.com/victoriametrics/contributing/).

## VictoriaMetrics Logo

The provided [ZIP file](https://github.com/VictoriaMetrics/VictoriaMetrics/blob/master/VM_logo.zip) contains three folders with different logo orientations. Each folder includes the following file types:

* JPEG: Preview files
* PNG: Preview files with transparent background
* AI: Adobe Illustrator files

### VictoriaMetrics Logo Usage Guidelines

#### Font

* Font Used: Lato Black
* Download here: [Lato Font](https://fonts.google.com/specimen/Lato)

#### Color Palette

* Black [#000000](https://www.color-hex.com/color/000000)
* Purple [#4d0e82](https://www.color-hex.com/color/4d0e82)
* Orange [#ff2e00](https://www.color-hex.com/color/ff2e00)
* White [#ffffff](https://www.color-hex.com/color/ffffff)

### Logo Usage Rules

* Only use the Lato Black font as specified.
* Maintain sufficient clear space around the logo for visibility.
* Do not modify the spacing, alignment, or positioning of design elements.
* You may resize the logo as needed, but ensure all proportions remain intact.

Thank you for your cooperation!
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[getsops/sops]]></title>
            <link>https://github.com/getsops/sops</link>
            <guid>https://github.com/getsops/sops</guid>
            <pubDate>Fri, 16 May 2025 00:04:59 GMT</pubDate>
            <description><![CDATA[Simple and flexible tool for managing secrets]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/getsops/sops">getsops/sops</a></h1>
            <p>Simple and flexible tool for managing secrets</p>
            <p>Language: Go</p>
            <p>Stars: 18,461</p>
            <p>Forks: 928</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
        <item>
            <title><![CDATA[kubernetes-sigs/metrics-server]]></title>
            <link>https://github.com/kubernetes-sigs/metrics-server</link>
            <guid>https://github.com/kubernetes-sigs/metrics-server</guid>
            <pubDate>Fri, 16 May 2025 00:04:58 GMT</pubDate>
            <description><![CDATA[Scalable and efficient source of container resource metrics for Kubernetes built-in autoscaling pipelines.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/kubernetes-sigs/metrics-server">kubernetes-sigs/metrics-server</a></h1>
            <p>Scalable and efficient source of container resource metrics for Kubernetes built-in autoscaling pipelines.</p>
            <p>Language: Go</p>
            <p>Stars: 6,143</p>
            <p>Forks: 1,924</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre># Kubernetes Metrics Server

Metrics Server is a scalable, efficient source of container resource metrics for Kubernetes
built-in autoscaling pipelines.

Metrics Server collects resource metrics from Kubelets and exposes them in Kubernetes apiserver through [Metrics API]
for use by [Horizontal Pod Autoscaler] and [Vertical Pod Autoscaler]. Metrics API can also be accessed by `kubectl top`,
making it easier to debug autoscaling pipelines.

&gt; [!CAUTION]
&gt; Metrics Server is meant only for autoscaling purposes. For example, don&#039;t use it to forward metrics to monitoring solutions, or as a source of monitoring solution metrics. In such cases please collect metrics from Kubelet `/metrics/resource` endpoint directly.

Metrics Server offers:

- A single deployment that works on most clusters (see [Requirements](#requirements))
- Fast autoscaling, collecting metrics every 15 seconds.
- Resource efficiency, using 1 mili core of CPU and 2 MB of memory for each node in a cluster.
- Scalable support up to 5,000 node clusters.

[Metrics API]: https://github.com/kubernetes/metrics
[Horizontal Pod Autoscaler]: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
[Vertical Pod Autoscaler]: https://github.com/kubernetes/autoscaler/tree/master/vertical-pod-autoscaler/

## Use cases

You can use Metrics Server for:

- CPU/Memory based horizontal autoscaling (learn more about [Horizontal Autoscaling])
- Automatically adjusting/suggesting resources needed by containers (learn more about [Vertical Autoscaling])

Don&#039;t use Metrics Server when you need:

- Non-Kubernetes clusters
- An accurate source of resource usage metrics
- Horizontal autoscaling based on other resources than CPU/Memory

For unsupported use cases, check out full monitoring solutions like [Prometheus](https://github.com/prometheus/prometheus).

[Horizontal Autoscaling]: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
[Vertical Autoscaling]: https://github.com/kubernetes/autoscaler/tree/master/vertical-pod-autoscaler/

## Requirements

Metrics Server has specific requirements for cluster and network configuration. These requirements aren&#039;t the default for all cluster
distributions. Please ensure that your cluster distribution supports these requirements before using Metrics Server:

- The kube-apiserver must [enable an aggregation layer].
- Nodes must have Webhook [authentication and authorization] enabled.
- Kubelet certificate needs to be signed by cluster Certificate Authority (or disable certificate validation by passing `--kubelet-insecure-tls` to Metrics Server)
- Container runtime must implement a [container metrics RPCs] (or have [cAdvisor] support)
- Network should support following communication:
  - Control plane to Metrics Server. Control plane node needs to reach Metrics Server&#039;s pod IP and port 10250 (or node IP and custom port if `hostNetwork` is enabled). Read more about [control plane to node communication](https://kubernetes.io/docs/concepts/architecture/control-plane-node-communication/#control-plane-to-node).
  - Metrics Server to Kubelet on all nodes. Metrics server needs to reach node address and Kubelet port. Addresses and ports are configured in Kubelet and published as part of Node object. Addresses in `.status.addresses` and port in `.status.daemonEndpoints.kubeletEndpoint.port` field (default 10250). Metrics Server will pick first node address based on the list provided by `kubelet-preferred-address-types` command line flag (default `InternalIP,ExternalIP,Hostname` in manifests).

[reachable from kube-apiserver]: https://kubernetes.io/docs/concepts/architecture/master-node-communication/#master-to-cluster
[enable an aggregation layer]: https://kubernetes.io/docs/tasks/access-kubernetes-api/configure-aggregation-layer/
[authentication and authorization]: https://kubernetes.io/docs/reference/access-authn-authz/kubelet-authn-authz/
[container metrics RPCs]: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-node/cri-container-stats.md
[cAdvisor]: https://github.com/google/cadvisor

## Installation

Metrics Server can be installed either directly from YAML manifest or via the official [Helm chart](https://artifacthub.io/packages/helm/metrics-server/metrics-server). To install the latest Metrics Server release from the _components.yaml_ manifest, run the following command.

```shell
kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
```

Installation instructions for previous releases can be found in [Metrics Server releases](https://github.com/kubernetes-sigs/metrics-server/releases).

### Compatibility Matrix

Metrics Server | Metrics API group/version | Supported Kubernetes version
---------------|---------------------------|-----------------------------
0.7.x          | `metrics.k8s.io/v1beta1`  | 1.19+
0.6.x          | `metrics.k8s.io/v1beta1`  | 1.19+
0.5.x          | `metrics.k8s.io/v1beta1`  | *1.8+
0.4.x          | `metrics.k8s.io/v1beta1`  | *1.8+
0.3.x          | `metrics.k8s.io/v1beta1`  | 1.8-1.21

*Kubernetes versions lower than v1.16 require passing the `--authorization-always-allow-paths=/livez,/readyz` command line flag

### High Availability

Metrics Server can be installed in high availability mode directly from a YAML manifest or via the official [Helm chart](https://artifacthub.io/packages/helm/metrics-server/metrics-server) by setting the `replicas` value greater than `1`. To install the latest Metrics Server release in high availability mode from the  _high-availability.yaml_ manifest, run the following command.

On Kubernetes v1.21+:
```
kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/high-availability-1.21+.yaml
```

On Kubernetes v1.19-1.21:
```shell
kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/high-availability.yaml
```

&gt;[!NOTE]
&gt; This configuration **requires** having a cluster with at least 2 nodes on which Metrics Server can be scheduled.

Also, to maximize the efficiency of this highly available configuration, it is **recommended** to add the `--enable-aggregator-routing=true` CLI flag to the kube-apiserver so that requests sent to Metrics Server are load balanced between the 2 instances.

### Helm Chart

The [Helm chart](https://artifacthub.io/packages/helm/metrics-server/metrics-server) is maintained as an additional component within this repo and released into a chart repository backed on the `gh-pages` branch. A new version of the chart will be released for each Metrics Server release and can also be released independently if there is a need. The chart on the `master` branch shouldn&#039;t be referenced directly as it might contain modifications since it was last released, to view the chart code use the chart release tag.

## Security context

Metrics Server requires the `CAP_NET_BIND_SERVICE` capability in order to bind to a privileged ports as non-root.
If you are running Metrics Server in an environment that uses [PSSs](https://kubernetes.io/docs/concepts/security/pod-security-standards/) or other mechanisms to restrict pod capabilities, ensure that Metrics Server is allowed
to use this capability.
This applies even if you use the `--secure-port` flag to change the port that Metrics Server binds to a non-privileged port.

## Scaling

Starting from v0.5.0 Metrics Server comes with default resource requests that should guarantee good performance for most cluster configurations up to 100 nodes:

- 100m core of CPU
- 200MiB of memory

Metrics Server resource usage depends on multiple independent dimensions, creating a [Scalability Envelope].
Default Metrics Server configuration should work in clusters that don&#039;t exceed any of the thresholds listed below:

Quantity               | Namespace threshold | Cluster threshold
-----------------------|---------------------|------------------
#Nodes                 | n/a                 | 100
#Pods per node         | 70                  | 70
#Deployments with HPAs | 100                 | 100

Resources can be adjusted proportionally based on number of nodes in the cluster.
For clusters of more than 100 nodes, allocate additionally:

- 1m core per node
- 2MiB memory per node

You can use the same approach to lower resource requests, but there is a boundary
where this may impact other scalability dimensions like maximum number of pods per node.

[Scalability Envelope]: https://github.com/kubernetes/community/blob/master/sig-scalability/configs-and-limits/thresholds.md

### Configuration

Depending on your cluster setup, you may also need to change flags passed to the Metrics Server container.
Most useful flags:

- `--kubelet-preferred-address-types` - The priority of node address types used when determining an address for connecting to a particular node (default [Hostname,InternalDNS,InternalIP,ExternalDNS,ExternalIP])
- `--kubelet-insecure-tls` - Do not verify the CA of serving certificates presented by Kubelets. For testing purposes only.
- `--requestheader-client-ca-file` - Specify a root certificate bundle for verifying client certificates on incoming requests.
- `--node-selector` -Can complete to scrape the metrics from the Specified nodes based on labels

You can get a full list of Metrics Server configuration flags by running:

```shell
docker run --rm registry.k8s.io/metrics-server/metrics-server:v0.7.0 --help
```

## Design

Metrics Server is a component in the core metrics pipeline described in [Kubernetes monitoring architecture].

For more information, see:

- [Metrics API design]
- [Metrics Server design]

[Kubernetes monitoring architecture]: https://github.com/kubernetes/design-proposals-archive/blob/main/instrumentation/monitoring_architecture.md
[Metrics API design]: https://github.com/kubernetes/design-proposals-archive/blob/main/instrumentation/resource-metrics-api.md
[Metrics Server design]: https://github.com/kubernetes/design-proposals-archive/blob/main/instrumentation/metrics-server.md

## Have a question?

Before posting an issue, first checkout [Frequently Asked Questions] and [Known Issues].

[Frequently Asked Questions]: FAQ.md
[Known Issues]: KNOWN_ISSUES.md

## Community, discussion, contribution, and support

Learn how to engage with the Kubernetes community on the [community page].

You can reach the maintainers of this project at:

- [Slack channel]
- [Mailing list]

This project is maintained by [SIG Instrumentation]

[community page]: http://kubernetes.io/community/
[Slack channel]: https://kubernetes.slack.com/messages/sig-instrumentation
[Mailing list]: https://groups.google.com/forum/#!forum/kubernetes-sig-instrumentation
[SIG Instrumentation]: https://github.com/kubernetes/community/tree/master/sig-instrumentation

### Code of conduct

Participation in the Kubernetes community is governed by the [Kubernetes Code of Conduct].

[Kubernetes Code of Conduct]: code-of-conduct.md
</pre>
          ]]></content:encoded>
            <category>Go</category>
        </item>
    </channel>
</rss>