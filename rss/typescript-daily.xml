<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Tue, 15 Jul 2025 00:05:28 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[vercel/commerce]]></title>
            <link>https://github.com/vercel/commerce</link>
            <guid>https://github.com/vercel/commerce</guid>
            <pubDate>Tue, 15 Jul 2025 00:05:28 GMT</pubDate>
            <description><![CDATA[Next.js Commerce]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vercel/commerce">vercel/commerce</a></h1>
            <p>Next.js Commerce</p>
            <p>Language: TypeScript</p>
            <p>Stars: 13,104</p>
            <p>Forks: 4,877</p>
            <p>Stars today: 367 stars today</p>
            <h2>README</h2><pre>[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fvercel%2Fcommerce&amp;project-name=commerce&amp;repo-name=commerce&amp;demo-title=Next.js%20Commerce&amp;demo-url=https%3A%2F%2Fdemo.vercel.store&amp;demo-image=https%3A%2F%2Fbigcommerce-demo-asset-ksvtgfvnd.vercel.app%2Fbigcommerce.png&amp;env=COMPANY_NAME,SHOPIFY_REVALIDATION_SECRET,SHOPIFY_STORE_DOMAIN,SHOPIFY_STOREFRONT_ACCESS_TOKEN,SITE_NAME)

# Next.js Commerce

A high-performance, server-rendered Next.js App Router ecommerce application.

This template uses React Server Components, Server Actions, `Suspense`, `useOptimistic`, and more.

&lt;h3 id=&quot;v1-note&quot;&gt;&lt;/h3&gt;

&gt; Note: Looking for Next.js Commerce v1? View the [code](https://github.com/vercel/commerce/tree/v1), [demo](https://commerce-v1.vercel.store), and [release notes](https://github.com/vercel/commerce/releases/tag/v1).

## Providers

Vercel will only be actively maintaining a Shopify version [as outlined in our vision and strategy for Next.js Commerce](https://github.com/vercel/commerce/pull/966).

Vercel is happy to partner and work with any commerce provider to help them get a similar template up and running and listed below. Alternative providers should be able to fork this repository and swap out the `lib/shopify` file with their own implementation while leaving the rest of the template mostly unchanged.

- Shopify (this repository)
- [BigCommerce](https://github.com/bigcommerce/nextjs-commerce) ([Demo](https://next-commerce-v2.vercel.app/))
- [Ecwid by Lightspeed](https://github.com/Ecwid/ecwid-nextjs-commerce/) ([Demo](https://ecwid-nextjs-commerce.vercel.app/))
- [Geins](https://github.com/geins-io/vercel-nextjs-commerce) ([Demo](https://geins-nextjs-commerce-starter.vercel.app/))
- [Medusa](https://github.com/medusajs/vercel-commerce) ([Demo](https://medusa-nextjs-commerce.vercel.app/))
- [Prodigy Commerce](https://github.com/prodigycommerce/nextjs-commerce) ([Demo](https://prodigy-nextjs-commerce.vercel.app/))
- [Saleor](https://github.com/saleor/nextjs-commerce) ([Demo](https://saleor-commerce.vercel.app/))
- [Shopware](https://github.com/shopwareLabs/vercel-commerce) ([Demo](https://shopware-vercel-commerce-react.vercel.app/))
- [Swell](https://github.com/swellstores/verswell-commerce) ([Demo](https://verswell-commerce.vercel.app/))
- [Umbraco](https://github.com/umbraco/Umbraco.VercelCommerce.Demo) ([Demo](https://vercel-commerce-demo.umbraco.com/))
- [Wix](https://github.com/wix/headless-templates/tree/main/nextjs/commerce) ([Demo](https://wix-nextjs-commerce.vercel.app/))
- [Fourthwall](https://github.com/FourthwallHQ/vercel-commerce) ([Demo](https://vercel-storefront.fourthwall.app/))

&gt; Note: Providers, if you are looking to use similar products for your demo, you can [download these assets](https://drive.google.com/file/d/1q_bKerjrwZgHwCw0ovfUMW6He9VtepO_/view?usp=sharing).

## Integrations

Integrations enable upgraded or additional functionality for Next.js Commerce

- [Orama](https://github.com/oramasearch/nextjs-commerce) ([Demo](https://vercel-commerce.oramasearch.com/))

  - Upgrades search to include typeahead with dynamic re-rendering, vector-based similarity search, and JS-based configuration.
  - Search runs entirely in the browser for smaller catalogs or on a CDN for larger.

- [React Bricks](https://github.com/ReactBricks/nextjs-commerce-rb) ([Demo](https://nextjs-commerce.reactbricks.com/))
  - Edit pages, product details, and footer content visually using [React Bricks](https://www.reactbricks.com) visual headless CMS.

## Running locally

You will need to use the environment variables [defined in `.env.example`](.env.example) to run Next.js Commerce. It&#039;s recommended you use [Vercel Environment Variables](https://vercel.com/docs/concepts/projects/environment-variables) for this, but a `.env` file is all that is necessary.

&gt; Note: You should not commit your `.env` file or it will expose secrets that will allow others to control your Shopify store.

1. Install Vercel CLI: `npm i -g vercel`
2. Link local instance with Vercel and GitHub accounts (creates `.vercel` directory): `vercel link`
3. Download your environment variables: `vercel env pull`

```bash
pnpm install
pnpm dev
```

Your app should now be running on [localhost:3000](http://localhost:3000/).

&lt;details&gt;
  &lt;summary&gt;Expand if you work at Vercel and want to run locally and / or contribute&lt;/summary&gt;

1. Run `vc link`.
1. Select the `Vercel Solutions` scope.
1. Connect to the existing `commerce-shopify` project.
1. Run `vc env pull` to get environment variables.
1. Run `pnpm dev` to ensure everything is working correctly.
&lt;/details&gt;

## Vercel, Next.js Commerce, and Shopify Integration Guide

You can use this comprehensive [integration guide](https://vercel.com/docs/integrations/ecommerce/shopify) with step-by-step instructions on how to configure Shopify as a headless CMS using Next.js Commerce as your headless Shopify storefront on Vercel.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[musistudio/claude-code-router]]></title>
            <link>https://github.com/musistudio/claude-code-router</link>
            <guid>https://github.com/musistudio/claude-code-router</guid>
            <pubDate>Tue, 15 Jul 2025 00:05:27 GMT</pubDate>
            <description><![CDATA[Use Claude Code as the foundation for coding infrastructure, allowing you to decide how to interact with the model while enjoying updates from Anthropic.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/musistudio/claude-code-router">musistudio/claude-code-router</a></h1>
            <p>Use Claude Code as the foundation for coding infrastructure, allowing you to decide how to interact with the model while enjoying updates from Anthropic.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,020</p>
            <p>Forks: 313</p>
            <p>Stars today: 326 stars today</p>
            <h2>README</h2><pre># Claude Code Router

&gt; This is a tool for routing Claude Code requests to different models, and you can customize any request.

![](screenshoots/claude-code.png)

## Usage

1. Install Claude Code

```shell
npm install -g @anthropic-ai/claude-code
```

2. Install Claude Code Router

```shell
npm install -g @musistudio/claude-code-router
```

3. Start Claude Code by claude-code-router

```shell
ccr code
```

4. Configure routing[optional]  
   Set up your `~/.claude-code-router/config.json` file like this:

```json
{
  &quot;Providers&quot;: [
    {
      &quot;name&quot;: &quot;openrouter&quot;,
      // IMPORTANT: api_base_url must be a complete (full) URL.
      &quot;api_base_url&quot;: &quot;https://openrouter.ai/api/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;sk-xxx&quot;,
      &quot;models&quot;: [
        &quot;google/gemini-2.5-pro-preview&quot;,
        &quot;anthropic/claude-sonnet-4&quot;,
        &quot;anthropic/claude-3.5-sonnet&quot;,
        &quot;anthropic/claude-3.7-sonnet:thinking&quot;
      ],
      &quot;transformer&quot;: {
        &quot;use&quot;: [&quot;openrouter&quot;]
      }
    },
    {
      &quot;name&quot;: &quot;deepseek&quot;,
      // IMPORTANT: api_base_url must be a complete (full) URL.
      &quot;api_base_url&quot;: &quot;https://api.deepseek.com/chat/completions&quot;,
      &quot;api_key&quot;: &quot;sk-xxx&quot;,
      &quot;models&quot;: [&quot;deepseek-chat&quot;, &quot;deepseek-reasoner&quot;],
      &quot;transformer&quot;: {
        &quot;use&quot;: [&quot;deepseek&quot;],
        &quot;deepseek-chat&quot;: {
          // Enhance tool usage for the deepseek-chat model using the ToolUse transformer.
          &quot;use&quot;: [&quot;tooluse&quot;]
        }
      }
    },
    {
      &quot;name&quot;: &quot;ollama&quot;,
      // IMPORTANT: api_base_url must be a complete (full) URL.
      &quot;api_base_url&quot;: &quot;http://localhost:11434/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;ollama&quot;,
      &quot;models&quot;: [&quot;qwen2.5-coder:latest&quot;]
    },
    {
      &quot;name&quot;: &quot;gemini&quot;,
      // IMPORTANT: api_base_url must be a complete (full) URL.
      &quot;api_base_url&quot;: &quot;https://generativelanguage.googleapis.com/v1beta/models/&quot;,
      &quot;api_key&quot;: &quot;sk-xxx&quot;,
      &quot;models&quot;: [&quot;gemini-2.5-flash&quot;, &quot;gemini-2.5-pro&quot;],
      &quot;transformer&quot;: {
        &quot;use&quot;: [&quot;gemini&quot;]
      }
    },
    {
      &quot;name&quot;: &quot;volcengine&quot;,
      // IMPORTANT: api_base_url must be a complete (full) URL.
      &quot;api_base_url&quot;: &quot;https://ark.cn-beijing.volces.com/api/v3/chat/completions&quot;,
      &quot;api_key&quot;: &quot;sk-xxx&quot;,
      &quot;models&quot;: [&quot;deepseek-v3-250324&quot;, &quot;deepseek-r1-250528&quot;],
      &quot;transformer&quot;: {
        &quot;use&quot;: [&quot;deepseek&quot;]
      }
    }
  ],
  &quot;Router&quot;: {
    &quot;default&quot;: &quot;deepseek,deepseek-chat&quot;, // IMPORTANT OPENAI_MODEL has been deprecated
    &quot;background&quot;: &quot;ollama,qwen2.5-coder:latest&quot;,
    &quot;think&quot;: &quot;deepseek,deepseek-reasoner&quot;,
    &quot;longContext&quot;: &quot;openrouter,google/gemini-2.5-pro-preview&quot;
  }
}
```

- `background`  
  This model will be used to handle some background tasks([background-token-usage](https://docs.anthropic.com/en/docs/claude-code/costs#background-token-usage)). Based on my tests, it doesn’t require high intelligence. I’m using the qwen-coder-2.5:7b model running locally on my MacBook Pro M1 (32GB) via Ollama.
  If your computer can’t run Ollama, you can also use some free models, such as qwen-coder-2.5:3b.

- `think`  
  This model will be used when enabling Claude Code to perform reasoning. However, reasoning budget control has not yet been implemented (since the DeepSeek-R1 model does not support it), so there is currently no difference between using UltraThink and Think modes.
  It is worth noting that Plan Mode also use this model to achieve better planning results.  
  Note: The reasoning process via the official DeepSeek API may be very slow, so you may need to wait for an extended period of time.

- `longContext`  
  This model will be used when the context length exceeds 32K (this value may be modified in the future). You can route the request to a model that performs well with long contexts (I’ve chosen google/gemini-2.5-pro-preview). This scenario has not been thoroughly tested yet, so if you encounter any issues, please submit an issue.

- model command  
  You can also switch models within Claude Code by using the `/model` command. The format is: `provider,model`, like this:  
  `/model openrouter,anthropic/claude-3.5-sonnet`  
  This will use the anthropic/claude-3.5-sonnet model provided by OpenRouter to handle all subsequent tasks.

## Features

- [x] Support change models
- [x] Github Actions
- [ ] More detailed logs
- [ ] Support image
- [ ] Support web search

## Github Actions

You just need to install `Claude Code Actions` in your repository according to the [official documentation](https://docs.anthropic.com/en/docs/claude-code/github-actions). For `ANTHROPIC_API_KEY`, you can use any string. Then, modify your `.github/workflows/claude.yaml` file to include claude-code-router, like this:

```yaml
name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == &#039;issue_comment&#039; &amp;&amp; contains(github.event.comment.body, &#039;@claude&#039;)) ||
      (github.event_name == &#039;pull_request_review_comment&#039; &amp;&amp; contains(github.event.comment.body, &#039;@claude&#039;)) ||
      (github.event_name == &#039;pull_request_review&#039; &amp;&amp; contains(github.event.review.body, &#039;@claude&#039;)) ||
      (github.event_name == &#039;issues&#039; &amp;&amp; (contains(github.event.issue.body, &#039;@claude&#039;) || contains(github.event.issue.title, &#039;@claude&#039;)))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Prepare Environment
        run: |
          curl -fsSL https://bun.sh/install | bash
          mkdir -p $HOME/.claude-code-router
          cat &lt;&lt; &#039;EOF&#039; &gt; $HOME/.claude-code-router/config.json
          {
            &quot;log&quot;: true,
            &quot;OPENAI_API_KEY&quot;: &quot;${{ secrets.OPENAI_API_KEY }}&quot;,
            &quot;OPENAI_BASE_URL&quot;: &quot;https://api.deepseek.com&quot;,
            &quot;OPENAI_MODEL&quot;: &quot;deepseek-chat&quot;
          }
          EOF
        shell: bash

      - name: Start Claude Code Router
        run: |
          nohup ~/.bun/bin/bunx @musistudio/claude-code-router@1.0.8 start &amp;
        shell: bash

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        env:
          ANTHROPIC_BASE_URL: http://localhost:3456
        with:
          anthropic_api_key: &quot;test&quot;
```

You can modify the contents of `$HOME/.claude-code-router/config.json` as needed.
GitHub Actions support allows you to trigger Claude Code at specific times, which opens up some interesting possibilities.

For example, between 00:30 and 08:30 Beijing Time, using the official DeepSeek API:

- The cost of the `deepseek-v3` model is only 50% of the normal time.

- The `deepseek-r1` model is just 25% of the normal time.

So maybe in the future, I’ll describe detailed tasks for Claude Code ahead of time and let it run during these discounted hours to reduce costs?

## Some tips:

Now you can use deepseek-v3 models directly without using any plugins.

If you’re using the DeepSeek API provided by the official website, you might encounter an “exceeding context” error after several rounds of conversation (since the official API only supports a 64K context window). In this case, you’ll need to discard the previous context and start fresh. Alternatively, you can use ByteDance’s DeepSeek API, which offers a 128K context window and supports KV cache.

![](screenshoots/contexterror.jpg)

Note: claude code consumes a huge amount of tokens, but thanks to DeepSeek’s low cost, you can use claude code at a fraction of Claude’s price, and you don’t need to subscribe to the Claude Max plan.

Some interesting points: Based on my testing, including a lot of context information can help narrow the performance gap between these LLM models. For instance, when I used Claude-4 in VSCode Copilot to handle a Flutter issue, it messed up the files in three rounds of conversation, and I had to roll everything back. However, when I used claude code with DeepSeek, after three or four rounds of conversation, I finally managed to complete my task—and the cost was less than 1 RMB!

## Some articles:

1. [Project Motivation and Principles](blog/en/project-motivation-and-how-it-works.md) ([项目初衷及原理](blog/zh/项目初衷及原理.md))
2. [Maybe We Can Do More with the Router](blog/en/maybe-we-can-do-more-with-the-route.md) ([或许我们能在 Router 中做更多事情](blog/zh/或许我们能在Router中做更多事情.md))

## Buy me a coffee

If you find this project helpful, you can choose to sponsor the author with a cup of coffee. Please provide your GitHub information so I can add you to the sponsor list below.

[![ko-fi](https://ko-fi.com/img/githubbutton_sm.svg)](https://ko-fi.com/F1F31GN2GM)

&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;img src=&quot;/blog/images/alipay.jpg&quot; width=&quot;200&quot; /&gt;&lt;/td&gt;
    &lt;td&gt;&lt;img src=&quot;/blog/images/wechat.jpg&quot; width=&quot;200&quot; /&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

## Sponsors

Thanks to the following sponsors for supporting the continued development of this project:

@Simon Leischnig (If you see this, feel free to contact me and I can update it with your GitHub information)  
[@duanshuaimin](https://github.com/duanshuaimin)  
[@vrgitadmin](https://github.com/vrgitadmin)  
@\*o (可通过主页邮箱联系我修改 github 用户名)  
[@ceilwoo](https://github.com/ceilwoo)      
@\*说 (可通过主页邮箱联系我修改 github 用户名)  
@\*更 (可通过主页邮箱联系我修改 github 用户名)  
@K\*g (可通过主页邮箱联系我修改 github 用户名)  
@R\*R (可通过主页邮箱联系我修改 github 用户名)  
[@bobleer](https://github.com/bobleer)     
@\*苗 (可通过主页邮箱联系我修改 github 用户名)  
@\*划 (可通过主页邮箱联系我修改 github 用户名)     
[@Clarence-pan](https://github.com/Clarence-pan)     
[@carter003](https://github.com/carter003)      
@S\*r (可通过主页邮箱联系我修改 github 用户名)     
@\*晖 (可通过主页邮箱联系我修改 github 用户名)      
@\*敏 (可通过主页邮箱联系我修改 github 用户名)      
@Z\*z (可通过主页邮箱联系我修改 github 用户名)      
@\*然 (可通过主页邮箱联系我修改 github 用户名)      
@\*浩 (可通过主页邮箱联系我修改 github 用户名)      </pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[browserbase/stagehand]]></title>
            <link>https://github.com/browserbase/stagehand</link>
            <guid>https://github.com/browserbase/stagehand</guid>
            <pubDate>Tue, 15 Jul 2025 00:05:26 GMT</pubDate>
            <description><![CDATA[The AI Browser Automation Framework]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/browserbase/stagehand">browserbase/stagehand</a></h1>
            <p>The AI Browser Automation Framework</p>
            <p>Language: TypeScript</p>
            <p>Stars: 13,930</p>
            <p>Forks: 834</p>
            <p>Stars today: 358 stars today</p>
            <h2>README</h2><pre>&lt;div id=&quot;toc&quot; align=&quot;center&quot; style=&quot;margin-bottom: 0;&quot;&gt;
  &lt;ul style=&quot;list-style: none; margin: 0; padding: 0;&quot;&gt;
    &lt;a href=&quot;https://stagehand.dev&quot;&gt;
      &lt;picture&gt;
        &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;media/dark_logo.png&quot; /&gt;
        &lt;img alt=&quot;Stagehand&quot; src=&quot;media/light_logo.png&quot; width=&quot;200&quot; style=&quot;margin-right: 30px;&quot; /&gt;
      &lt;/picture&gt;
    &lt;/a&gt;
  &lt;/ul&gt;
&lt;/div&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;strong&gt;The AI Browser Automation Framework&lt;/strong&gt;&lt;br&gt;
  &lt;a href=&quot;https://docs.stagehand.dev&quot;&gt;Read the Docs&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/browserbase/stagehand/tree/main?tab=MIT-1-ov-file#MIT-1-ov-file&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;media/dark_license.svg&quot; /&gt;
      &lt;img alt=&quot;MIT License&quot; src=&quot;media/light_license.svg&quot; /&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://join.slack.com/t/stagehand-dev/shared_invite/zt-38khc8iv5-T2acb50_0OILUaX7lxeBOg&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;media/dark_slack.svg&quot; /&gt;
      &lt;img alt=&quot;Slack Community&quot; src=&quot;media/light_slack.svg&quot; /&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
	&lt;a href=&quot;https://trendshift.io/repositories/12122&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/12122&quot; alt=&quot;browserbase%2Fstagehand | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
If you&#039;re looking for the Python implementation, you can find it 
&lt;a href=&quot;https://github.com/browserbase/stagehand-python&quot;&gt; here&lt;/a&gt;
&lt;/p&gt;

&lt;div align=&quot;center&quot; style=&quot;display: flex; align-items: center; justify-content: center; gap: 4px; margin-bottom: 0;&quot;&gt;
  &lt;b&gt;Vibe code&lt;/b&gt;
  &lt;span style=&quot;font-size: 1.05em;&quot;&gt; Stagehand with &lt;/span&gt;
  &lt;a href=&quot;https://director.ai&quot; style=&quot;display: flex; align-items: center;&quot;&gt;
    &lt;span&gt;Director&lt;/span&gt;
  &lt;/a&gt;
  &lt;span&gt; &lt;/span&gt;
  &lt;picture&gt;
    &lt;img alt=&quot;Director&quot; src=&quot;media/director_icon.svg&quot; width=&quot;25&quot; /&gt;
  &lt;/picture&gt;
&lt;/div&gt;

## Why Stagehand?

Most existing browser automation tools either require you to write low-level code in a framework like Selenium, Playwright, or Puppeteer, or use high-level agents that can be unpredictable in production. By letting developers choose what to write in code vs. natural language, Stagehand is the natural choice for browser automations in production.

1. **Choose when to write code vs. natural language**: use AI when you want to navigate unfamiliar pages, and use code ([Playwright](https://playwright.dev/)) when you know exactly what you want to do.

2. **Preview and cache actions**: Stagehand lets you preview AI actions before running them, and also helps you easily cache repeatable actions to save time and tokens.

3. **Computer use models with one line of code**: Stagehand lets you integrate SOTA computer use models from OpenAI and Anthropic into the browser with one line of code.

## Example

Here&#039;s how to build a sample browser automation with Stagehand:

&lt;div align=&quot;center&quot;&gt;
  &lt;div style=&quot;max-width:300px;&quot;&gt;
    &lt;img src=&quot;/media/github_demo.gif&quot; alt=&quot;See Stagehand in Action&quot;&gt;
  &lt;/div&gt;
&lt;/div&gt;

```typescript
// Use Playwright functions on the page object
const page = stagehand.page;
await page.goto(&quot;https://github.com/browserbase&quot;);

// Use act() to execute individual actions
await page.act(&quot;click on the stagehand repo&quot;);

// Use Computer Use agents for larger actions
const agent = stagehand.agent({
    provider: &quot;openai&quot;,
    model: &quot;computer-use-preview&quot;,
});
await agent.execute(&quot;Get to the latest PR&quot;);

// Use extract() to read data from the page
const { author, title } = await page.extract({
  instruction: &quot;extract the author and title of the PR&quot;,
  schema: z.object({
    author: z.string().describe(&quot;The username of the PR author&quot;),
    title: z.string().describe(&quot;The title of the PR&quot;),
  }),
});
```

## Documentation

Visit [docs.stagehand.dev](https://docs.stagehand.dev) to view the full documentation.

## Getting Started

Start with Stagehand with one line of code, or check out our [Quickstart Guide](https://docs.stagehand.dev/get_started/quickstart) for more information:

```bash
npx create-browser-app
```

&lt;div align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://www.loom.com/share/f5107f86d8c94fa0a8b4b1e89740f7a7&quot;&gt;
      &lt;p&gt;Watch Anirudh demo create-browser-app to create a Stagehand project!&lt;/p&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://www.loom.com/share/f5107f86d8c94fa0a8b4b1e89740f7a7&quot;&gt;
      &lt;img style=&quot;max-width:300px;&quot; src=&quot;https://cdn.loom.com/sessions/thumbnails/f5107f86d8c94fa0a8b4b1e89740f7a7-ec3f428b6775ceeb-full-play.gif&quot;&gt;
    &lt;/a&gt;
  &lt;/div&gt;

### Build and Run from Source

```bash
git clone https://github.com/browserbase/stagehand.git
cd stagehand
pnpm install
pnpm playwright install
pnpm run build
pnpm run example # run the blank script at ./examples/example.ts
pnpm run example 2048 # run the 2048 example at ./examples/2048.ts
```

Stagehand is best when you have an API key for an LLM provider and Browserbase credentials. To add these to your project, run:

```bash
cp .env.example .env
nano .env # Edit the .env file to add API keys
```

## Contributing

&gt; [!NOTE]  
&gt; We highly value contributions to Stagehand! For questions or support, please join our [Slack community](https://join.slack.com/t/stagehand-dev/shared_invite/zt-38khc8iv5-T2acb50_0OILUaX7lxeBOg).

At a high level, we&#039;re focused on improving reliability, speed, and cost in that order of priority. If you&#039;re interested in contributing, we strongly recommend reaching out to [Miguel Gonzalez](https://x.com/miguel_gonzf) or [Paul Klein](https://x.com/pk_iv) in our [Slack community](https://join.slack.com/t/stagehand-dev/shared_invite/zt-38khc8iv5-T2acb50_0OILUaX7lxeBOg) before starting to ensure that your contribution aligns with our goals.

For more information, please see our [Contributing Guide](https://docs.stagehand.dev/examples/contributing).

## Acknowledgements

This project heavily relies on [Playwright](https://playwright.dev/) as a resilient backbone to automate the web. It also would not be possible without the awesome techniques and discoveries made by [tarsier](https://github.com/reworkd/tarsier), [gemini-zod](https://github.com/jbeoris/gemini-zod), and [fuji-web](https://github.com/normal-computing/fuji-web).

We&#039;d like to thank the following people for their major contributions to Stagehand:
- [Paul Klein](https://github.com/pkiv)
- [Anirudh Kamath](https://github.com/kamath)
- [Sean McGuire](https://github.com/seanmcguire12)
- [Miguel Gonzalez](https://github.com/miguelg719)
- [Sameel Arif](https://github.com/sameelarif)
- [Filip Michalsky](https://github.com/filip-michalsky)
- [Jeremy Press](https://x.com/jeremypress)
- [Navid Pour](https://github.com/navidpour)

## License

Licensed under the MIT License.

Copyright 2025 Browserbase, Inc.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[TriliumNext/Trilium]]></title>
            <link>https://github.com/TriliumNext/Trilium</link>
            <guid>https://github.com/TriliumNext/Trilium</guid>
            <pubDate>Tue, 15 Jul 2025 00:05:25 GMT</pubDate>
            <description><![CDATA[Build your personal knowledge base with Trilium Notes]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/TriliumNext/Trilium">TriliumNext/Trilium</a></h1>
            <p>Build your personal knowledge base with Trilium Notes</p>
            <p>Language: TypeScript</p>
            <p>Stars: 29,475</p>
            <p>Forks: 1,978</p>
            <p>Stars today: 20 stars today</p>
            <h2>README</h2><pre># Trilium Notes

Donate: ![GitHub Sponsors](https://img.shields.io/github/sponsors/eliandoran?style=flat-square) ![LiberaPay patrons](https://img.shields.io/liberapay/patrons/ElianDoran?style=flat-square)

![Docker Pulls](https://img.shields.io/docker/pulls/triliumnext/notes?style=flat-square)
![GitHub Downloads (all assets, all releases)](https://img.shields.io/github/downloads/triliumnext/notes/total?style=flat-square)
[![RelativeCI](https://badges.relative-ci.com/badges/Di5q7dz9daNDZ9UXi0Bp?branch=develop&amp;style=flat-square)](https://app.relative-ci.com/projects/Di5q7dz9daNDZ9UXi0Bp)

[English](./README.md) | [Chinese](./docs/README-ZH_CN.md) | [Russian](./docs/README.ru.md) | [Japanese](./docs/README.ja.md) | [Italian](./docs/README.it.md) | [Spanish](./docs/README.es.md)

Trilium Notes is a free and open-source, cross-platform hierarchical note taking application with focus on building large personal knowledge bases.

See [screenshots](https://triliumnext.github.io/Docs/Wiki/screenshot-tour) for quick overview:

&lt;a href=&quot;https://triliumnext.github.io/Docs/Wiki/screenshot-tour&quot;&gt;&lt;img src=&quot;./docs/app.png&quot; alt=&quot;Trilium Screenshot&quot; width=&quot;1000&quot;&gt;&lt;/a&gt;

## 🎁 Features

* Notes can be arranged into arbitrarily deep tree. Single note can be placed into multiple places in the tree (see [cloning](https://triliumnext.github.io/Docs/Wiki/cloning-notes))
* Rich WYSIWYG note editor including e.g. tables, images and [math](https://triliumnext.github.io/Docs/Wiki/text-notes) with markdown [autoformat](https://triliumnext.github.io/Docs/Wiki/text-notes#autoformat)
* Support for editing [notes with source code](https://triliumnext.github.io/Docs/Wiki/code-notes), including syntax highlighting
* Fast and easy [navigation between notes](https://triliumnext.github.io/Docs/Wiki/note-navigation), full text search and [note hoisting](https://triliumnext.github.io/Docs/Wiki/note-hoisting)
* Seamless [note versioning](https://triliumnext.github.io/Docs/Wiki/note-revisions)
* Note [attributes](https://triliumnext.github.io/Docs/Wiki/attributes) can be used for note organization, querying and advanced [scripting](https://triliumnext.github.io/Docs/Wiki/scripts)
* UI available in English, German, Spanish, French, Romanian, and Chinese (simplified and traditional)
* Direct [OpenID and TOTP integration](./docs/User%20Guide/User%20Guide/Installation%20%26%20Setup/Server%20Installation/Multi-Factor%20Authentication.md) for more secure login
* [Synchronization](https://triliumnext.github.io/Docs/Wiki/synchronization) with self-hosted sync server
  * there&#039;s a [3rd party service for hosting synchronisation server](https://trilium.cc/paid-hosting)
* [Sharing](https://triliumnext.github.io/Docs/Wiki/sharing) (publishing) notes to public internet
* Strong [note encryption](https://triliumnext.github.io/Docs/Wiki/protected-notes) with per-note granularity
* Sketching diagrams, based on [Excalidraw](https://excalidraw.com/) (note type &quot;canvas&quot;)
* [Relation maps](https://triliumnext.github.io/Docs/Wiki/relation-map) and [link maps](https://triliumnext.github.io/Docs/Wiki/link-map) for visualizing notes and their relations
* Mind maps, based on [Mind Elixir](https://docs.mind-elixir.com/)
* [Geo maps](./docs/User%20Guide/User%20Guide/Note%20Types/Geo%20Map.md) with location pins and GPX tracks
* [Scripting](https://triliumnext.github.io/Docs/Wiki/scripts) - see [Advanced showcases](https://triliumnext.github.io/Docs/Wiki/advanced-showcases)
* [REST API](https://triliumnext.github.io/Docs/Wiki/etapi) for automation
* Scales well in both usability and performance upwards of 100 000 notes
* Touch optimized [mobile frontend](https://triliumnext.github.io/Docs/Wiki/mobile-frontend) for smartphones and tablets
* Built-in [dark theme](https://triliumnext.github.io/Docs/Wiki/themes), support for user themes
* [Evernote](https://triliumnext.github.io/Docs/Wiki/evernote-import) and [Markdown import &amp; export](https://triliumnext.github.io/Docs/Wiki/markdown)
* [Web Clipper](https://triliumnext.github.io/Docs/Wiki/web-clipper) for easy saving of web content
* Customizable UI (sidebar buttons, user-defined widgets, ...)
* [Metrics](./docs/User%20Guide/User%20Guide/Advanced%20Usage/Metrics.md), along with a [Grafana Dashboard](./docs/User%20Guide/User%20Guide/Advanced%20Usage/Metrics/grafana-dashboard.json)

✨ Check out the following third-party resources/communities for more TriliumNext related goodies:

- [awesome-trilium](https://github.com/Nriver/awesome-trilium) for 3rd party themes, scripts, plugins and more.
- [TriliumRocks!](https://trilium.rocks/) for tutorials, guides, and much more.

## ⚠️ Why TriliumNext?

[The original Trilium project is in maintenance mode](https://github.com/zadam/trilium/issues/4620).

### Migrating from Trilium?

There are no special migration steps to migrate from a zadam/Trilium instance to a TriliumNext/Notes instance. Simply [install TriliumNext/Notes](#-installation) as usual and it will use your existing database.

Versions up to and including [v0.90.4](https://github.com/TriliumNext/Notes/releases/tag/v0.90.4) are compatible with the latest zadam/trilium version of [v0.63.7](https://github.com/zadam/trilium/releases/tag/v0.63.7). Any later versions of TriliumNext have their sync versions incremented.

## 📖 Documentation

We&#039;re currently in the progress of moving the documentation to in-app (hit the `F1` key within Trilium). As a result, there may be some missing parts until we&#039;ve completed the migration. If you&#039;d prefer to navigate through the documentation within GitHub, you can navigate the [User Guide](./docs/User%20Guide/User%20Guide/) documentation. 

Below are some quick links for your convenience to navigate the documentation:
- [Server installation](./docs/User%20Guide/User%20Guide/Installation%20&amp;%20Setup/Server%20Installation.md)
  - [Docker installation](./docs/User%20Guide/User%20Guide/Installation%20&amp;%20Setup/Server%20Installation/1.%20Installing%20the%20server/Using%20Docker.md)
- [Upgrading TriliumNext](./docs/User%20Guide/User%20Guide/Installation%20%26%20Setup/Upgrading%20TriliumNext.md)
- [Concepts and Features - Note](./docs/User%20Guide/User%20Guide/Basic%20Concepts%20and%20Features/Notes.md)
- [Patterns of personal knowledge base](https://triliumnext.github.io/Docs/Wiki/patterns-of-personal-knowledge)

Until we finish reorganizing the documentation, you may also want to [browse the old documentation](https://triliumnext.github.io/Docs).

## 💬 Discuss with us

Feel free to join our official conversations. We would love to hear what features, suggestions, or issues you may have!

- [Matrix](https://matrix.to/#/#triliumnext:matrix.org) (For synchronous discussions.)
  - The `General` Matrix room is also bridged to [XMPP](xmpp:discuss@trilium.thisgreat.party?join)
- [Github Discussions](https://github.com/TriliumNext/Notes/discussions) (For asynchronous discussions.)
- [Github Issues](https://github.com/TriliumNext/Notes/issues) (For bug reports and feature requests.)

## 🏗 Installation

### Windows / MacOS

Download the binary release for your platform from the [latest release page](https://github.com/TriliumNext/Notes/releases/latest), unzip the package and run the `trilium` executable.

### Linux

If your distribution is listed in the table below, use your distribution&#039;s package.

[![Packaging status](https://repology.org/badge/vertical-allrepos/triliumnext.svg)](https://repology.org/project/triliumnext/versions)

You may also download the binary release for your platform from the [latest release page](https://github.com/TriliumNext/Notes/releases/latest), unzip the package and run the `trilium` executable.

TriliumNext is also provided as a Flatpak, but not yet published on FlatHub.

### Browser (any OS)

If you use a server installation (see below), you can directly access the web interface (which is almost identical to the desktop app).

Currently only the latest versions of Chrome &amp; Firefox are supported (and tested).

### Mobile

To use TriliumNext on a mobile device, you can use a mobile web browser to access the mobile interface of a server installation (see below).

If you prefer a native Android app, you can use [TriliumDroid](https://apt.izzysoft.de/fdroid/index/apk/eu.fliegendewurst.triliumdroid). Report bugs and missing features at [their repository](https://github.com/FliegendeWurst/TriliumDroid).

See issue https://github.com/TriliumNext/Notes/issues/72 for more information on mobile app support.

### Server

To install TriliumNext on your own server (including via Docker from [Dockerhub](https://hub.docker.com/r/triliumnext/notes)) follow [the server installation docs](https://triliumnext.github.io/Docs/Wiki/server-installation).


## 💻 Contribute

### Code

Download the repository, install dependencies using `pnpm` and then run the server (available at http://localhost:8080):
```shell
git clone https://github.com/TriliumNext/Trilium.git
cd Trilium
pnpm install
pnpm run server:start
```

### Documentation

Download the repository, install dependencies using `pnpm` and then run the environment required to edit the documentation:
```shell
git clone https://github.com/TriliumNext/Trilium.git
cd Trilium
pnpm install
pnpm nx run edit-docs:edit-docs
```

### Building the Executable
Download the repository, install dependencies using `pnpm` and then build the desktop app for Windows:
```shell
git clone https://github.com/TriliumNext/Trilium.git
cd Trilium
pnpm install
pnpm nx --project=desktop electron-forge:make -- --arch=x64 --platform=win32
```

For more details, see the [development docs](https://github.com/TriliumNext/Notes/blob/develop/docs/Developer%20Guide/Developer%20Guide/Building%20and%20deployment/Running%20a%20development%20build.md).

### Developer Documentation

Please view the [documentation guide](./docs/Developer%20Guide/Developer%20Guide/Environment%20Setup.md) for details. If you have more questions, feel free to reach out via the links described in the &quot;Discuss with us&quot; section above.

## 👏 Shoutouts

* [CKEditor 5](https://github.com/ckeditor/ckeditor5) - best WYSIWYG editor on the market, very interactive and listening team
* [FancyTree](https://github.com/mar10/fancytree) - very feature rich tree library without real competition. Trilium Notes would not be the same without it.
* [CodeMirror](https://github.com/codemirror/CodeMirror) - code editor with support for huge amount of languages
* [jsPlumb](https://github.com/jsplumb/jsplumb) - visual connectivity library without competition. Used in [relation maps](https://triliumnext.github.io/Docs/Wiki/relation-map.html) and [link maps](https://triliumnext.github.io/Docs/Wiki/note-map.html#link-map)

## 🤝 Support

Support for the TriliumNext organization will be possible in the near future. For now, you can:
- Support continued development on TriliumNext by supporting our developers: [eliandoran](https://github.com/sponsors/eliandoran) (See the [repository insights]([developers]([url](https://github.com/TriliumNext/Notes/graphs/contributors))) for a full list)
- Show a token of gratitude to the original Trilium developer ([zadam](https://github.com/sponsors/zadam)) via [PayPal](https://paypal.me/za4am) or Bitcoin (bitcoin:bc1qv3svjn40v89mnkre5vyvs2xw6y8phaltl385d2).


## 🔑 License

Copyright 2017-2025 zadam, Elian Doran, and other contributors

This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[immich-app/immich]]></title>
            <link>https://github.com/immich-app/immich</link>
            <guid>https://github.com/immich-app/immich</guid>
            <pubDate>Tue, 15 Jul 2025 00:05:24 GMT</pubDate>
            <description><![CDATA[High performance self-hosted photo and video management solution.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/immich-app/immich">immich-app/immich</a></h1>
            <p>High performance self-hosted photo and video management solution.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 70,398</p>
            <p>Forks: 3,708</p>
            <p>Stars today: 98 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt; 
  &lt;br/&gt;
  &lt;a href=&quot;https://opensource.org/license/agpl-v3&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-AGPL_v3-blue.svg?color=3F51B5&amp;style=for-the-badge&amp;label=License&amp;logoColor=000000&amp;labelColor=ececec&quot; alt=&quot;License: AGPLv3&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://discord.immich.app&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/discord/979116623879368755.svg?label=Discord&amp;logo=Discord&amp;style=for-the-badge&amp;logoColor=000000&amp;labelColor=ececec&quot; alt=&quot;Discord&quot;/&gt;
  &lt;/a&gt;
  &lt;br/&gt;
  &lt;br/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;design/immich-logo-stacked-light.svg&quot; width=&quot;300&quot; title=&quot;Login With Custom URL&quot;&gt;
&lt;/p&gt;
&lt;h3 align=&quot;center&quot;&gt;High performance self-hosted photo and video management solution&lt;/h3&gt;
&lt;br/&gt;
&lt;a href=&quot;https://immich.app&quot;&gt;
&lt;img src=&quot;design/immich-screenshots.png&quot; title=&quot;Main Screenshot&quot;&gt;
&lt;/a&gt;
&lt;br/&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;readme_i18n/README_ca_ES.md&quot;&gt;Català&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_es_ES.md&quot;&gt;Español&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_fr_FR.md&quot;&gt;Français&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_it_IT.md&quot;&gt;Italiano&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_ja_JP.md&quot;&gt;日本語&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_ko_KR.md&quot;&gt;한국어&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_de_DE.md&quot;&gt;Deutsch&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_nl_NL.md&quot;&gt;Nederlands&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_tr_TR.md&quot;&gt;Türkçe&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_zh_CN.md&quot;&gt;中文&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_uk_UA.md&quot;&gt;Українська&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_ru_RU.md&quot;&gt;Русский&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_pt_BR.md&quot;&gt;Português Brasileiro&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_sv_SE.md&quot;&gt;Svenska&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_ar_JO.md&quot;&gt;العربية&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_vi_VN.md&quot;&gt;Tiếng Việt&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_th_TH.md&quot;&gt;ภาษาไทย&lt;/a&gt;
&lt;/p&gt;

## Disclaimer

- ⚠️ The project is under **very active** development.
- ⚠️ Expect bugs and breaking changes.
- ⚠️ **Do not use the app as the only way to store your photos and videos.**
- ⚠️ Always follow [3-2-1](https://www.backblaze.com/blog/the-3-2-1-backup-strategy/) backup plan for your precious photos and videos!

&gt; [!NOTE]
&gt; You can find the main documentation, including installation guides, at https://immich.app/.

## Links

- [Documentation](https://immich.app/docs)
- [About](https://immich.app/docs/overview/introduction)
- [Installation](https://immich.app/docs/install/requirements)
- [Roadmap](https://immich.app/roadmap)
- [Demo](#demo)
- [Features](#features)
- [Translations](https://immich.app/docs/developer/translations)
- [Contributing](https://immich.app/docs/overview/support-the-project)

## Demo

Access the demo [here](https://demo.immich.app). For the mobile app, you can use `https://demo.immich.app` for the `Server Endpoint URL`.

### Login credentials

| Email           | Password |
| --------------- | -------- |
| demo@immich.app | demo     |

## Features

| Features                                     | Mobile | Web |
| :------------------------------------------- | ------ | --- |
| Upload and view videos and photos            | Yes    | Yes |
| Auto backup when the app is opened           | Yes    | N/A |
| Prevent duplication of assets                | Yes    | Yes |
| Selective album(s) for backup                | Yes    | N/A |
| Download photos and videos to local device   | Yes    | Yes |
| Multi-user support                           | Yes    | Yes |
| Album and Shared albums                      | Yes    | Yes |
| Scrubbable/draggable scrollbar               | Yes    | Yes |
| Support raw formats                          | Yes    | Yes |
| Metadata view (EXIF, map)                    | Yes    | Yes |
| Search by metadata, objects, faces, and CLIP | Yes    | Yes |
| Administrative functions (user management)   | No     | Yes |
| Background backup                            | Yes    | N/A |
| Virtual scroll                               | Yes    | Yes |
| OAuth support                                | Yes    | Yes |
| API Keys                                     | N/A    | Yes |
| LivePhoto/MotionPhoto backup and playback    | Yes    | Yes |
| Support 360 degree image display             | No     | Yes |
| User-defined storage structure               | Yes    | Yes |
| Public Sharing                               | Yes    | Yes |
| Archive and Favorites                        | Yes    | Yes |
| Global Map                                   | Yes    | Yes |
| Partner Sharing                              | Yes    | Yes |
| Facial recognition and clustering            | Yes    | Yes |
| Memories (x years ago)                       | Yes    | Yes |
| Offline support                              | Yes    | No  |
| Read-only gallery                            | Yes    | Yes |
| Stacked Photos                               | Yes    | Yes |
| Tags                                         | No     | Yes |
| Folder View                                  | Yes    | Yes |

## Translations

Read more about translations [here](https://immich.app/docs/developer/translations).

&lt;a href=&quot;https://hosted.weblate.org/engage/immich/&quot;&gt;
&lt;img src=&quot;https://hosted.weblate.org/widget/immich/immich/multi-auto.svg&quot; alt=&quot;Translation status&quot; /&gt;
&lt;/a&gt;

## Repository activity

![Activities](https://repobeats.axiom.co/api/embed/9e86d9dc3ddd137161f2f6d2e758d7863b1789cb.svg &quot;Repobeats analytics image&quot;)

## Star history

&lt;a href=&quot;https://star-history.com/#immich-app/immich&amp;Date&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=immich-app/immich&amp;type=Date&amp;theme=dark&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=immich-app/immich&amp;type=Date&quot; /&gt;
   &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=immich-app/immich&amp;type=Date&quot; width=&quot;100%&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;

## Contributors

&lt;a href=&quot;https://github.com/alextran1502/immich/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=immich-app/immich&quot; width=&quot;100%&quot;/&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[AykutSarac/jsoncrack.com]]></title>
            <link>https://github.com/AykutSarac/jsoncrack.com</link>
            <guid>https://github.com/AykutSarac/jsoncrack.com</guid>
            <pubDate>Tue, 15 Jul 2025 00:05:23 GMT</pubDate>
            <description><![CDATA[✨ Innovative and open-source visualization application that transforms various data formats, such as JSON, YAML, XML, CSV and more, into interactive graphs.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/AykutSarac/jsoncrack.com">AykutSarac/jsoncrack.com</a></h1>
            <p>✨ Innovative and open-source visualization application that transforms various data formats, such as JSON, YAML, XML, CSV and more, into interactive graphs.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 39,758</p>
            <p>Forks: 2,664</p>
            <p>Stars today: 336 stars today</p>
            <h2>README</h2><pre>&lt;!-- PROJECT LOGO --&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/AykutSarac/jsoncrack.com&quot;&gt;
   &lt;img src=&quot;./public/assets/192.png&quot; height=&quot;50&quot; alt=&quot;Logo&quot;&gt;
  &lt;/a&gt;

  &lt;h1 align=&quot;center&quot;&gt;JSON Crack&lt;/h1&gt;

  &lt;p align=&quot;center&quot;&gt;
    The open-source JSON Editor.
    &lt;br /&gt;
    &lt;a href=&quot;https://jsoncrack.com&quot;&gt;&lt;strong&gt;Learn more »&lt;/strong&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://todiagram.com&quot;&gt;ToDiagram&lt;/a&gt;
    ·
    &lt;a href=&quot;https://discord.gg/yVyTtCRueq&quot;&gt;Discord&lt;/a&gt;
    ·
    &lt;a href=&quot;https://jsoncrack.com&quot;&gt;Website&lt;/a&gt;
    ·
    &lt;a href=&quot;https://github.com/AykutSarac/jsoncrack.com/issues&quot;&gt;Issues&lt;/a&gt;
    ·
    &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=AykutSarac.jsoncrack-vscode&quot;&gt;VS Code&lt;/a&gt;
  &lt;/p&gt;
&lt;/p&gt;

&lt;!-- ABOUT THE PROJECT --&gt;

## About the Project

&lt;img width=&quot;100%&quot; alt=&quot;booking-screen&quot; src=&quot;./public/assets/editor.webp&quot;&gt;

## Visualize JSON into interactive graphs

JSON Crack is a tool for visualizing JSON data in a structured, interactive graphs, making it easier to explore, format, and validate JSON. It offers features like converting JSON to other formats (CSV, YAML), generating JSON Schema, executing queries, and exporting visualizations as images. Designed for both readability and usability.

* **Visualizer**: Instantly convert JSON, YAML, CSV, XML, and TOML into interactive graphs or trees in dark or light mode.
* **Convert**: Seamlessly transform data formats, like JSON to CSV or XML to JSON, for easy sharing.
* **Format &amp; Validate**: Beautify and validate JSON, YAML, and CSV for clear and accurate data.
* **Code Generation**: Generate TypeScript interfaces, Golang structs, and JSON Schema.
* **JSON Schema**: Create JSON Schema, mock data, and validate various data formats.
* **Advanced Tools**: Decode JWT, randomize data, and run jq or JSON path queries.
* **Export Image**: Download your visualization as PNG, JPEG, or SVG.
* **Privacy**: All data processing is local; nothing is stored on our servers.

## Recognition

&lt;a href=&quot;https://news.ycombinator.com/item?id=32626873&quot;&gt;
  &lt;img
    style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot;
    alt=&quot;Featured on Hacker News&quot;
    src=&quot;https://hackernews-badge.vercel.app/api?id=32626873&quot;
  /&gt;
&lt;/a&gt;

&lt;a href=&quot;https://producthunt.com/posts/JSON-Crack?utm_source=badge-featured&amp;utm_medium=badge&amp;utm_souce=badge-jsoncrack&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=332281&amp;theme=light&quot; alt=&quot;JSON Crack | Product Hunt&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot; /&gt;&lt;/a&gt;

### Built With

- [Next.js](https://nextjs.org/?ref=jsoncrack.com)
- [React.js](https://reactjs.org/?ref=jsoncrack.com)
- [Reaflow](https://reaflow.dev/?ref=jsoncrack.com)
- [Monaco Editor](https://github.com/suren-atoyan/monaco-react)

## Stay Up-to-Date

JSON Crack officially launched as v1.0 on the 17th of February 2022 and we&#039;ve come a long way so far. Watch **releases** of this repository to be notified of future updates:

&lt;a href=&quot;https://github.com/AykutSarac/jsoncrack.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/AykutSarac/jsoncrack.com&quot; alt=&quot;Star at GitHub&quot; /&gt;&lt;/a&gt;

&lt;!-- GETTING STARTED --&gt;

## Getting Started

To get a local copy up and running, please follow these simple steps.

### Prerequisites

Here is what you need to be able to run JSON Crack.

- Node.js (Version: &gt;=18.x)
- Pnpm _(recommended)_


## Development

### Setup

1. Clone the repo into a public GitHub repository (or fork https://github.com/AykutSarac/jsoncrack.com/fork). If you plan to distribute the code, read the [`LICENSE`](/LICENSE.md) for additional details.

   ```sh
   git clone https://github.com/AykutSarac/jsoncrack.com.git
   ```

2. Go to the project folder

   ```sh
   cd jsoncrack.com
   ```

3. Install packages

   ```sh
   pnpm install
   ```

4. Run the project

   ```sh
   pnpm dev

   # Running on http://localhost:3000/
   ```

### Docker

🐳 A [`Dockerfile`](Dockerfile) is provided in the root of the repository.
If you want to run JSON Crack locally:

```console
# Build a Docker image with:
docker compose build

# Run locally with `docker-compose`
docker compose up

# Go to http://localhost:8888
```

&lt;!-- LICENSE --&gt;

## License

See [`LICENSE`](/LICENSE.md) for more information.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[ahmedkhaleel2004/gitdiagram]]></title>
            <link>https://github.com/ahmedkhaleel2004/gitdiagram</link>
            <guid>https://github.com/ahmedkhaleel2004/gitdiagram</guid>
            <pubDate>Tue, 15 Jul 2025 00:05:22 GMT</pubDate>
            <description><![CDATA[Free, simple, fast interactive diagrams for any GitHub repository]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ahmedkhaleel2004/gitdiagram">ahmedkhaleel2004/gitdiagram</a></h1>
            <p>Free, simple, fast interactive diagrams for any GitHub repository</p>
            <p>Language: TypeScript</p>
            <p>Stars: 13,781</p>
            <p>Forks: 1,003</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre>[![Image](./docs/readme_img.png &quot;GitDiagram Front Page&quot;)](https://gitdiagram.com/)

![License](https://img.shields.io/badge/license-MIT-blue.svg)
[![Kofi](https://img.shields.io/badge/Kofi-F16061.svg?logo=ko-fi&amp;logoColor=white)](https://ko-fi.com/ahmedkhaleel2004)

# GitDiagram

Turn any GitHub repository into an interactive diagram for visualization in seconds.

You can also replace `hub` with `diagram` in any Github URL to access its diagram.

## 🚀 Features

- 👀 **Instant Visualization**: Convert any GitHub repository structure into a system design / architecture diagram
- 🎨 **Interactivity**: Click on components to navigate directly to source files and relevant directories
- ⚡ **Fast Generation**: Powered by OpenAI o4-mini for quick and accurate diagrams
- 🔄 **Customization**: Modify and regenerate diagrams with custom instructions
- 🌐 **API Access**: Public API available for integration (WIP)

## ⚙️ Tech Stack

- **Frontend**: Next.js, TypeScript, Tailwind CSS, ShadCN
- **Backend**: FastAPI, Python, Server Actions
- **Database**: PostgreSQL (with Drizzle ORM)
- **AI**: OpenAI o4-mini
- **Deployment**: Vercel (Frontend), EC2 (Backend)
- **CI/CD**: GitHub Actions
- **Analytics**: PostHog, Api-Analytics

## 🤔 About

I created this because I wanted to contribute to open-source projects but quickly realized their codebases are too massive for me to dig through manually, so this helps me get started - but it&#039;s definitely got many more use cases!

Given any public (or private!) GitHub repository it generates diagrams in Mermaid.js with OpenAI&#039;s o4-mini! (Previously Claude 3.5 Sonnet)

I extract information from the file tree and README for details and interactivity (you can click components to be taken to relevant files and directories)

Most of what you might call the &quot;processing&quot; of this app is done with prompt engineering - see `/backend/app/prompts.py`. This basically extracts and pipelines data and analysis for a larger action workflow, ending in the diagram code.

## 🔒 How to diagram private repositories

You can simply click on &quot;Private Repos&quot; in the header and follow the instructions by providing a GitHub personal access token with the `repo` scope.

You can also self-host this app locally (backend separated as well!) with the steps below.

## 🛠️ Self-hosting / Local Development

1. Clone the repository

```bash
git clone https://github.com/ahmedkhaleel2004/gitdiagram.git
cd gitdiagram
```

2. Install dependencies

```bash
pnpm i
```

3. Set up environment variables (create .env)

```bash
cp .env.example .env
```

Then edit the `.env` file with your Anthropic API key and optional GitHub personal access token.

4. Run backend

```bash
docker-compose up --build -d
```

Logs available at `docker-compose logs -f`
The FastAPI server will be available at `localhost:8000`

5. Start local database

```bash
chmod +x start-database.sh
./start-database.sh
```

When prompted to generate a random password, input yes.
The Postgres database will start in a container at `localhost:5432`

6. Initialize the database schema

```bash
pnpm db:push
```

You can view and interact with the database using `pnpm db:studio`

7. Run Frontend

```bash
pnpm dev
```

You can now access the website at `localhost:3000` and edit the rate limits defined in `backend/app/routers/generate.py` in the generate function decorator.

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

## Acknowledgements

Shoutout to [Romain Courtois](https://github.com/cyclotruc)&#039;s [Gitingest](https://gitingest.com/) for inspiration and styling

## 📈 Rate Limits

I am currently hosting it for free with no rate limits though this is somewhat likely to change in the future.

&lt;!-- If you would like to bypass these, self-hosting instructions are provided. I also plan on adding an input for your own Anthropic API key.

Diagram generation:

- 1 request per minute
- 5 requests per day --&gt;

## 🤔 Future Steps

- Implement font-awesome icons in diagram
- Implement an embedded feature like star-history.com but for diagrams. The diagram could also be updated progressively as commits are made.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[browserless/browserless]]></title>
            <link>https://github.com/browserless/browserless</link>
            <guid>https://github.com/browserless/browserless</guid>
            <pubDate>Tue, 15 Jul 2025 00:05:21 GMT</pubDate>
            <description><![CDATA[Deploy headless browsers in Docker. Run on our cloud or bring your own. Free for non-commercial uses.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/browserless/browserless">browserless/browserless</a></h1>
            <p>Deploy headless browsers in Docker. Run on our cloud or bring your own. Free for non-commercial uses.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 10,637</p>
            <p>Forks: 842</p>
            <p>Stars today: 158 stars today</p>
            <h2>README</h2><pre>&lt;!-- markdownlint-disable commands-show-output first-line-h1 no-emphasis-as-heading no-inline-html --&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://browserless.io&quot; align=&quot;center&quot;&gt;
    &lt;center align=&quot;center&quot;&gt;
      &lt;picture&gt;
        &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./assets/logo-white.svg&quot; width=&quot;600&quot;&gt;
        &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;./assets/logo.svg&quot; width=&quot;600&quot;&gt;
        &lt;img src=&quot;./assets/logo.svg&quot; alt=&quot;Browserless logo&quot; width=&quot;600&quot;&gt;
      &lt;/picture&gt;
    &lt;/center&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;h3 align=&quot;center&quot;&gt;&lt;center&gt;Deploy headless browsers in Docker. Run on our cloud or bring your own.&lt;/center&gt;&lt;/h3&gt;
  &lt;br&gt;
  &lt;center&gt;
    &lt;a href=&quot;https://hub.docker.com/r/browserless/chrome&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/docker/pulls/browserless/chrome&quot; alt=&quot;Docker pulls&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/browserless/browserless/tags&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/github/package-json/v/browserless/chrome&quot; alt=&quot;Version&quot; /&gt;
    &lt;/a&gt;
  &lt;/center&gt;
  &lt;br&gt;
  &lt;center&gt;
    &lt;img src=&quot;https://github.com/browserless/chrome/actions/workflows/docker-chromium.yml/badge.svg&quot; alt=&quot;Chromium build&quot; /&gt;
    &lt;img src=&quot;https://github.com/browserless/chrome/actions/workflows/docker-firefox.yml/badge.svg&quot; alt=&quot;Firefox build&quot; /&gt;
    &lt;img src=&quot;https://github.com/browserless/chrome/actions/workflows/docker-webkit.yml/badge.svg&quot; alt=&quot;Webkit build&quot; /&gt;
    &lt;img src=&quot;https://github.com/browserless/chrome/actions/workflows/docker-edge.yml/badge.svg&quot; alt=&quot;Edge build&quot; /&gt;
    &lt;img src=&quot;https://github.com/browserless/chrome/actions/workflows/docker-multi.yml/badge.svg&quot; alt=&quot;Mulltibrowser build&quot; /&gt;
  &lt;/center&gt;
  &lt;br&gt;
  &lt;hr&gt;
  &lt;br&gt;
&lt;/div&gt;

&gt; [!NOTE]  
&gt; Looking to bypass bot detectors and solve captchas? [We would recommend using BrowserQL as our stealthiest option](https://www.browserless.io/feature/browserql).

Browserless allows remote clients to connect and execute headless work, all inside of docker. It supports the standard, unforked Puppeteer and Playwright libraries, as well offering REST-based APIs for common actions like data collection, PDF generation and more.

We take care of common issues such as missing system-fonts, missing external libraries, and performance improvements, along with edge-cases like downloading files and managing sessions. For details, check out the documentation site built into the project which includes Open API docs.

If you&#039;ve been struggling to deploy headless browsers without running into issues or bloated resource requirements, then Browserless was built for you. Run the browsers in [our cloud](https://browserless.io/) or your own, [free for non-commercial uses](https://github.com/browserless/browserless#licensing).

## Table of Contents

- [External links](#external-links)
- [Features](#features)
- [How it works](#how-it-works)
  - [Docker](#docker)
  - [Hosting Providers](#hosting-providers)
  - [Puppeteer](#puppeteer)
  - [Playwright](#playwright)
- [Extending (NodeJS SDK)](#extending-nodejs-sdk)
- [Debugger](#debugger)
  - [Install debugger](#install-debugger)
- [Usage with other libraries](#usage-with-other-libraries)
- [Motivations](#motivations)
- [Licensing](#licensing)

## External links

1. [Full documentation site](https://docs.browserless.io/)
2. [Live Debugger (using browserless.io)](https://chrome.browserless.io/)
3. [Docker](https://github.com/browserless/browserless/pkgs/container/base)

## Features

### General

- Parallelism and request-queueing are built-in + configurable.
- Fonts and emoji&#039;s working out-of-the-box.
- Debug Viewer for actively viewing/debugging running sessions.
- An interactive puppeteer debugger, so you can see what the headless browser is doing and use its DevTools.
- Works with unforked Puppeteer and Playwright.
- Configurable session timers and health-checks to keep things running smoothly.
- Error tolerant: if Chrome dies it won&#039;t.
- Support for running and development on Apple&#039;s M1 machines

### Cloud-only

Our [cloud accounts](https://www.browserless.io/pricing/) include all the general features plus extras, such as:

- [BrowserQL](https://www.browserless.io/feature/browserql) for avoiding detectors and solving captchas
- [Hybrid automations](https://www.browserless.io/blog/hybrid-automations-for-puppeteer/) for streaming login windows during scripts
- [/reconnect API](https://www.browserless.io/blog/reconnect-api) for keeping browsers alive for reuse
- [REST APIs](https://www.browserless.io/feature/rest-apis) for tasks such as retrieving HTML, PDFs or Lighthouse metrics
- Inbuilt [residential proxy](https://www.browserless.io/blog/residential-proxying/)
- SSO, tokens and user roles

## How it works

Browserless listens for both incoming websocket requests, generally issued by most libraries, as well as pre-build REST APIs to do common functions (PDF generation, images and so on). When a websocket connects to Browserless it starts Chrome and proxies your request into it. Once the session is done then it closes and awaits for more connections. Some libraries use Chrome&#039;s HTTP endpoints, like `/json` to inspect debug-able targets, which Browserless also supports.

You still execute the script itself which gives you total control over what library you want to choose and when to do upgrades. This also comes with the benefit of keep your code proprietary and able to run on numerous platforms. We simply take care of all the browser-aspects and offer a management layer on top of the browser.

### Docker

&gt; [!TIP]
&gt; See more options on our [full documentation site](https://docs.browserless.io/baas/docker/quickstart).

1. `docker run -p 3000:3000 ghcr.io/browserless/chromium`
2. Visit `http://localhost:3000/docs` to see the documentation site.
3. See more at our [docker package](https://github.com/browserless/browserless/pkgs/container/base).

### Hosting Providers

We offer a first-class hosted product located [here](https://browserless.io). Alternatively you can host this image on just about any major platform that offers hosting for docker. Our hosted service takes care of all the machine provisioning, notifications, dashboards and monitoring plus more:

- Easily upgrade and toggle between versions at the press of a button. No managing repositories and other code artifacts.
- Never need to update or pull anything from docker. There&#039;s literally zero software to install to get started.
- Scale your consumption up or down with different plans. We support up to thousands of concurrent sessions at a given time.

If you&#039;re interested in using this image for commercial aspects, then please read the below section on licensing.

### Puppeteer

Puppeteer allows you to specify a remote location for chrome via the `browserWSEndpoint` option. Setting this for Browserless is a single line of code change.

**Before**

```js
const browser = await puppeteer.launch();
```

**After**

```js
const browser = await puppeteer.connect({
  browserWSEndpoint: &#039;ws://localhost:3000&#039;,
});
```

### Playwright

We support running with playwright via their their browser&#039;s remote connection protocols interface out of the box. Just make sure that your Docker image, playwright browser type _and_ endpoint match:

**Before**

```js
import pw from &#039;playwright&#039;;
const browser = await pw.firefox.launch();
```

**After**

```sh
docker run -p 3000:3000 ghcr.io/browserless/firefox
# or ghcr.io/browserless/multi for all the browsers
```

```js
import pw from &#039;playwright-core&#039;;

const browser = await pw.firefox.connect(
  &#039;ws://localhost:3000/firefox/playwright&#039;,
);
```

After that, the rest of your code remains the same with no other changes required.

## Extending (NodeJS SDK)

Browserless comes with built-in extension capabilities, and allows for extending nearly any aspect of the system (for Version 2+). For more details on how to write your own routes, build docker images, and more, [see our SDK README.md](/bin/scaffold/README.md) or simply run &quot;npx @browserless.io/browserless create&quot; in a terminal and follow the onscreen prompts.

## Debugger

You can install a first-party interactive debugger for Browserless, that makes writing scripts faster and interactive. You can take advantage of things like `debugger;` calls and the page&#039;s console output to see what&#039;s happening on the page while your script is running. All of the Chrome devtools are there at your disposal.

![browserless.io logo](/assets/debugger.png)

A small list of features includes:

- Running `debugger;` and `console.log` calls
- Errors in the script are caught and show up in the console tab
- DOM inspection, watch network requests, and even see how the page is rendering
- Exporting you debugging script as a Node project
- Everything included in Chrome DevTools

### Install debugger

Installing the debugger is as simple as running the `install:debugger` script _after_ the project has been built. This way:

```sh
$ npm run build
$ npm run install:debugger #or npm install:dev
```

You will then see the debugger url during the startup process.

```log
---------------------------------------------------------
| browserless.io
| To read documentation and more, load in your browser:
|
| OpenAPI: http://localhost:3000/docs
| Full Documentation: https://docs.browserless.io/
| Debbuger: http://localhost:3000/debugger/?token=6R0W53R135510
---------------------------------------------------------
```

## Usage with other libraries

Most libraries allow you to specify a remote instance of Chrome to interact with. They are either looking for a websocket endpoint, a host and port, or some address. Browserless supports these by default, however if you&#039;re having issues please make an issue in this project and we&#039;ll try and work with the library authors to get them integrated with browserless. Please note that in V2 we no longer support selenium or webdriver integrations.

You can find a much larger list of supported libraries [on our documentation site](https://docs.browserless.io/libraries/puppeteer).

## Motivations

Running Chrome on lambda or on your own is a fantastic idea but in practice is quite challenging in production. You&#039;re met with pretty tough cloud limits, possibly building Chrome yourself, and then dealing with odd invocation issues should everything else go ok. A lot of issues in various repositories are due to just challenges of getting Chrome running smoothly in AWS (see [here](https://github.com/GoogleChrome/puppeteer/issues?q=is%3Aissue+is%3Aopen+sort%3Acomments-desc)). You can see for yourself by going to nearly any library and sorting issues by most commented.

Getting Chrome running well in docker is also a challenge as there&#039;s quiet a few packages you need in order to get Chrome running. Once that&#039;s done then there&#039;s still missing fonts, getting libraries to work with it, and having limitations on service reliability. This is also ignoring CVEs, access-controls, and scaling strategies.

All of these issues prompted us to build a first-class image and workflow for interacting with Chrome in a more streamlined way. With Browserless you never have to worry about fonts, extra packages, library support, security, or anything else. It just works reliably like any other modern web service. On top of that it comes with a prescribed approach on how you interact with Chrome, which is through socket connections (similar to a database or any other external appliance). What this means is that you get the ability to drive Chrome remotely without having to do updates/releases to the thing that runs Chrome since it&#039;s divorced from your application.

## Licensing

SPDX-License-Identifier: SSPL-1.0 OR Browserless Commercial License.

If you want to use Browserless to build commercial sites, applications, or in a continuous-integration system that&#039;s closed-source then you&#039;ll need to purchase a commercial license. This allows you to keep your software proprietary whilst still using browserless. [You can purchase a commercial license here](https://www.browserless.io/contact). A commercial license grants you:

- Priority support on issues and features.
- On-premise running as well as running on public cloud providers for commercial/CI purposes for proprietary systems.
- Ability to modify the source (forking) for your own purposes.
- A new admin user-interface.

Not only does it grant you a license to run such a critical piece of infrastructure, but you are also supporting further innovation in this space and our ability to contribute to it.

If you are creating an open source application under a license compatible with the Server Side License 1.0, you may use Browserless under those terms.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[fastrepl/hyprnote]]></title>
            <link>https://github.com/fastrepl/hyprnote</link>
            <guid>https://github.com/fastrepl/hyprnote</guid>
            <pubDate>Tue, 15 Jul 2025 00:05:20 GMT</pubDate>
            <description><![CDATA[Secure AI-powered meeting notetaker that runs on your device and keeps your data private.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/fastrepl/hyprnote">fastrepl/hyprnote</a></h1>
            <p>Secure AI-powered meeting notetaker that runs on your device and keeps your data private.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 2,658</p>
            <p>Forks: 149</p>
            <p>Stars today: 24 stars today</p>
            <h2>README</h2><pre>![README banner](https://github.com/user-attachments/assets/44ebe793-004e-4313-8e04-2491ab076bea)

&lt;p align=&quot;center&quot;&gt;
&lt;h1 align=&quot;center&quot;&gt;Hyprnote &lt;i&gt;(Public Beta)&lt;/i&gt;&lt;/h1&gt;
&lt;p align=&quot;center&quot;&gt;AI notepad for meetings. &lt;strong&gt;Local-first &amp; Extensible&lt;/strong&gt;.&lt;/p&gt;
 &lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://deepwiki.com/fastrepl/hyprnote&quot;&gt;&lt;img src=&quot;https://deepwiki.com/badge.svg&quot; alt=&quot;Ask DeepWiki&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://hyprnote.com/discord&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Join%20our&amp;message=Discord&amp;color=blue&amp;logo=Discord&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://x.com/tryhyprnote&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Follow%20us%20on&amp;message=X&amp;color=black&amp;logo=x&quot; alt=&quot;X&quot;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/p&gt;
   
## Introduction

**What does Hyprnote do?**

- Records and transcribes your meetings  
- Generates **powerful summaries** from your raw meeting notes

**What’s special about it?**

- &lt;ins&gt;Works **offline**&lt;/ins&gt; using **open-source models** (_Whisper_ &amp; _Llama_)

## Installation

```bash
brew tap fastrepl/hyprnote &amp;&amp; brew install hyprnote --cask
```

- [Macos](https://hyprnote.com/download) (public beta)
- [Windows](https://github.com/fastrepl/hyprnote/issues/66) (soon)
- [Linux](https://github.com/fastrepl/hyprnote/issues/67) (maybe)

## Highlights

### Hypercharge your notes
Casually jot stuff down and Hyprnote will craft a meeting note based on your memos.

&lt;img src=&quot;https://github.com/user-attachments/assets/4f502a3b-1b78-4ce5-9fa9-b5e5e09ef859&quot; width=&quot;720&quot; /&gt;

### Offline &amp; Privacy
Hyprnote is local-first which means you can be off the grid and it&#039;s perfectly fine.

&lt;img src=&quot;https://github.com/user-attachments/assets/e5014024-3f6a-457a-8f1c-3b183883b782&quot; width=&quot;720&quot; /&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[crimx/ext-saladict]]></title>
            <link>https://github.com/crimx/ext-saladict</link>
            <guid>https://github.com/crimx/ext-saladict</guid>
            <pubDate>Tue, 15 Jul 2025 00:05:19 GMT</pubDate>
            <description><![CDATA[🥗 All-in-one professional pop-up dictionary and page translator which supports multiple search modes, page translations, new word notebook and PDF selection searching.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/crimx/ext-saladict">crimx/ext-saladict</a></h1>
            <p>🥗 All-in-one professional pop-up dictionary and page translator which supports multiple search modes, page translations, new word notebook and PDF selection searching.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 12,659</p>
            <p>Forks: 785</p>
            <p>Stars today: 19 stars today</p>
            <h2>README</h2><pre># Saladict 沙拉查词

[![Version](https://img.shields.io/github/release/crimx/ext-saladict.svg?label=version)](https://github.com/crimx/ext-saladict/releases)
[![Chrome Web Store](https://badgen.net/chrome-web-store/users/cdonnmffkdaoajfknoeeecmchibpmkmg?icon=chrome&amp;color=0f9d58)](https://chrome.google.com/webstore/detail/cdonnmffkdaoajfknoeeecmchibpmkmg?hl=en)
[![Chrome Web Store](https://badgen.net/chrome-web-store/stars/cdonnmffkdaoajfknoeeecmchibpmkmg?icon=chrome&amp;color=0f9d58)](https://chrome.google.com/webstore/detail/cdonnmffkdaoajfknoeeecmchibpmkmg?hl=en)
[![Mozilla Add-on](https://badgen.net/amo/users/ext-saladict?icon=firefox&amp;color=ff9500)](https://addons.mozilla.org/firefox/addon/ext-saladict/)
[![Mozilla Add-on](https://badgen.net/amo/stars/ext-saladict?icon=firefox&amp;color=ff9500)](https://addons.mozilla.org/firefox/addon/ext-saladict/)

[![Build Status](https://travis-ci.com/crimx/ext-saladict.svg)](https://travis-ci.com/crimx/ext-saladict)
[![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg?maxAge=2592000)](http://commitizen.github.io/cz-cli/)
[![Conventional Commits](https://img.shields.io/badge/Conventional%20Commits-1.0.0-brightgreen.svg?maxAge=2592000)](https://conventionalcommits.org)
[![Standard - JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg?maxAge=2592000)](https://standardjs.com/)
[![License](https://img.shields.io/github/license/crimx/ext-saladict.svg?colorB=44cc11?maxAge=2592000)](https://github.com/crimx/ext-saladict/blob/dev/LICENSE)

Chrome/Firefox WebExtension. Feature-rich inline translator with PDF support.

[【中文说明】](./README-zh.md)Chrome/Firefox 浏览器插件，网页划词翻译。

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/crimx/ext-saladict/releases/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/wiki/crimx/ext-saladict/images/notebook.gif&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

## Downloads

- [Chrome Web Store](https://chrome.google.com/webstore/detail/cdonnmffkdaoajfknoeeecmchibpmkmg?hl=en)
- [Firefox Add-ons](https://addons.mozilla.org/firefox/addon/ext-saladict/)
- [Microsoft Edge Addons](https://microsoftedge.microsoft.com/addons/detail/idghocbbahafpfhjnfhpbfbmpegphmmp)(Uploaded by @rumosky)
- See [releases](https://github.com/crimx/ext-saladict/releases) for more.

Saladict 7 is a complete rewrite with sophisticated interaction and buttery smooth experience. Built for speed, stability and customization.

## Change Log

[CHANGELOG.md](./CHANGELOG.md)

## build from source

```bash
git clone git@github.com:crimx/ext-saladict.git
cd ext-saladict
yarn install
yarn pdf
```

Add a `.env` file following the `.env.example` format(leave empty if you don&#039;t use these dictionaries).

```bash
yarn build
```

Artifacts can be found in `build/`.

## Development

See the [contributing guide](./CONTRIBUTING.md).

## How can I contribute?

[CONTRIBUTING.md](./CONTRIBUTING.md)

## Notice

Saladict is a free and open-sourced project for study purpose only. Anyone can obtain a copy of Saladict free of charge. If you believe your legal rights have been violated please contact the [author](https://github.com/crimx) immediately.

Saladict is licensed under [MIT](https://github.com/crimx/ext-saladict/blob/dev/LICENSE). You can use the source code freely as long as including a copy of license and copyright notice of Saladict.

DO NOT use Saladict for any illegal or criminal activity. Saladict strongly condemns this behavior and will cooperate to the fullest extent possible in holding it accountable.

As for copy-and-paste clone products Saladict has the responsibility to send corresponding reports and warnings to platforms and users.

## More screenshots:

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/crimx/ext-saladict/releases/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/crimx/ext-saladict/wiki/images/youdao-page.gif&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/crimx/ext-saladict/releases/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/crimx/ext-saladict/wiki/images/screen-notebook.png&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/crimx/ext-saladict/releases/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/crimx/ext-saladict/wiki/images/pin.gif&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[huggingface/chat-ui]]></title>
            <link>https://github.com/huggingface/chat-ui</link>
            <guid>https://github.com/huggingface/chat-ui</guid>
            <pubDate>Tue, 15 Jul 2025 00:05:18 GMT</pubDate>
            <description><![CDATA[Open source codebase powering the HuggingChat app]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/huggingface/chat-ui">huggingface/chat-ui</a></h1>
            <p>Open source codebase powering the HuggingChat app</p>
            <p>Language: TypeScript</p>
            <p>Stars: 8,958</p>
            <p>Forks: 1,388</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre># Chat UI

**Find the docs at [hf.co/docs/chat-ui](https://huggingface.co/docs/chat-ui/index).**

![Chat UI repository thumbnail](https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/chatui-websearch.png)

A chat interface using open source models, eg OpenAssistant or Llama. It is a SvelteKit app and it powers the [HuggingChat app on hf.co/chat](https://huggingface.co/chat).

0. [Quickstart](#quickstart)
1. [No Setup Deploy](#no-setup-deploy)
2. [Setup](#setup)
3. [Launch](#launch)
4. [Web Search](#web-search)
5. [Text Embedding Models](#text-embedding-models)
6. [Extra parameters](#extra-parameters)
7. [Common issues](#common-issues)
8. [Deploying to a HF Space](#deploying-to-a-hf-space)
9. [Building](#building)

## Quickstart

### Docker image

You can deploy a chat-ui instance in a single command using the docker image. Get your huggingface token from [here](https://huggingface.co/settings/tokens).

```bash
docker run -p 3000 -e HF_TOKEN=hf_*** -v db:/data ghcr.io/huggingface/chat-ui-db:latest
```

Take a look at the [`.env` file](https://github.com/huggingface/chat-ui/blob/main/.env) and the readme to see all the environment variables that you can set. We have endpoint support for all OpenAI API compatible local services as well as many other providers like Anthropic, Cloudflare, Google Vertex AI, etc.

### Local setup

You can quickly start a locally running chat-ui &amp; LLM text-generation server thanks to chat-ui&#039;s [llama.cpp server support](https://huggingface.co/docs/chat-ui/configuration/models/providers/llamacpp).

**Step 1 (Start llama.cpp server):**

Install llama.cpp w/ brew (for Mac):

```bash
# install llama.cpp
brew install llama.cpp
```

or [build directly from the source](https://github.com/ggerganov/llama.cpp/blob/master/docs/build.md) for your target device:

```
git clone https://github.com/ggerganov/llama.cpp &amp;&amp; cd llama.cpp &amp;&amp; make
```

Next, start the server with the [LLM of your choice](https://huggingface.co/models?library=gguf):

```bash
# start llama.cpp server (using hf.co/microsoft/Phi-3-mini-4k-instruct-gguf as an example)
llama-server --hf-repo microsoft/Phi-3-mini-4k-instruct-gguf --hf-file Phi-3-mini-4k-instruct-q4.gguf -c 4096
```

A local LLaMA.cpp HTTP Server will start on `http://localhost:8080`. Read more [here](https://huggingface.co/docs/chat-ui/configuration/models/providers/llamacpp).

**Step 3 (make sure you have MongoDb running locally):**

```bash
docker run -d -p 27017:27017 --name mongo-chatui mongo:latest
```

Read more [here](#database).

**Step 4 (clone chat-ui):**

```bash
git clone https://github.com/huggingface/chat-ui
cd chat-ui
```

**Step 5 (tell chat-ui to use local llama.cpp server):**

Add the following to your `.env.local`:

```ini
MODELS=`[
  {
    &quot;name&quot;: &quot;microsoft/Phi-3-mini-4k-instruct&quot;,
    &quot;endpoints&quot;: [{
      &quot;type&quot; : &quot;llamacpp&quot;,
      &quot;baseURL&quot;: &quot;http://localhost:8080&quot;
    }],
  },
]`
```

Read more [here](https://huggingface.co/docs/chat-ui/configuration/models/providers/llamacpp).

**Step 6 (start chat-ui):**

```bash
npm install
npm run dev -- --open
```

Read more [here](#launch).

&lt;img class=&quot;hidden dark:block&quot; src=&quot;https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/chat-ui/llamacpp-dark.png&quot; height=&quot;auto&quot;/&gt;

## No Setup Deploy

If you don&#039;t want to configure, setup, and launch your own Chat UI yourself, you can use this option as a fast deploy alternative.

You can deploy your own customized Chat UI instance with any supported [LLM](https://huggingface.co/models?pipeline_tag=text-generation&amp;sort=trending) of your choice on [Hugging Face Spaces](https://huggingface.co/spaces). To do so, use the chat-ui template [available here](https://huggingface.co/new-space?template=huggingchat/chat-ui-template).

Set `HF_TOKEN` in [Space secrets](https://huggingface.co/docs/hub/spaces-overview#managing-secrets) to deploy a model with gated access or a model in a private repository. It&#039;s also compatible with [Inference for PROs](https://huggingface.co/blog/inference-pro) curated list of powerful models with higher rate limits. Make sure to create your personal token first in your [User Access Tokens settings](https://huggingface.co/settings/tokens).

Read the full tutorial [here](https://huggingface.co/docs/hub/spaces-sdks-docker-chatui#chatui-on-spaces).

## Setup

The default config for Chat UI is stored in the `.env` file. You will need to override some values to get Chat UI to run locally. This is done in `.env.local`.

Start by creating a `.env.local` file in the root of the repository. The bare minimum config you need to get Chat UI to run locally is the following:

```env
MONGODB_URL=&lt;the URL to your MongoDB instance&gt;
HF_TOKEN=&lt;your access token&gt;
```

### Database

The chat history is stored in a MongoDB instance, and having a DB instance available is needed for Chat UI to work.

You can use a local MongoDB instance. The easiest way is to spin one up using docker:

```bash
docker run -d -p 27017:27017 --name mongo-chatui mongo:latest
```

In which case the url of your DB will be `MONGODB_URL=mongodb://localhost:27017`.

Alternatively, you can use a [free MongoDB Atlas](https://www.mongodb.com/pricing) instance for this, Chat UI should fit comfortably within their free tier. After which you can set the `MONGODB_URL` variable in `.env.local` to match your instance.

### Hugging Face Access Token

If you use a remote inference endpoint, you will need a Hugging Face access token to run Chat UI locally. You can get one from [your Hugging Face profile](https://huggingface.co/settings/tokens).

## Launch

After you&#039;re done with the `.env.local` file you can run Chat UI locally with:

```bash
npm install
npm run dev
```

## Web Search

Chat UI features a powerful Web Search feature. It works by:

1. Generating an appropriate search query from the user prompt.
2. Performing web search and extracting content from webpages.
3. Creating embeddings from texts using a text embedding model.
4. From these embeddings, find the ones that are closest to the user query using a vector similarity search. Specifically, we use `inner product` distance.
5. Get the corresponding texts to those closest embeddings and perform [Retrieval-Augmented Generation](https://huggingface.co/papers/2005.11401) (i.e. expand user prompt by adding those texts so that an LLM can use this information).

## Text Embedding Models

By default (for backward compatibility), when `TEXT_EMBEDDING_MODELS` environment variable is not defined, [transformers.js](https://huggingface.co/docs/transformers.js) embedding models will be used for embedding tasks, specifically, [Xenova/gte-small](https://huggingface.co/Xenova/gte-small) model.

You can customize the embedding model by setting `TEXT_EMBEDDING_MODELS` in your `.env.local` file. For example:

```env
TEXT_EMBEDDING_MODELS = `[
  {
    &quot;name&quot;: &quot;Xenova/gte-small&quot;,
    &quot;displayName&quot;: &quot;Xenova/gte-small&quot;,
    &quot;description&quot;: &quot;locally running embedding&quot;,
    &quot;chunkCharLength&quot;: 512,
    &quot;endpoints&quot;: [
      {&quot;type&quot;: &quot;transformersjs&quot;}
    ]
  },
  {
    &quot;name&quot;: &quot;intfloat/e5-base-v2&quot;,
    &quot;displayName&quot;: &quot;intfloat/e5-base-v2&quot;,
    &quot;description&quot;: &quot;hosted embedding model&quot;,
    &quot;chunkCharLength&quot;: 768,
    &quot;preQuery&quot;: &quot;query: &quot;, # See https://huggingface.co/intfloat/e5-base-v2#faq
    &quot;prePassage&quot;: &quot;passage: &quot;, # See https://huggingface.co/intfloat/e5-base-v2#faq
    &quot;endpoints&quot;: [
      {
        &quot;type&quot;: &quot;tei&quot;,
        &quot;url&quot;: &quot;http://127.0.0.1:8080/&quot;,
        &quot;authorization&quot;: &quot;TOKEN_TYPE TOKEN&quot; // optional authorization field. Example: &quot;Basic VVNFUjpQQVNT&quot;
      }
    ]
  }
]`
```

The required fields are `name`, `chunkCharLength` and `endpoints`.
Supported text embedding backends are: [`transformers.js`](https://huggingface.co/docs/transformers.js), [`TEI`](https://github.com/huggingface/text-embeddings-inference) and [`OpenAI`](https://platform.openai.com/docs/guides/embeddings). `transformers.js` models run locally as part of `chat-ui`, whereas `TEI` models run in a different environment &amp; accessed through an API endpoint. `openai` models are accessed through the [OpenAI API](https://platform.openai.com/docs/guides/embeddings).

When more than one embedding models are supplied in `.env.local` file, the first will be used by default, and the others will only be used on LLM&#039;s which configured `embeddingModel` to the name of the model.

## Extra parameters

### OpenID connect

The login feature is disabled by default and users are attributed a unique ID based on their browser. But if you want to use OpenID to authenticate your users, you can add the following to your `.env.local` file:

```env
OPENID_CONFIG=`{
  PROVIDER_URL: &quot;&lt;your OIDC issuer&gt;&quot;,
  CLIENT_ID: &quot;&lt;your OIDC client ID&gt;&quot;,
  CLIENT_SECRET: &quot;&lt;your OIDC client secret&gt;&quot;,
  SCOPES: &quot;openid profile&quot;,
  TOLERANCE: // optional
  RESOURCE: // optional
}`
```

These variables will enable the openID sign-in modal for users.

### Trusted header authentication

You can set the env variable `TRUSTED_EMAIL_HEADER` to point to the header that contains the user&#039;s email address. This will allow you to authenticate users from the header. This setup is usually combined with a proxy that will be in front of chat-ui and will handle the auth and set the header.

&gt; [!WARNING]
&gt; Make sure to only allow requests to chat-ui through your proxy which handles authentication, otherwise users could authenticate as anyone by setting the header manually! Only set this up if you understand the implications and know how to do it correctly.

Here is a list of header names for common auth providers:

- Tailscale Serve: `Tailscale-User-Login`
- Cloudflare Access: `Cf-Access-Authenticated-User-Email`
- oauth2-proxy: `X-Forwarded-Email`

### Theming

You can use a few environment variables to customize the look and feel of chat-ui. These are by default:

```env
PUBLIC_APP_NAME=ChatUI
PUBLIC_APP_ASSETS=chatui
PUBLIC_APP_COLOR=blue
PUBLIC_APP_DESCRIPTION=&quot;Making the community&#039;s best AI chat models available to everyone.&quot;
PUBLIC_APP_DATA_SHARING=
PUBLIC_APP_DISCLAIMER=
```

- `PUBLIC_APP_NAME` The name used as a title throughout the app.
- `PUBLIC_APP_ASSETS` Is used to find logos &amp; favicons in `static/$PUBLIC_APP_ASSETS`, current options are `chatui` and `huggingchat`.
- `PUBLIC_APP_COLOR` Can be any of the [tailwind colors](https://tailwindcss.com/docs/customizing-colors#default-color-palette).
- `PUBLIC_APP_DATA_SHARING` Can be set to 1 to add a toggle in the user settings that lets your users opt-in to data sharing with models creator.
- `PUBLIC_APP_DISCLAIMER` If set to 1, we show a disclaimer about generated outputs on login.

### Web Search config

You can enable the web search through an API by adding `YDC_API_KEY` ([docs.you.com](https://docs.you.com)) or `SERPER_API_KEY` ([serper.dev](https://serper.dev/)) or `SERPAPI_KEY` ([serpapi.com](https://serpapi.com/)) or `SERPSTACK_API_KEY` ([serpstack.com](https://serpstack.com/)) or `SEARCHAPI_KEY` ([searchapi.io](https://www.searchapi.io/)) to your `.env.local`.

You can also simply enable the local google websearch by setting `USE_LOCAL_WEBSEARCH=true` in your `.env.local` or specify a SearXNG instance by adding the query URL to `SEARXNG_QUERY_URL`.

You can enable javascript when parsing webpages to improve compatibility with `WEBSEARCH_JAVASCRIPT=true` at the cost of increased CPU usage. You&#039;ll want at least 4 cores when enabling.

### Custom models

You can customize the parameters passed to the model or even use a new model by updating the `MODELS` variable in your `.env.local`. The default one can be found in `.env` and looks like this :

```env
MODELS=`[
  {
    &quot;name&quot;: &quot;mistralai/Mistral-7B-Instruct-v0.2&quot;,
    &quot;displayName&quot;: &quot;mistralai/Mistral-7B-Instruct-v0.2&quot;,
    &quot;description&quot;: &quot;Mistral 7B is a new Apache 2.0 model, released by Mistral AI that outperforms Llama2 13B in benchmarks.&quot;,
    &quot;websiteUrl&quot;: &quot;https://mistral.ai/news/announcing-mistral-7b/&quot;,
    &quot;preprompt&quot;: &quot;&quot;,
    &quot;chatPromptTemplate&quot; : &quot;&lt;s&gt;{{#each messages}}{{#ifUser}}[INST] {{#if @first}}{{#if @root.preprompt}}{{@root.preprompt}}\n{{/if}}{{/if}}{{content}} [/INST]{{/ifUser}}{{#ifAssistant}}{{content}}&lt;/s&gt;{{/ifAssistant}}{{/each}}&quot;,
    &quot;parameters&quot;: {
      &quot;temperature&quot;: 0.3,
      &quot;top_p&quot;: 0.95,
      &quot;repetition_penalty&quot;: 1.2,
      &quot;top_k&quot;: 50,
      &quot;truncate&quot;: 3072,
      &quot;max_new_tokens&quot;: 1024,
      &quot;stop&quot;: [&quot;&lt;/s&gt;&quot;]
    },
    &quot;promptExamples&quot;: [
      {
        &quot;title&quot;: &quot;Write an email&quot;,
        &quot;prompt&quot;: &quot;As a restaurant owner, write a professional email to the supplier to get these products every week: \n\n- Wine (x10)\n- Eggs (x24)\n- Bread (x12)&quot;
      }, {
        &quot;title&quot;: &quot;Code a game&quot;,
        &quot;prompt&quot;: &quot;Code a basic snake game in python, give explanations for each step.&quot;
      }, {
        &quot;title&quot;: &quot;Recipe help&quot;,
        &quot;prompt&quot;: &quot;How do I make a delicious lemon cheesecake?&quot;
      }
    ]
  }
]`

```

You can change things like the parameters, or customize the preprompt to better suit your needs. You can also add more models by adding more objects to the array, with different preprompts for example.

#### chatPromptTemplate

In 2025 most chat-completion endpoints (local or remotely hosted) support the OpenAI-compatible API and take arrays of messages.

If not, when querying the model for a chat response, the `chatPromptTemplate` template is used. `messages` is an array of chat messages, it has the format `[{ content: string }, ...]`. To identify if a message is a user message or an assistant message the `ifUser` and `ifAssistant` block helpers can be used.

The following is the default `chatPromptTemplate`, although newlines and indentiation have been added for readability. You can find the prompts used in production for HuggingChat [here](https://github.com/huggingface/chat-ui/blob/main/PROMPTS.md).

```prompt
{{preprompt}}
{{#each messages}}
  {{#ifUser}}{{@root.userMessageToken}}{{content}}{{@root.userMessageEndToken}}{{/ifUser}}
  {{#ifAssistant}}{{@root.assistantMessageToken}}{{content}}{{@root.assistantMessageEndToken}}{{/ifAssistant}}
{{/each}}
{{assistantMessageToken}}
```

&gt; [!INFO]
&gt; We also support Jinja2 templates for the `chatPromptTemplate` in addition to Handlebars templates. On startup we first try to compile with Jinja and if that fails we fall back to interpreting `chatPromptTemplate` as handlebars.

#### Multi modal model

We currently support [IDEFICS](https://huggingface.co/blog/idefics) (hosted on TGI), OpenAI and Claude 3 as multimodal models. You can enable it by setting `multimodal: true` in your `MODELS` configuration. For IDEFICS, you must have a [PRO HF Api token](https://huggingface.co/settings/tokens). For OpenAI, see the [OpenAI section](#openai-api-compatible-models). For Anthropic, see the [Anthropic section](#anthropic).

```env
    {
      &quot;name&quot;: &quot;HuggingFaceM4/idefics-80b-instruct&quot;,
      &quot;multimodal&quot; : true,
      &quot;description&quot;: &quot;IDEFICS is the new multimodal model by Hugging Face.&quot;,
      &quot;preprompt&quot;: &quot;&quot;,
      &quot;chatPromptTemplate&quot; : &quot;{{#each messages}}{{#ifUser}}User: {{content}}{{/ifUser}}&lt;end_of_utterance&gt;\nAssistant: {{#ifAssistant}}{{content}}\n{{/ifAssistant}}{{/each}}&quot;,
      &quot;parameters&quot;: {
        &quot;temperature&quot;: 0.1,
        &quot;top_p&quot;: 0.95,
        &quot;repetition_penalty&quot;: 1.2,
        &quot;top_k&quot;: 12,
        &quot;truncate&quot;: 1000,
        &quot;max_new_tokens&quot;: 1024,
        &quot;stop&quot;: [&quot;&lt;end_of_utterance&gt;&quot;, &quot;User:&quot;, &quot;\nUser:&quot;]
      }
    }
```

#### Running your own models using a custom endpoint

If you want to, instead of hitting models on the Hugging Face Inference API, you can run your own models locally.

A good option is to hit a [text-generation-inference](https://github.com/huggingface/text-generation-inference), or a llama.cpp endpoint. You will find an example for TGI in the official [Chat UI Spaces Docker template](https://huggingface.co/new-space?template=huggingchat/chat-ui-template) for instance: both this app and a text-generation-inference server run inside the same container.

To do this, you can add your own endpoints to the `MODELS` variable in `.env.local`, by adding an `&quot;endpoints&quot;` key for each model in `MODELS`.

```env
{
// rest of the model config here
&quot;endpoints&quot;: [{
  &quot;type&quot; : &quot;tgi&quot;,
  &quot;url&quot;: &quot;https://HOST:PORT&quot;,
  }]
}
```

If `endpoints` are left unspecified, ChatUI will look for the model on the hosted Hugging Face inference API using the model name.

##### OpenAI API compatible models

Chat UI can be used with any API server that supports OpenAI API compatibility, for example [text-generation-webui](https://github.com/oobabooga/text-generation-webui/tree/main/extensions/openai), [LocalAI](https://github.com/go-skynet/LocalAI), [FastChat](https://github.com/lm-sys/FastChat/blob/main/docs/openai_api.md), [llama-cpp-python](https://github.com/abetlen/llama-cpp-python), and [ialacol](https://github.com/chenhunghan/ialacol) and [vllm](https://docs.vllm.ai/en/latest/serving/openai_compatible_server.html).

The following example config makes Chat UI works with [text-generation-webui](https://github.com/oobabooga/text-generation-webui/tree/main/extensions/openai), the `endpoint.baseUrl` is the url of the OpenAI API compatible server, this overrides the baseUrl to be used by OpenAI instance. The `endpoint.completion` determine which endpoint to be used, default is `chat_completions` which uses `v1/chat/completions`, change to `endpoint.completion` to `completions` to use the `v1/completions` endpoint.

Parameters not supported by OpenAI (e.g., top_k, repetition_penalty, etc.) must be set in the extraBody of endpoints. Be aware that setting them in parameters will cause them to be omitted.

```
MODELS=`[
  {
    &quot;name&quot;: &quot;text-generation-webui&quot;,
    &quot;id&quot;: &quot;text-generation-webui&quot;,
    &quot;parameters&quot;: {
      &quot;temperature&quot;: 0.9,
      &quot;top_p&quot;: 0.95,
      &quot;max_new_tokens&quot;: 1024,
      &quot;stop&quot;: []
    },
    &quot;endpoints&quot;: [{
      &quot;type&quot; : &quot;openai&quot;,
      &quot;baseURL&quot;: &quot;http://localhost:8000/v1&quot;,
      &quot;extraBody&quot;: {
        &quot;repetition_penalty&quot;: 1.2,
        &quot;top_k&quot;: 50,
        &quot;truncate&quot;: 1000
      }
    }]
  }
]`

```

The `openai` type includes official OpenAI models. You can add, for example, GPT4/GPT3.5 as a &quot;openai&quot; model:

```
OPENAI_API_KEY=#your openai api key here
MODELS=`[{
      &quot;name&quot;: &quot;gpt-4&quot;,
      &quot;displayName&quot;: &quot;GPT 4&quot;,
      &quot;endpoints&quot; : [{
        &quot;type&quot;: &quot;openai&quot;
      }]
},
      {
      &quot;name&quot;: &quot;gpt-3.5-turbo&quot;,
      &quot;displayName&quot;: &quot;GPT 3.5 Turbo&quot;,
      &quot;endpoints&quot; : [{
        &quot;type&quot;: &quot;openai&quot;
      }]
}]`
```

You may also consume any model provider that provides compatible OpenAI API endpoint. For example, you may self-host [Portkey](https://github.com/Portkey-AI/gateway) gateway and experiment with Claude or GPTs offered by Azure OpenAI. Example for Claude from Anthropic:

```
MODELS=`[{
  &quot;name&quot;: &quot;claude-2.1&quot;,
  &quot;displayName&quot;: &quot;Claude 2.1&quot;,
  &quot;description&quot;: &quot;Anthropic has been founded by former OpenAI researchers...&quot;,
  &quot;parameters&quot;: {
      &quot;temperature&quot;: 0.5,
      &quot;max_new_tokens&quot;: 4096,
  },
  &quot;endpoints&quot;: [
      {
          &quot;type&quot;: &quot;openai&quot;,
          &quot;baseURL&quot;: &quot;https://gateway.example.com/v1&quot;,
          &quot;defaultHeaders&quot;: {
              &quot;x-portkey-config&quot;: &#039;{&quot;provider&quot;:&quot;anthropic&quot;,&quot;api_key&quot;:&quot;sk-ant-abc...xyz&quot;}&#039;
          }
      }
  ]
}]`
```

Example for GPT 4 deployed on Azure OpenAI:

```
MODELS=`[{
  &quot;id&quot;: &quot;gpt-4-1106-preview&quot;,
  &quot;name&quot;: &quot;gpt-4-1106-preview&quot;,
  &quot;displayName&quot;: &quot;gpt-4-1106-preview&quot;,
  &quot;parameters&quot;: {
      &quot;temperature&quot;: 0.5,
      &quot;max_new_tokens&quot;: 4096,
  },
  &quot;endpoints&quot;: [
      {
          &quot;type&quot;: &quot;openai&quot;,
          &quot;baseURL&quot;: &quot;https://{resource-name}.openai.azure.com/openai/deployments/{deployment-id}&quot;,
          &quot;defaultHeaders&quot;: {
              &quot;api-key&quot;: &quot;{api-key}&quot;
          },
          &quot;defaultQuery&quot;: {
              &quot;api-version&quot;: &quot;2023-05-15&quot;
          }
      }
  ]
}]`
```

Or try Mistral from [Deepinfra](https://deepinfra.com/mistralai/Mistral-7B-Instruct-v0.1/api?example=openai-http):

&gt; Note, apiKey can either be set custom per

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[logancyang/obsidian-copilot]]></title>
            <link>https://github.com/logancyang/obsidian-copilot</link>
            <guid>https://github.com/logancyang/obsidian-copilot</guid>
            <pubDate>Tue, 15 Jul 2025 00:05:17 GMT</pubDate>
            <description><![CDATA[THE Copilot in Obsidian]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/logancyang/obsidian-copilot">logancyang/obsidian-copilot</a></h1>
            <p>THE Copilot in Obsidian</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,956</p>
            <p>Forks: 406</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;Copilot for Obsidian&lt;/h1&gt;

&lt;h2 align=&quot;center&quot;&gt;
The Ultimate AI Assistant for Your Second Brain
&lt;/h2&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/github/v/release/logancyang/obsidian-copilot?style=for-the-badge&amp;sort=semver&quot; alt=&quot;GitHub release (latest SemVer)&quot;&gt;
  &lt;img src=&quot;https://img.shields.io/badge/dynamic/json?logo=obsidian&amp;color=%23483699&amp;label=downloads&amp;query=%24%5B%22copilot%22%5D.downloads&amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Fobsidianmd%2Fobsidian-releases%2Fmaster%2Fcommunity-plugin-stats.json&amp;style=for-the-badge&quot; alt=&quot;Obsidian Downloads&quot;&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.obsidiancopilot.com/en/docs&quot;&gt;Documentation&lt;/a&gt; |
  &lt;a href=&quot;https://www.youtube.com/@loganhallucinates&quot;&gt;Youtube&lt;/a&gt; |
  &lt;a href=&quot;https://github.com/logancyang/obsidian-copilot/issues/new?template=bug_report.md&quot;&gt;Report Bug&lt;/a&gt; |
  &lt;a href=&quot;https://github.com/logancyang/obsidian-copilot/issues/new?template=feature_request.md&quot;&gt;Request Feature&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://example.com](https://obsidian.md/blog/2024-goty-winners/&quot;&gt;
    &lt;img src=&quot;./images/reward-banner.svg&quot; alt=&quot;Reward Banner&quot; width=&quot;400&quot;/&gt;
  &lt;/a&gt;
&lt;/p&gt;

Copilot for Obsidian is your best in‑vault AI assistant, designed to listen, act at the speed of thought, and keep you creating in flow—all within Obsidian’s integrated, tab‑free workspace.

- **🔒 Your data is 100% yours**: Local storage, no ads, and full control of your API keys.
- **🧠 Elevate your second brain**: Tap any OpenAI-compatible or local model to uncover insights, spark connections, and create powerful content.
- **🌐 Instant multimedia understanding**: Drop in webpages, YouTube videos, images, PDFs, or real-time web search for quick insights and summaries.
- **✍️ Create at the speed of thought**: Launch Prompt Palette or edit with AI in one click—your ideas, amplified effortlessly.

&lt;p align=&quot;center&quot;&gt;
  &lt;em&gt;Your AI assistant in Obsidian—powerful yet intuitive, keeping you in the creative flow.&lt;/em&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./images/product-UI-screenshot.png&quot; alt=&quot;Product UI screenshot&quot; width=&quot;800&quot;/&gt;
&lt;/p&gt;

## Why People Love It ❤️

- *&quot;Copilot is the missing link that turns Obsidian into a true second brain. I use it to draft investment memos with text, code, and visuals—all in one place. It’s the first tool that truly unifies how I search, process, organize, and retrieve knowledge without ever leaving Obsidian. With AI-powered search, organization, and reasoning built into my notes, it unlocks insights I’d otherwise miss. My workflow is faster, deeper, and more connected than ever—I can’t imagine working without it.&quot;* - @jasonzhangb, Investor &amp; Research Analyst
- *&quot;Since discovering Copilot, my writing process has been completely transformed. Conversing with my own articles and thoughts is the most refreshing experience I’ve had in decades.”* - Mat QV, Writer
- *&quot;Copilot has transformed our family—not just as a productivity assistant, but as a therapist. I introduced it to my non‑technical wife, Mania, who was stressed about our daughter’s upcoming exam; within an hour, she gained clarity on her mindset and next steps, finding calm and confidence.&quot;* - @screenfluent, A Loving Husband

## **Get Started in 5 Minutes**

### FREE Product Features

**🔌 Install Copilot in Community Plugins in Obsidian**

**🔑 Set Up Your AI Model (API Key)**

- To start using Copilot AI features, you&#039;ll need access to an AI model of your choice.

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=mzMbiamzOqM&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./images/AI-Model-Setup.png&quot; alt=&quot;AI Model API Key&quot; width=&quot;700&quot; height=&quot;394&quot;&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;em&gt;Click the image to watch the video on YouTube&lt;/em&gt;
&lt;/p&gt;

**📖** **Chat Mode: Summarize Specific Notes**

- 🧠 **Use When:** You want to reference specific notes or folders, generate content, or talk through ideas with Copilot like a knowledgeable thought partner.

- 💭 **In `Chat` mode, ask Copilot:**
  &gt; _&quot;Summarize [[Meeting Notes – March]] and create a follow-up task list based on notes in {projects}.&quot;_

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=idit7nCqEs0&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./images/Chat-Mode.png&quot; alt=&quot;Chat Mode&quot; width=&quot;700&quot; height=&quot;394&quot;&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;em&gt;Click the image to watch the video on YouTube&lt;/em&gt;
&lt;/p&gt;

**📖** **Vault QA Mode: Chat With Your Entire Vault**

- 🧠 **Use When:** You want to search your vault for patterns, ideas, or facts without knowing exactly where the information is stored.

- 💭 **In `Vault QA` mode, ask Copilot:**

  &gt; _&quot;What insights can I gather about the benefits of journaling from all of my notes?&quot;_

- 💡 **Tip:** Replace _the benefits of journaling_ with any topic mentioned in your notes to get more precise results.

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=hBLMWE8WRFU&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./images/Vault-Mode.png&quot; alt=&quot;Vault Mode&quot; width=&quot;700&quot; height=&quot;394&quot;&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;em&gt;Click the image to watch the video on YouTube&lt;/em&gt;
&lt;/p&gt;

**📖 Edit and Apply with One Click**

- 🧠 **Use When:** You want to quickly fix grammar, spelling or wording directly in your notes—without switching tabs or manually rewriting.

- 💭 **Select the text** and **edit with one RIGHT click**

- 💡 **Tip:** Set up and customize your right-click menu with common actions you use often, like _&quot;Summarize&quot;_, _&quot;Simplify Language&quot;_, or _&quot;Translate to Formal Tone&quot;_—so you can apply them effortlessly while you write.

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=hSmRnmEVoec&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./images/One-Click-Commands.png&quot; alt=&quot;One-Click Commands&quot; width=&quot;700&quot; height=&quot;394&quot;&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;em&gt;Click the image to watch the video on YouTube&lt;/em&gt;
&lt;/p&gt;

**📖 Automate your workflow with the Copilot Prompt Palette**

- 🧠 **Use When:** You want to speed up repetitive tasks like summarizing, rewriting, or translating without typing full prompts every time.

- 💭 Type / to use Prompt Palette

- 💡 **Tip:** Create shortcuts for your most-used actions—like _&quot;Translate to Spanish&quot;_ or _&quot;Draft a blog post outline&quot;_—and trigger them instantly with typing / !

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=9YzY2OJ54wM&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./images/Prompt-Palette.png&quot; alt=&quot;Prompt Palette&quot; width=&quot;700&quot; height=&quot;394&quot;&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;em&gt;Click the image to watch the video on YouTube&lt;/em&gt;
&lt;/p&gt;

**📖 Stay in flow with the Relevant Notes**

- 🧠 **Use When:** You&#039;re working on a note and want to pull in context or insights from related notes—without breaking your focus.

- 💭 Appears automatically when there&#039;s useful related content.

- 💡 **Tip:** Use it to quickly reference past research, ideas, or decisions—no need to search or switch tabs.

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=qapQD7jD3Uk&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./images/Relevant-Notes.png&quot; alt=&quot;Relevant Notes&quot; width=&quot;700&quot; height=&quot;394&quot;&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;em&gt;Click the image to watch the video on YouTube&lt;/em&gt;
&lt;/p&gt;

### Level Up with Copilot Plus and Beyond

Copilot Plus brings powerful AI agentic capabilities, context-aware actions and seamless tool integration—built to elevate your knowledge work in Obsidian.

🆙 **Upgrade to Copilot Plus**

First, go to https://www.obsidiancopilot.com/en to subscribe to Copilot Plus. Then, set up Copilot Plus License Key in Obsidian.

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=pPfWKZnNYhA&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./images/Copilot-Plus-Setup.png&quot; alt=&quot;Copilot Plus Setup&quot; width=&quot;700&quot; height=&quot;394&quot;&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;em&gt;Click the image to watch the video on YouTube&lt;/em&gt;
&lt;/p&gt;

❔Community is at the heart of everything we build. Join us on Discord for updates, priority support, and a voice in shaping the best AI products for your experience.

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./images/discord-support.png&quot; alt=&quot;Discord support screenshot&quot; width=&quot;700&quot;/&gt;
&lt;/p&gt;

**📖 Get Precision Insights From a Specific Time Window**

- 🧠 **Use When:** You want to quickly review tasks, notes, or ideas from a specific time range without manually digging through files.

- 💭 **In Chat mode, ask Copilot:**

  &gt; _&quot;Give me a recap of everything I captured last week.&quot;_

- 💡 **Tip:** Try variations like _&quot;Summarize my highlights from August 11 through August 22&quot;_ for even more insights.

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=sXP2sjvrqtI&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./images/Time-Based-Queries.png&quot; alt=&quot;Time-Based Queries&quot; width=&quot;700&quot; height=&quot;394&quot;&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;em&gt;Click the image to watch the video on YouTube&lt;/em&gt;
&lt;/p&gt;

**📖 One Prompt, Every Source—Instant Summaries from PDFs, Videos, and Web**

- 🧠 **Use When:** You want to combine information from multiple formats—documents, videos, web pages, and images—into one concise, actionable summary.

- 💭 **In PLUS mode, ask Copilot:**

  &gt; &quot;Please write a short intro of Kiwi birds based on the following information I collected about this animal.

  &gt; @youtube Summarize [](https://www.youtube.com/watch?v=tZ2jm_UPc6c&amp;t=417s)[https://www.youtube.com/watch?v=tZ2jm_UPc6c&amp;t=417s](https://www.youtube.com/watch?v=ABTfc5wUT1U)
  &gt; in a short paragraph.

  &gt; @websearch where can I find Kiwi birds?

  &gt; Summarize https://www.doc.govt.nz/nature/native-animals/birds/birds-a-z/kiwi/ in 300 words.“

- 🛠️ **Add PDFs and Images as Context to Enrich Your Learning**

- 💡 _Tip: For large PDFs, reference specific sections to focus the AI&#039;s attention._

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=WXoOZmMSHVE&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./images/One-Prompt-Every-Source.png&quot; alt=&quot;One Prompt, Every Source&quot; width=&quot;700&quot; height=&quot;394&quot;&gt;
  &lt;/a&gt;&lt;br&gt;
  &lt;em&gt;Click the image to watch the video on YouTube&lt;/em&gt;
&lt;/p&gt;


# **💡 Need Help?**

- Check the [documentation](https://www.obsidiancopilot.com/en/docs) for setup guides, how-tos, and advanced features.
- Watch [Youtube](https://www.youtube.com/@loganhallucinates) for walkthroughs.
- If you&#039;re experiencing a bug or have a feature idea, please follow the steps below to help us help you faster:
  - 🐛 Bug Report Checklist
    - ☑️Use the [bug report template](https://github.com/logancyang/obsidian-copilot/issues/new?template=bug_report.md) when reporting an issue
    - ☑️Enable Debug Mode in Copilot Settings → Advanced for more detailed logs
    - ☑️Open the dev console to collect error messages:
      - Mac: Cmd + Option + I
      - Windows: Ctrl + Shift + I
    - ☑️Turn off all other plugins, keeping only Copilot enabled
    - ☑️Attach relevant console logs to your report
    - ☑️Submit your bug report [here](https://github.com/logancyang/obsidian-copilot/issues/new?template=bug_report.md)
  - 💡 Feature Request Checklist
    - ☑️Use the [feature request template](https://github.com/logancyang/obsidian-copilot/issues/new?template=feature_request.md) for requesting a new feature
    - ☑️Clearly describe the feature, why it matters, and how it would help
    - ☑️Submit your feature request [here](https://github.com/logancyang/obsidian-copilot/issues/new?template=feature_request.md)

# **🙋‍♂️ FAQ**

&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;Why isn’t Vault search finding my notes?&lt;/strong&gt;&lt;/summary&gt;

If you&#039;re using the Vault QA mode (or the tool &lt;code&gt;@vault&lt;/code&gt; in Plus), try the following:

- Ensure you have a working embedding model from your AI model&#039;s provider (e.g. OpenAI). Watch this video: [AI Model Setup (API Key)](https://www.youtube.com/watch?v=mzMbiamzOqM)
- Ensure your Copilot indexing is up-to-date. Watch this video: [Vault Mode](https://www.youtube.com/watch?v=hBLMWE8WRFU)
- If issues persist, run &lt;strong&gt;Force Re-Index&lt;/strong&gt; or use &lt;strong&gt;List Indexed Files&lt;/strong&gt; from the Command Palette to inspect what&#039;s included in the index.
- ⚠️ &lt;strong&gt;Don’t switch embedding models after indexing&lt;/strong&gt;—it can break the results.
&lt;/details&gt;

&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;Why is my AI model returning error code 429: ‘Insufficient Quota’?&lt;/strong&gt;&lt;/summary&gt;

Most likely this is happening because you haven’t configured billing with your chosen model provider—or you’ve hit your monthly quota. For example, OpenAI typically caps individual accounts at $120/month. To resolve:

- ▶️ Watch the “AI Model Setup” video: [AI Model Setup (API Key)](https://www.youtube.com/watch?v=mzMbiamzOqM)
- 🔍 Verify your billing settings in your OpenAI dashboard
- 💳 Add a payment method if one isn’t already on file
- 📊 Check your usage dashboard for any quota or limit warnings

If you’re using a different provider, please refer to their documentation and billing policies for the equivalent steps.

&lt;/details&gt;

&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;Why am I getting a token limit error?&lt;/strong&gt;&lt;/summary&gt;

Please refer to your model provider’s documentation for the context window size.

⚠️ If you set a large &lt;strong&gt;max token limit&lt;/strong&gt; in your Copilot settings, you may encounter this error.

- &lt;strong&gt;Max tokens&lt;/strong&gt; refers to &lt;em&gt;completion tokens&lt;/em&gt;, not input tokens.
- A higher output token limit means less room for input!

🧠 Behind-the-scenes prompts for Copilot commands also consume tokens, so:

- Keep your message length short
- Set a reasonable max token value to avoid hitting the cap

💡 For QA with unlimited context, switch to the &lt;strong&gt;Vault QA&lt;/strong&gt; mode in the dropdown (Copilot v2.1.0+ required).

&lt;/details&gt;

# **💎 Choose the Copilot Plan That’s Right for You**

| **Feature**                                                        | **Free Plan ✅** | **Plus Plan 💎** | **Believer Plan 🛡️** |
| ------------------------------------------------------------------ | ---------------- | ---------------- | -------------------- |
| No credit card or sign-up required                                 | ✅               | ❌               | ❌                   |
| All open-source features                                           | ✅               | ✅               | ✅                   |
| Bring your own API key                                             | ✅               | ✅               | ✅                   |
| Best-in-class AI chat in Obsidian                                  | ✅               | ✅               | ✅                   |
| Local data store for Vault QA                                      | ✅               | ✅               | ✅                   |
| Support                                                            | ✅ Essential     | ✅ Pro           | ✅ Elite             |
| AI agent capabilities                                              | ❌               | ✅               | ✅                   |
| Image and PDF support                                              | ❌               | ✅               | ✅                   |
| Enhanced chat UI (context menu)                                    | ❌               | ✅               | ✅                   |
| State-of-the-art embedding models included                         | ❌               | ✅               | ✅                   |
| Exclusive @AI tools (e.g., web, YouTube)                           | ❌               | ✅               | ✅                   |
| Exclusive chat model included in plan                              | ❌               | ✅               | ✅                   |
| Access to exclusive Discord channel                                | ❌               | ✅               | ✅                   |
| Lifetime access                                                    | ❌               | ❌               | ✅                   |
| Priority access to new features                                    | ❌               | ❌               | ✅                   |
| Prioritized feature requests                                       | ❌               | ❌               | ✅                   |
| Exclusive access to next-gen chat &amp; embedding models (coming soon) | ❌               | ❌               | ✅                   |

## **🙏 Thank You**

If you share the vision of building the most powerful AI agent for our second brain, consider [sponsoring this project](https://github.com/sponsors/logancyang) or buying me a coffee. Help spread the word by sharing Copilot for Obsidian on Twitter/X, Reddit, or your favorite platform!

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://camo.githubusercontent.com/7b8f7343bfc6e3c65c7901846637b603fd812f1a5f768d8b0572558bde859eb9/68747470733a2f2f63646e2e6275796d6561636f666665652e636f6d2f627574746f6e732f76322f64656661756c742d79656c6c6f772e706e67&quot; alt=&quot;BuyMeACoffee&quot; width=&quot;200&quot;&gt;
&lt;/p&gt;

**Acknowledgments**

Special thanks to our top sponsors: @mikelaaron, @pedramamini, @Arlorean, @dashinja, @azagore, @MTGMAD, @gpythomas, @emaynard, @scmarinelli, @borthwick, @adamhill, @gluecode, @rusi, @timgrote, @JiaruiYu-Consilium, @ddocta, @AMOz1, @chchwy, @pborenstein, @GitTom, @kazukgw, @mjluser1, @joesfer, @rwaal, @turnoutnow-harpreet, @dreznicek, @xrise-informatik, @jeremygentles, @ZhengRui, @bfoujols, @jsmith0475, @pagiaddlemon, @sebbyyyywebbyyy, @royschwartz2, @vikram11, @amiable-dev, @khalidhalim, @DrJsPBs, @chishaku, @Andrea18500, @shayonpal, @rhm2k, @snorcup, @JohnBub, @obstinatelark, @jonashaefele, @vishnu2kmohan

## **Copilot Plus Disclosure**

Copilot Plus is a premium product of Brevilabs LLC and it is not affiliated with Obsidian. It offers a powerful agentic AI integration into Obsidian. Please check out our website [obsidiancopilot.com](https://obsidiancopilot.com/) for more details!

- An account and payment are required for full access.
- Copilot Plus requires network use to faciliate the AI agent.
- Copilot Plus does not access your files without your consent.
- Copilot Plus collect server-side telemetry to improve the product. Please see the privacy policy on the website for more details.
- The frontend code of Copilot plugin is fully open-source. However, the backend code facilitating the AI agents is close-sourced and proprietary.
- We offer a full refund if you are not satisfied with the product within 14 days of your purchase, no questions asked.

## **Authors**

Brevilabs Team | Email: logan@brevilabs.com | X/Twitter: [@logancyang](https://twitter.com/logancyang)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[SiriusScan/Sirius]]></title>
            <link>https://github.com/SiriusScan/Sirius</link>
            <guid>https://github.com/SiriusScan/Sirius</guid>
            <pubDate>Tue, 15 Jul 2025 00:05:16 GMT</pubDate>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/SiriusScan/Sirius">SiriusScan/Sirius</a></h1>
            <p></p>
            <p>Language: TypeScript</p>
            <p>Stars: 521</p>
            <p>Forks: 74</p>
            <p>Stars today: 25 stars today</p>
            <h2>README</h2><pre># Sirius Scan

![Sirius Scan Dashboard](/documentation/dash-dark.gif)

Sirius is an open-source comprehensive vulnerability scanner that leverages community-driven security intelligence and automated penetration testing capabilities. Get started in minutes with our Docker-based setup.

## 🚀 Quick Start Guide

### Prerequisites

- **Docker Engine** 20.10.0+ with Docker Compose V2
- **System Requirements**: 4GB RAM minimum, 10GB free disk space
- **Network Access**: Internet connectivity for vulnerability database updates
- **Supported Platforms**: Linux, macOS, Windows (with WSL2)

### ⚡ One-Command Setup

```bash
# Clone and start Sirius
git clone https://github.com/SiriusScan/Sirius.git
cd Sirius
docker compose up -d

# Access the web interface
open http://localhost:3000
```

**Login Credentials**:

- Username: `admin`
- Password: `password`

**⚠️ Security Notice**: Change these default credentials immediately in production environments.

### 🔧 Installation Options

#### Option 1: Standard Setup (Recommended for Most Users)

The default configuration provides a complete scanning environment:

```bash
git clone https://github.com/SiriusScan/Sirius.git
cd Sirius
docker compose up -d
```

#### Option 2: User-Focused Setup (Simplified)

For the cleanest experience without development tooling:

```bash
git clone https://github.com/SiriusScan/Sirius.git
cd Sirius
docker compose -f docker-compose.user.yaml up -d
```

#### Option 3: Production Deployment

For production environments with optimized performance:

```bash
git clone https://github.com/SiriusScan/Sirius.git
cd Sirius
docker compose -f docker-compose.production.yaml up -d
```

### ✅ Verify Installation

```bash
# Check all services are running
docker ps

# Expected services:
# - sirius-ui (port 3000)
# - sirius-api (port 9001)
# - sirius-engine (ports 5174, 50051)
# - sirius-postgres (port 5432)
# - sirius-rabbitmq (ports 5672, 15672)
# - sirius-valkey (port 6379)

# Access web interface
curl http://localhost:3000

# Check API health
curl http://localhost:9001/health
```

## 🎯 What Can Sirius Do?

### Core Capabilities

- **🔍 Network Discovery**: Automated host discovery and service enumeration
- **🛡️ Vulnerability Assessment**: CVE-based vulnerability detection with CVSS scoring
- **📊 Risk Management**: Comprehensive risk scoring and remediation guidance
- **🎪 Visual Scanning Workflows**: Drag-and-drop scan configuration
- **🔄 Automated Scanning**: Scheduled and continuous security assessments
- **📡 Remote Agent Support**: Distributed scanning across multiple environments
- **💻 Interactive Terminal**: PowerShell-based command interface for advanced operations
- **📈 Real-time Dashboards**: Live scanning progress and vulnerability metrics

### Supported Scan Types

- **Network Scanning**: Nmap-based port and service discovery
- **Vulnerability Scanning**: NSE script-based vulnerability detection
- **SMB/Windows Assessment**: Specialized Windows security testing
- **Custom Workflows**: User-defined scanning configurations
- **Agent-based Scanning**: Remote endpoint assessment

## 🏗️ System Architecture

Sirius uses a microservices architecture with the following components:

| Service             | Description             | Technology                     | Ports       | Purpose                               |
| ------------------- | ----------------------- | ------------------------------ | ----------- | ------------------------------------- |
| **sirius-ui**       | Web frontend            | Next.js 14, React, TailwindCSS | 3000        | User interface and visualization      |
| **sirius-api**      | REST API backend        | Go, Gin framework              | 9001        | API endpoints and business logic      |
| **sirius-engine**   | Multi-service container | Go, Air live-reload            | 5174, 50051 | Scanner, terminal, and agent services |
| **sirius-postgres** | Primary database        | PostgreSQL 15                  | 5432        | Vulnerability and scan data storage   |
| **sirius-rabbitmq** | Message queue           | RabbitMQ                       | 5672, 15672 | Inter-service communication           |
| **sirius-valkey**   | Cache layer             | Redis-compatible               | 6379        | Session and temporary data            |

### 📡 Service Communication Flow

```
User Interface (sirius-ui)
    ↓ HTTP/WebSocket
REST API (sirius-api)
    ↓ AMQP Messages
Message Queue (sirius-rabbitmq)
    ↓ Queue Processing
Scanning Engine (sirius-engine)
    ↓ SQL Queries
Database (sirius-postgres)
```

### 🗄️ Data Storage

- **PostgreSQL**: Vulnerability data, scan results, host information
- **SQLite**: User authentication and session data (development)
- **Valkey/Redis**: Caching, temporary scan data, session storage
- **RabbitMQ**: Message queues for scan requests and agent communication

## 📱 Interface Overview

### 📊 Dashboard

![Sirius Scan Dashboard](/documentation/dash-dark.gif)

Your central command center featuring:

- Real-time scanning activity and progress monitoring
- Latest vulnerability discoveries with severity trends
- System performance metrics and resource utilization
- Quick-access controls for common scanning operations
- Executive summary with risk scoring

### 🔍 Scanning Interface

![Scanning Interface](/documentation/scanner.jpg)

Advanced scanning capabilities:

- **Visual Workflow Editor**: Drag-and-drop scan module configuration
- **Real-time Progress**: Live scan status with detailed logging
- **Custom Profiles**: Save and reuse scanning configurations
- **Scheduled Scans**: Automated scanning with cron-like scheduling
- **Multi-target Support**: Scan multiple hosts, networks, or IP ranges
- **NSE Script Integration**: Custom Nmap scripts for specialized testing

### 🎯 Vulnerability Navigator

![Vulnerability Navigator](/documentation/vulnerability-navigator.jpg)

Comprehensive vulnerability management:

- **Dynamic Filtering**: Real-time search across all vulnerability data
- **Risk Prioritization**: CVSS-based severity sorting and filtering
- **Detailed Reports**: CVE/CPE mapping with remediation guidance
- **Export Capabilities**: PDF, CSV, and JSON report generation
- **Historical Tracking**: Vulnerability timeline and remediation progress
- **Integration Ready**: API endpoints for external security tools

### 🌐 Environment Overview

![Environment Overview](/documentation/environment.jpg)

Complete infrastructure visibility:

- **Asset Inventory**: Comprehensive host and service discovery
- **Network Topology**: Interactive visualization of discovered infrastructure
- **Risk Assessment**: Environment-wide security posture analysis
- **Service Enumeration**: Detailed service versioning and configuration
- **Compliance Tracking**: Security baseline monitoring and reporting

### 🖥️ Host Details

![Host Details](/documentation/host.jpg)

In-depth system analysis:

- **System Profiling**: Complete hardware and software inventory
- **Port Analysis**: Detailed service discovery and version detection
- **Security Metrics**: Host-specific vulnerability counts and risk scores
- **Historical Data**: Scan history and security trend analysis
- **Remediation Tracking**: Fix validation and security improvement monitoring

### 💻 Terminal Interface

![Terminal Interface](/documentation/terminal.jpg)

Advanced operations console:

- **PowerShell Environment**: Full scripting capabilities for automation
- **Agent Management**: Remote agent deployment and configuration
- **Custom Scripts**: Execute custom security testing scripts
- **Batch Operations**: Bulk scanning and management operations
- **System Diagnostics**: Real-time system health and performance monitoring

## 🛠️ Development &amp; Customization

### 🎯 End User Setup (Recommended)

Perfect for security professionals and penetration testers:

```bash
git clone https://github.com/SiriusScan/Sirius.git
cd Sirius
docker compose up -d
```

This configuration provides:

- ✅ Complete scanning capabilities out-of-the-box
- ✅ Pre-configured vulnerability databases
- ✅ No additional setup required
- ✅ Production-ready security scanning

### 🔧 Developer Setup (Advanced)

For developers contributing to Sirius or building custom integrations:

#### Prerequisites for Development

- Git repositories for individual components
- Go 1.21+ for backend development
- Node.js 20+ for frontend development
- Understanding of Docker multi-stage builds

#### Setup Development Environment

1. **Clone Component Repositories** (Optional - for component development):

```bash
# Create development directory structure
mkdir -p ../minor-projects &amp;&amp; cd ../minor-projects

# Clone only the components you want to develop:
git clone https://github.com/SiriusScan/go-api.git          # REST API backend
git clone https://github.com/SiriusScan/app-scanner.git    # Scanning engine
git clone https://github.com/SiriusScan/app-terminal.git   # Terminal service
git clone https://github.com/SiriusScan/app-agent.git      # Remote agents
git clone https://github.com/SiriusScan/sirius-nse.git     # NSE scripts
```

2. **Enable Development Mode**:

Edit `docker-compose.override.yaml` and uncomment volume mounts for components you&#039;re developing:

```yaml
# Uncomment ONLY for repositories you have cloned:
# - ../minor-projects/app-agent:/app-agent        # Agent development
# - ../minor-projects/app-scanner:/app-scanner    # Scanner development
# - ../minor-projects/app-terminal:/app-terminal  # Terminal development
# - ../minor-projects/go-api:/go-api              # API development
```

3. **Start Development Environment**:

```bash
cd Sirius
docker compose down &amp;&amp; docker compose up -d --build
```

#### Development Features

- **🔥 Hot Reload**: Live code reloading with Air for Go services
- **📝 Live Editing**: Frontend changes reflect immediately
- **🐛 Debug Mode**: Detailed logging and error reporting
- **🔍 Development Tools**: Access to Go toolchain and debugging utilities

#### Development Commands

```bash
# View real-time logs
docker compose logs -f sirius-engine

# Access development container
docker exec -it sirius-engine bash

# Check live reload status
docker exec sirius-engine ps aux | grep air

# Restart specific service
docker restart sirius-engine

# Rebuild with changes
docker compose up -d --build
```

### 🧪 Testing &amp; Quality Assurance

```bash
# Run comprehensive test suite
./run_tests.sh --all

# Run specific test categories
./run_tests.sh --models      # Backend model tests
./run_tests.sh --ui          # Frontend UI tests
./run_tests.sh --integration # Integration tests
./run_tests.sh --security    # Security validation tests

# Manual testing commands
docker exec sirius-engine nmap --version
docker exec sirius-api go test ./...
```

## 🔌 API &amp; Integration

Sirius provides comprehensive APIs for integration with existing security workflows:

### REST API Endpoints

- **Authentication**: `/api/auth` - JWT-based authentication
- **Hosts**: `/api/hosts` - Host management and discovery
- **Scans**: `/api/scans` - Scan management and execution
- **Vulnerabilities**: `/api/vulnerabilities` - Vulnerability data access
- **Reports**: `/api/reports` - Report generation and export

### WebSocket APIs

- **Real-time Updates**: Live scan progress and vulnerability notifications
- **Agent Communication**: Bidirectional agent management
- **System Monitoring**: Live system metrics and health status

### Integration Examples

```bash
# Start a network scan via API
curl -X POST http://localhost:9001/api/scans \
  -H &quot;Authorization: Bearer $TOKEN&quot; \
  -H &quot;Content-Type: application/json&quot; \
  -d &#039;{&quot;target&quot;: &quot;192.168.1.0/24&quot;, &quot;scan_type&quot;: &quot;network&quot;}&#039;

# Get vulnerability summary
curl http://localhost:9001/api/vulnerabilities/summary \
  -H &quot;Authorization: Bearer $TOKEN&quot;

# Export scan results
curl http://localhost:9001/api/reports/scan/123/pdf \
  -H &quot;Authorization: Bearer $TOKEN&quot; \
  -o scan-report.pdf
```

## 🔧 Troubleshooting

### Common Issues &amp; Solutions

#### 🐳 Container Issues

**Problem**: Services fail to start

```bash
# Diagnosis
docker compose ps              # Check service status
docker compose logs &lt;service&gt;  # View service logs
docker system df              # Check disk space

# Solutions
docker compose down &amp;&amp; docker compose up -d --build  # Fresh restart
docker system prune -f                               # Clean up space
```

**Problem**: &quot;Port already in use&quot; errors

```bash
# Find process using port
netstat -tuln | grep 3000
lsof -i :3000

# Solution: Stop conflicting service or change port
docker compose down
# Edit docker-compose.yaml to use different ports if needed
```

#### 🔍 Scanner Issues

**Problem**: Nmap errors or scanning failures

```bash
# Check scanner logs
docker logs sirius-engine | grep -i nmap

# Test Nmap directly
docker exec sirius-engine nmap --version
docker exec sirius-engine nmap -p 80 127.0.0.1

# Common fixes
docker restart sirius-engine
docker exec sirius-engine which nmap  # Verify Nmap installation
```

**Problem**: &quot;Duplicate port specification&quot; warnings

```bash
# This is resolved in current version, but if you see it:
docker exec sirius-engine grep -r &quot;port.*specification&quot; /app-scanner-src/
# Should show corrected port ranges like &quot;1-1000,3389&quot;
```

#### 🗄️ Database Issues

**Problem**: Database connection failures

```bash
# Check PostgreSQL status
docker exec sirius-postgres pg_isready
docker logs sirius-postgres

# Test connection
docker exec sirius-postgres psql -U postgres -d sirius -c &quot;SELECT version();&quot;

# Reset database if needed
docker compose down
docker volume rm sirius_postgres_data
docker compose up -d
```

#### 🐰 Message Queue Issues

**Problem**: RabbitMQ connectivity issues

```bash
# Check RabbitMQ status
docker exec sirius-rabbitmq rabbitmqctl status

# View queue status
docker exec sirius-rabbitmq rabbitmqctl list_queues

# Access management interface
open http://localhost:15672  # guest/guest
```

#### 🌐 Network &amp; Connectivity

**Problem**: Services can&#039;t communicate

```bash
# Test internal network
docker exec sirius-ui ping sirius-api
docker exec sirius-api ping sirius-postgres

# Check network configuration
docker network ls
docker network inspect sirius_default
```

**Problem**: External access issues

```bash
# Verify port mapping
docker port sirius-ui
docker port sirius-api

# Check firewall (Linux)
sudo ufw status
sudo iptables -L

# Check firewall (macOS)
sudo pfctl -s all
```

### 🚨 Emergency Recovery

**Complete System Reset**:

```bash
# Stop all services
docker compose down

# Remove all data (⚠️ This deletes all scan data!)
docker compose down -v

# Clean Docker system
docker system prune -a -f

# Fresh start
docker compose up -d --build
```

**Backup Current Data**:

```bash
# Backup database
docker exec sirius-postgres pg_dump -U postgres sirius &gt; backup.sql

# Backup scan results directory
docker cp sirius-engine:/opt/sirius/ ./sirius-backup/
```

## 🔒 Security Best Practices

### 🏭 Production Deployment

**Essential Security Steps**:

1. **Change Default Credentials**:

```bash
# Update in docker-compose.production.yaml
POSTGRES_PASSWORD=your_secure_password
RABBITMQ_DEFAULT_PASS=your_secure_password
NEXTAUTH_SECRET=your_long_random_secret
```

2. **Network Security**:

```bash
# Use internal networks for service communication
# Expose only necessary ports (3000 for UI)
# Configure firewall rules
sudo ufw allow 3000/tcp
sudo ufw deny 5432/tcp  # Don&#039;t expose database
```

3. **SSL/TLS Configuration**:

```bash
# Use reverse proxy with SSL (nginx/traefik)
# Enable HTTPS for web interface
# Secure API endpoints with proper certificates
```

4. **Data Protection**:

```bash
# Encrypt database backups
# Secure volume mounts
# Regular security updates
docker compose pull  # Update images regularly
```

### 🛡️ Security Scanning Best Practices

- **Network Isolation**: Run scans from isolated networks when possible
- **Permission Management**: Use least-privilege principles for scan accounts
- **Scan Scheduling**: Perform intensive scans during maintenance windows
- **Data Retention**: Implement appropriate data lifecycle policies
- **Audit Logging**: Enable comprehensive logging for compliance

## 📚 Documentation &amp; Resources

### 📖 Essential Documentation

- [📘 Installation Guide](https://sirius.publickey.io/docs/getting-started/installation) - Detailed setup instructions
- [🎯 Quick Start Guide](https://sirius.publickey.io/docs/getting-started/quick-start) - Get scanning in 5 minutes
- [🎪 Interface Tour](https://sirius.publickey.io/docs/getting-started/interface-tour) - Complete UI walkthrough
- [🔧 Configuration Guide](https://sirius.publickey.io/docs/guides/configuration) - Advanced configuration options
- [🛡️ Security Guide](https://sirius.publickey.io/docs/guides/security) - Production security best practices

### 🔌 Technical Documentation

- [🚀 API Reference](https://sirius.publickey.io/docs/api/rest/authentication) - Complete API documentation
- [📦 Go SDK](https://sirius.publickey.io/docs/api/sdk/go) - Go integration library
- [🐳 Docker Guide](./documentation/DOCKER-IMPLEMENTATION-DOCUMENTATION.md) - Comprehensive Docker documentation
- [🏗️ Architecture Guide](./documentation/README.architecture.md) - System architecture deep-dive
- [🔄 CI/CD Guide](./documentation/README.cicd.md) - Deployment automation

### 🎓 User Guides

- [🔍 Scanning Guide](https://sirius.publickey.io/docs/guides/scanning) - Advanced scanning techniques
- [🎯 Vulnerability Management](https://sirius.publickey.io/docs/guides/vulnerabilities) - Managing discovered vulnerabilities
- [🌐 Environment Management](https://sirius.publickey.io/docs/guides/environment) - Infrastructure assessment
- [🖥️ Host Management](https://sirius.publickey.io/docs/guides/hosts) - Individual host analysis
- [💻 Terminal Guide](https://sirius.publickey.io/docs/guides/terminal) - Advanced PowerShell operations

### 🤝 Community &amp; Support

- [❓ FAQ](https://sirius.publickey.io/docs/community/faq) - Frequently asked questions
- [🐛 GitHub Issues](https://github.com/SiriusScan/Sirius/issues) - Bug reports and feature requests
- [💬 Discord Community](https://sirius.publickey.io/community) - Real-time community support
- [🤝 Contributing Guide](https://sirius.publickey.io/docs/community/contributing) - How to contribute to Sirius
- [📧 Support Contact](mailto:support@publickey.io) - Direct technical support

## 📊 Performance &amp; Scaling

### 📈 System Requirements by Use Case

| Use Case            | CPU       | RAM   | Storage | Network    |
| ------------------- | --------- | ----- | ------- | ---------- |
| **Personal Lab**    | 2 cores   | 4GB   | 20GB    | Basic      |
| **Small Business**  | 4 cores   | 8GB   | 100GB   | Dedicated  |
| **Enterprise**      | 8+ cores  | 16GB+ | 500GB+  | High-speed |
| **MSP/Large Scale** | 16+ cores | 32GB+ | 1TB+    | Enterprise |

### ⚡ Performance Optimization

```bash
# Monitor resource usage
docker stats

# Optimize for large environments
# Edit docker-compose.yaml and add:
services:
  sirius-engine:
    deploy:
      resources:
        limits:
          cpus: &#039;4.0&#039;
          memory: 8G
        reservations:
          cpus: &#039;2.0&#039;
          memory: 4G
```

## 🆕 What&#039;s New

### Recent Updates

- ✅ **Fixed Nmap Configuration**: Resolved duplicate port specification warnings
- ✅ **Enhanced Development Mode**: Improved volume mounting for local development
- ✅ **Better Error Handling**: Enhanced debugging and logging capabilities
- ✅ **Performance Improvements**: Optimized container startup and resource usage
- ✅ **Security Enhancements**: Updated default configurations and security practices

### Upcoming Features

- 🔄 **Advanced Reporting**: Enhanced PDF and dashboard reporting
- 🎯 **AI-Powered Analysis**: Automated vulnerability risk assessment
- 📱 **Mobile Support**: Mobile-responsive interface improvements
- 🔌 **Plugin System**: Extensible scanning module architecture
- ☁️ **Cloud Integration**: Native clo

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[freeCodeCamp/freeCodeCamp]]></title>
            <link>https://github.com/freeCodeCamp/freeCodeCamp</link>
            <guid>https://github.com/freeCodeCamp/freeCodeCamp</guid>
            <pubDate>Tue, 15 Jul 2025 00:05:15 GMT</pubDate>
            <description><![CDATA[freeCodeCamp.org's open-source codebase and curriculum. Learn math, programming, and computer science for free.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/freeCodeCamp/freeCodeCamp">freeCodeCamp/freeCodeCamp</a></h1>
            <p>freeCodeCamp.org's open-source codebase and curriculum. Learn math, programming, and computer science for free.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 422,948</p>
            <p>Forks: 40,763</p>
            <p>Stars today: 125 stars today</p>
            <h2>README</h2><pre>[![freeCodeCamp Social Banner](https://cdn.freecodecamp.org/platform/universal/fcc_banner_new.png)](https://www.freecodecamp.org/)

[![Pull Requests Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat)](https://makeapullrequest.com)
[![first-timers-only Friendly](https://img.shields.io/badge/first--timers--only-friendly-blue.svg)](https://www.firsttimersonly.com/)
[![Open Source Helpers](https://www.codetriage.com/freecodecamp/freecodecamp/badges/users.svg)](https://www.codetriage.com/freecodecamp/freecodecamp)
[![Setup Automated](https://img.shields.io/badge/setup-automated-blue?logo=gitpod)](https://gitpod.io/from-referrer/)
[![Discord](https://img.shields.io/discord/692816967895220344?logo=discord&amp;label=Discord&amp;color=5865F2)](https://discord.gg/PRyKn3Vbay)

## freeCodeCamp.org&#039;s open-source codebase and curriculum

[freeCodeCamp.org](https://www.freecodecamp.org) is a friendly community where you can learn to code for free. It is run by a [donor-supported 501(c)(3) charity](https://www.freecodecamp.org/donate) to help millions of busy adults transition into tech. Our community has already helped more than 40,000 people get their first developer job.

Our full-stack web development and machine learning curriculum is completely free and self-paced. We have thousands of interactive coding challenges to help you expand your skills.

## Table of Contents

- [Certifications](#certifications)
- [The Learning Platform](#the-learning-platform)
- [Reporting Bugs and Issues](#reporting-bugs-and-issues)
- [Reporting Security Issues and Responsible Disclosure](#reporting-security-issues-and-responsible-disclosure)
- [Contributing](#contributing)
- [Platform, Build and Deployment Status](#platform-build-and-deployment-status)
- [License](#license)

### Certifications

freeCodeCamp.org offers several free developer certifications. Each of these certifications involves building 5 required web app projects, along with hundreds of optional coding challenges to help you prepare for those projects. We estimate that each certification will take a beginner programmer around 300 hours to earn.

Each of these 50 projects in the freeCodeCamp.org curriculum has its own agile user stories and automated tests. These help you build up your project incrementally and ensure you&#039;ve fulfilled all the user stories before you submit it.

You can pull in these test suites through [freeCodeCamp&#039;s CDN](https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js). This means you can build these projects on websites like CodePen and Replit - or even on your local computer&#039;s development environment.

Once you&#039;ve earned a certification, you will always have it. You will always be able to link to it from your LinkedIn or resume. And when your prospective employers or freelance clients click that link, they&#039;ll see a verified certification specific to you.

The one exception to this is if we discover violations of our [Academic Honesty Policy](https://www.freecodecamp.org/news/academic-honesty-policy/). When we catch people unambiguously plagiarizing (submitting other people&#039;s code or projects as their own without citation), we do what all rigorous institutions of learning should do - we revoke their certifications and ban those people.

Here are our twelve core certifications:

#### 1. [Responsive Web Design Certification](https://www.freecodecamp.org/learn/2022/responsive-web-design/)

- [Learn HTML by Building a Cat Photo App](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-html-by-building-a-cat-photo-app)
- [Learn Basic CSS by Building a Cafe Menu](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-basic-css-by-building-a-cafe-menu)
- [Learn CSS Colors by Building a Set of Colored Markers](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-colors-by-building-a-set-of-colored-markers)
- [Learn HTML Forms by Building a Registration Form](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-html-forms-by-building-a-registration-form)
- [Learn the CSS Box Model by Building a Rothko Painting](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-the-css-box-model-by-building-a-rothko-painting)
- [Learn CSS Flexbox by Building a Photo Gallery](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-flexbox-by-building-a-photo-gallery)
- [Learn Typography by Building a Nutrition Label](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-typography-by-building-a-nutrition-label)
- [Learn Accessibility by Building a Quiz](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-accessibility-by-building-a-quiz)
- [Learn More About CSS Pseudo Selectors by Building A Balance Sheet](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-more-about-css-pseudo-selectors-by-building-a-balance-sheet)
- [Learn Intermediate CSS by Building a Cat Painting](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-intermediate-css-by-building-a-cat-painting)
- [Learn Responsive Web Design by Building a Piano](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-responsive-web-design-by-building-a-piano)
- [Learn CSS Variables by Building a City Skyline](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-variables-by-building-a-city-skyline)
- [Learn CSS Grid by Building a Magazine](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-grid-by-building-a-magazine)
- [Learn CSS Transforms by Building a Penguin](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-transforms-by-building-a-penguin)
- [Learn CSS Animations by Building a Ferris Wheel](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-animation-by-building-a-ferris-wheel)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Survey Form](https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-survey-form-project/build-a-survey-form), [Tribute Page](https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-tribute-page-project/build-a-tribute-page), [Technical Documentation Page](https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-technical-documentation-page-project/build-a-technical-documentation-page), [Product Landing Page](https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-product-landing-page-project/build-a-product-landing-page), [Personal Portfolio Webpage](https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-personal-portfolio-webpage-project/build-a-personal-portfolio-webpage)

#### 2. [JavaScript Algorithms and Data Structures Certification](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/)

- [Learn Introductory JavaScript by Building a Pyramid Generator](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-introductory-javascript-by-building-a-pyramid-generator)
- [Learn Basic JavaScript by Building a Role Playing Game](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-javascript-by-building-a-role-playing-game)
- [Learn Form Validation by Building a Calorie Counter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-form-validation-by-building-a-calorie-counter)
- [Learn Basic String and Array Methods by Building a Music Player](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-string-and-array-methods-by-building-a-music-player)
- [Learn the Date Object by Building a Date Formatter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-the-date-object-by-building-a-date-formatter)
- [Learn Modern JavaScript Methods By Building Football Team Cards](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-modern-javascript-methods-by-building-football-team-cards)
- [Learn localStorage by Building a Todo App](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-localstorage-by-building-a-todo-app)
- [Learn Recursion by Building a Decimal to Binary Converter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-recursion-by-building-a-decimal-to-binary-converter)
- [Learn Basic Algorithmic Thinking by Building a Number Sorter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-algorithmic-thinking-by-building-a-number-sorter)
- [Learn Advanced Array Methods by Building a Statistics Calculator](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-advanced-array-methods-by-building-a-statistics-calculator)
- [Learn Functional Programming by Building a Spreadsheet](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-functional-programming-by-building-a-spreadsheet)
- [Learn Regular Expressions by Building a Spam Filter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-regular-expressions-by-building-a-spam-filter)
- [Learn Basic OOP by Building a Shopping Cart](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-oop-by-building-a-shopping-cart)
- [Learn Intermediate OOP by Building a Platformer Game](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-intermediate-oop-by-building-a-platformer-game)
- [Learn Intermediate Algorithmic Thinking by Building a Dice Game](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#review-algorithmic-thinking-by-building-a-dice-game)
- [Learn Fetch and Promises By Building an fCC Authors Page](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-fetch-and-promises-by-building-an-fcc-authors-page)
- [Learn Asynchronous Programming by Building an fCC Forum Leaderboard](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-asynchronous-programming-by-building-an-fcc-forum-leaderboard)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Palindrome Checker](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-palindrome-checker-project/build-a-palindrome-checker), [Roman Numeral Converter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-roman-numeral-converter-project/build-a-roman-numeral-converter), [Telephone Number Validator](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-telephone-number-validator-project/build-a-telephone-number-validator), [Cash Register](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-cash-register-project/build-a-cash-register), [RPG Creature Search App](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-an-rpg-creature-search-app-project/build-an-rpg-creature-search-app)

#### 3. [Front End Libraries Certification](https://www.freecodecamp.org/learn/front-end-development-libraries/)

- [Bootstrap](https://www.freecodecamp.org/learn/front-end-development-libraries/#bootstrap)
- [jQuery](https://www.freecodecamp.org/learn/front-end-development-libraries/#jquery)
- [Sass](https://www.freecodecamp.org/learn/front-end-development-libraries/#sass)
- [React](https://www.freecodecamp.org/learn/front-end-development-libraries/#react)
- [Redux](https://www.freecodecamp.org/learn/front-end-development-libraries/#redux)
- [React and Redux](https://www.freecodecamp.org/learn/front-end-development-libraries/#react-and-redux)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Random Quote Machine](https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-random-quote-machine), [Markdown Previewer](https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-markdown-previewer), [Drum Machine](https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-drum-machine), [JavaScript Calculator](https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-javascript-calculator), [25 + 5 Clock](https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-25--5-clock)

#### 4. [Data Visualization Certification](https://www.freecodecamp.org/learn/data-visualization/)

- [Data Visualization with D3](https://www.freecodecamp.org/learn/data-visualization/#data-visualization-with-d3)
- [JSON APIs and Ajax](https://www.freecodecamp.org/learn/data-visualization/#json-apis-and-ajax)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Bar Chart](https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-bar-chart), [Scatterplot Graph](https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-scatterplot-graph), [Heat Map](https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-heat-map), [Choropleth Map](https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-choropleth-map), [Treemap Diagram](https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-treemap-diagram)

#### 5. [Relational Database](https://www.freecodecamp.org/learn/relational-database/)

- [Learn Bash by Building a Boilerplate](https://www.freecodecamp.org/learn/relational-database/#learn-bash-by-building-a-boilerplate)
- [Learn Relational Databases by Building a Database of Video Game Characters](https://www.freecodecamp.org/learn/relational-database/#learn-relational-databases-by-building-a-database-of-video-game-characters)
- [Learn Bash Scripting by Building Five Programs](https://www.freecodecamp.org/learn/relational-database/#learn-bash-scripting-by-building-five-programs)
- [Learn SQL by Building a Student Database: Part 1](https://www.freecodecamp.org/learn/relational-database/#learn-sql-by-building-a-student-database-part-1)
- [Learn SQL by Building a Student Database: Part 2](https://www.freecodecamp.org/learn/relational-database/#learn-sql-by-building-a-student-database-part-2)
- [Learn Advanced Bash by Building a Kitty Ipsum Translator](https://www.freecodecamp.org/learn/relational-database/#learn-advanced-bash-by-building-a-kitty-ipsum-translator)
- [Learn Bash and SQL by Building a Bike Rental Shop](https://www.freecodecamp.org/learn/relational-database/#learn-bash-and-sql-by-building-a-bike-rental-shop)
- [Learn Nano by Building a Castle](https://www.freecodecamp.org/learn/relational-database/#learn-nano-by-building-a-castle)
- [Learn Git by Building an SQL Reference Object](https://www.freecodecamp.org/learn/relational-database/#learn-git-by-building-an-sql-reference-object)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Salon Appointment Scheduler](https://www.freecodecamp.org/learn/relational-database/#build-a-salon-appointment-scheduler-project), [Celestial Bodies Database](https://www.freecodecamp.org/learn/relational-database/#build-a-celestial-bodies-database-project), [Periodic Table Database](https://www.freecodecamp.org/learn/relational-database/#build-a-periodic-table-database-project), [Number Guessing Game](https://www.freecodecamp.org/learn/relational-database/#build-a-number-guessing-game-project), [World Cup Database](https://www.freecodecamp.org/learn/relational-database/#build-a-world-cup-database-project)

#### 6. [Back End Development and APIs Certification](https://www.freecodecamp.org/learn/back-end-development-and-apis/)

- [Managing Packages with Npm](https://www.freecodecamp.org/learn/back-end-development-and-apis/#managing-packages-with-npm)
- [Basic Node and Express](https://www.freecodecamp.org/learn/back-end-development-and-apis/#basic-node-and-express)
- [MongoDB and Mongoose](https://www.freecodecamp.org/learn/back-end-development-and-apis/#mongodb-and-mongoose)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Timestamp Microservice](https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/timestamp-microservice), [Request Header Parser](https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/request-header-parser-microservice), [URL Shortener](https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/url-shortener-microservice), [Exercise Tracker](https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/exercise-tracker), [File Metadata Microservice](https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/file-metadata-microservice)

#### 7. [Quality Assurance Certification](https://www.freecodecamp.org/learn/quality-assurance/)

- [Quality Assurance and Testing with Chai](https://www.freecodecamp.org/learn/quality-assurance/#quality-assurance-and-testing-with-chai)
- [Advanced Node and Express](https://www.freecodecamp.org/learn/quality-assurance/#advanced-node-and-express)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Metric-Imperial Converter](https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/metric-imperial-converter), [Issue Tracker](https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/issue-tracker), [Personal Library](https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/personal-library), [Sudoku Solver](https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/sudoku-solver), [American British Translator](https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/american-british-translator)

#### 8. [Scientific Computing with Python Certification](https://www.freecodecamp.org/learn/scientific-computing-with-python/)

- [Learn String Manipulation by Building a Cipher](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-string-manipulation-by-building-a-cipher)
- [Learn How to Work with Numbers and Strings by Implementing the Luhn Algorithm](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm)
- [Learn Lambda Functions by Building an Expense Tracker](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-lambda-functions-by-building-an-expense-tracker)
- [Learn List Comprehension by Building a Case Converter Program](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-list-comprehension-by-building-a-case-converter-program)
- [Learn the Bisection Method by Finding the Square Root of a Number](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-the-bisection-method-by-finding-the-square-root-of-a-number)
- [Learn Regular Expressions by Building a Password Generator](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-regular-expressions-by-building-a-password-generator)
- [Learn Algorithm Design by Building a Shortest Path Algorithm](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-algorithm-design-by-building-a-shortest-path-algorithm)
- [Learn Recursion by Solving the Tower of Hanoi Puzzle](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-recursion-by-solving-the-tower-of-hanoi-puzzle)
- [Learn Data Structures by Building the Merge Sort Algorithm](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-data-structures-by-building-the-merge-sort-algorithm)
- [Learn Classes and Objects by Building a Sudoku Solver](https://www.freecodecamp.org/learn/scie

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>