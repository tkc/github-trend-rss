<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Sun, 27 Jul 2025 00:05:45 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[Infisical/infisical]]></title>
            <link>https://github.com/Infisical/infisical</link>
            <guid>https://github.com/Infisical/infisical</guid>
            <pubDate>Sun, 27 Jul 2025 00:05:45 GMT</pubDate>
            <description><![CDATA[Infisical is the open-source platform for secrets management, PKI, and SSH access.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Infisical/infisical">Infisical/infisical</a></h1>
            <p>Infisical is the open-source platform for secrets management, PKI, and SSH access.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 19,132</p>
            <p>Forks: 1,272</p>
            <p>Stars today: 41 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;
  &lt;img width=&quot;300&quot; src=&quot;/img/logoname-white.svg#gh-dark-mode-only&quot; alt=&quot;infisical&quot;&gt;
&lt;/h1&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;p align=&quot;center&quot;&gt;&lt;b&gt;The open-source secret management platform&lt;/b&gt;: Sync secrets/configs across your team/infrastructure and prevent secret leaks.&lt;/p&gt;
&lt;/p&gt;

&lt;h4 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://infisical.com/slack&quot;&gt;Slack&lt;/a&gt; |
  &lt;a href=&quot;https://infisical.com/&quot;&gt;Infisical Cloud&lt;/a&gt; |
  &lt;a href=&quot;https://infisical.com/docs/self-hosting/overview&quot;&gt;Self-Hosting&lt;/a&gt; |
  &lt;a href=&quot;https://infisical.com/docs/documentation/getting-started/introduction&quot;&gt;Docs&lt;/a&gt; |
  &lt;a href=&quot;https://www.infisical.com&quot;&gt;Website&lt;/a&gt; |
  &lt;a href=&quot;https://infisical.com/careers&quot;&gt;Hiring (Remote/SF)&lt;/a&gt;
&lt;/h4&gt;

&lt;h4 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/Infisical/infisical/blob/main/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg&quot; alt=&quot;Infisical is released under the MIT license.&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/infisical/infisical/blob/main/CONTRIBUTING.md&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/PRs-Welcome-brightgreen&quot; alt=&quot;PRs welcome!&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/Infisical/infisical/issues&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/commit-activity/m/infisical/infisical&quot; alt=&quot;git commit activity&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://cloudsmith.io/~infisical/repos/&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/Downloads-6.95M-orange&quot; alt=&quot;Cloudsmith downloads&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://infisical.com/slack&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/chat-on%20Slack-blueviolet&quot; alt=&quot;Slack community channel&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://twitter.com/infisical&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/twitter/follow/infisical?label=Follow&quot; alt=&quot;Infisical Twitter&quot; /&gt;
  &lt;/a&gt;
&lt;/h4&gt;

&lt;img src=&quot;/img/infisical_github_repo2.png&quot; width=&quot;100%&quot; alt=&quot;Dashboard&quot; /&gt;

## Introduction

**[Infisical](https://infisical.com)** is the open source secret management platform that teams use to centralize their application configuration and secrets like API keys and database credentials as well as manage their internal PKI.

We&#039;re on a mission to make security tooling more accessible to everyone, not just security teams, and that means redesigning the entire developer experience from ground up.

## Features

### Secrets Management:

- **[Dashboard](https://infisical.com/docs/documentation/platform/project)**: Manage secrets across projects and environments (e.g. development, production, etc.) through a user-friendly interface.
- **[Native Integrations](https://infisical.com/docs/integrations/overview)**: Sync secrets to platforms like [GitHub](https://infisical.com/docs/integrations/cicd/githubactions), [Vercel](https://infisical.com/docs/integrations/cloud/vercel), [AWS](https://infisical.com/docs/integrations/cloud/aws-secret-manager), and use tools like [Terraform](https://infisical.com/docs/integrations/frameworks/terraform), [Ansible](https://infisical.com/docs/integrations/platforms/ansible), and more.
- **[Secret versioning](https://infisical.com/docs/documentation/platform/secret-versioning)** and **[Point-in-Time Recovery](https://infisical.com/docs/documentation/platform/pit-recovery)**: Keep track of every secret and project state; roll back when needed.
- **[Secret Rotation](https://infisical.com/docs/documentation/platform/secret-rotation/overview)**: Rotate secrets at regular intervals for services like [PostgreSQL](https://infisical.com/docs/documentation/platform/secret-rotation/postgres-credentials), [MySQL](https://infisical.com/docs/documentation/platform/secret-rotation/mysql), [AWS IAM](https://infisical.com/docs/documentation/platform/secret-rotation/aws-iam), and more.
- **[Dynamic Secrets](https://infisical.com/docs/documentation/platform/dynamic-secrets/overview)**: Generate ephemeral secrets on-demand for services like [PostgreSQL](https://infisical.com/docs/documentation/platform/dynamic-secrets/postgresql), [MySQL](https://infisical.com/docs/documentation/platform/dynamic-secrets/mysql), [RabbitMQ](https://infisical.com/docs/documentation/platform/dynamic-secrets/rabbit-mq), and more.
- **[Secret Scanning and Leak Prevention](https://infisical.com/docs/cli/scanning-overview)**: Prevent secrets from leaking to git.
- **[Infisical Kubernetes Operator](https://infisical.com/docs/documentation/getting-started/kubernetes)**: Deliver secrets to your Kubernetes workloads and automatically reload deployments.
- **[Infisical Agent](https://infisical.com/docs/infisical-agent/overview)**: Inject secrets into applications without modifying any code logic.

### Infisical (Internal) PKI:

- **[Private Certificate Authority](https://infisical.com/docs/documentation/platform/pki/private-ca)**: Create CA hierarchies, configure [certificate templates](https://infisical.com/docs/documentation/platform/pki/certificates#guide-to-issuing-certificates) for policy enforcement, and start issuing X.509 certificates.
- **[Certificate Management](https://infisical.com/docs/documentation/platform/pki/certificates)**: Manage the certificate lifecycle from [issuance](https://infisical.com/docs/documentation/platform/pki/certificates#guide-to-issuing-certificates) to [revocation](https://infisical.com/docs/documentation/platform/pki/certificates#guide-to-revoking-certificates) with support for CRL.
- **[Alerting](https://infisical.com/docs/documentation/platform/pki/alerting)**: Configure alerting for expiring CA and end-entity certificates.
- **[Infisical PKI Issuer for Kubernetes](https://infisical.com/docs/documentation/platform/pki/pki-issuer)**: Deliver TLS certificates to your Kubernetes workloads with automatic renewal.
- **[Enrollment over Secure Transport](https://infisical.com/docs/documentation/platform/pki/est)**: Enroll and manage certificates via EST protocol.

### Infisical Key Management System (KMS):

- **[Cryptographic Keys](https://infisical.com/docs/documentation/platform/kms)**: Centrally manage keys across projects through a user-friendly interface or via the API.
- **[Encrypt and Decrypt Data](https://infisical.com/docs/documentation/platform/kms#guide-to-encrypting-data)**: Use symmetric keys to encrypt and decrypt data.

### Infisical SSH

- **[Signed SSH Certificates](https://infisical.com/docs/documentation/platform/ssh)**: Issue ephemeral SSH credentials for secure, short-lived, and centralized access to infrastructure.

### General Platform:

- **Authentication Methods**: Authenticate machine identities with Infisical using a cloud-native or platform agnostic authentication method ([Kubernetes Auth](https://infisical.com/docs/documentation/platform/identities/kubernetes-auth), [GCP Auth](https://infisical.com/docs/documentation/platform/identities/gcp-auth), [Azure Auth](https://infisical.com/docs/documentation/platform/identities/azure-auth), [AWS Auth](https://infisical.com/docs/documentation/platform/identities/aws-auth), [OIDC Auth](https://infisical.com/docs/documentation/platform/identities/oidc-auth/general), [Universal Auth](https://infisical.com/docs/documentation/platform/identities/universal-auth)).
- **[Access Controls](https://infisical.com/docs/documentation/platform/access-controls/overview)**: Define advanced authorization controls for users and machine identities with [RBAC](https://infisical.com/docs/documentation/platform/access-controls/role-based-access-controls), [additional privileges](https://infisical.com/docs/documentation/platform/access-controls/additional-privileges), [temporary access](https://infisical.com/docs/documentation/platform/access-controls/temporary-access), [access requests](https://infisical.com/docs/documentation/platform/access-controls/access-requests), [approval workflows](https://infisical.com/docs/documentation/platform/pr-workflows), and more.
- **[Audit logs](https://infisical.com/docs/documentation/platform/audit-logs)**: Track every action taken on the platform.
- **[Self-hosting](https://infisical.com/docs/self-hosting/overview)**: Deploy Infisical on-prem or cloud with ease; keep data on your own infrastructure.
- **[Infisical SDK](https://infisical.com/docs/sdks/overview)**: Interact with Infisical via client SDKs ([Node](https://infisical.com/docs/sdks/languages/node), [Python](https://github.com/Infisical/python-sdk-official?tab=readme-ov-file#infisical-python-sdk), [Go](https://infisical.com/docs/sdks/languages/go), [Ruby](https://infisical.com/docs/sdks/languages/ruby), [Java](https://infisical.com/docs/sdks/languages/java), [.NET](https://infisical.com/docs/sdks/languages/csharp))
- **[Infisical CLI](https://infisical.com/docs/cli/overview)**: Interact with Infisical via CLI; useful for injecting secrets into local development and CI/CD pipelines.
- **[Infisical API](https://infisical.com/docs/api-reference/overview/introduction)**: Interact with Infisical via API.

## Getting started

Check out the [Quickstart Guides](https://infisical.com/docs/getting-started/introduction)

| Use Infisical Cloud                                                                                                                                     | Deploy Infisical on premise                                                          |
| ------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------ |
| The fastest and most reliable way to &lt;br&gt; get started with Infisical is signing up &lt;br&gt; for free to [Infisical Cloud](https://app.infisical.com/login). | &lt;br&gt; View all [deployment options](https://infisical.com/docs/self-hosting/overview) |

### Run Infisical locally

To set up and run Infisical locally, make sure you have Git and Docker installed on your system. Then run the command for your system:

Linux/macOS:

```console
git clone https://github.com/Infisical/infisical &amp;&amp; cd &quot;$(basename $_ .git)&quot; &amp;&amp; cp .env.example .env &amp;&amp; docker compose -f docker-compose.prod.yml up
```

Windows Command Prompt:

```console
git clone https://github.com/Infisical/infisical &amp;&amp; cd infisical &amp;&amp; copy .env.example .env &amp;&amp; docker compose -f docker-compose.prod.yml up
```

Create an account at `http://localhost:80`

### Scan and prevent secret leaks

On top managing secrets with Infisical, you can also [scan for over 140+ secret types]() in your files, directories and git repositories.

To scan your full git history, run:

```
infisical scan --verbose
```

Install pre commit hook to scan each commit before you push to your repository

```
infisical scan install --pre-commit-hook
```

Learn about Infisical&#039;s code scanning feature [here](https://infisical.com/docs/cli/scanning-overview)

## Open-source vs. paid

This repo available under the [MIT expat license](https://github.com/Infisical/infisical/blob/main/LICENSE), with the exception of the `ee` directory which will contain premium enterprise features requiring a Infisical license.

If you are interested in managed Infisical Cloud of self-hosted Enterprise Offering, take a look at [our website](https://infisical.com/) or [book a meeting with us](https://infisical.cal.com/vlad/infisical-demo).

## Security

Please do not file GitHub issues or post on our public forum for security vulnerabilities, as they are public!

Infisical takes security issues very seriously. If you have any concerns about Infisical or believe you have uncovered a vulnerability, please get in touch via the e-mail address security@infisical.com. In the message, try to provide a description of the issue and ideally a way of reproducing it. The security team will get back to you as soon as possible.

Note that this security address should be used only for undisclosed vulnerabilities. Please report any security problems to us before disclosing it publicly.

## Contributing

Whether it&#039;s big or small, we love contributions. Check out our guide to see how to [get started](https://infisical.com/docs/contributing/getting-started).

Not sure where to get started? You can:

- Join our &lt;a href=&quot;https://infisical.com/slack&quot;&gt;Slack&lt;/a&gt;, and ask us any questions there.

## We are hiring!

If you&#039;re reading this, there is a strong chance you like the products we created.

You might also make a great addition to our team. We&#039;re growing fast and would love for you to [join us](https://infisical.com/careers).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[badboysm890/ClaraVerse]]></title>
            <link>https://github.com/badboysm890/ClaraVerse</link>
            <guid>https://github.com/badboysm890/ClaraVerse</guid>
            <pubDate>Sun, 27 Jul 2025 00:05:44 GMT</pubDate>
            <description><![CDATA[Clara — Privacy-first, fully local AI workspace with Ollama LLM chat, tool calling, agent builder, Stable Diffusion, and embedded n8n-style automation. No backend. No API keys. Just your stack, your machine.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/badboysm890/ClaraVerse">badboysm890/ClaraVerse</a></h1>
            <p>Clara — Privacy-first, fully local AI workspace with Ollama LLM chat, tool calling, agent builder, Stable Diffusion, and embedded n8n-style automation. No backend. No API keys. Just your stack, your machine.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 2,884</p>
            <p>Forks: 338</p>
            <p>Stars today: 34 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;/public/logo.png&quot; alt=&quot;ClaraVerse Logo&quot; width=&quot;120&quot; height=&quot;120&quot; /&gt;
  
  # 🚀 ClaraVerse
  
  ### **Your Fully Local AI Superstack — Privacy-First, Cloud-Free, Limitless**
  
  *ClaraVerse isn&#039;t just another chat UI. It&#039;s a complete AI ecosystem that runs 100% on your machine.*
  
  &lt;p&gt;
    &lt;img src=&quot;https://img.shields.io/github/v/release/badboysm890/ClaraVerse?style=for-the-badge&amp;color=FFD700&quot; alt=&quot;Latest Release&quot; /&gt;
    &lt;img src=&quot;https://img.shields.io/github/stars/badboysm890/ClaraVerse?style=for-the-badge&amp;color=gold&quot; alt=&quot;GitHub Stars&quot; /&gt;
    &lt;img src=&quot;https://img.shields.io/github/license/badboysm890/ClaraVerse?style=for-the-badge&amp;color=blue&quot; alt=&quot;License&quot; /&gt;
    &lt;img src=&quot;https://img.shields.io/github/downloads/badboysm890/ClaraVerse/total?style=for-the-badge&amp;color=green&quot; alt=&quot;Total Downloads&quot; /&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    &lt;a href=&quot;https://claraverse.space/&quot; target=&quot;_blank&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/badge/🌐_Try_Clara_Online-4A90E2?style=for-the-badge&amp;logo=web&amp;logoColor=white&quot; alt=&quot;Try Online&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://claraverse.space/&quot; target=&quot;_blank&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/badge/⬇️_Download_Desktop-2ECC71?style=for-the-badge&amp;logo=download&amp;logoColor=white&quot; alt=&quot;Download&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://discord.gg/j633fsrAne&quot; target=&quot;_blank&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/badge/💬_Discord-7289DA?style=for-the-badge&amp;logo=discord&amp;logoColor=white&quot; alt=&quot;Discord&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://www.reddit.com/r/claraverse/&quot; target=&quot;_blank&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/badge/🗨️_Reddit-FF4500?style=for-the-badge&amp;logo=reddit&amp;logoColor=white&quot; alt=&quot;Reddit&quot; /&gt;
    &lt;/a&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    &lt;strong&gt;💬 LLM Chat • 🧠 AI Agents • 🔄 Automation • 🎨 Image Gen • 🧩 App Builder • 🧱 Widgets&lt;/strong&gt;&lt;br/&gt;
    &lt;em&gt;Powered by open-source, privacy-first, zero-cloud technology&lt;/em&gt;
  &lt;/p&gt;

  💡 Heads up: ClaraVerse is in early development. Expect some rough edges while we build toward stability.

  
&lt;/div&gt;

---

## 🌟 **What Makes ClaraVerse Special?**

&gt; **Clara is what happens when you give Ollama, N8N, and OpenInterpreter a shared brain — and run them offline with a beautiful UI.**

ClaraVerse is a **complete AI development suite** that runs entirely on your machine. No cloud. No API keys. No data leaving your computer. Ever.

### 🎯 **Built for Everyone**
- **Developers**: Full-stack AI development environment
- **Creators**: Visual workflow automation and image generation
- **Privacy Advocates**: 100% local processing, no telemetry
- **Businesses**: Self-hosted AI infrastructure without vendor lock-in

---

## 🚀 **Feature Universe**

&lt;table&gt;
&lt;tr&gt;
&lt;td width=&quot;50%&quot;&gt;

### 🧠 **Clara AI Assistant**
- **Advanced Chat Interface** with vision model support
- **File Processing** - documents, images, code
- **Voice Integration** - TTS/STT capabilities
- **Context Awareness** - remembers your conversations
- **Multi-Provider Support** - Ollama, OpenAI, OpenRouter

&lt;/td&gt;
&lt;td width=&quot;50%&quot;&gt;

### 🧩 **LumaUI Code Builder**
- **WebContainer-Powered** development environment
- **Live Preview** with Monaco editor
- **AI Code Generation** and assistance
- **Project Templates** - React, Vue, Vanilla JS
- **Real-time Synchronization**

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;50%&quot;&gt;

### 🔄 **N8N Automation Hub**
- **1000+ Workflow Templates**
- **Drag-and-Drop** automation builder
- **Webhook Testing** and tool creation
- **Native Integration** - no external setup
- **Visual Workflow Designer**

&lt;/td&gt;
&lt;td width=&quot;50%&quot;&gt;

### 🎨 **ComfyUI Image Studio**
- **Local Stable Diffusion** - SDXL, SD 1.5, Flux
- **LoRA &amp; ControlNet** support
- **Model Management** with download progress
- **Prompt Enhancement** using local LLMs
- **Image Gallery** with metadata

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;50%&quot;&gt;

### 🧠 **Agent Builder Studio**
- **Visual Flow Programming** with React Flow
- **Custom Node Creation** - Auto &amp; Manual modes
- **Real-time Execution** with debugging
- **Import/Export** agent workflows
- **Template Library** with prebuilt agents

&lt;/td&gt;
&lt;td width=&quot;50%&quot;&gt;

### 🧱 **Dynamic Widget System**
- **Draggable Dashboard** with grid layout
- **Custom Widget Types** - Chat, Email, Flow, Webhook
- **Persistent Configurations**
- **Context Menu Management**
- **Real-time Updates**

&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

---

## 📸 **Visual Showcase**

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;🖼️ Click to see screenshots&lt;/strong&gt;&lt;/summary&gt;

### 💬 **AI Assistant Interface**
&lt;img src=&quot;/public/screenshots/assistant-screenshot.png&quot; width=&quot;100%&quot; alt=&quot;Clara AI Assistant&quot; /&gt;

### 🧩 **LumaUI Code Builder**
&lt;img src=&quot;/public/screenshots/app-builder-screenshot.png&quot; width=&quot;100%&quot; alt=&quot;LumaUI Code Builder&quot; /&gt;

### 🔄 **N8N Automation Studio**
&lt;img src=&quot;/public/screenshots/n8n_ScreenShot.png&quot; width=&quot;100%&quot; alt=&quot;N8N Automation&quot; /&gt;

### 🎨 **Image Generation Lab**
&lt;img src=&quot;/public/screenshots/image-gen-screenshot.png&quot; width=&quot;100%&quot; alt=&quot;Image Generation&quot; /&gt;

### 🧱 **Widget Dashboard**
&lt;img src=&quot;/public/screenshots/desktop_widgets.png&quot; width=&quot;100%&quot; alt=&quot;Widget Dashboard&quot; /&gt;

&lt;/details&gt;

---

## 🆚 **Clara vs The Competition**

| Feature | **ClaraVerse** | OpenWebUI | LibreChat | Ollama WebUI |
|---------|----------------|-----------|-----------|--------------|
| 💻 **100% Local Stack** | ✅ Complete | ✅ Yes | ✅ Yes | ✅ Basic |
| 🧩 **Visual App Builder** | ✅ Built-in | ❌ No | ❌ No | ❌ No |
| 🔄 **Native Automation** | ✅ N8N Integrated | ❌ No | ❌ No | ❌ No |
| 🧠 **Agent Builder** | ✅ Visual Designer | ❌ No | ❌ No | ❌ No |
| 🎨 **Image Generation** | ✅ ComfyUI | ✅ Basic DALL-E | ❌ No | ❌ No |
| 🧱 **Widget System** | ✅ Dynamic Dashboard | ❌ No | ✅ Basic | ❌ No |
| 🔧 **Code Execution** | ✅ OpenInterpreter | ❌ No | ❌ No | ❌ No |
| 📱 **Desktop App** | ✅ Electron | ❌ Web Only | ❌ Web Only | ❌ Web Only |

---

## 🗓️ **Release Timeline &amp; Roadmap**

&lt;div align=&quot;center&quot;&gt;

### **🎯 Current Release Status**

| **Component** | **Status** | **Description** |
|---------------|------------|-----------------|
| 🧠 **Clara AI Assistant** | ✅ **Released** | Advanced chat interface with multi-provider support |
| 🧩 **LumaUI Code Builder** | ✅ **Released** | WebContainer-powered development environment |
| 🧱 **Widget System** | ✅ **Released** | Dynamic dashboard with draggable widgets |
| 🔄 **N8N Integration** | ✅ **Released** | Native workflow automation |
| 🎨 **Image Generation** | ✅ **Released** | ComfyUI integration for local Stable Diffusion |
| 🧠 **Agent Builder** | ✅ **Released** | Visual flow programming for AI agents |
| 📱 **Desktop Apps** | ✅ **Released** | Windows, macOS, Linux support |
| 🐳 **Docker Deployment** | ✅ **Released** | One-command local deployment |

### **🚀 Coming Soon**

```mermaid
timeline
    title Upcoming Features
    
    section Next Release
        Enhanced UX : Improved onboarding
                    : Better mobile experience
                    : Advanced tutorials
    
    section Future Releases
        Mobile Apps : iOS/Android support
                    : Cross-platform sync
                    : Mobile-optimized UI
        
        Enterprise : Team collaboration
                   : Role-based access
                   : Advanced analytics
        
        Extensions : Plugin marketplace
                   : Custom integrations
                   : Third-party connectors
```

&lt;/div&gt;

---

## 🚀 **Quick Start**

### 💻 **Desktop App**

&lt;table&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;img src=&quot;https://cdn.jsdelivr.net/gh/devicons/devicon/icons/windows8/windows8-original.svg&quot; width=&quot;40&quot;/&gt;
&lt;br/&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;br/&gt;
&lt;a href=&quot;https://github.com/badboysm890/ClaraVerse/releases/latest&quot;&gt;
&lt;img src=&quot;https://img.shields.io/badge/Download-.exe-blue?style=for-the-badge&quot; /&gt;
&lt;/a&gt;
&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;img src=&quot;https://cdn.jsdelivr.net/gh/devicons/devicon/icons/apple/apple-original.svg&quot; width=&quot;40&quot;/&gt;
&lt;br/&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;br/&gt;
&lt;a href=&quot;https://github.com/badboysm890/ClaraVerse/releases/latest&quot;&gt;
&lt;img src=&quot;https://img.shields.io/badge/Download-.dmg-lightgrey?style=for-the-badge&quot; /&gt;
&lt;/a&gt;
&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;img src=&quot;https://cdn.jsdelivr.net/gh/devicons/devicon/icons/linux/linux-original.svg&quot; width=&quot;40&quot;/&gt;
&lt;br/&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;br/&gt;
&lt;a href=&quot;https://github.com/badboysm890/ClaraVerse/releases/latest&quot;&gt;
&lt;img src=&quot;https://img.shields.io/badge/Download-.AppImage-orange?style=for-the-badge&quot; /&gt;
&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

### 🛠️ **Development Setup**
```bash
# Install dependencies
npm install

# Development server
npm run dev           # Web version
npm run electron:dev  # Desktop version

# Build for production
npm run build              # Web build
npm run electron:build     # Desktop build
```

---

## 🔐 **Privacy &amp; Security**

&lt;div align=&quot;center&quot;&gt;

| 🛡️ **Privacy Feature** | **Status** | **Details** |
|------------------------|------------|-------------|
| **Local Processing** | ✅ 100% | All AI models run on your machine |
| **No Telemetry** | ✅ Zero | No data collection or phone home |
| **Open Source** | ✅ Full | Complete codebase transparency |
| **Self-Hosted** | ✅ Complete | Own your entire AI stack |
| **No Cloud APIs** | ✅ Optional | Cloud providers only if you choose |
| **Encrypted Storage** | ✅ Built-in | Local data encrypted by default |

&lt;/div&gt;

&gt; **Your Data, Your Rules**: ClaraVerse processes everything locally. Your conversations, files, and generated content never leave your machine unless you explicitly choose to use cloud providers.

---

## 🏗️ **Architecture Overview**

&lt;div align=&quot;center&quot;&gt;

```mermaid
graph TB
    subgraph &quot;🖥️ ClaraVerse Desktop App&quot;
        UI[React Frontend]
        API[API Layer]
        DB[(Local Database)]
    end
    
    subgraph &quot;🧠 AI Stack&quot;
        LLM[Clara Core&lt;br/&gt;Llama.cpp]
        VISION[Vision Models]
        TTS[Text-to-Speech]
        STT[Speech-to-Text]
    end
    
    subgraph &quot;🔧 Developer Tools&quot;
        LUMA[LumaUI&lt;br/&gt;Code Builder]
        AGENT[Agent Builder&lt;br/&gt;Studio]
        WEB[WebContainer&lt;br/&gt;Environment]
    end
    
    subgraph &quot;🎨 Creative Tools&quot;
        COMFY[ComfyUI&lt;br/&gt;Image Gen]
        N8N[N8N Workflows&lt;br/&gt;Automation]
        WIDGETS[Widget System&lt;br/&gt;Dashboard]
    end
    
    UI --&gt; API
    API --&gt; LLM
    API --&gt; LUMA
    API --&gt; AGENT
    API --&gt; COMFY
    API --&gt; N8N
    API --&gt; WIDGETS
    LLM --&gt; VISION
    LLM --&gt; TTS
    LLM --&gt; STT
    LUMA --&gt; WEB
    API --&gt; DB
```

&lt;/div&gt;

---

## 🌍 **Community &amp; Support**

&lt;div align=&quot;center&quot;&gt;

### **Join the ClaraVerse Community**

&lt;table&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;img src=&quot;https://cdn.jsdelivr.net/gh/devicons/devicon/icons/github/github-original.svg&quot; width=&quot;50&quot;/&gt;
&lt;br/&gt;&lt;strong&gt;GitHub&lt;/strong&gt;&lt;br/&gt;
&lt;a href=&quot;https://github.com/badboysm890/ClaraVerse&quot;&gt;Issues &amp; PRs&lt;/a&gt;
&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;img src=&quot;https://assets-global.website-files.com/6257adef93867e50d84d30e2/636e0a6ca814282eca7172c6_icon_clyde_white_RGB.svg&quot; width=&quot;50&quot;/&gt;
&lt;br/&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;br/&gt;
&lt;a href=&quot;https://discord.gg/j633fsrAne&quot;&gt;Live Chat&lt;/a&gt;
&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;img src=&quot;https://www.redditstatic.com/shreddit/assets/thinking-snoo.png&quot; width=&quot;50&quot;/&gt;
&lt;br/&gt;&lt;strong&gt;Reddit&lt;/strong&gt;&lt;br/&gt;
&lt;a href=&quot;https://www.reddit.com/r/claraverse/&quot;&gt;Community&lt;/a&gt;
&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/4/4f/Twitter-logo.svg&quot; width=&quot;50&quot;/&gt;
&lt;br/&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;br/&gt;
&lt;a href=&quot;https://twitter.com/intent/tweet?text=Clara%20is%20a%20fully%20offline%20AI%20superstack%20with%20LLMs%2C%20automations%2C%20agents%2C%20image%20generation%20%2B%20more%20%E2%80%94%20all%20open-source.%20Get%20it%20here%20%F0%9F%91%87&amp;url=https%3A%2F%2Fgithub.com%2Fbadboysm890%2FClaraVerse&quot;&gt;Share Clara&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

### **Get Help &amp; Share Ideas**
- 🐛 **Bug Reports**: [GitHub Issues](https://github.com/badboysm890/ClaraVerse/issues)
- 💡 **Feature Requests**: [GitHub Discussions](https://github.com/badboysm890/ClaraVerse/discussions)
- 📧 **Direct Contact**: [praveensm890@gmail.com](mailto:praveensm890@gmail.com)
- 🔥 **Show &amp; Tell**: Share your workflows, agents, and creations!

&lt;/div&gt;

---

## 🤝 **Contributing**

We love contributions! Here&#039;s how you can help make ClaraVerse even better:

### **🌟 Ways to Contribute**
- ⭐ **Star the repository** to show your support
- 🐛 **Report bugs** and suggest improvements
- 📝 **Improve documentation** and tutorials
- 🧩 **Create new templates** for agents and workflows
- 🎨 **Design new widgets** and UI components
- 🔧 **Add new features** and integrations

### **🛠️ Development Guidelines**
1. Fork the repository
2. Create a feature branch: `git checkout -b feature/amazing-feature`
3. Make your changes and test thoroughly
4. Commit with clear messages: `git commit -m &#039;Add amazing feature&#039;`
5. Push to your branch: `git push origin feature/amazing-feature`
6. Open a Pull Request with detailed description

---

## 📊 **GitHub Stats**

&lt;div align=&quot;center&quot;&gt;

[![Star History Chart](https://api.star-history.com/svg?repos=badboysm890/ClaraVerse&amp;type=Date)](https://star-history.com/#badboysm890/ClaraVerse&amp;Date)

&lt;p&gt;
  &lt;img src=&quot;https://img.shields.io/github/contributors/badboysm890/ClaraVerse?style=for-the-badge&amp;color=orange&quot; alt=&quot;Contributors&quot; /&gt;
  &lt;img src=&quot;https://img.shields.io/github/forks/badboysm890/ClaraVerse?style=for-the-badge&amp;color=blue&quot; alt=&quot;Forks&quot; /&gt;
  &lt;img src=&quot;https://img.shields.io/github/issues/badboysm890/ClaraVerse?style=for-the-badge&amp;color=red&quot; alt=&quot;Issues&quot; /&gt;
  &lt;img src=&quot;https://img.shields.io/github/issues-pr/badboysm890/ClaraVerse?style=for-the-badge&amp;color=green&quot; alt=&quot;Pull Requests&quot; /&gt;
&lt;/p&gt;

&lt;/div&gt;

---

## 📜 **License**

ClaraVerse is open-source software licensed under the [MIT License](LICENSE). This means you can:

- ✅ Use it commercially
- ✅ Modify and distribute
- ✅ Use it privately
- ✅ Contribute back to the community

---

## 🚀 **Ready to Launch Your AI Journey?**

&lt;div align=&quot;center&quot;&gt;

**ClaraVerse gives you the complete local AI stack — no vendor lock-in, no API hell, no GPU bills.**

&lt;p&gt;
  &lt;a href=&quot;https://claraverse.space/&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/🚀_Launch_Clara_Now-FF6B6B?style=for-the-badge&amp;logo=rocket&amp;logoColor=white&quot; alt=&quot;Launch Clara&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

### **Clara&#039;s your rocket. Light it up. 🚀**

&lt;sub&gt;Made with ❤️ by the ClaraVerse community&lt;/sub&gt;

&lt;/div&gt;

---

&lt;div align=&quot;center&quot;&gt;

*&quot;The future of AI is local, private, and in your hands.&quot;*

**⭐ Star us on GitHub • 🗨️ Join our Discord • 🎯 Follow our journey**

&lt;/div&gt; 
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[angular/angular]]></title>
            <link>https://github.com/angular/angular</link>
            <guid>https://github.com/angular/angular</guid>
            <pubDate>Sun, 27 Jul 2025 00:05:43 GMT</pubDate>
            <description><![CDATA[Deliver web apps with confidence 🚀]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/angular/angular">angular/angular</a></h1>
            <p>Deliver web apps with confidence 🚀</p>
            <p>Language: TypeScript</p>
            <p>Stars: 98,376</p>
            <p>Forks: 26,455</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;Angular - The modern web developer&#039;s platform&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;adev/src/assets/images/press-kit/angular_icon_gradient.gif&quot; alt=&quot;angular-logo&quot; width=&quot;120px&quot; height=&quot;120px&quot;/&gt;
  &lt;br&gt;
  &lt;em&gt;Angular is a development platform for building mobile and desktop web applications
    &lt;br&gt; using TypeScript/JavaScript and other languages.&lt;/em&gt;
  &lt;br&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://angular.dev/&quot;&gt;&lt;strong&gt;angular.dev&lt;/strong&gt;&lt;/a&gt;
  &lt;br&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;CONTRIBUTING.md&quot;&gt;Contributing Guidelines&lt;/a&gt;
  ·
  &lt;a href=&quot;https://github.com/angular/angular/issues&quot;&gt;Submit an Issue&lt;/a&gt;
  ·
  &lt;a href=&quot;https://blog.angular.dev/&quot;&gt;Blog&lt;/a&gt;
  &lt;br&gt;
  &lt;br&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/@angular/core&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/v/@angular/core.svg?logo=npm&amp;logoColor=fff&amp;label=NPM+package&amp;color=limegreen&quot; alt=&quot;Angular on npm&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;hr&gt;

## Documentation

Get started with Angular, learn the fundamentals and explore advanced topics on our documentation website.

- [Getting Started][quickstart]
- [Architecture][architecture]
- [Components and Templates][componentstemplates]
- [Forms][forms]
- [API][api]

### Advanced

- [Angular Elements][angularelements]
- [Server Side Rendering][ssr]
- [Schematics][schematics]
- [Lazy Loading][lazyloading]
- [Animations][animations]

### Local Development

To contribute to the Angular Docs, check out the [Angular.dev README](adev/README.md)

## Development Setup

### Prerequisites

- Install [Node.js] which includes [Node Package Manager][npm]

### Setting Up a Project

Install the Angular CLI globally:

```
npm install -g @angular/cli
```

Create workspace:

```
ng new [PROJECT NAME]
```

Run the application:

```
cd [PROJECT NAME]
ng serve
```

Angular is cross-platform, fast, scalable, has incredible tooling, and is loved by millions.

## Quickstart

[Get started in 5 minutes][quickstart].

## Ecosystem

&lt;p&gt;
  &lt;img src=&quot;/contributing-docs/images/angular-ecosystem-logos.png&quot; alt=&quot;angular ecosystem logos&quot; width=&quot;500px&quot; height=&quot;auto&quot;&gt;
&lt;/p&gt;

- [Angular Command Line (CLI)][cli]
- [Angular Material][angularmaterial]

## Changelog

[Learn about the latest improvements][changelog].

## Upgrading

Check out our [upgrade guide](https://angular.dev/update-guide/) to find out the best way to upgrade your project.

## Contributing

### Contributing Guidelines

Read through our [contributing guidelines][contributing] to learn about our submission process, coding rules, and more.

### Want to Help?

Want to report a bug, contribute some code, or improve the documentation? Excellent! Read up on our guidelines for [contributing][contributing] and then check out one of our issues labeled as &lt;kbd&gt;[help wanted](https://github.com/angular/angular/labels/help%20wanted)&lt;/kbd&gt; or &lt;kbd&gt;[good first issue](https://github.com/angular/angular/labels/good%20first%20issue)&lt;/kbd&gt;.

### Code of Conduct

Help us keep Angular open and inclusive. Please read and follow our [Code of Conduct][codeofconduct].

## Community

Join the conversation and help the community.

- [X (formerly Twitter)][X (formerly Twitter)]
- [Bluesky][bluesky]
- [Discord][discord]
- [YouTube][youtube]
- [StackOverflow][stackoverflow]
- Find a Local [Meetup][meetup]

[![Love Angular badge](https://img.shields.io/badge/angular-love-blue?logo=angular&amp;angular=love)](https://www.github.com/angular/angular)

**Love Angular? Give our repo a star :star: :arrow_up:.**

[contributing]: CONTRIBUTING.md
[quickstart]: https://angular.dev/tutorials/learn-angular
[changelog]: CHANGELOG.md
[ng]: https://angular.dev
[documentation]: https://angular.dev/overview
[angularmaterial]: https://material.angular.dev/
[cli]: https://angular.dev/tools/cli
[architecture]: https://angular.dev/essentials
[componentstemplates]: https://angular.dev/tutorials/learn-angular/1-components-in-angular
[forms]: https://angular.dev/tutorials/learn-angular/15-forms
[api]: https://angular.dev/api
[angularelements]: https://angular.dev/guide/elements
[ssr]: https://angular.dev/guide/ssr
[schematics]: https://angular.dev/tools/cli/schematics
[lazyloading]: https://angular.dev/guide/ngmodules/lazy-loading
[node.js]: https://nodejs.org/
[npm]: https://www.npmjs.com/get-npm
[codeofconduct]: CODE_OF_CONDUCT.md
[X (formerly Twitter)]: https://www.twitter.com/angular
[bluesky]: https://bsky.app/profile/angular.dev
[discord]: https://discord.gg/angular
[stackoverflow]: https://stackoverflow.com/questions/tagged/angular
[youtube]: https://youtube.com/angular
[meetup]: https://www.meetup.com/find/?keywords=angular
[animations]: https://angular.dev/guide/animations
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[zaidmukaddam/scira]]></title>
            <link>https://github.com/zaidmukaddam/scira</link>
            <guid>https://github.com/zaidmukaddam/scira</guid>
            <pubDate>Sun, 27 Jul 2025 00:05:42 GMT</pubDate>
            <description><![CDATA[Scira (Formerly MiniPerplx) is a minimalistic AI-powered search engine that helps you find information on the internet and cites it too. Powered by Vercel AI SDK! Search with models like xAI's Grok 3.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/zaidmukaddam/scira">zaidmukaddam/scira</a></h1>
            <p>Scira (Formerly MiniPerplx) is a minimalistic AI-powered search engine that helps you find information on the internet and cites it too. Powered by Vercel AI SDK! Search with models like xAI's Grok 3.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 10,075</p>
            <p>Forks: 1,238</p>
            <p>Stars today: 28 stars today</p>
            <h2>README</h2><pre># Scira

![Scira](/app/opengraph-image.png)

A minimalistic AI-powered search engine that helps you find information on the internet.

🔗 **[Try Scira at scira.ai](https://scira.ai)**

[![Ask DeepWiki](https://deepwiki.com/badge.svg)](https://deepwiki.com/zaidmukaddam/scira)

## Powered By

&lt;div align=&quot;center&quot;&gt;

| [Vercel AI SDK](https://sdk.vercel.ai/docs) | [Exa AI](https://exa.ai) |
|:---:|:---:|
| &lt;img src=&quot;/public/one.svg&quot; alt=&quot;Vercel AI SDK&quot; height=&quot;40&quot; /&gt; | &lt;img src=&quot;/public/exa.png&quot; alt=&quot;Exa AI&quot; height=&quot;40&quot; /&gt; |
| For AI model integration and streaming | For web search and content retrieval |

&lt;/div&gt;

## Special Thanks

&lt;div align=&quot;center&quot; markdown=&quot;1&quot;&gt;

[![Warp](https://github.com/user-attachments/assets/2bda420d-4211-4900-a37e-e3c7056d799c)](https://www.warp.dev/?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=scira)&lt;br&gt;

### **[Warp, the intelligent terminal](https://www.warp.dev/?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=scira)**&lt;br&gt;

[Available for MacOS, Linux, &amp; Windows](https://www.warp.dev/?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=scira)&lt;br&gt;
[Visit warp.dev to learn more](https://www.warp.dev/?utm_source=github&amp;utm_medium=referral&amp;utm_campaign=scira)

&lt;/div&gt;

## Features

### Core Search &amp; Information

- **AI-powered search**: Get answers to your questions using multiple AI models including xAI&#039;s Grok, Anthropic&#039;s Claude, Google&#039;s Gemini, and OpenAI&#039;s GPT models
- **Web search**: Search the web using Exa&#039;s API with support for multiple queries, search depths, and topics
- **URL content retrieval**: Extract and analyze content from any URL using Exa AI with live crawling capabilities
- **Reddit search**: Search Reddit content with time range filtering using Tavily API
- **X (Twitter) search**: Search X posts with date ranges and specific handle filtering using xAI Live Search
- **Extreme search**: Advanced multi-step search capability for complex queries

### Academic &amp; Research

- **Academic search**: Search for academic papers and research using Exa AI with abstracts and summaries
- **YouTube search**: Find YouTube videos with detailed information, captions, and timestamps powered by Exa AI

### Entertainment &amp; Media

- **Movie &amp; TV show search**: Get detailed information about movies and TV shows using TMDB API
- **Trending movies**: Discover trending movies with cast, ratings, and detailed information
- **Trending TV shows**: Find popular TV shows with comprehensive metadata

### Financial &amp; Data Analysis

- **Stock charts**: Generate interactive stock charts with news integration using yfinance and Tavily
- **Currency converter**: Convert between currencies with real-time exchange rates using yfinance
- **Code interpreter**: Write and execute Python code with chart generation capabilities using Daytona sandbox

### Location &amp; Travel

- **Weather information**: Get current weather and forecasts for any location using OpenWeather API
- **Maps &amp; geocoding**: Find places and get coordinates using Google Maps API
- **Nearby places search**: Discover nearby restaurants, attractions, and services with Google Places API
- **Flight tracking**: Track real-time flight information using Aviation Stack API

### Productivity &amp; Utilities

- **Text translation**: Translate text between languages using AI models
- **Date &amp; time**: Get current date and time in user&#039;s timezone with multiple format options
- **Memory management**: Add and search personal memories using Mem0 AI
- **MCP server search**: Search for Model Context Protocol servers using Smithery Registry

### Search Groups

- **Web**: Search across the entire internet powered by Tavily
- **Memory**: Your personal memory companion (requires authentication)
- **Analysis**: Code execution, stock charts, and currency conversion
- **Chat**: Direct conversation with AI models
- **X**: Search X (Twitter) posts
- **Reddit**: Search Reddit posts
- **Academic**: Search academic papers powered by Exa
- **YouTube**: Search YouTube videos powered by Exa
- **Extreme**: Deep research with multiple sources and analysis

## LLM Models Supported

- **xAI**: Grok 3, Grok 3 Mini, Grok 2 Vision
- **Google**: Gemini 2.5 Flash (Preview), Gemini 2.5 Pro (Preview)
- **Anthropic**: Claude 4 Sonnet
- **OpenAI**: GPT-4o, o4-mini, o3 (with reasoning capabilities)
- **Groq**: Qwen QwQ 32B, Qwen 3 32B, Meta&#039;s Llama 4 Maverick

## Built with

- [Next.js](https://nextjs.org/) - React framework
- [Tailwind CSS](https://tailwindcss.com/) - Styling
- [Vercel AI SDK](https://sdk.vercel.ai/docs) - AI model integration
- [Shadcn/UI](https://ui.shadcn.com/) - UI components
- [Exa.AI](https://exa.ai/) - Web search and content retrieval
- [Tavily](https://tavily.com/) - Search grounding for reddit search
- [OpenWeather](https://openweathermap.org/) - Weather data
- [Daytona](https://daytona.io/) - Code execution sandbox
- [Google Maps](https://developers.google.com/maps) - Location services
- [Aviation Stack](https://aviationstack.com/) - Flight tracking
- [TMDB](https://www.themoviedb.org/) - Movie and TV data
- [Mem0](https://mem0.ai/) - Memory management
- [Better Auth](https://github.com/better-auth/better-auth) - Authentication
- [Drizzle ORM](https://orm.drizzle.team/) - Database management

### Deploy your own

[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fzaidmukaddam%2Fscira&amp;env=XAI_API_KEY,OPENAI_API_KEY,ANTHROPIC_API_KEY,GROQ_API_KEY,GOOGLE_GENERATIVE_AI_API_KEY,DAYTONA_API_KEY,DATABASE_URL,BETTER_AUTH_SECRET,GITHUB_CLIENT_ID,GITHUB_CLIENT_SECRET,GOOGLE_CLIENT_ID,GOOGLE_CLIENT_SECRET,TWITTER_CLIENT_ID,TWITTER_CLIENT_SECRET,REDIS_URL,ELEVENLABS_API_KEY,TAVILY_API_KEY,EXA_API_KEY,TMDB_API_KEY,YT_ENDPOINT,FIRECRAWL_API_KEY,OPENWEATHER_API_KEY,GOOGLE_MAPS_API_KEY,MAPBOX_ACCESS_TOKEN,AVIATION_STACK_API_KEY,CRON_SECRET,BLOB_READ_WRITE_TOKEN,MEM0_API_KEY,MEM0_ORG_ID,MEM0_PROJECT_ID,SMITHERY_API_KEY,NEXT_PUBLIC_MAPBOX_TOKEN,NEXT_PUBLIC_POSTHOG_KEY,NEXT_PUBLIC_POSTHOG_HOST,NEXT_PUBLIC_SCIRA_PUBLIC_API_KEY,SCIRA_API_KEY&amp;envDescription=API%20keys%20and%20configuration%20required%20for%20Scira%20to%20function)

## Set Scira as your default search engine

1. **Open the Chrome browser settings**:

   - Click on the three vertical dots in the upper right corner of the browser.
   - Select &quot;Settings&quot; from the dropdown menu.

2. **Go to the search engine settings**:

   - In the left sidebar, click on &quot;Search engine.&quot;
   - Then select &quot;Manage search engines and site search.&quot;

3. **Add a new search engine**:

   - Click on &quot;Add&quot; next to &quot;Site search.&quot;

4. **Set the search engine name**:

   - Enter `Scira` in the &quot;Search engine&quot; field.

5. **Set the search engine URL**:

   - Enter `https://scira.ai?q=%s` in the &quot;URL with %s in place of query&quot; field.

6. **Set the search engine shortcut**:

   - Enter `sh` in the &quot;Shortcut&quot; field.

7. **Set Default**:
   - Click on the three dots next to the search engine you just added.
   - Select &quot;Make default&quot; from the dropdown menu.

After completing these steps, you should be able to use Scira as your default search engine in Chrome.

### Local development

#### Run via Docker

The application can be run using Docker in two ways:

##### Using Docker Compose (Recommended)

1. Make sure you have Docker and Docker Compose installed on your system
2. Create a `.env` file based on `.env.example` with your API keys
3. Run the following command in the project root:
   ```bash
   docker compose up
   ```
4. The application will be available at `http://localhost:3000`

##### Using Docker Directly

1. Create a `.env` file based on `.env.example` with your API keys
2. Build the Docker image:
   ```bash
   docker build -t scira.app .
   ```
3. Run the container:
   ```bash
   docker run --env-file .env -p 3000:3000 scira.app
   ```

The application uses a multi-stage build process to minimize the final image size and implements security best practices. The production image runs on Node.js LTS with Alpine Linux for a minimal footprint.

#### Run with Node.js

To run the application locally without Docker:

1. Sign up for accounts with the required AI providers:
   - OpenAI (required)
   - Anthropic (required)
   - Exa (required for web search feature)
2. Copy `.env.example` to `.env.local` and fill in your API keys
3. Install dependencies:
   ```bash
   pnpm install
   ```
4. Start the development server:
   ```bash
   pnpm dev
   ```
5. Open `http://localhost:3000` in your browser

# License

This project is licensed under the Apache 2.0 License - see the [LICENSE](LICENSE) file for details.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[continuedev/continue]]></title>
            <link>https://github.com/continuedev/continue</link>
            <guid>https://github.com/continuedev/continue</guid>
            <pubDate>Sun, 27 Jul 2025 00:05:41 GMT</pubDate>
            <description><![CDATA[⏩ Create, share, and use custom AI code assistants with our open-source IDE extensions and hub of rules, tools, and models]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/continuedev/continue">continuedev/continue</a></h1>
            <p>⏩ Create, share, and use custom AI code assistants with our open-source IDE extensions and hub of rules, tools, and models</p>
            <p>Language: TypeScript</p>
            <p>Stars: 27,892</p>
            <p>Forks: 3,212</p>
            <p>Stars today: 22 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

![Continue logo](media/readme.png)

&lt;/div&gt;

&lt;h1 align=&quot;center&quot;&gt;Continue&lt;/h1&gt;

&lt;div align=&quot;center&quot;&gt;

**[Continue](https://docs.continue.dev) enables developers to create, share, and use custom AI code assistants with our
open-source [VS Code](https://marketplace.visualstudio.com/items?itemName=Continue.continue)
and [JetBrains](https://plugins.jetbrains.com/plugin/22707-continue-extension) extensions
and [hub of models, rules, prompts, docs, and other building blocks](https://hub.continue.dev)**

&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;

&lt;a target=&quot;_blank&quot; href=&quot;https://opensource.org/licenses/Apache-2.0&quot; style=&quot;background:none&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/License-Apache_2.0-blue.svg&quot; style=&quot;height: 22px;&quot; /&gt;
&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://docs.continue.dev&quot; style=&quot;background:none&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/continue_docs-%23BE1B55&quot; style=&quot;height: 22px;&quot; /&gt;
&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://changelog.continue.dev&quot; style=&quot;background:none&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/changelog-%96EFF3&quot; style=&quot;height: 22px;&quot; /&gt;
&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://discord.gg/vapESyrFmJ&quot; style=&quot;background:none&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/discord-join-continue.svg?labelColor=191937&amp;color=6F6FF7&amp;logo=discord&quot; style=&quot;height: 22px;&quot; /&gt;
&lt;/a&gt;

&lt;p&gt;&lt;/p&gt;

## Agent

[Agent](https://continue.dev/docs/agent/how-to-use-it) enables you to make more substantial changes to your codebase

![agent](docs/images/agent.gif)

## Chat

[Chat](https://continue.dev/docs/chat/how-to-use-it) makes it easy to ask for help from an LLM without needing to leave
the IDE

![chat](docs/images/chat.gif)

## Autocomplete

[Autocomplete](https://continue.dev/docs/autocomplete/how-to-use-it) provides inline code suggestions as you type

![autocomplete](docs/images/autocomplete.gif)

## Edit

[Edit](https://continue.dev/docs/edit/how-to-use-it) is a convenient way to modify code without leaving your current
file

![edit](docs/images/edit.gif)

&lt;/div&gt;

## Getting Started

Learn about how to install and use Continue in the docs [here](https://continue.dev/docs/getting-started/install)

## Contributing

Read the [contributing guide](https://github.com/continuedev/continue/blob/main/CONTRIBUTING.md), and
join [#contribute on Discord](https://discord.gg/vapESyrFmJ).

## License

[Apache 2.0 © 2023-2024 Continue Dev, Inc.](./LICENSE)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[software-mansion/react-native-reanimated]]></title>
            <link>https://github.com/software-mansion/react-native-reanimated</link>
            <guid>https://github.com/software-mansion/react-native-reanimated</guid>
            <pubDate>Sun, 27 Jul 2025 00:05:40 GMT</pubDate>
            <description><![CDATA[React Native's Animated library reimplemented]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/software-mansion/react-native-reanimated">software-mansion/react-native-reanimated</a></h1>
            <p>React Native's Animated library reimplemented</p>
            <p>Language: TypeScript</p>
            <p>Stars: 9,980</p>
            <p>Forks: 1,389</p>
            <p>Stars today: 77 stars today</p>
            <h2>README</h2><pre>&lt;img src=&quot;https://user-images.githubusercontent.com/16062886/117443145-ff868480-af37-11eb-8680-648bccf0d0ce.png&quot; alt=&quot;React Native Reanimated by Software Mansion&quot; width=&quot;100%&quot;&gt;

### Create smooth animations with an excellent developer experience.

&gt; Reanimated 4 is here! Check out our [documentation page](https://docs.swmansion.com/react-native-reanimated/) for more information

### Nightly CI state

[![NPM Reanimated publish nightly](https://github.com/software-mansion/react-native-reanimated/actions/workflows/npm-reanimated-publish-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/npm-reanimated-publish-nightly.yml)
[![NPM Worklets publish [Nightly]](https://github.com/software-mansion/react-native-reanimated/actions/workflows/npm-worklets-publish-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/npm-worklets-publish-nightly.yml)
[![Lint clang-tidy [Nightly]](https://github.com/software-mansion/react-native-reanimated/actions/workflows/lint-clang-tidy-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/lint-clang-tidy-nightly.yml)
[![Reanimated compatibility check](https://github.com/software-mansion/react-native-reanimated/actions/workflows/reanimated-compatibility-check-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/reanimated-compatibility-check-nightly.yml)
[![Use frameworks Reanimated build check [Nightly]](https://github.com/software-mansion/react-native-reanimated/actions/workflows/use-frameworks-reanimated-build-check-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/use-frameworks-reanimated-build-check-nightly.yml)
[![React Native nightly Reanimated build check](https://github.com/software-mansion/react-native-reanimated/actions/workflows/react-native-nightly-reanimated-build-check-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/react-native-nightly-reanimated-build-check-nightly.yml)
[![Expo DevClient build check](https://github.com/software-mansion/react-native-reanimated/actions/workflows/expo-devclient-build-check-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/expo-devclient-build-check-nightly.yml)
[![Reanimated TypeScript compatibility test](https://github.com/software-mansion/react-native-reanimated/actions/workflows/reanimated-typescript-compatibility-test-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/reanimated-typescript-compatibility-test-nightly.yml)
[![Windows hosted app Reanimated build check](https://github.com/software-mansion/react-native-reanimated/actions/workflows/windows-hosted-app-reanimated-build-check-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/windows-hosted-app-reanimated-build-check-nightly.yml)
[![URL validation](https://github.com/software-mansion/react-native-reanimated/actions/workflows/url-validation-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/url-validation-nightly.yml)

## Installation

Check out the [installation](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/getting-started/#installation) section of our docs for the detailed installation instructions.

## Compatibility

React Native Reanimated 4.x supports only the [New React Native architecture](https://reactnative.dev/architecture/landing-page) and three latest React Native versions.

If your app still runs on the old architecture, please consider adopting the New Architecture or stay with latest 3.x release.

## Documentation

Check out our dedicated documentation page for info about this library, API reference and more: [https://docs.swmansion.com/react-native-reanimated/](https://docs.swmansion.com/react-native-reanimated/)

## Examples

The source code for the example (showcase) app is under the [`apps/common-app`](https://github.com/software-mansion/react-native-reanimated/blob/main/apps/common-app/) directory.
If you want to play with the API but don&#039;t feel like trying it on a real app, you can run the example project. Check [Example README](apps/fabric-example/README.md) for installation instructions.

## License

Reanimated library is licensed under [The MIT License](LICENSE).

## Credits

This project has been built and is maintained thanks to the support from [Shopify](https://shopify.com), [Expo.io](https://expo.io) and [Software Mansion](https://swmansion.com)

[![shopify](https://avatars1.githubusercontent.com/u/8085?v=3&amp;s=100 &#039;Shopify.com&#039;)](https://shopify.com)
[![expo](https://avatars2.githubusercontent.com/u/12504344?v=3&amp;s=100 &#039;Expo.io&#039;)](https://expo.io)
[![swm](https://logo.swmansion.com/logo?color=white&amp;variant=desktop&amp;width=150&amp;tag=react-native-reanimated-github &#039;Software Mansion&#039;)](https://swmansion.com)

## Community Discord

[Join the Software Mansion Community Discord](https://discord.swmansion.com) to chat about Reanimated or other Software Mansion libraries.

## Reanimated is created by Software Mansion

Since 2012 [Software Mansion](https://swmansion.com) is a software agency with experience in building web and mobile apps. We are Core React Native Contributors and experts in dealing with all kinds of React Native issues. We can help you build your next dream product – [Hire us](https://swmansion.com/contact/projects?utm_source=reanimated&amp;utm_medium=readme).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[streamich/react-use]]></title>
            <link>https://github.com/streamich/react-use</link>
            <guid>https://github.com/streamich/react-use</guid>
            <pubDate>Sun, 27 Jul 2025 00:05:39 GMT</pubDate>
            <description><![CDATA[React Hooks — 👍]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/streamich/react-use">streamich/react-use</a></h1>
            <p>React Hooks — 👍</p>
            <p>Language: TypeScript</p>
            <p>Stars: 43,326</p>
            <p>Forks: 3,250</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;h1&gt;
    &lt;br/&gt;
    &lt;br/&gt;
    👍
    &lt;br /&gt;
    react-use
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;br /&gt;
  &lt;/h1&gt;
  &lt;sup&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://www.npmjs.com/package/react-use&quot;&gt;
       &lt;img src=&quot;https://img.shields.io/npm/v/react-use.svg&quot; alt=&quot;npm package&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://circleci.com/gh/streamich/react-use&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/circleci/project/github/streamich/react-use/master.svg&quot; alt=&quot;CircleCI master&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://www.npmjs.com/package/react-use&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/npm/dm/react-use.svg&quot; alt=&quot;npm downloads&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;http://streamich.github.io/react-use&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/badge/demos-🚀-yellow.svg&quot; alt=&quot;demos&quot; /&gt;
    &lt;/a&gt;
    &lt;br /&gt;
    Collection of essential &lt;a href=&quot;https://reactjs.org/docs/hooks-intro.html&quot;&gt;React Hooks&lt;/a&gt;.&lt;/em&gt;
    &lt;em&gt;Port of&lt;/em&gt; &lt;a href=&quot;https://github.com/streamich/libreact&quot;&gt;&lt;code&gt;libreact&lt;/code&gt;&lt;/a&gt;.
    &lt;br /&gt;
    Translations: &lt;a href=&quot;https://github.com/zenghongtu/react-use-chinese/blob/master/README.md&quot;&gt;🇨🇳 汉语&lt;/a&gt;
  &lt;/sup&gt;
  &lt;br /&gt;
  &lt;br /&gt;
  &lt;br /&gt;
  &lt;br /&gt;
  &lt;pre&gt;npm i &lt;a href=&quot;https://www.npmjs.com/package/react-use&quot;&gt;react-use&lt;/a&gt;&lt;/pre&gt;
  &lt;br /&gt;
  &lt;br /&gt;
  &lt;br /&gt;
  &lt;br /&gt;
  &lt;br /&gt;
&lt;/div&gt;

- [**Sensors**](./docs/Sensors.md)
  - [`useBattery`](./docs/useBattery.md) &amp;mdash; tracks device battery state. [![][img-demo]](https://codesandbox.io/s/qlvn662zww)
  - [`useGeolocation`](./docs/useGeolocation.md) &amp;mdash; tracks geo location state of user&#039;s device. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/sensors-usegeolocation--demo)
  - [`useHover` and `useHoverDirty`](./docs/useHover.md) &amp;mdash; tracks mouse hover state of some element. [![][img-demo]](https://codesandbox.io/s/zpn583rvx)
  - [`useHash`](./docs/useHash.md) &amp;mdash; tracks location hash value. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/sensors-usehash--demo)
  - [`useIdle`](./docs/useIdle.md) &amp;mdash; tracks whether user is being inactive.
  - [`useIntersection`](./docs/useIntersection.md) &amp;mdash; tracks an HTML element&#039;s intersection. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/sensors-useintersection--demo)
  - [`useKey`](./docs/useKey.md), [`useKeyPress`](./docs/useKeyPress.md), [`useKeyboardJs`](./docs/useKeyboardJs.md), and [`useKeyPressEvent`](./docs/useKeyPressEvent.md) &amp;mdash; track keys. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/sensors-usekeypressevent--demo)
  - [`useLocation`](./docs/useLocation.md) and [`useSearchParam`](./docs/useSearchParam.md) &amp;mdash; tracks page navigation bar location state.
  - [`useLongPress`](./docs/useLongPress.md) &amp;mdash; tracks long press gesture of some element.
  - [`useMedia`](./docs/useMedia.md) &amp;mdash; tracks state of a CSS media query. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/sensors-usemedia--demo)
  - [`useMediaDevices`](./docs/useMediaDevices.md) &amp;mdash; tracks state of connected hardware devices.
  - [`useMotion`](./docs/useMotion.md) &amp;mdash; tracks state of device&#039;s motion sensor.
  - [`useMouse` and `useMouseHovered`](./docs/useMouse.md) &amp;mdash; tracks state of mouse position. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/sensors-usemouse--docs)
  - [`useMouseWheel`](./docs/useMouseWheel.md) &amp;mdash; tracks deltaY of scrolled mouse wheel. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/sensors-usemousewheel--docs)
  - [`useNetworkState`](./docs/useNetworkState.md) &amp;mdash; tracks the state of browser&#039;s network connection. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/sensors-usenetworkstate--demo)
  - [`useOrientation`](./docs/useOrientation.md) &amp;mdash; tracks state of device&#039;s screen orientation.
  - [`usePageLeave`](./docs/usePageLeave.md) &amp;mdash; triggers when mouse leaves page boundaries.
  - [`useScratch`](./docs/useScratch.md) &amp;mdash; tracks mouse click-and-scrub state.
  - [`useScroll`](./docs/useScroll.md) &amp;mdash; tracks an HTML element&#039;s scroll position. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/sensors-usescroll--docs)
  - [`useScrolling`](./docs/useScrolling.md) &amp;mdash; tracks whether HTML element is scrolling.
  - [`useStartTyping`](./docs/useStartTyping.md) &amp;mdash; detects when user starts typing.
  - [`useWindowScroll`](./docs/useWindowScroll.md) &amp;mdash; tracks `Window` scroll position. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/sensors-usewindowscroll--docs)
  - [`useWindowSize`](./docs/useWindowSize.md) &amp;mdash; tracks `Window` dimensions. [![][img-demo]](https://codesandbox.io/s/m7ln22668)
  - [`useMeasure`](./docs/useMeasure.md) and [`useSize`](./docs/useSize.md) &amp;mdash; tracks an HTML element&#039;s dimensions. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/sensors-usemeasure--demo)
  - [`createBreakpoint`](./docs/createBreakpoint.md) &amp;mdash; tracks `innerWidth`
  - [`useScrollbarWidth`](./docs/useScrollbarWidth.md) &amp;mdash; detects browser&#039;s native scrollbars width. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/sensors-usescrollbarwidth--demo)
  - [`usePinchZoom`](./docs/usePinchZoom.md) &amp;mdash; tracks pointer events to detect pinch zoom in and out status. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/sensors-usePinchZoom--demo)
    &lt;br/&gt;
    &lt;br/&gt;
- [**UI**](./docs/UI.md)
  - [`useAudio`](./docs/useAudio.md) &amp;mdash; plays audio and exposes its controls. [![][img-demo]](https://codesandbox.io/s/2o4lo6rqy)
  - [`useClickAway`](./docs/useClickAway.md) &amp;mdash; triggers callback when user clicks outside target area.
  - [`useCss`](./docs/useCss.md) &amp;mdash; dynamically adjusts CSS.
  - [`useDrop` and `useDropArea`](./docs/useDrop.md) &amp;mdash; tracks file, link and copy-paste drops.
  - [`useFullscreen`](./docs/useFullscreen.md) &amp;mdash; display an element or video full-screen. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/ui-usefullscreen--demo)
  - [`useSlider`](./docs/useSlider.md) &amp;mdash; provides slide behavior over any HTML element. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/ui-useslider--demo)
  - [`useSpeech`](./docs/useSpeech.md) &amp;mdash; synthesizes speech from a text string. [![][img-demo]](https://codesandbox.io/s/n090mqz69m)
  - [`useVibrate`](./docs/useVibrate.md) &amp;mdash; provide physical feedback using the [Vibration API](https://developer.mozilla.org/en-US/docs/Web/API/Vibration_API). [![][img-demo]](https://streamich.github.io/react-use/?path=/story/ui-usevibrate--demo)
  - [`useVideo`](./docs/useVideo.md) &amp;mdash; plays video, tracks its state, and exposes playback controls. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/ui-usevideo--demo)
    &lt;br/&gt;
    &lt;br/&gt;
- [**Animations**](./docs/Animations.md)
  - [`useRaf`](./docs/useRaf.md) &amp;mdash; re-renders component on each `requestAnimationFrame`.
  - [`useInterval`](./docs/useInterval.md) and [`useHarmonicIntervalFn`](./docs/useHarmonicIntervalFn.md) &amp;mdash; re-renders component on a set interval using `setInterval`.
  - [`useSpring`](./docs/useSpring.md) &amp;mdash; interpolates number over time according to spring dynamics.
  - [`useTimeout`](./docs/useTimeout.md) &amp;mdash; re-renders component after a timeout.
  - [`useTimeoutFn`](./docs/useTimeoutFn.md) &amp;mdash; calls given function after a timeout. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/animation-usetimeoutfn--demo)
  - [`useTween`](./docs/useTween.md) &amp;mdash; re-renders component, while tweening a number from 0 to 1. [![][img-demo]](https://codesandbox.io/s/52990wwzyl)
  - [`useUpdate`](./docs/useUpdate.md) &amp;mdash; returns a callback, which re-renders component when called.
    &lt;br/&gt;
    &lt;br/&gt;
- [**Side-effects**](./docs/Side-effects.md)
  - [`useAsync`](./docs/useAsync.md), [`useAsyncFn`](./docs/useAsyncFn.md), and [`useAsyncRetry`](./docs/useAsyncRetry.md) &amp;mdash; resolves an `async` function.
  - [`useBeforeUnload`](./docs/useBeforeUnload.md) &amp;mdash; shows browser alert when user try to reload or close the page.
  - [`useCookie`](./docs/useCookie.md) &amp;mdash; provides way to read, update and delete a cookie. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/side-effects-usecookie--demo)
  - [`useCopyToClipboard`](./docs/useCopyToClipboard.md) &amp;mdash; copies text to clipboard.
  - [`useDebounce`](./docs/useDebounce.md) &amp;mdash; debounces a function. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/side-effects-usedebounce--demo)
  - [`useError`](./docs/useError.md) &amp;mdash; error dispatcher. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/side-effects-useerror--demo)
  - [`useFavicon`](./docs/useFavicon.md) &amp;mdash; sets favicon of the page.
  - [`useLocalStorage`](./docs/useLocalStorage.md) &amp;mdash; manages a value in `localStorage`.
  - [`useLockBodyScroll`](./docs/useLockBodyScroll.md) &amp;mdash; lock scrolling of the body element.
  - [`useRafLoop`](./docs/useRafLoop.md) &amp;mdash; calls given function inside the RAF loop.
  - [`useSessionStorage`](./docs/useSessionStorage.md) &amp;mdash; manages a value in `sessionStorage`.
  - [`useThrottle` and `useThrottleFn`](./docs/useThrottle.md) &amp;mdash; throttles a function. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/side-effects-usethrottle--demo)
  - [`useTitle`](./docs/useTitle.md) &amp;mdash; sets title of the page.
  - [`usePermission`](./docs/usePermission.md) &amp;mdash; query permission status for browser APIs.
    &lt;br/&gt;
    &lt;br/&gt;
- [**Lifecycles**](./docs/Lifecycles.md)
  - [`useEffectOnce`](./docs/useEffectOnce.md) &amp;mdash; a modified [`useEffect`](https://reactjs.org/docs/hooks-reference.html#useeffect) hook that only runs once.
  - [`useEvent`](./docs/useEvent.md) &amp;mdash; subscribe to events.
  - [`useLifecycles`](./docs/useLifecycles.md) &amp;mdash; calls `mount` and `unmount` callbacks.
  - [`useMountedState`](./docs/useMountedState.md) and [`useUnmountPromise`](./docs/useUnmountPromise.md) &amp;mdash; track if component is mounted.
  - [`usePromise`](./docs/usePromise.md) &amp;mdash; resolves promise only while component is mounted.
  - [`useLogger`](./docs/useLogger.md) &amp;mdash; logs in console as component goes through life-cycles.
  - [`useMount`](./docs/useMount.md) &amp;mdash; calls `mount` callbacks.
  - [`useUnmount`](./docs/useUnmount.md) &amp;mdash; calls `unmount` callbacks.
  - [`useUpdateEffect`](./docs/useUpdateEffect.md) &amp;mdash; run an `effect` only on updates.
  - [`useIsomorphicLayoutEffect`](./docs/useIsomorphicLayoutEffect.md) &amp;mdash; `useLayoutEffect` that that works on server.
  - [`useDeepCompareEffect`](./docs/useDeepCompareEffect.md), [`useShallowCompareEffect`](./docs/useShallowCompareEffect.md), and [`useCustomCompareEffect`](./docs/useCustomCompareEffect.md)
    &lt;br/&gt;
    &lt;br/&gt;
- [**State**](./docs/State.md)
  - [`createMemo`](./docs/createMemo.md) &amp;mdash; factory of memoized hooks.
  - [`createReducer`](./docs/createReducer.md) &amp;mdash; factory of reducer hooks with custom middleware.
  - [`createReducerContext`](./docs/createReducerContext.md) and [`createStateContext`](./docs/createStateContext.md) &amp;mdash; factory of hooks for a sharing state between components.
  - [`useDefault`](./docs/useDefault.md) &amp;mdash; returns the default value when state is `null` or `undefined`.
  - [`useGetSet`](./docs/useGetSet.md) &amp;mdash; returns state getter `get()` instead of raw state.
  - [`useGetSetState`](./docs/useGetSetState.md) &amp;mdash; as if [`useGetSet`](./docs/useGetSet.md) and [`useSetState`](./docs/useSetState.md) had a baby.
  - [`useLatest`](./docs/useLatest.md) &amp;mdash; returns the latest state or props
  - [`usePrevious`](./docs/usePrevious.md) &amp;mdash; returns the previous state or props. [![][img-demo]](https://codesandbox.io/s/fervent-galileo-krgx6)
  - [`usePreviousDistinct`](./docs/usePreviousDistinct.md) &amp;mdash; like `usePrevious` but with a predicate to determine if `previous` should update.
  - [`useObservable`](./docs/useObservable.md) &amp;mdash; tracks latest value of an `Observable`.
  - [`useRafState`](./docs/useRafState.md) &amp;mdash; creates `setState` method which only updates after `requestAnimationFrame`. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/state-userafstate--demo)
  - [`useSetState`](./docs/useSetState.md) &amp;mdash; creates `setState` method which works like `this.setState`. [![][img-demo]](https://codesandbox.io/s/n75zqn1xp0)
  - [`useStateList`](./docs/useStateList.md) &amp;mdash; circularly iterates over an array. [![][img-demo]](https://codesandbox.io/s/bold-dewdney-pjzkd)
  - [`useToggle` and `useBoolean`](./docs/useToggle.md) &amp;mdash; tracks state of a boolean. [![][img-demo]](https://codesandbox.io/s/focused-sammet-brw2d)
  - [`useCounter` and `useNumber`](./docs/useCounter.md) &amp;mdash; tracks state of a number. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/state-usecounter--demo)
  - [`useList`](./docs/useList.md) ~and [`useUpsert`](./docs/useUpsert.md)~ &amp;mdash; tracks state of an array. [![][img-demo]](https://codesandbox.io/s/wonderful-mahavira-1sm0w)
  - [`useMap`](./docs/useMap.md) &amp;mdash; tracks state of an object. [![][img-demo]](https://codesandbox.io/s/quirky-dewdney-gi161)
  - [`useSet`](./docs/useSet.md) &amp;mdash; tracks state of a Set. [![][img-demo]](https://codesandbox.io/s/bold-shtern-6jlgw)
  - [`useQueue`](./docs/useQueue.md) &amp;mdash; implements simple queue.
  - [`useStateValidator`](./docs/useStateValidator.md) &amp;mdash; tracks state of an object. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/state-usestatevalidator--demo)
  - [`useStateWithHistory`](./docs/useStateWithHistory.md) &amp;mdash; stores previous state values and provides handles to travel through them. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/state-usestatewithhistory--demo)
  - [`useMultiStateValidator`](./docs/useMultiStateValidator.md) &amp;mdash; alike the `useStateValidator`, but tracks multiple states at a time. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/state-usemultistatevalidator--demo)
  - [`useMediatedState`](./docs/useMediatedState.md) &amp;mdash; like the regular `useState` but with mediation by custom function. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/state-usemediatedstate--demo)
  - [`useFirstMountState`](./docs/useFirstMountState.md) &amp;mdash; check if current render is first. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/state-usefirstmountstate--demo)
  - [`useRendersCount`](./docs/useRendersCount.md) &amp;mdash; count component renders. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/state-userenderscount--demo)
  - [`createGlobalState`](./docs/createGlobalState.md) &amp;mdash; cross component shared state.[![][img-demo]](https://streamich.github.io/react-use/?path=/story/state-createglobalstate--demo)
  - [`useMethods`](./docs/useMethods.md) &amp;mdash; neat alternative to `useReducer`. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/state-usemethods--demo)
    &lt;br/&gt;
    &lt;br/&gt;
- [**Miscellaneous**]()
  - [`useEnsuredForwardedRef`](./docs/useEnsuredForwardedRef.md) and [`ensuredForwardRef`](./docs/useEnsuredForwardedRef.md) &amp;mdash; use a React.forwardedRef safely. [![][img-demo]](https://streamich.github.io/react-use/?path=/story/state-useensuredforwardedref--demo)

&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;./docs/Usage.md&quot;&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/a&gt; &amp;mdash; how to import.
  &lt;br /&gt;
  &lt;a href=&quot;./LICENSE&quot;&gt;&lt;strong&gt;Unlicense&lt;/strong&gt;&lt;/a&gt; &amp;mdash; public domain.
  &lt;br /&gt;
  &lt;a href=&quot;https://opencollective.com/react-use/contribute&quot;&gt;&lt;strong&gt;Support&lt;/strong&gt;&lt;/a&gt; &amp;mdash; add yourself to backer list below.
&lt;/p&gt;

&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;

[img-demo]: https://img.shields.io/badge/demo-%20%20%20%F0%9F%9A%80-green.svg

&lt;div align=&quot;center&quot;&gt;
  &lt;h1&gt;Contributors&lt;/h1&gt;
&lt;/div&gt;

&lt;br /&gt;
&lt;br /&gt;

&lt;a href=&quot;https://github.com/streamich/react-use/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/react-use/contributors.svg?width=890&amp;button=false&quot; /&gt;&lt;/a&gt;

&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[sumithemmadi/truecallerjs]]></title>
            <link>https://github.com/sumithemmadi/truecallerjs</link>
            <guid>https://github.com/sumithemmadi/truecallerjs</guid>
            <pubDate>Sun, 27 Jul 2025 00:05:38 GMT</pubDate>
            <description><![CDATA[TruecallerJS: This is a library for retrieving phone number details using the Truecaller API.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/sumithemmadi/truecallerjs">sumithemmadi/truecallerjs</a></h1>
            <p>TruecallerJS: This is a library for retrieving phone number details using the Truecaller API.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 661</p>
            <p>Forks: 149</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre># TruecallerJS

&lt;!-- ![TruecallerJS logo](Screenshot_20230606-183149_Chrome.png) --&gt;

[![NPM version](https://img.shields.io/npm/v/truecallerjs.svg)](https://www.npmjs.com/package/truecallerjs)
[![GIT Stars](https://img.shields.io/github/stars/sumithemmadi/truecallerjs)](https://github.com/sumithemmadi/truecallerjs/)
[![Download](https://img.shields.io/npm/dt/truecallerjs.svg)](https://github.com/sumithemmadi/truecallerjs)
[![GitHub Sponsors](https://img.shields.io/github/sponsors/sumithemmadi)](https://github.com/sumithemmadi/truecallerjs)
[![LICENSE](https://img.shields.io/npm/l/truecallerjs.svg)](https://github.com/sumithemmadi/truecallerjs/blob/main/LICENSE)
[![Maintenance](https://img.shields.io/npms-io/maintenance-score/truecallerjs)](https://github.com/sumithemmadi/truecallerjs)
[![Issues](https://img.shields.io/github/issues/sumithemmadi/truecallerjs)](https://github.com/sumithemmadi/truecallerjs/issues)

Welcome to TruecallerJS! This is a library for retrieving phone number details using the Truecaller API. It provides a simple and convenient way to access information about phone numbers in your Node.js, JavaScript, and TypeScript projects.

## Description

TruecallerJS is built to simplify the process of fetching phone number details. With this library, you can easily integrate Truecaller functionality into your Node.js, JavaScript, and TypeScript applications. It abstracts the complexities of interacting with the Truecaller API and provides a streamlined interface for fetching and processing phone number information.

## Features

- **Phone Number Lookup**: Retrieve detailed information about a phone number, including the owner&#039;s name, location, and more.

- **Support for Node.js, JavaScript, and TypeScript**: TruecallerJS can be used in Node.js projects, as well as in JavaScript and TypeScript applications.
- **Simple and Lightweight**: TruecallerJS is designed to be easy to use and lightweight.

## Table of Contents

- [TruecallerJS](#truecallerjs)
  - [Description](#description)
  - [Features](#features)
  - [Table of Contents](#table-of-contents)
  - [Installation](#installation)
  - [Command Line Usage](#command-line-usage)
    - [Limitations](#limitations)
  - [Usage](#usage)
    - [Simple Example](#simple-example)
    - [Bulk Search on Multiple Phone Numbers](#bulk-search-on-multiple-phone-numbers)
  - [Disclaimer](#disclaimer)
  - [Contributing](#contributing)
  - [License](#license)
  - [Acknowledgments](#acknowledgments)

## Installation

You can install TruecallerJS using npm:

```bash
npm install truecallerjs
```

To use TruecallerJS from the command line

```bash
npm install -g truecallerjs
```

&gt; **Note**: If you are using a version of `truecallerjs` that is older than [1.1.2](https://github.com/sumithemmadi/truecallerjs/tree/truecallerjs-v1.1.2), we recommend referring to the [truecallerjs-v1.1.2](https://github.com/sumithemmadi/truecallerjs/tree/truecallerjs-v1.1.2) documentation for instructions.
&gt; **Note**: If you are using `truecallerjs` version from [1.1.3](https://github.com/sumithemmadi/truecallerjs/tree/truecallerjs-v1.1.2) to [1.1.5](https://github.com/sumithemmadi/truecallerjs/tree/truecallerjs-v1.1.5), please refer to the [truecallerjs-v1.1.5](https://github.com/sumithemmadi/truecallerjs/tree/truecallerjs-v1.1.5) documentation for instructions.

## Command Line Usage

To use TruecallerJS from the command line, you can run the `truecallerjs` command followed by the desired options and arguments.

Here are some examples of the available options:

- `truecallerjs login`: Use this command to log in to your Truecaller account.
- `truecallerjs -s [number]`: Use this command to search for a phone number and retrieve the caller name and related information.
- `truecallerjs --bulksearch, --bs` command is used to performing bulk number searches using the Truecaller service. It allows you to search for multiple phone numbers at once, making it convenient for processing large sets of phone numbers in a single request.

- `truecallerjs --bulksearch, --bs`: Use this command to perform a bulk number search.
- Additional options include `--raw`, `--name`, `--email`, `--json`, `--xml`, `--yaml`, `--text`, `--nc`, `--installationid`, `--verbose`, and `--help`.

For example:

```bash
~$ truecallerjs -s +9199123456789 --json
{
     ...
     &quot;name&quot;:&quot;Sumith Emmadi&quot;
     ...
}

~$ truecallerjs -s +9199123456789 --name
Name : Sumith Emmadi
```

Example for bulk search

```bash
truecallerjs --bulksearch &lt;phone_number_1&gt;,&lt;phone_number_2&gt;,&lt;phone_number_3&gt;,...,&lt;phone_number_n&gt;
```

Replace `&lt;phone_number_1&gt;, &lt;phone_number_2&gt;, ..., &lt;phone_number_n&gt;` with the actual phone numbers you want to search. Separate each phone number with a comma.

```bash
 ~$ truecallerjs --bs 9912345678,+14051234567,+919987654321
```

&gt; **Note** : If the country code is not specified for a phone number, it will default to using your own country code.

### Limitations

Please note the following limitations when using the `--bulksearch` option:

1. Maximum Number of Phone Numbers: The tool supports searching 30 or fewer phone numbers at once in a single request. If you exceed this limit, you may need to split your input into multiple requests.

2. Formatting: Ensure that the phone numbers are correctly formatted and do not contain any additional characters or spaces. The tool expects the phone numbers to be provided in a comma-separated format.

## Usage

To use the project, start by installing the `truecallerjs` package via npm:

```bash
npm install truecallerjs
```

### Simple Example

Here&#039;s a basic example of how to perform a normal search for a phone number:

```ts
import truecallerjs, { SearchData, Format } from &quot;truecallerjs&quot;;

async function performTruecallerSearch(): Promise&lt;void&gt; {
  const searchData: SearchData = {
    number: &quot;9912345678&quot;,
    countryCode: &quot;IN&quot;,
    installationId: &quot;a1k07--Vgdfyvv_rftf5uuudhuhnkljyvvtfftjuhbuijbhug&quot;,
  };

  try {
    const response: Format = await truecallerjs.search(searchData);
    console.log(response.json());

    // Additional response methods:
    // console.log(response.xml());
    // console.log(response.yaml());
    // console.log(response.text());

    // Example of available data from the response:
    console.log(response.getName()); // &quot;Sumith Emmadi&quot;
    console.log(response.getAlternateName()); // &quot;sumith&quot;
    console.log(response.getAddresses()); // {....}
    console.log(response.getEmailId()); // example@domain.com
    console.log(response.getCountryDetails()); // {...}
  } catch (error) {
    console.error(&quot;Error occurred:&quot;, error);
  }
}

performTruecallerSearch();
```

In the above example, the `truecallerjs` package is used to search for a phone number. The `search_data` object contains the necessary parameters, including the number, country code, and installation ID. The response from the `truecallerjs.search()` function provides various methods to access the returned data.

&gt; **Note** : Make sure to log in using the `truecallerjs login` command and obtain your installation ID using the `truecallerjs -i` command.

### Bulk Search on Multiple Phone Numbers

The `truecallerjs` package also supports bulk search on multiple phone numbers:

```ts
import truecallerjs, { BulkSearchData, Format } from &quot;truecallerjs&quot;;

async function performBulkTruecallerSearch(): Promise&lt;void&gt; {
  const countryCode: string = &quot;IN&quot;;
  const installationId: string = &quot;a1k07--Vgdfyvv_rftf5uuudhuhnkljyvvtfftjuhbuijbhug&quot;;
  const phoneNumbers: string = &quot;+9912345678,+14051234567,+919987654321&quot;;

  try {
    const response: BulkSearchData = await truecallerjs.bulkSearch(phoneNumbers, countryCode, installationId);
    console.log(response);
  } catch (error) {
    console.error(&quot;Error occurred:&quot;, error);
  }
}

performBulkTruecallerSearch();

```

In this example, the `truecallerjs.bulkSearch()` function is used to perform bulk searches on multiple phone numbers. The `phoneNumbers` parameter should contain the phone numbers separated by commas. The `countryCode` and `installationId` parameters are used to specify the default country code and installation ID, respectively.

&gt; **Note** : Make sure to log in using the `truecallerjs login` command and obtain your installation ID using the `truecallerjs -i` command.

For more details and additional functionalities, please refer to the [documentation](https://github.com/sumithemmadi/truecallerjs/tree/main/docs), including the process for logging in and obtaining the installation ID.

## Disclaimer

The `truecallerjs` tool is not an official Truecaller product. It is a custom script developed by [Sumith Emmadi](https://github.com/sumithemmadi), and its functionality is dependent on the Truecaller service. Please use this tool responsibly and in compliance with the terms of service of Truecaller.

For more information and support, please contact   [Sumith Emmadi](https://github.com/sumithemmadi) at  &lt;sumithemmadi244@gmail.com&gt; .

## Contributing

Contributions to the `truecallerjs` are not only welcome but highly encouraged!

1. Fork this repository `git clone https://github.com/sumithemmadi/truecallerjs.git`
2. Create a new branch for your contribution.
3. Add your content in the appropriate folder or create a new file.
4. Commit your changes and push them to your forked repository.
5. Open a pull request, explaining the nature of your contribution.

Please note that all contributions should align with the spirit of the repository and be suitable for all audiences. Offensive or inappropriate content will not be accepted.

## License

TruecallerJS is open source and licensed under the MIT License. See the LICENSE file for more information.

## 💝 Sponsor and support me

If you find my project helpful or inspiring, consider supporting me through GitHub Sponsors. Your sponsorship helps me dedicate more time and effort to open source development and creating impactful projects.

[:heart: Sponsor me on github](https://github.com/sponsors/sumithemmadi?o=sd&amp;sc=t)

&lt;a href=&#039;https://ko-fi.com/W7W4OZNLF&#039; target=&#039;_blank&#039;&gt;&lt;img height=&#039;40&#039; style=&#039;border:0px;height:40px;&#039; src=&#039;https://storage.ko-fi.com/cdn/kofi3.png?v=3&#039; border=&#039;0&#039; alt=&#039;Buy Me a Coffee at ko-fi.com&#039; /&gt;&lt;/a&gt;

&lt;a href=&quot;https://www.buymeacoffee.com/sumithemmadi&quot;&gt; &lt;img align=&quot;left&quot; src=&quot;https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png&quot; height=&quot;40&quot; width=&quot;180&quot; alt=&quot;sumithemmadi&quot; /&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;

### 💖 Sponsors

[![Sponsors](https://sumithemmadi.github.io/sponsors.svg)](https://github.com/sponsors/sumithemmadi/)

- I want to extend my sincere gratitude to all my sponsors for their generous support.

## Acknowledgments

Thank you for choosing TruecallerJS! I hope it helps you retrieve phone number details efficiently.

Repository:
[https://github.com/sumithemmadi/truecallerjs.git](https://github.com/sumithemmadi/truecallerjs.git)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[exa-labs/exa-mcp-server]]></title>
            <link>https://github.com/exa-labs/exa-mcp-server</link>
            <guid>https://github.com/exa-labs/exa-mcp-server</guid>
            <pubDate>Sun, 27 Jul 2025 00:05:37 GMT</pubDate>
            <description><![CDATA[Exa is a Web Search API | This is Exa MCP (Model Context Protocol)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/exa-labs/exa-mcp-server">exa-labs/exa-mcp-server</a></h1>
            <p>Exa is a Web Search API | This is Exa MCP (Model Context Protocol)</p>
            <p>Language: TypeScript</p>
            <p>Stars: 1,941</p>
            <p>Forks: 171</p>
            <p>Stars today: 19 stars today</p>
            <h2>README</h2><pre># Exa MCP Server 🔍
[![npm version](https://badge.fury.io/js/exa-mcp-server.svg)](https://www.npmjs.com/package/exa-mcp-server)
[![smithery badge](https://smithery.ai/badge/exa)](https://smithery.ai/server/exa)

A Model Context Protocol (MCP) server lets AI assistants like Claude use the Exa AI Search API for web searches. This setup allows AI models to get real-time web information in a safe and controlled way.

## Remote Exa MCP 🌐

Connect directly to Exa&#039;s hosted MCP server (instead of running it locally).

### Remote Exa MCP URL

```
https://mcp.exa.ai/mcp?exaApiKey=your-exa-api-key
```

Replace `your-api-key-here` with your actual Exa API key from [dashboard.exa.ai/api-keys](https://dashboard.exa.ai/api-keys).

### Claude Desktop Configuration for Remote MCP

Add this to your Claude Desktop configuration file:

```json
{
  &quot;mcpServers&quot;: {
    &quot;exa&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;-y&quot;,
        &quot;mcp-remote&quot;,
        &quot;https://mcp.exa.ai/mcp?exaApiKey=your-exa-api-key&quot;
      ]
    }
  }
}
```

### NPM Installation

```bash
npm install -g exa-mcp-server
```

### Using Claude Code

```bash
claude mcp add exa -e EXA_API_KEY=YOUR_API_KEY -- npx -y exa-mcp-server
```

### Using Smithery

To install the Exa MCP server for Claude Desktop automatically via [Smithery](https://smithery.ai/server/exa):

```bash
npx -y @smithery/cli install exa --client claude
```

## Configuration ⚙️

### 1. Configure Claude Desktop to recognize the Exa MCP server

You can find claude_desktop_config.json inside the settings of Claude Desktop app:

Open the Claude Desktop app and enable Developer Mode from the top-left menu bar. 

Once enabled, open Settings (also from the top-left menu bar) and navigate to the Developer Option, where you&#039;ll find the Edit Config button. Clicking it will open the claude_desktop_config.json file, allowing you to make the necessary edits. 

OR (if you want to open claude_desktop_config.json from terminal)

#### For macOS:

1. Open your Claude Desktop configuration:

```bash
code ~/Library/Application\ Support/Claude/claude_desktop_config.json
```

#### For Windows:

1. Open your Claude Desktop configuration:

```powershell
code %APPDATA%\Claude\claude_desktop_config.json
```

### 2. Add the Exa server configuration:

```json
{
  &quot;mcpServers&quot;: {
    &quot;exa&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;-y&quot;, &quot;exa-mcp-server&quot;],
      &quot;env&quot;: {
        &quot;EXA_API_KEY&quot;: &quot;your-api-key-here&quot;
      }
    }
  }
}
```

Replace `your-api-key-here` with your actual Exa API key from [dashboard.exa.ai/api-keys](https://dashboard.exa.ai/api-keys).

### 3. Available Tools &amp; Tool Selection

The Exa MCP server includes the following tools, which can be enabled by adding the `--tools`:

- **web_search_exa**: Performs real-time web searches with optimized results and content extraction.
- **research_paper_search**: Specialized search focused on academic papers and research content.
- **company_research**: Comprehensive company research tool that crawls company websites to gather detailed information about businesses.
- **crawling**: Extracts content from specific URLs, useful for reading articles, PDFs, or any web page when you have the exact URL.
- **competitor_finder**: Identifies competitors of a company by searching for businesses offering similar products or services.
- **linkedin_search**: Search LinkedIn for companies and people using Exa AI. Simply include company names, person names, or specific LinkedIn URLs in your query.
- **wikipedia_search_exa**: Search and retrieve information from Wikipedia articles on specific topics, giving you accurate, structured knowledge from the world&#039;s largest encyclopedia.
- **github_search**: Search GitHub repositories using Exa AI - performs real-time searches on GitHub.com to find relevant repositories, issues, and GitHub accounts.
- **deep_researcher_start**: Start a smart AI researcher for complex questions. The AI will search the web, read many sources, and think deeply about your question to create a detailed research report.
- **deep_researcher_check**: Check if your research is ready and get the results. Use this after starting a research task to see if it&#039;s done and get your comprehensive report.

You can choose which tools to enable by adding the `--tools` parameter to your Claude Desktop configuration:

#### Specify which tools to enable:

```json
{
  &quot;mcpServers&quot;: {
    &quot;exa&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;-y&quot;,
        &quot;exa-mcp-server&quot;,
        &quot;--tools=web_search_exa,research_paper_search,company_research,crawling,competitor_finder,linkedin_search,wikipedia_search_exa,github_search,deep_researcher_start,deep_researcher_check&quot;
      ],
      &quot;env&quot;: {
        &quot;EXA_API_KEY&quot;: &quot;your-api-key-here&quot;
      }
    }
  }
}
```

For enabling multiple tools, use a comma-separated list:

```json
{
  &quot;mcpServers&quot;: {
    &quot;exa&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;-y&quot;,
        &quot;exa-mcp-server&quot;,
        &quot;--tools=web_search_exa,research_paper_search,company_research,crawling,competitor_finder,linkedin_search,wikipedia_search_exa,github_search,deep_researcher_start,deep_researcher_check&quot;
      ],
      &quot;env&quot;: {
        &quot;EXA_API_KEY&quot;: &quot;your-api-key-here&quot;
      }
    }
  }
}
```

If you don&#039;t specify any tools, all tools enabled by default will be used.

### 4. Restart Claude Desktop

For the changes to take effect:

1. Completely quit Claude Desktop (not just close the window)
2. Start Claude Desktop again
3. Look for the icon to verify the Exa server is connected

## Using via NPX

If you prefer to run the server directly, you can use npx:

```bash
# Run with all tools enabled by default
npx exa-mcp-server

# Enable specific tools only
npx exa-mcp-server --tools=web_search_exa

# Enable multiple tools
npx exa-mcp-server --tools=web_search_exa,research_paper_search

# List all available tools
npx exa-mcp-server --list-tools
```

## Troubleshooting 🔧

### Common Issues

1. **Server Not Found**
   * Verify the npm link is correctly set up
   * Check Claude Desktop configuration syntax (json file)

2. **API Key Issues**
   * Confirm your EXA_API_KEY is valid
   * Check the EXA_API_KEY is correctly set in the Claude Desktop config
   * Verify no spaces or quotes around the API key

3. **Connection Issues**
   * Restart Claude Desktop completely
   * Check Claude Desktop logs:

&lt;br&gt;

---

Built with ❤️ by team Exa
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[langfuse/langfuse]]></title>
            <link>https://github.com/langfuse/langfuse</link>
            <guid>https://github.com/langfuse/langfuse</guid>
            <pubDate>Sun, 27 Jul 2025 00:05:36 GMT</pubDate>
            <description><![CDATA[🪢 Open source LLM engineering platform: LLM Observability, metrics, evals, prompt management, playground, datasets. Integrates with OpenTelemetry, Langchain, OpenAI SDK, LiteLLM, and more. 🍊YC W23]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/langfuse/langfuse">langfuse/langfuse</a></h1>
            <p>🪢 Open source LLM engineering platform: LLM Observability, metrics, evals, prompt management, playground, datasets. Integrates with OpenTelemetry, Langchain, OpenAI SDK, LiteLLM, and more. 🍊YC W23</p>
            <p>Language: TypeScript</p>
            <p>Stars: 14,175</p>
            <p>Forks: 1,307</p>
            <p>Stars today: 26 stars today</p>
            <h2>README</h2><pre>![Langfuse GitHub Banner](https://langfuse.com/images/docs/github-readme/github-banner.png)

&lt;div align=&quot;center&quot;&gt;
   &lt;div&gt;
      &lt;h3&gt;
        &lt;a href=&quot;https://langfuse.com/blog/2025-06-04-open-sourcing-langfuse-product&quot;&gt;
            &lt;strong&gt;Langfuse Is Doubling Down On Open Source&lt;/strong&gt;
         &lt;/a&gt; &lt;br&gt; &lt;br&gt;
         &lt;a href=&quot;https://cloud.langfuse.com&quot;&gt;
            &lt;strong&gt;Langfuse Cloud&lt;/strong&gt;
         &lt;/a&gt; · 
         &lt;a href=&quot;https://langfuse.com/docs/deployment/self-host&quot;&gt;
            &lt;strong&gt;Self Host&lt;/strong&gt;
         &lt;/a&gt; · 
         &lt;a href=&quot;https://langfuse.com/demo&quot;&gt;
            &lt;strong&gt;Demo&lt;/strong&gt;
         &lt;/a&gt;
      &lt;/h3&gt;
   &lt;/div&gt;

   &lt;div&gt;
      &lt;a href=&quot;https://langfuse.com/docs&quot;&gt;&lt;strong&gt;Docs&lt;/strong&gt;&lt;/a&gt; ·
      &lt;a href=&quot;https://langfuse.com/issues&quot;&gt;&lt;strong&gt;Report Bug&lt;/strong&gt;&lt;/a&gt; ·
      &lt;a href=&quot;https://langfuse.com/ideas&quot;&gt;&lt;strong&gt;Feature Request&lt;/strong&gt;&lt;/a&gt; ·
      &lt;a href=&quot;https://langfuse.com/changelog&quot;&gt;&lt;strong&gt;Changelog&lt;/strong&gt;&lt;/a&gt; ·
      &lt;a href=&quot;https://langfuse.com/roadmap&quot;&gt;&lt;strong&gt;Roadmap&lt;/strong&gt;&lt;/a&gt; ·
   &lt;/div&gt;
   &lt;br/&gt;
   &lt;span&gt;Langfuse uses &lt;a href=&quot;https://github.com/orgs/langfuse/discussions&quot;&gt;&lt;strong&gt;GitHub Discussions&lt;/strong&gt;&lt;/a&gt;  for Support and Feature Requests.&lt;/span&gt;
   &lt;br/&gt;
   &lt;span&gt;&lt;b&gt;We&#039;re hiring.&lt;/b&gt; &lt;a href=&quot;https://langfuse.com/careers&quot;&gt;&lt;strong&gt;Join us&lt;/strong&gt;&lt;/a&gt; in product engineering and technical go-to-market roles.&lt;/span&gt;
   &lt;br/&gt;
   &lt;br/&gt;
   &lt;div&gt;
   &lt;/div&gt;
&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
   &lt;a href=&quot;https://github.com/langfuse/langfuse/blob/main/LICENSE&quot;&gt;
   &lt;img src=&quot;https://img.shields.io/badge/License-MIT-E11311.svg&quot; alt=&quot;MIT License&quot;&gt;
   &lt;/a&gt;
   &lt;a href=&quot;https://www.ycombinator.com/companies/langfuse&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Y%20Combinator-W23-orange&quot; alt=&quot;Y Combinator W23&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://hub.docker.com/u/langfuse&quot; target=&quot;_blank&quot;&gt;
   &lt;img alt=&quot;Docker Pulls&quot; src=&quot;https://img.shields.io/docker/pulls/langfuse/langfuse?labelColor=%20%23FDB062&amp;logo=Docker&amp;labelColor=%20%23528bff&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://pypi.python.org/pypi/langfuse&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/dm/langfuse?logo=python&amp;logoColor=white&amp;label=pypi%20langfuse&amp;color=blue&quot; alt=&quot;langfuse Python package on PyPi&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://www.npmjs.com/package/langfuse&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/langfuse?logo=npm&amp;logoColor=white&amp;label=npm%20langfuse&amp;color=blue&quot; alt=&quot;langfuse npm package&quot;&gt;&lt;/a&gt;
   &lt;br/&gt;
   &lt;a href=&quot;https://discord.com/invite/7NXusRtqYU&quot; target=&quot;_blank&quot;&gt;
   &lt;img src=&quot;https://img.shields.io/discord/1111061815649124414?logo=discord&amp;labelColor=%20%235462eb&amp;logoColor=%20%23f5f5f5&amp;color=%20%235462eb&quot;
      alt=&quot;chat on Discord&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=langfuse&quot; target=&quot;_blank&quot;&gt;
   &lt;img src=&quot;https://img.shields.io/twitter/follow/langfuse?logo=X&amp;color=%20%23f5f5f5&quot;
      alt=&quot;follow on X(Twitter)&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://www.linkedin.com/company/langfuse/&quot; target=&quot;_blank&quot;&gt;
   &lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/LinkedIn-0A66C2?logo=linkedin-white&amp;logoColor=fff&quot;
      alt=&quot;follow on LinkedIn&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://github.com/langfuse/langfuse/graphs/commit-activity&quot; target=&quot;_blank&quot;&gt;
   &lt;img alt=&quot;Commits last month&quot; src=&quot;https://img.shields.io/github/commit-activity/m/langfuse/langfuse?labelColor=%20%2332b583&amp;color=%20%2312b76a&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://github.com/langfuse/langfuse/&quot; target=&quot;_blank&quot;&gt;
   &lt;img alt=&quot;Issues closed&quot; src=&quot;https://img.shields.io/github/issues-search?query=repo%3Alangfuse%2Flangfuse%20is%3Aclosed&amp;label=issues%20closed&amp;labelColor=%20%237d89b0&amp;color=%20%235d6b98&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://github.com/langfuse/langfuse/discussions/&quot; target=&quot;_blank&quot;&gt;
   &lt;img alt=&quot;Discussion posts&quot; src=&quot;https://img.shields.io/github/discussions/langfuse/langfuse?labelColor=%20%239b8afb&amp;color=%20%237a5af8&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;./README.md&quot;&gt;&lt;img alt=&quot;README in English&quot; src=&quot;https://img.shields.io/badge/English-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README.cn.md&quot;&gt;&lt;img alt=&quot;简体中文版自述文件&quot; src=&quot;https://img.shields.io/badge/简体中文-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README.ja.md&quot;&gt;&lt;img alt=&quot;日本語のREADME&quot; src=&quot;https://img.shields.io/badge/日本語-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README.kr.md&quot;&gt;&lt;img alt=&quot;README in Korean&quot; src=&quot;https://img.shields.io/badge/한국어-d9d9d9&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

Langfuse is an **open source LLM engineering** platform. It helps teams collaboratively
**develop, monitor, evaluate,** and **debug** AI applications. Langfuse can be **self-hosted in minutes** and is **battle-tested**.

[![Langfuse Overview Video](https://github.com/user-attachments/assets/3926b288-ff61-4b95-8aa1-45d041c70866)](https://langfuse.com/watch-demo)

## ✨ Core Features

![Langfuse Overview](https://langfuse.com/images/docs/github-readme/github-feature-overview.png)

- [LLM Application Observability](https://langfuse.com/docs/tracing): Instrument your app and start ingesting traces to Langfuse, thereby tracking LLM calls and other relevant logic in your app such as retrieval, embedding, or agent actions. Inspect and debug complex logs and user sessions. Try the interactive [demo](https://langfuse.com/docs/demo) to see this in action.

- [Prompt Management](https://langfuse.com/docs/prompts/get-started) helps you centrally manage, version control, and collaboratively iterate on your prompts. Thanks to strong caching on server and client side, you can iterate on prompts without adding latency to your application.

- [Evaluations](https://langfuse.com/docs/scores/overview) are key to the LLM application development workflow, and Langfuse adapts to your needs. It supports LLM-as-a-judge, user feedback collection, manual labeling, and custom evaluation pipelines via APIs/SDKs.

- [Datasets](https://langfuse.com/docs/datasets/overview) enable test sets and benchmarks for evaluating your LLM application. They support continuous improvement, pre-deployment testing, structured experiments, flexible evaluation, and seamless integration with frameworks like LangChain and LlamaIndex.

- [LLM Playground](https://langfuse.com/docs/playground) is a tool for testing and iterating on your prompts and model configurations, shortening the feedback loop and accelerating development. When you see a bad result in tracing, you can directly jump to the playground to iterate on it.

- [Comprehensive API](https://langfuse.com/docs/api): Langfuse is frequently used to power bespoke LLMOps workflows while using the building blocks provided by Langfuse via the API. OpenAPI spec, Postman collection, and typed SDKs for Python, JS/TS are available.

## 📦 Deploy Langfuse

![Langfuse Deployment Options](https://langfuse.com/images/docs/github-readme/github-deployment-options.png)

### Langfuse Cloud

Managed deployment by the Langfuse team, generous free-tier, no credit card required.

&lt;div align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://cloud.langfuse.com&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Static Badge&quot; src=&quot;https://img.shields.io/badge/»%20Sign%20up%20for%20Langfuse%20Cloud-8A2BE2?&amp;color=orange&quot;&gt;
    &lt;/a&gt;
&lt;/div&gt;

### Self-Host Langfuse

Run Langfuse on your own infrastructure:

- [Local (docker compose)](https://langfuse.com/self-hosting/local): Run Langfuse on your own machine in 5 minutes using Docker Compose.

  ```bash
  # Get a copy of the latest Langfuse repository
  git clone https://github.com/langfuse/langfuse.git
  cd langfuse

  # Run the langfuse docker compose
  docker compose up
  ```
- [VM](https://langfuse.com/self-hosting/docker-compose): Run Langfuse on a single Virtual Machine using Docker Compose.
- [Kubernetes (Helm)](https://langfuse.com/self-hosting/kubernetes-helm): Run Langfuse on a Kubernetes cluster using Helm. This is the preferred production deployment.
- Terraform Templates: [AWS](https://langfuse.com/self-hosting/aws), [Azure](https://langfuse.com/self-hosting/azure), [GCP](https://langfuse.com/self-hosting/gcp)

See [self-hosting documentation](https://langfuse.com/self-hosting) to learn more about architecture and configuration options.

## 🔌 Integrations

![Langfuse Integrations](https://langfuse.com/images/docs/github-readme/github-integrations.png)

### Main Integrations:

| Integration                                                                  | Supports                   | Description                                                                                                                                      |
| ---------------------------------------------------------------------------- | -------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------ |
| [SDK](https://langfuse.com/docs/sdk)                                         | Python, JS/TS              | Manual instrumentation using the SDKs for full flexibility.                                                                                      |
| [OpenAI](https://langfuse.com/docs/integrations/openai)                      | Python, JS/TS              | Automated instrumentation using drop-in replacement of OpenAI SDK.                                                                               |
| [Langchain](https://langfuse.com/docs/integrations/langchain)                | Python, JS/TS              | Automated instrumentation by passing callback handler to Langchain application.                                                                  |
| [LlamaIndex](https://langfuse.com/docs/integrations/llama-index/get-started) | Python                     | Automated instrumentation via LlamaIndex callback system.                                                                                        |
| [Haystack](https://langfuse.com/docs/integrations/haystack)                  | Python                     | Automated instrumentation via Haystack content tracing system.                                                                                   |
| [LiteLLM](https://langfuse.com/docs/integrations/litellm)                    | Python, JS/TS (proxy only) | Use any LLM as a drop in replacement for GPT. Use Azure, OpenAI, Cohere, Anthropic, Ollama, VLLM, Sagemaker, HuggingFace, Replicate (100+ LLMs). |
| [Vercel AI SDK](https://langfuse.com/docs/integrations/vercel-ai-sdk)        | JS/TS                      | TypeScript toolkit designed to help developers build AI-powered applications with React, Next.js, Vue, Svelte, Node.js.                          |
| [API](https://langfuse.com/docs/api)                                         |                            | Directly call the public API. OpenAPI spec available.                                                                                            |

### Packages integrated with Langfuse:

| Name                                                                    | Type               | Description                                                                                                             |
| ----------------------------------------------------------------------- | ------------------ | ----------------------------------------------------------------------------------------------------------------------- |
| [Instructor](https://langfuse.com/docs/integrations/instructor)         | Library            | Library to get structured LLM outputs (JSON, Pydantic)                                                                  |
| [DSPy](https://langfuse.com/docs/integrations/dspy)                     | Library            | Framework that systematically optimizes language model prompts and weights                                              |
| [Mirascope](https://langfuse.com/docs/integrations/mirascope)           | Library            | Python toolkit for building LLM applications.                                                                           |
| [Ollama](https://langfuse.com/docs/integrations/ollama)                 | Model (local)      | Easily run open source LLMs on your own machine.                                                                        |
| [Amazon Bedrock](https://langfuse.com/docs/integrations/amazon-bedrock) | Model              | Run foundation and fine-tuned models on AWS.                                                                            |
| [AutoGen](https://langfuse.com/docs/integrations/autogen)               | Agent Framework    | Open source LLM platform for building distributed agents.                                                               |
| [Flowise](https://langfuse.com/docs/integrations/flowise)               | Chat/Agent&amp;nbsp;UI | JS/TS no-code builder for customized LLM flows.                                                                         |
| [Langflow](https://langfuse.com/docs/integrations/langflow)             | Chat/Agent&amp;nbsp;UI | Python-based UI for LangChain, designed with react-flow to provide an effortless way to experiment and prototype flows. |
| [Dify](https://langfuse.com/docs/integrations/dify)                     | Chat/Agent&amp;nbsp;UI | Open source LLM app development platform with no-code builder.                                                          |
| [OpenWebUI](https://langfuse.com/docs/integrations/openwebui)           | Chat/Agent&amp;nbsp;UI | Self-hosted LLM Chat web ui supporting various LLM runners including self-hosted and local models.                      |
| [Promptfoo](https://langfuse.com/docs/integrations/promptfoo)           | Tool               | Open source LLM testing platform.                                                                                       |
| [LobeChat](https://langfuse.com/docs/integrations/lobechat)             | Chat/Agent&amp;nbsp;UI | Open source chatbot platform.                                                                                           |
| [Vapi](https://langfuse.com/docs/integrations/vapi)                     | Platform           | Open source voice AI platform.                                                                                          |
| [Inferable](https://langfuse.com/docs/integrations/other/inferable)     | Agents             | Open source LLM platform for building distributed agents.                                                               |
| [Gradio](https://langfuse.com/docs/integrations/other/gradio)           | Chat/Agent&amp;nbsp;UI | Open source Python library to build web interfaces like Chat UI.                                                        |
| [Goose](https://langfuse.com/docs/integrations/goose)                   | Agents             | Open source LLM platform for building distributed agents.                                                               |
| [smolagents](https://langfuse.com/docs/integrations/smolagents)         | Agents             | Open source AI agents framework.                                                                                        |
| [CrewAI](https://langfuse.com/docs/integrations/crewai)                 | Agents             | Multi agent framework for agent collaboration and tool use.                                                             |

## 🚀 Quickstart

Instrument your app and start ingesting traces to Langfuse, thereby tracking LLM calls and other relevant logic in your app such as retrieval, embedding, or agent actions. Inspect and debug complex logs and user sessions.

### 1️⃣ Create new project

1.  [Create Langfuse account](https://cloud.langfuse.com/auth/sign-up) or [self-host](https://langfuse.com/self-hosting)
2.  Create a new project
3.  Create new API credentials in the project settings

### 2️⃣ Log your first LLM call

The [`@observe()` decorator](https://langfuse.com/docs/sdk/python/decorators) makes it easy to trace any Python LLM application. In this quickstart we also use the Langfuse [OpenAI integration](https://langfuse.com/docs/integrations/openai) to automatically capture all model parameters.

&gt; [!TIP]
&gt; Not using OpenAI? Visit [our documentation](https://langfuse.com/docs/get-started#log-your-first-llm-call-to-langfuse) to learn how to log other models and frameworks.

```bash
pip install langfuse openai
```

```bash filename=&quot;.env&quot;
LANGFUSE_SECRET_KEY=&quot;sk-lf-...&quot;
LANGFUSE_PUBLIC_KEY=&quot;pk-lf-...&quot;
LANGFUSE_HOST=&quot;https://cloud.langfuse.com&quot; # 🇪🇺 EU region
# LANGFUSE_HOST=&quot;https://us.cloud.langfuse.com&quot; # 🇺🇸 US region
```

```python /@observe()/ /from langfuse.openai import openai/ filename=&quot;main.py&quot;
from langfuse import observe
from langfuse.openai import openai # OpenAI integration

@observe()
def story():
    return openai.chat.completions.create(
        model=&quot;gpt-4o&quot;,
        messages=[{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;What is Langfuse?&quot;}],
    ).choices[0].message.content

@observe()
def main():
    return story()

main()
```

### 3️⃣ See traces in Langfuse

See your language model calls and other application logic in Langfuse.

![Example trace in Langfuse](https://langfuse.com/images/docs/github-readme/github-example-trace.png)

_[Public example trace in Langfuse](https://cloud.langfuse.com/project/cloramnkj0002jz088vzn1ja4/traces/2cec01e3-3dc2-472f-afcf-3b968cf0c1f4?timestamp=2025-02-10T14%3A27%3A30.275Z&amp;observation=cb5ff844-07ef-41e6-b8e2-6c64344bc13b)_

&gt; [!TIP]
&gt;
&gt; [Learn more](https://langfuse.com/docs/tracing) about tracing in Langfuse or play with the [interactive demo](https://langfuse.com/docs/demo).

## ⭐️ Star Us

![star-langfuse-on-github](https://github.com/user-attachments/assets/79a1d816-d229-4526-aecc-097d4a19f1ad)

## 💭 Support

Finding an answer to your question:

- Our [documentation](https://langfuse.com/docs) is the best place to start looking for answers. It is comprehensive, and we invest significant time into maintaining it. You can also suggest edits to the docs via GitHub.
- [Langfuse FAQs](https://langfuse.com/faq) where the most common questions are answered.
- Use &quot;[Ask AI](https://langfuse.com/docs/ask-ai)&quot; to get instant answers to your questions.

Support Channels:

- **Ask any question in our [public Q&amp;A](https://github.com/orgs/langfuse/discussions/categories/support) on GitHub Discussions.** Please include as much detail as possible (e.g. code snippets, screenshots, background information) to help us understand your question.
- [Request a feature](https://github.com/orgs/langfuse/discussions/categories/ideas) on GitHub Discussions.
- [Report a Bug](https://github.com/langfuse/langfuse/issues) on GitHub Issues.
- For time-sensitive queries, ping us via the in-app chat widget.

## 🤝 Contributing

Your contributions are welcome!

- Vote on [Ideas](https://github.com/orgs/langfuse/discussions/categories/ideas) in GitHub Discussions.
- Raise and comment on [Issues](https://github.com/langfuse/langfuse/issues).
- Open a PR - see [CONTRIBUTING.md](CONTRIBUTING.md) for details on how to setup a development environment.

## 🥇 License

This repository is MIT licensed, except for the `ee` folders. See [LICENSE](LICENSE) and [docs](https://langfuse.com/docs/open-source) for more details.

## ⭐️ Star History

&lt;a href=&quot;https://star-history.com/#langfuse/langfuse&amp;Date&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=langfuse/langfuse&amp;type=Date&amp;theme=dark&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=langfuse/langfuse&amp;type=Date&quot; /&gt;
   &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=langfuse/langfuse&amp;type=Date&quot; style=&quot;border-radius: 15px;&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;

## ❤️ Open Source Projects Using Langfuse

Top open-source Python projects that use Langfuse, ranked by stars ([Source](https://github.com/langfuse/langfuse-docs/blob/main/components-mdx/dependents)):

| Repository                                                                                                                                                                                                                                                          | Stars |
| :------------------------------

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[eastlondoner/vibe-tools]]></title>
            <link>https://github.com/eastlondoner/vibe-tools</link>
            <guid>https://github.com/eastlondoner/vibe-tools</guid>
            <pubDate>Sun, 27 Jul 2025 00:05:35 GMT</pubDate>
            <description><![CDATA[Give Cursor Agent an AI Team and Advanced Skills]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/eastlondoner/vibe-tools">eastlondoner/vibe-tools</a></h1>
            <p>Give Cursor Agent an AI Team and Advanced Skills</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,362</p>
            <p>Forks: 219</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;img height=&quot;72&quot; src=&quot;https://github.com/user-attachments/assets/45eff178-242f-4d84-863e-247b080cc6f5&quot; /&gt;
&lt;/div&gt;

&lt;div align=center&gt;&lt;h1&gt;Give AI Agents an AI team and advanced skills&lt;/h1&gt;&lt;/div&gt;


| Summary | Prompt it |
|---------|-----------|
| Essential information to understand what vibe-tools is and how to get started using it | [![](https://b.lmpify.com/getting_started)](https://lmpify.com?q=https%3A%2F%2Fuuithub.com%2Feastlondoner%2Fcursor-tools%2Ftree%2Fmain%3FpathPatterns%3DREADME.md%26pathPatterns%3DCONFIGURATION.md%26pathPatterns%3Dpackage.json%26pathPatterns%3Dvibe-tools.config.json%26pathPatterns%3D.cursor-tools.env.example%26pathPatterns%3Dsrc%252Fvibe-rules.ts%0A%0AI&#039;m%20new%20to%20vibe-tools.%20Can%20you%20explain%20what%20it%20is%2C%20how%20to%20install%20it%2C%20and%20how%20to%20get%20started%20with%20basic%20commands%3F) |
| Overview of available commands and their basic functionality | [![](https://b.lmpify.com/command_overview)](https://lmpify.com?q=https%3A%2F%2Fuuithub.com%2Feastlondoner%2Fcursor-tools%2Ftree%2Fmain%3FpathPatterns%3Dsrc%252Fcommands%252Findex.ts%26pathPatterns%3Dsrc%252Ftypes.ts%26pathPatterns%3Dsrc%252Fvibe-rules.ts%26pathPatterns%3DREADME.md%0A%0AWhat%20commands%20are%20available%20in%20vibe-tools%20and%20what%20does%20each%20one%20do%3F) |
| Browser automation commands and capabilities | [![](https://b.lmpify.com/browser_commands)](https://lmpify.com?q=https%3A%2F%2Fuuithub.com%2Feastlondoner%2Fcursor-tools%2Ftree%2Fmain%3FpathPatterns%3Dsrc%252Fcommands%252Fbrowser%252F**%252F*.ts%26pathPatterns%3Dtests%252Fcommands%252Fbrowser%252F*.html%26excludePathPatterns%3Dsrc%252Fcommands%252Fbrowser%252Fstagehand%252FstagehandScript.ts%0A%0AHow%20do%20I%20use%20the%20browser%20commands%20in%20vibe-tools%3F%20What%20browser%20automation%20capabilities%20are%20available%3F) |
| LLM provider integration and configuration | [![](https://b.lmpify.com/llm_integration)](https://lmpify.com?q=https%3A%2F%2Fuuithub.com%2Feastlondoner%2Fcursor-tools%2Ftree%2Fmain%3FpathPatterns%3Dsrc%252Futils%252Ftool-enabled-llm%252F**%26pathPatterns%3Dsrc%252Fproviders%252F**%26pathPatterns%3Dsrc%252Fllms%252F**%26pathPatterns%3D.cursor-tools.env.example%0A%0AHow%20do%20I%20configure%20different%20LLM%20providers%20with%20vibe-tools%3F%20What%20providers%20are%20supported%3F) |
| Model Context Protocol (MCP) commands and tools | [![](https://b.lmpify.com/mcp_commands)](https://lmpify.com?q=https%3A%2F%2Fuuithub.com%2Feastlondoner%2Fcursor-tools%2Ftree%2Fmain%3FpathPatterns%3Dsrc%252Fcommands%252Fmcp%252F**%252F*.ts%0A%0AHow%20do%20I%20use%20the%20MCP%20commands%20in%20vibe-tools%3F%20What%20is%20MCP%20and%20how%20does%20it%20work%3F) |
| Testing framework and capabilities | [![](https://b.lmpify.com/testing)](https://lmpify.com?q=https%3A%2F%2Fuuithub.com%2Feastlondoner%2Fcursor-tools%2Ftree%2Fmain%3FpathPatterns%3Dsrc%252Fcommands%252Ftest%252F**%252F*.ts%26pathPatterns%3Dtests%252Ffeature-behaviors%252F**%252F*.md%26pathPatterns%3DTESTING.md%0A%0AHow%20do%20I%20use%20the%20testing%20capabilities%20in%20vibe-tools%3F%20How%20can%20I%20create%20and%20run%20tests%3F) |
| Configuration options and customization | [![](https://b.lmpify.com/configuration)](https://lmpify.com?q=https%3A%2F%2Fuuithub.com%2Feastlondoner%2Fcursor-tools%2Ftree%2Fmain%3FpathPatterns%3Dsrc%252Fconfig.ts%26pathPatterns%3Dvibe-tools.config.json%26pathPatterns%3D.cursor-tools.env.example%26pathPatterns%3DCONFIGURATION.md%26pathPatterns%3Dsrc%252Fvibe-rules.ts%0A%0AHow%20do%20I%20configure%20vibe-tools%3F%20What%20configuration%20options%20are%20available%3F) |
| Telemetry implementation and infrastructure | [![](https://b.lmpify.com/telemetry)](https://lmpify.com?q=https%3A%2F%2Fuuithub.com%2Feastlondoner%2Fcursor-tools%2Ftree%2Fmain%3FpathPatterns%3Dsrc%252Ftelemetry%252F**%26pathPatterns%3Dinfra%252F**%26pathPatterns%3DTELEMETRY.md%0A%0AHow%20does%20telemetry%20work%20in%20vibe-tools%3F%20What%20data%20is%20collected%20and%20how%20is%20it%20used%3F) |
| Example usage | [![](https://b.lmpify.com/examples)](https://lmpify.com?q=https%3A%2F%2Fuuithub.com%2Feastlondoner%2Fcursor-tools%2Ftree%2Fmain%3FpathPatterns%3Dsrc%252Fvibe-rules.ts%26pathPatterns%3DREADME.md%26pathPatterns%3DCONFIGURATION.md%0A%0ACan%20you%20show%20me%20some%20examples%20of%20how%20to%20use%20vibe-tools%20commands%20effectively%3F) |


## Table of Contents

- [The AI Team](#the-ai-team)
- [New Skills](#new-skills-for-your-existing-agent)
- [How to Use](#how-do-i-use-it)
  - [Example: Using Perplexity](#asking-perplexity-to-carry-out-web-research)
  - [Example: Using Gemini](#asking-gemini-for-a-plan)
- [What is vibe-tools](#what-is-vibe-tools)
- [Installation](#installation)
- [Requirements](#requirements)
- [Telemetry &amp; Privacy](#telemetry--privacy)
- [Tips](#tips)
- [Additional Examples](#additional-examples)
  - [GitHub Skills](#github-skills)
  - [Gemini Code Review](#gemini-code-review)
- [Detailed Cursor Usage](#detailed-cursor-usage)
  - [Tool Recommendations](#tool-recommendations)
  - [Command Nicknames](#command-nicknames)
  - [Web Search](#use-web-search)
  - [Repository Search](#use-repo-search)
  - [Documentation Generation](#use-doc-generation)
  - [GitHub Integration](#use-github-integration)
  - [Browser Automation](#use-browser-automation)
  - [Direct Model Queries](#use-direct-model-queries)
- [Authentication and API Keys](#authentication-and-api-keys)
- [AI Team Features](#ai-team-features)
  - [Perplexity: Web Search &amp; Research](#perplexity-web-search--research)
  - [Gemini 2.0: Repository Context &amp; Planning](#gemini-20-repository-context--planning)
  - [Stagehand: Browser Automation](#stagehand-browser-automation)
    - [Browser Command Options](#browser-command-options)
    - [Video Recording](#video-recording)
    - [Console and Network Logging](#console-and-network-logging)
    - [Complex Actions](#complex-actions)
    - [Troubleshooting Browser Commands](#troubleshooting-browser-commands)
  - [YouTube Video Analysis](#youtube-video-analysis)
- [Skills](#skills)
  - [GitHub Integration](#github-integration)
  - [Linear Integration](#linear-integration)
  - [Xcode Tools](#xcode-tools)
  - [Documentation Generation](#documentation-generation-uses-gemini-20)
  - [Wait Command](#wait-command)
- [Configuration](#configuration)
  - [vibe-tools.config.json](#vibe-toolsconfigjson)
  - [GitHub Authentication](#github-authentication)
  - [Repomix Configuration](#repomix-configuration)
  - [Model Selection](#model-selection)
  - [Cursor Configuration](#cursor-configuration)
    - [Cursor Agent Configuration](#cursor-agent-configuration)
- [vibe-tools cli](#vibe-tools-cli)
  - [Command Options](#command-options)
  - [Execution Methods](#execution-methods)
- [Troubleshooting](#troubleshooting)
- [Examples](#examples)
  - [Web Search Examples](#web-search-examples)
  - [Repository Context Examples](#repository-context-examples)
  - [Documentation Examples](#documentation-examples)
  - [GitHub Integration Examples](#github-integration-examples)
  - [Xcode Command Examples](#xcode-command-examples)
  - [Browser Command Examples](#browser-command-examples)
    - [open subcommand examples](#open-subcommand-examples)
    - [act, extract, observe subcommands examples](#act-extract-observe-subcommands-examples)
  - [YouTube Command Examples](#youtube-command-examples)
- [Node Package Manager](#node-package-manager-npm)
- [Contributing](#contributing)
- [Sponsors](#sponsors)
- [License](#license)

### The AI Team

- Perplexity to search the web and perform deep research
- Gemini 2.0 for huge whole-codebase context window, search grounding and reasoning
- Stagehand for browser operation to test and debug web apps (uses Anthropic, OpenAI, Gemini, or OpenRouter models)
- OpenRouter for access to a variety of models through a unified API (for MCP commands)

### New Skills for your existing Agent

- Work with GitHub Issues and Pull Requests
- Access Linear issues with full context and comments
- Generate local agent-accessible documentation for external dependencies
- Analyze YouTube videos to extract insights, summaries, and implementation plans

`vibe-tools` is optimized for Cursor Composer Agent but it can be used by any coding agent that can execute commands

### How do I use it?

After installation, to see AI teamwork in action just ask Cursor Composer to use Perplexity or Gemini.
Here are two examples:

&lt;div align=&quot;center&quot;&gt;
  &lt;div&gt;
    &lt;h3&gt;Asking Perplexity to carry out web research&lt;/h3&gt;
  &lt;/div&gt;
  &lt;div style=&quot;display: flex;&quot;&gt;
    &lt;img width=&quot;350&quot; alt=&quot;image&quot; src=&quot;https://github.com/user-attachments/assets/d136c007-387b-449c-9737-553b34e71bbd&quot; /&gt;
  &lt;/div&gt;
  &lt;details&gt;
    &lt;summary&gt;see what happens next...&lt;/summary&gt;
    &lt;img width=&quot;350&quot; alt=&quot;image&quot; src=&quot;https://github.com/user-attachments/assets/06566162-fbaa-492a-8ce8-1a51e0713ee8&quot; /&gt;
    &lt;details&gt;
      &lt;summary&gt;see what happens next...&lt;/summary&gt;
      &lt;img width=&quot;350&quot; alt=&quot;image&quot; src=&quot;https://github.com/user-attachments/assets/fbca8d46-0e0e-4752-922e-62cceec6c12b&quot; /&gt;
      &lt;details&gt;
        &lt;summary&gt;see what happens next...&lt;/summary&gt;
        &lt;img width=&quot;1172&quot; alt=&quot;image&quot; src=&quot;https://github.com/user-attachments/assets/4bdae605-6f6c-43c3-b10c-c0263060033c&quot; /&gt;
      &lt;/details&gt;
    &lt;/details&gt;
  &lt;/details&gt;
    see the spec composer and perplexity produced together:
    &lt;a href=&quot;https://github.com/eastlondoner/pac-man/blob/main/specs/pac-man-spec.md&quot;&gt;pac-man-spec.md&lt;/a&gt; (link out to the example repo)
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;div&gt;
    &lt;h3&gt;Asking Gemini for a plan&lt;/h3&gt;
  &lt;/div&gt;
  &lt;div style=&quot;display: flex;&quot;&gt;
    &lt;img width=&quot;350&quot; src=&quot;https://github.com/user-attachments/assets/816daee4-0a31-4a6b-8aac-39796cb03b51&quot; /&gt;
  &lt;/div&gt;
  &lt;details&gt;
    &lt;summary&gt;see what happens next...&lt;/summary&gt;
    &lt;img width=&quot;350&quot; alt=&quot;image&quot; src=&quot;https://github.com/user-attachments/assets/b44c4cc2-6498-42e8-bda6-227fbfed0a7c&quot; /&gt;
    &lt;details&gt;
      &lt;summary&gt;see what happens next...&lt;/summary&gt;
      &lt;img width=&quot;350&quot; alt=&quot;image&quot; src=&quot;https://github.com/user-attachments/assets/dcfcac67-ce79-4cd1-a66e-697c654ee986&quot; /&gt;
      &lt;details&gt;
        &lt;summary&gt;see what happens next...&lt;/summary&gt;
        &lt;img width=&quot;350&quot; alt=&quot;image&quot; src=&quot;https://github.com/user-attachments/assets/8df7d591-f48b-463d-8d9b-f7e9c1c9c95b&quot; /&gt;
      &lt;/details&gt;
    &lt;/details&gt;
  &lt;/details&gt;
    see the spec composer and perplexity produced together:
    &lt;a href=&quot;https://github.com/eastlondoner/pac-man/blob/main/specs/pac-man-plan.md&quot;&gt;pac-man-plan.md&lt;/a&gt; (link out to the example repo)
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;/div&gt;
&lt;/div&gt;

## What is vibe-tools

`vibe-tools` provides a CLI that your **AI agent can use** to expand its capabilities. `vibe-tools` is designed to be installed globally, providing system-wide access to its powerful features. When you run `vibe-tools install`, it configures instruction files tailored to your chosen development environment:

- **Supported IDEs/Environments**: Cursor, Claude Code, Codex, Windsurf, Cline, Roo.
- **Instruction File Setup**: The installer automatically creates or updates relevant configuration files:
  - For **Cursor**: `.cursorrules` or `.cursor/rules/vibe-tools.mdc`.
  - For **Claude Code**: `CLAUDE.md` (local or global `~/.claude/CLAUDE.md`).
  - For **Codex**: `codex.md` (local or global `~/.codex/instructions.md`).
  - For **Windsurf**: `.windsurfrules`.
  - For **Cline/Roo**: `.clinerules` directory (with `vibe-tools.md`) or legacy file.

`vibe-tools` supports multiple AI instruction sources including Claude code, Codex, and IDE-specific rules, ensuring compatibility across various AI-powered development setups.

`vibe-tools` integrates with multiple AI providers including OpenAI, Anthropic, Gemini, Perplexity, OpenRouter, ModelBox, and xAI (Grok).

`vibe-tools` requires a Perplexity API key and a Google AI API key.

`vibe-tools` is a node package that should be installed globally.

## Installation

Install vibe-tools globally:

```bash
npm install -g vibe-tools
```

Then run the setup:

```bash
vibe-tools install .
```

This command will:

1.  Guide you through API key configuration for the AI providers you choose.
2.  Automatically install Playwright browsers (Chromium) for browser automation commands.
3.  Create or update AI instruction files based on your selected IDE (e.g., setting up `.cursorrules` for Cursor, `CLAUDE.md` for Claude Code, `.windsurfrules` for Windsurf, etc.).

### Non-Interactive Installation (CI/CD)

For automated environments, `vibe-tools install` automatically detects CI environments and runs in non-interactive mode:

```bash
# CI environments - automatically detected and runs without prompts
CI=true vibe-tools install .

# Or explicitly set non-interactive mode
NONINTERACTIVE=true vibe-tools install .
```

In non-interactive mode, vibe-tools will:
- Auto-detect your package manager and IDE environment
- Use existing configurations (local takes precedence over global)
- Apply sensible defaults for new installations
- Skip writing API keys to files (uses environment variables only)
- Enable telemetry by default (can be disabled with `VIBE_TOOLS_NO_TELEMETRY=1`)

## Requirements

- Node.js 18 or later
- Perplexity API key
- Google Gemini API key
- For browser commands:
  - Playwright browsers are automatically installed during `vibe-tools install`
  - OpenAI API key or Anthropic API key (for `act`, `extract`, and `observe` commands)

`vibe-tools` uses Gemini-2.5 models by default, which provide excellent performance with large context windows up to 2 million tokens - enough to handle an entire codebase in one shot. Available Gemini models include `gemini-2.5-flash` (default for speed), `gemini-2.5-pro` (default for quality), and `gemini-2.5-flash-lite-preview-06-17` (lightweight option). Gemini models are currently free to use on Google and you need a Google Cloud project to create an API key.

`vibe-tools` uses Perplexity because Perplexity has the best web search api and indexes and it does not hallucinate. Perplexity Pro users can get an API key with their pro account and recieve $5/month of free credits (at time of writing). Support for Google search grounding is coming soon but so far testing has shown it still frequently hallucinates things like APIs and libraries that don&#039;t exist.

## Telemetry &amp; Privacy

`vibe-tools` collects **anonymous usage telemetry** to help improve the tool. You will be prompted during installation to enable or disable telemetry, and you can opt out at any time. No code, queries, file contents, or personal data are ever collected—only high-level command usage and error types (see [TELEMETRY.md](TELEMETRY.md) for full details).

- Telemetry is **opt-in**: you choose during install.
- You can change your choice later by setting the `VIBE_TOOLS_NO_TELEMETRY=1` environment variable.
- For details on what is (and is not) collected, and how telemetry works, see [TELEMETRY.md](TELEMETRY.md).

## Tips:

- Ask Cursor Agent to have Gemini review its work
- Ask Cursor Agent to generate documentation for external dependencies and write it to a local-docs/ folder

If you do something cool with `vibe-tools` please let me know on twitter or make a PR to add to this section!

## Additional Examples

### GitHub Skills

To see vibe-tools GitHub and Perplexity skills: Check out [this example issue that was solved using Cursor agent and vibe-tools](https://github.com/eastlondoner/cursor-tools/issues/1)

### Gemini code review

See cursor get approximately 5x more work done per-prompt with Gemini code review:
&lt;img width=&quot;1701&quot; alt=&quot;long view export&quot; src=&quot;https://github.com/user-attachments/assets/a8a63f4a-1818-4e84-bb1f-0f60d82c1c42&quot; /&gt;

## Detailed Cursor Usage

Use Cursor Composer in agent mode with command execution (not sure what this means, see section below on Cursor Agent configuration). If you have installed the vibe-tools prompt to your .cursorrules (or equivalent) just ask your AI coding agent/assistant to use &quot;vibe-tools&quot; to do things.

### Tool Recommendations

- `vibe-tools ask` allows direct querying of any model from any provider. It&#039;s best for simple questions where you want to use a specific model or compare responses from different models.
- `vibe-tools web` uses an AI teammate with web search capability to answer questions. `web` is best for finding up-to-date information from the web that is not specific to the repository such as how to use a library to search for known issues and error messages or to get suggestions on how to do something. Web is a teammate who knows tons of stuff and is always up to date.
- `vibe-tools repo` uses an AI teammate with large context window capability to answer questions. `repo` sends the entire repo as context so it is ideal for questions about how things work or where to find something, it is also great for code review, debugging and planning. With the `--with-diff` flag, it can also include git diff information for focused code review that keeps the AI focused on current changes while maintaining full codebase understanding. is a teammate who knows the entire codebase inside out and understands how everything works together.
- `vibe-tools plan` uses an AI teammate with reasoning capability to plan complex tasks. Plan uses a two step process. First it does a whole repo search with a large context window model to find relevant files. Then it sends only those files as context to a thinking model to generate a plan it is great for planning complex tasks and for debugging and refactoring. Plan is a teammate who is really smart on a well defined problem, although doesn&#039;t consider the bigger picture.
- `vibe-tools doc` uses an AI teammate with large context window capability to generate documentation for local or github hosted repositories by sending the entire repo as context. `doc` can be given precise documentation tasks or can be asked to generate complete docs from scratch it is great for generating docs updates or for generating local documentation for a libary or API that you use! Doc is a teammate who is great at summarising and explaining code, in this repo or in any other repo!
- `vibe-tools browser` uses an AI teammate with browser control (aka operator) capability to operate web browsers. `browser` can operate in a hidden (headless) mode to invisibly test and debug web apps or it can be used to connect to an existing browser session to interactively share your browser with Cursor agent it is great for testing and debugging web apps and for carrying out any task that can be done in a browser such as reading information from a bug ticket or even filling out a form. Browser is a teammate who can help you test and debug web apps, and can share control of your browser to perform small browser-based tasks.
- `vibe-tools youtube` uses an AI teammate with video analysis capability to understand YouTube content. `youtube` can generate summaries, extract transcripts, create implementation plans from tutorials, and answer specific questions about video content. It&#039;s great for extracting value from technical talks, tutorials, and presentations without spending time watching the entire video. YouTube is a teammate who can watch and analyze videos for you, distilling the key information.

Note: For repo, doc and plan commands the repository content that is sent as context can be reduced by filtering out files in a .repomixignore file.

### Command Nicknames

When using vibe-tools with Cursor Composer, you can use these nicknames:

- &quot;Gemini&quot; is a nickname for `vibe-tools repo`
- &quot;Perplexity&quot; is a nickname for `vibe-tools web`
- &quot;Stagehand&quot; is a nickname for `vibe-tools browser`

### Use web search

&quot;Please implement country specific stripe payment pages for the USA, UK, France and Germany. Use vibe-tools web to check the available stripe payment methods in each country.&quot;

Note: in most cases you can say &quot;ask Perplexity&quot; instead of &quot;use vibe-tools web&quot; and it will work the same.

### Use repo search

&quot;Let&#039;s refactor our

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[google-gemini/gemini-cli]]></title>
            <link>https://github.com/google-gemini/gemini-cli</link>
            <guid>https://github.com/google-gemini/gemini-cli</guid>
            <pubDate>Sun, 27 Jul 2025 00:05:34 GMT</pubDate>
            <description><![CDATA[An open-source AI agent that brings the power of Gemini directly into your terminal.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/google-gemini/gemini-cli">google-gemini/gemini-cli</a></h1>
            <p>An open-source AI agent that brings the power of Gemini directly into your terminal.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 64,406</p>
            <p>Forks: 6,108</p>
            <p>Stars today: 364 stars today</p>
            <h2>README</h2><pre># Gemini CLI

[![Gemini CLI CI](https://github.com/google-gemini/gemini-cli/actions/workflows/ci.yml/badge.svg)](https://github.com/google-gemini/gemini-cli/actions/workflows/ci.yml)

![Gemini CLI Screenshot](./docs/assets/gemini-screenshot.png)

This repository contains the Gemini CLI, a command-line AI workflow tool that connects to your
tools, understands your code and accelerates your workflows.

With the Gemini CLI you can:

- Query and edit large codebases in and beyond Gemini&#039;s 1M token context window.
- Generate new apps from PDFs or sketches, using Gemini&#039;s multimodal capabilities.
- Automate operational tasks, like querying pull requests or handling complex rebases.
- Use tools and MCP servers to connect new capabilities, including [media generation with Imagen,
  Veo or Lyria](https://github.com/GoogleCloudPlatform/vertex-ai-creative-studio/tree/main/experiments/mcp-genmedia)
- Ground your queries with the [Google Search](https://ai.google.dev/gemini-api/docs/grounding)
  tool, built into Gemini.

## Quickstart

You have two options to install Gemini CLI.

### With Node

1. **Prerequisites:** Ensure you have [Node.js version 20](https://nodejs.org/en/download) or higher installed.
2. **Run the CLI:** Execute the following command in your terminal:

   ```bash
   npx https://github.com/google-gemini/gemini-cli
   ```

   Or install it with:

   ```bash
   npm install -g @google/gemini-cli
   ```

   Then, run the CLI from anywhere:

   ```bash
   gemini
   ```

### With Homebrew

1. **Prerequisites:** Ensure you have [Homebrew](https://brew.sh/) installed.
2. **Install the CLI** Execute the following command in your terminal:

   ```bash
   brew install gemini-cli
   ```

   Then, run the CLI from anywhere:

   ```bash
   gemini
   ```

### Common Configuration steps

3. **Pick a color theme**
4. **Authenticate:** When prompted, sign in with your personal Google account. This will grant you up to 60 model requests per minute and 1,000 model requests per day using Gemini.

You are now ready to use the Gemini CLI!

### Use a Gemini API key:

The Gemini API provides a free tier with [100 requests per day](https://ai.google.dev/gemini-api/docs/rate-limits#free-tier) using Gemini 2.5 Pro, control over which model you use, and access to higher rate limits (with a paid plan):

1. Generate a key from [Google AI Studio](https://aistudio.google.com/apikey).
2. Set it as an environment variable in your terminal. Replace `YOUR_API_KEY` with your generated key.

   ```bash
   export GEMINI_API_KEY=&quot;YOUR_API_KEY&quot;
   ```

3. (Optionally) Upgrade your Gemini API project to a paid plan on the API key page (will automatically unlock [Tier 1 rate limits](https://ai.google.dev/gemini-api/docs/rate-limits#tier-1))

### Use a Vertex AI API key:

The Vertex AI API provides a [free tier](https://cloud.google.com/vertex-ai/generative-ai/docs/start/express-mode/overview) using express mode for Gemini 2.5 Pro, control over which model you use, and access to higher rate limits with a billing account:

1. Generate a key from [Google Cloud](https://cloud.google.com/vertex-ai/generative-ai/docs/start/api-keys).
2. Set it as an environment variable in your terminal. Replace `YOUR_API_KEY` with your generated key and set GOOGLE_GENAI_USE_VERTEXAI to true

   ```bash
   export GOOGLE_API_KEY=&quot;YOUR_API_KEY&quot;
   export GOOGLE_GENAI_USE_VERTEXAI=true
   ```

3. (Optionally) Add a billing account on your project to get access to [higher usage limits](https://cloud.google.com/vertex-ai/generative-ai/docs/quotas)

For other authentication methods, including Google Workspace accounts, see the [authentication](./docs/cli/authentication.md) guide.

## Examples

Once the CLI is running, you can start interacting with Gemini from your shell.

You can start a project from a new directory:

```sh
cd new-project/
gemini
&gt; Write me a Gemini Discord bot that answers questions using a FAQ.md file I will provide
```

Or work with an existing project:

```sh
git clone https://github.com/google-gemini/gemini-cli
cd gemini-cli
gemini
&gt; Give me a summary of all of the changes that went in yesterday
```

### Next steps

- Learn how to [contribute to or build from the source](./CONTRIBUTING.md).
- Explore the available **[CLI Commands](./docs/cli/commands.md)**.
- If you encounter any issues, review the **[troubleshooting guide](./docs/troubleshooting.md)**.
- For more comprehensive documentation, see the [full documentation](./docs/index.md).
- Take a look at some [popular tasks](#popular-tasks) for more inspiration.
- Check out our **[Official Roadmap](./ROADMAP.md)**

### Troubleshooting

Head over to the [troubleshooting guide](docs/troubleshooting.md) if you&#039;re
having issues.

## Popular tasks

### Explore a new codebase

Start by `cd`ing into an existing or newly-cloned repository and running `gemini`.

```text
&gt; Describe the main pieces of this system&#039;s architecture.
```

```text
&gt; What security mechanisms are in place?
```

### Work with your existing code

```text
&gt; Implement a first draft for GitHub issue #123.
```

```text
&gt; Help me migrate this codebase to the latest version of Java. Start with a plan.
```

### Automate your workflows

Use MCP servers to integrate your local system tools with your enterprise collaboration suite.

```text
&gt; Make me a slide deck showing the git history from the last 7 days, grouped by feature and team member.
```

```text
&gt; Make a full-screen web app for a wall display to show our most interacted-with GitHub issues.
```

### Interact with your system

```text
&gt; Convert all the images in this directory to png, and rename them to use dates from the exif data.
```

```text
&gt; Organize my PDF invoices by month of expenditure.
```

### Uninstall

Head over to the [Uninstall](docs/Uninstall.md) guide for uninstallation instructions.

## Terms of Service and Privacy Notice

For details on the terms of service and privacy notice applicable to your use of Gemini CLI, see the [Terms of Service and Privacy Notice](./docs/tos-privacy.md).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[immich-app/immich]]></title>
            <link>https://github.com/immich-app/immich</link>
            <guid>https://github.com/immich-app/immich</guid>
            <pubDate>Sun, 27 Jul 2025 00:05:33 GMT</pubDate>
            <description><![CDATA[High performance self-hosted photo and video management solution.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/immich-app/immich">immich-app/immich</a></h1>
            <p>High performance self-hosted photo and video management solution.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 71,344</p>
            <p>Forks: 3,763</p>
            <p>Stars today: 111 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt; 
  &lt;br/&gt;
  &lt;a href=&quot;https://opensource.org/license/agpl-v3&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-AGPL_v3-blue.svg?color=3F51B5&amp;style=for-the-badge&amp;label=License&amp;logoColor=000000&amp;labelColor=ececec&quot; alt=&quot;License: AGPLv3&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://discord.immich.app&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/discord/979116623879368755.svg?label=Discord&amp;logo=Discord&amp;style=for-the-badge&amp;logoColor=000000&amp;labelColor=ececec&quot; alt=&quot;Discord&quot;/&gt;
  &lt;/a&gt;
  &lt;br/&gt;
  &lt;br/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;design/immich-logo-stacked-light.svg&quot; width=&quot;300&quot; title=&quot;Login With Custom URL&quot;&gt;
&lt;/p&gt;
&lt;h3 align=&quot;center&quot;&gt;High performance self-hosted photo and video management solution&lt;/h3&gt;
&lt;br/&gt;
&lt;a href=&quot;https://immich.app&quot;&gt;
&lt;img src=&quot;design/immich-screenshots.png&quot; title=&quot;Main Screenshot&quot;&gt;
&lt;/a&gt;
&lt;br/&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;readme_i18n/README_ca_ES.md&quot;&gt;Català&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_es_ES.md&quot;&gt;Español&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_fr_FR.md&quot;&gt;Français&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_it_IT.md&quot;&gt;Italiano&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_ja_JP.md&quot;&gt;日本語&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_ko_KR.md&quot;&gt;한국어&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_de_DE.md&quot;&gt;Deutsch&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_nl_NL.md&quot;&gt;Nederlands&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_tr_TR.md&quot;&gt;Türkçe&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_zh_CN.md&quot;&gt;中文&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_uk_UA.md&quot;&gt;Українська&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_ru_RU.md&quot;&gt;Русский&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_pt_BR.md&quot;&gt;Português Brasileiro&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_sv_SE.md&quot;&gt;Svenska&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_ar_JO.md&quot;&gt;العربية&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_vi_VN.md&quot;&gt;Tiếng Việt&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_th_TH.md&quot;&gt;ภาษาไทย&lt;/a&gt;
&lt;/p&gt;

## Disclaimer

- ⚠️ The project is under **very active** development.
- ⚠️ Expect bugs and breaking changes.
- ⚠️ **Do not use the app as the only way to store your photos and videos.**
- ⚠️ Always follow [3-2-1](https://www.backblaze.com/blog/the-3-2-1-backup-strategy/) backup plan for your precious photos and videos!

&gt; [!NOTE]
&gt; You can find the main documentation, including installation guides, at https://immich.app/.

## Links

- [Documentation](https://immich.app/docs)
- [About](https://immich.app/docs/overview/introduction)
- [Installation](https://immich.app/docs/install/requirements)
- [Roadmap](https://immich.app/roadmap)
- [Demo](#demo)
- [Features](#features)
- [Translations](https://immich.app/docs/developer/translations)
- [Contributing](https://immich.app/docs/overview/support-the-project)

## Demo

Access the demo [here](https://demo.immich.app). For the mobile app, you can use `https://demo.immich.app` for the `Server Endpoint URL`.

### Login credentials

| Email           | Password |
| --------------- | -------- |
| demo@immich.app | demo     |

## Features

| Features                                     | Mobile | Web |
| :------------------------------------------- | ------ | --- |
| Upload and view videos and photos            | Yes    | Yes |
| Auto backup when the app is opened           | Yes    | N/A |
| Prevent duplication of assets                | Yes    | Yes |
| Selective album(s) for backup                | Yes    | N/A |
| Download photos and videos to local device   | Yes    | Yes |
| Multi-user support                           | Yes    | Yes |
| Album and Shared albums                      | Yes    | Yes |
| Scrubbable/draggable scrollbar               | Yes    | Yes |
| Support raw formats                          | Yes    | Yes |
| Metadata view (EXIF, map)                    | Yes    | Yes |
| Search by metadata, objects, faces, and CLIP | Yes    | Yes |
| Administrative functions (user management)   | No     | Yes |
| Background backup                            | Yes    | N/A |
| Virtual scroll                               | Yes    | Yes |
| OAuth support                                | Yes    | Yes |
| API Keys                                     | N/A    | Yes |
| LivePhoto/MotionPhoto backup and playback    | Yes    | Yes |
| Support 360 degree image display             | No     | Yes |
| User-defined storage structure               | Yes    | Yes |
| Public Sharing                               | Yes    | Yes |
| Archive and Favorites                        | Yes    | Yes |
| Global Map                                   | Yes    | Yes |
| Partner Sharing                              | Yes    | Yes |
| Facial recognition and clustering            | Yes    | Yes |
| Memories (x years ago)                       | Yes    | Yes |
| Offline support                              | Yes    | No  |
| Read-only gallery                            | Yes    | Yes |
| Stacked Photos                               | Yes    | Yes |
| Tags                                         | No     | Yes |
| Folder View                                  | Yes    | Yes |

## Translations

Read more about translations [here](https://immich.app/docs/developer/translations).

&lt;a href=&quot;https://hosted.weblate.org/engage/immich/&quot;&gt;
&lt;img src=&quot;https://hosted.weblate.org/widget/immich/immich/multi-auto.svg&quot; alt=&quot;Translation status&quot; /&gt;
&lt;/a&gt;

## Repository activity

![Activities](https://repobeats.axiom.co/api/embed/9e86d9dc3ddd137161f2f6d2e758d7863b1789cb.svg &quot;Repobeats analytics image&quot;)

## Star history

&lt;a href=&quot;https://star-history.com/#immich-app/immich&amp;Date&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=immich-app/immich&amp;type=Date&amp;theme=dark&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=immich-app/immich&amp;type=Date&quot; /&gt;
   &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=immich-app/immich&amp;type=Date&quot; width=&quot;100%&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;

## Contributors

&lt;a href=&quot;https://github.com/alextran1502/immich/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=immich-app/immich&quot; width=&quot;100%&quot;/&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[jnsahaj/tweakcn]]></title>
            <link>https://github.com/jnsahaj/tweakcn</link>
            <guid>https://github.com/jnsahaj/tweakcn</guid>
            <pubDate>Sun, 27 Jul 2025 00:05:32 GMT</pubDate>
            <description><![CDATA[A visual no-code theme editor for shadcn/ui components]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/jnsahaj/tweakcn">jnsahaj/tweakcn</a></h1>
            <p>A visual no-code theme editor for shadcn/ui components</p>
            <p>Language: TypeScript</p>
            <p>Stars: 6,115</p>
            <p>Forks: 331</p>
            <p>Stars today: 37 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;h1&gt;tweakcn.com&lt;/h1&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://vercel.com/oss&quot;&gt;
    &lt;img alt=&quot;Vercel OSS Program&quot; src=&quot;https://vercel.com/oss/program-badge.svg&quot; /&gt;
  &lt;/a&gt;
  &lt;br /&gt;
  &lt;br /&gt;
  &lt;a href=&quot;https://discord.gg/Phs4u2NM3n&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Discord&quot; src=&quot;https://img.shields.io/discord/1353416868769173576?style=for-the-badge&amp;logo=discord&amp;logoColor=%23ffffff&quot;&gt;
  &lt;/a&gt;
  &lt;img alt=&quot;GitHub Repo stars&quot; src=&quot;https://img.shields.io/github/stars/jnsahaj/tweakcn?style=for-the-badge&amp;logo=github&quot;&gt;
  &lt;a href=&quot;https://x.com/iamsahaj_xyz&quot;&gt;
    &lt;img alt=&quot;X (formerly Twitter) URL&quot; src=&quot;https://img.shields.io/twitter/url?url=https%3A%2F%2Fx.com%2Fiamsahaj_xyz&amp;style=for-the-badge&amp;logo=x&amp;label=%40iamsahaj_xyz&amp;color=%2300000000&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;br /&gt;

**[tweakcn](https://tweakcn.com)** is a powerful Visual Theme Editor for tailwind CSS &amp; shadcn/ui components. It comes with Beautiful theme presets to get started, while aiming to offer advanced customisation for each aspect of your UI

![tweakcn.com](public/og-image.v050725.png)

## Motivation

Websites made with shadcn/ui famously look the same. tweakcn is a tool that helps you customize shadcn/ui components visually, to make your components stand-out. The goal is to build a platform where a user can discover endless customization options and then have the ability to put their own twist on it. Check our roadmap for more information

## Current Features

You can find the full feature list here: https://tweakcn.com/#features

## Roadmap

You can find the updated roadmap here: https://tweakcn.com/#roadmap

## Run Locally

**IMPORTANT: For contributions, please see [CONTRIBUTING.md](CONTRIBUTING.md).**

### Prerequisites

- Node.js 18+
- npm / yarn / pnpm

### Installation

1. Clone the repository:

```bash
git clone https://github.com/jnsahaj/tweakcn.git
cd tweakcn
```

2. Install dependencies:

```bash
npm install
```

3. Start the development server:

```bash
npm run dev
```

4. Open [http://localhost:3000](http://localhost:3000) in your browser.

## Contributors

&lt;a href=&quot;https://github.com/jnsahaj/tweakcn/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=jnsahaj/tweakcn&quot; /&gt;
&lt;/a&gt;

Made with [contrib.rocks](https://contrib.rocks).

### Interested in Contributing?

Contributions are welcome! Please feel free to submit a Pull Request.

# Star History

&lt;p align=&quot;center&quot;&gt;
  &lt;a target=&quot;_blank&quot; href=&quot;https://star-history.com/#jnsahaj/tweakcn&amp;Date&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=jnsahaj/tweakcn&amp;type=Date&amp;theme=dark&quot;&gt;
      &lt;img alt=&quot;GitHub Star History for jnsahaj/tweakcn&quot; src=&quot;https://api.star-history.com/svg?repos=jnsahaj/tweakcn&amp;type=Date&quot;&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;!-- GitAds-Verify: HX84XPI5OQ816367AROGJ9SROARUHQER --&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>