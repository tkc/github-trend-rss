<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Wed, 03 Sep 2025 00:04:37 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[LukeGus/Termix]]></title>
            <link>https://github.com/LukeGus/Termix</link>
            <guid>https://github.com/LukeGus/Termix</guid>
            <pubDate>Wed, 03 Sep 2025 00:04:37 GMT</pubDate>
            <description><![CDATA[Termix is a web-based server management platform with SSH terminal, tunneling, and file editing capabilities.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/LukeGus/Termix">LukeGus/Termix</a></h1>
            <p>Termix is a web-based server management platform with SSH terminal, tunneling, and file editing capabilities.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 2,078</p>
            <p>Forks: 78</p>
            <p>Stars today: 153 stars today</p>
            <h2>README</h2><pre># Repo Stats
![GitHub Repo stars](https://img.shields.io/github/stars/LukeGus/Termix?style=flat&amp;label=Stars)
![GitHub forks](https://img.shields.io/github/forks/LukeGus/Termix?style=flat&amp;label=Forks)
![GitHub Release](https://img.shields.io/github/v/release/LukeGus/Termix?style=flat&amp;label=Release)
&lt;a href=&quot;https://discord.gg/jVQGdvHDrf&quot;&gt;&lt;img alt=&quot;Discord&quot; src=&quot;https://img.shields.io/discord/1347374268253470720&quot;&gt;&lt;/a&gt;
#### Top Technologies
[![React Badge](https://img.shields.io/badge/-React-61DBFB?style=flat-square&amp;labelColor=black&amp;logo=react&amp;logoColor=61DBFB)](#)
[![TypeScript Badge](https://img.shields.io/badge/-TypeScript-3178C6?style=flat-square&amp;labelColor=black&amp;logo=typescript&amp;logoColor=3178C6)](#)
[![Node.js Badge](https://img.shields.io/badge/-Node.js-3C873A?style=flat-square&amp;labelColor=black&amp;logo=node.js&amp;logoColor=3C873A)](#)
[![Vite Badge](https://img.shields.io/badge/-Vite-646CFF?style=flat-square&amp;labelColor=black&amp;logo=vite&amp;logoColor=646CFF)](#)
[![Tailwind CSS Badge](https://img.shields.io/badge/-TailwindCSS-38B2AC?style=flat-square&amp;labelColor=black&amp;logo=tailwindcss&amp;logoColor=38B2AC)](#)
[![Docker Badge](https://img.shields.io/badge/-Docker-2496ED?style=flat-square&amp;labelColor=black&amp;logo=docker&amp;logoColor=2496ED)](#)
[![SQLite Badge](https://img.shields.io/badge/-SQLite-003B57?style=flat-square&amp;labelColor=black&amp;logo=sqlite&amp;logoColor=003B57)](#)
[![Radix UI Badge](https://img.shields.io/badge/-Radix%20UI-161618?style=flat-square&amp;labelColor=black&amp;logo=radixui&amp;logoColor=161618)](#)

&lt;br /&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/LukeGus/Termix&quot;&gt;
    &lt;img alt=&quot;Termix Banner&quot; src=./repo-images/HeaderImage.png style=&quot;width: auto; height: auto;&quot;&gt;  &lt;/a&gt;
&lt;/p&gt;

If you would like, you can support the project here!\
[![GitHub Sponsor](https://img.shields.io/badge/Sponsor-LukeGus-181717?style=for-the-badge&amp;logo=github&amp;logoColor=white)](https://github.com/sponsors/LukeGus)

# Overview

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/LukeGus/Termix&quot;&gt;
    &lt;img alt=&quot;Termix Banner&quot; src=./public/icon.svg style=&quot;width: 250px; height: 250px;&quot;&gt;  &lt;/a&gt;
&lt;/p&gt;

Termix is an open-source, forever-free, self-hosted all-in-one server management platform. It provides a web-based solution for managing your servers and infrastructure through a single, intuitive interface. Termix offers SSH terminal access, SSH tunneling capabilities, and remote file editing, with many more tools to come.

# Features
- **SSH Terminal Access** - Full-featured terminal with split-screen support (up to 4 panels) and tab system
- **SSH Tunnel Management** - Create and manage SSH tunnels with automatic reconnection and health monitoring
- **Remote File Editor** - Edit files directly on remote servers with syntax highlighting, file management features (uploading, removing, renaming, deleting files)
- **SSH Host Manager** - Save, organize, and manage your SSH connections with tags and folders
- **Server Stats** - View CPU, memory, and HDD usage on any SSH server
- **User Authentication** - Secure user management with admin controls and OIDC and 2FA (TOTP) support
- **Modern UI** - Clean interface built with React, Tailwind CSS, and Shadcn

# Planned Features
- **Improved Admin Control** - Give more fine-grained control over user and admin permissions, share hosts, etc
- **Theming** - Modify theming for all tools
- **Improved Terminal Support** - Add more terminal protocols such as VNC and RDP (anyone who has experience in integrating RDP into a web-application similar to Apache Guacamole, please contact me by creating an issue)
- **Mobile Support** - Support a mobile app or version of the Termix website to manage servers from your phone

# Installation
Visit the Termix [Docs](https://docs.termix.site/install) for more information on how to install Termix. Otherwise, view a sample docker-compose file here:
```yaml
services:
  termix:
    image: ghcr.io/lukegus/termix:latest
    container_name: termix
    restart: unless-stopped
    ports:
      - &quot;8080:8080&quot;
    volumes:
      - termix-data:/app/data
    environment:
      PORT: &quot;8080&quot;

volumes:
  termix-data:
    driver: local 
```

# Support
If you need help with Termix, you can join the [Discord](https://discord.gg/jVQGdvHDrf) server and visit the support channel. You can also open an issue or open a pull request on the [GitHub](https://github.com/LukeGus/Termix/issues) repo.

# Show-off

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./repo-images/Image 1.png&quot; width=&quot;400&quot; alt=&quot;Termix Demo 1&quot;/&gt;
  &lt;img src=&quot;./repo-images/Image 2.png&quot; width=&quot;400&quot; alt=&quot;Termix Demo 2&quot;/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;./repo-images/Image 3.png&quot; width=&quot;250&quot; alt=&quot;Termix Demo 3&quot;/&gt;
  &lt;img src=&quot;./repo-images/Image 4.png&quot; width=&quot;250&quot; alt=&quot;Termix Demo 4&quot;/&gt;
  &lt;img src=&quot;./repo-images/Image 5.png&quot; width=&quot;250&quot; alt=&quot;Termix Demo 5&quot;/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;video src=&quot;https://github.com/user-attachments/assets/f9caa061-10dc-4173-ae7d-c6d42f05cf56&quot; width=&quot;800&quot; controls&gt;
    Your browser does not support the video tag.
  &lt;/video&gt;
&lt;/p&gt;

# License
Distributed under the Apache License Version 2.0. See LICENSE for more information.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[bytebot-ai/bytebot]]></title>
            <link>https://github.com/bytebot-ai/bytebot</link>
            <guid>https://github.com/bytebot-ai/bytebot</guid>
            <pubDate>Wed, 03 Sep 2025 00:04:36 GMT</pubDate>
            <description><![CDATA[Bytebot is a self-hosted AI desktop agent that automates computer tasks through natural language commands, operating within a containerized Linux desktop environment.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/bytebot-ai/bytebot">bytebot-ai/bytebot</a></h1>
            <p>Bytebot is a self-hosted AI desktop agent that automates computer tasks through natural language commands, operating within a containerized Linux desktop environment.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,521</p>
            <p>Forks: 290</p>
            <p>Stars today: 147 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

&lt;img src=&quot;docs/images/bytebot-logo.png&quot; width=&quot;500&quot; alt=&quot;Bytebot Logo&quot;&gt;

# Bytebot: Open-Source AI Desktop Agent

**An AI that has its own computer to complete tasks for you**

[![Deploy on Railway](https://railway.com/button.svg)](https://railway.com/deploy/bytebot?referralCode=L9lKXQ)

[![Docker](https://img.shields.io/badge/docker-ready-blue.svg)](https://github.com/bytebot-ai/bytebot/tree/main/docker)
[![License](https://img.shields.io/badge/license-Apache%202.0-green.svg)](LICENSE)
[![Discord](https://img.shields.io/discord/1232768900274585720?color=7289da&amp;label=discord)](https://discord.com/invite/d9ewZkWPTP)

[üåê Website](https://bytebot.ai) ‚Ä¢ [üìö Documentation](https://docs.bytebot.ai) ‚Ä¢ [üí¨ Discord](https://discord.com/invite/d9ewZkWPTP) ‚Ä¢ [ùïè Twitter](https://x.com/bytebot_ai)

&lt;/div&gt;

---

https://github.com/user-attachments/assets/f271282a-27a3-43f3-9b99-b34007fdd169



https://github.com/user-attachments/assets/72a43cf2-bd87-44c5-a582-e7cbe176f37f





## What is a Desktop Agent?

A desktop agent is an AI that has its own computer. Unlike browser-only agents or traditional RPA tools, Bytebot comes with a full virtual desktop where it can:

- Use any application (browsers, email clients, office tools, IDEs)
- Download and organize files with its own file system
- Log into websites and applications using password managers
- Read and process documents, PDFs, and spreadsheets
- Complete complex multi-step workflows across different programs

Think of it as a virtual employee with their own computer who can see the screen, move the mouse, type on the keyboard, and complete tasks just like a human would.

## Why Give AI Its Own Computer?

When AI has access to a complete desktop environment, it unlocks capabilities that aren&#039;t possible with browser-only agents or API integrations:

### Complete Task Autonomy

Give Bytebot a task like &quot;Download all invoices from our vendor portals and organize them into a folder&quot; and it will:

- Open the browser
- Navigate to each portal
- Handle authentication (including 2FA via password managers)
- Download the files to its local file system
- Organize them into a folder

### Process Documents

Upload files directly to Bytebot&#039;s desktop and it can:

- Read entire PDFs into its context
- Extract data from complex documents
- Cross-reference information across multiple files
- Create new documents based on analysis
- Handle formats that APIs can&#039;t access

### Use Real Applications

Bytebot isn&#039;t limited to web interfaces. It can:

- Use desktop applications like text editors, VS Code, or email clients
- Run scripts and command-line tools
- Install new software as needed
- Configure applications for specific workflows

## Quick Start

### Deploy in 2 Minutes

**Option 1: Railway (Easiest)**
[![Deploy on Railway](https://railway.com/button.svg)](https://railway.com/deploy/bytebot?referralCode=L9lKXQ)

Just click and add your AI provider API key.

**Option 2: Docker Compose**

```bash
git clone https://github.com/bytebot-ai/bytebot.git
cd bytebot

# Add your AI provider key (choose one)
echo &quot;ANTHROPIC_API_KEY=sk-ant-...&quot; &gt; docker/.env
# Or: echo &quot;OPENAI_API_KEY=sk-...&quot; &gt; docker/.env
# Or: echo &quot;GEMINI_API_KEY=...&quot; &gt; docker/.env

docker-compose -f docker/docker-compose.yml up -d

# Open http://localhost:9992
```

[Full deployment guide ‚Üí](https://docs.bytebot.ai/quickstart)

## How It Works

Bytebot consists of four integrated components:

1. **Virtual Desktop**: A complete Ubuntu Linux environment with pre-installed applications
2. **AI Agent**: Understands your tasks and controls the desktop to complete them
3. **Task Interface**: Web UI where you create tasks and watch Bytebot work
4. **APIs**: REST endpoints for programmatic task creation and desktop control

### Key Features

- **Natural Language Tasks**: Just describe what you need done
- **File Uploads**: Drop files onto tasks for Bytebot to process
- **Live Desktop View**: Watch Bytebot work in real-time
- **Takeover Mode**: Take control when you need to help or configure something
- **Password Manager Support**: Install 1Password, Bitwarden, etc. for automatic authentication
- **Persistent Environment**: Install programs and they stay available for future tasks

## Example Tasks

### Basic Examples

```
&quot;Go to Wikipedia and create a summary of quantum computing&quot;
&quot;Research flights from NYC to London and create a comparison document&quot;
&quot;Take screenshots of the top 5 news websites&quot;
```

### Document Processing

```
&quot;Read the uploaded contracts.pdf and extract all payment terms and deadlines&quot;
&quot;Process these 5 invoice PDFs and create a summary report&quot;
&quot;Download and analyze the latest financial report and answer: What were the key risks mentioned?&quot;
```

### Multi-Application Workflows

```
&quot;Download last month&#039;s bank statements from our three banks and consolidate them&quot;
&quot;Check all our vendor portals for new invoices and create a summary report&quot;
&quot;Log into our CRM, export the customer list, and update records in the ERP system&quot;
```

## Programmatic Control

### Create Tasks via API

```python
import requests

# Simple task
response = requests.post(&#039;http://localhost:9991/tasks&#039;, json={
    &#039;description&#039;: &#039;Download the latest sales report and create a summary&#039;
})

# Task with file upload
files = {&#039;files&#039;: open(&#039;contracts.pdf&#039;, &#039;rb&#039;)}
response = requests.post(&#039;http://localhost:9991/tasks&#039;,
    data={&#039;description&#039;: &#039;Review these contracts for important dates&#039;},
    files=files
)
```

### Direct Desktop Control

```bash
# Take a screenshot
curl -X POST http://localhost:9990/computer-use \
  -H &quot;Content-Type: application/json&quot; \
  -d &#039;{&quot;action&quot;: &quot;screenshot&quot;}&#039;

# Click at specific coordinates
curl -X POST http://localhost:9990/computer-use \
  -H &quot;Content-Type: application/json&quot; \
  -d &#039;{&quot;action&quot;: &quot;click_mouse&quot;, &quot;coordinate&quot;: [500, 300]}&#039;
```

[Full API documentation ‚Üí](https://docs.bytebot.ai/api-reference/introduction)

## Setting Up Your Desktop Agent

### 1. Deploy Bytebot

Use one of the deployment methods above to get Bytebot running.

### 2. Configure the Desktop

Use the Desktop tab in the UI to:

- Install additional programs you need
- Set up password managers for authentication
- Configure applications with your preferences
- Log into websites you want Bytebot to access

### 3. Start Giving Tasks

Create tasks in natural language and watch Bytebot complete them using the configured desktop.

## Use Cases

### Business Process Automation

- Invoice processing and data extraction
- Multi-system data synchronization
- Report generation from multiple sources
- Compliance checking across platforms

### Development &amp; Testing

- Automated UI testing
- Cross-browser compatibility checks
- Documentation generation with screenshots
- Code deployment verification

### Research &amp; Analysis

- Competitive analysis across websites
- Data gathering from multiple sources
- Document analysis and summarization
- Market research compilation

## Architecture

Bytebot is built with:

- **Desktop**: Ubuntu 22.04 with XFCE, Firefox, VS Code, and other tools
- **Agent**: NestJS service that coordinates AI and desktop actions
- **UI**: Next.js application for task management
- **AI Support**: Works with Anthropic Claude, OpenAI GPT, Google Gemini
- **Deployment**: Docker containers for easy self-hosting

## Why Self-Host?

- **Data Privacy**: Everything runs on your infrastructure
- **Full Control**: Customize the desktop environment as needed
- **No Limits**: Use your own AI API keys without platform restrictions
- **Flexibility**: Install any software, access any systems

## Advanced Features

### Multiple AI Providers

Use any AI provider through our [LiteLLM integration](https://docs.bytebot.ai/deployment/litellm):

- Azure OpenAI
- AWS Bedrock
- Local models via Ollama
- 100+ other providers

### Enterprise Deployment

Deploy on Kubernetes with Helm:

```bash
# Clone the repository
git clone https://github.com/bytebot-ai/bytebot.git
cd bytebot

# Install with Helm
helm install bytebot ./helm \
  --set agent.env.ANTHROPIC_API_KEY=sk-ant-...
```

[Enterprise deployment guide ‚Üí](https://docs.bytebot.ai/deployment/helm)

## Community &amp; Support

- **Discord**: [Join our community](https://discord.com/invite/d9ewZkWPTP) for help and discussions
- **Documentation**: Comprehensive guides at [docs.bytebot.ai](https://docs.bytebot.ai)
- **GitHub Issues**: Report bugs and request features

## Contributing

We welcome contributions! Whether it&#039;s:

- üêõ Bug fixes
- ‚ú® New features
- üìö Documentation improvements
- üåê Translations

Please:

1. Check existing [issues](https://github.com/bytebot-ai/bytebot/issues) first
2. Open an issue to discuss major changes
3. Submit PRs with clear descriptions
4. Join our [Discord](https://discord.com/invite/d9ewZkWPTP) to discuss ideas

## License

Bytebot is open source under the Apache 2.0 license.

---

&lt;div align=&quot;center&quot;&gt;

**Give your AI its own computer. See what it can do.**

[![Deploy on Railway](https://railway.com/button.svg)](https://railway.com/deploy/bytebot?referralCode=L9lKXQ)

&lt;sub&gt;Built by [Tantl Labs](https://tantl.com) and the open source community&lt;/sub&gt;

&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[actions/checkout]]></title>
            <link>https://github.com/actions/checkout</link>
            <guid>https://github.com/actions/checkout</guid>
            <pubDate>Wed, 03 Sep 2025 00:04:35 GMT</pubDate>
            <description><![CDATA[Action for checking out a repo]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/actions/checkout">actions/checkout</a></h1>
            <p>Action for checking out a repo</p>
            <p>Language: TypeScript</p>
            <p>Stars: 6,985</p>
            <p>Forks: 2,139</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre>[![Build and Test](https://github.com/actions/checkout/actions/workflows/test.yml/badge.svg)](https://github.com/actions/checkout/actions/workflows/test.yml)

# Checkout V5

## What&#039;s new

- Updated to the node24 runtime
  - This requires a minimum Actions Runner version of [v2.327.1](https://github.com/actions/runner/releases/tag/v2.327.1) to run.


# Checkout V4

This action checks-out your repository under `$GITHUB_WORKSPACE`, so your workflow can access it.

Only a single commit is fetched by default, for the ref/SHA that triggered the workflow. Set `fetch-depth: 0` to fetch all history for all branches and tags. Refer [here](https://docs.github.com/actions/using-workflows/events-that-trigger-workflows) to learn which commit `$GITHUB_SHA` points to for different events.

The auth token is persisted in the local git config. This enables your scripts to run authenticated git commands. The token is removed during post-job cleanup. Set `persist-credentials: false` to opt-out.

When Git 2.18 or higher is not in your PATH, falls back to the REST API to download the files.

### Note

Thank you for your interest in this GitHub action, however, right now we are not taking contributions. 

We continue to focus our resources on strategic areas that help our customers be successful while making developers&#039; lives easier. While GitHub Actions remains a key part of this vision, we are allocating resources towards other areas of Actions and are not taking contributions to this repository at this time. The GitHub public roadmap is the best place to follow along for any updates on features we‚Äôre working on and what stage they‚Äôre in.

We are taking the following steps to better direct requests related to GitHub Actions, including:

1. We will be directing questions and support requests to our [Community Discussions area](https://github.com/orgs/community/discussions/categories/actions)

2. High Priority bugs can be reported through Community Discussions or you can report these to our support team https://support.github.com/contact/bug-report.

3. Security Issues should be handled as per our [security.md](security.md)

We will still provide security updates for this project and fix major breaking changes during this time.

You are welcome to still raise bugs in this repo.

# What&#039;s new

Please refer to the [release page](https://github.com/actions/checkout/releases/latest) for the latest release notes.

# Usage

&lt;!-- start usage --&gt;
```yaml
- uses: actions/checkout@v5
  with:
    # Repository name with owner. For example, actions/checkout
    # Default: ${{ github.repository }}
    repository: &#039;&#039;

    # The branch, tag or SHA to checkout. When checking out the repository that
    # triggered a workflow, this defaults to the reference or SHA for that event.
    # Otherwise, uses the default branch.
    ref: &#039;&#039;

    # Personal access token (PAT) used to fetch the repository. The PAT is configured
    # with the local git config, which enables your scripts to run authenticated git
    # commands. The post-job step removes the PAT.
    #
    # We recommend using a service account with the least permissions necessary. Also
    # when generating a new PAT, select the least scopes necessary.
    #
    # [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
    #
    # Default: ${{ github.token }}
    token: &#039;&#039;

    # SSH key used to fetch the repository. The SSH key is configured with the local
    # git config, which enables your scripts to run authenticated git commands. The
    # post-job step removes the SSH key.
    #
    # We recommend using a service account with the least permissions necessary.
    #
    # [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
    ssh-key: &#039;&#039;

    # Known hosts in addition to the user and global host key database. The public SSH
    # keys for a host may be obtained using the utility `ssh-keyscan`. For example,
    # `ssh-keyscan github.com`. The public key for github.com is always implicitly
    # added.
    ssh-known-hosts: &#039;&#039;

    # Whether to perform strict host key checking. When true, adds the options
    # `StrictHostKeyChecking=yes` and `CheckHostIP=no` to the SSH command line. Use
    # the input `ssh-known-hosts` to configure additional hosts.
    # Default: true
    ssh-strict: &#039;&#039;

    # The user to use when connecting to the remote SSH host. By default &#039;git&#039; is
    # used.
    # Default: git
    ssh-user: &#039;&#039;

    # Whether to configure the token or SSH key with the local git config
    # Default: true
    persist-credentials: &#039;&#039;

    # Relative path under $GITHUB_WORKSPACE to place the repository
    path: &#039;&#039;

    # Whether to execute `git clean -ffdx &amp;&amp; git reset --hard HEAD` before fetching
    # Default: true
    clean: &#039;&#039;

    # Partially clone against a given filter. Overrides sparse-checkout if set.
    # Default: null
    filter: &#039;&#039;

    # Do a sparse checkout on given patterns. Each pattern should be separated with
    # new lines.
    # Default: null
    sparse-checkout: &#039;&#039;

    # Specifies whether to use cone-mode when doing a sparse checkout.
    # Default: true
    sparse-checkout-cone-mode: &#039;&#039;

    # Number of commits to fetch. 0 indicates all history for all branches and tags.
    # Default: 1
    fetch-depth: &#039;&#039;

    # Whether to fetch tags, even if fetch-depth &gt; 0.
    # Default: false
    fetch-tags: &#039;&#039;

    # Whether to show progress status output when fetching.
    # Default: true
    show-progress: &#039;&#039;

    # Whether to download Git-LFS files
    # Default: false
    lfs: &#039;&#039;

    # Whether to checkout submodules: `true` to checkout submodules or `recursive` to
    # recursively checkout submodules.
    #
    # When the `ssh-key` input is not provided, SSH URLs beginning with
    # `git@github.com:` are converted to HTTPS.
    #
    # Default: false
    submodules: &#039;&#039;

    # Add repository path as safe.directory for Git global config by running `git
    # config --global --add safe.directory &lt;path&gt;`
    # Default: true
    set-safe-directory: &#039;&#039;

    # The base URL for the GitHub instance that you are trying to clone from, will use
    # environment defaults to fetch from the same instance that the workflow is
    # running from unless specified. Example URLs are https://github.com or
    # https://my-ghes-server.example.com
    github-server-url: &#039;&#039;
```
&lt;!-- end usage --&gt;

# Scenarios

- [Checkout V5](#checkout-v5)
  - [What&#039;s new](#whats-new)
- [Checkout V4](#checkout-v4)
    - [Note](#note)
- [What&#039;s new](#whats-new-1)
- [Usage](#usage)
- [Scenarios](#scenarios)
  - [Fetch only the root files](#fetch-only-the-root-files)
  - [Fetch only the root files and `.github` and `src` folder](#fetch-only-the-root-files-and-github-and-src-folder)
  - [Fetch only a single file](#fetch-only-a-single-file)
  - [Fetch all history for all tags and branches](#fetch-all-history-for-all-tags-and-branches)
  - [Checkout a different branch](#checkout-a-different-branch)
  - [Checkout HEAD^](#checkout-head)
  - [Checkout multiple repos (side by side)](#checkout-multiple-repos-side-by-side)
  - [Checkout multiple repos (nested)](#checkout-multiple-repos-nested)
  - [Checkout multiple repos (private)](#checkout-multiple-repos-private)
  - [Checkout pull request HEAD commit instead of merge commit](#checkout-pull-request-head-commit-instead-of-merge-commit)
  - [Checkout pull request on closed event](#checkout-pull-request-on-closed-event)
  - [Push a commit using the built-in token](#push-a-commit-using-the-built-in-token)
  - [Push a commit to a PR using the built-in token](#push-a-commit-to-a-pr-using-the-built-in-token)
- [Recommended permissions](#recommended-permissions)
- [License](#license)

## Fetch only the root files

```yaml
- uses: actions/checkout@v5
  with:
    sparse-checkout: .
```

## Fetch only the root files and `.github` and `src` folder

```yaml
- uses: actions/checkout@v5
  with:
    sparse-checkout: |
      .github
      src
```

## Fetch only a single file

```yaml
- uses: actions/checkout@v5
  with:
    sparse-checkout: |
      README.md
    sparse-checkout-cone-mode: false
```

## Fetch all history for all tags and branches

```yaml
- uses: actions/checkout@v5
  with:
    fetch-depth: 0
```

## Checkout a different branch

```yaml
- uses: actions/checkout@v5
  with:
    ref: my-branch
```

## Checkout HEAD^

```yaml
- uses: actions/checkout@v5
  with:
    fetch-depth: 2
- run: git checkout HEAD^
```

## Checkout multiple repos (side by side)

```yaml
- name: Checkout
  uses: actions/checkout@v5
  with:
    path: main

- name: Checkout tools repo
  uses: actions/checkout@v5
  with:
    repository: my-org/my-tools
    path: my-tools
```
&gt; - If your secondary repository is private or internal you will need to add the option noted in [Checkout multiple repos (private)](#Checkout-multiple-repos-private)

## Checkout multiple repos (nested)

```yaml
- name: Checkout
  uses: actions/checkout@v5

- name: Checkout tools repo
  uses: actions/checkout@v5
  with:
    repository: my-org/my-tools
    path: my-tools
```
&gt; - If your secondary repository is private or internal you will need to add the option noted in [Checkout multiple repos (private)](#Checkout-multiple-repos-private)

## Checkout multiple repos (private)

```yaml
- name: Checkout
  uses: actions/checkout@v5
  with:
    path: main

- name: Checkout private tools
  uses: actions/checkout@v5
  with:
    repository: my-org/my-private-tools
    token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT
    path: my-tools
```

&gt; - `${{ github.token }}` is scoped to the current repository, so if you want to checkout a different repository that is private you will need to provide your own [PAT](https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line).


## Checkout pull request HEAD commit instead of merge commit

```yaml
- uses: actions/checkout@v5
  with:
    ref: ${{ github.event.pull_request.head.sha }}
```

## Checkout pull request on closed event

```yaml
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, closed]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
```

## Push a commit using the built-in token

```yaml
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - run: |
          date &gt; generated.txt
          # Note: the following account information will not work on GHES
          git config user.name &quot;github-actions[bot]&quot;
          git config user.email &quot;41898282+github-actions[bot]@users.noreply.github.com&quot;
          git add .
          git commit -m &quot;generated&quot;
          git push
```
*NOTE:* The user email is `{user.id}+{user.login}@users.noreply.github.com`. See users API: https://api.github.com/users/github-actions%5Bbot%5D

## Push a commit to a PR using the built-in token

In a pull request trigger, `ref` is required as GitHub Actions checks out in detached HEAD mode, meaning it doesn‚Äôt check out your branch by default.

```yaml
on: pull_request
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}
      - run: |
          date &gt; generated.txt
          # Note: the following account information will not work on GHES
          git config user.name &quot;github-actions[bot]&quot;
          git config user.email &quot;41898282+github-actions[bot]@users.noreply.github.com&quot;
          git add .
          git commit -m &quot;generated&quot;
          git push
```

*NOTE:* The user email is `{user.id}+{user.login}@users.noreply.github.com`. See users API: https://api.github.com/users/github-actions%5Bbot%5D

# Recommended permissions

When using the `checkout` action in your GitHub Actions workflow, it is recommended to set the following `GITHUB_TOKEN` permissions to ensure proper functionality, unless alternative auth is provided via the `token` or `ssh-key` inputs:

```yaml
permissions:
  contents: read
```

# License

The scripts and documentation in this project are released under the [MIT License](LICENSE)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[gristlabs/grist-core]]></title>
            <link>https://github.com/gristlabs/grist-core</link>
            <guid>https://github.com/gristlabs/grist-core</guid>
            <pubDate>Wed, 03 Sep 2025 00:04:34 GMT</pubDate>
            <description><![CDATA[Grist is the evolution of spreadsheets.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/gristlabs/grist-core">gristlabs/grist-core</a></h1>
            <p>Grist is the evolution of spreadsheets.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 9,126</p>
            <p>Forks: 439</p>
            <p>Stars today: 52 stars today</p>
            <h2>README</h2><pre># Grist

Grist is a modern relational spreadsheet. It combines the flexibility of a spreadsheet with the robustness of a database.

* `grist-core` (this repo) has what you need to run a powerful server for hosting spreadsheets.

* [`grist-desktop`](https://github.com/gristlabs/grist-desktop) is a Linux/macOS/Windows desktop app for viewing and editing spreadsheets stored locally.
* [`grist-static`](https://github.com/gristlabs/grist-static) is a fully in-browser build of Grist for displaying spreadsheets on a website without back-end support.

Grist is developed by [Grist Labs](https://www.linkedin.com/company/grist-labs/), an NYC-based company üá∫üá∏üóΩ. The French government üá´üá∑ organizations [ANCT Donn√©es et Territoires](https://donnees.incubateur.anct.gouv.fr/toolbox/grist) and [DINUM (Direction Interminist√©rielle du Num√©rique)](https://www.numerique.gouv.fr/dinum/) have also made significant contributions to the codebase.

The `grist-core`, `grist-desktop`, and `grist-static` repositories are all open source (Apache License, Version 2.0).
Grist Labs offers free and paid hosted services at [getgrist.com](https://getgrist.com), sells an Enterprise product,
and offers [cloud packaging](https://support.getgrist.com/install/grist-builder-edition/).

&gt; Questions? Feedback? Want to share what you&#039;re building with Grist? Join our [official Discord server](https://discord.gg/MYKpYQ3fbP) or visit our [Community forum](https://community.getgrist.com/).

https://user-images.githubusercontent.com/118367/151245587-892e50a6-41f5-4b74-9786-fe3566f6b1fb.mp4

## Features in `grist-core`

To see exactly what is present in `grist-core`, you can run the [desktop app](https://github.com/gristlabs/grist-desktop), or use [`docker`](#using-grist). The absolute fastest way to try Grist out is to visit [docs.getgrist.com](https://docs.getgrist.com) and play with a spreadsheet there immediately ‚Äì¬†though if you do, please read the list of [extra extensions](#features-not-in-grist-core) that are not in `grist-core`.

However you try it, you&#039;ll quickly see that Grist is a hybrid database/spreadsheet, meaning that:

  - Columns work like they do in databases: they are named, and they hold one kind of data.
  - Columns can be filled by formula, spreadsheet-style, with automatic updates when referenced cells change.

This difference can confuse people coming directly from Excel or Google Sheets. Give it a chance! There&#039;s also a [Grist for Spreadsheet Users](https://www.getgrist.com/blog/grist-for-spreadsheet-users/) article to help get you oriented. If you&#039;re coming from Airtable, you&#039;ll find the model familiar (and there&#039;s also our [Grist vs Airtable](https://www.getgrist.com/blog/grist-v-airtable/) article for a direct comparison).

Here are some specific feature highlights of Grist:

  * Python formulas.
    - Full [Python syntax is supported](https://support.getgrist.com/formulas/#python), including the standard library.
    - Many [Excel functions](https://support.getgrist.com/functions/) also available.
    - An [AI Assistant](https://www.getgrist.com/ai-formula-assistant/) specifically tuned for formula generation (using OpenAI gpt-3.5-turbo or [Llama](https://ai.meta.com/llama/) via &lt;a href=&quot;https://github.com/abetlen/llama-cpp-python&quot;&gt;llama-cpp-python&lt;/a&gt;).
  * A portable, self-contained format.
    - Based on SQLite, the most widely deployed database engine.
    - Any tool that can read SQLite can read numeric and text data from a Grist file.
    - Enables [backups](https://support.getgrist.com/exports/#backing-up-an-entire-document) that you can confidently restore in full.
    - Great for moving between different hosts.
  * Can be displayed on a static website with [`grist-static`](https://github.com/gristlabs/grist-static) ‚Äì no special server needed.
  * A self-contained desktop app for viewing and editing locally: [`grist-desktop`](https://github.com/gristlabs/grist-desktop).
  * Convenient editing and formatting features.
    - Choices and [choice lists](https://support.getgrist.com/col-types/#choice-list-columns), for adding colorful tags to records.
    - [References](https://support.getgrist.com/col-refs/#creating-a-new-reference-list-column) and reference lists, for cross-referencing records in other tables.
    - [Attachments](https://support.getgrist.com/col-types/#attachment-columns), to include media or document files in records.
    - Dates and times, toggles, and special numerics such as currency all have specialized editors and formatting options.
    - [Conditional Formatting](https://support.getgrist.com/conditional-formatting/), letting you control the style of cells with formulas to draw attention to important information.
  * Drag-and-drop dashboards.
    - [Charts](https://support.getgrist.com/widget-chart/), [card views](https://support.getgrist.com/widget-card/) and a [calendar widget](https://support.getgrist.com/widget-calendar/) for visualization.
    - [Summary tables](https://support.getgrist.com/summary-tables/) for summing and counting across groups.
    - [Widget linking](https://support.getgrist.com/linking-widgets/) streamlines filtering and editing data.
    Grist has a unique approach to visualization, where you can lay out and link distinct widgets to show together,
    without cramming mixed material into a table.
    - [Filter bar](https://support.getgrist.com/search-sort-filter/#filter-buttons) for quick slicing and dicing.
  * [Incremental imports](https://support.getgrist.com/imports/#updating-existing-records).
    - Import a CSV of the last three months activity from your bank...
    - ...and import new activity a month later without fuss or duplication.
  * [Native forms](https://support.getgrist.com/widget-form/). Create forms that feed directly into your spreadsheet without fuss.
  * Integrations.
    - A [REST API](https://support.getgrist.com/api/), [Zapier actions/triggers](https://support.getgrist.com/integrators/#integrations-via-zapier), and support from similar [integrators](https://support.getgrist.com/integrators/).
    - Import/export to Google drive, Excel format, CSV.
    - Link data with [custom widgets](https://support.getgrist.com/widget-custom/#_top), hosted externally.
    - Configurable outgoing webhooks.
  * [Many templates](https://templates.getgrist.com/) to get you started, from investment research to organizing treasure hunts.
  * Access control options.
    - (You&#039;ll need SSO logins set up to make use of these options; [`grist-omnibus`](https://github.com/gristlabs/grist-omnibus) has a prepackaged solution if configuring this feels daunting)
    - Share [individual documents](https://support.getgrist.com/sharing/), workspaces, or [team sites](https://support.getgrist.com/team-sharing/).
    - Control access to [individual rows, columns, and tables](https://support.getgrist.com/access-rules/).
    - Control access based on cell values and user attributes.
  * Self-maintainable.
    - Useful for intranet operation and specific compliance requirements.
  * Sandboxing options for untrusted documents.
    - On Linux or with Docker, you can enable [gVisor](https://github.com/google/gvisor) sandboxing at the individual document level.
    - On macOS, you can use native sandboxing.
    - On any OS, including Windows, you can use a wasm-based sandbox.
  * Translated to many languages.
  * `F1` key brings up some quick help. This used to go without saying, but in general Grist has good keyboard support.
  * We post progress on [ùïè or Twitter or whatever](https://twitter.com/getgrist) and publish [monthly newsletters](https://support.getgrist.com/newsletters/).

If you are curious about where Grist is heading, see [our roadmap](https://github.com/gristlabs/grist-core/projects/1), drop a question in [our forum](https://community.getgrist.com), or browse [our extensive documentation](https://support.getgrist.com).

## Features not in `grist-core`

If you evaluate Grist by using the hosted version at [getgrist.com](https://getgrist.com), be aware that it includes some extensions to Grist that aren&#039;t present in `grist-core`. To be sure you&#039;re seeing exactly what is present in `grist-core`, you can run the [desktop app](https://github.com/gristlabs/grist-desktop), or use [`docker`](#using-grist). Here is a list of features you may see in Grist Labs&#039; hosting or Enterprise offerings that are not in `grist-core`, in chronological order of creation. If self-hosting, you can get access to a free trial of all of them using the Enterprise toggle on the [Admin Panel](https://support.getgrist.com/admin-panel/).

  * [GristConnect](https://support.getgrist.com/install/grist-connect/) (2022)
    - Any site that has plugins for letting Discourse use its logins (such as WordPress) can also let Grist use its logins.
    - GristConnect is a niche feature built for a specific client which you probably don&#039;t care about ‚Äì `OIDC` and `SAML` support *is* part of `grist-core` and covers most authentication use cases.
  * [Azure back-end for document storage](https://support.getgrist.com/install/cloud-storage/#azure) (2022)
    - With `grist-core` you can store document versions in anything S3-compatible, which covers a lot of services, but not Azure specifically. The Azure back-end fills that gap.
    - Unless you are a Microsoft shop you probably don&#039;t care about this.
  * [Audit log streaming](https://support.getgrist.com/install/audit-log-streaming/) (2024)
    - With `grist-core` a lot of useful information is logged, but not organized specifically with auditing in mind. Audit log streaming supplies that organization, and a UI for setting things up.
    - Enterprises may care about this.
  * [Advanced Admin Controls](https://support.getgrist.com/admin-controls/) (2025)
    - This is a special page for a Grist installation administrator to monitor and edit user access to resources.
	- It uses a special set of administrative endpoints not present on `grist-core`.
	- If you&#039;re going to be running a large Grist installation, with employees coming and going, you may care about this.
  * [Grist Assistant](https://support.getgrist.com/assistant/#assistant) (2025)
    - An AI Formula Assistant - limited to working with formulas - is present in `grist-core`, but the newer Assistant can help with a wider range of tasks like building tables and dashboards and modifying data.
    - If you have many users who need help building documents or working with data, you may care about this one.
  * [Invite Notifications](https://support.getgrist.com/self-managed/#how-do-i-set-up-email-notifications) (2025)
    - When a user is added to a document, or a workspace, or a site, with email notifications they will get emailed a link to access the resource.
	- This link isn&#039;t special, with `grist-core` you can just send a link yourself or a colleague.
	- For a big Grist installation with users who aren&#039;t in close communication, emails might be nice? Hard to guess if you&#039;ll care about this one.
  * Document Change and Comment Notifications (2025)
    - You can achieve change notifications in `grist-core` using webhooks, but it is less convenient.
	- People have been asking for this one for years. If you need an excuse to get your boss to pay for Grist, this might finally be the one that works?

## Using Grist

To get the default version of `grist-core` running on your computer
with [Docker](https://www.docker.com/get-started), do:

```sh
docker pull gristlabs/grist
docker run -p 8484:8484 -it gristlabs/grist
```

Then visit `http://localhost:8484` in your browser. You&#039;ll be able to create, edit, import,
and export documents. To preserve your work across docker runs, share a directory as `/persist`:

```sh
docker run -p 8484:8484 -v $PWD/persist:/persist -it gristlabs/grist
```

Get templates at [templates.getgrist.com](https://templates.getgrist.com) for payroll,
inventory management, invoicing, D&amp;D encounter tracking, and a lot
more, or use any document you&#039;ve created on
[docs.getgrist.com](https://docs.getgrist.com).

If you need to change the port Grist runs on, set a `PORT` variable, don&#039;t just change the
port mapping:

```
docker run --env PORT=9999 -p 9999:9999 -v $PWD/persist:/persist -it gristlabs/grist
```

To enable gVisor sandboxing, set `--env GRIST_SANDBOX_FLAVOR=gvisor`.
This should work with default docker settings, but may not work in all
environments.

You can find a lot more about configuring Grist, setting up authentication,
and running it on a public server in our
[Self-Managed Grist](https://support.getgrist.com/self-managed/) handbook.

## Using Grist with OpenRouter for Model Agnostic and Claude Support

(Instructions contributed by @lshalon)

Grist&#039;s AI Formula Assistant can be configured to use OpenRouter instead of connecting directly to OpenAI, allowing you to access a wide range of AI models including Anthropic&#039;s Claude models. This isn&#039;t the only way to use Claude models, but it&#039;s a good option if you want to use Claude models with Grist or intend to use other cheaper, faster, or potentially newer models. That&#039;s because this configuration gives you more flexibility in choosing the AI model that works best for your formula generation needs.
To set up OpenRouter integration, configure the following environment variables:

### Required: Set the endpoint to OpenRouter&#039;s API

```
ASSISTANT_CHAT_COMPLETION_ENDPOINT=https://openrouter.ai/api/v1/chat/completions
```

### Required: Your OpenRouter API key

```
ASSISTANT_API_KEY=your_openrouter_api_key_here
```

Sign up for an OpenRouter API key at &lt;https://openrouter.ai/&gt;

### Optional: Specify which model to use (examples below)

```
ASSISTANT_MODEL=anthropic/claude-3.7-sonnet
```

### or other options like

```
ASSISTANT_MODEL=deepseek/deepseek-r1-zero:free
```

```
ASSISTANT_MODEL=qwen/qwq-32b:free
```

```
ASSISTANT_MODEL=mistralai/mistral-saba
```

### Optional: Set a larger context model for fallback

```
ASSISTANT_LONGER_CONTEXT_MODEL=anthropic/claude-3-opus-20240229
```

With this configuration, Grist&#039;s AI Formula Assistant will route requests through OpenRouter to your specified model. This allows you to:

Access Anthropic&#039;s Claude models which excel at understanding context and generating accurate formulas
Switch between different AI models without changing your Grist configuration
Take advantage of OpenRouter&#039;s routing capabilities to optimize for cost, speed, or quality

You can find the available models and their identifiers on the OpenRouter website.
Note: Make sure not to set the OPENAI_API_KEY variable when using OpenRouter, as this would override the OpenRouter configuration.


## Available Docker images

The default Docker image is `gristlabs/grist`. This contains all of
the standard Grist functionality, as well as extra source-available
code for enterprise customers taken from the
[grist-ee](https://github.com/gristlabs/grist-ee) repository. This
extra code is not under a free or open source license. By default,
however, the code from the `grist-ee` repository is completely inert
and inactive. This code becomes active only when enabled from the
administrator panel.

If you would rather use an image that contains exclusively free and
open source code, the `gristlabs/grist-oss` Docker image is available
for this purpose. It is by default functionally equivalent to the
`gristlabs/grist` image.

## The administrator panel

You can turn on a special admininistrator panel to inspect the status
of your installation. Just visit `/admin` on your Grist server for
instructions. Since it is useful for the admin panel to be
available even when authentication isn&#039;t set up, you can give it a
special access key by setting `GRIST_BOOT_KEY`.

```
docker run -p 8484:8484 -e GRIST_BOOT_KEY=secret -it gristlabs/grist
```

The boot page should then be available at
`/admin?boot-key=&lt;GRIST_BOOT_KEY&gt;`. We are collecting probes for
common problems there. If you hit a problem that isn&#039;t covered, it
would be great if you could add a probe for it in
[BootProbes](https://github.com/gristlabs/grist-core/blob/main/app/server/lib/BootProbes.ts).
You may instead file an issue so someone else can add it.

## Building from source

To build Grist from source, follow these steps:

    yarn install
    yarn run build
    yarn run install:python
    yarn start
    # Grist will be available at http://localhost:8484/

Grist formulas in documents will be run using Python executed directly on your
machine. You can configure sandboxing using a `GRIST_SANDBOX_FLAVOR`
environment variable.

 * On macOS, `export GRIST_SANDBOX_FLAVOR=macSandboxExec`
   uses the native `sandbox-exec` command for sandboxing.
 * On Linux with [gVisor&#039;s runsc](https://github.com/google/gvisor)
   installed, `export GRIST_SANDBOX_FLAVOR=gvisor` is an option.
 * On any OS including Windows, `export GRIST_SANDBOX_FLAVOR=pyodide` is available.

These sandboxing methods have been written for our own use at Grist Labs and
may need tweaking to work in your own environment - pull requests
very welcome here!

## Logins

Like git, Grist has features to track document revision history. So for full operation,
Grist expects to know who the user modifying a document is. Until it does, it operates
in a limited anonymous mode. To get you going, the docker image is configured so that
when you click on the &quot;sign in&quot; button Grist will attribute your work to `you@example.com`.
Change this by setting `GRIST_DEFAULT_EMAIL`:

```
docker run --env GRIST_DEFAULT_EMAIL=my@email -p 8484:8484 -v $PWD/persist:/persist -it gristlabs/grist
```

You can change your name in `Profile Settings` in
the [User Menu](https://support.getgrist.com/glossary/#user-menu).

For multi-user operation, or if you wish to access Grist across the
public internet, you&#039;ll want to connect it to your own Single Sign-On service.
There are a lot of ways to do this, including [SAML and forward authentication](https://support.getgrist.com/self-managed/#how-do-i-set-up-authentication).
Grist has been tested with [Authentik](https://goauthentik.io/), [Auth0](https://auth0.com/),
and Google/Microsoft sign-ins via [Dex](https://dexidp.io/).

## Translations

We use [Weblate](https://hosted.weblate.org/engage/grist/) to manage translations.
Thanks to everyone who is pitching in. Thanks especially to the ANCT developers who
did the hard work of making a good chunk of the application localizable. Merci beaucoup !

&lt;a href=&quot;https://hosted.weblate.org/engage/grist/&quot;&gt;
&lt;img src=&quot;https://hosted.weblate.org/widgets/grist/-/open-graph.png&quot; alt=&quot;Translation status&quot; width=480 /&gt;
&lt;/a&gt;

[![Translation detail](https://hosted.weblate.org/widgets/grist/-/multi-green.svg)](https://hosted.weblate.org/engage/grist/)

## Why free and open source software

This repository, `grist-core`, is maintained by Grist Labs. Our flagship product available at [getgrist.com](https://www.getgrist.com) is built from the code you see here, combined with business-specific software designed to scale to many users, handle billing, etc.

Grist Labs is an open-core company. We offer Grist hosting as a service, with free and paid plans. We also develop and sell features related to Grist using a proprietary license, targeted at the needs of enterprises with large self-managed installations.

We see data portability and autonomy as a key value, and `grist-core` is an essential part of that. We are committed to maintaining and improving the `grist-core` codebase, and to be thoughtful about how proprietary offerings impact data portability and autonomy.

By opening its source code and offering an [OSI](https://opensource.org/)-approved free license, Grist benefits its users:

- **Developer community.** The freedom to examine source code, make bug fixes, and develop
  new features is a big deal for a general-purpose spreadsheet-like product, where there is a
  very long tail of features vital to someone somewhere.
- **Increased trust.** Because anyone can examine the source code, &amp;ldquo;security by obscurity&amp;rdqu

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[NangoHQ/nango]]></title>
            <link>https://github.com/NangoHQ/nango</link>
            <guid>https://github.com/NangoHQ/nango</guid>
            <pubDate>Wed, 03 Sep 2025 00:04:33 GMT</pubDate>
            <description><![CDATA[A single API for all your integrations.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/NangoHQ/nango">NangoHQ/nango</a></h1>
            <p>A single API for all your integrations.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 5,742</p>
            <p>Forks: 538</p>
            <p>Stars today: 20 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

&lt;img src=&quot;/assets/nango-logo.png?raw=true&quot; width=&quot;350&quot;&gt;

&lt;/div&gt;

&lt;h1 align=&quot;center&quot;&gt;One platform for all your integrations.&lt;/h1&gt;

&lt;div align=&quot;center&quot;&gt;
Ship integrations fast. Maintain full control.
&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://docs.nango.dev/&quot; rel=&quot;dofollow&quot;&gt;&lt;strong&gt;Explore the docs ¬ª&lt;/strong&gt;&lt;/a&gt;
    &lt;br /&gt;

  &lt;br/&gt;
    &lt;a href=&quot;https://nango.dev/integrations&quot;&gt;400+ pre-configured APIs&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://nango.dev&quot;&gt;Website&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://docs.nango.dev/guides/api-authorization/new-api-support&quot;&gt;Contribute an API&lt;/a&gt;
    ¬∑
    &lt;a href=&quot;https://nango.dev/slack&quot;&gt;Slack Community&lt;/a&gt;
&lt;/p&gt;

Nango is a single API to interact with all other external APIs. It should be the only API you need to integrate to your app.

&lt;img src=&quot;/docs-v2/images/overview.png&quot;&gt;

# üì∫ Demo video

[![what-is-nango](/docs-v2/images/video-thumbnail.png)](https://youtu.be/oTpWlmnv7dM)

# üë©‚Äçüíª Sample code

Initiate a new OAuth flow from your frontend:

```js
nango.openConnectUI();
```

Get structured objects from external APIs from your backend:

```ts
nango.listRecords&lt;GithubIssue&gt;({
    providerConfigKey: &#039;github&#039;,
    connectionId: &#039;user123&#039;,
    model: &#039;GithubIssue&#039;,
});
```

# üë©üèª‚Äçüîß Pre-built and custom integrations

Nango&#039;s flexibility ensures it supports any API integration:

1. **Pre-built integrations**: Utilize pre-built integrations for popular APIs and standard use-cases to ship fast.
2. **Custom integrations**: Build your own integrations in code with limitless customization capabilities.
3. **Managed integrations**: Leverage Nango experts to create and maintain your integrations end-to-end.

# üîå 400+ pre-built APIs &amp; integrations, or build your own!

[Over 400 APIs are pre-configured](https://nango.dev/integrations) to work right out of the box. We support 25+ categories such:

- **Accounting**: Netsuite, Quickbooks, Xero, ...
- **Communications**: Slack, Discord, Teams, ...
- **CRMs**: Hubspot, Salesforce, ...
- **Emails**: Gmails, Outlook, ...
- **HR**: Deel, Gusto, BambooHR, Personio, ...
- **Identity**: Okta, Auth0, ...
- **Knowledge Bases**: Notion, Drive, ...
- **Ticketing**: Linear, Jira, ...
- **Support**: Zendesk, ...
- **Video**: Zoom, Google Meet, ...
- and [many more](https://nango.dev/integrations)

But remember, Nango can work with **any API and any use-case**!

# üöÄ Get started

Sign up for free:

&lt;a href=&quot;https://app.nango.dev/signup&quot; target=&quot;_blank&quot;&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/NangoHQ/nango/6f49ab92c0ffc18c1d0f44d9bd96c62ac97aaa8d/docs/static/img/nango-deploy-button.svg&quot; alt=&quot;Try Nango Cloud&quot; width=&quot;215&quot;/&gt;
&lt;/a&gt;

# üôã‚Äç‚ôÄÔ∏è Why is Nango open-source?

Our mission is to enable all SaaS to seamlessly integrate together. By being open source, every engineer can contribute improvements to the platform for everyone:

- [Contribute an API](https://docs.nango.dev/guides/api-authorization/new-api-support)
- [Create a custom integration](https://docs.nango.dev/guides/custom-integrations/overview)
- [Extend an integration template](https://docs.nango.dev/guides/custom-integrations/extend-a-pre-built-integration)

# üìö Learn more

- [Learn how to integrate Nango](https://docs.nango.dev/integrate/overview)
- [Asks questions on the community](https://nango.dev/slack)
- [Book a demo](https://calendly.com/rguldener/30min)

# üí™ Contributors

Thank you for continuously making Nango better ‚ù§Ô∏è

&lt;a href=&quot;https://github.com/nangohq/nango/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=nangohq/nango&quot; /&gt;
&lt;/a&gt;

# üêª History

Pizzly (a simple service for OAuth) was initially developed by the team at [Bearer](https://www.bearer.com/?ref=pizzly) with contributions of more than 40 individuals. Over time the focus of Bearer shifted and they could no longer maintain Pizzly. In late 2022 the team at [Nango](https://www.nango.dev) adopted the project and has since maintained and evolved it together with the growing Nango community.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[codexu/note-gen]]></title>
            <link>https://github.com/codexu/note-gen</link>
            <guid>https://github.com/codexu/note-gen</guid>
            <pubDate>Wed, 03 Sep 2025 00:04:32 GMT</pubDate>
            <description><![CDATA[A cross-platform Markdown AI note-taking software.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/codexu/note-gen">codexu/note-gen</a></h1>
            <p>A cross-platform Markdown AI note-taking software.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 8,828</p>
            <p>Forks: 576</p>
            <p>Stars today: 210 stars today</p>
            <h2>README</h2><pre># NoteGen

![](https://img.shields.io/badge/free-pricing?logo=free&amp;color=%20%23155EEF&amp;label=pricing&amp;labelColor=%20%23528bff)
[![GitHub Repo stars](https://img.shields.io/github/stars/codexu/note-gen)](https://github.com/codexu/note-gen)
[![](https://gitcode.com/codexu/note-gen/star/badge.svg)](https://gitcode.com/codexu/note-gen)
![](https://github.com/codexu/note-gen/actions/workflows/release.yml/badge.svg?branch=release)
[![Netlify Status](https://api.netlify.com/api/v1/badges/8f7518c3-b627-4277-bc2f-e477960f5dc4/deploy-status)](https://app.netlify.com/projects/note-gen-docs/deploys)
![](https://img.shields.io/github/downloads/codexu/note-gen/total)
![](https://img.shields.io/github/issues-closed/codexu/note-gen)

&lt;div&gt;
  &lt;a href=&quot;https://trendshift.io/repositories/12784&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/12784&quot; alt=&quot;codexu%2Fnote-gen | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
  &lt;a href=&quot;https://hellogithub.com/repository/0163cb946dca44cc8905dbe34c2c987b&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://abroad.hellogithub.com/v1/widgets/recommend.svg?rid=0163cb946dca44cc8905dbe34c2c987b&amp;claim_uid=YJ39kIMBz1TGAvc&quot; alt=&quot;FeaturedÔΩúHelloGitHub&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.producthunt.com/products/notegen-2?embed=true&amp;utm_source=badge-featured&amp;utm_medium=badge&amp;utm_source=badge-notegen&amp;#0045;2&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=956348&amp;theme=light&amp;t=1749194675492&quot; alt=&quot;NoteGen - A&amp;#0032;cross&amp;#0045;platform&amp;#0032;Markdown&amp;#0032;note&amp;#0045;taking&amp;#0032;application | Product Hunt&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;

## Guide

üñ•Ô∏è Official Document: [English](https://notegen.top/en/) | [ÁÆÄ‰Ωì‰∏≠Êñá](https://notegen.top/cn/)

üí¨ Join [WeChat/QQ Group](https://github.com/codexu/note-gen/discussions/110), [Discord](https://discord.gg/SXyVZGpbpk), [Telegram](https://t.me/notegen)

NoteGen is a cross-platform `Markdown` note-taking application dedicated to using AI to bridge recording and writing, organizing fragmented knowledge into a readable note.

![](https://s2.loli.net/2025/06/13/UbVGPrhFl3etnQz.png)

## Why Choose NoteGen?

- Lightweight: [Installation package](https://github.com/codexu/note-gen/releases) is **only 20MB**, free with no ads or bundled software.
- Cross-platform capabilities of `Tauri2`, it supports Windows, MacOS, Linux, iOS, and Android, and it supports free multi-device data synchronization.
- Supports multiple recording methods including `screenshots`, `text`, `illustrations`, `files`, `links`, etc., meeting fragmented recording needs across various scenarios.
- Native `Markdown(.md)` as storage format, no modifications, easy to migrate.
- Native offline usage, supporting real-time synchronization to `GitHub, Gitee private repositories` with history rollback, and WebDAV synchronization.
- AI-enhanced: Configurable with ChatGPT, Gemini, Ollama, LM Studio, Grok, and other models, with support for custom third-party model configuration.
- RAG: Your notes are your knowledge base. Support embedding models and reranking models.

## How to Use?

### Download

Currently supports Mac, Windows, and Linux. Thanks to Tauri2&#039;s cross-platform capabilities, it will support iOS and Android in the future.

| Windows | MacOS | Linux | Android | iOS |
| --- | --- | --- | --- | --- |
| ‚úÖ beta | ‚úÖ beta | ‚úÖ beta | üõ†Ô∏è alpha | üõ†Ô∏è alpha |
| [Download](https://notegen.top/en/docs/download#desktop-beta) | [Download](https://notegen.top/en/docs/download#desktop-beta) | [Download](https://notegen.top/en/docs/download#desktop-beta) | [Download](https://notegen.top/en/docs/download#android) | Self-compiled |

&gt; [UpgradeLink offers application upgrade and download services](http://upgrade.toolsetlink.com/upgrade/example/tauri-example.html)

### Enhancement

The note-taking application can be used directly without configuration. If you want a better experience, please open the settings page to configure AI and synchronization.

[Read settings guide](https://notegen.top/en/settings/sync.html)

## From Recording to Writing

Conventional note-taking applications typically don&#039;t provide recording functionality. Users need to manually copy and paste content for recording, which greatly reduces efficiency. When faced with scattered recorded content, it requires significant effort to organize.

NoteGen is divided into `Recording` and `Writing` pages, with the following relationship:

- Recordings can be organized into notes and transferred to the writing page for in-depth composition.
- During writing, you can insert recordings at any time.

### Recording

The recording function is similar to an **AI chatbot**, but when conversing with it, you can associate it with previously recorded content, switching from conversation mode to organization mode to arrange recordings into a readable note.

The following auxiliary features can help you record more effectively:

- **Tags** to distinguish different recording scenarios.
- **Personas** with support for custom prompts to precisely control your AI assistant.
- **Clipboard Assistant** that automatically recognizes text or images in your clipboard and records them to your list.

### Writing

The writing section is divided into two parts: **File Manager** and **Markdown Editor**.

**File Manager**

- Supports management of local Markdown files and GitHub synchronized files.
- Supports unlimited directory hierarchy.
- Supports multiple sorting methods.

**Markdown Editor**

- Supports WYSIWYG, instant rendering, and split-screen preview modes.
- Supports version control with history rollback.
- Supports AI assistance for conversation, continuation, polishing, and translation functions.
- Supports image hosting, uploading images and converting them to Markdown image links.
- Supports HTML to Markdown conversion, automatically converting copied browser content to Markdown format.
- Supports outlines, math formulas, mind maps, charts, flowcharts, Gantt charts, sequence diagrams, staves, multimedia, voice reading, title anchors, code highlighting and copying, graphviz rendering, and plantuml UML diagrams.
- Supports real-time local content saving, delayed (10s without editing) automatic synchronization, and history rollback.

## Other Features

- Global search for quickly finding and jumping to specific content.
- Image hosting management for convenient management of image repository content.
- Themes and appearance with support for dark themes and appearance settings for Markdown, code, etc.
- Internationalization support, currently available in Chinese and English.

## Contribute

- [Read contribution guide](https://notegen.top/en/docs/contributing)
- [Update plans](https://github.com/codexu/note-gen/issues/46)
- [Submit bugs or improvement suggestions](https://github.com/codexu/note-gen/issues)
- [Discussions](https://github.com/codexu/note-gen/discussions)

## Contributors

&lt;a href=&quot;https://github.com/codexu/note-gen/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=codexu/note-gen&quot; /&gt;
&lt;/a&gt;

## Sponsors

&lt;div&gt;
  &lt;a href=&quot;https://cloud.siliconflow.cn/i/O2ciJeZw&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://s2.loli.net/2025/06/11/65TLRh813e2YFzr.png&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://www.qiniu.com/products/ai-token-api?utm_source=NoteGen&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://s2.loli.net/2025/06/11/OKJq542lTs7U9xg.png&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;http://upgrade.toolsetlink.com/upgrade/example/tauri-example.html&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://s2.loli.net/2025/06/11/r2dqNIWVXp4RaFe.png&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://share.302.ai/jfFrIP&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://s2.loli.net/2025/07/01/dPlkU1tejnDyV4S.png&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=codexu/note-gen&amp;type=Date)](https://www.star-history.com/#codexu/note-gen&amp;Date)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[clash-verge-rev/clash-verge-rev]]></title>
            <link>https://github.com/clash-verge-rev/clash-verge-rev</link>
            <guid>https://github.com/clash-verge-rev/clash-verge-rev</guid>
            <pubDate>Wed, 03 Sep 2025 00:04:31 GMT</pubDate>
            <description><![CDATA[A modern GUI client based on Tauri, designed to run in Windows, macOS and Linux for tailored proxy experience]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/clash-verge-rev/clash-verge-rev">clash-verge-rev/clash-verge-rev</a></h1>
            <p>A modern GUI client based on Tauri, designed to run in Windows, macOS and Linux for tailored proxy experience</p>
            <p>Language: TypeScript</p>
            <p>Stars: 72,982</p>
            <p>Forks: 5,492</p>
            <p>Stars today: 165 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;
  &lt;img src=&quot;./src-tauri/icons/icon.png&quot; alt=&quot;Clash&quot; width=&quot;128&quot; /&gt;
  &lt;br&gt;
  Continuation of &lt;a href=&quot;https://github.com/zzzgydi/clash-verge&quot;&gt;Clash Verge&lt;/a&gt;
  &lt;br&gt;
&lt;/h1&gt;

&lt;h3 align=&quot;center&quot;&gt;
A Clash Meta GUI based on &lt;a href=&quot;https://github.com/tauri-apps/tauri&quot;&gt;Tauri&lt;/a&gt;.
&lt;/h3&gt;

## Preview

| Dark                             | Light                             |
| -------------------------------- | --------------------------------- |
| ![È¢ÑËßà](./docs/preview_dark.png) | ![È¢ÑËßà](./docs/preview_light.png) |

## Install

ËØ∑Âà∞ÂèëÂ∏ÉÈ°µÈù¢‰∏ãËΩΩÂØπÂ∫îÁöÑÂÆâË£ÖÂåÖÔºö[Release page](https://github.com/clash-verge-rev/clash-verge-rev/releases)&lt;br&gt;
Go to the [Release page](https://github.com/clash-verge-rev/clash-verge-rev/releases) to download the corresponding installation package&lt;br&gt;
Supports Windows (x64/x86), Linux (x64/arm64) and macOS 10.15+ (intel/apple).

#### ÊàëÂ∫îÂΩìÊÄéÊ†∑ÈÄâÊã©ÂèëË°åÁâà

| ÁâàÊú¨      | ÁâπÂæÅ                                     | ÈìæÊé•                                                                                   |
| :-------- | :--------------------------------------- | :------------------------------------------------------------------------------------- |
| Stable    | Ê≠£ÂºèÁâàÔºåÈ´òÂèØÈù†ÊÄßÔºåÈÄÇÂêàÊó•Â∏∏‰ΩøÁî®„ÄÇ         | [Release](https://github.com/clash-verge-rev/clash-verge-rev/releases)                 |
| Alpha     | Êó©ÊúüÊµãËØïÁâàÔºåÂäüËÉΩÊú™ÂÆåÂñÑÔºåÂèØËÉΩÂ≠òÂú®Áº∫Èô∑„ÄÇ   | [Alpha](https://github.com/clash-verge-rev/clash-verge-rev/releases/tag/alpha)         |
| AutoBuild | ÊªöÂä®Êõ¥Êñ∞ÁâàÔºåÊåÅÁª≠ÈõÜÊàêÊõ¥Êñ∞ÔºåÈÄÇÂêàÂºÄÂèëÊµãËØï„ÄÇ | [AutoBuild](https://github.com/clash-verge-rev/clash-verge-rev/releases/tag/autobuild) |

#### ÂÆâË£ÖËØ¥ÊòéÂíåÂ∏∏ËßÅÈóÆÈ¢òÔºåËØ∑Âà∞ [ÊñáÊ°£È°µ](https://clash-verge-rev.github.io/) Êü•Áúã

---

### TG È¢ëÈÅì: [@clash_verge_rev](https://t.me/clash_verge_re)

## Promotion

#### [ÁãóÁãóÂä†ÈÄü ‚Äî‚Äî ÊäÄÊúØÊµÅÊú∫Âú∫ Doggygo VPN](https://verge.dginv.click/#/register?code=oaxsAGo6)

- È´òÊÄßËÉΩÊµ∑Â§ñÊú∫Âú∫ÔºåÂÖçË¥πËØïÁî®Ôºå‰ºòÊÉ†Â•óÈ§êÔºåËß£ÈîÅÊµÅÂ™í‰ΩìÔºåÂÖ®ÁêÉÈ¶ñÂÆ∂ÊîØÊåÅ Hysteria ÂçèËÆÆ„ÄÇ
- ‰ΩøÁî® Clash Verge ‰∏ìÂ±ûÈÇÄËØ∑ÈìæÊé•Ê≥®ÂÜåÈÄÅ 3 Â§©ÔºåÊØèÂ§© 1G ÊµÅÈáèÂÖçË¥πËØïÁî®Ôºö[ÁÇπÊ≠§Ê≥®ÂÜå](https://verge.dginv.click/#/register?code=oaxsAGo6)
- Clash Verge ‰∏ìÂ±û 8 Êäò‰ºòÊÉ†Á†Å: verge20 (‰ªÖÊúâ 500 ‰ªΩ)
- ‰ºòÊÉ†Â•óÈ§êÊØèÊúà‰ªÖÈúÄ 15.8 ÂÖÉÔºå160G ÊµÅÈáèÔºåÂπ¥‰ªò 8 Êäò
- Êµ∑Â§ñÂõ¢ÈòüÔºåÊó†Ë∑ëË∑ØÈ£éÈô©ÔºåÈ´òËææ 50% Ëøî‰Ω£
- ÈõÜÁæ§Ë¥üËΩΩÂùáË°°ËÆæËÆ°ÔºåÈ´òÈÄü‰∏ìÁ∫ø(ÂÖºÂÆπËÄÅÂÆ¢Êà∑Á´Ø)ÔºåÊûÅ‰ΩéÂª∂ËøüÔºåÊó†ËßÜÊôöÈ´òÂ≥∞Ôºå4K ÁßíÂºÄ
- ÂÖ®ÁêÉÈ¶ñÂÆ∂ Hysteria ÂçèËÆÆÊú∫Âú∫ÔºåÁé∞Â∑≤‰∏äÁ∫øÊõ¥Âø´ÁöÑ `Hysteria2` ÂçèËÆÆ(Clash Verge ÂÆ¢Êà∑Á´ØÊúÄ‰Ω≥Êê≠ÈÖç)
- Ëß£ÈîÅÊµÅÂ™í‰ΩìÂèä ChatGPT
- ÂÆòÁΩëÔºö[https://ÁãóÁãóÂä†ÈÄü.com](https://verge.dginv.click/#/register?code=oaxsAGo6)

#### Êú¨È°πÁõÆÁöÑÊûÑÂª∫‰∏éÂèëÂ∏ÉÁéØÂ¢ÉÁî± [YXVM](https://yxvm.com/aff.php?aff=827) Áã¨Á´ãÊúçÂä°Âô®ÂÖ®ÂäõÊîØÊåÅÔºå

ÊÑüË∞¢Êèê‰æõ Áã¨‰∫´ËµÑÊ∫ê„ÄÅÈ´òÊÄßËÉΩ„ÄÅÈ´òÈÄüÁΩëÁªú ÁöÑÂº∫Â§ßÂêéÁ´ØÁéØÂ¢É„ÄÇÂ¶ÇÊûú‰Ω†ËßâÂæó‰∏ãËΩΩÂ§üÂø´„ÄÅ‰ΩøÁî®Â§üÁàΩÔºåÈÇ£ÊòØÂõ†‰∏∫Êàë‰ª¨Áî®‰∫ÜÂ•ΩÊúçÂä°Âô®ÔºÅ

üß© YXVM Áã¨Á´ãÊúçÂä°Âô®‰ºòÂäøÔºö

- üåé ‰ºòË¥®ÁΩëÁªúÔºåÂõûÁ®ã‰ºòÂåñÔºå‰∏ãËΩΩÂø´Âà∞È£ûËµ∑
- üîß Áâ©ÁêÜÊú∫Áã¨‰∫´ËµÑÊ∫êÔºåÈùûVPSÂèØÊØîÔºåÊÄßËÉΩÊãâÊª°
- üß† ÈÄÇÂêàË∑ë‰ª£ÁêÜ„ÄÅÊê≠Âª∫ WEB Á´ô CDN Á´ô „ÄÅÊêû CI/CD Êàñ‰ªª‰ΩïÈ´òË¥üËΩΩÂ∫îÁî®
- üí° ÊîØÊåÅÂç≥ÂºÄÂç≥Áî®ÔºåÂ§öÊú∫ÊàøÈÄâÊã©ÔºåCN2 / IEPL ÂèØÈÄâ
- üì¶ Êú¨È°πÁõÆ‰ΩøÁî®ÈÖçÁΩÆÂ∑≤Âú®ÂîÆÔºåÊ¨¢ËøéÂêåÊ¨æÂÖ•ÊâãÔºÅ
- üéØ ÊÉ≥Ë¶ÅÂêåÊ¨æÊûÑÂª∫‰ΩìÈ™åÔºü[Á´ãÂç≥‰∏ãÂçï YXVM Áã¨Á´ãÊúçÂä°Âô®ÔºÅ](https://yxvm.com/aff.php?aff=827)

## Features

- Âü∫‰∫éÊÄßËÉΩÂº∫Âä≤ÁöÑ Rust Âíå Tauri 2 Ê°ÜÊû∂
- ÂÜÖÁΩÆ[Clash.Meta(mihomo)](https://github.com/MetaCubeX/mihomo)ÂÜÖÊ†∏ÔºåÂπ∂ÊîØÊåÅÂàáÊç¢ `Alpha` ÁâàÊú¨ÂÜÖÊ†∏„ÄÇ
- ÁÆÄÊ¥ÅÁæéËßÇÁöÑÁî®Êà∑ÁïåÈù¢ÔºåÊîØÊåÅËá™ÂÆö‰πâ‰∏ªÈ¢òÈ¢úËâ≤„ÄÅ‰ª£ÁêÜÁªÑ/ÊâòÁõòÂõæÊ†á‰ª•Âèä `CSS Injection`„ÄÇ
- ÈÖçÁΩÆÊñá‰ª∂ÁÆ°ÁêÜÂíåÂ¢ûÂº∫ÔºàMerge Âíå ScriptÔºâÔºåÈÖçÁΩÆÊñá‰ª∂ËØ≠Ê≥ïÊèêÁ§∫„ÄÇ
- Á≥ªÁªü‰ª£ÁêÜÂíåÂÆàÂç´„ÄÅ`TUN(ËôöÊãüÁΩëÂç°)` Ê®°Âºè„ÄÇ
- ÂèØËßÜÂåñËäÇÁÇπÂíåËßÑÂàôÁºñËæë
- WebDav ÈÖçÁΩÆÂ§á‰ªΩÂíåÂêåÊ≠•

### FAQ

Refer to [Doc FAQ Page](https://clash-verge-rev.github.io/faq/windows.html)

### Donation

[ÊçêÂä©Clash Verge RevÁöÑÂºÄÂèë](https://github.com/sponsors/clash-verge-rev)

## Development

See [CONTRIBUTING.md](./CONTRIBUTING.md) for more details.

To run the development server, execute the following commands after all prerequisites for **Tauri** are installed:

```shell
pnpm i
pnpm run prebuild
pnpm dev
```

## Contributions

Issue and PR welcome!

## Acknowledgement

Clash Verge rev was based on or inspired by these projects and so on:

- [zzzgydi/clash-verge](https://github.com/zzzgydi/clash-verge): A Clash GUI based on tauri. Supports Windows, macOS and Linux.
- [tauri-apps/tauri](https://github.com/tauri-apps/tauri): Build smaller, faster, and more secure desktop applications with a web frontend.
- [Dreamacro/clash](https://github.com/Dreamacro/clash): A rule-based tunnel in Go.
- [MetaCubeX/mihomo](https://github.com/MetaCubeX/mihomo): A rule-based tunnel in Go.
- [Fndroid/clash_for_windows_pkg](https://github.com/Fndroid/clash_for_windows_pkg): A Windows/macOS GUI based on Clash.
- [vitejs/vite](https://github.com/vitejs/vite): Next generation frontend tooling. It&#039;s fast!

## License

GPL-3.0 License. See [License here](./LICENSE) for details.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Vanilagy/mediabunny]]></title>
            <link>https://github.com/Vanilagy/mediabunny</link>
            <guid>https://github.com/Vanilagy/mediabunny</guid>
            <pubDate>Wed, 03 Sep 2025 00:04:30 GMT</pubDate>
            <description><![CDATA[Pure TypeScript media toolkit for reading, writing, and converting video and audio files, directly in the browser.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Vanilagy/mediabunny">Vanilagy/mediabunny</a></h1>
            <p>Pure TypeScript media toolkit for reading, writing, and converting video and audio files, directly in the browser.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 1,467</p>
            <p>Forks: 51</p>
            <p>Stars today: 165 stars today</p>
            <h2>README</h2><pre># Mediabunny - JavaScript media toolkit

[![](https://img.shields.io/npm/v/mediabunny)](https://www.npmjs.com/package/mediabunny)
[![](https://img.shields.io/bundlephobia/minzip/mediabunny)](https://bundlephobia.com/package/mediabunny)
[![](https://img.shields.io/npm/dm/mediabunny)](https://www.npmjs.com/package/mediabunny)

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;./docs/public/mediabunny-logo.svg&quot; width=&quot;180&quot; height=&quot;180&quot;&gt;
&lt;/div&gt;

Mediabunny is a JavaScript library for reading, writing, and converting media files (like MP4, WebM, MP3), directly in the browser. It aims to be a complete toolkit for high-performance media operations on the web. It&#039;s written from scratch in pure TypeScript, has zero dependencies, is very performant, and is extremely tree-shakable, meaning you only include what you use. You can think of it a bit like [FFmpeg](https://ffmpeg.org/), but built from the ground up for the web.

[Documentation](https://mediabunny.dev) | [Examples](https://mediabunny.dev/examples) | [Sponsoring](#sponsoring) | [License](#license) | [Discord](https://discord.gg/hmpkyYuS4U)

### Gold sponsors

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://remotion.dev/&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./docs/public/sponsors/remotion.png&quot; width=&quot;60&quot; height=&quot;60&quot; alt=&quot;Remotion&quot;&gt;
  &lt;/a&gt;
  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
  &lt;a href=&quot;https://www.gling.ai/&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./docs/public/sponsors/gling.svg&quot; width=&quot;60&quot; height=&quot;60&quot; alt=&quot;Gling AI&quot;&gt;
  &lt;/a&gt;
  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
  &lt;a href=&quot;https://diffusion.studio/&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./docs/public/sponsors/diffusionstudio.png&quot; width=&quot;60&quot; height=&quot;60&quot; alt=&quot;Diffusion Studio&quot;&gt;
  &lt;/a&gt;
  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
  &lt;a href=&quot;https://kino.ai/&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./docs/public/sponsors/kino.jpg&quot; width=&quot;60&quot; height=&quot;60&quot; alt=&quot;Kino&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;

### Bronze sponsors

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.reactvideoeditor.com/&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./docs/public/sponsors/rve.svg&quot; width=&quot;40&quot; height=&quot;40&quot; alt=&quot;React Video Editor&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;

[Sponsor Mediabunny&#039;s development](https://github.com/sponsors/Vanilagy)

## Features

Core features include:

- **Wide format support**: Read and write MP4, MOV, WebM, MKV, WAVE, MP3, Ogg, ADTS
- **Built-in encoding &amp; decoding**: Supports 25+ video, audio, and subtitle codecs, hardware-accelerated using the WebCodecs API
- **High precision**: Fine-grained, microsecond-accurate reading and writing operations
- **Conversion API**: Easy-to-use API with features such as transmuxing, transcoding, resizing, rotation, resampling, trimming, and more
- **Streaming I/O**: Handle reading &amp; writing files of any size with memory-efficient streaming
- **Tree-shakable**: Only bundle what you use (as small as 5 kB gzipped)
- **Zero dependencies**: Implemented in highly performant TypeScript
- **Cross-platform**: Works in browsers and Node.js

[See full feature list](https://mediabunny.dev/guide/introduction#features)

## Quick start

### Installation

Install it via npm:

```bash
npm install mediabunny
```

Alternatively, include it directly with a script tag using one of the [builds](https://github.com/Vanilagy/mediabunny/releases). Doing so exposes a global `Mediabunny` object.
```html
&lt;script src=&quot;mediabunny.cjs&quot;&gt;&lt;/script&gt;
```

Requires any JavaScript environment that can run ECMAScript 2021 or later. Mediabunny is expected to be run in modern browsers. For types, TypeScript 5.7 or later is required.

### Read file metadata

```js
import { Input, ALL_FORMATS, BlobSource } from &#039;mediabunny&#039;;

const input = new Input({
    source: new BlobSource(file), // Reading from disk
    formats: ALL_FORMATS,
});

const duration = await input.computeDuration(); // in seconds
const videoTrack = await input.getPrimaryVideoTrack();
const audioTrack = await input.getPrimaryAudioTrack();
const { displayWidth, displayHeight, rotation } = videoTrack;
const { sampleRate, numberOfChannels } = audioTrack;
```

### Create new media files

```js
import { Output, Mp4OutputFormat, BufferTarget, CanvasSource, QUALITY_HIGH } from &#039;mediabunny&#039;;

const output = new Output({
    format: new Mp4OutputFormat(),
    target: new BufferTarget(), // Writing to memory
});

// Add a video track backed by a canvas element
const videoSource = new CanvasSource(canvas, {
    codec: &#039;avc&#039;,
    bitrate: QUALITY_HIGH,
});
output.addVideoTrack(videoSource);

await output.start();
// Add frames...
await output.finalize();

const buffer = output.target.buffer; // Final MP4 file
```

### Convert files

```js
import { Input, Output, Conversion, ALL_FORMATS, BlobSource, WebMOutputFormat } from &#039;mediabunny&#039;;

const input = new Input({
    source: new BlobSource(file),
    formats: ALL_FORMATS,
});

const output = new Output({
    format: new WebMOutputFormat(), // Convert to WebM
    target: new BufferTarget(),
});

const conversion = await Conversion.init({ input, output });
await conversion.execute();
```

[See more code snippets](https://mediabunny.dev/guide/quick-start)

## Documentation

Visit the [Docs](https://mediabunny.dev/guide/introduction) for comprehensive guides, examples and API documentation.

## Sponsoring

[See all sponsors](https://mediabunny.dev/#sponsors)

Mediabunny is an open-source project released under the &lt;a href=&quot;https://choosealicense.com/licenses/mpl-2.0/&quot; target=&quot;_blank&quot;&gt;MPL-2.0&lt;/a&gt; and is therefore free to use for any purpose, including closed-source commercial use. A permissive license is essential for a foundational library like this to truly thrive. That said, this project requires an immense amount of work and care to maintain and expand. This is made possible by the generous financial backing of the sponsors of this project.

If you have derived considerable value from this project, please consider [sponsoring it](https://github.com/sponsors/Vanilagy) or providing a one-time donation. Thank you! ü©∑

## License

This project is licensed under the [Mozilla Public License 2.0](https://choosealicense.com/licenses/mpl-2.0/). This is a very permissive weak copyleft license, not much different from the MIT License, allowing you to:
- Use Mediabunny for any purpose, commercial or non-commercial, without royalties
- Use Mediabunny in open- and closed-source projects
- Freely distribute projects built with Mediabunny
- Inspect and modify Mediabunny&#039;s source code

However, you have the following obligation:
- If you modify Mediabunny&#039;s licensed source code (e.g. in a fork) and then distribute it, you must publicly publish your modifications under the Mozilla Public License 2.0.

This ensures that library usage remains permissive for everybody, while any improvements to Mediabunny remain in the open, benefiting everyone.

You are not allowed to:
- Remove the license and copyright headers from any Mediabunny source file
- Claim the &quot;Mediabunny&quot; trademark

And finally, Mediabunny - like any other library - comes with no warranty of any kind and is not liable for any direct or indirect damages.

&gt; This is not legal advice. Refer to the full text of the [Mozilla Public License 2.0](https://choosealicense.com/licenses/mpl-2.0/) for the binding license agreement.

## Implementation &amp; development

Mediabunny is implemented from scratch in pure TypeScript with zero dependencies. At its core, the library is a collection of multiplexers and demultiplexers (one for every container format), which are then connected together via abstractions around the WebCodecs API. The logic is heavily pipelined and lazy, keeping performance high and memory usage low. If this stuff interests you, refer to the [Technical overview](https://mediabunny.dev/guide/introduction#technical-overview) for more.

For development, clone this repository and install it using a modern version of Node.js and npm. The build system uses TypeScript, esbuild, API Extractor, Vite, and VitePress.

```bash
npm install # Install dependencies
npm run watch # Build bundles on watch mode

npm run build # Production build with type definitions

npm run check # Type checking
npm run lint # ESLint

npm run docs:dev # Start docs development server
npm run dev # Start examples development server

npm run docs:build # Build docs and examples
```</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[activepieces/activepieces]]></title>
            <link>https://github.com/activepieces/activepieces</link>
            <guid>https://github.com/activepieces/activepieces</guid>
            <pubDate>Wed, 03 Sep 2025 00:04:29 GMT</pubDate>
            <description><![CDATA[AI Agents & MCPs & AI Workflow Automation ‚Ä¢ (280+ MCP servers for AI agents) ‚Ä¢ AI Automation / AI Agent with MCPs ‚Ä¢ AI Workflows & AI Agents ‚Ä¢ MCPs for AI Agents]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/activepieces/activepieces">activepieces/activepieces</a></h1>
            <p>AI Agents & MCPs & AI Workflow Automation ‚Ä¢ (280+ MCP servers for AI agents) ‚Ä¢ AI Automation / AI Agent with MCPs ‚Ä¢ AI Workflows & AI Agents ‚Ä¢ MCPs for AI Agents</p>
            <p>Language: TypeScript</p>
            <p>Stars: 17,246</p>
            <p>Forks: 2,479</p>
            <p>Stars today: 252 stars today</p>
            <h2>README</h2><pre>
&lt;h1 align=&quot;center&quot;&gt;
  &lt;a
    target=&quot;_blank&quot;
    href=&quot;https://activepieces.com&quot;
  &gt;
    &lt;img
      align=&quot;center&quot;
      alt=&quot;Activepieces&quot;
src=&quot;https://github.com/activepieces/activepieces/assets/1812998/76c97441-c285-4480-bc75-30a0c73ed340&quot;
      style=&quot;width:100%;&quot;
    /&gt;
    
  &lt;/a&gt;
&lt;/h1&gt;


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;/LICENSE&quot; target=&quot;_blank&quot;&gt;&lt;img src=&#039;https://img.shields.io/badge/license-MIT-green?style=for-the-badge&#039; /&gt;&lt;/a&gt;&amp;nbsp;&lt;img src=&#039;https://img.shields.io/github/commit-activity/w/activepieces/activepieces/main?style=for-the-badge&#039; /&gt;&amp;nbsp;&lt;a href=&#039;https://discord.gg/2jUXBKDdP8&#039;&gt;&lt;img src=&#039;https://img.shields.io/discord/966798490984382485?style=for-the-badge&#039; /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
   An open source replacement for Zapier
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a
    href=&quot;https://www.activepieces.com/docs&quot;
    target=&quot;_blank&quot;
  &gt;&lt;b&gt;Documentation&lt;/b&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;üå™Ô∏è&amp;nbsp;&amp;nbsp;&amp;nbsp;
   &lt;a
    href=&quot;https://www.activepieces.com/docs/developers/overview&quot;
    target=&quot;_blank&quot;
  &gt;&lt;b&gt;Create a Piece&lt;/b&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;üñâ&amp;nbsp;&amp;nbsp;&amp;nbsp;
  &lt;a
    href=&quot;https://www.activepieces.com/docs/install/overview&quot;
    target=&quot;_blank&quot;
  &gt;&lt;b&gt;Deploy&lt;/b&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;üî•&amp;nbsp;&amp;nbsp;&amp;nbsp;
  &lt;a
    href=&quot;https://discord.gg/yvxF5k5AUb&quot;
    target=&quot;_blank&quot;
  &gt;
    &lt;b&gt;Join Discord&lt;/b&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;br&gt;
&lt;br&gt;

# ü§Ø Welcome to Activepieces

All-in-one AI automation designed to be **extensible** through a **type-safe** pieces framework written in **TypeScript**.
When you contribute pieces to Activepieces they become automatically available as MCP servers that you can use with LLMs through Claude Desktop, Cursor or Windsurf!

&lt;br&gt;
&lt;br&gt;

## üî• Why Activepieces is Different:

- **üíñ Loved by Everyone**: Intuitive interface and great experience for both technical and non-technical users with a quick learning curve.

&lt;img src=&quot;/docs/resources/templates.gif&quot;&gt;

- **üåê Open Ecosystem:** All pieces are open source and available on npmjs.com, **60% of the pieces are contributed by the community**.

- **üõ†Ô∏è Largest open source MCP toolkit**: All our pieces (280+) are available as MCP that you can use with LLMs on Claude Desktop, Cursor or Windsurf.

- **üõ†Ô∏è  Pieces are written in Typescript**: Pieces are npm packages in TypeScript, offering full customization with the best developer experience, including **hot reloading** for **local** piece development on your machine. üòé

&lt;img src=&quot;/docs/resources/create-action.png&quot; alt=&quot;&quot;&gt;

- **ü§ñ AI-First**: Native AI pieces let you experiment with various providers, or create your own agents using our AI SDK, and there is Copilot to help you build flows inside the builder.

- **üè¢ Enterprise-Ready**: Developers set up the tools, and anyone in the organization can use the no-code builder. Full customization from branding to control.

- **üîí Secure by Design**: Self-hosted and network-gapped for maximum security and control over your data.

- **üß† Human in the Loop**: Delay execution for a period of time or require approval. These are just pieces built on top of the piece framework, and you can build many pieces like that. üé®

- **üíª Human Input Interfaces**: Built-in support for human input triggers like &quot;Chat Interface&quot; üí¨ and &quot;Form Interface&quot; üìù



## üõ†Ô∏è  Builder Features:

- [x] Loops
- [x] Branches
- [x] Auto Retries
- [x] HTTP
- [x] Code with **NPM**
- [x] ASK AI in Code Piece (Non technical user can clean data without knowing to code)
- [x] Flows are fully versioned.
- [x] Languages Translations
- [x] Customizable Templates
- [X] 200+ Pieces, check https://www.activepieces.com/pieces

**We release updates frequently. Check the product changelog for the latest features.**


## üîå Create Your Own Piece

Activepieces supports integrations with Google Sheets, OpenAI, Discord, RSS, and over 200 other services. [Check out the full list of supported integrations](https://www.activepieces.com/pieces), which is constantly expanding thanks to our community&#039;s contributions.

As an **open ecosystem**, all integration source code is accessible in our repository. These integrations are versioned and [published](https://www.npmjs.com/search?q=%40activepieces) directly to npmjs.com upon contribution.

You can easily create your own integration using our TypeScript framework. For detailed instructions, please refer to our [Contributor&#039;s Guide](https://www.activepieces.com/docs/contributing/overview).

&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;


# License

Activepieces&#039; Community Edition is released as open source under the [MIT license](https://github.com/activepieces/activepieces/blob/main/LICENSE) and enterprise features are released under [Commercial License](https://github.com/activepieces/activepieces/blob/main/packages/ee/LICENSE)


Read more about the feature comparison here https://www.activepieces.com/docs/about/editions
&lt;br&gt;
&lt;br&gt;


# üí≠ Join Our Community

&lt;a href=&quot;https://discord.gg/2jUXBKDdP8&quot; target=&quot;_blank&quot;&gt;
&lt;img src=&quot;https://discordapp.com/api/guilds/966798490984382485/widget.png?style=banner3&quot; alt=&quot;&quot;&gt;
&lt;/a&gt;

&lt;br&gt;
&lt;br&gt;

# üåê Contributions

We welcome contributions big or small and in different directions. The best way to do this is to check this [document](https://www.activepieces.com/docs/contributing/building-pieces/create-action) and we are always up to talk on [our Discord Server](https://discord.gg/2jUXBKDdP8).

## üìö Translations

Not into coding but still interested in contributing? Come join our [Discord](https://discord.gg/2jUXBKDdP8) and visit https://www.activepieces.com/docs/about/i18n for more information.

![fr translation](https://img.shields.io/badge/dynamic/json?color=blue&amp;label=fr&amp;style=for-the-badge&amp;logo=crowdin&amp;query=%24.progress[?(@.data.languageId==%27fr%27)].data.translationProgress&amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json)

![it translation](https://img.shields.io/badge/dynamic/json?color=blue&amp;label=it&amp;style=for-the-badge&amp;logo=crowdin&amp;query=%24.progress[?(@.data.languageId==%27it%27)].data.translationProgress&amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json)

![de translation](https://img.shields.io/badge/dynamic/json?color=blue&amp;label=de&amp;style=for-the-badge&amp;logo=crowdin&amp;query=%24.progress[?(@.data.languageId==%27de%27)].data.translationProgress&amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json)

![ja translation](https://img.shields.io/badge/dynamic/json?color=blue&amp;label=ja&amp;style=for-the-badge&amp;logo=crowdin&amp;query=%24.progress[?(@.data.languageId==%27ja%27)].data.translationProgress&amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json)


![pt-BR translation](https://img.shields.io/badge/dynamic/json?color=blue&amp;label=pt-BR&amp;style=for-the-badge&amp;logo=crowdin&amp;query=%24.progress[?(@.data.languageId==%27pt-BR%27)].data.translationProgress&amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json)


## ü¶´ Contributors

&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt;
&lt;!-- prettier-ignore-start --&gt;
&lt;!-- markdownlint-disable --&gt;
&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/ShahedAlMashni&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/41443850?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;ShahedAlMashni&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ShahedAlMashni&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-ShahedAlMashni&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/AbdulTheActivePiecer&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/106555838?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;AbdulTheActivePiecer&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;AbdulTheActivePiecer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#maintenance-AbdulTheActivePiecer&quot; title=&quot;Maintenance&quot;&gt;üöß&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/khaledmashaly&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/61781545?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Khaled Mashaly&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Khaled Mashaly&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#maintenance-khaledmashaly&quot; title=&quot;Maintenance&quot;&gt;üöß&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/abuaboud&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1812998?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Mohammed Abu Aboud&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mohammed Abu Aboud&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#maintenance-abuaboud&quot; title=&quot;Maintenance&quot;&gt;üöß&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://aboudzein.github.io&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/12976630?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Abdulrahman Zeineddin&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Abdulrahman Zeineddin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-aboudzein&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/creed983&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/62152944?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;ahmad jaber&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ahmad jaber&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-creed983&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/ashrafsamhouri&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/97393596?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;ashrafsamhouri&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ashrafsamhouri&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-ashrafsamhouri&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://steercampaign.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/12627658?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Mohammad Abu Musa&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mohammad Abu Musa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#projectManagement-mabumusa1&quot; title=&quot;Project Management&quot;&gt;üìÜ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/kanarelo&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/393261?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Mukewa Wekalao&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mukewa Wekalao&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-kanarelo&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://osamahaikal.me/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/72370395?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Osama Abdallah Essa Haikal&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Osama Abdallah Essa Haikal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-OsamaHaikal&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/M-Arman&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/54455592?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Arman&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Arman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#security-M-Arman&quot; title=&quot;Security&quot;&gt;üõ°Ô∏è&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/oskarkraemer&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/42745862?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Oskar Kr√§mer&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Oskar Kr√§mer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=oskarkraemer&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://thibpat.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/494686?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Thibaut Patel&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Thibaut Patel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#ideas-tpatel&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;ü§î&lt;/a&gt; &lt;a href=&quot;#plugin-tpatel&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Applesaucesomer&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/18318905?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Applesaucesomer&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Applesaucesomer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#ideas-Applesaucesomer&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;ü§î&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/crazyTweek&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6828237?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;crazyTweek&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;crazyTweek&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#ideas-crazyTweek&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;ü§î&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://linkedin.com/in/muhammad-tabaza&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/23503983?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Muhammad Tabaza&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Muhammad Tabaza&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-m-tabaza&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://shaypunter.co.uk&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/18310437?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Shay Punter&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Shay Punter&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=ShayPunter&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;#plugin-ShayPunter&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/abaza738&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/50132270?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;abaza738&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;abaza738&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-abaza738&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/jonaboe&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/51358680?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Jona Boeddinghaus&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jona Boeddinghaus&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-jonaboe&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/fomojola&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/264253?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;fomojola&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;fomojola&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=fomojola&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/astorozhevsky&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11055414?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Alexander Storozhevsky&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alexander Storozhevsky&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=astorozhevsky&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/J0LGER&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/54769522?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;J0LGER&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;J0LGER&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#security-J0LGER&quot; title=&quot;Security&quot;&gt;üõ°Ô∏è&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://about.me/veverkap&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/22348?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Patrick Veverka&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Patrick Veverka&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/issues?q=author%3Aveverkap&quot; title=&quot;Bug reports&quot;&gt;üêõ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://berksmbl.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10000339?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Berk S√ºmb√ºl&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Berk S√ºmb√ºl&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=berksmbl&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Willianwg&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/51550522?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Willian Guedes&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Willian Guedes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-Willianwg&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/abdullahranginwala&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/19731056?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Abdullah Ranginwala&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Abdullah Ranginwala&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=abdullahranginwala&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/dentych&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2256372?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Dennis Tychsen&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Dennis Tychsen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-dentych&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/MyWay&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1765284?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;MyWay&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;MyWay&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-MyWay&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/bibhuty-did-this&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/28416188?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Bibhuti Bhusan Panda&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Bibhuti Bhusan Panda&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-bibhuty-did-this&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/tarunsamanta2k20&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/55488549?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Tarun Samanta&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tarun Samanta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/issues?q=author%3Atarunsamanta2k20&quot; title=&quot;Bug reports&quot;&gt;üêõ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/herman-kudria-10868b207/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9007211?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Herman Kudria&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Herman Kudria&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-HKudria&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://nulldev.imagefoo.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/66683380?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;[NULL] Dev&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;[NULL] Dev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-Abdallah-Alwarawreh&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/JanHolger&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/25184957?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Jan Bebendorf&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jan Bebendorf&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-JanHolger&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://blog.nileshtrivedi.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/19304?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Nilesh&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Nilesh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-nileshtrivedi&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://certopus.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/40790016?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Vraj Gohil&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Vraj Gohil&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-VrajGohil&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/BastienMe&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/71411115?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;BastienMe&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;BastienMe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-BastienMe&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://blog.fosketts.net&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8627862?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Stephen Foskett&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Stephen Foskett&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=SFoskett&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://ganapati.fr&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/15729117?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Nathan&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Nathan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=asuri0n&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.n-soft.pl&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4056319?v=4?s=100&quot; width=&quot;100px;&quot; alt=

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[a16z-infra/ai-town]]></title>
            <link>https://github.com/a16z-infra/ai-town</link>
            <guid>https://github.com/a16z-infra/ai-town</guid>
            <pubDate>Wed, 03 Sep 2025 00:04:28 GMT</pubDate>
            <description><![CDATA[A MIT-licensed, deployable starter kit for building and customizing your own version of AI town - a virtual town where AI characters live, chat and socialize.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/a16z-infra/ai-town">a16z-infra/ai-town</a></h1>
            <p>A MIT-licensed, deployable starter kit for building and customizing your own version of AI town - a virtual town where AI characters live, chat and socialize.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 8,787</p>
            <p>Forks: 893</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre># AI Town üè†üíªüíå

[Live Demo](https://www.convex.dev/ai-town)

[Join our community Discord: AI Stack Devs](https://discord.gg/PQUmTBTGmT)

&lt;img width=&quot;1454&quot; alt=&quot;Screen Shot 2023-08-14 at 10 01 00 AM&quot; src=&quot;https://github.com/a16z-infra/ai-town/assets/3489963/a4c91f17-23ed-47ec-8c4e-9f9a8505057d&quot;&gt;

AI Town is a virtual town where AI characters live, chat and socialize.

This project is a deployable starter kit for easily building and customizing your own version of AI
town. Inspired by the research paper
[_Generative Agents: Interactive Simulacra of Human Behavior_](https://arxiv.org/pdf/2304.03442.pdf).

The primary goal of this project, beyond just being a lot of fun to work on, is to provide a
platform with a strong foundation that is meant to be extended. The back-end natively supports
shared global state, transactions, and a simulation engine and should be suitable from everything
from a simple project to play around with to a scalable, multi-player game. A secondary goal is to
make a JS/TS framework available as most simulators in this space (including the original paper
above) are written in Python.

## Overview

- üíª [Stack](#stack)
- üß† [Installation](#installation) (cloud, local, Docker, self-host, Fly.io, ...)
- üíªÔ∏è [Windows Pre-requisites](#windows-installation)
- ü§ñ [Configure your LLM of choice](#connect-an-llm) (Ollama, OpenAI, Together.ai, ...)
- üë§ [Customize - YOUR OWN simulated world](#customize-your-own-simulation)
- üë©‚Äçüíª [Deploying to production](#deploy-the-app-to-production)
- üêõ [Troubleshooting](#troubleshooting)

## Stack

- Game engine, database, and vector search: [Convex](https://convex.dev/)
- Auth (Optional): [Clerk](https://clerk.com/)
- Default chat model is `llama3` and embeddings with `mxbai-embed-large`.
- Local inference: [Ollama](https://github.com/jmorganca/ollama)
- Configurable for other cloud LLMs: [Together.ai](https://together.ai/) or anything that speaks the
  [OpenAI API](https://platform.openai.com/). PRs welcome to add more cloud provider support.
- Background Music Generation: [Replicate](https://replicate.com/) using
  [MusicGen](https://huggingface.co/spaces/facebook/MusicGen)

Other credits:

- Pixel Art Generation: [Replicate](https://replicate.com/),
  [Fal.ai](https://serverless.fal.ai/lora)
- All interactions, background music and rendering on the &lt;Game/&gt; component in the project are
  powered by [PixiJS](https://pixijs.com/).
- Tilesheet:
  - https://opengameart.org/content/16x16-game-assets by George Bailey
  - https://opengameart.org/content/16x16-rpg-tileset by hilau
- We used https://github.com/pierpo/phaser3-simple-rpg for the original POC of this project. We have
  since re-wrote the whole app, but appreciated the easy starting point
- Original assets by [ansimuz](https://opengameart.org/content/tiny-rpg-forest)
- The UI is based on original assets by
  [Mounir Tohami](https://mounirtohami.itch.io/pixel-art-gui-elements)

# Installation

The overall steps are:

1. [Build and deploy](#build-and-deploy)
2. [Connect it to an LLM](#connect-an-llm)

## Build and Deploy

There are a few ways to run the app on top of Convex (the backend).

1. The standard Convex setup, where you develop locally or in the cloud. This requires a Convex
   account(free). This is the easiest way to depoy it to the cloud and seriously develop.
2. If you want to try it out without an account and you&#039;re okay with Docker, the Docker Compose
   setup is nice and self-contained.
3. There&#039;s a community fork of this project offering a one-click install on
   [Pinokio](https://pinokio.computer/item?uri=https://github.com/cocktailpeanutlabs/aitown) for
   anyone interested in running but not modifying it üòé.
4. You can also deploy it to [Fly.io](https://fly.io/). See [./fly](./fly) for instructions.

### Standard Setup

Note, if you&#039;re on Windows, see [below](#windows-installation).

```sh
git clone https://github.com/a16z-infra/ai-town.git
cd ai-town
npm install
```

This will require logging into your Convex account, if you haven&#039;t already.

To run it:

```sh
npm run dev
```

You can now visit http://localhost:5173.

If you&#039;d rather run the frontend and backend separately (which syncs your backend functions as
they&#039;re saved), you can run these in two terminals:

```bash
npm run dev:frontend
npm run dev:backend
```

See [package.json](./package.json) for details.

### Using Docker Compose with self-hosted Convex

You can also run the Convex backend with the self-hosted Docker container. Here we&#039;ll set it up to
run the frontend, backend, and dashboard all via docker compose.

```sh
docker compose up --build -d
```

The container will keep running in the background if you pass `-d`. After you&#039;ve done it once, you
can `stop` and `start` services.

- The frontend will be running on http://localhost:5173.
- The backend will be running on http://localhost:3210 (3211 for the http api).
- The dashboard will be running on http://localhost:6791.

To log into the dashboard and deploy from the convex CLI, you will need to generate an admin key.

```sh
docker compose exec backend ./generate_admin_key.sh
```

Add it to your `.env.local` file. Note: If you run `down` and `up`, you&#039;ll have to generate the key
again and update the `.env.local` file.

```sh
# in .env.local
CONVEX_SELF_HOSTED_ADMIN_KEY=&quot;&lt;admin-key&gt;&quot; # Ensure there are quotes around it
CONVEX_SELF_HOSTED_URL=&quot;http://127.0.0.1:3210&quot;
```

Then set up the Convex backend (one time):

```sh
npm run predev
```

To continuously deploy new code to the backend and print logs:

```sh
npm run dev:backend
```

To see the dashboard, visit `http://localhost:6791` and provide the admin key you generated earlier.

### Configuring Docker for Ollama

If you&#039;ll be using Ollama for local inference, you&#039;ll need to configure Docker to connect to it.

```sh
npx convex env set OLLAMA_HOST http://host.docker.internal:11434
```

To test the connection (after you [have it running](#ollama-default)):

```sh
docker compose exec backend /bin/bash curl http://host.docker.internal:11434
```

If it says &quot;Ollama is running&quot;, it&#039;s good! Otherwise, check out the
[Troubleshooting](#troubleshooting) section.

## Connect an LLM

Note: If you want to run the backend in the cloud, you can either use a cloud-based LLM API, like
OpenAI or Together.ai or you can proxy the traffic from the cloud to your local Ollama. See
[below](#using-local-inference-from-a-cloud-deployment) for instructions.

### Ollama (default)

By default, the app tries to use Ollama to run it entirely locally.

1. Download and install [Ollama](https://ollama.com/).
2. Open the app or run `ollama serve` in a terminal. `ollama serve` will warn you if the app is
   already running.
3. Run `ollama pull llama3` to have it download `llama3`.
4. Test it out with `ollama run llama3`.

Ollama model options can be found [here](https://ollama.ai/library).

If you want to customize which model to use, adjust convex/util/llm.ts or set
`npx convex env set OLLAMA_MODEL # model`. If you want to edit the embedding model:

1. Change the `OLLAMA_EMBEDDING_DIMENSION` in `convex/util/llm.ts` and ensure:
   `export const EMBEDDING_DIMENSION = OLLAMA_EMBEDDING_DIMENSION;`
2. Set `npx convex env set OLLAMA_EMBEDDING_MODEL # model`.

Note: You might want to set `NUM_MEMORIES_TO_SEARCH` to `1` in constants.ts, to reduce the size of
conversation prompts, if you see slowness.

### OpenAI

To use OpenAI, you need to:

```ts
// In convex/util/llm.ts change the following line:
export const EMBEDDING_DIMENSION = OPENAI_EMBEDDING_DIMENSION;
```

Set the `OPENAI_API_KEY` environment variable. Visit https://platform.openai.com/account/api-keys if
you don&#039;t have one.

```sh
npx convex env set OPENAI_API_KEY &#039;your-key&#039;
```

Optional: choose models with `OPENAI_CHAT_MODEL` and `OPENAI_EMBEDDING_MODEL`.

### Together.ai

To use Together.ai, you need to:

```ts
// In convex/util/llm.ts change the following line:
export const EMBEDDING_DIMENSION = TOGETHER_EMBEDDING_DIMENSION;
```

Set the `TOGETHER_API_KEY` environment variable. Visit https://api.together.xyz/settings/api-keys if
you don&#039;t have one.

```sh
npx convex env set TOGETHER_API_KEY &#039;your-key&#039;
```

Optional: choose models via `TOGETHER_CHAT_MODEL`, `TOGETHER_EMBEDDING_MODEL`. The embedding model&#039;s
dimension must match `EMBEDDING_DIMENSION`.

### Other OpenAI-compatible API

You can use any OpenAI-compatible API, such as Anthropic, Groq, or Azure.

- Change the `EMBEDDING_DIMENSION` in `convex/util/llm.ts` to match the dimension of your embedding
  model.
- Edit `getLLMConfig` in `llm.ts` or set environment variables:

```sh
npx convex env set LLM_API_URL &#039;your-url&#039;
npx convex env set LLM_API_KEY &#039;your-key&#039;
npx convex env set LLM_MODEL &#039;your-chat-model&#039;
npx convex env set LLM_EMBEDDING_MODEL &#039;your-embedding-model&#039;
```

Note: if `LLM_API_KEY` is not required, don&#039;t set it.

### Note on changing the LLM provider or embedding model:

If you change the LLM provider or embedding model, you should delete your data and start over. The
embeddings used for memory are based on the embedding model you choose, and the dimension of the
vector database must match the embedding model&#039;s dimension. See
[below](#wiping-the-database-and-starting-over) for how to do that.

## Customize your own simulation

NOTE: every time you change character data, you should re-run `npx convex run testing:wipeAllTables`
and then `npm run dev` to re-upload everything to Convex. This is because character data is sent to
Convex on the initial load. However, beware that `npx convex run testing:wipeAllTables` WILL wipe
all of your data.

1. Create your own characters and stories: All characters and stories, as well as their spritesheet
   references are stored in [characters.ts](./data/characters.ts). You can start by changing
   character descriptions.

2. Updating spritesheets: in `data/characters.ts`, you will see this code:

   ```ts
   export const characters = [
     {
       name: &#039;f1&#039;,
       textureUrl: &#039;/assets/32x32folk.png&#039;,
       spritesheetData: f1SpritesheetData,
       speed: 0.1,
     },
     ...
   ];
   ```

   You should find a sprite sheet for your character, and define sprite motion / assets in the
   corresponding file (in the above example, `f1SpritesheetData` was defined in f1.ts)

3. Update the Background (Environment): The map gets loaded in `convex/init.ts` from
   `data/gentle.js`. To update the map, follow these steps:

   - Use [Tiled](https://www.mapeditor.org/) to export tilemaps as a JSON file (2 layers named
     bgtiles and objmap)
   - Use the `convertMap.js` script to convert the JSON to a format that the engine can use.

   ```console
   node data/convertMap.js &lt;mapDataPath&gt; &lt;assetPath&gt; &lt;tilesetpxw&gt; &lt;tilesetpxh&gt;
   ```

   - `&lt;mapDataPath&gt;`: Path to the Tiled JSON file.
   - `&lt;assetPath&gt;`: Path to tileset images.
   - `&lt;tilesetpxw&gt;`: Tileset width in pixels.
   - `&lt;tilesetpxh&gt;`: Tileset height in pixels. Generates `converted-map.js` that you can use like
     `gentle.js`

4. Adding background music with Replicate (Optional)

   For Daily background music generation, create a [Replicate](https://replicate.com/) account and
   create a token in your Profile&#039;s [API Token page](https://replicate.com/account/api-tokens).
   `npx convex env set REPLICATE_API_TOKEN # token`

   This only works if you can receive the webhook from Replicate. If it&#039;s running in the normal
   Convex cloud, it will work by default. If you&#039;re self-hosting, you&#039;ll need to configure it to hit
   your app&#039;s url on `/http`. If you&#039;re using Docker Compose, it will be `http://localhost:3211`,
   but you&#039;ll need to proxy the traffic to your local machine.

   **Note**: The simulation will pause after 5 minutes if the window is idle. Loading the page will
   unpause it. You can also manually freeze &amp; unfreeze the world with a button in the UI. If you
   want to run the world without the browser, you can comment-out the &quot;stop inactive worlds&quot; cron in
   `convex/crons.ts`.

   - Change the background music by modifying the prompt in `convex/music.ts`
   - Change how often to generate new music at `convex/crons.ts` by modifying the
     `generate new background music` job

## Commands to run / test / debug

**To stop the back end, in case of too much activity**

This will stop running the engine and agents. You can still run queries and run functions to debug.

```bash
npx convex run testing:stop
```

**To restart the back end after stopping it**

```bash
npx convex run testing:resume
```

**To kick the engine in case the game engine or agents aren&#039;t running**

```bash
npx convex run testing:kick
```

**To archive the world**

If you&#039;d like to reset the world and start from scratch, you can archive the current world:

```bash
npx convex run testing:archive
```

Then, you can still look at the world&#039;s data in the dashboard, but the engine and agents will no
longer run.

You can then create a fresh world with `init`.

```bash
npx convex run init
```

**To pause your backend deployment**

You can go to the [dashboard](https://dashboard.convex.dev) to your deployment settings to pause and
un-pause your deployment. This will stop all functions, whether invoked from the client, scheduled,
or as a cron job. See this as a last resort, as there are gentler ways of stopping above.

## Windows Installation

### Prerequisites

1. **Windows 10/11 with WSL2 installed**
2. **Internet connection**

Steps:

1. Install WSL2

   First, you need to install WSL2. Follow
   [this guide](https://docs.microsoft.com/en-us/windows/wsl/install) to set up WSL2 on your Windows
   machine. We recommend using Ubuntu as your Linux distribution.

2. Update Packages

   Open your WSL terminal (Ubuntu) and update your packages:

   ```sh
   sudo apt update
   ```

3. Install NVM and Node.js

   NVM (Node Version Manager) helps manage multiple versions of Node.js. Install NVM and Node.js 18
   (the stable version):

   ```sh
   curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash
   export NVM_DIR=&quot;$([ -z &quot;${XDG_CONFIG_HOME-}&quot; ] &amp;&amp; printf %s &quot;${HOME}/.nvm&quot; || printf %s &quot;${XDG_CONFIG_HOME}/nvm&quot;)&quot;
   [ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \. &quot;$NVM_DIR/nvm.sh&quot;
   source ~/.bashrc
   nvm install 18
   nvm use 18
   ```

4. Install Python and Pip

   Python is required for some dependencies. Install Python and Pip:

   ```sh
   sudo apt-get install python3 python3-pip sudo ln -s /usr/bin/python3 /usr/bin/python
   ```

At this point, you can follow the instructions [above](#installation).

## Deploy the app to production

### Deploy Convex functions to prod environment

Before you can run the app, you will need to make sure the Convex functions are deployed to its
production environment. Note: this is assuming you&#039;re using the default Convex cloud product.

1. Run `npx convex deploy` to deploy the convex functions to production
2. Run `npx convex run init --prod`

To transfer your local data to the cloud, you can run `npx convex export` and then import it with
`npx convex import --prod`.

If you have existing data you want to clear, you can run
`npx convex run testing:wipeAllTables --prod`

### Adding Auth (Optional)

You can add clerk auth back in with `git revert b44a436`. Or just look at that diff for what changed
to remove it.

**Make a Clerk account**

- Go to https://dashboard.clerk.com/ and click on &quot;Add Application&quot;
- Name your application and select the sign-in providers you would like to offer users
- Create Application
- Add `VITE_CLERK_PUBLISHABLE_KEY` and `CLERK_SECRET_KEY` to `.env.local`

```bash
VITE_CLERK_PUBLISHABLE_KEY=pk_***
CLERK_SECRET_KEY=sk_***
```

- Go to JWT Templates and create a new Convex Template.
- Copy the JWKS endpoint URL for use below.

```sh
npx convex env set CLERK_ISSUER_URL # e.g. https://your-issuer-url.clerk.accounts.dev/
```

### Deploy the frontend to Vercel

- Register an account on Vercel and then [install the Vercel CLI](https://vercel.com/docs/cli).
- **If you are using Github Codespaces**: You will need to
  [install the Vercel CLI](https://vercel.com/docs/cli) and authenticate from your codespaces cli by
  running `vercel login`.
- Deploy the app to Vercel with `vercel --prod`.

## Using local inference from a cloud deployment

We support using [Ollama](https://github.com/jmorganca/ollama) for conversation generations. To have
it accessible from the web, you can use Tunnelmole or Ngrok or similar so the cloud backend can send
requests to Ollama running on your local machine.

Steps:

1. Set up either Tunnelmole or Ngrok.
2. Add Ollama endpoint to Convex
   ```sh
   npx convex env set OLLAMA_HOST # your tunnelmole/ngrok unique url from the previous step
   ```
3. Update Ollama domains Ollama has a list of accepted domains. Add the ngrok domain so it won&#039;t
   reject traffic. see [ollama.ai](https://ollama.ai) for more details.

### Using Tunnelmole

[Tunnelmole](https://github.com/robbie-cahill/tunnelmole-client) is an open source tunneling tool.

You can install Tunnelmole using one of the following options:

- NPM: `npm install -g tunnelmole`
- Linux: `curl -s https://tunnelmole.com/sh/install-linux.sh | sudo bash`
- Mac:
  `curl -s https://tunnelmole.com/sh/install-mac.sh --output install-mac.sh &amp;&amp; sudo bash install-mac.sh`
- Windows: Install with NPM, or if you don&#039;t have NodeJS installed, download the `exe` file for
  Windows [here](https://tunnelmole.com/downloads/tmole.exe) and put it somewhere in your PATH.

Once Tunnelmole is installed, run the following command:

```
tmole 11434
```

Tunnelmole should output a unique url once you run this command.

### Using Ngrok

Ngrok is a popular closed source tunneling tool.

- [Install Ngrok](https://ngrok.com/docs/getting-started/)

Once ngrok is installed and authenticated, run the following command:

```
ngrok http http://localhost:11434
```

Ngrok should output a unique url once you run this command.

## Troubleshooting

### Wiping the database and starting over

You can wipe the database by running:

```sh
npx convex run testing:wipeAllTables
```

Then reset with:

```sh
npx convex run init
```

### Incompatible Node.js versions

If you encounter a node version error on the convex server upon application startup, please use node
version 18, which is the most stable. One way to do this is by
[installing nvm](https://nodejs.org/en/download/package-manager) and running `nvm install 18` and
`nvm use 18`.

### Reaching Ollama

If you&#039;re having trouble with the backend communicating with Ollama, it depends on your setup how to
debug:

1. If you&#039;re running directly on Windows, see
   [Windows Ollama connection issues](#windows-ollama-connection-issues).
2. If you&#039;re using **Docker**, see
   [Docker to Ollama connection issues](#docker-to-ollama-connection-issues).
3. If you&#039;re running locally, you can try the following:

```sh
npx convex env set OLLAMA_HOST http://localhost:11434
```

By default, the host is set to `http://127.0.0.1:11434`. Some systems prefer `localhost`
¬Ø\_(„ÉÑ)\_/¬Ø.

### Windows Ollama connection issues

If the above didn&#039;t work after following the [windows](#windows-installation) and regular
[installation](#installation) instructions, you can try the following, assuming you&#039;re **not** using
Docker.

If you&#039;re using Docker, see the [next section](#docker-to-ollama-connection-issues) for Docker
troubleshooting.

For running directly on Windows, you can try the following:

1. Install `unzip` and `socat`:

   ```sh
   sudo apt install unzip socat
   ```

2. Configure `socat` to Bridge Ports for Ollama

   Run the following command to bridge ports:

   ```sh
   socat TCP-LISTEN:11434,fork TCP:$(cat /etc/resolv.conf | grep nameserver | awk &#039;{print $2}&#039;):11434 &amp;
   ```

3. Test if it&#039;s working:

   ```sh
   curl http://127.0.0.1:11434
   ```

   If it responds OK, the Ollama API should be accessible.

### Docker to Ollama connection issues

If you&#039;re having trouble with the backend communicating with Ollama, there&#039;s a couple things to
check:

1. Is Doc

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[directus/directus]]></title>
            <link>https://github.com/directus/directus</link>
            <guid>https://github.com/directus/directus</guid>
            <pubDate>Wed, 03 Sep 2025 00:04:27 GMT</pubDate>
            <description><![CDATA[The flexible backend for all your projects üê∞ Turn your DB into a headless CMS, admin panels, or apps with a custom UI, instant APIs, auth & more.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/directus/directus">directus/directus</a></h1>
            <p>The flexible backend for all your projects üê∞ Turn your DB into a headless CMS, admin panels, or apps with a custom UI, instant APIs, auth & more.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 32,224</p>
            <p>Forks: 4,361</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[humanlayer/humanlayer]]></title>
            <link>https://github.com/humanlayer/humanlayer</link>
            <guid>https://github.com/humanlayer/humanlayer</guid>
            <pubDate>Wed, 03 Sep 2025 00:04:26 GMT</pubDate>
            <description><![CDATA[HumanLayer enables AI agents to communicate with humans in tool-based and async workflows. Guarantee human oversight of high-stakes function calls with approval workflows across slack, email and more. Bring your LLM and Framework of choice and start giving your AI agents safe access to the world. Agentic Workflows, human in the loop, tool calling]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/humanlayer/humanlayer">humanlayer/humanlayer</a></h1>
            <p>HumanLayer enables AI agents to communicate with humans in tool-based and async workflows. Guarantee human oversight of high-stakes function calls with approval workflows across slack, email and more. Bring your LLM and Framework of choice and start giving your AI agents safe access to the world. Agentic Workflows, human in the loop, tool calling</p>
            <p>Language: TypeScript</p>
            <p>Stars: 2,060</p>
            <p>Forks: 187</p>
            <p>Stars today: 151 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

![Wordmark Logo of HumanLayer](./docs/images/wordmark-light.svg)

&lt;/div&gt;

üöß **HumanLayer** is undergoing some changes...stay tuned! üöß

&lt;div align=&quot;center&quot;&gt;

&lt;h3&gt;

[HumanLayer Code](https://humanlayer.dev/code) | [Discord](https://humanlayer.dev/discord) | [Release](https://github.com/humanlayer/humanlayer/releases)


&lt;/h3&gt;

[![GitHub Repo stars](https://img.shields.io/github/stars/humanlayer/humanlayer)](https://github.com/humanlayer/humanlayer)
[![License: Apache-2](https://img.shields.io/badge/License-Apache-green.svg)](https://opensource.org/licenses/Apache-2)

&lt;img referrerpolicy=&quot;no-referrer-when-downgrade&quot; src=&quot;https://static.scarf.sh/a.png?x-pxid=fcfc0926-d841-47fb-b8a6-6aba3a6c3228&quot; /&gt;

&lt;/div&gt;

## Table of contents

- [Getting Started](#getting-started)
- [Why HumanLayer?](#why-humanlayer)
- [Key Features](#key-features)
- [Examples](#examples)
- [Roadmap](#roadmap)
- [Contributing](#contributing)
- [License](#license)

## Why HumanLayer?

Functions and tools are a key part of [Agentic Workflows](https://www.deeplearning.ai/the-batch/how-agents-can-improve-llm-performance). They enable LLMs to interact meaningfully with the outside world and automate broad scopes of impactful work. Correct and accurate function calling is essential for AI agents that do meaningful things like book appointments, interact with customers, manage billing information, write+execute code, and more.

[![Tool Calling Loop from Louis Dupont](https://miro.medium.com/v2/resize:fit:1400/format:webp/1*r8rEqjGZs_e6dibWeaqaQg.png)](https://louis-dupont.medium.com/transforming-software-interactions-with-tool-calling-and-llms-dc39185247e9)
_From https://louis-dupont.medium.com/transforming-software-interactions-with-tool-calling-and-llms-dc39185247e9_

**However**, the most useful functions we can give to an LLM are also the most risky. We can all imagine the value of an AI Database Administrator that constantly tunes and refactors our SQL database, but most teams wouldn&#039;t give an LLM access to run arbitrary SQL statements against a production database (heck, we mostly don&#039;t even let humans do that). That is:

&lt;div align=&quot;center&quot;&gt;
&lt;h3&gt;&lt;blockquote&gt;Even with state-of-the-art agentic reasoning and prompt routing, LLMs are not sufficiently reliable to be given access to high-stakes functions without human oversight&lt;/blockquote&gt;&lt;/h3&gt;
&lt;/div&gt;

To better define what is meant by &quot;high stakes&quot;, some examples:

- **Low Stakes**: Read Access to public data (e.g. search wikipedia, access public APIs and DataSets)
- **Low Stakes**: Communicate with agent author (e.g. an engineer might empower an agent to send them a private Slack message with updates on progress)
- **Medium Stakes**: Read Access to Private Data (e.g. read emails, access calendars, query a CRM)
- **Medium Stakes**: Communicate with strict rules (e.g. sending based on a specific sequence of hard-coded email templates)
- **High Stakes**: Communicate on my Behalf or on behalf of my Company (e.g. send emails, post to slack, publish social/blog content)
- **High Stakes**: Write Access to Private Data (e.g. update CRM records, modify feature toggles, update billing information)

&lt;div align=&quot;center&quot;&gt;&lt;img style=&quot;width: 600px&quot; alt=&quot;Image showing the levels of function stakes stacked on top of one another&quot; src=&quot;./docs/images/function_stakes.png&quot;&gt;&lt;/div&gt;

The high stakes functions are the ones that are the most valuable and promise the most impact in automating away human workflows. But they are also the ones where &quot;90% accuracy&quot; is not acceptable. Reliability is further impacted by today&#039;s LLMs&#039; tendency to hallucinate or craft low-quality text that is clearly AI generated. The sooner teams can get Agents reliably and safely calling these tools with high-quality inputs, the sooner they can reap massive benefits.

HumanLayer provides a set of tools to _deterministically_ guarantee human oversight of high stakes function calls. Even if the LLM makes a mistake or hallucinates, HumanLayer is baked into the tool/function itself, guaranteeing a human in the loop.

&lt;div align=&quot;center&quot;&gt;&lt;img style=&quot;width: 400px&quot; alt=&quot;HumanLayer @require_approval decorator wrapping the Commnicate on my behalf function&quot; src=&quot;./docs/images/humanlayer_require_approval.png&quot;&gt;&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;h3&gt;&lt;blockquote&gt;
HumanLayer provides a set of tools to *deterministically* guarantee human oversight of high stakes function calls
&lt;/blockquote&gt;&lt;/h3&gt;
&lt;/div&gt;

### The Future: Autonomous Agents and the &quot;Outer Loop&quot;

_Read More: [OpenAI&#039;s RealTime API is a step towards outer-loop agents](https://theouterloop.substack.com/p/openais-realtime-api-is-a-step-towards)_

Between `require_approval` and `human_as_tool`, HumanLayer is built to empower the next generation of AI agents - Autonomous Agents, but it&#039;s just a piece of the puzzle. To clarify &quot;next generation&quot;, we can summarize briefly the history of LLM applications.

- **Gen 1**: Chat - human-initiated question / response interface
- **Gen 2**: Agentic Assistants - frameworks drive prompt routing, tool calling, chain of thought, and context window management to get much more reliability and functionality. Most workflows are initiated by humans in single-shot &quot;here&#039;s a task, go do it&quot; or rolling chat interfaces.
- **Gen 3**: Autonomous Agents - no longer human initiated, agents will live in the &quot;outer loop&quot; driving toward their goals using various tools and functions. Human/Agent communication is Agent-initiated rather than human-initiated.

![gen2 vs gen 3 agents](./docs/images/gen-2-gen-3-agents.png)

Gen 3 autonomous agents will need ways to consult humans for input on various tasks. In order for these agents to perform actual useful work, they&#039;ll need human oversight for sensitive operations.

These agents will require ways to contact one or more humans across various channels including chat, email, sms, and more.

While early versions of these agents may technically be &quot;human initiated&quot; in that they get kicked off on a regular schedule by e.g. a cron or similar, the best ones will be managing their own scheduling and costs. This will require toolkits for inspecting costs and something akin to `sleep_until`. They&#039;ll need to run in orchestration frameworks that can durably serialize and resume agent workflows across tool calls that might not return for hours or days. These frameworks will need to support context window management by a &quot;manager LLM&quot; and enable agents to fork sub-chains to handle specialized tasks and roles.

Example use cases for these outer loop agents include [the linkedin inbox assistant](./examples/langchain/04-human_as_tool_linkedin.py) and [the customer onboarding assistant](./examples/langchain/05-approvals_and_humans_composite.py), but that&#039;s really just scratching the surface.

## Contributing

The HumanLayer SDK and docs are open-source and we welcome contributions in the form of issues, documentation, pull requests, and more. See [CONTRIBUTING.md](./CONTRIBUTING.md) for more details.

## Fun Stuff

[![Star History Chart](https://api.star-history.com/svg?repos=humanlayer/humanlayer&amp;type=Date)](https://star-history.com/#humanlayer/humanlayer&amp;Date)


## Development Conventions

### TODO Annotations

We use a priority-based TODO annotation system throughout the codebase:

- `TODO(0)`: Critical - never merge
- `TODO(1)`: High - architectural flaws, major bugs
- `TODO(2)`: Medium - minor bugs, missing features
- `TODO(3)`: Low - polish, tests, documentation
- `TODO(4)`: Questions/investigations needed
- `PERF`: Performance optimization opportunities

## License

The HumanLayer SDK and CodeLayer sources in this repo are licensed under the Apache 2 License.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[daytonaio/daytona]]></title>
            <link>https://github.com/daytonaio/daytona</link>
            <guid>https://github.com/daytonaio/daytona</guid>
            <pubDate>Wed, 03 Sep 2025 00:04:25 GMT</pubDate>
            <description><![CDATA[Daytona is a Secure and Elastic Infrastructure for Running AI-Generated Code]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/daytonaio/daytona">daytonaio/daytona</a></h1>
            <p>Daytona is a Secure and Elastic Infrastructure for Running AI-Generated Code</p>
            <p>Language: TypeScript</p>
            <p>Stars: 21,448</p>
            <p>Forks: 2,329</p>
            <p>Stars today: 45 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

[![Documentation](https://img.shields.io/github/v/release/daytonaio/docs?label=Docs&amp;color=23cc71)](https://www.daytona.io/docs)
![License](https://img.shields.io/badge/License-AGPL--3-blue)
[![Go Report Card](https://goreportcard.com/badge/github.com/daytonaio/daytona)](https://goreportcard.com/report/github.com/daytonaio/daytona)
[![Issues - daytona](https://img.shields.io/github/issues/daytonaio/daytona)](https://github.com/daytonaio/daytona/issues)
![GitHub Release](https://img.shields.io/github/v/release/daytonaio/daytona)

&lt;/div&gt;

&amp;nbsp;

&lt;div align=&quot;center&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/daytonaio/daytona/raw/main/assets/images/Daytona-logotype-white.png&quot;&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/daytonaio/daytona/raw/main/assets/images/Daytona-logotype-black.png&quot;&gt;
    &lt;img alt=&quot;Daytona logo&quot; src=&quot;https://github.com/daytonaio/daytona/raw/main/assets/images/Daytona-logotype-black.png&quot; width=&quot;50%&quot;&gt;
  &lt;/picture&gt;
&lt;/div&gt;

&lt;h3 align=&quot;center&quot;&gt;
  Run AI Code.
  &lt;br/&gt;
  Secure and Elastic Infrastructure for
  Running Your AI-Generated Code.
&lt;/h3&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://www.daytona.io/docs&quot;&gt; Documentation &lt;/a&gt;¬∑
    &lt;a href=&quot;https://github.com/daytonaio/daytona/issues/new?assignees=&amp;labels=bug&amp;projects=&amp;template=bug_report.md&amp;title=%F0%9F%90%9B+Bug+Report%3A+&quot;&gt; Report Bug &lt;/a&gt;¬∑
    &lt;a href=&quot;https://github.com/daytonaio/daytona/issues/new?assignees=&amp;labels=enhancement&amp;projects=&amp;template=feature_request.md&amp;title=%F0%9F%9A%80+Feature%3A+&quot;&gt; Request Feature &lt;/a&gt;¬∑
    &lt;a href=&quot;https://go.daytona.io/slack&quot;&gt; Join our Slack &lt;/a&gt;¬∑
    &lt;a href=&quot;https://x.com/daytonaio&quot;&gt; Connect on X &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://www.producthunt.com/posts/daytona-2?embed=true&amp;utm_source=badge-top-post-badge&amp;utm_medium=badge&amp;utm_souce=badge-daytona&amp;#0045;2&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=957617&amp;theme=neutral&amp;period=daily&amp;t=1746176740150&quot; alt=&quot;Daytona&amp;#0032; - Secure&amp;#0032;and&amp;#0032;elastic&amp;#0032;infra&amp;#0032;for&amp;#0032;running&amp;#0032;your&amp;#0032;AI&amp;#0045;generated&amp;#0032;code&amp;#0046; | Product Hunt&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;https://www.producthunt.com/posts/daytona-2?embed=true&amp;utm_source=badge-top-post-topic-badge&amp;utm_medium=badge&amp;utm_souce=badge-daytona&amp;#0045;2&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/top-post-topic-badge.svg?post_id=957617&amp;theme=neutral&amp;period=monthly&amp;topic_id=237&amp;t=1746176740150&quot; alt=&quot;Daytona&amp;#0032; - Secure&amp;#0032;and&amp;#0032;elastic&amp;#0032;infra&amp;#0032;for&amp;#0032;running&amp;#0032;your&amp;#0032;AI&amp;#0045;generated&amp;#0032;code&amp;#0046; | Product Hunt&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

---

## Installation

### Python SDK

```bash
pip install daytona
```

### TypeScript SDK

```bash
npm install @daytonaio/sdk
```

---

## Features

- **Lightning-Fast Infrastructure**: Sub-90ms Sandbox creation from code to execution.
- **Separated &amp; Isolated Runtime**: Execute AI-generated code with zero risk to your infrastructure.
- **Massive Parallelization for Concurrent AI Workflows**: Fork Sandbox filesystem and memory state (Coming soon!)
- **Programmatic Control**: File, Git, LSP, and Execute API
- **Unlimited Persistence**: Your Sandboxes can live forever
- **OCI/Docker Compatibility**: Use any OCI/Docker image to create a Sandbox

---

## Quick Start

1. Create an account at https://app.daytona.io
1. Generate a [new API key](https://app.daytona.io/dashboard/keys)
1. Follow the [Getting Started docs](https://www.daytona.io/docs/getting-started/) to start using the Daytona SDK

## Creating your first Sandbox

### Python SDK

```py
from daytona import Daytona, DaytonaConfig, CreateSandboxParams

# Initialize the Daytona client
daytona = Daytona(DaytonaConfig(api_key=&quot;YOUR_API_KEY&quot;))

# Create the Sandbox instance
sandbox = daytona.create(CreateSandboxParams(language=&quot;python&quot;))

# Run code securely inside the Sandbox
response = sandbox.process.code_run(&#039;print(&quot;Sum of 3 and 4 is &quot; + str(3 + 4))&#039;)
if response.exit_code != 0:
    print(f&quot;Error running code: {response.exit_code} {response.result}&quot;)
else:
    print(response.result)

# Clean up the Sandbox
daytona.remove(sandbox)
```

### Typescript SDK

```jsx
import { Daytona } from &#039;@daytonaio/sdk&#039;

async function main() {
  // Initialize the Daytona client
  const daytona = new Daytona({
    apiKey: &#039;YOUR_API_KEY&#039;,
  })

  let sandbox
  try {
    // Create the Sandbox instance
    sandbox = await daytona.create({
      language: &#039;python&#039;,
    })
    // Run code securely inside the Sandbox
    const response = await sandbox.process.codeRun(&#039;print(&quot;Sum of 3 and 4 is &quot; + str(3 + 4))&#039;)
    if (response.exitCode !== 0) {
      console.error(&#039;Error running code:&#039;, response.exitCode, response.result)
    } else {
      console.log(response.result)
    }
  } catch (error) {
    console.error(&#039;Sandbox flow error:&#039;, error)
  } finally {
    if (sandbox) await daytona.remove(sandbox)
  }
}

main().catch(console.error)
```

---

## Contributing

Daytona is Open Source under the [GNU AFFERO GENERAL PUBLIC LICENSE](LICENSE), and is the [copyright of its contributors](NOTICE). If you would like to contribute to the software, read the Developer Certificate of Origin Version 1.1 (https://developercertificate.org/). Afterwards, navigate to the [contributing guide](CONTRIBUTING.md) to get started.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[TibixDev/winboat]]></title>
            <link>https://github.com/TibixDev/winboat</link>
            <guid>https://github.com/TibixDev/winboat</guid>
            <pubDate>Wed, 03 Sep 2025 00:04:24 GMT</pubDate>
            <description><![CDATA[Run Windows apps on üêß Linux with ‚ú® seamless integration]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/TibixDev/winboat">TibixDev/winboat</a></h1>
            <p>Run Windows apps on üêß Linux with ‚ú® seamless integration</p>
            <p>Language: TypeScript</p>
            <p>Stars: 1,084</p>
            <p>Forks: 13</p>
            <p>Stars today: 435 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;left&quot;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td&gt;
        &lt;img src=&quot;gh-assets/winboat_logo.png&quot; alt=&quot;WinBoat Logo&quot; width=&quot;150&quot;&gt;
      &lt;/td&gt;
      &lt;td&gt;
        &lt;h1 style=&quot;color: #7C86FF; margin: 0; font-size: 32px;&quot;&gt;WinBoat&lt;/h1&gt;
        &lt;p style=&quot;color: oklch(90% 0 0); font-size: 14px; margin: 5px 0;&quot;&gt;Windows for Penguins.&lt;br&gt;
        Run Windows apps on üêß Linux with ‚ú® seamless integration&lt;/p&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

## Screenshots
&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;gh-assets/features/feat_dash.png&quot; alt=&quot;WinBoat Dashboard&quot; width=&quot;45%&quot;&gt;
  &lt;img src=&quot;gh-assets/features/feat_apps.png&quot; alt=&quot;WinBoat Apps&quot; width=&quot;45%&quot;&gt;
  &lt;img src=&quot;gh-assets/features/feat_native.png&quot; alt=&quot;Native Windows&quot; width=&quot;45%&quot;&gt;
&lt;/div&gt;

## ‚ö†Ô∏è Work in Progress ‚ö†Ô∏è
WinBoat is currently in beta, so expect to occasionally run into hiccups and bugs. You should be comfortable with some level of troubleshooting if you decide to try it, however we encourage you to give it a shot anyway.

## Features

- **üé® Elegant Interface**: Sleek and intuitive interface that seamlessly integrates Windows into your Linux desktop environment, making it feel like a native experience
- **üì¶ Automated Installs**: Simple installation process through our interface - pick your preferences &amp; specs and let us handle the rest
- **üöÄ Run Any App**: If it runs on Windows, it can run on WinBoat. Enjoy the full range of Windows applications as native OS-level windows in your Linux environment
- **üñ•Ô∏è Full Windows Desktop**: Access the complete Windows desktop experience when you need it, or run individual apps seamlessly integrated into your Linux workflow
- **üìÅ Filesystem Integration**: Your home directory is mounted in Windows, allowing easy file sharing between the two systems without any hassle
- **‚ú® And many more**: Smartcard passthrough, resource monitoring, and more features being added regularly

## Prerequisites
Before running WinBoat, ensure your system meets the following requirements:

- **RAM**: At least 4 GB of RAM
- **CPU**: At least 2 CPU threads  
- **Storage**: At least 32 GB free space in `/var`
- **Virtualization**: KVM enabled in BIOS/UEFI
  - [How to enable virtualization](https://duckduckgo.com/?t=h_&amp;q=how+to+enable+virtualization+in+%3Cmotherboard+brand%3E+bios&amp;ia=web)
- **Docker**: Required for containerization
  - [Installation Guide](https://docs.docker.com/engine/install/)
- **Docker Compose v2**: Required for compatibility with docker-compose.yml files
  - [Installation Guide](https://docs.docker.com/compose/install/#plugin-linux-only)
- **Docker User Group**: Add your user to the `docker` group
  - [Setup Instructions](https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user)
- **FreeRDP**: Required for remote desktop connection (Please make sure you have **Version 3.x.x** with sound support included)
  - [Installation Guide](https://github.com/FreeRDP/FreeRDP/wiki/PreBuilds)
- **Kernel Modules**: `iptables` and `iptable_nat` modules must be loaded
  - [Module loading instructions](https://rentry.org/rmfq2e5e)

## Downloading
You can download the latest Linux builds under the [Releases](https://github.com/TibixDev/winboat/releases) tab. We currently offer two variants:
- **AppImage:** A popular &amp; portable app format which should run fine on most distributions
- **Unpacked:** The raw unpacked files, simply run the executable (`linux-unpacked/winboat`)

## Known Issues About Container Runtimes
- Podman is **unsupported** for now
- Docker Desktop is **unsupported** for now
- Distros that emulate Docker through a Podman socket are **unsupported**
- Any rootless containerization solution is currently **unsupported**

## Building WinBoat
- For building you need to have NodeJS and Go installed on your system
- Clone the repo (`git clone https://github.com/TibixDev/WinBoat`)
- Install the dependencies (`npm i`)
- Build the app and the guest server using `npm run build:linux-gs`
- You can now find the built app under `dist` with an AppImage and an Unpacked variant

## Running WinBoat in development mode
- Make sure you meet the [prerequisites](#prerequisites)
- Additionally, for development you need to have NodeJS and Go installed on your system
- Clone the repo (`git clone https://github.com/TibixDev/WinBoat`)
- Install the dependencies (`npm i`)
- Build the guest server (`npm run build-guest-server`)
- Run the app (`npm run dev`)

## Contributing
Contributions are welcome! Whether it&#039;s bug fixes, feature improvements, or documentation updates, we appreciate your help making WinBoat better.

**Please note**: We maintain a focus on technical contributions only. Pull requests containing political/sexual content, or other sensitive/controversial topics will not be accepted. Let&#039;s keep things focused on making great software! üöÄ

Feel free to:
- Report bugs and issues
- Submit feature requests  
- Contribute code improvements
- Help with documentation
- Share feedback and suggestions

Check out our issues page to get started, or feel free to open a new issue if you&#039;ve found something that needs attention.

## License
WinBoat is licensed under the [MIT](https://github.com/TibixDev/winboat/blob/main/LICENSE) license

## Inspiration / Alternatives
These past few years some cool projects have surfaced with similar concepts, some of which we&#039;ve also taken inspirations from.\
They&#039;re awesome and you should check them out:
- [WinApps](https://github.com/winapps-org/winapps)
- [Cassowary](https://github.com/casualsnek/cassowary)
- [dockur/windows](https://github.com/dockur/windows) (üåü Also used in WinBoat)

## Socials &amp; Contact
- üåê **Website**: [winboat.app](https://www.winboat.app/)
- üê¶ **Twitter/X**: [@winboat_app](https://x.com/winboat_app)
- ü¶ã **Bluesky**: [winboat.app](http://bsky.app/profile/winboat.app)
- üó®Ô∏è **Discord**: [Join our community](http://discord.gg/MEwmpWm4tN)
- üìß **Email**: [staff@winboat.app](mailto:staff@winboat.app)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[teableio/teable]]></title>
            <link>https://github.com/teableio/teable</link>
            <guid>https://github.com/teableio/teable</guid>
            <pubDate>Wed, 03 Sep 2025 00:04:23 GMT</pubDate>
            <description><![CDATA[‚ú® The Next Gen Airtable Alternative: No-Code Postgres]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/teableio/teable">teableio/teable</a></h1>
            <p>‚ú® The Next Gen Airtable Alternative: No-Code Postgres</p>
            <p>Language: TypeScript</p>
            <p>Stars: 19,395</p>
            <p>Forks: 1,005</p>
            <p>Stars today: 21 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;h1 align=&quot;center&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;static/assets/images/teable-vertical-dark.png&quot;&gt;
      &lt;img alt=&quot;teable logo&quot; height=&quot;150&quot; src=&quot;static/assets/images/teable-vertical-light.png&quot;&gt;
    &lt;/picture&gt;
  &lt;/h1&gt;
  &lt;h3 align=&quot;center&quot;&gt;&lt;strong&gt;Postgres-Airtable Fusion&lt;/strong&gt;&lt;/h3&gt;
  &lt;p&gt;Teable is a Super fast, Real-time, Professional, Developer friendly, No-code database built on Postgres. It uses a simple, spreadsheet-like interface to create complex enterprise-level database applications. Unlock efficient app development with no-code, free from the hurdles of data security and scalability. &lt;/p&gt;
&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a target=&quot;_blank&quot; href=&quot;https://teable.io&quot;&gt;Home&lt;/a&gt; | &lt;a target=&quot;_blank&quot; href=&quot;https://help.teable.io&quot;&gt;Help&lt;/a&gt; | &lt;a target=&quot;_blank&quot; href=&quot;https://Blog.teable.io&quot;&gt;Blog&lt;/a&gt; | &lt;a target=&quot;_blank&quot; href=&quot;https://template.teable.io&quot;&gt;Template&lt;/a&gt; | &lt;a target=&quot;_blank&quot; href=&quot;https://app.teable.io/share/shr04TEw1u9EOQojPmG/view&quot;&gt;Roadmap&lt;/a&gt; | &lt;a target=&quot;_blank&quot; href=&quot;https://discord.gg/n2JQqekG&quot;&gt;Discord&lt;/a&gt; | &lt;a target=&quot;_blank&quot; href=&quot;https://twitter.com/teableio&quot;&gt;Twitter&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a aria-label=&quot;Build&quot; href=&quot;https://github.com/teableio/teable/actions?query=Build%20and%20Push%20to%20Docker%20Registry&quot;&gt;
    &lt;img alt=&quot;build&quot; src=&quot;https://img.shields.io/github/actions/workflow/status/teableio/teable/docker-push.yml?label=Build&amp;logo=github&amp;style=flat-quare&amp;labelColor=000000&quot; /&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;Codefactor grade&quot; href=&quot;https://www.codefactor.io/repository/github/teableio/teable&quot;&gt;
    &lt;img alt=&quot;Codefactor&quot; src=&quot;https://img.shields.io/codefactor/grade/github/teableio/teable?label=Codefactor&amp;logo=codefactor&amp;style=flat-quare&amp;labelColor=000000&quot; /&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;CodeClimate maintainability&quot; href=&quot;https://codeclimate.com/github/teableio/teable&quot;&gt;
    &lt;img alt=&quot;Maintainability&quot; src=&quot;https://img.shields.io/codeclimate/maintainability/teableio/teable?label=Maintainability&amp;logo=code-climate&amp;style=flat-quare&amp;labelColor=000000&quot; /&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;CodeClimate technical debt&quot; href=&quot;https://codeclimate.com/github/teableio/teable&quot;&gt;
    &lt;img alt=&quot;Techdebt&quot; src=&quot;https://img.shields.io/codeclimate/tech-debt/teableio/teable?label=TechDebt&amp;logo=code-climate&amp;style=flat-quare&amp;labelColor=000000&quot; /&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;Codacy grade&quot; href=&quot;https://www.codacy.com/gh/teableio/teable/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=teableio/teable&amp;amp;utm_campaign=Badge_Grade&quot;&gt;
    &lt;img alt=&quot;Codacy grade&quot; src=&quot;https://img.shields.io/codacy/grade/dff9c944af284a0fad4e165eb1727467?logo=codacy&amp;style=flat-square&amp;labelColor=000&amp;label=Codacy&quot;&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;Top language&quot; href=&quot;https://github.com/teableio/teable/search?l=typescript&quot;&gt;
    &lt;img alt=&quot;GitHub top language&quot; src=&quot;https://img.shields.io/github/languages/top/teableio/teable?style=flat-square&amp;labelColor=000&amp;color=blue&quot;&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;Licence&quot; href=&quot;https://github.com/teableio/teable/blob/main/LICENSE&quot;&gt;
    &lt;img alt=&quot;Licence&quot; src=&quot;https://img.shields.io/github/license/teableio/teable?style=flat-quare&amp;labelColor=000000&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

  &lt;h1 align=&quot;center&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;static/assets/images/teable-interface-dark.png&quot;&gt;
      &lt;img alt=&quot;teable interface&quot; width=&quot;100%&quot; src=&quot;static/assets/images/teable-interface-light.png&quot;&gt;
    &lt;/picture&gt;
  &lt;/h1&gt;

## Quick Guide

1. Looking for a quick experience? Select a scenario from the [template center](https://template.teable.io) and click &quot;Use this template&quot;.
2. Seeking high performance? Try the [1 million rows demo](https://app.teable.io/share/shrVgdLiOvNQABtW0yX/view) to feel the speed of Teable.
3. Want to learn to use it quickly? Click on this [tutorial](https://help.teable.io/quick-start/build-a-simple-base)
4. Interested in deploying it yourself? Click [Deploy on Railway](https://railway.app/template/wada5e?referralCode=rE4BjB)

## ‚ú®Features

#### üìä Spreadsheet-like Interface

All you want is here

- Cell Editing: Directly click and edit content within cells.
- Formula Support: Input mathematical and logical formulas to auto-calculate values.
- Data Sorting and Filtering: Sort data based on a column or multiple columns; use filters to view specific rows of data.
- Aggregation Function: Automatically summarize statistics for each column, providing instant calculations like sum, average, count, max, and min for streamlined data analysis.
- Data Formatting: formatting numbers, dates, etc.
- Grouping: Organize rows into collapsible groups based on column values for easier data analysis and navigation.
- Freeze Columns: Freeze the left column of the table so they remain visible while scrolling.
- Import/Export Capabilities: Import and export data from other formats, e.g., .csv, .xlsx.
- Row Styling &amp; Conditional Formatting: Change row styles automatically based on specific conditions. (coming soon)
- Charts &amp; Visualization Tools: Create charts from table data such as bar charts, pie charts, line graphs, etc. (coming soon)
- Data Validation: Limit or validate data that are entered into cells. (coming soon)
- Undo/Redo: Undo or redo recent changes. (coming soon)
- Comments &amp; Annotations: Attach comments to rows, providing explanations or feedback for other users. (coming soon)
- Find &amp; Replace: Search content within the table and replace it with new content. (coming soon)

#### üóÇÔ∏è Multiple Views

Visualize and interact with data in various ways best suited for their specific tasks.

- Grid View: The default view of the table, which displays data in a spreadsheet-like format.
- Form View: Input data in a form format, which is useful for collecting data.
- Kanban View: Displays data in a Kanban board, which is a visual representation of data in columns and cards. (coming soon)
- Calendar View: Displays data in a calendar format, which is useful for tracking dates and events. (coming soon)
- Gallery View: Displays data in a gallery format, which is useful for displaying images and other media. (coming soon)
- Gantt View: Displays data in a Gantt chart, which is useful for tracking project schedules. (coming soon)
- Timeline View: Displays data in a timeline format, which is useful for tracking events over time. (coming soon)

#### üöÄ Super Fast

Amazing response speed and data capacity

- Millions of data are easily processed, and there is no pressure to filter and sort
- Automatic database indexing for maximum speed
- Supports batch data operations at one time

#### üë®‚Äçüíª Full-featured SQL Support

Seamless integration with the software you are familiar with

- BI tools like Metabase PowerBi...
- No-code tools like Appsmith...
- Direct retrieve data with native SQL

#### üîí Privacy-First

You own your data, in spite of the cloud

- Bring your own database (coming soon)

#### ‚ö°Ô∏è Real-time Collaboration

Designed for teams

- No need to refresh the page, data is updated in real-time
- Seamlessly integrate collaboration member invitation and management
- Perfect permission management mechanism, from table to column level

#### üß© Extensions (Coming Soon)

Expand infinite possibilities

- Backend-less programming capability based on React
- Customize your own application with extremely low cost
- Extremely easy-to-use script extensions mode

#### ü§ñ Automation (Coming Soon)

Empower data-driven workflows effortlessly and seamlessly

- Design your workflow with AI or Visual programming
- Super easy to retrieve data from the table

#### üß† Copilot (Coming Soon)

Native Integrated AI ability

- Chat 2 App. &quot;Create a project management app for me&quot;
- Chat 2 Chart. &quot;Analyze the data in the order table using a bar chart&quot;
- Chat 2 View. &quot;I want to see the schedule for the past week and only display participants&quot;
- Chat 2 Action. &quot;After the order is paid and completed, an email notification will be sent to the customer&quot;
- More actions...

#### üóÑÔ∏è Support for Multiple Databases (Coming Soon)

Choose the SQL database you like

- Sqlite, PostgreSQL, MySQL, MariaDB, TiDB...

---

# Structure

[![Open in Gitpod](https://img.shields.io/badge/Open%20In-Gitpod.io-%231966D2?style=for-the-badge&amp;logo=gitpod)](https://gitpod.io/#https://github.com/teableio/teable)

```
.
‚îú‚îÄ‚îÄ apps
‚îÇ   ‚îú‚îÄ‚îÄ nextjs-app          (front-end, include a nextjs app)
‚îÇ   ‚îî‚îÄ‚îÄ nestjs-backend      (backend, include a nestjs app)
‚îî‚îÄ‚îÄ packages
    ‚îú‚îÄ‚îÄ common-i18n         (locales)
    ‚îú‚îÄ‚îÄ core                (share code and interface)
    ‚îú‚îÄ‚îÄ sdk                 (sdk for extensions)
    ‚îú‚îÄ‚îÄ db-main-prisma      (schema, migrations, prisma client)
    ‚îú‚îÄ‚îÄ eslint-config-bases (to shared eslint configs)
    ‚îî‚îÄ‚îÄ ui-lib              (ui component)
```

## Deploy

### Deploy With Docker

```sh
cd dockers/examples/standalone/
docker-compose up -d
```

for more details, see [dockers/examples](dockers/examples)

### One Click Deployment

These platforms are easy to deploy with one click and come with free credits.

[![Deploy on Railway](https://railway.app/button.svg)](https://railway.app/template/wada5e?referralCode=rE4BjB)

[![Deploy on Zeabur](https://zeabur.com/button.svg)](https://zeabur.com/templates/QF8695)

[![Deploy on Sealos](https://raw.githubusercontent.com/labring-actions/templates/main/Deploy-on-Sealos.svg)](https://cloud.sealos.io/?openapp=system-template%3FtemplateName%3Dteable)

## Development

#### 1. Initialize

```sh
# Enabling the Help Management Package Manager
corepack enable

# Install project dependencies
pnpm install

# Build packages
pnpm g:build
```

#### 2. Select Database

we currently support `sqlite` and `postgres`, you can switch between them by running the following command

```sh
make switch-db-mode
```

#### 3. Custom Environment VariablesÔºàOptionalÔºâ

```sh
cd apps/nextjs-app
copy .env.development .env.development.local
```

#### 4. Run Dev Server

you just need to start backend, it will start next server for frontend automatically, file change will be auto reload

```sh
cd apps/nestjs-backend
pnpm dev
```

## Why Teable?

No-code tools have significantly speed up how we get things done, allowing non-tech users to build amazing apps and changing the way many work and live. People like using spreadsheet-like UI to handle their data because it&#039;s easy, flexible, and great for team collaboration. They also prefer designing their app screens without being stuck with clunky templates.

Giving non-techy people the ability to create their software sounds exciting. But that&#039;s just the start:

- As businesses expand, their data needs intensify. No one wishes to hear that once their orders reach 100k, they&#039;ll outgrow their current interface. Yet, many no-code platforms falter at such scales.
- Most no-code platforms are cloud-based. This means your important data sits with the provider, and switching to another platform can be a headache.
- Sometimes, no-code tools can&#039;t do what you want because of their limitations, leaving users stuck.
- If a tool becomes essential, you&#039;ll eventually need some tech expertise. But developers often find these platforms tricky.
- Maintaining systems with complex setups can be hard for developers, especially if these aren&#039;t built using common software standards.
- Systems that don&#039;t use these standards might need revamping or replacing, costing more in the long run. It might even mean ditching the no-code route and going back to traditional coding.

#### What We Think the Future Of No-code Products Look Like

- An interface that anyone can use to build applications easily.
- Easy access to data, letting users grab, move, and reuse their information as they wish.
- Data privacy and choice, whether that&#039;s in the cloud, on-premise, or even just on your local.
- It needs to work for developers too, not just non-tech users.
- It should handle lots of data, so it can grow with your business.
- Flexibility to integrate with other software, combining strengths to get the job done.
- Last, native AI integration to takes usability to the next level.

In essence, Teable isn&#039;t just another no-code solution, it&#039;s a comprehensive answer to the evolving demands of modern software development, ensuring that everyone, regardless of their technical proficiency, has a platform tailored to their needs.

## Sponsors :heart:

If you are enjoying some this project in your company, I&#039;d really appreciate a [sponsorship](https://github.com/sponsors/teableio), a [coffee](https://ko-fi.com/teable) or a dropped star.
That gives me some more time to improve it to the next level.

# License

AGPL-3.0
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[fastapi/full-stack-fastapi-template]]></title>
            <link>https://github.com/fastapi/full-stack-fastapi-template</link>
            <guid>https://github.com/fastapi/full-stack-fastapi-template</guid>
            <pubDate>Wed, 03 Sep 2025 00:04:22 GMT</pubDate>
            <description><![CDATA[Full stack, modern web application template. Using FastAPI, React, SQLModel, PostgreSQL, Docker, GitHub Actions, automatic HTTPS and more.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/fastapi/full-stack-fastapi-template">fastapi/full-stack-fastapi-template</a></h1>
            <p>Full stack, modern web application template. Using FastAPI, React, SQLModel, PostgreSQL, Docker, GitHub Actions, automatic HTTPS and more.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 37,383</p>
            <p>Forks: 7,110</p>
            <p>Stars today: 38 stars today</p>
            <h2>README</h2><pre># Full Stack FastAPI Template

&lt;a href=&quot;https://github.com/fastapi/full-stack-fastapi-template/actions?query=workflow%3ATest&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/fastapi/full-stack-fastapi-template/workflows/Test/badge.svg&quot; alt=&quot;Test&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://coverage-badge.samuelcolvin.workers.dev/redirect/fastapi/full-stack-fastapi-template&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://coverage-badge.samuelcolvin.workers.dev/fastapi/full-stack-fastapi-template.svg&quot; alt=&quot;Coverage&quot;&gt;&lt;/a&gt;

## Technology Stack and Features

- ‚ö° [**FastAPI**](https://fastapi.tiangolo.com) for the Python backend API.
    - üß∞ [SQLModel](https://sqlmodel.tiangolo.com) for the Python SQL database interactions (ORM).
    - üîç [Pydantic](https://docs.pydantic.dev), used by FastAPI, for the data validation and settings management.
    - üíæ [PostgreSQL](https://www.postgresql.org) as the SQL database.
- üöÄ [React](https://react.dev) for the frontend.
    - üíÉ Using TypeScript, hooks, Vite, and other parts of a modern frontend stack.
    - üé® [Chakra UI](https://chakra-ui.com) for the frontend components.
    - ü§ñ An automatically generated frontend client.
    - üß™ [Playwright](https://playwright.dev) for End-to-End testing.
    - ü¶á Dark mode support.
- üêã [Docker Compose](https://www.docker.com) for development and production.
- üîí Secure password hashing by default.
- üîë JWT (JSON Web Token) authentication.
- üì´ Email based password recovery.
- ‚úÖ Tests with [Pytest](https://pytest.org).
- üìû [Traefik](https://traefik.io) as a reverse proxy / load balancer.
- üö¢ Deployment instructions using Docker Compose, including how to set up a frontend Traefik proxy to handle automatic HTTPS certificates.
- üè≠ CI (continuous integration) and CD (continuous deployment) based on GitHub Actions.

### Dashboard Login

[![API docs](img/login.png)](https://github.com/fastapi/full-stack-fastapi-template)

### Dashboard - Admin

[![API docs](img/dashboard.png)](https://github.com/fastapi/full-stack-fastapi-template)

### Dashboard - Create User

[![API docs](img/dashboard-create.png)](https://github.com/fastapi/full-stack-fastapi-template)

### Dashboard - Items

[![API docs](img/dashboard-items.png)](https://github.com/fastapi/full-stack-fastapi-template)

### Dashboard - User Settings

[![API docs](img/dashboard-user-settings.png)](https://github.com/fastapi/full-stack-fastapi-template)

### Dashboard - Dark Mode

[![API docs](img/dashboard-dark.png)](https://github.com/fastapi/full-stack-fastapi-template)

### Interactive API Documentation

[![API docs](img/docs.png)](https://github.com/fastapi/full-stack-fastapi-template)

## How To Use It

You can **just fork or clone** this repository and use it as is.

‚ú® It just works. ‚ú®

### How to Use a Private Repository

If you want to have a private repository, GitHub won&#039;t allow you to simply fork it as it doesn&#039;t allow changing the visibility of forks.

But you can do the following:

- Create a new GitHub repo, for example `my-full-stack`.
- Clone this repository manually, set the name with the name of the project you want to use, for example `my-full-stack`:

```bash
git clone git@github.com:fastapi/full-stack-fastapi-template.git my-full-stack
```

- Enter into the new directory:

```bash
cd my-full-stack
```

- Set the new origin to your new repository, copy it from the GitHub interface, for example:

```bash
git remote set-url origin git@github.com:octocat/my-full-stack.git
```

- Add this repo as another &quot;remote&quot; to allow you to get updates later:

```bash
git remote add upstream git@github.com:fastapi/full-stack-fastapi-template.git
```

- Push the code to your new repository:

```bash
git push -u origin master
```

### Update From the Original Template

After cloning the repository, and after doing changes, you might want to get the latest changes from this original template.

- Make sure you added the original repository as a remote, you can check it with:

```bash
git remote -v

origin    git@github.com:octocat/my-full-stack.git (fetch)
origin    git@github.com:octocat/my-full-stack.git (push)
upstream    git@github.com:fastapi/full-stack-fastapi-template.git (fetch)
upstream    git@github.com:fastapi/full-stack-fastapi-template.git (push)
```

- Pull the latest changes without merging:

```bash
git pull --no-commit upstream master
```

This will download the latest changes from this template without committing them, that way you can check everything is right before committing.

- If there are conflicts, solve them in your editor.

- Once you are done, commit the changes:

```bash
git merge --continue
```

### Configure

You can then update configs in the `.env` files to customize your configurations.

Before deploying it, make sure you change at least the values for:

- `SECRET_KEY`
- `FIRST_SUPERUSER_PASSWORD`
- `POSTGRES_PASSWORD`

You can (and should) pass these as environment variables from secrets.

Read the [deployment.md](./deployment.md) docs for more details.

### Generate Secret Keys

Some environment variables in the `.env` file have a default value of `changethis`.

You have to change them with a secret key, to generate secret keys you can run the following command:

```bash
python -c &quot;import secrets; print(secrets.token_urlsafe(32))&quot;
```

Copy the content and use that as password / secret key. And run that again to generate another secure key.

## How To Use It - Alternative With Copier

This repository also supports generating a new project using [Copier](https://copier.readthedocs.io).

It will copy all the files, ask you configuration questions, and update the `.env` files with your answers.

### Install Copier

You can install Copier with:

```bash
pip install copier
```

Or better, if you have [`pipx`](https://pipx.pypa.io/), you can run it with:

```bash
pipx install copier
```

**Note**: If you have `pipx`, installing copier is optional, you could run it directly.

### Generate a Project With Copier

Decide a name for your new project&#039;s directory, you will use it below. For example, `my-awesome-project`.

Go to the directory that will be the parent of your project, and run the command with your project&#039;s name:

```bash
copier copy https://github.com/fastapi/full-stack-fastapi-template my-awesome-project --trust
```

If you have `pipx` and you didn&#039;t install `copier`, you can run it directly:

```bash
pipx run copier copy https://github.com/fastapi/full-stack-fastapi-template my-awesome-project --trust
```

**Note** the `--trust` option is necessary to be able to execute a [post-creation script](https://github.com/fastapi/full-stack-fastapi-template/blob/master/.copier/update_dotenv.py) that updates your `.env` files.

### Input Variables

Copier will ask you for some data, you might want to have at hand before generating the project.

But don&#039;t worry, you can just update any of that in the `.env` files afterwards.

The input variables, with their default values (some auto generated) are:

- `project_name`: (default: `&quot;FastAPI Project&quot;`) The name of the project, shown to API users (in .env).
- `stack_name`: (default: `&quot;fastapi-project&quot;`) The name of the stack used for Docker Compose labels and project name (no spaces, no periods) (in .env).
- `secret_key`: (default: `&quot;changethis&quot;`) The secret key for the project, used for security, stored in .env, you can generate one with the method above.
- `first_superuser`: (default: `&quot;admin@example.com&quot;`) The email of the first superuser (in .env).
- `first_superuser_password`: (default: `&quot;changethis&quot;`) The password of the first superuser (in .env).
- `smtp_host`: (default: &quot;&quot;) The SMTP server host to send emails, you can set it later in .env.
- `smtp_user`: (default: &quot;&quot;) The SMTP server user to send emails, you can set it later in .env.
- `smtp_password`: (default: &quot;&quot;) The SMTP server password to send emails, you can set it later in .env.
- `emails_from_email`: (default: `&quot;info@example.com&quot;`) The email account to send emails from, you can set it later in .env.
- `postgres_password`: (default: `&quot;changethis&quot;`) The password for the PostgreSQL database, stored in .env, you can generate one with the method above.
- `sentry_dsn`: (default: &quot;&quot;) The DSN for Sentry, if you are using it, you can set it later in .env.

## Backend Development

Backend docs: [backend/README.md](./backend/README.md).

## Frontend Development

Frontend docs: [frontend/README.md](./frontend/README.md).

## Deployment

Deployment docs: [deployment.md](./deployment.md).

## Development

General development docs: [development.md](./development.md).

This includes using Docker Compose, custom local domains, `.env` configurations, etc.

## Release Notes

Check the file [release-notes.md](./release-notes.md).

## License

The Full Stack FastAPI Template is licensed under the terms of the MIT license.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[pixijs/pixijs]]></title>
            <link>https://github.com/pixijs/pixijs</link>
            <guid>https://github.com/pixijs/pixijs</guid>
            <pubDate>Wed, 03 Sep 2025 00:04:21 GMT</pubDate>
            <description><![CDATA[The HTML5 Creation Engine: Create beautiful digital content with the fastest, most flexible 2D WebGL renderer.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pixijs/pixijs">pixijs/pixijs</a></h1>
            <p>The HTML5 Creation Engine: Create beautiful digital content with the fastest, most flexible 2D WebGL renderer.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 45,667</p>
            <p>Forks: 4,889</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://pixijs.com&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;
    &lt;img height=&quot;150&quot; src=&quot;https://files.pixijs.download/branding/pixijs-logo-transparent-dark.svg?v=1&quot; alt=&quot;PixiJS logo&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://npmjs.com/package/pixi.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/pixi.js.svg&quot; alt=&quot;npm package&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://npmjs.com/package/pixi.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/pixi.js&quot; alt=&quot;npm downloads&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://opencollective.com/pixijs&quot;&gt;&lt;img src=&quot;https://opencollective.com/pixijs/tiers/badge.svg&quot; alt=&quot;open collective&quot;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
 &lt;a href=&quot;https://pixijs.com/8.x/guides&quot;&gt;Guides&lt;/a&gt; | &lt;a href=&quot;https://pixijs.com/8.x/tutorials&quot;&gt;Tutorials&lt;/a&gt; | &lt;a href=&quot;https://pixijs.com/8.x/examples&quot;&gt;Examples&lt;/a&gt; | &lt;a href=&quot;https://pixijs.download/release/docs/index.html&quot;&gt;API Docs&lt;/a&gt; | &lt;a href=&quot;https://discord.gg/QrnxmQUPGV&quot;&gt;Discord&lt;/a&gt; | &lt;a href=&quot;https://bsky.app/profile/pixijs.com&quot;&gt;Bluesky&lt;/a&gt; | &lt;a href=&quot;https://x.com/pixijs&quot;&gt;ùïè&lt;/a&gt;
&lt;/p&gt;

# PixiJS ‚ö°Ô∏è
&gt; Next-Generation, Fastest HTML5 Creation Engine for the Web

- üöÄ [WebGL](https://en.wikipedia.org/wiki/WebGL) &amp; [WebGPU](https://en.wikipedia.org/wiki/WebGPU) Renderers
- ‚ö°Ô∏è Unmatched Performance &amp; Speed
- üé® Easy to use, yet powerful API
- üì¶ Asset Loader
- ‚úã Full Mouse &amp; Multi-touch Support
- ‚úçÔ∏è Flexible Text Rendering
- üìê Versatile Primitive and SVG Drawing
- üñºÔ∏è Dynamic Textures
- üé≠ Masking
- ü™Ñ Powerful Filters
- üåà Advanced Blend Modes

PixiJS is the fastest, most lightweight 2D library available for the web, working
across all devices and allowing you to create rich, interactive graphics and cross-platform applications using WebGL and WebGPU.

### Setup

It&#039;s easy to get started with PixiJS! Just use our [PixiJS Create](https://pixijs.io/create-pixi/) CLI and get set up in just one command:

&lt;p align=&quot;center&quot;&gt;
  &lt;img width=&quot;500&quot; style=&quot;border-radius: 10px; filter: drop-shadow(0px 2px 5px #000);;&quot; alt=&quot;Screenshot from terminal&quot; src=&quot;https://pixijs.io/create-pixi/img/demo.gif&quot;&gt;
&lt;/p&gt;

```
npm create pixi.js@latest
```
or to add it to an existing project:

```
npm install pixi.js
```

### Usage
```typescript
import { Application, Assets, Sprite } from &#039;pixi.js&#039;;

(async () =&gt;
{
    // Create a new application
    const app = new Application();

    // Initialize the application
    await app.init({ background: &#039;#1099bb&#039;, resizeTo: window });

    // Append the application canvas to the document body
    document.body.appendChild(app.canvas);

    // Load the bunny texture
    const texture = await Assets.load(&#039;https://pixijs.com/assets/bunny.png&#039;);

    // Create a bunny Sprite
    const bunny = new Sprite(texture);

    // Center the sprite&#039;s anchor point
    bunny.anchor.set(0.5);

    // Move the sprite to the center of the screen
    bunny.x = app.screen.width / 2;
    bunny.y = app.screen.height / 2;

    app.stage.addChild(bunny);

    // Listen for animate update
    app.ticker.add((time) =&gt;
    {
        // Just for fun, let&#039;s rotate mr rabbit a little.
        // * Delta is 1 if running at 100% performance *
        // * Creates frame-independent transformation *
        bunny.rotation += 0.1 * time.deltaTime;
    });
})();
```
### Contribute

Want to be part of the PixiJS project? Great! All are welcome! We will get there quicker
together :) Whether you find a bug, have a great feature request, or you fancy owning a task
from the road map above, feel free to get in touch.

Make sure to read the [Contributing Guide](.github/CONTRIBUTING.md)
before submitting changes.

### License

This content is released under the [MIT License](http://opensource.org/licenses/MIT).

### Change Log
[Releases](https://github.com/pixijs/pixijs/releases)

### Support
We&#039;re passionate about making PixiJS the best graphics library possible. Our dedication comes from our love for the project and community. If you&#039;d like to support our efforts, please consider contributing to our open collective.
&lt;div&gt;
  &lt;a href=&quot;https://opencollective.com/pixijs&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://opencollective.com/pixijs/donate/button@2x.png?color=blue&quot; width=200 /&gt;
  &lt;/a&gt;
&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[expo/expo]]></title>
            <link>https://github.com/expo/expo</link>
            <guid>https://github.com/expo/expo</guid>
            <pubDate>Wed, 03 Sep 2025 00:04:20 GMT</pubDate>
            <description><![CDATA[An open-source framework for making universal native apps with React. Expo runs on Android, iOS, and the web.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/expo/expo">expo/expo</a></h1>
            <p>An open-source framework for making universal native apps with React. Expo runs on Android, iOS, and the web.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 42,844</p>
            <p>Forks: 8,323</p>
            <p>Stars today: 33 stars today</p>
            <h2>README</h2><pre>&lt;!-- Banner Image --&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://expo.dev/&quot;&gt;
    &lt;img alt=&quot;Expo logo&quot; height=&quot;128&quot; src=&quot;./.github/resources/banner.png&quot;&gt;
    &lt;h1 align=&quot;center&quot;&gt;Expo&lt;/h1&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
   &lt;a aria-label=&quot;SDK version&quot; href=&quot;https://www.npmjs.com/package/expo&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Expo SDK version&quot; src=&quot;https://img.shields.io/npm/v/expo.svg?style=flat-square&amp;label=SDK&amp;labelColor=000000&amp;color=4630EB&quot; /&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;Chat or ask a question&quot; href=&quot;https://chat.expo.dev&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Chat or ask a question&quot; src=&quot;https://img.shields.io/discord/695411232856997968.svg?style=flat-square&amp;labelColor=000000&amp;color=4630EB&amp;logo=discord&amp;logoColor=FFFFFF&amp;label=Chat%20with%20us&quot; /&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;Expo is free to use&quot; href=&quot;https://github.com/expo/expo/blob/main/LICENSE&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;License: MIT&quot; src=&quot;https://img.shields.io/badge/License-MIT-success.svg?style=flat-square&amp;color=33CC12&quot; target=&quot;_blank&quot; /&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;expo downloads&quot; href=&quot;http://www.npmtrends.com/expo&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Downloads&quot; src=&quot;https://img.shields.io/npm/dm/expo.svg?style=flat-square&amp;labelColor=gray&amp;color=33CC12&amp;label=Downloads&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a aria-label=&quot;try expo with snack&quot; href=&quot;https://snack.expo.dev&quot;&gt;&lt;b&gt;Try Expo in the Browser&lt;/b&gt;&lt;/a&gt;
&amp;ensp;‚Ä¢&amp;ensp;
  &lt;a aria-label=&quot;expo documentation&quot; href=&quot;https://docs.expo.dev&quot;&gt;Read the Documentation&lt;/a&gt;
&amp;ensp;‚Ä¢&amp;ensp;
  &lt;a aria-label=&quot;expo documentation&quot; href=&quot;https://expo.dev/blog&quot;&gt;Learn more on our blog&lt;/a&gt;
&amp;ensp;‚Ä¢&amp;ensp;
  &lt;a aria-label=&quot;expo documentation&quot; href=&quot;https://expo.canny.io/feature-requests&quot;&gt;Request a feature&lt;/a&gt;
&lt;/p&gt;

&lt;h6 align=&quot;center&quot;&gt;Follow us on&lt;/h6&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a aria-label=&quot;Follow @expo on X&quot; href=&quot;https://x.com/intent/follow?screen_name=expo&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Expo on X&quot; src=&quot;https://img.shields.io/badge/X-000000?style=for-the-badge&amp;logo=x&amp;logoColor=white&quot; target=&quot;_blank&quot; /&gt;
  &lt;/a&gt;&amp;nbsp;
  &lt;a aria-label=&quot;Follow @expo on GitHub&quot; href=&quot;https://github.com/expo&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Expo on GitHub&quot; src=&quot;https://img.shields.io/badge/GitHub-222222?style=for-the-badge&amp;logo=github&amp;logoColor=white&quot; target=&quot;_blank&quot; /&gt;
  &lt;/a&gt;&amp;nbsp;
  &lt;a aria-label=&quot;Follow @expo on Reddit&quot; href=&quot;https://www.reddit.com/r/expo/&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Expo on Reddit&quot; src=&quot;https://img.shields.io/badge/Reddit-FF4500?style=for-the-badge&amp;logo=reddit&amp;logoColor=white&quot; target=&quot;_blank&quot; /&gt;
  &lt;/a&gt;&amp;nbsp;
  &lt;a aria-label=&quot;Follow @expo on Bluesky&quot; href=&quot;https://bsky.app/profile/expo.dev&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Expo on Bluesky&quot; src=&quot;https://img.shields.io/badge/Bluesky-1DA1F2?style=for-the-badge&amp;logo=bluesky&amp;logoColor=white&quot; target=&quot;_blank&quot; /&gt;
  &lt;/a&gt;&amp;nbsp;
  &lt;a aria-label=&quot;Follow @expo on LinkedIn&quot; href=&quot;https://www.linkedin.com/company/expo-dev&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Expo on LinkedIn&quot; src=&quot;https://img.shields.io/badge/LinkedIn-0077B5?style=for-the-badge&amp;logo=linkedin&amp;logoColor=white&quot; target=&quot;_blank&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

## Introduction

Expo is an open-source platform for making universal native apps that run on Android, iOS, and the web. It includes a universal runtime and libraries that let you build native apps by writing React and JavaScript.

This repository includes the Expo SDK, Modules API, Go app, CLI, Router, documentation, and various other supporting tools. [Expo Application Services (EAS)](https://expo.dev/eas) is a platform of hosted services that are deeply integrated with Expo open source tools. EAS helps you build, ship, and iterate on your app as an individual or a team.

Read the [Expo Community Guidelines](https://expo.dev/guidelines) before interacting in the repository. Thank you for helping keep the Expo community open and welcoming!

## Table of contents

- [üìö Documentation](#-documentation)
- [üó∫ Project Layout](#-project-layout)
- [üèÖ Badges](#-badges)
- [üëè Contributing](#-contributing)
- [‚ùì FAQ](#-faq)
- [üíô The Team](#-the-team)
- [License](#license)

## üìö Documentation

&lt;p&gt;Learn about building and deploying universal apps &lt;a aria-label=&quot;expo documentation&quot; href=&quot;https://docs.expo.dev&quot;&gt;in our official docs!&lt;/a&gt;&lt;/p&gt;

- [Getting Started](https://docs.expo.dev/)
- [API Reference](https://docs.expo.dev/versions/latest/)
- [Using Custom Native Modules](https://docs.expo.dev/workflow/customizing/)

## üó∫ Project Layout

- [`packages`](/packages) All the source code for Expo modules, if you want to edit a library or just see how it works this is where you&#039;ll find it.
- [`apps`](/apps) This is where you can find Expo projects which are linked to the development modules. You&#039;ll do most of your testing in here.
- [`apps/expo-go`](/apps/expo-go) This is where you can find the source code for Expo Go.
- [`apps/expo-go/ios/Exponent.xcworkspace`](/apps/expo-go/ios) is the Xcode workspace. When developing iOS, always open this instead of `Exponent.xcodeproj` because the workspace also loads the CocoaPods dependencies.
- [`docs`](/docs) The source code for **https://docs.expo.dev**
- [`templates`](/templates) The template projects you get when you run `npx create-expo-app`
- [`react-native-lab`](/react-native-lab) This is our fork of `react-native` used to build Expo Go.
- [`guides`](/guides) In-depth tutorials for advanced topics like contributing to the client.
- [`tools`](/tools) contain build and configuration tools.
- [`template-files`](/template-files) contains templates for files that require private keys. They are populated using the keys in `template-files/keys.json`.
- [`template-files/ios/dependencies.json`](/template-files/ios/dependencies.json) specifies the CocoaPods dependencies of the app.

## üèÖ Badges

Let everyone know your app can be run instantly in the _Expo Go_ app!
&lt;br/&gt;

[![runs with Expo Go](https://img.shields.io/badge/Runs%20with%20Expo%20Go-000.svg?style=flat-square&amp;logo=EXPO&amp;labelColor=f3f3f3&amp;logoColor=000)](https://expo.dev/client)

[![runs with Expo Go](https://img.shields.io/badge/Runs%20with%20Expo%20Go-4630EB.svg?style=flat-square&amp;logo=EXPO&amp;labelColor=f3f3f3&amp;logoColor=000)](https://expo.dev/client)

```md
[![runs with Expo Go](https://img.shields.io/badge/Runs%20with%20Expo%20Go-000.svg?style=flat-square&amp;logo=EXPO&amp;labelColor=f3f3f3&amp;logoColor=000)](https://expo.dev/client)

[![runs with Expo Go](https://img.shields.io/badge/Runs%20with%20Expo%20Go-4630EB.svg?style=flat-square&amp;logo=EXPO&amp;labelColor=f3f3f3&amp;logoColor=000)](https://expo.dev/client)
```

## üëè Contributing

If you like Expo and want to help make it better then check out our [contributing guide](/CONTRIBUTING.md)! Check out the [CLI package](https://github.com/expo/expo/tree/main/packages/%40expo/cli) to work on the Expo CLI.

## ‚ùì FAQ

If you have questions about Expo and want answers, then check out our [Frequently Asked Questions](https://docs.expo.dev/faq/)!

If you still have questions you can ask them on our [Discord and Forums](https://chat.expo.dev) or X [@expo](https://x.com/expo).

## üíô The Team

Curious about who makes Expo? Here are our [team members](https://expo.dev/about)!

## License

The Expo source code is made available under the [MIT license](LICENSE). Some of the dependencies are licensed differently, with the BSD license, for example.

&lt;img alt=&quot;Star the Expo repo on GitHub to support the project&quot; src=&quot;https://user-images.githubusercontent.com/9664363/185428788-d762fd5d-97b3-4f59-8db7-f72405be9677.gif&quot; width=&quot;50%&quot;&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>