<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Wed, 29 Oct 2025 00:05:16 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[toeverything/AFFiNE]]></title>
            <link>https://github.com/toeverything/AFFiNE</link>
            <guid>https://github.com/toeverything/AFFiNE</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:16 GMT</pubDate>
            <description><![CDATA[There can be more than Notion and Miro. AFFiNE(pronounced […ô‚Äòfain]) is a next-gen knowledge base that brings planning, sorting and creating all together. Privacy first, open-source, customizable and ready to use.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/toeverything/AFFiNE">toeverything/AFFiNE</a></h1>
            <p>There can be more than Notion and Miro. AFFiNE(pronounced […ô‚Äòfain]) is a next-gen knowledge base that brings planning, sorting and creating all together. Privacy first, open-source, customizable and ready to use.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 57,966</p>
            <p>Forks: 3,952</p>
            <p>Stars today: 1,289 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

&lt;h1 style=&quot;border-bottom: none&quot;&gt;
    &lt;b&gt;&lt;a href=&quot;https://affine.pro&quot;&gt;AFFiNE.Pro&lt;/a&gt;&lt;/b&gt;&lt;br /&gt;
    Write, Draw and Plan All at Once
    &lt;br&gt;
&lt;/h1&gt;
&lt;a href=&quot;https://affine.pro/download&quot;&gt;
    &lt;img alt=&quot;affine logo&quot; src=&quot;https://cdn.affine.pro/Github_hero_image2.png&quot; style=&quot;width: 100%&quot;&gt;
&lt;/a&gt;
&lt;br/&gt;
&lt;p align=&quot;center&quot;&gt;
  A privacy-focused, local-first, open-source, and ready-to-use alternative for Notion &amp; Miro. &lt;br /&gt;
  One hyper-fused platform for wildly creative minds.
&lt;/p&gt;

&lt;br/&gt;

&lt;br/&gt;
&lt;a href=&quot;https://www.producthunt.com/posts/affine-3?utm_source=badge-featured&amp;utm_medium=badge&amp;utm_souce=badge-affine&amp;#0045;3&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=440671&amp;theme=light&quot; alt=&quot;AFFiNE - One&amp;#0032;app&amp;#0032;for&amp;#0032;all&amp;#0032;&amp;#0045;&amp;#0032;Where&amp;#0032;Notion&amp;#0032;meets&amp;#0032;Miro | Product Hunt&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot; /&gt;&lt;/a&gt;
&lt;br/&gt;
&lt;br/&gt;

&lt;div align=&quot;left&quot; valign=&quot;middle&quot;&gt;
&lt;a href=&quot;https://runblaze.dev&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://www.runblaze.dev/logo_dark.png&quot;&gt;
   &lt;img align=&quot;right&quot; src=&quot;https://www.runblaze.dev/logo_light.png&quot; height=&quot;102px&quot;/&gt;
 &lt;/picture&gt;
&lt;/a&gt;

&lt;br style=&quot;display: none;&quot;/&gt;

_Special thanks to [Blaze](https://runblaze.dev) for their support of this project. They provide high-performance Apple Silicon macOS and Linux (AMD64 &amp; ARM64) runners for GitHub Actions, greatly reducing our automated build times._

&lt;/div&gt;

&lt;br/&gt;
&lt;br/&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://affine.pro&quot;&gt;Home Page&lt;/a&gt; |
    &lt;a href=&quot;https://affine.pro/redirect/discord&quot;&gt;Discord&lt;/a&gt; |
    &lt;a href=&quot;https://app.affine.pro&quot;&gt;Live Demo&lt;/a&gt; |
    &lt;a href=&quot;https://affine.pro/blog/&quot;&gt;Blog&lt;/a&gt; |
    &lt;a href=&quot;https://docs.affine.pro/&quot;&gt;Documentation&lt;/a&gt;
&lt;/div&gt;
&lt;br/&gt;

[![Releases](https://img.shields.io/github/downloads/toeverything/AFFiNE/total)](https://github.com/toeverything/AFFiNE/releases/latest)
[![All Contributors][all-contributors-badge]](#contributors)
[![TypeScript-version-icon]](https://www.typescriptlang.org/)

&lt;/div&gt;

&lt;br /&gt;
&lt;div align=&quot;center&quot;&gt;
&lt;em&gt;Docs, canvas and tables are hyper-merged with AFFiNE - just like the word affine (…ôÀàf å…™n | a-fine).&lt;/em&gt;
&lt;/div&gt;
&lt;br /&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;https://github.com/toeverything/AFFiNE/assets/79301703/49a426bb-8d2b-4216-891a-fa5993642253&quot; style=&quot;width: 100%&quot;/&gt;
&lt;/div&gt;

## Getting started &amp; staying tuned with us.

Star us, and you will receive all release notifications from GitHub without any delay!

&lt;img src=&quot;https://user-images.githubusercontent.com/79301703/230891830-0110681e-8c7e-483b-b6d9-9e42b291b9ef.gif&quot; style=&quot;width: 100%&quot;/&gt;

## What is AFFiNE

[AFFiNE](https://affine.pro) is an open-source, all-in-one workspace and an operating system for all the building blocks that assemble your knowledge base and much more -- wiki, knowledge management, presentation and digital assets. It&#039;s a better alternative to Notion and Miro.

## Features

**A true canvas for blocks in any form. Docs and whiteboard are now fully merged.**

- Many editor apps claim to be a canvas for productivity, but AFFiNE is one of the very few which allows you to put any building block on an edgeless canvas -- rich text, sticky notes, any embedded web pages, multi-view databases, linked pages, shapes and even slides. We have it all.

**Multimodal AI partner ready to kick in any work**

- Write up professional work report? Turn an outline into expressive and presentable slides? Summary an article into a well-structured mindmap? Sorting your job plan and backlog for tasks? Or... draw and code prototype apps and web pages directly all with one prompt? With you, [AFFiNE AI](https://affine.pro/ai) pushes your creativity to the edge of your imagination, just like [Canvas AI](https://affine.pro/blog/best-canvas-ai) to generate mind map for brainstorming.

**Local-first &amp; Real-time collaborative**

- We love the idea of local-first that you always own your data on your disk, in spite of the cloud. Furthermore, AFFiNE supports real-time sync and collaborations on web and cross-platform clients.

**Self-host &amp; Shape your own AFFiNE**

- You have the freedom to manage, self-host, fork and build your own AFFiNE. Plugin community and third-party blocks are coming soon. More tractions on [Blocksuite](https://blocksuite.io). Check there to learn how to [self-host AFFiNE](https://docs.affine.pro/self-host-affine).

## Acknowledgement

‚ÄúWe shape our tools and thereafter our tools shape us‚Äù. A lot of pioneers have inspired us along the way, e.g.:

- Quip &amp; Notion with their great concept of ‚Äúeverything is a block‚Äù
- Trello with their Kanban
- Airtable &amp; Miro with their no-code programmable datasheets
- Miro &amp; Whimiscal with their edgeless visual whiteboard
- Remote &amp; Capacities with their object-based tag system

There is a large overlap of their atomic ‚Äúbuilding blocks‚Äù between these apps. They are not open source, nor do they have a plugin system like Vscode for contributors to customize. We want to have something that contains all the features we love and also goes one step even further.

Thanks for checking us out, we appreciate your interest and sincerely hope that AFFiNE resonates with you! üéµ Checking https://affine.pro/ for more details ions.

## Contributing

| Bug Reports                                                                                                                                         | Feature Requests                                                                                                                                               | Questions/Discussions                                                         | AFFiNE Community                                          |
| --------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------- | --------------------------------------------------------- |
| [Create a bug report](https://github.com/toeverything/AFFiNE/issues/new?assignees=&amp;labels=bug%2Cproduct-review&amp;template=BUG-REPORT.yml&amp;title=TITLE) | [Submit a feature request](https://github.com/toeverything/AFFiNE/issues/new?assignees=&amp;labels=feat%2Cproduct-review&amp;template=FEATURE-REQUEST.yml&amp;title=TITLE) | [Check GitHub Discussion](https://github.com/toeverything/AFFiNE/discussions) | [Vist the AFFiNE Community](https://community.affine.pro) |
| Something isn&#039;t working as expected                                                                                                                 | An idea for a new feature, or improvements                                                                                                                     | Discuss and ask questions                                                     | A place to ask, learn and engage with others              |

Calling all developers, testers, tech writers and more! Contributions of all types are more than welcome, you can read more in [docs/types-of-contributions.md](docs/types-of-contributions.md). If you are interested in contributing code, read our [docs/CONTRIBUTING.md](docs/CONTRIBUTING.md) and feel free to check out our GitHub issues to get stuck in to show us what you‚Äôre made of.

**Before you start contributing, please make sure you have read and accepted our [Contributor License Agreement]. To indicate your agreement, simply edit this file and submit a pull request.**

For **bug reports**, **feature requests** and other **suggestions** you can also [create a new issue](https://github.com/toeverything/AFFiNE/issues/new/choose) and choose the most appropriate template for your feedback.

For **translation** and **language support** you can visit our [i18n General Space](https://community.affine.pro/c/i18n-general).

Looking for **other ways to contribute** and wondering where to start? Check out the [AFFiNE Ambassador program](https://community.affine.pro/c/start-here/affine-ambassador), we work closely with passionate community members and provide them with a wide range of support and resources.

If you have questions, you are welcome to contact us. One of the best places to get more info and learn more is in the [AFFiNE Community](https://community.affine.pro) where you can engage with other like-minded individuals.

## Templates

AFFiNE now provides pre-built [templates](https://affine.pro/templates) from our team. Following are the Top 10 most popular templates among AFFiNE users,if you want to contribute, you can contribute your own template so other people can use it too.

- [vision board template](https://affine.pro/templates/category-vision-board-template)
- [one pager template](https://affine.pro/templates/category-one-pager-template-free)
- [sample lesson plan math template](https://affine.pro/templates/sample-lesson-plan-math-template)
- [grr lesson plan template free](https://affine.pro/templates/grr-lesson-plan-template-free)
- [free editable lesson plan template for pre k](https://affine.pro/templates/free-editable-lesson-plan-template-for-pre-k)
- [high note collection planners](https://affine.pro/templates/high-note-collection-planners)
- [digital planner](https://affine.pro/templates/category-digital-planner)
- [ADHD Planner](https://affine.pro/templates/adhd-planner)
- [Reading Log](https://affine.pro/templates/reading-log)
- [Cornell Notes Template](https://affine.pro/templates/category-cornell-notes-template)

## Blog

Welcome to the AFFiNE blog section! Here, you‚Äôll find the latest insights, tips, and guides on how to maximize your experience with AFFiNE and AFFiNE AI, the leading Canvas AI tool for flexible note-taking and creative organization.

- [vision board template](https://affine.pro/blog/8-free-printable-vision-board-templates-examples-2023)
- [ai homework helper](https://affine.pro/blog/ai-homework-helper)
- [vision board maker](https://affine.pro/blog/vision-board-maker)
- [itinerary template](https://affine.pro/blog/free-customized-travel-itinerary-planner-templates)
- [one pager template](https://affine.pro/blog/top-12-one-pager-examples-how-to-create-your-own)
- [cornell notes template](https://affine.pro/blog/the-cornell-notes-template-and-system-learning-tips)
- [swot chart template](https://affine.pro/blog/top-10-free-editable-swot-analysis-template-examples)
- [apps like luna task](https://affine.pro/blog/apps-like-luna-task)
- [note taking ai from rough notes to mind map](https://affine.pro/blog/dynamic-AI-notes)
- [canvas ai](https://affine.pro/blog/best-canvas-ai)
- [one pager](https://affine.pro/blog/top-12-one-pager-examples-how-to-create-your-own)
- [SOP Template](https://affine.pro/blog/how-to-write-sop-step-by-step-guide-5-best-free-tools-templates)
- [Chore Chart](https://affine.pro/blog/10-best-free-chore-chart-templates-kids-adults)

## Ecosystem

| Name                                             |                            |                                                                                                                                         |
| ------------------------------------------------ | -------------------------- | --------------------------------------------------------------------------------------------------------------------------------------- |
| [@affine/component](packages/frontend/component) | AFFiNE Component Resources | ![](https://img.shields.io/codecov/c/github/toeverything/affine?style=flat-square)                                                      |
| [@toeverything/theme](packages/common/theme)     | AFFiNE theme               | [![](https://img.shields.io/npm/dm/@toeverything/theme?style=flat-square&amp;color=eee)](https://www.npmjs.com/package/@toeverything/theme) |

## Upstreams

We would also like to give thanks to open-source projects that make AFFiNE possible:

- [Blocksuite](https://github.com/toeverything/BlockSuite) - üí† BlockSuite is the open-source collaborative editor project behind AFFiNE.
- [OctoBase](https://github.com/toeverything/OctoBase) - üêô OctoBase is the open-source database behind AFFiNE, local-first, yet collaborative. A light-weight, scalable, data engine written in Rust.
- [yjs](https://github.com/yjs/yjs) - Fundamental support of CRDTs for our implementation on state management and data sync.
- [electron](https://github.com/electron/electron) - Build cross-platform desktop apps with JavaScript, HTML, and CSS.
- [React](https://github.com/facebook/react) - The library for web and native user interfaces.
- [napi-rs](https://github.com/napi-rs/napi-rs) - A framework for building compiled Node.js add-ons in Rust via Node-API.
- [Jotai](https://github.com/pmndrs/jotai) - Primitive and flexible state management for React.
- [async-call-rpc](https://github.com/Jack-Works/async-call-rpc) - A lightweight JSON RPC client &amp; server.
- [Vite](https://github.com/vitejs/vite) - Next generation frontend tooling.
- Other upstream [dependencies](https://github.com/toeverything/AFFiNE/network/dependencies).

Thanks a lot to the community for providing such powerful and simple libraries, so that we can focus more on the implementation of the product logic, and we hope that in the future our projects will also provide a more easy-to-use knowledge base for everyone.

## Contributors

We would like to express our gratitude to all the individuals who have already contributed to AFFiNE! If you have any AFFiNE-related project, documentation, tool or template, please feel free to contribute it by submitting a pull request to our curated list on GitHub: [awesome-affine](https://github.com/toeverything/awesome-affine).

&lt;a href=&quot;https://github.com/toeverything/affine/graphs/contributors&quot;&gt;
  &lt;img alt=&quot;contributors&quot; src=&quot;https://opencollective.com/affine/contributors.svg?width=890&amp;button=false&quot; /&gt;
&lt;/a&gt;

## Self-Host

Begin with Docker to deploy your own feature-rich, unrestricted version of AFFiNE. Our team is diligently updating to the latest version. For more information on how to self-host AFFiNE, please refer to our [documentation](https://docs.affine.pro/self-host-affine).

[![Run on ClawCloud](https://raw.githubusercontent.com/ClawCloud/Run-Template/refs/heads/main/Run-on-ClawCloud.svg)](https://template.run.claw.cloud/?openapp=system-fastdeploy%3FtemplateName%3Daffine)

## Hiring

Some amazing companies, including AFFiNE, are looking for developers! Are you interested in joining AFFiNE or its partners? Check out our [Discord channel](https://affine.pro/redirect/discord) for some of the latest jobs available.

## Feature Request

For feature requests, please see [community.affine.pro](https://community.affine.pro/c/feature-requests/).

## Building

### Codespaces

From the GitHub repo main page, click the green &quot;Code&quot; button and select &quot;Create codespace on master&quot;. This will open a new Codespace with the (supposedly auto-forked
AFFiNE repo cloned, built, and ready to go.

### Local

See [BUILDING.md] for instructions on how to build AFFiNE from source code.

## Contributing

We welcome contributions from everyone.
See [docs/contributing/tutorial.md](./docs/contributing/tutorial.md) for details.

## Thanks

&lt;a href=&quot;https://www.chromatic.com/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/321738/84662277-e3db4f80-af1b-11ea-88f5-91d67a5e59f6.png&quot; width=&quot;153&quot; height=&quot;30&quot; alt=&quot;Chromatic&quot; /&gt;&lt;/a&gt;

Thanks to [Chromatic](https://www.chromatic.com/) for providing the visual testing platform that helps us review UI changes and catch visual regressions.

## License

### Editions

- AFFiNE Community Edition (CE) is the current available version, it&#039;s free for self-host under the MIT license.

- AFFiNE Enterprise Edition (EE) is yet to be published, it will have more advanced features and enterprise-oriented offerings, including but not exclusive to rebranding and SSO, advanced admin and audit, etc., you may refer to https://affine.pro/pricing for more information

See [LICENSE] for details.

[all-contributors-badge]: https://img.shields.io/github/contributors/toeverything/AFFiNE
[license]: ./LICENSE
[building.md]: ./docs/BUILDING.md
[update page]: https://affine.pro/blog?tag=Release%20Note
[jobs available]: ./docs/jobs.md
[latest packages]: https://github.com/toeverything/AFFiNE/pkgs/container/affine-self-hosted
[contributor license agreement]: https://github.com/toeverything/affine/edit/canary/.github/CLA.md
[stars-icon]: https://img.shields.io/github/stars/toeverything/AFFiNE.svg?style=flat&amp;logo=github&amp;colorB=red&amp;label=stars
[codecov]: https://codecov.io/gh/toeverything/affine/branch/canary/graphs/badge.svg?branch=canary
[node-version-icon]: https://img.shields.io/badge/node-%3E=18.16.1-success
[typescript-version-icon]: https://img.shields.io/github/package-json/dependency-version/toeverything/affine/dev/typescript
[react-version-icon]: https://img.shields.io/github/package-json/dependency-version/toeverything/AFFiNE/react?filename=packages%2Ffrontend%2Fcore%2Fpackage.json&amp;color=rgb(97%2C228%2C251)
[blocksuite-icon]: https://img.shields.io/github/package-json/dependency-version/toeverything/AFFiNE/@blocksuite/store?color=6880ff&amp;filename=packages%2Ffrontend%2Fcore%2Fpackage.json&amp;label=blocksuite
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[coinbase/x402]]></title>
            <link>https://github.com/coinbase/x402</link>
            <guid>https://github.com/coinbase/x402</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:15 GMT</pubDate>
            <description><![CDATA[A payments protocol for the internet. Built on HTTP.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/coinbase/x402">coinbase/x402</a></h1>
            <p>A payments protocol for the internet. Built on HTTP.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,297</p>
            <p>Forks: 520</p>
            <p>Stars today: 277 stars today</p>
            <h2>README</h2><pre># x402 payments protocol

&gt; &quot;1 line of code to accept digital dollars. No fee, 2 second settlement, $0.001 minimum payment.&quot;

```typescript
app.use(
  // How much you want to charge, and where you want the funds to land
  paymentMiddleware(&quot;0xYourAddress&quot;, { &quot;/your-endpoint&quot;: &quot;$0.01&quot; })
);
// That&#039;s it! See examples/typescript/servers/express.ts for a complete example. Instruction below for running on base-sepolia.
```

## Philosophy

Payments on the internet are fundamentally flawed. Credit Cards are high friction, hard to accept, have minimum payments that are far too high, and don&#039;t fit into the programmatic nature of the internet.
It&#039;s time for an open, internet-native form of payments. A payment rail that doesn&#039;t have high minimums + % based fee. Payments that are amazing for humans and AI agents.

## Principles

- **Open standard:** the x402 protocol will never force reliance on a single party
- **HTTP Native:** x402 is meant to seamlessly complement the existing HTTP request made by traditional web services, it should not mandate additional requests outside the scope of a typical client / server flow.
- **Chain and token agnostic:** we welcome contributions that add support for new chains, signing standards, or schemes, so long as they meet our acceptance criteria laid out in [CONTRIBUTING.md](https://github.com/coinbase/x402/blob/main/CONTRIBUTING.md)
- **Trust minimizing:** all payment schemes must not allow for the facilitator or resource server to move funds, other than in accordance with client intentions
- **Easy to use:** x402 needs to be 10x better than existing ways to pay on the internet. This means abstracting as many details of crypto as possible away from the client and resource server, and into the facilitator. This means the client/server should not need to think about gas, rpc, etc.

## Ecosystem

The x402 ecosystem is growing! Check out our [ecosystem page](https://x402.org/ecosystem) to see projects building with x402, including:

- Client-side integrations
- Services and endpoints
- Ecosystem infrastructure and tooling
- Learning and community resources

Want to add your project to the ecosystem? See our [demo site README](https://github.com/coinbase/x402/tree/main/typescript/site#adding-your-project-to-the-ecosystem) for detailed instructions on how to submit your project.

**Roadmap:** see [ROADMAP.md](https://github.com/coinbase/x402/blob/main/ROADMAP.md)

## Terms:

- `resource`: Something on the internet. This could be a webpage, file server, RPC service, API, any resource on the internet that accepts HTTP / HTTPS requests.
- `client`: An entity wanting to pay for a resource.
- `facilitator server`: A server that facilitates verification and execution of on-chain payments.
- `resource server`: An HTTP server that provides an API or other resource for a client.

## Technical Goals:

- Permissionless and secure for clients and servers
- Gasless for client and resource servers
- Minimal integration for the resource server and client (1 line for the server, 1 function for the client)
- Ability to trade off speed of response for guarantee of payment
- Extensible to different payment flows and chains

## V1 Protocol

The `x402` protocol is a chain agnostic standard for payments on top of HTTP, leverage the existing `402 Payment Required` HTTP status code to indicate that a payment is required for access to the resource.

It specifies:

1. A schema for how servers can respond to clients to facilitate payment for a resource (`PaymentRequirements`)
2. A standard header `X-PAYMENT` that is set by clients paying for resources
3. A standard schema and encoding method for data in the `X-PAYMENT` header
4. A recommended flow for how payments should be verified and settled by a resource server
5. A REST specification for how a resource server can perform verification and settlement against a remote 3rd party server (`facilitator`)
6. A specification for a `X-PAYMENT-RESPONSE` header that can be used by resource servers to communicate blockchain transactions details to the client in their HTTP response

### V1 Protocol Sequencing

![](./static/x402-protocol-flow.png)

The following outlines the flow of a payment using the `x402` protocol. Note that steps (1) and (2) are optional if the client already knows the payment details accepted for a resource.

1. `Client` makes an HTTP request to a `resource server`.

2. `Resource server` responds with a `402 Payment Required` status and a `Payment Required Response` JSON object in the response body.

3. `Client` selects one of the `paymentRequirements` returned by the server response and creates a `Payment Payload` based on the `scheme` of the `paymentRequirements` they have selected.

4. `Client` sends the HTTP request with the `X-PAYMENT` header containing the `Payment Payload` to the resource server.

5. `Resource server` verifies the `Payment Payload` is valid either via local verification or by POSTing the `Payment Payload` and `Payment Requirements` to the `/verify` endpoint of a `facilitator server`.

6. `Facilitator server` performs verification of the object based on the `scheme` and `network` of the `Payment Payload` and returns a `Verification Response`.

7. If the `Verification Response` is valid, the resource server performs the work to fulfill the request. If the `Verification Response` is invalid, the resource server returns a `402 Payment Required` status and a `Payment Required Response` JSON object in the response body.

8. `Resource server` either settles the payment by interacting with a blockchain directly, or by POSTing the `Payment Payload` and `Payment PaymentRequirements` to the `/settle` endpoint of a `facilitator server`.

9. `Facilitator server` submits the payment to the blockchain based on the `scheme` and `network` of the `Payment Payload`.

10. `Facilitator server` waits for the payment to be confirmed on the blockchain.

11. `Facilitator server` returns a `Payment Execution Response` to the resource server.

12. `Resource server` returns a `200 OK` response to the `Client` with the resource they requested as the body of the HTTP response, and a `X-PAYMENT-RESPONSE` header containing the `Settlement Response` as Base64 encoded JSON if the payment was executed successfully.

### Type Specifications

#### Data types

**Payment Required Response**

```json5
{
  // Version of the x402 payment protocol
  x402Version: int,

  // List of payment requirements that the resource server accepts. A resource server may accept on multiple chains, or in multiple currencies.
  accepts: [paymentRequirements]

  // Message from the resource server to the client to communicate errors in processing payment
  error: string
}
```

**paymentRequirements**

```json5
{
  // Scheme of the payment protocol to use
  scheme: string;

  // Network of the blockchain to send payment on
  network: string;

  // Maximum amount required to pay for the resource in atomic units of the asset
  maxAmountRequired: uint256 as string;

  // URL of resource to pay for
  resource: string;

  // Description of the resource
  description: string;

  // MIME type of the resource response
  mimeType: string;

  // Output schema of the resource response
  outputSchema?: object | null;

  // Address to pay value to
  payTo: string;

  // Maximum time in seconds for the resource server to respond
  maxTimeoutSeconds: number;

  // Address of the EIP-3009 compliant ERC20 contract
  asset: string;

  // Extra information about the payment details specific to the scheme
  // For `exact` scheme on a EVM network, expects extra to contain the records `name` and `version` pertaining to asset
  extra: object | null;
}
```

**`Payment Payload`** (included as the `X-PAYMENT` header in base64 encoded json)

```json5
{
  // Version of the x402 payment protocol
  x402Version: number;

  // scheme is the scheme value of the accepted `paymentRequirements` the client is using to pay
  scheme: string;

  // network is the network id of the accepted `paymentRequirements` the client is using to pay
  network: string;

  // payload is scheme dependent
  payload: &lt;scheme dependent&gt;;
}
```

#### Facilitator Types &amp; Interface

A `facilitator server` is a 3rd party service that can be used by a `resource server` to verify and settle payments, without the `resource server` needing to have access to a blockchain node or wallet.

**POST /verify**. Verify a payment with a supported scheme and network:

- Request body JSON:
  ```json5
  {
    x402Version: number;
    paymentHeader: string;
    paymentRequirements: paymentRequirements;
  }
  ```
- Response:
  ```json5
  {
    isValid: boolean;
    invalidReason: string | null;
  }
  ```

**POST /settle**. Settle a payment with a supported scheme and network:

- Request body JSON:

  ```json5
  {
    x402Version: number;
    paymentHeader: string;
    paymentRequirements: paymentRequirements;
  }
  ```

- Response:

  ```json5
  {
    // Whether the payment was successful
    success: boolean;

    // Error message from the facilitator server
    error: string | null;

    // Transaction hash of the settled payment
    txHash: string | null;

    // Network id of the blockchain the payment was settled on
    networkId: string | null;
  }
  ```

**GET /supported**. Get supported payment schemes and networks:

- Response:
  ```json5
  {
    kinds: [
      {
        &quot;scheme&quot;: string,
        &quot;network&quot;: string,
      }
    ]
  }
  ```

### Schemes

A scheme is a logical way of moving money.

Blockchains allow for a large number of flexible ways to move money. To help facilitate an expanding number of payment use cases, the `x402` protocol is extensible to different ways of settling payments via its `scheme` field.

Each payment scheme may have different operational functionality depending on what actions are necessary to fulfill the payment.
For example `exact`, the first scheme shipping as part of the protocol, would have different behavior than `upto`. `exact` transfers a specific amount (ex: pay $1 to read an article), while a theoretical `upto` would transfer up to an amount, based on the resources consumed during a request (ex: generating tokens from an LLM).

See `specs/schemes` for more details on schemes, and see `specs/schemes/exact/scheme_exact_evm.md` to see the first proposed scheme for exact payment on EVM chains.

### Schemes vs Networks

Because a scheme is a logical way of moving money, the way a scheme is implemented can be different for different blockchains. (ex: the way you need to implement `exact` on Ethereum is very different from the way you need to implement `exact` on Solana).

Clients and facilitators must explicitly support different `(scheme, network)` pairs in order to be able to create proper payloads and verify / settle payments.

## Running example

**Requirements:** Node.js v24 or higher

1. From `examples/typescript` run `pnpm install` and `pnpm build` to ensure all dependent packages and examples are setup.

2. Select a server, i.e. express, and `cd` into that example. Add your server&#039;s ethereum address to get paid to into the `.env` file, and then run `pnpm dev` in that directory.

3. Select a client, i.e. axios, and `cd` into that example. Add your private key for the account making payments into the `.env` file, and then run `pnpm dev` in that directory.

You should see activities in the client terminal, which will display a weather report.

## Running tests

1. Navigate to the typescript directory: `cd typescript`
2. Install dependencies: `pnpm install`
3. Run the unit tests: `pnpm test`

This will run the unit tests for the x402 packages.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[cjpais/Handy]]></title>
            <link>https://github.com/cjpais/Handy</link>
            <guid>https://github.com/cjpais/Handy</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:14 GMT</pubDate>
            <description><![CDATA[A free, open source, and extensible speech-to-text application that works completely offline.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/cjpais/Handy">cjpais/Handy</a></h1>
            <p>A free, open source, and extensible speech-to-text application that works completely offline.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,026</p>
            <p>Forks: 260</p>
            <p>Stars today: 132 stars today</p>
            <h2>README</h2><pre># Handy

[![Discord](https://img.shields.io/badge/Discord-%235865F2.svg?style=for-the-badge&amp;logo=discord&amp;logoColor=white)](https://discord.com/invite/WVBeWsNXK4)

**A free, open source, and extensible speech-to-text application that works completely offline.**

Handy is a cross-platform desktop application built with Tauri (Rust + React/TypeScript) that provides simple, privacy-focused speech transcription. Press a shortcut, speak, and have your words appear in any text field‚Äîall without sending your voice to the cloud.

## Why Handy?

Handy was created to fill the gap for a truly open source, extensible speech-to-text tool. As stated on [handy.computer](https://handy.computer):

- **Free**: Accessibility tooling belongs in everyone&#039;s hands, not behind a paywall
- **Open Source**: Together we can build further. Extend Handy for yourself and contribute to something bigger
- **Private**: Your voice stays on your computer. Get transcriptions without sending audio to the cloud
- **Simple**: One tool, one job. Transcribe what you say and put it into a text box

Handy isn&#039;t trying to be the best speech-to-text app‚Äîit&#039;s trying to be the most forkable one.

## How It Works

1. **Press** a configurable keyboard shortcut to start/stop recording (or use push-to-talk mode)
2. **Speak** your words while the shortcut is active
3. **Release** and Handy processes your speech using Whisper
4. **Get** your transcribed text pasted directly into whatever app you&#039;re using

The process is entirely local:
- Silence is filtered using VAD (Voice Activity Detection) with Silero
- Transcription uses your choice of models:
  - **Whisper models** (Small/Medium/Turbo/Large) with GPU acceleration when available
  - **Parakeet V3** - CPU-optimized model with excellent performance and automatic language detection
- Works on Windows, macOS, and Linux

## Quick Start

### Installation

1. Download the latest release from the [releases page](https://github.com/cjpais/Handy/releases) or the [website](https://handy.computer)
2. Install the application following platform-specific instructions
3. Launch Handy and grant necessary system permissions (microphone, accessibility)
4. Configure your preferred keyboard shortcuts in Settings
5. Start transcribing!

### Development Setup

For detailed build instructions including platform-specific requirements, see [BUILD.md](BUILD.md).

## Architecture

Handy is built as a Tauri application combining:

- **Frontend**: React + TypeScript with Tailwind CSS for the settings UI
- **Backend**: Rust for system integration, audio processing, and ML inference
- **Core Libraries**:
  - `whisper-rs`: Local speech recognition with Whisper models
  - `transcription-rs`: CPU-optimized speech recognition with Parakeet models
  - `cpal`: Cross-platform audio I/O
  - `vad-rs`: Voice Activity Detection
  - `rdev`: Global keyboard shortcuts and system events
  - `rubato`: Audio resampling

### Debug Mode

Handy includes an advanced debug mode for development and troubleshooting. Access it by pressing:
- **macOS**: `Cmd+Shift+D`
- **Windows/Linux**: `Ctrl+Shift+D`

## Known Issues &amp; Current Limitations

This project is actively being developed and has some [known issues](https://github.com/cjpais/Handy/issues). We believe in transparency about the current state:

### Platform Support
- **macOS (both Intel and Apple Silicon)**
- **x64 Windows**
- **x64 Linux**

### System Requirements/Recommendations

The following are recommendations for running Handy on your own machine. If you don&#039;t meet the system requirements, the performance of the application may be degraded. We are working on improving the performance across all kinds of computers and hardware.

**For Whisper Models:**
- **macOS**: M series Mac, Intel Mac
- **Windows**: Intel, AMD, or NVIDIA GPU
- **Linux**: Intel, AMD, or NVIDIA GPU
  * Ubuntu 22.04, 24.04

**For Parakeet V3 Model:**
- **CPU-only operation** - runs on a wide variety of hardware
- **Minimum**: Intel Skylake (6th gen) or equivalent AMD processors
- **Performance**: ~5x real-time speed on mid-range hardware (tested on i5)
- **Automatic language detection** - no manual language selection required

### How to Contribute

1. **Check existing issues** at [github.com/cjpais/Handy/issues](https://github.com/cjpais/Handy/issues)
2. **Fork the repository** and create a feature branch
3. **Test thoroughly** on your target platform
4. **Submit a pull request** with clear description of changes
5. **Join the discussion** - reach out at [contact@handy.computer](mailto:contact@handy.computer)

The goal is to create both a useful tool and a foundation for others to build upon‚Äîa well-patterned, simple codebase that serves the community.

## Sponsors

&lt;div align=&quot;center&quot;&gt;
  We&#039;re grateful for the support of our sponsors who help make Handy possible:
  &lt;br&gt;&lt;br&gt;
  &lt;a href=&quot;https://wordcab.com&quot;&gt;
    &lt;img src=&quot;sponsor-images/wordcab.png&quot; alt=&quot;Wordcab&quot; width=&quot;120&quot; height=&quot;120&quot;&gt;
  &lt;/a&gt;
  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
  &lt;a href=&quot;https://github.com/epicenter-so/epicenter&quot;&gt;
    &lt;img src=&quot;sponsor-images/epicenter.png&quot; alt=&quot;Epicenter&quot; width=&quot;120&quot; height=&quot;120&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;

## Related Projects

- **[Handy CLI](https://github.com/cjpais/handy-cli)** - The original Python command-line version
- **[handy.computer](https://handy.computer)** - Project website with demos and documentation

## License

MIT License - see [LICENSE](LICENSE) file for details.

## Acknowledgments

- **Whisper** by OpenAI for the speech recognition model
- **whisper.cpp and ggml** for amazing cross-platform whisper inference/acceleration
- **Silero** for great lightweight VAD
- **Tauri** team for the excellent Rust-based app framework
- **Community contributors** helping make Handy better

---

*&quot;Your search for the right speech-to-text tool can end here‚Äînot because Handy is perfect, but because you can make it perfect for you.&quot;*
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[jestjs/jest]]></title>
            <link>https://github.com/jestjs/jest</link>
            <guid>https://github.com/jestjs/jest</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:13 GMT</pubDate>
            <description><![CDATA[Delightful JavaScript Testing.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/jestjs/jest">jestjs/jest</a></h1>
            <p>Delightful JavaScript Testing.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 45,120</p>
            <p>Forks: 6,613</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/jest&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/jest&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/jestjs/jest/blob/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg&quot; alt=&quot;Jest is released under the MIT license.&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=jestjs_&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/jestjs_.svg?style=social&amp;label=Follow%20@jestjs_&quot; alt=&quot;Follow on Twitter&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/jestjs/jest/actions/workflows/nodejs.yml&quot;&gt;&lt;img alt=&quot;GitHub CI Status&quot; src=&quot;https://img.shields.io/github/actions/workflow/status/jestjs/jest/nodejs.yml?label=CI&amp;logo=GitHub&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://codecov.io/github/jestjs/jest&quot;&gt;&lt;img alt=&quot;Coverage Status&quot; src=&quot;https://img.shields.io/codecov/c/github/jestjs/jest/main.svg?maxAge=43200&quot;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://gitpod.io/#https://github.com/jestjs/jest&quot;&gt;&lt;img alt=&quot;Gitpod ready-to-code&quot; src=&quot;https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;!-- A spacer --&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;website/static/img/jest-readme-headline.png&quot; width=&quot;80%&quot;/&gt;&lt;/p&gt;

&lt;h2 align=&quot;center&quot;&gt;üÉè Delightful JavaScript Testing&lt;/h2&gt;

**üë©üèª‚Äçüíª Developer Ready**: A comprehensive JavaScript testing solution. Works out of the box for most JavaScript projects.

**üèÉüèΩ Instant Feedback**: Fast, interactive watch mode only runs test files related to changed files.

**üì∏ Snapshot Testing**: Capture snapshots of large objects to simplify testing and to analyze how they change over time.

&lt;p align=&quot;right&quot;&gt;&lt;em&gt;See more on &lt;a href=&quot;https://jestjs.io&quot;&gt;jestjs.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

## Table of Contents

- [Getting Started](#getting-started)
- [Running from command line](#running-from-command-line)
- [Additional Configuration](#additional-configuration)
  - [Generate a basic configuration file](#generate-a-basic-configuration-file)
  - [Using Babel](#using-babel)
  - [Using webpack](#using-webpack)
  - [Using Vite](#using-vite)
  - [Using Parcel](#using-parcel)
  - [Using Typescript](#using-typescript)
- [Documentation](#documentation)
- [Badge](#badge)
- [Contributing](#contributing)
  - [Code of Conduct](#code-of-conduct)
  - [Contributing Guide](#contributing-guide)
  - [Good First Issues](#good-first-issues)
- [Credits](#credits)
  - [Backers](#backers)
  - [Sponsors](#sponsors)
- [License](#license)
- [Copyright](#copyright)

## Getting Started

&lt;!-- copied from Getting Started docs, links updated to point to Jest website --&gt;

Install Jest using [`yarn`](https://yarnpkg.com/en/package/jest):

```bash
yarn add --dev jest
```

Or [`npm`](https://www.npmjs.com/package/jest):

```bash
npm install --save-dev jest
```

Note: Jest documentation uses `yarn` commands, but `npm` will also work. You can compare `yarn` and `npm` commands in the [yarn docs, here](https://yarnpkg.com/en/docs/migrating-from-npm#toc-cli-commands-comparison).

Let&#039;s get started by writing a test for a hypothetical function that adds two numbers. First, create a `sum.js` file:

```javascript
function sum(a, b) {
  return a + b;
}
module.exports = sum;
```

Then, create a file named `sum.test.js`. This will contain our actual test:

```javascript
const sum = require(&#039;./sum&#039;);

test(&#039;adds 1 + 2 to equal 3&#039;, () =&gt; {
  expect(sum(1, 2)).toBe(3);
});
```

Add the following section to your `package.json`:

```json
{
  &quot;scripts&quot;: {
    &quot;test&quot;: &quot;jest&quot;
  }
}
```

Finally, run `yarn test` or `npm test` and Jest will print this message:

```bash
PASS  ./sum.test.js
‚úì adds 1 + 2 to equal 3 (5ms)
```

**You just successfully wrote your first test using Jest!**

This test used `expect` and `toBe` to test that two values were exactly identical. To learn about the other things that Jest can test, see [Using Matchers](https://jestjs.io/docs/using-matchers).

## Running from command line

You can run Jest directly from the CLI (if it&#039;s globally available in your `PATH`, e.g. by `yarn global add jest` or `npm install jest --global`) with a variety of useful options.

Here&#039;s how to run Jest on files matching `my-test`, using `config.json` as a configuration file and display a native OS notification after the run:

```bash
jest my-test --notify --config=config.json
```

If you&#039;d like to learn more about running `jest` through the command line, take a look at the [Jest CLI Options](https://jestjs.io/docs/cli) page.

## Additional Configuration

### Generate a basic configuration file

Based on your project, Jest will ask you a few questions and will create a basic configuration file with a short description for each option:

```bash
yarn create jest
```

### Using Babel

To use [Babel](https://babeljs.io/), install required dependencies via `yarn`:

```bash
yarn add --dev babel-jest @babel/core @babel/preset-env
```

Configure Babel to target your current version of Node by creating a `babel.config.js` file in the root of your project:

```javascript
// babel.config.js
module.exports = {
  presets: [[&#039;@babel/preset-env&#039;, {targets: {node: &#039;current&#039;}}]],
};
```

The ideal configuration for Babel will depend on your project. See [Babel&#039;s docs](https://babeljs.io/docs/en/) for more details.

&lt;details&gt;
  &lt;summary markdown=&quot;span&quot;&gt;&lt;strong&gt;Making your Babel config jest-aware&lt;/strong&gt;&lt;/summary&gt;

Jest will set `process.env.NODE_ENV` to `&#039;test&#039;` if it&#039;s not set to something else. You can use that in your configuration to conditionally setup only the compilation needed for Jest, e.g.

```javascript
// babel.config.js
module.exports = api =&gt; {
  const isTest = api.env(&#039;test&#039;);
  // You can use isTest to determine what presets and plugins to use.

  return {
    // ...
  };
};
```

&gt; Note: `babel-jest` is automatically installed when installing Jest and will automatically transform files if a babel configuration exists in your project. To avoid this behavior, you can explicitly reset the `transform` configuration option:

```javascript
// jest.config.js
module.exports = {
  transform: {},
};
```

&lt;/details&gt;

&lt;!-- Note that the Babel 6 section in the Getting Started was removed --&gt;

### Using webpack

Jest can be used in projects that use [webpack](https://webpack.js.org/) to manage assets, styles, and compilation. webpack does offer some unique challenges over other tools. Refer to the [webpack guide](https://jestjs.io/docs/webpack) to get started.

### Using Vite

Jest can be used in projects that use [vite](https://vitejs.dev/) to serves source code over native ESM to provide some frontend tooling, vite is an opinionated tool and does offer some out-of-the box workflows. Jest is not fully supported by vite due to how the [plugin system](https://github.com/vitejs/vite/issues/1955#issuecomment-776009094) from vite works, but there is some working examples for first-class jest integration using the `vite-jest`, since this is not fully supported, you might as well read the [limitation of the `vite-jest`](https://github.com/sodatea/vite-jest/tree/main/packages/vite-jest#limitations-and-differences-with-commonjs-tests). Refer to the [vite guide](https://vitejs.dev/guide/) to get started.

### Using Parcel

Jest can be used in projects that use [parcel-bundler](https://parceljs.org/) to manage assets, styles, and compilation similar to webpack. Parcel requires zero configuration. Refer to the official [docs](https://parceljs.org/docs/) to get started.

### Using TypeScript

Jest supports TypeScript, via Babel. First, make sure you followed the instructions on [using Babel](#using-babel) above. Next, install the `@babel/preset-typescript` via `yarn`:

```bash
yarn add --dev @babel/preset-typescript
```

Then add `@babel/preset-typescript` to the list of presets in your `babel.config.js`.

```diff
// babel.config.js
module.exports = {
  presets: [
    [&#039;@babel/preset-env&#039;, {targets: {node: &#039;current&#039;}}],
+    &#039;@babel/preset-typescript&#039;,
  ],
};
```

However, there are some [caveats](https://babeljs.io/docs/en/babel-plugin-transform-typescript#caveats) to using TypeScript with Babel. Because TypeScript support in Babel is purely transpilation, Jest will not type-check your tests as they are run. If you want that, you can use [ts-jest](https://github.com/kulshekhar/ts-jest) instead, or just run the TypeScript compiler [tsc](https://www.typescriptlang.org/docs/handbook/compiler-options.html) separately (or as part of your build process).

&lt;!-- end copied --&gt;

## Documentation

Learn more about using [Jest on the official site!](https://jestjs.io)

- [Getting Started](https://jestjs.io/docs/getting-started)
- [Guides](https://jestjs.io/docs/snapshot-testing)
- [API Reference](https://jestjs.io/docs/api)
- [Configuring Jest](https://jestjs.io/docs/configuration)

## Badge

Show the world you&#039;re using _Jest_ `‚Üí` [![tested with jest](https://img.shields.io/badge/tested_with-jest-99424f.svg)](https://github.com/jestjs/jest) [![jest tested](https://img.shields.io/badge/Jest-tested-eee.svg?logo=jest&amp;labelColor=99424f)](https://github.com/jestjs/jest) [![jest](https://jestjs.io/img/jest-badge.svg)](https://github.com/jestjs/jest)

&lt;!-- prettier-ignore --&gt;
```md
[![tested with jest](https://img.shields.io/badge/tested_with-jest-99424f.svg?logo=jest)](https://github.com/jestjs/jest)
[![jest tested](https://img.shields.io/badge/Jest-tested-eee.svg?logo=jest&amp;labelColor=99424f)](https://github.com/jestjs/jest)
[![jest](https://jestjs.io/img/jest-badge.svg)](https://github.com/jestjs/jest)
```

## Contributing

Development of Jest happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving Jest.

### [Code of Conduct](https://code.facebook.com/codeofconduct)

Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read [the full text](https://code.facebook.com/codeofconduct) so that you can understand what actions will and will not be tolerated.

### [Contributing Guide](CONTRIBUTING.md)

Read our [contributing guide](CONTRIBUTING.md) to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to Jest.

### [Good First Issues](https://github.com/jestjs/jest/labels/good%20first%20issue)

To help you get your feet wet and get you familiar with our contribution process, we have a list of [good first issues](https://github.com/jestjs/jest/labels/good%20first%20issue) that contain bugs which have a relatively limited scope. This is a great place to get started.

## Credits

This project exists thanks to all the people who [contribute](CONTRIBUTING.md).

&lt;a href=&quot;https://github.com/jestjs/jest/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/contributors.svg?width=890&amp;button=false&quot; /&gt;&lt;/a&gt;

### [Backers](https://opencollective.com/jest#backer)

Thank you to all our backers! üôè

&lt;a href=&quot;https://opencollective.com/jest#backers&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/backers.svg?width=890&quot;&gt;&lt;/a&gt;

### [Sponsors](https://opencollective.com/jest#sponsor)

Support this project by becoming a sponsor. Your logo will show up here with a link to your website.

&lt;a href=&quot;https://opencollective.com/jest/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/sponsor/0/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jest/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/sponsor/1/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jest/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/sponsor/2/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jest/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/sponsor/3/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jest/sponsor/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/sponsor/4/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jest/sponsor/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/sponsor/5/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jest/sponsor/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/sponsor/6/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jest/sponsor/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/sponsor/7/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jest/sponsor/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/sponsor/8/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jest/sponsor/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/sponsor/9/avatar.svg&quot;&gt;&lt;/a&gt;

## License

Jest is [MIT licensed](./LICENSE).

## Copyright

Copyright Contributors to the Jest project.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[musistudio/claude-code-router]]></title>
            <link>https://github.com/musistudio/claude-code-router</link>
            <guid>https://github.com/musistudio/claude-code-router</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:12 GMT</pubDate>
            <description><![CDATA[Use Claude Code as the foundation for coding infrastructure, allowing you to decide how to interact with the model while enjoying updates from Anthropic.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/musistudio/claude-code-router">musistudio/claude-code-router</a></h1>
            <p>Use Claude Code as the foundation for coding infrastructure, allowing you to decide how to interact with the model while enjoying updates from Anthropic.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 20,351</p>
            <p>Forks: 1,557</p>
            <p>Stars today: 77 stars today</p>
            <h2>README</h2><pre>![](blog/images/claude-code-router-img.png)

[![](https://img.shields.io/badge/%F0%9F%87%A8%F0%9F%87%B3-%E4%B8%AD%E6%96%87%E7%89%88-ff0000?style=flat)](README_zh.md)
[![Discord](https://img.shields.io/badge/Discord-%235865F2.svg?&amp;logo=discord&amp;logoColor=white)](https://discord.gg/rdftVMaUcS)
[![](https://img.shields.io/github/license/musistudio/claude-code-router)](https://github.com/musistudio/claude-code-router/blob/main/LICENSE)

&lt;hr&gt;

&gt; I am currently seeking **Agent development related job opportunities**, either **based in Hangzhou** or **remote**. If you are interested in my projects or have suitable opportunities, feel free to reach out! üìß Email: m@musiiot.top

&gt; A powerful tool to route Claude Code requests to different models and customize any request.

&gt; Now you can use models such as `GLM-4.5`, `Kimi-K2`, `Qwen3-Coder-480B-A35B`, and `DeepSeek v3.1` for free through the [iFlow Platform](https://platform.iflow.cn/docs/api-mode).     
&gt; You can use the `ccr ui` command to directly import the `iflow` template in the UI. It‚Äôs worth noting that iFlow limits each user to a concurrency of 1, which means you‚Äôll need to route background requests to other models.      
&gt; If you‚Äôd like a better experience, you can try [iFlow CLI](https://cli.iflow.cn).

![](blog/images/claude-code.png)

![](blog/images/roadmap.svg)

## ‚ú® Features

- **Model Routing**: Route requests to different models based on your needs (e.g., background tasks, thinking, long context).
- **Multi-Provider Support**: Supports various model providers like OpenRouter, DeepSeek, Ollama, Gemini, Volcengine, and SiliconFlow.
- **Request/Response Transformation**: Customize requests and responses for different providers using transformers.
- **Dynamic Model Switching**: Switch models on-the-fly within Claude Code using the `/model` command.
- **CLI Model Management**: Manage models and providers directly from the terminal with `ccr model`.
- **GitHub Actions Integration**: Trigger Claude Code tasks in your GitHub workflows.
- **Plugin System**: Extend functionality with custom transformers.

## üöÄ Getting Started

### 1. Installation

First, ensure you have [Claude Code](https://docs.anthropic.com/en/docs/claude-code/quickstart) installed:

```shell
npm install -g @anthropic-ai/claude-code
```

Then, install Claude Code Router:

```shell
npm install -g @musistudio/claude-code-router
```

### 2. Configuration

Create and configure your `~/.claude-code-router/config.json` file. For more details, you can refer to `config.example.json`.

The `config.json` file has several key sections:

- **`PROXY_URL`** (optional): You can set a proxy for API requests, for example: `&quot;PROXY_URL&quot;: &quot;http://127.0.0.1:7890&quot;`.
- **`LOG`** (optional): You can enable logging by setting it to `true`. When set to `false`, no log files will be created. Default is `true`.
- **`LOG_LEVEL`** (optional): Set the logging level. Available options are: `&quot;fatal&quot;`, `&quot;error&quot;`, `&quot;warn&quot;`, `&quot;info&quot;`, `&quot;debug&quot;`, `&quot;trace&quot;`. Default is `&quot;debug&quot;`.
- **Logging Systems**: The Claude Code Router uses two separate logging systems:
  - **Server-level logs**: HTTP requests, API calls, and server events are logged using pino in the `~/.claude-code-router/logs/` directory with filenames like `ccr-*.log`
  - **Application-level logs**: Routing decisions and business logic events are logged in `~/.claude-code-router/claude-code-router.log`
- **`APIKEY`** (optional): You can set a secret key to authenticate requests. When set, clients must provide this key in the `Authorization` header (e.g., `Bearer your-secret-key`) or the `x-api-key` header. Example: `&quot;APIKEY&quot;: &quot;your-secret-key&quot;`.
- **`HOST`** (optional): You can set the host address for the server. If `APIKEY` is not set, the host will be forced to `127.0.0.1` for security reasons to prevent unauthorized access. Example: `&quot;HOST&quot;: &quot;0.0.0.0&quot;`.
- **`NON_INTERACTIVE_MODE`** (optional): When set to `true`, enables compatibility with non-interactive environments like GitHub Actions, Docker containers, or other CI/CD systems. This sets appropriate environment variables (`CI=true`, `FORCE_COLOR=0`, etc.) and configures stdin handling to prevent the process from hanging in automated environments. Example: `&quot;NON_INTERACTIVE_MODE&quot;: true`.

- **`Providers`**: Used to configure different model providers.
- **`Router`**: Used to set up routing rules. `default` specifies the default model, which will be used for all requests if no other route is configured.
- **`API_TIMEOUT_MS`**: Specifies the timeout for API calls in milliseconds.

#### Environment Variable Interpolation

Claude Code Router supports environment variable interpolation for secure API key management. You can reference environment variables in your `config.json` using either `$VAR_NAME` or `${VAR_NAME}` syntax:

```json
{
  &quot;OPENAI_API_KEY&quot;: &quot;$OPENAI_API_KEY&quot;,
  &quot;GEMINI_API_KEY&quot;: &quot;${GEMINI_API_KEY}&quot;,
  &quot;Providers&quot;: [
    {
      &quot;name&quot;: &quot;openai&quot;,
      &quot;api_base_url&quot;: &quot;https://api.openai.com/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;$OPENAI_API_KEY&quot;,
      &quot;models&quot;: [&quot;gpt-5&quot;, &quot;gpt-5-mini&quot;]
    }
  ]
}
```

This allows you to keep sensitive API keys in environment variables instead of hardcoding them in configuration files. The interpolation works recursively through nested objects and arrays.

Here is a comprehensive example:

```json
{
  &quot;APIKEY&quot;: &quot;your-secret-key&quot;,
  &quot;PROXY_URL&quot;: &quot;http://127.0.0.1:7890&quot;,
  &quot;LOG&quot;: true,
  &quot;API_TIMEOUT_MS&quot;: 600000,
  &quot;NON_INTERACTIVE_MODE&quot;: false,
  &quot;Providers&quot;: [
    {
      &quot;name&quot;: &quot;openrouter&quot;,
      &quot;api_base_url&quot;: &quot;https://openrouter.ai/api/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;sk-xxx&quot;,
      &quot;models&quot;: [
        &quot;google/gemini-2.5-pro-preview&quot;,
        &quot;anthropic/claude-sonnet-4&quot;,
        &quot;anthropic/claude-3.5-sonnet&quot;,
        &quot;anthropic/claude-3.7-sonnet:thinking&quot;
      ],
      &quot;transformer&quot;: {
        &quot;use&quot;: [&quot;openrouter&quot;]
      }
    },
    {
      &quot;name&quot;: &quot;deepseek&quot;,
      &quot;api_base_url&quot;: &quot;https://api.deepseek.com/chat/completions&quot;,
      &quot;api_key&quot;: &quot;sk-xxx&quot;,
      &quot;models&quot;: [&quot;deepseek-chat&quot;, &quot;deepseek-reasoner&quot;],
      &quot;transformer&quot;: {
        &quot;use&quot;: [&quot;deepseek&quot;],
        &quot;deepseek-chat&quot;: {
          &quot;use&quot;: [&quot;tooluse&quot;]
        }
      }
    },
    {
      &quot;name&quot;: &quot;ollama&quot;,
      &quot;api_base_url&quot;: &quot;http://localhost:11434/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;ollama&quot;,
      &quot;models&quot;: [&quot;qwen2.5-coder:latest&quot;]
    },
    {
      &quot;name&quot;: &quot;gemini&quot;,
      &quot;api_base_url&quot;: &quot;https://generativelanguage.googleapis.com/v1beta/models/&quot;,
      &quot;api_key&quot;: &quot;sk-xxx&quot;,
      &quot;models&quot;: [&quot;gemini-2.5-flash&quot;, &quot;gemini-2.5-pro&quot;],
      &quot;transformer&quot;: {
        &quot;use&quot;: [&quot;gemini&quot;]
      }
    },
    {
      &quot;name&quot;: &quot;volcengine&quot;,
      &quot;api_base_url&quot;: &quot;https://ark.cn-beijing.volces.com/api/v3/chat/completions&quot;,
      &quot;api_key&quot;: &quot;sk-xxx&quot;,
      &quot;models&quot;: [&quot;deepseek-v3-250324&quot;, &quot;deepseek-r1-250528&quot;],
      &quot;transformer&quot;: {
        &quot;use&quot;: [&quot;deepseek&quot;]
      }
    },
    {
      &quot;name&quot;: &quot;modelscope&quot;,
      &quot;api_base_url&quot;: &quot;https://api-inference.modelscope.cn/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;&quot;,
      &quot;models&quot;: [&quot;Qwen/Qwen3-Coder-480B-A35B-Instruct&quot;, &quot;Qwen/Qwen3-235B-A22B-Thinking-2507&quot;],
      &quot;transformer&quot;: {
        &quot;use&quot;: [
          [
            &quot;maxtoken&quot;,
            {
              &quot;max_tokens&quot;: 65536
            }
          ],
          &quot;enhancetool&quot;
        ],
        &quot;Qwen/Qwen3-235B-A22B-Thinking-2507&quot;: {
          &quot;use&quot;: [&quot;reasoning&quot;]
        }
      }
    },
    {
      &quot;name&quot;: &quot;dashscope&quot;,
      &quot;api_base_url&quot;: &quot;https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;&quot;,
      &quot;models&quot;: [&quot;qwen3-coder-plus&quot;],
      &quot;transformer&quot;: {
        &quot;use&quot;: [
          [
            &quot;maxtoken&quot;,
            {
              &quot;max_tokens&quot;: 65536
            }
          ],
          &quot;enhancetool&quot;
        ]
      }
    },
    {
      &quot;name&quot;: &quot;aihubmix&quot;,
      &quot;api_base_url&quot;: &quot;https://aihubmix.com/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;sk-&quot;,
      &quot;models&quot;: [
        &quot;Z/glm-4.5&quot;,
        &quot;claude-opus-4-20250514&quot;,
        &quot;gemini-2.5-pro&quot;
      ]
    }
  ],
  &quot;Router&quot;: {
    &quot;default&quot;: &quot;deepseek,deepseek-chat&quot;,
    &quot;background&quot;: &quot;ollama,qwen2.5-coder:latest&quot;,
    &quot;think&quot;: &quot;deepseek,deepseek-reasoner&quot;,
    &quot;longContext&quot;: &quot;openrouter,google/gemini-2.5-pro-preview&quot;,
    &quot;longContextThreshold&quot;: 60000,
    &quot;webSearch&quot;: &quot;gemini,gemini-2.5-flash&quot;
  }
}
```

### 3. Running Claude Code with the Router

Start Claude Code using the router:

```shell
ccr code
```

&gt; **Note**: After modifying the configuration file, you need to restart the service for the changes to take effect:
&gt;
&gt; ```shell
&gt; ccr restart
&gt; ```

### 4. UI Mode

For a more intuitive experience, you can use the UI mode to manage your configuration:

```shell
ccr ui
```

This will open a web-based interface where you can easily view and edit your `config.json` file.

![UI](/blog/images/ui.png)

### 5. CLI Model Management

For users who prefer terminal-based workflows, you can use the interactive CLI model selector:

```shell
ccr model
```
![](blog/images/models.gif)

This command provides an interactive interface to:

- View current configuration:
- See all configured models (default, background, think, longContext, webSearch, image)
- Switch models: Quickly change which model is used for each router type
- Add new models: Add models to existing providers
- Create new providers: Set up complete provider configurations including:
   - Provider name and API endpoint
   - API key
   - Available models
   - Transformer configuration with support for:
     - Multiple transformers (openrouter, deepseek, gemini, etc.)
     - Transformer options (e.g., maxtoken with custom limits)
     - Provider-specific routing (e.g., OpenRouter provider preferences)

The CLI tool validates all inputs and provides helpful prompts to guide you through the configuration process, making it easy to manage complex setups without editing JSON files manually.

#### Providers

The `Providers` array is where you define the different model providers you want to use. Each provider object requires:

- `name`: A unique name for the provider.
- `api_base_url`: The full API endpoint for chat completions.
- `api_key`: Your API key for the provider.
- `models`: A list of model names available from this provider.
- `transformer` (optional): Specifies transformers to process requests and responses.

#### Transformers

Transformers allow you to modify the request and response payloads to ensure compatibility with different provider APIs.

- **Global Transformer**: Apply a transformer to all models from a provider. In this example, the `openrouter` transformer is applied to all models under the `openrouter` provider.
  ```json
  {
    &quot;name&quot;: &quot;openrouter&quot;,
    &quot;api_base_url&quot;: &quot;https://openrouter.ai/api/v1/chat/completions&quot;,
    &quot;api_key&quot;: &quot;sk-xxx&quot;,
    &quot;models&quot;: [
      &quot;google/gemini-2.5-pro-preview&quot;,
      &quot;anthropic/claude-sonnet-4&quot;,
      &quot;anthropic/claude-3.5-sonnet&quot;
    ],
    &quot;transformer&quot;: { &quot;use&quot;: [&quot;openrouter&quot;] }
  }
  ```
- **Model-Specific Transformer**: Apply a transformer to a specific model. In this example, the `deepseek` transformer is applied to all models, and an additional `tooluse` transformer is applied only to the `deepseek-chat` model.

  ```json
  {
    &quot;name&quot;: &quot;deepseek&quot;,
    &quot;api_base_url&quot;: &quot;https://api.deepseek.com/chat/completions&quot;,
    &quot;api_key&quot;: &quot;sk-xxx&quot;,
    &quot;models&quot;: [&quot;deepseek-chat&quot;, &quot;deepseek-reasoner&quot;],
    &quot;transformer&quot;: {
      &quot;use&quot;: [&quot;deepseek&quot;],
      &quot;deepseek-chat&quot;: { &quot;use&quot;: [&quot;tooluse&quot;] }
    }
  }
  ```

- **Passing Options to a Transformer**: Some transformers, like `maxtoken`, accept options. To pass options, use a nested array where the first element is the transformer name and the second is an options object.
  ```json
  {
    &quot;name&quot;: &quot;siliconflow&quot;,
    &quot;api_base_url&quot;: &quot;https://api.siliconflow.cn/v1/chat/completions&quot;,
    &quot;api_key&quot;: &quot;sk-xxx&quot;,
    &quot;models&quot;: [&quot;moonshotai/Kimi-K2-Instruct&quot;],
    &quot;transformer&quot;: {
      &quot;use&quot;: [
        [
          &quot;maxtoken&quot;,
          {
            &quot;max_tokens&quot;: 16384
          }
        ]
      ]
    }
  }
  ```

**Available Built-in Transformers:**

- `Anthropic`:If you use only the `Anthropic` transformer, it will preserve the original request and response parameters(you can use it to connect directly to an Anthropic endpoint).
- `deepseek`: Adapts requests/responses for DeepSeek API.
- `gemini`: Adapts requests/responses for Gemini API.
- `openrouter`: Adapts requests/responses for OpenRouter API. It can also accept a `provider` routing parameter to specify which underlying providers OpenRouter should use. For more details, refer to the [OpenRouter documentation](https://openrouter.ai/docs/features/provider-routing). See an example below:
  ```json
    &quot;transformer&quot;: {
      &quot;use&quot;: [&quot;openrouter&quot;],
      &quot;moonshotai/kimi-k2&quot;: {
        &quot;use&quot;: [
          [
            &quot;openrouter&quot;,
            {
              &quot;provider&quot;: {
                &quot;only&quot;: [&quot;moonshotai/fp8&quot;]
              }
            }
          ]
        ]
      }
    }
  ```
- `groq`: Adapts requests/responses for groq API.
- `maxtoken`: Sets a specific `max_tokens` value.
- `tooluse`: Optimizes tool usage for certain models via `tool_choice`.
- `gemini-cli` (experimental): Unofficial support for Gemini via Gemini CLI [gemini-cli.js](https://gist.github.com/musistudio/1c13a65f35916a7ab690649d3df8d1cd).
- `reasoning`: Used to process the `reasoning_content` field.
- `sampling`: Used to process sampling information fields such as `temperature`, `top_p`, `top_k`, and `repetition_penalty`.
- `enhancetool`: Adds a layer of error tolerance to the tool call parameters returned by the LLM (this will cause the tool call information to no longer be streamed).
- `cleancache`: Clears the `cache_control` field from requests.
- `vertex-gemini`: Handles the Gemini API using Vertex authentication.
- `chutes-glm` Unofficial support for GLM 4.5 model via Chutes [chutes-glm-transformer.js](https://gist.github.com/vitobotta/2be3f33722e05e8d4f9d2b0138b8c863).
- `qwen-cli` (experimental): Unofficial support for qwen3-coder-plus model via Qwen CLI [qwen-cli.js](https://gist.github.com/musistudio/f5a67841ced39912fd99e42200d5ca8b).
- `rovo-cli` (experimental): Unofficial support for gpt-5 via Atlassian Rovo Dev CLI [rovo-cli.js](https://gist.github.com/SaseQ/c2a20a38b11276537ec5332d1f7a5e53).

**Custom Transformers:**

You can also create your own transformers and load them via the `transformers` field in `config.json`.

```json
{
  &quot;transformers&quot;: [
    {
      &quot;path&quot;: &quot;/User/xxx/.claude-code-router/plugins/gemini-cli.js&quot;,
      &quot;options&quot;: {
        &quot;project&quot;: &quot;xxx&quot;
      }
    }
  ]
}
```

#### Router

The `Router` object defines which model to use for different scenarios:

- `default`: The default model for general tasks.
- `background`: A model for background tasks. This can be a smaller, local model to save costs.
- `think`: A model for reasoning-heavy tasks, like Plan Mode.
- `longContext`: A model for handling long contexts (e.g., &gt; 60K tokens).
- `longContextThreshold` (optional): The token count threshold for triggering the long context model. Defaults to 60000 if not specified.
- `webSearch`: Used for handling web search tasks and this requires the model itself to support the feature. If you&#039;re using openrouter, you need to add the `:online` suffix after the model name.
- `image` (beta): Used for handling image-related tasks (supported by CCR‚Äôs built-in agent). If the model does not support tool calling, you need to set the `config.forceUseImageAgent` property to `true`.

- You can also switch models dynamically in Claude Code with the `/model` command:
`/model provider_name,model_name`
Example: `/model openrouter,anthropic/claude-3.5-sonnet`

#### Custom Router

For more advanced routing logic, you can specify a custom router script via the `CUSTOM_ROUTER_PATH` in your `config.json`. This allows you to implement complex routing rules beyond the default scenarios.

In your `config.json`:

```json
{
  &quot;CUSTOM_ROUTER_PATH&quot;: &quot;/User/xxx/.claude-code-router/custom-router.js&quot;
}
```

The custom router file must be a JavaScript module that exports an `async` function. This function receives the request object and the config object as arguments and should return the provider and model name as a string (e.g., `&quot;provider_name,model_name&quot;`), or `null` to fall back to the default router.

Here is an example of a `custom-router.js` based on `custom-router.example.js`:

```javascript
// /User/xxx/.claude-code-router/custom-router.js

/**
 * A custom router function to determine which model to use based on the request.
 *
 * @param {object} req - The request object from Claude Code, containing the request body.
 * @param {object} config - The application&#039;s config object.
 * @returns {Promise&lt;string|null&gt;} - A promise that resolves to the &quot;provider,model_name&quot; string, or null to use the default router.
 */
module.exports = async function router(req, config) {
  const userMessage = req.body.messages.find((m) =&gt; m.role === &quot;user&quot;)?.content;

  if (userMessage &amp;&amp; userMessage.includes(&quot;explain this code&quot;)) {
    // Use a powerful model for code explanation
    return &quot;openrouter,anthropic/claude-3.5-sonnet&quot;;
  }

  // Fallback to the default router configuration
  return null;
};
```

##### Subagent Routing

For routing within subagents, you must specify a particular provider and model by including `&lt;CCR-SUBAGENT-MODEL&gt;provider,model&lt;/CCR-SUBAGENT-MODEL&gt;` at the **beginning** of the subagent&#039;s prompt. This allows you to direct specific subagent tasks to designated models.

**Example:**

```
&lt;CCR-SUBAGENT-MODEL&gt;openrouter,anthropic/claude-3.5-sonnet&lt;/CCR-SUBAGENT-MODEL&gt;
Please help me analyze this code snippet for potential optimizations...
```

## Status Line (Beta)
To better monitor the status of claude-code-router at runtime, version v1.0.40 includes a built-in statusline tool, which you can enable in the UI.
![statusline-config.png](/blog/images/statusline-config.png)

The effect is as follows:
![statusline](/blog/images/statusline.png)

## ü§ñ GitHub Actions

Integrate Claude Code Router into your CI/CD pipeline. After setting up [Claude Code Actions](https://docs.anthropic.com/en/docs/claude-code/github-actions), modify your `.github/workflows/claude.yaml` to use the router:

```yaml
name: Claude Code

on:
  issue_comment:
    types: [created]
  # ... other triggers

jobs:
  claude:
    if: |
      (github.event_name == &#039;issue_comment&#039; &amp;&amp; contains(github.event.comment.body, &#039;@claude&#039;)) ||
      # ... other conditions
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Prepare Environment
        run: |
          curl -fsSL https://bun.sh/install | bash
          mkdir -p $HOME/.claude-code-router
          cat &lt;&lt; &#039;EOF&#039; &gt; $HOME/.claude-code-router/config.json
          {
            &quot;log&quot;: true,
            &quot;NON_INTERACTIVE_MODE&quot;: true,
            &quot;OPENAI_API_KEY&quot;: &quot;${{ secrets.OPENAI_API_KEY }}&quot;,
            &quot;OPENAI_BASE_URL&quot;: &quot;https://api.deepseek.com&quot;,
            &quot;OPENAI_MODEL&quot;: &quot;deepseek-chat&quot;
          }
          EOF
        shell: bash

      - name: Start Claude Code Router
        run: |
          nohup ~/.bun/bin/bunx @musistudio/claude-code-router@1.0.8 start &amp;
        shell: bash

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        env:
          ANTHROPIC_BASE_URL: http://localhost:3456
        with:
          anthropic_api_key: &quot;any-string-is-ok&quot;
```

&gt; **Note**: When running in GitHub Actions or other automation environments, make sure to set `&quot;NON_INTERACTIVE_MODE&quot;: true` in your configuration to prevent the process from hanging due to stdin handling issues.

This setup allows for interesting automations, like running tasks during off-peak hours to reduce API costs.


... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[novuhq/novu]]></title>
            <link>https://github.com/novuhq/novu</link>
            <guid>https://github.com/novuhq/novu</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:11 GMT</pubDate>
            <description><![CDATA[The open-source notification Inbox infrastructure. E-mail, SMS, Push and Slack Integrations.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/novuhq/novu">novuhq/novu</a></h1>
            <p>The open-source notification Inbox infrastructure. E-mail, SMS, Push and Slack Integrations.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 38,090</p>
            <p>Forks: 4,157</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://novu.co?utm_source=github&quot; target=&quot;_blank&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://user-images.githubusercontent.com/2233092/213641039-220ac15f-f367-4d13-9eaf-56e79433b8c1.png&quot;&gt;
    &lt;img alt=&quot;Novu Logo&quot; src=&quot;https://user-images.githubusercontent.com/2233092/213641043-3bbb3f21-3c53-4e67-afe5-755aeb222159.png&quot; width=&quot;280&quot;/&gt;
  &lt;/picture&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;br/&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@novu/node&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/v/@novu/node&quot; alt=&quot;NPM&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@novu/node&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/dm/@novu/node&quot; alt=&quot;npm downloads&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/novuhq/novu/blob/main/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/license/novuhq/novu&quot; alt=&quot;MIT&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;
  The open-source notification infrastructure for developers
&lt;/h1&gt;

&lt;div align=&quot;center&quot;&gt;
  The ultimate service for managing multi-channel notifications with a single API.
&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;br /&gt;
  &lt;a href=&quot;https://docs.novu.co&quot; rel=&quot;dofollow&quot;&gt;&lt;strong&gt;Explore the docs ¬ª&lt;/strong&gt;&lt;/a&gt;
  &lt;br /&gt;

&lt;br/&gt;
  &lt;a href=&quot;https://github.com/novuhq/novu/issues/new?assignees=&amp;labels=type%3A+bug&amp;template=bug_report.yml&amp;title=%F0%9F%90%9B+Bug+Report%3A+&quot;&gt;Report Bug&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://github.com/novuhq/novu/issues/new?assignees=&amp;labels=feature&amp;template=feature_request.yml&amp;title=%F0%9F%9A%80+Feature%3A+&quot;&gt;Request Feature&lt;/a&gt;
  ¬∑
&lt;a href=&quot;https://discord.novu.co&quot;&gt;Join Our Discord&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://roadmap.novu.co&quot;&gt;Roadmap&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://twitter.com/novuhq&quot;&gt;X&lt;/a&gt;
  ¬∑
  &lt;a href=&quot;https://notifications.directory&quot;&gt;Notifications Directory&lt;/a&gt;
&lt;/p&gt;

## ‚≠êÔ∏è Why Novu?

Novu provides a unified API that makes it simple to send notifications through multiple channels, including In-App, Push, Email, SMS, and Chat.
With Novu, you can create custom workflows and define conditions for each channel, ensuring that your notifications are delivered in the most effective way possible.

## ‚ú® Features

- üåà Single API for all messaging providers (In-App, Email, SMS, Push, Chat)
- üíÖ Fully managed GitOps Flow, deployed from your CI
- üî• Define workflow and step validations with Zod or JSON Schema
- üíå React Email/Maizzle/MJML integrations
- üöÄ Equipped with a CMS for advanced layouts and design management
- üõ° Debug and analyze multi-channel messages in a single dashboard
- üì¶ Embeddable notification center with real-time updates
- üë®‚Äçüíª Community-driven

## üöÄ Getting Started

To get started, type the following command in your Terminal.

```bash
npx novu-labs@latest echo
```

## üìö Table Of Contents

- [Getting Started](https://github.com/novuhq/novu#-getting-started)
- [GitOps &amp; React Email Integration](https://github.com/novuhq/novu#-gitops)
- [Embeddable notification center](https://github.com/novuhq/novu#embeddable-notification-center)
- [Providers](https://github.com/novuhq/novu#providers)
  - [Email](https://github.com/novuhq/novu#-email)
  - [SMS](https://github.com/novuhq/novu#-sms)
  - [Push](https://github.com/novuhq/novu#-push)
  - [Chat](https://github.com/novuhq/novu#-chat)
  - [In-App](https://github.com/novuhq/novu#-in-app)
  - [Others](https://github.com/novuhq/novu#other-coming-soon)
- [Need Help?](https://github.com/novuhq/novu#-need-help)
- [Links](https://github.com/novuhq/novu#-links)
- [License](https://github.com/novuhq/novu#%EF%B8%8F-license)

## Notification Workflows as Code
For API documentation and reference, please visit [Echo API Reference](https://docs.novu.co/echo/quickstart?utm_campaign=github-readme).

```ts

client.workflow(&#039;comment-on-post&#039;, async ({step, subscriber}) =&gt; {
  const inAppResponse = await step.inApp(&#039;in-app-step&#039;, async (inputs) =&gt; {
    return {
      body: renderReactComponent(inputs)
    };
  }, {
    inputSchema: {
      // ...JSON Schema or ZOD/Ajv/Class Validators definition
    }
  });

  // Novu Worker Engine will manage the state and durability of each step in isolation
  const { events } = await step.digest(&#039;1 day&#039;);

  await step.email(&#039;email-step&#039;, async () =&gt; {
    return {
      subject: &#039;E-mail Subject&#039;,
      body: renderReactEmail(&lt;ReactEmailComponent events={digestedEvents} /&gt;);
    }
  }, {
    // Step-level inputs defined in code and controlled in the novu Cloud UI by a Non-Technical Team member
    inputSchema: {
      // ...JSON Schema
    },
    providers: {
      sendgrid: async (inputs) =&gt; {
        // Echo runs as part of your application, so you have access to your database or resources

        return {
          to: email,
          ipPoolName: &#039;custom-pool&#039;
        };
      }
    },
    skip: () =&gt; {
      // Write custom skip logic
      return inAppResponse.seen || subscriber.isOnline;
    }
  });
// Define your workflow trigger payload using json schema and custom validation;
}, {
  payloadSchema: {
    // ...JSON Schema
  }
});

```

## Embeddable Notification Center

Using the Novu API and admin panel, you can easily add a real-time notification center to your web app without building it yourself. You can use our [React](https://docs.novu.co/notification-center/client/react/get-started?utm_campaign=github-readme) / [Vue](https://docs.novu.co/notification-center/client/vue?utm_campaign=github-readme) / [Angular](https://docs.novu.co/notification-center/client/angular?utm_campaign=github-readme) components or an [iframe embed](https://docs.novu.co/notification-center/client/iframe?utm_campaign=github-readme), as well as a [Web component](https://docs.novu.co/notification-center/client/web-component?utm_campaign=github-readme).

&lt;div align=&quot;center&quot;&gt;
&lt;img width=&quot;762&quot; alt=&quot;notification-center-912bb96e009fb3a69bafec23bcde00b0&quot; src=&quot;https://user-images.githubusercontent.com/80174214/193887395-f1c95042-b4e6-480e-a89c-a78aa247fa90.gif&quot; alt-text=&quot;GIF of Novu&#039;s Embeddable Notification Center&quot;&gt;

Read more about how to add a notification center to your app with the Novu API [here](https://docs.novu.co/notification-center/getting-started?utm_campaign=github-readme)

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://docs.novu.co/sdks/react?utm_campaign=github-readme&quot;&gt;React Component&lt;/a&gt;
  ¬∑ &lt;a href=&quot;https://docs.novu.co/sdks/vue?utm_campaign=github-readme&quot;&gt;Vue Component&lt;/a&gt;
  ¬∑ &lt;a href=&quot;https://docs.novu.co/sdks/angular?utm_campaign=github-readme&quot;&gt;Angular Component&lt;/a&gt;
  &lt;/p&gt;
  
&lt;/div&gt;

## Providers

Novu provides a single API to manage providers across multiple channels with a simple-to-use interface.

#### üíå Email

- [x] [Sendgrid](https://github.com/novuhq/novu/tree/main/providers/sendgrid)
- [x] [Netcore](https://github.com/novuhq/novu/tree/main/providers/netcore)
- [x] [Mailgun](https://github.com/novuhq/novu/tree/main/providers/mailgun)
- [x] [SES](https://github.com/novuhq/novu/tree/main/providers/ses)
- [x] [Postmark](https://github.com/novuhq/novu/tree/main/providers/postmark)
- [x] [Custom SMTP](https://github.com/novuhq/novu/tree/main/providers/nodemailer)
- [x] [Mailjet](https://github.com/novuhq/novu/tree/main/providers/mailjet)
- [x] [Mandrill](https://github.com/novuhq/novu/tree/main/providers/mandrill)
- [x] [SendinBlue](https://github.com/novuhq/novu/tree/main/providers/sendinblue)
- [x] [MailerSend](https://github.com/novuhq/novu/tree/main/providers/mailersend)
- [x] [Infobip](https://github.com/novuhq/novu/tree/main/providers/infobip)
- [x] [Resend](https://github.com/novuhq/novu/tree/main/providers/resend)
- [x] [SparkPost](https://github.com/novuhq/novu/tree/main/providers/sparkpost)
- [x] [Outlook 365](https://github.com/novuhq/novu/tree/main/providers/outlook365)

#### üìû SMS

- [x] [Twilio](https://github.com/novuhq/novu/tree/main/providers/twilio)
- [x] [Plivo](https://github.com/novuhq/novu/tree/main/providers/plivo)
- [x] [SNS](https://github.com/novuhq/novu/tree/main/providers/sns)
- [x] [Nexmo - Vonage](https://github.com/novuhq/novu/tree/main/providers/nexmo)
- [x] [Sms77](https://github.com/novuhq/novu/tree/main/providers/sms77)
- [x] [Telnyx](https://github.com/novuhq/novu/tree/main/providers/telnyx)
- [x] [Termii](https://github.com/novuhq/novu/tree/main/providers/termii)
- [x] [Gupshup](https://github.com/novuhq/novu/tree/main/providers/gupshup)
- [x] [SMS Central](https://github.com/novuhq/novu/tree/main/providers/sms-central)
- [x] [Maqsam](https://github.com/novuhq/novu/tree/main/providers/maqsam)
- [x] [46elks](https://github.com/novuhq/novu/tree/main/providers/forty-six-elks)
- [x] [Clickatell](https://github.com/novuhq/novu/tree/main/providers/clickatell)
- [x] [Burst SMS](https://github.com/novuhq/novu/tree/main/providers/burst-sms)
- [x] [Firetext](https://github.com/novuhq/novu/tree/main/providers/firetext)
- [x] [Infobip](https://github.com/novuhq/novu/tree/main/providers/infobip)
- [ ] Bandwidth
- [ ] RingCentral

#### üì± Push

- [x] [FCM](https://github.com/novuhq/novu/tree/main/providers/fcm)
- [x] [Expo](https://github.com/novuhq/novu/tree/main/providers/expo)
- [x] [APNS](https://github.com/novuhq/novu/tree/main/providers/apns)
- [x] [OneSignal](https://github.com/novuhq/novu/tree/main/providers/one-signal)
- [x] [Pushpad](https://github.com/novuhq/novu/tree/main/providers/pushpad)
- [ ] Pushwoosh

#### üëá Chat

- [x] [Slack](https://github.com/novuhq/novu/tree/main/providers/slack)
- [x] [Discord](https://github.com/novuhq/novu/tree/main/providers/discord)
- [x] [MS Teams](https://github.com/novuhq/novu/tree/main/providers/ms-teams)
- [x] [Mattermost](https://github.com/novuhq/novu/tree/main/providers/mattermost)

#### üì± In-App

- [x] [Novu](https://docs.novu.co/notification-center/getting-started?utm_campaign=github-readme)

#### Other (Coming Soon...)

- [ ] PagerDuty

## üìã Read Our Code Of Conduct

Before you begin coding and collaborating, please read our [Code of Conduct](https://github.com/novuhq/novu/blob/main/CODE_OF_CONDUCT.md) thoroughly to understand the standards (that you are required to adhere to) for community engagement. As part of our open-source community, we hold ourselves and other contributors to a high standard of communication. As a participant and contributor to this project, you agree to abide by our [Code of Conduct](https://github.com/novuhq/novu/blob/main/CODE_OF_CONDUCT.md).

## üíª Need Help?

We are more than happy to help you. If you are getting any errors or facing problems while working on this project, join our [Discord server](https://discord.novu.co) and ask for help. We are open to discussing anything related to the project.

## üîó Links

- [Home page](https://novu.co?utm_campaign=github-readme)
- [Contribution Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)
- [Run Novu Locally](https://docs.novu.co/community/run-in-local-machine?utm_campaign=github-readme)

## üõ°Ô∏è License

Novu is licensed under the MIT License - see the [LICENSE](https://github.com/novuhq/novu/blob/main/LICENSE) file for details.

## üí™ Thanks To All Contributors
Thanks a lot for spending your time helping Novu grow. Keep rocking ü•Ç

&lt;a href=&quot;https://novu.co/contributors?utm_source=github&quot;&gt;
  &lt;img src=&quot;https://contributors-img.web.app/image?repo=novuhq/novu&quot; alt=&quot;Contributors&quot;/&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[activepieces/activepieces]]></title>
            <link>https://github.com/activepieces/activepieces</link>
            <guid>https://github.com/activepieces/activepieces</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:10 GMT</pubDate>
            <description><![CDATA[AI Agents & MCPs & AI Workflow Automation ‚Ä¢ (~400 MCP servers for AI agents) ‚Ä¢ AI Automation / AI Agent with MCPs ‚Ä¢ AI Workflows & AI Agents ‚Ä¢ MCPs for AI Agents]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/activepieces/activepieces">activepieces/activepieces</a></h1>
            <p>AI Agents & MCPs & AI Workflow Automation ‚Ä¢ (~400 MCP servers for AI agents) ‚Ä¢ AI Automation / AI Agent with MCPs ‚Ä¢ AI Workflows & AI Agents ‚Ä¢ MCPs for AI Agents</p>
            <p>Language: TypeScript</p>
            <p>Stars: 18,897</p>
            <p>Forks: 2,860</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre>
&lt;h1 align=&quot;center&quot;&gt;
  &lt;a
    target=&quot;_blank&quot;
    href=&quot;https://activepieces.com&quot;
  &gt;
    &lt;img
      align=&quot;center&quot;
      alt=&quot;Activepieces&quot;
src=&quot;https://github.com/activepieces/activepieces/assets/1812998/76c97441-c285-4480-bc75-30a0c73ed340&quot;
      style=&quot;width:100%;&quot;
    /&gt;
    
  &lt;/a&gt;
&lt;/h1&gt;


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;/LICENSE&quot; target=&quot;_blank&quot;&gt;&lt;img src=&#039;https://img.shields.io/badge/license-MIT-green?style=for-the-badge&#039; /&gt;&lt;/a&gt;&amp;nbsp;&lt;img src=&#039;https://img.shields.io/github/commit-activity/w/activepieces/activepieces/main?style=for-the-badge&#039; /&gt;&amp;nbsp;&lt;a href=&#039;https://discord.gg/2jUXBKDdP8&#039;&gt;&lt;img src=&#039;https://img.shields.io/discord/966798490984382485?style=for-the-badge&#039; /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
   An open source replacement for Zapier
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a
    href=&quot;https://www.activepieces.com/docs&quot;
    target=&quot;_blank&quot;
  &gt;&lt;b&gt;Documentation&lt;/b&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;üå™Ô∏è&amp;nbsp;&amp;nbsp;&amp;nbsp;
   &lt;a
    href=&quot;https://www.activepieces.com/docs/developers/building-pieces/overview&quot;
    target=&quot;_blank&quot;
  &gt;&lt;b&gt;Create a Piece&lt;/b&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;üñâ&amp;nbsp;&amp;nbsp;&amp;nbsp;
  &lt;a
    href=&quot;https://www.activepieces.com/docs/install/overview&quot;
    target=&quot;_blank&quot;
  &gt;&lt;b&gt;Deploy&lt;/b&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;üî•&amp;nbsp;&amp;nbsp;&amp;nbsp;
  &lt;a
    href=&quot;https://discord.gg/yvxF5k5AUb&quot;
    target=&quot;_blank&quot;
  &gt;
    &lt;b&gt;Join Discord&lt;/b&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;br&gt;
&lt;br&gt;

# ü§Ø Welcome to Activepieces

All-in-one AI automation designed to be **extensible** through a **type-safe** pieces framework written in **TypeScript**.
When you contribute pieces to Activepieces they become automatically available as MCP servers that you can use with LLMs through Claude Desktop, Cursor or Windsurf!

&lt;br&gt;
&lt;br&gt;

## üî• Why Activepieces is Different:

- **üíñ Loved by Everyone**: Intuitive interface and great experience for both technical and non-technical users with a quick learning curve.

&lt;img src=&quot;/docs/resources/templates.gif&quot;&gt;

- **üåê Open Ecosystem:** All pieces are open source and available on npmjs.com, **60% of the pieces are contributed by the community**.

- **üõ†Ô∏è Largest open source MCP toolkit**: All our pieces (280+) are available as MCP that you can use with LLMs on Claude Desktop, Cursor or Windsurf.

- **üõ†Ô∏è  Pieces are written in Typescript**: Pieces are npm packages in TypeScript, offering full customization with the best developer experience, including **hot reloading** for **local** piece development on your machine. üòé

&lt;img src=&quot;/docs/resources/create-action.png&quot; alt=&quot;&quot;&gt;

- **ü§ñ AI-First**: Native AI pieces let you experiment with various providers, or create your own agents using our AI SDK to help you build flows inside the builder.

- **üè¢ Enterprise-Ready**: Developers set up the tools, and anyone in the organization can use the no-code builder. Full customization from branding to control.

- **üîí Secure by Design**: Self-hosted and network-gapped for maximum security and control over your data.

- **üß† Human in the Loop**: Delay execution for a period of time or require approval. These are just pieces built on top of the piece framework, and you can build many pieces like that. üé®

- **üíª Human Input Interfaces**: Built-in support for human input triggers like &quot;Chat Interface&quot; üí¨ and &quot;Form Interface&quot; üìù



## üõ†Ô∏è  Builder Features:

- [x] Loops
- [x] Branches
- [x] Auto Retries
- [x] HTTP
- [x] Code with **NPM**
- [x] ASK AI in Code Piece (Non technical user can clean data without knowing to code)
- [x] Flows are fully versioned.
- [x] Languages Translations
- [x] Customizable Templates
- [X] 200+ Pieces, check https://www.activepieces.com/pieces

**We release updates frequently. Check the product changelog for the latest features.**


## üîå Create Your Own Piece

Activepieces supports integrations with Google Sheets, OpenAI, Discord, RSS, and over 200 other services. [Check out the full list of supported integrations](https://www.activepieces.com/pieces), which is constantly expanding thanks to our community&#039;s contributions.

As an **open ecosystem**, all integration source code is accessible in our repository. These integrations are versioned and [published](https://www.npmjs.com/search?q=%40activepieces) directly to npmjs.com upon contribution.

You can easily create your own integration using our TypeScript framework. For detailed instructions, please refer to our [Contributor&#039;s Guide](https://www.activepieces.com/docs/developers/building-pieces/overview).

&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;


# License

Activepieces&#039; Community Edition is released as open source under the [MIT license](https://github.com/activepieces/activepieces/blob/main/LICENSE) and enterprise features are released under [Commercial License](https://github.com/activepieces/activepieces/blob/main/packages/ee/LICENSE)


Read more about the feature comparison here https://www.activepieces.com/docs/about/editions
&lt;br&gt;
&lt;br&gt;


# üí≠ Join Our Community

&lt;a href=&quot;https://discord.gg/2jUXBKDdP8&quot; target=&quot;_blank&quot;&gt;
&lt;img src=&quot;https://discordapp.com/api/guilds/966798490984382485/widget.png?style=banner3&quot; alt=&quot;&quot;&gt;
&lt;/a&gt;

&lt;br&gt;
&lt;br&gt;

# üåê Contributions

We welcome contributions big or small and in different directions. The best way to do this is to check this [document](https://www.activepieces.com/docs/developers/building-pieces/create-action) and we are always up to talk on [our Discord Server](https://discord.gg/2jUXBKDdP8).

## üìö Translations

Not into coding but still interested in contributing? Come join our [Discord](https://discord.gg/2jUXBKDdP8) and visit https://www.activepieces.com/docs/about/i18n for more information.

![fr translation](https://img.shields.io/badge/dynamic/json?color=blue&amp;label=fr&amp;style=for-the-badge&amp;logo=crowdin&amp;query=%24.progress[?(@.data.languageId==%27fr%27)].data.translationProgress&amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json)

![it translation](https://img.shields.io/badge/dynamic/json?color=blue&amp;label=it&amp;style=for-the-badge&amp;logo=crowdin&amp;query=%24.progress[?(@.data.languageId==%27it%27)].data.translationProgress&amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json)

![de translation](https://img.shields.io/badge/dynamic/json?color=blue&amp;label=de&amp;style=for-the-badge&amp;logo=crowdin&amp;query=%24.progress[?(@.data.languageId==%27de%27)].data.translationProgress&amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json)

![ja translation](https://img.shields.io/badge/dynamic/json?color=blue&amp;label=ja&amp;style=for-the-badge&amp;logo=crowdin&amp;query=%24.progress[?(@.data.languageId==%27ja%27)].data.translationProgress&amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json)


![pt-BR translation](https://img.shields.io/badge/dynamic/json?color=blue&amp;label=pt-BR&amp;style=for-the-badge&amp;logo=crowdin&amp;query=%24.progress[?(@.data.languageId==%27pt-BR%27)].data.translationProgress&amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json)


## ü¶´ Contributors

&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt;
&lt;!-- prettier-ignore-start --&gt;
&lt;!-- markdownlint-disable --&gt;
&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/ShahedAlMashni&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/41443850?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;ShahedAlMashni&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ShahedAlMashni&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-ShahedAlMashni&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/AbdulTheActivePiecer&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/106555838?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;AbdulTheActivePiecer&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;AbdulTheActivePiecer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#maintenance-AbdulTheActivePiecer&quot; title=&quot;Maintenance&quot;&gt;üöß&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/khaledmashaly&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/61781545?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Khaled Mashaly&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Khaled Mashaly&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#maintenance-khaledmashaly&quot; title=&quot;Maintenance&quot;&gt;üöß&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/abuaboud&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1812998?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Mohammed Abu Aboud&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mohammed Abu Aboud&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#maintenance-abuaboud&quot; title=&quot;Maintenance&quot;&gt;üöß&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://aboudzein.github.io&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/12976630?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Abdulrahman Zeineddin&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Abdulrahman Zeineddin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-aboudzein&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/creed983&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/62152944?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;ahmad jaber&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ahmad jaber&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-creed983&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/ashrafsamhouri&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/97393596?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;ashrafsamhouri&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ashrafsamhouri&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-ashrafsamhouri&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://steercampaign.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/12627658?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Mohammad Abu Musa&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mohammad Abu Musa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#projectManagement-mabumusa1&quot; title=&quot;Project Management&quot;&gt;üìÜ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/kanarelo&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/393261?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Mukewa Wekalao&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mukewa Wekalao&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-kanarelo&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://osamahaikal.me/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/72370395?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Osama Abdallah Essa Haikal&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Osama Abdallah Essa Haikal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-OsamaHaikal&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/M-Arman&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/54455592?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Arman&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Arman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#security-M-Arman&quot; title=&quot;Security&quot;&gt;üõ°Ô∏è&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/oskarkraemer&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/42745862?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Oskar Kr√§mer&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Oskar Kr√§mer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=oskarkraemer&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://thibpat.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/494686?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Thibaut Patel&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Thibaut Patel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#ideas-tpatel&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;ü§î&lt;/a&gt; &lt;a href=&quot;#plugin-tpatel&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Applesaucesomer&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/18318905?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Applesaucesomer&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Applesaucesomer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#ideas-Applesaucesomer&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;ü§î&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/crazyTweek&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6828237?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;crazyTweek&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;crazyTweek&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#ideas-crazyTweek&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;ü§î&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://linkedin.com/in/muhammad-tabaza&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/23503983?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Muhammad Tabaza&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Muhammad Tabaza&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-m-tabaza&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://shaypunter.co.uk&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/18310437?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Shay Punter&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Shay Punter&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=ShayPunter&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;#plugin-ShayPunter&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/abaza738&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/50132270?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;abaza738&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;abaza738&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-abaza738&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/jonaboe&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/51358680?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Jona Boeddinghaus&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jona Boeddinghaus&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-jonaboe&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/fomojola&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/264253?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;fomojola&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;fomojola&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=fomojola&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/astorozhevsky&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11055414?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Alexander Storozhevsky&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alexander Storozhevsky&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=astorozhevsky&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/J0LGER&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/54769522?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;J0LGER&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;J0LGER&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#security-J0LGER&quot; title=&quot;Security&quot;&gt;üõ°Ô∏è&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://about.me/veverkap&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/22348?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Patrick Veverka&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Patrick Veverka&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/issues?q=author%3Aveverkap&quot; title=&quot;Bug reports&quot;&gt;üêõ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://berksmbl.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10000339?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Berk S√ºmb√ºl&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Berk S√ºmb√ºl&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=berksmbl&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Willianwg&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/51550522?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Willian Guedes&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Willian Guedes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-Willianwg&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/abdullahranginwala&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/19731056?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Abdullah Ranginwala&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Abdullah Ranginwala&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=abdullahranginwala&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/dentych&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2256372?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Dennis Tychsen&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Dennis Tychsen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-dentych&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/MyWay&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1765284?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;MyWay&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;MyWay&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-MyWay&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/bibhuty-did-this&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/28416188?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Bibhuti Bhusan Panda&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Bibhuti Bhusan Panda&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-bibhuty-did-this&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/tarunsamanta2k20&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/55488549?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Tarun Samanta&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tarun Samanta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/issues?q=author%3Atarunsamanta2k20&quot; title=&quot;Bug reports&quot;&gt;üêõ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/herman-kudria-10868b207/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9007211?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Herman Kudria&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Herman Kudria&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-HKudria&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://nulldev.imagefoo.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/66683380?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;[NULL] Dev&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;[NULL] Dev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-Abdallah-Alwarawreh&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/JanHolger&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/25184957?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Jan Bebendorf&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jan Bebendorf&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-JanHolger&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://blog.nileshtrivedi.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/19304?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Nilesh&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Nilesh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-nileshtrivedi&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://certopus.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/40790016?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Vraj Gohil&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Vraj Gohil&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-VrajGohil&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/BastienMe&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/71411115?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;BastienMe&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;BastienMe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-BastienMe&quot; title=&quot;Plugin/utility libraries&quot;&gt;üîå&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://blog.fosketts.net&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8627862?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Stephen Foskett&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Stephen Foskett&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=SFoskett&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://ganapati.fr&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/15729117?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Nathan&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Nathan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=asuri0n&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.n-soft.pl&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4056319?v=4?s=100&quot; width=&quot;100px;

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[immich-app/immich]]></title>
            <link>https://github.com/immich-app/immich</link>
            <guid>https://github.com/immich-app/immich</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:09 GMT</pubDate>
            <description><![CDATA[High performance self-hosted photo and video management solution.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/immich-app/immich">immich-app/immich</a></h1>
            <p>High performance self-hosted photo and video management solution.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 82,699</p>
            <p>Forks: 4,337</p>
            <p>Stars today: 233 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt; 
  &lt;br/&gt;
  &lt;a href=&quot;https://opensource.org/license/agpl-v3&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-AGPL_v3-blue.svg?color=3F51B5&amp;style=for-the-badge&amp;label=License&amp;logoColor=000000&amp;labelColor=ececec&quot; alt=&quot;License: AGPLv3&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://discord.immich.app&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/discord/979116623879368755.svg?label=Discord&amp;logo=Discord&amp;style=for-the-badge&amp;logoColor=000000&amp;labelColor=ececec&quot; alt=&quot;Discord&quot;/&gt;
  &lt;/a&gt;
  &lt;br/&gt;
  &lt;br/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;design/immich-logo-stacked-light.svg&quot; width=&quot;300&quot; title=&quot;Login With Custom URL&quot;&gt;
&lt;/p&gt;
&lt;h3 align=&quot;center&quot;&gt;High performance self-hosted photo and video management solution&lt;/h3&gt;
&lt;br/&gt;
&lt;a href=&quot;https://immich.app&quot;&gt;
&lt;img src=&quot;design/immich-screenshots.png&quot; title=&quot;Main Screenshot&quot;&gt;
&lt;/a&gt;
&lt;br/&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;readme_i18n/README_ca_ES.md&quot;&gt;Catal√†&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_es_ES.md&quot;&gt;Espa√±ol&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_fr_FR.md&quot;&gt;Fran√ßais&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_it_IT.md&quot;&gt;Italiano&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_ja_JP.md&quot;&gt;Êó•Êú¨Ë™û&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_ko_KR.md&quot;&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_de_DE.md&quot;&gt;Deutsch&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_nl_NL.md&quot;&gt;Nederlands&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_tr_TR.md&quot;&gt;T√ºrk√ße&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_zh_CN.md&quot;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_zh_TW.md&quot;&gt;Ê≠£È´î‰∏≠Êñá&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_uk_UA.md&quot;&gt;–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_ru_RU.md&quot;&gt;–†—É—Å—Å–∫–∏–π&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_pt_BR.md&quot;&gt;Portugu√™s Brasileiro&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_sv_SE.md&quot;&gt;Svenska&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_ar_JO.md&quot;&gt;ÿßŸÑÿπÿ±ÿ®Ÿäÿ©&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_vi_VN.md&quot;&gt;Ti·∫øng Vi·ªát&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_th_TH.md&quot;&gt;‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢&lt;/a&gt;
&lt;/p&gt;


&gt; [!WARNING]
&gt; ‚ö†Ô∏è Always follow [3-2-1](https://www.backblaze.com/blog/the-3-2-1-backup-strategy/) backup plan for your precious photos and videos!
&gt; 
 

&gt; [!NOTE]
&gt; You can find the main documentation, including installation guides, at https://immich.app/.

## Links

- [Documentation](https://docs.immich.app/)
- [About](https://docs.immich.app/overview/introduction)
- [Installation](https://docs.immich.app/install/requirements)
- [Roadmap](https://immich.app/roadmap)
- [Demo](#demo)
- [Features](#features)
- [Translations](https://docs.immich.app/developer/translations)
- [Contributing](https://docs.immich.app/overview/support-the-project)

## Demo

Access the demo [here](https://demo.immich.app). For the mobile app, you can use `https://demo.immich.app` for the `Server Endpoint URL`.

### Login credentials

| Email           | Password |
| --------------- | -------- |
| demo@immich.app | demo     |

## Features

| Features                                     | Mobile | Web |
| :------------------------------------------- | ------ | --- |
| Upload and view videos and photos            | Yes    | Yes |
| Auto backup when the app is opened           | Yes    | N/A |
| Prevent duplication of assets                | Yes    | Yes |
| Selective album(s) for backup                | Yes    | N/A |
| Download photos and videos to local device   | Yes    | Yes |
| Multi-user support                           | Yes    | Yes |
| Album and Shared albums                      | Yes    | Yes |
| Scrubbable/draggable scrollbar               | Yes    | Yes |
| Support raw formats                          | Yes    | Yes |
| Metadata view (EXIF, map)                    | Yes    | Yes |
| Search by metadata, objects, faces, and CLIP | Yes    | Yes |
| Administrative functions (user management)   | No     | Yes |
| Background backup                            | Yes    | N/A |
| Virtual scroll                               | Yes    | Yes |
| OAuth support                                | Yes    | Yes |
| API Keys                                     | N/A    | Yes |
| LivePhoto/MotionPhoto backup and playback    | Yes    | Yes |
| Support 360 degree image display             | No     | Yes |
| User-defined storage structure               | Yes    | Yes |
| Public Sharing                               | Yes    | Yes |
| Archive and Favorites                        | Yes    | Yes |
| Global Map                                   | Yes    | Yes |
| Partner Sharing                              | Yes    | Yes |
| Facial recognition and clustering            | Yes    | Yes |
| Memories (x years ago)                       | Yes    | Yes |
| Offline support                              | Yes    | No  |
| Read-only gallery                            | Yes    | Yes |
| Stacked Photos                               | Yes    | Yes |
| Tags                                         | No     | Yes |
| Folder View                                  | Yes    | Yes |

## Translations

Read more about translations [here](https://docs.immich.app/developer/translations).

&lt;a href=&quot;https://hosted.weblate.org/engage/immich/&quot;&gt;
&lt;img src=&quot;https://hosted.weblate.org/widget/immich/immich/multi-auto.svg&quot; alt=&quot;Translation status&quot; /&gt;
&lt;/a&gt;

## Repository activity

![Activities](https://repobeats.axiom.co/api/embed/9e86d9dc3ddd137161f2f6d2e758d7863b1789cb.svg &quot;Repobeats analytics image&quot;)

## Star history

&lt;a href=&quot;https://star-history.com/#immich-app/immich&amp;Date&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=immich-app/immich&amp;type=Date&amp;theme=dark&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=immich-app/immich&amp;type=Date&quot; /&gt;
   &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=immich-app/immich&amp;type=Date&quot; width=&quot;100%&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;

## Contributors

&lt;a href=&quot;https://github.com/alextran1502/immich/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=immich-app/immich&quot; width=&quot;100%&quot;/&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[mifi/lossless-cut]]></title>
            <link>https://github.com/mifi/lossless-cut</link>
            <guid>https://github.com/mifi/lossless-cut</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:08 GMT</pubDate>
            <description><![CDATA[The swiss army knife of lossless video/audio editing]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mifi/lossless-cut">mifi/lossless-cut</a></h1>
            <p>The swiss army knife of lossless video/audio editing</p>
            <p>Language: TypeScript</p>
            <p>Stars: 34,242</p>
            <p>Forks: 1,606</p>
            <p>Stars today: 27 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
	&lt;a href=&quot;https://go.warp.dev/lossless-cut&quot; target=&quot;_blank&quot;&gt;
		&lt;sup&gt;Special thanks to:&lt;/sup&gt;
		&lt;br&gt;
		&lt;img alt=&quot;Warp sponsorship&quot; width=&quot;400&quot; src=&quot;https://github.com/warpdotdev/brand-assets/blob/main/Github/Sponsor/Warp-Github-LG-02.png&quot;&gt;
		&lt;br&gt;
		&lt;h&gt;Warp, built for coding with multiple AI agents&lt;/b&gt;
		&lt;br&gt;
		&lt;sup&gt;Available for macOS, Linux and Windows&lt;/sup&gt;
	&lt;/a&gt;
&lt;/div&gt;

&lt;br&gt;

&lt;div align=&quot;center&quot;&gt;
	&lt;br&gt;
  &lt;p&gt;&lt;a href=&quot;https://mifi.no/losslesscut/&quot;&gt;&lt;img src=&quot;src/renderer/src/icon.svg&quot; width=&quot;120&quot; alt=&quot;LosslessCut&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;p&gt;&lt;b&gt;LosslessCut&lt;/b&gt;&lt;/p&gt;
  The swiss army knife of lossless video/audio editing
	&lt;br&gt;
  &lt;img src=&quot;https://github.com/mifi/lossless-cut/workflows/Build/release/badge.svg&quot; /&gt;
  &lt;a href=&quot;https://paypal.me/mifino/usd&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Donate-PayPal-green.svg&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/mifi/lossless-cut#download&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/mifi/lossless-cut&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/fhnEREfUJ3&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/986051448385183804&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/losslesscut&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/losslesscut?label=Twitter&amp;style=social&quot; alt=&quot;Twitter&quot;&gt;&lt;/a&gt;
	&lt;br&gt;
	&lt;br&gt;
  &lt;a href=&quot;https://mifi.no/thanks/&quot;&gt;Thanks to my supporters&lt;/a&gt; and everyone who purchased LosslessCut!
	&lt;br&gt;
	&lt;br&gt;
  &lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;main_screenshot.jpg&quot; width=&quot;600&quot; alt=&quot;screenshot&quot; /&gt;&lt;/p&gt;
	&lt;br&gt;
	&lt;br&gt;
&lt;/div&gt;

LosslessCut aims to be the ultimate cross platform FFmpeg GUI for extremely fast and lossless operations on video, audio, subtitle and other related media files.
The main feature is lossless trimming and cutting of video and audio files, which is great for saving space by rough-cutting your large video files taken from a video camera, GoPro, drone, etc. It lets you quickly extract the good parts from your videos and discard many gigabytes of data without doing a slow re-encode and thereby losing quality. There are also many more [use cases](#typical-workflow). Everything is extremely fast because it does an almost direct data copy, fueled by the awesome FFmpeg which does all the grunt work.

## Table of contents

- [Features](#features)
- [Example lossless use cases](#example-lossless-use-cases)
- [Download](#download)
- [Supported formats](#supported-formats)
- [Documentation &amp; getting started](#documentation)
- [Video demos](#video-demos)
- [Featured](#featured)
- [Attributions](#attributions)

## Features

- Lossless cutting of most video and audio formats
- [Smart cut](https://github.com/mifi/lossless-cut/issues/126) (experimental)
- Losslessly cut out parts of video/audio (for cutting away commercials etc.)
- Losslessly rearrange the order of video/audio segments
- Lossless merge/concatenation of arbitrary files (with identical codecs parameters, e.g. from the same camera)
- Lossless multi track/stream editing
  - Combine arbitrary tracks from multiple files (ex. add music or subtitle track to a video file)
  - Remove unneeded tracks
  - Replace or re-encode only some tracks
  - Extract all tracks from a file (extract video, audio, subtitle, attachments and other tracks from one file into separate files)
- View technical data about all tracks. Edit file metadata, per-track metadata and per-track disposition
- Select video/audio tracks for playback. Playback multiple audio tracks simultaneously.
- Fast multi-file workflow (note: no mass/batch export yet)
- Keyboard shortcut workflow
- Losslessly remux video/audio into a different container (file) format
- Take full-resolution snapshots from videos in JPEG/PNG format (low or high quality)
- Export ranges of video frames to images (every nth frame, second, by scene change, best thumbnails)
  - Export only from a selected time range (segment)
  - Optionally include original timestamps in image file names
- Manual input of cutpoint times
- Apply a per-file timecode offset (and auto load timecode from file)
- Change rotation/orientation metadata in videos
- Timeline zoom and frame/keyframe jumping for cutting around keyframes
- Video thumbnails and audio waveform
- Saves per project cut segments to project file
- View FFmpeg last command log so you can modify and re-run recent commands on the command line
- Undo/redo
- Advanced segment query and mutation JS-based expression language.
- Give labels to cut segments, annotate with tags
- [Import/export](docs.md#import--export-projects) segments: MP4/MKV chapter marks, Text file, YouTube, CSV, CUE, XML (DaVinci, Final Cut Pro) and more
- MKV/MP4 embedded chapters marks editor
- View subtitles
- Customizable keyboard hotkeys
- Black scene detection, silent audio detection, and scene change detection
- Divide timeline into segments of length L, size (X MB), N number of segments or even randomized segments!
- Speed up / slow down video or audio file ([changing FPS](https://github.com/mifi/lossless-cut/issues/1712))
- Basic [CLI](cli.md) and [HTTP API](api.md)
- Show (DJI) embedded GPS track on a map
- Losslessly Download videos over HTTP (e.g. HLS `.m3u8`)

## Example lossless use cases

- Cut out commercials from a recorded TV show (and re-format from TS to MP4)
- Remove audio tracks from a file
- Extract music track from a video and cut it to your needs
- Add music to a video (or replace existing audio track)
- Combine audio and video tracks from separate recordings
- Include an external subtitle into a video
- Quickly change a H264/H265 MKV video to MOV or MP4 for playback on iPhone
- Import a list of cut times from other tool as a EDL (edit decision list, CSV) and run these cuts with LosslessCut
- Export a list of cut times as a CSV EDL and process these in another tool
- Quickly cut a file by its MP4/MKV chapters
- Quickly cut a [YouTube video](https://youtube-dl.org/) by its chapters (or music times from a comment)
- Change the language of a file&#039;s audio/subtitle tracks
- Attach cover art / thumbnail to videos / audio from an external JPEG file or from a frame on the timeline
- Change author, title, GPS position, recording time of a video
- Fix rotation of a video that has the wrong orientation flag set
  - Great for rotating phone videos that come out the wrong way without actually re-encoding the video.
- Loop a video / audio clip X times quickly without re-encoding
  - See [#284](https://github.com/mifi/lossless-cut/issues/284)
- Convert a video or parts of it into X image files (not lossless)
- Losslessly split a video into one file per scene (note you probably have to shift segments, see [#330](https://github.com/mifi/lossless-cut/issues/330).)
- Cut away silent parts of an audio/video
- Split video into segments to for example respect Twitter&#039;s 140 second limit
- Annotate each segment with one or more tags, then use those tags to organize your segments or use it to create an output folder structure or hierarchy for your segments.

### Export cut times as YouTube Chapters
1. Export with Merge and &quot;Create chapters from merged segments&quot; enabled
2. Open the exported file and select &quot;Import chapters&quot; in the dialog
3. File -&gt; Export project -&gt; YouTube Chapters

### Re-encode only the audio track, keeping the lossless video track

First export each track as individual files. Then use Handbrake or similar to re-encode the audio file (if mp4 file, encode as AAC.) Then open the extracted video stream in LosslessCut. The open your encoded audio file and select &quot;Include all tracks from the new file&quot;. Then export.

### Advanced multi-step workflows

**Tip:** you can use LosslessCut in multiple passes in order to achieve separate trimming of individual tracks:
1. Open a file an export all tracks as individual files
2. Open the exported track files independently and cut them as desired
3. Add the track back to the video and combine them to one output video

## Download

If you want to support my continued work on LosslessCut, and you want the advantage of a secure and simple installation process with automatic, stable updates, consider getting it from your favorite store:

&lt;a href=&quot;https://apps.apple.com/app/id1505323402&quot;&gt;&lt;img src=&quot;mac-app-store-badge.svg&quot; alt=&quot;Mac App Store&quot; height=&quot;50&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://www.microsoft.com/store/apps/9P30LSR4705L?cid=storebadge&amp;ocid=badge&quot;&gt;&lt;img src=&quot;ms-store-badge.svg&quot; alt=&quot;MS badge&quot; height=&quot;50&quot;/&gt;&lt;/a&gt;

For Linux these are some alternatives:

&lt;a href=&quot;https://snapcraft.io/losslesscut&quot;&gt;&lt;img src=&quot;https://github.com/mifi/lossless-cut/raw/master/snap-store-black.svg?sanitize=true&quot; alt=&quot;Snapcraft&quot; height=&quot;50&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://flathub.org/apps/details/no.mifi.losslesscut&quot;&gt;&lt;img src=&quot;https://github.com/mifi/lossless-cut/raw/master/flathub-badge.svg?sanitize=true&quot; alt=&quot;Flathub&quot; height=&quot;50&quot;/&gt;&lt;/a&gt;

If you prefer to download the executables manually, this will of course always be free (see also [supported operating systems](./requirements.md)):

- macOS: [Intel](https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-mac-x64.dmg) / [Apple Silicon](https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-mac-arm64.dmg) DMG (note that PKG does **not** work)
- Windows: [7zip](https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-win-x64.7z) (Windows 7, 8 and 8.1 is [no longer supported after v3.50.0](./requirements.md))
- Linux: [x64 tar.bz2](https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-linux-x64.tar.bz2) / [x64 AppImage](https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-linux-x86_64.AppImage) / [arm64 tar.bz2](https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-linux-arm64.tar.bz2) / [Raspberry Pi armv7l](https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-linux-armv7l.tar.bz2)
- [More releases](https://github.com/mifi/lossless-cut/releases) - Note that APPX (Windows) and PKG (macOS) do **not** work)
- [Latest nightly builds üß™](https://mifi.no/llc/nightly/)

Difference between App Stores and GitHub download? [Please see FAQ](issues.md#app-stores-and-github-difference).

[![](./donate.svg)](https://mifi.no/thanks)

LosslessCut is maintained by me alone and will always remain free and open source. If it&#039;s useful to you, consider supporting my work. Alternatively [donate to FFmpeg](https://www.ffmpeg.org/donations.html) because they are doing the world a huge favor.

[Paypal](https://paypal.me/mifino/usd) | [crypto](https://mifi.no/thanks) | [more](https://mifi.no/thanks)

## Supported formats

LosslessCut uses the Chromium browser&#039;s HTML5 video player, and not all formats/codecs are [natively supported](https://www.chromium.org/audio-video). Generally, the following file formats work: `MP4`, `MOV`, `WebM`, `Matroska`, `OGG` and `WAV`. Audio codecs: `FLAC`, `MP3`, `Opus`, `PCM`, `Vorbis` and `AAC`. Video codecs: `H264`, `AV1`, `Theora`, `VP8`, `VP9` and `H265` (with hardware decoder). Learn the [difference between a codec and a format](docs.md#primer-video--audio-formats-vs-codecs). Codecs and formats not listed above can still be converted to a supported format/codec from the `File` menu (try the option *Fastest: FFmpeg-assisted playback* first). A low quality version of the file will then be created and opened in the player. Note that the actual cut/export operation will still be performed on the original file, so it will be lossless. This allows for potentially opening any file that FFmpeg is able to decode.

## Documentation

- **[Getting started and documentation](docs.md)**
- [FAQ, known issues, limitations and troubleshooting](issues.md)
- [Contributing](CONTRIBUTING.md)

### Video demos

- [Common features](https://www.youtube.com/watch?v=pYHMxXy05Jg)
- [How to add a thumbnail / cover art to an MP4](https://www.youtube.com/watch?v=4pYJ93cn80E)
- [How to add multi-language audio to a video](https://www.youtube.com/watch?v=MRBGDsuw_WU)
- Your video here?

## Featured

- [Console newsletter](https://console.substack.com/p/console-93)
- Hacker News [2024](https://news.ycombinator.com/item?id=40829494) [2022](https://news.ycombinator.com/item?id=33969490) [2020-10](https://news.ycombinator.com/item?id=24883030) [2020-01](https://news.ycombinator.com/item?id=22026412) [2016](https://news.ycombinator.com/item?id=12885585)
- [Wikipedia](https://en.m.wikipedia.org/wiki/LosslessCut)
- Your link here?

&lt;img src=&quot;https://api.star-history.com/svg?repos=mifi/lossless-cut&amp;type=Date&quot; alt=&quot;Star History Chart&quot; width=&quot;400px&quot; /&gt;

## Attributions
- App icon made by [Dimi Kazak](http://www.flaticon.com/authors/dimi-kazak &quot;Dimi Kazak&quot;) from [www.flaticon.com](http://www.flaticon.com &quot;Flaticon&quot;) is licensed by [CC 3.0 BY](http://creativecommons.org/licenses/by/3.0/ &quot;Creative Commons BY 3.0&quot;).
- [Lottie animation by Chris Gannon](https://lottiefiles.com/7077-magic-flow).
- Thanks to Adi Abinun for UI work.
- Thanks to translators who helped translate the app. [You can too!](translation.md)
- [Thanks to everyone for supporting](https://mifi.no/thanks/) my open source work üôå

---

Made with ‚ù§Ô∏è in [üá≥üá¥](https://www.youtube.com/watch?v=uQIv8Vo9_Jc)

[More apps by mifi.no](https://mifi.no/)

Follow me on [GitHub](https://github.com/mifi/), [YouTube](https://www.youtube.com/channel/UC6XlvVH63g0H54HSJubURQA), [IG](https://www.instagram.com/mifi.no/), [Twitter](https://twitter.com/mifi_no) for more awesome content!
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[nuxt/nuxt]]></title>
            <link>https://github.com/nuxt/nuxt</link>
            <guid>https://github.com/nuxt/nuxt</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:07 GMT</pubDate>
            <description><![CDATA[The Intuitive Vue Framework.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nuxt/nuxt">nuxt/nuxt</a></h1>
            <p>The Intuitive Vue Framework.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 58,636</p>
            <p>Forks: 5,419</p>
            <p>Stars today: 22 stars today</p>
            <h2>README</h2><pre>[![Nuxt banner](./.github/assets/banner.svg)](https://nuxt.com)

# Nuxt

&lt;p&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/nuxt&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/nuxt.svg?style=flat&amp;colorA=18181B&amp;colorB=28CF8D&quot; alt=&quot;Version&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/nuxt&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/nuxt.svg?style=flat&amp;colorA=18181B&amp;colorB=28CF8D&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/nuxt/nuxt/tree/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/nuxt/nuxt.svg?style=flat&amp;colorA=18181B&amp;colorB=28CF8D&quot; alt=&quot;License&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://nuxt.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Nuxt%20Docs-18181B?logo=nuxt&quot; alt=&quot;Website&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://chat.nuxt.dev&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Nuxt%20Discord-18181B?logo=discord&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://securityscorecards.dev/&quot;&gt;&lt;img src=&quot;https://api.securityscorecards.dev/projects/github.com/nuxt/nuxt/badge&quot; alt=&quot;Nuxt openssf scorecard score&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

Nuxt is a free and open-source framework with an intuitive and extendable way to create type-safe, performant and production-grade full-stack web applications and websites with Vue.js.

It provides a number of features that make it easy to build fast, SEO-friendly, and scalable web applications, including:
- Server-side rendering, Static Site Generation, Hybrid Rendering and Edge-Side Rendering
- Automatic routing with code-splitting and pre-fetching
- Data fetching and state management
- SEO Optimization and Meta tags definition
- Auto imports of components, composables and utils
- TypeScript with zero configuration
- Go fullstack with our server/ directory
- Extensible with [200+ modules](https://nuxt.com/modules)
- Deployment to a variety of [hosting platforms](https://nuxt.com/deploy)
- ...[and much more](https://nuxt.com) üöÄ

### Table of Contents

- üöÄ [Getting Started](#getting-started)
- üíª [ Vue Development](#vue-development)
- üìñ [Documentation](#documentation)
- üß© [Modules](#modules)
- ‚ù§Ô∏è  [Contribute](#contribute)
- üè† [Local Development](#local-development)
- üõü [Professional Support](#professional-support)
- üîó [Follow Us](#follow-us)
- ‚öñÔ∏è [License](#license)

---

## &lt;a name=&quot;getting-started&quot;&gt;üöÄ Getting Started&lt;/a&gt;

Use the following command to create a new starter project. This will create a starter project with all the necessary files and dependencies:

```bash
npm create nuxt@latest &lt;my-project&gt;
```

&gt; [!TIP]
&gt; Discover also [nuxt.new](https://nuxt.new): Open a Nuxt starter on CodeSandbox, StackBlitz or locally to get up and running in a few seconds.

## &lt;a name=&quot;vue-development&quot;&gt;üíª Vue Development&lt;/a&gt;

Simple, intuitive and powerful, Nuxt lets you write Vue components in a way that makes sense. Every repetitive task is automated, so you can focus on writing your full-stack Vue application with confidence.

Example of an `app.vue`:

```vue
&lt;script setup lang=&quot;ts&quot;&gt;
useSeoMeta({
  title: &#039;Meet Nuxt&#039;,
  description: &#039;The Intuitive Vue Framework.&#039;,
})
&lt;/script&gt;

&lt;template&gt;
  &lt;div id=&quot;app&quot;&gt;
    &lt;AppHeader /&gt;
    &lt;NuxtPage /&gt;
    &lt;AppFooter /&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;style scoped&gt;
#app {
  background-color: #020420;
  color: #00DC82;
}
&lt;/style&gt;
```

## &lt;a name=&quot;documentation&quot;&gt;üìñ Documentation&lt;/a&gt;

We highly recommend you take a look at the [Nuxt documentation](https://nuxt.com/docs) to level up. It‚Äôs a great resource for learning more about the framework. It covers everything from getting started to advanced topics.

## &lt;a name=&quot;modules&quot;&gt;üß© Modules&lt;/a&gt;

Discover our [list of modules](https://nuxt.com/modules) to supercharge your Nuxt project, created by the Nuxt team and community.

## &lt;a name=&quot;contribute&quot;&gt;‚ù§Ô∏è Contribute&lt;/a&gt;

We invite you to contribute and help improve Nuxt üíö

Here are a few ways you can get involved:
- **Reporting Bugs:** If you come across any bugs or issues, please check out the [reporting bugs guide](https://nuxt.com/docs/4.x/community/reporting-bugs) to learn how to submit a bug report.
- **Suggestions:** Have ideas to enhance Nuxt? We&#039;d love to hear them! Check out the [contribution guide](https://nuxt.com/docs/4.x/community/contribution) to share your suggestions.
- **Questions:** If you have questions or need assistance, the [getting help guide](https://nuxt.com/docs/4.x/community/getting-help) provides resources to help you out.

## &lt;a name=&quot;local-development&quot;&gt;üè† Local Development&lt;/a&gt;

Follow the docs to [Set Up Your Local Development Environment](https://nuxt.com/docs/4.x/community/framework-contribution#setup) to contribute to the framework and documentation.

## &lt;a name=&quot;professional-support&quot;&gt;üõü Professional Support&lt;/a&gt;

- Technical audit &amp; consulting: [Nuxt Experts](https://nuxt.com/enterprise/support)
- Custom development &amp; more: [Nuxt Agencies Partners](https://nuxt.com/enterprise/agencies)

## &lt;a name=&quot;follow-us&quot;&gt;üîó Follow Us&lt;/a&gt;

&lt;p valign=&quot;center&quot;&gt;
  &lt;a href=&quot;https://go.nuxt.com/discord&quot;&gt;&lt;img width=&quot;20px&quot; src=&quot;./.github/assets/discord.svg&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://go.nuxt.com/x&quot;&gt;&lt;img width=&quot;20px&quot; src=&quot;./.github/assets/twitter.svg&quot; alt=&quot;Twitter&quot;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://go.nuxt.com/github&quot;&gt;&lt;img width=&quot;20px&quot; src=&quot;./.github/assets/github.svg&quot; alt=&quot;GitHub&quot;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://go.nuxt.com/bluesky&quot;&gt;&lt;img width=&quot;20px&quot; src=&quot;./.github/assets/bluesky.svg&quot; alt=&quot;Bluesky&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

## &lt;a name=&quot;license&quot;&gt;‚öñÔ∏è License&lt;/a&gt;

[MIT](https://github.com/nuxt/nuxt/tree/main/LICENSE)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Effect-TS/effect]]></title>
            <link>https://github.com/Effect-TS/effect</link>
            <guid>https://github.com/Effect-TS/effect</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:06 GMT</pubDate>
            <description><![CDATA[Build production-ready applications in TypeScript]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Effect-TS/effect">Effect-TS/effect</a></h1>
            <p>Build production-ready applications in TypeScript</p>
            <p>Language: TypeScript</p>
            <p>Stars: 11,761</p>
            <p>Forks: 409</p>
            <p>Stars today: 23 stars today</p>
            <h2>README</h2><pre>![npm version](https://img.shields.io/npm/v/effect)

# Effect Monorepo

&gt; An ecosystem of tools to build robust applications in TypeScript

## Introduction

Welcome to Effect, a powerful TypeScript framework that provides a fully-fledged functional effect system with a rich standard library.

Effect consists of several packages that work together to help build robust TypeScript applications. The core package, `effect`, serves as the foundation of the framework, offering primitives for managing side effects, ensuring type safety, and supporting concurrency.

## Monorepo Structure

The Effect monorepo is organized into multiple packages, each extending the core functionality. Below is an overview of the packages included:

| Package                           | Description                                                                                 |                                                                                                    |
| --------------------------------- | ------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------- |
| `effect`                          | Core package                                                                                | [README](https://github.com/Effect-TS/effect/blob/main/packages/effect/README.md)                  |
| `@effect/ai`                      | AI utilities                                                                                | [README](https://github.com/Effect-TS/effect/blob/main/packages/ai/ai/README.md)                   |
| `@effect/ai-openai`               | OpenAI utilities                                                                            | [README](https://github.com/Effect-TS/effect/blob/main/packages/ai/openai/README.md)               |
| `@effect/ai-anthropic`            | Anthropic utilities                                                                         | [README](https://github.com/Effect-TS/effect/blob/main/packages/ai/anthropic/README.md)            |
| `@effect/ai-amazon-bedrock`       | Effect modules for working with Amazon Bedrock AI apis                                      | [README](https://github.com/Effect-TS/effect/blob/main/packages/ai/amazon-bedrock/README.md)       |
| `@effect/ai-google`               | Effect modules for working with Google AI apis                                              | [README](https://github.com/Effect-TS/effect/blob/main/packages/ai/google/README.md)               |
| `@effect/cli`                     | CLI utilities                                                                               | [README](https://github.com/Effect-TS/effect/blob/main/packages/cli/README.md)                     |
| `@effect/cluster`                 | Distributed computing tools                                                                 | [README](https://github.com/Effect-TS/effect/blob/main/packages/cluster/README.md)                 |
| `@effect/experimental`            | Experimental features and APIs                                                              | [README](https://github.com/Effect-TS/effect/blob/main/packages/experimental/README.md)            |
| `@effect/opentelemetry`           | [OpenTelemetry](https://opentelemetry.io/) integration                                      | [README](https://github.com/Effect-TS/effect/blob/main/packages/opentelemetry/README.md)           |
| `@effect/platform`                | Cross-platform runtime utilities                                                            | [README](https://github.com/Effect-TS/effect/blob/main/packages/platform/README.md)                |
| `@effect/platform-browser`        | Platform utilities for the browser                                                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/platform-browser/README.md)        |
| `@effect/platform-bun`            | Platform utilities for [Bun](https://bun.sh/)                                               | [README](https://github.com/Effect-TS/effect/blob/main/packages/platform-bun/README.md)            |
| `@effect/platform-node`           | Platform utilities for [Node.js](https://nodejs.org)                                        | [README](https://github.com/Effect-TS/effect/blob/main/packages/platform-node/README.md)           |
| `@effect/platform-node-shared`    | Shared utilities for [Node.js](https://nodejs.org)                                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/platform-node-shared/README.md)    |
| `@effect/printer`                 | General-purpose printing utilities                                                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/printer/README.md)                 |
| `@effect/printer-ansi`            | ANSI-compatible printing utilities                                                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/printer-ansi/README.md)            |
| `@effect/rpc`                     | Remote procedure call (RPC) utilities                                                       | [README](https://github.com/Effect-TS/effect/blob/main/packages/rpc/README.md)                     |
| `@effect/sql`                     | SQL database utilities                                                                      | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql/README.md)                     |
| `@effect/sql-clickhouse`          | An `@effect/sql` implementation for [ClickHouse](https://clickhouse.com/).                  | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-clickhouse/README.md)          |
| `@effect/sql-d1`                  | An `@effect/sql` implementation for [Cloudflare D1](https://developers.cloudflare.com/d1/). | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-d1/README.md)                  |
| `@effect/sql-drizzle`             | An `@effect/sql` implementation for [Drizzle](https://orm.drizzle.team/).                   | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-drizzle/README.md)             |
| `@effect/sql-kysely`              | An `@effect/sql` implementation for [Kysely](https://kysely.dev/).                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-kysely/README.md)              |
| `@effect/sql-libsql`              | An `@effect/sql` implementation using the `@libsql/client` library.                         | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-libsql/README.md)              |
| `@effect/sql-mssql`               | An `@effect/sql` implementation using the mssql `tedious` library.                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-mssql/README.md)               |
| `@effect/sql-mysql2`              | An `@effect/sql` implementation using the `mysql2` library.                                 | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-mysql2/README.md)              |
| `@effect/sql-pg`                  | An `@effect/sql` implementation using the `postgres.js` library.                            | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-pg/README.md)                  |
| `@effect/sql-sqlite-bun`          | An `@effect/sql` implementation using the `bun:sqlite` library.                             | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-sqlite-bun/README.md)          |
| `@effect/sql-sqlite-do`           | An `@effect/sql` implementation for Cloudflare Durable Objects sqlite storage.              | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-sqlite-do/README.md)           |
| `@effect/sql-sqlite-node`         | An `@effect/sql` implementation using the `better-sqlite3` library.                         | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-sqlite-node/README.md)         |
| `@effect/sql-sqlite-react-native` | An `@effect/sql` implementation using the `react-native-quick-sqlite` library.              | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-sqlite-react-native/README.md) |
| `@effect/sql-sqlite-wasm`         | An `@effect/sql` implementation using the `@sqlite.org/sqlite-wasm` library.                | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-sqlite-wasm/README.md)         |
| `@effect/typeclass`               | Functional programming type classes                                                         | [README](https://github.com/Effect-TS/effect/blob/main/packages/typeclass/README.md)               |
| `@effect/vitest`                  | Testing utilities for [Vitest](https://vitest.dev/)                                         | [README](https://github.com/Effect-TS/effect/blob/main/packages/vitest/README.md)                  |
| `@effect/workflow`                | Durable workflows for Effect                                                                | [README](https://github.com/Effect-TS/effect/blob/main/packages/workflow/README.md)                |

# Documentation

## Website

For detailed information and usage examples, visit the [Effect website](https://www.effect.website/).

## API Reference

For a complete API reference of the core package `effect`, see the [Effect API documentation](https://effect-ts.github.io/effect/).

## Introduction to Effect

Get started with Effect by watching our introductory video on YouTube. This video provides an overview of Effect and its key features:

[![Introduction to Effect](https://img.youtube.com/vi/ViSiXfBKElQ/maxresdefault.jpg)](https://youtu.be/ViSiXfBKElQ)

# Connect with Our Community

Join the Effect community on Discord to connect with other developers, ask questions, and share insights: [Join Effect&#039;s Discord Community](https://discord.gg/hdt7t7jpvn).

# Contributing via Pull Requests

We welcome contributions via pull requests! Here are some guidelines to help you get started:

## Setting Up Your Environment

Begin by forking the repository and clone it to your local machine.

Navigate into the cloned repository and create a new branch for your changes:

```bash
git checkout -b my-branch
```

Ensure all required dependencies are installed by running:

```bash
pnpm install  # Requires pnpm version 10.4.0
```

## Making Changes

### Implement Your Changes

Make the changes you propose to the codebase. If your changes impact functionality, please **add corresponding tests** to validate your updates.

### Validate Your Changes

Run the following commands to ensure your changes do not introduce any issues:

- `pnpm codegen` (optional): Re-generate the package entrypoints in case you have changed the structure of a package or introduced a new module.
- `pnpm check`: Confirm that the code compiles without errors.
- `pnpm test`: Execute all unit tests to ensure your changes haven&#039;t broken existing functionality.
- `pnpm circular`: Check for any circular dependencies in imports.
- `pnpm lint`: Ensure the code adheres to our coding standards.
  - If you encounter style issues, use `pnpm lint-fix` to automatically correct some of these.
- `pnpm test-types`: Run type-level tests. Tests are written using [tstyche](https://tstyche.org/).
- `pnpm docgen`: Ensure the documentation generates correctly and reflects any changes made.

### Document Your Changes

#### JSDoc Comments

When adding a new feature, it&#039;s important to document your code using JSDoc comments. This helps other developers understand the purpose and usage of your changes. Include at least the following in your JSDoc comments:

- **A Short Description**: Summarize the purpose and functionality of the feature.
- **Example**: Provide a usage example under the `@example` tag to demonstrate how to use the feature.
- **Since Version**: Use the `@since` tag to indicate the version in which the feature was introduced. If you&#039;re unsure about the version, please consult with a project maintainer.
- **Category (Optional)**: You can categorize the feature with the `@category` tag to help organize the documentation. If you&#039;re unsure about what category to assign, ask a project maintainer.

**Note**: A HTML utility file, [`code2jsdoc-example.html`](/scripts/jsdocs/code2jsdoc-example.html), has been added to assist with creating JSDoc `@example` comments. This web-based interface includes two text areas:

1. An input textarea for pasting example code.
2. An output textarea that dynamically generates formatted JSDoc `@example` comments.

This utility helps ensure consistent formatting and streamlines the process of documenting examples. See the following example of its usage:

Example Input:

```ts
import { Effect } from &quot;effect&quot;

console.log(Effect.runSyncExit(Effect.succeed(1)))
/*
Output:
{
  _id: &quot;Exit&quot;,
  _tag: &quot;Success&quot;,
  value: 1
}
*/
```

Output:

````
*
* @example
* ```ts
* import { Effect } from &quot;effect&quot;
*
* console.log(Effect.runSyncExit(Effect.succeed(1)))
* // Output:
* // {
* //   _id: &quot;Exit&quot;,
* //   _tag: &quot;Success&quot;,
* //   value: 1
* // }
* ```
*
````

By using this utility, you can save time and maintain consistency in your JSDoc comments, especially for complex examples.

#### Changeset Documentation

Before committing your changes, document them with a changeset. This process helps in tracking modifications and effectively communicating them to the project team and users:

```bash
pnpm changeset
```

During the changeset creation process, you will be prompted to select the appropriate level for your changes:

- **patch**: Opt for this if you are making small fixes or minor changes that do not affect the library&#039;s overall functionality.
- **minor**: Choose this for new features that enhance functionality but do not disrupt existing features.
- **major**: Select this for any changes that result in backward-incompatible modifications to the library.

## Finalizing Your Contribution

### Commit Your Changes

Once you have documented your changes with a changeset, it‚Äôs time to commit them to the repository. Use a clear and descriptive commit message, which could be the same message you used in your changeset:

```bash
git commit -am &#039;Add some feature&#039;
```

#### Linking to Issues

If your commit addresses an open issue, reference the issue number directly in your commit message. This helps to link your contribution clearly to specific tasks or bug reports. Additionally, if your commit resolves the issue, you can indicate this by adding a phrase like `&quot;, closes #&lt;issue-number&gt;&quot;`. For example:

```bash
git commit -am &#039;Add some feature, closes #123&#039;
```

This practice not only helps in tracking the progress of issues but also automatically closes the issue when the commit is merged, streamlining project management.

### Push to Your Fork

Push the changes up to your GitHub fork:

```bash
git push origin my-branch
```

### Create a Pull Request

Open a pull request against the appropriate branch on the original repository:

- `main` branch: For minor patches or bug fixes.
- `next-minor` branch: For new features that are non-breaking.
- `next-major` branch: For changes that introduce breaking modifications.

Please be patient! We will do our best to review your pull request as soon as possible.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[firebase/genkit]]></title>
            <link>https://github.com/firebase/genkit</link>
            <guid>https://github.com/firebase/genkit</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:05 GMT</pubDate>
            <description><![CDATA[Open-source framework for building AI-powered apps in JavaScript, Go, and Python, built and used in production by Google]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/firebase/genkit">firebase/genkit</a></h1>
            <p>Open-source framework for building AI-powered apps in JavaScript, Go, and Python, built and used in production by Google</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,853</p>
            <p>Forks: 543</p>
            <p>Stars today: 21 stars today</p>
            <h2>README</h2><pre>![Genkit logo](docs/resources/genkit-logo-dark.png#gh-dark-mode-only &#039;Genkit&#039;)
![Genkit logo](docs/resources/genkit-logo.png#gh-light-mode-only &#039;Genkit&#039;)

[Genkit](https://genkit.dev) is an open-source framework for building full-stack AI-powered applications, built and used in production by Google&#039;s Firebase. It provides SDKs for multiple programming languages with varying levels of stability:

- **JavaScript/TypeScript**: Production-ready with full feature support
- **Go**: Production-ready with full feature support
- **Python (Alpha)**: Early development with core functionality

It offers a unified interface for integrating AI models from providers like [Google](https://genkit.dev/docs/plugins/google-genai), [OpenAI](https://genkit.dev/docs/plugins/openai), [Anthropic](https://thefireco.github.io/genkit-plugins/docs/plugins/genkitx-anthropic), [Ollama](https://genkit.dev/docs/plugins/ollama/), and more. Rapidly build and deploy production-ready chatbots, automations, and recommendation systems using streamlined APIs for multimodal content, structured outputs, tool calling, and agentic workflows.

Get started with just a few lines of code:

```ts
import { genkit } from &#039;genkit&#039;;
import { googleAI } from &#039;@genkit-ai/google-genai&#039;;

const ai = genkit({ plugins: [googleAI()] });

const { text } = await ai.generate({
    model: googleAI.model(&#039;gemini-2.5-flash&#039;),
    prompt: &#039;Why is Firebase awesome?&#039;
});
```

## Explore &amp; build with Genkit

Play with AI sample apps, with visualizations of the Genkit code that powers
them, at no cost to you.

[Explore Genkit by Example](https://examples.genkit.dev)

## Key capabilities

&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;strong&gt;Broad AI model support&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;Use a unified interface to integrate with hundreds of models from providers like &lt;a href=&quot;https://genkit.dev/docs/plugins/google-genai&quot;&gt;Google&lt;/a&gt;, &lt;a href=&quot;https://genkit.dev/docs/plugins/openai&quot;&gt;
    OpenAI&lt;/a&gt;, &lt;a href=&quot;https://thefireco.github.io/genkit-plugins/docs/plugins/genkitx-anthropic&quot;&gt;
    Anthropic&lt;/a&gt;, &lt;a href=&quot;https://genkit.dev/docs/plugins/ollama&quot;&gt;Ollama&lt;/a&gt;, and more. Explore, compare, and use the best models for your needs.&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;strong&gt;Simplified AI development&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;Use streamlined APIs to build AI features with &lt;a href=&quot;https://genkit.dev/docs/models#structured-output&quot;&gt;
    structured output&lt;/a&gt;, &lt;a href=&quot;https://genkit.dev/docs/tool-calling&quot;&gt;agentic tool calling&lt;/a&gt;, &lt;a href=&quot;https://genkit.dev/docs/rag&quot;&gt;context-aware generation&lt;/a&gt;, &lt;a href=&quot;https://genkit.dev/docs/models#multimodal&quot;&gt;multi-modal input/output&lt;/a&gt;, and more. Genkit handles the complexity of AI development, so you can build and iterate faster.&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;strong&gt;Web and mobile ready&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;Integrate seamlessly with frameworks and platforms including Next.js, React, Angular, iOS, Android, using purpose-built &lt;a href=&quot;https://genkit.dev/docs/firebase&quot;&gt;client SDKs&lt;/a&gt; and helpers.&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;strong&gt;Cross-language support&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;Build with the language that best fits your project. Genkit provides SDKs for JavaScript/TypeScript, Go, and Python (Alpha) with consistent APIs and capabilities across all supported languages.&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;strong&gt;Deploy anywhere&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;Deploy AI logic to any environment that supports your chosen programming language, such as &lt;a href=&quot;https://genkit.dev/docs/firebase&quot;&gt;Cloud Functions for Firebase&lt;/a&gt;,
    &lt;a href=&quot;https://genkit.dev/docs/cloud-run&quot;&gt;Google Cloud Run&lt;/a&gt;, or &lt;a href=&quot;https://genkit.dev/docs/deploy-node&quot;&gt;third-party platforms&lt;/a&gt;,
    with or without Google services.&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;strong&gt;Developer tools&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;Accelerate AI development with a purpose-built, local &lt;a href=&quot;https://genkit.dev/docs/devtools&quot;&gt;CLI and Developer UI&lt;/a&gt;. Test prompts and
    flows against individual inputs or datasets, compare outputs from different models, debug with detailed execution traces, and use immediate visual feedback to iterate rapidly on prompts.&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;strong&gt;Production monitoring&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;Ship AI features with confidence using comprehensive production monitoring. Track model performance, and request volumes, latency, and error rates in a &lt;a href=&quot;https://genkit.dev/docs/observability/getting-started&quot;&gt; purpose-built dashboard&lt;/a&gt;. Identify issues quickly with detailed observability metrics, and ensure your AI features meet quality and performance targets in real-world usage.&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

## How does it work?

Genkit simplifies AI integration with an open-source SDK and unified APIs that
work across various model providers and programming languages. It abstracts away complexity so you can focus on delivering great user experiences.

Some key features offered by Genkit include:

* [Text and image generation](https://genkit.dev/docs/models)
* [Type-safe, structured data generation](https://genkit.dev/docs/models#structured-output)
* [Tool calling](https://genkit.dev/docs/tool-calling)
* [Prompt templating](https://genkit.dev/docs/dotprompt)
* [Persisted chat interfaces](https://genkit.dev/docs/chat)
* [AI workflows](https://genkit.dev/docs/flows)
* [AI-powered data retrieval (RAG)](https://genkit.dev/docs/rag)

Genkit is designed for server-side deployment in multiple language environments, and also provides seamless client-side integration through dedicated helpers and [client SDKs](https://genkit.dev/docs/firebase).

## Implementation path

&lt;table&gt;
&lt;tr&gt;
  &lt;td&gt;&lt;span&gt;1&lt;/span&gt;&lt;/td&gt;
  &lt;td&gt;Choose your language and model provider&lt;/td&gt;
  &lt;td&gt;Select the Genkit SDK for your preferred language (JavaScript/TypeScript, Go, or Python (Alpha)). Choose a model provider like &lt;a href=&quot;https://genkit.dev/docs/plugins/google-genai&quot;&gt;Google Gemini&lt;/a&gt; or Anthropic, and get an API key. Some providers, like &lt;a href=&quot;https://genkit.dev/docs/plugins/vertex-ai&quot;&gt;Vertex AI&lt;/a&gt;, may rely on a different means of authentication.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;&lt;span&gt;2&lt;/span&gt;&lt;/td&gt;
  &lt;td&gt;Install the SDK and initialize&lt;/td&gt;
  &lt;td&gt;Install the Genkit SDK, model-provider package of your choice, and the Genkit CLI. Import the Genkit and provider packages and initialize Genkit with the provider API key.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;&lt;span&gt;3&lt;/span&gt;&lt;/td&gt;
  &lt;td&gt;Write and test AI features&lt;/td&gt;
  &lt;td&gt;Use the Genkit SDK to build AI features for your use case, from basic text generation to complex multi-step workflows and agents. Use the CLI and Developer UI to help you rapidly test and iterate.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt;
  &lt;td&gt;Deploy and monitor&lt;/td&gt;
  &lt;td&gt;Deploy your AI features to Firebase, Google Cloud Run, or any environment that supports your chosen programming language. Integrate them into your app, and monitor them in production in the Firebase console.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

## Get started

- [JavaScript/TypeScript quickstart](https://genkit.dev/docs/get-started)
- [Go quickstart](https://genkit.dev/go/docs/get-started-go)
- [Python quickstart](https://genkit.dev/python/docs/get-started/) (Alpha)

## Development tools

Genkit provides a CLI and a local UI to streamline your AI development workflow.

### CLI

The Genkit CLI includes commands for running and evaluating your Genkit functions (flows) and collecting telemetry and logs.

- **Install:** `npm install -g genkit-cli`
- **Run a command, wrapped with telemetry, a interactive developer UI, etc:** `genkit start -- &lt;command to run your code&gt;`

### Developer UI

The Genkit developer UI is a local interface for testing, debugging, and iterating on your AI application.

Key features:

- **Run:** Execute and experiment with Genkit flows, prompts, queries, and more in dedicated playgrounds.
- **Inspect:** Analyze detailed traces of past executions, including step-by-step breakdowns of complex flows.
- **Evaluate:** Review the results of evaluations run against your flows, including performance metrics and links to relevant traces.

&lt;img src=&quot;docs/resources/readme-ui-traces-screenshot.png&quot; width=&quot;700&quot; alt=&quot;Screenshot of Genkit Developer UI showing traces&quot;&gt;

## Try Genkit in Firebase Studio

Want to skip the local setup? Click below to try out Genkit using [Firebase Studio](https://firebase.studio), Google&#039;s AI-assisted workspace for full-stack app development in the cloud.

&lt;a href=&quot;https://studio.firebase.google.com/new/genkit&quot;&gt;
  &lt;img
    height=&quot;32&quot;
    alt=&quot;Open in Firebase Studio&quot;
    src=&quot;https://cdn.firebasestudio.dev/btn/open_bright_32.svg&quot;&gt;
&lt;/a&gt;

## Connect with us

- [**Join us on Discord**](https://discord.gg/qXt5zzQKpc) ‚Äì Get help, share
ideas, and chat with other developers.
- [**Contribute on GitHub**](https://github.com/firebase/genkit/issues) ‚Äì Report
bugs, suggest features, or explore the source code.
- [**Contribute to Documentation and Samples**](https://github.com/genkit-ai/) ‚Äì Report
issues in Genkit&#039;s [documentation](https://github.com/genkit-ai/docsite), or contribute to the [samples](https://github.com/genkit-ai/samples).

## Contributing

Contributions to Genkit are welcome and highly appreciated! See our [Contribution Guide](CONTRIBUTING.md) to get started.

## Authors

Genkit is built by [Firebase](https://firebase.google.com/) with contributions from the [Open Source Community](https://github.com/firebase/genkit/graphs/contributors).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[chartdb/chartdb]]></title>
            <link>https://github.com/chartdb/chartdb</link>
            <guid>https://github.com/chartdb/chartdb</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:04 GMT</pubDate>
            <description><![CDATA[Database diagrams editor that allows you to visualize and design your DB with a single query.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/chartdb/chartdb">chartdb/chartdb</a></h1>
            <p>Database diagrams editor that allows you to visualize and design your DB with a single query.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 19,965</p>
            <p>Forks: 1,123</p>
            <p>Stars today: 97 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://chartdb.io#gh-light-mode-only&quot;&gt;
    &lt;img src=&quot;https://github.com/chartdb/chartdb/blob/main/src/assets/logo-light.png&quot; width=&quot;400&quot; height=&quot;70&quot; alt=&quot;ChartDB&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://chartdb.io##gh-dark-mode-only&quot;&gt;
    &lt;img src=&quot;https://github.com/chartdb/chartdb/blob/main/src/assets/logo-dark.png&quot; width=&quot;400&quot; height=&quot;70&quot; alt=&quot;ChartDB&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;b&gt;Open-source database diagrams editor&lt;/b&gt; &lt;br /&gt;
  &lt;b&gt;No installations ‚Ä¢ No Database password required.&lt;/b&gt; &lt;br /&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://discord.gg/QeFwyWSKwC&quot;&gt;Community&lt;/a&gt;  &amp;bull;
  &lt;a href=&quot;https://www.chartdb.io?ref=github_readme&quot;&gt;Website&lt;/a&gt;  &amp;bull;
  &lt;a href=&quot;https://chartdb.io/templates?ref=github_readme&quot;&gt;Examples&lt;/a&gt;  &amp;bull;
  &lt;a href=&quot;https://app.chartdb.io?ref=github_readme&quot;&gt;Demo&lt;/a&gt;
&lt;/h3&gt;

&lt;h4 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/chartdb/chartdb?tab=AGPL-3.0-1-ov-file#readme&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/license/chartdb/chartdb?color=blue&quot; alt=&quot;ChartDB is released under the AGPL license.&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/chartdb/chartdb/blob/main/CONTRIBUTING.md&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/PRs-Welcome-brightgreen&quot; alt=&quot;PRs welcome!&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/QeFwyWSKwC&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/discord/1277047413705670678?color=5865F2&amp;label=Discord&amp;logo=discord&amp;logoColor=white&quot; alt=&quot;Discord community channel&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://x.com/intent/follow?screen_name=jonathanfishner&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/twitter/follow/jonathanfishner?style=social&quot;/&gt;
  &lt;/a&gt;

&lt;/h4&gt;

---

&lt;p align=&quot;center&quot;&gt;
  &lt;img width=&#039;700px&#039; src=&quot;./public/chartdb.png&quot;&gt;
&lt;/p&gt;

### üéâ ChartDB

ChartDB is a powerful, web-based database diagramming editor.
Instantly visualize your database schema with a single **&quot;Smart Query.&quot;** Customize diagrams, export SQL scripts, and access all features‚Äîno account required. Experience seamless database design here.

**What it does**:

- **Instant Schema Import**
  Run a single query to instantly retrieve your database schema as JSON. This makes it incredibly fast to visualize your database schema, whether for documentation, team discussions, or simply understanding your data better.

- **AI-Powered Export for Easy Migration**
  Our AI-driven export feature allows you to generate the DDL script in the dialect of your choice. Whether you&#039;re migrating from MySQL to PostgreSQL or from SQLite to MariaDB, ChartDB simplifies the process by providing the necessary scripts tailored to your target database.
- **Interactive Editing**
  Fine-tune your database schema using our intuitive editor. Easily make adjustments or annotations to better visualize complex structures.

### Status

ChartDB is currently in Public Beta. Star and watch this repository to get notified of updates.

### Supported Databases

- ‚úÖ PostgreSQL (&lt;img src=&quot;./src/assets/postgresql_logo_2.png&quot; width=&quot;15&quot;/&gt; + &lt;img src=&quot;./src/assets/supabase.png&quot; alt=&quot;Supabase&quot; width=&quot;15&quot;/&gt; + &lt;img src=&quot;./src/assets/timescale.png&quot; alt=&quot;Timescale&quot; width=&quot;15&quot;/&gt; )
- ‚úÖ MySQL
- ‚úÖ SQL Server
- ‚úÖ MariaDB
- ‚úÖ SQLite (&lt;img src=&quot;./src/assets/sqlite_logo_2.png&quot; width=&quot;15&quot;/&gt; + &lt;img src=&quot;./src/assets/cloudflare_d1.png&quot; alt=&quot;Cloudflare D1&quot; width=&quot;15&quot;/&gt; Cloudflare D1)
- ‚úÖ CockroachDB
- ‚úÖ ClickHouse

## Getting Started

Use the [cloud version](https://app.chartdb.io?ref=github_readme_2) or deploy locally:

### How To Use

```bash
npm install
npm run dev
```

### Build

```bash
npm install
npm run build
```

Or like this if you want to have AI capabilities:

```bash
npm install
VITE_OPENAI_API_KEY=&lt;YOUR_OPEN_AI_KEY&gt; npm run build
```

### Run the Docker Container

```bash
docker run -e OPENAI_API_KEY=&lt;YOUR_OPEN_AI_KEY&gt; -p 8080:80 ghcr.io/chartdb/chartdb:latest
```

#### Build and Run locally

```bash
docker build -t chartdb .
docker run -e OPENAI_API_KEY=&lt;YOUR_OPEN_AI_KEY&gt; -p 8080:80 chartdb
```

#### Using Custom Inference Server

```bash
# Build
docker build \
  --build-arg VITE_OPENAI_API_ENDPOINT=&lt;YOUR_ENDPOINT&gt; \
  --build-arg VITE_LLM_MODEL_NAME=&lt;YOUR_MODEL_NAME&gt; \
  -t chartdb .

# Run
docker run \
  -e OPENAI_API_ENDPOINT=&lt;YOUR_ENDPOINT&gt; \
  -e LLM_MODEL_NAME=&lt;YOUR_MODEL_NAME&gt; \
  -p 8080:80 chartdb
```

&gt; **Privacy Note:** ChartDB includes privacy-focused analytics via Fathom Analytics. You can disable this by adding `-e DISABLE_ANALYTICS=true` to the run command or `--build-arg VITE_DISABLE_ANALYTICS=true` when building.

&gt; **Note:** You must configure either Option 1 (OpenAI API key) OR Option 2 (Custom endpoint and model name) for AI capabilities to work. Do not mix the two options.

Open your browser and navigate to `http://localhost:8080`.

Example configuration for a local vLLM server:

```bash
VITE_OPENAI_API_ENDPOINT=http://localhost:8000/v1
VITE_LLM_MODEL_NAME=Qwen/Qwen2.5-32B-Instruct-AWQ
```

## Try it on our website

1. Go to [ChartDB.io](https://chartdb.io?ref=github_readme_2)
2. Click &quot;Go to app&quot;
3. Choose the database that you are using.
4. Take the magic query and run it in your database.
5. Copy and paste the resulting JSON set into ChartDB.
6. Enjoy Viewing &amp; Editing!

## üíö Community &amp; Support

- [Discord](https://discord.gg/QeFwyWSKwC) (For live discussion with the community and the ChartDB team)
- [GitHub Issues](https://github.com/chartdb/chartdb/issues) (For any bugs and errors you encounter using ChartDB)
- [Twitter](https://x.com/intent/follow?screen_name=jonathanfishner) (Get news fast)

## Contributing

We welcome community contributions, big or small, and are here to guide you along
the way. Message us in the [ChartDB Community Discord](https://discord.gg/QeFwyWSKwC).

For more information on how to contribute, please see our
[Contributing Guide](/CONTRIBUTING.md).

This project is released with a [Contributor Code of Conduct](/CODE_OF_CONDUCT.md).
By participating in this project, you agree to follow its terms.

Thank you for helping us make ChartDB better for everyone :heart:.

## License

ChartDB is licensed under the [GNU Affero General Public License v3.0](LICENSE)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Dokploy/dokploy]]></title>
            <link>https://github.com/Dokploy/dokploy</link>
            <guid>https://github.com/Dokploy/dokploy</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:03 GMT</pubDate>
            <description><![CDATA[Open Source Alternative to Vercel, Netlify and Heroku.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Dokploy/dokploy">Dokploy/dokploy</a></h1>
            <p>Open Source Alternative to Vercel, Netlify and Heroku.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 26,101</p>
            <p>Forks: 1,704</p>
            <p>Stars today: 32 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://dokploy.com&quot;&gt;
    &lt;img src=&quot;.github/sponsors/logo.png&quot; alt=&quot;Dokploy - Open Source Alternative to Vercel, Heroku and Netlify.&quot; width=&quot;100%&quot;  /&gt;
  &lt;/a&gt;
  &lt;/br&gt;
  &lt;/br&gt;
  &lt;p&gt;Join us on Discord for help, feedback, and discussions!&lt;/p&gt;
  &lt;a href=&quot;https://discord.gg/2tBnJ3jDJc&quot;&gt;
    &lt;img src=&quot;https://discordapp.com/api/guilds/1234073262418563112/widget.png?style=banner2&quot; alt=&quot;Discord Shield&quot;/&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br /&gt;



&lt;div align=&quot;center&quot; markdown=&quot;1&quot;&gt;
   &lt;sup&gt;Special thanks to:&lt;/sup&gt;
   &lt;br&gt;
   &lt;br&gt;
   &lt;a href=&quot;https://tuple.app/dokploy&quot;&gt;
     &lt;img src=&quot;.github/sponsors/tuple.png&quot; alt=&quot;Tuple&#039;s sponsorship image&quot; width=&quot;400&quot;/&gt;
   &lt;/a&gt;

### [Tuple, the premier screen sharing app for developers](https://tuple.app/dokploy)
[Available for MacOS &amp; Windows](https://tuple.app/dokploy)&lt;br&gt;

&lt;/div&gt;


Dokploy is a free, self-hostable Platform as a Service (PaaS) that simplifies the deployment and management of applications and databases.


## ‚ú® Features

Dokploy includes multiple features to make your life easier.

- **Applications**: Deploy any type of application (Node.js, PHP, Python, Go, Ruby, etc.).
- **Databases**: Create and manage databases with support for MySQL, PostgreSQL, MongoDB, MariaDB, and Redis.
- **Backups**: Automate backups for databases to an external storage destination.
- **Docker Compose**: Native support for Docker Compose to manage complex applications.
- **Multi Node**: Scale applications to multiple nodes using Docker Swarm to manage the cluster.
- **Templates**: Deploy open-source templates (Plausible, Pocketbase, Calcom, etc.) with a single click.
- **Traefik Integration**: Automatically integrates with Traefik for routing and load balancing.
- **Real-time Monitoring**: Monitor CPU, memory, storage, and network usage for every resource.
- **Docker Management**: Easily deploy and manage Docker containers.
- **CLI/API**: Manage your applications and databases using the command line or through the API.
- **Notifications**: Get notified when your deployments succeed or fail (via Slack, Discord, Telegram, Email, etc.).
- **Multi Server**: Deploy and manage your applications remotely to external servers.
- **Self-Hosted**: Self-host Dokploy on your VPS.

## üöÄ Getting Started

To get started, run the following command on a VPS:

Want to skip the installation process? [Try the Dokploy Cloud](https://app.dokploy.com).

```bash
curl -sSL https://dokploy.com/install.sh | sh
```

For detailed documentation, visit [docs.dokploy.com](https://docs.dokploy.com).

## ‚ô•Ô∏è Sponsors

üôè We&#039;re deeply grateful to all our sponsors who make Dokploy possible! Your support helps cover the costs of hosting, testing, and developing new features.

[Dokploy Open Collective](https://opencollective.com/dokploy)

[Github Sponsors](https://github.com/sponsors/Siumauricio)

&lt;!-- Hero Sponsors üéñ --&gt;

&lt;!-- Add Hero Sponsors here --&gt;

### Hero Sponsors üéñ

&lt;div&gt;
  &lt;a href=&quot;https://www.hostinger.com/vps-hosting?ref=dokploy&quot;&gt;&lt;img src=&quot;.github/sponsors/hostinger.jpg&quot; alt=&quot;Hostinger&quot; width=&quot;300&quot;/&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.lxaer.com/?ref=dokploy&quot;&gt;&lt;img src=&quot;.github/sponsors/lxaer.png&quot; alt=&quot;LX Aer&quot; width=&quot;100&quot;/&gt;&lt;/a&gt;
        &lt;a href=&quot;https://www.lambdatest.com/?utm_source=dokploy&amp;utm_medium=sponsor&quot; target=&quot;_blank&quot;&gt;
            &lt;img src=&quot;https://www.lambdatest.com/blue-logo.png&quot;  width=&quot;450&quot; height=&quot;100&quot; /&gt;
        &lt;/a&gt;

&lt;/div&gt;

&lt;!-- Premium Supporters ü•á --&gt;

&lt;!-- Add Premium Supporters here --&gt;

### Premium Supporters ü•á

&lt;div&gt;
  &lt;a href=&quot;https://supafort.com/?ref=dokploy&quot;&gt;&lt;img src=&quot;https://supafort.com/build/q-4Ht4rBZR.webp&quot; alt=&quot;Supafort.com&quot; width=&quot;300&quot;/&gt;&lt;/a&gt;
  &lt;a href=&quot;https://agentdock.ai/?ref=dokploy&quot;&gt;&lt;img src=&quot;.github/sponsors/agentdock.png&quot; alt=&quot;agentdock.ai&quot; width=&quot;100&quot;/&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;!-- Elite Contributors ü•à --&gt;

&lt;!-- Add Elite Contributors here --&gt;

### Elite Contributors ü•à

&lt;div&gt;
  &lt;a href=&quot;https://americancloud.com/?ref=dokploy&quot;&gt;&lt;img src=&quot;.github/sponsors/american-cloud.png&quot; alt=&quot;AmericanCloud&quot; width=&quot;300&quot;/&gt;&lt;/a&gt;
  &lt;a href=&quot;https://tolgee.io/?utm_source=github_dokploy&amp;utm_medium=banner&amp;utm_campaign=dokploy&quot;&gt;&lt;img src=&quot;https://dokploy.com/tolgee-logo.png&quot; alt=&quot;Tolgee&quot; width=&quot;100&quot;/&gt;&lt;/a&gt;
&lt;/div&gt;

### Supporting Members ü•â

&lt;div&gt;

  &lt;a href=&quot;https://cloudblast.io/?ref=dokploy&quot;&gt;&lt;img src=&quot;https://cloudblast.io/img/logo-icon.193cf13e.svg&quot; width=&quot;250px&quot; alt=&quot;Cloudblast.io&quot;/&gt;&lt;/a&gt;

  &lt;a href=&quot;https://synexa.ai/?ref=dokploy&quot;&gt;&lt;img src=&quot;.github/sponsors/synexa.png&quot; width=&quot;65px&quot; alt=&quot;Synexa&quot;/&gt;&lt;/a&gt;
&lt;/div&gt;

### Community Backers ü§ù

#### Organizations:

[Sponsors on Open Collective](https://opencollective.com/dokploy)

#### Individuals:

[![Individual Contributors on Open Collective](https://opencollective.com/dokploy/individuals.svg?width=890)](https://opencollective.com/dokploy)

### Contributors ü§ù

&lt;a href=&quot;https://github.com/dokploy/dokploy/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=dokploy/dokploy&quot; alt=&quot;Contributors&quot; /&gt;
&lt;/a&gt;

## üì∫ Video Tutorial

&lt;a href=&quot;https://youtu.be/mznYKPvhcfw&quot;&gt;
  &lt;img src=&quot;https://dokploy.com/banner.png&quot; alt=&quot;Watch the video&quot; width=&quot;400&quot;/&gt;
&lt;/a&gt;

## ü§ù Contributing

Check out the [Contributing Guide](CONTRIBUTING.md) for more information.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[czlonkowski/n8n-mcp]]></title>
            <link>https://github.com/czlonkowski/n8n-mcp</link>
            <guid>https://github.com/czlonkowski/n8n-mcp</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:02 GMT</pubDate>
            <description><![CDATA[A MCP for Claude Desktop / Claude Code / Windsurf / Cursor to build n8n workflows for you]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/czlonkowski/n8n-mcp">czlonkowski/n8n-mcp</a></h1>
            <p>A MCP for Claude Desktop / Claude Code / Windsurf / Cursor to build n8n workflows for you</p>
            <p>Language: TypeScript</p>
            <p>Stars: 9,246</p>
            <p>Forks: 1,719</p>
            <p>Stars today: 50 stars today</p>
            <h2>README</h2><pre># n8n-MCP

[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![GitHub stars](https://img.shields.io/github/stars/czlonkowski/n8n-mcp?style=social)](https://github.com/czlonkowski/n8n-mcp)
[![npm version](https://img.shields.io/npm/v/n8n-mcp.svg)](https://www.npmjs.com/package/n8n-mcp)
[![codecov](https://codecov.io/gh/czlonkowski/n8n-mcp/graph/badge.svg?token=YOUR_TOKEN)](https://codecov.io/gh/czlonkowski/n8n-mcp)
[![Tests](https://img.shields.io/badge/tests-3336%20passing-brightgreen.svg)](https://github.com/czlonkowski/n8n-mcp/actions)
[![n8n version](https://img.shields.io/badge/n8n-1.117.2-orange.svg)](https://github.com/n8n-io/n8n)
[![Docker](https://img.shields.io/badge/docker-ghcr.io%2Fczlonkowski%2Fn8n--mcp-green.svg)](https://github.com/czlonkowski/n8n-mcp/pkgs/container/n8n-mcp)
[![Deploy on Railway](https://railway.com/button.svg)](https://railway.com/deploy/n8n-mcp?referralCode=n8n-mcp)

A Model Context Protocol (MCP) server that provides AI assistants with comprehensive access to n8n node documentation, properties, and operations. Deploy in minutes to give Claude and other AI assistants deep knowledge about n8n&#039;s 541 workflow automation nodes.

## Overview

n8n-MCP serves as a bridge between n8n&#039;s workflow automation platform and AI models, enabling them to understand and work with n8n nodes effectively. It provides structured access to:

- üìö **541 n8n nodes** from both n8n-nodes-base and @n8n/n8n-nodes-langchain
- üîß **Node properties** - 99% coverage with detailed schemas
- ‚ö° **Node operations** - 63.6% coverage of available actions
- üìÑ **Documentation** - 87% coverage from official n8n docs (including AI nodes)
- ü§ñ **AI tools** - 271 AI-capable nodes detected with full documentation
- üí° **Real-world examples** - 2,646 pre-extracted configurations from popular templates
- üéØ **Template library** - 2,709 workflow templates with 100% metadata coverage


## ‚ö†Ô∏è Important Safety Warning

**NEVER edit your production workflows directly with AI!** Always:
- üîÑ **Make a copy** of your workflow before using AI tools
- üß™ **Test in development** environment first
- üíæ **Export backups** of important workflows
- ‚ö° **Validate changes** before deploying to production

AI results can be unpredictable. Protect your work!

## üöÄ Quick Start

Get n8n-MCP running in 5 minutes:

[![n8n-mcp Video Quickstart Guide](./thumbnail.png)](https://youtu.be/5CccjiLLyaY?si=Z62SBGlw9G34IQnQ&amp;t=343)

### Option 1: npx (Fastest - No Installation!) üöÄ

**Prerequisites:** [Node.js](https://nodejs.org/) installed on your system

```bash
# Run directly with npx (no installation needed!)
npx n8n-mcp
```

Add to Claude Desktop config:

&gt; ‚ö†Ô∏è **Important**: The `MCP_MODE: &quot;stdio&quot;` environment variable is **required** for Claude Desktop. Without it, you will see JSON parsing errors like `&quot;Unexpected token...&quot;` in the UI. This variable ensures that only JSON-RPC messages are sent to stdout, preventing debug logs from interfering with the protocol.

**Basic configuration (documentation tools only):**
```json
{
  &quot;mcpServers&quot;: {
    &quot;n8n-mcp&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;n8n-mcp&quot;],
      &quot;env&quot;: {
        &quot;MCP_MODE&quot;: &quot;stdio&quot;,
        &quot;LOG_LEVEL&quot;: &quot;error&quot;,
        &quot;DISABLE_CONSOLE_OUTPUT&quot;: &quot;true&quot;
      }
    }
  }
}
```

**Full configuration (with n8n management tools):**
```json
{
  &quot;mcpServers&quot;: {
    &quot;n8n-mcp&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;n8n-mcp&quot;],
      &quot;env&quot;: {
        &quot;MCP_MODE&quot;: &quot;stdio&quot;,
        &quot;LOG_LEVEL&quot;: &quot;error&quot;,
        &quot;DISABLE_CONSOLE_OUTPUT&quot;: &quot;true&quot;,
        &quot;N8N_API_URL&quot;: &quot;https://your-n8n-instance.com&quot;,
        &quot;N8N_API_KEY&quot;: &quot;your-api-key&quot;
      }
    }
  }
}
```

&gt; **Note**: npx will download and run the latest version automatically. The package includes a pre-built database with all n8n node information.

**Configuration file locations:**
- **macOS**: `~/Library/Application Support/Claude/claude_desktop_config.json`
- **Windows**: `%APPDATA%\Claude\claude_desktop_config.json`
- **Linux**: `~/.config/Claude/claude_desktop_config.json`

**Restart Claude Desktop after updating configuration** - That&#039;s it! üéâ

### Option 2: Docker (Easy &amp; Isolated) üê≥

**Prerequisites:** Docker installed on your system

&lt;details&gt;
&lt;summary&gt;&lt;strong&gt;üì¶ Install Docker&lt;/strong&gt; (click to expand)&lt;/summary&gt;

**macOS:**
```bash
# Using Homebrew
brew install --cask docker

# Or download from https://www.docker.com/products/docker-desktop/
```

**Linux (Ubuntu/Debian):**
```bash
# Update package index
sudo apt-get update

# Install Docker
sudo apt-get install docker.io

# Start Docker service
sudo systemctl start docker
sudo systemctl enable docker

# Add your user to docker group (optional, to run without sudo)
sudo usermod -aG docker $USER
# Log out and back in for this to take effect
```

**Windows:**
```bash
# Option 1: Using winget (Windows Package Manager)
winget install Docker.DockerDesktop

# Option 2: Using Chocolatey
choco install docker-desktop

# Option 3: Download installer from https://www.docker.com/products/docker-desktop/
```

**Verify installation:**
```bash
docker --version
```
&lt;/details&gt;

```bash
# Pull the Docker image (~280MB, no n8n dependencies!)
docker pull ghcr.io/czlonkowski/n8n-mcp:latest
```

&gt; **‚ö° Ultra-optimized:** Our Docker image is 82% smaller than typical n8n images because it contains NO n8n dependencies - just the runtime MCP server with a pre-built database!

Add to Claude Desktop config:

**Basic configuration (documentation tools only):**
```json
{
  &quot;mcpServers&quot;: {
    &quot;n8n-mcp&quot;: {
      &quot;command&quot;: &quot;docker&quot;,
      &quot;args&quot;: [
        &quot;run&quot;,
        &quot;-i&quot;,
        &quot;--rm&quot;,
        &quot;--init&quot;,
        &quot;-e&quot;, &quot;MCP_MODE=stdio&quot;,
        &quot;-e&quot;, &quot;LOG_LEVEL=error&quot;,
        &quot;-e&quot;, &quot;DISABLE_CONSOLE_OUTPUT=true&quot;,
        &quot;ghcr.io/czlonkowski/n8n-mcp:latest&quot;
      ]
    }
  }
}
```

**Full configuration (with n8n management tools):**
```json
{
  &quot;mcpServers&quot;: {
    &quot;n8n-mcp&quot;: {
      &quot;command&quot;: &quot;docker&quot;,
      &quot;args&quot;: [
        &quot;run&quot;,
        &quot;-i&quot;,
        &quot;--rm&quot;,
        &quot;--init&quot;,
        &quot;-e&quot;, &quot;MCP_MODE=stdio&quot;,
        &quot;-e&quot;, &quot;LOG_LEVEL=error&quot;,
        &quot;-e&quot;, &quot;DISABLE_CONSOLE_OUTPUT=true&quot;,
        &quot;-e&quot;, &quot;N8N_API_URL=https://your-n8n-instance.com&quot;,
        &quot;-e&quot;, &quot;N8N_API_KEY=your-api-key&quot;,
        &quot;ghcr.io/czlonkowski/n8n-mcp:latest&quot;
      ]
    }
  }
}
```

&gt;üí° Tip: If you&#039;re running n8n locally on the same machine (e.g., via Docker), use http://host.docker.internal:5678 as the N8N_API_URL.

&gt; **Note**: The n8n API credentials are optional. Without them, you&#039;ll have access to all documentation and validation tools. With them, you&#039;ll additionally get workflow management capabilities (create, update, execute workflows).

### üè† Local n8n Instance Configuration

If you&#039;re running n8n locally (e.g., `http://localhost:5678` or Docker), you need to allow localhost webhooks:

```json
{
  &quot;mcpServers&quot;: {
    &quot;n8n-mcp&quot;: {
      &quot;command&quot;: &quot;docker&quot;,
      &quot;args&quot;: [
        &quot;run&quot;, &quot;-i&quot;, &quot;--rm&quot;, &quot;--init&quot;,
        &quot;-e&quot;, &quot;MCP_MODE=stdio&quot;,
        &quot;-e&quot;, &quot;LOG_LEVEL=error&quot;,
        &quot;-e&quot;, &quot;DISABLE_CONSOLE_OUTPUT=true&quot;,
        &quot;-e&quot;, &quot;N8N_API_URL=http://host.docker.internal:5678&quot;,
        &quot;-e&quot;, &quot;N8N_API_KEY=your-api-key&quot;,
        &quot;-e&quot;, &quot;WEBHOOK_SECURITY_MODE=moderate&quot;,
        &quot;ghcr.io/czlonkowski/n8n-mcp:latest&quot;
      ]
    }
  }
}
```

&gt; ‚ö†Ô∏è **Important:** Set `WEBHOOK_SECURITY_MODE=moderate` to allow webhooks to your local n8n instance. This is safe for local development while still blocking private networks and cloud metadata.

**Important:** The `-i` flag is required for MCP stdio communication.

&gt; üîß If you encounter any issues with Docker, check our [Docker Troubleshooting Guide](./docs/DOCKER_TROUBLESHOOTING.md).

**Configuration file locations:**
- **macOS**: `~/Library/Application Support/Claude/claude_desktop_config.json`
- **Windows**: `%APPDATA%\Claude\claude_desktop_config.json`
- **Linux**: `~/.config/Claude/claude_desktop_config.json`

**Restart Claude Desktop after updating configuration** - That&#039;s it! üéâ

## üîê Privacy &amp; Telemetry

n8n-mcp collects anonymous usage statistics to improve the tool. [View our privacy policy](./PRIVACY.md).

### Opting Out

**For npx users:**
```bash
npx n8n-mcp telemetry disable
```

**For Docker users:**
Add the following environment variable to your Docker configuration:
```json
&quot;-e&quot;, &quot;N8N_MCP_TELEMETRY_DISABLED=true&quot;
```

Example in Claude Desktop config:
```json
{
  &quot;mcpServers&quot;: {
    &quot;n8n-mcp&quot;: {
      &quot;command&quot;: &quot;docker&quot;,
      &quot;args&quot;: [
        &quot;run&quot;,
        &quot;-i&quot;,
        &quot;--rm&quot;,
        &quot;--init&quot;,
        &quot;-e&quot;, &quot;MCP_MODE=stdio&quot;,
        &quot;-e&quot;, &quot;LOG_LEVEL=error&quot;,
        &quot;-e&quot;, &quot;N8N_MCP_TELEMETRY_DISABLED=true&quot;,
        &quot;ghcr.io/czlonkowski/n8n-mcp:latest&quot;
      ]
    }
  }
}
```

**For docker-compose users:**
Set in your environment file or docker-compose.yml:
```yaml
environment:
  N8N_MCP_TELEMETRY_DISABLED: &quot;true&quot;
```

## ‚öôÔ∏è Database &amp; Memory Configuration

### Database Adapters

n8n-mcp uses SQLite for storing node documentation. Two adapters are available:

1. **better-sqlite3** (Default in Docker)
   - Native C++ bindings for best performance
   - Direct disk writes (no memory overhead)
   - **Now enabled by default** in Docker images (v2.20.2+)
   - Memory usage: ~100-120 MB stable

2. **sql.js** (Fallback)
   - Pure JavaScript implementation
   - In-memory database with periodic saves
   - Used when better-sqlite3 compilation fails
   - Memory usage: ~150-200 MB stable

### Memory Optimization (sql.js)

If using sql.js fallback, you can configure the save interval to balance between data safety and memory efficiency:

**Environment Variable:**
```bash
SQLJS_SAVE_INTERVAL_MS=5000  # Default: 5000ms (5 seconds)
```

**Usage:**
- Controls how long to wait after database changes before saving to disk
- Lower values = more frequent saves = higher memory churn
- Higher values = less frequent saves = lower memory usage
- Minimum: 100ms
- Recommended: 5000-10000ms for production

**Docker Configuration:**
```json
{
  &quot;mcpServers&quot;: {
    &quot;n8n-mcp&quot;: {
      &quot;command&quot;: &quot;docker&quot;,
      &quot;args&quot;: [
        &quot;run&quot;,
        &quot;-i&quot;,
        &quot;--rm&quot;,
        &quot;--init&quot;,
        &quot;-e&quot;, &quot;SQLJS_SAVE_INTERVAL_MS=10000&quot;,
        &quot;ghcr.io/czlonkowski/n8n-mcp:latest&quot;
      ]
    }
  }
}
```

**docker-compose:**
```yaml
environment:
  SQLJS_SAVE_INTERVAL_MS: &quot;10000&quot;
```

### Memory Leak Fix (v2.20.2)

**Issue #330** identified a critical memory leak in long-running Docker/Kubernetes deployments:
- **Before:** 100 MB ‚Üí 2.2 GB over 72 hours (OOM kills)
- **After:** Stable at 100-200 MB indefinitely

**Fixes Applied:**
- ‚úÖ Docker images now use better-sqlite3 by default (eliminates leak entirely)
- ‚úÖ sql.js fallback optimized (98% reduction in save frequency)
- ‚úÖ Removed unnecessary memory allocations (50% reduction per save)
- ‚úÖ Configurable save interval via `SQLJS_SAVE_INTERVAL_MS`

For Kubernetes deployments with memory limits:
```yaml
resources:
  requests:
    memory: 256Mi
  limits:
    memory: 512Mi
```

## üíñ Support This Project

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/sponsors/czlonkowski&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/Sponsor-‚ù§Ô∏è-db61a2?style=for-the-badge&amp;logo=github-sponsors&quot; alt=&quot;Sponsor n8n-mcp&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

**n8n-mcp** started as a personal tool but now helps tens of thousands of developers automate their workflows efficiently. Maintaining and developing this project competes with my paid work.

Your sponsorship helps me:
- üöÄ Dedicate focused time to new features
- üêõ Respond quickly to issues
- üìö Keep documentation up-to-date
- üîÑ Ensure compatibility with latest n8n releases

Every sponsorship directly translates to hours invested in making n8n-mcp better for everyone. **[Become a sponsor ‚Üí](https://github.com/sponsors/czlonkowski)**

---

### Option 3: Local Installation (For Development)

**Prerequisites:** [Node.js](https://nodejs.org/) installed on your system

```bash
# 1. Clone and setup
git clone https://github.com/czlonkowski/n8n-mcp.git
cd n8n-mcp
npm install
npm run build
npm run rebuild

# 2. Test it works
npm start
```

Add to Claude Desktop config:

**Basic configuration (documentation tools only):**
```json
{
  &quot;mcpServers&quot;: {
    &quot;n8n-mcp&quot;: {
      &quot;command&quot;: &quot;node&quot;,
      &quot;args&quot;: [&quot;/absolute/path/to/n8n-mcp/dist/mcp/index.js&quot;],
      &quot;env&quot;: {
        &quot;MCP_MODE&quot;: &quot;stdio&quot;,
        &quot;LOG_LEVEL&quot;: &quot;error&quot;,
        &quot;DISABLE_CONSOLE_OUTPUT&quot;: &quot;true&quot;
      }
    }
  }
}
```

**Full configuration (with n8n management tools):**
```json
{
  &quot;mcpServers&quot;: {
    &quot;n8n-mcp&quot;: {
      &quot;command&quot;: &quot;node&quot;,
      &quot;args&quot;: [&quot;/absolute/path/to/n8n-mcp/dist/mcp/index.js&quot;],
      &quot;env&quot;: {
        &quot;MCP_MODE&quot;: &quot;stdio&quot;,
        &quot;LOG_LEVEL&quot;: &quot;error&quot;,
        &quot;DISABLE_CONSOLE_OUTPUT&quot;: &quot;true&quot;,
        &quot;N8N_API_URL&quot;: &quot;https://your-n8n-instance.com&quot;,
        &quot;N8N_API_KEY&quot;: &quot;your-api-key&quot;
      }
    }
  }
}
```

&gt; **Note**: The n8n API credentials can be configured either in a `.env` file (create from `.env.example`) or directly in the Claude config as shown above.

&gt; üí° Tip: If you‚Äôre running n8n locally on the same machine (e.g., via Docker), use http://host.docker.internal:5678 as the N8N_API_URL.

### Option 4: Railway Cloud Deployment (One-Click Deploy) ‚òÅÔ∏è

**Prerequisites:** Railway account (free tier available)

Deploy n8n-MCP to Railway&#039;s cloud platform with zero configuration:

[![Deploy on Railway](https://railway.com/button.svg)](https://railway.com/deploy/n8n-mcp?referralCode=n8n-mcp)

**Benefits:**
- ‚òÅÔ∏è **Instant cloud hosting** - No server setup required
- üîí **Secure by default** - HTTPS included, auth token warnings
- üåê **Global access** - Connect from any Claude Desktop
- ‚ö° **Auto-scaling** - Railway handles the infrastructure
- üìä **Built-in monitoring** - Logs and metrics included

**Quick Setup:**
1. Click the &quot;Deploy on Railway&quot; button above
2. Sign in to Railway (or create a free account)
3. Configure your deployment (project name, region)
4. Click &quot;Deploy&quot; and wait ~2-3 minutes
5. Copy your deployment URL and auth token
6. Add to Claude Desktop config using the HTTPS URL

&gt; üìö **For detailed setup instructions, troubleshooting, and configuration examples, see our [Railway Deployment Guide](./docs/RAILWAY_DEPLOYMENT.md)**

**Configuration file locations:**
- **macOS**: `~/Library/Application Support/Claude/claude_desktop_config.json`
- **Windows**: `%APPDATA%\Claude\claude_desktop_config.json`
- **Linux**: `~/.config/Claude/claude_desktop_config.json`

**Restart Claude Desktop after updating configuration** - That&#039;s it! üéâ

## üîß n8n Integration

Want to use n8n-MCP with your n8n instance? Check out our comprehensive [n8n Deployment Guide](./docs/N8N_DEPLOYMENT.md) for:
- Local testing with the MCP Client Tool node
- Production deployment with Docker Compose
- Cloud deployment on Hetzner, AWS, and other providers
- Troubleshooting and security best practices

## üíª Connect your IDE

n8n-MCP works with multiple AI-powered IDEs and tools. Choose your preferred development environment:

### [Claude Code](./docs/CLAUDE_CODE_SETUP.md)
Quick setup for Claude Code CLI - just type &quot;add this mcp server&quot; and paste the config.

### [Visual Studio Code](./docs/VS_CODE_PROJECT_SETUP.md)
Full setup guide for VS Code with GitHub Copilot integration and MCP support.

### [Cursor](./docs/CURSOR_SETUP.md)
Step-by-step tutorial for connecting n8n-MCP to Cursor IDE with custom rules.

### [Windsurf](./docs/WINDSURF_SETUP.md)
Complete guide for integrating n8n-MCP with Windsurf using project rules.

### [Codex](./docs/CODEX_SETUP.md)
Complete guide for integrating n8n-MCP with Codex.

## üéì Add Claude Skills (Optional)

Supercharge your n8n workflow building with specialized skills that teach AI how to build production-ready workflows!

[![n8n-mcp Skills Setup](./docs/img/skills.png)](https://www.youtube.com/watch?v=e6VvRqmUY2Y)

Learn more: [n8n-skills repository](https://github.com/czlonkowski/n8n-skills)

## ü§ñ Claude Project Setup

For the best results when using n8n-MCP with Claude Projects, use these enhanced system instructions:

````markdown
You are an expert in n8n automation software using n8n-MCP tools. Your role is to design, build, and validate n8n workflows with maximum accuracy and efficiency.

## Core Principles

### 1. Silent Execution
CRITICAL: Execute tools without commentary. Only respond AFTER all tools complete.

‚ùå BAD: &quot;Let me search for Slack nodes... Great! Now let me get details...&quot;
‚úÖ GOOD: [Execute search_nodes and get_node_essentials in parallel, then respond]

### 2. Parallel Execution
When operations are independent, execute them in parallel for maximum performance.

‚úÖ GOOD: Call search_nodes, list_nodes, and search_templates simultaneously
‚ùå BAD: Sequential tool calls (await each one before the next)

### 3. Templates First
ALWAYS check templates before building from scratch (2,709 available).

### 4. Multi-Level Validation
Use validate_node_minimal ‚Üí validate_node_operation ‚Üí validate_workflow pattern.

### 5. Never Trust Defaults
‚ö†Ô∏è CRITICAL: Default parameter values are the #1 source of runtime failures.
ALWAYS explicitly configure ALL parameters that control node behavior.

## Workflow Process

1. **Start**: Call `tools_documentation()` for best practices

2. **Template Discovery Phase** (FIRST - parallel when searching multiple)
   - `search_templates_by_metadata({complexity: &quot;simple&quot;})` - Smart filtering
   - `get_templates_for_task(&#039;webhook_processing&#039;)` - Curated by task
   - `search_templates(&#039;slack notification&#039;)` - Text search
   - `list_node_templates([&#039;n8n-nodes-base.slack&#039;])` - By node type

   **Filtering strategies**:
   - Beginners: `complexity: &quot;simple&quot;` + `maxSetupMinutes: 30`
   - By role: `targetAudience: &quot;marketers&quot;` | `&quot;developers&quot;` | `&quot;analysts&quot;`
   - By time: `maxSetupMinutes: 15` for quick wins
   - By service: `requiredService: &quot;openai&quot;` for compatibility

3. **Node Discovery** (if no suitable template - parallel execution)
   - Think deeply about requirements. Ask clarifying questions if unclear.
   - `search_nodes({query: &#039;keyword&#039;, includeExamples: true})` - Parallel for multiple nodes
   - `list_nodes({category: &#039;trigger&#039;})` - Browse by category
   - `list_ai_tools()` - AI-capable nodes

4. **Configuration Phase** (parallel for multiple nodes)
   - `get_node_essentials(nodeType, {includeExamples: true})` - 10-20 key properties
   - `search_node_properties(nodeType, &#039;auth&#039;)` - Find specific properties
   - `get_node_documentation(nodeType)` - Human-readable docs
   - Show workflow architecture to user for approval before proceeding

5. **Validation Phase** (parallel for multiple nodes)
   - `validate_node_minimal(nodeType, config)` - Quick required fields check
   - `validate_node_operation(nodeType, config, &#039;runtime&#039;)` - Full validation with fixes
   - Fix ALL errors before proceeding

6. **Building Phase**
   - If using template: `get_template(templateId, {mode: &quot;full&quot;})`
   - **MANDATORY ATTRIBUTION**: &quot;Based on template by **[author.name]** (@[username]). View at: [url]&quot;
   - Build from validated configurations
   - ‚ö†Ô∏è EXPLICITLY set ALL parameters - never rely on defaults
   - Connect nodes with proper structure
   - Add error handling
   - Use n8n expressions: $json, $node[&quot;NodeName&quot;].json
   - Build in artifact (unless deploying to n8n instance)

7. **Workflow Validation** (before deployment)
   - `validate_workflow(workflow)` - Complete validation
   - `validate_workflow_connections(workflow)` - Structure check
   - `validate_workflow_expressions(workflow)` - Expression validation
   - Fix ALL issues before deployment

8. **Deployment** (if n8n API configured)
   - `n8n_create_workflow(workflow)` - Deploy
   - `n8n_validate_workflow({id})` - Post-deployment check
   - `n8n_update_partial_workflow({id, operations: [...]})` - Batch updates
   - `n8n_trigger_webhook_workflow()` - Test webhooks

## Critical Warnings

### ‚ö†Ô∏è Never Trust Defaults
Default values cause runtime failures. Example:
```json
// ‚ùå FAILS at runtime
{resource: &quot;message&quot;, op

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[outline/outline]]></title>
            <link>https://github.com/outline/outline</link>
            <guid>https://github.com/outline/outline</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:01 GMT</pubDate>
            <description><![CDATA[The fastest knowledge base for growing teams. Beautiful, realtime collaborative, feature packed, and markdown compatible.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/outline/outline">outline/outline</a></h1>
            <p>The fastest knowledge base for growing teams. Beautiful, realtime collaborative, feature packed, and markdown compatible.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 35,627</p>
            <p>Forks: 2,924</p>
            <p>Stars today: 23 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://user-images.githubusercontent.com/31465/34380645-bd67f474-eb0b-11e7-8d03-0151c1730654.png&quot; height=&quot;29&quot; /&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;i&gt;A fast, collaborative, knowledge base for your team built using React and Node.js.&lt;br/&gt;Try out Outline using our hosted version at &lt;a href=&quot;https://www.getoutline.com&quot;&gt;www.getoutline.com&lt;/a&gt;.&lt;/i&gt;
  &lt;br/&gt;
  &lt;img width=&quot;1640&quot; alt=&quot;screenshot&quot; src=&quot;https://user-images.githubusercontent.com/380914/110356468-26374600-7fef-11eb-9f6a-f2cc2c8c6590.png&quot;&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;http://www.typescriptlang.org&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%3C%2F%3E-TypeScript-%230074c1.svg&quot; alt=&quot;TypeScript&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/prettier/prettier&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat&quot; alt=&quot;Prettier&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/styled-components/styled-components&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/style-%F0%9F%92%85%20styled--components-orange.svg&quot; alt=&quot;Styled Components&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://translate.getoutline.com/project/outline&quot; alt=&quot;Localized&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/outline/localized.svg&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

This is the source code that runs [**Outline**](https://www.getoutline.com) and all the associated services. If you want to use Outline then you don&#039;t need to run this code, A hosted version of the app is offered at [getoutline.com](https://www.getoutline.com). You can also find documentation on using Outline in [our guide](https://docs.getoutline.com/s/guide).

If you&#039;d like to run your own copy of Outline or contribute to development then this is the place for you.

# Installation

Please see the [documentation](https://docs.getoutline.com/s/hosting/) for running your own copy of Outline in a production configuration.

If you have questions or improvements for the docs please create a thread in [GitHub discussions](https://github.com/outline/outline/discussions).

# Development

There is a short guide for [setting up a development environment](https://docs.getoutline.com/s/hosting/doc/local-development-5hEhFRXow7) if you wish to contribute changes, fixes, and improvements to Outline.

## Contributing

Outline is built and maintained by a small team ‚Äì we&#039;d love your help to fix bugs and add features!

Before submitting a pull request _please_ discuss with the core team by creating or commenting in an issue on [GitHub](https://www.github.com/outline/outline/issues) ‚Äì we&#039;d also love to hear from you in the [discussions](https://www.github.com/outline/outline/discussions). This way we can ensure that an approach is agreed on before code is written. This will result in a much higher likelihood of your code being accepted.

If you‚Äôre looking for ways to get started, here&#039;s a list of ways to help us improve Outline:

- [Translation](docs/TRANSLATION.md) into other languages
- Issues with [`good first issue`](https://github.com/outline/outline/labels/good%20first%20issue) label
- Performance improvements, both on server and frontend
- Developer happiness and documentation
- Bugs and other issues listed on GitHub

## Architecture

If you&#039;re interested in contributing or learning more about the Outline codebase
please refer to the [architecture document](docs/ARCHITECTURE.md) first for a high level overview of how the application is put together.

## Debugging

In development Outline outputs simple logging to the console, prefixed by categories. In production it outputs JSON logs, these can be easily parsed by your preferred log ingestion pipeline.

HTTP logging is disabled by default, but can be enabled by setting the `DEBUG=http` environment variable. logging
can be enabled for all categories by setting `DEBUG=*` or for specific categories such as `DEBUG=database` and `LOG_LEVEL=debug`, or `LOG_LEVEL=silly` for very verbose logging.

## Tests

We aim to have sufficient test coverage for critical parts of the application and aren&#039;t aiming for 100% unit test coverage. All API endpoints and anything authentication related should be thoroughly tested.

To add new tests, write your tests with [Jest](https://facebook.github.io/jest/) and add a file with `.test.ts` extension next to the tested code.

```shell
# To run all tests
make test

# To run backend tests in watch mode
make watch
```

Once the test database is created with `make test` you may individually run
frontend and backend tests directly with jest:

```shell
# To run backend tests
yarn test:server

# To run a specific backend test in watch mode
yarn test path/to/file.test.ts --watch

# To run frontend tests
yarn test:app
```

## Migrations

Sequelize is used to create and run migrations, for example:

```shell
yarn db:create-migration --name my-migration
yarn db:migrate
yarn db:rollback
```

Or, to run migrations on test database:

```shell
yarn db:migrate --env test
```

# Activity

![Alt](https://repobeats.axiom.co/api/embed/ff2e4e6918afff1acf9deb72d1ba6b071d586178.svg &quot;Repobeats analytics image&quot;)

# License

Outline is [BSL 1.1 licensed](LICENSE).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Canner/WrenAI]]></title>
            <link>https://github.com/Canner/WrenAI</link>
            <guid>https://github.com/Canner/WrenAI</guid>
            <pubDate>Wed, 29 Oct 2025 00:05:00 GMT</pubDate>
            <description><![CDATA[‚ö°Ô∏è GenBI (Generative BI) queries any database in natural language, generates accurate SQL (Text-to-SQL), charts (Text-to-Chart), and AI-powered business intelligence in seconds.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Canner/WrenAI">Canner/WrenAI</a></h1>
            <p>‚ö°Ô∏è GenBI (Generative BI) queries any database in natural language, generates accurate SQL (Text-to-SQL), charts (Text-to-Chart), and AI-powered business intelligence in seconds.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 12,566</p>
            <p>Forks: 1,304</p>
            <p>Stars today: 23 stars today</p>
            <h2>README</h2><pre>
&lt;p align=&quot;center&quot; id=&quot;top&quot;&gt;
  &lt;a href=&quot;https://getwren.ai/?utm_source=github&amp;utm_medium=title&amp;utm_campaign=readme&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;./misc/wrenai_logo.png&quot;&gt;
      &lt;img src=&quot;./misc/wrenai_logo_white.png&quot; width=&quot;300px&quot;&gt;
    &lt;/picture&gt;
    &lt;h1 align=&quot;center&quot;&gt;Wren AI - Open-Source GenBI Agent&lt;/h1&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a aria-label=&quot;Follow us on X&quot; href=&quot;https://x.com/getwrenai&quot;&gt;
    &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/badge/-@getwrenai-blue?style=for-the-badge&amp;logo=x&amp;logoColor=white&amp;labelColor=gray&amp;logoWidth=20&quot;&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;Releases&quot; href=&quot;https://github.com/canner/WrenAI/releases&quot;&gt;
    &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/github/v/release/canner/WrenAI?logo=github&amp;label=GitHub%20Release&amp;color=blue&amp;style=for-the-badge&quot;&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;License&quot; href=&quot;https://github.com/Canner/WrenAI/blob/main/LICENSE&quot;&gt;
    &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/github/license/canner/WrenAI?color=blue&amp;style=for-the-badge&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://docs.getwren.ai&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/docs-online-brightgreen?style=for-the-badge&quot; alt=&quot;Docs&quot;&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;Join the community on GitHub&quot; href=&quot;https://discord.gg/5DvshJqG8Z&quot;&gt;
    &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/badge/-JOIN%20THE%20COMMUNITY-blue?style=for-the-badge&amp;logo=discord&amp;logoColor=white&amp;labelColor=grey&amp;logoWidth=20&quot;&gt;
  &lt;/a&gt;
  &lt;a aria-label=&quot;Canner&quot; href=&quot;https://cannerdata.com/?utm_source=github&amp;utm_medium=badge&amp;utm_campaign=readme&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%A7%A1-Made%20by%20Canner-blue?style=for-the-badge&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://trendshift.io/repositories/9263&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/9263&quot; alt=&quot;Canner%2FWrenAI | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;

&gt; ‚ö° GenBI (Generative BI) queries any database in natural language, generates accurate SQL (Text-to-SQL), charts (Text-to-Chart), and AI-powered business intelligence in seconds. Ô∏è

&lt;p align=&quot;center&quot;&gt;
  &lt;img width=&quot;1920&quot; height=&quot;1080&quot; alt=&quot;1&quot; src=&quot;https://github.com/user-attachments/assets/bba9d37a-33e3-49ab-b7cb-32fd6dddc8d1&quot; /&gt;
&lt;/p&gt;
 
## üòç Demos

https://github.com/user-attachments/assets/f9c1cb34-5a95-4580-8890-ec9644da4160

[Watch GenBI Demo](https://github.com/user-attachments/assets/90ad1d35-bb1e-490b-9676-b29863ff090b)

## ü§ñ Features

|                    | What you get | Why it matters |
|--------------------|--------------|----------------|
| **Talk to Your Data** | Ask in any language ‚Üí precise SQL &amp; answers | Slash the SQL learning curveÔªø |
| **GenBI Insights** | AI-written summaries, charts &amp; reports | Decision-ready context in one clickÔªø |
| **Semantic Layer** | MDL models encode schema, metrics, joins | Keeps LLM outputs accurate &amp; governedÔªø |
| **Embed via API**  | Generate queries &amp; charts inside your apps ([API Docs](https://wrenai.readme.io/reference/cloud-getting-started)) | Build custom agents, SaaS features, chatbotsÔªø ([Streamlit Live Demo](https://huggingface.co/spaces/getWrenAI/wrenai-cloud-api-demo)) |

ü§© [Learn more about GenBI](https://getwren.ai/genbi?utm_source=github&amp;utm_medium=content&amp;utm_campaign=readme)

## üöÄ Getting Started

Using Wren AI is super simple, you can set it up within 3 minutes, and start to interact with your data!

&lt;p align=&quot;center&quot;&gt;
  &lt;img width=&quot;1920&quot; height=&quot;1080&quot; alt=&quot;2&quot; src=&quot;https://github.com/user-attachments/assets/6555f539-9ef2-485d-9135-0071741fda96&quot; /&gt;
&lt;/p&gt;

- Visit our [Install in your local environment](http://docs.getwren.ai/oss/installation?utm_source=github&amp;utm_medium=content&amp;utm_campaign=readme).
- Visit the [Usage Guides](https://docs.getwren.ai/oss/guide/connect/overview?utm_source=github&amp;utm_medium=content&amp;utm_campaign=readme) to learn more about how to use Wren AI.
- Or just start with [Wren AI Cloud](https://getwren.ai/?utm_source=github&amp;utm_medium=content&amp;utm_campaign=readme) our Managed Cloud Service. ([OSS vs. Commercial Plans](https://docs.getwren.ai/oss/overview/cloud_vs_self_host)).

## üèóÔ∏è Architecture

&lt;p align=&quot;center&quot;&gt;
  &lt;img width=&quot;1011&quot; height=&quot;682&quot; alt=&quot;wrenai-architecture&quot; src=&quot;https://github.com/user-attachments/assets/e99b999f-9912-4fa7-921a-9c86b6b83354&quot; /&gt;
&lt;/p&gt;

üëâ [Learn more about our Design](https://getwren.ai/post/how-we-design-our-semantic-engine-for-llms-the-backbone-of-the-semantic-layer-for-llm-architecture?utm_source=github&amp;utm_medium=content&amp;utm_campaign=readme)



## üîå Data Sources

If your data source is not listed here, vote for it in our [GitHub discussion thread](https://github.com/Canner/WrenAI/discussions/327). It will be a valuable input for us to decide on the next supported data sources.
- Athena (Trino)
- Redshift
- BigQuery
- DuckDB
- PostgreSQL
- MySQL
- Microsoft SQL Server
- ClickHouse
- Oracle
- Trino
- Snowflake

## ü§ñ LLM Models

Wren AI supports integration with various Large Language Models (LLMs), including but not limited to:
- OpenAI Models
- Azure OpenAI Models
- DeepSeek Models
- Google AI Studio ‚Äì Gemini Models
- Vertex AI Models (Gemini + Anthropic)
- Bedrock Models
- Anthropic API Models
- Groq Models
- Ollama Models
- Databricks Models

Check [configuration examples here](https://github.com/Canner/WrenAI/tree/main/wren-ai-service/docs/config_examples)!

&gt; [!CAUTION]
&gt; The performance of Wren AI depends significantly on the capabilities of the LLM you choose. We strongly recommend using the most powerful model available for optimal results. Using less capable models may lead to reduced performance, slower response times, or inaccurate outputs.

## üìö Documentation

Visit [Wren AI documentation](https://docs.getwren.ai/oss/overview/introduction?utm_source=github&amp;utm_medium=content&amp;utm_campaign=readme) to view the full documentation.

## üì™ Keep Posted?

[Subscribe our blog](https://www.getwren.ai/blog/?utm_source=github&amp;utm_medium=content&amp;utm_campaign=readme) and [Follow our LinkedIn](https://www.linkedin.com/company/wrenai)

## üõ†Ô∏è Contribution

1.	Star ‚≠ê the repo to show support (it really helps).
2.	Open an issue for bugs, ideas, or discussions.
3.	Read [Contribution Guidelines](https://github.com/Canner/WrenAI/blob/main/CONTRIBUTING.md) for setup &amp; PR guidelines.

## ‚≠êÔ∏è Community

- Join 1.3k+ developers in our [Discord](https://discord.gg/5DvshJqG8Z) for real-time help and roadmap previews.
- If there are any issues, please visit [GitHub Issues](https://github.com/Canner/WrenAI/issues).
- Explore our [public roadmap](https://wrenai.notion.site/) to stay updated on upcoming features and improvements!

Please note that our [Code of Conduct](./CODE_OF_CONDUCT.md) applies to all Wren AI community channels. Users are **highly encouraged** to read and adhere to them to avoid repercussions.

## üéâ Our Contributors
&lt;a href=&quot;https://github.com/canner/wrenAI/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=Canner/WrenAI&quot; /&gt;
&lt;/a&gt;

&lt;p align=&quot;right&quot;&gt;
  &lt;a href=&quot;#top&quot;&gt;‚¨ÜÔ∏è Back to Top&lt;/a&gt;
&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>