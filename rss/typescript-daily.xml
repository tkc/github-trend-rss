<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Mon, 07 Jul 2025 00:05:21 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[iib0011/omni-tools]]></title>
            <link>https://github.com/iib0011/omni-tools</link>
            <guid>https://github.com/iib0011/omni-tools</guid>
            <pubDate>Mon, 07 Jul 2025 00:05:21 GMT</pubDate>
            <description><![CDATA[Self-hosted collection of powerful web-based tools for everyday tasks. No ads, no tracking, just fast, accessible utilities right from your browser!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/iib0011/omni-tools">iib0011/omni-tools</a></h1>
            <p>Self-hosted collection of powerful web-based tools for everyday tasks. No ads, no tracking, just fast, accessible utilities right from your browser!</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,472</p>
            <p>Forks: 218</p>
            <p>Stars today: 41 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
        &lt;img src=&quot;src/assets/logo.png&quot; width=&quot;300&quot; /&gt;
        &lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;https://trendshift.io/repositories/13055&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/13055&quot; alt=&quot;iib0011%2Fomni-tools | Trendshift&quot; style=&quot;width: 200px;&quot; width=&quot;200&quot;/&gt;&lt;/a&gt;
   &lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/iib0011/omni-tools/releases&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/badge/version-0.4.0-blue?style=for-the-badge&quot; /&gt;
        &lt;/a&gt;
        &lt;a href=&quot;https://hub.docker.com/r/iib0011/omni-tools&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/docker/pulls/iib0011/omni-tools?style=for-the-badge&amp;logo=docker&quot; /&gt;
        &lt;/a&gt;
        &lt;a href=&quot;https://github.com/iib0011&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/github/stars/iib0011/omni-tools?style=for-the-badge&amp;logo=github&quot; /&gt;
        &lt;/a&gt;
        &lt;a href=&quot;https://github.com/iib0011/omni-tools/blob/main/LICENSE&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/github/license/iib0011/omni-tools?style=for-the-badge&quot; /&gt;
        &lt;/a&gt;
        &lt;a href=&quot;https://discord.gg/SDbbn3hT4b&quot;&gt;
          &lt;img src=&quot;https://img.shields.io/discord/1342971141823664179?label=Discord&amp;style=for-the-badge&quot; /&gt;
        &lt;/a&gt;
        &lt;br /&gt;&lt;br /&gt;
&lt;/div&gt;

Welcome to OmniTools, a self-hosted web app offering a variety of online tools to simplify everyday tasks.
Whether you are coding, manipulating images/videos, PDFs or crunching numbers, OmniTools has you covered. Please don&#039;t
forget to
star the repo to support us.
Here is the [demo](https://omnitools.app) website.

All files are processed entirely on the client side: nothing ever leaves your device.
Plus, the Docker image is super lightweight at just 28MB, making it fast to deploy and easy to self-host.

![img.png](img.png)

## Table of Contents

- [Features](#features)
- [Self-host](#self-hostrun)
- [Contribute](#contribute)
- [License](#license)
- [Contact](#contact)

## Features

We strive to offer a variety of tools, including:

## **Image/Video/Binary Tools**

- Image Resizer
- Image Converter
- Video Trimmer
- Video Reverser
- And more...

## **String/List Tools**

- Case Converters
- List Shuffler
- Text Formatters
- And more...

## **Date and Time Tools**

- Date Calculators
- Time Zone Converters
- And more...

## **Math Tools**

- Generate Prime Numbers
- Generate Perfect Numbers
- And more...

## **Miscellaneous Tools**

- JSON Tools
- PDF Tools
- CSV Tools
- And more...

Stay tuned as we continue to expand and improve our collection!

## Self-host/Run

### Docker

```bash
docker run -d --name omni-tools --restart unless-stopped -p 8080:80 iib0011/omni-tools:latest
```

### Docker Compose

```yaml
services:
  omni-tools:
    image: iib0011/omni-tools:latest
    container_name: omni-tools
    restart: unless-stopped
    ports:
      - &quot;8080:80&quot;

```

## Contribute

This is a React Project with Typescript Material UI. We use icons from [Iconify](https://icon-sets.iconify.design)

### Project setup

```bash
git clone https://github.com/iib0011/omni-tools.git
cd omni-tools
npm i
npm run dev
```

### Create a new tool

```bash
npm run script:create:tool my-tool-name folder1 # npm run script:create:tool split pdf
```

For tools located under multiple nested directories, use:

```bash
npm run script:create:tool my-tool-name folder1/folder2 # npm run script:create:tool compress image/png
```

Use `folder1\folder2` on Windows.

### Run tests

```bash
npm run test
```

- For e2e tests

```bash
npm run test:e2e
```

&lt;img src=&quot;https://api.star-history.com/svg?repos=iib0011/omni-tools&amp;type=Date&quot;/&gt;

## ü§ù Looking to contribute?

We welcome contributions! You can help by:

- ‚úÖ Reporting bugs
- ‚úÖ Suggesting new features in Github issues or [here](https://tally.so/r/nrkkx2)
- ‚úÖ Improving documentation
- ‚úÖ Submitting pull requests

You can also join our [Discord server](https://discord.gg/SDbbn3hT4b)

### Contributors

&lt;a href=&quot;https://github.com/iib0011/omni-tools/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=iib0011/omni-tools&quot; /&gt;
&lt;/a&gt;

## Contact

For any questions or suggestions, feel free to open an issue or contact me at:
[ibracool99@gmail.com](mailto:ibracool99@gmail.com)

## License

This project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[humanlayer/12-factor-agents]]></title>
            <link>https://github.com/humanlayer/12-factor-agents</link>
            <guid>https://github.com/humanlayer/12-factor-agents</guid>
            <pubDate>Mon, 07 Jul 2025 00:05:20 GMT</pubDate>
            <description><![CDATA[What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/humanlayer/12-factor-agents">humanlayer/12-factor-agents</a></h1>
            <p>What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?</p>
            <p>Language: TypeScript</p>
            <p>Stars: 6,152</p>
            <p>Forks: 403</p>
            <p>Stars today: 297 stars today</p>
            <h2>README</h2><pre># 12-Factor Agents - Principles for building reliable LLM applications

&lt;div align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Code-Apache%202.0-blue.svg&quot; alt=&quot;Code License: Apache 2.0&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Content-CC%20BY--SA%204.0-lightgrey.svg&quot; alt=&quot;Content License: CC BY-SA 4.0&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://discord.gg/WffDJYazzy&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/chat-discord-5865F2&quot; alt=&quot;Discord Server&quot;&gt;&lt;/a&gt;    
&lt;a href=&quot;https://www.youtube.com/watch?v=yxJDyQ8v6P0&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/youtube-deep_dive-crimson&quot; alt=&quot;YouTube
Deep Dive&quot;&gt;&lt;/a&gt;
    
&lt;/div&gt;

*In the spirit of [12 Factor Apps](https://12factor.net/)*.  *The source for this project is public at https://github.com/humanlayer/12-factor-agents, and I welcome your feedback and contributions. Let&#039;s figure this out together!*


&lt;img referrerpolicy=&quot;no-referrer-when-downgrade&quot; src=&quot;https://static.scarf.sh/a.png?x-pxid=2acad99a-c2d9-48df-86f5-9ca8061b7bf9&quot; /&gt;

&lt;a href=&quot;#visual-nav&quot;&gt;&lt;img width=&quot;907&quot; alt=&quot;Screenshot 2025-04-03 at 2 49 07‚ÄØPM&quot; src=&quot;https://github.com/user-attachments/assets/23286ad8-7bef-4902-b371-88ff6a22e998&quot; /&gt;&lt;/a&gt;


Hi, I&#039;m Dex. I&#039;ve been [hacking](https://youtu.be/8bIHcttkOTE) on [AI agents](https://theouterloop.substack.com) for [a while](https://humanlayer.dev). 


**I&#039;ve tried every agent framework out there**, from the plug-and-play crew/langchains to the &quot;minimalist&quot; smolagents of the world to the &quot;production grade&quot; langraph, griptape, etc. 

**I&#039;ve talked to a lot of really strong founders**, in and out of YC, who are all building really impressive things with AI. Most of them are rolling the stack themselves. I don&#039;t see a lot of frameworks in production customer-facing agents.

**I&#039;ve been surprised to find** that most of the products out there billing themselves as &quot;AI Agents&quot; are not all that agentic. A lot of them are mostly deterministic code, with LLM steps sprinkled in at just the right points to make the experience truly magical.

Agents, at least the good ones, don&#039;t follow the [&quot;here&#039;s your prompt, here&#039;s a bag of tools, loop until you hit the goal&quot;](https://www.anthropic.com/engineering/building-effective-agents#agents) pattern. Rather, they are comprised of mostly just software. 

So, I set out to answer:

&gt; ### **What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?**

Welcome to 12-factor agents. As every Chicago mayor since Daley has consistently plastered all over the city&#039;s major airports, we&#039;re glad you&#039;re here.

*Special thanks to [@iantbutler01](https://github.com/iantbutler01), [@tnm](https://github.com/tnm), [@hellovai](https://www.github.com/hellovai), [@stantonk](https://www.github.com/stantonk), [@balanceiskey](https://www.github.com/balanceiskey), [@AdjectiveAllison](https://www.github.com/AdjectiveAllison), [@pfbyjy](https://www.github.com/pfbyjy), [@a-churchill](https://www.github.com/a-churchill), and the SF MLOps community for early feedback on this guide.*

## The Short Version: The 12 Factors

Even if LLMs [continue to get exponentially more powerful](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-10-small-focused-agents.md#what-if-llms-get-smarter), there will be core engineering techniques that make LLM-powered software more reliable, more scalable, and easier to maintain.

- [How We Got Here: A Brief History of Software](https://github.com/humanlayer/12-factor-agents/blob/main/content/brief-history-of-software.md)
- [Factor 1: Natural Language to Tool Calls](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-01-natural-language-to-tool-calls.md)
- [Factor 2: Own your prompts](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-02-own-your-prompts.md)
- [Factor 3: Own your context window](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-03-own-your-context-window.md)
- [Factor 4: Tools are just structured outputs](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-04-tools-are-structured-outputs.md)
- [Factor 5: Unify execution state and business state](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-05-unify-execution-state.md)
- [Factor 6: Launch/Pause/Resume with simple APIs](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-06-launch-pause-resume.md)
- [Factor 7: Contact humans with tool calls](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-07-contact-humans-with-tools.md)
- [Factor 8: Own your control flow](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-08-own-your-control-flow.md)
- [Factor 9: Compact Errors into Context Window](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-09-compact-errors.md)
- [Factor 10: Small, Focused Agents](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-10-small-focused-agents.md)
- [Factor 11: Trigger from anywhere, meet users where they are](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-11-trigger-from-anywhere.md)
- [Factor 12: Make your agent a stateless reducer](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-12-stateless-reducer.md)

### Visual Nav

|    |    |    |
|----|----|-----|
|[![factor 1](https://github.com/humanlayer/12-factor-agents/blob/main/img/110-natural-language-tool-calls.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-01-natural-language-to-tool-calls.md) | [![factor 2](https://github.com/humanlayer/12-factor-agents/blob/main/img/120-own-your-prompts.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-02-own-your-prompts.md) | [![factor 3](https://github.com/humanlayer/12-factor-agents/blob/main/img/130-own-your-context-building.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-03-own-your-context-window.md) |
|[![factor 4](https://github.com/humanlayer/12-factor-agents/blob/main/img/140-tools-are-just-structured-outputs.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-04-tools-are-structured-outputs.md) | [![factor 5](https://github.com/humanlayer/12-factor-agents/blob/main/img/150-unify-state.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-05-unify-execution-state.md) | [![factor 6](https://github.com/humanlayer/12-factor-agents/blob/main/img/160-pause-resume-with-simple-apis.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-06-launch-pause-resume.md) |
| [![factor 7](https://github.com/humanlayer/12-factor-agents/blob/main/img/170-contact-humans-with-tools.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-07-contact-humans-with-tools.md) | [![factor 8](https://github.com/humanlayer/12-factor-agents/blob/main/img/180-control-flow.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-08-own-your-control-flow.md) | [![factor 9](https://github.com/humanlayer/12-factor-agents/blob/main/img/190-factor-9-errors-static.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-09-compact-errors.md) |
| [![factor 10](https://github.com/humanlayer/12-factor-agents/blob/main/img/1a0-small-focused-agents.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-10-small-focused-agents.md) | [![factor 11](https://github.com/humanlayer/12-factor-agents/blob/main/img/1b0-trigger-from-anywhere.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-11-trigger-from-anywhere.md) | [![factor 12](https://github.com/humanlayer/12-factor-agents/blob/main/img/1c0-stateless-reducer.png)](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-12-stateless-reducer.md) |

## How we got here

For a deeper dive on my agent journey and what led us here, check out [A Brief History of Software](https://github.com/humanlayer/12-factor-agents/blob/main/content/brief-history-of-software.md) - a quick summary here:

### The promise of agents

We&#039;re gonna talk a lot about Directed Graphs (DGs) and their Acyclic friends, DAGs. I&#039;ll start by pointing out that...well...software is a directed graph. There&#039;s a reason we used to represent programs as flow charts.

![010-software-dag](https://github.com/humanlayer/12-factor-agents/blob/main/img/010-software-dag.png)

### From code to DAGs

Around 20 years ago, we started to see DAG orchestrators become popular. We&#039;re talking classics like [Airflow](https://airflow.apache.org/), [Prefect](https://www.prefect.io/), some predecessors, and some newer ones like ([dagster](https://dagster.io/), [inggest](https://www.inngest.com/), [windmill](https://www.windmill.dev/)). These followed the same graph pattern, with the added benefit of observability, modularity, retries, administration, etc.

![015-dag-orchestrators](https://github.com/humanlayer/12-factor-agents/blob/main/img/015-dag-orchestrators.png)

### The promise of agents

I&#039;m not the first [person to say this](https://youtu.be/Dc99-zTMyMg?si=bcT0hIwWij2mR-40&amp;t=73), but my biggest takeaway when I started learning about agents, was that you get to throw the DAG away. Instead of software engineers coding each step and edge case, you can give the agent a goal and a set of transitions:

![025-agent-dag](https://github.com/humanlayer/12-factor-agents/blob/main/img/025-agent-dag.png)

And let the LLM make decisions in real time to figure out the path

![026-agent-dag-lines](https://github.com/humanlayer/12-factor-agents/blob/main/img/026-agent-dag-lines.png)

The promise here is that you write less software, you just give the LLM the &quot;edges&quot; of the graph and let it figure out the nodes. You can recover from errors, you can write less code, and you may find that LLMs find novel solutions to problems.


### Agents as loops

As we&#039;ll see later, it turns out this doesn&#039;t quite work.

Let&#039;s dive one step deeper - with agents you&#039;ve got this loop consisting of 3 steps:

1. LLM determines the next step in the workflow, outputting structured json (&quot;tool calling&quot;)
2. Deterministic code executes the tool call
3. The result is appended to the context window 
4. Repeat until the next step is determined to be &quot;done&quot;

```python
initial_event = {&quot;message&quot;: &quot;...&quot;}
context = [initial_event]
while True:
  next_step = await llm.determine_next_step(context)
  context.append(next_step)

  if (next_step.intent === &quot;done&quot;):
    return next_step.final_answer

  result = await execute_step(next_step)
  context.append(result)
```

Our initial context is just the starting event (maybe a user message, maybe a cron fired, maybe a webhook, etc), and we ask the llm to choose the next step (tool) or to determine that we&#039;re done.

Here&#039;s a multi-step example:

[![027-agent-loop-animation](https://github.com/humanlayer/12-factor-agents/blob/main/img/027-agent-loop-animation.gif)](https://github.com/user-attachments/assets/3beb0966-fdb1-4c12-a47f-ed4e8240f8fd)

&lt;details&gt;
&lt;summary&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/blob/main/img/027-agent-loop-animation.gif&quot;&gt;GIF Version&lt;/a&gt;&lt;/summary&gt;

![027-agent-loop-animation](https://github.com/humanlayer/12-factor-agents/blob/main/img/027-agent-loop-animation.gif)]

&lt;/details&gt;

## Why 12-factor agents?

At the end of the day, this approach just doesn&#039;t work as well as we want it to.

In building HumanLayer, I&#039;ve talked to at least 100 SaaS builders (mostly technical founders) looking to make their existing product more agentic. The journey usually goes something like:

1. Decide you want to build an agent
2. Product design, UX mapping, what problems to solve
3. Want to move fast, so grab $FRAMEWORK and *get to building*
4. Get to 70-80% quality bar 
5. Realize that 80% isn&#039;t good enough for most customer-facing features
6. Realize that getting past 80% requires reverse-engineering the framework, prompts, flow, etc.
7. Start over from scratch

&lt;details&gt;
&lt;summary&gt;Random Disclaimers&lt;/summary&gt;

**DISCLAIMER**: I&#039;m not sure the exact right place to say this, but here seems as good as any: **this in BY NO MEANS meant to be a dig on either the many frameworks out there, or the pretty dang smart people who work on them**. They enable incredible things and have accelerated the AI ecosystem. 

I hope that one outcome of this post is that agent framework builders can learn from the journeys of myself and others, and make frameworks even better. 

Especially for builders who want to move fast but need deep control.

**DISCLAIMER 2**: I&#039;m not going to talk about MCP. I&#039;m sure you can see where it fits in.

**DISCLAIMER 3**: I&#039;m using mostly typescript, for [reasons](https://www.linkedin.com/posts/dexterihorthy_llms-typescript-aiagents-activity-7290858296679313408-Lh9e?utm_source=share&amp;utm_medium=member_desktop&amp;rcm=ACoAAA4oHTkByAiD-wZjnGsMBUL_JT6nyyhOh30) but all this stuff works in python or any other language you prefer. 


Anyways back to the thing...

&lt;/details&gt;

### Design Patterns for great LLM applications

After digging through hundreds of AI libriaries and working with dozens of founders, my instinct is this:

1. There are some core things that make agents great
2. Going all in on a framework and building what is essentially a greenfield rewrite may be counter-productive
3. There are some core principles that make agents great, and you will get most/all of them if you pull in a framework
4. BUT, the fastest way I&#039;ve seen for builders to get high-quality AI software in the hands of customers is to take small, modular concepts from agent building, and incorporate them into their existing product
5. These modular concepts from agents can be defined and applied by most skilled software engineers, even if they don&#039;t have an AI background

&gt; #### The fastest way I&#039;ve seen for builders to get good AI software in the hands of customers is to take small, modular concepts from agent building, and incorporate them into their existing product


## The 12 Factors (again)


- [How We Got Here: A Brief History of Software](https://github.com/humanlayer/12-factor-agents/blob/main/content/brief-history-of-software.md)
- [Factor 1: Natural Language to Tool Calls](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-01-natural-language-to-tool-calls.md)
- [Factor 2: Own your prompts](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-02-own-your-prompts.md)
- [Factor 3: Own your context window](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-03-own-your-context-window.md)
- [Factor 4: Tools are just structured outputs](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-04-tools-are-structured-outputs.md)
- [Factor 5: Unify execution state and business state](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-05-unify-execution-state.md)
- [Factor 6: Launch/Pause/Resume with simple APIs](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-06-launch-pause-resume.md)
- [Factor 7: Contact humans with tool calls](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-07-contact-humans-with-tools.md)
- [Factor 8: Own your control flow](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-08-own-your-control-flow.md)
- [Factor 9: Compact Errors into Context Window](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-09-compact-errors.md)
- [Factor 10: Small, Focused Agents](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-10-small-focused-agents.md)
- [Factor 11: Trigger from anywhere, meet users where they are](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-11-trigger-from-anywhere.md)
- [Factor 12: Make your agent a stateless reducer](https://github.com/humanlayer/12-factor-agents/blob/main/content/factor-12-stateless-reducer.md)

## Honorable Mentions / other advice

- [Factor 13: Pre-fetch all the context you might need](https://github.com/humanlayer/12-factor-agents/blob/main/content/appendix-13-pre-fetch.md)

## Related Resources

- Contribute to this guide [here](https://github.com/humanlayer/12-factor-agents)
- [I talked about a lot of this on an episode of the Tool Use podcast](https://youtu.be/8bIHcttkOTE) in March 2025
- I write about some of this stuff at [The Outer Loop](https://theouterloop.substack.com)
- I do [webinars about Maximizing LLM Performance](https://github.com/hellovai/ai-that-works/tree/main) with [@hellovai](https://github.com/hellovai)
- We build OSS agents with this methodology under [got-agents/agents](https://github.com/got-agents/agents)
- We ignored all our own advice and built a [framework for running distributed agents in kubernetes](https://github.com/humanlayer/kubechain)
- Other links from this guide:
  - [12 Factor Apps](https://12factor.net)
  - [Building Effective Agents (Anthropic)](https://www.anthropic.com/engineering/building-effective-agents#agents)
  - [Prompts are Functions](https://thedataexchange.media/baml-revolution-in-ai-engineering/ )
  - [Library patterns: Why frameworks are evil](https://tomasp.net/blog/2015/library-frameworks/)
  - [The Wrong Abstraction](https://sandimetz.com/blog/2016/1/20/the-wrong-abstraction)
  - [Mailcrew Agent](https://github.com/dexhorthy/mailcrew)
  - [Mailcrew Demo Video](https://www.youtube.com/watch?v=f_cKnoPC_Oo)
  - [Chainlit Demo](https://x.com/chainlit_io/status/1858613325921480922)
  - [TypeScript for LLMs](https://www.linkedin.com/posts/dexterihorthy_llms-typescript-aiagents-activity-7290858296679313408-Lh9e)
  - [Schema Aligned Parsing](https://www.boundaryml.com/blog/schema-aligned-parsing)
  - [Function Calling vs Structured Outputs vs JSON Mode](https://www.vellum.ai/blog/when-should-i-use-function-calling-structured-outputs-or-json-mode)
  - [BAML on GitHub](https://github.com/boundaryml/baml)
  - [OpenAI JSON vs Function Calling](https://docs.llamaindex.ai/en/stable/examples/llm/openai_json_vs_function_calling/)
  - [Outer Loop Agents](https://theouterloop.substack.com/p/openais-realtime-api-is-a-step-towards)
  - [Airflow](https://airflow.apache.org/)
  - [Prefect](https://www.prefect.io/)
  - [Dagster](https://dagster.io/)
  - [Inngest](https://www.inngest.com/)
  - [Windmill](https://www.windmill.dev/)
  - [The AI Agent Index (MIT)](https://aiagentindex.mit.edu/)
  - [NotebookLM on Finding Model Capability Boundaries](https://open.substack.com/pub/swyx/p/notebooklm?selection=08e1187c-cfee-4c63-93c9-71216640a5f8)

## Contributors

Thanks to everyone who has contributed to 12-factor agents!

[&lt;img src=&quot;https://avatars.githubusercontent.com/u/3730605?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;dexhorthy&quot; /&gt;](https://github.com/dexhorthy) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/50557586?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;Sypherd&quot; /&gt;](https://github.com/Sypherd) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/66259401?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;tofaramususa&quot; /&gt;](https://github.com/tofaramususa) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/18105223?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;a-churchill&quot; /&gt;](https://github.com/a-churchill) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/4084885?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;Elijas&quot; /&gt;](https://github.com/Elijas) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/39267118?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;hugolmn&quot; /&gt;](https://github.com/hugolmn) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/1882972?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;jeremypeters&quot; /&gt;](https://github.com/jeremypeters)

[&lt;img src=&quot;https://avatars.githubusercontent.com/u/380402?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;kndl&quot; /&gt;](https://github.com/kndl) [&lt;img src=&quot;https://avatars.githubusercontent.com/u/16674643?v=4&amp;s=80&quot; width=&quot;80px&quot; alt=&quot;maci

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[pontusab/directories]]></title>
            <link>https://github.com/pontusab/directories</link>
            <guid>https://github.com/pontusab/directories</guid>
            <pubDate>Mon, 07 Jul 2025 00:05:19 GMT</pubDate>
            <description><![CDATA[The Cursor & Windsurf community, find rules and MCPs]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/pontusab/directories">pontusab/directories</a></h1>
            <p>The Cursor & Windsurf community, find rules and MCPs</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,495</p>
            <p>Forks: 561</p>
            <p>Stars today: 29 stars today</p>
            <h2>README</h2><pre>![hero](image.png)

# How to Contribute to Directories

### This guide will help you understand how to add new rules or prompts to the both Cursor and Windsurf Directories.

#### 1. Fork the Repo

#### 2. Adding a New Rule

If you want to submit a **new rule** that does not already exist in the Directories, follow these steps:

1. **Locate the Rule Index**:  

   Add your new rule in the `packages/data/rules/index.ts` file. For example:
   
   ```typescript
   import { cRules } from &quot;./rules/c&quot;;

2. **Create a Rule File**:
    
    Create a new file in the `packages/data/rules/` directory with the appropriate name. For example, if you&#039;re adding a rule for Next.js, name the file `nextjs.ts`.

3. **Define the Rule**:
   
    Add your prompts inside the newly created file. Refer to the existing rules for formatting guidance.  Make sure your prompts are accurate, clear, and helpful to developers.

    Your prompts should:
      - Be accurate and related to the rule.
      - Be clearly worded to help developers understand and use them easily.
      - Be actionable, providing steps or insights to solve common problems or optimize workflows.
      - Test your prompts: Before submitting, ensure that your prompts have been tested and work as expected in the relevant development environment. This ensures that other developers can rely your contributions :) .

#### 3. Adding New Prompts/Content to Existing Rules

If you want to add new prompts to an existing rule, follow these steps:

1. **Find the Existing Rule**:

    Navigate to the `packages/data/rules/` directory and open the relevant file for the rule you want to update. For example, if you&#039;re adding prompts for **Next.js**, open `nextjs.ts`.

2. **Add Your New Prompts**:

    Add your new prompts below the existing ones. Ensure that your additions are tested.

#### 4. Important Parameters in Rule Files

  When creating or updating rules, be sure to include the following parameters for consistency and clarity:

  1. **tags**: Add language-specific tags to categorize the rule.

      ```
      tags: [&quot;JavaScript&quot;, &quot;Next.js&quot;]

  2. **title**: Provide an appropriate title that describes the rule.

      ```
        title: &quot;Next.js Best Practices&quot;

  3. **slug**: Create a unique slug that reflects the purpose of the rule.

      ```
        slug: &quot;nextjs-best-practices&quot;

  4. **content**: Write the content of your prompt here. Make sure it is clear, actionable, and helpful to developers. Be concise, but provide enough detail to assist cursor ai in completing tasks effectively...

      ```
        content: `your amazing prompt`

  5. **author**: Include details about yourself as the contributor. This helps others recognize your contributions and allows them to reach out if needed.

  
     - **name**: Your full name or GitHub username.
     - **URL**: A link to your GitHub, Twitter, website, or any other profile you want to share. This is optional but recommended.
     - **avatar**: The URL path to an image or avatar that represents you. You can use a photo from a service like Gravatar or any image hosting service.

### 5. Create a PR


## Getting Started

First, run the development server:

```bash
npm install

npm run dev
# or
yarn dev
# or
pnpm dev
# or
bun dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[MotiaDev/motia]]></title>
            <link>https://github.com/MotiaDev/motia</link>
            <guid>https://github.com/MotiaDev/motia</guid>
            <pubDate>Mon, 07 Jul 2025 00:05:18 GMT</pubDate>
            <description><![CDATA[Unified Backend Framework for APIs, Events, and AI Agents]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/MotiaDev/motia">MotiaDev/motia</a></h1>
            <p>Unified Backend Framework for APIs, Events, and AI Agents</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,676</p>
            <p>Forks: 297</p>
            <p>Stars today: 166 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;!-- shows in LIGHT mode only --&gt;
  &lt;img src=&quot;assets/motia-logo-dark.png#gh-light-mode-only&quot;  width=&quot;400&quot; alt=&quot;Motia logo&quot; /&gt;
  &lt;!-- shows in DARK mode only --&gt;
  &lt;img src=&quot;assets/motia-logo-light.png#gh-dark-mode-only&quot; width=&quot;400&quot; alt=&quot;Motia logo (dark)&quot; /&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;strong&gt;üî• A Modern Unified Backend Framework for APIs, Events and Agents üî•&lt;/strong&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/motia&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/v/motia?style=flat&amp;logo=npm&amp;logoColor=white&amp;color=CB3837&amp;labelColor=000000&quot; alt=&quot;npm version&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/MotiaDev/motia/blob/main/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/license-MIT-green?style=flat&amp;logo=opensourceinitiative&amp;logoColor=white&amp;labelColor=000000&quot; alt=&quot;license&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/MotiaDev/motia&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/stars/MotiaDev/motia?style=flat&amp;logo=github&amp;logoColor=white&amp;color=yellow&amp;labelColor=000000&quot; alt=&quot;GitHub stars&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://twitter.com/motiadev&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/Follow-@motiadev-1DA1F2?style=flat&amp;logo=twitter&amp;logoColor=white&amp;labelColor=000000&quot; alt=&quot;Twitter Follow&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/EnfDRFYW&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/discord/1322278831184281721?style=flat&amp;logo=discord&amp;logoColor=white&amp;color=5865F2&amp;label=Discord&amp;labelColor=000000&quot; alt=&quot;Discord&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;


&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.motia.dev/manifesto&quot;&gt;üí° Motia Manifesto&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;https://www.motia.dev/docs/getting-started/quick-start&quot;&gt;üöÄ Quick Start&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;https://www.motia.dev/docs/concepts/steps/defining-steps&quot;&gt;üìã Defining Steps&lt;/a&gt; ‚Ä¢
  &lt;a href=&quot;https://motia.dev/docs&quot;&gt;üìö Docs&lt;/a&gt;
&lt;/p&gt;

---

## üéØ What is Motia?

Motia is a **modern backend framework** that unifies APIs, background jobs, events, and AI agents into a single cohesive system. Eliminate runtime complexity and build unified backends where **JavaScript, TypeScript, Python, etc**, work together in event-driven workflows, with built-in state management, observability, and one-click deployments.

Motia brings cohesion to the fragmented backend world with our core primitive: the **Step**.

![Motia combines APIs, background queues, and AI agents into one system](/assets/motia-architecture-with-bg.png)

### üß± The Step Philosophy

- **üéØ Your Logic, Your Step**: A Step holds your business logic. It can be a simple function, a call to a database, or a complex AI agent. This is where your application&#039;s real work gets done.
- **üåç Any Language, One Workflow**: Write Steps in TypeScript, Python, and other languages to come. all in the same project. Use Python for your AI agents and TypeScript for your API, and Motia makes them work together effortlessly.
- **‚ö° Full Power, No Boilerplate**: Inside a Step&#039;s `handler`, you have the full power of the Node.js or Python ecosystem. Install any package, call any API, connect to any database. No restrictions, just your code.
- **üëÅÔ∏è Zero-Config Observability**: Get full end-to-end tracing and logging for every Step execution, automatically. No setup required. See exactly what happened, when, and why.
- **üåä Simple &amp; Powerful Workflows**: Connect Steps together by emitting and subscribing to events. Build complex, multi-stage processes with simple, declarative code.
- **üè™ Unified State**: Share data between Steps effortlessly. Motia provides built-in state management that is automatically traced, giving you a complete picture of your data&#039;s lifecycle through a workflow.

---

## üöß The Problem

Backend teams juggle **fragmented runtimes** across APIs, background queues, and AI agents. This creates deployment complexity, debugging gaps, and cognitive overhead from context-switching between frameworks.

**This fragmentation demands a unified system.**

---

## ‚úÖ The Unified System

Motia unifies your entire backend into a **unified state**. APIs, background jobs, and AI agents become interconnected Steps with shared state and integrated observability.

| **Before**                  | **After (Motia)**                       |
| --------------------------- | --------------------------------------- |
| Multiple deployment targets | **Single unified deployment**           |
| Fragmented observability    | **End-to-end tracing**                  |
| Language dependent          | **JavaScript, TypeScript, Python, etc** |
| Context-switching overhead  | **Single intuitive model**              |
| Complex error handling      | **Automatic retries &amp; fault tolerance** |

---

## üîß Supported Step Types

| Type        | Trigger               | Use Case                              |
| ----------- | --------------------- | ------------------------------------- |
| **`api`**   | HTTP Request          | Expose REST endpoints                 |
| **`event`** | Emitted Topics        | React to internal or external events  |
| **`cron`**  | Scheduled Time (cron) | Automate recurring jobs               |
| **`noop`**  | None                  | Placeholder for manual/external tasks |

---

### ü§î How it Works

Motia&#039;s architecture is built around a single, powerful primitive: the **Step**. A Step is not just a trigger; it&#039;s a powerful container for your business logic. You can write anything from a simple database query to a complex AI agent interaction inside a single step. Instead of managing separate services for APIs, background workers, and scheduled tasks, you simply define how your steps are triggered.

-   **Need a public API?** Create an `api` step. This defines a route and handler for HTTP requests. You can build a complete REST or GraphQL API just with these steps.
-   **Need a background job or queue?** Have your `api` step `emit` an event. An `event` step subscribed to that event&#039;s topic will pick up the job and process it asynchronously. This is how you handle anything that shouldn&#039;t block the main request thread, from sending emails to complex data processing.
-   **Need to run a task on a schedule?** Use a `cron` step. It will trigger automatically based on the schedule you define.

This model means you no longer need to glue together separate frameworks and tools. A single Motia application can replace a stack that might otherwise include **Nest.js** (for APIs), **Temporal** (for workflows), and **Celery/BullMQ** (for background jobs). It&#039;s all just steps and events.

## ‚ö° Core Concepts

The **Step** is Motia&#039;s core primitive. The following concepts are deeply integrated with Steps to help you build powerful, complex, and scalable backends:

### üîë Steps &amp; Step Types
Understand the three ways Steps are triggered:
- **HTTP (`api`)** ‚Äì Build REST/GraphQL endpoints with zero boilerplate.
- **Events (`event`)** ‚Äì React to internal or external events emitted by other steps.
- **Cron (`cron`)** ‚Äì Schedule recurring jobs with a familiar cron syntax.

### üì£ Emit &amp; Subscribe (Event-Driven Workflows)
Steps talk to each other by **emitting** and **subscribing** to topics. This decouples producers from consumers and lets you compose complex workflows with simple, declarative code.

### üè™ State Management
All steps share a unified key-value state store. Every `get`, `set`, and `delete` is automatically traced so you always know when and where your data changed.

### üìä Structured Logging
Motia provides structured, JSON logs correlated with trace IDs and step names. Search and filter your logs without regex hassle.

### üì° Streams: Real-time Messaging
Push live updates from long-running or asynchronous workflows to clients without polling. Perfect for dashboards, progress indicators, and interactive AI agents.

### üëÅÔ∏è End-to-End Observability with Traces
Every execution generates a full trace, capturing step timelines, state operations, emits, stream calls, and logs. Visualise everything in the Workbench&#039;s Traces UI and debug faster.

---

## üöÄ Quickstart

Get Motia project up and running in **under 60 seconds**:
### **Prerequisites**

- **Node.js 18+** (we recommend the latest LTS)
- **npm** ‚â• 8 (or **pnpm** / **yarn** ‚Äì your choice)

---

### 1. Bootstrap a New Motia Project

```bash
npx motia@latest create -i   # runs the interactive terminal
```
Follow the prompts to pick a template, project name, and language.

### 2. Start the Workbench

Inside your new project folder, launch the dev server:

```bash
npx motia dev
# ‚ûú http://localhost:3000
```
This spins up the Motia Workbench ‚Äì a local UI for building, testing &amp; observing your backend in real-time.

![motia-terminal](assets/motia-terminal.gif)

### 3. Hit Your First Endpoint

Open a new terminal tab and run:

```bash
curl http://localhost:3000/default
```
You should see the JSON response:

```json
{&quot;message&quot;:&quot;Hello World from Motia!&quot;}
```

### 4. Explore the Workbench UI

The Workbench is your command centre:

- **üåä Flows** ‚Äì Visualise how your Steps connect.
- **üîå Endpoints** ‚Äì Test APIs with one click and stream results live.
- **üëÅÔ∏è Traces** ‚Äì Inspect end-to-end traces of every execution.
- **üìä Logs** ‚Äì View structured logs grouped by trace.
- **üè™ State** ‚Äì Inspect the key-value store across Steps.

---

üéâ **That&#039;s it!** You now have a fully-featured Motia project with:

- ‚úÖ `/default` API endpoint
- ‚úÖ Visual debugger &amp; flow inspector
- ‚úÖ Built-in observability
- ‚úÖ Hot-reload for instant feedback

---

## üóÇ Examples

| [Finance Agent](https://github.com/MotiaDev/motia-examples/tree/main/examples/finance-agent) | [GitHub Agent](https://github.com/MotiaDev/motia-examples/tree/main/examples/github-integration-workflow) | [Gmail Manager](https://github.com/MotiaDev/motia-examples/tree/main/examples/gmail-workflow) |
| -------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------- |
| ![Finance](assets/examples/finance-agent.png)&lt;br&gt;Financial insights                          | ![GitHub](assets/examples/github-pr-management.png)&lt;br&gt;PR automation                                      | ![Gmail](assets/examples/gmail-flow.png)&lt;br&gt;Email automation                                  |

| [Trello Automation](https://github.com/MotiaDev/motia-examples/tree/main/examples/trello-flow) | [RAG Agent](https://github.com/MotiaDev/motia-examples/tree/main/examples/rag_example) | [AI Image Gen](https://github.com/MotiaDev/motia-examples/tree/main/examples/vision-example) |
| ---------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------- |
| ![Trello](assets/examples/trello-manager.png)&lt;br&gt;Task automation                               | ![RAG](assets/examples/parse-embed-rag.png)&lt;br&gt;Knowledge retrieval                     | ![AI Image](assets/examples/generate-image.png)&lt;br&gt;Generate images                           |

---

## üåê Language Support

Write steps in your preferred language:

| Language       | Status        | Example           |
| -------------- | ------------- | ----------------- |
| **JavaScript** | ‚úÖ Stable      | `handler.step.js` |
| **TypeScript** | ‚úÖ Stable      | `handler.step.ts` |
| **Python**     | ‚úÖ Stable      | `handler.step.py` |
| **Ruby**       | üöß Beta        | `handler.step.rb` |
| **Go**         | üîÑ Coming Soon | `handler.step.go` |
| **Rust**       | üîÑ Coming Soon | `handler.step.rs` |

---
### üí¨ **Get Help**
- **üìã Questions**: Use our [Discord community](https://discord.gg/7rXsekMK)
- **üêõ Bug Reports**: [GitHub Issues](https://github.com/MotiaDev/motia/issues)
- **üìñ Documentation**: [Official Docs](https://motia.dev/docs)
- **üé• Blog**: [Motia Blog](https://dev.to/motiadev)

### ü§ù **Contributing**

#### üöÄ Roadmap

We&#039;re building Motia in the open, and we&#039;d love for you to be a part of the journey.

Check out our public roadmap to see what&#039;s planned, what&#039;s in progress, and what&#039;s recently shipped:

üëâ [View our public Roadmap](https://github.com/orgs/MotiaDev/projects/2/views/2)

We welcome contributions! Whether it&#039;s:
- üêõ Bug fixes and improvements
- ‚ú® New features and step types
- üìö Documentation and examples
- üåç Language support additions
- üé® Workbench UI enhancements

Check out our [Contributing Guide](https://github.com/MotiaDev/motia/blob/main/CONTRIBUTING.md) to get started.

---

&lt;div align=&quot;center&quot;&gt;

**üåü Ready to unify your backend?**

[üöÄ **Get Started Now**](https://motia.dev) ‚Ä¢ [üìñ **Read the Docs**](https://motia.dev/docs) ‚Ä¢ [üí¨ **Join Discord**](https://discord.gg/7rXsekMK)

&lt;/div&gt;

---
&lt;div align=&quot;center&quot;&gt;

[![Star History Chart](https://api.star-history.com/svg?repos=motiadev/motia&amp;type=Date)](https://www.star-history.com/#motiadev/motia&amp;Date)

&lt;sub&gt;Built with ‚ù§Ô∏è by the Motia team ‚Ä¢ **Star us if you find Motia useful!** ‚≠ê&lt;/sub&gt;

&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Infisical/infisical]]></title>
            <link>https://github.com/Infisical/infisical</link>
            <guid>https://github.com/Infisical/infisical</guid>
            <pubDate>Mon, 07 Jul 2025 00:05:17 GMT</pubDate>
            <description><![CDATA[Infisical is the open-source platform for secrets management, PKI, and SSH access.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Infisical/infisical">Infisical/infisical</a></h1>
            <p>Infisical is the open-source platform for secrets management, PKI, and SSH access.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 18,635</p>
            <p>Forks: 1,242</p>
            <p>Stars today: 45 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;
  &lt;img width=&quot;300&quot; src=&quot;/img/logoname-white.svg#gh-dark-mode-only&quot; alt=&quot;infisical&quot;&gt;
&lt;/h1&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;p align=&quot;center&quot;&gt;&lt;b&gt;The open-source secret management platform&lt;/b&gt;: Sync secrets/configs across your team/infrastructure and prevent secret leaks.&lt;/p&gt;
&lt;/p&gt;

&lt;h4 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://infisical.com/slack&quot;&gt;Slack&lt;/a&gt; |
  &lt;a href=&quot;https://infisical.com/&quot;&gt;Infisical Cloud&lt;/a&gt; |
  &lt;a href=&quot;https://infisical.com/docs/self-hosting/overview&quot;&gt;Self-Hosting&lt;/a&gt; |
  &lt;a href=&quot;https://infisical.com/docs/documentation/getting-started/introduction&quot;&gt;Docs&lt;/a&gt; |
  &lt;a href=&quot;https://www.infisical.com&quot;&gt;Website&lt;/a&gt; |
  &lt;a href=&quot;https://infisical.com/careers&quot;&gt;Hiring (Remote/SF)&lt;/a&gt;
&lt;/h4&gt;

&lt;h4 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/Infisical/infisical/blob/main/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg&quot; alt=&quot;Infisical is released under the MIT license.&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/infisical/infisical/blob/main/CONTRIBUTING.md&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/PRs-Welcome-brightgreen&quot; alt=&quot;PRs welcome!&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/Infisical/infisical/issues&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/commit-activity/m/infisical/infisical&quot; alt=&quot;git commit activity&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://cloudsmith.io/~infisical/repos/&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/Downloads-6.95M-orange&quot; alt=&quot;Cloudsmith downloads&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://infisical.com/slack&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/chat-on%20Slack-blueviolet&quot; alt=&quot;Slack community channel&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://twitter.com/infisical&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/twitter/follow/infisical?label=Follow&quot; alt=&quot;Infisical Twitter&quot; /&gt;
  &lt;/a&gt;
&lt;/h4&gt;

&lt;img src=&quot;/img/infisical_github_repo2.png&quot; width=&quot;100%&quot; alt=&quot;Dashboard&quot; /&gt;

## Introduction

**[Infisical](https://infisical.com)** is the open source secret management platform that teams use to centralize their application configuration and secrets like API keys and database credentials as well as manage their internal PKI.

We&#039;re on a mission to make security tooling more accessible to everyone, not just security teams, and that means redesigning the entire developer experience from ground up.

## Features

### Secrets Management:

- **[Dashboard](https://infisical.com/docs/documentation/platform/project)**: Manage secrets across projects and environments (e.g. development, production, etc.) through a user-friendly interface.
- **[Native Integrations](https://infisical.com/docs/integrations/overview)**: Sync secrets to platforms like [GitHub](https://infisical.com/docs/integrations/cicd/githubactions), [Vercel](https://infisical.com/docs/integrations/cloud/vercel), [AWS](https://infisical.com/docs/integrations/cloud/aws-secret-manager), and use tools like [Terraform](https://infisical.com/docs/integrations/frameworks/terraform), [Ansible](https://infisical.com/docs/integrations/platforms/ansible), and more.
- **[Secret versioning](https://infisical.com/docs/documentation/platform/secret-versioning)** and **[Point-in-Time Recovery](https://infisical.com/docs/documentation/platform/pit-recovery)**: Keep track of every secret and project state; roll back when needed.
- **[Secret Rotation](https://infisical.com/docs/documentation/platform/secret-rotation/overview)**: Rotate secrets at regular intervals for services like [PostgreSQL](https://infisical.com/docs/documentation/platform/secret-rotation/postgres-credentials), [MySQL](https://infisical.com/docs/documentation/platform/secret-rotation/mysql), [AWS IAM](https://infisical.com/docs/documentation/platform/secret-rotation/aws-iam), and more.
- **[Dynamic Secrets](https://infisical.com/docs/documentation/platform/dynamic-secrets/overview)**: Generate ephemeral secrets on-demand for services like [PostgreSQL](https://infisical.com/docs/documentation/platform/dynamic-secrets/postgresql), [MySQL](https://infisical.com/docs/documentation/platform/dynamic-secrets/mysql), [RabbitMQ](https://infisical.com/docs/documentation/platform/dynamic-secrets/rabbit-mq), and more.
- **[Secret Scanning and Leak Prevention](https://infisical.com/docs/cli/scanning-overview)**: Prevent secrets from leaking to git.
- **[Infisical Kubernetes Operator](https://infisical.com/docs/documentation/getting-started/kubernetes)**: Deliver secrets to your Kubernetes workloads and automatically reload deployments.
- **[Infisical Agent](https://infisical.com/docs/infisical-agent/overview)**: Inject secrets into applications without modifying any code logic.

### Infisical (Internal) PKI:

- **[Private Certificate Authority](https://infisical.com/docs/documentation/platform/pki/private-ca)**: Create CA hierarchies, configure [certificate templates](https://infisical.com/docs/documentation/platform/pki/certificates#guide-to-issuing-certificates) for policy enforcement, and start issuing X.509 certificates.
- **[Certificate Management](https://infisical.com/docs/documentation/platform/pki/certificates)**: Manage the certificate lifecycle from [issuance](https://infisical.com/docs/documentation/platform/pki/certificates#guide-to-issuing-certificates) to [revocation](https://infisical.com/docs/documentation/platform/pki/certificates#guide-to-revoking-certificates) with support for CRL.
- **[Alerting](https://infisical.com/docs/documentation/platform/pki/alerting)**: Configure alerting for expiring CA and end-entity certificates.
- **[Infisical PKI Issuer for Kubernetes](https://infisical.com/docs/documentation/platform/pki/pki-issuer)**: Deliver TLS certificates to your Kubernetes workloads with automatic renewal.
- **[Enrollment over Secure Transport](https://infisical.com/docs/documentation/platform/pki/est)**: Enroll and manage certificates via EST protocol.

### Infisical Key Management System (KMS):

- **[Cryptographic Keys](https://infisical.com/docs/documentation/platform/kms)**: Centrally manage keys across projects through a user-friendly interface or via the API.
- **[Encrypt and Decrypt Data](https://infisical.com/docs/documentation/platform/kms#guide-to-encrypting-data)**: Use symmetric keys to encrypt and decrypt data.

### Infisical SSH

- **[Signed SSH Certificates](https://infisical.com/docs/documentation/platform/ssh)**: Issue ephemeral SSH credentials for secure, short-lived, and centralized access to infrastructure.

### General Platform:

- **Authentication Methods**: Authenticate machine identities with Infisical using a cloud-native or platform agnostic authentication method ([Kubernetes Auth](https://infisical.com/docs/documentation/platform/identities/kubernetes-auth), [GCP Auth](https://infisical.com/docs/documentation/platform/identities/gcp-auth), [Azure Auth](https://infisical.com/docs/documentation/platform/identities/azure-auth), [AWS Auth](https://infisical.com/docs/documentation/platform/identities/aws-auth), [OIDC Auth](https://infisical.com/docs/documentation/platform/identities/oidc-auth/general), [Universal Auth](https://infisical.com/docs/documentation/platform/identities/universal-auth)).
- **[Access Controls](https://infisical.com/docs/documentation/platform/access-controls/overview)**: Define advanced authorization controls for users and machine identities with [RBAC](https://infisical.com/docs/documentation/platform/access-controls/role-based-access-controls), [additional privileges](https://infisical.com/docs/documentation/platform/access-controls/additional-privileges), [temporary access](https://infisical.com/docs/documentation/platform/access-controls/temporary-access), [access requests](https://infisical.com/docs/documentation/platform/access-controls/access-requests), [approval workflows](https://infisical.com/docs/documentation/platform/pr-workflows), and more.
- **[Audit logs](https://infisical.com/docs/documentation/platform/audit-logs)**: Track every action taken on the platform.
- **[Self-hosting](https://infisical.com/docs/self-hosting/overview)**: Deploy Infisical on-prem or cloud with ease; keep data on your own infrastructure.
- **[Infisical SDK](https://infisical.com/docs/sdks/overview)**: Interact with Infisical via client SDKs ([Node](https://infisical.com/docs/sdks/languages/node), [Python](https://github.com/Infisical/python-sdk-official?tab=readme-ov-file#infisical-python-sdk), [Go](https://infisical.com/docs/sdks/languages/go), [Ruby](https://infisical.com/docs/sdks/languages/ruby), [Java](https://infisical.com/docs/sdks/languages/java), [.NET](https://infisical.com/docs/sdks/languages/csharp))
- **[Infisical CLI](https://infisical.com/docs/cli/overview)**: Interact with Infisical via CLI; useful for injecting secrets into local development and CI/CD pipelines.
- **[Infisical API](https://infisical.com/docs/api-reference/overview/introduction)**: Interact with Infisical via API.

## Getting started

Check out the [Quickstart Guides](https://infisical.com/docs/getting-started/introduction)

| Use Infisical Cloud                                                                                                                                     | Deploy Infisical on premise                                                          |
| ------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------ |
| The fastest and most reliable way to &lt;br&gt; get started with Infisical is signing up &lt;br&gt; for free to [Infisical Cloud](https://app.infisical.com/login). | &lt;br&gt; View all [deployment options](https://infisical.com/docs/self-hosting/overview) |

### Run Infisical locally

To set up and run Infisical locally, make sure you have Git and Docker installed on your system. Then run the command for your system:

Linux/macOS:

```console
git clone https://github.com/Infisical/infisical &amp;&amp; cd &quot;$(basename $_ .git)&quot; &amp;&amp; cp .env.example .env &amp;&amp; docker compose -f docker-compose.prod.yml up
```

Windows Command Prompt:

```console
git clone https://github.com/Infisical/infisical &amp;&amp; cd infisical &amp;&amp; copy .env.example .env &amp;&amp; docker compose -f docker-compose.prod.yml up
```

Create an account at `http://localhost:80`

### Scan and prevent secret leaks

On top managing secrets with Infisical, you can also [scan for over 140+ secret types]() in your files, directories and git repositories.

To scan your full git history, run:

```
infisical scan --verbose
```

Install pre commit hook to scan each commit before you push to your repository

```
infisical scan install --pre-commit-hook
```

Learn about Infisical&#039;s code scanning feature [here](https://infisical.com/docs/cli/scanning-overview)

## Open-source vs. paid

This repo available under the [MIT expat license](https://github.com/Infisical/infisical/blob/main/LICENSE), with the exception of the `ee` directory which will contain premium enterprise features requiring a Infisical license.

If you are interested in managed Infisical Cloud of self-hosted Enterprise Offering, take a look at [our website](https://infisical.com/) or [book a meeting with us](https://infisical.cal.com/vlad/infisical-demo).

## Security

Please do not file GitHub issues or post on our public forum for security vulnerabilities, as they are public!

Infisical takes security issues very seriously. If you have any concerns about Infisical or believe you have uncovered a vulnerability, please get in touch via the e-mail address security@infisical.com. In the message, try to provide a description of the issue and ideally a way of reproducing it. The security team will get back to you as soon as possible.

Note that this security address should be used only for undisclosed vulnerabilities. Please report any security problems to us before disclosing it publicly.

## Contributing

Whether it&#039;s big or small, we love contributions. Check out our guide to see how to [get started](https://infisical.com/docs/contributing/getting-started).

Not sure where to get started? You can:

- Join our &lt;a href=&quot;https://infisical.com/slack&quot;&gt;Slack&lt;/a&gt;, and ask us any questions there.

## Resources

- [Docs](https://infisical.com/docs/documentation/getting-started/introduction) for comprehensive documentation and guides
- [Slack](https://infisical.com/slack) for discussion with the community and Infisical team.
- [GitHub](https://github.com/Infisical/infisical) for code, issues, and pull requests
- [Twitter](https://twitter.com/infisical) for fast news
- [YouTube](https://www.youtube.com/@infisical_os) for videos on secret management
- [Blog](https://infisical.com/blog) for secret management insights, articles, tutorials, and updates
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[toeverything/AFFiNE]]></title>
            <link>https://github.com/toeverything/AFFiNE</link>
            <guid>https://github.com/toeverything/AFFiNE</guid>
            <pubDate>Mon, 07 Jul 2025 00:05:16 GMT</pubDate>
            <description><![CDATA[There can be more than Notion and Miro. AFFiNE(pronounced […ô‚Äòfain]) is a next-gen knowledge base that brings planning, sorting and creating all together. Privacy first, open-source, customizable and ready to use.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/toeverything/AFFiNE">toeverything/AFFiNE</a></h1>
            <p>There can be more than Notion and Miro. AFFiNE(pronounced […ô‚Äòfain]) is a next-gen knowledge base that brings planning, sorting and creating all together. Privacy first, open-source, customizable and ready to use.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 52,789</p>
            <p>Forks: 3,524</p>
            <p>Stars today: 73 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

&lt;h1 style=&quot;border-bottom: none&quot;&gt;
    &lt;b&gt;&lt;a href=&quot;https://affine.pro&quot;&gt;AFFiNE.Pro&lt;/a&gt;&lt;/b&gt;&lt;br /&gt;
    Write, Draw and Plan All at Once
    &lt;br&gt;
&lt;/h1&gt;
&lt;a href=&quot;https://affine.pro/download&quot;&gt;
    &lt;img alt=&quot;affine logo&quot; src=&quot;https://cdn.affine.pro/Github_hero_image1.png&quot; style=&quot;width: 100%&quot;&gt;
&lt;/a&gt;
&lt;br/&gt;
&lt;p align=&quot;center&quot;&gt;
  A privacy-focused, local-first, open-source, and ready-to-use alternative for Notion &amp; Miro. &lt;br /&gt;
  One hyper-fused platform for wildly creative minds.
&lt;/p&gt;

&lt;br/&gt;

&lt;br/&gt;
&lt;a href=&quot;https://www.producthunt.com/posts/affine-3?utm_source=badge-featured&amp;utm_medium=badge&amp;utm_souce=badge-affine&amp;#0045;3&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=440671&amp;theme=light&quot; alt=&quot;AFFiNE - One&amp;#0032;app&amp;#0032;for&amp;#0032;all&amp;#0032;&amp;#0045;&amp;#0032;Where&amp;#0032;Notion&amp;#0032;meets&amp;#0032;Miro | Product Hunt&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot; /&gt;&lt;/a&gt;
&lt;br/&gt;
&lt;br/&gt;

&lt;div align=&quot;left&quot; valign=&quot;middle&quot;&gt;
&lt;a href=&quot;https://runblaze.dev&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://www.runblaze.dev/logo_dark.png&quot;&gt;
   &lt;img align=&quot;right&quot; src=&quot;https://www.runblaze.dev/logo_light.png&quot; height=&quot;102px&quot;/&gt;
 &lt;/picture&gt;
&lt;/a&gt;

&lt;br style=&quot;display: none;&quot;/&gt;

_Special thanks to [Blaze](https://runblaze.dev) for their support of this project. They provide high-performance Apple Silicon macOS and Linux (AMD64 &amp; ARM64) runners for GitHub Actions, greatly reducing our automated build times._

&lt;/div&gt;

&lt;br/&gt;
&lt;br/&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://affine.pro&quot;&gt;Home Page&lt;/a&gt; |
    &lt;a href=&quot;https://affine.pro/redirect/discord&quot;&gt;Discord&lt;/a&gt; |
    &lt;a href=&quot;https://app.affine.pro&quot;&gt;Live Demo&lt;/a&gt; |
    &lt;a href=&quot;https://affine.pro/blog/&quot;&gt;Blog&lt;/a&gt; |
    &lt;a href=&quot;https://docs.affine.pro/&quot;&gt;Documentation&lt;/a&gt;
&lt;/div&gt;
&lt;br/&gt;

[![Releases](https://img.shields.io/github/downloads/toeverything/AFFiNE/total)](https://github.com/toeverything/AFFiNE/releases/latest)
[![All Contributors][all-contributors-badge]](#contributors)
[![TypeScript-version-icon]](https://www.typescriptlang.org/)

&lt;/div&gt;

&lt;br /&gt;
&lt;div align=&quot;center&quot;&gt;
&lt;em&gt;Docs, canvas and tables are hyper-merged with AFFiNE - just like the word affine (…ôÀàf å…™n | a-fine).&lt;/em&gt;
&lt;/div&gt;
&lt;br /&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;https://github.com/toeverything/AFFiNE/assets/79301703/49a426bb-8d2b-4216-891a-fa5993642253&quot; style=&quot;width: 100%&quot;/&gt;
&lt;/div&gt;

## Getting started &amp; staying tuned with us.

Star us, and you will receive all release notifications from GitHub without any delay!

&lt;img src=&quot;https://user-images.githubusercontent.com/79301703/230891830-0110681e-8c7e-483b-b6d9-9e42b291b9ef.gif&quot; style=&quot;width: 100%&quot;/&gt;

## What is AFFiNE

[AFFiNE](https://affine.pro) is an open-source, all-in-one workspace and an operating system for all the building blocks that assemble your knowledge base and much more -- wiki, knowledge management, presentation and digital assets. It&#039;s a better alternative to Notion and Miro.

## Features

**A true canvas for blocks in any form. Docs and whiteboard are now fully merged.**

- Many editor apps claim to be a canvas for productivity, but AFFiNE is one of the very few which allows you to put any building block on an edgeless canvas -- rich text, sticky notes, any embedded web pages, multi-view databases, linked pages, shapes and even slides. We have it all.

**Multimodal AI partner ready to kick in any work**

- Write up professional work report? Turn an outline into expressive and presentable slides? Summary an article into a well-structured mindmap? Sorting your job plan and backlog for tasks? Or... draw and code prototype apps and web pages directly all with one prompt? With you, [AFFiNE AI](https://affine.pro/ai) pushes your creativity to the edge of your imagination,just like [Canvas AI](https://affine.pro/blog/best-canvas-ai) to generate mind map for brainstorming.

**Local-first &amp; Real-time collaborative**

- We love the idea of local-first that you always own your data on your disk, in spite of the cloud. Furthermore, AFFiNE supports real-time sync and collaborations on web and cross-platform clients.

**Self-host &amp; Shape your own AFFiNE**

- You have the freedom to manage, self-host, fork and build your own AFFiNE. Plugin community and third-party blocks are coming soon. More tractions on [Blocksuite](https://blocksuite.io). Check there to learn how to [self-host AFFiNE](https://docs.affine.pro/self-host-affine).

## Acknowledgement

‚ÄúWe shape our tools and thereafter our tools shape us‚Äù. A lot of pioneers have inspired us along the way, e.g.:

- Quip &amp; Notion with their great concept of ‚Äúeverything is a block‚Äù
- Trello with their Kanban
- Airtable &amp; Miro with their no-code programmable datasheets
- Miro &amp; Whimiscal with their edgeless visual whiteboard
- Remote &amp; Capacities with their object-based tag system

There is a large overlap of their atomic ‚Äúbuilding blocks‚Äù between these apps. They are not open source, nor do they have a plugin system like Vscode for contributors to customize. We want to have something that contains all the features we love and also goes one step even further.

Thanks for checking us out, we appreciate your interest and sincerely hope that AFFiNE resonates with you! üéµ Checking https://affine.pro/ for more details ions.

## Contributing

| Bug Reports                                                                                                                                         | Feature Requests                                                                                                                                               | Questions/Discussions                                                         | AFFiNE Community                                          |
| --------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------- | --------------------------------------------------------- |
| [Create a bug report](https://github.com/toeverything/AFFiNE/issues/new?assignees=&amp;labels=bug%2Cproduct-review&amp;template=BUG-REPORT.yml&amp;title=TITLE) | [Submit a feature request](https://github.com/toeverything/AFFiNE/issues/new?assignees=&amp;labels=feat%2Cproduct-review&amp;template=FEATURE-REQUEST.yml&amp;title=TITLE) | [Check GitHub Discussion](https://github.com/toeverything/AFFiNE/discussions) | [Vist the AFFiNE Community](https://community.affine.pro) |
| Something isn&#039;t working as expected                                                                                                                 | An idea for a new feature, or improvements                                                                                                                     | Discuss and ask questions                                                     | A place to ask, learn and engage with others              |

Calling all developers, testers, tech writers and more! Contributions of all types are more than welcome, you can read more in [docs/types-of-contributions.md](docs/types-of-contributions.md). If you are interested in contributing code, read our [docs/CONTRIBUTING.md](docs/CONTRIBUTING.md) and feel free to check out our GitHub issues to get stuck in to show us what you‚Äôre made of.

**Before you start contributing, please make sure you have read and accepted our [Contributor License Agreement]. To indicate your agreement, simply edit this file and submit a pull request.**

For **bug reports**, **feature requests** and other **suggestions** you can also [create a new issue](https://github.com/toeverything/AFFiNE/issues/new/choose) and choose the most appropriate template for your feedback.

For **translation** and **language support** you can visit our [i18n General Space](https://community.affine.pro/c/i18n-general).

Looking for **other ways to contribute** and wondering where to start? Check out the [AFFiNE Ambassador program](https://community.affine.pro/c/start-here/affine-ambassador), we work closely with passionate community members and provide them with a wide range of support and resources.

If you have questions, you are welcome to contact us. One of the best places to get more info and learn more is in the [AFFiNE Community](https://community.affine.pro) where you can engage with other like-minded individuals.

## Templates

AFFiNE now provides pre-built [templates](https://affine.pro/templates) from our team. Following are the Top 10 most popular templates among AFFiNE users,if you want to contribute, you can contribute your own template so other people can use it too.

- [vision board template](https://affine.pro/templates/category-vision-board-template)
- [one pager template](https://affine.pro/templates/category-one-pager-template-free)
- [sample lesson plan math template](https://affine.pro/templates/sample-lesson-plan-math-template)
- [grr lesson plan template free](https://affine.pro/templates/grr-lesson-plan-template-free)
- [free editable lesson plan template for pre k](https://affine.pro/templates/free-editable-lesson-plan-template-for-pre-k)
- [high note collection planners](https://affine.pro/templates/high-note-collection-planners)
- [digital planner](https://affine.pro/templates/category-digital-planner)
- [ADHD Planner](https://affine.pro/templates/adhd-planner)
- [Reading Log](https://affine.pro/templates/reading-log)
- [Cornell Notes Template](https://affine.pro/templates/category-cornell-notes-template)

## Blog

Welcome to the AFFiNE blog section! Here, you‚Äôll find the latest insights, tips, and guides on how to maximize your experience with AFFiNE and AFFiNE AI, the leading Canvas AI tool for flexible note-taking and creative organization.

- [vision board template](https://affine.pro/blog/8-free-printable-vision-board-templates-examples-2023)
- [ai homework helper](https://affine.pro/blog/ai-homework-helper)
- [vision board maker](https://affine.pro/blog/vision-board-maker)
- [itinerary template](https://affine.pro/blog/free-customized-travel-itinerary-planner-templates)
- [one pager template](https://affine.pro/blog/top-12-one-pager-examples-how-to-create-your-own)
- [cornell notes template](https://affine.pro/blog/the-cornell-notes-template-and-system-learning-tips)
- [swot chart template](https://affine.pro/blog/top-10-free-editable-swot-analysis-template-examples)
- [apps like luna task](https://affine.pro/blog/apps-like-luna-task)
- [note taking ai from rough notes to mind map](https://affine.pro/blog/dynamic-AI-notes)
- [canvas ai](https://affine.pro/blog/best-canvas-ai)
- [one pager](https://affine.pro/blog/top-12-one-pager-examples-how-to-create-your-own)
- [SOP Template](https://affine.pro/blog/how-to-write-sop-step-by-step-guide-5-best-free-tools-templates)
- [Chore Chart](https://affine.pro/blog/10-best-free-chore-chart-templates-kids-adults)

## Ecosystem

| Name                                             |                            |                                                                                                                                         |
| ------------------------------------------------ | -------------------------- | --------------------------------------------------------------------------------------------------------------------------------------- |
| [@affine/component](packages/frontend/component) | AFFiNE Component Resources | ![](https://img.shields.io/codecov/c/github/toeverything/affine?style=flat-square)                                                      |
| [@toeverything/theme](packages/common/theme)     | AFFiNE theme               | [![](https://img.shields.io/npm/dm/@toeverything/theme?style=flat-square&amp;color=eee)](https://www.npmjs.com/package/@toeverything/theme) |

## Upstreams

We would also like to give thanks to open-source projects that make AFFiNE possible:

- [Blocksuite](https://github.com/toeverything/BlockSuite) - üí† BlockSuite is the open-source collaborative editor project behind AFFiNE.
- [OctoBase](https://github.com/toeverything/OctoBase) - üêô OctoBase is the open-source database behind AFFiNE, local-first, yet collaborative. A light-weight, scalable, data engine written in Rust.
- [yjs](https://github.com/yjs/yjs) - Fundamental support of CRDTs for our implementation on state management and data sync.
- [electron](https://github.com/electron/electron) - Build cross-platform desktop apps with JavaScript, HTML, and CSS.
- [React](https://github.com/facebook/react) - The library for web and native user interfaces.
- [napi-rs](https://github.com/napi-rs/napi-rs) - A framework for building compiled Node.js add-ons in Rust via Node-API.
- [Jotai](https://github.com/pmndrs/jotai) - Primitive and flexible state management for React.
- [async-call-rpc](https://github.com/Jack-Works/async-call-rpc) - A lightweight JSON RPC client &amp; server.
- [Vite](https://github.com/vitejs/vite) - Next generation frontend tooling.
- Other upstream [dependencies](https://github.com/toeverything/AFFiNE/network/dependencies).

Thanks a lot to the community for providing such powerful and simple libraries, so that we can focus more on the implementation of the product logic, and we hope that in the future our projects will also provide a more easy-to-use knowledge base for everyone.

## Contributors

We would like to express our gratitude to all the individuals who have already contributed to AFFiNE! If you have any AFFiNE-related project, documentation, tool or template, please feel free to contribute it by submitting a pull request to our curated list on GitHub: [awesome-affine](https://github.com/toeverything/awesome-affine).

&lt;a href=&quot;https://github.com/toeverything/affine/graphs/contributors&quot;&gt;
  &lt;img alt=&quot;contributors&quot; src=&quot;https://opencollective.com/affine/contributors.svg?width=890&amp;button=false&quot; /&gt;
&lt;/a&gt;

## Self-Host

Begin with Docker to deploy your own feature-rich, unrestricted version of AFFiNE. Our team is diligently updating to the latest version. For more information on how to self-host AFFiNE, please refer to our [documentation](https://docs.affine.pro/self-host-affine).

[![Run on ClawCloud](https://raw.githubusercontent.com/ClawCloud/Run-Template/refs/heads/main/Run-on-ClawCloud.svg)](https://template.run.claw.cloud/?openapp=system-fastdeploy%3FtemplateName%3Daffine)

## Hiring

Some amazing companies, including AFFiNE, are looking for developers! Are you interested in joining AFFiNE or its partners? Check out our [Discord channel](https://affine.pro/redirect/discord) for some of the latest jobs available.

## Feature Request

For feature requests, please see [community.affine.pro](https://community.affine.pro/c/feature-requests/).

## Building

### Codespaces

From the GitHub repo main page, click the green &quot;Code&quot; button and select &quot;Create codespace on master&quot;. This will open a new Codespace with the (supposedly auto-forked
AFFiNE repo cloned, built, and ready to go.

### Local

See [BUILDING.md] for instructions on how to build AFFiNE from source code.

## Contributing

We welcome contributions from everyone.
See [docs/contributing/tutorial.md](./docs/contributing/tutorial.md) for details.

## Thanks

&lt;a href=&quot;https://www.chromatic.com/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/321738/84662277-e3db4f80-af1b-11ea-88f5-91d67a5e59f6.png&quot; width=&quot;153&quot; height=&quot;30&quot; alt=&quot;Chromatic&quot; /&gt;&lt;/a&gt;

Thanks to [Chromatic](https://www.chromatic.com/) for providing the visual testing platform that helps us review UI changes and catch visual regressions.

## License

### Editions

- AFFiNE Community Edition (CE) is the current available version, it&#039;s free for self-host under the MIT license.

- AFFiNE Enterprise Edition (EE) is yet to be published, it will have more advanced features and enterprise-oriented offerings, including but not exclusive to rebranding and SSO, advanced admin and audit, etc., you may refer to https://affine.pro/pricing for more information

See [LICENSE] for details.

[all-contributors-badge]: https://img.shields.io/github/contributors/toeverything/AFFiNE
[license]: ./LICENSE
[building.md]: ./docs/BUILDING.md
[update page]: https://affine.pro/blog?tag=Release%20Note
[jobs available]: ./docs/jobs.md
[latest packages]: https://github.com/toeverything/AFFiNE/pkgs/container/affine-self-hosted
[contributor license agreement]: https://github.com/toeverything/affine/edit/canary/.github/CLA.md
[stars-icon]: https://img.shields.io/github/stars/toeverything/AFFiNE.svg?style=flat&amp;logo=github&amp;colorB=red&amp;label=stars
[codecov]: https://codecov.io/gh/toeverything/affine/branch/canary/graphs/badge.svg?branch=canary
[node-version-icon]: https://img.shields.io/badge/node-%3E=18.16.1-success
[typescript-version-icon]: https://img.shields.io/github/package-json/dependency-version/toeverything/affine/dev/typescript
[react-version-icon]: https://img.shields.io/github/package-json/dependency-version/toeverything/AFFiNE/react?filename=packages%2Ffrontend%2Fcore%2Fpackage.json&amp;color=rgb(97%2C228%2C251)
[blocksuite-icon]: https://img.shields.io/github/package-json/dependency-version/toeverything/AFFiNE/@blocksuite/store?color=6880ff&amp;filename=packages%2Ffrontend%2Fcore%2Fpackage.json&amp;label=blocksuite
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[directus/directus]]></title>
            <link>https://github.com/directus/directus</link>
            <guid>https://github.com/directus/directus</guid>
            <pubDate>Mon, 07 Jul 2025 00:05:15 GMT</pubDate>
            <description><![CDATA[The flexible backend for all your projects üê∞ Turn your DB into a headless CMS, admin panels, or apps with a custom UI, instant APIs, auth & more.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/directus/directus">directus/directus</a></h1>
            <p>The flexible backend for all your projects üê∞ Turn your DB into a headless CMS, admin panels, or apps with a custom UI, instant APIs, auth & more.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 31,433</p>
            <p>Forks: 4,280</p>
            <p>Stars today: 229 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[chrisvel/tududi]]></title>
            <link>https://github.com/chrisvel/tududi</link>
            <guid>https://github.com/chrisvel/tududi</guid>
            <pubDate>Mon, 07 Jul 2025 00:05:14 GMT</pubDate>
            <description><![CDATA[Self-hosted task management with hierarchical organization, multi-language support, and Telegram integration. Built with React & Express.js]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/chrisvel/tududi">chrisvel/tududi</a></h1>
            <p>Self-hosted task management with hierarchical organization, multi-language support, and Telegram integration. Built with React & Express.js</p>
            <p>Language: TypeScript</p>
            <p>Stars: 705</p>
            <p>Forks: 35</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre># üìù tududi

`tududi` is the self-hosted task management tool that puts you in control. Organize your life and projects with a clear, hierarchical structure,
smart recurring tasks, and seamless Telegram integration. Get focused, stay productive, and keep your data private.

![Light Mode Screenshot](screenshots/all-light.png)

![Dark Mode Screenshot](screenshots/all-dark.png)

![Light Mobile Screenshot](screenshots/mobile-all-light.png)

![Dark Mobile Screenshot](screenshots/mobile-all-dark.png)

## üöÄ How It Works

This app allows users to manage their tasks, projects, areas, notes, and tags in an organized way. Users can create tasks, projects, areas (to group projects), notes, and tags. Each task can be associated with a project, and both tasks and notes can be tagged for better organization. Projects can belong to areas and can also have multiple notes and tags. This structure helps users categorize and track their work efficiently, whether they‚Äôre managing individual tasks, larger projects, or keeping detailed notes.

## üß† Philosophy

For the thinking behind Tududi, read [Designing a Life Management System That Doesn&#039;t Fight Back](https://example.com/designing-a-life-management-system-that-doesnt-fight-back)

## ‚ú® Features

- **Task Management**: Create, update, and delete tasks. Mark tasks as completed and view them by different filters (Today, Upcoming, Someday). Order them by Name, Due Date, Date Created, or Priority.
- **Recurring Tasks**: Comprehensive recurring task system with intelligent parent-child relationships:
  - **Multiple Recurrence Patterns**: Daily, weekly, monthly, monthly on specific weekdays, and monthly last day
  - **Completion-Based Recurrence**: Option to repeat based on completion date rather than due date
  - **Smart Parent-Child Linking**: Generated task instances maintain connection to their original recurring pattern
  - **Direct Parent Editing**: Edit recurrence settings directly from any generated task instance
  - **Flexible Scheduling**: Set custom intervals (every 2 weeks, every 3 months, etc.)
  - **End Date Control**: Optional end dates for recurring series
- **Quick Notes**: Create, update, delete, or assign text notes to projects.
- **Tags**: Create tags for tasks and notes to enhance organization.
- **Project Tracking**: Organize tasks into projects. Each project can contain multiple tasks and/or multiple notes.
- **Area Categorization**: Group projects into areas for better organization and focus.
- **Due Date Tracking**: Set due dates for tasks and view them based on due date categories.
- **Responsive Design**: Accessible from various devices, ensuring a consistent experience across desktops, tablets, and mobile phones.
- **Multi-Language Support**: Available in multiple languages including English, German (de), Greek (el), Spanish (es), Japanese (jp), and Ukrainian (ua) among others.
- **Telegram Integration**:
  - Create tasks directly through Telegram messages
  - Receive daily digests of your tasks
  - Quick capture of ideas and todos on the go
  - Secure bot token management with polling controls

## üîÑ Recurring Tasks

Tududi features a sophisticated recurring task system designed to handle complex scheduling needs while maintaining an intuitive user experience.

### Recurrence Patterns

- **Daily**: Repeat every N days
- **Weekly**: Repeat every N weeks, optionally on specific weekdays
- **Monthly**: Repeat every N months on a specific date
- **Monthly Weekday**: Repeat on the Nth occurrence of a weekday (e.g., &quot;2nd Tuesday of every month&quot;)
- **Monthly Last Day**: Repeat on the last day of every month

### Smart Parent-Child Relationships

When a recurring task generates new instances:
- Each generated task maintains a link to its parent recurring task
- Generated tasks display as &quot;Recurring Task Instance&quot; with inherited settings
- Users can edit the parent&#039;s recurrence pattern directly from any child task
- Changes to parent settings affect all future instances in the series

### Completion-Based Recurrence

Choose between two recurrence behaviors:
- **Due Date Based** (default): Next task scheduled based on original due date
- **Completion Based**: Next task scheduled based on when the task is actually completed

This is particularly useful for tasks like &quot;Weekly grocery shopping&quot; where you want the next instance to appear a week after you complete it, regardless of when it was originally due.

### Example Use Cases

- **Daily Habits**: &quot;Take vitamins&quot; (daily)
- **Weekly Routines**: &quot;Grocery shopping&quot; (every Sunday, completion-based)
- **Monthly Bills**: &quot;Pay rent&quot; (1st of every month)
- **Quarterly Reviews**: &quot;Team performance review&quot; (1st Monday of every 3 months)
- **Maintenance Tasks**: &quot;Change air filter&quot; (every 3 months, completion-based)

## üó∫Ô∏è Roadmap

Check out our [GitHub Project](https://github.com/users/chrisvel/projects/2) for planned features and progress.

## üõ†Ô∏è Getting Started

### Quick Start with Docker

**One simple command**, that&#039;s all it takes to run tududi with Docker.

First pull the latest image:

```bash
docker pull chrisvel/tududi:latest
```

### ‚öôÔ∏è Environment Variables

The following environment variables are used to configure tududi:

#### Required Variables:
- `TUDUDI_USER_EMAIL` - Initial admin user&#039;s email address (e.g., `admin@example.com`)
- `TUDUDI_USER_PASSWORD` - Initial admin user&#039;s password (use a strong password!)
- `TUDUDI_SESSION_SECRET` - Session encryption key (generate with `openssl rand -hex 64`)

#### Optional Variables:
- `TUDUDI_INTERNAL_SSL_ENABLED` - Set to &#039;true&#039; if using HTTPS internally (default: false)
- `TUDUDI_ALLOWED_ORIGINS` - Controls CORS access for different deployment scenarios:
  - Not set: Only allows localhost origins
  - Specific domains: `https://tududi.com,http://localhost:3002`
  - Allow all (development only): Set to empty string `&quot;&quot;`

#### Common Configuration Examples:

##### Local Development
```bash
export TUDUDI_USER_EMAIL=dev@local.test
export TUDUDI_USER_PASSWORD=devpassword123
export TUDUDI_SESSION_SECRET=$(openssl rand -hex 64)
export TUDUDI_INTERNAL_SSL_ENABLED=false
# TUDUDI_ALLOWED_ORIGINS not set - defaults to localhost only
```

##### Production with Reverse Proxy
```bash
export TUDUDI_USER_EMAIL=admin@yourdomain.com
export TUDUDI_USER_PASSWORD=your-secure-password-here
export TUDUDI_SESSION_SECRET=$(openssl rand -hex 64)
export TUDUDI_INTERNAL_SSL_ENABLED=true
export TUDUDI_ALLOWED_ORIGINS=https://tududi.yourdomain.com
```

### üöÄ Running with Docker

```bash
docker run \
  -e TUDUDI_USER_EMAIL=myemail@example.com \
  -e TUDUDI_USER_PASSWORD=mysecurepassword \
  -e TUDUDI_SESSION_SECRET=$(openssl rand -hex 64) \
  -e TUDUDI_INTERNAL_SSL_ENABLED=false \
  -e TUDUDI_ALLOWED_ORIGINS=https://tududi,http://tududi:3002 \
  -v ~/tududi_db:/app/backend/db \
  -p 3002:3002 \
  -d chrisvel/tududi:latest
```

Navigate to [http://localhost:3002](http://localhost:3002) and login with your credentials.

## üì± Telegram Integration Setup

Tududi includes built-in Telegram integration that allows you to create tasks directly from Telegram messages. This feature is optional and can be configured after installation.

### ü§ñ Creating a Telegram Bot

1. **Start a chat with @BotFather** on Telegram
2. **Create a new bot**:
   ```
   /newbot
   ```
3. **Choose a name** for your bot (e.g., &quot;My Tududi Bot&quot;)
4. **Choose a username** for your bot (must end with &quot;bot&quot;, e.g., &quot;mytududi_bot&quot;)
5. **Save the bot token** - BotFather will provide a token like `123456789:ABCdefGHIjklMNOpqrSTUvwxyz`

### ‚öôÔ∏è Configuring Telegram Integration

#### Method: Through the Web Interface (Recommended)

1. **Login to Tududi** and go to Settings
2. **Navigate to the Telegram tab**
3. **Paste your bot token** from BotFather
4. **Click &quot;Setup Telegram&quot;** - this will:
   - Validate your bot token
   - Display your bot&#039;s username
   - Provide a direct link to start chatting with your bot
5. **Start chatting** with your bot by clicking the provided link or searching for your bot in Telegram
6. **Send your first message** to your bot - it will automatically appear in your Tududi inbox!

### üîÑ How It Works

1. **Message Collection**: Tududi polls your bot every 30 seconds for new messages
2. **Automatic Inbox Creation**: Every message sent to your bot creates a new item in your Tududi inbox
3. **Duplicate Prevention**: The same message won&#039;t create multiple inbox items
4. **Processing**: You can then process inbox items into tasks, projects, or notes

### üìä Telegram Settings Overview

In the Telegram settings tab, you can:

- **Bot Setup**: Configure your bot token and view connection status
- **Polling Control**: Start/stop message polling manually
- **Bot Information**: View bot username and connection status
- **Test Integration**: Send a test message to verify connectivity
- **Task Summaries**: Enable/disable daily task summary notifications

### üîß Troubleshooting

**Bot not receiving messages:**
- Verify your bot token is correct
- Ensure you&#039;ve started a conversation with your bot in Telegram
- Check that polling is active in the Telegram settings
- Verify your server can reach Telegram&#039;s API (check firewall settings)

**Messages not appearing in inbox:**
- Check the polling status in Telegram settings
- Verify your bot token hasn&#039;t expired
- Ensure your account is properly connected to the bot

**Bot setup failing:**
- Double-check your bot token format (should be like `123456789:ABCdefGHIjklMNOpqrSTUvwxyz`)
- Verify your bot is active and not deleted
- Check your internet connection

### üîí Security Considerations

- **Bot tokens are stored securely** in your local database
- **Only you can send messages** to your bot (private by default)
- **No data is shared** with third parties - everything runs on your self-hosted instance
- **Tokens are encrypted** in transit and at rest

### üö´ Disabling Telegram Integration

To completely disable Telegram integration:

1. **Via Interface**: Simply don&#039;t configure a bot token in the settings
2. **Remove Bot Token**: Delete your bot token from the Telegram settings to stop all integration

### üîë Authentication

The application uses session-based authentication with secure cookies. For development:
- Frontend runs on port 8080 with webpack dev server
- Backend runs on port 3001 and handles authentication
- CORS is configured to allow cross-origin requests during development
- In production (Docker), both frontend and backend run on the same port (3002)

## üöß Development

### Prerequisites

Before you begin, ensure you have the following installed:
- Node.js (version 20 or higher)
- Express.js
- SQLite3
- npm
- ReactJS

### üèó Installation

To install `tududi`, follow these steps:

1. Clone the repository:
   ```bash
   git clone https://github.com/chrisvel/tududi.git
   ```
2. Navigate to the project directory:
   ```bash
   cd tududi
   ```
3. Install the required dependencies:
   ```bash
   # Install frontend dependencies
   npm install
   
   # Install backend dependencies
   cd backend
   npm install
   cd ..
   ```

### üîí SSL Setup (Optional)

For HTTPS support, create SSL certificates:

1. Create and enter the directory:
   ```bash
   mkdir backend/certs
   cd backend/certs
   ```
2. Create the key and cert:
   ```bash
   openssl genrsa -out server.key 2048
   openssl req -new -x509 -key server.key -out server.crt -days 365
   cd ../..
   ```

### üìÇ Database Setup

The database will be automatically initialized when you start the Express backend. For manual database operations:

```bash
cd backend

# Initialize database (creates tables, drops existing data)
npm run db:init

# Sync database (creates tables if they don&#039;t exist)
npm run db:sync

# Migrate database (alters existing tables to match models)
npm run db:migrate

# Reset database (drops and recreates all tables)
npm run db:reset

# Check database status and connection
npm run db:status

cd ..
```

### üîÑ Database Migrations

For schema changes, use Sequelize migrations (similar to Rails/Ruby migrations):

```bash
cd backend

# Create a new migration
npm run migration:create add-description-to-tasks

# Run pending migrations
npm run migration:run

# Check migration status
npm run migration:status

# Rollback last migration
npm run migration:undo

# Rollback all migrations
npm run migration:undo:all

cd ..
```

#### Creating a New Migration Example:
```bash
# 1. Create the migration file
npm run migration:create add-priority-to-projects

# 2. Edit the generated file in migrations/ folder:
# - Add your schema changes in the &#039;up&#039; function
# - Add rollback logic in the &#039;down&#039; function

# 3. Run the migration
npm run migration:run
```

### üë§ User Setup

#### For Development

Set environment variables to automatically create the initial user:

```bash
export TUDUDI_USER_EMAIL=dev@example.com
export TUDUDI_USER_PASSWORD=password123
export TUDUDI_SESSION_SECRET=$(openssl rand -hex 64)
```

Or create a user manually:
```bash
cd backend
npm run user:create dev@example.com password123
cd ..
```

#### Default Development Credentials

If no environment variables are set, you can use the default development credentials:
- Email: `dev@example.com`  
- Password: `password123`

### üöÄ Usage

To start the application for development:

1. **Start the Express backend** (in one terminal):
   ```bash
   cd backend
   npm run dev    # Development mode with auto-reload
   # Or: npm start  # Production mode
   ```
   The backend will run on `http://localhost:3001`

2. **Start the frontend development server** (in another terminal):
   ```bash
   npm run dev
   ```
   The frontend will run on `http://localhost:8080`

3. **Access the application**: Open your browser to `http://localhost:8080`

### Port Configuration

- **Development Frontend**: `http://localhost:8080` (webpack dev server)
- **Development Backend**: `http://localhost:3001` (Express API server)
- **Docker/Production**: `http://localhost:3002` (combined frontend + backend)

The webpack dev server automatically proxies API calls and locales to the backend server.

### üîç Testing 

To run tests:

```bash
# Backend tests
cd backend
npm test

# Frontend tests  
cd ..
npm test
```

#### Test Coverage

The application includes comprehensive test coverage for:
- **Backend API endpoints** (tasks, projects, areas, notes, tags, auth)
- **Database models and migrations**
- **Recurring task service and date calculations**
- **Frontend components and utilities**
- **Authentication and session management**

**Note**: Comprehensive test coverage for the new recurring tasks functionality is planned and will include:
- Recurring task generation algorithms
- Parent-child relationship management
- Date calculation edge cases
- Frontend recurring task components
- Integration tests for complete recurring task workflows

The application has been fully migrated from Ruby/Sinatra to a functional programming Express.js implementation.

## ü§ù Contributing

Contributions to `tududi` are welcome. To contribute:

1. Fork the repository.
2. Create a new branch (\`git checkout -b feature/AmazingFeature\`).
3. Make your changes.
4. Commit your changes (\`git commit -m &#039;Add some AmazingFeature&#039;\`).
5. Push to the branch (\`git push origin fexature/AmazingFeature\`).
6. Open a pull request.

## üìú License

This project is licensed for free personal use, with consent required for commercial use. Refer to the LICENSE for further details.

## üì¨ Contact

For questions or comments, please [open an issue](https://github.com/chrisvel/tududi/issues) or contact the developer directly.

Join the tududi community:

[![Discord](https://img.shields.io/discord/1234567890?color=7289da&amp;label=Discord&amp;logo=discord&amp;logoColor=white&amp;style=for-the-badge)](https://discord.gg/fkbeJ9CmcH)  
[![Reddit](https://img.shields.io/reddit/subreddit-subscribers/tududi?color=ff4500&amp;label=Reddit&amp;logo=reddit&amp;logoColor=white&amp;style=for-the-badge)](https://www.reddit.com/r/tududi/)

## üåü Please check my other projects!

- **[Reconya](https://reconya.com)** - Network reconnaissance and asset discovery tool
- **[BreachHarbor](https://breachharbor.com)** - Cybersecurity suite for digital asset protection  
- **[Hevetra](https://hevetra.com)** - Digital tracking for child health milestones

---

README created by [Chris Veleris](https://github.com/chrisvel) for `tududi`.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[maurodesouza/profile-readme-generator]]></title>
            <link>https://github.com/maurodesouza/profile-readme-generator</link>
            <guid>https://github.com/maurodesouza/profile-readme-generator</guid>
            <pubDate>Mon, 07 Jul 2025 00:05:13 GMT</pubDate>
            <description><![CDATA[üé® Enhance your GitHub profile with this amazing tool, which allows you to create a personalized README quickly and easily. This profile README generator is the best you'll find üöÄ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/maurodesouza/profile-readme-generator">maurodesouza/profile-readme-generator</a></h1>
            <p>üé® Enhance your GitHub profile with this amazing tool, which allows you to create a personalized README quickly and easily. This profile README generator is the best you'll find üöÄ</p>
            <p>Language: TypeScript</p>
            <p>Stars: 2,127</p>
            <p>Forks: 461</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot; id=&quot;top&quot;&gt;
  &lt;img src=&quot;https://profile-readme-generator.com/assets/app.png&quot; width=&quot;900&quot; alt=&quot;Profile Readme Generator&quot; /&gt;

  &lt;a href=&quot;https://profile-readme-generator.com&quot;&gt;Demo&lt;/a&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;h1&gt;Profile Readme Generator&lt;/h1&gt;
  &lt;h3&gt;The best profile readme generator you will find!&lt;/h3&gt;
&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/fork&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/forks/maurodesouza/profile-readme-generator?&quot; alt=&quot;Badge showing the total of project forks&quot;/&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/stargazers&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/stars/maurodesouza/profile-readme-generator?&quot; alt=&quot;Badge showing the total of project stars&quot;/&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/commits/main&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/commit-activity/m/maurodesouza/profile-readme-generator?&quot; alt=&quot;Badge showing average commit frequency per month&quot;/&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/commits/main&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/last-commit/maurodesouza/profile-readme-generator?&quot; alt=&quot;Badge showing when the last commit was made&quot;/&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/issues&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/issues/maurodesouza/profile-readme-generator?&quot; alt=&quot;Badge showing the total of project issues&quot;/&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/pulls&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/issues-pr/maurodesouza/profile-readme-generator?&quot; alt=&quot;Badge showing the total of project pull-requests&quot;/&gt;
  &lt;/a&gt;

  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/blob/master/LICENSE.md&quot; target=&quot;_blank&quot;&gt;
    &lt;img alt=&quot;Badge showing project license type&quot; src=&quot;https://img.shields.io/github/license/maurodesouza/profile-readme-generator?color=f85149&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;


&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;#dart-about&quot;&gt;About&lt;/a&gt; &amp;#xa0; | &amp;#xa0;
  &lt;a href=&quot;#rocket-main-technologies&quot;&gt;Technologies&lt;/a&gt; &amp;#xa0; | &amp;#xa0;
  &lt;a href=&quot;#white_check_mark-requirements&quot;&gt;Requirements&lt;/a&gt; &amp;#xa0; | &amp;#xa0;
  &lt;a href=&quot;#checkered_flag-starting&quot;&gt;Starting&lt;/a&gt; &amp;#xa0; | &amp;#xa0;
  &lt;a href=&quot;https://github.com/maurodesouza/profile-readme-generator/blob/main/.github/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt;
&lt;/p&gt;

## :dart: About ##

Are you tired of manually editing your GitHub profile or missing out on the amazing features you can add to it? üò© Configuring GitHub actions can also be a hassle, right? Say no more! üí™

**Introducing a tool that lets you beautify your GitHub profile with a customized README, easily and in no time!** ‚ú® You can include whatever content you want, wherever you want it (*within the limitations of markdown, of course*). üìù

**With this amazing tool, creating your own README has never been so simple and fast.** ‚ö° You can save time and focus on what really matters - showcasing your skills and projects. üöÄ

**Don&#039;t miss out on the opportunity to enhance your GitHub profile.** Give it a try and see for yourself how easy and convenient it is! üòâ


&lt;p align=&quot;center&quot;&gt;
&lt;i&gt;Loved the tool? Please consider &lt;a href=&quot;https://www.paypal.com/donate/?hosted_button_id=FR3A2DGVYKGJS&quot;&gt;donating üí∏&lt;/a&gt; to support its continuous&lt;br/&gt; improvement and development!&lt;/i&gt;
&lt;/p&gt;

https://user-images.githubusercontent.com/54520907/173442002-dafc63ea-321f-4ce2-b349-be490b3a00ff.mp4

## :rocket: Main Technologies ##

&lt;a href=&quot;https://nextjs.org&quot;&gt;
  &lt;img width=&quot;50&quot; title=&quot;NextJs&quot; alt=&quot;Next Logo&quot; src=&quot;https://raw.githubusercontent.com/maurodesouza/maurodesouza/master/assets/next-logo.svg&quot;&gt;
&lt;/a&gt; &amp;#xa0; &amp;#xa0;

&lt;a href=&quot;https://www.typescriptlang.org&quot;&gt;
  &lt;img width=&quot;50&quot; title=&quot;Typescript&quot; alt=&quot;Typescript Logo&quot; src=&quot;https://raw.githubusercontent.com/maurodesouza/maurodesouza/master/assets/typescript-logo.svg&quot;&gt;
&lt;/a&gt; &amp;#xa0; &amp;#xa0;

&lt;a href=&quot;https://tailwindcss.com&quot;&gt;
  &lt;img width=&quot;50&quot; title=&quot;Styled Components&quot; alt=&quot;Styled Components Logo&quot; src=&quot;https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/tailwind/tailwind.png&quot;&gt;
&lt;/a&gt; &amp;#xa0; &amp;#xa0;

&lt;a href=&quot;https://jestjs.io&quot;&gt;
  &lt;img width=&quot;50&quot; title=&quot;Jest&quot; alt=&quot;Jest Logo&quot; src=&quot;https://raw.githubusercontent.com/maurodesouza/maurodesouza/master/assets/jest-logo.svg&quot;&gt;
&lt;/a&gt; &amp;#xa0; &amp;#xa0;

&lt;a href=&quot;https://eslint.org&quot;&gt;
  &lt;img  width=&quot;50&quot; title=&quot;Eslint&quot; alt=&quot;Eslint Logo&quot; src=&quot;https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/eslint/eslint.png&quot;&gt;
&lt;/a&gt; &amp;#xa0; &amp;#xa0;

&lt;a href=&quot;https://prettier.io&quot;&gt;
  &lt;img width=&quot;50&quot; title=&quot;Prettier&quot; alt=&quot;Prettier Logo&quot; src=&quot;https://prettier.io/icon.png&quot;&gt;
&lt;/a&gt;

###

&lt;details&gt;
  &lt;summary&gt;See more&lt;/summary&gt;

  ###

  * [Shadcn](https://ui.shadcn.com)
  * [Radix](https://www.radix-ui.com)
  * [Lucid Icons](https://lucide.dev)
  * [clsx](https://github.com/lukeed/clsx#readme)
  * [Tailwind Merge](https://github.com/dcastil/tailwind-merge#readme)
  * [Tailwind Variants](https://www.tailwind-variants.org)
  * [Framer Motion](https://framer.com/motion/)
  * [Prismjs](https://prismjs.com)
  * [HTML Prettify](https://github.com/Dmc0125/html-prettify#readme)
  * [React Share](https://github.com/nygardk/react-share)
  * [React Markdown](https://github.com/remarkjs/react-markdown#readme)
  * [UUID](https://github.com/uuidjs/uuid#readme)

&lt;/details&gt;

## :white_check_mark: Requirements ##

Before starting :checkered_flag:, make sure you have [Git](https://git-scm.com) and [Node](https://nodejs.org/en/) installed on your system. ([nvm](https://github.com/nvm-sh/nvm#node-version-manager---) recommended).

## :checkered_flag: Starting ##

```bash
# Clone this project
$ git clone https://github.com/maurodesouza/profile-readme-generator

# Access
$ cd profile-readme-generator

# Install dependencies
$ yarn

# Run the project
$ yarn dev

# The server will initialize in the &lt;http://localhost:3000&gt;
```

## :video_game: Scripts

- `dev`: starts the application at `localhost:3000`;
- `build`: creates an optimized production build of the application;
- `start`: starts the application in production mode at localhost:3000 (make sure to run the build first);
- `test`: runs the tests;
- `lint`: runs eslint in the /src directory.

## :memo: License ##

This project is licensed under the MIT License. For more details, please refer to the [LICENSE](LICENSE.md) file.


Made with :heart: by &lt;a href=&quot;https://github.com/maurodesouza&quot; target=&quot;_blank&quot;&gt;Mauro de Souza&lt;/a&gt;

&amp;#xa0;

&lt;a href=&quot;#top&quot;&gt;Back to top&lt;/a&gt;

*Readme created with [Simple Readme](https://marketplace.visualstudio.com/items?itemName=maurodesouza.vscode-simple-readme)*
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[iptv-org/iptv]]></title>
            <link>https://github.com/iptv-org/iptv</link>
            <guid>https://github.com/iptv-org/iptv</guid>
            <pubDate>Mon, 07 Jul 2025 00:05:12 GMT</pubDate>
            <description><![CDATA[Collection of publicly available IPTV channels from all over the world]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/iptv-org/iptv">iptv-org/iptv</a></h1>
            <p>Collection of publicly available IPTV channels from all over the world</p>
            <p>Language: TypeScript</p>
            <p>Stars: 95,119</p>
            <p>Forks: 3,703</p>
            <p>Stars today: 29 stars today</p>
            <h2>README</h2><pre># IPTV [![update](https://github.com/iptv-org/iptv/actions/workflows/update.yml/badge.svg)](https://github.com/iptv-org/iptv/actions/workflows/update.yml)

Collection of publicly available IPTV (Internet Protocol television) channels from all over the world.

## Table of contents

- üöÄ [How to use?](#how-to-use)
- üì∫ [Playlists](#playlists)
- üóì [EPG](#epg)
- üóÑ [Database](#database)
- üë®‚Äçüíª [API](#api)
- üìö [Resources](#resources)
- üí¨ [Discussions](#discussions)
- ‚ùì [FAQ](#faq)
- üõ† [Contribution](#contribution)
- ‚öñ [Legal](#legal)
- ¬© [License](#license)

## How to use?

Simply insert one of the links below into [any video player](https://github.com/iptv-org/awesome-iptv#apps) that supports live streaming and press _Open_.

![VLC Network Panel](https://github.com/iptv-org/iptv/raw/master/.readme/preview.png)

## Playlists

There are several versions of playlists that differ in the way they are grouped. As of January 30th, 2024, we have stopped distributing NSFW channels. For more information, please look at [this issue](https://github.com/iptv-org/iptv/issues/15723).

### Main playlist

This playlist includes all known channels available in this repository.

```
https://iptv-org.github.io/iptv/index.m3u
```

### Grouped by category

Playlists in which channels are grouped by category. A list of all supported categories with descriptions can be found [here](.readme/supported-categories.md).

&lt;details&gt;
&lt;summary&gt;Expand&lt;/summary&gt;
&lt;br&gt;

```
https://iptv-org.github.io/iptv/index.category.m3u
```

Same thing, but split up into separate files:

&lt;!-- prettier-ignore --&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;&lt;th align=&quot;left&quot;&gt;Category&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Channels&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Playlist&lt;/th&gt;&lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;&lt;td&gt;Animation&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;45&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/animation.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Auto&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;18&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/auto.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Business&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;64&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/business.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Classic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;44&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/classic.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Comedy&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;81&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/comedy.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Cooking&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;31&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/cooking.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Culture&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;162&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/culture.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Documentary&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;116&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/documentary.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Education&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;161&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/education.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Entertainment&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;573&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/entertainment.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Family&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;50&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/family.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;General&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2287&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/general.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Kids&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;257&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/kids.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Legislative&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;190&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/legislative.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Lifestyle&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;99&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/lifestyle.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Movies&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;316&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/movies.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Music&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;619&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/music.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;News&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;771&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/news.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Outdoor&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;49&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/outdoor.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Relax&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/relax.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Religious&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;702&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/religious.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Science&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;25&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/science.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Series&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;256&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/series.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Shop&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;88&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/shop.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Sports&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;289&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/sports.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Travel&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;43&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/travel.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Weather&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/weather.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;XXX&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;0&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/xxx.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Undefined&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;3755&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/undefined.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;/details&gt;

### Grouped by language

Playlists in which channels are grouped by the language in which they are broadcast.

&lt;details&gt;
&lt;summary&gt;Expand&lt;/summary&gt;
&lt;br&gt;

```
https://iptv-org.github.io/iptv/index.language.m3u
```

Same thing, but split up into separate files:

&lt;!-- prettier-ignore --&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;&lt;th align=&quot;left&quot;&gt;Language&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Channels&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Playlist&lt;/th&gt;&lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Acoli&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ach.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Adhola&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/adh.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Afar&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/aar.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Afrikaans&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/afr.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Albanian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;66&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/sqi.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Algerian Sign Language&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/asp.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Alur&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/alz.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Amharic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/amh.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Arabic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;430&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ara.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Armenian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;29&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hye.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Assamese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/asm.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Assyrian Neo-Aramaic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/aii.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Ayizo Gbe&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ayb.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Aymara&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/aym.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Azerbaijani&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;17&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/aze.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Baatonum&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bba.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bambara&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bam.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bashkir&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bak.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Basque&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/eus.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Belarusian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bel.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bengali&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;32&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ben.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bhojpuri&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bho.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bosnian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;15&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bos.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bulgarian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;29&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bul.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Burmese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/mya.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Catalan&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;52&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/cat.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Central Atlas Tamazight&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/tzm.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Central Kurdish&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ckb.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Chhattisgarhi&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hne.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Chiga&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/cgg.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Chinese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;218&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/zho.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Croatian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;29&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hrv.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Czech&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;41&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ces.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Danish&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;21&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/dan.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dari (Parsi)&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;18&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/prd.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dendi (Benin)&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ddn.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dhanwar (Nepal)&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/dhw.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dhivehi&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/div.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dholuo&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/luo.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dimili&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/zza.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dutch&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;184&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/nld.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Egyptian Arabic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/arz.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;English&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2297&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/eng.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Estonian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/est.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Ewe&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ewe.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Faroese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fao.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Fataleka&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/far.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Filipino&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fil.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Finnish&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;29&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fin.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Fon&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fon.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;French&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;437&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fra.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Fulah&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ful.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Gaelic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/gla.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Galician&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/glg.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Ganda&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/lug.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Gen&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/gej.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Georgian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;22&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kat.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;German&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;346&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/deu.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Gikuyu&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kik.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Goan Konkani&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/gom.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Greek&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;128&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ell.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Guadeloupean Creole French&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/gcf.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Gujarati&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/guj.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Gun&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/guw.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Haitian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hat.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Hausa&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hau.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Hebrew&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;14&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/heb.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Hindi&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;130&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hin.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Hmong&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hmn.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Hungarian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;106&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hun.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Icelandic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/isl.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Indonesian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;131&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ind.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Inuktitut&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/iku.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Irish&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/gle.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Isekiri&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/its.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Italian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;344&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ita.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Japanese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;14&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/jpn.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Javanese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/jav.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kabiy√®&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kbp.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kabyle&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kab.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kannada&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;11&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kan.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kapampangan&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/pam.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kazakh&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;27&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kaz.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Khmer&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;23&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/khm.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Khorasani Turkish&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kmz.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kinyarwanda&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;cod

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Mail-0/Zero]]></title>
            <link>https://github.com/Mail-0/Zero</link>
            <guid>https://github.com/Mail-0/Zero</guid>
            <pubDate>Mon, 07 Jul 2025 00:05:11 GMT</pubDate>
            <description><![CDATA[Experience email the way you want with Mail0 ‚Äì the first open source email app that puts your privacy and safety first. Join the discord: https://discord.gg/mail0]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Mail-0/Zero">Mail-0/Zero</a></h1>
            <p>Experience email the way you want with Mail0 ‚Äì the first open source email app that puts your privacy and safety first. Join the discord: https://discord.gg/mail0</p>
            <p>Language: TypeScript</p>
            <p>Stars: 8,672</p>
            <p>Forks: 910</p>
            <p>Stars today: 20 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;picture&gt;
    &lt;source srcset=&quot;apps/mail/public/white-icon.svg&quot; media=&quot;(prefers-color-scheme: dark)&quot;&gt;
    &lt;img src=&quot;apps/mail/public/black-icon.svg&quot; alt=&quot;Zero Logo&quot; width=&quot;64&quot; style=&quot;background-color: #000; padding: 10px;&quot;/&gt;
  &lt;/picture&gt;
&lt;/p&gt;

# Zero

An Open-Source Gmail Alternative for the Future of Email

## What is Zero?

Zero is an open-source AI email solution that gives users the power to **self-host** their own email app while also integrating external services like Gmail and other email providers. Our goal is to modernize and improve emails through AI agents to truly modernize emails.

## Why Zero?

Most email services today are either **closed-source**, **data-hungry**, or **too complex to self-host**.
0.email is different:

- ‚úÖ **Open-Source** ‚Äì No hidden agendas, fully transparent.
- ü¶æ **AI Driven** - Enhance your emails with Agents &amp; LLMs.
- üîí **Data Privacy First** ‚Äì Your emails, your data. Zero does not track, collect, or sell your data in any way. Please note: while we integrate with external services, the data passed through them is not under our control and falls under their respective privacy policies and terms of service.
- ‚öôÔ∏è **Self-Hosting Freedom** ‚Äì Run your own email app with ease.
- üì¨ **Unified Inbox** ‚Äì Connect multiple email providers like Gmail, Outlook, and more.
- üé® **Customizable UI &amp; Features** ‚Äì Tailor your email experience the way you want it.
- üöÄ **Developer-Friendly** ‚Äì Built with extensibility and integrations in mind.

## Tech Stack

Zero is built with modern and reliable technologies:

- **Frontend**: Next.js, React, TypeScript, TailwindCSS, Shadcn UI
- **Backend**: Node.js, Drizzle ORM
- **Database**: PostgreSQL
- **Authentication**: Better Auth, Google OAuth
&lt;!-- - **Testing**: Jest, React Testing Library --&gt;

## Getting Started

### Video Tutorial

Watch this helpful video tutorial on how to set up Zero locally:

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.youtube.com/watch?v=yIXLQcjbeEM&quot;&gt;
    &lt;img src=&quot;https://img.youtube.com/vi/yIXLQcjbeEM/0.jpg&quot; alt=&quot;Zero Setup Tutorial&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

### Prerequisites

**Required Versions:**

- [Node.js](https://nodejs.org/en/download) (v18 or higher)
- [pnpm](https://pnpm.io) (v10 or higher)
- [Docker](https://docs.docker.com/engine/install/) (v20 or higher)

Before running the application, you&#039;ll need to set up services and configure environment variables. For more details on environment variables, see the [Environment Variables](#environment-variables) section.

### Setup Options

You can set up Zero in two ways:

&lt;details open&gt;
&lt;summary&gt;&lt;b&gt;Standard Setup (Recommended)&lt;/b&gt;&lt;/summary&gt;

#### Quick Start Guide

1. **Clone and Install**

   ```bash
   # Clone the repository
   git clone https://github.com/Mail-0/Zero.git
   cd Zero

   # Install dependencies
   pnpm install

   # Start database locally
   pnpm docker:db:up
   ```

2. **Set Up Environment**

   - Run `pnpm nizzy env` to setup your environment variables
   - Run `pnpm nizzy sync` to sync your environment variables and types
   - Start the database with the provided docker compose setup: `pnpm docker:db:up`
   - Initialize the database: `pnpm db:push`

3. **Start the App**

   ```bash
   pnpm dev
   ```

4. **Open in Browser**

   Visit [http://localhost:3000](http://localhost:3000)
   &lt;/details&gt;

&lt;details open&gt;
&lt;summary&gt;&lt;b&gt;Devcontainer Setup&lt;/b&gt;&lt;/summary&gt;

#### Quick Start guide

1. **Clone and Install**

   ```bash
   # Clone the repository
   git clone https://github.com/Mail-0/Zero.git
   cd Zero
   ```

   Then open the code in devcontainer and install the dependencies:

   ```
   pnpm install

   # Start the database locally
   pnpm docker:db:up
   ```

2. **Set Up Environment**

   - Run `pnpm nizzy env` to setup your environment variables
   - Run `pnpm nizzy sync` to sync your environment variables and types
   - Start the database with the provided docker compose setup: `pnpm docker:db:up`
   - Initialize the database: `pnpm db:push`

3. **Start The App**
   ```bash
   pnpm dev
   ```
   Visit [http://localhost:3000](http://localhost:3000)
     &lt;/details&gt;

### Environment Setup

1. **Better Auth Setup**

   - Open the `.env` file and change the BETTER_AUTH_SECRET to a random string. (Use `openssl rand -hex 32` to generate a 32 character string)

     ```env
     BETTER_AUTH_SECRET=your_secret_key
     ```

2. **Google OAuth Setup** (Required for Gmail integration)

   - Go to [Google Cloud Console](https://console.cloud.google.com)
   - Create a new project
   - Add the following APIs in your Google Cloud Project: [People API](https://console.cloud.google.com/apis/library/people.googleapis.com), [Gmail API](https://console.cloud.google.com/apis/library/gmail.googleapis.com)
     - Use the links above and click &#039;Enable&#039; or
     - Go to &#039;APIs and Services&#039; &gt; &#039;Enable APIs and Services&#039; &gt; Search for &#039;Google People API&#039; and click &#039;Enable&#039;
     - Go to &#039;APIs and Services&#039; &gt; &#039;Enable APIs and Services&#039; &gt; Search for &#039;Gmail API&#039; and click &#039;Enable&#039;
   - Enable the Google OAuth2 API
   - Create OAuth 2.0 credentials (Web application type)
   - Add authorized redirect URIs:
     - Development:
       - `http://localhost:8787/api/auth/callback/google`
     - Production:
       - `https://your-production-url/api/auth/callback/google`
   - Add to `.env`:

     ```env
     GOOGLE_CLIENT_ID=your_client_id
     GOOGLE_CLIENT_SECRET=your_client_secret
     ```

   - Add yourself as a test user:

     - Go to [`Audience`](https://console.cloud.google.com/auth/audience)
     - Under &#039;Test users&#039; click &#039;Add Users&#039;
     - Add your email and click &#039;Save&#039;

&gt; [!WARNING]
&gt; The authorized redirect URIs in Google Cloud Console must match **exactly** what you configure in the `.env`, including the protocol (http/https), domain, and path - these are provided above.

3. **Autumn Setup** (Required for some encryption)

   - Go to [Autumn](https://useautumn.com/)
   - For Local Use, click [onboarding](https://app.useautumn.com/sandbox/onboarding) button and generate an Autumn Secret Key
   - For production, select the production mode from upper left corner and generate and fill the other fields. After that, generate an Autumn Secret Key

   - Add to `.env`:

   ```env
   AUTUMN_SECRET_KEY=your_autumn_secret
   ```

4. **Twilio Setup** (Required for SMS Integration)

   - Go to the [Twilio](https://www.twilio.com/)
   - Create a Twilio account if you don‚Äôt already have one
   - From the dashboard, locate your:
     - Account SID
     - Auth Token
     - Phone Number

   - Add to your `.env` file:

   ```env
   TWILIO_ACCOUNT_SID=your_account_sid
   TWILIO_AUTH_TOKEN=your_auth_token
   TWILIO_PHONE_NUMBER=your_twilio_phone_number
   ```

### Environment Variables

Run `pnpm nizzy env` to setup your environment variables. It will copy the `.env.example` file to `.env` and fill in the variables for you.
For local development a connection string example is provided in the `.env.example` file located in the same folder as the database.

### Database Setup

Zero uses PostgreSQL for storing data. Here&#039;s how to set it up:

1. **Start the Database**

   Run this command to start a local PostgreSQL instance:

   ```bash
   pnpm docker:db:up
   ```

   This creates a database with:

   - Name: `zerodotemail`
   - Username: `postgres`
   - Password: `postgres`
   - Port: `5432`

2. **Set Up Database Connection**

   Make sure your database connection string is in `.env` file. And you have ran `pnpm nizzy sync` to sync the latest env.

   For local development use:

   ```
   DATABASE_URL=&quot;postgresql://postgres:postgres@localhost:5432/zerodotemail&quot;
   ```

3. **Database Commands**

   - **Set up database tables**:

     ```bash
     pnpm db:push
     ```

   - **Create migration files** (after schema changes):

     ```bash
     pnpm db:generate
     ```

   - **Apply migrations**:

     ```bash
     pnpm db:migrate
     ```

   - **View database content**:
     ```bash
     pnpm db:studio
     ```
     &gt; If you run `pnpm dev` in your terminal, the studio command should be automatically running with the app.

## Contribute

Please refer to the [contributing guide](.github/CONTRIBUTING.md).

If you&#039;d like to help with translating Zero to other languages, check out our [translation guide](.github/TRANSLATION.md).

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=Mail-0/Zero&amp;type=Timeline)](https://www.star-history.com/#Mail-0/Zero&amp;Timeline)

## This project wouldn&#039;t be possible without these awesome companies

&lt;div style=&quot;display: flex; justify-content: center;&quot;&gt;
  &lt;a href=&quot;https://vercel.com&quot; style=&quot;text-decoration: none;&quot;&gt;
    &lt;img src=&quot;public/vercel.png&quot; alt=&quot;Vercel&quot; width=&quot;96&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://better-auth.com&quot; style=&quot;text-decoration: none;&quot;&gt;
    &lt;img src=&quot;public/better-auth.png&quot; alt=&quot;Better Auth&quot; width=&quot;96&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://orm.drizzle.team&quot; style=&quot;text-decoration: none;&quot;&gt;
    &lt;img src=&quot;public/drizzle-orm.png&quot; alt=&quot;Drizzle ORM&quot; width=&quot;96&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://coderabbit.com&quot; style=&quot;text-decoration: none;&quot;&gt;
    &lt;img src=&quot;public/coderabbit.png&quot; alt=&quot;Coderabbit AI&quot; width=&quot;96&quot;/&gt;
  &lt;/a&gt;
&lt;/div&gt;

## ü§ç The team

Curious who makes Zero? Here are our [contributors and maintainers](https://0.email/contributors)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>