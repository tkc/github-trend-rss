<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Mon, 08 Sep 2025 00:04:43 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[Kilo-Org/kilocode]]></title>
            <link>https://github.com/Kilo-Org/kilocode</link>
            <guid>https://github.com/Kilo-Org/kilocode</guid>
            <pubDate>Mon, 08 Sep 2025 00:04:43 GMT</pubDate>
            <description><![CDATA[Open Source AI coding assistant for planning, building, and fixing code. We frequently merge features from open-source projects like Roo Code and Cline, while building our own vision. Follow us: kilocode.ai/social]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Kilo-Org/kilocode">Kilo-Org/kilocode</a></h1>
            <p>Open Source AI coding assistant for planning, building, and fixing code. We frequently merge features from open-source projects like Roo Code and Cline, while building our own vision. Follow us: kilocode.ai/social</p>
            <p>Language: TypeScript</p>
            <p>Stars: 8,776</p>
            <p>Forks: 868</p>
            <p>Stars today: 305 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=kilocode.Kilo-Code&quot;&gt;&lt;img src=&quot;https://img.shields.io/visual-studio-marketplace/v/kilocode.Kilo-Code.svg?label=VS%20Code%20Marketplace&quot; alt=&quot;VS Code Marketplace&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://x.com/kilo_code&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/kilo_code?style=flat&amp;logo=x&amp;color=555&quot; alt=&quot;X (Twitter)&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://blog.kilocode.ai&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Blog-555?style=flat&amp;logo=substack&amp;logoColor=white&quot; alt=&quot;Substack Blog&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://kilocode.ai/discord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1349288496988160052?style=flat&amp;logo=discord&amp;logoColor=white&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://www.reddit.com/r/kilocode/&quot;&gt;&lt;img src=&quot;https://img.shields.io/reddit/subreddit-subscribers/kilocode?style=flat&amp;logo=reddit&amp;logoColor=white&quot; alt=&quot;Reddit&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

# üöÄ Kilo Code

&gt; Open-source VS Code AI agent. We frequently merge features from open-source projects, such as [Roo Code](https://github.com/RooVetGit/Roo-Code) and [Cline](https://github.com/cline/cline), while building our own vision.

- ‚ú® Generate code from natural language
- ‚úÖ Checks its own work
- üß™ Run terminal commands
- üåê Automate the browser
- ü§ñ Latest AI models
- üéÅ API keys optional
- üí° **Get $20 in bonus credits when you top-up for the first time** Credits can be used with 400+ models like Gemini 2.5 Pro, Claude 4 Sonnet &amp; Opus, and GPT-5

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/Kilo-Org/kilocode/refs/heads/main/kilo.gif&quot; width=&quot;100%&quot; /&gt;
&lt;/p&gt;

- [VS Code Marketplace](https://kilocode.ai/vscode-marketplace?utm_source=Readme) (download)
- [Official KiloCode.ai Home page](https://kilocode.ai) (learn more)

## Key Features

- **Code Generation:** Generate code using natural language.
- **Task Automation:** Automate repetitive coding tasks.
- **Automated Refactoring:** Refactor and improve existing code.
- **MCP Server Marketplace**: Easily find, and use MCP servers to extend the agent capabilities.
- **Multi Mode**: Plan with Architect, Code with Coder, and Debug with Debugger, and make your own custom modes.

## How to get started with Kilo Code

## How to get started with Kilo Code

1. Install the Kilo Code extension from the [VS Code Marketplace](https://marketplace.visualstudio.com/items?itemName=kilocode.Kilo-Code).
2. Create your account to access 400+ cutting-edge AI models including Gemini 2.5 Pro, Claude 4 Sonnet &amp; Opus, and GPT-5 ‚Äì with transparent pricing that matches provider rates exactly.
3. Start coding with AI that adapts to your workflow. Watch our quick-start guide to see Kilo Code in action:

[![Watch the video](https://img.youtube.com/vi/pqGfYXgrhig/maxresdefault.jpg)](https://youtu.be/pqGfYXgrhig)

## Difference between Kilo Code, Roo Code and Cline

Kilo Code started as a fork of Roo Code, which itself is a fork of Cline. We frequently merge features from these open-source projects and contribute improvements back. Built on these foundations, Kilo Code is independently developed with our own vision for AI coding agents.

- No need to fiddle with API keys, Kilo Code ships with the latest AI models plugged in, including Gemini 2.5 Pro, Claude 4 Sonnet &amp; Opus, and GPT-5
- MCP Server Marketplace: Easily find, and use MCP servers to extend the agent capabilities.
- Autocomplete (experimental)

Kilo Code is a direct fork from Roo Code, and also includes the following features from Cline (and our own features):

- System notifications: Get notified when the agent is done with a task.
- Easy model connection: batteries included.
- Editing previous messages
- Assisted commit messages: we write git commit messages for you based on what changed

## Extension Development

For details on building and developing the extension, see [DEVELOPMENT.md](/DEVELOPMENT.md)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Viren070/AIOStreams]]></title>
            <link>https://github.com/Viren070/AIOStreams</link>
            <guid>https://github.com/Viren070/AIOStreams</guid>
            <pubDate>Mon, 08 Sep 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[One addon to rule them all. AIOStreams consolidates multiple Stremio addons and debrid services into a single, highly customisable super-addon.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Viren070/AIOStreams">Viren070/AIOStreams</a></h1>
            <p>One addon to rule them all. AIOStreams consolidates multiple Stremio addons and debrid services into a single, highly customisable super-addon.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 692</p>
            <p>Forks: 601</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/Viren070/AIOStreams/main/packages/frontend/public/assets/logo.png&quot; alt=&quot;AIOStreams Logo&quot; width=&quot;200&quot;/&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;AIOStreams&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;strong&gt;One addon to rule them all.&lt;/strong&gt;
  &lt;br /&gt;
  AIOStreams consolidates multiple Stremio addons and debrid services into a single, highly customisable super-addon.
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/Viren070/AIOStreams/actions/workflows/deploy-docker.yml&quot;&gt; 
        &lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/viren070/aiostreams/deploy-docker.yml?style=for-the-badge&amp;logo=github&quot; alt=&quot;Build Status&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/Viren070/AIOStreams/releases/latest&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/github/v/release/viren070/aiostreams?style=for-the-badge&amp;logo=github&quot; alt=&quot;Latest Release&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/Viren070/AIOStreams/stargazers&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/github/stars/Viren070/AIOStreams?style=for-the-badge&amp;logo=github&quot; alt=&quot;GitHub Stars&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://hub.docker.com/r/viren070/aiostreams&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/docker/pulls/viren070/aiostreams?style=for-the-badge&amp;logo=docker&quot; alt=&quot;Docker Pulls&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://discord.viren070.me&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/badge/Discord-Join_Chat-7289DA?logo=discord&amp;logoColor=white&amp;style=for-the-badge&quot; alt=&quot;Discord Server&quot;&gt;
    &lt;/a&gt;
&lt;/p&gt;

---

## ‚ú® What is AIOStreams?

AIOStreams was created to give users ultimate control over their Stremio experience. Instead of juggling multiple addons with different configurations and limitations, AIOStreams acts as a central hub. It fetches results from all your favorite sources, then filters, sorts, and formats them according to *your* rules before presenting them in a single, clean list.

Whether you&#039;re a casual user who wants a simple, unified stream list or a power user who wants to fine-tune every aspect of your results, AIOStreams has you covered.


&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://github.com/user-attachments/assets/6179efdb-abc9-4e0c-ae11-fb0e3ca9606a&quot; alt=&quot;AIOStreams in action&quot;  width=&quot;750&quot; /&gt;
&lt;/p&gt;

## üöÄ Key Features

### üîå All Your Addons, One Interface
- **Unified Results**: Aggregate streams from multiple addons into one consistently sorted and formatted list.
- **Simplified Addon Management**: AIOStreams features a built-in addon marketplace. Many addons require you to install them multiple times to support different debrid services. AIOStreams handles this automatically. Just enable an addon from the marketplace, and AIOStreams dynamically applies your debrid keys, so you only have to configure it once.
- **Automatic Updates**: Because addon manifests are generated dynamically, you get the latest updates and fixes without ever needing to reconfigure or reinstall.
- **Custom Addon Support**: Add *any* Stremio addon by providing its configured URL. If it works in Stremio, it works here.
- **Full Stremio Support**: AIOStreams doesn&#039;t just manage streams; it supports all Stremio resources, including catalogs, metadata, and even addon catalogs.

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://github.com/user-attachments/assets/eb47063c-7519-4619-804f-ad84a34d6591&quot; alt=&quot;Addon Configuration&quot; width=&quot;750&quot;/&gt;
&lt;/p&gt;

### üî¨ Advanced Filtering &amp; Sorting Engine
Because all addons are routed through AIOStreams, you only have to **configure your filters and sorting rules once**. This powerful, centralized engine offers far more options and flexibility than any individual addon.

- **Granular Filtering**: Define `include` (prevents filtering), `required`, or `excluded` rules for a huge range of properties:
    - **Video/Audio**: Resolution, quality, encodes, visual tags (`HDR`, `DV`), audio tags (`Atmos`), and channels.
    - **Source**: Stream type (`Debrid`, `Usenet`, `P2P`), language, seeder ranges, and cached/uncached status (can be applied to specific addons/services).
- **Preferred Lists**: Manually define and order a list of preferred properties to prioritize certain results, for example, always showing `HDR` streams first.
- **Keyword &amp; Regex Filtering**: Filter by simple keywords or complex regex patterns matched against filenames, indexers and release groups for ultimate precision.
- **Accurate Title Matching**: Leverages the TMDB API to precisely match titles, years, and season/episode numbers, ensuring you always get the right content. This can be granularly applied to specific addons or content types.
- **Powerful Conditional Engine**: Create dynamic rules with a simple yet powerful expression language.
    - *Example*: Only exclude 720p streams if more than five 1080p streams are available: `count(resolution(streams, &#039;1080p&#039;)) &gt; 5 ? resolution(streams, &#039;720p&#039;) : false`.
    - Check the wiki for a [full function reference](https://github.com/Viren070/AIOStreams/wiki/Stream-Expression-Language).
- **Customisable Deduplication**: Choose how duplicate streams are detected: by filename, infohash, and a unique &quot;smart detect&quot; hash generated from certain file attributes.
- **Sophisticated Sorting**:
    - Build your perfect sort order using any combination of criteria.
    - Define separate sorting logic for movies, series, anime, and even for cached vs. uncached results.
    - The sorting system automatically uses the rankings from your &quot;Preferred Lists&quot;.

### üóÇÔ∏è Unified Catalog Management
Take control of your Stremio home page. AIOStreams lets you manage catalogs from all your addons in one place.
- **Rename**: Rename both the name and the type of the catalog to whatever you want. (e.g. Changing Cinemeta&#039;s `Popular - Movies` to `Popular - üì∫`)
- **Reorder &amp; Disable**: Arrange catalogs in your preferred order or hide the ones you don&#039;t use.
- **Shuffle Catalogs**: Discover new content by shuffling the results of any catalog. You can even persist the shuffle for a set period.
- **Enhanced Posters**: Automatically apply high-quality posters from [RPDB](https://rpdb.net/) to catalogs that provide a supported metadata source, even if the original addon doesn&#039;t support it.

&lt;p align=&quot;center&quot;&gt;

  &lt;img src=&quot;https://github.com/user-attachments/assets/12c26705-a373-42b4-9164-0c23b9e9cbe6&quot; alt=&quot;Filtering and Sorting Rules&quot; width=&quot;750&quot;/&gt;
&lt;/p&gt;

### üé® Total Customization
- **Custom Stream Formatting**: Design exactly how stream information is displayed using a powerful templating system.
- **Live Preview**: See your custom format changes in real-time as you build them.
- **Predefined Formats**: Get started quickly with built-in formats, some created by me and others inspired by other popular addons like Torrentio and the TorBox Stremio Addon.
- **[Custom Formatter Wiki](https://github.com/Viren070/AIOStreams/wiki/Custom-Formatter)**: Dive deep into the documentation to create your perfect stream title.


&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://github.com/user-attachments/assets/906cc3fc-16d1-4702-99c7-425b2445387b&quot; alt=&quot;Custom Formatter UI&quot; width=&quot;750&quot;/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;sub&gt;
    This format was created by one of our community members in the 
    &lt;a href=&quot;https://discord.viren070.me&quot;&gt;Discord Server&lt;/a&gt;
  &lt;/sub&gt;
&lt;/p&gt;


### üõ°Ô∏è Proxy &amp; Performance
- **Proxy Integration**: Seamlessly proxy streams through **[MediaFlow Proxy](https://github.com/mhdzumair/mediaflow-proxy)** or **[StremThru](https://github.com/MunifTanjim/stremthru)**.
- **Bypass IP Restrictions**: Essential for services that limit simultaneous connections from different IP addresses.
- **Improve Compatibility**: Fixes playback issues with certain players (like Infuse) and addons.

And much much more...

## üöÄ Getting Started

Setting up AIOStreams is simple.

1.  **Choose a Hosting Method**
    - **üîì Public Instance**: Use the **[Community Instance (Hosted by ElfHosted)](https://aiostreams.elfhosted.com/configure)**. It&#039;s free, but rate-limited and has Torrentio disabled.
    - **üõ†Ô∏è Self-Host / Paid Hosting**: For full control and no rate limits, host it yourself (Docker) or use a paid service like **[ElfHosted](https://store.elfhosted.com/product/aiostreams/elf/viren070/)** (using this link supports the project!).

2.  **Configure Your Addon**
    - Open the `/stremio/configure` page of your AIOStreams instance in a web browser.
    - Enable the addons you use, add your debrid API keys, and set up your filtering, sorting, and formatting rules.

3.  **Install**
    - Click the &quot;Install&quot; button. This will open your Stremio addon compatible app and add your newly configured AIOStreams addon.

For detailed instructions, check out the Wiki:
- **[Deployment Guide](https://github.com/Viren070/AIOStreams/wiki/Deployment)**
- **[Configuration Guide](https://github.com/Viren070/AIOStreams/wiki/Configuration)**

## ‚ù§Ô∏è Support the Project

AIOStreams is a passion project developed and maintained for free. If you find it useful, please consider supporting its development.

- ‚≠ê **Star the Repository** on [GitHub](https://github.com/Viren070/AIOStreams).
- ‚≠ê **Star the Addon** in the [Stremio Community Catalog](https://beta.stremio-addons.net/addons/aiostreams).
- ü§ù **Contribute**: Report issues, suggest features, or submit pull requests.
- ‚òï **Donate**:
  - **[Ko-fi](https://ko-fi.com/viren070)**
  - **[GitHub Sponsors](https://github.com/sponsors/Viren070)**

---

&lt;h2 align=&quot;center&quot;&gt; ‚≠ê Star History&lt;/h2&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://api.star-history.com/svg?repos=Viren070/AIOStreams&amp;type=Date&quot; href=&quot;https://www.star-history.com/#Viren070/AIOStreams&amp;Date&quot; alt=&quot;Filtering and Sorting Rules&quot; width=&quot;750&quot;/&gt;
&lt;/p&gt;

---

## ‚ö†Ô∏è Disclaimer

AIOStreams is a tool for aggregating and managing data from other Stremio addons. It does not host, store, or distribute any content. The developer does not endorse or promote access to copyrighted content. Users are solely responsible for complying with all applicable laws and the terms of service for any addons or services they use with AIOStreams.

## üôè Credits

This project wouldn&#039;t be possible without the foundational work of many others in the community, especially those who develop the addons that AIOStreams integrates. Special thanks to the developers of all the integrated addons, the creators of [mhdzumair/mediaflow-proxy](https://github.com/mhdzumair/mediaflow-proxy) and [MunifTanjim/stremthru](https://github.com/MunifTanjim/stremthru), and the open-source projects that inspired parts of AIOStreams&#039; design:

* UI Components and issue templates adapted with permission from [5rahim/seanime](https://github.com/5rahim/seanime) (which any anime enthusiast should definitely check out!)
* [sleeyax/stremio-easynews-addon](https://github.com/sleeyax/stremio-easynews-addon) for the projects initial structure
* Custom formatter system inspired by and adapted from [diced/zipline](https://github.com/diced/zipline).
* Condition engine powered by [expr-eval](https://github.com/silentmatt/expr-eval)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[bytebot-ai/bytebot]]></title>
            <link>https://github.com/bytebot-ai/bytebot</link>
            <guid>https://github.com/bytebot-ai/bytebot</guid>
            <pubDate>Mon, 08 Sep 2025 00:04:41 GMT</pubDate>
            <description><![CDATA[Bytebot is a self-hosted AI desktop agent that automates computer tasks through natural language commands, operating within a containerized Linux desktop environment.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/bytebot-ai/bytebot">bytebot-ai/bytebot</a></h1>
            <p>Bytebot is a self-hosted AI desktop agent that automates computer tasks through natural language commands, operating within a containerized Linux desktop environment.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 5,843</p>
            <p>Forks: 624</p>
            <p>Stars today: 199 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

&lt;img src=&quot;docs/images/bytebot-logo.png&quot; width=&quot;500&quot; alt=&quot;Bytebot Logo&quot;&gt;

# Bytebot: Open-Source AI Desktop Agent

&lt;a href=&quot;https://trendshift.io/repositories/14624&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/14624&quot; alt=&quot;bytebot-ai%2Fbytebot | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;

**An AI that has its own computer to complete tasks for you**

[![Deploy on Railway](https://railway.com/button.svg)](https://railway.com/deploy/bytebot?referralCode=L9lKXQ)

[![Docker](https://img.shields.io/badge/docker-ready-blue.svg)](https://github.com/bytebot-ai/bytebot/tree/main/docker)
[![License](https://img.shields.io/badge/license-Apache%202.0-green.svg)](LICENSE)
[![Discord](https://img.shields.io/discord/1232768900274585720?color=7289da&amp;label=discord)](https://discord.com/invite/d9ewZkWPTP)

[üåê Website](https://bytebot.ai) ‚Ä¢ [üìö Documentation](https://docs.bytebot.ai) ‚Ä¢ [üí¨ Discord](https://discord.com/invite/d9ewZkWPTP) ‚Ä¢ [ùïè Twitter](https://x.com/bytebot_ai)

&lt;/div&gt;

---

https://github.com/user-attachments/assets/f271282a-27a3-43f3-9b99-b34007fdd169

https://github.com/user-attachments/assets/72a43cf2-bd87-44c5-a582-e7cbe176f37f

## What is a Desktop Agent?

A desktop agent is an AI that has its own computer. Unlike browser-only agents or traditional RPA tools, Bytebot comes with a full virtual desktop where it can:

- Use any application (browsers, email clients, office tools, IDEs)
- Download and organize files with its own file system
- Log into websites and applications using password managers
- Read and process documents, PDFs, and spreadsheets
- Complete complex multi-step workflows across different programs

Think of it as a virtual employee with their own computer who can see the screen, move the mouse, type on the keyboard, and complete tasks just like a human would.

## Why Give AI Its Own Computer?

When AI has access to a complete desktop environment, it unlocks capabilities that aren&#039;t possible with browser-only agents or API integrations:

### Complete Task Autonomy

Give Bytebot a task like &quot;Download all invoices from our vendor portals and organize them into a folder&quot; and it will:

- Open the browser
- Navigate to each portal
- Handle authentication (including 2FA via password managers)
- Download the files to its local file system
- Organize them into a folder

### Process Documents

Upload files directly to Bytebot&#039;s desktop and it can:

- Read entire PDFs into its context
- Extract data from complex documents
- Cross-reference information across multiple files
- Create new documents based on analysis
- Handle formats that APIs can&#039;t access

### Use Real Applications

Bytebot isn&#039;t limited to web interfaces. It can:

- Use desktop applications like text editors, VS Code, or email clients
- Run scripts and command-line tools
- Install new software as needed
- Configure applications for specific workflows

## Quick Start

### Deploy in 2 Minutes

**Option 1: Railway (Easiest)**
[![Deploy on Railway](https://railway.com/button.svg)](https://railway.com/deploy/bytebot?referralCode=L9lKXQ)

Just click and add your AI provider API key.

**Option 2: Docker Compose**

```bash
git clone https://github.com/bytebot-ai/bytebot.git
cd bytebot

# Add your AI provider key (choose one)
echo &quot;ANTHROPIC_API_KEY=sk-ant-...&quot; &gt; docker/.env
# Or: echo &quot;OPENAI_API_KEY=sk-...&quot; &gt; docker/.env
# Or: echo &quot;GEMINI_API_KEY=...&quot; &gt; docker/.env

docker-compose -f docker/docker-compose.yml up -d

# Open http://localhost:9992
```

[Full deployment guide ‚Üí](https://docs.bytebot.ai/quickstart)

## How It Works

Bytebot consists of four integrated components:

1. **Virtual Desktop**: A complete Ubuntu Linux environment with pre-installed applications
2. **AI Agent**: Understands your tasks and controls the desktop to complete them
3. **Task Interface**: Web UI where you create tasks and watch Bytebot work
4. **APIs**: REST endpoints for programmatic task creation and desktop control

### Key Features

- **Natural Language Tasks**: Just describe what you need done
- **File Uploads**: Drop files onto tasks for Bytebot to process
- **Live Desktop View**: Watch Bytebot work in real-time
- **Takeover Mode**: Take control when you need to help or configure something
- **Password Manager Support**: Install 1Password, Bitwarden, etc. for automatic authentication
- **Persistent Environment**: Install programs and they stay available for future tasks

## Example Tasks

### Basic Examples

```
&quot;Go to Wikipedia and create a summary of quantum computing&quot;
&quot;Research flights from NYC to London and create a comparison document&quot;
&quot;Take screenshots of the top 5 news websites&quot;
```

### Document Processing

```
&quot;Read the uploaded contracts.pdf and extract all payment terms and deadlines&quot;
&quot;Process these 5 invoice PDFs and create a summary report&quot;
&quot;Download and analyze the latest financial report and answer: What were the key risks mentioned?&quot;
```

### Multi-Application Workflows

```
&quot;Download last month&#039;s bank statements from our three banks and consolidate them&quot;
&quot;Check all our vendor portals for new invoices and create a summary report&quot;
&quot;Log into our CRM, export the customer list, and update records in the ERP system&quot;
```

## Programmatic Control

### Create Tasks via API

```python
import requests

# Simple task
response = requests.post(&#039;http://localhost:9991/tasks&#039;, json={
    &#039;description&#039;: &#039;Download the latest sales report and create a summary&#039;
})

# Task with file upload
files = {&#039;files&#039;: open(&#039;contracts.pdf&#039;, &#039;rb&#039;)}
response = requests.post(&#039;http://localhost:9991/tasks&#039;,
    data={&#039;description&#039;: &#039;Review these contracts for important dates&#039;},
    files=files
)
```

### Direct Desktop Control

```bash
# Take a screenshot
curl -X POST http://localhost:9990/computer-use \
  -H &quot;Content-Type: application/json&quot; \
  -d &#039;{&quot;action&quot;: &quot;screenshot&quot;}&#039;

# Click at specific coordinates
curl -X POST http://localhost:9990/computer-use \
  -H &quot;Content-Type: application/json&quot; \
  -d &#039;{&quot;action&quot;: &quot;click_mouse&quot;, &quot;coordinate&quot;: [500, 300]}&#039;
```

[Full API documentation ‚Üí](https://docs.bytebot.ai/api-reference/introduction)

## Setting Up Your Desktop Agent

### 1. Deploy Bytebot

Use one of the deployment methods above to get Bytebot running.

### 2. Configure the Desktop

Use the Desktop tab in the UI to:

- Install additional programs you need
- Set up password managers for authentication
- Configure applications with your preferences
- Log into websites you want Bytebot to access

### 3. Start Giving Tasks

Create tasks in natural language and watch Bytebot complete them using the configured desktop.

## Use Cases

### Business Process Automation

- Invoice processing and data extraction
- Multi-system data synchronization
- Report generation from multiple sources
- Compliance checking across platforms

### Development &amp; Testing

- Automated UI testing
- Cross-browser compatibility checks
- Documentation generation with screenshots
- Code deployment verification

### Research &amp; Analysis

- Competitive analysis across websites
- Data gathering from multiple sources
- Document analysis and summarization
- Market research compilation

## Architecture

Bytebot is built with:

- **Desktop**: Ubuntu 22.04 with XFCE, Firefox, VS Code, and other tools
- **Agent**: NestJS service that coordinates AI and desktop actions
- **UI**: Next.js application for task management
- **AI Support**: Works with Anthropic Claude, OpenAI GPT, Google Gemini
- **Deployment**: Docker containers for easy self-hosting

## Why Self-Host?

- **Data Privacy**: Everything runs on your infrastructure
- **Full Control**: Customize the desktop environment as needed
- **No Limits**: Use your own AI API keys without platform restrictions
- **Flexibility**: Install any software, access any systems

## Advanced Features

### Multiple AI Providers

Use any AI provider through our [LiteLLM integration](https://docs.bytebot.ai/deployment/litellm):

- Azure OpenAI
- AWS Bedrock
- Local models via Ollama
- 100+ other providers

### Enterprise Deployment

Deploy on Kubernetes with Helm:

```bash
# Clone the repository
git clone https://github.com/bytebot-ai/bytebot.git
cd bytebot

# Install with Helm
helm install bytebot ./helm \
  --set agent.env.ANTHROPIC_API_KEY=sk-ant-...
```

[Enterprise deployment guide ‚Üí](https://docs.bytebot.ai/deployment/helm)

## Community &amp; Support

- **Discord**: [Join our community](https://discord.com/invite/d9ewZkWPTP) for help and discussions
- **Documentation**: Comprehensive guides at [docs.bytebot.ai](https://docs.bytebot.ai)
- **GitHub Issues**: Report bugs and request features

## Contributing

We welcome contributions! Whether it&#039;s:

- üêõ Bug fixes
- ‚ú® New features
- üìö Documentation improvements
- üåê Translations

Please:

1. Check existing [issues](https://github.com/bytebot-ai/bytebot/issues) first
2. Open an issue to discuss major changes
3. Submit PRs with clear descriptions
4. Join our [Discord](https://discord.com/invite/d9ewZkWPTP) to discuss ideas

## License

Bytebot is open source under the Apache 2.0 license.

---

&lt;div align=&quot;center&quot;&gt;

**Give your AI its own computer. See what it can do.**

[![Deploy on Railway](https://railway.com/button.svg)](https://railway.com/deploy/bytebot?referralCode=L9lKXQ)

&lt;sub&gt;Built by [Tantl Labs](https://tantl.com) and the open source community&lt;/sub&gt;

&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[jhipster/generator-jhipster]]></title>
            <link>https://github.com/jhipster/generator-jhipster</link>
            <guid>https://github.com/jhipster/generator-jhipster</guid>
            <pubDate>Mon, 08 Sep 2025 00:04:40 GMT</pubDate>
            <description><![CDATA[JHipster is a development platform to quickly generate, develop, & deploy modern web applications & microservice architectures.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/jhipster/generator-jhipster">jhipster/generator-jhipster</a></h1>
            <p>JHipster is a development platform to quickly generate, develop, & deploy modern web applications & microservice architectures.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 22,162</p>
            <p>Forks: 4,112</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>[![Logo][jhipster-image]][jhipster-url]

[![NPM version][npm-image]][npm-url] [![Downloads][npmcharts-image]][npmcharts-url] [![Gitter][gitter-badge-image]][gitter-badge-url] [![Known Vulnerabilities][snyk-image]][snyk-url] [![Package Health][health-image]][health-url]

[![Generator Build Status][github-actions-generator-image]][github-actions-url] [![Angular Build Status][github-actions-angular-image]][github-actions-url] [![React Build Status][github-actions-react-image]][github-actions-url] [![Vue Build Status][github-actions-vue-image]][github-actions-url] [![Revved up by Develocity](https://img.shields.io/badge/Revved%20up%20by-Develocity-06A0CE?logo=Gradle&amp;labelColor=02303A)](https://ge.jhipster.tech/scans)

Greetings, Java Hipster!

Full documentation and information is available on our website at [https://www.jhipster.tech][jhipster-url].

Please read our [guidelines](/CONTRIBUTING.md#submitting-an-issue) before submitting an issue. If your issue is a bug, please use the bug template pre-populated [here][issue-template]. For feature requests and queries you can use [this template][feature-template]. If you have found a potential security issue, please read our security policy and contact us privately first: https://github.com/jhipster/generator-jhipster/security/policy

## Contributing

We are honored by any contributions you may have small or large. Please refer to our [contribution guidelines and instructions document](https://github.com/jhipster/generator-jhipster/blob/main/CONTRIBUTING.md) for any information about contributing to the project.

## Supported Java and Node versions

The following Java and Node combinations are tested and verified by GitHub Actions:

| Java     | Node     | Status |
| -------- | -------- | ------ |
| 17/21/24 | 18/20/22 | ‚úÖ     |

## Sponsors

Support this project by becoming a sponsor! [Become a sponsor](https://opencollective.com/generator-jhipster) or [learn more about sponsoring the project](https://www.jhipster.tech/sponsors/).

**Thank you to our sponsors!**

### Bronze sponsors

[![BronzeSponsors][bronze-sponsors-image]][bronze-sponsors-url]

### Backers

**Thank you to all our backers!**

[![Backers][backers-image]][backers-url]

&lt;object data=&quot;https://opencollective.com/generator-jhipster/tiers/backer.svg?avatarHeight=40&amp;width=890&amp;button=false&quot; type=&quot;image/svg+xml&quot;&gt;&lt;/object&gt;

## Daily Builds

Additional builds at [hipster-labs/jhipster-daily-builds](https://github.com/hipster-labs/jhipster-daily-builds)

| Pipeline Status                                                                      |
| :----------------------------------------------------------------------------------- |
| [![Angular Maven SQL][ng-maven-sql.yaml-badge]][ng-maven-sql.yaml-link]              |
| [![Angular Maven NoSQL][ng-maven-nosql.yaml-badge]][ng-maven-nosql.yaml-link]        |
| [![Angular Gradle SQL][ng-gradle-sql.yaml-badge]][ng-gradle-sql.yaml-link]           |
| [![Angular Gradle NoSQL][ng-gradle-nosql.yaml-badge]][ng-gradle-nosql.yaml-link]     |
| [![React Maven SQL][react-maven-sql.yaml-badge]][react-maven-sql.yaml-link]          |
| [![React Maven NoSQL][react-maven-nosql.yaml-badge]][react-maven-nosql.yaml-link]    |
| [![React Gradle SQL][react-gradle-sql.yaml-badge]][react-gradle-sql.yaml-link]       |
| [![React Gradle NoSQL][react-gradle-nosql.yaml-badge]][react-gradle-nosql.yaml-link] |
| [![Vue Maven SQL][vue-maven-sql.yaml-badge]][vue-maven-sql.yaml-link]                |
| [![Vue Maven NoSQL][vue-maven-nosql.yaml-badge]][vue-maven-nosql.yaml-link]          |
| [![Vue Gradle SQL][vue-gradle-sql.yaml-badge]][vue-gradle-sql.yaml-link]             |
| [![Vue Gradle NoSQL][vue-gradle-nosql.yaml-badge]][vue-gradle-nosql.yaml-link]       |
| [![Elasticsearch][elasticsearch.yaml-badge]][elasticsearch.yaml-link]                |
| [![Monolith OAuth 2.0][monolith-oauth2.yaml-badge]][monolith-oauth2.yaml-link]       |
| [![No Database][no-database.yaml-badge]][no-database.yaml-link]                      |
| [![Microservices JWT][ms-jwt.yaml-badge]][ms-jwt.yaml-link]                          |
| [![Microservices OAuth 2.0][ms-oauth2.yaml-badge]][ms-oauth2.yaml-link]              |
| [![Docker Image][docker-image.yaml-badge]][docker-image.yaml-link]                   |
| [![Official Windows][windows.yaml-badge]][windows.yaml-link]                         |

## Analysis of the sample JHipster project

[![sonar-quality-gate][sonar-quality-gate]][sonar-url] [![sonar-coverage][sonar-coverage]][sonar-url] [![sonar-bugs][sonar-bugs]][sonar-url] [![sonar-vulnerabilities][sonar-vulnerabilities]][sonar-url] [![sonar-sample-code-smells-badge][sonar-sample-code-smells-badge]][sonar-sample-code-smells-url]

[ng-maven-sql.yaml-badge]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/ng-maven-sql.yaml/badge.svg
[ng-maven-sql.yaml-link]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/ng-maven-sql.yaml
[ng-maven-nosql.yaml-badge]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/ng-maven-nosql.yaml/badge.svg
[ng-maven-nosql.yaml-link]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/ng-maven-nosql.yaml
[ng-gradle-sql.yaml-badge]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/ng-gradle-sql.yaml/badge.svg
[ng-gradle-sql.yaml-link]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/ng-gradle-sql.yaml
[ng-gradle-nosql.yaml-badge]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/ng-gradle-nosql.yaml/badge.svg
[ng-gradle-nosql.yaml-link]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/ng-gradle-nosql.yaml
[react-maven-sql.yaml-badge]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/react-maven-sql.yaml/badge.svg
[react-maven-sql.yaml-link]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/react-maven-sql.yaml
[react-maven-nosql.yaml-badge]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/react-maven-nosql.yaml/badge.svg
[react-maven-nosql.yaml-link]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/react-maven-nosql.yaml
[react-gradle-sql.yaml-badge]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/react-gradle-sql.yaml/badge.svg
[react-gradle-sql.yaml-link]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/react-gradle-sql.yaml
[react-gradle-nosql.yaml-badge]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/react-gradle-nosql.yaml/badge.svg
[react-gradle-nosql.yaml-link]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/react-gradle-nosql.yaml
[vue-maven-sql.yaml-badge]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/vue-maven-sql.yaml/badge.svg
[vue-maven-sql.yaml-link]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/vue-maven-sql.yaml
[vue-maven-nosql.yaml-badge]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/vue-maven-nosql.yaml/badge.svg
[vue-maven-nosql.yaml-link]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/vue-maven-nosql.yaml
[vue-gradle-sql.yaml-badge]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/vue-gradle-sql.yaml/badge.svg
[vue-gradle-sql.yaml-link]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/vue-gradle-sql.yaml
[vue-gradle-nosql.yaml-badge]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/vue-gradle-nosql.yaml/badge.svg
[vue-gradle-nosql.yaml-link]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/vue-gradle-nosql.yaml
[elasticsearch.yaml-badge]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/elasticsearch.yaml/badge.svg
[elasticsearch.yaml-link]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/elasticsearch.yaml
[monolith-oauth2.yaml-badge]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/monolith-oauth2.yaml/badge.svg
[monolith-oauth2.yaml-link]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/monolith-oauth2.yaml
[no-database.yaml-badge]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/no-database.yaml/badge.svg
[no-database.yaml-link]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/no-database.yaml
[ms-jwt.yaml-badge]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/ms-jwt.yaml/badge.svg
[ms-jwt.yaml-link]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/ms-jwt.yaml
[ms-oauth2.yaml-badge]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/ms-oauth2.yaml/badge.svg
[ms-oauth2.yaml-link]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/ms-oauth2.yaml
[docker-image.yaml-badge]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/docker-image.yaml/badge.svg
[docker-image.yaml-link]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/docker-image.yaml
[windows.yaml-badge]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/windows.yaml/badge.svg
[windows.yaml-link]: https://github.com/hipster-labs/jhipster-daily-builds/actions/workflows/windows.yaml
[sonar-url]: https://sonarcloud.io/dashboard?id=jhipster-sample-application
[sonar-quality-gate]: https://sonarcloud.io/api/project_badges/measure?project=jhipster-sample-application&amp;metric=alert_status
[sonar-coverage]: https://sonarcloud.io/api/project_badges/measure?project=jhipster-sample-application&amp;metric=coverage
[sonar-bugs]: https://sonarcloud.io/api/project_badges/measure?project=jhipster-sample-application&amp;metric=bugs
[sonar-sample-code-smells-badge]: https://sonarcloud.io/api/project_badges/measure?project=jhipster-sample-application&amp;metric=code_smells
[sonar-sample-code-smells-url]: https://sonarcloud.io/project/issues?resolved=false&amp;types=CODE_SMELL&amp;id=jhipster-sample-application
[sonar-vulnerabilities]: https://sonarcloud.io/api/project_badges/measure?project=jhipster-sample-application&amp;metric=vulnerabilities
[jhipster-image]: https://raw.githubusercontent.com/jhipster/jhipster-artwork/main/logos/v2/normal/V2%20JHipster%20RGB.png
[jhipster-url]: https://www.jhipster.tech/
[npm-image]: https://badge.fury.io/js/generator-jhipster.svg
[npm-url]: https://npmjs.org/package/generator-jhipster
[github-actions-generator-image]: https://github.com/jhipster/generator-jhipster/workflows/Generator/badge.svg
[github-actions-angular-image]: https://github.com/jhipster/generator-jhipster/workflows/Angular/badge.svg
[github-actions-react-image]: https://github.com/jhipster/generator-jhipster/workflows/React/badge.svg
[github-actions-vue-image]: https://github.com/jhipster/generator-jhipster/workflows/Vue/badge.svg
[github-actions-url]: https://github.com/jhipster/generator-jhipster/actions
[backers-image]: https://opencollective.com/generator-jhipster/tiers/backer.svg?avatarHeight=70&amp;width=890
[backers-url]: https://opencollective.com/generator-jhipster
[bronze-sponsors-image]: https://opencollective.com/generator-jhipster/tiers/bronze-sponsor.svg?avatarHeight=120&amp;width=890
[bronze-sponsors-url]: https://opencollective.com/generator-jhipster
[issue-template]: https://github.com/jhipster/generator-jhipster/issues/new?template=BUG_REPORT.md
[feature-template]: https://github.com/jhipster/generator-jhipster/issues/new?template=FEATURE_REQUEST.md
[npmcharts-image]: https://img.shields.io/npm/dm/generator-jhipster.svg?label=Downloads&amp;style=flat
[npmcharts-url]: https://npm.chart.dev/generator-jhipster?primary=sky&amp;gray=cool&amp;theme=dark
[gitter-badge-image]: https://badges.gitter.im/jhipster/generator-jhipster.svg
[gitter-badge-url]: https://gitter.im/jhipster/generator-jhipster?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge
[snyk-image]: https://snyk.io/test/npm/generator-jhipster/badge.svg
[snyk-url]: https://snyk.io/test/npm/generator-jhipster
[health-image]: https://snyk.io/advisor/npm-package/generator-jhipster/badge.svg
[health-url]: https://snyk.io/advisor/npm-package/generator-jhipster
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[apple/embedding-atlas]]></title>
            <link>https://github.com/apple/embedding-atlas</link>
            <guid>https://github.com/apple/embedding-atlas</guid>
            <pubDate>Mon, 08 Sep 2025 00:04:39 GMT</pubDate>
            <description><![CDATA[Embedding Atlas is a tool that provides interactive visualizations for large embeddings. It allows you to visualize, cross-filter, and search embeddings and metadata.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/apple/embedding-atlas">apple/embedding-atlas</a></h1>
            <p>Embedding Atlas is a tool that provides interactive visualizations for large embeddings. It allows you to visualize, cross-filter, and search embeddings and metadata.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,680</p>
            <p>Forks: 177</p>
            <p>Stars today: 171 stars today</p>
            <h2>README</h2><pre># Embedding Atlas

Embedding Atlas is a tool that provides interactive visualizations for large embeddings. It allows you to visualize, cross-filter, and search embeddings and metadata.

**Features**

- üè∑Ô∏è **Automatic data clustering &amp; labeling:**
  Interactively visualize and navigate overall data structure.

- ü´ß **Kernel density estimation &amp; density contours:**
  Easily explore and distinguish between dense regions of data and outliers.

- üßä **Order-independent transparency:**
  Ensure clear, accurate rendering of overlapping points.

- üîç **Real-time search &amp; nearest neighbors:**
  Find similar data to a given query or existing data point.

- üöÄ **WebGPU implementation (with WebGL 2 fallback):**
  Fast, smooth performance (up to few million points) with modern rendering stack.

- üìä **Multi-coordinated views for metadata exploration:**
  Interactively link and filter data across metadata columns.

Please visit &lt;https://apple.github.io/embedding-atlas&gt; for a demo and documentation.

&lt;picture&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./packages/docs/assets/embedding-atlas-dark.png&quot;&gt;
  &lt;img alt=&quot;screenshot of Embedding Atlas&quot; src=&quot;./packages/docs/assets/embedding-atlas-light.png&quot;&gt;
&lt;/picture&gt;

## Get started

To use Embedding Atlas with Python:

```bash
pip install embedding-atlas

embedding-atlas &lt;your-dataset.parquet&gt;
```

In addition to the command line tool, Embedding Atlas is also available as a Jupyter widget:

```python
from embedding_atlas.widget import EmbeddingAtlasWidget

# Show the Embedding Atlas widget for your data frame:
EmbeddingAtlasWidget(df)
```

Finally, components from Embedding Atlas are also available in an npm package:

```bash
npm install embedding-atlas
```

```js
import { EmbeddingAtlas, EmbeddingView, Table } from &quot;embedding-atlas&quot;;

// or with React:
import { EmbeddingAtlas, EmbeddingView, Table } from &quot;embedding-atlas/react&quot;;

// or Svelte:
import { EmbeddingAtlas, EmbeddingView, Table } from &quot;embedding-atlas/svelte&quot;;
```

For more information, please visit &lt;https://apple.github.io/embedding-atlas/overview.html&gt;.

## BibTeX

For the Embedding Atlas tool:

```bibtex
@misc{ren2025embedding,
  title={Embedding Atlas: Low-Friction, Interactive Embedding Visualization},
  author={Donghao Ren and Fred Hohman and Halden Lin and Dominik Moritz},
  year={2025},
  eprint={2505.06386},
  archivePrefix={arXiv},
  primaryClass={cs.HC},
  url={https://arxiv.org/abs/2505.06386},
}
```

For the algorithm that automatically produces clusters and labels in the embedding view:

```bibtex
@misc{ren2025scalable,
  title={A Scalable Approach to Clustering Embedding Projections},
  author={Donghao Ren and Fred Hohman and Dominik Moritz},
  year={2025},
  eprint={2504.07285},
  archivePrefix={arXiv},
  primaryClass={cs.HC},
  url={https://arxiv.org/abs/2504.07285},
}
```

## Development

This repo contains multiple sub-packages:

Frontend:

- `packages/component`: The `EmbeddingView` and `EmbeddingViewMosaic` components.

- `packages/table`: The `Table` component.

- `packages/viewer`: The frontend application for visualizing embedding and other columns. It also provides the `EmbeddingAtlas` component that can be embedded in other applications.

- `packages/density-clustering`: The density clustering algorithm, written in Rust.

- `packages/umap-wasm`: An implementation of UMAP algorithm in WebAssembly (with the [umappp](https://github.com/libscran/umappp) C++ library).

- `packages/embedding-atlas`: The `embedding-atlas` package that get published. It imports all of the above and exposes their API in a single package.

Python:

- `packages/backend`: A Python package named `embedding-atlas` that provides the `embedding-atlas` command line tool.

Documentation:

- `packages/docs`: The documentation website.

For more information, please visit &lt;https://apple.github.io/embedding-atlas/develop.html&gt;.

## License

This code is released under the [`MIT license`](LICENSE).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[bluesky-social/social-app]]></title>
            <link>https://github.com/bluesky-social/social-app</link>
            <guid>https://github.com/bluesky-social/social-app</guid>
            <pubDate>Mon, 08 Sep 2025 00:04:38 GMT</pubDate>
            <description><![CDATA[The Bluesky Social application for Web, iOS, and Android]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/bluesky-social/social-app">bluesky-social/social-app</a></h1>
            <p>The Bluesky Social application for Web, iOS, and Android</p>
            <p>Language: TypeScript</p>
            <p>Stars: 16,735</p>
            <p>Forks: 2,396</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre># Bluesky Social App

Welcome friends! This is the codebase for the Bluesky Social app.

Get the app itself:

- **Web: [bsky.app](https://bsky.app)**
- **iOS: [App Store](https://apps.apple.com/us/app/bluesky-social/id6444370199)**
- **Android: [Play Store](https://play.google.com/store/apps/details?id=xyz.blueskyweb.app)**

## Development Resources

This is a [React Native](https://reactnative.dev/) application, written in the TypeScript programming language. It builds on the `atproto` TypeScript packages (like [`@atproto/api`](https://www.npmjs.com/package/@atproto/api)), which are also open source, but in [a different git repository](https://github.com/bluesky-social/atproto).

There is a small amount of Go language source code (in `./bskyweb/`), for a web service that returns the React Native Web application.

The [Build Instructions](./docs/build.md) are a good place to get started with the app itself.

The Authenticated Transfer Protocol (&quot;AT Protocol&quot; or &quot;atproto&quot;) is a decentralized social media protocol. You don&#039;t *need* to understand AT Protocol to work with this application, but it can help. Learn more at:

- [Overview and Guides](https://atproto.com/guides/overview)
- [GitHub Discussions](https://github.com/bluesky-social/atproto/discussions) üëà Great place to ask questions
- [Protocol Specifications](https://atproto.com/specs/atp)
- [Blogpost on self-authenticating data structures](https://bsky.social/about/blog/3-6-2022-a-self-authenticating-social-protocol)

The Bluesky Social application encompasses a set of schemas and APIs built in the overall AT Protocol framework. The namespace for these &quot;Lexicons&quot; is `app.bsky.*`.

## Contributions

&gt; [!NOTE]
&gt; While we do accept contributions, we prioritize high quality issues and pull requests. Adhering to the below guidelines will ensure a more timely review.

**Rules:**

- We may not respond to your issue or PR.
- We may close an issue or PR without much feedback.
- We may lock discussions or contributions if our attention is getting DDOSed.
- We&#039;re not going to provide support for build issues.

**Guidelines:**

- Check for existing issues before filing a new one please.
- Open an issue and give some time for discussion before submitting a PR.
- Stay away from PRs like...
  - Changing &quot;Post&quot; to &quot;Skeet.&quot;
  - Refactoring the codebase, e.g., to replace React Query with Redux Toolkit or something.
  - Adding entirely new features without prior discussion. 

Remember, we serve a wide community of users. Our day-to-day involves us constantly asking &quot;which top priority is our top priority.&quot; If you submit well-written PRs that solve problems concisely, that&#039;s an awesome contribution. Otherwise, as much as we&#039;d love to accept your ideas and contributions, we really don&#039;t have the bandwidth. That&#039;s what forking is for!

## Forking guidelines

You have our blessing ü™Ñ‚ú® to fork this application! However, it&#039;s very important to be clear to users when you&#039;re giving them a fork.

Please be sure to:

- Change all branding in the repository and UI to clearly differentiate from Bluesky.
- Change any support links (feedback, email, terms of service, etc) to your own systems.
- Replace any analytics or error-collection systems with your own so we don&#039;t get super confused.

## Security disclosures

If you discover any security issues, please send an email to security@bsky.app. The email is automatically CC&#039;d to the entire team and we&#039;ll respond promptly.

## Are you a developer interested in building on atproto?

Bluesky is an open social network built on the AT Protocol, a flexible technology that will never lock developers out of the ecosystems that they help build. With atproto, third-party integration can be as seamless as first-party through custom feeds, federated services, clients, and more.

## License (MIT)

See [./LICENSE](./LICENSE) for the full license.

## P.S.

We ‚ù§Ô∏è you and all of the ways you support us. Thank you for making Bluesky a great place!
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[coinbase/x402]]></title>
            <link>https://github.com/coinbase/x402</link>
            <guid>https://github.com/coinbase/x402</guid>
            <pubDate>Mon, 08 Sep 2025 00:04:37 GMT</pubDate>
            <description><![CDATA[A payments protocol for the internet. Built on HTTP.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/coinbase/x402">coinbase/x402</a></h1>
            <p>A payments protocol for the internet. Built on HTTP.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 898</p>
            <p>Forks: 191</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre># x402 payments protocol

&gt; &quot;1 line of code to accept digital dollars. No fee, 2 second settlement, $0.001 minimum payment.&quot;

```typescript
app.use(
  // How much you want to charge, and where you want the funds to land
  paymentMiddleware(&quot;0xYourAddress&quot;, { &quot;/your-endpoint&quot;: &quot;$0.01&quot; })
);
// That&#039;s it! See examples/typescript/servers/express.ts for a complete example. Instruction below for running on base-sepolia.
```

## Philosophy

Payments on the internet are fundamentally flawed. Credit Cards are high friction, hard to accept, have minimum payments that are far too high, and don&#039;t fit into the programmatic nature of the internet.
It&#039;s time for an open, internet-native form of payments. A payment rail that doesn&#039;t have high minimums + % based fee. Payments that are amazing for humans and AI agents.

## Principles

- **Open standard:** the x402 protocol will never force reliance on a single party
- **HTTP Native:** x402 is meant to seamlessly complement the existing HTTP request made by traditional web services, it should not mandate additional requests outside the scope of a typical client / server flow.
- **Chain and token agnostic:** we welcome contributions that add support for new chains, signing standards, or schemes, so long as they meet our acceptance criteria laid out in [CONTRIBUTING.md](https://github.com/coinbase/x402/blob/main/CONTRIBUTING.md)
- **Trust minimizing:** all payment schemes must not allow for the facilitator or resource server to move funds, other than in accordance with client intentions
- **Easy to use:** x402 needs to be 10x better than existing ways to pay on the internet. This means abstracting as many details of crypto as possible away from the client and resource server, and into the facilitator. This means the client/server should not need to think about gas, rpc, etc.

## Ecosystem

The x402 ecosystem is growing! Check out our [ecosystem page](https://x402.org/ecosystem) to see projects building with x402, including:

- Client-side integrations
- Services and endpoints
- Ecosystem infrastructure and tooling
- Learning and community resources

Want to add your project to the ecosystem? See our [demo site README](https://github.com/coinbase/x402/tree/main/typescript/site#adding-your-project-to-the-ecosystem) for detailed instructions on how to submit your project.

**Roadmap:** see [ROADMAP.md](https://github.com/coinbase/x402/blob/main/ROADMAP.md)

## Terms:

- `resource`: Something on the internet. This could be a webpage, file server, RPC service, API, any resource on the internet that accepts HTTP / HTTPS requests.
- `client`: An entity wanting to pay for a resource.
- `facilitator server`: A server that facilitates verification and execution of on-chain payments.
- `resource server`: An HTTP server that provides an API or other resource for a client.

## Technical Goals:

- Permissionless and secure for clients and servers
- Gasless for client and resource servers
- Minimal integration for the resource server and client (1 line for the server, 1 function for the client)
- Ability to trade off speed of response for guarantee of payment
- Extensible to different payment flows and chains

## V1 Protocol

The `x402` protocol is a chain agnostic standard for payments on top of HTTP, leverage the existing `402 Payment Required` HTTP status code to indicate that a payment is required for access to the resource.

It specifies:

1. A schema for how servers can respond to clients to facilitate payment for a resource (`PaymentRequirements`)
2. A standard header `X-PAYMENT` that is set by clients paying for resources
3. A standard schema and encoding method for data in the `X-PAYMENT` header
4. A recommended flow for how payments should be verified and settled by a resource server
5. A REST specification for how a resource server can perform verification and settlement against a remote 3rd party server (`facilitator`)
6. A specification for a `X-PAYMENT-RESPONSE` header that can be used by resource servers to communicate blockchain transactions details to the client in their HTTP response

### V1 Protocol Sequencing

![](./static/x402-protocol-flow.png)

The following outlines the flow of a payment using the `x402` protocol. Note that steps (1) and (2) are optional if the client already knows the payment details accepted for a resource.

1. `Client` makes an HTTP request to a `resource server`.

2. `Resource server` responds with a `402 Payment Required` status and a `Payment Required Response` JSON object in the response body.

3. `Client` selects one of the `paymentRequirements` returned by the server response and creates a `Payment Payload` based on the `scheme` of the `paymentRequirements` they have selected.

4. `Client` sends the HTTP request with the `X-PAYMENT` header containing the `Payment Payload` to the resource server.

5. `Resource server` verifies the `Payment Payload` is valid either via local verification or by POSTing the `Payment Payload` and `Payment Requirements` to the `/verify` endpoint of a `facilitator server`.

6. `Facilitator server` performs verification of the object based on the `scheme` and `network` of the `Payment Payload` and returns a `Verification Response`.

7. If the `Verification Response` is valid, the resource server performs the work to fulfill the request. If the `Verification Response` is invalid, the resource server returns a `402 Payment Required` status and a `Payment Required Response` JSON object in the response body.

8. `Resource server` either settles the payment by interacting with a blockchain directly, or by POSTing the `Payment Payload` and `Payment PaymentRequirements` to the `/settle` endpoint of a `facilitator server`.

9. `Facilitator server` submits the payment to the blockchain based on the `scheme` and `network` of the `Payment Payload`.

10. `Facilitator server` waits for the payment to be confirmed on the blockchain.

11. `Facilitator server` returns a `Payment Execution Response` to the resource server.

12. `Resource server` returns a `200 OK` response to the `Client` with the resource they requested as the body of the HTTP response, and a `X-PAYMENT-RESPONSE` header containing the `Settlement Response` as Base64 encoded JSON if the payment was executed successfully.

### Type Specifications

#### Data types

**Payment Required Response**

```json5
{
  // Version of the x402 payment protocol
  x402Version: int,

  // List of payment requirements that the resource server accepts. A resource server may accept on multiple chains, or in multiple currencies.
  accepts: [paymentRequirements]

  // Message from the resource server to the client to communicate errors in processing payment
  error: string
}
```

**paymentRequirements**

```json5
{
  // Scheme of the payment protocol to use
  scheme: string;

  // Network of the blockchain to send payment on
  network: string;

  // Maximum amount required to pay for the resource in atomic units of the asset
  maxAmountRequired: uint256 as string;

  // URL of resource to pay for
  resource: string;

  // Description of the resource
  description: string;

  // MIME type of the resource response
  mimeType: string;

  // Output schema of the resource response
  outputSchema?: object | null;

  // Address to pay value to
  payTo: string;

  // Maximum time in seconds for the resource server to respond
  maxTimeoutSeconds: number;

  // Address of the EIP-3009 compliant ERC20 contract
  asset: string;

  // Extra information about the payment details specific to the scheme
  // For `exact` scheme on a EVM network, expects extra to contain the records `name` and `version` pertaining to asset
  extra: object | null;
}
```

**`Payment Payload`** (included as the `X-PAYMENT` header in base64 encoded json)

```json5
{
  // Version of the x402 payment protocol
  x402Version: number;

  // scheme is the scheme value of the accepted `paymentRequirements` the client is using to pay
  scheme: string;

  // network is the network id of the accepted `paymentRequirements` the client is using to pay
  network: string;

  // payload is scheme dependent
  payload: &lt;scheme dependent&gt;;
}
```

#### Facilitator Types &amp; Interface

A `facilitator server` is a 3rd party service that can be used by a `resource server` to verify and settle payments, without the `resource server` needing to have access to a blockchain node or wallet.

**POST /verify**. Verify a payment with a supported scheme and network:

- Request body JSON:
  ```json5
  {
    x402Version: number;
    paymentHeader: string;
    paymentRequirements: paymentRequirements;
  }
  ```
- Response:
  ```json5
  {
    isValid: boolean;
    invalidReason: string | null;
  }
  ```

**POST /settle**. Settle a payment with a supported scheme and network:

- Request body JSON:

  ```json5
  {
    x402Version: number;
    paymentHeader: string;
    paymentRequirements: paymentRequirements;
  }
  ```

- Response:

  ```json5
  {
    // Whether the payment was successful
    success: boolean;

    // Error message from the facilitator server
    error: string | null;

    // Transaction hash of the settled payment
    txHash: string | null;

    // Network id of the blockchain the payment was settled on
    networkId: string | null;
  }
  ```

**GET /supported**. Get supported payment schemes and networks:

- Response:
  ```json5
  {
    kinds: [
      {
        &quot;scheme&quot;: string,
        &quot;network&quot;: string,
      }
    ]
  }
  ```

### Schemes

A scheme is a logical way of moving money.

Blockchains allow for a large number of flexible ways to move money. To help facilitate an expanding number of payment use cases, the `x402` protocol is extensible to different ways of settling payments via its `scheme` field.

Each payment scheme may have different operational functionality depending on what actions are necessary to fulfill the payment.
For example `exact`, the first scheme shipping as part of the protocol, would have different behavior than `upto`. `exact` transfers a specific amount (ex: pay $1 to read an article), while a theoretical `upto` would transfer up to an amount, based on the resources consumed during a request (ex: generating tokens from an LLM).

See `specs/schemes` for more details on schemes, and see `specs/schemes/exact/scheme_exact_evm.md` to see the first proposed scheme for exact payment on EVM chains.

### Schemes vs Networks

Because a scheme is a logical way of moving money, the way a scheme is implemented can be different for different blockchains. (ex: the way you need to implement `exact` on Ethereum is very different from the way you need to implement `exact` on Solana).

Clients and facilitators must explicitly support different `(scheme, network)` pairs in order to be able to create proper payloads and verify / settle payments.

## Running example

1. From `examples/typescript` run `pnpm install` and `pnpm build` to ensure all dependent packages and examples are setup.

2. Select a server, i.e. express, and `cd` into that example. Add your server&#039;s ethereum address to get paid to into the `.env` file, and then run `pnpm dev` in that directory.

3. Select a client, i.e. axios, and `cd` into that example. Add your private key for the account making payments into the `.env` file, and then run `pnpm dev` in that directory.

You should see activity across both terminals, and the client terminal will display a weather report.

## Running tests

1. Navigate to the typescript directory: `cd typescript`
2. Install dependencies: `pnpm install`
3. Run the unit tests: `pnpm test`

This will run the unit tests for the x402 packages.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[github/docs]]></title>
            <link>https://github.com/github/docs</link>
            <guid>https://github.com/github/docs</guid>
            <pubDate>Mon, 08 Sep 2025 00:04:36 GMT</pubDate>
            <description><![CDATA[The open-source repo for docs.github.com]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/github/docs">github/docs</a></h1>
            <p>The open-source repo for docs.github.com</p>
            <p>Language: TypeScript</p>
            <p>Stars: 17,819</p>
            <p>Forks: 63,183</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre># GitHub Docs &lt;!-- omit in toc --&gt;
[![Build GitHub Docs On Codespaces](https://github.com/codespaces/badge.svg)](https://github.com/codespaces/new/?repo=github)

This repository contains the documentation website code and Markdown source files for [docs.github.com](https://docs.github.com).

GitHub&#039;s Docs team works on pre-production content in a private repo that regularly syncs with this public repo.

Use the table of contents icon &lt;img alt=&quot;Table of contents icon&quot; src=&quot;./contributing/images/table-of-contents.png&quot; width=&quot;25&quot; height=&quot;25&quot; /&gt; on the top right corner of this document to navigate to a specific section quickly.

## Contributing

We accept different types of contributions, including some that don&#039;t require you to write a single line of code. For detailed instructions on how to get started with our project, see [About contributing to GitHub Docs](https://docs.github.com/en/contributing/collaborating-on-github-docs/about-contributing-to-github-docs).

### Ways to contribute

On the GitHub Docs site, you can contribute by clicking the **Make a contribution** button at the bottom of the page to open a pull request for quick fixes like typos, updates, or link fixes.

You can also contribute by creating a local environment or opening a Codespace. For more information, see [Setting up your environment to work on GitHub Docs](https://docs.github.com/en/contributing/setting-up-your-environment-to-work-on-github-docs).

&lt;img alt=&quot;Contribution call-to-action&quot; src=&quot;./contributing/images/contribution_cta.png&quot; width=&quot;400&quot;&gt;

For more complex contributions, please [open an issue in the docs-content repo](https://github.com/github/docs-content/issues/new/choose) describing the changes you&#039;d like to see.

If you&#039;re looking for a way to contribute, you can scan through our [help wanted board](https://github.com/github/docs/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22) to find open issues already approved for work.

### And that&#039;s it!

If you&#039;re having trouble with your GitHub account, contact [Support](https://support.github.com).

That&#039;s how you can easily become a member of the GitHub Docs community. :sparkles:

## READMEs

In addition to the README you&#039;re reading right now, this repo includes other READMEs that describe the purpose of each subdirectory in more detail:

- [content/README.md](content/README.md)
- [content/graphql/README.md](content/graphql/README.md)
- [content/rest/README.md](content/rest/README.md)
- [contributing/README.md](contributing/README.md)
- [data/README.md](data/README.md)
- [data/reusables/README.md](data/reusables/README.md)
- [data/variables/README.md](data/variables/README.md)
- [src/README.md](src/README.md)

## License

The GitHub product documentation in the assets, content, and data folders are licensed under a [CC-BY license](LICENSE).

All other code in this repository is licensed under the [MIT license](LICENSE-CODE).

When using the GitHub logos, be sure to follow the [GitHub logo guidelines](https://github.com/logos).

## Thanks :purple_heart:

Thanks for all your contributions and efforts towards improving the GitHub documentation. We thank you for being part of our :sparkles: community :sparkles:!
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[ruvnet/claude-flow]]></title>
            <link>https://github.com/ruvnet/claude-flow</link>
            <guid>https://github.com/ruvnet/claude-flow</guid>
            <pubDate>Mon, 08 Sep 2025 00:04:35 GMT</pubDate>
            <description><![CDATA[Claude-Flow v2.0.0 Alpha represents a leap in AI-powered development orchestration. Built from the ground up with enterprise-grade architecture, advanced swarm intelligence, and seamless Claude Code integration.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ruvnet/claude-flow">ruvnet/claude-flow</a></h1>
            <p>Claude-Flow v2.0.0 Alpha represents a leap in AI-powered development orchestration. Built from the ground up with enterprise-grade architecture, advanced swarm intelligence, and seamless Claude Code integration.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 7,278</p>
            <p>Forks: 1,002</p>
            <p>Stars today: 40 stars today</p>
            <h2>README</h2><pre># üåä Claude-Flow v2.0.0 Alpha: AI Orchestration Platform

&lt;div align=&quot;center&quot;&gt;

[![üåü Star on GitHub](https://img.shields.io/github/stars/ruvnet/claude-flow?style=for-the-badge&amp;logo=github&amp;color=gold)](https://github.com/ruvnet/claude-flow)
[![üìà Downloads](https://img.shields.io/npm/dt/claude-flow?style=for-the-badge&amp;logo=npm&amp;color=blue&amp;label=Downloads)](https://www.npmjs.com/package/claude-flow)
[![üì¶ Latest Release](https://img.shields.io/npm/v/claude-flow?style=for-the-badge&amp;logo=npm&amp;color=green&amp;label=v2.0.0)](https://www.npmjs.com/package/claude-flow)
[![‚ö° Claude Code](https://img.shields.io/badge/Claude%20Code-Optimized-green?style=for-the-badge&amp;logo=anthropic)](https://github.com/ruvnet/claude-flow)
[![üèõÔ∏è Agentics Foundation](https://img.shields.io/badge/Agentics-Foundation-crimson?style=for-the-badge&amp;logo=openai)](https://discord.com/invite/dfxmpwkG2D)
[![üêù Hive-Mind](https://img.shields.io/badge/Hive--Mind-AI%20Coordination-purple?style=for-the-badge&amp;logo=swarm)](https://github.com/ruvnet/claude-flow)
[![üß† Neural](https://img.shields.io/badge/Neural-87%20MCP%20Tools-blue?style=for-the-badge&amp;logo=pytorch)](https://github.com/ruvnet/claude-flow)
[![üõ°Ô∏è MIT License](https://img.shields.io/badge/License-MIT-yellow?style=for-the-badge&amp;logo=opensourceinitiative)](https://opensource.org/licenses/MIT)

&lt;/div&gt;

---

## üåü **Overview**

**Claude-Flow v2 Alpha** is an enterprise-grade AI orchestration platform that reimagines how developers build with AI. By combining **hive-mind swarm intelligence**, **neural pattern recognition**, and **87 advanced MCP tools**, Claude-Flow enables unprecedented AI-powered development workflows.

### üéØ **Key Features**

- **üêù Hive-Mind Intelligence**: Queen-led AI coordination with specialized worker agents
- **üß† Neural Networks**: 27+ cognitive models with WASM SIMD acceleration
- **üîß 87 MCP Tools**: Comprehensive toolkit for swarm orchestration, memory, and automation
- **üîÑ Dynamic Agent Architecture (DAA)**: Self-organizing agents with fault tolerance
- **üíæ SQLite Memory System**: Persistent `.swarm/memory.db` with 12 specialized tables
- **ü™ù Advanced Hooks System**: Automated workflows with pre/post operation hooks
- **üìä GitHub Integration**: 6 specialized modes for repository management
- **üåê Flow Nexus Cloud Platform**: E2B sandboxes, AI swarms, challenges, and marketplace integration

&gt; üî• **Revolutionary AI Coordination**: Build faster, smarter, and more efficiently with AI-powered development orchestration

## üåê **Flow Nexus Cloud Platform**

**NEW**: Claude-Flow v2.0.0 now includes **Flow Nexus integration** - a cloud-powered AI development platform featuring:

- **E2B Sandboxes**: Secure isolated environments for Node.js, Python, React, Next.js
- **AI Swarms**: Deploy multi-agent systems in cloud infrastructure  
- **Neural Training**: Distributed machine learning with custom model deployment
- **Challenges &amp; Marketplace**: Coding challenges with rUv credit rewards and template marketplace
- **Workflow Automation**: Event-driven automation with message queue processing

&gt; üìö **Complete documentation**: Visit [flow-nexus.ruv.io](https://flow-nexus.ruv.io) for comprehensive guides, tutorials, and API reference. Also see issue # https://github.com/ruvnet/claude-flow/issues/732

## ‚ö° **Try v2.0.0 Alpha in 4 Commands**

### üìã **Prerequisites**

- **Node.js 18+** (LTS recommended)
- **npm 9+** or equivalent package manager
- **Windows users**: See [Windows Installation Guide](https://github.com/ruvnet/claude-code-flow/blob/main/docs/windows-installation.md) for special instructions

‚ö†Ô∏è **IMPORTANT**: Claude Code must be installed first:

```bash
# 1. Install Claude Code globally
npm install -g @anthropic-ai/claude-code

# 2. (Optional) Skip permissions check for faster setup
# Only use if you understand the security implications
claude --dangerously-skip-permissions
```

üí° **Windows Note**: If you encounter SQLite errors, Claude Flow will automatically use in-memory storage. For persistent storage options, see our [Windows guide](https://github.com/ruvnet/claude-code-flow/blob/main/docs/windows-installation.md).

### üéØ **Instant Alpha Testing**

```bash
# 1. Initialize Claude Flow with enhanced MCP setup (auto-configures permissions!)
npx claude-flow@alpha init --force

# 2. Explore all revolutionary capabilities  
npx claude-flow@alpha --help

# 3a. Quick AI coordination (recommended for most tasks)
npx claude-flow@alpha swarm &quot;build me a REST API&quot; --claude

# 3b. OR launch the full hive-mind system (for complex projects)
npx claude-flow@alpha hive-mind wizard
npx claude-flow@alpha hive-mind spawn &quot;build enterprise system&quot; --claude
```

### üöÄ **Quick Start with Flow Nexus**

```bash
# 1. Initialize Flow Nexus only (minimal setup)
npx claude-flow init --flow-nexus

# 2. Register and login (use MCP tools in Claude Code)
mcp__flow-nexus__user_register({ email: &quot;your@email.com&quot;, password: &quot;secure&quot; })
mcp__flow-nexus__user_login({ email: &quot;your@email.com&quot;, password: &quot;secure&quot; })

# 3. Deploy your first cloud swarm
mcp__flow-nexus__swarm_init({ topology: &quot;mesh&quot;, maxAgents: 5 })
mcp__flow-nexus__sandbox_create({ template: &quot;node&quot;, name: &quot;api-dev&quot; })
```

### ü§î **Swarm vs Hive-Mind: Which to Use?**

| Feature | `swarm` Command | `hive-mind` Command |
|---------|----------------|-------------------|
| **Best For** | Quick tasks, single objectives | Complex projects, persistent sessions |
| **Setup** | Instant - no configuration needed | Interactive wizard setup |
| **Session** | Temporary coordination | Persistent with resume capability |
| **Memory** | Task-scoped | Project-wide with SQLite storage |
| **Agents** | Auto-spawned for task | Manual control with specializations |
| **Use When** | &quot;Build X&quot;, &quot;Fix Y&quot;, &quot;Analyze Z&quot; | Multi-feature projects, team coordination |

**Quick Rule:** Start with `swarm` for most tasks. Use `hive-mind` when you need persistent sessions or complex multi-agent coordination.

## üéØ **Typical Workflows - Your &quot;Happy Path&quot; Guide**

### **New to Claude-Flow? Start Here!**

Confused about `.hive-mind` and `.swarm` directories? Not sure when to create new hives? Here are the most common workflow patterns:

#### **üöÄ Pattern 1: Single Feature Development**
```bash
# Initialize once per feature/task
npx claude-flow@alpha init --force
npx claude-flow@alpha hive-mind spawn &quot;Implement user authentication&quot; --claude

# Continue working on SAME feature (reuse existing hive)
npx claude-flow@alpha hive-mind status
npx claude-flow@alpha memory query &quot;authentication&quot; --recent
npx claude-flow@alpha swarm &quot;Add password reset functionality&quot; --continue-session
```

#### **üèóÔ∏è Pattern 2: Multi-Feature Project**
```bash
# Project-level initialization (once per project)
npx claude-flow@alpha init --force --project-name &quot;my-app&quot;

# Feature 1: Authentication (new hive)
npx claude-flow@alpha hive-mind spawn &quot;auth-system&quot; --namespace auth --claude

# Feature 2: User management (separate hive)  
npx claude-flow@alpha hive-mind spawn &quot;user-management&quot; --namespace users --claude

# Resume Feature 1 later (use session ID from spawn output)
npx claude-flow@alpha hive-mind resume session-xxxxx-xxxxx
```

#### **üîç Pattern 3: Research &amp; Analysis**
```bash
# Start research session
npx claude-flow@alpha hive-mind spawn &quot;Research microservices patterns&quot; --agents researcher,analyst --claude

# Continue research in SAME session
npx claude-flow@alpha memory stats  # See what&#039;s been learned
npx claude-flow@alpha swarm &quot;Deep dive into API gateway patterns&quot; --continue-session
```

### **ü§î When Should I Create a New Hive?**

| Situation | Action | Command |
|-----------|--------|---------|
| **Same objective/feature** | Continue existing hive | `npx claude-flow@alpha hive-mind resume &lt;session-id&gt;` |
| **New feature in same project** | Create new hive with namespace | `npx claude-flow@alpha hive-mind spawn &quot;new-feature&quot; --namespace feature-name` |
| **Completely different project** | New directory + init | `mkdir new-project &amp;&amp; cd new-project &amp;&amp; npx claude-flow@alpha init` |
| **Experimenting/testing** | Temporary hive | `npx claude-flow@alpha hive-mind spawn &quot;experiment&quot; --temp` |

### **üìÅ Understanding &quot;Empty&quot; Directories**

**Don&#039;t panic if directories seem empty!** Claude-Flow uses SQLite databases that may not show files in directory listings:

```bash
# Check what&#039;s actually stored (even if directories look empty)
npx claude-flow@alpha memory stats        # See memory data
npx claude-flow@alpha memory list         # List all namespaces  
npx claude-flow@alpha hive-mind status    # See active hives

# Your project structure after initialization:
# .hive-mind/     &lt;- Contains config.json + SQLite session data
# .swarm/         &lt;- Contains memory.db (SQLite database)
# memory/         &lt;- Agent-specific memories (created when agents spawn)
# coordination/   &lt;- Active workflow files (created during tasks)
```

### **üîÑ Continuing Previous Work**

```bash
# See what you were working on
npx claude-flow@alpha hive-mind status
npx claude-flow@alpha memory query --recent --limit 5

# List all sessions to find the one you want
npx claude-flow@alpha hive-mind sessions

# Resume specific session by ID
npx claude-flow@alpha hive-mind resume session-xxxxx-xxxxx
```

---

## ü™ù **Advanced Hooks System**

### **Automated Workflow Enhancement**
Claude-Flow v2.0.0 introduces a powerful hooks system that automates coordination and enhances every operation:

```bash
# Hooks automatically trigger on operations
npx claude-flow@alpha init --force  # Auto-configures MCP servers &amp; hooks
```

### **Available Hooks**

#### **Pre-Operation Hooks**
- **`pre-task`**: Auto-assigns agents based on task complexity
- **`pre-search`**: Caches searches for improved performance  
- **`pre-edit`**: Validates files and prepares resources
- **`pre-command`**: Security validation before execution

#### **Post-Operation Hooks**
- **`post-edit`**: Auto-formats code using language-specific tools
- **`post-task`**: Trains neural patterns from successful operations
- **`post-command`**: Updates memory with operation context
- **`notification`**: Real-time progress updates

#### **Session Hooks**
- **`session-start`**: Restores previous context automatically
- **`session-end`**: Generates summaries and persists state
- **`session-restore`**: Loads memory from previous sessions

### **Hook Configuration**
```json
// .claude/settings.json (auto-configured)
{
  &quot;hooks&quot;: {
    &quot;preEditHook&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;claude-flow&quot;, &quot;hooks&quot;, &quot;pre-edit&quot;, &quot;--file&quot;, &quot;${file}&quot;, &quot;--auto-assign-agents&quot;, &quot;true&quot;],
      &quot;alwaysRun&quot;: false
    },
    &quot;postEditHook&quot;: {
      &quot;command&quot;: &quot;npx&quot;, 
      &quot;args&quot;: [&quot;claude-flow&quot;, &quot;hooks&quot;, &quot;post-edit&quot;, &quot;--file&quot;, &quot;${file}&quot;, &quot;--format&quot;, &quot;true&quot;],
      &quot;alwaysRun&quot;: true
    },
    &quot;sessionEndHook&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [&quot;claude-flow&quot;, &quot;hooks&quot;, &quot;session-end&quot;, &quot;--generate-summary&quot;, &quot;true&quot;],
      &quot;alwaysRun&quot;: true
    }
  }
}
```

### **Using Hooks in Claude Code**

Hooks integrate seamlessly with Claude Code&#039;s workflow:

1. **Automatic Triggering**: Hooks fire automatically during Claude Code operations
2. **Context Awareness**: Each hook receives relevant context (file paths, commands, etc.)
3. **Non-Blocking**: Hooks run asynchronously to maintain performance
4. **Configurable**: Enable/disable specific hooks as needed

### **Hook Examples**

```bash
# Manual hook execution
npx claude-flow hooks pre-task --description &quot;Build REST API&quot; --auto-spawn-agents

# Post-edit with formatting
npx claude-flow hooks post-edit --file &quot;src/api.js&quot; --format --train-neural

# Session management
npx claude-flow hooks session-end --generate-summary --persist-state
```

### **Fixing Hook Variable Interpolation**

If you&#039;re experiencing issues with `${file}` or `${command}` variables not working in your hooks (common with Claude Code 1.0.51+), use the `fix-hook-variables` command:

```bash
# Fix all found settings.json files
npx claude-flow@alpha fix-hook-variables

# Fix specific file
npx claude-flow@alpha fix-hook-variables .claude/settings.json

# Create test configuration
npx claude-flow@alpha fix-hook-variables --test
```

This command automatically transforms legacy variable syntax to working environment variables:
- `${file}` ‚Üí `$CLAUDE_EDITED_FILE`
- `${command}` ‚Üí `$CLAUDE_COMMAND`
- `${tool}` ‚Üí `$CLAUDE_TOOL`

---
## üêù **Revolutionary Hive-Mind Intelligence**

### **Queen-Led AI Coordination**
Claude-Flow v2.0.0 introduces groundbreaking hive-mind architecture where a **Queen AI** coordinates specialized worker agents in perfect harmony.

```bash
# Deploy intelligent swarm coordination
npx claude-flow@alpha swarm &quot;Build a full-stack application&quot; --strategy development

# Launch hive-mind with specific specializations
npx claude-flow@alpha hive-mind spawn &quot;Create microservices architecture&quot; --agents 8 --claude
```

### **ü§ñ Intelligent Agent Types**
- **üëë Queen Agent**: Master coordinator and decision maker
- **üèóÔ∏è Architect Agents**: System design and technical architecture
- **üíª Coder Agents**: Implementation and development
- **üß™ Tester Agents**: Quality assurance and validation
- **üìä Analyst Agents**: Data analysis and insights
- **üîç Researcher Agents**: Information gathering and analysis
- **üõ°Ô∏è Security Agents**: Security auditing and compliance
- **üöÄ DevOps Agents**: Deployment and infrastructure

---

## ‚ö° **87 Advanced MCP Tools**

### **üß† Neural &amp; Cognitive Tools**
```bash
# Neural pattern recognition and training
npx claude-flow@alpha neural train --pattern coordination --epochs 50
npx claude-flow@alpha neural predict --model cognitive-analysis
npx claude-flow@alpha cognitive analyze --behavior &quot;development workflow&quot;
```

### **üíæ SQLite Memory Systems**
```bash
# Cross-session memory management with SQLite persistence
npx claude-flow@alpha memory store &quot;project-context&quot; &quot;Full-stack app requirements&quot;
npx claude-flow@alpha memory query &quot;authentication&quot; --namespace sparc
npx claude-flow@alpha memory stats  # Shows 12 specialized tables
npx claude-flow@alpha memory export backup.json --namespace default
npx claude-flow@alpha memory import project-memory.json
```

&gt; ü™ü **Windows Users**: SQLite will automatically fallback to in-memory storage if native modules fail. All features work normally, but data won&#039;t persist between sessions. See [Windows guide](https://github.com/ruvnet/claude-code-flow/blob/main/docs/windows-installation.md) for persistent storage options.

### **üîÑ Workflow Orchestration**
```bash
# Advanced workflow automation
npx claude-flow@alpha workflow create --name &quot;CI/CD Pipeline&quot; --parallel
npx claude-flow@alpha batch process --items &quot;test,build,deploy&quot; --concurrent
npx claude-flow@alpha pipeline create --config advanced-deployment.json
```

## üß† **Neural Network Capabilities**

### **Cognitive Computing Engine**
Powered by 27+ neural models optimized with WASM SIMD acceleration:

```bash
# Train coordination patterns
npx claude-flow@alpha neural train --pattern coordination --data &quot;workflow.json&quot;

# Real-time predictions
npx claude-flow@alpha neural predict --model task-optimizer --input &quot;current-state.json&quot;

# Analyze cognitive behavior
npx claude-flow@alpha cognitive analyze --behavior &quot;development-patterns&quot;
```

### **Neural Features**
- **Pattern Recognition**: Learns from successful operations
- **Adaptive Learning**: Improves performance over time
- **Transfer Learning**: Apply knowledge across domains
- **Model Compression**: Efficient storage and execution
- **Ensemble Models**: Combine multiple neural networks
- **Explainable AI**: Understand decision-making process

## üîß **DAA MCP Endpoints**

### **Dynamic Agent Architecture**
Complete programmatic control over agent lifecycle and coordination:

```bash
# Create specialized agents
npx claude-flow@alpha daa agent-create --type &quot;specialized-researcher&quot; \
  --capabilities &quot;[\&quot;deep-analysis\&quot;, \&quot;pattern-recognition\&quot;]&quot; \
  --resources &quot;{\&quot;memory\&quot;: 2048, \&quot;compute\&quot;: \&quot;high\&quot;}&quot;

# Match capabilities to tasks
npx claude-flow@alpha daa capability-match \
  --task-requirements &quot;[\&quot;security-analysis\&quot;, \&quot;performance-optimization\&quot;]&quot;

# Manage agent lifecycle
npx claude-flow@alpha daa lifecycle-manage --agentId &quot;agent-123&quot; --action &quot;scale-up&quot;
```

### **DAA Features**
- **Resource Allocation**: Dynamic CPU/memory management
- **Inter-Agent Communication**: Message passing and coordination
- **Consensus Mechanisms**: Democratic decision making
- **Fault Tolerance**: Self-healing with automatic recovery
- **Performance Optimization**: Real-time bottleneck resolution

### **MCP Tool Categories**

#### **üêù Swarm Orchestration** (15 tools)
- `swarm_init`, `agent_spawn`, `task_orchestrate`
- `swarm_monitor`, `topology_optimize`, `load_balance`
- `coordination_sync`, `swarm_scale`, `swarm_destroy`

#### **üß† Neural &amp; Cognitive** (12 tools)
- `neural_train`, `neural_predict`, `pattern_recognize`
- `cognitive_analyze`, `learning_adapt`, `neural_compress`
- `ensemble_create`, `transfer_learn`, `neural_explain`

#### **üíæ Memory Management** (10 tools)
- `memory_usage`, `memory_search`, `memory_persist`
- `memory_namespace`, `memory_backup`, `memory_restore`
- `memory_compress`, `memory_sync`, `memory_analytics`
- **SQLite Backend**: Persistent `.swarm/memory.db` with 12 specialized tables

#### **üìä Performance &amp; Monitoring** (10 tools)
- `performance_report`, `bottleneck_analyze`, `token_usage`
- `benchmark_run`, `metrics_collect`, `trend_analysis`
- `health_check`, `diagnostic_run`, `usage_stats`

#### **üîÑ Workflow Automation** (10 tools)
- `workflow_create`, `workflow_execute`, `workflow_export`
- `automation_setup`, `pipeline_create`, `scheduler_manage`
- `trigger_setup`, `batch_process`, `parallel_execute`

#### **üì¶ GitHub Integration** (6 tools)
- `github_repo_analyze`, `github_pr_manage`, `github_issue_track`
- `github_release_coord`, `github_workflow_auto`, `github_code_review`

#### **ü§ñ Dynamic Agents** (6 tools)
- `daa_agent_create`, `daa_capability_match`, `daa_resource_alloc`
- `daa_lifecycle_manage`, `daa_communication`, `daa_consensus`

#### **üõ°Ô∏è System &amp; Security** (8 tools)
- `security_scan`, `backup_create`, `restore_system`
- `config_manage`, `features_detect`, `log_analysis`

### **üìä GitHub Integration**
```bash
# GitHub workflow orchestration and coordination
npx claude-flow@alpha github gh-coordinator analyze --analysis-type security
npx claude-flow@alpha github pr-manager review --multi-reviewer --ai-powered
npx claude-flow@alpha github release-manager coord --version 2.0.0 --auto-changelog
npx claude-flow@alpha github repo-architect optimize --structure-analysis
npx claude-flow@alpha github issue-tracker manage --project-coordination
npx claude-flow@alpha github sync-coordinator align --multi-package
```

---

## üõ°Ô∏è **Seamless Claude Code Integration**

### **Auto-MCP Server Setup**
v2.0.0 Alpha automatically configures MCP servers for seamless Claude Code integration:

```bash
# Automatic MCP integration (happens during init)
‚úÖ claude-flow MCP server configured
‚úÖ ruv-swarm MCP server configured  
‚úÖ 87 tools available in Claude Code
‚úÖ --dangerously-skip-permissions set as default
```

### **Enhanced SPARC Workflows**
```bash
# Advanced SPARC development with neural enhancement
npx claude-flow@alpha sparc mode --type &quot;neural-tdd&quot; --auto-learn
npx claude-flow@alpha sparc workflow --phases &quot;all&quot; --ai-guided --memory-enhanced
```

---

## üß† **Cognitive Computing Features**

### **üéØ Neural Pattern Recognition**
- **27+ Cognitive Models**: Adaptive learning from successful operations
- **Pattern Analysis**: Real-time behavior analysis and optimization
- **Decision Tracking**: Complete audit trail of AI decisions
- **Performance Learning**: Continuous improvement from past executions

### **üîÑ Self-Healing Systems**
```bash
# Automatic error recovery and optimization
npx claude-flow@alpha health check --components all --auto-heal
npx claude-flow@alpha fault tolerance --

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[NapNeko/NapCatQQ]]></title>
            <link>https://github.com/NapNeko/NapCatQQ</link>
            <guid>https://github.com/NapNeko/NapCatQQ</guid>
            <pubDate>Mon, 08 Sep 2025 00:04:34 GMT</pubDate>
            <description><![CDATA[Modern protocol-side framework based on NTQQ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/NapNeko/NapCatQQ">NapNeko/NapCatQQ</a></h1>
            <p>Modern protocol-side framework based on NTQQ</p>
            <p>Language: TypeScript</p>
            <p>Stars: 5,666</p>
            <p>Forks: 452</p>
            <p>Stars today: 24 stars today</p>
            <h2>README</h2><pre>&lt;img src=&quot;https://napneko.github.io/assets/newnewlogo.png&quot; width = &quot;305&quot; height = &quot;411&quot; alt=&quot;NapCat&quot; align=right /&gt;
&lt;div align=&quot;center&quot;&gt;

# NapCat



_Modern protocol-side framework implemented based on NTQQ._

&gt; ‰∫ëËµ∑ÂÖÆÈ£éÁîüÔºåÂøÉÂêëËøúÊñπÂÖÆË∑ØÊú™ÊõæËá≥.

&lt;/div&gt;

---

## Welcome
+ NapCatQQ is a modern implementation of the Bot protocol based on NTQQ.
  - NapCatQQ ÊòØÁé∞‰ª£ÂåñÁöÑÂü∫‰∫é NTQQ ÁöÑ Bot ÂçèËÆÆÁ´ØÂÆûÁé∞

## Feature

+ **Easy to Use**
  - ‰Ωú‰∏∫ÂàùÂ≠¶ËÄÖËÉΩÂ§üËΩªÊùæ‰ΩøÁî®.
+ **Quick and Efficient**
  - Âú®‰ΩéÂÜÖÂ≠òÊìç‰ΩúÁ≥ªÁªüÈïøÊó∂ËøêË°å.
+ **Rich API Interface**
  - ÂÆåÊï¥ÂÆûÁé∞‰∫ÜÂ§ßÈÉ®ÂàÜÊ†áÂáÜÊé•Âè£.
+ **Stable and Reliable**
  - ÊåÅÁª≠Á®≥ÂÆöÁöÑÂºÄÂèë‰∏éÁª¥Êä§.
## Quick Start

ÂèØÂâçÂæÄ [Release](https://github.com/NapNeko/NapCatQQ/releases/) È°µÈù¢‰∏ãËΩΩÊúÄÊñ∞ÁâàÊú¨

**È¶ñÊ¨°‰ΩøÁî®**ËØ∑Âä°ÂøÖÊü•ÁúãÂ¶Ç‰∏ãÊñáÊ°£Áúã‰ΩøÁî®ÊïôÁ®ã

## Link

| Docs | [![Github.IO](https://img.shields.io/badge/docs%20on-Github.IO-orange)](https://napneko.github.io/) | [![Cloudflare.Worker](https://img.shields.io/badge/docs%20on-Cloudflare.Worker-black)](https://doc.napneko.icu/) | [![Cloudflare.HKServer](https://img.shields.io/badge/docs%20on-Cloudflare.HKServer-informational)](https://napcat.napneko.icu/) |
|:-:|:-:|:-:|:-:|

| Docs | [![Cloudflare.Pages](https://img.shields.io/badge/docs%20on-Cloudflare.Pages-blue)](https://napneko.pages.dev/) | [![Server.Other](https://img.shields.io/badge/docs%20on-Server.Other-green)](https://napcat.cyou/) | [![NapCat.Wiki](https://img.shields.io/badge/docs%20on-NapCat.Wiki-red)](https://www.napcat.wiki) |
|:-:|:-:|:-:|:-:|

| QQ Group | [![QQ Group#4](https://img.shields.io/badge/QQ%20Group%234-Join-blue)](https://qm.qq.com/q/CMmPbGw0jA) | [![QQ Group#3](https://img.shields.io/badge/QQ%20Group%233-Join-blue)](https://qm.qq.com/q/8zJMLjqy2Y) | [![QQ Group#2](https://img.shields.io/badge/QQ%20Group%232-Join-blue)](https://qm.qq.com/q/HaRcfrHpUk) | [![QQ Group#1](https://img.shields.io/badge/QQ%20Group%231-Join-blue)](https://qm.qq.com/q/I6LU87a0Yq) |
|:-:|:-:|:-:|:-:|:-:|

| Telegram | [![Telegram](https://img.shields.io/badge/Telegram-napcatqq-blue)](https://t.me/napcatqq) |
|:-:|:-:|

## Thanks

+ [Lagrange](https://github.com/LagrangeDev/Lagrange.Core) ÂØπÊú¨È°πÁõÆÁöÑÂ§ßÂäõÊîØÊåÅ ÂèÇËÄÉÈÉ®ÂàÜ‰ª£Á†Å Â∑≤Ëé∑ÊéàÊùÉ

+ [AstrBot](https://github.com/AstrBotDevs/AstrBot) ÊòØÂÆåÁæéÈÄÇÈÖçÊú¨È°πÁõÆÁöÑLLM BotÊ°ÜÊû∂ Âú®Ê≠§Êé®Ëçê‰∏Ä‰∏ã

+ [MaiBot](https://github.com/MaiM-with-u/MaiBot) ‰∏ÄÂè™ËµõÂçöÁæ§Âèã È∫¶È∫¶ BotÊ°ÜÊû∂ Âú®Ê≠§Êé®Ëçê‰∏Ä‰∏ã

+ [qq-chat-exporter](https://github.com/shuakami/qq-chat-exporter/) Âü∫‰∫éNapCatÁöÑÊ∂àÊÅØÂØºÂá∫Â∑•ÂÖ∑ Âú®Ê≠§Êé®Ëçê‰∏Ä‰∏ã

+ ‰∏çËøáÊúÄÊúÄÈáçË¶ÅÁöÑ ËøòÊòØÈúÄË¶ÅÊÑüË∞¢Â±èÂπïÂâçÁöÑ‰Ω†Âì¶~

---

## License
Êú¨È°πÁõÆÈááÁî® Ê∑∑ÂêàÂçèËÆÆ ÂºÄÊ∫êÔºåÂõ†Ê≠§‰ΩøÁî®Êú¨È°πÁõÆÊó∂Ôºå‰Ω†ÈúÄË¶ÅÊ≥®ÊÑè‰ª•‰∏ãÂá†ÁÇπÔºö
1. Á¨¨‰∏âÊñπÂ∫ì‰ª£Á†ÅÊàñ‰øÆÊîπÈÉ®ÂàÜÈÅµÂæ™ÂÖ∂ÂéüÂßãÂºÄÊ∫êËÆ∏ÂèØ.
2. Êú¨È°πÁõÆËé∑ÂèñÈÉ®ÂàÜÈ°πÁõÆÊéàÊùÉËÄå‰∏çÂèóÈÉ®ÂàÜÁ∫¶Êùü
2. È°πÁõÆÂÖ∂‰ΩôÈÄªËæë‰ª£Á†ÅÈááÁî®[Êú¨‰ªìÂ∫ìÂºÄÊ∫êËÆ∏ÂèØ](./LICENSE).

**Êú¨‰ªìÂ∫ì‰ªÖÁî®‰∫éÊèêÈ´òÊòìÁî®ÊÄßÔºåÂÆûÁé∞Ê∂àÊÅØÊé®ÈÄÅÁ±ªÂäüËÉΩÔºåÊ≠§Â§ñÔºåÁ¶ÅÊ≠¢‰ªª‰ΩïÈ°πÁõÆÊú™Áªè‰ªìÂ∫ì‰∏ª‰ΩúËÄÖÊéàÊùÉÂü∫‰∫é NapCat ‰ª£Á†ÅÂºÄÂèë„ÄÇ‰ΩøÁî®ËØ∑ÈÅµÂÆàÂΩìÂú∞Ê≥ïÂæãÊ≥ïËßÑÔºåÁî±Ê≠§ÈÄ†ÊàêÁöÑÈóÆÈ¢òÁî±‰ΩøÁî®ËÄÖÂíåÊèê‰æõËøùËßÑ‰ΩøÁî®ÊïôÁ®ãËÄÖË¥üË¥£„ÄÇ**
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[streetwriters/notesnook]]></title>
            <link>https://github.com/streetwriters/notesnook</link>
            <guid>https://github.com/streetwriters/notesnook</guid>
            <pubDate>Mon, 08 Sep 2025 00:04:33 GMT</pubDate>
            <description><![CDATA[A fully open source & end-to-end encrypted note taking alternative to Evernote.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/streetwriters/notesnook">streetwriters/notesnook</a></h1>
            <p>A fully open source & end-to-end encrypted note taking alternative to Evernote.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 12,616</p>
            <p>Forks: 823</p>
            <p>Stars today: 21 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
&lt;img style=&quot;align:center;&quot; src=&quot;./resources/icon.png&quot; alt=&quot;Notesnook Logo&quot; width=&quot;100&quot; /&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;Notesnook&lt;/h1&gt;
&lt;h3 align=&quot;center&quot;&gt;An end-to-end encrypted note taking alternative to Evernote.&lt;/h3&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://notesnook.com/&quot;&gt;Website&lt;/a&gt; | &lt;a href=&quot;https://notesnook.com/about&quot;&gt;About us&lt;/a&gt; | &lt;a href=&quot;https://notesnook.com/roadmap&quot;&gt;Roadmap&lt;/a&gt; | &lt;a href=&quot;https://notesnook.com/downloads&quot;&gt;Downloads&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/@notesnook&quot;&gt;Twitter&lt;/a&gt; | &lt;a href=&quot;https://discord.gg/5davZnhw3V&quot;&gt;Discord&lt;/a&gt;
&lt;/p&gt;

## Overview

Notesnook is a free (as in speech) &amp; open-source note-taking app focused on user privacy &amp; ease of use. To ensure zero knowledge principles, Notesnook encrypts everything on your device using `XChaCha20-Poly1305` &amp; `Argon2`.

Notesnook is our **proof** that privacy does _not_ (always) have to come at the cost of convenience. We aim to provide users peace of mind &amp; 100% confidence that their notes are safe and secure. The decision to go fully open source is one of the most crucial steps towards that.

This repository contains all the code required to build &amp; use the Notesnook web, desktop &amp; mobile clients. If you are looking for a full feature list or screenshots, please check the [website](https://notesnook.com/).

## Developer guide

### Technologies &amp; languages

Notesnook is built using the following technologies:

1. JavaScript/Typescript ‚Äî this repo is in a hybrid state. A lot of the newer code is being written in Typescript &amp; the old code is slowly being ported over.
2. React ‚Äî the whole front-end across all platforms is built using React.
3. React Native ‚Äî For mobile apps we are using React Native
4. Electron ‚Äî For desktop app
5. NPM ‚Äî listed here because we **don&#039;t** use Yarn or PNPM or XYZ across any of our projects.
6. Nx ‚Äî maintaining monorepos is hard but Nx makes it easier.

&gt; **Note: Each project in the monorepo contains its own architecture details which you can refer to.**

### Monorepo structure

| Name                       | Path                                               | Description                                                          |
| -------------------------- | -------------------------------------------------- | -------------------------------------------------------------------- |
| `@notesnook/web`           | [/apps/web](/apps/web)                             | Web client                                                           |
| `@notesnook/desktop`       | [/apps/desktop](/apps/desktop)                     | Desktop client                                                       |
| `@notesnook/mobile`        | [/apps/mobile](/apps/mobile)                       | Android/iOS clients                                                  |
| `@notesnook/web-clipper`   | [/extensions/web-clipper](/extensions/web-clipper) | Web clipper                                                          |
| `@notesnook/core`          | [/packages/core](/packages/core)                   | Shared core between all platforms                                    |
| `@notesnook/crypto`        | [/packages/crypto](/packages/crypto)               | Cryptography library wrapper around libsodium                        |
| `@notesnook/clipper`       | [/packages/clipper](/packages/clipper)             | Web clipper core handling everything related to actual page clipping |
| `@notesnook/editor`        | [/packages/editor](/packages/editor)               | Notesnook editor + all extensions                                    |
| `@notesnook/editor-mobile` | [/packages/editor-mobile](/packages/editor-mobile) | A very thin wrapper around `@notesnook/editor` for mobile clients    |
| `@notesnook/logger`        | [/packages/logger](/packages/logger)               | Simple &amp; pluggable logger                                            |
| `@notesnook/sodium`        | [/packages/sodium](/packages/sodium)               | Wrapper around libsodium to support Node.js &amp; Browser                |
| `@notesnook/streamable-fs` | [/packages/streamable-fs](/packages/streamable-fs) | Streaming interface around an IndexedDB based file system            |
| `@notesnook/theme`         | [/packages/theme](/packages/theme)                 | The core theme used in web &amp; desktop clients                         |

### Contributing guidelines

If you are interested in contributing to Notesnook, I highly recommend checking out the [contributing guidelines](/CONTRIBUTING.md). You&#039;ll find all the relevant information such as [style guideline](/CONTRIBUTING.md#style-guidelines), [how to make a PR](/CONTRIBUTING.md#opening--submitting-a-pull-request), [how to commit](/CONTRIBUTING.md#commit-guidelines) etc., there.

### Support &amp; help

You can reach out to us via:

1. [Email](mailto:support@streetwriters.co)
2. [Discord](https://discord.gg/5davZnhw3V)
3. [Twitter](https://twitter.com/notesnook)
4. [Create an issue](https://github.com/streetwriters/notesnook/issues/new)

We take all queries, issues and bug reports that you might have. Feel free to ask.

## Additional Resources

- [Migrating &amp; Importing your data from other apps ‚Äî Importer](https://help.notesnook.com/importing-notes)
- [Privacy policy](https://notesnook.com/privacy) &amp; [Terms of service](https://notesnook.com/terms)
- [Verify Notesnook encryption claims yourself ‚Äî Vericrypt](https://vericrypt.notesnook.com/)
- [Why Notesnook requires an email address?](https://blog.notesnook.com/why-notesnook-requires-an-email-address/)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[AmruthPillai/Reactive-Resume]]></title>
            <link>https://github.com/AmruthPillai/Reactive-Resume</link>
            <guid>https://github.com/AmruthPillai/Reactive-Resume</guid>
            <pubDate>Mon, 08 Sep 2025 00:04:32 GMT</pubDate>
            <description><![CDATA[A one-of-a-kind resume builder that keeps your privacy in mind. Completely secure, customizable, portable, open-source and free forever. Try it out today!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/AmruthPillai/Reactive-Resume">AmruthPillai/Reactive-Resume</a></h1>
            <p>A one-of-a-kind resume builder that keeps your privacy in mind. Completely secure, customizable, portable, open-source and free forever. Try it out today!</p>
            <p>Language: TypeScript</p>
            <p>Stars: 32,905</p>
            <p>Forks: 3,502</p>
            <p>Stars today: 19 stars today</p>
            <h2>README</h2><pre>![Reactive Resume](https://i.imgur.com/FFc4nyZ.jpg)

![App Version](https://img.shields.io/github/package-json/version/AmruthPillai/Reactive-Resume?label=version)
[![Docker Pulls](https://img.shields.io/docker/pulls/amruthpillai/reactive-resume)](https://hub.docker.com/repository/docker/amruthpillai/reactive-resume)
[![GitHub Sponsors](https://img.shields.io/github/sponsors/AmruthPillai)](https://github.com/sponsors/AmruthPillai)
[![Crowdin](https://badges.crowdin.net/reactive-resume/localized.svg)](https://crowdin.com/project/reactive-resume)
[![Discord](https://img.shields.io/discord/1173518977851473940?label=discord&amp;link=https%3A%2F%2Fdiscord.gg%2FhzwkZbyvUW)](https://discord.gg/hzwkZbyvUW)

# Reactive Resume

A free and open-source resume builder that simplifies the process of creating, updating, and sharing your resume.

### [Go to App](https://rxresu.me/) | [Docs](https://docs.rxresu.me/)

## Description

Reactive Resume is a free and open-source resume builder that simplifies the process of creating, updating, and sharing your resume. With zero user tracking or advertising, your privacy is a top priority. The platform is extremely user-friendly and can be self-hosted in less than 30 seconds if you wish to own your data completely.

It&#039;s available in multiple languages and comes packed with features such as real-time editing, dozens of templates, drag-and-drop customisation, and integration with OpenAI for enhancing your writing.

You can share a personalised link of your resume to potential employers, track its views or downloads, and customise your page layout by dragging-and-dropping sections. The platform also supports various font options and provides dozens of templates to choose from. And yes, there&#039;s even a dark mode for a more comfortable viewing experience.

Start creating your standout resume with Reactive Resume today!

## Templates

| Azurill                                                      | Bronzor                                                     | Chikorita                                                   |
| ------------------------------------------------------------ | ----------------------------------------------------------- | ----------------------------------------------------------- |
| &lt;img src=&quot;https://i.imgur.com/jKgo04C.jpeg&quot; width=&quot;200px&quot; /&gt; | &lt;img src=&quot;https://i.imgur.com/DFNQZP2.jpg&quot; width=&quot;200px&quot; /&gt; | &lt;img src=&quot;https://i.imgur.com/Dwv8Y7f.jpg&quot; width=&quot;200px&quot; /&gt; |

| Ditto                                                       | Kakuna                                                      | Nosepass                                                    |
| ----------------------------------------------------------- | ----------------------------------------------------------- | ----------------------------------------------------------- |
| &lt;img src=&quot;https://i.imgur.com/6c5lASL.jpg&quot; width=&quot;200px&quot; /&gt; | &lt;img src=&quot;https://i.imgur.com/268ML3t.jpg&quot; width=&quot;200px&quot; /&gt; | &lt;img src=&quot;https://i.imgur.com/npRLsPS.jpg&quot; width=&quot;200px&quot; /&gt; |

| Onyx                                                        | Pikachu                                                     | Rhyhorn                                                     |
| ----------------------------------------------------------- | ----------------------------------------------------------- | ----------------------------------------------------------- |
| &lt;img src=&quot;https://i.imgur.com/cxplXOW.jpg&quot; width=&quot;200px&quot; /&gt; | &lt;img src=&quot;https://i.imgur.com/Y9f7qsh.jpg&quot; width=&quot;200px&quot; /&gt; | &lt;img src=&quot;https://i.imgur.com/h4kQxy2.jpg&quot; width=&quot;200px&quot; /&gt; |

## Features

- **Free, forever** and open-source
- No telemetry, user tracking or advertising
- You can self-host the application in less than 30 seconds
- **Available in multiple languages** ([help add/improve your language here](https://translate.rxresu.me/))
- Use your email address (or a throw-away address, no problem) to create an account
- You can also sign in with your GitHub or Google account, and even set up two-factor authentication for extra security
- Create as many resumes as you like under a single account, optimising each resume for every job application based on its description for a higher ATS score
- **Bring your own OpenAI API key** and unlock features such as improving your writing, fixing spelling and grammar or changing the tone of your text in one-click
- Translate your resume into any language using ChatGPT and import it back for easier editing
- Create single page resumes or a resume that spans multiple pages easily
- Customize the colours and layouts to add a personal touch to your resume
- Customise your page layout as you like just by dragging-and-dropping sections
- Create custom sections that are specific to your industry if the existing ones don&#039;t fit
- Jot down personal notes specific to your resume that&#039;s only visible to you
- Lock a resume to prevent making any further edits (useful for master templates)
- **Dozens of templates** to choose from, ranging from professional to modern
- Design your resume using the standardised EuroPass design template
- Supports printing resumes in A4 or Letter page formats
- Design your resume with any font that&#039;s available on [Google Fonts](https://fonts.google.com/)
- **Share a personalised link of your resume** to companies or recruiters for them to get the latest updates
- You can track the number of views or downloads your public resume has received
- Built with state-of-the-art (at the moment) and dependable technologies that&#039;s battle tested and peer reviewed by the open-source community on GitHub
- **MIT License**, so do what you like with the code as long as you credit the original author
- And yes, there‚Äôs a dark mode too üåì

## Built With

- React (Vite), for the frontend
- NestJS, for the backend
- Postgres (primary database)
- Prisma ORM, which frees you to switch to any other relational database with a few minor changes in the code
- Minio (for object storage: to store avatars, resume PDFs and previews)
- Browserless (for headless chrome, to print PDFs and generate previews)
- SMTP Server (to send password recovery emails)
- GitHub/Google OAuth (for quickly authenticating users)
- LinguiJS and Crowdin (for translation management and localization)

## Star History

&lt;a href=&quot;https://star-history.com/#AmruthPillai/Reactive-Resume&amp;Date&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=AmruthPillai/Reactive-Resume&amp;type=Date&amp;theme=dark&quot; /&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=AmruthPillai/Reactive-Resume&amp;type=Date&quot; /&gt;
    &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=AmruthPillai/Reactive-Resume&amp;type=Date&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

## License

Reactive Resume is packaged and distributed using the [MIT License](/LICENSE.md) which allows for commercial use, distribution, modification and private use provided that all copies of the software contain the same license and copyright.

_By the community, for the community._  
A passion project by [Amruth Pillai](https://www.amruthpillai.com/)

&lt;p&gt;
  &lt;a href=&quot;https://www.digitalocean.com/?utm_medium=opensource&amp;utm_source=Reactive-Resume&quot;&gt;
    &lt;img src=&quot;https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/PoweredByDO/DO_Powered_by_Badge_blue.svg&quot; width=&quot;200px&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[amplication/amplication]]></title>
            <link>https://github.com/amplication/amplication</link>
            <guid>https://github.com/amplication/amplication</guid>
            <pubDate>Mon, 08 Sep 2025 00:04:31 GMT</pubDate>
            <description><![CDATA[Amplication brings order to the chaos of large-scale software development by creating Golden Paths for developers - streamlined workflows that drive consistency, enable high-quality code practices, simplify onboarding, and accelerate standardized delivery across teams.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/amplication/amplication">amplication/amplication</a></h1>
            <p>Amplication brings order to the chaos of large-scale software development by creating Golden Paths for developers - streamlined workflows that drive consistency, enable high-quality code practices, simplify onboarding, and accelerate standardized delivery across teams.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 15,917</p>
            <p>Forks: 1,550</p>
            <p>Stars today: 26 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://amplication.com/#gh-light-mode-only&quot;&gt;
    &lt;img src=&quot;./.github/assets/amplication-logo-light-mode.svg&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://amplication.com/#gh-dark-mode-only&quot;&gt;
    &lt;img src=&quot;./.github/assets/amplication-logo-dark-mode.svg&quot;&gt;
    &lt;/a&gt;
&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;i align=&quot;center&quot;&gt;Transform platform engineering with tailor-made live templates and service catalog üöÄ&lt;/i&gt;
&lt;/p&gt;

&lt;h4 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/amplication/amplication/actions/workflows/ci.yml&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/amplication/amplication/ci.yml?branch=master&amp;label=pipeline&amp;style=flat-square&quot; alt=&quot;continuous integration&quot; style=&quot;height: 20px;&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/amplication/amplication/graphs/contributors&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/contributors-anon/amplication/amplication?color=yellow&amp;style=flat-square&quot; alt=&quot;contributors&quot; style=&quot;height: 20px;&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://opensource.org/licenses/Apache-2.0&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/apache%202.0-blue.svg?style=flat-square&amp;label=license&quot; alt=&quot;license&quot; style=&quot;height: 20px;&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;a href=&quot;https://amplication.com/discord&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/discord-7289da.svg?style=flat-square&amp;logo=discord&quot; alt=&quot;discord&quot; style=&quot;height: 20px;&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://twitter.com/amplication&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/twitter/follow/amplication?style=social&quot; alt=&quot;twitter&quot; style=&quot;height: 20px;&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://www.youtube.com/c/Amplicationcom&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/youtube-d95652.svg?style=flat-square&amp;logo=youtube&quot; alt=&quot;youtube&quot; style=&quot;height: 20px;&quot;&gt;
  &lt;/a&gt;
&lt;/h4&gt;



&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://github.com/amplication/amplication/assets/149934977/80ed0d00-2f08-4bd8-92b1-1a347bb30ba6&quot; alt=&quot;dashboard&quot;/&gt;
&lt;/p&gt;


## Introduction

`Amplication` enables you to quickly build, maintain, and scale backend services that embed your company‚Äôs best practices and standards.

With Amplication you can create your own live templates embedding your organization‚Äôs best practices and standards, to ensure consistency and compliance from the start.¬†

Leveraging AI-powered automation, Amplication will generate microservices in no time, with everything that is needed to support your business domain: APIs, data models, DTOs and more, allowing engineers to focus on business logic. 

Now your live applications will be always up-to-date. Amplication automatically handles package updates, patches, and versioning, reducing technical debt and ensuring consistency across your services.¬†

&lt;details open&gt;
&lt;summary&gt;
 Features
&lt;/summary&gt; &lt;br /&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;img width=&quot;49%&quot; src=&quot;https://github.com/amplication/amplication/assets/73097785/9908a54a-7d49-4dbb-8f5e-3e99b7cadf30.png&quot; alt=&quot;apis&quot;/&gt;
&amp;nbsp;
    &lt;img width=&quot;49%&quot; src=&quot;https://github.com/amplication/amplication/assets/73097785/ff406403-27f7-42b5-9569-d011432f16e5.png&quot; alt=&quot;data-models&quot;/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;img width=&quot;49%&quot; src=&quot;https://github.com/amplication/amplication/assets/73097785/62c8d533-8475-4290-abc8-c433c095e68a.png&quot; alt=&quot;plugins&quot;/&gt;
&amp;nbsp;
    &lt;img width=&quot;49%&quot; src=&quot;https://github.com/amplication/amplication/assets/73097785/9c67a354-a06f-47d1-a118-ab89b775bf91.png&quot; alt=&quot;microservices&quot;/&gt;
&lt;/p&gt; 
    
&lt;p align=&quot;center&quot;&gt;
    &lt;img width=&quot;49%&quot; src=&quot;https://github.com/amplication/amplication/assets/149934977/4daf03a4-0866-49c9-8dd6-a340f3465c73&quot; alt=&quot;own-your-code&quot;/&gt;
&amp;nbsp;
    &lt;img width=&quot;49%&quot; src=&quot;https://github.com/amplication/amplication/assets/73097785/1cca9721-b8d6-425b-a1a9-d10d3cdcc9b8.png&quot; alt=&quot;customize-code&quot;/&gt;
&lt;/p&gt;

&lt;/details&gt;

## Usage 

To get started with Amplication, the hosted version of the product can be used. You can get started immediately at [app.amplication.com](https://app.amplication.com). After the login page, you will be guided through creating your first service. The [website](https://amplication.com) provides an overview of the application, additional information on the product and guides can be found in the [docs](https://docs.amplication.com).

&lt;details&gt;
&lt;summary&gt;
  Tutorials
&lt;/summary&gt; &lt;br /&gt;

- [To-do application using Amplication and Angular](https://docs.amplication.com/tutorials/angular-todos)
- [To-do application using Amplication and React](https://docs.amplication.com/tutorials/react-todos)
&lt;/details&gt;

## Development

Alternatively, instead of using the hosted version of the product, Amplication can be run locally for code generation purposes or contributions - if so, please refer to our [contributing](#contributing_anchor) section.

&lt;details open&gt;
&lt;summary&gt;
Pre-requisites
&lt;/summary&gt; &lt;br /&gt;
To be able to start development on Amplication, make sure that you have the following prerequisites installed:

###

- Node.js
- Docker
- Git
&lt;/details&gt;

&lt;details open&gt;
&lt;summary&gt;
Running Amplication
&lt;/summary&gt; &lt;br /&gt;

&gt; **Note**
&gt; It is also possible to start development with GitHub Codespaces, when navigating to `&lt; &gt; Code`, select `Codespaces` instead of `Local`. Click on either the `+`-sign or the `Create codespace on master`-button.

Amplication is using a monorepo architecture - powered by &lt;a href=&quot;https://nx.dev&quot;&gt;Nx Workspaces&lt;/a&gt; - where multiple applications and libraries exist in a single repository. To setup a local development environment the following steps can be followed:

**BEFORE** you run the following steps make sure:
1. You have typescript installed locally on you machine ```npm install -g typescript```
2. You are using a supported node version (check `engines` `node` in the [package.json](./package.json))
3. You are using a supported npm version (check `engines` `npm` in the [package.json](./package.json))
4. You have `docker` installed and running on your machine


1. Clone the repository and install dependencies:
```shell
git clone https://github.com/amplication/amplication.git &amp;&amp; cd amplication &amp;&amp; npm install
```

2. Run the setup script, which takes care of installing dependencies, building packages, and setting up the workspace:
```shell
npm run setup:dev
```

3. Option 1: Running the required infrastructure - view infrastructure component logs


```shell
npm run docker:dev
```
3. Option 2: Running the required infrastructure - run the infrastructure components in background
```shell
npm run docker:dev -- -d
```

4. Apply database migrations
```shell
npm run db:migrate:deploy
```

5. To start developing, run one or more of the applications available under `serve:[application]` scripts of the package.json.

```shell
# running the server component
npm run serve:server

# running the client component
npm run serve:client

# running the data-service-generator component
npm run serve:dsg

# running the git-sync-manager component
npm run serve:git

# running the plugin-api component
npm run serve:plugins
```

&gt; **Note**
&gt; In order to run the Amplication client properly, both the client and server need to be started by the `npm run serve:[application]` command, as well as an additional component for development on a specific component.

The development environment should now be set up. Additional information on the different application components can be found under packages/`[application]`/README.md file. Happy hacking! üëæ
&lt;/details&gt;

## Resources

- **[Website](https://amplication.com)** overview of the product.
- **[Docs](https://docs.amplication.com)** for comprehensive documentation.
- **[Blog](https://amplication.com/blog)** for guides and technical comparisons.
- **[Discord](https://amplication.com/discord)** for support and discussions with the community and the team.
- **[GitHub](https://github.com/amplication/amplication)** for source code, project board, issues, and pull requests.
- **[Twitter](https://twitter.com/amplication)** for the latest updates on the product and published blogs.
- **[YouTube](https://www.youtube.com/c/Amplicationcom)** for guides and technical talks.

&lt;a name=&quot;contributing_anchor&quot;&gt;&lt;/a&gt;
## Contributing

The majority of Amplication code is open-source. We are committed to a transparent development process and highly appreciate any contributions. Whether you are helping us fix bugs, proposing new features, improving our documentation or spreading the word - we would love to have you as a part of the Amplication community. Please refer to our [contribution guidelines](./CONTRIBUTING.md) and [code of conduct](./CODE_OF_CONDUCT.md).

- Bug Report: If you see an error message or encounter an issue while using Amplication, please create a [bug report](https://github.com/amplication/amplication/issues/new?assignees=&amp;labels=type%3A+bug&amp;template=bug.yaml&amp;title=%F0%9F%90%9B+Bug+Report%3A+).

- Feature Request: If you have an idea or if there is a capability that is missing and would make development easier and more robust, please submit a [feature request](https://github.com/amplication/amplication/issues/new?assignees=&amp;labels=type%3A+feature+request&amp;template=feature.yml).

- Documentation Request: If you&#039;re reading the Amplication docs and feel like you&#039;re missing something, please submit a [documentation request](https://github.com/amplication/amplication/issues/new?assignees=&amp;labels=type%3A+docs&amp;template=documentation-request.yaml&amp;title=%F0%9F%93%96+Documentation%3A+).

Not sure where to start? Join our discord and we will help you get started!

&lt;a href=&quot;https://amplication.com/discord&quot;&gt;&lt;img src=&quot;https://amplication.com/images/discord_banner_purple.svg&quot; /&gt;&lt;/a&gt;

## Contributors

&lt;!---
npx contributor-faces --exclude &quot;*bot*&quot; --limit 70 --repo &quot;https://github.com/amplication/amplication&quot;

change the height and width for each of the contributors from 80 to 50.
---&gt;

[//]: contributor-faces
&lt;a href=&quot;https://github.com/yuval-hazaz&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/43705455?v=4&quot; title=&quot;yuval-hazaz&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/iddan&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/12671072?v=4&quot; title=&quot;iddan&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/tupe12334&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/61761153?v=4&quot; title=&quot;tupe12334&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/abrl91&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/39680385?v=4&quot; title=&quot;abrl91&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/morhag90&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/97830649?v=4&quot; title=&quot;morhag90&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/arielweinberger&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4976416?v=4&quot; title=&quot;arielweinberger&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/EugeneTseitlin&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6080188?v=4&quot; title=&quot;EugeneTseitlin&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/mshidlov&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/91742238?v=4&quot; title=&quot;mshidlov&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/barshimi&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4712526?v=4&quot; title=&quot;barshimi&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/overbit&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2861984?v=4&quot; title=&quot;overbit&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/germanilia&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/34738985?v=4&quot; title=&quot;germanilia&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/shaharblanksela&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/91251849?v=4&quot; title=&quot;shaharblanksela&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/GalCegla&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/62651890?v=4&quot; title=&quot;GalCegla&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/belkind27&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/71218434?v=4&quot; title=&quot;belkind27&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/levivannoort&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/73097785?v=4&quot; title=&quot;levivannoort&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/jainpawan21&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/39362422?v=4&quot; title=&quot;jainpawan21&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/g-traub&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/33841027?v=4&quot; title=&quot;g-traub&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/lalit8347&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/74647848?v=4&quot; title=&quot;lalit8347&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/alonram&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/40050499?v=4&quot; title=&quot;alonram&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/muhsinkamil&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/62111075?v=4&quot; title=&quot;muhsinkamil&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/lokeswaran-aj&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/74011196?v=4&quot; title=&quot;lokeswaran-aj&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/meeroslava&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/20791516?v=4&quot; title=&quot;meeroslava&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/udanna&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8627181?v=4&quot; title=&quot;udanna&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/CKanishka&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/30779692?v=4&quot; title=&quot;CKanishka&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/gitstart&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1501599?v=4&quot; title=&quot;gitstart&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/almogbhl&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/32982671?v=4&quot; title=&quot;almogbhl&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/chaiwattsw&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/30198386?v=4&quot; title=&quot;chaiwattsw&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/astitva0011&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/113434018?v=4&quot; title=&quot;astitva0011&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/kalmanl&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9283404?v=4&quot; title=&quot;kalmanl&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/akshay-bharadva&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/52954931?v=4&quot; title=&quot;akshay-bharadva&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/souravjain540&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/53312820?v=4&quot; title=&quot;souravjain540&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/MoFoGo&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/96979533?v=4&quot; title=&quot;MoFoGo&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/molaycule&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/20028628?v=4&quot; title=&quot;molaycule&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/theamanbhargava&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/23207069?v=4&quot; title=&quot;theamanbhargava&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/MichaelSolati&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11811422?v=4&quot; title=&quot;MichaelSolati&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/b4s36t4&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/59088937?v=4&quot; title=&quot;b4s36t4&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/gabimoncha&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/39256258?v=4&quot; title=&quot;gabimoncha&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/ShabanaNaik&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/76608039?v=4&quot; title=&quot;ShabanaNaik&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/Spid3rrr&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/38404399?v=4&quot; title=&quot;Spid3rrr&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/mulygottlieb&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1912933?v=4&quot; title=&quot;mulygottlieb&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/TheLearneer&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/23402178?v=4&quot; title=&quot;TheLearneer&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/wiseaidev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/62179149?v=4&quot; title=&quot;wiseaidev&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/VoidCupboard&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/82395440?v=4&quot; title=&quot;VoidCupboard&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/kabhamo&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/74118584?v=4&quot; title=&quot;kabhamo&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/michizhou&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/33012425?v=4&quot; title=&quot;michizhou&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/Himanxu1&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/80101755?v=4&quot; title=&quot;Himanxu1&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/ahlavorato&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/114295834?v=4&quot; title=&quot;ahlavorato&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/munyoudoum&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/60089135?v=4&quot; title=&quot;munyoudoum&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/rkshaw20&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/73245914?v=4&quot; title=&quot;rkshaw20&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/yonantan&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9935021?v=4&quot; title=&quot;yonantan&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/alexbass86&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/96179897?v=4&quot; title=&quot;alexbass86&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/jatinparmar96&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/15108177?v=4&quot; title=&quot;jatinparmar96&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/AllMikeNoIke&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/20914059?v=4&quot; title=&quot;AllMikeNoIke&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/ilovetensor&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/96976448?v=4&quot; title=&quot;ilovetensor&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/asharonbaltazar&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/58940073?v=4&quot; title=&quot;asharonbaltazar&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/goingdust&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/87334449?v=4&quot; title=&quot;goingdust&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;

[//]: contributor-faces

## License

A large part of this project is licensed under the [Apache 2.0](./LICENSE) license. The only exception are the components under the `ee` (enterprise edition) directory, these are licensed under the [Amplication Enterprise Edition](./ee/LICENSE) license.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[formbricks/formbricks]]></title>
            <link>https://github.com/formbricks/formbricks</link>
            <guid>https://github.com/formbricks/formbricks</guid>
            <pubDate>Mon, 08 Sep 2025 00:04:30 GMT</pubDate>
            <description><![CDATA[Open Source Qualtrics Alternative]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/formbricks/formbricks">formbricks/formbricks</a></h1>
            <p>Open Source Qualtrics Alternative</p>
            <p>Language: TypeScript</p>
            <p>Stars: 11,212</p>
            <p>Forks: 1,983</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre>&lt;div id=&quot;top&quot;&gt;&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;Help us grow and star us on Github! ‚≠êÔ∏è&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;

&lt;a href=&quot;https://formbricks.com&quot;&gt;

&lt;img width=&quot;120&quot; alt=&quot;Open Source Privacy First Experience Management Solution Qualtrics Alternative Logo&quot; src=&quot;https://github.com/formbricks/formbricks/assets/72809645/0086704f-bee7-4d38-9cc8-fa42ee59e004&quot;&gt;

&lt;/a&gt;

&lt;h3 align=&quot;center&quot;&gt;Formbricks&lt;/h3&gt;

&lt;p align=&quot;center&quot;&gt;
The Open Source Qualtrics Alternative
&lt;br /&gt;
&lt;a href=&quot;https://formbricks.com/&quot;&gt;Website&lt;/a&gt;
&lt;/p&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/formbricks/formbricks/blob/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-AGPL-purple&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/formbricks/formbricks/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/formbricks/formbricks?logo=github&quot; alt=&quot;Github Stars&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://insights.linuxfoundation.org/project/formbricks&quot;&gt;&lt;img src=&quot;https://insights.linuxfoundation.org/api/badge/health-score?project=formbricks&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://news.ycombinator.com/item?id=32303986&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Hacker%20News-122-%23FF6600&quot; alt=&quot;Hacker News&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;[https://www.producthunt.com/products/formbricks](https://www.producthunt.com/posts/formbricks)&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Product%20Hunt-455-orange?logo=producthunt&amp;logoColor=%23fff&quot; alt=&quot;Product Hunt&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.blog/2023-04-12-github-accelerator-our-first-cohort-and-whats-next/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2023-blue?logo=github&amp;label=Github%20Accelerator&quot; alt=&quot;Github Accelerator&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/formbricks/formbricks/issues?q=is:issue+is:open+label:%22%F0%9F%99%8B%F0%9F%8F%BB%E2%80%8D%E2%99%82%EF%B8%8Fhelp+wanted%22&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Help%20Wanted-Contribute-blue&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;br/&gt;

&lt;div style=&quot;background-color:#f8fafc; border-radius:5px;&quot;&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;i&gt;Trusted by&lt;/i&gt;&lt;br/&gt;
  &lt;img width=&quot;867&quot; alt=&quot;clients-hi-res&quot; src=&quot;https://github.com/formbricks/formbricks/assets/72809645/924d3693-f66a-4063-bb31-6e5789a8175a&quot;&gt;
&lt;/p&gt;
&lt;div&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://trendshift.io/repositories/2570&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/2570&quot; alt=&quot;Trendshift Badge for formbricks/formbricks&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;

## ‚ú® About Formbricks

&lt;img width=&quot;1527&quot; alt=&quot;formbricks-sneak&quot; src=&quot;https://github-production-user-asset-6210df.s3.amazonaws.com/675065/249441967-ccb89ea3-82b4-4bf2-8d2c-528721ec313b.png&quot;&gt;

Formbricks provides a free and open source surveying platform. Gather feedback at every point in the user journey with beautiful in-app, website, link and email surveys. Build on top of Formbricks or leverage prebuilt data analysis capabilities.

**Try it out in the cloud at [formbricks.com](https://app.formbricks.com/auth/signup)**

## üí™ Mission: Empower your team, craft an irresistible experience.

Formbricks is both a free and open source survey platform - and a privacy-first experience management platform. Use in-app, website, link and email surveys to gather user and customer insights at every point of their journey. Leverage Formbricks Insight Platform or build your own. Life&#039;s too short for mediocre UX.

### Table of Contents

- [Features](#features)

- [Getting Started](#getting-started)

- [Cloud Version](#cloud-version)

- [Self-hosted Version](#self-hosted-version)

- [Development](#development)

- [Contribution](#contribution)

- [Contact](#contact-us)

- [Security](#security)

- [License](#license)

&lt;a id=&quot;features&quot;&gt;&lt;/a&gt;

### Features

- üì≤ Create **conversion-optimized surveys** with our no-code editor with several question types.

- üìö Choose from a variety of best-practice **templates**.

- üë©üèª Launch and **target your surveys to specific user groups** without changing your application code.

- üîó Create shareable **link surveys**.

- üë®‚Äçüë©‚Äçüë¶ Invite your organization members to **collaborate** on your surveys.

- üîå Integrate Formbricks with **Slack, Notion, Zapier, n8n and more**.

- üîí All **open source**, transparent and self-hostable.

### Built on Open Source

- üíª [Typescript](https://www.typescriptlang.org/)

- üöÄ [Next.js](https://nextjs.org/)

- ‚öõÔ∏è [React](https://reactjs.org/)

- üé® [TailwindCSS](https://tailwindcss.com/)

- üìö [Prisma](https://prisma.io/)

- üîí [Auth.js](https://authjs.dev/)

- üßò‚Äç‚ôÇÔ∏è [Zod](https://zod.dev/)

- üêõ [Vitest](https://vitest.dev/)

&lt;a id=&quot;getting-started&quot;&gt;&lt;/a&gt;

## üöÄ Getting started

We&#039;ve got several options depending on your need to help you quickly get started with Formbricks.

&lt;a id=&quot;cloud-version&quot;&gt;&lt;/a&gt;

### ‚òÅÔ∏è Cloud Version

Formbricks has a hosted cloud offering with a generous free plan to get you up and running as quickly as possible. To get started, please visit [formbricks.com](https://app.formbricks.com/auth/signup).

&lt;a id=&quot;self-hosted-version&quot;&gt;&lt;/a&gt;

### üê≥ Self-hosting Formbricks

Formbricks is available Open-Source under AGPLv3 license. You can host Formbricks on your own servers using Docker without a subscription.

If you opt for self-hosting Formbricks, here are a few options to consider:

#### Docker

To get started with self-hosting with Docker, take a look at our [self-hosting docs](https://formbricks.com/docs/self-hosting/deployment).

#### Community-managed One Click Hosting

##### Railway

You can deploy Formbricks on [Railway](https://railway.app) using the button below.

[![Deploy on Railway](https://railway.app/button.svg)](https://railway.app/new/template/PPDzCd)

##### RepoCloud

Or you can also deploy Formbricks on [RepoCloud](https://repocloud.io) using the button below.

[![Deploy on RepoCloud](https://d16t0pc4846x52.cloudfront.net/deploy.png)](https://repocloud.io/details/?app_id=254)

##### Zeabur

Or you can also deploy Formbricks on [Zeabur](https://zeabur.com) using the button below.

[![Deploy to Zeabur](https://zeabur.com/button.svg)](https://zeabur.com/templates/G4TUJL)

&lt;a id=&quot;development&quot;&gt;&lt;/a&gt;

## üë®‚Äçüíª Development

### Prerequisites

Here is what you need to be able to run Formbricks:

- [Node.js](https://nodejs.org/en) (Version: &gt;=18.x)

- [Pnpm](https://pnpm.io/)

- [Docker](https://www.docker.com/) - to run PostgreSQL and MailHog

### Local Setup

To get started locally, we&#039;ve got a [guide to help you](https://formbricks.com/docs/developer-docs/contributing/get-started#local-machine-setup).

### Gitpod Setup

1. Click the button below to open this project in Gitpod.

2. This will open a fully configured workspace in your browser with all the necessary dependencies already installed.

[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/formbricks/formbricks)

&lt;a id=&quot;contribution&quot;&gt;&lt;/a&gt;

## ‚úçÔ∏è Contribution

We are very happy if you are interested in contributing to Formbricks ü§ó

Here are a few options:

- Star this repo.

- Create issues every time you feel something is missing or goes wrong.

- Upvote issues with üëç reaction so we know what the demand for a particular issue is to prioritize it within the roadmap.

- Note: For the time being, we can only facilitate code contributions as an exception.

## All Thanks To Our Contributors

&lt;a href=&quot;https://github.com/formbricks/formbricks/graphs/contributors&quot;&gt;

&lt;img src=&quot;https://contrib.rocks/image?repo=formbricks/formbricks&quot; /&gt;

&lt;/a&gt;

&lt;a id=&quot;contact-us&quot;&gt;&lt;/a&gt;

## üìÜ Contact us

Let&#039;s have a chat about your survey needs and get you started.

&lt;a href=&quot;https://cal.com/johannes/onboarding?utm_source=banner&amp;utm_campaign=oss&quot;&gt;&lt;img alt=&quot;Book us with Cal.com&quot; src=&quot;https://cal.com/book-with-cal-dark.svg&quot; /&gt;&lt;/a&gt;

&lt;a id=&quot;license&quot;&gt;&lt;/a&gt;

&lt;a id=&quot;security&quot;&gt;&lt;/a&gt;

## üîí Security

We take security very seriously. If you come across any security vulnerabilities, please disclose them by sending an email to security@formbricks.com. We appreciate your help in making our platform as secure as possible and are committed to working with you to resolve any issues quickly and efficiently. See [`SECURITY.md`](./SECURITY.md) for more information.

&lt;a id=&quot;license&quot;&gt;&lt;/a&gt;

## üë©‚Äç‚öñÔ∏è License

### The AGPL Formbricks Core

The Formbricks core application is licensed under the [AGPLv3 Open Source License](https://github.com/formbricks/formbricks/blob/main/LICENSE). The core application is fully functional and includes everything you need to design &amp; run link surveys, website surveys and in-app surveys. You can use the software for free for personal and commercial use. You&#039;re also allowed to create and distribute modified versions as long as you document the changes you make incl. date. The AGPL license requires you to publish your modified version under the AGPLv3 license as well.

### The Enterprise Edition

Additional to the AGPL licensed Formbricks core, this repository contains code licensed under an Enterprise license. The [code](https://github.com/formbricks/formbricks/tree/main/apps/web/modules/ee) and [license](https://github.com/formbricks/formbricks/blob/main/apps/web/modules/ee/LICENSE) for the enterprise functionality can be found in the `/apps/web/modules/ee` folder of this repository. This additional functionality is not part of the AGPLv3 licensed Formbricks core and is designed to meet the needs of larger teams and enterprises. This advanced functionality is already included in the Docker images, but you need an [Enterprise License Key](https://formbricks.com/docs/self-hosting/enterprise) to unlock it.

### White-Labeling Formbricks and Other Licensing Needs

We currently do not offer Formbricks white-labeled. That means that we don&#039;t sell a license which let&#039;s other companies resell Formbricks to third parties under their name nor take parts (like the survey editor) out of Formbricks to add to their own software products. Any other needs? [Send us an email](mailto:hola@formbricks.com).

### Why charge for Enterprise Features?

The Enterprise Edition allows us to fund the development of Formbricks sustainably. It guarantees that the free and open-source surveying infrastructure we&#039;re building will be around for decades to come.

&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;#top&quot;&gt;üîº Back to top&lt;/a&gt;&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[fuma-nama/fumadocs]]></title>
            <link>https://github.com/fuma-nama/fumadocs</link>
            <guid>https://github.com/fuma-nama/fumadocs</guid>
            <pubDate>Mon, 08 Sep 2025 00:04:29 GMT</pubDate>
            <description><![CDATA[The beautiful & flexible React.js docs framework.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/fuma-nama/fumadocs">fuma-nama/fumadocs</a></h1>
            <p>The beautiful & flexible React.js docs framework.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 7,982</p>
            <p>Forks: 430</p>
            <p>Stars today: 22 stars today</p>
            <h2>README</h2><pre>![banner](./apps/docs/public/banner.png)

The framework for building documentation websites in any React.js frameworks.

**Officially Supported:**

- Next.js
- Vite: Tanstack Start, Waku, React Router

üìò Learn More: [Documentation](https://fumadocs.vercel.app).

## Compatibility

All packages are **ESM only**.

## Sticker

![logo](./documents/logo.png)

Welcome to print it out :D

## Contributions

Make sure to read the [Contributing Guide](/.github/contributing.md) before submitting a pull request.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Hiram-Wong/ZyPlayer]]></title>
            <link>https://github.com/Hiram-Wong/ZyPlayer</link>
            <guid>https://github.com/Hiram-Wong/ZyPlayer</guid>
            <pubDate>Mon, 08 Sep 2025 00:04:28 GMT</pubDate>
            <description><![CDATA[Ë∑®Âπ≥Âè∞Ê°åÈù¢Á´ØËßÜÈ¢ëËµÑÊ∫êÊí≠ÊîæÂô®,ÂÖçË¥πÈ´òÈ¢úÂÄº.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Hiram-Wong/ZyPlayer">Hiram-Wong/ZyPlayer</a></h1>
            <p>Ë∑®Âπ≥Âè∞Ê°åÈù¢Á´ØËßÜÈ¢ëËµÑÊ∫êÊí≠ÊîæÂô®,ÂÖçË¥πÈ´òÈ¢úÂÄº.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 7,558</p>
            <p>Forks: 941</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img width=&quot;128&quot; src=&quot;https://s2.loli.net/2024/02/29/7Q1nVbhkHdSmo5D.png&quot; &gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://zy.catni.cn&quot; target=&quot;_blank&quot;&gt;ÊñáÊ°£&lt;/a&gt;
  &lt;a href=&quot;https://github.com/Hiram-Wong/ZyPlayer/wiki&quot; target=&quot;_blank&quot;&gt;Áª¥Âü∫&lt;/a&gt;
  &lt;a href=&quot;https://github.com/Hiram-Wong/ZyPlayer/issues&quot; target=&quot;_blank&quot;&gt;ÂèçÈ¶à&lt;/a&gt;
  &lt;a href=&quot;https://github.com/Hiram-Wong/ZyPlayer/releases&quot; target=&quot;_blank&quot;&gt;‰∏ãËΩΩ&lt;/a&gt;
&lt;/p&gt;

# ËΩØ‰ª∂‰ªãÁªç

&gt; ÂêçÁß∞ËØ¥Êòé zyfun[Êñ∞ÂêçÁß∞ &gt;=3.3.8] zyplayer[ËÄÅÂêçÁß∞ &lt;=3.3.7]

`zyfun[zyplayer]`ÊòØ‰∏ÄÊ¨æÂÖçË¥πÊòìÁî®‰∏îÊâìÈÄ†ÁöÑÂÖ®ÂäüËÉΩÂ™í‰ΩìÊí≠ÊîæÂô®„ÄÇÂÆÉÂü∫‰∫é`electron-Vite`Ê°ÜÊû∂, ÁªìÂêà`TDesign`ÁªÑ‰ª∂Â∫ìÂíå`vue3`ÂÖ®ÂÆ∂Ê°∂, Ëá¥Âäõ‰∫éÊèê‰æõÊµÅÁïÖ„ÄÅÈ´òÊïàÁöÑË∑®Âπ≥Âè∞Â®±‰πê‰ΩìÈ™å„ÄÇ

**ÈáçË¶ÅÊèêÈÜí**: ‰ªÖÊ≠§GithubÂèëÂ∏ÉÔºåËØ∑Âãø‰∏äÂΩìÂèóÈ™óÔºõËØ∑ÂêÑ‰ΩçÁÆ°ÁêÜËÄÖ‰∏çË¶ÅË¥πÂäõÂÆ£‰º†ÂèäÂºïÊµÅÊú¨ËΩØ‰ª∂!

**ÈáçË¶ÅÊèêÈÜí**: ËØ∑Âä°ÂøÖÊîØÊåÅÊ≠£ÁâàÁâàÊùÉÔºåÊàë‰ª¨‰∏çÊèêÂÄ°ÁõóÁâà!

**ÈáçË¶ÅÊèêÈÜí**: Âú®ÂºÄÂßã‰ΩøÁî®ÂâçÔºåËØ∑Âä°ÂøÖËØ¶ËØªÂπ∂ÂêåÊÑèÁî®Êà∑ÂçèËÆÆÔºåÁ°Æ‰øùÈÅµÂÆàÁõ∏ÂÖ≥ËßÑÂÆö!

[![Star History Chart](https://api.star-history.com/svg?repos=Hiram-Wong/ZyPlayer&amp;type=Date)](https://star-history.com/#Hiram-Wong/ZyPlayer&amp;Date)

## üå¥ Ê≥ïÂæãÂ£∞Êòé‰∏éÊ≥®ÊÑè‰∫ãÈ°π

- Âº∫ÁÉàÂÄ°ÂØºÂêàÊ≥ïËßÇÂΩ±ÔºåÊú¨ËΩØ‰ª∂‰ªÖ‰Ωú‰∏∫Êí≠ÊîæÂ∑•ÂÖ∑Ôºå‰∏çÊ∂âÂèäËµÑÊ∫êÂ≠òÂÇ®ÊàñÂàÜÂèë„ÄÇ
- ‰ªÖ‰æõ‰∏™‰∫∫Â≠¶‰π†‰∫§ÊµÅ‰πãÁî®Ôºå24Â∞èÊó∂ÂÜÖËØ∑Ëá™ËßâÂç∏ËΩΩÔºåÂãø‰ΩúÂïÜ‰∏öÁî®ÈÄî„ÄÇ
- ËΩØ‰ª∂Êèê‰æõÊí≠ÊîæÊ°ÜÊû∂ÔºåÂÖ∑‰ΩìÊí≠ÊîæÊ∫êÈúÄÁî®Êà∑Ëá™Ë°åÈÖçÁΩÆ„ÄÇ
- ÈÉ®ÂàÜÁÅµÊÑüÊù•Ê∫ê‰∫é[ZY-Player](https://github.com/Hunlongyu/ZY-Player)ÔºåÂõæÊ†áÁ¥†ÊùêÊÑüË∞¢[@fourbeauty]Ë¥°ÁåÆ„ÄÇ

&lt;details&gt;
&lt;summary&gt;Â±ïÂºÄÊü•ÁúãÁî®Êà∑ÂçèËÆÆÂèäÂÖçË¥£Áî≥Êòé&lt;/summary&gt;
ÊÑüË∞¢ÊÇ®ÈÄâÊã©‰ΩøÁî®zyfun(‰ª•‰∏ãÁÆÄÁß∞Êú¨ËΩØ‰ª∂)ÔºåÂú®‰ΩøÁî®‰∫ßÂìÅÂíåÊúçÂä°‰πãÂâçÔºåËØ∑ÊÇ®‰ªîÁªÜÈòÖËØªÂíåÁêÜËß£‰ª•‰∏ãÂ£∞Êòé:

1. Ëã•ÊÇ®‰∏çÂêåÊÑèÊú¨Â£∞ÊòéÁöÑ‰ªª‰ΩïÂÜÖÂÆπÔºåËØ∑ÊÇ®Á´ãÂç≥ÂÅúÊ≠¢‰ΩøÁî®Êú¨ËΩØ‰ª∂„ÄÇ‰∏ÄÊó¶ÊÇ®ÂºÄÂßã‰ΩøÁî®Êú¨ËΩØ‰ª∂‰∫ßÂìÅÂíåÊúçÂä°ÔºåÂàôË°®Á§∫ÊÇ®Â∑≤ÂêåÊÑèÊú¨Â£∞ÊòéÁöÑÊâÄÊúâÂÜÖÂÆπ„ÄÇ
2. Êú¨ËΩØ‰ª∂‰ªÖ‰æõ‰∏™‰∫∫Â≠¶‰π†„ÄÅÁ†îÁ©∂ÂíåÊäÄÊúØ‰∫§ÊµÅ‰ΩøÁî®Ôºå‰ªÖÊèê‰æõÂ±ïÁ§∫ÂäüËÉΩÔºåÊâÄÊúâÊï∞ÊçÆËµÑÊ∫êÂùáÁî±Áî®Êà∑Ëá™Ë∫´Âà∂‰ΩúÊèê‰æõÔºåÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éËßÜÈ¢ëÁΩëÁ´ô„ÄÅÂ™í‰ΩìÂàÜ‰∫´Á´ôÁÇπÁ≠â„ÄÇÊú¨ËΩØ‰ª∂Êó†Ê≥ïÊéßÂà∂Ëøô‰∫õËµÑÊ∫êÁöÑÂêàÊ≥ïÊÄß„ÄÅÂáÜÁ°ÆÊÄß„ÄÅÂÆåÊï¥ÊÄßÊàñÂèØÁî®ÊÄßÔºåÂõ†Ê≠§‰∏çÂØπËµÑÊ∫êÂÜÖÂÆπÁöÑÁúüÂÆûÊÄß„ÄÅÂêàÊ≥ïÊÄßÊàñÈÄÇÁî®ÊÄßË¥üË¥£„ÄÇ
3. Áî±‰∫éÊï∞ÊçÆÊ∫ê‰∏∫Áî®Êà∑Ëá™Ë°åÂà∂‰ΩúÔºåÊàë‰ª¨Âú®Ê≠§ÁâπÂà´ÊèêÈÜí, ËßÜÈ¢ëÊàñÂºπÂπï‰∏≠ÂèØËÉΩÂá∫Áé∞ÁöÑ‰ªª‰ΩïÁ¨¨‰∏âÊñπÂπøÂëä„ÄÅ‰∫ßÂìÅÊé®Âπø‰ø°ÊÅØÁ≠âÁõ∏ÂÖ≥ÂÜÖÂÆπÔºåÂùáÁ≥ªÁ¨¨‰∏âÊñπ(Âê´Áî®Êà∑)Ë°å‰∏∫Ê§çÂÖ•ÔºåÈùûÊú¨ËΩØ‰ª∂Á≠ñÂàíÊàñÊ∑ªÂä†„ÄÇËØ∑ÊÇ®Âú®‰ΩìÈ™åËøáÁ®ã‰∏≠‰øùÊåÅË≠¶ÊÉïÔºåÂØπËøôÁ±ª‰ø°ÊÅØÁöÑÁúüÂÆûÊÄßÂèäÂêàÊ≥ïÊÄßËøõË°åËá™‰∏ªÁîÑÂà´ÔºåÂ¶ÇÁî®Êà∑ÈÅáËØàÈ™óÂõ†Ê≠§‰∫ßÁîüÁöÑÊçüÂ§±ÔºåÊú¨Âπ≥Âè∞‰∏çÊâøÊãÖ‰ªª‰ΩïË¥£‰ªª„ÄÇ
4. Êú¨ËΩØ‰ª∂Âà©Áî®ÁΩëÁªúÁà¨Ëô´ÊäÄÊúØËé∑ÂèñÈÉ®ÂàÜÊï∞ÊçÆÔºåÊó®Âú®‰∏∫Áî®Êà∑Êèê‰æõÊõ¥ÂÖ®Èù¢ÁöÑ‰ø°ÊÅØÊúçÂä°„ÄÇÂåÖÊã¨‰∏çÈôê‰∫éË±ÜÁì£(douban.com)„ÄÅÈÖ∑‰∫ë(ky.live)„ÄÅ‰∫ëÂêà(enlightent.cn)„ÄÅ112114(112114.xyz), ÂÄºÂæóÊ≥®ÊÑèÁöÑÊòØËøô‰∫õÁΩëÁ´ôÁöÑAPIÊú™ÁªèËøáÊéàÊùÉ„ÄÇÁî®Êà∑Âú®‰ΩøÁî®Ëøô‰∫õÊï∞ÊçÆÊó∂ÂèØËÉΩÈù¢‰∏¥Ê≥ïÂæãÈ£éÈô©ÔºåÂ¶ÇÂõ†Ê≠§ÂØºËá¥ÁöÑÊ≥ïÂæãË¥£‰ªªÔºåÁî®Êà∑Â∫îËá™Ë°åÊâøÊãÖ„ÄÇ
5. Êú¨ËΩØ‰ª∂‰ªÖ‰ΩøÁî®IframeÂµåÂÖ•Â§öÂÆ∂ËßÜÈ¢ëÂπ≥Âè∞ÁΩëÁ´ôÂÜÖÂÆπÔºåÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÁà±Â•áËâ∫(iqiyi.com)„ÄÅËÖæËÆØËßÜÈ¢ë(v.qq.com)„ÄÅÊêúÁãêËßÜÈ¢ë(tv.sohu.com)„ÄÅËÅöÂäõÁΩë(pptv.com)„ÄÅ360ÂΩ±ËßÜ(360kan.com)ÂèäËäíÊûúTV(mgtv.com)Á≠â„ÄÇÂØπ‰∫éÁî®Êà∑Âú®‰ΩøÁî®Êú¨ËΩØ‰ª∂ËøáÁ®ã‰∏≠ÂØπÂ¶Ç‰∏äÁΩëÁ´ôËøõË°åÁöÑ‰ªª‰ΩïÊìç‰ΩúÔºåÊú¨ËΩØ‰ª∂‰∏çÊâøÊãÖ‰ªª‰ΩïË¥£‰ªª„ÄÇ
6. Êú¨ËΩØ‰ª∂ÂÖ∑Â§áËµÑÊ∫êÂóÖÊé¢ÁâπÊÄßÔºåÂèØËÉΩ‰ºöÂºïÂèëÁ¨¨‰∏âÊñπÊï∞ÊçÆÁöÑÈöêÁßÅÂíåÂÆâÂÖ®È£éÈô©„ÄÇÁî®Êà∑Âú®‰ΩøÁî®ËØ•ÁâπÊÄßÊó∂ÔºåÈúÄËá™Ë°åÊâøÊãÖÂèØËÉΩ‰∫ßÁîüÁöÑ‰ø°ÊÅØÊ≥ÑÈú≤ÊàñÊª•Áî®È£éÈô©ÔºåÂπ∂ÂØπÂÖ∂ÂêéÊûúË¥üÂÖ®ÈÉ®Ë¥£‰ªª„ÄÇ
7. Êú¨ËΩØ‰ª∂Âê´‚ÄúÂéªÂπøÂëä‚ÄùÈÄâÈ°π‰ª•Â¢ûÂº∫‰ΩìÈ™åÔºåÊàë‰ª¨‰∏çÈºìÂä±‰ªª‰Ωï‰æµÁäØÁâàÊùÉÊàñËøùÂèçÊúçÂä°Êèê‰æõÂïÜÊù°Ê¨æÁöÑË°å‰∏∫„ÄÇÂêØÁî®ÂâçÔºåËØ∑Á°Æ‰øùÊÇ®ÁöÑÊìç‰ΩúÁ¨¶ÂêàÊ≥ïÂæãÂèäÊúçÂä°ÂïÜËßÑÂàôÔºåÂπ∂Áü•ÊÇâÂèØËÉΩÁöÑÂÖºÂÆπÊÄßÂ±ÄÈôê„ÄÇ
8. ‰∏∫ÈÅµÂÆàÁΩëÁªúÂÆâÂÖ®Ê≥ïÁöÑÂÜÖÂÆπÂÆ°Ê†∏Ë¶ÅÊ±ÇÔºåÊú¨ËΩØ‰ª∂‰∏çÊèê‰æõÂºπÂπïÂèëÈÄÅÊúçÂä°„ÄÇÂÖ≥‰∫éÂºπÂπïÂ±ïÁ§∫ÔºåÂèóÈôê‰∫éÊú¨Âú∞ÊÄßËÉΩÊú™ÂÅöÊï∞ÊçÆÊ∏ÖÁêÜÔºåÂèØËÉΩÂ≠òÂú®‰∏çËâØË®ÄËÆ∫ÔºåËØ∑ÂãøÁõ∏‰ø°Âõ†Ê≠§ÂºïËµ∑ÈùûÂøÖÁöÑË¶ÅÈ∫ªÁÉ¶„ÄÇÂêåÊó∂Â¶ÇÊûúÁî®Êà∑ÈÄöËøá‰ªª‰ΩïÊ∏†ÈÅìÂèëË°®‰∏çËâØË®ÄËÆ∫Ë°å‰∏∫ÔºåËØ•Ë°å‰∏∫‰∏éÊú¨ËΩØ‰ª∂Êó†ÂÖ≥„ÄÇÊàë‰ª¨ÂëºÂêÅÁî®Êà∑ÊñáÊòéÁî®ËØ≠ÔºåÂÖ±ÂêåÁª¥Êä§ÁΩëÁªúÂÅ•Â∫∑ÁéØÂ¢É„ÄÇ
9. Êàë‰ª¨Ê∑±Áü•ÊÇ®ÁöÑÈöêÁßÅÊó†‰ª∑„ÄÇÂõ†Ê≠§ÔºåÊú¨ËΩØ‰ª∂Áªù‰∏çÊî∂ÈõÜ‰ªª‰ΩïÁî®Êà∑Êï∞ÊçÆÔºåÈô§‰∫ÜÂøÖË¶ÅÁöÑWebDevÂ§á‰ªΩÔºàÊ≠§ËøáÁ®ãÁî±‰∏ì‰∏öÁ¨¨‰∏âÊñπ‰∏•Ê†ºÁÆ°ÁêÜÔºâÂ§ñÔºåÊâÄÊúâ‰ø°ÊÅØÂùá‰∏•Ê†ºÊú¨Âú∞Â≠òÂÇ®ÔºåÁ°Æ‰øùÊÇ®ÁöÑÊï∞ÊçÆ‰ªÖÂú®ÊÇ®ÊéåÊéß‰πã‰∏≠„ÄÇÊ≠§ËΩØ‰ª∂‰∏ç‰∏é‰ªª‰ΩïÁ¨¨‰∏âÊñπÂÖ±‰∫´ÊÇ®ÁöÑ‰ªª‰Ωï‰ø°ÊÅØ„ÄÇ
10. ËµûËµèË°å‰∏∫Á∫ØÂ±ûËá™ÊÑøÔºåÊó®Âú®Ë°®ËææÂØπÂºÄÊ∫êËΩØ‰ª∂‰ΩúËÄÖÊàñË¥°ÁåÆËÄÖÁöÑÊîØÊåÅÂíåÊÑüË∞¢ÔºåÂπ∂ÈùûË¥≠‰π∞ÂïÜÂìÅÊàñÊúçÂä°ÁöÑ‰∫§ÊòìË°å‰∏∫„ÄÇËµûËµèËÄÖÂ∫îÂΩìÊ∏ÖÊ•öÁêÜËß£ÔºåËµûËµèÊ¨æÈ°π‰∏ç‰∫´Êúâ‰ªª‰ΩïÂïÜÂìÅÊàñÊúçÂä°ÁöÑ‰øùËØÅÔºå‰πü‰∏çÊûÑÊàê‰ªª‰ΩïÂΩ¢ÂºèÁöÑÂêàÂêåÂÖ≥Á≥ª„ÄÇ
11. ÊÇ®Âú®‰ΩøÁî®Êú¨ËΩØ‰ª∂Êó∂ÈúÄËá™Ë°åË¥üË¥£ÊâÄÊúâÊìç‰ΩúÂíå‰ΩøÁî®ÁªìÊûú„ÄÇÊú¨ËΩØ‰ª∂‰∏çÂØπÊÇ®ÈÄöËøá‰ΩøÁî®Êú¨ËΩØ‰ª∂Ëé∑ÂèñÁöÑ‰ªª‰ΩïÂÜÖÂÆπË¥üË¥£ÔºåÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÂ™í‰ΩìËµÑÊ∫êÁöÑÂáÜÁ°ÆÊÄß„ÄÅÁâàÊùÉÂêàËßÑÊÄß„ÄÅÂÆåÊï¥ÊÄß„ÄÅÂÆâÂÖ®ÊÄßÂíåÂèØÁî®ÊÄß„ÄÇÂØπ‰∫é‰ªª‰ΩïÂõ†‰ΩøÁî®Êú¨ËΩØ‰ª∂ÂØºËá¥ÁöÑÊçüÂ§±„ÄÅÊçüÂÆ≥ÊàñÊ≥ïÂæãÁ∫†Á∫∑Ôºå‰∏çÊâøÊãÖ‰ªª‰ΩïË¥£‰ªª„ÄÇ
12. ÊÇ®Âú®‰ΩøÁî®Êú¨ËΩØ‰ª∂Êó∂ÂøÖÈ°ªÈÅµÂÆàÊÇ®ÊâÄÂú®ÂõΩÂÆ∂/Âú∞Âå∫ÁöÑÁõ∏ÂÖ≥Ê≥ïÂæãÊ≥ïËßÑÔºåÁ¶ÅÊ≠¢‰ΩøÁî®Êú¨ËΩØ‰ª∂ËøõË°å‰ªª‰ΩïËøùÂèçÊ≥ïÂæãÊ≥ïËßÑÁöÑÊ¥ªÂä®ÔºåÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÂà∂‰Ωú„ÄÅ‰∏ä‰º†„ÄÅ‰º†Êí≠„ÄÅÂ≠òÂÇ®‰ªª‰ΩïËøùÊ≥ï„ÄÅ‰æµÊùÉ„ÄÅÊ∑´ÁßΩ„ÄÅËØΩË∞§„ÄÅÊÅ∂ÊÑèËΩØ‰ª∂Á≠âÂÜÖÂÆπ„ÄÇÂ¶ÇÊÇ®ËøùÂèçÁõ∏ÂÖ≥Ê≥ïÂæãÊ≥ïËßÑÔºåÈúÄËá™Ë°åÊâøÊãÖÊ≥ïÂæãË¥£‰ªª„ÄÇ
13. Êú¨ÂÖçË¥£Â£∞ÊòéÈÄÇÁî®‰∫éÊú¨ËΩØ‰ª∂ÁöÑÊâÄÊúâÁî®Êà∑„ÄÇÊú¨ËΩØ‰ª∂‰øùÁïôÈöèÊó∂‰øÆÊîπ„ÄÅÊõ¥Êñ∞Êú¨Â£∞ÊòéÁöÑÊùÉÂà©ÔºåÂπ∂‰ª•Github Readme„ÄÅËΩØ‰ª∂Êõ¥Êñ∞Á≠âÂΩ¢ÂºèÈÄöÁü•Áî®Êà∑„ÄÇËØ∑ÊÇ®ÂÆöÊúüÊü•ÈòÖÂπ∂ÈÅµÂÆàÊúÄÊñ∞ÁöÑÂÖçË¥£Â£∞Êòé„ÄÇ

ËØ∑ÊÇ®Âú®‰ΩøÁî®Êú¨ËΩØ‰ª∂‰πãÂâçËÆ§ÁúüÈòÖËØªÂπ∂ÁêÜËß£Êú¨ÂÖçË¥£Â£∞ÊòéÁöÑÊâÄÊúâÂÜÖÂÆπÔºåÊÑüË∞¢ÊÇ®ÁöÑÁêÜËß£ÂíåÊîØÊåÅ„ÄÇ

&lt;/details&gt;

## üéâ ÂäüËÉΩ‰∫ÆÁÇπ

- **ÂπøÊ≥õÂÖºÂÆπ**ÔºöË∑®Âπ≥Âè∞ÊîØÊåÅ Windows„ÄÅMac„ÄÅLinux Á≥ªÁªü„ÄÇ
- **Ê∑±Ëâ≤Ê®°Âºè**ÔºöÈÄÇÈÖçÂ§úÈó¥‰ΩøÁî®Ôºå‰øùÊä§ËßÜÂäõ„ÄÇ
- **ËµÑÊ∫êÊé•ÂÖ•**ÔºöËΩªÊùæÁÆ°ÁêÜ json„ÄÅxml Á≠âÊ†ºÂºèÁöÑ CMS„ÄÇ
- **IPTVÊîØÊåÅ**ÔºöÊó†ÁºùÊí≠Êîæ m3u„ÄÅgenre Á≠âÊ†ºÂºè„ÄÇ
- **Âø´Êç∑ÈöêËóè**ÔºöÂÜÖÁΩÆËÄÅÊùøÈîÆÔºåÈöêÁßÅ‰øùÊä§‰∏ÄÈîÆÂà∞‰Ωç„ÄÇ
- **Â§öÊí≠ÊîæÂô®**ÔºöÂÜÖÁΩÆÂ§öÁßçÊí≠ÊîæÂô®Ê†∏ÂøÉÔºåÊª°Ë∂≥‰∏çÂêåÈúÄÊ±Ç„ÄÇ
- **Êõ¥Â§öÂÜÖÂÆπ**: Ëá™Ë°åÊé¢Á¥¢...

### üñºÔ∏è ËΩØ‰ª∂È¢ÑËßà

&lt;details&gt;
&lt;summary&gt;Â±ïÂºÄÊü•ÁúãËΩØ‰ª∂Êà™Âõæ&lt;/summary&gt;

|                            ÂΩ±ËßÜ(È¶ñÈ°µ)                            |                            ÂΩ±ËßÜ(ÊêúÁ¥¢)                            |
| :--------------------------------------------------------------: | :--------------------------------------------------------------: |
| ![ÂΩ±ËßÜ-È¶ñÈ°µ](https://s2.loli.net/2024/07/20/T8diRvA1q2QaJmP.png) | ![ÂΩ±ËßÜ-ÊêúÁ¥¢](https://s2.loli.net/2024/07/20/utwCUsVG6c7ShRJ.png) |
|                            ÂΩ±ËßÜ(Êí≠Êîæ)                            |                            Ëß£Êûê(È¶ñÈ°µ)                            |
| ![ÂΩ±ËßÜÊí≠Êîæ](https://s2.loli.net/2024/07/20/DNFBu3LphASROVy.png)  | ![Ëß£Êûê-È¶ñÈ°µ](https://s2.loli.net/2024/07/20/JZANVebW4EHOU7I.png) |
|                            Áõ¥Êí≠(È¶ñÈ°µ)                            |                            Áõ¥Êí≠(Êí≠Êîæ)                            |
| ![Áõ¥Êí≠-È¶ñÈ°µ](https://s2.loli.net/2024/07/20/ucxSw3nR2EahG59.png) | ![Áõ¥Êí≠-Êí≠Êîæ](https://s2.loli.net/2024/07/20/jYEFc6NOwtdWJBV.png) |
|                             ÂéÜÂè≤ËÆ∞ÂΩï                             |                               ËÆæÁΩÆ                               |
| ![ÂéÜÂè≤ËÆ∞ÂΩï](https://s2.loli.net/2024/07/20/DiYsx4fbcH3KU6T.png)  |   ![ËÆæÁΩÆ](https://s2.loli.net/2024/07/20/QeaDxZ2IYCFoVki.png)    |

&lt;/details&gt;

### üçø Êí≠ÊîæÂô®ÁâπÊÄß

- **Ê≤°ÊúâÂÆåÁæéÁöÑÊí≠ÊîæÂô®**
- Â¶ÇÊûúÂè™ÊúâÁîªÈù¢Ê≤°Â£∞Èü≥ - ‰∏ÄËà¨‰∏∫Ê≤°ÊúâÂ£∞ËΩ®
- Â¶ÇÊûúÈªëÂ±èÊúâÂ£∞Èü≥ - ‰∏ÄËà¨‰∏∫Êí≠ÊîæÂô®‰∏çÊîØÊåÅ`H265[HEVC]`
- Êí≠ÊîæÂô®ÈÄâÊã©ÈúÄËÄÉËôëÊ†ºÂºèÂÖºÂÆπÊÄß-‰∏çÊîØÊåÅ`mkv`Ê†ºÂºè
- ÈíàÂØπÊí≠ÊîæÂ§±Ë¥•-Âª∫ËÆÆÂàáÊç¢Êí≠ÊîæÂô®ÊàñËÄÖË∞ÉÁî®Á≥ªÁªüÊí≠ÊîæÂô®
- Êí≠ÊîæËÉΩÂäõ-Ë•øÁìú(`H265`ÂÖºÂÆπÊÄßËæÉÂ•Ω), ÂÖ∂‰ªñ(`H264`ÂÖºÂÆπÊÄßËæÉÂ•Ω)

### üíª Ë∑®Âπ≥Âè∞ËØ¥Êòé

&gt; {appname}‰∏∫ËΩØ‰ª∂Âêç

- **MacOS**:
  - Êèê‰æõ arm64(ËãπÊûúËäØ)„ÄÅx64(Ëã±ÁâπÂ∞îËäØ) Âèä universal(ÈÄöÁî®) ‰∏âÁßçÊû∂ÊûÑÂÆâË£ÖÂåÖ
  - Êó•ÂøóË∑ØÂæÑ: `~/Library/Logs/{appname}/log/`
  - Êï∞ÊçÆÂ∫ìË∑ØÂæÑ: `~/Library/Application\ Support/{appname}/database/`
  - Êèí‰ª∂Ë∑ØÂæÑ: `~/Library/Application\ Support/{appname}/plugin/`
  - Êñá‰ª∂Ë∑ØÂæÑ: `~/Library/Application\ Support/{appname}/file/`
- **Linux**:
  - ÈíàÂØπ arm64„ÄÅx64 Êû∂ÊûÑÂèëË°å image„ÄÅdeb„ÄÅrpm ÂÆâË£ÖÂåÖ
  - Êó•ÂøóË∑ØÂæÑ: `~/.config/{appname}/log/`
  - Êï∞ÊçÆÂ∫ìË∑ØÂæÑ: `~/.config/{appname}/database/`
  - Êèí‰ª∂Ë∑ØÂæÑ: `~/.config/{appname}/plugin/`
  - Êñá‰ª∂Ë∑ØÂæÑ: `~/.config/{appname}/file/`
- **Windows**:
  - ÊîØÊåÅ arm64„ÄÅx64„ÄÅia32Ôºå‰ª•ÂèäÈÄöÁî®ÁâàÊú¨
  - Êó•ÂøóË∑ØÂæÑ: `%USERPROFILE%\AppData\Roaming\{appname}\log\`
  - Êï∞ÊçÆÂ∫ìË∑ØÂæÑ: `%USERPROFILE%\AppData\Roaming\{appname}\database\`
  - Êèí‰ª∂Ë∑ØÂæÑ: `%USERPROFILE%\AppData\Roaming\{appname}\plugin\`
  - Êñá‰ª∂Ë∑ØÂæÑ: `%USERPROFILE%\AppData\Roaming\{appname}\file\`

## üõ†Ô∏è ‰∏ãËΩΩÂÆâË£Ö

&gt; **ÊúÄÊñ∞ÂèëÂ∏ÉÁâà‰∏ãËΩΩ**: ËÆøÈóÆ [GitHub ReleasesÈ°µÈù¢](https://github.com/Hiram-Wong/ZyPlayer/releases) Ëé∑Âèñ„ÄÇ

&gt; **ÊúÄÊñ∞ÂºÄÂèëÁâà‰∏ãËΩΩ**: ËÆøÈóÆ [GitHub ActionsÈ°µÈù¢](https://github.com/Hiram-Wong/ZyPlayer/actions) Ëé∑Âèñ, ÈúÄÁôªÂΩïGithubË¥¶Âè∑„ÄÇ

### MacOS ÂÆâË£ÖÂêéÊâìÂºÄÊèêÁ§∫„ÄåÊñá‰ª∂Â∑≤ÊçüÂùè„Äç

```bash
&gt; {appname}‰∏∫ËΩØ‰ª∂Âêç, ËÆøÈóÆÂâçËá™Ë°åÊõøÊç¢[Âê´Êã¨Âè∑‰∏ÄËµ∑ÊõøÊç¢]

[1] ÊâßË°å‰∏ãÈù¢ÂëΩ‰ª§‰ø°‰ªªÂºÄÂèëËÄÖ, ‰ºöË¶ÅÊ±ÇËæìÂÖ•ÂØÜÁ†Å:
    sudo spctl --master-disable
[2] ÊâßË°å‰∏ãÈù¢ÂëΩ‰ª§ÊîæË°åËΩØ‰ª∂ :
    sudo xattr -cr /Applications/{appname}.app
```

### Linux AppimageÊ°åÈù¢Âø´Êç∑ÊñπÂºèËÆæÁΩÆ

```bash
&gt; {appname}‰∏∫ËΩØ‰ª∂Âêç, ËÆøÈóÆÂâçËá™Ë°åÊõøÊç¢[Âê´Êã¨Âè∑‰∏ÄËµ∑ÊõøÊç¢]

[1] ÈÄâÊã©‰∏ÄÂº†iconÂõæÊ†á‰∏ãËΩΩ
[2] Âú®‰ªªÊÑè‰ΩçÁΩÆÊñ∞Âª∫‰∏Ä‰∏™Âêç‰∏∫{appname}.desktopÁöÑÊñá‰ª∂ÔºåÂπ∂ÂÜôÂÖ•Â¶Ç‰∏ãÂÜÖÂÆπ
    [Desktop Entry]
    Name={appname}
    Exec=/home/xxx/Downloads/{appname}-x.x.x.AppImage  # AppImageÁ®ãÂ∫èË∑ØÂæÑ
    Icon=/home/xxx/Downloads/{appname}.png  # ÂõæÊ†áË∑ØÂæÑ
    Type=Application
    StartupNotify=true
[3] ‰øùÂ≠ò{appname}.desktopÂêéÂè≥ÈîÆÂ±ûÊÄß,Âú®ÊùÉÈôêÁõÆÂΩï‰∏ãÂÖÅËÆ∏‰Ωú‰∏∫Á®ãÂ∫èÊâßË°åÊñá‰ª∂‰∏äÊâìÈí©
[4] Â∞Ü{appname}.desktopÊñá‰ª∂Â§çÂà∂Âà∞/usr/share/applicationsË∑ØÂæÑ‰∏ã
```

### Linux AppimageËøêË°åÂ§±Ë¥•

```bash
# Êä•ÈîôÂÖ≥ÈîÆËØç Running as root without --no-sandbox is not supported. See https://ccrbug.com/638180.
./Êñá‰ª∂Âêç.AppImage --no-shawbox
# Êä•ÈîôÂÖ≥ÈîÆËØç dlopen()Ôºöerror loading libfuse.so.2
sudo apt-get install libfuse2
# Êä•ÈîôÂÖ≥ÈîÆËØç Exiting GPU process due to errors during initialization
xhost +
```

### Linux debÂÆâË£ÖÂ§±Ë¥•

```bash
# Êä•ÈîôÂÖ≥ÈîÆËØç Package libnss3-1d is not installed
sudo apt-get install libnss3-1d
# Êä•ÈîôÂÖ≥ÈîÆËØç Package libxss1 is not installed
sudo apt-get install libxss1
```

## üöó ‰∫åÊ¨°ÂºÄÂèë

&gt; **ÈúÄÈÅµÂÆàÂºÄÊ∫êÂçèËÆÆ**

### ÂºÄÂèëÊâìÂåÖ
```shell
[1] ÂÆâË£Ö node.js version18 ‰ª•‰∏ä + yarn ÂåÖÂÆâË£ÖÁÆ°ÁêÜÂ∑•ÂÖ∑
[2] ÂÖãÈöÜÈ°πÁõÆ
    git clone https://github.com/Hiram-Wong/ZyPlayer.git
[3] ËøõÂÖ•È°πÁõÆ
    cd ZyPlayer/
[4] ÊâìÂºÄÈ°πÁõÆ&lt;Ê≠§Â§Ñ‰ΩøÁî®ÂëΩ‰ª§Ë°åÂø´Êç∑ÊâìÂºÄvscode&gt;
    code .
[5] ‰øÆÊîπ‰ª£Á†Å
[6] ÂÆâË£Ö‰æùËµñÂåÖ
    yarn
[7] ÂÖ®Â±ÄÂÆâË£Öelectron-viteÊ°ÜÊû∂
    yarn add electron-vite -D
[8] ÊâìÂåÖÁºñËØëÂèëÂ∏É
    yarn build:win[mac/linux]
```
&lt;details&gt;
&lt;summary&gt;Â±ïÂºÄÊü•Áúã‰æùËµñËØ¥Êòé&lt;/summary&gt;

- ÈÉ®ÂàÜ‰æùËµñÂèØËÉΩ‰æùËµñgithub, ÈúÄË¶ÅÁßëÂ≠¶‰∏äÁΩë
    - `.npmrc`ÂêØÁî®‰∫ÜÊ∑òÂÆùÈïúÂÉè, ÈÉ®ÂàÜ‰æùËµñÂèØËÉΩ404, ÈúÄÂàáÊç¢Âà∞npmÂÆòÊñπÈïúÂÉè
    - ÂºÄÂèëÊ∂âÂèä`.npmrc`Êñá‰ª∂`electron_mirror`Âíå`electron_builder_binaries_mirror`Â≠óÊÆµ
    - ÁºñËØëÊ∂âÂèä`electron-builder.yml`Êñá‰ª∂`electronDownload`Â≠óÊÆµ
- ÂÖºÂÆπwin7ËØ¥Êòé
    - Electron 23 Â∞ÜÂåÖÂê´ Chromium 110, ‰∏çÂÜçÊîØÊåÅWindows(7/8/8.1)[ÁÇπÊàëÊü•Áúã](https://www.electronjs.org/zh/blog/windows-7-to-8-1-deprecation-notice)
    - Electron 23 Ëµ∑‰∏çÂÜçÊîØÊåÅ Win 7/8/8.1, Êé®Ëçê`&quot;electron&quot;: &quot;~22.3.27&quot;`
    - Electron 23 ‰ª•‰∏ã‰∏çÊîØÊåÅÂçáÁ∫ßfastifÂèäÁõ∏ÂÖ≥Êèí‰ª∂, ÊúÄÈ´òÁâàÊú¨‰∏∫`4.x`
    - Electron 23 ‰ª•‰∏ã‰∏çÊîØÊåÅÂçáÁ∫ßcheerio, ÊúÄÈ´òÁâàÊú¨‰∏∫`1.0.0-rc.12`
    - Electron 23 ‰ª•‰∏ãpuppeteerÂ≠òÂú®ÂÖºÂÆπÊÄßÈóÆÈ¢ò, Êé®Ëçê`&quot;puppeteer-core&quot;: &quot;~21.3.8&quot;, &quot;puppeteer-in-electron&quot;: &quot;^3.0.5&quot;`
- ÂêØÁî®HEVCÁ°¨Ëß£Á†ÅËØ¥Êòé [ÁÇπÊàëÊü•Áúã](https://github.com/StaZhu/enable-chromium-hevc-hardware-decoding/blob/main/README.zh_CN.md)
- ÂêåÊ≠•Â∫ìËØ¥Êòé
    - sync-fetch: 
        - Ê∏≤ÊüìËøõÁ®ã + webworkerÁ∫øÁ®ãËøêË°å
        - ‰∏ªËøõÁ®ã + forkÁ∫øÁ®ãËøêË°å
    - sync-request: ‰∏ªËøõÁ®ã + forkÁ∫øÁ®ãËøêË°å
        - tree-killÁªìÊùü(ÊôÆÈÄöÁªìÊùüÂèØËÉΩÁªìÊùü‰∏çÂπ≤ÂáÄ, ÂØºËá¥Ê∏∏Á¶ªËøõÁ®ãËøáÂ§ö)
        - sync-rpcÂ≠êËøõÁ®ãÂêØÂä®Êä•Èîô(ÂèÇËÄÉ[issue](https://github.com/ForbesLindesay/sync-rpc/issues/3))
- Êèí‰ª∂Ê®°ÂùóËØ¥Êòé
    - `&quot;npm&quot;: &quot;7.24.2&quot;` ‰πãÂêéÁöÑ‰∏çÂÜçÊîØÊåÅË∞ÉÁî®`npm`ÂëΩ‰ª§
- `monaco-editor`Êó†Ê≥ïÁ≤òË¥¥
    - ÊñπÊ°à1: `win.webContents.paste()`, ËØ•ÊñπÊ°àÁõëÂê¨`ctrl+v`‰ºöÂØºËá¥ÊôÆÈÄöËæìÂÖ•Ê°ÜÈáçÂ§çÁ≤òË¥¥, Âª∫ËÆÆÁõëÂê¨ÂÖ∂‰ªñÂø´Êç∑ÈîÆÂàôÊ≠£Â∏∏(ÊîπÁºñ‰ΩøÁî®ËÄÖ‰π†ÊÉØ)
    - ÊñπÊ°à2: `editor.addAction`Êàñ`editor.onKeyDown`ÁõëÂê¨ÈîÆÁõòÊåâ‰∏ã‰∫ã‰ª∂, ËØ•ÊñπÊ°àÈúÄÊâãÂä®ÂÜôÈÄªËæë, ‰ªÖÁºñËæëÂô®‰∏ª‰ΩìÁ≤òË¥¥ÁîüÊïà
    - ÊñπÊ°à3: `&quot;monaco-editor&quot;: &quot;^0.45.0&quot;`Âèä‰ª•‰∏ãÁâàÊú¨, ÂèÇËÄÉ[issue](https://github.com/microsoft/monaco-editor/issues/4855)
    - ÊñπÊ°à4: `Electron`ÈÖçÁΩÆ`nodeIntegration: true`Âíå`contextIsolation: false`‰ºöÂØºËá¥Á≤òË¥¥Â§±Êïà, ÈÖçÁΩÆÂèÇÊï∞ÂèñÂèç
- `child_process`ËØ¥Êòé
    - `windows`Êç¢Ë°åÁ¨¶‰∏∫`\r\n`, `mac`Âíå`linux`‰∏∫`\n`
    - `windows`ÊâßË°åÁªìÊûú‰π±Á†Å, ÈúÄ`chcp 65001`ËÆæÁΩÆÁºñÁ†Å, Â¶ÇËé∑ÂèñÁõÆÂΩïÊï∞ÊçÆ`chcp 65001 | dir`(`|`ÁöÑ‰ΩúÁî®‰∏∫ÊâßË°å`dir`ÁªßÊâø`chcp 65001`ÁöÑ`utf-8`ÁºñÁ†Å)
    - `&quot;electron-builder&quot;: &quot;^25.1.8&quot;`‰πãÂêéÁöÑÁºñËØëÂô®Â≠òÂú®ÊâìÂåÖÂêé`child_process`ÂêØÂä®Â§±Ë¥•ÈóÆÈ¢ò
- Êñá‰ª∂Êìç‰ΩúËØ¥Êòé
    - `FileSystemAccessAPI`ÂèóÊµèËßàÂô®Ê≤ôÁÆ±ÈôêÂà∂, Êó†Ê≥ïËÆøÈóÆÁ≥ªÁªüÁõÆÂΩï
    - ÂèØ‰ª•‰ΩøÁî®`Electron`Êèê‰æõÁöÑ`dialog`ÊñπÊ≥ïÈÖçÂêà`fs`ËøõË°åÊìç‰Ωú

&lt;/details&gt;

## üìö Êï∞ÊçÆÁªìÊûÑ

&gt; ËØ∑‰∏•Ê†ºÊåâÁÖßÊï∞ÊçÆÁªìÊûÑÂ°´ÂÜô, ÈÅøÂÖç‰∏çÂøÖË¶ÅÁöÑÊä•Èîô(Â¶ÇÊï∞ÊçÆÂ≠óÊÆµÁ±ªÂûã‰∏çÂåπÈÖç)

&gt; Êï∞ÊçÆÂêàÂπ∂,ËØ∑ÂÖàÊâãÂä®ÂØºÂá∫ÂêéÁºñËæëÊï∞ÊçÆÂêéÂØºÂÖ•(ËΩØ‰ª∂Áõ¥Êé•ÂØºÂÖ•‰∏∫Ë¶ÜÁõñÊï∞ÊçÆ)

&lt;details&gt;
&lt;summary&gt;Â±ïÂºÄÊü•ÁúãÊé•Âè£ËØ¥Êòé&lt;/summary&gt;

```json
{
  &quot;analyze&quot;: [
    {
      &quot;id&quot;: &quot;fddfb425-6fd9-0b39-459f-a21f69739a6e&quot;, // idÂîØ‰∏ÄÂÄº‰∏çÂèØÈáçÂ§ç[uuidv4]
      &quot;key&quot;: &quot;51793af6-c923-5504-85db-0ef686624dec&quot;, // keyÂÄº‰∏çÂª∫ËÆÆÈáçÂ§ç[string] [3.4.0ÁâàÊú¨ÂêØÁî®]
      &quot;name&quot;: &quot;Parse&quot;, // ÂêçÁß∞[string]
      &quot;type&quot;: 0, // Á±ªÂûã[number | 0:web-1:json]
      &quot;url&quot;: &quot;https://xxx.top/?jx=&quot;, // Ëß£ÊûêÊ∫êÂú∞ÂùÄ[string]
      &quot;headers&quot;: &quot;&quot;, // ËØ∑Ê±ÇÂ§¥[string] Êú™ÂêØÁî®È¢ÑÁïô [3.4.0ÁâàÊú¨ÂêØÁî®]
      &quot;isActive&quot;: true // ÊòØÂê¶ÂêØÁî®[boolean | trueÂêØÁî®-falseÁ¶ÅÁî®]
    }
  ],
  &quot;iptv&quot;: [
    {
      &quot;id&quot;: &quot;993841fe-5e91-5e5d-35d6-5be81822960b&quot;, // idÂîØ‰∏ÄÂÄº‰∏çÂèØÈáçÂ§ç[uuidv4]
      &quot;key&quot;: &quot;51793af6-c923-5504-85db-0ef686624dec&quot;, // keyÂÄº‰∏çÂª∫ËÆÆÈáçÂ§ç[string] [3.4.0ÁâàÊú¨ÂêØÁî®]
      &quot;name&quot;: &quot;IPTV&quot;, // ÂêçÁß∞[string]
      &quot;url&quot;: &quot;https://xxx.com/m3u/iptv.m3u&quot;, // Áõ¥Êí≠Ê∫êÂú∞ÂùÄ[string]
      &quot;type&quot;: &quot;remote&quot;, // urlÊ†ºÂºè[string | remote:ËøúÁ®ãm3u-localÊú¨Âú∞m3uÊñá‰ª∂Ë∑ØÂæÑ-jsonÊú¨Âú∞ÊâãÂä®Êñá‰ª∂]
      &quot;epg&quot;: &quot;https://epg.112114.eu.org/?ch={name}&amp;date={date}&quot;, // ÁîµÂ≠êËäÇÁõÆÂçïÂú∞ÂùÄ[string]
      &quot;logo&quot;: &quot;https://epg.112114.eu.org/logo/{name}.png&quot;, // Âè∞Ê†áÂú∞ÂùÄ[string] - 3.3.8ÂêØÁî®ËØ•ÂèÇÊï∞
      &quot;headers&quot;: &quot;&quot;, // ËØ∑Ê±ÇÂ§¥[string] Êú™ÂêØÁî®È¢ÑÁïô [3.4.0ÁâàÊú¨ÂêØÁî®]
      &quot;isActive&quot;: true // ÊòØÂê¶ÂêØÁî®[boolean | trueÂêØÁî®-falseÁ¶ÅÁî®]
    }
  ],
  &quot;channel&quot;: [
    {
      &quot;id&quot;: &quot;0ede1ecd-de69-1042-15d9-4e5e9e3bb897&quot;, // idÂîØ‰∏ÄÂÄº‰∏çÂèØÈáçÂ§ç[uuidv4]
      &quot;name&quot;: &quot;xxÂç´ËßÜ&quot;, // ÂêçÁß∞[string]
      &quot;url&quot;: &quot;http://xxx.com/index.m3u8&quot;, // Êí≠ÊîæÂú∞ÂùÄ[string]
      &quot;group&quot;: &quot;ÈªòËÆ§&quot; // ÂàÜÁªÑ[string]
    }
  ],
  &quot;sites&quot;: [
    {
      &quot;id&quot;: &quot;51793af6-c923-5504-85db-0ef686624dec&quot;, // idÂîØ‰∏ÄÂÄº‰∏çÂèØÈáçÂ§ç[uuidv4]
      &quot;key&quot;: &quot;51793af6-c923-5504-85db-0ef686624dec&quot;, // keyÂÄº‰∏çÂª∫ËÆÆÈáçÂ§ç[string]
      &quot;name&quot;: &quot;xx9ÂΩ±ËßÜ&quot;, // ÂêçÁß∞[string]
      &quot;api&quot;: &quot;https://www.xxx.com/api.php/provide/vod/&quot;, // Á´ôÁÇπÊ∫êÂú∞ÂùÄ[string]
      &quot;playUrl&quot;: &quot;&quot;, // ÈÖçÂêàËß£ÊûêÂéªurlÂú∞ÂùÄ[string]
      &quot;search&quot;: 0, // ÊòØÂê¶ÊîØÊåÅÊêúÁ¥¢[number | 0ÂÖ≥Èó≠-1ËÅöÂêàÊêúÁ¥¢-2‰ªÖÊêúÁ¥¢]
      &quot;group&quot;: &quot;ÂàáÁâá&quot;, // ÂàÜÁªÑ[string]
      &quot;type&quot;: 1, // Êï∞ÊçÆÊ∫êÁ±ªÂûã[number | 0:T0(xml)-1:T1(json)-2:drpy(js0)-6:T4(hipy)-7:T3(js)-8:catvod(nodejs)-9:csp(XBPQ)-10:csp(XYQ)-11:csp(AppYsV2)]
      &quot;ext&quot;: &quot;&quot;, // Êâ©Â±ïÂèÇÊï∞[string]
      &quot;categories&quot;: &quot;ÁîµËßÜ,ÂΩ±ËßÜ&quot;, // ÊåâÈ°∫Â∫èÂ±ïÁ§∫ÊâÄÈÖçÁΩÆÁöÑÂàÜÁ±ª ‰∏çÈÖçÁΩÆÂàôÈªòËÆ§Â±ïÁ§∫ÊâÄÊúâÂàÜÁ±ª[string]
      &quot;isActive&quot;: true // ÊòØÂê¶ÂêØÁî®[boolean | trueÂêØÁî®-falseÁ¶ÅÁî®]
    }
  ],
  &quot;drive&quot;: [
    {
      &quot;id&quot;: &quot;3293dc45-cf14-9c66-3028-5b7765b240b7&quot;,// idÂîØ‰∏ÄÂÄº‰∏çÂèØÈáçÂ§ç[uuidv4]
      &quot;key&quot;: &quot;51793af6-c923-5504-85db-0ef686624dec&quot;, // keyÂÄº‰∏çÂª∫ËÆÆÈáçÂ§ç[string] [3.4.0ÁâàÊú¨ÂêØÁî®]
      &quot;name&quot;: &quot;alist&quot;, // ÂêçÁß∞[string]
      &quot;server&quot;: &quot;http://alist.xxx.pro/&quot;, // ÁΩëÁõòÂú∞ÂùÄ[string]
      &quot;showAll&quot;: false, // ÊòØÂê¶ÂêØÁî®[boolean | trueÊòæÁ§∫ÂÖ®ÈÉ®-falseÊòæÁ§∫video]
      &quot;startPage&quot;: &quot;&quot;, // ÂºÄÂßãÈ°µË∑ØÂæÑ[string]
      &quot;search&quot;: false, // ÊòØÂê¶ÊîØÊåÅÊêúÁ¥¢[boolean | trueÂêØÁî®-falseÁ¶ÅÁî®] Êú™ÂêØÁî®È¢ÑÁïô
      &quot;headers&quot;: &quot;{}&quot;, // ËØ∑Ê±ÇÂ§¥[string] Êú™ÂêØÁî®È¢ÑÁïô
      &quot;params&quot;: &quot;{}&quot;, // ÂèÇÊï∞[string]
      &quot;isActive&quot;: true // ÊòØÂê¶ÂêØÁî®[boolean | trueÂêØÁî®-falseÁ¶ÅÁî®]
    }
  ],
  &quot;setting&quot;: [
    {
      &quot;version&quot;: &quot;3.3.2&quot;, // [3.3.2ÁâàÊú¨ÂêØÁî®]ÂΩìÂâçÁâàÊú¨ (‰∏ÄÂÆöË¶ÅÊ†πÊçÆÂÆûÈôÖÂ°´ÂÜô,‰∏çÁÑ∂Êï∞ÊçÆÂ∫ìÊâßË°å‰ºöÊä•Èîô)
      &quot;theme&quot;: &quot;auto&quot;, // ‰∏ªÈ¢ò auto:Ë∑üÈöèÁ≥ªÁªü light:‰∫ÆËâ≤ dark:ÊöóËâ≤
      &quot;lang&quot;: &quot;zh_CN&quot;, // [3.3.4ÁâàÊú¨ÂêØÁî®]ËØ≠Ë®Ä zh_CN:‰∏≠Êñá en_US:Ëã±Êñá
      &quot;defaultHot&quot;: &quot;kylive&quot;, // ÁÉ≠Êêú kylive:ÈÖ∑‰∫ëÊï∞ÊçÆ enlightent:‰∫ëÂêàÊï∞ÊçÆ
      &quot;defaultSearchRecommend&quot;: &quot;site&quot;, // ÊêúÁ¥¢Êé®Ëçê site:Á´ôÁÇπ quark:Â§∏ÂÖã baidu:ÁôæÂ∫¶ douban:Ë±ÜÁì£  ÂºÉÁî®
      &quot;defaultSearchType&quot;: &quot;site&quot;, // ÂÖ®Â±ÄÊêúÁ¥¢Ê®°Âºè site:Êú¨Á´ô group:ÁªÑÂÜÖ all:ÂÖ®ÈÉ®
      &quot;defaultCheckModel&quot;: true, // [ÂºÉÁî®] Âøò‰∫ÜÂπ≤ÂòõÁöÑ
      &quot;defaultChangeModel&quot;: false, // [ÂºÉÁî®] Âøò‰∫ÜÂπ≤ÂòõÁöÑ
      &quot;pauseWhenMinimize&quot;: false, // [ÂºÉÁî®] ÊúÄÂ∞èÂåñÊó∂ÊöÇÂÅú
      &quot;defaultIptvEpg&quot;: &quot;https://epg.112114.eu.org/?ch={name}&amp;date={date}&quot;, // iptv epg
      &quot;defaultIptvLogo&quot;: &quot;https://epg.112114.eu.org/logo/{name}.png&quot;, // iptv logo
      &quot;iptvSkipIpv6&quot;: true, // [3.3.8ÁâàÊú¨ÂºÉÁî®] iptvÊòØÂê¶Ë∑≥Ëøáipv6ËäÇÁõÆ
      &quot;iptvMarkIp&quot;: true, // [3.3.8ÁâàÊú¨ÂêØÁî®] iptvÊ†áËØÜIPÁ±ªÂûã
      &quot;iptvThumbnail&quot;: true, // iptvÊòØÂê¶ÊòæÁ§∫Áº©Áï•Âõæ
      &quot;iptvStatus&quot;: true, // [3.3.8ÁâàÊú¨ÂºÉÁî®] iptvÊòØÂê¶Ê£ÄÊµãÂª∂Ëøü
      &quot;iptvDelay&quot;: true, // [3.3.8ÁâàÊú¨ÂêØÁî®]  iptvÊòØÂê¶Ê£ÄÊµãÂª∂Ëøü
      &quot;defaultSite&quot;: &quot;51793af6-c923-5504-85db-0ef686624dec&quot;, // site ÈªòËÆ§Ê∫êÊ†áËØÜ
      &quot;defaultIptv&quot;: &quot;993841fe-5e91-5e5d-35d6-5be81822960b&quot;, // iptv ÈªòËÆ§Ê∫êÊ†áËØÜ
      &quot;defaultAnalyze&quot;: &quot;fddfb425-6fd9-0b39-459f-a21f69739a6e&quot;, // analyze ÈªòËÆ§Ê∫êÊ†áËØÜ
      &quot;defaultDrive&quot;: &quot;3293dc45-cf14-9c66-3028-5b7765b240b7&quot;, // drive ÈªòËÆ§Ê∫êÊ†áËØÜ
      &quot;defaultViewCasual&quot;: &quot;&quot;, // [3.3.4ÁâàÊú¨ÂêØÁî®] ÈöèÂøÉÁúãÂú∞ÂùÄ
      &quot;barrage&quot;: {
        &quot;url&quot;: &quot;&quot;, // ÂºπÂπïÂú∞ÂùÄ
        &quot;key&quot;: &quot;danmuku&quot;, // ÂºπÂπïÊé•Âè£ËøîÂõûÊï∞ÊçÆÂØπÂ∫îÁöÑkey
        &quot;support&quot;: [&quot;qq&quot;, &quot;qiyi&quot;, &quot;youku&quot;, &quot;mgtv&quot;], // ÂºπÂπïÊîØÊåÅÁöÑÁ∫øË∑Ø
        &quot;start&quot;: &quot;0&quot;, // ÂºπÂπïÊé•Âè£ËøîÂõûÊï∞ÊçÆÂØπÂ∫îÁöÑÂºÄÂßãÊó∂Èó¥ÁöÑ‰ΩçÁΩÆ
        &quot;mode&quot;: &quot;1&quot;, // ÂºπÂπïÊé•Âè£ËøîÂõûÊï∞ÊçÆÂØπÂ∫îÁöÑ‰ΩçÁΩÆÁöÑ‰ΩçÁΩÆ
        &quot;color&quot;: &quot;2&quot;, // ÂºπÂπïÊé•Âè£ËøîÂõûÊï∞ÊçÆÂØπÂ∫îÁöÑÈ¢úËâ≤ÁöÑ‰ΩçÁΩÆ
        &quot;content&quot;: &quot;4&quot; // ÂºπÂπïÊé•Âè£ËøîÂõûÊï∞ÊçÆÂØπÂ∫îÁöÑÂÜÖÂÆπÁöÑ‰ΩçÁΩÆ
      }, // [3.3.4ÁâàÊú¨ÂêØÁî®]ÂºπÂπïÂèÇÊï∞
      &quot;analyzeFlag&quot;: [&quot;youku&quot;, &quot;qq&quot;, &quot;iqiyi&quot;, &quot;qiyi&quot;, &quot;letv&quot;, &quot;leshi&quot;, &quot;sohu&quot;, &quot;tudou&quot;, &quot;pptv&quot;, &quot;mgtv&quot;, &quot;imgo&quot;], // Ëß£ÊûêÊ†áËØÜ
      &quot;broadcasterType&quot;: &quot;xgplayer&quot;, // [3.3.4ÁâàÊú¨ÂºÉÁî®,‰ΩøÁî®playerModeÂèÇÊï∞]Êí≠ÊîæÂô® xgplayer:Ë•øÁìú dplayer:ÂëÜÂëÜ custom:Ëá™ÂÆö‰πâÁªìÂêàexternalPlayer
      &quot;externalPlayer&quot;: &quot;&quot;, // [3.3.4ÁâàÊú¨ÂºÉÁî®,‰ΩøÁî®playerModeÂèÇÊï∞]Êí≠ÊîæÂô®‰∏∫custom,Ë∞ÉÁî®Ê≠§Â§ÑÁ≥ªÁªüÂëΩ‰ª§
      &quot;playerMode&quot;: {
        &quot;type&quot;: &quot;xgplayer&quot;, // Êí≠ÊîæÂô® xgplayer:Ë•øÁìú dplayer:ÂëÜÂëÜ custom:Ëá™ÂÆö‰πâÁªìÂêàexternal
        &quot;external&quot;: &quot;&quot; // Êí≠ÊîæÂô®‰∏∫custom,Ë∞ÉÁî®Ê≠§Â§ÑÁ≥ªÁªüÂëΩ‰ª§
      }, // [3.3.4ÁâàÊú¨ÂêØÁî®]
      &quot;softSolution&quot;: false, // ÊòØÂê¶‰ΩøÁî®ËΩØËß£ È¢ÑÁïô
      &quot;communitySubscribe&quot;: &quot;&quot;, // Á§æÂå∫Âú∞ÂùÄ È¢ÑÁïô
      &quot;skipStartEnd&quot;: false, // [3.3.5ÁâàÊú¨ÂºÉÁî®, piniaÂ≠òÂÇ®]ÊòØÂê¶Ë∑≥ËøáÈ¶ñÂ∞æÁ©∫ÁôΩ
      &quot;agreementMask&quot;: true, // ÊòØÂê¶ÂêåÊÑèÂçèËÆÆ
      &quot;recordShortcut&quot;: &quot;Shift+Command+Z&quot;, // ÂΩïÂà∂Âø´Êç∑ÈîÆ
      &quot;snifferType&quot;: &quot;pie&quot;, // [3.3.4ÁâàÊú¨ÂºÉÁî®,‰ΩøÁî®snifferModeÂèÇÊï∞]ÂóÖÊé¢Ê®°Âºè pie iframe
      &quot;snifferMode&quot;: {
        &quot;type&quot;: &quot;pie&quot;, // ÂóÖÊé¢Ê®°Âºè pie iframe custom
        &quot;url&quot;: &quot;&quot; // ÂΩì type ‰∏∫ custom Êó∂Â°´ÂÜôËá™ÂÆö‰πâÂú∞ÂùÄ
      }, // [3.3.4ÁâàÊú¨ÂêØÁî®]
      &quot;selfBoot&quot;: false, // ÊòØÂê¶ÂºÄÊú∫Ëá™ÂêØÂä®
      &quot;hardwareAcceleration&quot;: true, // ÊòØÂê¶ÂêØÁî®Á°¨‰ª∂Âä†ÈÄü
      &quot;ua&quot;: &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36&quot;, // UA
      &quot;webdevUrl&quot;: &quot;https://dav.jianguoyun.com/dav/&quot;, // [3.3.4ÁâàÊú¨ÂºÉÁî®,‰ΩøÁî®webdevÂèÇÊï∞]webdevÂêåÊ≠•ÁõòÂú∞ÂùÄ Áî®‰∫éÂ§á‰ªΩ
      &quot;webdevUsername&quot;: &quot;&quot;, // [3.3.4ÁâàÊú¨ÂºÉÁî®,‰ΩøÁî®webdevÂèÇÊï∞]webdevÁî®Êà∑Âêç Áî®‰∫éÂ§á‰ªΩ
      &quot;webdevPassword&quot;: &quot;&quot;, // [3.3.4ÁâàÊú¨ÂºÉÁî®,‰ΩøÁî®webdevÂèÇÊï∞]webdevÂØÜÁ†Å Áî®‰∫éÂ§á‰ªΩ
      &quot;webdev&quot;: {
        &quot;sync&quot;: false, // Ëá™Âä®ÂêåÊ≠•
        &quot;data&quot;: {
          &quot;url&quot;: &quot;https://dav.jianguoyun.com/dav/&quot;, // webdevÂêåÊ≠•ÁõòÂú∞ÂùÄ
          &quot;user&quot;: &quot;&quot;, // webdevÁî®Êà∑Âêç
          &quot;password&quot;: &quot;&quot; // webdevÂØÜÁ†Å
        } // webdev Áî®‰∫éÂ§á‰ªΩ
      }, // [3.3.4ÁâàÊú¨ÂêØÁî®]
      &quot;restoreWindowPositionAndSize&quot;: false, // ÂºÉÁî®
      &quot;windowPosition&quot;: {
        &quot;status&quot;: false, // ÊòØÂê¶ËÆ∞ÂΩïÁ™óÂè£‰ΩçÁΩÆ
        &quot;position&quot;: {
          &quot;width&quot;: 1000,
          &quot;height&quot;: 640
        }, // Á™óÂè£‰ΩçÁΩÆ [3.3.7ÁâàÊú¨ÂºÉÁî®, ‰ΩøÁî®position_mainÔΩúposition_playÂèÇÊï∞]
        &quot;position_main&quot;: {
          &quot;width&quot;: 1000,
          &quot;height&quot;: 640
        }, // Á™óÂè£‰ΩçÁΩÆ [3.3.7ÁâàÊú¨ÂêØÁî®] ËÆ∞ÂΩï‰∏ªÁ™óÂè£‰ΩçÁΩÆ
        &quot;position_play&quot;: {
          &quot;width&quot;: 875,
          &quot;height&quot;: 550
        } // Á™óÂè£‰ΩçÁΩÆ [3.3.7ÁâàÊú¨ÂêØÁî®] ËÆ∞ÂΩïÊí≠ÊîæÁ™óÂè£‰ΩçÁΩÆ
      },
      &quot;debug&quot;: false, // [3.3.7ÁâàÊú¨ÂêØÁî®] Áî®‰∫éÂú®Á∫øË∞ÉËØïÂíåÂóÖÊé¢È°µÈù¢ÂºπÂá∫
      &quot;defaultFilterType&quot;: false, // [3.3.7ÁâàÊú¨ÂêØÁî®] Áî®‰∫éÂΩ±ËßÜÊêúÁ¥¢ËøáÊª§ÂÖ≥ÈîÆËØç
      &quot;timeout&quot;: 5000, // [3.3.5ÁâàÊú¨ÂêØÁî®] Áî®‰∫éË∞ÉÊï¥ÂÖ®Â±ÄËØ∑Ê±ÇË∂ÖÊó∂‰∫ã‰ª∂, Âçï‰ΩçÊØ´Áßí
      &quot;dns&quot;: &quot;&quot; // [3.3.7ÁâàÊú¨ÂêØÁî®] DNS-over-HTTP
    }
  ]
}
```

&lt;/details&gt;

## üí∞ Èáë‰∏ªÁà∏Áà∏

[NodeSupport](https://github.com/NodeSeekDev/NodeSupport)ËµûÂä©‰∫ÜÊú¨È°πÁõÆ

[![yxvm_support.png](https://s2.loli.net/2025/04/09/JMyQZUKY2bX4G3q.png)](https://yxvm.com/)


[![Powered by DartNode](https://dartnode.com/branding/DN-Open-Source-sm.png)](https://dartnode.com &quot;Powered by DartNode - Free VPS for Open Source&quot;)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>