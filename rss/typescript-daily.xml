<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Tue, 13 May 2025 00:05:07 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[i-am-alice/3rd-devs]]></title>
            <link>https://github.com/i-am-alice/3rd-devs</link>
            <guid>https://github.com/i-am-alice/3rd-devs</guid>
            <pubDate>Tue, 13 May 2025 00:05:07 GMT</pubDate>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/i-am-alice/3rd-devs">i-am-alice/3rd-devs</a></h1>
            <p></p>
            <p>Language: TypeScript</p>
            <p>Stars: 297</p>
            <p>Forks: 243</p>
            <p>Stars today: 19 stars today</p>
            <h2>README</h2><pre># AI_devs 3

Repozytorium zawiera przykłady z lekcji kursu AI_devs 3.
Więcej informacji znajdziesz na [aidevs.pl](https://aidevs.pl).

## Wymagania

Wszystkie przykłady zostały napisane w JavaScript / TypeScript i większość z nich zawiera kod backendowy do którego uruchomienia potrzebny jest Node.js oraz Bun.

- [Node.js](https://nodejs.org)
- [Bun](https://bun.sh)

Upewnij się, że posiadasz najnowsze wersje Node.js oraz Bun zainstalowane na swoim komputerze.

## Instalacja

1. Pobierz repozytorium:

   ```bash
   git clone git@github.com:i-am-alice/3rd-devs.git
   cd 3rd-devs
   ```

2. Zainstaluj zależności:
   ```bash
   bun install
   ```
3. Skopiuj plik `.env.example` do `.env` i wypełnij go kluczami API (na początek wystarczy klucz OpenAI).

4. Uruchom dostępne przykłady z pliku `package.json`, według poniższej instrukcji.

## Instalacja — DOCKER

Jeśli posiadasz w swoim systemie możliwość uruchamiania kontenerów Dockera (na Windows użyj np. WSL/WSL2), możesz wykorzystać skrypt, który zbuduje i uruchomi dla Ciebie kontener ze środowiskiem gotowym do pracy.

1. Wejdź do katalogu, w którym chcesz przetrzymywać pliki środowiska i wydaj następujące polecenia:

   ```bash
   curl -fsSL https://env.ag3nts.org -o setup.sh
   bash setup.sh
   ```
   
2. Powyższy skrypt NIE zmienia niczego w systemie. Wykonuje on następujące czynności:
   - klonowanie repozytorium do katalogu &quot;3rd-devs&quot; (poza kontenerem, w aktualnym katalogu)
   - przygotowanie pliku Dockerfile
   - usunięcie starego obrazu Dockera o nazwie &quot;aidevs&quot; (jeśli istnieje)
   - uruchomienie procesu budowy obrazu Dockera
   - instalacja wymaganych paczek wewnątrz zdokeryzowanego środowiska
  
3. Po pomyślnym zbudowaniu obrazu możesz uruchomić go poleceniem (jeśli port 3000 masz zajęty, wybierz inny):
   ```bash
   docker run --rm -it -p 3000:3000 --name aidevs -v ${PWD}/3rd-devs:/app aidevs3
   ```

4. Pliki w katalogu &quot;3rd-devs&quot; możesz modyfikować w dowolnym IDE. Będą one bezpośrednio widoczne wewnątrz kontenera

5. Będąc już wewnątrz kontenera, skopiuj plik `.env.example` do `.env` i wypełnij go wymaganymi kluczami API (na początek wystarczy klucz OpenAI).

6. Twoje środowisko jest gotowe do pracy.


## S01E01

### Thread

Przykład przedstawia konwersację między użytkownikiem i asystentem, w której działa mechanizm podsumowania konwersacji.

- Uruchomienie serwera: `bun run thread`
- Interakcja demo: `curl -X POST http://localhost:3000/api/demo`
- Interakcja chat: `curl -X POST http://localhost:3000/api/chat -H &quot;Content-Type: application/json&quot; -d &#039;{&quot;message&quot;: { &quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hi&quot;}}&#039;`

Wywołanie powyższego endpointu uruchomi trzy niezależne zapytania do OpenAI, jednak w wiadomości systemowej zostanie przekazane podsumowanie poprzedniej interakcji, dzięki czemu model będzie miał możliwość odwołać się do ich treści.

W przykładzie uwzględniony jest także endpoint `/api/chat` na który można przesłać obiekt { &quot;message&quot;: &quot;...&quot; } zawierający treść wiadomości do modelu. Wątek zostanie zresetowany **dopiero po ponownym uruchomieniu serwera** (wciśnij CMD + C / Control + C i ponownie `bun run thread`).

### Use Search

UWAGA: przykład wymaga zainstalowania `promptfoo` w przypadku którego prawdopodobnie musisz to zrobić poleceniem `npm install promptfoo` ponieważ `bun install promptfoo` nie działa poprawnie w każdej sytuacji.

- Uruchomienie skryptu: `bun use_search`

Rezultatem działania skryptu jest tablica zawierająca kilkanaście przykładowych testów dla promptu decydującego o tym, czy skorzystanie z wyszukiwarki jest potrzebne.

### Pick domains

- Uruchomienie skryptu: `bun pick_domains`

Rezultatem działania skryptu jest tablica zawierająca kilkanaście przykładowych testów dla promptu generującego zapytania do wyszukiwarki Internetowej, wskazując także odpowiednie domeny.

### Rate

- Uruchomienie skryptu: `bun rate`

Rezultatem działania skryptu jest tablica zawierająca kilkanaście przykładowych testów dla promptu oceniającego, czy odpowiedź modelu zawiera odpowiednie informacje.

### Websearch

Przykład ten korzysta z [Firecrawl](https://www.firecrawl.dev) do przeszukiwania Internetu oraz pobierania treści stron www. Konieczne jest więc uzupełnienie pliku `.env` wartości FIRECRAWL_API_KEY ustawionej na klucz API.
(Firecrawl oferuje bezpłatny plan).

- Uruchomienie serwera: `bun websearch`
- Interakcja:
  ```bash
  curl -X POST http://localhost:3000/api/chat \
    -H &quot;Content-Type: application/json&quot; \
    -d &#039;{&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Search wiki for &#039;John Wick&#039;&quot;}]}&#039;
  ```

Ważne: w pliku `websearch/app.ts` można zmienić listę domen, które są dopuszczalne do przeszukiwania i pobierania treści.

## S01E02

### Linear

Uruchomienie tego przykładu wymaga uzupełnienia pliku `.env` i wartości `LINEAR_API_KEY` oraz `LINEAR_WEBHOOK_SECRET`.
Obie wartości można znaleźć w [ustawieniach API](https://linear.app/overment/settings/api). Dodatkowo Twój localhost musi być dostępny z poza Twojej sieci lokalnej, np. za pomocą [ngrok](https://ngrok.com/). Publiczny adres URL należy także wskazać w panelu Linear w sekcji Webhooks, np.: `https://&lt;ngrok-url&gt;/api/linear/watch-issue` (pamiętaj o dodaniu właściwego endpointu do adresu).

WAŻNE: w pliku `linear/prompts.ts` znajduje się prompt w którym zostały opisane **moje projekty** w Linear.
Aby skrypt działał poprawnie, musisz zmodyfikować ten prompt, tak aby zawierał identyfikatory oraz opisy Twoich projektów.

Listę projektów i ich identyfikatory możesz pobrać korzystając z endpointu `/api/linear/projects`.

- Uruchomienie serwera: `bun linear`
- Pobranie listy projektów: `curl http://localhost:3000/api/linear/projects`
- Po dodaniu nowego wpisu w Twoim linearze, zostanie on automatycznie przypisany do projektu zgodnie z zasadami w promptach, o ile nie został przypisany przez Ciebie ręcznie.

### Files

- Uruchomienie serwera: `bun files`
- Interakcja:
  ```bash
  curl -X POST http://localhost:3000/api/chat \
    -H &quot;Content-Type: application/json&quot; \
    -d &#039;{&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hey there, what\&#039;s up?&quot;}], &quot;conversation_id&quot;: &quot;d7582176-bc52-4ef3-980a-047b868f9f49&quot;}&#039;
  ```

Przykład ten pokazuje mechanizm podejmowania decyzji o zapamiętywaniu informacji na podstawie kontekstu rozmowy.
Dodatkowo w przypadku podania `conversation_id` w obiekcie żądania, do rozmowy zostaną wczytane wszystkie wiadomości dotyczące konkretnej rozmowy.

Wszystkie pliki zapisywane są w folderze `files/context`, a sam katalog można otworzyć w aplikacji [Obsidian](https://obsidian.md/) aby zobaczyć powiązania pomiędzy wspomnieniami.

## S01E03

### Langfuse

Ten przykład wymaga uzupełnienia pliku `.env` o wartości `LANGFUSE_PUBLIC_KEY`, `LANGFUSE_SECRET_KEY` oraz `LANGFUSE_HOST`. Można je uzyskać zakładając bezpłatne konto na [Langfuse](https://langfuse.com/).

UWAGA: Aby uruchomić ten przykład, musisz w panelu Langfuse utworzyć nowy prompt o nazwie `Answer`, którego wartość możesz ustawić na np. &#039;Odpowiadaj pisząc wyłącznie wielkimi literami&#039;.

- Uruchomienie serwera: `bun langfuse`
- Interakcja:
  ```bash
  curl -X POST http://localhost:3000/api/chat \
    -H &quot;Content-Type: application/json&quot; \
    -d &#039;{&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hey there, what\&#039;s up?&quot;}]}&#039;
  ```

Po wykonaniu zapytania, zostanie ono automatycznie zalogowane do Langfuse, a wynik wyświetlony w panelu.

### Tiktokenizer

- Uruchomienie serwera: `bun tiktokenizer`
- Interakcja:
  ```bash
  curl -X POST http://localhost:3000/api/chat \
    -H &quot;Content-Type: application/json&quot; \
    -d &#039;{&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hey there, what\&#039;s up?&quot;}], &quot;model&quot;: &quot;gpt-4o&quot;}&#039;
  ```

Przykład ten pokazuje mechanizm liczenia tokenów w zapytaniach do modeli OpenAI (np. gpt-4o).

### Max tokens

Przykład ten pokazuje jeden mechanizm pozwalający na kontynuowanie wypowiedzi modelu, pomimo osiągnięcia maksymalnej liczby tokenów wyjściowych (output tokens).

- Uruchomienie serwera: `bun max_tokens`
- Interakcja:
  ```bash
  curl -X POST http://localhost:3000/api/chat \
    -H &quot;Content-Type: application/json&quot; \
    -d &#039;{&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Write ten sentences about apples and put them in order.&quot;}]}&#039;
  ```

### Constitution

Przykład ten przedstawia mechanizm blokowania zapytań, które nie spełniają warunków określonych w prompcie `/constitution/prompts.ts`.

- Uruchomienie serwera: `bun constitution`
- Interakcja:
  ```bash
  curl -X POST http://localhost:3000/api/chat \
    -H &quot;Content-Type: application/json&quot; \
    -d &#039;{&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hello!&quot;}]}&#039;
  ```

## S01E04

### Memory

Ten przykład po uruchomieniu tworzy katalog memories w którym zapisywane są pliki markdown, pełniące rolę pamięci modelu.
Nie jest to przykład nadający się na produkcję, lecz przedstawia ogólne mechaniki pamięci długoterminowej, które będziemy rozwijać w dalszych lekcjach.

- Uruchomienie serwera: `bun memory`
- Interakcja:

```bash
 curl -X POST http://localhost:3000/api/chat \
   -H &quot;Content-Type: application/json&quot; \
   -d &#039;{&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hello!&quot;}]}&#039;
```

## S01E05

### External

Ten przykład zawiera standardową logikę interakcji z modelem, ale wymaga podania klucza API w nagłówku `Authorization` w formacie `Bearer &lt;klucz&gt;`. Wartość klucza zostaje wczytana z pliku `.env` jako `PERSONAL_API_KEY`. Dodatkowo zostały dodane mechanizmy ograniczania liczby zapytań, więc po kilku próbach ponowne wywołanie zapytania zwróci błąd 429.

- Uruchomienie serwera: `bun external`
- Interakcja:
  ```bash
  curl -X POST http://localhost:3000/api/chat \
    -H &quot;Content-Type: application/json&quot; \
    -d &#039;{&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hello!&quot;}]}&#039;
  ```

### Prompts

**UWAGA**: Aby uruchomić ten przykład konieczne jest nawiązanie połączenie z Langfuse poprzez uzupełnienie pliku `.env` o wartości `LANGFUSE_PUBLIC_KEY`, `LANGFUSE_SECRET_KEY` oraz `LANGFUSE_HOST`. Dodatkowo na Twoim koncie musisz utworzyć nowy prompt o nazwie `Answer`, którego wartość możesz ustawić na np. &#039;Odpowiadaj pisząc wyłącznie wielkimi literami&#039;, aby tylko sprawdzić działanie mechanizmu. Dodatkowo prompt &quot;Answer&quot; należy dodać w ustawieniu &quot;Chat&quot;, a nie &quot;Text&quot; (tryb można zmienić z pomocą zakładek w Langfuse)

- Uruchomienie serwera: `bun prompts`
- Interakcja:
  ```bash
  curl -X POST http://localhost:3000/api/chat \
    -H &quot;Content-Type: application/json&quot; \
    -d &#039;{&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hello!&quot;}]}&#039;
  ```

### Database

Ten przykład nie dotyczy bezpośrednio działania LLM, lecz przedstawia sposób organizacji informacji w bazie danych, takich jak konwersacje czy historia wiadomości.

- Uruchomienie serwera: `bun database`
- Interakcja:
  ```bash
  curl -X POST http://localhost:3000/api/chat \
    -H &quot;Content-Type: application/json&quot; \
    -d &#039;{&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hello!&quot;}]}&#039;
  ```

### Qdrant

Przykład ten przedstawia **absolutnie podstawowe** połączenie z bazą wektorową Qdrant. Jego zadaniem jest zapisywanie historii wiadomości, a następnie wyszukiwanie i wczytywanie do kontekstu rozmowy najbardziej podobnych wiadomości. Przykład ten będziemy rozbudowywać w dalszych lekcjach, łącząc się z Qdrant w bardziej złożonych konfiguracjach.

UWAGA: Aby uruchomić ten przykład, musisz w panelu Langfuse utworzyć nowy prompt o nazwie `Answer`, którego wartość możesz ustawić na np. &#039;Odpowiadaj pisząc wyłącznie wielkimi literami&#039;. Powodem jest fakt, że w ten przykład został powiązany z przykładem `langfuse`.

- Uruchomienie serwera: `bun qdrant`
- Interakcja:
  ```bash
  curl -X POST http://localhost:3000/api/chat \
    -H &quot;Content-Type: application/json&quot; \
    -d &#039;{&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hello!&quot;}]}&#039;
  ```

## S02E01

### Audio

UWAGA: Ten przykład wymaga uruchomienia frontendu w folderze `audio-frontend` oraz backendu w folderze `audio-backend`. W związku z tym przykład **trzeba** uruchomić na własnym komputerze.

- Uruchomienie frontendu: `bun audio:dev`
- Uruchomienie backendu: `bun audio`
- Interakcja: Otwórz w przeglądarce stronę http://localhost:5173

WAŻNE: Jakość działania tego przykładu zależy głównie od jakości mikrofonu oraz dźwięków otoczenia. Upewnij się więc, że jakość nagrania jest dobra i że nie ma zakłóceń uniemożliwiających wykrywanie końca wypowiedzi.

## S02E02

### Vision

- Uruchomienie kodu: `bun vision`

### Recognize

- Uruchomienie kodu: `bun recognize`

### Recognize-Pixtral

Do uruchomienia tego przykładu należy uzupełnić plik `.env` o wartość `MISTRAL_API_KEY`. Można go pobrać tutaj na [Mistral.ai](https://auth.mistral.ai/ui/login?flow=d2707d87-5325-4ff5-a7cd-25a2e21323d5)

- Uruchomienie kodu: `bun recognize_pixtral`

## S02E02

### Vision

- Uruchomienie kodu: `bun vision`
- Interakcja: przykład wykonuje się automatycznie na pliku `vision/lessons.png`

### Recognize

- Uruchomienie kodu: `bun recognize`
- Interakcja: przykład wykonuje się automatycznie na plikach z katalogu `recognize/avatars`

### Recognize-Pixtral

- Uruchomienie kodu: `bun recognize_pixtral`
- Interakcja: przykład wykonuje się automatycznie na plikach z katalogu `recognize_pixtral/avatars`

## S02E03

--- brak przykładów ---

## S02E04

### Captions

- Uruchomienie kodu: `bun captions`
- Interakcja: przykład wykonuje się automatycznie na pliku `captions/article.md`

### Summary

- Uruchomienie kodu: `bun summary`
- Interakcja: skrypt wykonuje się automatycznie na pliku `summary/article.md`

### Video

Do uruchomienia tego przykładu należy uzupełnić plik `.env` o wartość `GOOGLE_AI_STUDIO_API_KEY`, który można pobrać z [Google AI Studio](https://aistudio.google.com/).

- Uruchomienie kodu: `bun video`
- Interakcja: przykład wykonuje się automatycznie na pliku `video/test.mp3`

### Narration

UWAGA: Ten przykład może zużywać duże ilości kredytów na ElevenLabs, więc jeśli chcesz zobaczyć rezultat jego działania, to w katalogu `narration` znajdują się dwa przykładowe pliki audio, które możesz odtworzyć bez uruchamiania kodu.

Do uruchomienia tego przykładu należy uzupełnić plik `.env` o wartość `GOOGLE_AI_STUDIO_API_KEY`, który można pobrać z [Google AI Studio](https://aistudio.google.com/) oraz `ELEVEN_LABS_API_KEY`, który można pobrać z [ElevenLabs](https://elevenlabs.io/).

- Uruchomienie kodu: `bun narration`
- Interakcja: przykład wykonuje się automatycznie na treści wiadomości użytkownika przekazanej w funkcji `generateNarration` w pliku `narration/app.ts`

## S02E05

### Read

- Uruchomienie kodu: `bun read`
- Interakcja: przykład wykonuje się automatycznie na pliku `read/article.md` i generuje plik audio w folderze read/summary.wav

### Mindmap

Ten przykład wymaga uruchomienia frontendu w folderze `audio-map-frontend` oraz backendu w folderze `audio-map`. W związku z tym przykład **trzeba** uruchomić na własnym komputerze.

- Uruchomienie frontendu: `bun map:dev`
- Uruchomienie backendu: `bun audio-map`
- Interakcja: Otwórz w przeglądarce stronę http://localhost:5173

### Notes

- Uruchomienie kodu: `bun notes`
- Interakcja: przykład wykonuje się automatycznie na wiadomości wpisanej w treść pliku `notes/app.ts` (jest tam kilka przykładów innych wiadomości, które można podmienić).

## S03E01

### Text Splitter

- Uruchomienie kodu: `bun text-splitter`
- Interakcja: przykład wykonuje się automatycznie na plikach markdown z katalogu &quot;text-splitter&quot;

### Unstructured

- Uruchomienie kodu: `bun unstructured`
- Interakcja: przykład wykonuje się automatycznie na pliku source.md z katalogu &quot;unstructured&quot;

## S03E02

### Embedding

Uruchomienie tego przykładu wymaga uzupełnienia pliku `.env` o wartości &quot;QDRANT_URL&quot; oraz &quot;QDRANT_API_KEY&quot;.
Wartości te można znaleźć w panelu Qdrant po zalogowaniu na bezpłatne konto na stronie [Qdrant Cloud](https://cloud.qdrant.io/).

![Qdrant Cloud](https://cloud.overment.com/aidevs3_cluster-1732010353.png)

Natomiast klucz API można pobrać w zakładce &quot;Data Access Control&quot;.

- Uruchomienie kodu: `bun embedding`
- Interakcja: przykład wykonuje się automatycznie na danych osadzonych w pliku embedding/app.ts

### Rerank

- Uruchomienie kodu: `bun rerank`
- Interakcja: przykład wykonuje się automatycznie na danych osadzonych w pliku rerank/app.ts

### Naive RAG

- Uruchomienie kodu: `bun naive-rag`
- Interakcja: przykład wykonuje się automatycznie na danych osadzonych w pliku naive-rag/app.ts

### Better RAG

- Uruchomienie kodu: `bun better-rag`
- Interakcja: przykład wykonuje się automatycznie na danych osadzonych w pliku better-rag/app.ts

### Semantic

- Uruchomienie kodu: `bun semantic`
- Interakcja: przykład wykonuje się automatycznie na danych osadzonych w pliku semantic/app.ts

## S03E03

### Algolia

Do uruchomienia tego przykładu konieczne jest uzupełnienie `ALGOLIA_APP_ID` oraz `ALGOLIA_API_KEY` w pliku `.env`.
**UWAGA**: przy pierwszym uruchomieniu przykładu pojawi się błąd ale spowoduje to utworzenie indeksu w Algolia. Wówczas należy przejść do panelu Algolia i w zakładce &quot;Facets&quot; dodać nowy facet o nazwie `author`.

![](https://cloud.overment.com/2024-11-20/aidevs3_algolia-09eeb970-2.png)

- Uruchomienie kodu: `bun algolia`
- Interakcja: przykład wykonuje się automatycznie na danych osadzonych w pliku algolia/app.ts

### Sync

**UWAGA**: Do uruchomienia tego przykładu konieczne jest uzupełnienie `ALGOLIA_APP_ID` oraz `ALGOLIA_API_KEY` w pliku `.env`.
Wymagane jest bezpłatne konto na [Algolia](https://www.algolia.com/).

Dodatkowo jeśli wyniki wyszukiwania nie są poprawnie zwracane, należy sprawdzić czy pole `text` zostało poprawnie ustawione w panelu Algolia jako `searchableAttributes`.

![Algolia](https://cloud.overment.com/2024-11-19/aidevs3_cleanshot-3e7fd444-c.png)

- Uruchomienie kodu: `bun sync`
- Interakcja: przykład wykonuje się automatycznie na danych osadzonych w pliku sync/app.ts

### Hybrid

**UWAGA**: Do uruchomienia tego przykładu konieczne jest uzupełnienie `QDRANT_URL` oraz `QDRANT_API_KEY` w pliku `.env`.
Konieczne jest także połączenie z Algolia podobnie jak w przypadku przykładu `sync`.

- Uruchomienie kodu: `bun hybrid`
- Interakcja: przykład wykonuje się automatycznie na danych osadzonych w pliku hybrid/app.ts

## S03E05

Do uruchomienia tego przykładu konieczne jest połączenie z bazą Neo4j. Można ją zainstalować lokalnie, a następnie uzupełnić plik `.env` o wartości `NEO4J_URI`, `NEO4J_USER` oraz `NEO4J_PASSWORD`.

### Neo4j-101

- Uruchomienie kodu: `bun neo4j-101`
- Interakcja: przykład wykonuje się automatycznie na danych osadzonych w pliku neo4j-101/app.ts

### Neo4j

- Uruchomienie kodu: `bun neo4j`
- Interakcja: przykład wykonuje się automatycznie na danych osadzonych w pliku neo4j/app.ts
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[kamranahmedse/developer-roadmap]]></title>
            <link>https://github.com/kamranahmedse/developer-roadmap</link>
            <guid>https://github.com/kamranahmedse/developer-roadmap</guid>
            <pubDate>Tue, 13 May 2025 00:05:06 GMT</pubDate>
            <description><![CDATA[Interactive roadmaps, guides and other educational content to help developers grow in their careers.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/kamranahmedse/developer-roadmap">kamranahmedse/developer-roadmap</a></h1>
            <p>Interactive roadmaps, guides and other educational content to help developers grow in their careers.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 319,738</p>
            <p>Forks: 41,376</p>
            <p>Stars today: 511 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[lobehub/lobe-chat]]></title>
            <link>https://github.com/lobehub/lobe-chat</link>
            <guid>https://github.com/lobehub/lobe-chat</guid>
            <pubDate>Tue, 13 May 2025 00:05:05 GMT</pubDate>
            <description><![CDATA[🤯 Lobe Chat - an open-source, modern-design AI chat framework. Supports Multi AI Providers( OpenAI / Claude 3 / Gemini / Ollama / DeepSeek / Qwen), Knowledge Base (file upload / knowledge management / RAG ), Multi-Modals (Plugins/Artifacts) and Thinking. One-click FREE deployment of your private ChatGPT/ Claude / DeepSeek application.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/lobehub/lobe-chat">lobehub/lobe-chat</a></h1>
            <p>🤯 Lobe Chat - an open-source, modern-design AI chat framework. Supports Multi AI Providers( OpenAI / Claude 3 / Gemini / Ollama / DeepSeek / Qwen), Knowledge Base (file upload / knowledge management / RAG ), Multi-Modals (Plugins/Artifacts) and Thinking. One-click FREE deployment of your private ChatGPT/ Claude / DeepSeek application.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 60,503</p>
            <p>Forks: 12,716</p>
            <p>Stars today: 83 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;&lt;a name=&quot;readme-top&quot;&gt;&lt;/a&gt;

[![][image-banner]][vercel-link]

# Lobe Chat

An open-source, modern-design ChatGPT/LLMs UI/Framework.&lt;br/&gt;
Supports speech-synthesis, multi-modal, and extensible ([function call][docs-functionc-call]) plugin system.&lt;br/&gt;
One-click **FREE** deployment of your private OpenAI ChatGPT/Claude/Gemini/Groq/Ollama chat application.

**English** · [简体中文](./README.zh-CN.md) · [Official Site][official-site] · [Changelog][changelog] · [Documents][docs] · [Blog][blog] · [Feedback][github-issues-link]

&lt;!-- SHIELD GROUP --&gt;

[![][github-release-shield]][github-release-link]
[![][docker-release-shield]][docker-release-link]
[![][vercel-shield]][vercel-link]
[![][discord-shield]][discord-link]&lt;br/&gt;
[![][codecov-shield]][codecov-link]
[![][github-action-test-shield]][github-action-test-link]
[![][github-action-release-shield]][github-action-release-link]
[![][github-releasedate-shield]][github-releasedate-link]&lt;br/&gt;
[![][github-contributors-shield]][github-contributors-link]
[![][github-forks-shield]][github-forks-link]
[![][github-stars-shield]][github-stars-link]
[![][github-issues-shield]][github-issues-link]
[![][github-license-shield]][github-license-link]&lt;br&gt;
[![][sponsor-shield]][sponsor-link]

**Share LobeChat Repository**

[![][share-x-shield]][share-x-link]
[![][share-telegram-shield]][share-telegram-link]
[![][share-whatsapp-shield]][share-whatsapp-link]
[![][share-reddit-shield]][share-reddit-link]
[![][share-weibo-shield]][share-weibo-link]
[![][share-mastodon-shield]][share-mastodon-link]
[![][share-linkedin-shield]][share-linkedin-link]

&lt;sup&gt;Pioneering the new age of thinking and creating. Built for you, the Super Individual.&lt;/sup&gt;

[![][github-trending-shield]][github-trending-url]

![][image-overview]

&lt;/div&gt;

&lt;details&gt;
&lt;summary&gt;&lt;kbd&gt;Table of contents&lt;/kbd&gt;&lt;/summary&gt;

#### TOC

- [👋🏻 Getting Started &amp; Join Our Community](#-getting-started--join-our-community)
- [✨ Features](#-features)
  - [`1` Chain of Thought](#1-chain-of-thought)
  - [`2` Branching Conversations](#2-branching-conversations)
  - [`3` Artifacts Support](#3-artifacts-support)
  - [`4` File Upload /Knowledge Base](#4-file-upload-knowledge-base)
  - [`5` Multi-Model Service Provider Support](#5-multi-model-service-provider-support)
  - [`6` Local Large Language Model (LLM) Support](#6-local-large-language-model-llm-support)
  - [`7` Model Visual Recognition](#7-model-visual-recognition)
  - [`8` TTS &amp; STT Voice Conversation](#8-tts--stt-voice-conversation)
  - [`9` Text to Image Generation](#9-text-to-image-generation)
  - [`10` Plugin System (Function Calling)](#10-plugin-system-function-calling)
  - [`11` Agent Market (GPTs)](#11-agent-market-gpts)
  - [`12` Support Local / Remote Database](#12-support-local--remote-database)
  - [`13` Support Multi-User Management](#13-support-multi-user-management)
  - [`14` Progressive Web App (PWA)](#14-progressive-web-app-pwa)
  - [`15` Mobile Device Adaptation](#15-mobile-device-adaptation)
  - [`16` Custom Themes](#16-custom-themes)
  - [`*` What&#039;s more](#-whats-more)
- [⚡️ Performance](#️-performance)
- [🛳 Self Hosting](#-self-hosting)
  - [`A` Deploying with Vercel, Zeabur , Sealos or Alibaba Cloud](#a-deploying-with-vercel-zeabur--sealos-or-alibaba-cloud)
  - [`B` Deploying with Docker](#b-deploying-with-docker)
  - [Environment Variable](#environment-variable)
- [📦 Ecosystem](#-ecosystem)
- [🧩 Plugins](#-plugins)
- [⌨️ Local Development](#️-local-development)
- [🤝 Contributing](#-contributing)
- [❤️ Sponsor](#️-sponsor)
- [🔗 More Products](#-more-products)

####

&lt;br/&gt;

&lt;/details&gt;

## 👋🏻 Getting Started &amp; Join Our Community

We are a group of e/acc design-engineers, hoping to provide modern design components and tools for AIGC.
By adopting the Bootstrapping approach, we aim to provide developers and users with a more open, transparent, and user-friendly product ecosystem.

Whether for users or professional developers, LobeHub will be your AI Agent playground. Please be aware that LobeChat is currently under active development, and feedback is welcome for any [issues][issues-link] encountered.

| [![][vercel-shield-badge]][vercel-link]   | No installation or registration necessary! Visit our website to experience it firsthand.                           |
| :---------------------------------------- | :----------------------------------------------------------------------------------------------------------------- |
| [![][discord-shield-badge]][discord-link] | Join our Discord community! This is where you can connect with developers and other enthusiastic users of LobeHub. |

&gt; \[!IMPORTANT]
&gt;
&gt; **Star Us**, You will receive all release notifications from GitHub without any delay \~ ⭐️

[![][image-star]][github-stars-link]

&lt;details&gt;
  &lt;summary&gt;&lt;kbd&gt;Star History&lt;/kbd&gt;&lt;/summary&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=lobehub%2Flobe-chat&amp;theme=dark&amp;type=Date&quot;&gt;
    &lt;img width=&quot;100%&quot; src=&quot;https://api.star-history.com/svg?repos=lobehub%2Flobe-chat&amp;type=Date&quot;&gt;
  &lt;/picture&gt;
&lt;/details&gt;

## ✨ Features

[![][image-feat-cot]][docs-feat-cot]

### `1` [Chain of Thought][docs-feat-cot]

Experience AI reasoning like never before. Watch as complex problems unfold step by step through our innovative Chain of Thought (CoT) visualization. This breakthrough feature provides unprecedented transparency into AI&#039;s decision-making process, allowing you to observe how conclusions are reached in real-time.

By breaking down complex reasoning into clear, logical steps, you can better understand and validate the AI&#039;s problem-solving approach. Whether you&#039;re debugging, learning, or simply curious about AI reasoning, CoT visualization transforms abstract thinking into an engaging, interactive experience.

[![][back-to-top]](#readme-top)

[![][image-feat-branch]][docs-feat-branch]

### `2` [Branching Conversations][docs-feat-branch]

Introducing a more natural and flexible way to chat with AI. With Branch Conversations, your discussions can flow in multiple directions, just like human conversations do. Create new conversation branches from any message, giving you the freedom to explore different paths while preserving the original context.

Choose between two powerful modes:

- **Continuation Mode:** Seamlessly extend your current discussion while maintaining valuable context
- **Standalone Mode:** Start fresh with a new topic based on any previous message

This groundbreaking feature transforms linear conversations into dynamic, tree-like structures, enabling deeper exploration of ideas and more productive interactions.

[![][back-to-top]](#readme-top)

[![][image-feat-artifacts]][docs-feat-artifacts]

### `3` [Artifacts Support][docs-feat-artifacts]

Experience the power of Claude Artifacts, now integrated into LobeChat. This revolutionary feature expands the boundaries of AI-human interaction, enabling real-time creation and visualization of diverse content formats.

Create and visualize with unprecedented flexibility:

- Generate and display dynamic SVG graphics
- Build and render interactive HTML pages in real-time
- Produce professional documents in multiple formats

[![][back-to-top]](#readme-top)

[![][image-feat-knowledgebase]][docs-feat-knowledgebase]

### `4` [File Upload /Knowledge Base][docs-feat-knowledgebase]

LobeChat supports file upload and knowledge base functionality. You can upload various types of files including documents, images, audio, and video, as well as create knowledge bases, making it convenient for users to manage and search for files. Additionally, you can utilize files and knowledge base features during conversations, enabling a richer dialogue experience.

&lt;https://github.com/user-attachments/assets/faa8cf67-e743-4590-8bf6-ebf6ccc34175&gt;

&gt; \[!TIP]
&gt;
&gt; Learn more on [📘 LobeChat Knowledge Base Launch — From Now On, Every Step Counts](https://lobehub.com/blog/knowledge-base)

&lt;div align=&quot;right&quot;&gt;

[![][back-to-top]](#readme-top)

&lt;/div&gt;

[![][image-feat-privoder]][docs-feat-provider]

### `5` [Multi-Model Service Provider Support][docs-feat-provider]

In the continuous development of LobeChat, we deeply understand the importance of diversity in model service providers for meeting the needs of the community when providing AI conversation services. Therefore, we have expanded our support to multiple model service providers, rather than being limited to a single one, in order to offer users a more diverse and rich selection of conversations.

In this way, LobeChat can more flexibly adapt to the needs of different users, while also providing developers with a wider range of choices.

#### Supported Model Service Providers

We have implemented support for the following model service providers:

&lt;!-- PROVIDER LIST --&gt;

- **[OpenAI](https://lobechat.com/discover/provider/openai)**: OpenAI is a global leader in artificial intelligence research, with models like the GPT series pushing the frontiers of natural language processing. OpenAI is committed to transforming multiple industries through innovative and efficient AI solutions. Their products demonstrate significant performance and cost-effectiveness, widely used in research, business, and innovative applications.
- **[Ollama](https://lobechat.com/discover/provider/ollama)**: Ollama provides models that cover a wide range of fields, including code generation, mathematical operations, multilingual processing, and conversational interaction, catering to diverse enterprise-level and localized deployment needs.
- **[Anthropic](https://lobechat.com/discover/provider/anthropic)**: Anthropic is a company focused on AI research and development, offering a range of advanced language models such as Claude 3.5 Sonnet, Claude 3 Sonnet, Claude 3 Opus, and Claude 3 Haiku. These models achieve an ideal balance between intelligence, speed, and cost, suitable for various applications from enterprise workloads to rapid-response scenarios. Claude 3.5 Sonnet, as their latest model, has excelled in multiple evaluations while maintaining a high cost-performance ratio.
- **[Bedrock](https://lobechat.com/discover/provider/bedrock)**: Bedrock is a service provided by Amazon AWS, focusing on delivering advanced AI language and visual models for enterprises. Its model family includes Anthropic&#039;s Claude series, Meta&#039;s Llama 3.1 series, and more, offering a range of options from lightweight to high-performance, supporting tasks such as text generation, conversation, and image processing for businesses of varying scales and needs.
- **[Google](https://lobechat.com/discover/provider/google)**: Google&#039;s Gemini series represents its most advanced, versatile AI models, developed by Google DeepMind, designed for multimodal capabilities, supporting seamless understanding and processing of text, code, images, audio, and video. Suitable for various environments from data centers to mobile devices, it significantly enhances the efficiency and applicability of AI models.
- **[DeepSeek](https://lobechat.com/discover/provider/deepseek)**: DeepSeek is a company focused on AI technology research and application, with its latest model DeepSeek-V2.5 integrating general dialogue and code processing capabilities, achieving significant improvements in human preference alignment, writing tasks, and instruction following.
- **[PPIO](https://lobechat.com/discover/provider/ppio)**: PPIO supports stable and cost-efficient open-source LLM APIs, such as DeepSeek, Llama, Qwen etc.
- **[HuggingFace](https://lobechat.com/discover/provider/huggingface)**: The HuggingFace Inference API provides a fast and free way for you to explore thousands of models for various tasks. Whether you are prototyping for a new application or experimenting with the capabilities of machine learning, this API gives you instant access to high-performance models across multiple domains.
- **[OpenRouter](https://lobechat.com/discover/provider/openrouter)**: OpenRouter is a service platform providing access to various cutting-edge large model interfaces, supporting OpenAI, Anthropic, LLaMA, and more, suitable for diverse development and application needs. Users can flexibly choose the optimal model and pricing based on their requirements, enhancing the AI experience.
- **[Cloudflare Workers AI](https://lobechat.com/discover/provider/cloudflare)**: Run serverless GPU-powered machine learning models on Cloudflare&#039;s global network.

&lt;details&gt;&lt;summary&gt;&lt;kbd&gt;See more providers (+30)&lt;/kbd&gt;&lt;/summary&gt;

- **[GitHub](https://lobechat.com/discover/provider/github)**: With GitHub Models, developers can become AI engineers and leverage the industry&#039;s leading AI models.
- **[Novita](https://lobechat.com/discover/provider/novita)**: Novita AI is a platform providing a variety of large language models and AI image generation API services, flexible, reliable, and cost-effective. It supports the latest open-source models like Llama3 and Mistral, offering a comprehensive, user-friendly, and auto-scaling API solution for generative AI application development, suitable for the rapid growth of AI startups.
- **[PPIO](https://lobechat.com/discover/provider/ppio)**: PPIO supports stable and cost-efficient open-source LLM APIs, such as DeepSeek, Llama, Qwen etc.
- **[Together AI](https://lobechat.com/discover/provider/togetherai)**: Together AI is dedicated to achieving leading performance through innovative AI models, offering extensive customization capabilities, including rapid scaling support and intuitive deployment processes to meet various enterprise needs.
- **[Fireworks AI](https://lobechat.com/discover/provider/fireworksai)**: Fireworks AI is a leading provider of advanced language model services, focusing on functional calling and multimodal processing. Its latest model, Firefunction V2, is based on Llama-3, optimized for function calling, conversation, and instruction following. The visual language model FireLLaVA-13B supports mixed input of images and text. Other notable models include the Llama series and Mixtral series, providing efficient multilingual instruction following and generation support.
- **[Groq](https://lobechat.com/discover/provider/groq)**: Groq&#039;s LPU inference engine has excelled in the latest independent large language model (LLM) benchmarks, redefining the standards for AI solutions with its remarkable speed and efficiency. Groq represents instant inference speed, demonstrating strong performance in cloud-based deployments.
- **[Perplexity](https://lobechat.com/discover/provider/perplexity)**: Perplexity is a leading provider of conversational generation models, offering various advanced Llama 3.1 models that support both online and offline applications, particularly suited for complex natural language processing tasks.
- **[Mistral](https://lobechat.com/discover/provider/mistral)**: Mistral provides advanced general, specialized, and research models widely used in complex reasoning, multilingual tasks, and code generation. Through functional calling interfaces, users can integrate custom functionalities for specific applications.
- **[Ai21Labs](https://lobechat.com/discover/provider/ai21)**: AI21 Labs builds foundational models and AI systems for enterprises, accelerating the application of generative AI in production.
- **[Upstage](https://lobechat.com/discover/provider/upstage)**: Upstage focuses on developing AI models for various business needs, including Solar LLM and document AI, aiming to achieve artificial general intelligence (AGI) for work. It allows for the creation of simple conversational agents through Chat API and supports functional calling, translation, embedding, and domain-specific applications.
- **[xAI](https://lobechat.com/discover/provider/xai)**: xAI is a company dedicated to building artificial intelligence to accelerate human scientific discovery. Our mission is to advance our collective understanding of the universe.
- **[Qwen](https://lobechat.com/discover/provider/qwen)**: Tongyi Qianwen is a large-scale language model independently developed by Alibaba Cloud, featuring strong natural language understanding and generation capabilities. It can answer various questions, create written content, express opinions, and write code, playing a role in multiple fields.
- **[Wenxin](https://lobechat.com/discover/provider/wenxin)**: An enterprise-level one-stop platform for large model and AI-native application development and services, providing the most comprehensive and user-friendly toolchain for the entire process of generative artificial intelligence model development and application development.
- **[Hunyuan](https://lobechat.com/discover/provider/hunyuan)**: A large language model developed by Tencent, equipped with powerful Chinese creative capabilities, logical reasoning abilities in complex contexts, and reliable task execution skills.
- **[ZhiPu](https://lobechat.com/discover/provider/zhipu)**: Zhipu AI offers an open platform for multimodal and language models, supporting a wide range of AI application scenarios, including text processing, image understanding, and programming assistance.
- **[SiliconCloud](https://lobechat.com/discover/provider/siliconcloud)**: SiliconFlow is dedicated to accelerating AGI for the benefit of humanity, enhancing large-scale AI efficiency through an easy-to-use and cost-effective GenAI stack.
- **[01.AI](https://lobechat.com/discover/provider/zeroone)**: 01.AI focuses on AI 2.0 era technologies, vigorously promoting the innovation and application of &#039;human + artificial intelligence&#039;, using powerful models and advanced AI technologies to enhance human productivity and achieve technological empowerment.
- **[Spark](https://lobechat.com/discover/provider/spark)**: iFlytek&#039;s Spark model provides powerful AI capabilities across multiple domains and languages, utilizing advanced natural language processing technology to build innovative applications suitable for smart hardware, smart healthcare, smart finance, and other vertical scenarios.
- **[SenseNova](https://lobechat.com/discover/provider/sensenova)**: SenseNova, backed by SenseTime&#039;s robust infrastructure, offers efficient and user-friendly full-stack large model services.
- **[Stepfun](https://lobechat.com/discover/provider/stepfun)**: StepFun&#039;s large model possesses industry-leading multimodal and complex reasoning capabilities, supporting ultra-long text understanding and powerful autonomous scheduling search engine functions.
- **[Moonshot](https://lobechat.com/discover/provider/moonshot)**: Moonshot is an open-source platform launched by Beijing Dark Side Technology Co., Ltd., providing various natural language processing models with a wide range of applications, including but not limited to content creation, academic research, intelligent recommendations, and medical diagnosis, supporting long text processing and complex generation tasks.
- **[Baichuan](https://lobechat.com/discover/provider/baichuan)**: Baichuan Intelligence is a company focused on the research and development of large AI models, with its models excelling in domestic knowledge encyclopedias, long text processing, and generative creation tasks in Chinese, surpassing mainstream foreign models. Baichuan Intelligence also possesses industry-leading multimodal capabilities, performing excellently in multiple authoritative evaluations. Its models include Baichuan 4, Baichuan 3 Turbo, and Baichuan 3 Turbo 128k, each optimized for different application scenarios, providing cost-effective solutions.
- **[Minimax](https://lobechat.com/discover/provider/minimax)**: MiniMax is a general artificial intelligence technology company established in 2021, dedicated to co-creating intelligence with users. MiniMax has independently developed general large models of different modalities, including trillion-parameter MoE text models, voice models, and image models, and has launched applications such as Conch AI.
- **[InternLM](https://lobechat.com/di

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[iptv-org/iptv]]></title>
            <link>https://github.com/iptv-org/iptv</link>
            <guid>https://github.com/iptv-org/iptv</guid>
            <pubDate>Tue, 13 May 2025 00:05:04 GMT</pubDate>
            <description><![CDATA[Collection of publicly available IPTV channels from all over the world]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/iptv-org/iptv">iptv-org/iptv</a></h1>
            <p>Collection of publicly available IPTV channels from all over the world</p>
            <p>Language: TypeScript</p>
            <p>Stars: 93,377</p>
            <p>Forks: 3,490</p>
            <p>Stars today: 66 stars today</p>
            <h2>README</h2><pre># IPTV [![update](https://github.com/iptv-org/iptv/actions/workflows/update.yml/badge.svg)](https://github.com/iptv-org/iptv/actions/workflows/update.yml)

Collection of publicly available IPTV (Internet Protocol television) channels from all over the world.

## Table of contents

- 🚀 [How to use?](#how-to-use)
- 📺 [Playlists](#playlists)
- 🗓 [EPG](#epg)
- 🗄 [Database](#database)
- 👨‍💻 [API](#api)
- 📚 [Resources](#resources)
- 💬 [Discussions](#discussions)
- ❓ [FAQ](#faq)
- 🛠 [Contribution](#contribution)
- ⚖ [Legal](#legal)
- © [License](#license)

## How to use?

Simply insert one of the links below into [any video player](https://github.com/iptv-org/awesome-iptv#apps) that supports live streaming and press _Open_.

![VLC Network Panel](https://github.com/iptv-org/iptv/raw/master/.readme/preview.png)

## Playlists

There are several versions of playlists that differ in the way they are grouped. As of January 30th, 2024, we have stopped distributing NSFW channels. For more information, please look at [this issue](https://github.com/iptv-org/iptv/issues/15723).

### Main playlist

This playlist includes all known channels available in this repository.

```
https://iptv-org.github.io/iptv/index.m3u
```

### Grouped by category

Playlists in which channels are grouped by category. A list of all supported categories with descriptions can be found [here](.readme/supported-categories.md).

&lt;details&gt;
&lt;summary&gt;Expand&lt;/summary&gt;
&lt;br&gt;

```
https://iptv-org.github.io/iptv/index.category.m3u
```

Same thing, but split up into separate files:

&lt;!-- prettier-ignore --&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;&lt;th align=&quot;left&quot;&gt;Category&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Channels&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Playlist&lt;/th&gt;&lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;&lt;td&gt;Animation&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;55&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/animation.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Auto&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;17&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/auto.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Business&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;65&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/business.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Classic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;47&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/classic.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Comedy&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;83&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/comedy.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Cooking&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;28&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/cooking.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Culture&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;161&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/culture.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Documentary&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;108&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/documentary.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Education&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;154&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/education.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Entertainment&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;554&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/entertainment.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Family&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;55&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/family.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;General&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2290&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/general.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Kids&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;236&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/kids.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Legislative&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;189&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/legislative.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Lifestyle&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;93&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/lifestyle.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Movies&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;335&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/movies.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Music&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;668&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/music.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;News&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;776&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/news.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Outdoor&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;44&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/outdoor.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Relax&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/relax.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Religious&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;691&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/religious.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Science&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;25&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/science.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Series&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;252&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/series.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Shop&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;88&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/shop.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Sports&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;277&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/sports.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Travel&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;40&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/travel.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Weather&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/weather.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;XXX&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;0&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/xxx.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Undefined&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;4018&lt;/td&gt;&lt;td nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/undefined.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;/details&gt;

### Grouped by language

Playlists in which channels are grouped by the language in which they are broadcast.

&lt;details&gt;
&lt;summary&gt;Expand&lt;/summary&gt;
&lt;br&gt;

```
https://iptv-org.github.io/iptv/index.language.m3u
```

Same thing, but split up into separate files:

&lt;!-- prettier-ignore --&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;&lt;th align=&quot;left&quot;&gt;Language&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Channels&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Playlist&lt;/th&gt;&lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Acoli&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ach.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Adhola&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/adh.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Afghan Persian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/prs.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Afrikaans&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/afr.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Albanian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;66&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/sqi.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Alur&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/alz.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Amharic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/amh.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Arabic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;392&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ara.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Armenian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;27&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hye.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Assamese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/asm.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Assyrian Neo-Aramaic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/aii.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Ayizo Gbe&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ayb.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Aymara&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/aym.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Azerbaijani&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;17&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/aze.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Baatonum&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bba.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bambara&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bam.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bashkir&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bak.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Basque&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/eus.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Belarusian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bel.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bengali&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;26&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ben.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bhojpuri&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bho.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bosnian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bos.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Bulgarian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;30&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bul.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Burmese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/mya.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Catalan&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;51&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/cat.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Central Kurdish&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ckb.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Chenoua&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/cnu.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Chhattisgarhi&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hne.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Chiga&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/cgg.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Chinese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;220&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/zho.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Croatian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;22&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hrv.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Czech&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;40&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ces.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Danish&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;19&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/dan.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dendi (Benin)&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ddn.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dhanwar (Nepal)&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/dhw.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dhivehi&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/div.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dholuo&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/luo.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dimili&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/zza.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Dutch&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;188&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/nld.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Egyptian Arabic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/arz.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;English&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2281&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/eng.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Estonian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/est.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Ewe&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ewe.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Faroese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fao.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Fataleka&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/far.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Filipino&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fil.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Finnish&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;29&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fin.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Fon&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fon.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;French&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;411&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fra.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Fulah&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ful.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Gaelic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/gla.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Galician&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/glg.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Ganda&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/lug.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Gen&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/gej.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Georgian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kat.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;German&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;334&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/deu.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Gikuyu&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kik.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Goan Konkani&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/gom.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Greek&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;129&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ell.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Guadeloupean Creole French&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/gcf.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Gujarati&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/guj.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Gun&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/guw.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Haitian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hat.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Hausa&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hau.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Hebrew&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;14&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/heb.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Hindi&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;125&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hin.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Hmong&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hmn.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Hungarian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;105&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hun.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Icelandic&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/isl.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Indonesian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;99&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ind.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Inuktitut&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/iku.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Iranian Persian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/pes.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Irish&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/gle.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Isekiri&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/its.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Italian&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;342&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ita.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Japanese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;16&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/jpn.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Javanese&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/jav.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kabiyè&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kbp.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kabyle&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kab.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kannada&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;11&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kan.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kapampangan&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/pam.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kazakh&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;28&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kaz.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Khmer&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;22&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/khm.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Khorasani Turkish&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kmz.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kinyarwanda&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kin.m3u&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Kirghiz&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;&lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.g

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[bytedance/UI-TARS-desktop]]></title>
            <link>https://github.com/bytedance/UI-TARS-desktop</link>
            <guid>https://github.com/bytedance/UI-TARS-desktop</guid>
            <pubDate>Tue, 13 May 2025 00:05:03 GMT</pubDate>
            <description><![CDATA[A GUI Agent application based on UI-TARS(Vision-Language Model) that allows you to control your computer using natural language.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/bytedance/UI-TARS-desktop">bytedance/UI-TARS-desktop</a></h1>
            <p>A GUI Agent application based on UI-TARS(Vision-Language Model) that allows you to control your computer using natural language.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 13,559</p>
            <p>Forks: 1,093</p>
            <p>Stars today: 92 stars today</p>
            <h2>README</h2><pre>

&gt; [!IMPORTANT]
&gt; &lt;a href=&quot;./apps/agent-tars/README.md&quot;&gt;
&gt;   &lt;img src=&quot;./apps/agent-tars/static/hero.png&quot;&gt;
&gt; &lt;/a&gt;
&gt;
&gt; **\[2025-03-18\]** We released a **technical preview** version of a new desktop app - [Agent TARS](./apps/agent-tars/README.md), a multimodal AI agent that leverages browser operations by visually interpreting web pages and seamlessly integrating with command lines and file systems.


&lt;p align=&quot;center&quot;&gt;
  &lt;img alt=&quot;UI-TARS&quot; width=&quot;260&quot; src=&quot;./apps/ui-tars/resources/icon.png&quot;&gt;
&lt;/p&gt;

# UI-TARS Desktop

UI-TARS Desktop is a GUI Agent application based on [UI-TARS (Vision-Language Model)](https://github.com/bytedance/UI-TARS) that allows you to control your computer using natural language.


&lt;div align=&quot;center&quot;&gt;
&lt;p&gt;
        &amp;nbsp&amp;nbsp 📑 &lt;a href=&quot;https://arxiv.org/abs/2501.12326&quot;&gt;Paper&lt;/a&gt; &amp;nbsp&amp;nbsp
        | 🤗 &lt;a href=&quot;https://huggingface.co/ByteDance-Seed/UI-TARS-1.5-7B&quot;&gt;Hugging Face Models&lt;/a&gt;&amp;nbsp&amp;nbsp
        | &amp;nbsp&amp;nbsp🫨 &lt;a href=&quot;https://discord.gg/pTXwYVjfcs&quot;&gt;Discord&lt;/a&gt;&amp;nbsp&amp;nbsp
        | &amp;nbsp&amp;nbsp🤖 &lt;a href=&quot;https://www.modelscope.cn/collections/UI-TARS-bccb56fa1ef640&quot;&gt;ModelScope&lt;/a&gt;&amp;nbsp&amp;nbsp
&lt;br&gt;
🖥️ Desktop Application &amp;nbsp&amp;nbsp
| &amp;nbsp&amp;nbsp 👓 &lt;a href=&quot;https://github.com/web-infra-dev/midscene&quot;&gt;Midscene (use in browser)&lt;/a&gt; &amp;nbsp&amp;nbsp
| &amp;nbsp&amp;nbsp &lt;a href=&quot;https://deepwiki.com/bytedance/UI-TARS-desktop&quot;&gt;
    &lt;img alt=&quot;Ask DeepWiki.com&quot; src=&quot;https://devin.ai/assets/deepwiki-badge.png&quot; style=&quot;height: 18px; vertical-align: middle;&quot;&gt;
  &lt;/a&gt;
&lt;/p&gt;

[![](https://trendshift.io/api/badge/repositories/13584)](https://trendshift.io/repositories/13584)

&lt;/div&gt;

## Showcases

| Instruction  | Video |
| :---:  | :---: |
| Please help me open the autosave feature of VS Code and delay AutoSave operations for 500 milliseconds in the VS Code setting.      |    &lt;video src=&quot;https://github.com/user-attachments/assets/e0914ce9-ad33-494b-bdec-0c25c1b01a27&quot; height=&quot;300&quot; /&gt;    |
| Could you help me check the latest open issue of the UI-TARS-Desktop project on GitHub?   | &lt;video src=&quot;https://github.com/user-attachments/assets/3d159f54-d24a-4268-96c0-e149607e9199&quot; height=&quot;300&quot; /&gt;        |


## News

- **\[2025-04-17\]** - 🎉 We&#039;re thrilled to announce the release of new UI-TARS Desktop application v0.1.0, featuring a redesigned Agent UI. The application enhances the computer using experience, introduces new browser operation features, and supports [the advanced UI-TARS-1.5 model](https://seed-tars.com/1.5) for improved performance and precise control.
- **\[2025-02-20\]** - 📦 Introduced [UI TARS SDK](./docs/sdk.md), is a powerful cross-platform toolkit for building GUI automation agents.
- **\[2025-01-23\]** - 🚀 We updated the **[Cloud Deployment](./docs/deployment.md#cloud-deployment)** section in the 中文版: [GUI模型部署教程](https://bytedance.sg.larkoffice.com/docx/TCcudYwyIox5vyxiSDLlgIsTgWf#U94rdCxzBoJMLex38NPlHL21gNb) with new information related to the ModelScope platform. You can now use the ModelScope platform for deployment.


## Features

- 🤖 Natural language control powered by Vision-Language Model
- 🖥️ Screenshot and visual recognition support
- 🎯 Precise mouse and keyboard control
- 💻 Cross-platform support (Windows/MacOS/Browser)
- 🔄 Real-time feedback and status display
- 🔐 Private and secure - fully local processing

## Quick Start

See [Quick Start](./docs/quick-start.md).

## Deployment

See [Deployment](https://github.com/bytedance/UI-TARS/blob/main/README_deploy.md).

## Contributing

See [CONTRIBUTING.md](./CONTRIBUTING.md).

## SDK (Experimental)

See [@ui-tars/sdk](./docs/sdk.md)

## License

UI-TARS Desktop is licensed under the Apache License 2.0.

## Citation
If you find our paper and code useful in your research, please consider giving a star :star: and citation :pencil:

```BibTeX
@article{qin2025ui,
  title={UI-TARS: Pioneering Automated GUI Interaction with Native Agents},
  author={Qin, Yujia and Ye, Yining and Fang, Junjie and Wang, Haoming and Liang, Shihao and Tian, Shizuo and Zhang, Junda and Li, Jiahao and Li, Yunxin and Huang, Shijue and others},
  journal={arXiv preprint arXiv:2501.12326},
  year={2025}
}
```
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Mail-0/Zero]]></title>
            <link>https://github.com/Mail-0/Zero</link>
            <guid>https://github.com/Mail-0/Zero</guid>
            <pubDate>Tue, 13 May 2025 00:05:02 GMT</pubDate>
            <description><![CDATA[Experience email the way you want with 0 – the first open source email app that puts your privacy and safety first. Join the discord: https://discord.gg/0email]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Mail-0/Zero">Mail-0/Zero</a></h1>
            <p>Experience email the way you want with 0 – the first open source email app that puts your privacy and safety first. Join the discord: https://discord.gg/0email</p>
            <p>Language: TypeScript</p>
            <p>Stars: 7,221</p>
            <p>Forks: 592</p>
            <p>Stars today: 389 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;picture&gt;
    &lt;source srcset=&quot;apps/mail/public/white-icon.svg&quot; media=&quot;(prefers-color-scheme: dark)&quot;&gt;
    &lt;img src=&quot;apps/mail/public/black-icon.svg&quot; alt=&quot;Zero Logo&quot; width=&quot;64&quot; style=&quot;background-color: #000; padding: 10px;&quot;/&gt;
  &lt;/picture&gt;
&lt;/p&gt;

# Zero

[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fnizzyabi%2FMail0&amp;env=DATABASE_URL,BETTER_AUTH_SECRET,BETTER_AUTH_URL,BETTER_AUTH_TRUSTED_ORIGINS,GOOGLE_CLIENT_ID,GOOGLE_CLIENT_SECRET,GOOGLE_REDIRECT_URI,GITHUB_CLIENT_ID,GITHUB_CLIENT_SECRET,GITHUB_REDIRECT_URI&amp;envDescription=For%20more%20info%20on%20setting%20up%20your%20API%20keys%2C%20checkout%20the%20Readme%20below&amp;envLink=https%3A%2F%2Fgithub.com%2Fnizzyabi%2FMail0%2Fblob%2Fmain%2FREADME.md&amp;project-name=0&amp;repository-name=0&amp;redirect-url=0.email&amp;demo-title=0&amp;demo-description=An%20open%20source%20email%20app&amp;demo-url=0.email)

An Open-Source Gmail Alternative for the Future of Email

## What is Zero?

Zero is an open-source AI email solution that gives users the power to **self-host** their own email app while also integrating external services like Gmail and other email providers. Our goal is to modernize and improve emails through AI agents to truly modernize emails.

## Why Zero?

Most email services today are either **closed-source**, **data-hungry**, or **too complex to self-host**.
0.email is different:

- ✅ **Open-Source** – No hidden agendas, fully transparent.
- 🦾 **AI Driven** - Enhance your emails with Agents &amp; LLMs.
- 🔒 **Data Privacy First** – Your emails, your data. Zero does not track, collect, or sell your data in any way. Please note: while we integrate with external services, the data passed through them is not under our control and falls under their respective privacy policies and terms of service.
- ⚙️ **Self-Hosting Freedom** – Run your own email app with ease.
- 📬 **Unified Inbox** – Connect multiple email providers like Gmail, Outlook, and more.
- 🎨 **Customizable UI &amp; Features** – Tailor your email experience the way you want it.
- 🚀 **Developer-Friendly** – Built with extensibility and integrations in mind.

## Tech Stack

Zero is built with modern and reliable technologies:

- **Frontend**: Next.js, React, TypeScript, TailwindCSS, Shadcn UI
- **Backend**: Node.js, Drizzle ORM
- **Database**: PostgreSQL
- **Authentication**: Better Auth, Google OAuth
&lt;!-- - **Testing**: Jest, React Testing Library --&gt;

## Getting Started

### Prerequisites

**Required Versions:**

- [Node.js](https://nodejs.org/en/download) (v18 or higher)
- [Bun](https://bun.sh) (v1.2 or higher)
- [Docker](https://docs.docker.com/engine/install/) (v20 or higher)

Before running the application, you&#039;ll need to set up services and configure environment variables. For more details on environment variables, see the [Environment Variables](#environment-variables) section.

### Setup Options

You can set up Zero in two ways:

&lt;details open&gt;
&lt;summary&gt;&lt;b&gt;Option 1: Standard Setup (Recommended)&lt;/b&gt;&lt;/summary&gt;

#### Quick Start Guide

1. **Clone and Install**

   ```bash
   # Clone the repository
   git clone https://github.com/Mail-0/Zero.git
   cd Zero

   # Install dependencies
   bun install

   # Start database locally
   bun docker:up
   ```

2. **Set Up Environment**

   - Copy `.env.example` to `.env` in project root
     ```bash
     cp .env.example .env
     ```
   - Configure your environment variables (see below)
   - Setup cloudflare with `bun run cf-install`, you will need to run this everytime there is a `.env` change
   - Start the database with the provided docker compose setup: `bun docker:up`
   - Initialize the database: `bun db:push`

3. **Start the App**

   ```bash
   bun dev
   ```

4. **Open in Browser**

   Visit [http://localhost:3000](http://localhost:3000)
   &lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;&lt;b&gt;Option 2: Dev Container Setup (For VS Code Users)&lt;/b&gt;&lt;/summary&gt;

This option uses VS Code&#039;s Dev Containers feature to provide a fully configured development environment with all dependencies pre-installed. It&#039;s great for ensuring everyone on the team has the same setup.

1. **Prerequisites**

   - [Docker](https://docs.docker.com/get-docker/)
   - [VS Code](https://code.visualstudio.com/) or compatible editor
   - [Dev Containers extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers)

2. **Open in Dev Container**

   - Clone the repository: `git clone https://github.com/Mail-0/Zero.git`
   - Open the folder in VS Code
   - When prompted, click &quot;Reopen in Container&quot; or run the &quot;Dev Containers: Open Folder in Container&quot; command
   - VS Code will build and start the dev container (this may take a few minutes the first time)

3. **Access the App**

   - The app will be available at [http://localhost:3000](http://localhost:3000)

4. **Troubleshooting**
   - If you encounter issues with the container, try rebuilding it using the &quot;Dev Containers: Rebuild Container&quot; command
   - For dependency issues inside the container:
     `bash
rm -rf node_modules
rm bun.lockb
bun install
`
     &lt;/details&gt;

### Environment Setup

1. **Better Auth Setup**

   - Open the `.env` file and change the BETTER_AUTH_SECRET to a random string. (Use `openssl rand -hex 32` to generate a 32 character string)

     ```env
     BETTER_AUTH_SECRET=your_secret_key
     ```

2. **Google OAuth Setup** (Required for Gmail integration)

   - Go to [Google Cloud Console](https://console.cloud.google.com)
   - Create a new project
   - Add the following APIs in your Google Cloud Project: [People API](https://console.cloud.google.com/apis/library/people.googleapis.com), [Gmail API](https://console.cloud.google.com/apis/library/gmail.googleapis.com)
     - Use the links above and click &#039;Enable&#039; or
     - Go to &#039;APIs and Services&#039; &gt; &#039;Enable APIs and Services&#039; &gt; Search for &#039;Google People API&#039; and click &#039;Enable&#039;
     - Go to &#039;APIs and Services&#039; &gt; &#039;Enable APIs and Services&#039; &gt; Search for &#039;Gmail API&#039; and click &#039;Enable&#039;
   - Enable the Google OAuth2 API
   - Create OAuth 2.0 credentials (Web application type)
   - Add authorized redirect URIs:
     - Development:
       - `http://localhost:8787/api/auth/callback/google`
     - Production:
       - `https://your-production-url/api/auth/callback/google`
   - Add to `.env`:

     ```env
     GOOGLE_CLIENT_ID=your_client_id
     GOOGLE_CLIENT_SECRET=your_client_secret
     ```

   - Add yourself as a test user:

     - Go to [`Audience`](https://console.cloud.google.com/auth/audience)
     - Under &#039;Test users&#039; click &#039;Add Users&#039;
     - Add your email and click &#039;Save&#039;

&gt; [!WARNING]
&gt; The authorized redirect URIs in Google Cloud Console must match **exactly** what you configure in the `.env`, including the protocol (http/https), domain, and path - these are provided above.

### Environment Variables

Copy `.env.example` located in the project folder to `.env` in the same folder and configure the following variables:

```env
# Auth
BETTER_AUTH_SECRET=     # Required: Secret key for authentication

# Google OAuth (Required for Gmail integration)
GOOGLE_CLIENT_ID=       # Required for Gmail integration
GOOGLE_CLIENT_SECRET=   # Required for Gmail integration

# Database
DATABASE_URL=           # Required: PostgreSQL connection string for backend connection

# Redis
REDIS_URL=              # Redis URL for caching (http://localhost:8079 for local dev)
REDIS_TOKEN=            # Redis token (upstash-local-token for local dev)
```

For local development a connection string example is provided in the `.env.example` file located in the same folder as the database.

### Database Setup

Zero uses PostgreSQL for storing data. Here&#039;s how to set it up:

1. **Start the Database**

   Run this command to start a local PostgreSQL instance:

   ```bash
   bun docker:up
   ```

   This creates a database with:

   - Name: `zerodotemail`
   - Username: `postgres`
   - Password: `postgres`
   - Port: `5432`

2. **Set Up Database Connection**

   Make sure your database connection string is in `.env` file. And you have ran `bun run cf-install` to sync the latest env.

   For local development use:

   ```
   DATABASE_URL=&quot;postgresql://postgres:postgres@localhost:5432/zerodotemail&quot;
   ```

3. **Database Commands**

   - **Set up database tables**:

     ```bash
     bun db:push
     ```

   - **Create migration files** (after schema changes):

     ```bash
     bun db:generate
     ```

   - **Apply migrations**:

     ```bash
     bun db:migrate
     ```

   - **View database content**:
     ```bash
     bun db:studio
     ```
     &gt; If you run `bun dev` in your terminal, the studio command should be automatically running with the app.

## Contribute

Please refer to the [contributing guide](.github/CONTRIBUTING.md).

If you&#039;d like to help with translating Zero to other languages, check out our [translation guide](.github/TRANSLATION.md).

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=Mail-0/Zero&amp;type=Timeline)](https://www.star-history.com/#Mail-0/Zero&amp;Timeline)

## This project wouldn&#039;t be possible without these awesome companies

&lt;div style=&quot;display: flex; justify-content: center;&quot;&gt;
  &lt;a href=&quot;https://vercel.com&quot; style=&quot;text-decoration: none;&quot;&gt;
    &lt;img src=&quot;public/vercel.png&quot; alt=&quot;Vercel&quot; width=&quot;96&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://better-auth.com&quot; style=&quot;text-decoration: none;&quot;&gt;
    &lt;img src=&quot;public/better-auth.png&quot; alt=&quot;Better Auth&quot; width=&quot;96&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://orm.drizzle.team&quot; style=&quot;text-decoration: none;&quot;&gt;
    &lt;img src=&quot;public/drizzle-orm.png&quot; alt=&quot;Drizzle ORM&quot; width=&quot;96&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://coderabbit.com&quot; style=&quot;text-decoration: none;&quot;&gt;
    &lt;img src=&quot;public/coderabbit.png&quot; alt=&quot;Coderabbit AI&quot; width=&quot;96&quot;/&gt;
  &lt;/a&gt;
&lt;/div&gt;

## 🤍 The team

Curious who makes Zero? Here are our [contributors and maintainers](https://0.email/contributors)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[ahmedkhaleel2004/gitdiagram]]></title>
            <link>https://github.com/ahmedkhaleel2004/gitdiagram</link>
            <guid>https://github.com/ahmedkhaleel2004/gitdiagram</guid>
            <pubDate>Tue, 13 May 2025 00:05:01 GMT</pubDate>
            <description><![CDATA[Free, simple, fast interactive diagrams for any GitHub repository]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ahmedkhaleel2004/gitdiagram">ahmedkhaleel2004/gitdiagram</a></h1>
            <p>Free, simple, fast interactive diagrams for any GitHub repository</p>
            <p>Language: TypeScript</p>
            <p>Stars: 11,705</p>
            <p>Forks: 818</p>
            <p>Stars today: 293 stars today</p>
            <h2>README</h2><pre>[![Image](./docs/readme_img.png &quot;GitDiagram Front Page&quot;)](https://gitdiagram.com/)

![License](https://img.shields.io/badge/license-MIT-blue.svg)
[![Kofi](https://img.shields.io/badge/Kofi-F16061.svg?logo=ko-fi&amp;logoColor=white)](https://ko-fi.com/ahmedkhaleel2004)

# GitDiagram

Turn any GitHub repository into an interactive diagram for visualization in seconds.

You can also replace `hub` with `diagram` in any Github URL to access its diagram.

## 🚀 Features

- 👀 **Instant Visualization**: Convert any GitHub repository structure into a system design / architecture diagram
- 🎨 **Interactivity**: Click on components to navigate directly to source files and relevant directories
- ⚡ **Fast Generation**: Powered by OpenAI o4-mini for quick and accurate diagrams
- 🔄 **Customization**: Modify and regenerate diagrams with custom instructions
- 🌐 **API Access**: Public API available for integration (WIP)

## ⚙️ Tech Stack

- **Frontend**: Next.js, TypeScript, Tailwind CSS, ShadCN
- **Backend**: FastAPI, Python, Server Actions
- **Database**: PostgreSQL (with Drizzle ORM)
- **AI**: OpenAI o4-mini
- **Deployment**: Vercel (Frontend), EC2 (Backend)
- **CI/CD**: GitHub Actions
- **Analytics**: PostHog, Api-Analytics

## 🤔 About

I created this because I wanted to contribute to open-source projects but quickly realized their codebases are too massive for me to dig through manually, so this helps me get started - but it&#039;s definitely got many more use cases!

Given any public (or private!) GitHub repository it generates diagrams in Mermaid.js with OpenAI&#039;s o4-mini! (Previously Claude 3.5 Sonnet)

I extract information from the file tree and README for details and interactivity (you can click components to be taken to relevant files and directories)

Most of what you might call the &quot;processing&quot; of this app is done with prompt engineering - see `/backend/app/prompts.py`. This basically extracts and pipelines data and analysis for a larger action workflow, ending in the diagram code.

## 🔒 How to diagram private repositories

You can simply click on &quot;Private Repos&quot; in the header and follow the instructions by providing a GitHub personal access token with the `repo` scope.

You can also self-host this app locally (backend separated as well!) with the steps below.

## 🛠️ Self-hosting / Local Development

1. Clone the repository

```bash
git clone https://github.com/ahmedkhaleel2004/gitdiagram.git
cd gitdiagram
```

2. Install dependencies

```bash
pnpm i
```

3. Set up environment variables (create .env)

```bash
cp .env.example .env
```

Then edit the `.env` file with your Anthropic API key and optional GitHub personal access token.

4. Run backend

```bash
docker-compose up --build -d
```

Logs available at `docker-compose logs -f`
The FastAPI server will be available at `localhost:8000`

5. Start local database

```bash
chmod +x start-database.sh
./start-database.sh
```

When prompted to generate a random password, input yes.
The Postgres database will start in a container at `localhost:5432`

6. Initialize the database schema

```bash
pnpm db:push
```

You can view and interact with the database using `pnpm db:studio`

7. Run Frontend

```bash
pnpm dev
```

You can now access the website at `localhost:3000` and edit the rate limits defined in `backend/app/routers/generate.py` in the generate function decorator.

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

## Acknowledgements

Shoutout to [Romain Courtois](https://github.com/cyclotruc)&#039;s [Gitingest](https://gitingest.com/) for inspiration and styling

## 📈 Rate Limits

I am currently hosting it for free with no rate limits though this is somewhat likely to change in the future.

&lt;!-- If you would like to bypass these, self-hosting instructions are provided. I also plan on adding an input for your own Anthropic API key.

Diagram generation:

- 1 request per minute
- 5 requests per day --&gt;

## 🤔 Future Steps

- Implement font-awesome icons in diagram
- Implement an embedded feature like star-history.com but for diagrams. The diagram could also be updated progressively as commits are made.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[voideditor/void]]></title>
            <link>https://github.com/voideditor/void</link>
            <guid>https://github.com/voideditor/void</guid>
            <pubDate>Tue, 13 May 2025 00:05:00 GMT</pubDate>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/voideditor/void">voideditor/void</a></h1>
            <p></p>
            <p>Language: TypeScript</p>
            <p>Stars: 17,891</p>
            <p>Forks: 1,052</p>
            <p>Stars today: 933 stars today</p>
            <h2>README</h2><pre># Welcome to Void.

&lt;div align=&quot;center&quot;&gt;
	&lt;img
		src=&quot;./src/vs/workbench/browser/parts/editor/media/slice_of_void.png&quot;
	 	alt=&quot;Void Welcome&quot;
		width=&quot;300&quot;
	 	height=&quot;300&quot;
	/&gt;
&lt;/div&gt;

Void is the open-source Cursor alternative.

Use AI agents on your codebase, checkpoint and visualize changes, and bring any model or host locally. Void sends messages directly to providers without retaining your data.

This repo contains the full sourcecode for Void. If you&#039;re new, welcome!

- 🧭 [Website](https://voideditor.com)

- 👋 [Discord](https://discord.gg/RSNjgaugJs)

- 🚙 [Project Board](https://github.com/orgs/voideditor/projects/2)


## Contributing

1. To get started working on Void, check out our Project Board! You can also see [HOW_TO_CONTRIBUTE](https://github.com/voideditor/void/blob/main/HOW_TO_CONTRIBUTE.md).

2. Feel free to attend a casual weekly meeting in our Discord channel!


## Reference

Void is a fork of the [vscode](https://github.com/microsoft/vscode) repository. For a guide to the codebase, see [VOID_CODEBASE_GUIDE](https://github.com/voideditor/void/blob/main/VOID_CODEBASE_GUIDE.md).

## Support
You can always reach us in our Discord server or contact us via email: hello@voideditor.com.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[unnoq/orpc]]></title>
            <link>https://github.com/unnoq/orpc</link>
            <guid>https://github.com/unnoq/orpc</guid>
            <pubDate>Tue, 13 May 2025 00:04:59 GMT</pubDate>
            <description><![CDATA[Typesafe APIs Made Simple 🪄]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/unnoq/orpc">unnoq/orpc</a></h1>
            <p>Typesafe APIs Made Simple 🪄</p>
            <p>Language: TypeScript</p>
            <p>Stars: 1,707</p>
            <p>Forks: 30</p>
            <p>Stars today: 61 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;image align=&quot;center&quot; src=&quot;https://orpc.unnoq.com/logo.webp&quot; width=280 alt=&quot;oRPC logo&quot; /&gt;
&lt;/div&gt;

&lt;h1&gt;&lt;/h1&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://codecov.io/gh/unnoq/orpc&quot;&gt;
    &lt;img alt=&quot;codecov&quot; src=&quot;https://codecov.io/gh/unnoq/orpc/branch/main/graph/badge.svg&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@orpc/client&quot;&gt;
    &lt;img alt=&quot;weekly downloads&quot; src=&quot;https://img.shields.io/npm/dw/%40orpc%2Fclient?logo=npm&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/unnoq/orpc/blob/main/LICENSE&quot;&gt;
    &lt;img alt=&quot;MIT License&quot; src=&quot;https://img.shields.io/github/license/unnoq/orpc?logo=open-source-initiative&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/TXEbwRBvQn&quot;&gt;
    &lt;img alt=&quot;Discord&quot; src=&quot;https://img.shields.io/discord/1308966753044398161?color=7389D8&amp;label&amp;logo=discord&amp;logoColor=ffffff&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;h3 align=&quot;center&quot;&gt;Typesafe APIs Made Simple 🪄&lt;/h3&gt;

**oRPC is a powerful combination of RPC and OpenAPI**, makes it easy to build APIs that are end-to-end type-safe and adhere to OpenAPI standards

---

## Highlights

- **🔗 End-to-End Type Safety**: Ensure type-safe inputs, outputs, and errors from client to server.
- **📘 First-Class OpenAPI**: Built-in support that fully adheres to the OpenAPI standard.
- **📝 Contract-First Development**: Optionally define your API contract before implementation.
- **⚙️ Framework Integrations**: Seamlessly integrate with TanStack Query (React, Vue, Solid, Svelte), Pinia Colada, and more.
- **🚀 Server Actions**: Fully compatible with React Server Actions on Next.js, TanStack Start, and other platforms.
- **🔠 Standard Schema Support**: Works out of the box with Zod, Valibot, ArkType, and other schema validators.
- **🗃️ Native Types**: Supports native types like Date, File, Blob, BigInt, URL, and more.
- **⏱️ Lazy Router**: Enhance cold start times with our lazy routing feature.
- **📡 SSE &amp; Streaming**: Enjoy full type-safe support for SSE and streaming.
- **🌍 Multi-Runtime Support**: Fast and lightweight on Cloudflare, Deno, Bun, Node.js, and beyond.
- **🔌 Extendability**: Easily extend functionality with plugins, middleware, and interceptors.
- **🛡️ Reliability**: Well-tested, TypeScript-based, production-ready, and MIT licensed.

## Documentation

You can find the full documentation [here](https://orpc.unnoq.com).

## Packages

- [@orpc/contract](https://www.npmjs.com/package/@orpc/contract): Build your API contract.
- [@orpc/server](https://www.npmjs.com/package/@orpc/server): Build your API or implement API contract.
- [@orpc/client](https://www.npmjs.com/package/@orpc/client): Consume your API on the client with type-safety.
- [@orpc/nest](https://www.npmjs.com/package/@orpc/nest): Deeply integrate oRPC with NestJS.
- [@orpc/react](https://www.npmjs.com/package/@orpc/react): Utilities for integrating oRPC with React and React Server Actions.
- [@orpc/react-query](https://www.npmjs.com/package/@orpc/react-query): Integration with [React Query](https://tanstack.com/query/latest/docs/framework/react/overview).
- [@orpc/vue-query](https://www.npmjs.com/package/@orpc/vue-query): Integration with [Vue Query](https://tanstack.com/query/latest/docs/framework/vue/overview).
- [@orpc/solid-query](https://www.npmjs.com/package/@orpc/solid-query): Integration with [Solid Query](https://tanstack.com/query/latest/docs/framework/solid/overview).
- [@orpc/svelte-query](https://www.npmjs.com/package/@orpc/svelte-query): Integration with [Svelte Query](https://tanstack.com/query/latest/docs/framework/svelte/overview).
- [@orpc/vue-colada](https://www.npmjs.com/package/@orpc/vue-colada): Integration with [Pinia Colada](https://pinia-colada.esm.dev/).
- [@orpc/openapi](https://www.npmjs.com/package/@orpc/openapi): Generate OpenAPI specs and handle OpenAPI requests.
- [@orpc/zod](https://www.npmjs.com/package/@orpc/zod): More schemas that [Zod](https://zod.dev/) doesn&#039;t support yet.
- [@orpc/valibot](https://www.npmjs.com/package/@orpc/valibot): OpenAPI spec generation from [Valibot](https://valibot.dev/).
- [@orpc/arktype](https://www.npmjs.com/package/@orpc/arktype): OpenAPI spec generation from [ArkType](https://arktype.io/).

## Overview

This is a quick overview of how to use oRPC. For more details, please refer to the [documentation](https://orpc.unnoq.com).

1. **Define your router:**

   ```ts
   import type { IncomingHttpHeaders } from &#039;node:http&#039;
   import { ORPCError, os } from &#039;@orpc/server&#039;
   import { z } from &#039;zod&#039;

   const PlanetSchema = z.object({
     id: z.number().int().min(1),
     name: z.string(),
     description: z.string().optional(),
   })

   export const listPlanet = os
     .input(
       z.object({
         limit: z.number().int().min(1).max(100).optional(),
         cursor: z.number().int().min(0).default(0),
       }),
     )
     .handler(async ({ input }) =&gt; {
       // your list code here
       return [{ id: 1, name: &#039;name&#039; }]
     })

   export const findPlanet = os
     .input(PlanetSchema.pick({ id: true }))
     .handler(async ({ input }) =&gt; {
       // your find code here
       return { id: 1, name: &#039;name&#039; }
     })

   export const createPlanet = os
     .$context&lt;{ headers: IncomingHttpHeaders }&gt;()
     .use(({ context, next }) =&gt; {
       const user = parseJWT(context.headers.authorization?.split(&#039; &#039;)[1])

       if (user) {
         return next({ context: { user } })
       }

       throw new ORPCError(&#039;UNAUTHORIZED&#039;)
     })
     .input(PlanetSchema.omit({ id: true }))
     .handler(async ({ input, context }) =&gt; {
       // your create code here
       return { id: 1, name: &#039;name&#039; }
     })

   export const router = {
     planet: {
       list: listPlanet,
       find: findPlanet,
       create: createPlanet
     }
   }
   ```

2. **Create your server:**

   ```ts
   import { createServer } from &#039;node:http&#039;
   import { RPCHandler } from &#039;@orpc/server/node&#039;
   import { CORSPlugin } from &#039;@orpc/server/plugins&#039;

   const handler = new RPCHandler(router, {
     plugins: [new CORSPlugin()]
   })

   const server = createServer(async (req, res) =&gt; {
     const result = await handler.handle(req, res, {
       context: { headers: req.headers }
     })

     if (!result.matched) {
       res.statusCode = 404
       res.end(&#039;No procedure matched&#039;)
     }
   })

   server.listen(
     3000,
     &#039;127.0.0.1&#039;,
     () =&gt; console.log(&#039;Listening on 127.0.0.1:3000&#039;)
   )
   ```

3. **Create your client:**

   ```ts
   import type { RouterClient } from &#039;@orpc/server&#039;
   import { createORPCClient } from &#039;@orpc/client&#039;
   import { RPCLink } from &#039;@orpc/client/fetch&#039;

   const link = new RPCLink({
     url: &#039;http://127.0.0.1:3000&#039;,
     headers: { Authorization: &#039;Bearer token&#039; },
   })

   export const orpc: RouterClient&lt;typeof router&gt; = createORPCClient(link)
   ```

4. **Consume your API:**

   ```ts
   import { orpc } from &#039;./client&#039;

   const planets = await orpc.planet.list({ limit: 10 })
   ```

5. **Generate OpenAPI Spec:**

   ```ts
   import { OpenAPIGenerator } from &#039;@orpc/openapi&#039;
   import { ZodToJsonSchemaConverter } from &#039;@orpc/zod&#039;

   const generator = new OpenAPIGenerator({
     schemaConverters: [new ZodToJsonSchemaConverter()]
   })

   const spec = await generator.generate(router, {
     info: {
       title: &#039;Planet API&#039;,
       version: &#039;1.0.0&#039;
     }
   })

   console.log(spec)
   ```

## Sponsors

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://cdn.jsdelivr.net/gh/unnoq/unnoq/sponsors.svg&quot;&gt;
    &lt;img src=&#039;https://cdn.jsdelivr.net/gh/unnoq/unnoq/sponsors.svg&#039;/&gt;
  &lt;/a&gt;
&lt;/p&gt;

## References

oRPC is inspired by existing solutions that prioritize type safety and developer experience. Special acknowledgments to:

- [tRPC](https://trpc.io): For pioneering the concept of end-to-end type-safe RPC and influencing the development of type-safe APIs.
- [ts-rest](https://ts-rest.com): For its emphasis on contract-first development and OpenAPI integration, which have greatly inspired oRPC’s feature set.

## License

Distributed under the MIT License. See [LICENSE](https://github.com/unnoq/orpc/blob/main/LICENSE) for more information.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[hydralauncher/hydra]]></title>
            <link>https://github.com/hydralauncher/hydra</link>
            <guid>https://github.com/hydralauncher/hydra</guid>
            <pubDate>Tue, 13 May 2025 00:04:58 GMT</pubDate>
            <description><![CDATA[Hydra Launcher is an open-source gaming platform created to be the single tool that you need]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/hydralauncher/hydra">hydralauncher/hydra</a></h1>
            <p>Hydra Launcher is an open-source gaming platform created to be the single tool that you need</p>
            <p>Language: TypeScript</p>
            <p>Stars: 13,388</p>
            <p>Forks: 3,712</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

[&lt;img src=&quot;./resources/icon.png&quot; width=&quot;144&quot;/&gt;](https://help.hydralauncher.gg)

  &lt;h1 align=&quot;center&quot;&gt;Hydra Launcher&lt;/h1&gt;

  &lt;p align=&quot;center&quot;&gt;
    &lt;strong&gt;Hydra Launcher is an open-source gaming platform created to be the single tool that you need in order to manage your gaming library. Hydra is written in Node.js (Electron, React, Typescript) and Python.&lt;/strong&gt;
  &lt;/p&gt;

[![build](https://img.shields.io/github/actions/workflow/status/hydralauncher/hydra/build.yml)](https://github.com/hydralauncher/hydra/actions)
[![release](https://img.shields.io/github/package-json/v/hydralauncher/hydra)](https://github.com/hydralauncher/hydra/releases)

![Hydra Launcher Home Page](./docs/screenshot.png)

&lt;/div&gt;

## Features

- Add games that you own to your library
- Have a nice profile that shows what you are playing to your friends
- Save your game progress in the cloud with Hydra Cloud
- Unlock achievements
- Navigate through a rich catalogue with a powerful suggestion algorithm
- Discover new games that you haven&#039;t played before

## Build from source and contributing

Please, refer to our Documentation pages: [docs.hydralauncher.gg](https://docs.hydralauncher.gg/getting-started)

## Contributors

&lt;a href=&quot;https://github.com/hydralauncher/hydra/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=hydralauncher/hydra&quot; /&gt;
&lt;/a&gt;

## License

Hydra is licensed under the [MIT License](LICENSE).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Effect-TS/effect]]></title>
            <link>https://github.com/Effect-TS/effect</link>
            <guid>https://github.com/Effect-TS/effect</guid>
            <pubDate>Tue, 13 May 2025 00:04:57 GMT</pubDate>
            <description><![CDATA[Build production-ready applications in TypeScript]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Effect-TS/effect">Effect-TS/effect</a></h1>
            <p>Build production-ready applications in TypeScript</p>
            <p>Language: TypeScript</p>
            <p>Stars: 9,025</p>
            <p>Forks: 306</p>
            <p>Stars today: 15 stars today</p>
            <h2>README</h2><pre># Effect Monorepo

&gt; An ecosystem of tools to build robust applications in TypeScript

## Introduction

Welcome to Effect, a powerful TypeScript framework that provides a fully-fledged functional effect system with a rich standard library.

Effect consists of several packages that work together to help build robust TypeScript applications. The core package, `effect`, serves as the foundation of the framework, offering primitives for managing side effects, ensuring type safety, and supporting concurrency.

## Monorepo Structure

The Effect monorepo is organized into multiple packages, each extending the core functionality. Below is an overview of the packages included:

| Package                           | Description                                                                                 |                                                                                                    |
| --------------------------------- | ------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------- |
| `effect`                          | Core package                                                                                | [README](https://github.com/Effect-TS/effect/blob/main/packages/effect/README.md)                  |
| `@effect/ai`                      | AI utilities                                                                                | [README](https://github.com/Effect-TS/effect/blob/main/packages/ai/ai/README.md)                   |
| `@effect/ai-openai`               | OpenAI utilities                                                                            | [README](https://github.com/Effect-TS/effect/blob/main/packages/ai/openai/README.md)               |
| `@effect/ai-anthropic`            | Anthropic utilities                                                                         | [README](https://github.com/Effect-TS/effect/blob/main/packages/ai/anthropic/README.md)            |
| `@effect/cli`                     | CLI utilities                                                                               | [README](https://github.com/Effect-TS/effect/blob/main/packages/cli/README.md)                     |
| `@effect/cluster`                 | Distributed computing tools                                                                 | [README](https://github.com/Effect-TS/effect/blob/main/packages/cluster/README.md)                 |
| `@effect/cluster-browser`         | Cluster utilities for the browser                                                           | [README](https://github.com/Effect-TS/effect/blob/main/packages/cluster-browser/README.md)         |
| `@effect/cluster-node`            | Cluster utilities for [Node.js](https://nodejs.org)                                         | [README](https://github.com/Effect-TS/effect/blob/main/packages/cluster-node/README.md)            |
| `@effect/cluster-workflow`        | Workflow management for clusters                                                            | [README](https://github.com/Effect-TS/effect/blob/main/packages/cluster-worflow/README.md)         |
| `@effect/experimental`            | Experimental features and APIs                                                              | [README](https://github.com/Effect-TS/effect/blob/main/packages/experimental/README.md)            |
| `@effect/opentelemetry`           | [OpenTelemetry](https://opentelemetry.io/) integration                                      | [README](https://github.com/Effect-TS/effect/blob/main/packages/opentelemetry/README.md)           |
| `@effect/platform`                | Cross-platform runtime utilities                                                            | [README](https://github.com/Effect-TS/effect/blob/main/packages/platform/README.md)                |
| `@effect/platform-browser`        | Platform utilities for the browser                                                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/platform-browser/README.md)        |
| `@effect/platform-bun`            | Platform utilities for [Bun](https://bun.sh/)                                               | [README](https://github.com/Effect-TS/effect/blob/main/packages/platform-bun/README.md)            |
| `@effect/platform-node`           | Platform utilities for [Node.js](https://nodejs.org)                                        | [README](https://github.com/Effect-TS/effect/blob/main/packages/platform-node/README.md)           |
| `@effect/platform-node-shared`    | Shared utilities for [Node.js](https://nodejs.org)                                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/platform-node-shared/README.md)    |
| `@effect/printer`                 | General-purpose printing utilities                                                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/printer/README.md)                 |
| `@effect/printer-ansi`            | ANSI-compatible printing utilities                                                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/printer-ansi/README.md)            |
| `@effect/rpc`                     | Remote procedure call (RPC) utilities                                                       | [README](https://github.com/Effect-TS/effect/blob/main/packages/rpc/README.md)                     |
| `@effect/rpc-http`                | HTTP-based RPC utilities                                                                    | [README](https://github.com/Effect-TS/effect/blob/main/packages/rpc-http/README.md)                |
| `@effect/sql`                     | SQL database utilities                                                                      | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql/README.md)                     |
| `@effect/sql-clickhouse`          | An `@effect/sql` implementation for [ClickHouse](https://clickhouse.com/).                  | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-clickhouse/README.md)          |
| `@effect/sql-d1`                  | An `@effect/sql` implementation for [Cloudflare D1](https://developers.cloudflare.com/d1/). | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-d1/README.md)                  |
| `@effect/sql-drizzle`             | An `@effect/sql` implementation for [Drizzle](https://orm.drizzle.team/).                   | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-drizzle/README.md)             |
| `@effect/sql-kysely`              | An `@effect/sql` implementation for [Kysely](https://kysely.dev/).                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-kysely/README.md)              |
| `@effect/sql-libsql`              | An `@effect/sql` implementation using the `@libsql/client` library.                         | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-libsql/README.md)              |
| `@effect/sql-mssql`               | An `@effect/sql` implementation using the mssql `tedious` library.                          | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-mssql/README.md)               |
| `@effect/sql-mysql2`              | An `@effect/sql` implementation using the `mysql2` library.                                 | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-mysql2/README.md)              |
| `@effect/sql-pg`                  | An `@effect/sql` implementation using the `postgres.js` library.                            | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-pg/README.md)                  |
| `@effect/sql-sqlite-bun`          | An `@effect/sql` implementation using the `bun:sqlite` library.                             | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-sqlite-bun/README.md)          |
| `@effect/sql-sqlite-do`           | An `@effect/sql` implementation for Cloudflare Durable Objects sqlite storage.              | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-sqlite-do/README.md)           |
| `@effect/sql-sqlite-node`         | An `@effect/sql` implementation using the `better-sqlite3` library.                         | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-sqlite-node/README.md)         |
| `@effect/sql-sqlite-react-native` | An `@effect/sql` implementation using the `react-native-quick-sqlite` library.              | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-sqlite-react-native/README.md) |
| `@effect/sql-sqlite-wasm`         | An `@effect/sql` implementation using the `@sqlite.org/sqlite-wasm` library.                | [README](https://github.com/Effect-TS/effect/blob/main/packages/sql-sqlite-wasm/README.md)         |
| `@effect/typeclass`               | Functional programming type classes                                                         | [README](https://github.com/Effect-TS/effect/blob/main/packages/typeclass/README.md)               |
| `@effect/vitest`                  | Testing utilities for [Vitest](https://vitest.dev/)                                         | [README](https://github.com/Effect-TS/effect/blob/main/packages/vitest/README.md)                  |

# Documentation

## Website

For detailed information and usage examples, visit the [Effect website](https://www.effect.website/).

## API Reference

For a complete API reference of the core package `effect`, see the [Effect API documentation](https://effect-ts.github.io/effect/).

## Introduction to Effect

Get started with Effect by watching our introductory video on YouTube. This video provides an overview of Effect and its key features:

[![Introduction to Effect](https://img.youtube.com/vi/ViSiXfBKElQ/maxresdefault.jpg)](https://youtu.be/ViSiXfBKElQ)

# Connect with Our Community

Join the Effect community on Discord to connect with other developers, ask questions, and share insights: [Join Effect&#039;s Discord Community](https://discord.gg/hdt7t7jpvn).

# Contributing via Pull Requests

We welcome contributions via pull requests! Here are some guidelines to help you get started:

## Setting Up Your Environment

Begin by forking the repository and clone it to your local machine.

Navigate into the cloned repository and create a new branch for your changes:

```bash
git checkout -b my-branch
```

Ensure all required dependencies are installed by running:

```bash
pnpm install  # Requires pnpm version 10.4.0
```

## Making Changes

### Implement Your Changes

Make the changes you propose to the codebase. If your changes impact functionality, please **add corresponding tests** to validate your updates.

### Validate Your Changes

Run the following commands to ensure your changes do not introduce any issues:

- `pnpm codegen` (optional): Re-generate the package entrypoints in case you have changed the structure of a package or introduced a new module.
- `pnpm check`: Confirm that the code compiles without errors.
- `pnpm test`: Execute all unit tests to ensure your changes haven&#039;t broken existing functionality.
- `pnpm circular`: Check for any circular dependencies in imports.
- `pnpm lint`: Ensure the code adheres to our coding standards.
  - If you encounter style issues, use `pnpm lint-fix` to automatically correct some of these.
- `pnpm test-types`: Run type-level tests. Tests are written using [tstyche](https://tstyche.org/).
- `pnpm docgen`: Ensure the documentation generates correctly and reflects any changes made.

### Document Your Changes

#### JSDoc Comments

When adding a new feature, it&#039;s important to document your code using JSDoc comments. This helps other developers understand the purpose and usage of your changes. Include at least the following in your JSDoc comments:

- **A Short Description**: Summarize the purpose and functionality of the feature.
- **Example**: Provide a usage example under the `@example` tag to demonstrate how to use the feature.
- **Since Version**: Use the `@since` tag to indicate the version in which the feature was introduced. If you&#039;re unsure about the version, please consult with a project maintainer.
- **Category (Optional)**: You can categorize the feature with the `@category` tag to help organize the documentation. If you&#039;re unsure about what category to assign, ask a project maintainer.

**Note**: A HTML utility file, [`code2jsdoc-example.html`](/scripts/jsdocs/code2jsdoc-example.html), has been added to assist with creating JSDoc `@example` comments. This web-based interface includes two text areas:

1. An input textarea for pasting example code.
2. An output textarea that dynamically generates formatted JSDoc `@example` comments.

This utility helps ensure consistent formatting and streamlines the process of documenting examples. See the following example of its usage:

Example Input:

```ts
import { Effect } from &quot;effect&quot;

console.log(Effect.runSyncExit(Effect.succeed(1)))
/*
Output:
{
  _id: &quot;Exit&quot;,
  _tag: &quot;Success&quot;,
  value: 1
}
*/
```

Output:

````
*
* @example
* ```ts
* import { Effect } from &quot;effect&quot;
*
* console.log(Effect.runSyncExit(Effect.succeed(1)))
* // Output:
* // {
* //   _id: &quot;Exit&quot;,
* //   _tag: &quot;Success&quot;,
* //   value: 1
* // }
* ```
*
````

By using this utility, you can save time and maintain consistency in your JSDoc comments, especially for complex examples.

#### Changeset Documentation

Before committing your changes, document them with a changeset. This process helps in tracking modifications and effectively communicating them to the project team and users:

```bash
pnpm changeset
```

During the changeset creation process, you will be prompted to select the appropriate level for your changes:

- **patch**: Opt for this if you are making small fixes or minor changes that do not affect the library&#039;s overall functionality.
- **minor**: Choose this for new features that enhance functionality but do not disrupt existing features.
- **major**: Select this for any changes that result in backward-incompatible modifications to the library.

## Finalizing Your Contribution

### Commit Your Changes

Once you have documented your changes with a changeset, it’s time to commit them to the repository. Use a clear and descriptive commit message, which could be the same message you used in your changeset:

```bash
git commit -am &#039;Add some feature&#039;
```

#### Linking to Issues

If your commit addresses an open issue, reference the issue number directly in your commit message. This helps to link your contribution clearly to specific tasks or bug reports. Additionally, if your commit resolves the issue, you can indicate this by adding a phrase like `&quot;, closes #&lt;issue-number&gt;&quot;`. For example:

```bash
git commit -am &#039;Add some feature, closes #123&#039;
```

This practice not only helps in tracking the progress of issues but also automatically closes the issue when the commit is merged, streamlining project management.

### Push to Your Fork

Push the changes up to your GitHub fork:

```bash
git push origin my-branch
```

### Create a Pull Request

Open a pull request against the appropriate branch on the original repository:

- `main` branch: For minor patches or bug fixes.
- `next-minor` branch: For new features that are non-breaking.
- `next-major` branch: For changes that introduce breaking modifications.

Please be patient! We will do our best to review your pull request as soon as possible.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[balena-io/etcher]]></title>
            <link>https://github.com/balena-io/etcher</link>
            <guid>https://github.com/balena-io/etcher</guid>
            <pubDate>Tue, 13 May 2025 00:04:56 GMT</pubDate>
            <description><![CDATA[Flash OS images to SD cards & USB drives, safely and easily.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/balena-io/etcher">balena-io/etcher</a></h1>
            <p>Flash OS images to SD cards & USB drives, safely and easily.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 31,304</p>
            <p>Forks: 2,214</p>
            <p>Stars today: 22 stars today</p>
            <h2>README</h2><pre># Etcher

&gt; Flash OS images to SD cards &amp; USB drives, safely and easily.

Etcher is a powerful OS image flasher built with web technologies to ensure
flashing an SDCard or USB drive is a pleasant and safe experience. It protects
you from accidentally writing to your hard-drives, ensures every byte of data
was written correctly, and much more. It can also directly flash Raspberry Pi devices that support [USB device boot mode](https://www.raspberrypi.com/documentation/computers/raspberry-pi.html#usb-device-boot-mode).

[![Current Release](https://img.shields.io/github/release/balena-io/etcher.svg?style=flat-square)](https://balena.io/etcher)
[![License](https://img.shields.io/github/license/balena-io/etcher.svg?style=flat-square)](https://github.com/balena-io/etcher/blob/master/LICENSE)
[![Balena.io Forums](https://img.shields.io/discourse/https/forums.balena.io/topics.svg?style=flat-square&amp;label=balena.io%20forums)](https://forums.balena.io/c/etcher)

---

[**Download**][etcher] | [**Support**][support] | [**Documentation**][user-documentation] | [**Contributing**][contributing] | [**Roadmap**][milestones]

## Supported Operating Systems

- Linux; most distros; Intel 64-bit.
- Windows 10 and later; Intel 64-bit.
- macOS 10.13 (High Sierra) and later; both Intel and Apple Silicon.

## Installers

Refer to the [downloads page][etcher] for the latest pre-made
installers for all supported operating systems.

## Packages

#### Debian and Ubuntu based Package Repository (GNU/Linux x86/x64)

Package for Debian and Ubuntu can be downloaded from the [Github release page](https://github.com/balena-io/etcher/releases/)

##### Install .deb file using apt

   ```sh
      sudo apt install ./balena-etcher_******_amd64.deb
   ```

##### Uninstall

   ```sh
      sudo apt remove balena-etcher
   ```

#### Redhat (RHEL) and Fedora-based Package Repository (GNU/Linux x86/x64)

##### Yum

Package for Fedora-based and Redhat can be downloaded from the [Github release page](https://github.com/balena-io/etcher/releases/)

1. Install using yum

```sh
   sudo yum localinstall balena-etcher-***.x86_64.rpm
```

#### Arch/Manjaro Linux (GNU/Linux x64)

Etcher is offered through the Arch User Repository and can be installed on both Manjaro and Arch systems. You can compile it from the source code in this repository using [`balena-etcher`](https://aur.archlinux.org/packages/balena-etcher/). The following example uses a common AUR helper to install the latest release:

```sh
yay -S balena-etcher
```

##### Uninstall

```sh
yay -R balena-etcher
```

#### WinGet (Windows)

This package is updated by [gh-action](https://github.com/vedantmgoyal2009/winget-releaser), and is kept up to date automatically.

```sh
winget install balenaEtcher #or Balena.Etcher
```

##### Uninstall

```sh
winget uninstall balenaEtcher
```

#### Chocolatey (Windows)

This package is maintained by [@majkinetor](https://github.com/majkinetor), and
is kept up to date automatically.

```sh
choco install etcher
```

##### Uninstall

```sh
choco uninstall etcher
```

## Support

If you&#039;re having any problem, please [raise an issue][newissue] on GitHub, and
the balena.io team will be happy to help.

## License

Etcher is free software and may be redistributed under the terms specified in
the [license].

[etcher]: https://balena.io/etcher
[electron]: https://electronjs.org/
[electron-supported-platforms]: https://electronjs.org/docs/tutorial/support#supported-platforms
[support]: https://github.com/balena-io/etcher/blob/master/docs/SUPPORT.md
[contributing]: https://github.com/balena-io/etcher/blob/master/docs/CONTRIBUTING.md
[user-documentation]: https://github.com/balena-io/etcher/blob/master/docs/USER-DOCUMENTATION.md
[milestones]: https://github.com/balena-io/etcher/milestones
[newissue]: https://github.com/balena-io/etcher/issues/new
[license]: https://github.com/balena-io/etcher/blob/master/LICENSE
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[immich-app/immich]]></title>
            <link>https://github.com/immich-app/immich</link>
            <guid>https://github.com/immich-app/immich</guid>
            <pubDate>Tue, 13 May 2025 00:04:55 GMT</pubDate>
            <description><![CDATA[High performance self-hosted photo and video management solution.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/immich-app/immich">immich-app/immich</a></h1>
            <p>High performance self-hosted photo and video management solution.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 65,710</p>
            <p>Forks: 3,459</p>
            <p>Stars today: 81 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt; 
  &lt;br/&gt;
  &lt;a href=&quot;https://opensource.org/license/agpl-v3&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-AGPL_v3-blue.svg?color=3F51B5&amp;style=for-the-badge&amp;label=License&amp;logoColor=000000&amp;labelColor=ececec&quot; alt=&quot;License: AGPLv3&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://discord.immich.app&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/discord/979116623879368755.svg?label=Discord&amp;logo=Discord&amp;style=for-the-badge&amp;logoColor=000000&amp;labelColor=ececec&quot; alt=&quot;Discord&quot;/&gt;
  &lt;/a&gt;
  &lt;br/&gt;
  &lt;br/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;design/immich-logo-stacked-light.svg&quot; width=&quot;300&quot; title=&quot;Login With Custom URL&quot;&gt;
&lt;/p&gt;
&lt;h3 align=&quot;center&quot;&gt;High performance self-hosted photo and video management solution&lt;/h3&gt;
&lt;br/&gt;
&lt;a href=&quot;https://immich.app&quot;&gt;
&lt;img src=&quot;design/immich-screenshots.png&quot; title=&quot;Main Screenshot&quot;&gt;
&lt;/a&gt;
&lt;br/&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;readme_i18n/README_ca_ES.md&quot;&gt;Català&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_es_ES.md&quot;&gt;Español&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_fr_FR.md&quot;&gt;Français&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_it_IT.md&quot;&gt;Italiano&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_ja_JP.md&quot;&gt;日本語&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_ko_KR.md&quot;&gt;한국어&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_de_DE.md&quot;&gt;Deutsch&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_nl_NL.md&quot;&gt;Nederlands&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_tr_TR.md&quot;&gt;Türkçe&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_zh_CN.md&quot;&gt;中文&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_uk_UA.md&quot;&gt;Українська&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_ru_RU.md&quot;&gt;Русский&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_pt_BR.md&quot;&gt;Português Brasileiro&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_sv_SE.md&quot;&gt;Svenska&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_ar_JO.md&quot;&gt;العربية&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_vi_VN.md&quot;&gt;Tiếng Việt&lt;/a&gt;
  &lt;a href=&quot;readme_i18n/README_th_TH.md&quot;&gt;ภาษาไทย&lt;/a&gt;
&lt;/p&gt;

## Disclaimer

- ⚠️ The project is under **very active** development.
- ⚠️ Expect bugs and breaking changes.
- ⚠️ **Do not use the app as the only way to store your photos and videos.**
- ⚠️ Always follow [3-2-1](https://www.backblaze.com/blog/the-3-2-1-backup-strategy/) backup plan for your precious photos and videos!

&gt; [!NOTE]
&gt; You can find the main documentation, including installation guides, at https://immich.app/.

## Links

- [Documentation](https://immich.app/docs)
- [About](https://immich.app/docs/overview/introduction)
- [Installation](https://immich.app/docs/install/requirements)
- [Roadmap](https://immich.app/roadmap)
- [Demo](#demo)
- [Features](#features)
- [Translations](https://immich.app/docs/developer/translations)
- [Contributing](https://immich.app/docs/overview/support-the-project)

## Demo

Access the demo [here](https://demo.immich.app). For the mobile app, you can use `https://demo.immich.app` for the `Server Endpoint URL`.

### Login credentials

| Email           | Password |
| --------------- | -------- |
| demo@immich.app | demo     |

## Features

| Features                                     | Mobile | Web |
| :------------------------------------------- | ------ | --- |
| Upload and view videos and photos            | Yes    | Yes |
| Auto backup when the app is opened           | Yes    | N/A |
| Prevent duplication of assets                | Yes    | Yes |
| Selective album(s) for backup                | Yes    | N/A |
| Download photos and videos to local device   | Yes    | Yes |
| Multi-user support                           | Yes    | Yes |
| Album and Shared albums                      | Yes    | Yes |
| Scrubbable/draggable scrollbar               | Yes    | Yes |
| Support raw formats                          | Yes    | Yes |
| Metadata view (EXIF, map)                    | Yes    | Yes |
| Search by metadata, objects, faces, and CLIP | Yes    | Yes |
| Administrative functions (user management)   | No     | Yes |
| Background backup                            | Yes    | N/A |
| Virtual scroll                               | Yes    | Yes |
| OAuth support                                | Yes    | Yes |
| API Keys                                     | N/A    | Yes |
| LivePhoto/MotionPhoto backup and playback    | Yes    | Yes |
| Support 360 degree image display             | No     | Yes |
| User-defined storage structure               | Yes    | Yes |
| Public Sharing                               | Yes    | Yes |
| Archive and Favorites                        | Yes    | Yes |
| Global Map                                   | Yes    | Yes |
| Partner Sharing                              | Yes    | Yes |
| Facial recognition and clustering            | Yes    | Yes |
| Memories (x years ago)                       | Yes    | Yes |
| Offline support                              | Yes    | No  |
| Read-only gallery                            | Yes    | Yes |
| Stacked Photos                               | Yes    | Yes |
| Tags                                         | No     | Yes |
| Folder View                                  | Yes    | Yes |

## Translations

Read more about translations [here](https://immich.app/docs/developer/translations).

&lt;a href=&quot;https://hosted.weblate.org/engage/immich/&quot;&gt;
&lt;img src=&quot;https://hosted.weblate.org/widget/immich/immich/multi-auto.svg&quot; alt=&quot;Translation status&quot; /&gt;
&lt;/a&gt;

## Repository activity

![Activities](https://repobeats.axiom.co/api/embed/9e86d9dc3ddd137161f2f6d2e758d7863b1789cb.svg &quot;Repobeats analytics image&quot;)

## Star history

&lt;a href=&quot;https://star-history.com/#immich-app/immich&amp;Date&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=immich-app/immich&amp;type=Date&amp;theme=dark&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=immich-app/immich&amp;type=Date&quot; /&gt;
   &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=immich-app/immich&amp;type=Date&quot; width=&quot;100%&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;

## Contributors

&lt;a href=&quot;https://github.com/alextran1502/immich/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=immich-app/immich&quot; width=&quot;100%&quot;/&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[transformerlab/transformerlab-app]]></title>
            <link>https://github.com/transformerlab/transformerlab-app</link>
            <guid>https://github.com/transformerlab/transformerlab-app</guid>
            <pubDate>Tue, 13 May 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[Open Source Application for Advanced LLM Engineering: interact, train, fine-tune, and evaluate large language models on your own computer.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/transformerlab/transformerlab-app">transformerlab/transformerlab-app</a></h1>
            <p>Open Source Application for Advanced LLM Engineering: interact, train, fine-tune, and evaluate large language models on your own computer.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,247</p>
            <p>Forks: 264</p>
            <p>Stars today: 45 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://transformerlab.ai&quot;&gt;&lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/transformerlab/transformerlab-app/refs/heads/main/assets/Transformer-Lab_Logo_Reverse.svg&quot;&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/transformerlab/transformerlab-app/refs/heads/main/assets/Transformer-Lab_Logo.svg&quot;&gt;
    &lt;img alt=&quot;transformer lab logo&quot; src=&quot;https://raw.githubusercontent.com/transformerlab/transformerlab-app/refs/heads/main/assets/Transformer-Lab_Logo.svg&quot; style=&quot;max-width: 650px&quot;&gt;
  &lt;/picture&gt;&lt;/a&gt;

  &lt;p align=&quot;center&quot;&gt;
    100% Open Source Toolkit for Large Language Models: Train, Tune, Chat on your own Machine
    &lt;br /&gt;
    &lt;a href=&quot;https://transformerlab.ai/docs/download/&quot;&gt;&lt;strong&gt;Download&lt;/strong&gt;&lt;/a&gt;
    ·
    &lt;a href=&quot;https://transformerlab.ai/docs/intro&quot;&gt;&lt;strong&gt;Explore the docs »&lt;/strong&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://youtu.be/tY5TAvKviLo&quot;&gt;View Demo&lt;/a&gt;
    ·
    &lt;a href=&quot;https://github.com/transformerlab/transformerlab-app/issues&quot;&gt;Report Bugs&lt;/a&gt;
    ·
    &lt;a href=&quot;https://github.com/transformerlab/transformerlab-app/issues/new&quot;&gt;Suggest Features&lt;/a&gt;
    ·
    &lt;a href=&quot;https://discord.gg/transformerlab&quot;&gt;Join Discord&lt;/a&gt;
    ·
    &lt;a href=&quot;https://twitter.com/transformerlab&quot;&gt;Follow on Twitter&lt;/a&gt;
  &lt;/p&gt;
  &lt;p align=&quot;center&quot;&gt;
   Note: Transformer Lab is actively being developed. Please join our Discord or follow us on Twitter for updates. Questions, feedback and contributions are highly valued!&lt;/p&gt;
&lt;/div&gt;

&lt;!-- ABOUT THE PROJECT --&gt;

## Download Now

[![Download Icon]][Download URL]

## About The Project

![Product Screen Shot](assets/transformerlab-demo-jan2025.gif)

Transformer Lab is an app that allows anyone to experiment with Large Language Models.

## Backed by Mozilla

Transformer Lab is proud to be supported by Mozilla through the &lt;a href=&quot;https://future.mozilla.org/builders/&quot;&gt;Mozilla Builders Program&lt;/a&gt;

&lt;a href=&quot;https://future.mozilla.org/builders/&quot;&gt;
    &lt;img src=&quot;https://transformerlab.ai/img/mozilla-builders-2024.png&quot; alt=&quot;Mozilla Builders Logo&quot; width=300&gt;
&lt;/a&gt;

## Features

Transformer Lab allows you to:

- 💕 **One-click Download Hundreds of Popular Models**:
  - DeepSeek, Llama3, Qwen, Phi4, Gemma, Mistral, Mixtral, Command-R, and dozens more
- ⬇ **Download any LLM from Huggingface**
- 🎶 **Finetune / Train Across Different Hardware**
  - Finetune using MLX on Apple Silicon
  - Finetune using Huggingface on GPU
- ⚖️ **RLHF and Preference Optimization**
  - DPO
  - ORPO
  - SIMPO
  - Reward Modeling
- 💻 **Work with LLMs Across Operating Systems**:
  - Windows App
  - MacOS App
  - Linux
- 💬 **Chat with Models**
  - Chat
  - Completions
  - Preset (Templated) Prompts
  - Chat History
  - Tweak generation parameters
  - Batched Inference
  - Tool Use / Function Calling (in alpha)
- 🚂 **Use Different Inference Engines**
  - MLX on Apple Silicon
  - Huggingface Transformers
  - vLLM
  - Llama CPP
- 🧑‍🎓 **Evaluate models**
- 📖 **RAG (Retreival Augmented Generation)**
  - Drag and Drop File UI
  - Works on Apple MLX, Transformers, and other engines
- 📓 **Build Datasets for Training**
  - Pull from hundreds of common datasets available on HuggingFace
  - Provide your own dataset using drag and drop
- 🔢 **Calculate Embeddings**
- 💁 **Full REST API**
- 🌩 **Run in the Cloud**
  - You can run the user interface on your desktop/laptop while the engine runs on a remote or cloud machine
  - Or you can run everything locally on a single machine
- 🔀 **Convert Models Across Platforms**
  - Convert from/to Huggingface, MLX, GGUF
- 🔌 **Plugin Support**
  - Easily pull from a library of existing plugins
  - Write your own plugins to extend functionality
- 🧑‍💻 **Embedded Monaco Code Editor**
  - Edit plugins and view what&#039;s happening behind the scenes
- 📝 **Prompt Editing**
  - Easily edit System Messages or Prompt Templates
- 📜 **Inference Logs**
  - While doing inference or RAG, view a log of the raw queries sent to the LLM

And you can do the above, all through a simple cross-platform GUI.

&lt;!-- GETTING STARTED --&gt;

## Getting Started

&lt;a href=&quot;https://transformerlab.ai/docs/download&quot;&gt;Click here&lt;/a&gt; to download Transformer Lab.

&lt;a href=&quot;https://transformerlab.ai/docs/intro&quot;&gt;Read this page&lt;/a&gt; to learn how to install and use.

### Built With

- [![Electron][Electron]][Electron-url]
- [![React][React.js]][React-url]
- [![HuggingFace][HuggingFace]][HuggingFace-url]

## Developers

### Building from Scratch

To build the app yourself, pull this repo, and follow the steps below:

(Please note that the current build doesn&#039;t work on Node v23 but it works on v22)

```bash
npm install
```

```bash
npm start
```

## Packaging for Production

To package apps for the local platform:

```bash
npm run package
```

&lt;!-- LICENSE --&gt;

## License

Distributed under the AGPL V3 License. See `LICENSE.txt` for more information.

## Reference

If you found Transformer Lab useful in your research or applications, please cite using the following BibTeX:

```
@software{transformerlab,
  author = {Asaria, Ali},
  title = {Transformer Lab: Experiment with Large Language Models},
  month = December,
  year = 2023,
  url = {https://github.com/transformerlab/transformerlab-app}
}
```

&lt;!-- CONTACT --&gt;

## Contact

- [@aliasaria](https://twitter.com/aliasaria) - Ali Asasria
- [@dadmobile](https://github.com/dadmobile) - Tony Salomone

&lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt;

[product-screenshot]: https://transformerlab.ai/assets/images/screenshot01-53ecb8c52338db3c9246cf2ebbbdc40d.png
[React.js]: https://img.shields.io/badge/React-20232A?style=for-the-badge&amp;logo=react&amp;logoColor=61DAFB
[React-url]: https://reactjs.org/
[Electron]: https://img.shields.io/badge/Electron-20232A?style=for-the-badge&amp;logo=electron&amp;logoColor=61DAFB
[Electron-url]: https://www.electronjs.org/
[HuggingFace]: https://img.shields.io/badge/🤗_HuggingFace-20232A?style=for-the-badge
[HuggingFace-url]: https://huggingface.co/
[Download Icon]: https://img.shields.io/badge/Download-EF2D5E?style=for-the-badge&amp;logoColor=white&amp;logo=DocuSign
[Download URL]: https://transformerlab.ai/docs/download
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[FellouAI/eko]]></title>
            <link>https://github.com/FellouAI/eko</link>
            <guid>https://github.com/FellouAI/eko</guid>
            <pubDate>Tue, 13 May 2025 00:04:53 GMT</pubDate>
            <description><![CDATA[Eko (Eko Keeps Operating) - Build Production-ready Agentic Workflow with Natural Language - eko.fellou.ai]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/FellouAI/eko">FellouAI/eko</a></h1>
            <p>Eko (Eko Keeps Operating) - Build Production-ready Agentic Workflow with Natural Language - eko.fellou.ai</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,549</p>
            <p>Forks: 261</p>
            <p>Stars today: 62 stars today</p>
            <h2>README</h2><pre>


&lt;h1 align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/FellouAI/eko&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://github.com/user-attachments/assets/55dbdd6c-2b08-4e5f-a841-8fea7c2a0b92&quot; alt=&quot;eko-logo&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;small&gt;Eko - Build Production-ready Agentic Workflow with Natural Language&lt;/small&gt;
&lt;/h1&gt;



[![License](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE) [![Build Status](https://img.shields.io/badge/build-passing-brightgreen.svg)](https://example.com/build-status) [![Version](https://img.shields.io/github/package-json/v/FellouAI/eko?color=yellow)](https://eko.fellou.ai/docs/release/versions/)

Eko (pronounced like ‘echo’) is a production-ready JavaScript framework that enables developers to create reliable agents, **from simple commands to complex workflows**. It provides a unified interface for running agents in both **computer and browser environments**.

# Framework Comparison

| Feature                              | Eko   | Langchain  | Browser-use  | Dify.ai  | Coze   |
|--------------------------------------|-------|------------|--------------|----------|--------|
| **Supported Platform**               | **All platform**  | Server side  | Browser  | Web  | Web  |
| **One sentence to multi-step workflow** | ✅    | ❌          | ✅            | ❌        | ❌      |
| **Intervenability**                  | ✅    | ✅          | ❌            | ❌        | ❌      | 
| **Development Efficiency**           | **High**  | Low      | Middle        | Middle    | Low    | 
| **Task Complexity**           | **High**  | High      | Low        | Middle    | Middle    | Middle       |
| **Open-source**                      | ✅    | ✅          | ✅            | ✅        | ❌      |
| **Access to private web resources** | ✅ | ❌          | ❌            | ❌        | ❌      |

## Quickstart

```bash
npm install @eko-ai/eko
```

&gt; Important Notice: The following example code cannot be executed directly. Please refer to the [Eko Quickstart guide](https://eko.fellou.ai/docs/getting-started/quickstart/) guide for instructions on how to run it.

```typescript
import { Eko } from &#039;@eko-ai/eko&#039;;

const eko = new Eko({
  apiKey: &#039;your_anthropic_api_key&#039;,
});

// Example: Browser automation
const extWorkflow = await eko.generate(&quot;Search for &#039;Eko framework&#039; on Google and save the first result&quot;);
await eko.execute(extWorkflow);

// Example: System operation
const sysWorkflow = await eko.generate(&quot;Create a new folder named &#039;reports&#039; and move all PDF files there&quot;);
await eko.execute(sysWorkflow);

```

## Demos

**Prompt:** `Collect the latest NASDAQ data on Yahoo Finance, including price changes, market capitalization, trading volume of major stocks, analyze the data and generate visualization reports`.

https://github.com/user-attachments/assets/4087b370-8eb8-4346-a549-c4ce4d1efec3

Click [here](https://github.com/FellouAI/eko-demos/tree/main/browser-extension-stock) to get the source code.

---

**Prompt:** `Based on the README of FellouAI/eko on github, search for competitors, highlight the key contributions of Eko, write a blog post advertising Eko, and post it on Write.as.`

https://github.com/user-attachments/assets/6feaea86-2fb9-4e5c-b510-479c2473d810

Click [here](https://github.com/FellouAI/eko-demos/tree/main/browser-extension-blog) to get the source code.

---

**Prompt:** `Clean up all files in the current directory larger than 1MB`

https://github.com/user-attachments/assets/ef7feb58-3ddd-4296-a1de-bb8b6c66e48b

Click [here](https://eko.fellou.ai/docs/computeruse/computer-node/#example-file-cleanup-workflow) to Learn more.

---

**Prompt:** Automatic software testing
```
    Current login page automation test:
    1. Correct account and password are: admin / 666666 
    2. Please randomly combine usernames and passwords for testing to verify if login validation works properly, such as: username cannot be empty, password cannot be empty, incorrect username, incorrect password
    3. Finally, try to login with the correct account and password to verify if login is successful
    4. Generate test report and export
```

https://github.com/user-attachments/assets/7716300a-c51d-41f1-8d4f-e3f593c1b6d5


Click [here](https://eko.fellou.ai/docs/browseruse/browser-web#example-login-automation-testing) to Learn more.

## Use Cases

- Browser automation and web scraping
- System file and process management
- Workflow automation
- Data processing and organization
- GUI automation
- Multi-step task orchestration

## Documentation

Visit our [documentation site](https://eko.fellou.ai/docs) for:

- Getting started guide
- API reference
- Usage examples
- Best practices
- Configuration options

## Development Environments

Eko can be used in multiple environments:

- Browser Extension
- Web Applications
- Node.js Applications

## Community and Support

- Report issues on [GitHub Issues](https://github.com/FellouAI/eko/issues)
- Join our [slack community discussions](https://join.slack.com/t/eko-ai/shared_invite/zt-2xhvkudv9-nHvD1g8Smp227sM51x_Meg)
- Join our [Discard](https://discord.gg/XpFfk2e5):
![](discard.png)
- Contribute tools and improvements
- Share your use cases and feedback

[![Star History Chart](https://api.star-history.com/svg?repos=FellouAI/eko&amp;type=Date)](https://star-history.com/#FellouAI/eko&amp;Date)

## License

Eko is released under the MIT License. See the [LICENSE](LICENSE) file for details.

</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[github/docs]]></title>
            <link>https://github.com/github/docs</link>
            <guid>https://github.com/github/docs</guid>
            <pubDate>Tue, 13 May 2025 00:04:52 GMT</pubDate>
            <description><![CDATA[The open-source repo for docs.github.com]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/github/docs">github/docs</a></h1>
            <p>The open-source repo for docs.github.com</p>
            <p>Language: TypeScript</p>
            <p>Stars: 17,347</p>
            <p>Forks: 61,759</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre># GitHub Docs &lt;!-- omit in toc --&gt;
[![Build GitHub Docs On Codespaces](https://github.com/codespaces/badge.svg)](https://github.com/codespaces/new/?repo=github)

This repository contains the documentation website code and Markdown source files for [docs.github.com](https://docs.github.com).

GitHub&#039;s Docs team works on pre-production content in a private repo that regularly syncs with this public repo.

Use the table of contents icon &lt;img alt=&quot;Table of contents icon&quot; src=&quot;./contributing/images/table-of-contents.png&quot; width=&quot;25&quot; height=&quot;25&quot; /&gt; on the top right corner of this document to navigate to a specific section quickly.

## Contributing

We accept different types of contributions, including some that don&#039;t require you to write a single line of code. For detailed instructions on how to get started with our project, see [About contributing to GitHub Docs](https://docs.github.com/en/contributing/collaborating-on-github-docs/about-contributing-to-github-docs).

### Ways to contribute

On the GitHub Docs site, you can contribute by clicking the **Make a contribution** button at the bottom of the page to open a pull request for quick fixes like typos, updates, or link fixes.

You can also contribute by creating a local environment or opening a Codespace. For more information, see [Setting up your environment to work on GitHub Docs](https://docs.github.com/en/contributing/setting-up-your-environment-to-work-on-github-docs).

&lt;img alt=&quot;Contribution call-to-action&quot; src=&quot;./contributing/images/contribution_cta.png&quot; width=&quot;400&quot;&gt;

For more complex contributions, please open an issue using the most appropriate [issue template](https://github.com/github/docs/issues/new/choose) to describe the changes you&#039;d like to see.

If you&#039;re looking for a way to contribute, you can scan through our [help wanted board](https://github.com/github/docs/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22) to find open issues already approved for work.

### And that&#039;s it!

If you&#039;re having trouble with your GitHub account, contact [Support](https://support.github.com).

That&#039;s how you can easily become a member of the GitHub Docs community. :sparkles:

## READMEs

In addition to the README you&#039;re reading right now, this repo includes other READMEs that describe the purpose of each subdirectory in more detail:

- [content/README.md](content/README.md)
- [content/graphql/README.md](content/graphql/README.md)
- [content/rest/README.md](content/rest/README.md)
- [contributing/README.md](contributing/README.md)
- [data/README.md](data/README.md)
- [data/reusables/README.md](data/reusables/README.md)
- [data/variables/README.md](data/variables/README.md)
- [src/README.md](src/README.md)

## License

The GitHub product documentation in the assets, content, and data folders are licensed under a [CC-BY license](LICENSE).

All other code in this repository is licensed under the [MIT license](LICENSE-CODE).

When using the GitHub logos, be sure to follow the [GitHub logo guidelines](https://github.com/logos).

## Thanks :purple_heart:

Thanks for all your contributions and efforts towards improving the GitHub documentation. We thank you for being part of our :sparkles: community :sparkles:!
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>