<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Sat, 17 May 2025 00:04:56 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[n8n-io/n8n]]></title>
            <link>https://github.com/n8n-io/n8n</link>
            <guid>https://github.com/n8n-io/n8n</guid>
            <pubDate>Sat, 17 May 2025 00:04:56 GMT</pubDate>
            <description><![CDATA[Fair-code workflow automation platform with native AI capabilities. Combine visual building with custom code, self-host or cloud, 400+ integrations.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/n8n-io/n8n">n8n-io/n8n</a></h1>
            <p>Fair-code workflow automation platform with native AI capabilities. Combine visual building with custom code, self-host or cloud, 400+ integrations.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 94,620</p>
            <p>Forks: 25,923</p>
            <p>Stars today: 600 stars today</p>
            <h2>README</h2><pre>![Banner image](https://user-images.githubusercontent.com/10284570/173569848-c624317f-42b1-45a6-ab09-f0ea3c247648.png)

# n8n - Secure Workflow Automation for Technical Teams

n8n is a workflow automation platform that gives technical teams the flexibility of code with the speed of no-code. With 400+ integrations, native AI capabilities, and a fair-code license, n8n lets you build powerful automations while maintaining full control over your data and deployments.

![n8n.io - Screenshot](https://raw.githubusercontent.com/n8n-io/n8n/master/assets/n8n-screenshot-readme.png)

## Key Capabilities

- **Code When You Need It**: Write JavaScript/Python, add npm packages, or use the visual interface
- **AI-Native Platform**: Build AI agent workflows based on LangChain with your own data and models
- **Full Control**: Self-host with our fair-code license or use our [cloud offering](https://app.n8n.cloud/login)
- **Enterprise-Ready**: Advanced permissions, SSO, and air-gapped deployments
- **Active Community**: 400+ integrations and 900+ ready-to-use [templates](https://n8n.io/workflows)

## Quick Start

Try n8n instantly with [npx](https://docs.n8n.io/hosting/installation/npm/) (requires [Node.js](https://nodejs.org/en/)):

```
npx n8n
```

Or deploy with [Docker](https://docs.n8n.io/hosting/installation/docker/):

```
docker volume create n8n_data
docker run -it --rm --name n8n -p 5678:5678 -v n8n_data:/home/node/.n8n docker.n8n.io/n8nio/n8n
```

Access the editor at http://localhost:5678

## Resources

- üìö [Documentation](https://docs.n8n.io)
- üîß [400+ Integrations](https://n8n.io/integrations)
- üí° [Example Workflows](https://n8n.io/workflows)
- ü§ñ [AI &amp; LangChain Guide](https://docs.n8n.io/langchain/)
- üë• [Community Forum](https://community.n8n.io)
- üìñ [Community Tutorials](https://community.n8n.io/c/tutorials/28)

## Support

Need help? Our community forum is the place to get support and connect with other users:
[community.n8n.io](https://community.n8n.io)

## License

n8n is [fair-code](https://faircode.io) distributed under the [Sustainable Use License](https://github.com/n8n-io/n8n/blob/master/LICENSE.md) and [n8n Enterprise License](https://github.com/n8n-io/n8n/blob/master/LICENSE_EE.md).

- **Source Available**: Always visible source code
- **Self-Hostable**: Deploy anywhere
- **Extensible**: Add your own nodes and functionality

[Enterprise licenses](mailto:license@n8n.io) available for additional features and support.

Additional information about the license model can be found in the [docs](https://docs.n8n.io/reference/license/).

## Contributing

Found a bug üêõ or have a feature idea ‚ú®? Check our [Contributing Guide](https://github.com/n8n-io/n8n/blob/master/CONTRIBUTING.md) to get started.

## Join the Team

Want to shape the future of automation? Check out our [job posts](https://n8n.io/careers) and join our team!

## What does n8n mean?

**Short answer:** It means &quot;nodemation&quot; and is pronounced as n-eight-n.

**Long answer:** &quot;I get that question quite often (more often than I expected) so I decided it is probably best to answer it here. While looking for a good name for the project with a free domain I realized very quickly that all the good ones I could think of were already taken. So, in the end, I chose nodemation. &#039;node-&#039; in the sense that it uses a Node-View and that it uses Node.js and &#039;-mation&#039; for &#039;automation&#039; which is what the project is supposed to help with. However, I did not like how long the name was and I could not imagine writing something that long every time in the CLI. That is when I then ended up on &#039;n8n&#039;.&quot; - **Jan Oberhauser, Founder and CEO, n8n.io**
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[CopilotKit/CopilotKit]]></title>
            <link>https://github.com/CopilotKit/CopilotKit</link>
            <guid>https://github.com/CopilotKit/CopilotKit</guid>
            <pubDate>Sat, 17 May 2025 00:04:55 GMT</pubDate>
            <description><![CDATA[React UI + elegant infrastructure for AI Copilots, AI chatbots, and in-app AI agents. The Agentic last-mile ü™Å]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/CopilotKit/CopilotKit">CopilotKit/CopilotKit</a></h1>
            <p>React UI + elegant infrastructure for AI Copilots, AI chatbots, and in-app AI agents. The Agentic last-mile ü™Å</p>
            <p>Language: TypeScript</p>
            <p>Stars: 18,943</p>
            <p>Forks: 2,685</p>
            <p>Stars today: 76 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://copilotkit.ai&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./assets/banner.png&quot; alt=&quot;CopilotKit Logo&quot;&gt;
  &lt;/a&gt;

  &lt;br/&gt;

  &lt;h3&gt;
    Build deeply-integrated AI assistants &amp; agents&lt;br/&gt;
    that work &lt;em&gt;alongside&lt;/em&gt; your users inside your applications.
  &lt;/h3&gt;
  
&lt;/div&gt;

&lt;!-- --&gt;

&lt;br/&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/@copilotkit/react-core&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/v/%40copilotkit%2Freact-core?logo=npm&amp;logoColor=%23FFFFFF&amp;label=Version&amp;color=%236963ff&quot; alt=&quot;NPM&quot;&gt;
  &lt;/a&gt;
  &lt;img src=&quot;https://img.shields.io/github/license/copilotkit/copilotkit?color=%236963ff&amp;label=License&quot; alt=&quot;MIT&quot;&gt;
  &lt;a href=&quot;https://discord.gg/6dffbvGU3D&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/discord/1122926057641742418?logo=discord&amp;logoColor=%23FFFFFF&amp;label=Discord&amp;color=%236963ff&quot; alt=&quot;Discord&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br/&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://discord.gg/6dffbvGU3D?ref=github_readme&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./assets/btn_discord.png&quot; alt=&quot;CopilotKit Discord&quot; height=&quot;40px&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://docs.copilotkit.ai?ref=github_readme&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./assets/btn_docs.png&quot; alt=&quot;CopilotKit GitHub&quot; height=&quot;40px&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://cloud.copilotkit.ai?ref=github_readme&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;./assets/btn_cloud.png&quot; alt=&quot;CopilotKit GitHub&quot; height=&quot;40px&quot;&gt;
  &lt;/a&gt;
  
&lt;/div&gt;


&lt;h3 align=&quot;center&quot;&gt; 
Stay up to date with our latest releases!
&lt;/h3&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://go.copilotkit.ai/gh-linkedin&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://github.com/user-attachments/assets/e33e7ebb-f5fc-4775-81b0-d5dd6865271a&quot; alt=&quot;LI&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://go.copilotkit.ai/gh-twitter&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://github.com/user-attachments/assets/14e57c97-70ac-4f9a-88f5-67028107794f&quot; alt=&quot;Discord&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;br/&gt;
&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.producthunt.com/posts/copilotkit&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=428778&amp;theme=light&amp;period=daily&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br /&gt;


&lt;img width=&quot;1685&quot; alt=&quot;214 (1)&quot; src=&quot;https://github.com/user-attachments/assets/145600ce-c49b-4e25-883e-feee149d6332&quot;&gt;

## üèÜ Featured Examples

### üìù [Form-Filling Copilot](https://github.com/CopilotKit/CopilotKit/tree/main/examples/copilot-form-filling)
Transform tedious form-filling into natural conversations. The AI assistant asks the right questions, understands context, and completes forms automatically‚Äîno more field-by-field drudgery.
&lt;div&gt;
  &lt;a href=&quot;https://github.com/CopilotKit/CopilotKit/tree/main/examples/copilot-form-filling&quot;&gt;&lt;code&gt;GitHub ‚Üí&lt;/code&gt;&lt;/a&gt;
  &lt;a href=&quot;https://form-filling-copilot.vercel.app&quot;&gt;&lt;code&gt;Live Demo ‚Üí&lt;/code&gt;&lt;/a&gt;
&lt;/div&gt;

### üîÑ [State Machine Copilot](https://github.com/CopilotKit/CopilotKit/tree/main/examples/copilot-state-machine)
Transform complex conversational flows into manageable state machines. This AI-powered car sales application demonstrates how to build sophisticated multi-stage interactions with contextual awareness and state transitions.
&lt;div&gt;
  &lt;a href=&quot;https://github.com/CopilotKit/CopilotKit/tree/main/examples/state-machine-copilot&quot;&gt;&lt;code&gt;GitHub ‚Üí&lt;/code&gt;&lt;/a&gt;
  &lt;a href=&quot;https://state-machine-copilot.vercel.app&quot;&gt;&lt;code&gt;Live Demo ‚Üí&lt;/code&gt;&lt;/a&gt;
&lt;/div&gt;

### üí¨ [Chat With Your Data](https://github.com/CopilotKit/CopilotKit/tree/main/examples/copilot-chat-with-your-data)
Transform your data visualization experience with an AI-powered dashboard assistant. Ask questions about your data in natural language, get insights, and interact with your metrics‚Äîall through a conversational interface powered by CopilotKit.
&lt;div&gt;
  &lt;a href=&quot;https://github.com/CopilotKit/CopilotKit/tree/main/examples/copilot-chat-with-your-data&quot;&gt;&lt;code&gt;GitHub ‚Üí&lt;/code&gt;&lt;/a&gt;
  &lt;a href=&quot;https://chat-with-your-data.vercel.app&quot;&gt;&lt;code&gt;Live Demo ‚Üí&lt;/code&gt;&lt;/a&gt;
&lt;/div&gt;

### üè¶ [SaaS Copilot (Bank)](https://github.com/CopilotKit/demo-banking)
A context-aware financial assistant that analyzes transactions, provides spending insights, and helps users manage their finances through natural conversation. Demonstrates how CopilotKit can integrate deeply with complex data structures.
&lt;div&gt;
  &lt;a href=&quot;https://github.com/CopilotKit/demo-banking&quot;&gt;&lt;code&gt;GitHub ‚Üí&lt;/code&gt;&lt;/a&gt;
&lt;/div&gt;

## üßô‚Äç‚ôÇÔ∏è Agent Examples

### ‚úàÔ∏è [Travel Planner](https://github.com/CopilotKit/CopilotKit/tree/main/examples/coagents-travel)
An agent-native application that helps users plan trips by generating detailed itineraries, finding attractions, and visualizing travel plans. Shows how agents can collaborate with users to create rich, interactive experiences.
&lt;div&gt;
  &lt;a href=&quot;https://github.com/CopilotKit/CopilotKit/tree/main/examples/coagents-travel&quot;&gt;&lt;code&gt;GitHub ‚Üí&lt;/code&gt;&lt;/a&gt;
  &lt;a href=&quot;https://docs.copilotkit.ai/coagents/tutorials/ai-travel-app/overview&quot;&gt;&lt;code&gt;Tutorial ‚Üí&lt;/code&gt;&lt;/a&gt;
&lt;/div&gt;

### üîç [Research Canvas](https://github.com/CopilotKit/CopilotKit/tree/main/examples/coagents-research-canvas)
Multi-agent document analysis system that helps users analyze papers, synthesize information, and generate comprehensive research summaries through collaborative AI workflows.
&lt;div&gt;
  &lt;a href=&quot;https://github.com/CopilotKit/CopilotKit/tree/main/examples/coagents-research-canvas&quot;&gt;&lt;code&gt;GitHub ‚Üí&lt;/code&gt;&lt;/a&gt;
  &lt;a href=&quot;https://examples-coagents-research-canvas-ui.vercel.app
&quot;&gt;&lt;code&gt;Live Demo ‚Üí&lt;/code&gt;&lt;/a&gt;
&lt;/div&gt;

# Getting Started
Get started in minutes - check out the [quickstart documentation](https://docs.copilotkit.ai/quickstart).

# Code Samples
```ts
// Headless UI with full control
const { visibleMessages, appendMessage, setMessages, ... } = useCopilotChat();

// Pre-built components with deep customization options (CSS + pass custom sub-components)
&lt;CopilotPopup 
  instructions={&quot;You are assisting the user as best as you can. Answer in the best way possible given the data you have.&quot;} 
  labels={{ title: &quot;Popup Assistant&quot;, initial: &quot;Need any help?&quot; }} 
/&gt;

// ---

// Frontend RAG
useCopilotReadable({
  description: &quot;The current user&#039;s colleagues&quot;,
  value: colleagues,
});

// knowledge-base integration
useCopilotKnowledgebase(myCustomKnowledgeBase)

// ---

// Frontend actions + generative UI, with full streaming support
useCopilotAction({
  name: &quot;appendToSpreadsheet&quot;,
  description: &quot;Append rows to the current spreadsheet&quot;,
  parameters: [
    { name: &quot;rows&quot;, type: &quot;object[]&quot;, attributes: [{ name: &quot;cells&quot;, type: &quot;object[]&quot;, attributes: [{ name: &quot;value&quot;, type: &quot;string&quot; }] }] }
  ],
  render: ({ status, args }) =&gt; &lt;Spreadsheet data={canonicalSpreadsheetData(args.rows)} /&gt;,
  handler: ({ rows }) =&gt; setSpreadsheet({ ...spreadsheet, rows: [...spreadsheet.rows, ...canonicalSpreadsheetData(rows)] }),
});

// ---

// structured autocomplete for anything
const { suggestions } = useCopilotStructuredAutocompletion(
  {
    instructions: `Autocomplete or modify spreadsheet rows based on the inferred user intent.`,
    value: { rows: spreadsheet.rows.map((row) =&gt; ({ cells: row })) },
    enabled: !!activeCell &amp;&amp; !spreadsheetIsEmpty,
  },
  [activeCell, spreadsheet]
);
```

# Code Samples (CoAgents: in-app LangGraph Agents)

```ts
// Share state between app and agent
const { agentState } = useCoAgent({ 
  name: &quot;basic_agent&quot;, 
  initialState: { input: &quot;NYC&quot; } 
});

// agentic generative UI
useCoAgentStateRender({
  name: &quot;basic_agent&quot;,
  render: ({ state }) =&gt; &lt;WeatherDisplay {...state.final_response} /&gt;,
});

// Human in the Loop (Approval)
useCopilotAction({
    name: &quot;email_tool&quot;,
    parameters: [{ name: &quot;email_draft&quot;, type: &quot;string&quot;, description: &quot;The email content&quot;, required: true }],
    renderAndWaitForResponse: ({ args, status, respond }) =&gt; (
      &lt;EmailConfirmation
        emailContent={args.email_draft || &quot;&quot;}
        isExecuting={status === &quot;executing&quot;}
        onCancel={() =&gt; respond?.({ approved: false })}
        onSend={() =&gt; respond?.({ approved: true, metadata: { sentAt: new Date().toISOString() } })}
      /&gt;
    ),
  });

// ---

// intermediate agent state streaming (supports both LangGraph.js + LangGraph python)
const modifiedConfig = copilotKitCustomizeConfig(config, {
  emitIntermediateState: [{ 
    stateKey: &quot;outline&quot;, 
    tool: &quot;set_outline&quot;, 
    toolArgument: &quot;outline&quot; 
  }],
});
const response = await ChatOpenAI({ model: &quot;gpt-4o&quot; }).invoke(messages, modifiedConfig);
```


## Contributing

Thanks for your interest in contributing to CopilotKit! üíú

We value all contributions, whether it&#039;s through code, documentation, creating demo apps, or just spreading the word.

Here are a few useful resources to help you get started:

- For code contributions, [CONTRIBUTING.md](./CONTRIBUTING.md).
- For documentation-related contributions, [check out the documentation contributions guide](https://docs.copilotkit.ai/contributing/docs-contributions?ref=github_readme).

- Want to contribute but not sure how? [Join our Discord](https://discord.gg/6dffbvGU3D) and we&#039;ll help you out!

&gt; üí° **NOTE:** All contributions must be submitted via a pull request and be reviewed by our team. This ensures all contributions are of high quality and align with the project&#039;s goals.

## Get in touch

You are invited to join our community on [Discord](https://discord.gg/6dffbvGU3D) and chat with our team and other community members.

## License

This repository&#039;s source code is available under the [MIT License](https://github.com/CopilotKit/CopilotKit/blob/main/LICENSE).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[th-ch/youtube-music]]></title>
            <link>https://github.com/th-ch/youtube-music</link>
            <guid>https://github.com/th-ch/youtube-music</guid>
            <pubDate>Sat, 17 May 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[YouTube Music Desktop App bundled with custom plugins (and built-in ad blocker / downloader)]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/th-ch/youtube-music">th-ch/youtube-music</a></h1>
            <p>YouTube Music Desktop App bundled with custom plugins (and built-in ad blocker / downloader)</p>
            <p>Language: TypeScript</p>
            <p>Stars: 19,975</p>
            <p>Forks: 1,035</p>
            <p>Stars today: 281 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

# YouTube Music

[![GitHub release](https://img.shields.io/github/release/th-ch/youtube-music.svg?style=for-the-badge&amp;logo=youtube-music)](https://github.com/th-ch/youtube-music/releases/)
[![GitHub license](https://img.shields.io/github/license/th-ch/youtube-music.svg?style=for-the-badge)](https://github.com/th-ch/youtube-music/blob/master/license)
[![eslint code style](https://img.shields.io/badge/code_style-eslint-5ed9c7.svg?style=for-the-badge)](https://github.com/th-ch/youtube-music/blob/master/eslint.config.mjs)
[![Build status](https://img.shields.io/github/actions/workflow/status/th-ch/youtube-music/build.yml?branch=master&amp;style=for-the-badge&amp;logo=youtube-music)](https://GitHub.com/th-ch/youtube-music/releases/)
[![GitHub All Releases](https://img.shields.io/github/downloads/th-ch/youtube-music/total?style=for-the-badge&amp;logo=youtube-music)](https://GitHub.com/th-ch/youtube-music/releases/)
[![AUR](https://img.shields.io/aur/version/youtube-music-bin?color=blueviolet&amp;style=for-the-badge&amp;logo=youtube-music)](https://aur.archlinux.org/packages/youtube-music-bin)
[![Known Vulnerabilities](https://snyk.io/test/github/th-ch/youtube-music/badge.svg)](https://snyk.io/test/github/th-ch/youtube-music)

&lt;/div&gt;

![Screenshot](web/screenshot.png &quot;Screenshot&quot;)


&lt;div align=&quot;center&quot;&gt;
	&lt;a href=&quot;https://github.com/th-ch/youtube-music/releases/latest&quot;&gt;
		&lt;img src=&quot;web/youtube-music.svg&quot; width=&quot;400&quot; height=&quot;100&quot; alt=&quot;YouTube Music SVG&quot;&gt;
	&lt;/a&gt;
&lt;/div&gt;

Read this in other languages: [üá∞üá∑](./docs/readme/README-ko.md), [üá´üá∑](./docs/readme/README-fr.md), [üáÆüá∏](./docs/readme/README-is.md), [üá®üá± üá™üá∏](./docs/readme/README-es.md), [üá∑üá∫](./docs/readme/README-ru.md), [üá∫üá¶](./docs/readme/README-uk.md), [üá≠üá∫](./docs/readme/README-hu.md), [üáßüá∑](./docs/readme/README-pt.md), [üáØüáµ](./docs/readme/README-ja.md)

**Electron wrapper around YouTube Music featuring:**

- Native look &amp; feel, aims at keeping the original interface
- Framework for custom plugins: change YouTube Music to your needs (style, content, features), enable/disable plugins in
  one click

## Demo Image

|                          Player Screen (album color theme &amp; ambient light)                                |
|:---------------------------------------------------------------------------------------------------------:|
|![Screenshot1](https://github.com/th-ch/youtube-music/assets/16558115/53efdf73-b8fa-4d7b-a235-b96b91ea77fc)|

## Content

- [Features](#features)
- [Available plugins](#available-plugins)
- [Translation](#translation)
- [Download](#download)
  - [Arch Linux](#arch-linux)
  - [MacOS](#macos)
  - [Windows](#windows)
    - [How to install without a network connection? (in Windows)](#how-to-install-without-a-network-connection-in-windows)
- [Themes](#themes)
- [Dev](#dev)
- [Build your own plugins](#build-your-own-plugins)
  - [Creating a plugin](#creating-a-plugin)
  - [Common use cases](#common-use-cases)
- [Build](#build)
- [Production Preview](#production-preview)
- [Tests](#tests)
- [License](#license)
- [FAQ](#faq)

## Features:

- **Auto confirm when paused** (Always Enabled): disable
  the [&quot;Continue Watching?&quot;](https://user-images.githubusercontent.com/61631665/129977894-01c60740-7ec6-4bf0-9a2c-25da24491b0e.png)
  popup that pause music after a certain time

 - And more ...

## Available plugins:

- **Ad Blocker**: Block all ads and tracking out of the box

- **Album Actions**: Adds Undislike, Dislike, Like, and Unlike buttons to apply this to all songs in a playlist or album

- **Album Color Theme**: Applies a dynamic theme and visual effects based on the album color palette

- **Ambient Mode**: Applies a lighting effect by casting gentle colors from the video, into your screen‚Äôs background

- **Audio Compressor**: Apply compression to audio (lowers the volume of the loudest parts of the signal and raises the
  volume of the softest parts)

- **Blur Navigation Bar**: makes navigation bar transparent and blurry

- **Bypass Age Restrictions**: bypass YouTube&#039;s age verification

- **Captions Selector**: Enable captions

- **Compact Sidebar**: Always set the sidebar in compact mode

- **Crossfade**: Crossfade between songs

- **Disable Autoplay**: Makes every song start in &quot;paused&quot; mode

- **[Discord](https://discord.com/) Rich Presence**: Show your friends what you listen to
  with [Rich Presence](https://user-images.githubusercontent.com/28219076/104362104-a7a0b980-5513-11eb-9744-bb89eabe0016.png)

- **Downloader**: downloads
  MP3 [directly from the interface](https://user-images.githubusercontent.com/61631665/129977677-83a7d067-c192-45e1-98ae-b5a4927393be.png) [(youtube-dl)](https://github.com/ytdl-org/youtube-dl)

- **Equalizer**: add filters to boost or cut specific range of frequencies (e.g. bass booster)

- **Exponential Volume**: Makes the volume
  slider [exponential](https://greasyfork.org/en/scripts/397686-youtube-music-fix-volume-ratio/) so it&#039;s easier to
  select lower volumes

- **In-App Menu**: [gives bars a fancy, dark look](https://user-images.githubusercontent.com/78568641/112215894-923dbf00-8c29-11eb-95c3-3ce15db27eca.png)

  &gt; (see [this post](https://github.com/th-ch/youtube-music/issues/410#issuecomment-952060709) if you have problem
  accessing the menu after enabling this plugin and hide-menu option)

- **Scrobbler**: Adds scrobbling support for [Last.fm](https://www.last.fm/) and [ListenBrainz](https://listenbrainz.org/)

- **Lumia Stream**: Adds [Lumia Stream](https://lumiastream.com/) support

- **Lyrics Genius**: Adds lyrics support for most songs

- **Music Together**: Share a playlist with others. When the host plays a song, everyone else will hear the same song

- **Navigation**: Next/Back navigation arrows directly integrated in the interface, like in your favorite browser

- **No Google Login**: Remove Google login buttons and links from the interface

- **Notifications**: Display a notification when a song starts
  playing ([interactive notifications](https://user-images.githubusercontent.com/78568641/114102651-63ce0e00-98d0-11eb-9dfe-c5a02bb54f9c.png)
  are available on windows)

- **Picture-in-picture**: allows to switch the app to picture-in-picture mode

- **Playback Speed**: Listen fast, listen
  slow! [Adds a slider that controls song speed](https://user-images.githubusercontent.com/61631665/129976003-e55db5ba-bf42-448c-a059-26a009775e68.png)

- **Precise Volume**: Control the volume precisely using mousewheel/hotkeys, with a custom hud and customizable volume
  steps

- **Shortcuts (&amp; MPRIS)**: Allows setting global hotkeys for playback (play/pause/next/previous) +
  disable [media osd](https://user-images.githubusercontent.com/84923831/128601225-afa38c1f-dea8-4209-9f72-0f84c1dd8b54.png)
  by overriding media keys + enable Ctrl/CMD + F to search + enable linux mpris support for
  mediakeys + [custom hotkeys](https://github.com/Araxeus/youtube-music/blob/1e591d6a3df98449bcda6e63baab249b28026148/providers/song-controls.js#L13-L50)
  for [advanced users](https://github.com/th-ch/youtube-music/issues/106#issuecomment-952156902)

- **Skip Disliked Song**: Skips disliked songs

- **Skip Silences**: Automatically skip silenced sections

- [**SponsorBlock**](https://github.com/ajayyy/SponsorBlock): Automatically Skips non-music parts like intro/outro or
  parts of music videos where the song isn&#039;t playing

- **Synced Lyrics**: Provides synced lyrics to songs, using providers like [LRClib](https://lrclib.net).

- **Taskbar Media Control**: Control playback from
  your [Windows taskbar](https://user-images.githubusercontent.com/78568641/111916130-24a35e80-8a82-11eb-80c8-5021c1aa27f4.png)

- **TouchBar**: Custom TouchBar layout for macOS

- **Tuna OBS**: Integration with [OBS](https://obsproject.com/)&#039;s
  plugin [Tuna](https://obsproject.com/forum/resources/tuna.843/)

- **Video Quality Changer**: Allows changing the video quality with
  a [button](https://user-images.githubusercontent.com/78568641/138574366-70324a5e-2d64-4f6a-acdd-dc2a2b9cecc5.png) on
  the video overlay

- **Video Toggle**: Adds
  a [button](https://user-images.githubusercontent.com/28893833/173663950-63e6610e-a532-49b7-9afa-54cb57ddfc15.png) to
  switch between Video/Song mode. can also optionally remove the whole video tab

- **Visualizer**: Different music visualizers


## Translation

You can help with translation on [Hosted Weblate](https://hosted.weblate.org/projects/youtube-music/).

&lt;a href=&quot;https://hosted.weblate.org/engage/youtube-music/&quot;&gt;
  &lt;img src=&quot;https://hosted.weblate.org/widget/youtube-music/i18n/multi-auto.svg&quot; alt=&quot;translation status&quot; /&gt;
  &lt;img src=&quot;https://hosted.weblate.org/widget/youtube-music/i18n/287x66-black.png&quot; alt=&quot;translation status 2&quot; /&gt;
&lt;/a&gt;

## Download

You can check out the [latest release](https://github.com/th-ch/youtube-music/releases/latest) to quickly find the
latest version.

### Arch Linux

Install the [`youtube-music-bin`](https://aur.archlinux.org/packages/youtube-music-bin) package from the AUR. For AUR installation instructions, take a look at
this [wiki page](https://wiki.archlinux.org/index.php/Arch_User_Repository#Installing_packages).

### macOS

You can install the app using Homebrew (see the [cask definition](https://github.com/th-ch/homebrew-youtube-music)):

```bash
brew install th-ch/youtube-music/youtube-music
```

If you install the app manually and get an error &quot;is damaged and can‚Äôt be opened.&quot; when launching the app, run the following in the Terminal:

```bash
/usr/bin/xattr -cr /Applications/YouTube\ Music.app
```

### Windows

You can use the [Scoop package manager](https://scoop.sh) to install the `youtube-music` package from
the [`extras` bucket](https://github.com/ScoopInstaller/Extras).

```bash
scoop bucket add extras
scoop install extras/youtube-music
```

Alternately you can use [Winget](https://learn.microsoft.com/en-us/windows/package-manager/winget/), Windows 11s
official CLI package manager to install the `th-ch.YouTubeMusic` package.

*Note: Microsoft Defender SmartScreen might block the installation since it is from an &quot;unknown publisher&quot;. This is also
true for the manual installation when trying to run the executable(.exe) after a manual download here on github (same
file).*

```bash
winget install th-ch.YouTubeMusic
```

#### How to install without a network connection? (in Windows)

- Download the `*.nsis.7z` file for _your device architecture_ in [release page](https://github.com/th-ch/youtube-music/releases/latest).
  - `x64` for 64-bit Windows
  - `ia32` for 32-bit Windows
  - `arm64` for ARM64 Windows
- Download installer in release page. (`*-Setup.exe`)
- Place them in the **same directory**.
- Run the installer.

## Themes

You can load CSS files to change the look of the application (Options &gt; Visual Tweaks &gt; Themes).

Some predefined themes are available in https://github.com/kerichdev/themes-for-ytmdesktop-player.

## Dev

```bash
git clone https://github.com/th-ch/youtube-music
cd youtube-music
pnpm install --frozen-lockfile
pnpm dev
```

## Build your own plugins

Using plugins, you can:

- manipulate the app - the `BrowserWindow` from electron is passed to the plugin handler
- change the front by manipulating the HTML/CSS

### Creating a plugin

Create a folder in `src/plugins/YOUR-PLUGIN-NAME`:

- `index.ts`: the main file of the plugin
```typescript
import style from &#039;./style.css?inline&#039;; // import style as inline

import { createPlugin } from &#039;@/utils&#039;;

export default createPlugin({
  name: &#039;Plugin Label&#039;,
  restartNeeded: true, // if value is true, ytmusic show restart dialog
  config: {
    enabled: false,
  }, // your custom config
  stylesheets: [style], // your custom style,
  menu: async ({ getConfig, setConfig }) =&gt; {
    // All *Config methods are wrapped Promise&lt;T&gt;
    const config = await getConfig();
    return [
      {
        label: &#039;menu&#039;,
        submenu: [1, 2, 3].map((value) =&gt; ({
          label: `value ${value}`,
          type: &#039;radio&#039;,
          checked: config.value === value,
          click() {
            setConfig({ value });
          },
        })),
      },
    ];
  },
  backend: {
    start({ window, ipc }) {
      window.maximize();

      // you can communicate with renderer plugin
      ipc.handle(&#039;some-event&#039;, () =&gt; {
        return &#039;hello&#039;;
      });
    },
    // it fired when config changed
    onConfigChange(newConfig) { /* ... */ },
    // it fired when plugin disabled
    stop(context) { /* ... */ },
  },
  renderer: {
    async start(context) {
      console.log(await context.ipc.invoke(&#039;some-event&#039;));
    },
    // Only renderer available hook
    onPlayerApiReady(api: YoutubePlayer, context: RendererContext) {
      // set plugin config easily
      context.setConfig({ myConfig: api.getVolume() });
    },
    onConfigChange(newConfig) { /* ... */ },
    stop(_context) { /* ... */ },
  },
  preload: {
    async start({ getConfig }) {
      const config = await getConfig();
    },
    onConfigChange(newConfig) {},
    stop(_context) {},
  },
});
```

### Common use cases

- injecting custom CSS: create a `style.css` file in the same folder then:

```typescript
// index.ts
import style from &#039;./style.css?inline&#039;; // import style as inline

import { createPlugin } from &#039;@/utils&#039;;

export default createPlugin({
  name: &#039;Plugin Label&#039;,
  restartNeeded: true, // if value is true, ytmusic will show a restart dialog
  config: {
    enabled: false,
  }, // your custom config
  stylesheets: [style], // your custom style
  renderer() {} // define renderer hook
});
```

- If you want to change the HTML:

```typescript
import { createPlugin } from &#039;@/utils&#039;;

export default createPlugin({
  name: &#039;Plugin Label&#039;,
  restartNeeded: true, // if value is true, ytmusic will show the restart dialog
  config: {
    enabled: false,
  }, // your custom config
  renderer() {
    // Remove the login button
    document.querySelector(&quot;.sign-in-link.ytmusic-nav-bar&quot;).remove();
  } // define renderer hook
});
```

- communicating between the front and back: can be done using the ipcMain module from electron. See `index.ts` file and
  example in `sponsorblock` plugin.

## Build

1. Clone the repo
2. Follow [this guide](https://pnpm.io/installation) to install `pnpm`
3. Run `pnpm install --frozen-lockfile` to install dependencies
4. Run `pnpm build:OS`

- `pnpm dist:win` - Windows
- `pnpm dist:linux` - Linux (amd64)
- `pnpm dist:linux:deb-arm64` - Linux (arm64 for Debian)
- `pnpm dist:linux:rpm-arm64` - Linux (arm64 for Fedora)
- `pnpm dist:mac` - macOS (amd64)
- `pnpm dist:mac:arm64` - macOS (arm64)

Builds the app for macOS, Linux, and Windows,
using [electron-builder](https://github.com/electron-userland/electron-builder).

## Production Preview

```bash
pnpm start
```

## Tests

```bash
pnpm test
```

Uses [Playwright](https://playwright.dev/) to test the app.

## License

MIT ¬© [th-ch](https://github.com/th-ch/youtube-music)

## FAQ

### Why apps menu isn&#039;t showing up?

If `Hide Menu` option is on - you can show the menu with the &lt;kbd&gt;alt&lt;/kbd&gt; key (or &lt;kbd&gt;\`&lt;/kbd&gt; [backtick] if using
the in-app-menu plugin)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[visgl/deck.gl]]></title>
            <link>https://github.com/visgl/deck.gl</link>
            <guid>https://github.com/visgl/deck.gl</guid>
            <pubDate>Sat, 17 May 2025 00:04:53 GMT</pubDate>
            <description><![CDATA[WebGL2 powered visualization framework]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/visgl/deck.gl">visgl/deck.gl</a></h1>
            <p>WebGL2 powered visualization framework</p>
            <p>Language: TypeScript</p>
            <p>Stars: 12,706</p>
            <p>Forks: 2,123</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;right&quot;&gt;
  &lt;a href=&quot;https://npmjs.org/package/deck.gl&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/v/deck.gl.svg?style=flat-square&quot; alt=&quot;version&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/visgl/deck.gl/actions?query=workflow%3Atest+branch%3Amaster&quot;&gt;
    &lt;img src=&quot;https://github.com/visgl/deck.gl/workflows/test/badge.svg?branch=master&quot; alt=&quot;build&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://npmjs.org/package/deck.gl&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/dm/@deck.gl/core.svg?style=flat-square&quot; alt=&quot;downloads&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&#039;https://coveralls.io/github/visgl/deck.gl?branch=master&#039;&gt;
    &lt;img src=&#039;https://img.shields.io/coveralls/visgl/deck.gl.svg?style=flat-square&#039; alt=&#039;Coverage Status&#039; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;deck.gl | &lt;a href=&quot;https://deck.gl&quot;&gt;Website&lt;/a&gt;&lt;/h1&gt;

&lt;h5 align=&quot;center&quot;&gt; GPU-powered, highly performant large-scale data visualization&lt;/h5&gt;

[![docs](http://i.imgur.com/mvfvgf0.jpg)](https://visgl.github.io/deck.gl)


deck.gl is designed to simplify high-performance, WebGL2/WebGPU based visualization of large data sets. Users can quickly get impressive visual results with minimal effort by composing existing layers, or leverage deck.gl&#039;s extensible architecture to address custom needs.

deck.gl maps **data** (usually an array of JSON objects) into a stack of visual **layers** - e.g. icons, polygons, texts; and look at them with **views**: e.g. map, first-person, orthographic.

deck.gl handles a number of challenges out of the box:

* Performant rendering and updating of large data sets
* Interactive event handling such as picking, highlighting and filtering
* Cartographic projections and integration with major basemap providers
* A catalog of proven, well-tested layers

Deck.gl is designed to be highly customizable. All layers come with flexible APIs to allow programmatic control of each aspect of the rendering. All core classes such are easily extendable by the users to address custom use cases.

## Flavors

### Script Tag

```html
&lt;script src=&quot;https://unpkg.com/deck.gl@latest/dist.min.js&quot;&gt;&lt;/script&gt;
```

- [Get started](/docs/get-started/using-standalone.md#using-the-scripting-api)
- [Full examples](https://github.com/visgl/deck.gl/tree/master/examples/get-started/scripting)

### NPM Module

```bash
npm install deck.gl
```

#### Pure JS

- [Get started](/docs/get-started/using-standalone.md)
- [Full examples](/examples/get-started/pure-js)

#### React

- [Get started](/docs/get-started/using-with-react.md)
- [Full examples](/examples/get-started/react)

### Python

```bash
pip install pydeck
```

- [Get started](https://deckgl.readthedocs.io/en/latest/installation.html)
- [Examples](https://deckgl.readthedocs.io/en/latest/layer.html)

### Third-Party Goodies

- [deckgl-typings](https://github.com/danmarshall/deckgl-typings) (Typescript)
- [mapdeck](https://symbolixau.github.io/mapdeck/articles/mapdeck.html) (R)
- [vega-deck.gl](https://github.com/microsoft/SandDance/tree/master/packages/vega-deck.gl) ([Vega](https://vega.github.io/))
- [earthengine-layers](https://earthengine-layers.com/) ([Google Earth Engine](https://earthengine.google.com/))
- [deck.gl-native](https://github.com/UnfoldedInc/deck.gl-native) (C++)
- [deck.gl-raster](https://github.com/kylebarron/deck.gl-raster/) (Computation on rasters)

## Learning Resources

* [API documentation](https://deck.gl/docs) for the latest release
* [Website demos](https://deck.gl/examples) with links to source
* [Interactive playground](https://deck.gl/playground)
* [deck.gl Codepen demos](https://codepen.io/vis-gl/)
* [deck.gl Observable demos](https://beta.observablehq.com/@pessimistress)
* [vis.gl Medium blog](https://medium.com/vis-gl)
* [deck.gl Slack workspace](https://slack-invite.openjsf.org/)

## Contributing

deck.gl is part of vis.gl, an [OpenJS Foundation](https://openjsf.org/) project. Read the [contribution guidelines](/CONTRIBUTING.md) if you are interested in contributing.


## Attributions

#### Data sources

Data sources are listed in each example.


#### The deck.gl project is supported by

&lt;a href=&quot;https://www.unfolded.ai&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/visgl/deck.gl-data/master/images/branding/unfolded.png&quot; height=&quot;32&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://www.foursquare.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/visgl/deck.gl-data/master/images/branding/fsq.svg&quot; height=&quot;40&quot; /&gt;&lt;/a&gt;

&lt;a href=&quot;https://www.carto.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/visgl/deck.gl-data/master/images/branding/carto.svg&quot; height=&quot;48&quot; /&gt;&lt;/a&gt;

&lt;a href=&quot;https://www.mapbox.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/visgl/deck.gl-data/master/images/branding/mapbox.svg&quot; height=&quot;44&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://www.uber.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/visgl/deck.gl-data/master/images/branding/uber.png&quot; height=&quot;40&quot; /&gt;&lt;/a&gt;

&lt;a href=&quot;https://www.browserstack.com/&quot;&gt;&lt;img src=&quot;https://d98b8t1nnulk5.cloudfront.net/production/images/static/logo.svg&quot; alt=&quot;BrowserStack&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[mui/material-ui]]></title>
            <link>https://github.com/mui/material-ui</link>
            <guid>https://github.com/mui/material-ui</guid>
            <pubDate>Sat, 17 May 2025 00:04:52 GMT</pubDate>
            <description><![CDATA[Material UI: Comprehensive React component library that implements Google's Material Design. Free forever.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mui/material-ui">mui/material-ui</a></h1>
            <p>Material UI: Comprehensive React component library that implements Google's Material Design. Free forever.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 95,642</p>
            <p>Forks: 32,568</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre>&lt;!-- #host-reference --&gt;
&lt;!-- markdownlint-disable-next-line --&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://mui.com/core/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;img width=&quot;150&quot; height=&quot;133&quot; src=&quot;https://mui.com/static/logo.svg&quot; alt=&quot;Material¬†UI logo&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt;Material¬†UI&lt;/h1&gt;

&lt;div align=&quot;center&quot;&gt;

[![license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/mui/material-ui/blob/HEAD/LICENSE)
[![npm latest package](https://img.shields.io/npm/v/@mui/material/latest.svg)](https://www.npmjs.com/package/@mui/material)
[![npm next package](https://img.shields.io/npm/v/@mui/material/next.svg)](https://www.npmjs.com/package/@mui/material)
[![npm downloads](https://img.shields.io/npm/dm/@mui/material.svg)](https://www.npmjs.com/package/@mui/material)
[![GitHub branch status](https://img.shields.io/github/checks-status/mui/material-ui/HEAD)](https://github.com/mui/material-ui/commits/HEAD/)
[![Coverage Status](https://img.shields.io/codecov/c/github/mui/material-ui.svg)](https://app.codecov.io/gh/mui/material-ui/)
[![Follow on X](https://img.shields.io/twitter/follow/MaterialUI.svg?label=follow+Material+UI)](https://x.com/MaterialUI)
[![Renovate status](https://img.shields.io/badge/renovate-enabled-brightgreen.svg)](https://github.com/mui/material-ui/issues/27062)
[![Average time to resolve an issue](https://isitmaintained.com/badge/resolution/mui/material-ui.svg)](https://isitmaintained.com/project/mui/material-ui &#039;Average time to resolve an issue&#039;)
[![Open¬†Collective backers and sponsors](https://img.shields.io/opencollective/all/mui-org)](https://opencollective.com/mui-org)
[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/1320/badge)](https://www.bestpractices.dev/projects/1320)

&lt;/div&gt;

[Material¬†UI](https://mui.com/material-ui/) is a comprehensive library of React components that features our independent implementation of Google&#039;s [Material Design](https://m2.material.io/design/introduction/) system.
It&#039;s trusted by some of the world&#039;s greatest product teams because it&#039;s been rigorously battle-tested through more than a decade of development by thousands of open-source contributors.

Material¬†UI&#039;s core functionality is extended by [MUI¬†X](https://github.com/mui/mui-x), a suite of complex components for advanced use cases.
[Toolpad](https://github.com/mui/toolpad) builds on top of Material¬†UI to provide full-stack components and a low-code internal tool builder.

## Documentation

Get started in the [Material¬†UI documentation](https://mui.com/material-ui/getting-started/).

&lt;details&gt;
  &lt;summary&gt;Older versions&lt;/summary&gt;

- **[v5.x](https://v5.mui.com/)** ([Upgrading from v5 to v6](https://mui.com/material-ui/migration/upgrade-to-v6/))
- **[v4.x](https://v4.mui.com/)** ([Upgrading from v4 to v5](https://mui.com/material-ui/migration/migration-v4/))
- **[v3.x](https://v3.mui.com/)** ([Upgrading from v3 to v4](https://mui.com/material-ui/migration/migration-v3/))
- **[v0.x](https://v0.mui.com/)** ([Upgrading to v1](https://mui.com/material-ui/migration/migration-v0x/))

&lt;/details&gt;

**Note:** `@next` points to pre-releases.
Use `@latest` for the latest stable release.

## Joy UI

This repository also contains Joy UI, an experimental component library that implements our own in-house Joy Design.
Joy UI is in beta and _development is currently on hold_.
When starting a new project from scratch, we recommend Material¬†UI over Joy UI because we can guarantee ongoing support.

Keep in mind that the maintainers are primarily focused on other projects and may not be able to respond in a timely manner to issues or pull requests related to Joy UI.

View the [Joy UI documentation](https://mui.com/joy-ui/getting-started/).

## Sponsors

### Diamond üíé

&lt;p&gt;
  &lt;a href=&quot;https://www.doit.com/?utm_source=mui.com&amp;utm_medium=referral&amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;128&quot; width=&quot;128&quot; src=&quot;https://mui.com/static/sponsors/doit-square.svg&quot; alt=&quot;doit&quot; title=&quot;Management Platform for Google Cloud and AWS&quot; loading=&quot;lazy&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

Diamond sponsors are those who have pledged \$1,500/month or more to MUI.

### Gold üèÜ

via [Open¬†Collective](https://opencollective.com/mui-org) or via [Patreon](https://www.patreon.com/oliviertassinari)

&lt;p&gt;
  &lt;a href=&quot;https://tidelift.com/?utm_source=npm-material-ui&amp;utm_medium=referral&amp;utm_campaign=homepage&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;96&quot; width=&quot;96&quot; src=&quot;https://avatars.githubusercontent.com/u/30204434?s=288&quot; alt=&quot;tidelift.com&quot; title=&quot;Tidelift: Enterprise-ready open-source software.&quot; loading=&quot;lazy&quot; /&gt;&lt;/a&gt;
  &amp;nbsp;
  &lt;a href=&quot;https://www.text-em-all.com/?utm_source=mui.com&amp;utm_medium=referral&amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1262264?s=288&quot; alt=&quot;text-em-all.com&quot; title=&quot;Text-em-all: Mass text messaging and automated calling.&quot; height=&quot;96&quot; width=&quot;96&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt;
  &amp;nbsp;
  &lt;a href=&quot;https://www.dialmycalls.com/?utm_source=mui.com&amp;utm_medium=referral&amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;96&quot; width=&quot;96&quot; src=&quot;https://images.opencollective.com/dialmycalls/f5ae9ab/avatar/288.png&quot; alt=&quot;dialmycalls.com&quot; title=&quot;DialMyCalls: Send text messages, calls, and emails.&quot; loading=&quot;lazy&quot; /&gt;&lt;/a&gt;
  &amp;nbsp;
&lt;/p&gt;

&lt;p&gt;
  &lt;a href=&quot;https://goread.io/?utm_source=mui.com&amp;utm_medium=referral&amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;26&quot; width=&quot;23&quot; src=&quot;https://images.opencollective.com/goread_io/eb6337d/logo/78.png&quot; alt=&quot;goread.io&quot; title=&quot;Goread.io: Instagram followers, likes, views, and comments.&quot; loading=&quot;lazy&quot; /&gt;Goread.io&lt;/a&gt;
  &amp;nbsp;
  &lt;a href=&quot;https://buzzoid.com/?utm_source=mui.com&amp;utm_medium=referral&amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;26&quot; width=&quot;26&quot; src=&quot;https://images.opencollective.com/buzzoidz/d23d9bb/logo/78.png&quot; alt=&quot;buzzoid.com&quot; title=&quot;Buzzoid: Instant delivery Instagram followers.&quot; loading=&quot;lazy&quot; /&gt;Buzzoid&lt;/a&gt;
  &amp;nbsp;
  &lt;a href=&quot;https://twicsy.com/?utm_source=mui.com&amp;utm_medium=referral&amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;26&quot; width=&quot;30&quot; src=&quot;https://images.opencollective.com/twicsy/7af290f/logo/78.png&quot; alt=&quot;twicsy.com&quot; title=&quot;Twicsy: Instant delivery Instagram followers.&quot; loading=&quot;lazy&quot; /&gt;Twicsy&lt;/a&gt;
  &amp;nbsp;
  &lt;a href=&quot;https://views4you.com/?utm_source=mui.com&amp;utm_medium=referral&amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;26&quot; width=&quot;26&quot; src=&quot;https://images.opencollective.com/buy-instagram-followers-v4y/6364714/logo/78.png&quot; alt=&quot;views4you.com&quot; title=&quot;Views4you: Social media growth services.&quot; loading=&quot;lazy&quot; /&gt;Views4You&lt;/a&gt;
  &amp;nbsp;
  &lt;a href=&quot;https://poprey.com/?utm_source=mui.com&amp;utm_medium=referral&amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;26&quot; width=&quot;26&quot; src=&quot;https://images.opencollective.com/instagram-likes/2a72a03/logo/78.png&quot; alt=&quot;poprey.com&quot; title=&quot;Poprey: Buy Instagram likes with crypto.&quot; loading=&quot;lazy&quot; /&gt;Poprey&lt;/a&gt;
  &amp;nbsp;
  &lt;a href=&quot;https://www.socialwick.com/instagram/followers/?utm_source=mui.com&amp;utm_medium=referral&amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;26&quot; width=&quot;26&quot; src=&quot;https://images.opencollective.com/instagram-followers-socialwick/ac6033a/logo/256.png&quot; alt=&quot;socialwick.com/instagram/followers&quot; title=&quot;SocialWick: Buy Instagram followers.&quot; loading=&quot;lazy&quot; /&gt;SocialWick&lt;/a&gt;
  &amp;nbsp;
 &lt;a href=&quot;https://www.follower24.de/?utm_source=mui.com&amp;utm_medium=referral&amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;26&quot; width=&quot;26&quot; src=&quot;https://mui.com/static/sponsors/follower24-square.svg&quot; alt=&quot;follower24.de&quot; title=&quot;Follower24: Social media success.&quot; loading=&quot;lazy&quot; /&gt;Follower24&lt;/a&gt;
  &amp;nbsp;
&lt;/p&gt;

Gold sponsors are those who have pledged \$500/month or more to MUI.

### More backers

See the full list of [our backers](https://mui.com/material-ui/discover-more/backers/).

## Questions

For how-to questions that don&#039;t involve making changes to the code base, please use [Stack¬†Overflow](https://stackoverflow.com/questions/) instead of GitHub issues.

## Examples

&lt;!-- #target-branch-reference --&gt;

Our documentation features [a collection of example projects](https://github.com/mui/material-ui/tree/master/examples).

## Premium templates

You can find complete templates and themes in the [MUI¬†Store](https://mui.com/store/?utm_source=docs&amp;utm_medium=referral&amp;utm_campaign=readme-store).

## Contributing

Read the [contributing guide](/CONTRIBUTING.md) to learn about our development process, how to propose bug fixes and improvements, and how to build and test your changes.

Contributing is about more than just issues and pull requests!
There are many other ways to [support Material¬†UI](https://mui.com/material-ui/getting-started/faq/#mui-is-an-awesome-organization-how-can-i-support-it) beyond contributing to the code base.

## Changelog

The [changelog](https://github.com/mui/material-ui/releases) is regularly updated to reflect what&#039;s changed in each new release.

## Roadmap

Future plans and high-priority features and enhancements can be found in the [roadmap](https://mui.com/material-ui/discover-more/roadmap/).

## License

This project is licensed under the terms of the [MIT license](/LICENSE).

## Security

For details on supported versions and contact information for reporting security issues, please refer to the [security policy](https://github.com/mui/material-ui/security/policy).

## Sponsoring services

These great services sponsor MUI&#039;s core infrastructure:

&lt;div&gt;
&lt;picture&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://mui.com/static/readme/github-darkmode.svg&quot;&gt;
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://mui.com/static/readme/github-lightmode.svg&quot;&gt;
  &lt;img alt=&quot;GitHub logo&quot; src=&quot;https://mui.com/static/readme/github-lightmode.svg&quot; width=&quot;80&quot; height=&quot;43&quot;&gt;
&lt;/picture&gt;

[GitHub](https://github.com/) lets us host the Git repository and coordinate contributions.

&lt;/div&gt;

&lt;div&gt;
&lt;picture&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://mui.com/static/readme/netlify-darkmode.svg&quot;&gt;
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://mui.com/static/readme/netlify-lightmode.svg&quot;&gt;
  &lt;img alt=&quot;Netlify logo&quot; src=&quot;https://mui.com/static/readme/netlify-lightmode.svg&quot; width=&quot;100&quot; height=&quot;27&quot;&gt;
&lt;/picture&gt;

[Netlify](https://www.netlify.com/) lets us distribute the documentation.

&lt;/div&gt;

&lt;div&gt;
&lt;picture&gt;
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://mui.com/static/readme/browserstack-darkmode.svg&quot;&gt;
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://mui.com/static/readme/browserstack-lightmode.svg&quot;&gt;
  &lt;img alt=&quot;BrowserStack logo&quot; src=&quot;https://mui.com/static/readme/browserstack-lightmode.svg&quot; width=&quot;140&quot; height=&quot;25&quot;&gt;
&lt;/picture&gt;

[BrowserStack](https://www.browserstack.com/) lets us test in real browsers.

&lt;/div&gt;

&lt;div&gt;
&lt;img loading=&quot;lazy&quot; alt=&quot;CodeCov logo&quot; src=&quot;https://avatars.githubusercontent.com/u/8226205?s=105&quot; width=&quot;35&quot; height=&quot;35&quot;&gt;

[CodeCov](https://about.codecov.io/) lets us monitor test coverage.

&lt;/div&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[langgenius/webapp-conversation]]></title>
            <link>https://github.com/langgenius/webapp-conversation</link>
            <guid>https://github.com/langgenius/webapp-conversation</guid>
            <pubDate>Sat, 17 May 2025 00:04:51 GMT</pubDate>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/langgenius/webapp-conversation">langgenius/webapp-conversation</a></h1>
            <p></p>
            <p>Language: TypeScript</p>
            <p>Stars: 823</p>
            <p>Forks: 1,483</p>
            <p>Stars today: 6 stars today</p>
            <h2>README</h2><pre># Conversation Web App Template
This is a [Next.js](https://nextjs.org/) project bootstrapped with [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app).

## Config App
Create a file named `.env.local` in the current directory and copy the contents from `.env.example`. Setting the following content:
```
# APP ID: This is the unique identifier for your app. You can find it in the app&#039;s detail page URL. 
# For example, in the URL `https://cloud.dify.ai/app/xxx/workflow`, the value `xxx` is your APP ID.
NEXT_PUBLIC_APP_ID=

# APP API Key: This is the key used to authenticate your app&#039;s API requests. 
# You can generate it on the app&#039;s &quot;API Access&quot; page by clicking the &quot;API Key&quot; button in the top-right corner.
NEXT_PUBLIC_APP_KEY=

# APP URL: This is the API&#039;s base URL. If you&#039;re using the Dify cloud service, set it to: https://api.dify.ai/v1.
NEXT_PUBLIC_API_URL=
```

Config more in `config/index.ts` file:   
```js
export const APP_INFO: AppInfo = {
  title: &#039;Chat APP&#039;,
  description: &#039;&#039;,
  copyright: &#039;&#039;,
  privacy_policy: &#039;&#039;,
  default_language: &#039;zh-Hans&#039;
}

export const isShowPrompt = true
export const promptTemplate = &#039;&#039;
```

## Getting Started
First, install dependencies:
```bash
npm install
# or
yarn
# or
pnpm install
```

Then, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
```
Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

## Using Docker

```
docker build . -t &lt;DOCKER_HUB_REPO&gt;/webapp-conversation:latest
# now you can access it in port 3000
docker run -p 3000:3000 &lt;DOCKER_HUB_REPO&gt;/webapp-conversation:latest
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js/) - your feedback and contributions are welcome!

## Deploy on Vercel

&gt; ‚ö†Ô∏è If you are using [Vercel Hobby](https://vercel.com/pricing), your message will be truncated due to the limitation of vercel.


The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&amp;filter=next.js&amp;utm_source=create-next-app&amp;utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/deployment) for more details.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[MetaMask/metamask-extension]]></title>
            <link>https://github.com/MetaMask/metamask-extension</link>
            <guid>https://github.com/MetaMask/metamask-extension</guid>
            <pubDate>Sat, 17 May 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[üåê üîå The MetaMask browser extension enables browsing Ethereum blockchain enabled websites]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/MetaMask/metamask-extension">MetaMask/metamask-extension</a></h1>
            <p>üåê üîå The MetaMask browser extension enables browsing Ethereum blockchain enabled websites</p>
            <p>Language: TypeScript</p>
            <p>Stars: 12,553</p>
            <p>Forks: 5,173</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre># MetaMask Browser Extension

You can find the latest version of MetaMask on [our official website](https://metamask.io/). For help using MetaMask, visit our [User Support Site](https://support.metamask.io/).

For [general questions](https://community.metamask.io/c/learn/26), [feature requests](https://community.metamask.io/c/feature-requests-ideas/13), or [developer questions](https://community.metamask.io/c/developer-questions/11), visit our [Community Forum](https://community.metamask.io/).

MetaMask supports Firefox, Google Chrome, and Chromium-based browsers. We recommend using the latest available browser version.

For up to the minute news, follow us on [X](https://x.com/MetaMask).

To learn how to develop MetaMask-compatible applications, visit our [Developer Docs](https://docs.metamask.io/).

To learn how to contribute to the MetaMask codebase, visit our [Contributor Docs](https://github.com/MetaMask/contributor-docs).

To learn how to contribute to the MetaMask Extension project itself, visit our [Extension Docs](https://github.com/MetaMask/metamask-extension/tree/main/docs).

## GitHub Codespaces quickstart

As an alternative to building on your local machine, there is a new option to get a development environment up and running in less than 5 minutes by using GitHub Codespaces. Please note that there is a [Limited Free Monthly Quota](https://docs.github.com/en/billing/managing-billing-for-github-codespaces/about-billing-for-github-codespaces), and after that GitHub will start charging you.

_Note: You are billed for both time spent running, and for storage used_

[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/MetaMask/metamask-extension?quickstart=1)

1. Start by clicking the button above
2. A new browser tab will open with a remote version of Visual Studio Code (this will take a few minutes to load)
3. A &quot;Simple Browser&quot; will open inside the browser with noVNC -- click Connect
   - Optional steps:
     - Click the button at the upper-right of the Simple Browser tab to open the noVNC window in its own tab
     - Open the noVNC sidebar on the left, click the gear icon, change the Scaling Mode to Remote Resizing
4. Wait about 20 extra seconds on the first launch, for the scripts to finish
5. Right-click on the noVNC desktop to launch Chrome or Firefox with MetaMask pre-installed
6. Change some code, then run `yarn start` to build in dev mode
7. After a minute or two, it will finish building, and you can see your changes in the noVNC desktop

### Tips to keep your Codespaces usage lower

- You are billed for both time spent running, and for storage used
- Codespaces pause after 30 minutes of inactivity, and auto-delete after 30 days of inactivity
- You can manage your Codespaces here: https://github.com/codespaces
  - You may want to manually pause them before the 30 minute timeout
  - If you have several idle Codespaces hanging around for several days, you can quickly run out of storage quota. You should delete the ones you do not plan to use anymore, and probably keep only 1 or 2 in the long-term. It&#039;s also possible to re-use old Codespaces and switch the branch, instead of creating new ones and deleting the old ones.

### Codespaces on a fork

If you are not a MetaMask Internal Developer, or are otherwise developing on a fork, the default Infura key will be on the Free Plan and have very limited requests per second. If you want to use your own Infura key, follow the `.metamaskrc` and `INFURA_PROJECT_ID` instructions in the section [Building on your local machine](#building-on-your-local-machine).

## Building on your local machine

- Install [Node.js](https://nodejs.org) version 20
  - If you are using [nvm](https://github.com/nvm-sh/nvm#installing-and-updating) (recommended) running `nvm use` will automatically choose the right node version for you.
- Enable Corepack by executing the command `corepack enable` within the metamask-extension project. Corepack is a utility included with Node.js by default. It manages Yarn on a per-project basis, using the version specified by the `packageManager` property in the project&#039;s package.json file. Please note that modern releases of [Yarn](https://yarnpkg.com/getting-started/install) are not intended to be installed globally or via npm.
- Duplicate `.metamaskrc.dist` within the root and rename it to `.metamaskrc` by running `cp .metamaskrc{.dist,}`.

  - Replace the `INFURA_PROJECT_ID` value with your own personal [Infura API Key](https://docs.infura.io/networks/ethereum/how-to/secure-a-project/project-id).
    - If you don&#039;t have an Infura account, you can create one for free on the [Infura website](https://app.infura.io/register).
  - If debugging MetaMetrics, you&#039;ll need to add a value for `SEGMENT_WRITE_KEY` [Segment write key](https://segment.com/docs/connections/find-writekey/), see [Developing on MetaMask - Segment](./development/README.md#segment).
  - If debugging unhandled exceptions, you&#039;ll need to add a value for `SENTRY_DSN` [Sentry Dsn](https://docs.sentry.io/product/sentry-basics/dsn-explainer/), see [Developing on MetaMask - Sentry](./development/README.md#sentry).
  - Optionally, replace the `PASSWORD` value with your development wallet password to avoid entering it each time you open the app.
  - If developing with remote feature flags, and you want to override the flags in the build process, you can add a `.manifest-overrides.json` file to the root of the project and set `MANIFEST_OVERRIDES=.manifest-overrides.json` in `.metamaskrc` to the path of the file.
    This file is used to add flags to `manifest.json` build files for the extension. You can also modify the `_flags.remoteFeatureFlags` in the built version of `manifest.json` in the `dist/browser` folder to tweak the flags after the build process (these changes will get overwritten when you build again).
    An example of this remote feature flag overwrite could be:

  ```json
  {
    &quot;_flags&quot;: {
      &quot;remoteFeatureFlags&quot;: { &quot;testBooleanFlag&quot;: false }
    }
  }
  ```

- Run `yarn install` to install the dependencies.
- Build the project to the `./dist/` folder with `yarn dist` (for Chromium-based browsers) or `yarn dist:mv2` (for Firefox)

  - Optionally, to create a development build you can instead run `yarn start` (for Chromium-based browsers) or `yarn start:mv2` (for Firefox)
  - Uncompressed builds can be found in `/dist`, compressed builds can be found in `/builds` once they&#039;re built.
  - See the [build system readme](./development/build/README.md) for build system usage information.

- Follow these instructions to verify that your local build runs correctly:
  - [How to add custom build to Chrome](./docs/add-to-chrome.md)
  - [How to add custom build to Firefox](./docs/add-to-firefox.md)

## Git Hooks

To get quick feedback from our shared code quality fitness functions before committing the code, you can install our git hooks with Husky.

`$ yarn githooks:install`

You can read more about them in our [testing documentation](./docs/testing.md#fitness-functions-measuring-progress-in-code-quality-and-preventing-regressions-using-custom-git-hooks).

If you are using VS Code and are unable to make commits from the source control sidebar due to a &quot;command not found&quot; error, try these steps from the [Husky docs](https://typicode.github.io/husky/troubleshooting.html#command-not-found).

## Contributing

### Development builds

To start a development build (e.g. with logging and file watching) run `yarn start`.

#### Development build with wallet state

You can start a development build with a preloaded wallet state, by adding `TEST_SRP=&#039;&lt;insert SRP here&gt;&#039;` and `PASSWORD=&#039;&lt;insert wallet password here&gt;&#039;` to the `.metamaskrc` file. Then you have the following options:

1. Start the wallet with the default fixture flags, by running `yarn start:with-state`.
2. Check the list of available fixture flags, by running `yarn start:with-state --help`.
3. Start the wallet with custom fixture flags, by running `yarn start:with-state --FIXTURE_NAME=VALUE` for example `yarn start:with-state --withAccounts=100`. You can pass as many flags as you want. The rest of the fixtures will take the default values.

#### Development build with Webpack

You can also start a development build using the `yarn webpack` command, or `yarn webpack --watch`. This uses an alternative build system that is much faster, but not yet production ready. See the [Webpack README](./development/webpack/README.md) for more information.

#### React and Redux DevTools

To start the [React DevTools](https://github.com/facebook/react-devtools), run `yarn devtools:react` with a development build installed in a browser. This will open in a separate window; no browser extension is required.

To start the [Redux DevTools Extension](https://github.com/reduxjs/redux-devtools/tree/main/extension):

- Install the package `remotedev-server` globally (e.g. `yarn global add remotedev-server`)
- Install the Redux Devtools extension.
- Open the Redux DevTools extension and check the &quot;Use custom (local) server&quot; checkbox in the Remote DevTools Settings, using the default server configuration (host `localhost`, port `8000`, secure connection checkbox unchecked).

Then run the command `yarn devtools:redux` with a development build installed in a browser. This will enable you to use the Redux DevTools extension to inspect MetaMask.

To create a development build and run both of these tools simultaneously, run `yarn start:dev`.

#### Test Dapp

[This test site](https://metamask.github.io/test-dapp/) can be used to execute different user flows.

### Running Unit Tests and Linting

Run unit tests and the linter with `yarn test`. To run just unit tests, run `yarn test:unit`.

You can run the linter by itself with `yarn lint`, and you can automatically fix some lint problems with `yarn lint:fix`. You can also run these two commands just on your local changes to save time with `yarn lint:changed` and `yarn lint:changed:fix` respectively.

For Jest debugging guide using Node.js, see [docs/tests/jest.md](docs/tests/jest.md).

### Running E2E Tests

Our e2e test suite can be run on either Firefox or Chrome. Here&#039;s how to get started with e2e testing:

#### Preparing a Test Build

Before running e2e tests, ensure you&#039;ve run `yarn install` to download dependencies. Next, you&#039;ll need a test build. You have 3 options:

1. Use `yarn download-builds:test` to quickly download and unzip test builds for Chrome and Firefox into the `./dist/` folder. This method is fast and convenient for standard testing.
2. Create a custom test build: for testing against different build types, use `yarn build:test`. This command allows you to generate test builds for various types, including:
   - `yarn build:test` for main build
   - `yarn build:test:flask` for flask build
   - `yarn build:test:mv2` for mv2 build
   - `yarn build:test:mmi` for mmi build
3. Start a test build with live changes: `yarn start:test` is particularly useful for development. It starts a test build that automatically recompiles application code upon changes. This option is ideal for iterative testing and development. This command also allows you to generate test builds for various types, including:
   - `yarn start:test` for main build
   - `yarn start:test:flask` for flask build
   - `yarn start:test:mv2` for mv2 build

Note: The `yarn start:test` command (which initiates the testDev build type) has LavaMoat disabled for both the build system and the application, offering a streamlined testing experience during development. On the other hand, `yarn build:test` enables LavaMoat for enhanced security in both the build system and application, mirroring production environments more closely.

#### Running Tests

Once you have your test build ready, choose the browser for your e2e tests:

- For Firefox, run `yarn test:e2e:firefox`.
  - Note: If you are running Firefox as a snap package on Linux, ensure you enable the appropriate environment variable: `FIREFOX_SNAP=true yarn test:e2e:firefox`
- For Chrome, run `yarn test:e2e:chrome`.

These scripts support additional options for debugging. Use `--help`to see all available options.

#### Running a single e2e test

Single e2e tests can be run with `yarn test:e2e:single test/e2e/tests/TEST_NAME.spec.js` along with the options below.

```console
  --browser           Set the browser to be used; specify &#039;chrome&#039;, &#039;firefox&#039;, &#039;all&#039;
                      or leave unset to run on &#039;all&#039; by default.
                                                          [string] [default: &#039;all&#039;]
  --debug             Run tests in debug mode, logging each driver interaction
                                                         [boolean] [default: true]
  --retries           Set how many times the test should be retried upon failure.
                                                              [number] [default: 0]
  --leave-running     Leaves the browser running after a test fails, along with
                      anything else that the test used (ganache, the test dapp,
                      etc.)                              [boolean] [default: false]
  --update-snapshot   Update E2E test snapshots
                                             [alias: -u] [boolean] [default: false]
```

For example, to run the `account-details` tests using Chrome, with debug logging and with the browser set to remain open upon failure, you would use:
`yarn test:e2e:single test/e2e/tests/account-menu/account-details.spec.js --browser=chrome --leave-running`

#### Running e2e tests against specific feature flag

While developing new features, we often use feature flags. As we prepare to make these features generally available (GA), we remove the feature flags. Existing feature flags are listed in the `.metamaskrc.dist` file. To execute e2e tests with a particular feature flag enabled, it&#039;s necessary to first generate a test build with that feature flag activated. There are two ways to achieve this:

- To enable a feature flag in your local configuration, you should first ensure you have a `.metamaskrc` file copied from `.metamaskrc.dist`. Then, within your local `.metamaskrc` file, you can set the desired feature flag to true. Following this, a test build with the feature flag enabled can be created by executing `yarn build:test`.

- Alternatively, for enabling a feature flag directly during the test build creation, you can pass the parameter as true via the command line. For instance, activating the MULTICHAIN feature flag can be done by running `MULTICHAIN=1 yarn build:test` or `MULTICHAIN=1 yarn start:test` . This method allows for quick adjustments to feature flags without altering the `.metamaskrc` file.

Once you&#039;ve created a test build with the desired feature flag enabled, proceed to run your tests as usual. Your tests will now run against the version of the extension with the specific feature flag activated. For example:
`yarn test:e2e:single test/e2e/tests/account-menu/account-details.spec.js --browser=chrome`

This approach ensures that your e2e tests accurately reflect the user experience for the upcoming GA features.

#### Running specific builds types e2e test

Different build types have different e2e tests sets. In order to run them look in the `package.json` file. You will find:

```console
    &quot;test:e2e:chrome:snaps&quot;: &quot;SELENIUM_BROWSER=chrome node test/e2e/run-all.js --snaps&quot;,
    &quot;test:e2e:firefox&quot;: &quot;SELENIUM_BROWSER=firefox node test/e2e/run-all.js&quot;,
```

### Changing dependencies

Whenever you change dependencies (adding, removing, or updating, either in `package.json` or `yarn.lock`), there are various files that must be kept up-to-date.

- `yarn.lock`:
  - Run `yarn` again after your changes to ensure `yarn.lock` has been properly updated.
  - Run `yarn lint:lockfile:dedupe:fix` to remove duplicate dependencies from the lockfile.
- The `allow-scripts` configuration in `package.json`
  - Run `yarn allow-scripts auto` to update the `allow-scripts` configuration automatically. This config determines whether the package&#039;s install/postinstall scripts are allowed to run. Review each new package to determine whether the install script needs to run or not, testing if necessary.
  - Unfortunately, `yarn allow-scripts auto` will behave inconsistently on different platforms. macOS and Windows users may see extraneous changes relating to optional dependencies.
- The LavaMoat policy files
  - If you are a MetaMask team member and your PR is on a repository branch, you can use the bot command `@metamaskbot update-policies` to ask the MetaMask bot to automatically update the policies for you.
  - If your PR is from a fork, you can ask a MetaMask team member to help with updating the policy files.
  - Manual update instructions: The _tl;dr_ is to run `yarn lavamoat:auto` to update these files, but there can be devils in the details:
    - There are two sets of LavaMoat policy files:
      - The production LavaMoat policy files (`lavamoat/browserify/*/policy.json`), which are re-generated using `yarn lavamoat:webapp:auto`. Add `--help` for usage.
        - These should be regenerated whenever the production dependencies for the webapp change.
      - The build system LavaMoat policy file (`lavamoat/build-system/policy.json`), which is re-generated using `yarn lavamoat:build:auto`.
        - This should be regenerated whenever the dependencies used by the build system itself change.
    - Whenever you regenerate a policy file, review the changes to determine whether the access granted to each package seems appropriate.
    - Unfortunately, `yarn lavamoat:auto` will behave inconsistently on different platforms.
      macOS and Windows users may see extraneous changes relating to optional dependencies.
    - If you keep getting policy failures even after regenerating the policy files, try regenerating the policies after a clean install by doing:
      - `rm -rf node_modules/ &amp;&amp; yarn &amp;&amp; yarn lavamoat:auto`
    - Keep in mind that any kind of dynamic import or dynamic use of globals may elude LavaMoat&#039;s static analysis.
      Refer to the LavaMoat documentation or ask for help if you run into any issues.
- The Attributions file
  - If you are a MetaMask team member and your PR is on a repository branch, you can use the bot command `@metamaskbot update-attributions` to ask the MetaMask bot to automatically update the attributions file for you.
  - Manual update: run `yarn attributions:generate`.

## Architecture

- [Visual of the controller hierarchy and dependencies as of summer 2022.](https://gist.github.com/rekmarks/8dba6306695dcd44967cce4b6a94ae33)
- [Visual of the entire codebase.](https://mango-dune-07a8b7110.1.azurestaticapps.net/?repo=metamask%2Fmetamask-extension)

[![Architecture Diagram](./docs/architecture.png)][1]

## Other Docs

- [How to add a new translation to MetaMask](./docs/translating-guide.md)
- [Publishing Guide](./docs/publishing.md)
- [How to use the TREZOR emulator](./docs/trezor-emulator.md)
- [Developing on MetaMask](./development/README.md)
- [How to generate a visualization of this repository&#039;s development](./development/gource-viz.sh)
- [How to add new confirmations](./docs/confirmations.md)
- [Browser support guidelines](./docs/browser-support.md)

## Dapp Developer Resources

- [Extend MetaMask&#039;s features w/ MetaMask Snaps.](https://docs.metamask.io/snaps/)
- [Prompt your users to add and switch to a new network.](https://docs.metamask.io/wallet/how-to/add-network/)
- [Change the logo that appears when your dapp connects to MetaMask.](https://docs.metamask.io/wallet/how-to/display/icon/)

[1]: http://www.nomnoml.com/#view/%5B%3Cactor%3Euser%5D%0A%0A%5Bmetamask-ui%7C%0A%20%20%20%5Btools%7C%0A%20%20%20%20%20react%0A%20%20%20%20%20redux%0A%20%20%20%20%20thunk%0A%20%20%20%20%20ethUtils%0A%20%20%20%20%20jazzicon%0A%20%20%20%5D%0A%20%20%20%5Bcomponents%7C%0A%20%20%20%20%20app%0A%20%20%20%20%20account-detail%0A%20%20%20%20%20accounts%0A%

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[supabase-community/supabase-mcp]]></title>
            <link>https://github.com/supabase-community/supabase-mcp</link>
            <guid>https://github.com/supabase-community/supabase-mcp</guid>
            <pubDate>Sat, 17 May 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[Connect Supabase to your AI assistants]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/supabase-community/supabase-mcp">supabase-community/supabase-mcp</a></h1>
            <p>Connect Supabase to your AI assistants</p>
            <p>Language: TypeScript</p>
            <p>Stars: 1,429</p>
            <p>Forks: 106</p>
            <p>Stars today: 11 stars today</p>
            <h2>README</h2><pre># Supabase MCP Server

&gt; Connect your Supabase projects to Cursor, Claude, Windsurf, and other AI assistants.

![supabase-mcp-demo](https://github.com/user-attachments/assets/3fce101a-b7d4-482f-9182-0be70ed1ad56)

The [Model Context Protocol](https://modelcontextprotocol.io/introduction) (MCP) standardizes how Large Language Models (LLMs) talk to external services like Supabase. It connects AI assistants directly with your Supabase project and allows them to perform tasks like managing tables, fetching config, and querying data. See the [full list of tools](#tools).

## Prerequisites

You will need Node.js installed on your machine. You can check this by running:

```shell
node -v
```

If you don&#039;t have Node.js installed, you can download it from [nodejs.org](https://nodejs.org/).

## Setup

### 1. Personal access token (PAT)

First, go to your [Supabase settings](https://supabase.com/dashboard/account/tokens) and create a personal access token. Give it a name that describes its purpose, like &quot;Cursor MCP Server&quot;.

This will be used to authenticate the MCP server with your Supabase account. Make sure to copy the token, as you won&#039;t be able to see it again.

### 2. Configure MCP client

Next, configure your MCP client (such as Cursor) to use this server. Most MCP clients store the configuration as JSON in the following format:

```json
{
  &quot;mcpServers&quot;: {
    &quot;supabase&quot;: {
      &quot;command&quot;: &quot;npx&quot;,
      &quot;args&quot;: [
        &quot;-y&quot;,
        &quot;@supabase/mcp-server-supabase@latest&quot;,
        &quot;--access-token&quot;,
        &quot;&lt;personal-access-token&gt;&quot;
      ]
    }
  }
}
```

Replace `&lt;personal-access-token&gt;` with the token you created in step 1. Alternatively you can omit `--access-token` and instead set the `SUPABASE_ACCESS_TOKEN` environment variable to your personal access token (you will need to restart your MCP client after setting this). This allows you to keep your token out of version control if you plan on committing this configuration to a repository.

The following additional options are available:

- `--project-ref`: Used to scope the server to a specific project. See [project scoped mode](#project-scoped-mode).
- `--read-only`: Used to restrict the server to read-only queries. See [read-only mode](#read-only-mode).

If you are on Windows, you will need to [prefix the command](#windows). If your MCP client doesn&#039;t accept JSON, the direct CLI command is:

```shell
npx -y @supabase/mcp-server-supabase@latest --access-token=&lt;personal-access-token&gt;
```

&gt; Note: Do not run this command directly - this is meant to be executed by your MCP client in order to start the server. `npx` automatically downloads the latest version of the MCP server from `npm` and runs it in a single command.

#### Windows

On Windows, you will need to prefix the command with `cmd /c`:

```json
{
  &quot;mcpServers&quot;: {
    &quot;supabase&quot;: {
      &quot;command&quot;: &quot;cmd&quot;,
      &quot;args&quot;: [
        &quot;/c&quot;,
        &quot;npx&quot;,
        &quot;-y&quot;,
        &quot;@supabase/mcp-server-supabase@latest&quot;,
        &quot;--access-token&quot;,
        &quot;&lt;personal-access-token&gt;&quot;
      ]
    }
  }
}
```

or with `wsl` if you are running Node.js inside WSL:

```json
{
  &quot;mcpServers&quot;: {
    &quot;supabase&quot;: {
      &quot;command&quot;: &quot;wsl&quot;,
      &quot;args&quot;: [
        &quot;npx&quot;,
        &quot;-y&quot;,
        &quot;@supabase/mcp-server-supabase@latest&quot;,
        &quot;--access-token&quot;,
        &quot;&lt;personal-access-token&gt;&quot;
      ]
    }
  }
}
```

Make sure Node.js is available in your system `PATH` environment variable. If you are running Node.js natively on Windows, you can set this by running the following commands in your terminal.

1. Get the path to `npm`:

   ```shell
   npm config get prefix
   ```

2. Add the directory to your PATH:

   ```shell
   setx PATH &quot;%PATH%;&lt;path-to-dir&gt;&quot;
   ```

3. Restart your MCP client.

### Project scoped mode

By default, the MCP server will have access to all organizations and projects in your Supabase account. If you want to restrict the server to a specific project, you can set the `--project-ref` flag on the CLI command:

```shell
npx -y @supabase/mcp-server-supabase@latest --access-token=&lt;personal-access-token&gt; --project-ref=&lt;project-ref&gt;
```

Replace `&lt;project-ref&gt;` with the ID of your project. You can find this under **Project ID** in your Supabase [project settings](https://supabase.com/dashboard/project/_/settings/general).

After scoping the server to a project, [account-level](#project-management) tools like `list_projects` and `list_organizations` will no longer be available. The server will only have access to the specified project and its resources.

### Read-only mode

If you wish to restrict the Supabase MCP server to read-only queries, set the `--read-only` flag on the CLI command:

```shell
npx -y @supabase/mcp-server-supabase@latest --access-token=&lt;personal-access-token&gt; --read-only
```

This prevents write operations on any of your databases by executing SQL as a read-only Postgres user. Note that this flag only applies to database tools (`execute_sql` and `apply_migration`) and not to other tools like `create_project` or `create_branch`.

## Tools

_**Note:** This server is pre-1.0, so expect some breaking changes between versions. Since LLMs will automatically adapt to the tools available, this shouldn&#039;t affect most users._

The following Supabase tools are available to the LLM:

#### Project Management

_**Note:** these tools will be unavailable if the server is [scoped to a project](#project-scoped-mode)._

- `list_projects`: Lists all Supabase projects for the user.
- `get_project`: Gets details for a project.
- `create_project`: Creates a new Supabase project.
- `pause_project`: Pauses a project.
- `restore_project`: Restores a project.
- `list_organizations`: Lists all organizations that the user is a member of.
- `get_organization`: Gets details for an organization.

#### Database Operations

- `list_tables`: Lists all tables within the specified schemas.
- `list_extensions`: Lists all extensions in the database.
- `list_migrations`: Lists all migrations in the database.
- `apply_migration`: Applies a SQL migration to the database. SQL passed to this tool will be tracked within the database, so LLMs should use this for DDL operations (schema changes).
- `execute_sql`: Executes raw SQL in the database. LLMs should use this for regular queries that don&#039;t change the schema.
- `get_logs`: Gets logs for a Supabase project by service type (api, postgres, edge functions, auth, storage, realtime). LLMs can use this to help with debugging and monitoring service performance.

#### Edge Function Management

- `list_edge_functions`: Lists all Edge Functions in a Supabase project.
- `deploy_edge_function`: Deploys a new Edge Function to a Supabase project. LLMs can use this to deploy new functions or update existing ones.

#### Project Configuration

- `get_project_url`: Gets the API URL for a project.
- `get_anon_key`: Gets the anonymous API key for a project.

#### Branching (Experimental, requires a paid plan)

- `create_branch`: Creates a development branch with migrations from production branch.
- `list_branches`: Lists all development branches.
- `delete_branch`: Deletes a development branch.
- `merge_branch`: Merges migrations and edge functions from a development branch to production.
- `reset_branch`: Resets migrations of a development branch to a prior version.
- `rebase_branch`: Rebases development branch on production to handle migration drift.

#### Development Tools

- `generate_typescript_types`: Generates TypeScript types based on the database schema. LLMs can save this to a file and use it in their code.

#### Cost Confirmation

- `get_cost`: Gets the cost of a new project or branch for an organization.
- `confirm_cost`: Confirms the user&#039;s understanding of new project or branch costs. This is required to create a new project or branch.

## Other MCP servers

### `@supabase/mcp-server-postgrest`

The PostgREST MCP server allows you to connect your own users to your app via REST API. See more details on its [project README](./packages/mcp-server-postgrest).

## Resources

- [**Model Context Protocol**](https://modelcontextprotocol.io/introduction): Learn more about MCP and its capabilities.
- [**From development to production**](/docs/production.md): Learn how to safely promote changes to production environments.

## For developers

This repo uses npm for package management, and the latest LTS version of Node.js.

Clone the repo and run:

```
npm install --ignore-scripts
```

&gt; [!NOTE]
&gt; On recent versions of MacOS, you may have trouble installing the `libpg-query` transient dependency without the `--ignore-scripts` flag.

## License

This project is licensed under Apache 2.0. See the [LICENSE](./LICENSE) file for details.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[nestjs/nest]]></title>
            <link>https://github.com/nestjs/nest</link>
            <guid>https://github.com/nestjs/nest</guid>
            <pubDate>Sat, 17 May 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[A progressive Node.js framework for building efficient, scalable, and enterprise-grade server-side applications with TypeScript/JavaScript üöÄ]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nestjs/nest">nestjs/nest</a></h1>
            <p>A progressive Node.js framework for building efficient, scalable, and enterprise-grade server-side applications with TypeScript/JavaScript üöÄ</p>
            <p>Language: TypeScript</p>
            <p>Stars: 70,926</p>
            <p>Forks: 7,873</p>
            <p>Stars today: 28 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[yangshun/tech-interview-handbook]]></title>
            <link>https://github.com/yangshun/tech-interview-handbook</link>
            <guid>https://github.com/yangshun/tech-interview-handbook</guid>
            <pubDate>Sat, 17 May 2025 00:04:47 GMT</pubDate>
            <description><![CDATA[üíØ Curated coding interview preparation materials for busy software engineers]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/yangshun/tech-interview-handbook">yangshun/tech-interview-handbook</a></h1>
            <p>üíØ Curated coding interview preparation materials for busy software engineers</p>
            <p>Language: TypeScript</p>
            <p>Stars: 126,210</p>
            <p>Forks: 15,394</p>
            <p>Stars today: 43 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;Tech Interview Handbook&lt;/h1&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.techinterviewhandbook.org/&quot;&gt;
    &lt;img src=&quot;assets/logo.svg&quot; alt=&quot;Tech Interview Handbook&quot; width=&quot;400&quot; /&gt;
  &lt;/a&gt;
  &lt;br /&gt;
  &lt;h3&gt;
    &lt;a href=&quot;https://www.techinterviewhandbook.org/&quot;&gt;Read on the website&lt;/a&gt;
  &lt;/h3&gt;
  &lt;p&gt;
    Join/follow us on &lt;a href=&quot;https://discord.gg/usMqNaPczq&quot; target=&quot;_blank&quot;&gt;Discord&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/techinterviewhb&quot; target=&quot;_blank&quot;&gt;ùïè (Twitter)&lt;/a&gt; | &lt;a href=&quot;https://t.me/techinterviewhandbook&quot; target=&quot;_blank&quot;&gt;Telegram&lt;/a&gt; |  &lt;a href=&quot;https://facebook.com/techinterviewhandbook&quot; target=&quot;_blank&quot;&gt;Facebook&lt;/a&gt;
  &lt;/p&gt;
&lt;/div&gt;

---

&lt;a href=&quot;https://www.techinterviewhandbook.org/software-engineering-interview-guide/&quot; target=&quot;_blank&quot;&gt;
  &lt;img src=&quot;assets/start-reading-button.jpg&quot; alt=&quot;Start Reading Tech Interview Handbook&quot; /&gt;
&lt;/a&gt;

## What is this?

Not everyone has the time to do a few hundred LeetCode questions. Here are _free and curated_ technical interview preparation materials for busy engineers, brought to you by me, the author of [Blind 75](https://www.teamblind.com/post/New-Year-Gift---Curated-List-of-Top-75-LeetCode-Questions-to-Save-Your-Time-OaM1orEU). Over 1,000,000 people have benefitted from this handbook!

Besides the usual algorithm questions, other **awesome** stuff includes:

- [Best practice questions](https://www.techinterviewhandbook.org/coding-interview-study-plan/) for coding interviews
- [Grind 75](https://www.techinterviewhandbook.org/grind75) - the next evolution of Blind 75, bigger and better
- [How to prepare](https://www.techinterviewhandbook.org/coding-interview-prep/) for coding interviews
- [Coding interview best practices](https://www.techinterviewhandbook.org/coding-interview-cheatsheet/) - Straight-to-the-point Do&#039;s and Don&#039;ts
- [Algorithm cheatsheets and tips](https://www.techinterviewhandbook.org/algorithms/study-cheatsheet/) categorized by topic
- [Step-by-step Software Engineer resume guide](https://www.techinterviewhandbook.org/resume/) to prepare a FAANG-ready resume
- [Behavioral questions](https://www.techinterviewhandbook.org/behavioral-interview-questions/) asked by the top tech companies
- [Front end interview preparation](https://www.frontendinterviewhandbook.com)

Help from you in contributing content would be very much appreciated!

## Why would you read this?

This repository has **practical** content that covers all phases of a technical interview, from applying for a job to passing the interviews to offer negotiation. Technically competent candidates might still find the non-technical content helpful.

The information in this repository is condensed. Ultimately, the key to succeeding in technical interviews is consistent practice and I don&#039;t want to bore you with too many words. I tell you the minimum you need to know on how to go about navigating the interview process, you go and practice and land your dream job.

## Who is this for?

Anybody who wants to land a job at a tech company but is new to technical interviews, seasoned engineers who have not been on the other side of the interviewing table in a while and want to get back into the game, or anyone who wants to be better at technical interviewing.

---

&lt;div align=&quot;center&quot;&gt;
  &lt;h3&gt;üí° Stop grinding mindlessly! Study coding question patterns efficiently with
    &lt;a href=&quot;https://designgurus.org/link/kJSIoU?url=https%3A%2F%2Fdesigngurus.org%2Fcourse%3Fcourseid%3Dgrokking-the-coding-interview&quot;&gt;Grokking the Coding Interview&lt;/a&gt; by Design Gurus üí°
  &lt;/h3&gt;
&lt;/div&gt;

---

## How is this repository different?

There are many awesome books like &quot;Cracking the Coding Interview&quot; and interview-related repositories out there on GitHub, what makes this repository different? The difference is that many existing interview repositories contain mainly links to external resources whereas this repository contains top-quality curated content directly for your consumption.

Also, existing resources focus mainly on algorithm questions and lack coverage for more domain-specific and non-technical questions. This handbook aims to cover content beyond the typical algorithmic coding questions. üòé

## Looking for interview courses?

### [AlgoMonster](https://shareasale.com/r.cfm?b=1873647&amp;u=3114753&amp;m=114505&amp;urllink=&amp;afftrack=)

AlgoMonster aims to help you ace the technical interview **in the shortest time possible**. By Google engineers, AlgoMonster uses a data-driven approach to teach you the most useful key question patterns and has contents to help you quickly revise basic data structures and algorithms. Best of all, AlgoMonster is not subscription-based - pay a one-time fee and get **lifetime access**. [**Join today for a 70% discount ‚Üí**](https://shareasale.com/r.cfm?b=1873647&amp;u=3114753&amp;m=114505&amp;urllink=&amp;afftrack=)

### [Grokking the Coding Interview: Patterns for Coding Questions](https://designgurus.org/link/kJSIoU?url=https%3A%2F%2Fdesigngurus.org%2Fcourse%3Fcourseid%3Dgrokking-the-coding-interview)

This course by Design Gurus expands upon the questions on the recommended practice questions but approaches the practicing from a questions pattern perspective, which is an approach I also agree with for learning and have personally used to get better at coding interviews. The course allows you to practice selected questions in Java, Python, C++, JavaScript and also provides sample solutions in those languages. **Learn and understand patterns, not memorize answers!** [**Get lifetime access today ‚Üí**](https://designgurus.org/link/kJSIoU?url=https%3A%2F%2Fdesigngurus.org%2Fcourse%3Fcourseid%3Dgrokking-the-coding-interview)

## Looking for Front End content?

Front-end-related content has been moved to a separate website - [Front End Interview Handbook](https://frontendinterviewhandbook.com).

## Looking for System Design content?

We&#039;re still working on System Design content. In the meanwhile, check out [ByteByteGo&#039;s System Design Interview course](https://bytebytego.com?fpr=techinterviewhandbook) or Design Gurus&#039; [Grokking the System Design Interview course](https://designgurus.org/link/kJSIoU?url=https%3A%2F%2Fdesigngurus.org%2Fcourse%3Fcourseid%3Dgrokking-the-system-design-interview), which in our opinion are among the most useful resources for getting started on system design interviews preparation.

## Contents

A [Docusaurus](https://github.com/facebook/docusaurus) website has been created to provide a better reading experience. Check out the website [here](https://www.techinterviewhandbook.org)!

---

&lt;div align=&quot;center&quot;&gt;
  &lt;h3&gt;üí° Stop the grind and study with a plan! Developed by Google engineers, &lt;a href=&quot;https://shareasale.com/r.cfm?b=1873647&amp;u=3114753&amp;m=114505&amp;urllink=&amp;afftrack=&quot;&gt;AlgoMonster&lt;/a&gt; is the fastest way to get a software engineering job. &lt;a href=&quot;https://shareasale.com/r.cfm?b=1873647&amp;u=3114753&amp;m=114505&amp;urllink=&amp;afftrack=&quot;&gt;Join today for a 70% discount!&lt;/a&gt; üí°&lt;/h3&gt;
&lt;/div&gt;

---

## Related

If you are interested in how data structures are implemented, check out [Lago](https://github.com/yangshun/lago), a Data Structures and Algorithms library for JavaScript. It is pretty much still WIP but I intend to make it into a library that can be used in production and also a reference resource for revising Data Structures and Algorithms.

## Contributing

There are no formal contributing guidelines at the moment as things are still in flux and we might find a better approach to structure content as we go along. You are welcome to contribute whatever you think will be helpful to fellow engineers. If you would like to contribute content for different domains, feel free to create an issue or submit a pull request and we can discuss further.

### Contributors

This project exists thanks to all the people who contributed. [[Contribute](CONTRIBUTING.md)]. &lt;a href=&quot;https://github.com/yangshun/tech-interview-handbook/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/contributors.svg?width=890&amp;button=false&quot;&gt;&lt;/a&gt;

### Backers

Thank you to all our backers! üôè [[Become a backer](https://opencollective.com/tech-interview-handbook#backer)]

&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#backers&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/backers.svg?width=890&quot;&gt;&lt;/a&gt;

&lt;a href=&quot;https://www.buymeacoffee.com/yangshun&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: auto !important; width: auto !important;&quot;&gt;&lt;/a&gt;

### Sponsors

Support this project by becoming a sponsor. Your logo/profile picture will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/tech-interview-handbook#sponsor)]

&lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/0/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/1/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/2/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/3/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/4/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/5/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/6/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/7/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/8/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/9/avatar.svg&quot;&gt;&lt;/a&gt;

## Disclaimer

I am providing code in the repository to you under an open source license. Because this is my personal repository, the license you receive to my code is from me and not my employer (Meta).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[OHIF/Viewers]]></title>
            <link>https://github.com/OHIF/Viewers</link>
            <guid>https://github.com/OHIF/Viewers</guid>
            <pubDate>Sat, 17 May 2025 00:04:46 GMT</pubDate>
            <description><![CDATA[OHIF zero-footprint DICOM viewer and oncology specific Lesion Tracker, plus shared extension packages]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/OHIF/Viewers">OHIF/Viewers</a></h1>
            <p>OHIF zero-footprint DICOM viewer and oncology specific Lesion Tracker, plus shared extension packages</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,598</p>
            <p>Forks: 3,681</p>
            <p>Stars today: 1 star today</p>
            <h2>README</h2><pre>&lt;!-- prettier-ignore-start --&gt;
&lt;div align=&quot;center&quot;&gt;
  &lt;h1&gt;OHIF Medical Imaging Viewer&lt;/h1&gt;
  &lt;p&gt;&lt;strong&gt;The OHIF Viewer&lt;/strong&gt; is a zero-footprint medical image viewer
provided by the &lt;a href=&quot;https://ohif.org/&quot;&gt;Open Health Imaging Foundation (OHIF)&lt;/a&gt;. It is a configurable and extensible progressive web application with out-of-the-box support for image archives which support &lt;a href=&quot;https://www.dicomstandard.org/using/dicomweb/&quot;&gt;DICOMweb&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;


&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://docs.ohif.org/&quot;&gt;&lt;strong&gt;Read The Docs&lt;/strong&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://viewer.ohif.org/&quot;&gt;Live Demo&lt;/a&gt; |
  &lt;a href=&quot;https://ui.ohif.org/&quot;&gt;Component Library&lt;/a&gt;
&lt;/div&gt;
&lt;div align=&quot;center&quot;&gt;
  üì∞ &lt;a href=&quot;https://ohif.org/news/&quot;&gt;&lt;strong&gt;Join OHIF Newsletter&lt;/strong&gt;&lt;/a&gt; üì∞
&lt;/div&gt;
&lt;div align=&quot;center&quot;&gt;
  üì∞ &lt;a href=&quot;https://ohif.org/news/&quot;&gt;&lt;strong&gt;Join OHIF Newsletter&lt;/strong&gt;&lt;/a&gt; üì∞
&lt;/div&gt;



&lt;hr /&gt;

[![NPM version][npm-version-image]][npm-url]
[![MIT License][license-image]][license-url]
[![This project is using Percy.io for visual regression testing.][percy-image]](percy-url)
&lt;!-- [![NPM downloads][npm-downloads-image]][npm-url] --&gt;
&lt;!-- [![Pulls][docker-pulls-img]][docker-image-url] --&gt;
&lt;!-- [![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2FOHIF%2FViewers.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2FOHIF%2FViewers?ref=badge_shield) --&gt;

&lt;!-- [![Netlify Status][netlify-image]][netlify-url] --&gt;
&lt;!-- [![CircleCI][circleci-image]][circleci-url] --&gt;
&lt;!-- [![codecov][codecov-image]][codecov-url] --&gt;
&lt;!-- [![All Contributors](https://img.shields.io/badge/all_contributors-10-orange.svg?style=flat-square)](#contributors) --&gt;
&lt;!-- prettier-ignore-end --&gt;


|     |  | |
| :-: | :---  | :--- |
| &lt;img src=&quot;https://github.com/OHIF/Viewers/blob/master/platform/docs/docs/assets/img/demo-measurements.webp?raw=true&quot; alt=&quot;Measurement tracking&quot; width=&quot;350&quot;/&gt; | Measurement Tracking | [Demo](https://viewer.ohif.org/viewer?StudyInstanceUIDs=1.3.6.1.4.1.25403.345050719074.3824.20170125095438.5) |
| &lt;img src=&quot;https://github.com/OHIF/Viewers/blob/master/platform/docs/docs/assets/img/demo-segmentation.webp?raw=true&quot; alt=&quot;Segmentations&quot; width=&quot;350&quot;/&gt; | Labelmap Segmentations  | [Demo](https://viewer.ohif.org/viewer?StudyInstanceUIDs=1.3.12.2.1107.5.2.32.35162.30000015050317233592200000046) |
| &lt;img src=&quot;https://github.com/OHIF/Viewers/blob/master/platform/docs/docs/assets/img/demo-ptct.webp?raw=true&quot; alt=&quot;Hanging Protocols&quot; width=&quot;350&quot;/&gt; | Fusion and Custom Hanging protocols  | [Demo](https://viewer.ohif.org/tmtv?StudyInstanceUIDs=1.3.6.1.4.1.14519.5.2.1.7009.2403.334240657131972136850343327463) |
| &lt;img src=&quot;https://github.com/OHIF/Viewers/blob/master/platform/docs/docs/assets/img/demo-volume-rendering.webp?raw=true&quot; alt=&quot;Volume Rendering&quot; width=&quot;350&quot;/&gt; | Volume Rendering  | [Demo](https://viewer.ohif.org/viewer?StudyInstanceUIDs=1.3.6.1.4.1.25403.345050719074.3824.20170125095438.5&amp;hangingprotocolId=mprAnd3DVolumeViewport) |
| &lt;img src=&quot;https://github.com/OHIF/Viewers/blob/master/platform/docs/docs/assets/img/demo-pdf.webp?raw=true&quot; alt=&quot;PDF&quot; width=&quot;350&quot;/&gt; | PDF  | [Demo](https://viewer.ohif.org/viewer?StudyInstanceUIDs=2.25.317377619501274872606137091638706705333) |
| &lt;img src=&quot;https://github.com/OHIF/Viewers/blob/master/platform/docs/docs/assets/img/demo-rtstruct.webp?raw=true&quot; alt=&quot;RTSTRUCT&quot; width=&quot;350&quot;/&gt; | RT STRUCT  | [Demo](https://viewer.ohif.org/viewer?StudyInstanceUIDs=1.3.6.1.4.1.5962.99.1.2968617883.1314880426.1493322302363.3.0) |
| &lt;img src=&quot;https://github.com/OHIF/Viewers/blob/master/platform/docs/docs/assets/img/demo-4d.webp?raw=true&quot; alt=&quot;4D&quot; width=&quot;350&quot;/&gt; | 4D  | [Demo](https://viewer.ohif.org/dynamic-volume?StudyInstanceUIDs=2.25.232704420736447710317909004159492840763) |
| &lt;img src=&quot;https://github.com/OHIF/Viewers/blob/master/platform/docs/docs/assets/img/demo-video.webp?raw=true&quot; alt=&quot;VIDEO&quot; width=&quot;350&quot;/&gt; | Video  | [Demo](https://viewer.ohif.org/viewer?StudyInstanceUIDs=2.25.96975534054447904995905761963464388233) |
| &lt;img src=&quot;https://github.com/OHIF/Viewers/blob/master/platform/docs/docs/assets/img/microscopy.webp?raw=true&quot; alt=&quot;microscopy&quot; width=&quot;350&quot;/&gt; | Slide Microscopy  | [Demo](https://viewer.ohif.org/microscopy?StudyInstanceUIDs=2.25.141277760791347900862109212450152067508) |

## About

The OHIF Viewer can retrieve
and load images from most sources and formats; render sets in 2D, 3D, and
reconstructed representations; allows for the manipulation, annotation, and
serialization of observations; supports internationalization, OpenID Connect,
offline use, hotkeys, and many more features.

Almost everything offers some degree of customization and configuration. If it
doesn&#039;t support something you need, we accept pull requests and have an ever
improving Extension System.

## Why Choose Us

### Community &amp; Experience

The OHIF Viewer is a collaborative effort that has served as the basis for many
active, production, and FDA Cleared medical imaging viewers. It benefits from
our extensive community&#039;s collective experience, and from the sponsored
contributions of individuals, research groups, and commercial organizations.

### Built to Adapt

After more than 8-years of integrating with many companies and organizations,
The OHIF Viewer has been rebuilt from the ground up to better address the
varying workflow and configuration needs of its many users. All of the Viewer&#039;s
core features are built using it&#039;s own extension system. The same extensibility
that allows us to offer:

- 2D and 3D medical image viewing
- Multiplanar Reconstruction (MPR)
- Maximum Intensity Project (MIP)
- Whole slide microscopy viewing
- PDF and Dicom Structured Report rendering
- Segmentation rendering as labelmaps and contours
- User Access Control (UAC)
- Context specific toolbar and side panel content
- and many others

Can be leveraged by you to customize the viewer for your workflow, and to add
any new functionality you may need (and wish to maintain privately without
forking).

### Support

- [Report a Bug üêõ](https://github.com/OHIF/Viewers/issues/new?assignees=&amp;labels=Community%3A+Report+%3Abug%3A%2CAwaiting+Reproduction&amp;projects=&amp;template=bug-report.yml&amp;title=%5BBug%5D+)
- [Request a Feature üöÄ](https://github.com/OHIF/Viewers/issues/new?assignees=&amp;labels=Community%3A+Request+%3Ahand%3A&amp;projects=&amp;template=feature-request.yml&amp;title=%5BFeature+Request%5D+)
- [Ask a Question ü§ó](community.ohif.org)
- [Slack Channel](https://join.slack.com/t/cornerstonejs/shared_invite/zt-1r8xb2zau-dOxlD6jit3TN0Uwf928w9Q)

For commercial support, academic collaborations, and answers to common
questions; please use [Get Support](https://ohif.org/get-support/) to contact
us.


## Developing

### Branches

#### `master` branch - The latest dev (beta) release

- `master` - The latest dev release

This is typically where the latest development happens. Code that is in the master branch has passed code reviews and automated tests, but it may not be deemed ready for production. This branch usually contains the most recent changes and features being worked on by the development team. It&#039;s often the starting point for creating feature branches (where new features are developed) and hotfix branches (for urgent fixes).

Each package is tagged with beta version numbers, and published to npm such as `@ohif/ui@3.6.0-beta.1`

### `release/*` branches - The latest stable releases
Once the `master` branch code reaches a stable, release-ready state, we conduct a comprehensive code review and QA testing. Upon approval, we create a new release branch from `master`. These branches represent the latest stable version considered ready for production.

For example, `release/3.5` is the branch for version 3.5.0, and `release/3.6` is for version 3.6.0. After each release, we wait a few days to ensure no critical bugs. If any are found, we fix them in the release branch and create a new release with a minor version bump, e.g., 3.5.1 in the `release/3.5` branch.

Each package is tagged with version numbers and published to npm, such as `@ohif/ui@3.5.0`. Note that `master` is always ahead of the `release` branch. We publish docker builds for both beta and stable releases.

Here is a schematic representation of our development workflow:

![alt text](platform/docs/docs/assets/img/github-readme-branches-Jun2024.png)





### Requirements

- [Yarn 1.20.0+](https://yarnpkg.com/en/docs/install)
- [Node 18+](https://nodejs.org/en/)
- Yarn Workspaces should be enabled on your machine:
  - `yarn config set workspaces-experimental true`

### Getting Started

1. [Fork this repository][how-to-fork]
2. [Clone your forked repository][how-to-clone]
   - `git clone https://github.com/YOUR-USERNAME/Viewers.git`
3. Navigate to the cloned project&#039;s directory
4. Add this repo as a `remote` named `upstream`
   - `git remote add upstream https://github.com/OHIF/Viewers.git`
5. `yarn install` to restore dependencies and link projects

#### To Develop

_From this repository&#039;s root directory:_

```bash
# Enable Yarn Workspaces
yarn config set workspaces-experimental true

# Restore dependencies
yarn install
```

## Commands

These commands are available from the root directory. Each project directory
also supports a number of commands that can be found in their respective
`README.md` and `package.json` files.

| Yarn Commands                | Description                                                   |
| ---------------------------- | ------------------------------------------------------------- |
| **Develop**                  |                                                               |
| `dev`              | Default development experience for Viewer                     |
| `dev:fast`             | Our experimental fast dev mode that uses rsbuild instead of webpack                     |
| `test:unit`                  | Jest multi-project test runner; overall coverage              |
| **Deploy**                   |                                                               |
| `build`\*                    | Builds production output for our PWA Viewer                   |  |

\* - For more information on different builds, check out our [Deploy
Docs][deployment-docs]

## Project

The OHIF Medical Image Viewing Platform is maintained as a
[`monorepo`][monorepo]. This means that this repository, instead of containing a
single project, contains many projects. If you explore our project structure,
you&#039;ll see the following:

```bash
.
‚îú‚îÄ‚îÄ extensions               #
‚îÇ   ‚îú‚îÄ‚îÄ _example             # Skeleton of example extension
‚îÇ   ‚îú‚îÄ‚îÄ default              # basic set of useful functionalities (datasources, panels, etc)
‚îÇ   ‚îú‚îÄ‚îÄ cornerstone       # image rendering and tools w/ Cornerstone3D
‚îÇ   ‚îú‚îÄ‚îÄ cornerstone-dicom-sr # DICOM Structured Report rendering and export
‚îÇ   ‚îú‚îÄ‚îÄ cornerstone-dicom-sr # DICOM Structured Report rendering and export
‚îÇ   ‚îú‚îÄ‚îÄ cornerstone-dicom-seg # DICOM Segmentation rendering and export
‚îÇ   ‚îú‚îÄ‚îÄ cornerstone-dicom-rt # DICOM RTSTRUCT rendering
‚îÇ   ‚îú‚îÄ‚îÄ cornerstone-microscopy # Whole Slide Microscopy rendering
‚îÇ   ‚îú‚îÄ‚îÄ dicom-pdf # PDF rendering
‚îÇ   ‚îú‚îÄ‚îÄ dicom-video # DICOM RESTful Services
‚îÇ   ‚îú‚îÄ‚îÄ measurement-tracking # Longitudinal measurement tracking
‚îÇ   ‚îú‚îÄ‚îÄ tmtv # Total Metabolic Tumor Volume (TMTV) calculation
|

‚îÇ
‚îú‚îÄ‚îÄ modes                    #
‚îÇ   ‚îú‚îÄ‚îÄ _example             # Skeleton of example mode
‚îÇ   ‚îú‚îÄ‚îÄ basic-dev-mode       # Basic development mode
‚îÇ   ‚îú‚îÄ‚îÄ longitudinal         # Longitudinal mode (measurement tracking)
‚îÇ   ‚îú‚îÄ‚îÄ tmtv       # Total Metabolic Tumor Volume (TMTV) calculation mode
‚îÇ   ‚îî‚îÄ‚îÄ microscopy          # Whole Slide Microscopy mode
‚îÇ
‚îú‚îÄ‚îÄ platform                 #
‚îÇ   ‚îú‚îÄ‚îÄ core                 # Business Logic
‚îÇ   ‚îú‚îÄ‚îÄ i18n                 # Internationalization Support
‚îÇ   ‚îú‚îÄ‚îÄ ui                   # React component library
‚îÇ   ‚îú‚îÄ‚îÄ docs                 # Documentation
‚îÇ   ‚îî‚îÄ‚îÄ viewer               # Connects platform and extension projects
‚îÇ
‚îú‚îÄ‚îÄ ...                      # misc. shared configuration
‚îú‚îÄ‚îÄ lerna.json               # MonoRepo (Lerna) settings
‚îú‚îÄ‚îÄ package.json             # Shared devDependencies and commands
‚îî‚îÄ‚îÄ README.md                # This file
```

## Acknowledgments

To acknowledge the OHIF Viewer in an academic publication, please cite

&gt; _Open Health Imaging Foundation Viewer: An Extensible Open-Source Framework
&gt; for Building Web-Based Imaging Applications to Support Cancer Research_
&gt;
&gt; Erik Ziegler, Trinity Urban, Danny Brown, James Petts, Steve D. Pieper, Rob
&gt; Lewis, Chris Hafey, and Gordon J. Harris
&gt;
&gt; _JCO Clinical Cancer Informatics_, no. 4 (2020), 336-345, DOI:
&gt; [10.1200/CCI.19.00131](https://www.doi.org/10.1200/CCI.19.00131)
&gt;
&gt; Open-Access on Pubmed Central:
&gt; https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7259879/

or, for v1, please cite:

&gt; _LesionTracker: Extensible Open-Source Zero-Footprint Web Viewer for Cancer
&gt; Imaging Research and Clinical Trials_
&gt;
&gt; Trinity Urban, Erik Ziegler, Rob Lewis, Chris Hafey, Cheryl Sadow, Annick D.
&gt; Van den Abbeele and Gordon J. Harris
&gt;
&gt; _Cancer Research_, November 1 2017 (77) (21) e119-e122 DOI:
&gt; [10.1158/0008-5472.CAN-17-0334](https://www.doi.org/10.1158/0008-5472.CAN-17-0334)

**Note:** If you use or find this repository helpful, please take the time to
star this repository on GitHub. This is an easy way for us to assess adoption
and it can help us obtain future funding for the project.

This work is supported primarily by the National Institutes of Health, National
Cancer Institute, Informatics Technology for Cancer Research (ITCR) program,
under a
[grant to Dr. Gordon Harris at Massachusetts General Hospital (U24 CA199460)](https://projectreporter.nih.gov/project_info_description.cfm?aid=8971104).

[NCI Imaging Data Commons (IDC) project](https://imaging.datacommons.cancer.gov/) supported the development of new features and bug fixes marked with [&quot;IDC:priority&quot;](https://github.com/OHIF/Viewers/issues?q=is%3Aissue+is%3Aopen+label%3AIDC%3Apriority),
[&quot;IDC:candidate&quot;](https://github.com/OHIF/Viewers/issues?q=is%3Aissue+is%3Aopen+label%3AIDC%3Acandidate) or [&quot;IDC:collaboration&quot;](https://github.com/OHIF/Viewers/issues?q=is%3Aissue+is%3Aopen+label%3AIDC%3Acollaboration). NCI Imaging Data Commons is supported by contract number 19X037Q from
Leidos Biomedical Research under Task Order HHSN26100071 from NCI. [IDC Viewer](https://learn.canceridc.dev/portal/visualization) is a customized version of the OHIF Viewer.

This project is tested with BrowserStack. Thank you for supporting open-source!

## License

MIT ¬© [OHIF](https://github.com/OHIF)

&lt;!--
  Links
  --&gt;

&lt;!-- prettier-ignore-start --&gt;
&lt;!-- Badges --&gt;
[lerna-image]: https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg
[lerna-url]: https://lerna.js.org/
[netlify-image]: https://api.netlify.com/api/v1/badges/32708787-c9b0-4634-b50f-7ca41952da77/deploy-status
[netlify-url]: https://app.netlify.com/sites/ohif-dev/deploys
[all-contributors-image]: https://img.shields.io/badge/all_contributors-0-orange.svg?style=flat-square
[circleci-image]: https://circleci.com/gh/OHIF/Viewers.svg?style=svg
[circleci-url]: https://circleci.com/gh/OHIF/Viewers
[codecov-image]: https://codecov.io/gh/OHIF/Viewers/branch/master/graph/badge.svg
[codecov-url]: https://codecov.io/gh/OHIF/Viewers/branch/master
[prettier-image]: https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square
[prettier-url]: https://github.com/prettier/prettier
[semantic-image]: https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg
[semantic-url]: https://github.com/semantic-release/semantic-release
&lt;!-- ROW --&gt;
[npm-url]: https://npmjs.org/package/@ohif/app
[npm-downloads-image]: https://img.shields.io/npm/dm/@ohif/app.svg?style=flat-square
[npm-version-image]: https://img.shields.io/npm/v/@ohif/app.svg?style=flat-square
[docker-pulls-img]: https://img.shields.io/docker/pulls/ohif/viewer.svg?style=flat-square
[docker-image-url]: https://hub.docker.com/r/ohif/app
[license-image]: https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square
[license-url]: LICENSE
[percy-image]: https://percy.io/static/images/percy-badge.svg
[percy-url]: https://percy.io/Open-Health-Imaging-Foundation/OHIF-Viewer
&lt;!-- Links --&gt;
[monorepo]: https://en.wikipedia.org/wiki/Monorepo
[how-to-fork]: https://help.github.com/en/articles/fork-a-repo
[how-to-clone]: https://help.github.com/en/articles/fork-a-repo#step-2-create-a-local-clone-of-your-fork
[ohif-architecture]: https://docs.ohif.org/architecture/index.html
[ohif-extensions]: https://docs.ohif.org/architecture/index.html
[deployment-docs]: https://docs.ohif.org/deployment/
[react-url]: https://reactjs.org/
[pwa-url]: https://developers.google.com/web/progressive-web-apps/
[ohif-viewer-url]: https://www.npmjs.com/package/@ohif/app
[configuration-url]: https://docs.ohif.org/configuring/
[extensions-url]: https://docs.ohif.org/extensions/
&lt;!-- Platform --&gt;
[platform-core]: platform/core/README.md
[core-npm]: https://www.npmjs.com/package/@ohif/core
[platform-i18n]: platform/i18n/README.md
[i18n-npm]: https://www.npmjs.com/package/@ohif/i18n
[platform-ui]: platform/ui/README.md
[ui-npm]: https://www.npmjs.com/package/@ohif/ui
[platform-viewer]: platform/app/README.md
[viewer-npm]: https://www.npmjs.com/package/@ohif/app
&lt;!-- Extensions --&gt;
[extension-cornerstone]: extensions/cornerstone/README.md
[cornerstone-npm]: https://www.npmjs.com/package/@ohif/extension-cornerstone
[extension-dicom-html]: extensions/dicom-html/README.md
[html-npm]: https://www.npmjs.com/package/@ohif/extension-dicom-html
[extension-dicom-microscopy]: extensions/dicom-microscopy/README.md
[microscopy-npm]: https://www.npmjs.com/package/@ohif/extension-dicom-microscopy
[extension-dicom-pdf]: extensions/dicom-pdf/README.md
[pdf-npm]: https://www.npmjs.com/package/@ohif/extension-dicom-pdf
[extension-vtk]: extensions/vtk/README.md
[vtk-npm]: https://www.npmjs.com/package/@ohif/extension-vtk
&lt;!-- prettier-ignore-end --&gt;

[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2FOHIF%2FViewers.svg?type=large&amp;issueType=license)](https://app.fossa.com/projects/git%2Bgithub.com%2FOHIF%2FViewers?ref=badge_large&amp;issueType=license)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[cuixueshe/earthworm]]></title>
            <link>https://github.com/cuixueshe/earthworm</link>
            <guid>https://github.com/cuixueshe/earthworm</guid>
            <pubDate>Sat, 17 May 2025 00:04:45 GMT</pubDate>
            <description><![CDATA[Learning English through the method of constructing sentences with conjunctions]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/cuixueshe/earthworm">cuixueshe/earthworm</a></h1>
            <p>Learning English through the method of constructing sentences with conjunctions</p>
            <p>Language: TypeScript</p>
            <p>Stars: 8,362</p>
            <p>Forks: 931</p>
            <p>Stars today: 25 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;img alt=&quot;Earthworm&quot; width=&quot;120&quot; height=&quot;120&quot; src=&quot;./assets/logo/logo-1000.png&quot;&gt;
  &lt;h1&gt;Earthworm&lt;/h1&gt;
  &lt;span&gt;English | &lt;a href=&quot;./README.zh-CN.md&quot;&gt;‰∏≠Êñá&lt;/a&gt;&lt;/span&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;br/&gt;
  &lt;a href=&quot;https://hellogithub.com/repository/9433615761f548cf9648434c670cd85b&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://abroad.hellogithub.com/v1/widgets/recommend.svg?rid=9433615761f548cf9648434c670cd85b&amp;claim_uid=249cPWvjfNmU7dp&quot; alt=&quot;FeaturedÔΩúHelloGitHub&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;

## ‚ö° Introduction

By constructing sentences with conjunctions, it helps you learn English better~ üòä

## üöÄ How To Start?

**The mentioned operations below are based on the root directory of the current project, please be attentive to ensure there are no errors!**

### Requirements

- **pnpm version &gt;= 8**

  ```bash
  corepack enable
  ```

- **Node.js version &gt;= v20**
  &gt; Use the version from .node-version. [Supported tools](https://github.com/shadowspawn/node-version-usage#compatibility-testing)
- **Postgres version &gt;= 14.0.0**
- **Redis version &gt;= 5.0.0**
- **Docker**. please make sure it is installed and running successfully on your local machine.

```bash
docker --version # Docker version 24.0.7, build afdd53b

node --version # v20+

pnpm -v # 8+
```

### Editor

#### VSCode

- Install the recommended extensions [extensions.json](./.vscode/extensions.json)

### 1. Install Dependencies

```bash
pnpm install
```

### 2. Configure the `.env` File

You can choose to copy the contents of `./apps/api/.env.example` to`./apps/api/.env`. note that the&#039; example&#039; file contains sample configuration. the main storage system&#039;s environment variable information, such as database connection address, user name, password, port, key, etc. the back-end service will read the configuration from this file, **of course you can also change it to your own configuration information**.

Windows users recommend shortcut keys to copy and paste, Linux users can operate through the following command.

#### Server

```bash
cp ./apps/api/.env.example ./apps/api/.env
```

#### Client

```bash
cp ./apps/client/.env.example ./apps/client/.env
```

### 3. Restore Data Of Logto

Uncompress `logto_db_init_data.zip` to `.volumes/`

```bash
unzip logto_db_init_data.zip -d .volumes/
```

- Admin URL: http://localhost:3011
- Username: admin
- Password: WkN7g5-i8ZrJckX

&gt; if you want to [Manual Configuration Logto](https://github.com/cuixueshe/earthworm/wiki/%E8%BF%81%E7%A7%BB-Logto-%E7%94%A8%E6%88%B7%E7%B3%BB%E7%BB%9F%E5%90%8E%E6%9C%AC%E5%9C%B0%E5%90%AF%E5%8A%A8%E9%85%8D%E7%BD%AE%E6%96%B9%E6%A1%88%EF%BC%88%E8%B4%A1%E7%8C%AE%E8%80%85%EF%BC%89)

### 4. Start Docker Compose Service

The backend relies on Postgres and Redis services. Start and stop these services using the commands configured in `package.json` below.

```bash
# start
pnpm docker:start

# When needed, execute the following command
# stop
pnpm docker:stop
# delete
pnpm docker:delete
# Complete deletion (including Volume data)
pnpm docker:down
```

If you prefer manual, you can use the commands below.

```bash
docker compose up -d
docker compose stop
docker compose down

# commands compatible with older versions of Docker
docker-compose up -d
```

### 5. Initialize Database Schema

When executing this command, try to keep a little time from the previous command, because the `-d` parameter just used will suspend its service execution in the background. At this time, the docker service may still be running. If an error is found, execute it again.

```bash
pnpm db:init
```

### 6. Create and Upload Course Data

**Only Execute This During the Initial Database Initialization**.

```bash
pnpm db:upload
```

### 7. Start the Backend Service

```bash
pnpm dev:serve
```

### 8. Start the Frontend Service

```bash
pnpm dev:client
```

## üõ†Ô∏è About testing

**Run the test before submitting the commit, and submit the code after the test passes, so as to avoid multiple commits to solve the test problem**.

### Front-end Testing

The main is the single test of Vitest and the automated test of cypress, execute the following command:

```bash
# Enter the front-end project directory
cd apps/client

# vitest
pnpm test:unit:run
# cypress
pnpm test:e2e:run

# monitor vitest, convenient hot update to see test results
pnpm test:unit:watch
```

### Backend Testing

Mainly Jest single test and end-to-end test, but need to access the test database, so you need to ensure that:

1. testdb and testRedis services in Docker Compose started normally.
2. The configuration information in the `.env.test` file is correct. If there is no such file, you can copy the contents of the `apps/api/.env.test.example` file to the `apps/api/.env.test` file. The following command is provided to directly use.

Execute the following command:

```bash
# Enter Backend Project Directory
cd apps/api

# If you have an.env.test file, you don&#039;t need to run this step
cp .env.test.example .env.test

# Single test
pnpm test:unit
# End-to-end testing
pnpm test:e2e
# Single test and end-to-end test run together
pnpm test
```

## Docs Project

Project based on Vitepress documentationÔºåexecute the following command:

```bash
# Local Development
pnpm docs:dev
```

## ‚ùì FAQ

### Database connection failed

My Docker and the database inside are running normally, but when I run the `db:init` command, I still report an error, indicating that the database connection failed.

You can check whether the database configuration in the `.env` file is correct, or even whether this file has it! üò†

### How To Correctly Update Course Data?

when you identify incorrect course data and make modifications, you should use the following command to update the course data in the database.

```bash
pnpm db:update
```

### pnpm Install Error?

Some dependencies require compilation during installation, necessitating the presence of relevant build environments.
If these environments are not available, the compilation process may fail. Additionally, different modules may require different build environments, so specific issues need to be analyzed individually.
Below are specific problems encountered along with their solutions.

First try the following command to update `pnpm`.

```shell
pnpm i -g
# or
pnpm i -g pnpm
# or
npx pnpm i -g pnpm@latest
```

**Error Installing the argon2 Module On Windows**

- Install Visual Studio 2015 or later, specifically the &quot;Desktop development with C++&quot; component. (In practice, any component containing C++ development tools and libraries will suffice.)
- If you encounter Chinese characters display issues during compilation, execute `chcp 437` in the command prompt, then rerun the install command.

### Docker Permission Denied in Docker?

When using WSL2 as a development environment in Windows, the following error occurs when starting Docker with `docker compose up -d` :

```bash
permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get &quot;http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json&quot;: dial unix /var/run/docker.sock: connect: permission denied
```

&gt; Solution

Add the current user to the docker group

```bash
# Add docker user group
sudo groupadd docker
# Add the logged-in user to the docker user group
sudo gpasswd -a $USER docker
# Update user group
newgrp docker
# Test if docker command is working properly
docker images
```

## ü§ù Frontend Development Guideline

1. Do not Destructure Pinia store.

   - The readability will be better when using `store`
   - Destructuring can lead to reactivity loss and using `storeToRefs` is also quite cumbersome

2. Avoid including UI logic in composables.

   - Such as `toast.info()`
   - We categorize the router as UI logic, and for ease of testing, avoid including routerrelated logic in there

## üöÄ Star History

[![Stargazers over time](https://starchart.cc/cuixueshe/earthworm.svg?variant=adaptive)](https://starchart.cc/cuixueshe/earthworm)

## üåü Contributing

Thanks to everyone who has already contributed to Earthworm! üéâ

&lt;a href=&quot;https://github.com//cuixueshe/earthworm/graphs/contributors&quot;&gt;&lt;img src=&quot;https://contributors.nn.ci/api?repo=cuixueshe/earthworm&quot; /&gt;&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[langgenius/dify]]></title>
            <link>https://github.com/langgenius/dify</link>
            <guid>https://github.com/langgenius/dify</guid>
            <pubDate>Sat, 17 May 2025 00:04:44 GMT</pubDate>
            <description><![CDATA[Dify is an open-source LLM app development platform. Dify's intuitive interface combines AI workflow, RAG pipeline, agent capabilities, model management, observability features and more, letting you quickly go from prototype to production.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/langgenius/dify">langgenius/dify</a></h1>
            <p>Dify is an open-source LLM app development platform. Dify's intuitive interface combines AI workflow, RAG pipeline, agent capabilities, model management, observability features and more, letting you quickly go from prototype to production.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 97,443</p>
            <p>Forks: 14,605</p>
            <p>Stars today: 187 stars today</p>
            <h2>README</h2><pre>![cover-v5-optimized](./images/GitHub_README_if.png)

&lt;p align=&quot;center&quot;&gt;
  üìå &lt;a href=&quot;https://dify.ai/blog/introducing-dify-workflow-file-upload-a-demo-on-ai-podcast&quot;&gt;Introducing Dify Workflow File Upload: Recreate Google NotebookLM Podcast&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://cloud.dify.ai&quot;&gt;Dify Cloud&lt;/a&gt; ¬∑
  &lt;a href=&quot;https://docs.dify.ai/getting-started/install-self-hosted&quot;&gt;Self-hosting&lt;/a&gt; ¬∑
  &lt;a href=&quot;https://docs.dify.ai&quot;&gt;Documentation&lt;/a&gt; ¬∑
  &lt;a href=&quot;https://dify.ai/pricing&quot;&gt;Dify edition overview&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://dify.ai&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Static Badge&quot; src=&quot;https://img.shields.io/badge/Product-F04438&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://dify.ai/pricing&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Static Badge&quot; src=&quot;https://img.shields.io/badge/free-pricing?logo=free&amp;color=%20%23155EEF&amp;label=pricing&amp;labelColor=%20%23528bff&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://discord.gg/FngNHpbcY7&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/discord/1082486657678311454?logo=discord&amp;labelColor=%20%235462eb&amp;logoColor=%20%23f5f5f5&amp;color=%20%235462eb&quot;
            alt=&quot;chat on Discord&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://reddit.com/r/difyai&quot; target=&quot;_blank&quot;&gt;  
        &lt;img src=&quot;https://img.shields.io/reddit/subreddit-subscribers/difyai?style=plastic&amp;logo=reddit&amp;label=r%2Fdifyai&amp;labelColor=white&quot;
            alt=&quot;join Reddit&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=dify_ai&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://img.shields.io/twitter/follow/dify_ai?logo=X&amp;color=%20%23f5f5f5&quot;
            alt=&quot;follow on X(Twitter)&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://www.linkedin.com/company/langgenius/&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/LinkedIn-0A66C2?logo=linkedin-white&amp;logoColor=fff&quot;
            alt=&quot;follow on LinkedIn&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://hub.docker.com/u/langgenius&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Docker Pulls&quot; src=&quot;https://img.shields.io/docker/pulls/langgenius/dify-web?labelColor=%20%23FDB062&amp;color=%20%23f79009&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/langgenius/dify/graphs/commit-activity&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Commits last month&quot; src=&quot;https://img.shields.io/github/commit-activity/m/langgenius/dify?labelColor=%20%2332b583&amp;color=%20%2312b76a&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/langgenius/dify/&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Issues closed&quot; src=&quot;https://img.shields.io/github/issues-search?query=repo%3Alanggenius%2Fdify%20is%3Aclosed&amp;label=issues%20closed&amp;labelColor=%20%237d89b0&amp;color=%20%235d6b98&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://github.com/langgenius/dify/discussions/&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Discussion posts&quot; src=&quot;https://img.shields.io/github/discussions/langgenius/dify?labelColor=%20%239b8afb&amp;color=%20%237a5af8&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;./README.md&quot;&gt;&lt;img alt=&quot;README in English&quot; src=&quot;https://img.shields.io/badge/English-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_TW.md&quot;&gt;&lt;img alt=&quot;ÁπÅÈ´î‰∏≠ÊñáÊñá‰ª∂&quot; src=&quot;https://img.shields.io/badge/ÁπÅÈ´î‰∏≠Êñá-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_CN.md&quot;&gt;&lt;img alt=&quot;ÁÆÄ‰Ωì‰∏≠ÊñáÁâàËá™Ëø∞Êñá‰ª∂&quot; src=&quot;https://img.shields.io/badge/ÁÆÄ‰Ωì‰∏≠Êñá-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_JA.md&quot;&gt;&lt;img alt=&quot;Êó•Êú¨Ë™û„ÅÆREADME&quot; src=&quot;https://img.shields.io/badge/Êó•Êú¨Ë™û-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_ES.md&quot;&gt;&lt;img alt=&quot;README en Espa√±ol&quot; src=&quot;https://img.shields.io/badge/Espa√±ol-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_FR.md&quot;&gt;&lt;img alt=&quot;README en Fran√ßais&quot; src=&quot;https://img.shields.io/badge/Fran√ßais-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_KL.md&quot;&gt;&lt;img alt=&quot;README tlhIngan Hol&quot; src=&quot;https://img.shields.io/badge/Klingon-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_KR.md&quot;&gt;&lt;img alt=&quot;README in Korean&quot; src=&quot;https://img.shields.io/badge/ÌïúÍµ≠Ïñ¥-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_AR.md&quot;&gt;&lt;img alt=&quot;README ÿ®ÿßŸÑÿπÿ±ÿ®Ÿäÿ©&quot; src=&quot;https://img.shields.io/badge/ÿßŸÑÿπÿ±ÿ®Ÿäÿ©-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_TR.md&quot;&gt;&lt;img alt=&quot;T√ºrk√ße README&quot; src=&quot;https://img.shields.io/badge/T√ºrk√ße-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_VI.md&quot;&gt;&lt;img alt=&quot;README Ti·∫øng Vi·ªát&quot; src=&quot;https://img.shields.io/badge/Ti%E1%BA%BFng%20Vi%E1%BB%87t-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_DE.md&quot;&gt;&lt;img alt=&quot;README in Deutsch&quot; src=&quot;https://img.shields.io/badge/German-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README_BN.md&quot;&gt;&lt;img alt=&quot;README in ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ&quot; src=&quot;https://img.shields.io/badge/‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ-d9d9d9&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

Dify is an open-source LLM app development platform. Its intuitive interface combines agentic AI workflow, RAG pipeline, agent capabilities, model management, observability features, and more, allowing you to quickly move from prototype to production.

## Quick start

&gt; Before installing Dify, make sure your machine meets the following minimum system requirements:
&gt;
&gt; - CPU &gt;= 2 Core
&gt; - RAM &gt;= 4 GiB

&lt;/br&gt;

The easiest way to start the Dify server is through [docker compose](docker/docker-compose.yaml). Before running Dify with the following commands, make sure that [Docker](https://docs.docker.com/get-docker/) and [Docker Compose](https://docs.docker.com/compose/install/) are installed on your machine:

```bash
cd dify
cd docker
cp .env.example .env
docker compose up -d
```

After running, you can access the Dify dashboard in your browser at [http://localhost/install](http://localhost/install) and start the initialization process.

#### Seeking help

Please refer to our [FAQ](https://docs.dify.ai/getting-started/install-self-hosted/faqs) if you encounter problems setting up Dify. Reach out to [the community and us](#community--contact) if you are still having issues.

&gt; If you&#039;d like to contribute to Dify or do additional development, refer to our [guide to deploying from source code](https://docs.dify.ai/getting-started/install-self-hosted/local-source-code)

## Key features

**1. Workflow**:
Build and test powerful AI workflows on a visual canvas, leveraging all the following features and beyond.

**2. Comprehensive model support**:
Seamless integration with hundreds of proprietary / open-source LLMs from dozens of inference providers and self-hosted solutions, covering GPT, Mistral, Llama3, and any OpenAI API-compatible models. A full list of supported model providers can be found [here](https://docs.dify.ai/getting-started/readme/model-providers).

![providers-v5](https://github.com/langgenius/dify/assets/13230914/5a17bdbe-097a-4100-8363-40255b70f6e3)

**3. Prompt IDE**:
Intuitive interface for crafting prompts, comparing model performance, and adding additional features such as text-to-speech to a chat-based app.

**4. RAG Pipeline**:
Extensive RAG capabilities that cover everything from document ingestion to retrieval, with out-of-box support for text extraction from PDFs, PPTs, and other common document formats.

**5. Agent capabilities**:
You can define agents based on LLM Function Calling or ReAct, and add pre-built or custom tools for the agent. Dify provides 50+ built-in tools for AI agents, such as Google Search, DALL¬∑E, Stable Diffusion and WolframAlpha.

**6. LLMOps**:
Monitor and analyze application logs and performance over time. You could continuously improve prompts, datasets, and models based on production data and annotations.

**7. Backend-as-a-Service**:
All of Dify&#039;s offerings come with corresponding APIs, so you could effortlessly integrate Dify into your own business logic.

## Feature Comparison

&lt;table style=&quot;width: 100%;&quot;&gt;
  &lt;tr&gt;
    &lt;th align=&quot;center&quot;&gt;Feature&lt;/th&gt;
    &lt;th align=&quot;center&quot;&gt;Dify.AI&lt;/th&gt;
    &lt;th align=&quot;center&quot;&gt;LangChain&lt;/th&gt;
    &lt;th align=&quot;center&quot;&gt;Flowise&lt;/th&gt;
    &lt;th align=&quot;center&quot;&gt;OpenAI Assistants API&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;Programming Approach&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;API + App-oriented&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;Python Code&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;App-oriented&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;API-oriented&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;Supported LLMs&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;Rich Variety&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;Rich Variety&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;Rich Variety&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;OpenAI-only&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;RAG Engine&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;Agent&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;Workflow&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;Observability&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;Enterprise Feature (SSO/Access control)&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;Local Deployment&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚úÖ&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;‚ùå&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

## Using Dify

- **Cloud &lt;/br&gt;**
  We host a [Dify Cloud](https://dify.ai) service for anyone to try with zero setup. It provides all the capabilities of the self-deployed version, and includes 200 free GPT-4 calls in the sandbox plan.

- **Self-hosting Dify Community Edition&lt;/br&gt;**
  Quickly get Dify running in your environment with this [starter guide](#quick-start).
  Use our [documentation](https://docs.dify.ai) for further references and more in-depth instructions.

- **Dify for enterprise / organizations&lt;/br&gt;**
  We provide additional enterprise-centric features. [Log your questions for us through this chatbot](https://udify.app/chat/22L1zSxg6yW1cWQg) or [send us an email](mailto:business@dify.ai?subject=[GitHub]Business%20License%20Inquiry) to discuss enterprise needs. &lt;/br&gt;
  &gt; For startups and small businesses using AWS, check out [Dify Premium on AWS Marketplace](https://aws.amazon.com/marketplace/pp/prodview-t22mebxzwjhu6) and deploy it to your own AWS VPC with one click. It&#039;s an affordable AMI offering with the option to create apps with custom logo and branding.

## Staying ahead

Star Dify on GitHub and be instantly notified of new releases.

![star-us](https://github.com/langgenius/dify/assets/13230914/b823edc1-6388-4e25-ad45-2f6b187adbb4)

## Advanced Setup

If you need to customize the configuration, please refer to the comments in our [.env.example](docker/.env.example) file and update the corresponding values in your `.env` file. Additionally, you might need to make adjustments to the `docker-compose.yaml` file itself, such as changing image versions, port mappings, or volume mounts, based on your specific deployment environment and requirements. After making any changes, please re-run `docker-compose up -d`. You can find the full list of available environment variables [here](https://docs.dify.ai/getting-started/install-self-hosted/environments).

If you&#039;d like to configure a highly-available setup, there are community-contributed [Helm Charts](https://helm.sh/) and YAML files which allow Dify to be deployed on Kubernetes.

- [Helm Chart by @LeoQuote](https://github.com/douban/charts/tree/master/charts/dify)
- [Helm Chart by @BorisPolonsky](https://github.com/BorisPolonsky/dify-helm)
- [Helm Chart by @magicsong](https://github.com/magicsong/ai-charts)
- [YAML file by @Winson-030](https://github.com/Winson-030/dify-kubernetes)
- [YAML file by @wyy-holding](https://github.com/wyy-holding/dify-k8s)

#### Using Terraform for Deployment

Deploy Dify to Cloud Platform with a single click using [terraform](https://www.terraform.io/)

##### Azure Global

- [Azure Terraform by @nikawang](https://github.com/nikawang/dify-azure-terraform)

##### Google Cloud

- [Google Cloud Terraform by @sotazum](https://github.com/DeNA/dify-google-cloud-terraform)

#### Using AWS CDK for Deployment

Deploy Dify to AWS with [CDK](https://aws.amazon.com/cdk/)

##### AWS

- [AWS CDK by @KevinZhao](https://github.com/aws-samples/solution-for-deploying-dify-on-aws)

## Contributing

For those who&#039;d like to contribute code, see our [Contribution Guide](https://github.com/langgenius/dify/blob/main/CONTRIBUTING.md).
At the same time, please consider supporting Dify by sharing it on social media and at events and conferences.

&gt; We are looking for contributors to help translate Dify into languages other than Mandarin or English. If you are interested in helping, please see the [i18n README](https://github.com/langgenius/dify/blob/main/web/i18n/README.md) for more information, and leave us a comment in the `global-users` channel of our [Discord Community Server](https://discord.gg/8Tpq4AcN9c).

## Community &amp; contact

- [Github Discussion](https://github.com/langgenius/dify/discussions). Best for: sharing feedback and asking questions.
- [GitHub Issues](https://github.com/langgenius/dify/issues). Best for: bugs you encounter using Dify.AI, and feature proposals. See our [Contribution Guide](https://github.com/langgenius/dify/blob/main/CONTRIBUTING.md).
- [Discord](https://discord.gg/FngNHpbcY7). Best for: sharing your applications and hanging out with the community.
- [X(Twitter)](https://twitter.com/dify_ai). Best for: sharing your applications and hanging out with the community.

**Contributors**

&lt;a href=&quot;https://github.com/langgenius/dify/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=langgenius/dify&quot; /&gt;
&lt;/a&gt;

## Star history

[![Star History Chart](https://api.star-history.com/svg?repos=langgenius/dify&amp;type=Date)](https://star-history.com/#langgenius/dify&amp;Date)

## Security disclosure

To protect your privacy, please avoid posting security issues on GitHub. Instead, send your questions to security@dify.ai and we will provide you with a more detailed answer.

## License

This repository is available under the [Dify Open Source License](LICENSE), which is essentially Apache 2.0 with a few additional restrictions.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[dataelement/bisheng]]></title>
            <link>https://github.com/dataelement/bisheng</link>
            <guid>https://github.com/dataelement/bisheng</guid>
            <pubDate>Sat, 17 May 2025 00:04:43 GMT</pubDate>
            <description><![CDATA[BISHENG is an open LLM devops platform for next generation Enterprise AI applications. Powerful and comprehensive features include: GenAI workflow, RAG, Agent, Unified model management, Evaluation, SFT, Dataset Management, Enterprise-level System Management, Observability and more.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/dataelement/bisheng">dataelement/bisheng</a></h1>
            <p>BISHENG is an open LLM devops platform for next generation Enterprise AI applications. Powerful and comprehensive features include: GenAI workflow, RAG, Agent, Unified model management, Evaluation, SFT, Dataset Management, Enterprise-level System Management, Observability and more.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 8,494</p>
            <p>Forks: 1,399</p>
            <p>Stars today: 25 stars today</p>
            <h2>README</h2><pre>**Proudly made by ChineseÔºåMay we, like the creators of Deepseek and Black Myth: Wukong, bring more wonder and greatness to the world.**

&gt; Ê∫êËá™‰∏≠ÂõΩÂå†ÂøÉÔºåÂ∏åÊúõÊàë‰ª¨ËÉΩÂÉè [Deepseek]„ÄÅ[ÈªëÁ•ûËØùÔºöÊÇüÁ©∫] Âõ¢Èòü‰∏ÄÊ†∑ÔºåÁªô‰∏ñÁïåÂ∏¶Êù•Êõ¥Â§öÁæéÂ•Ω„ÄÇ

&lt;img src=&quot;https://dataelem.com/bs/face.png&quot; alt=&quot;Bisheng banner&quot;&gt;

&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://dataelem.feishu.cn/wiki/ZxW6wZyAJicX4WkG0NqcWsbynde&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-Wiki-brightgreen&quot;&gt;&lt;/a&gt;
    &lt;img src=&quot;https://img.shields.io/github/license/dataelement/bisheng&quot; alt=&quot;license&quot;/&gt;
    &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/dataelement/bisheng&quot;&gt;&lt;/a&gt;
    &lt;a href=&quot;https://star-history.com/#dataelement/bisheng&amp;Timeline&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/dataelement/bisheng?color=yellow&quot;&gt;&lt;/a&gt; 
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;./README_CN.md&quot;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; |
  &lt;a href=&quot;./README.md&quot;&gt;English&lt;/a&gt; |
  &lt;a href=&quot;./README_JPN.md&quot;&gt;Êó•Êú¨Ë™û&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://trendshift.io/repositories/717&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/717&quot; alt=&quot;dataelement%2Fbisheng | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;div class=&quot;column&quot; align=&quot;middle&quot;&gt;
  &lt;!-- &lt;a href=&quot;https://bisheng.slack.com/join/shared_invite/&quot;&gt; --&gt;
    &lt;!-- &lt;img src=&quot;https://img.shields.io/badge/Join-Slack-orange&quot; alt=&quot;join-slack&quot;/&gt; --&gt;
  &lt;/a&gt;
  &lt;!-- &lt;img src=&quot;https://img.shields.io/github/license/bisheng-io/bisheng&quot; alt=&quot;license&quot;/&gt; --&gt;
  &lt;!-- &lt;img src=&quot;https://img.shields.io/docker/pulls/bisheng-io/bisheng&quot; alt=&quot;docker-pull-count&quot; /&gt; --&gt;
&lt;/div&gt;


BISHENG is an open LLM application devops platform, focusing on enterprise scenarios. It has been used by a large number of industry leading organizations and Fortune 500 companies.

&quot;Bi Sheng&quot; was the inventor of movable type printing, which played a vital role in promoting the transmission of human knowledge. We hope that BISHENG can also provide strong support for the widespread implementation of intelligent applications. Everyone is welcome to participate.


## Features 
1. Unique [BISHENG Workflow](https://dataelem.feishu.cn/wiki/R7HZwH5ZGiJUDrkHZXicA9pInif)
   - üß© **Independent and comprehensive application orchestration framework**: Enables the execution of various tasks within a single framework (while similar products rely on bot invocation or separate chatflow and workflow modules for different tasks).
   - üîÑ **Human in the loop**: Allows users to intervene and provide feedback during the execution of workflows (including multi-turn conversations), whereas similar products can only execute workflows from start to finish without intervention.
   - üí• **Powerful**: Supports loops, parallelism, batch processing, conditional logic, and free combination of all logic components. It also handles complex scenarios such as multi-type input/output, report generation, content review, and more.
   - üñêÔ∏è **User-friendly and intuitive**: Operations like loops, parallelism, and batch processing, which require specialized components in similar products, can be easily visualized in BISHENG as a &quot;flowchart&quot; (drawing a loop forms a loop, aligning elements creates parallelism, and selecting multiple items enables batch processing).
   &lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://dataelem.com/bs/bisheng_workflow.png&quot; alt=&quot;sence0&quot;&gt;&lt;/p&gt;

2. &lt;b&gt;Designed for Enterprise Applications&lt;/b&gt;: Document review, fixed-layout report generation, multi-agent collaboration, policy update comparison, support ticket assistance, customer service assistance, meeting minutes generation, resume screening, call record analysis, unstructured data governance, knowledge mining, data analysis, and more. 

‚Äã	The platform supports the construction of &lt;b&gt;highly complex enterprise application scenarios&lt;/b&gt; and offers &lt;b&gt;deep optimization&lt;/b&gt; 	with hundreds of components and thousands of parameters.
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://dataelem.com/bs/chat.png&quot; alt=&quot;sence1&quot;&gt;&lt;/p&gt;

3. &lt;b&gt;Enterprise-grade&lt;/b&gt; features are the fundamental guarantee for application implementation: security review, RBAC, user group management, traffic control by group, SSO/LDAP, vulnerability scanning and patching, high availability deployment solutions, monitoring, statistics, and more.
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://dataelem.com/bs/pro.png&quot; alt=&quot;sence2&quot;&gt;&lt;/p&gt;

4. &lt;b&gt;High-Precision Document Parsing&lt;/b&gt;: Our high-precision document parsing model is trained on a vast amount of high-quality data accumulated over past 5 years. It includes high-precision printed text, handwritten text, and rare character recognition models, table recognition models, layout analysis models, and seal models., table recognition models, layout analysis models, and seal models. You can deploy it privately for free.
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://dataelem.com/bs/ocr.png&quot; alt=&quot;sence3&quot;&gt;&lt;/p&gt;

5. A community for sharing best practices across various enterprise scenarios: An open repository of application cases and best practices.
## Quick start 

Please ensure the following conditions are met before installing BISHENG:
- CPU &gt;= 4 Virtual Cores
- RAM &gt;= 16 GB
- Docker 19.03.9+
- Docker Compose 1.25.1+
&gt; Recommended hardware condition: 18 virtual cores, 48G. In addition to installing BISHENG, we will also install the following third-party components by default: ES, Milvus, and Onlyoffice.

Download BISHENG
```bash
git clone https://github.com/dataelement/bisheng.git
# Enter the installation directory
cd bisheng/docker

# If the system does not have the git command, you can download the BISHENG code as a zip file.
wget https://github.com/dataelement/bisheng/archive/refs/heads/main.zip
# Unzip and enter the installation directory
unzip main.zip &amp;&amp; cd bisheng-main/docker
```
Start BISHENG
```bash
docker-compose up -d
```
After the startup is complete, access http://IP:3001 in the browser. The login page will appear, proceed with user registration. 

By default, the first registered user will become the system admin. 

For more installation and deployment issues, refer to:Ôºö[Self-hosting](https://dataelem.feishu.cn/wiki/BSCcwKd4Yiot3IkOEC8cxGW7nPc)

## Acknowledgement 
This repo benefits from [langchain](https://github.com/langchain-ai/langchain) [langflow](https://github.com/logspace-ai/langflow) [unstructured](https://github.com/Unstructured-IO/unstructured) and [LLaMA-Factory](https://github.com/hiyouga/LLaMA-Factory) . Thanks for their wonderful works.

&lt;b&gt;Thank you to our contributorsÔºö&lt;/b&gt;

&lt;a href=&quot;https://github.com/dataelement/bisheng/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=dataelement/bisheng&quot; /&gt;
&lt;/a&gt;



## Community &amp; contact 
Welcome to join our discussion group

&lt;img src=&quot;https://www.dataelem.com/nstatic/qrcode.png&quot; alt=&quot;Wechat QR Code&quot;&gt;


&lt;!--
## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=dataelement/bisheng&amp;type=Date)](https://star-history.com/#dataelement/bisheng&amp;Date)
--&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[continuedev/continue]]></title>
            <link>https://github.com/continuedev/continue</link>
            <guid>https://github.com/continuedev/continue</guid>
            <pubDate>Sat, 17 May 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[‚è© Create, share, and use custom AI code assistants with our open-source IDE extensions and hub of models, rules, prompts, docs, and other building blocks]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/continuedev/continue">continuedev/continue</a></h1>
            <p>‚è© Create, share, and use custom AI code assistants with our open-source IDE extensions and hub of models, rules, prompts, docs, and other building blocks</p>
            <p>Language: TypeScript</p>
            <p>Stars: 26,250</p>
            <p>Forks: 2,780</p>
            <p>Stars today: 21 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

![Continue logo](media/readme.png)

&lt;/div&gt;

&lt;h1 align=&quot;center&quot;&gt;Continue&lt;/h1&gt;

&lt;div align=&quot;center&quot;&gt;

**[Continue](https://docs.continue.dev) enables developers to create, share, and use custom AI code assistants with our open-source [VS Code](https://marketplace.visualstudio.com/items?itemName=Continue.continue) and [JetBrains](https://plugins.jetbrains.com/plugin/22707-continue-extension) extensions and [hub of models, rules, prompts, docs, and other building blocks](https://hub.continue.dev)**

&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;

&lt;a target=&quot;_blank&quot; href=&quot;https://opensource.org/licenses/Apache-2.0&quot; style=&quot;background:none&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/License-Apache_2.0-blue.svg&quot; style=&quot;height: 22px;&quot; /&gt;
&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://docs.continue.dev&quot; style=&quot;background:none&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/continue_docs-%23BE1B55&quot; style=&quot;height: 22px;&quot; /&gt;
&lt;/a&gt;
&lt;a target=&quot;_blank&quot; href=&quot;https://discord.gg/vapESyrFmJ&quot; style=&quot;background:none&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/discord-join-continue.svg?labelColor=191937&amp;color=6F6FF7&amp;logo=discord&quot; style=&quot;height: 22px;&quot; /&gt;
&lt;/a&gt;

&lt;p&gt;&lt;/p&gt;

## Chat

[Chat](https://continue.dev/docs/chat/how-to-use-it) makes it easy to ask for help from an LLM without needing to leave the IDE

![chat](docs/static/img/chat.gif)

## Autocomplete

[Autocomplete](https://continue.dev/docs/autocomplete/how-to-use-it) provides inline code suggestions as you type

![autocomplete](docs/static/img/autocomplete.gif)

## Edit

[Edit](https://continue.dev/docs/edit/how-to-use-it) is a convenient way to modify code without leaving your current file

![edit](docs/static/img/edit.gif)

## Agent

[Agent](https://continue.dev/docs/agent/how-to-use-it) enables you to make more substantial changes to your codebase

![agent](docs/static/img/agent.gif)

&lt;/div&gt;

## Getting Started

Learn about how to install and use Continue in the docs [here](https://continue.dev/docs/getting-started/install)

## Contributing

Read the [contributing guide](https://github.com/continuedev/continue/blob/main/CONTRIBUTING.md), and join [#contribute on Discord](https://discord.gg/vapESyrFmJ).

## License

[Apache 2.0 ¬© 2023-2024 Continue Dev, Inc.](./LICENSE)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[kubernetes-sigs/headlamp]]></title>
            <link>https://github.com/kubernetes-sigs/headlamp</link>
            <guid>https://github.com/kubernetes-sigs/headlamp</guid>
            <pubDate>Sat, 17 May 2025 00:04:41 GMT</pubDate>
            <description><![CDATA[A Kubernetes web UI that is fully-featured, user-friendly and extensible]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/kubernetes-sigs/headlamp">kubernetes-sigs/headlamp</a></h1>
            <p>A Kubernetes web UI that is fully-featured, user-friendly and extensible</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,859</p>
            <p>Forks: 322</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre>&lt;h1&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;frontend/src/resources/logo-light.svg&quot;&gt;
    &lt;img src=&quot;frontend/src/resources/logo-dark.svg&quot; alt=&quot;Headlamp&quot;&gt;
  &lt;/picture&gt;
&lt;/h1&gt;

&gt; **NOTICE:** We have recently moved the project under the Kubernetes SIG UI (and the repo under the _kubernetes-sigs_ org). Container images are still at [ghcr.io](https://github.com/orgs/headlamp-k8s/packages). Please bear with us while we may experience some broken links.

[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/7551/badge)](https://www.bestpractices.dev/projects/7551)
[![OpenSSF Scorecard](https://api.scorecard.dev/projects/github.com/kubernetes-sigs/headlamp/badge)](https://scorecard.dev/viewer/?uri=github.com/kubernetes-sigs/headlamp)
[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fheadlamp-k8s%2Fheadlamp.svg?type=shield)](https://app.fossa.com/projects/git%2Bgithub.com%2Fheadlamp-k8s%2Fheadlamp?ref=badge_shield)

Headlamp is an easy-to-use and extensible Kubernetes web UI.

Headlamp was created to blend the traditional feature set of other web UIs/dashboards
(i.e., to list and view resources) with added functionality.

&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/kubernetes-sigs/headlamp/screenshots/videos/headlamp_quick_run.gif&quot; width=&quot;80%&quot;&gt;
&lt;/div&gt;

## Features

- Vendor-independent / generic Kubernetes UI
- Works in-cluster, or locally as a desktop app
- Multi-cluster
- Extensible through plugins
- UI controls reflecting user roles (no deletion/update if not allowed)
- Clean &amp; modern UI
- Cancellable creation/update/deletion operations
- Logs, exec, and resource editor with documentation
- Read-write / interactive (actions based on permissions)

## Screenshots

&lt;table&gt;
    &lt;tr&gt;
        &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kubernetes-sigs/headlamp/screenshots/screenshots/home.png&quot;&gt;&lt;/td&gt;
        &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kubernetes-sigs/headlamp/screenshots/screenshots/cluster_chooser.png&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kubernetes-sigs/headlamp/screenshots/screenshots/workloads.png&quot;&gt;&lt;/td&gt;
        &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kubernetes-sigs/headlamp/screenshots/screenshots/resource_edition.png&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kubernetes-sigs/headlamp/screenshots/screenshots/logs.png&quot;&gt;&lt;/td&gt;
        &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kubernetes-sigs/headlamp/screenshots/screenshots/terminal.png&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

## Quickstart

If you want to deploy Headlamp in your cluster, check out the instructions on running it [in-cluster](https://headlamp.dev/docs/latest/installation/in-cluster/).

If you have a kubeconfig already, you can quickly try Headlamp locally as a
[desktop application](https://headlamp.dev/docs/latest/installation/desktop/)
for [Linux](https://headlamp.dev/docs/latest/installation/desktop/linux-installation),
[Mac](https://headlamp.dev/docs/latest/installation/desktop/mac-installation),
or [Windows](https://headlamp.dev/docs/latest/installation/desktop/win-installation).
**Make sure** you have a kubeconfig file set up with your favorite clusters and
in the default path so Headlamp can use it.

### Accessing

Headlamp uses [RBAC](https://kubernetes.io/docs/reference/access-authn-authz/rbac) for checking
users&#039; access to resources. If you try Headlamp with a token that has very limited
permissions, you may not be able to view your cluster resources correctly.

See the documentation on [how to easily get a Service Account token](https://headlamp.dev/docs/latest/installation#create-a-service-account-token) for your cluster.

## Tested platforms

We maintain a list of the [Kubernetes platforms](./docs/platforms.md) we have
tested Headlamp with. We invite you to add any missing platforms you have
tested, or comment if there are any regressions in the existing ones.

## Extensions / Plugins

If you are interested in tweaking Headlamp to fit your use-cases, you can check out
our [plugin development guide](https://headlamp.dev/docs/latest/development/plugins/).

## Get involved

Check out our: 
- [Guidelines](https://headlamp.dev/docs/latest/contributing/)
- [Code of Conduct](./code-of-conduct.md),
- [#headlamp](https://kubernetes.slack.com/messages/headlamp) slack channel in the Kubernetes Slack 
- [Monthly Community Meeting](https://zoom-lfx.platform.linuxfoundation.org/meetings/headlamp)

## Roadmap / Release Planning

If you are interested in the direction of the project, we maintain a
[Roadmap](https://github.com/orgs/headlamp-k8s/projects/1/views/1). It has the
biggest changes planned so far, as well as a [board](https://github.com/orgs/headlamp-k8s/projects/1/) tracking each release.

## License

Headlamp is released under the terms of the [Apache 2.0](./LICENSE) license.

## Frequently Asked Questions

For more information about Headlamp, see the [Headlamp FAQ](https://headlamp.dev/docs/latest/faq/).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[FlowiseAI/Flowise]]></title>
            <link>https://github.com/FlowiseAI/Flowise</link>
            <guid>https://github.com/FlowiseAI/Flowise</guid>
            <pubDate>Sat, 17 May 2025 00:04:40 GMT</pubDate>
            <description><![CDATA[Build AI Agents, Visually]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/FlowiseAI/Flowise">FlowiseAI/Flowise</a></h1>
            <p>Build AI Agents, Visually</p>
            <p>Language: TypeScript</p>
            <p>Stars: 38,306</p>
            <p>Forks: 19,922</p>
            <p>Stars today: 95 stars today</p>
            <h2>README</h2><pre>&lt;!-- markdownlint-disable MD030 --&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;https://github.com/FlowiseAI/Flowise/blob/main/images/flowise_white.svg#gh-light-mode-only&quot;&gt;
&lt;img src=&quot;https://github.com/FlowiseAI/Flowise/blob/main/images/flowise_dark.svg#gh-dark-mode-only&quot;&gt;
&lt;/p&gt;

[![Release Notes](https://img.shields.io/github/release/FlowiseAI/Flowise)](https://github.com/FlowiseAI/Flowise/releases)
[![Discord](https://img.shields.io/discord/1087698854775881778?label=Discord&amp;logo=discord)](https://discord.gg/jbaHfsRVBW)
[![Twitter Follow](https://img.shields.io/twitter/follow/FlowiseAI?style=social)](https://twitter.com/FlowiseAI)
[![GitHub star chart](https://img.shields.io/github/stars/FlowiseAI/Flowise?style=social)](https://star-history.com/#FlowiseAI/Flowise)
[![GitHub fork](https://img.shields.io/github/forks/FlowiseAI/Flowise?style=social)](https://github.com/FlowiseAI/Flowise/fork)

English | [ÁπÅÈ´î‰∏≠Êñá](./i18n/README-TW.md) | [ÁÆÄ‰Ωì‰∏≠Êñá](./i18n/README-ZH.md) | [Êó•Êú¨Ë™û](./i18n/README-JA.md) | [ÌïúÍµ≠Ïñ¥](./i18n/README-KR.md)

&lt;h3&gt;Build AI Agents, Visually&lt;/h3&gt;
&lt;a href=&quot;https://github.com/FlowiseAI/Flowise&quot;&gt;
&lt;img width=&quot;100%&quot; src=&quot;https://github.com/FlowiseAI/Flowise/blob/main/images/flowise_agentflow.gif?raw=true&quot;&gt;&lt;/a&gt;

## ‚ö°Quick Start

Download and Install [NodeJS](https://nodejs.org/en/download) &gt;= 18.15.0

1. Install Flowise
    ```bash
    npm install -g flowise
    ```
2. Start Flowise

    ```bash
    npx flowise start
    ```

    With username &amp; password

    ```bash
    npx flowise start --FLOWISE_USERNAME=user --FLOWISE_PASSWORD=1234
    ```

3. Open [http://localhost:3000](http://localhost:3000)

## üê≥ Docker

### Docker Compose

1. Clone the Flowise project
2. Go to `docker` folder at the root of the project
3. Copy `.env.example` file, paste it into the same location, and rename to `.env` file
4. `docker compose up -d`
5. Open [http://localhost:3000](http://localhost:3000)
6. You can bring the containers down by `docker compose stop`

### Docker Image

1. Build the image locally:
    ```bash
    docker build --no-cache -t flowise .
    ```
2. Run image:

    ```bash
    docker run -d --name flowise -p 3000:3000 flowise
    ```

3. Stop image:
    ```bash
    docker stop flowise
    ```

## üë®‚Äçüíª Developers

Flowise has 3 different modules in a single mono repository.

-   `server`: Node backend to serve API logics
-   `ui`: React frontend
-   `components`: Third-party nodes integrations
-   `api-documentation`: Auto-generated swagger-ui API docs from express

### Prerequisite

-   Install [PNPM](https://pnpm.io/installation)
    ```bash
    npm i -g pnpm
    ```

### Setup

1.  Clone the repository

    ```bash
    git clone https://github.com/FlowiseAI/Flowise.git
    ```

2.  Go into repository folder

    ```bash
    cd Flowise
    ```

3.  Install all dependencies of all modules:

    ```bash
    pnpm install
    ```

4.  Build all the code:

    ```bash
    pnpm build
    ```

    &lt;details&gt;
    &lt;summary&gt;Exit code 134 (JavaScript heap out of memory)&lt;/summary&gt;  
      If you get this error when running the above `build` script, try increasing the Node.js heap size and run the script again:

        export NODE_OPTIONS=&quot;--max-old-space-size=4096&quot;
        pnpm build

    &lt;/details&gt;

5.  Start the app:

    ```bash
    pnpm start
    ```

    You can now access the app on [http://localhost:3000](http://localhost:3000)

6.  For development build:

    -   Create `.env` file and specify the `VITE_PORT` (refer to `.env.example`) in `packages/ui`
    -   Create `.env` file and specify the `PORT` (refer to `.env.example`) in `packages/server`
    -   Run

        ```bash
        pnpm dev
        ```

    Any code changes will reload the app automatically on [http://localhost:8080](http://localhost:8080)

## üîí Authentication

To enable app level authentication, add `FLOWISE_USERNAME` and `FLOWISE_PASSWORD` to the `.env` file in `packages/server`:

```
FLOWISE_USERNAME=user
FLOWISE_PASSWORD=1234
```

## üå± Env Variables

Flowise support different environment variables to configure your instance. You can specify the following variables in the `.env` file inside `packages/server` folder. Read [more](https://github.com/FlowiseAI/Flowise/blob/main/CONTRIBUTING.md#-env-variables)

## üìñ Documentation

[Flowise Docs](https://docs.flowiseai.com/)

## üåê Self Host

Deploy Flowise self-hosted in your existing infrastructure, we support various [deployments](https://docs.flowiseai.com/configuration/deployment)

-   [AWS](https://docs.flowiseai.com/configuration/deployment/aws)
-   [Azure](https://docs.flowiseai.com/configuration/deployment/azure)
-   [Digital Ocean](https://docs.flowiseai.com/configuration/deployment/digital-ocean)
-   [GCP](https://docs.flowiseai.com/configuration/deployment/gcp)
-   [Alibaba Cloud](https://computenest.console.aliyun.com/service/instance/create/default?type=user&amp;ServiceName=FlowiseÁ§æÂå∫Áâà)
-   &lt;details&gt;
      &lt;summary&gt;Others&lt;/summary&gt;

    -   [Railway](https://docs.flowiseai.com/configuration/deployment/railway)

        [![Deploy on Railway](https://railway.app/button.svg)](https://railway.app/template/pn4G8S?referralCode=WVNPD9)

    -   [Render](https://docs.flowiseai.com/configuration/deployment/render)

        [![Deploy to Render](https://render.com/images/deploy-to-render-button.svg)](https://docs.flowiseai.com/configuration/deployment/render)

    -   [HuggingFace Spaces](https://docs.flowiseai.com/deployment/hugging-face)

        &lt;a href=&quot;https://huggingface.co/spaces/FlowiseAI/Flowise&quot;&gt;&lt;img src=&quot;https://huggingface.co/datasets/huggingface/badges/raw/main/open-in-hf-spaces-sm.svg&quot; alt=&quot;HuggingFace Spaces&quot;&gt;&lt;/a&gt;

    -   [Elestio](https://elest.io/open-source/flowiseai)

        [![Deploy on Elestio](https://elest.io/images/logos/deploy-to-elestio-btn.png)](https://elest.io/open-source/flowiseai)

    -   [Sealos](https://template.sealos.io/deploy?templateName=flowise)

        [![Deploy on Sealos](https://sealos.io/Deploy-on-Sealos.svg)](https://template.sealos.io/deploy?templateName=flowise)

    -   [RepoCloud](https://repocloud.io/details/?app_id=29)

        [![Deploy on RepoCloud](https://d16t0pc4846x52.cloudfront.net/deploy.png)](https://repocloud.io/details/?app_id=29)

      &lt;/details&gt;

## ‚òÅÔ∏è Flowise Cloud

[Get Started with Flowise Cloud](https://flowiseai.com/)

## üôã Support

Feel free to ask any questions, raise problems, and request new features in [discussion](https://github.com/FlowiseAI/Flowise/discussions)

## üôå Contributing

Thanks go to these awesome contributors

&lt;a href=&quot;https://github.com/FlowiseAI/Flowise/graphs/contributors&quot;&gt;
&lt;img src=&quot;https://contrib.rocks/image?repo=FlowiseAI/Flowise&quot; /&gt;
&lt;/a&gt;

See [contributing guide](CONTRIBUTING.md). Reach out to us at [Discord](https://discord.gg/jbaHfsRVBW) if you have any questions or issues.
[![Star History Chart](https://api.star-history.com/svg?repos=FlowiseAI/Flowise&amp;type=Timeline)](https://star-history.com/#FlowiseAI/Flowise&amp;Date)

## üìÑ License

Source code in this repository is made available under the [Apache License Version 2.0](LICENSE.md).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[trpc/trpc]]></title>
            <link>https://github.com/trpc/trpc</link>
            <guid>https://github.com/trpc/trpc</guid>
            <pubDate>Sat, 17 May 2025 00:04:39 GMT</pubDate>
            <description><![CDATA[üßô‚Äç‚ôÄÔ∏è Move Fast and Break Nothing. End-to-end typesafe APIs made easy.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/trpc/trpc">trpc/trpc</a></h1>
            <p>üßô‚Äç‚ôÄÔ∏è Move Fast and Break Nothing. End-to-end typesafe APIs made easy.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 37,264</p>
            <p>Forks: 1,356</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre>&lt;a href=&quot;https://trpc.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://assets.trpc.io/www/trpc-readme-dark.png&quot; /&gt;
    &lt;img alt=&quot;tRPC&quot; src=&quot;https://assets.trpc.io/www/trpc-readme.png&quot; /&gt;
  &lt;/picture&gt;
&lt;/a&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;h1&gt;tRPC&lt;/h1&gt;
  &lt;h3&gt;Move fast and break nothing.&lt;br /&gt;End-to-end typesafe APIs made easy.&lt;/h3&gt;
  &lt;a href=&quot;https://codecov.io/gh/trpc/trpc&quot;&gt;
    &lt;img alt=&quot;codecov&quot; src=&quot;https://codecov.io/gh/trpc/trpc/branch/next/graph/badge.svg?token=KPPS918B0G&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://npmcharts.com/compare/@trpc/server?interval=30&quot;&gt;
    &lt;img alt=&quot;weekly downloads&quot; src=&quot;https://img.shields.io/npm/dm/%40trpc/server.svg&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/trpc/trpc/blob/main/LICENSE&quot;&gt;
    &lt;img alt=&quot;MIT License&quot; src=&quot;https://img.shields.io/github/license/trpc/trpc&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://trpc.io/discord&quot;&gt;
    &lt;img alt=&quot;Discord&quot; src=&quot;https://img.shields.io/discord/867764511159091230?color=7389D8&amp;label&amp;logo=discord&amp;logoColor=ffffff&quot; /&gt;
  &lt;/a&gt;
  &lt;br /&gt;
  &lt;a href=&quot;https://twitter.com/trpcio&quot;&gt;
    &lt;img alt=&quot;Twitter&quot; src=&quot;https://img.shields.io/twitter/url.svg?label=%40trpcio&amp;style=social&amp;url=https%3A%2F%2Ftwitter.com%2Falexdotjs&quot; /&gt;
  &lt;/a&gt;
  &lt;br /&gt;
  &lt;br /&gt;
  &lt;figure&gt;
    &lt;img src=&quot;https://assets.trpc.io/www/v10/v10-dark-landscape.gif&quot; alt=&quot;Demo&quot; /&gt;
    &lt;figcaption&gt;
      &lt;p align=&quot;center&quot;&gt;
        The client above is &lt;strong&gt;not&lt;/strong&gt; importing any code from the server, only its type declarations.
      &lt;/p&gt;
    &lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;

&lt;br /&gt;

## Intro

tRPC allows you to easily build &amp; consume fully typesafe APIs without schemas or code generation.

### Features

- ‚úÖ&amp;nbsp; Well-tested and production ready.
- üßô‚Äç‚ôÇÔ∏è&amp;nbsp; Full static typesafety &amp; autocompletion on the client, for inputs, outputs, and errors.
- üêé&amp;nbsp; Snappy DX - No code generation, run-time bloat, or build pipeline.
- üçÉ&amp;nbsp; Light - tRPC has zero deps and a tiny client-side footprint.
- üêª&amp;nbsp; Easy to add to your existing brownfield project.
- üîã&amp;nbsp; Batteries included - React.js/Next.js/Express.js/Fastify adapters. _(But tRPC is not tied to React, and there are many [community adapters](https://trpc.io/docs/awesome-trpc#-extensions--community-add-ons) for other libraries)_
- ü•É&amp;nbsp; Subscriptions support.
- ‚ö°Ô∏è&amp;nbsp; Request batching - requests made at the same time can be automatically combined into one
- üëÄ&amp;nbsp; Quite a few examples in the [./examples](./examples)-folder

## Quickstart

There are a few [examples](https://trpc.io/docs/example-apps) that you can use for playing out with tRPC or bootstrapping your new project. For example, if you want a Next.js app, you can use the full-stack Next.js example:

**Quick start with a full-stack Next.js example:**

```sh
# yarn
yarn create next-app --example https://github.com/trpc/trpc --example-path examples/next-prisma-starter trpc-prisma-starter

# npm
npx create-next-app --example https://github.com/trpc/trpc --example-path examples/next-prisma-starter trpc-prisma-starter

# pnpm
pnpm create next-app --example https://github.com/trpc/trpc --example-path examples/next-prisma-starter trpc-prisma-starter

# bun
bunx create-next-app --example https://github.com/trpc/trpc --example-path examples/next-prisma-starter trpc-prisma-starter

# deno
deno init --npm next-app --example https://github.com/trpc/trpc --example-path examples/next-prisma-starter trpc-prisma-starter
```

**üëâ See full documentation on [tRPC.io](https://trpc.io/docs). üëà**

## Star History

&lt;a href=&quot;https://star-history.com/#trpc/trpc&quot;&gt;&lt;img src=&quot;https://api.star-history.com/svg?repos=trpc/trpc&amp;type=Date&quot; alt=&quot;Star History Chart&quot; width=&quot;600&quot; /&gt;&lt;/a&gt;

## Core Team

&gt; Do you want to contribute? First, read the &lt;a href=&quot;https://github.com/trpc/trpc/blob/main/CONTRIBUTING.md&quot;&gt;Contributing Guidelines&lt;/a&gt; before opening an issue or PR so you understand the branching strategy and local development environment. If you need any more guidance or want to ask more questions, feel free to write to us on &lt;a href=&quot;https://trpc.io/discord&quot;&gt;Discord&lt;/a&gt;!

### Project leads

&gt; The people who lead the API-design decisions and have the most active role in the development

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/alexdotjs&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/459267?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;Alex / KATT&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.jumr.dev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/51714798?v=4&amp;s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;Julius Marminge&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Nick-Lucas&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8896153?v=4&amp;s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;Nick Lucas&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

### Active contributors

&gt; People who actively help out improving the codebase by making PRs and reviewing code

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/hmatthieu&quot;&gt;&lt;img src=&quot;https://github.com/hmatthieu.png?v=4&amp;s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;Hubert Mathieu&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

### Special shout-outs

&gt; Individuals who have made exceptional contributions to tRPC through code, documentation, community building, and other valuable efforts

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://t3.gg&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6751787?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;Theo Browne&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/s4chinraja&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/58836760?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;/&gt;&lt;br /&gt;Sachin Raja&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

## Sponsors

If you enjoy working with tRPC and want to support us, consider giving a token appreciation by [GitHub Sponsors](https://trpc.io/sponsor)!

&lt;!-- SPONSORS:LIST:START --&gt;
&lt;!-- prettier-ignore-start --&gt;
&lt;!-- markdownlint-disable --&gt;

### ü•à Silver Sponsors

&lt;table&gt;
  &lt;tr&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://cal.com/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/79145102?v=4&amp;s=150&quot; width=&quot;150&quot; alt=&quot;Cal.com,%20Inc.&quot;/&gt;&lt;br /&gt;Cal.com, Inc.&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://greptile.com/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/140149887?v=4&amp;s=150&quot; width=&quot;150&quot; alt=&quot;Greptile&quot;/&gt;&lt;br /&gt;Greptile&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.coderabbit.ai/?utm_source=github&amp;utm_medium=referral&amp;ref=trpc&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/132028505?v=4&amp;s=150&quot; width=&quot;150&quot; alt=&quot;CodeRabbit&quot;/&gt;&lt;br /&gt;CodeRabbit&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

### ü•â Bronze Sponsors

&lt;table&gt;
  &lt;tr&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/hidrb&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/77294655?v=4&amp;s=120&quot; width=&quot;120&quot; alt=&quot;Dr.%20B&quot;/&gt;&lt;br /&gt;Dr. B&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ryanmagoon&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5327290?v=4&amp;s=120&quot; width=&quot;120&quot; alt=&quot;Ryan%20Magoon&quot;/&gt;&lt;br /&gt;Ryan Magoon&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://jonlu.ca/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13029040?u=0c8fb3e7ae09935e8f2cb0637affeddfb98cc4c5&amp;v=4&amp;s=120&quot; width=&quot;120&quot; alt=&quot;JonLuca%20De%20Caro&quot;/&gt;&lt;br /&gt;JonLuca De Caro&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

### üòª Smaller Backers

&lt;table&gt;
  &lt;tr&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://backyard.ai/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/95662801?v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Ahoy%20Labs&quot;/&gt;&lt;br /&gt;Ahoy Labs&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://unkey.com/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/138932600?v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Unkey&quot;/&gt;&lt;br /&gt;Unkey&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://ballingt.com/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/458879?u=4b045ac75d721b6ac2b42a74d7d37f61f0414031&amp;v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Tom%20Ballinger&quot;/&gt;&lt;br /&gt;Tom Ballinger&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://proxidize.com/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/70805857?v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Proxidize&quot;/&gt;&lt;br /&gt;Proxidize&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://openq.dev/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/28826387?u=34c5f1594ad1ce83b111390b604ed5d26e389815&amp;v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;rickk&quot;/&gt;&lt;br /&gt;rickk&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.jaronheard.com/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7065695?u=127a7eca50605c12366363d6aba3da9e749aeff7&amp;v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Jaron%20Heard&quot;/&gt;&lt;br /&gt;Jaron Heard&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://brooke.me/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8385528?u=c617b5f4db2d9696bf2e24fc09ad2626ef08d930&amp;v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Brooke%20Holmes&quot;/&gt;&lt;br /&gt;Brooke Holmes&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://maxgreenwald.me/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2615374?u=4c1402dd1e4e8ff7514f2e300adfe9b75ae76e85&amp;v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Max%20Greenwald&quot;/&gt;&lt;br /&gt;Max Greenwald&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dmaykov&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6147048?u=8ae662ac99e91917062164de0d9404002b99cf2e&amp;v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Dmitry%20Maykov&quot;/&gt;&lt;br /&gt;Dmitry Maykov&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://chrisbradley.dev/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11767079?u=e64f67faffd350af19aa896ff89a0708829e9a2a&amp;v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Chris%20Bradley&quot;/&gt;&lt;br /&gt;Chris Bradley&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://liminity.se/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/179804668?v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Liminity%20AB&quot;/&gt;&lt;br /&gt;Liminity AB&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/val-town&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/114268765?v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Val%20Town&quot;/&gt;&lt;br /&gt;Val Town&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.illarionvk.com/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5012724?u=7cfa13652f7ac5fb3c56d880e3eb3fbe40c3ea34&amp;v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Illarion%20Koperski&quot;/&gt;&lt;br /&gt;Illarion Koperski&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://iamkhan.io/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6490268?u=59a369dc23fca0ed9943e5f020ff27ca968704d9&amp;v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Kalle&quot;/&gt;&lt;br /&gt;Kalle&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://jwyce.gg/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/16946573?u=8a27004b3c768f029b2f49b7cf5d3b94c62a16a1&amp;v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Jared%20Wyce&quot;/&gt;&lt;br /&gt;Jared Wyce&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.fanvue.com/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/72873652?v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;fanvue&quot;/&gt;&lt;br /&gt;fanvue&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AscentFactory&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/33631274?v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Ascent%20Factory&quot;/&gt;&lt;br /&gt;Ascent Factory&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/drwpwrs&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/49917220?u=ceb7a6b68f6366882ac7bc599383382f48e41e94&amp;v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Drew%20Powers&quot;/&gt;&lt;br /&gt;Drew Powers&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://drizzle.team/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/108468352?v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Drizzle%20Team&quot;/&gt;&lt;br /&gt;Drizzle Team&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/cerjs&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5610115?u=be201750effeb8826a788dea206e594008cfe3f2&amp;v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Leo%20Jace&quot;/&gt;&lt;br /&gt;Leo Jace&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://jonas-strassel.de/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4662748?u=c8153c564cd341ccd0ccbbc695a2292587dc1679&amp;v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Jonas%20Strassel&quot;/&gt;&lt;br /&gt;Jonas Strassel&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.spencermckenney.com/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/15722950?u=e9b60ab93918fb2352b6357571cd67b9004d91e6&amp;v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Spencer%20McKenney&quot;/&gt;&lt;br /&gt;Spencer McKenney&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.stefan-wallin.se/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/457653?u=548c6e3482bd0c0d935d99b9c564fdbbe0d8da5d&amp;v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Stefan%20Wallin&quot;/&gt;&lt;br /&gt;Stefan Wallin&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/maiconcarraro&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13419087?u=34a2d709766786d981dc43186d9f4831699fbf1a&amp;v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Maicon%20Carraro&quot;/&gt;&lt;br /&gt;Maicon Carraro&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/infodusha&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5677047?u=d503fccc70c9a66524639691b62853994335af0b&amp;v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Andrei%20Karushev&quot;/&gt;&lt;br /&gt;Andrei Karushev&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://venue.ink/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/67328248?v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Venue%20Ink&quot;/&gt;&lt;br /&gt;Venue Ink&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://bestkru.com/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/159320286?v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;BestKru&quot;/&gt;&lt;br /&gt;BestKru&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/BrianCurliss&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1222949?v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Brian%20Curliss&quot;/&gt;&lt;br /&gt;Brian Curliss&lt;/a&gt;&lt;/td&gt;
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.illarionvk.com/?ref=trpc&amp;utm_source=github&amp;utm_medium=referral&amp;utm_campaign=trpc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5012724?u=7cfa13652f7ac5fb3c56d880e3eb3fbe40c3ea34&amp;v=4&amp;s=100&quot; width=&quot;100&quot; alt=&quot;Illarion%20Koperski&quot;/&gt;&lt;br /&gt;Illarion Koperski&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;!-- markdownlint-restore --&gt;
&lt;!-- prettier-ignore-end --&gt;

&lt;!-- SPONSORS:LIST:END --&gt;

## All contributors ‚ú®

&lt;a href=&quot;https://github.com/trpc/trpc/graphs/contributors&quot;&gt;
  &lt;p align=&quot;center&quot;&gt;
    &lt;img width=&quot;720&quot; src=&quot;https://contrib.rocks/image?repo=trpc/trpc&quot; alt=&quot;A table of avatars from the project&#039;s contributors&quot; /&gt;
  &lt;/p&gt;
&lt;/a&gt;

---

&lt;a href=&quot;https://vercel.com/?utm_source=trpc&amp;utm_campaign=oss&quot;&gt;
  &lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;./www/static/img/powered-by-vercel.svg&quot; alt=&quot;Powered by Vercel&quot; title=&quot;Powered by Vercel&quot;&gt;
  &lt;/p&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[remix-run/react-router]]></title>
            <link>https://github.com/remix-run/react-router</link>
            <guid>https://github.com/remix-run/react-router</guid>
            <pubDate>Sat, 17 May 2025 00:04:38 GMT</pubDate>
            <description><![CDATA[Declarative routing for React]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/remix-run/react-router">remix-run/react-router</a></h1>
            <p>Declarative routing for React</p>
            <p>Language: TypeScript</p>
            <p>Stars: 54,826</p>
            <p>Forks: 10,599</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre>[![npm package][npm-badge]][npm] [![build][build-badge]][build]

[npm-badge]: https://img.shields.io/npm/v/react-router-dom.svg
[npm]: https://www.npmjs.org/package/react-router-dom
[build-badge]: https://img.shields.io/github/actions/workflow/status/remix-run/react-router/test.yml?branch=dev&amp;style=square
[build]: https://github.com/remix-run/react-router/actions/workflows/test.yml

React Router is a multi-strategy router for React bridging the gap from React 18 to React 19. You can use it maximally as a React framework or minimally as a library with your own architecture.

- [Getting Started - Framework](https://reactrouter.com/start/framework/installation)
- [Getting Started - Library](https://reactrouter.com/start/library/installation)
- [Upgrade from v6](https://reactrouter.com/upgrading/v6)
- [Upgrade from Remix](https://reactrouter.com/upgrading/remix)
- [Changelog](https://github.com/remix-run/react-router/blob/main/CHANGELOG.md)

## Packages

- [`react-router`](./packages/react-router)
- [`@react-router/dev`](./packages/react-router-dev)
- [`@react-router/node`](./packages/react-router-node)
- [`@react-router/cloudflare`](./packages/react-router-cloudflare)
- [`@react-router/serve`](./packages/react-router-serve)
- [`@react-router/fs-routes`](./packages/react-router-fs-routes)

## Previous Versions

- [v6](https://reactrouter.com/v6)
- [v5](https://v5.reactrouter.com/)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[typeorm/typeorm]]></title>
            <link>https://github.com/typeorm/typeorm</link>
            <guid>https://github.com/typeorm/typeorm</guid>
            <pubDate>Sat, 17 May 2025 00:04:37 GMT</pubDate>
            <description><![CDATA[ORM for TypeScript and JavaScript. Supports MySQL, PostgreSQL, MariaDB, SQLite, MS SQL Server, Oracle, SAP Hana, WebSQL databases. Works in NodeJS, Browser, Ionic, Cordova and Electron platforms.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/typeorm/typeorm">typeorm/typeorm</a></h1>
            <p>ORM for TypeScript and JavaScript. Supports MySQL, PostgreSQL, MariaDB, SQLite, MS SQL Server, Oracle, SAP Hana, WebSQL databases. Works in NodeJS, Browser, Ionic, Cordova and Electron platforms.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 35,318</p>
            <p>Forks: 6,406</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;http://typeorm.io/&quot;&gt;
    &lt;picture&gt;
        &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/typeorm/typeorm/raw/master/resources/typeorm-logo-colored-light.png&quot;&gt;
        &lt;source  media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/typeorm/typeorm/raw/master/resources/typeorm-logo-colored-dark.png&quot;&gt;
        &lt;img height=&quot;80&quot; width=&quot;auto&quot; alt=&quot;TypeORM Logo&quot; src=&quot;https://github.com/typeorm/typeorm/raw/master/resources/typeorm-logo-colored-dark.png&quot;&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;br&gt;
	&lt;a href=&quot;https://github.com/typeorm/typeorm/actions/workflows/test.yml&quot;&gt;
		&lt;img src=&quot;https://github.com/typeorm/typeorm/actions/workflows/test.yml/badge.svg?branch=master&quot;&gt;
	&lt;/a&gt;
	&lt;a href=&quot;https://badge.fury.io/js/typeorm&quot;&gt;
		&lt;img src=&quot;https://badge.fury.io/js/typeorm.svg&quot;&gt;
	&lt;/a&gt;
    &lt;a href=&#039;https://coveralls.io/github/typeorm/typeorm?branch=master&#039;&gt;
        &lt;img src=&#039;https://coveralls.io/repos/github/typeorm/typeorm/badge.svg?branch=master&#039; alt=&#039;Coverage Status&#039; /&gt;
    &lt;/a&gt;
  &lt;br&gt;
  &lt;br&gt;
&lt;/div&gt;

TypeORM is an [ORM](https://en.wikipedia.org/wiki/Object-relational_mapping)
that can run in NodeJS, Browser, Cordova, PhoneGap, Ionic, React Native, NativeScript, Expo, and Electron platforms
and can be used with TypeScript and JavaScript (ES2021).
Its goal is to always support the latest JavaScript features and provide additional features
that help you to develop any kind of application that uses databases - from
small applications with a few tables to large-scale enterprise applications
with multiple databases.

TypeORM supports both [Active Record](./docs/active-record-data-mapper.md#what-is-the-active-record-pattern) and [Data Mapper](./docs/active-record-data-mapper.md#what-is-the-data-mapper-pattern) patterns,
unlike all other JavaScript ORMs currently in existence,
which means you can write high-quality, loosely coupled, scalable,
maintainable applications in the most productive way.

TypeORM is highly influenced by other ORMs, such as [Hibernate](http://hibernate.org/orm/),
[Doctrine](http://www.doctrine-project.org/) and [Entity Framework](https://www.asp.net/entity-framework).

## Features

-   Supports both [DataMapper](./docs/active-record-data-mapper.md#what-is-the-data-mapper-pattern) and [ActiveRecord](./docs/active-record-data-mapper.md#what-is-the-active-record-pattern) (your choice).
-   Entities and columns.
-   Database-specific column types.
-   Entity manager.
-   Repositories and custom repositories.
-   Clean object-relational model.
-   Associations (relations).
-   Eager and lazy relations.
-   Uni-directional, bi-directional, and self-referenced relations.
-   Supports multiple inheritance patterns.
-   Cascades.
-   Indices.
-   Transactions.
-   Migrations and automatic migrations generation.
-   Connection pooling.
-   Replication.
-   Using multiple database instances.
-   Working with multiple database types.
-   Cross-database and cross-schema queries.
-   Elegant-syntax, flexible and powerful QueryBuilder.
-   Left and inner joins.
-   Proper pagination for queries using joins.
-   Query caching.
-   Streaming raw results.
-   Logging.
-   Listeners and subscribers (hooks).
-   Supports closure table pattern.
-   Schema declaration in models or separate configuration files.
-   Supports MySQL / MariaDB / Postgres / CockroachDB / SQLite / Microsoft SQL Server / Oracle / SAP Hana / sql.js.
-   Supports MongoDB NoSQL database.
-   Works in NodeJS / Browser / Ionic / Cordova / React Native / NativeScript / Expo / Electron platforms.
-   TypeScript and JavaScript support.
-   ESM and CommonJS support.
-   Produced code is performant, flexible, clean, and maintainable.
-   Follows all possible best practices.
-   CLI.

And more...

With TypeORM your models look like this:

```typescript
import { Entity, PrimaryGeneratedColumn, Column } from &quot;typeorm&quot;

@Entity()
export class User {
    @PrimaryGeneratedColumn()
    id: number

    @Column()
    firstName: string

    @Column()
    lastName: string

    @Column()
    age: number
}
```

And your domain logic looks like this:

```typescript
const userRepository = MyDataSource.getRepository(User)

const user = new User()
user.firstName = &quot;Timber&quot;
user.lastName = &quot;Saw&quot;
user.age = 25
await userRepository.save(user)

const allUsers = await userRepository.find()
const firstUser = await userRepository.findOneBy({
    id: 1,
}) // find by id
const timber = await userRepository.findOneBy({
    firstName: &quot;Timber&quot;,
    lastName: &quot;Saw&quot;,
}) // find by firstName and lastName

await userRepository.remove(timber)
```

Alternatively, if you prefer to use the `ActiveRecord` implementation, you can use it as well:

```typescript
import { Entity, PrimaryGeneratedColumn, Column, BaseEntity } from &quot;typeorm&quot;

@Entity()
export class User extends BaseEntity {
    @PrimaryGeneratedColumn()
    id: number

    @Column()
    firstName: string

    @Column()
    lastName: string

    @Column()
    age: number
}
```

And your domain logic will look this way:

```typescript
const user = new User()
user.firstName = &quot;Timber&quot;
user.lastName = &quot;Saw&quot;
user.age = 25
await user.save()

const allUsers = await User.find()
const firstUser = await User.findOneBy({
    id: 1,
})
const timber = await User.findOneBy({
    firstName: &quot;Timber&quot;,
    lastName: &quot;Saw&quot;
})

await timber.remove()
```

## Installation

1. Install the npm package:

    `npm install typeorm --save`

2. You need to install `reflect-metadata` shim:

    `npm install reflect-metadata --save`

    and import it somewhere in the global place of your app (for example in `app.ts`):

    `import &quot;reflect-metadata&quot;`

3. You may need to install node typings:

    `npm install @types/node --save-dev`

4. Install a database driver:

    - for **MySQL** or **MariaDB**

        `npm install mysql --save` (you can install `mysql2` instead as well)

    - for **PostgreSQL** or **CockroachDB**

        `npm install pg --save`

    - for **SQLite**

        `npm install sqlite3 --save`

    - for **Microsoft SQL Server**

        `npm install mssql --save`

    - for **sql.js**

        `npm install sql.js --save`

    - for **Oracle**

        `npm install oracledb --save`

        To make the Oracle driver work, you need to follow the installation instructions from
        [their](https://github.com/oracle/node-oracledb) site.

    - for **SAP Hana**

        ```
        npm install @sap/hana-client
        npm install hdb-pool
        ```

        _SAP Hana support made possible by the sponsorship of [Neptune Software](https://www.neptune-software.com/)._

    - for **Google Cloud Spanner**

        ```
        npm install @google-cloud/spanner --save
        ```

        Provide authentication credentials to your application code
        by setting the environment variable `GOOGLE_APPLICATION_CREDENTIALS`:

        ```shell
        # Linux/macOS
        export GOOGLE_APPLICATION_CREDENTIALS=&quot;KEY_PATH&quot;

        # Windows
        set GOOGLE_APPLICATION_CREDENTIALS=KEY_PATH

        # Replace KEY_PATH with the path of the JSON file that contains your service account key.
        ```

        To use Spanner with the emulator you should set `SPANNER_EMULATOR_HOST` environment variable:

        ```shell
        # Linux/macOS
        export SPANNER_EMULATOR_HOST=localhost:9010

        # Windows
        set SPANNER_EMULATOR_HOST=localhost:9010
        ```

    - for **MongoDB** (experimental)

        `npm install mongodb@^5.2.0 --save`

    - for **NativeScript**, **react-native** and **Cordova**

        Check [documentation of supported platforms](./docs/supported-platforms.md)

    Install only _one_ of them, depending on which database you use.

##### TypeScript configuration

Also, make sure you are using TypeScript version **4.5** or higher,
and you have enabled the following settings in `tsconfig.json`:

```json
&quot;emitDecoratorMetadata&quot;: true,
&quot;experimentalDecorators&quot;: true,
```

You may also need to enable `es6` in the `lib` section of compiler options, or install `es6-shim` from `@types`.

## Quick Start

The quickest way to get started with TypeORM is to use its CLI commands to generate a starter project.
Quick start works only if you are using TypeORM in a NodeJS application.
If you are using other platforms, proceed to the [step-by-step guide](#step-by-step-guide).

To create a new project using CLI, run the following command:

```shell
npx typeorm init --name MyProject --database postgres
```

Where `name` is the name of your project and `database` is the database you&#039;ll use.
Database can be one of the following values: `mysql`, `mariadb`, `postgres`, `cockroachdb`, `sqlite`, `mssql`, `sap`, `spanner`, `oracle`, `mongodb`,
`cordova`, `react-native`, `expo`, `nativescript`.

This command will generate a new project in the `MyProject` directory with the following files:

```
MyProject
‚îú‚îÄ‚îÄ src                   // place of your TypeScript code
‚îÇ   ‚îú‚îÄ‚îÄ entity            // place where your entities (database models) are stored
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ User.ts       // sample entity
‚îÇ   ‚îú‚îÄ‚îÄ migration         // place where your migrations are stored
‚îÇ   ‚îú‚îÄ‚îÄ data-source.ts    // data source and all connection configuration
‚îÇ   ‚îî‚îÄ‚îÄ index.ts          // start point of your application
‚îú‚îÄ‚îÄ .gitignore            // standard gitignore file
‚îú‚îÄ‚îÄ package.json          // node module dependencies
‚îú‚îÄ‚îÄ README.md             // simple readme file
‚îî‚îÄ‚îÄ tsconfig.json         // TypeScript compiler options
```

&gt; You can also run `typeorm init` on an existing node project, but be careful - it may override some files you already have.

The next step is to install new project dependencies:

```shell
cd MyProject
npm install
```

After you have all dependencies installed, edit the `data-source.ts` file and put your own database connection configuration options in there:

```ts
export const AppDataSource = new DataSource({
    type: &quot;postgres&quot;,
    host: &quot;localhost&quot;,
    port: 5432,
    username: &quot;test&quot;,
    password: &quot;test&quot;,
    database: &quot;test&quot;,
    synchronize: true,
    logging: true,
    entities: [Post, Category],
    subscribers: [],
    migrations: [],
})
```

Particularly, most of the time you&#039;ll only need to configure
`host`, `username`, `password`, `database` and maybe `port` options.

Once you finish with configuration and all node modules are installed, you can run your application:

```shell
npm start
```

That&#039;s it, your application should successfully run and insert a new user into the database.
You can continue to work with this project and integrate other modules you need and start
creating more entities.

&gt; You can generate an ESM project by running
&gt; `npx typeorm init --name MyProject --database postgres --module esm` command.

&gt; You can generate an even more advanced project with express installed by running
&gt; `npx typeorm init --name MyProject --database mysql --express` command.

&gt; You can generate a docker-compose file by running
&gt; `npx typeorm init --name MyProject --database postgres --docker` command.

## Step-by-Step Guide

What are you expecting from ORM?
First of all, you are expecting it will create database tables for you
and find / insert / update / delete your data without the pain of
having to write lots of hardly maintainable SQL queries.
This guide will show you how to set up TypeORM from scratch and make it do what you are expecting from an ORM.

### Create a model

Working with a database starts with creating tables.
How do you tell TypeORM to create a database table?
The answer is - through the models.
Your models in your app are your database tables.

For example, you have a `Photo` model:

```typescript
export class Photo {
    id: number
    name: string
    description: string
    filename: string
    views: number
    isPublished: boolean
}
```

And you want to store photos in your database.
To store things in the database, first, you need a database table,
and database tables are created from your models.
Not all models, but only those you define as _entities_.

### Create an entity

_Entity_ is your model decorated by an `@Entity` decorator.
A database table will be created for such models.
You work with entities everywhere in TypeORM.
You can load/insert/update/remove and perform other operations with them.

Let&#039;s make our `Photo` model an entity:

```typescript
import { Entity } from &quot;typeorm&quot;

@Entity()
export class Photo {
    id: number
    name: string
    description: string
    filename: string
    views: number
    isPublished: boolean
}
```

Now, a database table will be created for the `Photo` entity and we&#039;ll be able to work with it anywhere in our app.
We have created a database table, however, what table can exist without columns?
Let&#039;s create a few columns in our database table.

### Adding table columns

To add database columns, you simply need to decorate an entity&#039;s properties you want to make into a column
with a `@Column` decorator.

```typescript
import { Entity, Column } from &quot;typeorm&quot;

@Entity()
export class Photo {
    @Column()
    id: number

    @Column()
    name: string

    @Column()
    description: string

    @Column()
    filename: string

    @Column()
    views: number

    @Column()
    isPublished: boolean
}
```

Now `id`, `name`, `description`, `filename`, `views`, and `isPublished` columns will be added to the `photo` table.
Column types in the database are inferred from the property types you used, e.g.
`number` will be converted into `integer`, `string` into `varchar`, `boolean` into `bool`, etc.
But you can use any column type your database supports by explicitly specifying a column type into the `@Column` decorator.

We generated a database table with columns, but there is one thing left.
Each database table must have a column with a primary key.

### Creating a primary column

Each entity **must** have at least one primary key column.
This is a requirement and you can&#039;t avoid it.
To make a column a primary key, you need to use the `@PrimaryColumn` decorator.

```typescript
import { Entity, Column, PrimaryColumn } from &quot;typeorm&quot;

@Entity()
export class Photo {
    @PrimaryColumn()
    id: number

    @Column()
    name: string

    @Column()
    description: string

    @Column()
    filename: string

    @Column()
    views: number

    @Column()
    isPublished: boolean
}
```

### Creating an auto-generated column

Now, let&#039;s say you want your id column to be auto-generated (this is known as auto-increment / sequence / serial / generated identity column).
To do that, you need to change the `@PrimaryColumn` decorator to a `@PrimaryGeneratedColumn` decorator:

```typescript
import { Entity, Column, PrimaryGeneratedColumn } from &quot;typeorm&quot;

@Entity()
export class Photo {
    @PrimaryGeneratedColumn()
    id: number

    @Column()
    name: string

    @Column()
    description: string

    @Column()
    filename: string

    @Column()
    views: number

    @Column()
    isPublished: boolean
}
```

### Column data types

Next, let&#039;s fix our data types. By default, the string is mapped to a varchar(255)-like type (depending on the database type).
The number is mapped to an integer-like type (depending on the database type).
We don&#039;t want all our columns to be limited varchars or integers.
Let&#039;s setup the correct data types:

```typescript
import { Entity, Column, PrimaryGeneratedColumn } from &quot;typeorm&quot;

@Entity()
export class Photo {
    @PrimaryGeneratedColumn()
    id: number

    @Column({
        length: 100,
    })
    name: string

    @Column(&quot;text&quot;)
    description: string

    @Column()
    filename: string

    @Column(&quot;double&quot;)
    views: number

    @Column()
    isPublished: boolean
}
```

Column types are database-specific.
You can set any column type your database supports.
More information on supported column types can be found [here](./docs/entities.md#column-types).

### Creating a new `DataSource`

Now, when our entity is created, let&#039;s create `index.ts` file and set up our `DataSource` there:

```typescript
import &quot;reflect-metadata&quot;
import { DataSource } from &quot;typeorm&quot;
import { Photo } from &quot;./entity/Photo&quot;

const AppDataSource = new DataSource({
    type: &quot;postgres&quot;,
    host: &quot;localhost&quot;,
    port: 5432,
    username: &quot;root&quot;,
    password: &quot;admin&quot;,
    database: &quot;test&quot;,
    entities: [Photo],
    synchronize: true,
    logging: false,
})

// to initialize the initial connection with the database, register all entities
// and &quot;synchronize&quot; database schema, call &quot;initialize()&quot; method of a newly created database
// once in your application bootstrap
AppDataSource.initialize()
    .then(() =&gt; {
        // here you can start to work with your database
    })
    .catch((error) =&gt; console.log(error))
```

We are using Postgres in this example, but you can use any other supported database.
To use another database, simply change the `type` in the options to the database type you are using:
`mysql`, `mariadb`, `postgres`, `cockroachdb`, `sqlite`, `mssql`, `oracle`, `sap`, `spanner`, `cordova`, `nativescript`, `react-native`,
`expo`, or `mongodb`.
Also make sure to use your own host, port, username, password, and database settings.

We added our Photo entity to the list of entities for this data source.
Each entity you are using in your connection must be listed there.

Setting `synchronize` makes sure your entities will be synced with the database, every time you run the application.

### Running the application

Now if you run your `index.ts`, a connection with the database will be initialized and a database table for your photos will be created.

```shell
+-------------+--------------+----------------------------+
|                         photo                           |
+-------------+--------------+----------------------------+
| id          | int(11)      | PRIMARY KEY AUTO_INCREMENT |
| name        | varchar(100) |                            |
| description | text         |                            |
| filename    | varchar(255) |                            |
| views       | int(11)      |                            |
| isPublished | boolean      |                            |
+-------------+--------------+----------------------------+
```

### Creating and inserting a photo into the database

Now let&#039;s create a new photo to save it in the database:

```typescript
import { Photo } from &quot;./entity/Photo&quot;
import { AppDataSource } from &quot;./index&quot;

const photo = new Photo()
photo.name = &quot;Me and Bears&quot;
photo.description = &quot;I am near polar bears&quot;
photo.filename = &quot;photo-with-bears.jpg&quot;
photo.views = 1
photo.isPublished = true

await AppDataSource.manager.save(photo)
console.log(&quot;Photo has been saved. Photo id is&quot;, photo.id)
```

Once your entity is saved it will get a newly generated id.
`save` method returns an instance of the same object you pass to it.
It&#039;s not a new copy of the object, it modifies its &quot;id&quot; and returns it.

### Using Entity Manager

We just created a new photo and saved it in the database.
We used `EntityManager` to save it.
Using entity manager you can manipulate any entity in your app.
For example, let&#039;s load our saved entity:

```typescript
import { Photo } from &quot;./entity/Photo&quot;
import { AppDataSource } from &quot;./index&quot;

const savedPhotos = await AppDataSource.manager.find(Photo)
console.log(&quot;All photos from the db: &quot;, savedPhotos)
```

`savedPhotos` will be an array of Photo objects with the data loaded from the database.

Learn more about EntityManager [here](./docs/working-with-entity-manager.md).

### Using Repositories

Now let&#039;s refactor our code and use `Repository` instead of `EntityManager`.
Each entity has its own repository which handles all operations with its entity.
When you deal with entities a lot, Repositories are more convenient to use than EntityManagers:

```typescript
import { Photo } from &quot;./entity/Photo&quot;
import { AppDataSource } from &quot;./index&quot;

const photo = new Photo()
photo.name = &quot;Me and Bears&quot;
photo.description = &quot;I am near polar bears&quot;
photo.filename = &quot;photo-with-bears

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>