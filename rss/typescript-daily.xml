<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Sat, 26 Jul 2025 00:05:09 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[software-mansion/react-native-reanimated]]></title>
            <link>https://github.com/software-mansion/react-native-reanimated</link>
            <guid>https://github.com/software-mansion/react-native-reanimated</guid>
            <pubDate>Sat, 26 Jul 2025 00:05:09 GMT</pubDate>
            <description><![CDATA[React Native's Animated library reimplemented]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/software-mansion/react-native-reanimated">software-mansion/react-native-reanimated</a></h1>
            <p>React Native's Animated library reimplemented</p>
            <p>Language: TypeScript</p>
            <p>Stars: 9,935</p>
            <p>Forks: 1,389</p>
            <p>Stars today: 21 stars today</p>
            <h2>README</h2><pre>&lt;img src=&quot;https://user-images.githubusercontent.com/16062886/117443145-ff868480-af37-11eb-8680-648bccf0d0ce.png&quot; alt=&quot;React Native Reanimated by Software Mansion&quot; width=&quot;100%&quot;&gt;

### Create smooth animations with an excellent developer experience.

&gt; Reanimated 4 is here! Check out our [documentation page](https://docs.swmansion.com/react-native-reanimated/) for more information

### Nightly CI state

[![NPM Reanimated publish nightly](https://github.com/software-mansion/react-native-reanimated/actions/workflows/npm-reanimated-publish-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/npm-reanimated-publish-nightly.yml)
[![NPM Worklets publish [Nightly]](https://github.com/software-mansion/react-native-reanimated/actions/workflows/npm-worklets-publish-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/npm-worklets-publish-nightly.yml)
[![Lint clang-tidy [Nightly]](https://github.com/software-mansion/react-native-reanimated/actions/workflows/lint-clang-tidy-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/lint-clang-tidy-nightly.yml)
[![Reanimated compatibility check](https://github.com/software-mansion/react-native-reanimated/actions/workflows/reanimated-compatibility-check-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/reanimated-compatibility-check-nightly.yml)
[![Use frameworks Reanimated build check [Nightly]](https://github.com/software-mansion/react-native-reanimated/actions/workflows/use-frameworks-reanimated-build-check-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/use-frameworks-reanimated-build-check-nightly.yml)
[![React Native nightly Reanimated build check](https://github.com/software-mansion/react-native-reanimated/actions/workflows/react-native-nightly-reanimated-build-check-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/react-native-nightly-reanimated-build-check-nightly.yml)
[![Expo DevClient build check](https://github.com/software-mansion/react-native-reanimated/actions/workflows/expo-devclient-build-check-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/expo-devclient-build-check-nightly.yml)
[![Reanimated TypeScript compatibility test](https://github.com/software-mansion/react-native-reanimated/actions/workflows/reanimated-typescript-compatibility-test-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/reanimated-typescript-compatibility-test-nightly.yml)
[![Windows hosted app Reanimated build check](https://github.com/software-mansion/react-native-reanimated/actions/workflows/windows-hosted-app-reanimated-build-check-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/windows-hosted-app-reanimated-build-check-nightly.yml)
[![URL validation](https://github.com/software-mansion/react-native-reanimated/actions/workflows/url-validation-nightly.yml/badge.svg)](https://github.com/software-mansion/react-native-reanimated/actions/workflows/url-validation-nightly.yml)

## Installation

Check out the [installation](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/getting-started/#installation) section of our docs for the detailed installation instructions.

## Compatibility

React Native Reanimated 4.x supports only the [New React Native architecture](https://reactnative.dev/architecture/landing-page) and three latest React Native versions.

If your app still runs on the old architecture, please consider adopting the New Architecture or stay with latest 3.x release.

## Documentation

Check out our dedicated documentation page for info about this library, API reference and more: [https://docs.swmansion.com/react-native-reanimated/](https://docs.swmansion.com/react-native-reanimated/)

## Examples

The source code for the example (showcase) app is under the [`apps/common-app`](https://github.com/software-mansion/react-native-reanimated/blob/main/apps/common-app/) directory.
If you want to play with the API but don&#039;t feel like trying it on a real app, you can run the example project. Check [Example README](apps/fabric-example/README.md) for installation instructions.

## License

Reanimated library is licensed under [The MIT License](LICENSE).

## Credits

This project has been built and is maintained thanks to the support from [Shopify](https://shopify.com), [Expo.io](https://expo.io) and [Software Mansion](https://swmansion.com)

[![shopify](https://avatars1.githubusercontent.com/u/8085?v=3&amp;s=100 &#039;Shopify.com&#039;)](https://shopify.com)
[![expo](https://avatars2.githubusercontent.com/u/12504344?v=3&amp;s=100 &#039;Expo.io&#039;)](https://expo.io)
[![swm](https://logo.swmansion.com/logo?color=white&amp;variant=desktop&amp;width=150&amp;tag=react-native-reanimated-github &#039;Software Mansion&#039;)](https://swmansion.com)

## Community Discord

[Join the Software Mansion Community Discord](https://discord.swmansion.com) to chat about Reanimated or other Software Mansion libraries.

## Reanimated is created by Software Mansion

Since 2012 [Software Mansion](https://swmansion.com) is a software agency with experience in building web and mobile apps. We are Core React Native Contributors and experts in dealing with all kinds of React Native issues. We can help you build your next dream product – [Hire us](https://swmansion.com/contact/projects?utm_source=reanimated&amp;utm_medium=readme).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[srbhr/Resume-Matcher]]></title>
            <link>https://github.com/srbhr/Resume-Matcher</link>
            <guid>https://github.com/srbhr/Resume-Matcher</guid>
            <pubDate>Sat, 26 Jul 2025 00:05:08 GMT</pubDate>
            <description><![CDATA[Improve your resumes with Resume Matcher. Get insights, keyword suggestions and tune your resumes to job descriptions.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/srbhr/Resume-Matcher">srbhr/Resume-Matcher</a></h1>
            <p>Improve your resumes with Resume Matcher. Get insights, keyword suggestions and tune your resumes to job descriptions.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 19,669</p>
            <p>Forks: 4,094</p>
            <p>Stars today: 1,814 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

[![Resume Matcher](assets/page_2.png)](https://www.resumematcher.fyi)

# Resume Matcher


[𝙹𝚘𝚒𝚗 𝙳𝚒𝚜𝚌𝚘𝚛𝚍](https://dsc.gg/resume-matcher) ✦ [𝚆𝚎𝚋𝚜𝚒𝚝𝚎](https://resumematcher.fyi) ✦ [𝙷𝚘𝚠 𝚝𝚘 𝙸𝚗𝚜𝚝𝚊𝚕𝚕 ](#how-to-install) ✦ [𝙲𝚘𝚗𝚝𝚛𝚒𝚋𝚞𝚝𝚘𝚛𝚜](#contributors) ✦ [𝙳𝚘𝚗𝚊𝚝𝚎](#support-the-development-by-donating) ✦ [𝚃𝚠𝚒𝚝𝚝𝚎𝚛/𝚇](https://twitter.com/_srbhr_) ✦ [𝙻𝚒𝚗𝚔𝚎𝚍𝙸𝚗](https://www.linkedin.com/company/resume-matcher/)

**Stop getting auto-rejected by ATS bots.** Resume Matcher is the AI-powered platform that reverse-engineers hiring algorithms to show you exactly how to tailor your resume. Get the keywords, formatting, and insights that actually get you past the first screen and into human hands.

Hoping to make this, **VS Code for making resumes**.

&lt;/div&gt;

&lt;br&gt;

&lt;div align=&quot;center&quot;&gt;

![Stars](https://img.shields.io/github/stars/srbhr/Resume-Matcher?labelColor=black&amp;style=for-the-badge&amp;color=c20a71)
![Apache 2.0](https://img.shields.io/github/license/srbhr/Resume-Matcher?labelColor=black&amp;style=for-the-badge&amp;color=c20a71) ![Forks](https://img.shields.io/github/forks/srbhr/Resume-Matcher?labelColor=black&amp;style=for-the-badge&amp;color=c20a71) ![version](https://img.shields.io/badge/Version-0.1%20Veridis%20Quo-FFF?labelColor=black&amp;logo=LinkedIn&amp;style=for-the-badge&amp;color=c20a71)


[![Discord](https://img.shields.io/discord/1122069176962531400?labelColor=black&amp;logo=discord&amp;logoColor=c20a71&amp;style=for-the-badge&amp;color=c20a71)](https://dsc.gg/resume-matcher) [![Website](https://img.shields.io/badge/website-Resume%20Matcher-FFF?labelColor=black&amp;style=for-the-badge&amp;color=c20a71)](https://resumematcher.fyi) [![LinkedIn](https://img.shields.io/badge/LinkedIn-Resume%20Matcher-FFF?labelColor=black&amp;logo=LinkedIn&amp;style=for-the-badge&amp;color=c20a71)](https://www.linkedin.com/company/resume-matcher/)

&lt;a href=&quot;https://trendshift.io/repositories/565&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/565&quot; alt=&quot;srbhr%2FResume-Matcher | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;

&gt; \[!IMPORTANT]
&gt;
&gt; This project is in active development. New features are being added continuously, and we welcome contributions from the community. There are some breaking changes on the `main` branch. If you have any suggestions or feature requests, please feel free to open an issue on GitHub or discuss it on our [Discord](https://dsc.gg/resume-matcher) server.


## Getting started with Resume Matcher

Resume Matcher is designed to help you optimize your resume with the aim to highlight your skills and experience in a way that resonates with potential employers.

We&#039;re working on actively improving the platform, towards building a **VS Code for making resumes**, and adding new features. The best way to stay updated is to join the discord discussion and be part of the active development community.

&gt; Join our [Discord](https://dsc.gg/resume-matcher) community 👇
[![Discord](assets/resume_matcher_discord.png)](https://dsc.gg/resume-matcher)

&gt; Follow us on [LinkedIn](https://www.linkedin.com/company/resume-matcher/) ✨
[![LinkedIn](assets/resume_matcher_linkedin.png)](https://www.linkedin.com/company/resume-matcher/)

&gt; ⭐ Star Resume Matcher to support the development and get updates on GitHub.
![Star Resume Matcher](assets/star_resume_matcher.png)

## Key Features

![resume_matcher_features](assets/resume_matcher_features.png)

- **Works locally**: No need to upload your resume to a server. Everything runs on your machine with open source AI models by Ollama.
- **ATS Compatibility**: Get a detailed analysis of your resume&#039;s compatibility with ATS systems.
- **Instant Match Score**: Upload resume &amp; job description for a quick match score and key improvement areas.
- **Keyword Optimizer**: Align your resume with job keywords and identify critical content gaps.
- **Guided Improvements**: Get clear suggestions to make your resume stand out.

### Roadmap 

If you have any suggestions or feature requests, please feel free to open an issue on GitHub. And discuss it on our [Discord](https://dsc.gg/resume-matcher) server.

- Visual keyword highlighting.
- AI Canvas, which can help to craft impactful, metric-driven resume content.
- Multi-job description optimization.

## How to Install

![Installation](assets/how_to_install_resumematcher.png)

Follow the instructions in the [SETUP.md](SETUP.md) file to set up the project locally. The setup script will install all the necessary dependencies and configure your environment.

The project is built using:

- FastAPI for the backend.
- Next.js for the frontend.
- Ollama for local AI model serving.
- Tailwind CSS for styling.
- SQLite for the database.

| Technology   | Info/Version                               |
|--------------|---------------------------------------|
| Python      | 3.12+                   |
| Next.js      | 15+                   |
| Ollama       |        0.6.7        |


## Join Us and Contribute

![how to contribute](assets/how_to_contribute.png)

We welcome contributions from everyone! Whether you&#039;re a developer, designer, or just someone who wants to help out. All the contriburtors are listed in the [about page](https://resumematcher.fyi/about) on our website and on the GitHub Readme here.

Checkout the roadmap if you would like to work on the features that are planned for the future. If you have any suggestions or feature requests, please feel free to open an issue on GitHub. And discuss it on our [Discord](https://dsc.gg/resume-matcher) server.

## Contributors
![Contributors](assets/contributors.png)

&lt;a href=&quot;https://github.com/srbhr/Resume-Matcher/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=srbhr/Resume-Matcher&quot; /&gt;
&lt;/a&gt;

## Support the Development by Donating
![donate](assets/supporting_resume_matcher.png)

If you would like to support the development of Resume Matcher, you can do so by donating. Your contributions will help us keep the project alive and continue adding new features.

| Platform  | Link                                   |
|-----------|----------------------------------------|
| GitHub    | [![GitHub Sponsors](https://img.shields.io/github/sponsors/srbhr?style=for-the-badge&amp;color=c20a71&amp;labelColor=black&amp;logo=github)](https://github.com/sponsors/srbhr) |
| Buy Me a Coffee | [![BuyMeACoffee](https://img.shields.io/badge/Buy%20Me%20a%20Coffee-ffdd00?style=for-the-badge&amp;logo=buy-me-a-coffee&amp;color=c20a72&amp;logoColor=white)](https://www.buymeacoffee.com/srbhr) |

&lt;details&gt;
  &lt;summary&gt;&lt;kbd&gt;Star History&lt;/kbd&gt;&lt;/summary&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=srbhr/resume-matcher&amp;theme=dark&amp;type=Date&quot;&gt;
    &lt;img width=&quot;100%&quot; src=&quot;https://api.star-history.com/svg?repos=srbhr/resume-matcher&amp;theme=dark&amp;type=Date&quot;&gt;
  &lt;/picture&gt;
&lt;/details&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[EvolutionAPI/evolution-api]]></title>
            <link>https://github.com/EvolutionAPI/evolution-api</link>
            <guid>https://github.com/EvolutionAPI/evolution-api</guid>
            <pubDate>Sat, 26 Jul 2025 00:05:07 GMT</pubDate>
            <description><![CDATA[Evolution API is an open-source WhatsApp integration API]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/EvolutionAPI/evolution-api">EvolutionAPI/evolution-api</a></h1>
            <p>Evolution API is an open-source WhatsApp integration API</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,557</p>
            <p>Forks: 3,663</p>
            <p>Stars today: 46 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;Evolution Api&lt;/h1&gt;

&lt;div align=&quot;center&quot;&gt;

[![Docker Image	(https://img.shields.io/badge/Docker-Image-blue)](https://hub.docker.com/r/evoapicloud/evolution-api)]
[![Whatsapp Group](https://img.shields.io/badge/Group-WhatsApp-%2322BC18)](https://evolution-api.com/whatsapp)
[![Discord Community](https://img.shields.io/badge/Discord-Community-blue)](https://evolution-api.com/discord)
[![Postman Collection](https://img.shields.io/badge/Postman-Collection-orange)](https://evolution-api.com/postman) 
[![Documentation](https://img.shields.io/badge/Documentation-Official-green)](https://doc.evolution-api.com)
[![License](https://img.shields.io/badge/license-Apache--2.0-blue)](./LICENSE)
[![Support](https://img.shields.io/badge/Donation-picpay-green)](https://app.picpay.com/user/davidsongomes1998)
[![Sponsors](https://img.shields.io/badge/Github-sponsor-orange)](https://github.com/sponsors/EvolutionAPI)

&lt;/div&gt;
  
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;./public/images/cover.png&quot;&gt;&lt;/div&gt;

## Evolution API

Evolution API began as a WhatsApp controller API based on [CodeChat](https://github.com/code-chat-br/whatsapp-api), which in turn implemented the [Baileys](https://github.com/WhiskeySockets/Baileys) library. While originally focused on WhatsApp, Evolution API has grown into a comprehensive platform supporting multiple messaging services and integrations. We continue to acknowledge CodeChat for laying the groundwork.

Today, Evolution API is not limited to WhatsApp. It integrates with various platforms such as Typebot, Chatwoot, Dify, and OpenAI, offering a broad array of functionalities beyond messaging. Evolution API supports both the Baileys-based WhatsApp API and the official WhatsApp Business API, with upcoming support for Instagram and Messenger.

## Looking for a Lightweight Version?
For those who need a more streamlined and performance-optimized version, check out [Evolution API Lite](https://github.com/EvolutionAPI/evolution-api-lite). It&#039;s designed specifically for microservices, focusing solely on connectivity without integrations or audio conversion features. Ideal for environments that prioritize simplicity and efficiency.

## Types of Connections

Evolution API supports multiple types of connections to WhatsApp, enabling flexible and powerful integration options:

- *WhatsApp API - Baileys*:
  - A free API based on WhatsApp Web, leveraging the [Baileys library](https://github.com/WhiskeySockets/Baileys).
  - This connection type allows control over WhatsApp Web functionalities through a RESTful API, suitable for multi-service chats, service bots, and other WhatsApp-integrated systems.
  - Note: This method relies on the web version of WhatsApp and may have limitations compared to official APIs.

- *WhatsApp Cloud API*:
  - The official API provided by Meta (formerly Facebook).
  - This connection type offers a robust and reliable solution designed for businesses needing higher volumes of messaging and better integration support.
  - The Cloud API supports features such as end-to-end encryption, advanced analytics, and more comprehensive customer service tools.
  - To use this API, you must comply with Meta&#039;s policies and potentially pay for usage based on message volume and other factors.

## Integrations

Evolution API supports various integrations to enhance its functionality. Below is a list of available integrations and their uses:

- [Typebot](https://typebot.io/):
  - Build conversational bots using Typebot, integrated directly into Evolution with trigger management.

- [Chatwoot](https://www.chatwoot.com/):
  - Direct integration with Chatwoot for handling customer service for your business.

- [RabbitMQ](https://www.rabbitmq.com/):
  - Receive events from the Evolution API via RabbitMQ.

- [Amazon SQS](https://aws.amazon.com/pt/sqs/):
  - Receive events from the Evolution API via Amazon SQS.

- [Socket.io](https://socket.io/):
  - Receive events from the Evolution API via WebSocket.

- [Dify](https://dify.ai/):
  - Integrate your Evolution API directly with Dify AI for seamless trigger management and multiple agents.

- [OpenAI](https://openai.com/):
  - Integrate your Evolution API with OpenAI for AI capabilities, including audio-to-text conversion, available across all Evolution integrations.

- Amazon S3 / Minio:
  - Store media files received in [Amazon S3](https://aws.amazon.com/pt/s3/) or [Minio](https://min.io/).

## Telemetry Notice

To continuously improve our services, we have implemented telemetry that collects data on the routes used, the most accessed routes, and the version of the API in use. We would like to assure you that no sensitive or personal data is collected during this process. The telemetry helps us identify improvements and provide a better experience for users.

## Evolution Support Premium

Join our Evolution Pro community for expert support and a weekly call to answer questions. Visit the link below to learn more and subscribe:

[Click here to learn more](https://evolution-api.com/suporte-pro)

# Donate to the project.

#### Github Sponsors

https://github.com/sponsors/EvolutionAPI

# Content Creator Partners

We are proud to collaborate with the following content creators who have contributed valuable insights and tutorials about Evolution API:

- [Promovaweb](https://www.youtube.com/@promovaweb)
- [Sandeco](https://www.youtube.com/@canalsandeco)
- [Comunidade ZDG](https://www.youtube.com/@ComunidadeZDG)
- [Francis MNO](https://www.youtube.com/@FrancisMNO)
- [Pablo Cabral](https://youtube.com/@pablocabral)
- [XPop Digital](https://www.youtube.com/@xpopdigital)
- [Costar Wagner Dev](https://www.youtube.com/@costarwagnerdev)
- [Dante Testa](https://youtube.com/@dantetesta_)
- [Rubén Salazar](https://youtube.com/channel/UCnYGZIE2riiLqaN9sI6riig)
- [OrionDesign](youtube.com/OrionDesign_Oficial)
- [IMPA 365](youtube.com/@impa365_ofc)
- [Comunidade Hub Connect](https://youtube.com/@comunidadehubconnect)
- [dSantana Automações](https://www.youtube.com/channel/UCG7DjUmAxtYyURlOGAIryNQ?view_as=subscriber)
- [Edison Martins](https://www.youtube.com/@edisonmartinsmkt)
- [Astra Online](https://www.youtube.com/@astraonlineweb)
- [MKT Seven Automações](https://www.youtube.com/@sevenautomacoes)
- [Vamos automatizar](https://www.youtube.com/vamosautomatizar)

## License

Evolution API is licensed under the Apache License 2.0, with the following additional conditions:

1. **LOGO and copyright information**: In the process of using Evolution API&#039;s frontend components, you may not remove or modify the LOGO or copyright information in the Evolution API console or applications. This restriction is inapplicable to uses of Evolution API that do not involve its frontend components.

2. **Usage Notification Requirement**: If Evolution API is used as part of any project, including closed-source systems (e.g., proprietary software), the user is required to display a clear notification within the system that Evolution API is being utilized. This notification should be visible to system administrators and accessible from the system&#039;s documentation or settings page. Failure to comply with this requirement may result in the necessity for a commercial license, as determined by the producer.

Please contact contato@evolution-api.com to inquire about licensing matters.

Apart from the specific conditions mentioned above, all other rights and restrictions follow the Apache License 2.0. Detailed information about the Apache License 2.0 can be found at [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0).

© 2024 Evolution API</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[activepieces/activepieces]]></title>
            <link>https://github.com/activepieces/activepieces</link>
            <guid>https://github.com/activepieces/activepieces</guid>
            <pubDate>Sat, 26 Jul 2025 00:05:06 GMT</pubDate>
            <description><![CDATA[AI Agents & MCPs & AI Workflow Automation • (280+ MCP servers for AI agents) • AI Automation / AI Agent with MCPs • AI Workflows & AI Agents • MCPs for AI Agents]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/activepieces/activepieces">activepieces/activepieces</a></h1>
            <p>AI Agents & MCPs & AI Workflow Automation • (280+ MCP servers for AI agents) • AI Automation / AI Agent with MCPs • AI Workflows & AI Agents • MCPs for AI Agents</p>
            <p>Language: TypeScript</p>
            <p>Stars: 15,974</p>
            <p>Forks: 2,248</p>
            <p>Stars today: 18 stars today</p>
            <h2>README</h2><pre>
&lt;h1 align=&quot;center&quot;&gt;
  &lt;a
    target=&quot;_blank&quot;
    href=&quot;https://activepieces.com&quot;
  &gt;
    &lt;img
      align=&quot;center&quot;
      alt=&quot;Activepieces&quot;
src=&quot;https://github.com/activepieces/activepieces/assets/1812998/76c97441-c285-4480-bc75-30a0c73ed340&quot;
      style=&quot;width:100%;&quot;
    /&gt;
    
  &lt;/a&gt;
&lt;/h1&gt;


&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;/LICENSE&quot; target=&quot;_blank&quot;&gt;&lt;img src=&#039;https://img.shields.io/badge/license-MIT-green?style=for-the-badge&#039; /&gt;&lt;/a&gt;&amp;nbsp;&lt;img src=&#039;https://img.shields.io/github/commit-activity/w/activepieces/activepieces/main?style=for-the-badge&#039; /&gt;&amp;nbsp;&lt;a href=&#039;https://discord.gg/2jUXBKDdP8&#039;&gt;&lt;img src=&#039;https://img.shields.io/discord/966798490984382485?style=for-the-badge&#039; /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
   An open source replacement for Zapier
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a
    href=&quot;https://www.activepieces.com/docs&quot;
    target=&quot;_blank&quot;
  &gt;&lt;b&gt;Documentation&lt;/b&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;🌪️&amp;nbsp;&amp;nbsp;&amp;nbsp;
   &lt;a
    href=&quot;https://www.activepieces.com/docs/developers/overview&quot;
    target=&quot;_blank&quot;
  &gt;&lt;b&gt;Create a Piece&lt;/b&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;🖉&amp;nbsp;&amp;nbsp;&amp;nbsp;
  &lt;a
    href=&quot;https://www.activepieces.com/docs/install/overview&quot;
    target=&quot;_blank&quot;
  &gt;&lt;b&gt;Deploy&lt;/b&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;🔥&amp;nbsp;&amp;nbsp;&amp;nbsp;
  &lt;a
    href=&quot;https://discord.gg/yvxF5k5AUb&quot;
    target=&quot;_blank&quot;
  &gt;
    &lt;b&gt;Join Discord&lt;/b&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;br&gt;
&lt;br&gt;

# 🤯 Welcome to Activepieces

All-in-one AI automation designed to be **extensible** through a **type-safe** pieces framework written in **TypeScript**.
When you contribute pieces to Activepieces they become automatically available as MCP servers that you can use with LLMs through Claude Desktop, Cursor or Windsurf!

&lt;br&gt;
&lt;br&gt;

## 🔥 Why Activepieces is Different:

- **💖 Loved by Everyone**: Intuitive interface and great experience for both technical and non-technical users with a quick learning curve.

&lt;img src=&quot;/docs/resources/templates.gif&quot;&gt;

- **🌐 Open Ecosystem:** All pieces are open source and available on npmjs.com, **60% of the pieces are contributed by the community**.

- **🛠️ Largest open source MCP toolkit**: All our pieces (280+) are available as MCP that you can use with LLMs on Claude Desktop, Cursor or Windsurf.

- **🛠️  Pieces are written in Typescript**: Pieces are npm packages in TypeScript, offering full customization with the best developer experience, including **hot reloading** for **local** piece development on your machine. 😎

&lt;img src=&quot;/docs/resources/create-action.png&quot; alt=&quot;&quot;&gt;

- **🤖 AI-First**: Native AI pieces let you experiment with various providers, or create your own agents using our AI SDK, and there is Copilot to help you build flows inside the builder.

- **🏢 Enterprise-Ready**: Developers set up the tools, and anyone in the organization can use the no-code builder. Full customization from branding to control.

- **🔒 Secure by Design**: Self-hosted and network-gapped for maximum security and control over your data.

- **🧠 Human in the Loop**: Delay execution for a period of time or require approval. These are just pieces built on top of the piece framework, and you can build many pieces like that. 🎨

- **💻 Human Input Interfaces**: Built-in support for human input triggers like &quot;Chat Interface&quot; 💬 and &quot;Form Interface&quot; 📝



## 🛠️  Builder Features:

- [x] Loops
- [x] Branches
- [x] Auto Retries
- [x] HTTP
- [x] Code with **NPM**
- [x] ASK AI in Code Piece (Non technical user can clean data without knowing to code)
- [x] Flows are fully versioned.
- [x] Languages Translations
- [x] Customizable Templates
- [X] 200+ Pieces, check https://www.activepieces.com/pieces

**We release updates frequently. Check the product changelog for the latest features.**


## 🔌 Create Your Own Piece

Activepieces supports integrations with Google Sheets, OpenAI, Discord, RSS, and over 200 other services. [Check out the full list of supported integrations](https://www.activepieces.com/pieces), which is constantly expanding thanks to our community&#039;s contributions.

As an **open ecosystem**, all integration source code is accessible in our repository. These integrations are versioned and [published](https://www.npmjs.com/search?q=%40activepieces) directly to npmjs.com upon contribution.

You can easily create your own integration using our TypeScript framework. For detailed instructions, please refer to our [Contributor&#039;s Guide](https://www.activepieces.com/docs/contributing/overview).

&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;


# License

Activepieces&#039; Community Edition is released as open source under the [MIT license](https://github.com/activepieces/activepieces/blob/main/LICENSE) and enterprise features are released under [Commercial License](https://github.com/activepieces/activepieces/blob/main/packages/ee/LICENSE)


Read more about the feature comparison here https://www.activepieces.com/docs/about/editions
&lt;br&gt;
&lt;br&gt;


# 💭 Join Our Community

&lt;a href=&quot;https://discord.gg/2jUXBKDdP8&quot; target=&quot;_blank&quot;&gt;
&lt;img src=&quot;https://discordapp.com/api/guilds/966798490984382485/widget.png?style=banner3&quot; alt=&quot;&quot;&gt;
&lt;/a&gt;

&lt;br&gt;
&lt;br&gt;

# 🌐 Contributions

We welcome contributions big or small and in different directions. The best way to do this is to check this [document](https://www.activepieces.com/docs/contributing/building-pieces/create-action) and we are always up to talk on [our Discord Server](https://discord.gg/2jUXBKDdP8).

## 📚 Translations

Not into coding but still interested in contributing? Come join our [Discord](https://discord.gg/2jUXBKDdP8) and visit https://www.activepieces.com/docs/about/i18n for more information.

![fr translation](https://img.shields.io/badge/dynamic/json?color=blue&amp;label=fr&amp;style=for-the-badge&amp;logo=crowdin&amp;query=%24.progress[?(@.data.languageId==%27fr%27)].data.translationProgress&amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json)

![it translation](https://img.shields.io/badge/dynamic/json?color=blue&amp;label=it&amp;style=for-the-badge&amp;logo=crowdin&amp;query=%24.progress[?(@.data.languageId==%27it%27)].data.translationProgress&amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json)

![de translation](https://img.shields.io/badge/dynamic/json?color=blue&amp;label=de&amp;style=for-the-badge&amp;logo=crowdin&amp;query=%24.progress[?(@.data.languageId==%27de%27)].data.translationProgress&amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json)

![ja translation](https://img.shields.io/badge/dynamic/json?color=blue&amp;label=ja&amp;style=for-the-badge&amp;logo=crowdin&amp;query=%24.progress[?(@.data.languageId==%27ja%27)].data.translationProgress&amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json)


![pt-BR translation](https://img.shields.io/badge/dynamic/json?color=blue&amp;label=pt-BR&amp;style=for-the-badge&amp;logo=crowdin&amp;query=%24.progress[?(@.data.languageId==%27pt-BR%27)].data.translationProgress&amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json)


## 🦫 Contributors

&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt;
&lt;!-- prettier-ignore-start --&gt;
&lt;!-- markdownlint-disable --&gt;
&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/ShahedAlMashni&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/41443850?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;ShahedAlMashni&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ShahedAlMashni&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-ShahedAlMashni&quot; title=&quot;Plugin/utility libraries&quot;&gt;🔌&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/AbdulTheActivePiecer&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/106555838?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;AbdulTheActivePiecer&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;AbdulTheActivePiecer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#maintenance-AbdulTheActivePiecer&quot; title=&quot;Maintenance&quot;&gt;🚧&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/khaledmashaly&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/61781545?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Khaled Mashaly&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Khaled Mashaly&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#maintenance-khaledmashaly&quot; title=&quot;Maintenance&quot;&gt;🚧&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/abuaboud&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1812998?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Mohammed Abu Aboud&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mohammed Abu Aboud&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#maintenance-abuaboud&quot; title=&quot;Maintenance&quot;&gt;🚧&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://aboudzein.github.io&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/12976630?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Abdulrahman Zeineddin&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Abdulrahman Zeineddin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-aboudzein&quot; title=&quot;Plugin/utility libraries&quot;&gt;🔌&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/creed983&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/62152944?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;ahmad jaber&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ahmad jaber&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-creed983&quot; title=&quot;Plugin/utility libraries&quot;&gt;🔌&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/ashrafsamhouri&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/97393596?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;ashrafsamhouri&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ashrafsamhouri&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-ashrafsamhouri&quot; title=&quot;Plugin/utility libraries&quot;&gt;🔌&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://steercampaign.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/12627658?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Mohammad Abu Musa&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mohammad Abu Musa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#projectManagement-mabumusa1&quot; title=&quot;Project Management&quot;&gt;📆&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/kanarelo&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/393261?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Mukewa Wekalao&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mukewa Wekalao&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-kanarelo&quot; title=&quot;Plugin/utility libraries&quot;&gt;🔌&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://osamahaikal.me/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/72370395?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Osama Abdallah Essa Haikal&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Osama Abdallah Essa Haikal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-OsamaHaikal&quot; title=&quot;Plugin/utility libraries&quot;&gt;🔌&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/M-Arman&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/54455592?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Arman&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Arman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#security-M-Arman&quot; title=&quot;Security&quot;&gt;🛡️&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/oskarkraemer&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/42745862?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Oskar Krämer&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Oskar Krämer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=oskarkraemer&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://thibpat.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/494686?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Thibaut Patel&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Thibaut Patel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#ideas-tpatel&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;🤔&lt;/a&gt; &lt;a href=&quot;#plugin-tpatel&quot; title=&quot;Plugin/utility libraries&quot;&gt;🔌&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Applesaucesomer&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/18318905?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Applesaucesomer&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Applesaucesomer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#ideas-Applesaucesomer&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;🤔&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/crazyTweek&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6828237?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;crazyTweek&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;crazyTweek&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#ideas-crazyTweek&quot; title=&quot;Ideas, Planning, &amp; Feedback&quot;&gt;🤔&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://linkedin.com/in/muhammad-tabaza&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/23503983?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Muhammad Tabaza&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Muhammad Tabaza&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-m-tabaza&quot; title=&quot;Plugin/utility libraries&quot;&gt;🔌&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://shaypunter.co.uk&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/18310437?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Shay Punter&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Shay Punter&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=ShayPunter&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;#plugin-ShayPunter&quot; title=&quot;Plugin/utility libraries&quot;&gt;🔌&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/abaza738&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/50132270?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;abaza738&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;abaza738&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-abaza738&quot; title=&quot;Plugin/utility libraries&quot;&gt;🔌&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/jonaboe&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/51358680?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Jona Boeddinghaus&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jona Boeddinghaus&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-jonaboe&quot; title=&quot;Plugin/utility libraries&quot;&gt;🔌&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/fomojola&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/264253?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;fomojola&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;fomojola&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=fomojola&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/astorozhevsky&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11055414?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Alexander Storozhevsky&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alexander Storozhevsky&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=astorozhevsky&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/J0LGER&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/54769522?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;J0LGER&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;J0LGER&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#security-J0LGER&quot; title=&quot;Security&quot;&gt;🛡️&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://about.me/veverkap&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/22348?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Patrick Veverka&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Patrick Veverka&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/issues?q=author%3Aveverkap&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://berksmbl.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10000339?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Berk Sümbül&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Berk Sümbül&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=berksmbl&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Willianwg&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/51550522?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Willian Guedes&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Willian Guedes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-Willianwg&quot; title=&quot;Plugin/utility libraries&quot;&gt;🔌&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/abdullahranginwala&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/19731056?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Abdullah Ranginwala&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Abdullah Ranginwala&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=abdullahranginwala&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/dentych&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2256372?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Dennis Tychsen&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Dennis Tychsen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-dentych&quot; title=&quot;Plugin/utility libraries&quot;&gt;🔌&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/MyWay&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1765284?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;MyWay&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;MyWay&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-MyWay&quot; title=&quot;Plugin/utility libraries&quot;&gt;🔌&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/bibhuty-did-this&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/28416188?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Bibhuti Bhusan Panda&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Bibhuti Bhusan Panda&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-bibhuty-did-this&quot; title=&quot;Plugin/utility libraries&quot;&gt;🔌&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/tarunsamanta2k20&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/55488549?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Tarun Samanta&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tarun Samanta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/issues?q=author%3Atarunsamanta2k20&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/herman-kudria-10868b207/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9007211?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Herman Kudria&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Herman Kudria&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-HKudria&quot; title=&quot;Plugin/utility libraries&quot;&gt;🔌&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://nulldev.imagefoo.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/66683380?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;[NULL] Dev&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;[NULL] Dev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-Abdallah-Alwarawreh&quot; title=&quot;Plugin/utility libraries&quot;&gt;🔌&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/JanHolger&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/25184957?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Jan Bebendorf&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jan Bebendorf&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-JanHolger&quot; title=&quot;Plugin/utility libraries&quot;&gt;🔌&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://blog.nileshtrivedi.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/19304?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Nilesh&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Nilesh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-nileshtrivedi&quot; title=&quot;Plugin/utility libraries&quot;&gt;🔌&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://certopus.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/40790016?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Vraj Gohil&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Vraj Gohil&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-VrajGohil&quot; title=&quot;Plugin/utility libraries&quot;&gt;🔌&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/BastienMe&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/71411115?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;BastienMe&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;BastienMe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;#plugin-BastienMe&quot; title=&quot;Plugin/utility libraries&quot;&gt;🔌&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://blog.fosketts.net&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8627862?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Stephen Foskett&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Stephen Foskett&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=SFoskett&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://ganapati.fr&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/15729117?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;Nathan&quot;/&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Nathan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/activepieces/activepieces/commits?author=asuri0n&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt;
      &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.n-soft.pl&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4056319?v=4?s=100&quot; width=&quot;100px;&quot; alt=

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[aws/aws-toolkit-vscode]]></title>
            <link>https://github.com/aws/aws-toolkit-vscode</link>
            <guid>https://github.com/aws/aws-toolkit-vscode</guid>
            <pubDate>Sat, 26 Jul 2025 00:05:05 GMT</pubDate>
            <description><![CDATA[Amazon Q, CodeCatalyst, Local Lambda debug, SAM/CFN syntax, ECS Terminal, AWS resources]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/aws/aws-toolkit-vscode">aws/aws-toolkit-vscode</a></h1>
            <p>Amazon Q, CodeCatalyst, Local Lambda debug, SAM/CFN syntax, ECS Terminal, AWS resources</p>
            <p>Language: TypeScript</p>
            <p>Stars: 1,754</p>
            <p>Forks: 659</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre># AWS Extensions for Visual Studio Code

[![Coverage](https://img.shields.io/codecov/c/github/aws/aws-toolkit-vscode/master.svg)](https://codecov.io/gh/aws/aws-toolkit-vscode/branch/master)

This project is open source. We encourage issues, feature requests, code reviews, pull requests or
any positive contribution. See [CONTRIBUTING.md](CONTRIBUTING.md) to get started.

### Amazon Q

[![Marketplace Version](https://img.shields.io/vscode-marketplace/v/AmazonWebServices.amazon-q-vscode.svg) ![Marketplace Downloads](https://img.shields.io/vscode-marketplace/d/AmazonWebServices.amazon-q-vscode.svg)](https://marketplace.visualstudio.com/items?itemName=AmazonWebServices.amazon-q-vscode)

Amazon Q for VS Code is a [VS Code extension](https://marketplace.visualstudio.com/items?itemName=AmazonWebServices.amazon-q-vscode) for connecting your IDE to [Amazon Q](https://aws.amazon.com/q/developer/) and leveraging generative AI to accelerate your software development.

-   Code faster with inline code suggestions as you type
-   Chat with [Amazon Q](https://aws.amazon.com/q/developer/) to generate code, explain code, and get answers to questions about software development
-   Analyze and fix security vulnerabilities in your project
-   Upgrade your Java applications

[Project Directory](https://github.com/aws/aws-toolkit-vscode/tree/master/packages/amazonq)

### AWS Toolkit

[![Marketplace Version](https://img.shields.io/vscode-marketplace/v/AmazonWebServices.aws-toolkit-vscode.svg) ![Marketplace Downloads](https://img.shields.io/vscode-marketplace/d/AmazonWebServices.aws-toolkit-vscode.svg)](https://marketplace.visualstudio.com/items?itemName=AmazonWebServices.aws-toolkit-vscode)

AWS Toolkit is a [VS Code extension](https://marketplace.visualstudio.com/itemdetails?itemName=AmazonWebServices.aws-toolkit-vscode) for connecting your IDE to your AWS resources:

-   Connect with [IAM credentials](https://docs.aws.amazon.com/sdkref/latest/guide/access-users.html),
    [IAM Identity Center (SSO)](https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html),
    or [AWS Builder ID](https://docs.aws.amazon.com/signin/latest/userguide/differences-aws_builder_id.html)
-   Connect VSCode to your EC2 instances
-   Connect to your [CodeCatalyst](https://codecatalyst.aws/) Dev Environments
-   Debug your Lambda functions using [SAM CLI](https://github.com/aws/aws-sam-cli)
-   Check and autocomplete code in SAM/CFN (CloudFormation) `template.yaml` files
-   `Open Terminal` on your EC2 instances or ECS tasks
-   `Search Log Group` on your CloudWatch logs
-   Browse your AWS resources

[Project Directory](https://github.com/aws/aws-toolkit-vscode/tree/master/packages/toolkit)

## Documentation

-   Quick Start Guides for...
    -   [Amazon Q](https://marketplace.visualstudio.com/itemdetails?itemName=AmazonWebServices.amazon-q-vscode)
    -   [AWS Toolkit](https://marketplace.visualstudio.com/itemdetails?itemName=AmazonWebServices.aws-toolkit-vscode)
-   [FAQ / Troubleshooting](./docs/faq-credentials.md)
-   [User Guide](https://docs.aws.amazon.com/console/toolkit-for-vscode/welcome)
-   General info about [AWS SDKs and Tools](https://docs.aws.amazon.com/sdkref/latest/guide/overview.html)

## Feedback

We want your feedback!

-   Upvote 👍 [feature requests](https://github.com/aws/aws-toolkit-vscode/issues?q=is%3Aissue+is%3Aopen+label%3Afeature-request+sort%3Areactions-%2B1-desc)
-   [Ask a question](https://github.com/aws/aws-toolkit-vscode/issues/new?labels=guidance&amp;template=guidance_request.md)
-   [Request a new feature](https://github.com/aws/aws-toolkit-vscode/issues/new?labels=feature-request&amp;template=feature_request.md)
-   [File an issue](https://github.com/aws/aws-toolkit-vscode/issues/new?labels=bug&amp;template=bug_report.md)
-   Or [send a pull request](CONTRIBUTING.md)!

## License

This project and the subprojects within **(AWS Toolkit for Visual Studio Code, Amazon Q for Visual Studio Code)** is distributed under the [Apache License, Version 2.0](https://www.apache.org/licenses/LICENSE-2.0).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[google-gemini/gemini-cli]]></title>
            <link>https://github.com/google-gemini/gemini-cli</link>
            <guid>https://github.com/google-gemini/gemini-cli</guid>
            <pubDate>Sat, 26 Jul 2025 00:05:04 GMT</pubDate>
            <description><![CDATA[An open-source AI agent that brings the power of Gemini directly into your terminal.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/google-gemini/gemini-cli">google-gemini/gemini-cli</a></h1>
            <p>An open-source AI agent that brings the power of Gemini directly into your terminal.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 64,055</p>
            <p>Forks: 6,058</p>
            <p>Stars today: 478 stars today</p>
            <h2>README</h2><pre># Gemini CLI

[![Gemini CLI CI](https://github.com/google-gemini/gemini-cli/actions/workflows/ci.yml/badge.svg)](https://github.com/google-gemini/gemini-cli/actions/workflows/ci.yml)

![Gemini CLI Screenshot](./docs/assets/gemini-screenshot.png)

This repository contains the Gemini CLI, a command-line AI workflow tool that connects to your
tools, understands your code and accelerates your workflows.

With the Gemini CLI you can:

- Query and edit large codebases in and beyond Gemini&#039;s 1M token context window.
- Generate new apps from PDFs or sketches, using Gemini&#039;s multimodal capabilities.
- Automate operational tasks, like querying pull requests or handling complex rebases.
- Use tools and MCP servers to connect new capabilities, including [media generation with Imagen,
  Veo or Lyria](https://github.com/GoogleCloudPlatform/vertex-ai-creative-studio/tree/main/experiments/mcp-genmedia)
- Ground your queries with the [Google Search](https://ai.google.dev/gemini-api/docs/grounding)
  tool, built into Gemini.

## Quickstart

You have two options to install Gemini CLI.

### With Node

1. **Prerequisites:** Ensure you have [Node.js version 20](https://nodejs.org/en/download) or higher installed.
2. **Run the CLI:** Execute the following command in your terminal:

   ```bash
   npx https://github.com/google-gemini/gemini-cli
   ```

   Or install it with:

   ```bash
   npm install -g @google/gemini-cli
   ```

   Then, run the CLI from anywhere:

   ```bash
   gemini
   ```

### With Homebrew

1. **Prerequisites:** Ensure you have [Homebrew](https://brew.sh/) installed.
2. **Install the CLI** Execute the following command in your terminal:

   ```bash
   brew install gemini-cli
   ```

   Then, run the CLI from anywhere:

   ```bash
   gemini
   ```

### Common Configuration steps

3. **Pick a color theme**
4. **Authenticate:** When prompted, sign in with your personal Google account. This will grant you up to 60 model requests per minute and 1,000 model requests per day using Gemini.

You are now ready to use the Gemini CLI!

### Use a Gemini API key:

The Gemini API provides a free tier with [100 requests per day](https://ai.google.dev/gemini-api/docs/rate-limits#free-tier) using Gemini 2.5 Pro, control over which model you use, and access to higher rate limits (with a paid plan):

1. Generate a key from [Google AI Studio](https://aistudio.google.com/apikey).
2. Set it as an environment variable in your terminal. Replace `YOUR_API_KEY` with your generated key.

   ```bash
   export GEMINI_API_KEY=&quot;YOUR_API_KEY&quot;
   ```

3. (Optionally) Upgrade your Gemini API project to a paid plan on the API key page (will automatically unlock [Tier 1 rate limits](https://ai.google.dev/gemini-api/docs/rate-limits#tier-1))

### Use a Vertex AI API key:

The Vertex AI API provides a [free tier](https://cloud.google.com/vertex-ai/generative-ai/docs/start/express-mode/overview) using express mode for Gemini 2.5 Pro, control over which model you use, and access to higher rate limits with a billing account:

1. Generate a key from [Google Cloud](https://cloud.google.com/vertex-ai/generative-ai/docs/start/api-keys).
2. Set it as an environment variable in your terminal. Replace `YOUR_API_KEY` with your generated key and set GOOGLE_GENAI_USE_VERTEXAI to true

   ```bash
   export GOOGLE_API_KEY=&quot;YOUR_API_KEY&quot;
   export GOOGLE_GENAI_USE_VERTEXAI=true
   ```

3. (Optionally) Add a billing account on your project to get access to [higher usage limits](https://cloud.google.com/vertex-ai/generative-ai/docs/quotas)

For other authentication methods, including Google Workspace accounts, see the [authentication](./docs/cli/authentication.md) guide.

## Examples

Once the CLI is running, you can start interacting with Gemini from your shell.

You can start a project from a new directory:

```sh
cd new-project/
gemini
&gt; Write me a Gemini Discord bot that answers questions using a FAQ.md file I will provide
```

Or work with an existing project:

```sh
git clone https://github.com/google-gemini/gemini-cli
cd gemini-cli
gemini
&gt; Give me a summary of all of the changes that went in yesterday
```

### Next steps

- Learn how to [contribute to or build from the source](./CONTRIBUTING.md).
- Explore the available **[CLI Commands](./docs/cli/commands.md)**.
- If you encounter any issues, review the **[troubleshooting guide](./docs/troubleshooting.md)**.
- For more comprehensive documentation, see the [full documentation](./docs/index.md).
- Take a look at some [popular tasks](#popular-tasks) for more inspiration.
- Check out our **[Official Roadmap](./ROADMAP.md)**

### Troubleshooting

Head over to the [troubleshooting guide](docs/troubleshooting.md) if you&#039;re
having issues.

## Popular tasks

### Explore a new codebase

Start by `cd`ing into an existing or newly-cloned repository and running `gemini`.

```text
&gt; Describe the main pieces of this system&#039;s architecture.
```

```text
&gt; What security mechanisms are in place?
```

### Work with your existing code

```text
&gt; Implement a first draft for GitHub issue #123.
```

```text
&gt; Help me migrate this codebase to the latest version of Java. Start with a plan.
```

### Automate your workflows

Use MCP servers to integrate your local system tools with your enterprise collaboration suite.

```text
&gt; Make me a slide deck showing the git history from the last 7 days, grouped by feature and team member.
```

```text
&gt; Make a full-screen web app for a wall display to show our most interacted-with GitHub issues.
```

### Interact with your system

```text
&gt; Convert all the images in this directory to png, and rename them to use dates from the exif data.
```

```text
&gt; Organize my PDF invoices by month of expenditure.
```

### Uninstall

Head over to the [Uninstall](docs/Uninstall.md) guide for uninstallation instructions.

## Terms of Service and Privacy Notice

For details on the terms of service and privacy notice applicable to your use of Gemini CLI, see the [Terms of Service and Privacy Notice](./docs/tos-privacy.md).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[remotion-dev/remotion]]></title>
            <link>https://github.com/remotion-dev/remotion</link>
            <guid>https://github.com/remotion-dev/remotion</guid>
            <pubDate>Sat, 26 Jul 2025 00:05:03 GMT</pubDate>
            <description><![CDATA[🎥 Make videos programmatically with React]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/remotion-dev/remotion">remotion-dev/remotion</a></h1>
            <p>🎥 Make videos programmatically with React</p>
            <p>Language: TypeScript</p>
            <p>Stars: 23,179</p>
            <p>Forks: 1,245</p>
            <p>Stars today: 87 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/remotion-dev/logo&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/remotion-dev/logo/raw/main/animated-logo-banner-dark.gif&quot;&gt;
      &lt;img alt=&quot;Animated Remotion Logo&quot; src=&quot;https://github.com/remotion-dev/logo/raw/main/animated-logo-banner-light.gif&quot;&gt;
    &lt;/picture&gt;
  &lt;/a&gt;
&lt;/p&gt;

[![Discord Shield](https://img.shields.io/discord/809501355504959528?color=000000&amp;label=Discord&amp;logo=fdgssdf)](https://remotion.dev/discord)
[![NPM Version](https://img.shields.io/npm/v/remotion.svg?style=flat&amp;color=black)](https://www.npmjs.org/package/remotion)
[![NPM Downloads](https://img.shields.io/npm/dm/remotion.svg?style=flat&amp;color=black&amp;label=Downloads)](https://npmcharts.com/compare/remotion?minimal=true)
[![Open Bounties](https://img.shields.io/endpoint?url=https%3A%2F%2Fconsole.algora.io%2Fapi%2Fshields%2Fremotion%2Fbounties%3Fstatus%3Dopen&amp;style=flat&amp;color=black&amp;labelColor=grey&amp;label=Open+Bounties)](https://github.com/remotion-dev/remotion/issues?q=is%3Aopen+label%3A%22%F0%9F%92%8E+Bounty%22+sort%3Aupdated-desc)
&lt;a href=&quot;https://twitter.com/remotion&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/remotion?label=Twitter&amp;color=black&quot; alt=&quot;Twitter&quot;&gt;&lt;/a&gt;

Remotion is a framework for **creating videos programmatically using React.**

## Why create videos in React?

- **Leverage web technologies**: Use all of CSS, Canvas, SVG, WebGL, etc.
- **Leverage programming**: Use variables, functions, APIs, math and algorithms to create new effects
- **Leverage React**: Reusable components, Powerful composition, Fast Refresh, Package ecosystem

## Created with Remotion

&lt;table&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;img style=&quot;width: 290px&quot; src=&quot;https://pub-646d808d9cb240cea53bedc76dd3cd0c.r2.dev/fireship-quick.gif&quot; /&gt;
&lt;p&gt;&quot;This video was made with code&quot; &lt;em&gt;- Fireship&lt;/em&gt; &lt;a href=&quot;https://youtu.be/deg8bOoziaE&quot;&gt;Watch&lt;/a&gt; • &lt;a href=&quot;https://github.com/wcandillon/remotion-fireship&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;img style=&quot;width: 240px&quot; src=&quot;https://pub-646d808d9cb240cea53bedc76dd3cd0c.r2.dev/unwrapped-2023.gif&quot; /&gt;
&lt;p&gt;GitHub Unwrapped - Personalized Year in Review &lt;a href=&quot;https://www.githubunwrapped.com&quot;&gt;Try&lt;/a&gt; • &lt;a href=&quot;https://github.com/remotion-dev/github-unwrapped&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;em&gt;View more in the &lt;a href=&quot;https://remotion.dev/showcase&quot;&gt;Remotion Showcase&lt;/a&gt;!&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

## Get started

If you already have Node.JS installed, type

```console
npx create-video@latest
```

to get started. Otherwise, read the [installation page](https://www.remotion.dev/docs/) in the documentation.

## Documentation

Documentation: [**remotion.dev/docs**](https://www.remotion.dev/docs)  
API Reference: [**remotion.dev/api**](https://www.remotion.dev/api)

## License

Be aware of that Remotion has a special license and requires obtaining a company license in some cases. Read the [LICENSE](LICENSE.md) page for more information.

## Contributing

Please read [CONTRIBUTING.md](CONTRIBUTING.md) to learn about contributing to this project.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[cline/cline]]></title>
            <link>https://github.com/cline/cline</link>
            <guid>https://github.com/cline/cline</guid>
            <pubDate>Sat, 26 Jul 2025 00:05:02 GMT</pubDate>
            <description><![CDATA[Autonomous coding agent right in your IDE, capable of creating/editing files, executing commands, using the browser, and more with your permission every step of the way.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/cline/cline">cline/cline</a></h1>
            <p>Autonomous coding agent right in your IDE, capable of creating/editing files, executing commands, using the browser, and more with your permission every step of the way.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 48,188</p>
            <p>Forks: 6,374</p>
            <p>Stars today: 65 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;&lt;sub&gt;
English | &lt;a href=&quot;https://github.com/cline/cline/blob/main/locales/es/README.md&quot; target=&quot;_blank&quot;&gt;Español&lt;/a&gt; | &lt;a href=&quot;https://github.com/cline/cline/blob/main/locales/de/README.md&quot; target=&quot;_blank&quot;&gt;Deutsch&lt;/a&gt; | &lt;a href=&quot;https://github.com/cline/cline/blob/main/locales/ja/README.md&quot; target=&quot;_blank&quot;&gt;日本語&lt;/a&gt; | &lt;a href=&quot;https://github.com/cline/cline/blob/main/locales/zh-cn/README.md&quot; target=&quot;_blank&quot;&gt;简体中文&lt;/a&gt; | &lt;a href=&quot;https://github.com/cline/cline/blob/main/locales/zh-tw/README.md&quot; target=&quot;_blank&quot;&gt;繁體中文&lt;/a&gt; | &lt;a href=&quot;https://github.com/cline/cline/blob/main/locales/ko/README.md&quot; target=&quot;_blank&quot;&gt;한국어&lt;/a&gt;
&lt;/sub&gt;&lt;/div&gt;

# Cline – \#1 on OpenRouter

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://media.githubusercontent.com/media/cline/cline/main/assets/docs/demo.gif&quot; width=&quot;100%&quot; /&gt;
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;table&gt;
&lt;tbody&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=saoudrizwan.claude-dev&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Download on VS Marketplace&lt;/strong&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;a href=&quot;https://discord.gg/cline&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.reddit.com/r/cline/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;r/cline&lt;/strong&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/cline/cline/discussions/categories/feature-requests?discussions_q=is%3Aopen+category%3A%22Feature+Requests%22+sort%3Atop&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Feature Requests&lt;/strong&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;a href=&quot;https://docs.cline.bot/getting-started/for-new-coders&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Getting Started&lt;/strong&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

Meet Cline (pronounced /klaɪn/, like &quot;Klein&quot;), an AI assistant that can use your **CLI** a**N**d **E**ditor.

Thanks to [Claude 3.7 Sonnet&#039;s agentic coding capabilities](https://www.anthropic.com/claude/sonnet), Cline can handle complex software development tasks step-by-step. With tools that let him create &amp; edit files, explore large projects, use the browser, and execute terminal commands (after you grant permission), he can assist you in ways that go beyond code completion or tech support. Cline can even use the Model Context Protocol (MCP) to create new tools and extend his own capabilities. While autonomous AI scripts traditionally run in sandboxed environments, this extension provides a human-in-the-loop GUI to approve every file change and terminal command, providing a safe and accessible way to explore the potential of agentic AI.

1. Enter your task and add images to convert mockups into functional apps or fix bugs with screenshots.
2. Cline starts by analyzing your file structure &amp; source code ASTs, running regex searches, and reading relevant files to get up to speed in existing projects. By carefully managing what information is added to context, Cline can provide valuable assistance even for large, complex projects without overwhelming the context window.
3. Once Cline has the information he needs, he can:
    - Create and edit files + monitor linter/compiler errors along the way, letting him proactively fix issues like missing imports and syntax errors on his own.
    - Execute commands directly in your terminal and monitor their output as he works, letting him e.g., react to dev server issues after editing a file.
    - For web development tasks, Cline can launch the site in a headless browser, click, type, scroll, and capture screenshots + console logs, allowing him to fix runtime errors and visual bugs.
4. When a task is completed, Cline will present the result to you with a terminal command like `open -a &quot;Google Chrome&quot; index.html`, which you run with a click of a button.

&gt; [!TIP]
&gt; Use the `CMD/CTRL + Shift + P` shortcut to open the command palette and type &quot;Cline: Open In New Tab&quot; to open the extension as a tab in your editor. This lets you use Cline side-by-side with your file explorer, and see how he changes your workspace more clearly.

---

&lt;img align=&quot;right&quot; width=&quot;340&quot; src=&quot;https://github.com/user-attachments/assets/3cf21e04-7ce9-4d22-a7b9-ba2c595e88a4&quot;&gt;

### Use any API and Model

Cline supports API providers like OpenRouter, Anthropic, OpenAI, Google Gemini, AWS Bedrock, Azure, GCP Vertex, Cerebras and Groq. You can also configure any OpenAI compatible API, or use a local model through LM Studio/Ollama. If you&#039;re using OpenRouter, the extension fetches their latest model list, allowing you to use the newest models as soon as they&#039;re available.

The extension also keeps track of total tokens and API usage cost for the entire task loop and individual requests, keeping you informed of spend every step of the way.

&lt;!-- Transparent pixel to create line break after floating image --&gt;

&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;

&lt;img align=&quot;left&quot; width=&quot;370&quot; src=&quot;https://github.com/user-attachments/assets/81be79a8-1fdb-4028-9129-5fe055e01e76&quot;&gt;

### Run Commands in Terminal

Thanks to the new [shell integration updates in VSCode v1.93](https://code.visualstudio.com/updates/v1_93#_terminal-shell-integration-api), Cline can execute commands directly in your terminal and receive the output. This allows him to perform a wide range of tasks, from installing packages and running build scripts to deploying applications, managing databases, and executing tests, all while adapting to your dev environment &amp; toolchain to get the job done right.

For long running processes like dev servers, use the &quot;Proceed While Running&quot; button to let Cline continue in the task while the command runs in the background. As Cline works he’ll be notified of any new terminal output along the way, letting him react to issues that may come up, such as compile-time errors when editing files.

&lt;!-- Transparent pixel to create line break after floating image --&gt;

&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;

&lt;img align=&quot;right&quot; width=&quot;400&quot; src=&quot;https://github.com/user-attachments/assets/c5977833-d9b8-491e-90f9-05f9cd38c588&quot;&gt;

### Create and Edit Files

Cline can create and edit files directly in your editor, presenting you a diff view of the changes. You can edit or revert Cline&#039;s changes directly in the diff view editor, or provide feedback in chat until you&#039;re satisfied with the result. Cline also monitors linter/compiler errors (missing imports, syntax errors, etc.) so he can fix issues that come up along the way on his own.

All changes made by Cline are recorded in your file&#039;s Timeline, providing an easy way to track and revert modifications if needed.

&lt;!-- Transparent pixel to create line break after floating image --&gt;

&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;

&lt;img align=&quot;left&quot; width=&quot;370&quot; src=&quot;https://github.com/user-attachments/assets/bc2e85ba-dfeb-4fe6-9942-7cfc4703cbe5&quot;&gt;

### Use the Browser

With Claude 3.5 Sonnet&#039;s new [Computer Use](https://www.anthropic.com/news/3-5-models-and-computer-use) capability, Cline can launch a browser, click elements, type text, and scroll, capturing screenshots and console logs at each step. This allows for interactive debugging, end-to-end testing, and even general web use! This gives him autonomy to fixing visual bugs and runtime issues without you needing to handhold and copy-pasting error logs yourself.

Try asking Cline to &quot;test the app&quot;, and watch as he runs a command like `npm run dev`, launches your locally running dev server in a browser, and performs a series of tests to confirm that everything works. [See a demo here.](https://x.com/sdrzn/status/1850880547825823989)

&lt;!-- Transparent pixel to create line break after floating image --&gt;

&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;

&lt;img align=&quot;right&quot; width=&quot;350&quot; src=&quot;https://github.com/user-attachments/assets/ac0efa14-5c1f-4c26-a42d-9d7c56f5fadd&quot;&gt;

### &quot;add a tool that...&quot;

Thanks to the [Model Context Protocol](https://github.com/modelcontextprotocol), Cline can extend his capabilities through custom tools. While you can use [community-made servers](https://github.com/modelcontextprotocol/servers), Cline can instead create and install tools tailored to your specific workflow. Just ask Cline to &quot;add a tool&quot; and he will handle everything, from creating a new MCP server to installing it into the extension. These custom tools then become part of Cline&#039;s toolkit, ready to use in future tasks.

-   &quot;add a tool that fetches Jira tickets&quot;: Retrieve ticket ACs and put Cline to work
-   &quot;add a tool that manages AWS EC2s&quot;: Check server metrics and scale instances up or down
-   &quot;add a tool that pulls the latest PagerDuty incidents&quot;: Fetch details and ask Cline to fix bugs

&lt;!-- Transparent pixel to create line break after floating image --&gt;

&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;

&lt;img align=&quot;left&quot; width=&quot;360&quot; src=&quot;https://github.com/user-attachments/assets/7fdf41e6-281a-4b4b-ac19-020b838b6970&quot;&gt;

### Add Context

**`@url`:** Paste in a URL for the extension to fetch and convert to markdown, useful when you want to give Cline the latest docs

**`@problems`:** Add workspace errors and warnings (&#039;Problems&#039; panel) for Cline to fix

**`@file`:** Adds a file&#039;s contents so you don&#039;t have to waste API requests approving read file (+ type to search files)

**`@folder`:** Adds folder&#039;s files all at once to speed up your workflow even more

&lt;!-- Transparent pixel to create line break after floating image --&gt;

&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;

&lt;img align=&quot;right&quot; width=&quot;350&quot; src=&quot;https://github.com/user-attachments/assets/140c8606-d3bf-41b9-9a1f-4dbf0d4c90cb&quot;&gt;

### Checkpoints: Compare and Restore

As Cline works through a task, the extension takes a snapshot of your workspace at each step. You can use the &#039;Compare&#039; button to see a diff between the snapshot and your current workspace, and the &#039;Restore&#039; button to roll back to that point.

For example, when working with a local web server, you can use &#039;Restore Workspace Only&#039; to quickly test different versions of your app, then use &#039;Restore Task and Workspace&#039; when you find the version you want to continue building from. This lets you safely explore different approaches without losing progress.

&lt;!-- Transparent pixel to create line break after floating image --&gt;

&lt;img width=&quot;2000&quot; height=&quot;0&quot; src=&quot;https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929&quot;&gt;&lt;br&gt;

## Contributing

To contribute to the project, start with our [Contributing Guide](CONTRIBUTING.md) to learn the basics. You can also join our [Discord](https://discord.gg/cline) to chat with other contributors in the `#contributors` channel. If you&#039;re looking for full-time work, check out our open positions on our [careers page](https://cline.bot/join-us)!

## License

[Apache 2.0 © 2025 Cline Bot Inc.](./LICENSE)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[mlc-ai/web-llm]]></title>
            <link>https://github.com/mlc-ai/web-llm</link>
            <guid>https://github.com/mlc-ai/web-llm</guid>
            <pubDate>Sat, 26 Jul 2025 00:05:01 GMT</pubDate>
            <description><![CDATA[High-performance In-browser LLM Inference Engine]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mlc-ai/web-llm">mlc-ai/web-llm</a></h1>
            <p>High-performance In-browser LLM Inference Engine</p>
            <p>Language: TypeScript</p>
            <p>Stars: 16,034</p>
            <p>Forks: 1,055</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot; id=&quot;top&quot;&gt;

# WebLLM
[![NPM Package](https://img.shields.io/badge/NPM_Package-Published-cc3534)](https://www.npmjs.com/package/@mlc-ai/web-llm)
[![&quot;WebLLM Chat Deployed&quot;](https://img.shields.io/badge/WebLLM_Chat-Deployed-%2332a852)](https://chat.webllm.ai/)
[![Join Discord](https://img.shields.io/badge/Join-Discord-7289DA?logo=discord&amp;logoColor=white)](https://discord.gg/9Xpy2HGBuD)
[![Related Repository: WebLLM Chat](https://img.shields.io/badge/Related_Repo-WebLLM_Chat-fafbfc?logo=github)](https://github.com/mlc-ai/web-llm-chat/)
[![Related Repository: MLC LLM](https://img.shields.io/badge/Related_Repo-MLC_LLM-fafbfc?logo=github)](https://github.com/mlc-ai/mlc-llm/)

**High-Performance In-Browser LLM Inference Engine.**


[Documentation](https://webllm.mlc.ai/docs/) | [Blogpost](https://blog.mlc.ai/2024/06/13/webllm-a-high-performance-in-browser-llm-inference-engine) | [Paper](https://arxiv.org/abs/2412.15803) | [Examples](examples)

&lt;/div&gt;

## Overview
WebLLM is a high-performance in-browser LLM inference engine that brings language model inference directly onto web browsers with hardware acceleration.
Everything runs inside the browser with no server support and is accelerated with WebGPU.

WebLLM is **fully compatible with [OpenAI API](https://platform.openai.com/docs/api-reference/chat).**
That is, you can use the same OpenAI API on **any open source models** locally, with functionalities
including streaming, JSON-mode, function-calling (WIP), etc.

We can bring a lot of fun opportunities to build AI assistants for everyone and enable privacy while enjoying GPU acceleration.

You can use WebLLM as a base [npm package](https://www.npmjs.com/package/@mlc-ai/web-llm) and build your own web application on top of it by following the examples below. This project is a companion project of [MLC LLM](https://github.com/mlc-ai/mlc-llm), which enables universal deployment of LLM across hardware environments.

&lt;div align=&quot;center&quot;&gt;

**[Check out WebLLM Chat to try it out!](https://chat.webllm.ai/)**

&lt;/div&gt;

## Key Features
- **In-Browser Inference**: WebLLM is a high-performance, in-browser language model inference engine that leverages WebGPU for hardware acceleration, enabling powerful LLM operations directly within web browsers without server-side processing.

- [**Full OpenAI API Compatibility**](#full-openai-compatibility): Seamlessly integrate your app with WebLLM using OpenAI API with functionalities such as streaming, JSON-mode, logit-level control, seeding, and more.

- **Structured JSON Generation**: WebLLM supports state-of-the-art JSON mode structured generation, implemented in the WebAssembly portion of the model library for optimal performance. Check [WebLLM JSON Playground](https://huggingface.co/spaces/mlc-ai/WebLLM-JSON-Playground) on HuggingFace to try generating JSON output with custom JSON schema.

- [**Extensive Model Support**](#built-in-models): WebLLM natively supports a range of models including Llama 3, Phi 3, Gemma, Mistral, Qwen(通义千问), and many others, making it versatile for various AI tasks. For the complete supported model list, check [MLC Models](https://mlc.ai/models).

- [**Custom Model Integration**](#custom-models): Easily integrate and deploy custom models in MLC format, allowing you to adapt WebLLM to specific needs and scenarios, enhancing flexibility in model deployment.

- **Plug-and-Play Integration**: Easily integrate WebLLM into your projects using package managers like NPM and Yarn, or directly via CDN, complete with comprehensive [examples](./examples/) and a modular design for connecting with UI components.

- **Streaming &amp; Real-Time Interactions**: Supports streaming chat completions, allowing real-time output generation which enhances interactive applications like chatbots and virtual assistants.

- **Web Worker &amp; Service Worker Support**: Optimize UI performance and manage the lifecycle of models efficiently by offloading computations to separate worker threads or service workers.

- **Chrome Extension Support**: Extend the functionality of web browsers through custom Chrome extensions using WebLLM, with examples available for building both basic and advanced extensions.

## Built-in Models

Check the complete list of available models on [MLC Models](https://mlc.ai/models). WebLLM supports a subset of these available models and the list can be accessed at [`prebuiltAppConfig.model_list`](https://github.com/mlc-ai/web-llm/blob/main/src/config.ts#L293).

Here are the primary families of models currently supported:

- **Llama**: Llama 3, Llama 2, Hermes-2-Pro-Llama-3
- **Phi**: Phi 3, Phi 2, Phi 1.5
- **Gemma**: Gemma-2B
- **Mistral**: Mistral-7B-v0.3, Hermes-2-Pro-Mistral-7B, NeuralHermes-2.5-Mistral-7B, OpenHermes-2.5-Mistral-7B
- **Qwen (通义千问)**: Qwen2 0.5B, 1.5B, 7B

If you need more models, [request a new model via opening an issue](https://github.com/mlc-ai/web-llm/issues/new/choose) or check [Custom Models](#custom-models) for how to compile and use your own models with WebLLM.

## Jumpstart with Examples

Learn how to use WebLLM to integrate large language models into your application and generate chat completions through this simple Chatbot example: 

[![Example Chatbot on JSFiddle](https://img.shields.io/badge/Example-JSFiddle-blue?logo=jsfiddle&amp;logoColor=white)](https://jsfiddle.net/neetnestor/4nmgvsa2/)
[![Example Chatbot on Codepen](https://img.shields.io/badge/Example-Codepen-gainsboro?logo=codepen)](https://codepen.io/neetnestor/pen/vYwgZaG)

For an advanced example of a larger, more complicated project, check [WebLLM Chat](https://github.com/mlc-ai/web-llm-chat/blob/main/app/client/webllm.ts).

More examples for different use cases are available in the [examples](./examples/) folder.

## Get Started

WebLLM offers a minimalist and modular interface to access the chatbot in the browser.
The package is designed in a modular way to hook to any of the UI components.

### Installation

#### Package Manager

```sh
# npm
npm install @mlc-ai/web-llm
# yarn
yarn add @mlc-ai/web-llm
# or pnpm
pnpm install @mlc-ai/web-llm
```

Then import the module in your code.

```typescript
// Import everything
import * as webllm from &quot;@mlc-ai/web-llm&quot;;
// Or only import what you need
import { CreateMLCEngine } from &quot;@mlc-ai/web-llm&quot;;
```

#### CDN Delivery

Thanks to [jsdelivr.com](https://www.jsdelivr.com/package/npm/@mlc-ai/web-llm), WebLLM can be imported directly through URL and work out-of-the-box on cloud development platforms like [jsfiddle.net](https://jsfiddle.net/), [Codepen.io](https://codepen.io/), and [Scribbler](https://scribbler.live):

```javascript
import * as webllm from &quot;https://esm.run/@mlc-ai/web-llm&quot;;
```
It can also be dynamically imported as:
```javascript
const webllm = await import (&quot;https://esm.run/@mlc-ai/web-llm&quot;);
```

### Create MLCEngine

Most operations in WebLLM are invoked through the `MLCEngine` interface. You can create an `MLCEngine` instance and loading the model by calling the `CreateMLCEngine()` factory function.

(Note that loading models requires downloading and it can take a significant amount of time for the very first run without caching previously. You should properly handle this asynchronous call.)

```typescript
import { CreateMLCEngine } from &quot;@mlc-ai/web-llm&quot;;

// Callback function to update model loading progress
const initProgressCallback = (initProgress) =&gt; {
  console.log(initProgress);
}
const selectedModel = &quot;Llama-3.1-8B-Instruct-q4f32_1-MLC&quot;;

const engine = await CreateMLCEngine(
  selectedModel,
  { initProgressCallback: initProgressCallback }, // engineConfig
);
```

Under the hood, this factory function does the following steps for first creating an engine instance (synchronous) and then loading the model (asynchronous). You can also do them separately in your application.

```typescript
import { MLCEngine } from &quot;@mlc-ai/web-llm&quot;;

// This is a synchronous call that returns immediately
const engine = new MLCEngine({
  initProgressCallback: initProgressCallback
});

// This is an asynchronous call and can take a long time to finish
await engine.reload(selectedModel);
```

### Chat Completion
After successfully initializing the engine, you can now invoke chat completions using OpenAI style chat APIs through the `engine.chat.completions` interface. For the full list of parameters and their descriptions, check [section below](#full-openai-compatibility) and [OpenAI API reference](https://platform.openai.com/docs/api-reference/chat/create).

(Note: The `model` parameter is not supported and will be ignored here. Instead, call `CreateMLCEngine(model)` or `engine.reload(model)` instead as shown in the [Create MLCEngine](#create-mlcengine) above.)


```typescript
const messages = [
  { role: &quot;system&quot;, content: &quot;You are a helpful AI assistant.&quot; },
  { role: &quot;user&quot;, content: &quot;Hello!&quot; },
]

const reply = await engine.chat.completions.create({
  messages,
});
console.log(reply.choices[0].message);
console.log(reply.usage);
```

### Streaming

WebLLM also supports streaming chat completion generating. To use it, simply pass `stream: true` to the `engine.chat.completions.create` call.

```typescript
const messages = [
  { role: &quot;system&quot;, content: &quot;You are a helpful AI assistant.&quot; },
  { role: &quot;user&quot;, content: &quot;Hello!&quot; },
]

// Chunks is an AsyncGenerator object
const chunks = await engine.chat.completions.create({
  messages,
  temperature: 1,
  stream: true, // &lt;-- Enable streaming
  stream_options: { include_usage: true },
});

let reply = &quot;&quot;;
for await (const chunk of chunks) {
  reply += chunk.choices[0]?.delta.content || &quot;&quot;;
  console.log(reply);
  if (chunk.usage) {
    console.log(chunk.usage); // only last chunk has usage
  }
}

const fullReply = await engine.getMessage();
console.log(fullReply);
```

## Advanced Usage

### Using Workers

You can put the heavy computation in a worker script to optimize your application performance. To do so, you need to:

1. Create a handler in the worker thread that communicates with the frontend while handling the requests.
2. Create a Worker Engine in your main application, which under the hood sends messages to the handler in the worker thread.

For detailed implementations of different kinds of Workers, check the following sections.

#### Dedicated Web Worker

WebLLM comes with API support for WebWorker so you can hook
the generation process into a separate worker thread so that
the computing in the worker thread won&#039;t disrupt the UI.

We create a handler in the worker thread that communicates with the frontend while handling the requests.

```typescript
// worker.ts
import { WebWorkerMLCEngineHandler } from &quot;@mlc-ai/web-llm&quot;;

// A handler that resides in the worker thread
const handler = new WebWorkerMLCEngineHandler();
self.onmessage = (msg: MessageEvent) =&gt; {
  handler.onmessage(msg);
};
```

In the main logic, we create a `WebWorkerMLCEngine` that
implements the same `MLCEngineInterface`. The rest of the logic remains the same.

```typescript
// main.ts
import { CreateWebWorkerMLCEngine } from &quot;@mlc-ai/web-llm&quot;;

async function main() {
  // Use a WebWorkerMLCEngine instead of MLCEngine here
  const engine = await CreateWebWorkerMLCEngine(
    new Worker(
      new URL(&quot;./worker.ts&quot;, import.meta.url), 
      {
        type: &quot;module&quot;,
      }
    ),
    selectedModel,
    { initProgressCallback }, // engineConfig
  );

  // everything else remains the same
}
```

### Use Service Worker

WebLLM comes with API support for ServiceWorker so you can hook the generation process
into a service worker to avoid reloading the model in every page visit and optimize
your application&#039;s offline experience.

(Note, Service Worker&#039;s life cycle is managed by the browser and can be killed any time without notifying the webapp. `ServiceWorkerMLCEngine` will try to keep the service worker thread alive by periodically sending heartbeat events, but your application should also include proper error handling. Check `keepAliveMs` and `missedHeatbeat` in [`ServiceWorkerMLCEngine`](https://github.com/mlc-ai/web-llm/blob/main/src/service_worker.ts#L234) for more details.)

We create a handler in the worker thread that communicates with the frontend while handling the requests.


```typescript
// sw.ts
import { ServiceWorkerMLCEngineHandler } from &quot;@mlc-ai/web-llm&quot;;

let handler: ServiceWorkerMLCEngineHandler;

self.addEventListener(&quot;activate&quot;, function (event) {
  handler = new ServiceWorkerMLCEngineHandler();
  console.log(&quot;Service Worker is ready&quot;);
});
```

Then in the main logic, we register the service worker and create the engine using
`CreateServiceWorkerMLCEngine` function. The rest of the logic remains the same.

```typescript
// main.ts
import { MLCEngineInterface, CreateServiceWorkerMLCEngine } from &quot;@mlc-ai/web-llm&quot;;

if (&quot;serviceWorker&quot; in navigator) {
  navigator.serviceWorker.register(
    new URL(&quot;sw.ts&quot;, import.meta.url),  // worker script
    { type: &quot;module&quot; },
  );
}

const engine: MLCEngineInterface =
  await CreateServiceWorkerMLCEngine(
    selectedModel,
    { initProgressCallback }, // engineConfig
  );
```

You can find a complete example on how to run WebLLM in service worker in [examples/service-worker](examples/service-worker/).

### Chrome Extension
You can also find examples of building Chrome extension with WebLLM in [examples/chrome-extension](examples/chrome-extension/) and [examples/chrome-extension-webgpu-service-worker](examples/chrome-extension-webgpu-service-worker/). The latter one leverages service worker, so the extension is persistent in the background. Additionally, you can explore another full project of a Chrome extension, WebLLM Assistant, which leverages WebLLM [here](https://github.com/mlc-ai/web-llm-assistant).

## Full OpenAI Compatibility
WebLLM is designed to be fully compatible with [OpenAI API](https://platform.openai.com/docs/api-reference/chat). Thus, besides building a simple chatbot, you can also have the following functionalities with WebLLM:

- [streaming](examples/streaming): return output as chunks in real-time in the form of an AsyncGenerator
- [json-mode](examples/json-mode): efficiently ensure output is in JSON format, see [OpenAI Reference](https://platform.openai.com/docs/guides/text-generation/chat-completions-api) for more.
- [seed-to-reproduce](examples/seed-to-reproduce): use seeding to ensure a reproducible output with fields `seed`.
- [function-calling](examples/function-calling) (WIP): function calling with fields `tools` and `tool_choice` (with preliminary support); or manual function calling without `tools` or `tool_choice` (keeps the most flexibility).

## Custom Models

WebLLM works as a companion project of [MLC LLM](https://github.com/mlc-ai/mlc-llm) and it supports custom models in MLC format. 
It reuses the model artifact and builds the flow of MLC LLM. To compile and use your own models with WebLLM, please check out
[MLC LLM document](https://llm.mlc.ai/docs/deploy/webllm.html)
on how to compile and deploy new model weights and libraries to WebLLM. 

Here, we go over the high-level idea. There are two elements of the WebLLM package that enable new models and weight variants.

- `model`: Contains a URL to model artifacts, such as weights and meta-data.
- `model_lib`: A URL to the web assembly library (i.e. wasm file) that contains the executables to accelerate the model computations.

Both are customizable in the WebLLM.

```typescript
import { CreateMLCEngine } from &quot;@mlc-ai/web-llm&quot;;

async main() {
  const appConfig = {
    &quot;model_list&quot;: [
      {
        &quot;model&quot;: &quot;/url/to/my/llama&quot;,
        &quot;model_id&quot;: &quot;MyLlama-3b-v1-q4f32_0&quot;,
        &quot;model_lib&quot;: &quot;/url/to/myllama3b.wasm&quot;,
      }
    ],
  };
  // override default
  const chatOpts = {
    &quot;repetition_penalty&quot;: 1.01
  };

  // load a prebuilt model
  // with a chat option override and app config
  // under the hood, it will load the model from myLlamaUrl
  // and cache it in the browser cache
  // The chat will also load the model library from &quot;/url/to/myllama3b.wasm&quot;,
  // assuming that it is compatible to the model in myLlamaUrl.
  const engine = await CreateMLCEngine(
    &quot;MyLlama-3b-v1-q4f32_0&quot;,
    { appConfig }, // engineConfig
    chatOpts,
  );
}
```

In many cases, we only want to supply the model weight variant, but
not necessarily a new model (e.g. `NeuralHermes-Mistral` can reuse `Mistral`&#039;s
model library). For examples of how a model library can be shared by different model variants,
see `webllm.prebuiltAppConfig`.

## Build WebLLM Package From Source

NOTE: you don&#039;t need to build from source unless you would like to modify the WebLLM package.
To use the npm, simply follow [Get Started](#get-started) or any of the [examples](examples) instead.

To build from source, simply run:

```bash
npm install
npm run build
```

Then, to test the effects of your code change in an example, inside `examples/get-started/package.json`, change from `&quot;@mlc-ai/web-llm&quot;: &quot;^0.2.79&quot;` to `&quot;@mlc-ai/web-llm&quot;: ../..`.

Then run:

```bash
cd examples/get-started
npm install
npm start
```

Note that sometimes you would need to switch between `file:../..` and `../..` to trigger npm to recognize new changes. In the worst case, you can run:

```bash
cd examples/get-started
rm -rf node_modules dist package-lock.json .parcel-cache
npm install
npm start
```

### In case you need to build TVMjs from source

WebLLM&#039;s runtime largely depends on TVMjs: https://github.com/apache/tvm/tree/main/web

While it is also available as an npm package: https://www.npmjs.com/package/@mlc-ai/web-runtime, you can build it from source if needed by following the steps below.

1. Install [emscripten](https://emscripten.org). It is an LLVM-based compiler that compiles C/C++ source code to WebAssembly.
    - Follow the [installation instruction](https://emscripten.org/docs/getting_started/downloads.html#installation-instructions-using-the-emsdk-recommended) to install the latest emsdk.
    - Source `emsdk_env.sh` by `source path/to/emsdk_env.sh`, so that `emcc` is reachable from PATH and the command `emcc` works.

    We can verify the successful installation by trying out `emcc` terminal.

    Note: We recently found that using the latest `emcc` version may run into issues during runtime. Use `./emsdk install 3.1.56` instead of `./emsdk install latest` for now as a workaround. The error may look like
    ```
    Init error, LinkError: WebAssembly.instantiate(): Import #6 module=&quot;wasi_snapshot_preview1&quot;
    function=&quot;proc_exit&quot;: function import requires a callable
    ```

2. In `./package.json`, change from `&quot;@mlc-ai/web-runtime&quot;: &quot;0.18.0-dev2&quot;,` to `&quot;@mlc-ai/web-runtime&quot;: &quot;file:./tvm_home/web&quot;,`.

3. Setup necessary environment

   Prepare all the necessary dependencies for web build:

   ```shell
   ./scripts/prep_deps.sh
   ```

   In this step, if `$TVM_SOURCE_DIR` is not defined in the environment, we will execute the following line to build `tvmjs` dependency:
   ```shell
   git clone https://github.com/mlc-ai/relax 3rdparty/tvm-unity --recursive
   ```

   This clones the current HEAD of `mlc-ai/relax`. However, it may not always be the correct branch or commit to clone. To build a specific npm version from source, refer to the version bump PR, which states which branch (i.e. `mlc-ai/relax` or `apache/tvm`) and which commit the current WebLLM version depends on. For instance, version 0.2.52, according to its version bump PR https://github.com/mlc-ai/web-llm/pull/521, is built by checking out the following commit https://github.com/apache/tvm/commit/e6476847753c80e054719ac47bc2091c888418b6 in `apache/tvm`, rather than the HEAD of `mlc-ai/relax`.

   Besides, `--recursive` is necessary and important. Otherwise, you may encounter errors like `fatal error: &#039;dlpack/dlpack.h&#039; file not found`.

4. Build WebLLM Package

   ```shell
   npm run build
   ```

5. Validate some of the sub-packages

   You can then go to the subfolders in [examples](examples) to validate some of the sub-packages.
   We 

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[langfuse/langfuse]]></title>
            <link>https://github.com/langfuse/langfuse</link>
            <guid>https://github.com/langfuse/langfuse</guid>
            <pubDate>Sat, 26 Jul 2025 00:05:00 GMT</pubDate>
            <description><![CDATA[🪢 Open source LLM engineering platform: LLM Observability, metrics, evals, prompt management, playground, datasets. Integrates with OpenTelemetry, Langchain, OpenAI SDK, LiteLLM, and more. 🍊YC W23]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/langfuse/langfuse">langfuse/langfuse</a></h1>
            <p>🪢 Open source LLM engineering platform: LLM Observability, metrics, evals, prompt management, playground, datasets. Integrates with OpenTelemetry, Langchain, OpenAI SDK, LiteLLM, and more. 🍊YC W23</p>
            <p>Language: TypeScript</p>
            <p>Stars: 14,147</p>
            <p>Forks: 1,304</p>
            <p>Stars today: 58 stars today</p>
            <h2>README</h2><pre>![Langfuse GitHub Banner](https://langfuse.com/images/docs/github-readme/github-banner.png)

&lt;div align=&quot;center&quot;&gt;
   &lt;div&gt;
      &lt;h3&gt;
        &lt;a href=&quot;https://langfuse.com/blog/2025-06-04-open-sourcing-langfuse-product&quot;&gt;
            &lt;strong&gt;Langfuse Is Doubling Down On Open Source&lt;/strong&gt;
         &lt;/a&gt; &lt;br&gt; &lt;br&gt;
         &lt;a href=&quot;https://cloud.langfuse.com&quot;&gt;
            &lt;strong&gt;Langfuse Cloud&lt;/strong&gt;
         &lt;/a&gt; · 
         &lt;a href=&quot;https://langfuse.com/docs/deployment/self-host&quot;&gt;
            &lt;strong&gt;Self Host&lt;/strong&gt;
         &lt;/a&gt; · 
         &lt;a href=&quot;https://langfuse.com/demo&quot;&gt;
            &lt;strong&gt;Demo&lt;/strong&gt;
         &lt;/a&gt;
      &lt;/h3&gt;
   &lt;/div&gt;

   &lt;div&gt;
      &lt;a href=&quot;https://langfuse.com/docs&quot;&gt;&lt;strong&gt;Docs&lt;/strong&gt;&lt;/a&gt; ·
      &lt;a href=&quot;https://langfuse.com/issues&quot;&gt;&lt;strong&gt;Report Bug&lt;/strong&gt;&lt;/a&gt; ·
      &lt;a href=&quot;https://langfuse.com/ideas&quot;&gt;&lt;strong&gt;Feature Request&lt;/strong&gt;&lt;/a&gt; ·
      &lt;a href=&quot;https://langfuse.com/changelog&quot;&gt;&lt;strong&gt;Changelog&lt;/strong&gt;&lt;/a&gt; ·
      &lt;a href=&quot;https://langfuse.com/roadmap&quot;&gt;&lt;strong&gt;Roadmap&lt;/strong&gt;&lt;/a&gt; ·
   &lt;/div&gt;
   &lt;br/&gt;
   &lt;span&gt;Langfuse uses &lt;a href=&quot;https://github.com/orgs/langfuse/discussions&quot;&gt;&lt;strong&gt;GitHub Discussions&lt;/strong&gt;&lt;/a&gt;  for Support and Feature Requests.&lt;/span&gt;
   &lt;br/&gt;
   &lt;span&gt;&lt;b&gt;We&#039;re hiring.&lt;/b&gt; &lt;a href=&quot;https://langfuse.com/careers&quot;&gt;&lt;strong&gt;Join us&lt;/strong&gt;&lt;/a&gt; in product engineering and technical go-to-market roles.&lt;/span&gt;
   &lt;br/&gt;
   &lt;br/&gt;
   &lt;div&gt;
   &lt;/div&gt;
&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
   &lt;a href=&quot;https://github.com/langfuse/langfuse/blob/main/LICENSE&quot;&gt;
   &lt;img src=&quot;https://img.shields.io/badge/License-MIT-E11311.svg&quot; alt=&quot;MIT License&quot;&gt;
   &lt;/a&gt;
   &lt;a href=&quot;https://www.ycombinator.com/companies/langfuse&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Y%20Combinator-W23-orange&quot; alt=&quot;Y Combinator W23&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://hub.docker.com/u/langfuse&quot; target=&quot;_blank&quot;&gt;
   &lt;img alt=&quot;Docker Pulls&quot; src=&quot;https://img.shields.io/docker/pulls/langfuse/langfuse?labelColor=%20%23FDB062&amp;logo=Docker&amp;labelColor=%20%23528bff&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://pypi.python.org/pypi/langfuse&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/dm/langfuse?logo=python&amp;logoColor=white&amp;label=pypi%20langfuse&amp;color=blue&quot; alt=&quot;langfuse Python package on PyPi&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://www.npmjs.com/package/langfuse&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/langfuse?logo=npm&amp;logoColor=white&amp;label=npm%20langfuse&amp;color=blue&quot; alt=&quot;langfuse npm package&quot;&gt;&lt;/a&gt;
   &lt;br/&gt;
   &lt;a href=&quot;https://discord.com/invite/7NXusRtqYU&quot; target=&quot;_blank&quot;&gt;
   &lt;img src=&quot;https://img.shields.io/discord/1111061815649124414?logo=discord&amp;labelColor=%20%235462eb&amp;logoColor=%20%23f5f5f5&amp;color=%20%235462eb&quot;
      alt=&quot;chat on Discord&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=langfuse&quot; target=&quot;_blank&quot;&gt;
   &lt;img src=&quot;https://img.shields.io/twitter/follow/langfuse?logo=X&amp;color=%20%23f5f5f5&quot;
      alt=&quot;follow on X(Twitter)&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://www.linkedin.com/company/langfuse/&quot; target=&quot;_blank&quot;&gt;
   &lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/LinkedIn-0A66C2?logo=linkedin-white&amp;logoColor=fff&quot;
      alt=&quot;follow on LinkedIn&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://github.com/langfuse/langfuse/graphs/commit-activity&quot; target=&quot;_blank&quot;&gt;
   &lt;img alt=&quot;Commits last month&quot; src=&quot;https://img.shields.io/github/commit-activity/m/langfuse/langfuse?labelColor=%20%2332b583&amp;color=%20%2312b76a&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://github.com/langfuse/langfuse/&quot; target=&quot;_blank&quot;&gt;
   &lt;img alt=&quot;Issues closed&quot; src=&quot;https://img.shields.io/github/issues-search?query=repo%3Alangfuse%2Flangfuse%20is%3Aclosed&amp;label=issues%20closed&amp;labelColor=%20%237d89b0&amp;color=%20%235d6b98&quot;&gt;&lt;/a&gt;
   &lt;a href=&quot;https://github.com/langfuse/langfuse/discussions/&quot; target=&quot;_blank&quot;&gt;
   &lt;img alt=&quot;Discussion posts&quot; src=&quot;https://img.shields.io/github/discussions/langfuse/langfuse?labelColor=%20%239b8afb&amp;color=%20%237a5af8&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;./README.md&quot;&gt;&lt;img alt=&quot;README in English&quot; src=&quot;https://img.shields.io/badge/English-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README.cn.md&quot;&gt;&lt;img alt=&quot;简体中文版自述文件&quot; src=&quot;https://img.shields.io/badge/简体中文-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README.ja.md&quot;&gt;&lt;img alt=&quot;日本語のREADME&quot; src=&quot;https://img.shields.io/badge/日本語-d9d9d9&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;./README.kr.md&quot;&gt;&lt;img alt=&quot;README in Korean&quot; src=&quot;https://img.shields.io/badge/한국어-d9d9d9&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

Langfuse is an **open source LLM engineering** platform. It helps teams collaboratively
**develop, monitor, evaluate,** and **debug** AI applications. Langfuse can be **self-hosted in minutes** and is **battle-tested**.

[![Langfuse Overview Video](https://github.com/user-attachments/assets/3926b288-ff61-4b95-8aa1-45d041c70866)](https://langfuse.com/watch-demo)

## ✨ Core Features

![Langfuse Overview](https://langfuse.com/images/docs/github-readme/github-feature-overview.png)

- [LLM Application Observability](https://langfuse.com/docs/tracing): Instrument your app and start ingesting traces to Langfuse, thereby tracking LLM calls and other relevant logic in your app such as retrieval, embedding, or agent actions. Inspect and debug complex logs and user sessions. Try the interactive [demo](https://langfuse.com/docs/demo) to see this in action.

- [Prompt Management](https://langfuse.com/docs/prompts/get-started) helps you centrally manage, version control, and collaboratively iterate on your prompts. Thanks to strong caching on server and client side, you can iterate on prompts without adding latency to your application.

- [Evaluations](https://langfuse.com/docs/scores/overview) are key to the LLM application development workflow, and Langfuse adapts to your needs. It supports LLM-as-a-judge, user feedback collection, manual labeling, and custom evaluation pipelines via APIs/SDKs.

- [Datasets](https://langfuse.com/docs/datasets/overview) enable test sets and benchmarks for evaluating your LLM application. They support continuous improvement, pre-deployment testing, structured experiments, flexible evaluation, and seamless integration with frameworks like LangChain and LlamaIndex.

- [LLM Playground](https://langfuse.com/docs/playground) is a tool for testing and iterating on your prompts and model configurations, shortening the feedback loop and accelerating development. When you see a bad result in tracing, you can directly jump to the playground to iterate on it.

- [Comprehensive API](https://langfuse.com/docs/api): Langfuse is frequently used to power bespoke LLMOps workflows while using the building blocks provided by Langfuse via the API. OpenAPI spec, Postman collection, and typed SDKs for Python, JS/TS are available.

## 📦 Deploy Langfuse

![Langfuse Deployment Options](https://langfuse.com/images/docs/github-readme/github-deployment-options.png)

### Langfuse Cloud

Managed deployment by the Langfuse team, generous free-tier, no credit card required.

&lt;div align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://cloud.langfuse.com&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Static Badge&quot; src=&quot;https://img.shields.io/badge/»%20Sign%20up%20for%20Langfuse%20Cloud-8A2BE2?&amp;color=orange&quot;&gt;
    &lt;/a&gt;
&lt;/div&gt;

### Self-Host Langfuse

Run Langfuse on your own infrastructure:

- [Local (docker compose)](https://langfuse.com/self-hosting/local): Run Langfuse on your own machine in 5 minutes using Docker Compose.

  ```bash
  # Get a copy of the latest Langfuse repository
  git clone https://github.com/langfuse/langfuse.git
  cd langfuse

  # Run the langfuse docker compose
  docker compose up
  ```
- [VM](https://langfuse.com/self-hosting/docker-compose): Run Langfuse on a single Virtual Machine using Docker Compose.
- [Kubernetes (Helm)](https://langfuse.com/self-hosting/kubernetes-helm): Run Langfuse on a Kubernetes cluster using Helm. This is the preferred production deployment.
- Terraform Templates: [AWS](https://langfuse.com/self-hosting/aws), [Azure](https://langfuse.com/self-hosting/azure), [GCP](https://langfuse.com/self-hosting/gcp)

See [self-hosting documentation](https://langfuse.com/self-hosting) to learn more about architecture and configuration options.

## 🔌 Integrations

![Langfuse Integrations](https://langfuse.com/images/docs/github-readme/github-integrations.png)

### Main Integrations:

| Integration                                                                  | Supports                   | Description                                                                                                                                      |
| ---------------------------------------------------------------------------- | -------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------ |
| [SDK](https://langfuse.com/docs/sdk)                                         | Python, JS/TS              | Manual instrumentation using the SDKs for full flexibility.                                                                                      |
| [OpenAI](https://langfuse.com/docs/integrations/openai)                      | Python, JS/TS              | Automated instrumentation using drop-in replacement of OpenAI SDK.                                                                               |
| [Langchain](https://langfuse.com/docs/integrations/langchain)                | Python, JS/TS              | Automated instrumentation by passing callback handler to Langchain application.                                                                  |
| [LlamaIndex](https://langfuse.com/docs/integrations/llama-index/get-started) | Python                     | Automated instrumentation via LlamaIndex callback system.                                                                                        |
| [Haystack](https://langfuse.com/docs/integrations/haystack)                  | Python                     | Automated instrumentation via Haystack content tracing system.                                                                                   |
| [LiteLLM](https://langfuse.com/docs/integrations/litellm)                    | Python, JS/TS (proxy only) | Use any LLM as a drop in replacement for GPT. Use Azure, OpenAI, Cohere, Anthropic, Ollama, VLLM, Sagemaker, HuggingFace, Replicate (100+ LLMs). |
| [Vercel AI SDK](https://langfuse.com/docs/integrations/vercel-ai-sdk)        | JS/TS                      | TypeScript toolkit designed to help developers build AI-powered applications with React, Next.js, Vue, Svelte, Node.js.                          |
| [API](https://langfuse.com/docs/api)                                         |                            | Directly call the public API. OpenAPI spec available.                                                                                            |

### Packages integrated with Langfuse:

| Name                                                                    | Type               | Description                                                                                                             |
| ----------------------------------------------------------------------- | ------------------ | ----------------------------------------------------------------------------------------------------------------------- |
| [Instructor](https://langfuse.com/docs/integrations/instructor)         | Library            | Library to get structured LLM outputs (JSON, Pydantic)                                                                  |
| [DSPy](https://langfuse.com/docs/integrations/dspy)                     | Library            | Framework that systematically optimizes language model prompts and weights                                              |
| [Mirascope](https://langfuse.com/docs/integrations/mirascope)           | Library            | Python toolkit for building LLM applications.                                                                           |
| [Ollama](https://langfuse.com/docs/integrations/ollama)                 | Model (local)      | Easily run open source LLMs on your own machine.                                                                        |
| [Amazon Bedrock](https://langfuse.com/docs/integrations/amazon-bedrock) | Model              | Run foundation and fine-tuned models on AWS.                                                                            |
| [AutoGen](https://langfuse.com/docs/integrations/autogen)               | Agent Framework    | Open source LLM platform for building distributed agents.                                                               |
| [Flowise](https://langfuse.com/docs/integrations/flowise)               | Chat/Agent&amp;nbsp;UI | JS/TS no-code builder for customized LLM flows.                                                                         |
| [Langflow](https://langfuse.com/docs/integrations/langflow)             | Chat/Agent&amp;nbsp;UI | Python-based UI for LangChain, designed with react-flow to provide an effortless way to experiment and prototype flows. |
| [Dify](https://langfuse.com/docs/integrations/dify)                     | Chat/Agent&amp;nbsp;UI | Open source LLM app development platform with no-code builder.                                                          |
| [OpenWebUI](https://langfuse.com/docs/integrations/openwebui)           | Chat/Agent&amp;nbsp;UI | Self-hosted LLM Chat web ui supporting various LLM runners including self-hosted and local models.                      |
| [Promptfoo](https://langfuse.com/docs/integrations/promptfoo)           | Tool               | Open source LLM testing platform.                                                                                       |
| [LobeChat](https://langfuse.com/docs/integrations/lobechat)             | Chat/Agent&amp;nbsp;UI | Open source chatbot platform.                                                                                           |
| [Vapi](https://langfuse.com/docs/integrations/vapi)                     | Platform           | Open source voice AI platform.                                                                                          |
| [Inferable](https://langfuse.com/docs/integrations/other/inferable)     | Agents             | Open source LLM platform for building distributed agents.                                                               |
| [Gradio](https://langfuse.com/docs/integrations/other/gradio)           | Chat/Agent&amp;nbsp;UI | Open source Python library to build web interfaces like Chat UI.                                                        |
| [Goose](https://langfuse.com/docs/integrations/goose)                   | Agents             | Open source LLM platform for building distributed agents.                                                               |
| [smolagents](https://langfuse.com/docs/integrations/smolagents)         | Agents             | Open source AI agents framework.                                                                                        |
| [CrewAI](https://langfuse.com/docs/integrations/crewai)                 | Agents             | Multi agent framework for agent collaboration and tool use.                                                             |

## 🚀 Quickstart

Instrument your app and start ingesting traces to Langfuse, thereby tracking LLM calls and other relevant logic in your app such as retrieval, embedding, or agent actions. Inspect and debug complex logs and user sessions.

### 1️⃣ Create new project

1.  [Create Langfuse account](https://cloud.langfuse.com/auth/sign-up) or [self-host](https://langfuse.com/self-hosting)
2.  Create a new project
3.  Create new API credentials in the project settings

### 2️⃣ Log your first LLM call

The [`@observe()` decorator](https://langfuse.com/docs/sdk/python/decorators) makes it easy to trace any Python LLM application. In this quickstart we also use the Langfuse [OpenAI integration](https://langfuse.com/docs/integrations/openai) to automatically capture all model parameters.

&gt; [!TIP]
&gt; Not using OpenAI? Visit [our documentation](https://langfuse.com/docs/get-started#log-your-first-llm-call-to-langfuse) to learn how to log other models and frameworks.

```bash
pip install langfuse openai
```

```bash filename=&quot;.env&quot;
LANGFUSE_SECRET_KEY=&quot;sk-lf-...&quot;
LANGFUSE_PUBLIC_KEY=&quot;pk-lf-...&quot;
LANGFUSE_HOST=&quot;https://cloud.langfuse.com&quot; # 🇪🇺 EU region
# LANGFUSE_HOST=&quot;https://us.cloud.langfuse.com&quot; # 🇺🇸 US region
```

```python /@observe()/ /from langfuse.openai import openai/ filename=&quot;main.py&quot;
from langfuse import observe
from langfuse.openai import openai # OpenAI integration

@observe()
def story():
    return openai.chat.completions.create(
        model=&quot;gpt-4o&quot;,
        messages=[{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;What is Langfuse?&quot;}],
    ).choices[0].message.content

@observe()
def main():
    return story()

main()
```

### 3️⃣ See traces in Langfuse

See your language model calls and other application logic in Langfuse.

![Example trace in Langfuse](https://langfuse.com/images/docs/github-readme/github-example-trace.png)

_[Public example trace in Langfuse](https://cloud.langfuse.com/project/cloramnkj0002jz088vzn1ja4/traces/2cec01e3-3dc2-472f-afcf-3b968cf0c1f4?timestamp=2025-02-10T14%3A27%3A30.275Z&amp;observation=cb5ff844-07ef-41e6-b8e2-6c64344bc13b)_

&gt; [!TIP]
&gt;
&gt; [Learn more](https://langfuse.com/docs/tracing) about tracing in Langfuse or play with the [interactive demo](https://langfuse.com/docs/demo).

## ⭐️ Star Us

![star-langfuse-on-github](https://github.com/user-attachments/assets/79a1d816-d229-4526-aecc-097d4a19f1ad)

## 💭 Support

Finding an answer to your question:

- Our [documentation](https://langfuse.com/docs) is the best place to start looking for answers. It is comprehensive, and we invest significant time into maintaining it. You can also suggest edits to the docs via GitHub.
- [Langfuse FAQs](https://langfuse.com/faq) where the most common questions are answered.
- Use &quot;[Ask AI](https://langfuse.com/docs/ask-ai)&quot; to get instant answers to your questions.

Support Channels:

- **Ask any question in our [public Q&amp;A](https://github.com/orgs/langfuse/discussions/categories/support) on GitHub Discussions.** Please include as much detail as possible (e.g. code snippets, screenshots, background information) to help us understand your question.
- [Request a feature](https://github.com/orgs/langfuse/discussions/categories/ideas) on GitHub Discussions.
- [Report a Bug](https://github.com/langfuse/langfuse/issues) on GitHub Issues.
- For time-sensitive queries, ping us via the in-app chat widget.

## 🤝 Contributing

Your contributions are welcome!

- Vote on [Ideas](https://github.com/orgs/langfuse/discussions/categories/ideas) in GitHub Discussions.
- Raise and comment on [Issues](https://github.com/langfuse/langfuse/issues).
- Open a PR - see [CONTRIBUTING.md](CONTRIBUTING.md) for details on how to setup a development environment.

## 🥇 License

This repository is MIT licensed, except for the `ee` folders. See [LICENSE](LICENSE) and [docs](https://langfuse.com/docs/open-source) for more details.

## ⭐️ Star History

&lt;a href=&quot;https://star-history.com/#langfuse/langfuse&amp;Date&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=langfuse/langfuse&amp;type=Date&amp;theme=dark&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=langfuse/langfuse&amp;type=Date&quot; /&gt;
   &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=langfuse/langfuse&amp;type=Date&quot; style=&quot;border-radius: 15px;&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;

## ❤️ Open Source Projects Using Langfuse

Top open-source Python projects that use Langfuse, ranked by stars ([Source](https://github.com/langfuse/langfuse-docs/blob/main/components-mdx/dependents)):

| Repository                                                                                                                                                                                                                                                          | Stars |
| :------------------------------

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[nanbingxyz/5ire]]></title>
            <link>https://github.com/nanbingxyz/5ire</link>
            <guid>https://github.com/nanbingxyz/5ire</guid>
            <pubDate>Sat, 26 Jul 2025 00:04:59 GMT</pubDate>
            <description><![CDATA[5ire is a cross-platform desktop AI assistant, MCP client. It compatible with major service providers, supports local knowledge base and tools via model context protocol servers .]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/nanbingxyz/5ire">nanbingxyz/5ire</a></h1>
            <p>5ire is a cross-platform desktop AI assistant, MCP client. It compatible with major service providers, supports local knowledge base and tools via model context protocol servers .</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,254</p>
            <p>Forks: 308</p>
            <p>Stars today: 24 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/nanbingxyz/5ire&quot;&gt;
    &lt;img src=&quot;https://5ire.app/logo.png&quot; alt=&quot;Logo&quot; width=&quot;120&quot;&gt;
  &lt;/a&gt;
  &lt;br /&gt;

   &lt;h1&gt;A Sleek AI Assistant &amp; MCP Client&lt;/h1&gt;
   &lt;div&gt;
    &lt;a href=&quot;https://modelcontextprotocol.io/clients&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://badge.mcpx.dev/?type=client&quot; /&gt;&lt;/a&gt;
    &lt;img src=&quot;https://badge.mcpx.dev/?type=client&amp;features=tools&quot; /&gt;
    &lt;img src=&quot;https://img.shields.io/badge/price-free-brightgreen.svg&quot;/&gt;
    &lt;a href=&quot;https://linkedin.com/in/nanbing&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/LinkedIn-0A66C2?logo=linkedin-white&amp;logoColor=fff&quot; alt=&quot;follow on LinkedIn&quot;&gt;&lt;/a&gt;
    &lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg&quot;/&gt;
     &lt;a href=&quot;https://github.com/nanbingxyz/5ire/graphs/commit-activity&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Commits last month&quot; src=&quot;https://img.shields.io/github/commit-activity/m/nanbingxyz/5ire?labelColor=%20%2332b583&amp;color=%20%2312b76a&quot;&gt;&lt;/a&gt;
     &lt;a href=&quot;https://github.com/nanbingxyz/5ire/issues&quot; target=&quot;_blank&quot;&gt;
        &lt;img alt=&quot;Issues closed&quot; src=&quot;https://img.shields.io/github/issues-search?query=repo%3Ananbingxyz%2F5ire%20is%3Aclosed&amp;label=issues%20closed&amp;labelColor=%20%237d89b0&amp;color=%20%235d6b98&quot;&gt;&lt;/a&gt;
     &lt;a href=&quot;https://mseep.ai/app/92bbc79d-4b4d-4707-8d43-2d3d8ebb4fa8&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://mseep.ai/badge.svg&quot; alt=&quot;Verified on MseeP&quot;/&gt;&lt;/a&gt;
  &lt;/div&gt;
   &lt;br /&gt;
  &lt;img src=&quot;https://github.com/user-attachments/assets/e622e1da-09b9-4212-b71c-ad9d39bf3cd5&quot; width=&quot;100%&quot;/&gt;
  &lt;br /&gt;
  &lt;p&gt;
    &lt;br /&gt;
    &lt;div style=&quot;display:flex;justify-content:space-around;align-items:center;gap:6px;flex-wrap:wrap;margin-bottom:15px;&quot;&gt;
    &lt;span style=&quot;font-size:12px;&quot;&gt;OpenAI&lt;/span&gt;
    &lt;span style=&quot;font-size:12px;&quot;&gt;/ Azure&lt;/span&gt;
    &lt;span style=&quot;font-size:12px;&quot;&gt;/ Anthropic&lt;/span&gt;
    &lt;span style=&quot;font-size:12px;&quot;&gt;/ Google&lt;/span&gt;
    &lt;span style=&quot;font-size:12px;&quot;&gt;/ Mistral&lt;/span&gt;
    &lt;span style=&quot;font-size:12px;&quot;&gt;/ Doubao&lt;/span&gt;
    &lt;span style=&quot;font-size:12px;&quot;&gt;/ Grok&lt;/span&gt;
    &lt;span style=&quot;font-size:12px;&quot;&gt;/ DeepSeek&lt;/span&gt;
    &lt;span style=&quot;font-size:12px;&quot;&gt;/ Ollama&lt;/span&gt;
  &lt;/div&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://x.com/intent/follow?screen_name=1ronben&quot;&gt;Twitter&lt;/a&gt;
    ·
    &lt;a href=&quot;https://github.com/nanbingxyz/5ire/releases/latest&quot;&gt;Releases&lt;/a&gt;
  &lt;/p&gt;
  &lt;div&gt;&lt;a href=&quot;https://buymeacoffee.com/ironben&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/2265e2d6-2a17-4a48-b779-52a925261135&quot; style=&quot;width:200px&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
   &lt;br /&gt;
&lt;video src=&quot;https://github.com/user-attachments/assets/741b23d3-31df-4749-bde4-103e2d415953.mp4&quot;&gt;&lt;/video&gt;
&lt;/div&gt;
&lt;br /&gt;

### Before to activating tools feature, ensure the following components are installed:

- Python
- Node.js
- uv (Python package manager)

These components are required as they constitute the runtime environment for the MCP Server. If you don&#039;t anticipate using the tools feature immediately, you may choose to skip this installation step and complete it later when the need arises.

For detailed installation instructions, please see our [Installation Guide](INSTALLATION.md).

### Getting involved

If you want to contribute code to 5ire or develop your own apps based on 5ire, start with the [Development Setup Guide](DEVELOPMENT.md).

Visit [Wiki](https://deepwiki.com/nanbingxyz/5ire) for more details.

**🚀 To integrate 5ire’s one-click server installation into your website, see the** [One-Click Server Installation Integration Guide](https://github.com/nanbingxyz/5ire/wiki/One%E2%80%90Click-Server-Installation-Integration-Guide).

&lt;br /&gt;

# Features

## ⚒️ Support Tools via MCP Servers

MCP is an open protocol that standardizes how applications provide context to LLMs. Think of MCP like a USB-C port for AI applications. Just as USB-C provides a standardized way to connect your devices to various peripherals and accessories, MCP provides a standardized way to connect AI models to different data sources and tools.

With tools, you can access the file system, obtain system information, interact with databases, access remote data, and more, rather than just having a simple conversation.

https://github.com/user-attachments/assets/5aa98f2b-c26d-435e-8196-73fa414066eb

We have created an open [marketplace for MCP Servers](https://github.com/nanbingxyz/mcpsvr). it empowers users to discover exceptional tools while offering a streamlined process for sharing their own MCP server creations.

https://github.com/user-attachments/assets/be66c30e-bb29-4dfe-9f25-8d396470ed60

## 💡 Local Knowledge Base

We have integrated the bge-m3 as our local embedding model, which excels in multilingual vectorization. 5ire now supports parsing and vectorization of docx, xlsx, pptx, pdf, txt, and csv documents, enabling storage of these vectors to power robust Retrieval-Augmented Generation (RAG) capabilities locally.

![Local Knowledge Base Screenshot](https://5ire.app/knowledge.png)

## 📈 Usage Analytics

By keeping track of your API usage and spending, you can gain a better understanding of how much you&#039;re spending on the API and make informed decisions to optimize your use of the service.

![Usage Analytics Screenshot](https://5ire.app/analytics.png)

## ✨ Prompts Library

The prompt library provides an effective way to create and organize your own prompts. These prompts are highly versatile, thanks to their support for variables.

![Prompts Library Screenshot](https://5ire.app/prompts.png)

## 🔖 Bookmarks

You can bookmark each conversation, and even if the original messages are deleted, the saved bookmarked content remains unaffected.
![Bookmarks Screenshot](https://5ire.app/bookmarks.png)

## 🔍 Quick Search

You can perform keyword searches across all conversations, quickly pinpointing the information you need.
![Search Screenshot](https://5ire.app/search.png)

&gt; [!TIP]
&gt; Since 5ire uses native dependencies, it needs to be packaged on the corresponding platform. If it is on Mac OS, you may also need to configure APPLE_TEAM_ID, APPLE_ID, and APPLE_ID_PASS for notarization to avoid security alerts.

&lt;hr/&gt;

## Discover Exceptional MCP Servers

[MCPSvr](https://github.com/nanbingxyz/mcpsvr), a community-driven directory of MCP servers, empowers developers to discover exceptional tools while offering a streamlined process for sharing their own MCP server creations.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[GrapesJS/grapesjs]]></title>
            <link>https://github.com/GrapesJS/grapesjs</link>
            <guid>https://github.com/GrapesJS/grapesjs</guid>
            <pubDate>Sat, 26 Jul 2025 00:04:58 GMT</pubDate>
            <description><![CDATA[Free and Open source Web Builder Framework. Next generation tool for building templates without coding]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/GrapesJS/grapesjs">GrapesJS/grapesjs</a></h1>
            <p>Free and Open source Web Builder Framework. Next generation tool for building templates without coding</p>
            <p>Language: TypeScript</p>
            <p>Stars: 24,602</p>
            <p>Forks: 4,392</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre># [GrapesJS](http://grapesjs.com)

[![Build Status](https://github.com/GrapesJS/grapesjs/actions/workflows/build.yml/badge.svg)](https://github.com/GrapesJS/grapesjs/actions)
[![Chat](https://img.shields.io/badge/chat-discord-7289da.svg)](https://discord.gg/QAbgGXq)
[![CDNJS](https://img.shields.io/cdnjs/v/grapesjs.svg)](https://cdnjs.com/libraries/grapesjs)
[![npm](https://img.shields.io/npm/v/grapesjs.svg)](https://www.npmjs.com/package/grapesjs)


&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;http://grapesjs.com/assets/images/grapesjs-front-page-m.jpg&quot; alt=&quot;GrapesJS&quot; width=&quot;500&quot; align=&quot;center&quot;/&gt;&lt;/p&gt;


GrapesJS is a free and open source Web Builder Framework which helps building HTML templates, faster and easily, to be delivered in sites, newsletters or mobile apps. Mainly, GrapesJS was designed to be used inside a [CMS] to speed up the creation of dynamic templates. To better understand this concept check the image below

&lt;br/&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;http://grapesjs.com/assets/images/gjs-concept.png&quot; alt=&quot;GrapesJS - Style Manager&quot; height=&quot;400&quot; align=&quot;center&quot;/&gt;&lt;/p&gt;
&lt;br/&gt;

Generally any &#039;template system&#039;, that you&#039;d find in various applications like CMS, is composed by the **structure** (HTML), **style** (CSS) and **variables**, which are then replaced with other templates and contents on server-side and rendered on client.

This demos show examples of what is possible to achieve:&lt;br/&gt;
Webpage Demo - http://grapesjs.com/demo.html&lt;br/&gt;
Newsletter Demo - http://grapesjs.com/demo-newsletter-editor.html&lt;br/&gt;





## Table of contents

* [Features](#features)
* [Download](#download)
* [Usage](#usage)
* [Development](#development)
* [Documentation](#documentation)
* [API](#api)
* [Testing](#testing)
* [Plugins](#plugins)
* [Support](#support)
* [Changelog](https://github.com/GrapesJS/grapesjs/releases)
* [Contributing](https://github.com/GrapesJS/grapesjs/blob/master/CONTRIBUTING.md)
* [License](#license)




## Features

| Blocks | Style Manager | Layer Manager |
|--|--|--|
|&lt;img  src=&quot;http://grapesjs.com/assets/images/sc-grapesjs-blocks-prp.jpg&quot;  alt=&quot;GrapesJS - Block Manager&quot;  height=&quot;400&quot;  align=&quot;center&quot;/&gt;|&lt;img  src=&quot;http://grapesjs.com/assets/images/sc-grapesjs-style-2.jpg&quot;  alt=&quot;GrapesJS - Style Manager&quot;  height=&quot;400&quot;  align=&quot;center&quot;/&gt;|&lt;img  src=&quot;http://grapesjs.com/assets/images/sc-grapesjs-layers-2.jpg&quot;  alt=&quot;GrapesJS - Layer Manager&quot;  height=&quot;400&quot;  align=&quot;center&quot;/&gt;|

| Code Viewer | Asset Manager |
|--|--|
|&lt;img  src=&quot;http://grapesjs.com/assets/images/sc-grapesjs-code.jpg&quot;  alt=&quot;GrapesJS - Code Viewer&quot;  height=&quot;300&quot;  align=&quot;center&quot;/&gt;|&lt;img  src=&quot;http://grapesjs.com/assets/images/sc-grapesjs-assets-1.jpg&quot;  alt=&quot;GrapesJS - Asset Manager&quot;  height=&quot;250&quot;  align=&quot;center&quot;/&gt;|

* Local and remote storage

* Default built-in commands (basically for creating and managing different components)





## Download

* CDNs
  * UNPKG (resolves to the latest version)
    * `https://unpkg.com/grapesjs`
    * `https://unpkg.com/grapesjs/dist/css/grapes.min.css`
  * CDNJS (replace `X.X.X` with the current version)
    * `https://cdnjs.cloudflare.com/ajax/libs/grapesjs/X.X.X/grapes.min.js`
    * `https://cdnjs.cloudflare.com/ajax/libs/grapesjs/X.X.X/css/grapes.min.css`
* NPM
  * `npm i grapesjs`
* GIT
  * `git clone https://github.com/GrapesJS/grapesjs.git`

For the development purpose you should follow instructions below.





## Usage

```html
&lt;link rel=&quot;stylesheet&quot; href=&quot;path/to/grapes.min.css&quot;&gt;
&lt;script src=&quot;path/to/grapes.min.js&quot;&gt;&lt;/script&gt;

&lt;div id=&quot;gjs&quot;&gt;&lt;/div&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
  var editor = grapesjs.init({
      container : &#039;#gjs&#039;,
      components: &#039;&lt;div class=&quot;txt-red&quot;&gt;Hello world!&lt;/div&gt;&#039;,
      style: &#039;.txt-red{color: red}&#039;,
  });
&lt;/script&gt;
```

For a more practical example I&#039;d suggest looking up the code inside this demo: http://grapesjs.com/demo.html


## Development

Clone the repository and install all the necessary dependencies (`yarn` is highly recommended)

```sh
$ git clone https://github.com/GrapesJS/grapesjs.git
$ cd grapesjs
$ yarn
```

Start the dev server

```sh
$ yarn start
```

Once the development server is started you should be able to reach the demo page (eg. `http://localhost:8080`)





## Documentation

Check the getting started guide here: [Documentation]





## API

API References could be found here: [API-Reference]





## Testing

```sh
$ yarn test
```





## Plugins

[Official Plugins](https://github.com/orgs/GrapesJS/repositories?q=-repo%3Agrapesjs%2Fgrapesjs&amp;type=source) | [Community Plugins](https://github.com/topics/grapesjs-plugin)

### Wrappers

* [@grapesjs/react](https://github.com/GrapesJS/react) - GrapesJS wrapper for React that allows you to build custom and declarative UI for your editor.



### Extensions
* [grapesjs-plugin-export](https://github.com/GrapesJS/export) - Export GrapesJS templates in a zip archive
* [grapesjs-plugin-filestack](https://github.com/GrapesJS/filestack) - Add Filestack uploader in Asset Manager
* [grapesjs-plugin-ckeditor](https://github.com/GrapesJS/ckeditor) - Replaces the built-in RTE with CKEditor
* [grapesjs-tui-image-editor](https://github.com/GrapesJS/tui-image-editor) - GrapesJS TOAST UI Image Editor
* [grapesjs-blocks-basic](https://github.com/GrapesJS/blocks-basic) - Basic set of blocks
* [grapesjs-plugin-forms](https://github.com/GrapesJS/components-forms) - Set of form components and blocks
* [grapesjs-navbar](https://github.com/GrapesJS/components-navbar) - Simple navbar component
* [grapesjs-component-countdown](https://github.com/GrapesJS/components-countdown) - Simple countdown component
* [grapesjs-style-gradient](https://github.com/GrapesJS/style-gradient) - Add `gradient` type input to the Style Manager
* [grapesjs-style-filter](https://github.com/GrapesJS/style-filter) - Add `filter` type input to the Style Manager
* [grapesjs-style-bg](https://github.com/GrapesJS/style-bg) - Full-stack background style property type, with the possibility to add images, colors, and gradients
* [grapesjs-blocks-flexbox](https://github.com/GrapesJS/blocks-flexbox) - Add the flexbox block
* [grapesjs-lory-slider](https://github.com/GrapesJS/components-lory) - Slider component by using [lory](https://github.com/meandmax/lory)
* [grapesjs-tabs](https://github.com/GrapesJS/components-tabs) - Simple tabs component
* [grapesjs-tooltip](https://github.com/GrapesJS/components-tooltip) - Simple, CSS only, tooltip component for GrapesJS
* [grapesjs-custom-code](https://github.com/GrapesJS/components-custom-code) - Embed custom code
* [grapesjs-touch](https://github.com/GrapesJS/touch) - Enable touch support
* [grapesjs-indexeddb](https://github.com/GrapesJS/storage-indexeddb) - Storage wrapper for IndexedDB
* [grapesjs-firestore](https://github.com/GrapesJS/storage-firestore) - Storage wrapper for [Cloud Firestore](https://firebase.google.com/docs/firestore)
* [grapesjs-parser-postcss](https://github.com/GrapesJS/parser-postcss) - Custom CSS parser for GrapesJS by using [PostCSS](https://github.com/postcss/postcss)
* [grapesjs-typed](https://github.com/GrapesJS/components-typed) - Typed component made by wrapping Typed.js library
* [grapesjs-ui-suggest-classes](https://github.com/silexlabs/grapesjs-ui-suggest-classes) - Enable auto-complete of classes in the SelectorManager UI
* [grapesjs-fonts](https://github.com/silexlabs/grapesjs-fonts) - Custom Fonts plugin, adds a UI to manage fonts in websites
* [grapesjs-symbols](https://github.com/silexlabs/grapesjs-symbols) - Symbols plugin to reuse elements in a website and accross pages
* [grapesjs-click](https://github.com/bgrand-ch/grapesjs-click) - Grab and drop blocks and components with click (no more drag-and-drop)
* [grapesjs-float](https://github.com/bgrand-ch/grapesjs-float) - Anchor a floating element next to another element (selected component, ...)

### Presets
* [grapesjs-preset-webpage](https://github.com/GrapesJS/preset-webpage) - Webpage Builder
* [grapesjs-preset-newsletter](https://github.com/GrapesJS/preset-newsletter) - Newsletter Builder
* [grapesjs-mjml](https://github.com/GrapesJS/mjml) - Newsletter Builder with MJML components


Find out more about plugins here: [Creating plugins](https://grapesjs.com/docs/modules/Plugins.html)





## Support

If you like the project and you wish to see it grow, please consider supporting us with a donation of your choice or become a backer/sponsor via [Open Collective](https://opencollective.com/grapesjs)

[![PayPalMe](http://grapesjs.com/assets/images/ppme.png)](https://paypal.me/grapesjs)
[![Bitcoin](https://user-images.githubusercontent.com/11614725/52977952-87235f80-33cf-11e9-9607-7a9a354e1155.png)](https://commerce.coinbase.com/checkout/fc90b940-558d-408b-a166-28a823c98173)

&lt;a href=&quot;https://opencollective.com/grapesjs&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/tiers/sponsors.svg?avatarHeight=64&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/grapesjs&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/tiers/backers.svg?avatarHeight=64&quot;&gt;&lt;/a&gt;

&lt;br&gt;

[![BrowserStack](https://user-images.githubusercontent.com/11614725/39406324-4ef89c40-4bb5-11e8-809a-113d9432e5a5.png)](https://www.browserstack.com)&lt;br/&gt;
Thanks to [BrowserStack](https://www.browserstack.com) for providing us browser testing services


## License

BSD 3-clause


[Documentation]: &lt;https://grapesjs.com/docs/&gt;
[API-Reference]: &lt;https://grapesjs.com/docs/api/&gt;
[CMS]: &lt;https://en.wikipedia.org/wiki/Content_management_system&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[chrisvel/tududi]]></title>
            <link>https://github.com/chrisvel/tududi</link>
            <guid>https://github.com/chrisvel/tududi</guid>
            <pubDate>Sat, 26 Jul 2025 00:04:57 GMT</pubDate>
            <description><![CDATA[Self-hosted task management that combines the simplicity of personal with the power of professional project organization. Built for individuals and teams who value privacy, control, and efficiency.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/chrisvel/tududi">chrisvel/tududi</a></h1>
            <p>Self-hosted task management that combines the simplicity of personal with the power of professional project organization. Built for individuals and teams who value privacy, control, and efficiency.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 943</p>
            <p>Forks: 55</p>
            <p>Stars today: 51 stars today</p>
            <h2>README</h2><pre># 📝 tududi

`tududi` is the self-hosted task management tool that puts you in control. Organize your life and projects with a clear, hierarchical structure,
smart recurring tasks, and seamless Telegram integration. Get focused, stay productive, and keep your data private.

![Light Mode Screenshot](screenshots/all-light.png)

More screenshots [here](#screenshots).

## 🚀 How It Works

This app allows users to manage their tasks, projects, areas, notes, and tags in an organized way. Users can create tasks, projects, areas (to group projects), notes, and tags. Each task can be associated with a project, and both tasks and notes can be tagged for better organization. Projects can belong to areas and can also have multiple notes and tags. This structure helps users categorize and track their work efficiently, whether they’re managing individual tasks, larger projects, or keeping detailed notes.

## 🧠 Philosophy

For the thinking behind tududi, read:
- [Designing a Life Management System That Doesn&#039;t Fight Back](https://medium.com/@chrisveleris/designing-a-life-management-system-that-doesnt-fight-back-2fd58773e857)
- [From Task to Table: How I Finally Got to the Korean Burger](https://medium.com/@chrisveleris/from-task-to-table-how-i-finally-got-to-the-korean-burger-01245a14d491)

## ✨ Features

- **Task Management**: Create, update, and delete tasks. Mark tasks as completed and view them by different filters (Today, Upcoming, Someday). Order them by Name, Due Date, Date Created, or Priority.
- **Subtasks**: Break down complex tasks into smaller, manageable subtasks with progress tracking and seamless navigation.
- **Recurring Tasks**: Comprehensive recurring task system with intelligent parent-child relationships:
  - **Multiple Recurrence Patterns**: Daily, weekly, monthly, monthly on specific weekdays, and monthly last day
  - **Completion-Based Recurrence**: Option to repeat based on completion date rather than due date
  - **Smart Parent-Child Linking**: Generated task instances maintain connection to their original recurring pattern
  - **Direct Parent Editing**: Edit recurrence settings directly from any generated task instance
  - **Flexible Scheduling**: Set custom intervals (every 2 weeks, every 3 months, etc.)
  - **End Date Control**: Optional end dates for recurring series
- **Quick Notes**: Create, update, delete, or assign text notes to projects.
- **Tags**: Create tags for tasks and notes to enhance organization.
- **Project Tracking**: Organize tasks into projects. Each project can contain multiple tasks and/or multiple notes.
- **Area Categorization**: Group projects into areas for better organization and focus.
- **Due Date Tracking**: Set due dates for tasks and view them based on due date categories.
- **Responsive Design**: Accessible from various devices, ensuring a consistent experience across desktops, tablets, and mobile phones.
- **Multi-Language Support**: Available in 24 languages with full localization support for a truly global productivity experience.
- **Telegram Integration**:
  - Create tasks directly through Telegram messages
  - Receive daily digests of your tasks
  - Quick capture of ideas and todos on the go



## 🗺️ Roadmap

Check out our [GitHub Project](https://github.com/users/chrisvel/projects/2) for planned features and progress.

## 🛠️ Getting Started

### Quick Start with Docker

**One simple command**, that&#039;s all it takes to run tududi with Docker.

First pull the latest image:

```bash
docker pull chrisvel/tududi:latest
```

### ⚙️ Environment Variables

The following environment variables are used to configure tududi:

#### Required Variables:
- `TUDUDI_USER_EMAIL` - Initial admin user&#039;s email address (e.g., `admin@example.com`)
- `TUDUDI_USER_PASSWORD` - Initial admin user&#039;s password (use a strong password!)
- `TUDUDI_SESSION_SECRET` - Session encryption key (generate with `openssl rand -hex 64`)

#### Optional Variables:
- `PUID`, `GUID` - Run with specified user and group ID (instead of defaults 1001/1001)
- `DB_FILE` - Path to sqlite DB file
- `TUDUDI_UPLOAD_PATH` - Path where uploaded files are stored
- `TUDUDI_ALLOWED_ORIGINS` - Controls CORS access for different deployment scenarios:
  - Not set: Only allows localhost origins
  - Specific domains: `https://tududi.com,http://localhost:3002`
  - Allow all (development only): Set to empty string `&quot;&quot;`

#### Common Configuration Examples:

##### Local Development
```bash
export TUDUDI_USER_EMAIL=dev@local.test
export TUDUDI_USER_PASSWORD=devpassword123
export TUDUDI_SESSION_SECRET=$(openssl rand -hex 64)
# TUDUDI_ALLOWED_ORIGINS not set - defaults to localhost only
```

##### Production with Reverse Proxy
```bash
export TUDUDI_USER_EMAIL=admin@yourdomain.com
export TUDUDI_USER_PASSWORD=your-secure-password-here
export TUDUDI_SESSION_SECRET=$(openssl rand -hex 64)
export TUDUDI_ALLOWED_ORIGINS=https://tududi.yourdomain.com
```

### 🚀 Running with Docker

```bash
docker run \
  -e TUDUDI_USER_EMAIL=myemail@example.com \
  -e TUDUDI_USER_PASSWORD=mysecurepassword \
  -e TUDUDI_SESSION_SECRET=$(openssl rand -hex 64) \
  -e TUDUDI_ALLOWED_ORIGINS=https://tududi,http://tududi:3002 \
  -e PUID=1001 \
  -e GUID=1001 \
  -v ~/tududi_db:/app/backend/db \
  -v ~/tududi_uploads:/app/backend/uploads \
  -p 3002:3002 \
  -d chrisvel/tududi:latest
```

Navigate to [http://localhost:3002](http://localhost:3002) and login with your credentials.

## 📱 Telegram Integration Setup

tududi includes built-in Telegram integration that allows you to create tasks directly from Telegram messages. This feature is optional and can be configured after installation.

### 🤖 Creating a Telegram Bot

1. **Start a chat with @BotFather** on Telegram
2. **Create a new bot**:
   ```
   /newbot
   ```
3. **Choose a name** for your bot (e.g., &quot;My tududi Bot&quot;)
4. **Choose a username** for your bot (must end with &quot;bot&quot;, e.g., &quot;mytududi_bot&quot;)
5. **Save the bot token** - BotFather will provide a token like `123456789:ABCdefGHIjklMNOpqrSTUvwxyz`

### ⚙️ Configuring Telegram Integration

#### Method: Through the Web Interface (Recommended)

1. **Login to tududi** and go to Settings
2. **Navigate to the Telegram tab**
3. **Paste your bot token** from BotFather
4. **Click &quot;Setup Telegram&quot;** - this will:
   - Validate your bot token
   - Display your bot&#039;s username
   - Provide a direct link to start chatting with your bot
5. **Start chatting** with your bot by clicking the provided link or searching for your bot in Telegram
6. **Send your first message** to your bot - it will automatically appear in your tududi inbox!

### 🔄 How It Works

1. **Message Collection**: tududi polls your bot every 30 seconds for new messages
2. **Automatic Inbox Creation**: Every message sent to your bot creates a new item in your tududi inbox
3. **Duplicate Prevention**: The same message won&#039;t create multiple inbox items
4. **Processing**: You can then process inbox items into tasks, projects, or notes

### 📊 Telegram Settings Overview

In the Telegram settings tab, you can:

- **Bot Setup**: Configure your bot token and view connection status
- **Polling Control**: Start/stop message polling manually
- **Bot Information**: View bot username and connection status
- **Test Integration**: Send a test message to verify connectivity
- **Task Summaries**: Enable/disable daily task summary notifications

### 🔧 Troubleshooting

**Bot not receiving messages:**
- Verify your bot token is correct
- Ensure you&#039;ve started a conversation with your bot in Telegram
- Check that polling is active in the Telegram settings
- Verify your server can reach Telegram&#039;s API (check firewall settings)

**Messages not appearing in inbox:**
- Check the polling status in Telegram settings
- Verify your bot token hasn&#039;t expired
- Ensure your account is properly connected to the bot

**Bot setup failing:**
- Double-check your bot token format (should be like `123456789:ABCdefGHIjklMNOpqrSTUvwxyz`)
- Verify your bot is active and not deleted
- Check your internet connection

### 🔒 Security Considerations

- **Bot tokens are stored securely** in your local database
- **Only you can send messages** to your bot (private by default)
- **No data is shared** with third parties - everything runs on your self-hosted instance
- **Tokens are encrypted** in transit and at rest

### 🚫 Disabling Telegram Integration

To completely disable Telegram integration:

1. **Via Interface**: Simply don&#039;t configure a bot token in the settings
2. **Remove Bot Token**: Delete your bot token from the Telegram settings to stop all integration

### 🔑 Authentication

The application uses session-based authentication with secure cookies. For development:
- Frontend runs on port 8080 with webpack dev server
- Backend runs on port 3001 and handles authentication
- CORS is configured to allow cross-origin requests during development
- In production (Docker), both frontend and backend run on the same port (3002)

## 🚧 Development

### Prerequisites

Before you begin, ensure you have the following installed:
- Node.js (version 20 or higher)
- Express.js
- SQLite3
- npm
- ReactJS

### 🏗 Installation

To install `tududi`, follow these steps:

1. Clone the repository:
   ```bash
   git clone https://github.com/chrisvel/tududi.git
   ```
2. Navigate to the project directory:
   ```bash
   cd tududi
   ```
3. Install the required dependencies:
   ```bash
   # Install all dependencies (frontend and backend)
   npm install
   ```

### 📂 Database Setup

The database will be automatically initialized when you start the Express backend. For manual database operations:

```bash
# Initialize database (creates tables, drops existing data)
npm run db:init

# Sync database (creates tables if they don&#039;t exist)
npm run db:sync

# Migrate database (alters existing tables to match models)
npm run db:migrate

# Reset database (drops and recreates all tables)
npm run db:reset

# Check database status and connection
npm run db:status
```

### 🔄 Database Migrations

For schema changes, use Sequelize migrations (similar to Rails/Ruby migrations):

```bash
# Create a new migration
npm run migration:create add-description-to-tasks

# Run pending migrations
npm run migration:run

# Check migration status
npm run migration:status

# Rollback last migration
npm run migration:undo

# Rollback all migrations
npm run migration:undo:all
```

#### Creating a New Migration Example:
```bash
# 1. Create the migration file
npm run migration:create add-priority-to-projects

# 2. Edit the generated file in migrations/ folder:
# - Add your schema changes in the &#039;up&#039; function
# - Add rollback logic in the &#039;down&#039; function

# 3. Run the migration
npm run migration:run
```

### 👤 User Setup

#### For Development

Set environment variables to automatically create the initial user:

```bash
export TUDUDI_USER_EMAIL=dev@example.com
export TUDUDI_USER_PASSWORD=password123
export TUDUDI_SESSION_SECRET=$(openssl rand -hex 64)
```

Or create a user manually:
```bash
npm run user:create dev@example.com password123
```

#### Default Development Credentials

If no environment variables are set, you can use the default development credentials:
- Email: `dev@example.com`  
- Password: `password123`

### 🚀 Usage

To start the application for development:

1. **Start the Express backend** (in one terminal):
   ```bash
   npm run backend:dev    # Development mode with auto-reload
   # Or: npm run backend:start  # Production mode
   ```
   The backend will run on `http://localhost:3001`

2. **Start the frontend development server** (in another terminal):
   ```bash
   npm run frontend:dev
   ```
   The frontend will run on `http://localhost:8080`

3. **Access the application**: Open your browser to `http://localhost:8080`

### Port Configuration

- **Development Frontend**: `http://localhost:8080` (webpack dev server)
- **Development Backend**: `http://localhost:3001` (Express API server)
- **Docker/Production**: `http://localhost:3002` (combined frontend + backend)

The webpack dev server automatically proxies API calls and locales to the backend server.

### 🔍 Testing 

To run tests:

```bash
# Backend tests
npm run backend:test

# Frontend tests  
npm run frontend:test
```

#### Test Coverage

The application includes comprehensive test coverage for:
- **Backend API endpoints** (tasks, projects, areas, notes, tags, auth)
- **Database models and migrations**
- **Recurring task service and date calculations**
- **Frontend components and utilities**
- **Authentication and session management**

**Note**: Comprehensive test coverage for the new recurring tasks functionality is planned and will include:
- Recurring task generation algorithms
- Parent-child relationship management
- Date calculation edge cases
- Frontend recurring task components
- Integration tests for complete recurring task workflows

The application has been fully migrated from Ruby/Sinatra to a functional programming Express.js implementation.

## 🤝 Contributing

Contributions to `tududi` are welcome. To contribute:

1. Fork the repository.
2. Create a new branch (\`git checkout -b feature/AmazingFeature\`).
3. Make your changes.
4. Commit your changes (\`git commit -m &#039;Add some AmazingFeature&#039;\`).
5. Push to the branch (\`git push origin fexature/AmazingFeature\`).
6. Open a pull request.


## 📜 License

This project is licensed under the [MIT License](LICENSE).

## 📬 Contact

For questions or comments, please [open an issue](https://github.com/chrisvel/tududi/issues) or contact the developer directly.

Join the tududi community:

[![Discord](https://img.shields.io/badge/Discord-Join%20Server-7289da?logo=discord&amp;logoColor=white&amp;style=for-the-badge)](https://discord.gg/fkbeJ9CmcH)  
[![Reddit](https://img.shields.io/reddit/subreddit-subscribers/tududi?color=ff4500&amp;label=Reddit&amp;logo=reddit&amp;logoColor=white&amp;style=for-the-badge)](https://www.reddit.com/r/tududi/)

## 🌟 Please check my other projects!

- **[Reconya](https://reconya.com)** - Network reconnaissance and asset discovery tool
- **[BreachHarbor](https://breachharbor.com)** - Cybersecurity suite for digital asset protection  
- **[Hevetra](https://hevetra.com)** - Digital tracking for child health milestones

# Screenshots

![Light Mode Screenshot](screenshots/all-light.png)

![Dark Mode Screenshot](screenshots/all-dark.png)

![Light Mobile Screenshot](screenshots/mobile-all-light.png)

![Dark Mobile Screenshot](screenshots/mobile-all-dark.png)
---

README created by [Chris Veleris](https://github.com/chrisvel) for `tududi`.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[kagent-dev/kagent]]></title>
            <link>https://github.com/kagent-dev/kagent</link>
            <guid>https://github.com/kagent-dev/kagent</guid>
            <pubDate>Sat, 26 Jul 2025 00:04:56 GMT</pubDate>
            <description><![CDATA[Cloud Native Agentic AI | Discord: https://bit.ly/kagentdiscord]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/kagent-dev/kagent">kagent-dev/kagent</a></h1>
            <p>Cloud Native Agentic AI | Discord: https://bit.ly/kagentdiscord</p>
            <p>Language: TypeScript</p>
            <p>Stars: 1,224</p>
            <p>Forks: 188</p>
            <p>Stars today: 4 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/kagent-dev/kagent/main/img/icon-dark.svg&quot; alt=&quot;kagent&quot; width=&quot;400&quot;&gt;
    &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/kagent-dev/kagent/main/img/icon-light.svg&quot; alt=&quot;kagent&quot; width=&quot;400&quot;&gt;
    &lt;img alt=&quot;kagent&quot; src=&quot;https://raw.githubusercontent.com/kagent-dev/kagent/main/img/icon-light.svg&quot;&gt;
  &lt;/picture&gt;
  &lt;div&gt;
    &lt;a href=&quot;https://github.com/kagent-dev/kagent/releases&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/github/v/release/kagent-dev/kagent?style=flat&amp;label=Latest%20version&quot; alt=&quot;Release&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/kagent-dev/kagent/actions/workflows/ci.yaml&quot;&gt;
      &lt;img src=&quot;https://github.com/kagent-dev/kagent/actions/workflows/ci.yaml/badge.svg&quot; alt=&quot;Build Status&quot; height=&quot;20&quot;&gt;
    &lt;/a&gt;
      &lt;a href=&quot;https://opensource.org/licenses/Apache-2.0&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/badge/License-Apache2.0-brightgreen.svg?style=flat&quot; alt=&quot;License: Apache 2.0&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://github.com/kagent-dev/kagent&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/github/stars/kagent-dev/kagent.svg?style=flat&amp;logo=github&amp;label=Stars&quot; alt=&quot;Stars&quot;&gt;
    &lt;/a&gt;
     &lt;a href=&quot;https://discord.gg/Fu3k65f2k3&quot;&gt;
      &lt;img src=&quot;https://img.shields.io/discord/1346225185166065826?style=flat&amp;label=Join%20Discord&amp;color=6D28D9&quot; alt=&quot;Discord&quot;&gt;
    &lt;/a&gt;
    &lt;a href=&quot;https://deepwiki.com/kagent-dev/kagent&quot;&gt;&lt;img src=&quot;https://deepwiki.com/badge.svg&quot; alt=&quot;Ask DeepWiki&quot;&gt;&lt;/a&gt;
    &lt;a href=&#039;https://codespaces.new/kagent-dev/kagent&#039;&gt;
      &lt;img src=&#039;https://github.com/codespaces/badge.svg&#039; alt=&#039;Open in Github Codespaces&#039; style=&#039;max-width: 100%;&#039; height=&quot;20&quot;&gt;
    &lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;

---

**kagent** is a Kubernetes native framework for building AI agents. Kubernetes is the most popular orchestration platform for running workloads, and **kagent** makes it easy to build, deploy and manage AI agents in Kubernetes. The **kagent** framework is designed to be easy to understand and use, and to provide a flexible and powerful way to build and manage AI agents.

&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;img/hero.png&quot; alt=&quot;Autogen Framework&quot; width=&quot;500&quot;&gt;
&lt;/div&gt;

---

## Get started

- [Quick Start](https://kagent.dev/docs/getting-started/quickstart)
- [Installation guide](https://kagent.dev/docs/introduction/installation)


## Documentation

The kagent documentation is available at [kagent.dev/docs](https://kagent.dev/docs).

## Core Concepts

- **Agents**: Agents are the main building block of kagent. They are a system prompt, a set of tools and agents, and an LLM configuration represented with a Kubernetes custom resource called &quot;Agent&quot;. 
- **LLM Providers**: Kagent supports multiple LLM providers, including [OpenAI](https://kagent.dev/docs/supported-providers/openai), [Azure OpenAI](https://kagent.dev/docs/supported-providers/azure-openai), [Anthropic](https://kagent.dev/docs/supported-providers/anthropic), [Google Vertex AI](https://kagent.dev/docs/supported-providers/google-vertexai), [Ollama](https://kagent.dev/docs/supported-providers/ollama) and any other [custom providers and models](https://kagent.dev/docs/supported-providers/custom-models) accessible via AI gateways. Providers are represented by the ModelConfig resource.
- **MCP Tools**: Agents can connect to any MCP server that provides tools. Kagent comes with an MCP server with tools for Kubernetes, Istio, Helm, Argo, Prometheus, Grafana,  Cilium and others. All tools are as Kubernetes custom resources (ToolServers) and can be used by multiple agents.
- **Memory**: Using the [memory](https://kagent.dev/docs/concepts/memory) your agents can always have access to the latest and most up to date information.
- **Observability**: Kagent supports [OpenTelemetry tracing](https://kagent.dev/docs/getting-started/tracing) which allows you to monitor what&#039;s happening with your agents and tools.

## Core Principles

- **Kubernetes Native**: Kagent is designed to be easy to understand and use, and to provide a flexible and powerful way to build and manage AI agents.
- **Extensible**: Kagent is designed to be extensible, so you can add your own agents and tools.
- **Flexible**: Kagent is designed to be flexible, to suit any AI agent use case.
- **Observable**: Kagent is designed to be observable, so you can monitor the agents and tools using all common monitoring frameworks.
- **Declarative**: Kagent is designed to be declarative, so you can define the agents and tools in a yaml file.
- **Testable**: Kagent is designed to be tested and debugged easily. This is especially important for AI agent applications.

## Architecture

The kagent framework is designed to be easy to understand and use, and to provide a flexible and powerful way to build and manage AI agents.

&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;img/arch.png&quot; alt=&quot;Autogen Framework&quot; width=&quot;500&quot;&gt;
&lt;/div&gt;

Kagent has 4 core components:

- **Controller**: The controller is a Kubernetes controller that watches the kagent custom resources and creates the necessary resources to run the agents.
- **UI**: The UI is a web UI that allows you to manage the agents and tools.
- **Engine**: The engine is a Python application that runs the agents and tools. The engine is built using [Autogen](https://github.com/microsoft/autogen).
- **CLI**: The CLI is a command line tool that allows you to manage the agents and tools.

## Roadmap

`kagent` is currently in active development. You can check out the full roadmap in the project Kanban board [here](https://github.com/orgs/kagent-dev/projects/3).

## Local development

For instructions on how to run everything locally, see the [DEVELOPMENT.md](DEVELOPMENT.md) file.

## Contributing

For instructions on how to contribute to the kagent project, see the [CONTRIBUTION.md](CONTRIBUTION.md) file.

## Contributors

Thanks to all contributors who are helping to make kagent better.

&lt;a href=&quot;https://github.com/kagent-dev/kagent/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=kagent-dev/kagent&quot; /&gt;
&lt;/a&gt;

## Star History

&lt;a href=&quot;https://www.star-history.com/#kagent-dev/kagent&amp;Date&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=kagent-dev/kagent&amp;type=Date&amp;theme=dark&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=kagent-dev/kagent&amp;type=Date&quot; /&gt;
   &lt;img alt=&quot;Star history of kagent-dev/kagent over time&quot; src=&quot;https://api.star-history.com/svg?repos=kagent-dev/kagent&amp;type=Date&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>