<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Sat, 24 May 2025 00:04:57 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[microsoft/vscode]]></title>
            <link>https://github.com/microsoft/vscode</link>
            <guid>https://github.com/microsoft/vscode</guid>
            <pubDate>Sat, 24 May 2025 00:04:57 GMT</pubDate>
            <description><![CDATA[Visual Studio Code]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/microsoft/vscode">microsoft/vscode</a></h1>
            <p>Visual Studio Code</p>
            <p>Language: TypeScript</p>
            <p>Stars: 172,436</p>
            <p>Forks: 32,575</p>
            <p>Stars today: 306 stars today</p>
            <h2>README</h2><pre># Visual Studio Code - Open Source (&quot;Code - OSS&quot;)

[![Feature Requests](https://img.shields.io/github/issues/microsoft/vscode/feature-request.svg)](https://github.com/microsoft/vscode/issues?q=is%3Aopen+is%3Aissue+label%3Afeature-request+sort%3Areactions-%2B1-desc)
[![Bugs](https://img.shields.io/github/issues/microsoft/vscode/bug.svg)](https://github.com/microsoft/vscode/issues?utf8=✓&amp;q=is%3Aissue+is%3Aopen+label%3Abug)
[![Gitter](https://img.shields.io/badge/chat-on%20gitter-yellow.svg)](https://gitter.im/Microsoft/vscode)

## The Repository

This repository (&quot;`Code - OSS`&quot;) is where we (Microsoft) develop the [Visual Studio Code](https://code.visualstudio.com) product together with the community. Not only do we work on code and issues here, we also publish our [roadmap](https://github.com/microsoft/vscode/wiki/Roadmap), [monthly iteration plans](https://github.com/microsoft/vscode/wiki/Iteration-Plans), and our [endgame plans](https://github.com/microsoft/vscode/wiki/Running-the-Endgame). This source code is available to everyone under the standard [MIT license](https://github.com/microsoft/vscode/blob/main/LICENSE.txt).

## Visual Studio Code

&lt;p align=&quot;center&quot;&gt;
  &lt;img alt=&quot;VS Code in action&quot; src=&quot;https://user-images.githubusercontent.com/35271042/118224532-3842c400-b438-11eb-923d-a5f66fa6785a.png&quot;&gt;
&lt;/p&gt;

[Visual Studio Code](https://code.visualstudio.com) is a distribution of the `Code - OSS` repository with Microsoft-specific customizations released under a traditional [Microsoft product license](https://code.visualstudio.com/License/).

[Visual Studio Code](https://code.visualstudio.com) combines the simplicity of a code editor with what developers need for their core edit-build-debug cycle. It provides comprehensive code editing, navigation, and understanding support along with lightweight debugging, a rich extensibility model, and lightweight integration with existing tools.

Visual Studio Code is updated monthly with new features and bug fixes. You can download it for Windows, macOS, and Linux on [Visual Studio Code&#039;s website](https://code.visualstudio.com/Download). To get the latest releases every day, install the [Insiders build](https://code.visualstudio.com/insiders).

## Contributing

There are many ways in which you can participate in this project, for example:

* [Submit bugs and feature requests](https://github.com/microsoft/vscode/issues), and help us verify as they are checked in
* Review [source code changes](https://github.com/microsoft/vscode/pulls)
* Review the [documentation](https://github.com/microsoft/vscode-docs) and make pull requests for anything from typos to additional and new content

If you are interested in fixing issues and contributing directly to the code base,
please see the document [How to Contribute](https://github.com/microsoft/vscode/wiki/How-to-Contribute), which covers the following:

* [How to build and run from source](https://github.com/microsoft/vscode/wiki/How-to-Contribute)
* [The development workflow, including debugging and running tests](https://github.com/microsoft/vscode/wiki/How-to-Contribute#debugging)
* [Coding guidelines](https://github.com/microsoft/vscode/wiki/Coding-Guidelines)
* [Submitting pull requests](https://github.com/microsoft/vscode/wiki/How-to-Contribute#pull-requests)
* [Finding an issue to work on](https://github.com/microsoft/vscode/wiki/How-to-Contribute#where-to-contribute)
* [Contributing to translations](https://aka.ms/vscodeloc)

## Feedback

* Ask a question on [Stack Overflow](https://stackoverflow.com/questions/tagged/vscode)
* [Request a new feature](CONTRIBUTING.md)
* Upvote [popular feature requests](https://github.com/microsoft/vscode/issues?q=is%3Aopen+is%3Aissue+label%3Afeature-request+sort%3Areactions-%2B1-desc)
* [File an issue](https://github.com/microsoft/vscode/issues)
* Connect with the extension author community on [GitHub Discussions](https://github.com/microsoft/vscode-discussions/discussions) or [Slack](https://aka.ms/vscode-dev-community)
* Follow [@code](https://twitter.com/code) and let us know what you think!

See our [wiki](https://github.com/microsoft/vscode/wiki/Feedback-Channels) for a description of each of these channels and information on some other available community-driven channels.

## Related Projects

Many of the core components and extensions to VS Code live in their own repositories on GitHub. For example, the [node debug adapter](https://github.com/microsoft/vscode-node-debug) and the [mono debug adapter](https://github.com/microsoft/vscode-mono-debug) repositories are separate from each other. For a complete list, please visit the [Related Projects](https://github.com/microsoft/vscode/wiki/Related-Projects) page on our [wiki](https://github.com/microsoft/vscode/wiki).

## Bundled Extensions

VS Code includes a set of built-in extensions located in the [extensions](extensions) folder, including grammars and snippets for many languages. Extensions that provide rich language support (code completion, Go to Definition) for a language have the suffix `language-features`. For example, the `json` extension provides coloring for `JSON` and the `json-language-features` extension provides rich language support for `JSON`.

## Development Container

This repository includes a Visual Studio Code Dev Containers / GitHub Codespaces development container.

* For [Dev Containers](https://aka.ms/vscode-remote/download/containers), use the **Dev Containers: Clone Repository in Container Volume...** command which creates a Docker volume for better disk I/O on macOS and Windows.
  * If you already have VS Code and Docker installed, you can also click [here](https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/microsoft/vscode) to get started. This will cause VS Code to automatically install the Dev Containers extension if needed, clone the source code into a container volume, and spin up a dev container for use.

* For Codespaces, install the [GitHub Codespaces](https://marketplace.visualstudio.com/items?itemName=GitHub.codespaces) extension in VS Code, and use the **Codespaces: Create New Codespace** command.

Docker / the Codespace should have at least **4 Cores and 6 GB of RAM (8 GB recommended)** to run full build. See the [development container README](.devcontainer/README.md) for more information.

## Code of Conduct

This project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.

## License

Copyright (c) Microsoft Corporation. All rights reserved.

Licensed under the [MIT](LICENSE.txt) license.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[freeCodeCamp/freeCodeCamp]]></title>
            <link>https://github.com/freeCodeCamp/freeCodeCamp</link>
            <guid>https://github.com/freeCodeCamp/freeCodeCamp</guid>
            <pubDate>Sat, 24 May 2025 00:04:56 GMT</pubDate>
            <description><![CDATA[freeCodeCamp.org's open-source codebase and curriculum. Learn math, programming, and computer science for free.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/freeCodeCamp/freeCodeCamp">freeCodeCamp/freeCodeCamp</a></h1>
            <p>freeCodeCamp.org's open-source codebase and curriculum. Learn math, programming, and computer science for free.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 418,543</p>
            <p>Forks: 40,190</p>
            <p>Stars today: 127 stars today</p>
            <h2>README</h2><pre>[![freeCodeCamp Social Banner](https://cdn.freecodecamp.org/platform/universal/fcc_banner_new.png)](https://www.freecodecamp.org/)

[![Pull Requests Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat)](https://makeapullrequest.com)
[![first-timers-only Friendly](https://img.shields.io/badge/first--timers--only-friendly-blue.svg)](https://www.firsttimersonly.com/)
[![Open Source Helpers](https://www.codetriage.com/freecodecamp/freecodecamp/badges/users.svg)](https://www.codetriage.com/freecodecamp/freecodecamp)
[![Setup Automated](https://img.shields.io/badge/setup-automated-blue?logo=gitpod)](https://gitpod.io/from-referrer/)
[![Discord](https://img.shields.io/discord/692816967895220344?logo=discord&amp;label=Discord&amp;color=5865F2)](https://discord.gg/PRyKn3Vbay)

## freeCodeCamp.org&#039;s open-source codebase and curriculum

[freeCodeCamp.org](https://www.freecodecamp.org) is a friendly community where you can learn to code for free. It is run by a [donor-supported 501(c)(3) charity](https://www.freecodecamp.org/donate) to help millions of busy adults transition into tech. Our community has already helped more than 40,000 people get their first developer job.

Our full-stack web development and machine learning curriculum is completely free and self-paced. We have thousands of interactive coding challenges to help you expand your skills.

## Table of Contents

- [Certifications](#certifications)
- [The Learning Platform](#the-learning-platform)
- [Reporting Bugs and Issues](#reporting-bugs-and-issues)
- [Reporting Security Issues and Responsible Disclosure](#reporting-security-issues-and-responsible-disclosure)
- [Contributing](#contributing)
- [Platform, Build and Deployment Status](#platform-build-and-deployment-status)
- [License](#license)

### Certifications

freeCodeCamp.org offers several free developer certifications. Each of these certifications involves building 5 required web app projects, along with hundreds of optional coding challenges to help you prepare for those projects. We estimate that each certification will take a beginner programmer around 300 hours to earn.

Each of these 50 projects in the freeCodeCamp.org curriculum has its own agile user stories and automated tests. These help you build up your project incrementally and ensure you&#039;ve fulfilled all the user stories before you submit it.

You can pull in these test suites through [freeCodeCamp&#039;s CDN](https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js). This means you can build these projects on websites like CodePen and Replit - or even on your local computer&#039;s development environment.

Once you&#039;ve earned a certification, you will always have it. You will always be able to link to it from your LinkedIn or resume. And when your prospective employers or freelance clients click that link, they&#039;ll see a verified certification specific to you.

The one exception to this is if we discover violations of our [Academic Honesty Policy](https://www.freecodecamp.org/news/academic-honesty-policy/). When we catch people unambiguously plagiarizing (submitting other people&#039;s code or projects as their own without citation), we do what all rigorous institutions of learning should do - we revoke their certifications and ban those people.

Here are our twelve core certifications:

#### 1. [Responsive Web Design Certification](https://www.freecodecamp.org/learn/2022/responsive-web-design/)

- [Learn HTML by Building a Cat Photo App](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-html-by-building-a-cat-photo-app)
- [Learn Basic CSS by Building a Cafe Menu](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-basic-css-by-building-a-cafe-menu)
- [Learn CSS Colors by Building a Set of Colored Markers](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-colors-by-building-a-set-of-colored-markers)
- [Learn HTML Forms by Building a Registration Form](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-html-forms-by-building-a-registration-form)
- [Learn the CSS Box Model by Building a Rothko Painting](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-the-css-box-model-by-building-a-rothko-painting)
- [Learn CSS Flexbox by Building a Photo Gallery](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-flexbox-by-building-a-photo-gallery)
- [Learn Typography by Building a Nutrition Label](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-typography-by-building-a-nutrition-label)
- [Learn Accessibility by Building a Quiz](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-accessibility-by-building-a-quiz)
- [Learn More About CSS Pseudo Selectors by Building A Balance Sheet](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-more-about-css-pseudo-selectors-by-building-a-balance-sheet)
- [Learn Intermediate CSS by Building a Cat Painting](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-intermediate-css-by-building-a-cat-painting)
- [Learn Responsive Web Design by Building a Piano](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-responsive-web-design-by-building-a-piano)
- [Learn CSS Variables by Building a City Skyline](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-variables-by-building-a-city-skyline)
- [Learn CSS Grid by Building a Magazine](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-grid-by-building-a-magazine)
- [Learn CSS Transforms by Building a Penguin](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-transforms-by-building-a-penguin)
- [Learn CSS Animations by Building a Ferris Wheel](https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-animation-by-building-a-ferris-wheel)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Survey Form](https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-survey-form-project/build-a-survey-form), [Tribute Page](https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-tribute-page-project/build-a-tribute-page), [Technical Documentation Page](https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-technical-documentation-page-project/build-a-technical-documentation-page), [Product Landing Page](https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-product-landing-page-project/build-a-product-landing-page), [Personal Portfolio Webpage](https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-personal-portfolio-webpage-project/build-a-personal-portfolio-webpage)

#### 2. [JavaScript Algorithms and Data Structures Certification](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/)

- [Learn Introductory JavaScript by Building a Pyramid Generator](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-introductory-javascript-by-building-a-pyramid-generator)
- [Learn Basic JavaScript by Building a Role Playing Game](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-javascript-by-building-a-role-playing-game)
- [Learn Form Validation by Building a Calorie Counter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-form-validation-by-building-a-calorie-counter)
- [Learn Basic String and Array Methods by Building a Music Player](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-string-and-array-methods-by-building-a-music-player)
- [Learn the Date Object by Building a Date Formatter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-the-date-object-by-building-a-date-formatter)
- [Learn Modern JavaScript Methods By Building Football Team Cards](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-modern-javascript-methods-by-building-football-team-cards)
- [Learn localStorage by Building a Todo App](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-localstorage-by-building-a-todo-app)
- [Learn Recursion by Building a Decimal to Binary Converter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-recursion-by-building-a-decimal-to-binary-converter)
- [Learn Basic Algorithmic Thinking by Building a Number Sorter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-algorithmic-thinking-by-building-a-number-sorter)
- [Learn Advanced Array Methods by Building a Statistics Calculator](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-advanced-array-methods-by-building-a-statistics-calculator)
- [Learn Functional Programming by Building a Spreadsheet](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-functional-programming-by-building-a-spreadsheet)
- [Learn Regular Expressions by Building a Spam Filter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-regular-expressions-by-building-a-spam-filter)
- [Learn Basic OOP by Building a Shopping Cart](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-oop-by-building-a-shopping-cart)
- [Learn Intermediate OOP by Building a Platformer Game](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-intermediate-oop-by-building-a-platformer-game)
- [Learn Intermediate Algorithmic Thinking by Building a Dice Game](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#review-algorithmic-thinking-by-building-a-dice-game)
- [Learn Fetch and Promises By Building an fCC Authors Page](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-fetch-and-promises-by-building-an-fcc-authors-page)
- [Learn Asynchronous Programming by Building an fCC Forum Leaderboard](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-asynchronous-programming-by-building-an-fcc-forum-leaderboard)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Palindrome Checker](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-palindrome-checker-project/build-a-palindrome-checker), [Roman Numeral Converter](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-roman-numeral-converter-project/build-a-roman-numeral-converter), [Telephone Number Validator](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-telephone-number-validator-project/build-a-telephone-number-validator), [Cash Register](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-cash-register-project/build-a-cash-register), [RPG Creature Search App](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-an-rpg-creature-search-app-project/build-an-rpg-creature-search-app)

#### 3. [Front End Libraries Certification](https://www.freecodecamp.org/learn/front-end-development-libraries/)

- [Bootstrap](https://www.freecodecamp.org/learn/front-end-development-libraries/#bootstrap)
- [jQuery](https://www.freecodecamp.org/learn/front-end-development-libraries/#jquery)
- [Sass](https://www.freecodecamp.org/learn/front-end-development-libraries/#sass)
- [React](https://www.freecodecamp.org/learn/front-end-development-libraries/#react)
- [Redux](https://www.freecodecamp.org/learn/front-end-development-libraries/#redux)
- [React and Redux](https://www.freecodecamp.org/learn/front-end-development-libraries/#react-and-redux)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Random Quote Machine](https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-random-quote-machine), [Markdown Previewer](https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-markdown-previewer), [Drum Machine](https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-drum-machine), [JavaScript Calculator](https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-javascript-calculator), [25 + 5 Clock](https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-25--5-clock)

#### 4. [Data Visualization Certification](https://www.freecodecamp.org/learn/data-visualization/)

- [Data Visualization with D3](https://www.freecodecamp.org/learn/data-visualization/#data-visualization-with-d3)
- [JSON APIs and Ajax](https://www.freecodecamp.org/learn/data-visualization/#json-apis-and-ajax)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Bar Chart](https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-bar-chart), [Scatterplot Graph](https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-scatterplot-graph), [Heat Map](https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-heat-map), [Choropleth Map](https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-choropleth-map), [Treemap Diagram](https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-treemap-diagram)

#### 5. [Relational Database](https://www.freecodecamp.org/learn/relational-database/)

- [Learn Bash by Building a Boilerplate](https://www.freecodecamp.org/learn/relational-database/#learn-bash-by-building-a-boilerplate)
- [Learn Relational Databases by Building a Database of Video Game Characters](https://www.freecodecamp.org/learn/relational-database/#learn-relational-databases-by-building-a-database-of-video-game-characters)
- [Learn Bash Scripting by Building Five Programs](https://www.freecodecamp.org/learn/relational-database/#learn-bash-scripting-by-building-five-programs)
- [Learn SQL by Building a Student Database: Part 1](https://www.freecodecamp.org/learn/relational-database/#learn-sql-by-building-a-student-database-part-1)
- [Learn SQL by Building a Student Database: Part 2](https://www.freecodecamp.org/learn/relational-database/#learn-sql-by-building-a-student-database-part-2)
- [Learn Advanced Bash by Building a Kitty Ipsum Translator](https://www.freecodecamp.org/learn/relational-database/#learn-advanced-bash-by-building-a-kitty-ipsum-translator)
- [Learn Bash and SQL by Building a Bike Rental Shop](https://www.freecodecamp.org/learn/relational-database/#learn-bash-and-sql-by-building-a-bike-rental-shop)
- [Learn Nano by Building a Castle](https://www.freecodecamp.org/learn/relational-database/#learn-nano-by-building-a-castle)
- [Learn Git by Building an SQL Reference Object](https://www.freecodecamp.org/learn/relational-database/#learn-git-by-building-an-sql-reference-object)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Salon Appointment Scheduler](https://www.freecodecamp.org/learn/relational-database/#build-a-salon-appointment-scheduler-project), [Celestial Bodies Database](https://www.freecodecamp.org/learn/relational-database/#build-a-celestial-bodies-database-project), [Periodic Table Database](https://www.freecodecamp.org/learn/relational-database/#build-a-periodic-table-database-project), [Number Guessing Game](https://www.freecodecamp.org/learn/relational-database/#build-a-number-guessing-game-project), [World Cup Database](https://www.freecodecamp.org/learn/relational-database/#build-a-world-cup-database-project)

#### 6. [Back End Development and APIs Certification](https://www.freecodecamp.org/learn/back-end-development-and-apis/)

- [Managing Packages with Npm](https://www.freecodecamp.org/learn/back-end-development-and-apis/#managing-packages-with-npm)
- [Basic Node and Express](https://www.freecodecamp.org/learn/back-end-development-and-apis/#basic-node-and-express)
- [MongoDB and Mongoose](https://www.freecodecamp.org/learn/back-end-development-and-apis/#mongodb-and-mongoose)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Timestamp Microservice](https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/timestamp-microservice), [Request Header Parser](https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/request-header-parser-microservice), [URL Shortener](https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/url-shortener-microservice), [Exercise Tracker](https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/exercise-tracker), [File Metadata Microservice](https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/file-metadata-microservice)

#### 7. [Quality Assurance Certification](https://www.freecodecamp.org/learn/quality-assurance/)

- [Quality Assurance and Testing with Chai](https://www.freecodecamp.org/learn/quality-assurance/#quality-assurance-and-testing-with-chai)
- [Advanced Node and Express](https://www.freecodecamp.org/learn/quality-assurance/#advanced-node-and-express)
  &lt;br /&gt;
  &lt;br /&gt;
  **Projects**: [Metric-Imperial Converter](https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/metric-imperial-converter), [Issue Tracker](https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/issue-tracker), [Personal Library](https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/personal-library), [Sudoku Solver](https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/sudoku-solver), [American British Translator](https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/american-british-translator)

#### 8. [Scientific Computing with Python Certification](https://www.freecodecamp.org/learn/scientific-computing-with-python/)

- [Learn String Manipulation by Building a Cipher](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-string-manipulation-by-building-a-cipher)
- [Learn How to Work with Numbers and Strings by Implementing the Luhn Algorithm](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm)
- [Learn Lambda Functions by Building an Expense Tracker](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-lambda-functions-by-building-an-expense-tracker)
- [Learn List Comprehension by Building a Case Converter Program](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-list-comprehension-by-building-a-case-converter-program)
- [Learn the Bisection Method by Finding the Square Root of a Number](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-the-bisection-method-by-finding-the-square-root-of-a-number)
- [Learn Regular Expressions by Building a Password Generator](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-regular-expressions-by-building-a-password-generator)
- [Learn Algorithm Design by Building a Shortest Path Algorithm](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-algorithm-design-by-building-a-shortest-path-algorithm)
- [Learn Recursion by Solving the Tower of Hanoi Puzzle](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-recursion-by-solving-the-tower-of-hanoi-puzzle)
- [Learn Data Structures by Building the Merge Sort Algorithm](https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-data-structures-by-building-the-merge-sort-algorithm)
- [Learn Classes and Objects by Building a Sudoku Solver](https://www.freecodecamp.org/learn/scie

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[yangshun/tech-interview-handbook]]></title>
            <link>https://github.com/yangshun/tech-interview-handbook</link>
            <guid>https://github.com/yangshun/tech-interview-handbook</guid>
            <pubDate>Sat, 24 May 2025 00:04:55 GMT</pubDate>
            <description><![CDATA[💯 Curated coding interview preparation materials for busy software engineers]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/yangshun/tech-interview-handbook">yangshun/tech-interview-handbook</a></h1>
            <p>💯 Curated coding interview preparation materials for busy software engineers</p>
            <p>Language: TypeScript</p>
            <p>Stars: 126,442</p>
            <p>Forks: 15,425</p>
            <p>Stars today: 31 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;Tech Interview Handbook&lt;/h1&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.techinterviewhandbook.org/&quot;&gt;
    &lt;img src=&quot;assets/logo.svg&quot; alt=&quot;Tech Interview Handbook&quot; width=&quot;400&quot; /&gt;
  &lt;/a&gt;
  &lt;br /&gt;
  &lt;h3&gt;
    &lt;a href=&quot;https://www.techinterviewhandbook.org/&quot;&gt;Read on the website&lt;/a&gt;
  &lt;/h3&gt;
  &lt;p&gt;
    Join/follow us on &lt;a href=&quot;https://discord.gg/usMqNaPczq&quot; target=&quot;_blank&quot;&gt;Discord&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/techinterviewhb&quot; target=&quot;_blank&quot;&gt;𝕏 (Twitter)&lt;/a&gt; | &lt;a href=&quot;https://t.me/techinterviewhandbook&quot; target=&quot;_blank&quot;&gt;Telegram&lt;/a&gt; |  &lt;a href=&quot;https://facebook.com/techinterviewhandbook&quot; target=&quot;_blank&quot;&gt;Facebook&lt;/a&gt;
  &lt;/p&gt;
&lt;/div&gt;

---

&lt;a href=&quot;https://www.techinterviewhandbook.org/software-engineering-interview-guide/&quot; target=&quot;_blank&quot;&gt;
  &lt;img src=&quot;assets/start-reading-button.jpg&quot; alt=&quot;Start Reading Tech Interview Handbook&quot; /&gt;
&lt;/a&gt;

## What is this?

Not everyone has the time to do a few hundred LeetCode questions. Here are _free and curated_ technical interview preparation materials for busy engineers, brought to you by me, the author of [Blind 75](https://www.teamblind.com/post/New-Year-Gift---Curated-List-of-Top-75-LeetCode-Questions-to-Save-Your-Time-OaM1orEU). Over 1,000,000 people have benefitted from this handbook!

Besides the usual algorithm questions, other **awesome** stuff includes:

- [Best practice questions](https://www.techinterviewhandbook.org/coding-interview-study-plan/) for coding interviews
- [Grind 75](https://www.techinterviewhandbook.org/grind75) - the next evolution of Blind 75, bigger and better
- [How to prepare](https://www.techinterviewhandbook.org/coding-interview-prep/) for coding interviews
- [Coding interview best practices](https://www.techinterviewhandbook.org/coding-interview-cheatsheet/) - Straight-to-the-point Do&#039;s and Don&#039;ts
- [Algorithm cheatsheets and tips](https://www.techinterviewhandbook.org/algorithms/study-cheatsheet/) categorized by topic
- [Step-by-step Software Engineer resume guide](https://www.techinterviewhandbook.org/resume/) to prepare a FAANG-ready resume
- [Behavioral questions](https://www.techinterviewhandbook.org/behavioral-interview-questions/) asked by the top tech companies
- [Front end interview preparation](https://www.frontendinterviewhandbook.com)

Help from you in contributing content would be very much appreciated!

## Why would you read this?

This repository has **practical** content that covers all phases of a technical interview, from applying for a job to passing the interviews to offer negotiation. Technically competent candidates might still find the non-technical content helpful.

The information in this repository is condensed. Ultimately, the key to succeeding in technical interviews is consistent practice and I don&#039;t want to bore you with too many words. I tell you the minimum you need to know on how to go about navigating the interview process, you go and practice and land your dream job.

## Who is this for?

Anybody who wants to land a job at a tech company but is new to technical interviews, seasoned engineers who have not been on the other side of the interviewing table in a while and want to get back into the game, or anyone who wants to be better at technical interviewing.

---

&lt;div align=&quot;center&quot;&gt;
  &lt;h3&gt;💡 Stop grinding mindlessly! Study coding question patterns efficiently with
    &lt;a href=&quot;https://designgurus.org/link/kJSIoU?url=https%3A%2F%2Fdesigngurus.org%2Fcourse%3Fcourseid%3Dgrokking-the-coding-interview&quot;&gt;Grokking the Coding Interview&lt;/a&gt; by Design Gurus 💡
  &lt;/h3&gt;
&lt;/div&gt;

---

## How is this repository different?

There are many awesome books like &quot;Cracking the Coding Interview&quot; and interview-related repositories out there on GitHub, what makes this repository different? The difference is that many existing interview repositories contain mainly links to external resources whereas this repository contains top-quality curated content directly for your consumption.

Also, existing resources focus mainly on algorithm questions and lack coverage for more domain-specific and non-technical questions. This handbook aims to cover content beyond the typical algorithmic coding questions. 😎

## Looking for interview courses?

### [AlgoMonster](https://shareasale.com/r.cfm?b=1873647&amp;u=3114753&amp;m=114505&amp;urllink=&amp;afftrack=)

AlgoMonster aims to help you ace the technical interview **in the shortest time possible**. By Google engineers, AlgoMonster uses a data-driven approach to teach you the most useful key question patterns and has contents to help you quickly revise basic data structures and algorithms. Best of all, AlgoMonster is not subscription-based - pay a one-time fee and get **lifetime access**. [**Join today for a 70% discount →**](https://shareasale.com/r.cfm?b=1873647&amp;u=3114753&amp;m=114505&amp;urllink=&amp;afftrack=)

### [Grokking the Coding Interview: Patterns for Coding Questions](https://designgurus.org/link/kJSIoU?url=https%3A%2F%2Fdesigngurus.org%2Fcourse%3Fcourseid%3Dgrokking-the-coding-interview)

This course by Design Gurus expands upon the questions on the recommended practice questions but approaches the practicing from a questions pattern perspective, which is an approach I also agree with for learning and have personally used to get better at coding interviews. The course allows you to practice selected questions in Java, Python, C++, JavaScript and also provides sample solutions in those languages. **Learn and understand patterns, not memorize answers!** [**Get lifetime access today →**](https://designgurus.org/link/kJSIoU?url=https%3A%2F%2Fdesigngurus.org%2Fcourse%3Fcourseid%3Dgrokking-the-coding-interview)

## Looking for Front End content?

Front-end-related content has been moved to a separate website - [Front End Interview Handbook](https://frontendinterviewhandbook.com).

## Looking for System Design content?

We&#039;re still working on System Design content. In the meanwhile, check out [ByteByteGo&#039;s System Design Interview course](https://bytebytego.com?fpr=techinterviewhandbook) or Design Gurus&#039; [Grokking the System Design Interview course](https://designgurus.org/link/kJSIoU?url=https%3A%2F%2Fdesigngurus.org%2Fcourse%3Fcourseid%3Dgrokking-the-system-design-interview), which in our opinion are among the most useful resources for getting started on system design interviews preparation.

## Contents

A [Docusaurus](https://github.com/facebook/docusaurus) website has been created to provide a better reading experience. Check out the website [here](https://www.techinterviewhandbook.org)!

---

&lt;div align=&quot;center&quot;&gt;
  &lt;h3&gt;💡 Stop the grind and study with a plan! Developed by Google engineers, &lt;a href=&quot;https://shareasale.com/r.cfm?b=1873647&amp;u=3114753&amp;m=114505&amp;urllink=&amp;afftrack=&quot;&gt;AlgoMonster&lt;/a&gt; is the fastest way to get a software engineering job. &lt;a href=&quot;https://shareasale.com/r.cfm?b=1873647&amp;u=3114753&amp;m=114505&amp;urllink=&amp;afftrack=&quot;&gt;Join today for a 70% discount!&lt;/a&gt; 💡&lt;/h3&gt;
&lt;/div&gt;

---

## Related

If you are interested in how data structures are implemented, check out [Lago](https://github.com/yangshun/lago), a Data Structures and Algorithms library for JavaScript. It is pretty much still WIP but I intend to make it into a library that can be used in production and also a reference resource for revising Data Structures and Algorithms.

## Contributing

There are no formal contributing guidelines at the moment as things are still in flux and we might find a better approach to structure content as we go along. You are welcome to contribute whatever you think will be helpful to fellow engineers. If you would like to contribute content for different domains, feel free to create an issue or submit a pull request and we can discuss further.

### Contributors

This project exists thanks to all the people who contributed. [[Contribute](CONTRIBUTING.md)]. &lt;a href=&quot;https://github.com/yangshun/tech-interview-handbook/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/contributors.svg?width=890&amp;button=false&quot;&gt;&lt;/a&gt;

### Backers

Thank you to all our backers! 🙏 [[Become a backer](https://opencollective.com/tech-interview-handbook#backer)]

&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#backers&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/backers.svg?width=890&quot;&gt;&lt;/a&gt;

&lt;a href=&quot;https://www.buymeacoffee.com/yangshun&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: auto !important; width: auto !important;&quot;&gt;&lt;/a&gt;

### Sponsors

Support this project by becoming a sponsor. Your logo/profile picture will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/tech-interview-handbook#sponsor)]

&lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/0/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/1/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/2/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/3/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/4/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/5/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/6/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/7/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/8/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/9/avatar.svg&quot;&gt;&lt;/a&gt;

## Disclaimer

I am providing code in the repository to you under an open source license. Because this is my personal repository, the license you receive to my code is from me and not my employer (Meta).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[menloresearch/jan]]></title>
            <link>https://github.com/menloresearch/jan</link>
            <guid>https://github.com/menloresearch/jan</guid>
            <pubDate>Sat, 24 May 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[Jan is an open source alternative to ChatGPT that runs 100% offline on your computer]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/menloresearch/jan">menloresearch/jan</a></h1>
            <p>Jan is an open source alternative to ChatGPT that runs 100% offline on your computer</p>
            <p>Language: TypeScript</p>
            <p>Stars: 29,174</p>
            <p>Forks: 1,727</p>
            <p>Stars today: 58 stars today</p>
            <h2>README</h2><pre># Jan - Local AI Assistant

![Jan banner](./JanBanner.png)

&lt;p align=&quot;center&quot;&gt;
  &lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt;
  &lt;img alt=&quot;GitHub commit activity&quot; src=&quot;https://img.shields.io/github/commit-activity/m/janhq/jan&quot;/&gt;
  &lt;img alt=&quot;Github Last Commit&quot; src=&quot;https://img.shields.io/github/last-commit/janhq/jan&quot;/&gt;
  &lt;img alt=&quot;Github Contributors&quot; src=&quot;https://img.shields.io/github/contributors/janhq/jan&quot;/&gt;
  &lt;img alt=&quot;GitHub closed issues&quot; src=&quot;https://img.shields.io/github/issues-closed/janhq/jan&quot;/&gt;
  &lt;img alt=&quot;Discord&quot; src=&quot;https://img.shields.io/discord/1107178041848909847?label=discord&quot;/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://jan.ai/docs/quickstart&quot;&gt;Getting Started&lt;/a&gt; 
  - &lt;a href=&quot;https://jan.ai/docs&quot;&gt;Docs&lt;/a&gt; 
  - &lt;a href=&quot;https://github.com/janhq/jan/releases&quot;&gt;Changelog&lt;/a&gt; 
  - &lt;a href=&quot;https://github.com/janhq/jan/issues&quot;&gt;Bug reports&lt;/a&gt; 
  - &lt;a href=&quot;https://discord.gg/AsJ8krTT3N&quot;&gt;Discord&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
⚠️ &lt;b&gt; Jan is currently in Development&lt;/b&gt;: Expect breaking changes and bugs!
&lt;/p&gt;


Jan is a ChatGPT-alternative that runs 100% offline on your device. Our goal is to make it easy for a layperson to download and run LLMs and use AI with **full control** and **privacy**.

Jan is powered by [Cortex](https://github.com/janhq/cortex.cpp), our embeddable local AI engine that runs on any hardware.
From PCs to multi-GPU clusters, Jan &amp; Cortex supports universal architectures:

- [x] NVIDIA GPUs (fast)
- [x] Apple M-series (fast)
- [x] Apple Intel
- [x] Linux Debian
- [x] Windows x64

#### Features:
- [Model Library](https://jan.ai/docs/models/manage-models#add-models) with popular LLMs like Llama, Gemma, Mistral, or Qwen 
- Connect to [Remote AI APIs](https://jan.ai/docs/remote-models/openai) like Groq and OpenRouter
- Local API Server with OpenAI-equivalent API
- [Extensions](https://jan.ai/docs/extensions) for customizing Jan

## Download

&lt;table&gt;
  &lt;tr style=&quot;text-align:center&quot;&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;Version Type&lt;/b&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;Windows&lt;/b&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;MacOS Universal&lt;/b&gt;&lt;/td&gt;
    &lt;td colspan=&quot;2&quot; style=&quot;text-align:center&quot;&gt;&lt;b&gt;Linux&lt;/b&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;text-align:center&quot;&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;Stable (Recommended)&lt;/b&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/latest/win-x64&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/windows.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.exe&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/latest/mac-universal&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/mac.png&#039; style=&quot;height:15px; width: 15px&quot; /&gt;
        &lt;b&gt;jan.dmg&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/latest/linux-amd64-deb&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.deb&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/latest/linux-amd64-appimage&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.AppImage&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;text-align:center&quot;&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;Beta (Preview)&lt;/b&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/beta/win-x64&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/windows.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.exe&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/beta/mac-universal&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/mac.png&#039; style=&quot;height:15px; width: 15px&quot; /&gt;
        &lt;b&gt;jan.dmg&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/beta/linux-amd64-deb&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.deb&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/beta/linux-amd64-appimage&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.AppImage&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;text-align:center&quot;&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;Nightly Build (Experimental)&lt;/b&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/nightly/win-x64&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/windows.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.exe&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/nightly/mac-universal&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/mac.png&#039; style=&quot;height:15px; width: 15px&quot; /&gt;
        &lt;b&gt;jan.dmg&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/nightly/linux-amd64-deb&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.deb&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/nightly/linux-amd64-appimage&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.AppImage&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

Download the latest version of Jan at https://jan.ai/ or visit the [GitHub Releases](https://github.com/janhq/jan/releases) to download any previous release.

## Demo

https://github.com/user-attachments/assets/c3592fa2-c504-4d9d-a885-7e00122a50f3

*Real-time Video: Jan v0.5.7 on a Mac M2, 16GB Sonoma 14.2*

## Quicklinks

### Jan

- [Jan Website](https://jan.ai/)
- [Jan GitHub](https://github.com/janhq/jan)
- [Documentation](https://jan.ai/docs)
- [Jan Changelog](https://jan.ai/changelog)
- [Jan Blog](https://jan.ai/blog)

### Cortex.cpp
Jan is powered by **Cortex.cpp**. It is a C++ command-line interface (CLI) designed as an alternative to [Ollama](https://ollama.com/). By default, it runs on the llama.cpp engine but also supports other engines, including ONNX and TensorRT-LLM, making it a multi-engine platform.


- [Cortex Website](https://cortex.so/)
- [Cortex GitHub](https://github.com/janhq/cortex.cpp)
- [Documentation](https://cortex.so/docs/)
- [Models Library](https://cortex.so/models)
- API Reference: *Under development*
  
## Requirements for running Jan

- **MacOS**: 13 or higher
- **Windows**:
  - Windows 10 or higher
  - To enable GPU support:
    - Nvidia GPU with CUDA Toolkit 11.7 or higher
    - Nvidia driver 470.63.01 or higher
- **Linux**:
  - glibc 2.27 or higher (check with `ldd --version`)
  - gcc 11, g++ 11, cpp 11 or higher, refer to this [link](https://jan.ai/guides/troubleshooting/gpu-not-used/#specific-requirements-for-linux) for more information
  - To enable GPU support:
    - Nvidia GPU with CUDA Toolkit 11.7 or higher
    - Nvidia driver 470.63.01 or higher

## Troubleshooting

As Jan is in development mode, you might get stuck on a some common issues:
- [Troubleshooting a broken build](https://jan.ai/docs/troubleshooting#broken-build)
- [Troubleshooting NVIDIA GPU](https://jan.ai/docs/troubleshooting#troubleshooting-nvidia-gpu)
- [Troubleshooting Something&#039;s Amiss](https://jan.ai/docs/troubleshooting#somethings-amiss)


If you can&#039;t find what you need in our troubleshooting guide, feel free reach out to us for extra help:
1. Copy your [error logs &amp; device specifications](https://jan.ai/docs/troubleshooting#how-to-get-error-logs).
2. Go to our [Discord](https://discord.com/invite/FTk2MvZwJH) &amp; send it to **#🆘|get-help** channel for further support.

*Check the logs to ensure the information is what you intend to send. Note that we retain your logs for only 24 hours, so report any issues promptly.*
  

## Contributing

Contributions are welcome! Please read the [CONTRIBUTING.md](CONTRIBUTING.md) file

### Pre-requisites

- node &gt;= 20.0.0
- yarn &gt;= 1.22.0
- make &gt;= 3.81

### Instructions

1. **Clone the repository and prepare:**

   ```bash
   git clone https://github.com/janhq/jan
   cd jan
   git checkout -b DESIRED_BRANCH
   ```

2. **Run development and use Jan Desktop**

   ```bash
   make dev
   ```

This will start the development server and open the desktop app.



### For production build

```bash
# Do steps 1 and 2 in the previous section
# Build the app
make build
```

This will build the app MacOS m1/m2 for production (with code signing already done) and put the result in `dist` folder.

## Acknowledgements

Jan builds on top of other open-source projects:

- [llama.cpp](https://github.com/ggerganov/llama.cpp)
- [LangChain](https://github.com/langchain-ai)
- [TensorRT](https://github.com/NVIDIA/TensorRT)
- [TensorRT-LLM](https://github.com/NVIDIA/TensorRT-LLM)

## Contact

- Bugs &amp; requests: file a GitHub ticket
- For discussion: join our Discord [here](https://discord.gg/FTk2MvZwJH)
- For business inquiries: email hello@jan.ai 
- For jobs: please email hr@jan.ai

## Trust &amp; Safety

Beware of scams!

- We will never request your personal information.
- Our product is completely free; no paid version exists.
- We do not have a token or ICO.
- We are a [bootstrapped company](https://en.wikipedia.org/wiki/Bootstrapping), and don&#039;t have any external investors (*yet*). We&#039;re open to exploring opportunities with strategic partners want to tackle [our mission](https://jan.ai/about#mission) together.

## License

Jan is free and open source, under the **AGPLv3** license.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[simstudioai/sim]]></title>
            <link>https://github.com/simstudioai/sim</link>
            <guid>https://github.com/simstudioai/sim</guid>
            <pubDate>Sat, 24 May 2025 00:04:53 GMT</pubDate>
            <description><![CDATA[Sim Studio is an open-source AI agent workflow builder. Sim Studio's interface is a lightweight, intuitive way to quickly build and deploy LLMs that connect with your favorite tools.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/simstudioai/sim">simstudioai/sim</a></h1>
            <p>Sim Studio is an open-source AI agent workflow builder. Sim Studio's interface is a lightweight, intuitive way to quickly build and deploy LLMs that connect with your favorite tools.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,675</p>
            <p>Forks: 566</p>
            <p>Stars today: 129 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;apps/sim/public/static/sim.png&quot; alt=&quot;Sim Studio Logo&quot; width=&quot;500&quot;/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-Apache%202.0-blue.svg&quot; alt=&quot;License: Apache-2.0&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://discord.gg/Hr4UWYEcTT&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Discord-Join%20Server-7289DA?logo=discord&amp;logoColor=white&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://x.com/simstudioai&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/simstudioai?style=social&quot; alt=&quot;Twitter&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/simstudioai/sim/pulls&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg&quot; alt=&quot;PRs welcome&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://docs.simstudio.ai&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Docs-visit%20documentation-blue.svg&quot; alt=&quot;Documentation&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;strong&gt;Sim Studio&lt;/strong&gt; is a lightweight, user-friendly platform for building AI agent workflows.
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;apps/sim/public/static/demo.gif&quot; alt=&quot;Sim Studio Demo&quot; width=&quot;800&quot;/&gt;
&lt;/p&gt;

## Getting Started

1. Use our [cloud-hosted version](https://simstudio.ai)
2. Self-host using one of the methods below

## Self-Hosting Options

### Option 1: NPM Package (Simplest)

The easiest way to run Sim Studio locally is using our [NPM package](https://www.npmjs.com/package/simstudio?activeTab=readme):

```bash
npx simstudio
```

After running these commands, open [http://localhost:3000/](http://localhost:3000/) in your browser.

#### Options

- `-p, --port &lt;port&gt;`: Specify the port to run Sim Studio on (default: 3000)
- `--no-pull`: Skip pulling the latest Docker images

#### Requirements

- Docker must be installed and running on your machine

### Option 2: Docker Compose

```bash
# Clone the repository
git clone https://github.com/simstudioai/sim.git

# Navigate to the project directory
cd sim

# Start Sim Studio
docker compose -f docker-compose.prod.yml up -d
```

Access the application at [http://localhost:3000/](http://localhost:3000/)

#### Using Local Models

To use local models with Sim Studio:

1. Pull models using our helper script:

```bash
./apps/sim/scripts/ollama_docker.sh pull &lt;model_name&gt;
```

2. Start Sim Studio with local model support:

```bash
# With NVIDIA GPU support
docker compose --profile local-gpu -f docker-compose.ollama.yml up -d

# Without GPU (CPU only)
docker compose --profile local-cpu -f docker-compose.ollama.yml up -d

# If hosting on a server, update the environment variables in the docker-compose.prod.yml file to include the server&#039;s public IP then start again (OLLAMA_URL to i.e. http://1.1.1.1:11434)
docker compose -f docker-compose.prod.yml up -d
```

### Option 3: Dev Containers

1. Open VS Code with the [Remote - Containers extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers)
2. Open the project and click &quot;Reopen in Container&quot; when prompted
3. Run `bun run dev` in the terminal or use the `sim-start` alias

### Option 4: Manual Setup

1. Clone and install dependencies:

```bash
git clone https://github.com/simstudioai/sim.git
cd sim
bun install
```

2. Set up environment:

```bash
cd apps/sim
cp .env.example .env  # Configure with required variables (DATABASE_URL, BETTER_AUTH_SECRET, BETTER_AUTH_URL)
```

3. Set up the database:

```bash
bunx drizzle-kit push
```

4. Start the development server:

```bash
bun run dev
```

## Tech Stack

- **Framework**: [Next.js](https://nextjs.org/) (App Router)
- **Runtime**: [Bun](https://bun.sh/)
- **Database**: PostgreSQL with [Drizzle ORM](https://orm.drizzle.team)
- **Authentication**: [Better Auth](https://better-auth.com)
- **UI**: [Shadcn](https://ui.shadcn.com/), [Tailwind CSS](https://tailwindcss.com)
- **State Management**: [Zustand](https://zustand-demo.pmnd.rs/)
- **Flow Editor**: [ReactFlow](https://reactflow.dev/)
- **Docs**: [Fumadocs](https://fumadocs.vercel.app/)
- **Monorepo**: [Turborepo](https://turborepo.org/)

## Contributing

We welcome contributions! Please see our [Contributing Guide](.github/CONTRIBUTING.md) for details.

## License

This project is licensed under the Apache License 2.0 - see the [LICENSE](LICENSE) file for details.

&lt;p align=&quot;center&quot;&gt;Made with ❤️ by the Sim Studio Team&lt;/p&gt;</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[tinymce/tinymce]]></title>
            <link>https://github.com/tinymce/tinymce</link>
            <guid>https://github.com/tinymce/tinymce</guid>
            <pubDate>Sat, 24 May 2025 00:04:52 GMT</pubDate>
            <description><![CDATA[The world's #1 JavaScript library for rich text editing. Available for React, Vue and Angular]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/tinymce/tinymce">tinymce/tinymce</a></h1>
            <p>The world's #1 JavaScript library for rich text editing. Available for React, Vue and Angular</p>
            <p>Language: TypeScript</p>
            <p>Stars: 15,567</p>
            <p>Forks: 2,291</p>
            <p>Stars today: 5 stars today</p>
            <h2>README</h2><pre># TinyMCE

The world&#039;s #1 open source rich text editor.

**Using an old version of TinyMCE?** We recommend you to upgrade to TinyMCE 7 to continue receiving security updates, or consider [TinyMCE 5 LTS](https://www.tiny.cloud/long-term-support/) if you need more time to upgrade.

Used and trusted by millions of developers, TinyMCE is the world’s most customizable, scalable, and flexible rich text editor. We’ve helped launch the likes of Atlassian, Medium, Evernote (and lots more that we can’t tell you), by empowering them to create exceptional content and experiences for their users.

With more than 350M+ downloads every year, we’re also one of the most trusted enterprise-grade open source HTML editors on the internet. There’s currently more than 100M+ products worldwide, powered by Tiny. As a high powered WYSIWYG editor, TinyMCE is built to scale, designed to innovate, and thrives on delivering results to difficult edge-cases.

You can access a [full featured demo of TinyMCE](https://www.tiny.cloud/docs/tinymce/7/premium-full-featured/) in the docs on the TinyMCE website.

&lt;p align=&quot;center&quot;&gt;
  &lt;img alt=&quot;Screenshot of the TinyMCE Editor&quot; src=&quot;https://www.tiny.cloud/storage/github-readme-images/tinymce-editor-6x.png&quot;\&gt;
&lt;/p&gt;

## Get started with TinyMCE

Getting started with the TinyMCE rich text editor is easy, and for simple configurations can be done in less than 5 minutes.

[TinyMCE Cloud Deployment Quick Start Guide](https://www.tiny.cloud/docs/tinymce/7/cloud-quick-start/)

[TinyMCE Self-hosted Deployment Guide](https://www.tiny.cloud/docs/tinymce/7/npm-projects/)

TinyMCE provides a range of configuration options that allow you to integrate it into your application. Start customizing with a [basic setup](https://www.tiny.cloud/docs/tinymce/7/basic-setup/).

Configure it for one of three modes of editing:

- [TinyMCE classic editing mode](https://www.tiny.cloud/docs/tinymce/7/use-tinymce-classic/).
- [TinyMCE inline editing mode](https://www.tiny.cloud/docs/tinymce/7/use-tinymce-inline/).
- [TinyMCE distraction-free editing mode](https://www.tiny.cloud/docs/tinymce/7/use-tinymce-distraction-free/).

## Features

### Integration

TinyMCE is easily integrated into your projects with the help of components such as:

- [tinymce-react](https://github.com/tinymce/tinymce-react)
- [tinymce-vue](https://github.com/tinymce/tinymce-vue)
- [tinymce-angular](https://github.com/tinymce/tinymce-angular)

With over 29 integrations, and 400+ APIs, see the TinyMCE docs for a full list of editor [integrations](https://www.tiny.cloud/docs/tinymce/7/integrations/).

### Customization

It is easy to [configure the UI](https://www.tiny.cloud/docs/tinymce/7/customize-ui/) of your rich text editor to match the design of your site, product or application. Due to its flexibility, you can [configure the editor](https://www.tiny.cloud/docs/tinymce/7/basic-setup/) with as much or as little functionality as you like, depending on your requirements.

With [50+ powerful plugins available](https://www.tiny.cloud/tinymce/features/), and content editable as the basis of TinyMCE, adding additional functionality is as simple as including a single line of code.

Realizing the full power of most plugins requires only a few lines more.

### Extensibility

Sometimes your editor requirements can be quite unique, and you need the freedom and flexibility to innovate. Thanks to TinyMCE being open source, you can view the source code and develop your own extensions for custom functionality to meet your own requirements.

The TinyMCE [API](https://www.tiny.cloud/docs/tinymce/7/apis/tinymce.root/) is exposed to make it easier for you to write custom functionality that fits within the existing framework of TinyMCE [UI components](https://www.tiny.cloud/docs/tinymce/7/custom-ui-components/).

### Extended Features and Support

For the professional software teams that require more in-depth efficiency, compliance or collaborative features built to enterprise-grade standards, please [get in touch with our team](https://www.tiny.cloud/contact/).

Tiny also offers dedicated SLAs and support for professional development teams.

## Compiling and contributing

In 2019 the decision was made to transition our codebase to a monorepo. For information on compiling and contributing, see: [contribution guidelines](https://github.com/tinymce/tinymce/blob/master/CONTRIBUTING.md).

As an open source product, we encourage and support the active development of our software.

## Want more information?

Visit the [TinyMCE website](https://tiny.cloud/) and check out the [TinyMCE documentation](https://www.tiny.cloud/docs/).

## License

Licensed under the terms of GNU General Public License Version 2 or later. For full details about the license, please check the LICENSE.md file.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[mattermost/mattermost]]></title>
            <link>https://github.com/mattermost/mattermost</link>
            <guid>https://github.com/mattermost/mattermost</guid>
            <pubDate>Sat, 24 May 2025 00:04:51 GMT</pubDate>
            <description><![CDATA[Mattermost is an open source platform for secure collaboration across the entire software development lifecycle..]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/mattermost/mattermost">mattermost/mattermost</a></h1>
            <p>Mattermost is an open source platform for secure collaboration across the entire software development lifecycle..</p>
            <p>Language: TypeScript</p>
            <p>Stars: 32,606</p>
            <p>Forks: 7,771</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre># [![Mattermost logo](https://user-images.githubusercontent.com/7205829/137170381-fe86eef0-bccc-4fdd-8e92-b258884ebdd7.png)](https://mattermost.com)

[Mattermost](https://mattermost.com) is an open source platform for secure collaboration across the entire software development lifecycle. This repo is the primary source for core development on the Mattermost platform; it&#039;s written in Go and React and runs as a single Linux binary with MySQL or PostgreSQL. A new compiled version is released under an MIT license every month on the 16th.

[Deploy Mattermost on-premises](https://mattermost.com/deploy/?utm_source=github-mattermost-server-readme), or [try it for free in the cloud](https://mattermost.com/sign-up/?utm_source=github-mattermost-server-readme).

&lt;img width=&quot;1006&quot; alt=&quot;mattermost user interface&quot; src=&quot;https://user-images.githubusercontent.com/7205829/136107976-7a894c9e-290a-490d-8501-e5fdbfc3785a.png&quot;&gt;

Learn more about the following use cases with Mattermost:

- [DevSecOps](https://mattermost.com/solutions/use-cases/devops/?utm_source=github-mattermost-server-readme)
- [Incident Resolution](https://mattermost.com/solutions/use-cases/incident-resolution/?utm_source=github-mattermost-server-readme)
- [IT Service Desk](https://mattermost.com/solutions/use-cases/it-service-desk/?utm_source=github-mattermost-server-readme)

Other useful resources:

- [Download and Install Mattermost](https://docs.mattermost.com/guides/deployment.html) - Install, setup, and configure your own Mattermost instance.
- [Product documentation](https://docs.mattermost.com/) - Learn how to run a Mattermost instance and take advantage of all the features.
- [Developer documentation](https://developers.mattermost.com/) - Contribute code to Mattermost or build an integration via APIs, Webhooks, slash commands, Apps, and plugins.

Table of contents
=================

- [Install Mattermost](#install-mattermost)
- [Native mobile and desktop apps](#native-mobile-and-desktop-apps)
- [Get security bulletins](#get-security-bulletins)
- [Get involved](#get-involved)
- [Learn more](#learn-more)
- [License](#license)
- [Get the latest news](#get-the-latest-news)
- [Contributing](#contributing)

## Install Mattermost

- [Download and Install Mattermost Self-Hosted](https://docs.mattermost.com/guides/deployment.html) - Deploy a Mattermost Self-hosted instance in minutes via Docker, Ubuntu, or tar.
- [Get started in the cloud](https://mattermost.com/sign-up/?utm_source=github-mattermost-server-readme) to try Mattermost today.
- [Developer machine setup](https://developers.mattermost.com/contribute/server/developer-setup) - Follow this guide if you want to write code for Mattermost.


Other install guides:

- [Deploy Mattermost on Docker](https://docs.mattermost.com/install/install-docker.html)
- [Mattermost Omnibus](https://docs.mattermost.com/install/installing-mattermost-omnibus.html)
- [Install Mattermost from Tar](https://docs.mattermost.com/install/install-tar.html)
- [Ubuntu 20.04 LTS](https://docs.mattermost.com/install/installing-ubuntu-2004-LTS.html)
- [Kubernetes](https://docs.mattermost.com/install/install-kubernetes.html)
- [Helm](https://docs.mattermost.com/install/install-kubernetes.html#installing-the-operators-via-helm)
- [Debian Buster](https://docs.mattermost.com/install/install-debian.html)
- [RHEL 8](https://docs.mattermost.com/install/install-rhel-8.html)
- [More server install guides](https://docs.mattermost.com/guides/deployment.html)

## Native mobile and desktop apps

In addition to the web interface, you can also download Mattermost clients for [Android](https://mattermost.com/pl/android-app/), [iOS](https://mattermost.com/pl/ios-app/), [Windows PC](https://docs.mattermost.com/install/desktop-app-install.html#windows-10-windows-8-1), [macOS](https://docs.mattermost.com/install/desktop-app-install.html#macos-10-9), and [Linux](https://docs.mattermost.com/install/desktop-app-install.html#linux).

[&lt;img src=&quot;https://user-images.githubusercontent.com/30978331/272826427-6200c98f-7319-42c3-86d4-0b33ae99e01a.png&quot; alt=&quot;Get Mattermost on Google Play&quot; height=&quot;50px&quot;/&gt;](https://mattermost.com/pl/android-app/)  [&lt;img src=&quot;https://developer.apple.com/assets/elements/badges/download-on-the-app-store.svg&quot; alt=&quot;Get Mattermost on the App Store&quot; height=&quot;50px&quot;/&gt;](https://itunes.apple.com/us/app/mattermost/id1257222717?mt=8)  [![Get Mattermost on Windows PC](https://user-images.githubusercontent.com/33878967/33095357-39cab8d2-ceb8-11e7-89a6-67dccc571ca3.png)](https://docs.mattermost.com/install/desktop.html#windows-10-windows-8-1-windows-7)  [![Get Mattermost on Mac OSX](https://user-images.githubusercontent.com/33878967/33095355-39a36f2a-ceb8-11e7-9b33-73d4f6d5d6c1.png)](https://docs.mattermost.com/install/desktop.html#macos-10-9)  [![Get Mattermost on Linux](https://user-images.githubusercontent.com/33878967/33095354-3990e256-ceb8-11e7-965d-b00a16e578de.png)](https://docs.mattermost.com/install/desktop.html#linux)

## Get security bulletins

Receive notifications of critical security updates. The sophistication of online attackers is perpetually increasing. If you&#039;re deploying Mattermost it&#039;s highly recommended you subscribe to the Mattermost Security Bulletin mailing list for updates on critical security releases.

[Subscribe here](https://mattermost.com/security-updates/#sign-up)

## Get involved

- [Contribute to Mattermost](https://handbook.mattermost.com/contributors/contributors/ways-to-contribute)
- [Find &quot;Help Wanted&quot; projects](https://github.com/mattermost/mattermost-server/issues?page=1&amp;q=is%3Aissue+is%3Aopen+%22Help+Wanted%22&amp;utf8=%E2%9C%93)
- [Join Developer Discussion on a Mattermost server for contributors](https://community.mattermost.com/signup_user_complete/?id=f1924a8db44ff3bb41c96424cdc20676)
- [Get Help With Mattermost](https://docs.mattermost.com/guides/get-help.html)

## Learn more

- [API options - webhooks, slash commands, drivers, and web service](https://api.mattermost.com/)
- [See who&#039;s using Mattermost](https://mattermost.com/customers/)
- [Browse over 700 Mattermost integrations](https://mattermost.com/marketplace/)

## License

See the [LICENSE file](LICENSE.txt) for license rights and limitations.

## Get the latest news

- **X** - Follow [Mattermost on X, formerly Twitter](https://twitter.com/mattermost).
- **Blog** - Get the latest updates from the [Mattermost blog](https://mattermost.com/blog/).
- **Facebook** - Follow [Mattermost on Facebook](https://www.facebook.com/MattermostHQ).
- **LinkedIn** - Follow [Mattermost on LinkedIn](https://www.linkedin.com/company/mattermost/).
- **Email** - Subscribe to our [newsletter](https://mattermost.us11.list-manage.com/subscribe?u=6cdba22349ae374e188e7ab8e&amp;id=2add1c8034) (1 or 2 per month).
- **Mattermost** - Join the ~contributors channel on [the Mattermost Community Server](https://community.mattermost.com).
- **IRC** - Join the #matterbridge channel on [Freenode](https://freenode.net/) (thanks to [matterircd](https://github.com/42wim/matterircd)).
- **YouTube** -  Subscribe to [Mattermost](https://www.youtube.com/@MattermostHQ).

## Contributing

[![Small Image](https://img.shields.io/badge/Contribute%20with-Gitpod-908a85?logo=gitpod)](https://gitpod.io/#https://github.com/mattermost/mattermost)

Please see [CONTRIBUTING.md](./CONTRIBUTING.md).
[Join the Mattermost Contributors server](https://community.mattermost.com/signup_user_complete/?id=codoy5s743rq5mk18i7u5ksz7e) to join community discussions about contributions, development, and more.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[appwrite/appwrite]]></title>
            <link>https://github.com/appwrite/appwrite</link>
            <guid>https://github.com/appwrite/appwrite</guid>
            <pubDate>Sat, 24 May 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[The open-source Vercel alternative]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/appwrite/appwrite">appwrite/appwrite</a></h1>
            <p>The open-source Vercel alternative</p>
            <p>Language: TypeScript</p>
            <p>Stars: 50,024</p>
            <p>Forks: 4,387</p>
            <p>Stars today: 270 stars today</p>
            <h2>README</h2><pre>&gt; [Get started with Appwrite](https://apwr.dev/appcloud)
&gt; [Join the Init kick off event 19th of May: The future of Appwrite with Founder &amp; CEO Eldad Fux](https://www.youtube.com/watch?v=1g8tuogsp7A)

&lt;br /&gt;
&lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://appwrite.io&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;./public/images/banner.png&quot; alt=&quot;Appwrite banner, with logo and text saying &quot;Build Like a Team of Hundreds&quot;&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
    &lt;b&gt;Appwrite is a backend platform for developing Web, Mobile, and Flutter applications. Built with the open source community and optimized for developer experience in the coding languages you love.&lt;/b&gt;
    &lt;br /&gt;
    &lt;br /&gt;
&lt;/p&gt;

&lt;!-- [![Build Status](https://img.shields.io/travis/com/appwrite/appwrite?style=flat-square)](https://travis-ci.com/appwrite/appwrite) --&gt;

[![We&#039;re Hiring label](https://img.shields.io/static/v1?label=We&#039;re&amp;message=Hiring&amp;color=blue&amp;style=flat-square)](https://appwrite.io/company/careers)
[![Hacktoberfest label](https://img.shields.io/static/v1?label=hacktoberfest&amp;message=ready&amp;color=191120&amp;style=flat-square)](https://hacktoberfest.appwrite.io)
[![Discord label](https://img.shields.io/discord/564160730845151244?label=discord&amp;style=flat-square)](https://appwrite.io/discord?r=Github)
[![Build Status label](https://img.shields.io/github/actions/workflow/status/appwrite/appwrite/tests.yml?branch=master&amp;label=tests&amp;style=flat-square)](https://github.com/appwrite/appwrite/actions)
[![X Account label](https://img.shields.io/twitter/follow/appwrite?color=00acee&amp;label=twitter&amp;style=flat-square)](https://twitter.com/appwrite)

&lt;!-- [![Docker Pulls](https://img.shields.io/docker/pulls/appwrite/appwrite?color=f02e65&amp;style=flat-square)](https://hub.docker.com/r/appwrite/appwrite) --&gt;
&lt;!-- [![Translate](https://img.shields.io/badge/translate-f02e65?style=flat-square)](docs/tutorials/add-translations.md) --&gt;
&lt;!-- [![Swag Store](https://img.shields.io/badge/swag%20store-f02e65?style=flat-square)](https://store.appwrite.io) --&gt;

English | [简体中文](README-CN.md)

Appwrite is an end-to-end backend server for Web, Mobile, Native, or Backend apps packaged as a set of Docker&lt;nobr&gt; microservices. Appwrite abstracts the complexity and repetitiveness required to build a modern backend API from scratch and allows you to build secure apps faster.

Using Appwrite, you can easily integrate your app with user authentication and multiple sign-in methods, a database for storing and querying users and team data, storage and file management, image manipulation, Cloud Functions, messaging, and [more services](https://appwrite.io/docs).

&lt;p align=&quot;center&quot;&gt;
    &lt;br /&gt;
    &lt;a href=&quot;https://www.producthunt.com/posts/appwrite-2?utm_source=badge-top-post-badge&amp;utm_medium=badge&amp;utm_souce=badge-appwrite-2&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=360315&amp;theme=light&amp;period=daily&quot; alt=&quot;Appwrite - 100&amp;#0037;&amp;#0032;open&amp;#0032;source&amp;#0032;alternative&amp;#0032;for&amp;#0032;Firebase | Product Hunt&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot; /&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt;
&lt;/p&gt;

![Appwrite project dashboard showing various Appwrite features](public/images/github.png)

Find out more at: [https://appwrite.io](https://appwrite.io).

Table of Contents:

- [Getting Started](#getting-started)
- [Self-Hosting](#self-hosting)
  - [Unix](#unix)
  - [Windows](#windows)
    - [CMD](#cmd)
    - [PowerShell](#powershell)
  - [Upgrade from an Older Version](#upgrade-from-an-older-version)
- [One-Click Setups](#one-click-setups)
- [Getting Started](#getting-started)
  - [Products](#products)
  - [SDKs](#sdks)
    - [Client](#client)
    - [Server](#server)
    - [Community](#community)
- [Architecture](#architecture)
- [Contributing](#contributing)
- [Security](#security)
- [Follow Us](#follow-us)
- [License](#license)

## Getting Started
The easiest way to get started with Appwrite is by [signing up for Appwrite Cloud](https://cloud.appwrite.io/). While Appwrite Cloud is in public beta, you can build with Appwrite completely free, and we won&#039;t collect you credit card information. 

## Self-Hosting

Appwrite is designed to run in a containerized environment. Running your server is as easy as running one command from your terminal. You can either run Appwrite on your localhost using docker-compose or on any other container orchestration tool, such as [Kubernetes](https://kubernetes.io/docs/home/), [Docker Swarm](https://docs.docker.com/engine/swarm/), or [Rancher](https://rancher.com/docs/).

Before running the installation command, make sure you have [Docker](https://www.docker.com/products/docker-desktop) installed on your machine:

### Unix

```bash
docker run -it --rm \
    --volume /var/run/docker.sock:/var/run/docker.sock \
    --volume &quot;$(pwd)&quot;/appwrite:/usr/src/code/appwrite:rw \
    --entrypoint=&quot;install&quot; \
    appwrite/appwrite:1.7.2
```

### Windows

#### CMD

```cmd
docker run -it --rm ^
    --volume //var/run/docker.sock:/var/run/docker.sock ^
    --volume &quot;%cd%&quot;/appwrite:/usr/src/code/appwrite:rw ^
    --entrypoint=&quot;install&quot; ^
    appwrite/appwrite:1.7.2
```

#### PowerShell

```powershell
docker run -it --rm `
    --volume /var/run/docker.sock:/var/run/docker.sock `
    --volume ${pwd}/appwrite:/usr/src/code/appwrite:rw `
    --entrypoint=&quot;install&quot; `
    appwrite/appwrite:1.7.2
```

Once the Docker installation is complete, go to http://localhost to access the Appwrite console from your browser. Please note that on non-Linux native hosts, the server might take a few minutes to start after completing the installation.

For advanced production and custom installation, check out our Docker [environment variables](https://appwrite.io/docs/environment-variables) docs. You can also use our public [docker-compose.yml](https://appwrite.io/install/compose) and [.env](https://appwrite.io/install/env) files to manually set up an environment.

### Upgrade from an Older Version

If you are upgrading your Appwrite server from an older version, you should use the Appwrite migration tool once your setup is completed. For more information regarding this, check out the [Installation Docs](https://appwrite.io/docs/self-hosting).

## One-Click Setups

In addition to running Appwrite locally, you can also launch Appwrite using a pre-configured setup. This allows you to get up and running quickly with Appwrite without installing Docker on your local machine.

Choose from one of the providers below:

&lt;table border=&quot;0&quot;&gt;
  &lt;tr&gt;
    &lt;td align=&quot;center&quot; width=&quot;100&quot; height=&quot;100&quot;&gt;
      &lt;a href=&quot;https://marketplace.digitalocean.com/apps/appwrite&quot;&gt;
        &lt;img width=&quot;50&quot; height=&quot;39&quot; src=&quot;public/images/integrations/digitalocean-logo.svg&quot; alt=&quot;DigitalOcean Logo&quot; /&gt;
          &lt;br /&gt;&lt;sub&gt;&lt;b&gt;DigitalOcean&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;
        &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot; width=&quot;100&quot; height=&quot;100&quot;&gt;
      &lt;a href=&quot;https://gitpod.io/#https://github.com/appwrite/integration-for-gitpod&quot;&gt;
        &lt;img width=&quot;50&quot; height=&quot;39&quot; src=&quot;public/images/integrations/gitpod-logo.svg&quot; alt=&quot;Gitpod Logo&quot; /&gt;
          &lt;br /&gt;&lt;sub&gt;&lt;b&gt;Gitpod&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;    
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot; width=&quot;100&quot; height=&quot;100&quot;&gt;
      &lt;a href=&quot;https://www.linode.com/marketplace/apps/appwrite/appwrite/&quot;&gt;
        &lt;img width=&quot;50&quot; height=&quot;39&quot; src=&quot;public/images/integrations/akamai-logo.svg&quot; alt=&quot;Akamai Logo&quot; /&gt;
          &lt;br /&gt;&lt;sub&gt;&lt;b&gt;Akamai Compute&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;    
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td align=&quot;center&quot; width=&quot;100&quot; height=&quot;100&quot;&gt;
      &lt;a href=&quot;https://aws.amazon.com/marketplace/pp/prodview-2hiaeo2px4md6&quot;&gt;
        &lt;img width=&quot;50&quot; height=&quot;39&quot; src=&quot;public/images/integrations/aws-logo.svg&quot; alt=&quot;AWS Logo&quot; /&gt;
          &lt;br /&gt;&lt;sub&gt;&lt;b&gt;AWS Marketplace&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;    
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

## Getting Started

Getting started with Appwrite is as easy as creating a new project, choosing your platform, and integrating its SDK into your code. You can easily get started with your platform of choice by reading one of our Getting Started tutorials.

| Platform              | Technology                                                                         |
| --------------------- | ---------------------------------------------------------------------------------- |
| **Web app**           | [Quick start for Web](https://appwrite.io/docs/quick-starts/web)                   |
|                       | [Quick start for Next.js](https://appwrite.io/docs/quick-starts/nextjs)            |
|                       | [Quick start for React](https://appwrite.io/docs/quick-starts/react)               |
|                       | [Quick start for Vue.js](https://appwrite.io/docs/quick-starts/vue)                |
|                       | [Quick start for Nuxt](https://appwrite.io/docs/quick-starts/nuxt)                 |
|                       | [Quick start for SvelteKit](https://appwrite.io/docs/quick-starts/sveltekit)       |
|                       | [Quick start for Refine](https://appwrite.io/docs/quick-starts/refine)             |
|                       | [Quick start for Angular](https://appwrite.io/docs/quick-starts/angular)           |
| **Mobile and Native** | [Quick start for React Native](https://appwrite.io/docs/quick-starts/react-native) |
|                       | [Quick start for Flutter](https://appwrite.io/docs/quick-starts/flutter)           |
|                       | [Quick start for Apple](https://appwrite.io/docs/quick-starts/apple)               |
|                       | [Quick start for Android](https://appwrite.io/docs/quick-starts/android)           |
| **Server**            | [Quick start for Node.js](https://appwrite.io/docs/quick-starts/node)              |
|                       | [Quick start for Python](https://appwrite.io/docs/quick-starts/python)             |
|                       | [Quick start for .NET](https://appwrite.io/docs/quick-starts/dotnet)               |
|                       | [Quick start for Dart](https://appwrite.io/docs/quick-starts/dart)                 |
|                       | [Quick start for Ruby](https://appwrite.io/docs/quick-starts/ruby)                 |
|                       | [Quick start for Deno](https://appwrite.io/docs/quick-starts/deno)                 |
|                       | [Quick start for PHP](https://appwrite.io/docs/quick-starts/php)                   |
|                       | [Quick start for Kotlin](https://appwrite.io/docs/quick-starts/kotlin)             |
|                       | [Quick start for Swift](https://appwrite.io/docs/quick-starts/swift)               |

### Products

- [**Account**](https://appwrite.io/docs/references/cloud/client-web/account) - Manage current user authentication and account. Track and manage the user sessions, devices, sign-in methods, and security logs.
- [**Users**](https://appwrite.io/docs/server/users) - Manage and list all project users when building backend integrations with Server SDKs.
- [**Teams**](https://appwrite.io/docs/references/cloud/client-web/teams) - Manage and group users in teams. Manage memberships, invites, and user roles within a team.
- [**Databases**](https://appwrite.io/docs/references/cloud/client-web/databases) - Manage databases, collections, and documents. Read, create, update, and delete documents and filter lists of document collections using advanced filters.
- [**Storage**](https://appwrite.io/docs/references/cloud/client-web/storage) - Manage storage files. Read, create, delete, and preview files. Manipulate the preview of your files to perfectly fit your app. All files are scanned by ClamAV and stored in a secure and encrypted way.
- [**Functions**](https://appwrite.io/docs/references/cloud/server-nodejs/functions) - Customize your Appwrite project by executing your custom code in a secure, isolated environment. You can trigger your code on any Appwrite system event either manually or using a CRON schedule.
- [**Messaging**](https://appwrite.io/docs/references/cloud/client-web/messaging) - Communicate with your users through push notifications, emails, and SMS text messages using Appwrite Messaging.
- [**Realtime**](https://appwrite.io/docs/realtime) - Listen to real-time events for any of your Appwrite services including users, storage, functions, databases, and more.
- [**Locale**](https://appwrite.io/docs/references/cloud/client-web/locale) - Track your user&#039;s location and manage your app locale-based data.
- [**Avatars**](https://appwrite.io/docs/references/cloud/client-web/avatars) - Manage your users&#039; avatars, countries&#039; flags, browser icons, and credit card symbols. Generate QR codes from links or plaintext strings.

For the complete API documentation, visit [https://appwrite.io/docs](https://appwrite.io/docs). For more tutorials, news and announcements check out our [blog](https://medium.com/appwrite-io) and [Discord Server](https://discord.gg/GSeTUeA).

### SDKs

Below is a list of currently supported platforms and languages. If you would like to help us add support to your platform of choice, you can go over to our [SDK Generator](https://github.com/appwrite/sdk-generator) project and view our [contribution guide](https://github.com/appwrite/sdk-generator/blob/master/CONTRIBUTING.md).

#### Client

- :white_check_mark: &amp;nbsp; [Web](https://github.com/appwrite/sdk-for-web) (Maintained by the Appwrite Team)
- :white_check_mark: &amp;nbsp; [Flutter](https://github.com/appwrite/sdk-for-flutter) (Maintained by the Appwrite Team)
- :white_check_mark: &amp;nbsp; [Apple](https://github.com/appwrite/sdk-for-apple) (Maintained by the Appwrite Team)
- :white_check_mark: &amp;nbsp; [Android](https://github.com/appwrite/sdk-for-android) (Maintained by the Appwrite Team)
- :white_check_mark: &amp;nbsp; [React Native](https://github.com/appwrite/sdk-for-react-native) - **Beta** (Maintained by the Appwrite Team)

#### Server

- :white_check_mark: &amp;nbsp; [NodeJS](https://github.com/appwrite/sdk-for-node) (Maintained by the Appwrite Team)
- :white_check_mark: &amp;nbsp; [PHP](https://github.com/appwrite/sdk-for-php) (Maintained by the Appwrite Team)
- :white_check_mark: &amp;nbsp; [Dart](https://github.com/appwrite/sdk-for-dart) (Maintained by the Appwrite Team)
- :white_check_mark: &amp;nbsp; [Deno](https://github.com/appwrite/sdk-for-deno) (Maintained by the Appwrite Team)
- :white_check_mark: &amp;nbsp; [Ruby](https://github.com/appwrite/sdk-for-ruby) (Maintained by the Appwrite Team)
- :white_check_mark: &amp;nbsp; [Python](https://github.com/appwrite/sdk-for-python) (Maintained by the Appwrite Team)
- :white_check_mark: &amp;nbsp; [Kotlin](https://github.com/appwrite/sdk-for-kotlin) (Maintained by the Appwrite Team)
- :white_check_mark: &amp;nbsp; [Swift](https://github.com/appwrite/sdk-for-swift) (Maintained by the Appwrite Team)
- :white_check_mark: &amp;nbsp; [.NET](https://github.com/appwrite/sdk-for-dotnet) - **Beta** (Maintained by the Appwrite Team)

#### Community

- :white_check_mark: &amp;nbsp; [Appcelerator Titanium](https://github.com/m1ga/ti.appwrite) (Maintained by [Michael Gangolf](https://github.com/m1ga/))
- :white_check_mark: &amp;nbsp; [Godot Engine](https://github.com/GodotNuts/appwrite-sdk) (Maintained by [fenix-hub @GodotNuts](https://github.com/fenix-hub))

Looking for more SDKs? - Help us by contributing a pull request to our [SDK Generator](https://github.com/appwrite/sdk-generator)!

## Architecture

![Appwrite Architecture showing how Appwrite is built and the services and tools it uses](docs/specs/overview.drawio.svg)

Appwrite uses a microservices architecture that was designed for easy scaling and delegation of responsibilities. In addition, Appwrite supports multiple APIs, such as REST, WebSocket, and GraphQL to allow you to interact with your resources by leveraging your existing knowledge and protocols of choice.

The Appwrite API layer was designed to be extremely fast by leveraging in-memory caching and delegating any heavy-lifting tasks to the Appwrite background workers. The background workers also allow you to precisely control your compute capacity and costs using a message queue to handle the load. You can learn more about our architecture in the [contribution guide](CONTRIBUTING.md#architecture-1).

## Contributing

All code contributions, including those of people having commit access, must go through a pull request and be approved by a core developer before being merged. This is to ensure a proper review of all the code.

We truly :heart: pull requests! If you wish to help, you can learn more about how you can contribute to this project in the [contribution guide](CONTRIBUTING.md).

## Security

For security issues, kindly email us at [security@appwrite.io](mailto:security@appwrite.io) instead of posting a public issue on GitHub.

## Follow Us

Join our growing community around the world! Check out our official [Blog](https://appwrite.io/blog). Follow us on [X](https://twitter.com/appwrite), [LinkedIn](https://www.linkedin.com/company/appwrite/), [Dev Community](https://dev.to/appwrite) or join our live [Discord server](https://appwrite.io/discord) for more help, ideas, and discussions.

## License

This repository is available under the [BSD 3-Clause License](./LICENSE).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[modelcontextprotocol/modelcontextprotocol]]></title>
            <link>https://github.com/modelcontextprotocol/modelcontextprotocol</link>
            <guid>https://github.com/modelcontextprotocol/modelcontextprotocol</guid>
            <pubDate>Sat, 24 May 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[Specification and documentation for the Model Context Protocol]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/modelcontextprotocol/modelcontextprotocol">modelcontextprotocol/modelcontextprotocol</a></h1>
            <p>Specification and documentation for the Model Context Protocol</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,350</p>
            <p>Forks: 490</p>
            <p>Stars today: 32 stars today</p>
            <h2>README</h2><pre># Model Context Protocol specification

This repo contains the specification and protocol schema for the Model Context Protocol.

The schema is [defined in TypeScript](schema/2025-03-26/schema.ts) first, but
[made available as JSON Schema](schema/2025-03-26/schema.json) as well, for wider
compatibility.

The official MCP documentation is built using Mintlify and available at
[modelcontextprotocol.io](https://modelcontextprotocol.io).

## Contributing

Please see [CONTRIBUTING.md](CONTRIBUTING.md) for details on how to contribute to this
project.

## License

This project is licensed under the MIT License—see the [LICENSE](LICENSE) file for
details.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[vueuse/vueuse]]></title>
            <link>https://github.com/vueuse/vueuse</link>
            <guid>https://github.com/vueuse/vueuse</guid>
            <pubDate>Sat, 24 May 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[Collection of essential Vue Composition Utilities for Vue 3]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/vueuse/vueuse">vueuse/vueuse</a></h1>
            <p>Collection of essential Vue Composition Utilities for Vue 3</p>
            <p>Language: TypeScript</p>
            <p>Stars: 21,156</p>
            <p>Forks: 2,689</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/vueuse/vueuse#gh-light-mode-only&quot;&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/vueuse/vueuse/main/packages/public/logo-vertical.png#gh-light-mode-only&quot; alt=&quot;VueUse - Collection of essential Vue Composition Utilities&quot; width=&quot;300&quot;&gt;
&lt;/a&gt;
&lt;a href=&quot;https://github.com/vueuse/vueuse#gh-dark-mode-only&quot;&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/vueuse/vueuse/main/packages/public/logo-vertical-dark.png#gh-dark-mode-only&quot; alt=&quot;VueUse - Collection of essential Vue Composition Utilities&quot; width=&quot;300&quot;&gt;
&lt;/a&gt;
&lt;br&gt;
Collection of essential Vue Composition Utilities
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://www.npmjs.com/package/@vueuse/core&quot; target=&quot;__blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@vueuse/core?color=a1b858&amp;label=&quot; alt=&quot;NPM version&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://www.npmjs.com/package/@vueuse/core&quot; target=&quot;__blank&quot;&gt;&lt;img alt=&quot;NPM Downloads&quot; src=&quot;https://img.shields.io/npm/dm/@vueuse/core?color=50a36f&amp;label=&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://vueuse.org&quot; target=&quot;__blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=&amp;message=docs%20%26%20demos&amp;color=1e8a7a&quot; alt=&quot;Docs &amp; Demos&quot;&gt;&lt;/a&gt;
&lt;img alt=&quot;Function Count&quot; src=&quot;https://vueuse.org/badge-function-count.svg&quot;&gt;
&lt;br&gt;
&lt;a href=&quot;https://github.com/vueuse/vueuse&quot; target=&quot;__blank&quot;&gt;&lt;img alt=&quot;GitHub stars&quot; src=&quot;https://img.shields.io/github/stars/vueuse/vueuse?style=social&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://cdn.jsdelivr.net/gh/antfu/static/sponsors.svg&quot;&gt;
    &lt;img src=&#039;https://cdn.jsdelivr.net/gh/antfu/static/sponsors.svg&#039;&gt;
  &lt;/a&gt;
&lt;/p&gt;

## 🚀 Features

- 🎪 [**Interactive docs &amp; demos**](https://vueuse.org)
- ⚡ **Fully tree shakeable**: Only take what you want, [bundle size](https://vueuse.org/export-size)
- 🦾 **Type Strong**: Written in [TypeScript](https://www.typescriptlang.org/), with [TS Docs](https://github.com/microsoft/tsdoc)
- 🔋 **SSR Friendly**
- 🌎 **No bundler required**: Usable via CDN
- 🔩 **Flexible**: Configurable event filters and targets
- 🔌 **Optional [Add-ons](https://vueuse.org/add-ons)**: Router, Firebase, RxJS, etc.

## 🦄 Usage

```ts
import { useLocalStorage, useMouse, usePreferredDark } from &#039;@vueuse/core&#039;

const { x, y } = useMouse()

// if user prefers dark theme
const isDark = usePreferredDark()

// persist state in localStorage
const store = useLocalStorage(
  &#039;my-storage&#039;,
  {
    name: &#039;Apple&#039;,
    color: &#039;red&#039;,
  },
)
```

Refer to [functions list](https://vueuse.org/functions) or [documentations](https://vueuse.org/) for more details.

## 📦 Install

&gt; From v12.0, VueUse no longer supports Vue 2. Please use v11.x for Vue 2 support.

```bash
npm i @vueuse/core
```

[Add ons](https://vueuse.org/add-ons.html) | [Nuxt Module](https://vueuse.org/guide/index.html#nuxt)

###### Demos

- [Vite + Vue 3](https://github.com/vueuse/vueuse-vite-starter)
- [Nuxt 3 + Vue 3](https://github.com/antfu/vitesse-nuxt3)
- [Webpack + Vue 3](https://github.com/vueuse/vueuse-vue3-example)

### CDN

```vue
&lt;script src=&quot;https://unpkg.com/@vueuse/shared&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://unpkg.com/@vueuse/core&quot;&gt;&lt;/script&gt;
```

It will be exposed to global as `window.VueUse`

## 🪴 Project Activity

![Alt](https://repobeats.axiom.co/api/embed/a406ba7461a6a087dbdb14d4395046c948d44c51.svg &#039;Repobeats analytics image&#039;)

## 🧱 Contribute

See the [**Contributing Guide**](https://vueuse.org/contributing)

## 🌸 Thanks

This project is heavily inspired by the following awesome projects.

- [streamich/react-use](https://github.com/streamich/react-use)
- [u3u/vue-hooks](https://github.com/u3u/vue-hooks)
- [logaretm/vue-use-web](https://github.com/logaretm/vue-use-web)
- [kripod/react-hooks](https://github.com/kripod/react-hooks)

And thanks to [all the contributors on GitHub](https://github.com/vueuse/vueuse/graphs/contributors)!

## 👨‍🚀 Contributors

### Financial Contributors on Open Collective

&lt;a href=&quot;https://opencollective.com/vueuse&quot;&gt;&lt;img src=&quot;https://opencollective.com/vueuse/individuals.svg?width=890&quot;&gt;&lt;/a&gt;

## 📄 License

[MIT License](https://github.com/vueuse/vueuse/blob/main/LICENSE) © 2019-PRESENT [Anthony Fu](https://github.com/antfu)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[cypress-io/cypress]]></title>
            <link>https://github.com/cypress-io/cypress</link>
            <guid>https://github.com/cypress-io/cypress</guid>
            <pubDate>Sat, 24 May 2025 00:04:47 GMT</pubDate>
            <description><![CDATA[Fast, easy and reliable testing for anything that runs in a browser.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/cypress-io/cypress">cypress-io/cypress</a></h1>
            <p>Fast, easy and reliable testing for anything that runs in a browser.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 48,631</p>
            <p>Forks: 3,288</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.cypress.io&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot;  srcset=&quot;./assets/cypress-logo-dark.png&quot;&gt;
      &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;./assets/cypress-logo-light.png&quot;&gt;
      &lt;img alt=&quot;Cypress Logo&quot; src=&quot;./assets/cypress-logo-light.png&quot;&gt;
    &lt;/picture&gt;    
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://on.cypress.io&quot;&gt;Documentation&lt;/a&gt; |
  &lt;a href=&quot;https://on.cypress.io/changelog&quot;&gt;Changelog&lt;/a&gt; |
  &lt;a href=&quot;https://on.cypress.io/roadmap&quot;&gt;Roadmap&lt;/a&gt;
&lt;/p&gt;

&lt;h3 align=&quot;center&quot;&gt;
  The web has evolved. Finally, testing has too.
&lt;/h3&gt;

&lt;p align=&quot;center&quot;&gt;
  Fast, easy and reliable testing for anything that runs in a browser.
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  Join us, we&#039;re &lt;a href=&quot;https://cypress.io/jobs&quot;&gt;hiring&lt;/a&gt;.
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/cypress&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/dm/cypress.svg&quot; alt=&quot;npm&quot;/&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/gitter/room/cypress-io/cypress.svg&quot; alt=&quot;Gitter chat&quot;/&gt;
  &lt;/a&gt;
    &lt;a href=&quot;https://stackshare.io/cypress&quot;&gt;
    &lt;img src=&quot;https://img.stackshare.io/misc/follow-on-stackshare-badge.svg&quot; alt=&quot;StackShare&quot;/&gt;
  &lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;

## What is Cypress?

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://player.vimeo.com/video/237527670&quot;&gt;
    &lt;img alt=&quot;Why Cypress Video&quot; src=&quot;https://user-images.githubusercontent.com/1271364/31739717-dbdff0ee-b41c-11e7-9b16-bfa1b6ac1814.png&quot; width=&quot;75%&quot; height=&quot;75%&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

## Installing

[![npm version](https://badge.fury.io/js/cypress.svg)](https://badge.fury.io/js/cypress)

Install Cypress for Mac, Linux, or Windows, then [get started](https://on.cypress.io/install).

```bash
npm install cypress --save-dev
```
or
```bash
yarn add cypress --dev
```

![installing-cli e1693232](https://user-images.githubusercontent.com/1271364/31740846-7bf607f0-b420-11e7-855f-41c996040d31.gif)


## Contributing

- [![CircleCI](https://circleci.com/gh/cypress-io/cypress/tree/develop.svg?style=svg)](https://circleci.com/gh/cypress-io/cypress/tree/develop) - `develop` branch
- [![CircleCI](https://circleci.com/gh/cypress-io/cypress/tree/master.svg?style=svg)](https://circleci.com/gh/cypress-io/cypress/tree/master) - `master` branch

Please see our [Contributing Guideline](./CONTRIBUTING.md) which explains repo organization, linting, testing, and other steps.

## License

[![license](https://img.shields.io/badge/license-MIT-green.svg)](https://github.com/cypress-io/cypress/blob/master/LICENSE)

This project is licensed under the terms of the [MIT license](/LICENSE).

## Badges

Let the world know your project is using Cypress.io to test with this cool badge

[![Cypress.io](https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg)](https://www.cypress.io/)

```
[![Cypress.io](https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg)](https://www.cypress.io/)
```
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[fingerprintjs/fingerprintjs]]></title>
            <link>https://github.com/fingerprintjs/fingerprintjs</link>
            <guid>https://github.com/fingerprintjs/fingerprintjs</guid>
            <pubDate>Sat, 24 May 2025 00:04:46 GMT</pubDate>
            <description><![CDATA[The most advanced browser fingerprinting library.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/fingerprintjs/fingerprintjs">fingerprintjs/fingerprintjs</a></h1>
            <p>The most advanced browser fingerprinting library.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 24,659</p>
            <p>Forks: 2,378</p>
            <p>Stars today: 10 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Chainlit/chainlit]]></title>
            <link>https://github.com/Chainlit/chainlit</link>
            <guid>https://github.com/Chainlit/chainlit</guid>
            <pubDate>Sat, 24 May 2025 00:04:45 GMT</pubDate>
            <description><![CDATA[Build Conversational AI in minutes ⚡️]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Chainlit/chainlit">Chainlit/chainlit</a></h1>
            <p>Build Conversational AI in minutes ⚡️</p>
            <p>Language: TypeScript</p>
            <p>Stars: 9,716</p>
            <p>Forks: 1,312</p>
            <p>Stars today: 12 stars today</p>
            <h2>README</h2><pre>backend/README.md</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[clash-verge-rev/clash-verge-rev]]></title>
            <link>https://github.com/clash-verge-rev/clash-verge-rev</link>
            <guid>https://github.com/clash-verge-rev/clash-verge-rev</guid>
            <pubDate>Sat, 24 May 2025 00:04:44 GMT</pubDate>
            <description><![CDATA[A modern GUI client based on Tauri, designed to run in Windows, macOS and Linux for tailored proxy experience]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/clash-verge-rev/clash-verge-rev">clash-verge-rev/clash-verge-rev</a></h1>
            <p>A modern GUI client based on Tauri, designed to run in Windows, macOS and Linux for tailored proxy experience</p>
            <p>Language: TypeScript</p>
            <p>Stars: 59,060</p>
            <p>Forks: 4,536</p>
            <p>Stars today: 138 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;
  &lt;img src=&quot;./src-tauri/icons/icon.png&quot; alt=&quot;Clash&quot; width=&quot;128&quot; /&gt;
  &lt;br&gt;
  Continuation of &lt;a href=&quot;https://github.com/zzzgydi/clash-verge&quot;&gt;Clash Verge&lt;/a&gt;
  &lt;br&gt;
&lt;/h1&gt;

&lt;h3 align=&quot;center&quot;&gt;
A Clash Meta GUI based on &lt;a href=&quot;https://github.com/tauri-apps/tauri&quot;&gt;Tauri&lt;/a&gt;.
&lt;/h3&gt;

## Preview

| Dark                             | Light                             |
| -------------------------------- | --------------------------------- |
| ![预览](./docs/preview_dark.png) | ![预览](./docs/preview_light.png) |

## Install

请到发布页面下载对应的安装包：[Release page](https://github.com/clash-verge-rev/clash-verge-rev/releases)&lt;br&gt;
Go to the [release page](https://github.com/clash-verge-rev/clash-verge-rev/releases) to download the corresponding installation package&lt;br&gt;
Supports Windows (x64/x86), Linux (x64/arm64) and macOS 10.15+ (intel/apple).

### 安装说明和常见问题，请到[文档页](https://clash-verge-rev.github.io/)查看：[Doc](https://clash-verge-rev.github.io/)

---

### TG 频道: [@clash_verge_rev](https://t.me/clash_verge_re)

## Promotion

[狗狗加速 —— 技术流机场 Doggygo VPN](https://verge.dginv.click/#/register?code=oaxsAGo6)

- 高性能海外机场，免费试用，优惠套餐，解锁流媒体，全球首家支持 Hysteria 协议。
- 使用 Clash Verge 专属邀请链接注册送 3 天，每天 1G 流量免费试用：[点此注册](https://verge.dginv.click/#/register?code=oaxsAGo6)
- Clash Verge 专属 8 折优惠码: verge20 (仅有 500 份)
- 优惠套餐每月仅需 15.8 元，160G 流量，年付 8 折
- 海外团队，无跑路风险，高达 50% 返佣
- 集群负载均衡设计，高速专线(兼容老客户端)，极低延迟，无视晚高峰，4K 秒开
- 全球首家 Hysteria 协议机场，现已上线更快的 `Hysteria2` 协议(Clash Verge 客户端最佳搭配)
- 解锁流媒体及 ChatGPT
- 官网：[https://狗狗加速.com](https://verge.dginv.click/#/register?code=oaxsAGo6)

## Features

- 基于性能强劲的 Rust 和 Tauri 2 框架
- 内置[Clash.Meta(mihomo)](https://github.com/MetaCubeX/mihomo)内核，并支持切换 `Alpha` 版本内核。
- 简洁美观的用户界面，支持自定义主题颜色、代理组/托盘图标以及 `CSS Injection`。
- 配置文件管理和增强（Merge 和 Script），配置文件语法提示。
- 系统代理和守卫、`TUN(虚拟网卡)` 模式。
- 可视化节点和规则编辑
- WebDav 配置备份和同步

### FAQ

Refer to [Doc FAQ Page](https://clash-verge-rev.github.io/faq/windows.html)

### Donation

[捐助Clash Verge Rev的开发](https://github.com/sponsors/clash-verge-rev)

## Development

See [CONTRIBUTING.md](./CONTRIBUTING.md) for more details.

To run the development server, execute the following commands after all prerequisites for **Tauri** are installed:

```shell
pnpm i
pnpm run check
pnpm dev
```

## Contributions

Issue and PR welcome!

## Acknowledgement

Clash Verge rev was based on or inspired by these projects and so on:

- [zzzgydi/clash-verge](https://github.com/zzzgydi/clash-verge): A Clash GUI based on tauri. Supports Windows, macOS and Linux.
- [tauri-apps/tauri](https://github.com/tauri-apps/tauri): Build smaller, faster, and more secure desktop applications with a web frontend.
- [Dreamacro/clash](https://github.com/Dreamacro/clash): A rule-based tunnel in Go.
- [MetaCubeX/mihomo](https://github.com/MetaCubeX/mihomo): A rule-based tunnel in Go.
- [Fndroid/clash_for_windows_pkg](https://github.com/Fndroid/clash_for_windows_pkg): A Windows/macOS GUI based on Clash.
- [vitejs/vite](https://github.com/vitejs/vite): Next generation frontend tooling. It&#039;s fast!

## License

GPL-3.0 License. See [License here](./LICENSE) for details.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[redis/ioredis]]></title>
            <link>https://github.com/redis/ioredis</link>
            <guid>https://github.com/redis/ioredis</guid>
            <pubDate>Sat, 24 May 2025 00:04:43 GMT</pubDate>
            <description><![CDATA[🚀 A robust, performance-focused, and full-featured Redis client for Node.js.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/redis/ioredis">redis/ioredis</a></h1>
            <p>🚀 A robust, performance-focused, and full-featured Redis client for Node.js.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 14,810</p>
            <p>Forks: 1,213</p>
            <p>Stars today: 2 stars today</p>
            <h2>README</h2><pre>[![ioredis](https://cdn.jsdelivr.net/gh/redis/ioredis@b5e8c74/logo.svg)](https://github.com/redis/ioredis)

[![Build Status](https://github.com/redis/ioredis/actions/workflows/release.yml/badge.svg?branch=main)](https://github.com/redis/ioredis/actions/workflows/release.yml?query=branch%3Amain)
[![Coverage Status](https://coveralls.io/repos/github/luin/ioredis/badge.svg?branch=main)](https://coveralls.io/github/luin/ioredis?branch=main)
[![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/)
[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)

[![Discord](https://img.shields.io/discord/697882427875393627.svg?style=social&amp;logo=discord)](https://discord.gg/redis)
[![Twitch](https://img.shields.io/twitch/status/redisinc?style=social)](https://www.twitch.tv/redisinc)
[![YouTube](https://img.shields.io/youtube/channel/views/UCD78lHSwYqMlyetR0_P4Vig?style=social)](https://www.youtube.com/redisinc)
[![Twitter](https://img.shields.io/twitter/follow/redisinc?style=social)](https://twitter.com/redisinc)

A robust, performance-focused and full-featured [Redis](http://redis.io) client for [Node.js](https://nodejs.org).

Supports Redis &gt;= 2.6.12. Completely compatible with Redis 7.x.

ioredis is a stable project and maintenance is done on a best-effort basis for relevant issues (contributions to ioredis will still be evaluated, reviewed, and merged when they benefit the project). For new projects, node-redis is the recommended client library. [node-redis](https://github.com/redis/node-redis) is the open-source (MIT license) Redis JavaScript client library redesigned from the ground up and actively maintained. [node-redis](https://github.com/redis/node-redis) supports new (hash-field expiration) and future commands and the capabilities available in Redis Stack and Redis 8 (search, JSON, time-series, probabilistic data structures).

# Features

ioredis is a robust, full-featured Redis client that is
used in the world&#039;s biggest online commerce company [Alibaba](http://www.alibaba.com/) and many other awesome companies.

0. Full-featured. It supports [Cluster](http://redis.io/topics/cluster-tutorial), [Sentinel](https://redis.io/docs/reference/sentinel-clients), [Streams](https://redis.io/topics/streams-intro), [Pipelining](http://redis.io/topics/pipelining), and of course [Lua scripting](http://redis.io/commands/eval), [Redis Functions](https://redis.io/topics/functions-intro), [Pub/Sub](http://redis.io/topics/pubsub) (with the support of binary messages).
1. High performance 🚀.
2. Delightful API 😄. It works with Node callbacks and Native promises.
3. Transformation of command arguments and replies.
4. Transparent key prefixing.
5. Abstraction for Lua scripting, allowing you to [define custom commands](https://github.com/redis/ioredis#lua-scripting).
6. Supports [binary data](https://github.com/redis/ioredis#handle-binary-data).
7. Supports [TLS](https://github.com/redis/ioredis#tls-options) 🔒.
8. Supports offline queue and ready checking.
9. Supports ES6 types, such as `Map` and `Set`.
10. Supports GEO commands 📍.
11. Supports Redis ACL.
12. Sophisticated error handling strategy.
13. Supports NAT mapping.
14. Supports autopipelining.

**100% written in TypeScript and official declarations are provided:**

&lt;img width=&quot;837&quot; src=&quot;resources/ts-screenshot.png&quot; alt=&quot;TypeScript Screenshot&quot; /&gt;

# Versions

| Version        | Branch | Node.js Version | Redis Version   |
| -------------- | ------ | --------------- | --------------- |
| 5.x.x (latest) | main   | &gt;= 12           | 2.6.12 ~ latest |
| 4.x.x          | v4     | &gt;= 8            | 2.6.12 ~ 7      |

Refer to [CHANGELOG.md](CHANGELOG.md) for features and bug fixes introduced in v5.

🚀 [Upgrading from v4 to v5](https://github.com/redis/ioredis/wiki/Upgrading-from-v4-to-v5)

# Links

- [API Documentation](https://redis.github.io/ioredis/) ([Redis](https://redis.github.io/ioredis/classes/Redis.html), [Cluster](https://redis.github.io/ioredis/classes/Cluster.html))
- [Changelog](CHANGELOG.md)

&lt;hr&gt;

# Quick Start

## Install

```shell
npm install ioredis
```

In a TypeScript project, you may want to add TypeScript declarations for Node.js:

```shell
npm install --save-dev @types/node
```

## Basic Usage

```javascript
// Import ioredis.
// You can also use `import { Redis } from &quot;ioredis&quot;`
// if your project is a TypeScript project,
// Note that `import Redis from &quot;ioredis&quot;` is still supported,
// but will be deprecated in the next major version.
const Redis = require(&quot;ioredis&quot;);

// Create a Redis instance.
// By default, it will connect to localhost:6379.
// We are going to cover how to specify connection options soon.
const redis = new Redis();

redis.set(&quot;mykey&quot;, &quot;value&quot;); // Returns a promise which resolves to &quot;OK&quot; when the command succeeds.

// ioredis supports the node.js callback style
redis.get(&quot;mykey&quot;, (err, result) =&gt; {
  if (err) {
    console.error(err);
  } else {
    console.log(result); // Prints &quot;value&quot;
  }
});

// Or ioredis returns a promise if the last argument isn&#039;t a function
redis.get(&quot;mykey&quot;).then((result) =&gt; {
  console.log(result); // Prints &quot;value&quot;
});

redis.zadd(&quot;sortedSet&quot;, 1, &quot;one&quot;, 2, &quot;dos&quot;, 4, &quot;quatro&quot;, 3, &quot;three&quot;);
redis.zrange(&quot;sortedSet&quot;, 0, 2, &quot;WITHSCORES&quot;).then((elements) =&gt; {
  // [&quot;one&quot;, &quot;1&quot;, &quot;dos&quot;, &quot;2&quot;, &quot;three&quot;, &quot;3&quot;] as if the command was `redis&gt; ZRANGE sortedSet 0 2 WITHSCORES`
  console.log(elements);
});

// All arguments are passed directly to the redis server,
// so technically ioredis supports all Redis commands.
// The format is: redis[SOME_REDIS_COMMAND_IN_LOWERCASE](ARGUMENTS_ARE_JOINED_INTO_COMMAND_STRING)
// so the following statement is equivalent to the CLI: `redis&gt; SET mykey hello EX 10`
redis.set(&quot;mykey&quot;, &quot;hello&quot;, &quot;EX&quot;, 10);
```

See the `examples/` folder for more examples. For example:

- [TTL](examples/ttl.js)
- [Strings](examples/string.js)
- [Hashes](examples/hash.js)
- [Lists](examples/list.js)
- [Sets](examples/set.js)
- [Sorted Sets](examples/zset.js)
- [Streams](examples/stream.js)
- [Redis Modules](examples/module.js) e.g. RedisJSON

All Redis commands are supported. See [the documentation](https://redis.github.io/ioredis/classes/Redis.html) for details.

## Connect to Redis

When a new `Redis` instance is created,
a connection to Redis will be created at the same time.
You can specify which Redis to connect to by:

```javascript
new Redis(); // Connect to 127.0.0.1:6379
new Redis(6380); // 127.0.0.1:6380
new Redis(6379, &quot;192.168.1.1&quot;); // 192.168.1.1:6379
new Redis(&quot;/tmp/redis.sock&quot;);
new Redis({
  port: 6379, // Redis port
  host: &quot;127.0.0.1&quot;, // Redis host
  username: &quot;default&quot;, // needs Redis &gt;= 6
  password: &quot;my-top-secret&quot;,
  db: 0, // Defaults to 0
});
```

You can also specify connection options as a [`redis://` URL](http://www.iana.org/assignments/uri-schemes/prov/redis) or [`rediss://` URL](https://www.iana.org/assignments/uri-schemes/prov/rediss) when using [TLS encryption](#tls-options):

```javascript
// Connect to 127.0.0.1:6380, db 4, using password &quot;authpassword&quot;:
new Redis(&quot;redis://:authpassword@127.0.0.1:6380/4&quot;);

// Username can also be passed via URI.
new Redis(&quot;redis://username:authpassword@127.0.0.1:6380/4&quot;);
```

See [API Documentation](https://redis.github.io/ioredis/index.html#RedisOptions) for all available options.

## Pub/Sub

Redis provides several commands for developers to implement the [Publish–subscribe pattern](https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern). There are two roles in this pattern: publisher and subscriber. Publishers are not programmed to send their messages to specific subscribers. Rather, published messages are characterized into channels, without knowledge of what (if any) subscribers there may be.

By leveraging Node.js&#039;s built-in events module, ioredis makes pub/sub very straightforward to use. Below is a simple example that consists of two files, one is publisher.js that publishes messages to a channel, the other is subscriber.js that listens for messages on specific channels.

```javascript
// publisher.js

const Redis = require(&quot;ioredis&quot;);
const redis = new Redis();

setInterval(() =&gt; {
  const message = { foo: Math.random() };
  // Publish to my-channel-1 or my-channel-2 randomly.
  const channel = `my-channel-${1 + Math.round(Math.random())}`;

  // Message can be either a string or a buffer
  redis.publish(channel, JSON.stringify(message));
  console.log(&quot;Published %s to %s&quot;, message, channel);
}, 1000);
```

```javascript
// subscriber.js

const Redis = require(&quot;ioredis&quot;);
const redis = new Redis();

redis.subscribe(&quot;my-channel-1&quot;, &quot;my-channel-2&quot;, (err, count) =&gt; {
  if (err) {
    // Just like other commands, subscribe() can fail for some reasons,
    // ex network issues.
    console.error(&quot;Failed to subscribe: %s&quot;, err.message);
  } else {
    // `count` represents the number of channels this client are currently subscribed to.
    console.log(
      `Subscribed successfully! This client is currently subscribed to ${count} channels.`
    );
  }
});

redis.on(&quot;message&quot;, (channel, message) =&gt; {
  console.log(`Received ${message} from ${channel}`);
});

// There&#039;s also an event called &#039;messageBuffer&#039;, which is the same as &#039;message&#039; except
// it returns buffers instead of strings.
// It&#039;s useful when the messages are binary data.
redis.on(&quot;messageBuffer&quot;, (channel, message) =&gt; {
  // Both `channel` and `message` are buffers.
  console.log(channel, message);
});
```

It&#039;s worth noticing that a connection (aka a `Redis` instance) can&#039;t play both roles at the same time. More specifically, when a client issues `subscribe()` or `psubscribe()`, it enters the &quot;subscriber&quot; mode. From that point, only commands that modify the subscription set are valid. Namely, they are: `subscribe`, `psubscribe`, `unsubscribe`, `punsubscribe`, `ping`, and `quit`. When the subscription set is empty (via `unsubscribe`/`punsubscribe`), the connection is put back into the regular mode.

If you want to do pub/sub in the same file/process, you should create a separate connection:

```javascript
const Redis = require(&quot;ioredis&quot;);
const sub = new Redis();
const pub = new Redis();

sub.subscribe(/* ... */); // From now, `sub` enters the subscriber mode.
sub.on(&quot;message&quot; /* ... */);

setInterval(() =&gt; {
  // `pub` can be used to publish messages, or send other regular commands (e.g. `hgetall`)
  // because it&#039;s not in the subscriber mode.
  pub.publish(/* ... */);
}, 1000);
```

`PSUBSCRIBE` is also supported in a similar way when you want to subscribe all channels whose name matches a pattern:

```javascript
redis.psubscribe(&quot;pat?ern&quot;, (err, count) =&gt; {});

// Event names are &quot;pmessage&quot;/&quot;pmessageBuffer&quot; instead of &quot;message/messageBuffer&quot;.
redis.on(&quot;pmessage&quot;, (pattern, channel, message) =&gt; {});
redis.on(&quot;pmessageBuffer&quot;, (pattern, channel, message) =&gt; {});
```

## Streams

Redis v5 introduces a new data type called streams. It doubles as a communication channel for building streaming architectures and as a log-like data structure for persisting data. With ioredis, the usage can be pretty straightforward. Say we have a producer publishes messages to a stream with `redis.xadd(&quot;mystream&quot;, &quot;*&quot;, &quot;randomValue&quot;, Math.random())` (You may find the [official documentation of Streams](https://redis.io/topics/streams-intro) as a starter to understand the parameters used), to consume the messages, we&#039;ll have a consumer with the following code:

```javascript
const Redis = require(&quot;ioredis&quot;);
const redis = new Redis();

const processMessage = (message) =&gt; {
  console.log(&quot;Id: %s. Data: %O&quot;, message[0], message[1]);
};

async function listenForMessage(lastId = &quot;$&quot;) {
  // `results` is an array, each element of which corresponds to a key.
  // Because we only listen to one key (mystream) here, `results` only contains
  // a single element. See more: https://redis.io/commands/xread#return-value
  const results = await redis.xread(&quot;block&quot;, 0, &quot;STREAMS&quot;, &quot;mystream&quot;, lastId);
  const [key, messages] = results[0]; // `key` equals to &quot;mystream&quot;

  messages.forEach(processMessage);

  // Pass the last id of the results to the next round.
  await listenForMessage(messages[messages.length - 1][0]);
}

listenForMessage();
```

## Expiration

Redis can set a timeout to expire your key, after the timeout has expired the key will be automatically deleted. (You can find the [official Expire documentation](https://redis.io/commands/expire/) to understand better the different parameters you can use), to set your key to expire in 60 seconds, we will have the following code:

```javascript
redis.set(&quot;key&quot;, &quot;data&quot;, &quot;EX&quot;, 60);
// Equivalent to redis command &quot;SET key data EX 60&quot;, because on ioredis set method,
// all arguments are passed directly to the redis server.
```

## Handle Binary Data

Binary data support is out of the box. Pass buffers to send binary data:

```javascript
redis.set(&quot;foo&quot;, Buffer.from([0x62, 0x75, 0x66]));
```

Every command that returns a [bulk string](https://redis.io/docs/reference/protocol-spec/#resp-bulk-strings)
has a variant command with a `Buffer` suffix. The variant command returns a buffer instead of a UTF-8 string:

```javascript
const result = await redis.getBuffer(&quot;foo&quot;);
// result is `&lt;Buffer 62 75 66&gt;`
```

It&#039;s worth noticing that you don&#039;t need the `Buffer` suffix variant in order to **send** binary data. That means
in most case you should just use `redis.set()` instead of `redis.setBuffer()` unless you want to get the old value
with the `GET` parameter:

```javascript
const result = await redis.setBuffer(&quot;foo&quot;, &quot;new value&quot;, &quot;GET&quot;);
// result is `&lt;Buffer 62 75 66&gt;` as `GET` indicates returning the old value.
```

## Pipelining

If you want to send a batch of commands (e.g. &gt; 5), you can use pipelining to queue
the commands in memory and then send them to Redis all at once. This way the performance improves by 50%~300% (See [benchmark section](#benchmarks)).

`redis.pipeline()` creates a `Pipeline` instance. You can call any Redis
commands on it just like the `Redis` instance. The commands are queued in memory
and flushed to Redis by calling the `exec` method:

```javascript
const pipeline = redis.pipeline();
pipeline.set(&quot;foo&quot;, &quot;bar&quot;);
pipeline.del(&quot;cc&quot;);
pipeline.exec((err, results) =&gt; {
  // `err` is always null, and `results` is an array of responses
  // corresponding to the sequence of queued commands.
  // Each response follows the format `[err, result]`.
});

// You can even chain the commands:
redis
  .pipeline()
  .set(&quot;foo&quot;, &quot;bar&quot;)
  .del(&quot;cc&quot;)
  .exec((err, results) =&gt; {});

// `exec` also returns a Promise:
const promise = redis.pipeline().set(&quot;foo&quot;, &quot;bar&quot;).get(&quot;foo&quot;).exec();
promise.then((result) =&gt; {
  // result === [[null, &#039;OK&#039;], [null, &#039;bar&#039;]]
});
```

Each chained command can also have a callback, which will be invoked when the command
gets a reply:

```javascript
redis
  .pipeline()
  .set(&quot;foo&quot;, &quot;bar&quot;)
  .get(&quot;foo&quot;, (err, result) =&gt; {
    // result === &#039;bar&#039;
  })
  .exec((err, result) =&gt; {
    // result[1][1] === &#039;bar&#039;
  });
```

In addition to adding commands to the `pipeline` queue individually, you can also pass an array of commands and arguments to the constructor:

```javascript
redis
  .pipeline([
    [&quot;set&quot;, &quot;foo&quot;, &quot;bar&quot;],
    [&quot;get&quot;, &quot;foo&quot;],
  ])
  .exec(() =&gt; {
    /* ... */
  });
```

`#length` property shows how many commands in the pipeline:

```javascript
const length = redis.pipeline().set(&quot;foo&quot;, &quot;bar&quot;).get(&quot;foo&quot;).length;
// length === 2
```

## Transaction

Most of the time, the transaction commands `multi` &amp; `exec` are used together with pipeline.
Therefore, when `multi` is called, a `Pipeline` instance is created automatically by default,
so you can use `multi` just like `pipeline`:

```javascript
redis
  .multi()
  .set(&quot;foo&quot;, &quot;bar&quot;)
  .get(&quot;foo&quot;)
  .exec((err, results) =&gt; {
    // results === [[null, &#039;OK&#039;], [null, &#039;bar&#039;]]
  });
```

If there&#039;s a syntax error in the transaction&#039;s command chain (e.g. wrong number of arguments, wrong command name, etc),
then none of the commands would be executed, and an error is returned:

```javascript
redis
  .multi()
  .set(&quot;foo&quot;)
  .set(&quot;foo&quot;, &quot;new value&quot;)
  .exec((err, results) =&gt; {
    // err:
    //  { [ReplyError: EXECABORT Transaction discarded because of previous errors.]
    //    name: &#039;ReplyError&#039;,
    //    message: &#039;EXECABORT Transaction discarded because of previous errors.&#039;,
    //    command: { name: &#039;exec&#039;, args: [] },
    //    previousErrors:
    //     [ { [ReplyError: ERR wrong number of arguments for &#039;set&#039; command]
    //         name: &#039;ReplyError&#039;,
    //         message: &#039;ERR wrong number of arguments for \&#039;set\&#039; command&#039;,
    //         command: [Object] } ] }
  });
```

In terms of the interface, `multi` differs from `pipeline` in that when specifying a callback
to each chained command, the queueing state is passed to the callback instead of the result of the command:

```javascript
redis
  .multi()
  .set(&quot;foo&quot;, &quot;bar&quot;, (err, result) =&gt; {
    // result === &#039;QUEUED&#039;
  })
  .exec(/* ... */);
```

If you want to use transaction without pipeline, pass `{ pipeline: false }` to `multi`,
and every command will be sent to Redis immediately without waiting for an `exec` invocation:

```javascript
redis.multi({ pipeline: false });
redis.set(&quot;foo&quot;, &quot;bar&quot;);
redis.get(&quot;foo&quot;);
redis.exec((err, result) =&gt; {
  // result === [[null, &#039;OK&#039;], [null, &#039;bar&#039;]]
});
```

The constructor of `multi` also accepts a batch of commands:

```javascript
redis
  .multi([
    [&quot;set&quot;, &quot;foo&quot;, &quot;bar&quot;],
    [&quot;get&quot;, &quot;foo&quot;],
  ])
  .exec(() =&gt; {
    /* ... */
  });
```

Inline transactions are supported by pipeline, which means you can group a subset of commands
in the pipeline into a transaction:

```javascript
redis
  .pipeline()
  .get(&quot;foo&quot;)
  .multi()
  .set(&quot;foo&quot;, &quot;bar&quot;)
  .get(&quot;foo&quot;)
  .exec()
  .get(&quot;foo&quot;)
  .exec();
```

## Lua Scripting

ioredis supports all of the scripting commands such as `EVAL`, `EVALSHA` and `SCRIPT`.
However, it&#039;s tedious to use in real world scenarios since developers have to take
care of script caching and to detect when to use `EVAL` and when to use `EVALSHA`.
ioredis exposes a `defineCommand` method to make scripting much easier to use:

```javascript
const redis = new Redis();

// This will define a command myecho:
redis.defineCommand(&quot;myecho&quot;, {
  numberOfKeys: 2,
  lua: &quot;return {KEYS[1],KEYS[2],ARGV[1],ARGV[2]}&quot;,
});

// Now `myecho` can be used just like any other ordinary command,
// and ioredis will try to use `EVALSHA` internally when possible for better performance.
redis.myecho(&quot;k1&quot;, &quot;k2&quot;, &quot;a1&quot;, &quot;a2&quot;, (err, result) =&gt; {
  // result === [&#039;k1&#039;, &#039;k2&#039;, &#039;a1&#039;, &#039;a2&#039;]
});

// `myechoBuffer` is also defined automatically to return buffers instead of strings:
redis.myechoBuffer(&quot;k1&quot;, &quot;k2&quot;, &quot;a1&quot;, &quot;a2&quot;, (err, result) =&gt; {
  // result[0] equals to Buffer.from(&#039;k1&#039;);
});

// And of course it works with pipeline:
redis.pipeline().set(&quot;foo&quot;, &quot;bar&quot;).myecho(&quot;k1&quot;, &quot;k2&quot;, &quot;a1&quot;, &quot;a2&quot;).exec();
```

### Dynamic Keys

If the number of keys can&#039;t be determined when defining a command, you can
omit the `numberOfKeys` property and pass the number of keys as the first argument
when you call the command:

```javascript
redis.defineCommand(&quot;echoDynamicKeyNumber&quot;, {
  lua: &quot;return {KEYS[1],KEYS[2],ARGV[1],ARGV[2]}&quot;,
});

// Now you have to pass the number of keys as the first argument every time
// you invoke the `echoDynamicKeyNumber` command:
redis.echoDynamicKeyNumber(2, &quot;k1&quot;, &quot;k2&quot;, &quot;a1&quot;, &quot;a2&quot;, (err, result) =&gt; {
  // result === [&#039;k1&#039;, &#039;k2&#039;, &#039;a1&#039;, &#039;a2&#039;]
});
```

### As Constructor Options

Besides `defineCommand()`, you can also define custom commands with the `scripts` constructor option:

```javascript
const redis = new Redis({
  scripts: {
    myecho: {
      numberOfKeys: 2,
      lua: &quot;return {KEYS[1],KEYS[2],ARGV[1],ARGV[2]}&quot;,
    },
  },
});
```

### TypeScript Usages

You can refer to [the example](exam

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[jestjs/jest]]></title>
            <link>https://github.com/jestjs/jest</link>
            <guid>https://github.com/jestjs/jest</guid>
            <pubDate>Sat, 24 May 2025 00:04:42 GMT</pubDate>
            <description><![CDATA[Delightful JavaScript Testing.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/jestjs/jest">jestjs/jest</a></h1>
            <p>Delightful JavaScript Testing.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 44,783</p>
            <p>Forks: 6,545</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/package/jest&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/jest&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/jestjs/jest/blob/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg&quot; alt=&quot;Jest is released under the MIT license.&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=jestjs_&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/jestjs_.svg?style=social&amp;label=Follow%20@jestjs_&quot; alt=&quot;Follow on Twitter&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/jestjs/jest/actions/workflows/nodejs.yml&quot;&gt;&lt;img alt=&quot;GitHub CI Status&quot; src=&quot;https://img.shields.io/github/actions/workflow/status/jestjs/jest/nodejs.yml?label=CI&amp;logo=GitHub&quot;&gt;&lt;/a&gt;
  &lt;a href=&quot;https://codecov.io/github/jestjs/jest&quot;&gt;&lt;img alt=&quot;Coverage Status&quot; src=&quot;https://img.shields.io/codecov/c/github/jestjs/jest/main.svg?maxAge=43200&quot;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://gitpod.io/#https://github.com/jestjs/jest&quot;&gt;&lt;img alt=&quot;Gitpod ready-to-code&quot; src=&quot;https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod&quot;&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;!-- A spacer --&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;website/static/img/jest-readme-headline.png&quot; width=&quot;80%&quot;/&gt;&lt;/p&gt;

&lt;h2 align=&quot;center&quot;&gt;🃏 Delightful JavaScript Testing&lt;/h2&gt;

**👩🏻‍💻 Developer Ready**: A comprehensive JavaScript testing solution. Works out of the box for most JavaScript projects.

**🏃🏽 Instant Feedback**: Fast, interactive watch mode only runs test files related to changed files.

**📸 Snapshot Testing**: Capture snapshots of large objects to simplify testing and to analyze how they change over time.

&lt;p align=&quot;right&quot;&gt;&lt;em&gt;See more on &lt;a href=&quot;https://jestjs.io&quot;&gt;jestjs.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

## Table of Contents

- [Getting Started](#getting-started)
- [Running from command line](#running-from-command-line)
- [Additional Configuration](#additional-configuration)
  - [Generate a basic configuration file](#generate-a-basic-configuration-file)
  - [Using Babel](#using-babel)
  - [Using webpack](#using-webpack)
  - [Using Vite](#using-vite)
  - [Using Parcel](#using-parcel)
  - [Using Typescript](#using-typescript)
- [Documentation](#documentation)
- [Badge](#badge)
- [Contributing](#contributing)
  - [Code of Conduct](#code-of-conduct)
  - [Contributing Guide](#contributing-guide)
  - [Good First Issues](#good-first-issues)
- [Credits](#credits)
  - [Backers](#backers)
  - [Sponsors](#sponsors)
- [License](#license)
- [Copyright](#copyright)

## Getting Started

&lt;!-- copied from Getting Started docs, links updated to point to Jest website --&gt;

Install Jest using [`yarn`](https://yarnpkg.com/en/package/jest):

```bash
yarn add --dev jest
```

Or [`npm`](https://www.npmjs.com/package/jest):

```bash
npm install --save-dev jest
```

Note: Jest documentation uses `yarn` commands, but `npm` will also work. You can compare `yarn` and `npm` commands in the [yarn docs, here](https://yarnpkg.com/en/docs/migrating-from-npm#toc-cli-commands-comparison).

Let&#039;s get started by writing a test for a hypothetical function that adds two numbers. First, create a `sum.js` file:

```javascript
function sum(a, b) {
  return a + b;
}
module.exports = sum;
```

Then, create a file named `sum.test.js`. This will contain our actual test:

```javascript
const sum = require(&#039;./sum&#039;);

test(&#039;adds 1 + 2 to equal 3&#039;, () =&gt; {
  expect(sum(1, 2)).toBe(3);
});
```

Add the following section to your `package.json`:

```json
{
  &quot;scripts&quot;: {
    &quot;test&quot;: &quot;jest&quot;
  }
}
```

Finally, run `yarn test` or `npm test` and Jest will print this message:

```bash
PASS  ./sum.test.js
✓ adds 1 + 2 to equal 3 (5ms)
```

**You just successfully wrote your first test using Jest!**

This test used `expect` and `toBe` to test that two values were exactly identical. To learn about the other things that Jest can test, see [Using Matchers](https://jestjs.io/docs/using-matchers).

## Running from command line

You can run Jest directly from the CLI (if it&#039;s globally available in your `PATH`, e.g. by `yarn global add jest` or `npm install jest --global`) with a variety of useful options.

Here&#039;s how to run Jest on files matching `my-test`, using `config.json` as a configuration file and display a native OS notification after the run:

```bash
jest my-test --notify --config=config.json
```

If you&#039;d like to learn more about running `jest` through the command line, take a look at the [Jest CLI Options](https://jestjs.io/docs/cli) page.

## Additional Configuration

### Generate a basic configuration file

Based on your project, Jest will ask you a few questions and will create a basic configuration file with a short description for each option:

```bash
yarn create jest
```

### Using Babel

To use [Babel](https://babeljs.io/), install required dependencies via `yarn`:

```bash
yarn add --dev babel-jest @babel/core @babel/preset-env
```

Configure Babel to target your current version of Node by creating a `babel.config.js` file in the root of your project:

```javascript
// babel.config.js
module.exports = {
  presets: [[&#039;@babel/preset-env&#039;, {targets: {node: &#039;current&#039;}}]],
};
```

The ideal configuration for Babel will depend on your project. See [Babel&#039;s docs](https://babeljs.io/docs/en/) for more details.

&lt;details&gt;
  &lt;summary markdown=&quot;span&quot;&gt;&lt;strong&gt;Making your Babel config jest-aware&lt;/strong&gt;&lt;/summary&gt;

Jest will set `process.env.NODE_ENV` to `&#039;test&#039;` if it&#039;s not set to something else. You can use that in your configuration to conditionally setup only the compilation needed for Jest, e.g.

```javascript
// babel.config.js
module.exports = api =&gt; {
  const isTest = api.env(&#039;test&#039;);
  // You can use isTest to determine what presets and plugins to use.

  return {
    // ...
  };
};
```

&gt; Note: `babel-jest` is automatically installed when installing Jest and will automatically transform files if a babel configuration exists in your project. To avoid this behavior, you can explicitly reset the `transform` configuration option:

```javascript
// jest.config.js
module.exports = {
  transform: {},
};
```

&lt;/details&gt;

&lt;!-- Note that the Babel 6 section in the Getting Started was removed --&gt;

### Using webpack

Jest can be used in projects that use [webpack](https://webpack.js.org/) to manage assets, styles, and compilation. webpack does offer some unique challenges over other tools. Refer to the [webpack guide](https://jestjs.io/docs/webpack) to get started.

### Using Vite

Jest can be used in projects that use [vite](https://vitejs.dev/) to serves source code over native ESM to provide some frontend tooling, vite is an opinionated tool and does offer some out-of-the box workflows. Jest is not fully supported by vite due to how the [plugin system](https://github.com/vitejs/vite/issues/1955#issuecomment-776009094) from vite works, but there is some working examples for first-class jest integration using the `vite-jest`, since this is not fully supported, you might as well read the [limitation of the `vite-jest`](https://github.com/sodatea/vite-jest/tree/main/packages/vite-jest#limitations-and-differences-with-commonjs-tests). Refer to the [vite guide](https://vitejs.dev/guide/) to get started.

### Using Parcel

Jest can be used in projects that use [parcel-bundler](https://parceljs.org/) to manage assets, styles, and compilation similar to webpack. Parcel requires zero configuration. Refer to the official [docs](https://parceljs.org/docs/) to get started.

### Using TypeScript

Jest supports TypeScript, via Babel. First, make sure you followed the instructions on [using Babel](#using-babel) above. Next, install the `@babel/preset-typescript` via `yarn`:

```bash
yarn add --dev @babel/preset-typescript
```

Then add `@babel/preset-typescript` to the list of presets in your `babel.config.js`.

```diff
// babel.config.js
module.exports = {
  presets: [
    [&#039;@babel/preset-env&#039;, {targets: {node: &#039;current&#039;}}],
+    &#039;@babel/preset-typescript&#039;,
  ],
};
```

However, there are some [caveats](https://babeljs.io/docs/en/babel-plugin-transform-typescript#caveats) to using TypeScript with Babel. Because TypeScript support in Babel is purely transpilation, Jest will not type-check your tests as they are run. If you want that, you can use [ts-jest](https://github.com/kulshekhar/ts-jest) instead, or just run the TypeScript compiler [tsc](https://www.typescriptlang.org/docs/handbook/compiler-options.html) separately (or as part of your build process).

&lt;!-- end copied --&gt;

## Documentation

Learn more about using [Jest on the official site!](https://jestjs.io)

- [Getting Started](https://jestjs.io/docs/getting-started)
- [Guides](https://jestjs.io/docs/snapshot-testing)
- [API Reference](https://jestjs.io/docs/api)
- [Configuring Jest](https://jestjs.io/docs/configuration)

## Badge

Show the world you&#039;re using _Jest_ `→` [![tested with jest](https://img.shields.io/badge/tested_with-jest-99424f.svg)](https://github.com/jestjs/jest) [![jest tested](https://img.shields.io/badge/Jest-tested-eee.svg?logo=jest&amp;labelColor=99424f)](https://github.com/jestjs/jest) [![jest](https://jestjs.io/img/jest-badge.svg)](https://github.com/jestjs/jest)

&lt;!-- prettier-ignore --&gt;
```md
[![tested with jest](https://img.shields.io/badge/tested_with-jest-99424f.svg?logo=jest)](https://github.com/jestjs/jest)
[![jest tested](https://img.shields.io/badge/Jest-tested-eee.svg?logo=jest&amp;labelColor=99424f)](https://github.com/jestjs/jest)
[![jest](https://jestjs.io/img/jest-badge.svg)](https://github.com/jestjs/jest)
```

## Contributing

Development of Jest happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving Jest.

### [Code of Conduct](https://code.facebook.com/codeofconduct)

Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read [the full text](https://code.facebook.com/codeofconduct) so that you can understand what actions will and will not be tolerated.

### [Contributing Guide](CONTRIBUTING.md)

Read our [contributing guide](CONTRIBUTING.md) to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to Jest.

### [Good First Issues](https://github.com/jestjs/jest/labels/good%20first%20issue)

To help you get your feet wet and get you familiar with our contribution process, we have a list of [good first issues](https://github.com/jestjs/jest/labels/good%20first%20issue) that contain bugs which have a relatively limited scope. This is a great place to get started.

## Credits

This project exists thanks to all the people who [contribute](CONTRIBUTING.md).

&lt;a href=&quot;https://github.com/jestjs/jest/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/contributors.svg?width=890&amp;button=false&quot; /&gt;&lt;/a&gt;

### [Backers](https://opencollective.com/jest#backer)

Thank you to all our backers! 🙏

&lt;a href=&quot;https://opencollective.com/jest#backers&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/backers.svg?width=890&quot;&gt;&lt;/a&gt;

### [Sponsors](https://opencollective.com/jest#sponsor)

Support this project by becoming a sponsor. Your logo will show up here with a link to your website.

&lt;a href=&quot;https://opencollective.com/jest/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/sponsor/0/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jest/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/sponsor/1/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jest/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/sponsor/2/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jest/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/sponsor/3/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jest/sponsor/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/sponsor/4/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jest/sponsor/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/sponsor/5/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jest/sponsor/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/sponsor/6/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jest/sponsor/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/sponsor/7/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jest/sponsor/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/sponsor/8/avatar.svg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jest/sponsor/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/jest/sponsor/9/avatar.svg&quot;&gt;&lt;/a&gt;

## License

Jest is [MIT licensed](./LICENSE).

## Copyright

Copyright Contributors to the Jest project.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[modelcontextprotocol/typescript-sdk]]></title>
            <link>https://github.com/modelcontextprotocol/typescript-sdk</link>
            <guid>https://github.com/modelcontextprotocol/typescript-sdk</guid>
            <pubDate>Sat, 24 May 2025 00:04:41 GMT</pubDate>
            <description><![CDATA[The official Typescript SDK for Model Context Protocol servers and clients]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/modelcontextprotocol/typescript-sdk">modelcontextprotocol/typescript-sdk</a></h1>
            <p>The official Typescript SDK for Model Context Protocol servers and clients</p>
            <p>Language: TypeScript</p>
            <p>Stars: 6,899</p>
            <p>Forks: 803</p>
            <p>Stars today: 48 stars today</p>
            <h2>README</h2><pre># MCP TypeScript SDK ![NPM Version](https://img.shields.io/npm/v/%40modelcontextprotocol%2Fsdk) ![MIT licensed](https://img.shields.io/npm/l/%40modelcontextprotocol%2Fsdk)

## Table of Contents

- [Overview](#overview)
- [Installation](#installation)
- [Quickstart](#quick-start)
- [What is MCP?](#what-is-mcp)
- [Core Concepts](#core-concepts)
  - [Server](#server)
  - [Resources](#resources)
  - [Tools](#tools)
  - [Prompts](#prompts)
- [Running Your Server](#running-your-server)
  - [stdio](#stdio)
  - [Streamable HTTP](#streamable-http)
  - [Testing and Debugging](#testing-and-debugging)
- [Examples](#examples)
  - [Echo Server](#echo-server)
  - [SQLite Explorer](#sqlite-explorer)
- [Advanced Usage](#advanced-usage)
  - [Dynamic Servers](#dynamic-servers)
  - [Low-Level Server](#low-level-server)
  - [Writing MCP Clients](#writing-mcp-clients)
  - [Proxy Authorization Requests Upstream](#proxy-authorization-requests-upstream)
  - [Backwards Compatibility](#backwards-compatibility)
- [Documentation](#documentation)
- [Contributing](#contributing)
- [License](#license)

## Overview

The Model Context Protocol allows applications to provide context for LLMs in a standardized way, separating the concerns of providing context from the actual LLM interaction. This TypeScript SDK implements the full MCP specification, making it easy to:

- Build MCP clients that can connect to any MCP server
- Create MCP servers that expose resources, prompts and tools
- Use standard transports like stdio and Streamable HTTP
- Handle all MCP protocol messages and lifecycle events

## Installation

```bash
npm install @modelcontextprotocol/sdk
```

## Quick Start

Let&#039;s create a simple MCP server that exposes a calculator tool and some data:

```typescript
import { McpServer, ResourceTemplate } from &quot;@modelcontextprotocol/sdk/server/mcp.js&quot;;
import { StdioServerTransport } from &quot;@modelcontextprotocol/sdk/server/stdio.js&quot;;
import { z } from &quot;zod&quot;;

// Create an MCP server
const server = new McpServer({
  name: &quot;Demo&quot;,
  version: &quot;1.0.0&quot;
});

// Add an addition tool
server.tool(&quot;add&quot;,
  { a: z.number(), b: z.number() },
  async ({ a, b }) =&gt; ({
    content: [{ type: &quot;text&quot;, text: String(a + b) }]
  })
);

// Add a dynamic greeting resource
server.resource(
  &quot;greeting&quot;,
  new ResourceTemplate(&quot;greeting://{name}&quot;, { list: undefined }),
  async (uri, { name }) =&gt; ({
    contents: [{
      uri: uri.href,
      text: `Hello, ${name}!`
    }]
  })
);

// Start receiving messages on stdin and sending messages on stdout
const transport = new StdioServerTransport();
await server.connect(transport);
```

## What is MCP?

The [Model Context Protocol (MCP)](https://modelcontextprotocol.io) lets you build servers that expose data and functionality to LLM applications in a secure, standardized way. Think of it like a web API, but specifically designed for LLM interactions. MCP servers can:

- Expose data through **Resources** (think of these sort of like GET endpoints; they are used to load information into the LLM&#039;s context)
- Provide functionality through **Tools** (sort of like POST endpoints; they are used to execute code or otherwise produce a side effect)
- Define interaction patterns through **Prompts** (reusable templates for LLM interactions)
- And more!

## Core Concepts

### Server

The McpServer is your core interface to the MCP protocol. It handles connection management, protocol compliance, and message routing:

```typescript
const server = new McpServer({
  name: &quot;My App&quot;,
  version: &quot;1.0.0&quot;
});
```

### Resources

Resources are how you expose data to LLMs. They&#039;re similar to GET endpoints in a REST API - they provide data but shouldn&#039;t perform significant computation or have side effects:

```typescript
// Static resource
server.resource(
  &quot;config&quot;,
  &quot;config://app&quot;,
  async (uri) =&gt; ({
    contents: [{
      uri: uri.href,
      text: &quot;App configuration here&quot;
    }]
  })
);

// Dynamic resource with parameters
server.resource(
  &quot;user-profile&quot;,
  new ResourceTemplate(&quot;users://{userId}/profile&quot;, { list: undefined }),
  async (uri, { userId }) =&gt; ({
    contents: [{
      uri: uri.href,
      text: `Profile data for user ${userId}`
    }]
  })
);
```

### Tools

Tools let LLMs take actions through your server. Unlike resources, tools are expected to perform computation and have side effects:

```typescript
// Simple tool with parameters
server.tool(
  &quot;calculate-bmi&quot;,
  {
    weightKg: z.number(),
    heightM: z.number()
  },
  async ({ weightKg, heightM }) =&gt; ({
    content: [{
      type: &quot;text&quot;,
      text: String(weightKg / (heightM * heightM))
    }]
  })
);

// Async tool with external API call
server.tool(
  &quot;fetch-weather&quot;,
  { city: z.string() },
  async ({ city }) =&gt; {
    const response = await fetch(`https://api.weather.com/${city}`);
    const data = await response.text();
    return {
      content: [{ type: &quot;text&quot;, text: data }]
    };
  }
);
```

### Prompts

Prompts are reusable templates that help LLMs interact with your server effectively:

```typescript
server.prompt(
  &quot;review-code&quot;,
  { code: z.string() },
  ({ code }) =&gt; ({
    messages: [{
      role: &quot;user&quot;,
      content: {
        type: &quot;text&quot;,
        text: `Please review this code:\n\n${code}`
      }
    }]
  })
);
```

## Running Your Server

MCP servers in TypeScript need to be connected to a transport to communicate with clients. How you start the server depends on the choice of transport:

### stdio

For command-line tools and direct integrations:

```typescript
import { McpServer } from &quot;@modelcontextprotocol/sdk/server/mcp.js&quot;;
import { StdioServerTransport } from &quot;@modelcontextprotocol/sdk/server/stdio.js&quot;;

const server = new McpServer({
  name: &quot;example-server&quot;,
  version: &quot;1.0.0&quot;
});

// ... set up server resources, tools, and prompts ...

const transport = new StdioServerTransport();
await server.connect(transport);
```

### Streamable HTTP

For remote servers, set up a Streamable HTTP transport that handles both client requests and server-to-client notifications.

#### With Session Management

In some cases, servers need to be stateful. This is achieved by [session management](https://modelcontextprotocol.io/specification/2025-03-26/basic/transports#session-management).

```typescript
import express from &quot;express&quot;;
import { randomUUID } from &quot;node:crypto&quot;;
import { McpServer } from &quot;@modelcontextprotocol/sdk/server/mcp.js&quot;;
import { StreamableHTTPServerTransport } from &quot;@modelcontextprotocol/sdk/server/streamableHttp.js&quot;;
import { isInitializeRequest } from &quot;@modelcontextprotocol/sdk/types.js&quot;



const app = express();
app.use(express.json());

// Map to store transports by session ID
const transports: { [sessionId: string]: StreamableHTTPServerTransport } = {};

// Handle POST requests for client-to-server communication
app.post(&#039;/mcp&#039;, async (req, res) =&gt; {
  // Check for existing session ID
  const sessionId = req.headers[&#039;mcp-session-id&#039;] as string | undefined;
  let transport: StreamableHTTPServerTransport;

  if (sessionId &amp;&amp; transports[sessionId]) {
    // Reuse existing transport
    transport = transports[sessionId];
  } else if (!sessionId &amp;&amp; isInitializeRequest(req.body)) {
    // New initialization request
    transport = new StreamableHTTPServerTransport({
      sessionIdGenerator: () =&gt; randomUUID(),
      onsessioninitialized: (sessionId) =&gt; {
        // Store the transport by session ID
        transports[sessionId] = transport;
      }
    });

    // Clean up transport when closed
    transport.onclose = () =&gt; {
      if (transport.sessionId) {
        delete transports[transport.sessionId];
      }
    };
    const server = new McpServer({
      name: &quot;example-server&quot;,
      version: &quot;1.0.0&quot;
    });

    // ... set up server resources, tools, and prompts ...

    // Connect to the MCP server
    await server.connect(transport);
  } else {
    // Invalid request
    res.status(400).json({
      jsonrpc: &#039;2.0&#039;,
      error: {
        code: -32000,
        message: &#039;Bad Request: No valid session ID provided&#039;,
      },
      id: null,
    });
    return;
  }

  // Handle the request
  await transport.handleRequest(req, res, req.body);
});

// Reusable handler for GET and DELETE requests
const handleSessionRequest = async (req: express.Request, res: express.Response) =&gt; {
  const sessionId = req.headers[&#039;mcp-session-id&#039;] as string | undefined;
  if (!sessionId || !transports[sessionId]) {
    res.status(400).send(&#039;Invalid or missing session ID&#039;);
    return;
  }
  
  const transport = transports[sessionId];
  await transport.handleRequest(req, res);
};

// Handle GET requests for server-to-client notifications via SSE
app.get(&#039;/mcp&#039;, handleSessionRequest);

// Handle DELETE requests for session termination
app.delete(&#039;/mcp&#039;, handleSessionRequest);

app.listen(3000);
```

#### Without Session Management (Stateless)

For simpler use cases where session management isn&#039;t needed:

```typescript
const app = express();
app.use(express.json());

app.post(&#039;/mcp&#039;, async (req: Request, res: Response) =&gt; {
  // In stateless mode, create a new instance of transport and server for each request
  // to ensure complete isolation. A single instance would cause request ID collisions
  // when multiple clients connect concurrently.
  
  try {
    const server = getServer(); 
    const transport: StreamableHTTPServerTransport = new StreamableHTTPServerTransport({
      sessionIdGenerator: undefined,
    });
    res.on(&#039;close&#039;, () =&gt; {
      console.log(&#039;Request closed&#039;);
      transport.close();
      server.close();
    });
    await server.connect(transport);
    await transport.handleRequest(req, res, req.body);
  } catch (error) {
    console.error(&#039;Error handling MCP request:&#039;, error);
    if (!res.headersSent) {
      res.status(500).json({
        jsonrpc: &#039;2.0&#039;,
        error: {
          code: -32603,
          message: &#039;Internal server error&#039;,
        },
        id: null,
      });
    }
  }
});

app.get(&#039;/mcp&#039;, async (req: Request, res: Response) =&gt; {
  console.log(&#039;Received GET MCP request&#039;);
  res.writeHead(405).end(JSON.stringify({
    jsonrpc: &quot;2.0&quot;,
    error: {
      code: -32000,
      message: &quot;Method not allowed.&quot;
    },
    id: null
  }));
});

app.delete(&#039;/mcp&#039;, async (req: Request, res: Response) =&gt; {
  console.log(&#039;Received DELETE MCP request&#039;);
  res.writeHead(405).end(JSON.stringify({
    jsonrpc: &quot;2.0&quot;,
    error: {
      code: -32000,
      message: &quot;Method not allowed.&quot;
    },
    id: null
  }));
});


// Start the server
const PORT = 3000;
app.listen(PORT, () =&gt; {
  console.log(`MCP Stateless Streamable HTTP Server listening on port ${PORT}`);
});

```

This stateless approach is useful for:

- Simple API wrappers
- RESTful scenarios where each request is independent
- Horizontally scaled deployments without shared session state

### Testing and Debugging

To test your server, you can use the [MCP Inspector](https://github.com/modelcontextprotocol/inspector). See its README for more information.

## Examples

### Echo Server

A simple server demonstrating resources, tools, and prompts:

```typescript
import { McpServer, ResourceTemplate } from &quot;@modelcontextprotocol/sdk/server/mcp.js&quot;;
import { z } from &quot;zod&quot;;

const server = new McpServer({
  name: &quot;Echo&quot;,
  version: &quot;1.0.0&quot;
});

server.resource(
  &quot;echo&quot;,
  new ResourceTemplate(&quot;echo://{message}&quot;, { list: undefined }),
  async (uri, { message }) =&gt; ({
    contents: [{
      uri: uri.href,
      text: `Resource echo: ${message}`
    }]
  })
);

server.tool(
  &quot;echo&quot;,
  { message: z.string() },
  async ({ message }) =&gt; ({
    content: [{ type: &quot;text&quot;, text: `Tool echo: ${message}` }]
  })
);

server.prompt(
  &quot;echo&quot;,
  { message: z.string() },
  ({ message }) =&gt; ({
    messages: [{
      role: &quot;user&quot;,
      content: {
        type: &quot;text&quot;,
        text: `Please process this message: ${message}`
      }
    }]
  })
);
```

### SQLite Explorer

A more complex example showing database integration:

```typescript
import { McpServer } from &quot;@modelcontextprotocol/sdk/server/mcp.js&quot;;
import sqlite3 from &quot;sqlite3&quot;;
import { promisify } from &quot;util&quot;;
import { z } from &quot;zod&quot;;

const server = new McpServer({
  name: &quot;SQLite Explorer&quot;,
  version: &quot;1.0.0&quot;
});

// Helper to create DB connection
const getDb = () =&gt; {
  const db = new sqlite3.Database(&quot;database.db&quot;);
  return {
    all: promisify&lt;string, any[]&gt;(db.all.bind(db)),
    close: promisify(db.close.bind(db))
  };
};

server.resource(
  &quot;schema&quot;,
  &quot;schema://main&quot;,
  async (uri) =&gt; {
    const db = getDb();
    try {
      const tables = await db.all(
        &quot;SELECT sql FROM sqlite_master WHERE type=&#039;table&#039;&quot;
      );
      return {
        contents: [{
          uri: uri.href,
          text: tables.map((t: {sql: string}) =&gt; t.sql).join(&quot;\n&quot;)
        }]
      };
    } finally {
      await db.close();
    }
  }
);

server.tool(
  &quot;query&quot;,
  { sql: z.string() },
  async ({ sql }) =&gt; {
    const db = getDb();
    try {
      const results = await db.all(sql);
      return {
        content: [{
          type: &quot;text&quot;,
          text: JSON.stringify(results, null, 2)
        }]
      };
    } catch (err: unknown) {
      const error = err as Error;
      return {
        content: [{
          type: &quot;text&quot;,
          text: `Error: ${error.message}`
        }],
        isError: true
      };
    } finally {
      await db.close();
    }
  }
);
```

## Advanced Usage

### Dynamic Servers

If you want to offer an initial set of tools/prompts/resources, but later add additional ones based on user action or external state change, you can add/update/remove them _after_ the Server is connected. This will automatically emit the corresponding `listChanged` notifications:

```ts
import { McpServer } from &quot;@modelcontextprotocol/sdk/server/mcp.js&quot;;
import { z } from &quot;zod&quot;;

const server = new McpServer({
  name: &quot;Dynamic Example&quot;,
  version: &quot;1.0.0&quot;
});

const listMessageTool = server.tool(
  &quot;listMessages&quot;,
  { channel: z.string() },
  async ({ channel }) =&gt; ({
    content: [{ type: &quot;text&quot;, text: await listMessages(channel) }]
  })
);

const putMessageTool = server.tool(
  &quot;putMessage&quot;,
  { channel: z.string(), message: z.string() },
  async ({ channel, message }) =&gt; ({
    content: [{ type: &quot;text&quot;, text: await putMessage(channel, string) }]
  })
);
// Until we upgrade auth, `putMessage` is disabled (won&#039;t show up in listTools)
putMessageTool.disable()

const upgradeAuthTool = server.tool(
  &quot;upgradeAuth&quot;,
  { permission: z.enum([&quot;write&#039;, vadmin&quot;])},
  // Any mutations here will automatically emit `listChanged` notifications
  async ({ permission }) =&gt; {
    const { ok, err, previous } = await upgradeAuthAndStoreToken(permission)
    if (!ok) return {content: [{ type: &quot;text&quot;, text: `Error: ${err}` }]}

    // If we previously had read-only access, &#039;putMessage&#039; is now available
    if (previous === &quot;read&quot;) {
      putMessageTool.enable()
    }

    if (permission === &#039;write&#039;) {
      // If we&#039;ve just upgraded to &#039;write&#039; permissions, we can still call &#039;upgradeAuth&#039; 
      // but can only upgrade to &#039;admin&#039;. 
      upgradeAuthTool.update({
        paramSchema: { permission: z.enum([&quot;admin&quot;]) }, // change validation rules
      })
    } else {
      // If we&#039;re now an admin, we no longer have anywhere to upgrade to, so fully remove that tool
      upgradeAuthTool.remove()
    }
  }
)

// Connect as normal
const transport = new StdioServerTransport();
await server.connect(transport);
```

### Low-Level Server

For more control, you can use the low-level Server class directly:

```typescript
import { Server } from &quot;@modelcontextprotocol/sdk/server/index.js&quot;;
import { StdioServerTransport } from &quot;@modelcontextprotocol/sdk/server/stdio.js&quot;;
import {
  ListPromptsRequestSchema,
  GetPromptRequestSchema
} from &quot;@modelcontextprotocol/sdk/types.js&quot;;

const server = new Server(
  {
    name: &quot;example-server&quot;,
    version: &quot;1.0.0&quot;
  },
  {
    capabilities: {
      prompts: {}
    }
  }
);

server.setRequestHandler(ListPromptsRequestSchema, async () =&gt; {
  return {
    prompts: [{
      name: &quot;example-prompt&quot;,
      description: &quot;An example prompt template&quot;,
      arguments: [{
        name: &quot;arg1&quot;,
        description: &quot;Example argument&quot;,
        required: true
      }]
    }]
  };
});

server.setRequestHandler(GetPromptRequestSchema, async (request) =&gt; {
  if (request.params.name !== &quot;example-prompt&quot;) {
    throw new Error(&quot;Unknown prompt&quot;);
  }
  return {
    description: &quot;Example prompt&quot;,
    messages: [{
      role: &quot;user&quot;,
      content: {
        type: &quot;text&quot;,
        text: &quot;Example prompt text&quot;
      }
    }]
  };
});

const transport = new StdioServerTransport();
await server.connect(transport);
```

### Writing MCP Clients

The SDK provides a high-level client interface:

```typescript
import { Client } from &quot;@modelcontextprotocol/sdk/client/index.js&quot;;
import { StdioClientTransport } from &quot;@modelcontextprotocol/sdk/client/stdio.js&quot;;

const transport = new StdioClientTransport({
  command: &quot;node&quot;,
  args: [&quot;server.js&quot;]
});

const client = new Client(
  {
    name: &quot;example-client&quot;,
    version: &quot;1.0.0&quot;
  }
);

await client.connect(transport);

// List prompts
const prompts = await client.listPrompts();

// Get a prompt
const prompt = await client.getPrompt({
  name: &quot;example-prompt&quot;,
  arguments: {
    arg1: &quot;value&quot;
  }
});

// List resources
const resources = await client.listResources();

// Read a resource
const resource = await client.readResource({
  uri: &quot;file:///example.txt&quot;
});

// Call a tool
const result = await client.callTool({
  name: &quot;example-tool&quot;,
  arguments: {
    arg1: &quot;value&quot;
  }
});
```

### Proxy Authorization Requests Upstream

You can proxy OAuth requests to an external authorization provider:

```typescript
import express from &#039;express&#039;;
import { ProxyOAuthServerProvider } from &#039;@modelcontextprotocol/sdk/server/auth/providers/proxyProvider.js&#039;;
import { mcpAuthRouter } from &#039;@modelcontextprotocol/sdk/server/auth/router.js&#039;;

const app = express();

const proxyProvider = new ProxyOAuthServerProvider({
    endpoints: {
        authorizationUrl: &quot;https://auth.external.com/oauth2/v1/authorize&quot;,
        tokenUrl: &quot;https://auth.external.com/oauth2/v1/token&quot;,
        revocationUrl: &quot;https://auth.external.com/oauth2/v1/revoke&quot;,
    },
    verifyAccessToken: async (token) =&gt; {
        return {
            token,
            clientId: &quot;123&quot;,
            scopes: [&quot;openid&quot;, &quot;email&quot;, &quot;profile&quot;],
        }
    },
    getClient: async (client_id) =&gt; {
        return {
            client_id,
            redirect_uris: [&quot;http://localhost:3000/callback&quot;],
        }
    }
})

app.use(mcpAuthRouter({
    provider: proxyProvider,
    issuerUrl: new URL(&quot;http://auth.external.com&quot;),
    baseUrl: new URL(&quot;http://mcp.example.com&quot;),
    serviceDocumentationUrl: new URL(&quot;https://docs.example.com/&quot;),
}))
```

This setup allows you to:

- Forward OAuth requests to an external provider
- Add custom token validation logic
- Manage client registrations
- Provide custom documentation URLs
- Maintain control over the OAuth flow while delegating to an external provider

### Backwards Compatibility

Clients and servers with StreamableHttp tranport can maintain [backwards compatibility](https://modelcontextprotocol.io/specification/2025-03-26/basic/transports#backwards-compatibility) with the deprecated HTTP+SSE transport (from protocol version 2024-11-05) as follows

#### Client-Side Compatibility

For clients that need to work with both Streamable HTTP and older SSE servers:

```typescript
import { Client } from &quot;@modelcontextprotocol/sdk/client/index.js&quot;;
import { StreamableHTTPClientTransport } from &quot;@modelcontextprotocol/sdk/client/streamableHttp.js&quot;;
import { SSEClientTransport } from &quot;@modelcontextprotocol/sdk/client/sse.js&quot;;
let client: Client|undefined = undefined
const baseUrl = new URL(url);
try {
  client = new Client({
    name: &#039;streamable-http-client&#039;,
    version: &#039;1.0.0&#039;
  });
  const transport = new StreamableHTTPClientTransport(
    new UR

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[angular/angular]]></title>
            <link>https://github.com/angular/angular</link>
            <guid>https://github.com/angular/angular</guid>
            <pubDate>Sat, 24 May 2025 00:04:40 GMT</pubDate>
            <description><![CDATA[Deliver web apps with confidence 🚀]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/angular/angular">angular/angular</a></h1>
            <p>Deliver web apps with confidence 🚀</p>
            <p>Language: TypeScript</p>
            <p>Stars: 97,791</p>
            <p>Forks: 26,221</p>
            <p>Stars today: 19 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;Angular - The modern web developer&#039;s platform&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;adev/src/assets/images/press-kit/angular_icon_gradient.gif&quot; alt=&quot;angular-logo&quot; width=&quot;120px&quot; height=&quot;120px&quot;/&gt;
  &lt;br&gt;
  &lt;em&gt;Angular is a development platform for building mobile and desktop web applications
    &lt;br&gt; using TypeScript/JavaScript and other languages.&lt;/em&gt;
  &lt;br&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://angular.dev/&quot;&gt;&lt;strong&gt;angular.dev&lt;/strong&gt;&lt;/a&gt;
  &lt;br&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;CONTRIBUTING.md&quot;&gt;Contributing Guidelines&lt;/a&gt;
  ·
  &lt;a href=&quot;https://github.com/angular/angular/issues&quot;&gt;Submit an Issue&lt;/a&gt;
  ·
  &lt;a href=&quot;https://blog.angular.dev/&quot;&gt;Blog&lt;/a&gt;
  &lt;br&gt;
  &lt;br&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.npmjs.com/@angular/core&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/v/@angular/core.svg?logo=npm&amp;logoColor=fff&amp;label=NPM+package&amp;color=limegreen&quot; alt=&quot;Angular on npm&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;hr&gt;

## Documentation

Get started with Angular, learn the fundamentals and explore advanced topics on our documentation website.

- [Getting Started][quickstart]
- [Architecture][architecture]
- [Components and Templates][componentstemplates]
- [Forms][forms]
- [API][api]

### Advanced

- [Angular Elements][angularelements]
- [Server Side Rendering][ssr]
- [Schematics][schematics]
- [Lazy Loading][lazyloading]
- [Animations][animations]

### Local Development

To contribute to the Angular Docs, check out the [Angular.dev README](adev/README.md)

## Development Setup

### Prerequisites

- Install [Node.js] which includes [Node Package Manager][npm]

### Setting Up a Project

Install the Angular CLI globally:

```
npm install -g @angular/cli
```

Create workspace:

```
ng new [PROJECT NAME]
```

Run the application:

```
cd [PROJECT NAME]
ng serve
```

Angular is cross-platform, fast, scalable, has incredible tooling, and is loved by millions.

## Quickstart

[Get started in 5 minutes][quickstart].

## Ecosystem

&lt;p&gt;
  &lt;img src=&quot;/contributing-docs/images/angular-ecosystem-logos.png&quot; alt=&quot;angular ecosystem logos&quot; width=&quot;500px&quot; height=&quot;auto&quot;&gt;
&lt;/p&gt;

- [Angular Command Line (CLI)][cli]
- [Angular Material][angularmaterial]

## Changelog

[Learn about the latest improvements][changelog].

## Upgrading

Check out our [upgrade guide](https://angular.dev/update-guide/) to find out the best way to upgrade your project.

## Contributing

### Contributing Guidelines

Read through our [contributing guidelines][contributing] to learn about our submission process, coding rules, and more.

### Want to Help?

Want to report a bug, contribute some code, or improve the documentation? Excellent! Read up on our guidelines for [contributing][contributing] and then check out one of our issues labeled as &lt;kbd&gt;[help wanted](https://github.com/angular/angular/labels/help%20wanted)&lt;/kbd&gt; or &lt;kbd&gt;[good first issue](https://github.com/angular/angular/labels/good%20first%20issue)&lt;/kbd&gt;.

### Code of Conduct

Help us keep Angular open and inclusive. Please read and follow our [Code of Conduct][codeofconduct].

## Community

Join the conversation and help the community.

- [X (formerly Twitter)][X (formerly Twitter)]
- [Bluesky][bluesky]
- [Discord][discord]
- [YouTube][youtube]
- [StackOverflow][stackoverflow]
- Find a Local [Meetup][meetup]

[![Love Angular badge](https://img.shields.io/badge/angular-love-blue?logo=angular&amp;angular=love)](https://www.github.com/angular/angular)

**Love Angular? Give our repo a star :star: :arrow_up:.**

[contributing]: CONTRIBUTING.md
[quickstart]: https://angular.dev/tutorials/learn-angular
[changelog]: CHANGELOG.md
[ng]: https://angular.dev
[documentation]: https://angular.dev/overview
[angularmaterial]: https://material.angular.dev/
[cli]: https://angular.dev/tools/cli
[architecture]: https://angular.dev/essentials
[componentstemplates]: https://angular.dev/tutorials/learn-angular/1-components-in-angular
[forms]: https://angular.dev/tutorials/learn-angular/15-forms
[api]: https://angular.dev/api
[angularelements]: https://angular.dev/guide/elements
[ssr]: https://angular.dev/guide/ssr
[schematics]: https://angular.dev/tools/cli/schematics
[lazyloading]: https://angular.dev/guide/ngmodules/lazy-loading
[node.js]: https://nodejs.org/
[npm]: https://www.npmjs.com/get-npm
[codeofconduct]: CODE_OF_CONDUCT.md
[X (formerly Twitter)]: https://www.twitter.com/angular
[bluesky]: https://bsky.app/profile/angular.dev
[discord]: https://discord.gg/angular
[stackoverflow]: https://stackoverflow.com/questions/tagged/angular
[youtube]: https://youtube.com/angular
[meetup]: https://www.meetup.com/find/?keywords=angular
[animations]: https://angular.dev/guide/animations
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>