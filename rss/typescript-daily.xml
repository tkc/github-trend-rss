<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Fri, 26 Sep 2025 00:05:04 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[humanlayer/humanlayer]]></title>
            <link>https://github.com/humanlayer/humanlayer</link>
            <guid>https://github.com/humanlayer/humanlayer</guid>
            <pubDate>Fri, 26 Sep 2025 00:05:04 GMT</pubDate>
            <description><![CDATA[The best way to get AI to solve hard problems in complex codebases.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/humanlayer/humanlayer">humanlayer/humanlayer</a></h1>
            <p>The best way to get AI to solve hard problems in complex codebases.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 2,930</p>
            <p>Forks: 259</p>
            <p>Stars today: 96 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;

![Wordmark Logo of HumanLayer](./docs/images/wordmark-light.svg)

&lt;/div&gt;

🚧 **HumanLayer** is undergoing some changes...stay tuned! 🚧

&lt;div align=&quot;center&quot;&gt;

&lt;h3&gt;

[HumanLayer Code](https://humanlayer.dev/code) | [Discord](https://humanlayer.dev/discord) | [Release](https://github.com/humanlayer/humanlayer/releases)


&lt;/h3&gt;

[![GitHub Repo stars](https://img.shields.io/github/stars/humanlayer/humanlayer)](https://github.com/humanlayer/humanlayer)
[![License: Apache-2](https://img.shields.io/badge/License-Apache-green.svg)](https://opensource.org/licenses/Apache-2)

&lt;img referrerpolicy=&quot;no-referrer-when-downgrade&quot; src=&quot;https://static.scarf.sh/a.png?x-pxid=fcfc0926-d841-47fb-b8a6-6aba3a6c3228&quot; /&gt;

&lt;/div&gt;

## Table of contents

- [Getting Started](#getting-started)
- [Why HumanLayer?](#why-humanlayer)
- [Key Features](#key-features)
- [Examples](#examples)
- [Roadmap](#roadmap)
- [Contributing](#contributing)
- [License](#license)

## Why HumanLayer?

Functions and tools are a key part of [Agentic Workflows](https://www.deeplearning.ai/the-batch/how-agents-can-improve-llm-performance). They enable LLMs to interact meaningfully with the outside world and automate broad scopes of impactful work. Correct and accurate function calling is essential for AI agents that do meaningful things like book appointments, interact with customers, manage billing information, write+execute code, and more.

[![Tool Calling Loop from Louis Dupont](https://miro.medium.com/v2/resize:fit:1400/format:webp/1*r8rEqjGZs_e6dibWeaqaQg.png)](https://louis-dupont.medium.com/transforming-software-interactions-with-tool-calling-and-llms-dc39185247e9)
_From https://louis-dupont.medium.com/transforming-software-interactions-with-tool-calling-and-llms-dc39185247e9_

**However**, the most useful functions we can give to an LLM are also the most risky. We can all imagine the value of an AI Database Administrator that constantly tunes and refactors our SQL database, but most teams wouldn&#039;t give an LLM access to run arbitrary SQL statements against a production database (heck, we mostly don&#039;t even let humans do that). That is:

&lt;div align=&quot;center&quot;&gt;
&lt;h3&gt;&lt;blockquote&gt;Even with state-of-the-art agentic reasoning and prompt routing, LLMs are not sufficiently reliable to be given access to high-stakes functions without human oversight&lt;/blockquote&gt;&lt;/h3&gt;
&lt;/div&gt;

To better define what is meant by &quot;high stakes&quot;, some examples:

- **Low Stakes**: Read Access to public data (e.g. search wikipedia, access public APIs and DataSets)
- **Low Stakes**: Communicate with agent author (e.g. an engineer might empower an agent to send them a private Slack message with updates on progress)
- **Medium Stakes**: Read Access to Private Data (e.g. read emails, access calendars, query a CRM)
- **Medium Stakes**: Communicate with strict rules (e.g. sending based on a specific sequence of hard-coded email templates)
- **High Stakes**: Communicate on my Behalf or on behalf of my Company (e.g. send emails, post to slack, publish social/blog content)
- **High Stakes**: Write Access to Private Data (e.g. update CRM records, modify feature toggles, update billing information)

&lt;div align=&quot;center&quot;&gt;&lt;img style=&quot;width: 600px&quot; alt=&quot;Image showing the levels of function stakes stacked on top of one another&quot; src=&quot;./docs/images/function_stakes.png&quot;&gt;&lt;/div&gt;

The high stakes functions are the ones that are the most valuable and promise the most impact in automating away human workflows. But they are also the ones where &quot;90% accuracy&quot; is not acceptable. Reliability is further impacted by today&#039;s LLMs&#039; tendency to hallucinate or craft low-quality text that is clearly AI generated. The sooner teams can get Agents reliably and safely calling these tools with high-quality inputs, the sooner they can reap massive benefits.

HumanLayer provides a set of tools to _deterministically_ guarantee human oversight of high stakes function calls. Even if the LLM makes a mistake or hallucinates, HumanLayer is baked into the tool/function itself, guaranteeing a human in the loop.

&lt;div align=&quot;center&quot;&gt;&lt;img style=&quot;width: 400px&quot; alt=&quot;HumanLayer @require_approval decorator wrapping the Commnicate on my behalf function&quot; src=&quot;./docs/images/humanlayer_require_approval.png&quot;&gt;&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;h3&gt;&lt;blockquote&gt;
HumanLayer provides a set of tools to *deterministically* guarantee human oversight of high stakes function calls
&lt;/blockquote&gt;&lt;/h3&gt;
&lt;/div&gt;

### The Future: Autonomous Agents and the &quot;Outer Loop&quot;

_Read More: [OpenAI&#039;s RealTime API is a step towards outer-loop agents](https://theouterloop.substack.com/p/openais-realtime-api-is-a-step-towards)_

Between `require_approval` and `human_as_tool`, HumanLayer is built to empower the next generation of AI agents - Autonomous Agents, but it&#039;s just a piece of the puzzle. To clarify &quot;next generation&quot;, we can summarize briefly the history of LLM applications.

- **Gen 1**: Chat - human-initiated question / response interface
- **Gen 2**: Agentic Assistants - frameworks drive prompt routing, tool calling, chain of thought, and context window management to get much more reliability and functionality. Most workflows are initiated by humans in single-shot &quot;here&#039;s a task, go do it&quot; or rolling chat interfaces.
- **Gen 3**: Autonomous Agents - no longer human initiated, agents will live in the &quot;outer loop&quot; driving toward their goals using various tools and functions. Human/Agent communication is Agent-initiated rather than human-initiated.

![gen2 vs gen 3 agents](./docs/images/gen-2-gen-3-agents.png)

Gen 3 autonomous agents will need ways to consult humans for input on various tasks. In order for these agents to perform actual useful work, they&#039;ll need human oversight for sensitive operations.

These agents will require ways to contact one or more humans across various channels including chat, email, sms, and more.

While early versions of these agents may technically be &quot;human initiated&quot; in that they get kicked off on a regular schedule by e.g. a cron or similar, the best ones will be managing their own scheduling and costs. This will require toolkits for inspecting costs and something akin to `sleep_until`. They&#039;ll need to run in orchestration frameworks that can durably serialize and resume agent workflows across tool calls that might not return for hours or days. These frameworks will need to support context window management by a &quot;manager LLM&quot; and enable agents to fork sub-chains to handle specialized tasks and roles.

Example use cases for these outer loop agents include [the linkedin inbox assistant](./examples/langchain/04-human_as_tool_linkedin.py) and [the customer onboarding assistant](./examples/langchain/05-approvals_and_humans_composite.py), but that&#039;s really just scratching the surface.

## Contributing

The HumanLayer SDK and docs are open-source and we welcome contributions in the form of issues, documentation, pull requests, and more. See [CONTRIBUTING.md](./CONTRIBUTING.md) for more details.

## Fun Stuff

[![Star History Chart](https://api.star-history.com/svg?repos=humanlayer/humanlayer&amp;type=Date)](https://star-history.com/#humanlayer/humanlayer&amp;Date)


## Development Conventions

### TODO Annotations

We use a priority-based TODO annotation system throughout the codebase:

- `TODO(0)`: Critical - never merge
- `TODO(1)`: High - architectural flaws, major bugs
- `TODO(2)`: Medium - minor bugs, missing features
- `TODO(3)`: Low - polish, tests, documentation
- `TODO(4)`: Questions/investigations needed
- `PERF`: Performance optimization opportunities

## License

The HumanLayer SDK and CodeLayer sources in this repo are licensed under the Apache 2 License.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[ZuodaoTech/everyone-can-use-english]]></title>
            <link>https://github.com/ZuodaoTech/everyone-can-use-english</link>
            <guid>https://github.com/ZuodaoTech/everyone-can-use-english</guid>
            <pubDate>Fri, 26 Sep 2025 00:05:03 GMT</pubDate>
            <description><![CDATA[人人都能用英语]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ZuodaoTech/everyone-can-use-english">ZuodaoTech/everyone-can-use-english</a></h1>
            <p>人人都能用英语</p>
            <p>Language: TypeScript</p>
            <p>Stars: 29,233</p>
            <p>Forks: 4,233</p>
            <p>Stars today: 466 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;./enjoy/assets/icon.png&quot; alt=&quot;Clash&quot; width=&quot;128&quot; /&gt;
&lt;/div&gt;

&lt;h3 align=&quot;center&quot;&gt;
AI 是当今世界上最好的外语老师，Enjoy 做 AI 最好的助教。
&lt;/h3&gt;

[![Deploy 1000h website](https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/deploy-1000h.yml/badge.svg)](https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/deploy-1000h.yml)
[![Test Enjoy App](https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/test-enjoy-app.yml/badge.svg)](https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/test-enjoy-app.yml)
[![Release Enjoy App](https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/release-enjoy-app.yml/badge.svg)](https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/release-enjoy-app.yml)
![Latest Version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fenjoy.bot%2Fapi%2Fconfig%2Fapp_version&amp;query=%24.version&amp;label=Latest&amp;link=https%3A%2F%2F1000h.org%2Fenjoy-app%2Finstall.html)
![Recording Duration](https://img.shields.io/endpoint?url=https%3A%2F%2Fenjoy.bot%2Fapi%2Fbadges%2Frecordings)

---

## 网页版

Enjoy 网页版已经上线，可访问 [https://enjoy.bot](https://enjoy.bot) 直接使用。

&lt;div align=&quot;center&quot; style=&quot;display:flex;overflow:auto;gap:10px;&quot;&gt;
  &lt;img src=&quot;./enjoy/snapshots/web-audios.jpg&quot; alt=&quot;Audios&quot; width=&quot;300&quot; /&gt;
  &lt;img src=&quot;./enjoy/snapshots/web-add-audio.jpg&quot; alt=&quot;Add Audio&quot; width=&quot;300&quot; /&gt;
  &lt;img src=&quot;./enjoy/snapshots/web-audio-shadow.jpg&quot; alt=&quot;Shadow&quot; width=&quot;300&quot; /&gt;
  &lt;img src=&quot;./enjoy/snapshots/web-audio-assessment.jpg&quot; alt=&quot;Assessment&quot; width=&quot;300&quot; /&gt;
  &lt;img src=&quot;./enjoy/snapshots/web-new-chat.jpg&quot; alt=&quot;New Chat&quot; width=&quot;300&quot; /&gt;
  &lt;img src=&quot;./enjoy/snapshots/web-chat.jpg&quot; alt=&quot;Chat&quot; width=&quot;300&quot; /&gt;
&lt;/div&gt;

---

## 桌面版安装及使用

下载及使用相关说明，请参阅 [文档](https://1000h.org/enjoy-app/)。

## 预览

&lt;div align=&quot;center&quot; style=&quot;display:flex;overflow:auto;&quot;&gt;
  &lt;img src=&quot;./enjoy/snapshots/home.png&quot; alt=&quot;Home&quot; width=&quot;800&quot; /&gt;

  &lt;img src=&quot;./enjoy/snapshots/shadow.png&quot; alt=&quot;Home&quot; width=&quot;800&quot; /&gt;

  &lt;img src=&quot;./enjoy/snapshots/assessment.png&quot; alt=&quot;Home&quot; width=&quot;800&quot; /&gt;

  &lt;img src=&quot;./enjoy/snapshots/document.png&quot; alt=&quot;Home&quot; width=&quot;800&quot; /&gt;

  &lt;img src=&quot;./enjoy/snapshots/chat.png&quot; alt=&quot;Home&quot; width=&quot;800&quot; /&gt;
&lt;/div&gt;

## 桌面版开发

```bash
yarn install
yarn enjoy:start
```

## 相关阅读

### 一千小时（2024）

- [简要说明](https://1000h.org/intro.html)
- [训练任务](https://1000h.org/training-tasks/kick-off.html)
- [语音塑造](https://1000h.org/sounds-of-american-english/0-intro.html)
- [大脑内部](https://1000h.org/in-the-brain/01-inifinite.html)
- [自我训练](https://1000h.org/self-training/00-intro.html)

### 人人都能用英语（2010）

- [简介](./book/README.md)
- [第一章：起点](./book/chapter1.md)
- [第二章：口语](./book/chapter2.md)
- [第三章：语音](./book/chapter3.md)
- [第四章：朗读](./book/chapter4.md)
- [第五章：词典](./book/chapter5.md)
- [第六章：语法](./book/chapter6.md)
- [第七章：精读](./book/chapter7.md)
- [第八章：叮嘱](./book/chapter8.md)
- [后记](./book/end.md)

## 常见问题

请查询 [文档 FAQ](https://1000h.org/enjoy-app/faq.html)。
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[TanStack/router]]></title>
            <link>https://github.com/TanStack/router</link>
            <guid>https://github.com/TanStack/router</guid>
            <pubDate>Fri, 26 Sep 2025 00:05:02 GMT</pubDate>
            <description><![CDATA[🤖 Fully typesafe Router for React (and friends) w/ built-in caching, 1st class search-param APIs, client-side cache integration and isomorphic rendering.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/TanStack/router">TanStack/router</a></h1>
            <p>🤖 Fully typesafe Router for React (and friends) w/ built-in caching, 1st class search-param APIs, client-side cache integration and isomorphic rendering.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 11,267</p>
            <p>Forks: 1,217</p>
            <p>Stars today: 40 stars today</p>
            <h2>README</h2><pre>&lt;img src=&quot;https://static.scarf.sh/a.png?x-pxid=d988eb79-b0fc-4a2b-8514-6a1ab932d188&quot; /&gt;

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;

&lt;img
src=&quot;./media/header_router.png&quot;
alt=&quot;TanStack Router&quot;
/&gt;

## TanStack Router

A modern router designed for type safety, data‑driven navigation, and seamless developer experience.

- End‑to‑end type safety (routes, params, loaders)
- Schema‑driven search params with validation
- Built‑in caching, prefetching &amp; invalidation
- Nested layouts, transitions &amp; error boundaries

### [Read the Router Docs →](https://tanstack.com/router)

&lt;/td&gt;
&lt;td&gt;

&lt;img
src=&quot;./media/header_start.png&quot;
alt=&quot;TanStack Start&quot;
/&gt;

## TanStack Start

A full‑stack framework built on Router, designed for server rendering, streaming, and production‑ready deployments.

- Full‑document SSR &amp; streaming
- Server functions &amp; end‑to‑end type safety
- Deployment‑ready bundling &amp; builds
- All the power of TanStack Router, plus full‑stack features

### [Read the Start Docs →](https://tanstack.com/start)

&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;br /&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://npmjs.com/package/@tanstack/react-router&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/npm/dm/@tanstack/react-router.svg&quot; alt=&quot;npm downloads&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/tanstack/router&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/stars/tanstack/router.svg?style=social&amp;label=Star&quot; alt=&quot;GitHub stars&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://bundlephobia.com/result?p=@tanstack/react-router&quot;&gt;
    &lt;img src=&quot;https://badgen.net/bundlephobia/minzip/@tanstack/react-router&quot; alt=&quot;Bundle size&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;#badge&quot;&gt;
    &lt;img alt=&quot;semantic-release&quot; src=&quot;https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg&quot;&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://bestofjs.org/projects/tanstack-router&quot;&gt;&lt;img alt=&quot;Best of JS&quot; src=&quot;https://img.shields.io/endpoint?url=https://bestofjs-serverless.now.sh/api/project-badge?fullName=TanStack%2Frouter%26since=daily&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://twitter.com/tan_stack&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/tan_stack.svg?style=social&quot; alt=&quot;Follow @TanStack&quot;/&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;

### [Become a Sponsor!](https://github.com/sponsors/tannerlinsley/)

&lt;/div&gt;

## Get Involved

- We welcome issues and pull requests!
- Participate in [GitHub discussions](https://github.com/TanStack/router/discussions)
- Chat with the community on [Discord](https://discord.com/invite/WrRKjPJ)
- See [CONTRIBUTING.md](./CONTRIBUTING.md) for setup instructions

## Partners

&lt;table align=&quot;center&quot;&gt;
  &lt;tr&gt;
    &lt;td&gt;
        &lt;a href=&quot;https://www.coderabbit.ai/?via=tanstack&amp;dub_id=aCcEEdAOqqutX6OS&quot;&gt;
			&lt;picture&gt;
			  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://tanstack.com/assets/coderabbit-dark-CMcuvjEy.svg&quot; height=&quot;40&quot; /&gt;
			  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://tanstack.com/assets/coderabbit-light-DVMJ2jHi.svg&quot; height=&quot;40&quot; /&gt;
			  &lt;img src=&quot;https://tanstack.com/assets/coderabbit-dark-CMcuvjEy.svg&quot; height=&quot;40&quot; alt=&quot;CodeRabbit&quot; /&gt;
			&lt;/picture&gt;        
		&lt;/a&gt;
    &lt;/td&gt;
    &lt;td padding=&quot;20&quot;&gt;
      &lt;a href=&quot;https://www.cloudflare.com?utm_source=tanstack&quot;&gt;
         &lt;picture&gt;
    		  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://tanstack.com/assets/cloudflare-white-DQDB7UaL.svg&quot; height=&quot;60&quot; /&gt;
    		  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://tanstack.com/assets/cloudflare-black-CPufaW0B.svg&quot; height=&quot;60&quot; /&gt;
    		  &lt;img src=&quot;https://tanstack.com/assets/cloudflare-black-CPufaW0B.svg&quot; height=&quot;60&quot; alt=&quot;Cloudflare&quot; /&gt;
    		&lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://netlify.com?utm_source=tanstack&quot;&gt;
      &lt;picture&gt;
        &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/tanstack/tanstack.com/main/src/images/netlify-dark.svg&quot; height=&quot;70&quot;/&gt;
        &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/tannerlinsley/files/master/partners/netlify.svg&quot; height=&quot;70&quot;/&gt;
        &lt;img src=&quot;https://raw.githubusercontent.com/tanstack/tanstack.com/main/src/images/netlify-dark.svg&quot; height=&quot;70&quot; alt=&quot;Netlify&quot; /&gt;
      &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://neon.tech?utm_source=tanstack&quot;&gt;
		  &lt;picture&gt;
	        &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/tanstack/tanstack.com/main/src/images/neon-dark.svg&quot; height=&quot;50&quot;/&gt;
	        &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/tannerlinsley/files/master/partners/neon.svg&quot; height=&quot;50&quot;/&gt;
	        &lt;img src=&quot;https://raw.githubusercontent.com/tannerlinsley/files/master/partners/neon.svg&quot; height=&quot;50&quot; alt=&quot;Neon&quot; /&gt;
		  &lt;/picture&gt;
	  &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://go.clerk.com/wOwHtuJ&quot;&gt;
        &lt;picture&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://tanstack.com/assets/clerk-logo-dark-CRE22T_2.svg&quot; height=&quot;40&quot;/&gt;
          &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/tannerlinsley/files/master/partners/clerk.svg&quot; height=&quot;40&quot;/&gt;
          &lt;img src=&quot;https://tanstack.com/assets/clerk-logo-dark-CRE22T_2.svg&quot; height=&quot;40&quot; alt=&quot;Clerk&quot; /&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://convex.dev?utm_source=tanstack&quot;&gt;
        &lt;picture&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/tanstack/tanstack.com/main/src/images/convex-white.svg&quot; height=&quot;30&quot;/&gt;
          &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/tannerlinsley/files/master/partners/convex.svg&quot; height=&quot;30&quot;/&gt;
          &lt;img src=&quot;https://raw.githubusercontent.com/tannerlinsley/files/master/partners/convex.svg&quot; height=&quot;30&quot; alt=&quot;Convex&quot; /&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://sentry.io?utm_source=tanstack&quot;&gt;
        &lt;picture&gt;
           &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/tanstack/tanstack.com/main/src/images/sentry-wordmark-light.svg&quot; height=&quot;50&quot;/&gt;
          &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/tannerlinsley/files/master/partners/sentry.svg&quot; height=&quot;50&quot;/&gt;
          &lt;img src=&quot;https://raw.githubusercontent.com/tannerlinsley/files/master/partners/sentry.svg&quot; height=&quot;50&quot; alt=&quot;Sentry&quot; /&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://www.prisma.io?utm_source=tanstack&amp;via=tanstack&quot;&gt;
        &lt;picture&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://tanstack.com/assets/prisma-dark-DwgDxLwn.svg&quot; height=&quot;50&quot;/&gt;
          &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://tanstack.com/assets/prisma-light-Cloa3Onm.svg&quot; height=&quot;50&quot;/&gt;
          &lt;img src=&quot;https://tanstack.com/assets/prisma-dark-DwgDxLwn.svg&quot; height=&quot;50&quot; alt=&quot;Prisma&quot; /&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://strapi.link/tanstack-start&quot;&gt;
        &lt;picture&gt;
          &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://tanstack.com/assets/strapi-dark-CQ84tQTk.svg&quot; height=&quot;40&quot;/&gt;
          &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://tanstack.com/assets/strapi-light-6x7linao.svg&quot; height=&quot;40&quot;/&gt;
          &lt;img src=&quot;https://tanstack.com/assets/strapi-dark-CQ84tQTk.svg&quot; height=&quot;40&quot; alt=&quot;Strapi&quot; /&gt;
        &lt;/picture&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;./media/partner_logo.svg&quot; alt=&quot;Router &amp; you?&quot; height=&quot;65&quot;&gt;
&lt;p&gt;
We&#039;re looking for TanStack Router &amp; Start Partners to join our mission! Partner with us to push the boundaries of TanStack Router &amp; Start and build amazing things together.
&lt;/p&gt;
&lt;a href=&quot;mailto:partners@tanstack.com?subject=TanStack Router &amp; Start Partnership&quot;&gt;&lt;b&gt;LET&#039;S CHAT&lt;/b&gt;&lt;/a&gt;
&lt;/div&gt;

## Explore the TanStack Ecosystem

- &lt;a href=&quot;https://github.com/tanstack/config&quot;&gt;&lt;b&gt;TanStack Config&lt;/b&gt;&lt;/a&gt; – Tooling for JS/TS packages
- &lt;a href=&quot;https://github.com/tanstack/db&quot;&gt;&lt;b&gt;TanStack DB&lt;/b&gt;&lt;/a&gt; – Reactive sync client store
- &lt;a href=&quot;https://github.com/tanstack/devtools&quot;&gt;&lt;b&gt;TanStack DevTools&lt;/b&gt;&lt;/a&gt; – Unified devtools panel
- &lt;a href=&quot;https://github.com/tanstack/form&quot;&gt;&lt;b&gt;TanStack Form&lt;/b&gt;&lt;/a&gt; – Type‑safe form state
- &lt;a href=&quot;https://github.com/tanstack/pacer&quot;&gt;&lt;b&gt;TanStack Pacer&lt;/b&gt;&lt;/a&gt; – Debouncing, throttling, batching &lt;br/&gt;
- &lt;a href=&quot;https://github.com/tanstack/query&quot;&gt;&lt;b&gt;TanStack Query&lt;/b&gt;&lt;/a&gt; – Async state &amp; caching
- &lt;a href=&quot;https://github.com/tanstack/ranger&quot;&gt;&lt;b&gt;TanStack Ranger&lt;/b&gt;&lt;/a&gt; – Range &amp; slider primitives
- &lt;a href=&quot;https://github.com/tanstack/store&quot;&gt;&lt;b&gt;TanStack Store&lt;/b&gt;&lt;/a&gt; – Reactive data store
- &lt;a href=&quot;https://github.com/tanstack/table&quot;&gt;&lt;b&gt;TanStack Table&lt;/b&gt;&lt;/a&gt; – Headless datagrids
- &lt;a href=&quot;https://github.com/tanstack/virtual&quot;&gt;&lt;b&gt;TanStack Virtual&lt;/b&gt;&lt;/a&gt; – Virtualized rendering

… and more at &lt;a href=&quot;https://tanstack.com&quot;&gt;&lt;b&gt;TanStack.com »&lt;/b&gt;&lt;/a&gt;

&lt;!-- Use the force, Luke --&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[coinbase/x402]]></title>
            <link>https://github.com/coinbase/x402</link>
            <guid>https://github.com/coinbase/x402</guid>
            <pubDate>Fri, 26 Sep 2025 00:05:01 GMT</pubDate>
            <description><![CDATA[A payments protocol for the internet. Built on HTTP.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/coinbase/x402">coinbase/x402</a></h1>
            <p>A payments protocol for the internet. Built on HTTP.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 1,327</p>
            <p>Forks: 243</p>
            <p>Stars today: 50 stars today</p>
            <h2>README</h2><pre># x402 payments protocol

&gt; &quot;1 line of code to accept digital dollars. No fee, 2 second settlement, $0.001 minimum payment.&quot;

```typescript
app.use(
  // How much you want to charge, and where you want the funds to land
  paymentMiddleware(&quot;0xYourAddress&quot;, { &quot;/your-endpoint&quot;: &quot;$0.01&quot; })
);
// That&#039;s it! See examples/typescript/servers/express.ts for a complete example. Instruction below for running on base-sepolia.
```

## Philosophy

Payments on the internet are fundamentally flawed. Credit Cards are high friction, hard to accept, have minimum payments that are far too high, and don&#039;t fit into the programmatic nature of the internet.
It&#039;s time for an open, internet-native form of payments. A payment rail that doesn&#039;t have high minimums + % based fee. Payments that are amazing for humans and AI agents.

## Principles

- **Open standard:** the x402 protocol will never force reliance on a single party
- **HTTP Native:** x402 is meant to seamlessly complement the existing HTTP request made by traditional web services, it should not mandate additional requests outside the scope of a typical client / server flow.
- **Chain and token agnostic:** we welcome contributions that add support for new chains, signing standards, or schemes, so long as they meet our acceptance criteria laid out in [CONTRIBUTING.md](https://github.com/coinbase/x402/blob/main/CONTRIBUTING.md)
- **Trust minimizing:** all payment schemes must not allow for the facilitator or resource server to move funds, other than in accordance with client intentions
- **Easy to use:** x402 needs to be 10x better than existing ways to pay on the internet. This means abstracting as many details of crypto as possible away from the client and resource server, and into the facilitator. This means the client/server should not need to think about gas, rpc, etc.

## Ecosystem

The x402 ecosystem is growing! Check out our [ecosystem page](https://x402.org/ecosystem) to see projects building with x402, including:

- Client-side integrations
- Services and endpoints
- Ecosystem infrastructure and tooling
- Learning and community resources

Want to add your project to the ecosystem? See our [demo site README](https://github.com/coinbase/x402/tree/main/typescript/site#adding-your-project-to-the-ecosystem) for detailed instructions on how to submit your project.

**Roadmap:** see [ROADMAP.md](https://github.com/coinbase/x402/blob/main/ROADMAP.md)

## Terms:

- `resource`: Something on the internet. This could be a webpage, file server, RPC service, API, any resource on the internet that accepts HTTP / HTTPS requests.
- `client`: An entity wanting to pay for a resource.
- `facilitator server`: A server that facilitates verification and execution of on-chain payments.
- `resource server`: An HTTP server that provides an API or other resource for a client.

## Technical Goals:

- Permissionless and secure for clients and servers
- Gasless for client and resource servers
- Minimal integration for the resource server and client (1 line for the server, 1 function for the client)
- Ability to trade off speed of response for guarantee of payment
- Extensible to different payment flows and chains

## V1 Protocol

The `x402` protocol is a chain agnostic standard for payments on top of HTTP, leverage the existing `402 Payment Required` HTTP status code to indicate that a payment is required for access to the resource.

It specifies:

1. A schema for how servers can respond to clients to facilitate payment for a resource (`PaymentRequirements`)
2. A standard header `X-PAYMENT` that is set by clients paying for resources
3. A standard schema and encoding method for data in the `X-PAYMENT` header
4. A recommended flow for how payments should be verified and settled by a resource server
5. A REST specification for how a resource server can perform verification and settlement against a remote 3rd party server (`facilitator`)
6. A specification for a `X-PAYMENT-RESPONSE` header that can be used by resource servers to communicate blockchain transactions details to the client in their HTTP response

### V1 Protocol Sequencing

![](./static/x402-protocol-flow.png)

The following outlines the flow of a payment using the `x402` protocol. Note that steps (1) and (2) are optional if the client already knows the payment details accepted for a resource.

1. `Client` makes an HTTP request to a `resource server`.

2. `Resource server` responds with a `402 Payment Required` status and a `Payment Required Response` JSON object in the response body.

3. `Client` selects one of the `paymentRequirements` returned by the server response and creates a `Payment Payload` based on the `scheme` of the `paymentRequirements` they have selected.

4. `Client` sends the HTTP request with the `X-PAYMENT` header containing the `Payment Payload` to the resource server.

5. `Resource server` verifies the `Payment Payload` is valid either via local verification or by POSTing the `Payment Payload` and `Payment Requirements` to the `/verify` endpoint of a `facilitator server`.

6. `Facilitator server` performs verification of the object based on the `scheme` and `network` of the `Payment Payload` and returns a `Verification Response`.

7. If the `Verification Response` is valid, the resource server performs the work to fulfill the request. If the `Verification Response` is invalid, the resource server returns a `402 Payment Required` status and a `Payment Required Response` JSON object in the response body.

8. `Resource server` either settles the payment by interacting with a blockchain directly, or by POSTing the `Payment Payload` and `Payment PaymentRequirements` to the `/settle` endpoint of a `facilitator server`.

9. `Facilitator server` submits the payment to the blockchain based on the `scheme` and `network` of the `Payment Payload`.

10. `Facilitator server` waits for the payment to be confirmed on the blockchain.

11. `Facilitator server` returns a `Payment Execution Response` to the resource server.

12. `Resource server` returns a `200 OK` response to the `Client` with the resource they requested as the body of the HTTP response, and a `X-PAYMENT-RESPONSE` header containing the `Settlement Response` as Base64 encoded JSON if the payment was executed successfully.

### Type Specifications

#### Data types

**Payment Required Response**

```json5
{
  // Version of the x402 payment protocol
  x402Version: int,

  // List of payment requirements that the resource server accepts. A resource server may accept on multiple chains, or in multiple currencies.
  accepts: [paymentRequirements]

  // Message from the resource server to the client to communicate errors in processing payment
  error: string
}
```

**paymentRequirements**

```json5
{
  // Scheme of the payment protocol to use
  scheme: string;

  // Network of the blockchain to send payment on
  network: string;

  // Maximum amount required to pay for the resource in atomic units of the asset
  maxAmountRequired: uint256 as string;

  // URL of resource to pay for
  resource: string;

  // Description of the resource
  description: string;

  // MIME type of the resource response
  mimeType: string;

  // Output schema of the resource response
  outputSchema?: object | null;

  // Address to pay value to
  payTo: string;

  // Maximum time in seconds for the resource server to respond
  maxTimeoutSeconds: number;

  // Address of the EIP-3009 compliant ERC20 contract
  asset: string;

  // Extra information about the payment details specific to the scheme
  // For `exact` scheme on a EVM network, expects extra to contain the records `name` and `version` pertaining to asset
  extra: object | null;
}
```

**`Payment Payload`** (included as the `X-PAYMENT` header in base64 encoded json)

```json5
{
  // Version of the x402 payment protocol
  x402Version: number;

  // scheme is the scheme value of the accepted `paymentRequirements` the client is using to pay
  scheme: string;

  // network is the network id of the accepted `paymentRequirements` the client is using to pay
  network: string;

  // payload is scheme dependent
  payload: &lt;scheme dependent&gt;;
}
```

#### Facilitator Types &amp; Interface

A `facilitator server` is a 3rd party service that can be used by a `resource server` to verify and settle payments, without the `resource server` needing to have access to a blockchain node or wallet.

**POST /verify**. Verify a payment with a supported scheme and network:

- Request body JSON:
  ```json5
  {
    x402Version: number;
    paymentHeader: string;
    paymentRequirements: paymentRequirements;
  }
  ```
- Response:
  ```json5
  {
    isValid: boolean;
    invalidReason: string | null;
  }
  ```

**POST /settle**. Settle a payment with a supported scheme and network:

- Request body JSON:

  ```json5
  {
    x402Version: number;
    paymentHeader: string;
    paymentRequirements: paymentRequirements;
  }
  ```

- Response:

  ```json5
  {
    // Whether the payment was successful
    success: boolean;

    // Error message from the facilitator server
    error: string | null;

    // Transaction hash of the settled payment
    txHash: string | null;

    // Network id of the blockchain the payment was settled on
    networkId: string | null;
  }
  ```

**GET /supported**. Get supported payment schemes and networks:

- Response:
  ```json5
  {
    kinds: [
      {
        &quot;scheme&quot;: string,
        &quot;network&quot;: string,
      }
    ]
  }
  ```

### Schemes

A scheme is a logical way of moving money.

Blockchains allow for a large number of flexible ways to move money. To help facilitate an expanding number of payment use cases, the `x402` protocol is extensible to different ways of settling payments via its `scheme` field.

Each payment scheme may have different operational functionality depending on what actions are necessary to fulfill the payment.
For example `exact`, the first scheme shipping as part of the protocol, would have different behavior than `upto`. `exact` transfers a specific amount (ex: pay $1 to read an article), while a theoretical `upto` would transfer up to an amount, based on the resources consumed during a request (ex: generating tokens from an LLM).

See `specs/schemes` for more details on schemes, and see `specs/schemes/exact/scheme_exact_evm.md` to see the first proposed scheme for exact payment on EVM chains.

### Schemes vs Networks

Because a scheme is a logical way of moving money, the way a scheme is implemented can be different for different blockchains. (ex: the way you need to implement `exact` on Ethereum is very different from the way you need to implement `exact` on Solana).

Clients and facilitators must explicitly support different `(scheme, network)` pairs in order to be able to create proper payloads and verify / settle payments.

## Running example

**Requirements:** Node.js v24 or higher

1. From `examples/typescript` run `pnpm install` and `pnpm build` to ensure all dependent packages and examples are setup.

2. Select a server, i.e. express, and `cd` into that example. Add your server&#039;s ethereum address to get paid to into the `.env` file, and then run `pnpm dev` in that directory.

3. Select a client, i.e. axios, and `cd` into that example. Add your private key for the account making payments into the `.env` file, and then run `pnpm dev` in that directory.

You should see activities in the client terminal, which will display a weather report.

## Running tests

1. Navigate to the typescript directory: `cd typescript`
2. Install dependencies: `pnpm install`
3. Run the unit tests: `pnpm test`

This will run the unit tests for the x402 packages.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[cloudflare/capnweb]]></title>
            <link>https://github.com/cloudflare/capnweb</link>
            <guid>https://github.com/cloudflare/capnweb</guid>
            <pubDate>Fri, 26 Sep 2025 00:05:00 GMT</pubDate>
            <description><![CDATA[JavaScript/TypeScript-native, low-boilerplate, object-capability RPC system]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/cloudflare/capnweb">cloudflare/capnweb</a></h1>
            <p>JavaScript/TypeScript-native, low-boilerplate, object-capability RPC system</p>
            <p>Language: TypeScript</p>
            <p>Stars: 2,461</p>
            <p>Forks: 74</p>
            <p>Stars today: 938 stars today</p>
            <h2>README</h2><pre># Cap&#039;n Web: A JavaScript-native RPC system

Cap&#039;n Web is a spiritual sibling to [Cap&#039;n Proto](https://capnproto.org) (and is created by the same author), but designed to play nice in the web stack. That means:
* Like Cap&#039;n Proto, it is an object-capability protocol. (&quot;Cap&#039;n&quot; is short for &quot;capabilities and&quot;.) We&#039;ll get into this more below, but it&#039;s incredibly powerful.
* Unlike Cap&#039;n Proto, Cap&#039;n Web has no schemas. In fact, it has almost no boilerplate whatsoever. This means it works more like the [JavaScript-native RPC system in Cloudflare Workers](https://blog.cloudflare.com/javascript-native-rpc/).
* That said, it integrates nicely with TypeScript.
* Also unlike Cap&#039;n Proto, Cap&#039;n Web&#039;s underlying serialization is human-readable. In fact, it&#039;s just JSON, with a little pre-/post-processing.
* It works over HTTP, WebSocket, and postMessage() out-of-the-box, with the ability to extend it to other transports easily.
* It works in all major browsers, Cloudflare Workers, Node.js, and other modern JavaScript runtimes.
The whole thing compresses (minify+gzip) to under 10kB with no dependencies.

Cap&#039;n Web is more expressive than almost every other RPC system, because it implements an object-capability RPC model. That means it:
* Supports bidirectional calling. The client can call the server, and the server can also call the client.
* Supports passing functions by reference: If you pass a function over RPC, the recipient receives a &quot;stub&quot;. When they call the stub, they actually make an RPC back to you, invoking the function where it was created. This is how bidirectional calling happens: the client passes a callback to the server, and then the server can call it later.
* Similarly, supports passing objects by reference: If a class extends the special marker type `RpcTarget`, then instances of that class are passed by reference, with method calls calling back to the location where the object was created.
* Supports promise pipelining. When you start an RPC, you get back a promise. Instead of awaiting it, you can immediately use the promise in dependent RPCs, thus performing a chain of calls in a single network round trip.
* Supports capability-based security patterns.

## Installation

[Cap&#039;n Web is an npm package.](https://www.npmjs.com/package/capnweb)

```
npm i capnweb
```

## Example

A client looks like this:

```js
import { newWebSocketRpcSession } from &quot;capnweb&quot;;

// One-line setup.
let api = newWebSocketRpcSession(&quot;wss://example.com/api&quot;);

// Call a method on the server!
let result = await api.hello(&quot;World&quot;);

console.log(result);
```

Here&#039;s the server:

```js
import { RpcTarget, newWorkersRpcResponse } from &quot;capnweb&quot;;

// This is the server implementation.
class MyApiServer extends RpcTarget {
  hello(name) {
    return `Hello, ${name}!`
  }
}

// Standard Cloudflare Workers HTTP handler.
//
// (Node and other runtimes are supported too; see below.)
export default {
  fetch(request, env, ctx) {
    // Parse URL for routing.
    let url = new URL(request.url);

    // Serve API at `/api`.
    if (url.pathname === &quot;/api&quot;) {
      return newWorkersRpcResponse(request, new MyApiServer());
    }

    // You could serve other endpoints here...
    return new Response(&quot;Not found&quot;, {status: 404});
  }
}
```

### More complicated example

Here&#039;s an example that:
* Uses TypeScript
* Sends multiple calls, where the second call depends on the result of the first, in one round trip.

We declare our interface in a shared types file:

```ts
interface PublicApi {
  // Authenticate the API token, and returned the authenticated API.
  authenticate(apiToken: string): AuthedApi;

  // Get a given user&#039;s public profile info. (Doesn&#039;t require authentication.)
  getUserProfile(userId: string): Promise&lt;UserProfile&gt;;
}

interface AuthedApi {
  getUserId(): number;

  // Get the user IDs of all the user&#039;s friends.
  getFriendIds(): number[];
}

type UserProfile = {
  name: string;
  photoUrl: string;
}
```

(Note: you don&#039;t _have to_ declare your interface separately. The client could just use `import(&quot;./server&quot;).ApiServer` as the type.)

On the server, we implement the interface as an RpcTarget:

```ts
import { newWorkersRpcResponse, RpcTarget } from &quot;capnweb&quot;;

class ApiServer extends RpcTarget implements PublicApi {
  // ... implement PublicApi ...
}

export default {
  async fetch(req, env, ctx) {
    // ... same as previous example ...
  }
}
```

On the client, we can use it in a batch request:

```ts
import { newHttpBatchRpcSession } from &quot;capnweb&quot;;

let api = newHttpBatchRpcSession&lt;PublicApi&gt;(&quot;https://example.com/api&quot;);

// Call authenticate(), but don&#039;t await it. We can use the returned promise
// to make &quot;pipelined&quot; calls without waiting.
let authedApi: RpcPromise&lt;AuthedApi&gt; = api.authenticate(apiToken);

// Make a pipelined call to get the user&#039;s ID. Again, don&#039;t await it.
let userIdPromise: RpcPromise&lt;number&gt; = authedApi.getUserId();

// Make another pipelined call to fetch the user&#039;s public profile, based on
// the user ID. Notice how we can use `RpcPromise&lt;T&gt;` in the parameters of a
// call anywhere where T is expected. The promise will be replaced with its
// resolution before delivering the call.
let profilePromise = api.getUserProfile(userIdPromise);

// Make another call to get the user&#039;s friends.
let friendsPromise = authedApi.getFriendIds();

// That only returns an array of user IDs, but we want all the profile info
// too, so use the magic .map() function to get them, too! Still one round
// trip.
let friendProfilesPromise = friendsPromise.map((id: RpcPromise&lt;number&gt;) =&gt; {
  return { id, profile: api.getUserProfile(id); };
});

// Now await the promises. The batch is sent at this point. It&#039;s important
// to simultaneously await all promises for which you actually want the
// result. If you don&#039;t actually await a promise before the batch is sent,
// the system detects this and doesn&#039;t actually ask the server to send the
// return value back!
let [profile, friendProfiles] =
    await Promise.all([profilePromise, friendProfilesPromise]);

console.log(`Hello, ${profile.name}!`);

// Note that at this point, the `api` and `authedApi` stubs no longer work,
// because the batch is done. You must start a new batch.
```

Alternatively, for a long-running interactive application, we can set up a persistent WebSocket connection:

```ts
import { newWebSocketRpcSession } from &quot;capnweb&quot;;

// We declare `api` with `using` so that it&#039;ll be disposed at the end of the
// scope, which closes the connection. `using` is a fairly new JavaScript
// feature, part of the &quot;explicit resource management&quot; spec. Alternatively,
// we could declare `api` with `let` or `const` and make sure to call
// `api[Symbol.dispose]()` to dispose it and close the connection later.
using api = newWebSocketRpcSession&lt;PublicApi&gt;(&quot;wss://example.com/api&quot;);

// Usage is exactly the same, except we don&#039;t have to await all the promises
// at once.

// Authenticate and get the user ID in one round trip. Note we use `using`
// again so that `authedApi` will be disposed when we&#039;re done with it. In
// this case, it won&#039;t close the connection (since it&#039;s not the main stub),
// but disposing it does release the `AuthedApi` object on the server side.
using authedApi: RpcPromise&lt;AuthedApi&gt; = api.authenticate(apiToken);
let userId: number = await authedApi.getUserId();

// ... continue calling other methods, now or in the future ...
```

## RPC Basics

### Pass-by-value types

The following types can be passed over RPC (in arguments or return values), and will be passed &quot;by value&quot;, meaning the content is serialized, producing a copy at the receiving end:

* Primitive values: strings, numbers, booleans, null, undefined
* Plain objects (e.g., from object literals)
* Arrays
* `bigint`
* `Date`
* `Uint8Array`
* `Error` and its well-known subclasses

The following types are not supported as of this writing, but may be added in the future:
* `Map` and `Set`
* `ArrayBuffer` and typed arrays other than `Uint8Array`
* `RegExp`
* `ReadableStream` and `WritableStream`, with automatic flow control.
* `Headers`, `Request`, and `Response`

The following are intentionally NOT supported:
* Application-defined classes that do not extend `RpcTarget`.
* Cyclic values. Messages are serialized strictly as trees (like JSON).

### `RpcTarget`

To export an interface over RPC, you must write a class that `extends RpcTarget`. Extending `RpcTarget` tells the RPC system: instances of this class are _pass-by-reference_. When an instance is passed over RPC, the object should NOT be serialized. Instead, the RPC message will contain a &quot;stub&quot; that points back to the original target object. Invoking this stub calls back over RPC.

When you send someone an `RpcTarget` reference, they will be able to call any class method over RPC, including getters. They will not, however, be able to access &quot;own&quot; properties. In precise JavaScript terms, they can access prototype properties but not instance properties. This policy is intended to &quot;do the right thing&quot; for typical JavaScript code, where private members are typically stored as instance properties.

WARNING: If you are using TypeScript, note that declaring a method `private` does not hide it from RPC, because TypeScript annotations are &quot;erased&quot; at runtime, so cannot be enforced. To actually make methods private, you must prefix their names with `#`, which makes them private for JavaScript (not just TypeScript). Names prefixed with `#` are never available over RPC.

### Functions

When a plain function is passed over RPC, it will be treated similarly to an `RpcTarget`. The function will be replaced by a stub which, when invoked, calls back over RPC to the original function object.

If the function has any own properties, those will be available over RPC. Note that this differs from `RpcTarget`: With `RpcTarget`, own properties are not exposed, but with functions, _only_ own properties are exposed. Generally functions don&#039;t have properties anyway, making the point moot.

### `RpcStub&lt;T&gt;`

When a type `T` which extends `RpcTarget` (or is a function) is sent as part of an RPC message (in the arguments to a call, or in the return value), it is replaced with a stub of type `RpcStub&lt;T&gt;`.

Stubs are implemented using JavaScript `Proxy`s. A stub appears to have every possible method and property name. The stub does not know at runtime which properties actually exist on the server side. If you use a property that doesn&#039;t exist, an error will not be produced until you await the results.

TypeScript, however, will know which properties exist from type parameter `T`. Thus, if you are using TypeScript, you will get full compile-time type checking, auto-complete, etc. Hooray!

To read a property from the remote object (as opposed to calling a method), simply `await` the property, like `let foo = await stub.foo;`.

A stub can be passed across RPC again, including over independent connections. If Alice is connected to Bob and Carol, and Alice receives a stub from Bob, Alice can pass the stub in an RPC to Carol, thus allowing Carol to call Bob. (As of this writing, any such calls will be proxied through Alice, but in the future we may support &quot;three-party handoff&quot; such that Carol can make a direct connection to Bob.)

You may construct a stub explicitly without an RPC connection, using `new RpcStub(target)`. This is sometimes useful to be able to perform local calls as if they were remote, or to help manage disposal (see below).

### `RpcPromise&lt;T&gt;`

Calling an RPC method returns an `RpcPromise` rather than a regular `Promise`. You can use an `RpcPromise` in all the ways a regular `Promise` can be used, that is, you can `await` it, call `.then()`, pass it to `Promise.resolve()`, etc. (This is all possible because `RpcPromise` is a [&quot;thenable&quot;](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise#thenables).)

However, you can do more with `RpcPromise`. `RpcPromise` supports _Promise Pipelining_:

1. An `RpcPromise` also acts as a _stub_ for the eventual result of the promise. That means, you can access properties and invoke methods on it, without awaiting the promise first.

```ts
// In a single round trip, authenticate the user, and fetch their notifications.
let user = api.authenticate(cookie);
let notifications = await user.getNotifications();
```

2. An `RpcPromise` (or its properties) can be passed as parameters to other RPC calls.

```ts
// In a single round trip, authenticate the user, and fetch their public profile
// given their ID.
let user = api.authenticate(cookie);
let profile = await api.getUserProfile(user.id);
```

Whenever an `RpcPromise` is passed in the parameters to an RPC, or returned as part of the result, the promise will be replaced with its resolution before delivery to the receiving application. So, you can use an `RpcPromise&lt;T&gt;` anywhere where a `T` is required!

### The magic `map()` method

Every RPC promise has a special method `.map()` which can be used to remotely transform a value, without pulling it back locally. Here&#039;s an example:

```ts
// Get a list of user IDs.
let idsPromise = api.listUserIds();

// Look up the username for each one.
let names = await idsPromise.map(id =&gt; [id, api.getUserName(id)]);
```

This example calls one API method to get a list of user IDs, then, for each user ID in the list, makes another RPC call to look up the user&#039;s name, producing a list of id/name pairs.

**All this happens in a single network round trip!**

`promise.map(func)` transfers a representation of `func` to the server, where it is executed on the promise&#039;s result. Specifically:

* If the promise resolves to an array, the mapper function executes on each element of the array. The overall `.map()` operation returns a promise for an array of the results.
* If the promise resolves to `null` or `undefined`, the map function is not executed at all. The result is the same value.
* If the promise resolves to any other value, the map function executes once on that value, returning the result.

Thus, `map()` can be used both for handling arrays, and for handling nullable values.

There are some restrictions:

* The callback must have no side effects other than calling RPCs.
* The callback must be synchronous. It cannot await anything.
* The input to the callback is an `RpcPromise`, hence the callback cannot actually operate on it, other than to invoke its RPC methods, or to use it in the params of other RPC methods.
* Any stubs which you use in the callback -- and any parameters you pass to them -- will be sent to the peer. Be warned, a malicious peer can use these stubs for anything, not just calling your callback. Typically, it only makes sense to invoke stubs that came from the same peer originally, since this is what saves round-trips.

**How the heck does that work?**

Cap&#039;n Web does NOT send arbitrary code over the wire!

The trick here is record-replay: On the calling side, Cap&#039;n Web will invoke your callback once, in a special &quot;recording&quot; mode, passing in a special placeholder stub which records what you do with it. During the invocation, any RPCs invoked by the callback (on *any* stub) will not actually be executed, but will be recorded as an action the callback performs. Any stubs you use during the recording are &quot;captured&quot; as well. Once the callback returns, the recording and the capture list can then be sent to the peer, where the recording can then be replayed as needed to process individual results.

Since all of the not-yet-determined values seen by the callback are represented as `RpcPromise`s, the callback&#039;s behavior is deterministic. Any actual computation (arithmetic, branching, etc.) can&#039;t possibly use these promises as (meaningful) inputs, so would logically produce the same results for every invocation of the callback. Any such computation will actually end up being performed on the sending side, just once, with the results being imbued into the recording.

### Cloudflare Workers RPC interoperability

Cap&#039;n Web works on any JavaScript platform. But, on Cloudflare Workers specifically, it&#039;s designed to play nicely with the [the built-in RPC system](https://blog.cloudflare.com/javascript-native-rpc/). The two have basically the same semantics, the only difference being that Workers RPC is a built-in API provided by the Workers Runtime, whereas Cap&#039;n Web is implemented in pure JavaScript.

To facilitate interoperability:
* On Workers, the `RpcTarget` class exported by &quot;capnweb&quot; is just an alias of the built-in one, so you can use them interchangeably.
* RPC stubs and promises originating from one RPC system can be passed over the other. This will automatically set up proxying.
* You can also send Workers Service Bindings and Durable Object stubs over Cap&#039;n Web -- again, this sets up proxying.

So basically, it &quot;just works&quot;.

With that said, as of this writing, the feature set is not exactly the same between the two. We aim to fix this over time, by adding missing features to both sides until they match. In particular, as of this writing:
* Workers RPC supports some types that Cap&#039;n Web does not yet, like `Map`, streams, etc.
* Workers RPC supports sending values that contain aliases and cycles. This can actually cause problems, so we actually plan to *remove* this feature from Workers RPC (with a compatibility flag, of course).
* Workers RPC does not yet support placing an `RpcPromise` into the parameters of a request, to be replaced by its resolution.
* Workers RPC does not yet support the magic `.map()` method.

## Resource Management and Disposal

Unfortunately, garbage collection does not work well when remote resources are involved, for two reasons:

1. Many JavaScript runtimes only run the garbage collector when they sense &quot;memory pressure&quot; -- if memory is not running low, then they figure there&#039;s no need to try to reclaim any. However, the runtime has no way to know if the other side of an RPC connection is suffering memory pressure.

2. Garbage collectors need to trace the full object graph in order to detect which objects are unreachable, especially when those objects contain cyclic references. However, the garbage collector can only see local objects; it has no ability to trace through the remote graph to discover cycles that may cross RPC connections.

Both of these problems might be solvable with sufficient work, but the problem seems exceedingly difficult. We make no attempt to solve it in this library.

Instead, you may choose one of two strategies:

1. Explicitly dispose stubs when you are done with them. This notifies the remote end that it can release the associated resources.

2. Use short-lived sessions. When the session ends, all stubs are implicitly disposed. In particular, when using HTTP batch request, there&#039;s generally no need to dispose stubs. When using long-lived WebSocket sessions, however, disposal may be important.

Note: We might extend Cap&#039;n Web to use `FinalizationRegistry` to automatically dispose abandoned stubs in the future, but even if we do, it should not be relied upon, due to problems discussed above.

### How to dispose

Stubs integrate with JavaScript&#039;s [explicit resource management](https://v8.dev/features/explicit-resource-management), which became widely available in mid-2025 (and has been supported via transpilers and polyfills going back a few years earlier). In short:

* Disposable objects (including stubs) have a method `[Symbol.dispose]`. You can call this like `stub[Symbol.dispose]()`.
* You can arrange for a stub to be disposed automatically at the end of a function scope by assigning it to a `using` variable, like `using stub = api.getStub();`. The disposer will automatically be invoked when the variable goes out-of-scope.

### Automatic disposal

This library implements several rules to help make resource management more manageable. These rules may appear a bit complicated, but are intended to implement the behavior you would naturally expect.

The bas

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[EvolutionAPI/evolution-api]]></title>
            <link>https://github.com/EvolutionAPI/evolution-api</link>
            <guid>https://github.com/EvolutionAPI/evolution-api</guid>
            <pubDate>Fri, 26 Sep 2025 00:04:59 GMT</pubDate>
            <description><![CDATA[Evolution API is an open-source WhatsApp integration API]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/EvolutionAPI/evolution-api">EvolutionAPI/evolution-api</a></h1>
            <p>Evolution API is an open-source WhatsApp integration API</p>
            <p>Language: TypeScript</p>
            <p>Stars: 5,489</p>
            <p>Forks: 4,301</p>
            <p>Stars today: 17 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;Evolution Api&lt;/h1&gt;

&lt;div align=&quot;center&quot;&gt;

[![Docker Image](https://img.shields.io/badge/Docker-image-blue)](https://hub.docker.com/r/evoapicloud/evolution-api)
[![Whatsapp Group](https://img.shields.io/badge/Group-WhatsApp-%2322BC18)](https://evolution-api.com/whatsapp)
[![Discord Community](https://img.shields.io/badge/Discord-Community-blue)](https://evolution-api.com/discord)
[![Postman Collection](https://img.shields.io/badge/Postman-Collection-orange)](https://evolution-api.com/postman) 
[![Documentation](https://img.shields.io/badge/Documentation-Official-green)](https://doc.evolution-api.com)
[![Feature Requests](https://img.shields.io/badge/Feature-Requests-purple)](https://evolutionapi.canny.io/feature-requests)
[![Roadmap](https://img.shields.io/badge/Roadmap-Community-blue)](https://evolutionapi.canny.io/feature-requests)
[![Changelog](https://img.shields.io/badge/Changelog-Updates-green)](https://evolutionapi.canny.io/changelog)
[![License](https://img.shields.io/badge/license-Apache--2.0-blue)](./LICENSE)
[![Support](https://img.shields.io/badge/Donation-picpay-green)](https://app.picpay.com/user/davidsongomes1998)
[![Sponsors](https://img.shields.io/badge/Github-sponsor-orange)](https://github.com/sponsors/EvolutionAPI)

&lt;/div&gt;
  
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;./public/images/cover.png&quot;&gt;&lt;/div&gt;

## Evolution API

Evolution API began as a WhatsApp controller API based on [CodeChat](https://github.com/code-chat-br/whatsapp-api), which in turn implemented the [Baileys](https://github.com/WhiskeySockets/Baileys) library. While originally focused on WhatsApp, Evolution API has grown into a comprehensive platform supporting multiple messaging services and integrations. We continue to acknowledge CodeChat for laying the groundwork.

Today, Evolution API is not limited to WhatsApp. It integrates with various platforms such as Typebot, Chatwoot, Dify, and OpenAI, offering a broad array of functionalities beyond messaging. Evolution API supports both the Baileys-based WhatsApp API and the official WhatsApp Business API, with upcoming support for Instagram and Messenger.

## Looking for a Lightweight Version?
For those who need a more streamlined and performance-optimized version, check out [Evolution API Lite](https://github.com/EvolutionAPI/evolution-api-lite). It&#039;s designed specifically for microservices, focusing solely on connectivity without integrations or audio conversion features. Ideal for environments that prioritize simplicity and efficiency.

## Types of Connections

Evolution API supports multiple types of connections to WhatsApp, enabling flexible and powerful integration options:

- *WhatsApp API - Baileys*:
  - A free API based on WhatsApp Web, leveraging the [Baileys library](https://github.com/WhiskeySockets/Baileys).
  - This connection type allows control over WhatsApp Web functionalities through a RESTful API, suitable for multi-service chats, service bots, and other WhatsApp-integrated systems.
  - Note: This method relies on the web version of WhatsApp and may have limitations compared to official APIs.

- *WhatsApp Cloud API*:
  - The official API provided by Meta (formerly Facebook).
  - This connection type offers a robust and reliable solution designed for businesses needing higher volumes of messaging and better integration support.
  - The Cloud API supports features such as end-to-end encryption, advanced analytics, and more comprehensive customer service tools.
  - To use this API, you must comply with Meta&#039;s policies and potentially pay for usage based on message volume and other factors.

## Integrations

Evolution API supports various integrations to enhance its functionality. Below is a list of available integrations and their uses:

- [Typebot](https://typebot.io/):
  - Build conversational bots using Typebot, integrated directly into Evolution with trigger management.

- [Chatwoot](https://www.chatwoot.com/):
  - Direct integration with Chatwoot for handling customer service for your business.

- [RabbitMQ](https://www.rabbitmq.com/):
  - Receive events from the Evolution API via RabbitMQ.

- [Apache Kafka](https://kafka.apache.org/):
  - Receive events from the Evolution API via Apache Kafka for real-time event streaming and processing.

- [Amazon SQS](https://aws.amazon.com/pt/sqs/):
  - Receive events from the Evolution API via Amazon SQS.

- [Socket.io](https://socket.io/):
  - Receive events from the Evolution API via WebSocket.

- [Dify](https://dify.ai/):
  - Integrate your Evolution API directly with Dify AI for seamless trigger management and multiple agents.

- [OpenAI](https://openai.com/):
  - Integrate your Evolution API with OpenAI for AI capabilities, including audio-to-text conversion, available across all Evolution integrations.

- Amazon S3 / Minio:
  - Store media files received in [Amazon S3](https://aws.amazon.com/pt/s3/) or [Minio](https://min.io/).

## Community &amp; Feedback

We value community input and feedback to continuously improve Evolution API:

### 🚀 Feature Requests &amp; Roadmap
- **[Feature Requests](https://evolutionapi.canny.io/feature-requests)**: Submit new feature ideas and vote on community proposals
- **[Roadmap](https://evolutionapi.canny.io/feature-requests)**: View planned features and development progress
- **[Changelog](https://evolutionapi.canny.io/changelog)**: Stay updated with the latest releases and improvements

### 💬 Community Support
- **[WhatsApp Group](https://evolution-api.com/whatsapp)**: Join our community for support and discussions
- **[Discord Community](https://evolution-api.com/discord)**: Real-time chat with developers and users
- **[GitHub Issues](https://github.com/EvolutionAPI/evolution-api/issues)**: Report bugs and technical issues

### 🔒 Security
- **[Security Policy](./SECURITY.md)**: Guidelines for reporting security vulnerabilities
- **Security Contact**: contato@evolution-api.com

## Telemetry Notice

To continuously improve our services, we have implemented telemetry that collects data on the routes used, the most accessed routes, and the version of the API in use. We would like to assure you that no sensitive or personal data is collected during this process. The telemetry helps us identify improvements and provide a better experience for users.

## Evolution Support Premium

Join our Evolution Pro community for expert support and a weekly call to answer questions. Visit the link below to learn more and subscribe:

[Click here to learn more](https://evolution-api.com/suporte-pro)

# Donate to the project.

#### Github Sponsors

https://github.com/sponsors/EvolutionAPI

# Content Creator Partners

We are proud to collaborate with the following content creators who have contributed valuable insights and tutorials about Evolution API:

- [Promovaweb](https://www.youtube.com/@promovaweb)
- [Sandeco](https://www.youtube.com/@canalsandeco)
- [Comunidade ZDG](https://www.youtube.com/@ComunidadeZDG)
- [Francis MNO](https://www.youtube.com/@FrancisMNO)
- [Pablo Cabral](https://youtube.com/@pablocabral)
- [XPop Digital](https://www.youtube.com/@xpopdigital)
- [Costar Wagner Dev](https://www.youtube.com/@costarwagnerdev)
- [Dante Testa](https://youtube.com/@dantetesta_)
- [Rubén Salazar](https://youtube.com/channel/UCnYGZIE2riiLqaN9sI6riig)
- [OrionDesign](youtube.com/OrionDesign_Oficial)
- [IMPA 365](youtube.com/@impa365_ofc)
- [Comunidade Hub Connect](https://youtube.com/@comunidadehubconnect)
- [dSantana Automações](https://www.youtube.com/channel/UCG7DjUmAxtYyURlOGAIryNQ?view_as=subscriber)
- [Edison Martins](https://www.youtube.com/@edisonmartinsmkt)
- [Astra Online](https://www.youtube.com/@astraonlineweb)
- [MKT Seven Automações](https://www.youtube.com/@sevenautomacoes)
- [Vamos automatizar](https://www.youtube.com/vamosautomatizar)

## License

Evolution API is licensed under the Apache License 2.0, with the following additional conditions:

1. **LOGO and copyright information**: In the process of using Evolution API&#039;s frontend components, you may not remove or modify the LOGO or copyright information in the Evolution API console or applications. This restriction is inapplicable to uses of Evolution API that do not involve its frontend components.

2. **Usage Notification Requirement**: If Evolution API is used as part of any project, including closed-source systems (e.g., proprietary software), the user is required to display a clear notification within the system that Evolution API is being utilized. This notification should be visible to system administrators and accessible from the system&#039;s documentation or settings page. Failure to comply with this requirement may result in the necessity for a commercial license, as determined by the producer.

Please contact contato@evolution-api.com to inquire about licensing matters.

Apart from the specific conditions mentioned above, all other rights and restrictions follow the Apache License 2.0. Detailed information about the Apache License 2.0 can be found at [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0).

© 2025 Evolution API
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[siyuan-note/siyuan]]></title>
            <link>https://github.com/siyuan-note/siyuan</link>
            <guid>https://github.com/siyuan-note/siyuan</guid>
            <pubDate>Fri, 26 Sep 2025 00:04:58 GMT</pubDate>
            <description><![CDATA[A privacy-first, self-hosted, fully open source personal knowledge management software, written in typescript and golang.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/siyuan-note/siyuan">siyuan-note/siyuan</a></h1>
            <p>A privacy-first, self-hosted, fully open source personal knowledge management software, written in typescript and golang.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 38,019</p>
            <p>Forks: 2,330</p>
            <p>Stars today: 368 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
&lt;img alt=&quot;SiYuan&quot; src=&quot;https://b3log.org/images/brand/siyuan-128.png&quot;&gt;
&lt;br&gt;
&lt;em&gt;Refactor your thinking&lt;/em&gt;
&lt;br&gt;&lt;br&gt;
&lt;a title=&quot;Build Status&quot; target=&quot;_blank&quot; href=&quot;https://github.com/siyuan-note/siyuan/actions/workflows/ci.yml&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/siyuan-note/siyuan/cd.yml?style=flat-square&quot;&gt;&lt;/a&gt;
&lt;a title=&quot;Releases&quot; target=&quot;_blank&quot; href=&quot;https://github.com/siyuan-note/siyuan/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/siyuan-note/siyuan.svg?style=flat-square&amp;color=9CF&quot;&gt;&lt;/a&gt;
&lt;a title=&quot;Downloads&quot; target=&quot;_blank&quot; href=&quot;https://github.com/siyuan-note/siyuan/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/siyuan-note/siyuan/total.svg?style=flat-square&amp;color=blueviolet&quot;&gt;&lt;/a&gt;
&lt;br&gt;
&lt;a title=&quot;Docker Pulls&quot; target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/b3log/siyuan&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/b3log/siyuan.svg?style=flat-square&amp;color=green&quot;&gt;&lt;/a&gt;
&lt;a title=&quot;Docker Image Size&quot; target=&quot;_blank&quot; href=&quot;https://hub.docker.com/r/b3log/siyuan&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/image-size/b3log/siyuan.svg?style=flat-square&amp;color=ff96b4&quot;&gt;&lt;/a&gt;
&lt;a title=&quot;Hits&quot; target=&quot;_blank&quot; href=&quot;https://github.com/siyuan-note/siyuan&quot;&gt;&lt;img src=&quot;https://hits.b3log.org/siyuan-note/siyuan.svg&quot;&gt;&lt;/a&gt;
&lt;br&gt;
&lt;a title=&quot;AGPLv3&quot; target=&quot;_blank&quot; href=&quot;https://www.gnu.org/licenses/agpl-3.0.txt&quot;&gt;&lt;img src=&quot;http://img.shields.io/badge/license-AGPLv3-orange.svg?style=flat-square&quot;&gt;&lt;/a&gt;
&lt;a title=&quot;Code Size&quot; target=&quot;_blank&quot; href=&quot;https://github.com/siyuan-note/siyuan&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/languages/code-size/siyuan-note/siyuan.svg?style=flat-square&amp;color=yellow&quot;&gt;&lt;/a&gt;
&lt;a title=&quot;GitHub Pull Requests&quot; target=&quot;_blank&quot; href=&quot;https://github.com/siyuan-note/siyuan/pulls&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues-pr-closed/siyuan-note/siyuan.svg?style=flat-square&amp;color=FF9966&quot;&gt;&lt;/a&gt;
&lt;br&gt;
&lt;a title=&quot;GitHub Commits&quot; target=&quot;_blank&quot; href=&quot;https://github.com/siyuan-note/siyuan/commits/master&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/commit-activity/m/siyuan-note/siyuan.svg?style=flat-square&quot;&gt;&lt;/a&gt;
&lt;a title=&quot;Last Commit&quot; target=&quot;_blank&quot; href=&quot;https://github.com/siyuan-note/siyuan/commits/master&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/siyuan-note/siyuan.svg?style=flat-square&amp;color=FF9900&quot;&gt;&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;a title=&quot;Twitter&quot; target=&quot;_blank&quot; href=&quot;https://twitter.com/b3logos&quot;&gt;&lt;img alt=&quot;Twitter Follow&quot; src=&quot;https://img.shields.io/twitter/follow/b3logos?label=Follow&amp;style=social&quot;&gt;&lt;/a&gt;
&lt;a title=&quot;Discord&quot; target=&quot;_blank&quot; href=&quot;https://discord.gg/dmMbCqVX7G&quot;&gt;&lt;img alt=&quot;Chat on Discord&quot; src=&quot;https://img.shields.io/discord/808152298789666826?label=Discord&amp;logo=Discord&amp;style=social&quot;&gt;&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;a href=&quot;https://trendshift.io/repositories/3949&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/3949&quot; alt=&quot;siyuan-note%2Fsiyuan | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot;/&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;README_zh_CN.md&quot;&gt;中文&lt;/a&gt; | &lt;a href=&quot;README_ja_JP.md&quot;&gt;日本語&lt;/a&gt;
&lt;/p&gt;

---

## Table of Contents

* [💡 Introduction](#-introduction)
* [🔮 Features](#-features)
* [🏗️ Architecture and Ecosystem](#-architecture-and-ecosystem)
* [🌟 Star History](#-star-history)
* [🗺️ Roadmap](#️-roadmap)
* [🚀 Download Setup](#-download-setup)
  * [App Market](#app-market)
  * [Installation Package](#installation-package)
  * [Docker Hosting](#docker-hosting)
  * [Unraid Hosting](#unraid-hosting)
  * [Insider Preview](#insider-preview)
* [🏘️ Community](#️-community)
* [🛠️ Development Guide](#️-development-guide)
* [❓ FAQ](#-faq)
  * [How does SiYuan store data?](#how-does-siyuan-store-data)
  * [Does it support data synchronization through a third-party sync disk?](#does-it-support-data-synchronization-through-a-third-party-sync-disk)
  * [Is SiYuan open source?](#is-siyuan-open-source)
  * [How to upgrade to a new version?](#how-to-upgrade-to-a-new-version)
  * [What if some blocks (such as paragraph blocks in list items) cannot find the block icon?](#what-if-some-blocks-such-as-paragraph-blocks-in-list-items-cannot-find-the-block-icon)
  * [What should I do if the data repo key is lost?](#what-should-i-do-if-the-data-repo-key-is-lost)
  * [Do I need to pay for it?](#do-i-need-to-pay-for-it)
* [🙏 Acknowledgement](#-acknowledgement)
  * [Contributors](#contributors)

---

## 💡 Introduction

SiYuan is a privacy-first personal knowledge management system, support fine-grained block-level reference and Markdown
WYSIWYG.

Welcome to [SiYuan English Discussion Forum](https://liuyun.io) to learn more.

![feature0.png](https://b3logfile.com/file/2024/01/feature0-1orBRlI.png)

![feature51.png](https://b3logfile.com/file/2024/02/feature5-1-uYYjAqy.png)

## 🔮 Features

Most features are free, even for commercial use.

* Content block
  * Block-level reference and two-way links
  * Custom attributes
  * SQL query embed
  * Protocol `siyuan://`
* Editor
  * Block-style
  * Markdown WYSIWYG
  * List outline
  * Block zoom-in
  * Million-word large document editing
  * Mathematical formulas, charts, flowcharts, Gantt charts, timing charts, staffs, etc.
  * Web clipping
  * PDF Annotation link
* Export
  * Block ref and embed
  * Standard Markdown with assets
  * PDF, Word and HTML
  * Copy to WeChat MP, Zhihu and Yuque
* Database
  * Table view
* Flashcard spaced repetition
* AI writing and Q/A chat via OpenAI API
* Tesseract OCR 
* Multi-tab, drag and drop to split screen
* Template snippet
* JavaScript/CSS snippet
* Android/iOS/HarmonyOS App
* Docker deployment
* [API](https://github.com/siyuan-note/siyuan/blob/master/API.md)
* Community marketplace

Some features are only available to paid members, for more details please refer to [Pricing](https://b3log.org/siyuan/en/pricing.html).

## 🏗️ Architecture and Ecosystem

![SiYuan Arch](https://b3logfile.com/file/2023/05/SiYuan_Arch-Sgu8vXT.png &quot;SiYuan Arch&quot;)

| Project                                                  | Description           | Forks                                                                           | Stars                                                                                | 
|----------------------------------------------------------|-----------------------|---------------------------------------------------------------------------------|--------------------------------------------------------------------------------------|
| [lute](https://github.com/88250/lute)                    | Editor engine         | ![GitHub forks](https://img.shields.io/github/forks/88250/lute)                 | ![GitHub Repo stars](https://img.shields.io/github/stars/88250/lute)                 |
| [chrome](https://github.com/siyuan-note/siyuan-chrome)   | Chrome/Edge extension | ![GitHub forks](https://img.shields.io/github/forks/siyuan-note/siyuan-chrome)  | ![GitHub Repo stars](https://img.shields.io/github/stars/siyuan-note/siyuan-chrome)  |
| [bazaar](https://github.com/siyuan-note/bazaar)          | Community marketplace | ![GitHub forks](https://img.shields.io/github/forks/siyuan-note/bazaar)         | ![GitHub Repo stars](https://img.shields.io/github/stars/siyuan-note/bazaar)         |
| [dejavu](https://github.com/siyuan-note/dejavu)          | Data repo             | ![GitHub forks](https://img.shields.io/github/forks/siyuan-note/dejavu)         | ![GitHub Repo stars](https://img.shields.io/github/stars/siyuan-note/dejavu)         |
| [petal](https://github.com/siyuan-note/petal)            | Plugin API            | ![GitHub forks](https://img.shields.io/github/forks/siyuan-note/petal)          | ![GitHub Repo stars](https://img.shields.io/github/stars/siyuan-note/petal)          |
| [android](https://github.com/siyuan-note/siyuan-android) | Android App           | ![GitHub forks](https://img.shields.io/github/forks/siyuan-note/siyuan-android) | ![GitHub Repo stars](https://img.shields.io/github/stars/siyuan-note/siyuan-android) |
| [ios](https://github.com/siyuan-note/siyuan-ios)         | iOS App               | ![GitHub forks](https://img.shields.io/github/forks/siyuan-note/siyuan-ios)     | ![GitHub Repo stars](https://img.shields.io/github/stars/siyuan-note/siyuan-ios)     |
| [harmony](https://github.com/siyuan-note/siyuan-harmony) | HarmonyOS App         | ![GitHub forks](https://img.shields.io/github/forks/siyuan-note/siyuan-harmony) | ![GitHub Repo stars](https://img.shields.io/github/stars/siyuan-note/siyuan-harmony) |
| [riff](https://github.com/siyuan-note/riff)              | Spaced repetition     | ![GitHub forks](https://img.shields.io/github/forks/siyuan-note/riff)           | ![GitHub Repo stars](https://img.shields.io/github/stars/siyuan-note/riff)           |

## 🌟 Star History

&lt;a href=&quot;https://star-history.com/#siyuan-note/siyuan&amp;Date&quot;&gt;
 &lt;picture&gt;
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=siyuan-note/siyuan&amp;type=Date&amp;theme=dark&quot; /&gt;
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=siyuan-note/siyuan&amp;type=Date&quot; /&gt;
   &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=siyuan-note/siyuan&amp;type=Date&quot; /&gt;
 &lt;/picture&gt;
&lt;/a&gt;

## 🗺️ Roadmap

* [SiYuan development plan and progress](https://github.com/orgs/siyuan-note/projects/1)
* [SiYuan changelog](CHANGELOG.md)

## 🚀 Download Setup

It is recommended to give priority to installing through the application market on the desktop and mobile, so that you can upgrade the version with one click in the future.

### App Market

Mobile:

* [App Store](https://apps.apple.com/us/app/siyuan/id1583226508)
* [Google Play](https://play.google.com/store/apps/details?id=org.b3log.siyuan)
* [F-Droid](https://f-droid.org/packages/org.b3log.siyuan)

Desktop:

* [Microsoft Store](https://apps.microsoft.com/detail/9p7hpmxp73k4)

### Installation Package

* [B3log](https://b3log.org/siyuan/en/download.html)
* [GitHub](https://github.com/siyuan-note/siyuan/releases)

### Docker Hosting

&lt;details&gt;
&lt;summary&gt;Docker Deployment&lt;/summary&gt;

#### Overview

The easiest way to serve SiYuan on a server is to deploy it through Docker.

* Image name `b3log/siyuan`
* [Image URL](https://hub.docker.com/r/b3log/siyuan)

#### File structure

The overall program is located under `/opt/siyuan/`, which is basically the structure under the resources folder of the Electron installation package:

* appearance: icon, theme, languages
* guide: user guide document
* stage: interface and static resources
* kernel: kernel program

#### Entrypoint

The entry point is set when building the Docker image: `ENTRYPOINT [&quot;/opt/siyuan/entrypoint.sh&quot;]`. This script allows changing the `PUID` and `PGID` of the user that will run inside the container. This is especially relevant to solve permission issues when mounting directories from the host. The `PUID` (User ID) and `PGID` (Group ID) can be passed as environment variables, making it easier to ensure correct permissions when accessing host-mounted directories.

Use the following parameters when running the container with `docker run b3log/siyuan`:

* `--workspace`: Specifies the workspace folder path, mounted to the container via `-v` on the host
* `--accessAuthCode`: Specifies the access authorization code

More parameters can be found using `--help`. Here’s an example of a startup command with the new environment variables:

```bash
docker run -d \
  -v workspace_dir_host:workspace_dir_container \
  -p 6806:6806 \
  -e PUID=1001 -e PGID=1002 \
  b3log/siyuan \
  --workspace=workspace_dir_container \
  --accessAuthCode=xxx
```

* `PUID`: Custom user ID (optional, defaults to `1000` if not provided)
* `PGID`: Custom group ID (optional, defaults to `1000` if not provided)
* `workspace_dir_host`: The workspace folder path on the host
* `workspace_dir_container`: The path of the workspace folder in the container, as specified in `--workspace`
  * In alternative, it&#039;s possible to set the path via the `SIYUAN_WORKSPACE_PATH` env variable. The commandline will always have the priority, if both are set
* `accessAuthCode`: Access authorization code (please **be sure to modify**, otherwise anyone can access your data)
  * In alternative, it&#039;s possible to set the auth code via the `SIYUAN_ACCESS_AUTH_CODE` env variable. The commandline will always have the priority, if both are set
  * To disable the Access authorization code set the env variable `SIYUAN_ACCESS_AUTH_CODE_BYPASS=true`

To simplify things, it is recommended to configure the workspace folder path to be consistent on the host and container, such as having both `workspace_dir_host` and `workspace_dir_container` configured as `/siyuan/workspace`. The corresponding startup command would be:

```bash
docker run -d \
  -v /siyuan/workspace:/siyuan/workspace \
  -p 6806:6806 \
  -e PUID=1001 -e PGID=1002 \
  b3log/siyuan \
  --workspace=/siyuan/workspace/ \
  --accessAuthCode=xxx
```

#### Docker Compose

For users running Siyuan with Docker Compose, the environment variables `PUID` and `PGID` can be passed to customize the user and group IDs. Here&#039;s an example of a Docker Compose configuration:

```yaml
version: &quot;3.9&quot;
services:
  main:
    image: b3log/siyuan
    command: [&#039;--workspace=/siyuan/workspace/&#039;, &#039;--accessAuthCode=${AuthCode}&#039;]
    ports:
      - 6806:6806
    volumes:
      - /siyuan/workspace:/siyuan/workspace
    restart: unless-stopped
    environment:
      # A list of time zone identifiers can be found at https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
      - TZ=${YOUR_TIME_ZONE}
      - PUID=${YOUR_USER_PUID}  # Customize user ID
      - PGID=${YOUR_USER_PGID}  # Customize group ID
```

In this setup:

* `PUID` and `PGID` are set dynamically and passed to the container
* If these variables are not provided, the default `1000` will be used

By specifying `PUID` and `PGID` in the environment, you avoid the need to explicitly set the `user` directive (`user: &#039;1000:1000&#039;`) in the compose file. The container will dynamically adjust the user and group based on these environment variables at startup.

#### User Permissions

In the image, the `entrypoint.sh` script ensures the creation of the `siyuan` user and group with the specified `PUID` and `PGID`. Therefore, when the host creates a workspace folder, pay attention to setting the user and group ownership of the folder to match the `PUID` and `PGID` you plan to use. For example:

```bash
chown -R 1001:1002 /siyuan/workspace
```

If you use custom `PUID` and `PGID` values, the entrypoint script will ensure that the correct user and group are created inside the container, and ownership of mounted volumes will be adjusted accordingly. There’s no need to manually pass `-u` in `docker run` or `docker-compose` as the environment variables will handle the customization.

#### Hidden port

Use NGINX reverse proxy to hide port 6806, please note:

* Configure WebSocket reverse proxy `/ws`

#### Note

* Be sure to confirm the correctness of the mounted volume, otherwise the data will be lost after the container is deleted
* Do not use URL rewriting for redirection, otherwise there may be problems with authentication, it is recommended to configure a reverse proxy
* If you encounter permission issues, verify that the `PUID` and `PGID` environment variables match the ownership of the mounted directories on your host system

#### Limitations

* Does not support desktop and mobile application connections, only supports use on browsers
* Export to PDF, HTML and Word formats is not supported
* Import Markdown file is not supported

&lt;/details&gt;

### Unraid Hosting

&lt;details&gt;
&lt;summary&gt;Unraid Deployment&lt;/summary&gt;

Note: First run `chown -R 1000:1000 /mnt/user/appdata/siyuan` in the terminal

Template reference:

```
Web UI: 6806
Container Port: 6806
Container Path: /home/siyuan
Host path: /mnt/user/appdata/siyuan
PUID: 1000
PGID: 1000
Publish parameters: --accessAuthCode=******(Access authorization code)
```

&lt;/details&gt;

### Insider Preview

We release insider preview before major updates, please visit [https://github.com/siyuan-note/insider](https://github.com/siyuan-note/insider).

## 🏘️ Community

* [English Discussion Forum](https://liuyun.io)
* [User community summary](https://liuyun.io/article/1687779743723)
* [Awesome SiYuan](https://github.com/siyuan-note/awesome)

## 🛠️ Development Guide

See [Development Guide](https://github.com/siyuan-note/siyuan/blob/master/.github/CONTRIBUTING.md).

## ❓ FAQ

### How does SiYuan store data?

The data is saved in the workspace folder, in the workspace data folder:

* `assets` is used to save all inserted assets
* `emojis` is used to save emoji images
* `snippets` is used to save code snippets
* `storage` is used to save query conditions, layouts and flashcards, etc.
* `templates` is used to save template snippets
* `widgets` is used to save widgets
* `plugins` is used to save plugins
* `public` is used to save public data
* The rest of the folders are the notebook folders created by the user, files with the suffix of `.sy` in the notebook folder are used to save the document data, and the data format is JSON

### Does it support data synchronization through a third-party sync disk?

Data synchronization through third-party synchronization disks is not supported, otherwise data may be corrupted.

Although it does not support third-party sync disks, it supports connect with third-party cloud storage (Member&#039;s privileges).

In addition, you can also consider manually exporting and importing data to achieve data synchronization:

* Desktop: &lt;kbd&gt;Settings&lt;/kbd&gt; - &lt;kbd&gt;Export&lt;/kbd&gt; - &lt;kbd&gt;Export Data&lt;/kbd&gt; / &lt;kbd&gt;Import Data&lt;/kbd&gt;
* Mobile: &lt;kbd&gt;Right column&lt;/kbd&gt; - &lt;kbd&gt;About&lt;/kbd&gt; - &lt;kbd&gt;Export Data&lt;/kbd&gt; / &lt;kbd&gt;Import Data&lt;/kbd&gt;

### Is SiYuan open source?

SiYuan is completely open source, and contributions are welcome:

* [User Interface and Kernel](https://github.com/siyuan-note/siyuan)
* [Android](https://github.com/siyuan-note/siyuan-android)
* [iOS](https://github.com/siyuan-note/siyuan-ios)
* [HarmonyOS](https://github.com/siyuan-note/siyuan-harmony)
* [Chrome Clipping Extension](https://github.com/siyuan-note/siyuan-chrome)

For more details, please refer to [Development Guide](https://github.com/siyuan-note/siyuan/blob/master/.github/CONTRIBUTING.md).

### How to upgrade to a new version?

* If installed via app store, please update via app store
* If it is installed through the installation package on the desktop, you can open the option of &lt;kbd&gt;Settings&lt;/kbd&gt; - &lt;kbd&gt;About&lt;/kbd&gt; - &lt;kbd&gt;Automatically download update installation package&lt;/kbd&gt;, so that SiYuan will automatically download The latest version of the installation package and prompts to install
* If it is installed by manual installation package, please download the installation package again to install

You can &lt;kbd&gt;Check update&lt;/kbd&gt; in &lt;kbd&gt;Settings&lt;/kbd&gt; - &lt;kbd&gt;About&lt;/kbd&gt; - &lt;kbd&gt;Current Version&lt;/kbd&gt;, or pay attention to [Official Download](https://b3log.org/siyuan/en/download.html) or [GitHub Releases](https://github.com/siyuan-note/siyuan/releases) to get the new version.

### What if some blocks (such as paragraph blocks in list items) cannot find the block icon?

The first sub-block under the list item is the block icon omitted. You can move the cursor into this block and trigger its block menu with &lt;kbd&gt;Ctrl+/&lt;/kbd&gt; .

### What should I do if the data repo key is lost?

* If the data repo key is correctly initialized on multiple devices before, the key is the same on all devices and can be set in &lt;kbd&gt;Settings&lt;/kbd&gt; - &lt;kbd&gt;About&lt;/kbd&gt; - &lt;kbd&gt;Data repo key&lt;/kbd&gt; - &lt;kbd&gt;Copy key string&lt;/kbd&gt; retrieve
* If it has not been configured correctly before (for example, the keys on multiple devices are inconsistent) or all devices are unavailable and the key string cannot be obtained, you can reset the key by following the steps below:

  1. Manually back up the data, you can use &lt;kbd&gt;Export Data&lt;/kbd&gt; or directly copy the &lt;kbd&gt;workspace/data/&lt;/kbd&gt; folder on the fil

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[MrLesk/Backlog.md]]></title>
            <link>https://github.com/MrLesk/Backlog.md</link>
            <guid>https://github.com/MrLesk/Backlog.md</guid>
            <pubDate>Fri, 26 Sep 2025 00:04:57 GMT</pubDate>
            <description><![CDATA[Backlog.md - A tool for managing project collaboration between humans and AI Agents in a git ecosystem]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/MrLesk/Backlog.md">MrLesk/Backlog.md</a></h1>
            <p>Backlog.md - A tool for managing project collaboration between humans and AI Agents in a git ecosystem</p>
            <p>Language: TypeScript</p>
            <p>Stars: 3,559</p>
            <p>Forks: 163</p>
            <p>Stars today: 48 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;Backlog.md&lt;/h1&gt;
&lt;p align=&quot;center&quot;&gt;Markdown‑native Task Manager &amp;amp; Kanban visualizer for any Git repository&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;code&gt;npm i -g backlog.md&lt;/code&gt; or &lt;code&gt;bun add -g backlog.md&lt;/code&gt; or &lt;code&gt;brew install backlog-md&lt;/code&gt; or &lt;code&gt;nix run github:MrLesk/Backlog.md&lt;/code&gt;
&lt;/p&gt;

![Backlog demo GIF using: backlog board](./.github/backlog.gif)


---

&gt; **Backlog.md** turns any folder with a Git repo into a **self‑contained project board**  
&gt; powered by plain Markdown files and a zero‑config CLI.

## Features

* 📝 **Markdown-native tasks** -- manage every issue as a plain `.md` file

* 🔒 **100 % private &amp; offline** -- backlog lives entirely inside your repo

* 📊 **Instant terminal Kanban** -- `backlog board` paints a live board in your shell

* 📤 **Board export** -- `backlog board export` creates shareable markdown reports

* 🌐 **Modern web interface** -- `backlog browser` launches a sleek web UI for visual task management

* 🤖 **AI-ready CLI** -- &quot;Claude, please take over task 33&quot;

* 🔍 **Powerful search** -- fuzzy search across tasks, docs &amp; decisions with `backlog search`

* 📋 **Rich query commands** -- view, list, filter, or archive tasks with ease

* 💻 **Cross-platform** -- runs on macOS, Linux, and Windows

* 🆓 **MIT-licensed &amp; open-source** -- free for personal or commercial use


---

## &lt;img src=&quot;./.github/5-minute-tour-256.png&quot; alt=&quot;5-minute tour&quot; width=&quot;28&quot; height=&quot;28&quot; align=&quot;center&quot;&gt; Five‑minute tour
```bash
# 1. Make sure you have Backlog.md installed  
bun/npm i -g backlog.md or brew install backlog-md

# 2. Bootstrap a repo + backlog  
backlog init &quot;My Awesome Project&quot;

# 3. Capture work  
backlog task create &quot;Render markdown as kanban&quot;

# 4. See where you stand
backlog board view or backlog browser

# 5. Find what you need
backlog search &quot;markdown&quot; or just backlog search for interactive filters

# 6. Create tasks using Claude-code, Gemini, Codex or Jules
Claude I would like to build a search functionality in the web view that searches for:
* tasks
* docs
* decisions
  Please create relevant tasks to tackle this request.

# 7. Assign tasks to AI
Claude please implement all tasks related to the web search functionality (task-10, task-11, task-12)
* before starting to write code use &#039;ultrathink mode&#039; to prepare an implementation plan
* use multiple sub-agents when possible and dependencies allow
```


All data is saved under `backlog` folder as human‑readable Markdown with the following format `task-&lt;task-id&gt; - &lt;task-title&gt;.md` (e.g. `task-10 - Add core search functionality.md`).

---

## &lt;img src=&quot;./.github/web-interface-256.png&quot; alt=&quot;Web Interface&quot; width=&quot;28&quot; height=&quot;28&quot; align=&quot;center&quot;&gt; Web Interface

Launch a modern, responsive web interface for visual task management:

```bash
# Start the web server (opens browser automatically)
backlog browser

# Custom port
backlog browser --port 8080

# Don&#039;t open browser automatically
backlog browser --no-open
```

![Web Interface Screenshot](./.github/web.jpeg)

The web interface provides:
- **Interactive Kanban board** with drag-and-drop functionality
- **Task creation and editing** with rich forms and validation
- **Interactive acceptance criteria editor** with checklist controls and instant persistence
- **Real-time updates** as you manage tasks
- **Responsive design** that works on desktop and mobile
- **Archive tasks** with confirmation dialogs
- **Seamless CLI integration** - changes sync with your markdown files

---

## &lt;img src=&quot;./.github/cli-reference-256.png&quot; alt=&quot;CLI Reference&quot; width=&quot;28&quot; height=&quot;28&quot; align=&quot;center&quot;&gt; CLI reference

### Project Setup

| Action      | Example                                              |
|-------------|------------------------------------------------------|
| Initialize project | `backlog init [project-name]` (creates backlog structure with interactive configuration) |
| Re-initialize | `backlog init` (preserves existing config, allows updates) |

The `backlog init` command provides comprehensive project setup with interactive prompts for:
- **Project name** - identifier for your backlog
- **Auto-commit** - whether to automatically commit task changes to git
- **Default editor** - editor command for opening tasks (detects from environment)
- **Remote operations** - enable/disable fetching tasks from remote branches
- **Web UI settings** - port and browser auto-open preferences
- **Agent guidelines** - AI agent instruction files (CLAUDE.md, AGENTS.md, GEMINI.md, Copilot)
- **Claude Code agent** - optional Backlog.md agent for enhanced task management (defaults to not installed; opt-in during `init` or pass `--install-claude-agent true`)

### Documentation

- Document IDs are global across all subdirectories under `backlog/docs`. You can organize files in nested folders (e.g., `backlog/docs/guides/`), and `backlog doc list` and `backlog doc view &lt;id&gt;` work across the entire tree. Example: `backlog doc create -p guides &quot;New Guide&quot;`.

When re-initializing an existing project, all current configuration values are preserved and pre-populated in prompts, allowing you to update only what you need.

### Task Management

| Action      | Example                                              |
|-------------|------------------------------------------------------|
| Create task | `backlog task create &quot;Add OAuth System&quot;`                    |
| Create with description | `backlog task create &quot;Feature&quot; -d &quot;Add authentication system&quot;` |
| Create with assignee | `backlog task create &quot;Feature&quot; -a @sara`           |
| Create with status | `backlog task create &quot;Feature&quot; -s &quot;In Progress&quot;`    |
| Create with labels | `backlog task create &quot;Feature&quot; -l auth,backend`     |
| Create with priority | `backlog task create &quot;Feature&quot; --priority high`     |
| Create with plan | `backlog task create &quot;Feature&quot; --plan &quot;1. Research\n2. Implement&quot;`     |
| Create with AC | `backlog task create &quot;Feature&quot; --ac &quot;Must work,Must be tested&quot;` |
| Create with notes | `backlog task create &quot;Feature&quot; --notes &quot;Started initial research&quot;` |
| Create with deps | `backlog task create &quot;Feature&quot; --dep task-1,task-2` |
| Create sub task | `backlog task create -p 14 &quot;Add Login with Google&quot;`|
| Create (all options) | `backlog task create &quot;Feature&quot; -d &quot;Description&quot; -a @sara -s &quot;To Do&quot; -l auth --priority high --ac &quot;Must work&quot; --notes &quot;Initial setup done&quot; --dep task-1 -p 14` |
| List tasks  | `backlog task list [-s &lt;status&gt;] [-a &lt;assignee&gt;] [-p &lt;parent&gt;]` |
| List by parent | `backlog task list --parent 42` or `backlog task list -p task-42` |
| View detail | `backlog task 7` (interactive UI, press &#039;E&#039; to edit in editor) |
| View (AI mode) | `backlog task 7 --plain`                           |
| Edit        | `backlog task edit 7 -a @sara -l auth,backend`       |
| Add plan    | `backlog task edit 7 --plan &quot;Implementation approach&quot;`    |
| Add AC      | `backlog task edit 7 --ac &quot;New criterion&quot; --ac &quot;Another one&quot;` |
| Remove AC   | `backlog task edit 7 --remove-ac 2` (removes AC #2)      |
| Remove multiple ACs | `backlog task edit 7 --remove-ac 2 --remove-ac 4` (removes AC #2 and #4) |
| Check AC    | `backlog task edit 7 --check-ac 1` (marks AC #1 as done) |
| Check multiple ACs | `backlog task edit 7 --check-ac 1 --check-ac 3` (marks AC #1 and #3 as done) |
| Uncheck AC  | `backlog task edit 7 --uncheck-ac 3` (marks AC #3 as not done) |
| Mixed AC operations | `backlog task edit 7 --check-ac 1 --uncheck-ac 2 --remove-ac 4` |
| Add notes   | `backlog task edit 7 --notes &quot;Completed X, working on Y&quot;` (replaces existing) |
| Append notes | `backlog task edit 7 --append-notes &quot;New findings&quot;` |
| Add deps    | `backlog task edit 7 --dep task-1 --dep task-2`     |
| Archive     | `backlog task archive 7`                             |

#### Multi‑line input (description/plan/notes)

The CLI preserves input literally; `\n` sequences are not auto‑converted. Use one of the following to insert real newlines:

- **Bash/Zsh (ANSI‑C quoting)**
  - Description: `backlog task create &quot;Feature&quot; --desc $&#039;Line1\nLine2\n\nFinal paragraph&#039;`
  - Plan: `backlog task edit 7 --plan $&#039;1. Research\n2. Implement&#039;`
  - Notes: `backlog task edit 7 --notes $&#039;Completed A\nWorking on B&#039;`
  - Append notes: `backlog task edit 7 --append-notes $&#039;Added X\nAdded Y&#039;`
- **POSIX sh (printf)**
  - `backlog task create &quot;Feature&quot; --desc &quot;$(printf &#039;Line1\nLine2\n\nFinal paragraph&#039;)&quot;`
- **PowerShell (backtick)**
  - `backlog task create &quot;Feature&quot; --desc &quot;Line1`nLine2`n`nFinal paragraph&quot;`

Tip: Help text shows Bash examples with escaped `\\n` for readability; when typing, `$&#039;\n&#039;` expands to a newline.

### Search

Find tasks, documents, and decisions across your entire backlog with fuzzy search:

| Action             | Example                                              |
|--------------------|------------------------------------------------------|
| Search tasks       | `backlog search &quot;auth&quot;`                        |
| Filter by status   | `backlog search &quot;api&quot; --status &quot;In Progress&quot;`   |
| Filter by priority | `backlog search &quot;bug&quot; --priority high`        |
| Combine filters    | `backlog search &quot;web&quot; --status &quot;To Do&quot; --priority medium` |
| Plain text output  | `backlog search &quot;feature&quot; --plain` (for scripts/AI) |

**Search features:**
- **Fuzzy matching** -- finds &quot;authentication&quot; when searching for &quot;auth&quot;
- **Interactive filters** -- refine your search in real-time with the TUI
- **Live filtering** -- see results update as you type (no Enter needed)

### Draft Workflow

| Action      | Example                                              |
|-------------|------------------------------------------------------|
| Create draft | `backlog task create &quot;Feature&quot; --draft`             |
| Draft flow  | `backlog draft create &quot;Spike GraphQL&quot;` → `backlog draft promote 3.1` |
| Demote to draft| `backlog task demote &lt;id&gt;` |

### Board Operations

| Action      | Example                                              |
|-------------|------------------------------------------------------|
| Kanban board      | `backlog board` (interactive UI, press &#039;E&#039; to edit in editor) |
| Export board | `backlog board export [file]` (exports Kanban board to markdown) |
| Export with version | `backlog board export --export-version &quot;v1.0.0&quot;` (includes version in export) |

### Statistics &amp; Overview

| Action      | Example                                              |
|-------------|------------------------------------------------------|
| Project overview | `backlog overview` (interactive TUI showing project statistics) |

### Web Interface

| Action      | Example                                              |
|-------------|------------------------------------------------------|
| Web interface | `backlog browser` (launches web UI on port 6420) |
| Web custom port | `backlog browser --port 8080 --no-open` |

### Documentation

| Action      | Example                                              |
|-------------|------------------------------------------------------|
| Create doc | `backlog doc create &quot;API Guidelines&quot;` |
| Create with path | `backlog doc create &quot;Setup Guide&quot; -p guides/setup` |
| Create with type | `backlog doc create &quot;Architecture&quot; -t technical` |
| List docs | `backlog doc list` |
| View doc | `backlog doc view doc-1` |

### Decisions

| Action      | Example                                              |
|-------------|------------------------------------------------------|
| Create decision | `backlog decision create &quot;Use PostgreSQL for primary database&quot;` |
| Create with status | `backlog decision create &quot;Migrate to TypeScript&quot; -s proposed` |

### Agent Instructions

| Action      | Example                                              |
|-------------|------------------------------------------------------|
| Update agent files | `backlog agents --update-instructions` (updates CLAUDE.md, AGENTS.md, GEMINI.md, .github/copilot-instructions.md) |

### Maintenance

| Action      | Example                                              |
|-------------|------------------------------------------------------|
| Cleanup done tasks | `backlog cleanup` (move old completed tasks to completed folder) |

Full help: `backlog --help`

---

## &lt;img src=&quot;./.github/configuration-256.png&quot; alt=&quot;Configuration&quot; width=&quot;28&quot; height=&quot;28&quot; align=&quot;center&quot;&gt; Configuration

Backlog.md merges the following layers (highest → lowest):

1. CLI flags
2. `backlog/config.yml` (per‑project)
3. `~/backlog/user` (per‑user)
4. Built‑ins

### Configuration Commands

| Action      | Example                                              |
|-------------|------------------------------------------------------|
| View all configs | `backlog config list` |
| Get specific config | `backlog config get defaultEditor` |
| Set config value | `backlog config set defaultEditor &quot;code --wait&quot;` |
| Enable auto-commit | `backlog config set autoCommit true` |
| Bypass git hooks | `backlog config set bypassGitHooks true` |
| Enable cross-branch check | `backlog config set checkActiveBranches true` |
| Set active branch days | `backlog config set activeBranchDays 30` |

### Available Configuration Options

| Key               | Purpose            | Default                       |
|-------------------|--------------------|-------------------------------|
| `defaultAssignee` | Pre‑fill assignee  | `[]`                          |
| `defaultStatus`   | First column       | `To Do`                       |
| `statuses`        | Board columns      | `[To Do, In Progress, Done]`  |
| `dateFormat`      | Date/time format   | `yyyy-mm-dd hh:mm`            |
| `timezonePreference` | Timezone for dates | `UTC`                     |
| `includeDatetimeInDates` | Add time to new dates | `true`              |
| `defaultEditor`   | Editor for &#039;E&#039; key | Platform default (nano/notepad) |
| `defaultPort`     | Web UI port        | `6420`                        |
| `autoOpenBrowser` | Open browser automatically | `true`            |
| `remoteOperations`| Enable remote git operations | `true`           |
| `autoCommit`      | Automatically commit task changes | `false`       |
| `bypassGitHooks`  | Skip git hooks when committing (uses --no-verify) | `false`       |
| `zeroPaddedIds`   | Pad all IDs (tasks, docs, etc.) with leading zeros | `(disabled)`  |
| `checkActiveBranches` | Check task states across active branches for accuracy | `true` |
| `activeBranchDays` | How many days a branch is considered active | `30` |

&gt; **Note**: Set `remoteOperations: false` to work offline. This disables git fetch operations and loads tasks from local branches only, useful when working without network connectivity.

&gt; **Git Control**: By default, `autoCommit` is set to `false`, giving you full control over your git history. Task operations will modify files but won&#039;t automatically commit changes. Set `autoCommit: true` if you prefer automatic commits for each task operation.

&gt; **Git Hooks**: If you have pre-commit hooks (like conventional commits or linters) that interfere with backlog.md&#039;s automated commits, set `bypassGitHooks: true` to skip them using the `--no-verify` flag.

&gt; **Performance**: Cross-branch checking ensures accurate task tracking across all active branches but may impact performance on large repositories. You can disable it by setting `checkActiveBranches: false` for maximum speed, or adjust `activeBranchDays` to control how far back to look for branch activity (lower values = better performance).

&gt; **Date/Time Support**: Backlog.md now supports datetime precision for all dates. New items automatically include time (YYYY-MM-DD HH:mm format in UTC), while existing date-only entries remain unchanged for backward compatibility. Use the migration script `bun src/scripts/migrate-dates.ts` to optionally add time to existing items.

---

## &lt;img src=&quot;./.github/sharing-export-256.png&quot; alt=&quot;Sharing &amp; Export&quot; width=&quot;28&quot; height=&quot;28&quot; align=&quot;center&quot;&gt; Sharing &amp; Export

### Board Export

Export your Kanban board to a clean, shareable markdown file:

```bash
# Export to default Backlog.md file
backlog board export

# Export to custom file
backlog board export project-status.md

# Force overwrite existing file
backlog board export --force

# Export to README.md with board markers
backlog board export --readme

# Include a custom version string in the export
backlog board export --export-version &quot;v1.2.3&quot;
backlog board export --readme --export-version &quot;Release 2024.12.1-beta&quot;
```

Perfect for sharing project status, creating reports, or storing snapshots in version control.

---

&lt;!-- BOARD_START --&gt;

## 📊 Backlog.md Project Status (v1.13.4)

This board was automatically generated by [Backlog.md](https://backlog.md)

Generated on: 2025-09-22 21:36:55

| To Do | In Progress | Done |
| --- | --- | --- |
| **TASK-270** - Prevent command substitution in task creation inputs [@codex] | **TASK-273** - Refactor search [@codex]&lt;br&gt;*#core #search* | └─ **TASK-273.06** - 273.06: Web UI on centralized search [@codex]&lt;br&gt;*#web #search #ui* |
| **TASK-268** - Show agent instruction version status [@codex] | └─ **TASK-24.1** - CLI: Kanban board milestone view [@codex] | └─ **TASK-273.05** - 273.05: Server endpoints on shared store/search [@codex]&lt;br&gt;*#server #search #infra* |
| **TASK-267** - Add agent instruction version metadata [@codex] |  | └─ **TASK-273.04** - 273.04: CLI &amp; TUI search integration [@codex]&lt;br&gt;*#cli #tui #search* |
| **TASK-262** - TUI: Show all configured status columns in Kanban [@codex]&lt;br&gt;*#tui #board #kanban #config #parity* |  | └─ **TASK-273.03** - 273.03: Build core Fuse search service [@codex]&lt;br&gt;*#core #search* |
| **TASK-260** - Web UI: Add filtering to All Tasks view [@codex]&lt;br&gt;*#web-ui #filters #ui* |  | └─ **TASK-273.02** - 273.02: Introduce shared content store [@codex]&lt;br&gt;*#core #infra #search* |
| **TASK-259** - Add task list filters for Status and Priority&lt;br&gt;*#tui #filters #ui* |  | └─ **TASK-273.01** - 273.01: Migrate domain types to rawContent [@codex]&lt;br&gt;*#core #types #search* |
| **TASK-257** - Deep link URLs for tasks in board and list views |  | **TASK-272** - Adopt npm trusted publishing for releases [@codex] |
| **TASK-200** - Add Claude Code integration with workflow commands during init&lt;br&gt;*#enhancement #developer-experience* |  | **TASK-269** - Refactor backlog init agent selection [@codex] |
| **TASK-244** - TUI: add live updates via watch in task list and kanban [@codex]&lt;br&gt;*#tui #watcher #enhancement* |  | **TASK-271** - Fix acceptance criteria section removal when list emptied [@codex] |
| **TASK-218** - Update documentation and tests for sequences&lt;br&gt;*#sequences #documentation #testing* |  | **TASK-266** - Fix Implementation Notes heading truncation in web UI [@codex]&lt;br&gt;*#web-ui #bug* |
| **TASK-217** - Create web UI for sequences with drag-and-drop&lt;br&gt;*#sequences #web-ui #frontend* |  | **TASK-265** - Web UI: Enhance all tasks view with in-progress highlighting and done tasks toggle [@web-ui-agent]&lt;br&gt;*#ui #enhancement* |
| └─ **TASK-217.03** - Sequences web UI: move tasks and update dependencies&lt;br&gt;*#sequences* |  | **TASK-264** - TUI: Fix regression in task popup scrolling with arrow keys [@codex]&lt;br&gt;*#bug #tui #regression* |
| └─ **TASK-217.04** - Sequences web UI: tests&lt;br&gt;*#sequences* |  |  |
| └─ **TASK-217.02** - Sequences web UI: list sequences&lt;br&gt;*#sequences* |  |  |
| **TASK-243** - Enable TUI task reordering with Shift+Arrow keys [@codex]&lt;br&gt;*#tui #ui #enhancement* |  |  |
| **TASK-240** - Improve binary resolution on Apple Silicon (Rosetta/arch mismatch) [@codex]&lt;br&gt;*#packaging #bug #macos* |  |  |
| **TASK-239** - Feature: Auto-link tasks to documents/decisions + backlinks [@codex]&lt;br&gt;*#web #enhancement #docs* |  |  |
| **TASK-222** - Improve task and subtask visualization in web UI |  |  |
| **TASK-208** - Add paste-as-markdown support in Web UI&lt;br&gt;*#web-ui #enhancement #markdown* |  |  |

&lt;!-- BOARD_END --&gt;

### License

Backlog.md is released under the **MIT License** – do anything, just give credit. See [LICENSE](LICEN

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[supabase/supabase]]></title>
            <link>https://github.com/supabase/supabase</link>
            <guid>https://github.com/supabase/supabase</guid>
            <pubDate>Fri, 26 Sep 2025 00:04:56 GMT</pubDate>
            <description><![CDATA[The Postgres development platform. Supabase gives you a dedicated Postgres database to build your web, mobile, and AI applications.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/supabase/supabase">supabase/supabase</a></h1>
            <p>The Postgres development platform. Supabase gives you a dedicated Postgres database to build your web, mobile, and AI applications.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 89,127</p>
            <p>Forks: 9,958</p>
            <p>Stars today: 66 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/8291514/213727234-cda046d6-28c6-491a-b284-b86c5cede25d.png#gh-light-mode-only&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/8291514/213727225-56186826-bee8-43b5-9b15-86e839d89393.png#gh-dark-mode-only&quot;&gt;
&lt;/p&gt;

# Supabase

[Supabase](https://supabase.com) is the Postgres development platform. We&#039;re building the features of Firebase using enterprise-grade open source tools.

- [x] Hosted Postgres Database. [Docs](https://supabase.com/docs/guides/database)
- [x] Authentication and Authorization. [Docs](https://supabase.com/docs/guides/auth)
- [x] Auto-generated APIs.
  - [x] REST. [Docs](https://supabase.com/docs/guides/api)
  - [x] GraphQL. [Docs](https://supabase.com/docs/guides/graphql)
  - [x] Realtime subscriptions. [Docs](https://supabase.com/docs/guides/realtime)
- [x] Functions.
  - [x] Database Functions. [Docs](https://supabase.com/docs/guides/database/functions)
  - [x] Edge Functions [Docs](https://supabase.com/docs/guides/functions)
- [x] File Storage. [Docs](https://supabase.com/docs/guides/storage)
- [x] AI + Vector/Embeddings Toolkit. [Docs](https://supabase.com/docs/guides/ai)
- [x] Dashboard

![Supabase Dashboard](https://raw.githubusercontent.com/supabase/supabase/master/apps/www/public/images/github/supabase-dashboard.png)

Watch &quot;releases&quot; of this repo to get notified of major updates.

&lt;kbd&gt;&lt;img src=&quot;https://raw.githubusercontent.com/supabase/supabase/d5f7f413ab356dc1a92075cb3cee4e40a957d5b1/web/static/watch-repo.gif&quot; alt=&quot;Watch this repo&quot;/&gt;&lt;/kbd&gt;

## Documentation

For full documentation, visit [supabase.com/docs](https://supabase.com/docs)

To see how to Contribute, visit [Getting Started](./DEVELOPERS.md)

## Community &amp; Support

- [Community Forum](https://github.com/supabase/supabase/discussions). Best for: help with building, discussion about database best practices.
- [GitHub Issues](https://github.com/supabase/supabase/issues). Best for: bugs and errors you encounter using Supabase.
- [Email Support](https://supabase.com/docs/support#business-support). Best for: problems with your database or infrastructure.
- [Discord](https://discord.supabase.com). Best for: sharing your applications and hanging out with the community.

## How it works

Supabase is a combination of open source tools. We’re building the features of Firebase using enterprise-grade, open source products. If the tools and communities exist, with an MIT, Apache 2, or equivalent open license, we will use and support that tool. If the tool doesn&#039;t exist, we build and open source it ourselves. Supabase is not a 1-to-1 mapping of Firebase. Our aim is to give developers a Firebase-like developer experience using open source tools.

**Architecture**

Supabase is a [hosted platform](https://supabase.com/dashboard). You can sign up and start using Supabase without installing anything.
You can also [self-host](https://supabase.com/docs/guides/hosting/overview) and [develop locally](https://supabase.com/docs/guides/local-development).

![Architecture](apps/docs/public/img/supabase-architecture.svg)

- [Postgres](https://www.postgresql.org/) is an object-relational database system with over 30 years of active development that has earned it a strong reputation for reliability, feature robustness, and performance.
- [Realtime](https://github.com/supabase/realtime) is an Elixir server that allows you to listen to PostgreSQL inserts, updates, and deletes using websockets. Realtime polls Postgres&#039; built-in replication functionality for database changes, converts changes to JSON, then broadcasts the JSON over websockets to authorized clients.
- [PostgREST](http://postgrest.org/) is a web server that turns your PostgreSQL database directly into a RESTful API.
- [GoTrue](https://github.com/supabase/gotrue) is a JWT-based authentication API that simplifies user sign-ups, logins, and session management in your applications.
- [Storage](https://github.com/supabase/storage-api) a RESTful API for managing files in S3, with Postgres handling permissions.
- [pg_graphql](http://github.com/supabase/pg_graphql/) a PostgreSQL extension that exposes a GraphQL API.
- [postgres-meta](https://github.com/supabase/postgres-meta) is a RESTful API for managing your Postgres, allowing you to fetch tables, add roles, and run queries, etc.
- [Kong](https://github.com/Kong/kong) is a cloud-native API gateway.

#### Client libraries

Our approach for client libraries is modular. Each sub-library is a standalone implementation for a single external system. This is one of the ways we support existing tools.

&lt;table style=&quot;table-layout:fixed; white-space: nowrap;&quot;&gt;
  &lt;tr&gt;
    &lt;th&gt;Language&lt;/th&gt;
    &lt;th&gt;Client&lt;/th&gt;
    &lt;th colspan=&quot;5&quot;&gt;Feature-Clients (bundled in Supabase client)&lt;/th&gt;
  &lt;/tr&gt;
  &lt;!-- notranslate --&gt;
  &lt;tr&gt;
    &lt;th&gt;&lt;/th&gt;
    &lt;th&gt;Supabase&lt;/th&gt;
    &lt;th&gt;&lt;a href=&quot;https://github.com/postgrest/postgrest&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;PostgREST&lt;/a&gt;&lt;/th&gt;
    &lt;th&gt;&lt;a href=&quot;https://github.com/supabase/gotrue&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;GoTrue&lt;/a&gt;&lt;/th&gt;
    &lt;th&gt;&lt;a href=&quot;https://github.com/supabase/realtime&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Realtime&lt;/a&gt;&lt;/th&gt;
    &lt;th&gt;&lt;a href=&quot;https://github.com/supabase/storage-api&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Storage&lt;/a&gt;&lt;/th&gt;
    &lt;th&gt;Functions&lt;/th&gt;
  &lt;/tr&gt;
  &lt;!-- TEMPLATE FOR NEW ROW --&gt;
  &lt;!-- START ROW
  &lt;tr&gt;
    &lt;td&gt;lang&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/supabase-lang&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;supabase-lang&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/postgrest-lang&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;postgrest-lang&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/gotrue-lang&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;gotrue-lang&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/realtime-lang&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;realtime-lang&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/storage-lang&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;storage-lang&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  END ROW --&gt;
  &lt;!-- /notranslate --&gt;
  &lt;th colspan=&quot;7&quot;&gt;⚡️ Official ⚡️&lt;/th&gt;
  &lt;!-- notranslate --&gt;
  &lt;tr&gt;
    &lt;td&gt;JavaScript (TypeScript)&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/supabase-js&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;supabase-js&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/postgrest-js&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;postgrest-js&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/gotrue-js&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;gotrue-js&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/realtime-js&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;realtime-js&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/storage-js&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;storage-js&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/functions-js&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;functions-js&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;Flutter&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/supabase-flutter&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;supabase-flutter&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/postgrest-dart&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;postgrest-dart&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/gotrue-dart&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;gotrue-dart&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/realtime-dart&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;realtime-dart&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/storage-dart&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;storage-dart&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/functions-dart&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;functions-dart&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Swift&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/supabase-swift&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;supabase-swift&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/supabase-swift/tree/main/Sources/PostgREST&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;postgrest-swift&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/supabase-swift/tree/main/Sources/Auth&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;auth-swift&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/supabase-swift/tree/main/Sources/Realtime&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;realtime-swift&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/supabase-swift/tree/main/Sources/Storage&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;storage-swift&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/supabase-swift/tree/main/Sources/Functions&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;functions-swift&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Python&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/supabase-py&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;supabase-py&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/postgrest-py&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;postgrest-py&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/gotrue-py&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;gotrue-py&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/realtime-py&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;realtime-py&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/storage-py&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;storage-py&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/functions-py&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;functions-py&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;!-- /notranslate --&gt;
  &lt;th colspan=&quot;7&quot;&gt;💚 Community 💚&lt;/th&gt;
  &lt;!-- notranslate --&gt;
  &lt;tr&gt;
    &lt;td&gt;C#&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/supabase-csharp&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;supabase-csharp&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/postgrest-csharp&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;postgrest-csharp&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/gotrue-csharp&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;gotrue-csharp&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/realtime-csharp&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;realtime-csharp&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/storage-csharp&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;storage-csharp&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/functions-csharp&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;functions-csharp&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Go&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/postgrest-go&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;postgrest-go&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/gotrue-go&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;gotrue-go&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/storage-go&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;storage-go&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/functions-go&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;functions-go&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Java&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/gotrue-java&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;gotrue-java&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/storage-java&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;storage-java&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Kotlin&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/supabase-kt&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;supabase-kt&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/supabase-kt/tree/master/Postgrest&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;postgrest-kt&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/supabase-kt/tree/master/Auth&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;auth-kt&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/supabase-kt/tree/master/Realtime&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;realtime-kt&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/supabase-kt/tree/master/Storage&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;storage-kt&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/supabase-kt/tree/master/Functions&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;functions-kt&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Ruby&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/supabase-rb&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;supabase-rb&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/postgrest-rb&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;postgrest-rb&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Rust&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/postgrest-rs&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;postgrest-rs&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Godot Engine (GDScript)&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/godot-engine.supabase&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;supabase-gdscript&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/postgrest-gdscript&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;postgrest-gdscript&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/gotrue-gdscript&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;gotrue-gdscript&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/realtime-gdscript&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;realtime-gdscript&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/storage-gdscript&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;storage-gdscript&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/functions-gdscript&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;functions-gdscript&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;!-- /notranslate --&gt;
&lt;/table&gt;

&lt;!--- Remove this list if you&#039;re translating to another language, it&#039;s hard to keep updated across multiple files--&gt;
&lt;!--- Keep only the link to the list of translation files--&gt;

## Badges

![Made with Supabase](./apps/www/public/badge-made-with-supabase.svg)

```md
[![Made with Supabase](https://supabase.com/badge-made-with-supabase.svg)](https://supabase.com)
```

```html
&lt;a href=&quot;https://supabase.com&quot;&gt;
  &lt;img
    width=&quot;168&quot;
    height=&quot;30&quot;
    src=&quot;https://supabase.com/badge-made-with-supabase.svg&quot;
    alt=&quot;Made with Supabase&quot;
  /&gt;
&lt;/a&gt;
```

![Made with Supabase (dark)](./apps/www/public/badge-made-with-supabase-dark.svg)

```md
[![Made with Supabase](https://supabase.com/badge-made-with-supabase-dark.svg)](https://supabase.com)
```

```html
&lt;a href=&quot;https://supabase.com&quot;&gt;
  &lt;img
    width=&quot;168&quot;
    height=&quot;30&quot;
    src=&quot;https://supabase.com/badge-made-with-supabase-dark.svg&quot;
    alt=&quot;Made with Supabase&quot;
  /&gt;
&lt;/a&gt;
```

## Translations

- [Arabic | العربية](/i18n/README.ar.md)
- [Albanian / Shqip](/i18n/README.sq.md)
- [Bangla / বাংলা](/i18n/README.bn.md)
- [Bulgarian / Български](/i18n/README.bg.md)
- [Catalan / Català](/i18n/README.ca.md)
- [Croatian / Hrvatski](/i18n/README.hr.md)
- [Czech / čeština](/i18n/README.cs.md)
- [Danish / Dansk](/i18n/README.da.md)
- [Dutch / Nederlands](/i18n/README.nl.md)
- [English](https://github.com/supabase/supabase)
- [Estonian / eesti keel](/i18n/README.et.md)
- [Finnish / Suomalainen](/i18n/README.fi.md)
- [French / Français](/i18n/README.fr.md)
- [German / Deutsch](/i18n/README.de.md)
- [Greek / Ελληνικά](/i18n/README.el.md)
- [Gujarati / ગુજરાતી](/i18n/README.gu.md)
- [Hebrew / עברית](/i18n/README.he.md)
- [Hindi / हिंदी](/i18n/README.hi.md)
- [Hungarian / Magyar](/i18n/README.hu.md)
- [Nepali / नेपाली](/i18n/README.ne.md)
- [Indonesian / Bahasa Indonesia](/i18n/README.id.md)
- [Italiano / Italian](/i18n/README.it.md)
- [Japanese / 日本語](/i18n/README.jp.md)
- [Korean / 한국어](/i18n/README.ko.md)
- [Lithuanian / lietuvių](/i18n/README.lt.md)
- [Latvian / latviski](/i18n/README.lv.md)
- [Malay / Bahasa Malaysia](/i18n/README.ms.md)
- [Norwegian (Bokmål) / Norsk (Bokmål)](/i18n/README.nb.md)
- [Persian / فارسی](/i18n/README.fa.md)
- [Polish / Polski](/i18n/README.pl.md)
- [Portuguese / Português](/i18n/README.pt.md)
- [Portuguese (Brazilian) / Português Brasileiro](/i18n/README.pt-br.md)
- [Romanian / Română](/i18n/README.ro.md)
- [Russian / Pусский](/i18n/README.ru.md)
- [Serbian / Srpski](/i18n/README.sr.md)
- [Sinhala / සිංහල](/i18n/README.si.md)
- [Slovak / slovenský](/i18n/README.sk.md)
- [Slovenian / Slovenščina](/i18n/README.sl.md)
- [Spanish / Español](/i18n/README.es.md)
- [Simplified Chinese / 简体中文](/i18n/README.zh-cn.md)
- [Swedish / Svenska](/i18n/README.sv.md)
- [Thai / ไทย](/i18n/README.th.md)
- [Traditional Chinese / 繁體中文](/i18n/README.zh-tw.md)
- [Turkish / Türkçe](/i18n/README.tr.md)
- [Ukrainian / Українська](/i18n/README.uk.md)
- [Vietnamese / Tiếng Việt](/i18n/README.vi-vn.md)
- [List of translations](/i18n/languages.md) &lt;!--- Keep only this --&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[shadcn-ui/ui]]></title>
            <link>https://github.com/shadcn-ui/ui</link>
            <guid>https://github.com/shadcn-ui/ui</guid>
            <pubDate>Fri, 26 Sep 2025 00:04:55 GMT</pubDate>
            <description><![CDATA[A set of beautifully-designed, accessible components and a code distribution platform. Works with your favorite frameworks. Open Source. Open Code.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/shadcn-ui/ui">shadcn-ui/ui</a></h1>
            <p>A set of beautifully-designed, accessible components and a code distribution platform. Works with your favorite frameworks. Open Source. Open Code.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 95,377</p>
            <p>Forks: 6,781</p>
            <p>Stars today: 73 stars today</p>
            <h2>README</h2><pre># shadcn/ui

Accessible and customizable components that you can copy and paste into your apps. Free. Open Source. **Use this to build your own component library**.

![hero](apps/www/public/og.jpg)

## Documentation

Visit http://ui.shadcn.com/docs to view the documentation.

## Contributing

Please read the [contributing guide](/CONTRIBUTING.md).

## License

Licensed under the [MIT license](https://github.com/shadcn/ui/blob/main/LICENSE.md).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[withastro/astro]]></title>
            <link>https://github.com/withastro/astro</link>
            <guid>https://github.com/withastro/astro</guid>
            <pubDate>Fri, 26 Sep 2025 00:04:54 GMT</pubDate>
            <description><![CDATA[The web framework for content-driven websites. ⭐️ Star to support our work!]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/withastro/astro">withastro/astro</a></h1>
            <p>The web framework for content-driven websites. ⭐️ Star to support our work!</p>
            <p>Language: TypeScript</p>
            <p>Stars: 53,515</p>
            <p>Forks: 2,900</p>
            <p>Stars today: 22 stars today</p>
            <h2>README</h2><pre>![Build the web you want](.github/assets/banner.jpg &#039;Build the web you want&#039;)

&lt;p align=&quot;center&quot;&gt;
  &lt;br/&gt;
  &lt;a href=&quot;https://astro.build&quot;&gt;Astro&lt;/a&gt; is a website build tool for the modern web &amp;mdash;
  &lt;br/&gt;
  powerful developer experience meets lightweight output.
  &lt;br/&gt;&lt;br/&gt;
&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;

[![main](https://github.com/withastro/astro/actions/workflows/ci.yml/badge.svg)](https://github.com/withastro/astro/actions/workflows/ci.yml)
[![License](https://img.shields.io/badge/License-MIT-blue.svg)](https://github.com/withastro/astro/blob/main/LICENSE)
[![npm version](https://badge.fury.io/js/astro.svg)](https://badge.fury.io/js/astro)

&lt;/div&gt;

## Install

The **recommended** way to install the latest version of Astro is by running the command below:

```bash
npm create astro@latest
```

You can also install Astro **manually** by running this command instead:

```bash
npm install --save-dev astro
```

Looking for help? Start with our [Getting Started](https://docs.astro.build/en/getting-started/) guide.

Looking for quick examples? [Open a starter project](https://astro.new/) right in your browser.

## Documentation

Visit our [official documentation](https://docs.astro.build/).

## Support

Having trouble? Get help in the official [Astro Discord](https://astro.build/chat).

## Contributing

**New contributors welcome!** Check out our [Contributors Guide](CONTRIBUTING.md) for help getting started.

Join us on [Discord](https://astro.build/chat) to meet other maintainers. We&#039;ll help you get your first contribution in no time!

## Directory

| Package                                                 | Release Notes                                                                                                                                   |
| ------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------- |
| [astro](packages/astro)                                 | [![astro version](https://img.shields.io/npm/v/astro.svg?label=%20)](packages/astro/CHANGELOG.md)                                               |
| [create-astro](packages/create-astro)                   | [![create-astro version](https://img.shields.io/npm/v/create-astro.svg?label=%20)](packages/create-astro/CHANGELOG.md)                          |
| [@astrojs/react](packages/integrations/react)           | [![@astrojs/react version](https://img.shields.io/npm/v/@astrojs/react.svg?label=%20)](packages/integrations/react/CHANGELOG.md)                |
| [@astrojs/preact](packages/integrations/preact)         | [![@astrojs/preact version](https://img.shields.io/npm/v/@astrojs/preact.svg?label=%20)](packages/integrations/preact/CHANGELOG.md)             |
| [@astrojs/solid-js](packages/integrations/solid)        | [![@astrojs/solid version](https://img.shields.io/npm/v/@astrojs/solid-js.svg?label=%20)](packages/integrations/solid/CHANGELOG.md)             |
| [@astrojs/svelte](packages/integrations/svelte)         | [![@astrojs/svelte version](https://img.shields.io/npm/v/@astrojs/svelte.svg?label=%20)](packages/integrations/svelte/CHANGELOG.md)             |
| [@astrojs/vue](packages/integrations/vue)               | [![@astrojs/vue version](https://img.shields.io/npm/v/@astrojs/vue.svg?label=%20)](packages/integrations/vue/CHANGELOG.md)                      |
| [@astrojs/node](packages/integrations/node)             | [![@astrojs/node version](https://img.shields.io/npm/v/@astrojs/node.svg?label=%20)](packages/integrations/node/CHANGELOG.md)                   |
| [@astrojs/vercel](packages/integrations/vercel)         | [![@astrojs/vercel version](https://img.shields.io/npm/v/@astrojs/vercel.svg?label=%20)](packages/integrations/vercel/CHANGELOG.md)             |
| [@astrojs/cloudflare](packages/integrations/cloudflare) | [![@astrojs/cloudflare version](https://img.shields.io/npm/v/@astrojs/cloudflare.svg?label=%20)](packages/integrations/cloudflare/CHANGELOG.md) |
| [@astrojs/partytown](packages/integrations/partytown)   | [![@astrojs/partytown version](https://img.shields.io/npm/v/@astrojs/partytown.svg?label=%20)](packages/integrations/partytown/CHANGELOG.md)    |
| [@astrojs/sitemap](packages/integrations/sitemap)       | [![@astrojs/sitemap version](https://img.shields.io/npm/v/@astrojs/sitemap.svg?label=%20)](packages/integrations/sitemap/CHANGELOG.md)          |
| [@astrojs/alpinejs](packages/integrations/alpinejs)     | [![@astrojs/alpinejs version](https://img.shields.io/npm/v/@astrojs/alpinejs.svg?label=%20)](packages/integrations/alpinejs/CHANGELOG.md)       |
| [@astrojs/mdx](packages/integrations/mdx)               | [![@astrojs/mdx version](https://img.shields.io/npm/v/@astrojs/mdx.svg?label=%20)](packages/integrations/mdx/CHANGELOG.md)                      |
| [@astrojs/db](packages/db)                              | [![@astrojs/db version](https://img.shields.io/npm/v/@astrojs/db.svg?label=%20)](packages/db/CHANGELOG.md)                                      |
| [@astrojs/rss](packages/astro-rss)                      | [![@astrojs/rss version](https://img.shields.io/npm/v/@astrojs/rss.svg?label=%20)](packages/astro-rss/CHANGELOG.md)                             |
| [@astrojs/netlify](packages/integrations/netlify)       | [![@astrojs/netlify version](https://img.shields.io/npm/v/@astrojs/netlify.svg?label=%20)](packages/integrations/netlify/CHANGELOG.md)          |

[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/6178/badge)](https://bestpractices.coreinfrastructure.org/projects/6178)

Several official projects are maintained outside of this repo:

| Project                                                             | Repository                                                              |
| ------------------------------------------------------------------- | ----------------------------------------------------------------------- |
| [@astrojs/compiler](https://github.com/withastro/compiler)          | [withastro/compiler](https://github.com/withastro/compiler)             |
| [Astro Language Tools](https://github.com/withastro/language-tools) | [withastro/language-tools](https://github.com/withastro/language-tools) |

## Links

- [License (MIT)](LICENSE)
- [Code of Conduct](https://github.com/withastro/.github/blob/main/CODE_OF_CONDUCT.md)
- [Open Governance &amp; Voting](https://github.com/withastro/.github/blob/main/GOVERNANCE.md)
- [Project Funding](https://github.com/withastro/.github/blob/main/FUNDING.md)
- [Website](https://astro.build/)

## Sponsors

Astro is free, open source software made possible by these wonderful sponsors.

[❤️ Sponsor Astro! ❤️](https://github.com/withastro/.github/blob/main/FUNDING.md)

&lt;p align=&quot;center&quot;&gt;
  &lt;a target=&quot;_blank&quot; href=&quot;https://opencollective.com/astrodotbuild&quot;&gt;
    &lt;img src=&quot;https://astro.build/sponsors.png&quot; alt=&quot;Sponsor logos including the current Astro Sponsors, Gold Sponsors, and Exclusive Partner Sponsors: Netlify, Sentry, and Project IDX.&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[ahmedkhaleel2004/gitdiagram]]></title>
            <link>https://github.com/ahmedkhaleel2004/gitdiagram</link>
            <guid>https://github.com/ahmedkhaleel2004/gitdiagram</guid>
            <pubDate>Fri, 26 Sep 2025 00:04:53 GMT</pubDate>
            <description><![CDATA[Free, simple, fast interactive diagrams for any GitHub repository]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/ahmedkhaleel2004/gitdiagram">ahmedkhaleel2004/gitdiagram</a></h1>
            <p>Free, simple, fast interactive diagrams for any GitHub repository</p>
            <p>Language: TypeScript</p>
            <p>Stars: 14,332</p>
            <p>Forks: 1,069</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre>[![Image](./docs/readme_img.png &quot;GitDiagram Front Page&quot;)](https://gitdiagram.com/)

![License](https://img.shields.io/badge/license-MIT-blue.svg)
[![Kofi](https://img.shields.io/badge/Kofi-F16061.svg?logo=ko-fi&amp;logoColor=white)](https://ko-fi.com/ahmedkhaleel2004)

# GitDiagram

Turn any GitHub repository into an interactive diagram for visualization in seconds.

You can also replace `hub` with `diagram` in any Github URL to access its diagram.

## 🚀 Features

- 👀 **Instant Visualization**: Convert any GitHub repository structure into a system design / architecture diagram
- 🎨 **Interactivity**: Click on components to navigate directly to source files and relevant directories
- ⚡ **Fast Generation**: Powered by OpenAI o4-mini for quick and accurate diagrams
- 🔄 **Customization**: Modify and regenerate diagrams with custom instructions
- 🌐 **API Access**: Public API available for integration (WIP)

## ⚙️ Tech Stack

- **Frontend**: Next.js, TypeScript, Tailwind CSS, ShadCN
- **Backend**: FastAPI, Python, Server Actions
- **Database**: PostgreSQL (with Drizzle ORM)
- **AI**: OpenAI o4-mini
- **Deployment**: Vercel (Frontend), EC2 (Backend)
- **CI/CD**: GitHub Actions
- **Analytics**: PostHog, Api-Analytics

## 🤔 About

I created this because I wanted to contribute to open-source projects but quickly realized their codebases are too massive for me to dig through manually, so this helps me get started - but it&#039;s definitely got many more use cases!

Given any public (or private!) GitHub repository it generates diagrams in Mermaid.js with OpenAI&#039;s o4-mini! (Previously Claude 3.5 Sonnet)

I extract information from the file tree and README for details and interactivity (you can click components to be taken to relevant files and directories)

Most of what you might call the &quot;processing&quot; of this app is done with prompt engineering - see `/backend/app/prompts.py`. This basically extracts and pipelines data and analysis for a larger action workflow, ending in the diagram code.

## 🔒 How to diagram private repositories

You can simply click on &quot;Private Repos&quot; in the header and follow the instructions by providing a GitHub personal access token with the `repo` scope.

You can also self-host this app locally (backend separated as well!) with the steps below.

## 🛠️ Self-hosting / Local Development

1. Clone the repository

```bash
git clone https://github.com/ahmedkhaleel2004/gitdiagram.git
cd gitdiagram
```

2. Install dependencies

```bash
pnpm i
```

3. Set up environment variables (create .env)

```bash
cp .env.example .env
```

Then edit the `.env` file with your Anthropic API key and optional GitHub personal access token.

4. Run backend

```bash
docker-compose up --build -d
```

Logs available at `docker-compose logs -f`
The FastAPI server will be available at `localhost:8000`

5. Start local database

```bash
chmod +x start-database.sh
./start-database.sh
```

When prompted to generate a random password, input yes.
The Postgres database will start in a container at `localhost:5432`

6. Initialize the database schema

```bash
pnpm db:push
```

You can view and interact with the database using `pnpm db:studio`

7. Run Frontend

```bash
pnpm dev
```

You can now access the website at `localhost:3000` and edit the rate limits defined in `backend/app/routers/generate.py` in the generate function decorator.

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

## Acknowledgements

Shoutout to [Romain Courtois](https://github.com/cyclotruc)&#039;s [Gitingest](https://gitingest.com/) for inspiration and styling

## 📈 Rate Limits

I am currently hosting it for free with no rate limits though this is somewhat likely to change in the future.

&lt;!-- If you would like to bypass these, self-hosting instructions are provided. I also plan on adding an input for your own Anthropic API key.

Diagram generation:

- 1 request per minute
- 5 requests per day --&gt;

## 🤔 Future Steps

- Implement font-awesome icons in diagram
- Implement an embedded feature like star-history.com but for diagrams. The diagram could also be updated progressively as commits are made.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[remix-run/react-router]]></title>
            <link>https://github.com/remix-run/react-router</link>
            <guid>https://github.com/remix-run/react-router</guid>
            <pubDate>Fri, 26 Sep 2025 00:04:52 GMT</pubDate>
            <description><![CDATA[Declarative routing for React]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/remix-run/react-router">remix-run/react-router</a></h1>
            <p>Declarative routing for React</p>
            <p>Language: TypeScript</p>
            <p>Stars: 55,541</p>
            <p>Forks: 10,723</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre>[![npm package][npm-badge]][npm] [![build][build-badge]][build]

[npm-badge]: https://img.shields.io/npm/v/react-router-dom.svg
[npm]: https://www.npmjs.org/package/react-router-dom
[build-badge]: https://img.shields.io/github/actions/workflow/status/remix-run/react-router/test.yml?branch=dev&amp;style=square
[build]: https://github.com/remix-run/react-router/actions/workflows/test.yml

React Router is a multi-strategy router for React bridging the gap from React 18 to React 19. You can use it maximally as a React framework or minimally as a library with your own architecture.

- [Getting Started - Framework](https://reactrouter.com/start/framework/installation)
- [Getting Started - Library](https://reactrouter.com/start/library/installation)
- [Upgrade from v6](https://reactrouter.com/upgrading/v6)
- [Upgrade from Remix](https://reactrouter.com/upgrading/remix)
- [Changelog](https://github.com/remix-run/react-router/blob/main/CHANGELOG.md)

## Packages

- [`react-router`](./packages/react-router)
- [`@react-router/dev`](./packages/react-router-dev)
- [`@react-router/node`](./packages/react-router-node)
- [`@react-router/cloudflare`](./packages/react-router-cloudflare)
- [`@react-router/serve`](./packages/react-router-serve)
- [`@react-router/fs-routes`](./packages/react-router-fs-routes)

## Previous Versions

- [v6](https://reactrouter.com/v6)
- [v5](https://v5.reactrouter.com/)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[LuanRT/YouTube.js]]></title>
            <link>https://github.com/LuanRT/YouTube.js</link>
            <guid>https://github.com/LuanRT/YouTube.js</guid>
            <pubDate>Fri, 26 Sep 2025 00:04:51 GMT</pubDate>
            <description><![CDATA[A JavaScript client for YouTube's private API, known as InnerTube.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/LuanRT/YouTube.js">LuanRT/YouTube.js</a></h1>
            <p>A JavaScript client for YouTube's private API, known as InnerTube.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,394</p>
            <p>Forks: 317</p>
            <p>Stars today: 3 stars today</p>
            <h2>README</h2><pre>&lt;!-- BADGE LINKS --&gt;
[npm]: https://www.npmjs.com/package/youtubei.js
[versions]: https://www.npmjs.com/package/youtubei.js?activeTab=versions
[codefactor]: https://www.codefactor.io/repository/github/luanrt/youtube.js
[actions]: https://github.com/LuanRT/YouTube.js/actions
[discord]: https://discord.gg/syDu7Yks54

&lt;div align=&quot;center&quot;&gt;
  &lt;br/&gt;
  &lt;p&gt;
    &lt;a href=&quot;https://github.com/LuanRT/YouTube.js&quot;&gt;
      &lt;img src=&quot;https://luanrt.github.io/assets/img/ytjs.svg&quot; alt=&quot;YouTube.js Logo&quot; width=&quot;200&quot; /&gt;
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;p&gt;A JavaScript client for YouTube&#039;s private API&lt;/p&gt;

[![Discord](https://img.shields.io/badge/discord-online-brightgreen.svg)][discord]
[![CI](https://github.com/LuanRT/YouTube.js/actions/workflows/test.yml/badge.svg)][actions]
[![NPM Version](https://img.shields.io/npm/v/youtubei.js?color=%2335C757)][versions]
[![Downloads](https://img.shields.io/npm/dt/youtubei.js)][npm]
[![Codefactor](https://www.codefactor.io/repository/github/luanrt/youtube.js/badge)][codefactor]

&lt;/div&gt;

YouTube.js is a JavaScript client for YouTube&#039;s private API, known as &quot;InnerTube&quot;. It allows you to interact with YouTube programmatically, providing access to videos, comments, live chats, streaming data and more. It works seamlessly across Node.js, Deno, and modern browsers.

## Installation

Before installing, make sure your environment meets the [prerequisites](https://ytjs.dev/guide/getting-started.html#prerequisites).

```bash
# NPM
npm install youtubei.js@latest

# Yarn
yarn add youtubei.js@latest

# Git (edge version)
npm install github:LuanRT/YouTube.js

# Deno
deno add npm:youtubei.js@latest
```

Deno (deprecated):
```ts
import { Innertube } from &#039;https://deno.land/x/youtubei/deno.ts&#039;;
```

## Basic Usage

```ts
import { Innertube } from &#039;youtubei.js&#039;;
const innertube = await Innertube.create(/* options */);
```

For detailed usage, check out the [YouTube.js Guide and API Documentation](https://ytjs.dev).

## Contributing
We welcome all contributions, issues and feature requests, whether small or large. If you want to contribute, feel free to check out our [issues page](https://github.com/LuanRT/YouTube.js/issues) and our [guidelines](https://github.com/LuanRT/YouTube.js/blob/main/CONTRIBUTING.md).

## Contributors
&lt;a href=&quot;https://github.com/LuanRT/YouTube.js/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=LuanRT/YouTube.js&quot; /&gt;
&lt;/a&gt;

## Disclaimer
This project is not affiliated with, endorsed, or sponsored by YouTube or any of its affiliates or subsidiaries. All trademarks, logos, and brand names used in this project are the property of their respective owners and are used solely to describe the services provided.

As such, any usage of trademarks to refer to such services is considered nominative use. If you have any questions or concerns, please contact me.

## License
Distributed under the [MIT](https://choosealicense.com/licenses/mit/) License.

&lt;p align=&quot;right&quot;&gt;
(&lt;a href=&quot;#top&quot;&gt;back to top&lt;/a&gt;)
&lt;/p&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[puppeteer/puppeteer]]></title>
            <link>https://github.com/puppeteer/puppeteer</link>
            <guid>https://github.com/puppeteer/puppeteer</guid>
            <pubDate>Fri, 26 Sep 2025 00:04:50 GMT</pubDate>
            <description><![CDATA[JavaScript API for Chrome and Firefox]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/puppeteer/puppeteer">puppeteer/puppeteer</a></h1>
            <p>JavaScript API for Chrome and Firefox</p>
            <p>Language: TypeScript</p>
            <p>Stars: 92,435</p>
            <p>Forks: 9,291</p>
            <p>Stars today: 14 stars today</p>
            <h2>README</h2><pre># Puppeteer

[![build](https://github.com/puppeteer/puppeteer/actions/workflows/ci.yml/badge.svg?branch=main)](https://github.com/puppeteer/puppeteer/actions/workflows/ci.yml)
[![npm puppeteer package](https://img.shields.io/npm/v/puppeteer.svg)](https://npmjs.org/package/puppeteer)

&lt;img src=&quot;https://user-images.githubusercontent.com/10379601/29446482-04f7036a-841f-11e7-9872-91d1fc2ea683.png&quot; height=&quot;200&quot; align=&quot;right&quot;/&gt;

&gt; Puppeteer is a JavaScript library which provides a high-level API to control
&gt; Chrome or Firefox over the
&gt; [DevTools Protocol](https://chromedevtools.github.io/devtools-protocol/) or [WebDriver BiDi](https://pptr.dev/webdriver-bidi).
&gt; Puppeteer runs in the headless (no visible UI) by default

## [Get started](https://pptr.dev/docs) | [API](https://pptr.dev/api) | [FAQ](https://pptr.dev/faq) | [Contributing](https://pptr.dev/contributing) | [Troubleshooting](https://pptr.dev/troubleshooting)

## Installation

```bash npm2yarn
npm i puppeteer # Downloads compatible Chrome during installation.
npm i puppeteer-core # Alternatively, install as a library, without downloading Chrome.
```

## Example

```ts
import puppeteer from &#039;puppeteer&#039;;
// Or import puppeteer from &#039;puppeteer-core&#039;;

// Launch the browser and open a new blank page.
const browser = await puppeteer.launch();
const page = await browser.newPage();

// Navigate the page to a URL.
await page.goto(&#039;https://developer.chrome.com/&#039;);

// Set screen size.
await page.setViewport({width: 1080, height: 1024});

// Open the search menu using the keyboard.
await page.keyboard.press(&#039;/&#039;);

// Type into search box using accessible input name.
await page.locator(&#039;::-p-aria(Search)&#039;).fill(&#039;automate beyond recorder&#039;);

// Wait and click on first result.
await page.locator(&#039;.devsite-result-item-link&#039;).click();

// Locate the full title with a unique string.
const textSelector = await page
  .locator(&#039;::-p-text(Customize and automate)&#039;)
  .waitHandle();
const fullTitle = await textSelector?.evaluate(el =&gt; el.textContent);

// Print the full title.
console.log(&#039;The title of this blog post is &quot;%s&quot;.&#039;, fullTitle);

await browser.close();
```
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[faker-js/faker]]></title>
            <link>https://github.com/faker-js/faker</link>
            <guid>https://github.com/faker-js/faker</guid>
            <pubDate>Fri, 26 Sep 2025 00:04:49 GMT</pubDate>
            <description><![CDATA[Generate massive amounts of fake data in the browser and node.js]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/faker-js/faker">faker-js/faker</a></h1>
            <p>Generate massive amounts of fake data in the browser and node.js</p>
            <p>Language: TypeScript</p>
            <p>Stars: 14,426</p>
            <p>Forks: 1,019</p>
            <p>Stars today: 27 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;./docs/public/logo.svg&quot; width=&quot;200&quot;/&gt;
  &lt;h1&gt;Faker&lt;/h1&gt;
  &lt;p&gt;Generate massive amounts of fake (but realistic) data for testing and development.&lt;/p&gt;
  
  [![npm version](https://badgen.net/npm/v/@faker-js/faker)](https://www.npmjs.com/package/@faker-js/faker)
  [![npm downloads](https://badgen.net/npm/dm/@faker-js/faker)](https://www.npmjs.com/package/@faker-js/faker)
  [![Continuous Integration](https://github.com/faker-js/faker/actions/workflows/ci.yml/badge.svg)](https://github.com/faker-js/faker/actions/workflows/ci.yml)
  [![codecov](https://codecov.io/gh/faker-js/faker/branch/next/graph/badge.svg?token=N61U168G08)](https://codecov.io/gh/faker-js/faker)
  [![Chat on Discord](https://img.shields.io/badge/chat-discord-blue?style=flat&amp;logo=discord)](https://chat.fakerjs.dev)
  [![Open Collective](https://img.shields.io/opencollective/backers/fakerjs)](https://opencollective.com/fakerjs#section-contributors)
  [![sponsor](https://img.shields.io/opencollective/all/fakerjs?label=sponsors)](https://opencollective.com/fakerjs)
&lt;/div&gt;

## ⚡️ Try it Online

[Open in StackBlitz](https://fakerjs.dev/new)

## 📙 API Documentation

&lt;h1&gt;⚠️ You are reading the docs for the &lt;a href=&quot;https://github.com/faker-js/faker/tree/next&quot;&gt;next&lt;/a&gt; branch ⚠️&lt;/h1&gt;

Please proceed to the [Getting Started Guide](https://fakerjs.dev/guide/) for the **stable** release of Faker.

For detailed API documentation, please select the version of the documentation you are looking for.

|   Version    | Website                   |
| :----------: | :------------------------ |
|  v10 (next)  | https://next.fakerjs.dev/ |
| v10 (stable) | https://fakerjs.dev/      |
|   v9 (old)   | https://v9.fakerjs.dev/   |

---

## 🚀 Features

- 🧍 Person - Generate Names, Genders, Bios, Job titles, and more.
- 📍 Location - Generate Addresses, Zip Codes, Street Names, States, and Countries!
- ⏰ Date - Past, present, future, recent, soon... whenever!
- 💸 Finance - Create stubbed out Account Details, Transactions, and Crypto Addresses.
- 👠 Commerce - Generate Prices, Product Names, Adjectives, and Descriptions.
- 👾 Hacker - “Try to reboot the SQL bus, maybe it will bypass the virtual application!”
- 🔢 Number and String - Of course, we can also generate random numbers and strings.
- 🌏 Localization - Pick from over 70 locales to generate realistic looking Names, Addresses, and Phone Numbers.

&gt; **Note**: Faker tries to generate realistic data and not obvious fake data.
&gt; The generated names, addresses, emails, phone numbers, and/or other data might be coincidentally valid information.
&gt; Please do not send any of your messages/calls to them from your test setup.

## 📦 Install

```bash
npm install --save-dev @faker-js/faker
```

## 🪄 Usage

```ts
// ESM
import { faker } from &#039;@faker-js/faker&#039;;

// CJS
const { faker } = require(&#039;@faker-js/faker&#039;);

export function createRandomUser() {
  return {
    userId: faker.string.uuid(),
    username: faker.internet.username(),
    email: faker.internet.email(),
    avatar: faker.image.avatar(),
    password: faker.internet.password(),
    birthdate: faker.date.birthdate(),
    registeredAt: faker.date.past(),
  };
}

export const users = faker.helpers.multiple(createRandomUser, {
  count: 5,
});
```

## 💎 Modules

An in-depth overview of the API methods is available in the documentation for [v10 (stable)](https://fakerjs.dev/api/) and [v10.\* (next)](https://next.fakerjs.dev/api/).

### Templates

Faker contains a generator method `faker.helpers.fake` for combining faker API methods using a mustache string format.

```ts
console.log(
  faker.helpers.fake(
    &#039;Hello {{person.prefix}} {{person.lastName}}, how are you today?&#039;
  )
);
```

## 🌏 Localization

Faker has support for multiple locales.

The main `faker` instance uses the English locale.
But you can also import instances using other locales.

```ts
// ESM
import { fakerDE as faker } from &#039;@faker-js/faker&#039;;

// CJS
const { fakerDE: faker } = require(&#039;@faker-js/faker&#039;);
```

See our documentation for a list of [provided languages](https://fakerjs.dev/guide/localization.html#available-locales).

Please note: Not every locale provides data for every module. In our pre-made faker instances,
we fall back to English in such a case as this is the most complete and most commonly used language.
If you don&#039;t want that or prefer a different fallback, you can also build your own instances.

```ts
import { de, de_CH, Faker } from &#039;@faker-js/faker&#039;;

export const faker = new Faker({
  locale: [de_CH, de],
});
```

## ⚙️ Setting a randomness seed

If you want consistent results, you can set your own seed:

```ts
faker.seed(123);

const firstRandom = faker.number.int();

// Setting the seed again resets the sequence.
faker.seed(123);

const secondRandom = faker.number.int();

console.log(firstRandom === secondRandom);
```

## 🤝 Sponsors

Faker is an MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome backers

### Sponsors

![](https://opencollective.com/fakerjs/organizations.svg)

### Backers

![](https://opencollective.com/fakerjs/individuals.svg)

## ✨ Contributing

Please make sure to read the [Contributing Guide](https://github.com/faker-js/faker/blob/next/CONTRIBUTING.md) before making a pull request.

## 📘 Credits

Thanks to all the people who already contributed to Faker!

&lt;a href=&quot;https://github.com/faker-js/faker/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/contributors.svg?width=800&quot; /&gt;&lt;/a&gt;

The [fakerjs.dev](https://fakerjs.dev) website is generously hosted by [Netlify](https://www.netlify.com/), with search functionality powered by [Algolia](https://www.algolia.com/).

## 📝 Changelog

Detailed changes for each release are documented in the [release notes](https://github.com/faker-js/faker/blob/next/CHANGELOG.md).

## 📜 What happened to the original faker.js?

Read the [team update](https://fakerjs.dev/update.html) (January 14th, 2022).

## 🔑 License

[MIT](https://github.com/faker-js/faker/blob/next/LICENSE)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[kamranahmedse/developer-roadmap]]></title>
            <link>https://github.com/kamranahmedse/developer-roadmap</link>
            <guid>https://github.com/kamranahmedse/developer-roadmap</guid>
            <pubDate>Fri, 26 Sep 2025 00:04:48 GMT</pubDate>
            <description><![CDATA[Interactive roadmaps, guides and other educational content to help developers grow in their careers.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/kamranahmedse/developer-roadmap">kamranahmedse/developer-roadmap</a></h1>
            <p>Interactive roadmaps, guides and other educational content to help developers grow in their careers.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 337,474</p>
            <p>Forks: 42,872</p>
            <p>Stars today: 91 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>