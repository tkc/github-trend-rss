<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>GitHub Trending Today for typescript - TypeScript Daily</title>
        <link>https://github.com/trending</link>
        <description>The most popular GitHub repositories today for typescript.</description>
        <lastBuildDate>Sun, 02 Nov 2025 00:53:07 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>GitHub Trending RSS Generator</generator>
        <language>en</language>
        <copyright>All rights reserved 2025, GitHub</copyright>
        <item>
            <title><![CDATA[get-convex/chef]]></title>
            <link>https://github.com/get-convex/chef</link>
            <guid>https://github.com/get-convex/chef</guid>
            <pubDate>Sun, 02 Nov 2025 00:53:07 GMT</pubDate>
            <description><![CDATA[The only AI app builder that knows backend]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/get-convex/chef">get-convex/chef</a></h1>
            <p>The only AI app builder that knows backend</p>
            <p>Language: TypeScript</p>
            <p>Stars: 2,711</p>
            <p>Forks: 521</p>
            <p>Stars today: 65 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://chef.convex.dev/github-header-dark.svg&quot;&gt;
    &lt;img alt=&quot;Chef by Convex&#039;&quot; src=&quot;https://chef.convex.dev/github-header-light.svg&quot; width=&quot;600&quot;&gt;
  &lt;/picture&gt;
&lt;/p&gt;

[Chef](https://chef.convex.dev) is the only AI app builder that knows backend. It builds full-stack web apps with a built-in database, zero config auth, file uploads,
real-time UIs, and background workflows. If you want to check out the secret sauce that powers Chef, you can view or download the system prompt [here](https://github.com/get-convex/chef/releases/latest).

Chef&#039;s capabilities are enabled by being built on top of [Convex](https://convex.dev), the open-source reactive database designed to make life easy for web app developers. The &quot;magic&quot; in Chef is just the fact that it&#039;s using Convex&#039;s APIs, which are an ideal fit for codegen.

Development of the Chef is led by the Convex team. We
[welcome bug fixes](./CONTRIBUTING.md) and
[love receiving feedback](https://discord.gg/convex).

This project is a fork of the `stable` branch of [bolt.diy](https://github.com/stackblitz-labs/bolt.diy).

## Getting Started

Visit our [documentation](https://docs.convex.dev/chef) to learn more about Chef and check out our prompting [guide](https://stack.convex.dev/chef-cookbook-tips-working-with-ai-app-builders).

The easiest way to build with Chef is through our hosted [webapp](https://chef.convex.dev), which includes a generous free tier. If you want to
run Chef locally, you can follow the guide below.

&gt; [!IMPORTANT]
&gt; Chef is provided as-is, using an authentication configuration specific to Convex&#039;s internal control plane that manages user accounts.

If you are planning on developing a fork of Chef for production use or re-distribution, your fork will need to replace the existing authentication system with your own. We recommend using the [OAuth Authorization Code Grant](https://docs.convex.dev/platform-apis/oauth-applications#implementing-oauth) flow to authorize access to Convex teams or projects. [Read more about available Platform APIs](https://docs.convex.dev/platform-apis).

Chef is easy to use for local development without changes. Read on for instructions for using Chef locally.

### Running Locally

Note: This will use the hosted Convex control plane to provision Convex projects. However, Chef tokens used in this enviroment will not count towards usage in your Convex account.

**1. Clone the project**

Clone the GitHub respository and `cd` into the directory by running the following commands:

```bash
git clone https://github.com/get-convex/chef.git
cd chef
```

**2. Set up local environment**

Run the following commands in your terminal:

```bash
nvm install
nvm use
npm install -g pnpm
pnpm i
echo &#039;VITE_CONVEX_URL=placeholder&#039; &gt;&gt; .env.local
npx convex dev --once # follow the steps to create a Convex project in your team
```

Note: `nvm` only works on Mac and Linux. If you are using Windows, you may have to find an alternative.

**3. Set up Chef OAuth application**

Go to the Convex [dashboard](https://dashboard.convex.dev/team/settings/applications/oauth-apps) and create an OAuth application. The team you use to create the application will be the only team you can sign-in with on local Chef. Redirect URIs will not matter, but you can set one to http://127.0.0.1:5173 (or whatever port you’ll run the Chef UI on) so that the form can be submitted.

**4. Set up Convex deployment**

Use `npx convex dashboard` to open the Convex [dashboard](https://dashboard.convex.dev) and go to Settings → Environment Variables. Then, set the following environment variables:

```env
BIG_BRAIN_HOST=https://api.convex.dev
CONVEX_OAUTH_CLIENT_ID=&lt;value from oauth setup&gt;
CONVEX_OAUTH_CLIENT_SECRET=&lt;value from oauth setup&gt;
WORKOS_CLIENT_ID=&lt;value from .env.development&gt;
```

**5. Add API keys for model providers**

Add any of the following API keys in your `.env.local` to enable code generation:

```env
ANTHROPIC_API_KEY=&lt;your api key&gt;
GOOGLE_API_KEY=&lt;your api key&gt;
OPENAI_API_KEY=&lt;your api key&gt;
XAI_API_KEY=&lt;your api key&gt;
```

Note: You can also add your own API keys through the Chef settings page.

**6. Run Chef backend and frontend**

Run the following commands in your terminal:

```bash
pnpm run dev

## in another terminal
npx convex dev
```

Congratulations, you now have Chef running locally! You can log in to Chef with your existing Convex account.

Note: Chef is accessible at http://127.0.0.1:{port}/ and will not work properly on http://localhost:{port}/.

## Repository Layout

- `app/` contains all of the client side code and some serverless APIs.

  - `components/` defines the UI components
  - `lib/` contains client-side logic for syncing local state with the server
  - `routes/` defines some client and server routes

- `chef-agent/` handles the agentic loop by injecting system prompts, defining tools, and calling out to model providers.

- `chefshot/` defines a CLI interface for interacting with the Chef webapp.

- `convex/` contains the database that stores chats and user metadata.

- `template/` contains the template that we use to start all Chef projects.

- `test-kitchen/` contains a test harness for the Chef agent loop.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[janhq/jan]]></title>
            <link>https://github.com/janhq/jan</link>
            <guid>https://github.com/janhq/jan</guid>
            <pubDate>Sun, 02 Nov 2025 00:53:06 GMT</pubDate>
            <description><![CDATA[Jan is an open source alternative to ChatGPT that runs 100% offline on your computer.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/janhq/jan">janhq/jan</a></h1>
            <p>Jan is an open source alternative to ChatGPT that runs 100% offline on your computer.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 38,945</p>
            <p>Forks: 2,347</p>
            <p>Stars today: 112 stars today</p>
            <h2>README</h2><pre># Jan - Local AI Assistant

![Jan banner](./JanBanner.png)

&lt;p align=&quot;center&quot;&gt;
  &lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt;
  &lt;img alt=&quot;GitHub commit activity&quot; src=&quot;https://img.shields.io/github/commit-activity/m/janhq/jan&quot;/&gt;
  &lt;img alt=&quot;Github Last Commit&quot; src=&quot;https://img.shields.io/github/last-commit/janhq/jan&quot;/&gt;
  &lt;img alt=&quot;Github Contributors&quot; src=&quot;https://img.shields.io/github/contributors/janhq/jan&quot;/&gt;
  &lt;img alt=&quot;GitHub closed issues&quot; src=&quot;https://img.shields.io/github/issues-closed/janhq/jan&quot;/&gt;
  &lt;img alt=&quot;Discord&quot; src=&quot;https://img.shields.io/discord/1107178041848909847?label=discord&quot;/&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://jan.ai/docs/quickstart&quot;&gt;Getting Started&lt;/a&gt; 
  - &lt;a href=&quot;https://jan.ai/docs&quot;&gt;Docs&lt;/a&gt; 
  - &lt;a href=&quot;https://github.com/janhq/jan/releases&quot;&gt;Changelog&lt;/a&gt; 
  - &lt;a href=&quot;https://github.com/janhq/jan/issues&quot;&gt;Bug reports&lt;/a&gt; 
  - &lt;a href=&quot;https://discord.gg/AsJ8krTT3N&quot;&gt;Discord&lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
⚠️ &lt;b&gt; Jan is currently in Development&lt;/b&gt;: Expect breaking changes and bugs!
&lt;/p&gt;


Jan is a ChatGPT-alternative that runs 100% offline on your device. Our goal is to make it easy for a layperson to download and run LLMs and use AI with **full control** and **privacy**.

Jan is powered by [Cortex](https://github.com/janhq/cortex.cpp), our embeddable local AI engine that runs on any hardware.
From PCs to multi-GPU clusters, Jan &amp; Cortex supports universal architectures:

- [x] NVIDIA GPUs (fast)
- [x] Apple M-series (fast)
- [x] Apple Intel
- [x] Linux Debian
- [x] Windows x64

#### Features:
- [Model Library](https://jan.ai/docs/models/manage-models#add-models) with popular LLMs like Llama, Gemma, Mistral, or Qwen 
- Connect to [Remote AI APIs](https://jan.ai/docs/remote-models/openai) like Groq and OpenRouter
- Local API Server with OpenAI-equivalent API
- [Extensions](https://jan.ai/docs/extensions) for customizing Jan

## Download

&lt;table&gt;
  &lt;tr style=&quot;text-align:center&quot;&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;Version Type&lt;/b&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;Windows&lt;/b&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;MacOS Universal&lt;/b&gt;&lt;/td&gt;
    &lt;td colspan=&quot;2&quot; style=&quot;text-align:center&quot;&gt;&lt;b&gt;Linux&lt;/b&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;text-align:center&quot;&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;Stable (Recommended)&lt;/b&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/latest/win-x64&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/windows.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.exe&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/latest/mac-universal&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/mac.png&#039; style=&quot;height:15px; width: 15px&quot; /&gt;
        &lt;b&gt;jan.dmg&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/latest/linux-amd64-deb&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.deb&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/latest/linux-amd64-appimage&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.AppImage&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;text-align:center&quot;&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;Beta (Preview)&lt;/b&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/beta/win-x64&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/windows.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.exe&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/beta/mac-universal&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/mac.png&#039; style=&quot;height:15px; width: 15px&quot; /&gt;
        &lt;b&gt;jan.dmg&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/beta/linux-amd64-deb&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.deb&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/beta/linux-amd64-appimage&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.AppImage&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;text-align:center&quot;&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;&lt;b&gt;Nightly Build (Experimental)&lt;/b&gt;&lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/nightly/win-x64&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/windows.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.exe&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/nightly/mac-universal&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/mac.png&#039; style=&quot;height:15px; width: 15px&quot; /&gt;
        &lt;b&gt;jan.dmg&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/nightly/linux-amd64-deb&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.deb&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td style=&quot;text-align:center&quot;&gt;
      &lt;a href=&#039;https://app.jan.ai/download/nightly/linux-amd64-appimage&#039;&gt;
        &lt;img src=&#039;https://github.com/janhq/jan/blob/dev/docs/static/img/linux.png&#039; style=&quot;height:14px; width: 14px&quot; /&gt;
        &lt;b&gt;jan.AppImage&lt;/b&gt;
      &lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

Download the latest version of Jan at https://jan.ai/ or visit the [GitHub Releases](https://github.com/janhq/jan/releases) to download any previous release.

## Demo

https://github.com/user-attachments/assets/c3592fa2-c504-4d9d-a885-7e00122a50f3

*Real-time Video: Jan v0.5.7 on a Mac M2, 16GB Sonoma 14.2*

## Quicklinks

### Jan

- [Jan Website](https://jan.ai/)
- [Jan GitHub](https://github.com/janhq/jan)
- [Documentation](https://jan.ai/docs)
- [Jan Changelog](https://jan.ai/changelog)
- [Jan Blog](https://jan.ai/blog)

### Cortex.cpp
Jan is powered by **Cortex.cpp**. It is a C++ command-line interface (CLI) designed as an alternative to [Ollama](https://ollama.com/). By default, it runs on the llama.cpp engine but also supports other engines, including ONNX and TensorRT-LLM, making it a multi-engine platform.


- [Cortex Website](https://cortex.so/)
- [Cortex GitHub](https://github.com/janhq/cortex.cpp)
- [Documentation](https://cortex.so/docs/)
- [Models Library](https://cortex.so/models)
- API Reference: *Under development*
  
## Requirements for running Jan

- **MacOS**: 13 or higher
- **Windows**:
  - Windows 10 or higher
  - To enable GPU support:
    - Nvidia GPU with CUDA Toolkit 11.7 or higher
    - Nvidia driver 470.63.01 or higher
- **Linux**:
  - glibc 2.27 or higher (check with `ldd --version`)
  - gcc 11, g++ 11, cpp 11 or higher, refer to this [link](https://jan.ai/guides/troubleshooting/gpu-not-used/#specific-requirements-for-linux) for more information
  - To enable GPU support:
    - Nvidia GPU with CUDA Toolkit 11.7 or higher
    - Nvidia driver 470.63.01 or higher

## Troubleshooting

As Jan is in development mode, you might get stuck on a some common issues:
- [Troubleshooting a broken build](https://jan.ai/docs/troubleshooting#broken-build)
- [Troubleshooting NVIDIA GPU](https://jan.ai/docs/troubleshooting#troubleshooting-nvidia-gpu)
- [Troubleshooting Something&#039;s Amiss](https://jan.ai/docs/troubleshooting#somethings-amiss)


If you can&#039;t find what you need in our troubleshooting guide, feel free reach out to us for extra help:
1. Copy your [error logs &amp; device specifications](https://jan.ai/docs/troubleshooting#how-to-get-error-logs).
2. Go to our [Discord](https://discord.com/invite/FTk2MvZwJH) &amp; send it to **#🆘|get-help** channel for further support.

*Check the logs to ensure the information is what you intend to send. Note that we retain your logs for only 24 hours, so report any issues promptly.*
  

## Contributing

Contributions are welcome! Please read the [CONTRIBUTING.md](CONTRIBUTING.md) file

### Pre-requisites

- node &gt;= 20.0.0
- yarn &gt;= 1.22.0
- make &gt;= 3.81

### Instructions

1. **Clone the repository and prepare:**

   ```bash
   git clone https://github.com/janhq/jan
   cd jan
   git checkout -b DESIRED_BRANCH
   ```

2. **Run development and use Jan Desktop**

   ```bash
   make dev
   ```

This will start the development server and open the desktop app.



### For production build

```bash
# Do steps 1 and 2 in the previous section
# Build the app
make build
```

This will build the app MacOS m1/m2 for production (with code signing already done) and put the result in `dist` folder.

## Acknowledgements

Jan builds on top of other open-source projects:

- [llama.cpp](https://github.com/ggerganov/llama.cpp)
- [LangChain](https://github.com/langchain-ai)
- [TensorRT](https://github.com/NVIDIA/TensorRT)
- [TensorRT-LLM](https://github.com/NVIDIA/TensorRT-LLM)

## Contact

- Bugs &amp; requests: file a GitHub ticket
- For discussion: join our Discord [here](https://discord.gg/FTk2MvZwJH)
- For business inquiries: email hello@jan.ai 
- For jobs: please email hr@jan.ai

## Trust &amp; Safety

Beware of scams!

- We will never request your personal information.
- Our product is completely free; no paid version exists.
- We do not have a token or ICO.
- We are a [bootstrapped company](https://en.wikipedia.org/wiki/Bootstrapping), and don&#039;t have any external investors (*yet*). We&#039;re open to exploring opportunities with strategic partners want to tackle [our mission](https://jan.ai/about#mission) together.

## License

Jan is free and open source, under the **AGPLv3** license.
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[lingodotdev/lingo.dev]]></title>
            <link>https://github.com/lingodotdev/lingo.dev</link>
            <guid>https://github.com/lingodotdev/lingo.dev</guid>
            <pubDate>Sun, 02 Nov 2025 00:53:05 GMT</pubDate>
            <description><![CDATA[⚡ Lingo.dev - open-source, AI-powered i18n toolkit for instant localization with LLMs. Bring your own LLM or use Lingo.dev Localization Engine. Join discord:]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/lingodotdev/lingo.dev">lingodotdev/lingo.dev</a></h1>
            <p>⚡ Lingo.dev - open-source, AI-powered i18n toolkit for instant localization with LLMs. Bring your own LLM or use Lingo.dev Localization Engine. Join discord:</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,031</p>
            <p>Forks: 606</p>
            <p>Stars today: 77 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[storybookjs/storybook]]></title>
            <link>https://github.com/storybookjs/storybook</link>
            <guid>https://github.com/storybookjs/storybook</guid>
            <pubDate>Sun, 02 Nov 2025 00:53:04 GMT</pubDate>
            <description><![CDATA[Storybook is the industry standard workshop for building, documenting, and testing UI components in isolation]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/storybookjs/storybook">storybookjs/storybook</a></h1>
            <p>Storybook is the industry standard workshop for building, documenting, and testing UI components in isolation</p>
            <p>Language: TypeScript</p>
            <p>Stars: 88,515</p>
            <p>Forks: 9,755</p>
            <p>Stars today: 24 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://storybook.js.org/?ref=readme&quot;&gt;
    &lt;picture&gt;
      &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://user-images.githubusercontent.com/263385/199832481-bbbf5961-6a26-481d-8224-51258cce9b33.png&quot;&gt;
      &lt;img src=&quot;https://user-images.githubusercontent.com/321738/63501763-88dbf600-c4cc-11e9-96cd-94adadc2fd72.png&quot; alt=&quot;Storybook&quot; width=&quot;400&quot; /&gt;
    &lt;/picture&gt;
    
  &lt;/a&gt;
  
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;Build bulletproof UI components faster&lt;/p&gt;

&lt;br/&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://circleci.com/gh/storybookjs/storybook&quot;&gt;
    &lt;img src=&quot;https://circleci.com/gh/storybookjs/storybook.svg?style=shield&quot; alt=&quot;Build Status on CircleCI&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://codecov.io/gh/storybookjs/storybook&quot;&gt;
    &lt;img src=&quot;https://codecov.io/gh/storybookjs/storybook/branch/main/graph/badge.svg&quot; alt=&quot;codecov&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://github.com/storybookjs/storybook/blob/main/LICENSE&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/github/license/storybookjs/storybook.svg&quot; alt=&quot;License&quot; /&gt;
  &lt;/a&gt;
  &lt;br/&gt;
  &lt;a href=&quot;https://discord.gg/storybook&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/discord-join-7289DA.svg?logo=discord&amp;longCache=true&amp;style=flat&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://storybook.js.org/community/?ref=readme&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/badge/community-join-4BC424.svg&quot; alt=&quot;Storybook Community&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#backers&quot;&gt;
    &lt;img src=&quot;https://opencollective.com/storybook/backers/badge.svg&quot; alt=&quot;Backers on Open Collective&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#sponsors&quot;&gt;
    &lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/badge.svg&quot; alt=&quot;Sponsors on Open Collective&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://x.com/intent/follow?screen_name=storybookjs&quot;&gt;
    &lt;img src=&quot;https://img.shields.io/twitter/follow/storybookjs?color=blue&amp;logo=twitter&quot; alt=&quot;Official Twitter Handle&quot; /&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://api.securityscorecards.dev/projects/github.com/storybookjs/storybook&quot;&gt;
    &lt;img src=&quot;https://api.securityscorecards.dev/projects/github.com/storybookjs/storybook/badge&quot; alt=&quot;OpenSSF Scorecard&quot;/&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. Find out more at &lt;a href=&quot;https://storybook.js.org/?ref=readme&quot;&gt;storybook.js.org&lt;/a&gt;!
&lt;/p&gt;

&lt;center&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/storybookjs/storybook/refs/heads/release-6-5/media/storybook-intro.gif&quot; width=&quot;100%&quot; /&gt;
&lt;/center&gt;

&lt;p align=&quot;center&quot;&gt;
  View README for:&lt;br/&gt;
  &lt;a href=&quot;https://github.com/storybookjs/storybook/blob/main/README.md&quot; title=&quot;latest&quot;&gt;&lt;img alt=&quot;latest&quot; src=&quot;https://img.shields.io/npm/v/@storybook/react/latest?style=for-the-badge&amp;logo=storybook&amp;logoColor=ffffff&amp;color=66BF3C&quot; /&gt;&lt;/a&gt;
  &lt;a href=&quot;https://github.com/storybookjs/storybook/blob/next/README.md&quot; title=&quot;next&quot;&gt;&lt;img alt=&quot;next&quot; src=&quot;https://img.shields.io/npm/v/@storybook/react/next?style=for-the-badge&amp;logo=storybook&amp;logoColor=ffffff&amp;color=1EA7FD&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

## Table of contents

- 🚀 [Getting Started](#getting-started)
- 📒 [Projects](#projects)
  - 🛠 [Supported Frameworks &amp; Examples](#supported-frameworks)
  - 🔗[Addons](#addons)
- 🏅 [Badges &amp; Presentation materials](#badges--presentation-materials)
- 👥 [Community](#community)
- 👏 [Contributing](#contributing)
  - 👨‍💻 [Development scripts](#development-scripts)
  - 💸 [Sponsors](#sponsors)
  - 💵 [Backers](#backers)
- :memo: [License](#license)

## Getting Started

Visit [Storybook&#039;s website](https://storybook.js.org/?ref=readme) to learn more about Storybook and to get started.

### Documentation

Documentation can be found on [Storybook&#039;s docs site](https://storybook.js.org/docs?ref=readme).

### Examples

View [Component Encyclopedia](https://storybook.js.org/showcase?ref=readme) to see how leading teams use Storybook.

Use [storybook.new](https://storybook.new) to quickly create an example project in Stackblitz.

Storybook comes with a lot of [addons](https://storybook.js.org/docs/configure/user-interface/storybook-addons?ref=readme) for component design, documentation, testing, interactivity, and so on. Storybook&#039;s API makes it possible to configure and extend in various ways. It has even been extended to support React Native, Android, iOS, and Flutter development for mobile.

### Community

For additional help, share your issue in [the repo&#039;s GitHub Discussions](https://github.com/storybookjs/storybook/discussions/new?category=help).

## Projects

### Supported Frameworks

| Renderer                                                       | Demo                                                                                                                                                                         |                                                                                                                                                       |
| -------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------- |
| [React](code/renderers/react)                                  | [![Storybook demo](https://img.shields.io/npm/v/@storybook/react/latest?style=flat-square&amp;color=blue&amp;label)](https://next--630511d655df72125520f051.chromatic.com/)          | [![React](https://img.shields.io/npm/dm/@storybook/react?style=flat-square&amp;color=eee)](code/renderers/react)                                          |
| [Angular](code/frameworks/angular/)                            | [![Storybook demo](https://img.shields.io/npm/v/@storybook/angular/latest?style=flat-square&amp;color=blue&amp;label)](https://next--6322ce6af69825592bbb28fc.chromatic.com/)        | [![Angular](https://img.shields.io/npm/dm/@storybook/angular?style=flat-square&amp;color=eee)](code/frameworks/angular/)                                  |
| [Vue 3](code/renderers/vue3)                                   | [![Storybook demo](https://img.shields.io/npm/v/@storybook/vue3/latest?style=flat-square&amp;color=blue&amp;label)](https://next--630513346a8e284ae244d415.chromatic.com/)           | [![Vue 3](https://img.shields.io/npm/dm/@storybook/vue3?style=flat-square&amp;color=eee)](code/renderers/vue3/)                                           |
| [Web components](code/renderers/web-components)                | [![Storybook demo](https://img.shields.io/npm/v/@storybook/web-components/latest?style=flat-square&amp;color=blue&amp;label)](https://next--638db5bf49adfdfe8cf545e0.chromatic.com/) | [![Svelte](https://img.shields.io/npm/dm/@storybook/web-components?style=flat-square&amp;color=eee)](code/renderers/web-components)                       |
| [React Native](https://github.com/storybookjs/react-native)    | [![](https://img.shields.io/npm/v/@storybook/react-native/latest?style=flat-square&amp;color=blue&amp;label)](/)                                                                     | [![React Native](https://img.shields.io/npm/dm/@storybook/react-native?style=flat-square&amp;color=eee)](https://github.com/storybookjs/react-native)     |
| [HTML](code/renderers/html)                                    | [![Storybook demo](https://img.shields.io/npm/v/@storybook/html/latest?style=flat-square&amp;color=blue&amp;label)](https://next--63dd39a158cf6fc05199b4bb.chromatic.com/)           | [![HTML](https://img.shields.io/npm/dm/@storybook/html?style=flat-square&amp;color=eee)](code/renderers/html)                                             |
| [Ember](code/frameworks/ember/)                                | [![](https://img.shields.io/npm/v/@storybook/ember/latest?style=flat-square&amp;color=blue&amp;label)](/)                                                                            | [![Ember](https://img.shields.io/npm/dm/@storybook/ember?style=flat-square&amp;color=eee)](code/frameworks/ember/)                                        |
| [Svelte](code/renderers/svelte)                                | [![Storybook demo](https://img.shields.io/npm/v/@storybook/svelte/latest?style=flat-square&amp;color=blue&amp;label)](https://next--630873996e4e3557791c069c.chromatic.com/)         | [![Svelte](https://img.shields.io/npm/dm/@storybook/svelte?style=flat-square&amp;color=eee)](code/renderers/svelte)                                       |
| [Preact](code/renderers/preact)                                | [![Storybook demo](https://img.shields.io/npm/v/@storybook/preact/latest?style=flat-square&amp;color=blue&amp;label)](https://next--63b588a512565bfaace15e7c.chromatic.com/)         | [![Preact](https://img.shields.io/npm/dm/@storybook/preact?style=flat-square&amp;color=eee)](code/renderers/preact)                                       |
| [Qwik](https://github.com/literalpie/storybook-framework-qwik) | [![](https://img.shields.io/npm/v/storybook-framework-qwik/latest?style=flat-square&amp;color=blue&amp;label)](/)                                                                    | [![Qwik](https://img.shields.io/npm/dm/storybook-framework-qwik?style=flat-square&amp;color=eee)](https://github.com/literalpie/storybook-framework-qwik) |
| [SolidJS](https://github.com/solidjs-community/storybook)      | [![](https://img.shields.io/npm/v/storybook-solidjs-vite/latest?style=flat-square&amp;color=blue&amp;label)](/)                                                                      | [![SolidJS](https://img.shields.io/npm/dm/storybook-solidjs-vite?style=flat-square&amp;color=eee)](https://github.com/solidjs-community/storybook)        |
| [Android, iOS, Flutter](https://github.com/storybookjs/native) | [![](https://img.shields.io/npm/v/@storybook/native/latest?style=flat-square&amp;color=blue&amp;label)](/)                                                                           | [![Native](https://img.shields.io/npm/dm/@storybook/native?style=flat-square&amp;color=eee)](https://github.com/storybookjs/native)                       |

### Addons

| Addons                                                                    |                                                                            |
| ------------------------------------------------------------------------- | -------------------------------------------------------------------------- |
| [a11y](code/addons/a11y/)                                                 | Test components for user accessibility in Storybook                        |
| [actions](code/core/src/actions/)                                         | Log actions as users interact with components in the Storybook UI          |
| [backgrounds](code/core/src/backgrounds)                                  | Let users choose backgrounds in the Storybook UI                           |
| [cssresources](https://github.com/storybookjs/addon-cssresources)         | Dynamically add/remove CSS resources to the component iframe               |
| [design assets](https://github.com/storybookjs/addon-design-assets)       | View images, videos, and weblinks alongside your story                     |
| [docs](code/addons/docs/)                                                 | Add high quality documentation to your components                          |
| [events](https://github.com/storybookjs/addon-events)                     | Interactively fire events to components that respond to EventEmitter       |
| [google-analytics](https://github.com/storybookjs/addon-google-analytics) | Reports google analytics on stories                                        |
| [graphql](https://github.com/storybookjs/addon-graphql)                   | Query a GraphQL server within Storybook stories                            |
| [jest](https://github.com/storybookjs/addon-jest)                         | View the results of components&#039; unit tests in Storybook                    |
| [links](code/addons/links/)                                               | Create links between stories                                               |
| [measure](code/core/src/measure/)                                         | Visually inspect the layout and box model within the Storybook UI          |
| [outline](code/core/src/outline/)                                         | Visually debug the CSS layout and alignment within the Storybook UI        |
| [query params](https://github.com/storybookjs/addon-queryparams)          | Mock query params                                                          |
| [viewport](code/core/src/viewport/)                                       | Change display sizes and layouts for responsive components using Storybook |

See [Addon / Framework Support Table](https://storybook.js.org/docs/configure/integration/frameworks-feature-support?ref=readme)

To continue improving your experience, we have to eventually deprecate or remove certain addons in favor of new and better tools.

If you&#039;re using info/notes, we highly recommend you migrate to [docs](code/addons/docs/) instead, and [here is a guide](code/addons/docs/docs/recipes.md#migrating-from-notesinfo-addons) to help you.

If you&#039;re using contexts, we highly recommend you migrate to [toolbars](https://github.com/storybookjs/storybook/tree/next/code/addons/toolbars) and [here is a guide](https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#deprecated-addon-contexts) to help you.

If you&#039;re using addon-storyshots, we highly recommend you migrate to the Storybook [test-runner](https://github.com/storybookjs/test-runner) and [here is a guide](https://storybook.js.org/docs/writing-tests/storyshots-migration-guide?ref=readme) to help you.

## Badges &amp; Presentation materials

We have a badge! Link it to your live Storybook example.

![Storybook](https://cdn.jsdelivr.net/gh/storybookjs/brand@main/badge/badge-storybook.svg)

```md
[![Storybook](https://cdn.jsdelivr.net/gh/storybookjs/brand@main/badge/badge-storybook.svg)](link to site)
```

If you&#039;re looking for material to use in your Storybook presentation, such as logos, video material, and the colors we use, you can find it all on our [brand repo](https://github.com/storybookjs/brand).

## Community

- Tweeting via [@storybookjs](https://x.com/storybookjs)
- Blogging at [storybook.js.org](https://storybook.js.org/blog/?ref=readme) and [Medium](https://medium.com/storybookjs)
- Chatting on [Discord](https://discord.gg/storybook)
- Videos and streams at [YouTube](https://www.youtube.com/channel/UCr7Quur3eIyA_oe8FNYexfg)

## Contributing

Contributions to Storybook are always welcome!

- 📥 Pull requests and 🌟 Stars are always welcome.
- Read our [contributing guide](CONTRIBUTING.md) to get started,
  or find us on [Discord](https://discord.gg/storybook), we will take the time to guide you.

Looking for a first issue to tackle?

- We tag issues with [![Good First Issue](https://img.shields.io/github/issues/storybookjs/storybook/good%20first%20issue.svg)](https://github.com/storybookjs/storybook/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22) when we think they are well suited for people who are new to the codebase or OSS in general.
- [Talk to us](https://discord.gg/storybook), we&#039;ll find something that suits your skills and learning interest.

### Development scripts

Storybook is organized as a monorepo. Useful scripts include:

#### `yarn start`

&gt; Runs a sandbox template storybook with test stories

#### `yarn task`

&gt; As above, but gives you options to customize the sandbox (e.g. selecting other frameworks)

#### `yarn lint`

&gt; boolean check if code conforms to linting rules - uses remark &amp; eslint

- `yarn lint:js` - will check js
- `yarn lint:md` - will check markdown + code samples
- `yarn lint:js --fix` - will automatically fix js

#### `yarn test`

&gt; boolean check if unit tests all pass - uses jest

- `yarn run test --core --watch` - will run core tests in watch-mode

### Sponsors

Become a sponsor to have your logo and website URL on our README on Github. \[[Become a sponsor](https://opencollective.com/storybook#sponsor)]

&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/0/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/0/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/1/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/1/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/2/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/2/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/3/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/3/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/4/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/4/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/5/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/5/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/6/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/6/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/7/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/7/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/8/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/8/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/9/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/9/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/10/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/10/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/11/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/11/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/12/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/12/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/13/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/13/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/14/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/14/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/15/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/15/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/16/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/16/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/17/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/17/avatar.svg?requireActive=true&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://opencollective.com/storybook/tiers/sponsors/18/website?requireActive=true&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/storybook/tiers/sponsors/18/avatar.

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[chaitin/PandaWiki]]></title>
            <link>https://github.com/chaitin/PandaWiki</link>
            <guid>https://github.com/chaitin/PandaWiki</guid>
            <pubDate>Sun, 02 Nov 2025 00:53:03 GMT</pubDate>
            <description><![CDATA[PandaWiki 是一款 AI 大模型驱动的开源知识库搭建系统，帮助你快速构建智能化的 产品文档、技术文档、FAQ、博客系统，借助大模型的力量为你提供 AI 创作、AI 问答、AI 搜索等能力。]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/chaitin/PandaWiki">chaitin/PandaWiki</a></h1>
            <p>PandaWiki 是一款 AI 大模型驱动的开源知识库搭建系统，帮助你快速构建智能化的 产品文档、技术文档、FAQ、博客系统，借助大模型的力量为你提供 AI 创作、AI 问答、AI 搜索等能力。</p>
            <p>Language: TypeScript</p>
            <p>Stars: 7,296</p>
            <p>Forks: 649</p>
            <p>Stars today: 56 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;/images/banner.png&quot; width=&quot;400&quot; /&gt;
&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a target=&quot;_blank&quot; href=&quot;https://ly.safepoint.cloud/Br48PoX&quot;&gt;📖 官方网站&lt;/a&gt; &amp;nbsp; | &amp;nbsp;
  &lt;a target=&quot;_blank&quot; href=&quot;/images/wechat.png&quot;&gt;🙋‍♂️ 微信交流群&lt;/a&gt;
&lt;/p&gt;

## 👋 项目介绍

PandaWiki 是一款 AI 大模型驱动的**开源知识库搭建系统**，帮助你快速构建智能化的 **产品文档、技术文档、FAQ、博客系统**，借助大模型的力量为你提供 **AI 创作、AI 问答、AI 搜索** 等能力。

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;/images/setup.png&quot; width=&quot;800&quot; /&gt;
&lt;/p&gt;

## ⚡️ 界面展示

| PandaWiki 控制台                                 | Wiki 网站前台                                    |
| ------------------------------------------------ | ------------------------------------------------ |
| &lt;img src=&quot;/images/screenshot-1.png&quot; width=370 /&gt; | &lt;img src=&quot;/images/screenshot-2.png&quot; width=370 /&gt; |
| &lt;img src=&quot;/images/screenshot-3.png&quot; width=370 /&gt; | &lt;img src=&quot;/images/screenshot-4.png&quot; width=370 /&gt; |

## 🔥 功能与特色

- AI 驱动智能化：AI 辅助创作、AI 辅助问答、AI 辅助搜索。
- 强大的富文本编辑能力：兼容 Markdown 和 HTML，支持导出为 word、pdf、markdown 等多种格式。
- 轻松与第三方应用进行集成：支持做成网页挂件挂在其他网站上，支持做成钉钉、飞书、企业微信等聊天机器人。
- 通过第三方来源导入内容：根据网页 URL 导入、通过网站 Sitemap 导入、通过 RSS 订阅、通过离线文件导入等。

## 🚀 上手指南

### 安装 PandaWiki

你需要一台支持 Docker 20.x 以上版本的 Linux 系统来安装 PandaWiki。

使用 root 权限登录你的服务器，然后执行以下命令。

```bash
bash -c &quot;$(curl -fsSLk https://release.baizhi.cloud/panda-wiki/manager.sh)&quot;
```

根据命令提示的选项进行安装，命令执行过程将会持续几分钟，请耐心等待。

&gt; 关于安装与部署的更多细节请参考 [安装 PandaWiki](https://pandawiki.docs.baizhi.cloud/node/01971602-bb4e-7c90-99df-6d3c38cfd6d5)。

### 登录 PandaWiki

在上一步中，安装命令执行结束后，你的终端会输出以下内容。

```
SUCCESS  控制台信息:
SUCCESS    访问地址(内网): http://*.*.*.*:2443
SUCCESS    访问地址(外网): http://*.*.*.*:2443
SUCCESS    用户名: admin
SUCCESS    密码: **********************
```

使用浏览器打开上述内容中的 “访问地址”，你将看到 PandaWiki 的控制台登录入口，使用上述内容中的 “用户名” 和 “密码” 登录即可。

### 配置 AI 模型

&gt; PandaWiki 是由 AI 大模型驱动的 Wiki 系统，在未配置大模型的情况下 AI 创作、AI 问答、AI 搜索 等功能无法正常使用。
&gt; 
首次登录时会提示需要先配置 AI 模型，根据下方图片配置 “Chat 模型”。

&lt;img src=&quot;/images/modelconfig.png&quot; width=&quot;800&quot; /&gt;

&gt; 推荐使用 [百智云模型广场](https://baizhi.cloud/) 快速接入 AI 模型，注册即可获赠 5 元的模型使用额度。
&gt; 关于大模型的更多配置细节请参考 [接入 AI 模型](https://pandawiki.docs.baizhi.cloud/node/01971616-811c-70e1-82d9-706a202b8498)。

### 创建知识库

一切配置就绪后，你需要先创建一个 “知识库”。

“知识库” 是一组文档的集合，PandaWiki 将会根据知识库中的文档，为不同的知识库分别创建 “Wiki 网站”。

&lt;img src=&quot;/images/createkb.png&quot; width=&quot;800&quot; /&gt;

&gt; 关于知识库的更多配置细节请参考 [知识库设置](https://pandawiki.docs.baizhi.cloud/node/01971b5e-5bea-76d2-9f89-a95f98347bb0)。

### 💪 开始使用

如果你顺利完成了以上步骤，那么恭喜你，属于你的 PandaWiki 搭建成功，你可以：

- 访问 **控制台** 来管理你的知识库内容
- 访问 **Wiki 网站** 让你的用户使用知识库

## 社区交流

欢迎加入我们的微信群进行交流。

&lt;img src=&quot;/images/wechat.png&quot; width=&quot;300&quot; /&gt;

## 🙋‍♂️ 贡献

欢迎提交 [Pull Request](https://github.com/chaitin/PandaWiki/pulls) 或创建 [Issue](https://github.com/chaitin/PandaWiki/issues) 来帮助改进项目。

## 📝 许可证

本项目采用 GNU Affero General Public License v3.0 (AGPL-3.0) 许可证。这意味着：

- 你可以自由使用、修改和分发本软件
- 你必须以相同的许可证开源你的修改
- 如果你通过网络提供服务，也必须开源你的代码
- 商业使用需要遵守相同的开源要求


## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=chaitin/PandaWiki&amp;type=Date)](https://www.star-history.com/#chaitin/PandaWiki&amp;Date)
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[renovatebot/renovate]]></title>
            <link>https://github.com/renovatebot/renovate</link>
            <guid>https://github.com/renovatebot/renovate</guid>
            <pubDate>Sun, 02 Nov 2025 00:53:02 GMT</pubDate>
            <description><![CDATA[Home of the Renovate CLI: Cross-platform Dependency Automation by Mend.io]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/renovatebot/renovate">renovatebot/renovate</a></h1>
            <p>Home of the Renovate CLI: Cross-platform Dependency Automation by Mend.io</p>
            <p>Language: TypeScript</p>
            <p>Stars: 19,991</p>
            <p>Forks: 2,796</p>
            <p>Stars today: 7 stars today</p>
            <h2>README</h2><pre>README not available. Either the repository does not have a README or it could not be accessed.</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[medplum/medplum]]></title>
            <link>https://github.com/medplum/medplum</link>
            <guid>https://github.com/medplum/medplum</guid>
            <pubDate>Sun, 02 Nov 2025 00:53:01 GMT</pubDate>
            <description><![CDATA[Medplum is a healthcare platform that helps you quickly develop high-quality compliant applications.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/medplum/medplum">medplum/medplum</a></h1>
            <p>Medplum is a healthcare platform that helps you quickly develop high-quality compliant applications.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 1,974</p>
            <p>Forks: 615</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre># [Medplum](https://www.medplum.com) &amp;middot; [![GitHub license](https://img.shields.io/badge/license-Apache-blue.svg)](https://github.com/medplum/medplum/blob/main/LICENSE.txt) [![npm version](https://img.shields.io/npm/v/@medplum/core.svg?color=blue)](https://www.npmjs.com/package/@medplum/core) [![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=medplum_medplum&amp;metric=alert_status&amp;token=207c95a43e7519809d6d336d8cc7837d3e057acf)](https://sonarcloud.io/dashboard?id=medplum_medplum) [![Coverage Status](https://coveralls.io/repos/github/medplum/medplum/badge.svg?branch=main)](https://coveralls.io/github/medplum/medplum?branch=main) [![OpenSSF Best Practices](https://www.bestpractices.dev/projects/10900/badge?gold)](https://www.bestpractices.dev/projects/10900)

![Medplum](packages/docs/static/img/cover.webp)

Medplum is a developer platform that enables flexible and rapid development of healthcare apps.

- **Medplum Auth** - End-to-end identity solution for easy user authentication, sign-in, and permissions using OAuth, OpenID, and SMART-on-FHIR.
- **Medplum Clinical Data Repository (CDR)** - Backend server that hosts your healthcare data in a secure, compliant, and standards-based repository.
- **Medplum API** - FHIR-based API for sending, receiving, and manipulating data.
- **Medplum SDK** - Client libraries that simplify the process of interacting with the **Medplum API**.
- **Medplum App** - Web application where you can view your data and perform basic editing tasks. You can also use the Medplum App to manage basic workflows.
- **Medplum Bots** - Write and run application logic server-side without needing to set up your own server.
- **UI Component Library** - React components designed to help you quickly develop custom healthcare applications.

## Docs

- [Contributing](#contributing)
  - [Ground Rules](#ground-rules)
  - [Codebase](#codebase)
    - [Technologies](#technologies)
    - [Folder Structure](#folder-structure)

## Contributing

**We heartily welcome any and all contributions that match our engineering standards!**

That being said, this codebase isn&#039;t your typical open-source project because it&#039;s not a library or package with a
limited scope -- it&#039;s our entire product. Our [Contributing documentation](https://medplum.com/docs/contributing) has
all the information you need to get started.

### Ground Rules

#### Contributions and discussion guidelines

By making a contribution to this project, you are deemed to have accepted the [Developer Certificate of Origin](https://developercertificate.org/) (DCO).

All conversations and communities on Medplum are expected to follow GitHub&#039;s [Community Guidelines](https://help.github.com/en/github/site-policy/github-community-guidelines)
and [Acceptable Use Policies](https://help.github.com/en/github/site-policy/github-acceptable-use-policies). We expect
discussions on issues and pull requests to stay positive, productive, and respectful. Remember: there are real people on
the other side of the screen!

#### Reporting a bug or proposing a new feature

If you found a technical bug on Medplum or have ideas for features we should implement, the issue tracker is the best
place to share with us. ([click here to open a new issue](https://github.com/medplum/medplum/issues/new))

### Writing documentation or blog content

Did you learn how to do something using Medplum that wasn&#039;t obvious on your first try? By contributing your new knowledge
to our documentation, you can help others who might have a similar use case!

Our documentation is hosted on [medplum.com/docs](https://www.medplum.com/docs), but it is built from [Markdown](https://www.markdownguide.org/)
files in our [`docs` package](https://github.com/medplum/medplum/tree/main/packages/docs/docs).

For relatively small changes, you can edit files directly from your web browser on [Github.dev](https://github.dev/medplum/medplum/blob/main/packages/docs/docs/home.md)
without needing to clone the repository.

#### Fixing a bug or implementing a new feature

If you find a bug and open a Pull Request that fixes it, we&#039;ll review it as soon as possible to ensure it meets our engineering standards.

If you want to implement a new feature, open an issue first to discuss with us how the feature might work, and to ensure
it fits into our roadmap and plans for the app.

If you want to contribute but are unsure how to start, we have [a &quot;good first issue&quot; label](https://github.com/medplum/medplum/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22) which is applied to newcomer-friendly issues. Take a look at [the full list of good first issues](https://github.com/medplum/medplum/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22) and pick something you like!

**Ready to get started writing code?** Follow the [local setup instructions](https://www.medplum.com/docs/contributing/local-dev-setup) and jump in!

### Codebase

#### Technologies

With the ground rules out of the way, let&#039;s talk about the coarse architecture of this mono repo:

- **Full-stack TypeScript**: We use Node.js to power our servers, and React to power our frontend apps. Almost all of the code you&#039;ll touch in this codebase will be TypeScript.

Here is a list of all the big technologies we use:

- **PostgreSQL**: Data storage
- **Redis**: Background jobs and caching
- **Express**: API server
- **TypeScript**: Type-safe JavaScript
- **React**: Frontend React app

#### Folder structure

```sh
medplum/
├── packages
│   ├── agent           # On-premise agent
│   ├── app             # Frontend web app
│   ├── bot-layer       # AWS Lambda Layer for Bots
│   ├── cdk             # AWS CDK infra as code
│   ├── cli             # Command line interface
│   ├── core            # Core shared library
│   ├── definitions     # Data definitions
│   ├── docs            # Documentation
│   ├── examples        # Example code used in documentation
│   ├── fhir-router     # FHIR URL router
│   ├── fhirtypes       # FHIR TypeScript definitions
│   ├── generator       # Code generator utilities
│   ├── graphiql        # Preconfigured GraphiQL
│   ├── hl7             # HL7 client and server
│   ├── mock            # Mock FHIR data for testing
│   ├── react           # React component library
│   ├── react-hooks     # React hooks library
│   └── server          # Backend API server
└── scripts             # Helper bash scripts
```

## Thanks

&lt;a href=&quot;https://www.chromatic.com/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/321738/84662277-e3db4f80-af1b-11ea-88f5-91d67a5e59f6.png&quot; width=&quot;153&quot; height=&quot;30&quot; alt=&quot;Chromatic&quot; /&gt;&lt;/a&gt;

Thanks to [Chromatic](https://www.chromatic.com/) for providing the visual testing platform that helps us review UI changes and catch visual regressions.

## License

[Apache 2.0](LICENSE.txt)

Copyright &amp;copy; Medplum 2025

FHIR&amp;reg; is a registered trademark of HL7.

SNOMED&amp;reg; is a registered trademark of the International Health Terminology Standards Development Organisation.

LOINC&amp;reg; is a registered trademark of Regenstrief Institute, Inc.

DICOM&amp;reg; is the registered trademark of the National Electrical Manufacturers Association (NEMA).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[kubernetes-sigs/headlamp]]></title>
            <link>https://github.com/kubernetes-sigs/headlamp</link>
            <guid>https://github.com/kubernetes-sigs/headlamp</guid>
            <pubDate>Sun, 02 Nov 2025 00:53:00 GMT</pubDate>
            <description><![CDATA[A Kubernetes web UI that is fully-featured, user-friendly and extensible]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/kubernetes-sigs/headlamp">kubernetes-sigs/headlamp</a></h1>
            <p>A Kubernetes web UI that is fully-featured, user-friendly and extensible</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,682</p>
            <p>Forks: 453</p>
            <p>Stars today: 8 stars today</p>
            <h2>README</h2><pre>&lt;h1&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;frontend/src/resources/logo-light.svg&quot;&gt;
    &lt;img src=&quot;frontend/src/resources/logo-dark.svg&quot; alt=&quot;Headlamp&quot;&gt;
  &lt;/picture&gt;
&lt;/h1&gt;

&gt; **NOTICE:** We have recently moved the project under the Kubernetes SIG UI (and the repo under the _kubernetes-sigs_ org). Container images are still at [ghcr.io](https://github.com/orgs/headlamp-k8s/packages). Please bear with us while we may experience some broken links.

[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/7551/badge)](https://www.bestpractices.dev/projects/7551)
[![OpenSSF Scorecard](https://api.scorecard.dev/projects/github.com/kubernetes-sigs/headlamp/badge)](https://scorecard.dev/viewer/?uri=github.com/kubernetes-sigs/headlamp)
[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fheadlamp-k8s%2Fheadlamp.svg?type=shield)](https://app.fossa.com/projects/git%2Bgithub.com%2Fheadlamp-k8s%2Fheadlamp?ref=badge_shield)

Headlamp is an easy-to-use and extensible Kubernetes web UI.

Headlamp was created to blend the traditional feature set of other web UIs/dashboards
(i.e., to list and view resources) with added functionality.

&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://raw.githubusercontent.com/kubernetes-sigs/headlamp/screenshots/videos/headlamp_quick_run.gif&quot; width=&quot;80%&quot;&gt;
&lt;/div&gt;

## Features

- Vendor-independent / generic Kubernetes UI
- Works in-cluster, or locally as a desktop app
- Multi-cluster
- Extensible through [plugins](https://github.com/headlamp-k8s/plugins)
- UI controls reflecting user roles (no deletion/update if not allowed)
- Clean &amp; modern UI
- Cancellable creation/update/deletion operations
- Logs, exec, and resource editor with documentation
- Read-write / interactive (actions based on permissions)

## Screenshots

&lt;table&gt;
    &lt;tr&gt;
        &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kubernetes-sigs/headlamp/screenshots/screenshots/home.png&quot;&gt;&lt;/td&gt;
        &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kubernetes-sigs/headlamp/screenshots/screenshots/cluster_chooser.png&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kubernetes-sigs/headlamp/screenshots/screenshots/workloads.png&quot;&gt;&lt;/td&gt;
        &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kubernetes-sigs/headlamp/screenshots/screenshots/resource_edition.png&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kubernetes-sigs/headlamp/screenshots/screenshots/logs.png&quot;&gt;&lt;/td&gt;
        &lt;td width=&quot;33%&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kubernetes-sigs/headlamp/screenshots/screenshots/terminal.png&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

## Quickstart

If you want to deploy Headlamp in your cluster, check out the instructions on running it [in-cluster](https://headlamp.dev/docs/latest/installation/in-cluster/).

If you have a kubeconfig already, you can quickly try Headlamp locally as a
[desktop application](https://headlamp.dev/docs/latest/installation/desktop/)
for [Linux](https://headlamp.dev/docs/latest/installation/desktop/linux-installation),
[Mac](https://headlamp.dev/docs/latest/installation/desktop/mac-installation),
or [Windows](https://headlamp.dev/docs/latest/installation/desktop/win-installation).
**Make sure** you have a kubeconfig file set up with your favorite clusters and
in the default path so Headlamp can use it.

### Accessing

Headlamp uses [RBAC](https://kubernetes.io/docs/reference/access-authn-authz/rbac) for checking
users&#039; access to resources. If you try Headlamp with a token that has very limited
permissions, you may not be able to view your cluster resources correctly.

See the documentation on [how to easily get a Service Account token](https://headlamp.dev/docs/latest/installation#create-a-service-account-token) for your cluster.

## Tested platforms

We maintain a list of the [Kubernetes platforms](./docs/platforms.md) we have
tested Headlamp with. We invite you to add any missing platforms you have
tested, or comment if there are any regressions in the existing ones.

## Extensions / Plugins

Please see [headlamp plugins on Artifact Hub](https://artifacthub.io/packages/search?kind=21&amp;sort=relevance&amp;page=1) for a list of plugins published.

See the [plugins repo](https://github.com/headlamp-k8s/plugins) for some official plugins.

### Plugin development

If you are interested in tweaking Headlamp to fit your use-cases, you can check out
our [plugin development guide](https://headlamp.dev/docs/latest/development/plugins/).


## Get involved

Check out our: 
- [Guidelines](https://headlamp.dev/docs/latest/contributing/)
- [Code of Conduct](./code-of-conduct.md),
- [#headlamp](https://kubernetes.slack.com/messages/headlamp) slack channel in the Kubernetes Slack 
- [Monthly Community Meeting](https://zoom-lfx.platform.linuxfoundation.org/meetings/headlamp)

## Roadmap / Release Planning

If you are interested in the direction of the project, we maintain a
[Roadmap](https://github.com/orgs/headlamp-k8s/projects/1/views/1). It has the
biggest changes planned so far, as well as a [board](https://github.com/orgs/headlamp-k8s/projects/1/) tracking each release.

## License

Headlamp is released under the terms of the [Apache 2.0](./LICENSE) license.

## Frequently Asked Questions

For more information about Headlamp, see the [Headlamp FAQ](https://headlamp.dev/docs/latest/faq/).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[lobehub/lobe-chat]]></title>
            <link>https://github.com/lobehub/lobe-chat</link>
            <guid>https://github.com/lobehub/lobe-chat</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:59 GMT</pubDate>
            <description><![CDATA[🤯 LobeHub - an open-source, modern design AI Agent Workspace. Supports multiple AI providers (OpenAI / Claude 4 / Gemini / DeepSeek / Ollama / Qwen), Knowledge Base (file upload / RAG ), one click install MCP Marketplace and Artifacts / Thinking. One-click FREE deployment of your private AI Agent application.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/lobehub/lobe-chat">lobehub/lobe-chat</a></h1>
            <p>🤯 LobeHub - an open-source, modern design AI Agent Workspace. Supports multiple AI providers (OpenAI / Claude 4 / Gemini / DeepSeek / Ollama / Qwen), Knowledge Base (file upload / RAG ), one click install MCP Marketplace and Artifacts / Thinking. One-click FREE deployment of your private AI Agent application.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 67,340</p>
            <p>Forks: 13,913</p>
            <p>Stars today: 29 stars today</p>
            <h2>README</h2><pre>&lt;div align=&quot;center&quot;&gt;&lt;a name=&quot;readme-top&quot;&gt;&lt;/a&gt;

[![][image-banner]][vercel-link]

# Lobe Chat

An open-source, modern design ChatGPT/LLMs UI/framework.&lt;br/&gt;
Supports speech synthesis, multi-modal, and extensible ([function call][docs-function-call]) plugin system.&lt;br/&gt;
One-click **FREE** deployment of your private OpenAI ChatGPT/Claude/Gemini/Groq/Ollama chat application.

**English** · [简体中文](./README.zh-CN.md) · [Official Site][official-site] · [Changelog][changelog] · [Documents][docs] · [Blog][blog] · [Feedback][github-issues-link]

&lt;!-- SHIELD GROUP --&gt;

[![][github-release-shield]][github-release-link]
[![][docker-release-shield]][docker-release-link]
[![][vercel-shield]][vercel-link]
[![][discord-shield]][discord-link]&lt;br/&gt;
[![][codecov-shield]][codecov-link]
[![][github-action-test-shield]][github-action-test-link]
[![][github-action-release-shield]][github-action-release-link]
[![][github-releasedate-shield]][github-releasedate-link]&lt;br/&gt;
[![][github-contributors-shield]][github-contributors-link]
[![][github-forks-shield]][github-forks-link]
[![][github-stars-shield]][github-stars-link]
[![][github-issues-shield]][github-issues-link]
[![][github-license-shield]][github-license-link]&lt;br&gt;
[![][sponsor-shield]][sponsor-link]

**Share LobeChat Repository**

[![][share-x-shield]][share-x-link]
[![][share-telegram-shield]][share-telegram-link]
[![][share-whatsapp-shield]][share-whatsapp-link]
[![][share-reddit-shield]][share-reddit-link]
[![][share-weibo-shield]][share-weibo-link]
[![][share-mastodon-shield]][share-mastodon-link]
[![][share-linkedin-shield]][share-linkedin-link]

&lt;sup&gt;Pioneering the new age of thinking and creating. Built for you, the Super Individual.&lt;/sup&gt;

[![][github-trending-shield]][github-trending-url] &lt;br /&gt; &lt;br /&gt; &lt;a href=&quot;https://vercel.com/oss&quot;&gt; &lt;img alt=&quot;Vercel OSS Program&quot; src=&quot;https://vercel.com/oss/program-badge.svg&quot; /&gt; &lt;/a&gt;

![][image-overview]

&lt;/div&gt;

&lt;details&gt;
&lt;summary&gt;&lt;kbd&gt;Table of contents&lt;/kbd&gt;&lt;/summary&gt;

#### TOC

- [👋🏻 Getting Started &amp; Join Our Community](#-getting-started--join-our-community)
- [✨ Features](#-features)
  - [✨ MCP Plugin One-Click Installation](#-mcp-plugin-one-click-installation)
  - [🏪 MCP Marketplace](#-mcp-marketplace)
  - [🖥️ Desktop App](#️-desktop-app)
  - [🌐 Smart Internet Search](#-smart-internet-search)
  - [Chain of Thought](#chain-of-thought)
  - [Branching Conversations](#branching-conversations)
  - [Artifacts Support](#artifacts-support)
  - [File Upload /Knowledge Base](#file-upload-knowledge-base)
  - [Multi-Model Service Provider Support](#multi-model-service-provider-support)
  - [Local Large Language Model (LLM) Support](#local-large-language-model-llm-support)
  - [Model Visual Recognition](#model-visual-recognition)
  - [TTS &amp; STT Voice Conversation](#tts--stt-voice-conversation)
  - [Text to Image Generation](#text-to-image-generation)
  - [Plugin System (Function Calling)](#plugin-system-function-calling)
  - [Agent Market (GPTs)](#agent-market-gpts)
  - [Support Local / Remote Database](#support-local--remote-database)
  - [Support Multi-User Management](#support-multi-user-management)
  - [Progressive Web App (PWA)](#progressive-web-app-pwa)
  - [Mobile Device Adaptation](#mobile-device-adaptation)
  - [Custom Themes](#custom-themes)
  - [`*` What&#039;s more](#-whats-more)
- [⚡️ Performance](#️-performance)
- [🛳 Self Hosting](#-self-hosting)
  - [`A` Deploying with Vercel, Zeabur , Sealos or Alibaba Cloud](#a-deploying-with-vercel-zeabur--sealos-or-alibaba-cloud)
  - [`B` Deploying with Docker](#b-deploying-with-docker)
  - [Environment Variable](#environment-variable)
- [📦 Ecosystem](#-ecosystem)
- [🧩 Plugins](#-plugins)
- [⌨️ Local Development](#️-local-development)
- [🤝 Contributing](#-contributing)
- [❤️ Sponsor](#️-sponsor)
- [🔗 More Products](#-more-products)

####

&lt;br/&gt;

&lt;/details&gt;

## 👋🏻 Getting Started &amp; Join Our Community

We are a group of e/acc design-engineers, hoping to provide modern design components and tools for AIGC.
By adopting the Bootstrapping approach, we aim to provide developers and users with a more open, transparent, and user-friendly product ecosystem.

Whether for users or professional developers, LobeHub will be your AI Agent playground. Please be aware that LobeChat is currently under active development, and feedback is welcome for any [issues][issues-link] encountered.

| [![][vercel-shield-badge]][vercel-link]   | No installation or registration necessary! Visit our website to experience it firsthand.                           |
| :---------------------------------------- | :----------------------------------------------------------------------------------------------------------------- |
| [![][discord-shield-badge]][discord-link] | Join our Discord community! This is where you can connect with developers and other enthusiastic users of LobeHub. |

&gt; \[!IMPORTANT]
&gt;
&gt; **Star Us**, You will receive all release notifications from GitHub without any delay \~ ⭐️

[![][image-star]][github-stars-link]

&lt;details&gt;
  &lt;summary&gt;&lt;kbd&gt;Star History&lt;/kbd&gt;&lt;/summary&gt;
  &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=lobehub%2Flobe-chat&amp;theme=dark&amp;type=Date&quot;&gt;
    &lt;img width=&quot;100%&quot; src=&quot;https://api.star-history.com/svg?repos=lobehub%2Flobe-chat&amp;type=Date&quot;&gt;
  &lt;/picture&gt;
&lt;/details&gt;

## ✨ Features

Transform your AI experience with LobeChat&#039;s powerful features designed for seamless connectivity, enhanced productivity, and unlimited creativity.

![][image-feat-mcp]

### ✨ MCP Plugin One-Click Installation

**Seamlessly Connect Your AI to the World**

Unlock the full potential of your AI by enabling smooth, secure, and dynamic interactions with external tools, data sources, and services. LobeChat&#039;s MCP (Model Context Protocol) plugin system breaks down the barriers between your AI and the digital ecosystem, allowing for unprecedented connectivity and functionality.

Transform your conversations into powerful workflows by connecting to databases, APIs, file systems, and more. Experience the freedom of AI that truly understands and interacts with your world.

[![][back-to-top]](#readme-top)

![][image-feat-mcp-market]

### 🏪 MCP Marketplace

**Discover, Connect, Extend**

Browse a growing library of MCP plugins to expand your AI&#039;s capabilities and streamline your workflows effortlessly. Visit [lobehub.com/mcp](https://lobehub.com/mcp) to explore the MCP Marketplace, which offers a curated collection of integrations that enhance your AI&#039;s ability to work with various tools and services.

From productivity tools to development environments, discover new ways to extend your AI&#039;s reach and effectiveness. Connect with the community and find the perfect plugins for your specific needs.

[![][back-to-top]](#readme-top)

![][image-feat-desktop]

### 🖥️ Desktop App

**Peak Performance, Zero Distractions**

Get the full LobeChat experience without browser limitations—comprehensive, focused, and always ready to go. Our desktop application provides a dedicated environment for your AI interactions, ensuring optimal performance and minimal distractions.

Experience faster response times, better resource management, and a more stable connection to your AI assistant. The desktop app is designed for users who demand the best performance from their AI tools.

[![][back-to-top]](#readme-top)

![][image-feat-web-search]

### 🌐 Smart Internet Search

**Online Knowledge On Demand**

With real-time internet access, your AI keeps up with the world—news, data, trends, and more. Stay informed and get the most current information available, enabling your AI to provide accurate and up-to-date responses.

Access live information, verify facts, and explore current events without leaving your conversation. Your AI becomes a gateway to the world&#039;s knowledge, always current and comprehensive.

[![][back-to-top]](#readme-top)

[![][image-feat-cot]][docs-feat-cot]

### [Chain of Thought][docs-feat-cot]

Experience AI reasoning like never before. Watch as complex problems unfold step by step through our innovative Chain of Thought (CoT) visualization. This breakthrough feature provides unprecedented transparency into AI&#039;s decision-making process, allowing you to observe how conclusions are reached in real-time.

By breaking down complex reasoning into clear, logical steps, you can better understand and validate the AI&#039;s problem-solving approach. Whether you&#039;re debugging, learning, or simply curious about AI reasoning, CoT visualization transforms abstract thinking into an engaging, interactive experience.

[![][back-to-top]](#readme-top)

[![][image-feat-branch]][docs-feat-branch]

### [Branching Conversations][docs-feat-branch]

Introducing a more natural and flexible way to chat with AI. With Branch Conversations, your discussions can flow in multiple directions, just like human conversations do. Create new conversation branches from any message, giving you the freedom to explore different paths while preserving the original context.

Choose between two powerful modes:

- **Continuation Mode:** Seamlessly extend your current discussion while maintaining valuable context
- **Standalone Mode:** Start fresh with a new topic based on any previous message

This groundbreaking feature transforms linear conversations into dynamic, tree-like structures, enabling deeper exploration of ideas and more productive interactions.

[![][back-to-top]](#readme-top)

[![][image-feat-artifacts]][docs-feat-artifacts]

### [Artifacts Support][docs-feat-artifacts]

Experience the power of Claude Artifacts, now integrated into LobeChat. This revolutionary feature expands the boundaries of AI-human interaction, enabling real-time creation and visualization of diverse content formats.

Create and visualize with unprecedented flexibility:

- Generate and display dynamic SVG graphics
- Build and render interactive HTML pages in real-time
- Produce professional documents in multiple formats

[![][back-to-top]](#readme-top)

[![][image-feat-knowledgebase]][docs-feat-knowledgebase]

### [File Upload /Knowledge Base][docs-feat-knowledgebase]

LobeChat supports file upload and knowledge base functionality. You can upload various types of files including documents, images, audio, and video, as well as create knowledge bases, making it convenient for users to manage and search for files. Additionally, you can utilize files and knowledge base features during conversations, enabling a richer dialogue experience.

&lt;https://github.com/user-attachments/assets/faa8cf67-e743-4590-8bf6-ebf6ccc34175&gt;

&gt; \[!TIP]
&gt;
&gt; Learn more on [📘 LobeChat Knowledge Base Launch — From Now On, Every Step Counts](https://lobehub.com/blog/knowledge-base)

&lt;div align=&quot;right&quot;&gt;

[![][back-to-top]](#readme-top)

&lt;/div&gt;

[![][image-feat-privoder]][docs-feat-provider]

### [Multi-Model Service Provider Support][docs-feat-provider]

In the continuous development of LobeChat, we deeply understand the importance of diversity in model service providers for meeting the needs of the community when providing AI conversation services. Therefore, we have expanded our support to multiple model service providers, rather than being limited to a single one, in order to offer users a more diverse and rich selection of conversations.

In this way, LobeChat can more flexibly adapt to the needs of different users, while also providing developers with a wider range of choices.

#### Supported Model Service Providers

We have implemented support for the following model service providers:

&lt;!-- PROVIDER LIST --&gt;

- **[OpenAI](https://lobechat.com/discover/provider/openai)**: OpenAI is a global leader in artificial intelligence research, with models like the GPT series pushing the frontiers of natural language processing. OpenAI is committed to transforming multiple industries through innovative and efficient AI solutions. Their products demonstrate significant performance and cost-effectiveness, widely used in research, business, and innovative applications.
- **[Ollama](https://lobechat.com/discover/provider/ollama)**: Ollama provides models that cover a wide range of fields, including code generation, mathematical operations, multilingual processing, and conversational interaction, catering to diverse enterprise-level and localized deployment needs.
- **[Anthropic](https://lobechat.com/discover/provider/anthropic)**: Anthropic is a company focused on AI research and development, offering a range of advanced language models such as Claude 3.5 Sonnet, Claude 3 Sonnet, Claude 3 Opus, and Claude 3 Haiku. These models achieve an ideal balance between intelligence, speed, and cost, suitable for various applications from enterprise workloads to rapid-response scenarios. Claude 3.5 Sonnet, as their latest model, has excelled in multiple evaluations while maintaining a high cost-performance ratio.
- **[Bedrock](https://lobechat.com/discover/provider/bedrock)**: Bedrock is a service provided by Amazon AWS, focusing on delivering advanced AI language and visual models for enterprises. Its model family includes Anthropic&#039;s Claude series, Meta&#039;s Llama 3.1 series, and more, offering a range of options from lightweight to high-performance, supporting tasks such as text generation, conversation, and image processing for businesses of varying scales and needs.
- **[Google](https://lobechat.com/discover/provider/google)**: Google&#039;s Gemini series represents its most advanced, versatile AI models, developed by Google DeepMind, designed for multimodal capabilities, supporting seamless understanding and processing of text, code, images, audio, and video. Suitable for various environments from data centers to mobile devices, it significantly enhances the efficiency and applicability of AI models.
- **[DeepSeek](https://lobechat.com/discover/provider/deepseek)**: DeepSeek is a company focused on AI technology research and application, with its latest model DeepSeek-V2.5 integrating general dialogue and code processing capabilities, achieving significant improvements in human preference alignment, writing tasks, and instruction following.
- **[Moonshot](https://lobechat.com/discover/provider/moonshot)**: Moonshot is an open-source platform launched by Beijing Dark Side Technology Co., Ltd., providing various natural language processing models with a wide range of applications, including but not limited to content creation, academic research, intelligent recommendations, and medical diagnosis, supporting long text processing and complex generation tasks.
- **[OpenRouter](https://lobechat.com/discover/provider/openrouter)**: OpenRouter is a service platform providing access to various cutting-edge large model interfaces, supporting OpenAI, Anthropic, LLaMA, and more, suitable for diverse development and application needs. Users can flexibly choose the optimal model and pricing based on their requirements, enhancing the AI experience.
- **[HuggingFace](https://lobechat.com/discover/provider/huggingface)**: The HuggingFace Inference API provides a fast and free way for you to explore thousands of models for various tasks. Whether you are prototyping for a new application or experimenting with the capabilities of machine learning, this API gives you instant access to high-performance models across multiple domains.
- **[Cloudflare Workers AI](https://lobechat.com/discover/provider/cloudflare)**: Run serverless GPU-powered machine learning models on Cloudflare&#039;s global network.

&lt;details&gt;&lt;summary&gt;&lt;kbd&gt;See more providers (+31)&lt;/kbd&gt;&lt;/summary&gt;

- **[GitHub](https://lobechat.com/discover/provider/github)**: With GitHub Models, developers can become AI engineers and leverage the industry&#039;s leading AI models.
- **[Novita](https://lobechat.com/discover/provider/novita)**: Novita AI is a platform providing a variety of large language models and AI image generation API services, flexible, reliable, and cost-effective. It supports the latest open-source models like Llama3 and Mistral, offering a comprehensive, user-friendly, and auto-scaling API solution for generative AI application development, suitable for the rapid growth of AI startups.
- **[PPIO](https://lobechat.com/discover/provider/ppio)**: PPIO supports stable and cost-efficient open-source LLM APIs, such as DeepSeek, Llama, Qwen etc.
- **[302.AI](https://lobechat.com/discover/provider/ai302)**: 302.AI is an on-demand AI application platform offering the most comprehensive AI APIs and online AI applications available on the market.
- **[Together AI](https://lobechat.com/discover/provider/togetherai)**: Together AI is dedicated to achieving leading performance through innovative AI models, offering extensive customization capabilities, including rapid scaling support and intuitive deployment processes to meet various enterprise needs.
- **[Fireworks AI](https://lobechat.com/discover/provider/fireworksai)**: Fireworks AI is a leading provider of advanced language model services, focusing on functional calling and multimodal processing. Its latest model, Firefunction V2, is based on Llama-3, optimized for function calling, conversation, and instruction following. The visual language model FireLLaVA-13B supports mixed input of images and text. Other notable models include the Llama series and Mixtral series, providing efficient multilingual instruction following and generation support.
- **[Groq](https://lobechat.com/discover/provider/groq)**: Groq&#039;s LPU inference engine has excelled in the latest independent large language model (LLM) benchmarks, redefining the standards for AI solutions with its remarkable speed and efficiency. Groq represents instant inference speed, demonstrating strong performance in cloud-based deployments.
- **[Perplexity](https://lobechat.com/discover/provider/perplexity)**: Perplexity is a leading provider of conversational generation models, offering various advanced Llama 3.1 models that support both online and offline applications, particularly suited for complex natural language processing tasks.
- **[Mistral](https://lobechat.com/discover/provider/mistral)**: Mistral provides advanced general, specialized, and research models widely used in complex reasoning, multilingual tasks, and code generation. Through functional calling interfaces, users can integrate custom functionalities for specific applications.
- **[ModelScope](https://lobechat.com/discover/provider/modelscope)**: ModelScope is a model-as-a-service platform launched by Alibaba Cloud, offering a wide range of AI models and inference services.
- **[Ai21Labs](https://lobechat.com/discover/provider/ai21)**: AI21 Labs builds foundational models and AI systems for enterprises, accelerating the application of generative AI in production.
- **[Upstage](https://lobechat.com/discover/provider/upstage)**: Upstage focuses on developing AI models for various business needs, including Solar LLM and document AI, aiming to achieve artificial general intelligence (AGI) for work. It allows for the creation of simple conversational agents through Chat API and supports functional calling, translation, embedding, and domain-specific applications.
- **[xAI (Grok)](https://lobechat.com/discover/provider/xai)**: xAI is a company dedicated to building artificial intelligence to accelerate human scientific discovery. Our mission is to advance our collective understanding of the universe.
- **[Aliyun Bailian](https://lobechat.com/discover/provider/qwen)**: Tongyi Qianwen is a large-scale language model independently developed by Alibaba Cloud, featuring strong natural language understanding and generation capabilities. It can answer various questions, create written content, express opinions, and write code, playing a role in multiple fields.
- **[Wenxin](https://lobechat.com/discover/provider/wenxin)**: An enterprise-level one-stop platform for large model and AI-native application development and services, providing the most comprehensive and user-friendly toolchain for the entire pr

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[musistudio/claude-code-router]]></title>
            <link>https://github.com/musistudio/claude-code-router</link>
            <guid>https://github.com/musistudio/claude-code-router</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:58 GMT</pubDate>
            <description><![CDATA[Use Claude Code as the foundation for coding infrastructure, allowing you to decide how to interact with the model while enjoying updates from Anthropic.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/musistudio/claude-code-router">musistudio/claude-code-router</a></h1>
            <p>Use Claude Code as the foundation for coding infrastructure, allowing you to decide how to interact with the model while enjoying updates from Anthropic.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 20,673</p>
            <p>Forks: 1,593</p>
            <p>Stars today: 61 stars today</p>
            <h2>README</h2><pre>![](blog/images/claude-code-router-img.png)

[![](https://img.shields.io/badge/%F0%9F%87%A8%F0%9F%87%B3-%E4%B8%AD%E6%96%87%E7%89%88-ff0000?style=flat)](README_zh.md)
[![Discord](https://img.shields.io/badge/Discord-%235865F2.svg?&amp;logo=discord&amp;logoColor=white)](https://discord.gg/rdftVMaUcS)
[![](https://img.shields.io/github/license/musistudio/claude-code-router)](https://github.com/musistudio/claude-code-router/blob/main/LICENSE)

&lt;hr&gt;

&gt; I am currently seeking **Agent development related job opportunities**, either **based in Hangzhou** or **remote**. If you are interested in my projects or have suitable opportunities, feel free to reach out! 📧 Email: m@musiiot.top

&gt; A powerful tool to route Claude Code requests to different models and customize any request.

&gt; Now you can use models such as `GLM-4.5`, `Kimi-K2`, `Qwen3-Coder-480B-A35B`, and `DeepSeek v3.1` for free through the [iFlow Platform](https://platform.iflow.cn/docs/api-mode).     
&gt; You can use the `ccr ui` command to directly import the `iflow` template in the UI. It’s worth noting that iFlow limits each user to a concurrency of 1, which means you’ll need to route background requests to other models.      
&gt; If you’d like a better experience, you can try [iFlow CLI](https://cli.iflow.cn).

![](blog/images/claude-code.png)

![](blog/images/roadmap.svg)

## ✨ Features

- **Model Routing**: Route requests to different models based on your needs (e.g., background tasks, thinking, long context).
- **Multi-Provider Support**: Supports various model providers like OpenRouter, DeepSeek, Ollama, Gemini, Volcengine, and SiliconFlow.
- **Request/Response Transformation**: Customize requests and responses for different providers using transformers.
- **Dynamic Model Switching**: Switch models on-the-fly within Claude Code using the `/model` command.
- **CLI Model Management**: Manage models and providers directly from the terminal with `ccr model`.
- **GitHub Actions Integration**: Trigger Claude Code tasks in your GitHub workflows.
- **Plugin System**: Extend functionality with custom transformers.

## 🚀 Getting Started

### 1. Installation

First, ensure you have [Claude Code](https://docs.anthropic.com/en/docs/claude-code/quickstart) installed:

```shell
npm install -g @anthropic-ai/claude-code
```

Then, install Claude Code Router:

```shell
npm install -g @musistudio/claude-code-router
```

### 2. Configuration

Create and configure your `~/.claude-code-router/config.json` file. For more details, you can refer to `config.example.json`.

The `config.json` file has several key sections:

- **`PROXY_URL`** (optional): You can set a proxy for API requests, for example: `&quot;PROXY_URL&quot;: &quot;http://127.0.0.1:7890&quot;`.
- **`LOG`** (optional): You can enable logging by setting it to `true`. When set to `false`, no log files will be created. Default is `true`.
- **`LOG_LEVEL`** (optional): Set the logging level. Available options are: `&quot;fatal&quot;`, `&quot;error&quot;`, `&quot;warn&quot;`, `&quot;info&quot;`, `&quot;debug&quot;`, `&quot;trace&quot;`. Default is `&quot;debug&quot;`.
- **Logging Systems**: The Claude Code Router uses two separate logging systems:
  - **Server-level logs**: HTTP requests, API calls, and server events are logged using pino in the `~/.claude-code-router/logs/` directory with filenames like `ccr-*.log`
  - **Application-level logs**: Routing decisions and business logic events are logged in `~/.claude-code-router/claude-code-router.log`
- **`APIKEY`** (optional): You can set a secret key to authenticate requests. When set, clients must provide this key in the `Authorization` header (e.g., `Bearer your-secret-key`) or the `x-api-key` header. Example: `&quot;APIKEY&quot;: &quot;your-secret-key&quot;`.
- **`HOST`** (optional): You can set the host address for the server. If `APIKEY` is not set, the host will be forced to `127.0.0.1` for security reasons to prevent unauthorized access. Example: `&quot;HOST&quot;: &quot;0.0.0.0&quot;`.
- **`NON_INTERACTIVE_MODE`** (optional): When set to `true`, enables compatibility with non-interactive environments like GitHub Actions, Docker containers, or other CI/CD systems. This sets appropriate environment variables (`CI=true`, `FORCE_COLOR=0`, etc.) and configures stdin handling to prevent the process from hanging in automated environments. Example: `&quot;NON_INTERACTIVE_MODE&quot;: true`.

- **`Providers`**: Used to configure different model providers.
- **`Router`**: Used to set up routing rules. `default` specifies the default model, which will be used for all requests if no other route is configured.
- **`API_TIMEOUT_MS`**: Specifies the timeout for API calls in milliseconds.

#### Environment Variable Interpolation

Claude Code Router supports environment variable interpolation for secure API key management. You can reference environment variables in your `config.json` using either `$VAR_NAME` or `${VAR_NAME}` syntax:

```json
{
  &quot;OPENAI_API_KEY&quot;: &quot;$OPENAI_API_KEY&quot;,
  &quot;GEMINI_API_KEY&quot;: &quot;${GEMINI_API_KEY}&quot;,
  &quot;Providers&quot;: [
    {
      &quot;name&quot;: &quot;openai&quot;,
      &quot;api_base_url&quot;: &quot;https://api.openai.com/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;$OPENAI_API_KEY&quot;,
      &quot;models&quot;: [&quot;gpt-5&quot;, &quot;gpt-5-mini&quot;]
    }
  ]
}
```

This allows you to keep sensitive API keys in environment variables instead of hardcoding them in configuration files. The interpolation works recursively through nested objects and arrays.

Here is a comprehensive example:

```json
{
  &quot;APIKEY&quot;: &quot;your-secret-key&quot;,
  &quot;PROXY_URL&quot;: &quot;http://127.0.0.1:7890&quot;,
  &quot;LOG&quot;: true,
  &quot;API_TIMEOUT_MS&quot;: 600000,
  &quot;NON_INTERACTIVE_MODE&quot;: false,
  &quot;Providers&quot;: [
    {
      &quot;name&quot;: &quot;openrouter&quot;,
      &quot;api_base_url&quot;: &quot;https://openrouter.ai/api/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;sk-xxx&quot;,
      &quot;models&quot;: [
        &quot;google/gemini-2.5-pro-preview&quot;,
        &quot;anthropic/claude-sonnet-4&quot;,
        &quot;anthropic/claude-3.5-sonnet&quot;,
        &quot;anthropic/claude-3.7-sonnet:thinking&quot;
      ],
      &quot;transformer&quot;: {
        &quot;use&quot;: [&quot;openrouter&quot;]
      }
    },
    {
      &quot;name&quot;: &quot;deepseek&quot;,
      &quot;api_base_url&quot;: &quot;https://api.deepseek.com/chat/completions&quot;,
      &quot;api_key&quot;: &quot;sk-xxx&quot;,
      &quot;models&quot;: [&quot;deepseek-chat&quot;, &quot;deepseek-reasoner&quot;],
      &quot;transformer&quot;: {
        &quot;use&quot;: [&quot;deepseek&quot;],
        &quot;deepseek-chat&quot;: {
          &quot;use&quot;: [&quot;tooluse&quot;]
        }
      }
    },
    {
      &quot;name&quot;: &quot;ollama&quot;,
      &quot;api_base_url&quot;: &quot;http://localhost:11434/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;ollama&quot;,
      &quot;models&quot;: [&quot;qwen2.5-coder:latest&quot;]
    },
    {
      &quot;name&quot;: &quot;gemini&quot;,
      &quot;api_base_url&quot;: &quot;https://generativelanguage.googleapis.com/v1beta/models/&quot;,
      &quot;api_key&quot;: &quot;sk-xxx&quot;,
      &quot;models&quot;: [&quot;gemini-2.5-flash&quot;, &quot;gemini-2.5-pro&quot;],
      &quot;transformer&quot;: {
        &quot;use&quot;: [&quot;gemini&quot;]
      }
    },
    {
      &quot;name&quot;: &quot;volcengine&quot;,
      &quot;api_base_url&quot;: &quot;https://ark.cn-beijing.volces.com/api/v3/chat/completions&quot;,
      &quot;api_key&quot;: &quot;sk-xxx&quot;,
      &quot;models&quot;: [&quot;deepseek-v3-250324&quot;, &quot;deepseek-r1-250528&quot;],
      &quot;transformer&quot;: {
        &quot;use&quot;: [&quot;deepseek&quot;]
      }
    },
    {
      &quot;name&quot;: &quot;modelscope&quot;,
      &quot;api_base_url&quot;: &quot;https://api-inference.modelscope.cn/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;&quot;,
      &quot;models&quot;: [&quot;Qwen/Qwen3-Coder-480B-A35B-Instruct&quot;, &quot;Qwen/Qwen3-235B-A22B-Thinking-2507&quot;],
      &quot;transformer&quot;: {
        &quot;use&quot;: [
          [
            &quot;maxtoken&quot;,
            {
              &quot;max_tokens&quot;: 65536
            }
          ],
          &quot;enhancetool&quot;
        ],
        &quot;Qwen/Qwen3-235B-A22B-Thinking-2507&quot;: {
          &quot;use&quot;: [&quot;reasoning&quot;]
        }
      }
    },
    {
      &quot;name&quot;: &quot;dashscope&quot;,
      &quot;api_base_url&quot;: &quot;https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;&quot;,
      &quot;models&quot;: [&quot;qwen3-coder-plus&quot;],
      &quot;transformer&quot;: {
        &quot;use&quot;: [
          [
            &quot;maxtoken&quot;,
            {
              &quot;max_tokens&quot;: 65536
            }
          ],
          &quot;enhancetool&quot;
        ]
      }
    },
    {
      &quot;name&quot;: &quot;aihubmix&quot;,
      &quot;api_base_url&quot;: &quot;https://aihubmix.com/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;sk-&quot;,
      &quot;models&quot;: [
        &quot;Z/glm-4.5&quot;,
        &quot;claude-opus-4-20250514&quot;,
        &quot;gemini-2.5-pro&quot;
      ]
    }
  ],
  &quot;Router&quot;: {
    &quot;default&quot;: &quot;deepseek,deepseek-chat&quot;,
    &quot;background&quot;: &quot;ollama,qwen2.5-coder:latest&quot;,
    &quot;think&quot;: &quot;deepseek,deepseek-reasoner&quot;,
    &quot;longContext&quot;: &quot;openrouter,google/gemini-2.5-pro-preview&quot;,
    &quot;longContextThreshold&quot;: 60000,
    &quot;webSearch&quot;: &quot;gemini,gemini-2.5-flash&quot;
  }
}
```

### 3. Running Claude Code with the Router

Start Claude Code using the router:

```shell
ccr code
```

&gt; **Note**: After modifying the configuration file, you need to restart the service for the changes to take effect:
&gt;
&gt; ```shell
&gt; ccr restart
&gt; ```

### 4. UI Mode

For a more intuitive experience, you can use the UI mode to manage your configuration:

```shell
ccr ui
```

This will open a web-based interface where you can easily view and edit your `config.json` file.

![UI](/blog/images/ui.png)

### 5. CLI Model Management

For users who prefer terminal-based workflows, you can use the interactive CLI model selector:

```shell
ccr model
```
![](blog/images/models.gif)

This command provides an interactive interface to:

- View current configuration:
- See all configured models (default, background, think, longContext, webSearch, image)
- Switch models: Quickly change which model is used for each router type
- Add new models: Add models to existing providers
- Create new providers: Set up complete provider configurations including:
   - Provider name and API endpoint
   - API key
   - Available models
   - Transformer configuration with support for:
     - Multiple transformers (openrouter, deepseek, gemini, etc.)
     - Transformer options (e.g., maxtoken with custom limits)
     - Provider-specific routing (e.g., OpenRouter provider preferences)

The CLI tool validates all inputs and provides helpful prompts to guide you through the configuration process, making it easy to manage complex setups without editing JSON files manually.

#### Providers

The `Providers` array is where you define the different model providers you want to use. Each provider object requires:

- `name`: A unique name for the provider.
- `api_base_url`: The full API endpoint for chat completions.
- `api_key`: Your API key for the provider.
- `models`: A list of model names available from this provider.
- `transformer` (optional): Specifies transformers to process requests and responses.

#### Transformers

Transformers allow you to modify the request and response payloads to ensure compatibility with different provider APIs.

- **Global Transformer**: Apply a transformer to all models from a provider. In this example, the `openrouter` transformer is applied to all models under the `openrouter` provider.
  ```json
  {
    &quot;name&quot;: &quot;openrouter&quot;,
    &quot;api_base_url&quot;: &quot;https://openrouter.ai/api/v1/chat/completions&quot;,
    &quot;api_key&quot;: &quot;sk-xxx&quot;,
    &quot;models&quot;: [
      &quot;google/gemini-2.5-pro-preview&quot;,
      &quot;anthropic/claude-sonnet-4&quot;,
      &quot;anthropic/claude-3.5-sonnet&quot;
    ],
    &quot;transformer&quot;: { &quot;use&quot;: [&quot;openrouter&quot;] }
  }
  ```
- **Model-Specific Transformer**: Apply a transformer to a specific model. In this example, the `deepseek` transformer is applied to all models, and an additional `tooluse` transformer is applied only to the `deepseek-chat` model.

  ```json
  {
    &quot;name&quot;: &quot;deepseek&quot;,
    &quot;api_base_url&quot;: &quot;https://api.deepseek.com/chat/completions&quot;,
    &quot;api_key&quot;: &quot;sk-xxx&quot;,
    &quot;models&quot;: [&quot;deepseek-chat&quot;, &quot;deepseek-reasoner&quot;],
    &quot;transformer&quot;: {
      &quot;use&quot;: [&quot;deepseek&quot;],
      &quot;deepseek-chat&quot;: { &quot;use&quot;: [&quot;tooluse&quot;] }
    }
  }
  ```

- **Passing Options to a Transformer**: Some transformers, like `maxtoken`, accept options. To pass options, use a nested array where the first element is the transformer name and the second is an options object.
  ```json
  {
    &quot;name&quot;: &quot;siliconflow&quot;,
    &quot;api_base_url&quot;: &quot;https://api.siliconflow.cn/v1/chat/completions&quot;,
    &quot;api_key&quot;: &quot;sk-xxx&quot;,
    &quot;models&quot;: [&quot;moonshotai/Kimi-K2-Instruct&quot;],
    &quot;transformer&quot;: {
      &quot;use&quot;: [
        [
          &quot;maxtoken&quot;,
          {
            &quot;max_tokens&quot;: 16384
          }
        ]
      ]
    }
  }
  ```

**Available Built-in Transformers:**

- `Anthropic`:If you use only the `Anthropic` transformer, it will preserve the original request and response parameters(you can use it to connect directly to an Anthropic endpoint).
- `deepseek`: Adapts requests/responses for DeepSeek API.
- `gemini`: Adapts requests/responses for Gemini API.
- `openrouter`: Adapts requests/responses for OpenRouter API. It can also accept a `provider` routing parameter to specify which underlying providers OpenRouter should use. For more details, refer to the [OpenRouter documentation](https://openrouter.ai/docs/features/provider-routing). See an example below:
  ```json
    &quot;transformer&quot;: {
      &quot;use&quot;: [&quot;openrouter&quot;],
      &quot;moonshotai/kimi-k2&quot;: {
        &quot;use&quot;: [
          [
            &quot;openrouter&quot;,
            {
              &quot;provider&quot;: {
                &quot;only&quot;: [&quot;moonshotai/fp8&quot;]
              }
            }
          ]
        ]
      }
    }
  ```
- `groq`: Adapts requests/responses for groq API.
- `maxtoken`: Sets a specific `max_tokens` value.
- `tooluse`: Optimizes tool usage for certain models via `tool_choice`.
- `gemini-cli` (experimental): Unofficial support for Gemini via Gemini CLI [gemini-cli.js](https://gist.github.com/musistudio/1c13a65f35916a7ab690649d3df8d1cd).
- `reasoning`: Used to process the `reasoning_content` field.
- `sampling`: Used to process sampling information fields such as `temperature`, `top_p`, `top_k`, and `repetition_penalty`.
- `enhancetool`: Adds a layer of error tolerance to the tool call parameters returned by the LLM (this will cause the tool call information to no longer be streamed).
- `cleancache`: Clears the `cache_control` field from requests.
- `vertex-gemini`: Handles the Gemini API using Vertex authentication.
- `chutes-glm` Unofficial support for GLM 4.5 model via Chutes [chutes-glm-transformer.js](https://gist.github.com/vitobotta/2be3f33722e05e8d4f9d2b0138b8c863).
- `qwen-cli` (experimental): Unofficial support for qwen3-coder-plus model via Qwen CLI [qwen-cli.js](https://gist.github.com/musistudio/f5a67841ced39912fd99e42200d5ca8b).
- `rovo-cli` (experimental): Unofficial support for gpt-5 via Atlassian Rovo Dev CLI [rovo-cli.js](https://gist.github.com/SaseQ/c2a20a38b11276537ec5332d1f7a5e53).

**Custom Transformers:**

You can also create your own transformers and load them via the `transformers` field in `config.json`.

```json
{
  &quot;transformers&quot;: [
    {
      &quot;path&quot;: &quot;/User/xxx/.claude-code-router/plugins/gemini-cli.js&quot;,
      &quot;options&quot;: {
        &quot;project&quot;: &quot;xxx&quot;
      }
    }
  ]
}
```

#### Router

The `Router` object defines which model to use for different scenarios:

- `default`: The default model for general tasks.
- `background`: A model for background tasks. This can be a smaller, local model to save costs.
- `think`: A model for reasoning-heavy tasks, like Plan Mode.
- `longContext`: A model for handling long contexts (e.g., &gt; 60K tokens).
- `longContextThreshold` (optional): The token count threshold for triggering the long context model. Defaults to 60000 if not specified.
- `webSearch`: Used for handling web search tasks and this requires the model itself to support the feature. If you&#039;re using openrouter, you need to add the `:online` suffix after the model name.
- `image` (beta): Used for handling image-related tasks (supported by CCR’s built-in agent). If the model does not support tool calling, you need to set the `config.forceUseImageAgent` property to `true`.

- You can also switch models dynamically in Claude Code with the `/model` command:
`/model provider_name,model_name`
Example: `/model openrouter,anthropic/claude-3.5-sonnet`

#### Custom Router

For more advanced routing logic, you can specify a custom router script via the `CUSTOM_ROUTER_PATH` in your `config.json`. This allows you to implement complex routing rules beyond the default scenarios.

In your `config.json`:

```json
{
  &quot;CUSTOM_ROUTER_PATH&quot;: &quot;/User/xxx/.claude-code-router/custom-router.js&quot;
}
```

The custom router file must be a JavaScript module that exports an `async` function. This function receives the request object and the config object as arguments and should return the provider and model name as a string (e.g., `&quot;provider_name,model_name&quot;`), or `null` to fall back to the default router.

Here is an example of a `custom-router.js` based on `custom-router.example.js`:

```javascript
// /User/xxx/.claude-code-router/custom-router.js

/**
 * A custom router function to determine which model to use based on the request.
 *
 * @param {object} req - The request object from Claude Code, containing the request body.
 * @param {object} config - The application&#039;s config object.
 * @returns {Promise&lt;string|null&gt;} - A promise that resolves to the &quot;provider,model_name&quot; string, or null to use the default router.
 */
module.exports = async function router(req, config) {
  const userMessage = req.body.messages.find((m) =&gt; m.role === &quot;user&quot;)?.content;

  if (userMessage &amp;&amp; userMessage.includes(&quot;explain this code&quot;)) {
    // Use a powerful model for code explanation
    return &quot;openrouter,anthropic/claude-3.5-sonnet&quot;;
  }

  // Fallback to the default router configuration
  return null;
};
```

##### Subagent Routing

For routing within subagents, you must specify a particular provider and model by including `&lt;CCR-SUBAGENT-MODEL&gt;provider,model&lt;/CCR-SUBAGENT-MODEL&gt;` at the **beginning** of the subagent&#039;s prompt. This allows you to direct specific subagent tasks to designated models.

**Example:**

```
&lt;CCR-SUBAGENT-MODEL&gt;openrouter,anthropic/claude-3.5-sonnet&lt;/CCR-SUBAGENT-MODEL&gt;
Please help me analyze this code snippet for potential optimizations...
```

## Status Line (Beta)
To better monitor the status of claude-code-router at runtime, version v1.0.40 includes a built-in statusline tool, which you can enable in the UI.
![statusline-config.png](/blog/images/statusline-config.png)

The effect is as follows:
![statusline](/blog/images/statusline.png)

## 🤖 GitHub Actions

Integrate Claude Code Router into your CI/CD pipeline. After setting up [Claude Code Actions](https://docs.anthropic.com/en/docs/claude-code/github-actions), modify your `.github/workflows/claude.yaml` to use the router:

```yaml
name: Claude Code

on:
  issue_comment:
    types: [created]
  # ... other triggers

jobs:
  claude:
    if: |
      (github.event_name == &#039;issue_comment&#039; &amp;&amp; contains(github.event.comment.body, &#039;@claude&#039;)) ||
      # ... other conditions
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Prepare Environment
        run: |
          curl -fsSL https://bun.sh/install | bash
          mkdir -p $HOME/.claude-code-router
          cat &lt;&lt; &#039;EOF&#039; &gt; $HOME/.claude-code-router/config.json
          {
            &quot;log&quot;: true,
            &quot;NON_INTERACTIVE_MODE&quot;: true,
            &quot;OPENAI_API_KEY&quot;: &quot;${{ secrets.OPENAI_API_KEY }}&quot;,
            &quot;OPENAI_BASE_URL&quot;: &quot;https://api.deepseek.com&quot;,
            &quot;OPENAI_MODEL&quot;: &quot;deepseek-chat&quot;
          }
          EOF
        shell: bash

      - name: Start Claude Code Router
        run: |
          nohup ~/.bun/bin/bunx @musistudio/claude-code-router@1.0.8 start &amp;
        shell: bash

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        env:
          ANTHROPIC_BASE_URL: http://localhost:3456
        with:
          anthropic_api_key: &quot;any-string-is-ok&quot;
```

&gt; **Note**: When running in GitHub Actions or other automation environments, make sure to set `&quot;NON_INTERACTIVE_MODE&quot;: true` in your configuration to prevent the process from hanging due to stdin handling issues.

This setup allows for interesting automations, like running tasks during off-peak hours to reduce API costs.


... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[YILS-LIN/short-video-factory]]></title>
            <link>https://github.com/YILS-LIN/short-video-factory</link>
            <guid>https://github.com/YILS-LIN/short-video-factory</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:57 GMT</pubDate>
            <description><![CDATA[一键生成产品营销与泛内容短视频，AI批量自动剪辑，高颜值跨平台桌面端工具 One click generation of product marketing and general content short videos, AI batch automatic cliping, beautiful cross platform desktop tool]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/YILS-LIN/short-video-factory">YILS-LIN/short-video-factory</a></h1>
            <p>一键生成产品营销与泛内容短视频，AI批量自动剪辑，高颜值跨平台桌面端工具 One click generation of product marketing and general content short videos, AI batch automatic cliping, beautiful cross platform desktop tool</p>
            <p>Language: TypeScript</p>
            <p>Stars: 2,212</p>
            <p>Forks: 299</p>
            <p>Stars today: 9 stars today</p>
            <h2>README</h2><pre>&lt;a id=&quot;readme-top&quot;&gt;&lt;/a&gt;

&lt;!-- 项目海报 --&gt;
&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;images/ScreenShot.png&quot; alt=&quot;Poster&quot; width=&quot;100%&quot;&gt;
&lt;/div&gt;

---

&lt;!-- 项目LOGO --&gt;
&lt;br /&gt;
&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://github.com/YILS-LIN/short-video-factory&quot;&gt;
    &lt;img src=&quot;public/icon.png&quot; alt=&quot;Logo&quot; height=&quot;100&quot;&gt;
  &lt;/a&gt;

&lt;h3 align=&quot;center&quot;&gt;AI Short Video Factory - 短视频工厂&lt;/h3&gt;

  &lt;p align=&quot;center&quot;&gt;
    🚀 一键生成产品营销与泛内容短视频，AI批量自动剪辑，高颜值跨平台桌面端工具
  &lt;/p&gt;

  &lt;!-- 项目徽章 --&gt;

[![贡献者][contributors-shield]][contributors-url]
[![分支][forks-shield]][forks-url]
[![星标][stars-shield]][stars-url]
[![问题][issues-shield]][issues-url]
[![最新版本][release-shield]][release-url]

&lt;!-- ![发布日期][release-date-shield] --&gt;

[![许可证][license-shield]][license-url]

  &lt;p align=&quot;center&quot;&gt;
    &lt;a href=&quot;https://github.com/YILS-LIN/short-video-factory/issues/new?labels=bug&amp;template=bug-report---.md&quot;&gt;报告Bug&lt;/a&gt;
    &amp;middot;
    &lt;a href=&quot;https://github.com/YILS-LIN/short-video-factory/issues/new?labels=enhancement&amp;template=feature-request---.md&quot;&gt;请求功能&lt;/a&gt;
  &lt;/p&gt;
&lt;/div&gt;

&lt;!-- 关于项目 --&gt;

## 📖 关于项目

短视频工厂是一个开源的桌面端应用，旨在通过AI技术简化短视频的制作流程。用户可以通过简单的提示词文本+视频分镜素材，快速且自动的剪辑出高质量的产品营销和泛内容短视频。该项目集成了AI驱动的文案生成、语音合成、视频剪辑、字幕特效等功能，旨在为用户提供开箱即用的短视频制作体验。

### 核心功能

- 🤖 **AI驱动**：集成了最新的AI技术，提升视频制作效率和质量
- 📝 **文案生成**：基于提示词生成高质量的短视频文案
- 🎥 **自动剪辑**：支持多种视频格式，自动化批量处理视频剪辑任务
- 🎙️ **语音合成**：将生成的文案转换为自然流畅的语音
- 🎬 **字幕特效**：自动添加字幕和特效，提升视频质量
- 📦 **批量处理**：支持批量任务，按预设自动持续合成视频
- 🌐 **多语言支持**：支持中文、英文等多种语言，满足不同用户需求
- 📦 **开箱即用**：无需复杂配置，用户可以快速上手
- 📈 **持续更新**：定期发布新版本，修复bug并添加新功能
- 🔒 **安全可靠**：完全本地本地化运行，确保用户数据安全
- 🎨 **用户友好**：简洁直观的用户界面，易于操作
- 💻 **多平台支持**：支持Windows、macOS和Linux等多个操作系统

&lt;p align=&quot;right&quot;&gt;(&lt;a href=&quot;#readme-top&quot;&gt;返回顶部&lt;/a&gt;)&lt;/p&gt;

## 🚀 开始使用

前往 [Github Release](https://github.com/YILS-LIN/short-video-factory/releases) 下载最新版本

前往 [官方文档](https://short-video-factory.yils.blog) 查看使用手册

&lt;p align=&quot;right&quot;&gt;(&lt;a href=&quot;#readme-top&quot;&gt;返回顶部&lt;/a&gt;)&lt;/p&gt;

## 🗺️ 路线图

**喜欢可以点个 Star 支持一下哦！**

下面是已实现和计划中的功能：

- [x] 文案生成，兼容通用的 OpenAI 接口格式
- [x] 语音合成，支持EdgeTTS
- [x] 视频剪辑，文案、视频、音频、字幕合成，自动混剪
- [x] 批量处理，支持一个批量任务，按预设自动持续合成视频
- [x] 多语言支持，能够支持中文、英文等多种语言
- [x] 完善的使用手册
- [ ] 更全面的参数调整
- [ ] 更多的语音合成API
- [ ] 字幕特效，支持多种字幕样式和特效

查看[开放问题](https://github.com/YILS-LIN/short-video-factory/issues)以获取提议功能（和已知问题）的完整列表。

&lt;p align=&quot;right&quot;&gt;(&lt;a href=&quot;#readme-top&quot;&gt;返回顶部&lt;/a&gt;)&lt;/p&gt;

## 🎞️ 示例视频

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;&lt;g-emoji class=&quot;g-emoji&quot; alias=&quot;arrow_forward&quot;&gt;▶️&lt;/g-emoji&gt; 《产品营销短视频》&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;&lt;g-emoji class=&quot;g-emoji&quot; alias=&quot;arrow_forward&quot;&gt;▶️&lt;/g-emoji&gt; 《暖心治愈系语录》&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;&lt;video src=&quot;https://github.com/user-attachments/assets/165a8f96-861b-4cf3-946c-444b9692cef8&quot;&gt;&lt;/video&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;video src=&quot;https://github.com/user-attachments/assets/12694618-e0fe-4848-8a7e-98b3f3a7aece&quot;&gt;&lt;/video&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

注：素材来源于网络，仅用于展示剪辑效果

&lt;p align=&quot;right&quot;&gt;(&lt;a href=&quot;#readme-top&quot;&gt;返回顶部&lt;/a&gt;)&lt;/p&gt;

&lt;!-- 贡献 --&gt;

## 🤝 贡献

贡献让开源社区成为了一个学习、启发和创造的绝佳场所。**非常感谢**您所做的任何贡献。

如果您有可以改善此项目的建议，请fork本项目仓库并创建一个pull request。您也可以简单地创建一个带有&quot;enhancement&quot;标签的issue。
不要忘记给项目点个Star！再次感谢！

1. Fork此项目
2. 创建您的功能分支 (`git checkout -b feature/AmazingFeature`)
3. 提交您的更改 (`git commit -m &#039;Add some AmazingFeature&#039;`)
4. 推送到分支 (`git push origin feature/AmazingFeature`)
5. 开启一个Pull Request

### 主要贡献者：

&lt;a href=&quot;https://github.com/YILS-LIN/short-video-factory/graphs/contributors&quot;&gt;
  &lt;img src=&quot;https://contrib.rocks/image?repo=YILS-LIN/short-video-factory&quot; alt=&quot;contrib.rocks image&quot; /&gt;
&lt;/a&gt;

&lt;p align=&quot;right&quot;&gt;(&lt;a href=&quot;#readme-top&quot;&gt;返回顶部&lt;/a&gt;)&lt;/p&gt;

## 💖 鸣谢

- [rany2/edge-tts](https://github.com/rany2/edge-tts)
- [duyquangnvx/edge-tts](https://github.com/duyquangnvx/edge-tts)

&lt;p align=&quot;right&quot;&gt;(&lt;a href=&quot;#readme-top&quot;&gt;返回顶部&lt;/a&gt;)&lt;/p&gt;

&lt;!-- 许可证 --&gt;

## 🎗 许可证

[![许可证][license-shield]][license-url]

Copyright © 2025 YILS.

&lt;p align=&quot;right&quot;&gt;(&lt;a href=&quot;#readme-top&quot;&gt;返回顶部&lt;/a&gt;)&lt;/p&gt;

## 🐱 捐赠

如果这个项目对你有帮助，欢迎请作者喝杯咖啡(或者啤酒) 🍺

你的 **Star ⭐** 和 **捐赠** 是我持续更新的最大动力！

&lt;div align=&quot;left&quot;&gt;
  &lt;img src=&quot;https://github.com/user-attachments/assets/6b832dd3-38ea-4927-9c3b-97549c77a1f0&quot; alt=&quot;YILS的微信赞赏码&quot; width=&quot;400&quot;&gt;
&lt;/div&gt;

👉 在此处查看捐赠者名单：[千古留名 - 捐赠者留言板](https://short-video-factory.yils.blog/donate/list.html)

&lt;p align=&quot;right&quot;&gt;(&lt;a href=&quot;#readme-top&quot;&gt;返回顶部&lt;/a&gt;)&lt;/p&gt;

&lt;!-- 星标历史 --&gt;

## ⭐ 星标历史

&lt;div align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://star-history.com/#YILS-LIN/short-video-factory&quot;&gt;
    &lt;img src=&quot;https://api.star-history.com/svg?repos=YILS-LIN/short-video-factory&amp;type=Date&quot; alt=&quot;Star History Chart&quot; width=&quot;800&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p align=&quot;right&quot;&gt;(&lt;a href=&quot;#readme-top&quot;&gt;返回顶部&lt;/a&gt;)&lt;/p&gt;

&lt;!-- MARKDOWN链接和图片 --&gt;

[contributors-shield]: https://img.shields.io/github/contributors/YILS-LIN/short-video-factory.svg?color=c4f042&amp;labelColor=black&amp;style=flat-square
[contributors-url]: https://github.com/YILS-LIN/short-video-factory/graphs/contributors
[forks-shield]: https://img.shields.io/github/forks/YILS-LIN/short-video-factory.svg?color=8ae8ff&amp;labelColor=black&amp;style=flat-square
[forks-url]: https://github.com/YILS-LIN/short-video-factory/network/members
[stars-shield]: https://img.shields.io/github/stars/YILS-LIN/short-video-factory.svg?color=ffcb47&amp;labelColor=black&amp;style=flat-square
[stars-url]: https://github.com/YILS-LIN/short-video-factory/stargazers
[issues-shield]: https://img.shields.io/github/issues/YILS-LIN/short-video-factory.svg?labelColor=black&amp;style=flat-square
[issues-url]: https://github.com/YILS-LIN/short-video-factory/issues
[release-shield]: https://img.shields.io/github/v/release/YILS-LIN/short-video-factory?labelColor=black&amp;style=flat-square
[release-url]: https://github.com/YILS-LIN/short-video-factory/releases
[release-date-shield]: https://img.shields.io/github/release-date/YILS-LIN/short-video-factory?color=9cf&amp;style=flat-round
[license-shield]: https://img.shields.io/github/license/YILS-LIN/short-video-factory.svg?labelColor=black&amp;style=flat-square
[license-url]: https://github.com/YILS-LIN/short-video-factory/blob/main/LICENSE
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[manaflow-ai/cmux]]></title>
            <link>https://github.com/manaflow-ai/cmux</link>
            <guid>https://github.com/manaflow-ai/cmux</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:56 GMT</pubDate>
            <description><![CDATA[cmux lets you run Claude Code, Codex CLI, Amp, Gemini CLI, Cursor CLI, Opencode, and other coding agent CLIs in parallel across multiple tasks]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/manaflow-ai/cmux">manaflow-ai/cmux</a></h1>
            <p>cmux lets you run Claude Code, Codex CLI, Amp, Gemini CLI, Cursor CLI, Opencode, and other coding agent CLIs in parallel across multiple tasks</p>
            <p>Language: TypeScript</p>
            <p>Stars: 409</p>
            <p>Forks: 21</p>
            <p>Stars today: 76 stars today</p>
            <h2>README</h2><pre>&lt;h1 align=&quot;center&quot;&gt;cmux&lt;/h1&gt;
&lt;p align=&quot;center&quot;&gt;Open source Claude Code manager that supports Codex/Gemini/Cursor/OpenCode/Amp CLI&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;a href=&quot;https://www.cmux.dev/direct-download-macos&quot;&gt;
    &lt;img src=&quot;./docs/assets/macos-badge.png&quot; alt=&quot;Download cmux for macOS&quot; width=&quot;180&quot; /&gt;
  &lt;/a&gt;
&lt;/p&gt;

cmux lets you spawn Claude Code, Codex CLI, Cursor CLI, Gemini CLI, Amp, Opencode, and other coding agent CLIs in parallel across multiple tasks.

Every run spins up an isolated VS Code workspace either in the cloud or in a local Docker container with the git diff view, terminal, and dev server preview ready so parallel agent work stays verifiable, fast, and ready to ship.

![cmux screenshot](./docs/assets/cmux0.png)
![cmux screenshot](./docs/assets/cmux1.png)
![cmux screenshot](./docs/assets/cmux2.png)
![cmux screenshot](./docs/assets/cmux3.png)
![cmux screenshot](./docs/assets/cmux4.png)

## Install

cmux supports macOS. Linux and Windows support coming soon.

&lt;a href=&quot;https://www.cmux.dev/direct-download-macos&quot;&gt;
  &lt;img src=&quot;./docs/assets/macos-badge.png&quot; alt=&quot;Download cmux for macOS&quot; width=&quot;180&quot; /&gt;
&lt;/a&gt;

&lt;!-- ```bash
# with bun
bunx cmux@latest

# with npm
npx cmux@latest

# or to install globally
bun add -g cmux@latest
npm install -g cmux@latest
``` --&gt;

&lt;!-- ```bash
# with uv
uvx cmux@latest
``` --&gt;

&lt;!-- ## Upgrade

```bash
cmux upgrade
``` --&gt;

&lt;!-- ## Uninstall

```bash
cmux uninstall
``` --&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Uniswap/v3-core]]></title>
            <link>https://github.com/Uniswap/v3-core</link>
            <guid>https://github.com/Uniswap/v3-core</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:55 GMT</pubDate>
            <description><![CDATA[🦄 🦄 🦄 Core smart contracts of Uniswap v3]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/Uniswap/v3-core">Uniswap/v3-core</a></h1>
            <p>🦄 🦄 🦄 Core smart contracts of Uniswap v3</p>
            <p>Language: TypeScript</p>
            <p>Stars: 4,850</p>
            <p>Forks: 2,984</p>
            <p>Stars today: 0 stars today</p>
            <h2>README</h2><pre># Uniswap V3

[![Lint](https://github.com/Uniswap/uniswap-v3-core/actions/workflows/lint.yml/badge.svg)](https://github.com/Uniswap/uniswap-v3-core/actions/workflows/lint.yml)
[![Tests](https://github.com/Uniswap/uniswap-v3-core/actions/workflows/tests.yml/badge.svg)](https://github.com/Uniswap/uniswap-v3-core/actions/workflows/tests.yml)
[![Fuzz Testing](https://github.com/Uniswap/uniswap-v3-core/actions/workflows/fuzz-testing.yml/badge.svg)](https://github.com/Uniswap/uniswap-v3-core/actions/workflows/fuzz-testing.yml)
[![Mythx](https://github.com/Uniswap/uniswap-v3-core/actions/workflows/mythx.yml/badge.svg)](https://github.com/Uniswap/uniswap-v3-core/actions/workflows/mythx.yml)
[![npm version](https://img.shields.io/npm/v/@uniswap/v3-core/latest.svg)](https://www.npmjs.com/package/@uniswap/v3-core/v/latest)

This repository contains the core smart contracts for the Uniswap V3 Protocol.
For higher level contracts, see the [uniswap-v3-periphery](https://github.com/Uniswap/uniswap-v3-periphery)
repository.

## Bug bounty

This repository is subject to the Uniswap V3 bug bounty program, per the terms defined [here](./bug-bounty.md).

## Local deployment

In order to deploy this code to a local testnet, you should install the npm package
`@uniswap/v3-core`
and import the factory bytecode located at
`@uniswap/v3-core/artifacts/contracts/UniswapV3Factory.sol/UniswapV3Factory.json`.
For example:

```typescript
import {
  abi as FACTORY_ABI,
  bytecode as FACTORY_BYTECODE,
} from &#039;@uniswap/v3-core/artifacts/contracts/UniswapV3Factory.sol/UniswapV3Factory.json&#039;

// deploy the bytecode
```

This will ensure that you are testing against the same bytecode that is deployed to
mainnet and public testnets, and all Uniswap code will correctly interoperate with
your local deployment.

## Using solidity interfaces

The Uniswap v3 interfaces are available for import into solidity smart contracts
via the npm artifact `@uniswap/v3-core`, e.g.:

```solidity
import &#039;@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol&#039;;

contract MyContract {
  IUniswapV3Pool pool;

  function doSomethingWithPool() {
    // pool.swap(...);
  }
}

```

## Licensing

The primary license for Uniswap V3 Core is the Business Source License 1.1 (`BUSL-1.1`), see [`LICENSE`](./LICENSE). However, some files are dual licensed under `GPL-2.0-or-later`:

- All files in `contracts/interfaces/` may also be licensed under `GPL-2.0-or-later` (as indicated in their SPDX headers), see [`contracts/interfaces/LICENSE`](./contracts/interfaces/LICENSE)
- Several files in `contracts/libraries/` may also be licensed under `GPL-2.0-or-later` (as indicated in their SPDX headers), see [`contracts/libraries/LICENSE`](contracts/libraries/LICENSE)

### Other Exceptions

- `contracts/libraries/FullMath.sol` is licensed under `MIT` (as indicated in its SPDX header), see [`contracts/libraries/LICENSE_MIT`](contracts/libraries/LICENSE_MIT)
- All files in `contracts/test` remain unlicensed (as indicated in their SPDX headers).
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[supabase/supabase]]></title>
            <link>https://github.com/supabase/supabase</link>
            <guid>https://github.com/supabase/supabase</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:54 GMT</pubDate>
            <description><![CDATA[The Postgres development platform. Supabase gives you a dedicated Postgres database to build your web, mobile, and AI applications.]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/supabase/supabase">supabase/supabase</a></h1>
            <p>The Postgres development platform. Supabase gives you a dedicated Postgres database to build your web, mobile, and AI applications.</p>
            <p>Language: TypeScript</p>
            <p>Stars: 91,383</p>
            <p>Forks: 10,421</p>
            <p>Stars today: 348 stars today</p>
            <h2>README</h2><pre>&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/8291514/213727234-cda046d6-28c6-491a-b284-b86c5cede25d.png#gh-light-mode-only&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/8291514/213727225-56186826-bee8-43b5-9b15-86e839d89393.png#gh-dark-mode-only&quot;&gt;
&lt;/p&gt;

# Supabase

[Supabase](https://supabase.com) is the Postgres development platform. We&#039;re building the features of Firebase using enterprise-grade open source tools.

- [x] Hosted Postgres Database. [Docs](https://supabase.com/docs/guides/database)
- [x] Authentication and Authorization. [Docs](https://supabase.com/docs/guides/auth)
- [x] Auto-generated APIs.
  - [x] REST. [Docs](https://supabase.com/docs/guides/api)
  - [x] GraphQL. [Docs](https://supabase.com/docs/guides/graphql)
  - [x] Realtime subscriptions. [Docs](https://supabase.com/docs/guides/realtime)
- [x] Functions.
  - [x] Database Functions. [Docs](https://supabase.com/docs/guides/database/functions)
  - [x] Edge Functions [Docs](https://supabase.com/docs/guides/functions)
- [x] File Storage. [Docs](https://supabase.com/docs/guides/storage)
- [x] AI + Vector/Embeddings Toolkit. [Docs](https://supabase.com/docs/guides/ai)
- [x] Dashboard

![Supabase Dashboard](https://raw.githubusercontent.com/supabase/supabase/master/apps/www/public/images/github/supabase-dashboard.png)

Watch &quot;releases&quot; of this repo to get notified of major updates.

&lt;kbd&gt;&lt;img src=&quot;https://raw.githubusercontent.com/supabase/supabase/d5f7f413ab356dc1a92075cb3cee4e40a957d5b1/web/static/watch-repo.gif&quot; alt=&quot;Watch this repo&quot;/&gt;&lt;/kbd&gt;

## Documentation

For full documentation, visit [supabase.com/docs](https://supabase.com/docs)

To see how to Contribute, visit [Getting Started](./DEVELOPERS.md)

## Community &amp; Support

- [Community Forum](https://github.com/supabase/supabase/discussions). Best for: help with building, discussion about database best practices.
- [GitHub Issues](https://github.com/supabase/supabase/issues). Best for: bugs and errors you encounter using Supabase.
- [Email Support](https://supabase.com/docs/support#business-support). Best for: problems with your database or infrastructure.
- [Discord](https://discord.supabase.com). Best for: sharing your applications and hanging out with the community.

## How it works

Supabase is a combination of open source tools. We’re building the features of Firebase using enterprise-grade, open source products. If the tools and communities exist, with an MIT, Apache 2, or equivalent open license, we will use and support that tool. If the tool doesn&#039;t exist, we build and open source it ourselves. Supabase is not a 1-to-1 mapping of Firebase. Our aim is to give developers a Firebase-like developer experience using open source tools.

**Architecture**

Supabase is a [hosted platform](https://supabase.com/dashboard). You can sign up and start using Supabase without installing anything.
You can also [self-host](https://supabase.com/docs/guides/hosting/overview) and [develop locally](https://supabase.com/docs/guides/local-development).

![Architecture](apps/docs/public/img/supabase-architecture.svg)

- [Postgres](https://www.postgresql.org/) is an object-relational database system with over 30 years of active development that has earned it a strong reputation for reliability, feature robustness, and performance.
- [Realtime](https://github.com/supabase/realtime) is an Elixir server that allows you to listen to PostgreSQL inserts, updates, and deletes using websockets. Realtime polls Postgres&#039; built-in replication functionality for database changes, converts changes to JSON, then broadcasts the JSON over websockets to authorized clients.
- [PostgREST](http://postgrest.org/) is a web server that turns your PostgreSQL database directly into a RESTful API.
- [GoTrue](https://github.com/supabase/gotrue) is a JWT-based authentication API that simplifies user sign-ups, logins, and session management in your applications.
- [Storage](https://github.com/supabase/storage-api) a RESTful API for managing files in S3, with Postgres handling permissions.
- [pg_graphql](http://github.com/supabase/pg_graphql/) a PostgreSQL extension that exposes a GraphQL API.
- [postgres-meta](https://github.com/supabase/postgres-meta) is a RESTful API for managing your Postgres, allowing you to fetch tables, add roles, and run queries, etc.
- [Kong](https://github.com/Kong/kong) is a cloud-native API gateway.

#### Client libraries

Our approach for client libraries is modular. Each sub-library is a standalone implementation for a single external system. This is one of the ways we support existing tools.

&lt;table style=&quot;table-layout:fixed; white-space: nowrap;&quot;&gt;
  &lt;tr&gt;
    &lt;th&gt;Language&lt;/th&gt;
    &lt;th&gt;Client&lt;/th&gt;
    &lt;th colspan=&quot;5&quot;&gt;Feature-Clients (bundled in Supabase client)&lt;/th&gt;
  &lt;/tr&gt;
  &lt;!-- notranslate --&gt;
  &lt;tr&gt;
    &lt;th&gt;&lt;/th&gt;
    &lt;th&gt;Supabase&lt;/th&gt;
    &lt;th&gt;&lt;a href=&quot;https://github.com/postgrest/postgrest&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;PostgREST&lt;/a&gt;&lt;/th&gt;
    &lt;th&gt;&lt;a href=&quot;https://github.com/supabase/gotrue&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;GoTrue&lt;/a&gt;&lt;/th&gt;
    &lt;th&gt;&lt;a href=&quot;https://github.com/supabase/realtime&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Realtime&lt;/a&gt;&lt;/th&gt;
    &lt;th&gt;&lt;a href=&quot;https://github.com/supabase/storage-api&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Storage&lt;/a&gt;&lt;/th&gt;
    &lt;th&gt;Functions&lt;/th&gt;
  &lt;/tr&gt;
  &lt;!-- TEMPLATE FOR NEW ROW --&gt;
  &lt;!-- START ROW
  &lt;tr&gt;
    &lt;td&gt;lang&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/supabase-lang&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;supabase-lang&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/postgrest-lang&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;postgrest-lang&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/gotrue-lang&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;gotrue-lang&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/realtime-lang&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;realtime-lang&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/storage-lang&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;storage-lang&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  END ROW --&gt;
  &lt;!-- /notranslate --&gt;
  &lt;th colspan=&quot;7&quot;&gt;⚡️ Official ⚡️&lt;/th&gt;
  &lt;!-- notranslate --&gt;
  &lt;tr&gt;
    &lt;td&gt;JavaScript (TypeScript)&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/supabase-js&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;supabase-js&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/postgrest-js&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;postgrest-js&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/gotrue-js&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;gotrue-js&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/realtime-js&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;realtime-js&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/storage-js&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;storage-js&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/functions-js&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;functions-js&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;Flutter&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/supabase-flutter&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;supabase-flutter&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/postgrest-dart&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;postgrest-dart&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/gotrue-dart&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;gotrue-dart&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/realtime-dart&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;realtime-dart&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/storage-dart&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;storage-dart&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/functions-dart&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;functions-dart&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Swift&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/supabase-swift&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;supabase-swift&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/supabase-swift/tree/main/Sources/PostgREST&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;postgrest-swift&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/supabase-swift/tree/main/Sources/Auth&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;auth-swift&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/supabase-swift/tree/main/Sources/Realtime&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;realtime-swift&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/supabase-swift/tree/main/Sources/Storage&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;storage-swift&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/supabase-swift/tree/main/Sources/Functions&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;functions-swift&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Python&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/supabase-py&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;supabase-py&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/postgrest-py&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;postgrest-py&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/gotrue-py&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;gotrue-py&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/realtime-py&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;realtime-py&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/storage-py&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;storage-py&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase/functions-py&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;functions-py&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;!-- /notranslate --&gt;
  &lt;th colspan=&quot;7&quot;&gt;💚 Community 💚&lt;/th&gt;
  &lt;!-- notranslate --&gt;
  &lt;tr&gt;
    &lt;td&gt;C#&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/supabase-csharp&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;supabase-csharp&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/postgrest-csharp&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;postgrest-csharp&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/gotrue-csharp&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;gotrue-csharp&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/realtime-csharp&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;realtime-csharp&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/storage-csharp&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;storage-csharp&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/functions-csharp&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;functions-csharp&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Go&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/postgrest-go&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;postgrest-go&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/gotrue-go&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;gotrue-go&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/storage-go&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;storage-go&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/functions-go&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;functions-go&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Java&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/gotrue-java&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;gotrue-java&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/storage-java&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;storage-java&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Kotlin&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/supabase-kt&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;supabase-kt&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/supabase-kt/tree/master/Postgrest&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;postgrest-kt&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/supabase-kt/tree/master/Auth&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;auth-kt&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/supabase-kt/tree/master/Realtime&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;realtime-kt&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/supabase-kt/tree/master/Storage&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;storage-kt&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/supabase-kt/tree/master/Functions&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;functions-kt&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Ruby&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/supabase-rb&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;supabase-rb&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/postgrest-rb&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;postgrest-rb&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Rust&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/postgrest-rs&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;postgrest-rs&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
    &lt;td&gt;-&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Godot Engine (GDScript)&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/godot-engine.supabase&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;supabase-gdscript&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/postgrest-gdscript&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;postgrest-gdscript&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/gotrue-gdscript&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;gotrue-gdscript&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/realtime-gdscript&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;realtime-gdscript&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/storage-gdscript&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;storage-gdscript&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;https://github.com/supabase-community/functions-gdscript&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;functions-gdscript&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;!-- /notranslate --&gt;
&lt;/table&gt;

&lt;!--- Remove this list if you&#039;re translating to another language, it&#039;s hard to keep updated across multiple files--&gt;
&lt;!--- Keep only the link to the list of translation files--&gt;

## Badges

![Made with Supabase](./apps/www/public/badge-made-with-supabase.svg)

```md
[![Made with Supabase](https://supabase.com/badge-made-with-supabase.svg)](https://supabase.com)
```

```html
&lt;a href=&quot;https://supabase.com&quot;&gt;
  &lt;img
    width=&quot;168&quot;
    height=&quot;30&quot;
    src=&quot;https://supabase.com/badge-made-with-supabase.svg&quot;
    alt=&quot;Made with Supabase&quot;
  /&gt;
&lt;/a&gt;
```

![Made with Supabase (dark)](./apps/www/public/badge-made-with-supabase-dark.svg)

```md
[![Made with Supabase](https://supabase.com/badge-made-with-supabase-dark.svg)](https://supabase.com)
```

```html
&lt;a href=&quot;https://supabase.com&quot;&gt;
  &lt;img
    width=&quot;168&quot;
    height=&quot;30&quot;
    src=&quot;https://supabase.com/badge-made-with-supabase-dark.svg&quot;
    alt=&quot;Made with Supabase&quot;
  /&gt;
&lt;/a&gt;
```

## Translations

- [Arabic | العربية](/i18n/README.ar.md)
- [Albanian / Shqip](/i18n/README.sq.md)
- [Bangla / বাংলা](/i18n/README.bn.md)
- [Bulgarian / Български](/i18n/README.bg.md)
- [Catalan / Català](/i18n/README.ca.md)
- [Croatian / Hrvatski](/i18n/README.hr.md)
- [Czech / čeština](/i18n/README.cs.md)
- [Danish / Dansk](/i18n/README.da.md)
- [Dutch / Nederlands](/i18n/README.nl.md)
- [English](https://github.com/supabase/supabase)
- [Estonian / eesti keel](/i18n/README.et.md)
- [Finnish / Suomalainen](/i18n/README.fi.md)
- [French / Français](/i18n/README.fr.md)
- [German / Deutsch](/i18n/README.de.md)
- [Greek / Ελληνικά](/i18n/README.el.md)
- [Gujarati / ગુજરાતી](/i18n/README.gu.md)
- [Hebrew / עברית](/i18n/README.he.md)
- [Hindi / हिंदी](/i18n/README.hi.md)
- [Hungarian / Magyar](/i18n/README.hu.md)
- [Nepali / नेपाली](/i18n/README.ne.md)
- [Indonesian / Bahasa Indonesia](/i18n/README.id.md)
- [Italiano / Italian](/i18n/README.it.md)
- [Japanese / 日本語](/i18n/README.jp.md)
- [Korean / 한국어](/i18n/README.ko.md)
- [Lithuanian / lietuvių](/i18n/README.lt.md)
- [Latvian / latviski](/i18n/README.lv.md)
- [Malay / Bahasa Malaysia](/i18n/README.ms.md)
- [Norwegian (Bokmål) / Norsk (Bokmål)](/i18n/README.nb.md)
- [Persian / فارسی](/i18n/README.fa.md)
- [Polish / Polski](/i18n/README.pl.md)
- [Portuguese / Português](/i18n/README.pt.md)
- [Portuguese (Brazilian) / Português Brasileiro](/i18n/README.pt-br.md)
- [Romanian / Română](/i18n/README.ro.md)
- [Russian / Pусский](/i18n/README.ru.md)
- [Serbian / Srpski](/i18n/README.sr.md)
- [Sinhala / සිංහල](/i18n/README.si.md)
- [Slovak / slovenský](/i18n/README.sk.md)
- [Slovenian / Slovenščina](/i18n/README.sl.md)
- [Spanish / Español](/i18n/README.es.md)
- [Simplified Chinese / 简体中文](/i18n/README.zh-cn.md)
- [Swedish / Svenska](/i18n/README.sv.md)
- [Thai / ไทย](/i18n/README.th.md)
- [Traditional Chinese / 繁體中文](/i18n/README.zh-tw.md)
- [Turkish / Türkçe](/i18n/README.tr.md)
- [Ukrainian / Українська](/i18n/README.uk.md)
- [Vietnamese / Tiếng Việt](/i18n/README.vi-vn.md)
- [List of translations](/i18n/languages.md) &lt;!--- Keep only this --&gt;
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[modelcontextprotocol/servers]]></title>
            <link>https://github.com/modelcontextprotocol/servers</link>
            <guid>https://github.com/modelcontextprotocol/servers</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:53 GMT</pubDate>
            <description><![CDATA[Model Context Protocol Servers]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/modelcontextprotocol/servers">modelcontextprotocol/servers</a></h1>
            <p>Model Context Protocol Servers</p>
            <p>Language: TypeScript</p>
            <p>Stars: 71,734</p>
            <p>Forks: 8,594</p>
            <p>Stars today: 58 stars today</p>
            <h2>README</h2><pre># Model Context Protocol servers

This repository is a collection of *reference implementations* for the [Model Context Protocol](https://modelcontextprotocol.io/) (MCP), as well as references to community-built servers and additional resources.

The servers in this repository showcase the versatility and extensibility of MCP, demonstrating how it can be used to give Large Language Models (LLMs) secure, controlled access to tools and data sources.
Typically, each MCP server is implemented with an MCP SDK:

- [C# MCP SDK](https://github.com/modelcontextprotocol/csharp-sdk)
- [Go MCP SDK](https://github.com/modelcontextprotocol/go-sdk)
- [Java MCP SDK](https://github.com/modelcontextprotocol/java-sdk)
- [Kotlin MCP SDK](https://github.com/modelcontextprotocol/kotlin-sdk)
- [PHP MCP SDK](https://github.com/modelcontextprotocol/php-sdk)
- [Python MCP SDK](https://github.com/modelcontextprotocol/python-sdk)
- [Ruby MCP SDK](https://github.com/modelcontextprotocol/ruby-sdk)
- [Rust MCP SDK](https://github.com/modelcontextprotocol/rust-sdk)
- [Swift MCP SDK](https://github.com/modelcontextprotocol/swift-sdk)
- [TypeScript MCP SDK](https://github.com/modelcontextprotocol/typescript-sdk)

&gt; [!NOTE]
&gt; Lists in this README are maintained in alphabetical order to minimize merge conflicts when adding new items.

## 🌟 Reference Servers

These servers aim to demonstrate MCP features and the official SDKs.

- **[Everything](src/everything)** - Reference / test server with prompts, resources, and tools.
- **[Fetch](src/fetch)** - Web content fetching and conversion for efficient LLM usage.
- **[Filesystem](src/filesystem)** - Secure file operations with configurable access controls.
- **[Git](src/git)** - Tools to read, search, and manipulate Git repositories.
- **[Memory](src/memory)** - Knowledge graph-based persistent memory system.
- **[Sequential Thinking](src/sequentialthinking)** - Dynamic and reflective problem-solving through thought sequences.
- **[Time](src/time)** - Time and timezone conversion capabilities.

### Archived

The following reference servers are now archived and can be found at [servers-archived](https://github.com/modelcontextprotocol/servers-archived).

- **[AWS KB Retrieval](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/aws-kb-retrieval-server)** - Retrieval from AWS Knowledge Base using Bedrock Agent Runtime.
- **[Brave Search](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/brave-search)** - Web and local search using Brave&#039;s Search API.  Has been replaced by the [official server](https://github.com/brave/brave-search-mcp-server).
- **[EverArt](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/everart)** - AI image generation using various models.
- **[GitHub](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/github)** - Repository management, file operations, and GitHub API integration.
- **[GitLab](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/gitlab)** - GitLab API, enabling project management.
- **[Google Drive](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/gdrive)** - File access and search capabilities for Google Drive.
- **[Google Maps](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/google-maps)** - Location services, directions, and place details.
- **[PostgreSQL](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/postgres)** - Read-only database access with schema inspection.
- **[Puppeteer](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/puppeteer)** - Browser automation and web scraping.
- **[Redis](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/redis)** - Interact with Redis key-value stores.
- **[Sentry](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/sentry)** - Retrieving and analyzing issues from Sentry.io.
- **[Slack](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/slack)** - Channel management and messaging capabilities. Now maintained by [Zencoder](https://github.com/zencoderai/slack-mcp-server)
- **[SQLite](https://github.com/modelcontextprotocol/servers-archived/tree/main/src/sqlite)** - Database interaction and business intelligence capabilities.

## 🤝 Third-Party Servers

### 🎖️ Official Integrations

Official integrations are maintained by companies building production ready MCP servers for their platforms.

- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.21st.dev/favicon.ico&quot; alt=&quot;21st.dev Logo&quot; /&gt; **[21st.dev Magic](https://github.com/21st-dev/magic-mcp)** - Create crafted UI components inspired by the best 21st.dev design engineers.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.2slides.com/images/2slides-red.svg&quot; alt=&quot;2slides Logo&quot; /&gt; **[2slides](https://github.com/2slides/2slides-mcp)** - An MCP server that provides tools to convert content into slides/PPT/presentation or generate slides/PPT/presentation with user intention.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://framerusercontent.com/images/LpSK1tSZweomrAHOMAj9Gea96lA.svg&quot; alt=&quot;Paragon Logo&quot; /&gt; **[ActionKit by Paragon](https://github.com/useparagon/paragon-mcp)** - Connect to 130+ SaaS integrations (e.g. Slack, Salesforce, Gmail) with Paragon’s [ActionKit](https://www.useparagon.com/actionkit) API.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://invoxx-public-bucket.s3.eu-central-1.amazonaws.com/frontend-resources/adfin-logo-small.svg&quot; alt=&quot;Adfin Logo&quot; /&gt; **[Adfin](https://github.com/Adfin-Engineering/mcp-server-adfin)** - The only platform you need to get paid - all payments in one place, invoicing and accounting reconciliations with [Adfin](https://www.adfin.com/).
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://github.com/AgentOps-AI/agentops/blob/main/docs/favicon.png&quot; alt=&quot;AgentOps Logo&quot; /&gt; **[AgentOps](https://github.com/AgentOps-AI/agentops-mcp)** - Provide observability and tracing for debugging AI agents with [AgentOps](https://www.agentops.ai/) API.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.agentql.com/favicon/favicon.png&quot; alt=&quot;AgentQL Logo&quot; /&gt; **[AgentQL](https://github.com/tinyfish-io/agentql-mcp)** - Enable AI agents to get structured data from unstructured web with [AgentQL](https://www.agentql.com/).
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://agentrpc.com/favicon.ico&quot; alt=&quot;AgentRPC Logo&quot; /&gt; **[AgentRPC](https://github.com/agentrpc/agentrpc)** - Connect to any function, any language, across network boundaries using [AgentRPC](https://www.agentrpc.com/).
- **[Agentset](https://github.com/agentset-ai/mcp-server)** - RAG for your knowledge base connected to [Agentset](https://agentset.ai).
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://aiven.io/favicon.ico&quot; alt=&quot;Aiven Logo&quot; /&gt; **[Aiven](https://github.com/Aiven-Open/mcp-aiven)** - Navigate your [Aiven projects](https://go.aiven.io/mcp-server) and interact with the PostgreSQL®, Apache Kafka®, ClickHouse® and OpenSearch® services
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.alation.com/resource-center/download/7p3vnbbznfiw/34FMtBTex5ppvs2hNYa9Fc/c877c37e88e5339878658697c46d2d58/Alation-Logo-Bug-Primary.svg&quot; alt=&quot;Alation Logo&quot; /&gt; **[Alation](https://github.com/Alation/alation-ai-agent-sdk)** - Unlock the power of the enterprise Data Catalog by harnessing tools provided by the Alation MCP server.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://i.postimg.cc/5NYw9qjS/alby-icon-head-yellow-500x500.png&quot; alt=&quot;Alby Logo&quot; /&gt; **[Alby Bitcoin Payments](https://github.com/getAlby/mcp)** - Connect any bitcoin lightning wallet to your agent to send and receive instant payments globally with your agent.
- **[Algolia](https://github.com/algolia/mcp)** - Use AI agents to provision, configure, and query your [Algolia](https://algolia.com) search indices.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://img.alicdn.com/imgextra/i4/O1CN01epkXwH1WLAXkZfV6N_!!6000000002771-2-tps-200-200.png&quot; alt=&quot;Alibaba Cloud AnalyticDB for MySQL Logo&quot; /&gt; **[Alibaba Cloud AnalyticDB for MySQL](https://github.com/aliyun/alibabacloud-adb-mysql-mcp-server)** - Connect to an [AnalyticDB for MySQL](https://www.alibabacloud.com/en/product/analyticdb-for-mysql) cluster for getting database or table metadata, querying and analyzing data. It will be supported to add the OpenAPI for cluster operation in the future.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://github.com/aliyun/alibabacloud-adbpg-mcp-server/blob/master/images/AnalyticDB.png&quot; alt=&quot;Alibaba Cloud AnalyticDB for PostgreSQL Logo&quot; /&gt; **[Alibaba Cloud AnalyticDB for PostgreSQL](https://github.com/aliyun/alibabacloud-adbpg-mcp-server)** - An MCP server to connect to [AnalyticDB for PostgreSQL](https://github.com/aliyun/alibabacloud-adbpg-mcp-server) instances, query and analyze data.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://img.alicdn.com/imgextra/i3/O1CN0101UWWF1UYn3rAe3HU_!!6000000002530-2-tps-32-32.png&quot; alt=&quot;DataWorks Logo&quot; /&gt; **[Alibaba Cloud DataWorks](https://github.com/aliyun/alibabacloud-dataworks-mcp-server)** - A Model Context Protocol (MCP) server that provides tools for AI, allowing it to interact with the [DataWorks](https://www.alibabacloud.com/help/en/dataworks/) Open API through a standardized interface. This implementation is based on the Alibaba Cloud Open API and enables AI agents to perform cloud resources operations seamlessly.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://opensearch-shanghai.oss-cn-shanghai.aliyuncs.com/ouhuang/aliyun-icon.png&quot; alt=&quot;Alibaba Cloud OpenSearch Logo&quot; /&gt; **[Alibaba Cloud OpenSearch](https://github.com/aliyun/alibabacloud-opensearch-mcp-server)** - This MCP server equips AI Agents with tools to interact with [OpenSearch](https://help.aliyun.com/zh/open-search/?spm=5176.7946605.J_5253785160.6.28098651AaYZXC) through a standardized and extensible interface.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://github.com/aliyun/alibaba-cloud-ops-mcp-server/blob/master/image/alibaba-cloud.png&quot; alt=&quot;Alibaba Cloud OPS Logo&quot; /&gt; **[Alibaba Cloud OPS](https://github.com/aliyun/alibaba-cloud-ops-mcp-server)** - Manage the lifecycle of your Alibaba Cloud resources with [CloudOps Orchestration Service](https://www.alibabacloud.com/en/product/oos) and Alibaba Cloud OpenAPI.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://github.com/aliyun/alibabacloud-rds-openapi-mcp-server/blob/main/assets/alibabacloudrds.png&quot; alt=&quot;Alibaba Cloud RDS MySQL Logo&quot; /&gt; **[Alibaba Cloud RDS](https://github.com/aliyun/alibabacloud-rds-openapi-mcp-server)** - An MCP server designed to interact with the Alibaba Cloud RDS OpenAPI, enabling programmatic management of RDS resources via an LLM.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.alipayplus.com/favicon.ico&quot; alt=&quot;AlipayPlus Logo&quot; /&gt; **[AlipayPlus](https://github.com/alipay/global-alipayplus-mcp)** - Connect your AI Agents to AlipayPlus Checkout Payment.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://datalab.alkemi.ai/favicon.png&quot; alt=&quot;Alkemi Logo&quot; /&gt; **[Alkemi](https://github.com/alkemi-ai/alkemi-mcp)** - Query Snowflake, Google BigQuery, DataBricks Data Products through Alkemi.ai.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn.allvoicelab.com/resources/workbench/dist/icon-dark.ico&quot; alt=&quot;AllVoiceLab Logo&quot; /&gt; **[AllVoiceLab](https://www.allvoicelab.com/mcp)** - An AI voice toolkit with TTS, voice cloning, and video translation, now available as an MCP server for smarter agent integration.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://files.alpaca.markets/webassets/favicon-32x32.png&quot; alt=&quot;Alpaca Logo&quot; /&gt; **[Alpaca](https://github.com/alpacahq/alpaca-mcp-server)** – Alpaca&#039;s MCP server lets you trade stocks and options, analyze market data, and build strategies through [Alpaca&#039;s Trading API](https://alpaca.markets/)
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.alphavantage.co/logo.png/&quot; alt=&quot;AlphaVantage Logo&quot; /&gt; **[AlphaVantage](https://mcp.alphavantage.co/)** - Connect to 100+ APIs for financial market data, including stock prices, fundamentals, and more from [AlphaVantage](https://www.alphavantage.co)
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://alttester.com/app/themes/alttester-sage-theme/public/images/logo-alttester.038ec8.png&quot; alt=&quot;AltTester Logo&quot; /&gt; **[AltTester®](https://alttester.com/docs/desktop/latest/pages/ai-extension.html)** - Use AltTester® capabilities to connect and test your Unity or Unreal game. Write game test automation faster and smarter, using [AltTester](https://alttester.com) and the AltTester® MCP server. 
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.antom.com/favicon.ico&quot; alt=&quot;Antom Logo&quot; /&gt; **[Antom](https://github.com/alipay/global-antom-mcp)** - Connect your AI Agents to Antom Checkout Payment.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://developers.anytype.io/img/favicon.ico&quot; alt=&quot;Anytype Logo&quot; /&gt; **[Anytype](https://github.com/anyproto/anytype-mcp)** - An MCP server enabling AI assistants to interact with [Anytype](https://anytype.io) - a local and collaborative wiki - to organize objects, lists, and more through natural language.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://doris.apache.org/images/favicon.ico&quot; alt=&quot;Apache Doris Logo&quot; /&gt; **[Apache Doris](https://github.com/apache/doris-mcp-server)** - MCP Server For [Apache Doris](https://doris.apache.org/), an MPP-based real-time data warehouse.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://iotdb.apache.org/img/logo.svg&quot; alt=&quot;Apache IoTDB Logo&quot; /&gt; **[Apache IoTDB](https://github.com/apache/iotdb-mcp-server)** - MCP Server for [Apache IoTDB](https://github.com/apache/iotdb) database and its tools
- **[Apache Pinot](https://github.com/startreedata/mcp-pinot)** – MCP server for running real - time analytics queries on Apache Pinot, an open-source OLAP database built for high-throughput, low-latency powering real-time applications.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://apify.com/favicon.ico&quot; alt=&quot;Apify Logo&quot; /&gt; **[Apify](https://github.com/apify/apify-mcp-server)** - Use 6,000+ pre-built cloud tools to extract data from websites, e-commerce, social media, search engines, maps, and more
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://2052727.fs1.hubspotusercontent-na1.net/hubfs/2052727/cropped-cropped-apimaticio-favicon-1-32x32.png&quot; alt=&quot;APIMatic Logo&quot; /&gt; **[APIMatic MCP](https://github.com/apimatic/apimatic-validator-mcp)** - APIMatic MCP Server is used to validate OpenAPI specifications using [APIMatic](https://www.apimatic.io/). The server processes OpenAPI files and returns validation summaries by leveraging APIMatic&#039;s API.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://apollo-server-landing-page.cdn.apollographql.com/_latest/assets/favicon.png&quot; alt=&quot;Apollo Graph Logo&quot; /&gt; **[Apollo MCP Server](https://github.com/apollographql/apollo-mcp-server/)** - Connect your GraphQL APIs to AI agents
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://developer.aqara.com/favicon.ico&quot; alt=&quot;Aqara Logo&quot; /&gt; **[Aqara MCP Server](https://github.com/aqara/aqara-mcp-server/)** - Control  [Aqara](https://www.aqara.com/) smart home devices, query status, execute scenes, and much more using natural language.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://media.licdn.com/dms/image/v2/C4D0BAQEeD7Dxbpadkw/company-logo_200_200/company-logo_200_200/0/1644692667545/archbee_logo?e=2147483647&amp;v=beta&amp;t=lTi9GRIoqzG6jN3kJC26uZWh0q3uiQelsH6mGoq_Wfw&quot; alt=&quot;Archbee Logo&quot; /&gt; **[Archbee](https://www.npmjs.com/package/@archbee/mcp)** - Write and publish documentation that becomes the trusted source for instant answers with AI. Stop cobbling tools and use [Archbee](https://www.archbee.com/) — the first complete documentation platform.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://phoenix.arize.com/wp-content/uploads/2023/04/cropped-Favicon-32x32.png&quot; alt=&quot;Arize-Phoenix Logo&quot; /&gt; **[Arize Phoenix](https://github.com/Arize-ai/phoenix/tree/main/js/packages/phoenix-mcp)** - Inspect traces, manage prompts, curate datasets, and run experiments using [Arize Phoenix](https://github.com/Arize-ai/phoenix), an open-source AI and LLM observability tool.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://731523176-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FaVUBXRZbpAgtjYf5HsvO%2Fuploads%2FaRRrVVocXCTr6GkepfCx%2Flogo_color.svg?alt=media&amp;token=3ba24089-0ab2-421f-a9d9-41f2f94f954a&quot; alt=&quot;Armor Logo&quot; /&gt; **[Armor Crypto MCP](https://github.com/armorwallet/armor-crypto-mcp)** - MCP to interface with multiple blockchains, staking, DeFi, swap, bridging, wallet management, DCA, Limit Orders, Coin Lookup, Tracking and more.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://console.asgardeo.io/app/libs/themes/wso2is/assets/images/branding/favicon.ico&quot; alt=&quot;Asgardeo Logo&quot; /&gt; **[Asgardeo](https://github.com/asgardeo/asgardeo-mcp-server)** - MCP server to interact with your [Asgardeo](https://wso2.com/asgardeo) organization through LLM tools.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.datastax.com/favicon-32x32.png&quot; alt=&quot;DataStax logo&quot; /&gt; **[Astra DB](https://github.com/datastax/astra-db-mcp)** - Comprehensive tools for managing collections and documents in a [DataStax Astra DB](https://www.datastax.com/products/datastax-astra) NoSQL database with a full range of operations such as create, update, delete, find, and associated bulk actions.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn.prod.website-files.com/66598898fd13d51606c3215d/66ccbfef13bd8bc19d587578_favicon-32x32.png&quot; alt=&quot;Atla Logo&quot; /&gt; **[Atla](https://github.com/atla-ai/atla-mcp-server)** - Enable AI agents to interact with the [Atla API](https://docs.atla-ai.com/) for state-of-the-art LLMJ evaluation.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://assets.atlan.com/assets/atlan-a-logo-blue-background.png&quot; alt=&quot;Atlan Logo&quot; /&gt; **[Atlan](https://github.com/atlanhq/agent-toolkit/tree/main/modelcontextprotocol)** - The Atlan Model Context Protocol server allows you to interact with the [Atlan](https://www.atlan.com/) services through multiple tools.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://www.atlassian.com/favicon.ico&quot; alt=&quot;Atlassian Logo&quot; /&gt; **[Atlassian](https://www.atlassian.com/platform/remote-mcp-server)** - Securely interact with Jira work items and Confluence pages, and search across both.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://res.oafimg.cn/-/737b3b3ffed9b19e/logo.png&quot; alt=&quot;AtomGit Logo&quot; /&gt; **[AtomGit](https://atomgit.com/atomgit-open-source-ecosystem/atomgit-mcp-server)** - Official AtomGit server for integration with repository management, PRs, issues, branches, labels, and more.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://resources.audiense.com/hubfs/favicon-1.png&quot; alt=&quot;Audiense Logo&quot; /&gt; **[Audiense Insights](https://github.com/AudienseCo/mcp-audiense-insights)** - Marketing insights and audience analysis from [Audiense](https://www.audiense.com/products/audiense-insights) reports, covering demographic, cultural, influencer, and content engagement analysis.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn.auth0.com/website/website/favicons/auth0-favicon.svg&quot; alt=&quot;Auth0 Logo&quot; /&gt; **[Auth0](https://github.com/auth0/auth0-mcp-server)** - MCP server for interacting with your Auth0 tenant, supporting creating and modifying actions, applications, forms, logs, resource servers, and more.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://firstorder.ai/favicon_auth.ico&quot; alt=&quot;Authenticator App Logo&quot; /&gt; **[Authenticator App · 2FA](https://github.com/firstorderai/authenticator_mcp)** - A secure MCP (Model Context Protocol) server that enables AI agents to interact with the Authenticator App.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://a0.awsstatic.com/libra-css/images/site/fav/favicon.ico&quot; alt=&quot;AWS Logo&quot; /&gt; **[AWS](https://github.com/awslabs/mcp)** -  Specialized MCP servers that bring AWS best practices directly to your development workflow.
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://axiom.co/favicon.ico&quot; alt=&quot;Axiom Logo&quot; /&gt; **[Axiom](https://github.com/axiomhq/mcp-server-axiom)** - Query and analyze your Axiom logs, traces, and all other event data in natural language
- &lt;img height=&quot;12&quot; width=&quot;12&quot; src=&quot;https://cdn-dynmedia-1.microsoft.com/is/content/microsoftcorp/acom_social_icon_azure&quot; alt=&quot;Microsoft Az

... [README content truncated due to size. Visit the repository for the complete README] ...</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[richards199999/Thinking-Claude]]></title>
            <link>https://github.com/richards199999/Thinking-Claude</link>
            <guid>https://github.com/richards199999/Thinking-Claude</guid>
            <pubDate>Sun, 02 Nov 2025 00:52:52 GMT</pubDate>
            <description><![CDATA[Let your Claude able to think]]></description>
            <content:encoded><![CDATA[
            <h1><a href="https://github.com/richards199999/Thinking-Claude">richards199999/Thinking-Claude</a></h1>
            <p>Let your Claude able to think</p>
            <p>Language: TypeScript</p>
            <p>Stars: 16,315</p>
            <p>Forks: 1,929</p>
            <p>Stars today: 13 stars today</p>
            <h2>README</h2><pre># Thinking Claude

Let Claude think comprehensively before responding!

&gt; **A super quick reminder:**
&gt; Thinking claude **is not aimed for benchmarks or huge leaps in math or something**, since those are pre-determined by the base model (new Claude-3.5 Sonnet).
&gt; I only want to explore how further we could reach with Claude&#039;s &quot;deep mindset&quot;. That said, when using it in your daily tasks, you will find Claude&#039;s inner monolog (thinking process) very very fun and interesting.

## Demo

&gt; It is supposed to work on both `Free` and `Pro` versions of [Claude Web App](https://claude.ai/) with `Claude 3.5 Sonnet` model.

Here is a demo of using the latest [Thinking Cluade Chrome extension](https://github.com/richards199999/Thinking-Claude/releases/download/chrome-extension-v3.2.3/thinking-claude-chrome-extension-v3.2.3.zip) (click to download v3.2.3 ) installed in Chrome with the chat of Claude (check [Browser Extension](https://github.com/richards199999/Thinking-Claude?tab=readme-ov-file#browser-extension) for more) featured with an instruction selector:

https://github.com/user-attachments/assets/afa0f64f-53e5-45bc-9ad8-0641b29d2b77

use in project with legacy extension:

https://github.com/user-attachments/assets/88ff0c75-c51b-42b9-a042-00d47053795a

## Overview

This project consists of two main components:

1. **Thinking Protocol**: A comprehensive set of instructions that guides Claude to think deeply and systematically before responding
2. **Browser Extension**: A tool that makes Claude&#039;s thinking process more readable and manageable in the browser interface

## Project Structure

```bash
thinking-claude/
├── extensions/
│   ├── chrome/          # Current version of Chrome extension
│   ├── chrome_v0/       # Legacy Chrome extension (deprecated)
│   ├── firefox/         # Firefox extension (in development)
│   └── changelog.md
├── model_instructions/
│   ├── changelog.md
│   ├── v5.1-extensive-20241201.md
│   ├── v5.1-20241125.md
│   ├── v5-lite-20241124.md
│   ├── v4-20241118.md
│   ├── v4-lite-20241118.md
│   └── v3.5-20241113.md
├── .github/             # GitHub configurations and workflows
├── .husky/             # Git hooks for development
├── LICENSE
└── README.md
```

The project is organized into two main components:

- `extensions/`: Browser extension implementations

  - `chrome/`: Current version with modern architecture and features
  - `chrome_v0/`: Legacy version (deprecated)
  - `firefox/`: Firefox version (in development)

- `model_instructions/`: Thinking protocols for different versions
  - Contains versioned instruction sets
  - Each version brings improvements to Claude&#039;s thinking process

## Thinking Protocol

The thinking protocol instructs Claude to follow a natural, thorough thought process before providing responses.

## Browser Extension

The browser extension makes Claude&#039;s thinking process easier to read and use! It automatically organizes Claude&#039;s thoughts into neat, collapsible sections.

### Features

- 🎯 Makes Claude&#039;s thinking process easy to read
- 🔄 Fold and unfold different parts of Claude&#039;s thoughts
- 📋 Copy any part with just one click
- ⚡ Works automatically with new messages
- 🎨 Clean, modern design that&#039;s easy on the eyes

### 🚀 Quick Install Guide

1. **Chrome Users (May be Outdated)**

   - Install directly from the [Chrome Web Store](https://chromewebstore.google.com/detail/thinking-claude/ncjafpbbndpggfhfgjngkcimeaciahpo)

2. **Manual Installation（Recommended - latest v3.2.3）**
   - Download the latest version from our [Releases Page](https://github.com/richards199999/Thinking-Claude/releases)
   - Unzip the file
   - Open Chrome and go to `chrome://extensions/`
   - Turn on &quot;Developer mode&quot; (top right corner)
   - Click &quot;Load unpacked&quot; and select the unzipped folder `dist`

👉 Want more details? Check out our [Extension Guide](extensions/chrome/README.md) for:

- Step-by-step installation instructions
- Development setup
- Advanced features and usage
- Troubleshooting tips

### 🎉 Getting Started

Once installed, just:

1. Visit [Claude.ai](https://claude.ai)
2. Click on the `Choose style` selector in the bottom of input box -&gt; click on `Create &amp; Edit Styles` -&gt; click on `Create Custom Style` -&gt; click on `Describe style manually` -&gt; click on `Start from scratch` -&gt; click on `Use custom instructions (advanced)` -&gt; paste the content of the desired instruction set from `model_instructions/` folder
3. Start chatting with Claude
4. That&#039;s it! The extension will automatically make Claude&#039;s thinking process more readable

## Why Use Thinking Claude?

- **Better Reasoning**: Get more thorough and well-thought-out responses
- **Transparency**: See how Claude arrives at its conclusions
- **Improved Organization**: Manage long conversations more effectively
- **Quality Control**: Benefit from built-in verification steps

## Contributing

Contributions are welcome! Feel free to:

- Submit bug reports
- Propose new features
- Create pull requests

## License

MIT License - feel free to use and modify as needed.

## Acknowledgments

Special thanks to [@lumpinif](https://github.com/lumpinif) and Claude for the extension!
</pre>
          ]]></content:encoded>
            <category>TypeScript</category>
        </item>
    </channel>
</rss>